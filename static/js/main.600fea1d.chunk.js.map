{"version":3,"sources":["components/ItemSelector/styles/CategorizedMenuGroup.module.css","components/Item/styles/DeleteItemButton.module.css","components/FilterBar/styles/FilterBar.module.css","api/metadata.js","modules/itemTypes.js","components/Item/ListItem/Item.module.css","components/ControlBar/styles/DashboardItemChip.module.css","components/TitleBar/styles/EditTitleBar.module.css","components/TitleBar/styles/ViewTitleBar.module.css","reducers/user.js","modules/uiBackendItemConverter.js","reducers/dashboards.js","reducers/editDashboard.js","reducers/editItemFilters.js","reducers/selected.js","actions/editItemFilters.js","reducers/itemFilters.js","actions/itemFilters.js","reducers/messages.js","api/messages.js","reducers/snackbar.js","actions/snackbar.js","reducers/visualizations.js","actions/visualizations.js","api/index.js","api/dashboards.js","components/SnackbarMessage/SnackbarMessage.js","actions/selected.js","api/localStorage.js","components/Item/MessagesItem/actions.js","api/editDashboard.js","actions/editDashboard.js","actions/dashboards.js","reducers/controlBar.js","api/controlBar.js","actions/controlBar.js","reducers/dimensions.js","reducers/settings.js","actions/dimensions.js","components/ControlBar/ShowMoreButton.js","components/ControlBar/controlBarDimensions.js","components/ControlBar/ControlBar.js","icons/Star.js","api/dataStatistics.js","components/ControlBar/DashboardItemChip.js","icons/AddCircle.js","icons/Clear.js","components/ControlBar/ClearButton.js","reducers/dashboardsFilter.js","components/ControlBar/Filter.js","components/ControlBar/DashboardsBar.js","actions/dashboardsFilter.js","components/Dashboard/DashboardVerticalOffset.js","components/ItemSelector/HeaderMenuItem.js","icons/Launch.js","components/ItemSelector/ContentMenuItem.js","components/ItemSelector/selectableItems.js","components/ItemSelector/CategorizedMenuGroup.js","components/ItemSelector/actions.js","components/ItemSelector/SinglesMenuGroup.js","components/ItemSelector/ItemSelector.js","components/TitleBar/EditTitleBar.js","components/ItemFilter/FilterDialog.js","reducers/activeModalDimension.js","actions/activeModalDimension.js","components/ItemFilter/FilterSelector.js","components/TitleBar/Info.js","components/TitleBar/ViewTitleBar.js","components/TitleBar/TitleBar.js","components/Item/VisualizationItem/DefaultPlugin.js","components/Item/VisualizationItem/assets/icons.js","components/Item/VisualizationItem/FatalErrorBoundary.js","components/Item/DeleteItemButton.js","components/Item/ItemHeader.js","components/Item/VisualizationItem/ItemHeaderButtons.js","components/Item/VisualizationItem/ItemFooter.js","modules/memoizeOne.js","components/Item/VisualizationItem/LoadingMask.js","components/Item/VisualizationItem/Item.js","widgets/Line.js","components/Item/MessagesItem/Item.js","components/Item/NotSupportedItem/Item.js","icons/Description.js","icons/Delete.js","components/Item/ListItem/Item.js","components/Item/ListItem/actions.js","components/Item/TextItem/Item.js","components/Item/AppItem/Item.js","components/Item/SpacerItem/Item.js","components/Item/Item.js","widgets/NoContentMessage.js","components/Item/ProgressiveLoadingContainer.js","components/ItemGrid/ItemGrid.js","components/FilterBar/FilterBadge.js","components/FilterBar/FilterBar.js","components/Dashboard/DashboardContent.js","components/Dashboard/ViewDashboard.js","components/ControlBar/ConfirmDeleteDialog.js","components/ControlBar/EditBar.js","components/Dashboard/EditDashboard.js","components/Dashboard/NewDashboard.js","components/Dashboard/Dashboard.js","components/Dashboard/dashboardModes.js","components/App.js","actions/user.js","locales/index.js","reducers/style.js","reducers/index.js","configureStore.js","index.js","components/ControlBar/styles/DashboardsBar.module.css","components/ItemSelector/styles/ContentMenuItem.module.css","components/Item/styles/ItemHeader.module.css","modules/util.js","components/ControlBar/styles/ControlBar.module.css","components/Item/VisualizationItem/styles/FatalErrorBoundary.module.css","components/Item/VisualizationItem/styles/Item.module.css","components/ControlBar/styles/ShowMoreButton.module.css","components/ControlBar/styles/ClearButton.module.css","components/ControlBar/styles/Filter.module.css","components/Item/VisualizationItem/styles/LoadingMask.module.css","components/Item/VisualizationItem/plugin.js","components/ItemGrid/gridUtil.js"],"names":["module","exports","showMoreButton","deleteItemButton","bar","getIdNameFields","rename","arguments","length","undefined","concat","getDimensionFields","_ref2","withItems","arrayClean","join","getAxesFields","_ref3","getFavoriteFields","_ref4","withDimensions","withOptions","getFavoritesFields","_ref5","Object","_home_travis_build_dhis2_dashboards_app_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_toConsumableArray__WEBPACK_IMPORTED_MODULE_0__","getListItemFields","getMapFields","apiFetchFavorite","id","type","_ref6","fields","getInstance","then","d2","Api","getApi","get","getEndPointName","VISUALIZATION","REPORT_TABLE","CHART","MAP","EVENT_REPORT","EVENT_CHART","APP","REPORTS","RESOURCES","USERS","MESSAGES","TEXT","SPACER","isVisualizationType","item","itemTypeMap","hasMapView","itemType","domainType","isTrackerDomainType","getDefaultItemCount","defaultItemCount","getAppName","appName","_itemTypeMap","_home_travis_build_dhis2_dashboards_app_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_defineProperty__WEBPACK_IMPORTED_MODULE_0__","endPointName","propName","pluralTitle","i18n","t","appUrl","getItemUrl","url","launchUrl","getBaseUrl","getItemIcon","TableIcon","ChartIcon","MapIcon","ExtensionIcon","DescriptionIcon","PersonIcon","FontDownloadIcon","EmailIcon","CropFreeIcon","NotInterestedIcon","list","itemicon","link","deleteicon","deletebutton","chip","icon","selected","unselected","section","titleDescription","title","description","itemSelector","actions","editLink","titleBar","titleBarIcon","DEFAULT_STATE_USER","username","uiLocale","isSuperuser","sGetUserUsername","state","user","spacerContent","isTextType","text","convertUiItemsToBackend","items","map","isUiSpacerType","objectSpread","convertBackendItemsToUi","isBackendSpacerType","gridProperties","getGridItemProperties","DEFAULT_STATE_DASHBOARDS","byId","updateDashboardProp","_ref","dashboardId","prop","value","defineProperty","sGetDashboardsRoot","dashboards","sGetDashboardById","orObject","sDashboardsIsFetching","sGetAllDashboards","sGetDashboardItems","sGetStarredDashboards","values","filter","dashboard","starred","sGetUnstarredDashboards","sGetDashboardsSortedByStarred","toConsumableArray","arraySort","getCustomDashboards","data","arrayFrom","d","name","displayName","displayDescription","favorite","owner","created","split","substr","lastUpdated","access","numberOfItems","orArray","dashboardItems","DEFAULT_STATE_EDIT_DASHBOARD","NEW_DASHBOARD_STATE","sGetEditDashboardRoot","editDashboard","sGetIsEditing","isEmpty","sGetEditDashboardItems","DEFAULT_STATE_EDIT_ITEM_FILTERS","sGetEditItemFiltersRoot","editItemFilters","combineReducers","action","validateReducer","isLoading","showDescription","sGetSelectedRoot","sGetSelectedId","sGetSelectedIsLoading","sGetSelectedShowDescription","acRemoveEditItemFilter","DEFAULT_STATE_ITEM_FILTERS","sGetItemFiltersRoot","itemFilters","sGetFiltersKeys","keys","acRemoveItemFilter","sGetMessagesRoot","messages","getMessages","catch","error","console","log","DEFAULT_STATE_SNACKBAR","message","duration","open","acCloseSnackbar","DEFAULT_STATE_VISUALIZATIONS","p","sGetVisualization","visualizations","sGetVisualizationsRoot","acAddVisualization","onError","getDashboardItemsFields","withFavorite","getDashboardFields","apiFetchDashboard","models","apiStarDashboard","isStarred","post","delete","apiDeleteDashboard","loadingDashboardMsg","SnackbarMessageContent","react_default","a","createElement","style","fontWeight","connect","_sGetSnackbar","snackbar","sGetSnackbar","snackbarOpen","snackbarMessage","snackbarDuration","onCloseSnackbar","props","Snackbar_default","zIndex","SnackbarMessage_SnackbarMessageContent","autoHideDuration","onClose","acSetSelectedId","acSetSelectedIsLoading","tLoadDashboard","asyncToGenerator","regenerator_default","mark","_callee","dispatch","dash","wrap","_context","prev","next","sent","acAppendDashboards","abrupt","Promise","resolve","t0","stop","_x","apply","this","tSetSelectedDashboardById","_callee2","getState","snackbarTimeout","onSuccess","_context2","setTimeout","dashboardName","customDashboard","acSetDashboardItems","withShape","localStorage","setItem","forEach","extractFavorite","messageConversations","filters","clearTimeout","_x2","_x3","saveDashboard","assign","width","w","height","h","save","msg","response","uid","updateDashboard","postDashboard","create","acAddDashboardItem","itemPropName","generateUid","gridItemProperties","content","NEW_ITEM_SHAPE","acUpdateDashboardItem","acRemoveDashboardItem","arrayToIdMap","acSetDashboardStarred","tFetchDashboards","collection","paging","toArray","userRows","sGetControlBarUserRows","controlBar","sGetControlBarRoot","KEY","hasNamespace","currentUser","dataStore","has","getNamespace","apiGetControlBarRows","_callee3","namespace","_context3","t1","t2","find","key","apiPostControlBarRows","_callee4","rows","_context4","set","_x4","_x5","acSetControlBarUserRows","DEFAULT_DIMENSIONS","getDimensionById","DIMENSION_ID_PERIOD","DIMENSION_ID_ORGUNIT","sGetDimensions","dimensions","DEFAULT_SETTINGS","keyDateFormat","keyAnalysisRelativePeriod","keyAnalysisDigitGroupSeparator","displayNameProperty","rootOrganisationUnit","sGetSettings","settings","sGetSettingsDisplayNameProperty","acSetDimensions","ShowMoreButton","onClick","isMaxHeight","disabled","textAlign","className","classes","showMore","MIN_ROW_COUNT","getRowsHeight","getNumRowsFromHeight","Math","floor","FIRST_ROW_PADDING_HEIGHT","getTopOffset","getControlBarHeight","ControlBar","_this","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","onStartDrag","setState","dragging","window","addEventListener","onDrag","onEndDrag","event","preventDefault","stopPropagation","newHeight","clientY","onChangeHeight","requestAnimationFrame","removeEventListener","draghandle","onMouseDown","max","rootStyle","top","backgroundColor","editMode","colors","yellow050","white","paddingBottom","transition","root","children","renderDragHandle","React","Component","defaultProps","StarIcon","xmlns","viewBox","fill","apiPostDataStatistics","eventType","DashboardItemChip","label","chipProps","selectedState","Star","react_router_dom","to","debounce","lib","AddCircleIcon","teal600","ClearIcon","grey800","ClearButton","onClear","button","Clear","color","ownerData","DEFAULT_STATE_DASHBOARDS_FILTER_NAME","DEFAULT_STATE_DASHBOARDS_FILTER_OWNER","order","sGetDashboardsFilterRoot","dashboardsFilter","sGetFilterName","KEYCODE_ENTER","KEYCODE_ESCAPE","Filter","_Component","setFilterValue","onChangeName","target","handleKeyUp","keyCode","onKeypressEnter","inherits","createClass","nextProps","_this$props","startAdornment","InputAdornment_default","position","Search_default","searchIcon","endAdornment","ControlBar_ClearButton","Input_default","filterField","placeholder","onChange","onKeyUp","Function","prototype","MAX_ROW_COUNT","DashboardsBar","_getPrototypeOf2","_len","args","Array","_key","setInitialDashboardState","adjustedHeight","newRows","newRowCount","min","onToggleMaxHeight","onSelectDashboard","history","push","selectedId","onChangeFilterName","rowCount","controlBarHeight","contentWrapperStyle","padding","overflowY","components_ControlBar_ControlBar","leftControls","display","textDecoration","marginRight","AddCircle","ControlBar_Filter","ControlBar_DashboardItemChip","ControlBar_ShowMoreButton","mapDispatchToProps","withRouter","stateProps","dispatchProps","ownProps","displayDashboards","toLowerCase","includes","marginTop","HeaderMenuItem","dense","LaunchIcon","grey600","LaunchLink","e","launchLink","rel","href","Launch","InsertButton","buttonInsert","ContentMenuItem","onInsert","visType","ItemIcon","renderedItemIcon","visTypeIcons","menuItem","ContentMenuItem_LaunchLink","ContentMenuItem_InsertButton","singleItems","header","categorizedItems","listItemTypes","CategorizedMenuGroup","addItem","tAddListItemContent","newItem","toggleSeeMore","seeMore","onChangeItemsLimit","_this2","_this$props2","hasMore","Fragment","ItemSelector_HeaderMenuItem","itemUrl","context","ItemSelector_ContentMenuItem","margin","contextTypes","PropTypes","object","isRequired","dashboardItem","listItemType","dashboardItemIndex","findIndex","category","addToDashboard","ItemSearchField","onFocus","ItemSelector","closeList","openList","_","fetchItems","anchorEl","currentTarget","setFilter","getCategorizedMenuGroups","itemCount","allItems","maxOptions","slice","ItemSelector_CategorizedMenuGroup","getSinglesMenuGroups","ItemSelector_SinglesMenuGroup","getMenuGroups","queryString","add","Set","ItemSelector_ItemSearchField","Popover_default","anchorOrigin","horizontal","vertical","transformOrigin","PaperProps","disableAutoFocus","disableEnforceFocus","disableRestoreFocus","maxWidth","EditTitleBar","onChangeTitle","onChangeDescription","components_ItemSelector_ItemSelector","selectedDashboard","peId","ouId","FilterDialog","onConfirm","dimension","selectedItems","dialogId","commonProps","onSelect","onDeselect","onReorder","build_es_lib","selectedPeriods","ouItems","dialogTitle","Dialog_default","dialogContent","DialogActions_default","kind","DEFAULT_STATE_ACTIVE_MODAL_DIMENSION","sGetActiveModalDimension","activeModalDimension","acSetActiveModalDimension","FilterSelector","openPanel","closePanel","closeDialog","clearActiveModalDimension","selectDimension","setActiveModalDimension","onSelectItems","dimensionId","setEditItemFilters","onDeselectItems","itemIdsToRemove","newList","removeEditItemFilter","onReorderItems","itemIds","oldList","reorderedList","saveFilter","filterItems","addItemFilter","removeItemFilter","selectedDimensions","ArrowDropDown_default","Boolean","onDimensionClick","selectedIds","ItemFilter_FilterDialog","Info","show","toggle","InfoOutlined_default","NO_DESCRIPTION","ViewTitleBar","toggleSharingDialog","sharingDialogIsOpen","onStarClick","onInfoClick","titleStyle","cursor","userSelect","StarBorder","TitleBar_Info","marginLeft","update","manage","ItemFilter_FilterSelector","paddingTop","d2_ui_sharing_dialog_default","onRequestClose","tStarDashboard","fontSize","black","minWidth","TitleBar","edit","TitleBar_EditTitleBar","TitleBar_ViewTitleBar","DefaultPlugin","pluginCredentials","shouldPluginReload","prevProps","reloadAllowed","filtersChanged","vis","visualization","prevVis","visChanged","activeType","reloadPlugin","pluginManager","currentVis","useActiveType","credentials","getActiveType","baseUrl","auth","defaultHeaders","Authorization","getGridItemDomId","textDiv","ThreeDots","SpeechBubble","fillRule","transform","Warning","FatalErrorBoundary","errorFound","info","container","icons_Warning","DeleteItemButton","Delete_default","red500","HEADER_MARGIN_HEIGHT","ItemHeader","forwardRef","ref","itemId","actionButtons","itemHeaderWrap","itemTitle","itemActionsWrap","Item_DeleteItemButton","iconFill","ItemHeaderButtons","_useState","useState","_useState2","slicedToArray","setAnchorEl","onSelectActiveType","isTrackerType","onViewTable","handleClose","onViewChart","onViewMap","canViewAs","isSingleValue","isYearOverYear","VIS_TYPE_GAUGE","VIS_TYPE_PIE","interpretationMenuLabel","activeFooter","pluginIsAvailable","small","secondary","icons_ThreeDots","InsertChart_default","ViewList_default","Public_default","Launch_default","getLink","icons_SpeechBubble","onToggleFooter","scrollContainer","line","border","grey100","ItemFooter","objectId","getId","d2_ui_interpretations_default","memoizeOne","fn","lastArgs","lastValue","every","arg","i","CircularIndeterminate","outer","CircularProgress_default","progress","Item","showFooter","configLoaded","pluginIsLoaded","applyFilters","visRows","obj","visColumns","columns","visFilters","dimensionFound","dimensionObjects","getUniqueKey","uniqueId","getPluginComponent","memoizedGetVisualizationConfig","calculatedHeight","originalHeight","headerRef","current","clientHeight","ITEM_CONTENT_PADDING_BOTTOM","memoizedGetContentStyle","contentRef","offsetHeight","loadingCover","LoadingMask","data_visualizer_plugin_build_es_lib","memoizedApplyFilters","onLoadingComplete","forDashboard","hideTitle","mapViews","layer","VisualizationItem_DefaultPlugin","onToggleItemExpanded","getContentStyle","measuredHeight","createRef","getVisualizationConfig","_componentDidMount","onVisualizationLoaded","prevState","VisualizationItem_ItemHeaderButtons","Item_ItemHeader","VisualizationItem_FatalErrorBoundary","VisualizationItem_ItemFooter","acSetActiveVisualizationType","grey200","Line","PRIVATE","messageTypes","_messageTypes","listStyleType","paddingLeft","seeAll","marginBottom","sender","lineHeight","snippet","maxHeight","overflow","MessagesItem","getMessageHref","msgIdentifier","messageType","getMessageSender","latestMsg","getMessageItems","editClass","readClass","read","msgDate","document","location","messageCount","formatDate","userSettings","widgets_Line","string","MessagesContainer","NotSupportedItem","justifyContent","alignItems","NotInterested_default","align","grey500","DeleteIcon","getItemTitle","ListItem","tRemoveListItemContent","contentItems","index","array","el","getContentItems","contentItem","Description","deleteButton","icons_Delete","grey900","newContent","whiteSpace","textField","fontStretch","onChangeText","updatedItem","d2_ui_rich_text","onEdit","multiline","fullWidth","textDivStyle","viewItem","getIframeSrc","appDetails","iframeSrc","ouIds","ouPath","AppItem","appKey","system","installedApps","app","src","SpacerItem","GridItem","VisualizationItem","TextItem","getGridItem","NoContentMessage","ProgressiveLoadingContainer","shouldLoad","containerRef","shouldLoadHandler","bufferPx","bufferFactor","innerHeight","rect","getBoundingClientRect","bottom","removeHandler","checkShouldLoad","debounceMs","registerHandler","_this3","objectWithoutProperties","eventProps","pick","EXPANDED_HEIGHT","ItemGrid","expandedItems","clickedId","isExpanded","onRemoveItem","onLayoutChange","newLayout","acUpdateDashboardLayout","onResizeStop","layout","oldItem","onItemResize","pluginResize","onRemoveItemWrapper","adjustHeightForExpanded","expandedItem","getItemComponent","itemClassNames","Item_ProgressiveLoadingContainer","Item_Item_Item","getItemComponents","widgets_NoContentMessage","react_grid_layout_default","MARGIN","cols","getGridColumns","rowHeight","GRID_ROW_HEIGHT","innerWidth","compactType","GRID_COMPACT_TYPE","isDraggable","isResizable","draggableCancel","validItems","hasShape","styles","badgeContainer","borderRadius","badge","badgeRemove","FilterBadge","onRemove","count","FilterBar","onBadgeRemove","onBadgeClick","FilterBar_FilterBadge","removeItemFIlter","filtersSelector","createSelector","reduce","arr","DashboardContent","components_TitleBar_TitleBar","components_FilterBar_FilterBar","components_ItemGrid_ItemGrid","Content","hasDashboardContent","dashboardsIsEmpty","Dashboard_DashboardContent","dashboardsLoaded","contentNotReady","ControlBar_DashboardsBar","Dashboard_DashboardVerticalOffset","ViewDashboard_Content","ConfirmDeleteDialog","onDeleteConfirmed","onContinueEditing","destructive","DialogTitle_default","DialogContent_default","DialogContentText_default","buttonBarStyle","EditBar","translationDialogIsOpen","dashboardModel","confirmDeleteDialogOpen","redirectUrl","onConfirmDelete","onSave","newId","onDiscard","onDiscardChanges","onDelete","onTranslationsSaved","translations","dbLocale","translation","locale","property","onTranslate","fetchDashboardModel","toggleTranslationDialog","confirmDeleteDialog","deleteAccess","ControlBar_ConfirmDeleteDialog","translationDialog","d2_ui_translation_dialog_default","objectToTranslate","fieldsToTranslate","onTranslationSaved","onTranslationError","err","react_router","updateAccess","discardBtnText","primary","rightControls","sGetIsNewDashboard","dashboardToSave","tDeleteDashboard","acSetDashboardDisplayName","EditDashboard","initialized","initEditDashboard","setEditDashboard","getDashboardContent","EditDashboard_Content","ControlBar_EditBar","NewDashboard","setNewDashboard","Dashboard","setDashboard","match","params","selectDashboard","scrollToTop","scrollTo","mode","Dashboard_EditDashboard","Dashboard_NewDashboard","Dashboard_ViewDashboard","dashboardToSelect","preferredId","getItem","App","setCurrentUser","fetchDashboards","setControlBarRows","setDimensions","spacers","es_lib","exact","path","render","components_Dashboard_Dashboard","components_SnackbarMessage_SnackbarMessage","childContextTypes","controlBarRows","displayNameProp","filteredDimensions","apiFetchDimensions","dim","dimensionType","dataDimensionType","tSetDimensions","moment","addResources","arTranslations","daTranslations","enTranslations","esTranslations","frTranslations","idTranslations","kmTranslations","loTranslations","myTranslations","prsTranslations","psTranslations","ptTranslations","pt_BRTranslations","ruTranslations","svTranslations","tetTranslations","tgTranslations","ukTranslations","urTranslations","viTranslations","zhTranslations","zh_CNTranslations","setDefaultNamespace","changeLanguage","objectClean","conversations","$merge","d2Object","keyUiLocale","authorities","newState","k","$unshift","idToRemove","$splice","stateItems","layoutHasChanged","newStateItems","x","y","stateItem","si","configureStore","middleware","thunk","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","createStore","reducer","applyMiddleware","configI18n","config","sources","manifest","isProd","getManifest","version","manifest_generated_at","process","activities","dhis","dhis2","apiVersion","headers","schemas","getUserSettings","d2Init","initializedD2","ReactDOM","build_es","es","store","theme","createMuiTheme","dhis2theme","src_components_App","getElementById","init","itemWrap","param","isArray","isObject","global","Intl","DateTimeFormat","year","month","day","format","Date","replace","defaultValue","api","idx","indexOf","getWithoutId","_home_travis_build_dhis2_dashboards_app_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectSpread__WEBPACK_IMPORTED_MODULE_0__","itemTypeToExternalPlugin","_itemTypeToExternalPl","_home_travis_build_dhis2_dashboards_app_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_defineProperty__WEBPACK_IMPORTED_MODULE_3__","getPlugin","hasIntegratedPlugin","reportTable","chart","eventReport","eventChart","loadPlugin","plugin","load","loadingIndicator","getName","_home_travis_build_dhis2_dashboards_app_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_asyncToGenerator__WEBPACK_IMPORTED_MODULE_2__","_home_travis_build_dhis2_dashboards_app_node_modules_babel_preset_react_app_node_modules_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default","_home_travis_build_dhis2_dashboards_app_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectSpread__WEBPACK_IMPORTED_MODULE_1__","fetch","fetchedFavorite","resize","unmount","originalType","extractedMapView","mv","VIS_TYPE_COLUMN","VIS_TYPE_PIVOT_TABLE","__webpack_require__","__webpack_exports__","d2_utilizr_lib_isFunction__WEBPACK_IMPORTED_MODULE_0__","d2_utilizr_lib_isFunction__WEBPACK_IMPORTED_MODULE_0___default","n","_modules_util__WEBPACK_IMPORTED_MODULE_1__","isNonNegativeInteger","Number","isInteger","minH","itemWithShape","Error","col","row","itemWidth","itemHeight","getShape","round","getOriginalHeight","querySelector","isFunction","setViewportSize","clientWidth"],"mappings":"8EACAA,EAAAC,QAAA,CAAkBC,eAAA,oECAlBF,EAAAC,QAAA,CAAkBE,iBAAA,kECAlBH,EAAAC,QAAA,CAAkBG,IAAA,k/wDCKLC,EAAkB,eAAGC,GAAHC,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAc,IAAXD,OAAH,MAAqB,CAChD,KADgD,GAAAI,OAE7CJ,EAAS,2BAA6B,sBAWhCK,EAAqB,SAAAC,GAAA,IAAGC,EAAHD,EAAGC,UAAH,OAC9BC,IAAW,CACP,YACA,gBACA,SACA,eACAD,EAAS,SAAAH,OAbkB,CAC/B,2BACA,2BACA,qBAUyCK,KAAK,KAAjC,WAIJC,EAAgB,SAAAC,GAAA,IAAGJ,EAAHI,EAAGJ,UAAH,MAAmB,YAAAH,OACjCC,EAAmB,CAAEE,cAAaE,KAAK,KADN,aAAAL,OAEpCC,EAAmB,CAAEE,cAAaE,KAAK,KAFH,gBAAAL,OAGjCC,EAAmB,CAAEE,cAAaE,KAAK,KAHN,OAOnCG,EAAoB,SAAAC,GAAqC,IAAlCC,EAAkCD,EAAlCC,eAAgBC,EAAkBF,EAAlBE,YAChD,OAAOP,IAAW,IAAAJ,OACXL,EAAgB,CAAEC,QAAQ,IAAQS,KAAK,MAC1C,yCACAK,EAAc,GAAAV,OAAMM,EAAc,CAAEH,WAAW,IAAQE,KAAK,MAA9C,GACdM,EACM,CACI,IACA,uBACA,mBACA,YACA,sBACA,oCACA,oBACA,sBACA,yBACA,iCACA,oBACA,8BACA,iBACA,sCACA,0BACA,qBACA,8BACA,mBACA,gBACA,iBACA,UACA,gBACA,wBACA,gCACA,sCACFN,KAAK,KACP,MAIDO,EAAqB,SAAAC,GAAA,IAAGH,EAAHG,EAAGH,eAAH,MAAwB,gBAAAV,OACvCQ,EAAkB,CAAEE,mBAAkBL,KAAK,KADJ,cAAAL,OAE7C,CAAC,QAADA,OAAAc,OAAAC,EAAA,EAAAD,CAAYN,EAAkB,CAAEE,qBAAmBL,KAAK,KAFX,YAAAL,OAG/CQ,EAAkB,CAAEE,mBAAkBL,KAAK,KAHI,oBAAAL,OAIvCQ,EAAkB,CAAEE,mBAAkBL,KAAK,KAJJ,mBAAAL,OAKxCQ,EAAkB,CAAEE,mBAAkBL,KAAK,KALH,OAS7CW,EAAoB,iBAAM,YAAAhB,OACxBL,EAAgB,CAAEC,QAAQ,IAAQS,KAAK,KADf,kBAAAL,OAEtBL,EAAgB,CAAEC,QAAQ,IAAQS,KAAK,KAFjB,cAAAL,OAG1BL,EAAgB,CAAEC,QAAQ,IAAQS,KAAK,KAHb,OAO1BY,EAAe,iBAAM,IAAAjB,OAC3BL,EAAgB,CAAEC,QAAQ,IAAQS,KAAK,MAC1C,uCAF8B,YAAAL,OAGlBQ,EAAkB,CAC1BE,gBAAgB,EAChBC,aAAa,IALa,OAYrBO,EAAmB,SAACC,EAAIC,EAALC,GAAA,IAAaC,EAAbD,EAAaC,OAAb,OAC5BC,wBAAcC,KAAK,SAAAC,GAAE,OACjBA,EAAGC,IAAIC,SAASC,IAAhB,GAAA5B,OAAuB6B,YAAgBT,GAAvC,KAAApB,OAAgDmB,GAAM,CAClDG,OACIA,GACAd,EAAkB,CACdE,gBAAgB,EAChBC,aAAa,k+BC7FpBmB,EAAgB,gBAChBC,EAAe,eACfC,EAAQ,QACRC,EAAM,MACNC,EAAe,eACfC,EAAc,cACdC,EAAM,MACNC,EAAU,UACVC,EAAY,YACZC,EAAQ,QACRC,EAAW,WACXC,EAAO,OACPC,EAAS,SAMTC,EAAsB,SAAAC,GAAI,QACjCC,EAAYD,EAAKxB,MAAMuB,qBAChBG,EAAa,SAAAC,GAAQ,MANJ,cAO1BF,EAAYE,GAAUC,YACbC,EAAsB,SAAAF,GAAQ,MAPf,YAQxBF,EAAYE,GAAUC,YACbE,EAAsB,SAAAH,GAAQ,OACvCF,EAAYE,GAAUI,kBAAoB,GACjCC,EAAa,SAAAL,GAAQ,OAAIF,EAAYE,GAAUM,SAAW,IAG1DR,GAAWS,EAAA,GAAAxC,OAAAyC,EAAA,EAAAzC,CAAAwC,EACnBxB,EAAgB,CACbX,GAAIW,EACJ0B,aAAc,iBACdC,SAAU,gBACVC,YAAaC,IAAKC,EAAE,kBACpBC,OAAQ,SAAA1C,GAAE,oCAAAnB,OAAkCmB,IAC5CkC,QAAS,kBACTF,iBAAkB,KARFrC,OAAAyC,EAAA,EAAAzC,CAAAwC,EAUnBvB,EAAe,CACZZ,GAAIY,EACJyB,aAAc,iBACdC,SAAU,gBACVC,YAAaC,IAAKC,EAAE,gBACpBZ,WA9BsB,YA+BtBL,qBAAqB,EACrBkB,OAAQ,SAAA1C,GAAE,oCAAAnB,OAAkCmB,IAC5CkC,QAAS,oBAlBOvC,OAAAyC,EAAA,EAAAzC,CAAAwC,EAoBnBtB,EAAQ,CACLb,GAAIa,EACJwB,aAAc,iBACdC,SAAU,gBACVC,YAAaC,IAAKC,EAAE,UACpBZ,WAxCsB,YAyCtBL,qBAAqB,EACrBkB,OAAQ,SAAA1C,GAAE,oCAAAnB,OAAkCmB,IAC5CkC,QAAS,oBA5BOvC,OAAAyC,EAAA,EAAAzC,CAAAwC,EA8BnBrB,EAAM,CACHd,GAAIc,EACJuB,aAAc,OACdC,SAAU,MACVC,YAAaC,IAAKC,EAAE,QACpBZ,WAlDsB,YAmDtBL,qBAAqB,EACrBkB,OAAQ,SAAA1C,GAAE,2BAAAnB,OAAyBmB,IACnCkC,QAAS,SAtCOvC,OAAAyC,EAAA,EAAAzC,CAAAwC,EAwCnBpB,EAAe,CACZf,GAAIe,EACJsB,aAAc,eACdC,SAAU,cACVC,YAAaC,IAAKC,EAAE,iBACpBZ,WA3DoB,UA4DpBL,qBAAqB,EACrBkB,OAAQ,SAAA1C,GAAE,oCAAAnB,OAAkCmB,IAC5CkC,QAAS,kBAhDOvC,OAAAyC,EAAA,EAAAzC,CAAAwC,EAkDnBnB,EAAc,CACXhB,GAAIgB,EACJqB,aAAc,cACdC,SAAU,aACVC,YAAaC,IAAKC,EAAE,gBACpBZ,WArEoB,UAsEpBL,qBAAqB,EACrBkB,OAAQ,SAAA1C,GAAE,uCAAAnB,OAAqCmB,IAC/CkC,QAAS,qBA1DOvC,OAAAyC,EAAA,EAAAzC,CAAAwC,EA4DnBlB,EAAM,CACHoB,aAAc,OACdC,SAAU,SACVC,YAAaC,IAAKC,EAAE,UA/DJ9C,OAAAyC,EAAA,EAAAzC,CAAAwC,EAiEnBjB,EAAU,CACPlB,GAAIkB,EACJmB,aAAc,UACdC,SAAU,UACVC,YAAaC,IAAKC,EAAE,WACpBC,OAAQ,SAAA1C,GAAE,iDAAAnB,OAA+CmB,MAtEzCL,OAAAyC,EAAA,EAAAzC,CAAAwC,EAwEnBhB,EAAY,CACTnB,GAAImB,EACJkB,aAAc,YACdC,SAAU,YACVC,YAAaC,IAAKC,EAAE,aACpBC,OAAQ,SAAA1C,GAAE,uBAAAnB,OAAqBmB,EAArB,YA7EML,OAAAyC,EAAA,EAAAzC,CAAAwC,EA+EnBf,EAAQ,CACLpB,GAAIoB,EACJiB,aAAc,QACdC,SAAU,QACVC,YAAaC,IAAKC,EAAE,SACpBC,OAAQ,SAAA1C,GAAE,0DAAAnB,OAAwDmB,MApFlDL,OAAAyC,EAAA,EAAAzC,CAAAwC,EAsFnBb,EAAO,CACJtB,GAAIsB,EACJgB,SAAU,SAxFM3C,OAAAyC,EAAA,EAAAzC,CAAAwC,EA0FnBd,EAAW,CACRiB,SAAU,aA3FM3C,OAAAyC,EAAA,EAAAzC,CAAAwC,EA6FnBZ,EAAS,CACNe,SAAU,SA9FMH,GAkGXzB,EAAkB,SAAAT,GAAI,OAAIyB,EAAYzB,GAAMoC,cAE5CM,EAAa,SAAC1C,EAAMwB,EAAMnB,GACnC,IAAIsC,EAUJ,OARI3C,IAASgB,IACT2B,EAAMnB,EAAKoB,WAGXnB,EAAYzB,IAASyB,EAAYzB,GAAMyC,SACvCE,EAAG,GAAA/D,OAAMiE,YAAWxC,GAAjB,KAAAzB,OAAwB6C,EAAYzB,GAAMyC,OAAOjB,EAAKzB,MAGtD4C,GAGEG,EAAc,SAAA9C,GACvB,OAAQA,GACJ,KAAKW,EACL,KAAKG,EACL,KAAKG,EACD,OAAO8B,IACX,KAAKnC,EACL,KAAKG,EACD,OAAOiC,IACX,KAAKnC,EACD,OAAOoC,IACX,KAAKjC,EACD,OAAOkC,IACX,KAAKhC,EACD,OAAOiC,IACX,KAAKhC,EACD,OAAOiC,IACX,KAAK/B,EACD,OAAOgC,IACX,KAAKjC,EACD,OAAOkC,IACX,KAAKhC,EACD,OAAOiC,IACX,QACI,OAAOC,kDCrLnBtF,EAAAC,QAAA,CAAkBsF,KAAA,mBAAAjC,KAAA,mBAAAkC,SAAA,uBAAAC,KAAA,mBAAAC,WAAA,yBAAAC,aAAA,+FCAlB3F,EAAAC,QAAA,CAAkB2F,KAAA,gCAAAH,KAAA,gCAAAI,KAAA,gCAAAC,SAAA,oCAAAC,WAAA,4DCAlB/F,EAAAC,QAAA,CAAkB+F,QAAA,8BAAAC,iBAAA,uCAAAC,MAAA,4BAAAC,YAAA,kCAAAC,aAAA,yDCAlBpG,EAAAC,QAAA,CAAkBoG,QAAA,8BAAAC,SAAA,+BAAAC,SAAA,+BAAAC,aAAA,4VCCLC,EAAqB,CAC9B5E,GAAI,GACJ6E,SAAU,GACVC,SAAU,GACVC,aAAa,GAwBV,IACMC,EAAmB,SAAAC,GAAK,OAAIA,EAAMC,KAAKL,+FC5BvCM,EAAgB,+CAMvBC,EAAa,SAAA3D,GAAI,OAAIA,EAAKxB,OAASqB,KAAQG,EAAK4D,OAASF,GAElDG,EAA0B,SAAAC,GAAK,OACxCA,EAAMC,IAAI,SAAA/D,GACN,IAAI4D,EAAO,KAOX,OAZe,SAAA5D,GAAI,OAAIA,EAAKxB,OAASsB,IAMjCkE,CAAehE,GAER2D,EAAW3D,KAClB4D,EAAO5D,EAAK4D,MAbY,6BAWxBA,EAAOF,EAKJxF,OAAA+F,EAAA,EAAA/F,CAAA,GACA8B,EACC4D,EAAO,CAAEA,QAAS,OAIrBM,EAA0B,SAAAJ,GAAK,OACxCA,EAAMC,IAAI,SAAA/D,GACN,IAAMxB,EAtBc,SAAAwB,GAAI,OAC5BA,EAAKxB,OAASqB,KAAQG,EAAK4D,OAASF,EAqBnBS,CAAoBnE,GAAQF,IAASE,EAAKxB,KACjD4F,EAAiBC,YAAsBrE,EAAKzB,IAE5CqF,EAAOD,EAAW3D,GA3BI,8BA4BtBA,EAAK4D,KACD,GACA5D,EAAK4D,KACT,KAEN,OAAO1F,OAAA+F,EAAA,EAAA/F,CAAA,GACA8B,EACU,OAAT4D,EAAgB,CAAEA,QAAS,GAFnC,CAGIpF,QACG4F,MC3BFE,EAA2B,CACpCC,KAAM,KACNT,MAAO,IAKLU,EAAsB,SAAAC,GAAA,IAAGjB,EAAHiB,EAAGjB,MAAOkB,EAAVD,EAAUC,YAAaC,EAAvBF,EAAuBE,KAAMC,EAA7BH,EAA6BG,MAA7B,MAA0C,CAClEL,KAAKrG,OAAA+F,EAAA,EAAA/F,CAAA,GACEsF,EAAMe,KADTrG,OAAA2G,EAAA,EAAA3G,CAAA,GAECwG,EAFDxG,OAAA+F,EAAA,EAAA/F,CAAA,GAGOsF,EAAMe,KAAKG,GAHlBxG,OAAA2G,EAAA,EAAA3G,CAAA,GAIKyG,EAAOC,MAGhBd,MAAON,EAAMM,QAwDJgB,EAAqB,SAAAtB,GAAK,OAAIA,EAAMuB,YAiBpCC,EAAoB,SAACxB,EAAOjF,GAAR,OAC7B0G,YAASH,EAAmBtB,GAAOe,MAAMhG,IAEhC2G,EAAwB,SAAA1B,GACjC,OAA0C,OAAnCsB,EAAmBtB,GAAOe,MAUxBY,EAAoB,SAAA3B,GAAK,OAClCyB,YAASH,EAAmBtB,GAAOe,OAS1Ba,EAAqB,SAAA5B,GAAK,OAAIsB,EAAmBtB,GAAOM,OAIxDuB,EAAwB,SAAA7B,GAAK,OACtCtF,OAAOoH,OAAOH,EAAkB3B,IAAQ+B,OACpC,SAAAC,GAAS,OAA0B,IAAtBA,EAAUC,WAGlBC,EAA0B,SAAAlC,GAAK,OACxCtF,OAAOoH,OAAOH,EAAkB3B,IAAQ+B,OACpC,SAAAC,GAAS,OAA0B,IAAtBA,EAAUC,WAYlBE,GAAgC,SAAAnC,GAAK,SAAApG,OAAAc,OAAA0H,EAAA,EAAA1H,CAC3C2H,IAAUR,EAAsB7B,GAAQ,MAAO,gBADJtF,OAAA0H,EAAA,EAAA1H,CAE3C2H,IAAUH,EAAwBlC,GAAQ,MAAO,kBAW3CsC,GAAsB,SAAAC,GAAI,OACnCC,IAAUD,GAAMhC,IAAI,SAAAkC,GAAC,MAAK,CACtB1H,GAAI0H,EAAE1H,GACN2H,KAAMD,EAAEC,KACRC,YAAaF,EAAEE,YACftD,YAAaoD,EAAEpD,YACfuD,mBAAoBH,EAAEG,mBACtBX,QAASQ,EAAEI,SACXC,MAAOL,EAAExC,KAAKyC,KACdK,QAASN,EAAEM,QACNC,MAAM,KACN/I,KAAK,KACLgJ,OAAO,EAAG,IACfC,YAAaT,EAAES,YACVF,MAAM,KACN/I,KAAK,KACLgJ,OAAO,EAAG,IACfE,OAAQV,EAAEU,OACVC,cAAeC,YAAQZ,EAAEa,gBAAgB5J,OACzC4J,eAAgB5C,EAAwB+B,EAAEa,8DCtKrCC,GAA+B,GAC/BC,GAAsB,CAC/BzI,GAAI,GACJ2H,KAAM,GACNS,OAAQ,GACR9D,YAAa,GACbiE,eAAgB,IA0GPG,GAAwB,SAAAzD,GAAK,OAAIA,EAAM0D,eAIvCC,GAAgB,SAAA3D,GAAK,OAAK4D,KAAQ5D,EAAM0D,gBAQxCG,GAAyB,SAAA7D,GAAK,OACvCyB,YAASgC,GAAsBzD,IAAQsD,gBCxI9BQ,GAAkC,GAwBlCC,GAA0B,SAAA/D,GAAK,OAAIA,EAAMgE,2BC2BvCC,gBAAgB,CAC3BlJ,GArCO,WAA+C,IAA9CiF,EAA8CvG,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAVjB,KAUMyK,EAAWzK,UAAAC,OAAA,EAAAD,UAAA,QAAAE,EACtD,OAAQuK,EAAOlJ,MACX,IAhBuB,kBAiBnB,OAAOmJ,YAAgBD,EAAO9C,MAbD,MAcjC,QACI,OAAOpB,IAiCfoE,UA7Bc,WAAsD,IAArDpE,EAAqDvG,UAAAC,OAAA,QAAAC,IAAAF,UAAA,IAAAA,UAAA,GAAXyK,EAAWzK,UAAAC,OAAA,EAAAD,UAAA,QAAAE,EACpE,OAAQuK,EAAOlJ,MACX,IAxB8B,yBAyB1B,OAAOmJ,YACHD,EAAO9C,OAtByB,GAyBxC,QACI,OAAOpB,IAsBfqE,gBAlBoB,WAGnB,IAFDrE,EAECvG,UAAAC,OAAA,QAAAC,IAAAF,UAAA,IAAAA,UAAA,GADDyK,EACCzK,UAAAC,OAAA,EAAAD,UAAA,QAAAE,EACD,OAAQuK,EAAOlJ,MACX,IAtCoC,+BAuChC,OAAOmJ,YACHD,EAAO9C,OApC+B,GAuC9C,QACI,OAAOpB,MAYNsE,GAAmB,SAAAtE,GAAK,OAAIA,EAAMhB,UAElCuF,GAAiB,SAAAvE,GAAK,OAAIsE,GAAiBtE,GAAOjF,IAElDyJ,GAAwB,SAAAxE,GAAK,OAAIsE,GAAiBtE,GAAOoE,WAEzDK,GAA8B,SAAAzE,GAAK,OAC5CsE,GAAiBtE,GAAOqE,iBC9DfK,GAAyB,SAAA3J,GAAE,MAAK,CACzCC,KFRmC,0BESnCD,OCLS4J,GAA6B,GA8B7BC,GAAsB,SAAA5E,GAAK,OAAIA,EAAM6E,aAErCC,GAAkB,SAAA9E,GAAK,OAAItF,OAAOqK,KAAKH,GAAoB5E,KCrB3DgF,GAAqB,SAAAjK,GAAE,MAAK,CACrCC,KDd8B,qBCe9BD,OCGSkK,GAAmB,SAAAjF,GAAK,OAAIA,EAAMkF,UCnBlCC,GAAc,WACvB,IAEMxH,EAAG,gCAAA/D,OADL,qHACK,gCACT,OAAOuB,wBACFC,KAAK,SAAAC,GAAE,OAAIA,EAAGC,IAAIC,SAASC,IAAImC,KAC/ByH,MAAM,SAAAC,GAAK,OAAIC,QAAQC,IAAI,SAAUF,MCLjCG,GAAyB,CAClCC,QAAS,GACTC,SAAU,KACVC,MAAM,GCIGC,GAAkB,iBAAO,CAClC5K,KDV0B,wCEOjB6K,GAA+B,GAEtCjC,GAAU,SAAAkC,GAAC,YAAUnM,IAANmM,GAAyB,OAANA,GAqC3BC,GAAoB,SAAC/F,EAAOjF,GACrC,OAJkC,SAAAiF,GAAK,OAAIA,EAAMgG,eAI1CC,CAAuBjG,GAAOjF,IC3C5BmL,GAAqB,SAAA9E,GAAK,MAAK,CACxCpG,KDD6B,oBCE7BoG,yCCES+E,GAAU,SAAAd,GAAK,OAAIC,QAAQC,IAAI,UAAWF,IAG1Ce,GAA0B,eAAGC,GAAH5M,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAoB,IAAjB4M,aAAH,OACnCrM,KAAW,CACP,KACA,OACA,QACA,IACA,IACA,kBACA,mBACA,WACA,OACA,SAVO,GAAAJ,OAWJgB,eAAoBX,KAAK,MAC5BoM,EAAY,GAAAzM,OACHY,aAAmB,CAClBF,eAAgB+L,EAAa/L,iBAC9BL,KAAK,MAHF,MAQPqM,GAAqB,eAAAxM,EAAAL,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAA+B,GAA5BM,EAAHD,EAAGC,UAAWsM,EAAdvM,EAAcuM,aAAd,OAC9BrM,KAAW,IAAAJ,OACJL,eAAkBU,KAAK,MAC1B,cACA,qBACA,WAJO,QAAAL,OAKCL,aAAgB,CAAEC,QAAQ,IAAQS,KAAK,KALxC,KAMP,UACA,cACA,SACAF,EAAS,kBAAAH,OACewM,GAAwB,CACtCC,iBACDpM,KAAK,KAHL,WCxBJsM,GAAoB,SAAAxL,GAAE,OAC/BI,wBACKC,KAAK,SAAAC,GAAE,OACJA,EAAGmL,OAAOxE,UAAUxG,IAAIT,EAAI,CACxBG,OAAQlB,KACJsM,GAAmB,CACfvM,WAAW,EACXsM,aAAc,CAAE/L,gBAAgB,MAEtCL,KAAK,SAGdmL,MAAMe,KAGFM,GAAmB,SAAC1L,EAAI2L,GACjC,IAAM/I,EAAG,cAAA/D,OAAiBmB,EAAjB,aAETI,wBAAcC,KAAK,SAAAC,GACXqL,EACArL,EAAGC,IAAIC,SAASoL,KAAKhJ,GAErBtC,EAAGC,IAAIC,SAASqL,OAAOjJ,MAKtBkJ,GAAqB,SAAA9L,GAC9B,OAAOI,wBACFC,KAAK,SAAAC,GACF,OAAOA,EAAGmL,OAAOjF,WACZ/F,IAAIT,GACJK,KAAK,SAAA4G,GAAS,OAAIA,EAAU4E,aAEpCxB,MAAMe,2BC5CFW,GAAsB,CAAEpE,KAAM,GAAI1H,KADrB,qBAGpB+L,GAAyB,SAAA9F,GAAiB,IAAdwE,EAAcxE,EAAdwE,QAC9B,MAAuB,kBAAZA,EAGHuB,EAAAC,EAAAC,cAAA,uBACYF,EAAAC,EAAAC,cAAA,QAAMC,MAAO,CAAEC,WAAY,MAAQ3B,EAAQ/C,MAAa,IADpE,aAMD+C,GA+BI4B,eAhBS,SAAArH,GAAS,IAAAsH,ENZL,SAAAtH,GAAK,OAAIA,EAAMuH,UAAY/B,GMafgC,CAAaxH,GAAzCyF,EADqB6B,EACrB7B,QAASC,EADY4B,EACZ5B,SACjB,MAAO,CACH+B,aAHyBH,EACF3B,KAGvB+B,gBAAiBjC,EACjBkC,iBAAkBjC,IAatB,CACIkC,gBAAiBhC,IAHVyB,CA5BgB,SAAAQ,GAC3B,OACIb,EAAAC,EAAAC,cAACY,GAAAb,EAAD,CACIE,MAAO,CAAEY,OAAQ,OACjBpC,KAAMkC,EAAMJ,aACZhC,QAASuB,EAAAC,EAAAC,cAACc,GAAD,CAAwBvC,QAASoC,EAAMH,kBAChDO,iBAAkBJ,EAAMF,iBACxBO,QAASL,EAAMD,6BCOdO,GAAkB,SAAA/G,GAAK,MAAK,CACrCpG,KblC2B,kBamC3BoG,UAGSgH,GAAyB,SAAAhH,GAAK,MAAK,CAC5CpG,KbtCkC,yBauClCoG,UAQSiH,GAAiB,SAAAtN,GAAE,sBAAAkG,EAAAvG,OAAA4N,EAAA,EAAA5N,CAAA6N,EAAAtB,EAAAuB,KAAI,SAAAC,EAAMC,GAAN,IAAAC,EAAA,OAAAJ,EAAAtB,EAAA2B,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAF,EAAAC,KAAA,EAAAD,EAAAE,KAAA,EAETxC,GAAkBxL,GAFT,cAEtB4N,EAFsBE,EAAAG,KAI5BN,EAASO,GAAmBN,IAJAE,EAAAK,OAAA,SAMrBC,QAAQC,QAAQT,IANK,cAAAE,EAAAC,KAAA,EAAAD,EAAAQ,GAAAR,EAAA,SAQ5BvD,QAAQC,IAAI,UAAZsD,EAAAQ,IAR4BR,EAAAK,OAAA,SAAAL,EAAAQ,IAAA,yBAAAR,EAAAS,SAAAb,EAAA,iBAAJ,gBAAAc,GAAA,OAAAtI,EAAAuI,MAAAC,KAAAhQ,YAAA,IAcnBiQ,GAA4B,SAAA3O,GAAE,sBAAAjB,EAAAY,OAAA4N,EAAA,EAAA5N,CAAA6N,EAAAtB,EAAAuB,KAAI,SAAAmB,EAAOjB,EAAUkB,GAAjB,IAAAC,EAAAC,EAAA3D,EAAAnH,EAAA,OAAAuJ,EAAAtB,EAAA2B,KAAA,SAAAmB,GAAA,cAAAA,EAAAjB,KAAAiB,EAAAhB,MAAA,cAC3CL,EAASN,IAAuB,IAE1ByB,EAAkBG,WAAW,WAC/B,IAAMC,EAAgBxI,YAASD,EAAkBoI,IAAY7O,IACxD4H,YACD6B,GAAsBoF,MAAeK,IACrCnD,GAAoBpE,KAAOuH,EAE3BvB,ENvEuC,CAC/C1N,KDNqC,4BCOrCoG,MMsEsC,CACtBqE,QAASqB,GACTnB,MAAM,OAInB,KAEGmE,EAAY,SAAA9K,GACd,ICnFkCY,EAAUsB,EDmFtCgJ,EAAkB5H,GAAoBtD,GAAU,GAEtD0J,EACIyB,GAAoBC,YAAUF,EAAgB5G,kBCtFhB1D,EDyFRG,EAAiB6J,KCzFC1I,EDyFYnG,ECxF5DsP,aAAaC,QAAb,2BAAA1Q,OAAgDgG,GAAYsB,GD2FxDgJ,EAAgB5G,eAAeiH,QAAQ,SAAA/N,GACnC,OAAQA,EAAKxB,MACT,KAAKW,IACL,KAAKC,IACL,KAAKC,IACL,KAAKC,IACL,KAAKC,IACD2M,EAASxC,GAAmBsE,aAAgBhO,KAC5C,MACJ,KAAKJ,IACDsM,EE5FQ,eAAAzH,EAAAvG,OAAA4N,EAAA,EAAA5N,CAAA6N,EAAAtB,EAAAuB,KAAM,SAAAC,EAAMC,GAAN,IAAAxD,EAAAuF,EAAA,OAAAlC,EAAAtB,EAAA2B,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAF,EAAAC,KAAA,EAAAD,EAAAE,KAAA,EAEH5D,KAFG,cAEpBD,EAFoB2D,EAAAG,KAGlByB,EAAyBvF,EAAzBuF,qBAHkB5B,EAAAK,OAAA,SAKnBR,EAV2B,CACtC1N,KXN6B,oBWO7BoG,MAQqCqJ,KALP,cAAA5B,EAAAC,KAAA,EAAAD,EAAAQ,GAAAR,EAAA,SAAAA,EAAAK,OAAA,UAVjBhF,EAiBM,eAjBEmB,EAiBHwD,EAAAQ,GAhBlB/D,QAAQC,IAAR,mBAAA3L,OAA+BsK,EAA/B,MAAAtK,OAA0CyL,IACnCA,IAQuB,yBAAAwD,EAAAS,OAVlB,IAACpF,EAAQmB,GAUSoD,EAAA,iBAAN,gBAAAc,GAAA,OAAAtI,EAAAuI,MAAAC,KAAAhQ,YAAA,OFmGpB,IAAMuG,EAAQ4J,IAuBd,OAtBI7O,IAAOwJ,GAAevE,GAClB2D,GAAc3D,GAEd0I,EV/FyB,CACrC1N,KDtB8B,uBWuHlB0N,EV9F4B,CACxC1N,KDzB4B,mBC0B5B0P,QU4FsC3G,GAAwB/D,MAItD0I,EZ9GiC,CACzC1N,KFdmC,4Bc4H3B0N,EVvG6B,CACrC1N,KDtB8B,wBW+H1B0N,EAASP,GAAgBpN,IAEzB2N,EAASN,IAAuB,IAEhCuC,aAAad,GAEbnB,EN3H8B,CAClC1N,KDV0B,mBOsIfgE,GAGLmH,EAAU,SAAAd,GAEZ,OADAC,QAAQC,IAAI,UAAWF,GAChBA,GAzEgC0E,EAAAjB,KAAA,EAAAiB,EAAAhB,KAAA,EA6EhBL,EAASL,GAAetN,IA7ER,cA6EjCiE,EA7EiC+K,EAAAf,KAAAe,EAAAb,OAAA,SA+EhCY,EAAU9K,IA/EsB,eAAA+K,EAAAjB,KAAA,GAAAiB,EAAAV,GAAAU,EAAA,SAAAA,EAAAb,OAAA,SAiFhC/C,EAAO4D,EAAAV,KAjFyB,yBAAAU,EAAAT,SAAAK,EAAA,kBAAJ,gBAAAiB,EAAAC,GAAA,OAAA/Q,EAAA0P,MAAAC,KAAAhQ,YAAA,cGjErC0M,GAAU,SAAAd,GAAK,OAAIC,QAAQC,IAAI,UAAWF,IAE1CyF,GAAgB,SAAC9I,EAAWO,GAAS,IAC/BG,EAAsCH,EAAtCG,KAAMrD,EAAgCkD,EAAhClD,YAAaiE,EAAmBf,EAAnBe,eAQ3B,OANAtB,EAAUU,KAAOA,EACjBV,EAAU3C,YAAcA,EACxB2C,EAAUsB,eAAiBA,EAAe/C,IAAI,SAAA/D,GAAI,OAC9C9B,OAAOqQ,OAAO,GAAIvO,EAAM,CAAEwO,MAAOxO,EAAKyO,EAAGC,OAAQ1O,EAAK2O,MAGnDnJ,EAAUoJ,OAAOhQ,KAAK,SAAAiQ,GAAG,OAAIA,EAAIC,SAASC,OAGxCC,GAAkB,SAAAjJ,GAC3B,OAAOpH,wBACFC,KAAK,SAAAC,GACF,OAAOA,EAAGmL,OAAOjF,WACZ/F,IAAI+G,EAAKxH,IACTK,KAAK,SAAA4G,GAAS,OAAI8I,GAAc9I,EAAWO,OAEnD6C,MAAMe,KAGFsF,GAAgB,SAAAlJ,GACzB,OAAOpH,wBAAcC,KAAK,SAAAC,GACtB,IAAM2G,EAAY3G,EAAGmL,OAAOjF,WAAWmK,SAEvC,OAAOZ,GAAc9I,EAAWO,MCmC3BoJ,GAAqB,SAAAnP,GAC9B,IAAMxB,EAAOwB,EAAKxB,YACXwB,EAAKxB,KACZ,IAAM4Q,EAAenP,IAAYzB,GAAMqC,SAEjCtC,EAAK8Q,yBACLC,EAAqBjL,YAAsB9F,GAEjD,MAAO,CACHC,KnBhE0B,qBmBiE1BoG,MAAM1G,OAAA+F,EAAA,EAAA/F,QAAA2G,EAAA,EAAA3G,CAAA,CACFK,KACAC,QACC4Q,EAAepP,EAAKuP,SAClBC,IACAF,KAKFG,GAAwB,SAAAzP,GAAI,MAAK,CAC1CxB,KnB1EiC,wBmB2EjCoG,MAAO5E,IAGE0P,GAAwB,SAAA9K,GAAK,MAAK,CAC3CpG,KnBhFiC,wBmBiFjCoG,UC9DS6H,GAAqB,SAAA1H,GAAU,MAAK,CAC7CvG,KrBtB0B,iBqBuB1BoG,MAAO+K,YAAa7J,GAAoBf,MAG/B6K,GAAwB,SAAClL,EAAawF,GAAd,MAA6B,CAC9D1L,KrB1BiC,wBqB2BjCkG,YAAaA,EACbE,MAAOsF,IASEyD,GAAsB,SAAA/I,GAAK,MAAK,CACzCpG,KrBpC+B,sBqBqC/BoG,UAKSiL,GAAmB,iCAAApL,EAAAvG,OAAA4N,EAAA,EAAA5N,CAAA6N,EAAAtB,EAAAuB,KAAM,SAAAC,EAAMC,GAAN,IAAA4D,EAAA,OAAA/D,EAAAtB,EAAA2B,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAF,EAAAE,KAAA,EPhDlC5N,wBACKC,KAAK,SAAAC,GAAE,OACJA,EAAGmL,OAAOxE,UAAUvD,KAAK,CACrBvD,OAAQ,CACJoL,KAAqBrM,KAAK,KAC1B,sBACFA,KAAK,KACPsS,OAAQ,YAGfnH,MAAMe,IOsCuB,OAC5BmG,EAD4BzD,EAAAG,KAElCN,GA/B2BnH,EA+BF+K,EAAWE,UA/BM,CAC1CxR,KrBlB0B,iBqBmB1BoG,MAAO+K,YAAa7J,GAAoBf,OA2BN,wBAAAsH,EAAAS,OA7BP,IAAA/H,GA6BOkH,MAAN,gBAAAc,GAAA,OAAAtI,EAAAuI,MAAAC,KAAAhQ,YAAA,ICrCjBwK,gBAAgB,CAC3BwI,SAVa,WAAmD,IAAlDzM,EAAkDvG,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAFvB,EAEYyK,EAAWzK,UAAAC,OAAA,EAAAD,UAAA,QAAAE,EAChE,OAAQuK,EAAOlJ,MACX,IANgC,2BAO5B,OAAOmJ,YAAgBD,EAAO9C,MALG,GAMrC,QACI,OAAOpB,MAkBN0M,GAAyB,SAAA1M,GAAK,OAJT,SAAAA,GAAK,OAAIA,EAAM2M,WAK7CC,CAAmB5M,GAAOyM,UC5BxBI,GAAM,iBAENC,GAAY,eAAA7L,EAAAvG,OAAA4N,EAAA,EAAA5N,CAAA6N,EAAAtB,EAAAuB,KAAG,SAAAC,EAAMpN,GAAN,OAAAkN,EAAAtB,EAAA2B,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAF,EAAAE,KAAA,EAAkB1N,EAAG0R,YAAYC,UAAUC,IAH9C,aAGG,cAAApE,EAAAK,OAAA,SAAAL,EAAAG,MAAA,wBAAAH,EAAAS,SAAAb,MAAH,gBAAAc,GAAA,OAAAtI,EAAAuI,MAAAC,KAAAhQ,YAAA,GAEZyT,GAAY,eAAApT,EAAAY,OAAA4N,EAAA,EAAA5N,CAAA6N,EAAAtB,EAAAuB,KAAG,SAAAmB,EAAOtO,EAAIyR,GAAX,OAAAvE,EAAAtB,EAAA2B,KAAA,SAAAmB,GAAA,cAAAA,EAAAjB,KAAAiB,EAAAhB,MAAA,WACjB+D,EADiB,CAAA/C,EAAAhB,KAAA,eAAAgB,EAAAhB,KAAA,EAEL1N,EAAG0R,YAAYC,UAAUxR,IAPvB,aAKG,OAAAuO,EAAAV,GAAAU,EAAAf,KAAAe,EAAAhB,KAAA,sBAAAgB,EAAAhB,KAAA,EAGL1N,EAAG0R,YAAYC,UAAUtB,OARvB,aAKG,OAAA3B,EAAAV,GAAAU,EAAAf,KAAA,cAAAe,EAAAb,OAAA,SAAAa,EAAAV,IAAA,yBAAAU,EAAAT,SAAAK,MAAH,gBAAAiB,EAAAC,GAAA,OAAA/Q,EAAA0P,MAAAC,KAAAhQ,YAAA,GAKL0T,GAAoB,eAAAhT,EAAAO,OAAA4N,EAAA,EAAA5N,CAAA6N,EAAAtB,EAAAuB,KAAG,SAAA4E,IAAA,IAAA/R,EAAAgS,EAAA,OAAA9E,EAAAtB,EAAA2B,KAAA,SAAA0E,GAAA,cAAAA,EAAAxE,KAAAwE,EAAAvE,MAAA,cAAAuE,EAAAvE,KAAA,EACf5N,wBADe,cAC1BE,EAD0BiS,EAAAtE,KAAAsE,EAAAjE,GAER6D,GAFQI,EAAAC,GAEKlS,EAFLiS,EAAAvE,KAAA,EAEe+D,GAAazR,GAF5B,cAAAiS,EAAAE,GAAAF,EAAAtE,KAAAsE,EAAAvE,KAAA,MAAAuE,EAAAjE,IAAAiE,EAAAC,GAAAD,EAAAE,IAAA,WAE1BH,EAF0BC,EAAAtE,OAGjBqE,EAAUtI,MAAQsI,EAAUtI,KAAK0I,KAAK,SAAAC,GAAG,OAAIA,IAAQb,MAHpC,CAAAS,EAAAvE,KAAA,gBAAAuE,EAAAvE,KAAA,GAMfsE,EAAU7R,IAAIqR,IANC,eAAAS,EAAApE,OAAA,SAAAoE,EAAAtE,MAAA,eAAAsE,EAAAvE,KAAA,GAQtB4E,GDf+B,ECesBN,GAR/B,eAS5B/H,QAAQC,IACJ,6DAVwB+H,EAAApE,OAAA,SDPS,GCOT,yBAAAoE,EAAAhE,SAAA8D,MAAH,yBAAAjT,EAAAqP,MAAAC,KAAAhQ,YAAA,GAgBpBkU,GAAqB,eAAAtT,EAAAK,OAAA4N,EAAA,EAAA5N,CAAA6N,EAAAtB,EAAAuB,KAAG,SAAAoF,EAAOC,EAAMR,GAAb,IAAAhS,EAAA,OAAAkN,EAAAtB,EAAA2B,KAAA,SAAAkF,GAAA,cAAAA,EAAAhF,KAAAgF,EAAA/E,MAAA,cAAA+E,EAAA/E,KAAA,EAChB5N,wBADgB,UAC3BE,EAD2ByS,EAAA9E,KAAA8E,EAAAzE,GAEtBgE,EAFsBS,EAAAzE,GAAA,CAAAyE,EAAA/E,KAAA,eAAA+E,EAAA/E,KAAA,EAEFmE,GAAa7R,EAAIyR,IAFf,OAAAgB,EAAAzE,GAAAyE,EAAA9E,KAAA,OAAA8E,EAAAzE,GAI9B0E,IAAIlB,GAAKgB,GAJqB,yBAAAC,EAAAxE,SAAAsE,MAAH,gBAAAI,EAAAC,GAAA,OAAA5T,EAAAmP,MAAAC,KAAAhQ,YAAA,GCxBrByU,GAA0B,SAAAL,GAAI,MAAK,CAC5C7S,KFFoC,2BEGpCoG,MAAOyM,aCAEM,GAAqB,CAC9BC,aAAiBC,MACjBD,aAAiBE,OAaRC,GAAiB,SAAAvO,GAAK,OAAIA,EAAMwO,YCnBhCC,GAAmB,CAC5BC,cAAe,aACfC,0BAA2B,iBAC3BC,+BAAgC,QAChCC,oBAAqB,cACrBhP,SAAU,KACViP,qBAAsB,IAqBbC,GAAe,SAAA/O,GAAK,OAAIA,EAAMgP,UAE9BC,GAAkC,SAAAjP,GAAK,OAChD+O,GAAa/O,GAAO6O,qBC7BXK,GAAkB,SAAAV,GAAU,MAAK,CAC1CxT,KFC0B,iBEA1BoG,MAAOoN,yBCsBIW,GApBe,SAAAlO,GAAwC,IAArCmO,EAAqCnO,EAArCmO,QAASC,EAA4BpO,EAA5BoO,YAAaC,EAAerO,EAAfqO,SACnD,OACItI,EAAAC,EAAAC,cAAA,OAAKC,MAAO,CAAEoI,UAAW,WACpBD,EACGtI,EAAAC,EAAAC,cAAA,OAAKsI,UAAWC,KAAQH,UAAW/R,IAAKC,EAAE,cAE1CwJ,EAAAC,EAAAC,cAAA,OAAKsI,UAAWC,KAAQC,SAAUN,QAASA,GACtCC,EAAc9R,IAAKC,EAAE,aAAeD,IAAKC,EAAE,gBCXnDmS,GAAgB,EAOhBC,GAAgB,SAAA/B,GACzB,OAVkC,GAU3BA,GAGEgC,GAAuB,SAAA3E,GAChC,OAAO4E,KAAKC,OACP7E,EARL8E,IAPkC,KAmBzBC,GAAe,SAAApC,GACxB,OAhB4B,GAgBFqC,GAAoBrC,GAAM,IAG3CqC,GAAsB,SAAArC,GAC/B,OAAO+B,GAAc/B,GAjBrBmC,yBCAEG,eACF,SAAAA,EAAYtI,GAAO,IAAAuI,EAAA,OAAA1V,OAAA2V,EAAA,EAAA3V,CAAA+O,KAAA0G,IACfC,EAAA1V,OAAA4V,EAAA,EAAA5V,CAAA+O,KAAA/O,OAAA6V,EAAA,EAAA7V,CAAAyV,GAAAK,KAAA/G,KAAM5B,KAOV4I,YAAc,WACVL,EAAKM,SAAS,CAAEC,UAAU,IAC1BC,OAAOC,iBAAiB,YAAaT,EAAKU,QAC1CF,OAAOC,iBAAiB,UAAWT,EAAKW,YAXzBX,EAcnBU,OAAS,SAAAE,GACLA,EAAMC,iBACND,EAAME,kBAEN,IAAMC,EAAYH,EAAMI,QAGpBhB,EAAKvI,MAAMwJ,gBACXF,IAAcf,EAAKvI,MAAMqD,QACzBiG,EAAY,GAEZG,sBAAsB,WAClBlB,EAAKvI,MAAMwJ,eAAeF,MA1BnBf,EA+BnBW,UAAY,WACRX,EAAKM,SAAS,CAAEC,UAAU,IAC1BC,OAAOW,oBAAoB,YAAanB,EAAKU,QAC7CF,OAAOW,oBAAoB,UAAWnB,EAAKW,WAEvCX,EAAKvI,MAAMkJ,WACXX,EAAKvI,MAAMkJ,aAlCfX,EAAKpQ,MAAQ,CACT2Q,UAAU,GAJCP,kFA0Cf,MAA4C,oBAA9B3G,KAAK5B,MAAMwJ,eACrBrK,EAAAC,EAAAC,cAAA,OACIsI,UAAWC,KAAQ+B,WACnBrK,MAAO,CAAE+D,OAhDE,GAiDXuG,YAAahI,KAAKgH,cAEtB,sCAIJ,IAAMvF,EAAS4E,KAAK4B,IAAIjI,KAAK5B,MAAMqD,OAAQ,GAvDxB,EAyDbyG,EAAYjX,OAAOqQ,OACrB,CACIG,SACA0G,ID7DgB,GC8DhBC,gBAAiBpI,KAAK5B,MAAMiK,SACtBC,IAAOC,UACPD,IAAOE,MACbC,cAhEW,GAmEfzI,KAAKzJ,MAAM2Q,SAAW,CAAEwB,WAAY,QAAW,IAGnD,OACInL,EAAAC,EAAAC,cAAA,OAAKC,MAAOwK,EAAWnC,UAAWC,KAAQ2C,MACtCpL,EAAAC,EAAAC,cAAA,OAAKsI,UAAWC,KAAQ1D,SAAUtC,KAAK5B,MAAMwK,UAC5C5I,KAAK6I,2BAvEGC,IAAMC,WA8G/BrC,GAAWsC,aAAe,CACtBpB,eAAgB,KAChBN,UAAW,MAGAZ,+BCzGAuC,GAhBE,SAAAzR,GAAA,IAAGuO,EAAHvO,EAAGuO,UAAH,OACbxI,EAAAC,EAAAC,cAAA,OACIsI,UAAWA,EACXmD,MAAM,6BACNC,QAAQ,aAER5L,EAAAC,EAAAC,cAAA,QAAMzE,EAAE,gBAAgBoQ,KAAK,SAC7B7L,EAAAC,EAAAC,cAAA,QAAMzE,EAAE,6FACRuE,EAAAC,EAAAC,cAAA,QAAMzE,EAAE,gBAAgBoQ,KAAK,WCTxBC,GAAqB,eAAA7R,EAAAvG,OAAA4N,EAAA,EAAA5N,CAAA6N,EAAAtB,EAAAuB,KAAG,SAAAC,EAAOsK,EAAWhY,GAAlB,IAAAM,EAAAsC,EAAA,OAAA4K,EAAAtB,EAAA2B,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAF,EAAAE,KAAA,EAChB5N,wBADgB,OAC3BE,EAD2BwN,EAAAG,KAE3BrL,EAF2B,4BAAA/D,OAEOmZ,EAFP,cAAAnZ,OAE6BmB,GAE9DM,EAAGC,IAAIC,SAASoL,KAAKhJ,GAJY,wBAAAkL,EAAAS,SAAAb,MAAH,gBAAAc,EAAAqB,GAAA,OAAA3J,EAAAuI,MAAAC,KAAAhQ,YAAA,wBCiDnBuZ,GAxCkB,SAAA/R,GAK3B,IAJFgB,EAIEhB,EAJFgB,QACAjD,EAGEiC,EAHFjC,SACAiU,EAEEhS,EAFFgS,MACA/R,EACED,EADFC,YAEMgS,EAAY,CACdlU,WACAwQ,UAAWC,KAAQ3Q,MAGvB,GAAImD,EAAS,CACT,IAAMkR,EAAgBnU,EAAWyQ,KAAQzQ,SAAWyQ,KAAQxQ,WAC5DiU,EAAUnU,KACNiI,EAAAC,EAAAC,cAACkM,GAAD,CAAU5D,UAAS,GAAA5V,OAAK6V,KAAQ1Q,KAAb,KAAAnF,OAAqBuZ,KAIhD,OACInM,EAAAC,EAAAC,cAACmM,EAAA,EAAD,CACI7D,UAAWC,KAAQ9Q,KACnB2U,GAAE,IAAA1Z,OAAMsH,GACRkO,QAASmE,KACL,kBAAMT,GAAsB,iBAAkB5R,IAC9C,MAGJ8F,EAAAC,EAAAC,cAACsM,EAAA,EAASN,EAAYD,KCvBnBQ,GAZO,kBAClBzM,EAAAC,EAAAC,cAAA,OACIyL,MAAM,6BACN3H,MAAM,KACNE,OAAO,KACP2H,KAAMd,IAAO2B,QACbd,QAAQ,aAER5L,EAAAC,EAAAC,cAAA,QAAMzE,EAAE,2QCSDkR,GAhBG,SAAA1S,GAAA,IAAGuO,EAAHvO,EAAGuO,UAAH,OACdxI,EAAAC,EAAAC,cAAA,OACIsI,UAAWA,EACXqD,KAAMd,IAAO6B,QACbjB,MAAM,6BACNC,QAAQ,aAER5L,EAAAC,EAAAC,cAAA,QAAMzE,EAAE,0GACRuE,EAAAC,EAAAC,cAAA,QAAMzE,EAAE,gBAAgBoQ,KAAK,gCCMtBgB,GAZY,SAAA5S,GAAA,IAAG6S,EAAH7S,EAAG6S,QAAH,OACvB9M,EAAAC,EAAAC,cAAA,UAAQsI,UAAWC,KAAQsE,OAAQ3E,QAAS0E,GACxC9M,EAAAC,EAAAC,cAAA,YACIF,EAAAC,EAAAC,cAAC8M,GAAD,CAAWxE,UAAWC,KAAQ1Q,KAAMkV,MAAM,cCFzCC,GAAY,CACrB,CAAEnZ,GAAI,MAAOqG,MAAO,aACpB,CAAErG,GAAI,KAAMqG,MAAO,iBACnB,CAAErG,GAAI,SAAUqG,MAAO,sBAYd+S,GAAuC,GACvCC,GAAwCF,GAAU,GAAGnZ,GAuCnDkJ,gBAAgB,CAC3BvB,KArCS,WAA0D,IAAzD1C,EAAyDvG,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAjD0a,GAAsCjQ,EAAWzK,UAAAC,OAAA,EAAAD,UAAA,QAAAE,EACnE,OAAQuK,EAAOlJ,MACX,IAzBkC,6BA0B9B,OAAOmJ,YACHD,EAAO9C,MACP+S,IAER,QACI,OAAOnU,IA8Bf8C,MA1BU,WAA2D,IAA1D9C,EAA0DvG,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAlD2a,GAAuClQ,EAAWzK,UAAAC,OAAA,EAAAD,UAAA,QAAAE,EACrE,OAAQuK,EAAOlJ,MACX,IApCmC,8BAqC/B,OAAOmJ,YACHD,EAAO9C,MACP+S,IAER,QACI,OAAOnU,IAmBfqU,MAfU,WAA2D,IAA1DrU,EAA0DvG,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GApC/D,WAoCoDyK,EAAWzK,UAAAC,OAAA,EAAAD,UAAA,QAAAE,EACrE,OAAQuK,EAAOlJ,MACX,IA/CmC,8BAgD/B,OAAOmJ,YACHD,EAAO9C,MAxCb,YA2CF,QACI,OAAOpB,MAYNsU,GAA2B,SAAAtU,GAAK,OAAIA,EAAMuU,kBAI1CC,GAAiB,SAAAxU,GAAK,OAAIsU,GAAyBtU,GAAO0C,2BC9D1D+R,GAAgB,GAChBC,GAAiB,GAEjBC,GAAb,SAAAC,GACI,SAAAD,EAAY9M,GAAO,IAAAuI,EAAA,OAAA1V,OAAA2V,EAAA,EAAA3V,CAAA+O,KAAAkL,IACfvE,EAAA1V,OAAA4V,EAAA,EAAA5V,CAAA+O,KAAA/O,OAAA6V,EAAA,EAAA7V,CAAAia,GAAAnE,KAAA/G,KAAM5B,KAaVgN,eAAiB,SAAA7D,GACbA,EAAMC,iBAENb,EAAKvI,MAAMiN,aAAa9D,EAAM+D,OAAO3T,QAjBtBgP,EAoBnB4E,YAAc,SAAAhE,GACV,OAAQA,EAAMiE,SACV,KAAKR,GACDrE,EAAKvI,MAAMqN,kBACX,MACJ,KAAKR,GACDtE,EAAKvI,MAAMiN,iBAvBnB1E,EAAKpQ,MAAQ,CACToB,MAAO+S,IAJI/D,EADvB,OAAA1V,OAAAya,EAAA,EAAAza,CAAAia,EAAAC,GAAAla,OAAA0a,EAAA,EAAA1a,CAAAia,EAAA,EAAAjH,IAAA,4BAAAtM,MAAA,SAS8BiU,GACtB5L,KAAKiH,SAAS,CACVtP,MAAOiU,EAAU3S,SAX7B,CAAAgL,IAAA,SAAAtM,MAAA,WAkCa,IAAAkU,EAC0B7L,KAAK5B,MAA5BnF,EADH4S,EACG5S,KAAMoS,EADTQ,EACSR,aAERS,EACFvO,EAAAC,EAAAC,cAACsO,GAAAvO,EAAD,CAAgBwO,SAAS,SACrBzO,EAAAC,EAAAC,cAACwO,GAAAzO,EAAD,CAAYuI,UAAWC,KAAQkG,cAIjCC,EACO,KAATlT,GAAwB,OAATA,EACXsE,EAAAC,EAAAC,cAACsO,GAAAvO,EAAD,CAAgBwO,SAAS,OACrBzO,EAAAC,EAAAC,cAAC2O,GAAD,CAAa/B,QAAS,kBAAMgB,QAEhC,KAER,OACI9N,EAAAC,EAAAC,cAAC4O,GAAA7O,EAAD,CACIuI,UAAWC,KAAQsG,YACnBC,YAAazY,IAAKC,EAAE,0BACpB+X,eAAgBA,EAChBK,aAAcA,EACdxU,MAAOqI,KAAKzJ,MAAMoB,MAClB6U,SAAUxM,KAAKoL,eACfqB,QAASzM,KAAKuL,kBA1D9BL,EAAA,CAA4BnC,aAsE5BmC,GAAOlC,aAAe,CAClB/P,KAAM,GACNoS,aAAcqB,SAASC,WAGZzB,+BC7DF0B,GAAgB,GAEhBC,GAAb,SAAA1B,GAAA,SAAA0B,IAAA,IAAAC,EAAAnG,EAAA1V,OAAA2V,EAAA,EAAA3V,CAAA+O,KAAA6M,GAAA,QAAAE,EAAA/c,UAAAC,OAAA+c,EAAA,IAAAC,MAAAF,GAAAG,EAAA,EAAAA,EAAAH,EAAAG,IAAAF,EAAAE,GAAAld,UAAAkd,GAAA,OAAAvG,EAAA1V,OAAA4V,EAAA,EAAA5V,CAAA+O,MAAA8M,EAAA7b,OAAA6V,EAAA,EAAA7V,CAAA4b,IAAA9F,KAAAhH,MAAA+M,EAAA,CAAA9M,MAAA7P,OAAA6c,MACIzW,MAAQ,CACJ6N,KAAM8B,IAFdS,EAKIwG,yBAA2B,SAAA/I,GACvBuC,EAAKM,SAAS,CAAE7C,OAAMwB,YAAaxB,IAASwI,MANpDjG,EAiBIiB,eAAiB,SAAAF,GACb,IAAM0F,EAAiB1F,EAAY,GAC7B2F,EAAUhH,KAAK4B,IACjB/B,GACAE,GAAqBgH,IAGzB,GAAIC,IAAY1G,EAAKpQ,MAAM6N,KAAM,CAC7B,IAAMkJ,EAAcjH,KAAKkH,IAAIF,EAAST,IAEtCjG,EAAKvI,MAAMwJ,eAAe0F,KA3BtC3G,EA+BIW,UAAY,WACR,OAAOpD,GAAsByC,EAAKpQ,MAAM6N,OAhChDuC,EAmCI6G,kBAAoB,WAChB,IAAMpJ,EACFuC,EAAKpQ,MAAM6N,OAASwI,GACdjG,EAAKvI,MAAM4E,SACX4J,GAEVjG,EAAKM,SAAS,CAAE7C,OAAMwB,aAAce,EAAKpQ,MAAMqP,eAzCvDe,EA4CI8G,kBAAoB,WAChB9G,EAAKvI,MAAMsP,QAAQC,KAAnB,IAAAxd,OAA4BwW,EAAKvI,MAAMtG,WAAW,GAAGxG,MA7C7DqV,EAAA,OAAA1V,OAAAya,EAAA,EAAAza,CAAA4b,EAAA1B,GAAAla,OAAA0a,EAAA,EAAA1a,CAAA4b,EAAA,EAAA5I,IAAA,oBAAAtM,MAAA,WAUQqI,KAAKmN,yBAAyBnN,KAAK5B,MAAM4E,YAVjD,CAAAiB,IAAA,4BAAAtM,MAAA,SAa8BiU,GACtB5L,KAAKmN,yBAAyBvB,EAAU5I,YAdhD,CAAAiB,IAAA,SAAAtM,MAAA,WAgDa,IAAAkU,EACwD7L,KAAK5B,MAA1DtG,EADH+T,EACG/T,WAAYmB,EADf4S,EACe5S,KAAM2U,EADrB/B,EACqB+B,WAAYC,EADjChC,EACiCgC,mBAEhCC,EAAW9N,KAAKzJ,MAAMqP,YACtBgH,GACA5M,KAAKzJ,MAAM6N,KACX2J,EAAmBtH,GAAoBqH,GACvCE,EAAsB,CACxBC,QAAO,GAAA9d,OVpFqB,GUoFrB,gBACP+d,UAAWlO,KAAKzJ,MAAMqP,YAAc,OAAS,SAC7CnE,OAAQ0E,GAAc2H,GVtFM,IUyFhC,OACIvQ,EAAAC,EAAAC,cAAC0Q,GAAD,CACI1M,OAAQsM,EACRnG,eAAgB5H,KAAK4H,eACrBN,UAAWtH,KAAKsH,UAChBe,UAAU,GAEV9K,EAAAC,EAAAC,cAAA,OAAKC,MAAOsQ,GACRzQ,EAAAC,EAAAC,cAAA,OAAKsI,UAAWC,KAAQoI,cACpB7Q,EAAAC,EAAAC,cAACmM,EAAA,EAAD,CACIlM,MAAO,CACH2Q,QAAS,eACTC,eAAgB,OAChBC,YAAa,GACbvC,SAAU,WACV7D,IAAK,OAET0B,GAAI,QAEJtM,EAAAC,EAAAC,cAAC+Q,GAAD,OAEJjR,EAAAC,EAAAC,cAACgR,GAAD,CACIxV,KAAMA,EACNoS,aAAcwC,EACdpC,gBAAiBzL,KAAKyN,qBAG7B7T,YAAQ9B,GAAYhB,IAAI,SAAAyB,GAAS,OAC9BgF,EAAAC,EAAAC,cAACiR,GAAD,CACIzK,IAAK1L,EAAUjH,GACfkY,MAAOjR,EAAUW,YACjBV,QAASD,EAAUC,QACnBf,YAAac,EAAUjH,GACvBiE,SAAUgD,EAAUjH,KAAOsc,OAIvCrQ,EAAAC,EAAAC,cAACkR,GAAD,CACIhJ,QAAS3F,KAAKwN,kBACd5H,YAAa5F,KAAKzJ,MAAMqP,YACxBC,SAAU7F,KAAK5B,MAAM4E,WAAa4J,UArGtDC,EAAA,CAAmC9D,aAmH7B6F,GAAqB,CACvBhH,eAAgBnD,GAChBoJ,mBC5I2B,SAAAlW,GAAK,MAAK,CACrCpG,KHNsC,6BGOtCoG,WD2KWkX,eACXjR,YA3CoB,SAAArH,GAAK,MAAK,CAC9BuB,WAAYI,EAAkB3B,GAC9B0C,KAAM8R,GAAexU,GACrByM,SAAUC,GAAuB1M,GACjCqX,WAAY9S,GAAevE,KAyCvBqY,GAlCW,SAACE,EAAYC,EAAeC,GAC3C,IAAMlX,EAAa7G,OAAOoH,OAAOL,YAAS8W,EAAWhX,aAC/CmX,EAAoBrW,IACtBd,EAAWQ,OAAO,SAAAU,GAAC,OACfA,EAAEE,YAAYgW,cAAcC,SAASL,EAAW7V,KAAKiW,iBAEzD,MACA,eAGJ,OAAOje,OAAA+F,EAAA,EAAA/F,CAAA,GACA6d,EACAE,EACAD,EAHP,CAIIjX,WAAU,GAAA3H,OAAAc,OAAA0H,EAAA,EAAA1H,CACHge,EAAkB3W,OAAO,SAAAU,GAAC,OAAIA,EAAER,WAD7BvH,OAAA0H,EAAA,EAAA1H,CAEHge,EAAkB3W,OAAO,SAAAU,GAAC,OAAKA,EAAER,eAgB5CoF,CAIEiP,KEhKSjP,eATS,SAAArH,GAAK,MAAK,CAC9ByM,SAAUC,GAAuB1M,KAQtBqH,CAhBiB,SAAAQ,GAC5B,IAAMgG,EAAOhG,EAAMiK,SAAWnC,GAAgB9H,EAAM4E,SAC9CoM,EAAY5I,GAAapC,GAE/B,OAAO7G,EAAAC,EAAAC,cAAA,OAAKsI,UAAU,4BAA4BrI,MAAO,CAAE0R,sCCOhDC,GAjBQ,SAAA7X,GAAA,IAAG7B,EAAH6B,EAAG7B,MAAH,OACnB4H,EAAAC,EAAAC,cAACsM,EAAA,EAAD,CACIuF,OAAK,EACLrL,IAAKtO,EACLkQ,UAAQ,EACR2D,MACIjM,EAAAC,EAAAC,cAAA,QAAMC,MAAO,CAAE8M,MAAOlC,IAAO6B,QAASxM,WAAY,QAC7ChI,MCWF4Z,GAlBI,SAAA/X,GAAA,IAAGuO,EAAHvO,EAAGuO,UAAH,OACfxI,EAAAC,EAAAC,cAAA,OACIsI,UAAWA,EACXmD,MAAM,6BACN3H,MAAM,KACNE,OAAO,KACP2H,KAAMd,IAAOkH,QACbrG,QAAQ,aAER5L,EAAAC,EAAAC,cAAA,QAAMzE,EAAE,gBAAgBoQ,KAAK,SAC7B7L,EAAAC,EAAAC,cAAA,QAAMzE,EAAE,8JCHVyW,GAAa,SAAAjY,GAAA,IAAGtD,EAAHsD,EAAGtD,IAAH,OACfqJ,EAAAC,EAAAC,cAAA,KACIkI,QAAS,SAAA+J,GAAC,OAAIA,EAAEjI,mBAChB1B,UAAWC,KAAQ2J,WACnBrE,OAAO,SACPsE,IAAI,sBACJC,KAAM3b,GAENqJ,EAAAC,EAAAC,cAACqS,GAAD,QAQFC,GAAe,kBACjBxS,EAAAC,EAAAC,cAAA,UAAQsI,UAAWC,KAAQgK,cAAelc,IAAKC,EAAE,YAyCtCkc,GAtCS,SAAA5f,GAA4C,IAAzCkB,EAAyClB,EAAzCkB,KAAM0H,EAAmC5I,EAAnC4I,KAAMiX,EAA6B7f,EAA7B6f,SAAUhc,EAAmB7D,EAAnB6D,IAAKic,EAAc9f,EAAd8f,QAC5CC,EAAW/b,YAAY9C,GAEvB8e,EACF9e,IAASU,IACLqe,KAAaH,GAEb5S,EAAAC,EAAAC,cAAC2S,EAAD,CAAU1S,MAAO,CAAE0L,KAAMd,IAAOkH,WAGxC,OACIjS,EAAAC,EAAAC,cAACsM,EAAA,EAAD,CACIuF,OAAK,EACL3J,QAASuK,EACT1G,MACIjM,EAAAC,EAAAC,cAAA,OAAKsI,UAAWC,KAAQuK,UACpBhT,EAAAC,EAAAC,cAAA,OAAKsI,UAAWC,KAAQwD,OACpBjM,EAAAC,EAAAC,cAAA,QAAMC,MAAO,CAAE6Q,YAAa,QACvB8B,GAEL9S,EAAAC,EAAAC,cAAA,YAAOxE,GACN/E,EAAMqJ,EAAAC,EAAAC,cAAC+S,GAAD,CAAYtc,IAAKA,IAAU,MAEtCqJ,EAAAC,EAAAC,cAACgT,GAAD,UCvCPC,GAAc,CACvB,CACIpf,GAAI,aACJqf,OAAQ7c,IAAKC,EAAE,oBACf8C,MAAO,CACH,CACItF,KAAMqB,IACNqG,KAAMnF,IAAKC,EAAE,YACbuO,QAAS,IAEb,CACI/Q,KAAMoB,IACNsG,KAAMnF,IAAKC,EAAE,YACbuO,QAAS,QAEb,CACI/Q,KAAMsB,IACNoG,KAAMnF,IAAKC,EAAE,UACbuO,QAAS,OAOZsO,GAAmB,CAC5B3e,IACAG,IACAC,IACAC,IACAI,IACAF,IACAC,IACAF,KAISse,GAAgB,CAACre,IAASC,IAAWC,2BCpC5Coe,eACF,SAAAA,EAAY1S,GAAO,IAAAuI,EAAA,OAAA1V,OAAA2V,EAAA,EAAA3V,CAAA+O,KAAA8Q,IACfnK,EAAA1V,OAAA4V,EAAA,EAAA5V,CAAA+O,KAAA/O,OAAA6V,EAAA,EAAA7V,CAAA6f,GAAA/J,KAAA/G,KAAM5B,KAOV2S,QAAU,SAAAhe,GAAI,OAAI,WAAM,IAAA8Y,EACsClF,EAAKvI,MAAvD7M,EADYsa,EACZta,KAAM2Q,EADM2J,EACN3J,mBAAoB8O,EADdnF,EACcmF,oBAElC,GAAIzf,IAASgB,IACT2P,EAAmB,CAAE3Q,OAAM+Q,QAASvP,EAAKkR,UACtC,CACH,IAAMgN,EAAU,CACZ3f,GAAIyB,EAAKzB,GACT2H,KAAMlG,EAAKmG,aAAenG,EAAKkG,MAG/B4X,GAAc1B,SAAS5d,GACvByf,EAAoBzf,EAAM0f,GAE1B/O,EAAmB,CAAE3Q,OAAM+Q,QAAS2O,OAtB7BtK,EA2BnBuK,cAAgB,WACZvK,EAAKM,SAAS,CAAEkK,SAAUxK,EAAKpQ,MAAM4a,UAErCxK,EAAKvI,MAAMgT,mBAAmBzK,EAAKvI,MAAM7M,OA3BzCoV,EAAKpQ,MAAQ,CACT4a,SAAS,GAJExK,wEAiCV,IAAA0K,EAAArR,KAAAsR,EACmCtR,KAAK5B,MAArCzI,EADH2b,EACG3b,MAAOpE,EADV+f,EACU/f,KAAMsF,EADhBya,EACgBza,MAAO0a,EADvBD,EACuBC,QAC5B,OACIhU,EAAAC,EAAAC,cAAAF,EAAAC,EAAAgU,SAAA,KACIjU,EAAAC,EAAAC,cAACgU,GAAD,CAAgB9b,MAAOA,IACtBkB,EAAMC,IAAI,SAAA/D,GACP,IAAM2e,EAAUzd,YAAW1C,EAAMwB,EAAMse,EAAKM,QAAQ/f,IACpD,OACI2L,EAAAC,EAAAC,cAACmU,GAAD,CACI3N,IAAKlR,EAAKzB,IAAMyB,EAAKkR,IACrB1S,KAAMA,EACN4e,QAAS5e,IAASU,IAAgBc,EAAKxB,KAAOA,EAC9C0H,KAAMlG,EAAKmG,aAAenG,EAAKkG,KAC/BiX,SAAUmB,EAAKN,QAAQhe,GACvBmB,IAAKwd,MAIhBH,EACGhU,EAAAC,EAAAC,cAACsM,EAAA,EAAD,CACIuF,OAAK,EACLrL,IAAG,WAAA9T,OAAawF,GAChBgQ,QAAS3F,KAAKkR,cACd1H,MACIjM,EAAAC,EAAAC,cAAA,UAAQsI,UAAWC,KAAQrW,gBACtBqQ,KAAKzJ,MAAM4a,QACNrd,IAAKC,EAAE,cACPD,IAAKC,EAAE,gBAIzB,KACJwJ,EAAAC,EAAAC,cAACsM,EAAA,EAAD,CAAS8H,OAAO,oBAlEG9I,aAkFnC+H,GAAqBgB,aAAe,CAChClgB,GAAImgB,IAAUC,OAAOC,YAGVrU,mBACX,KACA,CACIsE,sBACA8O,oBCnG2B,SAACzf,EAAM+Q,GAAP,OAAmB,SAACrD,EAAUkB,GAC7D,IAMI+R,EANE3b,EAAQ4J,IACRgS,EAAenf,IAAYzB,GAAMqC,SACjCiG,EAAiBG,GAAsBzD,GAAOsD,eAC9CuY,EAAqBvY,EAAewY,UACtC,SAAAtf,GAAI,OAAIA,EAAKxB,OAASA,IAKtB6gB,GAAsB,IACtBF,EAAgBrY,EAAeuY,IACjBD,GAAcxE,KAAKrL,GAEjCrD,EAASuD,GAAsB0P,KAO/BjT,EAASiD,GALTgQ,EAAgB,CACZ3gB,KAAMA,EACN+Q,QAAS,CAACA,SD6EP1E,CAMbkT,IE3EalT,eACX,KACA,CAAEsE,uBAFStE,CAzBiB,SAAApG,GAAsC,IAAnC0K,EAAmC1K,EAAnC0K,mBAAoBoQ,EAAe9a,EAAf8a,SAC7CC,EAAiB,SAAAliB,GAAA,IAAGkB,EAAHlB,EAAGkB,KAAM+Q,EAATjS,EAASiS,QAAT,OAAuB,WAC1CJ,EAAmB,CAAE3Q,OAAM+Q,cAG/B,OACI/E,EAAAC,EAAAC,cAAAF,EAAAC,EAAAgU,SAAA,KACIjU,EAAAC,EAAAC,cAACgU,GAAD,CAAgB9b,MAAO2c,EAAS3B,SAC/B2B,EAASzb,MAAMC,IAAI,SAAA/D,GAAI,OACpBwK,EAAAC,EAAAC,cAACmU,GAAD,CACI3N,IAAKlR,EAAKxB,KACVA,KAAMwB,EAAKxB,KACX0H,KAAMlG,EAAKkG,KACXiX,SAAUqC,EAAexf,UCRvCyf,YAAkB,SAAApU,GAAK,OACzBb,EAAAC,EAAAC,cAACsM,EAAA,EAAD,CACI9Q,KAAK,wBACLuQ,MAAO1V,IAAKC,EAAE,6CACdxC,KAAK,OACLib,SAAUpO,EAAMoO,SAChBiG,QAASrU,EAAMqU,QACf9a,MAAOyG,EAAMzG,UAIf+a,eACF,SAAAA,EAAYtU,GAAO,IAAAuI,EAAA,OAAA1V,OAAA2V,EAAA,EAAA3V,CAAA+O,KAAA0S,IACf/L,EAAA1V,OAAA4V,EAAA,EAAA5V,CAAA+O,KAAA/O,OAAA6V,EAAA,EAAA7V,CAAAyhB,GAAA3L,KAAA/G,KAAM5B,KAWVuU,UAAY,WACRhM,EAAKM,SAAS,CAAE/K,MAAM,EAAO5D,OAAQ,MAbtBqO,EAgBnBiM,SAAW,SAACC,EAAGtL,GACXZ,EAAKmM,aAELnM,EAAKM,SAAS,CACV8L,SAAUxL,EAAMyL,cAChB9W,MAAM,KArBKyK,EAyBnBsM,UAAY,SAACJ,EAAGtL,GACZZ,EAAKM,SAAS,CAAE3O,OAAQiP,EAAM+D,OAAO3T,OAASgP,EAAKmM,aA1BpCnM,EA6BnBuM,yBAA2B,kBACvBtC,GACKtY,OAAO,SAAA/G,GACJ,IAAM2B,EAAWF,IAAYzB,GAC7B,OACIoV,EAAKpQ,MAAMM,OAAS8P,EAAKpQ,MAAMM,MAAM3D,EAASS,gBAGrDmD,IAAI,SAAAvF,GACD,IAAM2B,EAAWF,IAAYzB,GACvB4hB,EAAY9f,YAAoB9B,GAChC6hB,EAAWzM,EAAKpQ,MAAMM,MAAM3D,EAASS,cACrC4d,EAAU6B,EAASnjB,OAASkjB,EAC5Btc,EAAQ8P,EAAKpQ,MAAM8c,WAAW7P,IAAItQ,EAAS5B,IAC3C8hB,EACAA,EAASE,MAAM,EAAGH,GAExB,OACI5V,EAAAC,EAAAC,cAAC8V,GAAD,CACItP,IAAK1S,EACLA,KAAMA,EACNoE,MAAOzC,EAASW,YAChBgD,MAAOA,EACPua,mBAAoBzK,EAAKmM,WACzBvB,QAASA,OArDV5K,EA0DnB6M,qBAAuB,kBACnB9C,GAAY5Z,IAAI,SAAAwb,GAAQ,OACpB/U,EAAAC,EAAAC,cAACgW,GAAD,CAAkBxP,IAAKqO,EAAShhB,GAAIghB,SAAUA,OA5DnC3L,EA+DnB+M,cAAgB,kBACZ/M,EAAKuM,2BAA2B/iB,OAAOwW,EAAK6M,yBAhE7B7M,EAkEnBmM,WAlEmB,eAAAtb,EAAAvG,OAAA4N,EAAA,EAAA5N,CAAA6N,EAAAtB,EAAAuB,KAkEN,SAAAC,EAAMzN,GAAN,IAAA8hB,EAAAM,EAAArb,EAAA,OAAAwG,EAAAtB,EAAA2B,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,OACL/N,IACM8hB,EAAa1M,EAAKpQ,MAAM8c,YAEf7P,IAAIjS,GACf8hB,EAAWlW,OAAO5L,GAElB8hB,EAAWO,IAAIriB,GAGnBoV,EAAKM,SAAS,CAAEoM,gBAEhB1M,EAAKM,SAAS,CACVoM,WAAY,IAAIQ,MAIpBF,EAAc,YACd1iB,OAAA0H,EAAA,EAAA1H,CAAI0V,EAAKpQ,MAAM8c,WAAWhb,UAAUpI,SACpC0jB,GACI,QAAU1iB,OAAA0H,EAAA,EAAA1H,CAAI0V,EAAKpQ,MAAM8c,WAAWhb,UAAU7H,KAAK,UAGrD8H,EAASqO,EAAKpQ,MAAM+B,OAAX,IAAAnI,OAAwBwW,EAAKpQ,MAAM+B,QAAW,GAE7DqO,EAAKgL,QAAQ/f,GAAGC,IAAIC,SACfC,IADL,eAAA5B,OACwBmI,GADxBnI,OACiCwjB,IAC5BhiB,KAAK,SAAAkQ,GAAQ,OAAI8E,EAAKM,SAAS,CAAEpQ,MAAOgL,MACxClG,MAAME,QAAQD,OA5BV,wBAAAwD,EAAAS,SAAAb,MAlEM,gBAAAc,GAAA,OAAAtI,EAAAuI,MAAAC,KAAAhQ,YAAA,GAGf2W,EAAKpQ,MAAQ,CACTwc,SAAU,KACV7W,MAAM,EACNmX,WAAY,IAAIQ,IAChBhd,WAAO3G,EACPoI,OAAQ,IARGqO,wEAkGf,OACIpJ,EAAAC,EAAAC,cAAAF,EAAAC,EAAAgU,SAAA,KACIjU,EAAAC,EAAAC,cAACqW,GAAD,CACInc,MAAOqI,KAAKzJ,MAAM+B,OAClBkU,SAAUxM,KAAKiT,UACfR,QAASzS,KAAK4S,WAElBrV,EAAAC,EAAAC,cAACsW,GAAAvW,EAAD,CACIuI,UAAU,0BACV7J,KAAM8D,KAAKzJ,MAAM2F,KACjBuC,QAASuB,KAAK2S,UACdI,SAAU/S,KAAKzJ,MAAMwc,SACrBiB,aAAc,CAAEC,WAAY,OAAQC,SAAU,UAC9CC,gBAAiB,CAAEF,WAAY,OAAQC,SAAU,OACjDxW,MAAO,CAAE+D,OAAQ,QACjB2S,WAAY,CAAE1W,MAAO,CAAE6D,MAAO,UAC9B8S,kBAAkB,EAClBC,qBAAqB,EACrBC,qBAAqB,GAErBhX,EAAAC,EAAAC,cAACsM,EAAA,EAAD,CAAMyK,SAAU,SAAUxU,KAAK0T,0BAvHxB5K,IAAMC,WAoIjC2J,GAAaZ,aAAe,CACxBlgB,GAAImgB,IAAUC,OAAOC,YAGVS,+BChJF+B,GAAe,SAAAjd,GAKtB,IAJFyB,EAIEzB,EAJFyB,KACArD,EAGE4B,EAHF5B,YACA8e,EAEEld,EAFFkd,cACAC,EACEnd,EADFmd,oBAUA,OACIpX,EAAAC,EAAAC,cAAA,WAASsI,UAAWC,KAAQvQ,SACxB8H,EAAAC,EAAAC,cAAA,OAAKsI,UAAWC,KAAQtQ,kBACpB6H,EAAAC,EAAAC,cAACsM,EAAA,EAAD,CACIhE,UAAWC,KAAQrQ,MACnBsD,KAAK,wBACLuQ,MAAO1V,IAAKC,EAAE,mBACdxC,KAAK,OACLib,SAhBI,SAACqG,EAAGnD,GACpBgF,EAAchF,EAAEpE,OAAO3T,QAgBXA,MAAOsB,IAEXsE,EAAAC,EAAAC,cAACsM,EAAA,EAAD,CACIhE,UAAWC,KAAQpQ,YACnBqD,KAAK,8BACLuQ,MAAO1V,IAAKC,EAAE,yBACdyY,SAnBU,SAACqG,EAAGnD,GAC1BiF,EAAoBjF,EAAEpE,OAAO3T,QAmBjBA,MAAO/B,KAGf2H,EAAAC,EAAAC,cAAA,OAAKsI,UAAWC,KAAQnQ,cACpB0H,EAAAC,EAAAC,cAACmX,GAAD,SAahBH,GAAazL,aAAe,CACxB/P,KAAM,GACNrD,YAAa,IAGjB,IASMgZ,GAAqB,CACvB8F,c9B5B+B,SAAA/c,GAAK,MAAK,CACzCpG,KnB3C0B,iBmB4C1BoG,U8B2BAgd,oB9BxBqC,SAAAhd,GAAK,MAAK,CAC/CpG,KnB/CgC,uBmBgDhCoG,W8ByBWiG,eAdS,SAAArH,GACpB,IAAMse,EAAoB7c,YAASgC,GAAsBzD,IAEzD,MAAO,CACH0C,KAAM4b,EAAkB5b,KACxBrD,YAAaif,EAAkBjf,cAWnCgZ,GAFWhR,CAGb6W,qICpEIK,GAAOlQ,KACPmQ,GAAOlQ,KAEPmQ,8MACFC,UAAY,SAAA3jB,GAAE,OAAI,kBAAMqV,EAAKvI,MAAM6W,UAAU3jB,oFAE7B,IAAAua,EAC8C7L,KAAK5B,MAAvDgH,EADIyG,EACJzG,oBAAqB8P,EADjBrJ,EACiBqJ,UAAWC,EAD5BtJ,EAC4BsJ,cAClCC,EAAWF,EAAU5jB,GAErB+jB,EAAc,CAChBzjB,GAAIoO,KAAK2R,QAAQ/f,GACjB0jB,SAAUtV,KAAK5B,MAAMkX,SACrBC,WAAYvV,KAAK5B,MAAMmX,WACvBC,UAAWxV,KAAK5B,MAAMoX,WAG1B,OAAQJ,GACJ,KAAKN,GACD,OACIvX,EAAAC,EAAAC,cAACgY,GAAA,EAADxkB,OAAAqQ,OAAA,CACIoU,gBAAiBP,GACbE,IAIhB,KAAKN,GACD,OACIxX,EAAAC,EAAAC,cAACgY,GAAA,EAADxkB,OAAAqQ,OAAA,CACI8D,oBAAqBA,EACrBuQ,QAASR,GACLE,IAGhB,QACI,OACI9X,EAAAC,EAAAC,cAACgY,GAAA,EAADxkB,OAAAqQ,OAAA,CACI6T,cAAeA,EACfC,SAAUA,EACVQ,YAAaV,EAAUjc,MACnBoc,sCAMf,IAAA/D,EAC0BtR,KAAK5B,MAA5B8W,EADH5D,EACG4D,UAAWzW,EADd6S,EACc7S,QACb2W,EAAWF,EAAU5jB,GAE3B,OACIiM,EAAAC,EAAAC,cAACoY,GAAArY,EAAD,CACItB,OAAQkZ,EACRZ,SAAS,KACTF,qBAAmB,EACnB7V,QAASA,GAER2W,GAAYpV,KAAK8V,gBAClBvY,EAAAC,EAAAC,cAACsY,GAAAvY,EAAD,KACID,EAAAC,EAAAC,cAACsM,EAAA,EAAD,CAAQiM,KAAK,YAAYrQ,QAASlH,GAC7B3K,IAAKC,EAAE,WAEZwJ,EAAAC,EAAAC,cAACsM,EAAA,EAAD,CAAQiM,KAAK,UAAUrQ,QAAS3F,KAAKiV,UAAUG,IAC1CthB,IAAKC,EAAE,qBA5DLgV,aA+E3BiM,GAAalD,aAAe,CACxBlgB,GAAImgB,IAAUC,QAGHgD,UCpGFiB,GAAuC,GAevCC,GAA2B,SAAA3f,GAAK,OAAIA,EAAM4f,sBCb1CC,GAA4B,SAAAze,GAAK,MAAK,CAC/CpG,KDNsC,6BCOtCoG,UCoBE0e,eACF,SAAAA,EAAYjY,GAAO,IAAAuI,EAAA,OAAA1V,OAAA2V,EAAA,EAAA3V,CAAA+O,KAAAqW,IACf1P,EAAA1V,OAAA4V,EAAA,EAAA5V,CAAA+O,KAAA/O,OAAA6V,EAAA,EAAA7V,CAAAolB,GAAAtP,KAAA/G,KAAM5B,KAOVkY,UAAY,SAACzD,EAAGtL,GACZZ,EAAKM,SAAS,CAAE8L,SAAUxL,EAAMyL,iBATjBrM,EAYnB4P,WAAa,WACT5P,EAAKM,SAAS,CAAE8L,SAAU,QAbXpM,EAgBnB6P,YAAc,WACV7P,EAAKM,SAAS,CAAE8L,SAAU,OAE1BpM,EAAKvI,MAAMqY,6BAnBI9P,EAsBnB+P,gBAAkB,SAAAplB,GACdqV,EAAKvI,MAAMuY,wBACPhQ,EAAKvI,MAAM2G,WAAWf,KAAK,SAAAkR,GAAS,OAAIA,EAAU5jB,KAAOA,MAxB9CqV,EA4BnBiQ,cAAgB,SAAApf,GAA4B,IAAzBqf,EAAyBrf,EAAzBqf,YAAahgB,EAAYW,EAAZX,MAC5B8P,EAAKvI,MAAM0Y,mBAAX7lB,OAAA+F,EAAA,EAAA/F,CAAA,GACO0V,EAAKvI,MAAM+W,cADlBlkB,OAAA2G,EAAA,EAAA3G,CAAA,GAEK4lB,EAAchgB,MA/BJ8P,EAmCnBoQ,gBAAkB,SAAA1mB,GAAsC,IAAnCwmB,EAAmCxmB,EAAnCwmB,YAAaG,EAAsB3mB,EAAtB2mB,gBAExBC,GADUtQ,EAAKvI,MAAM+W,cAAc0B,IAAgB,IACjCve,OACpB,SAAAvF,GAAI,OAAKikB,EAAgB7H,SAASpc,EAAKzB,MAGvC2lB,EAAQhnB,OACR0W,EAAKvI,MAAM0Y,mBAAX7lB,OAAA+F,EAAA,EAAA/F,CAAA,GACO0V,EAAKvI,MAAM+W,cADlBlkB,OAAA2G,EAAA,EAAA3G,CAAA,GAEK4lB,EAAcI,KAGnBtQ,EAAKvI,MAAM8Y,qBAAqBL,IA/CrBlQ,EAmDnBwQ,eAAiB,SAAAzmB,GAA8B,IAA3BmmB,EAA2BnmB,EAA3BmmB,YAAaO,EAAc1mB,EAAd0mB,QACvBC,EAAU1Q,EAAKvI,MAAM+W,cAAc0B,IAAgB,GACnDS,EAAgBF,EAAQtgB,IAAI,SAAAxF,GAAE,OAChC+lB,EAAQrT,KAAK,SAAAjR,GAAI,OAAIA,EAAKzB,KAAOA,MAGrCqV,EAAKvI,MAAM0Y,mBAAX7lB,OAAA+F,EAAA,EAAA/F,CAAA,GACO0V,EAAKvI,MAAM+W,cADlBlkB,OAAA2G,EAAA,EAAA3G,CAAA,GAEK4lB,EAAcS,MA3DJ3Q,EA+DnB4Q,WAAa,SAAAjmB,GACT,IAAMkmB,EAAc7Q,EAAKvI,MAAM+W,cAAc7jB,GAEzCkmB,GAAeA,EAAYvnB,OAC3B0W,EAAKvI,MAAMqZ,cAAc,CACrBnmB,KACAqG,MAAM1G,OAAA0H,EAAA,EAAA1H,CAAKumB,KAGf7Q,EAAKvI,MAAMsZ,iBAAiBpmB,GAGhCqV,EAAK6P,eAxEL7P,EAAKpQ,MAAQ,CACTwc,SAAU,MAJCpM,wEA8EV,IAAAkF,EAOD7L,KAAK5B,MALLgH,EAFCyG,EAEDzG,oBACA8P,EAHCrJ,EAGDqJ,UACAnQ,EAJC8G,EAID9G,WACA4S,EALC9L,EAKD8L,mBACAxC,EANCtJ,EAMDsJ,cAGJ,OACI5X,EAAAC,EAAAC,cAAAF,EAAAC,EAAAgU,SAAA,KACIjU,EAAAC,EAAAC,cAACsM,EAAA,EAAD,CAAQpE,QAAS3F,KAAKsW,WACjBxiB,IAAKC,EAAE,cACRwJ,EAAAC,EAAAC,cAACma,GAAApa,EAAD,OAEJD,EAAAC,EAAAC,cAACsW,GAAAvW,EAAD,CACItB,KAAM2b,QAAQ7X,KAAKzJ,MAAMwc,UACzBA,SAAU/S,KAAKzJ,MAAMwc,SACrBiB,aAAc,CAAEE,SAAU,SAAUD,WAAY,QAChDxV,QAASuB,KAAKuW,WACd7Y,MAAO,CAAE+D,OAAQ,SAEjBlE,EAAAC,EAAAC,cAACgY,GAAA,EAAD,CACI/X,MAAO,CAAE6D,MAAO,SAChBwD,WAAYA,EACZ+S,iBAAkB9X,KAAK0W,gBACvBqB,YAAaJ,KAGpBzC,EACG3X,EAAAC,EAAAC,cAACua,GAAD,CACI5S,oBAAqBA,EACrB8P,UAAWA,EACXC,cAAeA,EAAcD,EAAU5jB,KAAO,GAC9CgkB,SAAUtV,KAAK4W,cACfrB,WAAYvV,KAAK+W,gBACjBvB,UAAWxV,KAAKmX,eAChB1Y,QAASuB,KAAKwW,YACdvB,UAAWjV,KAAKuX,aAEpB,aAvHSxO,aAmJdnL,eAtBS,SAAArH,GAAK,MAAK,CAC9B6O,oBAAqBI,GAAgCjP,GACrD2e,UAAWgB,GAAyB3f,GACpCwO,WAAYD,GAAevO,GAC3BohB,mBAAoBtc,GAAgB9E,GACpC4e,cAAe7a,GAAwB/D,KAmBvC,CACIkgB,0BDvKmC,iBAAO,CAC9CllB,KDVwC,iCEiLpColB,wBAAyBP,GACzBqB,chDxKuB,SAAAnf,GAAM,MAAK,CACtC/G,KDV2B,kBCW3B+G,WgDuKIof,iBAAkBnc,GAClB2b,qBAAsBjc,GACtB6b,mBlDrK4B,SAAA7V,GAAO,MAAK,CAC5C1P,KFhBiC,wBEiBjC0P,akD2JWrD,CAUbyY,0BC9Ja4B,8MApBXC,MAAO,0EAIH,OADAlY,KAAKkY,MAAQlY,KAAKkY,KACXlY,KAAKkY,sCAGP,IAAA7G,EAAArR,KACL,OACIzC,EAAAC,EAAAC,cAAA,OAAKkI,QAAS,kBAAM0L,EAAKjT,MAAMuH,QAAQ0L,EAAK8G,YACxC5a,EAAAC,EAAAC,cAAC2a,GAAA5a,EAAD,CAAiBE,MAAO,CAAE0L,KAAMd,IAAOkH,mBAXpCzG,kCCqBbsP,GAAiBvkB,IAAKC,EAAE,kBAExBukB,eACF,SAAAA,EAAYla,GAAO,IAAAuI,EAAA,OAAA1V,OAAA2V,EAAA,EAAA3V,CAAA+O,KAAAsY,IACf3R,EAAA1V,OAAA4V,EAAA,EAAA5V,CAAA+O,KAAA/O,OAAA6V,EAAA,EAAA7V,CAAAqnB,GAAAvR,KAAA/G,KAAM5B,KAOVma,oBAAsB,kBAClB5R,EAAKM,SAAS,CAAEuR,qBAAsB7R,EAAKpQ,MAAMiiB,uBANjD7R,EAAKpQ,MAAQ,CACTiiB,qBAAqB,GAJV7R,wEAWV,IAAAkF,EAWD7L,KAAK5B,MATL9M,EAFCua,EAEDva,GACA2H,EAHC4S,EAGD5S,KACArD,EAJCiW,EAIDjW,YACA8D,EALCmS,EAKDnS,OACAgE,EANCmO,EAMDnO,MACA9C,EAPCiR,EAODjR,gBACApC,EARCqT,EAQDrT,QACAigB,EATC5M,EASD4M,YACAC,EAVC7M,EAUD6M,YAGEC,EAAa1nB,OAAOqQ,OAAO,GAAI5D,EAAM/H,MAAO,CAC9CijB,OAAQ,UACRC,WAAY,OACZ1Q,IAAK,QAGHc,EAAWzQ,EAAUmR,KAAOmP,KAElC,OACIvb,EAAAC,EAAAC,cAAAF,EAAAC,EAAAgU,SAAA,KACIjU,EAAAC,EAAAC,cAAA,OAAKsI,UAAWC,KAAQhQ,UACpBuH,EAAAC,EAAAC,cAAA,QAAMC,MAAOib,GAAa1f,GAC1BsE,EAAAC,EAAAC,cAAA,OAAKsI,UAAWC,KAAQlQ,SACpByH,EAAAC,EAAAC,cAAA,OACIsI,UAAWC,KAAQ/P,aACnB0P,QAAS8S,GAETlb,EAAAC,EAAAC,cAACwL,EAAD,CAAUvL,MAAO,CAAE0L,KAAMd,IAAOkH,YAEpCjS,EAAAC,EAAAC,cAAA,OAAKsI,UAAWC,KAAQ/P,cACpBsH,EAAAC,EAAAC,cAACsb,GAAD,CAAMpT,QAAS+S,KAEnBnb,EAAAC,EAAAC,cAAA,OAAKC,MAAO,CAAEsb,WAAY,SACrBtf,EAAOuf,OACJ1b,EAAAC,EAAAC,cAACmM,EAAA,EAAD,CACI7D,UAAWC,KAAQjQ,SACnB8T,GAAE,IAAA1Z,OAAMmB,EAAN,UAEFiM,EAAAC,EAAAC,cAACsM,EAAA,EAAD,KAASjW,IAAKC,EAAE,UAEpB,KACH2F,EAAOwf,OACJ3b,EAAAC,EAAAC,cAAA,QAAMC,MAAO,CAAE6Q,YAAa,QACxBhR,EAAAC,EAAAC,cAACsM,EAAA,EAAD,CAAQpE,QAAS3F,KAAKuY,qBACjBzkB,IAAKC,EAAE,WAGhB,KACJwJ,EAAAC,EAAAC,cAAA,QAAMC,MAAO,CAAE6Q,YAAa,QACxBhR,EAAAC,EAAAC,cAAC0b,GAAD,UAKfve,EACG2C,EAAAC,EAAAC,cAAA,OACIsI,UAAU,wBACVrI,MAAOzM,OAAOqQ,OACV,CAAE8X,WAAY,MAAO3Q,cAAe,OACpC/K,EAAM9H,YACLA,EAAkC,GAApB,CAAE4U,MAAO,UAG3B5U,GAAeyiB,IAEpB,KACH/mB,EACGiM,EAAAC,EAAAC,cAAC4b,GAAA7b,EAAD,CACI5L,GAAIoO,KAAK2R,QAAQ/f,GACjBN,GAAIA,EACJC,KAAK,YACL2K,KAAM8D,KAAKzJ,MAAMiiB,oBACjBc,eAAgBtZ,KAAKuY,sBAEzB,aAzFOxP,aA2G3BuP,GAAatP,aAAe,CACxB/P,KAAM,GACNrD,YAAa,GACb4C,SAAS,EACToC,iBAAiB,EACjB8d,YAAa,MAGjBJ,GAAaxG,aAAe,CACxBlgB,GAAImgB,IAAUC,QAGlB,IA4BepU,eA5BS,SAAArH,GACpB,IAAMjF,EAAKwJ,GAAevE,GACpBgC,EAAYP,YAASD,EAAkBxB,EAAOjF,IAEpD,MAAO,CACHA,KACA2H,KAAMV,EAAUW,YAChBtD,YAAa2C,EAAUY,mBACvBU,eAAgB1B,EAAmB5B,GACnCqE,gBAAiBI,GAA4BzE,GAC7CiC,QAASD,EAAUC,QACnBkB,OAAQ1B,YAASO,EAAUmB,UAmB/B,KAfe,SAACoV,EAAYC,EAAeC,GAAa,IAChD1d,EAAiCwd,EAAjCxd,GAAIkH,EAA6BsW,EAA7BtW,QAASoC,EAAoBkU,EAApBlU,gBACbqE,EAAa8P,EAAb9P,SAER,OAAOhO,OAAA+F,EAAA,EAAA/F,CAAA,GACA6d,EACAE,EAFP,CAGIyJ,YAAa,kBAAMxZ,EnC7EG,SAAC3N,EAAI2L,GAAL,sBAAAvM,EAAAO,OAAA4N,EAAA,EAAA5N,CAAA6N,EAAAtB,EAAAuB,KAAmB,SAAA4E,EAAM1E,GAAN,IAAAoB,EAAA3D,EAAA,OAAAoC,EAAAtB,EAAA2B,KAAA,SAAA0E,GAAA,cAAAA,EAAAxE,KAAAwE,EAAAvE,MAAA,cACvCe,EAAY,SAAA/O,GAEd,OADA2N,EAAS0D,GAAsBrR,EAAI2L,IAC5B3L,GAGLoL,EAAU,SAAAd,GAEZ,OADAC,QAAQC,IAAI,6BAA8BF,GACnCA,GARkCiI,EAAAxE,KAAA,EAAAwE,EAAAvE,KAAA,EAWnCtC,GAAiB1L,EAAI2L,GAXc,cAAA4G,EAAApE,OAAA,SAYlCY,EAAU/O,IAZwB,cAAAuS,EAAAxE,KAAA,EAAAwE,EAAAjE,GAAAiE,EAAA,SAAAA,EAAApE,OAAA,SAclC/C,EAAOmH,EAAAjE,KAd2B,yBAAAiE,EAAAhE,SAAA8D,EAAA,iBAAnB,gBAAAY,GAAA,OAAA7T,EAAAqP,MAAAC,KAAAhQ,YAAA,GmC6EMupB,CAAejoB,GAAKkH,KAChDkgB,YAAa,kBACTzZ,ExC3H0C,CAClD1N,Kb1CwC,+Ba2CxCoG,OwCyH+CiD,QAIpCgD,CAIb0a,IC1KI5a,YAAQ,CACV/H,MAAO,CACHqW,SAAU,WACVwN,SAAU,GACV7b,WAAY,IACZ6M,MAAOlC,IAAOmR,MACdC,SAAU,IAEd9jB,YAAa,CACT4jB,SAAU,GACVhP,MAAOlC,IAAO6B,WAyBPwP,GArBE,SAAAniB,GAAc,IAAXoiB,EAAWpiB,EAAXoiB,KAChB,OACIrc,EAAAC,EAAAC,cAAA,OACIsI,UAAU,mBACVrI,MAAO,CACHuQ,QAAS,uBAGZ2L,EACGrc,EAAAC,EAAAC,cAACoc,GAAD,CAAcnc,MAAOA,KAErBH,EAAAC,EAAAC,cAACqc,GAAD,CAAcpc,MAAOA,8DClB/Bqc,eAGF,SAAAA,EAAY3b,EAAOuT,GAAS,IAAAhL,EAAA,OAAA1V,OAAA2V,EAAA,EAAA3V,CAAA+O,KAAA+Z,IACxBpT,EAAA1V,OAAA4V,EAAA,EAAA5V,CAAA+O,KAAA/O,OAAA6V,EAAA,EAAA7V,CAAA8oB,GAAAhT,KAAA/G,KAAM5B,KAHV4b,kBAAoB,KAEQrT,EAM5BsT,mBAAqB,SAAAC,GAMjB,IAAMC,EAAgBxT,EAAKvI,MAAMrL,OAASmnB,EAAUnnB,KAE9CqnB,EAAiBF,EAAU9e,cAAgBuL,EAAKvI,MAAMhD,YACtDif,EAAMriB,YAAS2O,EAAKvI,MAAMkc,eAC1BC,EAAUviB,YAASkiB,EAAUI,eAC7BE,EACFH,EAAI/oB,KAAOipB,EAAQjpB,IAAM+oB,EAAII,aAAeF,EAAQE,WAExD,OAAON,IAAkBK,GAAcJ,IApBfzT,EAuB5B+T,aAAe,SAAAR,GACX,GACIS,KACIhU,EAAKvI,MAAMrL,KACX4T,EAAKvI,MAAMkc,gBAEf3T,EAAKsT,mBAAmBC,GAC1B,CACE,IAAMK,EAAUviB,YAASkiB,EAAUI,eAC7BM,EAAajU,EAAKvI,MAAMkc,cAExBO,EACFD,EAAWH,aAAeF,EAAQE,YAClCG,EAAWH,aAAe9T,EAAKvI,MAAMrL,KAAKxB,MAG1CspB,GACAlU,EAAKvI,MAAMhD,cAAgB8e,EAAU9e,eAErCuf,KACIhU,EAAKvI,MAAMrL,KACXwnB,EAAQE,YAAc9T,EAAKvI,MAAMrL,KAAKxB,MAG1CopB,KAAmBhU,EAAKvI,MAAMrL,KAAM4T,EAAKvI,MAAMkc,cAAe,CAC1DQ,YAAanU,EAAKqT,kBAClBS,WAAYI,EAAgBD,EAAWH,WAAa,UAjDxC9T,EA2E5BoU,cAAgB,kBACZpU,EAAKvI,MAAMkc,cAAcG,YAAc9T,EAAKvI,MAAMrL,KAAKxB,MAzEvDoV,EAAK/U,GAAK+f,EAAQ/f,GAHM+U,mFAVN,IAAA/U,EAkElBoO,KAAKga,mBAlEapoB,EAkEyBoO,KAAKpO,GAjE7C,CACHopB,QAAS5mB,YAAWxC,GACpBqpB,KAAMrpB,EAAGC,IAAIC,SAASopB,eAAeC,gBAkEjCR,KACI3a,KAAK5B,MAAMrL,KACXiN,KAAK5B,MAAMkc,gBAGfK,KAAmB3a,KAAK5B,MAAMrL,KAAMiN,KAAK5B,MAAMkc,cAAe,CAC1DQ,YAAa9a,KAAKga,kBAClBS,WAAaza,KAAK5B,MAAMiK,SAAkC,KAAvBrI,KAAK+a,6DAKjCb,GACfla,KAAK0a,aAAaR,oCAMb,IAAArO,EAC2C7L,KAAK5B,MAA7C4H,EADH6F,EACG7F,QAASjT,EADZ8Y,EACY9Y,KAAMunB,EADlBzO,EACkByO,cAAe5c,EADjCmO,EACiCnO,MAMtC,OAL0Bid,KACtB5nB,EACAunB,GAIA/c,EAAAC,EAAAC,cAAA,OAAKnM,GAAI8pB,YAAiBroB,EAAKzB,IAAKoM,MAAOA,IAE3CH,EAAAC,EAAAC,cAAA,OAAKsI,UAAWC,EAAQqV,SACnBvnB,IAAKC,EAAE,mDA5FIgV,aAkG5BgR,GAAcjI,aAAe,CACzBlgB,GAAImgB,IAAUC,QAYlB+H,GAAc/Q,aAAe,CACzBtL,MAAO,GACP3K,KAAM,GACNqI,YAAa,GACbkf,cAAe,IAGJP,UCnIFuB,GAAY,kBACrB/d,EAAAC,EAAAC,cAAA,OACIgE,OAAO,KACP0H,QAAQ,YACR5H,MAAM,KACN2H,MAAM,8BAEN3L,EAAAC,EAAAC,cAAA,QACIzE,EAAE,wOACFoQ,KAAK,cAKJmS,GAAe,kBACxBhe,EAAAC,EAAAC,cAAA,OACIgE,OAAO,KACP0H,QAAQ,YACR5H,MAAM,KACN2H,MAAM,6BACNxL,MAAO,CAAEmU,OAAQ,kBAEjBtU,EAAAC,EAAAC,cAAA,QACIzE,EAAE,kIACFoQ,KAAK,UACLoS,SAAS,UACTC,UAAU,uBAKTC,GAAU,kBACnBne,EAAAC,EAAAC,cAAA,OACIyL,MAAM,6BACNzH,OAAO,KACP0H,QAAQ,YACR5H,MAAM,KACN6H,KAAMd,IAAOkH,SAEbjS,EAAAC,EAAAC,cAAA,QAAMzE,EAAE,gBAAgBoQ,KAAK,SAC7B7L,EAAAC,EAAAC,cAAA,QAAMzE,EAAE,8ECCD2iB,eApCX,SAAAA,EAAYvd,GAAO,IAAAuI,EAAA,OAAA1V,OAAA2V,EAAA,EAAA3V,CAAA+O,KAAA2b,IACfhV,EAAA1V,OAAA4V,EAAA,EAAA5V,CAAA+O,KAAA/O,OAAA6V,EAAA,EAAA7V,CAAA0qB,GAAA5U,KAAA/G,KAAM5B,KACD7H,MAAQ,CACTqlB,YAAY,GAHDjV,iFAMD/K,EAAOigB,GACrB7b,KAAKiH,SAAS,CACV2U,YAAY,IAEhB/f,QAAQC,IAAI,UAAWF,GACvBC,QAAQC,IAAI,SAAU+f,oCAGtB,OAAI7b,KAAKzJ,MAAMqlB,WAEPre,EAAAC,EAAAC,cAAA,KAAGsI,UAAWC,KAAQ8V,WAClBve,EAAAC,EAAAC,cAAA,QAAMsI,UAAWC,KAAQ1Q,MACrBiI,EAAAC,EAAAC,cAACse,GAAD,OAEJxe,EAAAC,EAAAC,cAAA,QAAMsI,UAAWC,KAAQhK,SACpBlI,IAAKC,EACF,qDAMbiM,KAAK5B,MAAMwK,gBA7BOE,IAAMC,uDCgBxBiT,GAfU,SAAAxkB,GAAA,IAAGmO,EAAHnO,EAAGmO,QAAH,OACrBpI,EAAAC,EAAAC,cAAA,UACIlM,KAAK,SACLwU,UAAWC,KAAQpW,iBACnB+V,QAASA,EACThQ,MAAO7B,IAAKC,EAAL,gBAEPwJ,EAAAC,EAAAC,cAACwe,GAAAze,EAAD,CAAYE,MAAO,CAAE0L,KAAMd,IAAO4T,iCCJ7BC,GAAuB,GAE9BC,GAAatT,IAAMuT,WACrB,SAAA7kB,EAEI8kB,GACC,IAFCC,EAED/kB,EAFC+kB,OAAQ9Z,EAETjL,EAFSiL,sBAAuB+Z,EAEhChlB,EAFgCglB,cAAe7mB,EAE/C6B,EAF+C7B,MAAO0S,EAEtD7Q,EAFsD6Q,SAKvD,OACI9K,EAAAC,EAAAC,cAAA,OAAKsI,UAAWC,KAAQyW,eAAgBH,IAAKA,GACzC/e,EAAAC,EAAAC,cAAA,KAAGsI,UAAWC,KAAQ0W,WAAY/mB,GACjC0S,EACG9K,EAAAC,EAAAC,cAAA,OAAKsI,UAAWC,KAAQ2W,iBACpBpf,EAAAC,EAAAC,cAACmf,GAAD,CAAkBjX,QAPT,kBAAMlD,EAAsB8Z,OAUzCC,GACIjf,EAAAC,EAAAC,cAAA,OAAKsI,UAAWC,KAAQ2W,iBACnBH,MAqBvB5N,GAAqB,CACvBnM,0BAGW7E,eARS,SAAArH,GAAK,MAAK,CAC9B8R,SAAUnO,GAAc3D,KASxBqY,GACA,KACA,CAAEyN,YAAY,GAJHze,CAKbwe,mGC9BIS,GAAW,CAAEzT,KAAMd,IAAOkH,SA+HjBsN,GA7HW,SAAA1e,GAAS,IAAA2e,EACCC,mBAAS,MADVC,EAAAhsB,OAAAisB,GAAA,EAAAjsB,CAAA8rB,EAAA,GACxBhK,EADwBkK,EAAA,GACdE,EADcF,EAAA,GAGvBlqB,EAA4DqL,EAA5DrL,KAAMunB,EAAsDlc,EAAtDkc,cAAe8C,EAAuChf,EAAvCgf,mBAAoBxrB,EAAmBwM,EAAnBxM,GAAI6oB,EAAerc,EAAfqc,WAE/C4C,EAAgBjqB,YAAoBL,EAAKxB,MAEzC+rB,EAAc,WAChBC,IACAH,EAAmBC,EAAgBhrB,IAAeH,MAGhDsrB,EAAc,WAChBD,IACAH,EAAmBC,EAAgB/qB,IAAcH,MAG/CsrB,EAAY,WACdF,IACAH,EAAmBhrB,MAcjBmrB,EAAc,kBAAMJ,EAAY,OAEhC5rB,EAAO+oB,EAAc/oB,MAAQwB,EAAKxB,KAClCmsB,GACDC,aAAcpsB,KACdqsB,aAAersB,IAChBA,IAASssB,MACTtsB,IAASusB,KAEPC,EAA0B3f,EAAM4f,aAChClqB,IAAKC,EAAL,oCACAD,IAAKC,EAAL,oCA+BN,OAAOkqB,aAAkBlrB,EAAMunB,GAC3B/c,EAAAC,EAAAC,cAAAF,EAAAC,EAAAgU,SAAA,KACIjU,EAAAC,EAAAC,cAACsM,EAAA,EAAD,CAAQmU,OAAK,EAACC,WAAS,EAACxY,QArDR,SAACkN,EAAGtL,GAAJ,OAAc4V,EAAY5V,EAAMyL,iBAsD5CzV,EAAAC,EAAAC,cAAC2gB,GAAD,OAEHrL,GACGxV,EAAAC,EAAAC,cAACsW,GAAAvW,EAAD,CACItB,KAAM2b,QAAQ9E,GACdtU,QAAS8e,EACTxK,SAAUA,GAEVxV,EAAAC,EAAAC,cAACsM,EAAA,EAAD,KACK2T,GACGngB,EAAAC,EAAAC,cAAAF,EAAAC,EAAAgU,SAAA,KACIjU,EAAAC,EAAAC,cA3CJ,kBACpBF,EAAAC,EAAAC,cAAAF,EAAAC,EAAAgU,SAAA,KACKiJ,IAAetoB,KAASsoB,IAAenoB,KACpCiL,EAAAC,EAAAC,cAACsM,EAAA,EAAD,CACIuF,OAAK,EACL9F,MAAO1V,IAAKC,EAAE,iBACd4R,QAAS6X,EACTloB,KAAMiI,EAAAC,EAAAC,cAAC4gB,GAAA7gB,EAAD,CAAWE,MAAOmf,OAG/BpC,IAAevoB,KAAgBuoB,IAAepoB,KAC3CkL,EAAAC,EAAAC,cAACsM,EAAA,EAAD,CACIuF,OAAK,EACL9F,MAAO1V,IAAKC,EAAE,iBACd4R,QAAS2X,EACThoB,KAAMiI,EAAAC,EAAAC,cAAC6gB,GAAA9gB,EAAD,CAAWE,MAAOmf,OAvCX5pB,YAAWF,EAAKxB,OA0ChBkpB,IAAeroB,KAChCmL,EAAAC,EAAAC,cAACsM,EAAA,EAAD,CACIuF,OAAK,EACL9F,MAAO1V,IAAKC,EAAE,eACd4R,QAAS8X,EACTnoB,KAAMiI,EAAAC,EAAAC,cAAC8gB,GAAA/gB,EAAD,CAASE,MAAOmf,SAoBV,MACAtf,EAAAC,EAAAC,cAACsM,EAAA,EAAD,OAGRxM,EAAAC,EAAAC,cAACsM,EAAA,EAAD,CACIuF,OAAK,EACLha,KAAMiI,EAAAC,EAAAC,cAAC+gB,GAAAhhB,EAAD,CAAYE,MAAO,CAAE0L,KAAM,aACjCI,MAAO1V,IAAKC,EAAE,0BAA2B,CACrCP,QAASD,YAAWR,EAAKxB,QAE7Bse,KAAM4O,aAAQ1rB,EAAMnB,GACpB0Z,OAAO,WAEX/N,EAAAC,EAAAC,cAACsM,EAAA,EAAD,CACIuF,OAAK,EACLha,KAAMiI,EAAAC,EAAAC,cAACihB,GAAD,MACNlV,MAAOuU,EACPpY,QAhFU,WAC9BvH,EAAMugB,iBACW,OAAb5L,GACAwK,UAmFJ,4BC1IF7f,GAAQ,CACVkhB,gBAAiB,CACb1Q,UAAW,OACXzM,OAAQ,SAEZod,KAAM,CACFhN,OAAQ,eACRpQ,OAAQ,MACRqd,OAAQ,OACR1W,gBAAiBE,IAAOyW,UAI1BC,oLAEE,IAAMC,EAAWC,aAAMlf,KAAK5B,MAAMrL,MAElC,OACIwK,EAAAC,EAAAC,cAAA,OAAKsI,UAAU,yBACXxI,EAAAC,EAAAC,cAAA,MAAIC,MAAOA,GAAMmhB,OACjBthB,EAAAC,EAAAC,cAAA,OAAKC,MAAOA,GAAMkhB,iBACdrhB,EAAAC,EAAAC,cAAC0hB,GAAA3hB,EAAD,CACI5L,GAAIoO,KAAK2R,QAAQ/f,GACjBmB,KAAMiN,KAAK5B,MAAMrL,KACjBxB,KAAMyO,KAAK5B,MAAMrL,KAAKxB,KAAK2d,cAC3B5d,GAAI2tB,EACJzrB,QAAQ,uBAbPuV,aAqBzBiW,GAAWlN,aAAe,CACtBlgB,GAAImgB,IAAUC,OAAOC,YAOV+M,UC1BAI,GAlBI,SAAAC,GACf,IAAIC,OAAWpvB,EACXqvB,OAAYrvB,EAEhB,OAAO,WAAa,QAAA6c,EAAA/c,UAAAC,OAAT+c,EAAS,IAAAC,MAAAF,GAAAG,EAAA,EAAAA,EAAAH,EAAAG,IAATF,EAASE,GAAAld,UAAAkd,GAChB,OACIoS,GACAtS,EAAK/c,SAAWqvB,EAASrvB,QACzB+c,EAAKwS,MAAM,SAACC,EAAKC,GAAN,OAAYD,IAAQH,EAASI,KAEjCH,GAEXD,EAAWtS,EACXuS,EAAYF,EAAEtf,WAAF,EAAMiN,iDCJX2S,OARf,WACI,OACIpiB,EAAAC,EAAAC,cAAA,OAAKsI,UAAWC,KAAQ4Z,OACpBriB,EAAAC,EAAAC,cAACoiB,GAAAriB,EAAD,CAAkBuI,UAAWC,KAAQ8Z,kCCyBpCC,GAAb,SAAA5U,GAOI,SAAA4U,EAAY3hB,EAAOuT,GAAS,IAAAhL,EAAA,OAAA1V,OAAA2V,EAAA,EAAA3V,CAAA+O,KAAA+f,IACxBpZ,EAAA1V,OAAA4V,EAAA,EAAA5V,CAAA+O,KAAA/O,OAAA6V,EAAA,EAAA7V,CAAA8uB,GAAAhZ,KAAA/G,KAAM5B,KAPV7H,MAAQ,CACJypB,YAAY,EACZC,cAAc,EACdC,gBAAgB,GAGQvZ,EAwC5BwZ,aAAe,SAAC7F,EAAerZ,GAC3B,IAAKhQ,OAAOqK,KAAK2F,GAAShR,OACtB,OAAOqqB,EAIX,IAAM8F,EAAU9F,EAAclW,KAAKtN,IAAI,SAAAupB,GAAG,OAAApvB,OAAA+F,EAAA,EAAA/F,CAAA,GAAUovB,KAC9CC,EAAahG,EAAciG,QAAQzpB,IAAI,SAAAupB,GAAG,OAAApvB,OAAA+F,EAAA,EAAA/F,CAAA,GAAUovB,KACpDG,EAAalG,EAAcrZ,QAAQnK,IAAI,SAAAupB,GAAG,OAAApvB,OAAA+F,EAAA,EAAA/F,CAAA,GAAUovB,KAyB1D,OAvBApvB,OAAOqK,KAAK2F,GAASH,QAAQ,SAAA+V,GACzB,GAAI5V,EAAQ4V,GAAc,CACtB,IAAI4J,GAAiB,EAErB,CAACL,EAASE,EAAYE,GAAY1f,QAAQ,SAAA4f,GAAgB,OACtDA,EACKpoB,OAAO,SAAA+nB,GAAG,OAAIA,EAAInL,YAAc2B,IAChC/V,QAAQ,SAAAuf,GACLI,GAAiB,EACjBJ,EAAIxpB,MAAQoK,EAAQ4V,OAK3B4J,GACDD,EAAW7S,KAAK,CACZuH,UAAW2B,EACXhgB,MAAOoK,EAAQ4V,QAMxB5lB,OAAA+F,EAAA,EAAA/F,CAAA,GACAqpB,EADP,CAEIlW,KAAMgc,EACNG,QAASD,EACTrf,QAASuf,KA7EW7Z,EAiF5Bga,aAAevB,GAAW,kBAAMwB,SAjFJja,EAmF5BqT,kBAAoB,KAnFQrT,EAqF5Bka,mBAAqB,WACjB,IAAMpG,EAAa9T,EAAKoU,gBAClBT,EAAgB3T,EAAKma,+BACvBna,EAAKvI,MAAMkc,cACX3T,EAAKvI,MAAMrL,KAAKxB,KAChBkpB,GAGJ,IAAKH,EACD,OACI/c,EAAAC,EAAAC,cAAA,OAAKsI,UAAWC,KAAQqV,SACnBvnB,IAAKC,EAAE,uBAKpB,IAAMgtB,EACFpa,EAAKvI,MAAMrL,KAAKiuB,eAChBra,EAAKsa,UAAUC,QAAQC,aACvBhF,GACAiF,GAEEhjB,EAAKnN,OAAA+F,EAAA,EAAA/F,CAAA,GACJ0V,EAAKvI,MADD,CAEPkc,gBACAtU,aACAtI,MAAOiJ,EAAK0a,wBACRN,EACApa,EAAK2a,WAAa3a,EAAK2a,WAAWC,aAAe,KACjD5a,EAAKvI,MAAMiK,YAInB,OAAQoS,GACJ,KAAKxoB,IACL,KAAKE,IACL,KAAKD,IACD,OACIqL,EAAAC,EAAAC,cAAAF,EAAAC,EAAAgU,SAAA,KACM7K,EAAKpQ,MAAM2pB,eAIT,KAHA3iB,EAAAC,EAAAC,cAAA,OAAKsI,UAAWC,KAAQwb,cACpBjkB,EAAAC,EAAAC,cAACgkB,GAAD,OAGRlkB,EAAAC,EAAAC,cAACikB,GAAA,EAAD,CACI9vB,GAAI+U,EAAK/U,GACT0oB,cAAe3T,EAAKgb,qBAChBrH,EACAlc,EAAMhD,aAEVwmB,kBAAmBjb,EAAKib,kBACxBC,cAAc,EACdnkB,MAAOU,EAAMV,SAK7B,KAAKtL,IAED,GADAgM,EAAMkc,cAAcwH,WAAY,EAC5B1jB,EAAMrL,KAAKxB,OAASa,IAAK,CAGzB,IAAM2vB,EAAW3jB,EAAMkc,cAAcyH,SAASjrB,IAAI,SAAAupB,GAC9C,OACIA,EAAI2B,MAAM7S,SAAS,aACnBkR,EAAI2B,MAAM7S,SAAS,SAEZxI,EAAKgb,qBACRtB,EACAjiB,EAAMhD,aAIPilB,IAGXjiB,EAAMkc,cAANrpB,OAAA+F,EAAA,EAAA/F,CAAA,GACOmN,EAAMkc,cADb,CAEIyH,kBAMJ3jB,EAAMkc,cAAgB3T,EAAKgb,qBACvBvjB,EAAMkc,cACNlc,EAAMhD,aAId,OAAOmC,EAAAC,EAAAC,cAACwkB,GAAkB7jB,GAE9B,QAMI,OALAA,EAAMkc,cAAgB3T,EAAKgb,qBACvBvjB,EAAMkc,cACNlc,EAAMhD,aAGHmC,EAAAC,EAAAC,cAACwkB,GAAkB7jB,KAvLVuI,EA4L5Bib,kBAAoB,WAChBjb,EAAKM,SAAS,CACViZ,gBAAgB,KA9LIvZ,EAkM5BgY,eAAiB,WACbhY,EAAKM,SACD,CAAE+Y,YAAarZ,EAAKpQ,MAAMypB,YAC1BrZ,EAAKvI,MAAM8jB,qBAAqBvb,EAAKvI,MAAMrL,KAAKzB,MArM5BqV,EAyM5ByW,mBAAqB,SAAA7rB,GACbA,IAASoV,EAAKoU,kBAIlBJ,KAAsBhU,EAAKvI,MAAMrL,KAAM4T,EAAKoU,iBAE5CpU,EAAKvI,MAAMgf,mBAAmBzW,EAAKvI,MAAMkc,cAAchpB,GAAIC,KAhNnCoV,EAmN5BoU,cAAgB,kBACZpU,EAAKvI,MAAMkc,cAAcG,YAAc9T,EAAKvI,MAAMrL,KAAKxB,MApN/BoV,EAsN5BsX,kBAAoB,kBAChBtD,KACIhU,EAAKvI,MAAMrL,KACX4T,EAAKvI,MAAMkc,gBAzNS3T,EA4N5Bwb,gBAAkB,SAACpB,EAAkBqB,EAAgB/Z,GAKjD,MAAO,CAAE5G,OAJM4G,GACT+Z,GACArB,IA5NNpa,EAAK/U,GAAK+f,EAAQ/f,GAElB+U,EAAK2a,WAAaxY,IAAMuZ,YACxB1b,EAAKsa,UAAYnY,IAAMuZ,YAEvB1b,EAAKgb,qBAAuBvC,GAAWzY,EAAKwZ,cAE5CxZ,EAAKma,+BAAiC1B,GAClCkD,MAGJ3b,EAAK0a,wBAA0BjC,GAAWzY,EAAKwb,iBAdvBxb,EAPhC,OAAA1V,OAAAya,EAAA,EAAAza,CAAA8uB,EAAA5U,GAAAla,OAAA0a,EAAA,EAAA1a,CAAA8uB,EAAA,EAAA9b,IAAA,oBAAAtM,MAAA,eAAA4qB,EAAAtxB,OAAA4N,EAAA,EAAA5N,CAAA6N,EAAAtB,EAAAuB,KAAA,SAAAC,IAAA,OAAAF,EAAAtB,EAAA2B,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAF,EAAAQ,GAyBQI,KAAK5B,MAzBbgB,EAAAE,KAAA,EA2BkBqb,KAAoB3a,KAAK5B,MAAMrL,MA3BjD,OAAAqM,EAAA0E,GAAA1E,EAAAG,KAAAH,EAAAQ,GAyBmB4iB,sBAzBnBzb,KAAA3H,EAAAQ,GAAAR,EAAA0E,IA8BQ9D,KAAKiH,SAAS,CACVgZ,cAAc,IA/B1B,wBAAA7gB,EAAAS,SAAAb,EAAAgB,SAAA,yBAAAuiB,EAAAxiB,MAAAC,KAAAhQ,YAAA,KAAAiU,IAAA,qBAAAtM,MAAA,SAmCuBuiB,EAAWuI,IAEtBA,EAAUvC,gBACThG,EAAUI,gBAAkBta,KAAK5B,MAAMkc,eACpCJ,EAAU9e,cAAgB4E,KAAK5B,MAAMhD,aAEzC4E,KAAKiH,SAAS,CACViZ,gBAAgB,MA1ChC,CAAAjc,IAAA,SAAAtM,MAAA,WA2Oa,IAAA0Z,EAAArR,KAAA6L,EACmC7L,KAAK5B,MAArCrL,EADH8Y,EACG9Y,KAAMsV,EADTwD,EACSxD,SAAUjN,EADnByQ,EACmBzQ,YAChB4kB,EAAehgB,KAAKzJ,MAApBypB,WAEFxD,EACFjf,EAAAC,EAAAC,cAACilB,GAAD,CACI3vB,KAAMA,EACNunB,cAAeta,KAAK5B,MAAMkc,cAC1B8C,mBAAoBpd,KAAKod,mBACzBuB,eAAgB3e,KAAK2e,eACrB/sB,GAAIoO,KAAKpO,GACT6oB,WAAYza,KAAK+a,gBACjBiD,aAAche,KAAKzJ,MAAMypB,aAIjC,OACIziB,EAAAC,EAAAC,cAAAF,EAAAC,EAAAgU,SAAA,KACIjU,EAAAC,EAAAC,cAACklB,GAAD,CACIhtB,MAAOglB,KAAsB5nB,GAC7BwpB,OAAQxpB,EAAKzB,GACbkrB,cAAeA,EACfF,IAAKtc,KAAKihB,YAEd1jB,EAAAC,EAAAC,cAACmlB,GAAD,KACIrlB,EAAAC,EAAAC,cAAA,OACIwG,IAAKjE,KAAK2gB,aAAavlB,GACvB2K,UAAU,yBACVuW,IAAK,SAAAA,GAAG,OAAKjL,EAAKiQ,WAAahF,IAE9Btc,KAAKzJ,MAAM0pB,cAAgBjgB,KAAK6gB,wBAGvCxY,GAAY2X,EAAaziB,EAAAC,EAAAC,cAAColB,GAAD,CAAY9vB,KAAMA,IAAW,UA5QxEgtB,EAAA,CAA0BhX,aAkR1BgX,GAAKjO,aAAe,CAChBlgB,GAAImgB,IAAUC,QAalB+N,GAAK/W,aAAe,CAChBjW,KAAM,GACNsV,UAAU,EACV6Z,qBAAsBxV,SAASC,UAC/BvR,YAAa,GACbkf,cAAe,IAGnB,OAee1c,eAfS,SAACrH,EAAOyY,GAAR,MAAsB,CAC1C5T,YAAaD,GAAoB5E,GACjC+jB,cAAehe,GACX/F,EACAokB,KAA8B3L,EAASjc,MAAMzB,MAI1B,SAAA2N,GAAQ,MAAK,CACpCujB,sBAAuB,SAAAlI,GAAa,OAChCrb,EAASxC,GAAmB6d,KAChC8C,mBAAoB,SAAC9rB,EAAIC,EAAMkpB,GAAX,OAChBxb,EvD3UoC,SAAC3N,EAAImpB,GAO7C,MANe,CACXlpB,KDNqC,gCCOrCD,KACAmpB,cuDuUSqI,CAA6BxxB,EAAIC,OAGnCqM,CAGbmiB,ICxVIriB,GAAQ,CACV0K,gBAAiBE,IAAOya,QACxBjE,OAAQ,OACRrd,OAAQ,MACRoQ,OAAQ,mBAKGmR,GAFF,kBAAMzlB,EAAAC,EAAAC,cAAA,MAAIC,MAAOA,MCGxBulB,YAAU,WAEVC,IAAYC,GAAA,GAAAlyB,OAAA2G,EAAA,EAAA3G,CAAAkyB,GACbF,GAAU,WADGhyB,OAAA2G,EAAA,EAAA3G,CAAAkyB,GAAA,oBAEK,cAFLlyB,OAAA2G,EAAA,EAAA3G,CAAAkyB,GAAA,SAGN,UAHMlyB,OAAA2G,EAAA,EAAA3G,CAAAkyB,GAAA,SAIN,UAJMA,IAOZzlB,GAAQ,CACV1I,KAAM,CACFouB,cAAe,OACfC,YAAa,OAEjBC,OAAQ,CACJxd,UAAW,SACX0T,SAAU,OACV+J,aAAc,OAElBC,OAAQ,CACJhK,SAAU,OACViK,WAAY,OACZ5R,OAAQ,EACRrH,MAAOlC,IAAO6B,SAElBuZ,QAAS,CACLlZ,MAAOlC,IAAO6B,QACdqP,SAAU,OACViK,WAAY,OACZE,UAAW,OACXC,SAAU,WAIZC,8MACFttB,MAAQ,CACJH,SAAU,MAWd0tB,eAAiB,SAAAliB,GACb,IAAMmiB,EAAgBniB,EAAG,KAAAzR,OAAQyR,EAAIoiB,YAAZ,KAAA7zB,OAA2ByR,EAAItQ,IAAO,GAC/D,SAAAnB,OAAUwW,EAAKgL,QAAQqJ,QAAvB,wBAAA7qB,OAAqD4zB,MAGzDE,iBAAmB,SAAAriB,GACf,IAAMsiB,EAAYtiB,EAAInG,SAAS6X,OAAO,GAAG,GACzC,OAAO4Q,EAAUV,OAASU,EAAUV,OAAOtqB,YAAc,MAG7DirB,gBAAkB,WACd,IAAMC,EAAazd,EAAKvI,MAAMiK,SAAoB,KAAT,OAEzC,OAAO1B,EAAKvI,MAAM3C,SAAS3E,IAAI,SAAA8K,GAC3B,IAMM4hB,EACF5hB,EAAIoiB,cAAgBf,GACdtc,EAAKsd,iBAAiBriB,GACtBshB,GAAathB,EAAIoiB,aAErBK,EAAaziB,EAAI0iB,KAAkB,KAAX,SACxBJ,EAAYtiB,EAAInG,SAAS6X,OAAO,GAAG,GACnCiR,EAAUL,EAAUzqB,YAE1B,OACI8D,EAAAC,EAAAC,cAAA,MACIsI,UAAS,gBAAA5V,OAAkBi0B,GAC3BngB,IAAKrC,EAAItQ,GACTqU,QAnBc,WACbgB,EAAKvI,MAAMiK,WACZmc,SAASC,SAAS5U,KAAOlJ,EAAKmd,eAAeliB,MAmB7CrE,EAAAC,EAAAC,cAAA,KAAGsI,UAAS,iBAAA5V,OAAmBk0B,IAC1BziB,EAAI1I,YADT,KACwB0I,EAAI8iB,aAD5B,KAGAnnB,EAAAC,EAAAC,cAAA,KAAGC,MAAOA,GAAM8lB,QACXA,EADL,MACgBmB,YAAWJ,EAAS5d,EAAKpQ,MAAMH,WAE/CmH,EAAAC,EAAAC,cAAA,KAAGC,MAAOA,GAAMgmB,SAAUQ,EAAUvtB,2NAhDzBqJ,KAAK2R,QAAQ/f,GAAG0R,YAAYshB,aAAa7yB,IAC5D,sBADEqE,SAIN4J,KAAKiH,SAAS,CAAE7Q,gJAmDhB,OACImH,EAAAC,EAAAC,cAAAF,EAAAC,EAAAgU,SAAA,KACIjU,EAAAC,EAAAC,cAACklB,GAAD,CACIhtB,MAAO7B,IAAKC,EAAE,YACdwoB,OAAQvc,KAAK5B,MAAMrL,KAAKzB,KAE5BiM,EAAAC,EAAAC,cAAConB,GAAD,MACC7kB,KAAK5B,MAAM3C,SAASxL,OAAS,GAC1BsN,EAAAC,EAAAC,cAAA,OAAKsI,UAAU,0BACXxI,EAAAC,EAAAC,cAAA,MAAIC,MAAOA,GAAM1I,MAAOgL,KAAKmkB,mBAC7B5mB,EAAAC,EAAAC,cAAA,OAAKC,MAAOA,GAAM4lB,QACd/lB,EAAAC,EAAAC,cAAA,KAAGoS,KAAM7P,KAAK8jB,kBACThwB,IAAKC,EAAE,+BAzEbgV,aAyF3B8a,GAAa/R,aAAe,CACxBlgB,GAAImgB,IAAUC,OACdgJ,QAASjJ,IAAU+S,QAGvB,IAWeC,GALWnnB,YANF,SAAArH,GACpB,MAAO,CACHkF,SAAUxK,OAAOoH,OAAOmD,GAAiBjF,MAM7C,KAFsBqH,CAGxBimB,yBCpHamB,GA5BU,SAAA5mB,GAAK,OAC1Bb,EAAAC,EAAAC,cAAAF,EAAAC,EAAAgU,SAAA,KACIjU,EAAAC,EAAAC,cAACklB,GAAD,CACIhtB,MAAO7B,IAAKC,EAAE,qCAAsC,CAChDxC,KAAM6M,EAAMrL,KAAKxB,OAErBgrB,OAAQne,EAAMrL,KAAKzB,KAEvBiM,EAAAC,EAAAC,cAAA,OACIC,MAAO,CACH2Q,QAAS,OACT4W,eAAgB,SAChBC,WAAY,SACZzjB,OAAQ,QAGZlE,EAAAC,EAAAC,cAAC0nB,GAAA3nB,EAAD,CACIE,MAAO,CAAE6D,MAAO,IAAKE,OAAQ,IAAK2jB,MAAO,UACzC5a,MAAM,gBCJP9V,GAhBS,SAAA8C,GAAA,IAAGuO,EAAHvO,EAAGuO,UAAH,OACpBxI,EAAAC,EAAAC,cAAA,OACIsI,UAAWA,EACXmD,MAAM,6BACNC,QAAQ,YACRC,KAAMd,IAAO+c,SAEb9nB,EAAAC,EAAAC,cAAA,QAAMzE,EAAE,gBAAgBoQ,KAAK,SAC7B7L,EAAAC,EAAAC,cAAA,QAAMzE,EAAE,qICUDssB,GAlBI,SAAA9tB,GAAA,IAAGuO,EAAHvO,EAAGuO,UAAH,OACfxI,EAAAC,EAAAC,cAAA,OACIsI,UAAWA,EACXmD,MAAM,6BACN3H,MAAM,KACNE,OAAO,KACP0H,QAAQ,YACRC,KAAMd,IAAO4T,QAEb3e,EAAAC,EAAAC,cAAA,QAAMzE,EAAE,kFACRuE,EAAAC,EAAAC,cAAA,QAAMzE,EAAE,gBAAgBoQ,KAAK,gCCA/Bmc,GAAe,SAAAxyB,GAAI,OAAIC,IAAYD,EAAKxB,MAAMsC,aAQ9C2xB,GAAW,SAACpnB,EAAOuT,GAAY,IACzB5e,EAA2CqL,EAA3CrL,KAAMsV,EAAqCjK,EAArCiK,SAAUod,EAA2BrnB,EAA3BqnB,uBAClBC,EARc,SAAA3yB,GAAI,OACxB6G,YAAQ7G,EAAKC,IAAYD,EAAKxB,MAAMqC,WAAW0E,OAC3C,SAACvF,EAAM4yB,EAAOC,GAAd,OACIA,EAAMvT,UAAU,SAAAwT,GAAE,OAAIA,EAAGv0B,KAAOyB,EAAKzB,OAAQq0B,IAKhCG,CAAgB/yB,GA0BrC,OACIwK,EAAAC,EAAAC,cAAAF,EAAAC,EAAAgU,SAAA,KACIjU,EAAAC,EAAAC,cAACklB,GAAD,CAAYhtB,MAAO4vB,GAAaxyB,GAAOwpB,OAAQxpB,EAAKzB,KACpDiM,EAAAC,EAAAC,cAAConB,GAAD,MACAtnB,EAAAC,EAAAC,cAAA,OAAKsI,UAAU,0BACXxI,EAAAC,EAAAC,cAAA,MAAIsI,UAAWC,KAAQhR,MAClB0wB,EAAa5uB,IAAI,SAAAivB,GAAW,OACzBxoB,EAAAC,EAAAC,cAAA,MAAIsI,UAAWC,KAAQjT,KAAMkR,IAAK8hB,EAAYz0B,IAC1CiM,EAAAC,EAAAC,cAACuoB,GAAD,CAAiBjgB,UAAWC,KAAQ/Q,WAhC5C,SAAA8wB,GACZ,IAAME,EACF1oB,EAAAC,EAAAC,cAAA,UACIsI,UAAWC,KAAQ5Q,aACnBuQ,QAAS,kBAAM8f,EAAuB1yB,EAAMgzB,KAE5CxoB,EAAAC,EAAAC,cAACyoB,GAAD,CAAYngB,UAAWC,KAAQ7Q,cAIvC,OACIoI,EAAAC,EAAAC,cAAAF,EAAAC,EAAAgU,SAAA,KACIjU,EAAAC,EAAAC,cAAA,KACIsI,UAAWC,KAAQ9Q,KACnBwI,MAAO,CAAE8M,MAAOlC,IAAO6d,SACvBtW,KAAM5b,YAAWlB,EAAKxB,KAAMw0B,EAAapU,EAAQ/f,KAEhDm0B,EAAY9sB,MAEhBoP,EAAW4d,EAAe,MAcdxH,CAAQsH,UAerCP,GAAS1T,aAAe,CACpBlgB,GAAImgB,IAAUC,QAGHpU,mBACX,KACA,CACI6nB,uBC3E8B,SAACvT,EAAe5P,GAAhB,OAA4B,SAAArD,GAC9D,IAAMkT,EAAenf,IAAYkf,EAAc3gB,MAAMqC,SAE/CwyB,EAAalU,EAAcC,GAAc7Z,OAC3C,SAAAvF,GAAI,OAAIA,EAAKzB,KAAOgR,EAAQhR,KAG5B80B,EAAWn2B,QACXiiB,EAAcC,GAAgBiU,EAC9BnnB,EAASuD,GAAsB0P,KAE/BjT,EAASwD,GAAsByP,OD6DxBtU,CAKb4nB,cElEI9nB,GAAQ,CACV2d,QAAS,CACLpN,QAAS,OACToY,WAAY,WACZ5C,WAAY,QAEhB6C,UAAW,CACP9M,SAAU,OACV+M,YAAa,SACbhlB,MAAO,MACPsQ,OAAQ,SACRxD,QAAS,QACToV,WAAY,QAEhB3H,UAAW,CACPyH,aAAc,OACdnU,UAAW,SAoEJxR,eAnBS,SAACrH,EAAOyY,GAC5B,IAIMjc,GAJQic,EAAS3G,SACjBjO,GAAuB7D,GACvB4B,EAAmB5B,IAENyN,KAAK,SAAAjR,GAAI,OAAIA,EAAKzB,KAAO0d,EAASjc,KAAKzB,KAE1D,MAAO,CACHqF,KAAM5D,EAAOA,EAAK4D,KAAO,KAa7B,CACI6L,0BAHO5E,CAhEE,SAAAQ,GAAS,IACdrL,EAAgDqL,EAAhDrL,KAAMsV,EAA0CjK,EAA1CiK,SAAU1R,EAAgCyH,EAAhCzH,KAAM6L,EAA0BpE,EAA1BoE,sBAExBgkB,EAAe,SAAAjf,GACjB,IAAMkf,EAAWx1B,OAAA+F,EAAA,EAAA/F,CAAA,GACV8B,EADU,CAEb4D,KAAM4Q,EAAM+D,OAAO3T,QAGvB6K,EAAsBikB,IAiC1B,OAAOlpB,EAAAC,EAAAC,cAAAF,EAAAC,EAAAgU,SAAA,KAAGnJ,EAnBF9K,EAAAC,EAAAC,cAAAF,EAAAC,EAAAgU,SAAA,KACIjU,EAAAC,EAAAC,cAACklB,GAAD,CAAYhtB,MAAO7B,IAAKC,EAAE,aAAcwoB,OAAQxpB,EAAKzB,KACrDiM,EAAAC,EAAAC,cAAConB,GAAD,MACAtnB,EAAAC,EAAAC,cAAA,OAAKsI,UAAU,0BACXxI,EAAAC,EAAAC,cAACipB,GAAA,OAAD,CAAgBC,OAAQH,GACpBjpB,EAAAC,EAAAC,cAAC4O,GAAA7O,EAAD,CACI7F,MAAOhB,EACPiwB,WAAS,EACTC,WAAS,EACTnpB,MAAOA,GAAM4oB,UACb/Z,YAAazY,IAAKC,EAAE,iBACpByY,SAAUga,OAtBjB,WACb,IAAMM,EAAe71B,OAAOqQ,OAAO,GAAI5D,GAAM4oB,UAAW5oB,GAAM2d,SAC9D,OACI9d,EAAAC,EAAAC,cAAA,OAAKsI,UAAU,yBAAyBrI,MAAOA,GAAMoe,WACjDve,EAAAC,EAAAC,cAACipB,GAAA,OAAD,CAAgBhpB,MAAOopB,GAAenwB,IA0BhBowB,MCrEhCC,GAAe,SAACC,EAAYl0B,EAAMqI,GACpC,IAAI8rB,EAAS,GAAA/2B,OAAM82B,EAAW9yB,UAAjB,qBAAAhE,OAA8C4C,EAAKzB,IAEhE,GACI8J,GACAA,EAAW,IACXA,EAAW,GAAkBnL,OAC/B,CACE,IAAMk3B,EAAQ/rB,EAAW,GAAkBtE,IACvC,SAAAswB,GAAM,OAAIA,EAAO7tB,MAAM,KAAK+Z,OAAO,GAAG,KAG1C4T,GAAS,gBAAA/2B,OAAoBg3B,EAAM32B,KAAK,MAG5C,OAAO02B,GAGLG,GAAU,SAAA7vB,EAAwBma,GAAY,IAC5CsV,EADWl0B,EAAiCyE,EAAjCzE,KAAMqI,EAA2B5D,EAA3B4D,YAGfksB,EAASv0B,EAAKu0B,OAQpB,OANIA,IACAL,EAAatV,EAAQ/f,GAAG21B,OAAOC,cAAcxjB,KACzC,SAAAyjB,GAAG,OAAIA,EAAIxjB,MAAQqjB,KAIpBL,GAAcA,EAAWhuB,MAAQguB,EAAW9yB,UAC/CoJ,EAAAC,EAAAC,cAAAF,EAAAC,EAAAgU,SAAA,KACIjU,EAAAC,EAAAC,cAACklB,GAAD,CAAYhtB,MAAOsxB,EAAWhuB,KAAMsjB,OAAQxpB,EAAKzB,KACjDiM,EAAAC,EAAAC,cAAConB,GAAD,MACAtnB,EAAAC,EAAAC,cAAA,UACI9H,MAAOsxB,EAAWhuB,KAClByuB,IAAKV,GAAaC,EAAYl0B,EAAMqI,GACpC2K,UAAU,yBACVrI,MAAO,CAAEohB,OAAQ,WAIzBvhB,EAAAC,EAAAC,cAAAF,EAAAC,EAAAgU,SAAA,KACIjU,EAAAC,EAAAC,cAACklB,GAAD,CAAYhtB,MAAK,GAAAxF,OAAKm3B,EAAL,oBACjB/pB,EAAAC,EAAAC,cAAConB,GAAD,MACAtnB,EAAAC,EAAAC,cAAA,OACIsI,UAAU,yBACVrI,MAAO,CACH2Q,QAAS,OACT4W,eAAgB,SAChBC,WAAY,SACZzjB,OAAQ,QAGZlE,EAAAC,EAAAC,cAAC0nB,GAAA3nB,EAAD,CACIgN,MAAM,WACN3E,UAAQ,EACRnI,MAAO,CAAE6D,MAAO,IAAKE,OAAQ,IAAK2jB,MAAO,eAY7DiC,GAAQvV,aAAe,CACnBlgB,GAAImgB,IAAUC,QAGlB,IAIepU,eAJS,SAAArH,GAAK,MAAK,CAC9B6E,YAAaD,GAAoB5E,KAGtBqH,CAAyBypB,IC/ElC3pB,GAAQ,CACVmU,OAAQ,YACR2H,SAAU,OACViK,WAAY,OACZjZ,MAAOlC,IAAOkH,SAoBHmY,GAjBI,SAAAvpB,GACf,OACIb,EAAAC,EAAAC,cAAAF,EAAAC,EAAAgU,SAAA,KACIjU,EAAAC,EAAAC,cAACklB,GAAD,CAAYhtB,MAAO7B,IAAKC,EAAE,UAAWwoB,OAAQne,EAAMrL,KAAKzB,KACxDiM,EAAAC,EAAAC,cAAA,KAAGC,MAAOA,IACL5J,IAAKC,EACF,iFCiCPgsB,GAAO,SAAA3hB,GAChB,IAAMwpB,EA3BU,SAAAr2B,GAChB,OAAQA,GACJ,KAAKU,IACL,KAAKC,IACL,KAAKC,IACL,KAAKC,IACL,KAAKE,IACL,KAAKD,IACD,OAAOw1B,GACX,KAAKl1B,IACD,OAAOkxB,GACX,KAAKrxB,IACL,KAAKC,IACL,KAAKC,IACD,OAAO8yB,GACX,KAAK5yB,IACD,OAAOk1B,GACX,KAAKj1B,IACD,OAAO80B,GACX,KAAKp1B,IACD,OAAO80B,GACX,QACI,OAAOrC,IAKE+C,CAAY3pB,EAAMrL,KAAKxB,MAExC,OACIgM,EAAAC,EAAAC,cAACmqB,EAAD,CACI70B,KAAMqL,EAAMrL,KACZsV,SAAUjK,EAAMiK,SAChBjN,YACIgD,EAAMiK,SAAWnN,GAA6BkD,EAAMhD,YAExD8mB,qBAAsB9jB,EAAM8jB,wBCzCzB8F,GAlBiB,SAAAxwB,GAAA,IAAGb,EAAHa,EAAGb,KAAH,OAC5B4G,EAAAC,EAAAC,cAAA,OACIC,MAAO,CACHuQ,QAAS,YACTnI,UAAW,SACX0T,SAAU,OACV7b,WAAY,IACZ6M,MAAOlC,IAAOkH,UAGjB7Y,8DCNHsxB,8MAaF1xB,MAAQ,CACJ2xB,YAAY,KAEhBC,aAAe,OACfC,kBAAoB,sFAGhB,IAAMC,EAAWroB,KAAK5B,MAAMkqB,aAAenhB,OAAOohB,YAElD,GAAKvoB,KAAKmoB,aAAV,CAIA,IAAMK,EAAOxoB,KAAKmoB,aAAaM,wBAE3BD,EAAKE,QAAUL,GACfG,EAAKrgB,IAAMhB,OAAOohB,YAAcF,IAEhCroB,KAAKiH,SAAS,CACVihB,YAAY,IAGhBloB,KAAK2oB,4DAIK,IAAAtX,EAAArR,KACdA,KAAKooB,kBAAoBte,KACrB,kBAAMuH,EAAKuX,mBACX5oB,KAAK5B,MAAMyqB,YAGf1hB,OAAOC,iBAAiB,SAAUpH,KAAKooB,2DAGvCjhB,OAAOW,oBAAoB,SAAU9H,KAAKooB,+DAI1CpoB,KAAK8oB,kBACL9oB,KAAK4oB,iEAIL5oB,KAAK2oB,iDAGA,IAAAI,EAAA/oB,KAAA6L,EAC4C7L,KAAK5B,MAA9CwK,EADHiD,EACGjD,SAAU7C,EADb8F,EACa9F,UAAWrI,EADxBmO,EACwBnO,MAAUU,EADlCnN,OAAA+3B,GAAA,EAAA/3B,CAAA4a,EAAA,kCAEGqc,EAAeloB,KAAKzJ,MAApB2xB,WAEFe,EAAaC,KAAK9qB,EAAO,CAC3B,cACA,eACA,YACA,eAGJ,OACIb,EAAAC,EAAAC,cAAA,MAAAxM,OAAAqQ,OAAA,CACIgb,IAAK,SAAAA,GAAG,OAAKyM,EAAKZ,aAAe7L,GACjC5e,MAAOA,EACPqI,UAAWA,GACPkjB,GAEHf,GAActf,UA9EWG,aAApCkf,GAQKjf,aAAe,CAClB6f,WAZkB,IAalBP,aAZoB,KAsFbL,UCjDTkB,GAAkB,GAEX/H,GAA8B,EAE9BgI,GAAb,SAAAje,GAAA,SAAAie,IAAA,IAAAtc,EAAAnG,EAAA1V,OAAA2V,EAAA,EAAA3V,CAAA+O,KAAAopB,GAAA,QAAArc,EAAA/c,UAAAC,OAAA+c,EAAA,IAAAC,MAAAF,GAAAG,EAAA,EAAAA,EAAAH,EAAAG,IAAAF,EAAAE,GAAAld,UAAAkd,GAAA,OAAAvG,EAAA1V,OAAA4V,EAAA,EAAA5V,CAAA+O,MAAA8M,EAAA7b,OAAA6V,EAAA,EAAA7V,CAAAm4B,IAAAriB,KAAAhH,MAAA+M,EAAA,CAAA9M,MAAA7P,OAAA6c,MACIzW,MAAQ,CACJ8yB,cAAe,IAFvB1iB,EAKIub,qBAAuB,SAAAoH,GACnB,IAAMC,EAC6C,mBAAxC5iB,EAAKpQ,MAAM8yB,cAAcC,IAC1B3iB,EAAKpQ,MAAM8yB,cAAcC,GAG7BD,EAAap4B,OAAA+F,EAAA,EAAA/F,CAAA,GAAQ0V,EAAKpQ,MAAM8yB,eACtCA,EAAcC,IAAcC,EAC5B5iB,EAAKM,SAAS,CAAEoiB,mBAbxB1iB,EAgBI6iB,aAAe,SAAAF,GACX3iB,EAAKvI,MAAMqE,sBAAsB6mB,IAjBzC3iB,EA0BI8iB,eAAiB,SAAAC,GACT/iB,EAAKvI,MAAMwb,MACXjT,EAAKvI,MAAMurB,wBAAwBD,IA5B/C/iB,EAgCIijB,aAAe,SAACC,EAAQC,EAAS7Y,GAC7B8Y,YAAa9Y,EAAQyO,GAErB,IAAMxN,EAAgBvL,EAAKvI,MAAMvE,eAAemK,KAC5C,SAAAjR,GAAI,OAAIA,EAAKzB,KAAO2f,EAAQyO,IAI5BxN,GAAiBpf,YAAoBof,IACrC8X,aAAa9X,IAzCzBvL,EA6CIsjB,oBAAsB,SAAA34B,GAAE,OAAI,kBAAMqV,EAAK6iB,aAAal4B,KA7CxDqV,EA+CIujB,wBAA0B,SAAAhY,GACtB,IAAMiY,EAAexjB,EAAKpQ,MAAM8yB,cAAcnX,EAAc5gB,IAE5D,OAAI64B,IAAiC,IAAjBA,EACTl5B,OAAOqQ,OAAO,GAAI4Q,EAAe,CACpCxQ,EAAGwQ,EAAcxQ,EAAIynB,KAItBjX,GAxDfvL,EA2DIyjB,iBAAmB,SAAAr3B,GACf,IAAMs3B,EAAiB,CACnBt3B,EAAKxB,KACLoV,EAAKvI,MAAMwb,KAAO,OAAS,QAC7BppB,KAAK,KAEP,OACI+M,EAAAC,EAAAC,cAAC6sB,GAAD,CACIrmB,IAAKlR,EAAK2sB,EACV3Z,UAAWskB,GAEX9sB,EAAAC,EAAAC,cAAC8sB,GAAD,CACIx3B,KAAMA,EACNsV,SAAU1B,EAAKvI,MAAMwb,KACrBsI,qBAAsBvb,EAAKub,yBAzE/Cvb,EA+EI6jB,kBAAoB,SAAA3zB,GAAK,OAAIA,EAAMC,IAAI,SAAA/D,GAAI,OAAI4T,EAAKyjB,iBAAiBr3B,MA/EzE4T,EAAA,OAAA1V,OAAAya,EAAA,EAAAza,CAAAm4B,EAAAje,GAAAla,OAAA0a,EAAA,EAAA1a,CAAAm4B,EAAA,EAAAnlB,IAAA,4BAAAtM,MAAA,SAoB8BiU,GAClBA,EAAUgO,MACV5Z,KAAKiH,SAAS,CAAEoiB,cAAe,OAtB3C,CAAAplB,IAAA,SAAAtM,MAAA,WAiFa,IAAAkU,EACuC7L,KAAK5B,MAAzCwb,EADH/N,EACG+N,KAAMjf,EADTkR,EACSlR,UAAWd,EADpBgS,EACoBhS,eAEzB,IAAKc,IAAcd,EAAe5J,OAC9B,OACIsN,EAAAC,EAAAC,cAACgtB,GAAD,CACI9zB,KAAM7C,IAAKC,EAAE,0CAKzB,IAAM8C,EAAQ+iB,EACR/f,EACAA,EAAe/C,IAAIkJ,KAAKkqB,yBAE9B,OACI3sB,EAAAC,EAAAC,cAAA,OAAKsI,UAAU,gBACVpL,EACG4C,EAAAC,EAAAC,cAACsM,EAAA,EAAD,KACIxM,EAAAC,EAAAC,cAACsM,EAAA,EAAD,OAEJ,KACJxM,EAAAC,EAAAC,cAACitB,GAAAltB,EAAD,CACIisB,eAAgBzpB,KAAKypB,eACrBG,aAAc5pB,KAAK4pB,aACnB7jB,UAAU,SACV8jB,OAAQhzB,EACRgb,OAAQ8Y,IACRC,KAAMC,cACNC,UAAWC,IACXxpB,MAAO4F,OAAO6jB,WACdC,YAAaC,IACbC,YAAavR,EACbwR,YAAaxR,EACbyR,gBAAgB,kBAEfrrB,KAAKwqB,kBAAkB3zB,SArH5CuyB,EAAA,CAA8BrgB,aAoI9BqgB,GAASpgB,aAAe,CACpBnP,eAAgB,IAKpB,IAeM+U,GAAqB,CACvB+a,wB7D7ImC,SAAAhyB,GAAK,MAAK,CAC7CpG,KnBhDqC,4BmBiDrCoG,U6D4IA8K,0BAeW7E,eAhCS,SAACrH,EAAOyY,GAC5B,IAAM6F,EAAoB7F,EAAS4K,KAC7B5f,GAAsBzD,GACtBwB,EAAkBxB,EAAOuE,GAAevE,IAExCsD,EAAiBmV,EAAS4K,KAC1Bxf,GAAuB7D,GACvB4B,EAAmB5B,GAEzB,MAAO,CACHoE,UAAWI,GAAsBxE,KAAWse,EAC5Chb,mBAuBJ+U,GAde,SAACE,EAAYC,EAAeC,GAC3C,IAAMsc,EAAa1xB,YAAQkV,EAAWjV,gBAAgBvB,OAAOizB,KAE7D,OAAOt6B,OAAA+F,EAAA,EAAA/F,CAAA,GACA8d,EADP,CAEI6K,KAAM5K,EAAS4K,KACfjf,UAAWmU,EAAWnU,UACtBd,eAAgByxB,EAChBvB,oBAIOnsB,CAIbwrB,eCtNIoC,GAAS,CACXC,eAAgB,CACZ5Z,OAAQ,MACR5D,QAAS,SACTyd,aAAc,MACdlhB,MAAOlC,IAAOE,MACdJ,gBAAiB,UACjB3G,OAAQ,GACR4M,QAAS,OACT6W,WAAY,UAEhByG,MAAO,CACHnS,SAAU,OACVZ,OAAQ,UACRyN,WAAY,UAEhBuF,YAAa,CACTpS,SAAU,OACVlL,eAAgB,YAChB0K,WAAY,OACZJ,OAAQ,YAIViT,8MACFlmB,QAAU,SAAArU,GAAE,OAAI,kBAAMqV,EAAKvI,MAAMuH,QAAQrU,OACzCw6B,SAAW,SAAAx6B,GAAE,OAAI,kBAAMqV,EAAKvI,MAAM0tB,SAASx6B,6EAElC,IACGwH,EAASkH,KAAK5B,MAAdtF,KAER,OACIyE,EAAAC,EAAAC,cAAA,OAAKC,MAAO8tB,GAAOC,gBACfluB,EAAAC,EAAAC,cAAA,QAAMC,MAAO8tB,GAAOG,MAAOhmB,QAAS3F,KAAK2F,QAAQ7M,EAAKxH,KAAtD,GAAAnB,OACQ2I,EAAKG,KADb,MAAA9I,OAEQ2I,EAAKT,OAAOpI,OAAS,EACf6D,IAAKC,EAAE,qBAAsB,CACzBg4B,MAAOjzB,EAAKT,OAAOpI,SAEvB6I,EAAKT,OAAO,GAAGY,OAG7BsE,EAAAC,EAAAC,cAAA,QACIC,MAAO8tB,GAAOI,YACdjmB,QAAS3F,KAAK8rB,SAAShzB,EAAKxH,KAE3BwC,IAAKC,EAAE,mBAtBFgV,aAmC1B8iB,GAAY7iB,aAAe,CACvBrD,QAAS+G,SAASC,UAClBmf,SAAUpf,SAASC,WAGRkf,gCCtDFG,GAAb,SAAA7gB,GAAA,SAAA6gB,IAAA,IAAAlf,EAAAnG,EAAA1V,OAAA2V,EAAA,EAAA3V,CAAA+O,KAAAgsB,GAAA,QAAAjf,EAAA/c,UAAAC,OAAA+c,EAAA,IAAAC,MAAAF,GAAAG,EAAA,EAAAA,EAAAH,EAAAG,IAAAF,EAAAE,GAAAld,UAAAkd,GAAA,OAAAvG,EAAA1V,OAAA4V,EAAA,EAAA5V,CAAA+O,MAAA8M,EAAA7b,OAAA6V,EAAA,EAAA7V,CAAA+6B,IAAAjlB,KAAAhH,MAAA+M,EAAA,CAAA9M,MAAA7P,OAAA6c,MACIif,cAAgB,SAAA36B,GACZqV,EAAKvI,MAAMsZ,iBAAiBpmB,GAC5BqV,EAAKvI,MAAM8Y,qBAAqB5lB,IAHxCqV,EAMIulB,aAAe,SAAA56B,GACXqV,EAAKvI,MAAMuY,wBAAwB,CAC/BrlB,KACA2H,KAAM0N,EAAKvI,MAAM6C,QAAQ+C,KAAK,SAAAjR,GAAI,OAAIA,EAAKzB,KAAOA,IAAI2H,QATlE0N,EAAA,OAAA1V,OAAAya,EAAA,EAAAza,CAAA+6B,EAAA7gB,GAAAla,OAAA0a,EAAA,EAAA1a,CAAA+6B,EAAA,EAAA/nB,IAAA,SAAAtM,MAAA,WAaa,IAAA0Z,EAAArR,KAAA6L,EACyB7L,KAAK5B,MAA3B6C,EADH4K,EACG5K,QAAS+B,EADZ6I,EACY7I,SACXmF,EAAM3B,GAAaxD,GAAY,GAErC,OAAO/B,EAAQhR,OACXsN,EAAAC,EAAAC,cAAA,OAAKsI,UAAWC,KAAQnW,IAAK6N,MAAO,CAAEyK,QACjClH,EAAQnK,IAAI,SAAAwB,GAAM,OACfiF,EAAAC,EAAAC,cAAC0uB,GAAD,CACIloB,IAAK3L,EAAOhH,GACZwH,KAAMR,EACNqN,QAAS0L,EAAK6a,aACdJ,SAAUza,EAAK4a,mBAI3B,SA5BZD,EAAA,CAA+BjjB,aAwC/BijB,GAAUhjB,aAAe,CACrB/H,QAAS,GACTmrB,iBAAkB1f,SAASC,UAC3BuK,qBAAsBxK,SAASC,WAKnC,IAAM0f,GAAkBC,aACpB,CAACnxB,GAAqB2J,IACtB,SAAC7D,EAAS8D,GAAV,OACI9T,OAAOqK,KAAK2F,GAASsrB,OAAO,SAACC,EAAKl7B,GAU9B,OATAk7B,EAAI7e,KAAK,CACLrc,GAAIA,EACJ2H,KAAM8L,EAAWf,KAAK,SAAAkR,GAAS,OAAIA,EAAU5jB,KAAOA,IAAI2H,KACxDZ,OAAQ4I,EAAQ3P,GAAIwF,IAAI,SAAAa,GAAK,MAAK,CAC9BrG,GAAIqG,EAAMrG,GACV2H,KAAMtB,EAAMuB,aAAevB,EAAMsB,UAIlCuzB,GACR,MAQI5uB,eALS,SAAArH,GAAK,MAAK,CAC9B0K,QAASorB,GAAgB91B,GACzByM,SAAUC,GAAuB1M,KAKjC,CACIogB,wBAAyBP,GACzBsB,iBAAkBnc,GAClB2b,qBAAsBjc,IALf2C,CAObouB,IC5EaS,GAZiB,SAAAruB,GAAK,OACjCb,EAAAC,EAAAC,cAAAF,EAAAC,EAAAgU,SAAA,KACIjU,EAAAC,EAAAC,cAACivB,GAAD,CAAU9S,KAAMxb,EAAMiK,WACtB9K,EAAAC,EAAAC,cAACkvB,GAAD,MACApvB,EAAAC,EAAAC,cAACmvB,GAAD,CAAUhT,KAAMxb,EAAMiK,aCMjBwkB,GAAU,SAAAr1B,GAAgD,IAA7Cs1B,EAA6Ct1B,EAA7Cs1B,oBAChBlrB,EAD6DpK,EAAxBu1B,kBAErCj5B,IAAKC,EACD,oEAEJD,IAAKC,EAAE,iCAEb,OAAO+4B,EACHvvB,EAAAC,EAAAC,cAACuvB,GAAD,CAAkB3kB,UAAU,IAE5B9K,EAAAC,EAAAC,cAACgtB,GAAD,CAAkB9zB,KAAMiL,KA6CjBhE,eAVS,SAAArH,GACpB,IAAMuB,EAAaI,EAAkB3B,GAErC,MAAO,CACHjF,GAAIwJ,GAAevE,GACnBw2B,kBAAmB5yB,KAAQrC,GAC3Bm1B,kBAAmBh1B,EAAsB1B,KAIlCqH,CApCc,SAAAvN,GAAiD,IAA9CiB,EAA8CjB,EAA9CiB,GAAIy7B,EAA0C18B,EAA1C08B,kBAC1BD,EAAsBx7B,IAAOy7B,EAC7BG,GAFoE78B,EAAvB48B,kBAEC,OAAP37B,EAE7C,OACIiM,EAAAC,EAAAC,cAAAF,EAAAC,EAAAgU,SAAA,KACIjU,EAAAC,EAAAC,cAAC0vB,GAAD,MACA5vB,EAAAC,EAAAC,cAAC2vB,GAAD,MACA7vB,EAAAC,EAAAC,cAAA,OAAKsI,UAAU,qBACVmnB,EAAkB,KACf3vB,EAAAC,EAAAC,cAAC4vB,GAAD,CACIP,oBAAqBA,EACrBC,kBAAmBA,gGCG5BO,GAxCoB,SAAA91B,GAK7B,IAJFgJ,EAIEhJ,EAJFgJ,cACA+sB,EAGE/1B,EAHF+1B,kBACAC,EAEEh2B,EAFFg2B,kBACAtxB,EACE1E,EADF0E,KAEMpG,EAAU,CACZyH,EAAAC,EAAAC,cAACsM,EAAA,EAAD,CAAQ9F,IAAI,SAASka,WAAS,EAACxY,QAAS6nB,GACnC15B,IAAKC,EAAE,WAEZwJ,EAAAC,EAAAC,cAACsM,EAAA,EAAD,CAAQ9F,IAAI,SAASwpB,aAAW,EAAC9nB,QAAS4nB,GACrCz5B,IAAKC,EAAE,YAIhB,OACIwJ,EAAAC,EAAAC,cAACoY,GAAArY,EAAD,CAAQtB,KAAMA,EAAMuC,QAAS+uB,GACzBjwB,EAAAC,EAAAC,cAACiwB,GAAAlwB,EAAD,CAAaE,MAAO,CAAE8b,SAAU,UAAW7b,WAAY,QAClD7J,IAAKC,EAAE,qBAEZwJ,EAAAC,EAAAC,cAACkwB,GAAAnwB,EAAD,KACID,EAAAC,EAAAC,cAACmwB,GAAApwB,EAAD,CAAmBE,MAAO,CAAE8b,SAAU,aACjC1lB,IAAKC,EACF,mKACA,CAAEyM,oBAIdjD,EAAAC,EAAAC,cAACsY,GAAAvY,EAAD,KAAgB1H,KCPtB+3B,GAAiB,CACnBpsB,O1D9BkC,G0D+BlC2X,WAAY,OACZJ,WAAY,OACZzK,YAAa,QAGJuf,GAAb,SAAA3iB,GAAA,SAAA2iB,IAAA,IAAAhhB,EAAAnG,EAAA1V,OAAA2V,EAAA,EAAA3V,CAAA+O,KAAA8tB,GAAA,QAAA/gB,EAAA/c,UAAAC,OAAA+c,EAAA,IAAAC,MAAAF,GAAAG,EAAA,EAAAA,EAAAH,EAAAG,IAAAF,EAAAE,GAAAld,UAAAkd,GAAA,OAAAvG,EAAA1V,OAAA4V,EAAA,EAAA5V,CAAA+O,MAAA8M,EAAA7b,OAAA6V,EAAA,EAAA7V,CAAA68B,IAAA/mB,KAAAhH,MAAA+M,EAAA,CAAA9M,MAAA7P,OAAA6c,MACIzW,MAAQ,CACJw3B,yBAAyB,EACzBC,oBAAgB99B,EAChB+9B,yBAAyB,EACzBC,iBAAah+B,GALrByW,EAQIwnB,gBAAkB,WACdxnB,EAAKM,SAAS,CAAEgnB,yBAAyB,KATjDtnB,EAYIynB,OAAS,WACLznB,EAAKvI,MAAMgwB,SAASz8B,KAAK,SAAA08B,GACrB1nB,EAAKM,SAAS,CAAEinB,YAAW,IAAA/9B,OAAMk+B,QAd7C1nB,EAkBI2nB,UAAY,WACR3nB,EAAKvI,MAAMmwB,mBACX,IAAML,EAAcvnB,EAAKvI,MAAM3G,YAAX,IAAAtH,OACVwW,EAAKvI,MAAM3G,aACf,IACNkP,EAAKM,SAAS,CAAEinB,iBAvBxBvnB,EA0BI6mB,kBAAoB,WAChB7mB,EAAKM,SAAS,CAAEgnB,yBAAyB,KA3BjDtnB,EA8BI4mB,kBAAoB,WAChB5mB,EAAKM,SAAS,CAAEgnB,yBAAyB,IACzCtnB,EAAKvI,MAAMowB,SAAS7nB,EAAKvI,MAAM3G,aAAa9F,KAAK,WAC7CgV,EAAKM,SAAS,CAAEinB,YAAa,SAjCzCvnB,EAqCI8nB,oBArCJ,eAAAj3B,EAAAvG,OAAA4N,EAAA,EAAA5N,CAAA6N,EAAAtB,EAAAuB,KAqC0B,SAAAC,EAAM0vB,GAAN,IAAAC,EAAAC,EAAA,OAAA9vB,EAAAtB,EAAA2B,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,WACdovB,IAAgBA,EAAaz+B,OADf,CAAAmP,EAAAE,KAAA,eAAAF,EAAAE,KAAA,EAESqH,EAAKgL,QAAQ/f,GAAG0R,YAAYshB,aAAa7yB,IAC5D,eAHU,OAER48B,EAFQvvB,EAAAG,MAMRqvB,EAAcF,EAAa1qB,KAC7B,SAAAjQ,GAAC,OAAIA,EAAE86B,SAAWF,GAA2B,SAAf56B,EAAE+6B,aAGjBF,EAAYj3B,OAC3BgP,EAAKvI,MAAM2wB,YACPpoB,EAAKvI,MAAM3G,YACXm3B,EAAYj3B,OAbN,wBAAAyH,EAAAS,SAAAb,MArC1B,gBAAAc,GAAA,OAAAtI,EAAAuI,MAAAC,KAAAhQ,YAAA,GAAA2W,EAwDIqoB,oBAAsB,WACdroB,EAAKvI,MAAM3G,cAAgBkP,EAAKpQ,MAAMy3B,gBACtClxB,GAAkB6J,EAAKvI,MAAM3G,aAAa9F,KAAK,SAAAq8B,GAAc,OACzDrnB,EAAKM,SAAS,CAAE+mB,sBA3DhCrnB,EAwEIsoB,wBAA0B,WACtBtoB,EAAKM,SAAS,CACV8mB,yBAA0BpnB,EAAKpQ,MAAMw3B,2BA1EjDpnB,EA8EIuoB,oBAAsB,kBAClBvoB,EAAKvI,MAAM+wB,cAAgBxoB,EAAKvI,MAAM3G,YAClC8F,EAAAC,EAAAC,cAAC2xB,GAAD,CACI5uB,cAAemG,EAAKvI,MAAMoC,cAC1B+sB,kBAAmB5mB,EAAK4mB,kBACxBC,kBAAmB7mB,EAAK6mB,kBACxBtxB,KAAMyK,EAAKpQ,MAAM03B,0BAErB,MAtFZtnB,EAwFI0oB,kBAAoB,kBAChB1oB,EAAKpQ,MAAMy3B,gBAAkBrnB,EAAKpQ,MAAMy3B,eAAe18B,GACnDiM,EAAAC,EAAAC,cAAC6xB,GAAA9xB,EAAD,CACIuI,UAAU,qBACVnU,GAAI+U,EAAKgL,QAAQ/f,GACjBsK,KAAMyK,EAAKpQ,MAAMw3B,wBACjBzU,eAAgB3S,EAAKsoB,wBACrBM,kBAAmB5oB,EAAKpQ,MAAMy3B,eAC9BwB,kBAAmB,CAAC,OAAQ,eAE5BC,mBAAoB9oB,EAAK8nB,oBACzBiB,mBAAoB,SAAAC,GAAG,OACnB9zB,QAAQC,IAAI,2BAA4B6zB,MAGhD,MAvGZhpB,EAAA,OAAA1V,OAAAya,EAAA,EAAAza,CAAA68B,EAAA3iB,GAAAla,OAAA0a,EAAA,EAAA1a,CAAA68B,EAAA,EAAA7pB,IAAA,oBAAAtM,MAAA,WAiEQqI,KAAKgvB,wBAjEb,CAAA/qB,IAAA,qBAAAtM,MAAA,WAqEQqI,KAAKgvB,wBArEb,CAAA/qB,IAAA,SAAAtM,MAAA,WA0GQ,GAAIqI,KAAKzJ,MAAM23B,YACX,OAAO3wB,EAAAC,EAAAC,cAACmyB,EAAA,EAAD,CAAU/lB,GAAI7J,KAAKzJ,MAAM23B,cAF/B,IAAAriB,EAK+C7L,KAAK5B,MAAjD3G,EALHoU,EAKGpU,YAAa03B,EALhBtjB,EAKgBsjB,aAAcU,EAL9BhkB,EAK8BgkB,aAC7B9hB,EAAmBtH,GAAoBP,IAEvC4pB,EAAiBD,EACjB/7B,IAAKC,EAAE,uBACPD,IAAKC,EAAE,oBAEb,OACIwJ,EAAAC,EAAAC,cAAAF,EAAAC,EAAAgU,SAAA,KACIjU,EAAAC,EAAAC,cAAC0Q,GAAD,CAAY1M,OAAQsM,EAAkB1F,UAAU,GAC5C9K,EAAAC,EAAAC,cAAA,OAAKC,MAAOmwB,IACPgC,EACGtyB,EAAAC,EAAAC,cAAA,OAAKsI,UAAWC,KAAQoI,cACpB7Q,EAAAC,EAAAC,cAAA,QAAMC,MAAO,CAAE6Q,YAAa,SACxBhR,EAAAC,EAAAC,cAACsM,EAAA,EAAD,CAAQgmB,SAAO,EAACpqB,QAAS3F,KAAKouB,QACzBt6B,IAAKC,EAAE,kBAIf0D,EACG8F,EAAAC,EAAAC,cAAA,QAAMC,MAAO,CAAE6Q,YAAa,SACxBhR,EAAAC,EAAAC,cAACsM,EAAA,EAAD,CACIpE,QACI3F,KAAKivB,yBAGRn7B,IAAKC,EAAE,eAGhB,KACH0D,GAAe03B,EACZ5xB,EAAAC,EAAAC,cAACsM,EAAA,EAAD,CAAQpE,QAAS3F,KAAKmuB,iBACjBr6B,IAAKC,EAAE,WAEZ,MAER,KAEJwJ,EAAAC,EAAAC,cAAA,OAAKsI,UAAWC,KAAQgqB,eACpBzyB,EAAAC,EAAAC,cAACsM,EAAA,EAAD,CAAQoU,WAAS,EAACxY,QAAS3F,KAAKsuB,WAC3BwB,MAKhB9vB,KAAKqvB,oBACLrvB,KAAKkvB,2BA5JtBpB,EAAA,CAA6B/kB,aA6K7B+kB,GAAQhc,aAAe,CACnBlgB,GAAImgB,IAAUC,QAGlB,IA4BepU,eA5BS,SAAArH,GACpB,IAEI44B,EACAU,EAHEt3B,EAAYyB,GAAsBzD,GAYxC,OtF/F8B,SAAAA,GAC9B,OACK4D,KAAQ5D,EAAM0D,gBAAsD,KAApCD,GAAsBzD,GAAOjF,GsFqF9D2+B,CAAmB15B,IACnB44B,GAAe,EACfU,GAAe,IAEfA,IAAet3B,EAAUmB,QAASnB,EAAUmB,OAAOuf,OACnDkW,IAAe52B,EAAUmB,QAASnB,EAAUmB,OAAOyD,QAGhD,CACH1F,YAAac,EAAUjH,GACvBkP,cAAejI,EAAUU,KACzBk2B,eACAU,iBAImB,SAAA5wB,GAAQ,MAAK,CACpCmvB,OAAQ,kBAAMnvB,EnE5IY,eAAAzH,EAAAvG,OAAA4N,EAAA,EAAA5N,CAAA6N,EAAAtB,EAAAuB,KAAM,SAAAC,EAAOC,EAAUkB,GAAjB,IAAA5H,EAAA23B,EAAAz4B,EAAA,OAAAqH,EAAAtB,EAAA2B,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,UAC1B/G,EAAYyB,GAAsBmG,KAElC+vB,EAH0Bj/B,OAAA+F,EAAA,EAAA/F,CAAA,GAIzBsH,EAJyB,CAK5BsB,eAAgBjD,EAAwB2B,EAAUsB,kBALtBuF,EAAAC,KAAA,GASR6wB,EAAgB5+B,GATR,CAAA8N,EAAAE,KAAA,eAAAF,EAAAE,KAAA,EAUhByC,GAAgBmuB,GAVA,OAAA9wB,EAAAQ,GAAAR,EAAAG,KAAAH,EAAAE,KAAA,uBAAAF,EAAAE,KAAA,GAWhB0C,GAAckuB,GAXE,QAAA9wB,EAAAQ,GAAAR,EAAAG,KAAA,eAStB9H,EATsB2H,EAAAQ,GAa5BX,EAhEmC,CACvC1N,KnBzCgC,yBmB2FA6N,EAAAE,KAAA,GActBL,EAASgB,GAA0BxI,IAdb,eAAA2H,EAAAK,OAAA,SAgBrBC,QAAQC,QAAQlI,IAhBK,QAAA2H,EAAAC,KAAA,GAAAD,EAAA0E,GAAA1E,EAAA,SA1EpBxD,EA4FDwD,EAAA0E,GA3FXjI,QAAQC,IAAI,6BAA8BF,GAyEV,yBAAAwD,EAAAS,OA1EpB,IAAAjE,GA0EoBoD,EAAA,kBAAN,gBAAAc,EAAAqB,GAAA,OAAA3J,EAAAuI,MAAAC,KAAAhQ,YAAA,ImE4Ie2B,KAAK,SAAAL,GAAE,OAAIA,KACpDk9B,SAAU,SAAAl9B,GAAE,OAAI2N,ElEhIY,SAAA3N,GAAE,sBAAAV,EAAAK,OAAA4N,EAAA,EAAA5N,CAAA6N,EAAAtB,EAAAuB,KAAI,SAAAoF,EAAMlF,GAAN,OAAAH,EAAAtB,EAAA2B,KAAA,SAAAkF,GAAA,cAAAA,EAAAhF,KAAAgF,EAAA/E,MAAA,cAAA+E,EAAAhF,KAAA,EAAAgF,EAAA/E,KAAA,EAExBlC,GAAmB9L,GAFK,cAG9B2N,EDnEmC,CACvC1N,KnBzCgC,yBoB4G5B0N,EAASP,MACTO,EAASyB,GAAoB,KALC2D,EAAA/E,KAAA,EAOxBL,EAAS2D,MAPe,cAAAyB,EAAA5E,OAAA,SASvBC,QAAQC,WATe,eAAA0E,EAAAhF,KAAA,GAAAgF,EAAAzE,GAAAyE,EAAA,SAW9BxI,QAAQC,IAAI,4BAAZuI,EAAAzE,IAX8ByE,EAAA5E,OAAA,SAAA4E,EAAAzE,IAAA,yBAAAyE,EAAAxE,SAAAsE,EAAA,kBAAJ,gBAAAK,GAAA,OAAA5T,EAAAmP,MAAAC,KAAAhQ,YAAA,GkEgILmgC,CAAiB7+B,KAC1Ci9B,iBAAkB,kBAAMtvB,EnEjMe,CACvC1N,KnBzCgC,0BsF0OhCw9B,YAAa,SAACz9B,EAAIqG,GAAL,OAAesH,ElEvMS,SAACxH,EAAaE,GAAd,MAAyB,CAC9DpG,KrB/BsC,6BqBgCtCkG,cACAE,SkEoMqCy4B,CAA0B9+B,EAAIqG,OAGxDiG,CAGbkwB,ICrOWjB,GAAU,SAAAr1B,GACnB,OADyCA,EAAnBq4B,aAElBtyB,EAAAC,EAAAC,cAACuvB,GAAD,CAAkB3kB,UAAU,IAE5B9K,EAAAC,EAAAC,cAACgtB,GAAD,CAAkB9zB,KAAM7C,IAAKC,EAAE,gBAO1Bs8B,GAAb,SAAAllB,GAAA,SAAAklB,IAAA,IAAAvjB,EAAAnG,EAAA1V,OAAA2V,EAAA,EAAA3V,CAAA+O,KAAAqwB,GAAA,QAAAtjB,EAAA/c,UAAAC,OAAA+c,EAAA,IAAAC,MAAAF,GAAAG,EAAA,EAAAA,EAAAH,EAAAG,IAAAF,EAAAE,GAAAld,UAAAkd,GAAA,OAAAvG,EAAA1V,OAAA4V,EAAA,EAAA5V,CAAA+O,MAAA8M,EAAA7b,OAAA6V,EAAA,EAAA7V,CAAAo/B,IAAAtpB,KAAAhH,MAAA+M,EAAA,CAAA9M,MAAA7P,OAAA6c,MACIzW,MAAQ,CACJ+5B,aAAa,GAFrB3pB,EAKI4pB,kBAAoB,WACZ5pB,EAAKvI,MAAM7F,YACXoO,EAAKM,SAAS,CAAEqpB,aAAa,IAC7B3pB,EAAKvI,MAAMoyB,iBAAiB7pB,EAAKvI,MAAM7F,UAAWoO,EAAKvI,MAAMvH,SARzE8P,EAsBI8pB,oBAAsB,WAClB,IAAMvD,GACDvmB,EAAKvI,MAAM6uB,kBAAsC,OAAlBtmB,EAAKvI,MAAM9M,GAE/C,OACIiM,EAAAC,EAAAC,cAAA,OAAKsI,UAAU,qBACVmnB,EAAkB,KACf3vB,EAAAC,EAAAC,cAACizB,GAAD,CAASb,aAAclpB,EAAKvI,MAAMyxB,iBA7BtDlpB,EAAA,OAAA1V,OAAAya,EAAA,EAAAza,CAAAo/B,EAAAllB,GAAAla,OAAA0a,EAAA,EAAA1a,CAAAo/B,EAAA,EAAApsB,IAAA,oBAAAtM,MAAA,WAaQqI,KAAKuwB,sBAbb,CAAAtsB,IAAA,qBAAAtM,MAAA,WAiBaqI,KAAKzJ,MAAM+5B,aACZtwB,KAAKuwB,sBAlBjB,CAAAtsB,IAAA,SAAAtM,MAAA,WAoCQ,OACI4F,EAAAC,EAAAC,cAAAF,EAAAC,EAAAgU,SAAA,KACIjU,EAAAC,EAAAC,cAACkzB,GAAD,MACApzB,EAAAC,EAAAC,cAAC2vB,GAAD,CAAyB/kB,UAAU,IAClCrI,KAAKywB,2BAxCtBJ,EAAA,CAAmCtnB,aAuEpBnL,eAhBS,SAAArH,GACpB,IAAMjF,EAAKwJ,GAAevE,GACpBgC,EAAYjH,EAAKyG,EAAkBxB,EAAOjF,GAAM,KAKtD,MAAO,CACHiH,YACAjH,KACAu+B,gBALAt3B,IAAaA,EAAUmB,SAASnB,EAAUmB,OAAOuf,OAMjDpiB,MAAOsB,EAAmB5B,GAC1B02B,kBAAmBh1B,EAAsB1B,KAM7C,CACIi6B,iBpExE0B,SAACj4B,EAAW1B,GAM1C,MAAO,CACHtF,KnBhC+B,0BmBiC/BoG,MAPK1G,OAAA+F,EAAA,EAAA/F,CAAA,GACFsH,EADE,CAELsB,eAAgBhD,OoEkET+G,CAKbyyB,IC/FIO,+LAEE5wB,KAAK5B,MAAMyyB,mDAIX,OACItzB,EAAAC,EAAAC,cAAAF,EAAAC,EAAAgU,SAAA,KACIjU,EAAAC,EAAAC,cAACkzB,GAAD,MACApzB,EAAAC,EAAAC,cAAC2vB,GAAD,CAAyB/kB,UAAU,IACnC9K,EAAAC,EAAAC,cAAA,OAAKsI,UAAU,qBACXxI,EAAAC,EAAAC,cAACuvB,GAAD,CAAkB3kB,UAAU,aAXrBU,aAsBZnL,eACX,KACA,CACIizB,gBrEQ6B,iBAAO,CACxCt/B,KnBpC+B,yBwFwBpBqM,CAKbgzB,ICzBIE,8MACFC,aAAe,WACX,GAAIpqB,EAAKvI,MAAM6uB,iBAAkB,CAC7B,IAAM37B,EAAKqV,EAAKvI,MAAM4yB,MAAMC,OAAOx5B,aAAe,KAElDkP,EAAKvI,MAAM8yB,gBAAgB5/B,GAE3BqV,EAAKwqB,kBAIbA,YAAc,WACVhqB,OAAOiqB,SAAS,EAAG,uFAInBpxB,KAAK+wB,4DAIL/wB,KAAK+wB,gDAIL,OAAQ/wB,KAAK5B,MAAMizB,MACf,ICpCQ,ODqCJ,OAAO9zB,EAAAC,EAAAC,cAAC6zB,GAAD,MACX,ICrCO,MDsCH,OAAO/zB,EAAAC,EAAAC,cAAC8zB,GAAD,MACX,QACI,OAAOh0B,EAAAC,EAAAC,cAAC+zB,GAAD,cA9BCzoB,aA8CTnL,eAJS,SAAArH,GACpB,MAAO,CAAE02B,kBAAmBh1B,EAAsB1B,KAKlD,CACI26B,gBrEDwB,SAAA5/B,GAAE,sBAAAjB,EAAAY,OAAA4N,EAAA,EAAA5N,CAAA6N,EAAAtB,EAAAuB,KAAI,SAAAmB,EAAOjB,EAAUkB,GAAjB,IAAAzD,EAAAnG,EAAAk7B,EAAAC,EAAAxyB,EAAA,OAAAJ,EAAAtB,EAAA2B,KAAA,SAAAmB,GAAA,cAAAA,EAAAjB,KAAAiB,EAAAhB,MAAA,OAC5B5C,EAAU,SAAAd,GAEZ,OADAC,QAAQC,IAAI,+BAAgCF,GACrCA,GAHuB0E,EAAAjB,KAAA,EAOxB9I,EAAQ4J,IAEVsxB,EAAoB,KACpBngC,EACAmgC,EAAoB15B,EAAkBxB,EAAOjF,IAAO,MJtEzB6E,EIyEvBG,EAAiBC,GADfm7B,EJvEd9wB,aAAa+wB,QAAb,2BAAAxhC,OAAgDgG,UAAejG,EI0EjDgP,EAAOnH,EAAkBxB,EAAOm7B,GACtCD,EACIC,GAAexyB,EACTA,EACAxG,GAA8BnC,GAAO,IAI/C0I,EADAwyB,EACSxxB,GAA0BwxB,EAAkBngC,IAE5CoN,MA1BiB4B,EAAAhB,KAAA,uBAAAgB,EAAAjB,KAAA,EAAAiB,EAAAV,GAAAU,EAAA,SAAAA,EAAAb,OAAA,SA6BvB/C,EAAO4D,EAAAV,KA7BgB,yBAAAU,EAAAT,OJ3DC,IAAA1J,GI2DD+J,EAAA,iBAAJ,gBAAAiB,EAAAC,GAAA,OAAA/Q,EAAA0P,MAAAC,KAAAhQ,YAAA,KqEFnB4N,CAKbkzB,IE3CWc,oBAAb,SAAAzmB,GAAA,SAAAymB,IAAA,OAAA3gC,OAAA2V,EAAA,EAAA3V,CAAA+O,KAAA4xB,GAAA3gC,OAAA4V,EAAA,EAAA5V,CAAA+O,KAAA/O,OAAA6V,EAAA,EAAA7V,CAAA2gC,GAAA7xB,MAAAC,KAAAhQ,YAAA,OAAAiB,OAAAya,EAAA,EAAAza,CAAA2gC,EAAAzmB,GAAAla,OAAA0a,EAAA,EAAA1a,CAAA2gC,EAAA,EAAA3tB,IAAA,oBAAAtM,MAAA,WAEQqI,KAAK5B,MAAMyzB,eAAe7xB,KAAK5B,MAAMxM,GAAG0R,aACxCtD,KAAK5B,MAAM0zB,kBACX9xB,KAAK5B,MAAM2zB,oBACX/xB,KAAK5B,MAAM4zB,cAAchyB,KAAK5B,MAAMxM,MAL5C,CAAAqS,IAAA,kBAAAtM,MAAA,WASQ,MAAO,CAAEqjB,QAAShb,KAAK5B,MAAM4c,QAASlnB,SAAMlC,GAAIoO,KAAK5B,MAAMxM,MATnE,CAAAqS,IAAA,SAAAtM,MAAA,WAaQ,OACI4F,EAAAC,EAAAC,cAAAF,EAAAC,EAAAgU,SAAA,KACIjU,EAAAC,EAAAC,cAACsM,EAAA,EAAD,CAAczB,QAAM,EAAC2pB,SAAO,IAC5B10B,EAAAC,EAAAC,cAAA,OAAKsI,UAAU,eACXxI,EAAAC,EAAAC,cAAA,OAAKsI,UAAU,wBACXxI,EAAAC,EAAAC,cAACy0B,EAAA,EAAD,CAAW1+B,QAASM,IAAKC,EAAE,gBAE/BwJ,EAAAC,EAAAC,cAACmM,EAAA,EAAD,KACIrM,EAAAC,EAAAC,cAACmyB,EAAA,EAAD,KACIryB,EAAAC,EAAAC,cAACmyB,EAAA,EAAD,CACIuC,OAAK,EACLC,KAAK,IACLC,OAAQ,SAAAj0B,GAAK,OACTb,EAAAC,EAAAC,cAAC60B,GAADrhC,OAAAqQ,OAAA,GAAelD,EAAf,CAAsBizB,KD3CtC,aC8CQ9zB,EAAAC,EAAAC,cAACmyB,EAAA,EAAD,CACIuC,OAAK,EACLC,KAAK,OACLC,OAAQ,SAAAj0B,GAAK,OACTb,EAAAC,EAAAC,cAAC60B,GAADrhC,OAAAqQ,OAAA,GAAelD,EAAf,CAAsBizB,KDnDvC,YCsDS9zB,EAAAC,EAAAC,cAACmyB,EAAA,EAAD,CACIuC,OAAK,EACLC,KAAK,gBACLC,OAAQ,SAAAj0B,GAAK,OACTb,EAAAC,EAAAC,cAAC60B,GAADrhC,OAAAqQ,OAAA,GAAelD,EAAf,CAAsBizB,KDzDtC,aC4DQ9zB,EAAAC,EAAAC,cAACmyB,EAAA,EAAD,CACIuC,OAAK,EACLC,KAAK,qBACLC,OAAQ,SAAAj0B,GAAK,OACTb,EAAAC,EAAAC,cAAC60B,GAADrhC,OAAAqQ,OAAA,GAAelD,EAAf,CAAsBizB,KDlEtC,eCuEA9zB,EAAAC,EAAAC,cAAC80B,GAAD,YApDpBX,EAAA,CAAyB7oB,cAoEzB6oB,GAAIY,kBAAoB,CACpBxX,QAASjJ,IAAU+S,OACnBhxB,KAAMie,IAAUC,OAChBpgB,GAAImgB,IAAUC,QAGlB,IASepU,eACX,KAVuB,SAAAqB,GACvB,MAAO,CACH4yB,eAAgB,SAAAvuB,GAAW,OAAIrE,EC7FC,CACpC1N,K/FHyB,gB+FIzBoG,MD2F2D2L,KACvDwuB,gBAAiB,kBAAM7yB,EAAS2D,OAChCmvB,kBAAmB,kBAAM9yB,EpErFC,eAAAzH,EAAAvG,OAAA4N,EAAA,EAAA5N,CAAA6N,EAAAtB,EAAAuB,KAAM,SAAAC,EAAMC,GAAN,IAAAoB,EAAA3D,EAAA+1B,EAAA,OAAA3zB,EAAAtB,EAAA2B,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAC9Be,EAAY,SAAA+D,GACdnF,EAASwF,GAAwBL,KAG/B1H,EAAU,SAAAd,GAEZ,OADAC,QAAQC,IAAI,iCAAkCF,GACvCA,GAPyBwD,EAAAC,KAAA,EAAAD,EAAAE,KAAA,EAWHoE,KAXG,cAW1B+uB,EAX0BrzB,EAAAG,KAAAH,EAAAK,OAAA,SAYzBY,EAAUoyB,IAZe,cAAArzB,EAAAC,KAAA,EAAAD,EAAAQ,GAAAR,EAAA,SAAAA,EAAAK,OAAA,SAczB/C,EAAO0C,EAAAQ,KAdkB,yBAAAR,EAAAS,SAAAb,EAAA,iBAAN,gBAAAc,GAAA,OAAAtI,EAAAuI,MAAAC,KAAAhQ,YAAA,KoEsF1BgiC,cAAe,SAAApgC,GAAE,OAAIqN,EjEzFC,SAAArN,GAAE,sBAAA4F,EAAAvG,OAAA4N,EAAA,EAAA5N,CAAA6N,EAAAtB,EAAAuB,KAAI,SAAAC,EAAOC,EAAUkB,GAAjB,IAAAE,EAAA3D,EAAAg2B,EAAA3tB,EAAA4tB,EAAA,OAAA7zB,EAAAtB,EAAA2B,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAC1Be,EAAY,SAAA0E,GACd9F,EAASwG,GAAgBV,KAGvBrI,EAAU,SAAAd,GAEZ,OADAC,QAAQC,IAAI,+BAAgCF,GACrCA,GAPqBwD,EAAAC,KAAA,EAWtBqzB,EAAkBltB,GAAgCrF,KAX5Bf,EAAAE,KAAA,EAYHszB,aAAmBhhC,EAAI8gC,GAZpB,cAYtB3tB,EAZsB3F,EAAAG,KAetBozB,EAAqB5tB,EAAWzM,OAClC,SAAAu6B,GAAG,MACuB,aAAtBA,EAAIC,eACmB,aAAtBD,EAAIC,eACyB,cAA1BD,EAAIE,oBAnBY3zB,EAAAK,OAAA,SAqBrBY,EAAUsyB,IArBW,eAAAvzB,EAAAC,KAAA,GAAAD,EAAAQ,GAAAR,EAAA,SAAAA,EAAAK,OAAA,SAuBrB/C,EAAO0C,EAAAQ,KAvBc,yBAAAR,EAAAS,SAAAb,EAAA,kBAAJ,gBAAAc,EAAAqB,GAAA,OAAA3J,EAAAuI,MAAAC,KAAAhQ,YAAA,GiEyFMgjC,CAAephC,OAItCgM,CAGbg0B,uXE1DFqB,KAAOpE,OAAO,MAEd/6B,IAAKo/B,aAAa,KAHA,iBAGiBC,IACnCr/B,IAAKo/B,aAAa,KAJA,iBAIiBE,IACnCt/B,IAAKo/B,aAAa,KALA,iBAKiBG,IACnCv/B,IAAKo/B,aAAa,KANA,iBAMiBI,IACnCx/B,IAAKo/B,aAAa,KAPA,iBAOiBK,IACnCz/B,IAAKo/B,aAAa,KARA,iBAQiBM,IACnC1/B,IAAKo/B,aAAa,KATA,iBASiBO,IACnC3/B,IAAKo/B,aAAa,KAVA,iBAUiBQ,IACnC5/B,IAAKo/B,aAAa,KAXA,iBAWiBS,IACnC7/B,IAAKo/B,aAAa,MAZA,iBAYkBU,IACpC9/B,IAAKo/B,aAAa,KAbA,iBAaiBW,IACnC//B,IAAKo/B,aAAa,KAdA,iBAciBY,IACnChgC,IAAKo/B,aAAa,QAfA,iBAeoBa,IACtCjgC,IAAKo/B,aAAa,KAhBA,iBAgBiBc,IACnClgC,IAAKo/B,aAAa,KAjBA,iBAiBiBe,IACnCngC,IAAKo/B,aAAa,MAlBA,iBAkBkBgB,IACpCpgC,IAAKo/B,aAAa,KAnBA,iBAmBiBiB,IACnCrgC,IAAKo/B,aAAa,KApBA,iBAoBiBkB,IACnCtgC,IAAKo/B,aAAa,KArBA,iBAqBiBmB,IACnCvgC,IAAKo/B,aAAa,KAtBA,iBAsBiBoB,IACnCxgC,IAAKo/B,aAAa,KAvBA,iBAuBiBqB,IACnCzgC,IAAKo/B,aAAa,QAxBA,iBAwBoBsB,IAEtC1gC,IAAK2gC,oBA1Ba,kBA2BlB3gC,IAAK4gC,eAAe,MAEL5gC,SAAf,uBCrDe4J,GATD,WAAyC,IAAxCnH,EAAwCvG,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GARpB,OAQSyK,EAAWzK,UAAAC,OAAA,EAAAD,UAAA,QAAAE,EACnD,OAAQuK,EAAOlJ,MACX,IAZiB,YAab,OAAOmJ,YAAgBD,EAAO9C,MAXP,QAY3B,QACI,OAAOpB,ICUJiE,gBAAgB,CAC3B1C,WhGUW,WAA8C,IAA7CvB,EAA6CvG,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAArCqH,EAA0BoD,EAAWzK,UAAAC,OAAA,EAAAD,UAAA,QAAAE,EACzD,OAAQuK,EAAOlJ,MACX,IAjCsB,iBAkClB,MAAO,CACH+F,KAAMmD,EAAO9C,MACbd,MAAO,IAGf,IAtCsB,iBAuClB,OAAO5F,OAAA+F,EAAA,EAAA/F,CAAA,GACAsF,EADP,CAEIe,KAAKrG,OAAA+F,EAAA,EAAA/F,CAAA,GACEsF,EAAMe,KACNmD,EAAO9C,SAItB,IA9C6B,wBA+CzB,OAAOJ,EAAoB,CACvBhB,QACAkB,YAAagD,EAAOhD,YACpBC,KAAM,UACNC,MAAO8C,EAAO9C,QAGtB,IArDkC,6BAsD9B,OAAOJ,EAAoB,CACvBhB,QACAkB,YAAagD,EAAOhD,YACpBC,KAAM,cACNC,MAAO8C,EAAO9C,QAGtB,IA5D2B,sBA6DvB,OAAO1G,OAAA+F,EAAA,EAAA/F,CAAA,GACAsF,EADP,CAEIM,MAAO4D,EAAO9C,QAGtB,QACI,OAAOpB,IgGjDfhB,YACAuV,oBACA5H,cACA3G,erFrBW,WAAkD,IAAjDhG,EAAiDvG,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAzCoM,GAA8B3B,EAAWzK,UAAAC,OAAA,EAAAD,UAAA,QAAAE,EAC7D,OAAQuK,EAAOlJ,MACX,IATyB,oBAUrB,OAAON,OAAA+F,EAAA,EAAA/F,CAAA,GACAsF,EADPtF,OAAA2G,EAAA,EAAA3G,CAAA,GAEKwJ,EAAO9C,MAAMrG,GAAKqjC,KAAY1jC,OAAA+F,EAAA,EAAA/F,CAAA,GAEpB+G,YAASzB,EAAMkE,EAAO9C,MAAMrG,KAC5BmJ,EAAO9C,OAEdwC,MAIZ,IApBqC,gCAqBjC,OAAOlJ,OAAA+F,EAAA,EAAA/F,CAAA,GACAsF,EADPtF,OAAA2G,EAAA,EAAA3G,CAAA,GAEKwJ,EAAOnJ,GAAKqjC,KAAY1jC,OAAA+F,EAAA,EAAA/F,CAAA,GAEd+G,YAASzB,EAAMkE,EAAOnJ,KAFT,CAGhBmpB,WAAYhgB,EAAOggB,aAEvBtgB,MAIZ,QACI,OAAO5D,IqFLfkF,SzF7BW,WAAwB,IAAvBlF,EAAuBvG,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAf,GAAIyK,EAAWzK,UAAAC,OAAA,EAAAD,UAAA,QAAAE,EACnC,OAAQuK,EAAOlJ,MACX,IAJyB,oBAKrB,IAAMqjC,EAAgBlyB,YAAajI,EAAO9C,OAI1C,OAFiBshB,KAAO1iB,EAAO,CAAEs+B,OAAQD,IAI7C,QACI,OAAOr+B,IyFoBfC,KlG1BW,WAAwC,IAU9Bs+B,EAVTv+B,EAAuCvG,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAA/BkG,EAAoBuE,EAAWzK,UAAAC,OAAA,EAAAD,UAAA,QAAAE,EACnD,OAAQuK,EAAOlJ,MACX,IAXqB,gBAYjB,MAQD,CACHD,IAFiBwjC,EAPUr6B,EAAO9C,OASrBrG,GACb6E,SAAU2+B,EAAS3+B,SACnBC,SAAU0+B,EAASvvB,SAASwvB,YAC5B1+B,YAAay+B,EAASE,YAAYxxB,IAAI,QAVtC,QACI,OAAOjN,IkGqBf0D,c/FZW,WAAkD,IAAjD1D,EAAiDvG,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAzC8J,GAA8BW,EAAWzK,UAAAC,OAAA,EAAAD,UAAA,QAAAE,EAC7D,OAAQuK,EAAOlJ,MACX,IArB+B,0BAsB3B,IAAM0jC,EAAW,GAIjB,OAHAhkC,OAAOqK,KAAKvB,IAAqBjD,IAC7B,SAAAo+B,GAAC,OAAKD,EAASC,GAAKz6B,EAAO9C,MAAMu9B,KAE9BD,EAEX,IA3B4B,uBA4BxB,OAAOn7B,GACX,IA5B2B,sBA6BvB,OAAOC,GACX,IA7BsB,iBA8BlB,OAAO9I,OAAOqQ,OAAO,GAAI/K,EAAO,CAAE0C,KAAMwB,EAAO9C,QAEnD,IA/B4B,uBAgCxB,OAAO1G,OAAOqQ,OAAO,GAAI/K,EAAO,CAC5BX,YAAa6E,EAAO9C,QAG5B,IAnC0B,qBAoCtB,OAAOshB,KAAO1iB,EAAO,CACjBsD,eAAgB,CAAEs7B,SAAU,CAAC16B,EAAO9C,UAE5C,IAtC6B,wBAuCzB,IAAMy9B,EAAa36B,EAAO9C,MAEpBya,EAAqB7b,EAAMsD,eAAewY,UAC5C,SAAAtf,GAAI,OAAIA,EAAKzB,KAAO8jC,IAGxB,OAAIhjB,GAAsB,EACf6G,KAAO1iB,EAAO,CACjBsD,eAAgB,CACZw7B,QAAS,CAAC,CAACjjB,EAAoB,OAKpC7b,EAEX,IArDiC,4BAsD7B,IAAM++B,EAAa17B,YAAQrD,EAAMsD,gBAC7B07B,GAAmB,EAEjBC,EAAgB/6B,EAAO9C,MAAMb,IAAI,SAAAU,GAAuB,IAApBi+B,EAAoBj+B,EAApBi+B,EAAGC,EAAiBl+B,EAAjBk+B,EAAGl0B,EAAchK,EAAdgK,EAAGE,EAAWlK,EAAXkK,EAAGge,EAAQloB,EAARkoB,EAC5CiW,EAAYL,EAAWtxB,KAAK,SAAA4xB,GAAE,OAAIA,EAAGtkC,KAAOouB,IAElD,OAEQiW,EAAUF,IAAMA,GAChBE,EAAUD,IAAMA,GAChBC,EAAUn0B,IAAMA,GAChBm0B,EAAUj0B,IAAMA,GAGpB6zB,GAAmB,EACZtkC,OAAOqQ,OAAO,GAAIq0B,EAAW,CAAEn0B,IAAGE,IAAG+zB,IAAGC,OAG5CC,IAGX,OAAOJ,EAAgBtkC,OAAA+F,EAAA,EAAA/F,CAAA,GAEVsF,EAFU,CAGbsD,eAAgB27B,IAEpBj/B,EAEV,IAnF6B,wBAoFzB,IAAM2b,EAAgBzX,EAAO9C,MAEvBya,EAAqB7b,EAAMsD,eAAewY,UAC5C,SAAAtf,GAAI,OAAIA,EAAKzB,KAAO4gB,EAAc5gB,KAGtC,OAAI8gB,GAAsB,EACL6G,KAAO1iB,EAAO,CAC3BsD,eAAgB,CACZw7B,QAAS,CACL,CACIjjB,EACA,EACAnhB,OAAOqQ,OAAO,GAAI4Q,QAS/B3b,EAEX,QACI,OAAOA,I+FpFf6E,Y3F9BW,WAAgD,IAA/C7E,EAA+CvG,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAvCkL,GAA4BT,EAAWzK,UAAAC,OAAA,EAAAD,UAAA,QAAAE,EAC3D,OAAQuK,EAAOlJ,MACX,IAPuB,kBAQnB,OAAON,OAAA+F,EAAA,EAAA/F,CAAA,GACAsF,EADPtF,OAAA2G,EAAA,EAAA3G,CAAA,GAEKwJ,EAAOnC,OAAOhH,GAAKmJ,EAAOnC,OAAOX,QAG1C,IAZ0B,qBAatB,IAAMs9B,EAAQhkC,OAAA+F,EAAA,EAAA/F,CAAA,GAAQsF,GAItB,cAFO0+B,EAASx6B,EAAOnJ,IAEhB2jC,EAEX,IArBwB,mBAsBpB,OAAOx6B,EAAOwG,QAElB,IAzB0B,qBA0BtB,OAAO/F,GAEX,QACI,OAAO3E,I2FSfgE,gB9FhCW,WAAqD,IAApDhE,EAAoDvG,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAA5CqK,GAAiCI,EAAWzK,UAAAC,OAAA,EAAAD,UAAA,QAAAE,EAChE,OAAQuK,EAAOlJ,MACX,IAP+B,0BAQ3B,IAAM0jC,EAAQhkC,OAAA+F,EAAA,EAAA/F,CAAA,GAAQsF,GAItB,cAFO0+B,EAASx6B,EAAOnJ,IAEhB2jC,EAEX,IAb6B,wBAczB,OAAOx6B,EAAOwG,QAElB,IAlB+B,0BAmB3B,OAAO5G,GAEX,QACI,OAAO9D,I8FiBfmH,SACAI,SvF/BW,WAA4C,IAA3CvH,EAA2CvG,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAnC+L,GAAwBtB,EAAWzK,UAAAC,OAAA,EAAAD,UAAA,QAAAE,EACvD,OAAQuK,EAAOlJ,MACX,IAXiC,4BAY7B,OAAON,OAAA+F,EAAA,EAAA/F,CAAA,GAAKsF,EAAUkE,EAAO9C,OAEjC,IAbsB,iBAclB,OAAOoE,GAEX,QACI,OAAOxF,IuFuBfwO,WvE7BW,WAAwC,IAAvCxO,EAAuCvG,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAA/B0U,GAAoBjK,EAAWzK,UAAAC,OAAA,EAAAD,UAAA,QAAAE,EACnD,OAAQuK,EAAOlJ,MACX,IARsB,iBASlB,SAAApB,OAAWuU,GAAXzT,OAAA0H,EAAA,EAAA1H,CAAkCwJ,EAAO9C,QAE7C,QACI,OAAOpB,IuEwBfgP,StE9BW,WAAsC,IAArChP,EAAqCvG,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAA7BgV,GAAkBvK,EAAWzK,UAAAC,OAAA,EAAAD,UAAA,QAAAE,EACjD,OAAQuK,EAAOlJ,MACX,IAdoB,eAehB,OAAON,OAAOqQ,OAAO,GAAI7G,EAAO9C,OAEpC,IAhBoB,eAiBhB,OAAO1G,OAAA+F,EAAA,EAAA/F,CAAA,GACAsF,EACAkE,EAAO9C,OAGlB,QACI,OAAOpB,IsEmBf4f,qB5CtCW,WAA0D,IAAzD5f,EAAyDvG,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAjDimB,GAAsCxb,EAAWzK,UAAAC,OAAA,EAAAD,UAAA,QAAAE,EACrE,OAAQuK,EAAOlJ,MACX,IAPkC,6BAQ9B,OAAOkJ,EAAO9C,MAElB,IAToC,+BAUhC,OAAOse,GAEX,QACI,OAAO1f,M6CUJs/B,GAnBQ,WACnB,IAAMC,EAAa,CAACC,MAGdC,EACF7uB,OAAO8uB,sCAAwCC,KAQnD,OANK/uB,OAAO8uB,qCAMLE,aACHC,GACAJ,EAAiBK,KAAet2B,WAAf,EAAmB+1B,MCHtCQ,GAAa,SAAA1R,GACf,IAAMxuB,EAAWwuB,EAAamQ,YAE1B3+B,GAAyB,OAAbA,GACZmgC,SAAOziC,KAAK0iC,QAAQ5iB,IAApB,sBAAAzjB,OAA8CiG,EAA9C,gBAGJmgC,SAAOziC,KAAK0iC,QAAQ5iB,IAAI,oCACxB9f,GAAK4gC,eAAet+B,KAGd,eAAAoB,EAAAvG,OAAA4N,EAAA,EAAA5N,CAAA6N,EAAAtB,EAAAuB,KAAG,SAAAC,IAAA,IAAAy3B,EAAAC,EAAA1b,EAAA,OAAAlc,EAAAtB,EAAA2B,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAF,EAAAE,KAAA,EACcq3B,sBAAY,qBAD1B,OACHF,EADGr3B,EAAAG,KAIT1D,QAAQggB,KAAR,oBAAA1rB,OACwBsmC,EAASG,QADjC,MAAAzmC,OAEQsmC,EAASI,wBAIXH,GAASI,EAVN13B,EAAAE,KAAA,eAuBH0b,EAAU0b,EACVD,EAASM,WAAWC,KAAKnnB,KACzBinB,KACgBA,SAEtBP,SAAOvb,QAAP,GAAA7qB,OAAoB6qB,EAApB,SAAA7qB,OAAmCsmC,EAASQ,MAAMC,YAClDX,SAAOY,QAAUT,EAAS,KAAO,CAAEvb,cAHb2b,UAItBP,SAAOa,QAAU,CACb,QACA,MACA,SACA,cACA,aACA,cACA,YACA,mBACA,aAGJC,4BACK1lC,KAAK2kC,IACL3kC,KAAK,kBAAM2lC,eAAOf,YAClB5kC,KAAK,SAAA4lC,GACFC,IAASnF,OACL90B,EAAAC,EAAAC,cAACg6B,EAAA,EAAD,CACIlB,OAAQ,CACJvb,QAASA,EACTkc,WAAYT,EAASQ,MAAMC,aAG/B35B,EAAAC,EAAAC,cAACsM,EAAA,EAAD,MACAxM,EAAAC,EAAAC,cAACi6B,EAAA,EAAD,CAAUC,MAAO9B,MACbt4B,EAAAC,EAAAC,cAAC+tB,EAAA,iBAAD,CAAkBoM,MApEnBC,yBAAeC,MAqEVv6B,EAAAC,EAAAC,cAACs6B,GAAD,CAAK/c,QAASA,EAASppB,GAAI2lC,OAIvC/S,SAASwT,eAAe,WA5D3B,yBAAA54B,EAAAS,SAAAb,MAAH,yBAAAxH,EAAAuI,MAAAC,KAAAhQ,aAAA,EAiEVioC,wBC5FAxoC,EAAAC,QAAA,CAAkB0e,aAAA,oCAAA4hB,cAAA,2DCAlBvgC,EAAAC,QAAA,CAAkB6gB,SAAA,kCAAAZ,WAAA,oCAAAnG,MAAA,+BAAAwG,aAAA,4DCAlBvgB,EAAAC,QAAA,CAAkBwoC,SAAA,6BAAAzb,eAAA,mCAAAC,UAAA,8BAAAC,gBAAA,gVCMX,SAAS/iB,EAAQu+B,GACpB,OAAOlrB,MAAMmrB,QAAQD,GAASA,EAAQ,GAGnC,SAASngC,EAASmgC,GACrB,OAAOE,IAASF,GAASA,EAAQ,GAS9B,SAASz1B,EAAakjB,GACzB,OAAOA,EAAM2G,OAAO,SAAClM,EAAKttB,GAEtB,OADAstB,EAAIttB,EAAKzB,IAAMyB,EACRstB,GACR,IAkBA,IAAMsE,EAAa,SAAChtB,EAAOvB,GAC9B,GAA2B,qBAAhBkiC,EAAOC,MAAwBA,KAAKC,eAAgB,CAC3D,IAAM3J,EAASz4B,GAAY,KAC3B,OAAO,IAAImiC,KAAKC,eAAe3J,EAAQ,CACnC4J,KAAM,UACNC,MAAO,QACPC,IAAK,YACNC,OAAO,IAAIC,KAAKlhC,IAGvB,OAAOA,EAAM6B,OAAO,EAAG,IAAIs/B,QAAQ,IAAK,MAwB/Bp+B,EAAkB,SAAC/C,EAAOohC,GAAR,YACjB7oC,IAAVyH,GAAiC,OAAVA,EAAiBohC,EAAephC,GAE9CvD,EAAa,SAAAxC,GACtB,IAAMonC,EAAMpnC,EAAGC,IAAIC,SACbmnC,EAAMD,EAAIhe,QAAQke,QAAQ,QAChC,OAAOD,GAAO,EAAID,EAAIhe,QAAQ1H,MAAM,EAAG2lB,GAAOD,EAAIhe,SAGzCme,EAAe,SAAAnnB,GAAM,OAAA/gB,OAAAmoC,EAAA,EAAAnoC,CAAA,GAC3B+gB,EAD2B,CAE9B1gB,QAAIpB,6CCvFRT,EAAAC,QAAA,CAAkBiZ,KAAA,yBAAArG,QAAA,4BAAAyF,WAAA,qDCAlBtY,EAAAC,QAAA,CAAkBosB,UAAA,sCAAAxmB,KAAA,iCAAA0G,QAAA,0DCAlBvM,EAAAC,QAAA,CAAkB2rB,QAAA,sBAAAmG,aAAA,iDCAlB/xB,EAAAC,QAAA,CAAkBuW,SAAA,iCAAAJ,SAAA,uDCAlBpW,EAAAC,QAAA,CAAkB4a,OAAA,4BAAAhV,KAAA,gDCAlB7F,EAAAC,QAAA,CAAkB4c,YAAA,4BAAAJ,WAAA,iDCAlBzc,EAAAC,QAAA,CAAkBowB,SAAA,8BAAAF,MAAA,mfCcZyZ,GAAwBC,EAAA,GAAAroC,OAAAsoC,EAAA,EAAAtoC,CAAAqoC,EACzBlnC,IAAM,aADmBnB,OAAAsoC,EAAA,EAAAtoC,CAAAqoC,EAEzBjnC,IAAe,qBAFUpB,OAAAsoC,EAAA,EAAAtoC,CAAAqoC,EAGzBhnC,IAAc,oBAHWgnC,GAOxBE,EAAY,SAAAjoC,GACd,QAHwB,SAAAA,GAAI,MAAI,CAACY,IAAOD,KAAcid,SAAS5d,GAG3DkoC,CAAoBloC,IAKjB+mC,EAFYe,EAAyB9nC,KAOnC0sB,EAAoB,WAAmC,IAAlClrB,EAAkC/C,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAA3B,GAC/BuB,GAD0DvB,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAP,IAC9ByqB,YAAc1nB,EAAKxB,KAE9C,QAASioC,EAAUjoC,IAGVwP,EAAkB,SAAAhO,GAC3B,OAAKslC,IAAStlC,GAOVA,EAHaC,IAAYD,EAAKxB,MAAMqC,WAInCb,EAAK2mC,aACF3mC,EAAK4mC,OACL5mC,EAAK+D,KACL/D,EAAK6mC,aACL7mC,EAAK8mC,YACL,GAZG,MAmBFC,EAAa,SAACC,EAAQxD,EAAQzb,GACjCif,GAAUA,EAAOC,OAIvBD,EAAO7lC,IAAM4mB,EAAYE,QACzB+e,EAAOE,kBAAmB,EAC1BF,EAAOxhC,WAAY,EACfuiB,EAAYG,OACZ8e,EAAO9e,KAAOH,EAAYG,MAE9B8e,EAAOC,KAAKzD,KAGHrX,EAAQ,SAAAnsB,GAAI,OAAIgO,EAAgBhO,GAAMzB,IACtC4oC,EAAU,SAAAnnC,GAAI,OAAIgO,EAAgBhO,GAAMkG,MAExCwlB,EAAU,SAAC1rB,EAAMnB,GAC1B,IAAMopB,EAAU5mB,YAAWxC,GACrBoC,EAAShB,IAAYD,EAAKxB,MAAMyC,OAAOkrB,EAAMnsB,IAEnD,SAAA5C,OAAU6qB,EAAV,KAAA7qB,OAAqB6D,IAGZgmC,EAAI,eAAA3pC,EAAAY,OAAAkpC,EAAA,EAAAlpC,CAAAmpC,EAAA58B,EAAAuB,KAAG,SAAAC,EAChBjM,EACAunB,EAFgB9iB,GAAA,IAAAsjB,EAAAL,EAAA8b,EAAAhlC,EAAAwoC,EAAA,OAAAK,EAAA58B,EAAA2B,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,OAGdwb,EAHctjB,EAGdsjB,YAAaL,EAHCjjB,EAGDijB,WAET8b,EALUtlC,OAAAopC,EAAA,EAAAppC,CAAA,GAMTqpB,EANS,CAOZuL,GAAIzK,YAAiBroB,EAAKzB,MAGxBC,EAAOkpB,GAAc1nB,EAAKxB,KAC1BwoC,EAASP,EAAUjoC,GAEzBuoC,EAAWC,EAAQxD,EAAQzb,GAbX,wBAAA1b,EAAAS,SAAAb,MAAH,gBAAAc,EAAAqB,EAAAC,GAAA,OAAA/Q,EAAA0P,MAAAC,KAAAhQ,YAAA,GAgBJsqC,EAAK,eAAA5pC,EAAAO,OAAAkpC,EAAA,EAAAlpC,CAAAmpC,EAAA58B,EAAAuB,KAAG,SAAAmB,EAAMnN,GAAN,IAAAwnC,EAAA,OAAAH,EAAA58B,EAAA2B,KAAA,SAAAmB,GAAA,cAAAA,EAAAjB,KAAAiB,EAAAhB,MAAA,cAAAgB,EAAAhB,KAAA,EACajO,YAAiB6tB,EAAMnsB,GAAOA,EAAKxB,KAAM,CACnEE,OAAQsB,EAAKxB,OAASa,IAAMhB,cAAiB,OAFhC,cACXmpC,EADWj6B,EAAAf,KAAAe,EAAAb,OAAA,SAKV86B,GALU,wBAAAj6B,EAAAT,SAAAK,MAAH,gBAAAqE,GAAA,OAAA7T,EAAAqP,MAAAC,KAAAhQ,YAAA,GAQLwqC,EAAS,SAAAznC,GAClB,IAAMgnC,EAASP,EAAUzmC,EAAKxB,MAE1BwoC,GAAUA,EAAOS,QACjBT,EAAOS,OAAOpf,YAAiBroB,EAAKzB,MAI/BmpC,EAAU,SAAC1nC,EAAM0nB,GAC1B,IAAMsf,EAASP,EAAU/e,GAErBsf,GAAUA,EAAOU,SACjBV,EAAOU,QAAQrf,YAAiBroB,EAAKzB,MAIhCgxB,EAAyB,SAClChI,EACAogB,EACAjgB,GAEA,GAAIigB,IAAiBtoC,KAAOsoC,IAAiBjgB,EAAY,CACrD,IAAMkgB,GAzEgB7jC,EAyEkBwjB,GAxExCyH,UAAYjrB,EAAIirB,SAAS/d,KAAK,SAAA42B,GAAE,OAAIA,EAAG5Y,MAAM7S,SA3BvB,cAqGtB,YAAyBjf,IAArByqC,EACO,KAGJxB,YAAaloC,OAAAopC,EAAA,EAAAppC,CAAA,GACbqpB,EACAqgB,EAFY,CAGf5Y,cAAU7xB,EACVqB,KAAMkpB,IAAetoB,IAAQ0oC,IAAkBC,OAEhD,OAAIJ,IAAiBxoC,KAAgBuoB,IAAetoB,IAChDgnC,YAAaloC,OAAAopC,EAAA,EAAAppC,CAAA,GAAKqpB,EAAN,CAAqB/oB,KAAMspC,OACvCH,IAAiBvoC,KAASsoB,IAAevoB,IACzCinC,YAAaloC,OAAAopC,EAAA,EAAAppC,CAAA,GACbqpB,EADY,CAEf/oB,KAAMupC,OAIP3B,YAAa7e,GA9FM,IAAAxjB,uDCzD9BikC,EAAA/hC,EAAAgiC,EAAA,sBAAA9P,IAAA6P,EAAA/hC,EAAAgiC,EAAA,sBAAAjQ,IAAAgQ,EAAA/hC,EAAAgiC,EAAA,sBAAArQ,IAAAoQ,EAAA/hC,EAAAgiC,EAAA,sBAAAz4B,IAAAw4B,EAAA/hC,EAAAgiC,EAAA,sBAAAnQ,IAAAkQ,EAAA/hC,EAAAgiC,EAAA,sBAAAzP,IAAAwP,EAAA/hC,EAAAgiC,EAAA,sBAAA5jC,IAAA2jC,EAAA/hC,EAAAgiC,EAAA,sBAAAr6B,IAAAo6B,EAAA/hC,EAAAgiC,EAAA,sBAAA5f,IAAA2f,EAAA/hC,EAAAgiC,EAAA,sBAAAjR,IAAA,IAAAkR,EAAAF,EAAA,MAAAG,EAAAH,EAAAI,EAAAF,GAAAG,EAAAL,EAAA,IAMa7P,EAAoB,WACpBH,EAAkB,GAGlBJ,EAAS,CAAC,GAAI,IAEdpoB,EAAiB,CAAEkzB,EAAG,EAAGC,EAAG,EAAGl0B,EAAG,GAAIE,EAAG,IAOzCmpB,EAAiB,WAGlB,OALS,IAefwQ,EAAuB,SAAA5F,GAAC,OAAI6F,OAAOC,UAAU9F,IAAMA,GAAK,GAIjDlK,EAAW,SAAAx4B,GAAI,OACxBsoC,EAAqBtoC,EAAK0iC,IAC1B4F,EAAqBtoC,EAAK2iC,IAC1B2F,EAAqBtoC,EAAKyO,IAC1B65B,EAAqBtoC,EAAK2O,IAsBjBtK,EAAwB,SAAAmlB,GACjC,MAAO,CACHmD,EAAGnD,EACHif,KAAM,IA2BD76B,EAAY,SAAA9J,GAAK,OAC1BA,EAAMC,IAAI,SAAC/D,EAAM4yB,GACb,IAAM8V,EAAgBlQ,EAASx4B,GACzBA,EACA9B,OAAOqQ,OAAO,GAAIvO,EApDR,SAAA2sB,GACpB,IAAK2b,EAAqB3b,GACtB,MAAM,IAAIgc,MAAM,6BAGpB,IAAMC,EAAMjc,EAjCY,EAkClBkc,EAAMv1B,KAAKC,MAAMoZ,EAlCC,GAmClBmc,EAAYx1B,KAAKC,MAAM,MACvBw1B,EAA+B,EAAlB/Q,EAEnB,MAAO,CACH0K,EAAGkG,EAAME,EACTnG,EAAGkG,EAAME,EACTt6B,EAAGq6B,EACHn6B,EAAGo6B,GAsC2BC,CAASpW,IAEvC,OAAO10B,OAAOqQ,OACV,GACAm6B,EAxBc,SAAA1oC,GAKtB,MAAO,CAAEiuB,eAJc3a,KAAK21B,MACxBjR,EAAkBh4B,EAAK2O,EAAI2E,KAAK4B,IAAI,EAAGlV,EAAK2O,EAAI,GAAKipB,EAAO,KAuBxDsR,CAAkBR,OAIjBrgB,EAAmB,SAAA9pB,GAAE,cAAAnB,OAAYmB,IAEvC,SAASy4B,EAAaz4B,GACzB,IAAMu0B,EAAK7tB,YAASwsB,SAAS0X,cAAT,IAAA/rC,OAA2BirB,EAAiB9pB,MAC5D6qC,IAAWtW,EAAGuW,kBACd77B,WACI,kBAAMslB,EAAGuW,gBAAgBvW,EAAGwW,YAAc,EAAGxW,EAAG1E,aAAe,IAC/D","file":"static/js/main.600fea1d.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"showMoreButton\":\"CategorizedMenuGroup_showMoreButton__3-0Wa\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"deleteItemButton\":\"DeleteItemButton_deleteItemButton__4YLrM\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"bar\":\"FilterBar_bar__2mF3Z\"};","import { getInstance } from 'd2';\nimport arrayClean from 'd2-utilizr/lib/arrayClean';\n\nimport { getEndPointName } from '../modules/itemTypes';\n\n// Id, name\nexport const getIdNameFields = ({ rename } = {}) => [\n    'id',\n    `${rename ? 'displayName~rename(name)' : 'name,displayName'}`,\n];\n\n// Item\nexport const getItemFields = () => [\n    'dimensionItem~rename(id)',\n    'displayName~rename(name)',\n    'dimensionItemType',\n];\n\n// Dimension\nexport const getDimensionFields = ({ withItems }) =>\n    arrayClean([\n        'dimension',\n        'legendSet[id]',\n        'filter',\n        'programStage',\n        withItems ? `items[${getItemFields().join(',')}]` : ``,\n    ]);\n\n// Axis\nexport const getAxesFields = ({ withItems }) => [\n    `columns[${getDimensionFields({ withItems }).join(',')}]`,\n    `rows[${getDimensionFields({ withItems }).join(',')}]`,\n    `filters[${getDimensionFields({ withItems }).join(',')}]`,\n];\n\n// Favorite\nexport const getFavoriteFields = ({ withDimensions, withOptions }) => {\n    return arrayClean([\n        `${getIdNameFields({ rename: true }).join(',')}`,\n        'displayDescription~rename(description)',\n        withDimensions ? `${getAxesFields({ withItems: true }).join(',')}` : ``,\n        withOptions\n            ? [\n                  '*',\n                  '!attributeDimensions',\n                  '!attributeValues',\n                  '!category',\n                  '!categoryDimensions',\n                  '!categoryOptionGroupSetDimensions',\n                  '!columnDimensions',\n                  '!dataDimensionItems',\n                  '!dataElementDimensions',\n                  '!dataElementGroupSetDimensions',\n                  '!filterDimensions',\n                  '!itemOrganisationUnitGroups',\n                  '!lastUpdatedBy',\n                  '!organisationUnitGroupSetDimensions',\n                  '!organisationUnitLevels',\n                  '!organisationUnits',\n                  '!programIndicatorDimensions',\n                  '!relativePeriods',\n                  '!reportParams',\n                  '!rowDimensions',\n                  '!series',\n                  '!translations',\n                  '!userOrganisationUnit',\n                  '!userOrganisationUnitChildren',\n                  '!userOrganisationUnitGrandChildren',\n              ].join(',')\n            : '',\n    ]);\n};\n\nexport const getFavoritesFields = ({ withDimensions }) => [\n    `reportTable[${getFavoriteFields({ withDimensions }).join(',')}]`,\n    `chart[${['type', ...getFavoriteFields({ withDimensions })].join(',')}]`,\n    `map[${getFavoriteFields({ withDimensions }).join(',')}]`,\n    `eventReport[${getFavoriteFields({ withDimensions }).join(',')}]`,\n    `eventChart[${getFavoriteFields({ withDimensions }).join(',')}]`,\n];\n\n// List item\nexport const getListItemFields = () => [\n    `reports[${getIdNameFields({ rename: true }).join(',')}]`,\n    `resources[${getIdNameFields({ rename: true }).join(',')}]`,\n    `users[${getIdNameFields({ rename: true }).join(',')}]`,\n];\n\n// Map\nexport const getMapFields = () => [\n    `${getIdNameFields({ rename: true }).join(',')}`,\n    'user,longitude,latitude,zoom,basemap',\n    `mapViews[${getFavoriteFields({\n        withDimensions: true,\n        withOptions: true,\n    })}]`,\n];\n\n// Api\n\n// Get more info about the favorite of a dashboard item\nexport const apiFetchFavorite = (id, type, { fields }) =>\n    getInstance().then(d2 =>\n        d2.Api.getApi().get(`${getEndPointName(type)}/${id}`, {\n            fields:\n                fields ||\n                getFavoriteFields({\n                    withDimensions: true,\n                    withOptions: true,\n                }),\n        })\n    );\n","import i18n from '@dhis2/d2-i18n';\nimport TableIcon from '@material-ui/icons/ViewList';\nimport ChartIcon from '@material-ui/icons/InsertChart';\nimport MapIcon from '@material-ui/icons/Public';\nimport ExtensionIcon from '@material-ui/icons/Extension';\nimport DescriptionIcon from '@material-ui/icons/Description';\nimport PersonIcon from '@material-ui/icons/Person';\nimport FontDownloadIcon from '@material-ui/icons/FontDownload';\nimport EmailIcon from '@material-ui/icons/Email';\nimport CropFreeIcon from '@material-ui/icons/CropFree';\nimport NotInterestedIcon from '@material-ui/icons/NotInterested';\n\nimport { getBaseUrl } from './util';\n\n// Item types\nexport const VISUALIZATION = 'VISUALIZATION';\nexport const REPORT_TABLE = 'REPORT_TABLE';\nexport const CHART = 'CHART';\nexport const MAP = 'MAP';\nexport const EVENT_REPORT = 'EVENT_REPORT';\nexport const EVENT_CHART = 'EVENT_CHART';\nexport const APP = 'APP';\nexport const REPORTS = 'REPORTS';\nexport const RESOURCES = 'RESOURCES';\nexport const USERS = 'USERS';\nexport const MESSAGES = 'MESSAGES';\nexport const TEXT = 'TEXT';\nexport const SPACER = 'SPACER';\n\nconst DOMAIN_TYPE_AGGREGATE = 'AGGREGATE';\nconst DOMAIN_TYPE_TRACKER = 'TRACKER';\n\n// Dashboard helpers\nexport const isVisualizationType = item =>\n    !!itemTypeMap[item.type].isVisualizationType;\nexport const hasMapView = itemType =>\n    itemTypeMap[itemType].domainType === DOMAIN_TYPE_AGGREGATE;\nexport const isTrackerDomainType = itemType =>\n    itemTypeMap[itemType].domainType === DOMAIN_TYPE_TRACKER;\nexport const getDefaultItemCount = itemType =>\n    itemTypeMap[itemType].defaultItemCount || 5;\nexport const getAppName = itemType => itemTypeMap[itemType].appName || '';\n\n// Item type map\nexport const itemTypeMap = {\n    [VISUALIZATION]: {\n        id: VISUALIZATION,\n        endPointName: 'visualizations',\n        propName: 'visualization',\n        pluralTitle: i18n.t('Visualizations'),\n        appUrl: id => `dhis-web-data-visualizer/#/${id}`,\n        appName: 'Data Visualizer',\n        defaultItemCount: 10,\n    },\n    [REPORT_TABLE]: {\n        id: REPORT_TABLE,\n        endPointName: 'visualizations',\n        propName: 'visualization',\n        pluralTitle: i18n.t('Pivot tables'),\n        domainType: DOMAIN_TYPE_AGGREGATE,\n        isVisualizationType: true,\n        appUrl: id => `dhis-web-data-visualizer/#/${id}`,\n        appName: 'Data Visualizer',\n    },\n    [CHART]: {\n        id: CHART,\n        endPointName: 'visualizations',\n        propName: 'visualization',\n        pluralTitle: i18n.t('Charts'),\n        domainType: DOMAIN_TYPE_AGGREGATE,\n        isVisualizationType: true,\n        appUrl: id => `dhis-web-data-visualizer/#/${id}`,\n        appName: 'Data Visualizer',\n    },\n    [MAP]: {\n        id: MAP,\n        endPointName: 'maps',\n        propName: 'map',\n        pluralTitle: i18n.t('Maps'),\n        domainType: DOMAIN_TYPE_AGGREGATE,\n        isVisualizationType: true,\n        appUrl: id => `dhis-web-maps/?id=${id}`,\n        appName: 'Maps',\n    },\n    [EVENT_REPORT]: {\n        id: EVENT_REPORT,\n        endPointName: 'eventReports',\n        propName: 'eventReport',\n        pluralTitle: i18n.t('Event reports'),\n        domainType: DOMAIN_TYPE_TRACKER,\n        isVisualizationType: true,\n        appUrl: id => `dhis-web-event-reports/?id=${id}`,\n        appName: 'Event Reports',\n    },\n    [EVENT_CHART]: {\n        id: EVENT_CHART,\n        endPointName: 'eventCharts',\n        propName: 'eventChart',\n        pluralTitle: i18n.t('Event charts'),\n        domainType: DOMAIN_TYPE_TRACKER,\n        isVisualizationType: true,\n        appUrl: id => `dhis-web-event-visualizer/?id=${id}`,\n        appName: 'Event Visualizer',\n    },\n    [APP]: {\n        endPointName: 'apps',\n        propName: 'appKey',\n        pluralTitle: i18n.t('Apps'),\n    },\n    [REPORTS]: {\n        id: REPORTS,\n        endPointName: 'reports',\n        propName: 'reports',\n        pluralTitle: i18n.t('Reports'),\n        appUrl: id => `dhis-web-reports/#/standard-report/view/${id}`,\n    },\n    [RESOURCES]: {\n        id: RESOURCES,\n        endPointName: 'resources',\n        propName: 'resources',\n        pluralTitle: i18n.t('Resources'),\n        appUrl: id => `api/documents/${id}/data`,\n    },\n    [USERS]: {\n        id: USERS,\n        endPointName: 'users',\n        propName: 'users',\n        pluralTitle: i18n.t('Users'),\n        appUrl: id => `dhis-web-dashboard-integration/profile.action?id=${id}`,\n    },\n    [TEXT]: {\n        id: TEXT,\n        propName: 'text',\n    },\n    [MESSAGES]: {\n        propName: 'messages',\n    },\n    [SPACER]: {\n        propName: 'text',\n    },\n};\n\nexport const getEndPointName = type => itemTypeMap[type].endPointName;\n\nexport const getItemUrl = (type, item, d2) => {\n    let url;\n\n    if (type === APP) {\n        url = item.launchUrl;\n    }\n\n    if (itemTypeMap[type] && itemTypeMap[type].appUrl) {\n        url = `${getBaseUrl(d2)}/${itemTypeMap[type].appUrl(item.id)}`;\n    }\n\n    return url;\n};\n\nexport const getItemIcon = type => {\n    switch (type) {\n        case REPORT_TABLE:\n        case EVENT_REPORT:\n        case REPORTS:\n            return TableIcon;\n        case CHART:\n        case EVENT_CHART:\n            return ChartIcon;\n        case MAP:\n            return MapIcon;\n        case APP:\n            return ExtensionIcon;\n        case RESOURCES:\n            return DescriptionIcon;\n        case USERS:\n            return PersonIcon;\n        case TEXT:\n            return FontDownloadIcon;\n        case MESSAGES:\n            return EmailIcon;\n        case SPACER:\n            return CropFreeIcon;\n        default:\n            return NotInterestedIcon;\n    }\n};\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"Item_list__2oHc1\",\"item\":\"Item_item__lO40M\",\"itemicon\":\"Item_itemicon__dv5ah\",\"link\":\"Item_link__2gULT\",\"deleteicon\":\"Item_deleteicon__3c7bl\",\"deletebutton\":\"Item_deletebutton__1DfY5\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"chip\":\"DashboardItemChip_chip__3znxp\",\"link\":\"DashboardItemChip_link__1b7Z_\",\"icon\":\"DashboardItemChip_icon__1zOaG\",\"selected\":\"DashboardItemChip_selected__36Qak\",\"unselected\":\"DashboardItemChip_unselected__3dm-X\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"section\":\"EditTitleBar_section__2sBzn\",\"titleDescription\":\"EditTitleBar_titleDescription__1-pfK\",\"title\":\"EditTitleBar_title__2fOQP\",\"description\":\"EditTitleBar_description__fKEX6\",\"itemSelector\":\"EditTitleBar_itemSelector__PWJdH\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"actions\":\"ViewTitleBar_actions__1kGtw\",\"editLink\":\"ViewTitleBar_editLink__1HKr0\",\"titleBar\":\"ViewTitleBar_titleBar__1K-pW\",\"titleBarIcon\":\"ViewTitleBar_titleBarIcon__2spKM\"};","export const RECEIVED_USER = 'RECEIVED_USER';\n\nexport const DEFAULT_STATE_USER = {\n    id: '',\n    username: '',\n    uiLocale: '',\n    isSuperuser: false,\n};\n\nexport default (state = DEFAULT_STATE_USER, action) => {\n    switch (action.type) {\n        case RECEIVED_USER: {\n            return fromD2ToUserObj(action.value);\n        }\n        default:\n            return state;\n    }\n};\n\nfunction fromD2ToUserObj(d2Object) {\n    return {\n        id: d2Object.id,\n        username: d2Object.username,\n        uiLocale: d2Object.settings.keyUiLocale,\n        isSuperuser: d2Object.authorities.has('ALL'),\n    };\n}\n\n// selectors\n\nexport const sGetUserId = state => state.user.id;\nexport const sGetUserUsername = state => state.user.username;\nexport const sGetIsSuperuser = state => state.user.isSuperuser;\nexport const sGetUiLocale = state => state.user.uiLocale;\n","import { TEXT, SPACER } from './itemTypes';\nimport { getGridItemProperties } from '../components/ItemGrid/gridUtil';\n\nexport const spacerContent = 'SPACER_ITEM_FOR_DASHBOARD_LAYOUT_CONVENIENCE';\nexport const emptyTextItemContent = 'TEXT_ITEM_WITH_NO_CONTENT';\n\nconst isBackendSpacerType = item =>\n    item.type === TEXT && item.text === spacerContent;\nconst isUiSpacerType = item => item.type === SPACER;\nconst isTextType = item => item.type === TEXT && item.text !== spacerContent;\n\nexport const convertUiItemsToBackend = items =>\n    items.map(item => {\n        let text = null;\n        if (isUiSpacerType(item)) {\n            text = spacerContent;\n        } else if (isTextType(item)) {\n            text = item.text || emptyTextItemContent;\n        }\n\n        return {\n            ...item,\n            ...(text ? { text } : {}),\n        };\n    });\n\nexport const convertBackendItemsToUi = items =>\n    items.map(item => {\n        const type = isBackendSpacerType(item) ? SPACER : item.type;\n        const gridProperties = getGridItemProperties(item.id);\n\n        const text = isTextType(item)\n            ? item.text === emptyTextItemContent\n                ? ''\n                : item.text\n            : null;\n\n        return {\n            ...item,\n            ...(text !== null ? { text } : {}),\n            type,\n            ...gridProperties,\n        };\n    });\n","/** @module reducers/dashboards */\n\nimport arrayFrom from 'd2-utilizr/lib/arrayFrom';\nimport arraySort from 'd2-utilizr/lib/arraySort';\n\nimport { orArray, orObject } from '../modules/util';\nimport { convertBackendItemsToUi } from '../modules/uiBackendItemConverter';\n\nexport const SET_DASHBOARDS = 'SET_DASHBOARDS';\nexport const ADD_DASHBOARDS = 'ADD_DASHBOARDS';\nexport const SET_DASHBOARD_STARRED = 'SET_DASHBOARD_STARRED';\nexport const SET_DASHBOARD_DISPLAY_NAME = 'SET_DASHBOARD_DISPLAY_NAME';\nexport const SET_DASHBOARD_ITEMS = 'SET_DASHBOARD_ITEMS';\n\nexport const DEFAULT_STATE_DASHBOARDS = {\n    byId: null,\n    items: [],\n};\n\n// reducer helper functions\n\nconst updateDashboardProp = ({ state, dashboardId, prop, value }) => ({\n    byId: {\n        ...state.byId,\n        [dashboardId]: {\n            ...state.byId[dashboardId],\n            [prop]: value,\n        },\n    },\n    items: state.items,\n});\n\n/**\n * Reducer that computes and returns the new state based on the given action\n * @function\n * @param {Object} state The current state\n * @param {Object} action The action to be evaluated\n * @returns {Object}\n */\nexport default (state = DEFAULT_STATE_DASHBOARDS, action) => {\n    switch (action.type) {\n        case SET_DASHBOARDS: {\n            return {\n                byId: action.value,\n                items: [],\n            };\n        }\n        case ADD_DASHBOARDS: {\n            return {\n                ...state,\n                byId: {\n                    ...state.byId,\n                    ...action.value,\n                },\n            };\n        }\n        case SET_DASHBOARD_STARRED: {\n            return updateDashboardProp({\n                state,\n                dashboardId: action.dashboardId,\n                prop: 'starred',\n                value: action.value,\n            });\n        }\n        case SET_DASHBOARD_DISPLAY_NAME: {\n            return updateDashboardProp({\n                state,\n                dashboardId: action.dashboardId,\n                prop: 'displayName',\n                value: action.value,\n            });\n        }\n        case SET_DASHBOARD_ITEMS: {\n            return {\n                ...state,\n                items: action.value,\n            };\n        }\n        default:\n            return state;\n    }\n};\n\n// root selector\n\nexport const sGetDashboardsRoot = state => state.dashboards;\n\n// selector level 1\n\n/**\n * Selector which returns a dashboard by id from the state object\n * If no matching dashboard is found it returns undefined\n * If dashboards.byId is null, then the dashboards api request\n * has not yet completed. If dashboards.byId is an empty object\n * then the dashboards api request is complete, but no dashboards\n * were returned\n *\n * @function\n * @param {Object} state The current state\n * @param {Number} id The id of the dashboard\n * @returns {Object | undefined}\n */\nexport const sGetDashboardById = (state, id) =>\n    orObject(sGetDashboardsRoot(state).byId)[id];\n\nexport const sDashboardsIsFetching = state => {\n    return sGetDashboardsRoot(state).byId === null;\n};\n\n/**\n * Selector which returns all dashboards (the byId object)\n *\n * @function\n * @param {Object} state The current state\n * @returns {Object | undefined}\n */\nexport const sGetAllDashboards = state =>\n    orObject(sGetDashboardsRoot(state).byId);\n\n/**\n * Selector which returns the current dashboard items\n *\n * @function\n * @param {Object} state The current state\n * @returns {Array}\n */\nexport const sGetDashboardItems = state => sGetDashboardsRoot(state).items;\n\n// selector level 2\n\nexport const sGetStarredDashboards = state =>\n    Object.values(sGetAllDashboards(state)).filter(\n        dashboard => dashboard.starred === true\n    );\n\nexport const sGetUnstarredDashboards = state =>\n    Object.values(sGetAllDashboards(state)).filter(\n        dashboard => dashboard.starred === false\n    );\n\n// selector level 3\n\nexport const sGetStarredDashboardIds = state => {\n    return sGetStarredDashboards(state).map(dashboard => dashboard.id);\n};\n\nexport const sGetUnstarredDashboardIds = state =>\n    sGetUnstarredDashboards(state).map(dashboard => dashboard.id);\n\nexport const sGetDashboardsSortedByStarred = state => [\n    ...arraySort(sGetStarredDashboards(state), 'ASC', 'displayName'),\n    ...arraySort(sGetUnstarredDashboards(state), 'ASC', 'displayName'),\n];\n\n// utils\n\n/**\n * Returns the array of dashboards, customized for ui\n * @function\n * @param {Array} data The original dashboard list\n * @returns {Array}\n */\nexport const getCustomDashboards = data =>\n    arrayFrom(data).map(d => ({\n        id: d.id,\n        name: d.name,\n        displayName: d.displayName,\n        description: d.description,\n        displayDescription: d.displayDescription,\n        starred: d.favorite,\n        owner: d.user.name,\n        created: d.created\n            .split('T')\n            .join(' ')\n            .substr(0, 16),\n        lastUpdated: d.lastUpdated\n            .split('T')\n            .join(' ')\n            .substr(0, 16),\n        access: d.access,\n        numberOfItems: orArray(d.dashboardItems).length,\n        dashboardItems: convertBackendItemsToUi(d.dashboardItems),\n    }));\n","/** @module reducers/editDashboard */\nimport update from 'immutability-helper';\nimport isEmpty from 'lodash/isEmpty';\nimport { orArray, orObject } from '../modules/util';\n\nexport const RECEIVED_EDIT_DASHBOARD = 'RECEIVED_EDIT_DASHBOARD';\nexport const RECEIVED_NOT_EDITING = 'RECEIVED_NOT_EDITING';\nexport const START_NEW_DASHBOARD = 'START_NEW_DASHBOARD';\nexport const RECEIVED_TITLE = 'RECEIVED_TITLE';\nexport const RECEIVED_DESCRIPTION = 'RECEIVED_DESCRIPTION';\nexport const ADD_DASHBOARD_ITEM = 'ADD_DASHBOARD_ITEM';\nexport const REMOVE_DASHBOARD_ITEM = 'REMOVE_DASHBOARD_ITEM';\nexport const UPDATE_DASHBOARD_ITEM = 'UPDATE_DASHBOARD_ITEM';\nexport const RECEIVED_DASHBOARD_LAYOUT = 'RECEIVED_DASHBOARD_LAYOUT';\n\nexport const DEFAULT_STATE_EDIT_DASHBOARD = {};\nexport const NEW_DASHBOARD_STATE = {\n    id: '',\n    name: '',\n    access: {},\n    description: '',\n    dashboardItems: [],\n};\n\nexport default (state = DEFAULT_STATE_EDIT_DASHBOARD, action) => {\n    switch (action.type) {\n        case RECEIVED_EDIT_DASHBOARD: {\n            const newState = {};\n            Object.keys(NEW_DASHBOARD_STATE).map(\n                k => (newState[k] = action.value[k])\n            );\n            return newState;\n        }\n        case RECEIVED_NOT_EDITING:\n            return DEFAULT_STATE_EDIT_DASHBOARD;\n        case START_NEW_DASHBOARD:\n            return NEW_DASHBOARD_STATE;\n        case RECEIVED_TITLE: {\n            return Object.assign({}, state, { name: action.value });\n        }\n        case RECEIVED_DESCRIPTION: {\n            return Object.assign({}, state, {\n                description: action.value,\n            });\n        }\n        case ADD_DASHBOARD_ITEM:\n            return update(state, {\n                dashboardItems: { $unshift: [action.value] },\n            });\n        case REMOVE_DASHBOARD_ITEM: {\n            const idToRemove = action.value;\n\n            const dashboardItemIndex = state.dashboardItems.findIndex(\n                item => item.id === idToRemove\n            );\n\n            if (dashboardItemIndex > -1) {\n                return update(state, {\n                    dashboardItems: {\n                        $splice: [[dashboardItemIndex, 1]],\n                    },\n                });\n            }\n\n            return state;\n        }\n        case RECEIVED_DASHBOARD_LAYOUT: {\n            const stateItems = orArray(state.dashboardItems);\n            let layoutHasChanged = false;\n\n            const newStateItems = action.value.map(({ x, y, w, h, i }) => {\n                const stateItem = stateItems.find(si => si.id === i);\n\n                if (\n                    !(\n                        stateItem.x === x &&\n                        stateItem.y === y &&\n                        stateItem.w === w &&\n                        stateItem.h === h\n                    )\n                ) {\n                    layoutHasChanged = true;\n                    return Object.assign({}, stateItem, { w, h, x, y });\n                }\n\n                return stateItem;\n            });\n\n            return layoutHasChanged\n                ? {\n                      ...state,\n                      dashboardItems: newStateItems,\n                  }\n                : state;\n        }\n        case UPDATE_DASHBOARD_ITEM: {\n            const dashboardItem = action.value;\n\n            const dashboardItemIndex = state.dashboardItems.findIndex(\n                item => item.id === dashboardItem.id\n            );\n\n            if (dashboardItemIndex > -1) {\n                const newState = update(state, {\n                    dashboardItems: {\n                        $splice: [\n                            [\n                                dashboardItemIndex,\n                                1,\n                                Object.assign({}, dashboardItem),\n                            ],\n                        ],\n                    },\n                });\n\n                return newState;\n            }\n\n            return state;\n        }\n        default:\n            return state;\n    }\n};\n\n// root selector\n\nexport const sGetEditDashboardRoot = state => state.editDashboard;\n\n// selectors\n\nexport const sGetIsEditing = state => !isEmpty(state.editDashboard);\n\nexport const sGetIsNewDashboard = state => {\n    return (\n        !isEmpty(state.editDashboard) && sGetEditDashboardRoot(state).id === ''\n    );\n};\n\nexport const sGetEditDashboardItems = state =>\n    orObject(sGetEditDashboardRoot(state)).dashboardItems;\n","export const CLEAR_EDIT_ITEM_FILTERS = 'CLEAR_EDIT_ITEM_FILTERS';\nexport const REMOVE_EDIT_ITEM_FILTER = 'REMOVE_EDIT_ITEM_FILTER';\nexport const SET_EDIT_ITEM_FILTERS = 'SET_EDIT_ITEM_FILTERS';\n\nexport const DEFAULT_STATE_EDIT_ITEM_FILTERS = {};\n\nexport default (state = DEFAULT_STATE_EDIT_ITEM_FILTERS, action) => {\n    switch (action.type) {\n        case REMOVE_EDIT_ITEM_FILTER: {\n            const newState = { ...state };\n\n            delete newState[action.id];\n\n            return newState;\n        }\n        case SET_EDIT_ITEM_FILTERS: {\n            return action.filters;\n        }\n        case CLEAR_EDIT_ITEM_FILTERS: {\n            return DEFAULT_STATE_EDIT_ITEM_FILTERS;\n        }\n        default:\n            return state;\n    }\n};\n\n// selectors\n\nexport const sGetEditItemFiltersRoot = state => state.editItemFilters;\n\nexport const sGetEditFiltersKeys = state =>\n    Object.keys(sGetEditItemFiltersRoot(state));\n","/** @module reducers/selected */\nimport { combineReducers } from 'redux';\n\nimport { validateReducer } from '../modules/util';\n\nexport const SET_SELECTED_ID = 'SET_SELECTED_ID';\nexport const SET_SELECTED_ISLOADING = 'SET_SELECTED_ISLOADING';\nexport const SET_SELECTED_SHOWDESCRIPTION = 'SET_SELECTED_SHOWDESCRIPTION';\n\nexport const DEFAULT_STATE_SELECTED_ID = null;\nexport const DEFAULT_STATE_SELECTED_ISLOADING = false;\nexport const DEFAULT_STATE_SELECTED_SHOWDESCRIPTION = false;\n\n/**\n * Reducer functions that computes and returns the new state based on the given action\n * @function\n * @param {Object} state The current state\n * @param {Object} action The action to be evaluated\n */\nconst id = (state = DEFAULT_STATE_SELECTED_ID, action) => {\n    switch (action.type) {\n        case SET_SELECTED_ID:\n            return validateReducer(action.value, DEFAULT_STATE_SELECTED_ID);\n        default:\n            return state;\n    }\n};\n\nconst isLoading = (state = DEFAULT_STATE_SELECTED_ISLOADING, action) => {\n    switch (action.type) {\n        case SET_SELECTED_ISLOADING:\n            return validateReducer(\n                action.value,\n                DEFAULT_STATE_SELECTED_ISLOADING\n            );\n        default:\n            return state;\n    }\n};\n\nconst showDescription = (\n    state = DEFAULT_STATE_SELECTED_SHOWDESCRIPTION,\n    action\n) => {\n    switch (action.type) {\n        case SET_SELECTED_SHOWDESCRIPTION:\n            return validateReducer(\n                action.value,\n                DEFAULT_STATE_SELECTED_SHOWDESCRIPTION\n            );\n        default:\n            return state;\n    }\n};\n\nexport default combineReducers({\n    id,\n    isLoading,\n    showDescription,\n});\n\n// Selectors\n\nexport const sGetSelectedRoot = state => state.selected;\n\nexport const sGetSelectedId = state => sGetSelectedRoot(state).id;\n\nexport const sGetSelectedIsLoading = state => sGetSelectedRoot(state).isLoading;\n\nexport const sGetSelectedShowDescription = state =>\n    sGetSelectedRoot(state).showDescription;\n","import {\n    REMOVE_EDIT_ITEM_FILTER,\n    SET_EDIT_ITEM_FILTERS,\n    CLEAR_EDIT_ITEM_FILTERS,\n} from '../reducers/editItemFilters';\n\n// actions\n\nexport const acRemoveEditItemFilter = id => ({\n    type: REMOVE_EDIT_ITEM_FILTER,\n    id,\n});\n\nexport const acClearEditItemFilters = () => ({\n    type: CLEAR_EDIT_ITEM_FILTERS,\n});\n\nexport const acSetEditItemFilters = filters => ({\n    type: SET_EDIT_ITEM_FILTERS,\n    filters,\n});\n","export const CLEAR_ITEM_FILTERS = 'CLEAR_ITEM_FILTERS';\nexport const SET_ITEM_FILTERS = 'SET_ITEM_FILTERS';\nexport const ADD_ITEM_FILTER = 'ADD_ITEM_FILTER';\nexport const REMOVE_ITEM_FILTER = 'REMOVE_ITEM_FILTER';\n\nexport const DEFAULT_STATE_ITEM_FILTERS = {};\n\nexport default (state = DEFAULT_STATE_ITEM_FILTERS, action) => {\n    switch (action.type) {\n        case ADD_ITEM_FILTER: {\n            return {\n                ...state,\n                [action.filter.id]: action.filter.value,\n            };\n        }\n        case REMOVE_ITEM_FILTER: {\n            const newState = { ...state };\n\n            delete newState[action.id];\n\n            return newState;\n        }\n        case SET_ITEM_FILTERS: {\n            return action.filters;\n        }\n        case CLEAR_ITEM_FILTERS: {\n            return DEFAULT_STATE_ITEM_FILTERS;\n        }\n        default:\n            return state;\n    }\n};\n\n// selectors\n\nexport const sGetItemFiltersRoot = state => state.itemFilters;\n\nexport const sGetFiltersKeys = state => Object.keys(sGetItemFiltersRoot(state));\n","import {\n    ADD_ITEM_FILTER,\n    REMOVE_ITEM_FILTER,\n    SET_ITEM_FILTERS,\n    CLEAR_ITEM_FILTERS,\n} from '../reducers/itemFilters';\n\nexport const FILTER_ORG_UNIT = 'ou';\n\n// actions\n\nexport const acAddItemFilter = filter => ({\n    type: ADD_ITEM_FILTER,\n    filter,\n});\n\nexport const acRemoveItemFilter = id => ({\n    type: REMOVE_ITEM_FILTER,\n    id,\n});\n\nexport const acClearItemFilters = () => ({\n    type: CLEAR_ITEM_FILTERS,\n});\n\nexport const acSetItemFilters = filters => ({\n    type: SET_ITEM_FILTERS,\n    filters,\n});\n","import update from 'immutability-helper';\nimport { arrayToIdMap } from '../modules/util';\n\nexport const RECEIVED_MESSAGES = 'RECEIVED_MESSAGES';\n\nexport default (state = {}, action) => {\n    switch (action.type) {\n        case RECEIVED_MESSAGES: {\n            const conversations = arrayToIdMap(action.value);\n\n            const newState = update(state, { $merge: conversations });\n\n            return newState;\n        }\n        default:\n            return state;\n    }\n};\n\n// selectors\n\nexport const sGetMessagesRoot = state => state.messages;\n","import { getInstance } from 'd2';\n\nexport const getMessages = () => {\n    const fields =\n        'id,messageCount,lastUpdated,messageType,displayName,read,messages[id,read,sender[id,displayName],text,lastUpdated]';\n    const url = `/messageConversations?fields=${fields}&order=read:asc&pageSize=200`;\n    return getInstance()\n        .then(d2 => d2.Api.getApi().get(url))\n        .catch(error => console.log('Error:', error));\n};\n","export const RECEIVED_SNACKBAR_MESSAGE = 'RECEIVED_SNACKBAR_MESSAGE';\nexport const CLOSE_SNACKBAR = 'CLOSE_SNACKBAR';\n\nexport const DEFAULT_STATE_SNACKBAR = {\n    message: {},\n    duration: null,\n    open: false,\n};\n\nexport default (state = DEFAULT_STATE_SNACKBAR, action) => {\n    switch (action.type) {\n        case RECEIVED_SNACKBAR_MESSAGE: {\n            return { ...state, ...action.value };\n        }\n        case CLOSE_SNACKBAR: {\n            return DEFAULT_STATE_SNACKBAR;\n        }\n        default:\n            return state;\n    }\n};\n\n// selectors\n\nexport const sGetSnackbar = state => state.snackbar || DEFAULT_STATE_SNACKBAR;\n","import {\n    RECEIVED_SNACKBAR_MESSAGE,\n    CLOSE_SNACKBAR,\n} from '../reducers/snackbar';\n\nexport const acReceivedSnackbarMessage = value => ({\n    type: RECEIVED_SNACKBAR_MESSAGE,\n    value,\n});\n\nexport const acCloseSnackbar = () => ({\n    type: CLOSE_SNACKBAR,\n});\n","import { orObject } from '../modules/util';\nimport objectClean from 'd2-utilizr/lib/objectClean';\n\n/** @module reducers/visualizations */\n\nexport const ADD_VISUALIZATION = 'ADD_VISUALIZATION';\nexport const SET_ACTIVE_VISUALIZATION_TYPE = 'SET_ACTIVE_VISUALIZATION_TYPE';\n\nexport const DEFAULT_STATE_VISUALIZATIONS = {};\n\nconst isEmpty = p => p === undefined || p === null;\n\nexport default (state = DEFAULT_STATE_VISUALIZATIONS, action) => {\n    switch (action.type) {\n        case ADD_VISUALIZATION: {\n            return {\n                ...state,\n                [action.value.id]: objectClean(\n                    {\n                        ...orObject(state[action.value.id]),\n                        ...action.value,\n                    },\n                    isEmpty\n                ),\n            };\n        }\n        case SET_ACTIVE_VISUALIZATION_TYPE: {\n            return {\n                ...state,\n                [action.id]: objectClean(\n                    {\n                        ...orObject(state[action.id]),\n                        activeType: action.activeType,\n                    },\n                    isEmpty\n                ),\n            };\n        }\n        default:\n            return state;\n    }\n};\n\n// root selector\nexport const sGetVisualizationsRoot = state => state.visualizations;\n\n// selectors level 1\nexport const sGetVisualization = (state, id) => {\n    return sGetVisualizationsRoot(state)[id];\n};\n","import {\n    ADD_VISUALIZATION,\n    SET_ACTIVE_VISUALIZATION_TYPE,\n} from '../reducers/visualizations';\n\nexport const acAddVisualization = value => ({\n    type: ADD_VISUALIZATION,\n    value,\n});\n\nexport const acSetActiveVisualizationType = (id, activeType) => {\n    const action = {\n        type: SET_ACTIVE_VISUALIZATION_TYPE,\n        id,\n        activeType,\n    };\n\n    return action;\n};\n","import arrayClean from 'd2-utilizr/lib/arrayClean';\nimport {\n    getListItemFields,\n    getFavoritesFields,\n    getIdNameFields,\n} from './metadata';\n\n// Helper functions\n\nexport const onError = error => console.log('Error: ', error);\n\n// Dashboard item\nexport const getDashboardItemsFields = ({ withFavorite } = {}) =>\n    arrayClean([\n        'id',\n        'type',\n        'shape',\n        'x',\n        'y',\n        'width~rename(w)',\n        'height~rename(h)',\n        'messages',\n        'text',\n        'appKey',\n        `${getListItemFields().join(',')}`,\n        withFavorite\n            ? `${getFavoritesFields({\n                  withDimensions: withFavorite.withDimensions,\n              }).join(',')}`\n            : ``,\n    ]);\n\n// Dashboard\nexport const getDashboardFields = ({ withItems, withFavorite } = {}) =>\n    arrayClean([\n        `${getIdNameFields().join(',')}`,\n        'description',\n        'displayDescription',\n        'favorite',\n        `user[${getIdNameFields({ rename: true }).join(',')}]`,\n        'created',\n        'lastUpdated',\n        'access',\n        withItems\n            ? `dashboardItems[${getDashboardItemsFields({\n                  withFavorite,\n              }).join(',')}]`\n            : ``,\n    ]);\n","import { getInstance } from 'd2';\nimport arrayClean from 'd2-utilizr/lib/arrayClean';\nimport { onError, getDashboardFields } from './index';\n\n// Get \"all\" dashboards on startup\nexport const apiFetchDashboards = () =>\n    getInstance()\n        .then(d2 =>\n            d2.models.dashboard.list({\n                fields: [\n                    getDashboardFields().join(','),\n                    'dashboardItems[id]',\n                ].join(','),\n                paging: 'false',\n            })\n        )\n        .catch(onError);\n\n// Get more info about selected dashboard\nexport const apiFetchDashboard = id =>\n    getInstance()\n        .then(d2 =>\n            d2.models.dashboard.get(id, {\n                fields: arrayClean(\n                    getDashboardFields({\n                        withItems: true,\n                        withFavorite: { withDimensions: false },\n                    })\n                ).join(','),\n            })\n        )\n        .catch(onError);\n\n// Star dashboard\nexport const apiStarDashboard = (id, isStarred) => {\n    const url = `dashboards/${id}/favorite`;\n\n    getInstance().then(d2 => {\n        if (isStarred) {\n            d2.Api.getApi().post(url);\n        } else {\n            d2.Api.getApi().delete(url);\n        }\n    });\n};\n\nexport const apiDeleteDashboard = id => {\n    return getInstance()\n        .then(d2 => {\n            return d2.models.dashboards\n                .get(id)\n                .then(dashboard => dashboard.delete());\n        })\n        .catch(onError);\n};\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport Snackbar from '@material-ui/core/Snackbar';\nimport PropTypes from 'prop-types';\n\nimport { sGetSnackbar } from '../../reducers/snackbar';\nimport { acCloseSnackbar } from '../../actions/snackbar';\n\nconst LOADING_DASHBOARD = 'LOADING_DASHBOARD';\nexport const loadingDashboardMsg = { name: '', type: LOADING_DASHBOARD };\n\nconst SnackbarMessageContent = ({ message }) => {\n    if (typeof message === 'object') {\n        //future message types:  switch(message.type)\n        return (\n            <span>\n                Loading <span style={{ fontWeight: 800 }}>{message.name}</span>{' '}\n                dashboard\n            </span>\n        );\n    }\n    return message;\n};\n\nexport const SnackbarMessage = props => {\n    return (\n        <Snackbar\n            style={{ zIndex: 10001 }}\n            open={props.snackbarOpen}\n            message={<SnackbarMessageContent message={props.snackbarMessage} />}\n            autoHideDuration={props.snackbarDuration}\n            onClose={props.onCloseSnackbar}\n        />\n    );\n};\n\nconst mapStateToProps = state => {\n    const { message, duration, open } = sGetSnackbar(state);\n    return {\n        snackbarOpen: open,\n        snackbarMessage: message,\n        snackbarDuration: duration,\n    };\n};\n\nSnackbarMessage.propTypes = {\n    snackbarDuration: PropTypes.string,\n    snackbarMessage: PropTypes.object,\n    snackbarOpen: PropTypes.bool,\n    onCloseSnackbar: PropTypes.func,\n};\n\nexport default connect(\n    mapStateToProps,\n    {\n        onCloseSnackbar: acCloseSnackbar,\n    }\n)(SnackbarMessage);\n","import { getCustomDashboards, sGetDashboardById } from '../reducers/dashboards';\nimport { sGetIsEditing } from '../reducers/editDashboard';\nimport { sGetEditItemFiltersRoot } from '../reducers/editItemFilters';\nimport {\n    SET_SELECTED_ID,\n    SET_SELECTED_ISLOADING,\n    SET_SELECTED_SHOWDESCRIPTION,\n    sGetSelectedIsLoading,\n    sGetSelectedId,\n} from '../reducers/selected';\nimport { sGetUserUsername } from '../reducers/user';\n\nimport { acSetDashboardItems, acAppendDashboards } from './dashboards';\nimport { acClearEditItemFilters } from './editItemFilters';\nimport { acClearItemFilters, acSetItemFilters } from './itemFilters';\nimport { tGetMessages } from '../components/Item/MessagesItem/actions';\nimport { acReceivedSnackbarMessage, acCloseSnackbar } from './snackbar';\nimport { acAddVisualization } from './visualizations';\n\nimport { apiFetchDashboard } from '../api/dashboards';\nimport { storePreferredDashboardId } from '../api/localStorage';\n\nimport { withShape } from '../components/ItemGrid/gridUtil';\nimport { loadingDashboardMsg } from '../components/SnackbarMessage/SnackbarMessage';\nimport { extractFavorite } from '../components/Item/VisualizationItem/plugin';\n\nimport {\n    REPORT_TABLE,\n    CHART,\n    MAP,\n    EVENT_REPORT,\n    EVENT_CHART,\n    MESSAGES,\n} from '../modules/itemTypes';\nimport { orObject } from '../modules/util';\n\n// actions\n\nexport const acSetSelectedId = value => ({\n    type: SET_SELECTED_ID,\n    value,\n});\n\nexport const acSetSelectedIsLoading = value => ({\n    type: SET_SELECTED_ISLOADING,\n    value,\n});\n\nexport const acSetSelectedShowDescription = value => ({\n    type: SET_SELECTED_SHOWDESCRIPTION,\n    value,\n});\n\nexport const tLoadDashboard = id => async dispatch => {\n    try {\n        const dash = await apiFetchDashboard(id);\n\n        dispatch(acAppendDashboards(dash));\n\n        return Promise.resolve(dash);\n    } catch (err) {\n        console.log('Error: ', err);\n        return err;\n    }\n};\n\n// thunks\nexport const tSetSelectedDashboardById = id => async (dispatch, getState) => {\n    dispatch(acSetSelectedIsLoading(true));\n\n    const snackbarTimeout = setTimeout(() => {\n        const dashboardName = orObject(sGetDashboardById(getState(), id))\n            .displayName;\n        if (sGetSelectedIsLoading(getState()) && dashboardName) {\n            loadingDashboardMsg.name = dashboardName;\n\n            dispatch(\n                acReceivedSnackbarMessage({\n                    message: loadingDashboardMsg,\n                    open: true,\n                })\n            );\n        }\n    }, 500);\n\n    const onSuccess = selected => {\n        const customDashboard = getCustomDashboards(selected)[0];\n\n        dispatch(\n            acSetDashboardItems(withShape(customDashboard.dashboardItems))\n        );\n\n        storePreferredDashboardId(sGetUserUsername(getState()), id);\n\n        // add visualizations to store\n        customDashboard.dashboardItems.forEach(item => {\n            switch (item.type) {\n                case REPORT_TABLE:\n                case CHART:\n                case MAP:\n                case EVENT_REPORT:\n                case EVENT_CHART:\n                    dispatch(acAddVisualization(extractFavorite(item)));\n                    break;\n                case MESSAGES:\n                    dispatch(tGetMessages(id));\n                    break;\n                default:\n                    break;\n            }\n        });\n\n        const state = getState();\n        if (id === sGetSelectedId(state)) {\n            if (sGetIsEditing(state)) {\n                // disable filters when switching to edit mode\n                dispatch(acClearItemFilters());\n            } else {\n                // enable filters when switching to view mode\n                dispatch(acSetItemFilters(sGetEditItemFiltersRoot(state)));\n            }\n        } else {\n            // clear filters when switching dashboard\n            dispatch(acClearEditItemFilters());\n            dispatch(acClearItemFilters());\n        }\n\n        dispatch(acSetSelectedId(id));\n\n        dispatch(acSetSelectedIsLoading(false));\n\n        clearTimeout(snackbarTimeout);\n\n        dispatch(acCloseSnackbar());\n\n        return selected;\n    };\n\n    const onError = error => {\n        console.log('Error: ', error);\n        return error;\n    };\n\n    try {\n        const selected = await dispatch(tLoadDashboard(id));\n\n        return onSuccess(selected);\n    } catch (err) {\n        return onError(err);\n    }\n};\n","export const getPreferredDashboardId = username =>\n    localStorage.getItem(`dhis2.dashboard.current.${username}`) || undefined;\n\nexport const storePreferredDashboardId = (username, dashboardId) => {\n    localStorage.setItem(`dhis2.dashboard.current.${username}`, dashboardId);\n};\n","import { RECEIVED_MESSAGES } from '../../../reducers/messages';\nimport { getMessages } from '../../../api/messages';\n\nconst onError = (action, error) => {\n    console.log(`Error in action ${action}: ${error}`);\n    return error;\n};\n\nexport const receivedMessages = value => ({\n    type: RECEIVED_MESSAGES,\n    value,\n});\n\nexport const tGetMessages = () => async dispatch => {\n    try {\n        const messages = await getMessages();\n        const { messageConversations } = messages;\n\n        return dispatch(receivedMessages(messageConversations));\n    } catch (err) {\n        return onError('Get Messages', err);\n    }\n};\n","import { getInstance } from 'd2';\n\nconst onError = error => console.log('Error: ', error);\n\nconst saveDashboard = (dashboard, data) => {\n    const { name, description, dashboardItems } = data;\n\n    dashboard.name = name;\n    dashboard.description = description;\n    dashboard.dashboardItems = dashboardItems.map(item =>\n        Object.assign({}, item, { width: item.w, height: item.h })\n    );\n\n    return dashboard.save().then(msg => msg.response.uid);\n};\n\nexport const updateDashboard = data => {\n    return getInstance()\n        .then(d2 => {\n            return d2.models.dashboards\n                .get(data.id)\n                .then(dashboard => saveDashboard(dashboard, data));\n        })\n        .catch(onError);\n};\n\nexport const postDashboard = data => {\n    return getInstance().then(d2 => {\n        const dashboard = d2.models.dashboards.create();\n\n        return saveDashboard(dashboard, data);\n    });\n};\n","import { generateUid } from 'd2/uid';\n\nimport {\n    RECEIVED_EDIT_DASHBOARD,\n    START_NEW_DASHBOARD,\n    RECEIVED_NOT_EDITING,\n    RECEIVED_TITLE,\n    RECEIVED_DESCRIPTION,\n    RECEIVED_DASHBOARD_LAYOUT,\n    ADD_DASHBOARD_ITEM,\n    UPDATE_DASHBOARD_ITEM,\n    REMOVE_DASHBOARD_ITEM,\n} from '../reducers/editDashboard';\nimport { sGetEditDashboardRoot } from '../reducers/editDashboard';\nimport { updateDashboard, postDashboard } from '../api/editDashboard';\nimport { tSetSelectedDashboardById } from '../actions/selected';\nimport {\n    NEW_ITEM_SHAPE,\n    getGridItemProperties,\n} from '../components/ItemGrid/gridUtil';\nimport { itemTypeMap } from '../modules/itemTypes';\nimport { convertUiItemsToBackend } from '../modules/uiBackendItemConverter';\n\nconst onError = error => {\n    console.log('Error (Saving Dashboard): ', error);\n    return error;\n};\n\n// actions\n\nexport const acSetEditDashboard = (dashboard, items) => {\n    const val = {\n        ...dashboard,\n        dashboardItems: items,\n    };\n\n    return {\n        type: RECEIVED_EDIT_DASHBOARD,\n        value: val,\n    };\n};\n\nexport const acSetEditNewDashboard = () => ({\n    type: START_NEW_DASHBOARD,\n});\n\nexport const acClearEditDashboard = () => ({\n    type: RECEIVED_NOT_EDITING,\n});\n\nexport const acSetDashboardTitle = value => ({\n    type: RECEIVED_TITLE,\n    value,\n});\n\nexport const acSetDashboardDescription = value => ({\n    type: RECEIVED_DESCRIPTION,\n    value,\n});\n\nexport const acUpdateDashboardLayout = value => ({\n    type: RECEIVED_DASHBOARD_LAYOUT,\n    value,\n});\n\nexport const acAddDashboardItem = item => {\n    const type = item.type;\n    delete item.type;\n    const itemPropName = itemTypeMap[type].propName;\n\n    const id = generateUid();\n    const gridItemProperties = getGridItemProperties(id);\n\n    return {\n        type: ADD_DASHBOARD_ITEM,\n        value: {\n            id,\n            type,\n            [itemPropName]: item.content,\n            ...NEW_ITEM_SHAPE,\n            ...gridItemProperties,\n        },\n    };\n};\n\nexport const acUpdateDashboardItem = item => ({\n    type: UPDATE_DASHBOARD_ITEM,\n    value: item,\n});\n\nexport const acRemoveDashboardItem = value => ({\n    type: REMOVE_DASHBOARD_ITEM,\n    value,\n});\n\n// thunks\n\nexport const tSaveDashboard = () => async (dispatch, getState) => {\n    const dashboard = sGetEditDashboardRoot(getState());\n\n    const dashboardToSave = {\n        ...dashboard,\n        dashboardItems: convertUiItemsToBackend(dashboard.dashboardItems),\n    };\n\n    try {\n        const dashboardId = dashboardToSave.id\n            ? await updateDashboard(dashboardToSave)\n            : await postDashboard(dashboardToSave);\n\n        dispatch(acClearEditDashboard());\n        await dispatch(tSetSelectedDashboardById(dashboardId));\n\n        return Promise.resolve(dashboardId);\n    } catch (error) {\n        onError(error);\n    }\n};\n","import {\n    SET_DASHBOARDS,\n    ADD_DASHBOARDS,\n    SET_DASHBOARD_STARRED,\n    SET_DASHBOARD_DISPLAY_NAME,\n    SET_DASHBOARD_ITEMS,\n} from '../reducers/dashboards';\nimport {\n    getCustomDashboards,\n    sGetDashboardById,\n    sGetDashboardsSortedByStarred,\n} from '../reducers/dashboards';\nimport { sGetUserUsername } from '../reducers/user';\nimport { tSetSelectedDashboardById, acSetSelectedId } from './selected';\nimport { acClearEditDashboard } from './editDashboard';\nimport {\n    apiFetchDashboards,\n    apiStarDashboard,\n    apiDeleteDashboard,\n} from '../api/dashboards';\nimport { getPreferredDashboardId } from '../api/localStorage';\nimport { arrayToIdMap } from '../modules/util';\n\n// actions\n\nexport const acSetDashboards = dashboards => ({\n    type: SET_DASHBOARDS,\n    value: arrayToIdMap(getCustomDashboards(dashboards)),\n});\n\nexport const acAppendDashboards = dashboards => ({\n    type: ADD_DASHBOARDS,\n    value: arrayToIdMap(getCustomDashboards(dashboards)),\n});\n\nexport const acSetDashboardStarred = (dashboardId, isStarred) => ({\n    type: SET_DASHBOARD_STARRED,\n    dashboardId: dashboardId,\n    value: isStarred,\n});\n\nexport const acSetDashboardDisplayName = (dashboardId, value) => ({\n    type: SET_DASHBOARD_DISPLAY_NAME,\n    dashboardId,\n    value,\n});\n\nexport const acSetDashboardItems = value => ({\n    type: SET_DASHBOARD_ITEMS,\n    value,\n});\n\n// thunks\n\nexport const tFetchDashboards = () => async dispatch => {\n    const collection = await apiFetchDashboards();\n    dispatch(acSetDashboards(collection.toArray()));\n};\n\nexport const tSelectDashboard = id => async (dispatch, getState) => {\n    const onError = error => {\n        console.log('Error (apiFetchDashboards): ', error);\n        return error;\n    };\n\n    try {\n        const state = getState();\n\n        let dashboardToSelect = null;\n        if (id) {\n            dashboardToSelect = sGetDashboardById(state, id) || null;\n        } else {\n            const preferredId = getPreferredDashboardId(\n                sGetUserUsername(state)\n            );\n            const dash = sGetDashboardById(state, preferredId);\n            dashboardToSelect =\n                preferredId && dash\n                    ? dash\n                    : sGetDashboardsSortedByStarred(state)[0];\n        }\n\n        if (dashboardToSelect) {\n            dispatch(tSetSelectedDashboardById(dashboardToSelect.id));\n        } else {\n            dispatch(acSetSelectedId());\n        }\n    } catch (err) {\n        return onError(err);\n    }\n};\n\nexport const tStarDashboard = (id, isStarred) => async dispatch => {\n    const onSuccess = id => {\n        dispatch(acSetDashboardStarred(id, isStarred));\n        return id;\n    };\n\n    const onError = error => {\n        console.log('Error (apiStarDashboard): ', error);\n        return error;\n    };\n    try {\n        await apiStarDashboard(id, isStarred);\n        return onSuccess(id);\n    } catch (err) {\n        return onError(err);\n    }\n};\n\nexport const tDeleteDashboard = id => async dispatch => {\n    try {\n        await apiDeleteDashboard(id);\n        dispatch(acClearEditDashboard());\n        dispatch(acSetSelectedId());\n        dispatch(acSetDashboardItems([]));\n\n        await dispatch(tFetchDashboards());\n\n        return Promise.resolve();\n    } catch (err) {\n        console.log('Error (deleteDashboard): ', err);\n        return err;\n    }\n};\n","/** @module reducers/controlBar */\nimport { combineReducers } from 'redux';\nimport { validateReducer } from '../modules/util';\n\nexport const SET_CONTROLBAR_USER_ROWS = 'SET_CONTROLBAR_USER_ROWS';\n\nexport const DEFAULT_STATE_CONTROLBAR_ROWS = 1;\n\nconst userRows = (state = DEFAULT_STATE_CONTROLBAR_ROWS, action) => {\n    switch (action.type) {\n        case SET_CONTROLBAR_USER_ROWS:\n            return validateReducer(action.value, DEFAULT_STATE_CONTROLBAR_ROWS);\n        default:\n            return state;\n    }\n};\n\nexport default combineReducers({\n    userRows,\n});\n\n/**\n * Selectors that point to specific props in the state object\n * @function\n * @param {Object} state\n * @returns {Object}\n */\nexport const sGetControlBarRoot = state => state.controlBar;\n\n// Selector dependency level 2\n\nexport const sGetControlBarUserRows = state =>\n    sGetControlBarRoot(state).userRows;\n","import { getInstance } from 'd2';\nimport { DEFAULT_STATE_CONTROLBAR_ROWS } from '../reducers/controlBar';\n\nconst NAMESPACE = 'dashboard';\nconst KEY = 'controlBarRows';\n\nconst hasNamespace = async d2 => await d2.currentUser.dataStore.has(NAMESPACE);\n\nconst getNamespace = async (d2, hasNamespace) =>\n    hasNamespace\n        ? await d2.currentUser.dataStore.get(NAMESPACE)\n        : await d2.currentUser.dataStore.create(NAMESPACE);\n\nexport const apiGetControlBarRows = async () => {\n    const d2 = await getInstance();\n    const namespace = await getNamespace(d2, await hasNamespace(d2));\n    const hasKey = namespace.keys && namespace.keys.find(key => key === KEY);\n\n    if (hasKey) {\n        return await namespace.get(KEY);\n    } else {\n        await apiPostControlBarRows(DEFAULT_STATE_CONTROLBAR_ROWS, namespace);\n        console.log(\n            '(These errors to /userDataStore/dashboard can be ignored)'\n        );\n        return DEFAULT_STATE_CONTROLBAR_ROWS;\n    }\n};\n\nexport const apiPostControlBarRows = async (rows, namespace) => {\n    const d2 = await getInstance();\n    const ns = namespace || (await getNamespace(d2, hasNamespace));\n\n    ns.set(KEY, rows);\n};\n","import { SET_CONTROLBAR_USER_ROWS } from '../reducers/controlBar';\nimport { apiGetControlBarRows } from '../api/controlBar';\n\n// actions\n\nexport const acSetControlBarUserRows = rows => ({\n    type: SET_CONTROLBAR_USER_ROWS,\n    value: rows,\n});\n\n// thunks\n\nexport const tSetControlBarRows = () => async dispatch => {\n    const onSuccess = rows => {\n        dispatch(acSetControlBarUserRows(rows));\n    };\n\n    const onError = error => {\n        console.log('Error (apiGetControlBarRows): ', error);\n        return error;\n    };\n\n    try {\n        const controlBarRows = await apiGetControlBarRows();\n        return onSuccess(controlBarRows);\n    } catch (err) {\n        return onError(err);\n    }\n};\n","import {\n    getDimensionById,\n    DIMENSION_ID_PERIOD,\n    DIMENSION_ID_ORGUNIT,\n} from '@dhis2/analytics';\n\nexport const SET_DIMENSIONS = 'SET_DIMENSIONS';\nexport const DEFAULT_DIMENSIONS = [\n    getDimensionById(DIMENSION_ID_PERIOD),\n    getDimensionById(DIMENSION_ID_ORGUNIT),\n];\n\nexport default (state = DEFAULT_DIMENSIONS, action) => {\n    switch (action.type) {\n        case SET_DIMENSIONS: {\n            return [...DEFAULT_DIMENSIONS, ...action.value];\n        }\n        default:\n            return state;\n    }\n};\n\nexport const sGetDimensions = state => state.dimensions;\n","export const SET_SETTINGS = 'SET_SETTINGS';\nexport const ADD_SETTINGS = 'ADD_SETTINGS';\n\nexport const DEFAULT_SETTINGS = {\n    keyDateFormat: 'yyyy-MM-dd',\n    keyAnalysisRelativePeriod: 'LAST_12_MONTHS',\n    keyAnalysisDigitGroupSeparator: 'SPACE',\n    displayNameProperty: 'displayName',\n    uiLocale: 'en',\n    rootOrganisationUnit: {},\n};\n\nexport default (state = DEFAULT_SETTINGS, action) => {\n    switch (action.type) {\n        case SET_SETTINGS: {\n            return Object.assign({}, action.value);\n        }\n        case ADD_SETTINGS: {\n            return {\n                ...state,\n                ...action.value,\n            };\n        }\n        default:\n            return state;\n    }\n};\n\n// Selectors\n\nexport const sGetSettings = state => state.settings;\n\nexport const sGetSettingsDisplayNameProperty = state =>\n    sGetSettings(state).displayNameProperty;\n\nexport const sGetRootOrgUnit = state =>\n    sGetSettings(state).rootOrganisationUnit;\n\nexport const sGetRelativePeriod = state =>\n    sGetSettings(state).keyAnalysisRelativePeriod;\n\nexport const sGetUiLocale = state => sGetSettings(state).uiLocale;\n","import { SET_DIMENSIONS } from '../reducers/dimensions';\nimport { apiFetchDimensions } from '@dhis2/analytics';\nimport { sGetSettingsDisplayNameProperty } from '../reducers/settings';\n\nexport const acSetDimensions = dimensions => ({\n    type: SET_DIMENSIONS,\n    value: dimensions,\n});\n\nexport const tSetDimensions = d2 => async (dispatch, getState) => {\n    const onSuccess = dimensions => {\n        dispatch(acSetDimensions(dimensions));\n    };\n\n    const onError = error => {\n        console.log('Error (apiFetchDimensions): ', error);\n        return error;\n    };\n\n    try {\n        const displayNameProp = sGetSettingsDisplayNameProperty(getState());\n        const dimensions = await apiFetchDimensions(d2, displayNameProp);\n\n        // filter out CATEGORY that are not of type ATTRIBUTE\n        const filteredDimensions = dimensions.filter(\n            dim =>\n                dim.dimensionType !== 'CATEGORY' ||\n                (dim.dimensionType === 'CATEGORY' &&\n                    dim.dataDimensionType === 'ATTRIBUTE')\n        );\n        return onSuccess(filteredDimensions);\n    } catch (err) {\n        return onError(err);\n    }\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport i18n from '@dhis2/d2-i18n';\n\nimport classes from './styles/ShowMoreButton.module.css';\n\nexport const SHOWMORE_BAR_HEIGHT = 16;\n\nexport const ShowMoreButton = ({ onClick, isMaxHeight, disabled }) => {\n    return (\n        <div style={{ textAlign: 'center' }}>\n            {disabled ? (\n                <div className={classes.disabled}>{i18n.t('Show more')}</div>\n            ) : (\n                <div className={classes.showMore} onClick={onClick}>\n                    {isMaxHeight ? i18n.t('Show less') : i18n.t('Show more')}\n                </div>\n            )}\n        </div>\n    );\n};\n\nShowMoreButton.propTypes = {\n    disabled: PropTypes.bool,\n    isMaxHeight: PropTypes.bool,\n    onClick: PropTypes.func,\n};\n\nexport default ShowMoreButton;\n","import { SHOWMORE_BAR_HEIGHT } from './ShowMoreButton';\n\nexport const CONTROL_BAR_ROW_HEIGHT = 40;\nexport const FIRST_ROW_PADDING_HEIGHT = 10;\nexport const MIN_ROW_COUNT = 1;\n\nexport const HEADERBAR_HEIGHT = 48;\n\nconst CONTROL_BAR_OUTER_HEIGHT_DIFF =\n    FIRST_ROW_PADDING_HEIGHT + SHOWMORE_BAR_HEIGHT - 2; // 2 pixel \"adjustment\"\n\nexport const getRowsHeight = rows => {\n    return rows * CONTROL_BAR_ROW_HEIGHT;\n};\n\nexport const getNumRowsFromHeight = height => {\n    return Math.floor(\n        (height - CONTROL_BAR_OUTER_HEIGHT_DIFF) / CONTROL_BAR_ROW_HEIGHT\n    );\n};\n\nexport const getTopOffset = rows => {\n    return HEADERBAR_HEIGHT + getControlBarHeight(rows, false);\n};\n\nexport const getControlBarHeight = rows => {\n    return getRowsHeight(rows) + CONTROL_BAR_OUTER_HEIGHT_DIFF;\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { colors } from '@dhis2/ui-core';\nimport { HEADERBAR_HEIGHT } from './controlBarDimensions';\n\nimport classes from './styles/ControlBar.module.css';\n\nconst DRAG_HANDLE_HEIGHT = 7;\n\nclass ControlBar extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            dragging: false,\n        };\n    }\n\n    onStartDrag = () => {\n        this.setState({ dragging: true });\n        window.addEventListener('mousemove', this.onDrag);\n        window.addEventListener('mouseup', this.onEndDrag);\n    };\n\n    onDrag = event => {\n        event.preventDefault();\n        event.stopPropagation();\n\n        const newHeight = event.clientY;\n\n        if (\n            this.props.onChangeHeight &&\n            newHeight !== this.props.height &&\n            newHeight > 0\n        ) {\n            requestAnimationFrame(() => {\n                this.props.onChangeHeight(newHeight);\n            });\n        }\n    };\n\n    onEndDrag = () => {\n        this.setState({ dragging: false });\n        window.removeEventListener('mousemove', this.onDrag);\n        window.removeEventListener('mouseup', this.onEndDrag);\n\n        if (this.props.onEndDrag) {\n            this.props.onEndDrag();\n        }\n    };\n\n    renderDragHandle() {\n        return typeof this.props.onChangeHeight === 'function' ? (\n            <div\n                className={classes.draghandle}\n                style={{ height: DRAG_HANDLE_HEIGHT }}\n                onMouseDown={this.onStartDrag}\n            />\n        ) : null;\n    }\n\n    render() {\n        const height = Math.max(this.props.height, 0) + DRAG_HANDLE_HEIGHT;\n\n        const rootStyle = Object.assign(\n            {\n                height,\n                top: HEADERBAR_HEIGHT,\n                backgroundColor: this.props.editMode\n                    ? colors.yellow050\n                    : colors.white,\n                paddingBottom: DRAG_HANDLE_HEIGHT,\n            },\n            // Disable animations while dragging\n            this.state.dragging ? { transition: 'none' } : {}\n        );\n\n        return (\n            <div style={rootStyle} className={classes.root}>\n                <div className={classes.content}>{this.props.children}</div>\n                {this.renderDragHandle()}\n            </div>\n        );\n    }\n}\n\nControlBar.propTypes = {\n    /**\n     * The height of the control bar in number of lines. Must be a positive integer.\n     */\n    children: PropTypes.node.isRequired,\n\n    /**\n     * If true, the background color of the control bar changes to indicate that edit mode is active.\n     */\n    editMode: PropTypes.bool.isRequired,\n\n    /**\n     * Callback function that is called when the control bar is resized.\n     * The callback receives one argument: The new height in pixels.\n     *\n     * If no callback is specified the control bar will not have a drag handle.\n     */\n    height: PropTypes.number.isRequired,\n\n    /**\n     * Callback function that is called when the control bar is dropped after being dragged.\n     * The callback receives one argument: The new height in pixels.\n     *\n     * Ignored if no \"onChangeHeight\" function is provided.\n     */\n    onChangeHeight: PropTypes.func,\n\n    /**\n     * The contents of the control bar.\n     */\n    onEndDrag: PropTypes.func,\n};\n\nControlBar.defaultProps = {\n    onChangeHeight: null,\n    onEndDrag: null,\n};\n\nexport default ControlBar;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst StarIcon = ({ className }) => (\n    <svg\n        className={className}\n        xmlns=\"http://www.w3.org/2000/svg\"\n        viewBox=\"0 0 24 24\"\n    >\n        <path d=\"M0 0h24v24H0z\" fill=\"none\" />\n        <path d=\"M12 17.27L18.18 21l-1.64-7.03L22 9.24l-7.19-.61L12 2 9.19 8.63 2 9.24l5.46 4.73L5.82 21z\" />\n        <path d=\"M0 0h24v24H0z\" fill=\"none\" />\n    </svg>\n);\n\nStarIcon.propTypes = {\n    className: PropTypes.string,\n};\n\nexport default StarIcon;\n","import { getInstance } from 'd2';\n\nexport const apiPostDataStatistics = async (eventType, id) => {\n    const d2 = await getInstance();\n    const url = `dataStatistics?eventType=${eventType}&favorite=${id}`;\n\n    d2.Api.getApi().post(url);\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Chip } from '@dhis2/ui-core';\nimport { Link } from 'react-router-dom';\nimport debounce from 'lodash/debounce';\n\nimport StarIcon from '../../icons/Star';\nimport { apiPostDataStatistics } from '../../api/dataStatistics';\n\nimport classes from './styles/DashboardItemChip.module.css';\n\nexport const DashboardItemChip = ({\n    starred,\n    selected,\n    label,\n    dashboardId,\n}) => {\n    const chipProps = {\n        selected,\n        className: classes.chip,\n    };\n\n    if (starred) {\n        const selectedState = selected ? classes.selected : classes.unselected;\n        chipProps.icon = (\n            <StarIcon className={`${classes.icon} ${selectedState}`} />\n        );\n    }\n\n    return (\n        <Link\n            className={classes.link}\n            to={`/${dashboardId}`}\n            onClick={debounce(\n                () => apiPostDataStatistics('DASHBOARD_VIEW', dashboardId),\n                500\n            )}\n        >\n            <Chip {...chipProps}>{label}</Chip>\n        </Link>\n    );\n};\n\nDashboardItemChip.propTypes = {\n    dashboardId: PropTypes.string.isRequired,\n    label: PropTypes.string.isRequired,\n    selected: PropTypes.bool.isRequired,\n    starred: PropTypes.bool.isRequired,\n    classes: PropTypes.object,\n};\n\nexport default DashboardItemChip;\n","import React from 'react';\nimport { colors } from '@dhis2/ui-core';\n\nconst AddCircleIcon = () => (\n    <svg\n        xmlns=\"http://www.w3.org/2000/svg\"\n        width=\"32\"\n        height=\"32\"\n        fill={colors.teal600}\n        viewBox=\"0 0 24 24\"\n    >\n        <path d=\"M12 2C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2zm4 11h-3v3c0 .55-.45 1-1 1s-1-.45-1-1v-3H8c-.55 0-1-.45-1-1s.45-1 1-1h3V8c0-.55.45-1 1-1s1 .45 1 1v3h3c.55 0 1 .45 1 1s-.45 1-1 1z\" />\n    </svg>\n);\n\nexport default AddCircleIcon;\n","import React from 'react';\nimport { colors } from '@dhis2/ui-core';\nimport PropTypes from 'prop-types';\n\nconst ClearIcon = ({ className }) => (\n    <svg\n        className={className}\n        fill={colors.grey800}\n        xmlns=\"http://www.w3.org/2000/svg\"\n        viewBox=\"0 0 24 24\"\n    >\n        <path d=\"M19 6.41L17.59 5 12 10.59 6.41 5 5 6.41 10.59 12 5 17.59 6.41 19 12 13.41 17.59 19 19 17.59 13.41 12z\" />\n        <path d=\"M0 0h24v24H0z\" fill=\"none\" />\n    </svg>\n);\n\nClearIcon.propTypes = {\n    className: PropTypes.string,\n};\n\nexport default ClearIcon;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport ClearIcon from '../../icons/Clear';\n\nimport classes from './styles/ClearButton.module.css';\n\nexport const ClearButton = ({ onClear }) => (\n    <button className={classes.button} onClick={onClear}>\n        <span>\n            <ClearIcon className={classes.icon} color=\"action\" />\n        </span>\n    </button>\n);\n\nClearButton.propTypes = {\n    onClear: PropTypes.func.isRequired,\n};\n\nexport default ClearButton;\n","import { combineReducers } from 'redux';\nimport { validateReducer } from '../modules/util';\n\nexport const SET_DASHBOARDS_FILTER_NAME = 'SET_DASHBOARDS_FILTER_NAME';\nexport const SET_DASHBOARDS_FILTER_OWNER = 'SET_DASHBOARDS_FILTER_OWNER';\nexport const SET_DASHBOARDS_FILTER_ORDER = 'SET_DASHBOARDS_FILTER_ORDER';\n\nexport const ownerData = [\n    { id: 'ALL', value: 'All users' },\n    { id: 'ME', value: 'Created by me' },\n    { id: 'OTHERS', value: 'Created by others' },\n];\n\nexport const orderData = [\n    { id: 'NAME:ASC', value: 'Name (asc)' },\n    { id: 'NAME:ASC', value: 'Name (desc)' },\n    { id: 'ITEMS:ASC', value: 'Number of items (asc)' },\n    { id: 'ITEMS:ASC', value: 'Number of items (desc)' },\n    { id: 'CREATED:ASC', value: 'Created date (asc)' },\n    { id: 'CREATED:ASC', value: 'Created date (desc)' },\n];\n\nexport const DEFAULT_STATE_DASHBOARDS_FILTER_NAME = '';\nexport const DEFAULT_STATE_DASHBOARDS_FILTER_OWNER = ownerData[0].id;\nexport const DEFAULT_STATE_DASHBOARDS_FILTER_ORDER = orderData[0].id;\n\nconst name = (state = DEFAULT_STATE_DASHBOARDS_FILTER_NAME, action) => {\n    switch (action.type) {\n        case SET_DASHBOARDS_FILTER_NAME:\n            return validateReducer(\n                action.value,\n                DEFAULT_STATE_DASHBOARDS_FILTER_NAME\n            );\n        default:\n            return state;\n    }\n};\n\nconst owner = (state = DEFAULT_STATE_DASHBOARDS_FILTER_OWNER, action) => {\n    switch (action.type) {\n        case SET_DASHBOARDS_FILTER_OWNER:\n            return validateReducer(\n                action.value,\n                DEFAULT_STATE_DASHBOARDS_FILTER_NAME\n            );\n        default:\n            return state;\n    }\n};\n\nconst order = (state = DEFAULT_STATE_DASHBOARDS_FILTER_ORDER, action) => {\n    switch (action.type) {\n        case SET_DASHBOARDS_FILTER_ORDER:\n            return validateReducer(\n                action.value,\n                DEFAULT_STATE_DASHBOARDS_FILTER_ORDER\n            );\n        default:\n            return state;\n    }\n};\n\nexport default combineReducers({\n    name,\n    owner,\n    order,\n});\n\n// selectors\n\nexport const sGetDashboardsFilterRoot = state => state.dashboardsFilter;\n\n// selector dependency level 2\n\nexport const sGetFilterName = state => sGetDashboardsFilterRoot(state).name;\nexport const sGetFilterOwner = state => sGetDashboardsFilterRoot(state).owner;\nexport const sGetFilterOrder = state => sGetDashboardsFilterRoot(state).order;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport i18n from '@dhis2/d2-i18n';\nimport InputField from '@material-ui/core/Input';\nimport InputAdornment from '@material-ui/core/InputAdornment';\nimport SearchIcon from '@material-ui/icons/Search';\n\nimport ClearButton from './ClearButton';\nimport { DEFAULT_STATE_DASHBOARDS_FILTER_NAME } from '../../reducers/dashboardsFilter';\n\nimport classes from './styles/Filter.module.css';\n\nexport const KEYCODE_ENTER = 13;\nexport const KEYCODE_ESCAPE = 27;\n\nexport class Filter extends Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            value: DEFAULT_STATE_DASHBOARDS_FILTER_NAME,\n        };\n    }\n\n    componentWillReceiveProps(nextProps) {\n        this.setState({\n            value: nextProps.name,\n        });\n    }\n\n    setFilterValue = event => {\n        event.preventDefault();\n\n        this.props.onChangeName(event.target.value);\n    };\n\n    handleKeyUp = event => {\n        switch (event.keyCode) {\n            case KEYCODE_ENTER:\n                this.props.onKeypressEnter();\n                break;\n            case KEYCODE_ESCAPE:\n                this.props.onChangeName();\n                break;\n            default:\n                break;\n        }\n    };\n\n    render() {\n        const { name, onChangeName } = this.props;\n\n        const startAdornment = (\n            <InputAdornment position=\"start\">\n                <SearchIcon className={classes.searchIcon} />\n            </InputAdornment>\n        );\n\n        const endAdornment =\n            name !== '' && name !== null ? (\n                <InputAdornment position=\"end\">\n                    <ClearButton onClear={() => onChangeName()} />\n                </InputAdornment>\n            ) : null;\n\n        return (\n            <InputField\n                className={classes.filterField}\n                placeholder={i18n.t('Search for a dashboard')}\n                startAdornment={startAdornment}\n                endAdornment={endAdornment}\n                value={this.state.value}\n                onChange={this.setFilterValue}\n                onKeyUp={this.handleKeyUp}\n            />\n        );\n    }\n}\n\nFilter.propTypes = {\n    name: PropTypes.string,\n    onChangeName: PropTypes.func,\n    onKeypressEnter: PropTypes.func,\n};\n\nFilter.defaultProps = {\n    name: '',\n    onChangeName: Function.prototype,\n};\n\nexport default Filter;\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { Link, withRouter } from 'react-router-dom';\nimport ControlBar from './ControlBar';\nimport arraySort from 'd2-utilizr/lib/arraySort';\nimport PropTypes from 'prop-types';\n\nimport Chip from './DashboardItemChip';\nimport AddCircleIcon from '../../icons/AddCircle';\nimport Filter from './Filter';\nimport ShowMoreButton from './ShowMoreButton';\nimport {\n    FIRST_ROW_PADDING_HEIGHT,\n    MIN_ROW_COUNT,\n    getRowsHeight,\n    getControlBarHeight,\n    getNumRowsFromHeight,\n} from './controlBarDimensions';\nimport { sGetControlBarUserRows } from '../../reducers/controlBar';\nimport { sGetAllDashboards } from '../../reducers/dashboards';\nimport { sGetFilterName } from '../../reducers/dashboardsFilter';\nimport { sGetSelectedId } from '../../reducers/selected';\nimport { acSetControlBarUserRows } from '../../actions/controlBar';\nimport { acSetFilterName } from '../../actions/dashboardsFilter';\nimport { orObject, orArray } from '../../modules/util';\nimport { apiPostControlBarRows } from '../../api/controlBar';\n\nimport classes from './styles/DashboardsBar.module.css';\n\nexport const MAX_ROW_COUNT = 10;\n\nexport class DashboardsBar extends Component {\n    state = {\n        rows: MIN_ROW_COUNT,\n    };\n\n    setInitialDashboardState = rows => {\n        this.setState({ rows, isMaxHeight: rows === MAX_ROW_COUNT });\n    };\n\n    componentDidMount() {\n        this.setInitialDashboardState(this.props.userRows);\n    }\n\n    componentWillReceiveProps(nextProps) {\n        this.setInitialDashboardState(nextProps.userRows);\n    }\n\n    onChangeHeight = newHeight => {\n        const adjustedHeight = newHeight - 52; // don't rush the transition to a bigger row count\n        const newRows = Math.max(\n            MIN_ROW_COUNT,\n            getNumRowsFromHeight(adjustedHeight)\n        );\n\n        if (newRows !== this.state.rows) {\n            const newRowCount = Math.min(newRows, MAX_ROW_COUNT);\n\n            this.props.onChangeHeight(newRowCount);\n        }\n    };\n\n    onEndDrag = () => {\n        return apiPostControlBarRows(this.state.rows);\n    };\n\n    onToggleMaxHeight = () => {\n        const rows =\n            this.state.rows === MAX_ROW_COUNT\n                ? this.props.userRows\n                : MAX_ROW_COUNT;\n\n        this.setState({ rows, isMaxHeight: !this.state.isMaxHeight });\n    };\n\n    onSelectDashboard = () => {\n        this.props.history.push(`/${this.props.dashboards[0].id}`);\n    };\n\n    render() {\n        const { dashboards, name, selectedId, onChangeFilterName } = this.props;\n\n        const rowCount = this.state.isMaxHeight\n            ? MAX_ROW_COUNT\n            : this.state.rows;\n        const controlBarHeight = getControlBarHeight(rowCount);\n        const contentWrapperStyle = {\n            padding: `${FIRST_ROW_PADDING_HEIGHT}px 6px 0 6px`,\n            overflowY: this.state.isMaxHeight ? 'auto' : 'hidden',\n            height: getRowsHeight(rowCount) + FIRST_ROW_PADDING_HEIGHT,\n        };\n\n        return (\n            <ControlBar\n                height={controlBarHeight}\n                onChangeHeight={this.onChangeHeight}\n                onEndDrag={this.onEndDrag}\n                editMode={false}\n            >\n                <div style={contentWrapperStyle}>\n                    <div className={classes.leftControls}>\n                        <Link\n                            style={{\n                                display: 'inline-block',\n                                textDecoration: 'none',\n                                marginRight: 10,\n                                position: 'relative',\n                                top: '2px',\n                            }}\n                            to={'/new'}\n                        >\n                            <AddCircleIcon />\n                        </Link>\n                        <Filter\n                            name={name}\n                            onChangeName={onChangeFilterName}\n                            onKeypressEnter={this.onSelectDashboard}\n                        />\n                    </div>\n                    {orArray(dashboards).map(dashboard => (\n                        <Chip\n                            key={dashboard.id}\n                            label={dashboard.displayName}\n                            starred={dashboard.starred}\n                            dashboardId={dashboard.id}\n                            selected={dashboard.id === selectedId}\n                        />\n                    ))}\n                </div>\n                <ShowMoreButton\n                    onClick={this.onToggleMaxHeight}\n                    isMaxHeight={this.state.isMaxHeight}\n                    disabled={this.props.userRows === MAX_ROW_COUNT}\n                />\n            </ControlBar>\n        );\n    }\n}\n\nconst mapStateToProps = state => ({\n    dashboards: sGetAllDashboards(state),\n    name: sGetFilterName(state),\n    userRows: sGetControlBarUserRows(state),\n    selectedId: sGetSelectedId(state),\n});\n\nconst mapDispatchToProps = {\n    onChangeHeight: acSetControlBarUserRows,\n    onChangeFilterName: acSetFilterName,\n};\nconst mergeProps = (stateProps, dispatchProps, ownProps) => {\n    const dashboards = Object.values(orObject(stateProps.dashboards));\n    const displayDashboards = arraySort(\n        dashboards.filter(d =>\n            d.displayName.toLowerCase().includes(stateProps.name.toLowerCase())\n        ),\n        'ASC',\n        'displayName'\n    );\n\n    return {\n        ...stateProps,\n        ...ownProps,\n        ...dispatchProps,\n        dashboards: [\n            ...displayDashboards.filter(d => d.starred),\n            ...displayDashboards.filter(d => !d.starred),\n        ],\n    };\n};\n\nDashboardsBar.propTypes = {\n    dashboards: PropTypes.array,\n    history: PropTypes.object,\n    name: PropTypes.string,\n    selectedId: PropTypes.string,\n    userRows: PropTypes.number,\n    onChangeFilterName: PropTypes.func,\n    onChangeHeight: PropTypes.func,\n};\n\nexport default withRouter(\n    connect(\n        mapStateToProps,\n        mapDispatchToProps,\n        mergeProps\n    )(DashboardsBar)\n);\n","import {\n    SET_DASHBOARDS_FILTER_NAME,\n    SET_DASHBOARDS_FILTER_OWNER,\n    SET_DASHBOARDS_FILTER_ORDER,\n} from '../reducers/dashboardsFilter';\n\n// actions\n\nexport const acSetFilterName = value => ({\n    type: SET_DASHBOARDS_FILTER_NAME,\n    value,\n});\n\nexport const acSetFilterOwner = value => ({\n    type: SET_DASHBOARDS_FILTER_OWNER,\n    value,\n});\n\nexport const acSetFilterOrder = value => ({\n    type: SET_DASHBOARDS_FILTER_ORDER,\n    value,\n});\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\n\nimport {\n    getTopOffset,\n    MIN_ROW_COUNT,\n} from '../ControlBar/controlBarDimensions';\nimport { sGetControlBarUserRows } from '../../reducers/controlBar';\n\nconst DashboardVerticalOffset = props => {\n    const rows = props.editMode ? MIN_ROW_COUNT : props.userRows;\n    const marginTop = getTopOffset(rows);\n\n    return <div className=\"page-container-top-margin\" style={{ marginTop }} />;\n};\n\nconst mapStateToProps = state => ({\n    userRows: sGetControlBarUserRows(state),\n});\n\nDashboardVerticalOffset.propTypes = {\n    editMode: PropTypes.bool,\n    userRows: PropTypes.number,\n};\n\nexport default connect(mapStateToProps)(DashboardVerticalOffset);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { MenuItem, colors } from '@dhis2/ui-core';\n\nconst HeaderMenuItem = ({ title }) => (\n    <MenuItem\n        dense\n        key={title}\n        disabled\n        label={\n            <span style={{ color: colors.grey800, fontWeight: '600' }}>\n                {title}\n            </span>\n        }\n    />\n);\n\nHeaderMenuItem.propTypes = {\n    title: PropTypes.string.isRequired,\n};\n\nexport default HeaderMenuItem;\n","import React from 'react';\nimport { colors } from '@dhis2/ui-core';\nimport PropTypes from 'prop-types';\n\nconst LaunchIcon = ({ className }) => (\n    <svg\n        className={className}\n        xmlns=\"http://www.w3.org/2000/svg\"\n        width=\"12\"\n        height=\"12\"\n        fill={colors.grey600}\n        viewBox=\"0 0 24 24\"\n    >\n        <path d=\"M0 0h24v24H0z\" fill=\"none\" />\n        <path d=\"M19 19H5V5h7V3H5c-1.11 0-2 .9-2 2v14c0 1.1.89 2 2 2h14c1.1 0 2-.9 2-2v-7h-2v7zM14 3v2h3.59l-9.83 9.83 1.41 1.41L19 6.41V10h2V3h-7z\" />\n    </svg>\n);\n\nLaunchIcon.propTypes = {\n    className: PropTypes.string,\n};\n\nexport default LaunchIcon;\n","import React from 'react';\nimport { MenuItem, colors } from '@dhis2/ui-core';\nimport i18n from '@dhis2/d2-i18n';\nimport PropTypes from 'prop-types';\nimport { visTypeIcons } from '@dhis2/analytics';\n\nimport { getItemIcon, VISUALIZATION } from '../../modules/itemTypes';\nimport LaunchIcon from '../../icons/Launch';\n\nimport classes from './styles/ContentMenuItem.module.css';\n\nconst LaunchLink = ({ url }) => (\n    <a\n        onClick={e => e.stopPropagation()}\n        className={classes.launchLink}\n        target=\"_blank\"\n        rel=\"noopener noreferrer\"\n        href={url}\n    >\n        <LaunchIcon />\n    </a>\n);\n\nLaunchLink.propTypes = {\n    url: PropTypes.string,\n};\n\nconst InsertButton = () => (\n    <button className={classes.buttonInsert}>{i18n.t('Insert')}</button>\n);\n\nconst ContentMenuItem = ({ type, name, onInsert, url, visType }) => {\n    const ItemIcon = getItemIcon(type);\n\n    const renderedItemIcon =\n        type === VISUALIZATION ? (\n            visTypeIcons[visType]\n        ) : (\n            <ItemIcon style={{ fill: colors.grey600 }} />\n        );\n\n    return (\n        <MenuItem\n            dense\n            onClick={onInsert}\n            label={\n                <div className={classes.menuItem}>\n                    <div className={classes.label}>\n                        <span style={{ marginRight: '6px' }}>\n                            {renderedItemIcon}\n                        </span>\n                        <span>{name}</span>\n                        {url ? <LaunchLink url={url} /> : null}\n                    </div>\n                    <InsertButton />\n                </div>\n            }\n        />\n    );\n};\n\nContentMenuItem.propTypes = {\n    name: PropTypes.string,\n    type: PropTypes.string,\n    url: PropTypes.string,\n    visType: PropTypes.string,\n    onInsert: PropTypes.func,\n};\n\nexport default ContentMenuItem;\n","import i18n from '@dhis2/d2-i18n';\nimport {\n    VISUALIZATION,\n    MAP,\n    EVENT_CHART,\n    EVENT_REPORT,\n    USERS,\n    REPORTS,\n    RESOURCES,\n    APP,\n    MESSAGES,\n    TEXT,\n    SPACER,\n} from '../../modules/itemTypes';\n\nexport const singleItems = [\n    {\n        id: 'additional',\n        header: i18n.t('Additional items'),\n        items: [\n            {\n                type: TEXT,\n                name: i18n.t('Text box'),\n                content: '',\n            },\n            {\n                type: MESSAGES,\n                name: i18n.t('Messages'),\n                content: 'true',\n            },\n            {\n                type: SPACER,\n                name: i18n.t('Spacer'),\n                content: '',\n            },\n        ],\n    },\n];\n\n// categorizedItems are grouped in the item selector menu\nexport const categorizedItems = [\n    VISUALIZATION,\n    MAP,\n    EVENT_REPORT,\n    EVENT_CHART,\n    USERS,\n    REPORTS,\n    RESOURCES,\n    APP,\n];\n\n// listItemTypes are included in a single dashboard item\nexport const listItemTypes = [REPORTS, RESOURCES, USERS];\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport i18n from '@dhis2/d2-i18n';\nimport { MenuItem, Divider } from '@dhis2/ui-core';\n\nimport HeaderMenuItem from './HeaderMenuItem';\nimport ContentMenuItem from './ContentMenuItem';\n\nimport { tAddListItemContent } from './actions';\nimport { acAddDashboardItem } from '../../actions/editDashboard';\nimport { getItemUrl, APP, VISUALIZATION } from '../../modules/itemTypes';\nimport { categorizedItems, listItemTypes } from './selectableItems';\n\nimport classes from './styles/CategorizedMenuGroup.module.css';\n\nclass CategorizedMenuGroup extends Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            seeMore: false,\n        };\n    }\n\n    addItem = item => () => {\n        const { type, acAddDashboardItem, tAddListItemContent } = this.props;\n\n        if (type === APP) {\n            acAddDashboardItem({ type, content: item.key });\n        } else {\n            const newItem = {\n                id: item.id,\n                name: item.displayName || item.name,\n            };\n\n            if (listItemTypes.includes(type)) {\n                tAddListItemContent(type, newItem);\n            } else {\n                acAddDashboardItem({ type, content: newItem });\n            }\n        }\n    };\n\n    toggleSeeMore = () => {\n        this.setState({ seeMore: !this.state.seeMore });\n\n        this.props.onChangeItemsLimit(this.props.type);\n    };\n\n    render() {\n        const { title, type, items, hasMore } = this.props;\n        return (\n            <>\n                <HeaderMenuItem title={title} />\n                {items.map(item => {\n                    const itemUrl = getItemUrl(type, item, this.context.d2);\n                    return (\n                        <ContentMenuItem\n                            key={item.id || item.key}\n                            type={type}\n                            visType={type === VISUALIZATION ? item.type : type}\n                            name={item.displayName || item.name}\n                            onInsert={this.addItem(item)}\n                            url={itemUrl}\n                        />\n                    );\n                })}\n                {hasMore ? (\n                    <MenuItem\n                        dense\n                        key={`showmore${title}`}\n                        onClick={this.toggleSeeMore}\n                        label={\n                            <button className={classes.showMoreButton}>\n                                {this.state.seeMore\n                                    ? i18n.t('Show fewer')\n                                    : i18n.t('Show more')}\n                            </button>\n                        }\n                    />\n                ) : null}\n                <Divider margin=\"8px 0px\" />\n            </>\n        );\n    }\n}\n\nCategorizedMenuGroup.propTypes = {\n    items: PropTypes.array.isRequired,\n    title: PropTypes.string.isRequired,\n    type: PropTypes.oneOf(categorizedItems).isRequired,\n    onChangeItemsLimit: PropTypes.func.isRequired,\n    acAddDashboardItem: PropTypes.func,\n    hasMore: PropTypes.bool,\n    tAddListItemContent: PropTypes.func,\n};\n\nCategorizedMenuGroup.contextTypes = {\n    d2: PropTypes.object.isRequired,\n};\n\nexport default connect(\n    null,\n    {\n        acAddDashboardItem,\n        tAddListItemContent,\n    }\n)(CategorizedMenuGroup);\n","import { sGetEditDashboardRoot } from '../../reducers/editDashboard';\nimport { itemTypeMap } from '../../modules/itemTypes';\nimport {\n    acAddDashboardItem,\n    acUpdateDashboardItem,\n} from '../../actions/editDashboard';\n\nexport const tAddListItemContent = (type, content) => (dispatch, getState) => {\n    const state = getState();\n    const listItemType = itemTypeMap[type].propName;\n    const dashboardItems = sGetEditDashboardRoot(state).dashboardItems;\n    const dashboardItemIndex = dashboardItems.findIndex(\n        item => item.type === type\n    );\n    let dashboardItem;\n\n    // Reports/Resources/Users dashboard item type already present in dashboard\n    if (dashboardItemIndex > -1) {\n        dashboardItem = dashboardItems[dashboardItemIndex];\n        dashboardItem[listItemType].push(content);\n\n        dispatch(acUpdateDashboardItem(dashboardItem));\n    } else {\n        dashboardItem = {\n            type: type,\n            content: [content],\n        };\n\n        dispatch(acAddDashboardItem(dashboardItem));\n    }\n};\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\n\nimport HeaderMenuItem from './HeaderMenuItem';\nimport ContentMenuItem from './ContentMenuItem';\nimport { acAddDashboardItem } from '../../actions/editDashboard';\n\nexport const SinglesMenuGroup = ({ acAddDashboardItem, category }) => {\n    const addToDashboard = ({ type, content }) => () => {\n        acAddDashboardItem({ type, content });\n    };\n\n    return (\n        <>\n            <HeaderMenuItem title={category.header} />\n            {category.items.map(item => (\n                <ContentMenuItem\n                    key={item.type}\n                    type={item.type}\n                    name={item.name}\n                    onInsert={addToDashboard(item)}\n                />\n            ))}\n        </>\n    );\n};\n\nSinglesMenuGroup.propTypes = {\n    acAddDashboardItem: PropTypes.func,\n    category: PropTypes.object,\n};\n\nexport default connect(\n    null,\n    { acAddDashboardItem }\n)(SinglesMenuGroup);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport i18n from '@dhis2/d2-i18n';\nimport Popover from '@material-ui/core/Popover';\nimport { InputField, Menu } from '@dhis2/ui-core';\n\nimport CategorizedMenuGroup from './CategorizedMenuGroup';\nimport SinglesMenuGroup from './SinglesMenuGroup';\nimport { singleItems, categorizedItems } from './selectableItems';\nimport { itemTypeMap, getDefaultItemCount } from '../../modules/itemTypes';\n\nimport './styles/ItemSelector.css';\n\nconst ItemSearchField = props => (\n    <InputField\n        name=\"Dashboard item search\"\n        label={i18n.t('Search for items to add to this dashboard')}\n        type=\"text\"\n        onChange={props.onChange}\n        onFocus={props.onFocus}\n        value={props.value}\n    />\n);\n\nclass ItemSelector extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            anchorEl: null,\n            open: false,\n            maxOptions: new Set(),\n            items: undefined,\n            filter: '',\n        };\n    }\n\n    closeList = () => {\n        this.setState({ open: false, filter: '' });\n    };\n\n    openList = (_, event) => {\n        this.fetchItems();\n\n        this.setState({\n            anchorEl: event.currentTarget,\n            open: true,\n        });\n    };\n\n    setFilter = (_, event) => {\n        this.setState({ filter: event.target.value }, this.fetchItems);\n    };\n\n    getCategorizedMenuGroups = () =>\n        categorizedItems\n            .filter(type => {\n                const itemType = itemTypeMap[type];\n                return (\n                    this.state.items && this.state.items[itemType.endPointName]\n                );\n            })\n            .map(type => {\n                const itemType = itemTypeMap[type];\n                const itemCount = getDefaultItemCount(type);\n                const allItems = this.state.items[itemType.endPointName];\n                const hasMore = allItems.length > itemCount;\n                const items = this.state.maxOptions.has(itemType.id)\n                    ? allItems\n                    : allItems.slice(0, itemCount);\n\n                return (\n                    <CategorizedMenuGroup\n                        key={type}\n                        type={type}\n                        title={itemType.pluralTitle}\n                        items={items}\n                        onChangeItemsLimit={this.fetchItems}\n                        hasMore={hasMore}\n                    />\n                );\n            });\n\n    getSinglesMenuGroups = () =>\n        singleItems.map(category => (\n            <SinglesMenuGroup key={category.id} category={category} />\n        ));\n\n    getMenuGroups = () =>\n        this.getCategorizedMenuGroups().concat(this.getSinglesMenuGroups());\n\n    fetchItems = async type => {\n        if (type) {\n            const maxOptions = this.state.maxOptions;\n\n            if (maxOptions.has(type)) {\n                maxOptions.delete(type);\n            } else {\n                maxOptions.add(type);\n            }\n\n            this.setState({ maxOptions });\n        } else {\n            this.setState({\n                maxOptions: new Set(),\n            });\n        }\n\n        let queryString = '?count=11';\n        if ([...this.state.maxOptions.values()].length) {\n            queryString +=\n                '&max=' + [...this.state.maxOptions.values()].join('&max=');\n        }\n\n        const filter = this.state.filter ? `/${this.state.filter}` : '';\n\n        this.context.d2.Api.getApi()\n            .get(`dashboards/q${filter}${queryString}`)\n            .then(response => this.setState({ items: response }))\n            .catch(console.error);\n    };\n\n    render() {\n        return (\n            <>\n                <ItemSearchField\n                    value={this.state.filter}\n                    onChange={this.setFilter}\n                    onFocus={this.openList}\n                />\n                <Popover\n                    className=\"dashboard-item-selector\"\n                    open={this.state.open}\n                    onClose={this.closeList}\n                    anchorEl={this.state.anchorEl}\n                    anchorOrigin={{ horizontal: 'left', vertical: 'bottom' }}\n                    transformOrigin={{ horizontal: 'left', vertical: 'top' }}\n                    style={{ height: '70vh' }}\n                    PaperProps={{ style: { width: '700px' } }}\n                    disableAutoFocus={true}\n                    disableEnforceFocus={true}\n                    disableRestoreFocus={true}\n                >\n                    <Menu maxWidth={'700px'}>{this.getMenuGroups()}</Menu>\n                </Popover>\n            </>\n        );\n    }\n}\n\nItemSearchField.propTypes = {\n    value: PropTypes.string,\n    onChange: PropTypes.func,\n    onFocus: PropTypes.func,\n};\n\nItemSelector.contextTypes = {\n    d2: PropTypes.object.isRequired,\n};\n\nexport default ItemSelector;\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport i18n from '@dhis2/d2-i18n';\nimport { InputField, TextAreaField } from '@dhis2/ui-core';\n\nimport ItemSelector from '../ItemSelector/ItemSelector';\nimport {\n    acSetDashboardTitle,\n    acSetDashboardDescription,\n} from '../../actions/editDashboard';\nimport { orObject } from '../../modules/util';\nimport { sGetEditDashboardRoot } from '../../reducers/editDashboard';\n\nimport classes from './styles/EditTitleBar.module.css';\n\nexport const EditTitleBar = ({\n    name,\n    description,\n    onChangeTitle,\n    onChangeDescription,\n}) => {\n    const updateTitle = (_, e) => {\n        onChangeTitle(e.target.value);\n    };\n\n    const updateDescription = (_, e) => {\n        onChangeDescription(e.target.value);\n    };\n\n    return (\n        <section className={classes.section}>\n            <div className={classes.titleDescription}>\n                <InputField\n                    className={classes.title}\n                    name=\"Dashboard title input\"\n                    label={i18n.t('Dashboard title')}\n                    type=\"text\"\n                    onChange={updateTitle}\n                    value={name}\n                />\n                <TextAreaField\n                    className={classes.description}\n                    name=\"Dashboard description input\"\n                    label={i18n.t('Dashboard description')}\n                    onChange={updateDescription}\n                    value={description}\n                />\n            </div>\n            <div className={classes.itemSelector}>\n                <ItemSelector />\n            </div>\n        </section>\n    );\n};\n\nEditTitleBar.propTypes = {\n    onChangeDescription: PropTypes.func.isRequired,\n    onChangeTitle: PropTypes.func.isRequired,\n    description: PropTypes.string,\n    name: PropTypes.string,\n};\n\nEditTitleBar.defaultProps = {\n    name: '',\n    description: '',\n};\n\nconst mapStateToProps = state => {\n    const selectedDashboard = orObject(sGetEditDashboardRoot(state));\n\n    return {\n        name: selectedDashboard.name,\n        description: selectedDashboard.description,\n    };\n};\n\nconst mapDispatchToProps = {\n    onChangeTitle: acSetDashboardTitle,\n    onChangeDescription: acSetDashboardDescription,\n};\n\nexport default connect(\n    mapStateToProps,\n    mapDispatchToProps\n)(EditTitleBar);\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nimport { Button } from '@dhis2/ui-core';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\n\nimport i18n from '@dhis2/d2-i18n';\n\nimport {\n    PeriodDimension,\n    DynamicDimension,\n    OrgUnitDimension,\n    DIMENSION_ID_PERIOD,\n    DIMENSION_ID_ORGUNIT,\n} from '@dhis2/analytics';\n\nconst peId = DIMENSION_ID_PERIOD;\nconst ouId = DIMENSION_ID_ORGUNIT;\n\nclass FilterDialog extends Component {\n    onConfirm = id => () => this.props.onConfirm(id);\n\n    dialogContent() {\n        const { displayNameProperty, dimension, selectedItems } = this.props;\n        const dialogId = dimension.id;\n\n        const commonProps = {\n            d2: this.context.d2,\n            onSelect: this.props.onSelect,\n            onDeselect: this.props.onDeselect,\n            onReorder: this.props.onReorder,\n        };\n\n        switch (dialogId) {\n            case peId: {\n                return (\n                    <PeriodDimension\n                        selectedPeriods={selectedItems}\n                        {...commonProps}\n                    />\n                );\n            }\n            case ouId:\n                return (\n                    <OrgUnitDimension\n                        displayNameProperty={displayNameProperty}\n                        ouItems={selectedItems}\n                        {...commonProps}\n                    />\n                );\n            default:\n                return (\n                    <DynamicDimension\n                        selectedItems={selectedItems}\n                        dialogId={dialogId}\n                        dialogTitle={dimension.name}\n                        {...commonProps}\n                    />\n                );\n        }\n    }\n\n    render() {\n        const { dimension, onClose } = this.props;\n        const dialogId = dimension.id;\n\n        return (\n            <Dialog\n                open={!!dialogId}\n                maxWidth=\"lg\"\n                disableEnforceFocus\n                onClose={onClose}\n            >\n                {dialogId && this.dialogContent()}\n                <DialogActions>\n                    <Button kind=\"secondary\" onClick={onClose}>\n                        {i18n.t('Cancel')}\n                    </Button>\n                    <Button kind=\"primary\" onClick={this.onConfirm(dialogId)}>\n                        {i18n.t('Confirm')}\n                    </Button>\n                </DialogActions>\n            </Dialog>\n        );\n    }\n}\n\nFilterDialog.propTypes = {\n    dimension: PropTypes.object,\n    displayNameProperty: PropTypes.string,\n    selectedItems: PropTypes.array,\n    onClose: PropTypes.func,\n    onConfirm: PropTypes.func,\n    onDeselect: PropTypes.func,\n    onReorder: PropTypes.func,\n    onSelect: PropTypes.func,\n};\n\nFilterDialog.contextTypes = {\n    d2: PropTypes.object,\n};\n\nexport default FilterDialog;\n","export const SET_ACTIVE_MODAL_DIMENSION = 'SET_ACTIVE_MODAL_DIMENSION';\nexport const CLEAR_ACTIVE_MODAL_DIMENSION = 'CLEAR_ACTIVE_MODAL_DIMENSION';\n\nexport const DEFAULT_STATE_ACTIVE_MODAL_DIMENSION = {};\n\nexport default (state = DEFAULT_STATE_ACTIVE_MODAL_DIMENSION, action) => {\n    switch (action.type) {\n        case SET_ACTIVE_MODAL_DIMENSION: {\n            return action.value;\n        }\n        case CLEAR_ACTIVE_MODAL_DIMENSION: {\n            return DEFAULT_STATE_ACTIVE_MODAL_DIMENSION;\n        }\n        default:\n            return state;\n    }\n};\n\nexport const sGetActiveModalDimension = state => state.activeModalDimension;\n","import {\n    SET_ACTIVE_MODAL_DIMENSION,\n    CLEAR_ACTIVE_MODAL_DIMENSION,\n} from '../reducers/activeModalDimension';\n\nexport const acSetActiveModalDimension = value => ({\n    type: SET_ACTIVE_MODAL_DIMENSION,\n    value,\n});\n\nexport const acClearActiveModalDimension = () => ({\n    type: CLEAR_ACTIVE_MODAL_DIMENSION,\n});\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport Popover from '@material-ui/core/Popover';\nimport ArrowDropDownIcon from '@material-ui/icons/ArrowDropDown';\n\nimport i18n from '@dhis2/d2-i18n';\nimport { DimensionsPanel } from '@dhis2/analytics';\n\nimport { Button } from '@dhis2/ui-core';\nimport FilterDialog from './FilterDialog';\n\nimport { sGetSettingsDisplayNameProperty } from '../../reducers/settings';\nimport { sGetActiveModalDimension } from '../../reducers/activeModalDimension';\nimport { sGetDimensions } from '../../reducers/dimensions';\nimport { sGetFiltersKeys } from '../../reducers/itemFilters';\nimport { sGetEditItemFiltersRoot } from '../../reducers/editItemFilters';\nimport { acAddItemFilter, acRemoveItemFilter } from '../../actions/itemFilters';\nimport {\n    acRemoveEditItemFilter,\n    acSetEditItemFilters,\n} from '../../actions/editItemFilters';\nimport {\n    acClearActiveModalDimension,\n    acSetActiveModalDimension,\n} from '../../actions/activeModalDimension';\n\nclass FilterSelector extends Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            anchorEl: null,\n        };\n    }\n\n    openPanel = (_, event) => {\n        this.setState({ anchorEl: event.currentTarget });\n    };\n\n    closePanel = () => {\n        this.setState({ anchorEl: null });\n    };\n\n    closeDialog = () => {\n        this.setState({ anchorEl: null });\n\n        this.props.clearActiveModalDimension();\n    };\n\n    selectDimension = id => {\n        this.props.setActiveModalDimension(\n            this.props.dimensions.find(dimension => dimension.id === id)\n        );\n    };\n\n    onSelectItems = ({ dimensionId, items }) => {\n        this.props.setEditItemFilters({\n            ...this.props.selectedItems,\n            [dimensionId]: items,\n        });\n    };\n\n    onDeselectItems = ({ dimensionId, itemIdsToRemove }) => {\n        const oldList = this.props.selectedItems[dimensionId] || [];\n        const newList = oldList.filter(\n            item => !itemIdsToRemove.includes(item.id)\n        );\n\n        if (newList.length) {\n            this.props.setEditItemFilters({\n                ...this.props.selectedItems,\n                [dimensionId]: newList,\n            });\n        } else {\n            this.props.removeEditItemFilter(dimensionId);\n        }\n    };\n\n    onReorderItems = ({ dimensionId, itemIds }) => {\n        const oldList = this.props.selectedItems[dimensionId] || [];\n        const reorderedList = itemIds.map(id =>\n            oldList.find(item => item.id === id)\n        );\n\n        this.props.setEditItemFilters({\n            ...this.props.selectedItems,\n            [dimensionId]: reorderedList,\n        });\n    };\n\n    saveFilter = id => {\n        const filterItems = this.props.selectedItems[id];\n\n        if (filterItems && filterItems.length) {\n            this.props.addItemFilter({\n                id,\n                value: [...filterItems],\n            });\n        } else {\n            this.props.removeItemFilter(id);\n        }\n\n        this.closeDialog();\n    };\n\n    render() {\n        const {\n            displayNameProperty,\n            dimension,\n            dimensions,\n            selectedDimensions,\n            selectedItems,\n        } = this.props;\n\n        return (\n            <>\n                <Button onClick={this.openPanel}>\n                    {i18n.t('Add filter')}\n                    <ArrowDropDownIcon />\n                </Button>\n                <Popover\n                    open={Boolean(this.state.anchorEl)}\n                    anchorEl={this.state.anchorEl}\n                    anchorOrigin={{ vertical: 'bottom', horizontal: 'left' }}\n                    onClose={this.closePanel}\n                    style={{ height: '100%' }}\n                >\n                    <DimensionsPanel\n                        style={{ width: '320px' }}\n                        dimensions={dimensions}\n                        onDimensionClick={this.selectDimension}\n                        selectedIds={selectedDimensions}\n                    />\n                </Popover>\n                {dimension ? (\n                    <FilterDialog\n                        displayNameProperty={displayNameProperty}\n                        dimension={dimension}\n                        selectedItems={selectedItems[dimension.id] || []}\n                        onSelect={this.onSelectItems}\n                        onDeselect={this.onDeselectItems}\n                        onReorder={this.onReorderItems}\n                        onClose={this.closeDialog}\n                        onConfirm={this.saveFilter}\n                    />\n                ) : null}\n            </>\n        );\n    }\n}\n\nconst mapStateToProps = state => ({\n    displayNameProperty: sGetSettingsDisplayNameProperty(state),\n    dimension: sGetActiveModalDimension(state),\n    dimensions: sGetDimensions(state),\n    selectedDimensions: sGetFiltersKeys(state),\n    selectedItems: sGetEditItemFiltersRoot(state),\n});\n\nFilterSelector.propTypes = {\n    addItemFilter: PropTypes.func,\n    clearActiveModalDimension: PropTypes.func,\n    dimension: PropTypes.object,\n    dimensions: PropTypes.array,\n    displayNameProperty: PropTypes.string,\n    removeEditItemFilter: PropTypes.func,\n    removeItemFilter: PropTypes.func,\n    selectedDimensions: PropTypes.array,\n    selectedItems: PropTypes.object,\n    setActiveModalDimension: PropTypes.func,\n    setEditItemFilters: PropTypes.func,\n};\n\nexport default connect(\n    mapStateToProps,\n    {\n        clearActiveModalDimension: acClearActiveModalDimension,\n        setActiveModalDimension: acSetActiveModalDimension,\n        addItemFilter: acAddItemFilter,\n        removeItemFilter: acRemoveItemFilter,\n        removeEditItemFilter: acRemoveEditItemFilter,\n        setEditItemFilters: acSetEditItemFilters,\n    }\n)(FilterSelector);\n","import React, { Component } from 'react';\nimport InfoOutlineIcon from '@material-ui/icons/InfoOutlined';\nimport { colors } from '@dhis2/ui-core';\nimport PropTypes from 'prop-types';\n\nclass Info extends Component {\n    show = false;\n\n    toggle() {\n        this.show = !this.show;\n        return this.show;\n    }\n\n    render() {\n        return (\n            <div onClick={() => this.props.onClick(this.toggle())}>\n                <InfoOutlineIcon style={{ fill: colors.grey600 }} />\n            </div>\n        );\n    }\n}\n\nInfo.propTypes = {\n    onClick: PropTypes.func,\n};\n\nexport default Info;\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { Link } from 'react-router-dom';\nimport i18n from '@dhis2/d2-i18n';\nimport SharingDialog from '@dhis2/d2-ui-sharing-dialog';\nimport Star from '@material-ui/icons/Star';\nimport StarBorder from '@material-ui/icons/StarBorder';\n\nimport { orObject } from '../../modules/util';\nimport { tStarDashboard } from '../../actions/dashboards';\nimport { acSetSelectedShowDescription } from '../../actions/selected';\nimport FilterSelector from '../ItemFilter/FilterSelector';\nimport { Button, colors } from '@dhis2/ui-core';\nimport Info from './Info';\nimport {\n    sGetSelectedId,\n    sGetSelectedShowDescription,\n} from '../../reducers/selected';\nimport {\n    sGetDashboardById,\n    sGetDashboardItems,\n} from '../../reducers/dashboards';\n\nimport classes from './styles/ViewTitleBar.module.css';\n\nconst NO_DESCRIPTION = i18n.t('No description');\n\nclass ViewTitleBar extends Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            sharingDialogIsOpen: false,\n        };\n    }\n\n    toggleSharingDialog = () =>\n        this.setState({ sharingDialogIsOpen: !this.state.sharingDialogIsOpen });\n\n    render() {\n        const {\n            id,\n            name,\n            description,\n            access,\n            style,\n            showDescription,\n            starred,\n            onStarClick,\n            onInfoClick,\n        } = this.props;\n\n        const titleStyle = Object.assign({}, style.title, {\n            cursor: 'default',\n            userSelect: 'text',\n            top: '7px',\n        });\n\n        const StarIcon = starred ? Star : StarBorder;\n\n        return (\n            <>\n                <div className={classes.titleBar}>\n                    <span style={titleStyle}>{name}</span>\n                    <div className={classes.actions}>\n                        <div\n                            className={classes.titleBarIcon}\n                            onClick={onStarClick}\n                        >\n                            <StarIcon style={{ fill: colors.grey600 }} />\n                        </div>\n                        <div className={classes.titleBarIcon}>\n                            <Info onClick={onInfoClick} />\n                        </div>\n                        <div style={{ marginLeft: '10px' }}>\n                            {access.update ? (\n                                <Link\n                                    className={classes.editLink}\n                                    to={`/${id}/edit`}\n                                >\n                                    <Button>{i18n.t('Edit')}</Button>\n                                </Link>\n                            ) : null}\n                            {access.manage ? (\n                                <span style={{ marginRight: '4px' }}>\n                                    <Button onClick={this.toggleSharingDialog}>\n                                        {i18n.t('Share')}\n                                    </Button>\n                                </span>\n                            ) : null}\n                            <span style={{ marginRight: '4px' }}>\n                                <FilterSelector />\n                            </span>\n                        </div>\n                    </div>\n                </div>\n                {showDescription ? (\n                    <div\n                        className=\"dashboard-description\"\n                        style={Object.assign(\n                            { paddingTop: '5px', paddingBottom: '5px' },\n                            style.description,\n                            !description ? { color: '#888' } : {}\n                        )}\n                    >\n                        {description || NO_DESCRIPTION}\n                    </div>\n                ) : null}\n                {id ? (\n                    <SharingDialog\n                        d2={this.context.d2}\n                        id={id}\n                        type=\"dashboard\"\n                        open={this.state.sharingDialogIsOpen}\n                        onRequestClose={this.toggleSharingDialog}\n                    />\n                ) : null}\n            </>\n        );\n    }\n}\n\nViewTitleBar.propTypes = {\n    access: PropTypes.object,\n    description: PropTypes.string,\n    id: PropTypes.string,\n    name: PropTypes.string,\n    showDescription: PropTypes.bool,\n    starred: PropTypes.bool,\n    style: PropTypes.object,\n    onInfoClick: PropTypes.func,\n    onStarClick: PropTypes.func,\n};\n\nViewTitleBar.defaultProps = {\n    name: '',\n    description: '',\n    starred: false,\n    showDescription: false,\n    onInfoClick: null,\n};\n\nViewTitleBar.contextTypes = {\n    d2: PropTypes.object,\n};\n\nconst mapStateToProps = state => {\n    const id = sGetSelectedId(state);\n    const dashboard = orObject(sGetDashboardById(state, id));\n\n    return {\n        id,\n        name: dashboard.displayName,\n        description: dashboard.displayDescription,\n        dashboardItems: sGetDashboardItems(state),\n        showDescription: sGetSelectedShowDescription(state),\n        starred: dashboard.starred,\n        access: orObject(dashboard.access),\n    };\n};\n\nconst mergeProps = (stateProps, dispatchProps, ownProps) => {\n    const { id, starred, showDescription } = stateProps;\n    const { dispatch } = dispatchProps;\n\n    return {\n        ...stateProps,\n        ...ownProps,\n        onStarClick: () => dispatch(tStarDashboard(id, !starred)),\n        onInfoClick: () =>\n            dispatch(acSetSelectedShowDescription(!showDescription)),\n    };\n};\n\nexport default connect(\n    mapStateToProps,\n    null,\n    mergeProps\n)(ViewTitleBar);\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport { colors } from '@dhis2/ui-core';\nimport EditTitleBar from './EditTitleBar';\nimport ViewTitleBar from './ViewTitleBar';\n\nimport './TitleBar.css';\n\nconst style = {\n    title: {\n        position: 'relative',\n        fontSize: 21,\n        fontWeight: 500,\n        color: colors.black,\n        minWidth: 50,\n    },\n    description: {\n        fontSize: 14,\n        color: colors.grey800,\n    },\n};\n\nconst TitleBar = ({ edit }) => {\n    return (\n        <div\n            className=\"titlebar-wrapper\"\n            style={{\n                padding: '20px 15px 5px 10px',\n            }}\n        >\n            {edit ? (\n                <EditTitleBar style={style} />\n            ) : (\n                <ViewTitleBar style={style} />\n            )}\n        </div>\n    );\n};\n\nTitleBar.propTypes = {\n    edit: PropTypes.bool,\n};\n\nexport default TitleBar;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nimport i18n from '@dhis2/d2-i18n';\n\nimport * as pluginManager from './plugin';\nimport { getBaseUrl, orObject } from '../../../modules/util';\nimport { getGridItemDomId } from '../../ItemGrid/gridUtil';\n\nconst pluginCredentials = d2 => {\n    return {\n        baseUrl: getBaseUrl(d2),\n        auth: d2.Api.getApi().defaultHeaders.Authorization,\n    };\n};\n\nclass DefaultPlugin extends Component {\n    pluginCredentials = null;\n\n    constructor(props, context) {\n        super(props);\n\n        this.d2 = context.d2;\n    }\n\n    shouldPluginReload = prevProps => {\n        // TODO - fix this hack, to handle bug with multiple\n        // rerendering while switching between dashboards.\n        //\n        // To determine if the rendering is happening because of a\n        // dashboard switch, check if the item reference has changed.\n        const reloadAllowed = this.props.item === prevProps.item;\n\n        const filtersChanged = prevProps.itemFilters !== this.props.itemFilters;\n        const vis = orObject(this.props.visualization);\n        const prevVis = orObject(prevProps.visualization);\n        const visChanged =\n            vis.id !== prevVis.id || vis.activeType !== prevVis.activeType;\n\n        return reloadAllowed && (visChanged || filtersChanged);\n    };\n\n    reloadPlugin = prevProps => {\n        if (\n            pluginManager.pluginIsAvailable(\n                this.props.item,\n                this.props.visualization\n            ) &&\n            this.shouldPluginReload(prevProps)\n        ) {\n            const prevVis = orObject(prevProps.visualization);\n            const currentVis = this.props.visualization;\n\n            const useActiveType =\n                currentVis.activeType !== prevVis.activeType ||\n                currentVis.activeType !== this.props.item.type;\n\n            if (\n                useActiveType ||\n                this.props.itemFilters !== prevProps.itemFilters\n            ) {\n                pluginManager.unmount(\n                    this.props.item,\n                    prevVis.activeType || this.props.item.type\n                );\n\n                pluginManager.load(this.props.item, this.props.visualization, {\n                    credentials: this.pluginCredentials,\n                    activeType: useActiveType ? currentVis.activeType : null,\n                });\n            }\n        }\n    };\n\n    componentDidMount() {\n        this.pluginCredentials = pluginCredentials(this.d2);\n\n        if (\n            pluginManager.pluginIsAvailable(\n                this.props.item,\n                this.props.visualization\n            )\n        ) {\n            pluginManager.load(this.props.item, this.props.visualization, {\n                credentials: this.pluginCredentials,\n                activeType: !this.props.editMode ? this.getActiveType() : null,\n            });\n        }\n    }\n\n    componentDidUpdate(prevProps) {\n        this.reloadPlugin(prevProps);\n    }\n\n    getActiveType = () =>\n        this.props.visualization.activeType || this.props.item.type;\n\n    render() {\n        const { classes, item, visualization, style } = this.props;\n        const pluginIsAvailable = pluginManager.pluginIsAvailable(\n            item,\n            visualization\n        );\n\n        return pluginIsAvailable ? (\n            <div id={getGridItemDomId(item.id)} style={style} />\n        ) : (\n            <div className={classes.textDiv}>\n                {i18n.t('Unable to load the plugin for this item')}\n            </div>\n        );\n    }\n}\n\nDefaultPlugin.contextTypes = {\n    d2: PropTypes.object,\n};\n\nDefaultPlugin.propTypes = {\n    classes: PropTypes.object,\n    editMode: PropTypes.bool,\n    item: PropTypes.object,\n    itemFilters: PropTypes.object,\n    style: PropTypes.object,\n    visualization: PropTypes.object,\n};\n\nDefaultPlugin.defaultProps = {\n    style: {},\n    item: {},\n    itemFilters: {},\n    visualization: {},\n};\n\nexport default DefaultPlugin;\n","import React from 'react';\nimport { colors } from '@dhis2/ui-core';\n\nexport const ThreeDots = () => (\n    <svg\n        height=\"18\"\n        viewBox=\"0 0 18 18\"\n        width=\"18\"\n        xmlns=\"http://www.w3.org/2000/svg\"\n    >\n        <path\n            d=\"m4 7.5c-.83 0-1.5.67-1.5 1.5s.67 1.5 1.5 1.5 1.5-.67 1.5-1.5-.67-1.5-1.5-1.5zm10 0c-.83 0-1.5.67-1.5 1.5s.67 1.5 1.5 1.5 1.5-.67 1.5-1.5-.67-1.5-1.5-1.5zm-5 0c-.83 0-1.5.67-1.5 1.5s.67 1.5 1.5 1.5 1.5-.67 1.5-1.5-.67-1.5-1.5-1.5z\"\n            fill=\"#6e7a8a\"\n        />\n    </svg>\n);\n\nexport const SpeechBubble = () => (\n    <svg\n        height=\"20\"\n        viewBox=\"0 0 20 20\"\n        width=\"20\"\n        xmlns=\"http://www.w3.org/2000/svg\"\n        style={{ margin: '3px 2px 0 2px' }} // Temporary fix for the misaligned icon, should be removed once the icon is replaced\n    >\n        <path\n            d=\"m20 2h-16c-1.1 0-1.99.9-1.99 2l-.01 18 4-4h14c1.1 0 2-.9 2-2v-12c0-1.1-.9-2-2-2zm-2 12h-12v-2h12zm0-3h-12v-2h12zm0-3h-12v-2h12z\"\n            fill=\"#6e7a8a\"\n            fillRule=\"evenodd\"\n            transform=\"translate(-2 -2)\"\n        />\n    </svg>\n);\n\nexport const Warning = () => (\n    <svg\n        xmlns=\"http://www.w3.org/2000/svg\"\n        height=\"24\"\n        viewBox=\"0 0 24 24\"\n        width=\"24\"\n        fill={colors.grey600}\n    >\n        <path d=\"M0 0h24v24H0z\" fill=\"none\" />\n        <path d=\"M1 21h22L12 2 1 21zm12-3h-2v-2h2v2zm0-4h-2v-4h2v4z\" />\n    </svg>\n);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport i18n from '@dhis2/d2-i18n';\nimport { Warning } from './assets/icons';\n\nimport classes from './styles/FatalErrorBoundary.module.css';\n\nclass FatalErrorBoundary extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            errorFound: false,\n        };\n    }\n    componentDidCatch(error, info) {\n        this.setState({\n            errorFound: true,\n        });\n        console.log('error: ', error);\n        console.log('info: ', info);\n    }\n    render() {\n        if (this.state.errorFound) {\n            return (\n                <p className={classes.container}>\n                    <span className={classes.icon}>\n                        <Warning />\n                    </span>\n                    <span className={classes.message}>\n                        {i18n.t(\n                            'There was a problem loading this dashboard item'\n                        )}\n                    </span>\n                </p>\n            );\n        }\n        return this.props.children;\n    }\n}\n\nFatalErrorBoundary.propTypes = {\n    children: PropTypes.node,\n};\n\nexport default FatalErrorBoundary;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport i18n from '@dhis2/d2-i18n';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport { colors } from '@dhis2/ui-core';\n\nimport classes from './styles/DeleteItemButton.module.css';\n\nconst DeleteItemButton = ({ onClick }) => (\n    <button\n        type=\"button\"\n        className={classes.deleteItemButton}\n        onClick={onClick}\n        title={i18n.t(`Delete item`)}\n    >\n        <DeleteIcon style={{ fill: colors.red500 }} />\n    </button>\n);\n\nDeleteItemButton.propTypes = {\n    onClick: PropTypes.func,\n};\n\nexport default DeleteItemButton;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\n\nimport { sGetIsEditing } from '../../reducers/editDashboard';\nimport { acRemoveDashboardItem } from '../../actions/editDashboard';\nimport DeleteItemButton from './DeleteItemButton';\n\nimport classes from './styles/ItemHeader.module.css';\n\n// This is the margin-top + margin-bottom defined in the css file\nexport const HEADER_MARGIN_HEIGHT = 12;\n\nconst ItemHeader = React.forwardRef(\n    (\n        { itemId, acRemoveDashboardItem, actionButtons, title, editMode },\n        ref\n    ) => {\n        const handleDeleteItem = () => acRemoveDashboardItem(itemId);\n\n        return (\n            <div className={classes.itemHeaderWrap} ref={ref}>\n                <p className={classes.itemTitle}>{title}</p>\n                {editMode ? (\n                    <div className={classes.itemActionsWrap}>\n                        <DeleteItemButton onClick={handleDeleteItem} />\n                    </div>\n                ) : (\n                    actionButtons && (\n                        <div className={classes.itemActionsWrap}>\n                            {actionButtons}\n                        </div>\n                    )\n                )}\n            </div>\n        );\n    }\n);\n\nItemHeader.propTypes = {\n    acRemoveDashboardItem: PropTypes.func,\n    actionButtons: PropTypes.node,\n    editMode: PropTypes.bool,\n    itemId: PropTypes.string,\n    title: PropTypes.string,\n};\n\nconst mapStateToProps = state => ({\n    editMode: sGetIsEditing(state),\n});\n\nconst mapDispatchToProps = {\n    acRemoveDashboardItem,\n};\n\nexport default connect(\n    mapStateToProps,\n    mapDispatchToProps,\n    null,\n    { forwardRef: true }\n)(ItemHeader);\n","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\n\nimport {\n    isSingleValue,\n    isYearOverYear,\n    VIS_TYPE_GAUGE,\n    VIS_TYPE_PIE,\n} from '@dhis2/analytics';\nimport { Button, Menu, MenuItem, Divider, colors } from '@dhis2/ui-core';\nimport i18n from '@dhis2/d2-i18n';\nimport Popover from '@material-ui/core/Popover';\nimport TableIcon from '@material-ui/icons/ViewList';\nimport ChartIcon from '@material-ui/icons/InsertChart';\nimport MapIcon from '@material-ui/icons/Public';\nimport LaunchIcon from '@material-ui/icons/Launch';\n\nimport { ThreeDots, SpeechBubble } from './assets/icons';\nimport { pluginIsAvailable, getLink } from './plugin';\nimport {\n    CHART,\n    MAP,\n    REPORT_TABLE,\n    EVENT_CHART,\n    EVENT_REPORT,\n    isTrackerDomainType,\n    hasMapView,\n    getAppName,\n} from '../../../modules/itemTypes';\n\nconst iconFill = { fill: colors.grey600 };\n\nconst ItemHeaderButtons = props => {\n    const [anchorEl, setAnchorEl] = useState(null);\n\n    const { item, visualization, onSelectActiveType, d2, activeType } = props;\n\n    const isTrackerType = isTrackerDomainType(item.type);\n\n    const onViewTable = () => {\n        handleClose();\n        onSelectActiveType(isTrackerType ? EVENT_REPORT : REPORT_TABLE);\n    };\n\n    const onViewChart = () => {\n        handleClose();\n        onSelectActiveType(isTrackerType ? EVENT_CHART : CHART);\n    };\n\n    const onViewMap = () => {\n        handleClose();\n        onSelectActiveType(MAP);\n    };\n\n    const itemHasMapView = () => hasMapView(item.type);\n\n    const handleMenuClick = (_, event) => setAnchorEl(event.currentTarget);\n\n    const handleInterpretationClick = () => {\n        props.onToggleFooter();\n        if (anchorEl !== null) {\n            handleClose();\n        }\n    };\n\n    const handleClose = () => setAnchorEl(null);\n\n    const type = visualization.type || item.type;\n    const canViewAs =\n        !isSingleValue(type) &&\n        !isYearOverYear(type) &&\n        type !== VIS_TYPE_GAUGE &&\n        type !== VIS_TYPE_PIE;\n\n    const interpretationMenuLabel = props.activeFooter\n        ? i18n.t(`Hide interpretations and details`)\n        : i18n.t(`Show interpretations and details`);\n\n    const ViewAsMenuItems = () => (\n        <>\n            {activeType !== CHART && activeType !== EVENT_CHART && (\n                <MenuItem\n                    dense\n                    label={i18n.t('View as Chart')}\n                    onClick={onViewChart}\n                    icon={<ChartIcon style={iconFill} />}\n                />\n            )}\n            {activeType !== REPORT_TABLE && activeType !== EVENT_REPORT && (\n                <MenuItem\n                    dense\n                    label={i18n.t('View as Table')}\n                    onClick={onViewTable}\n                    icon={<TableIcon style={iconFill} />}\n                />\n            )}\n            {itemHasMapView() && activeType !== MAP && (\n                <MenuItem\n                    dense\n                    label={i18n.t('View as Map')}\n                    onClick={onViewMap}\n                    icon={<MapIcon style={iconFill} />}\n                />\n            )}\n        </>\n    );\n\n    return pluginIsAvailable(item, visualization) ? (\n        <>\n            <Button small secondary onClick={handleMenuClick}>\n                <ThreeDots />\n            </Button>\n            {anchorEl && (\n                <Popover\n                    open={Boolean(anchorEl)}\n                    onClose={handleClose}\n                    anchorEl={anchorEl}\n                >\n                    <Menu>\n                        {canViewAs && (\n                            <>\n                                <ViewAsMenuItems />\n                                <Divider />\n                            </>\n                        )}\n                        <MenuItem\n                            dense\n                            icon={<LaunchIcon style={{ fill: '#6e7a8a' }} />}\n                            label={i18n.t('Open in {{appName}} app', {\n                                appName: getAppName(item.type),\n                            })}\n                            href={getLink(item, d2)}\n                            target=\"_blank\"\n                        />\n                        <MenuItem\n                            dense\n                            icon={<SpeechBubble />}\n                            label={interpretationMenuLabel}\n                            onClick={handleInterpretationClick}\n                        />\n                    </Menu>\n                </Popover>\n            )}\n        </>\n    ) : null;\n};\n\nItemHeaderButtons.propTypes = {\n    activeFooter: PropTypes.bool,\n    activeType: PropTypes.string,\n    d2: PropTypes.object,\n    item: PropTypes.object,\n    visualization: PropTypes.object,\n    onSelectActiveType: PropTypes.func,\n    onToggleFooter: PropTypes.func,\n};\n\nexport default ItemHeaderButtons;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { colors } from '@dhis2/ui-core';\nimport { getId } from './plugin';\nimport InterpretationsComponent from '@dhis2/d2-ui-interpretations';\n\nconst style = {\n    scrollContainer: {\n        overflowY: 'auto',\n        height: '340px',\n    },\n    line: {\n        margin: '-1px 0px 0px',\n        height: '1px',\n        border: 'none',\n        backgroundColor: colors.grey100,\n    },\n};\n\nclass ItemFooter extends Component {\n    render() {\n        const objectId = getId(this.props.item);\n\n        return (\n            <div className=\"dashboard-item-footer\">\n                <hr style={style.line} />\n                <div style={style.scrollContainer}>\n                    <InterpretationsComponent\n                        d2={this.context.d2}\n                        item={this.props.item}\n                        type={this.props.item.type.toLowerCase()}\n                        id={objectId}\n                        appName=\"dashboard\"\n                    />\n                </div>\n            </div>\n        );\n    }\n}\n\nItemFooter.contextTypes = {\n    d2: PropTypes.object.isRequired,\n};\n\nItemFooter.propTypes = {\n    item: PropTypes.object.isRequired,\n};\n\nexport default ItemFooter;\n","// Note that this ignores discrepancies in 'this', so shouldn't be used with bound functions\n// This is useful instead of lodash/memoize when we only need to memoize a single value\n// Inspiration: https://github.com/alexreardon/memoize-one\n\nconst memoizeOne = fn => {\n    let lastArgs = undefined;\n    let lastValue = undefined;\n\n    return (...args) => {\n        if (\n            lastArgs &&\n            args.length === lastArgs.length &&\n            args.every((arg, i) => arg === lastArgs[i])\n        ) {\n            return lastValue;\n        }\n        lastArgs = args;\n        lastValue = fn(...args);\n        return lastValue;\n    };\n};\n\nexport default memoizeOne;\n","import React from 'react';\nimport CircularProgress from '@material-ui/core/CircularProgress';\n\nimport classes from './styles/LoadingMask.module.css';\n\nfunction CircularIndeterminate() {\n    return (\n        <div className={classes.outer}>\n            <CircularProgress className={classes.progress} />\n        </div>\n    );\n}\n\nexport default CircularIndeterminate;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport uniqueId from 'lodash/uniqueId';\nimport VisualizationPlugin from '@dhis2/data-visualizer-plugin';\nimport i18n from '@dhis2/d2-i18n';\n\nimport DefaultPlugin from './DefaultPlugin';\nimport FatalErrorBoundary from './FatalErrorBoundary';\nimport ItemHeader, { HEADER_MARGIN_HEIGHT } from '../ItemHeader';\nimport ItemHeaderButtons from './ItemHeaderButtons';\nimport ItemFooter from './ItemFooter';\nimport * as pluginManager from './plugin';\nimport { sGetVisualization } from '../../../reducers/visualizations';\nimport { sGetItemFiltersRoot } from '../../../reducers/itemFilters';\nimport {\n    acAddVisualization,\n    acSetActiveVisualizationType,\n} from '../../../actions/visualizations';\nimport {\n    VISUALIZATION,\n    MAP,\n    CHART,\n    REPORT_TABLE,\n} from '../../../modules/itemTypes';\nimport memoizeOne from '../../../modules/memoizeOne';\n\nimport { getVisualizationConfig } from './plugin';\nimport LoadingMask from './LoadingMask';\nimport { ITEM_CONTENT_PADDING_BOTTOM } from '../../ItemGrid/ItemGrid';\n\nimport classes from './styles/Item.module.css';\n\nexport class Item extends Component {\n    state = {\n        showFooter: false,\n        configLoaded: false,\n        pluginIsLoaded: false,\n    };\n\n    constructor(props, context) {\n        super(props);\n\n        this.d2 = context.d2;\n\n        this.contentRef = React.createRef();\n        this.headerRef = React.createRef();\n\n        this.memoizedApplyFilters = memoizeOne(this.applyFilters);\n\n        this.memoizedGetVisualizationConfig = memoizeOne(\n            getVisualizationConfig\n        );\n\n        this.memoizedGetContentStyle = memoizeOne(this.getContentStyle);\n    }\n\n    async componentDidMount() {\n        this.props.onVisualizationLoaded(\n            // TODO do not call fetch on the pluginManager, do it here as the manager will eventually be removed...\n            await pluginManager.fetch(this.props.item)\n        );\n\n        this.setState({\n            configLoaded: true,\n        });\n    }\n\n    componentDidUpdate(prevProps, prevState) {\n        if (\n            prevState.pluginIsLoaded &&\n            (prevProps.visualization !== this.props.visualization ||\n                prevProps.itemFilters !== this.props.itemFilters)\n        ) {\n            this.setState({\n                pluginIsLoaded: false,\n            });\n        }\n    }\n\n    applyFilters = (visualization, filters) => {\n        if (!Object.keys(filters).length) {\n            return visualization;\n        }\n\n        // deep clone objects in filters to avoid changing the visualization in the Redux store\n        const visRows = visualization.rows.map(obj => ({ ...obj }));\n        const visColumns = visualization.columns.map(obj => ({ ...obj }));\n        const visFilters = visualization.filters.map(obj => ({ ...obj }));\n\n        Object.keys(filters).forEach(dimensionId => {\n            if (filters[dimensionId]) {\n                let dimensionFound = false;\n\n                [visRows, visColumns, visFilters].forEach(dimensionObjects =>\n                    dimensionObjects\n                        .filter(obj => obj.dimension === dimensionId)\n                        .forEach(obj => {\n                            dimensionFound = true;\n                            obj.items = filters[dimensionId];\n                        })\n                );\n\n                // add dimension to filters if not already present elsewhere\n                if (!dimensionFound) {\n                    visFilters.push({\n                        dimension: dimensionId,\n                        items: filters[dimensionId],\n                    });\n                }\n            }\n        });\n\n        return {\n            ...visualization,\n            rows: visRows,\n            columns: visColumns,\n            filters: visFilters,\n        };\n    };\n\n    getUniqueKey = memoizeOne(() => uniqueId());\n\n    pluginCredentials = null;\n\n    getPluginComponent = () => {\n        const activeType = this.getActiveType();\n        const visualization = this.memoizedGetVisualizationConfig(\n            this.props.visualization,\n            this.props.item.type,\n            activeType\n        );\n\n        if (!visualization) {\n            return (\n                <div className={classes.textDiv}>\n                    {i18n.t('No data to display')}\n                </div>\n            );\n        }\n\n        const calculatedHeight =\n            this.props.item.originalHeight -\n            this.headerRef.current.clientHeight -\n            HEADER_MARGIN_HEIGHT -\n            ITEM_CONTENT_PADDING_BOTTOM;\n\n        const props = {\n            ...this.props,\n            visualization,\n            classes,\n            style: this.memoizedGetContentStyle(\n                calculatedHeight,\n                this.contentRef ? this.contentRef.offsetHeight : null,\n                this.props.editMode\n            ),\n        };\n\n        switch (activeType) {\n            case VISUALIZATION:\n            case CHART:\n            case REPORT_TABLE: {\n                return (\n                    <>\n                        {!this.state.pluginIsLoaded ? (\n                            <div className={classes.loadingCover}>\n                                <LoadingMask />\n                            </div>\n                        ) : null}\n                        <VisualizationPlugin\n                            d2={this.d2}\n                            visualization={this.memoizedApplyFilters(\n                                visualization,\n                                props.itemFilters\n                            )}\n                            onLoadingComplete={this.onLoadingComplete}\n                            forDashboard={true}\n                            style={props.style}\n                        />\n                    </>\n                );\n            }\n            case MAP: {\n                props.visualization.hideTitle = true;\n                if (props.item.type === MAP) {\n                    // apply filters only to thematic and event layers\n                    // for maps AO\n                    const mapViews = props.visualization.mapViews.map(obj => {\n                        if (\n                            obj.layer.includes('thematic') ||\n                            obj.layer.includes('event')\n                        ) {\n                            return this.memoizedApplyFilters(\n                                obj,\n                                props.itemFilters\n                            );\n                        }\n\n                        return obj;\n                    });\n\n                    props.visualization = {\n                        ...props.visualization,\n                        mapViews,\n                    };\n                } else {\n                    // this is the case of a non map AO passed to the maps plugin\n                    // due to a visualization type switch in dashboard item\n                    // maps plugin takes care of converting the AO to a suitable format\n                    props.visualization = this.memoizedApplyFilters(\n                        props.visualization,\n                        props.itemFilters\n                    );\n                }\n\n                return <DefaultPlugin {...props} />;\n            }\n            default: {\n                props.visualization = this.memoizedApplyFilters(\n                    props.visualization,\n                    props.itemFilters\n                );\n\n                return <DefaultPlugin {...props} />;\n            }\n        }\n    };\n\n    onLoadingComplete = () => {\n        this.setState({\n            pluginIsLoaded: true,\n        });\n    };\n\n    onToggleFooter = () => {\n        this.setState(\n            { showFooter: !this.state.showFooter },\n            this.props.onToggleItemExpanded(this.props.item.id)\n        );\n    };\n\n    onSelectActiveType = type => {\n        if (type === this.getActiveType()) {\n            return;\n        }\n\n        pluginManager.unmount(this.props.item, this.getActiveType());\n\n        this.props.onSelectActiveType(this.props.visualization.id, type);\n    };\n\n    getActiveType = () =>\n        this.props.visualization.activeType || this.props.item.type;\n\n    pluginIsAvailable = () =>\n        pluginManager.pluginIsAvailable(\n            this.props.item,\n            this.props.visualization\n        );\n\n    getContentStyle = (calculatedHeight, measuredHeight, editMode) => {\n        const height = editMode\n            ? measuredHeight || calculatedHeight\n            : calculatedHeight;\n\n        return { height };\n    };\n\n    render() {\n        const { item, editMode, itemFilters } = this.props;\n        const { showFooter } = this.state;\n\n        const actionButtons = (\n            <ItemHeaderButtons\n                item={item}\n                visualization={this.props.visualization}\n                onSelectActiveType={this.onSelectActiveType}\n                onToggleFooter={this.onToggleFooter}\n                d2={this.d2}\n                activeType={this.getActiveType()}\n                activeFooter={this.state.showFooter}\n            />\n        );\n\n        return (\n            <>\n                <ItemHeader\n                    title={pluginManager.getName(item)}\n                    itemId={item.id}\n                    actionButtons={actionButtons}\n                    ref={this.headerRef}\n                />\n                <FatalErrorBoundary>\n                    <div\n                        key={this.getUniqueKey(itemFilters)}\n                        className=\"dashboard-item-content\"\n                        ref={ref => (this.contentRef = ref)}\n                    >\n                        {this.state.configLoaded && this.getPluginComponent()}\n                    </div>\n                </FatalErrorBoundary>\n                {!editMode && showFooter ? <ItemFooter item={item} /> : null}\n            </>\n        );\n    }\n}\n\nItem.contextTypes = {\n    d2: PropTypes.object,\n};\n\nItem.propTypes = {\n    editMode: PropTypes.bool,\n    item: PropTypes.object,\n    itemFilters: PropTypes.object,\n    visualization: PropTypes.object,\n    onSelectActiveType: PropTypes.func,\n    onToggleItemExpanded: PropTypes.func,\n    onVisualizationLoaded: PropTypes.func,\n};\n\nItem.defaultProps = {\n    item: {},\n    editMode: false,\n    onToggleItemExpanded: Function.prototype,\n    itemFilters: {},\n    visualization: {},\n};\n\nconst mapStateToProps = (state, ownProps) => ({\n    itemFilters: sGetItemFiltersRoot(state),\n    visualization: sGetVisualization(\n        state,\n        pluginManager.extractFavorite(ownProps.item).id\n    ),\n});\n\nconst mapDispatchToProps = dispatch => ({\n    onVisualizationLoaded: visualization =>\n        dispatch(acAddVisualization(visualization)),\n    onSelectActiveType: (id, type, activeType) =>\n        dispatch(acSetActiveVisualizationType(id, type, activeType)),\n});\n\nexport default connect(\n    mapStateToProps,\n    mapDispatchToProps\n)(Item);\n","import React from 'react';\nimport { colors } from '@dhis2/ui-core';\n\nconst style = {\n    backgroundColor: colors.grey200,\n    border: 'none',\n    height: '1px',\n    margin: '0px 0px 5px 0px',\n};\n\nconst Line = () => <hr style={style} />;\n\nexport default Line;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport i18n from '@dhis2/d2-i18n';\n\nimport { sGetMessagesRoot } from '../../../reducers/messages';\nimport { formatDate } from '../../../modules/util';\nimport { colors } from '@dhis2/ui-core';\nimport ItemHeader from '../ItemHeader';\nimport Line from '../../../widgets/Line';\n\nimport './MessagesItem.css';\n\nconst PRIVATE = 'PRIVATE';\n\nconst messageTypes = {\n    [PRIVATE]: 'Private',\n    VALIDATION_RESULT: 'Validation',\n    TICKET: 'Ticket',\n    SYSTEM: 'System',\n};\n\nconst style = {\n    list: {\n        listStyleType: 'none',\n        paddingLeft: '0px',\n    },\n    seeAll: {\n        textAlign: 'center',\n        fontSize: '13px',\n        marginBottom: '5px',\n    },\n    sender: {\n        fontSize: '13px',\n        lineHeight: '15px',\n        margin: 0,\n        color: colors.grey800,\n    },\n    snippet: {\n        color: colors.grey800,\n        fontSize: '13px',\n        lineHeight: '15px',\n        maxHeight: '30px',\n        overflow: 'hidden',\n    },\n};\n\nclass MessagesItem extends Component {\n    state = {\n        uiLocale: '',\n    };\n\n    async componentDidMount() {\n        const uiLocale = await this.context.d2.currentUser.userSettings.get(\n            'keyUiLocale'\n        );\n\n        this.setState({ uiLocale });\n    }\n\n    getMessageHref = msg => {\n        const msgIdentifier = msg ? `#/${msg.messageType}/${msg.id}` : '';\n        return `${this.context.baseUrl}/dhis-web-messaging/${msgIdentifier}`;\n    };\n\n    getMessageSender = msg => {\n        const latestMsg = msg.messages.slice(-1)[0];\n        return latestMsg.sender ? latestMsg.sender.displayName : '';\n    };\n\n    getMessageItems = () => {\n        const editClass = !this.props.editMode ? 'view' : null;\n\n        return this.props.messages.map(msg => {\n            const redirectToMsg = () => {\n                if (!this.props.editMode) {\n                    document.location.href = this.getMessageHref(msg);\n                }\n            };\n\n            const sender =\n                msg.messageType === PRIVATE\n                    ? this.getMessageSender(msg)\n                    : messageTypes[msg.messageType];\n\n            const readClass = !msg.read ? 'unread' : null;\n            const latestMsg = msg.messages.slice(-1)[0];\n            const msgDate = latestMsg.lastUpdated;\n\n            return (\n                <li\n                    className={`message-item ${editClass}`}\n                    key={msg.id}\n                    onClick={redirectToMsg}\n                >\n                    <p className={`message-title ${readClass}`}>\n                        {msg.displayName} ({msg.messageCount})\n                    </p>\n                    <p style={style.sender}>\n                        {sender} - {formatDate(msgDate, this.state.uiLocale)}\n                    </p>\n                    <p style={style.snippet}>{latestMsg.text}</p>\n                </li>\n            );\n        });\n    };\n\n    render() {\n        return (\n            <>\n                <ItemHeader\n                    title={i18n.t('Messages')}\n                    itemId={this.props.item.id}\n                />\n                <Line />\n                {this.props.messages.length > 0 && (\n                    <div className=\"dashboard-item-content\">\n                        <ul style={style.list}>{this.getMessageItems()}</ul>\n                        <div style={style.seeAll}>\n                            <a href={this.getMessageHref()}>\n                                {i18n.t('See all messages')}\n                            </a>\n                        </div>\n                    </div>\n                )}\n            </>\n        );\n    }\n}\n\nMessagesItem.propTypes = {\n    editMode: PropTypes.bool,\n    item: PropTypes.object,\n    messages: PropTypes.array,\n};\n\nMessagesItem.contextTypes = {\n    d2: PropTypes.object,\n    baseUrl: PropTypes.string,\n};\n\nconst mapStateToProps = state => {\n    return {\n        messages: Object.values(sGetMessagesRoot(state)),\n    };\n};\n\nconst MessagesContainer = connect(\n    mapStateToProps,\n    null\n)(MessagesItem);\n\nexport default MessagesContainer;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport i18n from '@dhis2/d2-i18n';\nimport ItemHeader from '../ItemHeader';\nimport NotInterestedIcon from '@material-ui/icons/NotInterested';\n\nconst NotSupportedItem = props => (\n    <>\n        <ItemHeader\n            title={i18n.t('Item type \"{{type}}\" not supported', {\n                type: props.item.type,\n            })}\n            itemId={props.item.id}\n        />\n        <div\n            style={{\n                display: 'flex',\n                justifyContent: 'center',\n                alignItems: 'center',\n                height: '90%',\n            }}\n        >\n            <NotInterestedIcon\n                style={{ width: 100, height: 100, align: 'center' }}\n                color=\"disabled\"\n            />\n        </div>\n    </>\n);\n\nNotSupportedItem.propTypes = {\n    item: PropTypes.object,\n};\n\nexport default NotSupportedItem;\n","import React from 'react';\nimport { colors } from '@dhis2/ui-core';\nimport PropTypes from 'prop-types';\n\nconst DescriptionIcon = ({ className }) => (\n    <svg\n        className={className}\n        xmlns=\"http://www.w3.org/2000/svg\"\n        viewBox=\"0 0 24 24\"\n        fill={colors.grey500}\n    >\n        <path d=\"M0 0h24v24H0z\" fill=\"none\" />\n        <path d=\"M14 2H6c-1.1 0-1.99.9-1.99 2L4 20c0 1.1.89 2 1.99 2H18c1.1 0 2-.9 2-2V8l-6-6zm2 16H8v-2h8v2zm0-4H8v-2h8v2zm-3-5V3.5L18.5 9H13z\" />\n    </svg>\n);\n\nDescriptionIcon.propTypes = {\n    className: PropTypes.string,\n};\n\nexport default DescriptionIcon;\n","import React from 'react';\nimport { colors } from '@dhis2/ui-core';\nimport PropTypes from 'prop-types';\n\nconst DeleteIcon = ({ className }) => (\n    <svg\n        className={className}\n        xmlns=\"http://www.w3.org/2000/svg\"\n        width=\"18\"\n        height=\"18\"\n        viewBox=\"0 0 24 24\"\n        fill={colors.red500}\n    >\n        <path d=\"M6 19c0 1.1.9 2 2 2h8c1.1 0 2-.9 2-2V7H6v12zM19 4h-3.5l-1-1h-5l-1 1H5v2h14V4z\" />\n        <path d=\"M0 0h24v24H0z\" fill=\"none\" />\n    </svg>\n);\n\nDeleteIcon.propTypes = {\n    className: PropTypes.string,\n};\n\nexport default DeleteIcon;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { colors } from '@dhis2/ui-core';\nimport DescriptionIcon from '../../../icons/Description';\n\nimport DeleteIcon from '../../../icons/Delete';\nimport Line from '../../../widgets/Line';\nimport { itemTypeMap, getItemUrl } from '../../../modules/itemTypes';\nimport { orArray } from '../../../modules/util';\nimport { tRemoveListItemContent } from './actions';\nimport ItemHeader from '../ItemHeader';\nimport classes from './Item.module.css';\n\nconst getItemTitle = item => itemTypeMap[item.type].pluralTitle;\n\nconst getContentItems = item =>\n    orArray(item[itemTypeMap[item.type].propName]).filter(\n        (item, index, array) =>\n            array.findIndex(el => el.id === item.id) === index\n    );\n\nconst ListItem = (props, context) => {\n    const { item, editMode, tRemoveListItemContent } = props;\n    const contentItems = getContentItems(item);\n\n    const getLink = contentItem => {\n        const deleteButton = (\n            <button\n                className={classes.deletebutton}\n                onClick={() => tRemoveListItemContent(item, contentItem)}\n            >\n                <DeleteIcon className={classes.deleteicon} />\n            </button>\n        );\n\n        return (\n            <>\n                <a\n                    className={classes.link}\n                    style={{ color: colors.grey900 }}\n                    href={getItemUrl(item.type, contentItem, context.d2)}\n                >\n                    {contentItem.name}\n                </a>\n                {editMode ? deleteButton : null}\n            </>\n        );\n    };\n\n    return (\n        <>\n            <ItemHeader title={getItemTitle(item)} itemId={item.id} />\n            <Line />\n            <div className=\"dashboard-item-content\">\n                <ul className={classes.list}>\n                    {contentItems.map(contentItem => (\n                        <li className={classes.item} key={contentItem.id}>\n                            <DescriptionIcon className={classes.itemicon} />\n                            {getLink(contentItem)}\n                        </li>\n                    ))}\n                </ul>\n            </div>\n        </>\n    );\n};\n\nListItem.propTypes = {\n    editMode: PropTypes.bool,\n    item: PropTypes.object,\n    tRemoveListItemContent: PropTypes.func,\n};\n\nListItem.contextTypes = {\n    d2: PropTypes.object,\n};\n\nexport default connect(\n    null,\n    {\n        tRemoveListItemContent,\n    }\n)(ListItem);\n","import {\n    acUpdateDashboardItem,\n    acRemoveDashboardItem,\n} from '../../../actions/editDashboard';\nimport { itemTypeMap } from '../../../modules/itemTypes';\n\nexport const tRemoveListItemContent = (dashboardItem, content) => dispatch => {\n    const listItemType = itemTypeMap[dashboardItem.type].propName;\n\n    const newContent = dashboardItem[listItemType].filter(\n        item => item.id !== content.id\n    );\n\n    if (newContent.length) {\n        dashboardItem[listItemType] = newContent;\n        dispatch(acUpdateDashboardItem(dashboardItem));\n    } else {\n        dispatch(acRemoveDashboardItem(dashboardItem));\n    }\n};\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport i18n from '@dhis2/d2-i18n';\nimport PropTypes from 'prop-types';\n\nimport Input from '@material-ui/core/Input';\nimport {\n    Parser as RichTextParser,\n    Editor as RichTextEditor,\n} from '@dhis2/d2-ui-rich-text';\n\nimport { acUpdateDashboardItem } from '../../../actions/editDashboard';\nimport { sGetEditDashboardItems } from '../../../reducers/editDashboard';\nimport { sGetDashboardItems } from '../../../reducers/dashboards';\nimport ItemHeader from '../ItemHeader';\nimport Line from '../../../widgets/Line';\n\nconst style = {\n    textDiv: {\n        padding: '10px',\n        whiteSpace: 'pre-line',\n        lineHeight: '20px',\n    },\n    textField: {\n        fontSize: '14px',\n        fontStretch: 'normal',\n        width: '90%',\n        margin: '0 auto',\n        display: 'block',\n        lineHeight: '24px',\n    },\n    container: {\n        marginBottom: '20px',\n        marginTop: '20px',\n    },\n};\n\nconst TextItem = props => {\n    const { item, editMode, text, acUpdateDashboardItem } = props;\n\n    const onChangeText = event => {\n        const updatedItem = {\n            ...item,\n            text: event.target.value,\n        };\n\n        acUpdateDashboardItem(updatedItem);\n    };\n\n    const viewItem = () => {\n        const textDivStyle = Object.assign({}, style.textField, style.textDiv);\n        return (\n            <div className=\"dashboard-item-content\" style={style.container}>\n                <RichTextParser style={textDivStyle}>{text}</RichTextParser>\n            </div>\n        );\n    };\n\n    const editItem = () => {\n        return (\n            <>\n                <ItemHeader title={i18n.t('Text item')} itemId={item.id} />\n                <Line />\n                <div className=\"dashboard-item-content\">\n                    <RichTextEditor onEdit={onChangeText}>\n                        <Input\n                            value={text}\n                            multiline\n                            fullWidth\n                            style={style.textField}\n                            placeholder={i18n.t('Add text here')}\n                            onChange={onChangeText}\n                        />\n                    </RichTextEditor>\n                </div>\n            </>\n        );\n    };\n\n    return <>{editMode ? editItem() : viewItem()}</>;\n};\n\nconst mapStateToProps = (state, ownProps) => {\n    const items = ownProps.editMode\n        ? sGetEditDashboardItems(state)\n        : sGetDashboardItems(state);\n\n    const item = items.find(item => item.id === ownProps.item.id);\n\n    return {\n        text: item ? item.text : '',\n    };\n};\n\nTextItem.propTypes = {\n    acUpdateDashboardItem: PropTypes.func,\n    editMode: PropTypes.bool,\n    item: PropTypes.object,\n    text: PropTypes.string,\n};\n\nexport default connect(\n    mapStateToProps,\n    {\n        acUpdateDashboardItem,\n    }\n)(TextItem);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport NotInterestedIcon from '@material-ui/icons/NotInterested';\n\nimport { FILTER_ORG_UNIT } from '../../../actions/itemFilters';\nimport { sGetItemFiltersRoot } from '../../../reducers/itemFilters';\nimport ItemHeader from '../ItemHeader';\nimport Line from '../../../widgets/Line';\n\nconst getIframeSrc = (appDetails, item, itemFilters) => {\n    let iframeSrc = `${appDetails.launchUrl}?dashboardItemId=${item.id}`;\n\n    if (\n        itemFilters &&\n        itemFilters[FILTER_ORG_UNIT] &&\n        itemFilters[FILTER_ORG_UNIT].length\n    ) {\n        const ouIds = itemFilters[FILTER_ORG_UNIT].map(\n            ouPath => ouPath.split('/').slice(-1)[0]\n        );\n\n        iframeSrc += `&userOrgUnit=${ouIds.join(',')}`;\n    }\n\n    return iframeSrc;\n};\n\nconst AppItem = ({ item, itemFilters }, context) => {\n    let appDetails;\n\n    const appKey = item.appKey;\n\n    if (appKey) {\n        appDetails = context.d2.system.installedApps.find(\n            app => app.key === appKey\n        );\n    }\n\n    return appDetails && appDetails.name && appDetails.launchUrl ? (\n        <>\n            <ItemHeader title={appDetails.name} itemId={item.id} />\n            <Line />\n            <iframe\n                title={appDetails.name}\n                src={getIframeSrc(appDetails, item, itemFilters)}\n                className=\"dashboard-item-content\"\n                style={{ border: 'none' }}\n            />\n        </>\n    ) : (\n        <>\n            <ItemHeader title={`${appKey} app not found`} />\n            <Line />\n            <div\n                className=\"dashboard-item-content\"\n                style={{\n                    display: 'flex',\n                    justifyContent: 'center',\n                    alignItems: 'center',\n                    height: '90%',\n                }}\n            >\n                <NotInterestedIcon\n                    color=\"disabled\"\n                    disabled\n                    style={{ width: 100, height: 100, align: 'center' }}\n                />\n            </div>\n        </>\n    );\n};\n\nAppItem.propTypes = {\n    item: PropTypes.object,\n    itemFilters: PropTypes.object,\n};\n\nAppItem.contextTypes = {\n    d2: PropTypes.object,\n};\n\nconst mapStateToProps = state => ({\n    itemFilters: sGetItemFiltersRoot(state),\n});\n\nexport default connect(mapStateToProps)(AppItem);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport i18n from '@dhis2/d2-i18n';\n\nimport { colors } from '@dhis2/ui-core';\nimport ItemHeader from '../ItemHeader';\n\nconst style = {\n    margin: '21px 28px',\n    fontSize: '14px',\n    lineHeight: '18px',\n    color: colors.grey600,\n};\n\nconst SpacerItem = props => {\n    return (\n        <>\n            <ItemHeader title={i18n.t('Spacer')} itemId={props.item.id} />\n            <p style={style}>\n                {i18n.t(\n                    'Use a spacer to create empty vertical space between other dashboard items.'\n                )}\n            </p>\n        </>\n    );\n};\n\nSpacerItem.propTypes = {\n    item: PropTypes.object,\n};\n\nexport default SpacerItem;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport VisualizationItem from './VisualizationItem/Item';\nimport MessagesItem from './MessagesItem/Item';\nimport NotSupportedItem from './NotSupportedItem/Item';\nimport ListItem from './ListItem/Item';\nimport TextItem from './TextItem/Item';\nimport AppItem from './AppItem/Item';\nimport SpacerItem from './SpacerItem/Item';\nimport {\n    APP,\n    VISUALIZATION,\n    REPORT_TABLE,\n    CHART,\n    MAP,\n    EVENT_CHART,\n    EVENT_REPORT,\n    MESSAGES,\n    REPORTS,\n    RESOURCES,\n    USERS,\n    TEXT,\n    SPACER,\n} from '../../modules/itemTypes';\nimport { DEFAULT_STATE_ITEM_FILTERS } from '../../reducers/itemFilters';\n\nconst getGridItem = type => {\n    switch (type) {\n        case VISUALIZATION:\n        case REPORT_TABLE:\n        case CHART:\n        case MAP:\n        case EVENT_CHART:\n        case EVENT_REPORT:\n            return VisualizationItem;\n        case MESSAGES:\n            return MessagesItem;\n        case REPORTS:\n        case RESOURCES:\n        case USERS:\n            return ListItem;\n        case TEXT:\n            return TextItem;\n        case SPACER:\n            return SpacerItem;\n        case APP:\n            return AppItem;\n        default:\n            return NotSupportedItem;\n    }\n};\n\nexport const Item = props => {\n    const GridItem = getGridItem(props.item.type);\n\n    return (\n        <GridItem\n            item={props.item}\n            editMode={props.editMode}\n            itemFilters={\n                props.editMode ? DEFAULT_STATE_ITEM_FILTERS : props.itemFilters\n            }\n            onToggleItemExpanded={props.onToggleItemExpanded}\n        />\n    );\n};\n\nItem.propTypes = {\n    editMode: PropTypes.bool,\n    item: PropTypes.object,\n    itemFilters: PropTypes.object,\n    onToggleItemExpanded: PropTypes.func,\n};\n","import React from 'react';\nimport { colors } from '@dhis2/ui-core';\nimport PropTypes from 'prop-types';\n\nexport const NoContentMessage = ({ text }) => (\n    <div\n        style={{\n            padding: '50px 10px',\n            textAlign: 'center',\n            fontSize: '15px',\n            fontWeight: 500,\n            color: colors.grey600,\n        }}\n    >\n        {text}\n    </div>\n);\n\nNoContentMessage.propTypes = {\n    text: PropTypes.string,\n};\n\nexport default NoContentMessage;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport debounce from 'lodash/debounce';\nimport pick from 'lodash/pick';\n\nconst defaultDebounceMs = 100;\nconst defaultBufferFactor = 0.25;\n\nclass ProgressiveLoadingContainer extends Component {\n    static propTypes = {\n        children: PropTypes.node.isRequired,\n        bufferFactor: PropTypes.number,\n        className: PropTypes.string,\n        debounceMs: PropTypes.number,\n        style: PropTypes.object,\n    };\n    static defaultProps = {\n        debounceMs: defaultDebounceMs,\n        bufferFactor: defaultBufferFactor,\n    };\n\n    state = {\n        shouldLoad: false,\n    };\n    containerRef = null;\n    shouldLoadHandler = null;\n\n    checkShouldLoad() {\n        const bufferPx = this.props.bufferFactor * window.innerHeight;\n\n        if (!this.containerRef) {\n            return;\n        }\n\n        const rect = this.containerRef.getBoundingClientRect();\n        if (\n            rect.bottom > -bufferPx &&\n            rect.top < window.innerHeight + bufferPx\n        ) {\n            this.setState({\n                shouldLoad: true,\n            });\n\n            this.removeHandler();\n        }\n    }\n\n    registerHandler() {\n        this.shouldLoadHandler = debounce(\n            () => this.checkShouldLoad(),\n            this.props.debounceMs\n        );\n\n        window.addEventListener('scroll', this.shouldLoadHandler);\n    }\n    removeHandler() {\n        window.removeEventListener('scroll', this.shouldLoadHandler);\n    }\n\n    componentDidMount() {\n        this.registerHandler();\n        this.checkShouldLoad();\n    }\n\n    componentWillUnmount() {\n        this.removeHandler();\n    }\n\n    render() {\n        const { children, className, style, ...props } = this.props;\n        const { shouldLoad } = this.state;\n\n        const eventProps = pick(props, [\n            'onMouseDown',\n            'onTouchStart',\n            'onMouseUp',\n            'onTouchEnd',\n        ]);\n\n        return (\n            <div\n                ref={ref => (this.containerRef = ref)}\n                style={style}\n                className={className}\n                {...eventProps}\n            >\n                {shouldLoad && children}\n            </div>\n        );\n    }\n}\n\nexport default ProgressiveLoadingContainer;\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport i18n from '@dhis2/d2-i18n';\nimport ReactGridLayout from 'react-grid-layout';\nimport { CircularLoader, ScreenCover } from '@dhis2/ui-core';\n\nimport {\n    acUpdateDashboardLayout,\n    acRemoveDashboardItem,\n} from '../../actions/editDashboard';\nimport { Item } from '../Item/Item';\nimport { resize as pluginResize } from '../Item/VisualizationItem/plugin';\nimport { isVisualizationType } from '../../modules/itemTypes';\nimport {\n    GRID_ROW_HEIGHT,\n    GRID_COMPACT_TYPE,\n    MARGIN,\n    getGridColumns,\n    hasShape,\n    onItemResize,\n} from './gridUtil';\nimport { orArray } from '../../modules/util';\n\nimport NoContentMessage from '../../widgets/NoContentMessage';\n\nimport 'react-grid-layout/css/styles.css';\nimport 'react-resizable/css/styles.css';\n\nimport './ItemGrid.css';\nimport { sGetSelectedId, sGetSelectedIsLoading } from '../../reducers/selected';\nimport {\n    sGetEditDashboardRoot,\n    sGetEditDashboardItems,\n} from '../../reducers/editDashboard';\nimport {\n    sGetDashboardById,\n    sGetDashboardItems,\n} from '../../reducers/dashboards';\nimport ProgressiveLoadingContainer from '../Item/ProgressiveLoadingContainer';\n\n// Component\n\nconst EXPANDED_HEIGHT = 17;\n// this is set in the .dashboard-item-content css\nexport const ITEM_CONTENT_PADDING_BOTTOM = 4;\n\nexport class ItemGrid extends Component {\n    state = {\n        expandedItems: {},\n    };\n\n    onToggleItemExpanded = clickedId => {\n        const isExpanded =\n            typeof this.state.expandedItems[clickedId] === 'boolean'\n                ? this.state.expandedItems[clickedId]\n                : false;\n\n        const expandedItems = { ...this.state.expandedItems };\n        expandedItems[clickedId] = !isExpanded;\n        this.setState({ expandedItems });\n    };\n\n    onRemoveItem = clickedId => {\n        this.props.acRemoveDashboardItem(clickedId);\n    };\n\n    componentWillReceiveProps(nextProps) {\n        if (nextProps.edit) {\n            this.setState({ expandedItems: {} });\n        }\n    }\n\n    onLayoutChange = newLayout => {\n        if (this.props.edit) {\n            this.props.acUpdateDashboardLayout(newLayout);\n        }\n    };\n\n    onResizeStop = (layout, oldItem, newItem) => {\n        onItemResize(newItem.i);\n\n        const dashboardItem = this.props.dashboardItems.find(\n            item => item.id === newItem.i\n        );\n\n        // call resize on the item component if it's a plugin type\n        if (dashboardItem && isVisualizationType(dashboardItem)) {\n            pluginResize(dashboardItem);\n        }\n    };\n\n    onRemoveItemWrapper = id => () => this.onRemoveItem(id);\n\n    adjustHeightForExpanded = dashboardItem => {\n        const expandedItem = this.state.expandedItems[dashboardItem.id];\n\n        if (expandedItem && expandedItem === true) {\n            return Object.assign({}, dashboardItem, {\n                h: dashboardItem.h + EXPANDED_HEIGHT,\n            });\n        }\n\n        return dashboardItem;\n    };\n\n    getItemComponent = item => {\n        const itemClassNames = [\n            item.type,\n            this.props.edit ? 'edit' : 'view',\n        ].join(' ');\n\n        return (\n            <ProgressiveLoadingContainer\n                key={item.i}\n                className={itemClassNames}\n            >\n                <Item\n                    item={item}\n                    editMode={this.props.edit}\n                    onToggleItemExpanded={this.onToggleItemExpanded}\n                />\n            </ProgressiveLoadingContainer>\n        );\n    };\n\n    getItemComponents = items => items.map(item => this.getItemComponent(item));\n\n    render() {\n        const { edit, isLoading, dashboardItems } = this.props;\n\n        if (!isLoading && !dashboardItems.length) {\n            return (\n                <NoContentMessage\n                    text={i18n.t('There are no items on this dashboard')}\n                />\n            );\n        }\n\n        const items = edit\n            ? dashboardItems\n            : dashboardItems.map(this.adjustHeightForExpanded);\n\n        return (\n            <div className=\"grid-wrapper\">\n                {isLoading ? (\n                    <ScreenCover>\n                        <CircularLoader />\n                    </ScreenCover>\n                ) : null}\n                <ReactGridLayout\n                    onLayoutChange={this.onLayoutChange}\n                    onResizeStop={this.onResizeStop}\n                    className=\"layout\"\n                    layout={items}\n                    margin={MARGIN}\n                    cols={getGridColumns()}\n                    rowHeight={GRID_ROW_HEIGHT}\n                    width={window.innerWidth}\n                    compactType={GRID_COMPACT_TYPE}\n                    isDraggable={edit}\n                    isResizable={edit}\n                    draggableCancel=\"input,textarea\"\n                >\n                    {this.getItemComponents(items)}\n                </ReactGridLayout>\n            </div>\n        );\n    }\n}\n\nItemGrid.propTypes = {\n    acRemoveDashboardItem: PropTypes.func,\n    acUpdateDashboardLayout: PropTypes.func,\n    dashboardItems: PropTypes.array,\n    edit: PropTypes.bool,\n    isLoading: PropTypes.bool,\n};\n\nItemGrid.defaultProps = {\n    dashboardItems: [],\n};\n\n// Container\n\nconst mapStateToProps = (state, ownProps) => {\n    const selectedDashboard = ownProps.edit\n        ? sGetEditDashboardRoot(state)\n        : sGetDashboardById(state, sGetSelectedId(state));\n\n    const dashboardItems = ownProps.edit\n        ? sGetEditDashboardItems(state)\n        : sGetDashboardItems(state);\n\n    return {\n        isLoading: sGetSelectedIsLoading(state) || !selectedDashboard,\n        dashboardItems,\n    };\n};\n\nconst mapDispatchToProps = {\n    acUpdateDashboardLayout,\n    acRemoveDashboardItem,\n};\n\nconst mergeProps = (stateProps, dispatchProps, ownProps) => {\n    const validItems = orArray(stateProps.dashboardItems).filter(hasShape);\n\n    return {\n        ...dispatchProps,\n        edit: ownProps.edit,\n        isLoading: stateProps.isLoading,\n        dashboardItems: validItems,\n        onItemResize,\n    };\n};\n\nexport default connect(\n    mapStateToProps,\n    mapDispatchToProps,\n    mergeProps\n)(ItemGrid);\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nimport i18n from '@dhis2/d2-i18n';\n\nimport { colors } from '@dhis2/ui-core';\n\nconst styles = {\n    badgeContainer: {\n        margin: '2px',\n        padding: '0 16px',\n        borderRadius: '4px',\n        color: colors.white,\n        backgroundColor: '#212934',\n        height: 36,\n        display: 'flex',\n        alignItems: 'center',\n    },\n    badge: {\n        fontSize: '13px',\n        cursor: 'pointer',\n        whiteSpace: 'nowrap',\n    },\n    badgeRemove: {\n        fontSize: '12px',\n        textDecoration: 'underline',\n        marginLeft: '24px',\n        cursor: 'pointer',\n    },\n};\n\nclass FilterBadge extends Component {\n    onClick = id => () => this.props.onClick(id);\n    onRemove = id => () => this.props.onRemove(id);\n\n    render() {\n        const { data } = this.props;\n\n        return (\n            <div style={styles.badgeContainer}>\n                <span style={styles.badge} onClick={this.onClick(data.id)}>\n                    {`${data.name}: ${\n                        data.values.length > 1\n                            ? i18n.t('{{count}} selected', {\n                                  count: data.values.length,\n                              })\n                            : data.values[0].name\n                    }`}\n                </span>\n                <span\n                    style={styles.badgeRemove}\n                    onClick={this.onRemove(data.id)}\n                >\n                    {i18n.t('Remove')}\n                </span>\n            </div>\n        );\n    }\n}\n\nFilterBadge.propTypes = {\n    data: PropTypes.object.isRequired,\n    onClick: PropTypes.func.isRequired,\n    onRemove: PropTypes.func.isRequired,\n};\n\nFilterBadge.defaultProps = {\n    onClick: Function.prototype,\n    onRemove: Function.prototype,\n};\n\nexport default FilterBadge;\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { createSelector } from 'reselect';\n\nimport { sGetDimensions } from '../../reducers/dimensions';\nimport { sGetItemFiltersRoot } from '../../reducers/itemFilters';\nimport { sGetControlBarUserRows } from '../../reducers/controlBar';\nimport { getTopOffset } from '../ControlBar/controlBarDimensions';\nimport { acRemoveItemFilter } from '../../actions/itemFilters';\nimport { acRemoveEditItemFilter } from '../../actions/editItemFilters';\nimport { acSetActiveModalDimension } from '../../actions/activeModalDimension';\n\nimport FilterBadge from './FilterBadge';\n\nimport classes from './styles/FilterBar.module.css';\n\nexport class FilterBar extends Component {\n    onBadgeRemove = id => {\n        this.props.removeItemFilter(id);\n        this.props.removeEditItemFilter(id);\n    };\n\n    onBadgeClick = id => {\n        this.props.setActiveModalDimension({\n            id,\n            name: this.props.filters.find(item => item.id === id).name,\n        });\n    };\n\n    render() {\n        const { filters, userRows } = this.props;\n        const top = getTopOffset(userRows) + 10;\n\n        return filters.length ? (\n            <div className={classes.bar} style={{ top }}>\n                {filters.map(filter => (\n                    <FilterBadge\n                        key={filter.id}\n                        data={filter}\n                        onClick={this.onBadgeClick}\n                        onRemove={this.onBadgeRemove}\n                    />\n                ))}\n            </div>\n        ) : null;\n    }\n}\n\nFilterBar.propTypes = {\n    filters: PropTypes.array.isRequired,\n    removeEditItemFilter: PropTypes.func.isRequired,\n    removeItemFilter: PropTypes.func.isRequired,\n    setActiveModalDimension: PropTypes.func,\n    userRows: PropTypes.number,\n};\n\nFilterBar.defaultProps = {\n    filters: [],\n    removeItemFIlter: Function.prototype,\n    removeEditItemFilter: Function.prototype,\n};\n\n// simplify the filters structure to:\n// [{ id: 'pe', name: 'Period', values: [{ id: 2019: name: '2019' }, {id: 'LAST_MONTH', name: 'Last month' }]}, ...]\nconst filtersSelector = createSelector(\n    [sGetItemFiltersRoot, sGetDimensions],\n    (filters, dimensions) =>\n        Object.keys(filters).reduce((arr, id) => {\n            arr.push({\n                id: id,\n                name: dimensions.find(dimension => dimension.id === id).name,\n                values: filters[id].map(value => ({\n                    id: value.id,\n                    name: value.displayName || value.name,\n                })),\n            });\n\n            return arr;\n        }, [])\n);\n\nconst mapStateToProps = state => ({\n    filters: filtersSelector(state),\n    userRows: sGetControlBarUserRows(state),\n});\n\nexport default connect(\n    mapStateToProps,\n    {\n        setActiveModalDimension: acSetActiveModalDimension,\n        removeItemFilter: acRemoveItemFilter,\n        removeEditItemFilter: acRemoveEditItemFilter,\n    }\n)(FilterBar);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport TitleBar from '../TitleBar/TitleBar';\nimport ItemGrid from '../ItemGrid/ItemGrid';\nimport FilterBar from '../FilterBar/FilterBar';\n\nexport const DashboardContent = props => (\n    <>\n        <TitleBar edit={props.editMode} />\n        <FilterBar />\n        <ItemGrid edit={props.editMode} />\n    </>\n);\n\nDashboardContent.propTypes = {\n    editMode: PropTypes.bool,\n};\n\nexport default DashboardContent;\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport isEmpty from 'lodash/isEmpty';\nimport i18n from '@dhis2/d2-i18n';\nimport PropTypes from 'prop-types';\n\nimport {\n    sGetAllDashboards,\n    sDashboardsIsFetching,\n} from '../../reducers/dashboards';\nimport { sGetSelectedId } from '../../reducers/selected';\nimport DashboardsBar from '../ControlBar/DashboardsBar';\nimport DashboardVerticalOffset from './DashboardVerticalOffset';\nimport DashboardContent from './DashboardContent';\nimport NoContentMessage from '../../widgets/NoContentMessage';\n\nexport const Content = ({ hasDashboardContent, dashboardsIsEmpty }) => {\n    const msg = dashboardsIsEmpty\n        ? i18n.t(\n              'No dashboards found. Use the + button to create a new dashboard.'\n          )\n        : i18n.t('Requested dashboard not found');\n\n    return hasDashboardContent ? (\n        <DashboardContent editMode={false} />\n    ) : (\n        <NoContentMessage text={msg} />\n    );\n};\n\nContent.propTypes = {\n    dashboardsIsEmpty: PropTypes.bool,\n    hasDashboardContent: PropTypes.bool,\n};\n\nexport const ViewDashboard = ({ id, dashboardsIsEmpty, dashboardsLoaded }) => {\n    const hasDashboardContent = id && !dashboardsIsEmpty;\n    const contentNotReady = !dashboardsLoaded || id === null;\n\n    return (\n        <>\n            <DashboardsBar />\n            <DashboardVerticalOffset />\n            <div className=\"dashboard-wrapper\">\n                {contentNotReady ? null : (\n                    <Content\n                        hasDashboardContent={hasDashboardContent}\n                        dashboardsIsEmpty={dashboardsIsEmpty}\n                    />\n                )}\n            </div>\n        </>\n    );\n};\n\nViewDashboard.propTypes = {\n    dashboardsIsEmpty: PropTypes.bool,\n    dashboardsLoaded: PropTypes.bool,\n    id: PropTypes.string,\n};\n\nconst mapStateToProps = state => {\n    const dashboards = sGetAllDashboards(state);\n\n    return {\n        id: sGetSelectedId(state),\n        dashboardsIsEmpty: isEmpty(dashboards),\n        dashboardsLoaded: !sDashboardsIsFetching(state),\n    };\n};\n\nexport default connect(mapStateToProps)(ViewDashboard);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport i18n from '@dhis2/d2-i18n';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport { Button } from '@dhis2/ui-core';\n\nexport const ConfirmDeleteDialog = ({\n    dashboardName,\n    onDeleteConfirmed,\n    onContinueEditing,\n    open,\n}) => {\n    const actions = [\n        <Button key=\"cancel\" secondary onClick={onContinueEditing}>\n            {i18n.t('Cancel')}\n        </Button>,\n        <Button key=\"delete\" destructive onClick={onDeleteConfirmed}>\n            {i18n.t('Delete')}\n        </Button>,\n    ];\n\n    return (\n        <Dialog open={open} onClose={onContinueEditing}>\n            <DialogTitle style={{ fontSize: '1.25rem', fontWeight: '450' }}>\n                {i18n.t('Delete dashboard')}\n            </DialogTitle>\n            <DialogContent>\n                <DialogContentText style={{ fontSize: '0.875rem' }}>\n                    {i18n.t(\n                        'Deleting dashboard \"{{ dashboardName }}\" will remove it for all users. This action cannot be undone. Are you sure you want to permanently delete this dashboard?',\n                        { dashboardName }\n                    )}\n                </DialogContentText>\n            </DialogContent>\n            <DialogActions>{actions}</DialogActions>\n        </Dialog>\n    );\n};\n\nConfirmDeleteDialog.propTypes = {\n    dashboardName: PropTypes.string,\n    open: PropTypes.bool,\n    onContinueEditing: PropTypes.func,\n    onDeleteConfirmed: PropTypes.func,\n};\n\nexport default ConfirmDeleteDialog;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { Redirect } from 'react-router-dom';\nimport i18n from '@dhis2/d2-i18n';\nimport ControlBar from './ControlBar';\nimport TranslationDialog from '@dhis2/d2-ui-translation-dialog';\nimport { Button } from '@dhis2/ui-core';\n\nimport ConfirmDeleteDialog from './ConfirmDeleteDialog';\nimport {\n    tSaveDashboard,\n    acClearEditDashboard,\n} from '../../actions/editDashboard';\nimport {\n    tDeleteDashboard,\n    acSetDashboardDisplayName,\n} from '../../actions/dashboards';\nimport {\n    sGetEditDashboardRoot,\n    sGetIsNewDashboard,\n} from '../../reducers/editDashboard';\nimport {\n    CONTROL_BAR_ROW_HEIGHT,\n    MIN_ROW_COUNT,\n    getControlBarHeight,\n} from './controlBarDimensions';\nimport { apiFetchDashboard } from '../../api/dashboards';\n\nimport classes from './styles/DashboardsBar.module.css';\n\nconst buttonBarStyle = {\n    height: CONTROL_BAR_ROW_HEIGHT,\n    paddingTop: '15px',\n    marginLeft: '15px',\n    marginRight: '15px',\n};\n\nexport class EditBar extends Component {\n    state = {\n        translationDialogIsOpen: false,\n        dashboardModel: undefined,\n        confirmDeleteDialogOpen: false,\n        redirectUrl: undefined,\n    };\n\n    onConfirmDelete = () => {\n        this.setState({ confirmDeleteDialogOpen: true });\n    };\n\n    onSave = () => {\n        this.props.onSave().then(newId => {\n            this.setState({ redirectUrl: `/${newId}` });\n        });\n    };\n\n    onDiscard = () => {\n        this.props.onDiscardChanges();\n        const redirectUrl = this.props.dashboardId\n            ? `/${this.props.dashboardId}`\n            : '/';\n        this.setState({ redirectUrl });\n    };\n\n    onContinueEditing = () => {\n        this.setState({ confirmDeleteDialogOpen: false });\n    };\n\n    onDeleteConfirmed = () => {\n        this.setState({ confirmDeleteDialogOpen: false });\n        this.props.onDelete(this.props.dashboardId).then(() => {\n            this.setState({ redirectUrl: '/' });\n        });\n    };\n\n    onTranslationsSaved = async translations => {\n        if (translations && translations.length) {\n            const dbLocale = await this.context.d2.currentUser.userSettings.get(\n                'keyDbLocale'\n            );\n\n            const translation = translations.find(\n                t => t.locale === dbLocale && t.property === 'NAME'\n            );\n\n            if (translation && translation.value) {\n                this.props.onTranslate(\n                    this.props.dashboardId,\n                    translation.value\n                );\n            }\n        }\n    };\n\n    fetchDashboardModel = () => {\n        if (this.props.dashboardId && !this.state.dashboardModel) {\n            apiFetchDashboard(this.props.dashboardId).then(dashboardModel =>\n                this.setState({ dashboardModel })\n            );\n        }\n    };\n\n    componentDidMount() {\n        this.fetchDashboardModel();\n    }\n\n    componentDidUpdate() {\n        this.fetchDashboardModel();\n    }\n\n    toggleTranslationDialog = () => {\n        this.setState({\n            translationDialogIsOpen: !this.state.translationDialogIsOpen,\n        });\n    };\n\n    confirmDeleteDialog = () =>\n        this.props.deleteAccess && this.props.dashboardId ? (\n            <ConfirmDeleteDialog\n                dashboardName={this.props.dashboardName}\n                onDeleteConfirmed={this.onDeleteConfirmed}\n                onContinueEditing={this.onContinueEditing}\n                open={this.state.confirmDeleteDialogOpen}\n            />\n        ) : null;\n\n    translationDialog = () =>\n        this.state.dashboardModel && this.state.dashboardModel.id ? (\n            <TranslationDialog\n                className=\"translation-dialog\"\n                d2={this.context.d2}\n                open={this.state.translationDialogIsOpen}\n                onRequestClose={this.toggleTranslationDialog}\n                objectToTranslate={this.state.dashboardModel}\n                fieldsToTranslate={['name', 'description']}\n                // TODO handle messages in snackbar\n                onTranslationSaved={this.onTranslationsSaved}\n                onTranslationError={err =>\n                    console.log('translation update error', err)\n                }\n            />\n        ) : null;\n\n    render() {\n        if (this.state.redirectUrl) {\n            return <Redirect to={this.state.redirectUrl} />;\n        }\n\n        const { dashboardId, deleteAccess, updateAccess } = this.props;\n        const controlBarHeight = getControlBarHeight(MIN_ROW_COUNT);\n\n        const discardBtnText = updateAccess\n            ? i18n.t('Exit without saving')\n            : i18n.t('Go to dashboards');\n\n        return (\n            <>\n                <ControlBar height={controlBarHeight} editMode={true}>\n                    <div style={buttonBarStyle}>\n                        {updateAccess ? (\n                            <div className={classes.leftControls}>\n                                <span style={{ marginRight: '15px' }}>\n                                    <Button primary onClick={this.onSave}>\n                                        {i18n.t('Save changes')}\n                                    </Button>\n                                </span>\n\n                                {dashboardId ? (\n                                    <span style={{ marginRight: '15px' }}>\n                                        <Button\n                                            onClick={\n                                                this.toggleTranslationDialog\n                                            }\n                                        >\n                                            {i18n.t('Translate')}\n                                        </Button>\n                                    </span>\n                                ) : null}\n                                {dashboardId && deleteAccess ? (\n                                    <Button onClick={this.onConfirmDelete}>\n                                        {i18n.t('Delete')}\n                                    </Button>\n                                ) : null}\n                            </div>\n                        ) : null}\n\n                        <div className={classes.rightControls}>\n                            <Button secondary onClick={this.onDiscard}>\n                                {discardBtnText}\n                            </Button>\n                        </div>\n                    </div>\n                </ControlBar>\n                {this.translationDialog()}\n                {this.confirmDeleteDialog()}\n            </>\n        );\n    }\n}\n\nEditBar.propTypes = {\n    dashboardId: PropTypes.string,\n    dashboardName: PropTypes.string,\n    deleteAccess: PropTypes.bool,\n    updateAccess: PropTypes.bool,\n    onDelete: PropTypes.func,\n    onDiscardChanges: PropTypes.func,\n    onSave: PropTypes.func,\n    onTranslate: PropTypes.func,\n};\n\nEditBar.contextTypes = {\n    d2: PropTypes.object,\n};\n\nconst mapStateToProps = state => {\n    const dashboard = sGetEditDashboardRoot(state);\n\n    let deleteAccess;\n    let updateAccess;\n    if (sGetIsNewDashboard(state)) {\n        deleteAccess = true;\n        updateAccess = true;\n    } else {\n        updateAccess = dashboard.access ? dashboard.access.update : false;\n        deleteAccess = dashboard.access ? dashboard.access.delete : false;\n    }\n\n    return {\n        dashboardId: dashboard.id,\n        dashboardName: dashboard.name,\n        deleteAccess,\n        updateAccess,\n    };\n};\n\nconst mapDispatchToProps = dispatch => ({\n    onSave: () => dispatch(tSaveDashboard()).then(id => id),\n    onDelete: id => dispatch(tDeleteDashboard(id)),\n    onDiscardChanges: () => dispatch(acClearEditDashboard()),\n    onTranslate: (id, value) => dispatch(acSetDashboardDisplayName(id, value)),\n});\n\nexport default connect(\n    mapStateToProps,\n    mapDispatchToProps\n)(EditBar);\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport i18n from '@dhis2/d2-i18n';\nimport PropTypes from 'prop-types';\n\nimport { acSetEditDashboard } from '../../actions/editDashboard';\nimport { sGetSelectedId } from '../../reducers/selected';\nimport {\n    sGetDashboardById,\n    sGetDashboardItems,\n    sDashboardsIsFetching,\n} from '../../reducers/dashboards';\nimport DashboardVerticalOffset from './DashboardVerticalOffset';\nimport DashboardContent from './DashboardContent';\nimport EditBar from '../ControlBar/EditBar';\nimport NoContentMessage from '../../widgets/NoContentMessage';\n\nexport const Content = ({ updateAccess }) => {\n    return updateAccess ? (\n        <DashboardContent editMode={true} />\n    ) : (\n        <NoContentMessage text={i18n.t('No access')} />\n    );\n};\n\nContent.propTypes = {\n    updateAccess: PropTypes.bool,\n};\nexport class EditDashboard extends Component {\n    state = {\n        initialized: false,\n    };\n\n    initEditDashboard = () => {\n        if (this.props.dashboard) {\n            this.setState({ initialized: true });\n            this.props.setEditDashboard(this.props.dashboard, this.props.items);\n        }\n    };\n\n    componentDidMount() {\n        this.initEditDashboard();\n    }\n\n    componentDidUpdate() {\n        if (!this.state.initialized) {\n            this.initEditDashboard();\n        }\n    }\n\n    getDashboardContent = () => {\n        const contentNotReady =\n            !this.props.dashboardsLoaded || this.props.id === null;\n\n        return (\n            <div className=\"dashboard-wrapper\">\n                {contentNotReady ? null : (\n                    <Content updateAccess={this.props.updateAccess} />\n                )}\n            </div>\n        );\n    };\n\n    render() {\n        return (\n            <>\n                <EditBar />\n                <DashboardVerticalOffset editMode={true} />\n                {this.getDashboardContent()}\n            </>\n        );\n    }\n}\n\nEditDashboard.propTypes = {\n    dashboard: PropTypes.object,\n    dashboardsLoaded: PropTypes.bool,\n    id: PropTypes.string,\n    items: PropTypes.array,\n    setEditDashboard: PropTypes.func,\n    updateAccess: PropTypes.bool,\n};\n\nconst mapStateToProps = state => {\n    const id = sGetSelectedId(state);\n    const dashboard = id ? sGetDashboardById(state, id) : null;\n\n    const updateAccess =\n        dashboard && dashboard.access ? dashboard.access.update : false;\n\n    return {\n        dashboard,\n        id,\n        updateAccess,\n        items: sGetDashboardItems(state),\n        dashboardsLoaded: !sDashboardsIsFetching(state),\n    };\n};\n\nexport default connect(\n    mapStateToProps,\n    {\n        setEditDashboard: acSetEditDashboard,\n    }\n)(EditDashboard);\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\n\nimport { acSetEditNewDashboard } from '../../actions/editDashboard';\nimport DashboardVerticalOffset from './DashboardVerticalOffset';\nimport EditBar from '../ControlBar/EditBar';\nimport DashboardContent from './DashboardContent';\n\nclass NewDashboard extends Component {\n    componentDidMount() {\n        this.props.setNewDashboard();\n    }\n\n    render() {\n        return (\n            <>\n                <EditBar />\n                <DashboardVerticalOffset editMode={true} />\n                <div className=\"dashboard-wrapper\">\n                    <DashboardContent editMode={true} />\n                </div>\n            </>\n        );\n    }\n}\n\nNewDashboard.propTypes = {\n    setNewDashboard: PropTypes.func,\n};\n\nexport default connect(\n    null,\n    {\n        setNewDashboard: acSetEditNewDashboard,\n    }\n)(NewDashboard);\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\n\nimport { tSelectDashboard } from '../../actions/dashboards';\nimport { sDashboardsIsFetching } from '../../reducers/dashboards';\nimport { EDIT, NEW } from './dashboardModes';\nimport ViewDashboard from './ViewDashboard';\nimport EditDashboard from './EditDashboard';\nimport NewDashboard from './NewDashboard';\n\nclass Dashboard extends Component {\n    setDashboard = () => {\n        if (this.props.dashboardsLoaded) {\n            const id = this.props.match.params.dashboardId || null;\n\n            this.props.selectDashboard(id);\n\n            this.scrollToTop();\n        }\n    };\n\n    scrollToTop = () => {\n        window.scrollTo(0, 0);\n    };\n\n    componentDidMount() {\n        this.setDashboard();\n    }\n\n    componentDidUpdate() {\n        this.setDashboard();\n    }\n\n    render() {\n        switch (this.props.mode) {\n            case EDIT:\n                return <EditDashboard />;\n            case NEW:\n                return <NewDashboard />;\n            default:\n                return <ViewDashboard />;\n        }\n    }\n}\n\nDashboard.propTypes = {\n    dashboardsLoaded: PropTypes.bool,\n    match: PropTypes.object,\n    mode: PropTypes.string,\n    selectDashboard: PropTypes.func,\n};\n\nconst mapStateToProps = state => {\n    return { dashboardsLoaded: !sDashboardsIsFetching(state) };\n};\n\nexport default connect(\n    mapStateToProps,\n    {\n        selectDashboard: tSelectDashboard,\n    }\n)(Dashboard);\n","export const EDIT = 'edit';\nexport const NEW = 'new';\nexport const VIEW = 'view';\n","import React, { Component } from 'react';\nimport { HashRouter as Router, Route, Switch } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport i18n from '@dhis2/d2-i18n';\nimport { HeaderBar } from '@dhis2/ui-widgets';\nimport { CssVariables } from '@dhis2/ui-core';\n\nimport { EDIT, VIEW, NEW } from './Dashboard/dashboardModes';\nimport { acReceivedUser } from '../actions/user';\nimport { tFetchDashboards } from '../actions/dashboards';\nimport { tSetControlBarRows } from '../actions/controlBar';\nimport { tSetDimensions } from '../actions/dimensions';\nimport Dashboard from './Dashboard/Dashboard';\nimport SnackbarMessage from './SnackbarMessage/SnackbarMessage';\n\nimport 'typeface-roboto';\nimport './App.css';\n\nexport class App extends Component {\n    componentDidMount() {\n        this.props.setCurrentUser(this.props.d2.currentUser);\n        this.props.fetchDashboards();\n        this.props.setControlBarRows();\n        this.props.setDimensions(this.props.d2);\n    }\n\n    getChildContext() {\n        return { baseUrl: this.props.baseUrl, i18n, d2: this.props.d2 };\n    }\n\n    render() {\n        return (\n            <>\n                <CssVariables colors spacers />\n                <div className=\"app-wrapper\">\n                    <div className=\"dashboard-header-bar\">\n                        <HeaderBar appName={i18n.t('Dashboard')} />\n                    </div>\n                    <Router>\n                        <Switch>\n                            <Route\n                                exact\n                                path=\"/\"\n                                render={props => (\n                                    <Dashboard {...props} mode={VIEW} />\n                                )}\n                            />\n                            <Route\n                                exact\n                                path=\"/new\"\n                                render={props => (\n                                    <Dashboard {...props} mode={NEW} />\n                                )}\n                            />\n                            <Route\n                                exact\n                                path=\"/:dashboardId\"\n                                render={props => (\n                                    <Dashboard {...props} mode={VIEW} />\n                                )}\n                            />\n                            <Route\n                                exact\n                                path=\"/:dashboardId/edit\"\n                                render={props => (\n                                    <Dashboard {...props} mode={EDIT} />\n                                )}\n                            />\n                        </Switch>\n                    </Router>\n                    <SnackbarMessage />\n                </div>\n            </>\n        );\n    }\n}\n\nApp.propTypes = {\n    fetchDashboards: PropTypes.func.isRequired,\n    setControlBarRows: PropTypes.func.isRequired,\n    setCurrentUser: PropTypes.func.isRequired,\n    setDimensions: PropTypes.func.isRequired,\n    baseUrl: PropTypes.string,\n    d2: PropTypes.object,\n};\n\nApp.childContextTypes = {\n    baseUrl: PropTypes.string,\n    i18n: PropTypes.object,\n    d2: PropTypes.object,\n};\n\nconst mapDispatchToProps = dispatch => {\n    return {\n        setCurrentUser: currentUser => dispatch(acReceivedUser(currentUser)),\n        fetchDashboards: () => dispatch(tFetchDashboards()),\n        setControlBarRows: () => dispatch(tSetControlBarRows()),\n        setDimensions: d2 => dispatch(tSetDimensions(d2)),\n    };\n};\n\nexport default connect(\n    null,\n    mapDispatchToProps\n)(App);\n","import { RECEIVED_USER } from '../reducers/user';\n\nexport const acReceivedUser = value => ({\n    type: RECEIVED_USER,\n    value,\n});\n","//------------------------------------------------------------------------------\n// <auto-generated>\n// This code was generated by d2-i18n-generate.\n//\n// Changes to this file may cause incorrect behavior and will be lost if\n// the code is regenerated.\n// </auto-generated>\n//------------------------------------------------------------------------------\nimport i18n from '@dhis2/d2-i18n';\nimport moment from 'moment';\nimport 'moment/locale/ar';\nimport 'moment/locale/es';\nimport 'moment/locale/fr';\nimport 'moment/locale/lo';\nimport 'moment/locale/pt';\nimport 'moment/locale/ru';\nimport 'moment/locale/sv';\nimport 'moment/locale/tg';\nimport 'moment/locale/uk';\nimport 'moment/locale/ur';\nimport 'moment/locale/vi';\nimport 'moment/locale/zh-cn';\n\nimport arTranslations from './ar/translations.json';\nimport daTranslations from './da/translations.json';\nimport enTranslations from './en/translations.json';\nimport esTranslations from './es/translations.json';\nimport frTranslations from './fr/translations.json';\nimport idTranslations from './id/translations.json';\nimport kmTranslations from './km/translations.json';\nimport loTranslations from './lo/translations.json';\nimport myTranslations from './my/translations.json';\nimport prsTranslations from './prs/translations.json';\nimport psTranslations from './ps/translations.json';\nimport ptTranslations from './pt/translations.json';\nimport pt_BRTranslations from './pt_BR/translations.json';\nimport ruTranslations from './ru/translations.json';\nimport svTranslations from './sv/translations.json';\nimport tetTranslations from './tet/translations.json';\nimport tgTranslations from './tg/translations.json';\nimport ukTranslations from './uk/translations.json';\nimport urTranslations from './ur/translations.json';\nimport viTranslations from './vi/translations.json';\nimport zhTranslations from './zh/translations.json';\nimport zh_CNTranslations from './zh_CN/translations.json';\n\nconst namespace = 'dashboards-app';\nmoment.locale('en');\n\ni18n.addResources('ar', namespace, arTranslations);\ni18n.addResources('da', namespace, daTranslations);\ni18n.addResources('en', namespace, enTranslations);\ni18n.addResources('es', namespace, esTranslations);\ni18n.addResources('fr', namespace, frTranslations);\ni18n.addResources('id', namespace, idTranslations);\ni18n.addResources('km', namespace, kmTranslations);\ni18n.addResources('lo', namespace, loTranslations);\ni18n.addResources('my', namespace, myTranslations);\ni18n.addResources('prs', namespace, prsTranslations);\ni18n.addResources('ps', namespace, psTranslations);\ni18n.addResources('pt', namespace, ptTranslations);\ni18n.addResources('pt_BR', namespace, pt_BRTranslations);\ni18n.addResources('ru', namespace, ruTranslations);\ni18n.addResources('sv', namespace, svTranslations);\ni18n.addResources('tet', namespace, tetTranslations);\ni18n.addResources('tg', namespace, tgTranslations);\ni18n.addResources('uk', namespace, ukTranslations);\ni18n.addResources('ur', namespace, urTranslations);\ni18n.addResources('vi', namespace, viTranslations);\ni18n.addResources('zh', namespace, zhTranslations);\ni18n.addResources('zh_CN', namespace, zh_CNTranslations);\n\ni18n.setDefaultNamespace(namespace);\ni18n.changeLanguage('en');\n\nexport default i18n;\n","/** @module reducers/selected */\nimport { validateReducer } from '../modules/util';\n\nexport const SET_STYLE = 'SET_STYLE';\n\nexport const DEFAULT_STATE_STYLE = 'LIST';\n\n/**\n * Reducer functions that computes and returns the new state based on the given action\n * @function\n * @param {Object} state The current state\n * @param {Object} action The action to be evaluated\n */\nconst style = (state = DEFAULT_STATE_STYLE, action) => {\n    switch (action.type) {\n        case SET_STYLE:\n            return validateReducer(action.value, DEFAULT_STATE_STYLE);\n        default:\n            return state;\n    }\n};\n\nexport default style;\n\n/**\n * Selectors that point to specific props in the state object\n * @function\n * @param {Object} state\n * @returns {Object}\n */\nexport const sGetStyleRoot = state => state.style;\n","import { combineReducers } from 'redux';\nimport arraySort from 'd2-utilizr/lib/arraySort';\n\nimport dashboards, { sGetDashboardsRoot } from './dashboards';\nimport selected from './selected';\nimport dashboardsFilter, {\n    ownerData,\n    sGetFilterName,\n    sGetFilterOrder,\n    sGetFilterOwner,\n} from './dashboardsFilter';\nimport controlBar from './controlBar';\nimport visualizations from './visualizations';\nimport editDashboard from './editDashboard';\nimport messages from './messages';\nimport user from './user';\nimport snackbar from './snackbar';\nimport itemFilters from './itemFilters';\nimport editItemFilters from './editItemFilters';\nimport style from './style';\nimport dimensions from './dimensions';\nimport settings from './settings';\nimport activeModalDimension from './activeModalDimension';\n\nconst USER = 'system';\n\n// Reducers\n\nexport default combineReducers({\n    dashboards,\n    selected,\n    dashboardsFilter,\n    controlBar,\n    visualizations,\n    messages,\n    user,\n    editDashboard,\n    itemFilters,\n    editItemFilters,\n    style,\n    snackbar,\n    dimensions,\n    settings,\n    activeModalDimension,\n});\n\n// Map constants to data\nconst mapConstToData = {\n    NAME: 'name',\n    ITEMS: 'numberOfItems',\n    CREATED: 'created',\n    OWNER: 'owner',\n};\n\n// Selectors\n\n// Filter dashboards by name\nexport const sFilterDashboardsByName = (dashboards, filter) =>\n    dashboards.filter(d =>\n        d.displayName.toLowerCase().includes(filter.toLowerCase())\n    );\n\n// Filter dashboards by owner, TODO FIXME\nexport const sFilterDashboardsByOwner = (dashboards, filter) => {\n    const ME = ownerData[1]; // TODO\n    const OTHERS = ownerData[2]; // TODO\n\n    switch (filter) {\n        case ME:\n            return dashboards.filter(d => d.owner === USER);\n        case OTHERS:\n            return dashboards.filter(d => d.owner !== USER);\n        default:\n            return dashboards;\n    }\n};\n\n// Filter dashboards by order\nexport const sFilterDashboardsByOrder = (dashboards, filter) => {\n    const filterValues = filter.split(':');\n\n    const key = filterValues[0];\n    const direction = filterValues[1];\n\n    return arraySort(dashboards, direction, mapConstToData[key]);\n};\n\n// Selectors dependency level 2\n\n// Get filtered dashboards\nexport const sGetFilteredDashboards = state => {\n    const dashboards = sGetDashboardsRoot(state);\n\n    const nameFilter = sGetFilterName(state);\n    const ownerFilter = sGetFilterOwner(state);\n    const orderFilter = sGetFilterOrder(state);\n\n    return sFilterDashboardsByOrder(\n        sFilterDashboardsByName(\n            sFilterDashboardsByOwner(dashboards, ownerFilter),\n            nameFilter\n        ),\n        orderFilter\n    );\n};\n","import { createStore, applyMiddleware, compose } from 'redux';\nimport { createLogger } from 'redux-logger';\nimport thunk from 'redux-thunk';\nimport reducer from './reducers';\n\nconst configureStore = () => {\n    const middleware = [thunk];\n\n    // Enable Redux devtools if extension is installed instead of redux-logger\n    const composeEnhancers =\n        window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\n    if (\n        !window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ &&\n        process.env.NODE_ENV !== 'production'\n    ) {\n        middleware.push(createLogger());\n    }\n\n    return createStore(\n        reducer,\n        composeEnhancers(applyMiddleware(...middleware))\n    );\n};\n\nexport default configureStore;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport { MuiThemeProvider, createMuiTheme } from '@material-ui/core/styles';\nimport { init as d2Init, config, getManifest, getUserSettings } from 'd2';\nimport dhis2theme from '@dhis2/d2-ui-core/theme/mui3.theme';\n\nimport { Provider as RuntimeProvider } from '@dhis2/app-runtime';\nimport { CssReset } from '@dhis2/ui-core';\n\nimport App from './components/App';\nimport './index.css';\nimport i18n from './locales';\nimport configureStore from './configureStore';\n\nconst muiTheme = () => createMuiTheme(dhis2theme);\n\nconst configI18n = userSettings => {\n    const uiLocale = userSettings.keyUiLocale;\n\n    if (uiLocale && uiLocale !== 'en') {\n        config.i18n.sources.add(`./i18n/i18n_module_${uiLocale}.properties`);\n    }\n\n    config.i18n.sources.add('./i18n/i18n_module_en.properties');\n    i18n.changeLanguage(uiLocale);\n};\n\nconst init = async () => {\n    const manifest = await getManifest('./manifest.webapp');\n\n    // log app info\n    console.info(\n        `Dashboards app, v${manifest.version}, ${\n            manifest.manifest_generated_at\n        }`\n    );\n\n    const isProd = process.env.NODE_ENV === 'production';\n\n    if (\n        !isProd &&\n        (!process.env.REACT_APP_DHIS2_BASE_URL ||\n            !process.env.REACT_APP_DHIS2_AUTHORIZATION)\n    ) {\n        throw new Error(\n            'Missing env variables REACT_APP_DHIS2_BASE_URL and REACT_APP_DHIS2_AUTHORIZATION'\n        );\n    }\n\n    // api config\n    const baseUrl = isProd\n        ? manifest.activities.dhis.href\n        : process.env.REACT_APP_DHIS2_BASE_URL;\n    const authorization = process.env.REACT_APP_DHIS2_AUTHORIZATION;\n\n    config.baseUrl = `${baseUrl}/api/${manifest.dhis2.apiVersion}`;\n    config.headers = isProd ? null : { Authorization: authorization };\n    config.schemas = [\n        'chart',\n        'map',\n        'report',\n        'reportTable',\n        'eventChart',\n        'eventReport',\n        'dashboard',\n        'organisationUnit',\n        'userGroup',\n    ];\n\n    getUserSettings()\n        .then(configI18n)\n        .then(() => d2Init(config))\n        .then(initializedD2 => {\n            ReactDOM.render(\n                <RuntimeProvider\n                    config={{\n                        baseUrl: baseUrl,\n                        apiVersion: manifest.dhis2.apiVersion,\n                    }}\n                >\n                    <CssReset />\n                    <Provider store={configureStore()}>\n                        <MuiThemeProvider theme={muiTheme()}>\n                            <App baseUrl={baseUrl} d2={initializedD2} />\n                        </MuiThemeProvider>\n                    </Provider>\n                </RuntimeProvider>,\n                document.getElementById('root')\n            );\n        });\n};\n\ninit();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"leftControls\":\"DashboardsBar_leftControls__2kr14\",\"rightControls\":\"DashboardsBar_rightControls__2l1lT\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"menuItem\":\"ContentMenuItem_menuItem__2DIcB\",\"launchLink\":\"ContentMenuItem_launchLink__MRANR\",\"label\":\"ContentMenuItem_label__2pIfq\",\"buttonInsert\":\"ContentMenuItem_buttonInsert__1GlZy\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"itemWrap\":\"ItemHeader_itemWrap__3gJiQ\",\"itemHeaderWrap\":\"ItemHeader_itemHeaderWrap__xEKwZ\",\"itemTitle\":\"ItemHeader_itemTitle__3LmXp\",\"itemActionsWrap\":\"ItemHeader_itemActionsWrap__1U5Ex\"};","import isObject from 'lodash/isObject';\n\n// validation\nexport function orNull(param) {\n    return param === undefined ? null : param;\n}\n\nexport function orArray(param) {\n    return Array.isArray(param) ? param : [];\n}\n\nexport function orObject(param) {\n    return isObject(param) ? param : {};\n}\n\n// array\nexport function arrayGetById(array, id) {\n    return array.find(item => item.id === id);\n}\n\n// object\nexport function arrayToIdMap(array) {\n    return array.reduce((obj, item) => {\n        obj[item.id] = item;\n        return obj;\n    }, {});\n}\n\n// date\nexport function getDate() {\n    const y = Math.floor(Math.random() * 3) + 2015;\n    const M = Math.floor(Math.random() * 12) + 1;\n    const d = Math.floor(Math.random() * 28) + 1;\n    // const h = Math.floor(Math.random() * 23) + 1;\n    // const m = Math.floor(Math.random() * 59) + 1;\n    // const s = Math.floor(Math.random() * 59) + 1;\n\n    return new Date(`${y}-${M}-${d}`)\n        .toJSON()\n        .replace('T', ' ')\n        .substr(0, 10);\n}\n\nexport const formatDate = (value, uiLocale) => {\n    if (typeof global.Intl !== 'undefined' && Intl.DateTimeFormat) {\n        const locale = uiLocale || 'en';\n        return new Intl.DateTimeFormat(locale, {\n            year: 'numeric',\n            month: 'short',\n            day: 'numeric',\n        }).format(new Date(value));\n    }\n\n    return value.substr(0, 19).replace('T', ' ');\n};\n\n/**\n * Sorts an array of objects based on provided date property\n *\n * @param {Array} items Array of objects\n * @param {String} dateProp Name of the date property to be used for sorting\n * @param {Boolean} ascending Whether to sort ascending or descending\n */\nexport const sortByDate = (items, dateProp, ascending = true) => {\n    const values = Object.values(items);\n\n    values.sort((a, b) => {\n        const aDate = new Date(a[dateProp]);\n        const bDate = new Date(b[dateProp]);\n\n        return ascending ? aDate - bDate : bDate - aDate;\n    });\n\n    return values;\n};\n\n// reducer validator\nexport const validateReducer = (value, defaultValue) =>\n    value === undefined || value === null ? defaultValue : value;\n\nexport const getBaseUrl = d2 => {\n    const api = d2.Api.getApi();\n    const idx = api.baseUrl.indexOf('/api');\n    return idx > -1 ? api.baseUrl.slice(0, idx) : api.baseUrl;\n};\n\nexport const getWithoutId = object => ({\n    ...object,\n    id: undefined,\n});\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"ControlBar_root__3LaTt\",\"content\":\"ControlBar_content__1r98-\",\"draghandle\":\"ControlBar_draghandle__1VWa0\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"FatalErrorBoundary_container__x6zhd\",\"icon\":\"FatalErrorBoundary_icon__2XjC2\",\"message\":\"FatalErrorBoundary_message__2p9y8\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"textDiv\":\"Item_textDiv__2b-T5\",\"loadingCover\":\"Item_loadingCover__fhJgG\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"showMore\":\"ShowMoreButton_showMore__rWqw9\",\"disabled\":\"ShowMoreButton_disabled__2oX7G\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"ClearButton_button__2yjcV\",\"icon\":\"ClearButton_icon__1fqj8\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"filterField\":\"Filter_filterField__23cD5\",\"searchIcon\":\"Filter_searchIcon__2cHsm\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"progress\":\"LoadingMask_progress__NsmGX\",\"outer\":\"LoadingMask_outer__2Nb9y\"};","import isObject from 'lodash/isObject';\nimport { VIS_TYPE_COLUMN, VIS_TYPE_PIVOT_TABLE } from '@dhis2/analytics';\nimport { apiFetchFavorite, getMapFields } from '../../../api/metadata';\nimport {\n    REPORT_TABLE,\n    CHART,\n    MAP,\n    EVENT_REPORT,\n    EVENT_CHART,\n    itemTypeMap,\n} from '../../../modules/itemTypes';\nimport { getBaseUrl, getWithoutId } from '../../../modules/util';\nimport { getGridItemDomId } from '../../ItemGrid/gridUtil';\n\n//external plugins\nconst itemTypeToExternalPlugin = {\n    [MAP]: 'mapPlugin',\n    [EVENT_REPORT]: 'eventReportPlugin',\n    [EVENT_CHART]: 'eventChartPlugin',\n};\nconst hasIntegratedPlugin = type => [CHART, REPORT_TABLE].includes(type);\n\nconst getPlugin = type => {\n    if (hasIntegratedPlugin(type)) {\n        return true;\n    }\n    const pluginName = itemTypeToExternalPlugin[type];\n\n    return global[pluginName];\n};\n\nexport const THEMATIC_LAYER = 'thematic';\n\nexport const pluginIsAvailable = (item = {}, visualization = {}) => {\n    const type = visualization.activeType || item.type;\n\n    return !!getPlugin(type);\n};\n\nexport const extractFavorite = item => {\n    if (!isObject(item)) {\n        return null;\n    }\n\n    const propName = itemTypeMap[item.type].propName;\n\n    return (\n        item[propName] ||\n        (item.reportTable ||\n            item.chart ||\n            item.map ||\n            item.eventReport ||\n            item.eventChart ||\n            {})\n    );\n};\n\nexport const extractMapView = map =>\n    map.mapViews && map.mapViews.find(mv => mv.layer.includes(THEMATIC_LAYER));\n\nexport const loadPlugin = (plugin, config, credentials) => {\n    if (!(plugin && plugin.load)) {\n        return;\n    }\n\n    plugin.url = credentials.baseUrl;\n    plugin.loadingIndicator = true;\n    plugin.dashboard = true;\n    if (credentials.auth) {\n        plugin.auth = credentials.auth;\n    }\n    plugin.load(config);\n};\n\nexport const getId = item => extractFavorite(item).id;\nexport const getName = item => extractFavorite(item).name;\nexport const getDescription = item => extractFavorite(item).description;\nexport const getLink = (item, d2) => {\n    const baseUrl = getBaseUrl(d2);\n    const appUrl = itemTypeMap[item.type].appUrl(getId(item));\n\n    return `${baseUrl}/${appUrl}`;\n};\n\nexport const load = async (\n    item,\n    visualization,\n    { credentials, activeType }\n) => {\n    const config = {\n        ...visualization,\n        el: getGridItemDomId(item.id),\n    };\n\n    const type = activeType || item.type;\n    const plugin = getPlugin(type);\n\n    loadPlugin(plugin, config, credentials);\n};\n\nexport const fetch = async item => {\n    const fetchedFavorite = await apiFetchFavorite(getId(item), item.type, {\n        fields: item.type === MAP ? getMapFields() : null,\n    });\n\n    return fetchedFavorite;\n};\n\nexport const resize = item => {\n    const plugin = getPlugin(item.type);\n\n    if (plugin && plugin.resize) {\n        plugin.resize(getGridItemDomId(item.id));\n    }\n};\n\nexport const unmount = (item, activeType) => {\n    const plugin = getPlugin(activeType);\n\n    if (plugin && plugin.unmount) {\n        plugin.unmount(getGridItemDomId(item.id));\n    }\n};\n\nexport const getVisualizationConfig = (\n    visualization,\n    originalType,\n    activeType\n) => {\n    if (originalType === MAP && originalType !== activeType) {\n        const extractedMapView = extractMapView(visualization);\n\n        if (extractedMapView === undefined) {\n            return null;\n        }\n\n        return getWithoutId({\n            ...visualization,\n            ...extractedMapView,\n            mapViews: undefined,\n            type: activeType === CHART ? VIS_TYPE_COLUMN : VIS_TYPE_PIVOT_TABLE,\n        });\n    } else if (originalType === REPORT_TABLE && activeType === CHART) {\n        return getWithoutId({ ...visualization, type: VIS_TYPE_COLUMN });\n    } else if (originalType === CHART && activeType === REPORT_TABLE) {\n        return getWithoutId({\n            ...visualization,\n            type: VIS_TYPE_PIVOT_TABLE,\n        });\n    }\n\n    return getWithoutId(visualization);\n};\n","import isFunction from 'd2-utilizr/lib/isFunction';\n\nimport { orObject } from '../../modules/util';\n\n// Dimensions for the react-grid-layout\n\nexport const GRID_COMPACT_TYPE = 'vertical'; // vertical | horizonal | null\nexport const GRID_ROW_HEIGHT = 10;\nconst GRID_COLUMN_WIDTH_PX = 20;\nconst GRID_LAYOUT = 'FLEXIBLE'; // FIXED | FLEXIBLE\nexport const MARGIN = [10, 10];\n\nexport const NEW_ITEM_SHAPE = { x: 0, y: 0, w: 20, h: 29 };\n\n// Dimensions for getShape\n\nconst NUMBER_OF_ITEM_COLS = 2;\nconst GRID_COLUMNS = 60;\n\nexport const getGridColumns = () => {\n    switch (GRID_LAYOUT) {\n        case 'FLEXIBLE':\n            return GRID_COLUMNS;\n        case 'FIXED':\n            return Math.floor((window.innerWidth - 20) / GRID_COLUMN_WIDTH_PX);\n        default:\n            return GRID_COLUMNS;\n    }\n};\n\n// isNonNegativeInteger\n\nconst isNonNegativeInteger = x => Number.isInteger(x) && x >= 0;\n\n// Does the item have all the shape properties?\n\nexport const hasShape = item =>\n    isNonNegativeInteger(item.x) &&\n    isNonNegativeInteger(item.y) &&\n    isNonNegativeInteger(item.w) &&\n    isNonNegativeInteger(item.h);\n\n// returns a rectangular grid block dimensioned with x, y, w, h in grid units.\n// based on a grid with 3 items across\nexport const getShape = i => {\n    if (!isNonNegativeInteger(i)) {\n        throw new Error('Invalid grid block number');\n    }\n\n    const col = i % NUMBER_OF_ITEM_COLS;\n    const row = Math.floor(i / NUMBER_OF_ITEM_COLS);\n    const itemWidth = Math.floor((GRID_COLUMNS - 1) / NUMBER_OF_ITEM_COLS);\n    const itemHeight = GRID_ROW_HEIGHT * 2;\n\n    return {\n        x: col * itemWidth,\n        y: row * itemHeight,\n        w: itemWidth,\n        h: itemHeight,\n    };\n};\n\nexport const getGridItemProperties = itemId => {\n    return {\n        i: itemId,\n        minH: 4, // minimum height for item\n    };\n};\n\n/**\n * Calculates the grid item's original height in pixels based\n * on the height in grid units. This calculation\n * is copied directly from react-grid-layout GridItem.js (calcPosition)\n *\n * @param {Object} item item containing shape (x, y, w, h)\n */\nconst getOriginalHeight = item => {\n    const originalHeight = Math.round(\n        GRID_ROW_HEIGHT * item.h + Math.max(0, item.h - 1) * MARGIN[1]\n    );\n\n    return { originalHeight };\n};\n\n/**\n * Returns an array of items containing the x, y, w, h dimensions\n * and the item's originalheight in pixels\n * @function\n * @param {Array} items\n * @returns {Array}\n */\n\nexport const withShape = items =>\n    items.map((item, index) => {\n        const itemWithShape = hasShape(item)\n            ? item\n            : Object.assign({}, item, getShape(index));\n\n        return Object.assign(\n            {},\n            itemWithShape,\n            getOriginalHeight(itemWithShape)\n        );\n    });\n\nexport const getGridItemDomId = id => `item-${id}`;\n\nexport function onItemResize(id) {\n    const el = orObject(document.querySelector(`#${getGridItemDomId(id)}`));\n    if (isFunction(el.setViewportSize))\n        setTimeout(\n            () => el.setViewportSize(el.clientWidth - 5, el.clientHeight - 5),\n            10\n        );\n}\n"],"sourceRoot":""}
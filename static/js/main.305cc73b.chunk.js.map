{"version":3,"sources":["modules/itemTypes.js","reducers/user.js","reducers/dashboards.js","reducers/selected.js","reducers/visualizations.js","api/metadata.js","api/index.js","api/dashboards.js","components/ItemGrid/gridUtil.js","reducers/messages.js","api/messages.js","reducers/snackbar.js","actions/snackbar.js","components/SnackbarMessage/SnackbarMessage.js","components/Item/VisualizationItem/plugin.js","actions/selected.js","api/localStorage.js","components/Item/MessagesItem/actions.js","reducers/editDashboard.js","reducers/editItemFilters.js","reducers/itemFilters.js","actions/itemFilters.js","actions/editItemFilters.js","api/editDashboard.js","actions/editDashboard.js","actions/dashboards.js","reducers/controlBar.js","api/controlBar.js","actions/controlBar.js","reducers/dimensions.js","reducers/settings.js","actions/dimensions.js","modules/colors.js","api/dataStatistics.js","components/ControlBar/DashboardItemChip.js","icons/AddCircle.js","reducers/dashboardsFilter.js","components/ControlBar/Filter.js","components/ControlBar/ShowMoreButton.js","components/ControlBar/controlBarDimensions.js","components/ControlBar/DashboardsBar.js","actions/dashboardsFilter.js","components/Dashboard/DashboardVerticalOffset.js","components/ItemSelect/selectableItems.js","components/ItemSelect/ItemSelectList.js","components/ItemSelect/actions.js","components/ItemSelect/ItemSelectSingle.js","components/ItemSelect/ItemSelect.js","components/TitleBar/EditTitleBar.js","components/ItemFilter/FilterDialog.js","reducers/activeModalDimension.js","actions/activeModalDimension.js","components/ItemFilter/FilterSelector.js","components/TitleBar/Info.js","components/TitleBar/ViewTitleBar.js","components/TitleBar/TitleBar.js","components/Item/VisualizationItem/DefaultPlugin.js","components/Item/ItemHeader.js","components/Item/VisualizationItem/ItemFooter.js","components/Item/ItemHeaderButton.js","components/Item/VisualizationItem/ItemHeaderButtons.js","modules/memoizeOne.js","components/Item/VisualizationItem/Item.js","widgets/Line.js","components/Item/MessagesItem/Item.js","components/Item/NotSupportedItem/Item.js","components/Item/ListItem/Item.js","components/Item/ListItem/actions.js","components/Item/TextItem/Item.js","components/Item/AppItem/Item.js","components/Item/SpacerItem/Item.js","components/Item/Item.js","components/ItemGrid/DeleteItemButton.js","widgets/ModalLoadingMask.js","widgets/NoContentMessage.js","components/Item/ProgressiveLoadingContainer.js","components/ItemGrid/ItemGrid.js","components/FilterBar/FilterBadge.js","components/FilterBar/FilterBar.js","components/Dashboard/DashboardContent.js","components/Dashboard/ViewDashboard.js","widgets/PrimaryButton.js","widgets/FlatButton.js","components/ControlBar/ConfirmDeleteDialog.js","components/ControlBar/EditBar.js","components/Dashboard/EditDashboard.js","components/Dashboard/NewDashboard.js","components/Dashboard/Dashboard.js","components/Dashboard/dashboardModes.js","components/App.js","actions/user.js","locales/index.js","reducers/style.js","reducers/index.js","configureStore.js","modules/theme.js","index.js","modules/util.js"],"names":["REPORT_TABLE","CHART","MAP","EVENT_REPORT","EVENT_CHART","APP","REPORTS","RESOURCES","USERS","MESSAGES","TEXT","SPACER","DOMAIN_TYPE_AGGREGATE","VISUALIZATION_TYPE_TABLE","VISUALIZATION_TYPE_CHART","VISUALIZATION_TYPE_MAP","spacerContent","emptyTextItemContent","isSpacerType","item","type","text","isTextType","isPluginType","itemTypeMap","hasOwnProperty","getPlugin","pluginName","plugin","global","_itemTypeMap","Object","_home_travis_build_dhis2_dashboards_app_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_defineProperty__WEBPACK_IMPORTED_MODULE_0__","id","endPointName","propName","countName","pluralTitle","i18n","t","domainType","visualizationType","appUrl","concat","appName","getItemUrl","d2","url","launchUrl","getBaseUrl","getItemIcon","TableIcon","ChartIcon","MapIcon","ExtensionIcon","DescriptionIcon","PersonIcon","FontDownloadIcon","EmailIcon","CropFreeIcon","NotInterestedIcon","DEFAULT_STATE_USER","username","uiLocale","isSuperuser","sGetUserUsername","state","user","DEFAULT_STATE_DASHBOARDS","byId","items","updateDashboardProp","dashboardId","prop","value","objectSpread","defineProperty","sGetDashboardsRoot","dashboards","sGetDashboardById","orObject","sDashboardsIsFetching","sGetAllDashboards","sGetDashboardItems","sGetStarredDashboards","values","filter","dashboard","starred","sGetUnstarredDashboards","sGetDashboardsSortedByStarred","toConsumableArray","arraySort","getCustomDashboards","data","arrayFrom","map","d","index","name","displayName","description","displayDescription","favorite","owner","created","split","join","substr","lastUpdated","access","numberOfItems","orArray","dashboardItems","length","combineReducers","arguments","undefined","action","validateReducer","isLoading","showDescription","sGetSelectedRoot","selected","sGetSelectedId","sGetSelectedIsLoading","sGetSelectedShowDescription","DEFAULT_STATE_VISUALIZATIONS","isEmpty","p","sGetVisualization","visualizations","sGetVisualizationsRoot","getIdNameFields","rename","getDimensionFields","_ref2","withItems","arrayClean","getAxesFields","_ref3","getFavoriteFields","_ref4","withDimensions","withOptions","getFavoritesFields","_ref5","apiFetchFavorite","_ref6","fields","getInstance","then","Api","getApi","get","getEndPointName","onError","error","console","log","getDashboardItemsFields","withFavorite","getDashboardFields","apiFetchDashboard","models","catch","apiStarDashboard","isStarred","post","delete","apiDeleteDashboard","MARGIN","NEW_ITEM_SHAPE","x","y","w","h","isNonNegativeInteger","Number","isInteger","hasShape","withShape","itemWithShape","assign","i","Error","col","row","Math","floor","itemWidth","GRID_ROW_HEIGHT","getShape","originalHeight","round","max","getOriginalHeight","getGridItemDomId","onItemResize","el","document","querySelector","isFunction","setViewportSize","setTimeout","clientWidth","clientHeight","sGetMessagesRoot","messages","getMessages","DEFAULT_STATE_SNACKBAR","message","duration","open","acCloseSnackbar","loadingDashboardMsg","SnackbarMessageContent","_ref","react_default","a","createElement","style","fontWeight","connect","_sGetSnackbar","snackbar","sGetSnackbar","snackbarOpen","snackbarMessage","snackbarDuration","onCloseSnackbar","props","Snackbar_default","SnackbarMessage_SnackbarMessageContent","autoHideDuration","onClose","pluginIsAvailable","activeType","extractFavorite","isObject","reportTable","chart","eventReport","eventChart","loadPlugin","config","credentials","load","baseUrl","loadingIndicator","auth","getId","getName","getLink","asyncToGenerator","regenerator_default","mark","_callee","visualization","_args","wrap","_context","prev","next","stop","_x","_x2","_x3","_x4","apply","this","fetch","_callee2","fetchedFavorite","_context2","sent","abrupt","_x5","resize","unmount","getVisualizationConfig","originalType","extractedMapView","mapViews","find","mv","layer","includes","getWithoutId","acSetSelectedId","acSetSelectedIsLoading","acReceivedVisualization","tLoadDashboard","dispatch","getState","dash","acAppendDashboards","Promise","resolve","t0","tSetSelectedDashboardById","snackbarTimeout","onSuccess","dashboardName","customDashboard","acSetDashboardItems","localStorage","setItem","forEach","messageConversations","clearTimeout","DEFAULT_STATE_EDIT_DASHBOARD","NEW_DASHBOARD_STATE","sGetEditDashboardRoot","editDashboard","sGetIsEditing","sGetEditDashboardItems","DEFAULT_STATE_EDIT_ITEM_FILTERS","sGetEditItemFiltersRoot","editItemFilters","DEFAULT_STATE_ITEM_FILTERS","sGetItemFiltersRoot","itemFilters","sGetFiltersKeys","keys","acRemoveItemFilter","acRemoveEditItemFilter","saveDashboard","width","height","save","msg","response","uid","updateDashboard","postDashboard","create","acAddDashboardItem","itemPropName","generateUid","content","acUpdateDashboardItem","acRemoveDashboardItem","arrayToIdMap","acSetDashboardStarred","tFetchDashboards","collection","list","paging","toArray","userRows","sGetControlBarUserRows","controlBar","sGetControlBarRoot","KEY","hasNamespace","currentUser","dataStore","has","getNamespace","apiGetControlBarRows","_callee3","namespace","_context3","t1","t2","key","apiPostControlBarRows","_callee4","rows","_context4","set","acSetControlBarUserRows","DEFAULT_DIMENSIONS","pe","FIXED_DIMENSIONS","ou","sGetDimensions","dimensions","DEFAULT_SETTINGS","keyDateFormat","keyAnalysisRelativePeriod","keyAnalysisDigitGroupSeparator","displayNameProperty","rootOrganisationUnit","sGetSettings","settings","sGetSettingsDisplayNameProperty","acSetDimensions","keyBy","sortBy","toLowerCase","colors","apiPostDataStatistics","eventType","chipTheme","default","labelColor","backgroundColor","primary","accent","DashboardItemChip","label","chipColorProps","labelStyle","fontSize","lineHeight","margin","cursor","Link","display","verticalAlign","textDecoration","to","onClick","debounce","Chip_default","avatarProps","color","Avatar_default","icon","Star_default","avatar","AddCircleIcon","xmlns","fill","viewBox","ownerData","DEFAULT_STATE_DASHBOARDS_FILTER_NAME","DEFAULT_STATE_DASHBOARDS_FILTER_OWNER","order","sGetDashboardsFilterRoot","dashboardsFilter","sGetFilterName","KEYCODE_ENTER","KEYCODE_ESCAPE","styles","filterField","top","filterFieldInput","left","filterFieldUnderline","bottom","filterFieldUnderlineFocus","borderColor","borderWidth","clearButton","padding","clearButtonIcon","Filter","_Component","_this","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","setFilterValue","event","preventDefault","onChangeName","target","handleKeyUp","keyCode","onKeypressEnter","inherits","createClass","nextProps","setState","TextField_default","className","onChange","onKeyUp","hintText","inputStyle","hintStyle","filterFieldHint","underlineStyle","underlineFocusStyle","Component","defaultProps","Function","prototype","ClearButton","disabled","IconButton_default","opacity","iconStyle","Clear_default","ControlBar_Filter","react","Filter_Filter","Filter_ClearButton","showMore","paddingTop","textTransform","visibility","withStyles","isMaxHeight","classes","textAlign","MIN_ROW_COUNT","getRowsHeight","getNumRowsFromHeight","FIRST_ROW_PADDING_HEIGHT","getTopOffset","getControlBarHeight","expandable","flapHeight","END_FLAP_HEIGHT","MAX_ROW_COUNT","DashboardsBar","_getPrototypeOf2","_len","args","Array","_key","setInitialDashboardState","onChangeHeight","newHeight","newRows","newRowCount","min","onEndDrag","onToggleMaxHeight","onSelectDashboard","history","push","_this$props","selectedId","onChangeFilterName","rowCount","controlBarHeight","contentWrapperStyle","overflowY","ControlBar_default","editMode","marginRight","AddCircle","ControlBar_DashboardItemChip","ControlBar_ShowMoreButton","mapDispatchToProps","withRouter","stateProps","dispatchProps","ownProps","displayDashboards","marginTop","singleItems","header","listItems","title","ItemSelectList","addItem","tAddListItemContent","newItem","match","toggleSeeMore","seeMore","onChangeItemsLimit","_this2","justifyContent","paddingLeft","Button_default","Divider_default","List","itemUrl","context","ItemIcon","leftIcon","innerDivStyle","hoverColor","primaryText","alignItems","marginLeft","rel","href","Launch_default","contextTypes","PropTypes","object","isRequired","dashboardItem","listItemType","dashboardItemIndex","findIndex","SingleItem","onAddToDashboard","category","addToDashboard","ItemSelectSingle_SingleItem","searchIcon","ItemSearchField","Search_default","fullWidth","ItemSelect","closeList","openList","fetchItems","anchorEl","currentTarget","setFilter","getListItems","itemType","ItemSelect_ItemSelectList","popoverChildren","SingleItems","ItemSelect_ItemSelectSingle","maxOption","api","queryString","maxOptions","add","Set","ItemSelect_ItemSearchField","Popover_default","anchorOrigin","horizontal","vertical","transformOrigin","PaperProps","disableAutoFocus","disableRestoreFocus","React","EditTitleBar","onChangeTitle","onChangeDescription","titleStyle","section","titleDescription","text_field_TextField_default","multiline","rowsMax","placeholder","itemSelect","components_ItemSelect_ItemSelect","selectedDashboard","flex","minWidth","maxWidth","position","peId","ouId","FilterDialog","onConfirm","dimension","selectedItems","dialogId","commonProps","onSelect","onDeselect","onReorder","build","selectedPeriods","ouItems","dialogTitle","_this$props2","Dialog_default","disableEnforceFocus","dialogContent","DialogActions_default","es_Button","kind","DEFAULT_STATE_ACTIVE_MODAL_DIMENSION","sGetActiveModalDimension","activeModalDimension","acSetActiveModalDimension","FilterSelector","openPanel","closePanel","closeDialog","clearActiveModalDimension","selectDimension","setActiveModalDimension","onSelectItems","dimensionId","setEditItemFilters","onDeselectItems","itemIdsToRemove","newList","removeEditItemFilter","onReorderItems","itemIds","oldList","reorderedList","saveFilter","filterItems","addItemFilter","removeItemFilter","theme","selectedDimensions","ArrowDropDown_default","Boolean","fontFamily","typography","onDimensionClick","selectedIds","ItemFilter_FilterDialog","filters","withTheme","Info","show","toggle","InfoOutlined_default","NO_DESCRIPTION","actions","starIcon","textButton","editLink","titleBar","titleBarIcon","ViewTitleBar","toggleSharingDialog","sharingDialogIsOpen","onStarClick","onInfoClick","userSelect","StarIcon","Star","StarBorder","TitleBar_Info","update","manage","ItemFilter_FilterSelector","paddingBottom","d2_ui_sharing_dialog_default","onRequestClose","tStarDashboard","TitleBar","edit","TitleBar_EditTitleBar","TitleBar_ViewTitleBar","DefaultPlugin","pluginCredentials","shouldPluginReload","prevProps","reloadAllowed","filtersChanged","vis","prevVis","visChanged","reloadPlugin","pluginManager","currentVis","useActiveType","getActiveType","defaultHeaders","Authorization","textDiv","HEADER_HEIGHT","ItemHeader","actionButtons","scrollContainer","line","border","ItemFooter","objectId","d2_ui_interpretations_default","ItemHeaderButton","children","iconBase","buttonBase","buttonDisabled","toggleFooterPadding","borderRadius","baseStyle","container","disabledStyle","activeStyle","inactiveStyle","getItemTypeId","VisualizationItemHeaderButtons","onSelectVisualization","activeFooter","onToggleFooter","toggleFooterBase","toggleFooter","tableButtonStyle","tableBtnStyle","chartButtonStyle","chartBtnStyle","mapButtonStyle","mapBtnStyle","components_Item_ItemHeaderButton","Message_default","ViewList_default","InsertChart_default","Public_default","memoizeOne","fn","lastArgs","lastValue","every","arg","overflow","textOverflow","whiteSpace","fontStretch","applyFilters","visRows","obj","visColumns","columns","visFilters","dimensionFound","dimensionObjects","Item","showFooter","configLoaded","getUniqueKey","uniqueId","getPluginComponent","getContentStyle","data_visualizer_plugin_build","forDashboard","VisualizationItem_DefaultPlugin","onToggleItemExpanded","getTitle","itemName","getActionButtons","ItemHeaderButtons","contentRef","offsetHeight","createRef","_componentDidMount","onVisualizationLoaded","_this$props3","Item_ItemHeader","ref","VisualizationItem_ItemFooter","acReceivedActiveVisualization","Line","PRIVATE","messageTypes","_messageTypes","listStyleType","seeAll","marginBottom","sender","snippet","maxHeight","MessagesItem","getMessageHref","msgIdentifier","messageType","getMessageSender","latestMsg","slice","getMessageItems","editClass","readClass","read","msgDate","location","messageCount","formatDate","userSettings","widgets_Line","string","MessagesContainer","NotSupportedItem","NotInterested_default","align","getItemTitle","removeContent","handler","contentToRemove","ListItem","tRemoveListItemContent","contentItems","array","getContentItems","contentItem","deleteButton","core_IconButton_default","Delete_default","ListItemContainer","newContent","textField","onChangeText","updatedItem","d2_ui_rich_text","onEdit","textDivStyle","viewItem","getIframeSrc","appDetails","iframeSrc","ouIds","ouPath","AppItem","appKey","system","installedApps","app","src","SpacerItem","GridItem","VisualizationItem","TextItem","getGridItem","button","right","zIndex","DeleteItemHeaderButton","modal","pointerEvents","dark","ModalLoadingMask","LoadingMask_component_default","NoContentMessage","ProgressiveLoadingContainer","shouldLoad","containerRef","shouldLoadHandler","bufferPx","bufferFactor","window","innerHeight","rect","getBoundingClientRect","removeHandler","checkShouldLoad","debounceMs","addEventListener","removeEventListener","registerHandler","_this3","objectWithoutProperties","ItemGrid","expandedItems","NO_ITEMS_MESSAGE","clickedId","isExpanded","onRemoveItem","onLayoutChange","newLayout","acUpdateDashboardLayout","onResizeStop","layout","oldItem","pluginResize","onRemoveItemWrapper","widgets_NoContentMessage","expandedItem","hProp","minH","widgets_ModalLoadingMask","react_grid_layout_default","cols","rowHeight","innerWidth","compactType","isDraggable","isResizable","draggableCancel","itemClassNames","Item_ProgressiveLoadingContainer","DeleteItemButton","Item_Item_Item","validItems","badgeContainer","badge","badgeRemove","FilterBadge","onRemove","count","FilterBar","onBadgeRemove","onBadgeClick","bar","FilterBar_FilterBadge","removeItemFIlter","filtersSelector","createSelector","reduce","arr","flexWrap","DashboardContent","components_TitleBar_TitleBar","components_FilterBar_FilterBar","components_ItemGrid_ItemGrid","Content","hasDashboardContent","dashboardsIsEmpty","Dashboard_DashboardContent","dashboardsLoaded","contentNotReady","ControlBar_DashboardsBar","Dashboard_DashboardVerticalOffset","ViewDashboard_Content","PrimaryButton","RaisedButton_default","defaultStyles","FlatButton","combinedStyle","FlatButton_default","ConfirmDeleteDialog","onDeleteConfirmed","onContinueEditing","widgets_FlatButton","src_widgets_PrimaryButton","material_ui_Dialog_default","buttonBarStyle","EditBar","translationDialogIsOpen","dashboardModel","confirmDeleteDialogOpen","redirectUrl","onConfirmDelete","onSave","newId","onDiscard","onDiscardChanges","onDelete","onTranslationsSaved","translations","dbLocale","translation","locale","property","onTranslate","fetchDashboardModel","toggleTranslationDialog","confirmDeleteDialog","deleteAccess","ControlBar_ConfirmDeleteDialog","translationDialog","d2_ui_translation_dialog_default","objectToTranslate","fieldsToTranslate","onTranslationSaved","onTranslationError","err","Redirect","updateAccess","discardBtnText","sGetIsNewDashboard","dashboardToSave","_x6","_x7","tDeleteDashboard","acSetDashboardDisplayName","EditDashboard","initialized","initEditDashboard","setEditDashboard","getDashboardContent","EditDashboard_Content","ControlBar_EditBar","NewDashboard","setNewDashboard","Dashboard","setDashboard","params","selectDashboard","scrollToTop","scrollTo","mode","Dashboard_EditDashboard","Dashboard_NewDashboard","Dashboard_ViewDashboard","dashboardToSelect","preferredId","getItem","App","setCurrentUser","fetchDashboards","setControlBarRows","setDimensions","HeaderBar_default","HashRouter","Switch","Route","exact","path","render","components_Dashboard_Dashboard","components_SnackbarMessage_SnackbarMessage","childContextTypes","controlBarRows","displayNameProp","filteredDimensions","apiFetchDimensions","dim","dimensionType","dataDimensionType","tSetDimensions","moment","addResources","enTranslations","loTranslations","svTranslations","urTranslations","viTranslations","setDefaultNamespace","changeLanguage","objectClean","conversations","$merge","d2Object","keyUiLocale","authorities","newState","k","$unshift","idToRemove","$splice","stateItems","newStateItems","stateItem","si","$set","configureStore","middleware","thunk","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","createStore","reducer","applyMiddleware","muiTheme","raisedButton","primaryColor","disabledColor","disabledTextColor","getMuiTheme","configI18n","sources","manifest","isProd","getManifest","info","version","manifest_generated_at","process","activities","dhis","dhis2","apiVersion","headers","schemas","getUserSettings","d2Init","initializedD2","ReactDOM","es","store","createMuiTheme","dhis2theme","index_es","src_components_App","getElementById","init","param","isArray","Intl","DateTimeFormat","year","month","day","format","Date","replace","defaultValue","idx","indexOf","_home_travis_build_dhis2_dashboards_app_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectSpread__WEBPACK_IMPORTED_MODULE_0__"],"mappings":"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","file":"static/js/main.305cc73b.chunk.js","sourcesContent":["import i18n from '@dhis2/d2-i18n';\nimport TableIcon from '@material-ui/icons/ViewList';\nimport ChartIcon from '@material-ui/icons/InsertChart';\nimport MapIcon from '@material-ui/icons/Public';\nimport ExtensionIcon from '@material-ui/icons/Extension';\nimport DescriptionIcon from '@material-ui/icons/Description';\nimport PersonIcon from '@material-ui/icons/Person';\nimport FontDownloadIcon from '@material-ui/icons/FontDownload';\nimport EmailIcon from '@material-ui/icons/Email';\nimport CropFreeIcon from '@material-ui/icons/CropFree';\nimport NotInterestedIcon from '@material-ui/icons/NotInterested';\n\nimport { getBaseUrl } from './util';\n\n// Item types\nexport const REPORT_TABLE = 'REPORT_TABLE';\nexport const CHART = 'CHART';\nexport const MAP = 'MAP';\nexport const EVENT_REPORT = 'EVENT_REPORT';\nexport const EVENT_CHART = 'EVENT_CHART';\nexport const APP = 'APP';\nexport const REPORTS = 'REPORTS';\nexport const RESOURCES = 'RESOURCES';\nexport const USERS = 'USERS';\nexport const MESSAGES = 'MESSAGES';\nexport const TEXT = 'TEXT';\nexport const SPACER = 'SPACER';\n\n// Domain types\nexport const DOMAIN_TYPE_AGGREGATE = 'AGGREGATE';\nexport const DOMAIN_TYPE_TRACKER = 'TRACKER';\n\n// Visualization types\nexport const VISUALIZATION_TYPE_TABLE = 'TABLE';\nexport const VISUALIZATION_TYPE_CHART = 'CHART';\nexport const VISUALIZATION_TYPE_MAP = 'MAP';\n\nexport const spacerContent = 'SPACER_ITEM_FOR_DASHBOARD_LAYOUT_CONVENIENCE';\nexport const emptyTextItemContent = 'TEXT_ITEM_WITH_NO_CONTENT';\nexport const isSpacerType = item =>\n    item.type === TEXT && item.text === spacerContent;\nexport const isTextType = item =>\n    item.type === TEXT && item.text !== spacerContent;\nexport const isPluginType = item =>\n    itemTypeMap[item.type].hasOwnProperty('plugin');\n\nexport const getPlugin = type => {\n    const pluginName = itemTypeMap[type].plugin;\n\n    if (type === CHART) {\n        return true;\n    }\n\n    return global[pluginName];\n};\n\n// Item type map\nexport const itemTypeMap = {\n    [REPORT_TABLE]: {\n        id: REPORT_TABLE,\n        endPointName: 'reportTables',\n        propName: 'reportTable',\n        countName: 'reportTableCount',\n        pluralTitle: i18n.t('Pivot tables'),\n        plugin: 'reportTablePlugin',\n        domainType: DOMAIN_TYPE_AGGREGATE,\n        visualizationType: VISUALIZATION_TYPE_TABLE,\n        appUrl: id => `dhis-web-pivot/?id=${id}`,\n        appName: i18n.t('Pivot Tables'),\n    },\n    [CHART]: {\n        id: CHART,\n        endPointName: 'charts',\n        propName: 'chart',\n        countName: 'chartCount',\n        pluralTitle: i18n.t('Charts'),\n        plugin: 'chartPlugin',\n        domainType: DOMAIN_TYPE_AGGREGATE,\n        visualizationType: VISUALIZATION_TYPE_CHART,\n        appUrl: id => `dhis-web-data-visualizer/#/${id}`,\n        appName: i18n.t('Visualizer'),\n    },\n    [MAP]: {\n        id: MAP,\n        endPointName: 'maps',\n        propName: 'map',\n        countName: 'mapCount',\n        pluralTitle: i18n.t('Maps'),\n        plugin: 'mapPlugin',\n        domainType: DOMAIN_TYPE_AGGREGATE,\n        visualizationType: VISUALIZATION_TYPE_MAP,\n        appUrl: id => `dhis-web-maps/?id=${id}`,\n        appName: i18n.t('Maps'),\n    },\n    [EVENT_REPORT]: {\n        id: EVENT_REPORT,\n        endPointName: 'eventReports',\n        propName: 'eventReport',\n        countName: 'eventReportCount',\n        pluralTitle: i18n.t('Event reports'),\n        plugin: 'eventReportPlugin',\n        domainType: DOMAIN_TYPE_TRACKER,\n        visualizationType: VISUALIZATION_TYPE_TABLE,\n        appUrl: id => `dhis-web-event-reports/?id=${id}`,\n        appName: i18n.t('Event Reports'),\n    },\n    [EVENT_CHART]: {\n        id: EVENT_CHART,\n        endPointName: 'eventCharts',\n        propName: 'eventChart',\n        countName: 'eventChartCount',\n        pluralTitle: i18n.t('Event charts'),\n        plugin: 'eventChartPlugin',\n        domainType: DOMAIN_TYPE_TRACKER,\n        visualizationType: VISUALIZATION_TYPE_CHART,\n        appUrl: id => `dhis-web-event-visualizer/?id=${id}`,\n        appName: i18n.t('Event Visualizer'),\n    },\n    [APP]: {\n        endPointName: 'apps',\n        propName: 'appKey',\n        countName: 'appCount',\n        pluralTitle: 'Apps',\n    },\n    [REPORTS]: {\n        id: REPORTS,\n        endPointName: 'reports',\n        propName: 'reports',\n        countName: 'reportCount',\n        pluralTitle: i18n.t('Reports'),\n        appUrl: id =>\n            `dhis-web-reporting/getReportParams.action?mode=report&uid=${id}`,\n    },\n    [RESOURCES]: {\n        id: RESOURCES,\n        endPointName: 'resources',\n        propName: 'resources',\n        countName: 'resourceCount',\n        pluralTitle: i18n.t('Resources'),\n        appUrl: id => `api/documents/${id}/data`,\n    },\n    [USERS]: {\n        id: USERS,\n        endPointName: 'users',\n        propName: 'users',\n        countName: 'userCount',\n        pluralTitle: i18n.t('Users'),\n        appUrl: id => `dhis-web-dashboard-integration/profile.action?id=${id}`,\n    },\n    [TEXT]: {\n        id: TEXT,\n        propName: 'text',\n    },\n    [MESSAGES]: {\n        propName: 'messages',\n    },\n    [SPACER]: {\n        propName: 'text',\n    },\n};\n\nexport const getItemUrl = (type, item, d2) => {\n    let url;\n\n    if (type === APP) {\n        url = item.launchUrl;\n    }\n\n    if (itemTypeMap[type] && itemTypeMap[type].appUrl) {\n        url = `${getBaseUrl(d2)}/${itemTypeMap[type].appUrl(item.id)}`;\n    }\n\n    return url;\n};\n\nexport const getItemIcon = type => {\n    switch (type) {\n        case REPORT_TABLE:\n        case EVENT_REPORT:\n        case REPORTS:\n            return TableIcon;\n        case CHART:\n        case EVENT_CHART:\n            return ChartIcon;\n        case MAP:\n            return MapIcon;\n        case APP:\n            return ExtensionIcon;\n        case RESOURCES:\n            return DescriptionIcon;\n        case USERS:\n            return PersonIcon;\n        case TEXT:\n            return FontDownloadIcon;\n        case MESSAGES:\n            return EmailIcon;\n        case SPACER:\n            return CropFreeIcon;\n        default:\n            return NotInterestedIcon;\n    }\n};\n","export const RECEIVED_USER = 'RECEIVED_USER';\n\nexport const DEFAULT_STATE_USER = {\n    id: '',\n    username: '',\n    uiLocale: '',\n    isSuperuser: false,\n};\n\nexport default (state = DEFAULT_STATE_USER, action) => {\n    switch (action.type) {\n        case RECEIVED_USER: {\n            return fromD2ToUserObj(action.value);\n        }\n        default:\n            return state;\n    }\n};\n\nfunction fromD2ToUserObj(d2Object) {\n    return {\n        id: d2Object.id,\n        username: d2Object.username,\n        uiLocale: d2Object.settings.keyUiLocale,\n        isSuperuser: d2Object.authorities.has('ALL'),\n    };\n}\n\n// selectors\n\nexport const sGetUserId = state => state.user.id;\nexport const sGetUserUsername = state => state.user.username;\nexport const sGetIsSuperuser = state => state.user.isSuperuser;\nexport const sGetUiLocale = state => state.user.uiLocale;\n","/** @module reducers/dashboards */\n\nimport arrayFrom from 'd2-utilizr/lib/arrayFrom';\nimport arraySort from 'd2-utilizr/lib/arraySort';\n\nimport { orArray, orObject } from '../modules/util';\nimport {\n    SPACER,\n    isSpacerType,\n    isTextType,\n    emptyTextItemContent,\n} from '../modules/itemTypes';\n\nexport const SET_DASHBOARDS = 'SET_DASHBOARDS';\nexport const ADD_DASHBOARDS = 'ADD_DASHBOARDS';\nexport const SET_DASHBOARD_STARRED = 'SET_DASHBOARD_STARRED';\nexport const SET_DASHBOARD_DISPLAY_NAME = 'SET_DASHBOARD_DISPLAY_NAME';\nexport const SET_DASHBOARD_ITEMS = 'SET_DASHBOARD_ITEMS';\n\nexport const DEFAULT_STATE_DASHBOARDS = {\n    byId: null,\n    items: [],\n};\n\n// reducer helper functions\n\nconst updateDashboardProp = (state, dashboardId, prop, value) => ({\n    byId: {\n        ...state.byId,\n        [dashboardId]: {\n            ...state.byId[dashboardId],\n            [prop]: value,\n        },\n    },\n    items: state.items,\n});\n\n/**\n * Reducer that computes and returns the new state based on the given action\n * @function\n * @param {Object} state The current state\n * @param {Object} action The action to be evaluated\n * @returns {Object}\n */\nexport default (state = DEFAULT_STATE_DASHBOARDS, action) => {\n    switch (action.type) {\n        case SET_DASHBOARDS: {\n            return {\n                byId: action.value,\n                items: [],\n            };\n        }\n        case ADD_DASHBOARDS: {\n            return {\n                ...state,\n                byId: {\n                    ...state.byId,\n                    ...action.value,\n                },\n            };\n        }\n        case SET_DASHBOARD_STARRED: {\n            return updateDashboardProp(\n                state,\n                action.dashboardId,\n                'starred',\n                action.value\n            );\n        }\n        case SET_DASHBOARD_DISPLAY_NAME: {\n            return updateDashboardProp(\n                state,\n                action.dashboardId,\n                'displayName',\n                action.value\n            );\n        }\n        case SET_DASHBOARD_ITEMS: {\n            return {\n                ...state,\n                items: action.value,\n            };\n        }\n        default:\n            return state;\n    }\n};\n\n// root selector\n\nexport const sGetDashboardsRoot = state => state.dashboards;\n\n// selector level 1\n\n/**\n * Selector which returns a dashboard by id from the state object\n * If no matching dashboard is found it returns undefined\n * If dashboards.byId is null, then the dashboards api request\n * has not yet completed. If dashboards.byId is an empty object\n * then the dashboards api request is complete, but no dashboards\n * were returned\n *\n * @function\n * @param {Object} state The current state\n * @param {Number} id The id of the dashboard\n * @returns {Object | undefined}\n */\nexport const sGetDashboardById = (state, id) =>\n    orObject(sGetDashboardsRoot(state).byId)[id];\n\nexport const sDashboardsIsFetching = state => {\n    return sGetDashboardsRoot(state).byId === null;\n};\n\n/**\n * Selector which returns all dashboards (the byId object)\n *\n * @function\n * @param {Object} state The current state\n * @returns {Object | undefined}\n */\nexport const sGetAllDashboards = state =>\n    orObject(sGetDashboardsRoot(state).byId);\n\n/**\n * Selector which returns the current dashboard items\n *\n * @function\n * @param {Object} state The current state\n * @returns {Array}\n */\nexport const sGetDashboardItems = state => sGetDashboardsRoot(state).items;\n\n// selector level 2\n\nexport const sGetStarredDashboards = state =>\n    Object.values(sGetAllDashboards(state)).filter(\n        dashboard => dashboard.starred === true\n    );\n\nexport const sGetUnstarredDashboards = state =>\n    Object.values(sGetAllDashboards(state)).filter(\n        dashboard => dashboard.starred === false\n    );\n\n// selector level 3\n\nexport const sGetStarredDashboardIds = state => {\n    return sGetStarredDashboards(state).map(dashboard => dashboard.id);\n};\n\nexport const sGetUnstarredDashboardIds = state =>\n    sGetUnstarredDashboards(state).map(dashboard => dashboard.id);\n\nexport const sGetDashboardsSortedByStarred = state => [\n    ...arraySort(sGetStarredDashboards(state), 'ASC', 'displayName'),\n    ...arraySort(sGetUnstarredDashboards(state), 'ASC', 'displayName'),\n];\n\n// utils\n\n/**\n * Returns the array of dashboards, customized for ui\n * @function\n * @param {Array} data The original dashboard list\n * @returns {Array}\n */\nexport const getCustomDashboards = data => {\n    const uiItems = items =>\n        items.map(item => {\n            const type = isSpacerType(item) ? SPACER : item.type;\n            const text = isTextType(item)\n                ? item.text === emptyTextItemContent\n                    ? ''\n                    : item.text\n                : null;\n\n            return {\n                ...item,\n                ...(text !== null ? { text } : {}),\n                type,\n            };\n        });\n\n    return arrayFrom(data).map((d, index) => ({\n        id: d.id,\n        name: d.name,\n        displayName: d.displayName,\n        description: d.description,\n        displayDescription: d.displayDescription,\n        starred: d.favorite,\n        owner: d.user.name,\n        created: d.created\n            .split('T')\n            .join(' ')\n            .substr(0, 16),\n        lastUpdated: d.lastUpdated\n            .split('T')\n            .join(' ')\n            .substr(0, 16),\n        access: d.access,\n        numberOfItems: orArray(d.dashboardItems).length,\n        dashboardItems: uiItems(d.dashboardItems),\n    }));\n};\n","/** @module reducers/selected */\nimport { combineReducers } from 'redux';\n\nimport { validateReducer } from '../modules/util';\n\nexport const SET_SELECTED_ID = 'SET_SELECTED_ID';\nexport const SET_SELECTED_ISLOADING = 'SET_SELECTED_ISLOADING';\nexport const SET_SELECTED_SHOWDESCRIPTION = 'SET_SELECTED_SHOWDESCRIPTION';\n\nexport const DEFAULT_STATE_SELECTED_ID = null;\nexport const DEFAULT_STATE_SELECTED_ISLOADING = false;\nexport const DEFAULT_STATE_SELECTED_SHOWDESCRIPTION = false;\n\n/**\n * Reducer functions that computes and returns the new state based on the given action\n * @function\n * @param {Object} state The current state\n * @param {Object} action The action to be evaluated\n */\nconst id = (state = DEFAULT_STATE_SELECTED_ID, action) => {\n    switch (action.type) {\n        case SET_SELECTED_ID:\n            return validateReducer(action.value, DEFAULT_STATE_SELECTED_ID);\n        default:\n            return state;\n    }\n};\n\nconst isLoading = (state = DEFAULT_STATE_SELECTED_ISLOADING, action) => {\n    switch (action.type) {\n        case SET_SELECTED_ISLOADING:\n            return validateReducer(\n                action.value,\n                DEFAULT_STATE_SELECTED_ISLOADING\n            );\n        default:\n            return state;\n    }\n};\n\nconst showDescription = (\n    state = DEFAULT_STATE_SELECTED_SHOWDESCRIPTION,\n    action\n) => {\n    switch (action.type) {\n        case SET_SELECTED_SHOWDESCRIPTION:\n            return validateReducer(\n                action.value,\n                DEFAULT_STATE_SELECTED_SHOWDESCRIPTION\n            );\n        default:\n            return state;\n    }\n};\n\nexport default combineReducers({\n    id,\n    isLoading,\n    showDescription,\n});\n\n// Selectors\n\nexport const sGetSelectedRoot = state => state.selected;\n\nexport const sGetSelectedId = state => sGetSelectedRoot(state).id;\n\nexport const sGetSelectedIsLoading = state => sGetSelectedRoot(state).isLoading;\n\nexport const sGetSelectedShowDescription = state =>\n    sGetSelectedRoot(state).showDescription;\n","import { orObject } from '../modules/util';\nimport objectClean from 'd2-utilizr/lib/objectClean';\n\n/** @module reducers/visualizations */\n\nexport const RECEIVED_VISUALIZATION = 'RECEIVED_VISUALIZATION';\nexport const RECEIVED_ACTIVE_VISUALIZATION = 'RECEIVED_ACTIVE_VISUALIZATION';\n\nexport const DEFAULT_STATE_VISUALIZATIONS = {};\n\nconst isEmpty = p => p === undefined || p === null;\n\nexport default (state = DEFAULT_STATE_VISUALIZATIONS, action) => {\n    switch (action.type) {\n        case RECEIVED_VISUALIZATION: {\n            return {\n                ...state,\n                [action.value.id]: objectClean(\n                    {\n                        ...orObject(state[action.value.id]),\n                        ...action.value,\n                    },\n                    isEmpty\n                ),\n            };\n        }\n        case RECEIVED_ACTIVE_VISUALIZATION: {\n            return {\n                ...state,\n                [action.id]: objectClean(\n                    {\n                        ...orObject(state[action.id]),\n                        activeType: action.activeType,\n                    },\n                    isEmpty\n                ),\n            };\n        }\n        default:\n            return state;\n    }\n};\n\n// root selector\nexport const sGetVisualizationsRoot = state => state.visualizations;\n\n// selectors level 1\nexport const sGetVisualization = (state, id) => {\n    return sGetVisualizationsRoot(state)[id];\n};\n","import { getInstance } from 'd2';\nimport arrayClean from 'd2-utilizr/lib/arrayClean';\n\nimport { getEndPointName } from './index';\n\n// Id, name\nexport const getIdNameFields = ({ rename } = {}) => [\n    'id',\n    `${rename ? 'displayName~rename(name)' : 'name,displayName'}`,\n];\n\n// Item\nexport const getItemFields = () => [\n    'dimensionItem~rename(id)',\n    'displayName~rename(name)',\n    'dimensionItemType',\n];\n\n// Dimension\nexport const getDimensionFields = ({ withItems }) =>\n    arrayClean([\n        'dimension',\n        'legendSet[id]',\n        'filter',\n        withItems ? `items[${getItemFields().join(',')}]` : ``,\n    ]);\n\n// Axis\nexport const getAxesFields = ({ withItems }) => [\n    `columns[${getDimensionFields({ withItems }).join(',')}]`,\n    `rows[${getDimensionFields({ withItems }).join(',')}]`,\n    `filters[${getDimensionFields({ withItems }).join(',')}]`,\n];\n\n// Favorite\nexport const getFavoriteFields = ({ withDimensions, withOptions }) => {\n    return arrayClean([\n        `${getIdNameFields({ rename: true }).join(',')}`,\n        'displayDescription~rename(description)',\n        withDimensions ? `${getAxesFields({ withItems: true }).join(',')}` : ``,\n        withOptions\n            ? [\n                  '*',\n                  '!attributeDimensions',\n                  '!attributeValues',\n                  '!category',\n                  '!categoryDimensions',\n                  '!categoryOptionGroupSetDimensions',\n                  '!columnDimensions',\n                  '!dataDimensionItems',\n                  '!dataElementDimensions',\n                  '!dataElementGroupSetDimensions',\n                  '!filterDimensions',\n                  '!itemOrganisationUnitGroups',\n                  '!lastUpdatedBy',\n                  '!organisationUnitGroupSetDimensions',\n                  '!organisationUnitLevels',\n                  '!organisationUnits',\n                  '!programIndicatorDimensions',\n                  '!relativePeriods',\n                  '!reportParams',\n                  '!rowDimensions',\n                  '!series',\n                  '!translations',\n                  '!userOrganisationUnit',\n                  '!userOrganisationUnitChildren',\n                  '!userOrganisationUnitGrandChildren',\n              ].join(',')\n            : '',\n    ]);\n};\n\nexport const getFavoritesFields = ({ withDimensions, withOptions }) => [\n    `reportTable[${getFavoriteFields({ withDimensions }).join(',')}]`,\n    `chart[${['type', ...getFavoriteFields({ withDimensions })].join(',')}]`,\n    `map[${getFavoriteFields({ withDimensions }).join(',')}]`,\n    `eventReport[${getFavoriteFields({ withDimensions }).join(',')}]`,\n    `eventChart[${getFavoriteFields({ withDimensions }).join(',')}]`,\n];\n\n// List item\nexport const getListItemFields = () => [\n    `reports[${getIdNameFields({ rename: true }).join(',')}]`,\n    `resources[${getIdNameFields({ rename: true }).join(',')}]`,\n    `users[${getIdNameFields({ rename: true }).join(',')}]`,\n];\n\n// Map\nexport const getMapFields = () => [\n    `${getIdNameFields({ rename: true }).join(',')}`,\n    'user,longitude,latitude,zoom,basemap',\n    `mapViews[${getFavoriteFields({\n        withDimensions: true,\n        withOptions: true,\n    })}]`,\n];\n\n// Api\n\n// Get more info about the favorite of a dashboard item\nexport const apiFetchFavorite = (id, type, { fields }) =>\n    getInstance().then(d2 =>\n        d2.Api.getApi().get(`${getEndPointName(type)}/${id}`, {\n            fields:\n                fields ||\n                getFavoriteFields({\n                    withDimensions: true,\n                    withOptions: true,\n                }),\n        })\n    );\n","import arrayClean from 'd2-utilizr/lib/arrayClean';\nimport { itemTypeMap } from '../modules/itemTypes';\nimport {\n    getListItemFields,\n    getFavoritesFields,\n    getIdNameFields,\n} from './metadata';\n\n// Helper functions\n\nexport const onError = error => console.log('Error: ', error);\n\nexport const getEndPointName = type => itemTypeMap[type].endPointName;\n\n// Dashboard item\nexport const getDashboardItemsFields = ({ withFavorite } = {}) =>\n    arrayClean([\n        'id',\n        'type',\n        'shape',\n        'x',\n        'y',\n        'width~rename(w)',\n        'height~rename(h)',\n        'messages',\n        'text',\n        'appKey',\n        `${getListItemFields().join(',')}`,\n        withFavorite\n            ? `${getFavoritesFields({\n                  withDimensions: withFavorite.withDimensions,\n              }).join(',')}`\n            : ``,\n    ]);\n\n// Dashboard\nexport const getDashboardFields = ({ withItems, withFavorite } = {}) =>\n    arrayClean([\n        `${getIdNameFields().join(',')}`,\n        'description',\n        'displayDescription',\n        'favorite',\n        `user[${getIdNameFields({ rename: true }).join(',')}]`,\n        'created',\n        'lastUpdated',\n        'access',\n        withItems\n            ? `dashboardItems[${getDashboardItemsFields({\n                  withFavorite,\n              }).join(',')}]`\n            : ``,\n    ]);\n","import { getInstance } from 'd2';\nimport arrayClean from 'd2-utilizr/lib/arrayClean';\nimport { onError, getDashboardFields } from './index';\n\n// Get \"all\" dashboards on startup\nexport const apiFetchDashboards = () =>\n    getInstance()\n        .then(d2 =>\n            d2.models.dashboard.list({\n                fields: [\n                    getDashboardFields().join(','),\n                    'dashboardItems[id]',\n                ].join(','),\n                paging: 'false',\n            })\n        )\n        .catch(onError);\n\n// Get more info about selected dashboard\nexport const apiFetchDashboard = id =>\n    getInstance()\n        .then(d2 =>\n            d2.models.dashboard.get(id, {\n                fields: arrayClean(\n                    getDashboardFields({\n                        withItems: true,\n                        withFavorite: { withDimensions: false },\n                    })\n                ).join(','),\n            })\n        )\n        .catch(onError);\n\n// Star dashboard\nexport const apiStarDashboard = (id, isStarred) => {\n    const url = `dashboards/${id}/favorite`;\n\n    getInstance().then(d2 => {\n        if (isStarred) {\n            d2.Api.getApi().post(url);\n        } else {\n            d2.Api.getApi().delete(url);\n        }\n    });\n};\n\nexport const apiDeleteDashboard = id => {\n    return getInstance()\n        .then(d2 => {\n            return d2.models.dashboards\n                .get(id)\n                .then(dashboard => dashboard.delete());\n        })\n        .catch(onError);\n};\n","import isFunction from 'd2-utilizr/lib/isFunction';\n\nimport { orObject } from '../../modules/util';\n\n// Dimensions for the react-grid-layout\n\nexport const GRID_COMPACT_TYPE = 'vertical'; // vertical | horizonal | null\nexport const GRID_ROW_HEIGHT = 10;\nconst GRID_COLUMN_WIDTH_PX = 20;\nconst GRID_LAYOUT = 'FLEXIBLE'; // FIXED | FLEXIBLE\nexport const MARGIN = [10, 10];\n\nexport const NEW_ITEM_SHAPE = { x: 0, y: 0, w: 20, h: 29 };\nexport const ITEM_MIN_HEIGHT = 4;\n\n// Dimensions for getShape\n\nconst NUMBER_OF_ITEM_COLS = 2;\nconst GRID_COLUMNS = 60;\n\nexport const getGridColumns = () => {\n    switch (GRID_LAYOUT) {\n        case 'FLEXIBLE':\n            return GRID_COLUMNS;\n        case 'FIXED':\n            return Math.floor((window.innerWidth - 20) / GRID_COLUMN_WIDTH_PX);\n        default:\n            return GRID_COLUMNS;\n    }\n};\n\n// isNonNegativeInteger\n\nconst isNonNegativeInteger = x => Number.isInteger(x) && x >= 0;\n\n// Does the item have all the shape properties?\n\nexport const hasShape = item =>\n    isNonNegativeInteger(item.x) &&\n    isNonNegativeInteger(item.y) &&\n    isNonNegativeInteger(item.w) &&\n    isNonNegativeInteger(item.h);\n\n// returns a rectangular grid block dimensioned with x, y, w, h in grid units.\n// based on a grid with 3 items across\nexport const getShape = i => {\n    if (!isNonNegativeInteger(i)) {\n        throw new Error('Invalid grid block number');\n    }\n\n    const col = i % NUMBER_OF_ITEM_COLS;\n    const row = Math.floor(i / NUMBER_OF_ITEM_COLS);\n    const itemWidth = Math.floor((GRID_COLUMNS - 1) / NUMBER_OF_ITEM_COLS);\n    const itemHeight = GRID_ROW_HEIGHT * 2;\n\n    return {\n        x: col * itemWidth,\n        y: row * itemHeight,\n        w: itemWidth,\n        h: itemHeight,\n    };\n};\n\n/**\n * Calculates the grid item's original height in pixels based\n * on the height in grid units. This calculation\n * is copied directly from react-grid-layout GridItem.js (calcPosition)\n *\n * @param {Object} item item containing shape (x, y, w, h)\n */\nconst getOriginalHeight = item => {\n    const originalHeight = Math.round(\n        GRID_ROW_HEIGHT * item.h + Math.max(0, item.h - 1) * MARGIN[1]\n    );\n\n    return { originalHeight };\n};\n\n/**\n * Returns an array of items containing the x, y, w, h dimensions\n * and the item's originalheight in pixels\n * @function\n * @param {Array} items\n * @returns {Array}\n */\n\nexport const withShape = items =>\n    items.map((item, index) => {\n        const itemWithShape = hasShape(item)\n            ? item\n            : Object.assign({}, item, getShape(index));\n\n        return Object.assign(\n            {},\n            itemWithShape,\n            getOriginalHeight(itemWithShape)\n        );\n    });\n\nexport const getGridItemDomId = id => `item-${id}`;\n\nexport function onItemResize(id) {\n    const el = orObject(document.querySelector(`#${getGridItemDomId(id)}`));\n    if (isFunction(el.setViewportSize))\n        setTimeout(\n            () => el.setViewportSize(el.clientWidth - 5, el.clientHeight - 5),\n            10\n        );\n}\n","import update from 'immutability-helper';\nimport { arrayToIdMap } from '../modules/util';\n\nexport const RECEIVED_MESSAGES = 'RECEIVED_MESSAGES';\n\nexport default (state = {}, action) => {\n    switch (action.type) {\n        case RECEIVED_MESSAGES: {\n            const conversations = arrayToIdMap(action.value);\n\n            const newState = update(state, { $merge: conversations });\n\n            return newState;\n        }\n        default:\n            return state;\n    }\n};\n\n// selectors\n\nexport const sGetMessagesRoot = state => state.messages;\n","import { getInstance } from 'd2';\n\nexport const getMessages = () => {\n    const fields =\n        'id,messageCount,lastUpdated,messageType,displayName,read,messages[id,read,sender[id,displayName],text,lastUpdated]';\n    const url = `/messageConversations?fields=${fields}&order=read:asc&pageSize=200`;\n    return getInstance()\n        .then(d2 => d2.Api.getApi().get(url))\n        .catch(error => console.log('Error:', error));\n};\n","export const RECEIVED_SNACKBAR_MESSAGE = 'RECEIVED_SNACKBAR_MESSAGE';\nexport const CLOSE_SNACKBAR = 'CLOSE_SNACKBAR';\n\nexport const DEFAULT_STATE_SNACKBAR = {\n    message: {},\n    duration: null,\n    open: false,\n};\n\nexport default (state = DEFAULT_STATE_SNACKBAR, action) => {\n    switch (action.type) {\n        case RECEIVED_SNACKBAR_MESSAGE: {\n            return { ...state, ...action.value };\n        }\n        case CLOSE_SNACKBAR: {\n            return DEFAULT_STATE_SNACKBAR;\n        }\n        default:\n            return state;\n    }\n};\n\n// selectors\n\nexport const sGetSnackbar = state => state.snackbar || DEFAULT_STATE_SNACKBAR;\n","import {\n    RECEIVED_SNACKBAR_MESSAGE,\n    CLOSE_SNACKBAR,\n} from '../reducers/snackbar';\n\nexport const acReceivedSnackbarMessage = value => ({\n    type: RECEIVED_SNACKBAR_MESSAGE,\n    value,\n});\n\nexport const acCloseSnackbar = () => ({\n    type: CLOSE_SNACKBAR,\n});\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport Snackbar from '@material-ui/core/Snackbar';\n\nimport { sGetSnackbar } from '../../reducers/snackbar';\nimport { acCloseSnackbar } from '../../actions/snackbar';\n\nconst LOADING_DASHBOARD = 'LOADING_DASHBOARD';\nexport const loadingDashboardMsg = { name: '', type: LOADING_DASHBOARD };\n\nconst SnackbarMessageContent = ({ message }) => {\n    if (typeof message === 'object') {\n        //future message types:  switch(message.type)\n        return (\n            <span>\n                Loading <span style={{ fontWeight: 800 }}>{message.name}</span>{' '}\n                dashboard\n            </span>\n        );\n    }\n    return message;\n};\n\nexport const SnackbarMessage = props => {\n    return (\n        <Snackbar\n            open={props.snackbarOpen}\n            message={<SnackbarMessageContent message={props.snackbarMessage} />}\n            autoHideDuration={props.snackbarDuration}\n            onClose={props.onCloseSnackbar}\n        />\n    );\n};\n\nconst mapStateToProps = state => {\n    const { message, duration, open } = sGetSnackbar(state);\n    return {\n        snackbarOpen: open,\n        snackbarMessage: message,\n        snackbarDuration: duration,\n    };\n};\n\nexport default connect(\n    mapStateToProps,\n    {\n        onCloseSnackbar: acCloseSnackbar,\n    }\n)(SnackbarMessage);\n","import isObject from 'lodash/isObject';\nimport { apiFetchFavorite, getMapFields } from '../../../api/metadata';\nimport {\n    REPORT_TABLE,\n    CHART,\n    MAP,\n    EVENT_REPORT,\n    EVENT_CHART,\n    itemTypeMap,\n    getPlugin,\n} from '../../../modules/itemTypes';\nimport { getBaseUrl, getWithoutId } from '../../../modules/util';\nimport { getGridItemDomId } from '../../ItemGrid/gridUtil';\n\nexport const THEMATIC_LAYER = 'thematic';\n\nexport const pluginIsAvailable = (item = {}, visualization = {}) => {\n    const type = visualization.activeType || item.type;\n\n    return !!getPlugin(type);\n};\n\nexport const extractFavorite = item => {\n    if (!isObject(item)) {\n        return null;\n    }\n\n    switch (item.type) {\n        case REPORT_TABLE:\n            return item.reportTable;\n        case CHART:\n            return item.chart;\n        case MAP:\n            return item.map;\n        case EVENT_REPORT:\n            return item.eventReport;\n        case EVENT_CHART:\n            return item.eventChart;\n        default:\n            return (\n                item.reportTable ||\n                item.chart ||\n                item.map ||\n                item.eventReport ||\n                item.eventChart ||\n                {}\n            );\n    }\n};\n\nexport const extractMapView = map =>\n    map.mapViews && map.mapViews.find(mv => mv.layer.includes(THEMATIC_LAYER));\n\nexport const loadPlugin = (plugin, config, credentials) => {\n    if (!(plugin && plugin.load)) {\n        return;\n    }\n\n    plugin.url = credentials.baseUrl;\n    plugin.loadingIndicator = true;\n    plugin.dashboard = true;\n    if (credentials.auth) {\n        plugin.auth = credentials.auth;\n    }\n    plugin.load(config);\n};\n\nexport const getId = item => extractFavorite(item).id;\nexport const getName = item => extractFavorite(item).name;\nexport const getDescription = item => extractFavorite(item).description;\nexport const getLink = (item, d2) => {\n    const baseUrl = getBaseUrl(d2);\n    const appUrl = itemTypeMap[item.type].appUrl(getId(item));\n\n    return `${baseUrl}/${appUrl}`;\n};\n\nexport const load = async (\n    item,\n    visualization,\n    credentials,\n    activeType,\n    filter = {}\n) => {\n    const config = {\n        ...visualization,\n        el: getGridItemDomId(item.id),\n    };\n\n    const type = activeType || item.type;\n    const plugin = getPlugin(type);\n\n    loadPlugin(plugin, config, credentials);\n};\n\nexport const fetch = async item => {\n    const fetchedFavorite = await apiFetchFavorite(getId(item), item.type, {\n        fields: item.type === MAP ? getMapFields() : null,\n    });\n\n    return fetchedFavorite;\n};\n\nexport const resize = item => {\n    const plugin = getPlugin(item.type);\n\n    if (plugin && plugin.resize) {\n        plugin.resize(getGridItemDomId(item.id));\n    }\n};\n\nexport const unmount = (item, activeType) => {\n    const plugin = getPlugin(activeType);\n\n    if (plugin && plugin.unmount) {\n        plugin.unmount(getGridItemDomId(item.id));\n    }\n};\n\nexport const getVisualizationConfig = (\n    visualization,\n    originalType,\n    activeType\n) => {\n    if (originalType === MAP && originalType !== activeType) {\n        const extractedMapView = extractMapView(visualization);\n\n        if (extractedMapView === undefined) {\n            return null;\n        }\n\n        return getWithoutId({\n            ...visualization,\n            ...extractedMapView,\n            mapViews: undefined,\n        });\n    }\n\n    return getWithoutId(visualization);\n};\n","import {\n    SET_SELECTED_ID,\n    SET_SELECTED_ISLOADING,\n    SET_SELECTED_SHOWDESCRIPTION,\n} from '../reducers/selected';\nimport {\n    RECEIVED_VISUALIZATION,\n    RECEIVED_ACTIVE_VISUALIZATION,\n} from '../reducers/visualizations';\nimport { sGetSelectedIsLoading } from '../reducers/selected';\nimport { sGetUserUsername } from '../reducers/user';\nimport { getCustomDashboards, sGetDashboardById } from '../reducers/dashboards';\nimport { apiFetchDashboard } from '../api/dashboards';\nimport { acSetDashboardItems, acAppendDashboards } from './dashboards';\nimport { withShape } from '../components/ItemGrid/gridUtil';\nimport { tGetMessages } from '../components/Item/MessagesItem/actions';\nimport { acReceivedSnackbarMessage, acCloseSnackbar } from './snackbar';\nimport { storePreferredDashboardId } from '../api/localStorage';\nimport { loadingDashboardMsg } from '../components/SnackbarMessage/SnackbarMessage';\nimport {\n    REPORT_TABLE,\n    CHART,\n    MAP,\n    EVENT_REPORT,\n    EVENT_CHART,\n    MESSAGES,\n} from '../modules/itemTypes';\nimport { extractFavorite } from '../components/Item/VisualizationItem/plugin';\nimport { orObject } from '../modules/util';\n\n// actions\n\nexport const acSetSelectedId = value => ({\n    type: SET_SELECTED_ID,\n    value,\n});\n\nexport const acSetSelectedIsLoading = value => ({\n    type: SET_SELECTED_ISLOADING,\n    value,\n});\n\nexport const acSetSelectedShowDescription = value => ({\n    type: SET_SELECTED_SHOWDESCRIPTION,\n    value,\n});\n\nexport const acReceivedVisualization = value => ({\n    type: RECEIVED_VISUALIZATION,\n    value,\n});\n\nexport const acReceivedActiveVisualization = (id, type, activeType) => {\n    const action = {\n        type: RECEIVED_ACTIVE_VISUALIZATION,\n        id,\n    };\n\n    if (activeType !== type) {\n        action.activeType = activeType;\n    }\n\n    return action;\n};\n\nexport const tLoadDashboard = id => async (dispatch, getState) => {\n    try {\n        const dash = await apiFetchDashboard(id);\n        dispatch(acAppendDashboards(dash));\n\n        return Promise.resolve(dash);\n    } catch (err) {\n        console.log('Error: ', err);\n        return err;\n    }\n};\n\n// thunks\nexport const tSetSelectedDashboardById = id => async (dispatch, getState) => {\n    dispatch(acSetSelectedIsLoading(true));\n\n    const snackbarTimeout = setTimeout(() => {\n        const dashboardName = orObject(sGetDashboardById(getState(), id))\n            .displayName;\n        if (sGetSelectedIsLoading(getState()) && dashboardName) {\n            loadingDashboardMsg.name = dashboardName;\n\n            dispatch(\n                acReceivedSnackbarMessage({\n                    message: loadingDashboardMsg,\n                    open: true,\n                })\n            );\n        }\n    }, 500);\n\n    const onSuccess = selected => {\n        const customDashboard = getCustomDashboards(selected)[0];\n\n        dispatch(\n            acSetDashboardItems(withShape(customDashboard.dashboardItems))\n        );\n\n        storePreferredDashboardId(sGetUserUsername(getState()), id);\n\n        // add visualizations to store\n        customDashboard.dashboardItems.forEach(item => {\n            switch (item.type) {\n                case REPORT_TABLE:\n                case CHART:\n                case MAP:\n                case EVENT_REPORT:\n                case EVENT_CHART:\n                    dispatch(acReceivedVisualization(extractFavorite(item)));\n                    break;\n                case MESSAGES:\n                    dispatch(tGetMessages(id));\n                    break;\n                default:\n                    break;\n            }\n        });\n\n        dispatch(acSetSelectedId(id));\n\n        dispatch(acSetSelectedIsLoading(false));\n\n        clearTimeout(snackbarTimeout);\n\n        dispatch(acCloseSnackbar());\n\n        return selected;\n    };\n\n    const onError = error => {\n        console.log('Error: ', error);\n        return error;\n    };\n\n    try {\n        const selected = await dispatch(tLoadDashboard(id));\n\n        return onSuccess(selected);\n    } catch (err) {\n        return onError(err);\n    }\n};\n","export const getPreferredDashboardId = username =>\n    localStorage.getItem(`dhis2.dashboard.current.${username}`) || undefined;\n\nexport const storePreferredDashboardId = (username, dashboardId) => {\n    localStorage.setItem(`dhis2.dashboard.current.${username}`, dashboardId);\n};\n","import { RECEIVED_MESSAGES } from '../../../reducers/messages';\nimport { getMessages } from '../../../api/messages';\n\nconst onError = (action, error) => {\n    console.log(`Error in action ${action}: ${error}`);\n    return error;\n};\n\nexport const receivedMessages = value => ({\n    type: RECEIVED_MESSAGES,\n    value,\n});\n\nexport const tGetMessages = dashboardItemId => async dispatch => {\n    try {\n        const messages = await getMessages();\n        const { messageConversations } = messages;\n\n        return dispatch(receivedMessages(messageConversations));\n    } catch (err) {\n        return onError('Get Messages', err);\n    }\n};\n","/** @module reducers/editDashboard */\nimport update from 'immutability-helper';\nimport isEmpty from 'lodash/isEmpty';\nimport { orArray, orObject } from '../modules/util';\n\nexport const RECEIVED_EDIT_DASHBOARD = 'RECEIVED_EDIT_DASHBOARD';\nexport const RECEIVED_NOT_EDITING = 'RECEIVED_NOT_EDITING';\nexport const START_NEW_DASHBOARD = 'START_NEW_DASHBOARD';\nexport const RECEIVED_TITLE = 'RECEIVED_TITLE';\nexport const RECEIVED_DESCRIPTION = 'RECEIVED_DESCRIPTION';\nexport const ADD_DASHBOARD_ITEM = 'ADD_DASHBOARD_ITEM';\nexport const REMOVE_DASHBOARD_ITEM = 'REMOVE_DASHBOARD_ITEM';\nexport const UPDATE_DASHBOARD_ITEM = 'UPDATE_DASHBOARD_ITEM';\nexport const RECEIVED_DASHBOARD_LAYOUT = 'RECEIVED_DASHBOARD_LAYOUT';\n\nexport const DEFAULT_STATE_EDIT_DASHBOARD = {};\nexport const NEW_DASHBOARD_STATE = {\n    id: '',\n    name: '',\n    access: {},\n    description: '',\n    dashboardItems: [],\n};\n\nexport default (state = DEFAULT_STATE_EDIT_DASHBOARD, action) => {\n    switch (action.type) {\n        case RECEIVED_EDIT_DASHBOARD:\n            const newState = {};\n            Object.keys(NEW_DASHBOARD_STATE).map(\n                k => (newState[k] = action.value[k])\n            );\n            return newState;\n        case RECEIVED_NOT_EDITING:\n            return DEFAULT_STATE_EDIT_DASHBOARD;\n        case START_NEW_DASHBOARD:\n            return NEW_DASHBOARD_STATE;\n        case RECEIVED_TITLE: {\n            return Object.assign({}, state, { name: action.value });\n        }\n        case RECEIVED_DESCRIPTION: {\n            return Object.assign({}, state, {\n                description: action.value,\n            });\n        }\n        case ADD_DASHBOARD_ITEM:\n            return update(state, {\n                dashboardItems: { $unshift: [action.value] },\n            });\n        case REMOVE_DASHBOARD_ITEM: {\n            const idToRemove = action.value;\n\n            const dashboardItemIndex = state.dashboardItems.findIndex(\n                item => item.id === idToRemove\n            );\n\n            if (dashboardItemIndex > -1) {\n                return update(state, {\n                    dashboardItems: {\n                        $splice: [[dashboardItemIndex, 1]],\n                    },\n                });\n            }\n\n            return state;\n        }\n        case RECEIVED_DASHBOARD_LAYOUT: {\n            const stateItems = orArray(state.dashboardItems);\n\n            const newStateItems = action.value.map(({ x, y, w, h, i }) => {\n                const stateItem = stateItems.find(si => si.id === i);\n\n                return Object.assign({}, stateItem, { w, h, x, y });\n            });\n\n            return update(state, {\n                dashboardItems: { $set: newStateItems },\n            });\n        }\n        case UPDATE_DASHBOARD_ITEM: {\n            const dashboardItem = action.value;\n\n            const dashboardItemIndex = state.dashboardItems.findIndex(\n                item => item.id === dashboardItem.id\n            );\n\n            if (dashboardItemIndex > -1) {\n                const newState = update(state, {\n                    dashboardItems: {\n                        $splice: [[dashboardItemIndex, 1, dashboardItem]],\n                    },\n                });\n\n                return newState;\n            }\n\n            return state;\n        }\n        default:\n            return state;\n    }\n};\n\n// root selector\n\nexport const sGetEditDashboardRoot = state => state.editDashboard;\n\n// selectors\n\nexport const sGetIsEditing = state => !isEmpty(state.editDashboard);\n\nexport const sGetIsNewDashboard = state => {\n    return (\n        !isEmpty(state.editDashboard) && sGetEditDashboardRoot(state).id === ''\n    );\n};\n\nexport const sGetEditDashboardItems = state =>\n    orObject(sGetEditDashboardRoot(state)).dashboardItems;\n","export const CLEAR_EDIT_ITEM_FILTERS = 'CLEAR_EDIT_ITEM_FILTERS';\nexport const REMOVE_EDIT_ITEM_FILTER = 'REMOVE_EDIT_ITEM_FILTER';\nexport const SET_EDIT_ITEM_FILTERS = 'SET_EDIT_ITEM_FILTERS';\n\nexport const DEFAULT_STATE_EDIT_ITEM_FILTERS = {};\n\nexport default (state = DEFAULT_STATE_EDIT_ITEM_FILTERS, action) => {\n    switch (action.type) {\n        case REMOVE_EDIT_ITEM_FILTER: {\n            const newState = { ...state };\n\n            delete newState[action.id];\n\n            return newState;\n        }\n        case SET_EDIT_ITEM_FILTERS: {\n            return action.filters;\n        }\n        case CLEAR_EDIT_ITEM_FILTERS: {\n            return DEFAULT_STATE_EDIT_ITEM_FILTERS;\n        }\n        default:\n            return state;\n    }\n};\n\n// selectors\n\nexport const sGetEditItemFiltersRoot = state => state.editItemFilters;\n\nexport const sGetEditFiltersKeys = state =>\n    Object.keys(sGetEditItemFiltersRoot(state));\n","export const CLEAR_ITEM_FILTERS = 'CLEAR_ITEM_FILTERS';\nexport const SET_ITEM_FILTERS = 'SET_ITEM_FILTERS';\nexport const ADD_ITEM_FILTER = 'ADD_ITEM_FILTER';\nexport const REMOVE_ITEM_FILTER = 'REMOVE_ITEM_FILTER';\n\nexport const DEFAULT_STATE_ITEM_FILTERS = {};\n\nexport default (state = DEFAULT_STATE_ITEM_FILTERS, action) => {\n    switch (action.type) {\n        case ADD_ITEM_FILTER: {\n            return {\n                ...state,\n                [action.filter.id]: action.filter.value,\n            };\n        }\n        case REMOVE_ITEM_FILTER: {\n            const newState = { ...state };\n\n            delete newState[action.id];\n\n            return newState;\n        }\n        case SET_ITEM_FILTERS: {\n            return action.filters;\n        }\n        case CLEAR_ITEM_FILTERS: {\n            return DEFAULT_STATE_ITEM_FILTERS;\n        }\n        default:\n            return state;\n    }\n};\n\n// selectors\n\nexport const sGetItemFiltersRoot = state => state.itemFilters;\n\nexport const sGetFiltersKeys = state => Object.keys(sGetItemFiltersRoot(state));\n","import {\n    ADD_ITEM_FILTER,\n    REMOVE_ITEM_FILTER,\n    SET_ITEM_FILTERS,\n    CLEAR_ITEM_FILTERS,\n} from '../reducers/itemFilters';\n\nexport const FILTER_ORG_UNIT = 'ou';\n\n// actions\n\nexport const acAddItemFilter = filter => ({\n    type: ADD_ITEM_FILTER,\n    filter,\n});\n\nexport const acRemoveItemFilter = id => ({\n    type: REMOVE_ITEM_FILTER,\n    id,\n});\n\nexport const acClearItemFilters = () => ({\n    type: CLEAR_ITEM_FILTERS,\n});\n\nexport const acSetItemFilters = filters => ({\n    type: SET_ITEM_FILTERS,\n    filters,\n});\n","import {\n    REMOVE_EDIT_ITEM_FILTER,\n    SET_EDIT_ITEM_FILTERS,\n    CLEAR_EDIT_ITEM_FILTERS,\n} from '../reducers/editItemFilters';\n\n// actions\n\nexport const acRemoveEditItemFilter = id => ({\n    type: REMOVE_EDIT_ITEM_FILTER,\n    id,\n});\n\nexport const acClearEditItemFilters = () => ({\n    type: CLEAR_EDIT_ITEM_FILTERS,\n});\n\nexport const acSetEditItemFilters = filters => ({\n    type: SET_EDIT_ITEM_FILTERS,\n    filters,\n});\n","import { getInstance } from 'd2';\n\nconst onError = error => console.log('Error: ', error);\n\nconst saveDashboard = (dashboard, data) => {\n    const { name, description, dashboardItems } = data;\n\n    dashboard.name = name;\n    dashboard.description = description;\n    dashboard.dashboardItems = dashboardItems.map(item =>\n        Object.assign({}, item, { width: item.w, height: item.h })\n    );\n\n    return dashboard.save().then(msg => msg.response.uid);\n};\n\nexport const updateDashboard = data => {\n    return getInstance()\n        .then(d2 => {\n            return d2.models.dashboards\n                .get(data.id)\n                .then(dashboard => saveDashboard(dashboard, data));\n        })\n        .catch(onError);\n};\n\nexport const postDashboard = data => {\n    return getInstance().then(d2 => {\n        const dashboard = d2.models.dashboards.create();\n\n        return saveDashboard(dashboard, data);\n    });\n};\n","import { generateUid } from 'd2/uid';\n\nimport {\n    RECEIVED_EDIT_DASHBOARD,\n    START_NEW_DASHBOARD,\n    RECEIVED_NOT_EDITING,\n    RECEIVED_TITLE,\n    RECEIVED_DESCRIPTION,\n    RECEIVED_DASHBOARD_LAYOUT,\n    ADD_DASHBOARD_ITEM,\n    UPDATE_DASHBOARD_ITEM,\n    REMOVE_DASHBOARD_ITEM,\n} from '../reducers/editDashboard';\nimport { sGetEditDashboardRoot } from '../reducers/editDashboard';\nimport { updateDashboard, postDashboard } from '../api/editDashboard';\nimport { tSetSelectedDashboardById } from '../actions/selected';\nimport { NEW_ITEM_SHAPE } from '../components/ItemGrid/gridUtil';\nimport {\n    itemTypeMap,\n    isSpacerType,\n    TEXT,\n    emptyTextItemContent,\n    isTextType,\n} from '../modules/itemTypes';\n\nconst onError = error => {\n    console.log('Error (Saving Dashboard): ', error);\n    return error;\n};\n\n// actions\n\nexport const acSetEditDashboard = (dashboard, items) => {\n    const val = {\n        ...dashboard,\n        dashboardItems: items,\n    };\n\n    return {\n        type: RECEIVED_EDIT_DASHBOARD,\n        value: val,\n    };\n};\n\nexport const acSetEditNewDashboard = () => ({\n    type: START_NEW_DASHBOARD,\n});\n\nexport const acClearEditDashboard = () => ({\n    type: RECEIVED_NOT_EDITING,\n});\n\nexport const acSetDashboardTitle = value => ({\n    type: RECEIVED_TITLE,\n    value,\n});\n\nexport const acSetDashboardDescription = value => ({\n    type: RECEIVED_DESCRIPTION,\n    value,\n});\n\nexport const acUpdateDashboardLayout = value => ({\n    type: RECEIVED_DASHBOARD_LAYOUT,\n    value,\n});\n\nexport const acAddDashboardItem = item => {\n    const type = item.type;\n    delete item.type;\n    const itemPropName = itemTypeMap[type].propName;\n\n    return {\n        type: ADD_DASHBOARD_ITEM,\n        value: {\n            id: generateUid(),\n            type,\n            [itemPropName]: item.content,\n            ...NEW_ITEM_SHAPE,\n        },\n    };\n};\n\nexport const acUpdateDashboardItem = item => ({\n    type: UPDATE_DASHBOARD_ITEM,\n    value: item,\n});\n\nexport const acRemoveDashboardItem = value => ({\n    type: REMOVE_DASHBOARD_ITEM,\n    value,\n});\n\n// thunks\n\nexport const tSaveDashboard = () => async (dispatch, getState) => {\n    const dashboard = sGetEditDashboardRoot(getState());\n\n    const dashboardItems = dashboard.dashboardItems.map(item => {\n        const text = isTextType(item)\n            ? item.text || emptyTextItemContent\n            : null;\n\n        const type = isSpacerType(item) ? TEXT : item.type;\n\n        return {\n            ...item,\n            ...(text ? { text } : {}),\n            type,\n        };\n    });\n\n    const dashboardToSave = {\n        ...dashboard,\n        dashboardItems,\n    };\n\n    try {\n        const dashboardId = dashboardToSave.id\n            ? await updateDashboard(dashboardToSave)\n            : await postDashboard(dashboardToSave);\n\n        dispatch(acClearEditDashboard());\n        await dispatch(tSetSelectedDashboardById(dashboardId));\n\n        return Promise.resolve(dashboardId);\n    } catch (error) {\n        onError(error);\n    }\n};\n","import {\n    SET_DASHBOARDS,\n    ADD_DASHBOARDS,\n    SET_DASHBOARD_STARRED,\n    SET_DASHBOARD_DISPLAY_NAME,\n    SET_DASHBOARD_ITEMS,\n} from '../reducers/dashboards';\nimport {\n    getCustomDashboards,\n    sGetDashboardById,\n    sGetDashboardsSortedByStarred,\n} from '../reducers/dashboards';\nimport { sGetUserUsername } from '../reducers/user';\nimport { tSetSelectedDashboardById, acSetSelectedId } from './selected';\nimport { sGetSelectedId } from '../reducers/selected';\nimport { sGetIsEditing } from '../reducers/editDashboard';\nimport { sGetEditItemFiltersRoot } from '../reducers/editItemFilters';\nimport { acSetItemFilters, acClearItemFilters } from './itemFilters';\nimport { acClearEditItemFilters } from './editItemFilters';\nimport { acClearEditDashboard } from './editDashboard';\nimport {\n    apiFetchDashboards,\n    apiStarDashboard,\n    apiDeleteDashboard,\n} from '../api/dashboards';\nimport { getPreferredDashboardId } from '../api/localStorage';\nimport { arrayToIdMap } from '../modules/util';\n\n// actions\n\nexport const acSetDashboards = dashboards => ({\n    type: SET_DASHBOARDS,\n    value: arrayToIdMap(getCustomDashboards(dashboards)),\n});\n\nexport const acAppendDashboards = dashboards => ({\n    type: ADD_DASHBOARDS,\n    value: arrayToIdMap(getCustomDashboards(dashboards)),\n});\n\nexport const acSetDashboardStarred = (dashboardId, isStarred) => ({\n    type: SET_DASHBOARD_STARRED,\n    dashboardId: dashboardId,\n    value: isStarred,\n});\n\nexport const acSetDashboardDisplayName = (dashboardId, value) => ({\n    type: SET_DASHBOARD_DISPLAY_NAME,\n    dashboardId,\n    value,\n});\n\nexport const acSetDashboardItems = value => ({\n    type: SET_DASHBOARD_ITEMS,\n    value,\n});\n\n// thunks\n\nexport const tFetchDashboards = () => async dispatch => {\n    const collection = await apiFetchDashboards();\n    dispatch(acSetDashboards(collection.toArray()));\n};\n\nexport const tSelectDashboard = id => async (dispatch, getState) => {\n    const onError = error => {\n        console.log('Error (apiFetchDashboards): ', error);\n        return error;\n    };\n\n    try {\n        const state = getState();\n\n        let dashboardToSelect = null;\n        if (id) {\n            dashboardToSelect = sGetDashboardById(state, id) || null;\n        } else {\n            const preferredId = getPreferredDashboardId(\n                sGetUserUsername(state)\n            );\n            const dash = sGetDashboardById(state, preferredId);\n            dashboardToSelect =\n                preferredId && dash\n                    ? dash\n                    : sGetDashboardsSortedByStarred(state)[0];\n        }\n\n        if (dashboardToSelect) {\n            dispatch(tSetSelectedDashboardById(dashboardToSelect.id));\n\n            if (dashboardToSelect.id === sGetSelectedId(state)) {\n                if (sGetIsEditing(state)) {\n                    // disable filters when switching to edit mode\n                    dispatch(acClearItemFilters());\n                } else {\n                    // enable filters when switching to view mode\n                    dispatch(acSetItemFilters(sGetEditItemFiltersRoot(state)));\n                }\n            } else {\n                // clear filters when switching dashboard\n                dispatch(acClearEditItemFilters());\n                dispatch(acClearItemFilters());\n            }\n        } else {\n            dispatch(acSetSelectedId(false));\n        }\n    } catch (err) {\n        return onError(err);\n    }\n};\n\nexport const tStarDashboard = (id, isStarred) => async (dispatch, getState) => {\n    const onSuccess = id => {\n        dispatch(acSetDashboardStarred(id, isStarred));\n        return id;\n    };\n\n    const onError = error => {\n        console.log('Error (apiStarDashboard): ', error);\n        return error;\n    };\n    try {\n        await apiStarDashboard(id, isStarred);\n        return onSuccess(id);\n    } catch (err) {\n        return onError(err);\n    }\n};\n\nexport const tDeleteDashboard = id => async (dispatch, getState) => {\n    try {\n        await apiDeleteDashboard(id);\n        dispatch(acClearEditDashboard());\n        dispatch(acSetSelectedId());\n        dispatch(acSetDashboardItems([]));\n\n        await dispatch(tFetchDashboards());\n\n        return Promise.resolve();\n    } catch (err) {\n        console.log('Error (deleteDashboard): ', err);\n        return err;\n    }\n};\n","/** @module reducers/controlBar */\nimport { combineReducers } from 'redux';\nimport { validateReducer } from '../modules/util';\n\nexport const SET_CONTROLBAR_USER_ROWS = 'SET_CONTROLBAR_USER_ROWS';\n\nexport const DEFAULT_STATE_CONTROLBAR_ROWS = 1;\n\nconst userRows = (state = DEFAULT_STATE_CONTROLBAR_ROWS, action) => {\n    switch (action.type) {\n        case SET_CONTROLBAR_USER_ROWS:\n            return validateReducer(action.value, DEFAULT_STATE_CONTROLBAR_ROWS);\n        default:\n            return state;\n    }\n};\n\nexport default combineReducers({\n    userRows,\n});\n\n/**\n * Selectors that point to specific props in the state object\n * @function\n * @param {Object} state\n * @returns {Object}\n */\nexport const sGetControlBarRoot = state => state.controlBar;\n\n// Selector dependency level 2\n\nexport const sGetControlBarUserRows = state =>\n    sGetControlBarRoot(state).userRows;\n","import { getInstance } from 'd2';\nimport { DEFAULT_STATE_CONTROLBAR_ROWS } from '../reducers/controlBar';\n\nconst NAMESPACE = 'dashboard';\nconst KEY = 'controlBarRows';\n\nconst hasNamespace = async d2 => await d2.currentUser.dataStore.has(NAMESPACE);\n\nconst getNamespace = async (d2, hasNamespace) =>\n    hasNamespace\n        ? await d2.currentUser.dataStore.get(NAMESPACE)\n        : await d2.currentUser.dataStore.create(NAMESPACE);\n\nexport const apiGetControlBarRows = async () => {\n    const d2 = await getInstance();\n    const namespace = await getNamespace(d2, await hasNamespace(d2));\n    const hasKey = namespace.keys && namespace.keys.find(key => key === KEY);\n\n    if (hasKey) {\n        return await namespace.get(KEY);\n    } else {\n        await apiPostControlBarRows(DEFAULT_STATE_CONTROLBAR_ROWS, namespace);\n        console.log(\n            '(These errors to /userDataStore/dashboard can be ignored)'\n        );\n        return DEFAULT_STATE_CONTROLBAR_ROWS;\n    }\n};\n\nexport const apiPostControlBarRows = async (rows, namespace) => {\n    const d2 = await getInstance();\n    const ns = namespace || (await getNamespace(d2, hasNamespace));\n\n    ns.set(KEY, rows);\n};\n","import { SET_CONTROLBAR_USER_ROWS } from '../reducers/controlBar';\nimport { apiGetControlBarRows } from '../api/controlBar';\n\n// actions\n\nexport const acSetControlBarUserRows = rows => ({\n    type: SET_CONTROLBAR_USER_ROWS,\n    value: rows,\n});\n\n// thunks\n\nexport const tSetControlBarRows = () => async (dispatch, getState) => {\n    const onSuccess = rows => {\n        dispatch(acSetControlBarUserRows(rows));\n    };\n\n    const onError = error => {\n        console.log('Error (apiGetControlBarRows): ', error);\n        return error;\n    };\n\n    try {\n        const controlBarRows = await apiGetControlBarRows();\n        return onSuccess(controlBarRows);\n    } catch (err) {\n        return onError(err);\n    }\n};\n","import { FIXED_DIMENSIONS } from '@dhis2/d2-ui-analytics';\n\nexport const SET_DIMENSIONS = 'SET_DIMENSIONS';\nexport const DEFAULT_DIMENSIONS = {\n    pe: FIXED_DIMENSIONS.pe,\n    ou: FIXED_DIMENSIONS.ou,\n};\n\nexport default (state = DEFAULT_DIMENSIONS, action) => {\n    switch (action.type) {\n        case SET_DIMENSIONS: {\n            return {\n                ...DEFAULT_DIMENSIONS,\n                ...action.value,\n            };\n        }\n        default:\n            return state;\n    }\n};\n\nexport const sGetDimensions = state => state.dimensions;\n","export const SET_SETTINGS = 'SET_SETTINGS';\nexport const ADD_SETTINGS = 'ADD_SETTINGS';\n\nexport const DEFAULT_SETTINGS = {\n    keyDateFormat: 'yyyy-MM-dd',\n    keyAnalysisRelativePeriod: 'LAST_12_MONTHS',\n    keyAnalysisDigitGroupSeparator: 'SPACE',\n    displayNameProperty: 'displayName',\n    uiLocale: 'en',\n    rootOrganisationUnit: {},\n};\n\nexport default (state = DEFAULT_SETTINGS, action) => {\n    switch (action.type) {\n        case SET_SETTINGS: {\n            return Object.assign({}, action.value);\n        }\n        case ADD_SETTINGS: {\n            return {\n                ...state,\n                ...action.value,\n            };\n        }\n        default:\n            return state;\n    }\n};\n\n// Selectors\n\nexport const sGetSettings = state => state.settings;\n\nexport const sGetSettingsDisplayNameProperty = state =>\n    sGetSettings(state).displayNameProperty;\n\nexport const sGetRootOrgUnit = state =>\n    sGetSettings(state).rootOrganisationUnit;\n\nexport const sGetRelativePeriod = state =>\n    sGetSettings(state).keyAnalysisRelativePeriod;\n\nexport const sGetUiLocale = state => sGetSettings(state).uiLocale;\n","import keyBy from 'lodash/keyBy';\nimport sortBy from 'lodash/sortBy';\nimport { SET_DIMENSIONS } from '../reducers/dimensions';\nimport { apiFetchDimensions } from '@dhis2/d2-ui-analytics';\nimport { sGetSettingsDisplayNameProperty } from '../reducers/settings';\n\nexport const acSetDimensions = dimensions => ({\n    type: SET_DIMENSIONS,\n    value: keyBy(sortBy(dimensions, [d => d.name.toLowerCase()]), 'id'),\n});\n\nexport const tSetDimensions = d2 => async (dispatch, getState) => {\n    const onSuccess = dimensions => {\n        dispatch(acSetDimensions(dimensions));\n    };\n\n    const onError = error => {\n        console.log('Error (apiFetchDimensions): ', error);\n        return error;\n    };\n\n    try {\n        const displayNameProp = sGetSettingsDisplayNameProperty(getState());\n        const dimensions = await apiFetchDimensions(d2, displayNameProp);\n\n        // filter out CATEGORY that are not of type ATTRIBUTE\n        const filteredDimensions = dimensions.filter(\n            dim =>\n                dim.dimensionType !== 'CATEGORY' ||\n                (dim.dimensionType === 'CATEGORY' &&\n                    dim.dataDimensionType === 'ATTRIBUTE')\n        );\n        return onSuccess(filteredDimensions);\n    } catch (err) {\n        return onError(err);\n    }\n};\n","const lightGrey = '#ECEFF1';\nconst lightMediumGrey = '#9E9E9E';\nconst mediumGrey = '#393939';\nconst charcoalGrey = '#8C8C8C';\nconst darkGrey = '#494949';\nconst muiDefaultGrey = '#757575';\n\nconst red = '#E53935';\n\nconst paleBlue = '#E3F2FD';\nconst lightBlue = '#EAF4FF'; //'#63A4FF'\nconst royalBlue = '#004BA0';\n\nconst mint = '#B2DFDB';\nconst lightGreen = '#48A999';\nconst mediumGreen = '#00796B';\nconst darkGreen = '#004C40';\n\nconst paleYellow = '#FFF8E1';\n\nconst white = '#FFFFFF';\nconst black = 'rgba(0,0,0,0.87)';\n\nexport const colors = {\n    lightGrey,\n    lightMediumGrey,\n    mediumGrey,\n    charcoalGrey,\n    darkGrey,\n    muiDefaultGrey,\n    red,\n    paleBlue,\n    lightBlue,\n    royalBlue,\n    mint,\n    lightGreen,\n    mediumGreen,\n    darkGreen,\n    paleYellow,\n    white,\n    black,\n};\n","import { getInstance } from 'd2';\n\nexport const apiPostDataStatistics = async (eventType, id) => {\n    const d2 = await getInstance();\n    const url = `dataStatistics?eventType=${eventType}&favorite=${id}`;\n\n    d2.Api.getApi().post(url);\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport MuiChip from 'material-ui/Chip';\nimport Avatar from 'material-ui/Avatar';\nimport IconStar from '@material-ui/icons/Star';\nimport { Link } from 'react-router-dom';\nimport debounce from 'lodash/debounce';\n\nimport { colors } from '../../modules/colors';\nimport { apiPostDataStatistics } from '../../api/dataStatistics';\n\nconst chipTheme = {\n    default: {\n        labelColor: colors.black,\n        backgroundColor: colors.lightGrey,\n    },\n    primary: {\n        labelColor: colors.black,\n        backgroundColor: colors.lightGrey,\n    },\n    accent: {\n        labelColor: colors.white,\n        backgroundColor: colors.mediumGreen,\n    },\n};\n\nconst d = '30px';\n\nconst avatar = selected => {\n    const avatarProps = {\n        color: colors.white,\n        backgroundColor: selected ? 'transparent' : colors.lightMediumGrey,\n        style: { height: d, width: d },\n    };\n\n    return <Avatar icon={<IconStar />} {...avatarProps} />;\n};\n\nconst DashboardItemChip = ({ starred, selected, label, dashboardId }) => {\n    const chipColorProps = selected\n        ? chipTheme.accent\n        : starred\n        ? chipTheme.primary\n        : chipTheme.default;\n\n    const labelStyle = { fontSize: '14px', fontWeight: 400, lineHeight: d };\n    const style = { margin: 3, height: d, cursor: 'pointer' };\n\n    const props = {\n        style,\n        labelStyle,\n        ...chipColorProps,\n    };\n\n    return (\n        <Link\n            style={{\n                display: 'inline-block',\n                verticalAlign: 'top',\n                textDecoration: 'none',\n            }}\n            to={`/${dashboardId}`}\n            onClick={debounce(\n                () => apiPostDataStatistics('DASHBOARD_VIEW', dashboardId),\n                500\n            )}\n        >\n            <MuiChip {...props}>\n                {starred ? avatar(selected) : null}\n                {label}\n            </MuiChip>\n        </Link>\n    );\n};\n\nDashboardItemChip.propTypes = {\n    starred: PropTypes.bool.isRequired,\n    selected: PropTypes.bool.isRequired,\n    label: PropTypes.string.isRequired,\n};\n\nexport default DashboardItemChip;\n","import React from 'react';\nimport { colors } from '../modules/colors';\n\nconst AddCircleIcon = () => (\n    <svg\n        xmlns=\"http://www.w3.org/2000/svg\"\n        width=\"32\"\n        height=\"32\"\n        fill={colors.mediumGreen}\n        viewBox=\"0 0 24 24\"\n    >\n        <path d=\"M12 2C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2zm4 11h-3v3c0 .55-.45 1-1 1s-1-.45-1-1v-3H8c-.55 0-1-.45-1-1s.45-1 1-1h3V8c0-.55.45-1 1-1s1 .45 1 1v3h3c.55 0 1 .45 1 1s-.45 1-1 1z\" />\n    </svg>\n);\n\nexport default AddCircleIcon;\n","import { combineReducers } from 'redux';\nimport { validateReducer } from '../modules/util';\n\nexport const SET_DASHBOARDS_FILTER_NAME = 'SET_DASHBOARDS_FILTER_NAME';\nexport const SET_DASHBOARDS_FILTER_OWNER = 'SET_DASHBOARDS_FILTER_OWNER';\nexport const SET_DASHBOARDS_FILTER_ORDER = 'SET_DASHBOARDS_FILTER_ORDER';\n\nexport const ownerData = [\n    { id: 'ALL', value: 'All users' },\n    { id: 'ME', value: 'Created by me' },\n    { id: 'OTHERS', value: 'Created by others' },\n];\n\nexport const orderData = [\n    { id: 'NAME:ASC', value: 'Name (asc)' },\n    { id: 'NAME:ASC', value: 'Name (desc)' },\n    { id: 'ITEMS:ASC', value: 'Number of items (asc)' },\n    { id: 'ITEMS:ASC', value: 'Number of items (desc)' },\n    { id: 'CREATED:ASC', value: 'Created date (asc)' },\n    { id: 'CREATED:ASC', value: 'Created date (desc)' },\n];\n\nexport const DEFAULT_STATE_DASHBOARDS_FILTER_NAME = '';\nexport const DEFAULT_STATE_DASHBOARDS_FILTER_OWNER = ownerData[0].id;\nexport const DEFAULT_STATE_DASHBOARDS_FILTER_ORDER = orderData[0].id;\n\nconst name = (state = DEFAULT_STATE_DASHBOARDS_FILTER_NAME, action) => {\n    switch (action.type) {\n        case SET_DASHBOARDS_FILTER_NAME:\n            return validateReducer(\n                action.value,\n                DEFAULT_STATE_DASHBOARDS_FILTER_NAME\n            );\n        default:\n            return state;\n    }\n};\n\nconst owner = (state = DEFAULT_STATE_DASHBOARDS_FILTER_OWNER, action) => {\n    switch (action.type) {\n        case SET_DASHBOARDS_FILTER_OWNER:\n            return validateReducer(\n                action.value,\n                DEFAULT_STATE_DASHBOARDS_FILTER_NAME\n            );\n        default:\n            return state;\n    }\n};\n\nconst order = (state = DEFAULT_STATE_DASHBOARDS_FILTER_ORDER, action) => {\n    switch (action.type) {\n        case SET_DASHBOARDS_FILTER_ORDER:\n            return validateReducer(\n                action.value,\n                DEFAULT_STATE_DASHBOARDS_FILTER_ORDER\n            );\n        default:\n            return state;\n    }\n};\n\nexport default combineReducers({\n    name,\n    owner,\n    order,\n});\n\n// selectors\n\nexport const sGetDashboardsFilterRoot = state => state.dashboardsFilter;\n\n// selector dependency level 2\n\nexport const sGetFilterName = state => sGetDashboardsFilterRoot(state).name;\nexport const sGetFilterOwner = state => sGetDashboardsFilterRoot(state).owner;\nexport const sGetFilterOrder = state => sGetDashboardsFilterRoot(state).order;\n","import React, { Component, Fragment } from 'react';\nimport i18n from '@dhis2/d2-i18n';\nimport PropTypes from 'prop-types';\nimport TextField from 'material-ui/TextField';\nimport IconButton from 'material-ui/IconButton';\nimport IconClear from '@material-ui/icons/Clear';\nimport isEmpty from 'd2-utilizr/lib/isEmpty';\n\nimport { DEFAULT_STATE_DASHBOARDS_FILTER_NAME } from '../../reducers/dashboardsFilter';\n\nexport const KEYCODE_ENTER = 13;\nexport const KEYCODE_ESCAPE = 27;\n\nconst styles = {\n    filterField: {\n        fontSize: '14px',\n        width: '200px',\n        height: '30px',\n        top: '-1px',\n    },\n    filterFieldInput: {\n        top: '-9px',\n        left: '1px',\n    },\n    filterFieldUnderline: {\n        bottom: '10px',\n    },\n    filterFieldUnderlineFocus: {\n        borderColor: '#aaa',\n        borderWidth: '1px',\n    },\n    clearButton: {\n        width: '20px',\n        height: '24px',\n        padding: 0,\n        top: '-5px',\n        left: '-18px',\n    },\n    clearButtonIcon: {\n        width: '16px',\n        height: '16px',\n    },\n};\n\nexport class Filter extends Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            value: DEFAULT_STATE_DASHBOARDS_FILTER_NAME,\n        };\n    }\n\n    componentWillReceiveProps(nextProps) {\n        this.setState({\n            value: nextProps.name,\n        });\n    }\n\n    setFilterValue = event => {\n        event.preventDefault();\n\n        this.props.onChangeName(event.target.value);\n    };\n\n    handleKeyUp = event => {\n        switch (event.keyCode) {\n            case KEYCODE_ENTER:\n                this.props.onKeypressEnter();\n                break;\n            case KEYCODE_ESCAPE:\n                this.props.onChangeName();\n                break;\n            default:\n                break;\n        }\n    };\n\n    render() {\n        return (\n            <TextField\n                className=\"FilterField\"\n                value={this.state.value}\n                onChange={this.setFilterValue}\n                onKeyUp={this.handleKeyUp}\n                hintText={i18n.t('Search for a dashboard')}\n                style={styles.filterField}\n                inputStyle={styles.filterFieldInput}\n                hintStyle={styles.filterFieldHint}\n                underlineStyle={styles.filterFieldUnderline}\n                underlineFocusStyle={styles.filterFieldUnderlineFocus}\n            />\n        );\n    }\n}\n\nFilter.propTypes = {\n    name: PropTypes.string,\n    onChangeName: PropTypes.func,\n};\n\nFilter.defaultProps = {\n    name: '',\n    onChangeName: Function.prototype,\n};\n\nexport const ClearButton = ({ name, onChangeName }) => {\n    const disabled = isEmpty(name);\n\n    const clearFilter = () => onChangeName();\n\n    return (\n        <IconButton\n            style={Object.assign({}, styles.clearButton, {\n                opacity: disabled ? 0 : 1,\n            })}\n            iconStyle={styles.clearButtonIcon}\n            onClick={clearFilter}\n            disabled={disabled}\n        >\n            <IconClear color=\"action\" />\n        </IconButton>\n    );\n};\n\nClearButton.propTypes = {\n    name: PropTypes.string.isRequired,\n    onChangeName: PropTypes.func.isRequired,\n};\n\nexport default props => (\n    <Fragment>\n        <Filter {...props} />\n        <ClearButton {...props} />\n    </Fragment>\n);\n","import React from 'react';\nimport i18n from '@dhis2/d2-i18n';\nimport { withStyles } from '@material-ui/core/styles';\n\nimport { colors } from '../../modules/colors';\n\nexport const SHOWMORE_BAR_HEIGHT = 16;\n\nconst styles = {\n    showMore: {\n        color: colors.royalBlue,\n        cursor: 'pointer',\n        fontSize: 11,\n        fontWeight: 700,\n        height: SHOWMORE_BAR_HEIGHT,\n        paddingTop: 5,\n        textTransform: 'uppercase',\n        visibility: 'visible',\n    },\n};\n\nexport const ShowMoreButton = ({ onClick, isMaxHeight, classes }) => (\n    <div style={{ textAlign: 'center' }}>\n        <div className={classes.showMore} onClick={onClick}>\n            {isMaxHeight ? i18n.t('Show less') : i18n.t('Show more')}\n        </div>\n    </div>\n);\n\nexport default withStyles(styles)(ShowMoreButton);\n","import { END_FLAP_HEIGHT } from '@dhis2/d2-ui-core/control-bar/ControlBar';\nimport { SHOWMORE_BAR_HEIGHT } from './ShowMoreButton';\n\nexport const CONTROL_BAR_ROW_HEIGHT = 36;\nexport const FIRST_ROW_PADDING_HEIGHT = 10;\nexport const MIN_ROW_COUNT = 1;\n\nconst HEADERBAR_HEIGHT = 48;\n\nconst CONTROL_BAR_OUTER_HEIGHT_DIFF =\n    FIRST_ROW_PADDING_HEIGHT + SHOWMORE_BAR_HEIGHT - 2; // 2 pixel \"adjustment\"\n\nexport const getRowsHeight = rows => {\n    return rows * CONTROL_BAR_ROW_HEIGHT;\n};\n\nexport const getNumRowsFromHeight = height => {\n    return Math.floor(\n        (height - CONTROL_BAR_OUTER_HEIGHT_DIFF) / CONTROL_BAR_ROW_HEIGHT\n    );\n};\n\nexport const getTopOffset = rows => {\n    return HEADERBAR_HEIGHT + getControlBarHeight(rows, false);\n};\n\nexport const getControlBarHeight = (rows, expandable) => {\n    const flapHeight = !expandable ? END_FLAP_HEIGHT : 0;\n\n    return getRowsHeight(rows) + CONTROL_BAR_OUTER_HEIGHT_DIFF + flapHeight;\n};\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { Link, withRouter } from 'react-router-dom';\nimport ControlBar from '@dhis2/d2-ui-core/control-bar/ControlBar';\nimport arraySort from 'd2-utilizr/lib/arraySort';\n\nimport Chip from './DashboardItemChip';\nimport AddCircleIcon from '../../icons/AddCircle';\nimport Filter from './Filter';\nimport ShowMoreButton from './ShowMoreButton';\nimport {\n    FIRST_ROW_PADDING_HEIGHT,\n    MIN_ROW_COUNT,\n    getRowsHeight,\n    getControlBarHeight,\n    getNumRowsFromHeight,\n} from './controlBarDimensions';\nimport { sGetControlBarUserRows } from '../../reducers/controlBar';\nimport { sGetAllDashboards } from '../../reducers/dashboards';\nimport { sGetFilterName } from '../../reducers/dashboardsFilter';\nimport { sGetSelectedId } from '../../reducers/selected';\nimport { acSetControlBarUserRows } from '../../actions/controlBar';\nimport { acSetFilterName } from '../../actions/dashboardsFilter';\nimport { orObject, orArray } from '../../modules/util';\nimport { apiPostControlBarRows } from '../../api/controlBar';\n\nimport './ControlBar.css';\n\nexport const MAX_ROW_COUNT = 10;\n\nexport class DashboardsBar extends Component {\n    state = {\n        rows: MIN_ROW_COUNT,\n    };\n\n    setInitialDashboardState = rows => {\n        this.setState({ rows, isMaxHeight: rows === MAX_ROW_COUNT });\n    };\n\n    componentDidMount() {\n        this.setInitialDashboardState(this.props.userRows);\n    }\n\n    componentWillReceiveProps(nextProps) {\n        this.setInitialDashboardState(nextProps.userRows);\n    }\n\n    onChangeHeight = newHeight => {\n        const newRows = Math.max(\n            MIN_ROW_COUNT,\n            getNumRowsFromHeight(newHeight)\n        );\n\n        if (newRows !== this.state.rows) {\n            const newRowCount = Math.min(newRows, MAX_ROW_COUNT);\n\n            this.props.onChangeHeight(newRowCount);\n        }\n    };\n\n    onEndDrag = () => {\n        return apiPostControlBarRows(this.state.rows);\n    };\n\n    onToggleMaxHeight = () => {\n        const rows =\n            this.state.rows === MAX_ROW_COUNT\n                ? this.props.userRows\n                : MAX_ROW_COUNT;\n\n        this.setState({ rows, isMaxHeight: !this.state.isMaxHeight });\n    };\n\n    onSelectDashboard = () => {\n        this.props.history.push(`/${this.props.dashboards[0].id}`);\n    };\n\n    render() {\n        const { dashboards, name, selectedId, onChangeFilterName } = this.props;\n\n        const rowCount = this.state.isMaxHeight\n            ? MAX_ROW_COUNT\n            : this.state.rows;\n        const controlBarHeight = getControlBarHeight(rowCount, true);\n        const contentWrapperStyle = {\n            padding: `${FIRST_ROW_PADDING_HEIGHT}px 6px 0 6px`,\n            overflowY: this.state.isMaxHeight ? 'auto' : 'hidden',\n            height: getRowsHeight(rowCount) + FIRST_ROW_PADDING_HEIGHT,\n        };\n\n        return (\n            <ControlBar\n                height={controlBarHeight}\n                onChangeHeight={this.onChangeHeight}\n                onEndDrag={this.onEndDrag}\n                editMode={false}\n                expandable={true}\n            >\n                <div style={contentWrapperStyle}>\n                    <div className=\"left-controls\">\n                        <Link\n                            style={{\n                                display: 'inline-block',\n                                textDecoration: 'none',\n                                marginRight: 10,\n                            }}\n                            to={'/new'}\n                        >\n                            <AddCircleIcon />\n                        </Link>\n                        <Filter\n                            name={name}\n                            onChangeName={onChangeFilterName}\n                            onKeypressEnter={this.onSelectDashboard}\n                        />\n                    </div>\n                    {orArray(dashboards).map(dashboard => (\n                        <Chip\n                            key={dashboard.id}\n                            label={dashboard.displayName}\n                            starred={dashboard.starred}\n                            dashboardId={dashboard.id}\n                            selected={dashboard.id === selectedId}\n                        />\n                    ))}\n                </div>\n                {this.props.userRows !== MAX_ROW_COUNT ? (\n                    <ShowMoreButton\n                        onClick={this.onToggleMaxHeight}\n                        isMaxHeight={this.state.isMaxHeight}\n                    />\n                ) : null}\n            </ControlBar>\n        );\n    }\n}\n\nconst mapStateToProps = state => ({\n    dashboards: sGetAllDashboards(state),\n    name: sGetFilterName(state),\n    userRows: sGetControlBarUserRows(state),\n    selectedId: sGetSelectedId(state),\n});\n\nconst mapDispatchToProps = {\n    onChangeHeight: acSetControlBarUserRows,\n    onChangeFilterName: acSetFilterName,\n};\nconst mergeProps = (stateProps, dispatchProps, ownProps) => {\n    const dashboards = Object.values(orObject(stateProps.dashboards));\n    const displayDashboards = arraySort(\n        dashboards.filter(d =>\n            d.displayName.toLowerCase().includes(stateProps.name.toLowerCase())\n        ),\n        'ASC',\n        'displayName'\n    );\n\n    return {\n        ...stateProps,\n        ...ownProps,\n        ...dispatchProps,\n        dashboards: [\n            ...displayDashboards.filter(d => d.starred),\n            ...displayDashboards.filter(d => !d.starred),\n        ],\n    };\n};\n\nexport default withRouter(\n    connect(\n        mapStateToProps,\n        mapDispatchToProps,\n        mergeProps\n    )(DashboardsBar)\n);\n","import {\n    SET_DASHBOARDS_FILTER_NAME,\n    SET_DASHBOARDS_FILTER_OWNER,\n    SET_DASHBOARDS_FILTER_ORDER,\n} from '../reducers/dashboardsFilter';\n\n// actions\n\nexport const acSetFilterName = value => ({\n    type: SET_DASHBOARDS_FILTER_NAME,\n    value,\n});\n\nexport const acSetFilterOwner = value => ({\n    type: SET_DASHBOARDS_FILTER_OWNER,\n    value,\n});\n\nexport const acSetFilterOrder = value => ({\n    type: SET_DASHBOARDS_FILTER_ORDER,\n    value,\n});\n","import React from 'react';\nimport { connect } from 'react-redux';\n\nimport {\n    getTopOffset,\n    MIN_ROW_COUNT,\n} from '../ControlBar/controlBarDimensions';\nimport { sGetControlBarUserRows } from '../../reducers/controlBar';\n\nconst DashboardVerticalOffset = props => {\n    const rows = props.editMode ? MIN_ROW_COUNT : props.userRows;\n    const marginTop = getTopOffset(rows);\n\n    return <div className=\"page-container-top-margin\" style={{ marginTop }} />;\n};\n\nconst mapStateToProps = state => ({\n    userRows: sGetControlBarUserRows(state),\n});\n\nexport default connect(mapStateToProps)(DashboardVerticalOffset);\n","import i18n from '@dhis2/d2-i18n';\nimport {\n    itemTypeMap,\n    spacerContent,\n    REPORT_TABLE,\n    CHART,\n    MAP,\n    EVENT_CHART,\n    EVENT_REPORT,\n    USERS,\n    REPORTS,\n    RESOURCES,\n    APP,\n    MESSAGES,\n    TEXT,\n    SPACER,\n} from '../../modules/itemTypes';\n\nexport const singleItems = [\n    {\n        id: 'additional',\n        header: 'Additional items',\n        items: [\n            {\n                type: TEXT,\n                name: i18n.t('Text box'),\n                content: '',\n            },\n            {\n                type: MESSAGES,\n                name: i18n.t('Messages'),\n                content: 'true',\n            },\n            {\n                type: SPACER,\n                name: i18n.t('Spacer'),\n                content: spacerContent,\n            },\n        ],\n    },\n];\n\nexport const listItems = [\n    {\n        id: REPORT_TABLE,\n        title: itemTypeMap[REPORT_TABLE].pluralTitle,\n    },\n    {\n        id: CHART,\n        title: itemTypeMap[CHART].pluralTitle,\n    },\n    { id: MAP, title: itemTypeMap[MAP].pluralTitle },\n    {\n        id: EVENT_REPORT,\n        title: itemTypeMap[EVENT_REPORT].pluralTitle,\n    },\n    {\n        id: EVENT_CHART,\n        title: itemTypeMap[EVENT_CHART].pluralTitle,\n    },\n    {\n        id: USERS,\n        title: itemTypeMap[USERS].pluralTitle,\n    },\n    {\n        id: REPORTS,\n        title: itemTypeMap[REPORTS].pluralTitle,\n    },\n    {\n        id: RESOURCES,\n        title: itemTypeMap[RESOURCES].pluralTitle,\n    },\n    { id: APP, title: itemTypeMap[APP].pluralTitle },\n];\n","import React, { Component, Fragment } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport i18n from '@dhis2/d2-i18n';\nimport Divider from '@material-ui/core/Divider';\nimport { List, ListItem } from 'material-ui/List';\nimport Button from '@dhis2/d2-ui-core/button/Button';\nimport LaunchIcon from '@material-ui/icons/Launch';\nimport { tAddListItemContent } from './actions';\nimport { acAddDashboardItem } from '../../actions/editDashboard';\nimport { sGetEditDashboardRoot } from '../../reducers/editDashboard';\nimport {\n    getItemUrl,\n    getItemIcon,\n    APP,\n    CHART,\n    EVENT_CHART,\n    REPORT_TABLE,\n    EVENT_REPORT,\n    MAP,\n    REPORTS,\n    RESOURCES,\n    USERS,\n} from '../../modules/itemTypes';\nimport { colors } from '../../modules/colors';\n\nclass ItemSelectList extends Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            seeMore: false,\n        };\n    }\n\n    addItem = item => () => {\n        const {\n            type,\n            dashboardId,\n            acAddDashboardItem,\n            tAddListItemContent,\n        } = this.props;\n\n        const newItem = {\n            id: item.id,\n            name: item.displayName || item.name,\n        };\n\n        // special handling for ListItem types\n        if (type.match(/(REPORTS|RESOURCES|USERS)/)) {\n            tAddListItemContent(dashboardId, type, newItem);\n        } else if (type === APP) {\n            acAddDashboardItem({ type, content: item.key });\n        } else {\n            acAddDashboardItem({ type, content: newItem });\n        }\n    };\n\n    toggleSeeMore = () => {\n        this.setState({ seeMore: !this.state.seeMore });\n\n        this.props.onChangeItemsLimit(this.props.type);\n    };\n\n    render() {\n        return (\n            <Fragment>\n                <div\n                    style={{\n                        display: 'flex',\n                        justifyContent: 'space-between',\n                        paddingLeft: '16px',\n                    }}\n                >\n                    <h3>{this.props.title}</h3>\n                    <Button\n                        color=\"primary\"\n                        style={{ textTransform: 'uppercase' }}\n                        onClick={this.toggleSeeMore}\n                    >\n                        {`${i18n.t('See')} ${\n                            this.state.seeMore\n                                ? i18n.t('fewer')\n                                : i18n.t('more')\n                        } ${this.props.title}`}\n                    </Button>\n                </div>\n                <Divider />\n                <List>\n                    {this.props.items.map(item => {\n                        const itemUrl = getItemUrl(\n                            this.props.type,\n                            item,\n                            this.context.d2\n                        );\n\n                        const ItemIcon = getItemIcon(this.props.type);\n\n                        return (\n                            <ListItem // apps don't have item.id\n                                key={item.id || item.key}\n                                leftIcon={\n                                    <ItemIcon\n                                        style={{\n                                            margin: '6px',\n                                            fill: colors.muiDefaultGrey,\n                                        }}\n                                    />\n                                }\n                                innerDivStyle={{ padding: '0px 0px 0px 42px' }}\n                                hoverColor=\"transparent\"\n                                primaryText={\n                                    <p\n                                        style={{\n                                            display: 'flex',\n                                            alignItems: 'center',\n                                            justifyContent: 'flex-start',\n                                            margin: 0,\n                                        }}\n                                    >\n                                        {item.displayName || item.name}\n                                        <Button\n                                            color=\"primary\"\n                                            onClick={this.addItem(item)}\n                                            style={{\n                                                marginLeft: '5px',\n                                                marginRight: '5px',\n                                            }}\n                                        >\n                                            + ADD\n                                        </Button>\n                                        {itemUrl && (\n                                            <a\n                                                target=\"_blank\"\n                                                rel=\"noopener noreferrer\"\n                                                href={itemUrl}\n                                                style={{ display: 'flex' }}\n                                            >\n                                                <LaunchIcon\n                                                    style={{\n                                                        width: '16px',\n                                                        height: '16px',\n                                                        fill:\n                                                            colors.muiDefaultGrey,\n                                                    }}\n                                                />\n                                            </a>\n                                        )}\n                                    </p>\n                                }\n                            />\n                        );\n                    })}\n                </List>\n            </Fragment>\n        );\n    }\n}\n\nItemSelectList.propTypes = {\n    type: PropTypes.oneOf([\n        APP,\n        CHART,\n        EVENT_CHART,\n        REPORT_TABLE,\n        EVENT_REPORT,\n        MAP,\n        REPORTS,\n        RESOURCES,\n        USERS,\n    ]).isRequired,\n    title: PropTypes.string.isRequired,\n    items: PropTypes.array.isRequired,\n    onChangeItemsLimit: PropTypes.func.isRequired,\n};\n\nItemSelectList.contextTypes = {\n    d2: PropTypes.object.isRequired,\n};\n\nexport default connect(\n    state => ({\n        dashboardId: sGetEditDashboardRoot(state).id,\n    }),\n    {\n        acAddDashboardItem,\n        tAddListItemContent,\n    }\n)(ItemSelectList);\n","import { sGetEditDashboardRoot } from '../../reducers/editDashboard';\nimport { itemTypeMap } from '../../modules/itemTypes';\nimport {\n    acAddDashboardItem,\n    acUpdateDashboardItem,\n} from '../../actions/editDashboard';\n\nexport const tAddListItemContent = (dashboardId, type, content) => (\n    dispatch,\n    getState\n) => {\n    const state = getState();\n    const listItemType = itemTypeMap[type].propName;\n    const dashboardItems = sGetEditDashboardRoot(state).dashboardItems;\n    const dashboardItemIndex = dashboardItems.findIndex(\n        item => item.type === type\n    );\n    let dashboardItem;\n\n    // Reports/Resources/Users dashboard item type already present in dashboard\n    if (dashboardItemIndex > -1) {\n        dashboardItem = dashboardItems[dashboardItemIndex];\n        dashboardItem[listItemType].push(content);\n\n        dispatch(acUpdateDashboardItem(dashboardItem));\n    } else {\n        dashboardItem = {\n            type: type,\n            content: [content],\n        };\n\n        dispatch(acAddDashboardItem(dashboardItem));\n    }\n};\n","import React, { Fragment } from 'react';\nimport { connect } from 'react-redux';\nimport Divider from '@material-ui/core/Divider';\nimport { List, ListItem } from 'material-ui/List';\nimport Button from '@dhis2/d2-ui-core/button/Button';\nimport { getItemIcon } from '../../modules/itemTypes';\n\nimport { acAddDashboardItem } from '../../actions/editDashboard';\n\nconst SingleItem = ({ item, onAddToDashboard }) => {\n    const ItemIcon = getItemIcon(item.type);\n    return (\n        <ListItem\n            key={item.type}\n            leftIcon={<ItemIcon style={{ margin: '6px' }} />}\n            innerDivStyle={{ padding: '0px 0px 0px 42px' }}\n            hoverColor=\"transparent\"\n            primaryText={\n                <p\n                    style={{\n                        display: 'flex',\n                        alignItems: 'center',\n                        justifyContent: 'flex-start',\n                        margin: 0,\n                    }}\n                >\n                    {item.name}\n                    <Button\n                        color=\"primary\"\n                        onClick={onAddToDashboard}\n                        style={{\n                            marginLeft: '5px',\n                            marginRight: '5px',\n                        }}\n                    >\n                        + ADD\n                    </Button>\n                </p>\n            }\n        />\n    );\n};\n\nconst ItemSelectSingle = ({ acAddDashboardItem, category }) => {\n    const addToDashboard = ({ type, content }) => () => {\n        acAddDashboardItem({ type, content });\n    };\n\n    return (\n        <Fragment>\n            <div\n                style={{\n                    display: 'flex',\n                    justifyContent: 'space-between',\n                    paddingLeft: '16px',\n                }}\n            >\n                <h3>{category.header}</h3>\n            </div>\n            <Divider />\n            <List>\n                {category.items.map(item => (\n                    <SingleItem\n                        key={item.type}\n                        item={item}\n                        onAddToDashboard={addToDashboard(item)}\n                    />\n                ))}\n            </List>\n        </Fragment>\n    );\n};\n\nexport default connect(\n    null,\n    { acAddDashboardItem }\n)(ItemSelectSingle);\n","import React, { Fragment } from 'react';\nimport PropTypes from 'prop-types';\nimport i18n from '@dhis2/d2-i18n';\nimport Popover from '@material-ui/core/Popover';\nimport SearchIcon from '@material-ui/icons/Search';\nimport TextField from 'material-ui/TextField';\n\nimport { singleItems, listItems } from './selectableItems';\nimport { itemTypeMap } from '../../modules/itemTypes';\nimport ItemSelectList from './ItemSelectList';\nimport ItemSelectSingle from './ItemSelectSingle';\nimport { colors } from '../../modules/colors';\n\nimport './ItemSelect.css';\n\nconst styles = {\n    filterField: {\n        fontSize: '14px',\n        height: '30px',\n        marginLeft: '10px',\n    },\n    filterFieldInput: {\n        top: '-9px',\n        left: '1px',\n    },\n    filterFieldUnderline: {\n        bottom: '10px',\n    },\n    filterFieldUnderlineFocus: {\n        borderColor: '#aaa',\n        borderWidth: '1px',\n    },\n    searchIcon: {\n        fill: colors.muiDefaultGrey,\n    },\n};\n\nconst ItemSearchField = props => (\n    <div style={{ display: 'flex', alignItems: 'baseline' }}>\n        <SearchIcon style={styles.searchIcon} />\n        <TextField\n            hintText={i18n.t('Search for items to add to this dashboard')}\n            fullWidth={true}\n            value={props.value}\n            onClick={props.onClick}\n            onChange={props.onChange}\n            style={styles.filterField}\n            inputStyle={styles.filterFieldInput}\n            hintStyle={styles.filterFieldHint}\n            underlineStyle={styles.filterFieldUnderline}\n            underlineFocusStyle={styles.filterFieldUnderlineFocus}\n        />\n    </div>\n);\n\nclass ItemSelect extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            anchorEl: null,\n            open: false,\n            maxOptions: new Set(),\n            items: undefined,\n            filter: '',\n        };\n    }\n\n    closeList = () => {\n        this.setState({ open: false, filter: '' });\n    };\n\n    openList = event => {\n        this.fetchItems();\n\n        this.setState({\n            anchorEl: event.currentTarget,\n            open: true,\n        });\n    };\n\n    setFilter = event => {\n        this.setState({ filter: event.target.value }, this.fetchItems);\n    };\n\n    getListItems = items => {\n        return listItems.map(type => {\n            const itemType = itemTypeMap[type.id];\n\n            if (items && items[itemType.countName] > 0) {\n                return (\n                    <ItemSelectList\n                        key={type.id}\n                        type={type.id}\n                        title={type.title}\n                        items={items[itemType.endPointName]}\n                        onChangeItemsLimit={this.fetchItems}\n                    />\n                );\n            } else {\n                return null;\n            }\n        });\n    };\n\n    popoverChildren = items => {\n        const SingleItems = singleItems.map(category => (\n            <ItemSelectSingle key={category.id} category={category} />\n        ));\n        const ListItems = this.getListItems(items);\n\n        return ListItems.concat(SingleItems);\n    };\n\n    fetchItems = async maxOption => {\n        const api = this.context.d2.Api.getApi();\n\n        let queryString;\n\n        if (maxOption) {\n            const maxOptions = this.state.maxOptions;\n\n            if (maxOptions.has(maxOption)) {\n                maxOptions.delete(maxOption);\n            } else {\n                maxOptions.add(maxOption);\n            }\n\n            this.setState({\n                maxOptions,\n            });\n        } else {\n            this.setState({\n                maxOptions: new Set(),\n            });\n        }\n\n        if ([...this.state.maxOptions.values()].length) {\n            queryString =\n                'max=' + [...this.state.maxOptions.values()].join('&max=');\n        }\n\n        api.get(\n            `dashboards/q/${this.state.filter || ''}${\n                queryString ? `?${queryString}` : ''\n            }`\n        )\n            .then(response => {\n                this.setState({ items: response });\n            })\n            .catch(console.error);\n    };\n\n    render() {\n        return (\n            <Fragment>\n                <ItemSearchField\n                    value={this.state.filter}\n                    onClick={this.openList}\n                    onChange={this.setFilter}\n                />\n                <Popover\n                    className=\"dashboard-item-select\"\n                    open={this.state.open}\n                    onClose={this.closeList}\n                    anchorEl={this.state.anchorEl}\n                    anchorOrigin={{ horizontal: 'left', vertical: 'bottom' }}\n                    transformOrigin={{ horizontal: 'left', vertical: 'top' }}\n                    style={{ height: '70vh' }}\n                    PaperProps={{ style: { width: '700px' } }}\n                    disableAutoFocus={true}\n                    disableRestoreFocus={true}\n                >\n                    {this.popoverChildren(this.state.items)}\n                </Popover>\n            </Fragment>\n        );\n    }\n}\n\nItemSelect.contextTypes = {\n    d2: PropTypes.object.isRequired,\n};\n\nexport default ItemSelect;\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport i18n from '@dhis2/d2-i18n';\nimport TextField from '@dhis2/d2-ui-core/text-field/TextField';\n\nimport {\n    acSetDashboardTitle,\n    acSetDashboardDescription,\n} from '../../actions/editDashboard';\nimport { orObject } from '../../modules/util';\nimport { sGetEditDashboardRoot } from '../../reducers/editDashboard';\nimport { sGetDashboardById } from '../../reducers/dashboards';\nimport ItemSelect from '../ItemSelect/ItemSelect';\n\nconst styles = {\n    section: { display: 'flex', justifyContent: 'space-between' },\n    titleDescription: {\n        flex: '3',\n        marginRight: '20px',\n    },\n    title: { padding: '6px 0' },\n    itemSelect: {\n        flex: '2',\n        minWidth: '300px',\n        maxWidth: '730px',\n        position: 'relative',\n        top: '33px',\n    },\n};\n\nexport const EditTitleBar = ({\n    name,\n    displayName,\n    description,\n    style,\n    onChangeTitle,\n    onChangeDescription,\n    classes,\n}) => {\n    const titleStyle = Object.assign({}, style.title, {\n        top: '-2px',\n    });\n\n    const translatedName = () => {\n        return displayName ? (\n            <span style={style.description}>\n                {i18n.t('Current translation')}: {displayName}\n            </span>\n        ) : null;\n    };\n\n    return (\n        <section className={classes.section}>\n            <div className={classes.titleDescription}>\n                <span>{i18n.t('Currently editing')}</span>\n                <div className={classes.title}>\n                    <TextField\n                        multiline\n                        fullWidth\n                        rows={1}\n                        rowsMax={3}\n                        style={titleStyle}\n                        value={name}\n                        placeholder={i18n.t('Add title here')}\n                        onChange={onChangeTitle}\n                    />\n                    {translatedName()}\n                </div>\n                <TextField\n                    multiline\n                    fullWidth\n                    rows={1}\n                    rowsMax={3}\n                    style={style.description}\n                    value={description}\n                    placeholder={i18n.t('Add description here')}\n                    onChange={onChangeDescription}\n                />\n            </div>\n            <div className={classes.itemSelect}>\n                <ItemSelect />\n            </div>\n        </section>\n    );\n};\n\nconst mapStateToProps = state => {\n    const selectedDashboard = orObject(sGetEditDashboardRoot(state));\n    const displayName = orObject(sGetDashboardById(state, selectedDashboard.id))\n        .displayName;\n\n    return {\n        name: selectedDashboard.name,\n        displayName,\n        description: selectedDashboard.description,\n    };\n};\n\nconst mapDispatchToProps = {\n    onChangeTitle: acSetDashboardTitle,\n    onChangeDescription: acSetDashboardDescription,\n};\n\nexport default connect(\n    mapStateToProps,\n    mapDispatchToProps\n)(withStyles(styles)(EditTitleBar));\n\nEditTitleBar.propTypes = {\n    name: PropTypes.string,\n    displayName: PropTypes.string,\n    description: PropTypes.string,\n    onChangeTitle: PropTypes.func.isRequired,\n    onChangeDescription: PropTypes.func.isRequired,\n    style: PropTypes.object,\n};\n\nEditTitleBar.defaultProps = {\n    name: '',\n    displayName: '',\n    description: '',\n    style: {},\n};\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nimport { Button } from '@dhis2/ui-core';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\n\nimport i18n from '@dhis2/d2-i18n';\n\nimport {\n    PeriodDimension,\n    DynamicDimension,\n    OrgUnitDimension,\n    FIXED_DIMENSIONS,\n} from '@dhis2/d2-ui-analytics';\n\nconst peId = FIXED_DIMENSIONS.pe.id;\nconst ouId = FIXED_DIMENSIONS.ou.id;\n\nclass FilterDialog extends Component {\n    onConfirm = id => () => this.props.onConfirm(id);\n\n    dialogContent() {\n        const { displayNameProperty, dimension, selectedItems } = this.props;\n        const dialogId = dimension.id;\n\n        const commonProps = {\n            d2: this.context.d2,\n            onSelect: this.props.onSelect,\n            onDeselect: this.props.onDeselect,\n            onReorder: this.props.onReorder,\n        };\n\n        switch (dialogId) {\n            case peId: {\n                return (\n                    <PeriodDimension\n                        selectedPeriods={selectedItems}\n                        {...commonProps}\n                    />\n                );\n            }\n            case ouId:\n                return (\n                    <OrgUnitDimension\n                        displayNameProperty={displayNameProperty}\n                        ouItems={selectedItems}\n                        {...commonProps}\n                    />\n                );\n            default:\n                return (\n                    <DynamicDimension\n                        selectedItems={selectedItems}\n                        dialogId={dialogId}\n                        dialogTitle={dimension.name}\n                        {...commonProps}\n                    />\n                );\n        }\n    }\n\n    render() {\n        const { dimension, onClose } = this.props;\n        const dialogId = dimension.id;\n\n        return (\n            <Dialog\n                open={!!dialogId}\n                maxWidth=\"lg\"\n                disableEnforceFocus\n                onClose={onClose}\n            >\n                {dialogId && this.dialogContent()}\n                <DialogActions>\n                    <Button kind=\"secondary\" onClick={onClose}>\n                        {i18n.t('Cancel')}\n                    </Button>\n                    <Button kind=\"primary\" onClick={this.onConfirm(dialogId)}>\n                        {i18n.t('Confirm')}\n                    </Button>\n                </DialogActions>\n            </Dialog>\n        );\n    }\n}\n\nFilterDialog.propTypes = {\n    displayNameProperty: PropTypes.string,\n    dimension: PropTypes.object,\n    selectedItems: PropTypes.array,\n    onSelect: PropTypes.func,\n    onDeselect: PropTypes.func,\n    onReorder: PropTypes.func,\n    onClose: PropTypes.func,\n    onConfirm: PropTypes.func,\n};\n\nFilterDialog.contextTypes = {\n    d2: PropTypes.object,\n};\n\nexport default FilterDialog;\n","export const SET_ACTIVE_MODAL_DIMENSION = 'SET_ACTIVE_MODAL_DIMENSION';\nexport const CLEAR_ACTIVE_MODAL_DIMENSION = 'CLEAR_ACTIVE_MODAL_DIMENSION';\n\nexport const DEFAULT_STATE_ACTIVE_MODAL_DIMENSION = {};\n\nexport default (state = DEFAULT_STATE_ACTIVE_MODAL_DIMENSION, action) => {\n    switch (action.type) {\n        case SET_ACTIVE_MODAL_DIMENSION: {\n            return action.value;\n        }\n        case CLEAR_ACTIVE_MODAL_DIMENSION: {\n            return DEFAULT_STATE_ACTIVE_MODAL_DIMENSION;\n        }\n        default:\n            return state;\n    }\n};\n\nexport const sGetActiveModalDimension = state => state.activeModalDimension;\n","import {\n    SET_ACTIVE_MODAL_DIMENSION,\n    CLEAR_ACTIVE_MODAL_DIMENSION,\n} from '../reducers/activeModalDimension';\n\nexport const acSetActiveModalDimension = value => ({\n    type: SET_ACTIVE_MODAL_DIMENSION,\n    value,\n});\n\nexport const acClearActiveModalDimension = () => ({\n    type: CLEAR_ACTIVE_MODAL_DIMENSION,\n});\n","import React, { Component, Fragment } from 'react';\nimport { connect } from 'react-redux';\nimport Popover from '@material-ui/core/Popover';\nimport ArrowDropDownIcon from '@material-ui/icons/ArrowDropDown';\nimport { withTheme } from '@material-ui/core/styles';\n\nimport i18n from '@dhis2/d2-i18n';\nimport { DimensionsPanel } from '@dhis2/d2-ui-analytics';\n\nimport { Button } from '@dhis2/ui-core';\nimport FilterDialog from './FilterDialog';\n\nimport { sGetSettingsDisplayNameProperty } from '../../reducers/settings';\nimport { sGetActiveModalDimension } from '../../reducers/activeModalDimension';\nimport { sGetDimensions } from '../../reducers/dimensions';\nimport { sGetFiltersKeys } from '../../reducers/itemFilters';\nimport { sGetEditItemFiltersRoot } from '../../reducers/editItemFilters';\nimport { acAddItemFilter, acRemoveItemFilter } from '../../actions/itemFilters';\nimport {\n    acRemoveEditItemFilter,\n    acSetEditItemFilters,\n} from '../../actions/editItemFilters';\nimport {\n    acClearActiveModalDimension,\n    acSetActiveModalDimension,\n} from '../../actions/activeModalDimension';\n\nclass FilterSelector extends Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            anchorEl: null,\n        };\n    }\n\n    openPanel = event => {\n        this.setState({ anchorEl: event.currentTarget });\n    };\n\n    closePanel = () => {\n        this.setState({ anchorEl: null });\n    };\n\n    closeDialog = () => {\n        this.setState({ anchorEl: null });\n\n        this.props.clearActiveModalDimension();\n    };\n\n    selectDimension = id => {\n        this.props.setActiveModalDimension({\n            id,\n            name: this.props.dimensions[id].name,\n        });\n    };\n\n    onSelectItems = ({ dimensionId, items }) => {\n        this.props.setEditItemFilters({\n            ...this.props.selectedItems,\n            [dimensionId]: items,\n        });\n    };\n\n    onDeselectItems = ({ dimensionId, itemIdsToRemove }) => {\n        const oldList = this.props.selectedItems[dimensionId] || [];\n        const newList = oldList.filter(\n            item => !itemIdsToRemove.includes(item.id)\n        );\n\n        if (newList.length) {\n            this.props.setEditItemFilters({\n                ...this.props.selectedItems,\n                [dimensionId]: newList,\n            });\n        } else {\n            this.props.removeEditItemFilter(dimensionId);\n        }\n    };\n\n    onReorderItems = ({ dimensionId, itemIds }) => {\n        const oldList = this.props.selectedItems[dimensionId] || [];\n        const reorderedList = itemIds.map(id =>\n            oldList.find(item => item.id === id)\n        );\n\n        this.props.setEditItemFilters({\n            ...this.props.selectedItems,\n            [dimensionId]: reorderedList,\n        });\n    };\n\n    saveFilter = id => {\n        const filterItems = this.props.selectedItems[id];\n\n        if (filterItems && filterItems.length) {\n            this.props.addItemFilter({\n                id,\n                value: [...filterItems],\n            });\n        } else {\n            this.props.removeItemFilter(id);\n        }\n\n        this.closeDialog();\n    };\n\n    render() {\n        const {\n            theme,\n            displayNameProperty,\n            dimension,\n            dimensions,\n            selectedDimensions,\n            selectedItems,\n        } = this.props;\n\n        return (\n            <Fragment>\n                <Button onClick={this.openPanel}>\n                    {i18n.t('Add filter')}\n                    <ArrowDropDownIcon />\n                </Button>\n                <Popover\n                    open={Boolean(this.state.anchorEl)}\n                    anchorEl={this.state.anchorEl}\n                    anchorOrigin={{ vertical: 'bottom', horizontal: 'left' }}\n                    onClose={this.closePanel}\n                    style={{\n                        height: '100%',\n                        fontFamily: theme.typography.fontFamily,\n                    }}\n                >\n                    <DimensionsPanel\n                        dimensions={dimensions}\n                        onDimensionClick={this.selectDimension}\n                        selectedIds={selectedDimensions}\n                    />\n                </Popover>\n                {dimension ? (\n                    <FilterDialog\n                        displayNameProperty={displayNameProperty}\n                        dimension={dimension}\n                        selectedItems={selectedItems[dimension.id] || []}\n                        onSelect={this.onSelectItems}\n                        onDeselect={this.onDeselectItems}\n                        onReorder={this.onReorderItems}\n                        onClose={this.closeDialog}\n                        onConfirm={this.saveFilter}\n                    />\n                ) : null}\n            </Fragment>\n        );\n    }\n}\n\nconst mapStateToProps = state => ({\n    displayNameProperty: sGetSettingsDisplayNameProperty(state),\n    dimension: sGetActiveModalDimension(state),\n    dimensions: sGetDimensions(state),\n    selectedDimensions: sGetFiltersKeys(state),\n    selectedItems: sGetEditItemFiltersRoot(state),\n});\n\nexport default connect(\n    mapStateToProps,\n    {\n        clearActiveModalDimension: acClearActiveModalDimension,\n        setActiveModalDimension: acSetActiveModalDimension,\n        addItemFilter: acAddItemFilter,\n        removeItemFilter: acRemoveItemFilter,\n        removeEditItemFilter: acRemoveEditItemFilter,\n        setEditItemFilters: acSetEditItemFilters,\n    }\n)(withTheme()(FilterSelector));\n","import React, { Component } from 'react';\nimport InfoOutlineIcon from '@material-ui/icons/InfoOutlined';\nimport { colors } from '../../modules/colors';\n\nclass Info extends Component {\n    show = false;\n\n    toggle() {\n        this.show = !this.show;\n        return this.show;\n    }\n\n    render() {\n        return (\n            <div onClick={() => this.props.onClick(this.toggle())}>\n                <InfoOutlineIcon style={{ fill: colors.muiDefaultGrey }} />\n            </div>\n        );\n    }\n}\n\nexport default Info;\n","import React, { Component, Fragment } from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport { Link } from 'react-router-dom';\nimport i18n from '@dhis2/d2-i18n';\nimport SharingDialog from '@dhis2/d2-ui-sharing-dialog';\nimport Star from '@material-ui/icons/Star';\nimport StarBorder from '@material-ui/icons/StarBorder';\n\nimport { orObject } from '../../modules/util';\nimport { tStarDashboard } from '../../actions/dashboards';\nimport { acSetSelectedShowDescription } from '../../actions/selected';\nimport FilterSelector from '../ItemFilter/FilterSelector';\nimport { Button } from '@dhis2/ui-core';\nimport Info from './Info';\nimport {\n    sGetSelectedId,\n    sGetSelectedShowDescription,\n} from '../../reducers/selected';\nimport {\n    sGetDashboardById,\n    sGetDashboardItems,\n} from '../../reducers/dashboards';\nimport { colors } from '../../modules/colors';\n\nconst NO_DESCRIPTION = i18n.t('No description');\n\nconst styles = {\n    actions: {\n        display: 'flex',\n        alignItems: 'center',\n        marginLeft: '20px',\n    },\n    starIcon: {\n        fill: colors.muiDefaultGrey,\n    },\n    textButton: {\n        minWidth: '30px',\n        top: '1px',\n    },\n    editLink: {\n        display: 'inline-block',\n        verticalAlign: 'top',\n        textDecoration: 'none',\n        marginRight: '4px',\n    },\n    titleBar: {\n        display: 'flex',\n        alignItems: 'flex-start',\n    },\n    titleBarIcon: {\n        marginLeft: 5,\n        position: 'relative',\n        top: 1,\n        cursor: 'pointer',\n    },\n};\n\nclass ViewTitleBar extends Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            sharingDialogIsOpen: false,\n        };\n    }\n\n    toggleSharingDialog = () =>\n        this.setState({ sharingDialogIsOpen: !this.state.sharingDialogIsOpen });\n\n    render() {\n        const {\n            id,\n            name,\n            description,\n            access,\n            style,\n            showDescription,\n            starred,\n            onStarClick,\n            onInfoClick,\n            classes,\n        } = this.props;\n\n        const titleStyle = Object.assign({}, style.title, {\n            cursor: 'default',\n            userSelect: 'text',\n            top: '7px',\n        });\n\n        const StarIcon = starred ? Star : StarBorder;\n\n        return (\n            <Fragment>\n                <div className={classes.titleBar}>\n                    <span style={titleStyle}>{name}</span>\n                    <div className={classes.actions}>\n                        <div\n                            className={classes.titleBarIcon}\n                            onClick={onStarClick}\n                        >\n                            <StarIcon className={classes.starIcon} />\n                        </div>\n                        <div className={classes.titleBarIcon}>\n                            <Info onClick={onInfoClick} />\n                        </div>\n                        <div style={{ marginLeft: '10px' }}>\n                            {access.update ? (\n                                <Link\n                                    className={classes.editLink}\n                                    to={`/${id}/edit`}\n                                >\n                                    <Button>{i18n.t('Edit')}</Button>\n                                </Link>\n                            ) : null}\n                            {access.manage ? (\n                                <span style={{ marginRight: '4px' }}>\n                                    <Button onClick={this.toggleSharingDialog}>\n                                        {i18n.t('Share')}\n                                    </Button>\n                                </span>\n                            ) : null}\n                            <span style={{ marginRight: '4px' }}>\n                                <FilterSelector />\n                            </span>\n                        </div>\n                    </div>\n                </div>\n                {showDescription ? (\n                    <div\n                        className=\"dashboard-description\"\n                        style={Object.assign(\n                            { paddingTop: '5px', paddingBottom: '5px' },\n                            style.description,\n                            !description ? { color: '#888' } : {}\n                        )}\n                    >\n                        {description || NO_DESCRIPTION}\n                    </div>\n                ) : null}\n                {id ? (\n                    <SharingDialog\n                        d2={this.context.d2}\n                        id={id}\n                        type=\"dashboard\"\n                        open={this.state.sharingDialogIsOpen}\n                        onRequestClose={this.toggleSharingDialog}\n                    />\n                ) : null}\n            </Fragment>\n        );\n    }\n}\n\nconst mapStateToProps = state => {\n    const id = sGetSelectedId(state);\n    const dashboard = orObject(sGetDashboardById(state, id));\n\n    return {\n        id,\n        name: dashboard.displayName,\n        description: dashboard.displayDescription,\n        dashboardItems: sGetDashboardItems(state),\n        showDescription: sGetSelectedShowDescription(state),\n        starred: dashboard.starred,\n        access: orObject(dashboard.access),\n    };\n};\n\nconst mergeProps = (stateProps, dispatchProps, ownProps) => {\n    const { id, starred, showDescription } = stateProps;\n    const { dispatch } = dispatchProps;\n\n    return {\n        ...stateProps,\n        ...ownProps,\n        onStarClick: () => dispatch(tStarDashboard(id, !starred)),\n        onInfoClick: () =>\n            dispatch(acSetSelectedShowDescription(!showDescription)),\n    };\n};\n\nexport default connect(\n    mapStateToProps,\n    null,\n    mergeProps\n)(withStyles(styles)(ViewTitleBar));\n\nViewTitleBar.propTypes = {\n    id: PropTypes.string,\n    name: PropTypes.string,\n    description: PropTypes.string,\n    starred: PropTypes.bool,\n    showDescription: PropTypes.bool,\n    onInfoClick: PropTypes.func,\n};\n\nViewTitleBar.defaultProps = {\n    name: '',\n    description: '',\n    starred: false,\n    showDescription: false,\n    onInfoClick: null,\n};\n\nViewTitleBar.contextTypes = {\n    d2: PropTypes.object,\n};\n","import React from 'react';\n\nimport { colors } from '../../modules/colors';\nimport EditTitleBar from './EditTitleBar';\nimport ViewTitleBar from './ViewTitleBar';\n\nimport './TitleBar.css';\n\nconst style = {\n    title: {\n        position: 'relative',\n        fontSize: 21,\n        fontWeight: 500,\n        color: colors.black,\n        minWidth: 50,\n    },\n    description: {\n        fontSize: 14,\n        color: colors.darkGrey,\n    },\n};\n\nconst TitleBar = ({ edit }) => {\n    return (\n        <div\n            className=\"titlebar-wrapper\"\n            style={{\n                padding: '20px 15px 5px 10px',\n            }}\n        >\n            {edit ? (\n                <EditTitleBar style={style} />\n            ) : (\n                <ViewTitleBar style={style} />\n            )}\n        </div>\n    );\n};\n\nexport default TitleBar;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nimport i18n from '@dhis2/d2-i18n';\n\nimport * as pluginManager from './plugin';\nimport { getBaseUrl, orObject } from '../../../modules/util';\nimport { getGridItemDomId } from '../../ItemGrid/gridUtil';\n\nconst pluginCredentials = d2 => {\n    return {\n        baseUrl: getBaseUrl(d2),\n        auth: d2.Api.getApi().defaultHeaders.Authorization,\n    };\n};\n\nclass DefaultPlugin extends Component {\n    pluginCredentials = null;\n\n    constructor(props, context) {\n        super(props);\n\n        this.d2 = context.d2;\n    }\n\n    shouldPluginReload = prevProps => {\n        // TODO - fix this hack, to handle bug with multiple\n        // rerendering while switching between dashboards.\n        //\n        // To determine if the rendering is happening because of a\n        // dashboard switch, check if the item reference has changed.\n        const reloadAllowed = this.props.item === prevProps.item;\n\n        const filtersChanged = prevProps.itemFilters !== this.props.itemFilters;\n        const vis = orObject(this.props.visualization);\n        const prevVis = orObject(prevProps.visualization);\n        const visChanged =\n            vis.id !== prevVis.id || vis.activeType !== prevVis.activeType;\n\n        return reloadAllowed && (visChanged || filtersChanged);\n    };\n\n    reloadPlugin = prevProps => {\n        if (\n            pluginManager.pluginIsAvailable(\n                this.props.item,\n                this.props.visualization\n            ) &&\n            this.shouldPluginReload(prevProps)\n        ) {\n            const prevVis = orObject(prevProps.visualization);\n            const currentVis = this.props.visualization;\n\n            const useActiveType =\n                currentVis.activeType !== prevVis.activeType ||\n                currentVis.activeType !== this.props.item.type;\n\n            if (\n                useActiveType ||\n                this.props.itemFilters !== prevProps.itemFilters\n            ) {\n                pluginManager.unmount(\n                    this.props.item,\n                    prevVis.activeType || this.props.item.type\n                );\n\n                pluginManager.load(\n                    this.props.item,\n                    this.props.visualization,\n                    this.pluginCredentials,\n                    useActiveType ? currentVis.activeType : null\n                );\n            }\n        }\n    };\n\n    componentDidMount() {\n        this.pluginCredentials = pluginCredentials(this.d2);\n\n        if (\n            pluginManager.pluginIsAvailable(\n                this.props.item,\n                this.props.visualization\n            )\n        ) {\n            pluginManager.load(\n                this.props.item,\n                this.props.visualization,\n                this.pluginCredentials,\n                !this.props.editMode ? this.getActiveType() : null\n            );\n        }\n    }\n\n    componentDidUpdate(prevProps) {\n        this.reloadPlugin(prevProps);\n    }\n\n    getActiveType = () =>\n        this.props.visualization.activeType || this.props.item.type;\n\n    render() {\n        const { classes, item, visualization, style } = this.props;\n        const pluginIsAvailable = pluginManager.pluginIsAvailable(\n            item,\n            visualization\n        );\n\n        return pluginIsAvailable ? (\n            <div id={getGridItemDomId(item.id)} style={style} />\n        ) : (\n            <div className={classes.textDiv}>\n                {i18n.t('Unable to load the plugin for this item')}\n            </div>\n        );\n    }\n}\n\nDefaultPlugin.contextTypes = {\n    d2: PropTypes.object,\n};\n\nDefaultPlugin.propTypes = {\n    style: PropTypes.object,\n    item: PropTypes.object,\n    itemFilters: PropTypes.object,\n    visualization: PropTypes.object,\n};\n\nDefaultPlugin.defaultProps = {\n    style: {},\n    item: {},\n    itemFilters: {},\n    visualization: {},\n};\n\nexport default DefaultPlugin;\n","import React from 'react';\n\nexport const HEADER_HEIGHT = 45;\n\nconst ItemHeader = props => {\n    const { title, actionButtons, editMode } = props;\n\n    return (\n        <div className=\"dashboard-item-header\">\n            <div\n                className=\"dashboard-item-header-title\"\n                style={{ userSelect: editMode ? 'none' : 'text' }}\n            >\n                {title}\n            </div>\n            {actionButtons}\n        </div>\n    );\n};\n\nexport default ItemHeader;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { colors } from '../../../modules/colors';\nimport { getId } from './plugin';\nimport InterpretationsComponent from '@dhis2/d2-ui-interpretations';\n\nconst style = {\n    scrollContainer: {\n        overflowY: 'auto',\n        height: '340px',\n    },\n    line: {\n        margin: '-1px 0px 0px',\n        height: '1px',\n        border: 'none',\n        backgroundColor: colors.lightGrey,\n    },\n};\n\nclass ItemFooter extends Component {\n    render() {\n        const objectId = getId(this.props.item);\n\n        return (\n            <div className=\"dashboard-item-footer\">\n                <hr style={style.line} />\n                <div style={style.scrollContainer}>\n                    <InterpretationsComponent\n                        d2={this.context.d2}\n                        item={this.props.item}\n                        type={this.props.item.type.toLowerCase()}\n                        id={objectId}\n                        appName=\"dashboard\"\n                    />\n                </div>\n            </div>\n        );\n    }\n}\n\nItemFooter.contextTypes = {\n    d2: PropTypes.object.isRequired,\n};\n\nItemFooter.propTypes = {\n    item: PropTypes.object.isRequired,\n};\n\nexport default ItemFooter;\n","import React from 'react';\n\nimport './ItemHeaderButton.css';\n\nconst ItemHeaderButton = ({ disabled, onClick, children, style }) => {\n    return (\n        <button\n            disabled={disabled}\n            type=\"button\"\n            className=\"item-action-button\"\n            style={style}\n            onClick={onClick}\n        >\n            {children}\n        </button>\n    );\n};\n\nexport default ItemHeaderButton;\n","import React, { Component, Fragment } from 'react';\nimport MessageIcon from '@material-ui/icons/Message';\nimport TableIcon from '@material-ui/icons/ViewList';\nimport ChartIcon from '@material-ui/icons/InsertChart';\nimport MapIcon from '@material-ui/icons/Public';\n\nimport { extractFavorite } from './plugin';\nimport ItemHeaderButton from '../ItemHeaderButton';\nimport {\n    VISUALIZATION_TYPE_TABLE,\n    VISUALIZATION_TYPE_CHART,\n    VISUALIZATION_TYPE_MAP,\n    itemTypeMap,\n    CHART,\n    MAP,\n    REPORT_TABLE,\n    EVENT_CHART,\n    EVENT_REPORT,\n    DOMAIN_TYPE_AGGREGATE,\n} from '../../../modules/itemTypes';\nimport { colors } from '../../../modules/colors';\n\nconst style = {\n    iconBase: {\n        width: '24px',\n        height: '24px',\n        fill: colors.lightMediumGrey,\n    },\n    buttonBase: {\n        padding: '5px 6px 3px 6px',\n    },\n    buttonDisabled: {\n        padding: '5px 6px 3px 6px',\n        opacity: 0.5,\n        cursor: 'unset',\n    },\n    toggleFooterPadding: {\n        padding: '7px 6px 1px 6px',\n    },\n    border: {\n        borderRadius: '2px',\n        border: `1px solid ${colors.lightGrey}`,\n    },\n};\n\nconst baseStyle = {\n    icon: style.iconBase,\n    container: style.buttonBase,\n};\n\nconst disabledStyle = {\n    icon: style.iconBase,\n    container: style.buttonDisabled,\n};\n\nconst activeStyle = {\n    icon: { ...style.iconBase, fill: colors.royalBlue },\n    container: {\n        ...style.buttonBase,\n        backgroundColor: colors.lightBlue,\n    },\n};\n\nconst inactiveStyle = disabled => (disabled ? disabledStyle : baseStyle);\n\nconst tableBtnStyle = (activeType, disabled) =>\n    [REPORT_TABLE, EVENT_REPORT].includes(activeType)\n        ? activeStyle\n        : inactiveStyle(disabled);\n\nconst chartBtnStyle = (activeType, disabled) =>\n    [CHART, EVENT_CHART].includes(activeType)\n        ? activeStyle\n        : inactiveStyle(disabled);\n\nconst mapBtnStyle = (activeType, disabled) =>\n    [MAP].includes(activeType) ? activeStyle : inactiveStyle(disabled);\n\nexport const getItemTypeId = (itemTypeMap, visualizationType, domainType) => {\n    const item = Object.values(itemTypeMap).find(\n        item =>\n            item.visualizationType === visualizationType &&\n            item.domainType === domainType\n    );\n    return item.id;\n};\n\nclass VisualizationItemHeaderButtons extends Component {\n    render() {\n        const {\n            item,\n            onSelectVisualization,\n            activeFooter,\n            activeType,\n            onToggleFooter,\n        } = this.props;\n\n        const domainType = itemTypeMap[item.type].domainType;\n\n        const onViewTable = () =>\n            onSelectVisualization(\n                getItemTypeId(itemTypeMap, VISUALIZATION_TYPE_TABLE, domainType)\n            );\n\n        const onViewChart = () =>\n            onSelectVisualization(\n                getItemTypeId(itemTypeMap, VISUALIZATION_TYPE_CHART, domainType)\n            );\n\n        const onViewMap = () =>\n            onSelectVisualization(\n                getItemTypeId(itemTypeMap, VISUALIZATION_TYPE_MAP, domainType)\n            );\n\n        const toggleFooterBase = activeFooter ? activeStyle : baseStyle;\n\n        const toggleFooter = {\n            ...toggleFooterBase,\n            container: {\n                ...toggleFooterBase.container,\n                ...style.toggleFooterPadding,\n                ...style.border,\n            },\n        };\n\n        // disable toggle buttons\n        let disabled = false;\n\n        if (item.type === VISUALIZATION_TYPE_CHART) {\n            if (extractFavorite(item).type.match(/^YEAR_OVER_YEAR/)) {\n                disabled = true;\n            }\n        }\n\n        const tableButtonStyle = tableBtnStyle(activeType, disabled);\n        const chartButtonStyle = chartBtnStyle(activeType, disabled);\n        const mapButtonStyle = mapBtnStyle(activeType, disabled);\n\n        return (\n            <Fragment>\n                <div style={{ marginRight: 10 }}>\n                    <ItemHeaderButton\n                        style={toggleFooter.container}\n                        onClick={onToggleFooter}\n                    >\n                        <MessageIcon style={toggleFooter.icon} />\n                    </ItemHeaderButton>\n                </div>\n                <div style={style.border}>\n                    <ItemHeaderButton\n                        disabled={disabled}\n                        style={tableButtonStyle.container}\n                        onClick={onViewTable}\n                    >\n                        <TableIcon style={tableButtonStyle.icon} />\n                    </ItemHeaderButton>\n                    <ItemHeaderButton\n                        disabled={disabled}\n                        style={chartButtonStyle.container}\n                        onClick={onViewChart}\n                    >\n                        <ChartIcon style={chartButtonStyle.icon} />\n                    </ItemHeaderButton>\n                    {domainType === DOMAIN_TYPE_AGGREGATE ? (\n                        <ItemHeaderButton\n                            disabled={disabled}\n                            style={mapButtonStyle.container}\n                            onClick={onViewMap}\n                        >\n                            <MapIcon style={mapButtonStyle.icon} />\n                        </ItemHeaderButton>\n                    ) : null}\n                </div>\n            </Fragment>\n        );\n    }\n}\n\nexport default VisualizationItemHeaderButtons;\n","// Note that this ignores discrepancies in 'this', so shouldn't be used with bound functions\n// This is useful instead of lodash/memoize when we only need to memoize a single value\n// Inspiration: https://github.com/alexreardon/memoize-one\n\nconst memoizeOne = fn => {\n    let lastArgs = undefined;\n    let lastValue = undefined;\n\n    return (...args) => {\n        if (\n            lastArgs &&\n            args.length === lastArgs.length &&\n            args.every((arg, i) => arg === lastArgs[i])\n        ) {\n            return lastValue;\n        }\n        lastArgs = args;\n        lastValue = fn(...args);\n        return lastValue;\n    };\n};\n\nexport default memoizeOne;\n","import React, { Component, Fragment } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { withStyles } from '@material-ui/core/styles';\nimport LaunchIcon from '@material-ui/icons/Launch';\nimport ChartPlugin from '@dhis2/data-visualizer-plugin';\n\nimport i18n from '@dhis2/d2-i18n';\nimport uniqueId from 'lodash/uniqueId';\n\nimport DefaultPlugin from './DefaultPlugin';\nimport ItemHeader, { HEADER_HEIGHT } from '../ItemHeader';\nimport ItemFooter from './ItemFooter';\nimport VisualizationItemHeaderButtons from './ItemHeaderButtons';\nimport * as pluginManager from './plugin';\nimport { sGetVisualization } from '../../../reducers/visualizations';\nimport { sGetItemFiltersRoot } from '../../../reducers/itemFilters';\nimport {\n    acReceivedVisualization,\n    acReceivedActiveVisualization,\n} from '../../../actions/selected';\nimport { CHART, MAP, itemTypeMap } from '../../../modules/itemTypes';\nimport { colors } from '../../../modules/colors';\nimport memoizeOne from '../../../modules/memoizeOne';\nimport { getVisualizationConfig } from './plugin';\n\nconst styles = {\n    icon: {\n        width: 16,\n        height: 16,\n        marginLeft: 3,\n        cursor: 'pointer',\n        fill: colors.muiDefaultGrey,\n    },\n    title: {\n        overflow: 'hidden',\n        maxWidth: '85%',\n        textOverflow: 'ellipsis',\n        whiteSpace: 'nowrap',\n    },\n    textDiv: {\n        fontSize: '14px',\n        fontStretch: 'normal',\n        padding: '10px',\n        lineHeight: '20px',\n    },\n};\n\nconst applyFilters = (visualization, filters) => {\n    if (!Object.keys(filters).length) {\n        return visualization;\n    }\n\n    // deep clone objects in filters to avoid changing the visualization in the Redux store\n    const visRows = visualization.rows.map(obj => ({ ...obj }));\n    const visColumns = visualization.columns.map(obj => ({ ...obj }));\n    const visFilters = visualization.filters.map(obj => ({ ...obj }));\n\n    Object.keys(filters).forEach(dimensionId => {\n        if (filters[dimensionId]) {\n            let dimensionFound = false;\n\n            [visRows, visColumns, visFilters].forEach(dimensionObjects =>\n                dimensionObjects\n                    .filter(obj => obj.dimension === dimensionId)\n                    .forEach(obj => {\n                        dimensionFound = true;\n                        obj.items = filters[dimensionId];\n                    })\n            );\n\n            // add dimension to filters if not already present elsewhere\n            if (!dimensionFound) {\n                visFilters.push({\n                    dimension: dimensionId,\n                    items: filters[dimensionId],\n                });\n            }\n        }\n    });\n\n    return {\n        ...visualization,\n        rows: visRows,\n        columns: visColumns,\n        filters: visFilters,\n    };\n};\n\nexport class Item extends Component {\n    state = {\n        showFooter: false,\n        configLoaded: false,\n    };\n\n    constructor(props, context) {\n        super(props);\n\n        this.d2 = context.d2;\n\n        this.contentRef = React.createRef();\n    }\n\n    async componentDidMount() {\n        this.props.onVisualizationLoaded(\n            // TODO do not call fetch on the pluginManager, do it here as the manager will eventually be removed...\n            await pluginManager.fetch(this.props.item)\n        );\n\n        this.setState({\n            configLoaded: true,\n        });\n    }\n\n    getUniqueKey = memoizeOne(() => uniqueId());\n\n    pluginCredentials = null;\n\n    getPluginComponent = () => {\n        const visualization = getVisualizationConfig(\n            this.props.visualization,\n            this.props.item.type,\n            this.getActiveType()\n        );\n\n        if (!visualization) {\n            return (\n                <div className={this.props.classes.textDiv}>\n                    {i18n.t('No data to display')}\n                </div>\n            );\n        }\n\n        const props = {\n            ...this.props,\n            visualization,\n            style: this.getContentStyle(),\n        };\n\n        switch (this.getActiveType()) {\n            case CHART: {\n                return (\n                    <ChartPlugin\n                        d2={this.d2}\n                        config={applyFilters(\n                            props.visualization,\n                            props.itemFilters\n                        )}\n                        forDashboard={true}\n                        style={props.style}\n                    />\n                );\n            }\n            case MAP: {\n                if (props.item.type === MAP) {\n                    // apply filters only to thematic and event layers\n                    // for maps AO\n                    const mapViews = props.visualization.mapViews.map(obj => {\n                        if (\n                            obj.layer.includes('thematic') ||\n                            obj.layer.includes('event')\n                        ) {\n                            return applyFilters(obj, props.itemFilters);\n                        }\n\n                        return obj;\n                    });\n\n                    props.visualization = {\n                        ...props.visualization,\n                        mapViews,\n                    };\n                } else {\n                    // this is the case of a non map AO passed to the maps plugin\n                    // due to a visualization type switch in dashboard item\n                    // maps plugin takes care of converting the AO to a suitable format\n                    props.visualization = applyFilters(\n                        props.visualization,\n                        props.itemFilters\n                    );\n                }\n\n                return <DefaultPlugin {...props} />;\n            }\n            default: {\n                props.visualization = applyFilters(\n                    props.visualization,\n                    props.itemFilters\n                );\n\n                return <DefaultPlugin {...props} />;\n            }\n        }\n    };\n\n    onToggleFooter = () => {\n        this.setState(\n            { showFooter: !this.state.showFooter },\n            this.props.onToggleItemExpanded(this.props.item.id)\n        );\n    };\n\n    onSelectVisualization = activeType => {\n        // Cancel request if type is already active\n        if (activeType === this.getActiveType()) {\n            return;\n        }\n\n        pluginManager.unmount(this.props.item, this.getActiveType());\n\n        this.props.onSelectVisualization(\n            this.props.visualization.id,\n            this.props.item.type,\n            activeType\n        );\n    };\n\n    getActiveType = () =>\n        this.props.visualization.activeType || this.props.item.type;\n\n    pluginIsAvailable = () =>\n        pluginManager.pluginIsAvailable(\n            this.props.item,\n            this.props.visualization\n        );\n\n    getTitle = () => {\n        const { item, editMode, classes } = this.props;\n        const itemName = pluginManager.getName(item);\n\n        return (\n            <div style={{ display: 'flex', alignItems: 'center' }}>\n                <span className={classes.title} title={itemName}>\n                    {itemName}\n                </span>\n                {!editMode && this.pluginIsAvailable() ? (\n                    <a\n                        href={pluginManager.getLink(this.props.item, this.d2)}\n                        style={{ height: 16 }}\n                        title={`View in ${\n                            itemTypeMap[this.props.item.type].appName\n                        } app`}\n                    >\n                        <LaunchIcon className={classes.icon} />\n                    </a>\n                ) : null}\n            </div>\n        );\n    };\n\n    getActionButtons = () =>\n        pluginManager.pluginIsAvailable(\n            this.props.item,\n            this.props.visualization\n        ) && !this.props.editMode ? (\n            <VisualizationItemHeaderButtons\n                item={this.props.item}\n                activeFooter={this.state.showFooter}\n                activeType={this.getActiveType()}\n                onSelectVisualization={this.onSelectVisualization}\n                onToggleFooter={this.onToggleFooter}\n            />\n        ) : null;\n\n    getContentStyle = () => {\n        const { item, editMode } = this.props;\n        const PADDING_BOTTOM = 4;\n\n        return !editMode\n            ? {\n                  height: item.originalHeight - HEADER_HEIGHT - PADDING_BOTTOM,\n              }\n            : { height: this.contentRef.offsetHeight };\n    };\n\n    render() {\n        const { item, editMode, itemFilters } = this.props;\n        const { showFooter } = this.state;\n\n        return (\n            <Fragment>\n                <ItemHeader\n                    title={this.getTitle()}\n                    actionButtons={this.getActionButtons()}\n                    editMode={editMode}\n                />\n                <div\n                    key={this.getUniqueKey(itemFilters)}\n                    className=\"dashboard-item-content\"\n                    ref={ref => (this.contentRef = ref)}\n                >\n                    {this.state.configLoaded && this.getPluginComponent()}\n                </div>\n                {!editMode && showFooter ? <ItemFooter item={item} /> : null}\n            </Fragment>\n        );\n    }\n}\n\nItem.contextTypes = {\n    d2: PropTypes.object,\n};\n\nItem.propTypes = {\n    item: PropTypes.object,\n    editMode: PropTypes.bool,\n    onToggleItemExpanded: PropTypes.func,\n    itemFilters: PropTypes.object,\n    visualization: PropTypes.object,\n};\n\nItem.defaultProps = {\n    item: {},\n    editMode: false,\n    onToggleItemExpanded: Function.prototype,\n    itemFilters: {},\n    visualization: {},\n};\n\nconst mapStateToProps = (state, ownProps) => ({\n    itemFilters: sGetItemFiltersRoot(state),\n    visualization: sGetVisualization(\n        state,\n        pluginManager.extractFavorite(ownProps.item).id\n    ),\n});\n\nconst mapDispatchToProps = dispatch => ({\n    onVisualizationLoaded: visualization =>\n        dispatch(acReceivedVisualization(visualization)),\n    onSelectVisualization: (id, type, activeType) =>\n        dispatch(acReceivedActiveVisualization(id, type, activeType)),\n});\n\nexport default connect(\n    mapStateToProps,\n    mapDispatchToProps\n)(withStyles(styles)(Item));\n","import React from 'react';\nimport { colors } from '../modules/colors';\n\nconst style = {\n    backgroundColor: colors.lightGrey,\n    border: 'none',\n    height: '1px',\n    margin: '0px 0px 5px 0px',\n};\n\nconst Line = props => <hr style={style} />;\n\nexport default Line;\n","import React, { Component, Fragment } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport i18n from '@dhis2/d2-i18n';\n\nimport { sGetMessagesRoot } from '../../../reducers/messages';\nimport { formatDate } from '../../../modules/util';\nimport { colors } from '../../../modules/colors';\nimport ItemHeader from '../ItemHeader';\nimport Line from '../../../widgets/Line';\n\nimport './MessagesItem.css';\n\nconst PRIVATE = 'PRIVATE';\n\nconst messageTypes = {\n    [PRIVATE]: 'Private',\n    VALIDATION_RESULT: 'Validation',\n    TICKET: 'Ticket',\n    SYSTEM: 'System',\n};\n\nconst style = {\n    list: {\n        listStyleType: 'none',\n        paddingLeft: '0px',\n    },\n    seeAll: {\n        textAlign: 'center',\n        fontSize: '13px',\n        marginBottom: '5px',\n    },\n    sender: {\n        fontSize: '13px',\n        lineHeight: '15px',\n        margin: 0,\n        color: colors.darkGrey,\n    },\n    snippet: {\n        color: colors.darkGrey,\n        fontSize: '13px',\n        lineHeight: '15px',\n        maxHeight: '30px',\n        overflow: 'hidden',\n    },\n};\n\nclass MessagesItem extends Component {\n    state = {\n        uiLocale: '',\n    };\n\n    async componentDidMount() {\n        const uiLocale = await this.context.d2.currentUser.userSettings.get(\n            'keyUiLocale'\n        );\n\n        this.setState({ uiLocale });\n    }\n\n    getMessageHref = msg => {\n        const msgIdentifier = msg ? `#/${msg.messageType}/${msg.id}` : '';\n        return `${this.context.baseUrl}/dhis-web-messaging/${msgIdentifier}`;\n    };\n\n    getMessageSender = msg => {\n        const latestMsg = msg.messages.slice(-1)[0];\n        return latestMsg.sender ? latestMsg.sender.displayName : '';\n    };\n\n    getMessageItems = () => {\n        const editClass = !this.props.editMode ? 'view' : null;\n\n        return this.props.messages.map(msg => {\n            const redirectToMsg = () => {\n                if (!this.props.editMode) {\n                    document.location.href = this.getMessageHref(msg);\n                }\n            };\n\n            const sender =\n                msg.messageType === PRIVATE\n                    ? this.getMessageSender(msg)\n                    : messageTypes[msg.messageType];\n\n            const readClass = !msg.read ? 'unread' : null;\n            const latestMsg = msg.messages.slice(-1)[0];\n            const msgDate = latestMsg.lastUpdated;\n\n            return (\n                <li\n                    className={`message-item ${editClass}`}\n                    key={msg.id}\n                    onClick={redirectToMsg}\n                >\n                    <p className={`message-title ${readClass}`}>\n                        {msg.displayName} ({msg.messageCount})\n                    </p>\n                    <p style={style.sender}>\n                        {sender} - {formatDate(msgDate, this.state.uiLocale)}\n                    </p>\n                    <p style={style.snippet}>{latestMsg.text}</p>\n                </li>\n            );\n        });\n    };\n\n    render() {\n        return (\n            <Fragment>\n                <ItemHeader title={i18n.t('Messages')} />\n                <Line />\n                {this.props.messages.length > 0 && (\n                    <div className=\"dashboard-item-content\">\n                        <ul style={style.list}>{this.getMessageItems()}</ul>\n                        <div style={style.seeAll}>\n                            <a href={this.getMessageHref()}>\n                                {i18n.t('See all messages')}\n                            </a>\n                        </div>\n                    </div>\n                )}\n            </Fragment>\n        );\n    }\n}\n\nMessagesItem.contextTypes = {\n    d2: PropTypes.object,\n    baseUrl: PropTypes.string,\n};\n\nconst mapStateToProps = state => {\n    return {\n        messages: Object.values(sGetMessagesRoot(state)),\n    };\n};\n\nconst MessagesContainer = connect(\n    mapStateToProps,\n    null\n)(MessagesItem);\n\nexport default MessagesContainer;\n","import React, { Fragment } from 'react';\nimport ItemHeader from '../ItemHeader';\nimport NotInterestedIcon from '@material-ui/icons/NotInterested';\n\nconst NotSupportedItem = props => (\n    <Fragment>\n        <ItemHeader title={`Item type not supported: ${props.item.type}`} />\n        <div\n            style={{\n                display: 'flex',\n                justifyContent: 'center',\n                alignItems: 'center',\n                height: '90%',\n            }}\n        >\n            <NotInterestedIcon\n                style={{ width: 100, height: 100, align: 'center' }}\n                color=\"disabled\"\n            />\n        </div>\n    </Fragment>\n);\n\nexport default NotSupportedItem;\n","import React, { Fragment } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { List, ListItem as MUIListItem } from 'material-ui/List';\nimport IconButton from '@material-ui/core/IconButton';\nimport DeleteIcon from '@material-ui/icons/Delete';\n\nimport Line from '../../../widgets/Line';\nimport {\n    itemTypeMap,\n    getItemUrl,\n    getItemIcon,\n} from '../../../modules/itemTypes';\nimport { orArray } from '../../../modules/util';\nimport { tRemoveListItemContent } from './actions';\nimport { colors } from '../../../modules/colors';\nimport ItemHeader from '../ItemHeader';\n\nconst getItemTitle = item => {\n    return itemTypeMap[item.type].pluralTitle;\n};\n\nconst getContentItems = item =>\n    orArray(item[itemTypeMap[item.type].propName]).filter(\n        (item, index, array) =>\n            array.findIndex(el => el.id === item.id) === index\n    );\n\nconst removeContent = (handler, item, contentToRemove) => () => {\n    handler(item, contentToRemove);\n};\n\nconst ListItem = (props, context) => {\n    const { item, editMode, tRemoveListItemContent } = props;\n\n    // avoid showing duplicates\n    const contentItems = getContentItems(item);\n\n    const primaryText = contentItem => {\n        const deleteButton = (\n            <IconButton\n                style={{\n                    verticalAlign: 'text-bottom',\n                    padding: '0 12px',\n                    height: 20,\n                }}\n                onClick={removeContent(\n                    tRemoveListItemContent,\n                    item,\n                    contentItem\n                )}\n            >\n                <DeleteIcon\n                    style={{\n                        width: 20,\n                        height: 20,\n                        fill: colors.red,\n                    }}\n                />\n            </IconButton>\n        );\n\n        return (\n            <div>\n                <a\n                    style={{ textDecoration: 'none' }}\n                    href={getItemUrl(item.type, contentItem, context.d2)}\n                >\n                    {contentItem.name}\n                </a>\n                {editMode ? deleteButton : null}\n            </div>\n        );\n    };\n\n    const ItemIcon = getItemIcon(item.type);\n\n    return (\n        <Fragment>\n            <ItemHeader title={getItemTitle(item)} />\n            <Line />\n            <List className=\"dashboard-item-content\">\n                {contentItems.map(contentItem => (\n                    <MUIListItem\n                        key={contentItem.id}\n                        primaryText={primaryText(contentItem)}\n                        leftIcon={<ItemIcon style={{ margin: 0 }} />}\n                        disabled={true}\n                        innerDivStyle={{ padding: '4px 4px 4px 32px' }}\n                    />\n                ))}\n            </List>\n        </Fragment>\n    );\n};\n\nListItem.contextTypes = {\n    d2: PropTypes.object,\n};\n\nconst ListItemContainer = connect(\n    null,\n    {\n        tRemoveListItemContent,\n    }\n)(ListItem);\n\nexport default ListItemContainer;\n","import {\n    acUpdateDashboardItem,\n    acRemoveDashboardItem,\n} from '../../../actions/editDashboard';\nimport { itemTypeMap } from '../../../modules/itemTypes';\n\nexport const tRemoveListItemContent = (dashboardItem, content) => dispatch => {\n    const listItemType = itemTypeMap[dashboardItem.type].propName;\n\n    const newContent = dashboardItem[listItemType].filter(\n        item => item.id !== content.id\n    );\n\n    if (newContent.length) {\n        dashboardItem[listItemType] = newContent;\n        dispatch(acUpdateDashboardItem(dashboardItem));\n    } else {\n        dispatch(acRemoveDashboardItem(dashboardItem));\n    }\n};\n","import React, { Fragment } from 'react';\nimport { connect } from 'react-redux';\nimport i18n from '@dhis2/d2-i18n';\nimport TextField from '@dhis2/d2-ui-core/text-field/TextField';\nimport {\n    Parser as RichTextParser,\n    Editor as RichTextEditor,\n} from '@dhis2/d2-ui-rich-text';\n\nimport { acUpdateDashboardItem } from '../../../actions/editDashboard';\nimport { sGetEditDashboardItems } from '../../../reducers/editDashboard';\nimport { sGetDashboardItems } from '../../../reducers/dashboards';\nimport ItemHeader from '../ItemHeader';\nimport Line from '../../../widgets/Line';\n\nconst style = {\n    textDiv: {\n        padding: '10px',\n        whiteSpace: 'pre-line',\n        lineHeight: '20px',\n    },\n    textField: {\n        fontSize: '14px',\n        fontStretch: 'normal',\n        width: '90%',\n        margin: '0 auto',\n        display: 'block',\n    },\n    container: {\n        marginBottom: '20px',\n        marginTop: '20px',\n    },\n};\n\nconst TextItem = props => {\n    const { item, editMode, text, acUpdateDashboardItem } = props;\n\n    const onChangeText = text => {\n        const updatedItem = {\n            ...item,\n            text,\n        };\n\n        acUpdateDashboardItem(updatedItem);\n    };\n\n    const viewItem = () => {\n        const textDivStyle = Object.assign({}, style.textField, style.textDiv);\n        return (\n            <div className=\"dashboard-item-content\" style={style.container}>\n                <RichTextParser style={textDivStyle}>{text}</RichTextParser>\n            </div>\n        );\n    };\n\n    const editItem = () => {\n        return (\n            <Fragment>\n                <ItemHeader title={i18n.t('Text item')} />\n                <Line />\n                <div className=\"dashboard-item-content\">\n                    <RichTextEditor onEdit={onChangeText}>\n                        <TextField\n                            value={text}\n                            multiline\n                            rows={1}\n                            fullWidth\n                            style={style.textField}\n                            placeholder={i18n.t('Add text here')}\n                            onChange={onChangeText}\n                        />\n                    </RichTextEditor>\n                </div>\n            </Fragment>\n        );\n    };\n\n    return <Fragment>{editMode ? editItem() : viewItem()}</Fragment>;\n};\n\nconst mapStateToProps = (state, ownProps) => {\n    const items = ownProps.editMode\n        ? sGetEditDashboardItems(state)\n        : sGetDashboardItems(state);\n\n    const item = items.find(item => item.id === ownProps.item.id);\n\n    return {\n        text: item ? item.text : '',\n    };\n};\n\nexport default connect(\n    mapStateToProps,\n    {\n        acUpdateDashboardItem,\n    }\n)(TextItem);\n","import React, { Fragment } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport NotInterestedIcon from '@material-ui/icons/NotInterested';\n\nimport { FILTER_ORG_UNIT } from '../../../actions/itemFilters';\nimport { sGetItemFiltersRoot } from '../../../reducers/itemFilters';\nimport ItemHeader from '../ItemHeader';\nimport Line from '../../../widgets/Line';\n\nconst getIframeSrc = (appDetails, item, itemFilters) => {\n    let iframeSrc = `${appDetails.launchUrl}?dashboardItemId=${item.id}`;\n\n    if (\n        itemFilters &&\n        itemFilters[FILTER_ORG_UNIT] &&\n        itemFilters[FILTER_ORG_UNIT].length\n    ) {\n        const ouIds = itemFilters[FILTER_ORG_UNIT].map(\n            ouPath => ouPath.split('/').slice(-1)[0]\n        );\n\n        iframeSrc += `&userOrgUnit=${ouIds.join(',')}`;\n    }\n\n    return iframeSrc;\n};\n\nconst AppItem = ({ item, itemFilters }, context) => {\n    let appDetails;\n\n    const appKey = item.appKey;\n\n    if (appKey) {\n        appDetails = context.d2.system.installedApps.find(\n            app => app.key === appKey\n        );\n    }\n\n    return appDetails && appDetails.name && appDetails.launchUrl ? (\n        <Fragment>\n            <ItemHeader title={appDetails.name} />\n            <Line />\n            <iframe\n                title={appDetails.name}\n                src={getIframeSrc(appDetails, item, itemFilters)}\n                className=\"dashboard-item-content\"\n                style={{ border: 'none' }}\n            />\n        </Fragment>\n    ) : (\n        <Fragment>\n            <ItemHeader title={`${appKey} app not found`} />\n            <Line />\n            <div\n                className=\"dashboard-item-content\"\n                style={{\n                    display: 'flex',\n                    justifyContent: 'center',\n                    alignItems: 'center',\n                    height: '90%',\n                }}\n            >\n                <NotInterestedIcon\n                    color=\"disabled\"\n                    disabled\n                    style={{ width: 100, height: 100, align: 'center' }}\n                />\n            </div>\n        </Fragment>\n    );\n};\n\nAppItem.contextTypes = {\n    d2: PropTypes.object,\n};\n\nconst mapStateToProps = state => ({\n    itemFilters: sGetItemFiltersRoot(state),\n});\n\nexport default connect(mapStateToProps)(AppItem);\n","import React, { Fragment } from 'react';\nimport i18n from '@dhis2/d2-i18n';\n\nimport { colors } from '../../../modules/colors';\nimport ItemHeader from '../ItemHeader';\n\nconst style = {\n    margin: '21px 28px',\n    fontSize: '14px',\n    lineHeight: '18px',\n    color: colors.charcoalGrey,\n};\n\nconst SpacerItem = () => {\n    return (\n        <Fragment>\n            <ItemHeader title={i18n.t('Spacer')} />\n            <p style={style}>\n                {i18n.t(\n                    'Use a spacer to create empty vertical space between other dashboard items.'\n                )}\n            </p>\n        </Fragment>\n    );\n};\n\nexport default SpacerItem;\n","import React from 'react';\n\nimport VisualizationItem from './VisualizationItem/Item';\nimport MessagesItem from './MessagesItem/Item';\nimport NotSupportedItem from './NotSupportedItem/Item';\nimport ListItem from './ListItem/Item';\nimport TextItem from './TextItem/Item';\nimport AppItem from './AppItem/Item';\nimport SpacerItem from './SpacerItem/Item';\nimport {\n    APP,\n    REPORT_TABLE,\n    CHART,\n    MAP,\n    EVENT_CHART,\n    EVENT_REPORT,\n    MESSAGES,\n    REPORTS,\n    RESOURCES,\n    USERS,\n    TEXT,\n    SPACER,\n} from '../../modules/itemTypes';\nimport { DEFAULT_STATE_ITEM_FILTERS } from '../../reducers/itemFilters';\n\nconst getGridItem = type => {\n    switch (type) {\n        case REPORT_TABLE:\n        case CHART:\n        case MAP:\n        case EVENT_CHART:\n        case EVENT_REPORT:\n            return VisualizationItem;\n        case MESSAGES:\n            return MessagesItem;\n        case REPORTS:\n        case RESOURCES:\n        case USERS:\n            return ListItem;\n        case TEXT:\n            return TextItem;\n        case SPACER:\n            return SpacerItem;\n        case APP:\n            return AppItem;\n        default:\n            return NotSupportedItem;\n    }\n};\n\nexport const Item = props => {\n    const GridItem = getGridItem(props.item.type);\n\n    return (\n        <GridItem\n            item={props.item}\n            editMode={props.editMode}\n            itemFilters={\n                props.editMode ? DEFAULT_STATE_ITEM_FILTERS : props.itemFilters\n            }\n            onToggleItemExpanded={props.onToggleItemExpanded}\n        />\n    );\n};\n","import React from 'react';\nimport ItemHeaderButton from '../Item/ItemHeaderButton';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport { colors } from '../../modules/colors';\n\nconst style = {\n    button: {\n        position: 'absolute',\n        top: '7px',\n        right: '7px',\n        zIndex: '1000',\n    },\n    icon: {\n        fill: colors.red,\n    },\n};\n\nconst DeleteItemHeaderButton = ({ onClick }) => (\n    <ItemHeaderButton onClick={onClick} style={style.button}>\n        <DeleteIcon style={style.icon} />\n    </ItemHeaderButton>\n);\n\nexport default DeleteItemHeaderButton;\n","import React from 'react';\nimport LoadingMask from '@dhis2/d2-ui-core/loading-mask/LoadingMask.component';\n\nconst styles = {\n    modal: {\n        position: 'absolute',\n        top: 0,\n        left: 0,\n        width: '100%',\n        height: '100%',\n        zIndex: 999999998,\n        pointerEvents: 'none',\n    },\n    dark: {\n        backgroundColor: '#000000',\n        opacity: 0.2,\n        zIndex: 999999999,\n    },\n};\n\nconst ModalLoadingMask = ({ isLoading }) => {\n    if (!isLoading) {\n        return null;\n    }\n\n    return (\n        <div className=\"loading-mask-wrapper\">\n            <div style={styles.modal}>\n                <LoadingMask />\n            </div>\n            <div\n                style={{\n                    ...styles.modal,\n                    ...styles.dark,\n                }}\n            />\n        </div>\n    );\n};\n\nexport default ModalLoadingMask;\n","import React from 'react';\nimport { colors } from '../modules/colors';\n\nexport const NoContentMessage = ({ text }) => (\n    <div\n        style={{\n            padding: '50px 10px',\n            textAlign: 'center',\n            fontSize: '15px',\n            fontWeight: 500,\n            color: colors.charcoalGrey,\n        }}\n    >\n        {text}\n    </div>\n);\n\nexport default NoContentMessage;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport debounce from 'lodash/debounce';\n\nconst defaultDebounceMs = 100;\nconst defaultBufferFactor = 0.25;\n\nclass ProgressiveLoadingContainer extends Component {\n    static propTypes = {\n        children: PropTypes.node.isRequired,\n        debounceMs: PropTypes.number,\n        bufferFactor: PropTypes.number,\n    };\n    static defaultProps = {\n        debounceMs: defaultDebounceMs,\n        bufferFactor: defaultBufferFactor,\n    };\n\n    state = {\n        shouldLoad: false,\n    };\n    containerRef = null;\n    shouldLoadHandler = null;\n\n    checkShouldLoad() {\n        const bufferPx = this.props.bufferFactor * window.innerHeight;\n\n        if (!this.containerRef) {\n            return;\n        }\n\n        const rect = this.containerRef.getBoundingClientRect();\n        if (\n            rect.bottom > -bufferPx &&\n            rect.top < window.innerHeight + bufferPx\n        ) {\n            this.setState({\n                shouldLoad: true,\n            });\n\n            this.removeHandler();\n        }\n    }\n\n    registerHandler() {\n        this.shouldLoadHandler = debounce(\n            () => this.checkShouldLoad(),\n            this.props.debounceMs\n        );\n\n        window.addEventListener('scroll', this.shouldLoadHandler);\n    }\n    removeHandler() {\n        window.removeEventListener('scroll', this.shouldLoadHandler);\n    }\n\n    componentDidMount() {\n        this.registerHandler();\n        this.checkShouldLoad();\n    }\n\n    componentWillUnmount() {\n        this.removeHandler();\n    }\n\n    render() {\n        const { children, debounceMs, bufferFactor, ...props } = this.props;\n        const { shouldLoad } = this.state;\n\n        return (\n            <div ref={ref => (this.containerRef = ref)} {...props}>\n                {shouldLoad && children}\n            </div>\n        );\n    }\n}\n\nexport default ProgressiveLoadingContainer;\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport i18n from '@dhis2/d2-i18n';\nimport ReactGridLayout from 'react-grid-layout';\n\nimport {\n    acUpdateDashboardLayout,\n    acRemoveDashboardItem,\n} from '../../actions/editDashboard';\nimport { Item } from '../Item/Item';\nimport { resize as pluginResize } from '../Item/VisualizationItem/plugin';\nimport { isPluginType } from '../../modules/itemTypes';\nimport {\n    GRID_ROW_HEIGHT,\n    GRID_COMPACT_TYPE,\n    ITEM_MIN_HEIGHT,\n    MARGIN,\n    getGridColumns,\n    hasShape,\n    onItemResize,\n} from './gridUtil';\nimport { orArray } from '../../modules/util';\nimport DeleteItemButton from './DeleteItemButton';\nimport ModalLoadingMask from '../../widgets/ModalLoadingMask';\nimport NoContentMessage from '../../widgets/NoContentMessage';\n\nimport 'react-grid-layout/css/styles.css';\nimport 'react-resizable/css/styles.css';\n\nimport './ItemGrid.css';\nimport { sGetSelectedId, sGetSelectedIsLoading } from '../../reducers/selected';\nimport {\n    sGetEditDashboardRoot,\n    sGetEditDashboardItems,\n} from '../../reducers/editDashboard';\nimport {\n    sGetDashboardById,\n    sGetDashboardItems,\n} from '../../reducers/dashboards';\nimport ProgressiveLoadingContainer from '../Item/ProgressiveLoadingContainer';\n\n// Component\n\nconst EXPANDED_HEIGHT = 17;\n\nexport class ItemGrid extends Component {\n    state = {\n        expandedItems: {},\n    };\n\n    NO_ITEMS_MESSAGE = i18n.t('There are no items on this dashboard');\n\n    onToggleItemExpanded = clickedId => {\n        const isExpanded =\n            typeof this.state.expandedItems[clickedId] === 'boolean'\n                ? this.state.expandedItems[clickedId]\n                : false;\n\n        const expandedItems = { ...this.state.expandedItems };\n        expandedItems[clickedId] = !isExpanded;\n        this.setState({ expandedItems });\n    };\n\n    onRemoveItem = clickedId => {\n        this.props.acRemoveDashboardItem(clickedId);\n    };\n\n    componentWillReceiveProps(nextProps) {\n        if (nextProps.edit) {\n            this.setState({ expandedItems: {} });\n        }\n    }\n\n    onLayoutChange = newLayout => {\n        if (this.props.edit) {\n            this.props.acUpdateDashboardLayout(newLayout);\n        }\n    };\n\n    onResizeStop = (layout, oldItem, newItem) => {\n        onItemResize(newItem.i);\n\n        const dashboardItem = this.props.dashboardItems.find(\n            item => item.id === newItem.i\n        );\n\n        // call resize on the item component if it's a plugin type\n        if (dashboardItem && isPluginType(dashboardItem)) {\n            pluginResize(dashboardItem);\n        }\n    };\n\n    onRemoveItemWrapper = id => () => this.onRemoveItem(id);\n\n    render() {\n        const { edit, isLoading, dashboardItems } = this.props;\n\n        if (!isLoading && !dashboardItems.length) {\n            return <NoContentMessage text={this.NO_ITEMS_MESSAGE} />;\n        }\n\n        const items = dashboardItems.map((item, index) => {\n            const expandedItem = this.state.expandedItems[item.id];\n            let hProp = { h: item.h };\n\n            if (expandedItem && expandedItem === true) {\n                hProp.h = item.h + EXPANDED_HEIGHT;\n            }\n\n            return Object.assign({}, item, hProp, {\n                i: item.id,\n                minH: ITEM_MIN_HEIGHT,\n            });\n        });\n\n        return (\n            <div className=\"grid-wrapper\">\n                <ModalLoadingMask isLoading={isLoading} />\n                <ReactGridLayout\n                    onLayoutChange={this.onLayoutChange}\n                    onResizeStop={this.onResizeStop}\n                    className=\"layout\"\n                    layout={items}\n                    margin={MARGIN}\n                    cols={getGridColumns()}\n                    rowHeight={GRID_ROW_HEIGHT}\n                    width={window.innerWidth}\n                    compactType={GRID_COMPACT_TYPE}\n                    isDraggable={edit}\n                    isResizable={edit}\n                    draggableCancel=\"input,textarea\"\n                >\n                    {items.map(item => {\n                        const itemClassNames = [\n                            item.type,\n                            edit ? 'edit' : 'view',\n                        ].join(' ');\n\n                        return (\n                            <ProgressiveLoadingContainer\n                                key={item.i}\n                                className={itemClassNames}\n                            >\n                                {edit ? (\n                                    <DeleteItemButton\n                                        onClick={this.onRemoveItemWrapper(\n                                            item.id\n                                        )}\n                                    />\n                                ) : null}\n                                <Item\n                                    item={item}\n                                    editMode={edit}\n                                    onToggleItemExpanded={\n                                        this.onToggleItemExpanded\n                                    }\n                                />\n                            </ProgressiveLoadingContainer>\n                        );\n                    })}\n                </ReactGridLayout>\n            </div>\n        );\n    }\n}\n\nItemGrid.propTypes = {\n    dashboardItems: PropTypes.array,\n};\n\nItemGrid.defaultProps = {\n    dashboardItems: [],\n};\n\n// Container\n\nconst mapStateToProps = (state, ownProps) => {\n    const selectedDashboard = ownProps.edit\n        ? sGetEditDashboardRoot(state)\n        : sGetDashboardById(state, sGetSelectedId(state));\n\n    const dashboardItems = ownProps.edit\n        ? sGetEditDashboardItems(state)\n        : sGetDashboardItems(state);\n\n    return {\n        isLoading: sGetSelectedIsLoading(state) || !selectedDashboard,\n        dashboardItems,\n    };\n};\n\nconst mapDispatchToProps = {\n    acUpdateDashboardLayout,\n    acRemoveDashboardItem,\n};\n\nconst mergeProps = (stateProps, dispatchProps, ownProps) => {\n    const validItems = orArray(stateProps.dashboardItems).filter(hasShape);\n\n    return {\n        ...dispatchProps,\n        edit: ownProps.edit,\n        isLoading: stateProps.isLoading,\n        dashboardItems: validItems,\n        onItemResize,\n    };\n};\n\nexport default connect(\n    mapStateToProps,\n    mapDispatchToProps,\n    mergeProps\n)(ItemGrid);\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nimport i18n from '@dhis2/d2-i18n';\n\nimport { colors } from '../../modules/colors';\n\nconst styles = {\n    badgeContainer: {\n        margin: '2px',\n        padding: '0 16px',\n        borderRadius: '4px',\n        color: colors.white,\n        backgroundColor: '#212934',\n        height: 36,\n        display: 'flex',\n        alignItems: 'center',\n    },\n    badge: {\n        fontSize: '13px',\n        cursor: 'pointer',\n        whiteSpace: 'nowrap',\n    },\n    badgeRemove: {\n        fontSize: '12px',\n        textDecoration: 'underline',\n        marginLeft: '24px',\n        cursor: 'pointer',\n    },\n};\n\nclass FilterBadge extends Component {\n    onClick = id => () => this.props.onClick(id);\n    onRemove = id => () => this.props.onRemove(id);\n\n    render() {\n        const { data } = this.props;\n\n        return (\n            <div style={styles.badgeContainer}>\n                <span style={styles.badge} onClick={this.onClick(data.id)}>\n                    {`${data.name}: ${\n                        data.values.length > 1\n                            ? i18n.t('{{count}} selected', {\n                                  count: data.values.length,\n                              })\n                            : data.values[0].name\n                    }`}\n                </span>\n                <span\n                    style={styles.badgeRemove}\n                    onClick={this.onRemove(data.id)}\n                >\n                    {i18n.t('Remove')}\n                </span>\n            </div>\n        );\n    }\n}\n\nFilterBadge.propTypes = {\n    data: PropTypes.object.isRequired,\n    onClick: PropTypes.func.isRequired,\n    onRemove: PropTypes.func.isRequired,\n};\n\nFilterBadge.defaultProps = {\n    onClick: Function.prototype,\n    onRemove: Function.prototype,\n};\n\nexport default FilterBadge;\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { createSelector } from 'reselect';\nimport { withStyles } from '@material-ui/core/styles';\n\nimport { sGetDimensions } from '../../reducers/dimensions';\nimport { sGetItemFiltersRoot } from '../../reducers/itemFilters';\nimport { sGetControlBarUserRows } from '../../reducers/controlBar';\nimport { getTopOffset } from '../ControlBar/controlBarDimensions';\nimport { acRemoveItemFilter } from '../../actions/itemFilters';\nimport { acRemoveEditItemFilter } from '../../actions/editItemFilters';\nimport { acSetActiveModalDimension } from '../../actions/activeModalDimension';\n\nimport FilterBadge from './FilterBadge';\n\nconst styles = {\n    bar: {\n        position: 'sticky',\n        zIndex: 7,\n        padding: '8px 0',\n        display: 'flex',\n        justifyContent: 'center',\n        flexWrap: 'wrap',\n    },\n};\n\nexport class FilterBar extends Component {\n    onBadgeRemove = id => {\n        this.props.removeItemFilter(id);\n        this.props.removeEditItemFilter(id);\n    };\n\n    onBadgeClick = id => {\n        this.props.setActiveModalDimension({\n            id,\n            name: this.props.filters.find(item => item.id === id).name,\n        });\n    };\n\n    render() {\n        const { filters, userRows, classes } = this.props;\n        const top = getTopOffset(userRows) + 10;\n\n        return filters.length ? (\n            <div className={classes.bar} style={{ top }}>\n                {filters.map(filter => (\n                    <FilterBadge\n                        key={filter.id}\n                        data={filter}\n                        onClick={this.onBadgeClick}\n                        onRemove={this.onBadgeRemove}\n                    />\n                ))}\n            </div>\n        ) : null;\n    }\n}\n\nFilterBar.propTypes = {\n    filters: PropTypes.array.isRequired,\n    removeItemFilter: PropTypes.func.isRequired,\n    removeEditItemFilter: PropTypes.func.isRequired,\n};\n\nFilterBar.defaultProps = {\n    filters: [],\n    removeItemFIlter: Function.prototype,\n    removeEditItemFilter: Function.prototype,\n};\n\n// simplify the filters structure to:\n// [{ id: 'pe', name: 'Period', values: [{ id: 2019: name: '2019' }, {id: 'LAST_MONTH', name: 'Last month' }]}, ...]\nconst filtersSelector = createSelector(\n    [sGetItemFiltersRoot, sGetDimensions],\n    (filters, dimensions) =>\n        Object.keys(filters).reduce((arr, id) => {\n            arr.push({\n                id: id,\n                name: dimensions[id].name,\n                values: filters[id].map(value => ({\n                    id: value.id,\n                    name: value.displayName || value.name,\n                })),\n            });\n\n            return arr;\n        }, [])\n);\n\nconst mapStateToProps = state => ({\n    filters: filtersSelector(state),\n    userRows: sGetControlBarUserRows(state),\n});\n\nexport default connect(\n    mapStateToProps,\n    {\n        setActiveModalDimension: acSetActiveModalDimension,\n        removeItemFilter: acRemoveItemFilter,\n        removeEditItemFilter: acRemoveEditItemFilter,\n    }\n)(withStyles(styles)(FilterBar));\n","import React, { Fragment } from 'react';\nimport TitleBar from '../TitleBar/TitleBar';\nimport ItemGrid from '../ItemGrid/ItemGrid';\nimport FilterBar from '../FilterBar/FilterBar';\n\nexport const DashboardContent = props => (\n    <Fragment>\n        <TitleBar edit={props.editMode} />\n        <FilterBar />\n        <ItemGrid edit={props.editMode} />\n    </Fragment>\n);\n\nexport default DashboardContent;\n","import React, { Fragment } from 'react';\nimport { connect } from 'react-redux';\nimport isEmpty from 'lodash/isEmpty';\nimport i18n from '@dhis2/d2-i18n';\n\nimport {\n    sGetAllDashboards,\n    sDashboardsIsFetching,\n} from '../../reducers/dashboards';\nimport { sGetSelectedId } from '../../reducers/selected';\nimport DashboardsBar from '../ControlBar/DashboardsBar';\nimport DashboardVerticalOffset from './DashboardVerticalOffset';\nimport DashboardContent from './DashboardContent';\nimport NoContentMessage from '../../widgets/NoContentMessage';\n\nexport const Content = ({ hasDashboardContent, dashboardsIsEmpty }) => {\n    const msg = dashboardsIsEmpty\n        ? i18n.t(\n              'No dashboards found. Use the + button to create a new dashboard.'\n          )\n        : i18n.t('Requested dashboard not found');\n\n    return hasDashboardContent ? (\n        <DashboardContent editMode={false} />\n    ) : (\n        <NoContentMessage text={msg} />\n    );\n};\n\nexport const ViewDashboard = ({ id, dashboardsIsEmpty, dashboardsLoaded }) => {\n    const hasDashboardContent = id && !dashboardsIsEmpty;\n    const contentNotReady = !dashboardsLoaded || id === null;\n\n    return (\n        <Fragment>\n            <DashboardsBar />\n            <DashboardVerticalOffset />\n            <div className=\"dashboard-wrapper\">\n                {contentNotReady ? null : (\n                    <Content\n                        hasDashboardContent={hasDashboardContent}\n                        dashboardsIsEmpty={dashboardsIsEmpty}\n                    />\n                )}\n            </div>\n        </Fragment>\n    );\n};\n\nconst mapStateToProps = state => {\n    const dashboards = sGetAllDashboards(state);\n\n    return {\n        id: sGetSelectedId(state),\n        dashboardsIsEmpty: isEmpty(dashboards),\n        dashboardsLoaded: !sDashboardsIsFetching(state),\n    };\n};\n\nexport default connect(mapStateToProps)(ViewDashboard);\n","import React from 'react';\nimport RaisedButton from 'material-ui/RaisedButton';\n\nimport './PrimaryButton.css';\n\nconst PrimaryButton = props => {\n    const { onClick, children, disabled, style } = props;\n    const label = typeof children === 'string' ? children : null;\n    const classes = ['d2ui-primary-button', disabled ? 'disabled' : null].join(\n        ' '\n    );\n\n    return (\n        <RaisedButton\n            className={classes}\n            style={style}\n            primary={true}\n            onClick={onClick}\n            label={label}\n            disabled={disabled}\n        />\n    );\n};\n\nexport default PrimaryButton;\n","import React from 'react';\nimport MuiFlatButton from 'material-ui/FlatButton';\nimport { colors } from '../modules/colors';\n\nconst defaultStyles = {\n    color: colors.royalBlue,\n    backgroundColor: 'transparent',\n    minWidth: '30px',\n};\n\nconst FlatButton = ({ onClick, children, style, disabled }) => {\n    const label = typeof children === 'string' ? children : null;\n    const classes = ['d2ui-flat-button', disabled ? 'disabled' : null].join(\n        ' '\n    );\n\n    const combinedStyle = Object.assign({}, defaultStyles, style);\n\n    return (\n        <MuiFlatButton\n            className={classes}\n            style={combinedStyle}\n            onClick={onClick}\n            label={label}\n            disabled={disabled}\n        >\n            {typeof children !== 'string' ? children : null}\n        </MuiFlatButton>\n    );\n};\n\nexport default FlatButton;\n","import React from 'react';\nimport i18n from '@dhis2/d2-i18n';\nimport Dialog from 'material-ui/Dialog';\n\nimport FlatButton from '../../widgets/FlatButton';\nimport PrimaryButton from '../../widgets/PrimaryButton';\n\nexport const ConfirmDeleteDialog = ({\n    dashboardName,\n    onDeleteConfirmed,\n    onContinueEditing,\n    open,\n}) => {\n    const actions = [\n        <FlatButton onClick={onDeleteConfirmed}>{i18n.t('Delete')}</FlatButton>,\n        <PrimaryButton onClick={onContinueEditing}>\n            {i18n.t('Continue editing')}\n        </PrimaryButton>,\n    ];\n\n    return (\n        <Dialog\n            title={i18n.t('Confirm delete dashboard')}\n            actions={actions}\n            modal={true}\n            open={open}\n        >\n            {i18n.t(\n                'Are you sure you want to delete dashboard \"{{ dashboardName }}\"?',\n                { dashboardName }\n            )}\n        </Dialog>\n    );\n};\n\nexport default ConfirmDeleteDialog;\n","import React, { Component, Fragment } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { Redirect } from 'react-router-dom';\nimport i18n from '@dhis2/d2-i18n';\nimport ControlBar from '@dhis2/d2-ui-core/control-bar/ControlBar';\nimport TranslationDialog from '@dhis2/d2-ui-translation-dialog';\n\nimport PrimaryButton from '../../widgets/PrimaryButton';\nimport FlatButton from '../../widgets/FlatButton';\nimport ConfirmDeleteDialog from './ConfirmDeleteDialog';\nimport {\n    tSaveDashboard,\n    acClearEditDashboard,\n} from '../../actions/editDashboard';\nimport {\n    tDeleteDashboard,\n    acSetDashboardDisplayName,\n} from '../../actions/dashboards';\nimport {\n    sGetEditDashboardRoot,\n    sGetIsNewDashboard,\n} from '../../reducers/editDashboard';\nimport {\n    CONTROL_BAR_ROW_HEIGHT,\n    MIN_ROW_COUNT,\n    getControlBarHeight,\n} from './controlBarDimensions';\nimport { apiFetchDashboard } from '../../api/dashboards';\n\nimport './ControlBar.css';\n\nconst buttonBarStyle = {\n    height: CONTROL_BAR_ROW_HEIGHT,\n    paddingTop: '15px',\n    marginLeft: '15px',\n    marginRight: '15px',\n};\n\nexport class EditBar extends Component {\n    state = {\n        translationDialogIsOpen: false,\n        dashboardModel: undefined,\n        confirmDeleteDialogOpen: false,\n        redirectUrl: undefined,\n    };\n\n    onConfirmDelete = () => {\n        this.setState({ confirmDeleteDialogOpen: true });\n    };\n\n    onSave = () => {\n        this.props.onSave().then(newId => {\n            this.setState({ redirectUrl: `/${newId}` });\n        });\n    };\n\n    onDiscard = () => {\n        this.props.onDiscardChanges();\n        const redirectUrl = this.props.dashboardId\n            ? `/${this.props.dashboardId}`\n            : '/';\n        this.setState({ redirectUrl });\n    };\n\n    onContinueEditing = () => {\n        this.setState({ confirmDeleteDialogOpen: false });\n    };\n\n    onDeleteConfirmed = () => {\n        this.setState({ confirmDeleteDialogOpen: false });\n        this.props.onDelete(this.props.dashboardId).then(() => {\n            this.setState({ redirectUrl: '/' });\n        });\n    };\n\n    onTranslationsSaved = async translations => {\n        if (translations && translations.length) {\n            const dbLocale = await this.context.d2.currentUser.userSettings.get(\n                'keyDbLocale'\n            );\n\n            const translation = translations.find(\n                t => t.locale === dbLocale && t.property === 'NAME'\n            );\n\n            if (translation && translation.value) {\n                this.props.onTranslate(\n                    this.props.dashboardId,\n                    translation.value\n                );\n            }\n        }\n    };\n\n    fetchDashboardModel = () => {\n        if (this.props.dashboardId && !this.state.dashboardModel) {\n            apiFetchDashboard(this.props.dashboardId).then(dashboardModel =>\n                this.setState({ dashboardModel })\n            );\n        }\n    };\n\n    componentDidMount() {\n        this.fetchDashboardModel();\n    }\n\n    componentDidUpdate() {\n        this.fetchDashboardModel();\n    }\n\n    toggleTranslationDialog = () => {\n        this.setState({\n            translationDialogIsOpen: !this.state.translationDialogIsOpen,\n        });\n    };\n\n    confirmDeleteDialog = () =>\n        this.props.deleteAccess && this.props.dashboardId ? (\n            <ConfirmDeleteDialog\n                dashboardName={this.props.dashboardName}\n                onDeleteConfirmed={this.onDeleteConfirmed}\n                onContinueEditing={this.onContinueEditing}\n                open={this.state.confirmDeleteDialogOpen}\n            />\n        ) : null;\n\n    translationDialog = () =>\n        this.state.dashboardModel && this.state.dashboardModel.id ? (\n            <TranslationDialog\n                className=\"translation-dialog\"\n                d2={this.context.d2}\n                open={this.state.translationDialogIsOpen}\n                onRequestClose={this.toggleTranslationDialog}\n                objectToTranslate={this.state.dashboardModel}\n                fieldsToTranslate={['name', 'description']}\n                // TODO handle messages in snackbar\n                onTranslationSaved={this.onTranslationsSaved}\n                onTranslationError={err =>\n                    console.log('translation update error', err)\n                }\n            />\n        ) : null;\n\n    render() {\n        if (this.state.redirectUrl) {\n            return <Redirect to={this.state.redirectUrl} />;\n        }\n\n        const { dashboardId, deleteAccess, updateAccess } = this.props;\n        const controlBarHeight = getControlBarHeight(MIN_ROW_COUNT, false);\n\n        const discardBtnText = updateAccess\n            ? i18n.t('Exit without saving')\n            : i18n.t('Go to dashboards');\n\n        return (\n            <Fragment>\n                <ControlBar\n                    height={controlBarHeight}\n                    editMode={true}\n                    expandable={false}\n                >\n                    <div style={buttonBarStyle}>\n                        {updateAccess ? (\n                            <div className=\"left-controls\">\n                                <span style={{ marginRight: '15px' }}>\n                                    <PrimaryButton\n                                        className=\"save-button\"\n                                        onClick={this.onSave}\n                                    >\n                                        {i18n.t('Save changes')}\n                                    </PrimaryButton>\n                                </span>\n                                {dashboardId && deleteAccess ? (\n                                    <FlatButton\n                                        className=\"delete-button\"\n                                        onClick={this.onConfirmDelete}\n                                    >\n                                        {i18n.t('Delete')}\n                                    </FlatButton>\n                                ) : null}\n                                {dashboardId ? (\n                                    <FlatButton\n                                        className=\"translate-button\"\n                                        onClick={this.toggleTranslationDialog}\n                                    >\n                                        {i18n.t('Translate')}\n                                    </FlatButton>\n                                ) : null}\n                            </div>\n                        ) : null}\n\n                        <div className=\"right-controls\">\n                            <FlatButton\n                                className=\"discard-button\"\n                                onClick={this.onDiscard}\n                            >\n                                {discardBtnText}\n                            </FlatButton>\n                        </div>\n                    </div>\n                </ControlBar>\n                {this.translationDialog()}\n                {this.confirmDeleteDialog()}\n            </Fragment>\n        );\n    }\n}\n\nEditBar.contextTypes = {\n    d2: PropTypes.object,\n};\n\nconst mapStateToProps = state => {\n    const dashboard = sGetEditDashboardRoot(state);\n\n    let deleteAccess;\n    let updateAccess;\n    if (sGetIsNewDashboard(state)) {\n        deleteAccess = true;\n        updateAccess = true;\n    } else {\n        updateAccess = dashboard.access ? dashboard.access.update : false;\n        deleteAccess = dashboard.access ? dashboard.access.delete : false;\n    }\n\n    return {\n        dashboardId: dashboard.id,\n        dashboardName: dashboard.name,\n        deleteAccess,\n        updateAccess,\n    };\n};\n\nconst mapDispatchToProps = dispatch => ({\n    onSave: () => dispatch(tSaveDashboard()).then(id => id),\n    onDelete: id => dispatch(tDeleteDashboard(id)),\n    onDiscardChanges: () => dispatch(acClearEditDashboard()),\n    onTranslate: (id, value) => dispatch(acSetDashboardDisplayName(id, value)),\n});\n\nexport default connect(\n    mapStateToProps,\n    mapDispatchToProps\n)(EditBar);\n","import React, { Fragment, Component } from 'react';\nimport { connect } from 'react-redux';\nimport i18n from '@dhis2/d2-i18n';\n\nimport { acSetEditDashboard } from '../../actions/editDashboard';\nimport { sGetSelectedId } from '../../reducers/selected';\nimport {\n    sGetDashboardById,\n    sGetDashboardItems,\n    sDashboardsIsFetching,\n} from '../../reducers/dashboards';\nimport DashboardVerticalOffset from './DashboardVerticalOffset';\nimport DashboardContent from './DashboardContent';\nimport EditBar from '../ControlBar/EditBar';\nimport NoContentMessage from '../../widgets/NoContentMessage';\n\nexport const Content = ({ updateAccess }) => {\n    return updateAccess ? (\n        <DashboardContent editMode={true} />\n    ) : (\n        <NoContentMessage text={i18n.t('No access')} />\n    );\n};\nexport class EditDashboard extends Component {\n    state = {\n        initialized: false,\n    };\n\n    initEditDashboard = () => {\n        if (this.props.dashboard) {\n            this.setState({ initialized: true });\n            this.props.setEditDashboard(this.props.dashboard, this.props.items);\n        }\n    };\n\n    componentDidMount() {\n        this.initEditDashboard();\n    }\n\n    componentDidUpdate() {\n        if (!this.state.initialized) {\n            this.initEditDashboard();\n        }\n    }\n\n    getDashboardContent = () => {\n        const contentNotReady =\n            !this.props.dashboardsLoaded || this.props.id === null;\n\n        return (\n            <div className=\"dashboard-wrapper\">\n                {contentNotReady ? null : (\n                    <Content updateAccess={this.props.updateAccess} />\n                )}\n            </div>\n        );\n    };\n\n    render() {\n        return (\n            <Fragment>\n                <EditBar />\n                <DashboardVerticalOffset editMode={true} />\n                {this.getDashboardContent()}\n            </Fragment>\n        );\n    }\n}\n\nconst mapStateToProps = state => {\n    const id = sGetSelectedId(state);\n    const dashboard = id ? sGetDashboardById(state, id) : null;\n\n    const updateAccess =\n        dashboard && dashboard.access ? dashboard.access.update : false;\n\n    return {\n        dashboard,\n        id,\n        updateAccess,\n        items: sGetDashboardItems(state),\n        dashboardsLoaded: !sDashboardsIsFetching(state),\n    };\n};\n\nexport default connect(\n    mapStateToProps,\n    {\n        setEditDashboard: acSetEditDashboard,\n    }\n)(EditDashboard);\n","import React, { Component, Fragment } from 'react';\nimport { connect } from 'react-redux';\n\nimport { acSetEditNewDashboard } from '../../actions/editDashboard';\nimport DashboardVerticalOffset from './DashboardVerticalOffset';\nimport EditBar from '../ControlBar/EditBar';\nimport DashboardContent from './DashboardContent';\n\nclass NewDashboard extends Component {\n    componentDidMount() {\n        this.props.setNewDashboard();\n    }\n\n    render() {\n        return (\n            <Fragment>\n                <EditBar />\n                <DashboardVerticalOffset editMode={true} />\n                <div className=\"dashboard-wrapper\">\n                    <DashboardContent editMode={true} />\n                </div>\n            </Fragment>\n        );\n    }\n}\n\nexport default connect(\n    null,\n    {\n        setNewDashboard: acSetEditNewDashboard,\n    }\n)(NewDashboard);\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\n\nimport { tSelectDashboard } from '../../actions/dashboards';\nimport { sDashboardsIsFetching } from '../../reducers/dashboards';\nimport { EDIT, NEW } from './dashboardModes';\nimport ViewDashboard from './ViewDashboard';\nimport EditDashboard from './EditDashboard';\nimport NewDashboard from './NewDashboard';\n\nclass Dashboard extends Component {\n    setDashboard = () => {\n        if (this.props.dashboardsLoaded) {\n            const id = this.props.match.params.dashboardId || null;\n\n            this.props.selectDashboard(id);\n\n            this.scrollToTop();\n        }\n    };\n\n    scrollToTop = () => {\n        window.scrollTo(0, 0);\n    };\n\n    componentDidMount() {\n        this.setDashboard();\n    }\n\n    componentDidUpdate() {\n        this.setDashboard();\n    }\n\n    render() {\n        switch (this.props.mode) {\n            case EDIT:\n                return <EditDashboard />;\n            case NEW:\n                return <NewDashboard />;\n            default:\n                return <ViewDashboard />;\n        }\n    }\n}\n\nconst mapStateToProps = state => {\n    return { dashboardsLoaded: !sDashboardsIsFetching(state) };\n};\n\nexport default connect(\n    mapStateToProps,\n    {\n        selectDashboard: tSelectDashboard,\n    }\n)(Dashboard);\n","export const EDIT = 'edit';\nexport const NEW = 'new';\nexport const VIEW = 'view';\n","import React, { Component } from 'react';\nimport { HashRouter as Router, Route, Switch } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport i18n from '@dhis2/d2-i18n';\nimport HeaderBar from '@dhis2/ui/widgets/HeaderBar';\n\nimport { EDIT, VIEW, NEW } from './Dashboard/dashboardModes';\nimport { acReceivedUser } from '../actions/user';\nimport { tFetchDashboards } from '../actions/dashboards';\nimport { tSetControlBarRows } from '../actions/controlBar';\nimport { tSetDimensions } from '../actions/dimensions';\nimport Dashboard from './Dashboard/Dashboard';\nimport SnackbarMessage from './SnackbarMessage/SnackbarMessage';\n\nimport 'typeface-roboto';\nimport './App.css';\n\nexport class App extends Component {\n    componentDidMount() {\n        this.props.setCurrentUser(this.props.d2.currentUser);\n        this.props.fetchDashboards();\n        this.props.setControlBarRows();\n        this.props.setDimensions(this.props.d2);\n    }\n\n    getChildContext() {\n        return { baseUrl: this.props.baseUrl, i18n, d2: this.props.d2 };\n    }\n\n    render() {\n        return (\n            <div className=\"app-wrapper\">\n                <div className=\"dashboard-header-bar\">\n                    <HeaderBar appName={i18n.t('Dashboard')} />\n                </div>\n                <Router>\n                    <Switch>\n                        <Route\n                            exact\n                            path=\"/\"\n                            render={props => (\n                                <Dashboard {...props} mode={VIEW} />\n                            )}\n                        />\n                        <Route\n                            exact\n                            path=\"/new\"\n                            render={props => (\n                                <Dashboard {...props} mode={NEW} />\n                            )}\n                        />\n                        <Route\n                            exact\n                            path=\"/:dashboardId\"\n                            render={props => (\n                                <Dashboard {...props} mode={VIEW} />\n                            )}\n                        />\n                        <Route\n                            exact\n                            path=\"/:dashboardId/edit\"\n                            render={props => (\n                                <Dashboard {...props} mode={EDIT} />\n                            )}\n                        />\n                    </Switch>\n                </Router>\n                <SnackbarMessage />\n            </div>\n        );\n    }\n}\n\nApp.childContextTypes = {\n    baseUrl: PropTypes.string,\n    i18n: PropTypes.object,\n    d2: PropTypes.object,\n};\n\nconst mapDispatchToProps = dispatch => {\n    return {\n        setCurrentUser: currentUser => dispatch(acReceivedUser(currentUser)),\n        fetchDashboards: () => dispatch(tFetchDashboards()),\n        setControlBarRows: () => dispatch(tSetControlBarRows()),\n        setDimensions: d2 => dispatch(tSetDimensions(d2)),\n    };\n};\n\nexport default connect(\n    null,\n    mapDispatchToProps\n)(App);\n","import { RECEIVED_USER } from '../reducers/user';\n\nexport const acReceivedUser = value => ({\n    type: RECEIVED_USER,\n    value,\n});\n","//------------------------------------------------------------------------------\n// <auto-generated>\n// This code was generated by d2-i18n-generate.\n//\n// Changes to this file may cause incorrect behavior and will be lost if\n// the code is regenerated.\n// </auto-generated>\n//------------------------------------------------------------------------------\nimport i18n from '@dhis2/d2-i18n';\nimport moment from 'moment';\nimport 'moment/locale/lo';\nimport 'moment/locale/sv';\nimport 'moment/locale/ur';\nimport 'moment/locale/vi';\n\nimport enTranslations from './en/translations.json';\nimport loTranslations from './lo/translations.json';\nimport svTranslations from './sv/translations.json';\nimport urTranslations from './ur/translations.json';\nimport viTranslations from './vi/translations.json';\n\nconst namespace = 'dashboards-app';\nmoment.locale('en');\n\ni18n.addResources('en', namespace, enTranslations);\ni18n.addResources('lo', namespace, loTranslations);\ni18n.addResources('sv', namespace, svTranslations);\ni18n.addResources('ur', namespace, urTranslations);\ni18n.addResources('vi', namespace, viTranslations);\n\ni18n.setDefaultNamespace(namespace);\ni18n.changeLanguage('en');\n\nexport default i18n;\n","/** @module reducers/selected */\nimport { validateReducer } from '../modules/util';\n\nexport const SET_STYLE = 'SET_STYLE';\n\nexport const DEFAULT_STATE_STYLE = 'LIST';\n\n/**\n * Reducer functions that computes and returns the new state based on the given action\n * @function\n * @param {Object} state The current state\n * @param {Object} action The action to be evaluated\n */\nconst style = (state = DEFAULT_STATE_STYLE, action) => {\n    switch (action.type) {\n        case SET_STYLE:\n            return validateReducer(action.value, DEFAULT_STATE_STYLE);\n        default:\n            return state;\n    }\n};\n\nexport default style;\n\n/**\n * Selectors that point to specific props in the state object\n * @function\n * @param {Object} state\n * @returns {Object}\n */\nexport const sGetStyleRoot = state => state.style;\n","import { combineReducers } from 'redux';\nimport arraySort from 'd2-utilizr/lib/arraySort';\n\nimport dashboards, { sGetDashboardsRoot } from './dashboards';\nimport selected from './selected';\nimport dashboardsFilter, {\n    ownerData,\n    sGetFilterName,\n    sGetFilterOrder,\n    sGetFilterOwner,\n} from './dashboardsFilter';\nimport controlBar from './controlBar';\nimport visualizations from './visualizations';\nimport editDashboard from './editDashboard';\nimport messages from './messages';\nimport user from './user';\nimport snackbar from './snackbar';\nimport itemFilters from './itemFilters';\nimport editItemFilters from './editItemFilters';\nimport style from './style';\nimport dimensions from './dimensions';\nimport settings from './settings';\nimport activeModalDimension from './activeModalDimension';\n\nconst USER = 'system';\n\n// Reducers\n\nexport default combineReducers({\n    dashboards,\n    selected,\n    dashboardsFilter,\n    controlBar,\n    visualizations,\n    messages,\n    user,\n    editDashboard,\n    itemFilters,\n    editItemFilters,\n    style,\n    snackbar,\n    dimensions,\n    settings,\n    activeModalDimension,\n});\n\n// Map constants to data\nconst mapConstToData = {\n    NAME: 'name',\n    ITEMS: 'numberOfItems',\n    CREATED: 'created',\n    OWNER: 'owner',\n};\n\n// Selectors\n\n// Filter dashboards by name\nexport const sFilterDashboardsByName = (dashboards, filter) =>\n    dashboards.filter(d =>\n        d.displayName.toLowerCase().includes(filter.toLowerCase())\n    );\n\n// Filter dashboards by owner, TODO FIXME\nexport const sFilterDashboardsByOwner = (dashboards, filter) => {\n    const ME = ownerData[1]; // TODO\n    const OTHERS = ownerData[2]; // TODO\n\n    switch (filter) {\n        case ME:\n            return dashboards.filter(d => d.owner === USER);\n        case OTHERS:\n            return dashboards.filter(d => d.owner !== USER);\n        default:\n            return dashboards;\n    }\n};\n\n// Filter dashboards by order\nexport const sFilterDashboardsByOrder = (dashboards, filter) => {\n    const filterValues = filter.split(':');\n\n    const key = filterValues[0];\n    const direction = filterValues[1];\n\n    return arraySort(dashboards, direction, mapConstToData[key]);\n};\n\n// Selectors dependency level 2\n\n// Get filtered dashboards\nexport const sGetFilteredDashboards = state => {\n    const dashboards = sGetDashboardsRoot(state);\n\n    const nameFilter = sGetFilterName(state);\n    const ownerFilter = sGetFilterOwner(state);\n    const orderFilter = sGetFilterOrder(state);\n\n    return sFilterDashboardsByOrder(\n        sFilterDashboardsByName(\n            sFilterDashboardsByOwner(dashboards, ownerFilter),\n            nameFilter\n        ),\n        orderFilter\n    );\n};\n","import { createStore, applyMiddleware, compose } from 'redux';\nimport { createLogger } from 'redux-logger';\nimport thunk from 'redux-thunk';\nimport reducer from './reducers';\n\nconst configureStore = () => {\n    const middleware = [thunk];\n\n    // Enable Redux devtools if extension is installed instead of redux-logger\n    const composeEnhancers =\n        window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\n    if (\n        !window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ &&\n        process.env.NODE_ENV !== 'production'\n    ) {\n        middleware.push(createLogger());\n    }\n\n    return createStore(\n        reducer,\n        composeEnhancers(applyMiddleware(...middleware))\n    );\n};\n\nexport default configureStore;\n","import getMuiTheme from 'material-ui/styles/getMuiTheme';\n\nimport { colors } from './colors';\n\nexport const muiTheme = () => {\n    const raisedButton = {\n        primaryColor: colors.royalBlue,\n        disabledColor: colors.paleBlue,\n        disabledTextColor: colors.lightMediumGrey,\n    };\n\n    const theme = getMuiTheme({ raisedButton });\n\n    return theme;\n};\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport { MuiThemeProvider, createMuiTheme } from '@material-ui/core/styles';\nimport { MuiThemeProvider as V0MuiThemeProvider } from 'material-ui';\nimport { init as d2Init, config, getManifest, getUserSettings } from 'd2';\nimport dhis2theme from '@dhis2/d2-ui-core/theme/mui3.theme';\n\n// temporary workaround until new ui headerbar is ready\nimport 'material-design-icons/iconfont/material-icons.css';\nimport './reset.css';\n\nimport App from './components/App';\nimport './index.css';\nimport i18n from './locales';\nimport configureStore from './configureStore';\nimport { muiTheme } from './modules/theme';\n\nconst v1Theme = () => createMuiTheme({ ...dhis2theme });\n\nconst configI18n = userSettings => {\n    const uiLocale = userSettings.keyUiLocale;\n\n    if (uiLocale && uiLocale !== 'en') {\n        config.i18n.sources.add(`./i18n/i18n_module_${uiLocale}.properties`);\n    }\n\n    config.i18n.sources.add('./i18n/i18n_module_en.properties');\n    i18n.changeLanguage(uiLocale);\n};\n\nconst init = async () => {\n    const manifest = await getManifest('./manifest.webapp');\n\n    // log app info\n    console.info(\n        `Dashboards app, v${manifest.version}, ${\n            manifest.manifest_generated_at\n        }`\n    );\n\n    const isProd = process.env.NODE_ENV === 'production';\n\n    if (\n        !isProd &&\n        (!process.env.REACT_APP_DHIS2_BASE_URL ||\n            !process.env.REACT_APP_DHIS2_AUTHORIZATION)\n    ) {\n        throw new Error(\n            'Missing env variables REACT_APP_DHIS2_BASE_URL and REACT_APP_DHIS2_AUTHORIZATION'\n        );\n    }\n\n    // api config\n    const baseUrl = isProd\n        ? manifest.activities.dhis.href\n        : process.env.REACT_APP_DHIS2_BASE_URL;\n    const authorization = process.env.REACT_APP_DHIS2_AUTHORIZATION;\n\n    config.baseUrl = `${baseUrl}/api/${manifest.dhis2.apiVersion}`;\n    config.headers = isProd ? null : { Authorization: authorization };\n    config.schemas = [\n        'chart',\n        'map',\n        'report',\n        'reportTable',\n        'eventChart',\n        'eventReport',\n        'dashboard',\n        'organisationUnit',\n        'userGroup',\n    ];\n\n    getUserSettings()\n        .then(configI18n)\n        .then(() => d2Init(config))\n        .then(initializedD2 => {\n            ReactDOM.render(\n                <Provider store={configureStore()}>\n                    <MuiThemeProvider theme={v1Theme()}>\n                        <V0MuiThemeProvider muiTheme={muiTheme()}>\n                            <App baseUrl={baseUrl} d2={initializedD2} />\n                        </V0MuiThemeProvider>\n                    </MuiThemeProvider>\n                </Provider>,\n                document.getElementById('root')\n            );\n        });\n};\n\ninit();\n","import isObject from 'lodash/isObject';\n\n// validation\nexport function orNull(param) {\n    return param === undefined ? null : param;\n}\n\nexport function orArray(param) {\n    return Array.isArray(param) ? param : [];\n}\n\nexport function orObject(param) {\n    return isObject(param) ? param : {};\n}\n\n// array\nexport function arrayGetById(array, id) {\n    return array.find(item => item.id === id);\n}\n\n// object\nexport function arrayToIdMap(array) {\n    return array.reduce((obj, item) => {\n        obj[item.id] = item;\n        return obj;\n    }, {});\n}\n\n// date\nexport function getDate() {\n    const y = Math.floor(Math.random() * 3) + 2015;\n    const M = Math.floor(Math.random() * 12) + 1;\n    const d = Math.floor(Math.random() * 28) + 1;\n    // const h = Math.floor(Math.random() * 23) + 1;\n    // const m = Math.floor(Math.random() * 59) + 1;\n    // const s = Math.floor(Math.random() * 59) + 1;\n\n    return new Date(`${y}-${M}-${d}`)\n        .toJSON()\n        .replace('T', ' ')\n        .substr(0, 10);\n}\n\nexport const formatDate = (value, uiLocale) => {\n    if (typeof global.Intl !== 'undefined' && Intl.DateTimeFormat) {\n        const locale = uiLocale || 'en';\n        return new Intl.DateTimeFormat(locale, {\n            year: 'numeric',\n            month: 'short',\n            day: 'numeric',\n        }).format(new Date(value));\n    }\n\n    return value.substr(0, 19).replace('T', ' ');\n};\n\n/**\n * Sorts an array of objects based on provided date property\n *\n * @param {Array} items Array of objects\n * @param {String} dateProp Name of the date property to be used for sorting\n * @param {Boolean} ascending Whether to sort ascending or descending\n */\nexport const sortByDate = (items, dateProp, ascending = true) => {\n    const values = Object.values(items);\n\n    values.sort((a, b) => {\n        const aDate = new Date(a[dateProp]);\n        const bDate = new Date(b[dateProp]);\n\n        return ascending ? aDate - bDate : bDate - aDate;\n    });\n\n    return values;\n};\n\n// reducer validator\nexport const validateReducer = (value, defaultValue) =>\n    value === undefined || value === null ? defaultValue : value;\n\nexport const getBaseUrl = d2 => {\n    const api = d2.Api.getApi();\n    const idx = api.baseUrl.indexOf('/api');\n    return idx > -1 ? api.baseUrl.slice(0, idx) : api.baseUrl;\n};\n\nexport const getWithoutId = object => ({\n    ...object,\n    id: undefined,\n});\n"],"sourceRoot":""}
{"version":3,"sources":["modules/itemTypes.js","api/metadata.js","components/Item/ListItem/Item.module.css","components/ControlBar/styles/DashboardItemChip.module.css","components/TitleBar/styles/EditTitleBar.module.css","components/TitleBar/styles/ViewTitleBar.module.css","reducers/user.js","reducers/dashboards.js","reducers/editDashboard.js","reducers/editItemFilters.js","reducers/selected.js","actions/editItemFilters.js","reducers/itemFilters.js","actions/itemFilters.js","reducers/messages.js","api/messages.js","reducers/snackbar.js","actions/snackbar.js","reducers/visualizations.js","actions/visualizations.js","api/index.js","api/dashboards.js","components/SnackbarMessage/SnackbarMessage.js","actions/selected.js","api/localStorage.js","components/Item/MessagesItem/actions.js","api/editDashboard.js","actions/editDashboard.js","actions/dashboards.js","reducers/controlBar.js","api/controlBar.js","actions/controlBar.js","reducers/dimensions.js","reducers/settings.js","actions/dimensions.js","components/ControlBar/ShowMoreButton.js","components/ControlBar/controlBarDimensions.js","components/ControlBar/ControlBar.js","icons/Star.js","api/dataStatistics.js","components/ControlBar/DashboardItemChip.js","icons/AddCircle.js","icons/Clear.js","components/ControlBar/ClearButton.js","reducers/dashboardsFilter.js","components/ControlBar/Filter.js","components/ControlBar/DashboardsBar.js","actions/dashboardsFilter.js","components/Dashboard/DashboardVerticalOffset.js","components/ItemSelector/HeaderMenuItem.js","icons/Launch.js","components/ItemSelector/ContentMenuItem.js","components/ItemSelector/selectableItems.js","components/ItemSelector/CategorizedMenuGroup.js","components/ItemSelector/actions.js","components/ItemSelector/SinglesMenuGroup.js","components/ItemSelector/ItemSelector.js","components/TitleBar/EditTitleBar.js","components/ItemFilter/FilterDialog.js","reducers/activeModalDimension.js","actions/activeModalDimension.js","components/ItemFilter/FilterSelector.js","components/TitleBar/Info.js","components/TitleBar/ViewTitleBar.js","components/TitleBar/TitleBar.js","components/Item/VisualizationItem/DefaultPlugin.js","components/Item/VisualizationItem/assets/icons.js","components/Item/VisualizationItem/FatalErrorBoundary.js","components/Item/DeleteItemButton.js","components/Item/ItemHeader.js","components/Item/VisualizationItem/ItemHeaderButtons.js","components/Item/VisualizationItem/ItemFooter.js","modules/memoizeOne.js","components/Item/VisualizationItem/LoadingMask.js","components/Item/VisualizationItem/Item.js","widgets/Line.js","components/Item/MessagesItem/Item.js","components/Item/NotSupportedItem/Item.js","icons/Description.js","icons/Delete.js","components/Item/ListItem/Item.js","components/Item/ListItem/actions.js","components/Item/TextItem/Item.js","components/Item/AppItem/Item.js","components/Item/SpacerItem/Item.js","components/Item/Item.js","widgets/NoContentMessage.js","components/Item/ProgressiveLoadingContainer.js","components/ItemGrid/ItemGrid.js","components/FilterBar/FilterBadge.js","components/FilterBar/FilterBar.js","components/Dashboard/DashboardContent.js","components/Dashboard/ViewDashboard.js","components/ControlBar/ConfirmDeleteDialog.js","components/ControlBar/EditBar.js","components/Dashboard/EditDashboard.js","components/Dashboard/NewDashboard.js","components/Dashboard/Dashboard.js","components/Dashboard/dashboardModes.js","components/App.js","actions/user.js","locales/index.js","reducers/style.js","reducers/index.js","configureStore.js","index.js","modules/util.js","components/ControlBar/styles/DashboardsBar.module.css","components/ItemSelector/styles/ContentMenuItem.module.css","components/Item/styles/ItemHeader.module.css","components/ControlBar/styles/ControlBar.module.css","components/Item/VisualizationItem/styles/FatalErrorBoundary.module.css","components/ControlBar/styles/ShowMoreButton.module.css","components/ControlBar/styles/ClearButton.module.css","components/ControlBar/styles/Filter.module.css","components/Item/VisualizationItem/styles/LoadingMask.module.css","components/Item/VisualizationItem/styles/Item.module.css","components/Item/VisualizationItem/plugin.js","components/ItemGrid/gridUtil.js","components/ItemSelector/styles/CategorizedMenuGroup.module.css","components/Item/styles/DeleteItemButton.module.css","components/FilterBar/styles/FilterBar.module.css"],"names":["VISUALIZATION","REPORT_TABLE","CHART","MAP","EVENT_REPORT","EVENT_CHART","APP","REPORTS","RESOURCES","USERS","MESSAGES","TEXT","SPACER","spacerContent","emptyTextItemContent","isSpacerType","item","type","text","isTextType","isVisualizationType","itemTypeMap","hasMapView","itemType","domainType","isTrackerDomainType","getDefaultItemCount","defaultItemCount","getAppName","appName","_itemTypeMap","Object","_home_travis_build_dhis2_dashboards_app_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_defineProperty__WEBPACK_IMPORTED_MODULE_0__","id","endPointName","propName","pluralTitle","i18n","t","appUrl","concat","getEndPointName","getItemUrl","d2","url","launchUrl","getBaseUrl","getItemIcon","TableIcon","ChartIcon","MapIcon","ExtensionIcon","DescriptionIcon","PersonIcon","FontDownloadIcon","EmailIcon","CropFreeIcon","NotInterestedIcon","getIdNameFields","rename","arguments","length","undefined","getDimensionFields","_ref2","withItems","arrayClean","join","getAxesFields","_ref3","getFavoriteFields","_ref4","withDimensions","withOptions","getFavoritesFields","_ref5","_home_travis_build_dhis2_dashboards_app_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_toConsumableArray__WEBPACK_IMPORTED_MODULE_0__","getListItemFields","getMapFields","apiFetchFavorite","_ref6","fields","getInstance","then","Api","getApi","get","module","exports","list","itemicon","link","deleteicon","deletebutton","chip","icon","selected","unselected","section","titleDescription","title","description","itemSelector","actions","editLink","titleBar","titleBarIcon","DEFAULT_STATE_USER","username","uiLocale","isSuperuser","sGetUserUsername","state","user","DEFAULT_STATE_DASHBOARDS","byId","items","updateDashboardProp","_ref","dashboardId","prop","value","objectSpread","defineProperty","sGetDashboardsRoot","dashboards","sGetDashboardById","orObject","sDashboardsIsFetching","sGetAllDashboards","sGetDashboardItems","sGetStarredDashboards","values","filter","dashboard","starred","sGetUnstarredDashboards","sGetDashboardsSortedByStarred","toConsumableArray","arraySort","getCustomDashboards","data","arrayFrom","map","d","name","displayName","displayDescription","favorite","owner","created","split","substr","lastUpdated","access","numberOfItems","orArray","dashboardItems","reportTable","chart","gridProperties","getGridItemProperties","DEFAULT_STATE_EDIT_DASHBOARD","NEW_DASHBOARD_STATE","sGetEditDashboardRoot","editDashboard","sGetIsEditing","isEmpty","sGetEditDashboardItems","DEFAULT_STATE_EDIT_ITEM_FILTERS","sGetEditItemFiltersRoot","editItemFilters","combineReducers","action","validateReducer","isLoading","showDescription","sGetSelectedRoot","sGetSelectedId","sGetSelectedIsLoading","sGetSelectedShowDescription","acRemoveEditItemFilter","DEFAULT_STATE_ITEM_FILTERS","sGetItemFiltersRoot","itemFilters","sGetFiltersKeys","keys","acRemoveItemFilter","sGetMessagesRoot","messages","getMessages","catch","error","console","log","DEFAULT_STATE_SNACKBAR","message","duration","open","acCloseSnackbar","DEFAULT_STATE_VISUALIZATIONS","p","sGetVisualization","visualizations","sGetVisualizationsRoot","acAddVisualization","onError","getDashboardItemsFields","withFavorite","getDashboardFields","apiFetchDashboard","models","apiStarDashboard","isStarred","post","delete","apiDeleteDashboard","loadingDashboardMsg","SnackbarMessageContent","react_default","a","createElement","style","fontWeight","connect","_sGetSnackbar","snackbar","sGetSnackbar","snackbarOpen","snackbarMessage","snackbarDuration","onCloseSnackbar","props","Snackbar_default","zIndex","SnackbarMessage_SnackbarMessageContent","autoHideDuration","onClose","acSetSelectedId","acSetSelectedIsLoading","tLoadDashboard","asyncToGenerator","regenerator_default","mark","_callee","dispatch","dash","wrap","_context","prev","next","sent","acAppendDashboards","abrupt","Promise","resolve","t0","stop","_x","apply","this","tSetSelectedDashboardById","_callee2","getState","snackbarTimeout","onSuccess","_context2","setTimeout","dashboardName","customDashboard","acSetDashboardItems","withShape","localStorage","setItem","forEach","extractFavorite","messageConversations","filters","clearTimeout","_x2","_x3","saveDashboard","assign","width","w","height","h","save","msg","response","uid","updateDashboard","postDashboard","create","acAddDashboardItem","itemPropName","generateUid","gridItemProperties","content","NEW_ITEM_SHAPE","acUpdateDashboardItem","acRemoveDashboardItem","arrayToIdMap","acSetDashboardStarred","tFetchDashboards","collection","paging","toArray","userRows","sGetControlBarUserRows","controlBar","sGetControlBarRoot","KEY","hasNamespace","currentUser","dataStore","has","getNamespace","apiGetControlBarRows","_callee3","namespace","_context3","t1","t2","find","key","apiPostControlBarRows","_callee4","rows","_context4","set","_x4","_x5","acSetControlBarUserRows","DEFAULT_DIMENSIONS","getDimensionById","DIMENSION_ID_PERIOD","DIMENSION_ID_ORGUNIT","sGetDimensions","dimensions","DEFAULT_SETTINGS","keyDateFormat","keyAnalysisRelativePeriod","keyAnalysisDigitGroupSeparator","displayNameProperty","rootOrganisationUnit","sGetSettings","settings","sGetSettingsDisplayNameProperty","acSetDimensions","ShowMoreButton","onClick","isMaxHeight","disabled","textAlign","className","classes","showMore","MIN_ROW_COUNT","getRowsHeight","getNumRowsFromHeight","Math","floor","FIRST_ROW_PADDING_HEIGHT","getTopOffset","getControlBarHeight","ControlBar","_this","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","onStartDrag","setState","dragging","window","addEventListener","onDrag","onEndDrag","event","preventDefault","stopPropagation","newHeight","clientY","onChangeHeight","requestAnimationFrame","removeEventListener","draghandle","onMouseDown","max","rootStyle","top","backgroundColor","editMode","colors","yellow050","white","paddingBottom","transition","root","children","renderDragHandle","React","Component","defaultProps","StarIcon","xmlns","viewBox","fill","apiPostDataStatistics","eventType","DashboardItemChip","label","chipProps","selectedState","Star","Link","to","debounce","lib","AddCircleIcon","teal600","ClearIcon","grey800","ClearButton","onClear","button","Clear","color","ownerData","DEFAULT_STATE_DASHBOARDS_FILTER_NAME","DEFAULT_STATE_DASHBOARDS_FILTER_OWNER","order","sGetDashboardsFilterRoot","dashboardsFilter","sGetFilterName","KEYCODE_ENTER","KEYCODE_ESCAPE","Filter","_Component","setFilterValue","onChangeName","target","handleKeyUp","keyCode","onKeypressEnter","inherits","createClass","nextProps","_this$props","startAdornment","InputAdornment_default","position","Search_default","searchIcon","endAdornment","ControlBar_ClearButton","Input_default","filterField","placeholder","onChange","onKeyUp","Function","prototype","MAX_ROW_COUNT","DashboardsBar","_getPrototypeOf2","_len","args","Array","_key","setInitialDashboardState","adjustedHeight","newRows","newRowCount","min","onToggleMaxHeight","onSelectDashboard","history","push","selectedId","onChangeFilterName","rowCount","controlBarHeight","contentWrapperStyle","padding","overflowY","components_ControlBar_ControlBar","leftControls","display","textDecoration","marginRight","AddCircle","ControlBar_Filter","ControlBar_DashboardItemChip","ControlBar_ShowMoreButton","mapDispatchToProps","withRouter","stateProps","dispatchProps","ownProps","displayDashboards","toLowerCase","includes","marginTop","HeaderMenuItem","dense","LaunchIcon","grey600","LaunchLink","e","launchLink","rel","href","Launch","InsertButton","buttonInsert","ContentMenuItem","onInsert","visType","ItemIcon","renderedItemIcon","visTypeIcons","menuItem","margin","ContentMenuItem_LaunchLink","ContentMenuItem_InsertButton","singleItems","header","categorizedItems","listItemTypes","CategorizedMenuGroup","addItem","tAddListItemContent","newItem","toggleSeeMore","seeMore","onChangeItemsLimit","_this2","_this$props2","hasMore","Fragment","ItemSelector_HeaderMenuItem","itemUrl","context","ItemSelector_ContentMenuItem","showMoreButton","contextTypes","PropTypes","object","isRequired","dashboardItem","listItemType","dashboardItemIndex","findIndex","category","addToDashboard","ItemSearchField","onFocus","ItemSelector","closeList","openList","_","fetchItems","anchorEl","currentTarget","setFilter","getCategorizedMenuGroups","itemCount","allItems","maxOptions","slice","ItemSelector_CategorizedMenuGroup","getSinglesMenuGroups","ItemSelector_SinglesMenuGroup","getMenuGroups","queryString","add","Set","ItemSelector_ItemSearchField","Popover_default","anchorOrigin","horizontal","vertical","transformOrigin","PaperProps","disableAutoFocus","disableRestoreFocus","EditTitleBar","onChangeTitle","onChangeDescription","components_ItemSelector_ItemSelector","selectedDashboard","peId","ouId","FilterDialog","onConfirm","dimension","selectedItems","dialogId","commonProps","onSelect","onDeselect","onReorder","es_lib","selectedPeriods","ouItems","dialogTitle","Dialog_default","maxWidth","disableEnforceFocus","dialogContent","DialogActions_default","kind","DEFAULT_STATE_ACTIVE_MODAL_DIMENSION","sGetActiveModalDimension","activeModalDimension","acSetActiveModalDimension","FilterSelector","openPanel","closePanel","closeDialog","clearActiveModalDimension","selectDimension","setActiveModalDimension","onSelectItems","dimensionId","setEditItemFilters","onDeselectItems","itemIdsToRemove","newList","removeEditItemFilter","onReorderItems","itemIds","oldList","reorderedList","saveFilter","filterItems","addItemFilter","removeItemFilter","theme","selectedDimensions","ArrowDropDown_default","Boolean","fontFamily","typography","onDimensionClick","selectedIds","ItemFilter_FilterDialog","withTheme","Info","show","toggle","InfoOutlined_default","NO_DESCRIPTION","ViewTitleBar","toggleSharingDialog","sharingDialogIsOpen","onStarClick","onInfoClick","titleStyle","cursor","userSelect","StarBorder","TitleBar_Info","marginLeft","update","manage","ItemFilter_FilterSelector","paddingTop","d2_ui_sharing_dialog_default","onRequestClose","tStarDashboard","fontSize","black","minWidth","TitleBar","edit","TitleBar_EditTitleBar","TitleBar_ViewTitleBar","DefaultPlugin","pluginCredentials","shouldPluginReload","prevProps","reloadAllowed","filtersChanged","vis","visualization","prevVis","visChanged","activeType","reloadPlugin","pluginManager","currentVis","useActiveType","credentials","getActiveType","baseUrl","auth","defaultHeaders","Authorization","getGridItemDomId","textDiv","ThreeDots","SpeechBubble","fillRule","transform","Warning","FatalErrorBoundary","errorFound","info","container","icons_Warning","DeleteItemButton","deleteItemButton","Delete_default","red500","HEADER_MARGIN_HEIGHT","ItemHeader","actionButtons","itemId","forwardedRef","itemHeaderWrap","ref","itemTitle","itemActionsWrap","Item_DeleteItemButton","ConnectedItemHeader","forwardRef","iconFill","ItemHeaderButtons","_useState","useState","_useState2","slicedToArray","setAnchorEl","onSelectActiveType","isTrackerType","onViewTable","handleClose","onViewChart","onViewMap","canViewAs","isSingleValue","isYearOverYear","VIS_TYPE_GAUGE","VIS_TYPE_PIE","interpretationMenuLabel","activeFooter","pluginIsAvailable","small","secondary","icons_ThreeDots","InsertChart_default","ViewList_default","Public_default","Launch_default","getLink","icons_SpeechBubble","onToggleFooter","scrollContainer","line","border","grey100","ItemFooter","objectId","getId","d2_ui_interpretations_default","memoizeOne","fn","lastArgs","lastValue","every","arg","i","CircularIndeterminate","outer","CircularProgress_default","progress","Item","showFooter","configLoaded","pluginIsLoaded","applyFilters","visRows","obj","visColumns","columns","visFilters","dimensionFound","dimensionObjects","getUniqueKey","uniqueId","getPluginComponent","memoizedGetVisualizationConfig","calculatedHeight","originalHeight","headerRef","current","clientHeight","ITEM_CONTENT_PADDING_BOTTOM","memoizedGetContentStyle","contentRef","offsetHeight","loadingCover","LoadingMask","build_es_lib","memoizedApplyFilters","onLoadingComplete","forDashboard","mapViews","layer","VisualizationItem_DefaultPlugin","onToggleItemExpanded","getContentStyle","measuredHeight","createRef","getVisualizationConfig","_componentDidMount","onVisualizationLoaded","prevState","VisualizationItem_ItemHeaderButtons","Item_ItemHeader","VisualizationItem_FatalErrorBoundary","VisualizationItem_ItemFooter","acSetActiveVisualizationType","grey200","Line","PRIVATE","messageTypes","_messageTypes","listStyleType","paddingLeft","seeAll","marginBottom","sender","lineHeight","snippet","maxHeight","overflow","MessagesItem","getMessageHref","msgIdentifier","messageType","getMessageSender","latestMsg","getMessageItems","editClass","readClass","read","msgDate","document","location","messageCount","formatDate","userSettings","widgets_Line","string","MessagesContainer","NotSupportedItem","justifyContent","alignItems","NotInterested_default","align","grey500","DeleteIcon","getItemTitle","ListItem","tRemoveListItemContent","contentItems","index","array","el","getContentItems","contentItem","Description","deleteButton","icons_Delete","grey900","newContent","whiteSpace","textField","fontStretch","onChangeText","updatedItem","d2_ui_rich_text","onEdit","multiline","fullWidth","textDivStyle","viewItem","getIframeSrc","appDetails","iframeSrc","ouIds","ouPath","AppItem","appKey","system","installedApps","app","src","SpacerItem","GridItem","VisualizationItem","TextItem","getGridItem","NoContentMessage","ProgressiveLoadingContainer","shouldLoad","containerRef","shouldLoadHandler","bufferPx","bufferFactor","innerHeight","rect","getBoundingClientRect","bottom","removeHandler","checkShouldLoad","debounceMs","registerHandler","_this3","objectWithoutProperties","eventProps","pick","EXPANDED_HEIGHT","ItemGrid","expandedItems","clickedId","isExpanded","onRemoveItem","onLayoutChange","newLayout","acUpdateDashboardLayout","onResizeStop","layout","oldItem","onItemResize","pluginResize","onRemoveItemWrapper","adjustHeightForExpanded","expandedItem","getItemComponent","itemClassNames","Item_ProgressiveLoadingContainer","Item_Item_Item","getItemComponents","widgets_NoContentMessage","react_grid_layout_default","MARGIN","cols","getGridColumns","rowHeight","GRID_ROW_HEIGHT","innerWidth","compactType","GRID_COMPACT_TYPE","isDraggable","isResizable","draggableCancel","validItems","hasShape","styles","badgeContainer","borderRadius","badge","badgeRemove","FilterBadge","onRemove","count","FilterBar","onBadgeRemove","onBadgeClick","bar","FilterBar_FilterBadge","removeItemFIlter","filtersSelector","createSelector","reduce","arr","DashboardContent","components_TitleBar_TitleBar","components_FilterBar_FilterBar","components_ItemGrid_ItemGrid","Content","hasDashboardContent","dashboardsIsEmpty","Dashboard_DashboardContent","dashboardsLoaded","contentNotReady","ControlBar_DashboardsBar","Dashboard_DashboardVerticalOffset","ViewDashboard_Content","ConfirmDeleteDialog","onDeleteConfirmed","onContinueEditing","destructive","DialogTitle_default","DialogContent_default","DialogContentText_default","buttonBarStyle","EditBar","translationDialogIsOpen","dashboardModel","confirmDeleteDialogOpen","redirectUrl","onConfirmDelete","onSave","newId","onDiscard","onDiscardChanges","onDelete","onTranslationsSaved","translations","dbLocale","translation","locale","property","onTranslate","fetchDashboardModel","toggleTranslationDialog","confirmDeleteDialog","deleteAccess","ControlBar_ConfirmDeleteDialog","translationDialog","d2_ui_translation_dialog_default","objectToTranslate","fieldsToTranslate","onTranslationSaved","onTranslationError","err","Redirect","updateAccess","discardBtnText","primary","rightControls","sGetIsNewDashboard","dashboardToSave","tDeleteDashboard","acSetDashboardDisplayName","EditDashboard","initialized","initEditDashboard","setEditDashboard","getDashboardContent","EditDashboard_Content","ControlBar_EditBar","NewDashboard","setNewDashboard","Dashboard","setDashboard","match","params","selectDashboard","scrollToTop","scrollTo","mode","Dashboard_EditDashboard","Dashboard_NewDashboard","Dashboard_ViewDashboard","dashboardToSelect","preferredId","getItem","App","setCurrentUser","fetchDashboards","setControlBarRows","setDimensions","spacers","HeaderBar","HashRouter","Switch","Route","exact","path","render","components_Dashboard_Dashboard","components_SnackbarMessage_SnackbarMessage","childContextTypes","controlBarRows","displayNameProp","filteredDimensions","apiFetchDimensions","dim","dimensionType","dataDimensionType","tSetDimensions","moment","addResources","arTranslations","daTranslations","enTranslations","esTranslations","frTranslations","idTranslations","kmTranslations","loTranslations","myTranslations","prsTranslations","psTranslations","ptTranslations","pt_BRTranslations","ruTranslations","svTranslations","tetTranslations","tgTranslations","ukTranslations","urTranslations","viTranslations","zhTranslations","zh_CNTranslations","setDefaultNamespace","changeLanguage","objectClean","conversations","$merge","d2Object","keyUiLocale","authorities","newState","k","$unshift","idToRemove","$splice","stateItems","layoutHasChanged","newStateItems","x","y","stateItem","si","configureStore","middleware","thunk","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","createStore","reducer","applyMiddleware","configI18n","config","sources","manifest","isProd","getManifest","version","manifest_generated_at","process","activities","dhis","dhis2","apiVersion","headers","schemas","getUserSettings","d2Init","initializedD2","ReactDOM","build_es","es","store","createMuiTheme","dhis2theme","src_components_App","getElementById","init","param","isArray","isObject","global","Intl","DateTimeFormat","year","month","day","format","Date","replace","defaultValue","api","idx","indexOf","getWithoutId","_home_travis_build_dhis2_dashboards_app_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectSpread__WEBPACK_IMPORTED_MODULE_0__","itemWrap","itemTypeToExternalPlugin","_itemTypeToExternalPl","_home_travis_build_dhis2_dashboards_app_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_defineProperty__WEBPACK_IMPORTED_MODULE_3__","getPlugin","hasIntegratedPlugin","eventReport","eventChart","loadPlugin","plugin","load","loadingIndicator","getName","_home_travis_build_dhis2_dashboards_app_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_asyncToGenerator__WEBPACK_IMPORTED_MODULE_2__","_home_travis_build_dhis2_dashboards_app_node_modules_babel_preset_react_app_node_modules_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default","_home_travis_build_dhis2_dashboards_app_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectSpread__WEBPACK_IMPORTED_MODULE_1__","fetch","fetchedFavorite","resize","unmount","originalType","extractedMapView","mv","VIS_TYPE_COLUMN","VIS_TYPE_PIVOT_TABLE","__webpack_require__","__webpack_exports__","d2_utilizr_lib_isFunction__WEBPACK_IMPORTED_MODULE_0__","d2_utilizr_lib_isFunction__WEBPACK_IMPORTED_MODULE_0___default","n","_modules_util__WEBPACK_IMPORTED_MODULE_1__","isNonNegativeInteger","Number","isInteger","minH","itemWithShape","Error","col","row","itemWidth","itemHeight","getShape","round","getOriginalHeight","querySelector","isFunction","setViewportSize","clientWidth"],"mappings":"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","file":"static/js/main.1b2e1d33.chunk.js","sourcesContent":["import i18n from '@dhis2/d2-i18n';\nimport TableIcon from '@material-ui/icons/ViewList';\nimport ChartIcon from '@material-ui/icons/InsertChart';\nimport MapIcon from '@material-ui/icons/Public';\nimport ExtensionIcon from '@material-ui/icons/Extension';\nimport DescriptionIcon from '@material-ui/icons/Description';\nimport PersonIcon from '@material-ui/icons/Person';\nimport FontDownloadIcon from '@material-ui/icons/FontDownload';\nimport EmailIcon from '@material-ui/icons/Email';\nimport CropFreeIcon from '@material-ui/icons/CropFree';\nimport NotInterestedIcon from '@material-ui/icons/NotInterested';\n\nimport { getBaseUrl } from './util';\n\n// Item types\nexport const VISUALIZATION = 'VISUALIZATION';\nexport const REPORT_TABLE = 'REPORT_TABLE';\nexport const CHART = 'CHART';\nexport const MAP = 'MAP';\nexport const EVENT_REPORT = 'EVENT_REPORT';\nexport const EVENT_CHART = 'EVENT_CHART';\nexport const APP = 'APP';\nexport const REPORTS = 'REPORTS';\nexport const RESOURCES = 'RESOURCES';\nexport const USERS = 'USERS';\nexport const MESSAGES = 'MESSAGES';\nexport const TEXT = 'TEXT';\nexport const SPACER = 'SPACER';\n\nconst DOMAIN_TYPE_AGGREGATE = 'AGGREGATE';\nconst DOMAIN_TYPE_TRACKER = 'TRACKER';\n\n// Dashboard helpers\nexport const spacerContent = 'SPACER_ITEM_FOR_DASHBOARD_LAYOUT_CONVENIENCE';\nexport const emptyTextItemContent = 'TEXT_ITEM_WITH_NO_CONTENT';\nexport const isSpacerType = item =>\n    item.type === TEXT && item.text === spacerContent;\nexport const isTextType = item =>\n    item.type === TEXT && item.text !== spacerContent;\nexport const isVisualizationType = item =>\n    !!itemTypeMap[item.type].isVisualizationType;\nexport const hasMapView = itemType =>\n    itemTypeMap[itemType].domainType === DOMAIN_TYPE_AGGREGATE;\nexport const isTrackerDomainType = itemType =>\n    itemTypeMap[itemType].domainType === DOMAIN_TYPE_TRACKER;\nexport const getDefaultItemCount = itemType =>\n    itemTypeMap[itemType].defaultItemCount || 5;\nexport const getAppName = itemType => itemTypeMap[itemType].appName || '';\n\n// Item type map\nexport const itemTypeMap = {\n    [VISUALIZATION]: {\n        id: VISUALIZATION,\n        endPointName: 'visualizations',\n        propName: 'visualization',\n        pluralTitle: i18n.t('Visualizations'),\n        appUrl: id => `dhis-web-data-visualizer/#/${id}`,\n        appName: 'Data Visualizer',\n        defaultItemCount: 10,\n    },\n    [REPORT_TABLE]: {\n        id: REPORT_TABLE,\n        endPointName: 'visualizations',\n        propName: 'visualization',\n        pluralTitle: i18n.t('Pivot tables'),\n        domainType: DOMAIN_TYPE_AGGREGATE,\n        isVisualizationType: true,\n        appUrl: id => `dhis-web-data-visualizer/#/${id}`,\n        appName: 'Data Visualizer',\n    },\n    [CHART]: {\n        id: CHART,\n        endPointName: 'visualizations',\n        propName: 'visualization',\n        pluralTitle: i18n.t('Charts'),\n        domainType: DOMAIN_TYPE_AGGREGATE,\n        isVisualizationType: true,\n        appUrl: id => `dhis-web-data-visualizer/#/${id}`,\n        appName: 'Data Visualizer',\n    },\n    [MAP]: {\n        id: MAP,\n        endPointName: 'maps',\n        propName: 'map',\n        pluralTitle: i18n.t('Maps'),\n        domainType: DOMAIN_TYPE_AGGREGATE,\n        isVisualizationType: true,\n        appUrl: id => `dhis-web-maps/?id=${id}`,\n        appName: 'Maps',\n    },\n    [EVENT_REPORT]: {\n        id: EVENT_REPORT,\n        endPointName: 'eventReports',\n        propName: 'eventReport',\n        pluralTitle: i18n.t('Event reports'),\n        domainType: DOMAIN_TYPE_TRACKER,\n        isVisualizationType: true,\n        appUrl: id => `dhis-web-event-reports/?id=${id}`,\n        appName: 'Event Reports',\n    },\n    [EVENT_CHART]: {\n        id: EVENT_CHART,\n        endPointName: 'eventCharts',\n        propName: 'eventChart',\n        pluralTitle: i18n.t('Event charts'),\n        domainType: DOMAIN_TYPE_TRACKER,\n        isVisualizationType: true,\n        appUrl: id => `dhis-web-event-visualizer/?id=${id}`,\n        appName: 'Event Visualizer',\n    },\n    [APP]: {\n        endPointName: 'apps',\n        propName: 'appKey',\n        pluralTitle: i18n.t('Apps'),\n    },\n    [REPORTS]: {\n        id: REPORTS,\n        endPointName: 'reports',\n        propName: 'reports',\n        pluralTitle: i18n.t('Reports'),\n        appUrl: id =>\n            `dhis-web-reporting/getReportParams.action?mode=report&uid=${id}`,\n    },\n    [RESOURCES]: {\n        id: RESOURCES,\n        endPointName: 'resources',\n        propName: 'resources',\n        pluralTitle: i18n.t('Resources'),\n        appUrl: id => `api/documents/${id}/data`,\n    },\n    [USERS]: {\n        id: USERS,\n        endPointName: 'users',\n        propName: 'users',\n        pluralTitle: i18n.t('Users'),\n        appUrl: id => `dhis-web-dashboard-integration/profile.action?id=${id}`,\n    },\n    [TEXT]: {\n        id: TEXT,\n        propName: 'text',\n    },\n    [MESSAGES]: {\n        propName: 'messages',\n    },\n    [SPACER]: {\n        propName: 'text',\n    },\n};\n\nexport const getEndPointName = type => itemTypeMap[type].endPointName;\n\nexport const getItemUrl = (type, item, d2) => {\n    let url;\n\n    if (type === APP) {\n        url = item.launchUrl;\n    }\n\n    if (itemTypeMap[type] && itemTypeMap[type].appUrl) {\n        url = `${getBaseUrl(d2)}/${itemTypeMap[type].appUrl(item.id)}`;\n    }\n\n    return url;\n};\n\nexport const getItemIcon = type => {\n    switch (type) {\n        case REPORT_TABLE:\n        case EVENT_REPORT:\n        case REPORTS:\n            return TableIcon;\n        case CHART:\n        case EVENT_CHART:\n            return ChartIcon;\n        case MAP:\n            return MapIcon;\n        case APP:\n            return ExtensionIcon;\n        case RESOURCES:\n            return DescriptionIcon;\n        case USERS:\n            return PersonIcon;\n        case TEXT:\n            return FontDownloadIcon;\n        case MESSAGES:\n            return EmailIcon;\n        case SPACER:\n            return CropFreeIcon;\n        default:\n            return NotInterestedIcon;\n    }\n};\n","import { getInstance } from 'd2';\nimport arrayClean from 'd2-utilizr/lib/arrayClean';\n\nimport { getEndPointName } from '../modules/itemTypes';\n\n// Id, name\nexport const getIdNameFields = ({ rename } = {}) => [\n    'id',\n    `${rename ? 'displayName~rename(name)' : 'name,displayName'}`,\n];\n\n// Item\nexport const getItemFields = () => [\n    'dimensionItem~rename(id)',\n    'displayName~rename(name)',\n    'dimensionItemType',\n];\n\n// Dimension\nexport const getDimensionFields = ({ withItems }) =>\n    arrayClean([\n        'dimension',\n        'legendSet[id]',\n        'filter',\n        'programStage',\n        withItems ? `items[${getItemFields().join(',')}]` : ``,\n    ]);\n\n// Axis\nexport const getAxesFields = ({ withItems }) => [\n    `columns[${getDimensionFields({ withItems }).join(',')}]`,\n    `rows[${getDimensionFields({ withItems }).join(',')}]`,\n    `filters[${getDimensionFields({ withItems }).join(',')}]`,\n];\n\n// Favorite\nexport const getFavoriteFields = ({ withDimensions, withOptions }) => {\n    return arrayClean([\n        `${getIdNameFields({ rename: true }).join(',')}`,\n        'displayDescription~rename(description)',\n        withDimensions ? `${getAxesFields({ withItems: true }).join(',')}` : ``,\n        withOptions\n            ? [\n                  '*',\n                  '!attributeDimensions',\n                  '!attributeValues',\n                  '!category',\n                  '!categoryDimensions',\n                  '!categoryOptionGroupSetDimensions',\n                  '!columnDimensions',\n                  '!dataDimensionItems',\n                  '!dataElementDimensions',\n                  '!dataElementGroupSetDimensions',\n                  '!filterDimensions',\n                  '!itemOrganisationUnitGroups',\n                  '!lastUpdatedBy',\n                  '!organisationUnitGroupSetDimensions',\n                  '!organisationUnitLevels',\n                  '!organisationUnits',\n                  '!programIndicatorDimensions',\n                  '!relativePeriods',\n                  '!reportParams',\n                  '!rowDimensions',\n                  '!series',\n                  '!translations',\n                  '!userOrganisationUnit',\n                  '!userOrganisationUnitChildren',\n                  '!userOrganisationUnitGrandChildren',\n              ].join(',')\n            : '',\n    ]);\n};\n\nexport const getFavoritesFields = ({ withDimensions }) => [\n    `reportTable[${getFavoriteFields({ withDimensions }).join(',')}]`,\n    `chart[${['type', ...getFavoriteFields({ withDimensions })].join(',')}]`,\n    `map[${getFavoriteFields({ withDimensions }).join(',')}]`,\n    `eventReport[${getFavoriteFields({ withDimensions }).join(',')}]`,\n    `eventChart[${getFavoriteFields({ withDimensions }).join(',')}]`,\n];\n\n// List item\nexport const getListItemFields = () => [\n    `reports[${getIdNameFields({ rename: true }).join(',')}]`,\n    `resources[${getIdNameFields({ rename: true }).join(',')}]`,\n    `users[${getIdNameFields({ rename: true }).join(',')}]`,\n];\n\n// Map\nexport const getMapFields = () => [\n    `${getIdNameFields({ rename: true }).join(',')}`,\n    'user,longitude,latitude,zoom,basemap',\n    `mapViews[${getFavoriteFields({\n        withDimensions: true,\n        withOptions: true,\n    })}]`,\n];\n\n// Api\n\n// Get more info about the favorite of a dashboard item\nexport const apiFetchFavorite = (id, type, { fields }) =>\n    getInstance().then(d2 =>\n        d2.Api.getApi().get(`${getEndPointName(type)}/${id}`, {\n            fields:\n                fields ||\n                getFavoriteFields({\n                    withDimensions: true,\n                    withOptions: true,\n                }),\n        })\n    );\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"Item_list__2oHc1\",\"item\":\"Item_item__lO40M\",\"itemicon\":\"Item_itemicon__dv5ah\",\"link\":\"Item_link__2gULT\",\"deleteicon\":\"Item_deleteicon__3c7bl\",\"deletebutton\":\"Item_deletebutton__1DfY5\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"chip\":\"DashboardItemChip_chip__3znxp\",\"link\":\"DashboardItemChip_link__1b7Z_\",\"icon\":\"DashboardItemChip_icon__1zOaG\",\"selected\":\"DashboardItemChip_selected__36Qak\",\"unselected\":\"DashboardItemChip_unselected__3dm-X\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"section\":\"EditTitleBar_section__2sBzn\",\"titleDescription\":\"EditTitleBar_titleDescription__1-pfK\",\"title\":\"EditTitleBar_title__2fOQP\",\"description\":\"EditTitleBar_description__fKEX6\",\"itemSelector\":\"EditTitleBar_itemSelector__PWJdH\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"actions\":\"ViewTitleBar_actions__1kGtw\",\"editLink\":\"ViewTitleBar_editLink__1HKr0\",\"titleBar\":\"ViewTitleBar_titleBar__1K-pW\",\"titleBarIcon\":\"ViewTitleBar_titleBarIcon__2spKM\"};","export const RECEIVED_USER = 'RECEIVED_USER';\n\nexport const DEFAULT_STATE_USER = {\n    id: '',\n    username: '',\n    uiLocale: '',\n    isSuperuser: false,\n};\n\nexport default (state = DEFAULT_STATE_USER, action) => {\n    switch (action.type) {\n        case RECEIVED_USER: {\n            return fromD2ToUserObj(action.value);\n        }\n        default:\n            return state;\n    }\n};\n\nfunction fromD2ToUserObj(d2Object) {\n    return {\n        id: d2Object.id,\n        username: d2Object.username,\n        uiLocale: d2Object.settings.keyUiLocale,\n        isSuperuser: d2Object.authorities.has('ALL'),\n    };\n}\n\n// selectors\n\nexport const sGetUserId = state => state.user.id;\nexport const sGetUserUsername = state => state.user.username;\nexport const sGetIsSuperuser = state => state.user.isSuperuser;\nexport const sGetUiLocale = state => state.user.uiLocale;\n","/** @module reducers/dashboards */\n\nimport arrayFrom from 'd2-utilizr/lib/arrayFrom';\nimport arraySort from 'd2-utilizr/lib/arraySort';\n\nimport { orArray, orObject } from '../modules/util';\nimport {\n    SPACER,\n    isSpacerType,\n    isTextType,\n    emptyTextItemContent,\n    REPORT_TABLE,\n    CHART,\n    VISUALIZATION,\n} from '../modules/itemTypes';\nimport { getGridItemProperties } from '../components/ItemGrid/gridUtil';\n\nexport const SET_DASHBOARDS = 'SET_DASHBOARDS';\nexport const ADD_DASHBOARDS = 'ADD_DASHBOARDS';\nexport const SET_DASHBOARD_STARRED = 'SET_DASHBOARD_STARRED';\nexport const SET_DASHBOARD_DISPLAY_NAME = 'SET_DASHBOARD_DISPLAY_NAME';\nexport const SET_DASHBOARD_ITEMS = 'SET_DASHBOARD_ITEMS';\n\nexport const DEFAULT_STATE_DASHBOARDS = {\n    byId: null,\n    items: [],\n};\n\n// reducer helper functions\n\nconst updateDashboardProp = ({ state, dashboardId, prop, value }) => ({\n    byId: {\n        ...state.byId,\n        [dashboardId]: {\n            ...state.byId[dashboardId],\n            [prop]: value,\n        },\n    },\n    items: state.items,\n});\n\n/**\n * Reducer that computes and returns the new state based on the given action\n * @function\n * @param {Object} state The current state\n * @param {Object} action The action to be evaluated\n * @returns {Object}\n */\nexport default (state = DEFAULT_STATE_DASHBOARDS, action) => {\n    switch (action.type) {\n        case SET_DASHBOARDS: {\n            return {\n                byId: action.value,\n                items: [],\n            };\n        }\n        case ADD_DASHBOARDS: {\n            return {\n                ...state,\n                byId: {\n                    ...state.byId,\n                    ...action.value,\n                },\n            };\n        }\n        case SET_DASHBOARD_STARRED: {\n            return updateDashboardProp({\n                state,\n                dashboardId: action.dashboardId,\n                prop: 'starred',\n                value: action.value,\n            });\n        }\n        case SET_DASHBOARD_DISPLAY_NAME: {\n            return updateDashboardProp({\n                state,\n                dashboardId: action.dashboardId,\n                prop: 'displayName',\n                value: action.value,\n            });\n        }\n        case SET_DASHBOARD_ITEMS: {\n            return {\n                ...state,\n                items: action.value,\n            };\n        }\n        default:\n            return state;\n    }\n};\n\n// root selector\n\nexport const sGetDashboardsRoot = state => state.dashboards;\n\n// selector level 1\n\n/**\n * Selector which returns a dashboard by id from the state object\n * If no matching dashboard is found it returns undefined\n * If dashboards.byId is null, then the dashboards api request\n * has not yet completed. If dashboards.byId is an empty object\n * then the dashboards api request is complete, but no dashboards\n * were returned\n *\n * @function\n * @param {Object} state The current state\n * @param {Number} id The id of the dashboard\n * @returns {Object | undefined}\n */\nexport const sGetDashboardById = (state, id) =>\n    orObject(sGetDashboardsRoot(state).byId)[id];\n\nexport const sDashboardsIsFetching = state => {\n    return sGetDashboardsRoot(state).byId === null;\n};\n\n/**\n * Selector which returns all dashboards (the byId object)\n *\n * @function\n * @param {Object} state The current state\n * @returns {Object | undefined}\n */\nexport const sGetAllDashboards = state =>\n    orObject(sGetDashboardsRoot(state).byId);\n\n/**\n * Selector which returns the current dashboard items\n *\n * @function\n * @param {Object} state The current state\n * @returns {Array}\n */\nexport const sGetDashboardItems = state => sGetDashboardsRoot(state).items;\n\n// selector level 2\n\nexport const sGetStarredDashboards = state =>\n    Object.values(sGetAllDashboards(state)).filter(\n        dashboard => dashboard.starred === true\n    );\n\nexport const sGetUnstarredDashboards = state =>\n    Object.values(sGetAllDashboards(state)).filter(\n        dashboard => dashboard.starred === false\n    );\n\n// selector level 3\n\nexport const sGetStarredDashboardIds = state => {\n    return sGetStarredDashboards(state).map(dashboard => dashboard.id);\n};\n\nexport const sGetUnstarredDashboardIds = state =>\n    sGetUnstarredDashboards(state).map(dashboard => dashboard.id);\n\nexport const sGetDashboardsSortedByStarred = state => [\n    ...arraySort(sGetStarredDashboards(state), 'ASC', 'displayName'),\n    ...arraySort(sGetUnstarredDashboards(state), 'ASC', 'displayName'),\n];\n\n// utils\n\n/**\n * Returns the array of dashboards, customized for ui\n * @function\n * @param {Array} data The original dashboard list\n * @returns {Array}\n */\nexport const getCustomDashboards = data => {\n    const uiItems = items =>\n        items.map(item => {\n            let type = isSpacerType(item) ? SPACER : item.type;\n\n            // TODO: temporary fix before 2.34 epic branch is merged\n            // if \"VISUALIZATION\", reset to \"REPORT_TABLE\" or \"CHART\"\n            if (type === VISUALIZATION) {\n                type = item.reportTable\n                    ? REPORT_TABLE\n                    : item.chart\n                    ? CHART\n                    : type;\n            }\n\n            const text = isTextType(item)\n                ? item.text === emptyTextItemContent\n                    ? ''\n                    : item.text\n                : null;\n\n            const gridProperties = getGridItemProperties(item.id);\n\n            return {\n                ...item,\n                ...(text !== null ? { text } : {}),\n                type,\n                ...gridProperties,\n            };\n        });\n\n    return arrayFrom(data).map(d => ({\n        id: d.id,\n        name: d.name,\n        displayName: d.displayName,\n        description: d.description,\n        displayDescription: d.displayDescription,\n        starred: d.favorite,\n        owner: d.user.name,\n        created: d.created\n            .split('T')\n            .join(' ')\n            .substr(0, 16),\n        lastUpdated: d.lastUpdated\n            .split('T')\n            .join(' ')\n            .substr(0, 16),\n        access: d.access,\n        numberOfItems: orArray(d.dashboardItems).length,\n        dashboardItems: uiItems(d.dashboardItems),\n    }));\n};\n","/** @module reducers/editDashboard */\nimport update from 'immutability-helper';\nimport isEmpty from 'lodash/isEmpty';\nimport { orArray, orObject } from '../modules/util';\n\nexport const RECEIVED_EDIT_DASHBOARD = 'RECEIVED_EDIT_DASHBOARD';\nexport const RECEIVED_NOT_EDITING = 'RECEIVED_NOT_EDITING';\nexport const START_NEW_DASHBOARD = 'START_NEW_DASHBOARD';\nexport const RECEIVED_TITLE = 'RECEIVED_TITLE';\nexport const RECEIVED_DESCRIPTION = 'RECEIVED_DESCRIPTION';\nexport const ADD_DASHBOARD_ITEM = 'ADD_DASHBOARD_ITEM';\nexport const REMOVE_DASHBOARD_ITEM = 'REMOVE_DASHBOARD_ITEM';\nexport const UPDATE_DASHBOARD_ITEM = 'UPDATE_DASHBOARD_ITEM';\nexport const RECEIVED_DASHBOARD_LAYOUT = 'RECEIVED_DASHBOARD_LAYOUT';\n\nexport const DEFAULT_STATE_EDIT_DASHBOARD = {};\nexport const NEW_DASHBOARD_STATE = {\n    id: '',\n    name: '',\n    access: {},\n    description: '',\n    dashboardItems: [],\n};\n\nexport default (state = DEFAULT_STATE_EDIT_DASHBOARD, action) => {\n    switch (action.type) {\n        case RECEIVED_EDIT_DASHBOARD: {\n            const newState = {};\n            Object.keys(NEW_DASHBOARD_STATE).map(\n                k => (newState[k] = action.value[k])\n            );\n            return newState;\n        }\n        case RECEIVED_NOT_EDITING:\n            return DEFAULT_STATE_EDIT_DASHBOARD;\n        case START_NEW_DASHBOARD:\n            return NEW_DASHBOARD_STATE;\n        case RECEIVED_TITLE: {\n            return Object.assign({}, state, { name: action.value });\n        }\n        case RECEIVED_DESCRIPTION: {\n            return Object.assign({}, state, {\n                description: action.value,\n            });\n        }\n        case ADD_DASHBOARD_ITEM:\n            return update(state, {\n                dashboardItems: { $unshift: [action.value] },\n            });\n        case REMOVE_DASHBOARD_ITEM: {\n            const idToRemove = action.value;\n\n            const dashboardItemIndex = state.dashboardItems.findIndex(\n                item => item.id === idToRemove\n            );\n\n            if (dashboardItemIndex > -1) {\n                return update(state, {\n                    dashboardItems: {\n                        $splice: [[dashboardItemIndex, 1]],\n                    },\n                });\n            }\n\n            return state;\n        }\n        case RECEIVED_DASHBOARD_LAYOUT: {\n            const stateItems = orArray(state.dashboardItems);\n            let layoutHasChanged = false;\n\n            const newStateItems = action.value.map(({ x, y, w, h, i }) => {\n                const stateItem = stateItems.find(si => si.id === i);\n\n                if (\n                    !(\n                        stateItem.x === x &&\n                        stateItem.y === y &&\n                        stateItem.w === w &&\n                        stateItem.h === h\n                    )\n                ) {\n                    layoutHasChanged = true;\n                    return Object.assign({}, stateItem, { w, h, x, y });\n                }\n\n                return stateItem;\n            });\n\n            return layoutHasChanged\n                ? {\n                      ...state,\n                      dashboardItems: newStateItems,\n                  }\n                : state;\n        }\n        case UPDATE_DASHBOARD_ITEM: {\n            const dashboardItem = action.value;\n\n            const dashboardItemIndex = state.dashboardItems.findIndex(\n                item => item.id === dashboardItem.id\n            );\n\n            if (dashboardItemIndex > -1) {\n                const newState = update(state, {\n                    dashboardItems: {\n                        $splice: [[dashboardItemIndex, 1, dashboardItem]],\n                    },\n                });\n\n                return newState;\n            }\n\n            return state;\n        }\n        default:\n            return state;\n    }\n};\n\n// root selector\n\nexport const sGetEditDashboardRoot = state => state.editDashboard;\n\n// selectors\n\nexport const sGetIsEditing = state => !isEmpty(state.editDashboard);\n\nexport const sGetIsNewDashboard = state => {\n    return (\n        !isEmpty(state.editDashboard) && sGetEditDashboardRoot(state).id === ''\n    );\n};\n\nexport const sGetEditDashboardItems = state =>\n    orObject(sGetEditDashboardRoot(state)).dashboardItems;\n","export const CLEAR_EDIT_ITEM_FILTERS = 'CLEAR_EDIT_ITEM_FILTERS';\nexport const REMOVE_EDIT_ITEM_FILTER = 'REMOVE_EDIT_ITEM_FILTER';\nexport const SET_EDIT_ITEM_FILTERS = 'SET_EDIT_ITEM_FILTERS';\n\nexport const DEFAULT_STATE_EDIT_ITEM_FILTERS = {};\n\nexport default (state = DEFAULT_STATE_EDIT_ITEM_FILTERS, action) => {\n    switch (action.type) {\n        case REMOVE_EDIT_ITEM_FILTER: {\n            const newState = { ...state };\n\n            delete newState[action.id];\n\n            return newState;\n        }\n        case SET_EDIT_ITEM_FILTERS: {\n            return action.filters;\n        }\n        case CLEAR_EDIT_ITEM_FILTERS: {\n            return DEFAULT_STATE_EDIT_ITEM_FILTERS;\n        }\n        default:\n            return state;\n    }\n};\n\n// selectors\n\nexport const sGetEditItemFiltersRoot = state => state.editItemFilters;\n\nexport const sGetEditFiltersKeys = state =>\n    Object.keys(sGetEditItemFiltersRoot(state));\n","/** @module reducers/selected */\nimport { combineReducers } from 'redux';\n\nimport { validateReducer } from '../modules/util';\n\nexport const SET_SELECTED_ID = 'SET_SELECTED_ID';\nexport const SET_SELECTED_ISLOADING = 'SET_SELECTED_ISLOADING';\nexport const SET_SELECTED_SHOWDESCRIPTION = 'SET_SELECTED_SHOWDESCRIPTION';\n\nexport const DEFAULT_STATE_SELECTED_ID = null;\nexport const DEFAULT_STATE_SELECTED_ISLOADING = false;\nexport const DEFAULT_STATE_SELECTED_SHOWDESCRIPTION = false;\n\n/**\n * Reducer functions that computes and returns the new state based on the given action\n * @function\n * @param {Object} state The current state\n * @param {Object} action The action to be evaluated\n */\nconst id = (state = DEFAULT_STATE_SELECTED_ID, action) => {\n    switch (action.type) {\n        case SET_SELECTED_ID:\n            return validateReducer(action.value, DEFAULT_STATE_SELECTED_ID);\n        default:\n            return state;\n    }\n};\n\nconst isLoading = (state = DEFAULT_STATE_SELECTED_ISLOADING, action) => {\n    switch (action.type) {\n        case SET_SELECTED_ISLOADING:\n            return validateReducer(\n                action.value,\n                DEFAULT_STATE_SELECTED_ISLOADING\n            );\n        default:\n            return state;\n    }\n};\n\nconst showDescription = (\n    state = DEFAULT_STATE_SELECTED_SHOWDESCRIPTION,\n    action\n) => {\n    switch (action.type) {\n        case SET_SELECTED_SHOWDESCRIPTION:\n            return validateReducer(\n                action.value,\n                DEFAULT_STATE_SELECTED_SHOWDESCRIPTION\n            );\n        default:\n            return state;\n    }\n};\n\nexport default combineReducers({\n    id,\n    isLoading,\n    showDescription,\n});\n\n// Selectors\n\nexport const sGetSelectedRoot = state => state.selected;\n\nexport const sGetSelectedId = state => sGetSelectedRoot(state).id;\n\nexport const sGetSelectedIsLoading = state => sGetSelectedRoot(state).isLoading;\n\nexport const sGetSelectedShowDescription = state =>\n    sGetSelectedRoot(state).showDescription;\n","import {\n    REMOVE_EDIT_ITEM_FILTER,\n    SET_EDIT_ITEM_FILTERS,\n    CLEAR_EDIT_ITEM_FILTERS,\n} from '../reducers/editItemFilters';\n\n// actions\n\nexport const acRemoveEditItemFilter = id => ({\n    type: REMOVE_EDIT_ITEM_FILTER,\n    id,\n});\n\nexport const acClearEditItemFilters = () => ({\n    type: CLEAR_EDIT_ITEM_FILTERS,\n});\n\nexport const acSetEditItemFilters = filters => ({\n    type: SET_EDIT_ITEM_FILTERS,\n    filters,\n});\n","export const CLEAR_ITEM_FILTERS = 'CLEAR_ITEM_FILTERS';\nexport const SET_ITEM_FILTERS = 'SET_ITEM_FILTERS';\nexport const ADD_ITEM_FILTER = 'ADD_ITEM_FILTER';\nexport const REMOVE_ITEM_FILTER = 'REMOVE_ITEM_FILTER';\n\nexport const DEFAULT_STATE_ITEM_FILTERS = {};\n\nexport default (state = DEFAULT_STATE_ITEM_FILTERS, action) => {\n    switch (action.type) {\n        case ADD_ITEM_FILTER: {\n            return {\n                ...state,\n                [action.filter.id]: action.filter.value,\n            };\n        }\n        case REMOVE_ITEM_FILTER: {\n            const newState = { ...state };\n\n            delete newState[action.id];\n\n            return newState;\n        }\n        case SET_ITEM_FILTERS: {\n            return action.filters;\n        }\n        case CLEAR_ITEM_FILTERS: {\n            return DEFAULT_STATE_ITEM_FILTERS;\n        }\n        default:\n            return state;\n    }\n};\n\n// selectors\n\nexport const sGetItemFiltersRoot = state => state.itemFilters;\n\nexport const sGetFiltersKeys = state => Object.keys(sGetItemFiltersRoot(state));\n","import {\n    ADD_ITEM_FILTER,\n    REMOVE_ITEM_FILTER,\n    SET_ITEM_FILTERS,\n    CLEAR_ITEM_FILTERS,\n} from '../reducers/itemFilters';\n\nexport const FILTER_ORG_UNIT = 'ou';\n\n// actions\n\nexport const acAddItemFilter = filter => ({\n    type: ADD_ITEM_FILTER,\n    filter,\n});\n\nexport const acRemoveItemFilter = id => ({\n    type: REMOVE_ITEM_FILTER,\n    id,\n});\n\nexport const acClearItemFilters = () => ({\n    type: CLEAR_ITEM_FILTERS,\n});\n\nexport const acSetItemFilters = filters => ({\n    type: SET_ITEM_FILTERS,\n    filters,\n});\n","import update from 'immutability-helper';\nimport { arrayToIdMap } from '../modules/util';\n\nexport const RECEIVED_MESSAGES = 'RECEIVED_MESSAGES';\n\nexport default (state = {}, action) => {\n    switch (action.type) {\n        case RECEIVED_MESSAGES: {\n            const conversations = arrayToIdMap(action.value);\n\n            const newState = update(state, { $merge: conversations });\n\n            return newState;\n        }\n        default:\n            return state;\n    }\n};\n\n// selectors\n\nexport const sGetMessagesRoot = state => state.messages;\n","import { getInstance } from 'd2';\n\nexport const getMessages = () => {\n    const fields =\n        'id,messageCount,lastUpdated,messageType,displayName,read,messages[id,read,sender[id,displayName],text,lastUpdated]';\n    const url = `/messageConversations?fields=${fields}&order=read:asc&pageSize=200`;\n    return getInstance()\n        .then(d2 => d2.Api.getApi().get(url))\n        .catch(error => console.log('Error:', error));\n};\n","export const RECEIVED_SNACKBAR_MESSAGE = 'RECEIVED_SNACKBAR_MESSAGE';\nexport const CLOSE_SNACKBAR = 'CLOSE_SNACKBAR';\n\nexport const DEFAULT_STATE_SNACKBAR = {\n    message: {},\n    duration: null,\n    open: false,\n};\n\nexport default (state = DEFAULT_STATE_SNACKBAR, action) => {\n    switch (action.type) {\n        case RECEIVED_SNACKBAR_MESSAGE: {\n            return { ...state, ...action.value };\n        }\n        case CLOSE_SNACKBAR: {\n            return DEFAULT_STATE_SNACKBAR;\n        }\n        default:\n            return state;\n    }\n};\n\n// selectors\n\nexport const sGetSnackbar = state => state.snackbar || DEFAULT_STATE_SNACKBAR;\n","import {\n    RECEIVED_SNACKBAR_MESSAGE,\n    CLOSE_SNACKBAR,\n} from '../reducers/snackbar';\n\nexport const acReceivedSnackbarMessage = value => ({\n    type: RECEIVED_SNACKBAR_MESSAGE,\n    value,\n});\n\nexport const acCloseSnackbar = () => ({\n    type: CLOSE_SNACKBAR,\n});\n","import { orObject } from '../modules/util';\nimport objectClean from 'd2-utilizr/lib/objectClean';\n\n/** @module reducers/visualizations */\n\nexport const ADD_VISUALIZATION = 'ADD_VISUALIZATION';\nexport const SET_ACTIVE_VISUALIZATION_TYPE = 'SET_ACTIVE_VISUALIZATION_TYPE';\n\nexport const DEFAULT_STATE_VISUALIZATIONS = {};\n\nconst isEmpty = p => p === undefined || p === null;\n\nexport default (state = DEFAULT_STATE_VISUALIZATIONS, action) => {\n    switch (action.type) {\n        case ADD_VISUALIZATION: {\n            return {\n                ...state,\n                [action.value.id]: objectClean(\n                    {\n                        ...orObject(state[action.value.id]),\n                        ...action.value,\n                    },\n                    isEmpty\n                ),\n            };\n        }\n        case SET_ACTIVE_VISUALIZATION_TYPE: {\n            return {\n                ...state,\n                [action.id]: objectClean(\n                    {\n                        ...orObject(state[action.id]),\n                        activeType: action.activeType,\n                    },\n                    isEmpty\n                ),\n            };\n        }\n        default:\n            return state;\n    }\n};\n\n// root selector\nexport const sGetVisualizationsRoot = state => state.visualizations;\n\n// selectors level 1\nexport const sGetVisualization = (state, id) => {\n    return sGetVisualizationsRoot(state)[id];\n};\n","import {\n    ADD_VISUALIZATION,\n    SET_ACTIVE_VISUALIZATION_TYPE,\n} from '../reducers/visualizations';\n\nexport const acAddVisualization = value => ({\n    type: ADD_VISUALIZATION,\n    value,\n});\n\nexport const acSetActiveVisualizationType = (id, activeType) => {\n    const action = {\n        type: SET_ACTIVE_VISUALIZATION_TYPE,\n        id,\n        activeType,\n    };\n\n    return action;\n};\n","import arrayClean from 'd2-utilizr/lib/arrayClean';\nimport {\n    getListItemFields,\n    getFavoritesFields,\n    getIdNameFields,\n} from './metadata';\n\n// Helper functions\n\nexport const onError = error => console.log('Error: ', error);\n\n// Dashboard item\nexport const getDashboardItemsFields = ({ withFavorite } = {}) =>\n    arrayClean([\n        'id',\n        'type',\n        'shape',\n        'x',\n        'y',\n        'width~rename(w)',\n        'height~rename(h)',\n        'messages',\n        'text',\n        'appKey',\n        `${getListItemFields().join(',')}`,\n        withFavorite\n            ? `${getFavoritesFields({\n                  withDimensions: withFavorite.withDimensions,\n              }).join(',')}`\n            : ``,\n    ]);\n\n// Dashboard\nexport const getDashboardFields = ({ withItems, withFavorite } = {}) =>\n    arrayClean([\n        `${getIdNameFields().join(',')}`,\n        'description',\n        'displayDescription',\n        'favorite',\n        `user[${getIdNameFields({ rename: true }).join(',')}]`,\n        'created',\n        'lastUpdated',\n        'access',\n        withItems\n            ? `dashboardItems[${getDashboardItemsFields({\n                  withFavorite,\n              }).join(',')}]`\n            : ``,\n    ]);\n","import { getInstance } from 'd2';\nimport arrayClean from 'd2-utilizr/lib/arrayClean';\nimport { onError, getDashboardFields } from './index';\n\n// Get \"all\" dashboards on startup\nexport const apiFetchDashboards = () =>\n    getInstance()\n        .then(d2 =>\n            d2.models.dashboard.list({\n                fields: [\n                    getDashboardFields().join(','),\n                    'dashboardItems[id]',\n                ].join(','),\n                paging: 'false',\n            })\n        )\n        .catch(onError);\n\n// Get more info about selected dashboard\nexport const apiFetchDashboard = id =>\n    getInstance()\n        .then(d2 =>\n            d2.models.dashboard.get(id, {\n                fields: arrayClean(\n                    getDashboardFields({\n                        withItems: true,\n                        withFavorite: { withDimensions: false },\n                    })\n                ).join(','),\n            })\n        )\n        .catch(onError);\n\n// Star dashboard\nexport const apiStarDashboard = (id, isStarred) => {\n    const url = `dashboards/${id}/favorite`;\n\n    getInstance().then(d2 => {\n        if (isStarred) {\n            d2.Api.getApi().post(url);\n        } else {\n            d2.Api.getApi().delete(url);\n        }\n    });\n};\n\nexport const apiDeleteDashboard = id => {\n    return getInstance()\n        .then(d2 => {\n            return d2.models.dashboards\n                .get(id)\n                .then(dashboard => dashboard.delete());\n        })\n        .catch(onError);\n};\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport Snackbar from '@material-ui/core/Snackbar';\nimport PropTypes from 'prop-types';\n\nimport { sGetSnackbar } from '../../reducers/snackbar';\nimport { acCloseSnackbar } from '../../actions/snackbar';\n\nconst LOADING_DASHBOARD = 'LOADING_DASHBOARD';\nexport const loadingDashboardMsg = { name: '', type: LOADING_DASHBOARD };\n\nconst SnackbarMessageContent = ({ message }) => {\n    if (typeof message === 'object') {\n        //future message types:  switch(message.type)\n        return (\n            <span>\n                Loading <span style={{ fontWeight: 800 }}>{message.name}</span>{' '}\n                dashboard\n            </span>\n        );\n    }\n    return message;\n};\n\nexport const SnackbarMessage = props => {\n    return (\n        <Snackbar\n            style={{ zIndex: 10001 }}\n            open={props.snackbarOpen}\n            message={<SnackbarMessageContent message={props.snackbarMessage} />}\n            autoHideDuration={props.snackbarDuration}\n            onClose={props.onCloseSnackbar}\n        />\n    );\n};\n\nconst mapStateToProps = state => {\n    const { message, duration, open } = sGetSnackbar(state);\n    return {\n        snackbarOpen: open,\n        snackbarMessage: message,\n        snackbarDuration: duration,\n    };\n};\n\nSnackbarMessage.propTypes = {\n    snackbarDuration: PropTypes.string,\n    snackbarMessage: PropTypes.object,\n    snackbarOpen: PropTypes.bool,\n    onCloseSnackbar: PropTypes.func,\n};\n\nexport default connect(\n    mapStateToProps,\n    {\n        onCloseSnackbar: acCloseSnackbar,\n    }\n)(SnackbarMessage);\n","import { getCustomDashboards, sGetDashboardById } from '../reducers/dashboards';\nimport { sGetIsEditing } from '../reducers/editDashboard';\nimport { sGetEditItemFiltersRoot } from '../reducers/editItemFilters';\nimport {\n    SET_SELECTED_ID,\n    SET_SELECTED_ISLOADING,\n    SET_SELECTED_SHOWDESCRIPTION,\n    sGetSelectedIsLoading,\n    sGetSelectedId,\n} from '../reducers/selected';\nimport { sGetUserUsername } from '../reducers/user';\n\nimport { acSetDashboardItems, acAppendDashboards } from './dashboards';\nimport { acClearEditItemFilters } from './editItemFilters';\nimport { acClearItemFilters, acSetItemFilters } from './itemFilters';\nimport { tGetMessages } from '../components/Item/MessagesItem/actions';\nimport { acReceivedSnackbarMessage, acCloseSnackbar } from './snackbar';\nimport { acAddVisualization } from './visualizations';\n\nimport { apiFetchDashboard } from '../api/dashboards';\nimport { storePreferredDashboardId } from '../api/localStorage';\n\nimport { withShape } from '../components/ItemGrid/gridUtil';\nimport { loadingDashboardMsg } from '../components/SnackbarMessage/SnackbarMessage';\nimport { extractFavorite } from '../components/Item/VisualizationItem/plugin';\n\nimport {\n    REPORT_TABLE,\n    CHART,\n    MAP,\n    EVENT_REPORT,\n    EVENT_CHART,\n    MESSAGES,\n} from '../modules/itemTypes';\nimport { orObject } from '../modules/util';\n\n// actions\n\nexport const acSetSelectedId = value => ({\n    type: SET_SELECTED_ID,\n    value,\n});\n\nexport const acSetSelectedIsLoading = value => ({\n    type: SET_SELECTED_ISLOADING,\n    value,\n});\n\nexport const acSetSelectedShowDescription = value => ({\n    type: SET_SELECTED_SHOWDESCRIPTION,\n    value,\n});\n\nexport const tLoadDashboard = id => async dispatch => {\n    try {\n        const dash = await apiFetchDashboard(id);\n\n        dispatch(acAppendDashboards(dash));\n\n        return Promise.resolve(dash);\n    } catch (err) {\n        console.log('Error: ', err);\n        return err;\n    }\n};\n\n// thunks\nexport const tSetSelectedDashboardById = id => async (dispatch, getState) => {\n    dispatch(acSetSelectedIsLoading(true));\n\n    const snackbarTimeout = setTimeout(() => {\n        const dashboardName = orObject(sGetDashboardById(getState(), id))\n            .displayName;\n        if (sGetSelectedIsLoading(getState()) && dashboardName) {\n            loadingDashboardMsg.name = dashboardName;\n\n            dispatch(\n                acReceivedSnackbarMessage({\n                    message: loadingDashboardMsg,\n                    open: true,\n                })\n            );\n        }\n    }, 500);\n\n    const onSuccess = selected => {\n        const customDashboard = getCustomDashboards(selected)[0];\n\n        dispatch(\n            acSetDashboardItems(withShape(customDashboard.dashboardItems))\n        );\n\n        storePreferredDashboardId(sGetUserUsername(getState()), id);\n\n        // add visualizations to store\n        customDashboard.dashboardItems.forEach(item => {\n            switch (item.type) {\n                case REPORT_TABLE:\n                case CHART:\n                case MAP:\n                case EVENT_REPORT:\n                case EVENT_CHART:\n                    dispatch(acAddVisualization(extractFavorite(item)));\n                    break;\n                case MESSAGES:\n                    dispatch(tGetMessages(id));\n                    break;\n                default:\n                    break;\n            }\n        });\n\n        const state = getState();\n        if (id === sGetSelectedId(state)) {\n            if (sGetIsEditing(state)) {\n                // disable filters when switching to edit mode\n                dispatch(acClearItemFilters());\n            } else {\n                // enable filters when switching to view mode\n                dispatch(acSetItemFilters(sGetEditItemFiltersRoot(state)));\n            }\n        } else {\n            // clear filters when switching dashboard\n            dispatch(acClearEditItemFilters());\n            dispatch(acClearItemFilters());\n        }\n\n        dispatch(acSetSelectedId(id));\n\n        dispatch(acSetSelectedIsLoading(false));\n\n        clearTimeout(snackbarTimeout);\n\n        dispatch(acCloseSnackbar());\n\n        return selected;\n    };\n\n    const onError = error => {\n        console.log('Error: ', error);\n        return error;\n    };\n\n    try {\n        const selected = await dispatch(tLoadDashboard(id));\n\n        return onSuccess(selected);\n    } catch (err) {\n        return onError(err);\n    }\n};\n","export const getPreferredDashboardId = username =>\n    localStorage.getItem(`dhis2.dashboard.current.${username}`) || undefined;\n\nexport const storePreferredDashboardId = (username, dashboardId) => {\n    localStorage.setItem(`dhis2.dashboard.current.${username}`, dashboardId);\n};\n","import { RECEIVED_MESSAGES } from '../../../reducers/messages';\nimport { getMessages } from '../../../api/messages';\n\nconst onError = (action, error) => {\n    console.log(`Error in action ${action}: ${error}`);\n    return error;\n};\n\nexport const receivedMessages = value => ({\n    type: RECEIVED_MESSAGES,\n    value,\n});\n\nexport const tGetMessages = () => async dispatch => {\n    try {\n        const messages = await getMessages();\n        const { messageConversations } = messages;\n\n        return dispatch(receivedMessages(messageConversations));\n    } catch (err) {\n        return onError('Get Messages', err);\n    }\n};\n","import { getInstance } from 'd2';\n\nconst onError = error => console.log('Error: ', error);\n\nconst saveDashboard = (dashboard, data) => {\n    const { name, description, dashboardItems } = data;\n\n    dashboard.name = name;\n    dashboard.description = description;\n    dashboard.dashboardItems = dashboardItems.map(item =>\n        Object.assign({}, item, { width: item.w, height: item.h })\n    );\n\n    return dashboard.save().then(msg => msg.response.uid);\n};\n\nexport const updateDashboard = data => {\n    return getInstance()\n        .then(d2 => {\n            return d2.models.dashboards\n                .get(data.id)\n                .then(dashboard => saveDashboard(dashboard, data));\n        })\n        .catch(onError);\n};\n\nexport const postDashboard = data => {\n    return getInstance().then(d2 => {\n        const dashboard = d2.models.dashboards.create();\n\n        return saveDashboard(dashboard, data);\n    });\n};\n","import { generateUid } from 'd2/uid';\n\nimport {\n    RECEIVED_EDIT_DASHBOARD,\n    START_NEW_DASHBOARD,\n    RECEIVED_NOT_EDITING,\n    RECEIVED_TITLE,\n    RECEIVED_DESCRIPTION,\n    RECEIVED_DASHBOARD_LAYOUT,\n    ADD_DASHBOARD_ITEM,\n    UPDATE_DASHBOARD_ITEM,\n    REMOVE_DASHBOARD_ITEM,\n} from '../reducers/editDashboard';\nimport { sGetEditDashboardRoot } from '../reducers/editDashboard';\nimport { updateDashboard, postDashboard } from '../api/editDashboard';\nimport { tSetSelectedDashboardById } from '../actions/selected';\nimport {\n    NEW_ITEM_SHAPE,\n    getGridItemProperties,\n} from '../components/ItemGrid/gridUtil';\nimport {\n    itemTypeMap,\n    isSpacerType,\n    TEXT,\n    emptyTextItemContent,\n    isTextType,\n} from '../modules/itemTypes';\n\nconst onError = error => {\n    console.log('Error (Saving Dashboard): ', error);\n    return error;\n};\n\n// actions\n\nexport const acSetEditDashboard = (dashboard, items) => {\n    const val = {\n        ...dashboard,\n        dashboardItems: items,\n    };\n\n    return {\n        type: RECEIVED_EDIT_DASHBOARD,\n        value: val,\n    };\n};\n\nexport const acSetEditNewDashboard = () => ({\n    type: START_NEW_DASHBOARD,\n});\n\nexport const acClearEditDashboard = () => ({\n    type: RECEIVED_NOT_EDITING,\n});\n\nexport const acSetDashboardTitle = value => ({\n    type: RECEIVED_TITLE,\n    value,\n});\n\nexport const acSetDashboardDescription = value => ({\n    type: RECEIVED_DESCRIPTION,\n    value,\n});\n\nexport const acUpdateDashboardLayout = value => ({\n    type: RECEIVED_DASHBOARD_LAYOUT,\n    value,\n});\n\nexport const acAddDashboardItem = item => {\n    const type = item.type;\n    delete item.type;\n    const itemPropName = itemTypeMap[type].propName;\n\n    const id = generateUid();\n    const gridItemProperties = getGridItemProperties(id);\n\n    return {\n        type: ADD_DASHBOARD_ITEM,\n        value: {\n            id,\n            type,\n            [itemPropName]: item.content,\n            ...NEW_ITEM_SHAPE,\n            ...gridItemProperties,\n        },\n    };\n};\n\nexport const acUpdateDashboardItem = item => ({\n    type: UPDATE_DASHBOARD_ITEM,\n    value: item,\n});\n\nexport const acRemoveDashboardItem = value => ({\n    type: REMOVE_DASHBOARD_ITEM,\n    value,\n});\n\n// thunks\n\nexport const tSaveDashboard = () => async (dispatch, getState) => {\n    const dashboard = sGetEditDashboardRoot(getState());\n\n    const dashboardItems = dashboard.dashboardItems.map(item => {\n        const text = isTextType(item)\n            ? item.text || emptyTextItemContent\n            : null;\n\n        const type = isSpacerType(item) ? TEXT : item.type;\n\n        return {\n            ...item,\n            ...(text ? { text } : {}),\n            type,\n        };\n    });\n\n    const dashboardToSave = {\n        ...dashboard,\n        dashboardItems,\n    };\n\n    try {\n        const dashboardId = dashboardToSave.id\n            ? await updateDashboard(dashboardToSave)\n            : await postDashboard(dashboardToSave);\n\n        dispatch(acClearEditDashboard());\n        await dispatch(tSetSelectedDashboardById(dashboardId));\n\n        return Promise.resolve(dashboardId);\n    } catch (error) {\n        onError(error);\n    }\n};\n","import {\n    SET_DASHBOARDS,\n    ADD_DASHBOARDS,\n    SET_DASHBOARD_STARRED,\n    SET_DASHBOARD_DISPLAY_NAME,\n    SET_DASHBOARD_ITEMS,\n} from '../reducers/dashboards';\nimport {\n    getCustomDashboards,\n    sGetDashboardById,\n    sGetDashboardsSortedByStarred,\n} from '../reducers/dashboards';\nimport { sGetUserUsername } from '../reducers/user';\nimport { tSetSelectedDashboardById, acSetSelectedId } from './selected';\nimport { acClearEditDashboard } from './editDashboard';\nimport {\n    apiFetchDashboards,\n    apiStarDashboard,\n    apiDeleteDashboard,\n} from '../api/dashboards';\nimport { getPreferredDashboardId } from '../api/localStorage';\nimport { arrayToIdMap } from '../modules/util';\n\n// actions\n\nexport const acSetDashboards = dashboards => ({\n    type: SET_DASHBOARDS,\n    value: arrayToIdMap(getCustomDashboards(dashboards)),\n});\n\nexport const acAppendDashboards = dashboards => ({\n    type: ADD_DASHBOARDS,\n    value: arrayToIdMap(getCustomDashboards(dashboards)),\n});\n\nexport const acSetDashboardStarred = (dashboardId, isStarred) => ({\n    type: SET_DASHBOARD_STARRED,\n    dashboardId: dashboardId,\n    value: isStarred,\n});\n\nexport const acSetDashboardDisplayName = (dashboardId, value) => ({\n    type: SET_DASHBOARD_DISPLAY_NAME,\n    dashboardId,\n    value,\n});\n\nexport const acSetDashboardItems = value => ({\n    type: SET_DASHBOARD_ITEMS,\n    value,\n});\n\n// thunks\n\nexport const tFetchDashboards = () => async dispatch => {\n    const collection = await apiFetchDashboards();\n    dispatch(acSetDashboards(collection.toArray()));\n};\n\nexport const tSelectDashboard = id => async (dispatch, getState) => {\n    const onError = error => {\n        console.log('Error (apiFetchDashboards): ', error);\n        return error;\n    };\n\n    try {\n        const state = getState();\n\n        let dashboardToSelect = null;\n        if (id) {\n            dashboardToSelect = sGetDashboardById(state, id) || null;\n        } else {\n            const preferredId = getPreferredDashboardId(\n                sGetUserUsername(state)\n            );\n            const dash = sGetDashboardById(state, preferredId);\n            dashboardToSelect =\n                preferredId && dash\n                    ? dash\n                    : sGetDashboardsSortedByStarred(state)[0];\n        }\n\n        if (dashboardToSelect) {\n            dispatch(tSetSelectedDashboardById(dashboardToSelect.id));\n        } else {\n            dispatch(acSetSelectedId());\n        }\n    } catch (err) {\n        return onError(err);\n    }\n};\n\nexport const tStarDashboard = (id, isStarred) => async dispatch => {\n    const onSuccess = id => {\n        dispatch(acSetDashboardStarred(id, isStarred));\n        return id;\n    };\n\n    const onError = error => {\n        console.log('Error (apiStarDashboard): ', error);\n        return error;\n    };\n    try {\n        await apiStarDashboard(id, isStarred);\n        return onSuccess(id);\n    } catch (err) {\n        return onError(err);\n    }\n};\n\nexport const tDeleteDashboard = id => async dispatch => {\n    try {\n        await apiDeleteDashboard(id);\n        dispatch(acClearEditDashboard());\n        dispatch(acSetSelectedId());\n        dispatch(acSetDashboardItems([]));\n\n        await dispatch(tFetchDashboards());\n\n        return Promise.resolve();\n    } catch (err) {\n        console.log('Error (deleteDashboard): ', err);\n        return err;\n    }\n};\n","/** @module reducers/controlBar */\nimport { combineReducers } from 'redux';\nimport { validateReducer } from '../modules/util';\n\nexport const SET_CONTROLBAR_USER_ROWS = 'SET_CONTROLBAR_USER_ROWS';\n\nexport const DEFAULT_STATE_CONTROLBAR_ROWS = 1;\n\nconst userRows = (state = DEFAULT_STATE_CONTROLBAR_ROWS, action) => {\n    switch (action.type) {\n        case SET_CONTROLBAR_USER_ROWS:\n            return validateReducer(action.value, DEFAULT_STATE_CONTROLBAR_ROWS);\n        default:\n            return state;\n    }\n};\n\nexport default combineReducers({\n    userRows,\n});\n\n/**\n * Selectors that point to specific props in the state object\n * @function\n * @param {Object} state\n * @returns {Object}\n */\nexport const sGetControlBarRoot = state => state.controlBar;\n\n// Selector dependency level 2\n\nexport const sGetControlBarUserRows = state =>\n    sGetControlBarRoot(state).userRows;\n","import { getInstance } from 'd2';\nimport { DEFAULT_STATE_CONTROLBAR_ROWS } from '../reducers/controlBar';\n\nconst NAMESPACE = 'dashboard';\nconst KEY = 'controlBarRows';\n\nconst hasNamespace = async d2 => await d2.currentUser.dataStore.has(NAMESPACE);\n\nconst getNamespace = async (d2, hasNamespace) =>\n    hasNamespace\n        ? await d2.currentUser.dataStore.get(NAMESPACE)\n        : await d2.currentUser.dataStore.create(NAMESPACE);\n\nexport const apiGetControlBarRows = async () => {\n    const d2 = await getInstance();\n    const namespace = await getNamespace(d2, await hasNamespace(d2));\n    const hasKey = namespace.keys && namespace.keys.find(key => key === KEY);\n\n    if (hasKey) {\n        return await namespace.get(KEY);\n    } else {\n        await apiPostControlBarRows(DEFAULT_STATE_CONTROLBAR_ROWS, namespace);\n        console.log(\n            '(These errors to /userDataStore/dashboard can be ignored)'\n        );\n        return DEFAULT_STATE_CONTROLBAR_ROWS;\n    }\n};\n\nexport const apiPostControlBarRows = async (rows, namespace) => {\n    const d2 = await getInstance();\n    const ns = namespace || (await getNamespace(d2, hasNamespace));\n\n    ns.set(KEY, rows);\n};\n","import { SET_CONTROLBAR_USER_ROWS } from '../reducers/controlBar';\nimport { apiGetControlBarRows } from '../api/controlBar';\n\n// actions\n\nexport const acSetControlBarUserRows = rows => ({\n    type: SET_CONTROLBAR_USER_ROWS,\n    value: rows,\n});\n\n// thunks\n\nexport const tSetControlBarRows = () => async dispatch => {\n    const onSuccess = rows => {\n        dispatch(acSetControlBarUserRows(rows));\n    };\n\n    const onError = error => {\n        console.log('Error (apiGetControlBarRows): ', error);\n        return error;\n    };\n\n    try {\n        const controlBarRows = await apiGetControlBarRows();\n        return onSuccess(controlBarRows);\n    } catch (err) {\n        return onError(err);\n    }\n};\n","import {\n    getDimensionById,\n    DIMENSION_ID_PERIOD,\n    DIMENSION_ID_ORGUNIT,\n} from '@dhis2/analytics';\n\nexport const SET_DIMENSIONS = 'SET_DIMENSIONS';\nexport const DEFAULT_DIMENSIONS = [\n    getDimensionById(DIMENSION_ID_PERIOD),\n    getDimensionById(DIMENSION_ID_ORGUNIT),\n];\n\nexport default (state = DEFAULT_DIMENSIONS, action) => {\n    switch (action.type) {\n        case SET_DIMENSIONS: {\n            return [...DEFAULT_DIMENSIONS, ...action.value];\n        }\n        default:\n            return state;\n    }\n};\n\nexport const sGetDimensions = state => state.dimensions;\n","export const SET_SETTINGS = 'SET_SETTINGS';\nexport const ADD_SETTINGS = 'ADD_SETTINGS';\n\nexport const DEFAULT_SETTINGS = {\n    keyDateFormat: 'yyyy-MM-dd',\n    keyAnalysisRelativePeriod: 'LAST_12_MONTHS',\n    keyAnalysisDigitGroupSeparator: 'SPACE',\n    displayNameProperty: 'displayName',\n    uiLocale: 'en',\n    rootOrganisationUnit: {},\n};\n\nexport default (state = DEFAULT_SETTINGS, action) => {\n    switch (action.type) {\n        case SET_SETTINGS: {\n            return Object.assign({}, action.value);\n        }\n        case ADD_SETTINGS: {\n            return {\n                ...state,\n                ...action.value,\n            };\n        }\n        default:\n            return state;\n    }\n};\n\n// Selectors\n\nexport const sGetSettings = state => state.settings;\n\nexport const sGetSettingsDisplayNameProperty = state =>\n    sGetSettings(state).displayNameProperty;\n\nexport const sGetRootOrgUnit = state =>\n    sGetSettings(state).rootOrganisationUnit;\n\nexport const sGetRelativePeriod = state =>\n    sGetSettings(state).keyAnalysisRelativePeriod;\n\nexport const sGetUiLocale = state => sGetSettings(state).uiLocale;\n","import { SET_DIMENSIONS } from '../reducers/dimensions';\nimport { apiFetchDimensions } from '@dhis2/analytics';\nimport { sGetSettingsDisplayNameProperty } from '../reducers/settings';\n\nexport const acSetDimensions = dimensions => ({\n    type: SET_DIMENSIONS,\n    value: dimensions,\n});\n\nexport const tSetDimensions = d2 => async (dispatch, getState) => {\n    const onSuccess = dimensions => {\n        dispatch(acSetDimensions(dimensions));\n    };\n\n    const onError = error => {\n        console.log('Error (apiFetchDimensions): ', error);\n        return error;\n    };\n\n    try {\n        const displayNameProp = sGetSettingsDisplayNameProperty(getState());\n        const dimensions = await apiFetchDimensions(d2, displayNameProp);\n\n        // filter out CATEGORY that are not of type ATTRIBUTE\n        const filteredDimensions = dimensions.filter(\n            dim =>\n                dim.dimensionType !== 'CATEGORY' ||\n                (dim.dimensionType === 'CATEGORY' &&\n                    dim.dataDimensionType === 'ATTRIBUTE')\n        );\n        return onSuccess(filteredDimensions);\n    } catch (err) {\n        return onError(err);\n    }\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport i18n from '@dhis2/d2-i18n';\n\nimport classes from './styles/ShowMoreButton.module.css';\n\nexport const SHOWMORE_BAR_HEIGHT = 16;\n\nexport const ShowMoreButton = ({ onClick, isMaxHeight, disabled }) => {\n    return (\n        <div style={{ textAlign: 'center' }}>\n            {disabled ? (\n                <div className={classes.disabled}>{i18n.t('Show more')}</div>\n            ) : (\n                <div className={classes.showMore} onClick={onClick}>\n                    {isMaxHeight ? i18n.t('Show less') : i18n.t('Show more')}\n                </div>\n            )}\n        </div>\n    );\n};\n\nShowMoreButton.propTypes = {\n    disabled: PropTypes.bool,\n    isMaxHeight: PropTypes.bool,\n    onClick: PropTypes.func,\n};\n\nexport default ShowMoreButton;\n","import { SHOWMORE_BAR_HEIGHT } from './ShowMoreButton';\n\nexport const CONTROL_BAR_ROW_HEIGHT = 40;\nexport const FIRST_ROW_PADDING_HEIGHT = 10;\nexport const MIN_ROW_COUNT = 1;\n\nexport const HEADERBAR_HEIGHT = 48;\n\nconst CONTROL_BAR_OUTER_HEIGHT_DIFF =\n    FIRST_ROW_PADDING_HEIGHT + SHOWMORE_BAR_HEIGHT - 2; // 2 pixel \"adjustment\"\n\nexport const getRowsHeight = rows => {\n    return rows * CONTROL_BAR_ROW_HEIGHT;\n};\n\nexport const getNumRowsFromHeight = height => {\n    return Math.floor(\n        (height - CONTROL_BAR_OUTER_HEIGHT_DIFF) / CONTROL_BAR_ROW_HEIGHT\n    );\n};\n\nexport const getTopOffset = rows => {\n    return HEADERBAR_HEIGHT + getControlBarHeight(rows, false);\n};\n\nexport const getControlBarHeight = rows => {\n    return getRowsHeight(rows) + CONTROL_BAR_OUTER_HEIGHT_DIFF;\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { colors } from '@dhis2/ui-core';\nimport { HEADERBAR_HEIGHT } from './controlBarDimensions';\n\nimport classes from './styles/ControlBar.module.css';\n\nconst DRAG_HANDLE_HEIGHT = 7;\n\nclass ControlBar extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            dragging: false,\n        };\n    }\n\n    onStartDrag = () => {\n        this.setState({ dragging: true });\n        window.addEventListener('mousemove', this.onDrag);\n        window.addEventListener('mouseup', this.onEndDrag);\n    };\n\n    onDrag = event => {\n        event.preventDefault();\n        event.stopPropagation();\n\n        const newHeight = event.clientY;\n\n        if (\n            this.props.onChangeHeight &&\n            newHeight !== this.props.height &&\n            newHeight > 0\n        ) {\n            requestAnimationFrame(() => {\n                this.props.onChangeHeight(newHeight);\n            });\n        }\n    };\n\n    onEndDrag = () => {\n        this.setState({ dragging: false });\n        window.removeEventListener('mousemove', this.onDrag);\n        window.removeEventListener('mouseup', this.onEndDrag);\n\n        if (this.props.onEndDrag) {\n            this.props.onEndDrag();\n        }\n    };\n\n    renderDragHandle() {\n        return typeof this.props.onChangeHeight === 'function' ? (\n            <div\n                className={classes.draghandle}\n                style={{ height: DRAG_HANDLE_HEIGHT }}\n                onMouseDown={this.onStartDrag}\n            />\n        ) : null;\n    }\n\n    render() {\n        const height = Math.max(this.props.height, 0) + DRAG_HANDLE_HEIGHT;\n\n        const rootStyle = Object.assign(\n            {\n                height,\n                top: HEADERBAR_HEIGHT,\n                backgroundColor: this.props.editMode\n                    ? colors.yellow050\n                    : colors.white,\n                paddingBottom: DRAG_HANDLE_HEIGHT,\n            },\n            // Disable animations while dragging\n            this.state.dragging ? { transition: 'none' } : {}\n        );\n\n        return (\n            <div style={rootStyle} className={classes.root}>\n                <div className={classes.content}>{this.props.children}</div>\n                {this.renderDragHandle()}\n            </div>\n        );\n    }\n}\n\nControlBar.propTypes = {\n    /**\n     * The height of the control bar in number of lines. Must be a positive integer.\n     */\n    children: PropTypes.node.isRequired,\n\n    /**\n     * If true, the background color of the control bar changes to indicate that edit mode is active.\n     */\n    editMode: PropTypes.bool.isRequired,\n\n    /**\n     * Callback function that is called when the control bar is resized.\n     * The callback receives one argument: The new height in pixels.\n     *\n     * If no callback is specified the control bar will not have a drag handle.\n     */\n    height: PropTypes.number.isRequired,\n\n    /**\n     * Callback function that is called when the control bar is dropped after being dragged.\n     * The callback receives one argument: The new height in pixels.\n     *\n     * Ignored if no \"onChangeHeight\" function is provided.\n     */\n    onChangeHeight: PropTypes.func,\n\n    /**\n     * The contents of the control bar.\n     */\n    onEndDrag: PropTypes.func,\n};\n\nControlBar.defaultProps = {\n    onChangeHeight: null,\n    onEndDrag: null,\n};\n\nexport default ControlBar;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst StarIcon = ({ className }) => (\n    <svg\n        className={className}\n        xmlns=\"http://www.w3.org/2000/svg\"\n        viewBox=\"0 0 24 24\"\n    >\n        <path d=\"M0 0h24v24H0z\" fill=\"none\" />\n        <path d=\"M12 17.27L18.18 21l-1.64-7.03L22 9.24l-7.19-.61L12 2 9.19 8.63 2 9.24l5.46 4.73L5.82 21z\" />\n        <path d=\"M0 0h24v24H0z\" fill=\"none\" />\n    </svg>\n);\n\nStarIcon.propTypes = {\n    className: PropTypes.string,\n};\n\nexport default StarIcon;\n","import { getInstance } from 'd2';\n\nexport const apiPostDataStatistics = async (eventType, id) => {\n    const d2 = await getInstance();\n    const url = `dataStatistics?eventType=${eventType}&favorite=${id}`;\n\n    d2.Api.getApi().post(url);\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Chip } from '@dhis2/ui-core';\nimport { Link } from 'react-router-dom';\nimport debounce from 'lodash/debounce';\n\nimport StarIcon from '../../icons/Star';\nimport { apiPostDataStatistics } from '../../api/dataStatistics';\n\nimport classes from './styles/DashboardItemChip.module.css';\n\nexport const DashboardItemChip = ({\n    starred,\n    selected,\n    label,\n    dashboardId,\n}) => {\n    const chipProps = {\n        selected,\n        className: classes.chip,\n    };\n\n    if (starred) {\n        const selectedState = selected ? classes.selected : classes.unselected;\n        chipProps.icon = (\n            <StarIcon className={`${classes.icon} ${selectedState}`} />\n        );\n    }\n\n    return (\n        <Link\n            className={classes.link}\n            to={`/${dashboardId}`}\n            onClick={debounce(\n                () => apiPostDataStatistics('DASHBOARD_VIEW', dashboardId),\n                500\n            )}\n        >\n            <Chip {...chipProps}>{label}</Chip>\n        </Link>\n    );\n};\n\nDashboardItemChip.propTypes = {\n    dashboardId: PropTypes.string.isRequired,\n    label: PropTypes.string.isRequired,\n    selected: PropTypes.bool.isRequired,\n    starred: PropTypes.bool.isRequired,\n    classes: PropTypes.object,\n};\n\nexport default DashboardItemChip;\n","import React from 'react';\nimport { colors } from '@dhis2/ui-core';\n\nconst AddCircleIcon = () => (\n    <svg\n        xmlns=\"http://www.w3.org/2000/svg\"\n        width=\"32\"\n        height=\"32\"\n        fill={colors.teal600}\n        viewBox=\"0 0 24 24\"\n    >\n        <path d=\"M12 2C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2zm4 11h-3v3c0 .55-.45 1-1 1s-1-.45-1-1v-3H8c-.55 0-1-.45-1-1s.45-1 1-1h3V8c0-.55.45-1 1-1s1 .45 1 1v3h3c.55 0 1 .45 1 1s-.45 1-1 1z\" />\n    </svg>\n);\n\nexport default AddCircleIcon;\n","import React from 'react';\nimport { colors } from '@dhis2/ui-core';\nimport PropTypes from 'prop-types';\n\nconst ClearIcon = ({ className }) => (\n    <svg\n        className={className}\n        fill={colors.grey800}\n        xmlns=\"http://www.w3.org/2000/svg\"\n        viewBox=\"0 0 24 24\"\n    >\n        <path d=\"M19 6.41L17.59 5 12 10.59 6.41 5 5 6.41 10.59 12 5 17.59 6.41 19 12 13.41 17.59 19 19 17.59 13.41 12z\" />\n        <path d=\"M0 0h24v24H0z\" fill=\"none\" />\n    </svg>\n);\n\nClearIcon.propTypes = {\n    className: PropTypes.string,\n};\n\nexport default ClearIcon;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport ClearIcon from '../../icons/Clear';\n\nimport classes from './styles/ClearButton.module.css';\n\nexport const ClearButton = ({ onClear }) => (\n    <button className={classes.button} onClick={onClear}>\n        <span>\n            <ClearIcon className={classes.icon} color=\"action\" />\n        </span>\n    </button>\n);\n\nClearButton.propTypes = {\n    onClear: PropTypes.func.isRequired,\n};\n\nexport default ClearButton;\n","import { combineReducers } from 'redux';\nimport { validateReducer } from '../modules/util';\n\nexport const SET_DASHBOARDS_FILTER_NAME = 'SET_DASHBOARDS_FILTER_NAME';\nexport const SET_DASHBOARDS_FILTER_OWNER = 'SET_DASHBOARDS_FILTER_OWNER';\nexport const SET_DASHBOARDS_FILTER_ORDER = 'SET_DASHBOARDS_FILTER_ORDER';\n\nexport const ownerData = [\n    { id: 'ALL', value: 'All users' },\n    { id: 'ME', value: 'Created by me' },\n    { id: 'OTHERS', value: 'Created by others' },\n];\n\nexport const orderData = [\n    { id: 'NAME:ASC', value: 'Name (asc)' },\n    { id: 'NAME:ASC', value: 'Name (desc)' },\n    { id: 'ITEMS:ASC', value: 'Number of items (asc)' },\n    { id: 'ITEMS:ASC', value: 'Number of items (desc)' },\n    { id: 'CREATED:ASC', value: 'Created date (asc)' },\n    { id: 'CREATED:ASC', value: 'Created date (desc)' },\n];\n\nexport const DEFAULT_STATE_DASHBOARDS_FILTER_NAME = '';\nexport const DEFAULT_STATE_DASHBOARDS_FILTER_OWNER = ownerData[0].id;\nexport const DEFAULT_STATE_DASHBOARDS_FILTER_ORDER = orderData[0].id;\n\nconst name = (state = DEFAULT_STATE_DASHBOARDS_FILTER_NAME, action) => {\n    switch (action.type) {\n        case SET_DASHBOARDS_FILTER_NAME:\n            return validateReducer(\n                action.value,\n                DEFAULT_STATE_DASHBOARDS_FILTER_NAME\n            );\n        default:\n            return state;\n    }\n};\n\nconst owner = (state = DEFAULT_STATE_DASHBOARDS_FILTER_OWNER, action) => {\n    switch (action.type) {\n        case SET_DASHBOARDS_FILTER_OWNER:\n            return validateReducer(\n                action.value,\n                DEFAULT_STATE_DASHBOARDS_FILTER_NAME\n            );\n        default:\n            return state;\n    }\n};\n\nconst order = (state = DEFAULT_STATE_DASHBOARDS_FILTER_ORDER, action) => {\n    switch (action.type) {\n        case SET_DASHBOARDS_FILTER_ORDER:\n            return validateReducer(\n                action.value,\n                DEFAULT_STATE_DASHBOARDS_FILTER_ORDER\n            );\n        default:\n            return state;\n    }\n};\n\nexport default combineReducers({\n    name,\n    owner,\n    order,\n});\n\n// selectors\n\nexport const sGetDashboardsFilterRoot = state => state.dashboardsFilter;\n\n// selector dependency level 2\n\nexport const sGetFilterName = state => sGetDashboardsFilterRoot(state).name;\nexport const sGetFilterOwner = state => sGetDashboardsFilterRoot(state).owner;\nexport const sGetFilterOrder = state => sGetDashboardsFilterRoot(state).order;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport i18n from '@dhis2/d2-i18n';\nimport InputField from '@material-ui/core/Input';\nimport InputAdornment from '@material-ui/core/InputAdornment';\nimport SearchIcon from '@material-ui/icons/Search';\n\nimport ClearButton from './ClearButton';\nimport { DEFAULT_STATE_DASHBOARDS_FILTER_NAME } from '../../reducers/dashboardsFilter';\n\nimport classes from './styles/Filter.module.css';\n\nexport const KEYCODE_ENTER = 13;\nexport const KEYCODE_ESCAPE = 27;\n\nexport class Filter extends Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            value: DEFAULT_STATE_DASHBOARDS_FILTER_NAME,\n        };\n    }\n\n    componentWillReceiveProps(nextProps) {\n        this.setState({\n            value: nextProps.name,\n        });\n    }\n\n    setFilterValue = event => {\n        event.preventDefault();\n\n        this.props.onChangeName(event.target.value);\n    };\n\n    handleKeyUp = event => {\n        switch (event.keyCode) {\n            case KEYCODE_ENTER:\n                this.props.onKeypressEnter();\n                break;\n            case KEYCODE_ESCAPE:\n                this.props.onChangeName();\n                break;\n            default:\n                break;\n        }\n    };\n\n    render() {\n        const { name, onChangeName } = this.props;\n\n        const startAdornment = (\n            <InputAdornment position=\"start\">\n                <SearchIcon className={classes.searchIcon} />\n            </InputAdornment>\n        );\n\n        const endAdornment =\n            name !== '' && name !== null ? (\n                <InputAdornment position=\"end\">\n                    <ClearButton onClear={() => onChangeName()} />\n                </InputAdornment>\n            ) : null;\n\n        return (\n            <InputField\n                className={classes.filterField}\n                placeholder={i18n.t('Search for a dashboard')}\n                startAdornment={startAdornment}\n                endAdornment={endAdornment}\n                value={this.state.value}\n                onChange={this.setFilterValue}\n                onKeyUp={this.handleKeyUp}\n            />\n        );\n    }\n}\n\nFilter.propTypes = {\n    name: PropTypes.string,\n    onChangeName: PropTypes.func,\n    onKeypressEnter: PropTypes.func,\n};\n\nFilter.defaultProps = {\n    name: '',\n    onChangeName: Function.prototype,\n};\n\nexport default Filter;\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { Link, withRouter } from 'react-router-dom';\nimport ControlBar from './ControlBar';\nimport arraySort from 'd2-utilizr/lib/arraySort';\nimport PropTypes from 'prop-types';\n\nimport Chip from './DashboardItemChip';\nimport AddCircleIcon from '../../icons/AddCircle';\nimport Filter from './Filter';\nimport ShowMoreButton from './ShowMoreButton';\nimport {\n    FIRST_ROW_PADDING_HEIGHT,\n    MIN_ROW_COUNT,\n    getRowsHeight,\n    getControlBarHeight,\n    getNumRowsFromHeight,\n} from './controlBarDimensions';\nimport { sGetControlBarUserRows } from '../../reducers/controlBar';\nimport { sGetAllDashboards } from '../../reducers/dashboards';\nimport { sGetFilterName } from '../../reducers/dashboardsFilter';\nimport { sGetSelectedId } from '../../reducers/selected';\nimport { acSetControlBarUserRows } from '../../actions/controlBar';\nimport { acSetFilterName } from '../../actions/dashboardsFilter';\nimport { orObject, orArray } from '../../modules/util';\nimport { apiPostControlBarRows } from '../../api/controlBar';\n\nimport classes from './styles/DashboardsBar.module.css';\n\nexport const MAX_ROW_COUNT = 10;\n\nexport class DashboardsBar extends Component {\n    state = {\n        rows: MIN_ROW_COUNT,\n    };\n\n    setInitialDashboardState = rows => {\n        this.setState({ rows, isMaxHeight: rows === MAX_ROW_COUNT });\n    };\n\n    componentDidMount() {\n        this.setInitialDashboardState(this.props.userRows);\n    }\n\n    componentWillReceiveProps(nextProps) {\n        this.setInitialDashboardState(nextProps.userRows);\n    }\n\n    onChangeHeight = newHeight => {\n        const adjustedHeight = newHeight - 52; // don't rush the transition to a bigger row count\n        const newRows = Math.max(\n            MIN_ROW_COUNT,\n            getNumRowsFromHeight(adjustedHeight)\n        );\n\n        if (newRows !== this.state.rows) {\n            const newRowCount = Math.min(newRows, MAX_ROW_COUNT);\n\n            this.props.onChangeHeight(newRowCount);\n        }\n    };\n\n    onEndDrag = () => {\n        return apiPostControlBarRows(this.state.rows);\n    };\n\n    onToggleMaxHeight = () => {\n        const rows =\n            this.state.rows === MAX_ROW_COUNT\n                ? this.props.userRows\n                : MAX_ROW_COUNT;\n\n        this.setState({ rows, isMaxHeight: !this.state.isMaxHeight });\n    };\n\n    onSelectDashboard = () => {\n        this.props.history.push(`/${this.props.dashboards[0].id}`);\n    };\n\n    render() {\n        const { dashboards, name, selectedId, onChangeFilterName } = this.props;\n\n        const rowCount = this.state.isMaxHeight\n            ? MAX_ROW_COUNT\n            : this.state.rows;\n        const controlBarHeight = getControlBarHeight(rowCount);\n        const contentWrapperStyle = {\n            padding: `${FIRST_ROW_PADDING_HEIGHT}px 6px 0 6px`,\n            overflowY: this.state.isMaxHeight ? 'auto' : 'hidden',\n            height: getRowsHeight(rowCount) + FIRST_ROW_PADDING_HEIGHT,\n        };\n\n        return (\n            <ControlBar\n                height={controlBarHeight}\n                onChangeHeight={this.onChangeHeight}\n                onEndDrag={this.onEndDrag}\n                editMode={false}\n            >\n                <div style={contentWrapperStyle}>\n                    <div className={classes.leftControls}>\n                        <Link\n                            style={{\n                                display: 'inline-block',\n                                textDecoration: 'none',\n                                marginRight: 10,\n                                position: 'relative',\n                                top: '2px',\n                            }}\n                            to={'/new'}\n                        >\n                            <AddCircleIcon />\n                        </Link>\n                        <Filter\n                            name={name}\n                            onChangeName={onChangeFilterName}\n                            onKeypressEnter={this.onSelectDashboard}\n                        />\n                    </div>\n                    {orArray(dashboards).map(dashboard => (\n                        <Chip\n                            key={dashboard.id}\n                            label={dashboard.displayName}\n                            starred={dashboard.starred}\n                            dashboardId={dashboard.id}\n                            selected={dashboard.id === selectedId}\n                        />\n                    ))}\n                </div>\n                <ShowMoreButton\n                    onClick={this.onToggleMaxHeight}\n                    isMaxHeight={this.state.isMaxHeight}\n                    disabled={this.props.userRows === MAX_ROW_COUNT}\n                />\n            </ControlBar>\n        );\n    }\n}\n\nconst mapStateToProps = state => ({\n    dashboards: sGetAllDashboards(state),\n    name: sGetFilterName(state),\n    userRows: sGetControlBarUserRows(state),\n    selectedId: sGetSelectedId(state),\n});\n\nconst mapDispatchToProps = {\n    onChangeHeight: acSetControlBarUserRows,\n    onChangeFilterName: acSetFilterName,\n};\nconst mergeProps = (stateProps, dispatchProps, ownProps) => {\n    const dashboards = Object.values(orObject(stateProps.dashboards));\n    const displayDashboards = arraySort(\n        dashboards.filter(d =>\n            d.displayName.toLowerCase().includes(stateProps.name.toLowerCase())\n        ),\n        'ASC',\n        'displayName'\n    );\n\n    return {\n        ...stateProps,\n        ...ownProps,\n        ...dispatchProps,\n        dashboards: [\n            ...displayDashboards.filter(d => d.starred),\n            ...displayDashboards.filter(d => !d.starred),\n        ],\n    };\n};\n\nDashboardsBar.propTypes = {\n    dashboards: PropTypes.array,\n    history: PropTypes.object,\n    name: PropTypes.string,\n    selectedId: PropTypes.string,\n    userRows: PropTypes.number,\n    onChangeFilterName: PropTypes.func,\n    onChangeHeight: PropTypes.func,\n};\n\nexport default withRouter(\n    connect(\n        mapStateToProps,\n        mapDispatchToProps,\n        mergeProps\n    )(DashboardsBar)\n);\n","import {\n    SET_DASHBOARDS_FILTER_NAME,\n    SET_DASHBOARDS_FILTER_OWNER,\n    SET_DASHBOARDS_FILTER_ORDER,\n} from '../reducers/dashboardsFilter';\n\n// actions\n\nexport const acSetFilterName = value => ({\n    type: SET_DASHBOARDS_FILTER_NAME,\n    value,\n});\n\nexport const acSetFilterOwner = value => ({\n    type: SET_DASHBOARDS_FILTER_OWNER,\n    value,\n});\n\nexport const acSetFilterOrder = value => ({\n    type: SET_DASHBOARDS_FILTER_ORDER,\n    value,\n});\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\n\nimport {\n    getTopOffset,\n    MIN_ROW_COUNT,\n} from '../ControlBar/controlBarDimensions';\nimport { sGetControlBarUserRows } from '../../reducers/controlBar';\n\nconst DashboardVerticalOffset = props => {\n    const rows = props.editMode ? MIN_ROW_COUNT : props.userRows;\n    const marginTop = getTopOffset(rows);\n\n    return <div className=\"page-container-top-margin\" style={{ marginTop }} />;\n};\n\nconst mapStateToProps = state => ({\n    userRows: sGetControlBarUserRows(state),\n});\n\nDashboardVerticalOffset.propTypes = {\n    editMode: PropTypes.bool,\n    userRows: PropTypes.number,\n};\n\nexport default connect(mapStateToProps)(DashboardVerticalOffset);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { MenuItem, colors } from '@dhis2/ui-core';\n\nconst HeaderMenuItem = ({ title }) => (\n    <MenuItem\n        dense\n        key={title}\n        disabled\n        label={\n            <p style={{ color: colors.grey800, fontWeight: '600' }}>{title}</p>\n        }\n    />\n);\n\nHeaderMenuItem.propTypes = {\n    title: PropTypes.string.isRequired,\n};\n\nexport default HeaderMenuItem;\n","import React from 'react';\nimport { colors } from '@dhis2/ui-core';\nimport PropTypes from 'prop-types';\n\nconst LaunchIcon = ({ className }) => (\n    <svg\n        className={className}\n        xmlns=\"http://www.w3.org/2000/svg\"\n        width=\"12\"\n        height=\"12\"\n        fill={colors.grey600}\n        viewBox=\"0 0 24 24\"\n    >\n        <path d=\"M0 0h24v24H0z\" fill=\"none\" />\n        <path d=\"M19 19H5V5h7V3H5c-1.11 0-2 .9-2 2v14c0 1.1.89 2 2 2h14c1.1 0 2-.9 2-2v-7h-2v7zM14 3v2h3.59l-9.83 9.83 1.41 1.41L19 6.41V10h2V3h-7z\" />\n    </svg>\n);\n\nLaunchIcon.propTypes = {\n    className: PropTypes.string,\n};\n\nexport default LaunchIcon;\n","import React from 'react';\nimport { MenuItem, colors } from '@dhis2/ui-core';\nimport i18n from '@dhis2/d2-i18n';\nimport PropTypes from 'prop-types';\nimport { visTypeIcons } from '@dhis2/analytics';\n\nimport { getItemIcon, VISUALIZATION } from '../../modules/itemTypes';\nimport LaunchIcon from '../../icons/Launch';\n\nimport classes from './styles/ContentMenuItem.module.css';\n\nconst LaunchLink = ({ url }) => (\n    <a\n        onClick={e => e.stopPropagation()}\n        className={classes.launchLink}\n        target=\"_blank\"\n        rel=\"noopener noreferrer\"\n        href={url}\n    >\n        <LaunchIcon />\n    </a>\n);\n\nLaunchLink.propTypes = {\n    url: PropTypes.string,\n};\n\nconst InsertButton = () => (\n    <button className={classes.buttonInsert}>{i18n.t('Insert')}</button>\n);\n\nconst ContentMenuItem = ({ type, name, onInsert, url, visType }) => {\n    const ItemIcon = getItemIcon(type);\n\n    const renderedItemIcon =\n        type === VISUALIZATION ? (\n            visTypeIcons[visType]\n        ) : (\n            <ItemIcon style={{ fill: colors.grey600 }} />\n        );\n\n    return (\n        <MenuItem\n            dense\n            onClick={onInsert}\n            label={\n                <div className={classes.menuItem}>\n                    <div className={classes.label}>\n                        <span style={{ margin: '6px' }}>\n                            {renderedItemIcon}\n                        </span>\n                        <span>{name}</span>\n                        {url ? <LaunchLink url={url} /> : null}\n                    </div>\n                    <InsertButton />\n                </div>\n            }\n        />\n    );\n};\n\nContentMenuItem.propTypes = {\n    name: PropTypes.string,\n    type: PropTypes.string,\n    url: PropTypes.string,\n    visType: PropTypes.string,\n    onInsert: PropTypes.func,\n};\n\nexport default ContentMenuItem;\n","import i18n from '@dhis2/d2-i18n';\nimport {\n    spacerContent,\n    VISUALIZATION,\n    MAP,\n    EVENT_CHART,\n    EVENT_REPORT,\n    USERS,\n    REPORTS,\n    RESOURCES,\n    APP,\n    MESSAGES,\n    TEXT,\n    SPACER,\n} from '../../modules/itemTypes';\n\nexport const singleItems = [\n    {\n        id: 'additional',\n        header: i18n.t('Additional items'),\n        items: [\n            {\n                type: TEXT,\n                name: i18n.t('Text box'),\n                content: '',\n            },\n            {\n                type: MESSAGES,\n                name: i18n.t('Messages'),\n                content: 'true',\n            },\n            {\n                type: SPACER,\n                name: i18n.t('Spacer'),\n                content: spacerContent,\n            },\n        ],\n    },\n];\n\n// categorizedItems are grouped in the item selector menu\nexport const categorizedItems = [\n    VISUALIZATION,\n    MAP,\n    EVENT_REPORT,\n    EVENT_CHART,\n    USERS,\n    REPORTS,\n    RESOURCES,\n    APP,\n];\n\n// listItemTypes are included in a single dashboard item\nexport const listItemTypes = [REPORTS, RESOURCES, USERS];\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport i18n from '@dhis2/d2-i18n';\nimport { MenuItem, Divider } from '@dhis2/ui-core';\n\nimport HeaderMenuItem from './HeaderMenuItem';\nimport ContentMenuItem from './ContentMenuItem';\n\nimport { tAddListItemContent } from './actions';\nimport { acAddDashboardItem } from '../../actions/editDashboard';\nimport { getItemUrl, APP, VISUALIZATION } from '../../modules/itemTypes';\nimport { categorizedItems, listItemTypes } from './selectableItems';\n\nimport classes from './styles/CategorizedMenuGroup.module.css';\n\nclass CategorizedMenuGroup extends Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            seeMore: false,\n        };\n    }\n\n    addItem = item => () => {\n        const { type, acAddDashboardItem, tAddListItemContent } = this.props;\n\n        if (type === APP) {\n            acAddDashboardItem({ type, content: item.key });\n        } else {\n            const newItem = {\n                id: item.id,\n                name: item.displayName || item.name,\n            };\n\n            if (listItemTypes.includes(type)) {\n                tAddListItemContent(type, newItem);\n            } else {\n                acAddDashboardItem({ type, content: newItem });\n            }\n        }\n    };\n\n    toggleSeeMore = () => {\n        this.setState({ seeMore: !this.state.seeMore });\n\n        this.props.onChangeItemsLimit(this.props.type);\n    };\n\n    render() {\n        const { title, type, items, hasMore } = this.props;\n        return (\n            <>\n                <HeaderMenuItem title={title} />\n                {items.map(item => {\n                    const itemUrl = getItemUrl(type, item, this.context.d2);\n                    return (\n                        <ContentMenuItem\n                            key={item.id || item.key}\n                            type={type}\n                            visType={type === VISUALIZATION ? item.type : type}\n                            name={item.displayName || item.name}\n                            onInsert={this.addItem(item)}\n                            url={itemUrl}\n                        />\n                    );\n                })}\n                {hasMore ? (\n                    <MenuItem\n                        dense\n                        key={`showmore${title}`}\n                        onClick={this.toggleSeeMore}\n                        label={\n                            <button className={classes.showMoreButton}>\n                                {this.state.seeMore\n                                    ? i18n.t('Show fewer')\n                                    : i18n.t('Show more')}\n                            </button>\n                        }\n                    />\n                ) : null}\n                <Divider margin=\"8px 0px\" />\n            </>\n        );\n    }\n}\n\nCategorizedMenuGroup.propTypes = {\n    items: PropTypes.array.isRequired,\n    title: PropTypes.string.isRequired,\n    type: PropTypes.oneOf(categorizedItems).isRequired,\n    onChangeItemsLimit: PropTypes.func.isRequired,\n    acAddDashboardItem: PropTypes.func,\n    hasMore: PropTypes.bool,\n    tAddListItemContent: PropTypes.func,\n};\n\nCategorizedMenuGroup.contextTypes = {\n    d2: PropTypes.object.isRequired,\n};\n\nexport default connect(\n    null,\n    {\n        acAddDashboardItem,\n        tAddListItemContent,\n    }\n)(CategorizedMenuGroup);\n","import { sGetEditDashboardRoot } from '../../reducers/editDashboard';\nimport { itemTypeMap } from '../../modules/itemTypes';\nimport {\n    acAddDashboardItem,\n    acUpdateDashboardItem,\n} from '../../actions/editDashboard';\n\nexport const tAddListItemContent = (type, content) => (dispatch, getState) => {\n    const state = getState();\n    const listItemType = itemTypeMap[type].propName;\n    const dashboardItems = sGetEditDashboardRoot(state).dashboardItems;\n    const dashboardItemIndex = dashboardItems.findIndex(\n        item => item.type === type\n    );\n    let dashboardItem;\n\n    // Reports/Resources/Users dashboard item type already present in dashboard\n    if (dashboardItemIndex > -1) {\n        dashboardItem = dashboardItems[dashboardItemIndex];\n        dashboardItem[listItemType].push(content);\n\n        dispatch(acUpdateDashboardItem(dashboardItem));\n    } else {\n        dashboardItem = {\n            type: type,\n            content: [content],\n        };\n\n        dispatch(acAddDashboardItem(dashboardItem));\n    }\n};\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\n\nimport HeaderMenuItem from './HeaderMenuItem';\nimport ContentMenuItem from './ContentMenuItem';\nimport { acAddDashboardItem } from '../../actions/editDashboard';\n\nexport const SinglesMenuGroup = ({ acAddDashboardItem, category }) => {\n    const addToDashboard = ({ type, content }) => () => {\n        acAddDashboardItem({ type, content });\n    };\n\n    return (\n        <>\n            <HeaderMenuItem title={category.header} />\n            {category.items.map(item => (\n                <ContentMenuItem\n                    key={item.type}\n                    type={item.type}\n                    name={item.name}\n                    onInsert={addToDashboard(item)}\n                />\n            ))}\n        </>\n    );\n};\n\nSinglesMenuGroup.propTypes = {\n    acAddDashboardItem: PropTypes.func,\n    category: PropTypes.object,\n};\n\nexport default connect(\n    null,\n    { acAddDashboardItem }\n)(SinglesMenuGroup);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport i18n from '@dhis2/d2-i18n';\nimport Popover from '@material-ui/core/Popover';\nimport { InputField, Menu } from '@dhis2/ui-core';\n\nimport CategorizedMenuGroup from './CategorizedMenuGroup';\nimport SinglesMenuGroup from './SinglesMenuGroup';\nimport { singleItems, categorizedItems } from './selectableItems';\nimport { itemTypeMap, getDefaultItemCount } from '../../modules/itemTypes';\n\nimport './styles/ItemSelector.css';\n\nconst ItemSearchField = props => (\n    <InputField\n        name=\"Dashboard item search\"\n        label={i18n.t('Search for items to add to this dashboard')}\n        type=\"text\"\n        onChange={props.onChange}\n        onFocus={props.onFocus}\n        value={props.value}\n    />\n);\n\nclass ItemSelector extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            anchorEl: null,\n            open: false,\n            maxOptions: new Set(),\n            items: undefined,\n            filter: '',\n        };\n    }\n\n    closeList = () => {\n        this.setState({ open: false, filter: '' });\n    };\n\n    openList = (_, event) => {\n        this.fetchItems();\n\n        this.setState({\n            anchorEl: event.currentTarget,\n            open: true,\n        });\n    };\n\n    setFilter = (_, event) => {\n        this.setState({ filter: event.target.value }, this.fetchItems);\n    };\n\n    getCategorizedMenuGroups = () =>\n        categorizedItems\n            .filter(type => {\n                const itemType = itemTypeMap[type];\n                return (\n                    this.state.items && this.state.items[itemType.endPointName]\n                );\n            })\n            .map(type => {\n                const itemType = itemTypeMap[type];\n                const itemCount = getDefaultItemCount(type);\n                const allItems = this.state.items[itemType.endPointName];\n                const hasMore = allItems.length > itemCount;\n                const items = this.state.maxOptions.has(itemType.id)\n                    ? allItems\n                    : allItems.slice(0, itemCount);\n\n                return (\n                    <CategorizedMenuGroup\n                        key={type}\n                        type={type}\n                        title={itemType.pluralTitle}\n                        items={items}\n                        onChangeItemsLimit={this.fetchItems}\n                        hasMore={hasMore}\n                    />\n                );\n            });\n\n    getSinglesMenuGroups = () =>\n        singleItems.map(category => (\n            <SinglesMenuGroup key={category.id} category={category} />\n        ));\n\n    getMenuGroups = () =>\n        this.getCategorizedMenuGroups().concat(this.getSinglesMenuGroups());\n\n    fetchItems = async type => {\n        if (type) {\n            const maxOptions = this.state.maxOptions;\n\n            if (maxOptions.has(type)) {\n                maxOptions.delete(type);\n            } else {\n                maxOptions.add(type);\n            }\n\n            this.setState({ maxOptions });\n        } else {\n            this.setState({\n                maxOptions: new Set(),\n            });\n        }\n\n        let queryString = '?count=11';\n        if ([...this.state.maxOptions.values()].length) {\n            queryString +=\n                '&max=' + [...this.state.maxOptions.values()].join('&max=');\n        }\n\n        const filter = this.state.filter ? `/${this.state.filter}` : '';\n\n        this.context.d2.Api.getApi()\n            .get(`dashboards/q${filter}${queryString}`)\n            .then(response => this.setState({ items: response }))\n            .catch(console.error);\n    };\n\n    render() {\n        return (\n            <>\n                <ItemSearchField\n                    value={this.state.filter}\n                    onChange={this.setFilter}\n                    onFocus={this.openList}\n                />\n                <Popover\n                    className=\"dashboard-item-selector\"\n                    open={this.state.open}\n                    onClose={this.closeList}\n                    anchorEl={this.state.anchorEl}\n                    anchorOrigin={{ horizontal: 'left', vertical: 'bottom' }}\n                    transformOrigin={{ horizontal: 'left', vertical: 'top' }}\n                    style={{ height: '70vh' }}\n                    PaperProps={{ style: { width: '700px' } }}\n                    disableAutoFocus={true}\n                    disableRestoreFocus={true}\n                >\n                    <Menu>{this.getMenuGroups()}</Menu>\n                </Popover>\n            </>\n        );\n    }\n}\n\nItemSearchField.propTypes = {\n    value: PropTypes.string,\n    onChange: PropTypes.func,\n    onFocus: PropTypes.func,\n};\n\nItemSelector.contextTypes = {\n    d2: PropTypes.object.isRequired,\n};\n\nexport default ItemSelector;\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport i18n from '@dhis2/d2-i18n';\nimport { InputField, TextAreaField } from '@dhis2/ui-core';\n\nimport ItemSelector from '../ItemSelector/ItemSelector';\nimport {\n    acSetDashboardTitle,\n    acSetDashboardDescription,\n} from '../../actions/editDashboard';\nimport { orObject } from '../../modules/util';\nimport { sGetEditDashboardRoot } from '../../reducers/editDashboard';\n\nimport classes from './styles/EditTitleBar.module.css';\n\nexport const EditTitleBar = ({\n    name,\n    description,\n    onChangeTitle,\n    onChangeDescription,\n}) => {\n    const updateTitle = (_, e) => {\n        onChangeTitle(e.target.value);\n    };\n\n    const updateDescription = (_, e) => {\n        onChangeDescription(e.target.value);\n    };\n\n    return (\n        <section className={classes.section}>\n            <div className={classes.titleDescription}>\n                <InputField\n                    className={classes.title}\n                    name=\"Dashboard title input\"\n                    label={i18n.t('Dashboard title')}\n                    type=\"text\"\n                    onChange={updateTitle}\n                    value={name}\n                />\n                <TextAreaField\n                    className={classes.description}\n                    name=\"Dashboard description input\"\n                    label={i18n.t('Dashboard description')}\n                    onChange={updateDescription}\n                    value={description}\n                />\n            </div>\n            <div className={classes.itemSelector}>\n                <ItemSelector />\n            </div>\n        </section>\n    );\n};\n\nEditTitleBar.propTypes = {\n    onChangeDescription: PropTypes.func.isRequired,\n    onChangeTitle: PropTypes.func.isRequired,\n    description: PropTypes.string,\n    name: PropTypes.string,\n};\n\nEditTitleBar.defaultProps = {\n    name: '',\n    description: '',\n};\n\nconst mapStateToProps = state => {\n    const selectedDashboard = orObject(sGetEditDashboardRoot(state));\n\n    return {\n        name: selectedDashboard.name,\n        description: selectedDashboard.description,\n    };\n};\n\nconst mapDispatchToProps = {\n    onChangeTitle: acSetDashboardTitle,\n    onChangeDescription: acSetDashboardDescription,\n};\n\nexport default connect(\n    mapStateToProps,\n    mapDispatchToProps\n)(EditTitleBar);\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nimport { Button } from '@dhis2/ui-core';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\n\nimport i18n from '@dhis2/d2-i18n';\n\nimport {\n    PeriodDimension,\n    DynamicDimension,\n    OrgUnitDimension,\n    DIMENSION_ID_PERIOD,\n    DIMENSION_ID_ORGUNIT,\n} from '@dhis2/analytics';\n\nconst peId = DIMENSION_ID_PERIOD;\nconst ouId = DIMENSION_ID_ORGUNIT;\n\nclass FilterDialog extends Component {\n    onConfirm = id => () => this.props.onConfirm(id);\n\n    dialogContent() {\n        const { displayNameProperty, dimension, selectedItems } = this.props;\n        const dialogId = dimension.id;\n\n        const commonProps = {\n            d2: this.context.d2,\n            onSelect: this.props.onSelect,\n            onDeselect: this.props.onDeselect,\n            onReorder: this.props.onReorder,\n        };\n\n        switch (dialogId) {\n            case peId: {\n                return (\n                    <PeriodDimension\n                        selectedPeriods={selectedItems}\n                        {...commonProps}\n                    />\n                );\n            }\n            case ouId:\n                return (\n                    <OrgUnitDimension\n                        displayNameProperty={displayNameProperty}\n                        ouItems={selectedItems}\n                        {...commonProps}\n                    />\n                );\n            default:\n                return (\n                    <DynamicDimension\n                        selectedItems={selectedItems}\n                        dialogId={dialogId}\n                        dialogTitle={dimension.name}\n                        {...commonProps}\n                    />\n                );\n        }\n    }\n\n    render() {\n        const { dimension, onClose } = this.props;\n        const dialogId = dimension.id;\n\n        return (\n            <Dialog\n                open={!!dialogId}\n                maxWidth=\"lg\"\n                disableEnforceFocus\n                onClose={onClose}\n            >\n                {dialogId && this.dialogContent()}\n                <DialogActions>\n                    <Button kind=\"secondary\" onClick={onClose}>\n                        {i18n.t('Cancel')}\n                    </Button>\n                    <Button kind=\"primary\" onClick={this.onConfirm(dialogId)}>\n                        {i18n.t('Confirm')}\n                    </Button>\n                </DialogActions>\n            </Dialog>\n        );\n    }\n}\n\nFilterDialog.propTypes = {\n    dimension: PropTypes.object,\n    displayNameProperty: PropTypes.string,\n    selectedItems: PropTypes.array,\n    onClose: PropTypes.func,\n    onConfirm: PropTypes.func,\n    onDeselect: PropTypes.func,\n    onReorder: PropTypes.func,\n    onSelect: PropTypes.func,\n};\n\nFilterDialog.contextTypes = {\n    d2: PropTypes.object,\n};\n\nexport default FilterDialog;\n","export const SET_ACTIVE_MODAL_DIMENSION = 'SET_ACTIVE_MODAL_DIMENSION';\nexport const CLEAR_ACTIVE_MODAL_DIMENSION = 'CLEAR_ACTIVE_MODAL_DIMENSION';\n\nexport const DEFAULT_STATE_ACTIVE_MODAL_DIMENSION = {};\n\nexport default (state = DEFAULT_STATE_ACTIVE_MODAL_DIMENSION, action) => {\n    switch (action.type) {\n        case SET_ACTIVE_MODAL_DIMENSION: {\n            return action.value;\n        }\n        case CLEAR_ACTIVE_MODAL_DIMENSION: {\n            return DEFAULT_STATE_ACTIVE_MODAL_DIMENSION;\n        }\n        default:\n            return state;\n    }\n};\n\nexport const sGetActiveModalDimension = state => state.activeModalDimension;\n","import {\n    SET_ACTIVE_MODAL_DIMENSION,\n    CLEAR_ACTIVE_MODAL_DIMENSION,\n} from '../reducers/activeModalDimension';\n\nexport const acSetActiveModalDimension = value => ({\n    type: SET_ACTIVE_MODAL_DIMENSION,\n    value,\n});\n\nexport const acClearActiveModalDimension = () => ({\n    type: CLEAR_ACTIVE_MODAL_DIMENSION,\n});\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport Popover from '@material-ui/core/Popover';\nimport ArrowDropDownIcon from '@material-ui/icons/ArrowDropDown';\nimport { withTheme } from '@material-ui/core/styles';\n\nimport i18n from '@dhis2/d2-i18n';\nimport { DimensionsPanel } from '@dhis2/analytics';\n\nimport { Button } from '@dhis2/ui-core';\nimport FilterDialog from './FilterDialog';\n\nimport { sGetSettingsDisplayNameProperty } from '../../reducers/settings';\nimport { sGetActiveModalDimension } from '../../reducers/activeModalDimension';\nimport { sGetDimensions } from '../../reducers/dimensions';\nimport { sGetFiltersKeys } from '../../reducers/itemFilters';\nimport { sGetEditItemFiltersRoot } from '../../reducers/editItemFilters';\nimport { acAddItemFilter, acRemoveItemFilter } from '../../actions/itemFilters';\nimport {\n    acRemoveEditItemFilter,\n    acSetEditItemFilters,\n} from '../../actions/editItemFilters';\nimport {\n    acClearActiveModalDimension,\n    acSetActiveModalDimension,\n} from '../../actions/activeModalDimension';\n\nclass FilterSelector extends Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            anchorEl: null,\n        };\n    }\n\n    openPanel = (_, event) => {\n        this.setState({ anchorEl: event.currentTarget });\n    };\n\n    closePanel = () => {\n        this.setState({ anchorEl: null });\n    };\n\n    closeDialog = () => {\n        this.setState({ anchorEl: null });\n\n        this.props.clearActiveModalDimension();\n    };\n\n    selectDimension = id => {\n        this.props.setActiveModalDimension(\n            this.props.dimensions.find(dimension => dimension.id === id)\n        );\n    };\n\n    onSelectItems = ({ dimensionId, items }) => {\n        this.props.setEditItemFilters({\n            ...this.props.selectedItems,\n            [dimensionId]: items,\n        });\n    };\n\n    onDeselectItems = ({ dimensionId, itemIdsToRemove }) => {\n        const oldList = this.props.selectedItems[dimensionId] || [];\n        const newList = oldList.filter(\n            item => !itemIdsToRemove.includes(item.id)\n        );\n\n        if (newList.length) {\n            this.props.setEditItemFilters({\n                ...this.props.selectedItems,\n                [dimensionId]: newList,\n            });\n        } else {\n            this.props.removeEditItemFilter(dimensionId);\n        }\n    };\n\n    onReorderItems = ({ dimensionId, itemIds }) => {\n        const oldList = this.props.selectedItems[dimensionId] || [];\n        const reorderedList = itemIds.map(id =>\n            oldList.find(item => item.id === id)\n        );\n\n        this.props.setEditItemFilters({\n            ...this.props.selectedItems,\n            [dimensionId]: reorderedList,\n        });\n    };\n\n    saveFilter = id => {\n        const filterItems = this.props.selectedItems[id];\n\n        if (filterItems && filterItems.length) {\n            this.props.addItemFilter({\n                id,\n                value: [...filterItems],\n            });\n        } else {\n            this.props.removeItemFilter(id);\n        }\n\n        this.closeDialog();\n    };\n\n    render() {\n        const {\n            theme,\n            displayNameProperty,\n            dimension,\n            dimensions,\n            selectedDimensions,\n            selectedItems,\n        } = this.props;\n\n        return (\n            <>\n                <Button onClick={this.openPanel}>\n                    {i18n.t('Add filter')}\n                    <ArrowDropDownIcon />\n                </Button>\n                <Popover\n                    open={Boolean(this.state.anchorEl)}\n                    anchorEl={this.state.anchorEl}\n                    anchorOrigin={{ vertical: 'bottom', horizontal: 'left' }}\n                    onClose={this.closePanel}\n                    style={{\n                        height: '100%',\n                        fontFamily: theme.typography.fontFamily,\n                    }}\n                >\n                    <DimensionsPanel\n                        style={{ width: '320px' }}\n                        dimensions={dimensions}\n                        onDimensionClick={this.selectDimension}\n                        selectedIds={selectedDimensions}\n                    />\n                </Popover>\n                {dimension ? (\n                    <FilterDialog\n                        displayNameProperty={displayNameProperty}\n                        dimension={dimension}\n                        selectedItems={selectedItems[dimension.id] || []}\n                        onSelect={this.onSelectItems}\n                        onDeselect={this.onDeselectItems}\n                        onReorder={this.onReorderItems}\n                        onClose={this.closeDialog}\n                        onConfirm={this.saveFilter}\n                    />\n                ) : null}\n            </>\n        );\n    }\n}\n\nconst mapStateToProps = state => ({\n    displayNameProperty: sGetSettingsDisplayNameProperty(state),\n    dimension: sGetActiveModalDimension(state),\n    dimensions: sGetDimensions(state),\n    selectedDimensions: sGetFiltersKeys(state),\n    selectedItems: sGetEditItemFiltersRoot(state),\n});\n\nFilterSelector.propTypes = {\n    addItemFilter: PropTypes.func,\n    clearActiveModalDimension: PropTypes.func,\n    dimension: PropTypes.object,\n    dimensions: PropTypes.array,\n    displayNameProperty: PropTypes.string,\n    removeEditItemFilter: PropTypes.func,\n    removeItemFilter: PropTypes.func,\n    selectedDimensions: PropTypes.array,\n    selectedItems: PropTypes.object,\n    setActiveModalDimension: PropTypes.func,\n    setEditItemFilters: PropTypes.func,\n    theme: PropTypes.object,\n};\n\nexport default connect(\n    mapStateToProps,\n    {\n        clearActiveModalDimension: acClearActiveModalDimension,\n        setActiveModalDimension: acSetActiveModalDimension,\n        addItemFilter: acAddItemFilter,\n        removeItemFilter: acRemoveItemFilter,\n        removeEditItemFilter: acRemoveEditItemFilter,\n        setEditItemFilters: acSetEditItemFilters,\n    }\n)(withTheme()(FilterSelector));\n","import React, { Component } from 'react';\nimport InfoOutlineIcon from '@material-ui/icons/InfoOutlined';\nimport { colors } from '@dhis2/ui-core';\nimport PropTypes from 'prop-types';\n\nclass Info extends Component {\n    show = false;\n\n    toggle() {\n        this.show = !this.show;\n        return this.show;\n    }\n\n    render() {\n        return (\n            <div onClick={() => this.props.onClick(this.toggle())}>\n                <InfoOutlineIcon style={{ fill: colors.grey600 }} />\n            </div>\n        );\n    }\n}\n\nInfo.propTypes = {\n    onClick: PropTypes.func,\n};\n\nexport default Info;\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { Link } from 'react-router-dom';\nimport i18n from '@dhis2/d2-i18n';\nimport SharingDialog from '@dhis2/d2-ui-sharing-dialog';\nimport Star from '@material-ui/icons/Star';\nimport StarBorder from '@material-ui/icons/StarBorder';\n\nimport { orObject } from '../../modules/util';\nimport { tStarDashboard } from '../../actions/dashboards';\nimport { acSetSelectedShowDescription } from '../../actions/selected';\nimport FilterSelector from '../ItemFilter/FilterSelector';\nimport { Button, colors } from '@dhis2/ui-core';\nimport Info from './Info';\nimport {\n    sGetSelectedId,\n    sGetSelectedShowDescription,\n} from '../../reducers/selected';\nimport {\n    sGetDashboardById,\n    sGetDashboardItems,\n} from '../../reducers/dashboards';\n\nimport classes from './styles/ViewTitleBar.module.css';\n\nconst NO_DESCRIPTION = i18n.t('No description');\n\nclass ViewTitleBar extends Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            sharingDialogIsOpen: false,\n        };\n    }\n\n    toggleSharingDialog = () =>\n        this.setState({ sharingDialogIsOpen: !this.state.sharingDialogIsOpen });\n\n    render() {\n        const {\n            id,\n            name,\n            description,\n            access,\n            style,\n            showDescription,\n            starred,\n            onStarClick,\n            onInfoClick,\n        } = this.props;\n\n        const titleStyle = Object.assign({}, style.title, {\n            cursor: 'default',\n            userSelect: 'text',\n            top: '7px',\n        });\n\n        const StarIcon = starred ? Star : StarBorder;\n\n        return (\n            <>\n                <div className={classes.titleBar}>\n                    <span style={titleStyle}>{name}</span>\n                    <div className={classes.actions}>\n                        <div\n                            className={classes.titleBarIcon}\n                            onClick={onStarClick}\n                        >\n                            <StarIcon style={{ fill: colors.grey600 }} />\n                        </div>\n                        <div className={classes.titleBarIcon}>\n                            <Info onClick={onInfoClick} />\n                        </div>\n                        <div style={{ marginLeft: '10px' }}>\n                            {access.update ? (\n                                <Link\n                                    className={classes.editLink}\n                                    to={`/${id}/edit`}\n                                >\n                                    <Button>{i18n.t('Edit')}</Button>\n                                </Link>\n                            ) : null}\n                            {access.manage ? (\n                                <span style={{ marginRight: '4px' }}>\n                                    <Button onClick={this.toggleSharingDialog}>\n                                        {i18n.t('Share')}\n                                    </Button>\n                                </span>\n                            ) : null}\n                            <span style={{ marginRight: '4px' }}>\n                                <FilterSelector />\n                            </span>\n                        </div>\n                    </div>\n                </div>\n                {showDescription ? (\n                    <div\n                        className=\"dashboard-description\"\n                        style={Object.assign(\n                            { paddingTop: '5px', paddingBottom: '5px' },\n                            style.description,\n                            !description ? { color: '#888' } : {}\n                        )}\n                    >\n                        {description || NO_DESCRIPTION}\n                    </div>\n                ) : null}\n                {id ? (\n                    <SharingDialog\n                        d2={this.context.d2}\n                        id={id}\n                        type=\"dashboard\"\n                        open={this.state.sharingDialogIsOpen}\n                        onRequestClose={this.toggleSharingDialog}\n                    />\n                ) : null}\n            </>\n        );\n    }\n}\n\nViewTitleBar.propTypes = {\n    access: PropTypes.object,\n    description: PropTypes.string,\n    id: PropTypes.string,\n    name: PropTypes.string,\n    showDescription: PropTypes.bool,\n    starred: PropTypes.bool,\n    style: PropTypes.object,\n    onInfoClick: PropTypes.func,\n    onStarClick: PropTypes.func,\n};\n\nViewTitleBar.defaultProps = {\n    name: '',\n    description: '',\n    starred: false,\n    showDescription: false,\n    onInfoClick: null,\n};\n\nViewTitleBar.contextTypes = {\n    d2: PropTypes.object,\n};\n\nconst mapStateToProps = state => {\n    const id = sGetSelectedId(state);\n    const dashboard = orObject(sGetDashboardById(state, id));\n\n    return {\n        id,\n        name: dashboard.displayName,\n        description: dashboard.displayDescription,\n        dashboardItems: sGetDashboardItems(state),\n        showDescription: sGetSelectedShowDescription(state),\n        starred: dashboard.starred,\n        access: orObject(dashboard.access),\n    };\n};\n\nconst mergeProps = (stateProps, dispatchProps, ownProps) => {\n    const { id, starred, showDescription } = stateProps;\n    const { dispatch } = dispatchProps;\n\n    return {\n        ...stateProps,\n        ...ownProps,\n        onStarClick: () => dispatch(tStarDashboard(id, !starred)),\n        onInfoClick: () =>\n            dispatch(acSetSelectedShowDescription(!showDescription)),\n    };\n};\n\nexport default connect(\n    mapStateToProps,\n    null,\n    mergeProps\n)(ViewTitleBar);\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport { colors } from '@dhis2/ui-core';\nimport EditTitleBar from './EditTitleBar';\nimport ViewTitleBar from './ViewTitleBar';\n\nimport './TitleBar.css';\n\nconst style = {\n    title: {\n        position: 'relative',\n        fontSize: 21,\n        fontWeight: 500,\n        color: colors.black,\n        minWidth: 50,\n    },\n    description: {\n        fontSize: 14,\n        color: colors.grey800,\n    },\n};\n\nconst TitleBar = ({ edit }) => {\n    return (\n        <div\n            className=\"titlebar-wrapper\"\n            style={{\n                padding: '20px 15px 5px 10px',\n            }}\n        >\n            {edit ? (\n                <EditTitleBar style={style} />\n            ) : (\n                <ViewTitleBar style={style} />\n            )}\n        </div>\n    );\n};\n\nTitleBar.propTypes = {\n    edit: PropTypes.bool,\n};\n\nexport default TitleBar;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nimport i18n from '@dhis2/d2-i18n';\n\nimport * as pluginManager from './plugin';\nimport { getBaseUrl, orObject } from '../../../modules/util';\nimport { getGridItemDomId } from '../../ItemGrid/gridUtil';\n\nconst pluginCredentials = d2 => {\n    return {\n        baseUrl: getBaseUrl(d2),\n        auth: d2.Api.getApi().defaultHeaders.Authorization,\n    };\n};\n\nclass DefaultPlugin extends Component {\n    pluginCredentials = null;\n\n    constructor(props, context) {\n        super(props);\n\n        this.d2 = context.d2;\n    }\n\n    shouldPluginReload = prevProps => {\n        // TODO - fix this hack, to handle bug with multiple\n        // rerendering while switching between dashboards.\n        //\n        // To determine if the rendering is happening because of a\n        // dashboard switch, check if the item reference has changed.\n        const reloadAllowed = this.props.item === prevProps.item;\n\n        const filtersChanged = prevProps.itemFilters !== this.props.itemFilters;\n        const vis = orObject(this.props.visualization);\n        const prevVis = orObject(prevProps.visualization);\n        const visChanged =\n            vis.id !== prevVis.id || vis.activeType !== prevVis.activeType;\n\n        return reloadAllowed && (visChanged || filtersChanged);\n    };\n\n    reloadPlugin = prevProps => {\n        if (\n            pluginManager.pluginIsAvailable(\n                this.props.item,\n                this.props.visualization\n            ) &&\n            this.shouldPluginReload(prevProps)\n        ) {\n            const prevVis = orObject(prevProps.visualization);\n            const currentVis = this.props.visualization;\n\n            const useActiveType =\n                currentVis.activeType !== prevVis.activeType ||\n                currentVis.activeType !== this.props.item.type;\n\n            if (\n                useActiveType ||\n                this.props.itemFilters !== prevProps.itemFilters\n            ) {\n                pluginManager.unmount(\n                    this.props.item,\n                    prevVis.activeType || this.props.item.type\n                );\n\n                pluginManager.load(this.props.item, this.props.visualization, {\n                    credentials: this.pluginCredentials,\n                    activeType: useActiveType ? currentVis.activeType : null,\n                });\n            }\n        }\n    };\n\n    componentDidMount() {\n        this.pluginCredentials = pluginCredentials(this.d2);\n\n        if (\n            pluginManager.pluginIsAvailable(\n                this.props.item,\n                this.props.visualization\n            )\n        ) {\n            pluginManager.load(this.props.item, this.props.visualization, {\n                credentials: this.pluginCredentials,\n                activeType: !this.props.editMode ? this.getActiveType() : null,\n            });\n        }\n    }\n\n    componentDidUpdate(prevProps) {\n        this.reloadPlugin(prevProps);\n    }\n\n    getActiveType = () =>\n        this.props.visualization.activeType || this.props.item.type;\n\n    render() {\n        const { classes, item, visualization, style } = this.props;\n        const pluginIsAvailable = pluginManager.pluginIsAvailable(\n            item,\n            visualization\n        );\n\n        return pluginIsAvailable ? (\n            <div id={getGridItemDomId(item.id)} style={style} />\n        ) : (\n            <div className={classes.textDiv}>\n                {i18n.t('Unable to load the plugin for this item')}\n            </div>\n        );\n    }\n}\n\nDefaultPlugin.contextTypes = {\n    d2: PropTypes.object,\n};\n\nDefaultPlugin.propTypes = {\n    classes: PropTypes.object,\n    editMode: PropTypes.bool,\n    item: PropTypes.object,\n    itemFilters: PropTypes.object,\n    style: PropTypes.object,\n    visualization: PropTypes.object,\n};\n\nDefaultPlugin.defaultProps = {\n    style: {},\n    item: {},\n    itemFilters: {},\n    visualization: {},\n};\n\nexport default DefaultPlugin;\n","import React from 'react';\nimport { colors } from '@dhis2/ui-core';\n\nexport const ThreeDots = () => (\n    <svg\n        height=\"18\"\n        viewBox=\"0 0 18 18\"\n        width=\"18\"\n        xmlns=\"http://www.w3.org/2000/svg\"\n    >\n        <path\n            d=\"m4 7.5c-.83 0-1.5.67-1.5 1.5s.67 1.5 1.5 1.5 1.5-.67 1.5-1.5-.67-1.5-1.5-1.5zm10 0c-.83 0-1.5.67-1.5 1.5s.67 1.5 1.5 1.5 1.5-.67 1.5-1.5-.67-1.5-1.5-1.5zm-5 0c-.83 0-1.5.67-1.5 1.5s.67 1.5 1.5 1.5 1.5-.67 1.5-1.5-.67-1.5-1.5-1.5z\"\n            fill=\"#6e7a8a\"\n        />\n    </svg>\n);\n\nexport const SpeechBubble = () => (\n    <svg\n        height=\"20\"\n        viewBox=\"0 0 20 20\"\n        width=\"20\"\n        xmlns=\"http://www.w3.org/2000/svg\"\n        style={{ margin: '3px 2px 0 2px' }} // Temporary fix for the misaligned icon, should be removed once the icon is replaced\n    >\n        <path\n            d=\"m20 2h-16c-1.1 0-1.99.9-1.99 2l-.01 18 4-4h14c1.1 0 2-.9 2-2v-12c0-1.1-.9-2-2-2zm-2 12h-12v-2h12zm0-3h-12v-2h12zm0-3h-12v-2h12z\"\n            fill=\"#6e7a8a\"\n            fillRule=\"evenodd\"\n            transform=\"translate(-2 -2)\"\n        />\n    </svg>\n);\n\nexport const Warning = () => (\n    <svg\n        xmlns=\"http://www.w3.org/2000/svg\"\n        height=\"24\"\n        viewBox=\"0 0 24 24\"\n        width=\"24\"\n        fill={colors.grey600}\n    >\n        <path d=\"M0 0h24v24H0z\" fill=\"none\" />\n        <path d=\"M1 21h22L12 2 1 21zm12-3h-2v-2h2v2zm0-4h-2v-4h2v4z\" />\n    </svg>\n);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport i18n from '@dhis2/d2-i18n';\nimport { Warning } from './assets/icons';\n\nimport classes from './styles/FatalErrorBoundary.module.css';\n\nclass FatalErrorBoundary extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            errorFound: false,\n        };\n    }\n    componentDidCatch(error, info) {\n        this.setState({\n            errorFound: true,\n        });\n        console.log('error: ', error);\n        console.log('info: ', info);\n    }\n    render() {\n        if (this.state.errorFound) {\n            return (\n                <p className={classes.container}>\n                    <span className={classes.icon}>\n                        <Warning />\n                    </span>\n                    <span className={classes.message}>\n                        {i18n.t(\n                            'There was a problem loading this dashboard item'\n                        )}\n                    </span>\n                </p>\n            );\n        }\n        return this.props.children;\n    }\n}\n\nFatalErrorBoundary.propTypes = {\n    children: PropTypes.node,\n};\n\nexport default FatalErrorBoundary;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport i18n from '@dhis2/d2-i18n';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport { colors } from '@dhis2/ui-core';\n\nimport classes from './styles/DeleteItemButton.module.css';\n\nconst DeleteItemButton = ({ onClick }) => (\n    <button\n        type=\"button\"\n        className={classes.deleteItemButton}\n        onClick={onClick}\n        title={i18n.t(`Delete item`)}\n    >\n        <DeleteIcon style={{ fill: colors.red500 }} />\n    </button>\n);\n\nDeleteItemButton.propTypes = {\n    onClick: PropTypes.func,\n};\n\nexport default DeleteItemButton;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\n\nimport { sGetIsEditing } from '../../reducers/editDashboard';\nimport { acRemoveDashboardItem } from '../../actions/editDashboard';\nimport DeleteItemButton from './DeleteItemButton';\n\nimport classes from './styles/ItemHeader.module.css';\n\n// This is the margin-top + margin-bottom defined in the css file\nexport const HEADER_MARGIN_HEIGHT = 12;\n\nconst ItemHeader = props => {\n    const {\n        title,\n        editMode,\n        actionButtons,\n        itemId,\n        acRemoveDashboardItem,\n        forwardedRef,\n    } = props;\n\n    const handleDeleteItem = () => acRemoveDashboardItem(itemId);\n\n    return (\n        <div className={classes.itemHeaderWrap} ref={forwardedRef}>\n            <p className={classes.itemTitle}>{title}</p>\n            {editMode ? (\n                <div className={classes.itemActionsWrap}>\n                    <DeleteItemButton onClick={handleDeleteItem} />\n                </div>\n            ) : (\n                actionButtons && (\n                    <div className={classes.itemActionsWrap}>\n                        {actionButtons}\n                    </div>\n                )\n            )}\n        </div>\n    );\n};\n\nItemHeader.propTypes = {\n    acRemoveDashboardItem: PropTypes.func,\n    actionButtons: PropTypes.node,\n    editMode: PropTypes.bool,\n    forwardedRef: PropTypes.object,\n    itemId: PropTypes.string,\n    title: PropTypes.string,\n};\n\nItemHeader.defaultProps = {\n    forwardedRef: {},\n};\n\nconst mapStateToProps = state => ({\n    editMode: sGetIsEditing(state),\n});\n\nconst mapDispatchToProps = {\n    acRemoveDashboardItem,\n};\n\nconst ConnectedItemHeader = connect(\n    mapStateToProps,\n    mapDispatchToProps\n)(ItemHeader);\n\n// TODO this is a false positive that is fixed in eslint-plugin-react v7.15\n// github.com/yannickcr/eslint-plugin-react/blob/master/CHANGELOG.md\n/* eslint-disable react/display-name */\nexport default React.forwardRef((props, ref) => (\n    <ConnectedItemHeader {...props} forwardedRef={ref} />\n));\n/* eslint-enable react/display-name */\n","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\n\nimport {\n    isSingleValue,\n    isYearOverYear,\n    VIS_TYPE_GAUGE,\n    VIS_TYPE_PIE,\n} from '@dhis2/analytics';\nimport { Button, Menu, MenuItem, Divider, colors } from '@dhis2/ui-core';\nimport i18n from '@dhis2/d2-i18n';\nimport Popover from '@material-ui/core/Popover';\nimport TableIcon from '@material-ui/icons/ViewList';\nimport ChartIcon from '@material-ui/icons/InsertChart';\nimport MapIcon from '@material-ui/icons/Public';\nimport LaunchIcon from '@material-ui/icons/Launch';\n\nimport { ThreeDots, SpeechBubble } from './assets/icons';\nimport { pluginIsAvailable, getLink } from './plugin';\nimport {\n    CHART,\n    MAP,\n    REPORT_TABLE,\n    EVENT_CHART,\n    EVENT_REPORT,\n    isTrackerDomainType,\n    hasMapView,\n    getAppName,\n} from '../../../modules/itemTypes';\n\nconst iconFill = { fill: colors.grey600 };\n\nconst ItemHeaderButtons = props => {\n    const [anchorEl, setAnchorEl] = useState(null);\n\n    const { item, visualization, onSelectActiveType, d2, activeType } = props;\n\n    const isTrackerType = isTrackerDomainType(item.type);\n\n    const onViewTable = () => {\n        handleClose();\n        onSelectActiveType(isTrackerType ? EVENT_REPORT : REPORT_TABLE);\n    };\n\n    const onViewChart = () => {\n        handleClose();\n        onSelectActiveType(isTrackerType ? EVENT_CHART : CHART);\n    };\n\n    const onViewMap = () => {\n        handleClose();\n        onSelectActiveType(MAP);\n    };\n\n    const itemHasMapView = () => hasMapView(item.type);\n\n    const handleMenuClick = (_, event) => setAnchorEl(event.currentTarget);\n\n    const handleInterpretationClick = () => {\n        props.onToggleFooter();\n        if (anchorEl !== null) {\n            handleClose();\n        }\n    };\n\n    const handleClose = () => setAnchorEl(null);\n\n    const type = visualization.type || item.type;\n    const canViewAs =\n        !isSingleValue(type) &&\n        !isYearOverYear(type) &&\n        type !== VIS_TYPE_GAUGE &&\n        type !== VIS_TYPE_PIE;\n\n    const interpretationMenuLabel = props.activeFooter\n        ? i18n.t(`Hide interpretations and details`)\n        : i18n.t(`Show interpretations and details`);\n\n    const ViewAsMenuItems = () => (\n        <>\n            {activeType !== CHART && activeType !== EVENT_CHART && (\n                <MenuItem\n                    dense\n                    label={i18n.t('View as Chart')}\n                    onClick={onViewChart}\n                    icon={<ChartIcon style={iconFill} />}\n                />\n            )}\n            {activeType !== REPORT_TABLE && activeType !== EVENT_REPORT && (\n                <MenuItem\n                    dense\n                    label={i18n.t('View as Table')}\n                    onClick={onViewTable}\n                    icon={<TableIcon style={iconFill} />}\n                />\n            )}\n            {itemHasMapView() && activeType !== MAP && (\n                <MenuItem\n                    dense\n                    label={i18n.t('View as Map')}\n                    onClick={onViewMap}\n                    icon={<MapIcon style={iconFill} />}\n                />\n            )}\n        </>\n    );\n\n    return pluginIsAvailable(item, visualization) ? (\n        <>\n            <Button small secondary onClick={handleMenuClick}>\n                <ThreeDots />\n            </Button>\n            {anchorEl && (\n                <Popover\n                    open={Boolean(anchorEl)}\n                    onClose={handleClose}\n                    anchorEl={anchorEl}\n                >\n                    <Menu>\n                        {canViewAs && (\n                            <>\n                                <ViewAsMenuItems />\n                                <Divider />\n                            </>\n                        )}\n                        <MenuItem\n                            dense\n                            icon={<LaunchIcon style={{ fill: '#6e7a8a' }} />}\n                            label={i18n.t('Open in {{appName}} app', {\n                                appName: getAppName(item.type),\n                            })}\n                            href={getLink(item, d2)}\n                            target=\"_blank\"\n                        />\n                        <MenuItem\n                            dense\n                            icon={<SpeechBubble />}\n                            label={interpretationMenuLabel}\n                            onClick={handleInterpretationClick}\n                        />\n                    </Menu>\n                </Popover>\n            )}\n        </>\n    ) : null;\n};\n\nItemHeaderButtons.propTypes = {\n    activeFooter: PropTypes.bool,\n    activeType: PropTypes.string,\n    d2: PropTypes.object,\n    item: PropTypes.object,\n    visualization: PropTypes.object,\n    onSelectActiveType: PropTypes.func,\n    onToggleFooter: PropTypes.func,\n};\n\nexport default ItemHeaderButtons;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { colors } from '@dhis2/ui-core';\nimport { getId } from './plugin';\nimport InterpretationsComponent from '@dhis2/d2-ui-interpretations';\n\nconst style = {\n    scrollContainer: {\n        overflowY: 'auto',\n        height: '340px',\n    },\n    line: {\n        margin: '-1px 0px 0px',\n        height: '1px',\n        border: 'none',\n        backgroundColor: colors.grey100,\n    },\n};\n\nclass ItemFooter extends Component {\n    render() {\n        const objectId = getId(this.props.item);\n\n        return (\n            <div className=\"dashboard-item-footer\">\n                <hr style={style.line} />\n                <div style={style.scrollContainer}>\n                    <InterpretationsComponent\n                        d2={this.context.d2}\n                        item={this.props.item}\n                        type={this.props.item.type.toLowerCase()}\n                        id={objectId}\n                        appName=\"dashboard\"\n                    />\n                </div>\n            </div>\n        );\n    }\n}\n\nItemFooter.contextTypes = {\n    d2: PropTypes.object.isRequired,\n};\n\nItemFooter.propTypes = {\n    item: PropTypes.object.isRequired,\n};\n\nexport default ItemFooter;\n","// Note that this ignores discrepancies in 'this', so shouldn't be used with bound functions\n// This is useful instead of lodash/memoize when we only need to memoize a single value\n// Inspiration: https://github.com/alexreardon/memoize-one\n\nconst memoizeOne = fn => {\n    let lastArgs = undefined;\n    let lastValue = undefined;\n\n    return (...args) => {\n        if (\n            lastArgs &&\n            args.length === lastArgs.length &&\n            args.every((arg, i) => arg === lastArgs[i])\n        ) {\n            return lastValue;\n        }\n        lastArgs = args;\n        lastValue = fn(...args);\n        return lastValue;\n    };\n};\n\nexport default memoizeOne;\n","import React from 'react';\nimport CircularProgress from '@material-ui/core/CircularProgress';\n\nimport classes from './styles/LoadingMask.module.css';\n\nfunction CircularIndeterminate() {\n    return (\n        <div className={classes.outer}>\n            <CircularProgress className={classes.progress} />\n        </div>\n    );\n}\n\nexport default CircularIndeterminate;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport uniqueId from 'lodash/uniqueId';\nimport VisualizationPlugin from '@dhis2/data-visualizer-plugin';\nimport i18n from '@dhis2/d2-i18n';\n\nimport DefaultPlugin from './DefaultPlugin';\nimport FatalErrorBoundary from './FatalErrorBoundary';\nimport ItemHeader, { HEADER_MARGIN_HEIGHT } from '../ItemHeader';\nimport ItemHeaderButtons from './ItemHeaderButtons';\nimport ItemFooter from './ItemFooter';\nimport * as pluginManager from './plugin';\nimport { sGetVisualization } from '../../../reducers/visualizations';\nimport { sGetItemFiltersRoot } from '../../../reducers/itemFilters';\nimport {\n    acAddVisualization,\n    acSetActiveVisualizationType,\n} from '../../../actions/visualizations';\nimport {\n    VISUALIZATION,\n    MAP,\n    CHART,\n    REPORT_TABLE,\n} from '../../../modules/itemTypes';\nimport memoizeOne from '../../../modules/memoizeOne';\n\nimport { getVisualizationConfig } from './plugin';\nimport LoadingMask from './LoadingMask';\nimport { ITEM_CONTENT_PADDING_BOTTOM } from '../../ItemGrid/ItemGrid';\n\nimport classes from './styles/Item.module.css';\n\nexport class Item extends Component {\n    state = {\n        showFooter: false,\n        configLoaded: false,\n        pluginIsLoaded: false,\n    };\n\n    constructor(props, context) {\n        super(props);\n\n        this.d2 = context.d2;\n\n        this.contentRef = React.createRef();\n        this.headerRef = React.createRef();\n\n        this.memoizedApplyFilters = memoizeOne(this.applyFilters);\n\n        this.memoizedGetVisualizationConfig = memoizeOne(\n            getVisualizationConfig\n        );\n\n        this.memoizedGetContentStyle = memoizeOne(this.getContentStyle);\n    }\n\n    async componentDidMount() {\n        this.props.onVisualizationLoaded(\n            // TODO do not call fetch on the pluginManager, do it here as the manager will eventually be removed...\n            await pluginManager.fetch(this.props.item)\n        );\n\n        this.setState({\n            configLoaded: true,\n        });\n    }\n\n    componentDidUpdate(prevProps, prevState) {\n        if (\n            prevState.pluginIsLoaded &&\n            (prevProps.visualization !== this.props.visualization ||\n                prevProps.itemFilters !== this.props.itemFilters)\n        ) {\n            this.setState({\n                pluginIsLoaded: false,\n            });\n        }\n    }\n\n    applyFilters = (visualization, filters) => {\n        if (!Object.keys(filters).length) {\n            return visualization;\n        }\n\n        // deep clone objects in filters to avoid changing the visualization in the Redux store\n        const visRows = visualization.rows.map(obj => ({ ...obj }));\n        const visColumns = visualization.columns.map(obj => ({ ...obj }));\n        const visFilters = visualization.filters.map(obj => ({ ...obj }));\n\n        Object.keys(filters).forEach(dimensionId => {\n            if (filters[dimensionId]) {\n                let dimensionFound = false;\n\n                [visRows, visColumns, visFilters].forEach(dimensionObjects =>\n                    dimensionObjects\n                        .filter(obj => obj.dimension === dimensionId)\n                        .forEach(obj => {\n                            dimensionFound = true;\n                            obj.items = filters[dimensionId];\n                        })\n                );\n\n                // add dimension to filters if not already present elsewhere\n                if (!dimensionFound) {\n                    visFilters.push({\n                        dimension: dimensionId,\n                        items: filters[dimensionId],\n                    });\n                }\n            }\n        });\n\n        return {\n            ...visualization,\n            rows: visRows,\n            columns: visColumns,\n            filters: visFilters,\n        };\n    };\n\n    getUniqueKey = memoizeOne(() => uniqueId());\n\n    pluginCredentials = null;\n\n    getPluginComponent = () => {\n        const activeType = this.getActiveType();\n        const visualization = this.memoizedGetVisualizationConfig(\n            this.props.visualization,\n            this.props.item.type,\n            activeType\n        );\n\n        if (!visualization) {\n            return (\n                <div className={classes.textDiv}>\n                    {i18n.t('No data to display')}\n                </div>\n            );\n        }\n\n        const calculatedHeight =\n            this.props.item.originalHeight -\n            this.headerRef.current.clientHeight -\n            HEADER_MARGIN_HEIGHT -\n            ITEM_CONTENT_PADDING_BOTTOM;\n\n        const props = {\n            ...this.props,\n            visualization,\n            style: this.memoizedGetContentStyle(\n                calculatedHeight,\n                this.contentRef ? this.contentRef.offsetHeight : null,\n                this.props.editMode\n            ),\n        };\n\n        switch (activeType) {\n            case VISUALIZATION:\n            case CHART:\n            case REPORT_TABLE: {\n                return (\n                    <>\n                        {!this.state.pluginIsLoaded ? (\n                            <div className={classes.loadingCover}>\n                                <LoadingMask />\n                            </div>\n                        ) : null}\n                        <VisualizationPlugin\n                            d2={this.d2}\n                            visualization={this.memoizedApplyFilters(\n                                visualization,\n                                props.itemFilters\n                            )}\n                            onLoadingComplete={this.onLoadingComplete}\n                            forDashboard={true}\n                            style={props.style}\n                        />\n                    </>\n                );\n            }\n            case MAP: {\n                if (props.item.type === MAP) {\n                    // apply filters only to thematic and event layers\n                    // for maps AO\n                    const mapViews = props.visualization.mapViews.map(obj => {\n                        if (\n                            obj.layer.includes('thematic') ||\n                            obj.layer.includes('event')\n                        ) {\n                            return this.memoizedApplyFilters(\n                                obj,\n                                props.itemFilters\n                            );\n                        }\n\n                        return obj;\n                    });\n\n                    props.visualization = {\n                        ...props.visualization,\n                        mapViews,\n                    };\n                } else {\n                    // this is the case of a non map AO passed to the maps plugin\n                    // due to a visualization type switch in dashboard item\n                    // maps plugin takes care of converting the AO to a suitable format\n                    props.visualization = this.memoizedApplyFilters(\n                        props.visualization,\n                        props.itemFilters\n                    );\n                }\n\n                return <DefaultPlugin {...props} />;\n            }\n            default: {\n                props.visualization = this.memoizedApplyFilters(\n                    props.visualization,\n                    props.itemFilters\n                );\n\n                return <DefaultPlugin {...props} />;\n            }\n        }\n    };\n\n    onLoadingComplete = () => {\n        this.setState({\n            pluginIsLoaded: true,\n        });\n    };\n\n    onToggleFooter = () => {\n        this.setState(\n            { showFooter: !this.state.showFooter },\n            this.props.onToggleItemExpanded(this.props.item.id)\n        );\n    };\n\n    onSelectActiveType = type => {\n        if (type === this.getActiveType()) {\n            return;\n        }\n\n        pluginManager.unmount(this.props.item, this.getActiveType());\n\n        this.props.onSelectActiveType(this.props.visualization.id, type);\n    };\n\n    getActiveType = () =>\n        this.props.visualization.activeType || this.props.item.type;\n\n    pluginIsAvailable = () =>\n        pluginManager.pluginIsAvailable(\n            this.props.item,\n            this.props.visualization\n        );\n\n    getContentStyle = (calculatedHeight, measuredHeight, editMode) => {\n        const height = editMode\n            ? measuredHeight || calculatedHeight\n            : calculatedHeight;\n\n        return { height };\n    };\n\n    render() {\n        const { item, editMode, itemFilters } = this.props;\n        const { showFooter } = this.state;\n\n        const actionButtons = (\n            <ItemHeaderButtons\n                item={item}\n                visualization={this.props.visualization}\n                onSelectActiveType={this.onSelectActiveType}\n                onToggleFooter={this.onToggleFooter}\n                d2={this.d2}\n                activeType={this.getActiveType()}\n                activeFooter={this.state.showFooter}\n            />\n        );\n\n        return (\n            <>\n                <ItemHeader\n                    title={pluginManager.getName(item)}\n                    itemId={item.id}\n                    actionButtons={actionButtons}\n                    ref={this.headerRef}\n                />\n                <FatalErrorBoundary>\n                    <div\n                        key={this.getUniqueKey(itemFilters)}\n                        className=\"dashboard-item-content\"\n                        ref={ref => (this.contentRef = ref)}\n                    >\n                        {this.state.configLoaded && this.getPluginComponent()}\n                    </div>\n                </FatalErrorBoundary>\n                {!editMode && showFooter ? <ItemFooter item={item} /> : null}\n            </>\n        );\n    }\n}\n\nItem.contextTypes = {\n    d2: PropTypes.object,\n};\n\nItem.propTypes = {\n    editMode: PropTypes.bool,\n    item: PropTypes.object,\n    itemFilters: PropTypes.object,\n    visualization: PropTypes.object,\n    onSelectActiveType: PropTypes.func,\n    onToggleItemExpanded: PropTypes.func,\n    onVisualizationLoaded: PropTypes.func,\n};\n\nItem.defaultProps = {\n    item: {},\n    editMode: false,\n    onToggleItemExpanded: Function.prototype,\n    itemFilters: {},\n    visualization: {},\n};\n\nconst mapStateToProps = (state, ownProps) => ({\n    itemFilters: sGetItemFiltersRoot(state),\n    visualization: sGetVisualization(\n        state,\n        pluginManager.extractFavorite(ownProps.item).id\n    ),\n});\n\nconst mapDispatchToProps = dispatch => ({\n    onVisualizationLoaded: visualization =>\n        dispatch(acAddVisualization(visualization)),\n    onSelectActiveType: (id, type, activeType) =>\n        dispatch(acSetActiveVisualizationType(id, type, activeType)),\n});\n\nexport default connect(\n    mapStateToProps,\n    mapDispatchToProps\n)(Item);\n","import React from 'react';\nimport { colors } from '@dhis2/ui-core';\n\nconst style = {\n    backgroundColor: colors.grey200,\n    border: 'none',\n    height: '1px',\n    margin: '0px 0px 5px 0px',\n};\n\nconst Line = () => <hr style={style} />;\n\nexport default Line;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport i18n from '@dhis2/d2-i18n';\n\nimport { sGetMessagesRoot } from '../../../reducers/messages';\nimport { formatDate } from '../../../modules/util';\nimport { colors } from '@dhis2/ui-core';\nimport ItemHeader from '../ItemHeader';\nimport Line from '../../../widgets/Line';\n\nimport './MessagesItem.css';\n\nconst PRIVATE = 'PRIVATE';\n\nconst messageTypes = {\n    [PRIVATE]: 'Private',\n    VALIDATION_RESULT: 'Validation',\n    TICKET: 'Ticket',\n    SYSTEM: 'System',\n};\n\nconst style = {\n    list: {\n        listStyleType: 'none',\n        paddingLeft: '0px',\n    },\n    seeAll: {\n        textAlign: 'center',\n        fontSize: '13px',\n        marginBottom: '5px',\n    },\n    sender: {\n        fontSize: '13px',\n        lineHeight: '15px',\n        margin: 0,\n        color: colors.grey800,\n    },\n    snippet: {\n        color: colors.grey800,\n        fontSize: '13px',\n        lineHeight: '15px',\n        maxHeight: '30px',\n        overflow: 'hidden',\n    },\n};\n\nclass MessagesItem extends Component {\n    state = {\n        uiLocale: '',\n    };\n\n    async componentDidMount() {\n        const uiLocale = await this.context.d2.currentUser.userSettings.get(\n            'keyUiLocale'\n        );\n\n        this.setState({ uiLocale });\n    }\n\n    getMessageHref = msg => {\n        const msgIdentifier = msg ? `#/${msg.messageType}/${msg.id}` : '';\n        return `${this.context.baseUrl}/dhis-web-messaging/${msgIdentifier}`;\n    };\n\n    getMessageSender = msg => {\n        const latestMsg = msg.messages.slice(-1)[0];\n        return latestMsg.sender ? latestMsg.sender.displayName : '';\n    };\n\n    getMessageItems = () => {\n        const editClass = !this.props.editMode ? 'view' : null;\n\n        return this.props.messages.map(msg => {\n            const redirectToMsg = () => {\n                if (!this.props.editMode) {\n                    document.location.href = this.getMessageHref(msg);\n                }\n            };\n\n            const sender =\n                msg.messageType === PRIVATE\n                    ? this.getMessageSender(msg)\n                    : messageTypes[msg.messageType];\n\n            const readClass = !msg.read ? 'unread' : null;\n            const latestMsg = msg.messages.slice(-1)[0];\n            const msgDate = latestMsg.lastUpdated;\n\n            return (\n                <li\n                    className={`message-item ${editClass}`}\n                    key={msg.id}\n                    onClick={redirectToMsg}\n                >\n                    <p className={`message-title ${readClass}`}>\n                        {msg.displayName} ({msg.messageCount})\n                    </p>\n                    <p style={style.sender}>\n                        {sender} - {formatDate(msgDate, this.state.uiLocale)}\n                    </p>\n                    <p style={style.snippet}>{latestMsg.text}</p>\n                </li>\n            );\n        });\n    };\n\n    render() {\n        return (\n            <>\n                <ItemHeader\n                    title={i18n.t('Messages')}\n                    itemId={this.props.item.id}\n                />\n                <Line />\n                {this.props.messages.length > 0 && (\n                    <div className=\"dashboard-item-content\">\n                        <ul style={style.list}>{this.getMessageItems()}</ul>\n                        <div style={style.seeAll}>\n                            <a href={this.getMessageHref()}>\n                                {i18n.t('See all messages')}\n                            </a>\n                        </div>\n                    </div>\n                )}\n            </>\n        );\n    }\n}\n\nMessagesItem.propTypes = {\n    editMode: PropTypes.bool,\n    item: PropTypes.object,\n    messages: PropTypes.array,\n};\n\nMessagesItem.contextTypes = {\n    d2: PropTypes.object,\n    baseUrl: PropTypes.string,\n};\n\nconst mapStateToProps = state => {\n    return {\n        messages: Object.values(sGetMessagesRoot(state)),\n    };\n};\n\nconst MessagesContainer = connect(\n    mapStateToProps,\n    null\n)(MessagesItem);\n\nexport default MessagesContainer;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport i18n from '@dhis2/d2-i18n';\nimport ItemHeader from '../ItemHeader';\nimport NotInterestedIcon from '@material-ui/icons/NotInterested';\n\nconst NotSupportedItem = props => (\n    <>\n        <ItemHeader\n            title={i18n.t('Item type \"{{type}}\" not supported', {\n                type: props.item.type,\n            })}\n            itemId={props.item.id}\n        />\n        <div\n            style={{\n                display: 'flex',\n                justifyContent: 'center',\n                alignItems: 'center',\n                height: '90%',\n            }}\n        >\n            <NotInterestedIcon\n                style={{ width: 100, height: 100, align: 'center' }}\n                color=\"disabled\"\n            />\n        </div>\n    </>\n);\n\nNotSupportedItem.propTypes = {\n    item: PropTypes.object,\n};\n\nexport default NotSupportedItem;\n","import React from 'react';\nimport { colors } from '@dhis2/ui-core';\nimport PropTypes from 'prop-types';\n\nconst DescriptionIcon = ({ className }) => (\n    <svg\n        className={className}\n        xmlns=\"http://www.w3.org/2000/svg\"\n        viewBox=\"0 0 24 24\"\n        fill={colors.grey500}\n    >\n        <path d=\"M0 0h24v24H0z\" fill=\"none\" />\n        <path d=\"M14 2H6c-1.1 0-1.99.9-1.99 2L4 20c0 1.1.89 2 1.99 2H18c1.1 0 2-.9 2-2V8l-6-6zm2 16H8v-2h8v2zm0-4H8v-2h8v2zm-3-5V3.5L18.5 9H13z\" />\n    </svg>\n);\n\nDescriptionIcon.propTypes = {\n    className: PropTypes.string,\n};\n\nexport default DescriptionIcon;\n","import React from 'react';\nimport { colors } from '@dhis2/ui-core';\nimport PropTypes from 'prop-types';\n\nconst DeleteIcon = ({ className }) => (\n    <svg\n        className={className}\n        xmlns=\"http://www.w3.org/2000/svg\"\n        width=\"18\"\n        height=\"18\"\n        viewBox=\"0 0 24 24\"\n        fill={colors.red500}\n    >\n        <path d=\"M6 19c0 1.1.9 2 2 2h8c1.1 0 2-.9 2-2V7H6v12zM19 4h-3.5l-1-1h-5l-1 1H5v2h14V4z\" />\n        <path d=\"M0 0h24v24H0z\" fill=\"none\" />\n    </svg>\n);\n\nDeleteIcon.propTypes = {\n    className: PropTypes.string,\n};\n\nexport default DeleteIcon;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { colors } from '@dhis2/ui-core';\nimport DescriptionIcon from '../../../icons/Description';\n\nimport DeleteIcon from '../../../icons/Delete';\nimport Line from '../../../widgets/Line';\nimport { itemTypeMap, getItemUrl } from '../../../modules/itemTypes';\nimport { orArray } from '../../../modules/util';\nimport { tRemoveListItemContent } from './actions';\nimport ItemHeader from '../ItemHeader';\nimport classes from './Item.module.css';\n\nconst getItemTitle = item => itemTypeMap[item.type].pluralTitle;\n\nconst getContentItems = item =>\n    orArray(item[itemTypeMap[item.type].propName]).filter(\n        (item, index, array) =>\n            array.findIndex(el => el.id === item.id) === index\n    );\n\nconst ListItem = (props, context) => {\n    const { item, editMode, tRemoveListItemContent } = props;\n    const contentItems = getContentItems(item);\n\n    const getLink = contentItem => {\n        const deleteButton = (\n            <button\n                className={classes.deletebutton}\n                onClick={() => tRemoveListItemContent(item, contentItem)}\n            >\n                <DeleteIcon className={classes.deleteicon} />\n            </button>\n        );\n\n        return (\n            <>\n                <a\n                    className={classes.link}\n                    style={{ color: colors.grey900 }}\n                    href={getItemUrl(item.type, contentItem, context.d2)}\n                >\n                    {contentItem.name}\n                </a>\n                {editMode ? deleteButton : null}\n            </>\n        );\n    };\n\n    return (\n        <>\n            <ItemHeader title={getItemTitle(item)} itemId={item.id} />\n            <Line />\n            <div className=\"dashboard-item-content\">\n                <ul className={classes.list}>\n                    {contentItems.map(contentItem => (\n                        <li className={classes.item} key={contentItem.id}>\n                            <DescriptionIcon className={classes.itemicon} />\n                            {getLink(contentItem)}\n                        </li>\n                    ))}\n                </ul>\n            </div>\n        </>\n    );\n};\n\nListItem.propTypes = {\n    editMode: PropTypes.bool,\n    item: PropTypes.object,\n    tRemoveListItemContent: PropTypes.func,\n};\n\nListItem.contextTypes = {\n    d2: PropTypes.object,\n};\n\nexport default connect(\n    null,\n    {\n        tRemoveListItemContent,\n    }\n)(ListItem);\n","import {\n    acUpdateDashboardItem,\n    acRemoveDashboardItem,\n} from '../../../actions/editDashboard';\nimport { itemTypeMap } from '../../../modules/itemTypes';\n\nexport const tRemoveListItemContent = (dashboardItem, content) => dispatch => {\n    const listItemType = itemTypeMap[dashboardItem.type].propName;\n\n    const newContent = dashboardItem[listItemType].filter(\n        item => item.id !== content.id\n    );\n\n    if (newContent.length) {\n        dashboardItem[listItemType] = newContent;\n        dispatch(acUpdateDashboardItem(dashboardItem));\n    } else {\n        dispatch(acRemoveDashboardItem(dashboardItem));\n    }\n};\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport i18n from '@dhis2/d2-i18n';\nimport PropTypes from 'prop-types';\n\nimport Input from '@material-ui/core/Input';\nimport {\n    Parser as RichTextParser,\n    Editor as RichTextEditor,\n} from '@dhis2/d2-ui-rich-text';\n\nimport { acUpdateDashboardItem } from '../../../actions/editDashboard';\nimport { sGetEditDashboardItems } from '../../../reducers/editDashboard';\nimport { sGetDashboardItems } from '../../../reducers/dashboards';\nimport ItemHeader from '../ItemHeader';\nimport Line from '../../../widgets/Line';\n\nconst style = {\n    textDiv: {\n        padding: '10px',\n        whiteSpace: 'pre-line',\n        lineHeight: '20px',\n    },\n    textField: {\n        fontSize: '14px',\n        fontStretch: 'normal',\n        width: '90%',\n        margin: '0 auto',\n        display: 'block',\n        lineHeight: '24px',\n    },\n    container: {\n        marginBottom: '20px',\n        marginTop: '20px',\n    },\n};\n\nconst TextItem = props => {\n    const { item, editMode, text, acUpdateDashboardItem } = props;\n\n    const onChangeText = event => {\n        const updatedItem = {\n            ...item,\n            text: event.target.value,\n        };\n\n        acUpdateDashboardItem(updatedItem);\n    };\n\n    const viewItem = () => {\n        const textDivStyle = Object.assign({}, style.textField, style.textDiv);\n        return (\n            <div className=\"dashboard-item-content\" style={style.container}>\n                <RichTextParser style={textDivStyle}>{text}</RichTextParser>\n            </div>\n        );\n    };\n\n    const editItem = () => {\n        return (\n            <>\n                <ItemHeader title={i18n.t('Text item')} itemId={item.id} />\n                <Line />\n                <div className=\"dashboard-item-content\">\n                    <RichTextEditor onEdit={onChangeText}>\n                        <Input\n                            value={text}\n                            multiline\n                            fullWidth\n                            style={style.textField}\n                            placeholder={i18n.t('Add text here')}\n                            onChange={onChangeText}\n                        />\n                    </RichTextEditor>\n                </div>\n            </>\n        );\n    };\n\n    return <>{editMode ? editItem() : viewItem()}</>;\n};\n\nconst mapStateToProps = (state, ownProps) => {\n    const items = ownProps.editMode\n        ? sGetEditDashboardItems(state)\n        : sGetDashboardItems(state);\n\n    const item = items.find(item => item.id === ownProps.item.id);\n\n    return {\n        text: item ? item.text : '',\n    };\n};\n\nTextItem.propTypes = {\n    acUpdateDashboardItem: PropTypes.func,\n    editMode: PropTypes.bool,\n    item: PropTypes.object,\n    text: PropTypes.string,\n};\n\nexport default connect(\n    mapStateToProps,\n    {\n        acUpdateDashboardItem,\n    }\n)(TextItem);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport NotInterestedIcon from '@material-ui/icons/NotInterested';\n\nimport { FILTER_ORG_UNIT } from '../../../actions/itemFilters';\nimport { sGetItemFiltersRoot } from '../../../reducers/itemFilters';\nimport ItemHeader from '../ItemHeader';\nimport Line from '../../../widgets/Line';\n\nconst getIframeSrc = (appDetails, item, itemFilters) => {\n    let iframeSrc = `${appDetails.launchUrl}?dashboardItemId=${item.id}`;\n\n    if (\n        itemFilters &&\n        itemFilters[FILTER_ORG_UNIT] &&\n        itemFilters[FILTER_ORG_UNIT].length\n    ) {\n        const ouIds = itemFilters[FILTER_ORG_UNIT].map(\n            ouPath => ouPath.split('/').slice(-1)[0]\n        );\n\n        iframeSrc += `&userOrgUnit=${ouIds.join(',')}`;\n    }\n\n    return iframeSrc;\n};\n\nconst AppItem = ({ item, itemFilters }, context) => {\n    let appDetails;\n\n    const appKey = item.appKey;\n\n    if (appKey) {\n        appDetails = context.d2.system.installedApps.find(\n            app => app.key === appKey\n        );\n    }\n\n    return appDetails && appDetails.name && appDetails.launchUrl ? (\n        <>\n            <ItemHeader title={appDetails.name} itemId={item.id} />\n            <Line />\n            <iframe\n                title={appDetails.name}\n                src={getIframeSrc(appDetails, item, itemFilters)}\n                className=\"dashboard-item-content\"\n                style={{ border: 'none' }}\n            />\n        </>\n    ) : (\n        <>\n            <ItemHeader title={`${appKey} app not found`} />\n            <Line />\n            <div\n                className=\"dashboard-item-content\"\n                style={{\n                    display: 'flex',\n                    justifyContent: 'center',\n                    alignItems: 'center',\n                    height: '90%',\n                }}\n            >\n                <NotInterestedIcon\n                    color=\"disabled\"\n                    disabled\n                    style={{ width: 100, height: 100, align: 'center' }}\n                />\n            </div>\n        </>\n    );\n};\n\nAppItem.propTypes = {\n    item: PropTypes.object,\n    itemFilters: PropTypes.object,\n};\n\nAppItem.contextTypes = {\n    d2: PropTypes.object,\n};\n\nconst mapStateToProps = state => ({\n    itemFilters: sGetItemFiltersRoot(state),\n});\n\nexport default connect(mapStateToProps)(AppItem);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport i18n from '@dhis2/d2-i18n';\n\nimport { colors } from '@dhis2/ui-core';\nimport ItemHeader from '../ItemHeader';\n\nconst style = {\n    margin: '21px 28px',\n    fontSize: '14px',\n    lineHeight: '18px',\n    color: colors.grey600,\n};\n\nconst SpacerItem = props => {\n    return (\n        <>\n            <ItemHeader title={i18n.t('Spacer')} itemId={props.item.id} />\n            <p style={style}>\n                {i18n.t(\n                    'Use a spacer to create empty vertical space between other dashboard items.'\n                )}\n            </p>\n        </>\n    );\n};\n\nSpacerItem.propTypes = {\n    item: PropTypes.object,\n};\n\nexport default SpacerItem;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport VisualizationItem from './VisualizationItem/Item';\nimport MessagesItem from './MessagesItem/Item';\nimport NotSupportedItem from './NotSupportedItem/Item';\nimport ListItem from './ListItem/Item';\nimport TextItem from './TextItem/Item';\nimport AppItem from './AppItem/Item';\nimport SpacerItem from './SpacerItem/Item';\nimport {\n    APP,\n    VISUALIZATION,\n    REPORT_TABLE,\n    CHART,\n    MAP,\n    EVENT_CHART,\n    EVENT_REPORT,\n    MESSAGES,\n    REPORTS,\n    RESOURCES,\n    USERS,\n    TEXT,\n    SPACER,\n} from '../../modules/itemTypes';\nimport { DEFAULT_STATE_ITEM_FILTERS } from '../../reducers/itemFilters';\n\nconst getGridItem = type => {\n    switch (type) {\n        case VISUALIZATION:\n        case REPORT_TABLE:\n        case CHART:\n        case MAP:\n        case EVENT_CHART:\n        case EVENT_REPORT:\n            return VisualizationItem;\n        case MESSAGES:\n            return MessagesItem;\n        case REPORTS:\n        case RESOURCES:\n        case USERS:\n            return ListItem;\n        case TEXT:\n            return TextItem;\n        case SPACER:\n            return SpacerItem;\n        case APP:\n            return AppItem;\n        default:\n            return NotSupportedItem;\n    }\n};\n\nexport const Item = props => {\n    const GridItem = getGridItem(props.item.type);\n\n    return (\n        <GridItem\n            item={props.item}\n            editMode={props.editMode}\n            itemFilters={\n                props.editMode ? DEFAULT_STATE_ITEM_FILTERS : props.itemFilters\n            }\n            onToggleItemExpanded={props.onToggleItemExpanded}\n        />\n    );\n};\n\nItem.propTypes = {\n    editMode: PropTypes.bool,\n    item: PropTypes.object,\n    itemFilters: PropTypes.object,\n    onToggleItemExpanded: PropTypes.func,\n};\n","import React from 'react';\nimport { colors } from '@dhis2/ui-core';\nimport PropTypes from 'prop-types';\n\nexport const NoContentMessage = ({ text }) => (\n    <div\n        style={{\n            padding: '50px 10px',\n            textAlign: 'center',\n            fontSize: '15px',\n            fontWeight: 500,\n            color: colors.grey600,\n        }}\n    >\n        {text}\n    </div>\n);\n\nNoContentMessage.propTypes = {\n    text: PropTypes.string,\n};\n\nexport default NoContentMessage;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport debounce from 'lodash/debounce';\nimport pick from 'lodash/pick';\n\nconst defaultDebounceMs = 100;\nconst defaultBufferFactor = 0.25;\n\nclass ProgressiveLoadingContainer extends Component {\n    static propTypes = {\n        children: PropTypes.node.isRequired,\n        bufferFactor: PropTypes.number,\n        className: PropTypes.string,\n        debounceMs: PropTypes.number,\n        style: PropTypes.object,\n    };\n    static defaultProps = {\n        debounceMs: defaultDebounceMs,\n        bufferFactor: defaultBufferFactor,\n    };\n\n    state = {\n        shouldLoad: false,\n    };\n    containerRef = null;\n    shouldLoadHandler = null;\n\n    checkShouldLoad() {\n        const bufferPx = this.props.bufferFactor * window.innerHeight;\n\n        if (!this.containerRef) {\n            return;\n        }\n\n        const rect = this.containerRef.getBoundingClientRect();\n        if (\n            rect.bottom > -bufferPx &&\n            rect.top < window.innerHeight + bufferPx\n        ) {\n            this.setState({\n                shouldLoad: true,\n            });\n\n            this.removeHandler();\n        }\n    }\n\n    registerHandler() {\n        this.shouldLoadHandler = debounce(\n            () => this.checkShouldLoad(),\n            this.props.debounceMs\n        );\n\n        window.addEventListener('scroll', this.shouldLoadHandler);\n    }\n    removeHandler() {\n        window.removeEventListener('scroll', this.shouldLoadHandler);\n    }\n\n    componentDidMount() {\n        this.registerHandler();\n        this.checkShouldLoad();\n    }\n\n    componentWillUnmount() {\n        this.removeHandler();\n    }\n\n    render() {\n        const { children, className, style, ...props } = this.props;\n        const { shouldLoad } = this.state;\n\n        const eventProps = pick(props, [\n            'onMouseDown',\n            'onTouchStart',\n            'onMouseUp',\n            'onTouchEnd',\n        ]);\n\n        return (\n            <div\n                ref={ref => (this.containerRef = ref)}\n                style={style}\n                className={className}\n                {...eventProps}\n            >\n                {shouldLoad && children}\n            </div>\n        );\n    }\n}\n\nexport default ProgressiveLoadingContainer;\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport i18n from '@dhis2/d2-i18n';\nimport ReactGridLayout from 'react-grid-layout';\nimport { CircularLoader, ScreenCover } from '@dhis2/ui-core';\n\nimport {\n    acUpdateDashboardLayout,\n    acRemoveDashboardItem,\n} from '../../actions/editDashboard';\nimport { Item } from '../Item/Item';\nimport { resize as pluginResize } from '../Item/VisualizationItem/plugin';\nimport { isVisualizationType } from '../../modules/itemTypes';\nimport {\n    GRID_ROW_HEIGHT,\n    GRID_COMPACT_TYPE,\n    MARGIN,\n    getGridColumns,\n    hasShape,\n    onItemResize,\n} from './gridUtil';\nimport { orArray } from '../../modules/util';\n\nimport NoContentMessage from '../../widgets/NoContentMessage';\n\nimport 'react-grid-layout/css/styles.css';\nimport 'react-resizable/css/styles.css';\n\nimport './ItemGrid.css';\nimport { sGetSelectedId, sGetSelectedIsLoading } from '../../reducers/selected';\nimport {\n    sGetEditDashboardRoot,\n    sGetEditDashboardItems,\n} from '../../reducers/editDashboard';\nimport {\n    sGetDashboardById,\n    sGetDashboardItems,\n} from '../../reducers/dashboards';\nimport ProgressiveLoadingContainer from '../Item/ProgressiveLoadingContainer';\n\n// Component\n\nconst EXPANDED_HEIGHT = 17;\n// this is set in the .dashboard-item-content css\nexport const ITEM_CONTENT_PADDING_BOTTOM = 4;\n\nexport class ItemGrid extends Component {\n    state = {\n        expandedItems: {},\n    };\n\n    onToggleItemExpanded = clickedId => {\n        const isExpanded =\n            typeof this.state.expandedItems[clickedId] === 'boolean'\n                ? this.state.expandedItems[clickedId]\n                : false;\n\n        const expandedItems = { ...this.state.expandedItems };\n        expandedItems[clickedId] = !isExpanded;\n        this.setState({ expandedItems });\n    };\n\n    onRemoveItem = clickedId => {\n        this.props.acRemoveDashboardItem(clickedId);\n    };\n\n    componentWillReceiveProps(nextProps) {\n        if (nextProps.edit) {\n            this.setState({ expandedItems: {} });\n        }\n    }\n\n    onLayoutChange = newLayout => {\n        if (this.props.edit) {\n            this.props.acUpdateDashboardLayout(newLayout);\n        }\n    };\n\n    onResizeStop = (layout, oldItem, newItem) => {\n        onItemResize(newItem.i);\n\n        const dashboardItem = this.props.dashboardItems.find(\n            item => item.id === newItem.i\n        );\n\n        // call resize on the item component if it's a plugin type\n        if (dashboardItem && isVisualizationType(dashboardItem)) {\n            pluginResize(dashboardItem);\n        }\n    };\n\n    onRemoveItemWrapper = id => () => this.onRemoveItem(id);\n\n    adjustHeightForExpanded = dashboardItem => {\n        const expandedItem = this.state.expandedItems[dashboardItem.id];\n\n        if (expandedItem && expandedItem === true) {\n            return Object.assign({}, dashboardItem, {\n                h: dashboardItem.h + EXPANDED_HEIGHT,\n            });\n        }\n\n        return dashboardItem;\n    };\n\n    getItemComponent = item => {\n        const itemClassNames = [\n            item.type,\n            this.props.edit ? 'edit' : 'view',\n        ].join(' ');\n\n        return (\n            <ProgressiveLoadingContainer\n                key={item.i}\n                className={itemClassNames}\n            >\n                <Item\n                    item={item}\n                    editMode={this.props.edit}\n                    onToggleItemExpanded={this.onToggleItemExpanded}\n                />\n            </ProgressiveLoadingContainer>\n        );\n    };\n\n    getItemComponents = items => items.map(item => this.getItemComponent(item));\n\n    render() {\n        const { edit, isLoading, dashboardItems } = this.props;\n\n        if (!isLoading && !dashboardItems.length) {\n            return (\n                <NoContentMessage\n                    text={i18n.t('There are no items on this dashboard')}\n                />\n            );\n        }\n\n        const items = edit\n            ? dashboardItems\n            : dashboardItems.map(this.adjustHeightForExpanded);\n\n        return (\n            <div className=\"grid-wrapper\">\n                {isLoading ? (\n                    <ScreenCover>\n                        <CircularLoader />\n                    </ScreenCover>\n                ) : null}\n                <ReactGridLayout\n                    onLayoutChange={this.onLayoutChange}\n                    onResizeStop={this.onResizeStop}\n                    className=\"layout\"\n                    layout={items}\n                    margin={MARGIN}\n                    cols={getGridColumns()}\n                    rowHeight={GRID_ROW_HEIGHT}\n                    width={window.innerWidth}\n                    compactType={GRID_COMPACT_TYPE}\n                    isDraggable={edit}\n                    isResizable={edit}\n                    draggableCancel=\"input,textarea\"\n                >\n                    {this.getItemComponents(items)}\n                </ReactGridLayout>\n            </div>\n        );\n    }\n}\n\nItemGrid.propTypes = {\n    acRemoveDashboardItem: PropTypes.func,\n    acUpdateDashboardLayout: PropTypes.func,\n    dashboardItems: PropTypes.array,\n    edit: PropTypes.bool,\n    isLoading: PropTypes.bool,\n};\n\nItemGrid.defaultProps = {\n    dashboardItems: [],\n};\n\n// Container\n\nconst mapStateToProps = (state, ownProps) => {\n    const selectedDashboard = ownProps.edit\n        ? sGetEditDashboardRoot(state)\n        : sGetDashboardById(state, sGetSelectedId(state));\n\n    const dashboardItems = ownProps.edit\n        ? sGetEditDashboardItems(state)\n        : sGetDashboardItems(state);\n\n    return {\n        isLoading: sGetSelectedIsLoading(state) || !selectedDashboard,\n        dashboardItems,\n    };\n};\n\nconst mapDispatchToProps = {\n    acUpdateDashboardLayout,\n    acRemoveDashboardItem,\n};\n\nconst mergeProps = (stateProps, dispatchProps, ownProps) => {\n    const validItems = orArray(stateProps.dashboardItems).filter(hasShape);\n\n    return {\n        ...dispatchProps,\n        edit: ownProps.edit,\n        isLoading: stateProps.isLoading,\n        dashboardItems: validItems,\n        onItemResize,\n    };\n};\n\nexport default connect(\n    mapStateToProps,\n    mapDispatchToProps,\n    mergeProps\n)(ItemGrid);\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nimport i18n from '@dhis2/d2-i18n';\n\nimport { colors } from '@dhis2/ui-core';\n\nconst styles = {\n    badgeContainer: {\n        margin: '2px',\n        padding: '0 16px',\n        borderRadius: '4px',\n        color: colors.white,\n        backgroundColor: '#212934',\n        height: 36,\n        display: 'flex',\n        alignItems: 'center',\n    },\n    badge: {\n        fontSize: '13px',\n        cursor: 'pointer',\n        whiteSpace: 'nowrap',\n    },\n    badgeRemove: {\n        fontSize: '12px',\n        textDecoration: 'underline',\n        marginLeft: '24px',\n        cursor: 'pointer',\n    },\n};\n\nclass FilterBadge extends Component {\n    onClick = id => () => this.props.onClick(id);\n    onRemove = id => () => this.props.onRemove(id);\n\n    render() {\n        const { data } = this.props;\n\n        return (\n            <div style={styles.badgeContainer}>\n                <span style={styles.badge} onClick={this.onClick(data.id)}>\n                    {`${data.name}: ${\n                        data.values.length > 1\n                            ? i18n.t('{{count}} selected', {\n                                  count: data.values.length,\n                              })\n                            : data.values[0].name\n                    }`}\n                </span>\n                <span\n                    style={styles.badgeRemove}\n                    onClick={this.onRemove(data.id)}\n                >\n                    {i18n.t('Remove')}\n                </span>\n            </div>\n        );\n    }\n}\n\nFilterBadge.propTypes = {\n    data: PropTypes.object.isRequired,\n    onClick: PropTypes.func.isRequired,\n    onRemove: PropTypes.func.isRequired,\n};\n\nFilterBadge.defaultProps = {\n    onClick: Function.prototype,\n    onRemove: Function.prototype,\n};\n\nexport default FilterBadge;\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { createSelector } from 'reselect';\n\nimport { sGetDimensions } from '../../reducers/dimensions';\nimport { sGetItemFiltersRoot } from '../../reducers/itemFilters';\nimport { sGetControlBarUserRows } from '../../reducers/controlBar';\nimport { getTopOffset } from '../ControlBar/controlBarDimensions';\nimport { acRemoveItemFilter } from '../../actions/itemFilters';\nimport { acRemoveEditItemFilter } from '../../actions/editItemFilters';\nimport { acSetActiveModalDimension } from '../../actions/activeModalDimension';\n\nimport FilterBadge from './FilterBadge';\n\nimport classes from './styles/FilterBar.module.css';\n\nexport class FilterBar extends Component {\n    onBadgeRemove = id => {\n        this.props.removeItemFilter(id);\n        this.props.removeEditItemFilter(id);\n    };\n\n    onBadgeClick = id => {\n        this.props.setActiveModalDimension({\n            id,\n            name: this.props.filters.find(item => item.id === id).name,\n        });\n    };\n\n    render() {\n        const { filters, userRows } = this.props;\n        const top = getTopOffset(userRows) + 10;\n\n        return filters.length ? (\n            <div className={classes.bar} style={{ top }}>\n                {filters.map(filter => (\n                    <FilterBadge\n                        key={filter.id}\n                        data={filter}\n                        onClick={this.onBadgeClick}\n                        onRemove={this.onBadgeRemove}\n                    />\n                ))}\n            </div>\n        ) : null;\n    }\n}\n\nFilterBar.propTypes = {\n    filters: PropTypes.array.isRequired,\n    removeEditItemFilter: PropTypes.func.isRequired,\n    removeItemFilter: PropTypes.func.isRequired,\n    setActiveModalDimension: PropTypes.func,\n    userRows: PropTypes.number,\n};\n\nFilterBar.defaultProps = {\n    filters: [],\n    removeItemFIlter: Function.prototype,\n    removeEditItemFilter: Function.prototype,\n};\n\n// simplify the filters structure to:\n// [{ id: 'pe', name: 'Period', values: [{ id: 2019: name: '2019' }, {id: 'LAST_MONTH', name: 'Last month' }]}, ...]\nconst filtersSelector = createSelector(\n    [sGetItemFiltersRoot, sGetDimensions],\n    (filters, dimensions) =>\n        Object.keys(filters).reduce((arr, id) => {\n            arr.push({\n                id: id,\n                name: dimensions.find(dimension => dimension.id === id).name,\n                values: filters[id].map(value => ({\n                    id: value.id,\n                    name: value.displayName || value.name,\n                })),\n            });\n\n            return arr;\n        }, [])\n);\n\nconst mapStateToProps = state => ({\n    filters: filtersSelector(state),\n    userRows: sGetControlBarUserRows(state),\n});\n\nexport default connect(\n    mapStateToProps,\n    {\n        setActiveModalDimension: acSetActiveModalDimension,\n        removeItemFilter: acRemoveItemFilter,\n        removeEditItemFilter: acRemoveEditItemFilter,\n    }\n)(FilterBar);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport TitleBar from '../TitleBar/TitleBar';\nimport ItemGrid from '../ItemGrid/ItemGrid';\nimport FilterBar from '../FilterBar/FilterBar';\n\nexport const DashboardContent = props => (\n    <>\n        <TitleBar edit={props.editMode} />\n        <FilterBar />\n        <ItemGrid edit={props.editMode} />\n    </>\n);\n\nDashboardContent.propTypes = {\n    editMode: PropTypes.bool,\n};\n\nexport default DashboardContent;\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport isEmpty from 'lodash/isEmpty';\nimport i18n from '@dhis2/d2-i18n';\nimport PropTypes from 'prop-types';\n\nimport {\n    sGetAllDashboards,\n    sDashboardsIsFetching,\n} from '../../reducers/dashboards';\nimport { sGetSelectedId } from '../../reducers/selected';\nimport DashboardsBar from '../ControlBar/DashboardsBar';\nimport DashboardVerticalOffset from './DashboardVerticalOffset';\nimport DashboardContent from './DashboardContent';\nimport NoContentMessage from '../../widgets/NoContentMessage';\n\nexport const Content = ({ hasDashboardContent, dashboardsIsEmpty }) => {\n    const msg = dashboardsIsEmpty\n        ? i18n.t(\n              'No dashboards found. Use the + button to create a new dashboard.'\n          )\n        : i18n.t('Requested dashboard not found');\n\n    return hasDashboardContent ? (\n        <DashboardContent editMode={false} />\n    ) : (\n        <NoContentMessage text={msg} />\n    );\n};\n\nContent.propTypes = {\n    dashboardsIsEmpty: PropTypes.bool,\n    hasDashboardContent: PropTypes.bool,\n};\n\nexport const ViewDashboard = ({ id, dashboardsIsEmpty, dashboardsLoaded }) => {\n    const hasDashboardContent = id && !dashboardsIsEmpty;\n    const contentNotReady = !dashboardsLoaded || id === null;\n\n    return (\n        <>\n            <DashboardsBar />\n            <DashboardVerticalOffset />\n            <div className=\"dashboard-wrapper\">\n                {contentNotReady ? null : (\n                    <Content\n                        hasDashboardContent={hasDashboardContent}\n                        dashboardsIsEmpty={dashboardsIsEmpty}\n                    />\n                )}\n            </div>\n        </>\n    );\n};\n\nViewDashboard.propTypes = {\n    dashboardsIsEmpty: PropTypes.bool,\n    dashboardsLoaded: PropTypes.bool,\n    id: PropTypes.string,\n};\n\nconst mapStateToProps = state => {\n    const dashboards = sGetAllDashboards(state);\n\n    return {\n        id: sGetSelectedId(state),\n        dashboardsIsEmpty: isEmpty(dashboards),\n        dashboardsLoaded: !sDashboardsIsFetching(state),\n    };\n};\n\nexport default connect(mapStateToProps)(ViewDashboard);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport i18n from '@dhis2/d2-i18n';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport { Button } from '@dhis2/ui-core';\n\nexport const ConfirmDeleteDialog = ({\n    dashboardName,\n    onDeleteConfirmed,\n    onContinueEditing,\n    open,\n}) => {\n    const actions = [\n        <Button key=\"cancel\" secondary onClick={onContinueEditing}>\n            {i18n.t('Cancel')}\n        </Button>,\n        <Button key=\"delete\" destructive onClick={onDeleteConfirmed}>\n            {i18n.t('Delete')}\n        </Button>,\n    ];\n\n    return (\n        <Dialog open={open} onClose={onContinueEditing}>\n            <DialogTitle style={{ fontSize: '1.25rem', fontWeight: '450' }}>\n                {i18n.t('Delete dashboard')}\n            </DialogTitle>\n            <DialogContent>\n                <DialogContentText style={{ fontSize: '0.875rem' }}>\n                    {i18n.t(\n                        'Deleting dashboard \"{{ dashboardName }}\" will remove it for all users. This action cannot be undone. Are you sure you want to permanently delete this dashboard?',\n                        { dashboardName }\n                    )}\n                </DialogContentText>\n            </DialogContent>\n            <DialogActions>{actions}</DialogActions>\n        </Dialog>\n    );\n};\n\nConfirmDeleteDialog.propTypes = {\n    dashboardName: PropTypes.string,\n    open: PropTypes.bool,\n    onContinueEditing: PropTypes.func,\n    onDeleteConfirmed: PropTypes.func,\n};\n\nexport default ConfirmDeleteDialog;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { Redirect } from 'react-router-dom';\nimport i18n from '@dhis2/d2-i18n';\nimport ControlBar from './ControlBar';\nimport TranslationDialog from '@dhis2/d2-ui-translation-dialog';\nimport { Button } from '@dhis2/ui-core';\n\nimport ConfirmDeleteDialog from './ConfirmDeleteDialog';\nimport {\n    tSaveDashboard,\n    acClearEditDashboard,\n} from '../../actions/editDashboard';\nimport {\n    tDeleteDashboard,\n    acSetDashboardDisplayName,\n} from '../../actions/dashboards';\nimport {\n    sGetEditDashboardRoot,\n    sGetIsNewDashboard,\n} from '../../reducers/editDashboard';\nimport {\n    CONTROL_BAR_ROW_HEIGHT,\n    MIN_ROW_COUNT,\n    getControlBarHeight,\n} from './controlBarDimensions';\nimport { apiFetchDashboard } from '../../api/dashboards';\n\nimport classes from './styles/DashboardsBar.module.css';\n\nconst buttonBarStyle = {\n    height: CONTROL_BAR_ROW_HEIGHT,\n    paddingTop: '15px',\n    marginLeft: '15px',\n    marginRight: '15px',\n};\n\nexport class EditBar extends Component {\n    state = {\n        translationDialogIsOpen: false,\n        dashboardModel: undefined,\n        confirmDeleteDialogOpen: false,\n        redirectUrl: undefined,\n    };\n\n    onConfirmDelete = () => {\n        this.setState({ confirmDeleteDialogOpen: true });\n    };\n\n    onSave = () => {\n        this.props.onSave().then(newId => {\n            this.setState({ redirectUrl: `/${newId}` });\n        });\n    };\n\n    onDiscard = () => {\n        this.props.onDiscardChanges();\n        const redirectUrl = this.props.dashboardId\n            ? `/${this.props.dashboardId}`\n            : '/';\n        this.setState({ redirectUrl });\n    };\n\n    onContinueEditing = () => {\n        this.setState({ confirmDeleteDialogOpen: false });\n    };\n\n    onDeleteConfirmed = () => {\n        this.setState({ confirmDeleteDialogOpen: false });\n        this.props.onDelete(this.props.dashboardId).then(() => {\n            this.setState({ redirectUrl: '/' });\n        });\n    };\n\n    onTranslationsSaved = async translations => {\n        if (translations && translations.length) {\n            const dbLocale = await this.context.d2.currentUser.userSettings.get(\n                'keyDbLocale'\n            );\n\n            const translation = translations.find(\n                t => t.locale === dbLocale && t.property === 'NAME'\n            );\n\n            if (translation && translation.value) {\n                this.props.onTranslate(\n                    this.props.dashboardId,\n                    translation.value\n                );\n            }\n        }\n    };\n\n    fetchDashboardModel = () => {\n        if (this.props.dashboardId && !this.state.dashboardModel) {\n            apiFetchDashboard(this.props.dashboardId).then(dashboardModel =>\n                this.setState({ dashboardModel })\n            );\n        }\n    };\n\n    componentDidMount() {\n        this.fetchDashboardModel();\n    }\n\n    componentDidUpdate() {\n        this.fetchDashboardModel();\n    }\n\n    toggleTranslationDialog = () => {\n        this.setState({\n            translationDialogIsOpen: !this.state.translationDialogIsOpen,\n        });\n    };\n\n    confirmDeleteDialog = () =>\n        this.props.deleteAccess && this.props.dashboardId ? (\n            <ConfirmDeleteDialog\n                dashboardName={this.props.dashboardName}\n                onDeleteConfirmed={this.onDeleteConfirmed}\n                onContinueEditing={this.onContinueEditing}\n                open={this.state.confirmDeleteDialogOpen}\n            />\n        ) : null;\n\n    translationDialog = () =>\n        this.state.dashboardModel && this.state.dashboardModel.id ? (\n            <TranslationDialog\n                className=\"translation-dialog\"\n                d2={this.context.d2}\n                open={this.state.translationDialogIsOpen}\n                onRequestClose={this.toggleTranslationDialog}\n                objectToTranslate={this.state.dashboardModel}\n                fieldsToTranslate={['name', 'description']}\n                // TODO handle messages in snackbar\n                onTranslationSaved={this.onTranslationsSaved}\n                onTranslationError={err =>\n                    console.log('translation update error', err)\n                }\n            />\n        ) : null;\n\n    render() {\n        if (this.state.redirectUrl) {\n            return <Redirect to={this.state.redirectUrl} />;\n        }\n\n        const { dashboardId, deleteAccess, updateAccess } = this.props;\n        const controlBarHeight = getControlBarHeight(MIN_ROW_COUNT);\n\n        const discardBtnText = updateAccess\n            ? i18n.t('Exit without saving')\n            : i18n.t('Go to dashboards');\n\n        return (\n            <>\n                <ControlBar height={controlBarHeight} editMode={true}>\n                    <div style={buttonBarStyle}>\n                        {updateAccess ? (\n                            <div className={classes.leftControls}>\n                                <span style={{ marginRight: '15px' }}>\n                                    <Button primary onClick={this.onSave}>\n                                        {i18n.t('Save changes')}\n                                    </Button>\n                                </span>\n\n                                {dashboardId ? (\n                                    <span style={{ marginRight: '15px' }}>\n                                        <Button\n                                            onClick={\n                                                this.toggleTranslationDialog\n                                            }\n                                        >\n                                            {i18n.t('Translate')}\n                                        </Button>\n                                    </span>\n                                ) : null}\n                                {dashboardId && deleteAccess ? (\n                                    <Button onClick={this.onConfirmDelete}>\n                                        {i18n.t('Delete')}\n                                    </Button>\n                                ) : null}\n                            </div>\n                        ) : null}\n\n                        <div className={classes.rightControls}>\n                            <Button secondary onClick={this.onDiscard}>\n                                {discardBtnText}\n                            </Button>\n                        </div>\n                    </div>\n                </ControlBar>\n                {this.translationDialog()}\n                {this.confirmDeleteDialog()}\n            </>\n        );\n    }\n}\n\nEditBar.propTypes = {\n    dashboardId: PropTypes.string,\n    dashboardName: PropTypes.string,\n    deleteAccess: PropTypes.bool,\n    updateAccess: PropTypes.bool,\n    onDelete: PropTypes.func,\n    onDiscardChanges: PropTypes.func,\n    onSave: PropTypes.func,\n    onTranslate: PropTypes.func,\n};\n\nEditBar.contextTypes = {\n    d2: PropTypes.object,\n};\n\nconst mapStateToProps = state => {\n    const dashboard = sGetEditDashboardRoot(state);\n\n    let deleteAccess;\n    let updateAccess;\n    if (sGetIsNewDashboard(state)) {\n        deleteAccess = true;\n        updateAccess = true;\n    } else {\n        updateAccess = dashboard.access ? dashboard.access.update : false;\n        deleteAccess = dashboard.access ? dashboard.access.delete : false;\n    }\n\n    return {\n        dashboardId: dashboard.id,\n        dashboardName: dashboard.name,\n        deleteAccess,\n        updateAccess,\n    };\n};\n\nconst mapDispatchToProps = dispatch => ({\n    onSave: () => dispatch(tSaveDashboard()).then(id => id),\n    onDelete: id => dispatch(tDeleteDashboard(id)),\n    onDiscardChanges: () => dispatch(acClearEditDashboard()),\n    onTranslate: (id, value) => dispatch(acSetDashboardDisplayName(id, value)),\n});\n\nexport default connect(\n    mapStateToProps,\n    mapDispatchToProps\n)(EditBar);\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport i18n from '@dhis2/d2-i18n';\nimport PropTypes from 'prop-types';\n\nimport { acSetEditDashboard } from '../../actions/editDashboard';\nimport { sGetSelectedId } from '../../reducers/selected';\nimport {\n    sGetDashboardById,\n    sGetDashboardItems,\n    sDashboardsIsFetching,\n} from '../../reducers/dashboards';\nimport DashboardVerticalOffset from './DashboardVerticalOffset';\nimport DashboardContent from './DashboardContent';\nimport EditBar from '../ControlBar/EditBar';\nimport NoContentMessage from '../../widgets/NoContentMessage';\n\nexport const Content = ({ updateAccess }) => {\n    return updateAccess ? (\n        <DashboardContent editMode={true} />\n    ) : (\n        <NoContentMessage text={i18n.t('No access')} />\n    );\n};\n\nContent.propTypes = {\n    updateAccess: PropTypes.bool,\n};\nexport class EditDashboard extends Component {\n    state = {\n        initialized: false,\n    };\n\n    initEditDashboard = () => {\n        if (this.props.dashboard) {\n            this.setState({ initialized: true });\n            this.props.setEditDashboard(this.props.dashboard, this.props.items);\n        }\n    };\n\n    componentDidMount() {\n        this.initEditDashboard();\n    }\n\n    componentDidUpdate() {\n        if (!this.state.initialized) {\n            this.initEditDashboard();\n        }\n    }\n\n    getDashboardContent = () => {\n        const contentNotReady =\n            !this.props.dashboardsLoaded || this.props.id === null;\n\n        return (\n            <div className=\"dashboard-wrapper\">\n                {contentNotReady ? null : (\n                    <Content updateAccess={this.props.updateAccess} />\n                )}\n            </div>\n        );\n    };\n\n    render() {\n        return (\n            <>\n                <EditBar />\n                <DashboardVerticalOffset editMode={true} />\n                {this.getDashboardContent()}\n            </>\n        );\n    }\n}\n\nEditDashboard.propTypes = {\n    dashboard: PropTypes.object,\n    dashboardsLoaded: PropTypes.bool,\n    id: PropTypes.string,\n    items: PropTypes.array,\n    setEditDashboard: PropTypes.func,\n    updateAccess: PropTypes.bool,\n};\n\nconst mapStateToProps = state => {\n    const id = sGetSelectedId(state);\n    const dashboard = id ? sGetDashboardById(state, id) : null;\n\n    const updateAccess =\n        dashboard && dashboard.access ? dashboard.access.update : false;\n\n    return {\n        dashboard,\n        id,\n        updateAccess,\n        items: sGetDashboardItems(state),\n        dashboardsLoaded: !sDashboardsIsFetching(state),\n    };\n};\n\nexport default connect(\n    mapStateToProps,\n    {\n        setEditDashboard: acSetEditDashboard,\n    }\n)(EditDashboard);\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\n\nimport { acSetEditNewDashboard } from '../../actions/editDashboard';\nimport DashboardVerticalOffset from './DashboardVerticalOffset';\nimport EditBar from '../ControlBar/EditBar';\nimport DashboardContent from './DashboardContent';\n\nclass NewDashboard extends Component {\n    componentDidMount() {\n        this.props.setNewDashboard();\n    }\n\n    render() {\n        return (\n            <>\n                <EditBar />\n                <DashboardVerticalOffset editMode={true} />\n                <div className=\"dashboard-wrapper\">\n                    <DashboardContent editMode={true} />\n                </div>\n            </>\n        );\n    }\n}\n\nNewDashboard.propTypes = {\n    setNewDashboard: PropTypes.func,\n};\n\nexport default connect(\n    null,\n    {\n        setNewDashboard: acSetEditNewDashboard,\n    }\n)(NewDashboard);\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\n\nimport { tSelectDashboard } from '../../actions/dashboards';\nimport { sDashboardsIsFetching } from '../../reducers/dashboards';\nimport { EDIT, NEW } from './dashboardModes';\nimport ViewDashboard from './ViewDashboard';\nimport EditDashboard from './EditDashboard';\nimport NewDashboard from './NewDashboard';\n\nclass Dashboard extends Component {\n    setDashboard = () => {\n        if (this.props.dashboardsLoaded) {\n            const id = this.props.match.params.dashboardId || null;\n\n            this.props.selectDashboard(id);\n\n            this.scrollToTop();\n        }\n    };\n\n    scrollToTop = () => {\n        window.scrollTo(0, 0);\n    };\n\n    componentDidMount() {\n        this.setDashboard();\n    }\n\n    componentDidUpdate() {\n        this.setDashboard();\n    }\n\n    render() {\n        switch (this.props.mode) {\n            case EDIT:\n                return <EditDashboard />;\n            case NEW:\n                return <NewDashboard />;\n            default:\n                return <ViewDashboard />;\n        }\n    }\n}\n\nDashboard.propTypes = {\n    dashboardsLoaded: PropTypes.bool,\n    match: PropTypes.object,\n    mode: PropTypes.string,\n    selectDashboard: PropTypes.func,\n};\n\nconst mapStateToProps = state => {\n    return { dashboardsLoaded: !sDashboardsIsFetching(state) };\n};\n\nexport default connect(\n    mapStateToProps,\n    {\n        selectDashboard: tSelectDashboard,\n    }\n)(Dashboard);\n","export const EDIT = 'edit';\nexport const NEW = 'new';\nexport const VIEW = 'view';\n","import React, { Component } from 'react';\nimport { HashRouter as Router, Route, Switch } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport i18n from '@dhis2/d2-i18n';\nimport { HeaderBar } from '@dhis2/ui-widgets';\nimport { CssVariables } from '@dhis2/ui-core';\n\nimport { EDIT, VIEW, NEW } from './Dashboard/dashboardModes';\nimport { acReceivedUser } from '../actions/user';\nimport { tFetchDashboards } from '../actions/dashboards';\nimport { tSetControlBarRows } from '../actions/controlBar';\nimport { tSetDimensions } from '../actions/dimensions';\nimport Dashboard from './Dashboard/Dashboard';\nimport SnackbarMessage from './SnackbarMessage/SnackbarMessage';\n\nimport 'typeface-roboto';\nimport './App.css';\n\nexport class App extends Component {\n    componentDidMount() {\n        this.props.setCurrentUser(this.props.d2.currentUser);\n        this.props.fetchDashboards();\n        this.props.setControlBarRows();\n        this.props.setDimensions(this.props.d2);\n    }\n\n    getChildContext() {\n        return { baseUrl: this.props.baseUrl, i18n, d2: this.props.d2 };\n    }\n\n    render() {\n        return (\n            <>\n                <CssVariables colors spacers />\n                <div className=\"app-wrapper\">\n                    <div className=\"dashboard-header-bar\">\n                        <HeaderBar appName={i18n.t('Dashboard')} />\n                    </div>\n                    <Router>\n                        <Switch>\n                            <Route\n                                exact\n                                path=\"/\"\n                                render={props => (\n                                    <Dashboard {...props} mode={VIEW} />\n                                )}\n                            />\n                            <Route\n                                exact\n                                path=\"/new\"\n                                render={props => (\n                                    <Dashboard {...props} mode={NEW} />\n                                )}\n                            />\n                            <Route\n                                exact\n                                path=\"/:dashboardId\"\n                                render={props => (\n                                    <Dashboard {...props} mode={VIEW} />\n                                )}\n                            />\n                            <Route\n                                exact\n                                path=\"/:dashboardId/edit\"\n                                render={props => (\n                                    <Dashboard {...props} mode={EDIT} />\n                                )}\n                            />\n                        </Switch>\n                    </Router>\n                    <SnackbarMessage />\n                </div>\n            </>\n        );\n    }\n}\n\nApp.propTypes = {\n    fetchDashboards: PropTypes.func.isRequired,\n    setControlBarRows: PropTypes.func.isRequired,\n    setCurrentUser: PropTypes.func.isRequired,\n    setDimensions: PropTypes.func.isRequired,\n    baseUrl: PropTypes.string,\n    d2: PropTypes.object,\n};\n\nApp.childContextTypes = {\n    baseUrl: PropTypes.string,\n    i18n: PropTypes.object,\n    d2: PropTypes.object,\n};\n\nconst mapDispatchToProps = dispatch => {\n    return {\n        setCurrentUser: currentUser => dispatch(acReceivedUser(currentUser)),\n        fetchDashboards: () => dispatch(tFetchDashboards()),\n        setControlBarRows: () => dispatch(tSetControlBarRows()),\n        setDimensions: d2 => dispatch(tSetDimensions(d2)),\n    };\n};\n\nexport default connect(\n    null,\n    mapDispatchToProps\n)(App);\n","import { RECEIVED_USER } from '../reducers/user';\n\nexport const acReceivedUser = value => ({\n    type: RECEIVED_USER,\n    value,\n});\n","//------------------------------------------------------------------------------\n// <auto-generated>\n// This code was generated by d2-i18n-generate.\n//\n// Changes to this file may cause incorrect behavior and will be lost if\n// the code is regenerated.\n// </auto-generated>\n//------------------------------------------------------------------------------\nimport i18n from '@dhis2/d2-i18n';\nimport moment from 'moment';\nimport 'moment/locale/ar';\nimport 'moment/locale/es';\nimport 'moment/locale/fr';\nimport 'moment/locale/lo';\nimport 'moment/locale/pt';\nimport 'moment/locale/ru';\nimport 'moment/locale/sv';\nimport 'moment/locale/tg';\nimport 'moment/locale/uk';\nimport 'moment/locale/ur';\nimport 'moment/locale/vi';\nimport 'moment/locale/zh-cn';\n\nimport arTranslations from './ar/translations.json';\nimport daTranslations from './da/translations.json';\nimport enTranslations from './en/translations.json';\nimport esTranslations from './es/translations.json';\nimport frTranslations from './fr/translations.json';\nimport idTranslations from './id/translations.json';\nimport kmTranslations from './km/translations.json';\nimport loTranslations from './lo/translations.json';\nimport myTranslations from './my/translations.json';\nimport prsTranslations from './prs/translations.json';\nimport psTranslations from './ps/translations.json';\nimport ptTranslations from './pt/translations.json';\nimport pt_BRTranslations from './pt_BR/translations.json';\nimport ruTranslations from './ru/translations.json';\nimport svTranslations from './sv/translations.json';\nimport tetTranslations from './tet/translations.json';\nimport tgTranslations from './tg/translations.json';\nimport ukTranslations from './uk/translations.json';\nimport urTranslations from './ur/translations.json';\nimport viTranslations from './vi/translations.json';\nimport zhTranslations from './zh/translations.json';\nimport zh_CNTranslations from './zh_CN/translations.json';\n\nconst namespace = 'dashboards-app';\nmoment.locale('en');\n\ni18n.addResources('ar', namespace, arTranslations);\ni18n.addResources('da', namespace, daTranslations);\ni18n.addResources('en', namespace, enTranslations);\ni18n.addResources('es', namespace, esTranslations);\ni18n.addResources('fr', namespace, frTranslations);\ni18n.addResources('id', namespace, idTranslations);\ni18n.addResources('km', namespace, kmTranslations);\ni18n.addResources('lo', namespace, loTranslations);\ni18n.addResources('my', namespace, myTranslations);\ni18n.addResources('prs', namespace, prsTranslations);\ni18n.addResources('ps', namespace, psTranslations);\ni18n.addResources('pt', namespace, ptTranslations);\ni18n.addResources('pt_BR', namespace, pt_BRTranslations);\ni18n.addResources('ru', namespace, ruTranslations);\ni18n.addResources('sv', namespace, svTranslations);\ni18n.addResources('tet', namespace, tetTranslations);\ni18n.addResources('tg', namespace, tgTranslations);\ni18n.addResources('uk', namespace, ukTranslations);\ni18n.addResources('ur', namespace, urTranslations);\ni18n.addResources('vi', namespace, viTranslations);\ni18n.addResources('zh', namespace, zhTranslations);\ni18n.addResources('zh_CN', namespace, zh_CNTranslations);\n\ni18n.setDefaultNamespace(namespace);\ni18n.changeLanguage('en');\n\nexport default i18n;\n","/** @module reducers/selected */\nimport { validateReducer } from '../modules/util';\n\nexport const SET_STYLE = 'SET_STYLE';\n\nexport const DEFAULT_STATE_STYLE = 'LIST';\n\n/**\n * Reducer functions that computes and returns the new state based on the given action\n * @function\n * @param {Object} state The current state\n * @param {Object} action The action to be evaluated\n */\nconst style = (state = DEFAULT_STATE_STYLE, action) => {\n    switch (action.type) {\n        case SET_STYLE:\n            return validateReducer(action.value, DEFAULT_STATE_STYLE);\n        default:\n            return state;\n    }\n};\n\nexport default style;\n\n/**\n * Selectors that point to specific props in the state object\n * @function\n * @param {Object} state\n * @returns {Object}\n */\nexport const sGetStyleRoot = state => state.style;\n","import { combineReducers } from 'redux';\nimport arraySort from 'd2-utilizr/lib/arraySort';\n\nimport dashboards, { sGetDashboardsRoot } from './dashboards';\nimport selected from './selected';\nimport dashboardsFilter, {\n    ownerData,\n    sGetFilterName,\n    sGetFilterOrder,\n    sGetFilterOwner,\n} from './dashboardsFilter';\nimport controlBar from './controlBar';\nimport visualizations from './visualizations';\nimport editDashboard from './editDashboard';\nimport messages from './messages';\nimport user from './user';\nimport snackbar from './snackbar';\nimport itemFilters from './itemFilters';\nimport editItemFilters from './editItemFilters';\nimport style from './style';\nimport dimensions from './dimensions';\nimport settings from './settings';\nimport activeModalDimension from './activeModalDimension';\n\nconst USER = 'system';\n\n// Reducers\n\nexport default combineReducers({\n    dashboards,\n    selected,\n    dashboardsFilter,\n    controlBar,\n    visualizations,\n    messages,\n    user,\n    editDashboard,\n    itemFilters,\n    editItemFilters,\n    style,\n    snackbar,\n    dimensions,\n    settings,\n    activeModalDimension,\n});\n\n// Map constants to data\nconst mapConstToData = {\n    NAME: 'name',\n    ITEMS: 'numberOfItems',\n    CREATED: 'created',\n    OWNER: 'owner',\n};\n\n// Selectors\n\n// Filter dashboards by name\nexport const sFilterDashboardsByName = (dashboards, filter) =>\n    dashboards.filter(d =>\n        d.displayName.toLowerCase().includes(filter.toLowerCase())\n    );\n\n// Filter dashboards by owner, TODO FIXME\nexport const sFilterDashboardsByOwner = (dashboards, filter) => {\n    const ME = ownerData[1]; // TODO\n    const OTHERS = ownerData[2]; // TODO\n\n    switch (filter) {\n        case ME:\n            return dashboards.filter(d => d.owner === USER);\n        case OTHERS:\n            return dashboards.filter(d => d.owner !== USER);\n        default:\n            return dashboards;\n    }\n};\n\n// Filter dashboards by order\nexport const sFilterDashboardsByOrder = (dashboards, filter) => {\n    const filterValues = filter.split(':');\n\n    const key = filterValues[0];\n    const direction = filterValues[1];\n\n    return arraySort(dashboards, direction, mapConstToData[key]);\n};\n\n// Selectors dependency level 2\n\n// Get filtered dashboards\nexport const sGetFilteredDashboards = state => {\n    const dashboards = sGetDashboardsRoot(state);\n\n    const nameFilter = sGetFilterName(state);\n    const ownerFilter = sGetFilterOwner(state);\n    const orderFilter = sGetFilterOrder(state);\n\n    return sFilterDashboardsByOrder(\n        sFilterDashboardsByName(\n            sFilterDashboardsByOwner(dashboards, ownerFilter),\n            nameFilter\n        ),\n        orderFilter\n    );\n};\n","import { createStore, applyMiddleware, compose } from 'redux';\nimport { createLogger } from 'redux-logger';\nimport thunk from 'redux-thunk';\nimport reducer from './reducers';\n\nconst configureStore = () => {\n    const middleware = [thunk];\n\n    // Enable Redux devtools if extension is installed instead of redux-logger\n    const composeEnhancers =\n        window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\n    if (\n        !window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ &&\n        process.env.NODE_ENV !== 'production'\n    ) {\n        middleware.push(createLogger());\n    }\n\n    return createStore(\n        reducer,\n        composeEnhancers(applyMiddleware(...middleware))\n    );\n};\n\nexport default configureStore;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport { MuiThemeProvider, createMuiTheme } from '@material-ui/core/styles';\nimport { init as d2Init, config, getManifest, getUserSettings } from 'd2';\nimport dhis2theme from '@dhis2/d2-ui-core/theme/mui3.theme';\n\nimport { Provider as RuntimeProvider } from '@dhis2/app-runtime';\nimport { CssReset } from '@dhis2/ui-core';\n\nimport App from './components/App';\nimport './index.css';\nimport i18n from './locales';\nimport configureStore from './configureStore';\n\nconst muiTheme = () => createMuiTheme(dhis2theme);\n\nconst configI18n = userSettings => {\n    const uiLocale = userSettings.keyUiLocale;\n\n    if (uiLocale && uiLocale !== 'en') {\n        config.i18n.sources.add(`./i18n/i18n_module_${uiLocale}.properties`);\n    }\n\n    config.i18n.sources.add('./i18n/i18n_module_en.properties');\n    i18n.changeLanguage(uiLocale);\n};\n\nconst init = async () => {\n    const manifest = await getManifest('./manifest.webapp');\n\n    // log app info\n    console.info(\n        `Dashboards app, v${manifest.version}, ${\n            manifest.manifest_generated_at\n        }`\n    );\n\n    const isProd = process.env.NODE_ENV === 'production';\n\n    if (\n        !isProd &&\n        (!process.env.REACT_APP_DHIS2_BASE_URL ||\n            !process.env.REACT_APP_DHIS2_AUTHORIZATION)\n    ) {\n        throw new Error(\n            'Missing env variables REACT_APP_DHIS2_BASE_URL and REACT_APP_DHIS2_AUTHORIZATION'\n        );\n    }\n\n    // api config\n    const baseUrl = isProd\n        ? manifest.activities.dhis.href\n        : process.env.REACT_APP_DHIS2_BASE_URL;\n    const authorization = process.env.REACT_APP_DHIS2_AUTHORIZATION;\n\n    config.baseUrl = `${baseUrl}/api/${manifest.dhis2.apiVersion}`;\n    config.headers = isProd ? null : { Authorization: authorization };\n    config.schemas = [\n        'chart',\n        'map',\n        'report',\n        'reportTable',\n        'eventChart',\n        'eventReport',\n        'dashboard',\n        'organisationUnit',\n        'userGroup',\n    ];\n\n    getUserSettings()\n        .then(configI18n)\n        .then(() => d2Init(config))\n        .then(initializedD2 => {\n            ReactDOM.render(\n                <RuntimeProvider\n                    config={{\n                        baseUrl: baseUrl,\n                        apiVersion: manifest.dhis2.apiVersion,\n                    }}\n                >\n                    <CssReset />\n                    <Provider store={configureStore()}>\n                        <MuiThemeProvider theme={muiTheme()}>\n                            <App baseUrl={baseUrl} d2={initializedD2} />\n                        </MuiThemeProvider>\n                    </Provider>\n                </RuntimeProvider>,\n                document.getElementById('root')\n            );\n        });\n};\n\ninit();\n","import isObject from 'lodash/isObject';\n\n// validation\nexport function orNull(param) {\n    return param === undefined ? null : param;\n}\n\nexport function orArray(param) {\n    return Array.isArray(param) ? param : [];\n}\n\nexport function orObject(param) {\n    return isObject(param) ? param : {};\n}\n\n// array\nexport function arrayGetById(array, id) {\n    return array.find(item => item.id === id);\n}\n\n// object\nexport function arrayToIdMap(array) {\n    return array.reduce((obj, item) => {\n        obj[item.id] = item;\n        return obj;\n    }, {});\n}\n\n// date\nexport function getDate() {\n    const y = Math.floor(Math.random() * 3) + 2015;\n    const M = Math.floor(Math.random() * 12) + 1;\n    const d = Math.floor(Math.random() * 28) + 1;\n    // const h = Math.floor(Math.random() * 23) + 1;\n    // const m = Math.floor(Math.random() * 59) + 1;\n    // const s = Math.floor(Math.random() * 59) + 1;\n\n    return new Date(`${y}-${M}-${d}`)\n        .toJSON()\n        .replace('T', ' ')\n        .substr(0, 10);\n}\n\nexport const formatDate = (value, uiLocale) => {\n    if (typeof global.Intl !== 'undefined' && Intl.DateTimeFormat) {\n        const locale = uiLocale || 'en';\n        return new Intl.DateTimeFormat(locale, {\n            year: 'numeric',\n            month: 'short',\n            day: 'numeric',\n        }).format(new Date(value));\n    }\n\n    return value.substr(0, 19).replace('T', ' ');\n};\n\n/**\n * Sorts an array of objects based on provided date property\n *\n * @param {Array} items Array of objects\n * @param {String} dateProp Name of the date property to be used for sorting\n * @param {Boolean} ascending Whether to sort ascending or descending\n */\nexport const sortByDate = (items, dateProp, ascending = true) => {\n    const values = Object.values(items);\n\n    values.sort((a, b) => {\n        const aDate = new Date(a[dateProp]);\n        const bDate = new Date(b[dateProp]);\n\n        return ascending ? aDate - bDate : bDate - aDate;\n    });\n\n    return values;\n};\n\n// reducer validator\nexport const validateReducer = (value, defaultValue) =>\n    value === undefined || value === null ? defaultValue : value;\n\nexport const getBaseUrl = d2 => {\n    const api = d2.Api.getApi();\n    const idx = api.baseUrl.indexOf('/api');\n    return idx > -1 ? api.baseUrl.slice(0, idx) : api.baseUrl;\n};\n\nexport const getWithoutId = object => ({\n    ...object,\n    id: undefined,\n});\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"leftControls\":\"DashboardsBar_leftControls__2kr14\",\"rightControls\":\"DashboardsBar_rightControls__2l1lT\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"menuItem\":\"ContentMenuItem_menuItem__2DIcB\",\"launchLink\":\"ContentMenuItem_launchLink__MRANR\",\"label\":\"ContentMenuItem_label__2pIfq\",\"buttonInsert\":\"ContentMenuItem_buttonInsert__1GlZy\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"itemWrap\":\"ItemHeader_itemWrap__3gJiQ\",\"itemHeaderWrap\":\"ItemHeader_itemHeaderWrap__xEKwZ\",\"itemTitle\":\"ItemHeader_itemTitle__3LmXp\",\"itemActionsWrap\":\"ItemHeader_itemActionsWrap__1U5Ex\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"ControlBar_root__3LaTt\",\"content\":\"ControlBar_content__1r98-\",\"draghandle\":\"ControlBar_draghandle__1VWa0\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"FatalErrorBoundary_container__x6zhd\",\"icon\":\"FatalErrorBoundary_icon__2XjC2\",\"message\":\"FatalErrorBoundary_message__2p9y8\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"showMore\":\"ShowMoreButton_showMore__rWqw9\",\"disabled\":\"ShowMoreButton_disabled__2oX7G\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"ClearButton_button__2yjcV\",\"icon\":\"ClearButton_icon__1fqj8\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"filterField\":\"Filter_filterField__23cD5\",\"searchIcon\":\"Filter_searchIcon__2cHsm\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"progress\":\"LoadingMask_progress__NsmGX\",\"outer\":\"LoadingMask_outer__2Nb9y\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"textDiv\":\"Item_textDiv__2b-T5\",\"loadingCover\":\"Item_loadingCover__fhJgG\"};","import isObject from 'lodash/isObject';\nimport { VIS_TYPE_COLUMN, VIS_TYPE_PIVOT_TABLE } from '@dhis2/analytics';\nimport { apiFetchFavorite, getMapFields } from '../../../api/metadata';\nimport {\n    REPORT_TABLE,\n    CHART,\n    MAP,\n    EVENT_REPORT,\n    EVENT_CHART,\n    itemTypeMap,\n} from '../../../modules/itemTypes';\nimport { getBaseUrl, getWithoutId } from '../../../modules/util';\nimport { getGridItemDomId } from '../../ItemGrid/gridUtil';\n\n//external plugins\nconst itemTypeToExternalPlugin = {\n    [MAP]: 'mapPlugin',\n    [EVENT_REPORT]: 'eventReportPlugin',\n    [EVENT_CHART]: 'eventChartPlugin',\n};\nconst hasIntegratedPlugin = type => [CHART, REPORT_TABLE].includes(type);\n\nconst getPlugin = type => {\n    if (hasIntegratedPlugin(type)) {\n        return true;\n    }\n    const pluginName = itemTypeToExternalPlugin[type];\n\n    return global[pluginName];\n};\n\nexport const THEMATIC_LAYER = 'thematic';\n\nexport const pluginIsAvailable = (item = {}, visualization = {}) => {\n    const type = visualization.activeType || item.type;\n\n    return !!getPlugin(type);\n};\n\nexport const extractFavorite = item => {\n    if (!isObject(item)) {\n        return null;\n    }\n\n    const propName = itemTypeMap[item.type].propName;\n\n    return (\n        item[propName] ||\n        (item.reportTable ||\n            item.chart ||\n            item.map ||\n            item.eventReport ||\n            item.eventChart ||\n            {})\n    );\n};\n\nexport const extractMapView = map =>\n    map.mapViews && map.mapViews.find(mv => mv.layer.includes(THEMATIC_LAYER));\n\nexport const loadPlugin = (plugin, config, credentials) => {\n    if (!(plugin && plugin.load)) {\n        return;\n    }\n\n    plugin.url = credentials.baseUrl;\n    plugin.loadingIndicator = true;\n    plugin.dashboard = true;\n    if (credentials.auth) {\n        plugin.auth = credentials.auth;\n    }\n    plugin.load(config);\n};\n\nexport const getId = item => extractFavorite(item).id;\nexport const getName = item => extractFavorite(item).name;\nexport const getDescription = item => extractFavorite(item).description;\nexport const getLink = (item, d2) => {\n    const baseUrl = getBaseUrl(d2);\n    const appUrl = itemTypeMap[item.type].appUrl(getId(item));\n\n    return `${baseUrl}/${appUrl}`;\n};\n\nexport const load = async (\n    item,\n    visualization,\n    { credentials, activeType }\n) => {\n    const config = {\n        ...visualization,\n        el: getGridItemDomId(item.id),\n    };\n\n    const type = activeType || item.type;\n    const plugin = getPlugin(type);\n\n    loadPlugin(plugin, config, credentials);\n};\n\nexport const fetch = async item => {\n    const fetchedFavorite = await apiFetchFavorite(getId(item), item.type, {\n        fields: item.type === MAP ? getMapFields() : null,\n    });\n\n    return fetchedFavorite;\n};\n\nexport const resize = item => {\n    const plugin = getPlugin(item.type);\n\n    if (plugin && plugin.resize) {\n        plugin.resize(getGridItemDomId(item.id));\n    }\n};\n\nexport const unmount = (item, activeType) => {\n    const plugin = getPlugin(activeType);\n\n    if (plugin && plugin.unmount) {\n        plugin.unmount(getGridItemDomId(item.id));\n    }\n};\n\nexport const getVisualizationConfig = (\n    visualization,\n    originalType,\n    activeType\n) => {\n    if (originalType === MAP && originalType !== activeType) {\n        const extractedMapView = extractMapView(visualization);\n\n        if (extractedMapView === undefined) {\n            return null;\n        }\n\n        return getWithoutId({\n            ...visualization,\n            ...extractedMapView,\n            mapViews: undefined,\n            type: activeType === CHART ? VIS_TYPE_COLUMN : VIS_TYPE_PIVOT_TABLE,\n        });\n    } else if (originalType === REPORT_TABLE && activeType === CHART) {\n        return getWithoutId({ ...visualization, type: VIS_TYPE_COLUMN });\n    } else if (originalType === CHART && activeType === REPORT_TABLE) {\n        return getWithoutId({\n            ...visualization,\n            type: VIS_TYPE_PIVOT_TABLE,\n        });\n    }\n\n    return getWithoutId(visualization);\n};\n","import isFunction from 'd2-utilizr/lib/isFunction';\n\nimport { orObject } from '../../modules/util';\n\n// Dimensions for the react-grid-layout\n\nexport const GRID_COMPACT_TYPE = 'vertical'; // vertical | horizonal | null\nexport const GRID_ROW_HEIGHT = 10;\nconst GRID_COLUMN_WIDTH_PX = 20;\nconst GRID_LAYOUT = 'FLEXIBLE'; // FIXED | FLEXIBLE\nexport const MARGIN = [10, 10];\n\nexport const NEW_ITEM_SHAPE = { x: 0, y: 0, w: 20, h: 29 };\n\n// Dimensions for getShape\n\nconst NUMBER_OF_ITEM_COLS = 2;\nconst GRID_COLUMNS = 60;\n\nexport const getGridColumns = () => {\n    switch (GRID_LAYOUT) {\n        case 'FLEXIBLE':\n            return GRID_COLUMNS;\n        case 'FIXED':\n            return Math.floor((window.innerWidth - 20) / GRID_COLUMN_WIDTH_PX);\n        default:\n            return GRID_COLUMNS;\n    }\n};\n\n// isNonNegativeInteger\n\nconst isNonNegativeInteger = x => Number.isInteger(x) && x >= 0;\n\n// Does the item have all the shape properties?\n\nexport const hasShape = item =>\n    isNonNegativeInteger(item.x) &&\n    isNonNegativeInteger(item.y) &&\n    isNonNegativeInteger(item.w) &&\n    isNonNegativeInteger(item.h);\n\n// returns a rectangular grid block dimensioned with x, y, w, h in grid units.\n// based on a grid with 3 items across\nexport const getShape = i => {\n    if (!isNonNegativeInteger(i)) {\n        throw new Error('Invalid grid block number');\n    }\n\n    const col = i % NUMBER_OF_ITEM_COLS;\n    const row = Math.floor(i / NUMBER_OF_ITEM_COLS);\n    const itemWidth = Math.floor((GRID_COLUMNS - 1) / NUMBER_OF_ITEM_COLS);\n    const itemHeight = GRID_ROW_HEIGHT * 2;\n\n    return {\n        x: col * itemWidth,\n        y: row * itemHeight,\n        w: itemWidth,\n        h: itemHeight,\n    };\n};\n\nexport const getGridItemProperties = itemId => {\n    return {\n        i: itemId,\n        minH: 4, // minimum height for item\n    };\n};\n\n/**\n * Calculates the grid item's original height in pixels based\n * on the height in grid units. This calculation\n * is copied directly from react-grid-layout GridItem.js (calcPosition)\n *\n * @param {Object} item item containing shape (x, y, w, h)\n */\nconst getOriginalHeight = item => {\n    const originalHeight = Math.round(\n        GRID_ROW_HEIGHT * item.h + Math.max(0, item.h - 1) * MARGIN[1]\n    );\n\n    return { originalHeight };\n};\n\n/**\n * Returns an array of items containing the x, y, w, h dimensions\n * and the item's originalheight in pixels\n * @function\n * @param {Array} items\n * @returns {Array}\n */\n\nexport const withShape = items =>\n    items.map((item, index) => {\n        const itemWithShape = hasShape(item)\n            ? item\n            : Object.assign({}, item, getShape(index));\n\n        return Object.assign(\n            {},\n            itemWithShape,\n            getOriginalHeight(itemWithShape)\n        );\n    });\n\nexport const getGridItemDomId = id => `item-${id}`;\n\nexport function onItemResize(id) {\n    const el = orObject(document.querySelector(`#${getGridItemDomId(id)}`));\n    if (isFunction(el.setViewportSize))\n        setTimeout(\n            () => el.setViewportSize(el.clientWidth - 5, el.clientHeight - 5),\n            10\n        );\n}\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"showMoreButton\":\"CategorizedMenuGroup_showMoreButton__3-0Wa\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"deleteItemButton\":\"DeleteItemButton_deleteItemButton__4YLrM\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"bar\":\"FilterBar_bar__2mF3Z\"};"],"sourceRoot":""}
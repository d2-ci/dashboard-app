{"version":3,"sources":["D2App/components/ControlBar/styles/ControlBar.module.css","D2App/components/ControlBar/styles/DashboardItemChip.module.css","D2App/components/ControlBar/styles/ClearButton.module.css","D2App/components/ControlBar/styles/ShowMoreButton.module.css","D2App/components/ItemSelector/styles/ContentMenuItem.module.css","D2App/components/ItemSelector/styles/CategorizedMenuGroup.module.css","D2App/components/TitleBar/styles/EditTitleBar.module.css","D2App/components/TitleBar/styles/ViewTitleBar.module.css","D2App/components/Item/VisualizationItem/styles/FatalErrorBoundary.module.css","D2App/components/Item/ItemHeader/styles/DeleteItemButton.module.css","D2App/components/Item/ItemHeader/styles/PrintItemInfo.module.css","D2App/modules/util.js","D2App/modules/itemTypes.js","D2App/components/Item/VisualizationItem/styles/LoadingMask.module.css","D2App/components/Item/VisualizationItem/styles/VisualizationErrorMessage.module.css","D2App/components/Item/VisualizationItem/styles/Item.module.css","D2App/components/Item/ListItem/Item.module.css","D2App/components/Item/PrintTitlePageItem/styles/Item.module.css","D2App/components/FilterBar/styles/FilterBar.module.css","D2App/components/ControlBar/styles/ConfirmDeleteDialog.module.css","D2App/components/Dashboard/styles/PrintInfo.module.css","D2App/components/Dashboard/styles/PrintActionsBar.module.css","D2App/components/Dashboard/styles/PrintLayoutDashboard.module.css","D2App/components/Dashboard/styles/PrintDashboard.module.css","D2App/components/Dashboard/dashboardModes.js","D2App/reducers/user.js","D2App/modules/uiBackendItemConverter.js","D2App/reducers/dashboards.js","D2App/reducers/selected.js","D2App/reducers/dimensions.js","D2App/reducers/itemFilters.js","D2App/actions/itemFilters.js","D2App/reducers/messages.js","D2App/api/messages.js","D2App/components/Item/MessagesItem/actions.js","D2App/reducers/snackbar.js","D2App/actions/snackbar.js","D2App/reducers/visualizations.js","D2App/actions/visualizations.js","D2App/api/index.js","D2App/api/dashboards.js","D2App/api/userDataStore.js","D2App/components/SnackbarMessage/SnackbarMessage.js","D2App/actions/selected.js","D2App/api/localStorage.js","D2App/api/description.js","D2App/actions/dashboards.js","D2App/reducers/controlBar.js","D2App/actions/controlBar.js","D2App/api/controlBar.js","D2App/reducers/settings.js","D2App/actions/dimensions.js","D2App/components/ControlBar/ControlBar.js","D2App/icons/Star.js","D2App/components/ControlBar/DashboardItemChip.js","D2App/api/dataStatistics.js","D2App/icons/AddCircle.js","D2App/icons/Clear.js","D2App/components/ControlBar/ClearButton.js","D2App/reducers/dashboardsFilter.js","D2App/components/ControlBar/Filter.js","D2App/components/ControlBar/ShowMoreButton.js","D2App/components/ControlBar/controlBarDimensions.js","D2App/components/ControlBar/DashboardsBar.js","D2App/actions/dashboardsFilter.js","D2App/components/Dashboard/DashboardVerticalOffset.js","D2App/widgets/NoContentMessage.js","D2App/components/ItemSelector/HeaderMenuItem.js","D2App/icons/Launch.js","D2App/components/ItemSelector/ContentMenuItem.js","D2App/reducers/editDashboard.js","D2App/api/editDashboard.js","D2App/actions/editDashboard.js","D2App/components/ItemSelector/selectableItems.js","D2App/components/ItemSelector/CategorizedMenuGroup.js","D2App/components/ItemSelector/actions.js","D2App/components/ItemSelector/SinglesMenuGroup.js","D2App/components/ItemSelector/ItemSelector.js","D2App/components/TitleBar/EditTitleBar.js","D2App/components/Item/VisualizationItem/assets/icons.js","D2App/components/ItemFilter/FilterDialog.js","D2App/reducers/activeModalDimension.js","D2App/actions/activeModalDimension.js","D2App/components/ItemFilter/FilterSelector.js","D2App/components/TitleBar/ViewTitleBar.js","D2App/components/TitleBar/TitleBar.js","D2App/components/Item/VisualizationItem/DefaultPlugin.js","D2App/components/Item/VisualizationItem/FatalErrorBoundary.js","D2App/components/Item/ItemHeader/ViewItemActions.js","D2App/components/Item/ItemHeader/DeleteItemButton.js","D2App/components/Item/ItemHeader/EditItemActions.js","D2App/icons/Info.js","D2App/components/Item/ItemHeader/PrintItemInfo.js","D2App/components/Item/ItemHeader/ItemHeader.js","D2App/components/Item/VisualizationItem/ItemHeaderButtons.js","D2App/components/Item/VisualizationItem/ItemFooter.js","D2App/components/Item/VisualizationItem/LoadingMask.js","D2App/components/Item/VisualizationItem/VisualizationErrorMessage.js","D2App/modules/memoizeOne.js","D2App/components/Item/VisualizationItem/Item.js","D2App/widgets/Line.js","D2App/components/Item/MessagesItem/Item.js","D2App/components/Item/NotSupportedItem/Item.js","D2App/icons/Description.js","D2App/icons/Delete.js","D2App/components/Item/ListItem/Item.js","D2App/components/Item/ListItem/actions.js","D2App/reducers/printDashboard.js","D2App/components/Item/TextItem/Item.js","D2App/components/Item/AppItem/Item.js","D2App/components/Item/SpacerItem/Item.js","D2App/components/Item/PageBreakItem/Item.js","D2App/components/Item/PrintTitlePageItem/Item.js","D2App/components/Item/Item.js","D2App/components/Item/ProgressiveLoadingContainer.js","D2App/components/ItemGrid/ItemGrid.js","D2App/components/FilterBar/FilterBadge.js","D2App/components/FilterBar/FilterBar.js","D2App/reducers/windowHeight.js","D2App/actions/printDashboard.js","D2App/components/Dashboard/ViewDashboard.js","D2App/components/ControlBar/ConfirmDeleteDialog.js","D2App/components/ControlBar/EditBar.js","D2App/components/Dashboard/PrintInfo.js","D2App/icons/LessHorizontal.js","D2App/components/Dashboard/PrintActionsBar.js","D2App/modules/printUtils.js","D2App/components/ItemGrid/PrintLayoutItemGrid.js","D2App/components/Dashboard/PrintLayoutDashboard.js","D2App/components/Dashboard/EditDashboard.js","D2App/components/Dashboard/NewDashboard.js","D2App/components/ItemGrid/PrintItemGrid.js","D2App/components/Dashboard/PrintDashboard.js","D2App/actions/windowHeight.js","D2App/components/Dashboard/Dashboard.js","D2App/components/App.js","D2App/actions/user.js","D2App/reducers/style.js","D2App/reducers/index.js","D2App/configureStore.js","D2App/locales/index.js","D2App/AppWrapper.js","D2App/components/ItemGrid/gridUtil.js","D2App/components/Item/VisualizationItem/plugin.js","D2App/components/Item/ItemHeader/styles/ItemHeader.module.css","D2App/api/metadata.js","D2App/components/ControlBar/styles/DashboardsBar.module.css"],"names":["module","exports","orArray","param","Array","isArray","orObject","isObject","arrayToIdMap","array","reduce","obj","item","id","formatDate","value","uiLocale","global","Intl","DateTimeFormat","locale","year","month","day","format","Date","substr","replace","validateReducer","defaultValue","undefined","getBaseUrl","d2","api","Api","getApi","idx","baseUrl","indexOf","slice","getWithoutId","object","VISUALIZATION","REPORT_TABLE","CHART","MAP","EVENT_REPORT","EVENT_CHART","APP","REPORTS","RESOURCES","USERS","MESSAGES","TEXT","SPACER","PAGEBREAK","PRINT_TITLE_PAGE","isVisualizationType","itemTypeMap","type","hasMapView","itemType","domainType","isTrackerDomainType","getDefaultItemCount","defaultItemCount","getAppName","appName","endPointName","propName","pluralTitle","i18n","t","appUrl","getTime","getEndPointName","getItemUrl","url","launchUrl","getItemIcon","TableIcon","ChartIcon","MapIcon","ExtensionIcon","DescriptionIcon","PersonIcon","FontDownloadIcon","EmailIcon","CropFreeIcon","NotInterestedIcon","EDIT","NEW","PRINT","PRINT_LAYOUT","isEditMode","mode","includes","isPrintMode","isViewMode","DEFAULT_STATE_USER","username","isSuperuser","sGetUserUsername","state","user","spacerContent","isTextType","text","convertUiItemsToBackend","items","map","isUiSpacerType","convertBackendItemsToUi","isBackendSpacerType","gridProperties","getGridItemProperties","DEFAULT_STATE_DASHBOARDS","byId","EMPTY_DASHBOARD","updateDashboardProp","dashboardId","prop","sGetDashboardsRoot","dashboards","sGetDashboardById","sDashboardsIsFetching","sGetAllDashboards","sGetDashboardItems","sGetStarredDashboards","Object","values","filter","dashboard","starred","sGetUnstarredDashboards","getCustomDashboards","data","arrayFrom","d","name","displayName","description","displayDescription","favorite","owner","created","split","join","lastUpdated","access","numberOfItems","dashboardItems","length","combineReducers","action","isLoading","showDescription","sGetSelectedRoot","selected","sGetSelectedId","sGetSelectedIsLoading","sGetSelectedShowDescription","DEFAULT_DIMENSIONS","getDimensionById","DIMENSION_ID_PERIOD","DIMENSION_ID_ORGUNIT","sGetDimensions","dimensions","DEFAULT_STATE_ITEM_FILTERS","sGetItemFiltersRoot","itemFilters","sGetNamedItemFilters","createSelector","filters","keys","arr","push","find","dimension","acRemoveItemFilter","sGetMessagesRoot","messages","tGetMessages","async","getInstance","then","get","catch","error","console","log","getMessages","messageConversations","dispatch","err","DEFAULT_STATE_SNACKBAR","message","duration","open","acCloseSnackbar","DEFAULT_STATE_VISUALIZATIONS","isEmpty","p","sGetVisualization","visualizations","sGetVisualizationsRoot","acAddVisualization","onError","getDashboardItemsFields","withFavorite","arrayClean","getListItemFields","getFavoritesFields","withDimensions","getDashboardFields","withItems","getIdNameFields","rename","apiFetchDashboard","models","fields","getNamespace","currentUser","dataStore","has","hasDashboardNamespace","create","apiPostUserDataStoreValue","key","set","apiGetUserDataStoreValue","ns","k","loadingDashboardMsg","SnackbarMessageContent","style","fontWeight","connect","snackbar","sGetSnackbar","snackbarOpen","snackbarMessage","snackbarDuration","onCloseSnackbar","props","zIndex","autoHideDuration","onClose","acSetSelectedId","acSetSelectedIsLoading","acSetSelectedShowDescription","tSetSelectedDashboardById","getState","snackbarTimeout","setTimeout","dashboardName","onSuccess","acAppendDashboards","customDashboard","acSetDashboardItems","withShape","localStorage","setItem","forEach","extractFavorite","clearTimeout","tSetShowDescription","apiGetShowDescription","tUpdateShowDescription","apiPostShowDescription","tFetchDashboards","collection","list","paging","toArray","tStarDashboard","isStarred","post","delete","apiStarDashboard","acSetDashboardStarred","tDeleteDashboard","apiDeleteDashboard","Promise","resolve","userRows","sGetControlBarUserRows","controlBar","sGetControlBarRoot","acSetControlBarUserRows","rows","tSetControlBarRows","controlBarRows","apiGetControlBarRows","DEFAULT_SETTINGS","keyDateFormat","keyAnalysisRelativePeriod","keyAnalysisDigitGroupSeparator","displayNameProperty","rootOrganisationUnit","sGetSettings","settings","sGetSettingsDisplayNameProperty","tSetDimensions","displayNameProp","apiFetchDimensions","acSetDimensions","dim","dimensionType","dataDimensionType","ControlBar","React","Component","constructor","super","onStartDrag","this","setState","dragging","window","addEventListener","onDrag","onEndDrag","event","preventDefault","stopPropagation","newHeight","clientY","onChangeHeight","height","requestAnimationFrame","removeEventListener","renderDragHandle","className","classes","draghandle","onMouseDown","render","Math","max","rootStyle","assign","backgroundColor","editMode","colors","yellow050","white","paddingBottom","transition","root","content","children","defaultProps","StarIcon","xmlns","viewBox","fill","DashboardItemChip","label","chipProps","selectedState","unselected","icon","Star","link","to","onClick","debounce","eventType","apiPostDataStatistics","AddCircleIcon","width","teal600","ClearIcon","grey800","ClearButton","onClear","button","Clear","color","ownerData","DEFAULT_STATE_DASHBOARDS_FILTER_OWNER","order","sGetDashboardsFilterRoot","dashboardsFilter","sGetFilterName","styles","filterField","fontSize","top","searchIcon","grey700","Filter","setFilterValue","onChangeName","target","handleKeyUp","keyCode","onKeypressEnter","componentWillReceiveProps","nextProps","startAdornment","position","endAdornment","placeholder","onChange","onKeyUp","Function","prototype","withStyles","ShowMoreButton","isMaxHeight","disabled","textAlign","showMore","getRowsHeight","getControlBarHeight","FIRST_ROW_PADDING_HEIGHT","DashboardsBar","setInitialDashboardState","adjustedHeight","newRows","floor","newRowCount","min","apiPostControlBarRows","onToggleMaxHeight","onSelectDashboard","history","componentDidMount","selectedId","onChangeFilterName","rowCount","controlBarHeight","contentWrapperStyle","padding","overflowY","leftControls","display","textDecoration","marginRight","AddCircle","mapDispatchToProps","withRouter","stateProps","dispatchProps","ownProps","displayDashboards","arraySort","toLowerCase","marginTop","NoContentMessage","grey600","HeaderMenuItem","title","dense","LaunchIcon","LaunchLink","e","launchLink","rel","href","Launch","InsertButton","buttonInsert","ContentMenuItem","onInsert","visType","ItemIcon","renderedItemIcon","visTypeIcons","menuItem","DEFAULT_STATE_EDIT_DASHBOARD","NEW_DASHBOARD_STATE","printPreviewView","sGetEditDashboardRoot","editDashboard","sGetIsEditing","sGetIsPrintPreviewView","sGetEditDashboardItems","saveDashboard","w","h","save","msg","response","uid","acClearEditDashboard","acAddDashboardItem","itemPropName","generateUid","gridItemProperties","shape","yPos","getPageBreakItemShape","isStatic","getPrintTitlePageItemShape","NEW_ITEM_SHAPE","acUpdateDashboardItem","acRemoveDashboardItem","tSaveDashboard","dashboardToSave","postDashboard","singleItems","header","categorizedItems","listItemTypes","CategorizedMenuGroup","addItem","tAddListItemContent","newItem","toggleSeeMore","seeMore","onChangeItemsLimit","hasMore","itemUrl","context","showMoreButton","margin","contextTypes","PropTypes","isRequired","listItemType","dashboardItemIndex","findIndex","dashboardItem","category","addToDashboard","ItemSearchField","onFocus","ItemSelector","closeList","openList","_","fetchItems","anchorEl","currentTarget","updateDebouncedFilterText","debouncedFilter","setFilter","getCategorizedMenuGroups","itemCount","allItems","maxOptions","getSinglesMenuGroups","getMenuGroups","concat","add","Set","queryString","anchorOrigin","horizontal","vertical","transformOrigin","PaperProps","disableAutoFocus","disableEnforceFocus","disableRestoreFocus","maxWidth","EditTitleBar","onChangeTitle","onChangeDescription","section","titleDescription","itemSelector","selectedDashboard","ThreeDots","SpeechBubble","fillRule","transform","Warning","FilterDialog","initiallySelectedItems","addItemFilter","removeItemFilter","setFilters","useState","onSelectItems","dimensionId","onDeselectItems","itemIdsToRemove","newList","onReorderItems","itemIds","oldList","reorderedList","large","commonProps","onSelect","onDeselect","onReorder","selectedItems","selectedPeriods","ouItems","renderDialogContent","secondary","primary","filterItems","DEFAULT_STATE_ACTIVE_MODAL_DIMENSION","sGetActiveModalDimension","activeModalDimension","acSetActiveModalDimension","clearActiveModalDimension","setActiveModalDimension","showPopover","setShowPopover","ref","useRef","onCloseDialog","onClickOutside","reference","arrow","placement","onDimensionClick","selectedIds","ViewTitleBar","moreOptionsIsOpen","setMoreOptionsIsOpen","sharingDialogIsOpen","setSharingDialogIsOpen","redirectUrl","setRedirectUrl","onToggleStarredDashboard","onShowHideDescription","toggleSharingDialog","toggleMoreOptions","titleStyle","cursor","userSelect","StarBorder","showHideDescriptionLabel","toggleStarredDashboardLabel","buttonRef","createRef","userAccess","titleBar","actions","titleBarIcon","strip","update","editLink","manage","marginLeft","paddingTop","onRequestClose","black","minWidth","TitleBar","edit","DefaultPlugin","pluginCredentials","shouldPluginReload","prevProps","reloadAllowed","filtersChanged","vis","visualization","prevVis","visChanged","activeType","reloadPlugin","pluginManager","currentVis","useActiveType","credentials","getActiveType","auth","defaultHeaders","Authorization","options","componentDidUpdate","componentWillUnmount","getGridItemDomId","textDiv","FatalErrorBoundary","errorFound","componentDidCatch","info","container","ViewItemActions","actionButtons","itemActionsWrap","DeleteItemButton","deleteItemButton","red500","itemId","WarningIcon","PrintWarning","warning","Info","ItemHeader","forwardRef","dashboardMode","isShortened","rest","Actions","EditItemActions","PrintItemInfo","getItemActionsMap","itemHeaderWrap","itemTitle","iconFill","ItemHeaderButtons","setAnchorEl","onSelectActiveType","isTrackerType","onViewTable","handleClose","onViewChart","onViewMap","canViewAs","isSingleValue","isYearOverYear","VIS_TYPE_GAUGE","VIS_TYPE_PIE","interpretationMenuLabel","activeFooter","ViewAsMenuItems","pluginIsAvailable","small","Boolean","getLink","onToggleFooter","scrollContainer","line","border","grey100","ItemFooter","objectId","getId","LoadingMask","center","VisualizationErrorMessage","useConfig","visHref","grey400","errorMessage","appLink","memoizeOne","fn","lastArgs","lastValue","args","every","arg","i","Item","showFooter","configLoaded","pluginIsLoaded","isError","applyFilters","visRows","visColumns","columns","visFilters","dimensionFound","dimensionObjects","getFilterVersion","uniqueId","getPluginComponent","calculatedHeight","originalHeight","headerRef","current","clientHeight","ITEM_CONTENT_PADDING_BOTTOM","memoizedGetContentStyle","contentRef","offsetHeight","memoizedGetVisualizationConfig","memoizedApplyFilters","onLoadingComplete","forDashboard","mapViews","layer","hideTitle","onToggleItemExpanded","getContentStyle","measuredHeight","preferMeasured","onVisualizationLoaded","prevState","shortened","acSetActiveVisualizationType","grey200","Line","messageTypes","VALIDATION_RESULT","TICKET","SYSTEM","listStyleType","paddingLeft","seeAll","marginBottom","sender","lineHeight","snippet","maxHeight","overflow","MessagesItem","getMessageHref","msgIdentifier","messageType","getMessageSender","latestMsg","getMessageItems","modeClass","readClass","read","msgDate","document","location","messageCount","userSettings","string","MessagesContainer","NotSupportedItem","justifyContent","alignItems","align","grey500","DeleteIcon","getItemTitle","ListItem","tRemoveListItemContent","contentItems","index","el","getContentItems","contentItem","Description","itemicon","deleteButton","deletebutton","deleteicon","grey900","newContent","DEFAULT_STATE_PRINT_DASHBOARD","DEFAULT_DASHBOARD_ITEMS","NEW_PRINT_DASHBOARD_STATE","sGetPrintDashboardRoot","printDashboard","sGetIsPrinting","sGetPrintDashboardItems","whiteSpace","textField","fontStretch","onChangeText","updatedItem","viewItem","textDivStyle","editItem","onEdit","multiline","fullWidth","printItem","textItem","getIframeSrc","appDetails","iframeSrc","ouIds","ouFilter","path","AppItem","appKey","system","installedApps","app","src","SpacerItem","PageBreakItem","PrintTitlePageItem","titlePage","filterTitle","listItems","filterListItem","val","filterList","getItemFilterList","viewDashboard","sGetPrintDashboardName","sGetPrintDashboardDescription","GridItem","VisualizationItem","TextItem","getGridItem","ProgressiveLoadingContainer","shouldLoad","containerRef","shouldLoadHandler","handlerOptions","passive","checkShouldLoad","bufferPx","bufferFactor","innerHeight","rect","getBoundingClientRect","bottom","removeHandler","registerHandler","debounceMs","getElementsByClassName","eventProps","pick","ItemGrid","expandedItems","clickedId","isExpanded","onLayoutChange","newLayout","acUpdateDashboardLayout","onResizeStop","layout","oldItem","onItemResize","pluginResize","adjustHeightForExpanded","expandedItem","getItemComponent","itemClassNames","getItemComponents","translucent","MARGIN","cols","getGridColumns","rowHeight","GRID_ROW_HEIGHT","innerWidth","compactType","GRID_COMPACT_TYPE","isDraggable","isResizable","draggableCancel","validItems","hasShape","badgeContainer","borderRadius","badge","badgeRemove","FilterBadge","onRemove","count","FilterBar","onBadgeRemove","onBadgeClick","bar","removeItemFIlter","DEFAULT_STATE_WINDOW_HEIGHT","sGetWindowHeight","windowHeight","acSetPrintDashboard","acClearPrintDashboard","acAddPrintDashboardItem","isOneItemPerPage","acUpdatePrintDashboardItem","dashboardIsEditing","dashboardIsPrinting","clearEditDashboard","clearPrintDashboard","useEffect","querySelector","scroll","ConfirmDeleteDialog","onDeleteConfirmed","onContinueEditing","destructive","buttonBarStyle","EditBar","translationDialogIsOpen","dashboardModel","confirmDeleteDialogOpen","onConfirmDelete","onSave","newId","onPrintPreview","isPrintPreviewView","clearPrintPreview","showPrintPreview","onDiscard","onDiscardChanges","onDelete","onTranslationsSaved","translations","dbLocale","translation","property","onTranslate","fetchDashboardModel","toggleTranslationDialog","confirmDeleteDialog","deleteAccess","translationDialog","objectToTranslate","fieldsToTranslate","onTranslationSaved","onTranslationError","renderActionButtons","printPreviewText","updateAccess","discardBtnText","rightControls","topMargin","sGetIsNewDashboard","acSetDashboardDisplayName","PrintInfo","isLayout","a4LandscapeWidthPx","infoHeader","infoWrapper","infoList","divider","LessHorizontalIcon","PrintActionsBar","inner","LessHorizontal","print","getTransformYPx","elStyle","transformY","match","parseInt","PrintLayoutItemGrid","updateDashboardLayout","isFirstPageBreak","pageBreaks","sortedPageBreaks","sortBy","y","cx","isEditing","hideExtraPageBreaks","sortedElements","elements","types","elementsWithBoundingRect","from","classList","bottomY","getDomGridItemsSortedByYPos","querySelectorAll","pageBreakBottom","lastItemBottom","foundNonPageBreak","thisItemBottom","gridElement","firstBreak","scrollArea","EDIT_BAR_HEIGHT","isLeapPage","n","x","getMultiple","factor","multiple","PrintLayoutDashboard","initialized","initPrintLayoutDashboard","setPrintDashboard","MAX_ITEM_GRID_HEIGHT","updateDashboardItem","addDashboardItem","yPosList","pageNum","addPageBreaks","getWrapperStyle","fromEdit","spacers","dp24","wrapper","pageOuter","EditDashboard","initEditDashboard","setEditDashboard","renderGrid","NewDashboard","setNewDashboard","PrintItemGrid","PrintDashboard","initPrintDashboard","sortedItems","spacerCount","removeDashboardItem","MAX_ITEM_GRID_WIDTH_OIPP","MAX_ITEM_GRID_HEIGHT_OIPP","dashboardMap","dashboardsIsEmpty","dashboardsLoaded","routeId","params","selectDashboard","dashboardToSelect","preferredId","getItem","dash","sGetDashboardsSortedByStarred","setWindowHeight","getElementsByTagName","remove","setHeaderbarVisibility","onResize","App","setCurrentUser","fetchDashboards","setControlBarRows","setShowDescription","setDimensions","getChildContext","exact","childContextTypes","objectClean","conversations","$merge","d2Object","keyUiLocale","authorities","newState","$splice","$unshift","idToRemove","stateItems","layoutHasChanged","newStateItems","stateItem","si","configureStore","middleware","thunk","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","createStore","reducer","applyMiddleware","addResources","arTranslations","ar_IQTranslations","ckbTranslations","csTranslations","daTranslations","enTranslations","esTranslations","es_419Translations","frTranslations","idTranslations","kmTranslations","ko_KRTranslations","loTranslations","myTranslations","nbTranslations","nlTranslations","prsTranslations","psTranslations","ptTranslations","pt_BRTranslations","roTranslations","ruTranslations","svTranslations","tetTranslations","tgTranslations","ukTranslations","urTranslations","uzTranslations","uz_LatnTranslations","viTranslations","zhTranslations","zh_CNTranslations","d2Config","schemas","authorization","process","REACT_APP_DHIS2_AUTHORIZATION","headers","AppWrapper","store","theme","createMuiTheme","dhis2theme","i18nRoot","isNonNegativeInteger","Number","isInteger","minH","GRID_COLUMNS","static","itemWithShape","Error","col","row","itemWidth","MAX_ITEM_GRID_WIDTH","itemHeight","getShape","round","getOriginalHeight","isFunction","setViewportSize","clientWidth","itemTypeToExternalPlugin","getPlugin","hasIntegratedPlugin","reportTable","chart","eventReport","eventChart","getName","load","config","plugin","loadingIndicator","loadPlugin","fetch","apiFetchFavorite","getMapFields","resize","unmount","getVisualizationConfig","originalType","extractedMapView","mv","VIS_TYPE_COLUMN","VIS_TYPE_PIVOT_TABLE","AXIS_ID_COLUMNS","AXIS_ID_ROWS","splice","shift","AXIS_ID_FILTERS","getDimensionFields","getAxesFields","getFavoriteFields","withOptions","favoriteFields"],"mappings":"kHACAA,EAAOC,QAAU,CAAC,KAAO,yBAAyB,QAAU,4BAA4B,WAAa,iC,qBCArGD,EAAOC,QAAU,CAAC,KAAO,gCAAgC,KAAO,gCAAgC,SAAW,oCAAoC,WAAa,wC,qBCA5JD,EAAOC,QAAU,CAAC,OAAS,4BAA4B,KAAO,4B,qBCA9DD,EAAOC,QAAU,CAAC,SAAW,iCAAiC,SAAW,mC,qBCAzED,EAAOC,QAAU,CAAC,SAAW,kCAAkC,WAAa,oCAAoC,MAAQ,+BAA+B,aAAe,wC,qBCAtKD,EAAOC,QAAU,CAAC,eAAiB,+C,4CCAnCD,EAAOC,QAAU,CAAC,QAAU,8BAA8B,iBAAmB,uCAAuC,MAAQ,4BAA4B,YAAc,kCAAkC,aAAe,qC,qBCAvND,EAAOC,QAAU,CAAC,QAAU,8BAA8B,SAAW,+BAA+B,SAAW,+BAA+B,aAAe,mCAAmC,MAAQ,4BAA4B,SAAW,iC,4CCA/OD,EAAOC,QAAU,CAAC,UAAY,sCAAsC,KAAO,iCAAiC,QAAU,sC,qBCAtHD,EAAOC,QAAU,CAAC,iBAAmB,6C,qBCArCD,EAAOC,QAAU,CAAC,QAAU,iC,0TCIrB,SAASC,EAAQC,GACtB,OAAOC,MAAMC,QAAQF,GAASA,EAAQ,GAEjC,SAASG,EAASH,GACvB,OAAOI,IAASJ,GAASA,EAAQ,GAO5B,SAASK,EAAaC,GAC3B,OAAOA,EAAMC,OAAO,CAACC,EAAKC,KACxBD,EAAIC,EAAKC,IAAMD,EACRD,GACN,IAYE,MAAMG,EAAa,CAACC,EAAOC,KAChC,GAA2B,qBAAhBC,EAAOC,MAAwBA,KAAKC,eAAgB,CAC7D,MAAMC,EAASJ,GAAY,KAC3B,OAAO,IAAIE,KAAKC,eAAeC,EAAQ,CACrCC,KAAM,UACNC,MAAO,QACPC,IAAK,YACJC,OAAO,IAAIC,KAAKV,IAGrB,OAAOA,EAAMW,OAAO,EAAG,IAAIC,QAAQ,IAAK,MAoB7BC,EAAkB,CAACb,EAAOc,SAA2BC,IAAVf,GAAiC,OAAVA,EAAiBc,EAAed,EAClGgB,EAAaC,IACxB,MAAMC,EAAMD,EAAGE,IAAIC,SACbC,EAAMH,EAAII,QAAQC,QAAQ,QAChC,OAAOF,GAAO,EAAIH,EAAII,QAAQE,MAAM,EAAGH,GAAOH,EAAII,SAEvCG,EAAeC,GAAM,2BAAUA,GAAV,IAChC5B,QAAIiB,M,mDCrEN,ugCAaO,MAAMY,EAAgB,gBAChBC,EAAe,eACfC,EAAQ,QACRC,EAAM,MACNC,EAAe,eACfC,EAAc,cACdC,EAAM,MACNC,EAAU,UACVC,EAAY,YACZC,EAAQ,QACRC,EAAW,WACXC,EAAO,OACPC,EAAS,SACTC,EAAY,YACZC,EAAmB,mBAInBC,EAAsB7C,KAAU8C,EAAY9C,EAAK+C,MAAMF,oBACvDG,EAAaC,GAJI,cAIQH,EAAYG,GAAUC,WAC/CC,EAAsBF,GAJP,YAImBH,EAAYG,GAAUC,WACxDE,EAAsBH,GAAYH,EAAYG,GAAUI,kBAAoB,EAC5EC,EAAaL,GAAYH,EAAYG,GAAUM,SAAW,GAE1DT,EAAc,CACzB,CAAChB,GAAgB,CACf7B,GAAI6B,EACJ0B,aAAc,iBACdC,SAAU,gBACVC,YAAaC,IAAKC,EAAE,kBACpBC,OAAQ5D,GAAE,qCAAkCA,GAC5CsD,QAAS,kBACTF,iBAAkB,IAEpB,CAACtB,GAAe,CACd9B,GAAI8B,EACJyB,aAAc,iBACdC,SAAU,gBACVC,YAAaC,IAAKC,EAAE,gBACpBV,WAxB0B,YAyB1BL,qBAAqB,EACrBgB,OAAQ5D,GAAE,qCAAkCA,GAC5CsD,QAAS,mBAEX,CAACvB,GAAQ,CACP/B,GAAI+B,EACJwB,aAAc,iBACdC,SAAU,gBACVC,YAAaC,IAAKC,EAAE,UACpBV,WAlC0B,YAmC1BL,qBAAqB,EACrBgB,OAAQ5D,GAAE,qCAAkCA,GAC5CsD,QAAS,mBAEX,CAACtB,GAAM,CACLhC,GAAIgC,EACJuB,aAAc,OACdC,SAAU,MACVC,YAAaC,IAAKC,EAAE,QACpBV,WA5C0B,YA6C1BL,qBAAqB,EACrBgB,OAAQ5D,GAAE,4BAAyBA,GACnCsD,QAAS,QAEX,CAACrB,GAAe,CACdjC,GAAIiC,EACJsB,aAAc,eACdC,SAAU,cACVC,YAAaC,IAAKC,EAAE,iBACpBV,WArDwB,UAsDxBL,qBAAqB,EACrBgB,OAAQ5D,GAAE,qCAAkCA,GAC5CsD,QAAS,iBAEX,CAACpB,GAAc,CACblC,GAAIkC,EACJqB,aAAc,cACdC,SAAU,aACVC,YAAaC,IAAKC,EAAE,gBACpBV,WA/DwB,UAgExBL,qBAAqB,EACrBgB,OAAQ5D,GAAE,wCAAqCA,GAC/CsD,QAAS,oBAEX,CAACnB,GAAM,CACLoB,aAAc,OACdC,SAAU,SACVC,YAAaC,IAAKC,EAAE,SAEtB,CAACvB,GAAU,CACTpC,GAAIoC,EACJmB,aAAc,UACdC,SAAU,UACVC,YAAaC,IAAKC,EAAE,WACpBC,OAAQ,CAAC5D,EAAI8C,KACX,OAAQA,GACN,IAAK,OACH,MAAM,2CAAN,OAAkD9C,GAEpD,IAAK,sBACL,IAAK,cACL,QACE,MAAM,eAAN,OAAsBA,EAAtB,wBAAuC,IAAIY,MAAOiD,cAI1D,CAACxB,GAAY,CACXrC,GAAIqC,EACJkB,aAAc,YACdC,SAAU,YACVC,YAAaC,IAAKC,EAAE,aACpBC,OAAQ5D,GAAE,wBAAqBA,EAArB,UAEZ,CAACsC,GAAQ,CACPtC,GAAIsC,EACJiB,aAAc,QACdC,SAAU,QACVC,YAAaC,IAAKC,EAAE,SACpBC,OAAQ5D,GAAE,2DAAwDA,IAEpE,CAACwC,GAAO,CACNxC,GAAIwC,EACJgB,SAAU,QAEZ,CAACjB,GAAW,CACViB,SAAU,YAEZ,CAACf,GAAS,CACRe,SAAU,QAEZ,CAACd,GAAY,CACXc,SAAU,QAEZ,CAACb,GAAmB,CAClBa,SAAU,SAGDM,EAAkBhB,GAAQD,EAAYC,GAAMS,aAC5CQ,EAAa,CAACjB,EAAM/C,EAAMoB,KACrC,IAAI6C,EAUJ,OARIlB,IAASX,IACX6B,EAAMjE,EAAKkE,WAGTpB,EAAYC,IAASD,EAAYC,GAAMc,SACzCI,EAAG,UAAM9C,YAAWC,GAAjB,YAAwB0B,EAAYC,GAAMc,OAAO7D,EAAKC,GAAID,EAAK+C,QAG7DkB,GAEIE,EAAcpB,IACzB,OAAQA,GACN,KAAKhB,EACL,KAAKG,EACL,KAAKG,EACH,OAAO+B,IAET,KAAKpC,EACL,KAAKG,EACH,OAAOkC,IAET,KAAKpC,EACH,OAAOqC,IAET,KAAKlC,EACH,OAAOmC,IAET,KAAKjC,EACH,OAAOkC,IAET,KAAKjC,EACH,OAAOkC,IAET,KAAKhC,EACH,OAAOiC,IAET,KAAKlC,EACH,OAAOmC,IAET,KAAKjC,EACH,OAAOkC,IAET,QACE,OAAOC,O,qBCpMbzF,EAAOC,QAAU,CAAC,OAAS,8B,qBCA3BD,EAAOC,QAAU,CAAC,OAAS,0CAA0C,aAAe,gDAAgD,QAAU,6C,qBCA9ID,EAAOC,QAAU,CAAC,QAAU,wB,4CCA5BD,EAAOC,QAAU,CAAC,KAAO,mBAAmB,KAAO,mBAAmB,SAAW,uBAAuB,KAAO,mBAAmB,WAAa,yBAAyB,aAAe,6B,qBCAvLD,EAAOC,QAAU,CAAC,UAAY,wBAAwB,KAAO,mBAAmB,YAAc,0BAA0B,YAAc,0BAA0B,WAAa,yBAAyB,eAAiB,+B,qBCAvND,EAAOC,QAAU,CAAC,IAAM,yB,qBCAxBD,EAAOC,QAAU,CAAC,QAAU,uC,qBCA5BD,EAAOC,QAAU,CAAC,YAAc,+BAA+B,WAAa,8BAA8B,KAAO,wBAAwB,SAAW,4BAA4B,QAAU,6B,qBCA1LD,EAAOC,QAAU,CAAC,UAAY,mCAAmC,UAAY,mCAAmC,MAAQ,+BAA+B,KAAO,gC,qBCA9JD,EAAOC,QAAU,CAAC,QAAU,sCAAsC,UAAY,0C,4CCA9ED,EAAOC,QAAU,CAAC,QAAU,gCAAgC,UAAY,oC,y6+ICDjE,MAAMyF,EAAO,OACPC,EAAM,MAENC,EAAQ,QACRC,EAAe,eACfC,EAAaC,GAAQ,CAACL,EAAMC,GAAKK,SAASD,GAC1CE,EAAcF,GAAQ,CAACH,EAAOC,GAAcG,SAASD,GACrDG,EAAaH,GALN,SAKcA,ECNrBI,EAAqB,CAChCtF,GAAI,GACJuF,SAAU,GACVpF,SAAU,GACVqF,aAAa,GAwBR,MACMC,EAAmBC,GAASA,EAAMC,KAAKJ,S,2EC5B7C,MAAMK,EAAgB,+CAOvBC,EAAa9F,GAAQA,EAAK+C,OAASN,KAAQzC,EAAK+F,OAASF,EAElDG,EAA0BC,GAASA,EAAMC,IAAIlG,IACxD,IAAI+F,EAAO,KAQX,MAbqB/F,IAAQA,EAAK+C,OAASL,IAOvCyD,CAAenG,GACjB+F,EAAOF,EACEC,EAAW9F,KACpB+F,EAAO/F,EAAK+F,MAdoB,6BAiB3B,2BAAK/F,GACN+F,EAAO,CACTA,QACE,MAGKK,EAA0BH,GAASA,EAAMC,IAAIlG,IACxD,MAAM+C,EAtBoB/C,IAAQA,EAAK+C,OAASN,KAAQzC,EAAK+F,OAASF,EAsBzDQ,CAAoBrG,GAAQ0C,IAAS1C,EAAK+C,KACjDuD,EAAiBC,YAAsBvG,EAAKC,IAC5C8F,EAAOD,EAAW9F,GA1BU,8BA0BFA,EAAK+F,KAAgC,GAAK/F,EAAK+F,KAAO,KACtF,OAAO,uCAAK/F,GACG,OAAT+F,EAAgB,CAClBA,QACE,IAHN,IAIEhD,QACGuD,KCzBME,EAA2B,CACtCC,KAAM,KACNR,MAAO,IAEIS,EAAkB,GAEzBC,EAAsB,EAC1BhB,QACAiB,cACAC,OACA1G,YAJ0B,CAM1BsG,KAAK,2BAAMd,EAAMc,MAAb,IACF,CAACG,GAAD,2BAAoBjB,EAAMc,KAAKG,IAA/B,IACE,CAACC,GAAO1G,MAGZ8F,MAAON,EAAMM,QA8DR,MAAMa,EAAqBnB,GAASA,EAAMoB,WAgBpCC,EAAoB,CAACrB,EAAO1F,IAAOP,YAASoH,EAAmBnB,GAAOc,MAAMxG,GAC5EgH,EAAwBtB,GACO,OAAnCmB,EAAmBnB,GAAOc,KAUtBS,EAAoBvB,GAASjG,YAASoH,EAAmBnB,GAAOc,MAShEU,EAAqBxB,GAASmB,EAAmBnB,GAAOM,MAExDmB,EAAwBzB,GAAS0B,OAAOC,OAAOJ,EAAkBvB,IAAQ4B,OAAOC,IAAmC,IAAtBA,EAAUC,SACvGC,EAA0B/B,GAAS0B,OAAOC,OAAOJ,EAAkBvB,IAAQ4B,OAAOC,IAAmC,IAAtBA,EAAUC,SAezGE,EAAsBC,GAAQC,IAAUD,GAAM1B,IAAI4B,IAAC,CAC9D7H,GAAI6H,EAAE7H,GACN8H,KAAMD,EAAEC,KACRC,YAAaF,EAAEE,YACfC,YAAaH,EAAEG,YACfC,mBAAoBJ,EAAEI,mBACtBT,QAASK,EAAEK,SACXC,MAAON,EAAElC,KAAKmC,KACdM,QAASP,EAAEO,QAAQC,MAAM,KAAKC,KAAK,KAAKzH,OAAO,EAAG,IAClD0H,YAAaV,EAAEU,YAAYF,MAAM,KAAKC,KAAK,KAAKzH,OAAO,EAAG,IAC1D2H,OAAQX,EAAEW,OACVC,cAAepJ,YAAQwI,EAAEa,gBAAgBC,OACzCD,eAAgBvC,EAAwB0B,EAAEa,mB,aC7G7BE,kBAAgB,CAC7B5I,GA/BS,CAAC0F,EAX6B,KAWMmD,KAC7C,OAAQA,EAAO/F,MACb,IAhB2B,kBAiBzB,OAAO/B,YAAgB8H,EAAO3I,MAdK,MAgBrC,QACE,OAAOwF,IA0BXoD,UAtBgB,CAACpD,GApB6B,EAoBamD,KAC3D,OAAQA,EAAO/F,MACb,IAzBkC,yBA0BhC,OAAO/B,YAAgB8H,EAAO3I,OAvBY,GAyB5C,QACE,OAAOwF,IAiBXqD,gBAbsB,CAACrD,GA7B6B,EA6BmBmD,KACvE,OAAQA,EAAO/F,MACb,IAlCwC,+BAmCtC,OAAO/B,YAAgB8H,EAAO3I,OAhCkB,GAkClD,QACE,OAAOwF,MAUN,MAAMsD,EAAmBtD,GAASA,EAAMuD,SAClCC,EAAiBxD,GAASsD,EAAiBtD,GAAO1F,GAClDmJ,EAAwBzD,GAASsD,EAAiBtD,GAAOoD,UACzDM,GAA8B1D,GAASsD,EAAiBtD,GAAOqD,gB,cCvDrE,MACMM,GAAqB,CAACC,aAAiBC,MAAsBD,aAAiBE,OAYpF,MAAMC,GAAiB/D,GAASA,EAAMgE,W,eCZtC,MAIMC,GAA6B,GAiCnC,MAAMC,GAAsBlE,GAASA,EAAMmE,YAGrCC,GAAuBC,aAAe,CAACH,GAAqBH,IAAiB,CAACO,EAASN,IAAetC,OAAO6C,KAAKD,GAASnK,OAAO,CAACqK,EAAKlK,KACnJkK,EAAIC,KAAK,CACPnK,GAAIA,EACJ8H,KAAM4B,EAAWU,KAAKC,GAAaA,EAAUrK,KAAOA,GAAI8H,KACxDT,OAAQ2C,EAAQhK,GAAIiG,IAAI/F,IAAK,CAC3BF,GAAIE,EAAMF,GACV8H,KAAM5H,EAAM6H,aAAe7H,EAAM4H,UAG9BoC,GACN,KC7CUI,GAAqBtK,IAAE,CAClC8C,KDHgC,qBCIhC9C,O,yBCUK,MAAMuK,GAAmB7E,GAASA,EAAM8E,S,cClBxC,MCWMC,GAAe,IAAMC,UAChC,IACE,MAAMF,ODbiB,MACzB,MACMxG,EAAG,uCADM,qHACN,gCACT,OAAO2G,yBAAcC,KAAKzJ,GAAMA,EAAGE,IAAIC,SAASuJ,IAAI7G,IAAM8G,MAAMC,GAASC,QAAQC,IAAI,SAAUF,KCUtEG,IACjB,qBACJC,GACEX,EACJ,OAAOY,EAV0B,CACnCtI,KFP+B,oBEQ/B5C,MAQmCiL,IACjC,MAAOE,GACP,OAjBaxC,EAiBE,eAjBMkC,EAiBUM,EAhBjCL,QAAQC,IAAR,0BAA+BpC,EAA/B,aAA0CkC,IACnCA,EAFO,IAAClC,EAAQkC,GCDZO,GAAyB,CACpCC,QAAS,GACTC,SAAU,KACVC,MAAM,GAqBD,MCrBMC,GAAkB,MAC7B5I,KDL4B,mB,yBEGvB,MAEM6I,GAA+B,GAEtCC,GAAUC,QAAW5K,IAAN4K,GAAyB,OAANA,EA2BjC,MAEMC,GAAoB,CAACpG,EAAO1F,IAFH0F,IAASA,EAAMqG,eAG5CC,CAAuBtG,GAAO1F,GCrC1BiM,GAAqB/L,IAAK,CACrC4C,KDE+B,oBCD/B5C,U,mCCAK,MAAMgM,GAAUnB,GAASC,QAAQC,IAAI,UAAWF,GAE1CoB,GAA0B,EACrCC,gBACE,KAAOC,KAAW,CAAC,KAAM,OAAQ,QAAS,IAAK,IAAK,kBAAmB,mBAAoB,WAAY,OAAQ,SAA7F,UAA0GC,eAAoBhE,KAAK,MAAQ8D,EAAY,UAAMG,aAAmB,CACpMC,eAAgBJ,EAAaI,iBAC5BlE,KAAK,MAFqK,KAIhKmE,GAAqB,EAChCC,YACAN,gBACE,KAAOC,KAAW,CAAC,GAAD,OAAIM,eAAkBrE,KAAK,MAAQ,cAAe,qBAAsB,WAAxE,eAA4FqE,aAAgB,CAChIC,QAAQ,IACPtE,KAAK,KAFc,KAEL,UAAW,cAAe,SAAUoE,EAAS,yBAAqBP,GAAwB,CACzGC,iBACC9D,KAAK,KAFsD,UCPjDuE,GAAoB7M,GAAM2K,yBAAcC,KAAKzJ,GAAMA,EAAG2L,OAAOvF,UAAUsD,IAAI7K,EAAI,CAC1F+M,OAAQV,KAAWI,GAAmB,CACpCC,WAAW,EACXN,aAAc,CACZI,gBAAgB,MAEhBlE,KAAK,QACPwC,MAAMoB,ICbGc,GAAetC,cADSA,gBAAoBvJ,EAAG8L,YAAYC,UAAUC,IADzD,aAGIC,CAAsBjM,SACrBA,EAAG8L,YAAYC,UAAUrC,IAJ9B,mBAIqD1J,EAAG8L,YAAYC,UAAUG,OAJ9E,aAMZC,GAA4B5C,MAAO6C,EAAKrN,KACnD,MAAMiB,QAAWwJ,yBAEjB,aADiBqC,GAAa7L,IACpBqM,IAAID,EAAKrN,IAERuN,GAA2B/C,MAAO6C,EAAKvM,KAAkB,IAAD,EACnE,MAAMG,QAAWwJ,yBACX+C,QAAWV,GAAa7L,GAG9B,OAFY,OAAGuM,QAAH,IAAGA,GAAH,UAAGA,EAAIzD,YAAP,aAAG,EAAUG,KAAKuD,GAAKA,IAAMJ,UAG1BG,EAAG7C,IAAI0C,UAEdD,GAA0BC,EAAKvM,GACrCgK,QAAQC,IAAI,mDACLjK,I,yBChBX,MACa4M,GAAsB,CACjC9F,KAAM,GACNhF,KAHwB,qBAMpB+K,GAAyB,EAC7BtC,aAEuB,kBAAZA,EAEF,yCACa,0BAAMuC,MAAO,CAC7BC,WAAY,MACVxC,EAAQzD,MAAa,IAHpB,aAQFyD,EA4BMyC,mBAnBStI,IACtB,MAAM,QACJ6F,EADI,SAEJC,EAFI,KAGJC,GPZwB/F,IAASA,EAAMuI,UAAY3C,GOajD4C,CAAaxI,GACjB,MAAO,CACLyI,aAAc1C,EACd2C,gBAAiB7C,EACjB8C,iBAAkB7C,IAUkB,CACtC8C,gBAAiB5C,IADJsC,CAzBgBO,GACtB,kBAAC,KAAD,CAAUT,MAAO,CACtBU,OAAQ,OACP/C,KAAM8C,EAAMJ,aAAc5C,QAAS,kBAACsC,GAAD,CAAwBtC,QAASgD,EAAMH,kBAAqBK,iBAAkBF,EAAMF,iBAAkBK,QAASH,EAAMD,mB,UCftJ,MAAMK,GAAkBzO,IAAK,CAClC4C,Kfd6B,kBee7B5C,UAEW0O,GAAyB1O,IAAK,CACzC4C,KfjBoC,yBekBpC5C,UAEW2O,GAA+B3O,IAAK,CAC/C4C,KfpB0C,+BeqB1C5C,UAGW4O,GAA4B9O,GAAM0K,MAAOU,EAAU2D,KAC9D3D,EAASwD,IAAuB,IAChC,MAAMI,EAAkBC,WAAW,KACjC,MAAMC,GAAiBnI,EAAkBgI,IAAY/O,IAAOyG,GAAiBsB,YAEzEoB,EAAsB4F,MAAeG,IACvCtB,GAAoB9F,KAAOoH,EAC3B9D,EPnCwC,CAC5CtI,KDFuC,4BCGvC5C,MOiCuC,CACjCqL,QAASqC,GACTnC,MAAM,OAGT,KAEG0D,EAAYlG,IAChBmC,EAASgE,GAAmBnG,IAC5B,MAAMoG,EAAkB3H,EAAoBuB,GAAU,GC5CjB,IAAC1D,EAAUoB,ED0EhD,OA7BAyE,EAASkE,GAAoBC,YAAUF,EAAgB3G,kBC7CjBnD,ED8CZE,EAAiBsJ,KC9CKpI,ED8CQ3G,EC7C1DwP,aAAaC,QAAb,kCAAgDlK,GAAYoB,GD8C1D0I,EAAgB3G,eAAegH,QAAQ3P,IACrC,OAAQA,EAAK+C,MACX,KAAKhB,IACL,KAAKC,IACL,KAAKC,IACL,KAAKC,IACL,KAAKC,IACHkJ,EAASa,GAAmB0D,aAAgB5P,KAC5C,MAEF,KAAKwC,IACH6I,EAASX,SAQXzK,IAAOkJ,EAAe6F,MACxB3D,EZzD4B,CAChCtI,KDVgC,uBaqE9BsI,EAASuD,GAAgB3O,IACzBoL,EAASwD,IAAuB,IAChCgB,aAAaZ,GACb5D,EPrE2B,CAC7BtI,KDL4B,mBQ0EnBmG,GAQT,IAEE,OAAOkG,QADiBtC,GAAkB7M,IAE1C,MAAOqL,GACP,OATcN,EASCM,EARfL,QAAQC,IAAI,UAAWF,GAChBA,EAFOA,OAYL8E,GAAsB,IAAMnF,UAUvC,IACE,MAAM3B,OElG2B2B,gBAAkB+C,GAD1B,mBjBMyB,Ge6FpBqC,GAC9B,YAVA1E,EAASyD,GAUQ9F,IACjB,MAAOsC,GACP,OATcN,EASCM,EARfL,QAAQC,IAAI,kCAAmCF,GACxCA,EAFOA,OAYLgF,GAAyB7P,GAASwK,UAU7C,IAEE,YEnHkCA,gBAAuB4C,GAFhC,kBAEgFpN,GFkHnG8P,CAAuB9P,QAT7BkL,EAASyD,GAA6B3O,IAWtC,MAAOmL,GACP,OATcN,EASCM,EARfL,QAAQC,IAAI,kCAAmCF,GACxCA,EAFOA,OGnGLqE,GAAqBtI,IAAU,CAC1ChE,KnBR4B,iBmBS5B5C,MAAOP,YAAa+H,EAAoBZ,MAY7BwI,GAAsBpP,IAAK,CACtC4C,KnBnBiC,sBmBoBjC5C,UAGW+P,GAAmB,IAAMvF,UACpC,MAAMwF,QN7BgCvF,yBAAcC,KAAKzJ,GAAMA,EAAG2L,OAAOvF,UAAU4I,KAAK,CACxFpD,OAAQ,CAACN,KAAqBnE,KAAK,KAAM,sBAAsBA,KAAK,KACpE8H,OAAQ,WACNtF,MAAMoB,IMEqBpF,MAyB7BsE,GAzB6BtE,EAyBJoJ,EAAWG,UAzBG,CACvCvN,KnBL4B,iBmBM5B5C,MAAOP,YAAa+H,EAAoBZ,QAoD7BwJ,GAAiB,CAACtQ,EAAIuQ,IAAc7F,UAW/C,IAEE,YN1D4B,EAAC1K,EAAIuQ,KACnC,MAAMvM,EAAG,qBAAiBhE,EAAjB,aACT2K,yBAAcC,KAAKzJ,IACboP,EACFpP,EAAGE,IAAIC,SAASkP,KAAKxM,GAErB7C,EAAGE,IAAIC,SAASmP,OAAOzM,MMmDnB0M,CAAiB1Q,EAAIuQ,GAXXvQ,KAChBoL,EAhDiC,EAACzE,EAAa4J,KAAd,CACnCzN,KnBXmC,wBmBYnC6D,YAAaA,EACbzG,MAAOqQ,IA6CII,CAAsB3Q,EAAIuQ,IAC5BvQ,GAUAmP,CAAUnP,GACjB,MAAOqL,GACP,OATcN,EASCM,EARfL,QAAQC,IAAI,6BAA8BF,GACnCA,EAFOA,OAYL6F,GAAmB5Q,GAAM0K,UACpC,IAGE,YNzD8B1K,IACzB2K,yBAAcC,KAAKzJ,GACjBA,EAAG2L,OAAOhG,WAAW+D,IAAI7K,GAAI4K,KAAKrD,GAAaA,EAAUkJ,WAC/D3F,MAAMoB,IMoDD2E,CAAmB7Q,SACnBoL,EAAS6E,MACRa,QAAQC,UACf,MAAO1F,GAEP,OADAL,QAAQC,IAAI,4BAA6BI,GAClCA,ICxEIzC,mBAAgB,CAC7BoI,SAXe,CAACtL,EAF2B,EAEYmD,KACvD,OAAQA,EAAO/F,MACb,IALoC,2BAMlC,OAAO/B,YAAgB8H,EAAO3I,MALS,GAOzC,QACE,OAAOwF,MAcN,MAEMuL,GAAyBvL,GAFJA,IAASA,EAAMwL,WAEFC,CAAmBzL,GAAOsL,SCzB5DI,GAA0BC,IAAI,CACzCvO,KDDsC,2BCEtC5C,MAAOmR,IAGIC,GAAqB,IAAM5G,UAUtC,IACE,MAAM6G,OChB0B7G,gBAAkB+C,GAD1B,iBFEiB,GCeZ+D,GAC7B,YAVApG,EAASgG,GAUQG,IACjB,MAAOlG,GACP,OATcN,EASCM,EARfL,QAAQC,IAAI,iCAAkCF,GACvCA,EAFOA,OEXL0G,GAAmB,CAC9BC,cAAe,aACfC,0BAA2B,iBAC3BC,+BAAgC,QAChCC,oBAAqB,cACrB1R,SAAU,KACV2R,qBAAsB,IAqBjB,MAAMC,GAAerM,GAASA,EAAMsM,SAC9BC,GAAkCvM,GAASqM,GAAarM,GAAOmM,oBCvB/DK,GAAiB/Q,GAAMuJ,MAAOU,EAAU2D,KAUnD,IACE,MAAMoD,EAAkBF,GAAgClD,KAClDrF,QAAmB0I,aAAmBjR,EAAIgR,GAGhD,MAdgBzI,KAChB0B,EAN2B1B,KAAU,CACvC5G,KtBH4B,iBsBI5B5C,MAAOwJ,IAII2I,CAAgB3I,KAalByF,CADoBzF,EAAWpC,OAAOgL,GAA6B,aAAtBA,EAAIC,eAAsD,aAAtBD,EAAIC,eAA0D,cAA1BD,EAAIE,oBAEhI,MAAOnH,GACP,OAZcN,EAYCM,EAXfL,QAAQC,IAAI,+BAAgCF,GACrCA,EAFOA,O,oECNlB,MAAM0H,WAAmBC,IAAMC,UAC7BC,YAAYrE,GACVsE,MAAMtE,GADW,KAOnBuE,YAAc,KACZC,KAAKC,SAAS,CACZC,UAAU,IAEZC,OAAOC,iBAAiB,YAAaJ,KAAKK,QAC1CF,OAAOC,iBAAiB,UAAWJ,KAAKM,YAZvB,KAcnBD,OAASE,IACPA,EAAMC,iBACND,EAAME,kBACN,MAAMC,EAAYH,EAAMI,QAEpBX,KAAKxE,MAAMoF,gBAAkBF,IAAcV,KAAKxE,MAAMqF,QAAUH,EAAY,GAC9EI,sBAAsB,KACpBd,KAAKxE,MAAMoF,eAAeF,MArBb,KAyBnBJ,UAAY,KACVN,KAAKC,SAAS,CACZC,UAAU,IAEZC,OAAOY,oBAAoB,YAAaf,KAAKK,QAC7CF,OAAOY,oBAAoB,UAAWf,KAAKM,WAEvCN,KAAKxE,MAAM8E,WACbN,KAAKxE,MAAM8E,aA/BbN,KAAKrN,MAAQ,CACXuN,UAAU,GAkCdc,mBACE,MAA4C,oBAA9BhB,KAAKxE,MAAMoF,eAAgC,yBAAKK,UAAWC,KAAQC,WAAYpG,MAAO,CAClG8F,OA1C4B,GA2C3BO,YAAapB,KAAKD,cAAkB,KAGzCsB,SACE,MAAMR,EAASS,KAAKC,IAAIvB,KAAKxE,MAAMqF,OAAQ,GA/Cb,EAgDxBW,EAAYnN,OAAOoN,OAAO,CAC9BZ,SACAa,gBAAiB1B,KAAKxE,MAAMmG,SAAWC,IAAOC,UAAYD,IAAOE,MACjEC,cAnD4B,GAqD9B/B,KAAKrN,MAAMuN,SAAW,CACpB8B,WAAY,QACV,IACJ,OAAO,yBAAKjH,MAAOyG,EAAWP,UAAWC,KAAQe,MACrC,yBAAKhB,UAAWC,KAAQgB,SAAUlC,KAAKxE,MAAM2G,UAC5CnC,KAAKgB,qBAsCtBtB,GAAW0C,aAAe,CACxBxB,eAAgB,KAChBN,UAAW,MAEEZ,UC1FA2C,OAXE,EACfpB,eACI,yBAAKA,UAAWA,EAAWqB,MAAM,6BAA6BC,QAAQ,aACpE,0BAAMzN,EAAE,gBAAgB0N,KAAK,SAC7B,0BAAM1N,EAAE,6FACR,0BAAMA,EAAE,gBAAgB0N,KAAK,U,0BC0BtBC,OA1BkB,EAC/BhO,UACAyB,WACAwM,QACA9O,kBAEA,MAAM+O,EAAY,CAChBzM,YAGF,GAAIzB,EAAS,CACX,MAAMmO,EAAgB1M,EAAWgL,KAAQhL,SAAWgL,KAAQ2B,WAC5DF,EAAUG,KAAO,kBAACC,GAAD,CAAU9B,UAAS,UAAKC,KAAQ4B,KAAb,YAAqBF,KAG3D,OAAO,kBAAC,IAAD,CAAM3B,UAAWC,KAAQ8B,KAAMC,GAAE,WAAMrP,GAAesP,QAASC,KAAS,ICtB5CxL,OAAOyL,EAAWnW,KACrD,MAAMmB,QAAWwJ,yBACX3G,EAAG,mCAA+BmS,EAA/B,qBAAqDnW,GAC9DmB,EAAGE,IAAIC,SAASkP,KAAKxM,IDmBgEoS,CAAsB,iBAAkBzP,GAAc,MACjI,kBAAC,IAAS+O,EAAYD,KEjBnBY,OAJO,IAAM,yBAAKhB,MAAM,6BAA6BiB,MAAM,KAAK1C,OAAO,KAAK2B,KAAMZ,IAAO4B,QAASjB,QAAQ,aACjH,0BAAMzN,EAAE,0M,iECUD2O,OAVG,EAChBxC,eACI,yBAAKA,UAAWA,EAAWuB,KAAMZ,IAAO8B,QAASpB,MAAM,6BAA6BC,QAAQ,aAC1F,0BAAMzN,EAAE,0GACR,0BAAMA,EAAE,gBAAgB0N,KAAK,U,sBCMtBmB,OAVY,EACzBC,aACI,4BAAQ3C,UAAWC,KAAQ2C,OAAQX,QAASU,GAC1C,8BACI,kBAACE,GAAD,CAAW7C,UAAWC,KAAQ4B,KAAMiB,MAAM,aCN/C,MAGMC,GAAY,CAAC,CACxB/W,GAAI,MACJE,MAAO,aACN,CACDF,GAAI,KACJE,MAAO,iBACN,CACDF,GAAI,SACJE,MAAO,sBAsBI8W,GAAwCD,GAAU,GAAG/W,GAiCnD4I,mBAAgB,CAC7Bd,KA/BW,CAACpC,EAJsC,GAIQmD,KAC1D,OAAQA,EAAO/F,MACb,IAtCsC,6BAuCpC,OAAO/B,YAAgB8H,EAAO3I,MAPgB,IAShD,QACE,OAAOwF,IA0BXyC,MAtBY,CAACzC,EAAQsR,GAAuCnO,KAC5D,OAAQA,EAAO/F,MACb,IA/CuC,8BAgDrC,OAAO/B,YAAgB8H,EAAO3I,MAjBgB,IAmBhD,QACE,OAAOwF,IAiBXuR,MAbY,CAACvR,EA1CT,WA0CwDmD,KAC5D,OAAQA,EAAO/F,MACb,IAxDuC,8BAyDrC,OAAO/B,YAAgB8H,EAAO3I,MA7C9B,YA+CF,QACE,OAAOwF,MAUN,MAAMwR,GAA2BxR,GAASA,EAAMyR,iBAE1CC,GAAiB1R,GAASwR,GAAyBxR,GAAOoC,KClEjEuP,GAAS,CACbC,YAAa,CACXC,SAAU,OACVjB,MAAO,QACP1C,OAAQ,OACR4D,IAAK,QAEPC,WAAY,CACVX,MAAOnC,IAAO+C,QACdpB,MAAO,OACP1C,OAAQ,SAKL,MAAM+D,WAAehF,YAC1BC,YAAYrE,GACVsE,MAAMtE,GADW,KAanBqJ,eAAiBtE,IACfA,EAAMC,iBACNR,KAAKxE,MAAMsJ,aAAavE,EAAMwE,OAAO5X,QAfpB,KAiBnB6X,YAAczE,IACZ,OAAQA,EAAM0E,SACZ,KAtBuB,GAuBrBjF,KAAKxE,MAAM0J,kBACX,MAEF,KAzBwB,GA0BtBlF,KAAKxE,MAAMsJ,iBAtBf9E,KAAKrN,MAAQ,CACXxF,MDK8C,ICDlDgY,0BAA0BC,GACxBpF,KAAKC,SAAS,CACZ9S,MAAOiY,EAAUrQ,OAuBrBsM,SACE,MAAM,QACJH,EADI,KAEJnM,EAFI,aAGJ+P,GACE9E,KAAKxE,MACH6J,EAAiB,kBAAC,KAAD,CAAgBC,SAAS,SACpC,kBAAC,KAAD,CAAYrE,UAAWC,EAAQwD,cAErCa,EAAwB,KAATxQ,GAAwB,OAATA,EAAgB,kBAAC,KAAD,CAAgBuQ,SAAS,OAC7D,kBAAC,GAAD,CAAa1B,QAAS,IAAMkB,OACZ,KAChC,OAAO,kBAAC,KAAD,CAAY7D,UAAWC,EAAQqD,YAAaiB,YAAa7U,IAAKC,EAAE,0BAA2ByU,eAAgBA,EAAgBE,aAAcA,EAAcpY,MAAO6S,KAAKrN,MAAMxF,MAAOsY,SAAUzF,KAAK6E,eAAgBa,QAAS1F,KAAKgF,eAUxOJ,GAAOxC,aAAe,CACpBrN,KAAM,GACN+P,aAAca,SAASC,WAEVC,4BAAWvB,GAAXuB,CAAmBjB,I,sBC7DnBkB,OAlBe,EAC5B5C,UACA6C,cACAC,cAEO,yBAAKjL,MAAO,CACjBkL,UAAW,WAEFD,EAAW,yBAAK/E,UAAWC,KAAQ8E,UAAWrV,IAAKC,EAAE,cAAsB,yBAAKqQ,UAAWC,KAAQgF,SAAUhD,QAASA,GAC9G6C,EAAcpV,IAAKC,EAAE,aAAeD,IAAKC,EAAE,eCbzD,MAMMuV,GAAgB7H,GANS,GAO7BA,EAKI8H,GAAsB9H,GAC1B6H,GAAc7H,GATe+H,G,yBCgB/B,MAAMC,WAAsB1G,YAAW,eAAD,oBAC3CjN,MAAQ,CACN2L,KDpByB,GCkBgB,KAI3CiI,yBAA2BjI,IACzB0B,KAAKC,SAAS,CACZ3B,OACAyH,YARuB,KAQVzH,KAP0B,KAmB3CsC,eAAiBF,IACf,MAAM8F,EAAiB9F,EAAY,GAE7B+F,EAAUnF,KAAKC,IDxCI,GAOOV,ECiC6B2F,EDhCxDlF,KAAKoF,OAAO7F,EANiBwF,IAJA,MASFxF,MCmChC,GAAI4F,IAAYzG,KAAKrN,MAAM2L,KAAM,CAC/B,MAAMqI,EAAcrF,KAAKsF,IAAIH,EA1BN,IA2BvBzG,KAAKxE,MAAMoF,eAAe+F,KA1Ba,KA6B3CrG,UAAY,Id9CuB3I,gBAAuB4C,GAFhC,iBAE+EpN,Gc+ChG0Z,CAAsB7G,KAAKrN,MAAM2L,MA9BC,KAgC3CwI,kBAAoB,KAClB,MAAMxI,EAlCmB,KAkCZ0B,KAAKrN,MAAM2L,KAAyB0B,KAAKxE,MAAMyC,SAlCnC,GAmCzB+B,KAAKC,SAAS,CACZ3B,OACAyH,aAAc/F,KAAKrN,MAAMoT,eApCc,KAuC3CgB,kBAAoB,KAClB/G,KAAKxE,MAAMwL,QAAQ5P,KAAnB,WAA4B4I,KAAKxE,MAAMzH,WAAW,GAAG9G,MA7BvDga,oBACEjH,KAAKuG,yBAAyBvG,KAAKxE,MAAMyC,UAG3CkH,0BAA0BC,GACxBpF,KAAKuG,yBAAyBnB,EAAUnH,UA2B1CoD,SACE,MAAM,WACJtN,EADI,KAEJgB,EAFI,WAGJmS,EAHI,mBAIJC,GACEnH,KAAKxE,MACH4L,EAAWpH,KAAKrN,MAAMoT,YAnDH,GAmDiC/F,KAAKrN,MAAM2L,KAC/D+I,EAAmBjB,GAAoBgB,GACvCE,EAAsB,CAC1BC,QAAQ,GAAD,ODxE2B,GCwE3B,gBACPC,UAAWxH,KAAKrN,MAAMoT,YAAc,OAAS,SAC7ClF,OAAQsF,GAAciB,GD1EY,IC4EpC,OAAO,kBAAC,GAAD,CAAYvG,OAAQwG,EAAkBzG,eAAgBZ,KAAKY,eAAgBN,UAAWN,KAAKM,UAAWqB,UAAU,GAC3G,yBAAK5G,MAAOuM,GACR,yBAAKrG,UAAWC,KAAQuG,cACpB,kBAAC,IAAD,CAAM1M,MAAO,CACzB2M,QAAS,eACTC,eAAgB,OAChBC,YAAa,GACbtC,SAAU,WACVb,IAAK,OACJxB,GAAI,QACW,kBAAC4E,GAAD,OAEJ,kBAAC,GAAD,CAAQ9S,KAAMA,EAAM+P,aAAcqC,EAAoBjC,gBAAiBlF,KAAK+G,qBAE/Eza,YAAQyH,GAAYb,IAAIsB,GAAa,kBAAC,GAAD,CAAMgG,IAAKhG,EAAUvH,GAAIyV,MAAOlO,EAAUQ,YAAaP,QAASD,EAAUC,QAASb,YAAaY,EAAUvH,GAAIiJ,SAAU1B,EAAUvH,KAAOia,MAEnL,kBAAC,GAAD,CAAgBhE,QAASlD,KAAK8G,kBAAmBf,YAAa/F,KAAKrN,MAAMoT,YAAaC,SA1EzE,KA0EmFhG,KAAKxE,MAAMyC,aAM3H,MAOM6J,GAAqB,CACzBlH,eAAgBvC,GAChB8I,mBC3G6Bha,IAAK,CAClC4C,KLDwC,6BKExC5C,WD+Ha4a,mBAAW9M,YA/BFtI,IAAK,CAC3BoB,WAAYG,EAAkBvB,GAC9BoC,KAAMsP,GAAe1R,GACrBsL,SAAUC,GAAuBvL,GACjCuU,WAAY/Q,EAAexD,KA2BsBmV,GAnBhC,CAACE,EAAYC,EAAeC,KAC7C,MAAMnU,EAAaM,OAAOC,OAAO5H,YAASsb,EAAWjU,aAC/CoU,EAAoBC,IAAUrU,EAAWQ,OAAOO,GAAKA,EAAEE,YAAYqT,cAAcjW,SAAS4V,EAAWjT,KAAKsT,gBAAiB,MAAO,eACxI,OAAO,mDAAKL,GACPE,GACAD,GAFL,IAGElU,WAAY,IAAIoU,EAAkB5T,OAAOO,GAAKA,EAAEL,YAAa0T,EAAkB5T,OAAOO,IAAMA,EAAEL,aAaxEwG,CAAyDqL,KE5GpErL,mBARStI,IAAK,CAC3BsL,SAAUC,GAAuBvL,KAOpBsI,CAhBiBO,IAC9B,MAAM8C,EAAO9C,EAAMmG,SHLQ,EGKmBnG,EAAMyC,SAC9CqK,EAAYlC,GAAoB9H,GbLN,EaMhC,OAAO,yBAAK2C,UAAU,4BAA4BlG,MAAO,CACvDuN,iBCMWC,OAdiB,EAC9BxV,UACI,yBAAKgI,MAAO,CAChBwM,QAAS,YACTtB,UAAW,SACXzB,SAAU,OACVxJ,WAAY,IACZ+I,MAAOnC,IAAO4G,UAEPzV,G,qBCIM0V,OAZQ,EACrBC,WACI,kBAAC,IAAD,CAAUC,OAAK,EAACnO,IAAKkO,EAAO1C,UAAQ,EAACtD,MAAO,0BAAM3H,MAAO,CAC7DgJ,MAAOnC,IAAO8B,QACd1I,WAAY,QAEG0N,KCIFE,OAVI,EACjB3H,eACI,yBAAKA,UAAWA,EAAWqB,MAAM,6BAA6BiB,MAAM,KAAK1C,OAAO,KAAK2B,KAAMZ,IAAO4G,QAASjG,QAAQ,aACjH,0BAAMzN,EAAE,gBAAgB0N,KAAK,SAC7B,0BAAM1N,EAAE,wI,sBCChB,MAAM+T,GAAa,EACjB5X,SACI,uBAAGiS,QAAS4F,GAAKA,EAAErI,kBAAmBQ,UAAWC,KAAQ6H,WAAYhE,OAAO,SAASiE,IAAI,sBAAsBC,KAAMhY,GACnH,kBAACiY,GAAD,OAOFC,GAAe,IAAM,4BAAQlI,UAAWC,KAAQkI,cAAezY,IAAKC,EAAE,WAkC7DyY,OAhCS,EACtBtZ,OACAgF,OACAuU,WACArY,MACAsY,cAEA,MAAMC,EAAWrY,YAAYpB,GACvB0Z,EAAmB1Z,IAASjB,IAAgB4a,KAAaH,GAAW,kBAACC,EAAD,CAAUzO,MAAO,CACzFyH,KAAMZ,IAAO4G,WAEf,OAAO,kBAAC,IAAD,CAAUG,OAAK,EAACzF,QAASoG,EAAU5G,MAAO,yBAAKzB,UAAWC,KAAQyI,UACvD,yBAAK1I,UAAWC,KAAQwB,OACpB,0BAAM3H,MAAO,CAC7B6M,YAAa,QAEQ6B,GAEL,8BAAO1U,GACN9D,EAAM,kBAAC4X,GAAD,CAAY5X,IAAKA,IAAU,MAEtC,kBAACkY,GAAD,UCtCb,MAWMS,GAA+B,GAC/BC,GAAsB,CACjC5c,GAAI,GACJ8H,KAAM,GACNU,OAAQ,GACRR,YAAa,GACbU,eAAgB,GAChBmU,kBAAkB,GA6Hb,MAAMC,GAAwBpX,GAASA,EAAMqX,cAEvCC,GAAgBtX,IAAUkG,KAAQlG,EAAMqX,eACxCE,GAAyBvX,GAASoX,GAAsBpX,GAAOmX,iBAM/DK,GAAyBxX,GAASjG,YAASqd,GAAsBpX,IAAQgD,e,cC1JtF,MAAMwD,GAAUnB,GAASC,QAAQC,IAAI,UAAWF,GAE1CoS,GAAgB,CAAC5V,EAAWI,KAChC,MAAM,KACJG,EADI,YAEJE,EAFI,eAGJU,GACEf,EAOJ,OANAJ,EAAUO,KAAOA,EACjBP,EAAUS,YAAcA,EACxBT,EAAUmB,eAAiBA,EAAezC,IAAIlG,GAAQqH,OAAOoN,OAAO,GAAIzU,EAAM,CAC5EuW,MAAOvW,EAAKqd,EACZxJ,OAAQ7T,EAAKsd,KAER9V,EAAU+V,OAAO1S,KAAK2S,GAAOA,EAAIC,SAASC,MCYtCC,GAAuB,MAClC5a,KFxBkC,yBE4CvB6a,GAAqB5d,IAChC,MAAM+C,EAAO/C,EAAK+C,YACX/C,EAAK+C,KACZ,MAAM8a,EAAe/a,IAAYC,GAAMU,SACjCxD,EAAK6d,yBACLC,EAAqBxX,YAAsBtG,GACjD,IAAI+d,EAEJ,GAAIjb,IAASJ,IAAW,CACtB,MAAMsb,EAAOje,EAAKie,MAAQ,EAC1BD,EAAQE,YAAsBD,EAAMje,EAAKme,eAEzCH,EADSjb,IAASH,IACVwb,cAEAC,IAGV,MAAO,CACLtb,KF1D8B,qBE2D9B5C,MAAM,qCACJF,KACA8C,OACAuV,SAAUtY,EAAKsY,UAAY,KAC3B,CAACuF,GAAe7d,EAAKkV,SAClBmJ,KACAN,GACAC,KAIIM,GAAwBte,IAAI,CACvC+C,KFrEmC,wBEsEnC5C,MAAOH,IAEIue,GAAwBpe,IAAK,CACxC4C,KF1EmC,wBE2EnC5C,UAGWqe,GAAiB,IAAM7T,MAAOU,EAAU2D,KACnD,MAAMxH,EAAYuV,GAAsB/N,KAClCyP,EAAe,2BAAQjX,GAAR,IACnBmB,eAAgB3C,EAAwBwB,EAAUmB,gBAClDZ,KAAMP,EAAUO,MAAQpE,IAAKC,EAAE,wBAGjC,IACE,MAAMgD,EAAc6X,EAAgBxe,SD7ET2H,EC6EoC6W,ED5E1D7T,yBAAcC,KAAKzJ,GACjBA,EAAG2L,OAAOhG,WAAW+D,IAAIlD,EAAK3H,IAAI4K,KAAKrD,GAAa4V,GAAc5V,EAAWI,KACnFmD,MAAMoB,UAEkBvE,IACpBgD,yBAAcC,KAAKzJ,IACxB,MAAMoG,EAAYpG,EAAG2L,OAAOhG,WAAWuG,SACvC,OAAO8P,GAAc5V,EAAWI,KCqEwD8W,CAAcD,GAGtG,OAFApT,EArEgC,CAClCtI,KFxBkC,+BE6F1BsI,EAAS0D,GAA0BnI,IAClCmK,QAAQC,QAAQpK,GACvB,MAAOoE,GA1FKA,KACdC,QAAQC,IAAI,6BAA8BF,IA0FxCmB,CAAQnB,GDlFmBpD,OEjBlB+W,GAAc,CAAC,CAC1B1e,GAAI,aACJ2e,OAAQjb,IAAKC,EAAE,oBACfqC,MAAO,CAAC,CACNlD,KAAMN,IACNsF,KAAMpE,IAAKC,EAAE,YACbsR,QAAS,IACR,CACDnS,KAAMP,IACNuF,KAAMpE,IAAKC,EAAE,YACbsR,QAAS,QACR,CACDnS,KAAML,IACNqF,KAAMpE,IAAKC,EAAE,UACbsR,QAAS,OAIA2J,GAAmB,CAAC/c,IAAeG,IAAKC,IAAcC,IAAaI,IAAOF,IAASC,IAAWF,KAE9F0c,GAAgB,CAACzc,IAASC,IAAWC,K,0BCTlD,MAAMwc,WAA6BnM,YACjCC,YAAYrE,GACVsE,MAAMtE,GADW,KAOnBwQ,QAAUhf,GAAQ,KAChB,MAAM,KACJ+C,EADI,mBAEJ6a,EAFI,oBAGJqB,GACEjM,KAAKxE,MAET,GAAIzL,IAASX,IACXwb,EAAmB,CACjB7a,OACAmS,QAASlV,EAAKwN,UAEX,CACL,MAAM0R,EAAU,CACdjf,GAAID,EAAKC,GACT8H,KAAM/H,EAAKgI,aAAehI,EAAK+H,MAG7B+W,GAAc1Z,SAASrC,GACzBkc,EAAoBlc,EAAMmc,GAE1BtB,EAAmB,CACjB7a,OACAmS,QAASgK,MA9BE,KAmCnBC,cAAgB,KACdnM,KAAKC,SAAS,CACZmM,SAAUpM,KAAKrN,MAAMyZ,UAEvBpM,KAAKxE,MAAM6Q,mBAAmBrM,KAAKxE,MAAMzL,OArCzCiQ,KAAKrN,MAAQ,CACXyZ,SAAS,GAuCb/K,SACE,MAAM,MACJqH,EADI,KAEJ3Y,EAFI,MAGJkD,EAHI,QAIJqZ,GACEtM,KAAKxE,MACT,OAAO,oCACK,kBAAC,GAAD,CAAgBkN,MAAOA,IACtBzV,EAAMC,IAAIlG,IACnB,MAAMuf,EAAUvb,YAAWjB,EAAM/C,EAAMgT,KAAKwM,QAAQpe,IACpD,OAAO,kBAAC,GAAD,CAAiBoM,IAAKxN,EAAKC,IAAMD,EAAKwN,IAAKzK,KAAMA,EAAMwZ,QAASxZ,IAASjB,IAAgB9B,EAAK+C,KAAOA,EAAMgF,KAAM/H,EAAKgI,aAAehI,EAAK+H,KAAMuU,SAAUtJ,KAAKgM,QAAQhf,GAAOiE,IAAKsb,MAEjLD,EAAU,kBAAC,IAAD,CAAU3D,OAAK,EAACnO,IAAG,kBAAakO,GAASxF,QAASlD,KAAKmM,cAAezJ,MAAO,4BAAQzB,UAAWC,KAAQuL,gBAClGzM,KAAKrN,MAAMyZ,QAAUzb,IAAKC,EAAE,cAAgBD,IAAKC,EAAE,gBACxC,KAC5B,kBAAC,IAAD,CAAS8b,OAAO,cAehCX,GAAqBY,aAAe,CAClCve,GAAIwe,IAAU/d,OAAOge,YAER5R,mBAAQ,KAAM,CAC3B2P,sBACAqB,oBCzFiC,CAAClc,EAAMmS,IAAY,CAAC7J,EAAU2D,KAC/D,MAAMrJ,EAAQqJ,IACR8Q,EAAehd,IAAYC,GAAMU,SACjCkF,EAAiBoU,GAAsBpX,GAAOgD,eAC9CoX,EAAqBpX,EAAeqX,UAAUhgB,GAAQA,EAAK+C,OAASA,GAC1E,IAAIkd,EAEAF,GAAsB,GACxBE,EAAgBtX,EAAeoX,GAC/BE,EAAcH,GAAc1V,KAAK8K,GACjC7J,EAASiT,GAAsB2B,MAE/BA,EAAgB,CACdld,KAAMA,EACNmS,QAAS,CAACA,IAEZ7J,EAASuS,GAAmBqC,ODuEjBhS,CAGZ8Q,IEhEY9Q,mBAAQ,KAAM,CAC3B2P,uBADa3P,CAvBiB,EAC9B2P,qBACAsC,eAEA,MAAMC,EAAiB,EACrBpd,OACAmS,aACI,KACJ0I,EAAmB,CACjB7a,OACAmS,aAIJ,OAAO,oCACG,kBAAC,GAAD,CAAgBwG,MAAOwE,EAAStB,SAC/BsB,EAASja,MAAMC,IAAIlG,GAAQ,kBAAC,GAAD,CAAiBwN,IAAKxN,EAAK+C,KAAMA,KAAM/C,EAAK+C,KAAMgF,KAAM/H,EAAK+H,KAAMuU,SAAU6D,EAAengB,S,QCVpI,MAAMogB,GAAkB5R,GAAS,kBAAC,IAAD,CAAYzG,KAAK,wBAAwB2N,MAAO/R,IAAKC,EAAE,6CAA8Cb,KAAK,OAAO0V,SAAUjK,EAAMiK,SAAU4H,QAAS7R,EAAM6R,QAASlgB,MAAOqO,EAAMrO,QAEjN,MAAMmgB,WAAqB3N,IAAMC,UAC/BC,YAAYrE,GACVsE,MAAMtE,GADW,KAYnB+R,UAAY,KACVvN,KAAKC,SAAS,CACZvH,MAAM,EACNnE,OAAQ,MAfO,KAkBnBiZ,SAAW,CAACC,EAAGlN,KACbP,KAAK0N,aACL1N,KAAKC,SAAS,CACZ0N,SAAUpN,EAAMqN,cAChBlV,MAAM,KAtBS,KAyBnBmV,0BAA4B1K,KAAS,KACnCnD,KAAKC,SAAS,CACZ6N,gBAAiB9N,KAAKrN,MAAM4B,QAC3ByL,KAAK0N,aACP,KA7BgB,KA8BnBK,UAAY,CAACN,EAAGlN,KACdP,KAAKC,SAAS,CACZ1L,OAAQgM,EAAMwE,OAAO5X,OACpB6S,KAAK6N,4BAjCS,KAmCnBG,yBAA2B,IAAMnC,GAAiBtX,OAAOxE,IACvD,MAAME,EAAWH,IAAYC,GAC7B,OAAOiQ,KAAKrN,MAAMM,OAAS+M,KAAKrN,MAAMM,MAAMhD,EAASO,gBACpD0C,IAAInD,IACL,MAAME,EAAWH,IAAYC,GACvBke,EAAY7d,YAAoBL,GAChCme,EAAWlO,KAAKrN,MAAMM,MAAMhD,EAASO,cACrC8b,EAAU4B,EAAStY,OAASqY,EAC5Bhb,EAAQ+M,KAAKrN,MAAMwb,WAAW/T,IAAInK,EAAShD,IAAMihB,EAAWA,EAASvf,MAAM,EAAGsf,GACpF,OAAO,kBAAC,GAAD,CAAsBzT,IAAKzK,EAAMA,KAAMA,EAAM2Y,MAAOzY,EAASS,YAAauC,MAAOA,EAAOoZ,mBAAoBrM,KAAK0N,WAAYpB,QAASA,MA5C5H,KA8CnB8B,qBAAuB,IAAMzC,GAAYzY,IAAIga,GAAY,kBAAC,GAAD,CAAkB1S,IAAK0S,EAASjgB,GAAIigB,SAAUA,KA9CpF,KA+CnBmB,cAAgB,IAAMrO,KAAKgO,2BAA2BM,OAAOtO,KAAKoO,wBA/C/C,KAgDnBV,WAAa/V,UACX,GAAI5H,EAAM,CACR,MAAMoe,EAAanO,KAAKrN,MAAMwb,WAE1BA,EAAW/T,IAAIrK,GACjBoe,EAAWzQ,OAAO3N,GAElBoe,EAAWI,IAAIxe,GAGjBiQ,KAAKC,SAAS,CACZkO,oBAGFnO,KAAKC,SAAS,CACZkO,WAAY,IAAIK,MAIpB,IAAIC,EAAc,YAEd,IAAIzO,KAAKrN,MAAMwb,WAAW7Z,UAAUsB,SACtC6Y,GAAe,QAAU,IAAIzO,KAAKrN,MAAMwb,WAAW7Z,UAAUiB,KAAK,UAGpE,MAAMhB,EAASyL,KAAKrN,MAAMmb,gBAAX,WAAiC9N,KAAKrN,MAAMmb,iBAAoB,GAC/E9N,KAAKwM,QAAQpe,GAAGE,IAAIC,SAASuJ,IAA7B,sBAAgDvD,GAAhD,OAAyDka,IAAe5W,KAAK4S,GAAYzK,KAAKC,SAAS,CACrGhN,MAAOwX,KACL1S,MAAME,QAAQD,QA1ElBgI,KAAKrN,MAAQ,CACXgb,SAAU,KACVjV,MAAM,EACNyV,WAAY,IAAIK,IAChBvb,WAAO/E,EACPqG,OAAQ,GACRuZ,gBAAiB,IAuErBzM,SACE,OAAO,oCACK,kBAAC+L,GAAD,CAAiBjgB,MAAO6S,KAAKrN,MAAM4B,OAAQkR,SAAUzF,KAAK+N,UAAWV,QAASrN,KAAKwN,WACnF,kBAAC,KAAD,CAASvM,UAAU,0BAA0BvI,KAAMsH,KAAKrN,MAAM+F,KAAMiD,QAASqE,KAAKuN,UAAWI,SAAU3N,KAAKrN,MAAMgb,SAAUe,aAAc,CAClJC,WAAY,OACZC,SAAU,UACTC,gBAAiB,CAClBF,WAAY,OACZC,SAAU,OACT7T,MAAO,CACR8F,OAAQ,QACPiO,WAAY,CACb/T,MAAO,CACLwI,MAAO,UAERwL,kBAAkB,EAAMC,qBAAqB,EAAMC,qBAAqB,GAC7D,kBAAC,IAAD,CAAMC,SAAU,SAAUlP,KAAKqO,oBAYnDf,GAAaX,aAAe,CAC1Bve,GAAIwe,IAAU/d,OAAOge,YAERS,U,sBCnHR,MAAM6B,GAAe,EAC1Bpa,OACAE,cACAma,gBACAC,yBAUO,6BAASpO,UAAWC,KAAQoO,SACzB,yBAAKrO,UAAWC,KAAQqO,kBACpB,kBAAC,IAAD,CAAYtO,UAAWC,KAAQwH,MAAO3T,KAAK,wBAAwB2N,MAAO/R,IAAKC,EAAE,mBAAoBb,KAAK,OAAO0V,SAV3G,CAACgI,EAAG3E,KACtBsG,EAActG,EAAE/D,OAAO5X,QAS6HA,MAAO4H,EAAMyQ,YAAa7U,IAAKC,EAAE,wBACzK,kBAAC,IAAD,CAAeqQ,UAAWC,KAAQjM,YAAaF,KAAK,8BAA8B2N,MAAO/R,IAAKC,EAAE,yBAA0B6U,SAP9G,CAACgI,EAAG3E,KAC5BuG,EAAoBvG,EAAE/D,OAAO5X,QAMsIA,MAAO8H,KAElK,yBAAKgM,UAAWC,KAAQsO,cACpB,kBAAC,GAAD,QAUhBL,GAAa/M,aAAe,CAC1BrN,KAAM,GACNE,YAAa,IAGf,MAQM6S,GAAqB,CACzBsH,cNjBiCjiB,IAAK,CACtC4C,KF/B4B,iBEgC5B5C,UMgBAkiB,oBNduCliB,IAAK,CAC5C4C,KFlCkC,uBEmClC5C,WMca8N,mBAZStI,IACtB,MAAM8c,EAAoB/iB,YAASqd,GAAsBpX,IACzD,MAAO,CACLoC,KAAM0a,EAAkB1a,KACxBE,YAAawa,EAAkBxa,cAQK6S,GAAzB7M,CAA6CkU,I,iECvDrD,MAAMO,GAAY,IAAM,yBAAK7O,OAAO,KAAK0B,QAAQ,YAAYgB,MAAM,KAAKjB,MAAM,8BAC7E,0BAAMxN,EAAE,wOAAwO0N,KAAK,aAEhPmN,GAAe,IAAM,yBAAK9O,OAAO,KAAK0B,QAAQ,YAAYgB,MAAM,KAAKjB,MAAM,6BAA6BvH,MAAO,CAC1H2R,OAAQ,kBAGF,0BAAM5X,EAAE,kIAAkI0N,KAAK,UAAUoN,SAAS,UAAUC,UAAU,sBAEjLC,GAAU,IAAM,yBAAKxN,MAAM,6BAA6BzB,OAAO,KAAK0B,QAAQ,YAAYgB,MAAM,KAAKf,KAAMZ,IAAO4G,SACrH,0BAAM1T,EAAE,gBAAgB0N,KAAK,SAC7B,0BAAM1N,EAAE,wD,0BCJhB,MAAMib,GAAe,EACnBjR,sBACAxH,YACA0Y,yBACAC,gBACAC,mBACAvU,WACC6Q,KACD,MAAOvV,EAASkZ,GAAcC,mBAASJ,GAEjCK,EAAgB,EACpBC,cACArd,YAEAkd,EAAW,CACT,CAACG,GAAcrd,KAIbsd,EAAkB,EACtBD,cACAE,sBAEA,MACMC,GADUxZ,EAAQqZ,IAAgB,IAChB/b,OAAOvH,IAASwjB,EAAgBpe,SAASpF,EAAKC,KACtEkjB,EAAW,2BAAKlZ,GAAN,IACR,CAACqZ,GAAcG,MAIbC,EAAiB,EACrBJ,cACAK,cAEA,MAAMC,EAAU3Z,EAAQqZ,IAAgB,GAClCO,EAAgBF,EAAQzd,IAAIjG,GAAM2jB,EAAQvZ,KAAKrK,GAAQA,EAAKC,KAAOA,IACzEkjB,EAAW,2BAAKlZ,GAAN,IACR,CAACqZ,GAAcO,MA2CnB,OAAO,oCACIvZ,EAAUrK,IAAM,kBAAC,IAAD,CAAO0O,QAASA,EAAS2J,SAAS,MAAMwL,OAAK,GACtD,kBAAC,IAAD,KAAaxZ,EAAUvC,MACvB,kBAAC,IAAD,KA1BU,MAC1B,MAAMgc,EAAc,CAClB3iB,GAAIoe,EAAQpe,GACZ4iB,SAAUX,EACVY,WAAYV,EACZW,UAAWR,GAEPS,EAAgBla,EAAQK,EAAUrK,KAAO,GAE/C,OAAQqK,EAAUrK,IAChB,KAAKuJ,KAED,OAAO,kBAAC,KAAD,CAAiB4a,gBAAiBD,EAAeH,SAAUD,EAAYC,WAGlF,KAAKva,KACH,OAAO,kBAAC,KAAD,eAAkBqI,oBAAqBA,EAAqBuS,QAASF,GAAmBJ,IAEjG,QACE,OAAO,kBAAC,KAAD,CAAkBI,cAAeA,EAAeb,YAAahZ,EAAUrK,GAAI+jB,SAAUD,EAAYC,SAAUxE,QAASuE,EAAY3iB,OAO5GkjB,IACf,kBAAC,IAAD,KACI,kBAAC,IAAD,KACI,kBAAC,IAAD,CAAQC,WAAS,EAACrO,QAASvH,GACtBhL,IAAKC,EAAE,WAEZ,kBAAC,IAAD,CAAQ4gB,SAAO,EAACtO,QAhDvB,KACjB,MAAMjW,EAAKqK,EAAUrK,GACfwkB,EAAcxa,EAAQhK,GAExBwkB,GAAeA,EAAY7b,OAC7Bqa,EAAc,CACZhjB,KACAE,MAAO,IAAIskB,KAGbvB,EAAiBjjB,GAGnB0O,EAAQ1O,KAoCqB0D,IAAKC,EAAE,iBAgBxCmf,GAAapD,aAAe,CAC1Bve,GAAIwe,IAAU/d,QAODoM,mBAJStI,IAAK,CAC3Bqd,uBAAwBnZ,GAAoBlE,KAGN,CACtCsd,cjDzH6B1b,IAAM,CACnCxE,KDA6B,kBCC7BwE,WiDwHA2b,iBAAkB3Y,IAFL0D,CAGZ8U,IC9HI,MAEM2B,GAAuC,GAiB7C,MAAMC,GAA2Bhf,GAASA,EAAMif,qBClB1CC,GAA4B1kB,IAAK,CAC5C4C,KDFwC,6BCGxC5C,UCwDa8N,mBAfStI,IAAK,CAC3BmM,oBAAqBI,GAAgCvM,GACrD2E,UAAWqa,GAAyBhf,GACpCgE,WAAYD,GAAe/D,GAC3Bqd,uBAAwBnZ,GAAoBlE,KAWN,CACtCmf,0BDvDyC,MACzC/hB,KDL0C,iCE4D1CgiB,wBAAyBF,IAFZ5W,CA5CQO,IACrB,MAAOwW,EAAaC,GAAkB7B,oBAAS,GACzC8B,EAAMC,iBAAO,MAEbC,EAAgB,KACpBH,GAAe,GACfzW,EAAMsW,6BAOR,OAAO,oCACG,0BAAMI,IAAKA,GACP,kBAAC,IAAD,CAAQhP,QAAS,IAAM+O,GAAe,IACjCthB,IAAKC,EAAE,cACR,kBAAC,KAAD,QAGPohB,GAAe,kBAAC,IAAD,CAASK,eAAgBD,EAAeE,UAAWJ,EAAKK,OAAO,EAAMC,UAAU,gBACvF,kBAAC,KAAD,CAAiBzX,MAAO,CACpCwI,MAAO,SACN5M,WAAY6E,EAAM7E,WAAY8b,iBAdbxlB,IACtBuO,EAAMuW,wBAAwBvW,EAAM7E,WAAWU,KAAKC,GAAaA,EAAUrK,KAAOA,KAaZylB,YAAare,OAAO6C,KAAKsE,EAAMwU,2BAE3FnX,KAAQ2C,EAAMlE,WAAoI,KAAvH,kBAAC,GAAD,CAAcwH,oBAAqBtD,EAAMsD,oBAAqBxH,UAAWkE,EAAMlE,UAAWqE,QAASyW,O,sBCrB5I,MAAMO,GAAe,CAACnX,EAAOgR,KAC3B,MAAOoG,EAAmBC,GAAwBzC,oBAAS,IACpD0C,EAAqBC,GAA0B3C,oBAAS,IACxD4C,EAAaC,GAAkB7C,mBAAS,OACzC,GACJnjB,EADI,KAEJ8H,EAFI,YAGJE,EAHI,OAIJQ,EAJI,MAKJsF,EALI,gBAMJ/E,EANI,QAOJvB,EAPI,yBAQJye,EARI,sBASJC,GACE3X,EAEE4X,EAAsB,IAAML,GAAwBD,GAEpDO,EAAoB,IAAMR,GAAsBD,GAMhDU,EAAajf,OAAOoN,OAAO,GAAI1G,EAAM2N,MAAO,CAChD6K,OAAQ,UACRC,WAAY,OACZ/O,IAAK,QAEDpC,EAAW5N,EAAUsO,KAAO0Q,KAElC,GAAIT,EACF,OAAO,kBAAC,IAAD,CAAU/P,GAAI+P,IAGvB,MAAMU,EAA2B1d,EAAkBrF,IAAKC,EAAE,oBAAsBD,IAAKC,EAAE,oBAOjF+iB,EAA8Blf,EAAU9D,IAAKC,EAAE,oBAAsBD,IAAKC,EAAE,kBAO5EgjB,EAAYC,sBACZC,EAAapnB,YAAS+I,GAC5B,OAAO,oCACG,yBAAKwL,UAAWC,KAAQ6S,UACpB,0BAAMhZ,MAAOuY,GAAave,GAC1B,yBAAKkM,UAAWC,KAAQ8S,SACpB,yBAAK/S,UAAWC,KAAQ+S,aAAc/Q,QAASgQ,GAC3C,kBAAC7Q,EAAD,CAAUtH,MAAO,CAC7ByH,KAAMZ,IAAO4G,YAGL,yBAAKvH,UAAWC,KAAQgT,OACnBJ,EAAWK,OAAS,kBAAC,IAAD,CAAMlT,UAAWC,KAAQkT,SAAUnR,GAAE,WAAMhW,EAAN,UAClD,kBAAC,IAAD,KAAS0D,IAAKC,EAAE,UACV,KACbkjB,EAAWO,OAAS,kBAAC,IAAD,CAAQnR,QAASkQ,GAC7BziB,IAAKC,EAAE,UACA,KAChB,kBAAC,GAAD,MACA,0BAAMshB,IAAK0B,GACP,kBAAC,IAAD,CAAQ1Q,QAASmQ,GACb,kBAAC3D,GAAD,MACA,0BAAM3U,MAAO,CAC7BuZ,WAAY,QAES3jB,IAAKC,EAAE,YAKvBgiB,GAAqB,kBAAC,IAAD,CAASN,UAAWsB,EAAWpB,UAAU,eAAeH,eAAgBgB,GACtF,kBAAC,IAAD,KACI,kBAAC,IAAD,CAAU1K,OAAK,EAACjG,MAAOiR,EAA6BzQ,QArCnD,KAC7BgQ,IACAG,OAoC4B,kBAAC,IAAD,CAAU1K,OAAK,EAACjG,MAAOgR,EAA0BxQ,QA7CnD,KAC1BiQ,IACAE,OA4C4B,kBAAC,IAAD,CAAU1K,OAAK,EAACjG,MAAO/R,IAAKC,EAAE,UAC1B,kBAAC,IAAD,CAAU+X,OAAK,EAACjG,MAAO/R,IAAKC,EAAE,oBAAqBsS,QAhEjE,IAAM+P,EAAe,GAAD,OAAIhmB,EAAJ,mBAiEN,kBAAC,IAAD,CAAU0b,OAAK,EAACjG,MAAO/R,IAAKC,EAAE,qBAAsBsS,QA/DpE,IAAM+P,EAAe,GAAD,OAAIhmB,EAAJ,sBAqE3B+I,EAAkB,yBAAKiL,UAAU,wBAAwBlG,MAAO1G,OAAOoN,OAAO,CACrF8S,WAAY,MACZxS,cAAe,OACdhH,EAAM9F,YAAcA,EAEnB,GAFiC,CACnC8O,MAAO,UAEQ9O,GAAetE,IAAKC,EAAE,mBAClB,KACZ3D,EAAK,kBAAC,KAAD,CAAemB,GAAIoe,EAAQpe,GAAInB,GAAIA,EAAI8C,KAAK,YAAY2I,KAAMoa,EAAqB0B,eAAgBpB,IAA0B,OAe/IT,GAAavQ,aAAe,CAC1BrN,KAAM,GACNE,YAAa,GACbR,SAAS,EACTuB,iBAAiB,GAEnB2c,GAAahG,aAAe,CAC1Bve,GAAIwe,IAAU/d,QAiCDoM,mBA9BStI,IACtB,MAAM1F,EAAKkJ,EAAexD,GACpB6B,EAAYR,EAAkBrB,EAAO1F,IAAOyG,EAClD,MAAO,CACLzG,KACA8H,KAAMP,EAAUQ,YAChBC,YAAaT,EAAUU,mBACvBS,eAAgBxB,EAAmBxB,GACnCqD,gBAAiBK,GAA4B1D,GAC7C8B,QAASD,EAAUC,QACnBgB,OAAQjB,EAAUiB,SAoBkB,KAhBrB,CAACuS,EAAYC,EAAeC,KAC7C,MAAM,GACJjb,EADI,QAEJwH,EAFI,gBAGJuB,GACEgS,GACE,SACJ3P,GACE4P,EACJ,OAAO,uCAAKD,GACPE,GADL,IAEEgL,yBAA0B,IAAM7a,EAASkF,GAAetQ,GAAKwH,IAC7D0e,sBAAuB,IAAM9a,EAAS2E,IAAwBhH,OAInDiF,CAA2C0X,I,QCvK1D,MAAM5X,GAAQ,CACZ2N,MAAO,CACLpD,SAAU,WACVd,SAAU,GACVxJ,WAAY,IACZ+I,MAAOnC,IAAO6S,MACdC,SAAU,IAEZzf,YAAa,CACXuP,SAAU,GACVT,MAAOnC,IAAO8B,UAiBHiR,OAbE,EACfC,UAEO,yBAAK3T,UAAU,mBAAmBlG,MAAO,CAC9CwM,QAAS,uBAEAqN,EAAO,kBAAC,GAAD,CAAc7Z,MAAOA,KAAY,kBAAC,GAAD,CAAcA,MAAOA,M,sDCZ1E,MAAM8Z,WAAsBjV,YAG1BC,YAAYrE,EAAOgR,GACjB1M,MAAMtE,GADoB,KAF5BsZ,kBAAoB,KAEQ,KAK5BC,mBAAqBC,IAMnB,MAAMC,EAAgBjV,KAAKxE,MAAMxO,OAASgoB,EAAUhoB,KAC9CkoB,EAAiBF,EAAUle,cAAgBkJ,KAAKxE,MAAM1E,YACtDqe,EAAMzoB,YAASsT,KAAKxE,MAAM4Z,eAC1BC,EAAU3oB,YAASsoB,EAAUI,eAC7BE,EAAaH,EAAIloB,KAAOooB,EAAQpoB,IAAMkoB,EAAII,aAAeF,EAAQE,WACvE,OAAON,IAAkBK,GAAcJ,IAhBb,KAkB5BM,aAAeR,IACb,GAAIS,KAAgCzV,KAAKxE,MAAMxO,KAAMgT,KAAKxE,MAAM4Z,gBAAkBpV,KAAK+U,mBAAmBC,GAAY,CACpH,MAAMK,EAAU3oB,YAASsoB,EAAUI,eAC7BM,EAAa1V,KAAKxE,MAAM4Z,cACxBO,EAAgBD,EAAWH,aAAeF,EAAQE,YAAcG,EAAWH,aAAevV,KAAKxE,MAAMxO,KAAK+C,MAE5G4lB,GAAiB3V,KAAKxE,MAAM1E,cAAgBke,EAAUle,eACxD2e,KAAsBzV,KAAKxE,MAAMxO,KAAMqoB,EAAQE,YAAcvV,KAAKxE,MAAMxO,KAAK+C,MAC7E0lB,KAAmBzV,KAAKxE,MAAMxO,KAAMgT,KAAKxE,MAAM4Z,cAAe,CAC5DQ,YAAa5V,KAAK8U,kBAClBS,WAAYI,EAAgBD,EAAWH,WAAa,UA5BhC,KAwD5BM,cAAgB,IAAM7V,KAAKxE,MAAM4Z,cAAcG,YAAcvV,KAAKxE,MAAMxO,KAAK+C,KAtD3EiQ,KAAK5R,GAAKoe,EAAQpe,GAgCpB6Y,oBA5CwB7Y,MA6CtB4R,KAAK8U,mBA7CiB1mB,EA6CqB4R,KAAK5R,GA5C3C,CACLK,QAASN,YAAWC,GACpB0nB,KAAM1nB,EAAGE,IAAIC,SAASwnB,eAAeC,gBA4CjCP,KAAgCzV,KAAKxE,MAAMxO,KAAMgT,KAAKxE,MAAM4Z,gBAC9DK,KAAmBzV,KAAKxE,MAAMxO,KAAMgT,KAAKxE,MAAM4Z,cAAe,CAC5DQ,YAAa5V,KAAK8U,kBAClBS,WAAYvV,KAAKxE,MAAMma,cAAgB3V,KAAK6V,gBAAkB,KAC9DI,QAASjW,KAAKxE,MAAMya,UAK1BC,mBAAmBlB,GACjBhV,KAAKwV,aAAaR,GAGpBmB,uBACMV,KAAgCzV,KAAKxE,MAAMxO,KAAMgT,KAAKxE,MAAM4Z,gBAC9DK,KAAsBzV,KAAKxE,MAAMxO,KAAMgT,KAAK6V,iBAMhDxU,SACE,MAAM,QACJH,EADI,KAEJlU,EAFI,cAGJooB,EAHI,MAIJra,GACEiF,KAAKxE,MAET,OAD0Bia,KAAgCzoB,EAAMooB,GACrC,yBAAKnoB,GAAImpB,YAAiBppB,EAAKC,IAAK8N,MAAOA,IAAY,yBAAKkG,UAAWC,EAAQmV,SAC7F1lB,IAAKC,EAAE,6CAMxBikB,GAAclI,aAAe,CAC3Bve,GAAIwe,IAAU/d,QAWhBgmB,GAAczS,aAAe,CAC3BrH,MAAO,GACP/N,KAAM,GACN8J,YAAa,GACbmf,QAAS,GACTb,cAAe,IAEFP,U,sBCvGf,MAAMyB,WAA2B3W,IAAMC,UACrCC,YAAYrE,GACVsE,MAAMtE,GACNwE,KAAKrN,MAAQ,CACX4jB,YAAY,GAIhBC,kBAAkBxe,EAAOye,GACvBzW,KAAKC,SAAS,CACZsW,YAAY,IAEdte,QAAQC,IAAI,UAAWF,GACvBC,QAAQC,IAAI,SAAUue,GAGxBpV,SACE,OAAIrB,KAAKrN,MAAM4jB,WACN,uBAAGtV,UAAWC,KAAQwV,WACf,0BAAMzV,UAAWC,KAAQ4B,MACrB,kBAACgN,GAAD,OAEJ,0BAAM7O,UAAWC,KAAQ1I,SACpB7H,IAAKC,EAAE,qDAKrBoP,KAAKxE,MAAM2G,UAQPmU,U,+BC7BAK,OATS,EACtBC,mBAEOA,EAAgB,yBAAK3V,UAAWC,KAAQ2V,iBAAkBD,GAAuB,K,4CCW3EE,OAXU,EACvB5T,aACI,4BAAQnT,KAAK,SAASkR,UAAWC,KAAQ6V,iBAAkB7T,QAASA,EAASwF,MAAO/X,IAAKC,EAAL,gBAClF,kBAAC,KAAD,CAAYmK,MAAO,CACvByH,KAAMZ,IAAOoV,WCJjB,MAeMlP,GAAqB,CACzByD,0BAEatQ,mBAAQ,KAAM6M,GAAd7M,CAlBS,EACtBgc,SACA1L,2BAIO,yBAAKtK,UAAWC,KAAQ2V,iBACrB,kBAAC,GAAD,CAAkB3T,QAHH,IAAMqI,EAAsB0L,OCHxCC,OALK,IAAM,yBAAK5U,MAAM,6BAA6BzB,OAAO,KAAK0B,QAAQ,YAAYgB,MAAM,KAAKf,KAAMZ,IAAO4G,SAClH,0BAAM1T,EAAE,gBAAgB0N,KAAK,SAC7B,0BAAM1N,EAAE,sG,sBCODqiB,OANM,IAAM,yBAAKlW,UAAWC,KAAQkW,SAC3C,kBAAC,IAAD,CAASlV,QAASvR,IAAKC,EAAE,mDAAoD4hB,UAAU,UACnF,kBAAC6E,GAAD,QCCZ,MAUMC,GAAa3X,IAAM4X,WAAW,CAAC,EAKlCrF,KAAS,IALyB,cACnCsF,EADmC,MAEnC9O,EAFmC,YAGnC+O,GAES,EADNC,EACM,wDACT,MAAMC,EAhBkBF,KACjB,CACL,KAAQd,GACR,CAAC7kB,GAAO8lB,GACR,CAAC3lB,GAAewlB,EAAcI,GAAgB,OAYhCC,CAAkBL,GAAaD,GAC/C,OAAO,yBAAKvW,UAAWC,KAAQ6W,eAAgB7F,IAAKA,GACtC,uBAAGjR,UAAWC,KAAQ8W,WAAYtP,GACjCiP,EAAU,kBAACA,EAAYD,GAAW,QAGnDJ,GAAWtiB,YAAc,aAMViG,mBAAQ,KAAM,KAAM,KAAM,CACvCsc,YAAY,GADCtc,CAEZqc,I,qFC1BH,MAAMW,GAAW,CACfzV,KAAMZ,IAAO4G,SAmFA0P,OAhFW1c,IACxB,MAAOmS,EAAUwK,GAAe/H,mBAAS,OACnC,KACJpjB,EADI,cAEJooB,EAFI,mBAGJgD,EAHI,GAIJhqB,EAJI,WAKJmnB,GACE/Z,EACE6c,EAAgBloB,YAAoBnD,EAAK+C,MAEzCuoB,EAAc,KAClBC,IACAH,EAAmBC,EAAgBnpB,IAAeH,MAG9CypB,EAAc,KAClBD,IACAH,EAAmBC,EAAgBlpB,IAAcH,MAG7CypB,EAAY,KAChBF,IACAH,EAAmBnpB,MAefspB,EAAc,IAAMJ,EAAY,MAEhCpoB,EAAOqlB,EAAcrlB,MAAQ/C,EAAK+C,KAClC2oB,GAAaC,aAAc5oB,KAAU6oB,aAAe7oB,IAASA,IAAS8oB,MAAkB9oB,IAAS+oB,KACjGC,EAA0Bvd,EAAMwd,aAAeroB,IAAKC,EAAL,oCAA6CD,IAAKC,EAAL,oCAE5FqoB,EAAkB,IAAM,oCACnB1D,IAAevmB,KAASumB,IAAepmB,KAAe,kBAAC,IAAD,CAAUwZ,OAAK,EAACjG,MAAO/R,IAAKC,EAAE,iBAAkBsS,QAASsV,EAAa1V,KAAM,kBAAC,KAAD,CAAW/H,MAAOkd,OACpJ1C,IAAexmB,KAAgBwmB,IAAermB,KAAgB,kBAAC,IAAD,CAAUyZ,OAAK,EAACjG,MAAO/R,IAAKC,EAAE,iBAAkBsS,QAASoV,EAAaxV,KAAM,kBAAC,KAAD,CAAW/H,MAAOkd,OApB1IjoB,YAAWhD,EAAK+C,OAqBdwlB,IAAetmB,KAAO,kBAAC,IAAD,CAAU0Z,OAAK,EAACjG,MAAO/R,IAAKC,EAAE,eAAgBsS,QAASuV,EAAW3V,KAAM,kBAAC,KAAD,CAAS/H,MAAOkd,QAG7I,OAAOiB,aAAkBlsB,EAAMooB,GAAiB,oCACtC,kBAAC,IAAD,CAAQ+D,OAAK,EAAC5H,WAAS,EAACrO,QAvBV,CAACuK,EAAGlN,IAAU4X,EAAY5X,EAAMqN,gBAwB1C,kBAAC8B,GAAD,OAEH/B,GAAY,kBAAC,KAAD,CAASjV,KAAM0gB,QAAQzL,GAAWhS,QAAS4c,EAAa5K,SAAUA,GACvE,kBAAC,IAAD,KACK+K,GAAa,oCACN,kBAACO,EAAD,MACA,kBAAC,IAAD,OAER,kBAAC,IAAD,CAAUtQ,OAAK,EAAC7F,KAAM,kBAAC,KAAD,CAAY/H,MAAO,CACvDyH,KAAM,aACDE,MAAO/R,IAAKC,EAAE,0BAA2B,CAC9CL,QAASD,YAAWtD,EAAK+C,QACvBkZ,KAAMoQ,aAAQrsB,EAAMoB,GAAK2W,OAAO,WACpB,kBAAC,IAAD,CAAU4D,OAAK,EAAC7F,KAAM,kBAAC6M,GAAD,MAAkBjN,MAAOqW,EAAyB7V,QAnC5D,KAChC1H,EAAM8d,iBAEW,OAAb3L,GACF4K,UAkCQ,M,sBChFd,MAAMxd,GAAQ,CACZwe,gBAAiB,CACf/R,UAAW,OACX3G,OAAQ,SAEV2Y,KAAM,CACJ9M,OAAQ,eACR7L,OAAQ,MACR4Y,OAAQ,OACR/X,gBAAiBE,IAAO8X,UAI5B,MAAMC,WAAmB/Z,YACvByB,SACE,MAAMuY,EAAWC,aAAM7Z,KAAKxE,MAAMxO,MAClC,OAAO,yBAAKiU,UAAU,yBACV,wBAAIlG,MAAOA,GAAMye,OACjB,yBAAKze,MAAOA,GAAMwe,iBACd,kBAAC,KAAD,CAA0BnrB,GAAI4R,KAAKwM,QAAQpe,GAAIpB,KAAMgT,KAAKxE,MAAMxO,KAAM+C,KAAMiQ,KAAKxE,MAAMxO,KAAK+C,KAAKsY,cAAepb,GAAI2sB,EAAUrpB,QAAQ,iBAO1JopB,GAAWhN,aAAe,CACxBve,GAAIwe,IAAU/d,OAAOge,YAKR8M,U,sBC3BAG,OANK,IACX,yBAAK7Y,UAAWC,KAAQ6Y,QACrB,kBAAC,IAAD,O,8BCuCGC,OA3BmB,EAChChtB,OACAwqB,oBAEA,MAAM,QACJ/oB,GACEwrB,eACEC,EAAO,UAAMzrB,EAAN,YAAiBqB,IAAY9C,EAAK+C,MAAMc,OAAO+L,aAAgB5P,GAAMC,KAClF,OAAO,yBAAKgU,UAAWC,KAAQ6Y,QAhBN,yBAAKlZ,OAAO,KAAK0B,QAAQ,YAAYgB,MAAM,KAAKjB,MAAM,8BACzE,uBAAGE,KAAMZ,IAAOuY,QAAStK,UAAU,kBAC/B,0BAAM/a,EAAE,0MACR,0BAAMA,EAAE,4GACR,0BAAMA,EAAE,q0BAcR,uBAAGmM,UAAWC,KAAQkZ,cACjBzpB,IAAKC,EAAE,kDAEVyB,EAAYmlB,GAMH,KANoB,uBAAGvW,UAAWC,KAAQmZ,SAC7C,uBAAGnX,QAAS4F,GAAKA,EAAErI,kBAAmBsE,OAAO,SAASiE,IAAI,sBAAsBC,KAAMiR,GACjFvpB,IAAKC,EAAE,gCAAiC,CACvDL,QAASD,YAAWtD,EAAK+C,YCjBpBuqB,OAdIC,IACjB,IAAIC,OAAWtsB,EACXusB,OAAYvsB,EAChB,MAAO,IAAIwsB,KACLF,GAAYE,EAAK9kB,SAAW4kB,EAAS5kB,QAAU8kB,EAAKC,MAAM,CAACC,EAAKC,IAAMD,IAAQJ,EAASK,MAI3FL,EAAWE,EACXD,EAAYF,KAAMG,IAJTD,I,sBCcN,MAAMK,WAAalb,YAQxBC,YAAYrE,EAAOgR,GACjB1M,MAAMtE,GADoB,KAP5B7I,MAAQ,CACNooB,YAAY,EACZC,cAAc,EACdC,gBAAgB,EAChBC,SAAS,GAGiB,KAoC5BC,aAAe,CAAC/F,EAAene,KAC7B,IAAK5C,OAAO6C,KAAKD,GAASrB,OACxB,OAAOwf,EAIT,MAAMgG,EAAUhG,EAAc9W,KAAKpL,IAAInG,GAAG,eAAUA,IAE9CsuB,EAAajG,EAAckG,QAAQpoB,IAAInG,GAAG,eAAUA,IAEpDwuB,EAAanG,EAAcne,QAAQ/D,IAAInG,GAAG,eAAUA,IAkB1D,OAhBAsH,OAAO6C,KAAKD,GAAS0F,QAAQ2T,IAC3B,GAAIrZ,EAAQqZ,GAAc,CACxB,IAAIkL,GAAiB,EACrB,CAACJ,EAASC,EAAYE,GAAY5e,QAAQ8e,GAAoBA,EAAiBlnB,OAAOxH,GAAOA,EAAIuK,YAAcgZ,GAAa3T,QAAQ5P,IAClIyuB,GAAiB,EACjBzuB,EAAIkG,MAAQgE,EAAQqZ,MAGjBkL,GACHD,EAAWnkB,KAAK,CACdE,UAAWgZ,EACXrd,MAAOgE,EAAQqZ,QAKhB,2BAAK8E,GAAZ,IACE9W,KAAM8c,EACNE,QAASD,EACTpkB,QAASskB,KAnEe,KAsE5BG,iBAAmBpB,GAAW,IAAMqB,QAtER,KAuE5BxiB,QAAU,IAAM6G,KAAKC,SAAS,CAC5Bib,SAAS,IAxEiB,KA0E5BpG,kBAAoB,KA1EQ,KA2E5B8G,mBAAqB,KACnB,MAAMC,EAAmB7b,KAAKxE,MAAMxO,KAAK8uB,eAAiB9b,KAAK+b,UAAUC,QAAQC,aNxFjD,GMwFuFC,GACjHnhB,EAAQiF,KAAKmc,wBAAwBN,EAAkB7b,KAAKoc,WAAapc,KAAKoc,WAAWC,aAAe,KAAMnqB,EAAW8N,KAAKxE,MAAMgc,gBAAkBnlB,EAAY2N,KAAKxE,MAAMgc,gBAEnL,GAAIxX,KAAKrN,MAAMuoB,QACb,OAAO,yBAAKngB,MAAOA,GACL,kBAAC,GAAD,CAA2B/N,KAAMgT,KAAKxE,MAAMxO,KAAMwqB,cAAexX,KAAKxE,MAAMgc,iBAI5F,MAAMjC,EAAavV,KAAK6V,gBAClBT,EAAgBpV,KAAKsc,+BAA+Btc,KAAKxE,MAAM4Z,cAAepV,KAAKxE,MAAMxO,KAAK+C,KAAMwlB,GAE1G,IAAKH,EACH,OAAO,yBAAKnU,UAAWC,KAAQmV,SAChB1lB,IAAKC,EAAE,uBAIxB,MAAM4K,EAAK,2BAAQwE,KAAKxE,OAAb,IACTma,eAAgBzjB,EAAW8N,KAAKxE,MAAMgc,eACtCpC,gBACAlU,aACAnG,UAGF,OAAQwa,GACN,KAAKzmB,IACL,KAAKE,IACL,KAAKD,IAED,OAAO,qCACSiR,KAAKrN,MAAMsoB,gBAAkB,yBAAKlgB,MAAOS,EAAMT,OACzC,kBAAC,GAAD,OAER,kBAAC,KAAD,CAAqB3M,GAAI4R,KAAK5R,GAAIgnB,cAAepV,KAAKuc,qBAAqBnH,EAAe5Z,EAAM1E,aAAc0lB,kBAAmBxc,KAAKwc,kBAAmBrjB,QAAS6G,KAAK7G,QAASsjB,cAAc,EAAM1hB,MAAOS,EAAMT,SAInO,KAAK9L,IAED,GAAIuM,EAAMxO,KAAK+C,OAASd,IAAK,CAG3B,MAAMytB,EAAWlhB,EAAM4Z,cAAcsH,SAASxpB,IAAInG,GAC5CA,EAAI4vB,MAAMvqB,SAAS,aAAerF,EAAI4vB,MAAMvqB,SAAS,SAChD4N,KAAKuc,qBAAqBxvB,EAAKyO,EAAM1E,aAGvC/J,GAETyO,EAAM4Z,cAAN,2BAA2B5Z,EAAM4Z,eAAjC,IACEsH,kBAMFlhB,EAAM4Z,cAAgBpV,KAAKuc,qBAAqB/gB,EAAM4Z,cAAe5Z,EAAM1E,aAM7E,OAHA0E,EAAMya,QAAN,2BAAqBza,EAAMya,SAA3B,IACE2G,WAAW,IAEN,kBAAC,GAAkBphB,GAG9B,QAGI,OADAA,EAAM4Z,cAAgBpV,KAAKuc,qBAAqB/gB,EAAM4Z,cAAe5Z,EAAM1E,aACpE,kBAAC,GAAkB0E,KAjJN,KAqJ5BghB,kBAAoB,KAClBxc,KAAKC,SAAS,CACZgb,gBAAgB,KAvJQ,KA0J5B3B,eAAiB,KACftZ,KAAKC,SAAS,CACZ8a,YAAa/a,KAAKrN,MAAMooB,YACvB/a,KAAKxE,MAAMqhB,qBAAqB7c,KAAKxE,MAAMxO,KAAKC,MA7JzB,KA+J5BmrB,mBAAqBroB,IACnBA,IAASiQ,KAAK6V,iBAAmB7V,KAAKxE,MAAM4c,mBAAmBpY,KAAKxE,MAAM4Z,cAAcnoB,GAAI8C,IAhKlE,KAkK5B8lB,cAAgB,IAAM7V,KAAKxE,MAAM4Z,cAAcG,YAAcvV,KAAKxE,MAAMxO,KAAK+C,KAlKjD,KAmK5BmpB,kBAAoB,IAAMzD,KAAgCzV,KAAKxE,MAAMxO,KAAMgT,KAAKxE,MAAM4Z,eAnK1D,KAoK5B0H,gBAAkB,CAACjB,EAAkBkB,EAAgBC,KAE5C,CACLnc,OAFamc,GAAiBD,GAAqClB,IAnKrE7b,KAAK5R,GAAKoe,EAAQpe,GAClB4R,KAAKoc,WAAazc,IAAMkU,YACxB7T,KAAK+b,UAAYpc,IAAMkU,YACvB7T,KAAKuc,qBAAuBjC,GAAWta,KAAKmb,cAC5Cnb,KAAKsc,+BAAiChC,GAAW7E,MACjDzV,KAAKmc,wBAA0B7B,GAAWta,KAAK8c,iBAGjD,0BACE9c,KAAKxE,MAAMyhB,4BACLxH,KAAoBzV,KAAKxE,MAAMxO,OACrCgT,KAAKC,SAAS,CACZ+a,cAAc,IAIlB9E,mBAAmBlB,EAAWkI,GACxBlI,EAAUI,gBAAkBpV,KAAKxE,MAAM4Z,eAAiBJ,EAAUle,cAAgBkJ,KAAKxE,MAAM1E,cAC3FkJ,KAAKrN,MAAMuoB,SACblb,KAAKC,SAAS,CACZib,SAAS,IAITgC,EAAUjC,gBAGZjb,KAAKC,SAAS,CACZgb,gBAAgB,KA6IxB5Z,SACE,MAAM,KACJrU,EADI,cAEJwqB,EAFI,YAGJ1gB,GACEkJ,KAAKxE,OACH,WACJuf,GACE/a,KAAKrN,MACHikB,EAAgB,kBAAC,GAAD,CAAmB5pB,KAAMA,EAAMooB,cAAepV,KAAKxE,MAAM4Z,cAAegD,mBAAoBpY,KAAKoY,mBAAoBkB,eAAgBtZ,KAAKsZ,eAAgBlrB,GAAI4R,KAAK5R,GAAImnB,WAAYvV,KAAK6V,gBAAiBmD,aAAchZ,KAAKrN,MAAMooB,aACxP,OAAO,oCACK,kBAAC,GAAD,CAAYrS,MAAO+M,KAAsBzoB,GAAOiqB,OAAQjqB,EAAKC,GAAI2pB,cAAeA,EAAe1E,IAAKlS,KAAK+b,UAAWvE,cAAeA,EAAeC,YAAazqB,EAAKmwB,YACpK,kBAAC,GAAD,KACI,yBAAK3iB,IAAKwF,KAAK0b,iBAAiB5kB,GAAcmK,UAAU,yBAAyBiR,IAAKA,GAAOlS,KAAKoc,WAAalK,GAC1GlS,KAAKrN,MAAMqoB,cAAgBhb,KAAK4b,uBAGxCtpB,EAAWklB,IAAkBuD,EAAa,kBAAC,GAAD,CAAY/tB,KAAMA,IAAW,OAKxF8tB,GAAKnO,aAAe,CAClBve,GAAIwe,IAAU/d,QAWhBisB,GAAK1Y,aAAe,CAClBpV,KAAM,GACN6vB,qBAAsBlX,SAASC,UAC/BwP,cAAe,IAgBFna,mBAbS,CAACtI,EAAOuV,KAEvB,CACLpR,YAFmB5E,EAAWgW,EAASsP,eAA8C5gB,GAA7BC,GAAoBlE,GAG5EyiB,cAAerc,GAAkBpG,EAAO8iB,KAA8BvN,EAASlb,MAAMC,MAI9DoL,IAAQ,CACjC4kB,sBAAuB7H,GAAiB/c,EAASa,GAAmBkc,IACpEgD,mBAAoB,CAACnrB,EAAI8C,EAAMwlB,IAAeld,E7DtPJ,EAACpL,EAAIsoB,KAChC,CACbxlB,KDFyC,gCCGzC9C,KACAsoB,e6DkPqD6H,CAA6BnwB,EAAI8C,MAG3EkL,CAA6C6f,IC5P5D,MAAM/f,GAAQ,CACZ2G,gBAAiBE,IAAOyb,QACxB5D,OAAQ,OACR5Y,OAAQ,MACR6L,OAAQ,mBAKK4Q,OAFF,IAAM,wBAAIviB,MAAOA,K,QCE9B,MACMwiB,GAAe,CACnB,QAAW,UACXC,kBAAmB,aACnBC,OAAQ,SACRC,OAAQ,UAEJ3iB,GAAQ,CACZqC,KAAM,CACJugB,cAAe,OACfC,YAAa,OAEfC,OAAQ,CACN5X,UAAW,SACXzB,SAAU,OACVsZ,aAAc,OAEhBC,OAAQ,CACNvZ,SAAU,OACVwZ,WAAY,OACZtR,OAAQ,EACR3I,MAAOnC,IAAO8B,SAEhBua,QAAS,CACPla,MAAOnC,IAAO8B,QACdc,SAAU,OACVwZ,WAAY,OACZE,UAAW,OACXC,SAAU,WAId,MAAMC,WAAqBxe,YAAW,eAAD,oBACnCjN,MAAQ,CACNvF,SAAU,IAFuB,KAYnCixB,eAAiB7T,IACf,MAAM8T,EAAgB9T,EAAG,YAAQA,EAAI+T,YAAZ,YAA2B/T,EAAIvd,IAAO,GAC/D,MAAM,GAAN,OAAU+S,KAAKwM,QAAQ/d,QAAvB,+BAAqD6vB,IAdpB,KAgBnCE,iBAAmBhU,IACjB,MAAMiU,EAAYjU,EAAI/S,SAAS9I,OAAO,GAAG,GACzC,OAAO8vB,EAAUV,OAASU,EAAUV,OAAO/oB,YAAc,IAlBxB,KAoBnC0pB,gBAAkB,KAChB,MAAMC,EAAYrsB,EAAW0N,KAAKxE,MAAMgc,eAAiB,OAAS,KAClE,OAAOxX,KAAKxE,MAAM/D,SAASvE,IAAIsX,IAC7B,MAMMuT,EA7DI,YA6DKvT,EAAI+T,YAA0Bve,KAAKwe,iBAAiBhU,GAAO+S,GAAa/S,EAAI+T,aACrFK,EAAapU,EAAIqU,KAAkB,KAAX,SACxBJ,EAAYjU,EAAI/S,SAAS9I,OAAO,GAAG,GACnCmwB,EAAUL,EAAUjpB,YAC1B,OAAO,wBAAIyL,UAAS,uBAAkB0d,GAAankB,IAAKgQ,EAAIvd,GAAIiW,QAV1C,KAChB5Q,EAAW0N,KAAKxE,MAAMgc,iBACxBuH,SAASC,SAAS/V,KAAOjJ,KAAKqe,eAAe7T,MASnC,uBAAGvJ,UAAS,wBAAmB2d,IAC1BpU,EAAIxV,YADT,KACwBwV,EAAIyU,aAD5B,KAGA,uBAAGlkB,MAAOA,GAAMgjB,QACXA,EADL,MACgB7wB,YAAW4xB,EAAS9e,KAAKrN,MAAMvF,WAE/C,uBAAG2N,MAAOA,GAAMkjB,SAAUQ,EAAU1rB,UAnCtD,0BACE,MAAM3F,QAAiB4S,KAAKwM,QAAQpe,GAAG8L,YAAYglB,aAAapnB,IAAI,eACpEkI,KAAKC,SAAS,CACZ7S,aAqCJiU,SACE,OAAO,oCACK,kBAAC,GAAD,CAAYqH,MAAO/X,IAAKC,EAAE,YAAaqmB,OAAQjX,KAAKxE,MAAMxO,KAAKC,GAAIuqB,cAAexX,KAAKxE,MAAMgc,cAAeC,YAAazX,KAAKxE,MAAMxO,KAAKmwB,YACzI,kBAAC,GAAD,MACCnd,KAAKxE,MAAM/D,SAAS7B,OAAS,GAAK,yBAAKqL,UAAU,0BAC1C,wBAAIlG,MAAOA,GAAMqC,MAAO4C,KAAK0e,mBAC7B,yBAAK3jB,MAAOA,GAAM8iB,QACd,uBAAG5U,KAAMjJ,KAAKqe,kBACT1tB,IAAKC,EAAE,yBAcxCwtB,GAAazR,aAAe,CAC1Bve,GAAIwe,IAAU/d,OACdJ,QAASme,IAAUuS,QAUNC,OADWnkB,YANFtI,IACf,CACL8E,SAAUpD,OAAOC,OAAOkD,GAAiB7E,MAIM,KAAzBsI,CAA+BmjB,I,qBC7F1CiB,OAtBU7jB,GAAS,oCAC1B,kBAAC,GAAD,CAAYkN,MAAO/X,IAAKC,EAAE,qCAAsC,CACpEb,KAAMyL,EAAMxO,KAAK+C,OACfknB,OAAQzb,EAAMxO,KAAKC,GAAIuqB,cAAehc,EAAMgc,cAAeC,YAAajc,EAAMxO,KAAKmwB,YACjF,yBAAKpiB,MAAO,CAChB2M,QAAS,OACT4X,eAAgB,SAChBC,WAAY,SACZ1e,OAAQ,QAEA,kBAAC,KAAD,CAAmB9F,MAAO,CAChCwI,MAAO,IACP1C,OAAQ,IACR2e,MAAO,UACNzb,MAAM,eCNEvS,OAVS,EACtByP,eACI,yBAAKA,UAAWA,EAAWqB,MAAM,6BAA6BC,QAAQ,YAAYC,KAAMZ,IAAO6d,SAC7F,0BAAM3qB,EAAE,gBAAgB0N,KAAK,SAC7B,0BAAM1N,EAAE,oICMD4qB,OAVI,EACjBze,eACI,yBAAKA,UAAWA,EAAWqB,MAAM,6BAA6BiB,MAAM,KAAK1C,OAAO,KAAK0B,QAAQ,YAAYC,KAAMZ,IAAOoV,QACpH,0BAAMliB,EAAE,kFACR,0BAAMA,EAAE,gBAAgB0N,KAAK,U,0BCMrC,MAAMmd,GAAe3yB,GAAQ8C,IAAY9C,EAAK+C,MAAMW,YAI9CkvB,GAAW,CAACpkB,EAAOgR,KACvB,MAAM,KACJxf,EADI,cAEJwqB,EAFI,uBAGJqI,GACErkB,EACEskB,EARgB9yB,IAAQV,YAAQU,EAAK8C,IAAY9C,EAAK+C,MAAMU,WAAW8D,OAAO,CAACvH,EAAM+yB,EAAOlzB,IAAUA,EAAMmgB,UAAUgT,GAAMA,EAAG/yB,KAAOD,EAAKC,MAAQ8yB,GAQpIE,CAAgBjzB,GAgBrC,OAAO,oCACG,kBAAC,GAAD,CAAY0b,MAAOiX,GAAa3yB,GAAOiqB,OAAQjqB,EAAKC,GAAIuqB,cAAeA,EAAeC,YAAazqB,EAAKmwB,YACxG,kBAAC,GAAD,MACA,yBAAKlc,UAAU,0BACX,wBAAIA,UAAWC,KAAQ9D,MAClB0iB,EAAa5sB,IAAIgtB,GAAe,wBAAIjf,UAAWC,KAAQlU,KAAMwN,IAAK0lB,EAAYjzB,IACvE,kBAACkzB,GAAD,CAAiBlf,UAAWC,KAAQkf,WApB9CF,KACd,MAAMG,EAAe,4BAAQpf,UAAWC,KAAQof,aAAcpd,QAAS,IAAM2c,EAAuB7yB,EAAMkzB,IAC9F,kBAAC,GAAD,CAAYjf,UAAWC,KAAQqf,cAE3C,OAAO,oCACK,uBAAGtf,UAAWC,KAAQ8B,KAAMjI,MAAO,CAC3CgJ,MAAOnC,IAAO4e,SACbvX,KAAMjY,YAAWhE,EAAK+C,KAAMmwB,EAAa1T,EAAQpe,KACrC8xB,EAAYnrB,MAEhB7C,EAAWslB,GAAiB6I,EAAe,OAW/BhH,CAAQ6G,SAYrCN,GAASjT,aAAe,CACtBve,GAAIwe,IAAU/d,QAEDoM,mBAAQ,KAAM,CAC3B4kB,uBC7DoC,CAAC5S,EAAe/K,IAAY7J,IAChE,MAAMyU,EAAehd,IAAYmd,EAAcld,MAAMU,SAC/CgwB,EAAaxT,EAAcH,GAAcvY,OAAOvH,GAAQA,EAAKC,KAAOiV,EAAQjV,IAE9EwzB,EAAW7qB,QACbqX,EAAcH,GAAgB2T,EAC9BpoB,EAASiT,GAAsB2B,KAE/B5U,EAASkT,GAAsB0B,MDoDpBhS,CAEZ2kB,I,UE5DI,MAMMc,GAAgC,GACvCC,GAA0B,GACnBC,GAA4B,CACvC3zB,GAAI,GACJ8H,KAAM,GACNU,OAAQ,GACRR,YAAa,GACbU,eAAgBgrB,IAiGX,MAAME,GAAyBluB,GAASA,EAAMmuB,eAExCC,GAAiBpuB,IAAUkG,KAAQlG,EAAMmuB,gBAGzCE,GAA0BruB,IAAU,IAAD,EAC9C,OAAO,UAAAkuB,GAAuBluB,UAAvB,eAA+BgD,iBAAkBgrB,IC1GpD5lB,GAAQ,CACZsb,QAAS,CACP9O,QAAS,OACT0Z,WAAY,WACZjD,WAAY,QAEdkD,UAAW,CACT1c,SAAU,OACV2c,YAAa,SACb5d,MAAO,MACPmJ,OAAQ,SACRhF,QAAS,QACTsW,WAAY,QAEdtH,UAAW,CACToH,aAAc,OACdxV,UAAW,SAqFArN,mBAxBS,CAACtI,EAAOuV,KAE9B,IAAIjV,EAGFA,EAJqB8tB,GAAepuB,GAI5BquB,GAAwBruB,GACvBT,EAAWgW,EAASsP,eACrBrN,GAAuBxX,GAEvBwB,EAAmBxB,GAG7B,MAAM3F,EAAOiG,EAAMoE,KAAKrK,GAAQA,EAAKC,KAAOib,EAASlb,KAAKC,IAC1D,MAAO,CACL8F,KAAM/F,EAAOA,EAAK+F,KAAO,KAUW,CACtCuY,0BADarQ,CAjFEO,IACf,MAAM,KACJxO,EADI,cAEJwqB,EAFI,KAGJzkB,EAHI,sBAIJuY,GACE9P,EAEE4lB,EAAe7gB,IACnB,MAAM8gB,EAAW,2BAAQr0B,GAAR,IACf+F,KAAMwN,EAAMwE,OAAO5X,QAErBme,EAAsB+V,IAGlBC,EAAW,KACf,MAAMC,EAAeltB,OAAOoN,OAAO,GAAI1G,GAAMmmB,UAAWnmB,GAAMsb,SAC9D,OAAO,yBAAKpV,UAAU,yBAAyBlG,MAAOA,GAAM2b,WAChD,kBAAC,UAAD,CAAgB3b,MAAOwmB,GAAexuB,KAI9CyuB,EAAW,IACR,oCACK,kBAAC,GAAD,CAAY9Y,MAAO/X,IAAKC,EAAE,aAAcqmB,OAAQjqB,EAAKC,GAAIuqB,cAAeA,IACxE,kBAAC,GAAD,MACA,yBAAKvW,UAAU,0BACX,kBAAC,UAAD,CAAgBwgB,OAAQL,GACpB,kBAAC,KAAD,CAAOj0B,MAAO4F,EAAM2uB,WAAS,EAACC,WAAS,EAAC5mB,MAAOA,GAAMmmB,UAAW1b,YAAa7U,IAAKC,EAAE,iBAAkB6U,SAAU2b,OAMhIQ,EAAY,KAChB,MAAML,EAAeltB,OAAOoN,OAAO,GAAI1G,GAAMmmB,UAAWnmB,GAAMsb,SAC9D,OAAO,oCACM7a,EAAMxO,KAAKmwB,UAAY,kBAACtF,GAAD,MAAoB,KAC5C,yBAAK5W,UAAU,yBAAyBlG,MAAOA,GAAM2b,WACjD,kBAAC,UAAD,CAAgB3b,MAAOwmB,GAAexuB,MAKxD,IAAI8uB,EAUJ,OAPEA,EADE3vB,EAAWslB,GACFgK,EACFhK,IAAkBvlB,EAChB2vB,EAEAN,EAGN,oCAAGO,OC9EZ,MAAMC,GAAe,CAACC,EAAY/0B,EAAM8J,KACtC,IAAIkrB,EAAS,UAAMD,EAAW7wB,UAAjB,4BAA8ClE,EAAKC,IAEhE,GAAI6J,GAAeA,EAAW,IAAqBA,EAAW,GAAkBlB,OAAQ,CACtF,MAAMqsB,EAAQnrB,EAAW,GAAkB5D,IAAIgvB,GAAYA,EAASC,KAAK7sB,MAAM,KAAK3G,OAAO,GAAG,IAC9FqzB,GAAS,uBAAoBC,EAAM1sB,KAAK,MAG1C,OAAOysB,GAGHI,GAAU,EACd5K,gBACAxqB,OACA8J,eACC0V,KACD,IAAIuV,EACJ,MAAMM,EAASr1B,EAAKq1B,OAMpB,OAJIA,IACFN,EAAavV,EAAQpe,GAAGk0B,OAAOC,cAAclrB,KAAKmrB,GAAOA,EAAIhoB,MAAQ6nB,IAGhEN,GAAcA,EAAWhtB,MAAQgtB,EAAW7wB,UAAY,oCACrD,kBAAC,GAAD,CAAYwX,MAAOqZ,EAAWhtB,KAAMkiB,OAAQjqB,EAAKC,GAAIuqB,cAAeA,EAAeC,YAAazqB,EAAKmwB,YACrG,kBAAC,GAAD,MACA,4BAAQzU,MAAOqZ,EAAWhtB,KAAM0tB,IAAKX,GAAaC,EAAY/0B,EAAM8J,GAAcmK,UAAU,yBAAyBlG,MAAO,CAClI0e,OAAQ,WAEA,oCACF,kBAAC,GAAD,CAAY/Q,MAAK,UAAK2Z,EAAL,oBACjB,kBAAC,GAAD,MACA,yBAAKphB,UAAU,yBAAyBlG,MAAO,CACrD2M,QAAS,OACT4X,eAAgB,SAChBC,WAAY,SACZ1e,OAAQ,QAEE,kBAAC,KAAD,CAAmBkD,MAAM,WAAWiC,UAAQ,EAACjL,MAAO,CAC5DwI,MAAO,IACP1C,OAAQ,IACR2e,MAAO,eAWf4C,GAAQzV,aAAe,CACrBve,GAAIwe,IAAU/d,QAUDoM,mBAPS,CAACtI,EAAOuV,KAEvB,CACLpR,YAFmB5E,EAAWgW,EAASsP,eAA8C5gB,GAA7BC,GAAoBlE,KAMjEsI,CAAyBmnB,ICpExC,MAAMrnB,GAAQ,CACZ2R,OAAQ,YACRlI,SAAU,OACVwZ,WAAY,OACZja,MAAOnC,IAAO4G,SAgBDka,OAbIlnB,GACV,oCACG,kBAAC,GAAD,CAAYkN,MAAO/X,IAAKC,EAAE,UAAWqmB,OAAQzb,EAAMxO,KAAKC,GAAIuqB,cAAehc,EAAMgc,cAAeC,YAAajc,EAAMxO,KAAKmwB,YACxH,uBAAGpiB,MAAOA,IACLpK,IAAKC,EAAE,gFCZT+xB,OAFO,IAAM,8B,sBCS5B,MAAMC,GAAqB,EACzB7tB,OACAE,cACA6B,cACAd,qBAYO,yBAAKiL,UAAWC,KAAQ2hB,WACrB,uBAAG5hB,UAAWC,KAAQnM,MAAOA,GAC5BiB,GAAmBf,GAAe,uBAAGgM,UAAWC,KAAQjM,aAAcA,GACtE6B,EAAYlB,OAAS,GAAK,oCACnB,uBAAGqL,UAAWC,KAAQ4hB,aACjBnyB,IAAKC,EAAE,oBAfJ,MACxB,MAAMmyB,EAAYjsB,EAAY5D,IAAI,EAChC6B,OACAT,YACI,wBAAI2M,UAAWC,KAAQ8hB,eAAgBxoB,IAAKzF,GACrCA,EADP,KACeT,EAAOpB,IAAI+vB,GAAOA,EAAIluB,MAAMQ,KAAK,QAEtD,OAAO,wBAAI0L,UAAWC,KAAQgiB,YAAaH,IAU1BI,KAWrBP,GAAmBxgB,aAAe,CAChCnN,YAAa,GACbF,KAAM,GACNiB,iBAAiB,GAiBJiF,mBAdStI,IACtB,MAAM1F,EAAKkJ,EAAexD,GACpBT,EAAa+X,GAActX,GAC3BywB,EAAgBpvB,EAAkBrB,EAAO1F,IAAOyG,EAGtD,MAAO,CACLqB,KAHW7C,EL8DuBS,IAASkuB,GAAuBluB,GAAOoC,KK9DjDsuB,CAAuB1wB,IAAUhC,IAAKC,EAAE,sBAAwBwyB,EAAcpuB,YAItGC,YAHkB/C,EL8DuBS,IAASkuB,GAAuBluB,GAAOsC,YK9DjDquB,CAA8B3wB,GAASywB,EAAcluB,mBAIpF4B,YAAaC,GAAqBpE,GAClCqD,gBAAiBK,GAA4B1D,KAIlCsI,CAAyB2nB,ICpDxC,MAsCa9H,GAAOtf,IAClB,MAAM+nB,EAvCYxzB,KAClB,OAAQA,GACN,KAAKjB,IACL,KAAKC,IACL,KAAKC,IACL,KAAKC,IACL,KAAKE,IACL,KAAKD,IACH,OAAOs0B,GAET,KAAKh0B,IACH,OAAO4uB,GAET,KAAK/uB,IACL,KAAKC,IACL,KAAKC,IACH,OAAOqwB,GAET,KAAKnwB,IACH,OAAOg0B,GAET,KAAK/zB,IACH,OAAOgzB,GAET,KAAKtzB,IACH,OAAOgzB,GAET,KAAKzyB,IACH,OAAOgzB,GAET,KAAK/yB,IACH,OAAOgzB,GAET,QACE,OAAOvD,KAKMqE,CAAYloB,EAAMxO,KAAK+C,MACxC,OAAO,kBAACwzB,EAAD,CAAUv2B,KAAMwO,EAAMxO,KAAMwqB,cAAehc,EAAMgc,cAAeqF,qBAAsBrhB,EAAMqhB,wB,8CC9CrG,MAAM8G,WAAoC/jB,YAAW,eAAD,oBAYlDjN,MAAQ,CACNixB,YAAY,GAboC,KAelDC,aAAe,KAfmC,KAgBlDC,kBAAoB,KAhB8B,KAiBlDC,eAAiB,CACfC,SAAS,GAGXC,kBACE,IAAKjkB,KAAK6jB,aACR,OAGF,MAAMK,EAAWlkB,KAAKxE,MAAM2oB,aAAehkB,OAAOikB,YAC5CC,EAAOrkB,KAAK6jB,aAAaS,wBAE3BD,EAAKE,QAAUL,GAAYG,EAAK5f,IAAMtE,OAAOikB,YAAcF,IAC7DlkB,KAAKC,SAAS,CACZ2jB,YAAY,IAEd5jB,KAAKwkB,iBAITC,kBAAmB,IAAD,EAChBzkB,KAAK8jB,kBAAoB3gB,KAAS,IAAMnD,KAAKikB,kBAAmBjkB,KAAKxE,MAAMkpB,YAC3E,UAAA3F,SAAS4F,uBAAuB,qBAAqB,UAArD,SAAyDvkB,iBAAiB,SAAUJ,KAAK8jB,kBAAmB9jB,KAAK+jB,gBAGnHS,gBAAiB,IAAD,EACd,UAAAzF,SAAS4F,uBAAuB,qBAAqB,UAArD,SAAyD5jB,oBAAoB,SAAUf,KAAK8jB,kBAAmB9jB,KAAK+jB,gBAGtH9c,oBACEjH,KAAKykB,kBACLzkB,KAAKikB,kBAGP9N,uBACEnW,KAAKwkB,gBAGPnjB,SACE,MAAM,EAKFrB,KAAKxE,OALH,SACJ2G,EADI,UAEJlB,EAFI,MAGJlG,GAHF,EAIKS,EAJL,kDAMM,WACJooB,GACE5jB,KAAKrN,MACHiyB,EAAaC,KAAKrpB,EAAO,CAAC,cAAe,eAAgB,YAAa,eAC5E,OAAO,uCAAK0W,IAAKA,GAAOlS,KAAK6jB,aAAe3R,EAAKnX,MAAOA,EAAOkG,UAAWA,GAAe2jB,GAC5EhB,GAAczhB,IAnEzBwhB,GAQGvhB,aAAe,CACpBsiB,WAZsB,IAatBP,aAZwB,KA2EbR,UC1Df,MAEazH,GAA8B,EACpC,MAAM4I,WAAiBllB,YAAW,eAAD,oBACtCjN,MAAQ,CACNoyB,cAAe,IAFqB,KAItClI,qBAAuBmI,IACrB,MAAMC,EAA4D,mBAAxCjlB,KAAKrN,MAAMoyB,cAAcC,IAA2BhlB,KAAKrN,MAAMoyB,cAAcC,GACjGD,EAAa,eAAQ/kB,KAAKrN,MAAMoyB,eAEtCA,EAAcC,IAAcC,EAC5BjlB,KAAKC,SAAS,CACZ8kB,mBAVkC,KAsBtCG,eAAiBC,IACXnlB,KAAKxE,MAAMoZ,MACb5U,KAAKxE,MAAM4pB,wBAAwBD,IAxBD,KA2BtCE,aAAe,CAACC,EAAQC,EAASrZ,KAC/BsZ,YAAatZ,EAAQ2O,GACrB,MAAM5N,EAAgBjN,KAAKxE,MAAM7F,eAAe0B,KAAKrK,GAAQA,EAAKC,KAAOif,EAAQ2O,GAE7E5N,GAAiBpd,YAAoBod,IACvCwY,aAAaxY,IAhCqB,KAmCtCyY,wBAA0BzY,IACxB,MAAM0Y,EAAe3lB,KAAKrN,MAAMoyB,cAAc9X,EAAchgB,IAE5D,OAAI04B,IAAiC,IAAjBA,EACXtxB,OAAOoN,OAAO,GAAIwL,EAAe,CACtC3C,EAAG2C,EAAc3C,EA3CD,KA+Cb2C,GA5C6B,KA8CtC2Y,iBAAmB54B,IACjB,MAAM64B,EAAiB,CAAC74B,EAAK+C,KAAMiQ,KAAKxE,MAAMoZ,KAAO,OAAS,QAAQrf,KAAK,KAC3E,OAAO,kBAAC,GAAD,CAA6BiF,IAAKxN,EAAK6tB,EAAG5Z,UAAW4kB,GAChD,kBAAC,GAAD,CAAM74B,KAAMA,EAAMwqB,cAAexX,KAAKxE,MAAMoZ,KAAO9iB,E3FxE/C,O2FwE4D+qB,qBAAsB7c,KAAK6c,yBAjDnE,KAoDtCiJ,kBAAoB7yB,GAASA,EAAMC,IAAIlG,GAAQgT,KAAK4lB,iBAAiB54B,IAtCrEmY,0BAA0BC,GACpBA,EAAUwP,MACZ5U,KAAKC,SAAS,CACZ8kB,cAAe,KAqCrB1jB,SACE,MAAM,KACJuT,EADI,UAEJ7e,EAFI,eAGJJ,GACEqK,KAAKxE,MAET,IAAKzF,IAAcJ,EAAeC,OAChC,OAAO,kBAAC,GAAD,CAAkB7C,KAAMpC,IAAKC,EAAE,0CAGxC,MAAMqC,EAAQ2hB,EAAOjf,EAAiBA,EAAezC,IAAI8M,KAAK0lB,yBAC9D,OAAO,yBAAKzkB,UAAU,gBACTlL,EAAY,kBAAC,IAAD,CAAOgwB,aAAW,GACvB,kBAAC,IAAD,KACI,kBAAC,IAAD,QAEG,KACf,kBAAC,KAAD,CAAiBb,eAAgBllB,KAAKklB,eAAgBG,aAAcrlB,KAAKqlB,aAAcpkB,UAAU,SAASqkB,OAAQryB,EAAOyZ,OAAQsZ,IAAQC,KAAMC,cAAkBC,UAAWC,IAAiB7iB,MAAOpD,OAAOkmB,WAAYC,YAAaC,IAAmBC,YAAa5R,EAAM6R,YAAa7R,EAAM8R,gBAAgB,kBACxS1mB,KAAK8lB,kBAAkB7yB,MAY5C6xB,GAAS1iB,aAAe,CACtBzM,eAAgB,IAGlB,MASMmS,GAAqB,CACzBsd,wB3C/EqCj4B,IAAK,CAC1C4C,KFlCuC,4BEmCvC5C,W2C0Fa8N,mBAvBS,CAACtI,EAAOuV,KAC9B,MAAMuH,EAAoBvH,EAAS0M,KAAO7K,GAAsBpX,GAASqB,EAAkBrB,EAAOwD,EAAexD,IAC3GgD,EAAiBuS,EAAS0M,KAAOzK,GAAuBxX,GAASwB,EAAmBxB,GAC1F,MAAO,CACLoD,UAAWK,EAAsBzD,KAAW8c,EAC5C9Z,mBAkBoCmS,GAVrB,CAACE,EAAYC,EAAeC,KAC7C,MAAMye,EAAar6B,YAAQ0b,EAAWrS,gBAAgBpB,OAAOqyB,KAC7D,OAAO,2BAAK3e,GAAZ,IACE2M,KAAM1M,EAAS0M,KACf7e,UAAWiS,EAAWjS,UACtBJ,eAAgBgxB,EAChBnB,oBAIWvqB,CAAyD6pB,ICrIxE,MAAMxgB,GAAS,CACbuiB,eAAgB,CACdna,OAAQ,MACRnF,QAAS,SACTuf,aAAc,MACd/iB,MAAOnC,IAAOE,MACdJ,gBAAiB,UACjBb,OAAQ,GACR6G,QAAS,OACT6X,WAAY,UAEdwH,MAAO,CACLviB,SAAU,OACV+O,OAAQ,UACR0N,WAAY,UAEd+F,YAAa,CACXxiB,SAAU,OACVmD,eAAgB,YAChB2M,WAAY,OACZf,OAAQ,YAIZ,MAAM0T,WAAoBrnB,YAAW,eAAD,oBAClCsD,QAAUjW,GAAM,IAAM+S,KAAKxE,MAAM0H,QAAQjW,GADP,KAElCi6B,SAAWj6B,GAAM,IAAM+S,KAAKxE,MAAM0rB,SAASj6B,GAE3CoU,SACE,MAAM,KACJzM,GACEoL,KAAKxE,MACT,OAAO,yBAAKT,MAAOuJ,GAAOuiB,gBACd,0BAAM9rB,MAAOuJ,GAAOyiB,MAAO7jB,QAASlD,KAAKkD,QAAQtO,EAAK3H,KAAtD,UACQ2H,EAAKG,KADb,aACsBH,EAAKN,OAAOsB,OAAS,EAAIjF,IAAKC,EAAE,qBAAsB,CAClFu2B,MAAOvyB,EAAKN,OAAOsB,SAChBhB,EAAKN,OAAO,GAAGS,OAEZ,0BAAMgG,MAAOuJ,GAAO0iB,YAAa9jB,QAASlD,KAAKknB,SAAStyB,EAAK3H,KACxD0D,IAAKC,EAAE,aAY5Bq2B,GAAY7kB,aAAe,CACzBc,QAASyC,SAASC,UAClBshB,SAAUvhB,SAASC,WAENqhB,U,sBCnDR,MAAMG,WAAkBxnB,YAAW,eAAD,oBACvCynB,cAAgBp6B,IACd+S,KAAKxE,MAAM0U,iBAAiBjjB,IAFS,KAIvCq6B,aAAer6B,IACb+S,KAAKxE,MAAMuW,wBAAwB,CACjC9kB,KACA8H,KAAMiL,KAAKxE,MAAMvE,QAAQI,KAAKrK,GAAQA,EAAKC,KAAOA,GAAI8H,QAI1DsM,SACE,MAAM,QACJpK,GACE+I,KAAKxE,MACT,OAAOvE,EAAQrB,OACf,yBAAKqL,UAAWC,KAAQqmB,IAAKxsB,MAAO,CAClC0J,IAAK,IAEMxN,EAAQ/D,IAAIqB,GAAU,kBAAC,GAAD,CAAaiG,IAAKjG,EAAOtH,GAAI2H,KAAML,EAAQ2O,QAASlD,KAAKsnB,aAAcJ,SAAUlnB,KAAKqnB,kBACxG,MASrBD,GAAUhlB,aAAe,CACvBnL,QAAS,GACTuwB,iBAAkB7hB,SAASC,WAOd3K,mBAJStI,IAAK,CAC3BsE,QAASF,GAAqBpE,KAGQ,CACtCof,wBAAyBF,GACzB3B,iBAAkB3Y,IAFL0D,CAGZmsB,ICjDI,MACMK,GAA8BtnB,OAAOikB,YAY3C,MAAMsD,GAAmB/0B,GAASA,EAAMg1B,aCRlCC,GAAsB,CAACpzB,EAAWvB,KAItC,CACLlD,KZN+B,sBYO/B5C,MALO,2BAAQqH,GAAR,IACPmB,eAAgB1C,MAOP40B,GAAwB,MACnC93B,KZVmC,0BYgBxB+3B,GAA0B96B,IACrC,MAAM+C,EAAO/C,EAAK+C,YACX/C,EAAK+C,KACZ,MAAM8a,EAAe/a,IAAYC,GAAMU,SACjCxD,EAAK6d,yBACLC,EAAqBxX,YAAsBtG,GACjD,IAAI+d,EAEJ,GAAIjb,IAASJ,IAAW,CACtB,MAAMsb,EAAOje,EAAKie,MAAQ,EAC1BD,EAAQE,YAAsBD,EAAMje,EAAKme,eAEzCH,EAAQI,YAA2Bpe,EAAK+6B,kBAG1C,MAAO,CACLh4B,KZ/BoC,2BYgCpC5C,MAAM,qCACJF,KACA8C,OACAuV,SAAUtY,EAAKsY,UAAY,KAC3B,CAACuF,GAAe7d,EAAKkV,SAClBmJ,KACAN,GACAC,KAQIgd,GAA6Bh7B,IAAI,CAC5C+C,KZ7CyC,8BY8CzC5C,MAAOH,ICKMiO,mBAVStI,IACf,CACLs1B,mBAAoBhe,GAActX,GAClCu1B,oBAAqBnH,GAAepuB,GACpC6L,eAAgBN,GAAuBvL,GACvCuU,WAAY/Q,EAAexD,GAC3Bg1B,aAAcD,GAAiB/0B,KAIK,CACtCw1B,mBAAoBxd,GACpByd,oBAAqBP,IAFR5sB,CA5CcO,IAC3B6sB,oBAAU,KACJ7sB,EAAMysB,mBACRzsB,EAAM2sB,qBACG3sB,EAAM0sB,qBACf1sB,EAAM4sB,uBAEP,CAAC5sB,EAAMysB,mBAAoBzsB,EAAM0sB,sBACpCG,oBAAU,KAAO,IAAD,EACd,UAAAtJ,SAASuJ,cAAc,6BAAvB,SAA8CC,OAAO,EAAG,IACvD,CAAC/sB,EAAM0L,aACV,MAAMrG,EAASrF,EAAMmsB,a1DvBS,G0DuByBvhB,GAAoB5K,EAAMgD,gBACjF,OAAO,oCACG,kBAAC,GAAD,MACA,kBAAC,GAAD,MACA,yBAAKyC,UAAU,oBAAoBlG,MAAO,CAChD8F,WAEU,kBAAC,GAAD,CAAU+T,MAAM,IAChB,kBAAC,GAAD,MACA,kBAAC,GAAD,CAAUA,MAAM,Q,4CCAjB4T,OA/BoB,EACjCrsB,gBACAssB,oBACAC,oBACAhwB,WAEA,MAAMsb,EAAU,CAAC,kBAAC,IAAD,CAAQxZ,IAAI,SAAS+W,WAAS,EAACrO,QAASwlB,GAC9C/3B,IAAKC,EAAE,WACD,kBAAC,IAAD,CAAQ4J,IAAI,SAASmuB,aAAW,EAACzlB,QAASulB,GAChD93B,IAAKC,EAAE,YAElB,OAAO8H,GAAQ,kBAAC,IAAD,CAAOiD,QAAS+sB,EAAmBvP,OAAK,EAAC7T,SAAS,UACnD,kBAAC,IAAD,KAAa3U,IAAKC,EAAE,qBACpB,kBAAC,IAAD,KACI,0BAAMqQ,UAAWC,KAAQgB,SACpBvR,IAAKC,EAAE,mKAAoK,CAC1LuL,oBAIM,kBAAC,IAAD,KACI,kBAAC,IAAD,KAAc6X,MCTlC,MAAM4U,GAAiB,CACrB/nB,O5DjBoC,G4DkBpC0T,WAAY,OACZD,WAAY,OACZ1M,YAAa,QAER,MAAMihB,WAAgBjpB,YAAW,eAAD,oBACrCjN,MAAQ,CACNm2B,yBAAyB,EACzBC,oBAAgB76B,EAChB86B,yBAAyB,EACzBhW,iBAAa9kB,GALsB,KAOrC+6B,gBAAkB,KAChBjpB,KAAKC,SAAS,CACZ+oB,yBAAyB,KATQ,KAYrCE,OAAS,KACPlpB,KAAKxE,MAAM0tB,SAASrxB,KAAKsxB,IACvBnpB,KAAKC,SAAS,CACZ+S,YAAY,IAAD,OAAMmW,QAfc,KAmBrCC,eAAiB,KACXppB,KAAKxE,MAAM6tB,oBACbrpB,KAAKxE,MAAM8tB,oBACXtpB,KAAKxE,MAAM4sB,uBAEXpoB,KAAKxE,MAAM+tB,oBAxBsB,KA2BrCC,UAAY,KACVxpB,KAAKxE,MAAMiuB,mBACX,MAAMzW,EAAchT,KAAKxE,MAAM5H,YAAX,WAA6BoM,KAAKxE,MAAM5H,aAAgB,IAC5EoM,KAAKC,SAAS,CACZ+S,iBA/BiC,KAkCrC0V,kBAAoB,KAClB1oB,KAAKC,SAAS,CACZ+oB,yBAAyB,KApCQ,KAuCrCP,kBAAoB,KAClBzoB,KAAKC,SAAS,CACZ+oB,yBAAyB,IAE3BhpB,KAAKxE,MAAMkuB,SAAS1pB,KAAKxE,MAAM5H,aAAaiE,KAAK,KAC/CmI,KAAKC,SAAS,CACZ+S,YAAa,SA7CkB,KAiDrC2W,oBAAsBhyB,UACpB,GAAIiyB,GAAgBA,EAAah0B,OAAQ,CACvC,MAAMi0B,QAAiB7pB,KAAKwM,QAAQpe,GAAG8L,YAAYglB,aAAapnB,IAAI,eAC9DgyB,EAAcF,EAAavyB,KAAKzG,GAAKA,EAAEpD,SAAWq8B,GAA2B,SAAfj5B,EAAEm5B,UAElED,GAAeA,EAAY38B,OAC7B6S,KAAKxE,MAAMwuB,YAAYhqB,KAAKxE,MAAM5H,YAAak2B,EAAY38B,SAvD5B,KA2DrC88B,oBAAsB,KAChBjqB,KAAKxE,MAAM5H,cAAgBoM,KAAKrN,MAAMo2B,gBACxCjvB,GAAkBkG,KAAKxE,MAAM5H,aAAaiE,KAAKkxB,GAAkB/oB,KAAKC,SAAS,CAC7E8oB,qBA9D+B,KA2ErCmB,wBAA0B,KACxBlqB,KAAKC,SAAS,CACZ6oB,yBAA0B9oB,KAAKrN,MAAMm2B,2BA7EJ,KAgFrCqB,oBAAsB,IAAMnqB,KAAKxE,MAAM4uB,cAAgBpqB,KAAKxE,MAAM5H,YAAc,kBAAC,GAAD,CAAqBuI,cAAe6D,KAAKxE,MAAMW,cAAessB,kBAAmBzoB,KAAKyoB,kBAAmBC,kBAAmB1oB,KAAK0oB,kBAAmBhwB,KAAMsH,KAAKrN,MAAMq2B,0BAA8B,KAhF9O,KAiFrCqB,kBAAoB,IAAMrqB,KAAKrN,MAAMo2B,gBAAkB/oB,KAAKrN,MAAMo2B,eAAe97B,GAAK,kBAAC,KAAD,CAAmBgU,UAAU,qBAAqB7S,GAAI4R,KAAKwM,QAAQpe,GAAIsK,KAAMsH,KAAKrN,MAAMm2B,wBAAyBtU,eAAgBxU,KAAKkqB,wBAAyBI,kBAAmBtqB,KAAKrN,MAAMo2B,eAAgBwB,kBAAmB,CAAC,OAAQ,eAC/TC,mBAAoBxqB,KAAK2pB,oBAAqBc,mBAAoBnyB,GAAOL,QAAQC,IAAI,2BAA4BI,KAAW,KAlFvF,KAmFrCoyB,oBAAsB,KACpB,MAAMC,EAAmB3qB,KAAKxE,MAAM6tB,mBAAqB14B,IAAKC,EAAE,sBAAwBD,IAAKC,EAAE,iBAC/F,OAAO,yBAAKqQ,UAAWC,KAAQuG,cACnB,kBAAC,IAAD,MACMzH,KAAKxE,MAAM6tB,oBAAsB,kBAAC,IAAD,CAAQ7X,SAAO,EAACtO,QAASlD,KAAKkpB,QACxDv4B,IAAKC,EAAE,iBAEhB,kBAAC,IAAD,CAAQsS,QAASlD,KAAKopB,gBACjBuB,IAGH3qB,KAAKxE,MAAM6tB,oBAAsBrpB,KAAKxE,MAAM5H,YAAc,kBAAC,IAAD,CAAQsP,QAASlD,KAAKkqB,yBACzEv5B,IAAKC,EAAE,cACA,MACdoP,KAAKxE,MAAM6tB,oBAAsBrpB,KAAKxE,MAAM5H,aAAeoM,KAAKxE,MAAM4uB,aAAe,kBAAC,IAAD,CAAQlnB,QAASlD,KAAKipB,iBACpGt4B,IAAKC,EAAE,WACA,QAhClCqW,oBACEjH,KAAKiqB,sBAGP/T,qBACElW,KAAKiqB,sBAgCP5oB,SACE,GAAIrB,KAAKrN,MAAMqgB,YACb,OAAO,kBAAC,IAAD,CAAU/P,GAAIjD,KAAKrN,MAAMqgB,cAGlC,MAAM,aACJ4X,GACE5qB,KAAKxE,MACH6L,EAAmBjB,G5DpIA,G4DqInBykB,EAAiBD,EAAej6B,IAAKC,EAAE,uBAAyBD,IAAKC,EAAE,oBAC7E,OAAO,oCACK,kBAAC,GAAD,CAAYiQ,OAAQwG,EAAkB1F,UAAU,GAC5C,yBAAK5G,MAAO6tB,IACPgC,EAAe5qB,KAAK0qB,sBAAwB,MAE3C1qB,KAAKxE,MAAM6tB,oBAAsB,yBAAKpoB,UAAWC,KAAQ4pB,eACnD,kBAAC,IAAD,CAAQvZ,WAAS,EAACrO,QAASlD,KAAKwpB,WAC3BqB,MAKrB,yBAAK5pB,UAAWC,KAAQ6pB,YACvB/qB,KAAKqqB,oBACLrqB,KAAKmqB,wBAmBtBtB,GAAQlc,aAAe,CACrBve,GAAIwe,IAAU/d,QAmCDoM,mBAhCStI,IACtB,MAAM6B,EAAYuV,GAAsBpX,GACxC,IAAIy3B,EACAQ,EAUJ,MpDpCgCj4B,KACxBkG,KAAQlG,EAAMqX,gBAAsD,KAApCD,GAAsBpX,GAAO1F,GoD2BjE+9B,CAAmBr4B,IACrBy3B,GAAe,EACfQ,GAAe,IAEfA,IAAep2B,EAAUiB,QAASjB,EAAUiB,OAAO0e,OACnDiW,IAAe51B,EAAUiB,QAASjB,EAAUiB,OAAOiI,QAG9C,CACL9J,YAAaY,EAAUvH,GACvBkP,cAAe3H,EAAUO,KACzBq1B,eACAf,mBAAoBnf,GAAuBvX,GAC3Ci4B,iBAIuBvyB,IAAQ,CACjC+vB,oBAAqB,IAAM/vB,EHvLQ,CACnCtI,KZVmC,0BeiMnCu5B,kBAAmB,IAAMjxB,ElDpKY,CACrCtI,KFrBsC,6BoDyLtCm5B,OAAQ,IAAM7wB,EAASmT,MAAkB3T,KAAK5K,GAAMA,GACpDy8B,SAAUz8B,GAAMoL,EAASwF,GAAiB5Q,IAC1Cw8B,iBAAkB,IAAMpxB,ElD7KU,CAClCtI,KFxBkC,yBoDqMlCi6B,YAAa,CAAC/8B,EAAIE,IAAUkL,E5EpLW,EAACzE,EAAazG,KAAd,CACvC4C,KnBfwC,6BmBgBxC6D,cACAzG,U4EiLqC89B,CAA0Bh+B,EAAIE,IACnEo8B,iBAAkB,IAAMlxB,ElD5KW,CACnCtI,KFnBoC,6BoDiMvBkL,CAA6C4tB,I,yCCtK7CqC,OAlCG,EAChBC,eAEA,MAAMjc,EAAWkc,IAAqBjrB,OAAOkmB,WAAa+E,IAAqBjrB,OAAOkmB,WAChFgF,EAAaF,EAAWx6B,IAAKC,EAAE,oBAAsBD,IAAKC,EAAE,qBAClE,OAAO,yBAAKqQ,UAAWC,KAAQoqB,aACrB,uBAAGrqB,UAAWC,KAAQmqB,YAAtB,UACQ16B,IAAKC,EAAE,iBADf,aACoCy6B,IAEpC,yBAAKtwB,MAAO,CAClBmU,aAEU,uBAAGjO,UAAWC,KAAQuV,MAAtB,UACQ9lB,IAAKC,EAAE,0BADf,MAGA,yBAAKqQ,UAAWC,KAAQuV,MACpB,wBAAIxV,UAAWC,KAAQqqB,UACnB,4BAAK56B,IAAKC,EAAE,mCACZ,4BACKD,IAAKC,EAAE,yDAEZ,4BACKD,IAAKC,EAAE,2FAKxB,wBAAIqQ,UAAWC,KAAQsqB,YC1BpBC,OAJY,IAAM,yBAAKnpB,MAAM,6BAA6BiB,MAAM,KAAK1C,OAAO,KAAK2B,KAAMZ,IAAO4G,QAASjG,QAAQ,aACtH,0BAAMzN,EAAE,ma,sBCgCD42B,OAzBS,EACtBz+B,SAEA,MAAMsW,EAAQ6nB,IAAqBjrB,OAAOkmB,WAAa+E,IAAqBjrB,OAAOkmB,WACnF,OAAO,oCACG,yBAAKplB,UAAWC,KAAQwV,WACpB,yBAAKzV,UAAWC,KAAQyqB,MAAO5wB,MAAO,CAC9CwI,UAEY,kBAAC,IAAD,CAAMtC,UAAWC,KAAQ8B,KAAMC,GAAE,WAAMhW,IACnC,kBAAC,IAAD,KACI,kBAAC2+B,GAAD,MACCj7B,IAAKC,EAAE,wBAGhB,kBAAC,IAAD,CAAQsS,QAAS/C,OAAO0rB,OAAQl7B,IAAKC,EAAE,YAG/C,yBAAKqQ,UAAWC,KAAQ6pB,c,qBC1B7B,MAAMe,GAAkBC,IAAY,IAAD,EACxC,IAAKA,IAAYA,EAAQlc,UACvB,OAAO,KAMT,MAAMmc,EAAU,UAAGD,EAAQlc,UAAUva,MAAM,KAAK,UAAhC,aAAG,EAAiC22B,MAAM,WAE1D,OAAID,EACKE,SAASF,EAAW,IAEpB,MCOJ,MAAMG,WAA4BvsB,YAAW,eAAD,oBACjDslB,eAAiBC,IACfnlB,KAAKxE,MAAM4wB,sBAAsBjH,IAFc,KAIjDkH,iBAAmBr/B,IACjB,GAAIA,EAAK+C,OAASJ,IAChB,OAAO,EAGT,MAAM28B,EAAatsB,KAAKxE,MAAM7F,eAAepB,OAAOsmB,GAAKA,EAAE9qB,OAASJ,KAC9D48B,EAAmBC,KAAOF,EAAY,CAAC,MAC7C,OAAOt/B,EAAKy/B,IAAMF,EAAiB,GAAGE,GAXS,KAajD7G,iBAAmB54B,IAEjB,MAAM64B,EAAiB6G,KAAG,QAAS,SAAV,UAAuB1/B,EAAK+C,MAAQ,CAC3D,mBAAoBiQ,KAAKxE,MAAMmxB,WAAa3sB,KAAKqsB,iBAAiBr/B,GAClEmwB,YAAanwB,EAAKmwB,YAEpB,OAAO,yBAAK3iB,IAAKxN,EAAK6tB,EAAG5Z,UAAW4kB,GACxB,kBAAC,GAAD,CAAM74B,KAAMA,EAAMwqB,cAAevlB,MApBE,KAuBjD6zB,kBAAoB7yB,GAASA,EAAMC,IAAIlG,GAAQgT,KAAK4lB,iBAAiB54B,IAErE4/B,sBACE,MAAMC,ED9BiCC,KACzC,MAAMC,EAAQ14B,OAAO6C,KAAKpH,KACpBk9B,EAA2B1gC,YAAQwgC,GAAU55B,IAAI8sB,IACrD,MAAMjwB,EAAOvD,MAAMygC,KAAKjN,EAAGkN,WAAW71B,KAAK4J,GAAa8rB,EAAMr+B,QAAQuS,IAAc,GAC9EojB,EAAOrE,EAAGsE,wBACVmI,EAAIX,GAAgB9L,EAAGjlB,QAAUmxB,SAAS7H,EAAKoI,GACrD,MAAO,CACL18B,OACAm9B,UAAWlN,EAAGkN,UACdC,QAASV,EAAIP,SAAS7H,EAAKxjB,QAC3Bmf,QAGJ,OAAOwM,KAAOQ,EAA0B,CAAC,aCiBhBI,CAA4B5gC,MAAMygC,KAAKlO,SAASsO,iBAAiB,sBACxF,IAAIC,EAAkB,EAClBC,EAAiB,EACjBC,GAAoB,EAExB,IAAK,IAAI3S,EAAIgS,EAAej3B,OAAS,EAAGilB,GAAK,IAAKA,EAAG,CACnD,MAAM7tB,EAAO6/B,EAAehS,GAE5B,GAAI7tB,EAAK+C,OAASJ,IAAW,CAC3B,GAAK69B,EAEE,CACLF,EAAkBtgC,EAAKmgC,QACvB,MAHAngC,EAAKgzB,GAAGkN,UAAU3e,IAAI,eAKnB,CACLif,GAAoB,EACpB,MAAMC,EAAiBzgC,EAAKmgC,QAExBM,EAAiBF,IACnBA,EAAiBE,IAKvB,MACMC,EAAc3O,SAASuJ,cAAc,sBAGrCpK,EAAYoP,EAJC,IAUnB,GAJII,IACFA,EAAY3yB,MAAM8F,OAAlB,UAA8Bqd,EAA9B,OAGEle,KAAKxE,MAAMmxB,UAAW,CAExB,MAAMgB,EAAa5O,SAASuJ,cAAc,qBAE1C,GAAIqF,GAAcA,EAAW5yB,OAAS4yB,EAAW5yB,MAAM8U,UAAW,CAChE,MAAM5E,EAAO6gB,GAAgB6B,EAAW5yB,OAClC6yB,EAAa7O,SAASuJ,cAAc,gBAC1CsF,GAAcA,EAAWrF,OAAO,EAAGtd,EAAO,MAKhDhE,oBACEjH,KAAK4sB,sBAGP1W,qBACElW,KAAK4sB,sBAGPvrB,SACE,MAAM,UACJtL,EADI,eAEJJ,GACEqK,KAAKxE,MAET,IAAKzF,IAAcJ,EAAeC,OAChC,OAAO,kBAAC,GAAD,CAAkB7C,KAAMpC,IAAKC,EAAE,0CAGxC,MAAM2S,EAAQ6nB,IAAqBjrB,OAAOkmB,WAAa+E,IAAqBjrB,OAAOkmB,WACnF,OAAO,yBAAKplB,UAAU,gBACTlL,EAAY,kBAAC,IAAD,CAAOgwB,aAAW,GACvB,kBAAC,IAAD,KACI,kBAAC,IAAD,QAEG,KACf,kBAAC,KAAD,CAAiBb,eAAgBllB,KAAKklB,eAAgBjkB,UAAU,SAASqkB,OAAQ3vB,EAAgB+W,OAAQsZ,IAAQC,KAAMC,cAAkBC,UAAWC,IAAiB7iB,MAAOA,EAAO+iB,YAAaC,IAAmBC,aAAa,EAAOC,aAAa,EAAOC,gBAAgB,kBACtQ1mB,KAAK8lB,kBAAkBnwB,MAY5Cw2B,GAAoB/pB,aAAe,CACjCzM,eAAgB,IAYHsF,mBATStI,IACtB,MAAM8c,EAAoBoR,GAAuBluB,GACjD,MAAO,CACLoD,UAAWK,EAAsBzD,KAAW8c,EAC5C9Z,eAAgBqrB,GAAwBruB,GAAO4B,OAAOqyB,KACtD+F,UAAW1iB,GAActX,KAIW,CACtCy5B,sBRnI0Cj/B,IAAK,CAC/C4C,KZXwC,6BYYxC5C,WQgIa8N,CAEZkxB,I,qCChIH,MAAM0B,GAAkBznB,GAAoB,G5EjBV,E4EmB5B0nB,GAAaC,IAEjB,IAAIC,EAAI,EACR,MAEMC,EAAcC,GAFF,EAEwB,EAAIA,EAE9C,IAAIC,EAAWF,EAAY,GACvBH,GAAa,EAEjB,KAAOK,EAAWJ,GAIhB,GAHAI,EAAWF,EAAYD,KACrBA,EAEEG,IAAaJ,EAAG,CAClBD,GAAa,EACb,MAIJ,OAAOA,GAkCF,MAAMM,WAA6BxuB,YAAW,eAAD,oBAClDjN,MAAQ,CACN07B,aAAa,GAFmC,KAIlDC,yBAA2B,KACrBtuB,KAAKxE,MAAMhH,YACbwL,KAAKC,SAAS,CACZouB,aAAa,IAEfruB,KAAKxE,MAAM+yB,kBAAkBvuB,KAAKxE,MAAMhH,UAAWwL,KAAKxE,MAAMvI,OAG9D+M,KAAKxE,MAAMvI,MAAM0J,QAAQ3P,IACnBA,EAAKsd,EAAIkkB,MACXxhC,EAAKmwB,WAAY,EACjBnd,KAAKxE,MAAMizB,oBAAoBp6B,OAAOoN,OAAO,GAAIzU,EAAM,CACrDsd,EAAGkkB,UA/CO,GACpBv7B,QACAy7B,uBAMA,IAAIzjB,EAAO,EACX,MAAM0jB,EAAW,GAEjB,IAAK,IAAIC,EAAU,EAAGA,GAAW37B,EAAM2C,SAAUg5B,EAC/B,IAAZA,EACF3jB,GAAQ,GACC6iB,GAAWc,GACpB3jB,GAAQ,GAERA,GAAQ,GAGV0jB,EAASv3B,KAAK6T,GAGhB,IAAK,IAAI4P,EAAI,EAAGA,EAAI5nB,EAAM2C,SAAUilB,EAClC6T,EAAiB,CACf3+B,KAAMJ,IACNsb,KAAM0jB,EAAS9T,MAyBfgU,CAAc7uB,KAAKxE,OACnBwE,KAAKxE,MAAMkzB,iBAAiB,CAC1B3+B,KAAMH,IACNm4B,kBAAkB,MAvB0B,KAsClD+G,gBAAkB,IACT9uB,KAAKxE,MAAMuzB,SAAW,CAC3Bxa,WAAYya,IAAQC,KACpBpuB,OAAQb,KAAKxE,MAAMmsB,aAAekG,GlElHR,IkEmHxB,CACFhtB,OAAQb,KAAKxE,MAAMmsB,aH/Ge,IGgGtC1gB,oBACEjH,KAAKsuB,2BAGPpY,qBACOlW,KAAKrN,MAAM07B,aACdruB,KAAKsuB,2BAaTjtB,SACE,OAAO,qCACOrB,KAAKxE,MAAMuzB,UAAY,kBAAC,GAAD,CAAiB9hC,GAAI+S,KAAKxE,MAAMhH,UAAUvH,KACnE,yBAAKgU,UAAWyrB,KAAGxrB,KAAQguB,QAAS,eAAgBn0B,MAAOiF,KAAK8uB,oBAC1D9uB,KAAKxE,MAAMuzB,UAAY,kBAAC,GAAD,CAAW5D,UAAU,IAC9C,yBAAKlqB,UAAWC,KAAQiuB,UAAWp0B,MAAO,CACpDwI,MAAO6nB,MAEO,kBAAC,GAAD,UAuCTnwB,mBAtBS,CAACtI,EAAOuV,KAC9B,MAAMjb,EAAKkJ,EAAexD,GAE1B,GAAIuV,EAAS6mB,SAAU,CAErB,MAAO,CACLv6B,UAFgBuV,GAAsBpX,GAGtC1F,KACAgG,MAAOkX,GAAuBxX,GAC9Bg1B,aAAcD,GAAiB/0B,IAKnC,MAAO,CACL6B,UAFgBvH,EAAK+G,EAAkBrB,EAAO1F,GAAM,KAGpDA,KACAgG,MAAOkB,EAAmBxB,GAC1Bg1B,aAAcD,GAAiB/0B,KAIK,CACtC47B,kBAAmB3G,GACnB8G,iBAAkB5G,GAClB2G,oBAAqBzG,IAHR/sB,CAIZmzB,IChKI,MAAMgB,WAAsBxvB,YAAW,eAAD,oBAC3CjN,MAAQ,CACN07B,aAAa,GAF4B,KAI3CgB,kBAAoB,KACdrvB,KAAKxE,MAAMhH,YACbwL,KAAKC,SAAS,CACZouB,aAAa,IAEfruB,KAAKxE,MAAM8zB,iBAAiBtvB,KAAKxE,MAAMhH,UAAWwL,KAAKxE,MAAMvI,SATtB,KAuB3Cs8B,WAAa,KACX,GAAIvvB,KAAKxE,MAAM6tB,mBACb,OAAO,kBAAC,GAAD,CAAoB0F,UAAU,IAGvC,MAAMluB,EAASb,KAAKxE,MAAMmsB,anEvCE,GmEuCgCvhB,GAAoB,GAChF,OAAO,yBAAKnF,UAAU,oBAAoBlG,MAAO,CAC/C8F,WAEU,kBAAC,GAAD,CAAU+T,MAAM,IAChB,kBAAC,GAAD,CAAUA,MAAM,MApB9B3N,oBACEjH,KAAKqvB,oBAGPnZ,qBACOlW,KAAKrN,MAAM07B,aACdruB,KAAKqvB,oBAkBThuB,SACE,OAAO,oCACK,kBAAC,GAAD,MACCrB,KAAKxE,MAAMovB,aAAe5qB,KAAKuvB,aAAe,kBAAC,GAAD,CAAkBx8B,KAAMpC,IAAKC,EAAE,iBA2B/EqK,mBAbStI,IACtB,MAAM1F,EAAKkJ,EAAexD,GACpB6B,EAAYvH,EAAK+G,EAAkBrB,EAAO1F,GAAM,KAEtD,MAAO,CACLuH,YACAo2B,gBAHmBp2B,IAAaA,EAAUiB,SAASjB,EAAUiB,OAAO0e,OAIpElhB,MAAOkB,EAAmBxB,GAC1B02B,mBAAoBnf,GAAuBvX,GAC3Cg1B,aAAcD,GAAiB/0B,KAIK,CACtC28B,iBzDnEgC,CAAC96B,EAAWvB,KAIrC,CACLlD,KFjBmC,0BEkBnC5C,MALO,2BAAQqH,GAAR,IACPmB,eAAgB1C,OyDgELgI,CAEZm0B,ICxEH,MAAMI,WAAqB5vB,YACzBqH,oBACEjH,KAAKxE,MAAMi0B,kBAGbpuB,SACE,MAAMR,EAASb,KAAKxE,MAAMmsB,apEdE,GoEcgCvhB,GAAoB,GAChF,OAAO,oCACK,kBAAC,GAAD,MACCpG,KAAKxE,MAAM6tB,mBAAqB,kBAAC,GAAD,CAAoB0F,UAAU,IAAW,yBAAK9tB,UAAU,oBAAoBlG,MAAO,CAC5H8F,WAEgB,kBAAC,GAAD,CAAU+T,MAAM,IAChB,kBAAC,GAAD,CAAUA,MAAM,OAkBzB3Z,mBALStI,IAAK,CAC3B02B,mBAAoBnf,GAAuBvX,GAC3Cg1B,aAAcD,GAAiB/0B,KAGO,CACtC88B,gB1DnBmC,MACnC1/B,KFpBiC,yB4DqCpBkL,CAEZu0B,IC7BI,MAAME,WAAsB9vB,YAAW,eAAD,oBAC3CgmB,iBAAmB54B,GAAQ,yBAAKwN,IAAKxN,EAAK6tB,EAAG5Z,UAAWyrB,KAAG1/B,EAAK+C,KAAM,QAAS,SACrE,kBAAC,GAAD,CAAM/C,KAAMA,EAAMwqB,cAAexlB,KAFA,KAI3C8zB,kBAAoB7yB,GAASA,EAAMC,IAAIlG,GAAQgT,KAAK4lB,iBAAiB54B,IAErEqU,SACE,MAAM,UACJtL,EADI,eAEJJ,GACEqK,KAAKxE,MAET,IAAKzF,IAAcJ,EAAeC,OAChC,OAAO,kBAAC,GAAD,CAAkB7C,KAAMpC,IAAKC,EAAE,0CAGxC,MAAM2S,EAAQ6nB,IAAqBjrB,OAAOkmB,WAAa+E,IAAqBjrB,OAAOkmB,WACnF,OAAO,oCACMtwB,EAAY,kBAAC,IAAD,CAAOgwB,aAAW,GACvB,kBAAC,IAAD,KACI,kBAAC,IAAD,QAEG,KACf,kBAAC,KAAD,CAAiB9kB,UAAU,eAAeqkB,OAAQ3vB,EAAgB+W,OAAQsZ,IAAQC,KAAMC,cAAkBC,UAAWC,IAAiB7iB,MAAOA,EAAO+iB,YAAaC,IAAmBC,aAAa,EAAOC,aAAa,EAAOC,gBAAgB,kBACvO1mB,KAAK8lB,kBAAkBnwB,MAU5C+5B,GAActtB,aAAe,CAC3BzM,eAAgB,IAWHsF,mBARStI,IACtB,MAAM8c,EAAoBoR,GAAuBluB,GACjD,MAAO,CACLoD,UAAWK,EAAsBzD,KAAW8c,EAC5C9Z,eAAgBrJ,YAAQ00B,GAAwBruB,IAAQ4B,OAAOqyB,OAIpD3rB,CAAyBy0B,I,8BC7CjC,MAAMC,WAAuB/vB,YAAW,eAAD,oBAC5CjN,MAAQ,CACN07B,aAAa,GAF6B,KAI5CuB,mBAAqB,KACnB,GAAI5vB,KAAKxE,MAAMhH,UAAW,CACxBwL,KAAKC,SAAS,CACZouB,aAAa,IAGf,MAAMwB,EAAcrD,KAAOxsB,KAAKxE,MAAMvI,MAAO,CAAC,IAAK,MACnD+M,KAAKxE,MAAM+yB,kBAAkBvuB,KAAKxE,MAAMhH,UAAWq7B,GAEnD,IAAIC,EAAc,EAClB9vB,KAAKxE,MAAMvI,MAAM0J,QAAQ3P,IACnBA,EAAK+C,OAASL,MAChBogC,GAAe,EACf9vB,KAAKxE,MAAMu0B,oBAAoB/iC,EAAKC,OAIxC+S,KAAKxE,MAAMvI,MAAM0J,QAAQ3P,IACvBgT,KAAKxE,MAAMizB,oBAAoBp6B,OAAOoN,OAAO,GAAIzU,EAAM,CACrDqd,EAAG2lB,IACH1lB,EAAG2lB,SAKP,IAAK,IAAIpV,EAAI,EAAGA,EAA8C,GAAzC7a,KAAKxE,MAAMvI,MAAM2C,OAASk6B,GAAkBjV,GAAK,EACpE7a,KAAKxE,MAAMkzB,iBAAiB,CAC1B3+B,KAAMJ,IACN2V,SAAUuV,EACV1P,UAAU,IAIdnL,KAAKxE,MAAMkzB,iBAAiB,CAC1B3+B,KAAMH,IACNm4B,kBAAkB,MAKxB9gB,oBACEjH,KAAK4vB,qBAGP1Z,qBACOlW,KAAKrN,MAAM07B,aACdruB,KAAK4vB,qBAITvuB,SACE,MAAMR,EAASb,KAAKxE,MAAMmsB,aP/DU,GOgEpC,OAAO,oCACK,kBAAC,GAAD,CAAiB16B,GAAI+S,KAAKxE,MAAMhH,UAAUvH,KAC1C,yBAAKgU,UAAWC,KAAQguB,QAASn0B,MAAO,CAChD8F,WAEY,kBAAC,GAAD,CAAWsqB,UAAU,IACrB,yBAAKlqB,UAAWC,KAAQiuB,UAAWp0B,MAAO,CACpDwI,MAAO6nB,MAEO,kBAAC,GAAD,UA4BTnwB,mBAXStI,IACtB,MAAM1F,EAAKkJ,EAAexD,GAE1B,MAAO,CACL6B,UAFgBvH,EAAK+G,EAAkBrB,EAAO1F,GAAM,KAGpDA,KACAgG,MAAOkB,EAAmBxB,GAC1Bg1B,aAAcD,GAAiB/0B,KAIK,CACtC47B,kBAAmB3G,GACnB8G,iBAAkB5G,GAClBiI,oBbhEwC5iC,IAAK,CAC7C4C,KZ1CyC,8BY2CzC5C,Ua+DAshC,oBAAqBzG,IAJR/sB,CAKZ00B,IClHI,MC8BDO,GAAe,CACnB,KAAQ,kBAAC,GAAD,MACR,CAACp+B,GAAO,kBAAC,GAAD,MACR,CAACC,GAAM,kBAAC,GAAD,MACP,CAACC,GAAQ,kBAAC,GAAD,MACT,CAACC,GAAe,kBAAC,GAAD,OAuFHgJ,mBAVS,CAACtI,EAAOuV,KAAc,IAAD,IAC3C,MAAMnU,EAAaG,EAAkBvB,GACrC,MAAO,CACLw9B,kBAAmBt3B,KAAQ9E,GAC3Bq8B,kBAAmBn8B,EAAsBtB,GACzC1F,GAAIkJ,EAAexD,GACnB09B,SAAS,UAAAnoB,EAAS+jB,aAAT,mBAAgBqE,cAAhB,eAAwB18B,cAAe,OAIZ,CACtC28B,gBxFxF8BtjC,GAAM0K,MAAOU,EAAU2D,KAMrD,IACE,MAAMrJ,EAAQqJ,IACd,IAAIw0B,EAAoB,KAExB,GAAIvjC,EACFujC,EAAoBx8B,EAAkBrB,EAAO1F,IAAO,SAC/C,CACL,MAAMwjC,GFjD2Bj+B,EEiDWE,EAAiBC,GFjDhB8J,aAAai0B,QAAb,kCAAgDl+B,UAAetE,GEkDtGyiC,EAAO38B,EAAkBrB,EAAO89B,GACtCD,EAAoBC,GAAeE,EAAOA,EnBoFHh+B,IAAS,IAAIyV,IAAUhU,EAAsBzB,GAAQ,MAAO,kBAAmByV,IAAU1T,EAAwB/B,GAAQ,MAAO,gBmBpFtHi+B,CAA8Bj+B,GAAO,GAItF0F,EADEm4B,EACOz0B,GAA0By0B,EAAkBvjC,IAE5C2O,GlBhD0B,MkBkDrC,MAAOtD,GACP,OAvBcN,EAuBCM,EAtBfL,QAAQC,IAAI,+BAAgCF,GACrCA,EAFOA,MFrCqBxF,G0F6HrCq+B,gBD5H+B1jC,IAAK,CACpC4C,KfF+B,oBeG/B5C,WCwHa8N,CArFU,EACvBhO,KACAkF,OACAi+B,mBACAD,oBACAE,UACAE,kBACAM,sBAEAxI,oBAAU,KA1BmBl2B,KAC7B,MAAMyZ,EAASmT,SAAS+R,qBAAqB,UAAU,GAEnDz+B,EAAYF,GACdyZ,EAAOshB,UAAU3e,IAAI,UAErB3C,EAAOshB,UAAU6D,OAAO,WAqBxBC,CAAuB7+B,IACtB,CAACA,IACJk2B,oBAAU,KACJ+H,IAAqBD,GACvBI,EAAgBF,IAEjB,CAACD,EAAkBD,EAAmBE,IACzChI,oBAAU,KACR,MAAM4I,EAAW9tB,KAAS,IAAM0tB,EAAgB1wB,OAAOikB,aAAc,KAErE,OADAjkB,OAAOC,iBAAiB,SAAU6wB,GAC3B,KACL9wB,OAAOY,oBAAoB,SAAUkwB,KAEtC,IAEEb,EAQDj+B,IAASJ,EACJm+B,GAAa/9B,GAGlBg+B,EACK,oCACK,kBAAC,GAAD,MACA,kBAAC,GAAD,MACA,kBAAC,GAAD,CAAkBp9B,KAAMpC,IAAKC,EAAE,uE1GtEN,M0G0EnC3D,EACK,oCACK,kBAAC,GAAD,MACA,kBAAC,GAAD,MACA,kBAAC,GAAD,CAAkB8F,KAAMpC,IAAKC,EAAE,oCAIlC,OAAP3D,EACK,kBAAC,IAAD,CAAO84B,aAAW,GACb,kBAAC,IAAD,KACI,kBAAC,IAAD,QAKXmK,GAAa/9B,GAnCX,kBAAC,IAAD,CAAO4zB,aAAW,GACb,kBAAC,IAAD,KACI,kBAAC,IAAD,U,QCnDb,MAAMmL,WAAYtxB,YACvBqH,oBACEjH,KAAKxE,MAAM21B,eAAenxB,KAAKxE,MAAMpN,GAAG8L,aACxC8F,KAAKxE,MAAM41B,kBACXpxB,KAAKxE,MAAM61B,oBACXrxB,KAAKxE,MAAM81B,qBACXtxB,KAAKxE,MAAM+1B,cAAcvxB,KAAKxE,MAAMpN,IAGtCojC,kBACE,MAAO,CACL/iC,QAASuR,KAAKxE,MAAM/M,QACpBkC,SACAvC,GAAI4R,KAAKxE,MAAMpN,IAInBiT,SACE,OAAO,oCACK,kBAAC,IAAD,CAAcO,QAAM,EAACotB,SAAO,IAC5B,kBAAC,IAAD,KACI,kBAAC,IAAD,KACI,kBAAC,IAAD,CAAOyC,OAAK,EAACtP,KAAK,IAAI9gB,OAAQ7F,GAAS,kBAAC,GAAD,iBAAeA,EAAf,CAAsBrJ,K/GnCjE,Y+GoCI,kBAAC,IAAD,CAAOs/B,OAAK,EAACtP,KAAK,OAAO9gB,OAAQ7F,GAAS,kBAAC,GAAD,iBAAeA,EAAf,CAAsBrJ,KAAMJ,OACtE,kBAAC,IAAD,CAAO0/B,OAAK,EAACtP,KAAK,gBAAgB9gB,OAAQ7F,GAAS,kBAAC,GAAD,iBAAeA,EAAf,CAAsBrJ,K/GrC7E,Y+GsCI,kBAAC,IAAD,CAAOs/B,OAAK,EAACtP,KAAK,qBAAqB9gB,OAAQ7F,GAAS,kBAAC,GAAD,iBAAeA,EAAf,CAAsBrJ,KAAML,OACpF,kBAAC,IAAD,CAAO2/B,OAAK,EAACtP,KAAK,0BAA0B9gB,OAAQ7F,GAAS,kBAAC,GAAD,iBAAeA,EAAf,CAAsBrJ,KAAMH,OACzF,kBAAC,IAAD,CAAOy/B,OAAK,EAACtP,KAAK,4BAA4B9gB,OAAQ7F,GAAS,kBAAC,GAAD,iBAAeA,EAAf,CAAsBrJ,KAAMF,SAGnG,kBAAC,GAAD,QAchBi/B,GAAIQ,kBAAoB,CACtBjjC,QAASme,IAAUuS,OACnBxuB,KAAMic,IAAU/d,OAChBT,GAAIwe,IAAU/d,QAaDoM,mBAAQ,KAVI5C,IAClB,CACL+4B,gBAAiB,IAAM/4B,EAAS6E,MAChCm0B,kBAAmB,IAAMh5B,EAASkG,MAClC4yB,eAAgBj3B,GAAe7B,ECpEA,CACjCtI,K/GF2B,gB+GG3B5C,MDkEyD+M,IACvDq3B,cAAenjC,GAAMiK,EAAS8G,GAAe/Q,IAC7CkjC,mBAAoB,IAAMj5B,EAASyE,QAIxB7B,CAAkCi2B,I,qBEtDlCn2B,OAVD,CAACpI,EARoB,OAQSmD,KAC1C,OAAQA,EAAO/F,MACb,IAXqB,YAYnB,OAAO/B,YAAgB8H,EAAO3I,MAXD,QAa/B,QACE,OAAOwF,ICGEkD,mBAAgB,CAC7B9B,W/GiBc,CAACpB,EAAQa,EAA0BsC,KACjD,OAAQA,EAAO/F,MACb,IAnC0B,iBAqCtB,MAAO,CACL0D,KAAMqC,EAAO3I,MACb8F,MAAO,IAIb,IA1C0B,iBA4CtB,OAAO,2BAAKN,GAAZ,IACEc,KAAK,2BAAMd,EAAMc,MACZqC,EAAO3I,SAKlB,IAlDiC,wBAoD7B,OAAOwG,EAAoB,CACzBhB,QACAiB,YAAakC,EAAOlC,YACpBC,KAAM,UACN1G,MAAO2I,EAAO3I,QAIpB,IA3DsC,6BA6DlC,OAAOwG,EAAoB,CACzBhB,QACAiB,YAAakC,EAAOlC,YACpBC,KAAM,cACN1G,MAAO2I,EAAO3I,QAIpB,IApE+B,sBAsE3B,OAAO,2BAAKwF,GAAZ,IACEM,MAAO6C,EAAO3I,QAIpB,QACE,OAAOwF,I+G/DXuD,WACAkO,oBACAjG,cACAnF,erGfc,CAACrG,EAAQiG,GAA8B9C,KACrD,OAAQA,EAAO/F,MACb,IAR6B,oBAUzB,OAAO,2BAAK4C,GAAZ,IACE,CAACmD,EAAO3I,MAAMF,IAAK0kC,KAAY,2BAAKjlC,YAASiG,EAAMmD,EAAO3I,MAAMF,MAC3D6I,EAAO3I,OACT0L,MAIT,IAhByC,gCAkBrC,OAAO,2BAAKlG,GAAZ,IACE,CAACmD,EAAO7I,IAAK0kC,KAAY,2BAAKjlC,YAASiG,EAAMmD,EAAO7I,MAA5B,IACtBsoB,WAAYzf,EAAOyf,aAClB1c,MAIT,QACE,OAAOlG,IqGLX8E,S1GvBc,CAAC9E,EAAQ,GAAImD,KAC3B,OAAQA,EAAO/F,MACb,IAH6B,oBAI3B,CACE,MAAM6hC,EAAgBhlC,YAAakJ,EAAO3I,OAI1C,OAHiBgnB,KAAOxhB,EAAO,CAC7Bk/B,OAAQD,IAKd,QACE,OAAOj/B,I0GYXC,KjHpBc,CAACD,EAAQJ,EAAoBuD,KAC3C,OAAQA,EAAO/F,MACb,IATyB,gBAWrB,MASC,CACL9C,IAFqB6kC,EARMh8B,EAAO3I,OAUrBF,GACbuF,SAAUs/B,EAASt/B,SACnBpF,SAAU0kC,EAAS7yB,SAAS8yB,YAC5Bt/B,YAAaq/B,EAASE,YAAY53B,IAAI,QAVtC,QACE,OAAOzH,EAIb,IAAyBm/B,GiHSvB9nB,cpEJc,CAACrX,EAAQiX,GAA8B9T,KACrD,OAAQA,EAAO/F,MACb,IAtBmC,0BAuBjC,CACE,MAAMkiC,EAAW,GAGjB,OAFA59B,OAAO6C,KAAK2S,IAAqB3W,IAAI0H,GAAKq3B,EAASr3B,GAAK9E,EAAO3I,MAAMyN,IACrEq3B,EAASnoB,kBAAmB,EACrBmoB,EAGX,IA7BgC,uBA8B9B,OAAOroB,GAET,IAxBkC,yBAyBhC,OAAOvV,OAAOoN,OAAO,GAAI9O,EAAO,CAC9BmX,kBAAkB,IAGtB,IA5BoC,2BA6BlC,OAAOzV,OAAOoN,OAAO,GAAI9O,EAAO,CAC9BmX,kBAAkB,IAGtB,IAzC+B,sBA0C7B,OAAOD,GAET,IA3C0B,iBA6CtB,OAAOxV,OAAOoN,OAAO,GAAI9O,EAAO,CAC9BoC,KAAMe,EAAO3I,QAInB,IAjDgC,uBAmD5B,OAAOkH,OAAOoN,OAAO,GAAI9O,EAAO,CAC9BsC,YAAaa,EAAO3I,QAI1B,IAvD8B,qBAwD5B,OAAK2I,EAAO3I,MAAMmY,SAQX6O,KAAOxhB,EAAO,CACnBgD,eAAgB,CACdu8B,QAAS,CAAC,CAAChG,SAASp2B,EAAO3I,MAAMmY,UAAW,EAAGxP,EAAO3I,WATjDgnB,KAAOxhB,EAAO,CACnBgD,eAAgB,CACdw8B,SAAU,CAACr8B,EAAO3I,UAW1B,IArEiC,wBAsE/B,CACE,MAAMilC,EAAat8B,EAAO3I,MACpB4f,EAAqBpa,EAAMgD,eAAeqX,UAAUhgB,GAAQA,EAAKC,KAAOmlC,GAE9E,OAAIrlB,GAAsB,EACjBoH,KAAOxhB,EAAO,CACnBgD,eAAgB,CACdu8B,QAAS,CAAC,CAACnlB,EAAoB,OAK9Bpa,EAGX,IAnFqC,4BAoFnC,CACE,MAAM0/B,EAAa/lC,YAAQqG,EAAMgD,gBACjC,IAAI28B,GAAmB,EACvB,MAAMC,EAAgBz8B,EAAO3I,MAAM+F,IAAI,EACrC86B,IACAvB,IACApiB,IACAC,IACAuQ,QAEA,MAAM2X,EAAYH,EAAWh7B,KAAKo7B,GAAMA,EAAGxlC,KAAO4tB,GAElD,OAAM2X,EAAUxE,IAAMA,GAAKwE,EAAU/F,IAAMA,GAAK+F,EAAUnoB,IAAMA,GAAKmoB,EAAUloB,IAAMA,GACnFgoB,GAAmB,EACZj+B,OAAOoN,OAAO,GAAI+wB,EAAW,CAClCnoB,IACAC,IACA0jB,IACAvB,OAIG+F,IAET,OAAOF,EAAgB,2BAAQ3/B,GAAR,IACrBgD,eAAgB48B,IACd5/B,EAGR,IAlHiC,wBAmH/B,CACE,MAAMsa,EAAgBnX,EAAO3I,MACvB4f,EAAqBpa,EAAMgD,eAAeqX,UAAUhgB,GAAQA,EAAKC,KAAOggB,EAAchgB,IAE5F,GAAI8f,GAAsB,EAAG,CAM3B,OALiBoH,KAAOxhB,EAAO,CAC7BgD,eAAgB,CACdu8B,QAAS,CAAC,CAACnlB,EAAoB,EAAG1Y,OAAOoN,OAAO,GAAIwL,QAM1D,OAAOta,EAGX,QACE,OAAOA,IoElHXmuB,e/BVc,CAACnuB,EAAQ+tB,GAA+B5qB,KACtD,OAAQA,EAAO/F,MACb,IAjB+B,sBAkB7B,CACE,MAAMkiC,EAAW,GAEjB,OADA59B,OAAO6C,KAAK0pB,IAA2B1tB,IAAI0H,GAAKq3B,EAASr3B,GAAK9E,EAAO3I,MAAMyN,IACpEq3B,EAGX,IAvBiC,wBAwB/B,OAAOvR,GAET,IAzBoC,2BA0BlC,OAAK5qB,EAAO3I,MAAMmY,SAQX6O,KAAOxhB,EAAO,CACnBgD,eAAgB,CACdu8B,QAAS,CAAC,CAAChG,SAASp2B,EAAO3I,MAAMmY,UAAW,EAAGxP,EAAO3I,WATjDgnB,KAAOxhB,EAAO,CACnBgD,eAAgB,CACdw8B,SAAU,CAACr8B,EAAO3I,UAW1B,IAtCuC,8BAuCrC,CACE,MAAMilC,EAAat8B,EAAO3I,MACpB4f,EAAqBpa,EAAMgD,eAAeqX,UAAUhgB,GAAQA,EAAKC,KAAOmlC,GAE9E,OAAIrlB,GAAsB,EACjBoH,KAAOxhB,EAAO,CACnBgD,eAAgB,CACdu8B,QAAS,CAAC,CAACnlB,EAAoB,OAK9Bpa,EAGX,IArDuC,8BAsDrC,CACE,MAAMsa,EAAgBnX,EAAO3I,MACvB4f,EAAqBpa,EAAMgD,eAAeqX,UAAUhgB,GAAQA,EAAKC,KAAOggB,EAAchgB,IAE5F,GAAI8f,GAAsB,EAAG,CAM3B,OALiBoH,KAAOxhB,EAAO,CAC7BgD,eAAgB,CACdu8B,QAAS,CAAC,CAACnlB,EAAoB,EAAG1Y,OAAOoN,OAAO,GAAIwL,QAM1D,OAAOta,EAGX,IAxEsC,6BAyEpC,CACE,MAAM0/B,EAAa/lC,YAAQqG,EAAMgD,gBACjC,IAAI28B,GAAmB,EACvB,MAAMC,EAAgBz8B,EAAO3I,MAAM+F,IAAI,EACrC86B,IACAvB,IACApiB,IACAC,IACAuQ,QAEA,MAAM2X,EAAYH,EAAWh7B,KAAKo7B,GAAMA,EAAGxlC,KAAO4tB,GAElD,OAAM2X,EAAUxE,IAAMA,GAAKwE,EAAU/F,IAAMA,GAAK+F,EAAUnoB,IAAMA,GAAKmoB,EAAUloB,IAAMA,GACnFgoB,GAAmB,EACZj+B,OAAOoN,OAAO,GAAI+wB,EAAW,CAClCnoB,IACAC,IACA0jB,IACAvB,OAIG+F,IAET,OAAOF,EAAgB,2BAAQ3/B,GAAR,IACrBgD,eAAgB48B,IACd5/B,EAGR,QACE,OAAOA,I+BhFXmE,Y5GvBc,CAACnE,EAAQiE,GAA4Bd,KACnD,OAAQA,EAAO/F,MACb,IAL2B,kBAOvB,OAAO,2BAAK4C,GAAZ,IACE,CAACmD,EAAOvB,OAAOtH,IAAK6I,EAAOvB,OAAOpH,QAIxC,IAX8B,qBAY5B,CACE,MAAM8kC,EAAQ,eAAQt/B,GAGtB,cADOs/B,EAASn8B,EAAO7I,IAChBglC,EAGX,IArB4B,mBAuBxB,OAAOn8B,EAAOmB,QAGlB,IA3B8B,qBA6B1B,OAAOL,GAGX,QACE,OAAOjE,I4GJXoI,SACAG,SvGzBc,CAACvI,EAAQ4F,GAAwBzC,KAC/C,OAAQA,EAAO/F,MACb,IATqC,4BAWjC,OAAO,2BAAK4C,GACPmD,EAAO3I,OAIhB,IAf0B,iBAiBtB,OAAOoL,GAGX,QACE,OAAO5F,IuGWXgE,W7G9Bc,CAAChE,EAAQ2D,GAAoBR,KAC3C,OAAQA,EAAO/F,MACb,IAJ0B,iBAMtB,MAAO,IAAIuG,MAAuBR,EAAO3I,OAG7C,QACE,OAAOwF,I6GuBXsM,SxFxBc,CAACtM,EAAQ+L,GAAkB5I,KACzC,OAAQA,EAAO/F,MACb,IAZwB,eAcpB,OAAOsE,OAAOoN,OAAO,GAAI3L,EAAO3I,OAGpC,IAhBwB,eAkBpB,OAAO,2BAAKwF,GACPmD,EAAO3I,OAIhB,QACE,OAAOwF,IwFUXif,qBzDhCc,CAACjf,EAAQ+e,GAAsC5b,KAC7D,OAAQA,EAAO/F,MACb,IALsC,6BAOlC,OAAO+F,EAAO3I,MAGlB,IATwC,+BAWpC,OAAOukB,GAGX,QACE,OAAO/e,IyDoBXg1B,apBlCc,CAACh1B,EAAQ80B,GAA6B3xB,KACpD,OAAQA,EAAO/F,MACb,IAJ6B,oBAMzB,OAAO+F,EAAO3I,MAGlB,QACE,OAAOwF,MqBOE+/B,OAZQ,KACrB,MAAMC,EAAa,CAACC,MAEdC,EAAmB1yB,OAAO2yB,sCAAwCC,IAMxE,OAJK5yB,OAAO2yB,qCAILE,YAAYC,GAASJ,EAAiBK,eAAmBP,M,0WC4BlEhiC,IAAKwiC,aAAa,KADA,UACiBC,IACnCziC,IAAKwiC,aAAa,QAFA,UAEoBE,IACtC1iC,IAAKwiC,aAAa,MAHA,UAGkBG,IACpC3iC,IAAKwiC,aAAa,KAJA,UAIiBI,IACnC5iC,IAAKwiC,aAAa,KALA,UAKiBK,IACnC7iC,IAAKwiC,aAAa,KANA,UAMiBM,IACnC9iC,IAAKwiC,aAAa,KAPA,UAOiBO,IACnC/iC,IAAKwiC,aAAa,SARA,UAQqBQ,IACvChjC,IAAKwiC,aAAa,KATA,UASiBS,IACnCjjC,IAAKwiC,aAAa,KAVA,UAUiBU,IACnCljC,IAAKwiC,aAAa,KAXA,UAWiBW,IACnCnjC,IAAKwiC,aAAa,QAZA,UAYoBY,IACtCpjC,IAAKwiC,aAAa,KAbA,UAaiBa,IACnCrjC,IAAKwiC,aAAa,KAdA,UAciBc,IACnCtjC,IAAKwiC,aAAa,KAfA,UAeiBe,IACnCvjC,IAAKwiC,aAAa,KAhBA,UAgBiBgB,IACnCxjC,IAAKwiC,aAAa,MAjBA,UAiBkBiB,IACpCzjC,IAAKwiC,aAAa,KAlBA,UAkBiBkB,IACnC1jC,IAAKwiC,aAAa,KAnBA,UAmBiBmB,IACnC3jC,IAAKwiC,aAAa,QApBA,UAoBoBoB,IACtC5jC,IAAKwiC,aAAa,KArBA,UAqBiBqB,IACnC7jC,IAAKwiC,aAAa,KAtBA,UAsBiBsB,IACnC9jC,IAAKwiC,aAAa,KAvBA,UAuBiBuB,IACnC/jC,IAAKwiC,aAAa,MAxBA,UAwBkBwB,IACpChkC,IAAKwiC,aAAa,KAzBA,UAyBiByB,IACnCjkC,IAAKwiC,aAAa,KA1BA,UA0BiB0B,IACnClkC,IAAKwiC,aAAa,KA3BA,UA2BiB2B,IACnCnkC,IAAKwiC,aAAa,KA5BA,UA4BiB4B,IACnCpkC,IAAKwiC,aAAa,UA7BA,UA6BsB6B,IACxCrkC,IAAKwiC,aAAa,KA9BA,UA8BiB8B,IACnCtkC,IAAKwiC,aAAa,KA/BA,UA+BiB+B,IACnCvkC,IAAKwiC,aAAa,QAhCA,UAgCoBgC,IACvBxkC,EAAf,EChEA,MAEMykC,GAAW,CACfC,QAAS,CAAC,QAAS,MAAO,SAAU,cAAe,aAAc,cAAe,YAAa,mBAAoB,cAI7GC,GAAgBC,uLAAYC,+BAAiC,KAE/DF,KACFF,GAASK,QAAU,CACjBzf,cAAesf,KAuBJI,UAnBI,IACV,kBAAC,IAAD,CAAeC,MAAOjD,MACnB,kBAAC,mBAAD,CAAkBkD,MAjBPC,yBAAeC,MAkBtB,kBAAC,IAAD,CAAQV,SAAUA,GAAUW,SAAS,UAChC,EACX3nC,QAEKA,EAKE,kBAAC,GAAD,CAAKA,GAAIA,IAHP,S,iCClCnB,gkBAGO,MAAMm4B,EAAoB,WAEpBH,EAAkB,GAIlBJ,EAAS,CAAC,GAAI,IACd3a,EAAiB,CAC5B2iB,EAAG,EACHvB,EAAG,EACHpiB,EAAG,GACHC,EAAG,IAMQkkB,EAAuB,GACvByB,EAA4B,GAC5BD,EAA2B,GAK3B5E,EAAqB,KACrBlF,EAAiB,IAVT,GAuBf8P,EAAuBhI,GAAKiI,OAAOC,UAAUlI,IAAMA,GAAK,EAGjDpH,EAAW55B,GAAQgpC,EAAqBhpC,EAAKghC,IAAMgI,EAAqBhpC,EAAKy/B,IAAMuJ,EAAqBhpC,EAAKqd,IAAM2rB,EAAqBhpC,EAAKsd,GAmB7I/W,EAAwB0jB,IAC5B,CACL4D,EAAG5D,EACHkf,KAAM,IAIGjrB,EAAwB,CAACD,EAAME,GAAW,KAC9C,CACL6iB,EAAG,EACHvB,EAAGxhB,EACHZ,EAvDwB+rB,GAwDxB9rB,EAAG,EACH+rB,SAAUlrB,EACVgrB,KAAM,IAGG/qB,EAA6B2c,IACjC,CACLiG,EAAG,EACHvB,EAAG,EACHpiB,EAAG0d,EAAmBiI,EAjEEoG,GAkExB9rB,EAAGkkB,EACH6H,QAAQ,EACRF,KAAM,IAyBG35B,EAAYvJ,GAASA,EAAMC,IAAI,CAAClG,EAAM+yB,KACjD,MAAMuW,EAAgB1P,EAAS55B,GAAQA,EAAOqH,OAAOoN,OAAO,GAAIzU,EAlE1C6tB,KACtB,IAAKmb,EAAqBnb,GACxB,MAAM,IAAI0b,MAAM,6BAGlB,MAAMC,EAAM3b,EAnCc,EAoCpB4b,EAAMn1B,KAAKoF,MAAMmU,EApCG,GAqCpB6b,EAAYp1B,KAAKoF,MAAMiwB,MACvBC,EAA+B,EAAlBxQ,EACnB,MAAO,CACL4H,EAAGwI,EAAME,EACTjK,EAAGgK,EAAMG,EACTvsB,EAAGqsB,EACHpsB,EAAGssB,IAqDiEC,CAAS9W,IAC/E,OAAO1rB,OAAOoN,OAAO,GAAI60B,EAhBMtpC,KAExB,CACL8uB,eAFqBxa,KAAKw1B,MAAM1Q,EAAkBp5B,EAAKsd,EAAIhJ,KAAKC,IAAI,EAAGvU,EAAKsd,EAAI,GAAK0b,EAAO,MAetD+Q,CAAkBT,MAE/ClgB,EAAmBnpB,GAAE,eAAYA,GACvC,SAASu4B,EAAav4B,GAC3B,MAAM+yB,EAAKtzB,YAASqyB,SAASuJ,cAAT,WAA2BlS,EAAiBnpB,MAC5D+pC,IAAWhX,EAAGiX,kBAAkB/6B,WAAW,IAAM8jB,EAAGiX,gBAAgBjX,EAAGkX,YAAc,EAAGlX,EAAG/D,aAAe,GAAI,M,6cChHpH,MAAMkb,EAA2B,CAC/B,CAACloC,KAAM,YACP,CAACC,KAAe,oBAChB,CAACC,KAAc,oBAKXioC,EAAYrnC,IAChB,GAH0BA,IAAQ,CAACf,IAAOD,KAAcqD,SAASrC,GAG7DsnC,CAAoBtnC,GACtB,OAAO,EAIT,OAAO1C,EADY8pC,EAAyBpnC,KAKjCmpB,EAAoB,CAAClsB,EAAO,GAAIooB,EAAgB,MAC3D,MAAMrlB,EAAOqlB,EAAcG,YAAcvoB,EAAK+C,KAC9C,QAASqnC,EAAUrnC,IAER6M,EAAkB5P,IAC7B,IAAKL,IAASK,GACZ,OAAO,KAIT,OAAOA,EADU8C,IAAY9C,EAAK+C,MAAMU,WACfzD,EAAKsqC,aAAetqC,EAAKuqC,OAASvqC,EAAKkG,KAAOlG,EAAKwqC,aAAexqC,EAAKyqC,YAAc,IAkBnG5d,EAAQ7sB,GAAQ4P,EAAgB5P,GAAMC,GACtCyqC,EAAU1qC,GAAQ4P,EAAgB5P,GAAM+H,KAExCskB,EAAU,CAACrsB,EAAMoB,KAC5B,MAAMK,EAAUN,YAAWC,GACrByC,EAASf,IAAY9C,EAAK+C,MAAMc,OAAOgpB,EAAM7sB,IACnD,MAAM,GAAN,OAAUyB,EAAV,YAAqBoC,IAEV8mC,EAAOhgC,MAAO3K,EAAMooB,GAC/BQ,cACAL,aACAU,UAAU,OAEV,MAAM2hB,EAAM,uCAAQxiB,GACfa,GADO,IAEV+J,GAAI5J,YAAiBppB,EAAKC,MAEtB8C,EAAOwlB,GAAcvoB,EAAK+C,KAhCR,EAAC8nC,EAAQD,EAAQhiB,KACnCiiB,GAAUA,EAAOF,OAIvBE,EAAO5mC,IAAM2kB,EAAYnnB,QACzBopC,EAAOC,kBAAmB,EAC1BD,EAAOrjC,WAAY,EAEfohB,EAAYE,OACd+hB,EAAO/hB,KAAOF,EAAYE,MAG5B+hB,EAAOF,KAAKC,KAqBZG,CADeX,EAAUrnC,GACN6nC,EAAQhiB,IAEhBoiB,EAAQrgC,eACWsgC,YAAiBpe,EAAM7sB,GAAOA,EAAK+C,KAAM,CACrEiK,OAAQhN,EAAK+C,OAASd,IAAMipC,cAAiB,OAIpCC,EAASnrC,IACpB,MAAM6qC,EAAST,EAAUpqC,EAAK+C,MAE1B8nC,GAAUA,EAAOM,QACnBN,EAAOM,OAAO/hB,YAAiBppB,EAAKC,MAG3BmrC,EAAU,CAACprC,EAAMuoB,KAC5B,MAAMsiB,EAAST,EAAU7hB,GAErBsiB,GAAUA,EAAOO,SACnBP,EAAOO,QAAQhiB,YAAiBppB,EAAKC,MAG5BorC,EAAyB,CAACjjB,EAAekjB,EAAc/iB,KAClE,GAAI+iB,IAAiBrpC,KAAOqpC,IAAiB/iB,EAAY,CACvD,MAAMgjB,GA3DoBrlC,EA2DckiB,GA3DHsH,UAAYxpB,EAAIwpB,SAASrlB,KAAKmhC,GAAMA,EAAG7b,MAAMvqB,SAbxD,aA0E1B,YAAyBlE,IAArBqqC,EACK,KAGF3pC,YAAa,uCAAKwmB,GACpBmjB,GADc,IAEjB7b,cAAUxuB,EACV6B,KAAMwlB,IAAevmB,IAAQypC,IAAkBC,OAE5C,GAAIJ,IAAiBvpC,KAAgBwmB,IAAevmB,IAAO,CAChE,MAAMssB,EAAUlG,EAAcujB,KAAiBhqC,QACzC2P,EAAO8W,EAAcwjB,KAAcjqC,QACnC22B,EAAS,GAUf,OARIlQ,EAAc9W,KAAK1I,OAAS,EAC9B0vB,EAAOsT,KAAgBt6B,EAAK1I,OAAS,EAAI0I,EAAKu6B,OAAO,EAAG,GAAKv6B,EAAKu6B,OAAO,EAAGv6B,EAAK1I,QAEjF0vB,EAAOsT,KAAgBt6B,EAAK1I,OAAS,CAAC0I,EAAKw6B,SAAWx6B,EAGxDgnB,EAAOqT,KAAmBrd,EAAQ1lB,OAAS,CAAC0lB,EAAQwd,SAAWxd,EAC/DgK,EAAOyT,KAAmB,IAAI3jB,EAAc2jB,QAAqBzd,KAAYhd,GACtE1P,YAAa,uCAAKwmB,GACpBkQ,GADc,IAEjBv1B,KAAM0oC,OAEH,OAAIH,IAAiBtpC,KAASumB,IAAexmB,IAC3CH,YAAa,2BAAKwmB,GAAN,IACjBrlB,KAAM2oC,OAIH9pC,YAAawmB,GA7FQliB,S,sCCpC9B9G,EAAOC,QAAU,CAAC,eAAiB,mCAAmC,UAAY,8BAA8B,gBAAkB,sC,uDCDlI,kNAIO,MAAMuN,EAAkB,EAC7BC,UACE,KAAO,CAAC,KAAD,UAAUA,EAAS,2BAA6B,qBAI9Cm/B,EAAqB,EAChCr/B,eACIL,IAAW,CAAC,YAAa,gBAAiB,SAAU,eAAgBK,EAAS,gBAJhD,CAAC,2BAA4B,2BAA4B,qBAImBpE,KAAK,KAAjC,UAEtE0jC,EAAgB,EAC3Bt/B,eACI,CAAC,WAAD,OAAYq/B,EAAmB,CACnCr/B,cACCpE,KAAK,KAFF,oBAEmByjC,EAAmB,CAC1Cr/B,cACCpE,KAAK,KAJF,uBAIsByjC,EAAmB,CAC7Cr/B,cACCpE,KAAK,KANF,MAQO2jC,EAAoB,EAC/Bz/B,iBACA0/B,iBAEO7/B,IAAW,CAAC,GAAD,OAAIM,EAAgB,CACpCC,QAAQ,IACPtE,KAAK,MAAQ,yCAA0CkE,EAAc,UAAMw/B,EAAc,CAC1Ft/B,WAAW,IACVpE,KAAK,MAFgE,GAEnD4jC,EAAc,CAAC,IAAK,uBAAwB,mBAAoB,YAAa,sBAAuB,oCAAqC,oBAAqB,sBAAuB,yBAA0B,iCAAkC,oBAAqB,8BAA+B,iBAAkB,sCAAuC,0BAA2B,qBAAsB,8BAA+B,mBAAoB,gBAAiB,iBAAkB,gBAAiB,wBAAyB,gCAAiC,sCAAsC5jC,KAAK,KAAO,KAE5mBiE,EAAqB,EAChCC,oBACI,CAAC,eAAD,OAAgBy/B,EAAkB,CACtCz/B,mBACClE,KAAK,KAFF,qBAEoB,CAAC,UAAW2jC,EAAkB,CACtDz/B,oBACElE,KAAK,KAJH,mBAImB2jC,EAAkB,CACzCz/B,mBACClE,KAAK,KANF,2BAM0B2jC,EAAkB,CAChDz/B,mBACClE,KAAK,KARF,0BAQyB2jC,EAAkB,CAC/Cz/B,mBACClE,KAAK,KAVF,MAYOgE,EAAoB,IAAM,CAAC,WAAD,OAAY,CAAC,UAAWK,EAAgB,CAC7EC,QAAQ,KACNtE,KAAK,KAF8B,yBAERqE,EAAgB,CAC7CC,QAAQ,IACPtE,KAAK,KAJ+B,qBAIbqE,EAAgB,CACxCC,QAAQ,IACPtE,KAAK,KAN+B,MAQ1B2iC,EAAe,KAC1B,MAAMkB,EAAiBF,EAAkB,CACvCz/B,gBAAgB,EAChB0/B,aAAa,IAGf,MAAO,CAAC,GAAD,OAAIv/B,EAAgB,CACzBC,QAAQ,IACPtE,KAAK,MAAQ,uCAFT,mBAE6D6jC,EAAe9qB,OAHlE,iIACV,OAMI2pB,EAAmB,CAAChrC,EAAI8C,GACnCiK,YACIpC,wBAAcC,KAAKzJ,GAAMA,EAAGE,IAAIC,SAASuJ,IAAhB,UAAuB/G,YAAgBhB,GAAvC,YAAgD9C,GAAM,CACnF+M,OAAQA,GAAUk/B,EAAkB,CAClCz/B,gBAAgB,EAChB0/B,aAAa,Q,oBCxEjB/sC,EAAOC,QAAU,CAAC,aAAe,oCAAoC,cAAgB,qCAAqC,UAAY,mC","file":"static/js/app.568e09f2.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"ControlBar_root__iikeX\",\"content\":\"ControlBar_content__26Z33\",\"draghandle\":\"ControlBar_draghandle__27zum\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"link\":\"DashboardItemChip_link__21drZ\",\"icon\":\"DashboardItemChip_icon__2hcIR\",\"selected\":\"DashboardItemChip_selected__r00uP\",\"unselected\":\"DashboardItemChip_unselected__2H9l2\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"ClearButton_button__33ZbK\",\"icon\":\"ClearButton_icon__vTJm3\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"showMore\":\"ShowMoreButton_showMore__3S3He\",\"disabled\":\"ShowMoreButton_disabled__2FQNA\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"menuItem\":\"ContentMenuItem_menuItem__vbKn3\",\"launchLink\":\"ContentMenuItem_launchLink__2Nql9\",\"label\":\"ContentMenuItem_label__ANfH1\",\"buttonInsert\":\"ContentMenuItem_buttonInsert__1joHg\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"showMoreButton\":\"CategorizedMenuGroup_showMoreButton__2RbRp\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"section\":\"EditTitleBar_section__LIaIC\",\"titleDescription\":\"EditTitleBar_titleDescription__1YsU6\",\"title\":\"EditTitleBar_title__3mUbt\",\"description\":\"EditTitleBar_description__24U5X\",\"itemSelector\":\"EditTitleBar_itemSelector__1cFEp\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"actions\":\"ViewTitleBar_actions__2UTRz\",\"editLink\":\"ViewTitleBar_editLink__d_HzW\",\"titleBar\":\"ViewTitleBar_titleBar__eiwJS\",\"titleBarIcon\":\"ViewTitleBar_titleBarIcon__2cBxv\",\"strip\":\"ViewTitleBar_strip__3xR4U\",\"backdrop\":\"ViewTitleBar_backdrop__2Cpm8\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"FatalErrorBoundary_container__3SViR\",\"icon\":\"FatalErrorBoundary_icon__2UbeP\",\"message\":\"FatalErrorBoundary_message__3FzrY\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"deleteItemButton\":\"DeleteItemButton_deleteItemButton__3TJm9\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"warning\":\"PrintItemInfo_warning__123PK\"};","import isObject from 'lodash/isObject'; // validation\n\nexport function orNull(param) {\n  return param === undefined ? null : param;\n}\nexport function orArray(param) {\n  return Array.isArray(param) ? param : [];\n}\nexport function orObject(param) {\n  return isObject(param) ? param : {};\n} // array\n\nexport function arrayGetById(array, id) {\n  return array.find(item => item.id === id);\n} // object\n\nexport function arrayToIdMap(array) {\n  return array.reduce((obj, item) => {\n    obj[item.id] = item;\n    return obj;\n  }, {});\n} // date\n\nexport function getDate() {\n  const y = Math.floor(Math.random() * 3) + 2015;\n  const M = Math.floor(Math.random() * 12) + 1;\n  const d = Math.floor(Math.random() * 28) + 1; // const h = Math.floor(Math.random() * 23) + 1;\n  // const m = Math.floor(Math.random() * 59) + 1;\n  // const s = Math.floor(Math.random() * 59) + 1;\n\n  return new Date(`${y}-${M}-${d}`).toJSON().replace('T', ' ').substr(0, 10);\n}\nexport const formatDate = (value, uiLocale) => {\n  if (typeof global.Intl !== 'undefined' && Intl.DateTimeFormat) {\n    const locale = uiLocale || 'en';\n    return new Intl.DateTimeFormat(locale, {\n      year: 'numeric',\n      month: 'short',\n      day: 'numeric'\n    }).format(new Date(value));\n  }\n\n  return value.substr(0, 19).replace('T', ' ');\n};\n/**\n * Sorts an array of objects based on provided date property\n *\n * @param {Array} items Array of objects\n * @param {String} dateProp Name of the date property to be used for sorting\n * @param {Boolean} ascending Whether to sort ascending or descending\n */\n\nexport const sortByDate = (items, dateProp, ascending = true) => {\n  const values = Object.values(items);\n  values.sort((a, b) => {\n    const aDate = new Date(a[dateProp]);\n    const bDate = new Date(b[dateProp]);\n    return ascending ? aDate - bDate : bDate - aDate;\n  });\n  return values;\n}; // reducer validator\n\nexport const validateReducer = (value, defaultValue) => value === undefined || value === null ? defaultValue : value;\nexport const getBaseUrl = d2 => {\n  const api = d2.Api.getApi();\n  const idx = api.baseUrl.indexOf('/api');\n  return idx > -1 ? api.baseUrl.slice(0, idx) : api.baseUrl;\n};\nexport const getWithoutId = object => ({ ...object,\n  id: undefined\n});","import i18n from '@dhis2/d2-i18n';\nimport TableIcon from '@material-ui/icons/ViewList';\nimport ChartIcon from '@material-ui/icons/InsertChart';\nimport MapIcon from '@material-ui/icons/Public';\nimport ExtensionIcon from '@material-ui/icons/Extension';\nimport DescriptionIcon from '@material-ui/icons/Description';\nimport PersonIcon from '@material-ui/icons/Person';\nimport FontDownloadIcon from '@material-ui/icons/FontDownload';\nimport EmailIcon from '@material-ui/icons/Email';\nimport CropFreeIcon from '@material-ui/icons/CropFree';\nimport NotInterestedIcon from '@material-ui/icons/NotInterested';\nimport { getBaseUrl } from './util'; // Item types\n\nexport const VISUALIZATION = 'VISUALIZATION';\nexport const REPORT_TABLE = 'REPORT_TABLE';\nexport const CHART = 'CHART';\nexport const MAP = 'MAP';\nexport const EVENT_REPORT = 'EVENT_REPORT';\nexport const EVENT_CHART = 'EVENT_CHART';\nexport const APP = 'APP';\nexport const REPORTS = 'REPORTS';\nexport const RESOURCES = 'RESOURCES';\nexport const USERS = 'USERS';\nexport const MESSAGES = 'MESSAGES';\nexport const TEXT = 'TEXT';\nexport const SPACER = 'SPACER';\nexport const PAGEBREAK = 'PAGEBREAK';\nexport const PRINT_TITLE_PAGE = 'PRINT_TITLE_PAGE';\nconst DOMAIN_TYPE_AGGREGATE = 'AGGREGATE';\nconst DOMAIN_TYPE_TRACKER = 'TRACKER'; // Dashboard helpers\n\nexport const isVisualizationType = item => !!itemTypeMap[item.type].isVisualizationType;\nexport const hasMapView = itemType => itemTypeMap[itemType].domainType === DOMAIN_TYPE_AGGREGATE;\nexport const isTrackerDomainType = itemType => itemTypeMap[itemType].domainType === DOMAIN_TYPE_TRACKER;\nexport const getDefaultItemCount = itemType => itemTypeMap[itemType].defaultItemCount || 5;\nexport const getAppName = itemType => itemTypeMap[itemType].appName || ''; // Item type map\n\nexport const itemTypeMap = {\n  [VISUALIZATION]: {\n    id: VISUALIZATION,\n    endPointName: 'visualizations',\n    propName: 'visualization',\n    pluralTitle: i18n.t('Visualizations'),\n    appUrl: id => `dhis-web-data-visualizer/#/${id}`,\n    appName: 'Data Visualizer',\n    defaultItemCount: 10\n  },\n  [REPORT_TABLE]: {\n    id: REPORT_TABLE,\n    endPointName: 'visualizations',\n    propName: 'visualization',\n    pluralTitle: i18n.t('Pivot tables'),\n    domainType: DOMAIN_TYPE_AGGREGATE,\n    isVisualizationType: true,\n    appUrl: id => `dhis-web-data-visualizer/#/${id}`,\n    appName: 'Data Visualizer'\n  },\n  [CHART]: {\n    id: CHART,\n    endPointName: 'visualizations',\n    propName: 'visualization',\n    pluralTitle: i18n.t('Charts'),\n    domainType: DOMAIN_TYPE_AGGREGATE,\n    isVisualizationType: true,\n    appUrl: id => `dhis-web-data-visualizer/#/${id}`,\n    appName: 'Data Visualizer'\n  },\n  [MAP]: {\n    id: MAP,\n    endPointName: 'maps',\n    propName: 'map',\n    pluralTitle: i18n.t('Maps'),\n    domainType: DOMAIN_TYPE_AGGREGATE,\n    isVisualizationType: true,\n    appUrl: id => `dhis-web-maps/?id=${id}`,\n    appName: 'Maps'\n  },\n  [EVENT_REPORT]: {\n    id: EVENT_REPORT,\n    endPointName: 'eventReports',\n    propName: 'eventReport',\n    pluralTitle: i18n.t('Event reports'),\n    domainType: DOMAIN_TYPE_TRACKER,\n    isVisualizationType: true,\n    appUrl: id => `dhis-web-event-reports/?id=${id}`,\n    appName: 'Event Reports'\n  },\n  [EVENT_CHART]: {\n    id: EVENT_CHART,\n    endPointName: 'eventCharts',\n    propName: 'eventChart',\n    pluralTitle: i18n.t('Event charts'),\n    domainType: DOMAIN_TYPE_TRACKER,\n    isVisualizationType: true,\n    appUrl: id => `dhis-web-event-visualizer/?id=${id}`,\n    appName: 'Event Visualizer'\n  },\n  [APP]: {\n    endPointName: 'apps',\n    propName: 'appKey',\n    pluralTitle: i18n.t('Apps')\n  },\n  [REPORTS]: {\n    id: REPORTS,\n    endPointName: 'reports',\n    propName: 'reports',\n    pluralTitle: i18n.t('Reports'),\n    appUrl: (id, type) => {\n      switch (type) {\n        case 'HTML':\n          return `dhis-web-reports/#/standard-report/view/${id}`;\n\n        case 'JASPER_REPORT_TABLE':\n        case 'JASPER_JDBC':\n        default:\n          return `api/reports/${id}/data.pdf?t=${new Date().getTime()}`;\n      }\n    }\n  },\n  [RESOURCES]: {\n    id: RESOURCES,\n    endPointName: 'resources',\n    propName: 'resources',\n    pluralTitle: i18n.t('Resources'),\n    appUrl: id => `api/documents/${id}/data`\n  },\n  [USERS]: {\n    id: USERS,\n    endPointName: 'users',\n    propName: 'users',\n    pluralTitle: i18n.t('Users'),\n    appUrl: id => `dhis-web-dashboard-integration/profile.action?id=${id}`\n  },\n  [TEXT]: {\n    id: TEXT,\n    propName: 'text'\n  },\n  [MESSAGES]: {\n    propName: 'messages'\n  },\n  [SPACER]: {\n    propName: 'text'\n  },\n  [PAGEBREAK]: {\n    propName: 'text'\n  },\n  [PRINT_TITLE_PAGE]: {\n    propName: 'text'\n  }\n};\nexport const getEndPointName = type => itemTypeMap[type].endPointName;\nexport const getItemUrl = (type, item, d2) => {\n  let url;\n\n  if (type === APP) {\n    url = item.launchUrl;\n  }\n\n  if (itemTypeMap[type] && itemTypeMap[type].appUrl) {\n    url = `${getBaseUrl(d2)}/${itemTypeMap[type].appUrl(item.id, item.type)}`;\n  }\n\n  return url;\n};\nexport const getItemIcon = type => {\n  switch (type) {\n    case REPORT_TABLE:\n    case EVENT_REPORT:\n    case REPORTS:\n      return TableIcon;\n\n    case CHART:\n    case EVENT_CHART:\n      return ChartIcon;\n\n    case MAP:\n      return MapIcon;\n\n    case APP:\n      return ExtensionIcon;\n\n    case RESOURCES:\n      return DescriptionIcon;\n\n    case USERS:\n      return PersonIcon;\n\n    case TEXT:\n      return FontDownloadIcon;\n\n    case MESSAGES:\n      return EmailIcon;\n\n    case SPACER:\n      return CropFreeIcon;\n\n    default:\n      return NotInterestedIcon;\n  }\n};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"center\":\"LoadingMask_center__2SFwS\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"center\":\"VisualizationErrorMessage_center__3hFKi\",\"errorMessage\":\"VisualizationErrorMessage_errorMessage__qb1pP\",\"appLink\":\"VisualizationErrorMessage_appLink__GXS4v\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"textDiv\":\"Item_textDiv__1U7zV\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"Item_list__1_nkQ\",\"item\":\"Item_item__3-6QE\",\"itemicon\":\"Item_itemicon__QlouX\",\"link\":\"Item_link___3c_q\",\"deleteicon\":\"Item_deleteicon__3usrl\",\"deletebutton\":\"Item_deletebutton__1DpBW\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"titlePage\":\"Item_titlePage__18CNQ\",\"name\":\"Item_name__3nuTV\",\"description\":\"Item_description__1gFQd\",\"filterTitle\":\"Item_filterTitle__2p7TQ\",\"filterList\":\"Item_filterList__qc_G3\",\"filterListItem\":\"Item_filterListItem__sPbBY\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"bar\":\"FilterBar_bar__1Ma3p\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"content\":\"ConfirmDeleteDialog_content__EqswE\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"infoWrapper\":\"PrintInfo_infoWrapper__3m2lt\",\"infoHeader\":\"PrintInfo_infoHeader__KyW8I\",\"info\":\"PrintInfo_info__13oXZ\",\"infoList\":\"PrintInfo_infoList__Iu9MC\",\"divider\":\"PrintInfo_divider__3wzx9\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"PrintActionsBar_container__2iQp7\",\"topMargin\":\"PrintActionsBar_topMargin__OpYDN\",\"inner\":\"PrintActionsBar_inner__uBqU7\",\"link\":\"PrintActionsBar_link__lFUmI\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"PrintLayoutDashboard_wrapper__1WDh4\",\"pageOuter\":\"PrintLayoutDashboard_pageOuter__22acI\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"PrintDashboard_wrapper__1O3s_\",\"pageOuter\":\"PrintDashboard_pageOuter__fl9tw\"};","export const EDIT = 'edit';\nexport const NEW = 'new';\nexport const VIEW = 'view';\nexport const PRINT = 'print';\nexport const PRINT_LAYOUT = 'print-layout';\nexport const isEditMode = mode => [EDIT, NEW].includes(mode);\nexport const isPrintMode = mode => [PRINT, PRINT_LAYOUT].includes(mode);\nexport const isViewMode = mode => mode === VIEW;","export const RECEIVED_USER = 'RECEIVED_USER';\nexport const DEFAULT_STATE_USER = {\n  id: '',\n  username: '',\n  uiLocale: '',\n  isSuperuser: false\n};\nexport default ((state = DEFAULT_STATE_USER, action) => {\n  switch (action.type) {\n    case RECEIVED_USER:\n      {\n        return fromD2ToUserObj(action.value);\n      }\n\n    default:\n      return state;\n  }\n});\n\nfunction fromD2ToUserObj(d2Object) {\n  return {\n    id: d2Object.id,\n    username: d2Object.username,\n    uiLocale: d2Object.settings.keyUiLocale,\n    isSuperuser: d2Object.authorities.has('ALL')\n  };\n} // selectors\n\n\nexport const sGetUserId = state => state.user.id;\nexport const sGetUserUsername = state => state.user.username;\nexport const sGetIsSuperuser = state => state.user.isSuperuser;\nexport const sGetUiLocale = state => state.user.uiLocale;","import { TEXT, SPACER } from './itemTypes';\nimport { getGridItemProperties } from '../components/ItemGrid/gridUtil';\nexport const spacerContent = 'SPACER_ITEM_FOR_DASHBOARD_LAYOUT_CONVENIENCE';\nexport const emptyTextItemContent = 'TEXT_ITEM_WITH_NO_CONTENT';\n\nconst isBackendSpacerType = item => item.type === TEXT && item.text === spacerContent;\n\nconst isUiSpacerType = item => item.type === SPACER;\n\nconst isTextType = item => item.type === TEXT && item.text !== spacerContent;\n\nexport const convertUiItemsToBackend = items => items.map(item => {\n  let text = null;\n\n  if (isUiSpacerType(item)) {\n    text = spacerContent;\n  } else if (isTextType(item)) {\n    text = item.text || emptyTextItemContent;\n  }\n\n  return { ...item,\n    ...(text ? {\n      text\n    } : {})\n  };\n});\nexport const convertBackendItemsToUi = items => items.map(item => {\n  const type = isBackendSpacerType(item) ? SPACER : item.type;\n  const gridProperties = getGridItemProperties(item.id);\n  const text = isTextType(item) ? item.text === emptyTextItemContent ? '' : item.text : null;\n  return { ...item,\n    ...(text !== null ? {\n      text\n    } : {}),\n    type,\n    ...gridProperties\n  };\n});","/** @module reducers/dashboards */\nimport arrayFrom from 'd2-utilizr/lib/arrayFrom';\nimport arraySort from 'd2-utilizr/lib/arraySort';\nimport { orArray, orObject } from '../modules/util';\nimport { convertBackendItemsToUi } from '../modules/uiBackendItemConverter';\nexport const SET_DASHBOARDS = 'SET_DASHBOARDS';\nexport const ADD_DASHBOARDS = 'ADD_DASHBOARDS';\nexport const SET_DASHBOARD_STARRED = 'SET_DASHBOARD_STARRED';\nexport const SET_DASHBOARD_DISPLAY_NAME = 'SET_DASHBOARD_DISPLAY_NAME';\nexport const SET_DASHBOARD_ITEMS = 'SET_DASHBOARD_ITEMS';\nexport const DEFAULT_STATE_DASHBOARDS = {\n  byId: null,\n  items: []\n};\nexport const EMPTY_DASHBOARD = {}; // reducer helper functions\n\nconst updateDashboardProp = ({\n  state,\n  dashboardId,\n  prop,\n  value\n}) => ({\n  byId: { ...state.byId,\n    [dashboardId]: { ...state.byId[dashboardId],\n      [prop]: value\n    }\n  },\n  items: state.items\n});\n/**\n * Reducer that computes and returns the new state based on the given action\n * @function\n * @param {Object} state The current state\n * @param {Object} action The action to be evaluated\n * @returns {Object}\n */\n\n\nexport default ((state = DEFAULT_STATE_DASHBOARDS, action) => {\n  switch (action.type) {\n    case SET_DASHBOARDS:\n      {\n        return {\n          byId: action.value,\n          items: []\n        };\n      }\n\n    case ADD_DASHBOARDS:\n      {\n        return { ...state,\n          byId: { ...state.byId,\n            ...action.value\n          }\n        };\n      }\n\n    case SET_DASHBOARD_STARRED:\n      {\n        return updateDashboardProp({\n          state,\n          dashboardId: action.dashboardId,\n          prop: 'starred',\n          value: action.value\n        });\n      }\n\n    case SET_DASHBOARD_DISPLAY_NAME:\n      {\n        return updateDashboardProp({\n          state,\n          dashboardId: action.dashboardId,\n          prop: 'displayName',\n          value: action.value\n        });\n      }\n\n    case SET_DASHBOARD_ITEMS:\n      {\n        return { ...state,\n          items: action.value\n        };\n      }\n\n    default:\n      return state;\n  }\n}); // root selector\n\nexport const sGetDashboardsRoot = state => state.dashboards; // selector level 1\n\n/**\n * Selector which returns a dashboard by id from the state object\n * If no matching dashboard is found it returns undefined\n * If dashboards.byId is null, then the dashboards api request\n * has not yet completed. If dashboards.byId is an empty object\n * then the dashboards api request is complete, but no dashboards\n * were returned\n *\n * @function\n * @param {Object} state The current state\n * @param {Number} id The id of the dashboard\n * @returns {Object | undefined}\n */\n\nexport const sGetDashboardById = (state, id) => orObject(sGetDashboardsRoot(state).byId)[id];\nexport const sDashboardsIsFetching = state => {\n  return sGetDashboardsRoot(state).byId === null;\n};\n/**\n * Selector which returns all dashboards (the byId object)\n *\n * @function\n * @param {Object} state The current state\n * @returns {Object | undefined}\n */\n\nexport const sGetAllDashboards = state => orObject(sGetDashboardsRoot(state).byId);\n/**\n * Selector which returns the current dashboard items\n *\n * @function\n * @param {Object} state The current state\n * @returns {Array}\n */\n\nexport const sGetDashboardItems = state => sGetDashboardsRoot(state).items; // selector level 2\n\nexport const sGetStarredDashboards = state => Object.values(sGetAllDashboards(state)).filter(dashboard => dashboard.starred === true);\nexport const sGetUnstarredDashboards = state => Object.values(sGetAllDashboards(state)).filter(dashboard => dashboard.starred === false); // selector level 3\n\nexport const sGetStarredDashboardIds = state => {\n  return sGetStarredDashboards(state).map(dashboard => dashboard.id);\n};\nexport const sGetUnstarredDashboardIds = state => sGetUnstarredDashboards(state).map(dashboard => dashboard.id);\nexport const sGetDashboardsSortedByStarred = state => [...arraySort(sGetStarredDashboards(state), 'ASC', 'displayName'), ...arraySort(sGetUnstarredDashboards(state), 'ASC', 'displayName')]; // utils\n\n/**\n * Returns the array of dashboards, customized for ui\n * @function\n * @param {Array} data The original dashboard list\n * @returns {Array}\n */\n\nexport const getCustomDashboards = data => arrayFrom(data).map(d => ({\n  id: d.id,\n  name: d.name,\n  displayName: d.displayName,\n  description: d.description,\n  displayDescription: d.displayDescription,\n  starred: d.favorite,\n  owner: d.user.name,\n  created: d.created.split('T').join(' ').substr(0, 16),\n  lastUpdated: d.lastUpdated.split('T').join(' ').substr(0, 16),\n  access: d.access,\n  numberOfItems: orArray(d.dashboardItems).length,\n  dashboardItems: convertBackendItemsToUi(d.dashboardItems)\n}));","/** @module reducers/selected */\nimport { combineReducers } from 'redux';\nimport { validateReducer } from '../modules/util';\nexport const SET_SELECTED_ID = 'SET_SELECTED_ID';\nexport const SET_SELECTED_ISLOADING = 'SET_SELECTED_ISLOADING';\nexport const SET_SELECTED_SHOWDESCRIPTION = 'SET_SELECTED_SHOWDESCRIPTION';\nexport const DEFAULT_STATE_SELECTED_ID = null;\nexport const DEFAULT_STATE_SELECTED_ISLOADING = false;\nexport const DEFAULT_STATE_SELECTED_SHOWDESCRIPTION = false;\nexport const NON_EXISTING_DASHBOARD_ID = '0';\n/**\n * Reducer functions that computes and returns the new state based on the given action\n * @function\n * @param {Object} state The current state\n * @param {Object} action The action to be evaluated\n */\n\nconst id = (state = DEFAULT_STATE_SELECTED_ID, action) => {\n  switch (action.type) {\n    case SET_SELECTED_ID:\n      return validateReducer(action.value, DEFAULT_STATE_SELECTED_ID);\n\n    default:\n      return state;\n  }\n};\n\nconst isLoading = (state = DEFAULT_STATE_SELECTED_ISLOADING, action) => {\n  switch (action.type) {\n    case SET_SELECTED_ISLOADING:\n      return validateReducer(action.value, DEFAULT_STATE_SELECTED_ISLOADING);\n\n    default:\n      return state;\n  }\n};\n\nconst showDescription = (state = DEFAULT_STATE_SELECTED_SHOWDESCRIPTION, action) => {\n  switch (action.type) {\n    case SET_SELECTED_SHOWDESCRIPTION:\n      return validateReducer(action.value, DEFAULT_STATE_SELECTED_SHOWDESCRIPTION);\n\n    default:\n      return state;\n  }\n};\n\nexport default combineReducers({\n  id,\n  isLoading,\n  showDescription\n}); // Selectors\n\nexport const sGetSelectedRoot = state => state.selected;\nexport const sGetSelectedId = state => sGetSelectedRoot(state).id;\nexport const sGetSelectedIsLoading = state => sGetSelectedRoot(state).isLoading;\nexport const sGetSelectedShowDescription = state => sGetSelectedRoot(state).showDescription;","import { getDimensionById, DIMENSION_ID_PERIOD, DIMENSION_ID_ORGUNIT } from '@dhis2/analytics';\nexport const SET_DIMENSIONS = 'SET_DIMENSIONS';\nexport const DEFAULT_DIMENSIONS = [getDimensionById(DIMENSION_ID_PERIOD), getDimensionById(DIMENSION_ID_ORGUNIT)];\nexport default ((state = DEFAULT_DIMENSIONS, action) => {\n  switch (action.type) {\n    case SET_DIMENSIONS:\n      {\n        return [...DEFAULT_DIMENSIONS, ...action.value];\n      }\n\n    default:\n      return state;\n  }\n});\nexport const sGetDimensions = state => state.dimensions;","import { sGetDimensions } from './dimensions';\nimport { createSelector } from 'reselect';\nexport const CLEAR_ITEM_FILTERS = 'CLEAR_ITEM_FILTERS';\nexport const SET_ITEM_FILTERS = 'SET_ITEM_FILTERS';\nexport const ADD_ITEM_FILTER = 'ADD_ITEM_FILTER';\nexport const REMOVE_ITEM_FILTER = 'REMOVE_ITEM_FILTER';\nexport const DEFAULT_STATE_ITEM_FILTERS = {};\nexport default ((state = DEFAULT_STATE_ITEM_FILTERS, action) => {\n  switch (action.type) {\n    case ADD_ITEM_FILTER:\n      {\n        return { ...state,\n          [action.filter.id]: action.filter.value\n        };\n      }\n\n    case REMOVE_ITEM_FILTER:\n      {\n        const newState = { ...state\n        };\n        delete newState[action.id];\n        return newState;\n      }\n\n    case SET_ITEM_FILTERS:\n      {\n        return action.filters;\n      }\n\n    case CLEAR_ITEM_FILTERS:\n      {\n        return DEFAULT_STATE_ITEM_FILTERS;\n      }\n\n    default:\n      return state;\n  }\n}); // selectors\n\nexport const sGetItemFiltersRoot = state => state.itemFilters; // simplify the filters structure to:\n// [{ id: 'pe', name: 'Period', values: [{ id: 2019: name: '2019' }, {id: 'LAST_MONTH', name: 'Last month' }]}, ...]\n\nexport const sGetNamedItemFilters = createSelector([sGetItemFiltersRoot, sGetDimensions], (filters, dimensions) => Object.keys(filters).reduce((arr, id) => {\n  arr.push({\n    id: id,\n    name: dimensions.find(dimension => dimension.id === id).name,\n    values: filters[id].map(value => ({\n      id: value.id,\n      name: value.displayName || value.name\n    }))\n  });\n  return arr;\n}, []));","import { ADD_ITEM_FILTER, REMOVE_ITEM_FILTER, SET_ITEM_FILTERS, CLEAR_ITEM_FILTERS } from '../reducers/itemFilters';\nexport const FILTER_ORG_UNIT = 'ou'; // actions\n\nexport const acAddItemFilter = filter => ({\n  type: ADD_ITEM_FILTER,\n  filter\n});\nexport const acRemoveItemFilter = id => ({\n  type: REMOVE_ITEM_FILTER,\n  id\n});\nexport const acClearItemFilters = () => ({\n  type: CLEAR_ITEM_FILTERS\n});\nexport const acSetItemFilters = filters => ({\n  type: SET_ITEM_FILTERS,\n  filters\n});","import update from 'immutability-helper';\nimport { arrayToIdMap } from '../modules/util';\nexport const RECEIVED_MESSAGES = 'RECEIVED_MESSAGES';\nexport default ((state = {}, action) => {\n  switch (action.type) {\n    case RECEIVED_MESSAGES:\n      {\n        const conversations = arrayToIdMap(action.value);\n        const newState = update(state, {\n          $merge: conversations\n        });\n        return newState;\n      }\n\n    default:\n      return state;\n  }\n}); // selectors\n\nexport const sGetMessagesRoot = state => state.messages;","import { getInstance } from 'd2';\nexport const getMessages = () => {\n  const fields = 'id,messageCount,lastUpdated,messageType,displayName,read,messages[id,read,sender[id,displayName],text,lastUpdated]';\n  const url = `/messageConversations?fields=${fields}&order=read:asc&pageSize=200`;\n  return getInstance().then(d2 => d2.Api.getApi().get(url)).catch(error => console.log('Error:', error));\n};","import { RECEIVED_MESSAGES } from '../../../reducers/messages';\nimport { getMessages } from '../../../api/messages';\n\nconst onError = (action, error) => {\n  console.log(`Error in action ${action}: ${error}`);\n  return error;\n};\n\nexport const receivedMessages = value => ({\n  type: RECEIVED_MESSAGES,\n  value\n});\nexport const tGetMessages = () => async dispatch => {\n  try {\n    const messages = await getMessages();\n    const {\n      messageConversations\n    } = messages;\n    return dispatch(receivedMessages(messageConversations));\n  } catch (err) {\n    return onError('Get Messages', err);\n  }\n};","export const RECEIVED_SNACKBAR_MESSAGE = 'RECEIVED_SNACKBAR_MESSAGE';\nexport const CLOSE_SNACKBAR = 'CLOSE_SNACKBAR';\nexport const DEFAULT_STATE_SNACKBAR = {\n  message: {},\n  duration: null,\n  open: false\n};\nexport default ((state = DEFAULT_STATE_SNACKBAR, action) => {\n  switch (action.type) {\n    case RECEIVED_SNACKBAR_MESSAGE:\n      {\n        return { ...state,\n          ...action.value\n        };\n      }\n\n    case CLOSE_SNACKBAR:\n      {\n        return DEFAULT_STATE_SNACKBAR;\n      }\n\n    default:\n      return state;\n  }\n}); // selectors\n\nexport const sGetSnackbar = state => state.snackbar || DEFAULT_STATE_SNACKBAR;","import { RECEIVED_SNACKBAR_MESSAGE, CLOSE_SNACKBAR } from '../reducers/snackbar';\nexport const acReceivedSnackbarMessage = value => ({\n  type: RECEIVED_SNACKBAR_MESSAGE,\n  value\n});\nexport const acCloseSnackbar = () => ({\n  type: CLOSE_SNACKBAR\n});","import { orObject } from '../modules/util';\nimport objectClean from 'd2-utilizr/lib/objectClean';\n/** @module reducers/visualizations */\n\nexport const ADD_VISUALIZATION = 'ADD_VISUALIZATION';\nexport const SET_ACTIVE_VISUALIZATION_TYPE = 'SET_ACTIVE_VISUALIZATION_TYPE';\nexport const DEFAULT_STATE_VISUALIZATIONS = {};\n\nconst isEmpty = p => p === undefined || p === null;\n\nexport default ((state = DEFAULT_STATE_VISUALIZATIONS, action) => {\n  switch (action.type) {\n    case ADD_VISUALIZATION:\n      {\n        return { ...state,\n          [action.value.id]: objectClean({ ...orObject(state[action.value.id]),\n            ...action.value\n          }, isEmpty)\n        };\n      }\n\n    case SET_ACTIVE_VISUALIZATION_TYPE:\n      {\n        return { ...state,\n          [action.id]: objectClean({ ...orObject(state[action.id]),\n            activeType: action.activeType\n          }, isEmpty)\n        };\n      }\n\n    default:\n      return state;\n  }\n}); // root selector\n\nexport const sGetVisualizationsRoot = state => state.visualizations; // selectors level 1\n\nexport const sGetVisualization = (state, id) => {\n  return sGetVisualizationsRoot(state)[id];\n};","import { ADD_VISUALIZATION, SET_ACTIVE_VISUALIZATION_TYPE } from '../reducers/visualizations';\nexport const acAddVisualization = value => ({\n  type: ADD_VISUALIZATION,\n  value\n});\nexport const acSetActiveVisualizationType = (id, activeType) => {\n  const action = {\n    type: SET_ACTIVE_VISUALIZATION_TYPE,\n    id,\n    activeType\n  };\n  return action;\n};","import arrayClean from 'd2-utilizr/lib/arrayClean';\nimport { getListItemFields, getFavoritesFields, getIdNameFields } from './metadata'; // Helper functions\n\nexport const onError = error => console.log('Error: ', error); // Dashboard item\n\nexport const getDashboardItemsFields = ({\n  withFavorite\n} = {}) => arrayClean(['id', 'type', 'shape', 'x', 'y', 'width~rename(w)', 'height~rename(h)', 'messages', 'text', 'appKey', `${getListItemFields().join(',')}`, withFavorite ? `${getFavoritesFields({\n  withDimensions: withFavorite.withDimensions\n}).join(',')}` : ``]); // Dashboard\n\nexport const getDashboardFields = ({\n  withItems,\n  withFavorite\n} = {}) => arrayClean([`${getIdNameFields().join(',')}`, 'description', 'displayDescription', 'favorite', `user[${getIdNameFields({\n  rename: true\n}).join(',')}]`, 'created', 'lastUpdated', 'access', withItems ? `dashboardItems[${getDashboardItemsFields({\n  withFavorite\n}).join(',')}]` : ``]);","import { getInstance } from 'd2';\nimport arrayClean from 'd2-utilizr/lib/arrayClean';\nimport { onError, getDashboardFields } from './index'; // Get \"all\" dashboards on startup\n\nexport const apiFetchDashboards = () => getInstance().then(d2 => d2.models.dashboard.list({\n  fields: [getDashboardFields().join(','), 'dashboardItems[id]'].join(','),\n  paging: 'false'\n})).catch(onError); // Get more info about selected dashboard\n\nexport const apiFetchDashboard = id => getInstance().then(d2 => d2.models.dashboard.get(id, {\n  fields: arrayClean(getDashboardFields({\n    withItems: true,\n    withFavorite: {\n      withDimensions: false\n    }\n  })).join(',')\n})).catch(onError); // Star dashboard\n\nexport const apiStarDashboard = (id, isStarred) => {\n  const url = `dashboards/${id}/favorite`;\n  getInstance().then(d2 => {\n    if (isStarred) {\n      d2.Api.getApi().post(url);\n    } else {\n      d2.Api.getApi().delete(url);\n    }\n  });\n};\nexport const apiDeleteDashboard = id => {\n  return getInstance().then(d2 => {\n    return d2.models.dashboards.get(id).then(dashboard => dashboard.delete());\n  }).catch(onError);\n};","import { getInstance } from 'd2';\nexport const NAMESPACE = 'dashboard';\nexport const hasDashboardNamespace = async (d2) => await d2.currentUser.dataStore.has(NAMESPACE);\nexport const getNamespace = async d2 => {\n  const hasNamespace = await hasDashboardNamespace(d2);\n  return hasNamespace ? await d2.currentUser.dataStore.get(NAMESPACE) : await d2.currentUser.dataStore.create(NAMESPACE);\n};\nexport const apiPostUserDataStoreValue = async (key, value) => {\n  const d2 = await getInstance();\n  const ns = await getNamespace(d2);\n  return ns.set(key, value);\n};\nexport const apiGetUserDataStoreValue = async (key, defaultValue) => {\n  const d2 = await getInstance();\n  const ns = await getNamespace(d2);\n  const hasKey = ns?.keys?.find(k => k === key);\n\n  if (hasKey) {\n    return await ns.get(key);\n  } else {\n    await apiPostUserDataStoreValue(key, defaultValue, ns);\n    console.log('(These errors to /userDataStore can be ignored)');\n    return defaultValue;\n  }\n};","import React from 'react';\nimport { connect } from 'react-redux';\nimport Snackbar from '@material-ui/core/Snackbar';\nimport PropTypes from 'prop-types';\nimport { sGetSnackbar } from '../../reducers/snackbar';\nimport { acCloseSnackbar } from '../../actions/snackbar';\nconst LOADING_DASHBOARD = 'LOADING_DASHBOARD';\nexport const loadingDashboardMsg = {\n  name: '',\n  type: LOADING_DASHBOARD\n};\n\nconst SnackbarMessageContent = ({\n  message\n}) => {\n  if (typeof message === 'object') {\n    //future message types:  switch(message.type)\n    return <span>\n                Loading <span style={{\n        fontWeight: 800\n      }}>{message.name}</span>{' '}\n                dashboard\n            </span>;\n  }\n\n  return message;\n};\n\nexport const SnackbarMessage = props => {\n  return <Snackbar style={{\n    zIndex: 10001\n  }} open={props.snackbarOpen} message={<SnackbarMessageContent message={props.snackbarMessage} />} autoHideDuration={props.snackbarDuration} onClose={props.onCloseSnackbar} />;\n};\n\nconst mapStateToProps = state => {\n  const {\n    message,\n    duration,\n    open\n  } = sGetSnackbar(state);\n  return {\n    snackbarOpen: open,\n    snackbarMessage: message,\n    snackbarDuration: duration\n  };\n};\n\nSnackbarMessage.propTypes = {\n  snackbarDuration: PropTypes.string,\n  snackbarMessage: PropTypes.object,\n  snackbarOpen: PropTypes.bool,\n  onCloseSnackbar: PropTypes.func\n};\nexport default connect(mapStateToProps, {\n  onCloseSnackbar: acCloseSnackbar\n})(SnackbarMessage);","import { getCustomDashboards, sGetDashboardById, EMPTY_DASHBOARD } from '../reducers/dashboards';\nimport { SET_SELECTED_ID, SET_SELECTED_ISLOADING, SET_SELECTED_SHOWDESCRIPTION, sGetSelectedIsLoading, sGetSelectedId } from '../reducers/selected';\nimport { sGetUserUsername } from '../reducers/user';\nimport { acSetDashboardItems, acAppendDashboards } from './dashboards';\nimport { acClearItemFilters } from './itemFilters';\nimport { tGetMessages } from '../components/Item/MessagesItem/actions';\nimport { acReceivedSnackbarMessage, acCloseSnackbar } from './snackbar';\nimport { acAddVisualization } from './visualizations';\nimport { apiFetchDashboard } from '../api/dashboards';\nimport { storePreferredDashboardId } from '../api/localStorage';\nimport { apiGetShowDescription, apiPostShowDescription } from '../api/description';\nimport { withShape } from '../components/ItemGrid/gridUtil';\nimport { loadingDashboardMsg } from '../components/SnackbarMessage/SnackbarMessage';\nimport { extractFavorite } from '../components/Item/VisualizationItem/plugin';\nimport { REPORT_TABLE, CHART, MAP, EVENT_REPORT, EVENT_CHART, MESSAGES } from '../modules/itemTypes'; // actions\n\nexport const acSetSelectedId = value => ({\n  type: SET_SELECTED_ID,\n  value\n});\nexport const acSetSelectedIsLoading = value => ({\n  type: SET_SELECTED_ISLOADING,\n  value\n});\nexport const acSetSelectedShowDescription = value => ({\n  type: SET_SELECTED_SHOWDESCRIPTION,\n  value\n}); // thunks\n\nexport const tSetSelectedDashboardById = id => async (dispatch, getState) => {\n  dispatch(acSetSelectedIsLoading(true));\n  const snackbarTimeout = setTimeout(() => {\n    const dashboardName = (sGetDashboardById(getState(), id) || EMPTY_DASHBOARD).displayName;\n\n    if (sGetSelectedIsLoading(getState()) && dashboardName) {\n      loadingDashboardMsg.name = dashboardName;\n      dispatch(acReceivedSnackbarMessage({\n        message: loadingDashboardMsg,\n        open: true\n      }));\n    }\n  }, 500);\n\n  const onSuccess = selected => {\n    dispatch(acAppendDashboards(selected));\n    const customDashboard = getCustomDashboards(selected)[0];\n    dispatch(acSetDashboardItems(withShape(customDashboard.dashboardItems)));\n    storePreferredDashboardId(sGetUserUsername(getState()), id);\n    customDashboard.dashboardItems.forEach(item => {\n      switch (item.type) {\n        case REPORT_TABLE:\n        case CHART:\n        case MAP:\n        case EVENT_REPORT:\n        case EVENT_CHART:\n          dispatch(acAddVisualization(extractFavorite(item)));\n          break;\n\n        case MESSAGES:\n          dispatch(tGetMessages(id));\n          break;\n\n        default:\n          break;\n      }\n    });\n\n    if (id !== sGetSelectedId(getState())) {\n      dispatch(acClearItemFilters());\n    }\n\n    dispatch(acSetSelectedId(id));\n    dispatch(acSetSelectedIsLoading(false));\n    clearTimeout(snackbarTimeout);\n    dispatch(acCloseSnackbar());\n    return selected;\n  };\n\n  const onError = error => {\n    console.log('Error: ', error);\n    return error;\n  };\n\n  try {\n    const dashboard = await apiFetchDashboard(id);\n    return onSuccess(dashboard);\n  } catch (err) {\n    return onError(err);\n  }\n};\nexport const tSetShowDescription = () => async dispatch => {\n  const onSuccess = value => {\n    dispatch(acSetSelectedShowDescription(value));\n  };\n\n  const onError = error => {\n    console.log('Error (apiGetShowDescription): ', error);\n    return error;\n  };\n\n  try {\n    const showDescription = await apiGetShowDescription();\n    return onSuccess(showDescription);\n  } catch (err) {\n    return onError(err);\n  }\n};\nexport const tUpdateShowDescription = value => async dispatch => {\n  const onSuccess = () => {\n    dispatch(acSetSelectedShowDescription(value));\n  };\n\n  const onError = error => {\n    console.log('Error (apiGetShowDescription): ', error);\n    return error;\n  };\n\n  try {\n    await apiPostShowDescription(value);\n    return onSuccess();\n  } catch (err) {\n    return onError(err);\n  }\n};","export const getPreferredDashboardId = username => localStorage.getItem(`dhis2.dashboard.current.${username}`) || undefined;\nexport const storePreferredDashboardId = (username, dashboardId) => {\n  localStorage.setItem(`dhis2.dashboard.current.${username}`, dashboardId);\n};","import { apiGetUserDataStoreValue, apiPostUserDataStoreValue } from './userDataStore';\nimport { DEFAULT_STATE_SELECTED_SHOWDESCRIPTION } from '../reducers/selected';\nconst KEY_SHOW_DESCRIPTION = 'showDescription';\nexport const apiGetShowDescription = async () => await apiGetUserDataStoreValue(KEY_SHOW_DESCRIPTION, DEFAULT_STATE_SELECTED_SHOWDESCRIPTION);\nexport const apiPostShowDescription = async (value) => await apiPostUserDataStoreValue(KEY_SHOW_DESCRIPTION, value);","import { SET_DASHBOARDS, ADD_DASHBOARDS, SET_DASHBOARD_STARRED, SET_DASHBOARD_DISPLAY_NAME, SET_DASHBOARD_ITEMS } from '../reducers/dashboards';\nimport { getCustomDashboards, sGetDashboardById, sGetDashboardsSortedByStarred } from '../reducers/dashboards';\nimport { NON_EXISTING_DASHBOARD_ID } from '../reducers/selected';\nimport { sGetUserUsername } from '../reducers/user';\nimport { tSetSelectedDashboardById, acSetSelectedId } from './selected';\nimport { apiFetchDashboards, apiStarDashboard, apiDeleteDashboard } from '../api/dashboards';\nimport { getPreferredDashboardId } from '../api/localStorage';\nimport { arrayToIdMap } from '../modules/util'; // actions\n\nexport const acSetDashboards = dashboards => ({\n  type: SET_DASHBOARDS,\n  value: arrayToIdMap(getCustomDashboards(dashboards))\n});\nexport const acAppendDashboards = dashboards => ({\n  type: ADD_DASHBOARDS,\n  value: arrayToIdMap(getCustomDashboards(dashboards))\n});\nexport const acSetDashboardStarred = (dashboardId, isStarred) => ({\n  type: SET_DASHBOARD_STARRED,\n  dashboardId: dashboardId,\n  value: isStarred\n});\nexport const acSetDashboardDisplayName = (dashboardId, value) => ({\n  type: SET_DASHBOARD_DISPLAY_NAME,\n  dashboardId,\n  value\n});\nexport const acSetDashboardItems = value => ({\n  type: SET_DASHBOARD_ITEMS,\n  value\n}); // thunks\n\nexport const tFetchDashboards = () => async dispatch => {\n  const collection = await apiFetchDashboards();\n  dispatch(acSetDashboards(collection.toArray()));\n};\nexport const tSelectDashboard = id => async (dispatch, getState) => {\n  const onError = error => {\n    console.log('Error (apiFetchDashboards): ', error);\n    return error;\n  };\n\n  try {\n    const state = getState();\n    let dashboardToSelect = null;\n\n    if (id) {\n      dashboardToSelect = sGetDashboardById(state, id) || null;\n    } else {\n      const preferredId = getPreferredDashboardId(sGetUserUsername(state));\n      const dash = sGetDashboardById(state, preferredId);\n      dashboardToSelect = preferredId && dash ? dash : sGetDashboardsSortedByStarred(state)[0];\n    }\n\n    if (dashboardToSelect) {\n      dispatch(tSetSelectedDashboardById(dashboardToSelect.id));\n    } else {\n      dispatch(acSetSelectedId(NON_EXISTING_DASHBOARD_ID));\n    }\n  } catch (err) {\n    return onError(err);\n  }\n};\nexport const tStarDashboard = (id, isStarred) => async dispatch => {\n  const onSuccess = id => {\n    dispatch(acSetDashboardStarred(id, isStarred));\n    return id;\n  };\n\n  const onError = error => {\n    console.log('Error (apiStarDashboard): ', error);\n    return error;\n  };\n\n  try {\n    await apiStarDashboard(id, isStarred);\n    return onSuccess(id);\n  } catch (err) {\n    return onError(err);\n  }\n};\nexport const tDeleteDashboard = id => async dispatch => {\n  try {\n    await apiDeleteDashboard(id);\n    await dispatch(tFetchDashboards());\n    return Promise.resolve();\n  } catch (err) {\n    console.log('Error (deleteDashboard): ', err);\n    return err;\n  }\n};","/** @module reducers/controlBar */\nimport { combineReducers } from 'redux';\nimport { validateReducer } from '../modules/util';\nexport const SET_CONTROLBAR_USER_ROWS = 'SET_CONTROLBAR_USER_ROWS';\nexport const DEFAULT_STATE_CONTROLBAR_ROWS = 1;\n\nconst userRows = (state = DEFAULT_STATE_CONTROLBAR_ROWS, action) => {\n  switch (action.type) {\n    case SET_CONTROLBAR_USER_ROWS:\n      return validateReducer(action.value, DEFAULT_STATE_CONTROLBAR_ROWS);\n\n    default:\n      return state;\n  }\n};\n\nexport default combineReducers({\n  userRows\n});\n/**\n * Selectors that point to specific props in the state object\n * @function\n * @param {Object} state\n * @returns {Object}\n */\n\nexport const sGetControlBarRoot = state => state.controlBar; // Selector dependency level 2\n\nexport const sGetControlBarUserRows = state => sGetControlBarRoot(state).userRows;","import { SET_CONTROLBAR_USER_ROWS } from '../reducers/controlBar';\nimport { apiGetControlBarRows } from '../api/controlBar'; // actions\n\nexport const acSetControlBarUserRows = rows => ({\n  type: SET_CONTROLBAR_USER_ROWS,\n  value: rows\n}); // thunks\n\nexport const tSetControlBarRows = () => async dispatch => {\n  const onSuccess = rows => {\n    dispatch(acSetControlBarUserRows(rows));\n  };\n\n  const onError = error => {\n    console.log('Error (apiGetControlBarRows): ', error);\n    return error;\n  };\n\n  try {\n    const controlBarRows = await apiGetControlBarRows();\n    return onSuccess(controlBarRows);\n  } catch (err) {\n    return onError(err);\n  }\n};","import { apiGetUserDataStoreValue, apiPostUserDataStoreValue } from './userDataStore';\nimport { DEFAULT_STATE_CONTROLBAR_ROWS } from '../reducers/controlBar';\nconst KEY_CONTROLBAR_ROWS = 'controlBarRows';\nexport const apiGetControlBarRows = async () => await apiGetUserDataStoreValue(KEY_CONTROLBAR_ROWS, DEFAULT_STATE_CONTROLBAR_ROWS);\nexport const apiPostControlBarRows = async (value) => await apiPostUserDataStoreValue(KEY_CONTROLBAR_ROWS, value);","export const SET_SETTINGS = 'SET_SETTINGS';\nexport const ADD_SETTINGS = 'ADD_SETTINGS';\nexport const DEFAULT_SETTINGS = {\n  keyDateFormat: 'yyyy-MM-dd',\n  keyAnalysisRelativePeriod: 'LAST_12_MONTHS',\n  keyAnalysisDigitGroupSeparator: 'SPACE',\n  displayNameProperty: 'displayName',\n  uiLocale: 'en',\n  rootOrganisationUnit: {}\n};\nexport default ((state = DEFAULT_SETTINGS, action) => {\n  switch (action.type) {\n    case SET_SETTINGS:\n      {\n        return Object.assign({}, action.value);\n      }\n\n    case ADD_SETTINGS:\n      {\n        return { ...state,\n          ...action.value\n        };\n      }\n\n    default:\n      return state;\n  }\n}); // Selectors\n\nexport const sGetSettings = state => state.settings;\nexport const sGetSettingsDisplayNameProperty = state => sGetSettings(state).displayNameProperty;\nexport const sGetRootOrgUnit = state => sGetSettings(state).rootOrganisationUnit;\nexport const sGetRelativePeriod = state => sGetSettings(state).keyAnalysisRelativePeriod;\nexport const sGetUiLocale = state => sGetSettings(state).uiLocale;","import { SET_DIMENSIONS } from '../reducers/dimensions';\nimport { apiFetchDimensions } from '@dhis2/analytics';\nimport { sGetSettingsDisplayNameProperty } from '../reducers/settings';\nexport const acSetDimensions = dimensions => ({\n  type: SET_DIMENSIONS,\n  value: dimensions\n});\nexport const tSetDimensions = d2 => async (dispatch, getState) => {\n  const onSuccess = dimensions => {\n    dispatch(acSetDimensions(dimensions));\n  };\n\n  const onError = error => {\n    console.log('Error (apiFetchDimensions): ', error);\n    return error;\n  };\n\n  try {\n    const displayNameProp = sGetSettingsDisplayNameProperty(getState());\n    const dimensions = await apiFetchDimensions(d2, displayNameProp); // filter out CATEGORY that are not of type ATTRIBUTE\n\n    const filteredDimensions = dimensions.filter(dim => dim.dimensionType !== 'CATEGORY' || dim.dimensionType === 'CATEGORY' && dim.dataDimensionType === 'ATTRIBUTE');\n    return onSuccess(filteredDimensions);\n  } catch (err) {\n    return onError(err);\n  }\n};","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { colors } from '@dhis2/ui';\nimport classes from './styles/ControlBar.module.css';\nexport const DRAG_HANDLE_HEIGHT = 7;\n\nclass ControlBar extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      dragging: false\n    };\n  }\n\n  onStartDrag = () => {\n    this.setState({\n      dragging: true\n    });\n    window.addEventListener('mousemove', this.onDrag);\n    window.addEventListener('mouseup', this.onEndDrag);\n  };\n  onDrag = event => {\n    event.preventDefault();\n    event.stopPropagation();\n    const newHeight = event.clientY;\n\n    if (this.props.onChangeHeight && newHeight !== this.props.height && newHeight > 0) {\n      requestAnimationFrame(() => {\n        this.props.onChangeHeight(newHeight);\n      });\n    }\n  };\n  onEndDrag = () => {\n    this.setState({\n      dragging: false\n    });\n    window.removeEventListener('mousemove', this.onDrag);\n    window.removeEventListener('mouseup', this.onEndDrag);\n\n    if (this.props.onEndDrag) {\n      this.props.onEndDrag();\n    }\n  };\n\n  renderDragHandle() {\n    return typeof this.props.onChangeHeight === 'function' ? <div className={classes.draghandle} style={{\n      height: DRAG_HANDLE_HEIGHT\n    }} onMouseDown={this.onStartDrag} /> : null;\n  }\n\n  render() {\n    const height = Math.max(this.props.height, 0) + DRAG_HANDLE_HEIGHT;\n    const rootStyle = Object.assign({\n      height,\n      backgroundColor: this.props.editMode ? colors.yellow050 : colors.white,\n      paddingBottom: DRAG_HANDLE_HEIGHT\n    }, // Disable animations while dragging\n    this.state.dragging ? {\n      transition: 'none'\n    } : {});\n    return <div style={rootStyle} className={classes.root}>\n                <div className={classes.content}>{this.props.children}</div>\n                {this.renderDragHandle()}\n            </div>;\n  }\n\n}\n\nControlBar.propTypes = {\n  /**\n   * The height of the control bar in number of lines. Must be a positive integer.\n   */\n  children: PropTypes.node.isRequired,\n\n  /**\n   * If true, the background color of the control bar changes to indicate that edit mode is active.\n   */\n  editMode: PropTypes.bool.isRequired,\n\n  /**\n   * Callback function that is called when the control bar is resized.\n   * The callback receives one argument: The new height in pixels.\n   *\n   * If no callback is specified the control bar will not have a drag handle.\n   */\n  height: PropTypes.number.isRequired,\n\n  /**\n   * Callback function that is called when the control bar is dropped after being dragged.\n   * The callback receives one argument: The new height in pixels.\n   *\n   * Ignored if no \"onChangeHeight\" function is provided.\n   */\n  onChangeHeight: PropTypes.func,\n\n  /**\n   * The contents of the control bar.\n   */\n  onEndDrag: PropTypes.func\n};\nControlBar.defaultProps = {\n  onChangeHeight: null,\n  onEndDrag: null\n};\nexport default ControlBar;","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst StarIcon = ({\n  className\n}) => <svg className={className} xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\">\n        <path d=\"M0 0h24v24H0z\" fill=\"none\" />\n        <path d=\"M12 17.27L18.18 21l-1.64-7.03L22 9.24l-7.19-.61L12 2 9.19 8.63 2 9.24l5.46 4.73L5.82 21z\" />\n        <path d=\"M0 0h24v24H0z\" fill=\"none\" />\n    </svg>;\n\nStarIcon.propTypes = {\n  className: PropTypes.string\n};\nexport default StarIcon;","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Chip } from '@dhis2/ui';\nimport { Link } from 'react-router-dom';\nimport debounce from 'lodash/debounce';\nimport StarIcon from '../../icons/Star';\nimport { apiPostDataStatistics } from '../../api/dataStatistics';\nimport classes from './styles/DashboardItemChip.module.css';\nexport const DashboardItemChip = ({\n  starred,\n  selected,\n  label,\n  dashboardId\n}) => {\n  const chipProps = {\n    selected\n  };\n\n  if (starred) {\n    const selectedState = selected ? classes.selected : classes.unselected;\n    chipProps.icon = <StarIcon className={`${classes.icon} ${selectedState}`} />;\n  }\n\n  return <Link className={classes.link} to={`/${dashboardId}`} onClick={debounce(() => apiPostDataStatistics('DASHBOARD_VIEW', dashboardId), 500)}>\n            <Chip {...chipProps}>{label}</Chip>\n        </Link>;\n};\nDashboardItemChip.propTypes = {\n  dashboardId: PropTypes.string.isRequired,\n  label: PropTypes.string.isRequired,\n  selected: PropTypes.bool.isRequired,\n  starred: PropTypes.bool.isRequired,\n  classes: PropTypes.object\n};\nexport default DashboardItemChip;","import { getInstance } from 'd2';\nexport const apiPostDataStatistics = async (eventType, id) => {\n  const d2 = await getInstance();\n  const url = `dataStatistics?eventType=${eventType}&favorite=${id}`;\n  d2.Api.getApi().post(url);\n};","import React from 'react';\nimport { colors } from '@dhis2/ui';\n\nconst AddCircleIcon = () => <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"32\" height=\"32\" fill={colors.teal600} viewBox=\"0 0 24 24\">\n        <path d=\"M12 2C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2zm4 11h-3v3c0 .55-.45 1-1 1s-1-.45-1-1v-3H8c-.55 0-1-.45-1-1s.45-1 1-1h3V8c0-.55.45-1 1-1s1 .45 1 1v3h3c.55 0 1 .45 1 1s-.45 1-1 1z\" />\n    </svg>;\n\nexport default AddCircleIcon;","import React from 'react';\nimport { colors } from '@dhis2/ui';\nimport PropTypes from 'prop-types';\n\nconst ClearIcon = ({\n  className\n}) => <svg className={className} fill={colors.grey800} xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\">\n        <path d=\"M19 6.41L17.59 5 12 10.59 6.41 5 5 6.41 10.59 12 5 17.59 6.41 19 12 13.41 17.59 19 19 17.59 13.41 12z\" />\n        <path d=\"M0 0h24v24H0z\" fill=\"none\" />\n    </svg>;\n\nClearIcon.propTypes = {\n  className: PropTypes.string\n};\nexport default ClearIcon;","import React from 'react';\nimport PropTypes from 'prop-types';\nimport ClearIcon from '../../icons/Clear';\nimport classes from './styles/ClearButton.module.css';\nexport const ClearButton = ({\n  onClear\n}) => <button className={classes.button} onClick={onClear}>\n        <span>\n            <ClearIcon className={classes.icon} color=\"action\" />\n        </span>\n    </button>;\nClearButton.propTypes = {\n  onClear: PropTypes.func.isRequired\n};\nexport default ClearButton;","import { combineReducers } from 'redux';\nimport { validateReducer } from '../modules/util';\nexport const SET_DASHBOARDS_FILTER_NAME = 'SET_DASHBOARDS_FILTER_NAME';\nexport const SET_DASHBOARDS_FILTER_OWNER = 'SET_DASHBOARDS_FILTER_OWNER';\nexport const SET_DASHBOARDS_FILTER_ORDER = 'SET_DASHBOARDS_FILTER_ORDER';\nexport const ownerData = [{\n  id: 'ALL',\n  value: 'All users'\n}, {\n  id: 'ME',\n  value: 'Created by me'\n}, {\n  id: 'OTHERS',\n  value: 'Created by others'\n}];\nexport const orderData = [{\n  id: 'NAME:ASC',\n  value: 'Name (asc)'\n}, {\n  id: 'NAME:ASC',\n  value: 'Name (desc)'\n}, {\n  id: 'ITEMS:ASC',\n  value: 'Number of items (asc)'\n}, {\n  id: 'ITEMS:ASC',\n  value: 'Number of items (desc)'\n}, {\n  id: 'CREATED:ASC',\n  value: 'Created date (asc)'\n}, {\n  id: 'CREATED:ASC',\n  value: 'Created date (desc)'\n}];\nexport const DEFAULT_STATE_DASHBOARDS_FILTER_NAME = '';\nexport const DEFAULT_STATE_DASHBOARDS_FILTER_OWNER = ownerData[0].id;\nexport const DEFAULT_STATE_DASHBOARDS_FILTER_ORDER = orderData[0].id;\n\nconst name = (state = DEFAULT_STATE_DASHBOARDS_FILTER_NAME, action) => {\n  switch (action.type) {\n    case SET_DASHBOARDS_FILTER_NAME:\n      return validateReducer(action.value, DEFAULT_STATE_DASHBOARDS_FILTER_NAME);\n\n    default:\n      return state;\n  }\n};\n\nconst owner = (state = DEFAULT_STATE_DASHBOARDS_FILTER_OWNER, action) => {\n  switch (action.type) {\n    case SET_DASHBOARDS_FILTER_OWNER:\n      return validateReducer(action.value, DEFAULT_STATE_DASHBOARDS_FILTER_NAME);\n\n    default:\n      return state;\n  }\n};\n\nconst order = (state = DEFAULT_STATE_DASHBOARDS_FILTER_ORDER, action) => {\n  switch (action.type) {\n    case SET_DASHBOARDS_FILTER_ORDER:\n      return validateReducer(action.value, DEFAULT_STATE_DASHBOARDS_FILTER_ORDER);\n\n    default:\n      return state;\n  }\n};\n\nexport default combineReducers({\n  name,\n  owner,\n  order\n}); // selectors\n\nexport const sGetDashboardsFilterRoot = state => state.dashboardsFilter; // selector dependency level 2\n\nexport const sGetFilterName = state => sGetDashboardsFilterRoot(state).name;\nexport const sGetFilterOwner = state => sGetDashboardsFilterRoot(state).owner;\nexport const sGetFilterOrder = state => sGetDashboardsFilterRoot(state).order;","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport i18n from '@dhis2/d2-i18n';\nimport { withStyles } from '@material-ui/core/styles';\nimport InputField from '@material-ui/core/Input';\nimport InputAdornment from '@material-ui/core/InputAdornment';\nimport SearchIcon from '@material-ui/icons/Search';\nimport { colors } from '@dhis2/ui';\nimport ClearButton from './ClearButton';\nimport { DEFAULT_STATE_DASHBOARDS_FILTER_NAME } from '../../reducers/dashboardsFilter';\nconst styles = {\n  filterField: {\n    fontSize: '14px',\n    width: '200px',\n    height: '30px',\n    top: '-4px'\n  },\n  searchIcon: {\n    color: colors.grey700,\n    width: '20px',\n    height: '20px'\n  }\n};\nexport const KEYCODE_ENTER = 13;\nexport const KEYCODE_ESCAPE = 27;\nexport class Filter extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      value: DEFAULT_STATE_DASHBOARDS_FILTER_NAME\n    };\n  }\n\n  componentWillReceiveProps(nextProps) {\n    this.setState({\n      value: nextProps.name\n    });\n  }\n\n  setFilterValue = event => {\n    event.preventDefault();\n    this.props.onChangeName(event.target.value);\n  };\n  handleKeyUp = event => {\n    switch (event.keyCode) {\n      case KEYCODE_ENTER:\n        this.props.onKeypressEnter();\n        break;\n\n      case KEYCODE_ESCAPE:\n        this.props.onChangeName();\n        break;\n\n      default:\n        break;\n    }\n  };\n\n  render() {\n    const {\n      classes,\n      name,\n      onChangeName\n    } = this.props;\n    const startAdornment = <InputAdornment position=\"start\">\n                <SearchIcon className={classes.searchIcon} />\n            </InputAdornment>;\n    const endAdornment = name !== '' && name !== null ? <InputAdornment position=\"end\">\n                    <ClearButton onClear={() => onChangeName()} />\n                </InputAdornment> : null;\n    return <InputField className={classes.filterField} placeholder={i18n.t('Search for a dashboard')} startAdornment={startAdornment} endAdornment={endAdornment} value={this.state.value} onChange={this.setFilterValue} onKeyUp={this.handleKeyUp} />;\n  }\n\n}\nFilter.propTypes = {\n  classes: PropTypes.object,\n  name: PropTypes.string,\n  onChangeName: PropTypes.func,\n  onKeypressEnter: PropTypes.func\n};\nFilter.defaultProps = {\n  name: '',\n  onChangeName: Function.prototype\n};\nexport default withStyles(styles)(Filter);","import React from 'react';\nimport PropTypes from 'prop-types';\nimport i18n from '@dhis2/d2-i18n';\nimport classes from './styles/ShowMoreButton.module.css';\nexport const SHOWMORE_BAR_HEIGHT = 16;\nexport const ShowMoreButton = ({\n  onClick,\n  isMaxHeight,\n  disabled\n}) => {\n  return <div style={{\n    textAlign: 'center'\n  }}>\n            {disabled ? <div className={classes.disabled}>{i18n.t('Show more')}</div> : <div className={classes.showMore} onClick={onClick}>\n                    {isMaxHeight ? i18n.t('Show less') : i18n.t('Show more')}\n                </div>}\n        </div>;\n};\nShowMoreButton.propTypes = {\n  disabled: PropTypes.bool,\n  isMaxHeight: PropTypes.bool,\n  onClick: PropTypes.func\n};\nexport default ShowMoreButton;","import { SHOWMORE_BAR_HEIGHT } from './ShowMoreButton';\nexport const CONTROL_BAR_ROW_HEIGHT = 40;\nexport const FIRST_ROW_PADDING_HEIGHT = 10;\nexport const MIN_ROW_COUNT = 1;\nexport const HEADERBAR_HEIGHT = 48;\nconst CONTROL_BAR_OUTER_HEIGHT_DIFF = FIRST_ROW_PADDING_HEIGHT + SHOWMORE_BAR_HEIGHT - 2; // 2 pixel \"adjustment\"\n\nexport const getRowsHeight = rows => {\n  return rows * CONTROL_BAR_ROW_HEIGHT;\n};\nexport const getNumRowsFromHeight = height => {\n  return Math.floor((height - CONTROL_BAR_OUTER_HEIGHT_DIFF) / CONTROL_BAR_ROW_HEIGHT);\n};\nexport const getControlBarHeight = rows => {\n  return getRowsHeight(rows) + CONTROL_BAR_OUTER_HEIGHT_DIFF;\n};","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { Link, withRouter } from 'react-router-dom';\nimport ControlBar from './ControlBar';\nimport arraySort from 'd2-utilizr/lib/arraySort';\nimport PropTypes from 'prop-types';\nimport Chip from './DashboardItemChip';\nimport AddCircleIcon from '../../icons/AddCircle';\nimport Filter from './Filter';\nimport ShowMoreButton from './ShowMoreButton';\nimport { FIRST_ROW_PADDING_HEIGHT, MIN_ROW_COUNT, getRowsHeight, getControlBarHeight, getNumRowsFromHeight } from './controlBarDimensions';\nimport { sGetControlBarUserRows } from '../../reducers/controlBar';\nimport { sGetAllDashboards } from '../../reducers/dashboards';\nimport { sGetFilterName } from '../../reducers/dashboardsFilter';\nimport { sGetSelectedId } from '../../reducers/selected';\nimport { acSetControlBarUserRows } from '../../actions/controlBar';\nimport { acSetFilterName } from '../../actions/dashboardsFilter';\nimport { orObject, orArray } from '../../modules/util';\nimport { apiPostControlBarRows } from '../../api/controlBar';\nimport classes from './styles/DashboardsBar.module.css';\nexport const MAX_ROW_COUNT = 10;\nexport class DashboardsBar extends Component {\n  state = {\n    rows: MIN_ROW_COUNT\n  };\n  setInitialDashboardState = rows => {\n    this.setState({\n      rows,\n      isMaxHeight: rows === MAX_ROW_COUNT\n    });\n  };\n\n  componentDidMount() {\n    this.setInitialDashboardState(this.props.userRows);\n  }\n\n  componentWillReceiveProps(nextProps) {\n    this.setInitialDashboardState(nextProps.userRows);\n  }\n\n  onChangeHeight = newHeight => {\n    const adjustedHeight = newHeight - 52; // don't rush the transition to a bigger row count\n\n    const newRows = Math.max(MIN_ROW_COUNT, getNumRowsFromHeight(adjustedHeight));\n\n    if (newRows !== this.state.rows) {\n      const newRowCount = Math.min(newRows, MAX_ROW_COUNT);\n      this.props.onChangeHeight(newRowCount);\n    }\n  };\n  onEndDrag = () => {\n    return apiPostControlBarRows(this.state.rows);\n  };\n  onToggleMaxHeight = () => {\n    const rows = this.state.rows === MAX_ROW_COUNT ? this.props.userRows : MAX_ROW_COUNT;\n    this.setState({\n      rows,\n      isMaxHeight: !this.state.isMaxHeight\n    });\n  };\n  onSelectDashboard = () => {\n    this.props.history.push(`/${this.props.dashboards[0].id}`);\n  };\n\n  render() {\n    const {\n      dashboards,\n      name,\n      selectedId,\n      onChangeFilterName\n    } = this.props;\n    const rowCount = this.state.isMaxHeight ? MAX_ROW_COUNT : this.state.rows;\n    const controlBarHeight = getControlBarHeight(rowCount);\n    const contentWrapperStyle = {\n      padding: `${FIRST_ROW_PADDING_HEIGHT}px 6px 0 6px`,\n      overflowY: this.state.isMaxHeight ? 'auto' : 'hidden',\n      height: getRowsHeight(rowCount) + FIRST_ROW_PADDING_HEIGHT\n    };\n    return <ControlBar height={controlBarHeight} onChangeHeight={this.onChangeHeight} onEndDrag={this.onEndDrag} editMode={false}>\n                <div style={contentWrapperStyle}>\n                    <div className={classes.leftControls}>\n                        <Link style={{\n            display: 'inline-block',\n            textDecoration: 'none',\n            marginRight: 10,\n            position: 'relative',\n            top: '2px'\n          }} to={'/new'}>\n                            <AddCircleIcon />\n                        </Link>\n                        <Filter name={name} onChangeName={onChangeFilterName} onKeypressEnter={this.onSelectDashboard} />\n                    </div>\n                    {orArray(dashboards).map(dashboard => <Chip key={dashboard.id} label={dashboard.displayName} starred={dashboard.starred} dashboardId={dashboard.id} selected={dashboard.id === selectedId} />)}\n                </div>\n                <ShowMoreButton onClick={this.onToggleMaxHeight} isMaxHeight={this.state.isMaxHeight} disabled={this.props.userRows === MAX_ROW_COUNT} />\n            </ControlBar>;\n  }\n\n}\n\nconst mapStateToProps = state => ({\n  dashboards: sGetAllDashboards(state),\n  name: sGetFilterName(state),\n  userRows: sGetControlBarUserRows(state),\n  selectedId: sGetSelectedId(state)\n});\n\nconst mapDispatchToProps = {\n  onChangeHeight: acSetControlBarUserRows,\n  onChangeFilterName: acSetFilterName\n};\n\nconst mergeProps = (stateProps, dispatchProps, ownProps) => {\n  const dashboards = Object.values(orObject(stateProps.dashboards));\n  const displayDashboards = arraySort(dashboards.filter(d => d.displayName.toLowerCase().includes(stateProps.name.toLowerCase())), 'ASC', 'displayName');\n  return { ...stateProps,\n    ...ownProps,\n    ...dispatchProps,\n    dashboards: [...displayDashboards.filter(d => d.starred), ...displayDashboards.filter(d => !d.starred)]\n  };\n};\n\nDashboardsBar.propTypes = {\n  dashboards: PropTypes.array,\n  history: PropTypes.object,\n  name: PropTypes.string,\n  selectedId: PropTypes.string,\n  userRows: PropTypes.number,\n  onChangeFilterName: PropTypes.func,\n  onChangeHeight: PropTypes.func\n};\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps, mergeProps)(DashboardsBar));","import { SET_DASHBOARDS_FILTER_NAME, SET_DASHBOARDS_FILTER_OWNER, SET_DASHBOARDS_FILTER_ORDER } from '../reducers/dashboardsFilter'; // actions\n\nexport const acSetFilterName = value => ({\n  type: SET_DASHBOARDS_FILTER_NAME,\n  value\n});\nexport const acSetFilterOwner = value => ({\n  type: SET_DASHBOARDS_FILTER_OWNER,\n  value\n});\nexport const acSetFilterOrder = value => ({\n  type: SET_DASHBOARDS_FILTER_ORDER,\n  value\n});","import React from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { getControlBarHeight, MIN_ROW_COUNT } from '../ControlBar/controlBarDimensions';\nimport { sGetControlBarUserRows } from '../../reducers/controlBar';\nimport { DRAG_HANDLE_HEIGHT } from '../ControlBar/ControlBar';\n\nconst DashboardVerticalOffset = props => {\n  const rows = props.editMode ? MIN_ROW_COUNT : props.userRows;\n  const marginTop = getControlBarHeight(rows) + DRAG_HANDLE_HEIGHT;\n  return <div className=\"page-container-top-margin\" style={{\n    marginTop\n  }} />;\n};\n\nconst mapStateToProps = state => ({\n  userRows: sGetControlBarUserRows(state)\n});\n\nDashboardVerticalOffset.propTypes = {\n  editMode: PropTypes.bool,\n  userRows: PropTypes.number\n};\nexport default connect(mapStateToProps)(DashboardVerticalOffset);","import React from 'react';\nimport { colors } from '@dhis2/ui';\nimport PropTypes from 'prop-types';\nexport const NoContentMessage = ({\n  text\n}) => <div style={{\n  padding: '50px 10px',\n  textAlign: 'center',\n  fontSize: '15px',\n  fontWeight: 500,\n  color: colors.grey600\n}}>\n        {text}\n    </div>;\nNoContentMessage.propTypes = {\n  text: PropTypes.string\n};\nexport default NoContentMessage;","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { MenuItem, colors } from '@dhis2/ui';\n\nconst HeaderMenuItem = ({\n  title\n}) => <MenuItem dense key={title} disabled label={<span style={{\n  color: colors.grey800,\n  fontWeight: '600'\n}}>\n                {title}\n            </span>} />;\n\nHeaderMenuItem.propTypes = {\n  title: PropTypes.string.isRequired\n};\nexport default HeaderMenuItem;","import React from 'react';\nimport { colors } from '@dhis2/ui';\nimport PropTypes from 'prop-types';\n\nconst LaunchIcon = ({\n  className\n}) => <svg className={className} xmlns=\"http://www.w3.org/2000/svg\" width=\"12\" height=\"12\" fill={colors.grey600} viewBox=\"0 0 24 24\">\n        <path d=\"M0 0h24v24H0z\" fill=\"none\" />\n        <path d=\"M19 19H5V5h7V3H5c-1.11 0-2 .9-2 2v14c0 1.1.89 2 2 2h14c1.1 0 2-.9 2-2v-7h-2v7zM14 3v2h3.59l-9.83 9.83 1.41 1.41L19 6.41V10h2V3h-7z\" />\n    </svg>;\n\nLaunchIcon.propTypes = {\n  className: PropTypes.string\n};\nexport default LaunchIcon;","import React from 'react';\nimport { MenuItem, colors } from '@dhis2/ui';\nimport i18n from '@dhis2/d2-i18n';\nimport PropTypes from 'prop-types';\nimport { visTypeIcons } from '@dhis2/analytics';\nimport { getItemIcon, VISUALIZATION } from '../../modules/itemTypes';\nimport LaunchIcon from '../../icons/Launch';\nimport classes from './styles/ContentMenuItem.module.css';\n\nconst LaunchLink = ({\n  url\n}) => <a onClick={e => e.stopPropagation()} className={classes.launchLink} target=\"_blank\" rel=\"noopener noreferrer\" href={url}>\n        <LaunchIcon />\n    </a>;\n\nLaunchLink.propTypes = {\n  url: PropTypes.string\n};\n\nconst InsertButton = () => <button className={classes.buttonInsert}>{i18n.t('Insert')}</button>;\n\nconst ContentMenuItem = ({\n  type,\n  name,\n  onInsert,\n  url,\n  visType\n}) => {\n  const ItemIcon = getItemIcon(type);\n  const renderedItemIcon = type === VISUALIZATION ? visTypeIcons[visType] : <ItemIcon style={{\n    fill: colors.grey600\n  }} />;\n  return <MenuItem dense onClick={onInsert} label={<div className={classes.menuItem}>\n                    <div className={classes.label}>\n                        <span style={{\n        marginRight: '6px'\n      }}>\n                            {renderedItemIcon}\n                        </span>\n                        <span>{name}</span>\n                        {url ? <LaunchLink url={url} /> : null}\n                    </div>\n                    <InsertButton />\n                </div>} />;\n};\n\nContentMenuItem.propTypes = {\n  name: PropTypes.string,\n  type: PropTypes.string,\n  url: PropTypes.string,\n  visType: PropTypes.string,\n  onInsert: PropTypes.func\n};\nexport default ContentMenuItem;","/** @module reducers/editDashboard */\nimport update from 'immutability-helper';\nimport isEmpty from 'lodash/isEmpty';\nimport { orArray, orObject } from '../modules/util';\nexport const RECEIVED_EDIT_DASHBOARD = 'RECEIVED_EDIT_DASHBOARD';\nexport const RECEIVED_NOT_EDITING = 'RECEIVED_NOT_EDITING';\nexport const START_NEW_DASHBOARD = 'START_NEW_DASHBOARD';\nexport const RECEIVED_TITLE = 'RECEIVED_TITLE';\nexport const RECEIVED_DESCRIPTION = 'RECEIVED_DESCRIPTION';\nexport const ADD_DASHBOARD_ITEM = 'ADD_DASHBOARD_ITEM';\nexport const REMOVE_DASHBOARD_ITEM = 'REMOVE_DASHBOARD_ITEM';\nexport const UPDATE_DASHBOARD_ITEM = 'UPDATE_DASHBOARD_ITEM';\nexport const RECEIVED_DASHBOARD_LAYOUT = 'RECEIVED_DASHBOARD_LAYOUT';\nexport const SET_PRINT_PREVIEW_VIEW = 'SET_PRINT_PREVIEW_VIEW';\nexport const CLEAR_PRINT_PREVIEW_VIEW = 'CLEAR_PRINT_PREVIEW_VIEW';\nexport const DEFAULT_STATE_EDIT_DASHBOARD = {};\nexport const NEW_DASHBOARD_STATE = {\n  id: '',\n  name: '',\n  access: {},\n  description: '',\n  dashboardItems: [],\n  printPreviewView: false\n};\nexport default ((state = DEFAULT_STATE_EDIT_DASHBOARD, action) => {\n  switch (action.type) {\n    case RECEIVED_EDIT_DASHBOARD:\n      {\n        const newState = {};\n        Object.keys(NEW_DASHBOARD_STATE).map(k => newState[k] = action.value[k]);\n        newState.printPreviewView = false;\n        return newState;\n      }\n\n    case RECEIVED_NOT_EDITING:\n      return DEFAULT_STATE_EDIT_DASHBOARD;\n\n    case SET_PRINT_PREVIEW_VIEW:\n      return Object.assign({}, state, {\n        printPreviewView: true\n      });\n\n    case CLEAR_PRINT_PREVIEW_VIEW:\n      return Object.assign({}, state, {\n        printPreviewView: false\n      });\n\n    case START_NEW_DASHBOARD:\n      return NEW_DASHBOARD_STATE;\n\n    case RECEIVED_TITLE:\n      {\n        return Object.assign({}, state, {\n          name: action.value\n        });\n      }\n\n    case RECEIVED_DESCRIPTION:\n      {\n        return Object.assign({}, state, {\n          description: action.value\n        });\n      }\n\n    case ADD_DASHBOARD_ITEM:\n      if (!action.value.position) {\n        return update(state, {\n          dashboardItems: {\n            $unshift: [action.value]\n          }\n        });\n      }\n\n      return update(state, {\n        dashboardItems: {\n          $splice: [[parseInt(action.value.position), 0, action.value]]\n        }\n      });\n\n    case REMOVE_DASHBOARD_ITEM:\n      {\n        const idToRemove = action.value;\n        const dashboardItemIndex = state.dashboardItems.findIndex(item => item.id === idToRemove);\n\n        if (dashboardItemIndex > -1) {\n          return update(state, {\n            dashboardItems: {\n              $splice: [[dashboardItemIndex, 1]]\n            }\n          });\n        }\n\n        return state;\n      }\n\n    case RECEIVED_DASHBOARD_LAYOUT:\n      {\n        const stateItems = orArray(state.dashboardItems);\n        let layoutHasChanged = false;\n        const newStateItems = action.value.map(({\n          x,\n          y,\n          w,\n          h,\n          i\n        }) => {\n          const stateItem = stateItems.find(si => si.id === i);\n\n          if (!(stateItem.x === x && stateItem.y === y && stateItem.w === w && stateItem.h === h)) {\n            layoutHasChanged = true;\n            return Object.assign({}, stateItem, {\n              w,\n              h,\n              x,\n              y\n            });\n          }\n\n          return stateItem;\n        });\n        return layoutHasChanged ? { ...state,\n          dashboardItems: newStateItems\n        } : state;\n      }\n\n    case UPDATE_DASHBOARD_ITEM:\n      {\n        const dashboardItem = action.value;\n        const dashboardItemIndex = state.dashboardItems.findIndex(item => item.id === dashboardItem.id);\n\n        if (dashboardItemIndex > -1) {\n          const newState = update(state, {\n            dashboardItems: {\n              $splice: [[dashboardItemIndex, 1, Object.assign({}, dashboardItem)]]\n            }\n          });\n          return newState;\n        }\n\n        return state;\n      }\n\n    default:\n      return state;\n  }\n}); // root selector\n\nexport const sGetEditDashboardRoot = state => state.editDashboard; // selectors\n\nexport const sGetIsEditing = state => !isEmpty(state.editDashboard);\nexport const sGetIsPrintPreviewView = state => sGetEditDashboardRoot(state).printPreviewView;\nexport const sGetIsNewDashboard = state => {\n  return !isEmpty(state.editDashboard) && sGetEditDashboardRoot(state).id === '';\n};\nexport const sGetEditDashboardName = state => sGetEditDashboardRoot(state).name;\nexport const sGetEditDashboardDescription = state => sGetEditDashboardRoot(state).description;\nexport const sGetEditDashboardItems = state => orObject(sGetEditDashboardRoot(state)).dashboardItems;","import { getInstance } from 'd2';\n\nconst onError = error => console.log('Error: ', error);\n\nconst saveDashboard = (dashboard, data) => {\n  const {\n    name,\n    description,\n    dashboardItems\n  } = data;\n  dashboard.name = name;\n  dashboard.description = description;\n  dashboard.dashboardItems = dashboardItems.map(item => Object.assign({}, item, {\n    width: item.w,\n    height: item.h\n  }));\n  return dashboard.save().then(msg => msg.response.uid);\n};\n\nexport const updateDashboard = data => {\n  return getInstance().then(d2 => {\n    return d2.models.dashboards.get(data.id).then(dashboard => saveDashboard(dashboard, data));\n  }).catch(onError);\n};\nexport const postDashboard = data => {\n  return getInstance().then(d2 => {\n    const dashboard = d2.models.dashboards.create();\n    return saveDashboard(dashboard, data);\n  });\n};","import { generateUid } from 'd2/uid';\nimport i18n from '@dhis2/d2-i18n';\nimport { RECEIVED_EDIT_DASHBOARD, START_NEW_DASHBOARD, RECEIVED_NOT_EDITING, RECEIVED_TITLE, RECEIVED_DESCRIPTION, RECEIVED_DASHBOARD_LAYOUT, ADD_DASHBOARD_ITEM, UPDATE_DASHBOARD_ITEM, REMOVE_DASHBOARD_ITEM, SET_PRINT_PREVIEW_VIEW, CLEAR_PRINT_PREVIEW_VIEW } from '../reducers/editDashboard';\nimport { sGetEditDashboardRoot } from '../reducers/editDashboard';\nimport { updateDashboard, postDashboard } from '../api/editDashboard';\nimport { tSetSelectedDashboardById } from '../actions/selected';\nimport { NEW_ITEM_SHAPE, getGridItemProperties, getPageBreakItemShape, getPrintTitlePageItemShape } from '../components/ItemGrid/gridUtil';\nimport { itemTypeMap, PAGEBREAK, PRINT_TITLE_PAGE } from '../modules/itemTypes';\nimport { convertUiItemsToBackend } from '../modules/uiBackendItemConverter';\n\nconst onError = error => {\n  console.log('Error (Saving Dashboard): ', error);\n  return error;\n}; // actions\n\n\nexport const acSetEditDashboard = (dashboard, items) => {\n  const val = { ...dashboard,\n    dashboardItems: items\n  };\n  return {\n    type: RECEIVED_EDIT_DASHBOARD,\n    value: val\n  };\n};\nexport const acSetEditNewDashboard = () => ({\n  type: START_NEW_DASHBOARD\n});\nexport const acClearEditDashboard = () => ({\n  type: RECEIVED_NOT_EDITING\n});\nexport const acSetPrintPreviewView = () => ({\n  type: SET_PRINT_PREVIEW_VIEW\n});\nexport const acClearPrintPreviewView = () => ({\n  type: CLEAR_PRINT_PREVIEW_VIEW\n});\nexport const acSetDashboardTitle = value => ({\n  type: RECEIVED_TITLE,\n  value\n});\nexport const acSetDashboardDescription = value => ({\n  type: RECEIVED_DESCRIPTION,\n  value\n});\nexport const acUpdateDashboardLayout = value => ({\n  type: RECEIVED_DASHBOARD_LAYOUT,\n  value\n});\nexport const acAddDashboardItem = item => {\n  const type = item.type;\n  delete item.type;\n  const itemPropName = itemTypeMap[type].propName;\n  const id = generateUid();\n  const gridItemProperties = getGridItemProperties(id);\n  let shape;\n\n  if (type === PAGEBREAK) {\n    const yPos = item.yPos || 0;\n    shape = getPageBreakItemShape(yPos, item.isStatic);\n  } else if (type === PRINT_TITLE_PAGE) {\n    shape = getPrintTitlePageItemShape();\n  } else {\n    shape = NEW_ITEM_SHAPE;\n  }\n\n  return {\n    type: ADD_DASHBOARD_ITEM,\n    value: {\n      id,\n      type,\n      position: item.position || null,\n      [itemPropName]: item.content,\n      ...NEW_ITEM_SHAPE,\n      ...gridItemProperties,\n      ...shape\n    }\n  };\n};\nexport const acUpdateDashboardItem = item => ({\n  type: UPDATE_DASHBOARD_ITEM,\n  value: item\n});\nexport const acRemoveDashboardItem = value => ({\n  type: REMOVE_DASHBOARD_ITEM,\n  value\n}); // thunks\n\nexport const tSaveDashboard = () => async (dispatch, getState) => {\n  const dashboard = sGetEditDashboardRoot(getState());\n  const dashboardToSave = { ...dashboard,\n    dashboardItems: convertUiItemsToBackend(dashboard.dashboardItems),\n    name: dashboard.name || i18n.t('Untitled dashboard')\n  };\n\n  try {\n    const dashboardId = dashboardToSave.id ? await updateDashboard(dashboardToSave) : await postDashboard(dashboardToSave);\n    dispatch(acClearEditDashboard());\n    await dispatch(tSetSelectedDashboardById(dashboardId));\n    return Promise.resolve(dashboardId);\n  } catch (error) {\n    onError(error);\n  }\n};","import i18n from '@dhis2/d2-i18n';\nimport { VISUALIZATION, MAP, EVENT_CHART, EVENT_REPORT, USERS, REPORTS, RESOURCES, APP, MESSAGES, TEXT, SPACER } from '../../modules/itemTypes';\nexport const singleItems = [{\n  id: 'additional',\n  header: i18n.t('Additional items'),\n  items: [{\n    type: TEXT,\n    name: i18n.t('Text box'),\n    content: ''\n  }, {\n    type: MESSAGES,\n    name: i18n.t('Messages'),\n    content: 'true'\n  }, {\n    type: SPACER,\n    name: i18n.t('Spacer'),\n    content: ''\n  }]\n}]; // categorizedItems are grouped in the item selector menu\n\nexport const categorizedItems = [VISUALIZATION, MAP, EVENT_REPORT, EVENT_CHART, USERS, REPORTS, RESOURCES, APP]; // listItemTypes are included in a single dashboard item\n\nexport const listItemTypes = [REPORTS, RESOURCES, USERS];","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport i18n from '@dhis2/d2-i18n';\nimport { MenuItem, Divider } from '@dhis2/ui';\nimport HeaderMenuItem from './HeaderMenuItem';\nimport ContentMenuItem from './ContentMenuItem';\nimport { tAddListItemContent } from './actions';\nimport { acAddDashboardItem } from '../../actions/editDashboard';\nimport { getItemUrl, APP, VISUALIZATION } from '../../modules/itemTypes';\nimport { categorizedItems, listItemTypes } from './selectableItems';\nimport classes from './styles/CategorizedMenuGroup.module.css';\n\nclass CategorizedMenuGroup extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      seeMore: false\n    };\n  }\n\n  addItem = item => () => {\n    const {\n      type,\n      acAddDashboardItem,\n      tAddListItemContent\n    } = this.props;\n\n    if (type === APP) {\n      acAddDashboardItem({\n        type,\n        content: item.key\n      });\n    } else {\n      const newItem = {\n        id: item.id,\n        name: item.displayName || item.name\n      };\n\n      if (listItemTypes.includes(type)) {\n        tAddListItemContent(type, newItem);\n      } else {\n        acAddDashboardItem({\n          type,\n          content: newItem\n        });\n      }\n    }\n  };\n  toggleSeeMore = () => {\n    this.setState({\n      seeMore: !this.state.seeMore\n    });\n    this.props.onChangeItemsLimit(this.props.type);\n  };\n\n  render() {\n    const {\n      title,\n      type,\n      items,\n      hasMore\n    } = this.props;\n    return <>\n                <HeaderMenuItem title={title} />\n                {items.map(item => {\n        const itemUrl = getItemUrl(type, item, this.context.d2);\n        return <ContentMenuItem key={item.id || item.key} type={type} visType={type === VISUALIZATION ? item.type : type} name={item.displayName || item.name} onInsert={this.addItem(item)} url={itemUrl} />;\n      })}\n                {hasMore ? <MenuItem dense key={`showmore${title}`} onClick={this.toggleSeeMore} label={<button className={classes.showMoreButton}>\n                                {this.state.seeMore ? i18n.t('Show fewer') : i18n.t('Show more')}\n                            </button>} /> : null}\n                <Divider margin=\"8px 0px\" />\n            </>;\n  }\n\n}\n\nCategorizedMenuGroup.propTypes = {\n  items: PropTypes.array.isRequired,\n  title: PropTypes.string.isRequired,\n  type: PropTypes.oneOf(categorizedItems).isRequired,\n  onChangeItemsLimit: PropTypes.func.isRequired,\n  acAddDashboardItem: PropTypes.func,\n  hasMore: PropTypes.bool,\n  tAddListItemContent: PropTypes.func\n};\nCategorizedMenuGroup.contextTypes = {\n  d2: PropTypes.object.isRequired\n};\nexport default connect(null, {\n  acAddDashboardItem,\n  tAddListItemContent\n})(CategorizedMenuGroup);","import { sGetEditDashboardRoot } from '../../reducers/editDashboard';\nimport { itemTypeMap } from '../../modules/itemTypes';\nimport { acAddDashboardItem, acUpdateDashboardItem } from '../../actions/editDashboard';\nexport const tAddListItemContent = (type, content) => (dispatch, getState) => {\n  const state = getState();\n  const listItemType = itemTypeMap[type].propName;\n  const dashboardItems = sGetEditDashboardRoot(state).dashboardItems;\n  const dashboardItemIndex = dashboardItems.findIndex(item => item.type === type);\n  let dashboardItem; // Reports/Resources/Users dashboard item type already present in dashboard\n\n  if (dashboardItemIndex > -1) {\n    dashboardItem = dashboardItems[dashboardItemIndex];\n    dashboardItem[listItemType].push(content);\n    dispatch(acUpdateDashboardItem(dashboardItem));\n  } else {\n    dashboardItem = {\n      type: type,\n      content: [content]\n    };\n    dispatch(acAddDashboardItem(dashboardItem));\n  }\n};","import React from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport HeaderMenuItem from './HeaderMenuItem';\nimport ContentMenuItem from './ContentMenuItem';\nimport { acAddDashboardItem } from '../../actions/editDashboard';\nexport const SinglesMenuGroup = ({\n  acAddDashboardItem,\n  category\n}) => {\n  const addToDashboard = ({\n    type,\n    content\n  }) => () => {\n    acAddDashboardItem({\n      type,\n      content\n    });\n  };\n\n  return <>\n            <HeaderMenuItem title={category.header} />\n            {category.items.map(item => <ContentMenuItem key={item.type} type={item.type} name={item.name} onInsert={addToDashboard(item)} />)}\n        </>;\n};\nSinglesMenuGroup.propTypes = {\n  acAddDashboardItem: PropTypes.func,\n  category: PropTypes.object\n};\nexport default connect(null, {\n  acAddDashboardItem\n})(SinglesMenuGroup);","import React from 'react';\nimport PropTypes from 'prop-types';\nimport i18n from '@dhis2/d2-i18n';\nimport Popover from '@material-ui/core/Popover';\nimport { InputField, Menu } from '@dhis2/ui';\nimport debounce from 'lodash/debounce';\nimport CategorizedMenuGroup from './CategorizedMenuGroup';\nimport SinglesMenuGroup from './SinglesMenuGroup';\nimport { singleItems, categorizedItems } from './selectableItems';\nimport { itemTypeMap, getDefaultItemCount } from '../../modules/itemTypes';\nimport './styles/ItemSelector.css';\n\nconst ItemSearchField = props => <InputField name=\"Dashboard item search\" label={i18n.t('Search for items to add to this dashboard')} type=\"text\" onChange={props.onChange} onFocus={props.onFocus} value={props.value} />;\n\nclass ItemSelector extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      anchorEl: null,\n      open: false,\n      maxOptions: new Set(),\n      items: undefined,\n      filter: '',\n      debouncedFilter: ''\n    };\n  }\n\n  closeList = () => {\n    this.setState({\n      open: false,\n      filter: ''\n    });\n  };\n  openList = (_, event) => {\n    this.fetchItems();\n    this.setState({\n      anchorEl: event.currentTarget,\n      open: true\n    });\n  };\n  updateDebouncedFilterText = debounce(() => {\n    this.setState({\n      debouncedFilter: this.state.filter\n    }, this.fetchItems);\n  }, 350);\n  setFilter = (_, event) => {\n    this.setState({\n      filter: event.target.value\n    }, this.updateDebouncedFilterText);\n  };\n  getCategorizedMenuGroups = () => categorizedItems.filter(type => {\n    const itemType = itemTypeMap[type];\n    return this.state.items && this.state.items[itemType.endPointName];\n  }).map(type => {\n    const itemType = itemTypeMap[type];\n    const itemCount = getDefaultItemCount(type);\n    const allItems = this.state.items[itemType.endPointName];\n    const hasMore = allItems.length > itemCount;\n    const items = this.state.maxOptions.has(itemType.id) ? allItems : allItems.slice(0, itemCount);\n    return <CategorizedMenuGroup key={type} type={type} title={itemType.pluralTitle} items={items} onChangeItemsLimit={this.fetchItems} hasMore={hasMore} />;\n  });\n  getSinglesMenuGroups = () => singleItems.map(category => <SinglesMenuGroup key={category.id} category={category} />);\n  getMenuGroups = () => this.getCategorizedMenuGroups().concat(this.getSinglesMenuGroups());\n  fetchItems = async type => {\n    if (type) {\n      const maxOptions = this.state.maxOptions;\n\n      if (maxOptions.has(type)) {\n        maxOptions.delete(type);\n      } else {\n        maxOptions.add(type);\n      }\n\n      this.setState({\n        maxOptions\n      });\n    } else {\n      this.setState({\n        maxOptions: new Set()\n      });\n    }\n\n    let queryString = '?count=11';\n\n    if ([...this.state.maxOptions.values()].length) {\n      queryString += '&max=' + [...this.state.maxOptions.values()].join('&max=');\n    }\n\n    const filter = this.state.debouncedFilter ? `/${this.state.debouncedFilter}` : '';\n    this.context.d2.Api.getApi().get(`dashboards/q${filter}${queryString}`).then(response => this.setState({\n      items: response\n    })).catch(console.error);\n  };\n\n  render() {\n    return <>\n                <ItemSearchField value={this.state.filter} onChange={this.setFilter} onFocus={this.openList} />\n                <Popover className=\"dashboard-item-selector\" open={this.state.open} onClose={this.closeList} anchorEl={this.state.anchorEl} anchorOrigin={{\n        horizontal: 'left',\n        vertical: 'bottom'\n      }} transformOrigin={{\n        horizontal: 'left',\n        vertical: 'top'\n      }} style={{\n        height: '70vh'\n      }} PaperProps={{\n        style: {\n          width: '700px'\n        }\n      }} disableAutoFocus={true} disableEnforceFocus={true} disableRestoreFocus={true}>\n                    <Menu maxWidth={'700px'}>{this.getMenuGroups()}</Menu>\n                </Popover>\n            </>;\n  }\n\n}\n\nItemSearchField.propTypes = {\n  value: PropTypes.string,\n  onChange: PropTypes.func,\n  onFocus: PropTypes.func\n};\nItemSelector.contextTypes = {\n  d2: PropTypes.object.isRequired\n};\nexport default ItemSelector;","import React from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport i18n from '@dhis2/d2-i18n';\nimport { InputField, TextAreaField } from '@dhis2/ui';\nimport ItemSelector from '../ItemSelector/ItemSelector';\nimport { acSetDashboardTitle, acSetDashboardDescription } from '../../actions/editDashboard';\nimport { orObject } from '../../modules/util';\nimport { sGetEditDashboardRoot } from '../../reducers/editDashboard';\nimport classes from './styles/EditTitleBar.module.css';\nexport const EditTitleBar = ({\n  name,\n  description,\n  onChangeTitle,\n  onChangeDescription\n}) => {\n  const updateTitle = (_, e) => {\n    onChangeTitle(e.target.value);\n  };\n\n  const updateDescription = (_, e) => {\n    onChangeDescription(e.target.value);\n  };\n\n  return <section className={classes.section}>\n            <div className={classes.titleDescription}>\n                <InputField className={classes.title} name=\"Dashboard title input\" label={i18n.t('Dashboard title')} type=\"text\" onChange={updateTitle} value={name} placeholder={i18n.t('Untitled dashboard')} />\n                <TextAreaField className={classes.description} name=\"Dashboard description input\" label={i18n.t('Dashboard description')} onChange={updateDescription} value={description} />\n            </div>\n            <div className={classes.itemSelector}>\n                <ItemSelector />\n            </div>\n        </section>;\n};\nEditTitleBar.propTypes = {\n  onChangeDescription: PropTypes.func.isRequired,\n  onChangeTitle: PropTypes.func.isRequired,\n  description: PropTypes.string,\n  name: PropTypes.string\n};\nEditTitleBar.defaultProps = {\n  name: '',\n  description: ''\n};\n\nconst mapStateToProps = state => {\n  const selectedDashboard = orObject(sGetEditDashboardRoot(state));\n  return {\n    name: selectedDashboard.name,\n    description: selectedDashboard.description\n  };\n};\n\nconst mapDispatchToProps = {\n  onChangeTitle: acSetDashboardTitle,\n  onChangeDescription: acSetDashboardDescription\n};\nexport default connect(mapStateToProps, mapDispatchToProps)(EditTitleBar);","import React from 'react';\nimport { colors } from '@dhis2/ui';\nexport const ThreeDots = () => <svg height=\"18\" viewBox=\"0 0 18 18\" width=\"18\" xmlns=\"http://www.w3.org/2000/svg\">\n        <path d=\"m4 7.5c-.83 0-1.5.67-1.5 1.5s.67 1.5 1.5 1.5 1.5-.67 1.5-1.5-.67-1.5-1.5-1.5zm10 0c-.83 0-1.5.67-1.5 1.5s.67 1.5 1.5 1.5 1.5-.67 1.5-1.5-.67-1.5-1.5-1.5zm-5 0c-.83 0-1.5.67-1.5 1.5s.67 1.5 1.5 1.5 1.5-.67 1.5-1.5-.67-1.5-1.5-1.5z\" fill=\"#6e7a8a\" />\n    </svg>;\nexport const SpeechBubble = () => <svg height=\"20\" viewBox=\"0 0 20 20\" width=\"20\" xmlns=\"http://www.w3.org/2000/svg\" style={{\n  margin: '3px 2px 0 2px'\n}} // Temporary fix for the misaligned icon, should be removed once the icon is replaced\n>\n        <path d=\"m20 2h-16c-1.1 0-1.99.9-1.99 2l-.01 18 4-4h14c1.1 0 2-.9 2-2v-12c0-1.1-.9-2-2-2zm-2 12h-12v-2h12zm0-3h-12v-2h12zm0-3h-12v-2h12z\" fill=\"#6e7a8a\" fillRule=\"evenodd\" transform=\"translate(-2 -2)\" />\n    </svg>;\nexport const Warning = () => <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24\" viewBox=\"0 0 24 24\" width=\"24\" fill={colors.grey600}>\n        <path d=\"M0 0h24v24H0z\" fill=\"none\" />\n        <path d=\"M1 21h22L12 2 1 21zm12-3h-2v-2h2v2zm0-4h-2v-4h2v4z\" />\n    </svg>;","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport i18n from '@dhis2/d2-i18n';\nimport { Button, Modal, ModalTitle, ModalContent, ModalActions, ButtonStrip } from '@dhis2/ui';\nimport { PeriodDimension, DynamicDimension, OrgUnitDimension, DIMENSION_ID_PERIOD, DIMENSION_ID_ORGUNIT } from '@dhis2/analytics';\nimport { acAddItemFilter, acRemoveItemFilter } from '../../actions/itemFilters';\nimport { sGetItemFiltersRoot } from '../../reducers/itemFilters';\n\nconst FilterDialog = ({\n  displayNameProperty,\n  dimension,\n  initiallySelectedItems,\n  addItemFilter,\n  removeItemFilter,\n  onClose\n}, context) => {\n  const [filters, setFilters] = useState(initiallySelectedItems);\n\n  const onSelectItems = ({\n    dimensionId,\n    items\n  }) => {\n    setFilters({\n      [dimensionId]: items\n    });\n  };\n\n  const onDeselectItems = ({\n    dimensionId,\n    itemIdsToRemove\n  }) => {\n    const oldList = filters[dimensionId] || [];\n    const newList = oldList.filter(item => !itemIdsToRemove.includes(item.id));\n    setFilters({ ...filters,\n      [dimensionId]: newList\n    });\n  };\n\n  const onReorderItems = ({\n    dimensionId,\n    itemIds\n  }) => {\n    const oldList = filters[dimensionId] || [];\n    const reorderedList = itemIds.map(id => oldList.find(item => item.id === id));\n    setFilters({ ...filters,\n      [dimensionId]: reorderedList\n    });\n  };\n\n  const saveFilter = () => {\n    const id = dimension.id;\n    const filterItems = filters[id];\n\n    if (filterItems && filterItems.length) {\n      addItemFilter({\n        id,\n        value: [...filterItems]\n      });\n    } else {\n      removeItemFilter(id);\n    }\n\n    onClose(id);\n  };\n\n  const renderDialogContent = () => {\n    const commonProps = {\n      d2: context.d2,\n      onSelect: onSelectItems,\n      onDeselect: onDeselectItems,\n      onReorder: onReorderItems\n    };\n    const selectedItems = filters[dimension.id] || [];\n\n    switch (dimension.id) {\n      case DIMENSION_ID_PERIOD:\n        {\n          return <PeriodDimension selectedPeriods={selectedItems} onSelect={commonProps.onSelect} />;\n        }\n\n      case DIMENSION_ID_ORGUNIT:\n        return <OrgUnitDimension displayNameProperty={displayNameProperty} ouItems={selectedItems} {...commonProps} />;\n\n      default:\n        return <DynamicDimension selectedItems={selectedItems} dimensionId={dimension.id} onSelect={commonProps.onSelect} context={commonProps.d2} />;\n    }\n  };\n\n  return <>\n            {dimension.id && <Modal onClose={onClose} position=\"top\" large>\n                    <ModalTitle>{dimension.name}</ModalTitle>\n                    <ModalContent>{renderDialogContent()}</ModalContent>\n                    <ModalActions>\n                        <ButtonStrip>\n                            <Button secondary onClick={onClose}>\n                                {i18n.t('Cancel')}\n                            </Button>\n                            <Button primary onClick={saveFilter}>\n                                {i18n.t('Confirm')}\n                            </Button>\n                        </ButtonStrip>\n                    </ModalActions>\n                </Modal>}\n        </>;\n};\n\nFilterDialog.propTypes = {\n  addItemFilter: PropTypes.func,\n  dimension: PropTypes.object,\n  displayNameProperty: PropTypes.string,\n  initiallySelectedItems: PropTypes.object,\n  removeItemFilter: PropTypes.func,\n  onClose: PropTypes.func\n};\nFilterDialog.contextTypes = {\n  d2: PropTypes.object\n};\n\nconst mapStateToProps = state => ({\n  initiallySelectedItems: sGetItemFiltersRoot(state)\n});\n\nexport default connect(mapStateToProps, {\n  addItemFilter: acAddItemFilter,\n  removeItemFilter: acRemoveItemFilter\n})(FilterDialog);","export const SET_ACTIVE_MODAL_DIMENSION = 'SET_ACTIVE_MODAL_DIMENSION';\nexport const CLEAR_ACTIVE_MODAL_DIMENSION = 'CLEAR_ACTIVE_MODAL_DIMENSION';\nexport const DEFAULT_STATE_ACTIVE_MODAL_DIMENSION = {};\nexport default ((state = DEFAULT_STATE_ACTIVE_MODAL_DIMENSION, action) => {\n  switch (action.type) {\n    case SET_ACTIVE_MODAL_DIMENSION:\n      {\n        return action.value;\n      }\n\n    case CLEAR_ACTIVE_MODAL_DIMENSION:\n      {\n        return DEFAULT_STATE_ACTIVE_MODAL_DIMENSION;\n      }\n\n    default:\n      return state;\n  }\n});\nexport const sGetActiveModalDimension = state => state.activeModalDimension;","import { SET_ACTIVE_MODAL_DIMENSION, CLEAR_ACTIVE_MODAL_DIMENSION } from '../reducers/activeModalDimension';\nexport const acSetActiveModalDimension = value => ({\n  type: SET_ACTIVE_MODAL_DIMENSION,\n  value\n});\nexport const acClearActiveModalDimension = () => ({\n  type: CLEAR_ACTIVE_MODAL_DIMENSION\n});","import React, { useState, useRef } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport ArrowDropDownIcon from '@material-ui/icons/ArrowDropDown';\nimport isEmpty from 'lodash/isEmpty';\nimport i18n from '@dhis2/d2-i18n';\nimport { DimensionsPanel } from '@dhis2/analytics';\nimport { Button, Popover } from '@dhis2/ui';\nimport FilterDialog from './FilterDialog';\nimport { sGetSettingsDisplayNameProperty } from '../../reducers/settings';\nimport { sGetActiveModalDimension } from '../../reducers/activeModalDimension';\nimport { sGetDimensions } from '../../reducers/dimensions';\nimport { sGetItemFiltersRoot } from '../../reducers/itemFilters';\nimport { acClearActiveModalDimension, acSetActiveModalDimension } from '../../actions/activeModalDimension';\n\nconst FilterSelector = props => {\n  const [showPopover, setShowPopover] = useState(false);\n  const ref = useRef(null);\n\n  const onCloseDialog = () => {\n    setShowPopover(false);\n    props.clearActiveModalDimension();\n  };\n\n  const selectDimension = id => {\n    props.setActiveModalDimension(props.dimensions.find(dimension => dimension.id === id));\n  };\n\n  return <>\n            <span ref={ref}>\n                <Button onClick={() => setShowPopover(true)}>\n                    {i18n.t('Add filter')}\n                    <ArrowDropDownIcon />\n                </Button>\n            </span>\n            {showPopover && <Popover onClickOutside={onCloseDialog} reference={ref} arrow={true} placement=\"bottom-start\">\n                    <DimensionsPanel style={{\n        width: '320px'\n      }} dimensions={props.dimensions} onDimensionClick={selectDimension} selectedIds={Object.keys(props.initiallySelectedItems)} />\n                </Popover>}\n            {!isEmpty(props.dimension) ? <FilterDialog displayNameProperty={props.displayNameProperty} dimension={props.dimension} onClose={onCloseDialog} /> : null}\n        </>;\n};\n\nconst mapStateToProps = state => ({\n  displayNameProperty: sGetSettingsDisplayNameProperty(state),\n  dimension: sGetActiveModalDimension(state),\n  dimensions: sGetDimensions(state),\n  initiallySelectedItems: sGetItemFiltersRoot(state)\n});\n\nFilterSelector.propTypes = {\n  clearActiveModalDimension: PropTypes.func,\n  dimension: PropTypes.object,\n  dimensions: PropTypes.array,\n  displayNameProperty: PropTypes.string,\n  initiallySelectedItems: PropTypes.object,\n  setActiveModalDimension: PropTypes.func\n};\nexport default connect(mapStateToProps, {\n  clearActiveModalDimension: acClearActiveModalDimension,\n  setActiveModalDimension: acSetActiveModalDimension\n})(FilterSelector);","import React, { useState, createRef } from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { Link } from 'react-router-dom';\nimport i18n from '@dhis2/d2-i18n';\nimport { Redirect } from 'react-router-dom';\nimport SharingDialog from '@dhis2/d2-ui-sharing-dialog';\nimport Star from '@material-ui/icons/Star';\nimport StarBorder from '@material-ui/icons/StarBorder';\nimport { Button, FlyoutMenu, Popover, MenuItem, colors } from '@dhis2/ui';\nimport { ThreeDots } from '../Item/VisualizationItem/assets/icons';\nimport { orObject } from '../../modules/util';\nimport { tStarDashboard } from '../../actions/dashboards';\nimport { tUpdateShowDescription } from '../../actions/selected';\nimport FilterSelector from '../ItemFilter/FilterSelector';\nimport { sGetSelectedId, sGetSelectedShowDescription } from '../../reducers/selected';\nimport { sGetDashboardById, sGetDashboardItems, EMPTY_DASHBOARD } from '../../reducers/dashboards';\nimport classes from './styles/ViewTitleBar.module.css';\n\nconst ViewTitleBar = (props, context) => {\n  const [moreOptionsIsOpen, setMoreOptionsIsOpen] = useState(false);\n  const [sharingDialogIsOpen, setSharingDialogIsOpen] = useState(false);\n  const [redirectUrl, setRedirectUrl] = useState(null);\n  const {\n    id,\n    name,\n    description,\n    access,\n    style,\n    showDescription,\n    starred,\n    onToggleStarredDashboard,\n    onShowHideDescription\n  } = props;\n\n  const toggleSharingDialog = () => setSharingDialogIsOpen(!sharingDialogIsOpen);\n\n  const toggleMoreOptions = () => setMoreOptionsIsOpen(!moreOptionsIsOpen);\n\n  const printLayout = () => setRedirectUrl(`${id}/printlayout`);\n\n  const printOipp = () => setRedirectUrl(`${id}/printoipp`);\n\n  const titleStyle = Object.assign({}, style.title, {\n    cursor: 'default',\n    userSelect: 'text',\n    top: '7px'\n  });\n  const StarIcon = starred ? Star : StarBorder;\n\n  if (redirectUrl) {\n    return <Redirect to={redirectUrl} />;\n  }\n\n  const showHideDescriptionLabel = showDescription ? i18n.t('Hide description') : i18n.t('Show description');\n\n  const showHideDescription = () => {\n    onShowHideDescription();\n    toggleMoreOptions();\n  };\n\n  const toggleStarredDashboardLabel = starred ? i18n.t('Unstar dashboard') : i18n.t('Star dashboard');\n\n  const toggleStarredDashboard = () => {\n    onToggleStarredDashboard();\n    toggleMoreOptions();\n  };\n\n  const buttonRef = createRef();\n  const userAccess = orObject(access);\n  return <>\n            <div className={classes.titleBar}>\n                <span style={titleStyle}>{name}</span>\n                <div className={classes.actions}>\n                    <div className={classes.titleBarIcon} onClick={onToggleStarredDashboard}>\n                        <StarIcon style={{\n            fill: colors.grey600\n          }} />\n                    </div>\n                    <div className={classes.strip}>\n                        {userAccess.update ? <Link className={classes.editLink} to={`/${id}/edit`}>\n                                <Button>{i18n.t('Edit')}</Button>\n                            </Link> : null}\n                        {userAccess.manage ? <Button onClick={toggleSharingDialog}>\n                                {i18n.t('Share')}\n                            </Button> : null}\n                        <FilterSelector />\n                        <span ref={buttonRef}>\n                            <Button onClick={toggleMoreOptions}>\n                                <ThreeDots />\n                                <span style={{\n                marginLeft: '5px'\n              }}>\n                                    {i18n.t('More')}\n                                </span>\n                            </Button>\n                        </span>\n                    </div>\n                    {moreOptionsIsOpen && <Popover reference={buttonRef} placement=\"bottom-start\" onClickOutside={toggleMoreOptions}>\n                            <FlyoutMenu>\n                                <MenuItem dense label={toggleStarredDashboardLabel} onClick={toggleStarredDashboard} />\n                                <MenuItem dense label={showHideDescriptionLabel} onClick={showHideDescription} />\n                                <MenuItem dense label={i18n.t('Print')}>\n                                    <MenuItem dense label={i18n.t('Dashboard layout')} onClick={printLayout} />\n                                    <MenuItem dense label={i18n.t('One item per page')} onClick={printOipp} />\n                                </MenuItem>\n                            </FlyoutMenu>\n                        </Popover>}\n                </div>\n            </div>\n            {showDescription ? <div className=\"dashboard-description\" style={Object.assign({\n      paddingTop: '5px',\n      paddingBottom: '5px'\n    }, style.description, !description ? {\n      color: '#888'\n    } : {})}>\n                    {description || i18n.t('No description')}\n                </div> : null}\n            {id ? <SharingDialog d2={context.d2} id={id} type=\"dashboard\" open={sharingDialogIsOpen} onRequestClose={toggleSharingDialog} /> : null}\n        </>;\n};\n\nViewTitleBar.propTypes = {\n  access: PropTypes.object,\n  description: PropTypes.string,\n  id: PropTypes.string,\n  name: PropTypes.string,\n  showDescription: PropTypes.bool,\n  starred: PropTypes.bool,\n  style: PropTypes.object,\n  onShowHideDescription: PropTypes.func,\n  onToggleStarredDashboard: PropTypes.func\n};\nViewTitleBar.defaultProps = {\n  name: '',\n  description: '',\n  starred: false,\n  showDescription: false\n};\nViewTitleBar.contextTypes = {\n  d2: PropTypes.object\n};\n\nconst mapStateToProps = state => {\n  const id = sGetSelectedId(state);\n  const dashboard = sGetDashboardById(state, id) || EMPTY_DASHBOARD;\n  return {\n    id,\n    name: dashboard.displayName,\n    description: dashboard.displayDescription,\n    dashboardItems: sGetDashboardItems(state),\n    showDescription: sGetSelectedShowDescription(state),\n    starred: dashboard.starred,\n    access: dashboard.access\n  };\n};\n\nconst mergeProps = (stateProps, dispatchProps, ownProps) => {\n  const {\n    id,\n    starred,\n    showDescription\n  } = stateProps;\n  const {\n    dispatch\n  } = dispatchProps;\n  return { ...stateProps,\n    ...ownProps,\n    onToggleStarredDashboard: () => dispatch(tStarDashboard(id, !starred)),\n    onShowHideDescription: () => dispatch(tUpdateShowDescription(!showDescription))\n  };\n};\n\nexport default connect(mapStateToProps, null, mergeProps)(ViewTitleBar);","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { colors } from '@dhis2/ui';\nimport EditTitleBar from './EditTitleBar';\nimport ViewTitleBar from './ViewTitleBar';\nimport './TitleBar.css';\nconst style = {\n  title: {\n    position: 'relative',\n    fontSize: 21,\n    fontWeight: 500,\n    color: colors.black,\n    minWidth: 50\n  },\n  description: {\n    fontSize: 14,\n    color: colors.grey800\n  }\n};\n\nconst TitleBar = ({\n  edit\n}) => {\n  return <div className=\"titlebar-wrapper\" style={{\n    padding: '13px 15px 5px 10px'\n  }}>\n            {edit ? <EditTitleBar style={style} /> : <ViewTitleBar style={style} />}\n        </div>;\n};\n\nTitleBar.propTypes = {\n  edit: PropTypes.bool\n};\nexport default TitleBar;","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport i18n from '@dhis2/d2-i18n';\nimport * as pluginManager from './plugin';\nimport { getBaseUrl, orObject } from '../../../modules/util';\nimport { getGridItemDomId } from '../../ItemGrid/gridUtil';\n\nconst pluginCredentials = d2 => {\n  return {\n    baseUrl: getBaseUrl(d2),\n    auth: d2.Api.getApi().defaultHeaders.Authorization\n  };\n};\n\nclass DefaultPlugin extends Component {\n  pluginCredentials = null;\n\n  constructor(props, context) {\n    super(props);\n    this.d2 = context.d2;\n  }\n\n  shouldPluginReload = prevProps => {\n    // TODO - fix this hack, to handle bug with multiple\n    // rerendering while switching between dashboards.\n    //\n    // To determine if the rendering is happening because of a\n    // dashboard switch, check if the item reference has changed.\n    const reloadAllowed = this.props.item === prevProps.item;\n    const filtersChanged = prevProps.itemFilters !== this.props.itemFilters;\n    const vis = orObject(this.props.visualization);\n    const prevVis = orObject(prevProps.visualization);\n    const visChanged = vis.id !== prevVis.id || vis.activeType !== prevVis.activeType;\n    return reloadAllowed && (visChanged || filtersChanged);\n  };\n  reloadPlugin = prevProps => {\n    if (pluginManager.pluginIsAvailable(this.props.item, this.props.visualization) && this.shouldPluginReload(prevProps)) {\n      const prevVis = orObject(prevProps.visualization);\n      const currentVis = this.props.visualization;\n      const useActiveType = currentVis.activeType !== prevVis.activeType || currentVis.activeType !== this.props.item.type;\n\n      if (useActiveType || this.props.itemFilters !== prevProps.itemFilters) {\n        pluginManager.unmount(this.props.item, prevVis.activeType || this.props.item.type);\n        pluginManager.load(this.props.item, this.props.visualization, {\n          credentials: this.pluginCredentials,\n          activeType: useActiveType ? currentVis.activeType : null\n        });\n      }\n    }\n  };\n\n  componentDidMount() {\n    this.pluginCredentials = pluginCredentials(this.d2);\n\n    if (pluginManager.pluginIsAvailable(this.props.item, this.props.visualization)) {\n      pluginManager.load(this.props.item, this.props.visualization, {\n        credentials: this.pluginCredentials,\n        activeType: this.props.useActiveType ? this.getActiveType() : null,\n        options: this.props.options\n      });\n    }\n  }\n\n  componentDidUpdate(prevProps) {\n    this.reloadPlugin(prevProps);\n  }\n\n  componentWillUnmount() {\n    if (pluginManager.pluginIsAvailable(this.props.item, this.props.visualization)) {\n      pluginManager.unmount(this.props.item, this.getActiveType());\n    }\n  }\n\n  getActiveType = () => this.props.visualization.activeType || this.props.item.type;\n\n  render() {\n    const {\n      classes,\n      item,\n      visualization,\n      style\n    } = this.props;\n    const pluginIsAvailable = pluginManager.pluginIsAvailable(item, visualization);\n    return pluginIsAvailable ? <div id={getGridItemDomId(item.id)} style={style} /> : <div className={classes.textDiv}>\n                {i18n.t('Unable to load the plugin for this item')}\n            </div>;\n  }\n\n}\n\nDefaultPlugin.contextTypes = {\n  d2: PropTypes.object\n};\nDefaultPlugin.propTypes = {\n  classes: PropTypes.object,\n  item: PropTypes.object,\n  itemFilters: PropTypes.object,\n  options: PropTypes.object,\n  style: PropTypes.object,\n  useActiveType: PropTypes.bool,\n  visualization: PropTypes.object\n};\nDefaultPlugin.defaultProps = {\n  style: {},\n  item: {},\n  itemFilters: {},\n  options: {},\n  visualization: {}\n};\nexport default DefaultPlugin;","import React from 'react';\nimport PropTypes from 'prop-types';\nimport i18n from '@dhis2/d2-i18n';\nimport { Warning } from './assets/icons';\nimport classes from './styles/FatalErrorBoundary.module.css';\n\nclass FatalErrorBoundary extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      errorFound: false\n    };\n  }\n\n  componentDidCatch(error, info) {\n    this.setState({\n      errorFound: true\n    });\n    console.log('error: ', error);\n    console.log('info: ', info);\n  }\n\n  render() {\n    if (this.state.errorFound) {\n      return <p className={classes.container}>\n                    <span className={classes.icon}>\n                        <Warning />\n                    </span>\n                    <span className={classes.message}>\n                        {i18n.t('There was a problem loading this dashboard item')}\n                    </span>\n                </p>;\n    }\n\n    return this.props.children;\n  }\n\n}\n\nFatalErrorBoundary.propTypes = {\n  children: PropTypes.node\n};\nexport default FatalErrorBoundary;","import React from 'react';\nimport PropTypes from 'prop-types';\nimport classes from './styles/ItemHeader.module.css';\n\nconst ViewItemActions = ({\n  actionButtons\n}) => {\n  return actionButtons ? <div className={classes.itemActionsWrap}>{actionButtons}</div> : null;\n};\n\nViewItemActions.propTypes = {\n  actionButtons: PropTypes.node\n};\nexport default ViewItemActions;","import React from 'react';\nimport PropTypes from 'prop-types';\nimport i18n from '@dhis2/d2-i18n';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport { colors } from '@dhis2/ui';\nimport classes from './styles/DeleteItemButton.module.css';\n\nconst DeleteItemButton = ({\n  onClick\n}) => <button type=\"button\" className={classes.deleteItemButton} onClick={onClick} title={i18n.t(`Delete item`)}>\n        <DeleteIcon style={{\n    fill: colors.red500\n  }} />\n    </button>;\n\nDeleteItemButton.propTypes = {\n  onClick: PropTypes.func\n};\nexport default DeleteItemButton;","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport DeleteItemButton from './DeleteItemButton';\nimport { acRemoveDashboardItem } from '../../../actions/editDashboard';\nimport classes from './styles/ItemHeader.module.css';\n\nconst EditItemActions = ({\n  itemId,\n  acRemoveDashboardItem\n}) => {\n  const handleDeleteItem = () => acRemoveDashboardItem(itemId);\n\n  return <div className={classes.itemActionsWrap}>\n            <DeleteItemButton onClick={handleDeleteItem} />\n        </div>;\n};\n\nEditItemActions.propTypes = {\n  acRemoveDashboardItem: PropTypes.func,\n  itemId: PropTypes.string\n};\nconst mapDispatchToProps = {\n  acRemoveDashboardItem\n};\nexport default connect(null, mapDispatchToProps)(EditItemActions);","import React from 'react';\nimport { colors } from '@dhis2/ui';\n\nconst WarningIcon = () => <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24\" viewBox=\"0 0 24 24\" width=\"24\" fill={colors.grey600}>\n        <path d=\"M0 0h24v24H0z\" fill=\"none\" />\n        <path d=\"M12 2C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2zm1 15h-2v-6h2v6zm0-8h-2V7h2v2z\" />\n    </svg>;\n\nexport default WarningIcon;","import React from 'react';\nimport { Tooltip } from '@dhis2/ui';\nimport i18n from '@dhis2/d2-i18n';\nimport InfoIcon from '../../../icons/Info';\nimport classes from './styles/PrintItemInfo.module.css';\n\nconst PrintWarning = () => <div className={classes.warning}>\n        <Tooltip content={i18n.t('This item has been shortened to fit on one page')} placement=\"bottom\">\n            <InfoIcon />\n        </Tooltip>\n    </div>;\n\nexport default PrintWarning;","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport ViewItemActions from './ViewItemActions';\nimport EditItemActions from './EditItemActions';\nimport PrintItemInfo from './PrintItemInfo';\nimport { VIEW, EDIT, PRINT_LAYOUT } from '../../Dashboard/dashboardModes';\nimport classes from './styles/ItemHeader.module.css';\n\nconst getItemActionsMap = isShortened => {\n  return {\n    [VIEW]: ViewItemActions,\n    [EDIT]: EditItemActions,\n    [PRINT_LAYOUT]: isShortened ? PrintItemInfo : null\n  };\n}; // This is the margin-top + margin-bottom defined in the css file\n\n\nexport const HEADER_MARGIN_HEIGHT = 12;\nconst ItemHeader = React.forwardRef(({\n  dashboardMode,\n  title,\n  isShortened,\n  ...rest\n}, ref) => {\n  const Actions = getItemActionsMap(isShortened)[dashboardMode];\n  return <div className={classes.itemHeaderWrap} ref={ref}>\n                <p className={classes.itemTitle}>{title}</p>\n                {Actions ? <Actions {...rest} /> : null}\n            </div>;\n});\nItemHeader.displayName = 'ItemHeader';\nItemHeader.propTypes = {\n  dashboardMode: PropTypes.string,\n  isShortened: PropTypes.bool,\n  title: PropTypes.string\n};\nexport default connect(null, null, null, {\n  forwardRef: true\n})(ItemHeader);","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { isSingleValue, isYearOverYear, VIS_TYPE_GAUGE, VIS_TYPE_PIE } from '@dhis2/analytics';\nimport { Button, Menu, MenuItem, Divider, colors } from '@dhis2/ui';\nimport i18n from '@dhis2/d2-i18n';\nimport Popover from '@material-ui/core/Popover';\nimport TableIcon from '@material-ui/icons/ViewList';\nimport ChartIcon from '@material-ui/icons/InsertChart';\nimport MapIcon from '@material-ui/icons/Public';\nimport LaunchIcon from '@material-ui/icons/Launch';\nimport { ThreeDots, SpeechBubble } from './assets/icons';\nimport { pluginIsAvailable, getLink } from './plugin';\nimport { CHART, MAP, REPORT_TABLE, EVENT_CHART, EVENT_REPORT, isTrackerDomainType, hasMapView, getAppName } from '../../../modules/itemTypes';\nconst iconFill = {\n  fill: colors.grey600\n};\n\nconst ItemHeaderButtons = props => {\n  const [anchorEl, setAnchorEl] = useState(null);\n  const {\n    item,\n    visualization,\n    onSelectActiveType,\n    d2,\n    activeType\n  } = props;\n  const isTrackerType = isTrackerDomainType(item.type);\n\n  const onViewTable = () => {\n    handleClose();\n    onSelectActiveType(isTrackerType ? EVENT_REPORT : REPORT_TABLE);\n  };\n\n  const onViewChart = () => {\n    handleClose();\n    onSelectActiveType(isTrackerType ? EVENT_CHART : CHART);\n  };\n\n  const onViewMap = () => {\n    handleClose();\n    onSelectActiveType(MAP);\n  };\n\n  const itemHasMapView = () => hasMapView(item.type);\n\n  const handleMenuClick = (_, event) => setAnchorEl(event.currentTarget);\n\n  const handleInterpretationClick = () => {\n    props.onToggleFooter();\n\n    if (anchorEl !== null) {\n      handleClose();\n    }\n  };\n\n  const handleClose = () => setAnchorEl(null);\n\n  const type = visualization.type || item.type;\n  const canViewAs = !isSingleValue(type) && !isYearOverYear(type) && type !== VIS_TYPE_GAUGE && type !== VIS_TYPE_PIE;\n  const interpretationMenuLabel = props.activeFooter ? i18n.t(`Hide interpretations and details`) : i18n.t(`Show interpretations and details`);\n\n  const ViewAsMenuItems = () => <>\n            {activeType !== CHART && activeType !== EVENT_CHART && <MenuItem dense label={i18n.t('View as Chart')} onClick={onViewChart} icon={<ChartIcon style={iconFill} />} />}\n            {activeType !== REPORT_TABLE && activeType !== EVENT_REPORT && <MenuItem dense label={i18n.t('View as Table')} onClick={onViewTable} icon={<TableIcon style={iconFill} />} />}\n            {itemHasMapView() && activeType !== MAP && <MenuItem dense label={i18n.t('View as Map')} onClick={onViewMap} icon={<MapIcon style={iconFill} />} />}\n        </>;\n\n  return pluginIsAvailable(item, visualization) ? <>\n            <Button small secondary onClick={handleMenuClick}>\n                <ThreeDots />\n            </Button>\n            {anchorEl && <Popover open={Boolean(anchorEl)} onClose={handleClose} anchorEl={anchorEl}>\n                    <Menu>\n                        {canViewAs && <>\n                                <ViewAsMenuItems />\n                                <Divider />\n                            </>}\n                        <MenuItem dense icon={<LaunchIcon style={{\n          fill: '#6e7a8a'\n        }} />} label={i18n.t('Open in {{appName}} app', {\n          appName: getAppName(item.type)\n        })} href={getLink(item, d2)} target=\"_blank\" />\n                        <MenuItem dense icon={<SpeechBubble />} label={interpretationMenuLabel} onClick={handleInterpretationClick} />\n                    </Menu>\n                </Popover>}\n        </> : null;\n};\n\nItemHeaderButtons.propTypes = {\n  activeFooter: PropTypes.bool,\n  activeType: PropTypes.string,\n  d2: PropTypes.object,\n  item: PropTypes.object,\n  visualization: PropTypes.object,\n  onSelectActiveType: PropTypes.func,\n  onToggleFooter: PropTypes.func\n};\nexport default ItemHeaderButtons;","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { colors } from '@dhis2/ui';\nimport { getId } from './plugin';\nimport InterpretationsComponent from '@dhis2/d2-ui-interpretations';\nconst style = {\n  scrollContainer: {\n    overflowY: 'auto',\n    height: '340px'\n  },\n  line: {\n    margin: '-1px 0px 0px',\n    height: '1px',\n    border: 'none',\n    backgroundColor: colors.grey100\n  }\n};\n\nclass ItemFooter extends Component {\n  render() {\n    const objectId = getId(this.props.item);\n    return <div className=\"dashboard-item-footer\">\n                <hr style={style.line} />\n                <div style={style.scrollContainer}>\n                    <InterpretationsComponent d2={this.context.d2} item={this.props.item} type={this.props.item.type.toLowerCase()} id={objectId} appName=\"dashboard\" />\n                </div>\n            </div>;\n  }\n\n}\n\nItemFooter.contextTypes = {\n  d2: PropTypes.object.isRequired\n};\nItemFooter.propTypes = {\n  item: PropTypes.object.isRequired\n};\nexport default ItemFooter;","import React from 'react';\nimport { CircularLoader } from '@dhis2/ui';\nimport classes from './styles/LoadingMask.module.css';\n\nconst LoadingMask = () => {\n  return <div className={classes.center}>\n            <CircularLoader />\n        </div>;\n};\n\nexport default LoadingMask;","import React from 'react';\nimport PropTypes from 'prop-types';\nimport i18n from '@dhis2/d2-i18n';\nimport { useConfig } from '@dhis2/app-runtime';\nimport { colors } from '@dhis2/ui';\nimport { extractFavorite } from './plugin';\nimport { isPrintMode } from '../../Dashboard/dashboardModes';\nimport { getAppName, itemTypeMap } from '../../../modules/itemTypes';\nimport classes from './styles/VisualizationErrorMessage.module.css';\n\nconst getErrorIcon = () => <svg height=\"96\" viewBox=\"0 0 96 96\" width=\"96\" xmlns=\"http://www.w3.org/2000/svg\">\n        <g fill={colors.grey400} transform=\"translate(3 3)\">\n            <path d=\"m40.5 73.5000001c0 2.4852813 2.0147186 4.5 4.5 4.5s4.5-2.0147187 4.5-4.5c0-2.4142734-1.9012365-4.3844892-4.2881643-4.4951021l-.2128322-.0048979c-2.4848234.0005384-4.4990035 2.0150507-4.4990035 4.5z\" />\n            <path d=\"m48 60v-30c0-1.6568542-1.3431458-3-3-3s-3 1.3431458-3 3v30c0 1.6568542 1.3431458 3 3 3s3-1.3431458 3-3z\" />\n            <path d=\"m45-2.99904788c3.8985931 0 7.4578604 2.21715778 9.1770339 5.71709169l37.8912554 77.19048409c1.3845546 2.8165473 1.2171646 6.1482722-.4427191 8.811863-1.6598833 2.6635901-4.5771005 4.2816904-7.7135702 4.2796124h-77.82201115c-3.13845856.002078-6.05567574-1.6160223-7.71555901-4.2796124-1.65988369-2.6635908-1.82727377-5.9953157-.44346379-8.8103471l37.89234295-77.19269833c1.7188306-3.49923557 5.2780979-5.71639335 9.176691-5.71639335zm0 6c-1.6106864 0-3.0811818.91600885-3.7909661 2.36100407l-37.89274459 77.19351591c-.47005356.9562122-.41322496 2.0873262.15030227 2.99161.56352731.9042839 1.5539177 1.4529206 2.62140842 1.4529206h77.8259889c1.0655018 0 2.0558922-.5486367 2.6194195-1.4529206.5635272-.9042838.6203558-2.0353978.1495577-2.9931259l-37.8916571-77.19130167c-.7101272-1.44569356-2.1806226-2.36170241-3.791309-2.36170241z\" />\n        </g>\n    </svg>;\n\nconst VisualizationErrorMessage = ({\n  item,\n  dashboardMode\n}) => {\n  const {\n    baseUrl\n  } = useConfig();\n  const visHref = `${baseUrl}/${itemTypeMap[item.type].appUrl(extractFavorite(item).id)}`;\n  return <div className={classes.center}>\n            {getErrorIcon()}\n            <p className={classes.errorMessage}>\n                {i18n.t('There was an error loading data for this item')}\n            </p>\n            {!isPrintMode(dashboardMode) ? <p className={classes.appLink}>\n                    <a onClick={e => e.stopPropagation()} target=\"_blank\" rel=\"noopener noreferrer\" href={visHref}>\n                        {i18n.t('Open this item in {{appName}}', {\n          appName: getAppName(item.type)\n        })}\n                    </a>\n                </p> : null}\n        </div>;\n};\n\nVisualizationErrorMessage.propTypes = {\n  dashboardMode: PropTypes.string,\n  item: PropTypes.object\n};\nexport default VisualizationErrorMessage;","// Note that this ignores discrepancies in 'this', so shouldn't be used with bound functions\n// This is useful instead of lodash/memoize when we only need to memoize a single value\n// Inspiration: https://github.com/alexreardon/memoize-one\nconst memoizeOne = fn => {\n  let lastArgs = undefined;\n  let lastValue = undefined;\n  return (...args) => {\n    if (lastArgs && args.length === lastArgs.length && args.every((arg, i) => arg === lastArgs[i])) {\n      return lastValue;\n    }\n\n    lastArgs = args;\n    lastValue = fn(...args);\n    return lastValue;\n  };\n};\n\nexport default memoizeOne;","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport uniqueId from 'lodash/uniqueId';\nimport VisualizationPlugin from '@dhis2/data-visualizer-plugin';\nimport i18n from '@dhis2/d2-i18n';\nimport DefaultPlugin from './DefaultPlugin';\nimport FatalErrorBoundary from './FatalErrorBoundary';\nimport ItemHeader, { HEADER_MARGIN_HEIGHT } from '../ItemHeader/ItemHeader';\nimport ItemHeaderButtons from './ItemHeaderButtons';\nimport ItemFooter from './ItemFooter';\nimport LoadingMask from './LoadingMask';\nimport VisualizationErrorMessage from './VisualizationErrorMessage';\nimport * as pluginManager from './plugin';\nimport { sGetVisualization } from '../../../reducers/visualizations';\nimport { sGetItemFiltersRoot, DEFAULT_STATE_ITEM_FILTERS } from '../../../reducers/itemFilters';\nimport { acAddVisualization, acSetActiveVisualizationType } from '../../../actions/visualizations';\nimport { VISUALIZATION, MAP, CHART, REPORT_TABLE } from '../../../modules/itemTypes';\nimport memoizeOne from '../../../modules/memoizeOne';\nimport { isEditMode, isPrintMode, isViewMode } from '../../Dashboard/dashboardModes';\nimport { ITEM_CONTENT_PADDING_BOTTOM } from '../../ItemGrid/ItemGrid';\nimport classes from './styles/Item.module.css';\nexport class Item extends Component {\n  state = {\n    showFooter: false,\n    configLoaded: false,\n    pluginIsLoaded: false,\n    isError: false\n  };\n\n  constructor(props, context) {\n    super(props);\n    this.d2 = context.d2;\n    this.contentRef = React.createRef();\n    this.headerRef = React.createRef();\n    this.memoizedApplyFilters = memoizeOne(this.applyFilters);\n    this.memoizedGetVisualizationConfig = memoizeOne(pluginManager.getVisualizationConfig);\n    this.memoizedGetContentStyle = memoizeOne(this.getContentStyle);\n  }\n\n  async componentDidMount() {\n    this.props.onVisualizationLoaded( // TODO do not call fetch on the pluginManager, do it here as the manager will eventually be removed...\n    await pluginManager.fetch(this.props.item));\n    this.setState({\n      configLoaded: true\n    });\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    if (prevProps.visualization !== this.props.visualization || prevProps.itemFilters !== this.props.itemFilters) {\n      if (this.state.isError) {\n        this.setState({\n          isError: false\n        });\n      }\n\n      if (prevState.pluginIsLoaded) {\n        // if the visualization or filters has changed, then mark pluginLoaded as false\n        // since a different plugin may be needed\n        this.setState({\n          pluginIsLoaded: false\n        });\n      }\n    }\n  }\n\n  applyFilters = (visualization, filters) => {\n    if (!Object.keys(filters).length) {\n      return visualization;\n    } // deep clone objects in filters to avoid changing the visualization in the Redux store\n\n\n    const visRows = visualization.rows.map(obj => ({ ...obj\n    }));\n    const visColumns = visualization.columns.map(obj => ({ ...obj\n    }));\n    const visFilters = visualization.filters.map(obj => ({ ...obj\n    }));\n    Object.keys(filters).forEach(dimensionId => {\n      if (filters[dimensionId]) {\n        let dimensionFound = false;\n        [visRows, visColumns, visFilters].forEach(dimensionObjects => dimensionObjects.filter(obj => obj.dimension === dimensionId).forEach(obj => {\n          dimensionFound = true;\n          obj.items = filters[dimensionId];\n        })); // add dimension to filters if not already present elsewhere\n\n        if (!dimensionFound) {\n          visFilters.push({\n            dimension: dimensionId,\n            items: filters[dimensionId]\n          });\n        }\n      }\n    });\n    return { ...visualization,\n      rows: visRows,\n      columns: visColumns,\n      filters: visFilters\n    };\n  };\n  getFilterVersion = memoizeOne(() => uniqueId());\n  onError = () => this.setState({\n    isError: true\n  });\n  pluginCredentials = null;\n  getPluginComponent = () => {\n    const calculatedHeight = this.props.item.originalHeight - this.headerRef.current.clientHeight - HEADER_MARGIN_HEIGHT - ITEM_CONTENT_PADDING_BOTTOM;\n    const style = this.memoizedGetContentStyle(calculatedHeight, this.contentRef ? this.contentRef.offsetHeight : null, isEditMode(this.props.dashboardMode) || isPrintMode(this.props.dashboardMode));\n\n    if (this.state.isError) {\n      return <div style={style}>\n                    <VisualizationErrorMessage item={this.props.item} dashboardMode={this.props.dashboardMode} />\n                </div>;\n    }\n\n    const activeType = this.getActiveType();\n    const visualization = this.memoizedGetVisualizationConfig(this.props.visualization, this.props.item.type, activeType);\n\n    if (!visualization) {\n      return <div className={classes.textDiv}>\n                    {i18n.t('No data to display')}\n                </div>;\n    }\n\n    const props = { ...this.props,\n      useActiveType: !isEditMode(this.props.dashboardMode),\n      visualization,\n      classes,\n      style\n    };\n\n    switch (activeType) {\n      case VISUALIZATION:\n      case CHART:\n      case REPORT_TABLE:\n        {\n          return <>\n                        {!this.state.pluginIsLoaded && <div style={props.style}>\n                                <LoadingMask />\n                            </div>}\n                        <VisualizationPlugin d2={this.d2} visualization={this.memoizedApplyFilters(visualization, props.itemFilters)} onLoadingComplete={this.onLoadingComplete} onError={this.onError} forDashboard={true} style={props.style} />\n                    </>;\n        }\n\n      case MAP:\n        {\n          if (props.item.type === MAP) {\n            // apply filters only to thematic and event layers\n            // for maps AO\n            const mapViews = props.visualization.mapViews.map(obj => {\n              if (obj.layer.includes('thematic') || obj.layer.includes('event')) {\n                return this.memoizedApplyFilters(obj, props.itemFilters);\n              }\n\n              return obj;\n            });\n            props.visualization = { ...props.visualization,\n              mapViews\n            };\n          } else {\n            // this is the case of a non map AO passed to the maps plugin\n            // due to a visualization type switch in dashboard item\n            // maps plugin takes care of converting the AO to a suitable format\n            props.visualization = this.memoizedApplyFilters(props.visualization, props.itemFilters);\n          }\n\n          props.options = { ...props.options,\n            hideTitle: true\n          };\n          return <DefaultPlugin {...props} />;\n        }\n\n      default:\n        {\n          props.visualization = this.memoizedApplyFilters(props.visualization, props.itemFilters);\n          return <DefaultPlugin {...props} />;\n        }\n    }\n  };\n  onLoadingComplete = () => {\n    this.setState({\n      pluginIsLoaded: true\n    });\n  };\n  onToggleFooter = () => {\n    this.setState({\n      showFooter: !this.state.showFooter\n    }, this.props.onToggleItemExpanded(this.props.item.id));\n  };\n  onSelectActiveType = type => {\n    type !== this.getActiveType() && this.props.onSelectActiveType(this.props.visualization.id, type);\n  };\n  getActiveType = () => this.props.visualization.activeType || this.props.item.type;\n  pluginIsAvailable = () => pluginManager.pluginIsAvailable(this.props.item, this.props.visualization);\n  getContentStyle = (calculatedHeight, measuredHeight, preferMeasured) => {\n    const height = preferMeasured ? measuredHeight || calculatedHeight : calculatedHeight;\n    return {\n      height\n    };\n  };\n\n  render() {\n    const {\n      item,\n      dashboardMode,\n      itemFilters\n    } = this.props;\n    const {\n      showFooter\n    } = this.state;\n    const actionButtons = <ItemHeaderButtons item={item} visualization={this.props.visualization} onSelectActiveType={this.onSelectActiveType} onToggleFooter={this.onToggleFooter} d2={this.d2} activeType={this.getActiveType()} activeFooter={this.state.showFooter} />;\n    return <>\n                <ItemHeader title={pluginManager.getName(item)} itemId={item.id} actionButtons={actionButtons} ref={this.headerRef} dashboardMode={dashboardMode} isShortened={item.shortened} />\n                <FatalErrorBoundary>\n                    <div key={this.getFilterVersion(itemFilters)} className=\"dashboard-item-content\" ref={ref => this.contentRef = ref}>\n                        {this.state.configLoaded && this.getPluginComponent()}\n                    </div>\n                </FatalErrorBoundary>\n                {isViewMode(dashboardMode) && showFooter ? <ItemFooter item={item} /> : null}\n            </>;\n  }\n\n}\nItem.contextTypes = {\n  d2: PropTypes.object\n};\nItem.propTypes = {\n  dashboardMode: PropTypes.string,\n  item: PropTypes.object,\n  itemFilters: PropTypes.object,\n  visualization: PropTypes.object,\n  onSelectActiveType: PropTypes.func,\n  onToggleItemExpanded: PropTypes.func,\n  onVisualizationLoaded: PropTypes.func\n};\nItem.defaultProps = {\n  item: {},\n  onToggleItemExpanded: Function.prototype,\n  visualization: {}\n};\n\nconst mapStateToProps = (state, ownProps) => {\n  const itemFilters = !isEditMode(ownProps.dashboardMode) ? sGetItemFiltersRoot(state) : DEFAULT_STATE_ITEM_FILTERS;\n  return {\n    itemFilters,\n    visualization: sGetVisualization(state, pluginManager.extractFavorite(ownProps.item).id)\n  };\n};\n\nconst mapDispatchToProps = dispatch => ({\n  onVisualizationLoaded: visualization => dispatch(acAddVisualization(visualization)),\n  onSelectActiveType: (id, type, activeType) => dispatch(acSetActiveVisualizationType(id, type, activeType))\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Item);","import React from 'react';\nimport { colors } from '@dhis2/ui';\nconst style = {\n  backgroundColor: colors.grey200,\n  border: 'none',\n  height: '1px',\n  margin: '0px 0px 5px 0px'\n};\n\nconst Line = () => <hr style={style} />;\n\nexport default Line;","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport i18n from '@dhis2/d2-i18n';\nimport { colors } from '@dhis2/ui';\nimport ItemHeader from '../ItemHeader/ItemHeader';\nimport Line from '../../../widgets/Line';\nimport { sGetMessagesRoot } from '../../../reducers/messages';\nimport { formatDate } from '../../../modules/util';\nimport { isViewMode } from '../../Dashboard/dashboardModes';\nimport './MessagesItem.css';\nconst PRIVATE = 'PRIVATE';\nconst messageTypes = {\n  [PRIVATE]: 'Private',\n  VALIDATION_RESULT: 'Validation',\n  TICKET: 'Ticket',\n  SYSTEM: 'System'\n};\nconst style = {\n  list: {\n    listStyleType: 'none',\n    paddingLeft: '0px'\n  },\n  seeAll: {\n    textAlign: 'center',\n    fontSize: '13px',\n    marginBottom: '5px'\n  },\n  sender: {\n    fontSize: '13px',\n    lineHeight: '15px',\n    margin: 0,\n    color: colors.grey800\n  },\n  snippet: {\n    color: colors.grey800,\n    fontSize: '13px',\n    lineHeight: '15px',\n    maxHeight: '30px',\n    overflow: 'hidden'\n  }\n};\n\nclass MessagesItem extends Component {\n  state = {\n    uiLocale: ''\n  };\n\n  async componentDidMount() {\n    const uiLocale = await this.context.d2.currentUser.userSettings.get('keyUiLocale');\n    this.setState({\n      uiLocale\n    });\n  }\n\n  getMessageHref = msg => {\n    const msgIdentifier = msg ? `#/${msg.messageType}/${msg.id}` : '';\n    return `${this.context.baseUrl}/dhis-web-messaging/${msgIdentifier}`;\n  };\n  getMessageSender = msg => {\n    const latestMsg = msg.messages.slice(-1)[0];\n    return latestMsg.sender ? latestMsg.sender.displayName : '';\n  };\n  getMessageItems = () => {\n    const modeClass = isViewMode(this.props.dashboardMode) ? 'view' : null;\n    return this.props.messages.map(msg => {\n      const redirectToMsg = () => {\n        if (isViewMode(this.props.dashboardMode)) {\n          document.location.href = this.getMessageHref(msg);\n        }\n      };\n\n      const sender = msg.messageType === PRIVATE ? this.getMessageSender(msg) : messageTypes[msg.messageType];\n      const readClass = !msg.read ? 'unread' : null;\n      const latestMsg = msg.messages.slice(-1)[0];\n      const msgDate = latestMsg.lastUpdated;\n      return <li className={`message-item ${modeClass}`} key={msg.id} onClick={redirectToMsg}>\n                    <p className={`message-title ${readClass}`}>\n                        {msg.displayName} ({msg.messageCount})\n                    </p>\n                    <p style={style.sender}>\n                        {sender} - {formatDate(msgDate, this.state.uiLocale)}\n                    </p>\n                    <p style={style.snippet}>{latestMsg.text}</p>\n                </li>;\n    });\n  };\n\n  render() {\n    return <>\n                <ItemHeader title={i18n.t('Messages')} itemId={this.props.item.id} dashboardMode={this.props.dashboardMode} isShortened={this.props.item.shortened} />\n                <Line />\n                {this.props.messages.length > 0 && <div className=\"dashboard-item-content\">\n                        <ul style={style.list}>{this.getMessageItems()}</ul>\n                        <div style={style.seeAll}>\n                            <a href={this.getMessageHref()}>\n                                {i18n.t('See all messages')}\n                            </a>\n                        </div>\n                    </div>}\n            </>;\n  }\n\n}\n\nMessagesItem.propTypes = {\n  dashboardMode: PropTypes.string,\n  item: PropTypes.object,\n  messages: PropTypes.array\n};\nMessagesItem.contextTypes = {\n  d2: PropTypes.object,\n  baseUrl: PropTypes.string\n};\n\nconst mapStateToProps = state => {\n  return {\n    messages: Object.values(sGetMessagesRoot(state))\n  };\n};\n\nconst MessagesContainer = connect(mapStateToProps, null)(MessagesItem);\nexport default MessagesContainer;","import React from 'react';\nimport PropTypes from 'prop-types';\nimport i18n from '@dhis2/d2-i18n';\nimport ItemHeader from '../ItemHeader/ItemHeader';\nimport NotInterestedIcon from '@material-ui/icons/NotInterested';\n\nconst NotSupportedItem = props => <>\n        <ItemHeader title={i18n.t('Item type \"{{type}}\" not supported', {\n    type: props.item.type\n  })} itemId={props.item.id} dashboardMode={props.dashboardMode} isShortened={props.item.shortened} />\n        <div style={{\n    display: 'flex',\n    justifyContent: 'center',\n    alignItems: 'center',\n    height: '90%'\n  }}>\n            <NotInterestedIcon style={{\n      width: 100,\n      height: 100,\n      align: 'center'\n    }} color=\"disabled\" />\n        </div>\n    </>;\n\nNotSupportedItem.propTypes = {\n  dashboardMode: PropTypes.string,\n  item: PropTypes.object\n};\nexport default NotSupportedItem;","import React from 'react';\nimport { colors } from '@dhis2/ui';\nimport PropTypes from 'prop-types';\n\nconst DescriptionIcon = ({\n  className\n}) => <svg className={className} xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\" fill={colors.grey500}>\n        <path d=\"M0 0h24v24H0z\" fill=\"none\" />\n        <path d=\"M14 2H6c-1.1 0-1.99.9-1.99 2L4 20c0 1.1.89 2 1.99 2H18c1.1 0 2-.9 2-2V8l-6-6zm2 16H8v-2h8v2zm0-4H8v-2h8v2zm-3-5V3.5L18.5 9H13z\" />\n    </svg>;\n\nDescriptionIcon.propTypes = {\n  className: PropTypes.string\n};\nexport default DescriptionIcon;","import React from 'react';\nimport { colors } from '@dhis2/ui';\nimport PropTypes from 'prop-types';\n\nconst DeleteIcon = ({\n  className\n}) => <svg className={className} xmlns=\"http://www.w3.org/2000/svg\" width=\"18\" height=\"18\" viewBox=\"0 0 24 24\" fill={colors.red500}>\n        <path d=\"M6 19c0 1.1.9 2 2 2h8c1.1 0 2-.9 2-2V7H6v12zM19 4h-3.5l-1-1h-5l-1 1H5v2h14V4z\" />\n        <path d=\"M0 0h24v24H0z\" fill=\"none\" />\n    </svg>;\n\nDeleteIcon.propTypes = {\n  className: PropTypes.string\n};\nexport default DeleteIcon;","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { colors } from '@dhis2/ui';\nimport DescriptionIcon from '../../../icons/Description';\nimport DeleteIcon from '../../../icons/Delete';\nimport Line from '../../../widgets/Line';\nimport { itemTypeMap, getItemUrl } from '../../../modules/itemTypes';\nimport { orArray } from '../../../modules/util';\nimport { tRemoveListItemContent } from './actions';\nimport ItemHeader from '../ItemHeader/ItemHeader';\nimport { isEditMode } from '../../Dashboard/dashboardModes';\nimport classes from './Item.module.css';\n\nconst getItemTitle = item => itemTypeMap[item.type].pluralTitle;\n\nconst getContentItems = item => orArray(item[itemTypeMap[item.type].propName]).filter((item, index, array) => array.findIndex(el => el.id === item.id) === index);\n\nconst ListItem = (props, context) => {\n  const {\n    item,\n    dashboardMode,\n    tRemoveListItemContent\n  } = props;\n  const contentItems = getContentItems(item);\n\n  const getLink = contentItem => {\n    const deleteButton = <button className={classes.deletebutton} onClick={() => tRemoveListItemContent(item, contentItem)}>\n                <DeleteIcon className={classes.deleteicon} />\n            </button>;\n    return <>\n                <a className={classes.link} style={{\n        color: colors.grey900\n      }} href={getItemUrl(item.type, contentItem, context.d2)}>\n                    {contentItem.name}\n                </a>\n                {isEditMode(dashboardMode) ? deleteButton : null}\n            </>;\n  };\n\n  return <>\n            <ItemHeader title={getItemTitle(item)} itemId={item.id} dashboardMode={dashboardMode} isShortened={item.shortened} />\n            <Line />\n            <div className=\"dashboard-item-content\">\n                <ul className={classes.list}>\n                    {contentItems.map(contentItem => <li className={classes.item} key={contentItem.id}>\n                            <DescriptionIcon className={classes.itemicon} />\n                            {getLink(contentItem)}\n                        </li>)}\n                </ul>\n            </div>\n        </>;\n};\n\nListItem.propTypes = {\n  dashboardMode: PropTypes.string,\n  item: PropTypes.object,\n  tRemoveListItemContent: PropTypes.func\n};\nListItem.contextTypes = {\n  d2: PropTypes.object\n};\nexport default connect(null, {\n  tRemoveListItemContent\n})(ListItem);","import { acUpdateDashboardItem, acRemoveDashboardItem } from '../../../actions/editDashboard';\nimport { itemTypeMap } from '../../../modules/itemTypes';\nexport const tRemoveListItemContent = (dashboardItem, content) => dispatch => {\n  const listItemType = itemTypeMap[dashboardItem.type].propName;\n  const newContent = dashboardItem[listItemType].filter(item => item.id !== content.id);\n\n  if (newContent.length) {\n    dashboardItem[listItemType] = newContent;\n    dispatch(acUpdateDashboardItem(dashboardItem));\n  } else {\n    dispatch(acRemoveDashboardItem(dashboardItem));\n  }\n};","/** @module reducers/editDashboard */\nimport update from 'immutability-helper';\nimport isEmpty from 'lodash/isEmpty';\nimport { orArray } from '../modules/util';\nexport const SET_PRINT_DASHBOARD = 'SET_PRINT_DASHBOARD';\nexport const CLEAR_PRINT_DASHBOARD = 'CLEAR_PRINT_DASHBOARD';\nexport const ADD_PRINT_DASHBOARD_ITEM = 'ADD_PRINT_DASHBOARD_ITEM';\nexport const SET_PRINT_DASHBOARD_LAYOUT = 'SET_PRINT_DASHBOARD_LAYOUT';\nexport const REMOVE_PRINT_DASHBOARD_ITEM = 'REMOVE_PRINT_DASHBOARD_ITEM';\nexport const UPDATE_PRINT_DASHBOARD_ITEM = 'UPDATE_PRINT_DASHBOARD_ITEM';\nexport const DEFAULT_STATE_PRINT_DASHBOARD = {};\nconst DEFAULT_DASHBOARD_ITEMS = [];\nexport const NEW_PRINT_DASHBOARD_STATE = {\n  id: '',\n  name: '',\n  access: {},\n  description: '',\n  dashboardItems: DEFAULT_DASHBOARD_ITEMS\n};\nexport default ((state = DEFAULT_STATE_PRINT_DASHBOARD, action) => {\n  switch (action.type) {\n    case SET_PRINT_DASHBOARD:\n      {\n        const newState = {};\n        Object.keys(NEW_PRINT_DASHBOARD_STATE).map(k => newState[k] = action.value[k]);\n        return newState;\n      }\n\n    case CLEAR_PRINT_DASHBOARD:\n      return DEFAULT_STATE_PRINT_DASHBOARD;\n\n    case ADD_PRINT_DASHBOARD_ITEM:\n      if (!action.value.position) {\n        return update(state, {\n          dashboardItems: {\n            $unshift: [action.value]\n          }\n        });\n      }\n\n      return update(state, {\n        dashboardItems: {\n          $splice: [[parseInt(action.value.position), 0, action.value]]\n        }\n      });\n\n    case REMOVE_PRINT_DASHBOARD_ITEM:\n      {\n        const idToRemove = action.value;\n        const dashboardItemIndex = state.dashboardItems.findIndex(item => item.id === idToRemove);\n\n        if (dashboardItemIndex > -1) {\n          return update(state, {\n            dashboardItems: {\n              $splice: [[dashboardItemIndex, 1]]\n            }\n          });\n        }\n\n        return state;\n      }\n\n    case UPDATE_PRINT_DASHBOARD_ITEM:\n      {\n        const dashboardItem = action.value;\n        const dashboardItemIndex = state.dashboardItems.findIndex(item => item.id === dashboardItem.id);\n\n        if (dashboardItemIndex > -1) {\n          const newState = update(state, {\n            dashboardItems: {\n              $splice: [[dashboardItemIndex, 1, Object.assign({}, dashboardItem)]]\n            }\n          });\n          return newState;\n        }\n\n        return state;\n      }\n\n    case SET_PRINT_DASHBOARD_LAYOUT:\n      {\n        const stateItems = orArray(state.dashboardItems);\n        let layoutHasChanged = false;\n        const newStateItems = action.value.map(({\n          x,\n          y,\n          w,\n          h,\n          i\n        }) => {\n          const stateItem = stateItems.find(si => si.id === i);\n\n          if (!(stateItem.x === x && stateItem.y === y && stateItem.w === w && stateItem.h === h)) {\n            layoutHasChanged = true;\n            return Object.assign({}, stateItem, {\n              w,\n              h,\n              x,\n              y\n            });\n          }\n\n          return stateItem;\n        });\n        return layoutHasChanged ? { ...state,\n          dashboardItems: newStateItems\n        } : state;\n      }\n\n    default:\n      return state;\n  }\n}); // root selector\n\nexport const sGetPrintDashboardRoot = state => state.printDashboard; // selectors\n\nexport const sGetIsPrinting = state => !isEmpty(state.printDashboard);\nexport const sGetPrintDashboardName = state => sGetPrintDashboardRoot(state).name;\nexport const sGetPrintDashboardDescription = state => sGetPrintDashboardRoot(state).description;\nexport const sGetPrintDashboardItems = state => {\n  return sGetPrintDashboardRoot(state)?.dashboardItems || DEFAULT_DASHBOARD_ITEMS;\n};","import React from 'react';\nimport { connect } from 'react-redux';\nimport i18n from '@dhis2/d2-i18n';\nimport PropTypes from 'prop-types';\nimport Input from '@material-ui/core/Input';\nimport ItemHeader from '../ItemHeader/ItemHeader';\nimport PrintItemInfo from '../ItemHeader/PrintItemInfo';\nimport Line from '../../../widgets/Line';\nimport { Parser as RichTextParser, Editor as RichTextEditor } from '@dhis2/d2-ui-rich-text';\nimport { acUpdateDashboardItem } from '../../../actions/editDashboard';\nimport { sGetEditDashboardItems } from '../../../reducers/editDashboard';\nimport { sGetDashboardItems } from '../../../reducers/dashboards';\nimport { sGetIsPrinting, sGetPrintDashboardItems } from '../../../reducers/printDashboard';\nimport { isEditMode, PRINT_LAYOUT } from '../../Dashboard/dashboardModes';\nconst style = {\n  textDiv: {\n    padding: '10px',\n    whiteSpace: 'pre-line',\n    lineHeight: '20px'\n  },\n  textField: {\n    fontSize: '14px',\n    fontStretch: 'normal',\n    width: '90%',\n    margin: '0 auto',\n    display: 'block',\n    lineHeight: '24px'\n  },\n  container: {\n    marginBottom: '20px',\n    marginTop: '20px'\n  }\n};\n\nconst TextItem = props => {\n  const {\n    item,\n    dashboardMode,\n    text,\n    acUpdateDashboardItem\n  } = props;\n\n  const onChangeText = event => {\n    const updatedItem = { ...item,\n      text: event.target.value\n    };\n    acUpdateDashboardItem(updatedItem);\n  };\n\n  const viewItem = () => {\n    const textDivStyle = Object.assign({}, style.textField, style.textDiv);\n    return <div className=\"dashboard-item-content\" style={style.container}>\n                <RichTextParser style={textDivStyle}>{text}</RichTextParser>\n            </div>;\n  };\n\n  const editItem = () => {\n    return <>\n                <ItemHeader title={i18n.t('Text item')} itemId={item.id} dashboardMode={dashboardMode} />\n                <Line />\n                <div className=\"dashboard-item-content\">\n                    <RichTextEditor onEdit={onChangeText}>\n                        <Input value={text} multiline fullWidth style={style.textField} placeholder={i18n.t('Add text here')} onChange={onChangeText} />\n                    </RichTextEditor>\n                </div>\n            </>;\n  };\n\n  const printItem = () => {\n    const textDivStyle = Object.assign({}, style.textField, style.textDiv);\n    return <>\n                {props.item.shortened ? <PrintItemInfo /> : null}\n                <div className=\"dashboard-item-content\" style={style.container}>\n                    <RichTextParser style={textDivStyle}>{text}</RichTextParser>\n                </div>\n            </>;\n  };\n\n  let textItem;\n\n  if (isEditMode(dashboardMode)) {\n    textItem = editItem;\n  } else if (dashboardMode === PRINT_LAYOUT) {\n    textItem = printItem;\n  } else {\n    textItem = viewItem;\n  }\n\n  return <>{textItem()}</>;\n};\n\nconst mapStateToProps = (state, ownProps) => {\n  const isPrintPreview = sGetIsPrinting(state);\n  let items;\n\n  if (isPrintPreview) {\n    items = sGetPrintDashboardItems(state);\n  } else if (isEditMode(ownProps.dashboardMode)) {\n    items = sGetEditDashboardItems(state);\n  } else {\n    items = sGetDashboardItems(state);\n  }\n\n  const item = items.find(item => item.id === ownProps.item.id);\n  return {\n    text: item ? item.text : ''\n  };\n};\n\nTextItem.propTypes = {\n  acUpdateDashboardItem: PropTypes.func,\n  dashboardMode: PropTypes.string,\n  item: PropTypes.object,\n  text: PropTypes.string\n};\nexport default connect(mapStateToProps, {\n  acUpdateDashboardItem\n})(TextItem);","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport NotInterestedIcon from '@material-ui/icons/NotInterested';\nimport ItemHeader from '../ItemHeader/ItemHeader';\nimport Line from '../../../widgets/Line';\nimport { FILTER_ORG_UNIT } from '../../../actions/itemFilters';\nimport { sGetItemFiltersRoot, DEFAULT_STATE_ITEM_FILTERS } from '../../../reducers/itemFilters';\nimport { isEditMode } from '../../Dashboard/dashboardModes';\n\nconst getIframeSrc = (appDetails, item, itemFilters) => {\n  let iframeSrc = `${appDetails.launchUrl}?dashboardItemId=${item.id}`;\n\n  if (itemFilters && itemFilters[FILTER_ORG_UNIT] && itemFilters[FILTER_ORG_UNIT].length) {\n    const ouIds = itemFilters[FILTER_ORG_UNIT].map(ouFilter => ouFilter.path.split('/').slice(-1)[0]);\n    iframeSrc += `&userOrgUnit=${ouIds.join(',')}`;\n  }\n\n  return iframeSrc;\n};\n\nconst AppItem = ({\n  dashboardMode,\n  item,\n  itemFilters\n}, context) => {\n  let appDetails;\n  const appKey = item.appKey;\n\n  if (appKey) {\n    appDetails = context.d2.system.installedApps.find(app => app.key === appKey);\n  }\n\n  return appDetails && appDetails.name && appDetails.launchUrl ? <>\n            <ItemHeader title={appDetails.name} itemId={item.id} dashboardMode={dashboardMode} isShortened={item.shortened} />\n            <Line />\n            <iframe title={appDetails.name} src={getIframeSrc(appDetails, item, itemFilters)} className=\"dashboard-item-content\" style={{\n      border: 'none'\n    }} />\n        </> : <>\n            <ItemHeader title={`${appKey} app not found`} />\n            <Line />\n            <div className=\"dashboard-item-content\" style={{\n      display: 'flex',\n      justifyContent: 'center',\n      alignItems: 'center',\n      height: '90%'\n    }}>\n                <NotInterestedIcon color=\"disabled\" disabled style={{\n        width: 100,\n        height: 100,\n        align: 'center'\n      }} />\n            </div>\n        </>;\n};\n\nAppItem.propTypes = {\n  dashboardMode: PropTypes.string,\n  item: PropTypes.object,\n  itemFilters: PropTypes.object\n};\nAppItem.contextTypes = {\n  d2: PropTypes.object\n};\n\nconst mapStateToProps = (state, ownProps) => {\n  const itemFilters = !isEditMode(ownProps.dashboardMode) ? sGetItemFiltersRoot(state) : DEFAULT_STATE_ITEM_FILTERS;\n  return {\n    itemFilters\n  };\n};\n\nexport default connect(mapStateToProps)(AppItem);","import React from 'react';\nimport PropTypes from 'prop-types';\nimport i18n from '@dhis2/d2-i18n';\nimport { colors } from '@dhis2/ui';\nimport ItemHeader from '../ItemHeader/ItemHeader';\nconst style = {\n  margin: '21px 28px',\n  fontSize: '14px',\n  lineHeight: '18px',\n  color: colors.grey600\n};\n\nconst SpacerItem = props => {\n  return <>\n            <ItemHeader title={i18n.t('Spacer')} itemId={props.item.id} dashboardMode={props.dashboardMode} isShortened={props.item.shortened} />\n            <p style={style}>\n                {i18n.t('Use a spacer to create empty vertical space between other dashboard items.')}\n            </p>\n        </>;\n};\n\nSpacerItem.propTypes = {\n  dashboardMode: PropTypes.string,\n  item: PropTypes.object\n};\nexport default SpacerItem;","import React from 'react';\n\nconst PageBreakItem = () => <div />;\n\nexport default PageBreakItem;","import React from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport i18n from '@dhis2/d2-i18n';\nimport { sGetSelectedId, sGetSelectedShowDescription } from '../../../reducers/selected';\nimport { sGetDashboardById, EMPTY_DASHBOARD } from '../../../reducers/dashboards';\nimport { sGetNamedItemFilters } from '../../../reducers/itemFilters';\nimport { sGetIsEditing } from '../../../reducers/editDashboard';\nimport { sGetPrintDashboardName, sGetPrintDashboardDescription } from '../../../reducers/printDashboard';\nimport classes from './styles/Item.module.css';\n\nconst PrintTitlePageItem = ({\n  name,\n  description,\n  itemFilters,\n  showDescription\n}) => {\n  const getItemFilterList = () => {\n    const listItems = itemFilters.map(({\n      name,\n      values\n    }) => <li className={classes.filterListItem} key={name}>\n                {name}: {values.map(val => val.name).join(', ')}\n            </li>);\n    return <ul className={classes.filterList}>{listItems}</ul>;\n  };\n\n  return <div className={classes.titlePage}>\n            <p className={classes.name}>{name}</p>\n            {showDescription && description && <p className={classes.description}>{description}</p>}\n            {itemFilters.length > 0 && <>\n                    <p className={classes.filterTitle}>\n                        {i18n.t('Filters applied')}\n                    </p>\n                    {getItemFilterList()}\n                </>}\n        </div>;\n};\n\nPrintTitlePageItem.propTypes = {\n  description: PropTypes.string,\n  itemFilters: PropTypes.array,\n  name: PropTypes.string,\n  showDescription: PropTypes.bool\n};\nPrintTitlePageItem.defaultProps = {\n  description: '',\n  name: '',\n  showDescription: false\n};\n\nconst mapStateToProps = state => {\n  const id = sGetSelectedId(state);\n  const isEditMode = sGetIsEditing(state);\n  const viewDashboard = sGetDashboardById(state, id) || EMPTY_DASHBOARD;\n  const name = isEditMode ? sGetPrintDashboardName(state) || i18n.t('Untitled dashboard') : viewDashboard.displayName;\n  const description = isEditMode ? sGetPrintDashboardDescription(state) : viewDashboard.displayDescription;\n  return {\n    name,\n    description,\n    itemFilters: sGetNamedItemFilters(state),\n    showDescription: sGetSelectedShowDescription(state)\n  };\n};\n\nexport default connect(mapStateToProps)(PrintTitlePageItem);","import React from 'react';\nimport PropTypes from 'prop-types';\nimport VisualizationItem from './VisualizationItem/Item';\nimport MessagesItem from './MessagesItem/Item';\nimport NotSupportedItem from './NotSupportedItem/Item';\nimport ListItem from './ListItem/Item';\nimport TextItem from './TextItem/Item';\nimport AppItem from './AppItem/Item';\nimport SpacerItem from './SpacerItem/Item';\nimport PageBreakItem from './PageBreakItem/Item';\nimport PrintTitlePageItem from './PrintTitlePageItem/Item';\nimport { APP, VISUALIZATION, REPORT_TABLE, CHART, MAP, EVENT_CHART, EVENT_REPORT, MESSAGES, REPORTS, RESOURCES, USERS, TEXT, SPACER, PAGEBREAK, PRINT_TITLE_PAGE } from '../../modules/itemTypes';\n\nconst getGridItem = type => {\n  switch (type) {\n    case VISUALIZATION:\n    case REPORT_TABLE:\n    case CHART:\n    case MAP:\n    case EVENT_CHART:\n    case EVENT_REPORT:\n      return VisualizationItem;\n\n    case MESSAGES:\n      return MessagesItem;\n\n    case REPORTS:\n    case RESOURCES:\n    case USERS:\n      return ListItem;\n\n    case TEXT:\n      return TextItem;\n\n    case SPACER:\n      return SpacerItem;\n\n    case APP:\n      return AppItem;\n\n    case PAGEBREAK:\n      return PageBreakItem;\n\n    case PRINT_TITLE_PAGE:\n      return PrintTitlePageItem;\n\n    default:\n      return NotSupportedItem;\n  }\n};\n\nexport const Item = props => {\n  const GridItem = getGridItem(props.item.type);\n  return <GridItem item={props.item} dashboardMode={props.dashboardMode} onToggleItemExpanded={props.onToggleItemExpanded} />;\n};\nItem.propTypes = {\n  dashboardMode: PropTypes.string,\n  item: PropTypes.object,\n  onToggleItemExpanded: PropTypes.func\n};","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport debounce from 'lodash/debounce';\nimport pick from 'lodash/pick';\nconst defaultDebounceMs = 100;\nconst defaultBufferFactor = 0.25;\n\nclass ProgressiveLoadingContainer extends Component {\n  static propTypes = {\n    children: PropTypes.node.isRequired,\n    bufferFactor: PropTypes.number,\n    className: PropTypes.string,\n    debounceMs: PropTypes.number,\n    style: PropTypes.object\n  };\n  static defaultProps = {\n    debounceMs: defaultDebounceMs,\n    bufferFactor: defaultBufferFactor\n  };\n  state = {\n    shouldLoad: false\n  };\n  containerRef = null;\n  shouldLoadHandler = null;\n  handlerOptions = {\n    passive: true\n  };\n\n  checkShouldLoad() {\n    if (!this.containerRef) {\n      return;\n    }\n\n    const bufferPx = this.props.bufferFactor * window.innerHeight;\n    const rect = this.containerRef.getBoundingClientRect();\n\n    if (rect.bottom > -bufferPx && rect.top < window.innerHeight + bufferPx) {\n      this.setState({\n        shouldLoad: true\n      });\n      this.removeHandler();\n    }\n  }\n\n  registerHandler() {\n    this.shouldLoadHandler = debounce(() => this.checkShouldLoad(), this.props.debounceMs);\n    document.getElementsByClassName('dashboard-wrapper')[0]?.addEventListener('scroll', this.shouldLoadHandler, this.handlerOptions);\n  }\n\n  removeHandler() {\n    document.getElementsByClassName('dashboard-wrapper')[0]?.removeEventListener('scroll', this.shouldLoadHandler, this.handlerOptions);\n  }\n\n  componentDidMount() {\n    this.registerHandler();\n    this.checkShouldLoad();\n  }\n\n  componentWillUnmount() {\n    this.removeHandler();\n  }\n\n  render() {\n    const {\n      children,\n      className,\n      style,\n      ...props\n    } = this.props;\n    const {\n      shouldLoad\n    } = this.state;\n    const eventProps = pick(props, ['onMouseDown', 'onTouchStart', 'onMouseUp', 'onTouchEnd']);\n    return <div ref={ref => this.containerRef = ref} style={style} className={className} {...eventProps}>\n                {shouldLoad && children}\n            </div>;\n  }\n\n}\n\nexport default ProgressiveLoadingContainer;","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport i18n from '@dhis2/d2-i18n';\nimport ReactGridLayout from 'react-grid-layout';\nimport { Layer, CenteredContent, CircularLoader } from '@dhis2/ui';\nimport { acUpdateDashboardLayout } from '../../actions/editDashboard';\nimport { Item } from '../Item/Item';\nimport { resize as pluginResize } from '../Item/VisualizationItem/plugin';\nimport { isVisualizationType } from '../../modules/itemTypes';\nimport { GRID_ROW_HEIGHT, GRID_COMPACT_TYPE, MARGIN, getGridColumns, hasShape, onItemResize } from './gridUtil';\nimport { orArray } from '../../modules/util';\nimport NoContentMessage from '../../widgets/NoContentMessage';\nimport 'react-grid-layout/css/styles.css';\nimport 'react-resizable/css/styles.css';\nimport './ItemGrid.css';\nimport { sGetSelectedId, sGetSelectedIsLoading } from '../../reducers/selected';\nimport { sGetEditDashboardRoot, sGetEditDashboardItems } from '../../reducers/editDashboard';\nimport { sGetDashboardById, sGetDashboardItems } from '../../reducers/dashboards';\nimport ProgressiveLoadingContainer from '../Item/ProgressiveLoadingContainer';\nimport { VIEW, EDIT } from '../Dashboard/dashboardModes'; // Component\n\nconst EXPANDED_HEIGHT = 17; // this is set in the .dashboard-item-content css\n\nexport const ITEM_CONTENT_PADDING_BOTTOM = 4;\nexport class ItemGrid extends Component {\n  state = {\n    expandedItems: {}\n  };\n  onToggleItemExpanded = clickedId => {\n    const isExpanded = typeof this.state.expandedItems[clickedId] === 'boolean' ? this.state.expandedItems[clickedId] : false;\n    const expandedItems = { ...this.state.expandedItems\n    };\n    expandedItems[clickedId] = !isExpanded;\n    this.setState({\n      expandedItems\n    });\n  };\n\n  componentWillReceiveProps(nextProps) {\n    if (nextProps.edit) {\n      this.setState({\n        expandedItems: {}\n      });\n    }\n  }\n\n  onLayoutChange = newLayout => {\n    if (this.props.edit) {\n      this.props.acUpdateDashboardLayout(newLayout);\n    }\n  };\n  onResizeStop = (layout, oldItem, newItem) => {\n    onItemResize(newItem.i);\n    const dashboardItem = this.props.dashboardItems.find(item => item.id === newItem.i); // call resize on the item component if it's a plugin type\n\n    if (dashboardItem && isVisualizationType(dashboardItem)) {\n      pluginResize(dashboardItem);\n    }\n  };\n  adjustHeightForExpanded = dashboardItem => {\n    const expandedItem = this.state.expandedItems[dashboardItem.id];\n\n    if (expandedItem && expandedItem === true) {\n      return Object.assign({}, dashboardItem, {\n        h: dashboardItem.h + EXPANDED_HEIGHT\n      });\n    }\n\n    return dashboardItem;\n  };\n  getItemComponent = item => {\n    const itemClassNames = [item.type, this.props.edit ? 'edit' : 'view'].join(' ');\n    return <ProgressiveLoadingContainer key={item.i} className={itemClassNames}>\n                <Item item={item} dashboardMode={this.props.edit ? EDIT : VIEW} onToggleItemExpanded={this.onToggleItemExpanded} />\n            </ProgressiveLoadingContainer>;\n  };\n  getItemComponents = items => items.map(item => this.getItemComponent(item));\n\n  render() {\n    const {\n      edit,\n      isLoading,\n      dashboardItems\n    } = this.props;\n\n    if (!isLoading && !dashboardItems.length) {\n      return <NoContentMessage text={i18n.t('There are no items on this dashboard')} />;\n    }\n\n    const items = edit ? dashboardItems : dashboardItems.map(this.adjustHeightForExpanded);\n    return <div className=\"grid-wrapper\">\n                {isLoading ? <Layer translucent>\n                        <CenteredContent>\n                            <CircularLoader />\n                        </CenteredContent>\n                    </Layer> : null}\n                <ReactGridLayout onLayoutChange={this.onLayoutChange} onResizeStop={this.onResizeStop} className=\"layout\" layout={items} margin={MARGIN} cols={getGridColumns()} rowHeight={GRID_ROW_HEIGHT} width={window.innerWidth} compactType={GRID_COMPACT_TYPE} isDraggable={edit} isResizable={edit} draggableCancel=\"input,textarea\">\n                    {this.getItemComponents(items)}\n                </ReactGridLayout>\n            </div>;\n  }\n\n}\nItemGrid.propTypes = {\n  acUpdateDashboardLayout: PropTypes.func,\n  dashboardItems: PropTypes.array,\n  edit: PropTypes.bool,\n  isLoading: PropTypes.bool\n};\nItemGrid.defaultProps = {\n  dashboardItems: []\n}; // Container\n\nconst mapStateToProps = (state, ownProps) => {\n  const selectedDashboard = ownProps.edit ? sGetEditDashboardRoot(state) : sGetDashboardById(state, sGetSelectedId(state));\n  const dashboardItems = ownProps.edit ? sGetEditDashboardItems(state) : sGetDashboardItems(state);\n  return {\n    isLoading: sGetSelectedIsLoading(state) || !selectedDashboard,\n    dashboardItems\n  };\n};\n\nconst mapDispatchToProps = {\n  acUpdateDashboardLayout\n};\n\nconst mergeProps = (stateProps, dispatchProps, ownProps) => {\n  const validItems = orArray(stateProps.dashboardItems).filter(hasShape);\n  return { ...dispatchProps,\n    edit: ownProps.edit,\n    isLoading: stateProps.isLoading,\n    dashboardItems: validItems,\n    onItemResize\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps, mergeProps)(ItemGrid);","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport i18n from '@dhis2/d2-i18n';\nimport { colors } from '@dhis2/ui';\nconst styles = {\n  badgeContainer: {\n    margin: '2px',\n    padding: '0 16px',\n    borderRadius: '4px',\n    color: colors.white,\n    backgroundColor: '#212934',\n    height: 36,\n    display: 'flex',\n    alignItems: 'center'\n  },\n  badge: {\n    fontSize: '13px',\n    cursor: 'pointer',\n    whiteSpace: 'nowrap'\n  },\n  badgeRemove: {\n    fontSize: '12px',\n    textDecoration: 'underline',\n    marginLeft: '24px',\n    cursor: 'pointer'\n  }\n};\n\nclass FilterBadge extends Component {\n  onClick = id => () => this.props.onClick(id);\n  onRemove = id => () => this.props.onRemove(id);\n\n  render() {\n    const {\n      data\n    } = this.props;\n    return <div style={styles.badgeContainer}>\n                <span style={styles.badge} onClick={this.onClick(data.id)}>\n                    {`${data.name}: ${data.values.length > 1 ? i18n.t('{{count}} selected', {\n          count: data.values.length\n        }) : data.values[0].name}`}\n                </span>\n                <span style={styles.badgeRemove} onClick={this.onRemove(data.id)}>\n                    {i18n.t('Remove')}\n                </span>\n            </div>;\n  }\n\n}\n\nFilterBadge.propTypes = {\n  data: PropTypes.object.isRequired,\n  onClick: PropTypes.func.isRequired,\n  onRemove: PropTypes.func.isRequired\n};\nFilterBadge.defaultProps = {\n  onClick: Function.prototype,\n  onRemove: Function.prototype\n};\nexport default FilterBadge;","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport FilterBadge from './FilterBadge';\nimport { sGetNamedItemFilters } from '../../reducers/itemFilters';\nimport { acRemoveItemFilter } from '../../actions/itemFilters';\nimport { acSetActiveModalDimension } from '../../actions/activeModalDimension';\nimport classes from './styles/FilterBar.module.css';\nexport class FilterBar extends Component {\n  onBadgeRemove = id => {\n    this.props.removeItemFilter(id);\n  };\n  onBadgeClick = id => {\n    this.props.setActiveModalDimension({\n      id,\n      name: this.props.filters.find(item => item.id === id).name\n    });\n  };\n\n  render() {\n    const {\n      filters\n    } = this.props;\n    return filters.length ? // the 3 is calculated so that the FilterBar has the same vertical position as the TitleBar in relation to the ControlBar\n    <div className={classes.bar} style={{\n      top: 3\n    }}>\n                {filters.map(filter => <FilterBadge key={filter.id} data={filter} onClick={this.onBadgeClick} onRemove={this.onBadgeRemove} />)}\n            </div> : null;\n  }\n\n}\nFilterBar.propTypes = {\n  filters: PropTypes.array.isRequired,\n  removeItemFilter: PropTypes.func.isRequired,\n  setActiveModalDimension: PropTypes.func\n};\nFilterBar.defaultProps = {\n  filters: [],\n  removeItemFIlter: Function.prototype\n};\n\nconst mapStateToProps = state => ({\n  filters: sGetNamedItemFilters(state)\n});\n\nexport default connect(mapStateToProps, {\n  setActiveModalDimension: acSetActiveModalDimension,\n  removeItemFilter: acRemoveItemFilter\n})(FilterBar);","export const SET_WINDOW_HEIGHT = 'SET_WINDOW_HEIGHT';\nexport const DEFAULT_STATE_WINDOW_HEIGHT = window.innerHeight;\nexport default ((state = DEFAULT_STATE_WINDOW_HEIGHT, action) => {\n  switch (action.type) {\n    case SET_WINDOW_HEIGHT:\n      {\n        return action.value;\n      }\n\n    default:\n      return state;\n  }\n});\nexport const sGetWindowHeight = state => state.windowHeight;","import { generateUid } from 'd2/uid';\nimport { SET_PRINT_DASHBOARD, CLEAR_PRINT_DASHBOARD, SET_PRINT_DASHBOARD_LAYOUT, ADD_PRINT_DASHBOARD_ITEM, REMOVE_PRINT_DASHBOARD_ITEM, UPDATE_PRINT_DASHBOARD_ITEM } from '../reducers/printDashboard';\nimport { NEW_ITEM_SHAPE, getGridItemProperties, getPageBreakItemShape, getPrintTitlePageItemShape } from '../components/ItemGrid/gridUtil';\nimport { itemTypeMap, PAGEBREAK } from '../modules/itemTypes'; // actions\n\nexport const acSetPrintDashboard = (dashboard, items) => {\n  const val = { ...dashboard,\n    dashboardItems: items\n  };\n  return {\n    type: SET_PRINT_DASHBOARD,\n    value: val\n  };\n};\nexport const acClearPrintDashboard = () => ({\n  type: CLEAR_PRINT_DASHBOARD\n});\nexport const acUpdatePrintDashboardLayout = value => ({\n  type: SET_PRINT_DASHBOARD_LAYOUT,\n  value\n});\nexport const acAddPrintDashboardItem = item => {\n  const type = item.type;\n  delete item.type;\n  const itemPropName = itemTypeMap[type].propName;\n  const id = generateUid();\n  const gridItemProperties = getGridItemProperties(id);\n  let shape;\n\n  if (type === PAGEBREAK) {\n    const yPos = item.yPos || 0;\n    shape = getPageBreakItemShape(yPos, item.isStatic);\n  } else {\n    shape = getPrintTitlePageItemShape(item.isOneItemPerPage);\n  }\n\n  return {\n    type: ADD_PRINT_DASHBOARD_ITEM,\n    value: {\n      id,\n      type,\n      position: item.position || null,\n      [itemPropName]: item.content,\n      ...NEW_ITEM_SHAPE,\n      ...gridItemProperties,\n      ...shape\n    }\n  };\n};\nexport const acRemovePrintDashboardItem = value => ({\n  type: REMOVE_PRINT_DASHBOARD_ITEM,\n  value\n});\nexport const acUpdatePrintDashboardItem = item => ({\n  type: UPDATE_PRINT_DASHBOARD_ITEM,\n  value: item\n});","import React, { useEffect } from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport TitleBar from '../TitleBar/TitleBar';\nimport ItemGrid from '../ItemGrid/ItemGrid';\nimport FilterBar from '../FilterBar/FilterBar';\nimport DashboardsBar from '../ControlBar/DashboardsBar';\nimport DashboardVerticalOffset from './DashboardVerticalOffset';\nimport { sGetIsEditing } from '../../reducers/editDashboard';\nimport { sGetIsPrinting } from '../../reducers/printDashboard';\nimport { sGetSelectedId } from '../../reducers/selected';\nimport { sGetWindowHeight } from '../../reducers/windowHeight';\nimport { sGetControlBarUserRows } from '../../reducers/controlBar';\nimport { acClearEditDashboard } from '../../actions/editDashboard';\nimport { acClearPrintDashboard } from '../../actions/printDashboard';\nimport { getControlBarHeight, HEADERBAR_HEIGHT } from '../ControlBar/controlBarDimensions';\nexport const ViewDashboard = props => {\n  useEffect(() => {\n    if (props.dashboardIsEditing) {\n      props.clearEditDashboard();\n    } else if (props.dashboardIsPrinting) {\n      props.clearPrintDashboard();\n    }\n  }, [props.dashboardIsEditing, props.dashboardIsPrinting]);\n  useEffect(() => {\n    document.querySelector('.dashboard-wrapper')?.scroll(0, 0);\n  }, [props.selectedId]);\n  const height = props.windowHeight - HEADERBAR_HEIGHT - getControlBarHeight(props.controlBarRows);\n  return <>\n            <DashboardsBar />\n            <DashboardVerticalOffset />\n            <div className=\"dashboard-wrapper\" style={{\n      height\n    }}>\n                <TitleBar edit={false} />\n                <FilterBar />\n                <ItemGrid edit={false} />\n            </div>\n        </>;\n};\nViewDashboard.propTypes = {\n  clearEditDashboard: PropTypes.func,\n  clearPrintDashboard: PropTypes.func,\n  controlBarRows: PropTypes.number,\n  dashboardIsEditing: PropTypes.bool,\n  dashboardIsPrinting: PropTypes.bool,\n  selectedId: PropTypes.string,\n  windowHeight: PropTypes.number\n};\n\nconst mapStateToProps = state => {\n  return {\n    dashboardIsEditing: sGetIsEditing(state),\n    dashboardIsPrinting: sGetIsPrinting(state),\n    controlBarRows: sGetControlBarUserRows(state),\n    selectedId: sGetSelectedId(state),\n    windowHeight: sGetWindowHeight(state)\n  };\n};\n\nexport default connect(mapStateToProps, {\n  clearEditDashboard: acClearEditDashboard,\n  clearPrintDashboard: acClearPrintDashboard\n})(ViewDashboard);","import React from 'react';\nimport PropTypes from 'prop-types';\nimport i18n from '@dhis2/d2-i18n';\nimport { Button, Modal, ModalContent, ModalActions, ButtonStrip, ModalTitle } from '@dhis2/ui';\nimport classes from './styles/ConfirmDeleteDialog.module.css';\nexport const ConfirmDeleteDialog = ({\n  dashboardName,\n  onDeleteConfirmed,\n  onContinueEditing,\n  open\n}) => {\n  const actions = [<Button key=\"cancel\" secondary onClick={onContinueEditing}>\n            {i18n.t('Cancel')}\n        </Button>, <Button key=\"delete\" destructive onClick={onDeleteConfirmed}>\n            {i18n.t('Delete')}\n        </Button>];\n  return open && <Modal onClose={onContinueEditing} small position=\"middle\">\n                <ModalTitle>{i18n.t('Delete dashboard')}</ModalTitle>\n                <ModalContent>\n                    <span className={classes.content}>\n                        {i18n.t('Deleting dashboard \"{{ dashboardName }}\" will remove it for all users. This action cannot be undone. Are you sure you want to permanently delete this dashboard?', {\n          dashboardName\n        })}\n                    </span>\n                </ModalContent>\n                <ModalActions>\n                    <ButtonStrip>{actions}</ButtonStrip>\n                </ModalActions>\n            </Modal>;\n};\nConfirmDeleteDialog.propTypes = {\n  dashboardName: PropTypes.string,\n  open: PropTypes.bool,\n  onContinueEditing: PropTypes.func,\n  onDeleteConfirmed: PropTypes.func\n};\nexport default ConfirmDeleteDialog;","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { Redirect } from 'react-router-dom';\nimport i18n from '@dhis2/d2-i18n';\nimport ControlBar from './ControlBar';\nimport TranslationDialog from '@dhis2/d2-ui-translation-dialog';\nimport { Button, ButtonStrip } from '@dhis2/ui';\nimport ConfirmDeleteDialog from './ConfirmDeleteDialog';\nimport { tSaveDashboard, acClearEditDashboard } from '../../actions/editDashboard';\nimport { acClearPrintDashboard } from '../../actions/printDashboard';\nimport { tDeleteDashboard, acSetDashboardDisplayName } from '../../actions/dashboards';\nimport { sGetEditDashboardRoot, sGetIsNewDashboard, sGetIsPrintPreviewView } from '../../reducers/editDashboard';\nimport { acSetPrintPreviewView, acClearPrintPreviewView } from '../../actions/editDashboard';\nimport { CONTROL_BAR_ROW_HEIGHT, MIN_ROW_COUNT, getControlBarHeight } from './controlBarDimensions';\nimport { apiFetchDashboard } from '../../api/dashboards';\nimport classes from './styles/DashboardsBar.module.css';\nconst buttonBarStyle = {\n  height: CONTROL_BAR_ROW_HEIGHT,\n  paddingTop: '15px',\n  marginLeft: '15px',\n  marginRight: '15px'\n};\nexport class EditBar extends Component {\n  state = {\n    translationDialogIsOpen: false,\n    dashboardModel: undefined,\n    confirmDeleteDialogOpen: false,\n    redirectUrl: undefined\n  };\n  onConfirmDelete = () => {\n    this.setState({\n      confirmDeleteDialogOpen: true\n    });\n  };\n  onSave = () => {\n    this.props.onSave().then(newId => {\n      this.setState({\n        redirectUrl: `/${newId}`\n      });\n    });\n  };\n  onPrintPreview = () => {\n    if (this.props.isPrintPreviewView) {\n      this.props.clearPrintPreview();\n      this.props.clearPrintDashboard();\n    } else {\n      this.props.showPrintPreview();\n    }\n  };\n  onDiscard = () => {\n    this.props.onDiscardChanges();\n    const redirectUrl = this.props.dashboardId ? `/${this.props.dashboardId}` : '/';\n    this.setState({\n      redirectUrl\n    });\n  };\n  onContinueEditing = () => {\n    this.setState({\n      confirmDeleteDialogOpen: false\n    });\n  };\n  onDeleteConfirmed = () => {\n    this.setState({\n      confirmDeleteDialogOpen: false\n    });\n    this.props.onDelete(this.props.dashboardId).then(() => {\n      this.setState({\n        redirectUrl: '/'\n      });\n    });\n  };\n  onTranslationsSaved = async translations => {\n    if (translations && translations.length) {\n      const dbLocale = await this.context.d2.currentUser.userSettings.get('keyDbLocale');\n      const translation = translations.find(t => t.locale === dbLocale && t.property === 'NAME');\n\n      if (translation && translation.value) {\n        this.props.onTranslate(this.props.dashboardId, translation.value);\n      }\n    }\n  };\n  fetchDashboardModel = () => {\n    if (this.props.dashboardId && !this.state.dashboardModel) {\n      apiFetchDashboard(this.props.dashboardId).then(dashboardModel => this.setState({\n        dashboardModel\n      }));\n    }\n  };\n\n  componentDidMount() {\n    this.fetchDashboardModel();\n  }\n\n  componentDidUpdate() {\n    this.fetchDashboardModel();\n  }\n\n  toggleTranslationDialog = () => {\n    this.setState({\n      translationDialogIsOpen: !this.state.translationDialogIsOpen\n    });\n  };\n  confirmDeleteDialog = () => this.props.deleteAccess && this.props.dashboardId ? <ConfirmDeleteDialog dashboardName={this.props.dashboardName} onDeleteConfirmed={this.onDeleteConfirmed} onContinueEditing={this.onContinueEditing} open={this.state.confirmDeleteDialogOpen} /> : null;\n  translationDialog = () => this.state.dashboardModel && this.state.dashboardModel.id ? <TranslationDialog className=\"translation-dialog\" d2={this.context.d2} open={this.state.translationDialogIsOpen} onRequestClose={this.toggleTranslationDialog} objectToTranslate={this.state.dashboardModel} fieldsToTranslate={['name', 'description']} // TODO handle messages in snackbar\n  onTranslationSaved={this.onTranslationsSaved} onTranslationError={err => console.log('translation update error', err)} /> : null;\n  renderActionButtons = () => {\n    const printPreviewText = this.props.isPrintPreviewView ? i18n.t('Exit Print preview') : i18n.t('Print preview');\n    return <div className={classes.leftControls}>\n                <ButtonStrip>\n                    {!this.props.isPrintPreviewView && <Button primary onClick={this.onSave}>\n                            {i18n.t('Save changes')}\n                        </Button>}\n                    <Button onClick={this.onPrintPreview}>\n                        {printPreviewText}\n                    </Button>\n\n                    {!this.props.isPrintPreviewView && this.props.dashboardId ? <Button onClick={this.toggleTranslationDialog}>\n                            {i18n.t('Translate')}\n                        </Button> : null}\n                    {!this.props.isPrintPreviewView && this.props.dashboardId && this.props.deleteAccess ? <Button onClick={this.onConfirmDelete}>\n                            {i18n.t('Delete')}\n                        </Button> : null}\n                </ButtonStrip>\n            </div>;\n  };\n\n  render() {\n    if (this.state.redirectUrl) {\n      return <Redirect to={this.state.redirectUrl} />;\n    }\n\n    const {\n      updateAccess\n    } = this.props;\n    const controlBarHeight = getControlBarHeight(MIN_ROW_COUNT);\n    const discardBtnText = updateAccess ? i18n.t('Exit without saving') : i18n.t('Go to dashboards');\n    return <>\n                <ControlBar height={controlBarHeight} editMode={true}>\n                    <div style={buttonBarStyle}>\n                        {updateAccess ? this.renderActionButtons() : null}\n\n                        {!this.props.isPrintPreviewView && <div className={classes.rightControls}>\n                                <Button secondary onClick={this.onDiscard}>\n                                    {discardBtnText}\n                                </Button>\n                            </div>}\n                    </div>\n                </ControlBar>\n                <div className={classes.topMargin} />\n                {this.translationDialog()}\n                {this.confirmDeleteDialog()}\n            </>;\n  }\n\n}\nEditBar.propTypes = {\n  clearPrintDashboard: PropTypes.func,\n  clearPrintPreview: PropTypes.func,\n  dashboardId: PropTypes.string,\n  dashboardName: PropTypes.string,\n  deleteAccess: PropTypes.bool,\n  isPrintPreviewView: PropTypes.bool,\n  showPrintPreview: PropTypes.func,\n  updateAccess: PropTypes.bool,\n  onDelete: PropTypes.func,\n  onDiscardChanges: PropTypes.func,\n  onSave: PropTypes.func,\n  onTranslate: PropTypes.func\n};\nEditBar.contextTypes = {\n  d2: PropTypes.object\n};\n\nconst mapStateToProps = state => {\n  const dashboard = sGetEditDashboardRoot(state);\n  let deleteAccess;\n  let updateAccess;\n\n  if (sGetIsNewDashboard(state)) {\n    deleteAccess = true;\n    updateAccess = true;\n  } else {\n    updateAccess = dashboard.access ? dashboard.access.update : false;\n    deleteAccess = dashboard.access ? dashboard.access.delete : false;\n  }\n\n  return {\n    dashboardId: dashboard.id,\n    dashboardName: dashboard.name,\n    deleteAccess,\n    isPrintPreviewView: sGetIsPrintPreviewView(state),\n    updateAccess\n  };\n};\n\nconst mapDispatchToProps = dispatch => ({\n  clearPrintDashboard: () => dispatch(acClearPrintDashboard()),\n  clearPrintPreview: () => dispatch(acClearPrintPreviewView()),\n  onSave: () => dispatch(tSaveDashboard()).then(id => id),\n  onDelete: id => dispatch(tDeleteDashboard(id)),\n  onDiscardChanges: () => dispatch(acClearEditDashboard()),\n  onTranslate: (id, value) => dispatch(acSetDashboardDisplayName(id, value)),\n  showPrintPreview: () => dispatch(acSetPrintPreviewView())\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(EditBar);","import React from 'react';\nimport PropTypes from 'prop-types';\nimport i18n from '@dhis2/d2-i18n';\nimport { a4LandscapeWidthPx } from '../ItemGrid/gridUtil';\nimport classes from './styles/PrintInfo.module.css';\n\nconst PrintInfo = ({\n  isLayout\n}) => {\n  const maxWidth = a4LandscapeWidthPx < window.innerWidth ? a4LandscapeWidthPx : window.innerWidth;\n  const infoHeader = isLayout ? i18n.t('dashboard layout') : i18n.t('one item per page');\n  return <div className={classes.infoWrapper}>\n            <p className={classes.infoHeader}>\n                {`${i18n.t('Print Preview')}: ${infoHeader}`}\n            </p>\n            <div style={{\n      maxWidth\n    }}>\n                <p className={classes.info}>\n                    {`${i18n.t('For best print results')}:`}\n                </p>\n                <div className={classes.info}>\n                    <ul className={classes.infoList}>\n                        <li>{i18n.t('Use Chrome or Edge web browser')}</li>\n                        <li>\n                            {i18n.t('Wait for all dashboard items to load before printing')}\n                        </li>\n                        <li>\n                            {i18n.t('Use A4 landscape paper size and default margin settings in the browser print dialog')}\n                        </li>\n                    </ul>\n                </div>\n            </div>\n            <hr className={classes.divider} />\n        </div>;\n};\n\nPrintInfo.propTypes = {\n  isLayout: PropTypes.bool\n};\nexport default PrintInfo;","import React from 'react';\nimport { colors } from '@dhis2/ui';\n\nconst LessHorizontalIcon = () => <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" fill={colors.grey600} viewBox=\"0 0 24 24\">\n        <path d=\"m13.2928932 6.29289322c.3905243-.39052429 1.0236893-.39052429 1.4142136 0 .3604839.36048396.3882135.92771502.0831886 1.32000622l-.0831886.09420734-4.2921068 4.29289322 4.2921068 4.2928932c.3604839.360484.3882135.927715.0831886 1.3200062l-.0831886.0942074c-.360484.3604839-.927715.3882135-1.3200062.0831886l-.0942074-.0831886-4.99999998-5c-.36048396-.360484-.3882135-.927715-.08318861-1.3200062l.08318861-.0942074z\" />\n    </svg>;\n\nexport default LessHorizontalIcon;","import React from 'react';\nimport PropTypes from 'prop-types';\nimport i18n from '@dhis2/d2-i18n';\nimport { Button } from '@dhis2/ui';\nimport { Link } from 'react-router-dom';\nimport LessHorizontalIcon from '../../icons/LessHorizontal';\nimport { a4LandscapeWidthPx } from '../ItemGrid/gridUtil';\nimport classes from './styles/PrintActionsBar.module.css'; // 42px set in the module css file\n\nexport const PRINT_ACTIONS_BAR_HEIGHT = 42;\n\nconst PrintActionsBar = ({\n  id\n}) => {\n  const width = a4LandscapeWidthPx < window.innerWidth ? a4LandscapeWidthPx : window.innerWidth;\n  return <>\n            <div className={classes.container}>\n                <div className={classes.inner} style={{\n        width\n      }}>\n                    <Link className={classes.link} to={`/${id}`}>\n                        <Button>\n                            <LessHorizontalIcon />\n                            {i18n.t('Exit print preview')}\n                        </Button>\n                    </Link>\n                    <Button onClick={window.print}>{i18n.t('Print')}</Button>\n                </div>\n            </div>\n            <div className={classes.topMargin} />\n        </>;\n};\n\nPrintActionsBar.propTypes = {\n  id: PropTypes.string\n};\nexport default PrintActionsBar;","import sortBy from 'lodash/sortBy';\nimport { orArray } from './util';\nimport { itemTypeMap } from './itemTypes';\nexport const getTransformYPx = elStyle => {\n  if (!elStyle || !elStyle.transform) {\n    return null;\n  } // find valid transforms - those with y pixels\n  // the code is expecting the transform prop to\n  // look like:  translate(10px, 300px)\n\n\n  const transformY = elStyle.transform.split(' ')[1]?.match(/(\\d+)px/);\n\n  if (transformY) {\n    return parseInt(transformY[1]);\n  } else {\n    return null;\n  }\n};\nexport const getDomGridItemsSortedByYPos = elements => {\n  const types = Object.keys(itemTypeMap);\n  const elementsWithBoundingRect = orArray(elements).map(el => {\n    const type = Array.from(el.classList).find(className => types.indexOf(className) > -1);\n    const rect = el.getBoundingClientRect();\n    const y = getTransformYPx(el.style) || parseInt(rect.y);\n    return {\n      type,\n      classList: el.classList,\n      bottomY: y + parseInt(rect.height),\n      el\n    };\n  });\n  return sortBy(elementsWithBoundingRect, ['bottomY']);\n};","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport i18n from '@dhis2/d2-i18n';\nimport sortBy from 'lodash/sortBy';\nimport ReactGridLayout from 'react-grid-layout';\nimport { Layer, CenteredContent, CircularLoader } from '@dhis2/ui';\nimport cx from 'classnames';\nimport { Item } from '../Item/Item';\nimport NoContentMessage from '../../widgets/NoContentMessage';\nimport { acUpdatePrintDashboardLayout } from '../../actions/printDashboard';\nimport { sGetSelectedIsLoading } from '../../reducers/selected';\nimport { sGetPrintDashboardRoot, sGetPrintDashboardItems } from '../../reducers/printDashboard';\nimport { sGetIsEditing } from '../../reducers/editDashboard';\nimport { GRID_ROW_HEIGHT, GRID_COMPACT_TYPE, MARGIN, getGridColumns, hasShape, a4LandscapeWidthPx } from './gridUtil';\nimport { getDomGridItemsSortedByYPos, getTransformYPx } from '../../modules/printUtils';\nimport { PRINT_LAYOUT } from '../Dashboard/dashboardModes';\nimport { PAGEBREAK } from '../../modules/itemTypes';\nimport 'react-grid-layout/css/styles.css';\nimport 'react-resizable/css/styles.css';\nimport './ItemGrid.css'; // this is set in the .dashboard-item-content css\n\nexport const ITEM_CONTENT_PADDING_BOTTOM = 4;\nexport class PrintLayoutItemGrid extends Component {\n  onLayoutChange = newLayout => {\n    this.props.updateDashboardLayout(newLayout);\n  };\n  isFirstPageBreak = item => {\n    if (item.type !== PAGEBREAK) {\n      return false;\n    }\n\n    const pageBreaks = this.props.dashboardItems.filter(i => i.type === PAGEBREAK);\n    const sortedPageBreaks = sortBy(pageBreaks, ['y']);\n    return item.y === sortedPageBreaks[0].y;\n  };\n  getItemComponent = item => {\n    // the first-page-break class is used in Edit print preview\n    const itemClassNames = cx('print', 'layout', `${item.type}`, {\n      'first-page-break': this.props.isEditing && this.isFirstPageBreak(item),\n      shortened: !!item.shortened\n    });\n    return <div key={item.i} className={itemClassNames}>\n                <Item item={item} dashboardMode={PRINT_LAYOUT} />\n            </div>;\n  };\n  getItemComponents = items => items.map(item => this.getItemComponent(item));\n\n  hideExtraPageBreaks() {\n    const sortedElements = getDomGridItemsSortedByYPos(Array.from(document.querySelectorAll('.react-grid-item')));\n    let pageBreakBottom = 0;\n    let lastItemBottom = 0;\n    let foundNonPageBreak = false;\n\n    for (let i = sortedElements.length - 1; i >= 0; --i) {\n      const item = sortedElements[i];\n\n      if (item.type === PAGEBREAK) {\n        if (!foundNonPageBreak) {\n          item.el.classList.add('removed');\n        } else {\n          pageBreakBottom = item.bottomY;\n          break;\n        }\n      } else {\n        foundNonPageBreak = true;\n        const thisItemBottom = item.bottomY;\n\n        if (thisItemBottom > lastItemBottom) {\n          lastItemBottom = thisItemBottom;\n        }\n      }\n    }\n\n    const pageHeight = 720;\n    const gridElement = document.querySelector('.react-grid-layout'); // the last page break is before the last item(s) so\n    // maxHeight is one page beyond the last page break\n\n    const maxHeight = pageBreakBottom + pageHeight;\n\n    if (gridElement) {\n      gridElement.style.height = `${maxHeight}px`;\n    }\n\n    if (this.props.isEditing) {\n      //scroll to below the title page - which is middle of the first pagebreak\n      const firstBreak = document.querySelector('.first-page-break');\n\n      if (firstBreak && firstBreak.style && firstBreak.style.transform) {\n        const yPos = getTransformYPx(firstBreak.style);\n        const scrollArea = document.querySelector('.scroll-area');\n        scrollArea && scrollArea.scroll(0, yPos + 50);\n      }\n    }\n  }\n\n  componentDidMount() {\n    this.hideExtraPageBreaks();\n  }\n\n  componentDidUpdate() {\n    this.hideExtraPageBreaks();\n  }\n\n  render() {\n    const {\n      isLoading,\n      dashboardItems\n    } = this.props;\n\n    if (!isLoading && !dashboardItems.length) {\n      return <NoContentMessage text={i18n.t('There are no items on this dashboard')} />;\n    }\n\n    const width = a4LandscapeWidthPx < window.innerWidth ? a4LandscapeWidthPx : window.innerWidth;\n    return <div className=\"grid-wrapper\">\n                {isLoading ? <Layer translucent>\n                        <CenteredContent>\n                            <CircularLoader />\n                        </CenteredContent>\n                    </Layer> : null}\n                <ReactGridLayout onLayoutChange={this.onLayoutChange} className=\"layout\" layout={dashboardItems} margin={MARGIN} cols={getGridColumns()} rowHeight={GRID_ROW_HEIGHT} width={width} compactType={GRID_COMPACT_TYPE} isDraggable={false} isResizable={false} draggableCancel=\"input,textarea\">\n                    {this.getItemComponents(dashboardItems)}\n                </ReactGridLayout>\n            </div>;\n  }\n\n}\nPrintLayoutItemGrid.propTypes = {\n  dashboardItems: PropTypes.array,\n  isEditing: PropTypes.bool,\n  isLoading: PropTypes.bool,\n  updateDashboardLayout: PropTypes.func\n};\nPrintLayoutItemGrid.defaultProps = {\n  dashboardItems: []\n};\n\nconst mapStateToProps = state => {\n  const selectedDashboard = sGetPrintDashboardRoot(state);\n  return {\n    isLoading: sGetSelectedIsLoading(state) || !selectedDashboard,\n    dashboardItems: sGetPrintDashboardItems(state).filter(hasShape),\n    isEditing: sGetIsEditing(state)\n  };\n};\n\nexport default connect(mapStateToProps, {\n  updateDashboardLayout: acUpdatePrintDashboardLayout\n})(PrintLayoutItemGrid);","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { spacers } from '@dhis2/ui';\nimport cx from 'classnames';\nimport PrintInfo from './PrintInfo';\nimport PrintActionsBar from './PrintActionsBar';\nimport PrintLayoutItemGrid from '../ItemGrid/PrintLayoutItemGrid';\nimport { acSetPrintDashboard, acAddPrintDashboardItem, acUpdatePrintDashboardItem } from '../../actions/printDashboard';\nimport { sGetSelectedId } from '../../reducers/selected';\nimport { sGetWindowHeight } from '../../reducers/windowHeight';\nimport { sGetEditDashboardRoot, sGetEditDashboardItems } from '../../reducers/editDashboard';\nimport { sGetDashboardById, sGetDashboardItems } from '../../reducers/dashboards';\nimport { PAGEBREAK, PRINT_TITLE_PAGE } from '../../modules/itemTypes';\nimport { a4LandscapeWidthPx, MAX_ITEM_GRID_HEIGHT } from '../ItemGrid/gridUtil';\nimport { getControlBarHeight, HEADERBAR_HEIGHT } from '../ControlBar/controlBarDimensions';\nimport { PRINT_ACTIONS_BAR_HEIGHT } from './PrintActionsBar';\nimport { DRAG_HANDLE_HEIGHT } from '../ControlBar/ControlBar';\nimport classes from './styles/PrintLayoutDashboard.module.css';\nimport './styles/print.css';\nimport './styles/print-layout.css';\nconst EDIT_BAR_HEIGHT = getControlBarHeight(1) + DRAG_HANDLE_HEIGHT;\n\nconst isLeapPage = n => {\n  // pages 5,9,13,17,21,25,29... are leap pages\n  let x = 0;\n  const startPage = 1;\n\n  const getMultiple = factor => startPage + 4 * factor;\n\n  let multiple = getMultiple(0);\n  let isLeapPage = false;\n\n  while (multiple < n) {\n    multiple = getMultiple(x);\n    ++x;\n\n    if (multiple === n) {\n      isLeapPage = true;\n      break;\n    }\n  }\n\n  return isLeapPage;\n};\n\nconst addPageBreaks = ({\n  items,\n  addDashboardItem\n}) => {\n  // add enough page breaks so that each item could\n  // be put on its own page. Due to the react-grid-layout\n  // unit system, we have to estimate roughly the size of each\n  // page. At regular intervals add a unit, like a leap year\n  let yPos = 0;\n  const yPosList = [];\n\n  for (let pageNum = 1; pageNum <= items.length; ++pageNum) {\n    if (pageNum === 1) {\n      yPos += 35;\n    } else if (isLeapPage(pageNum)) {\n      yPos += 40;\n    } else {\n      yPos += 39;\n    }\n\n    yPosList.push(yPos);\n  }\n\n  for (let i = 0; i < items.length; ++i) {\n    addDashboardItem({\n      type: PAGEBREAK,\n      yPos: yPosList[i]\n    });\n  }\n};\n\nexport class PrintLayoutDashboard extends Component {\n  state = {\n    initialized: false\n  };\n  initPrintLayoutDashboard = () => {\n    if (this.props.dashboard) {\n      this.setState({\n        initialized: true\n      });\n      this.props.setPrintDashboard(this.props.dashboard, this.props.items); // If any items are taller than one page, reduce it to one\n      // page (react-grid-layout units)\n\n      this.props.items.forEach(item => {\n        if (item.h > MAX_ITEM_GRID_HEIGHT) {\n          item.shortened = true;\n          this.props.updateDashboardItem(Object.assign({}, item, {\n            h: MAX_ITEM_GRID_HEIGHT\n          }));\n        }\n      });\n      addPageBreaks(this.props);\n      this.props.addDashboardItem({\n        type: PRINT_TITLE_PAGE,\n        isOneItemPerPage: false\n      });\n    }\n  };\n\n  componentDidMount() {\n    this.initPrintLayoutDashboard();\n  }\n\n  componentDidUpdate() {\n    if (!this.state.initialized) {\n      this.initPrintLayoutDashboard();\n    }\n  }\n\n  getWrapperStyle = () => {\n    return this.props.fromEdit ? {\n      paddingTop: spacers.dp24,\n      height: this.props.windowHeight - EDIT_BAR_HEIGHT - HEADERBAR_HEIGHT\n    } : {\n      height: this.props.windowHeight - PRINT_ACTIONS_BAR_HEIGHT\n    };\n  };\n\n  render() {\n    return <>\n                {!this.props.fromEdit && <PrintActionsBar id={this.props.dashboard.id} />}\n                <div className={cx(classes.wrapper, 'scroll-area')} style={this.getWrapperStyle()}>\n                    {!this.props.fromEdit && <PrintInfo isLayout={true} />}\n                    <div className={classes.pageOuter} style={{\n          width: a4LandscapeWidthPx\n        }}>\n                        <PrintLayoutItemGrid />\n                    </div>\n                </div>\n            </>;\n  }\n\n}\nPrintLayoutDashboard.propTypes = {\n  addDashboardItem: PropTypes.func,\n  dashboard: PropTypes.object,\n  fromEdit: PropTypes.bool,\n  items: PropTypes.array,\n  setPrintDashboard: PropTypes.func,\n  updateDashboardItem: PropTypes.func,\n  windowHeight: PropTypes.number\n};\n\nconst mapStateToProps = (state, ownProps) => {\n  const id = sGetSelectedId(state);\n\n  if (ownProps.fromEdit) {\n    const dashboard = sGetEditDashboardRoot(state);\n    return {\n      dashboard,\n      id,\n      items: sGetEditDashboardItems(state),\n      windowHeight: sGetWindowHeight(state)\n    };\n  }\n\n  const dashboard = id ? sGetDashboardById(state, id) : null;\n  return {\n    dashboard,\n    id,\n    items: sGetDashboardItems(state),\n    windowHeight: sGetWindowHeight(state)\n  };\n};\n\nexport default connect(mapStateToProps, {\n  setPrintDashboard: acSetPrintDashboard,\n  addDashboardItem: acAddPrintDashboardItem,\n  updateDashboardItem: acUpdatePrintDashboardItem\n})(PrintLayoutDashboard);","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport i18n from '@dhis2/d2-i18n';\nimport PropTypes from 'prop-types';\nimport TitleBar from '../TitleBar/TitleBar';\nimport ItemGrid from '../ItemGrid/ItemGrid';\nimport EditBar from '../ControlBar/EditBar';\nimport LayoutPrintPreview from './PrintLayoutDashboard';\nimport NoContentMessage from '../../widgets/NoContentMessage';\nimport { acSetEditDashboard } from '../../actions/editDashboard';\nimport { sGetWindowHeight } from '../../reducers/windowHeight';\nimport { sGetSelectedId } from '../../reducers/selected';\nimport { sGetDashboardById, sGetDashboardItems } from '../../reducers/dashboards';\nimport { sGetIsPrintPreviewView } from '../../reducers/editDashboard';\nimport { getControlBarHeight, HEADERBAR_HEIGHT } from '../ControlBar/controlBarDimensions';\nexport class EditDashboard extends Component {\n  state = {\n    initialized: false\n  };\n  initEditDashboard = () => {\n    if (this.props.dashboard) {\n      this.setState({\n        initialized: true\n      });\n      this.props.setEditDashboard(this.props.dashboard, this.props.items);\n    }\n  };\n\n  componentDidMount() {\n    this.initEditDashboard();\n  }\n\n  componentDidUpdate() {\n    if (!this.state.initialized) {\n      this.initEditDashboard();\n    }\n  }\n\n  renderGrid = () => {\n    if (this.props.isPrintPreviewView) {\n      return <LayoutPrintPreview fromEdit={true} />;\n    }\n\n    const height = this.props.windowHeight - HEADERBAR_HEIGHT - getControlBarHeight(1);\n    return <div className=\"dashboard-wrapper\" style={{\n      height\n    }}>\n                <TitleBar edit={true} />\n                <ItemGrid edit={true} />\n            </div>;\n  };\n\n  render() {\n    return <>\n                <EditBar />\n                {this.props.updateAccess ? this.renderGrid() : <NoContentMessage text={i18n.t('No access')} />}\n            </>;\n  }\n\n}\nEditDashboard.propTypes = {\n  dashboard: PropTypes.object,\n  isPrintPreviewView: PropTypes.bool,\n  items: PropTypes.array,\n  setEditDashboard: PropTypes.func,\n  updateAccess: PropTypes.bool,\n  windowHeight: PropTypes.number\n};\n\nconst mapStateToProps = state => {\n  const id = sGetSelectedId(state);\n  const dashboard = id ? sGetDashboardById(state, id) : null;\n  const updateAccess = dashboard && dashboard.access ? dashboard.access.update : false;\n  return {\n    dashboard,\n    updateAccess,\n    items: sGetDashboardItems(state),\n    isPrintPreviewView: sGetIsPrintPreviewView(state),\n    windowHeight: sGetWindowHeight(state)\n  };\n};\n\nexport default connect(mapStateToProps, {\n  setEditDashboard: acSetEditDashboard\n})(EditDashboard);","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport EditBar from '../ControlBar/EditBar';\nimport TitleBar from '../TitleBar/TitleBar';\nimport ItemGrid from '../ItemGrid/ItemGrid';\nimport LayoutPrintPreview from './PrintLayoutDashboard';\nimport { acSetEditNewDashboard } from '../../actions/editDashboard';\nimport { sGetIsPrintPreviewView } from '../../reducers/editDashboard';\nimport { sGetWindowHeight } from '../../reducers/windowHeight';\nimport { getControlBarHeight, HEADERBAR_HEIGHT } from '../ControlBar/controlBarDimensions';\n\nclass NewDashboard extends Component {\n  componentDidMount() {\n    this.props.setNewDashboard();\n  }\n\n  render() {\n    const height = this.props.windowHeight - HEADERBAR_HEIGHT - getControlBarHeight(1);\n    return <>\n                <EditBar />\n                {this.props.isPrintPreviewView ? <LayoutPrintPreview fromEdit={true} /> : <div className=\"dashboard-wrapper\" style={{\n        height\n      }}>\n                        <TitleBar edit={true} />\n                        <ItemGrid edit={true} />\n                    </div>}\n            </>;\n  }\n\n}\n\nNewDashboard.propTypes = {\n  isPrintPreviewView: PropTypes.bool,\n  setNewDashboard: PropTypes.func,\n  windowHeight: PropTypes.number\n};\n\nconst mapStateToProps = state => ({\n  isPrintPreviewView: sGetIsPrintPreviewView(state),\n  windowHeight: sGetWindowHeight(state)\n});\n\nexport default connect(mapStateToProps, {\n  setNewDashboard: acSetEditNewDashboard\n})(NewDashboard);","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport i18n from '@dhis2/d2-i18n';\nimport ReactGridLayout from 'react-grid-layout';\nimport { Layer, CenteredContent, CircularLoader } from '@dhis2/ui';\nimport cx from 'classnames';\nimport { Item } from '../Item/Item';\nimport NoContentMessage from '../../widgets/NoContentMessage';\nimport { PRINT } from '../Dashboard/dashboardModes';\nimport { sGetSelectedIsLoading } from '../../reducers/selected';\nimport { sGetPrintDashboardRoot, sGetPrintDashboardItems } from '../../reducers/printDashboard';\nimport { GRID_ROW_HEIGHT, GRID_COMPACT_TYPE, MARGIN, getGridColumns, hasShape, a4LandscapeWidthPx } from './gridUtil';\nimport { orArray } from '../../modules/util';\nimport 'react-grid-layout/css/styles.css';\nimport './ItemGrid.css';\nexport class PrintItemGrid extends Component {\n  getItemComponent = item => <div key={item.i} className={cx(item.type, 'print', 'oipp')}>\n            <Item item={item} dashboardMode={PRINT} />\n        </div>;\n  getItemComponents = items => items.map(item => this.getItemComponent(item));\n\n  render() {\n    const {\n      isLoading,\n      dashboardItems\n    } = this.props;\n\n    if (!isLoading && !dashboardItems.length) {\n      return <NoContentMessage text={i18n.t('There are no items on this dashboard')} />;\n    }\n\n    const width = a4LandscapeWidthPx < window.innerWidth ? a4LandscapeWidthPx : window.innerWidth;\n    return <>\n                {isLoading ? <Layer translucent>\n                        <CenteredContent>\n                            <CircularLoader />\n                        </CenteredContent>\n                    </Layer> : null}\n                <ReactGridLayout className=\"layout print\" layout={dashboardItems} margin={MARGIN} cols={getGridColumns()} rowHeight={GRID_ROW_HEIGHT} width={width} compactType={GRID_COMPACT_TYPE} isDraggable={false} isResizable={false} draggableCancel=\"input,textarea\">\n                    {this.getItemComponents(dashboardItems)}\n                </ReactGridLayout>\n            </>;\n  }\n\n}\nPrintItemGrid.propTypes = {\n  dashboardItems: PropTypes.array,\n  isLoading: PropTypes.bool\n};\nPrintItemGrid.defaultProps = {\n  dashboardItems: []\n};\n\nconst mapStateToProps = state => {\n  const selectedDashboard = sGetPrintDashboardRoot(state);\n  return {\n    isLoading: sGetSelectedIsLoading(state) || !selectedDashboard,\n    dashboardItems: orArray(sGetPrintDashboardItems(state)).filter(hasShape)\n  };\n};\n\nexport default connect(mapStateToProps)(PrintItemGrid);","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport sortBy from 'lodash/sortBy';\nimport PrintInfo from './PrintInfo';\nimport PrintActionsBar from './PrintActionsBar';\nimport PrintItemGrid from '../ItemGrid/PrintItemGrid';\nimport { acSetPrintDashboard, acAddPrintDashboardItem, acRemovePrintDashboardItem, acUpdatePrintDashboardItem } from '../../actions/printDashboard';\nimport { sGetSelectedId } from '../../reducers/selected';\nimport { sGetWindowHeight } from '../../reducers/windowHeight';\nimport { sGetDashboardById, sGetDashboardItems } from '../../reducers/dashboards';\nimport { PAGEBREAK, PRINT_TITLE_PAGE, SPACER } from '../../modules/itemTypes';\nimport { a4LandscapeWidthPx, MAX_ITEM_GRID_HEIGHT_OIPP, MAX_ITEM_GRID_WIDTH_OIPP } from '../ItemGrid/gridUtil';\nimport { PRINT_ACTIONS_BAR_HEIGHT } from './PrintActionsBar';\nimport classes from './styles/PrintDashboard.module.css';\nimport './styles/print.css';\nimport './styles/print-oipp.css';\nexport class PrintDashboard extends Component {\n  state = {\n    initialized: false\n  };\n  initPrintDashboard = () => {\n    if (this.props.dashboard) {\n      this.setState({\n        initialized: true\n      }); //sort the items by Y pos so they print in order of top to bottom\n\n      const sortedItems = sortBy(this.props.items, ['y', 'x']);\n      this.props.setPrintDashboard(this.props.dashboard, sortedItems); // remove spacers - don't want empty pages\n\n      let spacerCount = 0;\n      this.props.items.forEach(item => {\n        if (item.type === SPACER) {\n          spacerCount += 1;\n          this.props.removeDashboardItem(item.id);\n        }\n      }); // Resize the items to the full page size\n\n      this.props.items.forEach(item => {\n        this.props.updateDashboardItem(Object.assign({}, item, {\n          w: MAX_ITEM_GRID_WIDTH_OIPP,\n          h: MAX_ITEM_GRID_HEIGHT_OIPP\n        }));\n      }); // insert page breaks into the document flow to create the \"pages\"\n      // when previewing the print\n\n      for (let i = 0; i < (this.props.items.length - spacerCount) * 2; i += 2) {\n        this.props.addDashboardItem({\n          type: PAGEBREAK,\n          position: i,\n          isStatic: false\n        });\n      }\n\n      this.props.addDashboardItem({\n        type: PRINT_TITLE_PAGE,\n        isOneItemPerPage: true\n      });\n    }\n  };\n\n  componentDidMount() {\n    this.initPrintDashboard();\n  }\n\n  componentDidUpdate() {\n    if (!this.state.initialized) {\n      this.initPrintDashboard();\n    }\n  }\n\n  render() {\n    const height = this.props.windowHeight - PRINT_ACTIONS_BAR_HEIGHT;\n    return <>\n                <PrintActionsBar id={this.props.dashboard.id} />\n                <div className={classes.wrapper} style={{\n        height\n      }}>\n                    <PrintInfo isLayout={false} />\n                    <div className={classes.pageOuter} style={{\n          width: a4LandscapeWidthPx\n        }}>\n                        <PrintItemGrid />\n                    </div>\n                </div>\n            </>;\n  }\n\n}\nPrintDashboard.propTypes = {\n  addDashboardItem: PropTypes.func,\n  dashboard: PropTypes.object,\n  items: PropTypes.array,\n  removeDashboardItem: PropTypes.func,\n  setPrintDashboard: PropTypes.func,\n  updateDashboardItem: PropTypes.func,\n  windowHeight: PropTypes.number\n};\n\nconst mapStateToProps = state => {\n  const id = sGetSelectedId(state);\n  const dashboard = id ? sGetDashboardById(state, id) : null;\n  return {\n    dashboard,\n    id,\n    items: sGetDashboardItems(state),\n    windowHeight: sGetWindowHeight(state)\n  };\n};\n\nexport default connect(mapStateToProps, {\n  setPrintDashboard: acSetPrintDashboard,\n  addDashboardItem: acAddPrintDashboardItem,\n  removeDashboardItem: acRemovePrintDashboardItem,\n  updateDashboardItem: acUpdatePrintDashboardItem\n})(PrintDashboard);","import { SET_WINDOW_HEIGHT } from '../reducers/windowHeight';\nexport const acSetWindowHeight = value => ({\n  type: SET_WINDOW_HEIGHT,\n  value\n});","import React, { useEffect } from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport isEmpty from 'lodash/isEmpty';\nimport i18n from '@dhis2/d2-i18n';\nimport { Layer, CenteredContent, CircularLoader } from '@dhis2/ui';\nimport debounce from 'lodash/debounce';\nimport DashboardsBar from '../ControlBar/DashboardsBar';\nimport DashboardVerticalOffset from './DashboardVerticalOffset';\nimport NoContentMessage from '../../widgets/NoContentMessage';\nimport ViewDashboard from './ViewDashboard';\nimport EditDashboard from './EditDashboard';\nimport NewDashboard from './NewDashboard';\nimport PrintDashboard from './PrintDashboard';\nimport PrintLayoutDashboard from './PrintLayoutDashboard';\nimport { tSelectDashboard } from '../../actions/dashboards';\nimport { acSetWindowHeight } from '../../actions/windowHeight';\nimport { sDashboardsIsFetching, sGetAllDashboards } from '../../reducers/dashboards';\nimport { sGetSelectedId, NON_EXISTING_DASHBOARD_ID } from '../../reducers/selected';\nimport { EDIT, NEW, VIEW, PRINT, PRINT_LAYOUT, isPrintMode } from './dashboardModes';\n\nconst setHeaderbarVisibility = mode => {\n  const header = document.getElementsByTagName('header')[0];\n\n  if (isPrintMode(mode)) {\n    header.classList.add('hidden');\n  } else {\n    header.classList.remove('hidden');\n  }\n};\n\nconst dashboardMap = {\n  [VIEW]: <ViewDashboard />,\n  [EDIT]: <EditDashboard />,\n  [NEW]: <NewDashboard />,\n  [PRINT]: <PrintDashboard />,\n  [PRINT_LAYOUT]: <PrintLayoutDashboard />\n};\nexport const Dashboard = ({\n  id,\n  mode,\n  dashboardsLoaded,\n  dashboardsIsEmpty,\n  routeId,\n  selectDashboard,\n  setWindowHeight\n}) => {\n  useEffect(() => {\n    setHeaderbarVisibility(mode);\n  }, [mode]);\n  useEffect(() => {\n    if (dashboardsLoaded && !dashboardsIsEmpty) {\n      selectDashboard(routeId);\n    }\n  }, [dashboardsLoaded, dashboardsIsEmpty, routeId]);\n  useEffect(() => {\n    const onResize = debounce(() => setWindowHeight(window.innerHeight), 300);\n    window.addEventListener('resize', onResize);\n    return () => {\n      window.removeEventListener('resize', onResize);\n    };\n  }, []);\n\n  if (!dashboardsLoaded) {\n    return <Layer translucent>\n                <CenteredContent>\n                    <CircularLoader />\n                </CenteredContent>\n            </Layer>;\n  }\n\n  if (mode === NEW) {\n    return dashboardMap[mode];\n  }\n\n  if (dashboardsIsEmpty) {\n    return <>\n                <DashboardsBar />\n                <DashboardVerticalOffset />\n                <NoContentMessage text={i18n.t('No dashboards found. Use the + button to create a new dashboard.')} />\n            </>;\n  }\n\n  if (id === NON_EXISTING_DASHBOARD_ID) {\n    return <>\n                <DashboardsBar />\n                <DashboardVerticalOffset />\n                <NoContentMessage text={i18n.t('Requested dashboard not found')} />\n            </>;\n  }\n\n  if (id === null) {\n    return <Layer translucent>\n                <CenteredContent>\n                    <CircularLoader />\n                </CenteredContent>\n            </Layer>;\n  }\n\n  return dashboardMap[mode];\n};\nDashboard.propTypes = {\n  dashboardsIsEmpty: PropTypes.bool,\n  dashboardsLoaded: PropTypes.bool,\n  id: PropTypes.string,\n  match: PropTypes.object,\n  // provided by the react-router-dom\n  mode: PropTypes.string,\n  routeId: PropTypes.string,\n  selectDashboard: PropTypes.func,\n  setWindowHeight: PropTypes.func\n};\n\nconst mapStateToProps = (state, ownProps) => {\n  const dashboards = sGetAllDashboards(state);\n  return {\n    dashboardsIsEmpty: isEmpty(dashboards),\n    dashboardsLoaded: !sDashboardsIsFetching(state),\n    id: sGetSelectedId(state),\n    routeId: ownProps.match?.params?.dashboardId || null\n  };\n};\n\nexport default connect(mapStateToProps, {\n  selectDashboard: tSelectDashboard,\n  setWindowHeight: acSetWindowHeight\n})(Dashboard);","import React, { Component } from 'react';\nimport { HashRouter as Router, Route, Switch } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport i18n from '@dhis2/d2-i18n';\nimport { CssVariables } from '@dhis2/ui';\nimport { EDIT, VIEW, NEW, PRINT, PRINT_LAYOUT } from './Dashboard/dashboardModes';\nimport { acReceivedUser } from '../actions/user';\nimport { tFetchDashboards } from '../actions/dashboards';\nimport { tSetControlBarRows } from '../actions/controlBar';\nimport { tSetShowDescription } from '../actions/selected';\nimport { tSetDimensions } from '../actions/dimensions';\nimport Dashboard from './Dashboard/Dashboard';\nimport SnackbarMessage from './SnackbarMessage/SnackbarMessage';\nimport './App.css';\nexport class App extends Component {\n  componentDidMount() {\n    this.props.setCurrentUser(this.props.d2.currentUser);\n    this.props.fetchDashboards();\n    this.props.setControlBarRows();\n    this.props.setShowDescription();\n    this.props.setDimensions(this.props.d2);\n  }\n\n  getChildContext() {\n    return {\n      baseUrl: this.props.baseUrl,\n      i18n,\n      d2: this.props.d2\n    };\n  }\n\n  render() {\n    return <>\n                <CssVariables colors spacers />\n                <Router>\n                    <Switch>\n                        <Route exact path=\"/\" render={props => <Dashboard {...props} mode={VIEW} />} />\n                        <Route exact path=\"/new\" render={props => <Dashboard {...props} mode={NEW} />} />\n                        <Route exact path=\"/:dashboardId\" render={props => <Dashboard {...props} mode={VIEW} />} />\n                        <Route exact path=\"/:dashboardId/edit\" render={props => <Dashboard {...props} mode={EDIT} />} />\n                        <Route exact path=\"/:dashboardId/printoipp\" render={props => <Dashboard {...props} mode={PRINT} />} />\n                        <Route exact path=\"/:dashboardId/printlayout\" render={props => <Dashboard {...props} mode={PRINT_LAYOUT} />} />\n                    </Switch>\n                </Router>\n                <SnackbarMessage />\n            </>;\n  }\n\n}\nApp.propTypes = {\n  fetchDashboards: PropTypes.func.isRequired,\n  setControlBarRows: PropTypes.func.isRequired,\n  setCurrentUser: PropTypes.func.isRequired,\n  setDimensions: PropTypes.func.isRequired,\n  setShowDescription: PropTypes.func.isRequired,\n  baseUrl: PropTypes.string,\n  d2: PropTypes.object\n};\nApp.childContextTypes = {\n  baseUrl: PropTypes.string,\n  i18n: PropTypes.object,\n  d2: PropTypes.object\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    fetchDashboards: () => dispatch(tFetchDashboards()),\n    setControlBarRows: () => dispatch(tSetControlBarRows()),\n    setCurrentUser: currentUser => dispatch(acReceivedUser(currentUser)),\n    setDimensions: d2 => dispatch(tSetDimensions(d2)),\n    setShowDescription: () => dispatch(tSetShowDescription())\n  };\n};\n\nexport default connect(null, mapDispatchToProps)(App);","import { RECEIVED_USER } from '../reducers/user';\nexport const acReceivedUser = value => ({\n  type: RECEIVED_USER,\n  value\n});","/** @module reducers/selected */\nimport { validateReducer } from '../modules/util';\nexport const SET_STYLE = 'SET_STYLE';\nexport const DEFAULT_STATE_STYLE = 'LIST';\n/**\n * Reducer functions that computes and returns the new state based on the given action\n * @function\n * @param {Object} state The current state\n * @param {Object} action The action to be evaluated\n */\n\nconst style = (state = DEFAULT_STATE_STYLE, action) => {\n  switch (action.type) {\n    case SET_STYLE:\n      return validateReducer(action.value, DEFAULT_STATE_STYLE);\n\n    default:\n      return state;\n  }\n};\n\nexport default style;\n/**\n * Selectors that point to specific props in the state object\n * @function\n * @param {Object} state\n * @returns {Object}\n */\n\nexport const sGetStyleRoot = state => state.style;","import { combineReducers } from 'redux';\nimport arraySort from 'd2-utilizr/lib/arraySort';\nimport dashboards, { sGetDashboardsRoot } from './dashboards';\nimport selected from './selected';\nimport dashboardsFilter, { ownerData, sGetFilterName, sGetFilterOrder, sGetFilterOwner } from './dashboardsFilter';\nimport controlBar from './controlBar';\nimport visualizations from './visualizations';\nimport editDashboard from './editDashboard';\nimport printDashboard from './printDashboard';\nimport messages from './messages';\nimport user from './user';\nimport snackbar from './snackbar';\nimport itemFilters from './itemFilters';\nimport style from './style';\nimport dimensions from './dimensions';\nimport settings from './settings';\nimport activeModalDimension from './activeModalDimension';\nimport windowHeight from './windowHeight';\nconst USER = 'system'; // Reducers\n\nexport default combineReducers({\n  dashboards,\n  selected,\n  dashboardsFilter,\n  controlBar,\n  visualizations,\n  messages,\n  user,\n  editDashboard,\n  printDashboard,\n  itemFilters,\n  style,\n  snackbar,\n  dimensions,\n  settings,\n  activeModalDimension,\n  windowHeight\n}); // Map constants to data\n\nconst mapConstToData = {\n  NAME: 'name',\n  ITEMS: 'numberOfItems',\n  CREATED: 'created',\n  OWNER: 'owner'\n}; // Selectors\n// Filter dashboards by name\n\nexport const sFilterDashboardsByName = (dashboards, filter) => dashboards.filter(d => d.displayName.toLowerCase().includes(filter.toLowerCase())); // Filter dashboards by owner, TODO FIXME\n\nexport const sFilterDashboardsByOwner = (dashboards, filter) => {\n  const ME = ownerData[1]; // TODO\n\n  const OTHERS = ownerData[2]; // TODO\n\n  switch (filter) {\n    case ME:\n      return dashboards.filter(d => d.owner === USER);\n\n    case OTHERS:\n      return dashboards.filter(d => d.owner !== USER);\n\n    default:\n      return dashboards;\n  }\n}; // Filter dashboards by order\n\nexport const sFilterDashboardsByOrder = (dashboards, filter) => {\n  const filterValues = filter.split(':');\n  const key = filterValues[0];\n  const direction = filterValues[1];\n  return arraySort(dashboards, direction, mapConstToData[key]);\n}; // Selectors dependency level 2\n// Get filtered dashboards\n\nexport const sGetFilteredDashboards = state => {\n  const dashboards = sGetDashboardsRoot(state);\n  const nameFilter = sGetFilterName(state);\n  const ownerFilter = sGetFilterOwner(state);\n  const orderFilter = sGetFilterOrder(state);\n  return sFilterDashboardsByOrder(sFilterDashboardsByName(sFilterDashboardsByOwner(dashboards, ownerFilter), nameFilter), orderFilter);\n};","import { createStore, applyMiddleware, compose } from 'redux';\nimport { createLogger } from 'redux-logger';\nimport thunk from 'redux-thunk';\nimport reducer from './reducers';\n\nconst configureStore = () => {\n  const middleware = [thunk]; // Enable Redux devtools if extension is installed instead of redux-logger\n\n  const composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\n\n  if (!window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ && process.env.NODE_ENV !== 'production') {\n    middleware.push(createLogger());\n  }\n\n  return createStore(reducer, composeEnhancers(applyMiddleware(...middleware)));\n};\n\nexport default configureStore;","//------------------------------------------------------------------------------\n// <auto-generated>\n// This code was generated by d2-i18n-generate.\n//\n// Changes to this file may cause incorrect behavior and will be lost if\n// the code is regenerated.\n// </auto-generated>\n//------------------------------------------------------------------------------\nimport i18n from '@dhis2/d2-i18n';\nimport arTranslations from './ar/translations.json';\nimport ar_IQTranslations from './ar_IQ/translations.json';\nimport ckbTranslations from './ckb/translations.json';\nimport csTranslations from './cs/translations.json';\nimport daTranslations from './da/translations.json';\nimport enTranslations from './en/translations.json';\nimport esTranslations from './es/translations.json';\nimport es_419Translations from './es_419/translations.json';\nimport frTranslations from './fr/translations.json';\nimport idTranslations from './id/translations.json';\nimport kmTranslations from './km/translations.json';\nimport ko_KRTranslations from './ko_KR/translations.json';\nimport loTranslations from './lo/translations.json';\nimport myTranslations from './my/translations.json';\nimport nbTranslations from './nb/translations.json';\nimport nlTranslations from './nl/translations.json';\nimport prsTranslations from './prs/translations.json';\nimport psTranslations from './ps/translations.json';\nimport ptTranslations from './pt/translations.json';\nimport pt_BRTranslations from './pt_BR/translations.json';\nimport roTranslations from './ro/translations.json';\nimport ruTranslations from './ru/translations.json';\nimport svTranslations from './sv/translations.json';\nimport tetTranslations from './tet/translations.json';\nimport tgTranslations from './tg/translations.json';\nimport ukTranslations from './uk/translations.json';\nimport urTranslations from './ur/translations.json';\nimport uzTranslations from './uz/translations.json';\nimport uz_LatnTranslations from './uz_Latn/translations.json';\nimport viTranslations from './vi/translations.json';\nimport zhTranslations from './zh/translations.json';\nimport zh_CNTranslations from './zh_CN/translations.json';\nconst namespace = 'default';\ni18n.addResources('ar', namespace, arTranslations);\ni18n.addResources('ar_IQ', namespace, ar_IQTranslations);\ni18n.addResources('ckb', namespace, ckbTranslations);\ni18n.addResources('cs', namespace, csTranslations);\ni18n.addResources('da', namespace, daTranslations);\ni18n.addResources('en', namespace, enTranslations);\ni18n.addResources('es', namespace, esTranslations);\ni18n.addResources('es_419', namespace, es_419Translations);\ni18n.addResources('fr', namespace, frTranslations);\ni18n.addResources('id', namespace, idTranslations);\ni18n.addResources('km', namespace, kmTranslations);\ni18n.addResources('ko_KR', namespace, ko_KRTranslations);\ni18n.addResources('lo', namespace, loTranslations);\ni18n.addResources('my', namespace, myTranslations);\ni18n.addResources('nb', namespace, nbTranslations);\ni18n.addResources('nl', namespace, nlTranslations);\ni18n.addResources('prs', namespace, prsTranslations);\ni18n.addResources('ps', namespace, psTranslations);\ni18n.addResources('pt', namespace, ptTranslations);\ni18n.addResources('pt_BR', namespace, pt_BRTranslations);\ni18n.addResources('ro', namespace, roTranslations);\ni18n.addResources('ru', namespace, ruTranslations);\ni18n.addResources('sv', namespace, svTranslations);\ni18n.addResources('tet', namespace, tetTranslations);\ni18n.addResources('tg', namespace, tgTranslations);\ni18n.addResources('uk', namespace, ukTranslations);\ni18n.addResources('ur', namespace, urTranslations);\ni18n.addResources('uz', namespace, uzTranslations);\ni18n.addResources('uz_Latn', namespace, uz_LatnTranslations);\ni18n.addResources('vi', namespace, viTranslations);\ni18n.addResources('zh', namespace, zhTranslations);\ni18n.addResources('zh_CN', namespace, zh_CNTranslations);\nexport default i18n;","import React from 'react';\nimport { MuiThemeProvider, createMuiTheme } from '@material-ui/core/styles';\nimport dhis2theme from '@dhis2/d2-ui-core/theme/mui3.theme';\nimport { Provider as ReduxProvider } from 'react-redux';\nimport { D2Shim } from '@dhis2/app-runtime-adapter-d2';\nimport App from './components/App';\nimport configureStore from './configureStore';\nimport './AppWrapper.css';\nimport './locales';\n\nconst muiTheme = () => createMuiTheme(dhis2theme);\n\nconst d2Config = {\n  schemas: ['chart', 'map', 'report', 'reportTable', 'eventChart', 'eventReport', 'dashboard', 'organisationUnit', 'userGroup']\n}; // TODO: ER and EV plugins require the auth header in development mode.\n// Remove this when these plugins are rewritten\n\nconst authorization = process.env.REACT_APP_DHIS2_AUTHORIZATION || null;\n\nif (authorization) {\n  d2Config.headers = {\n    Authorization: authorization\n  };\n}\n\nconst AppWrapper = () => {\n  return <ReduxProvider store={configureStore()}>\n            <MuiThemeProvider theme={muiTheme()}>\n                <D2Shim d2Config={d2Config} i18nRoot=\"./i18n\">\n                    {({\n          d2\n        }) => {\n          if (!d2) {\n            // TODO: Handle errors in d2 initialization\n            return null;\n          }\n\n          return <App d2={d2} />;\n        }}\n                </D2Shim>\n            </MuiThemeProvider>\n        </ReduxProvider>;\n};\n\nexport default AppWrapper;","import isFunction from 'd2-utilizr/lib/isFunction';\nimport { orObject } from '../../modules/util'; // Dimensions for the react-grid-layout\n\nexport const GRID_COMPACT_TYPE = 'vertical'; // vertical | horizonal | null\n\nexport const GRID_ROW_HEIGHT = 10;\nconst GRID_COLUMN_WIDTH_PX = 20;\nconst GRID_LAYOUT = 'FLEXIBLE'; // FIXED | FLEXIBLE\n\nexport const MARGIN = [10, 10];\nexport const NEW_ITEM_SHAPE = {\n  x: 0,\n  y: 0,\n  w: 20,\n  h: 29\n}; // Dimensions for getShape\n\nconst NUMBER_OF_ITEM_COLS = 2;\nconst GRID_COLUMNS = 60;\nconst MAX_ITEM_GRID_WIDTH = GRID_COLUMNS - 1;\nexport const MAX_ITEM_GRID_HEIGHT = 34;\nexport const MAX_ITEM_GRID_HEIGHT_OIPP = 35;\nexport const MAX_ITEM_GRID_WIDTH_OIPP = 56; // for A4 landscape (297x210mm)\n// 794 px = (21cm / 2.54) * 96 pixels/inch\n// 1122 px = 29.7 /2.54 * 96 pixels/inch\n// const a4LandscapeHeightPx = 794\n\nexport const a4LandscapeWidthPx = 1102;\nexport const getGridColumns = () => {\n  switch (GRID_LAYOUT) {\n    case 'FLEXIBLE':\n      return GRID_COLUMNS;\n\n    case 'FIXED':\n      return Math.floor((window.innerWidth - 20) / GRID_COLUMN_WIDTH_PX);\n\n    default:\n      return GRID_COLUMNS;\n  }\n}; // isNonNegativeInteger\n\nconst isNonNegativeInteger = x => Number.isInteger(x) && x >= 0; // Does the item have all the shape properties?\n\n\nexport const hasShape = item => isNonNegativeInteger(item.x) && isNonNegativeInteger(item.y) && isNonNegativeInteger(item.w) && isNonNegativeInteger(item.h); // returns a rectangular grid block dimensioned with x, y, w, h in grid units.\n// based on a grid with 3 items across\n\nexport const getShape = i => {\n  if (!isNonNegativeInteger(i)) {\n    throw new Error('Invalid grid block number');\n  }\n\n  const col = i % NUMBER_OF_ITEM_COLS;\n  const row = Math.floor(i / NUMBER_OF_ITEM_COLS);\n  const itemWidth = Math.floor(MAX_ITEM_GRID_WIDTH / NUMBER_OF_ITEM_COLS);\n  const itemHeight = GRID_ROW_HEIGHT * 2;\n  return {\n    x: col * itemWidth,\n    y: row * itemHeight,\n    w: itemWidth,\n    h: itemHeight\n  };\n};\nexport const getGridItemProperties = itemId => {\n  return {\n    i: itemId,\n    minH: 4 // minimum height for item\n\n  };\n};\nexport const getPageBreakItemShape = (yPos, isStatic = true) => {\n  return {\n    x: 0,\n    y: yPos,\n    w: MAX_ITEM_GRID_WIDTH,\n    h: 5,\n    static: !!isStatic,\n    minH: 1\n  };\n};\nexport const getPrintTitlePageItemShape = isOneItemPerPage => {\n  return {\n    x: 0,\n    y: 0,\n    w: isOneItemPerPage ? MAX_ITEM_GRID_WIDTH_OIPP : MAX_ITEM_GRID_WIDTH,\n    h: MAX_ITEM_GRID_HEIGHT,\n    static: true,\n    minH: 1\n  };\n};\n/**\n * Calculates the grid item's original height in pixels based\n * on the height in grid units. This calculation\n * is copied directly from react-grid-layout GridItem.js (calcPosition)\n *\n * @param {Object} item item containing shape (x, y, w, h)\n */\n\nexport const getOriginalHeight = item => {\n  const originalHeight = Math.round(GRID_ROW_HEIGHT * item.h + Math.max(0, item.h - 1) * MARGIN[1]);\n  return {\n    originalHeight\n  };\n};\n/**\n * Returns an array of items containing the x, y, w, h dimensions\n * and the item's originalheight in pixels\n * @function\n * @param {Array} items\n * @returns {Array}\n */\n\nexport const withShape = items => items.map((item, index) => {\n  const itemWithShape = hasShape(item) ? item : Object.assign({}, item, getShape(index));\n  return Object.assign({}, itemWithShape, getOriginalHeight(itemWithShape));\n});\nexport const getGridItemDomId = id => `item-${id}`;\nexport function onItemResize(id) {\n  const el = orObject(document.querySelector(`#${getGridItemDomId(id)}`));\n  if (isFunction(el.setViewportSize)) setTimeout(() => el.setViewportSize(el.clientWidth - 5, el.clientHeight - 5), 10);\n}","import isObject from 'lodash/isObject';\nimport { VIS_TYPE_COLUMN, VIS_TYPE_PIVOT_TABLE, AXIS_ID_ROWS, AXIS_ID_COLUMNS, AXIS_ID_FILTERS } from '@dhis2/analytics';\nimport { apiFetchFavorite, getMapFields } from '../../../api/metadata';\nimport { REPORT_TABLE, CHART, MAP, EVENT_REPORT, EVENT_CHART, itemTypeMap } from '../../../modules/itemTypes';\nimport { getBaseUrl, getWithoutId } from '../../../modules/util';\nimport { getGridItemDomId } from '../../ItemGrid/gridUtil'; //external plugins\n\nconst itemTypeToExternalPlugin = {\n  [MAP]: 'mapPlugin',\n  [EVENT_REPORT]: 'eventReportPlugin',\n  [EVENT_CHART]: 'eventChartPlugin'\n};\n\nconst hasIntegratedPlugin = type => [CHART, REPORT_TABLE].includes(type);\n\nconst getPlugin = type => {\n  if (hasIntegratedPlugin(type)) {\n    return true;\n  }\n\n  const pluginName = itemTypeToExternalPlugin[type];\n  return global[pluginName];\n};\n\nexport const THEMATIC_LAYER = 'thematic';\nexport const pluginIsAvailable = (item = {}, visualization = {}) => {\n  const type = visualization.activeType || item.type;\n  return !!getPlugin(type);\n};\nexport const extractFavorite = item => {\n  if (!isObject(item)) {\n    return null;\n  }\n\n  const propName = itemTypeMap[item.type].propName;\n  return item[propName] || item.reportTable || item.chart || item.map || item.eventReport || item.eventChart || {};\n};\nexport const extractMapView = map => map.mapViews && map.mapViews.find(mv => mv.layer.includes(THEMATIC_LAYER));\nexport const loadPlugin = (plugin, config, credentials) => {\n  if (!(plugin && plugin.load)) {\n    return;\n  }\n\n  plugin.url = credentials.baseUrl;\n  plugin.loadingIndicator = true;\n  plugin.dashboard = true;\n\n  if (credentials.auth) {\n    plugin.auth = credentials.auth;\n  }\n\n  plugin.load(config);\n};\nexport const getId = item => extractFavorite(item).id;\nexport const getName = item => extractFavorite(item).name;\nexport const getDescription = item => extractFavorite(item).description;\nexport const getLink = (item, d2) => {\n  const baseUrl = getBaseUrl(d2);\n  const appUrl = itemTypeMap[item.type].appUrl(getId(item));\n  return `${baseUrl}/${appUrl}`;\n};\nexport const load = async (item, visualization, {\n  credentials,\n  activeType,\n  options = {}\n}) => {\n  const config = { ...visualization,\n    ...options,\n    el: getGridItemDomId(item.id)\n  };\n  const type = activeType || item.type;\n  const plugin = getPlugin(type);\n  loadPlugin(plugin, config, credentials);\n};\nexport const fetch = async item => {\n  const fetchedFavorite = await apiFetchFavorite(getId(item), item.type, {\n    fields: item.type === MAP ? getMapFields() : null\n  });\n  return fetchedFavorite;\n};\nexport const resize = item => {\n  const plugin = getPlugin(item.type);\n\n  if (plugin && plugin.resize) {\n    plugin.resize(getGridItemDomId(item.id));\n  }\n};\nexport const unmount = (item, activeType) => {\n  const plugin = getPlugin(activeType);\n\n  if (plugin && plugin.unmount) {\n    plugin.unmount(getGridItemDomId(item.id));\n  }\n};\nexport const getVisualizationConfig = (visualization, originalType, activeType) => {\n  if (originalType === MAP && originalType !== activeType) {\n    const extractedMapView = extractMapView(visualization);\n\n    if (extractedMapView === undefined) {\n      return null;\n    }\n\n    return getWithoutId({ ...visualization,\n      ...extractedMapView,\n      mapViews: undefined,\n      type: activeType === CHART ? VIS_TYPE_COLUMN : VIS_TYPE_PIVOT_TABLE\n    });\n  } else if (originalType === REPORT_TABLE && activeType === CHART) {\n    const columns = visualization[AXIS_ID_COLUMNS].slice();\n    const rows = visualization[AXIS_ID_ROWS].slice();\n    const layout = {};\n\n    if (visualization.rows.length > 1) {\n      layout[AXIS_ID_ROWS] = rows.length > 2 ? rows.splice(0, 2) : rows.splice(0, rows.length);\n    } else {\n      layout[AXIS_ID_ROWS] = rows.length ? [rows.shift()] : rows;\n    }\n\n    layout[AXIS_ID_COLUMNS] = columns.length ? [columns.shift()] : columns;\n    layout[AXIS_ID_FILTERS] = [...visualization[AXIS_ID_FILTERS], ...columns, ...rows];\n    return getWithoutId({ ...visualization,\n      ...layout,\n      type: VIS_TYPE_COLUMN\n    });\n  } else if (originalType === CHART && activeType === REPORT_TABLE) {\n    return getWithoutId({ ...visualization,\n      type: VIS_TYPE_PIVOT_TABLE\n    });\n  }\n\n  return getWithoutId(visualization);\n};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"itemHeaderWrap\":\"ItemHeader_itemHeaderWrap__JcBP7\",\"itemTitle\":\"ItemHeader_itemTitle__34rHa\",\"itemActionsWrap\":\"ItemHeader_itemActionsWrap__Gx3D9\"};","import { getInstance } from 'd2';\nimport arrayClean from 'd2-utilizr/lib/arrayClean';\nimport { getEndPointName } from '../modules/itemTypes'; // Id, name\n\nexport const getIdNameFields = ({\n  rename\n} = {}) => ['id', `${rename ? 'displayName~rename(name)' : 'name,displayName'}`]; // Item\n\nexport const getItemFields = () => ['dimensionItem~rename(id)', 'displayName~rename(name)', 'dimensionItemType']; // Dimension\n\nexport const getDimensionFields = ({\n  withItems\n}) => arrayClean(['dimension', 'legendSet[id]', 'filter', 'programStage', withItems ? `items[${getItemFields().join(',')}]` : ``]); // Axis\n\nexport const getAxesFields = ({\n  withItems\n}) => [`columns[${getDimensionFields({\n  withItems\n}).join(',')}]`, `rows[${getDimensionFields({\n  withItems\n}).join(',')}]`, `filters[${getDimensionFields({\n  withItems\n}).join(',')}]`]; // Favorite\n\nexport const getFavoriteFields = ({\n  withDimensions,\n  withOptions\n}) => {\n  return arrayClean([`${getIdNameFields({\n    rename: true\n  }).join(',')}`, 'displayDescription~rename(description)', withDimensions ? `${getAxesFields({\n    withItems: true\n  }).join(',')}` : ``, withOptions ? ['*', '!attributeDimensions', '!attributeValues', '!category', '!categoryDimensions', '!categoryOptionGroupSetDimensions', '!columnDimensions', '!dataDimensionItems', '!dataElementDimensions', '!dataElementGroupSetDimensions', '!filterDimensions', '!itemOrganisationUnitGroups', '!lastUpdatedBy', '!organisationUnitGroupSetDimensions', '!organisationUnitLevels', '!organisationUnits', '!programIndicatorDimensions', '!relativePeriods', '!reportParams', '!rowDimensions', '!translations', '!userOrganisationUnit', '!userOrganisationUnitChildren', '!userOrganisationUnitGrandChildren'].join(',') : '']);\n};\nexport const getFavoritesFields = ({\n  withDimensions\n}) => [`reportTable[${getFavoriteFields({\n  withDimensions\n}).join(',')}]`, `chart[${['type', ...getFavoriteFields({\n  withDimensions\n})].join(',')}]`, `map[${getFavoriteFields({\n  withDimensions\n}).join(',')}]`, `eventReport[${getFavoriteFields({\n  withDimensions\n}).join(',')}]`, `eventChart[${getFavoriteFields({\n  withDimensions\n}).join(',')}]`]; // List item\n\nexport const getListItemFields = () => [`reports[${['type', ...getIdNameFields({\n  rename: true\n})].join(',')}]`, `resources[${getIdNameFields({\n  rename: true\n}).join(',')}]`, `users[${getIdNameFields({\n  rename: true\n}).join(',')}]`]; // Map\n\nexport const getMapFields = () => {\n  const favoriteFields = getFavoriteFields({\n    withDimensions: true,\n    withOptions: true\n  });\n  const teFields = 'program[id,displayName~rename(name)],programStage[id,displayName~rename(name)],trackedEntityType[id,displayName~rename(name)]';\n  return [`${getIdNameFields({\n    rename: true\n  }).join(',')}`, 'user,longitude,latitude,zoom,basemap', `mapViews[${favoriteFields.concat(teFields)}]`];\n}; // Api\n// Get more info about the favorite of a dashboard item\n\nexport const apiFetchFavorite = (id, type, {\n  fields\n}) => getInstance().then(d2 => d2.Api.getApi().get(`${getEndPointName(type)}/${id}`, {\n  fields: fields || getFavoriteFields({\n    withDimensions: true,\n    withOptions: true\n  })\n}));","// extracted by mini-css-extract-plugin\nmodule.exports = {\"leftControls\":\"DashboardsBar_leftControls__k-Y57\",\"rightControls\":\"DashboardsBar_rightControls__1cyr1\",\"topMargin\":\"DashboardsBar_topMargin__FKGgr\"};"],"sourceRoot":""}
{"version":3,"sources":["api/metadata.js","modules/util.js","components/Item/ListItem/Item.module.css","components/ControlBar/styles/DashboardsBar.module.css","components/ItemSelector/styles/ContentMenuItem.module.css","reducers/user.js","reducers/dashboards.js","reducers/selected.js","reducers/visualizations.js","actions/visualizations.js","api/index.js","api/dashboards.js","reducers/messages.js","api/messages.js","reducers/snackbar.js","actions/snackbar.js","components/SnackbarMessage/SnackbarMessage.js","actions/selected.js","api/localStorage.js","components/Item/MessagesItem/actions.js","reducers/editDashboard.js","reducers/editItemFilters.js","reducers/itemFilters.js","actions/itemFilters.js","actions/editItemFilters.js","api/editDashboard.js","actions/editDashboard.js","actions/dashboards.js","reducers/controlBar.js","api/controlBar.js","actions/controlBar.js","reducers/dimensions.js","reducers/settings.js","actions/dimensions.js","components/ControlBar/ShowMoreButton.js","components/ControlBar/controlBarDimensions.js","components/ControlBar/ControlBar.js","icons/Star.js","api/dataStatistics.js","components/ControlBar/DashboardItemChip.js","icons/AddCircle.js","icons/Clear.js","components/ControlBar/ClearButton.js","reducers/dashboardsFilter.js","components/ControlBar/Filter.js","components/ControlBar/DashboardsBar.js","actions/dashboardsFilter.js","components/Dashboard/DashboardVerticalOffset.js","components/ItemSelector/HeaderMenuItem.js","icons/Launch.js","components/ItemSelector/ContentMenuItem.js","components/ItemSelector/selectableItems.js","components/ItemSelector/CategorizedMenuGroup.js","components/ItemSelector/actions.js","components/ItemSelector/SinglesMenuGroup.js","components/ItemSelector/ItemSelector.js","components/TitleBar/EditTitleBar.js","components/ItemFilter/FilterDialog.js","reducers/activeModalDimension.js","actions/activeModalDimension.js","components/ItemFilter/FilterSelector.js","components/TitleBar/Info.js","components/TitleBar/ViewTitleBar.js","components/TitleBar/TitleBar.js","components/Item/VisualizationItem/DefaultPlugin.js","components/Item/ItemHeader.js","components/Item/VisualizationItem/ItemFooter.js","components/Item/ItemHeaderButton.js","components/Item/VisualizationItem/ItemHeaderButtons.js","modules/memoizeOne.js","components/Item/VisualizationItem/Item.js","widgets/Line.js","components/Item/MessagesItem/Item.js","components/Item/NotSupportedItem/Item.js","icons/Description.js","icons/Delete.js","components/Item/ListItem/Item.js","components/Item/ListItem/actions.js","components/Item/TextItem/Item.js","components/Item/AppItem/Item.js","components/Item/SpacerItem/Item.js","components/Item/Item.js","components/ItemGrid/DeleteItemButton.js","widgets/NoContentMessage.js","components/Item/ProgressiveLoadingContainer.js","components/ItemGrid/ItemGrid.js","components/FilterBar/FilterBadge.js","components/FilterBar/FilterBar.js","components/Dashboard/DashboardContent.js","components/Dashboard/ViewDashboard.js","components/ControlBar/ConfirmDeleteDialog.js","components/ControlBar/EditBar.js","components/Dashboard/EditDashboard.js","components/Dashboard/NewDashboard.js","components/Dashboard/Dashboard.js","components/Dashboard/dashboardModes.js","components/App.js","actions/user.js","locales/index.js","reducers/style.js","reducers/index.js","configureStore.js","index.js","components/ControlBar/styles/ControlBar.module.css","components/ControlBar/styles/ClearButton.module.css","components/Item/VisualizationItem/plugin.js","components/ItemGrid/gridUtil.js","modules/itemTypes.js","components/ItemSelector/styles/CategorizedMenuGroup.module.css"],"names":["getIdNameFields","rename","arguments","length","undefined","concat","getDimensionFields","_ref2","withItems","arrayClean","join","getAxesFields","_ref3","getFavoriteFields","_ref4","withDimensions","withOptions","getFavoritesFields","_ref5","Object","_home_travis_build_dhis2_dashboards_app_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_toConsumableArray__WEBPACK_IMPORTED_MODULE_0__","getListItemFields","getMapFields","apiFetchFavorite","id","type","_ref6","fields","getInstance","then","d2","Api","getApi","get","getEndPointName","orArray","param","Array","isArray","orObject","isObject","arrayToIdMap","array","reduce","obj","item","formatDate","value","uiLocale","global","Intl","DateTimeFormat","locale","year","month","day","format","Date","substr","replace","validateReducer","defaultValue","getBaseUrl","api","idx","baseUrl","indexOf","slice","getWithoutId","object","_home_travis_build_dhis2_dashboards_app_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectSpread__WEBPACK_IMPORTED_MODULE_0__","module","exports","list","itemicon","link","deleteicon","deletebutton","leftControls","rightControls","menuItem","launchLink","label","buttonInsert","DEFAULT_STATE_USER","username","isSuperuser","sGetUserUsername","state","user","DEFAULT_STATE_DASHBOARDS","byId","items","updateDashboardProp","_ref","dashboardId","prop","objectSpread","defineProperty","sGetDashboardsRoot","dashboards","sGetDashboardById","sDashboardsIsFetching","sGetAllDashboards","sGetDashboardItems","sGetStarredDashboards","values","filter","dashboard","starred","sGetUnstarredDashboards","sGetDashboardsSortedByStarred","toConsumableArray","arraySort","getCustomDashboards","data","arrayFrom","map","d","name","displayName","description","displayDescription","favorite","owner","created","split","lastUpdated","access","numberOfItems","dashboardItems","isSpacerType","SPACER","VISUALIZATION","reportTable","REPORT_TABLE","chart","CHART","text","isTextType","emptyTextItemContent","combineReducers","action","isLoading","showDescription","sGetSelectedRoot","selected","sGetSelectedId","sGetSelectedIsLoading","sGetSelectedShowDescription","DEFAULT_STATE_VISUALIZATIONS","isEmpty","p","sGetVisualization","visualizations","sGetVisualizationsRoot","acAddVisualization","onError","error","console","log","getDashboardItemsFields","withFavorite","getDashboardFields","apiFetchDashboard","models","catch","apiStarDashboard","isStarred","url","post","delete","apiDeleteDashboard","sGetMessagesRoot","messages","getMessages","DEFAULT_STATE_SNACKBAR","message","duration","open","acCloseSnackbar","loadingDashboardMsg","SnackbarMessageContent","react_default","a","createElement","style","fontWeight","connect","_sGetSnackbar","snackbar","sGetSnackbar","snackbarOpen","snackbarMessage","snackbarDuration","onCloseSnackbar","props","Snackbar_default","zIndex","SnackbarMessage_SnackbarMessageContent","autoHideDuration","onClose","acSetSelectedId","acSetSelectedIsLoading","tLoadDashboard","asyncToGenerator","regenerator_default","mark","_callee","dispatch","dash","wrap","_context","prev","next","sent","acAppendDashboards","abrupt","Promise","resolve","t0","stop","_x","apply","this","tSetSelectedDashboardById","_callee2","getState","snackbarTimeout","onSuccess","_context2","setTimeout","dashboardName","customDashboard","acSetDashboardItems","withShape","localStorage","setItem","forEach","MAP","EVENT_REPORT","EVENT_CHART","extractFavorite","MESSAGES","messageConversations","clearTimeout","_x2","_x3","DEFAULT_STATE_EDIT_DASHBOARD","NEW_DASHBOARD_STATE","sGetEditDashboardRoot","editDashboard","sGetIsEditing","sGetEditDashboardItems","DEFAULT_STATE_EDIT_ITEM_FILTERS","sGetEditItemFiltersRoot","editItemFilters","DEFAULT_STATE_ITEM_FILTERS","sGetItemFiltersRoot","itemFilters","sGetFiltersKeys","keys","acRemoveItemFilter","acRemoveEditItemFilter","saveDashboard","assign","width","w","height","h","save","msg","response","uid","updateDashboard","postDashboard","create","acAddDashboardItem","itemPropName","itemTypeMap","propName","generateUid","content","NEW_ITEM_SHAPE","acUpdateDashboardItem","acRemoveDashboardItem","acSetDashboardStarred","tFetchDashboards","collection","paging","toArray","userRows","sGetControlBarUserRows","controlBar","sGetControlBarRoot","KEY","hasNamespace","currentUser","dataStore","has","getNamespace","apiGetControlBarRows","_callee3","namespace","_context3","t1","t2","find","key","apiPostControlBarRows","_callee4","rows","_context4","set","_x4","_x5","acSetControlBarUserRows","DEFAULT_DIMENSIONS","getDimensionById","DIMENSION_ID_PERIOD","DIMENSION_ID_ORGUNIT","sGetDimensions","dimensions","DEFAULT_SETTINGS","keyDateFormat","keyAnalysisRelativePeriod","keyAnalysisDigitGroupSeparator","displayNameProperty","rootOrganisationUnit","sGetSettings","settings","sGetSettingsDisplayNameProperty","acSetDimensions","styles","showMore","color","colors","grey700","cursor","fontSize","paddingTop","&:hover","textDecoration","disabled","grey500","withStyles","onClick","isMaxHeight","classes","textAlign","className","i18n","t","MIN_ROW_COUNT","getRowsHeight","getNumRowsFromHeight","Math","floor","FIRST_ROW_PADDING_HEIGHT","getTopOffset","getControlBarHeight","ControlBar","_this","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","onStartDrag","setState","dragging","window","addEventListener","onDrag","onEndDrag","event","preventDefault","stopPropagation","newHeight","clientY","onChangeHeight","requestAnimationFrame","removeEventListener","draghandle","onMouseDown","max","rootStyle","top","backgroundColor","editMode","yellow050","white","paddingBottom","transition","root","children","renderDragHandle","React","Component","defaultProps","StarIcon","xmlns","viewBox","fill","apiPostDataStatistics","eventType","chip","margin","grey600","display","verticalAlign","icon","marginTop","unselected","chipProps","selectedState","Star","Link","to","debounce","lib","AddCircleIcon","teal600","ClearIcon","grey800","ClearButton","onClear","button","Clear","ownerData","DEFAULT_STATE_DASHBOARDS_FILTER_NAME","DEFAULT_STATE_DASHBOARDS_FILTER_OWNER","order","sGetDashboardsFilterRoot","dashboardsFilter","sGetFilterName","KEYCODE_ENTER","KEYCODE_ESCAPE","filterField","searchIcon","Filter","_Component","setFilterValue","onChangeName","target","handleKeyUp","keyCode","onKeypressEnter","inherits","createClass","nextProps","_this$props","startAdornment","InputAdornment_default","position","Search_default","endAdornment","ControlBar_ClearButton","Input_default","placeholder","onChange","onKeyUp","Function","prototype","MAX_ROW_COUNT","DashboardsBar","_getPrototypeOf2","_len","args","_key","setInitialDashboardState","adjustedHeight","newRows","newRowCount","min","onToggleMaxHeight","onSelectDashboard","history","push","selectedId","onChangeFilterName","rowCount","controlBarHeight","contentWrapperStyle","padding","overflowY","components_ControlBar_ControlBar","marginRight","AddCircle","ControlBar_Filter","ControlBar_DashboardItemChip","ControlBar_ShowMoreButton","mapDispatchToProps","withRouter","stateProps","dispatchProps","ownProps","displayDashboards","toLowerCase","includes","HeaderMenuItem","title","dense","LaunchIcon","LaunchLink","e","rel","href","Launch","InsertButton","ContentMenuItem","onInsert","visType","ItemIcon","getItemIcon","renderedItemIcon","visTypeIcons","ContentMenuItem_LaunchLink","ContentMenuItem_InsertButton","singleItems","header","TEXT","spacerContent","categorizedItems","USERS","REPORTS","RESOURCES","APP","listItemTypes","CategorizedMenuGroup","addItem","tAddListItemContent","newItem","toggleSeeMore","seeMore","onChangeItemsLimit","_this2","_this$props2","hasMore","react","ItemSelector_HeaderMenuItem","itemUrl","getItemUrl","context","ItemSelector_ContentMenuItem","showMoreButton","contextTypes","PropTypes","isRequired","dashboardItem","listItemType","dashboardItemIndex","findIndex","category","addToDashboard","ItemSearchField","onFocus","ItemSelector","closeList","openList","_","fetchItems","anchorEl","currentTarget","setFilter","getCategorizedMenuGroups","itemType","endPointName","itemCount","getDefaultItemCount","allItems","maxOptions","ItemSelector_CategorizedMenuGroup","pluralTitle","getSinglesMenuGroups","ItemSelector_SinglesMenuGroup","getMenuGroups","queryString","add","Set","ItemSelector_ItemSearchField","Popover_default","anchorOrigin","horizontal","vertical","transformOrigin","PaperProps","disableAutoFocus","disableRestoreFocus","EditTitleBar","onChangeTitle","onChangeDescription","section","titleDescription","itemSelector","components_ItemSelector_ItemSelector","selectedDashboard","justifyContent","flex","clear","underline","&::before","borderBottom","&:hover::before","input","borderRadius","peId","ouId","FilterDialog","onConfirm","dimension","selectedItems","dialogId","commonProps","onSelect","onDeselect","onReorder","build","selectedPeriods","ouItems","dialogTitle","Dialog_default","maxWidth","disableEnforceFocus","dialogContent","DialogActions_default","kind","DEFAULT_STATE_ACTIVE_MODAL_DIMENSION","sGetActiveModalDimension","activeModalDimension","acSetActiveModalDimension","FilterSelector","openPanel","closePanel","closeDialog","clearActiveModalDimension","selectDimension","setActiveModalDimension","onSelectItems","dimensionId","setEditItemFilters","onDeselectItems","itemIdsToRemove","newList","removeEditItemFilter","onReorderItems","itemIds","oldList","reorderedList","saveFilter","filterItems","addItemFilter","removeItemFilter","theme","selectedDimensions","ArrowDropDown_default","Boolean","fontFamily","typography","onDimensionClick","selectedIds","ItemFilter_FilterDialog","filters","withTheme","Info","show","toggle","InfoOutlined_default","NO_DESCRIPTION","actions","alignItems","marginLeft","starIcon","textButton","minWidth","editLink","titleBar","titleBarIcon","ViewTitleBar","toggleSharingDialog","sharingDialogIsOpen","onStarClick","onInfoClick","titleStyle","userSelect","StarBorder","TitleBar_Info","update","manage","ItemFilter_FilterSelector","d2_ui_sharing_dialog_default","onRequestClose","tStarDashboard","black","TitleBar","edit","TitleBar_EditTitleBar","TitleBar_ViewTitleBar","DefaultPlugin","pluginCredentials","shouldPluginReload","prevProps","reloadAllowed","filtersChanged","vis","visualization","prevVis","visChanged","activeType","reloadPlugin","pluginManager","currentVis","useActiveType","credentials","getActiveType","auth","defaultHeaders","Authorization","getGridItemDomId","textDiv","HEADER_HEIGHT","ItemHeader","actionButtons","scrollContainer","line","border","grey100","ItemFooter","objectId","getId","d2_ui_interpretations_default","appName","ItemHeaderButton","iconBase","buttonBase","buttonDisabled","opacity","toggleFooterPadding","grey200","baseStyle","container","disabledStyle","activeStyle","primary800","primary100","inactiveStyle","VisualizationItemHeaderButtons","activeFooter","onToggleFooter","toggleFooterBase","toggleFooter","components_Item_ItemHeaderButton","Message_default","onSelectActiveType","isSingleValue","match","tableButtonStyle","tableBtnStyle","chartButtonStyle","chartBtnStyle","mapButtonStyle","mapBtnStyle","isTrackerDomainType","ViewList_default","InsertChart_default","hasMapView","Public_default","renderInterpretationButton","renderVisualizationButtons","memoizeOne","fn","lastArgs","lastValue","every","arg","i","overflow","textOverflow","whiteSpace","fontStretch","lineHeight","applyFilters","visRows","visColumns","columns","visFilters","dimensionFound","dimensionObjects","Item","showFooter","configLoaded","getUniqueKey","uniqueId","getPluginComponent","getVisualizationConfig","getContentStyle","es_lib","forDashboard","mapViews","layer","VisualizationItem_DefaultPlugin","onToggleItemExpanded","pluginIsAvailable","getTitle","itemName","Launch_default","getActionButtons","ItemHeaderButtons","contentRef","offsetHeight","originalHeight","createRef","_componentDidMount","onVisualizationLoaded","_this$props3","Item_ItemHeader","ref","VisualizationItem_ItemFooter","acSetActiveVisualizationType","Line","PRIVATE","messageTypes","_messageTypes","listStyleType","paddingLeft","seeAll","marginBottom","sender","snippet","maxHeight","MessagesItem","getMessageHref","msgIdentifier","messageType","getMessageSender","latestMsg","getMessageItems","editClass","readClass","read","msgDate","document","location","messageCount","userSettings","widgets_Line","string","MessagesContainer","NotSupportedItem","NotInterested_default","align","DescriptionIcon","DeleteIcon","red500","getItemTitle","ListItem","tRemoveListItemContent","contentItems","index","el","getContentItems","contentItem","Description","deleteButton","Delete","grey900","getLink","newContent","textField","onChangeText","updatedItem","d2_ui_rich_text","onEdit","multiline","fullWidth","textDivStyle","viewItem","getIframeSrc","appDetails","iframeSrc","launchUrl","ouIds","ouPath","AppItem","appKey","system","installedApps","app","src","SpacerItem","GridItem","VisualizationItem","TextItem","getGridItem","right","DeleteItemHeaderButton","Delete_default","NoContentMessage","ProgressiveLoadingContainer","shouldLoad","containerRef","shouldLoadHandler","bufferPx","bufferFactor","innerHeight","rect","getBoundingClientRect","bottom","removeHandler","checkShouldLoad","debounceMs","registerHandler","_this3","objectWithoutProperties","eventProps","pick","ItemGrid","expandedItems","clickedId","isExpanded","onRemoveItem","onLayoutChange","newLayout","acUpdateDashboardLayout","onResizeStop","layout","oldItem","onItemResize","isVisualizationType","pluginResize","onRemoveItemWrapper","widgets_NoContentMessage","expandedItem","hProp","minH","ITEM_MIN_HEIGHT","react_grid_layout_default","MARGIN","cols","getGridColumns","rowHeight","GRID_ROW_HEIGHT","innerWidth","compactType","GRID_COMPACT_TYPE","isDraggable","isResizable","draggableCancel","itemClassNames","Item_ProgressiveLoadingContainer","DeleteItemButton","Item_Item_Item","validItems","hasShape","badgeContainer","badge","badgeRemove","FilterBadge","onRemove","count","FilterBar","onBadgeRemove","onBadgeClick","bar","FilterBar_FilterBadge","removeItemFIlter","filtersSelector","createSelector","arr","flexWrap","DashboardContent","components_TitleBar_TitleBar","components_FilterBar_FilterBar","components_ItemGrid_ItemGrid","Content","hasDashboardContent","dashboardsIsEmpty","Dashboard_DashboardContent","dashboardsLoaded","contentNotReady","ControlBar_DashboardsBar","Dashboard_DashboardVerticalOffset","ViewDashboard_Content","ConfirmDeleteDialog","onDeleteConfirmed","onContinueEditing","secondary","destructive","DialogTitle_default","DialogContent_default","DialogContentText_default","buttonBarStyle","EditBar","translationDialogIsOpen","dashboardModel","confirmDeleteDialogOpen","redirectUrl","onConfirmDelete","onSave","newId","onDiscard","onDiscardChanges","onDelete","onTranslationsSaved","translations","dbLocale","translation","property","onTranslate","fetchDashboardModel","toggleTranslationDialog","confirmDeleteDialog","deleteAccess","ControlBar_ConfirmDeleteDialog","translationDialog","d2_ui_translation_dialog_default","objectToTranslate","fieldsToTranslate","onTranslationSaved","onTranslationError","err","Redirect","updateAccess","discardBtnText","primary","sGetIsNewDashboard","dashboardToSave","tDeleteDashboard","acSetDashboardDisplayName","EditDashboard","initialized","initEditDashboard","setEditDashboard","getDashboardContent","EditDashboard_Content","ControlBar_EditBar","NewDashboard","setNewDashboard","Dashboard","setDashboard","params","selectDashboard","scrollToTop","scrollTo","mode","Dashboard_EditDashboard","Dashboard_NewDashboard","Dashboard_ViewDashboard","dashboardToSelect","preferredId","getItem","App","setCurrentUser","fetchDashboards","setControlBarRows","setDimensions","HeaderBar","HashRouter","Switch","Route","exact","path","render","components_Dashboard_Dashboard","components_SnackbarMessage_SnackbarMessage","childContextTypes","controlBarRows","displayNameProp","filteredDimensions","apiFetchDimensions","dim","dimensionType","dataDimensionType","tSetDimensions","moment","addResources","arTranslations","daTranslations","enTranslations","esTranslations","frTranslations","idTranslations","kmTranslations","loTranslations","myTranslations","prsTranslations","psTranslations","ptTranslations","pt_BRTranslations","ruTranslations","svTranslations","tetTranslations","tgTranslations","ukTranslations","urTranslations","viTranslations","zhTranslations","zh_CNTranslations","setDefaultNamespace","changeLanguage","objectClean","conversations","$merge","d2Object","keyUiLocale","authorities","newState","k","$unshift","idToRemove","$splice","stateItems","newStateItems","x","y","stateItem","si","$set","configureStore","middleware","thunk","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","createStore","reducer","applyMiddleware","configI18n","config","sources","manifest","isProd","getManifest","info","version","manifest_generated_at","process","activities","dhis","dhis2","apiVersion","headers","schemas","getUserSettings","d2Init","initializedD2","ReactDOM","build_es","es","store","createMuiTheme","dhis2theme","src_components_App","getElementById","init","itemTypeToExternalPlugin","_itemTypeToExternalPl","_home_travis_build_dhis2_dashboards_app_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_defineProperty__WEBPACK_IMPORTED_MODULE_3__","getPlugin","hasIntegratedPlugin","eventReport","eventChart","loadPlugin","plugin","load","loadingIndicator","getName","appUrl","_home_travis_build_dhis2_dashboards_app_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_asyncToGenerator__WEBPACK_IMPORTED_MODULE_2__","_home_travis_build_dhis2_dashboards_app_node_modules_babel_preset_react_app_node_modules_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default","_home_travis_build_dhis2_dashboards_app_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectSpread__WEBPACK_IMPORTED_MODULE_1__","fetch","fetchedFavorite","resize","unmount","originalType","extractedMapView","mv","VIS_TYPE_COLUMN","VIS_TYPE_PIVOT_TABLE","__webpack_require__","__webpack_exports__","d2_utilizr_lib_isFunction__WEBPACK_IMPORTED_MODULE_0__","d2_utilizr_lib_isFunction__WEBPACK_IMPORTED_MODULE_0___default","n","_modules_util__WEBPACK_IMPORTED_MODULE_1__","isNonNegativeInteger","Number","isInteger","itemWithShape","Error","col","row","itemWidth","itemHeight","getShape","round","getOriginalHeight","querySelector","isFunction","setViewportSize","clientWidth","clientHeight","domainType","defaultItemCount","_itemTypeMap","_home_travis_build_dhis2_dashboards_app_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_defineProperty__WEBPACK_IMPORTED_MODULE_0__","TableIcon","ChartIcon","MapIcon","ExtensionIcon","PersonIcon","FontDownloadIcon","EmailIcon","CropFreeIcon","NotInterestedIcon"],"mappings":"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","file":"static/js/main.0068ae13.chunk.js","sourcesContent":["import { getInstance } from 'd2';\nimport arrayClean from 'd2-utilizr/lib/arrayClean';\n\nimport { getEndPointName } from '../modules/itemTypes';\n\n// Id, name\nexport const getIdNameFields = ({ rename } = {}) => [\n    'id',\n    `${rename ? 'displayName~rename(name)' : 'name,displayName'}`,\n];\n\n// Item\nexport const getItemFields = () => [\n    'dimensionItem~rename(id)',\n    'displayName~rename(name)',\n    'dimensionItemType',\n];\n\n// Dimension\nexport const getDimensionFields = ({ withItems }) =>\n    arrayClean([\n        'dimension',\n        'legendSet[id]',\n        'filter',\n        'programStage',\n        withItems ? `items[${getItemFields().join(',')}]` : ``,\n    ]);\n\n// Axis\nexport const getAxesFields = ({ withItems }) => [\n    `columns[${getDimensionFields({ withItems }).join(',')}]`,\n    `rows[${getDimensionFields({ withItems }).join(',')}]`,\n    `filters[${getDimensionFields({ withItems }).join(',')}]`,\n];\n\n// Favorite\nexport const getFavoriteFields = ({ withDimensions, withOptions }) => {\n    return arrayClean([\n        `${getIdNameFields({ rename: true }).join(',')}`,\n        'displayDescription~rename(description)',\n        withDimensions ? `${getAxesFields({ withItems: true }).join(',')}` : ``,\n        withOptions\n            ? [\n                  '*',\n                  '!attributeDimensions',\n                  '!attributeValues',\n                  '!category',\n                  '!categoryDimensions',\n                  '!categoryOptionGroupSetDimensions',\n                  '!columnDimensions',\n                  '!dataDimensionItems',\n                  '!dataElementDimensions',\n                  '!dataElementGroupSetDimensions',\n                  '!filterDimensions',\n                  '!itemOrganisationUnitGroups',\n                  '!lastUpdatedBy',\n                  '!organisationUnitGroupSetDimensions',\n                  '!organisationUnitLevels',\n                  '!organisationUnits',\n                  '!programIndicatorDimensions',\n                  '!relativePeriods',\n                  '!reportParams',\n                  '!rowDimensions',\n                  '!series',\n                  '!translations',\n                  '!userOrganisationUnit',\n                  '!userOrganisationUnitChildren',\n                  '!userOrganisationUnitGrandChildren',\n              ].join(',')\n            : '',\n    ]);\n};\n\nexport const getFavoritesFields = ({ withDimensions }) => [\n    `reportTable[${getFavoriteFields({ withDimensions }).join(',')}]`,\n    `chart[${['type', ...getFavoriteFields({ withDimensions })].join(',')}]`,\n    `map[${getFavoriteFields({ withDimensions }).join(',')}]`,\n    `eventReport[${getFavoriteFields({ withDimensions }).join(',')}]`,\n    `eventChart[${getFavoriteFields({ withDimensions }).join(',')}]`,\n];\n\n// List item\nexport const getListItemFields = () => [\n    `reports[${getIdNameFields({ rename: true }).join(',')}]`,\n    `resources[${getIdNameFields({ rename: true }).join(',')}]`,\n    `users[${getIdNameFields({ rename: true }).join(',')}]`,\n];\n\n// Map\nexport const getMapFields = () => [\n    `${getIdNameFields({ rename: true }).join(',')}`,\n    'user,longitude,latitude,zoom,basemap',\n    `mapViews[${getFavoriteFields({\n        withDimensions: true,\n        withOptions: true,\n    })}]`,\n];\n\n// Api\n\n// Get more info about the favorite of a dashboard item\nexport const apiFetchFavorite = (id, type, { fields }) =>\n    getInstance().then(d2 =>\n        d2.Api.getApi().get(`${getEndPointName(type)}/${id}`, {\n            fields:\n                fields ||\n                getFavoriteFields({\n                    withDimensions: true,\n                    withOptions: true,\n                }),\n        })\n    );\n","import isObject from 'lodash/isObject';\n\n// validation\nexport function orNull(param) {\n    return param === undefined ? null : param;\n}\n\nexport function orArray(param) {\n    return Array.isArray(param) ? param : [];\n}\n\nexport function orObject(param) {\n    return isObject(param) ? param : {};\n}\n\n// array\nexport function arrayGetById(array, id) {\n    return array.find(item => item.id === id);\n}\n\n// object\nexport function arrayToIdMap(array) {\n    return array.reduce((obj, item) => {\n        obj[item.id] = item;\n        return obj;\n    }, {});\n}\n\n// date\nexport function getDate() {\n    const y = Math.floor(Math.random() * 3) + 2015;\n    const M = Math.floor(Math.random() * 12) + 1;\n    const d = Math.floor(Math.random() * 28) + 1;\n    // const h = Math.floor(Math.random() * 23) + 1;\n    // const m = Math.floor(Math.random() * 59) + 1;\n    // const s = Math.floor(Math.random() * 59) + 1;\n\n    return new Date(`${y}-${M}-${d}`)\n        .toJSON()\n        .replace('T', ' ')\n        .substr(0, 10);\n}\n\nexport const formatDate = (value, uiLocale) => {\n    if (typeof global.Intl !== 'undefined' && Intl.DateTimeFormat) {\n        const locale = uiLocale || 'en';\n        return new Intl.DateTimeFormat(locale, {\n            year: 'numeric',\n            month: 'short',\n            day: 'numeric',\n        }).format(new Date(value));\n    }\n\n    return value.substr(0, 19).replace('T', ' ');\n};\n\n/**\n * Sorts an array of objects based on provided date property\n *\n * @param {Array} items Array of objects\n * @param {String} dateProp Name of the date property to be used for sorting\n * @param {Boolean} ascending Whether to sort ascending or descending\n */\nexport const sortByDate = (items, dateProp, ascending = true) => {\n    const values = Object.values(items);\n\n    values.sort((a, b) => {\n        const aDate = new Date(a[dateProp]);\n        const bDate = new Date(b[dateProp]);\n\n        return ascending ? aDate - bDate : bDate - aDate;\n    });\n\n    return values;\n};\n\n// reducer validator\nexport const validateReducer = (value, defaultValue) =>\n    value === undefined || value === null ? defaultValue : value;\n\nexport const getBaseUrl = d2 => {\n    const api = d2.Api.getApi();\n    const idx = api.baseUrl.indexOf('/api');\n    return idx > -1 ? api.baseUrl.slice(0, idx) : api.baseUrl;\n};\n\nexport const getWithoutId = object => ({\n    ...object,\n    id: undefined,\n});\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"Item_list__2oHc1\",\"item\":\"Item_item__lO40M\",\"itemicon\":\"Item_itemicon__dv5ah\",\"link\":\"Item_link__2gULT\",\"deleteicon\":\"Item_deleteicon__3c7bl\",\"deletebutton\":\"Item_deletebutton__1DfY5\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"leftControls\":\"DashboardsBar_leftControls__2kr14\",\"rightControls\":\"DashboardsBar_rightControls__2l1lT\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"menuItem\":\"ContentMenuItem_menuItem__2DIcB\",\"launchLink\":\"ContentMenuItem_launchLink__MRANR\",\"label\":\"ContentMenuItem_label__2pIfq\",\"buttonInsert\":\"ContentMenuItem_buttonInsert__1GlZy\"};","export const RECEIVED_USER = 'RECEIVED_USER';\n\nexport const DEFAULT_STATE_USER = {\n    id: '',\n    username: '',\n    uiLocale: '',\n    isSuperuser: false,\n};\n\nexport default (state = DEFAULT_STATE_USER, action) => {\n    switch (action.type) {\n        case RECEIVED_USER: {\n            return fromD2ToUserObj(action.value);\n        }\n        default:\n            return state;\n    }\n};\n\nfunction fromD2ToUserObj(d2Object) {\n    return {\n        id: d2Object.id,\n        username: d2Object.username,\n        uiLocale: d2Object.settings.keyUiLocale,\n        isSuperuser: d2Object.authorities.has('ALL'),\n    };\n}\n\n// selectors\n\nexport const sGetUserId = state => state.user.id;\nexport const sGetUserUsername = state => state.user.username;\nexport const sGetIsSuperuser = state => state.user.isSuperuser;\nexport const sGetUiLocale = state => state.user.uiLocale;\n","/** @module reducers/dashboards */\n\nimport arrayFrom from 'd2-utilizr/lib/arrayFrom';\nimport arraySort from 'd2-utilizr/lib/arraySort';\n\nimport { orArray, orObject } from '../modules/util';\nimport {\n    SPACER,\n    isSpacerType,\n    isTextType,\n    emptyTextItemContent,\n    REPORT_TABLE,\n    CHART,\n    VISUALIZATION,\n} from '../modules/itemTypes';\n\nexport const SET_DASHBOARDS = 'SET_DASHBOARDS';\nexport const ADD_DASHBOARDS = 'ADD_DASHBOARDS';\nexport const SET_DASHBOARD_STARRED = 'SET_DASHBOARD_STARRED';\nexport const SET_DASHBOARD_DISPLAY_NAME = 'SET_DASHBOARD_DISPLAY_NAME';\nexport const SET_DASHBOARD_ITEMS = 'SET_DASHBOARD_ITEMS';\n\nexport const DEFAULT_STATE_DASHBOARDS = {\n    byId: null,\n    items: [],\n};\n\n// reducer helper functions\n\nconst updateDashboardProp = ({ state, dashboardId, prop, value }) => ({\n    byId: {\n        ...state.byId,\n        [dashboardId]: {\n            ...state.byId[dashboardId],\n            [prop]: value,\n        },\n    },\n    items: state.items,\n});\n\n/**\n * Reducer that computes and returns the new state based on the given action\n * @function\n * @param {Object} state The current state\n * @param {Object} action The action to be evaluated\n * @returns {Object}\n */\nexport default (state = DEFAULT_STATE_DASHBOARDS, action) => {\n    switch (action.type) {\n        case SET_DASHBOARDS: {\n            return {\n                byId: action.value,\n                items: [],\n            };\n        }\n        case ADD_DASHBOARDS: {\n            return {\n                ...state,\n                byId: {\n                    ...state.byId,\n                    ...action.value,\n                },\n            };\n        }\n        case SET_DASHBOARD_STARRED: {\n            return updateDashboardProp({\n                state,\n                dashboardId: action.dashboardId,\n                prop: 'starred',\n                value: action.value,\n            });\n        }\n        case SET_DASHBOARD_DISPLAY_NAME: {\n            return updateDashboardProp({\n                state,\n                dashboardId: action.dashboardId,\n                prop: 'displayName',\n                value: action.value,\n            });\n        }\n        case SET_DASHBOARD_ITEMS: {\n            return {\n                ...state,\n                items: action.value,\n            };\n        }\n        default:\n            return state;\n    }\n};\n\n// root selector\n\nexport const sGetDashboardsRoot = state => state.dashboards;\n\n// selector level 1\n\n/**\n * Selector which returns a dashboard by id from the state object\n * If no matching dashboard is found it returns undefined\n * If dashboards.byId is null, then the dashboards api request\n * has not yet completed. If dashboards.byId is an empty object\n * then the dashboards api request is complete, but no dashboards\n * were returned\n *\n * @function\n * @param {Object} state The current state\n * @param {Number} id The id of the dashboard\n * @returns {Object | undefined}\n */\nexport const sGetDashboardById = (state, id) =>\n    orObject(sGetDashboardsRoot(state).byId)[id];\n\nexport const sDashboardsIsFetching = state => {\n    return sGetDashboardsRoot(state).byId === null;\n};\n\n/**\n * Selector which returns all dashboards (the byId object)\n *\n * @function\n * @param {Object} state The current state\n * @returns {Object | undefined}\n */\nexport const sGetAllDashboards = state =>\n    orObject(sGetDashboardsRoot(state).byId);\n\n/**\n * Selector which returns the current dashboard items\n *\n * @function\n * @param {Object} state The current state\n * @returns {Array}\n */\nexport const sGetDashboardItems = state => sGetDashboardsRoot(state).items;\n\n// selector level 2\n\nexport const sGetStarredDashboards = state =>\n    Object.values(sGetAllDashboards(state)).filter(\n        dashboard => dashboard.starred === true\n    );\n\nexport const sGetUnstarredDashboards = state =>\n    Object.values(sGetAllDashboards(state)).filter(\n        dashboard => dashboard.starred === false\n    );\n\n// selector level 3\n\nexport const sGetStarredDashboardIds = state => {\n    return sGetStarredDashboards(state).map(dashboard => dashboard.id);\n};\n\nexport const sGetUnstarredDashboardIds = state =>\n    sGetUnstarredDashboards(state).map(dashboard => dashboard.id);\n\nexport const sGetDashboardsSortedByStarred = state => [\n    ...arraySort(sGetStarredDashboards(state), 'ASC', 'displayName'),\n    ...arraySort(sGetUnstarredDashboards(state), 'ASC', 'displayName'),\n];\n\n// utils\n\n/**\n * Returns the array of dashboards, customized for ui\n * @function\n * @param {Array} data The original dashboard list\n * @returns {Array}\n */\nexport const getCustomDashboards = data => {\n    const uiItems = items =>\n        items.map(item => {\n            let type = isSpacerType(item) ? SPACER : item.type;\n\n            // TODO: temporary fix before 2.34 epic branch is merged\n            // if \"VISUALIZATION\", reset to \"REPORT_TABLE\" or \"CHART\"\n            if (type === VISUALIZATION) {\n                type = item.reportTable\n                    ? REPORT_TABLE\n                    : item.chart\n                    ? CHART\n                    : type;\n            }\n\n            const text = isTextType(item)\n                ? item.text === emptyTextItemContent\n                    ? ''\n                    : item.text\n                : null;\n\n            return {\n                ...item,\n                ...(text !== null ? { text } : {}),\n                type,\n            };\n        });\n\n    return arrayFrom(data).map(d => ({\n        id: d.id,\n        name: d.name,\n        displayName: d.displayName,\n        description: d.description,\n        displayDescription: d.displayDescription,\n        starred: d.favorite,\n        owner: d.user.name,\n        created: d.created\n            .split('T')\n            .join(' ')\n            .substr(0, 16),\n        lastUpdated: d.lastUpdated\n            .split('T')\n            .join(' ')\n            .substr(0, 16),\n        access: d.access,\n        numberOfItems: orArray(d.dashboardItems).length,\n        dashboardItems: uiItems(d.dashboardItems),\n    }));\n};\n","/** @module reducers/selected */\nimport { combineReducers } from 'redux';\n\nimport { validateReducer } from '../modules/util';\n\nexport const SET_SELECTED_ID = 'SET_SELECTED_ID';\nexport const SET_SELECTED_ISLOADING = 'SET_SELECTED_ISLOADING';\nexport const SET_SELECTED_SHOWDESCRIPTION = 'SET_SELECTED_SHOWDESCRIPTION';\n\nexport const DEFAULT_STATE_SELECTED_ID = null;\nexport const DEFAULT_STATE_SELECTED_ISLOADING = false;\nexport const DEFAULT_STATE_SELECTED_SHOWDESCRIPTION = false;\n\n/**\n * Reducer functions that computes and returns the new state based on the given action\n * @function\n * @param {Object} state The current state\n * @param {Object} action The action to be evaluated\n */\nconst id = (state = DEFAULT_STATE_SELECTED_ID, action) => {\n    switch (action.type) {\n        case SET_SELECTED_ID:\n            return validateReducer(action.value, DEFAULT_STATE_SELECTED_ID);\n        default:\n            return state;\n    }\n};\n\nconst isLoading = (state = DEFAULT_STATE_SELECTED_ISLOADING, action) => {\n    switch (action.type) {\n        case SET_SELECTED_ISLOADING:\n            return validateReducer(\n                action.value,\n                DEFAULT_STATE_SELECTED_ISLOADING\n            );\n        default:\n            return state;\n    }\n};\n\nconst showDescription = (\n    state = DEFAULT_STATE_SELECTED_SHOWDESCRIPTION,\n    action\n) => {\n    switch (action.type) {\n        case SET_SELECTED_SHOWDESCRIPTION:\n            return validateReducer(\n                action.value,\n                DEFAULT_STATE_SELECTED_SHOWDESCRIPTION\n            );\n        default:\n            return state;\n    }\n};\n\nexport default combineReducers({\n    id,\n    isLoading,\n    showDescription,\n});\n\n// Selectors\n\nexport const sGetSelectedRoot = state => state.selected;\n\nexport const sGetSelectedId = state => sGetSelectedRoot(state).id;\n\nexport const sGetSelectedIsLoading = state => sGetSelectedRoot(state).isLoading;\n\nexport const sGetSelectedShowDescription = state =>\n    sGetSelectedRoot(state).showDescription;\n","import { orObject } from '../modules/util';\nimport objectClean from 'd2-utilizr/lib/objectClean';\n\n/** @module reducers/visualizations */\n\nexport const ADD_VISUALIZATION = 'ADD_VISUALIZATION';\nexport const SET_ACTIVE_VISUALIZATION_TYPE = 'SET_ACTIVE_VISUALIZATION_TYPE';\n\nexport const DEFAULT_STATE_VISUALIZATIONS = {};\n\nconst isEmpty = p => p === undefined || p === null;\n\nexport default (state = DEFAULT_STATE_VISUALIZATIONS, action) => {\n    switch (action.type) {\n        case ADD_VISUALIZATION: {\n            return {\n                ...state,\n                [action.value.id]: objectClean(\n                    {\n                        ...orObject(state[action.value.id]),\n                        ...action.value,\n                    },\n                    isEmpty\n                ),\n            };\n        }\n        case SET_ACTIVE_VISUALIZATION_TYPE: {\n            return {\n                ...state,\n                [action.id]: objectClean(\n                    {\n                        ...orObject(state[action.id]),\n                        activeType: action.activeType,\n                    },\n                    isEmpty\n                ),\n            };\n        }\n        default:\n            return state;\n    }\n};\n\n// root selector\nexport const sGetVisualizationsRoot = state => state.visualizations;\n\n// selectors level 1\nexport const sGetVisualization = (state, id) => {\n    return sGetVisualizationsRoot(state)[id];\n};\n","import {\n    ADD_VISUALIZATION,\n    SET_ACTIVE_VISUALIZATION_TYPE,\n} from '../reducers/visualizations';\n\nexport const acAddVisualization = value => ({\n    type: ADD_VISUALIZATION,\n    value,\n});\n\nexport const acSetActiveVisualizationType = (id, activeType) => {\n    const action = {\n        type: SET_ACTIVE_VISUALIZATION_TYPE,\n        id,\n        activeType,\n    };\n\n    return action;\n};\n","import arrayClean from 'd2-utilizr/lib/arrayClean';\nimport {\n    getListItemFields,\n    getFavoritesFields,\n    getIdNameFields,\n} from './metadata';\n\n// Helper functions\n\nexport const onError = error => console.log('Error: ', error);\n\n// Dashboard item\nexport const getDashboardItemsFields = ({ withFavorite } = {}) =>\n    arrayClean([\n        'id',\n        'type',\n        'shape',\n        'x',\n        'y',\n        'width~rename(w)',\n        'height~rename(h)',\n        'messages',\n        'text',\n        'appKey',\n        `${getListItemFields().join(',')}`,\n        withFavorite\n            ? `${getFavoritesFields({\n                  withDimensions: withFavorite.withDimensions,\n              }).join(',')}`\n            : ``,\n    ]);\n\n// Dashboard\nexport const getDashboardFields = ({ withItems, withFavorite } = {}) =>\n    arrayClean([\n        `${getIdNameFields().join(',')}`,\n        'description',\n        'displayDescription',\n        'favorite',\n        `user[${getIdNameFields({ rename: true }).join(',')}]`,\n        'created',\n        'lastUpdated',\n        'access',\n        withItems\n            ? `dashboardItems[${getDashboardItemsFields({\n                  withFavorite,\n              }).join(',')}]`\n            : ``,\n    ]);\n","import { getInstance } from 'd2';\nimport arrayClean from 'd2-utilizr/lib/arrayClean';\nimport { onError, getDashboardFields } from './index';\n\n// Get \"all\" dashboards on startup\nexport const apiFetchDashboards = () =>\n    getInstance()\n        .then(d2 =>\n            d2.models.dashboard.list({\n                fields: [\n                    getDashboardFields().join(','),\n                    'dashboardItems[id]',\n                ].join(','),\n                paging: 'false',\n            })\n        )\n        .catch(onError);\n\n// Get more info about selected dashboard\nexport const apiFetchDashboard = id =>\n    getInstance()\n        .then(d2 =>\n            d2.models.dashboard.get(id, {\n                fields: arrayClean(\n                    getDashboardFields({\n                        withItems: true,\n                        withFavorite: { withDimensions: false },\n                    })\n                ).join(','),\n            })\n        )\n        .catch(onError);\n\n// Star dashboard\nexport const apiStarDashboard = (id, isStarred) => {\n    const url = `dashboards/${id}/favorite`;\n\n    getInstance().then(d2 => {\n        if (isStarred) {\n            d2.Api.getApi().post(url);\n        } else {\n            d2.Api.getApi().delete(url);\n        }\n    });\n};\n\nexport const apiDeleteDashboard = id => {\n    return getInstance()\n        .then(d2 => {\n            return d2.models.dashboards\n                .get(id)\n                .then(dashboard => dashboard.delete());\n        })\n        .catch(onError);\n};\n","import update from 'immutability-helper';\nimport { arrayToIdMap } from '../modules/util';\n\nexport const RECEIVED_MESSAGES = 'RECEIVED_MESSAGES';\n\nexport default (state = {}, action) => {\n    switch (action.type) {\n        case RECEIVED_MESSAGES: {\n            const conversations = arrayToIdMap(action.value);\n\n            const newState = update(state, { $merge: conversations });\n\n            return newState;\n        }\n        default:\n            return state;\n    }\n};\n\n// selectors\n\nexport const sGetMessagesRoot = state => state.messages;\n","import { getInstance } from 'd2';\n\nexport const getMessages = () => {\n    const fields =\n        'id,messageCount,lastUpdated,messageType,displayName,read,messages[id,read,sender[id,displayName],text,lastUpdated]';\n    const url = `/messageConversations?fields=${fields}&order=read:asc&pageSize=200`;\n    return getInstance()\n        .then(d2 => d2.Api.getApi().get(url))\n        .catch(error => console.log('Error:', error));\n};\n","export const RECEIVED_SNACKBAR_MESSAGE = 'RECEIVED_SNACKBAR_MESSAGE';\nexport const CLOSE_SNACKBAR = 'CLOSE_SNACKBAR';\n\nexport const DEFAULT_STATE_SNACKBAR = {\n    message: {},\n    duration: null,\n    open: false,\n};\n\nexport default (state = DEFAULT_STATE_SNACKBAR, action) => {\n    switch (action.type) {\n        case RECEIVED_SNACKBAR_MESSAGE: {\n            return { ...state, ...action.value };\n        }\n        case CLOSE_SNACKBAR: {\n            return DEFAULT_STATE_SNACKBAR;\n        }\n        default:\n            return state;\n    }\n};\n\n// selectors\n\nexport const sGetSnackbar = state => state.snackbar || DEFAULT_STATE_SNACKBAR;\n","import {\n    RECEIVED_SNACKBAR_MESSAGE,\n    CLOSE_SNACKBAR,\n} from '../reducers/snackbar';\n\nexport const acReceivedSnackbarMessage = value => ({\n    type: RECEIVED_SNACKBAR_MESSAGE,\n    value,\n});\n\nexport const acCloseSnackbar = () => ({\n    type: CLOSE_SNACKBAR,\n});\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport Snackbar from '@material-ui/core/Snackbar';\nimport PropTypes from 'prop-types';\n\nimport { sGetSnackbar } from '../../reducers/snackbar';\nimport { acCloseSnackbar } from '../../actions/snackbar';\n\nconst LOADING_DASHBOARD = 'LOADING_DASHBOARD';\nexport const loadingDashboardMsg = { name: '', type: LOADING_DASHBOARD };\n\nconst SnackbarMessageContent = ({ message }) => {\n    if (typeof message === 'object') {\n        //future message types:  switch(message.type)\n        return (\n            <span>\n                Loading <span style={{ fontWeight: 800 }}>{message.name}</span>{' '}\n                dashboard\n            </span>\n        );\n    }\n    return message;\n};\n\nexport const SnackbarMessage = props => {\n    return (\n        <Snackbar\n            style={{ zIndex: 10001 }}\n            open={props.snackbarOpen}\n            message={<SnackbarMessageContent message={props.snackbarMessage} />}\n            autoHideDuration={props.snackbarDuration}\n            onClose={props.onCloseSnackbar}\n        />\n    );\n};\n\nconst mapStateToProps = state => {\n    const { message, duration, open } = sGetSnackbar(state);\n    return {\n        snackbarOpen: open,\n        snackbarMessage: message,\n        snackbarDuration: duration,\n    };\n};\n\nSnackbarMessage.propTypes = {\n    snackbarDuration: PropTypes.string,\n    snackbarMessage: PropTypes.object,\n    snackbarOpen: PropTypes.bool,\n    onCloseSnackbar: PropTypes.func,\n};\n\nexport default connect(\n    mapStateToProps,\n    {\n        onCloseSnackbar: acCloseSnackbar,\n    }\n)(SnackbarMessage);\n","import {\n    SET_SELECTED_ID,\n    SET_SELECTED_ISLOADING,\n    SET_SELECTED_SHOWDESCRIPTION,\n} from '../reducers/selected';\nimport { acAddVisualization } from '../actions/visualizations';\nimport { sGetSelectedIsLoading } from '../reducers/selected';\nimport { sGetUserUsername } from '../reducers/user';\nimport { getCustomDashboards, sGetDashboardById } from '../reducers/dashboards';\nimport { apiFetchDashboard } from '../api/dashboards';\nimport { acSetDashboardItems, acAppendDashboards } from './dashboards';\nimport { withShape } from '../components/ItemGrid/gridUtil';\nimport { tGetMessages } from '../components/Item/MessagesItem/actions';\nimport { acReceivedSnackbarMessage, acCloseSnackbar } from './snackbar';\nimport { storePreferredDashboardId } from '../api/localStorage';\nimport { loadingDashboardMsg } from '../components/SnackbarMessage/SnackbarMessage';\nimport {\n    REPORT_TABLE,\n    CHART,\n    MAP,\n    EVENT_REPORT,\n    EVENT_CHART,\n    MESSAGES,\n} from '../modules/itemTypes';\nimport { extractFavorite } from '../components/Item/VisualizationItem/plugin';\nimport { orObject } from '../modules/util';\n\n// actions\n\nexport const acSetSelectedId = value => ({\n    type: SET_SELECTED_ID,\n    value,\n});\n\nexport const acSetSelectedIsLoading = value => ({\n    type: SET_SELECTED_ISLOADING,\n    value,\n});\n\nexport const acSetSelectedShowDescription = value => ({\n    type: SET_SELECTED_SHOWDESCRIPTION,\n    value,\n});\n\nexport const tLoadDashboard = id => async dispatch => {\n    try {\n        const dash = await apiFetchDashboard(id);\n        dispatch(acAppendDashboards(dash));\n\n        return Promise.resolve(dash);\n    } catch (err) {\n        console.log('Error: ', err);\n        return err;\n    }\n};\n\n// thunks\nexport const tSetSelectedDashboardById = id => async (dispatch, getState) => {\n    dispatch(acSetSelectedIsLoading(true));\n\n    const snackbarTimeout = setTimeout(() => {\n        const dashboardName = orObject(sGetDashboardById(getState(), id))\n            .displayName;\n        if (sGetSelectedIsLoading(getState()) && dashboardName) {\n            loadingDashboardMsg.name = dashboardName;\n\n            dispatch(\n                acReceivedSnackbarMessage({\n                    message: loadingDashboardMsg,\n                    open: true,\n                })\n            );\n        }\n    }, 500);\n\n    const onSuccess = selected => {\n        const customDashboard = getCustomDashboards(selected)[0];\n\n        dispatch(\n            acSetDashboardItems(withShape(customDashboard.dashboardItems))\n        );\n\n        storePreferredDashboardId(sGetUserUsername(getState()), id);\n\n        // add visualizations to store\n        customDashboard.dashboardItems.forEach(item => {\n            switch (item.type) {\n                case REPORT_TABLE:\n                case CHART:\n                case MAP:\n                case EVENT_REPORT:\n                case EVENT_CHART:\n                    dispatch(acAddVisualization(extractFavorite(item)));\n                    break;\n                case MESSAGES:\n                    dispatch(tGetMessages(id));\n                    break;\n                default:\n                    break;\n            }\n        });\n\n        dispatch(acSetSelectedId(id));\n\n        dispatch(acSetSelectedIsLoading(false));\n\n        clearTimeout(snackbarTimeout);\n\n        dispatch(acCloseSnackbar());\n\n        return selected;\n    };\n\n    const onError = error => {\n        console.log('Error: ', error);\n        return error;\n    };\n\n    try {\n        const selected = await dispatch(tLoadDashboard(id));\n\n        return onSuccess(selected);\n    } catch (err) {\n        return onError(err);\n    }\n};\n","export const getPreferredDashboardId = username =>\n    localStorage.getItem(`dhis2.dashboard.current.${username}`) || undefined;\n\nexport const storePreferredDashboardId = (username, dashboardId) => {\n    localStorage.setItem(`dhis2.dashboard.current.${username}`, dashboardId);\n};\n","import { RECEIVED_MESSAGES } from '../../../reducers/messages';\nimport { getMessages } from '../../../api/messages';\n\nconst onError = (action, error) => {\n    console.log(`Error in action ${action}: ${error}`);\n    return error;\n};\n\nexport const receivedMessages = value => ({\n    type: RECEIVED_MESSAGES,\n    value,\n});\n\nexport const tGetMessages = () => async dispatch => {\n    try {\n        const messages = await getMessages();\n        const { messageConversations } = messages;\n\n        return dispatch(receivedMessages(messageConversations));\n    } catch (err) {\n        return onError('Get Messages', err);\n    }\n};\n","/** @module reducers/editDashboard */\nimport update from 'immutability-helper';\nimport isEmpty from 'lodash/isEmpty';\nimport { orArray, orObject } from '../modules/util';\n\nexport const RECEIVED_EDIT_DASHBOARD = 'RECEIVED_EDIT_DASHBOARD';\nexport const RECEIVED_NOT_EDITING = 'RECEIVED_NOT_EDITING';\nexport const START_NEW_DASHBOARD = 'START_NEW_DASHBOARD';\nexport const RECEIVED_TITLE = 'RECEIVED_TITLE';\nexport const RECEIVED_DESCRIPTION = 'RECEIVED_DESCRIPTION';\nexport const ADD_DASHBOARD_ITEM = 'ADD_DASHBOARD_ITEM';\nexport const REMOVE_DASHBOARD_ITEM = 'REMOVE_DASHBOARD_ITEM';\nexport const UPDATE_DASHBOARD_ITEM = 'UPDATE_DASHBOARD_ITEM';\nexport const RECEIVED_DASHBOARD_LAYOUT = 'RECEIVED_DASHBOARD_LAYOUT';\n\nexport const DEFAULT_STATE_EDIT_DASHBOARD = {};\nexport const NEW_DASHBOARD_STATE = {\n    id: '',\n    name: '',\n    access: {},\n    description: '',\n    dashboardItems: [],\n};\n\nexport default (state = DEFAULT_STATE_EDIT_DASHBOARD, action) => {\n    switch (action.type) {\n        case RECEIVED_EDIT_DASHBOARD: {\n            const newState = {};\n            Object.keys(NEW_DASHBOARD_STATE).map(\n                k => (newState[k] = action.value[k])\n            );\n            return newState;\n        }\n        case RECEIVED_NOT_EDITING:\n            return DEFAULT_STATE_EDIT_DASHBOARD;\n        case START_NEW_DASHBOARD:\n            return NEW_DASHBOARD_STATE;\n        case RECEIVED_TITLE: {\n            return Object.assign({}, state, { name: action.value });\n        }\n        case RECEIVED_DESCRIPTION: {\n            return Object.assign({}, state, {\n                description: action.value,\n            });\n        }\n        case ADD_DASHBOARD_ITEM:\n            return update(state, {\n                dashboardItems: { $unshift: [action.value] },\n            });\n        case REMOVE_DASHBOARD_ITEM: {\n            const idToRemove = action.value;\n\n            const dashboardItemIndex = state.dashboardItems.findIndex(\n                item => item.id === idToRemove\n            );\n\n            if (dashboardItemIndex > -1) {\n                return update(state, {\n                    dashboardItems: {\n                        $splice: [[dashboardItemIndex, 1]],\n                    },\n                });\n            }\n\n            return state;\n        }\n        case RECEIVED_DASHBOARD_LAYOUT: {\n            const stateItems = orArray(state.dashboardItems);\n\n            const newStateItems = action.value.map(({ x, y, w, h, i }) => {\n                const stateItem = stateItems.find(si => si.id === i);\n\n                return Object.assign({}, stateItem, { w, h, x, y });\n            });\n\n            return update(state, {\n                dashboardItems: { $set: newStateItems },\n            });\n        }\n        case UPDATE_DASHBOARD_ITEM: {\n            const dashboardItem = action.value;\n\n            const dashboardItemIndex = state.dashboardItems.findIndex(\n                item => item.id === dashboardItem.id\n            );\n\n            if (dashboardItemIndex > -1) {\n                const newState = update(state, {\n                    dashboardItems: {\n                        $splice: [[dashboardItemIndex, 1, dashboardItem]],\n                    },\n                });\n\n                return newState;\n            }\n\n            return state;\n        }\n        default:\n            return state;\n    }\n};\n\n// root selector\n\nexport const sGetEditDashboardRoot = state => state.editDashboard;\n\n// selectors\n\nexport const sGetIsEditing = state => !isEmpty(state.editDashboard);\n\nexport const sGetIsNewDashboard = state => {\n    return (\n        !isEmpty(state.editDashboard) && sGetEditDashboardRoot(state).id === ''\n    );\n};\n\nexport const sGetEditDashboardItems = state =>\n    orObject(sGetEditDashboardRoot(state)).dashboardItems;\n","export const CLEAR_EDIT_ITEM_FILTERS = 'CLEAR_EDIT_ITEM_FILTERS';\nexport const REMOVE_EDIT_ITEM_FILTER = 'REMOVE_EDIT_ITEM_FILTER';\nexport const SET_EDIT_ITEM_FILTERS = 'SET_EDIT_ITEM_FILTERS';\n\nexport const DEFAULT_STATE_EDIT_ITEM_FILTERS = {};\n\nexport default (state = DEFAULT_STATE_EDIT_ITEM_FILTERS, action) => {\n    switch (action.type) {\n        case REMOVE_EDIT_ITEM_FILTER: {\n            const newState = { ...state };\n\n            delete newState[action.id];\n\n            return newState;\n        }\n        case SET_EDIT_ITEM_FILTERS: {\n            return action.filters;\n        }\n        case CLEAR_EDIT_ITEM_FILTERS: {\n            return DEFAULT_STATE_EDIT_ITEM_FILTERS;\n        }\n        default:\n            return state;\n    }\n};\n\n// selectors\n\nexport const sGetEditItemFiltersRoot = state => state.editItemFilters;\n\nexport const sGetEditFiltersKeys = state =>\n    Object.keys(sGetEditItemFiltersRoot(state));\n","export const CLEAR_ITEM_FILTERS = 'CLEAR_ITEM_FILTERS';\nexport const SET_ITEM_FILTERS = 'SET_ITEM_FILTERS';\nexport const ADD_ITEM_FILTER = 'ADD_ITEM_FILTER';\nexport const REMOVE_ITEM_FILTER = 'REMOVE_ITEM_FILTER';\n\nexport const DEFAULT_STATE_ITEM_FILTERS = {};\n\nexport default (state = DEFAULT_STATE_ITEM_FILTERS, action) => {\n    switch (action.type) {\n        case ADD_ITEM_FILTER: {\n            return {\n                ...state,\n                [action.filter.id]: action.filter.value,\n            };\n        }\n        case REMOVE_ITEM_FILTER: {\n            const newState = { ...state };\n\n            delete newState[action.id];\n\n            return newState;\n        }\n        case SET_ITEM_FILTERS: {\n            return action.filters;\n        }\n        case CLEAR_ITEM_FILTERS: {\n            return DEFAULT_STATE_ITEM_FILTERS;\n        }\n        default:\n            return state;\n    }\n};\n\n// selectors\n\nexport const sGetItemFiltersRoot = state => state.itemFilters;\n\nexport const sGetFiltersKeys = state => Object.keys(sGetItemFiltersRoot(state));\n","import {\n    ADD_ITEM_FILTER,\n    REMOVE_ITEM_FILTER,\n    SET_ITEM_FILTERS,\n    CLEAR_ITEM_FILTERS,\n} from '../reducers/itemFilters';\n\nexport const FILTER_ORG_UNIT = 'ou';\n\n// actions\n\nexport const acAddItemFilter = filter => ({\n    type: ADD_ITEM_FILTER,\n    filter,\n});\n\nexport const acRemoveItemFilter = id => ({\n    type: REMOVE_ITEM_FILTER,\n    id,\n});\n\nexport const acClearItemFilters = () => ({\n    type: CLEAR_ITEM_FILTERS,\n});\n\nexport const acSetItemFilters = filters => ({\n    type: SET_ITEM_FILTERS,\n    filters,\n});\n","import {\n    REMOVE_EDIT_ITEM_FILTER,\n    SET_EDIT_ITEM_FILTERS,\n    CLEAR_EDIT_ITEM_FILTERS,\n} from '../reducers/editItemFilters';\n\n// actions\n\nexport const acRemoveEditItemFilter = id => ({\n    type: REMOVE_EDIT_ITEM_FILTER,\n    id,\n});\n\nexport const acClearEditItemFilters = () => ({\n    type: CLEAR_EDIT_ITEM_FILTERS,\n});\n\nexport const acSetEditItemFilters = filters => ({\n    type: SET_EDIT_ITEM_FILTERS,\n    filters,\n});\n","import { getInstance } from 'd2';\n\nconst onError = error => console.log('Error: ', error);\n\nconst saveDashboard = (dashboard, data) => {\n    const { name, description, dashboardItems } = data;\n\n    dashboard.name = name;\n    dashboard.description = description;\n    dashboard.dashboardItems = dashboardItems.map(item =>\n        Object.assign({}, item, { width: item.w, height: item.h })\n    );\n\n    return dashboard.save().then(msg => msg.response.uid);\n};\n\nexport const updateDashboard = data => {\n    return getInstance()\n        .then(d2 => {\n            return d2.models.dashboards\n                .get(data.id)\n                .then(dashboard => saveDashboard(dashboard, data));\n        })\n        .catch(onError);\n};\n\nexport const postDashboard = data => {\n    return getInstance().then(d2 => {\n        const dashboard = d2.models.dashboards.create();\n\n        return saveDashboard(dashboard, data);\n    });\n};\n","import { generateUid } from 'd2/uid';\n\nimport {\n    RECEIVED_EDIT_DASHBOARD,\n    START_NEW_DASHBOARD,\n    RECEIVED_NOT_EDITING,\n    RECEIVED_TITLE,\n    RECEIVED_DESCRIPTION,\n    RECEIVED_DASHBOARD_LAYOUT,\n    ADD_DASHBOARD_ITEM,\n    UPDATE_DASHBOARD_ITEM,\n    REMOVE_DASHBOARD_ITEM,\n} from '../reducers/editDashboard';\nimport { sGetEditDashboardRoot } from '../reducers/editDashboard';\nimport { updateDashboard, postDashboard } from '../api/editDashboard';\nimport { tSetSelectedDashboardById } from '../actions/selected';\nimport { NEW_ITEM_SHAPE } from '../components/ItemGrid/gridUtil';\nimport {\n    itemTypeMap,\n    isSpacerType,\n    TEXT,\n    emptyTextItemContent,\n    isTextType,\n} from '../modules/itemTypes';\n\nconst onError = error => {\n    console.log('Error (Saving Dashboard): ', error);\n    return error;\n};\n\n// actions\n\nexport const acSetEditDashboard = (dashboard, items) => {\n    const val = {\n        ...dashboard,\n        dashboardItems: items,\n    };\n\n    return {\n        type: RECEIVED_EDIT_DASHBOARD,\n        value: val,\n    };\n};\n\nexport const acSetEditNewDashboard = () => ({\n    type: START_NEW_DASHBOARD,\n});\n\nexport const acClearEditDashboard = () => ({\n    type: RECEIVED_NOT_EDITING,\n});\n\nexport const acSetDashboardTitle = value => ({\n    type: RECEIVED_TITLE,\n    value,\n});\n\nexport const acSetDashboardDescription = value => ({\n    type: RECEIVED_DESCRIPTION,\n    value,\n});\n\nexport const acUpdateDashboardLayout = value => ({\n    type: RECEIVED_DASHBOARD_LAYOUT,\n    value,\n});\n\nexport const acAddDashboardItem = item => {\n    const type = item.type;\n    delete item.type;\n    const itemPropName = itemTypeMap[type].propName;\n\n    return {\n        type: ADD_DASHBOARD_ITEM,\n        value: {\n            id: generateUid(),\n            type,\n            [itemPropName]: item.content,\n            ...NEW_ITEM_SHAPE,\n        },\n    };\n};\n\nexport const acUpdateDashboardItem = item => ({\n    type: UPDATE_DASHBOARD_ITEM,\n    value: item,\n});\n\nexport const acRemoveDashboardItem = value => ({\n    type: REMOVE_DASHBOARD_ITEM,\n    value,\n});\n\n// thunks\n\nexport const tSaveDashboard = () => async (dispatch, getState) => {\n    const dashboard = sGetEditDashboardRoot(getState());\n\n    const dashboardItems = dashboard.dashboardItems.map(item => {\n        const text = isTextType(item)\n            ? item.text || emptyTextItemContent\n            : null;\n\n        const type = isSpacerType(item) ? TEXT : item.type;\n\n        return {\n            ...item,\n            ...(text ? { text } : {}),\n            type,\n        };\n    });\n\n    const dashboardToSave = {\n        ...dashboard,\n        dashboardItems,\n    };\n\n    try {\n        const dashboardId = dashboardToSave.id\n            ? await updateDashboard(dashboardToSave)\n            : await postDashboard(dashboardToSave);\n\n        dispatch(acClearEditDashboard());\n        await dispatch(tSetSelectedDashboardById(dashboardId));\n\n        return Promise.resolve(dashboardId);\n    } catch (error) {\n        onError(error);\n    }\n};\n","import {\n    SET_DASHBOARDS,\n    ADD_DASHBOARDS,\n    SET_DASHBOARD_STARRED,\n    SET_DASHBOARD_DISPLAY_NAME,\n    SET_DASHBOARD_ITEMS,\n} from '../reducers/dashboards';\nimport {\n    getCustomDashboards,\n    sGetDashboardById,\n    sGetDashboardsSortedByStarred,\n} from '../reducers/dashboards';\nimport { sGetUserUsername } from '../reducers/user';\nimport { tSetSelectedDashboardById, acSetSelectedId } from './selected';\nimport { sGetSelectedId } from '../reducers/selected';\nimport { sGetIsEditing } from '../reducers/editDashboard';\nimport { sGetEditItemFiltersRoot } from '../reducers/editItemFilters';\nimport { acSetItemFilters, acClearItemFilters } from './itemFilters';\nimport { acClearEditItemFilters } from './editItemFilters';\nimport { acClearEditDashboard } from './editDashboard';\nimport {\n    apiFetchDashboards,\n    apiStarDashboard,\n    apiDeleteDashboard,\n} from '../api/dashboards';\nimport { getPreferredDashboardId } from '../api/localStorage';\nimport { arrayToIdMap } from '../modules/util';\n\n// actions\n\nexport const acSetDashboards = dashboards => ({\n    type: SET_DASHBOARDS,\n    value: arrayToIdMap(getCustomDashboards(dashboards)),\n});\n\nexport const acAppendDashboards = dashboards => ({\n    type: ADD_DASHBOARDS,\n    value: arrayToIdMap(getCustomDashboards(dashboards)),\n});\n\nexport const acSetDashboardStarred = (dashboardId, isStarred) => ({\n    type: SET_DASHBOARD_STARRED,\n    dashboardId: dashboardId,\n    value: isStarred,\n});\n\nexport const acSetDashboardDisplayName = (dashboardId, value) => ({\n    type: SET_DASHBOARD_DISPLAY_NAME,\n    dashboardId,\n    value,\n});\n\nexport const acSetDashboardItems = value => ({\n    type: SET_DASHBOARD_ITEMS,\n    value,\n});\n\n// thunks\n\nexport const tFetchDashboards = () => async dispatch => {\n    const collection = await apiFetchDashboards();\n    dispatch(acSetDashboards(collection.toArray()));\n};\n\nexport const tSelectDashboard = id => async (dispatch, getState) => {\n    const onError = error => {\n        console.log('Error (apiFetchDashboards): ', error);\n        return error;\n    };\n\n    try {\n        const state = getState();\n\n        let dashboardToSelect = null;\n        if (id) {\n            dashboardToSelect = sGetDashboardById(state, id) || null;\n        } else {\n            const preferredId = getPreferredDashboardId(\n                sGetUserUsername(state)\n            );\n            const dash = sGetDashboardById(state, preferredId);\n            dashboardToSelect =\n                preferredId && dash\n                    ? dash\n                    : sGetDashboardsSortedByStarred(state)[0];\n        }\n\n        if (dashboardToSelect) {\n            dispatch(tSetSelectedDashboardById(dashboardToSelect.id));\n\n            if (dashboardToSelect.id === sGetSelectedId(state)) {\n                if (sGetIsEditing(state)) {\n                    // disable filters when switching to edit mode\n                    dispatch(acClearItemFilters());\n                } else {\n                    // enable filters when switching to view mode\n                    dispatch(acSetItemFilters(sGetEditItemFiltersRoot(state)));\n                }\n            } else {\n                // clear filters when switching dashboard\n                dispatch(acClearEditItemFilters());\n                dispatch(acClearItemFilters());\n            }\n        } else {\n            dispatch(acSetSelectedId(false));\n        }\n    } catch (err) {\n        return onError(err);\n    }\n};\n\nexport const tStarDashboard = (id, isStarred) => async dispatch => {\n    const onSuccess = id => {\n        dispatch(acSetDashboardStarred(id, isStarred));\n        return id;\n    };\n\n    const onError = error => {\n        console.log('Error (apiStarDashboard): ', error);\n        return error;\n    };\n    try {\n        await apiStarDashboard(id, isStarred);\n        return onSuccess(id);\n    } catch (err) {\n        return onError(err);\n    }\n};\n\nexport const tDeleteDashboard = id => async dispatch => {\n    try {\n        await apiDeleteDashboard(id);\n        dispatch(acClearEditDashboard());\n        dispatch(acSetSelectedId());\n        dispatch(acSetDashboardItems([]));\n\n        await dispatch(tFetchDashboards());\n\n        return Promise.resolve();\n    } catch (err) {\n        console.log('Error (deleteDashboard): ', err);\n        return err;\n    }\n};\n","/** @module reducers/controlBar */\nimport { combineReducers } from 'redux';\nimport { validateReducer } from '../modules/util';\n\nexport const SET_CONTROLBAR_USER_ROWS = 'SET_CONTROLBAR_USER_ROWS';\n\nexport const DEFAULT_STATE_CONTROLBAR_ROWS = 1;\n\nconst userRows = (state = DEFAULT_STATE_CONTROLBAR_ROWS, action) => {\n    switch (action.type) {\n        case SET_CONTROLBAR_USER_ROWS:\n            return validateReducer(action.value, DEFAULT_STATE_CONTROLBAR_ROWS);\n        default:\n            return state;\n    }\n};\n\nexport default combineReducers({\n    userRows,\n});\n\n/**\n * Selectors that point to specific props in the state object\n * @function\n * @param {Object} state\n * @returns {Object}\n */\nexport const sGetControlBarRoot = state => state.controlBar;\n\n// Selector dependency level 2\n\nexport const sGetControlBarUserRows = state =>\n    sGetControlBarRoot(state).userRows;\n","import { getInstance } from 'd2';\nimport { DEFAULT_STATE_CONTROLBAR_ROWS } from '../reducers/controlBar';\n\nconst NAMESPACE = 'dashboard';\nconst KEY = 'controlBarRows';\n\nconst hasNamespace = async d2 => await d2.currentUser.dataStore.has(NAMESPACE);\n\nconst getNamespace = async (d2, hasNamespace) =>\n    hasNamespace\n        ? await d2.currentUser.dataStore.get(NAMESPACE)\n        : await d2.currentUser.dataStore.create(NAMESPACE);\n\nexport const apiGetControlBarRows = async () => {\n    const d2 = await getInstance();\n    const namespace = await getNamespace(d2, await hasNamespace(d2));\n    const hasKey = namespace.keys && namespace.keys.find(key => key === KEY);\n\n    if (hasKey) {\n        return await namespace.get(KEY);\n    } else {\n        await apiPostControlBarRows(DEFAULT_STATE_CONTROLBAR_ROWS, namespace);\n        console.log(\n            '(These errors to /userDataStore/dashboard can be ignored)'\n        );\n        return DEFAULT_STATE_CONTROLBAR_ROWS;\n    }\n};\n\nexport const apiPostControlBarRows = async (rows, namespace) => {\n    const d2 = await getInstance();\n    const ns = namespace || (await getNamespace(d2, hasNamespace));\n\n    ns.set(KEY, rows);\n};\n","import { SET_CONTROLBAR_USER_ROWS } from '../reducers/controlBar';\nimport { apiGetControlBarRows } from '../api/controlBar';\n\n// actions\n\nexport const acSetControlBarUserRows = rows => ({\n    type: SET_CONTROLBAR_USER_ROWS,\n    value: rows,\n});\n\n// thunks\n\nexport const tSetControlBarRows = () => async dispatch => {\n    const onSuccess = rows => {\n        dispatch(acSetControlBarUserRows(rows));\n    };\n\n    const onError = error => {\n        console.log('Error (apiGetControlBarRows): ', error);\n        return error;\n    };\n\n    try {\n        const controlBarRows = await apiGetControlBarRows();\n        return onSuccess(controlBarRows);\n    } catch (err) {\n        return onError(err);\n    }\n};\n","import {\n    getDimensionById,\n    DIMENSION_ID_PERIOD,\n    DIMENSION_ID_ORGUNIT,\n} from '@dhis2/analytics';\n\nexport const SET_DIMENSIONS = 'SET_DIMENSIONS';\nexport const DEFAULT_DIMENSIONS = [\n    getDimensionById(DIMENSION_ID_PERIOD),\n    getDimensionById(DIMENSION_ID_ORGUNIT),\n];\n\nexport default (state = DEFAULT_DIMENSIONS, action) => {\n    switch (action.type) {\n        case SET_DIMENSIONS: {\n            return [...DEFAULT_DIMENSIONS, ...action.value];\n        }\n        default:\n            return state;\n    }\n};\n\nexport const sGetDimensions = state => state.dimensions;\n","export const SET_SETTINGS = 'SET_SETTINGS';\nexport const ADD_SETTINGS = 'ADD_SETTINGS';\n\nexport const DEFAULT_SETTINGS = {\n    keyDateFormat: 'yyyy-MM-dd',\n    keyAnalysisRelativePeriod: 'LAST_12_MONTHS',\n    keyAnalysisDigitGroupSeparator: 'SPACE',\n    displayNameProperty: 'displayName',\n    uiLocale: 'en',\n    rootOrganisationUnit: {},\n};\n\nexport default (state = DEFAULT_SETTINGS, action) => {\n    switch (action.type) {\n        case SET_SETTINGS: {\n            return Object.assign({}, action.value);\n        }\n        case ADD_SETTINGS: {\n            return {\n                ...state,\n                ...action.value,\n            };\n        }\n        default:\n            return state;\n    }\n};\n\n// Selectors\n\nexport const sGetSettings = state => state.settings;\n\nexport const sGetSettingsDisplayNameProperty = state =>\n    sGetSettings(state).displayNameProperty;\n\nexport const sGetRootOrgUnit = state =>\n    sGetSettings(state).rootOrganisationUnit;\n\nexport const sGetRelativePeriod = state =>\n    sGetSettings(state).keyAnalysisRelativePeriod;\n\nexport const sGetUiLocale = state => sGetSettings(state).uiLocale;\n","import { SET_DIMENSIONS } from '../reducers/dimensions';\nimport { apiFetchDimensions } from '@dhis2/analytics';\nimport { sGetSettingsDisplayNameProperty } from '../reducers/settings';\n\nexport const acSetDimensions = dimensions => ({\n    type: SET_DIMENSIONS,\n    value: dimensions,\n});\n\nexport const tSetDimensions = d2 => async (dispatch, getState) => {\n    const onSuccess = dimensions => {\n        dispatch(acSetDimensions(dimensions));\n    };\n\n    const onError = error => {\n        console.log('Error (apiFetchDimensions): ', error);\n        return error;\n    };\n\n    try {\n        const displayNameProp = sGetSettingsDisplayNameProperty(getState());\n        const dimensions = await apiFetchDimensions(d2, displayNameProp);\n\n        // filter out CATEGORY that are not of type ATTRIBUTE\n        const filteredDimensions = dimensions.filter(\n            dim =>\n                dim.dimensionType !== 'CATEGORY' ||\n                (dim.dimensionType === 'CATEGORY' &&\n                    dim.dataDimensionType === 'ATTRIBUTE')\n        );\n        return onSuccess(filteredDimensions);\n    } catch (err) {\n        return onError(err);\n    }\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport i18n from '@dhis2/d2-i18n';\nimport { colors } from '@dhis2/ui-core';\nimport { withStyles } from '@material-ui/core/styles';\n\nexport const SHOWMORE_BAR_HEIGHT = 16;\n\nconst styles = {\n    showMore: {\n        color: colors.grey700,\n        cursor: 'pointer',\n        fontSize: 11,\n        paddingTop: 5,\n        '&:hover': {\n            textDecoration: 'underline',\n        },\n    },\n    disabled: {\n        paddingTop: 5,\n        color: colors.grey500,\n        fontSize: 11,\n        cursor: 'not-allowed',\n    },\n};\n\nexport const ShowMoreButton = ({ onClick, isMaxHeight, classes, disabled }) => {\n    return (\n        <div style={{ textAlign: 'center' }}>\n            {disabled ? (\n                <div className={classes.disabled}>{i18n.t('Show more')}</div>\n            ) : (\n                <div className={classes.showMore} onClick={onClick}>\n                    {isMaxHeight ? i18n.t('Show less') : i18n.t('Show more')}\n                </div>\n            )}\n        </div>\n    );\n};\n\nShowMoreButton.propTypes = {\n    classes: PropTypes.object,\n    disabled: PropTypes.bool,\n    isMaxHeight: PropTypes.bool,\n    onClick: PropTypes.func,\n};\n\nexport default withStyles(styles)(ShowMoreButton);\n","import { SHOWMORE_BAR_HEIGHT } from './ShowMoreButton';\n\nexport const CONTROL_BAR_ROW_HEIGHT = 40;\nexport const FIRST_ROW_PADDING_HEIGHT = 10;\nexport const MIN_ROW_COUNT = 1;\n\nexport const HEADERBAR_HEIGHT = 48;\n\nconst CONTROL_BAR_OUTER_HEIGHT_DIFF =\n    FIRST_ROW_PADDING_HEIGHT + SHOWMORE_BAR_HEIGHT - 2; // 2 pixel \"adjustment\"\n\nexport const getRowsHeight = rows => {\n    return rows * CONTROL_BAR_ROW_HEIGHT;\n};\n\nexport const getNumRowsFromHeight = height => {\n    return Math.floor(\n        (height - CONTROL_BAR_OUTER_HEIGHT_DIFF) / CONTROL_BAR_ROW_HEIGHT\n    );\n};\n\nexport const getTopOffset = rows => {\n    return HEADERBAR_HEIGHT + getControlBarHeight(rows, false);\n};\n\nexport const getControlBarHeight = rows => {\n    return getRowsHeight(rows) + CONTROL_BAR_OUTER_HEIGHT_DIFF;\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { colors } from '@dhis2/ui-core';\nimport { HEADERBAR_HEIGHT } from './controlBarDimensions';\n\nimport classes from './styles/ControlBar.module.css';\n\nconst DRAG_HANDLE_HEIGHT = 7;\n\nclass ControlBar extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            dragging: false,\n        };\n    }\n\n    onStartDrag = () => {\n        this.setState({ dragging: true });\n        window.addEventListener('mousemove', this.onDrag);\n        window.addEventListener('mouseup', this.onEndDrag);\n    };\n\n    onDrag = event => {\n        event.preventDefault();\n        event.stopPropagation();\n\n        const newHeight = event.clientY;\n\n        if (\n            this.props.onChangeHeight &&\n            newHeight !== this.props.height &&\n            newHeight > 0\n        ) {\n            requestAnimationFrame(() => {\n                this.props.onChangeHeight(newHeight);\n            });\n        }\n    };\n\n    onEndDrag = () => {\n        this.setState({ dragging: false });\n        window.removeEventListener('mousemove', this.onDrag);\n        window.removeEventListener('mouseup', this.onEndDrag);\n\n        if (this.props.onEndDrag) {\n            this.props.onEndDrag();\n        }\n    };\n\n    renderDragHandle() {\n        return typeof this.props.onChangeHeight === 'function' ? (\n            <div\n                className={classes.draghandle}\n                style={{ height: DRAG_HANDLE_HEIGHT }}\n                onMouseDown={this.onStartDrag}\n            />\n        ) : null;\n    }\n\n    render() {\n        const height = Math.max(this.props.height, 0) + DRAG_HANDLE_HEIGHT;\n\n        const rootStyle = Object.assign(\n            {\n                height,\n                top: HEADERBAR_HEIGHT,\n                backgroundColor: this.props.editMode\n                    ? colors.yellow050\n                    : colors.white,\n                paddingBottom: DRAG_HANDLE_HEIGHT,\n            },\n            // Disable animations while dragging\n            this.state.dragging ? { transition: 'none' } : {}\n        );\n\n        return (\n            <div style={rootStyle} className={classes.root}>\n                <div className={classes.content}>{this.props.children}</div>\n                {this.renderDragHandle()}\n            </div>\n        );\n    }\n}\n\nControlBar.propTypes = {\n    /**\n     * The height of the control bar in number of lines. Must be a positive integer.\n     */\n    children: PropTypes.node.isRequired,\n\n    /**\n     * If true, the background color of the control bar changes to indicate that edit mode is active.\n     */\n    editMode: PropTypes.bool.isRequired,\n\n    /**\n     * Callback function that is called when the control bar is resized.\n     * The callback receives one argument: The new height in pixels.\n     *\n     * If no callback is specified the control bar will not have a drag handle.\n     */\n    height: PropTypes.number.isRequired,\n\n    /**\n     * Callback function that is called when the control bar is dropped after being dragged.\n     * The callback receives one argument: The new height in pixels.\n     *\n     * Ignored if no \"onChangeHeight\" function is provided.\n     */\n    onChangeHeight: PropTypes.func,\n\n    /**\n     * The contents of the control bar.\n     */\n    onEndDrag: PropTypes.func,\n};\n\nControlBar.defaultProps = {\n    onChangeHeight: null,\n    onEndDrag: null,\n};\n\nexport default ControlBar;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst StarIcon = ({ className }) => (\n    <svg\n        className={className}\n        xmlns=\"http://www.w3.org/2000/svg\"\n        viewBox=\"0 0 24 24\"\n    >\n        <path d=\"M0 0h24v24H0z\" fill=\"none\" />\n        <path d=\"M12 17.27L18.18 21l-1.64-7.03L22 9.24l-7.19-.61L12 2 9.19 8.63 2 9.24l5.46 4.73L5.82 21z\" />\n        <path d=\"M0 0h24v24H0z\" fill=\"none\" />\n    </svg>\n);\n\nStarIcon.propTypes = {\n    className: PropTypes.string,\n};\n\nexport default StarIcon;\n","import { getInstance } from 'd2';\n\nexport const apiPostDataStatistics = async (eventType, id) => {\n    const d2 = await getInstance();\n    const url = `dataStatistics?eventType=${eventType}&favorite=${id}`;\n\n    d2.Api.getApi().post(url);\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport { Chip, colors } from '@dhis2/ui-core';\nimport { Link } from 'react-router-dom';\nimport debounce from 'lodash/debounce';\n\nimport StarIcon from '../../icons/Star';\nimport { apiPostDataStatistics } from '../../api/dataStatistics';\n\nconst styles = {\n    chip: {\n        margin: '3px',\n    },\n    link: {\n        color: colors.grey600,\n        display: 'inline-block',\n        textDecoration: 'none',\n        verticalAlign: 'top',\n    },\n    icon: {\n        height: '20px',\n        marginTop: '2px',\n        width: '20px',\n    },\n    selected: {\n        fill: colors.white,\n    },\n    unselected: {\n        fill: colors.grey700,\n    },\n};\n\nexport const DashboardItemChip = ({\n    starred,\n    selected,\n    label,\n    dashboardId,\n    classes,\n}) => {\n    const chipProps = {\n        selected,\n        className: classes.chip,\n    };\n\n    if (starred) {\n        const selectedState = selected ? classes.selected : classes.unselected;\n        chipProps.icon = (\n            <StarIcon className={`${classes.icon} ${selectedState}`} />\n        );\n    }\n\n    return (\n        <Link\n            className={classes.link}\n            to={`/${dashboardId}`}\n            onClick={debounce(\n                () => apiPostDataStatistics('DASHBOARD_VIEW', dashboardId),\n                500\n            )}\n        >\n            <Chip {...chipProps}>{label}</Chip>\n        </Link>\n    );\n};\n\nDashboardItemChip.propTypes = {\n    dashboardId: PropTypes.string.isRequired,\n    label: PropTypes.string.isRequired,\n    selected: PropTypes.bool.isRequired,\n    starred: PropTypes.bool.isRequired,\n    classes: PropTypes.object,\n};\n\nexport default withStyles(styles)(DashboardItemChip);\n","import React from 'react';\nimport { colors } from '@dhis2/ui-core';\n\nconst AddCircleIcon = () => (\n    <svg\n        xmlns=\"http://www.w3.org/2000/svg\"\n        width=\"32\"\n        height=\"32\"\n        fill={colors.teal600}\n        viewBox=\"0 0 24 24\"\n    >\n        <path d=\"M12 2C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2zm4 11h-3v3c0 .55-.45 1-1 1s-1-.45-1-1v-3H8c-.55 0-1-.45-1-1s.45-1 1-1h3V8c0-.55.45-1 1-1s1 .45 1 1v3h3c.55 0 1 .45 1 1s-.45 1-1 1z\" />\n    </svg>\n);\n\nexport default AddCircleIcon;\n","import React from 'react';\nimport { colors } from '@dhis2/ui-core';\nimport PropTypes from 'prop-types';\n\nconst ClearIcon = ({ className }) => (\n    <svg\n        className={className}\n        fill={colors.grey800}\n        xmlns=\"http://www.w3.org/2000/svg\"\n        viewBox=\"0 0 24 24\"\n    >\n        <path d=\"M19 6.41L17.59 5 12 10.59 6.41 5 5 6.41 10.59 12 5 17.59 6.41 19 12 13.41 17.59 19 19 17.59 13.41 12z\" />\n        <path d=\"M0 0h24v24H0z\" fill=\"none\" />\n    </svg>\n);\n\nClearIcon.propTypes = {\n    className: PropTypes.string,\n};\n\nexport default ClearIcon;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport ClearIcon from '../../icons/Clear';\n\nimport classes from './styles/ClearButton.module.css';\n\nexport const ClearButton = ({ onClear }) => (\n    <button className={classes.button} onClick={onClear}>\n        <span>\n            <ClearIcon className={classes.icon} color=\"action\" />\n        </span>\n    </button>\n);\n\nClearButton.propTypes = {\n    onClear: PropTypes.func.isRequired,\n};\n\nexport default ClearButton;\n","import { combineReducers } from 'redux';\nimport { validateReducer } from '../modules/util';\n\nexport const SET_DASHBOARDS_FILTER_NAME = 'SET_DASHBOARDS_FILTER_NAME';\nexport const SET_DASHBOARDS_FILTER_OWNER = 'SET_DASHBOARDS_FILTER_OWNER';\nexport const SET_DASHBOARDS_FILTER_ORDER = 'SET_DASHBOARDS_FILTER_ORDER';\n\nexport const ownerData = [\n    { id: 'ALL', value: 'All users' },\n    { id: 'ME', value: 'Created by me' },\n    { id: 'OTHERS', value: 'Created by others' },\n];\n\nexport const orderData = [\n    { id: 'NAME:ASC', value: 'Name (asc)' },\n    { id: 'NAME:ASC', value: 'Name (desc)' },\n    { id: 'ITEMS:ASC', value: 'Number of items (asc)' },\n    { id: 'ITEMS:ASC', value: 'Number of items (desc)' },\n    { id: 'CREATED:ASC', value: 'Created date (asc)' },\n    { id: 'CREATED:ASC', value: 'Created date (desc)' },\n];\n\nexport const DEFAULT_STATE_DASHBOARDS_FILTER_NAME = '';\nexport const DEFAULT_STATE_DASHBOARDS_FILTER_OWNER = ownerData[0].id;\nexport const DEFAULT_STATE_DASHBOARDS_FILTER_ORDER = orderData[0].id;\n\nconst name = (state = DEFAULT_STATE_DASHBOARDS_FILTER_NAME, action) => {\n    switch (action.type) {\n        case SET_DASHBOARDS_FILTER_NAME:\n            return validateReducer(\n                action.value,\n                DEFAULT_STATE_DASHBOARDS_FILTER_NAME\n            );\n        default:\n            return state;\n    }\n};\n\nconst owner = (state = DEFAULT_STATE_DASHBOARDS_FILTER_OWNER, action) => {\n    switch (action.type) {\n        case SET_DASHBOARDS_FILTER_OWNER:\n            return validateReducer(\n                action.value,\n                DEFAULT_STATE_DASHBOARDS_FILTER_NAME\n            );\n        default:\n            return state;\n    }\n};\n\nconst order = (state = DEFAULT_STATE_DASHBOARDS_FILTER_ORDER, action) => {\n    switch (action.type) {\n        case SET_DASHBOARDS_FILTER_ORDER:\n            return validateReducer(\n                action.value,\n                DEFAULT_STATE_DASHBOARDS_FILTER_ORDER\n            );\n        default:\n            return state;\n    }\n};\n\nexport default combineReducers({\n    name,\n    owner,\n    order,\n});\n\n// selectors\n\nexport const sGetDashboardsFilterRoot = state => state.dashboardsFilter;\n\n// selector dependency level 2\n\nexport const sGetFilterName = state => sGetDashboardsFilterRoot(state).name;\nexport const sGetFilterOwner = state => sGetDashboardsFilterRoot(state).owner;\nexport const sGetFilterOrder = state => sGetDashboardsFilterRoot(state).order;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport i18n from '@dhis2/d2-i18n';\nimport InputField from '@material-ui/core/Input';\nimport InputAdornment from '@material-ui/core/InputAdornment';\nimport SearchIcon from '@material-ui/icons/Search';\nimport { colors } from '@dhis2/ui-core';\n\nimport ClearButton from './ClearButton';\nimport { DEFAULT_STATE_DASHBOARDS_FILTER_NAME } from '../../reducers/dashboardsFilter';\n\nexport const KEYCODE_ENTER = 13;\nexport const KEYCODE_ESCAPE = 27;\n\nconst styles = {\n    filterField: {\n        fontSize: '14px',\n        width: '200px',\n        height: '30px',\n        top: '-4px',\n    },\n    searchIcon: {\n        color: colors.grey700,\n        width: '20px',\n        height: '20px',\n    },\n};\n\nexport class Filter extends Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            value: DEFAULT_STATE_DASHBOARDS_FILTER_NAME,\n        };\n    }\n\n    componentWillReceiveProps(nextProps) {\n        this.setState({\n            value: nextProps.name,\n        });\n    }\n\n    setFilterValue = event => {\n        event.preventDefault();\n\n        this.props.onChangeName(event.target.value);\n    };\n\n    handleKeyUp = event => {\n        switch (event.keyCode) {\n            case KEYCODE_ENTER:\n                this.props.onKeypressEnter();\n                break;\n            case KEYCODE_ESCAPE:\n                this.props.onChangeName();\n                break;\n            default:\n                break;\n        }\n    };\n\n    render() {\n        const { classes, name, onChangeName } = this.props;\n\n        const startAdornment = (\n            <InputAdornment position=\"start\">\n                <SearchIcon className={classes.searchIcon} />\n            </InputAdornment>\n        );\n\n        const endAdornment =\n            name !== '' && name !== null ? (\n                <InputAdornment position=\"end\">\n                    <ClearButton onClear={() => onChangeName()} />\n                </InputAdornment>\n            ) : null;\n\n        return (\n            <InputField\n                className={classes.filterField}\n                placeholder={i18n.t('Search for a dashboard')}\n                startAdornment={startAdornment}\n                endAdornment={endAdornment}\n                value={this.state.value}\n                onChange={this.setFilterValue}\n                onKeyUp={this.handleKeyUp}\n            />\n        );\n    }\n}\n\nFilter.propTypes = {\n    classes: PropTypes.object,\n    name: PropTypes.string,\n    onChangeName: PropTypes.func,\n    onKeypressEnter: PropTypes.func,\n};\n\nFilter.defaultProps = {\n    name: '',\n    onChangeName: Function.prototype,\n};\n\nexport default withStyles(styles)(Filter);\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { Link, withRouter } from 'react-router-dom';\nimport ControlBar from './ControlBar';\nimport arraySort from 'd2-utilizr/lib/arraySort';\nimport PropTypes from 'prop-types';\n\nimport Chip from './DashboardItemChip';\nimport AddCircleIcon from '../../icons/AddCircle';\nimport Filter from './Filter';\nimport ShowMoreButton from './ShowMoreButton';\nimport {\n    FIRST_ROW_PADDING_HEIGHT,\n    MIN_ROW_COUNT,\n    getRowsHeight,\n    getControlBarHeight,\n    getNumRowsFromHeight,\n} from './controlBarDimensions';\nimport { sGetControlBarUserRows } from '../../reducers/controlBar';\nimport { sGetAllDashboards } from '../../reducers/dashboards';\nimport { sGetFilterName } from '../../reducers/dashboardsFilter';\nimport { sGetSelectedId } from '../../reducers/selected';\nimport { acSetControlBarUserRows } from '../../actions/controlBar';\nimport { acSetFilterName } from '../../actions/dashboardsFilter';\nimport { orObject, orArray } from '../../modules/util';\nimport { apiPostControlBarRows } from '../../api/controlBar';\n\nimport classes from './styles/DashboardsBar.module.css';\n\nexport const MAX_ROW_COUNT = 10;\n\nexport class DashboardsBar extends Component {\n    state = {\n        rows: MIN_ROW_COUNT,\n    };\n\n    setInitialDashboardState = rows => {\n        this.setState({ rows, isMaxHeight: rows === MAX_ROW_COUNT });\n    };\n\n    componentDidMount() {\n        this.setInitialDashboardState(this.props.userRows);\n    }\n\n    componentWillReceiveProps(nextProps) {\n        this.setInitialDashboardState(nextProps.userRows);\n    }\n\n    onChangeHeight = newHeight => {\n        const adjustedHeight = newHeight - 52; // don't rush the transition to a bigger row count\n        const newRows = Math.max(\n            MIN_ROW_COUNT,\n            getNumRowsFromHeight(adjustedHeight)\n        );\n\n        if (newRows !== this.state.rows) {\n            const newRowCount = Math.min(newRows, MAX_ROW_COUNT);\n\n            this.props.onChangeHeight(newRowCount);\n        }\n    };\n\n    onEndDrag = () => {\n        return apiPostControlBarRows(this.state.rows);\n    };\n\n    onToggleMaxHeight = () => {\n        const rows =\n            this.state.rows === MAX_ROW_COUNT\n                ? this.props.userRows\n                : MAX_ROW_COUNT;\n\n        this.setState({ rows, isMaxHeight: !this.state.isMaxHeight });\n    };\n\n    onSelectDashboard = () => {\n        this.props.history.push(`/${this.props.dashboards[0].id}`);\n    };\n\n    render() {\n        const { dashboards, name, selectedId, onChangeFilterName } = this.props;\n\n        const rowCount = this.state.isMaxHeight\n            ? MAX_ROW_COUNT\n            : this.state.rows;\n        const controlBarHeight = getControlBarHeight(rowCount);\n        const contentWrapperStyle = {\n            padding: `${FIRST_ROW_PADDING_HEIGHT}px 6px 0 6px`,\n            overflowY: this.state.isMaxHeight ? 'auto' : 'hidden',\n            height: getRowsHeight(rowCount) + FIRST_ROW_PADDING_HEIGHT,\n        };\n\n        return (\n            <ControlBar\n                height={controlBarHeight}\n                onChangeHeight={this.onChangeHeight}\n                onEndDrag={this.onEndDrag}\n                editMode={false}\n            >\n                <div style={contentWrapperStyle}>\n                    <div className={classes.leftControls}>\n                        <Link\n                            style={{\n                                display: 'inline-block',\n                                textDecoration: 'none',\n                                marginRight: 10,\n                                position: 'relative',\n                                top: '2px',\n                            }}\n                            to={'/new'}\n                        >\n                            <AddCircleIcon />\n                        </Link>\n                        <Filter\n                            name={name}\n                            onChangeName={onChangeFilterName}\n                            onKeypressEnter={this.onSelectDashboard}\n                        />\n                    </div>\n                    {orArray(dashboards).map(dashboard => (\n                        <Chip\n                            key={dashboard.id}\n                            label={dashboard.displayName}\n                            starred={dashboard.starred}\n                            dashboardId={dashboard.id}\n                            selected={dashboard.id === selectedId}\n                        />\n                    ))}\n                </div>\n                <ShowMoreButton\n                    onClick={this.onToggleMaxHeight}\n                    isMaxHeight={this.state.isMaxHeight}\n                    disabled={this.props.userRows === MAX_ROW_COUNT}\n                />\n            </ControlBar>\n        );\n    }\n}\n\nconst mapStateToProps = state => ({\n    dashboards: sGetAllDashboards(state),\n    name: sGetFilterName(state),\n    userRows: sGetControlBarUserRows(state),\n    selectedId: sGetSelectedId(state),\n});\n\nconst mapDispatchToProps = {\n    onChangeHeight: acSetControlBarUserRows,\n    onChangeFilterName: acSetFilterName,\n};\nconst mergeProps = (stateProps, dispatchProps, ownProps) => {\n    const dashboards = Object.values(orObject(stateProps.dashboards));\n    const displayDashboards = arraySort(\n        dashboards.filter(d =>\n            d.displayName.toLowerCase().includes(stateProps.name.toLowerCase())\n        ),\n        'ASC',\n        'displayName'\n    );\n\n    return {\n        ...stateProps,\n        ...ownProps,\n        ...dispatchProps,\n        dashboards: [\n            ...displayDashboards.filter(d => d.starred),\n            ...displayDashboards.filter(d => !d.starred),\n        ],\n    };\n};\n\nDashboardsBar.propTypes = {\n    dashboards: PropTypes.array,\n    history: PropTypes.object,\n    name: PropTypes.string,\n    selectedId: PropTypes.string,\n    userRows: PropTypes.number,\n    onChangeFilterName: PropTypes.func,\n    onChangeHeight: PropTypes.func,\n};\n\nexport default withRouter(\n    connect(\n        mapStateToProps,\n        mapDispatchToProps,\n        mergeProps\n    )(DashboardsBar)\n);\n","import {\n    SET_DASHBOARDS_FILTER_NAME,\n    SET_DASHBOARDS_FILTER_OWNER,\n    SET_DASHBOARDS_FILTER_ORDER,\n} from '../reducers/dashboardsFilter';\n\n// actions\n\nexport const acSetFilterName = value => ({\n    type: SET_DASHBOARDS_FILTER_NAME,\n    value,\n});\n\nexport const acSetFilterOwner = value => ({\n    type: SET_DASHBOARDS_FILTER_OWNER,\n    value,\n});\n\nexport const acSetFilterOrder = value => ({\n    type: SET_DASHBOARDS_FILTER_ORDER,\n    value,\n});\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\n\nimport {\n    getTopOffset,\n    MIN_ROW_COUNT,\n} from '../ControlBar/controlBarDimensions';\nimport { sGetControlBarUserRows } from '../../reducers/controlBar';\n\nconst DashboardVerticalOffset = props => {\n    const rows = props.editMode ? MIN_ROW_COUNT : props.userRows;\n    const marginTop = getTopOffset(rows);\n\n    return <div className=\"page-container-top-margin\" style={{ marginTop }} />;\n};\n\nconst mapStateToProps = state => ({\n    userRows: sGetControlBarUserRows(state),\n});\n\nDashboardVerticalOffset.propTypes = {\n    editMode: PropTypes.bool,\n    userRows: PropTypes.number,\n};\n\nexport default connect(mapStateToProps)(DashboardVerticalOffset);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { MenuItem, colors } from '@dhis2/ui-core';\n\nconst HeaderMenuItem = ({ title }) => (\n    <MenuItem\n        dense\n        key={title}\n        disabled\n        label={\n            <p style={{ color: colors.grey800, fontWeight: '600' }}>{title}</p>\n        }\n    />\n);\n\nHeaderMenuItem.propTypes = {\n    title: PropTypes.string.isRequired,\n};\n\nexport default HeaderMenuItem;\n","import React from 'react';\nimport { colors } from '@dhis2/ui-core';\nimport PropTypes from 'prop-types';\n\nconst LaunchIcon = ({ className }) => (\n    <svg\n        className={className}\n        xmlns=\"http://www.w3.org/2000/svg\"\n        width=\"12\"\n        height=\"12\"\n        fill={colors.grey600}\n        viewBox=\"0 0 24 24\"\n    >\n        <path d=\"M0 0h24v24H0z\" fill=\"none\" />\n        <path d=\"M19 19H5V5h7V3H5c-1.11 0-2 .9-2 2v14c0 1.1.89 2 2 2h14c1.1 0 2-.9 2-2v-7h-2v7zM14 3v2h3.59l-9.83 9.83 1.41 1.41L19 6.41V10h2V3h-7z\" />\n    </svg>\n);\n\nLaunchIcon.propTypes = {\n    className: PropTypes.string,\n};\n\nexport default LaunchIcon;\n","import React from 'react';\nimport { MenuItem, colors } from '@dhis2/ui-core';\nimport i18n from '@dhis2/d2-i18n';\nimport PropTypes from 'prop-types';\nimport { visTypeIcons } from '@dhis2/analytics';\n\nimport { getItemIcon, VISUALIZATION } from '../../modules/itemTypes';\nimport LaunchIcon from '../../icons/Launch';\n\nimport classes from './styles/ContentMenuItem.module.css';\n\nconst LaunchLink = ({ url }) => (\n    <a\n        onClick={e => e.stopPropagation()}\n        className={classes.launchLink}\n        target=\"_blank\"\n        rel=\"noopener noreferrer\"\n        href={url}\n    >\n        <LaunchIcon />\n    </a>\n);\n\nLaunchLink.propTypes = {\n    url: PropTypes.string,\n};\n\nconst InsertButton = () => (\n    <button className={classes.buttonInsert}>{i18n.t('Insert')}</button>\n);\n\nconst ContentMenuItem = ({ type, name, onInsert, url, visType }) => {\n    const ItemIcon = getItemIcon(type);\n\n    const renderedItemIcon =\n        type === VISUALIZATION ? (\n            visTypeIcons[visType]\n        ) : (\n            <ItemIcon style={{ fill: colors.grey600 }} />\n        );\n\n    return (\n        <MenuItem\n            dense\n            onClick={onInsert}\n            label={\n                <div className={classes.menuItem}>\n                    <div className={classes.label}>\n                        <span style={{ margin: '6px' }}>\n                            {renderedItemIcon}\n                        </span>\n                        <span>{name}</span>\n                        {url ? <LaunchLink url={url} /> : null}\n                    </div>\n                    <InsertButton />\n                </div>\n            }\n        />\n    );\n};\n\nContentMenuItem.propTypes = {\n    name: PropTypes.string,\n    type: PropTypes.string,\n    url: PropTypes.string,\n    visType: PropTypes.string,\n    onInsert: PropTypes.func,\n};\n\nexport default ContentMenuItem;\n","import i18n from '@dhis2/d2-i18n';\nimport {\n    spacerContent,\n    VISUALIZATION,\n    MAP,\n    EVENT_CHART,\n    EVENT_REPORT,\n    USERS,\n    REPORTS,\n    RESOURCES,\n    APP,\n    MESSAGES,\n    TEXT,\n    SPACER,\n} from '../../modules/itemTypes';\n\nexport const singleItems = [\n    {\n        id: 'additional',\n        header: i18n.t('Additional items'),\n        items: [\n            {\n                type: TEXT,\n                name: i18n.t('Text box'),\n                content: '',\n            },\n            {\n                type: MESSAGES,\n                name: i18n.t('Messages'),\n                content: 'true',\n            },\n            {\n                type: SPACER,\n                name: i18n.t('Spacer'),\n                content: spacerContent,\n            },\n        ],\n    },\n];\n\n// categorizedItems are grouped in the item selector menu\nexport const categorizedItems = [\n    VISUALIZATION,\n    MAP,\n    EVENT_REPORT,\n    EVENT_CHART,\n    USERS,\n    REPORTS,\n    RESOURCES,\n    APP,\n];\n\n// listItemTypes are included in a single dashboard item\nexport const listItemTypes = [REPORTS, RESOURCES, USERS];\n","import React, { Component, Fragment } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport i18n from '@dhis2/d2-i18n';\nimport { MenuItem, Divider } from '@dhis2/ui-core';\n\nimport HeaderMenuItem from './HeaderMenuItem';\nimport ContentMenuItem from './ContentMenuItem';\n\nimport { tAddListItemContent } from './actions';\nimport { acAddDashboardItem } from '../../actions/editDashboard';\nimport { getItemUrl, APP, VISUALIZATION } from '../../modules/itemTypes';\nimport { categorizedItems, listItemTypes } from './selectableItems';\n\nimport classes from './styles/CategorizedMenuGroup.module.css';\n\nclass CategorizedMenuGroup extends Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            seeMore: false,\n        };\n    }\n\n    addItem = item => () => {\n        const { type, acAddDashboardItem, tAddListItemContent } = this.props;\n\n        if (type === APP) {\n            acAddDashboardItem({ type, content: item.key });\n        } else {\n            const newItem = {\n                id: item.id,\n                name: item.displayName || item.name,\n            };\n\n            if (listItemTypes.includes(type)) {\n                tAddListItemContent(type, newItem);\n            } else {\n                acAddDashboardItem({ type, content: newItem });\n            }\n        }\n    };\n\n    toggleSeeMore = () => {\n        this.setState({ seeMore: !this.state.seeMore });\n\n        this.props.onChangeItemsLimit(this.props.type);\n    };\n\n    render() {\n        const { title, type, items, hasMore } = this.props;\n        return (\n            <Fragment>\n                <HeaderMenuItem title={title} />\n                {items.map(item => {\n                    const itemUrl = getItemUrl(type, item, this.context.d2);\n                    return (\n                        <ContentMenuItem\n                            key={item.id || item.key}\n                            type={type}\n                            visType={type === VISUALIZATION ? item.type : type}\n                            name={item.displayName || item.name}\n                            onInsert={this.addItem(item)}\n                            url={itemUrl}\n                        />\n                    );\n                })}\n                {hasMore ? (\n                    <MenuItem\n                        dense\n                        key={`showmore${title}`}\n                        onClick={this.toggleSeeMore}\n                        label={\n                            <button className={classes.showMoreButton}>\n                                {this.state.seeMore\n                                    ? i18n.t('Show fewer')\n                                    : i18n.t('Show more')}\n                            </button>\n                        }\n                    />\n                ) : null}\n                <Divider margin=\"8px 0px\" />\n            </Fragment>\n        );\n    }\n}\n\nCategorizedMenuGroup.propTypes = {\n    items: PropTypes.array.isRequired,\n    title: PropTypes.string.isRequired,\n    type: PropTypes.oneOf(categorizedItems).isRequired,\n    onChangeItemsLimit: PropTypes.func.isRequired,\n    acAddDashboardItem: PropTypes.func,\n    hasMore: PropTypes.bool,\n    tAddListItemContent: PropTypes.func,\n};\n\nCategorizedMenuGroup.contextTypes = {\n    d2: PropTypes.object.isRequired,\n};\n\nexport default connect(\n    null,\n    {\n        acAddDashboardItem,\n        tAddListItemContent,\n    }\n)(CategorizedMenuGroup);\n","import { sGetEditDashboardRoot } from '../../reducers/editDashboard';\nimport { itemTypeMap } from '../../modules/itemTypes';\nimport {\n    acAddDashboardItem,\n    acUpdateDashboardItem,\n} from '../../actions/editDashboard';\n\nexport const tAddListItemContent = (type, content) => (dispatch, getState) => {\n    const state = getState();\n    const listItemType = itemTypeMap[type].propName;\n    const dashboardItems = sGetEditDashboardRoot(state).dashboardItems;\n    const dashboardItemIndex = dashboardItems.findIndex(\n        item => item.type === type\n    );\n    let dashboardItem;\n\n    // Reports/Resources/Users dashboard item type already present in dashboard\n    if (dashboardItemIndex > -1) {\n        dashboardItem = dashboardItems[dashboardItemIndex];\n        dashboardItem[listItemType].push(content);\n\n        dispatch(acUpdateDashboardItem(dashboardItem));\n    } else {\n        dashboardItem = {\n            type: type,\n            content: [content],\n        };\n\n        dispatch(acAddDashboardItem(dashboardItem));\n    }\n};\n","import React, { Fragment } from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\n\nimport HeaderMenuItem from './HeaderMenuItem';\nimport ContentMenuItem from './ContentMenuItem';\nimport { acAddDashboardItem } from '../../actions/editDashboard';\n\nexport const SinglesMenuGroup = ({ acAddDashboardItem, category }) => {\n    const addToDashboard = ({ type, content }) => () => {\n        acAddDashboardItem({ type, content });\n    };\n\n    return (\n        <Fragment>\n            <HeaderMenuItem title={category.header} />\n            {category.items.map(item => (\n                <ContentMenuItem\n                    key={item.type}\n                    type={item.type}\n                    name={item.name}\n                    onInsert={addToDashboard(item)}\n                />\n            ))}\n        </Fragment>\n    );\n};\n\nSinglesMenuGroup.propTypes = {\n    acAddDashboardItem: PropTypes.func,\n    category: PropTypes.object,\n};\n\nexport default connect(\n    null,\n    { acAddDashboardItem }\n)(SinglesMenuGroup);\n","import React, { Fragment } from 'react';\nimport PropTypes from 'prop-types';\nimport i18n from '@dhis2/d2-i18n';\nimport Popover from '@material-ui/core/Popover';\nimport { InputField, Menu } from '@dhis2/ui-core';\n\nimport CategorizedMenuGroup from './CategorizedMenuGroup';\nimport SinglesMenuGroup from './SinglesMenuGroup';\nimport { singleItems, categorizedItems } from './selectableItems';\nimport { itemTypeMap, getDefaultItemCount } from '../../modules/itemTypes';\n\nimport './styles/ItemSelector.css';\n\nconst ItemSearchField = props => (\n    <InputField\n        name=\"Dashboard item search\"\n        label={i18n.t('Search for items to add to this dashboard')}\n        type=\"text\"\n        onChange={props.onChange}\n        onFocus={props.onFocus}\n        value={props.value}\n    />\n);\n\nclass ItemSelector extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            anchorEl: null,\n            open: false,\n            maxOptions: new Set(),\n            items: undefined,\n            filter: '',\n        };\n    }\n\n    closeList = () => {\n        this.setState({ open: false, filter: '' });\n    };\n\n    openList = (_, event) => {\n        this.fetchItems();\n\n        this.setState({\n            anchorEl: event.currentTarget,\n            open: true,\n        });\n    };\n\n    setFilter = (_, event) => {\n        this.setState({ filter: event.target.value }, this.fetchItems);\n    };\n\n    getCategorizedMenuGroups = () =>\n        categorizedItems\n            .filter(type => {\n                const itemType = itemTypeMap[type];\n                return (\n                    this.state.items && this.state.items[itemType.endPointName]\n                );\n            })\n            .map(type => {\n                const itemType = itemTypeMap[type];\n                const itemCount = getDefaultItemCount(type);\n                const allItems = this.state.items[itemType.endPointName];\n                const hasMore = allItems.length > itemCount;\n                const items = this.state.maxOptions.has(itemType.id)\n                    ? allItems\n                    : allItems.slice(0, itemCount);\n\n                return (\n                    <CategorizedMenuGroup\n                        key={type}\n                        type={type}\n                        title={itemType.pluralTitle}\n                        items={items}\n                        onChangeItemsLimit={this.fetchItems}\n                        hasMore={hasMore}\n                    />\n                );\n            });\n\n    getSinglesMenuGroups = () =>\n        singleItems.map(category => (\n            <SinglesMenuGroup key={category.id} category={category} />\n        ));\n\n    getMenuGroups = () =>\n        this.getCategorizedMenuGroups().concat(this.getSinglesMenuGroups());\n\n    fetchItems = async type => {\n        if (type) {\n            const maxOptions = this.state.maxOptions;\n\n            if (maxOptions.has(type)) {\n                maxOptions.delete(type);\n            } else {\n                maxOptions.add(type);\n            }\n\n            this.setState({ maxOptions });\n        } else {\n            this.setState({\n                maxOptions: new Set(),\n            });\n        }\n\n        let queryString = '?count=11';\n        if ([...this.state.maxOptions.values()].length) {\n            queryString +=\n                '&max=' + [...this.state.maxOptions.values()].join('&max=');\n        }\n\n        const filter = this.state.filter ? `/${this.state.filter}` : '';\n\n        this.context.d2.Api.getApi()\n            .get(`dashboards/q${filter}${queryString}`)\n            .then(response => this.setState({ items: response }))\n            .catch(console.error);\n    };\n\n    render() {\n        return (\n            <Fragment>\n                <ItemSearchField\n                    value={this.state.filter}\n                    onChange={this.setFilter}\n                    onFocus={this.openList}\n                />\n                <Popover\n                    className=\"dashboard-item-selector\"\n                    open={this.state.open}\n                    onClose={this.closeList}\n                    anchorEl={this.state.anchorEl}\n                    anchorOrigin={{ horizontal: 'left', vertical: 'bottom' }}\n                    transformOrigin={{ horizontal: 'left', vertical: 'top' }}\n                    style={{ height: '70vh' }}\n                    PaperProps={{ style: { width: '700px' } }}\n                    disableAutoFocus={true}\n                    disableRestoreFocus={true}\n                >\n                    <Menu>{this.getMenuGroups()}</Menu>\n                </Popover>\n            </Fragment>\n        );\n    }\n}\n\nItemSearchField.propTypes = {\n    value: PropTypes.string,\n    onChange: PropTypes.func,\n    onFocus: PropTypes.func,\n};\n\nItemSelector.contextTypes = {\n    d2: PropTypes.object.isRequired,\n};\n\nexport default ItemSelector;\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport i18n from '@dhis2/d2-i18n';\nimport { InputField, TextAreaField } from '@dhis2/ui-core';\n\nimport ItemSelector from '../ItemSelector/ItemSelector';\nimport {\n    acSetDashboardTitle,\n    acSetDashboardDescription,\n} from '../../actions/editDashboard';\nimport { orObject } from '../../modules/util';\nimport { sGetEditDashboardRoot } from '../../reducers/editDashboard';\n\nconst styles = {\n    section: { display: 'flex', justifyContent: 'space-between' },\n    titleDescription: {\n        flex: '3',\n        marginRight: '50px',\n    },\n    title: {\n        display: 'block',\n        clear: 'both',\n    },\n    description: {\n        display: 'block',\n        clear: 'both',\n        marginTop: '15px',\n    },\n    underline: {\n        '&::before': {\n            borderBottom: `none`,\n        },\n        '&:hover::before': {\n            borderBottom: `none!important`,\n        },\n    },\n    input: {\n        backgroundColor: 'rgba(0, 0, 10, 0.05)',\n        borderRadius: '4px',\n        width: '100%',\n        '&:hover': {\n            backgroundColor: 'rgba(0, 0, 10, 0.08)',\n        },\n    },\n    itemSelector: {\n        flex: '2',\n        position: 'relative',\n    },\n};\n\nexport const EditTitleBar = ({\n    name,\n    description,\n    onChangeTitle,\n    onChangeDescription,\n    classes,\n}) => {\n    const updateTitle = (_, e) => {\n        onChangeTitle(e.target.value);\n    };\n\n    const updateDescription = (_, e) => {\n        onChangeDescription(e.target.value);\n    };\n\n    return (\n        <section className={classes.section}>\n            <div className={classes.titleDescription}>\n                <InputField\n                    className={classes.title}\n                    name=\"Dashboard title input\"\n                    label={i18n.t('Dashboard title')}\n                    type=\"text\"\n                    onChange={updateTitle}\n                    value={name}\n                />\n                <TextAreaField\n                    className={classes.description}\n                    name=\"Dashboard description input\"\n                    label={i18n.t('Dashboard description')}\n                    onChange={updateDescription}\n                    value={description}\n                />\n            </div>\n            <div className={classes.itemSelector}>\n                <ItemSelector />\n            </div>\n        </section>\n    );\n};\n\nconst mapStateToProps = state => {\n    const selectedDashboard = orObject(sGetEditDashboardRoot(state));\n\n    return {\n        name: selectedDashboard.name,\n        description: selectedDashboard.description,\n    };\n};\n\nconst mapDispatchToProps = {\n    onChangeTitle: acSetDashboardTitle,\n    onChangeDescription: acSetDashboardDescription,\n};\n\nexport default connect(\n    mapStateToProps,\n    mapDispatchToProps\n)(withStyles(styles)(EditTitleBar));\n\nEditTitleBar.propTypes = {\n    onChangeDescription: PropTypes.func.isRequired,\n    onChangeTitle: PropTypes.func.isRequired,\n    classes: PropTypes.object,\n    description: PropTypes.string,\n    name: PropTypes.string,\n};\n\nEditTitleBar.defaultProps = {\n    name: '',\n    description: '',\n};\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nimport { Button } from '@dhis2/ui-core';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\n\nimport i18n from '@dhis2/d2-i18n';\n\nimport {\n    PeriodDimension,\n    DynamicDimension,\n    OrgUnitDimension,\n    DIMENSION_ID_PERIOD,\n    DIMENSION_ID_ORGUNIT,\n} from '@dhis2/analytics';\n\nconst peId = DIMENSION_ID_PERIOD;\nconst ouId = DIMENSION_ID_ORGUNIT;\n\nclass FilterDialog extends Component {\n    onConfirm = id => () => this.props.onConfirm(id);\n\n    dialogContent() {\n        const { displayNameProperty, dimension, selectedItems } = this.props;\n        const dialogId = dimension.id;\n\n        const commonProps = {\n            d2: this.context.d2,\n            onSelect: this.props.onSelect,\n            onDeselect: this.props.onDeselect,\n            onReorder: this.props.onReorder,\n        };\n\n        switch (dialogId) {\n            case peId: {\n                return (\n                    <PeriodDimension\n                        selectedPeriods={selectedItems}\n                        {...commonProps}\n                    />\n                );\n            }\n            case ouId:\n                return (\n                    <OrgUnitDimension\n                        displayNameProperty={displayNameProperty}\n                        ouItems={selectedItems}\n                        {...commonProps}\n                    />\n                );\n            default:\n                return (\n                    <DynamicDimension\n                        selectedItems={selectedItems}\n                        dialogId={dialogId}\n                        dialogTitle={dimension.name}\n                        {...commonProps}\n                    />\n                );\n        }\n    }\n\n    render() {\n        const { dimension, onClose } = this.props;\n        const dialogId = dimension.id;\n\n        return (\n            <Dialog\n                open={!!dialogId}\n                maxWidth=\"lg\"\n                disableEnforceFocus\n                onClose={onClose}\n            >\n                {dialogId && this.dialogContent()}\n                <DialogActions>\n                    <Button kind=\"secondary\" onClick={onClose}>\n                        {i18n.t('Cancel')}\n                    </Button>\n                    <Button kind=\"primary\" onClick={this.onConfirm(dialogId)}>\n                        {i18n.t('Confirm')}\n                    </Button>\n                </DialogActions>\n            </Dialog>\n        );\n    }\n}\n\nFilterDialog.propTypes = {\n    dimension: PropTypes.object,\n    displayNameProperty: PropTypes.string,\n    selectedItems: PropTypes.array,\n    onClose: PropTypes.func,\n    onConfirm: PropTypes.func,\n    onDeselect: PropTypes.func,\n    onReorder: PropTypes.func,\n    onSelect: PropTypes.func,\n};\n\nFilterDialog.contextTypes = {\n    d2: PropTypes.object,\n};\n\nexport default FilterDialog;\n","export const SET_ACTIVE_MODAL_DIMENSION = 'SET_ACTIVE_MODAL_DIMENSION';\nexport const CLEAR_ACTIVE_MODAL_DIMENSION = 'CLEAR_ACTIVE_MODAL_DIMENSION';\n\nexport const DEFAULT_STATE_ACTIVE_MODAL_DIMENSION = {};\n\nexport default (state = DEFAULT_STATE_ACTIVE_MODAL_DIMENSION, action) => {\n    switch (action.type) {\n        case SET_ACTIVE_MODAL_DIMENSION: {\n            return action.value;\n        }\n        case CLEAR_ACTIVE_MODAL_DIMENSION: {\n            return DEFAULT_STATE_ACTIVE_MODAL_DIMENSION;\n        }\n        default:\n            return state;\n    }\n};\n\nexport const sGetActiveModalDimension = state => state.activeModalDimension;\n","import {\n    SET_ACTIVE_MODAL_DIMENSION,\n    CLEAR_ACTIVE_MODAL_DIMENSION,\n} from '../reducers/activeModalDimension';\n\nexport const acSetActiveModalDimension = value => ({\n    type: SET_ACTIVE_MODAL_DIMENSION,\n    value,\n});\n\nexport const acClearActiveModalDimension = () => ({\n    type: CLEAR_ACTIVE_MODAL_DIMENSION,\n});\n","import React, { Component, Fragment } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport Popover from '@material-ui/core/Popover';\nimport ArrowDropDownIcon from '@material-ui/icons/ArrowDropDown';\nimport { withTheme } from '@material-ui/core/styles';\n\nimport i18n from '@dhis2/d2-i18n';\nimport { DimensionsPanel } from '@dhis2/analytics';\n\nimport { Button } from '@dhis2/ui-core';\nimport FilterDialog from './FilterDialog';\n\nimport { sGetSettingsDisplayNameProperty } from '../../reducers/settings';\nimport { sGetActiveModalDimension } from '../../reducers/activeModalDimension';\nimport { sGetDimensions } from '../../reducers/dimensions';\nimport { sGetFiltersKeys } from '../../reducers/itemFilters';\nimport { sGetEditItemFiltersRoot } from '../../reducers/editItemFilters';\nimport { acAddItemFilter, acRemoveItemFilter } from '../../actions/itemFilters';\nimport {\n    acRemoveEditItemFilter,\n    acSetEditItemFilters,\n} from '../../actions/editItemFilters';\nimport {\n    acClearActiveModalDimension,\n    acSetActiveModalDimension,\n} from '../../actions/activeModalDimension';\n\nclass FilterSelector extends Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            anchorEl: null,\n        };\n    }\n\n    openPanel = (_, event) => {\n        this.setState({ anchorEl: event.currentTarget });\n    };\n\n    closePanel = () => {\n        this.setState({ anchorEl: null });\n    };\n\n    closeDialog = () => {\n        this.setState({ anchorEl: null });\n\n        this.props.clearActiveModalDimension();\n    };\n\n    selectDimension = id => {\n        this.props.setActiveModalDimension(\n            this.props.dimensions.find(dimension => dimension.id === id)\n        );\n    };\n\n    onSelectItems = ({ dimensionId, items }) => {\n        this.props.setEditItemFilters({\n            ...this.props.selectedItems,\n            [dimensionId]: items,\n        });\n    };\n\n    onDeselectItems = ({ dimensionId, itemIdsToRemove }) => {\n        const oldList = this.props.selectedItems[dimensionId] || [];\n        const newList = oldList.filter(\n            item => !itemIdsToRemove.includes(item.id)\n        );\n\n        if (newList.length) {\n            this.props.setEditItemFilters({\n                ...this.props.selectedItems,\n                [dimensionId]: newList,\n            });\n        } else {\n            this.props.removeEditItemFilter(dimensionId);\n        }\n    };\n\n    onReorderItems = ({ dimensionId, itemIds }) => {\n        const oldList = this.props.selectedItems[dimensionId] || [];\n        const reorderedList = itemIds.map(id =>\n            oldList.find(item => item.id === id)\n        );\n\n        this.props.setEditItemFilters({\n            ...this.props.selectedItems,\n            [dimensionId]: reorderedList,\n        });\n    };\n\n    saveFilter = id => {\n        const filterItems = this.props.selectedItems[id];\n\n        if (filterItems && filterItems.length) {\n            this.props.addItemFilter({\n                id,\n                value: [...filterItems],\n            });\n        } else {\n            this.props.removeItemFilter(id);\n        }\n\n        this.closeDialog();\n    };\n\n    render() {\n        const {\n            theme,\n            displayNameProperty,\n            dimension,\n            dimensions,\n            selectedDimensions,\n            selectedItems,\n        } = this.props;\n\n        return (\n            <Fragment>\n                <Button onClick={this.openPanel}>\n                    {i18n.t('Add filter')}\n                    <ArrowDropDownIcon />\n                </Button>\n                <Popover\n                    open={Boolean(this.state.anchorEl)}\n                    anchorEl={this.state.anchorEl}\n                    anchorOrigin={{ vertical: 'bottom', horizontal: 'left' }}\n                    onClose={this.closePanel}\n                    style={{\n                        height: '100%',\n                        fontFamily: theme.typography.fontFamily,\n                    }}\n                >\n                    <DimensionsPanel\n                        dimensions={dimensions}\n                        onDimensionClick={this.selectDimension}\n                        selectedIds={selectedDimensions}\n                    />\n                </Popover>\n                {dimension ? (\n                    <FilterDialog\n                        displayNameProperty={displayNameProperty}\n                        dimension={dimension}\n                        selectedItems={selectedItems[dimension.id] || []}\n                        onSelect={this.onSelectItems}\n                        onDeselect={this.onDeselectItems}\n                        onReorder={this.onReorderItems}\n                        onClose={this.closeDialog}\n                        onConfirm={this.saveFilter}\n                    />\n                ) : null}\n            </Fragment>\n        );\n    }\n}\n\nconst mapStateToProps = state => ({\n    displayNameProperty: sGetSettingsDisplayNameProperty(state),\n    dimension: sGetActiveModalDimension(state),\n    dimensions: sGetDimensions(state),\n    selectedDimensions: sGetFiltersKeys(state),\n    selectedItems: sGetEditItemFiltersRoot(state),\n});\n\nFilterSelector.propTypes = {\n    addItemFilter: PropTypes.func,\n    clearActiveModalDimension: PropTypes.func,\n    dimension: PropTypes.object,\n    dimensions: PropTypes.object,\n    displayNameProperty: PropTypes.string,\n    removeEditItemFilter: PropTypes.func,\n    removeItemFilter: PropTypes.func,\n    selectedDimensions: PropTypes.array,\n    selectedItems: PropTypes.object,\n    setActiveModalDimension: PropTypes.func,\n    setEditItemFilters: PropTypes.func,\n    theme: PropTypes.object,\n};\n\nexport default connect(\n    mapStateToProps,\n    {\n        clearActiveModalDimension: acClearActiveModalDimension,\n        setActiveModalDimension: acSetActiveModalDimension,\n        addItemFilter: acAddItemFilter,\n        removeItemFilter: acRemoveItemFilter,\n        removeEditItemFilter: acRemoveEditItemFilter,\n        setEditItemFilters: acSetEditItemFilters,\n    }\n)(withTheme()(FilterSelector));\n","import React, { Component } from 'react';\nimport InfoOutlineIcon from '@material-ui/icons/InfoOutlined';\nimport { colors } from '@dhis2/ui-core';\nimport PropTypes from 'prop-types';\n\nclass Info extends Component {\n    show = false;\n\n    toggle() {\n        this.show = !this.show;\n        return this.show;\n    }\n\n    render() {\n        return (\n            <div onClick={() => this.props.onClick(this.toggle())}>\n                <InfoOutlineIcon style={{ fill: colors.grey600 }} />\n            </div>\n        );\n    }\n}\n\nInfo.propTypes = {\n    onClick: PropTypes.func,\n};\n\nexport default Info;\n","import React, { Component, Fragment } from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport { Link } from 'react-router-dom';\nimport i18n from '@dhis2/d2-i18n';\nimport SharingDialog from '@dhis2/d2-ui-sharing-dialog';\nimport Star from '@material-ui/icons/Star';\nimport StarBorder from '@material-ui/icons/StarBorder';\n\nimport { orObject } from '../../modules/util';\nimport { tStarDashboard } from '../../actions/dashboards';\nimport { acSetSelectedShowDescription } from '../../actions/selected';\nimport FilterSelector from '../ItemFilter/FilterSelector';\nimport { Button } from '@dhis2/ui-core';\nimport Info from './Info';\nimport {\n    sGetSelectedId,\n    sGetSelectedShowDescription,\n} from '../../reducers/selected';\nimport {\n    sGetDashboardById,\n    sGetDashboardItems,\n} from '../../reducers/dashboards';\nimport { colors } from '@dhis2/ui-core';\n\nconst NO_DESCRIPTION = i18n.t('No description');\n\nconst styles = {\n    actions: {\n        display: 'flex',\n        alignItems: 'center',\n        marginLeft: '20px',\n    },\n    starIcon: {\n        fill: colors.grey600,\n    },\n    textButton: {\n        minWidth: '30px',\n        top: '1px',\n    },\n    editLink: {\n        display: 'inline-block',\n        verticalAlign: 'top',\n        textDecoration: 'none',\n        marginRight: '4px',\n    },\n    titleBar: {\n        display: 'flex',\n        alignItems: 'flex-start',\n    },\n    titleBarIcon: {\n        marginLeft: 5,\n        position: 'relative',\n        top: 1,\n        cursor: 'pointer',\n    },\n};\n\nclass ViewTitleBar extends Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            sharingDialogIsOpen: false,\n        };\n    }\n\n    toggleSharingDialog = () =>\n        this.setState({ sharingDialogIsOpen: !this.state.sharingDialogIsOpen });\n\n    render() {\n        const {\n            id,\n            name,\n            description,\n            access,\n            style,\n            showDescription,\n            starred,\n            onStarClick,\n            onInfoClick,\n            classes,\n        } = this.props;\n\n        const titleStyle = Object.assign({}, style.title, {\n            cursor: 'default',\n            userSelect: 'text',\n            top: '7px',\n        });\n\n        const StarIcon = starred ? Star : StarBorder;\n\n        return (\n            <Fragment>\n                <div className={classes.titleBar}>\n                    <span style={titleStyle}>{name}</span>\n                    <div className={classes.actions}>\n                        <div\n                            className={classes.titleBarIcon}\n                            onClick={onStarClick}\n                        >\n                            <StarIcon className={classes.starIcon} />\n                        </div>\n                        <div className={classes.titleBarIcon}>\n                            <Info onClick={onInfoClick} />\n                        </div>\n                        <div style={{ marginLeft: '10px' }}>\n                            {access.update ? (\n                                <Link\n                                    className={classes.editLink}\n                                    to={`/${id}/edit`}\n                                >\n                                    <Button>{i18n.t('Edit')}</Button>\n                                </Link>\n                            ) : null}\n                            {access.manage ? (\n                                <span style={{ marginRight: '4px' }}>\n                                    <Button onClick={this.toggleSharingDialog}>\n                                        {i18n.t('Share')}\n                                    </Button>\n                                </span>\n                            ) : null}\n                            <span style={{ marginRight: '4px' }}>\n                                <FilterSelector />\n                            </span>\n                        </div>\n                    </div>\n                </div>\n                {showDescription ? (\n                    <div\n                        className=\"dashboard-description\"\n                        style={Object.assign(\n                            { paddingTop: '5px', paddingBottom: '5px' },\n                            style.description,\n                            !description ? { color: '#888' } : {}\n                        )}\n                    >\n                        {description || NO_DESCRIPTION}\n                    </div>\n                ) : null}\n                {id ? (\n                    <SharingDialog\n                        d2={this.context.d2}\n                        id={id}\n                        type=\"dashboard\"\n                        open={this.state.sharingDialogIsOpen}\n                        onRequestClose={this.toggleSharingDialog}\n                    />\n                ) : null}\n            </Fragment>\n        );\n    }\n}\n\nconst mapStateToProps = state => {\n    const id = sGetSelectedId(state);\n    const dashboard = orObject(sGetDashboardById(state, id));\n\n    return {\n        id,\n        name: dashboard.displayName,\n        description: dashboard.displayDescription,\n        dashboardItems: sGetDashboardItems(state),\n        showDescription: sGetSelectedShowDescription(state),\n        starred: dashboard.starred,\n        access: orObject(dashboard.access),\n    };\n};\n\nconst mergeProps = (stateProps, dispatchProps, ownProps) => {\n    const { id, starred, showDescription } = stateProps;\n    const { dispatch } = dispatchProps;\n\n    return {\n        ...stateProps,\n        ...ownProps,\n        onStarClick: () => dispatch(tStarDashboard(id, !starred)),\n        onInfoClick: () =>\n            dispatch(acSetSelectedShowDescription(!showDescription)),\n    };\n};\n\nexport default connect(\n    mapStateToProps,\n    null,\n    mergeProps\n)(withStyles(styles)(ViewTitleBar));\n\nViewTitleBar.propTypes = {\n    access: PropTypes.object,\n    classes: PropTypes.object,\n    description: PropTypes.string,\n    id: PropTypes.string,\n    name: PropTypes.string,\n    showDescription: PropTypes.bool,\n    starred: PropTypes.bool,\n    style: PropTypes.object,\n    onInfoClick: PropTypes.func,\n    onStarClick: PropTypes.func,\n};\n\nViewTitleBar.defaultProps = {\n    name: '',\n    description: '',\n    starred: false,\n    showDescription: false,\n    onInfoClick: null,\n};\n\nViewTitleBar.contextTypes = {\n    d2: PropTypes.object,\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport { colors } from '@dhis2/ui-core';\nimport EditTitleBar from './EditTitleBar';\nimport ViewTitleBar from './ViewTitleBar';\n\nimport './TitleBar.css';\n\nconst style = {\n    title: {\n        position: 'relative',\n        fontSize: 21,\n        fontWeight: 500,\n        color: colors.black,\n        minWidth: 50,\n    },\n    description: {\n        fontSize: 14,\n        color: colors.grey800,\n    },\n};\n\nconst TitleBar = ({ edit }) => {\n    return (\n        <div\n            className=\"titlebar-wrapper\"\n            style={{\n                padding: '20px 15px 5px 10px',\n            }}\n        >\n            {edit ? (\n                <EditTitleBar style={style} />\n            ) : (\n                <ViewTitleBar style={style} />\n            )}\n        </div>\n    );\n};\n\nTitleBar.propTypes = {\n    edit: PropTypes.bool,\n};\n\nexport default TitleBar;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nimport i18n from '@dhis2/d2-i18n';\n\nimport * as pluginManager from './plugin';\nimport { getBaseUrl, orObject } from '../../../modules/util';\nimport { getGridItemDomId } from '../../ItemGrid/gridUtil';\n\nconst pluginCredentials = d2 => {\n    return {\n        baseUrl: getBaseUrl(d2),\n        auth: d2.Api.getApi().defaultHeaders.Authorization,\n    };\n};\n\nclass DefaultPlugin extends Component {\n    pluginCredentials = null;\n\n    constructor(props, context) {\n        super(props);\n\n        this.d2 = context.d2;\n    }\n\n    shouldPluginReload = prevProps => {\n        // TODO - fix this hack, to handle bug with multiple\n        // rerendering while switching between dashboards.\n        //\n        // To determine if the rendering is happening because of a\n        // dashboard switch, check if the item reference has changed.\n        const reloadAllowed = this.props.item === prevProps.item;\n\n        const filtersChanged = prevProps.itemFilters !== this.props.itemFilters;\n        const vis = orObject(this.props.visualization);\n        const prevVis = orObject(prevProps.visualization);\n        const visChanged =\n            vis.id !== prevVis.id || vis.activeType !== prevVis.activeType;\n\n        return reloadAllowed && (visChanged || filtersChanged);\n    };\n\n    reloadPlugin = prevProps => {\n        if (\n            pluginManager.pluginIsAvailable(\n                this.props.item,\n                this.props.visualization\n            ) &&\n            this.shouldPluginReload(prevProps)\n        ) {\n            const prevVis = orObject(prevProps.visualization);\n            const currentVis = this.props.visualization;\n\n            const useActiveType =\n                currentVis.activeType !== prevVis.activeType ||\n                currentVis.activeType !== this.props.item.type;\n\n            if (\n                useActiveType ||\n                this.props.itemFilters !== prevProps.itemFilters\n            ) {\n                pluginManager.unmount(\n                    this.props.item,\n                    prevVis.activeType || this.props.item.type\n                );\n\n                pluginManager.load(this.props.item, this.props.visualization, {\n                    credentials: this.pluginCredentials,\n                    activeType: useActiveType ? currentVis.activeType : null,\n                });\n            }\n        }\n    };\n\n    componentDidMount() {\n        this.pluginCredentials = pluginCredentials(this.d2);\n\n        if (\n            pluginManager.pluginIsAvailable(\n                this.props.item,\n                this.props.visualization\n            )\n        ) {\n            pluginManager.load(this.props.item, this.props.visualization, {\n                credentials: this.pluginCredentials,\n                activeType: !this.props.editMode ? this.getActiveType() : null,\n            });\n        }\n    }\n\n    componentDidUpdate(prevProps) {\n        this.reloadPlugin(prevProps);\n    }\n\n    getActiveType = () =>\n        this.props.visualization.activeType || this.props.item.type;\n\n    render() {\n        const { classes, item, visualization, style } = this.props;\n        const pluginIsAvailable = pluginManager.pluginIsAvailable(\n            item,\n            visualization\n        );\n\n        return pluginIsAvailable ? (\n            <div id={getGridItemDomId(item.id)} style={style} />\n        ) : (\n            <div className={classes.textDiv}>\n                {i18n.t('Unable to load the plugin for this item')}\n            </div>\n        );\n    }\n}\n\nDefaultPlugin.contextTypes = {\n    d2: PropTypes.object,\n};\n\nDefaultPlugin.propTypes = {\n    classes: PropTypes.object,\n    editMode: PropTypes.bool,\n    item: PropTypes.object,\n    itemFilters: PropTypes.object,\n    style: PropTypes.object,\n    visualization: PropTypes.object,\n};\n\nDefaultPlugin.defaultProps = {\n    style: {},\n    item: {},\n    itemFilters: {},\n    visualization: {},\n};\n\nexport default DefaultPlugin;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nexport const HEADER_HEIGHT = 45;\n\nconst ItemHeader = props => {\n    const { title, actionButtons, editMode } = props;\n\n    return (\n        <div className=\"dashboard-item-header\">\n            <div\n                className=\"dashboard-item-header-title\"\n                style={{ userSelect: editMode ? 'none' : 'text' }}\n            >\n                {title}\n            </div>\n            {actionButtons}\n        </div>\n    );\n};\n\nItemHeader.propTypes = {\n    actionButtons: PropTypes.node,\n    editMode: PropTypes.bool,\n    title: PropTypes.oneOfType([PropTypes.object, PropTypes.string]),\n};\n\nexport default ItemHeader;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { colors } from '@dhis2/ui-core';\nimport { getId } from './plugin';\nimport InterpretationsComponent from '@dhis2/d2-ui-interpretations';\n\nconst style = {\n    scrollContainer: {\n        overflowY: 'auto',\n        height: '340px',\n    },\n    line: {\n        margin: '-1px 0px 0px',\n        height: '1px',\n        border: 'none',\n        backgroundColor: colors.grey100,\n    },\n};\n\nclass ItemFooter extends Component {\n    render() {\n        const objectId = getId(this.props.item);\n\n        return (\n            <div className=\"dashboard-item-footer\">\n                <hr style={style.line} />\n                <div style={style.scrollContainer}>\n                    <InterpretationsComponent\n                        d2={this.context.d2}\n                        item={this.props.item}\n                        type={this.props.item.type.toLowerCase()}\n                        id={objectId}\n                        appName=\"dashboard\"\n                    />\n                </div>\n            </div>\n        );\n    }\n}\n\nItemFooter.contextTypes = {\n    d2: PropTypes.object.isRequired,\n};\n\nItemFooter.propTypes = {\n    item: PropTypes.object.isRequired,\n};\n\nexport default ItemFooter;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport './ItemHeaderButton.css';\n\nconst ItemHeaderButton = ({ disabled, onClick, children, style }) => {\n    return (\n        <button\n            disabled={disabled}\n            type=\"button\"\n            className=\"item-action-button\"\n            style={style}\n            onClick={onClick}\n        >\n            {children}\n        </button>\n    );\n};\n\nItemHeaderButton.propTypes = {\n    children: PropTypes.node,\n    disabled: PropTypes.bool,\n    style: PropTypes.object,\n    onClick: PropTypes.func,\n};\n\nexport default ItemHeaderButton;\n","import React, { Component, Fragment } from 'react';\nimport PropTypes from 'prop-types';\nimport MessageIcon from '@material-ui/icons/Message';\nimport TableIcon from '@material-ui/icons/ViewList';\nimport ChartIcon from '@material-ui/icons/InsertChart';\nimport MapIcon from '@material-ui/icons/Public';\n\nimport { extractFavorite } from './plugin';\nimport ItemHeaderButton from '../ItemHeaderButton';\nimport {\n    CHART,\n    MAP,\n    REPORT_TABLE,\n    EVENT_CHART,\n    EVENT_REPORT,\n    isTrackerDomainType,\n    hasMapView,\n} from '../../../modules/itemTypes';\nimport { colors, theme } from '@dhis2/ui-core';\nimport { isSingleValue } from '@dhis2/analytics';\n\nconst style = {\n    iconBase: {\n        width: '24px',\n        height: '24px',\n        fill: colors.grey500,\n    },\n    buttonBase: {\n        padding: '5px 6px 3px 6px',\n    },\n    buttonDisabled: {\n        padding: '5px 6px 3px 6px',\n        opacity: 0.5,\n        cursor: 'unset',\n    },\n    toggleFooterPadding: {\n        padding: '7px 6px 1px 6px',\n    },\n    border: {\n        borderRadius: '2px',\n        border: `1px solid ${colors.grey200}`,\n    },\n};\n\nconst baseStyle = {\n    icon: style.iconBase,\n    container: style.buttonBase,\n};\n\nconst disabledStyle = {\n    icon: style.iconBase,\n    container: style.buttonDisabled,\n};\n\nconst activeStyle = {\n    icon: { ...style.iconBase, fill: theme.primary800 },\n    container: {\n        ...style.buttonBase,\n        backgroundColor: theme.primary100,\n    },\n};\n\nconst inactiveStyle = disabled => (disabled ? disabledStyle : baseStyle);\n\nconst tableBtnStyle = (activeType, disabled) =>\n    [REPORT_TABLE, EVENT_REPORT].includes(activeType)\n        ? activeStyle\n        : inactiveStyle(disabled);\n\nconst chartBtnStyle = (activeType, disabled) =>\n    [CHART, EVENT_CHART].includes(activeType)\n        ? activeStyle\n        : inactiveStyle(disabled);\n\nconst mapBtnStyle = (activeType, disabled) =>\n    [MAP].includes(activeType) ? activeStyle : inactiveStyle(disabled);\n\nclass VisualizationItemHeaderButtons extends Component {\n    renderInterpretationButton() {\n        const { activeFooter, onToggleFooter } = this.props;\n\n        const toggleFooterBase = activeFooter ? activeStyle : baseStyle;\n\n        const toggleFooter = {\n            ...toggleFooterBase,\n            container: {\n                ...toggleFooterBase.container,\n                ...style.toggleFooterPadding,\n                ...style.border,\n            },\n        };\n\n        return (\n            <Fragment>\n                <ItemHeaderButton\n                    style={toggleFooter.container}\n                    onClick={onToggleFooter}\n                >\n                    <MessageIcon style={toggleFooter.icon} />\n                </ItemHeaderButton>\n            </Fragment>\n        );\n    }\n\n    renderVisualizationButtons() {\n        const {\n            item,\n            visualization,\n            onSelectActiveType,\n            activeType,\n        } = this.props;\n\n        if (isSingleValue(visualization.type)) {\n            return null;\n        }\n\n        const onViewTable = () =>\n            onSelectActiveType(\n                isTrackerDomainType(item.type) ? EVENT_REPORT : REPORT_TABLE\n            );\n\n        const onViewChart = () =>\n            onSelectActiveType(\n                isTrackerDomainType(item.type) ? EVENT_CHART : CHART\n            );\n\n        const onViewMap = () => onSelectActiveType(MAP);\n\n        // disable toggle buttons\n        let disabled = false;\n\n        if (item.type === CHART) {\n            if (extractFavorite(item).type.match(/^YEAR_OVER_YEAR/)) {\n                disabled = true;\n            }\n        }\n\n        const tableButtonStyle = tableBtnStyle(activeType, disabled);\n        const chartButtonStyle = chartBtnStyle(activeType, disabled);\n        const mapButtonStyle = mapBtnStyle(activeType, disabled);\n\n        return (\n            <div style={{ marginLeft: 10 }}>\n                <div style={style.border}>\n                    <ItemHeaderButton\n                        disabled={disabled}\n                        style={tableButtonStyle.container}\n                        onClick={onViewTable}\n                    >\n                        <TableIcon style={tableButtonStyle.icon} />\n                    </ItemHeaderButton>\n                    <ItemHeaderButton\n                        disabled={disabled}\n                        style={chartButtonStyle.container}\n                        onClick={onViewChart}\n                    >\n                        <ChartIcon style={chartButtonStyle.icon} />\n                    </ItemHeaderButton>\n                    {hasMapView(item.type) ? (\n                        <ItemHeaderButton\n                            disabled={disabled}\n                            style={mapButtonStyle.container}\n                            onClick={onViewMap}\n                        >\n                            <MapIcon style={mapButtonStyle.icon} />\n                        </ItemHeaderButton>\n                    ) : null}\n                </div>\n            </div>\n        );\n    }\n\n    render() {\n        return (\n            <Fragment>\n                {this.renderInterpretationButton()}\n                {this.renderVisualizationButtons()}\n            </Fragment>\n        );\n    }\n}\n\nVisualizationItemHeaderButtons.propTypes = {\n    activeFooter: PropTypes.bool,\n    activeType: PropTypes.string,\n    item: PropTypes.object,\n    visualization: PropTypes.object,\n    onSelectActiveType: PropTypes.func,\n    onToggleFooter: PropTypes.func,\n};\n\nexport default VisualizationItemHeaderButtons;\n","// Note that this ignores discrepancies in 'this', so shouldn't be used with bound functions\n// This is useful instead of lodash/memoize when we only need to memoize a single value\n// Inspiration: https://github.com/alexreardon/memoize-one\n\nconst memoizeOne = fn => {\n    let lastArgs = undefined;\n    let lastValue = undefined;\n\n    return (...args) => {\n        if (\n            lastArgs &&\n            args.length === lastArgs.length &&\n            args.every((arg, i) => arg === lastArgs[i])\n        ) {\n            return lastValue;\n        }\n        lastArgs = args;\n        lastValue = fn(...args);\n        return lastValue;\n    };\n};\n\nexport default memoizeOne;\n","import React, { Component, Fragment } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { withStyles } from '@material-ui/core/styles';\nimport LaunchIcon from '@material-ui/icons/Launch';\nimport VisualizationPlugin from '@dhis2/data-visualizer-plugin';\n\nimport i18n from '@dhis2/d2-i18n';\nimport uniqueId from 'lodash/uniqueId';\n\nimport DefaultPlugin from './DefaultPlugin';\nimport ItemHeader, { HEADER_HEIGHT } from '../ItemHeader';\nimport ItemFooter from './ItemFooter';\nimport VisualizationItemHeaderButtons from './ItemHeaderButtons';\nimport * as pluginManager from './plugin';\nimport { sGetVisualization } from '../../../reducers/visualizations';\nimport { sGetItemFiltersRoot } from '../../../reducers/itemFilters';\nimport {\n    acAddVisualization,\n    acSetActiveVisualizationType,\n} from '../../../actions/visualizations';\nimport {\n    VISUALIZATION,\n    MAP,\n    CHART,\n    REPORT_TABLE,\n    itemTypeMap,\n} from '../../../modules/itemTypes';\n\nimport { colors } from '@dhis2/ui-core';\nimport memoizeOne from '../../../modules/memoizeOne';\nimport { getVisualizationConfig } from './plugin';\n\nconst styles = {\n    icon: {\n        width: 16,\n        height: 16,\n        marginLeft: 3,\n        cursor: 'pointer',\n        fill: colors.grey600,\n    },\n    title: {\n        overflow: 'hidden',\n        maxWidth: '85%',\n        textOverflow: 'ellipsis',\n        whiteSpace: 'nowrap',\n    },\n    textDiv: {\n        fontSize: '14px',\n        fontStretch: 'normal',\n        padding: '10px',\n        lineHeight: '20px',\n    },\n};\n\nconst applyFilters = (visualization, filters) => {\n    if (!Object.keys(filters).length) {\n        return visualization;\n    }\n\n    // deep clone objects in filters to avoid changing the visualization in the Redux store\n    const visRows = visualization.rows.map(obj => ({ ...obj }));\n    const visColumns = visualization.columns.map(obj => ({ ...obj }));\n    const visFilters = visualization.filters.map(obj => ({ ...obj }));\n\n    Object.keys(filters).forEach(dimensionId => {\n        if (filters[dimensionId]) {\n            let dimensionFound = false;\n\n            [visRows, visColumns, visFilters].forEach(dimensionObjects =>\n                dimensionObjects\n                    .filter(obj => obj.dimension === dimensionId)\n                    .forEach(obj => {\n                        dimensionFound = true;\n                        obj.items = filters[dimensionId];\n                    })\n            );\n\n            // add dimension to filters if not already present elsewhere\n            if (!dimensionFound) {\n                visFilters.push({\n                    dimension: dimensionId,\n                    items: filters[dimensionId],\n                });\n            }\n        }\n    });\n\n    return {\n        ...visualization,\n        rows: visRows,\n        columns: visColumns,\n        filters: visFilters,\n    };\n};\n\nexport class Item extends Component {\n    state = {\n        showFooter: false,\n        configLoaded: false,\n    };\n\n    constructor(props, context) {\n        super(props);\n\n        this.d2 = context.d2;\n\n        this.contentRef = React.createRef();\n    }\n\n    async componentDidMount() {\n        this.props.onVisualizationLoaded(\n            // TODO do not call fetch on the pluginManager, do it here as the manager will eventually be removed...\n            await pluginManager.fetch(this.props.item)\n        );\n\n        this.setState({\n            configLoaded: true,\n        });\n    }\n\n    getUniqueKey = memoizeOne(() => uniqueId());\n\n    pluginCredentials = null;\n\n    getPluginComponent = () => {\n        const activeType = this.getActiveType();\n        const visualization = getVisualizationConfig(\n            this.props.visualization,\n            this.props.item.type,\n            activeType\n        );\n\n        if (!visualization) {\n            return (\n                <div className={this.props.classes.textDiv}>\n                    {i18n.t('No data to display')}\n                </div>\n            );\n        }\n\n        const props = {\n            ...this.props,\n            visualization,\n            style: this.getContentStyle(),\n        };\n\n        switch (activeType) {\n            case VISUALIZATION:\n            case CHART:\n            case REPORT_TABLE: {\n                return (\n                    <VisualizationPlugin\n                        d2={this.d2}\n                        visualization={applyFilters(\n                            visualization,\n                            props.itemFilters\n                        )}\n                        forDashboard={true}\n                        style={props.style}\n                    />\n                );\n            }\n            case MAP: {\n                if (props.item.type === MAP) {\n                    // apply filters only to thematic and event layers\n                    // for maps AO\n                    const mapViews = props.visualization.mapViews.map(obj => {\n                        if (\n                            obj.layer.includes('thematic') ||\n                            obj.layer.includes('event')\n                        ) {\n                            return applyFilters(obj, props.itemFilters);\n                        }\n\n                        return obj;\n                    });\n\n                    props.visualization = {\n                        ...props.visualization,\n                        mapViews,\n                    };\n                } else {\n                    // this is the case of a non map AO passed to the maps plugin\n                    // due to a visualization type switch in dashboard item\n                    // maps plugin takes care of converting the AO to a suitable format\n                    props.visualization = applyFilters(\n                        props.visualization,\n                        props.itemFilters\n                    );\n                }\n\n                return <DefaultPlugin {...props} />;\n            }\n            default: {\n                props.visualization = applyFilters(\n                    props.visualization,\n                    props.itemFilters\n                );\n\n                return <DefaultPlugin {...props} />;\n            }\n        }\n    };\n\n    onToggleFooter = () => {\n        this.setState(\n            { showFooter: !this.state.showFooter },\n            this.props.onToggleItemExpanded(this.props.item.id)\n        );\n    };\n\n    onSelectActiveType = type => {\n        if (type === this.getActiveType()) {\n            return;\n        }\n\n        pluginManager.unmount(this.props.item, this.getActiveType());\n\n        this.props.onSelectActiveType(this.props.visualization.id, type);\n    };\n\n    getActiveType = () =>\n        this.props.visualization.activeType || this.props.item.type;\n\n    pluginIsAvailable = () =>\n        pluginManager.pluginIsAvailable(\n            this.props.item,\n            this.props.visualization\n        );\n\n    getTitle = () => {\n        const { item, editMode, classes } = this.props;\n        const itemName = pluginManager.getName(item);\n\n        return (\n            <div style={{ display: 'flex' }}>\n                <span className={classes.title} title={itemName}>\n                    {itemName}\n                </span>\n                {!editMode && this.pluginIsAvailable() ? (\n                    <a\n                        href={pluginManager.getLink(this.props.item, this.d2)}\n                        style={{ height: 16 }}\n                        title={`View in ${\n                            itemTypeMap[this.props.item.type].appName\n                        } app`}\n                    >\n                        <LaunchIcon className={classes.icon} />\n                    </a>\n                ) : null}\n            </div>\n        );\n    };\n\n    getActionButtons = () =>\n        pluginManager.pluginIsAvailable(\n            this.props.item,\n            this.props.visualization\n        ) && !this.props.editMode ? (\n            <VisualizationItemHeaderButtons\n                item={this.props.item}\n                visualization={this.props.visualization}\n                activeFooter={this.state.showFooter}\n                activeType={this.getActiveType()}\n                onSelectActiveType={this.onSelectActiveType}\n                onToggleFooter={this.onToggleFooter}\n            />\n        ) : null;\n\n    getContentStyle = () => {\n        const { item, editMode } = this.props;\n        const PADDING_BOTTOM = 4;\n\n        return !editMode\n            ? {\n                  height: item.originalHeight - HEADER_HEIGHT - PADDING_BOTTOM,\n              }\n            : { height: this.contentRef.offsetHeight };\n    };\n\n    render() {\n        const { item, editMode, itemFilters } = this.props;\n        const { showFooter } = this.state;\n\n        return (\n            <Fragment>\n                <ItemHeader\n                    title={this.getTitle()}\n                    actionButtons={this.getActionButtons()}\n                    editMode={editMode}\n                />\n                <div\n                    key={this.getUniqueKey(itemFilters)}\n                    className=\"dashboard-item-content\"\n                    ref={ref => (this.contentRef = ref)}\n                >\n                    {this.state.configLoaded && this.getPluginComponent()}\n                </div>\n                {!editMode && showFooter ? <ItemFooter item={item} /> : null}\n            </Fragment>\n        );\n    }\n}\n\nItem.contextTypes = {\n    d2: PropTypes.object,\n};\n\nItem.propTypes = {\n    classes: PropTypes.object,\n    editMode: PropTypes.bool,\n    item: PropTypes.object,\n    itemFilters: PropTypes.object,\n    visualization: PropTypes.object,\n    onSelectActiveType: PropTypes.func,\n    onToggleItemExpanded: PropTypes.func,\n    onVisualizationLoaded: PropTypes.func,\n};\n\nItem.defaultProps = {\n    item: {},\n    editMode: false,\n    onToggleItemExpanded: Function.prototype,\n    itemFilters: {},\n    visualization: {},\n};\n\nconst mapStateToProps = (state, ownProps) => ({\n    itemFilters: sGetItemFiltersRoot(state),\n    visualization: sGetVisualization(\n        state,\n        pluginManager.extractFavorite(ownProps.item).id\n    ),\n});\n\nconst mapDispatchToProps = dispatch => ({\n    onVisualizationLoaded: visualization =>\n        dispatch(acAddVisualization(visualization)),\n    onSelectActiveType: (id, type, activeType) =>\n        dispatch(acSetActiveVisualizationType(id, type, activeType)),\n});\n\nexport default connect(\n    mapStateToProps,\n    mapDispatchToProps\n)(withStyles(styles)(Item));\n","import React from 'react';\nimport { colors } from '@dhis2/ui-core';\n\nconst style = {\n    backgroundColor: colors.grey200,\n    border: 'none',\n    height: '1px',\n    margin: '0px 0px 5px 0px',\n};\n\nconst Line = () => <hr style={style} />;\n\nexport default Line;\n","import React, { Component, Fragment } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport i18n from '@dhis2/d2-i18n';\n\nimport { sGetMessagesRoot } from '../../../reducers/messages';\nimport { formatDate } from '../../../modules/util';\nimport { colors } from '@dhis2/ui-core';\nimport ItemHeader from '../ItemHeader';\nimport Line from '../../../widgets/Line';\n\nimport './MessagesItem.css';\n\nconst PRIVATE = 'PRIVATE';\n\nconst messageTypes = {\n    [PRIVATE]: 'Private',\n    VALIDATION_RESULT: 'Validation',\n    TICKET: 'Ticket',\n    SYSTEM: 'System',\n};\n\nconst style = {\n    list: {\n        listStyleType: 'none',\n        paddingLeft: '0px',\n    },\n    seeAll: {\n        textAlign: 'center',\n        fontSize: '13px',\n        marginBottom: '5px',\n    },\n    sender: {\n        fontSize: '13px',\n        lineHeight: '15px',\n        margin: 0,\n        color: colors.grey800,\n    },\n    snippet: {\n        color: colors.grey800,\n        fontSize: '13px',\n        lineHeight: '15px',\n        maxHeight: '30px',\n        overflow: 'hidden',\n    },\n};\n\nclass MessagesItem extends Component {\n    state = {\n        uiLocale: '',\n    };\n\n    async componentDidMount() {\n        const uiLocale = await this.context.d2.currentUser.userSettings.get(\n            'keyUiLocale'\n        );\n\n        this.setState({ uiLocale });\n    }\n\n    getMessageHref = msg => {\n        const msgIdentifier = msg ? `#/${msg.messageType}/${msg.id}` : '';\n        return `${this.context.baseUrl}/dhis-web-messaging/${msgIdentifier}`;\n    };\n\n    getMessageSender = msg => {\n        const latestMsg = msg.messages.slice(-1)[0];\n        return latestMsg.sender ? latestMsg.sender.displayName : '';\n    };\n\n    getMessageItems = () => {\n        const editClass = !this.props.editMode ? 'view' : null;\n\n        return this.props.messages.map(msg => {\n            const redirectToMsg = () => {\n                if (!this.props.editMode) {\n                    document.location.href = this.getMessageHref(msg);\n                }\n            };\n\n            const sender =\n                msg.messageType === PRIVATE\n                    ? this.getMessageSender(msg)\n                    : messageTypes[msg.messageType];\n\n            const readClass = !msg.read ? 'unread' : null;\n            const latestMsg = msg.messages.slice(-1)[0];\n            const msgDate = latestMsg.lastUpdated;\n\n            return (\n                <li\n                    className={`message-item ${editClass}`}\n                    key={msg.id}\n                    onClick={redirectToMsg}\n                >\n                    <p className={`message-title ${readClass}`}>\n                        {msg.displayName} ({msg.messageCount})\n                    </p>\n                    <p style={style.sender}>\n                        {sender} - {formatDate(msgDate, this.state.uiLocale)}\n                    </p>\n                    <p style={style.snippet}>{latestMsg.text}</p>\n                </li>\n            );\n        });\n    };\n\n    render() {\n        return (\n            <Fragment>\n                <ItemHeader title={i18n.t('Messages')} />\n                <Line />\n                {this.props.messages.length > 0 && (\n                    <div className=\"dashboard-item-content\">\n                        <ul style={style.list}>{this.getMessageItems()}</ul>\n                        <div style={style.seeAll}>\n                            <a href={this.getMessageHref()}>\n                                {i18n.t('See all messages')}\n                            </a>\n                        </div>\n                    </div>\n                )}\n            </Fragment>\n        );\n    }\n}\n\nMessagesItem.propTypes = {\n    editMode: PropTypes.bool,\n    messages: PropTypes.array,\n};\n\nMessagesItem.contextTypes = {\n    d2: PropTypes.object,\n    baseUrl: PropTypes.string,\n};\n\nconst mapStateToProps = state => {\n    return {\n        messages: Object.values(sGetMessagesRoot(state)),\n    };\n};\n\nconst MessagesContainer = connect(\n    mapStateToProps,\n    null\n)(MessagesItem);\n\nexport default MessagesContainer;\n","import React, { Fragment } from 'react';\nimport PropTypes from 'prop-types';\nimport ItemHeader from '../ItemHeader';\nimport NotInterestedIcon from '@material-ui/icons/NotInterested';\n\nconst NotSupportedItem = props => (\n    <Fragment>\n        <ItemHeader title={`Item type not supported: ${props.item.type}`} />\n        <div\n            style={{\n                display: 'flex',\n                justifyContent: 'center',\n                alignItems: 'center',\n                height: '90%',\n            }}\n        >\n            <NotInterestedIcon\n                style={{ width: 100, height: 100, align: 'center' }}\n                color=\"disabled\"\n            />\n        </div>\n    </Fragment>\n);\n\nNotSupportedItem.propTypes = {\n    item: PropTypes.object,\n};\n\nexport default NotSupportedItem;\n","import React from 'react';\nimport { colors } from '@dhis2/ui-core';\nimport PropTypes from 'prop-types';\n\nconst DescriptionIcon = ({ className }) => (\n    <svg\n        className={className}\n        xmlns=\"http://www.w3.org/2000/svg\"\n        viewBox=\"0 0 24 24\"\n        fill={colors.grey500}\n    >\n        <path d=\"M0 0h24v24H0z\" fill=\"none\" />\n        <path d=\"M14 2H6c-1.1 0-1.99.9-1.99 2L4 20c0 1.1.89 2 1.99 2H18c1.1 0 2-.9 2-2V8l-6-6zm2 16H8v-2h8v2zm0-4H8v-2h8v2zm-3-5V3.5L18.5 9H13z\" />\n    </svg>\n);\n\nDescriptionIcon.propTypes = {\n    className: PropTypes.string,\n};\n\nexport default DescriptionIcon;\n","import React from 'react';\nimport { colors } from '@dhis2/ui-core';\nimport PropTypes from 'prop-types';\n\nconst DeleteIcon = ({ className }) => (\n    <svg\n        className={className}\n        xmlns=\"http://www.w3.org/2000/svg\"\n        width=\"18\"\n        height=\"18\"\n        viewBox=\"0 0 24 24\"\n        fill={colors.red500}\n    >\n        <path d=\"M6 19c0 1.1.9 2 2 2h8c1.1 0 2-.9 2-2V7H6v12zM19 4h-3.5l-1-1h-5l-1 1H5v2h14V4z\" />\n        <path d=\"M0 0h24v24H0z\" fill=\"none\" />\n    </svg>\n);\n\nDeleteIcon.propTypes = {\n    className: PropTypes.string,\n};\n\nexport default DeleteIcon;\n","import React, { Fragment } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { colors } from '@dhis2/ui-core';\nimport DescriptionIcon from '../../../icons/Description';\n\nimport DeleteIcon from '../../../icons/Delete';\nimport Line from '../../../widgets/Line';\nimport { itemTypeMap, getItemUrl } from '../../../modules/itemTypes';\nimport { orArray } from '../../../modules/util';\nimport { tRemoveListItemContent } from './actions';\nimport ItemHeader from '../ItemHeader';\nimport classes from './Item.module.css';\n\nconst getItemTitle = item => itemTypeMap[item.type].pluralTitle;\n\nconst getContentItems = item =>\n    orArray(item[itemTypeMap[item.type].propName]).filter(\n        (item, index, array) =>\n            array.findIndex(el => el.id === item.id) === index\n    );\n\nconst ListItem = (props, context) => {\n    const { item, editMode, tRemoveListItemContent } = props;\n    const contentItems = getContentItems(item);\n\n    const getLink = contentItem => {\n        const deleteButton = (\n            <button\n                className={classes.deletebutton}\n                onClick={() => tRemoveListItemContent(item, contentItem)}\n            >\n                <DeleteIcon className={classes.deleteicon} />\n            </button>\n        );\n\n        return (\n            <Fragment>\n                <a\n                    className={classes.link}\n                    style={{ color: colors.grey900 }}\n                    href={getItemUrl(item.type, contentItem, context.d2)}\n                >\n                    {contentItem.name}\n                </a>\n                {editMode ? deleteButton : null}\n            </Fragment>\n        );\n    };\n\n    return (\n        <Fragment>\n            <ItemHeader title={getItemTitle(item)} />\n            <Line />\n            <div className=\"dashboard-item-content\">\n                <ul className={classes.list}>\n                    {contentItems.map(contentItem => (\n                        <li className={classes.item} key={contentItem.id}>\n                            <DescriptionIcon className={classes.itemicon} />\n                            {getLink(contentItem)}\n                        </li>\n                    ))}\n                </ul>\n            </div>\n        </Fragment>\n    );\n};\n\nListItem.propTypes = {\n    editMode: PropTypes.bool,\n    item: PropTypes.object,\n    tRemoveListItemContent: PropTypes.func,\n};\n\nListItem.contextTypes = {\n    d2: PropTypes.object,\n};\n\nexport default connect(\n    null,\n    {\n        tRemoveListItemContent,\n    }\n)(ListItem);\n","import {\n    acUpdateDashboardItem,\n    acRemoveDashboardItem,\n} from '../../../actions/editDashboard';\nimport { itemTypeMap } from '../../../modules/itemTypes';\n\nexport const tRemoveListItemContent = (dashboardItem, content) => dispatch => {\n    const listItemType = itemTypeMap[dashboardItem.type].propName;\n\n    const newContent = dashboardItem[listItemType].filter(\n        item => item.id !== content.id\n    );\n\n    if (newContent.length) {\n        dashboardItem[listItemType] = newContent;\n        dispatch(acUpdateDashboardItem(dashboardItem));\n    } else {\n        dispatch(acRemoveDashboardItem(dashboardItem));\n    }\n};\n","import React, { Fragment } from 'react';\nimport { connect } from 'react-redux';\nimport i18n from '@dhis2/d2-i18n';\nimport PropTypes from 'prop-types';\n\nimport Input from '@material-ui/core/Input';\nimport {\n    Parser as RichTextParser,\n    Editor as RichTextEditor,\n} from '@dhis2/d2-ui-rich-text';\n\nimport { acUpdateDashboardItem } from '../../../actions/editDashboard';\nimport { sGetEditDashboardItems } from '../../../reducers/editDashboard';\nimport { sGetDashboardItems } from '../../../reducers/dashboards';\nimport ItemHeader from '../ItemHeader';\nimport Line from '../../../widgets/Line';\n\nconst style = {\n    textDiv: {\n        padding: '10px',\n        whiteSpace: 'pre-line',\n        lineHeight: '20px',\n    },\n    textField: {\n        fontSize: '14px',\n        fontStretch: 'normal',\n        width: '90%',\n        margin: '0 auto',\n        display: 'block',\n        lineHeight: '24px',\n    },\n    container: {\n        marginBottom: '20px',\n        marginTop: '20px',\n    },\n};\n\nconst TextItem = props => {\n    const { item, editMode, text, acUpdateDashboardItem } = props;\n\n    const onChangeText = event => {\n        const updatedItem = {\n            ...item,\n            text: event.target.value,\n        };\n\n        acUpdateDashboardItem(updatedItem);\n    };\n\n    const viewItem = () => {\n        const textDivStyle = Object.assign({}, style.textField, style.textDiv);\n        return (\n            <div className=\"dashboard-item-content\" style={style.container}>\n                <RichTextParser style={textDivStyle}>{text}</RichTextParser>\n            </div>\n        );\n    };\n\n    const editItem = () => {\n        return (\n            <Fragment>\n                <ItemHeader title={i18n.t('Text item')} />\n                <Line />\n                <div className=\"dashboard-item-content\">\n                    <RichTextEditor onEdit={onChangeText}>\n                        <Input\n                            value={text}\n                            multiline\n                            fullWidth\n                            style={style.textField}\n                            placeholder={i18n.t('Add text here')}\n                            onChange={onChangeText}\n                        />\n                    </RichTextEditor>\n                </div>\n            </Fragment>\n        );\n    };\n\n    return <Fragment>{editMode ? editItem() : viewItem()}</Fragment>;\n};\n\nconst mapStateToProps = (state, ownProps) => {\n    const items = ownProps.editMode\n        ? sGetEditDashboardItems(state)\n        : sGetDashboardItems(state);\n\n    const item = items.find(item => item.id === ownProps.item.id);\n\n    return {\n        text: item ? item.text : '',\n    };\n};\n\nTextItem.propTypes = {\n    acUpdateDashboardItem: PropTypes.func,\n    editMode: PropTypes.bool,\n    item: PropTypes.object,\n    text: PropTypes.string,\n};\n\nexport default connect(\n    mapStateToProps,\n    {\n        acUpdateDashboardItem,\n    }\n)(TextItem);\n","import React, { Fragment } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport NotInterestedIcon from '@material-ui/icons/NotInterested';\n\nimport { FILTER_ORG_UNIT } from '../../../actions/itemFilters';\nimport { sGetItemFiltersRoot } from '../../../reducers/itemFilters';\nimport ItemHeader from '../ItemHeader';\nimport Line from '../../../widgets/Line';\n\nconst getIframeSrc = (appDetails, item, itemFilters) => {\n    let iframeSrc = `${appDetails.launchUrl}?dashboardItemId=${item.id}`;\n\n    if (\n        itemFilters &&\n        itemFilters[FILTER_ORG_UNIT] &&\n        itemFilters[FILTER_ORG_UNIT].length\n    ) {\n        const ouIds = itemFilters[FILTER_ORG_UNIT].map(\n            ouPath => ouPath.split('/').slice(-1)[0]\n        );\n\n        iframeSrc += `&userOrgUnit=${ouIds.join(',')}`;\n    }\n\n    return iframeSrc;\n};\n\nconst AppItem = ({ item, itemFilters }, context) => {\n    let appDetails;\n\n    const appKey = item.appKey;\n\n    if (appKey) {\n        appDetails = context.d2.system.installedApps.find(\n            app => app.key === appKey\n        );\n    }\n\n    return appDetails && appDetails.name && appDetails.launchUrl ? (\n        <Fragment>\n            <ItemHeader title={appDetails.name} />\n            <Line />\n            <iframe\n                title={appDetails.name}\n                src={getIframeSrc(appDetails, item, itemFilters)}\n                className=\"dashboard-item-content\"\n                style={{ border: 'none' }}\n            />\n        </Fragment>\n    ) : (\n        <Fragment>\n            <ItemHeader title={`${appKey} app not found`} />\n            <Line />\n            <div\n                className=\"dashboard-item-content\"\n                style={{\n                    display: 'flex',\n                    justifyContent: 'center',\n                    alignItems: 'center',\n                    height: '90%',\n                }}\n            >\n                <NotInterestedIcon\n                    color=\"disabled\"\n                    disabled\n                    style={{ width: 100, height: 100, align: 'center' }}\n                />\n            </div>\n        </Fragment>\n    );\n};\n\nAppItem.propTypes = {\n    item: PropTypes.object,\n    itemFilters: PropTypes.object,\n};\n\nAppItem.contextTypes = {\n    d2: PropTypes.object,\n};\n\nconst mapStateToProps = state => ({\n    itemFilters: sGetItemFiltersRoot(state),\n});\n\nexport default connect(mapStateToProps)(AppItem);\n","import React, { Fragment } from 'react';\nimport i18n from '@dhis2/d2-i18n';\n\nimport { colors } from '@dhis2/ui-core';\nimport ItemHeader from '../ItemHeader';\n\nconst style = {\n    margin: '21px 28px',\n    fontSize: '14px',\n    lineHeight: '18px',\n    color: colors.grey600,\n};\n\nconst SpacerItem = () => {\n    return (\n        <Fragment>\n            <ItemHeader title={i18n.t('Spacer')} />\n            <p style={style}>\n                {i18n.t(\n                    'Use a spacer to create empty vertical space between other dashboard items.'\n                )}\n            </p>\n        </Fragment>\n    );\n};\n\nexport default SpacerItem;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport VisualizationItem from './VisualizationItem/Item';\nimport MessagesItem from './MessagesItem/Item';\nimport NotSupportedItem from './NotSupportedItem/Item';\nimport ListItem from './ListItem/Item';\nimport TextItem from './TextItem/Item';\nimport AppItem from './AppItem/Item';\nimport SpacerItem from './SpacerItem/Item';\nimport {\n    APP,\n    VISUALIZATION,\n    REPORT_TABLE,\n    CHART,\n    MAP,\n    EVENT_CHART,\n    EVENT_REPORT,\n    MESSAGES,\n    REPORTS,\n    RESOURCES,\n    USERS,\n    TEXT,\n    SPACER,\n} from '../../modules/itemTypes';\nimport { DEFAULT_STATE_ITEM_FILTERS } from '../../reducers/itemFilters';\n\nconst getGridItem = type => {\n    switch (type) {\n        case VISUALIZATION:\n        case REPORT_TABLE:\n        case CHART:\n        case MAP:\n        case EVENT_CHART:\n        case EVENT_REPORT:\n            return VisualizationItem;\n        case MESSAGES:\n            return MessagesItem;\n        case REPORTS:\n        case RESOURCES:\n        case USERS:\n            return ListItem;\n        case TEXT:\n            return TextItem;\n        case SPACER:\n            return SpacerItem;\n        case APP:\n            return AppItem;\n        default:\n            return NotSupportedItem;\n    }\n};\n\nexport const Item = props => {\n    const GridItem = getGridItem(props.item.type);\n\n    return (\n        <GridItem\n            item={props.item}\n            editMode={props.editMode}\n            itemFilters={\n                props.editMode ? DEFAULT_STATE_ITEM_FILTERS : props.itemFilters\n            }\n            onToggleItemExpanded={props.onToggleItemExpanded}\n        />\n    );\n};\n\nItem.propTypes = {\n    editMode: PropTypes.bool,\n    item: PropTypes.object,\n    itemFilters: PropTypes.object,\n    onToggleItemExpanded: PropTypes.func,\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport ItemHeaderButton from '../Item/ItemHeaderButton';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport { colors } from '@dhis2/ui-core';\n\nconst style = {\n    button: {\n        position: 'absolute',\n        top: '7px',\n        right: '7px',\n        zIndex: '1000',\n    },\n    icon: {\n        fill: colors.red500,\n    },\n};\n\nconst DeleteItemHeaderButton = ({ onClick }) => (\n    <ItemHeaderButton onClick={onClick} style={style.button}>\n        <DeleteIcon style={style.icon} />\n    </ItemHeaderButton>\n);\n\nDeleteItemHeaderButton.propTypes = {\n    onClick: PropTypes.func,\n};\n\nexport default DeleteItemHeaderButton;\n","import React from 'react';\nimport { colors } from '@dhis2/ui-core';\nimport PropTypes from 'prop-types';\n\nexport const NoContentMessage = ({ text }) => (\n    <div\n        style={{\n            padding: '50px 10px',\n            textAlign: 'center',\n            fontSize: '15px',\n            fontWeight: 500,\n            color: colors.grey600,\n        }}\n    >\n        {text}\n    </div>\n);\n\nNoContentMessage.propTypes = {\n    text: PropTypes.string,\n};\n\nexport default NoContentMessage;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport debounce from 'lodash/debounce';\nimport pick from 'lodash/pick';\n\nconst defaultDebounceMs = 100;\nconst defaultBufferFactor = 0.25;\n\nclass ProgressiveLoadingContainer extends Component {\n    static propTypes = {\n        children: PropTypes.node.isRequired,\n        bufferFactor: PropTypes.number,\n        className: PropTypes.string,\n        debounceMs: PropTypes.number,\n        style: PropTypes.object,\n    };\n    static defaultProps = {\n        debounceMs: defaultDebounceMs,\n        bufferFactor: defaultBufferFactor,\n    };\n\n    state = {\n        shouldLoad: false,\n    };\n    containerRef = null;\n    shouldLoadHandler = null;\n\n    checkShouldLoad() {\n        const bufferPx = this.props.bufferFactor * window.innerHeight;\n\n        if (!this.containerRef) {\n            return;\n        }\n\n        const rect = this.containerRef.getBoundingClientRect();\n        if (\n            rect.bottom > -bufferPx &&\n            rect.top < window.innerHeight + bufferPx\n        ) {\n            this.setState({\n                shouldLoad: true,\n            });\n\n            this.removeHandler();\n        }\n    }\n\n    registerHandler() {\n        this.shouldLoadHandler = debounce(\n            () => this.checkShouldLoad(),\n            this.props.debounceMs\n        );\n\n        window.addEventListener('scroll', this.shouldLoadHandler);\n    }\n    removeHandler() {\n        window.removeEventListener('scroll', this.shouldLoadHandler);\n    }\n\n    componentDidMount() {\n        this.registerHandler();\n        this.checkShouldLoad();\n    }\n\n    componentWillUnmount() {\n        this.removeHandler();\n    }\n\n    render() {\n        const { children, className, style, ...props } = this.props;\n        const { shouldLoad } = this.state;\n\n        const eventProps = pick(props, [\n            'onMouseDown',\n            'onTouchStart',\n            'onMouseUp',\n            'onTouchEnd',\n        ]);\n\n        return (\n            <div\n                ref={ref => (this.containerRef = ref)}\n                style={style}\n                className={className}\n                {...eventProps}\n            >\n                {shouldLoad && children}\n            </div>\n        );\n    }\n}\n\nexport default ProgressiveLoadingContainer;\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport i18n from '@dhis2/d2-i18n';\nimport ReactGridLayout from 'react-grid-layout';\nimport { CircularLoader, ScreenCover } from '@dhis2/ui-core';\n\nimport {\n    acUpdateDashboardLayout,\n    acRemoveDashboardItem,\n} from '../../actions/editDashboard';\nimport { Item } from '../Item/Item';\nimport { resize as pluginResize } from '../Item/VisualizationItem/plugin';\nimport { isVisualizationType } from '../../modules/itemTypes';\nimport {\n    GRID_ROW_HEIGHT,\n    GRID_COMPACT_TYPE,\n    ITEM_MIN_HEIGHT,\n    MARGIN,\n    getGridColumns,\n    hasShape,\n    onItemResize,\n} from './gridUtil';\nimport { orArray } from '../../modules/util';\nimport DeleteItemButton from './DeleteItemButton';\nimport NoContentMessage from '../../widgets/NoContentMessage';\n\nimport 'react-grid-layout/css/styles.css';\nimport 'react-resizable/css/styles.css';\n\nimport './ItemGrid.css';\nimport { sGetSelectedId, sGetSelectedIsLoading } from '../../reducers/selected';\nimport {\n    sGetEditDashboardRoot,\n    sGetEditDashboardItems,\n} from '../../reducers/editDashboard';\nimport {\n    sGetDashboardById,\n    sGetDashboardItems,\n} from '../../reducers/dashboards';\nimport ProgressiveLoadingContainer from '../Item/ProgressiveLoadingContainer';\n\n// Component\n\nconst EXPANDED_HEIGHT = 17;\n\nexport class ItemGrid extends Component {\n    state = {\n        expandedItems: {},\n    };\n\n    onToggleItemExpanded = clickedId => {\n        const isExpanded =\n            typeof this.state.expandedItems[clickedId] === 'boolean'\n                ? this.state.expandedItems[clickedId]\n                : false;\n\n        const expandedItems = { ...this.state.expandedItems };\n        expandedItems[clickedId] = !isExpanded;\n        this.setState({ expandedItems });\n    };\n\n    onRemoveItem = clickedId => {\n        this.props.acRemoveDashboardItem(clickedId);\n    };\n\n    componentWillReceiveProps(nextProps) {\n        if (nextProps.edit) {\n            this.setState({ expandedItems: {} });\n        }\n    }\n\n    onLayoutChange = newLayout => {\n        if (this.props.edit) {\n            this.props.acUpdateDashboardLayout(newLayout);\n        }\n    };\n\n    onResizeStop = (layout, oldItem, newItem) => {\n        onItemResize(newItem.i);\n\n        const dashboardItem = this.props.dashboardItems.find(\n            item => item.id === newItem.i\n        );\n\n        // call resize on the item component if it's a plugin type\n        if (dashboardItem && isVisualizationType(dashboardItem)) {\n            pluginResize(dashboardItem);\n        }\n    };\n\n    onRemoveItemWrapper = id => () => this.onRemoveItem(id);\n\n    render() {\n        const { edit, isLoading, dashboardItems } = this.props;\n\n        if (!isLoading && !dashboardItems.length) {\n            return (\n                <NoContentMessage\n                    text={i18n.t('There are no items on this dashboard')}\n                />\n            );\n        }\n\n        const items = dashboardItems.map(item => {\n            const expandedItem = this.state.expandedItems[item.id];\n            const hProp = { h: item.h };\n\n            if (expandedItem && expandedItem === true) {\n                hProp.h = item.h + EXPANDED_HEIGHT;\n            }\n\n            return Object.assign({}, item, hProp, {\n                i: item.id,\n                minH: ITEM_MIN_HEIGHT,\n            });\n        });\n\n        return (\n            <div className=\"grid-wrapper\">\n                {isLoading ? (\n                    <ScreenCover>\n                        <CircularLoader />\n                    </ScreenCover>\n                ) : null}\n                <ReactGridLayout\n                    onLayoutChange={this.onLayoutChange}\n                    onResizeStop={this.onResizeStop}\n                    className=\"layout\"\n                    layout={items}\n                    margin={MARGIN}\n                    cols={getGridColumns()}\n                    rowHeight={GRID_ROW_HEIGHT}\n                    width={window.innerWidth}\n                    compactType={GRID_COMPACT_TYPE}\n                    isDraggable={edit}\n                    isResizable={edit}\n                    draggableCancel=\"input,textarea\"\n                >\n                    {items.map(item => {\n                        const itemClassNames = [\n                            item.type,\n                            edit ? 'edit' : 'view',\n                        ].join(' ');\n\n                        return (\n                            <ProgressiveLoadingContainer\n                                key={item.i}\n                                className={itemClassNames}\n                            >\n                                {edit ? (\n                                    <DeleteItemButton\n                                        onClick={this.onRemoveItemWrapper(\n                                            item.id\n                                        )}\n                                    />\n                                ) : null}\n                                <Item\n                                    item={item}\n                                    editMode={edit}\n                                    onToggleItemExpanded={\n                                        this.onToggleItemExpanded\n                                    }\n                                />\n                            </ProgressiveLoadingContainer>\n                        );\n                    })}\n                </ReactGridLayout>\n            </div>\n        );\n    }\n}\n\nItemGrid.propTypes = {\n    acRemoveDashboardItem: PropTypes.func,\n    acUpdateDashboardLayout: PropTypes.func,\n    dashboardItems: PropTypes.array,\n    edit: PropTypes.bool,\n    isLoading: PropTypes.bool,\n};\n\nItemGrid.defaultProps = {\n    dashboardItems: [],\n};\n\n// Container\n\nconst mapStateToProps = (state, ownProps) => {\n    const selectedDashboard = ownProps.edit\n        ? sGetEditDashboardRoot(state)\n        : sGetDashboardById(state, sGetSelectedId(state));\n\n    const dashboardItems = ownProps.edit\n        ? sGetEditDashboardItems(state)\n        : sGetDashboardItems(state);\n\n    return {\n        isLoading: sGetSelectedIsLoading(state) || !selectedDashboard,\n        dashboardItems,\n    };\n};\n\nconst mapDispatchToProps = {\n    acUpdateDashboardLayout,\n    acRemoveDashboardItem,\n};\n\nconst mergeProps = (stateProps, dispatchProps, ownProps) => {\n    const validItems = orArray(stateProps.dashboardItems).filter(hasShape);\n\n    return {\n        ...dispatchProps,\n        edit: ownProps.edit,\n        isLoading: stateProps.isLoading,\n        dashboardItems: validItems,\n        onItemResize,\n    };\n};\n\nexport default connect(\n    mapStateToProps,\n    mapDispatchToProps,\n    mergeProps\n)(ItemGrid);\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nimport i18n from '@dhis2/d2-i18n';\n\nimport { colors } from '@dhis2/ui-core';\n\nconst styles = {\n    badgeContainer: {\n        margin: '2px',\n        padding: '0 16px',\n        borderRadius: '4px',\n        color: colors.white,\n        backgroundColor: '#212934',\n        height: 36,\n        display: 'flex',\n        alignItems: 'center',\n    },\n    badge: {\n        fontSize: '13px',\n        cursor: 'pointer',\n        whiteSpace: 'nowrap',\n    },\n    badgeRemove: {\n        fontSize: '12px',\n        textDecoration: 'underline',\n        marginLeft: '24px',\n        cursor: 'pointer',\n    },\n};\n\nclass FilterBadge extends Component {\n    onClick = id => () => this.props.onClick(id);\n    onRemove = id => () => this.props.onRemove(id);\n\n    render() {\n        const { data } = this.props;\n\n        return (\n            <div style={styles.badgeContainer}>\n                <span style={styles.badge} onClick={this.onClick(data.id)}>\n                    {`${data.name}: ${\n                        data.values.length > 1\n                            ? i18n.t('{{count}} selected', {\n                                  count: data.values.length,\n                              })\n                            : data.values[0].name\n                    }`}\n                </span>\n                <span\n                    style={styles.badgeRemove}\n                    onClick={this.onRemove(data.id)}\n                >\n                    {i18n.t('Remove')}\n                </span>\n            </div>\n        );\n    }\n}\n\nFilterBadge.propTypes = {\n    data: PropTypes.object.isRequired,\n    onClick: PropTypes.func.isRequired,\n    onRemove: PropTypes.func.isRequired,\n};\n\nFilterBadge.defaultProps = {\n    onClick: Function.prototype,\n    onRemove: Function.prototype,\n};\n\nexport default FilterBadge;\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { createSelector } from 'reselect';\nimport { withStyles } from '@material-ui/core/styles';\n\nimport { sGetDimensions } from '../../reducers/dimensions';\nimport { sGetItemFiltersRoot } from '../../reducers/itemFilters';\nimport { sGetControlBarUserRows } from '../../reducers/controlBar';\nimport { getTopOffset } from '../ControlBar/controlBarDimensions';\nimport { acRemoveItemFilter } from '../../actions/itemFilters';\nimport { acRemoveEditItemFilter } from '../../actions/editItemFilters';\nimport { acSetActiveModalDimension } from '../../actions/activeModalDimension';\n\nimport FilterBadge from './FilterBadge';\n\nconst styles = {\n    bar: {\n        position: 'sticky',\n        zIndex: 7,\n        padding: '8px 0',\n        display: 'flex',\n        justifyContent: 'center',\n        flexWrap: 'wrap',\n    },\n};\n\nexport class FilterBar extends Component {\n    onBadgeRemove = id => {\n        this.props.removeItemFilter(id);\n        this.props.removeEditItemFilter(id);\n    };\n\n    onBadgeClick = id => {\n        this.props.setActiveModalDimension({\n            id,\n            name: this.props.filters.find(item => item.id === id).name,\n        });\n    };\n\n    render() {\n        const { filters, userRows, classes } = this.props;\n        const top = getTopOffset(userRows) + 10;\n\n        return filters.length ? (\n            <div className={classes.bar} style={{ top }}>\n                {filters.map(filter => (\n                    <FilterBadge\n                        key={filter.id}\n                        data={filter}\n                        onClick={this.onBadgeClick}\n                        onRemove={this.onBadgeRemove}\n                    />\n                ))}\n            </div>\n        ) : null;\n    }\n}\n\nFilterBar.propTypes = {\n    filters: PropTypes.array.isRequired,\n    removeEditItemFilter: PropTypes.func.isRequired,\n    removeItemFilter: PropTypes.func.isRequired,\n    classes: PropTypes.object,\n    setActiveModalDimension: PropTypes.func,\n    userRows: PropTypes.number,\n};\n\nFilterBar.defaultProps = {\n    filters: [],\n    removeItemFIlter: Function.prototype,\n    removeEditItemFilter: Function.prototype,\n};\n\n// simplify the filters structure to:\n// [{ id: 'pe', name: 'Period', values: [{ id: 2019: name: '2019' }, {id: 'LAST_MONTH', name: 'Last month' }]}, ...]\nconst filtersSelector = createSelector(\n    [sGetItemFiltersRoot, sGetDimensions],\n    (filters, dimensions) =>\n        Object.keys(filters).reduce((arr, id) => {\n            arr.push({\n                id: id,\n                name: dimensions.find(dimension => dimension.id === id).name,\n                values: filters[id].map(value => ({\n                    id: value.id,\n                    name: value.displayName || value.name,\n                })),\n            });\n\n            return arr;\n        }, [])\n);\n\nconst mapStateToProps = state => ({\n    filters: filtersSelector(state),\n    userRows: sGetControlBarUserRows(state),\n});\n\nexport default connect(\n    mapStateToProps,\n    {\n        setActiveModalDimension: acSetActiveModalDimension,\n        removeItemFilter: acRemoveItemFilter,\n        removeEditItemFilter: acRemoveEditItemFilter,\n    }\n)(withStyles(styles)(FilterBar));\n","import React, { Fragment } from 'react';\nimport PropTypes from 'prop-types';\nimport TitleBar from '../TitleBar/TitleBar';\nimport ItemGrid from '../ItemGrid/ItemGrid';\nimport FilterBar from '../FilterBar/FilterBar';\n\nexport const DashboardContent = props => (\n    <Fragment>\n        <TitleBar edit={props.editMode} />\n        <FilterBar />\n        <ItemGrid edit={props.editMode} />\n    </Fragment>\n);\n\nDashboardContent.propTypes = {\n    editMode: PropTypes.bool,\n};\n\nexport default DashboardContent;\n","import React, { Fragment } from 'react';\nimport { connect } from 'react-redux';\nimport isEmpty from 'lodash/isEmpty';\nimport i18n from '@dhis2/d2-i18n';\nimport PropTypes from 'prop-types';\n\nimport {\n    sGetAllDashboards,\n    sDashboardsIsFetching,\n} from '../../reducers/dashboards';\nimport { sGetSelectedId } from '../../reducers/selected';\nimport DashboardsBar from '../ControlBar/DashboardsBar';\nimport DashboardVerticalOffset from './DashboardVerticalOffset';\nimport DashboardContent from './DashboardContent';\nimport NoContentMessage from '../../widgets/NoContentMessage';\n\nexport const Content = ({ hasDashboardContent, dashboardsIsEmpty }) => {\n    const msg = dashboardsIsEmpty\n        ? i18n.t(\n              'No dashboards found. Use the + button to create a new dashboard.'\n          )\n        : i18n.t('Requested dashboard not found');\n\n    return hasDashboardContent ? (\n        <DashboardContent editMode={false} />\n    ) : (\n        <NoContentMessage text={msg} />\n    );\n};\n\nContent.propTypes = {\n    dashboardsIsEmpty: PropTypes.bool,\n    hasDashboardContent: PropTypes.bool,\n};\n\nexport const ViewDashboard = ({ id, dashboardsIsEmpty, dashboardsLoaded }) => {\n    const hasDashboardContent = id && !dashboardsIsEmpty;\n    const contentNotReady = !dashboardsLoaded || id === null;\n\n    return (\n        <Fragment>\n            <DashboardsBar />\n            <DashboardVerticalOffset />\n            <div className=\"dashboard-wrapper\">\n                {contentNotReady ? null : (\n                    <Content\n                        hasDashboardContent={hasDashboardContent}\n                        dashboardsIsEmpty={dashboardsIsEmpty}\n                    />\n                )}\n            </div>\n        </Fragment>\n    );\n};\n\nViewDashboard.propTypes = {\n    dashboardsIsEmpty: PropTypes.bool,\n    dashboardsLoaded: PropTypes.bool,\n    id: PropTypes.string,\n};\n\nconst mapStateToProps = state => {\n    const dashboards = sGetAllDashboards(state);\n\n    return {\n        id: sGetSelectedId(state),\n        dashboardsIsEmpty: isEmpty(dashboards),\n        dashboardsLoaded: !sDashboardsIsFetching(state),\n    };\n};\n\nexport default connect(mapStateToProps)(ViewDashboard);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport i18n from '@dhis2/d2-i18n';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport { Button } from '@dhis2/ui-core';\n\nexport const ConfirmDeleteDialog = ({\n    dashboardName,\n    onDeleteConfirmed,\n    onContinueEditing,\n    open,\n}) => {\n    const actions = [\n        <Button key=\"cancel\" secondary onClick={onContinueEditing}>\n            {i18n.t('Cancel')}\n        </Button>,\n        <Button key=\"delete\" destructive onClick={onDeleteConfirmed}>\n            {i18n.t('Delete')}\n        </Button>,\n    ];\n\n    return (\n        <Dialog open={open} onClose={onContinueEditing}>\n            <DialogTitle style={{ fontSize: '1.25rem', fontWeight: '450' }}>\n                {i18n.t('Delete dashboard')}\n            </DialogTitle>\n            <DialogContent>\n                <DialogContentText style={{ fontSize: '0.875rem' }}>\n                    {i18n.t(\n                        'Deleting dashboard \"{{ dashboardName }}\" will remove it for all users. This action cannot be undone. Are you sure you want to permanently delete this dashboard?',\n                        { dashboardName }\n                    )}\n                </DialogContentText>\n            </DialogContent>\n            <DialogActions>{actions}</DialogActions>\n        </Dialog>\n    );\n};\n\nConfirmDeleteDialog.propTypes = {\n    dashboardName: PropTypes.string,\n    open: PropTypes.bool,\n    onContinueEditing: PropTypes.func,\n    onDeleteConfirmed: PropTypes.func,\n};\n\nexport default ConfirmDeleteDialog;\n","import React, { Component, Fragment } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { Redirect } from 'react-router-dom';\nimport i18n from '@dhis2/d2-i18n';\nimport ControlBar from './ControlBar';\nimport TranslationDialog from '@dhis2/d2-ui-translation-dialog';\nimport { Button } from '@dhis2/ui-core';\n\nimport ConfirmDeleteDialog from './ConfirmDeleteDialog';\nimport {\n    tSaveDashboard,\n    acClearEditDashboard,\n} from '../../actions/editDashboard';\nimport {\n    tDeleteDashboard,\n    acSetDashboardDisplayName,\n} from '../../actions/dashboards';\nimport {\n    sGetEditDashboardRoot,\n    sGetIsNewDashboard,\n} from '../../reducers/editDashboard';\nimport {\n    CONTROL_BAR_ROW_HEIGHT,\n    MIN_ROW_COUNT,\n    getControlBarHeight,\n} from './controlBarDimensions';\nimport { apiFetchDashboard } from '../../api/dashboards';\n\nimport classes from './styles/DashboardsBar.module.css';\n\nconst buttonBarStyle = {\n    height: CONTROL_BAR_ROW_HEIGHT,\n    paddingTop: '15px',\n    marginLeft: '15px',\n    marginRight: '15px',\n};\n\nexport class EditBar extends Component {\n    state = {\n        translationDialogIsOpen: false,\n        dashboardModel: undefined,\n        confirmDeleteDialogOpen: false,\n        redirectUrl: undefined,\n    };\n\n    onConfirmDelete = () => {\n        this.setState({ confirmDeleteDialogOpen: true });\n    };\n\n    onSave = () => {\n        this.props.onSave().then(newId => {\n            this.setState({ redirectUrl: `/${newId}` });\n        });\n    };\n\n    onDiscard = () => {\n        this.props.onDiscardChanges();\n        const redirectUrl = this.props.dashboardId\n            ? `/${this.props.dashboardId}`\n            : '/';\n        this.setState({ redirectUrl });\n    };\n\n    onContinueEditing = () => {\n        this.setState({ confirmDeleteDialogOpen: false });\n    };\n\n    onDeleteConfirmed = () => {\n        this.setState({ confirmDeleteDialogOpen: false });\n        this.props.onDelete(this.props.dashboardId).then(() => {\n            this.setState({ redirectUrl: '/' });\n        });\n    };\n\n    onTranslationsSaved = async translations => {\n        if (translations && translations.length) {\n            const dbLocale = await this.context.d2.currentUser.userSettings.get(\n                'keyDbLocale'\n            );\n\n            const translation = translations.find(\n                t => t.locale === dbLocale && t.property === 'NAME'\n            );\n\n            if (translation && translation.value) {\n                this.props.onTranslate(\n                    this.props.dashboardId,\n                    translation.value\n                );\n            }\n        }\n    };\n\n    fetchDashboardModel = () => {\n        if (this.props.dashboardId && !this.state.dashboardModel) {\n            apiFetchDashboard(this.props.dashboardId).then(dashboardModel =>\n                this.setState({ dashboardModel })\n            );\n        }\n    };\n\n    componentDidMount() {\n        this.fetchDashboardModel();\n    }\n\n    componentDidUpdate() {\n        this.fetchDashboardModel();\n    }\n\n    toggleTranslationDialog = () => {\n        this.setState({\n            translationDialogIsOpen: !this.state.translationDialogIsOpen,\n        });\n    };\n\n    confirmDeleteDialog = () =>\n        this.props.deleteAccess && this.props.dashboardId ? (\n            <ConfirmDeleteDialog\n                dashboardName={this.props.dashboardName}\n                onDeleteConfirmed={this.onDeleteConfirmed}\n                onContinueEditing={this.onContinueEditing}\n                open={this.state.confirmDeleteDialogOpen}\n            />\n        ) : null;\n\n    translationDialog = () =>\n        this.state.dashboardModel && this.state.dashboardModel.id ? (\n            <TranslationDialog\n                className=\"translation-dialog\"\n                d2={this.context.d2}\n                open={this.state.translationDialogIsOpen}\n                onRequestClose={this.toggleTranslationDialog}\n                objectToTranslate={this.state.dashboardModel}\n                fieldsToTranslate={['name', 'description']}\n                // TODO handle messages in snackbar\n                onTranslationSaved={this.onTranslationsSaved}\n                onTranslationError={err =>\n                    console.log('translation update error', err)\n                }\n            />\n        ) : null;\n\n    render() {\n        if (this.state.redirectUrl) {\n            return <Redirect to={this.state.redirectUrl} />;\n        }\n\n        const { dashboardId, deleteAccess, updateAccess } = this.props;\n        const controlBarHeight = getControlBarHeight(MIN_ROW_COUNT);\n\n        const discardBtnText = updateAccess\n            ? i18n.t('Exit without saving')\n            : i18n.t('Go to dashboards');\n\n        return (\n            <Fragment>\n                <ControlBar height={controlBarHeight} editMode={true}>\n                    <div style={buttonBarStyle}>\n                        {updateAccess ? (\n                            <div className={classes.leftControls}>\n                                <span style={{ marginRight: '15px' }}>\n                                    <Button primary onClick={this.onSave}>\n                                        {i18n.t('Save changes')}\n                                    </Button>\n                                </span>\n\n                                {dashboardId ? (\n                                    <span style={{ marginRight: '15px' }}>\n                                        <Button\n                                            onClick={\n                                                this.toggleTranslationDialog\n                                            }\n                                        >\n                                            {i18n.t('Translate')}\n                                        </Button>\n                                    </span>\n                                ) : null}\n                                {dashboardId && deleteAccess ? (\n                                    <Button onClick={this.onConfirmDelete}>\n                                        {i18n.t('Delete')}\n                                    </Button>\n                                ) : null}\n                            </div>\n                        ) : null}\n\n                        <div className={classes.rightControls}>\n                            <Button secondary onClick={this.onDiscard}>\n                                {discardBtnText}\n                            </Button>\n                        </div>\n                    </div>\n                </ControlBar>\n                {this.translationDialog()}\n                {this.confirmDeleteDialog()}\n            </Fragment>\n        );\n    }\n}\n\nEditBar.propTypes = {\n    dashboardId: PropTypes.string,\n    dashboardName: PropTypes.string,\n    deleteAccess: PropTypes.bool,\n    updateAccess: PropTypes.bool,\n    onDelete: PropTypes.func,\n    onDiscardChanges: PropTypes.func,\n    onSave: PropTypes.func,\n    onTranslate: PropTypes.func,\n};\n\nEditBar.contextTypes = {\n    d2: PropTypes.object,\n};\n\nconst mapStateToProps = state => {\n    const dashboard = sGetEditDashboardRoot(state);\n\n    let deleteAccess;\n    let updateAccess;\n    if (sGetIsNewDashboard(state)) {\n        deleteAccess = true;\n        updateAccess = true;\n    } else {\n        updateAccess = dashboard.access ? dashboard.access.update : false;\n        deleteAccess = dashboard.access ? dashboard.access.delete : false;\n    }\n\n    return {\n        dashboardId: dashboard.id,\n        dashboardName: dashboard.name,\n        deleteAccess,\n        updateAccess,\n    };\n};\n\nconst mapDispatchToProps = dispatch => ({\n    onSave: () => dispatch(tSaveDashboard()).then(id => id),\n    onDelete: id => dispatch(tDeleteDashboard(id)),\n    onDiscardChanges: () => dispatch(acClearEditDashboard()),\n    onTranslate: (id, value) => dispatch(acSetDashboardDisplayName(id, value)),\n});\n\nexport default connect(\n    mapStateToProps,\n    mapDispatchToProps\n)(EditBar);\n","import React, { Fragment, Component } from 'react';\nimport { connect } from 'react-redux';\nimport i18n from '@dhis2/d2-i18n';\nimport PropTypes from 'prop-types';\n\nimport { acSetEditDashboard } from '../../actions/editDashboard';\nimport { sGetSelectedId } from '../../reducers/selected';\nimport {\n    sGetDashboardById,\n    sGetDashboardItems,\n    sDashboardsIsFetching,\n} from '../../reducers/dashboards';\nimport DashboardVerticalOffset from './DashboardVerticalOffset';\nimport DashboardContent from './DashboardContent';\nimport EditBar from '../ControlBar/EditBar';\nimport NoContentMessage from '../../widgets/NoContentMessage';\n\nexport const Content = ({ updateAccess }) => {\n    return updateAccess ? (\n        <DashboardContent editMode={true} />\n    ) : (\n        <NoContentMessage text={i18n.t('No access')} />\n    );\n};\n\nContent.propTypes = {\n    updateAccess: PropTypes.bool,\n};\nexport class EditDashboard extends Component {\n    state = {\n        initialized: false,\n    };\n\n    initEditDashboard = () => {\n        if (this.props.dashboard) {\n            this.setState({ initialized: true });\n            this.props.setEditDashboard(this.props.dashboard, this.props.items);\n        }\n    };\n\n    componentDidMount() {\n        this.initEditDashboard();\n    }\n\n    componentDidUpdate() {\n        if (!this.state.initialized) {\n            this.initEditDashboard();\n        }\n    }\n\n    getDashboardContent = () => {\n        const contentNotReady =\n            !this.props.dashboardsLoaded || this.props.id === null;\n\n        return (\n            <div className=\"dashboard-wrapper\">\n                {contentNotReady ? null : (\n                    <Content updateAccess={this.props.updateAccess} />\n                )}\n            </div>\n        );\n    };\n\n    render() {\n        return (\n            <Fragment>\n                <EditBar />\n                <DashboardVerticalOffset editMode={true} />\n                {this.getDashboardContent()}\n            </Fragment>\n        );\n    }\n}\n\nEditDashboard.propTypes = {\n    dashboard: PropTypes.object,\n    dashboardsLoaded: PropTypes.bool,\n    id: PropTypes.string,\n    items: PropTypes.array,\n    setEditDashboard: PropTypes.func,\n    updateAccess: PropTypes.bool,\n};\n\nconst mapStateToProps = state => {\n    const id = sGetSelectedId(state);\n    const dashboard = id ? sGetDashboardById(state, id) : null;\n\n    const updateAccess =\n        dashboard && dashboard.access ? dashboard.access.update : false;\n\n    return {\n        dashboard,\n        id,\n        updateAccess,\n        items: sGetDashboardItems(state),\n        dashboardsLoaded: !sDashboardsIsFetching(state),\n    };\n};\n\nexport default connect(\n    mapStateToProps,\n    {\n        setEditDashboard: acSetEditDashboard,\n    }\n)(EditDashboard);\n","import React, { Component, Fragment } from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\n\nimport { acSetEditNewDashboard } from '../../actions/editDashboard';\nimport DashboardVerticalOffset from './DashboardVerticalOffset';\nimport EditBar from '../ControlBar/EditBar';\nimport DashboardContent from './DashboardContent';\n\nclass NewDashboard extends Component {\n    componentDidMount() {\n        this.props.setNewDashboard();\n    }\n\n    render() {\n        return (\n            <Fragment>\n                <EditBar />\n                <DashboardVerticalOffset editMode={true} />\n                <div className=\"dashboard-wrapper\">\n                    <DashboardContent editMode={true} />\n                </div>\n            </Fragment>\n        );\n    }\n}\n\nNewDashboard.propTypes = {\n    setNewDashboard: PropTypes.func,\n};\n\nexport default connect(\n    null,\n    {\n        setNewDashboard: acSetEditNewDashboard,\n    }\n)(NewDashboard);\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\n\nimport { tSelectDashboard } from '../../actions/dashboards';\nimport { sDashboardsIsFetching } from '../../reducers/dashboards';\nimport { EDIT, NEW } from './dashboardModes';\nimport ViewDashboard from './ViewDashboard';\nimport EditDashboard from './EditDashboard';\nimport NewDashboard from './NewDashboard';\n\nclass Dashboard extends Component {\n    setDashboard = () => {\n        if (this.props.dashboardsLoaded) {\n            const id = this.props.match.params.dashboardId || null;\n\n            this.props.selectDashboard(id);\n\n            this.scrollToTop();\n        }\n    };\n\n    scrollToTop = () => {\n        window.scrollTo(0, 0);\n    };\n\n    componentDidMount() {\n        this.setDashboard();\n    }\n\n    componentDidUpdate() {\n        this.setDashboard();\n    }\n\n    render() {\n        switch (this.props.mode) {\n            case EDIT:\n                return <EditDashboard />;\n            case NEW:\n                return <NewDashboard />;\n            default:\n                return <ViewDashboard />;\n        }\n    }\n}\n\nDashboard.propTypes = {\n    dashboardsLoaded: PropTypes.bool,\n    match: PropTypes.object,\n    mode: PropTypes.string,\n    selectDashboard: PropTypes.func,\n};\n\nconst mapStateToProps = state => {\n    return { dashboardsLoaded: !sDashboardsIsFetching(state) };\n};\n\nexport default connect(\n    mapStateToProps,\n    {\n        selectDashboard: tSelectDashboard,\n    }\n)(Dashboard);\n","export const EDIT = 'edit';\nexport const NEW = 'new';\nexport const VIEW = 'view';\n","import React, { Component } from 'react';\nimport { HashRouter as Router, Route, Switch } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport i18n from '@dhis2/d2-i18n';\nimport { HeaderBar } from '@dhis2/ui-widgets';\n\nimport { EDIT, VIEW, NEW } from './Dashboard/dashboardModes';\nimport { acReceivedUser } from '../actions/user';\nimport { tFetchDashboards } from '../actions/dashboards';\nimport { tSetControlBarRows } from '../actions/controlBar';\nimport { tSetDimensions } from '../actions/dimensions';\nimport Dashboard from './Dashboard/Dashboard';\nimport SnackbarMessage from './SnackbarMessage/SnackbarMessage';\n\nimport 'typeface-roboto';\nimport './App.css';\n\nexport class App extends Component {\n    componentDidMount() {\n        this.props.setCurrentUser(this.props.d2.currentUser);\n        this.props.fetchDashboards();\n        this.props.setControlBarRows();\n        this.props.setDimensions(this.props.d2);\n    }\n\n    getChildContext() {\n        return { baseUrl: this.props.baseUrl, i18n, d2: this.props.d2 };\n    }\n\n    render() {\n        return (\n            <div className=\"app-wrapper\">\n                <div className=\"dashboard-header-bar\">\n                    <HeaderBar appName={i18n.t('Dashboard')} />\n                </div>\n                <Router>\n                    <Switch>\n                        <Route\n                            exact\n                            path=\"/\"\n                            render={props => (\n                                <Dashboard {...props} mode={VIEW} />\n                            )}\n                        />\n                        <Route\n                            exact\n                            path=\"/new\"\n                            render={props => (\n                                <Dashboard {...props} mode={NEW} />\n                            )}\n                        />\n                        <Route\n                            exact\n                            path=\"/:dashboardId\"\n                            render={props => (\n                                <Dashboard {...props} mode={VIEW} />\n                            )}\n                        />\n                        <Route\n                            exact\n                            path=\"/:dashboardId/edit\"\n                            render={props => (\n                                <Dashboard {...props} mode={EDIT} />\n                            )}\n                        />\n                    </Switch>\n                </Router>\n                <SnackbarMessage />\n            </div>\n        );\n    }\n}\n\nApp.propTypes = {\n    fetchDashboards: PropTypes.func.isRequired,\n    setControlBarRows: PropTypes.func.isRequired,\n    setCurrentUser: PropTypes.func.isRequired,\n    setDimensions: PropTypes.func.isRequired,\n    baseUrl: PropTypes.string,\n    d2: PropTypes.object,\n};\n\nApp.childContextTypes = {\n    baseUrl: PropTypes.string,\n    i18n: PropTypes.object,\n    d2: PropTypes.object,\n};\n\nconst mapDispatchToProps = dispatch => {\n    return {\n        setCurrentUser: currentUser => dispatch(acReceivedUser(currentUser)),\n        fetchDashboards: () => dispatch(tFetchDashboards()),\n        setControlBarRows: () => dispatch(tSetControlBarRows()),\n        setDimensions: d2 => dispatch(tSetDimensions(d2)),\n    };\n};\n\nexport default connect(\n    null,\n    mapDispatchToProps\n)(App);\n","import { RECEIVED_USER } from '../reducers/user';\n\nexport const acReceivedUser = value => ({\n    type: RECEIVED_USER,\n    value,\n});\n","//------------------------------------------------------------------------------\n// <auto-generated>\n// This code was generated by d2-i18n-generate.\n//\n// Changes to this file may cause incorrect behavior and will be lost if\n// the code is regenerated.\n// </auto-generated>\n//------------------------------------------------------------------------------\nimport i18n from '@dhis2/d2-i18n';\nimport moment from 'moment';\nimport 'moment/locale/ar';\nimport 'moment/locale/es';\nimport 'moment/locale/fr';\nimport 'moment/locale/lo';\nimport 'moment/locale/pt';\nimport 'moment/locale/ru';\nimport 'moment/locale/sv';\nimport 'moment/locale/tg';\nimport 'moment/locale/uk';\nimport 'moment/locale/ur';\nimport 'moment/locale/vi';\nimport 'moment/locale/zh-cn';\n\nimport arTranslations from './ar/translations.json';\nimport daTranslations from './da/translations.json';\nimport enTranslations from './en/translations.json';\nimport esTranslations from './es/translations.json';\nimport frTranslations from './fr/translations.json';\nimport idTranslations from './id/translations.json';\nimport kmTranslations from './km/translations.json';\nimport loTranslations from './lo/translations.json';\nimport myTranslations from './my/translations.json';\nimport prsTranslations from './prs/translations.json';\nimport psTranslations from './ps/translations.json';\nimport ptTranslations from './pt/translations.json';\nimport pt_BRTranslations from './pt_BR/translations.json';\nimport ruTranslations from './ru/translations.json';\nimport svTranslations from './sv/translations.json';\nimport tetTranslations from './tet/translations.json';\nimport tgTranslations from './tg/translations.json';\nimport ukTranslations from './uk/translations.json';\nimport urTranslations from './ur/translations.json';\nimport viTranslations from './vi/translations.json';\nimport zhTranslations from './zh/translations.json';\nimport zh_CNTranslations from './zh_CN/translations.json';\n\nconst namespace = 'dashboards-app';\nmoment.locale('en');\n\ni18n.addResources('ar', namespace, arTranslations);\ni18n.addResources('da', namespace, daTranslations);\ni18n.addResources('en', namespace, enTranslations);\ni18n.addResources('es', namespace, esTranslations);\ni18n.addResources('fr', namespace, frTranslations);\ni18n.addResources('id', namespace, idTranslations);\ni18n.addResources('km', namespace, kmTranslations);\ni18n.addResources('lo', namespace, loTranslations);\ni18n.addResources('my', namespace, myTranslations);\ni18n.addResources('prs', namespace, prsTranslations);\ni18n.addResources('ps', namespace, psTranslations);\ni18n.addResources('pt', namespace, ptTranslations);\ni18n.addResources('pt_BR', namespace, pt_BRTranslations);\ni18n.addResources('ru', namespace, ruTranslations);\ni18n.addResources('sv', namespace, svTranslations);\ni18n.addResources('tet', namespace, tetTranslations);\ni18n.addResources('tg', namespace, tgTranslations);\ni18n.addResources('uk', namespace, ukTranslations);\ni18n.addResources('ur', namespace, urTranslations);\ni18n.addResources('vi', namespace, viTranslations);\ni18n.addResources('zh', namespace, zhTranslations);\ni18n.addResources('zh_CN', namespace, zh_CNTranslations);\n\ni18n.setDefaultNamespace(namespace);\ni18n.changeLanguage('en');\n\nexport default i18n;\n","/** @module reducers/selected */\nimport { validateReducer } from '../modules/util';\n\nexport const SET_STYLE = 'SET_STYLE';\n\nexport const DEFAULT_STATE_STYLE = 'LIST';\n\n/**\n * Reducer functions that computes and returns the new state based on the given action\n * @function\n * @param {Object} state The current state\n * @param {Object} action The action to be evaluated\n */\nconst style = (state = DEFAULT_STATE_STYLE, action) => {\n    switch (action.type) {\n        case SET_STYLE:\n            return validateReducer(action.value, DEFAULT_STATE_STYLE);\n        default:\n            return state;\n    }\n};\n\nexport default style;\n\n/**\n * Selectors that point to specific props in the state object\n * @function\n * @param {Object} state\n * @returns {Object}\n */\nexport const sGetStyleRoot = state => state.style;\n","import { combineReducers } from 'redux';\nimport arraySort from 'd2-utilizr/lib/arraySort';\n\nimport dashboards, { sGetDashboardsRoot } from './dashboards';\nimport selected from './selected';\nimport dashboardsFilter, {\n    ownerData,\n    sGetFilterName,\n    sGetFilterOrder,\n    sGetFilterOwner,\n} from './dashboardsFilter';\nimport controlBar from './controlBar';\nimport visualizations from './visualizations';\nimport editDashboard from './editDashboard';\nimport messages from './messages';\nimport user from './user';\nimport snackbar from './snackbar';\nimport itemFilters from './itemFilters';\nimport editItemFilters from './editItemFilters';\nimport style from './style';\nimport dimensions from './dimensions';\nimport settings from './settings';\nimport activeModalDimension from './activeModalDimension';\n\nconst USER = 'system';\n\n// Reducers\n\nexport default combineReducers({\n    dashboards,\n    selected,\n    dashboardsFilter,\n    controlBar,\n    visualizations,\n    messages,\n    user,\n    editDashboard,\n    itemFilters,\n    editItemFilters,\n    style,\n    snackbar,\n    dimensions,\n    settings,\n    activeModalDimension,\n});\n\n// Map constants to data\nconst mapConstToData = {\n    NAME: 'name',\n    ITEMS: 'numberOfItems',\n    CREATED: 'created',\n    OWNER: 'owner',\n};\n\n// Selectors\n\n// Filter dashboards by name\nexport const sFilterDashboardsByName = (dashboards, filter) =>\n    dashboards.filter(d =>\n        d.displayName.toLowerCase().includes(filter.toLowerCase())\n    );\n\n// Filter dashboards by owner, TODO FIXME\nexport const sFilterDashboardsByOwner = (dashboards, filter) => {\n    const ME = ownerData[1]; // TODO\n    const OTHERS = ownerData[2]; // TODO\n\n    switch (filter) {\n        case ME:\n            return dashboards.filter(d => d.owner === USER);\n        case OTHERS:\n            return dashboards.filter(d => d.owner !== USER);\n        default:\n            return dashboards;\n    }\n};\n\n// Filter dashboards by order\nexport const sFilterDashboardsByOrder = (dashboards, filter) => {\n    const filterValues = filter.split(':');\n\n    const key = filterValues[0];\n    const direction = filterValues[1];\n\n    return arraySort(dashboards, direction, mapConstToData[key]);\n};\n\n// Selectors dependency level 2\n\n// Get filtered dashboards\nexport const sGetFilteredDashboards = state => {\n    const dashboards = sGetDashboardsRoot(state);\n\n    const nameFilter = sGetFilterName(state);\n    const ownerFilter = sGetFilterOwner(state);\n    const orderFilter = sGetFilterOrder(state);\n\n    return sFilterDashboardsByOrder(\n        sFilterDashboardsByName(\n            sFilterDashboardsByOwner(dashboards, ownerFilter),\n            nameFilter\n        ),\n        orderFilter\n    );\n};\n","import { createStore, applyMiddleware, compose } from 'redux';\nimport { createLogger } from 'redux-logger';\nimport thunk from 'redux-thunk';\nimport reducer from './reducers';\n\nconst configureStore = () => {\n    const middleware = [thunk];\n\n    // Enable Redux devtools if extension is installed instead of redux-logger\n    const composeEnhancers =\n        window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\n    if (\n        !window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ &&\n        process.env.NODE_ENV !== 'production'\n    ) {\n        middleware.push(createLogger());\n    }\n\n    return createStore(\n        reducer,\n        composeEnhancers(applyMiddleware(...middleware))\n    );\n};\n\nexport default configureStore;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport { MuiThemeProvider, createMuiTheme } from '@material-ui/core/styles';\nimport { init as d2Init, config, getManifest, getUserSettings } from 'd2';\nimport dhis2theme from '@dhis2/d2-ui-core/theme/mui3.theme';\n\nimport { Provider as RuntimeProvider } from '@dhis2/app-runtime';\nimport { CssReset } from '@dhis2/ui-core';\n\nimport App from './components/App';\nimport './index.css';\nimport i18n from './locales';\nimport configureStore from './configureStore';\n\nconst muiTheme = () => createMuiTheme(dhis2theme);\n\nconst configI18n = userSettings => {\n    const uiLocale = userSettings.keyUiLocale;\n\n    if (uiLocale && uiLocale !== 'en') {\n        config.i18n.sources.add(`./i18n/i18n_module_${uiLocale}.properties`);\n    }\n\n    config.i18n.sources.add('./i18n/i18n_module_en.properties');\n    i18n.changeLanguage(uiLocale);\n};\n\nconst init = async () => {\n    const manifest = await getManifest('./manifest.webapp');\n\n    // log app info\n    console.info(\n        `Dashboards app, v${manifest.version}, ${\n            manifest.manifest_generated_at\n        }`\n    );\n\n    const isProd = process.env.NODE_ENV === 'production';\n\n    if (\n        !isProd &&\n        (!process.env.REACT_APP_DHIS2_BASE_URL ||\n            !process.env.REACT_APP_DHIS2_AUTHORIZATION)\n    ) {\n        throw new Error(\n            'Missing env variables REACT_APP_DHIS2_BASE_URL and REACT_APP_DHIS2_AUTHORIZATION'\n        );\n    }\n\n    // api config\n    const baseUrl = isProd\n        ? manifest.activities.dhis.href\n        : process.env.REACT_APP_DHIS2_BASE_URL;\n    const authorization = process.env.REACT_APP_DHIS2_AUTHORIZATION;\n\n    config.baseUrl = `${baseUrl}/api/${manifest.dhis2.apiVersion}`;\n    config.headers = isProd ? null : { Authorization: authorization };\n    config.schemas = [\n        'chart',\n        'map',\n        'report',\n        'reportTable',\n        'eventChart',\n        'eventReport',\n        'dashboard',\n        'organisationUnit',\n        'userGroup',\n    ];\n\n    getUserSettings()\n        .then(configI18n)\n        .then(() => d2Init(config))\n        .then(initializedD2 => {\n            ReactDOM.render(\n                <RuntimeProvider\n                    config={{\n                        baseUrl: baseUrl,\n                        apiVersion: manifest.dhis2.apiVersion,\n                    }}\n                >\n                    <CssReset />\n                    <Provider store={configureStore()}>\n                        <MuiThemeProvider theme={muiTheme()}>\n                            <App baseUrl={baseUrl} d2={initializedD2} />\n                        </MuiThemeProvider>\n                    </Provider>\n                </RuntimeProvider>,\n                document.getElementById('root')\n            );\n        });\n};\n\ninit();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"ControlBar_root__3LaTt\",\"content\":\"ControlBar_content__1r98-\",\"draghandle\":\"ControlBar_draghandle__1VWa0\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"ClearButton_button__2yjcV\",\"icon\":\"ClearButton_icon__1fqj8\"};","import isObject from 'lodash/isObject';\nimport { VIS_TYPE_COLUMN, VIS_TYPE_PIVOT_TABLE } from '@dhis2/analytics';\nimport { apiFetchFavorite, getMapFields } from '../../../api/metadata';\nimport {\n    REPORT_TABLE,\n    CHART,\n    MAP,\n    EVENT_REPORT,\n    EVENT_CHART,\n    itemTypeMap,\n} from '../../../modules/itemTypes';\nimport { getBaseUrl, getWithoutId } from '../../../modules/util';\nimport { getGridItemDomId } from '../../ItemGrid/gridUtil';\n\n//external plugins\nconst itemTypeToExternalPlugin = {\n    [MAP]: 'mapPlugin',\n    [EVENT_REPORT]: 'eventReportPlugin',\n    [EVENT_CHART]: 'eventChartPlugin',\n};\nconst hasIntegratedPlugin = type => [CHART, REPORT_TABLE].includes(type);\n\nconst getPlugin = type => {\n    if (hasIntegratedPlugin(type)) {\n        return true;\n    }\n    const pluginName = itemTypeToExternalPlugin[type];\n\n    return global[pluginName];\n};\n\nexport const THEMATIC_LAYER = 'thematic';\n\nexport const pluginIsAvailable = (item = {}, visualization = {}) => {\n    const type = visualization.activeType || item.type;\n\n    return !!getPlugin(type);\n};\n\nexport const extractFavorite = item => {\n    if (!isObject(item)) {\n        return null;\n    }\n\n    const propName = itemTypeMap[item.type].propName;\n\n    return (\n        item[propName] ||\n        (item.reportTable ||\n            item.chart ||\n            item.map ||\n            item.eventReport ||\n            item.eventChart ||\n            {})\n    );\n};\n\nexport const extractMapView = map =>\n    map.mapViews && map.mapViews.find(mv => mv.layer.includes(THEMATIC_LAYER));\n\nexport const loadPlugin = (plugin, config, credentials) => {\n    if (!(plugin && plugin.load)) {\n        return;\n    }\n\n    plugin.url = credentials.baseUrl;\n    plugin.loadingIndicator = true;\n    plugin.dashboard = true;\n    if (credentials.auth) {\n        plugin.auth = credentials.auth;\n    }\n    plugin.load(config);\n};\n\nexport const getId = item => extractFavorite(item).id;\nexport const getName = item => extractFavorite(item).name;\nexport const getDescription = item => extractFavorite(item).description;\nexport const getLink = (item, d2) => {\n    const baseUrl = getBaseUrl(d2);\n    const appUrl = itemTypeMap[item.type].appUrl(getId(item));\n\n    return `${baseUrl}/${appUrl}`;\n};\n\nexport const load = async (\n    item,\n    visualization,\n    { credentials, activeType }\n) => {\n    const config = {\n        ...visualization,\n        el: getGridItemDomId(item.id),\n    };\n\n    const type = activeType || item.type;\n    const plugin = getPlugin(type);\n\n    loadPlugin(plugin, config, credentials);\n};\n\nexport const fetch = async item => {\n    const fetchedFavorite = await apiFetchFavorite(getId(item), item.type, {\n        fields: item.type === MAP ? getMapFields() : null,\n    });\n\n    return fetchedFavorite;\n};\n\nexport const resize = item => {\n    const plugin = getPlugin(item.type);\n\n    if (plugin && plugin.resize) {\n        plugin.resize(getGridItemDomId(item.id));\n    }\n};\n\nexport const unmount = (item, activeType) => {\n    const plugin = getPlugin(activeType);\n\n    if (plugin && plugin.unmount) {\n        plugin.unmount(getGridItemDomId(item.id));\n    }\n};\n\nexport const getVisualizationConfig = (\n    visualization,\n    originalType,\n    activeType\n) => {\n    if (originalType === MAP && originalType !== activeType) {\n        const extractedMapView = extractMapView(visualization);\n\n        if (extractedMapView === undefined) {\n            return null;\n        }\n\n        return getWithoutId({\n            ...visualization,\n            ...extractedMapView,\n            mapViews: undefined,\n            type: activeType === CHART ? VIS_TYPE_COLUMN : VIS_TYPE_PIVOT_TABLE,\n        });\n    } else if (originalType === REPORT_TABLE && activeType === CHART) {\n        return getWithoutId({ ...visualization, type: VIS_TYPE_COLUMN });\n    } else if (originalType === CHART && activeType === REPORT_TABLE) {\n        return getWithoutId({\n            ...visualization,\n            type: VIS_TYPE_PIVOT_TABLE,\n        });\n    }\n\n    return getWithoutId(visualization);\n};\n","import isFunction from 'd2-utilizr/lib/isFunction';\n\nimport { orObject } from '../../modules/util';\n\n// Dimensions for the react-grid-layout\n\nexport const GRID_COMPACT_TYPE = 'vertical'; // vertical | horizonal | null\nexport const GRID_ROW_HEIGHT = 10;\nconst GRID_COLUMN_WIDTH_PX = 20;\nconst GRID_LAYOUT = 'FLEXIBLE'; // FIXED | FLEXIBLE\nexport const MARGIN = [10, 10];\n\nexport const NEW_ITEM_SHAPE = { x: 0, y: 0, w: 20, h: 29 };\nexport const ITEM_MIN_HEIGHT = 4;\n\n// Dimensions for getShape\n\nconst NUMBER_OF_ITEM_COLS = 2;\nconst GRID_COLUMNS = 60;\n\nexport const getGridColumns = () => {\n    switch (GRID_LAYOUT) {\n        case 'FLEXIBLE':\n            return GRID_COLUMNS;\n        case 'FIXED':\n            return Math.floor((window.innerWidth - 20) / GRID_COLUMN_WIDTH_PX);\n        default:\n            return GRID_COLUMNS;\n    }\n};\n\n// isNonNegativeInteger\n\nconst isNonNegativeInteger = x => Number.isInteger(x) && x >= 0;\n\n// Does the item have all the shape properties?\n\nexport const hasShape = item =>\n    isNonNegativeInteger(item.x) &&\n    isNonNegativeInteger(item.y) &&\n    isNonNegativeInteger(item.w) &&\n    isNonNegativeInteger(item.h);\n\n// returns a rectangular grid block dimensioned with x, y, w, h in grid units.\n// based on a grid with 3 items across\nexport const getShape = i => {\n    if (!isNonNegativeInteger(i)) {\n        throw new Error('Invalid grid block number');\n    }\n\n    const col = i % NUMBER_OF_ITEM_COLS;\n    const row = Math.floor(i / NUMBER_OF_ITEM_COLS);\n    const itemWidth = Math.floor((GRID_COLUMNS - 1) / NUMBER_OF_ITEM_COLS);\n    const itemHeight = GRID_ROW_HEIGHT * 2;\n\n    return {\n        x: col * itemWidth,\n        y: row * itemHeight,\n        w: itemWidth,\n        h: itemHeight,\n    };\n};\n\n/**\n * Calculates the grid item's original height in pixels based\n * on the height in grid units. This calculation\n * is copied directly from react-grid-layout GridItem.js (calcPosition)\n *\n * @param {Object} item item containing shape (x, y, w, h)\n */\nconst getOriginalHeight = item => {\n    const originalHeight = Math.round(\n        GRID_ROW_HEIGHT * item.h + Math.max(0, item.h - 1) * MARGIN[1]\n    );\n\n    return { originalHeight };\n};\n\n/**\n * Returns an array of items containing the x, y, w, h dimensions\n * and the item's originalheight in pixels\n * @function\n * @param {Array} items\n * @returns {Array}\n */\n\nexport const withShape = items =>\n    items.map((item, index) => {\n        const itemWithShape = hasShape(item)\n            ? item\n            : Object.assign({}, item, getShape(index));\n\n        return Object.assign(\n            {},\n            itemWithShape,\n            getOriginalHeight(itemWithShape)\n        );\n    });\n\nexport const getGridItemDomId = id => `item-${id}`;\n\nexport function onItemResize(id) {\n    const el = orObject(document.querySelector(`#${getGridItemDomId(id)}`));\n    if (isFunction(el.setViewportSize))\n        setTimeout(\n            () => el.setViewportSize(el.clientWidth - 5, el.clientHeight - 5),\n            10\n        );\n}\n","import i18n from '@dhis2/d2-i18n';\nimport TableIcon from '@material-ui/icons/ViewList';\nimport ChartIcon from '@material-ui/icons/InsertChart';\nimport MapIcon from '@material-ui/icons/Public';\nimport ExtensionIcon from '@material-ui/icons/Extension';\nimport DescriptionIcon from '@material-ui/icons/Description';\nimport PersonIcon from '@material-ui/icons/Person';\nimport FontDownloadIcon from '@material-ui/icons/FontDownload';\nimport EmailIcon from '@material-ui/icons/Email';\nimport CropFreeIcon from '@material-ui/icons/CropFree';\nimport NotInterestedIcon from '@material-ui/icons/NotInterested';\n\nimport { getBaseUrl } from './util';\n\n// Item types\nexport const VISUALIZATION = 'VISUALIZATION';\nexport const REPORT_TABLE = 'REPORT_TABLE';\nexport const CHART = 'CHART';\nexport const MAP = 'MAP';\nexport const EVENT_REPORT = 'EVENT_REPORT';\nexport const EVENT_CHART = 'EVENT_CHART';\nexport const APP = 'APP';\nexport const REPORTS = 'REPORTS';\nexport const RESOURCES = 'RESOURCES';\nexport const USERS = 'USERS';\nexport const MESSAGES = 'MESSAGES';\nexport const TEXT = 'TEXT';\nexport const SPACER = 'SPACER';\n\nconst DOMAIN_TYPE_AGGREGATE = 'AGGREGATE';\nconst DOMAIN_TYPE_TRACKER = 'TRACKER';\n\n// Dashboard helpers\nexport const spacerContent = 'SPACER_ITEM_FOR_DASHBOARD_LAYOUT_CONVENIENCE';\nexport const emptyTextItemContent = 'TEXT_ITEM_WITH_NO_CONTENT';\nexport const isSpacerType = item =>\n    item.type === TEXT && item.text === spacerContent;\nexport const isTextType = item =>\n    item.type === TEXT && item.text !== spacerContent;\nexport const isVisualizationType = item =>\n    !!itemTypeMap[item.type].isVisualizationType;\nexport const hasMapView = itemType =>\n    itemTypeMap[itemType].domainType === DOMAIN_TYPE_AGGREGATE;\nexport const isTrackerDomainType = itemType =>\n    itemTypeMap[itemType].domainType === DOMAIN_TYPE_TRACKER;\nexport const getDefaultItemCount = itemType =>\n    itemTypeMap[itemType].defaultItemCount || 5;\n\n// Item type map\nexport const itemTypeMap = {\n    [VISUALIZATION]: {\n        id: VISUALIZATION,\n        endPointName: 'visualizations',\n        propName: 'visualization',\n        pluralTitle: i18n.t('Visualizations'),\n        appUrl: id => `dhis-web-data-visualizer/#/${id}`,\n        appName: i18n.t('Visualizer'),\n        defaultItemCount: 10,\n    },\n    [REPORT_TABLE]: {\n        id: REPORT_TABLE,\n        endPointName: 'reportTables',\n        propName: 'reportTable',\n        pluralTitle: i18n.t('Pivot tables'),\n        domainType: DOMAIN_TYPE_AGGREGATE,\n        isVisualizationType: true,\n        appUrl: id => `dhis-web-data-visualizer/#/${id}`,\n        appName: i18n.t('Visualizer'),\n    },\n    [CHART]: {\n        id: CHART,\n        endPointName: 'charts',\n        propName: 'chart',\n        pluralTitle: i18n.t('Charts'),\n        domainType: DOMAIN_TYPE_AGGREGATE,\n        isVisualizationType: true,\n        appUrl: id => `dhis-web-data-visualizer/#/${id}`,\n        appName: i18n.t('Visualizer'),\n    },\n    [MAP]: {\n        id: MAP,\n        endPointName: 'maps',\n        propName: 'map',\n        pluralTitle: i18n.t('Maps'),\n        domainType: DOMAIN_TYPE_AGGREGATE,\n        isVisualizationType: true,\n        appUrl: id => `dhis-web-maps/?id=${id}`,\n        appName: i18n.t('Maps'),\n    },\n    [EVENT_REPORT]: {\n        id: EVENT_REPORT,\n        endPointName: 'eventReports',\n        propName: 'eventReport',\n        pluralTitle: i18n.t('Event reports'),\n        domainType: DOMAIN_TYPE_TRACKER,\n        isVisualizationType: true,\n        appUrl: id => `dhis-web-event-reports/?id=${id}`,\n        appName: i18n.t('Event Reports'),\n    },\n    [EVENT_CHART]: {\n        id: EVENT_CHART,\n        endPointName: 'eventCharts',\n        propName: 'eventChart',\n        pluralTitle: i18n.t('Event charts'),\n        domainType: DOMAIN_TYPE_TRACKER,\n        isVisualizationType: true,\n        appUrl: id => `dhis-web-event-visualizer/?id=${id}`,\n        appName: i18n.t('Event Visualizer'),\n    },\n    [APP]: {\n        endPointName: 'apps',\n        propName: 'appKey',\n        pluralTitle: i18n.t('Apps'),\n    },\n    [REPORTS]: {\n        id: REPORTS,\n        endPointName: 'reports',\n        propName: 'reports',\n        pluralTitle: i18n.t('Reports'),\n        appUrl: id =>\n            `dhis-web-reporting/getReportParams.action?mode=report&uid=${id}`,\n    },\n    [RESOURCES]: {\n        id: RESOURCES,\n        endPointName: 'resources',\n        propName: 'resources',\n        pluralTitle: i18n.t('Resources'),\n        appUrl: id => `api/documents/${id}/data`,\n    },\n    [USERS]: {\n        id: USERS,\n        endPointName: 'users',\n        propName: 'users',\n        pluralTitle: i18n.t('Users'),\n        appUrl: id => `dhis-web-dashboard-integration/profile.action?id=${id}`,\n    },\n    [TEXT]: {\n        id: TEXT,\n        propName: 'text',\n    },\n    [MESSAGES]: {\n        propName: 'messages',\n    },\n    [SPACER]: {\n        propName: 'text',\n    },\n};\n\nexport const getEndPointName = type => itemTypeMap[type].endPointName;\n\nexport const getItemUrl = (type, item, d2) => {\n    let url;\n\n    if (type === APP) {\n        url = item.launchUrl;\n    }\n\n    if (itemTypeMap[type] && itemTypeMap[type].appUrl) {\n        url = `${getBaseUrl(d2)}/${itemTypeMap[type].appUrl(item.id)}`;\n    }\n\n    return url;\n};\n\nexport const getItemIcon = type => {\n    switch (type) {\n        case REPORT_TABLE:\n        case EVENT_REPORT:\n        case REPORTS:\n            return TableIcon;\n        case CHART:\n        case EVENT_CHART:\n            return ChartIcon;\n        case MAP:\n            return MapIcon;\n        case APP:\n            return ExtensionIcon;\n        case RESOURCES:\n            return DescriptionIcon;\n        case USERS:\n            return PersonIcon;\n        case TEXT:\n            return FontDownloadIcon;\n        case MESSAGES:\n            return EmailIcon;\n        case SPACER:\n            return CropFreeIcon;\n        default:\n            return NotInterestedIcon;\n    }\n};\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"showMoreButton\":\"CategorizedMenuGroup_showMoreButton__3-0Wa\"};"],"sourceRoot":""}
{"version":3,"sources":["reducers/user.js","reducers/dashboards.js","reducers/selected.js","reducers/visualizations.js","api/metadata.js","api/index.js","api/dashboards.js","components/ItemGrid/gridUtil.js","reducers/messages.js","api/messages.js","reducers/snackbar.js","actions/snackbar.js","components/SnackbarMessage/SnackbarMessage.js","reducers/itemFilter.js","actions/itemFilter.js","components/Item/VisualizationItem/plugin.js","actions/selected.js","api/localStorage.js","components/Item/MessagesItem/actions.js","reducers/editDashboard.js","api/editDashboard.js","actions/editDashboard.js","actions/dashboards.js","reducers/controlBar.js","api/controlBar.js","actions/controlBar.js","modules/colors.js","api/dataStatistics.js","components/ControlBar/DashboardItemChip.js","widgets/D2IconButton.js","reducers/dashboardsFilter.js","components/ControlBar/Filter.js","components/ControlBar/ShowMoreButton.js","components/ControlBar/controlBarDimensions.js","components/ControlBar/DashboardsBar.js","actions/dashboardsFilter.js","components/Dashboard/DashboardVerticalOffset.js","components/ItemSelect/selectableItems.js","components/ItemSelect/ItemSelectList.js","components/ItemSelect/actions.js","components/ItemSelect/ItemSelectSingle.js","components/ItemSelect/ItemSelect.js","components/TitleBar/EditTitleBar.js","widgets/FlatButton.js","widgets/PrimaryButton.js","widgets/D2TextLink.js","components/ItemFilter/ItemFilter.js","api/orgUnits.js","components/TitleBar/Info.js","components/TitleBar/ViewTitleBar.js","components/TitleBar/TitleBar.js","components/Item/VisualizationItem/DefaultPlugin.js","components/Item/ItemHeader.js","components/Item/VisualizationItem/ItemFooter.js","components/Item/ItemHeaderButton.js","components/Item/VisualizationItem/ItemHeaderButtons.js","components/Item/ProgressiveLoadingContainer.js","modules/memoizeOne.js","components/Item/VisualizationItem/Item.js","widgets/Line.js","components/Item/MessagesItem/Item.js","components/Item/NotSupportedItem/Item.js","components/Item/ListItem/Item.js","components/Item/ListItem/actions.js","components/Item/TextItem/Item.js","components/Item/AppItem/Item.js","components/Item/SpacerItem/Item.js","components/Item/Item.js","components/ItemGrid/DeleteItemButton.js","widgets/ModalLoadingMask.js","widgets/NoContentMessage.js","components/ItemGrid/ItemGrid.js","components/Dashboard/DashboardContent.js","components/Dashboard/ViewDashboard.js","components/ControlBar/ConfirmDeleteDialog.js","components/ControlBar/EditBar.js","components/Dashboard/EditDashboard.js","components/Dashboard/NewDashboard.js","components/Dashboard/Dashboard.js","components/Dashboard/dashboardModes.js","components/App.js","actions/user.js","locales/index.js","reducers/style.js","reducers/index.js","configureStore.js","modules/theme.js","index.js","modules/util.js","modules/itemTypes.js"],"names":["DEFAULT_STATE_USER","id","username","uiLocale","isSuperuser","sGetUserUsername","state","user","DEFAULT_STATE_DASHBOARDS","byId","items","updateDashboardProp","dashboardId","prop","value","Object","objectSpread","defineProperty","sGetDashboardsRoot","dashboards","sGetDashboardById","orObject","sDashboardsIsFetching","sGetAllDashboards","sGetDashboardItems","sGetStarredDashboards","values","filter","dashboard","starred","sGetUnstarredDashboards","sGetDashboardsSortedByStarred","concat","toConsumableArray","arraySort","getCustomDashboards","data","arrayFrom","map","d","index","name","displayName","description","displayDescription","favorite","owner","created","split","join","substr","lastUpdated","access","numberOfItems","orArray","dashboardItems","length","item","type","isSpacerType","SPACER","text","isTextType","emptyTextItemContent","combineReducers","arguments","undefined","action","validateReducer","isLoading","showDescription","sGetSelectedRoot","selected","sGetSelectedId","sGetSelectedIsLoading","sGetSelectedShowDescription","DEFAULT_STATE_VISUALIZATIONS","isEmpty","p","sGetVisualization","visualizations","sGetVisualizationsRoot","getIdNameFields","rename","getDimensionFields","_ref2","withItems","arrayClean","getAxesFields","_ref3","getFavoriteFields","_ref4","withDimensions","withOptions","getFavoritesFields","_ref5","apiFetchFavorite","_ref6","fields","getInstance","then","d2","Api","getApi","get","getEndPointName","onError","error","console","log","itemTypeMap","endPointName","getDashboardItemsFields","withFavorite","getDashboardFields","apiFetchDashboard","models","catch","apiStarDashboard","isStarred","url","post","delete","apiDeleteDashboard","MARGIN","NEW_ITEM_SHAPE","x","y","w","h","isNonNegativeInteger","Number","isInteger","hasShape","withShape","itemWithShape","assign","i","Error","col","row","Math","floor","itemWidth","GRID_ROW_HEIGHT","getShape","originalHeight","round","max","getOriginalHeight","getGridItemDomId","onItemResize","el","document","querySelector","isFunction","setViewportSize","setTimeout","clientWidth","clientHeight","sGetMessagesRoot","messages","getMessages","DEFAULT_STATE_SNACKBAR","message","duration","open","acCloseSnackbar","loadingDashboardMsg","SnackbarMessageContent","_ref","react_default","a","createElement","style","fontWeight","connect","_sGetSnackbar","snackbar","sGetSnackbar","snackbarOpen","snackbarMessage","snackbarDuration","onCloseSnackbar","props","Snackbar_default","SnackbarMessage_SnackbarMessageContent","autoHideDuration","onRequestClose","DEFAULT_STATE_ITEM_FILTER","sGetItemFilterRoot","itemFilter","sGetFilterKeys","keys","FILTER_USER_ORG_UNIT","pluginIsAvailable","activeType","getPlugin","extractFavorite","isObject","REPORT_TABLE","reportTable","CHART","chart","MAP","EVENT_REPORT","eventReport","EVENT_CHART","eventChart","loadPlugin","plugin","config","credentials","load","baseUrl","loadingIndicator","auth","getId","getName","getLink","getBaseUrl","appUrl","configureFavorite","asyncToGenerator","regenerator_default","mark","_callee","fullFavorite","fetchedFavorite","wrap","_context","prev","next","sent","mapViews","find","mv","layer","includes","abrupt","stop","_x","_x2","apply","this","configureFilter","ouIds","ouPath","slice","getUserOrgUnitIds","userOrgUnitFilter","_callee2","_args2","_context2","t0","t1","t2","t3","t4","_x3","_x4","_x5","resize","unmount","acSetSelectedId","acSetSelectedIsLoading","tLoadDashboard","dispatch","getState","dash","acAppendDashboards","Promise","resolve","tSetSelectedDashboardById","snackbarTimeout","onSuccess","dashboardName","customDashboard","acSetDashboardItems","localStorage","setItem","forEach","MESSAGES","messageConversations","clearTimeout","DEFAULT_STATE_EDIT_DASHBOARD","NEW_DASHBOARD_STATE","sGetEditDashboardRoot","editDashboard","sGetEditDashboardItems","saveDashboard","width","height","save","msg","response","uid","updateDashboard","postDashboard","create","acAddDashboardItem","itemPropName","propName","generateUid","content","acUpdateDashboardItem","acRemoveDashboardItem","arrayToIdMap","acSetDashboardStarred","tFetchDashboards","collection","list","paging","toArray","userRows","sGetControlBarUserRows","controlBar","sGetControlBarRoot","KEY","hasNamespace","currentUser","dataStore","has","getNamespace","apiGetControlBarRows","_callee3","namespace","_context3","key","apiPostControlBarRows","_callee4","rows","_context4","set","acSetControlBarUserRows","colors","lightGrey","lightMediumGrey","mediumGrey","charcoalGrey","darkGrey","muiDefaultGrey","red","paleBlue","lightBlue","royalBlue","mint","lightGreen","mediumGreen","darkGreen","paleYellow","white","black","apiPostDataStatistics","eventType","chipTheme","default","labelColor","backgroundColor","primary","accent","DashboardItemChip","label","chipColorProps","labelStyle","fontSize","lineHeight","margin","cursor","Link","display","verticalAlign","textDecoration","to","onClick","debounce","Chip_default","avatarProps","color","Avatar_default","icon","Star_default","avatar","styles","button","padding","iconStyle","IconAdd","iconColor","D2IconButton","IconButton_default","add_circle_default","defaultProps","Function","prototype","ownerData","DEFAULT_STATE_DASHBOARDS_FILTER_NAME","DEFAULT_STATE_DASHBOARDS_FILTER_OWNER","order","sGetDashboardsFilterRoot","dashboardsFilter","sGetFilterName","KEYCODE_ENTER","KEYCODE_ESCAPE","filterField","top","filterFieldInput","left","filterFieldUnderline","bottom","filterFieldUnderlineFocus","borderColor","borderWidth","clearButton","clearButtonIcon","Filter","_Component","_this","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","setFilterValue","event","preventDefault","onChangeName","target","handleKeyUp","keyCode","onKeypressEnter","inherits","createClass","nextProps","setState","TextField_default","className","onChange","onKeyUp","hintText","i18n","t","inputStyle","hintStyle","filterFieldHint","underlineStyle","underlineFocusStyle","Component","ClearButton","disabled","opacity","Clear_default","ControlBar_Filter","react","Filter_Filter","Filter_ClearButton","showMore","paddingTop","textTransform","visibility","withStyles","isMaxHeight","classes","textAlign","MIN_ROW_COUNT","getRowsHeight","getNumRowsFromHeight","FIRST_ROW_PADDING_HEIGHT","getControlBarHeight","expandable","flapHeight","END_FLAP_HEIGHT","MAX_ROW_COUNT","DashboardsBar","_getPrototypeOf2","_len","args","Array","_key","setInitialDashboardState","onChangeHeight","newHeight","newRows","newRowCount","min","onEndDrag","onToggleMaxHeight","onSelectDashboard","history","push","_this$props","selectedId","onChangeFilterName","rowCount","controlBarHeight","contentWrapperStyle","overflowY","ControlBar_default","editMode","marginRight","widgets_D2IconButton","ControlBar_DashboardItemChip","ControlBar_ShowMoreButton","mapDispatchToProps","withRouter","stateProps","dispatchProps","ownProps","displayDashboards","toLowerCase","marginTop","singleItems","header","TEXT","spacerContent","listItems","title","pluralTitle","USERS","REPORTS","RESOURCES","APP","ItemSelectList","addItem","tAddListItemContent","newItem","match","toggleSeeMore","seeMore","onChangeItemsLimit","_this2","justifyContent","paddingLeft","Button","Divider_default","List","itemUrl","getItemUrl","context","ItemIcon","getItemIcon","leftIcon","fill","innerDivStyle","hoverColor","primaryText","alignItems","marginLeft","rel","href","Launch_default","contextTypes","PropTypes","object","isRequired","dashboardItem","listItemType","dashboardItemIndex","findIndex","SingleItem","onAddToDashboard","category","addToDashboard","ItemSelectSingle_SingleItem","searchIcon","ItemSearchField","Search_default","fullWidth","ItemSelect","closeList","openList","fetchItems","anchorEl","currentTarget","setFilter","getListItems","itemType","countName","ItemSelect_ItemSelectList","popoverChildren","SingleItems","ItemSelect_ItemSelectSingle","maxOption","api","queryString","maxOptions","add","Set","ItemSelect_ItemSearchField","Popover_default","onClose","anchorOrigin","horizontal","vertical","transformOrigin","PaperProps","React","EditTitleBar","onChangeTitle","onChangeDescription","titleStyle","section","titleDescription","text_field_TextField","multiline","rowsMax","placeholder","itemSelect","components_ItemSelect_ItemSelect","selectedDashboard","flex","minWidth","maxWidth","position","defaultStyles","FlatButton","children","combinedStyle","FlatButton_default","PrimaryButton","RaisedButton_default","textLink","textLinkHover","D2TextLink","onMouseOverHandle","bind","assertThisInitialized","onMouseOutHandle","hoverStyle","_this$props2","onMouseOver","onMouseOut","ItemFilter","roots","onSelectOrgUnit","e","orgUnit","path","ou","onDeselectAll","onSubmit","acSetItemFilter","renderOrgUnitTree","marginBottom","Info_default","infoIcon","container","widgets_D2TextLink","d2_ui_org_unit_tree","onSelectClick","hideCheckboxes","organisationUnits","userDataViewFallback","rootLevel","rootList","actions","widgets_FlatButton","src_widgets_PrimaryButton","Dialog_default","modal","theme","border","Info","show","toggle","InfoOutlined_default","NO_DESCRIPTION","starIcon","textButton","editLink","titleBar","titleBarIcon","ViewTitleBar","toggleSharingDialog","sharingDialogIsOpen","toggleFilterDialog","filterDialogIsOpen","renderItemFilterLabel","len","itemFilterKeys","borderRadius","onStarClick","onInfoClick","userSelect","StarIcon","Star","StarBorder","TitleBar_Info","update","manage","paddingBottom","d2_ui_sharing_dialog_default","components_ItemFilter_ItemFilter","tStarDashboard","TitleBar","edit","TitleBar_EditTitleBar","TitleBar_ViewTitleBar","DefaultPlugin","pluginCredentials","shouldPluginReload","prevProps","reloadAllowed","filterChanged","vis","visualization","prevVis","visChanged","reloadPlugin","pluginManager","currentVis","useActiveType","getActiveType","onSelectVisualization","defaultHeaders","Authorization","textDiv","HEADER_HEIGHT","ItemHeader","actionButtons","scrollContainer","line","ItemFooter","objectId","d2_ui_interpretations_default","appName","ItemHeaderButton","iconBase","buttonBase","buttonDisabled","toggleFooterPadding","baseStyle","disabledStyle","activeStyle","inactiveStyle","getItemTypeId","visualizationType","domainType","VisualizationItemHeaderButtons","activeFooter","onToggleFooter","toggleFooterBase","toggleFooter","VISUALIZATION_TYPE_CHART","tableButtonStyle","tableBtnStyle","chartButtonStyle","chartBtnStyle","mapButtonStyle","mapBtnStyle","components_Item_ItemHeaderButton","Message_default","VISUALIZATION_TYPE_TABLE","ViewList_default","InsertChart_default","DOMAIN_TYPE_AGGREGATE","VISUALIZATION_TYPE_MAP","Public_default","ProgressiveLoadingContainer","shouldLoad","containerRef","shouldLoadHandler","customBufferPx","bufferPx","rect","getBoundingClientRect","window","innerHeight","removeHandler","checkShouldLoad","debounceMs","addEventListener","removeEventListener","registerHandler","initialBufferPx","initialBufferFactor","_this3","objectWithoutProperties","ref","memoizeOne","fn","lastArgs","lastValue","every","arg","overflow","textOverflow","whiteSpace","fontStretch","Item","showFooter","getUniqueKey","uniqueId","onToggleItemExpanded","getTitle","itemName","getActionButtons","ItemHeaderButtons","getContentStyle","getPluginComponent","data_visualizer_plugin","filters","forDashboard","VisualizationItem_DefaultPlugin","_this$props3","Item_ItemHeader","Item_ProgressiveLoadingContainer","VisualizationItem_ItemFooter","acReceivedActiveVisualization","Line","PRIVATE","messageTypes","_messageTypes","listStyleType","seeAll","sender","snippet","maxHeight","MessagesItem","getMessageHref","msgIdentifier","messageType","getMessageSender","latestMsg","getMessageItems","editClass","readClass","read","msgDate","location","messageCount","formatDate","userSettings","widgets_Line","string","MessagesContainer","NotSupportedItem","NotInterested_default","align","getItemTitle","removeContent","handler","contentToRemove","ListItem","tRemoveListItemContent","contentItems","array","getContentItems","contentItem","deleteButton","Delete_default","ListItemContainer","newContent","textField","onChangeText","updatedItem","textDivStyle","viewItem","getIframeSrc","appDetails","iframeSrc","launchUrl","AppItem","appKey","system","installedApps","app","src","SpacerItem","GridItem","VisualizationItem","TextItem","getGridItem","right","zIndex","DeleteItemHeaderButton","pointerEvents","dark","ModalLoadingMask","LoadingMask_component","NoContentMessage","ItemGrid","expandedItems","NO_ITEMS_MESSAGE","clickedId","isExpanded","onRemoveItem","onLayoutChange","newLayout","acUpdateDashboardLayout","onResizeStop","layout","oldItem","isPluginType","pluginResize","onRemoveItemWrapper","widgets_NoContentMessage","expandedItem","hProp","minH","widgets_ModalLoadingMask","react_grid_layout_default","cols","rowHeight","innerWidth","compactType","isDraggable","isResizable","draggableCancel","itemClassNames","DeleteItemButton","Item_Item_Item","validItems","DashboardContent","components_TitleBar_TitleBar","components_ItemGrid_ItemGrid","Content","hasDashboardContent","dashboardsIsEmpty","Dashboard_DashboardContent","dashboardsLoaded","contentNotReady","ControlBar_DashboardsBar","Dashboard_DashboardVerticalOffset","ViewDashboard_Content","ConfirmDeleteDialog","onDeleteConfirmed","onContinueEditing","buttonBarStyle","EditBar","translationDialogIsOpen","dashboardModel","confirmDeleteDialogOpen","redirectUrl","onConfirmDelete","onSave","newId","onDiscard","onDiscardChanges","onDelete","onTranslationsSaved","translations","dbLocale","translation","locale","property","onTranslate","fetchDashboardModel","toggleTranslationDialog","confirmDeleteDialog","deleteAccess","ControlBar_ConfirmDeleteDialog","translationDialog","d2_ui_translation_dialog_default","objectToTranslate","fieldsToTranslate","onTranslationSaved","onTranslationError","err","Redirect","updateAccess","discardBtnText","sGetIsNewDashboard","dashboardToSave","_x6","_x7","tDeleteDashboard","acSetDashboardDisplayName","EditDashboard","initialized","initEditDashboard","setEditDashboard","getDashboardContent","EditDashboard_Content","ControlBar_EditBar","NewDashboard","setNewDashboard","Dashboard","setDashboard","params","selectDashboard","mode","Dashboard_EditDashboard","Dashboard_NewDashboard","Dashboard_ViewDashboard","dashboardToSelect","preferredId","getItem","App","setCurrentUser","fetchDashboards","setControlBarRows","HeaderBar_default","HashRouter","Switch","Route","exact","render","components_Dashboard_Dashboard","components_SnackbarMessage_SnackbarMessage","childContextTypes","controlBarRows","moment","addResources","enTranslations","loTranslations","svTranslations","urTranslations","viTranslations","setDefaultNamespace","changeLanguage","objectClean","conversations","$merge","d2Object","settings","keyUiLocale","authorities","newState","k","$unshift","idToRemove","$splice","stateItems","newStateItems","stateItem","si","$set","configureStore","middleware","thunk","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","createStore","reducer","applyMiddleware","muiTheme","raisedButton","primaryColor","disabledColor","disabledTextColor","getMuiTheme","configI18n","sources","manifest","isProd","authorization","getManifest","info","version","manifest_generated_at","process","REACT_APP_DHIS2_BASE_URL","REACT_APP_DHIS2_AUTHORIZATION","activities","dhis","dhis2","apiVersion","headers","schemas","getUserSettings","d2Init","initializedD2","ReactDOM","es","store","createMuiTheme","dhis2theme","index_es","src_components_App","getElementById","init","global","__webpack_require__","__webpack_exports__","lodash_isObject__WEBPACK_IMPORTED_MODULE_0__","lodash_isObject__WEBPACK_IMPORTED_MODULE_0___default","n","param","isArray","reduce","obj","Intl","DateTimeFormat","year","month","day","format","Date","replace","defaultValue","idx","indexOf","hasOwnProperty","pluginName","_itemTypeMap","_home_travis_build_dhis2_dashboards_app_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_defineProperty__WEBPACK_IMPORTED_MODULE_0__","TableIcon","ChartIcon","MapIcon","ExtensionIcon","DescriptionIcon","PersonIcon","FontDownloadIcon","EmailIcon","CropFreeIcon","NotInterestedIcon"],"mappings":"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","file":"static/js/main.7f181ea9.chunk.js","sourcesContent":["export const RECEIVED_USER = 'RECEIVED_USER';\n\nexport const DEFAULT_STATE_USER = {\n    id: '',\n    username: '',\n    uiLocale: '',\n    isSuperuser: false,\n};\n\nexport default (state = DEFAULT_STATE_USER, action) => {\n    switch (action.type) {\n        case RECEIVED_USER: {\n            return fromD2ToUserObj(action.value);\n        }\n        default:\n            return state;\n    }\n};\n\nfunction fromD2ToUserObj(d2Object) {\n    return {\n        id: d2Object.id,\n        username: d2Object.username,\n        uiLocale: d2Object.settings.keyUiLocale,\n        isSuperuser: d2Object.authorities.has('ALL'),\n    };\n}\n\n// selectors\n\nexport const sGetUserId = state => state.user.id;\nexport const sGetUserUsername = state => state.user.username;\nexport const sGetIsSuperuser = state => state.user.isSuperuser;\nexport const sGetUiLocale = state => state.user.uiLocale;\n","/** @module reducers/dashboards */\n\nimport arrayFrom from 'd2-utilizr/lib/arrayFrom';\nimport arraySort from 'd2-utilizr/lib/arraySort';\n\nimport { orArray, orObject } from '../modules/util';\nimport {\n    SPACER,\n    isSpacerType,\n    isTextType,\n    emptyTextItemContent,\n} from '../modules/itemTypes';\n\nexport const SET_DASHBOARDS = 'SET_DASHBOARDS';\nexport const ADD_DASHBOARDS = 'ADD_DASHBOARDS';\nexport const SET_DASHBOARD_STARRED = 'SET_DASHBOARD_STARRED';\nexport const SET_DASHBOARD_DISPLAY_NAME = 'SET_DASHBOARD_DISPLAY_NAME';\nexport const SET_DASHBOARD_ITEMS = 'SET_DASHBOARD_ITEMS';\n\nexport const DEFAULT_STATE_DASHBOARDS = {\n    byId: null,\n    items: [],\n};\n\n// reducer helper functions\n\nconst updateDashboardProp = (state, dashboardId, prop, value) => ({\n    byId: {\n        ...state.byId,\n        [dashboardId]: {\n            ...state.byId[dashboardId],\n            [prop]: value,\n        },\n    },\n    items: state.items,\n});\n\n/**\n * Reducer that computes and returns the new state based on the given action\n * @function\n * @param {Object} state The current state\n * @param {Object} action The action to be evaluated\n * @returns {Object}\n */\nexport default (state = DEFAULT_STATE_DASHBOARDS, action) => {\n    switch (action.type) {\n        case SET_DASHBOARDS: {\n            return {\n                byId: action.value,\n                items: [],\n            };\n        }\n        case ADD_DASHBOARDS: {\n            return {\n                ...state,\n                byId: {\n                    ...state.byId,\n                    ...action.value,\n                },\n            };\n        }\n        case SET_DASHBOARD_STARRED: {\n            return updateDashboardProp(\n                state,\n                action.dashboardId,\n                'starred',\n                action.value\n            );\n        }\n        case SET_DASHBOARD_DISPLAY_NAME: {\n            return updateDashboardProp(\n                state,\n                action.dashboardId,\n                'displayName',\n                action.value\n            );\n        }\n        case SET_DASHBOARD_ITEMS: {\n            return {\n                ...state,\n                items: action.value,\n            };\n        }\n        default:\n            return state;\n    }\n};\n\n// root selector\n\nexport const sGetDashboardsRoot = state => state.dashboards;\n\n// selector level 1\n\n/**\n * Selector which returns a dashboard by id from the state object\n * If no matching dashboard is found it returns undefined\n * If dashboards.byId is null, then the dashboards api request\n * has not yet completed. If dashboards.byId is an empty object\n * then the dashboards api request is complete, but no dashboards\n * were returned\n *\n * @function\n * @param {Object} state The current state\n * @param {Number} id The id of the dashboard\n * @returns {Object | undefined}\n */\nexport const sGetDashboardById = (state, id) =>\n    orObject(sGetDashboardsRoot(state).byId)[id];\n\nexport const sDashboardsIsFetching = state => {\n    return sGetDashboardsRoot(state).byId === null;\n};\n\n/**\n * Selector which returns all dashboards (the byId object)\n *\n * @function\n * @param {Object} state The current state\n * @returns {Object | undefined}\n */\nexport const sGetAllDashboards = state =>\n    orObject(sGetDashboardsRoot(state).byId);\n\n/**\n * Selector which returns the current dashboard items\n *\n * @function\n * @param {Object} state The current state\n * @returns {Array}\n */\nexport const sGetDashboardItems = state => sGetDashboardsRoot(state).items;\n\n// selector level 2\n\nexport const sGetStarredDashboards = state =>\n    Object.values(sGetAllDashboards(state)).filter(\n        dashboard => dashboard.starred === true\n    );\n\nexport const sGetUnstarredDashboards = state =>\n    Object.values(sGetAllDashboards(state)).filter(\n        dashboard => dashboard.starred === false\n    );\n\n// selector level 3\n\nexport const sGetStarredDashboardIds = state => {\n    return sGetStarredDashboards(state).map(dashboard => dashboard.id);\n};\n\nexport const sGetUnstarredDashboardIds = state =>\n    sGetUnstarredDashboards(state).map(dashboard => dashboard.id);\n\nexport const sGetDashboardsSortedByStarred = state => [\n    ...arraySort(sGetStarredDashboards(state), 'ASC', 'displayName'),\n    ...arraySort(sGetUnstarredDashboards(state), 'ASC', 'displayName'),\n];\n\n// utils\n\n/**\n * Returns the array of dashboards, customized for ui\n * @function\n * @param {Array} data The original dashboard list\n * @returns {Array}\n */\nexport const getCustomDashboards = data => {\n    const uiItems = items =>\n        items.map(item => {\n            const type = isSpacerType(item) ? SPACER : item.type;\n            const text = isTextType(item)\n                ? item.text === emptyTextItemContent\n                    ? ''\n                    : item.text\n                : null;\n\n            return {\n                ...item,\n                ...(text !== null ? { text } : {}),\n                type,\n            };\n        });\n\n    return arrayFrom(data).map((d, index) => ({\n        id: d.id,\n        name: d.name,\n        displayName: d.displayName,\n        description: d.description,\n        displayDescription: d.displayDescription,\n        starred: d.favorite,\n        owner: d.user.name,\n        created: d.created\n            .split('T')\n            .join(' ')\n            .substr(0, 16),\n        lastUpdated: d.lastUpdated\n            .split('T')\n            .join(' ')\n            .substr(0, 16),\n        access: d.access,\n        numberOfItems: orArray(d.dashboardItems).length,\n        dashboardItems: uiItems(d.dashboardItems),\n    }));\n};\n","/** @module reducers/selected */\nimport { combineReducers } from 'redux';\n\nimport { validateReducer } from '../modules/util';\n\nexport const SET_SELECTED_ID = 'SET_SELECTED_ID';\nexport const SET_SELECTED_ISLOADING = 'SET_SELECTED_ISLOADING';\nexport const SET_SELECTED_SHOWDESCRIPTION = 'SET_SELECTED_SHOWDESCRIPTION';\n\nexport const DEFAULT_STATE_SELECTED_ID = null;\nexport const DEFAULT_STATE_SELECTED_ISLOADING = false;\nexport const DEFAULT_STATE_SELECTED_SHOWDESCRIPTION = false;\n\n/**\n * Reducer functions that computes and returns the new state based on the given action\n * @function\n * @param {Object} state The current state\n * @param {Object} action The action to be evaluated\n */\nconst id = (state = DEFAULT_STATE_SELECTED_ID, action) => {\n    switch (action.type) {\n        case SET_SELECTED_ID:\n            return validateReducer(action.value, DEFAULT_STATE_SELECTED_ID);\n        default:\n            return state;\n    }\n};\n\nconst isLoading = (state = DEFAULT_STATE_SELECTED_ISLOADING, action) => {\n    switch (action.type) {\n        case SET_SELECTED_ISLOADING:\n            return validateReducer(\n                action.value,\n                DEFAULT_STATE_SELECTED_ISLOADING\n            );\n        default:\n            return state;\n    }\n};\n\nconst showDescription = (\n    state = DEFAULT_STATE_SELECTED_SHOWDESCRIPTION,\n    action\n) => {\n    switch (action.type) {\n        case SET_SELECTED_SHOWDESCRIPTION:\n            return validateReducer(\n                action.value,\n                DEFAULT_STATE_SELECTED_SHOWDESCRIPTION\n            );\n        default:\n            return state;\n    }\n};\n\nexport default combineReducers({\n    id,\n    isLoading,\n    showDescription,\n});\n\n// Selectors\n\nexport const sGetSelectedRoot = state => state.selected;\n\nexport const sGetSelectedId = state => sGetSelectedRoot(state).id;\n\nexport const sGetSelectedIsLoading = state => sGetSelectedRoot(state).isLoading;\n\nexport const sGetSelectedShowDescription = state =>\n    sGetSelectedRoot(state).showDescription;\n","import { orObject } from '../modules/util';\nimport objectClean from 'd2-utilizr/lib/objectClean';\n\n/** @module reducers/visualizations */\n\nexport const RECEIVED_VISUALIZATION = 'RECEIVED_VISUALIZATION';\nexport const RECEIVED_ACTIVE_VISUALIZATION = 'RECEIVED_ACTIVE_VISUALIZATION';\n\nexport const DEFAULT_STATE_VISUALIZATIONS = {};\n\nconst isEmpty = p => p === undefined || p === null;\n\nexport default (state = DEFAULT_STATE_VISUALIZATIONS, action) => {\n    switch (action.type) {\n        case RECEIVED_VISUALIZATION: {\n            return {\n                ...state,\n                [action.value.id]: action.value,\n            };\n        }\n        case RECEIVED_ACTIVE_VISUALIZATION: {\n            return {\n                ...state,\n                [action.id]: objectClean(\n                    {\n                        ...orObject(state[action.id]),\n                        activeType: action.activeType,\n                    },\n                    isEmpty\n                ),\n            };\n        }\n        default:\n            return state;\n    }\n};\n\n// root selector\nexport const sGetVisualizationsRoot = state => state.visualizations;\n\n// selectors level 1\nexport const sGetVisualization = (state, id) => {\n    return sGetVisualizationsRoot(state)[id];\n};\n","import { getInstance } from 'd2';\nimport arrayClean from 'd2-utilizr/lib/arrayClean';\n\nimport { getEndPointName } from './index';\n\n// Id, name\nexport const getIdNameFields = ({ rename } = {}) => [\n    'id',\n    `${rename ? 'displayName~rename(name)' : 'name,displayName'}`,\n];\n\n// Item\nexport const getItemFields = () => [\n    'dimensionItem~rename(id)',\n    'displayName~rename(name)',\n];\n\n// Dimension\nexport const getDimensionFields = ({ withItems }) =>\n    arrayClean([\n        'dimension',\n        'legendSet[id]',\n        withItems ? `items[${getItemFields().join(',')}]` : ``,\n    ]);\n\n// Axis\nexport const getAxesFields = ({ withItems }) => [\n    `columns[${getDimensionFields({ withItems }).join(',')}]`,\n    `rows[${getDimensionFields({ withItems }).join(',')}]`,\n    `filters[${getDimensionFields({ withItems }).join(',')}]`,\n];\n\n// Favorite\nexport const getFavoriteFields = ({ withDimensions, withOptions }) => {\n    return arrayClean([\n        `${getIdNameFields({ rename: true }).join(',')}`,\n        'displayDescription~rename(description)',\n        withDimensions ? `${getAxesFields({ withItems: true }).join(',')}` : ``,\n        withOptions\n            ? [\n                  '*',\n                  '!attributeDimensions',\n                  '!attributeValues',\n                  '!category',\n                  '!categoryDimensions',\n                  '!categoryOptionGroupSetDimensions',\n                  '!columnDimensions',\n                  '!dataDimensionItems',\n                  '!dataElementDimensions',\n                  '!dataElementGroupSetDimensions',\n                  '!filterDimensions',\n                  '!itemOrganisationUnitGroups',\n                  '!lastUpdatedBy',\n                  '!organisationUnitGroupSetDimensions',\n                  '!organisationUnitLevels',\n                  '!organisationUnits',\n                  '!programIndicatorDimensions',\n                  '!relativePeriods',\n                  '!reportParams',\n                  '!rowDimensions',\n                  '!series',\n                  '!translations',\n                  '!userOrganisationUnit',\n                  '!userOrganisationUnitChildren',\n                  '!userOrganisationUnitGrandChildren',\n              ].join(',')\n            : '',\n    ]);\n};\n\nexport const getFavoritesFields = ({ withDimensions, withOptions }) => [\n    `reportTable[${getFavoriteFields({ withDimensions }).join(',')}]`,\n    `chart[${['type', ...getFavoriteFields({ withDimensions })].join(',')}]`,\n    `map[${getFavoriteFields({ withDimensions }).join(',')}]`,\n    `eventReport[${getFavoriteFields({ withDimensions }).join(',')}]`,\n    `eventChart[${getFavoriteFields({ withDimensions }).join(',')}]`,\n];\n\n// List item\nexport const getListItemFields = () => [\n    `reports[${getIdNameFields({ rename: true }).join(',')}]`,\n    `resources[${getIdNameFields({ rename: true }).join(',')}]`,\n    `users[${getIdNameFields({ rename: true }).join(',')}]`,\n];\n\n// Map\nexport const getMapFields = () => [\n    `${getIdNameFields({ rename: true }).join(',')}`,\n    'user,longitude,latitude,zoom,basemap',\n    `mapViews[${getFavoriteFields({\n        withDimensions: true,\n        withOptions: true,\n    })}]`,\n];\n\n// Api\n\n// Get more info about the favorite of a dashboard item\nexport const apiFetchFavorite = (id, type, { fields }) =>\n    getInstance().then(d2 =>\n        d2.Api.getApi().get(\n            `${getEndPointName(type)}/${id}?fields=${fields ||\n                getFavoriteFields({\n                    withDimensions: true,\n                    withOptions: true,\n                })}`\n        )\n    );\n","import arrayClean from 'd2-utilizr/lib/arrayClean';\nimport { itemTypeMap } from '../modules/itemTypes';\nimport {\n    getListItemFields,\n    getFavoritesFields,\n    getIdNameFields,\n} from './metadata';\n\n// Helper functions\n\nexport const onError = error => console.log('Error: ', error);\n\nexport const getEndPointName = type => itemTypeMap[type].endPointName;\n\n// Dashboard item\nexport const getDashboardItemsFields = ({ withFavorite } = {}) =>\n    arrayClean([\n        'id',\n        'type',\n        'shape',\n        'x',\n        'y',\n        'width~rename(w)',\n        'height~rename(h)',\n        'messages',\n        'text',\n        'appKey',\n        `${getListItemFields().join(',')}`,\n        withFavorite\n            ? `${getFavoritesFields({\n                  withDimensions: withFavorite.withDimensions,\n              }).join(',')}`\n            : ``,\n    ]);\n\n// Dashboard\nexport const getDashboardFields = ({ withItems, withFavorite } = {}) =>\n    arrayClean([\n        `${getIdNameFields().join(',')}`,\n        'description',\n        'displayDescription',\n        'favorite',\n        `user[${getIdNameFields({ rename: true }).join(',')}]`,\n        'created',\n        'lastUpdated',\n        'access',\n        withItems\n            ? `dashboardItems[${getDashboardItemsFields({\n                  withFavorite,\n              }).join(',')}]`\n            : ``,\n    ]);\n","import { getInstance } from 'd2';\nimport arrayClean from 'd2-utilizr/lib/arrayClean';\nimport { onError, getDashboardFields } from './index';\n\n// Get \"all\" dashboards on startup\nexport const apiFetchDashboards = () =>\n    getInstance()\n        .then(d2 =>\n            d2.models.dashboard.list({\n                fields: [\n                    getDashboardFields().join(','),\n                    'dashboardItems[id]',\n                ].join(','),\n                paging: 'false',\n            })\n        )\n        .catch(onError);\n\n// Get more info about selected dashboard\nexport const apiFetchDashboard = id =>\n    getInstance()\n        .then(d2 =>\n            d2.models.dashboard.get(id, {\n                fields: arrayClean(\n                    getDashboardFields({\n                        withItems: true,\n                        withFavorite: { withDimensions: false },\n                    })\n                ).join(','),\n            })\n        )\n        .catch(onError);\n\n// Star dashboard\nexport const apiStarDashboard = (id, isStarred) => {\n    const url = `dashboards/${id}/favorite`;\n\n    getInstance().then(d2 => {\n        if (isStarred) {\n            d2.Api.getApi().post(url);\n        } else {\n            d2.Api.getApi().delete(url);\n        }\n    });\n};\n\nexport const apiDeleteDashboard = id => {\n    return getInstance()\n        .then(d2 => {\n            return d2.models.dashboards\n                .get(id)\n                .then(dashboard => dashboard.delete());\n        })\n        .catch(onError);\n};\n","import isFunction from 'd2-utilizr/lib/isFunction';\n\nimport { orObject } from '../../modules/util';\n\n// Dimensions for the react-grid-layout\n\nexport const GRID_COMPACT_TYPE = 'vertical'; // vertical | horizonal | null\nexport const GRID_ROW_HEIGHT = 10;\nconst GRID_COLUMN_WIDTH_PX = 20;\nconst GRID_LAYOUT = 'FLEXIBLE'; // FIXED | FLEXIBLE\nexport const MARGIN = [10, 10];\n\nexport const NEW_ITEM_SHAPE = { x: 0, y: 0, w: 20, h: 29 };\nexport const ITEM_MIN_HEIGHT = 4;\n\n// Dimensions for getShape\n\nconst NUMBER_OF_ITEM_COLS = 2;\nconst GRID_COLUMNS = 60;\n\nexport const getGridColumns = () => {\n    switch (GRID_LAYOUT) {\n        case 'FLEXIBLE':\n            return GRID_COLUMNS;\n        case 'FIXED':\n            return Math.floor((window.innerWidth - 20) / GRID_COLUMN_WIDTH_PX);\n        default:\n            return GRID_COLUMNS;\n    }\n};\n\n// isNonNegativeInteger\n\nconst isNonNegativeInteger = x => Number.isInteger(x) && x >= 0;\n\n// Does the item have all the shape properties?\n\nexport const hasShape = item =>\n    isNonNegativeInteger(item.x) &&\n    isNonNegativeInteger(item.y) &&\n    isNonNegativeInteger(item.w) &&\n    isNonNegativeInteger(item.h);\n\n// returns a rectangular grid block dimensioned with x, y, w, h in grid units.\n// based on a grid with 3 items across\nexport const getShape = i => {\n    if (!isNonNegativeInteger(i)) {\n        throw new Error('Invalid grid block number');\n    }\n\n    const col = i % NUMBER_OF_ITEM_COLS;\n    const row = Math.floor(i / NUMBER_OF_ITEM_COLS);\n    const itemWidth = Math.floor((GRID_COLUMNS - 1) / NUMBER_OF_ITEM_COLS);\n    const itemHeight = GRID_ROW_HEIGHT * 2;\n\n    return {\n        x: col * itemWidth,\n        y: row * itemHeight,\n        w: itemWidth,\n        h: itemHeight,\n    };\n};\n\n/**\n * Calculates the grid item's original height in pixels based\n * on the height in grid units. This calculation\n * is copied directly from react-grid-layout GridItem.js (calcPosition)\n *\n * @param {Object} item item containing shape (x, y, w, h)\n */\nconst getOriginalHeight = item => {\n    const originalHeight = Math.round(\n        GRID_ROW_HEIGHT * item.h + Math.max(0, item.h - 1) * MARGIN[1]\n    );\n\n    return { originalHeight };\n};\n\n/**\n * Returns an array of items containing the x, y, w, h dimensions\n * and the item's originalheight in pixels\n * @function\n * @param {Array} items\n * @returns {Array}\n */\n\nexport const withShape = items =>\n    items.map((item, index) => {\n        const itemWithShape = hasShape(item)\n            ? item\n            : Object.assign({}, item, getShape(index));\n\n        return Object.assign(\n            {},\n            itemWithShape,\n            getOriginalHeight(itemWithShape)\n        );\n    });\n\nexport const getGridItemDomId = id => `item-${id}`;\n\nexport function onItemResize(id) {\n    const el = orObject(document.querySelector(`#${getGridItemDomId(id)}`));\n    if (isFunction(el.setViewportSize))\n        setTimeout(\n            () => el.setViewportSize(el.clientWidth - 5, el.clientHeight - 5),\n            10\n        );\n}\n","import update from 'immutability-helper';\nimport { arrayToIdMap } from '../modules/util';\n\nexport const RECEIVED_MESSAGES = 'RECEIVED_MESSAGES';\n\nexport default (state = {}, action) => {\n    switch (action.type) {\n        case RECEIVED_MESSAGES: {\n            const conversations = arrayToIdMap(action.value);\n\n            const newState = update(state, { $merge: conversations });\n\n            return newState;\n        }\n        default:\n            return state;\n    }\n};\n\n// selectors\n\nexport const sGetMessagesRoot = state => state.messages;\n","import { getInstance } from 'd2';\n\nexport const getMessages = () => {\n    const fields =\n        'id,messageCount,lastUpdated,messageType,displayName,read,messages[id,read,sender[id,displayName],text,lastUpdated]';\n    const url = `/messageConversations?fields=${fields}&order=read:asc&pageSize=200`;\n    return getInstance()\n        .then(d2 => d2.Api.getApi().get(url))\n        .catch(error => console.log('Error:', error));\n};\n","export const RECEIVED_SNACKBAR_MESSAGE = 'RECEIVED_SNACKBAR_MESSAGE';\nexport const CLOSE_SNACKBAR = 'CLOSE_SNACKBAR';\n\nexport const DEFAULT_STATE_SNACKBAR = {\n    message: {},\n    duration: null,\n    open: false,\n};\n\nexport default (state = DEFAULT_STATE_SNACKBAR, action) => {\n    switch (action.type) {\n        case RECEIVED_SNACKBAR_MESSAGE: {\n            return { ...state, ...action.value };\n        }\n        case CLOSE_SNACKBAR: {\n            return DEFAULT_STATE_SNACKBAR;\n        }\n        default:\n            return state;\n    }\n};\n\n// selectors\n\nexport const sGetSnackbar = state => state.snackbar || DEFAULT_STATE_SNACKBAR;\n","import {\n    RECEIVED_SNACKBAR_MESSAGE,\n    CLOSE_SNACKBAR,\n} from '../reducers/snackbar';\n\nexport const acReceivedSnackbarMessage = value => ({\n    type: RECEIVED_SNACKBAR_MESSAGE,\n    value,\n});\n\nexport const acCloseSnackbar = () => ({\n    type: CLOSE_SNACKBAR,\n});\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport Snackbar from 'material-ui/Snackbar';\n\nimport { sGetSnackbar } from '../../reducers/snackbar';\nimport { acCloseSnackbar } from '../../actions/snackbar';\n\nconst LOADING_DASHBOARD = 'LOADING_DASHBOARD';\nexport const loadingDashboardMsg = { name: '', type: LOADING_DASHBOARD };\n\nconst SnackbarMessageContent = ({ message }) => {\n    if (typeof message === 'object') {\n        //future message types:  switch(message.type)\n        return (\n            <span>\n                Loading <span style={{ fontWeight: 800 }}>{message.name}</span>{' '}\n                dashboard\n            </span>\n        );\n    }\n    return message;\n};\n\nexport const SnackbarMessage = props => {\n    return (\n        <Snackbar\n            open={props.snackbarOpen}\n            message={<SnackbarMessageContent message={props.snackbarMessage} />}\n            autoHideDuration={props.snackbarDuration}\n            onRequestClose={props.onCloseSnackbar}\n        />\n    );\n};\n\nconst mapStateToProps = state => {\n    const { message, duration, open } = sGetSnackbar(state);\n    return {\n        snackbarOpen: open,\n        snackbarMessage: message,\n        snackbarDuration: duration,\n    };\n};\n\nexport default connect(\n    mapStateToProps,\n    {\n        onCloseSnackbar: acCloseSnackbar,\n    }\n)(SnackbarMessage);\n","import objectClean from 'd2-utilizr/lib/objectClean';\nimport isEmpty from 'd2-utilizr/lib/isEmpty';\n\nexport const SET_ITEM_FILTER = 'SET_ITEM_FILTER';\n\nexport const DEFAULT_STATE_ITEM_FILTER = {};\n\nexport default (state = DEFAULT_STATE_ITEM_FILTER, action) => {\n    switch (action.type) {\n        case SET_ITEM_FILTER: {\n            return objectClean(\n                {\n                    ...state,\n                    [action.key]: action.value,\n                },\n                isEmpty\n            );\n        }\n        default:\n            return state;\n    }\n};\n\n// selectors\n\nexport const sGetItemFilterRoot = state => state.itemFilter;\n\nexport const sGetFilterKeys = state => Object.keys(sGetItemFilterRoot(state));\n","import { SET_ITEM_FILTER } from '../reducers/itemFilter';\n\nexport const FILTER_USER_ORG_UNIT = 'userOrgUnit';\n\n// actions\n\nexport const acSetItemFilter = (key, value) => ({\n    type: SET_ITEM_FILTER,\n    key,\n    value,\n});\n","import isObject from 'lodash/isObject';\n\nimport { apiFetchFavorite, getMapFields } from '../../../api/metadata';\nimport { FILTER_USER_ORG_UNIT } from '../../../actions/itemFilter';\nimport {\n    REPORT_TABLE,\n    CHART,\n    MAP,\n    EVENT_REPORT,\n    EVENT_CHART,\n    itemTypeMap,\n    getPlugin,\n} from '../../../modules/itemTypes';\nimport { getBaseUrl, orObject } from '../../../modules/util';\nimport { getGridItemDomId } from '../../ItemGrid/gridUtil';\n\nexport const pluginIsAvailable = (item = {}, visualization = {}) => {\n    const type = visualization.activeType || item.type;\n\n    return !!getPlugin(type);\n};\n\nexport const extractFavorite = item => {\n    if (!isObject(item)) {\n        return null;\n    }\n\n    switch (item.type) {\n        case REPORT_TABLE:\n            return item.reportTable;\n        case CHART:\n            return item.chart;\n        case MAP:\n            return item.map;\n        case EVENT_REPORT:\n            return item.eventReport;\n        case EVENT_CHART:\n            return item.eventChart;\n        default:\n            return (\n                item.reportTable ||\n                item.chart ||\n                item.map ||\n                item.eventReport ||\n                item.eventChart ||\n                {}\n            );\n    }\n};\n\nexport const extractMapView = map =>\n    map.mapViews && map.mapViews.find(mv => mv.layer.includes('thematic'));\n\nconst loadPlugin = (plugin, config, credentials) => {\n    if (!(plugin && plugin.load)) {\n        return;\n    }\n\n    plugin.url = credentials.baseUrl;\n    plugin.loadingIndicator = true;\n    plugin.dashboard = true;\n    if (credentials.auth) {\n        plugin.auth = credentials.auth;\n    }\n\n    plugin.load(config);\n};\n\nexport const getId = item => extractFavorite(item).id;\nexport const getName = item => extractFavorite(item).name;\nexport const getDescription = item => extractFavorite(item).description;\nexport const getLink = (item, d2) => {\n    const baseUrl = getBaseUrl(d2);\n    const appUrl = itemTypeMap[item.type].appUrl(getId(item));\n\n    return `${baseUrl}/${appUrl}`;\n};\n\nconst getUserOrgUnitIds = (ouPaths = []) => {\n    return ouPaths.map(ouPath => ouPath.split('/').slice(-1)[0]);\n};\n\n// if original visualisation, set id and let the plugin handle it\n// otherwise fetch and pass the correct config to the plugin\nconst configureFavorite = async (item, activeType) => {\n    const isOriginalVisualisation = activeType\n        ? item.type === activeType\n        : true;\n    let favorite;\n\n    if (isOriginalVisualisation) {\n        const fullFavorite = extractFavorite(item);\n\n        favorite = {\n            id: fullFavorite.id,\n        };\n    } else {\n        const fetchedFavorite = await apiFetchFavorite(getId(item), item.type, {\n            fields: item.type === MAP ? getMapFields() : null,\n        });\n\n        favorite =\n            item.type === MAP\n                ? orObject(extractMapView(fetchedFavorite))\n                : fetchedFavorite;\n\n        favorite.id = null;\n    }\n\n    return favorite;\n};\n\nconst configureFilter = (filter = {}) => {\n    const ouIds = getUserOrgUnitIds(filter[FILTER_USER_ORG_UNIT]);\n    const userOrgUnitFilter = ouIds.length\n        ? { [FILTER_USER_ORG_UNIT]: ouIds }\n        : {};\n\n    return Object.assign({}, filter, userOrgUnitFilter);\n};\n\nexport const load = async (item, credentials, activeType, filter = {}) => {\n    const config = {\n        ...(await configureFavorite(item, activeType)),\n        ...configureFilter(filter),\n        el: getGridItemDomId(item.id),\n    };\n\n    const type = activeType || item.type;\n    const plugin = getPlugin(type);\n\n    loadPlugin(plugin, config, credentials);\n};\n\nexport const resize = item => {\n    const plugin = getPlugin(item.type);\n\n    if (plugin && plugin.resize) {\n        plugin.resize(getGridItemDomId(item.id));\n    }\n};\n\nexport const unmount = (item, activeType) => {\n    const plugin = getPlugin(activeType);\n\n    if (plugin && plugin.unmount) {\n        plugin.unmount(getGridItemDomId(item.id));\n    }\n};\n","import {\n    SET_SELECTED_ID,\n    SET_SELECTED_ISLOADING,\n    SET_SELECTED_SHOWDESCRIPTION,\n} from '../reducers/selected';\nimport {\n    RECEIVED_VISUALIZATION,\n    RECEIVED_ACTIVE_VISUALIZATION,\n} from '../reducers/visualizations';\nimport { sGetSelectedIsLoading } from '../reducers/selected';\nimport { sGetUserUsername } from '../reducers/user';\nimport { getCustomDashboards, sGetDashboardById } from '../reducers/dashboards';\nimport { apiFetchDashboard } from '../api/dashboards';\nimport { acSetDashboardItems, acAppendDashboards } from './dashboards';\nimport { withShape } from '../components/ItemGrid/gridUtil';\nimport { tGetMessages } from '../components/Item/MessagesItem/actions';\nimport { acReceivedSnackbarMessage, acCloseSnackbar } from './snackbar';\nimport { storePreferredDashboardId } from '../api/localStorage';\nimport { loadingDashboardMsg } from '../components/SnackbarMessage/SnackbarMessage';\nimport {\n    REPORT_TABLE,\n    CHART,\n    MAP,\n    EVENT_REPORT,\n    EVENT_CHART,\n    MESSAGES,\n} from '../modules/itemTypes';\nimport { extractFavorite } from '../components/Item/VisualizationItem/plugin';\nimport { orObject } from '../modules/util';\n\n// actions\n\nexport const acSetSelectedId = value => ({\n    type: SET_SELECTED_ID,\n    value,\n});\n\nexport const acSetSelectedIsLoading = value => ({\n    type: SET_SELECTED_ISLOADING,\n    value,\n});\n\nexport const acSetSelectedShowDescription = value => ({\n    type: SET_SELECTED_SHOWDESCRIPTION,\n    value,\n});\n\nexport const acReceivedVisualization = value => ({\n    type: RECEIVED_VISUALIZATION,\n    value,\n});\n\nexport const acReceivedActiveVisualization = (id, type, activeType) => {\n    const action = {\n        type: RECEIVED_ACTIVE_VISUALIZATION,\n        id,\n    };\n\n    if (activeType !== type) {\n        action.activeType = activeType;\n    }\n\n    return action;\n};\n\nexport const tLoadDashboard = id => async (dispatch, getState) => {\n    try {\n        const dash = await apiFetchDashboard(id);\n        dispatch(acAppendDashboards(dash));\n\n        return Promise.resolve(dash);\n    } catch (err) {\n        console.log('Error: ', err);\n        return err;\n    }\n};\n\n// thunks\nexport const tSetSelectedDashboardById = id => async (dispatch, getState) => {\n    dispatch(acSetSelectedIsLoading(true));\n\n    const snackbarTimeout = setTimeout(() => {\n        const dashboardName = orObject(sGetDashboardById(getState(), id))\n            .displayName;\n        if (sGetSelectedIsLoading(getState()) && dashboardName) {\n            loadingDashboardMsg.name = dashboardName;\n\n            dispatch(\n                acReceivedSnackbarMessage({\n                    message: loadingDashboardMsg,\n                    open: true,\n                })\n            );\n        }\n    }, 500);\n\n    const onSuccess = selected => {\n        const customDashboard = getCustomDashboards(selected)[0];\n\n        dispatch(\n            acSetDashboardItems(withShape(customDashboard.dashboardItems))\n        );\n\n        storePreferredDashboardId(sGetUserUsername(getState()), id);\n\n        // add visualizations to store\n        customDashboard.dashboardItems.forEach(item => {\n            switch (item.type) {\n                case REPORT_TABLE:\n                case CHART:\n                case MAP:\n                case EVENT_REPORT:\n                case EVENT_CHART:\n                    dispatch(\n                        acReceivedVisualization(\n                            extractFavorite(item),\n                            item.type\n                        )\n                    );\n                    break;\n                case MESSAGES:\n                    dispatch(tGetMessages(id));\n                    break;\n                default:\n                    break;\n            }\n        });\n\n        dispatch(acSetSelectedId(id));\n\n        dispatch(acSetSelectedIsLoading(false));\n\n        clearTimeout(snackbarTimeout);\n\n        dispatch(acCloseSnackbar());\n\n        return selected;\n    };\n\n    const onError = error => {\n        console.log('Error: ', error);\n        return error;\n    };\n\n    try {\n        const selected = await dispatch(tLoadDashboard(id));\n\n        return onSuccess(selected);\n    } catch (err) {\n        return onError(err);\n    }\n};\n","export const getPreferredDashboardId = username =>\n    localStorage.getItem(`dhis2.dashboard.current.${username}`) || undefined;\n\nexport const storePreferredDashboardId = (username, dashboardId) => {\n    localStorage.setItem(`dhis2.dashboard.current.${username}`, dashboardId);\n};\n","import { RECEIVED_MESSAGES } from '../../../reducers/messages';\nimport { getMessages } from '../../../api/messages';\n\nconst onError = (action, error) => {\n    console.log(`Error in action ${action}: ${error}`);\n    return error;\n};\n\nexport const receivedMessages = value => ({\n    type: RECEIVED_MESSAGES,\n    value,\n});\n\nexport const tGetMessages = dashboardItemId => async dispatch => {\n    try {\n        const messages = await getMessages();\n        const { messageConversations } = messages;\n\n        return dispatch(receivedMessages(messageConversations));\n    } catch (err) {\n        return onError('Get Messages', err);\n    }\n};\n","/** @module reducers/editDashboard */\nimport update from 'immutability-helper';\nimport isEmpty from 'lodash/isEmpty';\nimport { orArray, orObject } from '../modules/util';\n\nexport const RECEIVED_EDIT_DASHBOARD = 'RECEIVED_EDIT_DASHBOARD';\nexport const RECEIVED_NOT_EDITING = 'RECEIVED_NOT_EDITING';\nexport const START_NEW_DASHBOARD = 'START_NEW_DASHBOARD';\nexport const RECEIVED_TITLE = 'RECEIVED_TITLE';\nexport const RECEIVED_DESCRIPTION = 'RECEIVED_DESCRIPTION';\nexport const ADD_DASHBOARD_ITEM = 'ADD_DASHBOARD_ITEM';\nexport const REMOVE_DASHBOARD_ITEM = 'REMOVE_DASHBOARD_ITEM';\nexport const UPDATE_DASHBOARD_ITEM = 'UPDATE_DASHBOARD_ITEM';\nexport const RECEIVED_DASHBOARD_LAYOUT = 'RECEIVED_DASHBOARD_LAYOUT';\n\nexport const DEFAULT_STATE_EDIT_DASHBOARD = {};\nexport const NEW_DASHBOARD_STATE = {\n    id: '',\n    name: '',\n    access: {},\n    description: '',\n    dashboardItems: [],\n};\n\nexport default (state = DEFAULT_STATE_EDIT_DASHBOARD, action) => {\n    switch (action.type) {\n        case RECEIVED_EDIT_DASHBOARD:\n            const newState = {};\n            Object.keys(NEW_DASHBOARD_STATE).map(\n                k => (newState[k] = action.value[k])\n            );\n            return newState;\n        case RECEIVED_NOT_EDITING:\n            return DEFAULT_STATE_EDIT_DASHBOARD;\n        case START_NEW_DASHBOARD:\n            return NEW_DASHBOARD_STATE;\n        case RECEIVED_TITLE: {\n            return Object.assign({}, state, { name: action.value });\n        }\n        case RECEIVED_DESCRIPTION: {\n            return Object.assign({}, state, {\n                description: action.value,\n            });\n        }\n        case ADD_DASHBOARD_ITEM:\n            return update(state, {\n                dashboardItems: { $unshift: [action.value] },\n            });\n        case REMOVE_DASHBOARD_ITEM: {\n            const idToRemove = action.value;\n\n            const dashboardItemIndex = state.dashboardItems.findIndex(\n                item => item.id === idToRemove\n            );\n\n            if (dashboardItemIndex > -1) {\n                return update(state, {\n                    dashboardItems: {\n                        $splice: [[dashboardItemIndex, 1]],\n                    },\n                });\n            }\n\n            return state;\n        }\n        case RECEIVED_DASHBOARD_LAYOUT: {\n            const stateItems = orArray(state.dashboardItems);\n\n            const newStateItems = action.value.map(({ x, y, w, h, i }) => {\n                const stateItem = stateItems.find(si => si.id === i);\n\n                return Object.assign({}, stateItem, { w, h, x, y });\n            });\n\n            return update(state, {\n                dashboardItems: { $set: newStateItems },\n            });\n        }\n        case UPDATE_DASHBOARD_ITEM: {\n            const dashboardItem = action.value;\n\n            const dashboardItemIndex = state.dashboardItems.findIndex(\n                item => item.id === dashboardItem.id\n            );\n\n            if (dashboardItemIndex > -1) {\n                const newState = update(state, {\n                    dashboardItems: {\n                        $splice: [[dashboardItemIndex, 1, dashboardItem]],\n                    },\n                });\n\n                return newState;\n            }\n\n            return state;\n        }\n        default:\n            return state;\n    }\n};\n\n// root selector\n\nexport const sGetEditDashboardRoot = state => state.editDashboard;\n\n// selectors\n\nexport const sGetIsEditing = state => !isEmpty(state.editDashboard);\n\nexport const sGetIsNewDashboard = state => {\n    return (\n        !isEmpty(state.editDashboard) && sGetEditDashboardRoot(state).id === ''\n    );\n};\n\nexport const sGetEditDashboardItems = state =>\n    orObject(sGetEditDashboardRoot(state)).dashboardItems;\n","import { getInstance } from 'd2';\n\nconst onError = error => console.log('Error: ', error);\n\nconst saveDashboard = (dashboard, data) => {\n    const { name, description, dashboardItems } = data;\n\n    dashboard.name = name;\n    dashboard.description = description;\n    dashboard.dashboardItems = dashboardItems.map(item =>\n        Object.assign({}, item, { width: item.w, height: item.h })\n    );\n\n    return dashboard.save().then(msg => msg.response.uid);\n};\n\nexport const updateDashboard = data => {\n    return getInstance()\n        .then(d2 => {\n            return d2.models.dashboards\n                .get(data.id)\n                .then(dashboard => saveDashboard(dashboard, data));\n        })\n        .catch(onError);\n};\n\nexport const postDashboard = data => {\n    return getInstance().then(d2 => {\n        const dashboard = d2.models.dashboards.create();\n\n        return saveDashboard(dashboard, data);\n    });\n};\n","import { generateUid } from 'd2/uid';\n\nimport {\n    RECEIVED_EDIT_DASHBOARD,\n    START_NEW_DASHBOARD,\n    RECEIVED_NOT_EDITING,\n    RECEIVED_TITLE,\n    RECEIVED_DESCRIPTION,\n    RECEIVED_DASHBOARD_LAYOUT,\n    ADD_DASHBOARD_ITEM,\n    UPDATE_DASHBOARD_ITEM,\n    REMOVE_DASHBOARD_ITEM,\n} from '../reducers/editDashboard';\nimport { sGetEditDashboardRoot } from '../reducers/editDashboard';\nimport { updateDashboard, postDashboard } from '../api/editDashboard';\nimport { tSetSelectedDashboardById } from '../actions/selected';\nimport { NEW_ITEM_SHAPE } from '../components/ItemGrid/gridUtil';\nimport {\n    itemTypeMap,\n    isSpacerType,\n    TEXT,\n    emptyTextItemContent,\n    isTextType,\n} from '../modules/itemTypes';\n\nconst onError = error => {\n    console.log('Error (Saving Dashboard): ', error);\n    return error;\n};\n\n// actions\n\nexport const acSetEditDashboard = (dashboard, items) => {\n    const val = {\n        ...dashboard,\n        dashboardItems: items,\n    };\n\n    return {\n        type: RECEIVED_EDIT_DASHBOARD,\n        value: val,\n    };\n};\n\nexport const acSetEditNewDashboard = () => ({\n    type: START_NEW_DASHBOARD,\n});\n\nexport const acClearEditDashboard = () => ({\n    type: RECEIVED_NOT_EDITING,\n});\n\nexport const acSetDashboardTitle = value => ({\n    type: RECEIVED_TITLE,\n    value,\n});\n\nexport const acSetDashboardDescription = value => ({\n    type: RECEIVED_DESCRIPTION,\n    value,\n});\n\nexport const acUpdateDashboardLayout = value => ({\n    type: RECEIVED_DASHBOARD_LAYOUT,\n    value,\n});\n\nexport const acAddDashboardItem = item => {\n    const type = item.type;\n    delete item.type;\n    const itemPropName = itemTypeMap[type].propName;\n\n    return {\n        type: ADD_DASHBOARD_ITEM,\n        value: {\n            id: generateUid(),\n            type,\n            [itemPropName]: item.content,\n            ...NEW_ITEM_SHAPE,\n        },\n    };\n};\n\nexport const acUpdateDashboardItem = item => ({\n    type: UPDATE_DASHBOARD_ITEM,\n    value: item,\n});\n\nexport const acRemoveDashboardItem = value => ({\n    type: REMOVE_DASHBOARD_ITEM,\n    value,\n});\n\n// thunks\n\nexport const tSaveDashboard = () => async (dispatch, getState) => {\n    const dashboard = sGetEditDashboardRoot(getState());\n\n    const dashboardItems = dashboard.dashboardItems.map(item => {\n        const text = isTextType(item)\n            ? item.text || emptyTextItemContent\n            : null;\n\n        const type = isSpacerType(item) ? TEXT : item.type;\n\n        return {\n            ...item,\n            ...(text ? { text } : {}),\n            type,\n        };\n    });\n\n    const dashboardToSave = {\n        ...dashboard,\n        dashboardItems,\n    };\n\n    try {\n        const dashboardId = dashboardToSave.id\n            ? await updateDashboard(dashboardToSave)\n            : await postDashboard(dashboardToSave);\n\n        dispatch(acClearEditDashboard());\n        await dispatch(tSetSelectedDashboardById(dashboardId));\n\n        return Promise.resolve(dashboardId);\n    } catch (error) {\n        onError(error);\n    }\n};\n","import {\n    SET_DASHBOARDS,\n    ADD_DASHBOARDS,\n    SET_DASHBOARD_STARRED,\n    SET_DASHBOARD_DISPLAY_NAME,\n    SET_DASHBOARD_ITEMS,\n} from '../reducers/dashboards';\nimport {\n    getCustomDashboards,\n    sGetDashboardById,\n    sGetDashboardsSortedByStarred,\n} from '../reducers/dashboards';\nimport { sGetUserUsername } from '../reducers/user';\nimport { tSetSelectedDashboardById, acSetSelectedId } from './selected';\nimport { acClearEditDashboard } from './editDashboard';\nimport {\n    apiFetchDashboards,\n    apiStarDashboard,\n    apiDeleteDashboard,\n} from '../api/dashboards';\nimport { getPreferredDashboardId } from '../api/localStorage';\nimport { arrayToIdMap } from '../modules/util';\n\n// actions\n\nexport const acSetDashboards = dashboards => ({\n    type: SET_DASHBOARDS,\n    value: arrayToIdMap(getCustomDashboards(dashboards)),\n});\n\nexport const acAppendDashboards = dashboards => ({\n    type: ADD_DASHBOARDS,\n    value: arrayToIdMap(getCustomDashboards(dashboards)),\n});\n\nexport const acSetDashboardStarred = (dashboardId, isStarred) => ({\n    type: SET_DASHBOARD_STARRED,\n    dashboardId: dashboardId,\n    value: isStarred,\n});\n\nexport const acSetDashboardDisplayName = (dashboardId, value) => ({\n    type: SET_DASHBOARD_DISPLAY_NAME,\n    dashboardId,\n    value,\n});\n\nexport const acSetDashboardItems = value => ({\n    type: SET_DASHBOARD_ITEMS,\n    value,\n});\n\n// thunks\n\nexport const tFetchDashboards = () => async dispatch => {\n    const collection = await apiFetchDashboards();\n    dispatch(acSetDashboards(collection.toArray()));\n};\n\nexport const tSelectDashboard = id => async (dispatch, getState) => {\n    const onError = error => {\n        console.log('Error (apiFetchDashboards): ', error);\n        return error;\n    };\n\n    try {\n        const state = getState();\n\n        let dashboardToSelect = null;\n        if (id) {\n            dashboardToSelect = sGetDashboardById(state, id) || null;\n        } else {\n            const preferredId = getPreferredDashboardId(\n                sGetUserUsername(state)\n            );\n            const dash = sGetDashboardById(state, preferredId);\n            dashboardToSelect =\n                preferredId && dash\n                    ? dash\n                    : sGetDashboardsSortedByStarred(state)[0];\n        }\n\n        if (dashboardToSelect) {\n            dispatch(tSetSelectedDashboardById(dashboardToSelect.id));\n        } else {\n            dispatch(acSetSelectedId(false));\n        }\n    } catch (err) {\n        return onError(err);\n    }\n};\n\nexport const tStarDashboard = (id, isStarred) => async (dispatch, getState) => {\n    const onSuccess = id => {\n        dispatch(acSetDashboardStarred(id, isStarred));\n        return id;\n    };\n\n    const onError = error => {\n        console.log('Error (apiStarDashboard): ', error);\n        return error;\n    };\n    try {\n        await apiStarDashboard(id, isStarred);\n        return onSuccess(id);\n    } catch (err) {\n        return onError(err);\n    }\n};\n\nexport const tDeleteDashboard = id => async (dispatch, getState) => {\n    try {\n        await apiDeleteDashboard(id);\n        dispatch(acClearEditDashboard());\n        dispatch(acSetSelectedId());\n        dispatch(acSetDashboardItems([]));\n\n        await dispatch(tFetchDashboards());\n\n        return Promise.resolve();\n    } catch (err) {\n        console.log('Error (deleteDashboard): ', err);\n        return err;\n    }\n};\n","/** @module reducers/controlBar */\nimport { combineReducers } from 'redux';\nimport { validateReducer } from '../modules/util';\n\nexport const SET_CONTROLBAR_USER_ROWS = 'SET_CONTROLBAR_USER_ROWS';\n\nexport const DEFAULT_STATE_CONTROLBAR_ROWS = 1;\n\nconst userRows = (state = DEFAULT_STATE_CONTROLBAR_ROWS, action) => {\n    switch (action.type) {\n        case SET_CONTROLBAR_USER_ROWS:\n            return validateReducer(action.value, DEFAULT_STATE_CONTROLBAR_ROWS);\n        default:\n            return state;\n    }\n};\n\nexport default combineReducers({\n    userRows,\n});\n\n/**\n * Selectors that point to specific props in the state object\n * @function\n * @param {Object} state\n * @returns {Object}\n */\nexport const sGetControlBarRoot = state => state.controlBar;\n\n// Selector dependency level 2\n\nexport const sGetControlBarUserRows = state =>\n    sGetControlBarRoot(state).userRows;\n","import { getInstance } from 'd2';\nimport { DEFAULT_STATE_CONTROLBAR_ROWS } from '../reducers/controlBar';\n\nconst NAMESPACE = 'dashboard';\nconst KEY = 'controlBarRows';\n\nconst hasNamespace = async d2 => await d2.currentUser.dataStore.has(NAMESPACE);\n\nconst getNamespace = async (d2, hasNamespace) =>\n    hasNamespace\n        ? await d2.currentUser.dataStore.get(NAMESPACE)\n        : await d2.currentUser.dataStore.create(NAMESPACE);\n\nexport const apiGetControlBarRows = async () => {\n    const d2 = await getInstance();\n    const namespace = await getNamespace(d2, await hasNamespace(d2));\n    const hasKey = namespace.keys && namespace.keys.find(key => key === KEY);\n\n    if (hasKey) {\n        return await namespace.get(KEY);\n    } else {\n        await apiPostControlBarRows(DEFAULT_STATE_CONTROLBAR_ROWS, namespace);\n        console.log(\n            '(These errors to /userDataStore/dashboard can be ignored)'\n        );\n        return DEFAULT_STATE_CONTROLBAR_ROWS;\n    }\n};\n\nexport const apiPostControlBarRows = async (rows, namespace) => {\n    const d2 = await getInstance();\n    const ns = namespace || (await getNamespace(d2, hasNamespace));\n\n    ns.set(KEY, rows);\n};\n","import { SET_CONTROLBAR_USER_ROWS } from '../reducers/controlBar';\nimport { apiGetControlBarRows } from '../api/controlBar';\n\n// actions\n\nexport const acSetControlBarUserRows = rows => ({\n    type: SET_CONTROLBAR_USER_ROWS,\n    value: rows,\n});\n\n// thunks\n\nexport const tSetControlBarRows = () => async (dispatch, getState) => {\n    const onSuccess = rows => {\n        dispatch(acSetControlBarUserRows(rows));\n    };\n\n    const onError = error => {\n        console.log('Error (apiGetControlBarRows): ', error);\n        return error;\n    };\n\n    try {\n        const controlBarRows = await apiGetControlBarRows();\n        return onSuccess(controlBarRows);\n    } catch (err) {\n        return onError(err);\n    }\n};\n","const lightGrey = '#ECEFF1';\nconst lightMediumGrey = '#9E9E9E';\nconst mediumGrey = '#393939';\nconst charcoalGrey = '#8C8C8C';\nconst darkGrey = '#494949';\nconst muiDefaultGrey = '#757575';\n\nconst red = '#E53935';\n\nconst paleBlue = '#E3F2FD';\nconst lightBlue = '#EAF4FF'; //'#63A4FF'\nconst royalBlue = '#004BA0';\n\nconst mint = '#B2DFDB';\nconst lightGreen = '#48A999';\nconst mediumGreen = '#00796B';\nconst darkGreen = '#004C40';\n\nconst paleYellow = '#FFF8E1';\n\nconst white = '#FFFFFF';\nconst black = 'rgba(0,0,0,0.87)';\n\nexport const colors = {\n    lightGrey,\n    lightMediumGrey,\n    mediumGrey,\n    charcoalGrey,\n    darkGrey,\n    muiDefaultGrey,\n    red,\n    paleBlue,\n    lightBlue,\n    royalBlue,\n    mint,\n    lightGreen,\n    mediumGreen,\n    darkGreen,\n    paleYellow,\n    white,\n    black,\n};\n","import { getInstance } from 'd2';\n\nexport const apiPostDataStatistics = async (eventType, id) => {\n    const d2 = await getInstance();\n    const url = `dataStatistics?eventType=${eventType}&favorite=${id}`;\n\n    d2.Api.getApi().post(url);\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport MuiChip from 'material-ui/Chip';\nimport Avatar from 'material-ui/Avatar';\nimport IconStar from '@material-ui/icons/Star';\nimport { Link } from 'react-router-dom';\nimport debounce from 'lodash/debounce';\n\nimport { colors } from '../../modules/colors';\nimport { apiPostDataStatistics } from '../../api/dataStatistics';\n\nconst chipTheme = {\n    default: {\n        labelColor: colors.black,\n        backgroundColor: colors.lightGrey,\n    },\n    primary: {\n        labelColor: colors.black,\n        backgroundColor: colors.lightGrey,\n    },\n    accent: {\n        labelColor: colors.white,\n        backgroundColor: colors.mediumGreen,\n    },\n};\n\nconst d = '30px';\n\nconst avatar = selected => {\n    const avatarProps = {\n        color: colors.white,\n        backgroundColor: selected ? 'transparent' : colors.lightMediumGrey,\n        style: { height: d, width: d },\n    };\n\n    return <Avatar icon={<IconStar />} {...avatarProps} />;\n};\n\nconst DashboardItemChip = ({ starred, selected, label, dashboardId }) => {\n    const chipColorProps = selected\n        ? chipTheme.accent\n        : starred\n        ? chipTheme.primary\n        : chipTheme.default;\n\n    const labelStyle = { fontSize: '14px', fontWeight: 400, lineHeight: d };\n    const style = { margin: 3, height: d, cursor: 'pointer' };\n\n    const props = {\n        style,\n        labelStyle,\n        ...chipColorProps,\n    };\n\n    return (\n        <Link\n            style={{\n                display: 'inline-block',\n                verticalAlign: 'top',\n                textDecoration: 'none',\n            }}\n            to={`/${dashboardId}`}\n            onClick={debounce(\n                () => apiPostDataStatistics('DASHBOARD_VIEW', dashboardId),\n                500\n            )}\n        >\n            <MuiChip {...props}>\n                {starred ? avatar(selected) : null}\n                {label}\n            </MuiChip>\n        </Link>\n    );\n};\n\nDashboardItemChip.propTypes = {\n    starred: PropTypes.bool.isRequired,\n    selected: PropTypes.bool.isRequired,\n    label: PropTypes.string.isRequired,\n};\n\nexport default DashboardItemChip;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport IconButton from 'material-ui/IconButton';\nimport IconAdd from 'material-ui/svg-icons/content/add-circle';\nimport { colors } from '../modules/colors';\n\nconst styles = {\n    button: {\n        width: 36,\n        height: 36,\n        padding: 0,\n    },\n    iconStyle: {\n        width: 32,\n        height: 32,\n    },\n    icon: IconAdd,\n    iconColor: colors.mediumGreen,\n};\n\nconst D2IconButton = props => (\n    <IconButton\n        style={styles.button}\n        iconStyle={Object.assign({}, styles.iconStyle, props.iconStyle)}\n        onClick={props.onClick}\n    >\n        {props.icon || <IconAdd color={styles.iconColor} />}\n    </IconButton>\n);\n\nD2IconButton.propTypes = {\n    style: PropTypes.object,\n    iconStyle: PropTypes.object,\n    icon: PropTypes.object,\n    iconColor: PropTypes.string,\n    onClick: PropTypes.func,\n};\n\nD2IconButton.defaultProps = {\n    style: null,\n    iconStyle: null,\n    icon: null,\n    iconColor: '',\n    onClick: Function.prototype,\n};\n\nexport default D2IconButton;\n","import { combineReducers } from 'redux';\nimport { validateReducer } from '../modules/util';\n\nexport const SET_DASHBOARDS_FILTER_NAME = 'SET_DASHBOARDS_FILTER_NAME';\nexport const SET_DASHBOARDS_FILTER_OWNER = 'SET_DASHBOARDS_FILTER_OWNER';\nexport const SET_DASHBOARDS_FILTER_ORDER = 'SET_DASHBOARDS_FILTER_ORDER';\n\nexport const ownerData = [\n    { id: 'ALL', value: 'All users' },\n    { id: 'ME', value: 'Created by me' },\n    { id: 'OTHERS', value: 'Created by others' },\n];\n\nexport const orderData = [\n    { id: 'NAME:ASC', value: 'Name (asc)' },\n    { id: 'NAME:ASC', value: 'Name (desc)' },\n    { id: 'ITEMS:ASC', value: 'Number of items (asc)' },\n    { id: 'ITEMS:ASC', value: 'Number of items (desc)' },\n    { id: 'CREATED:ASC', value: 'Created date (asc)' },\n    { id: 'CREATED:ASC', value: 'Created date (desc)' },\n];\n\nexport const DEFAULT_STATE_DASHBOARDS_FILTER_NAME = '';\nexport const DEFAULT_STATE_DASHBOARDS_FILTER_OWNER = ownerData[0].id;\nexport const DEFAULT_STATE_DASHBOARDS_FILTER_ORDER = orderData[0].id;\n\nconst name = (state = DEFAULT_STATE_DASHBOARDS_FILTER_NAME, action) => {\n    switch (action.type) {\n        case SET_DASHBOARDS_FILTER_NAME:\n            return validateReducer(\n                action.value,\n                DEFAULT_STATE_DASHBOARDS_FILTER_NAME\n            );\n        default:\n            return state;\n    }\n};\n\nconst owner = (state = DEFAULT_STATE_DASHBOARDS_FILTER_OWNER, action) => {\n    switch (action.type) {\n        case SET_DASHBOARDS_FILTER_OWNER:\n            return validateReducer(\n                action.value,\n                DEFAULT_STATE_DASHBOARDS_FILTER_NAME\n            );\n        default:\n            return state;\n    }\n};\n\nconst order = (state = DEFAULT_STATE_DASHBOARDS_FILTER_ORDER, action) => {\n    switch (action.type) {\n        case SET_DASHBOARDS_FILTER_ORDER:\n            return validateReducer(\n                action.value,\n                DEFAULT_STATE_DASHBOARDS_FILTER_ORDER\n            );\n        default:\n            return state;\n    }\n};\n\nexport default combineReducers({\n    name,\n    owner,\n    order,\n});\n\n// selectors\n\nexport const sGetDashboardsFilterRoot = state => state.dashboardsFilter;\n\n// selector dependency level 2\n\nexport const sGetFilterName = state => sGetDashboardsFilterRoot(state).name;\nexport const sGetFilterOwner = state => sGetDashboardsFilterRoot(state).owner;\nexport const sGetFilterOrder = state => sGetDashboardsFilterRoot(state).order;\n","import React, { Component, Fragment } from 'react';\nimport i18n from '@dhis2/d2-i18n';\nimport PropTypes from 'prop-types';\nimport TextField from 'material-ui/TextField';\nimport IconButton from 'material-ui/IconButton';\nimport IconClear from '@material-ui/icons/Clear';\nimport isEmpty from 'd2-utilizr/lib/isEmpty';\n\nimport { DEFAULT_STATE_DASHBOARDS_FILTER_NAME } from '../../reducers/dashboardsFilter';\n\nexport const KEYCODE_ENTER = 13;\nexport const KEYCODE_ESCAPE = 27;\n\nconst styles = {\n    filterField: {\n        fontSize: '14px',\n        width: '200px',\n        height: '30px',\n        top: '-2px',\n    },\n    filterFieldInput: {\n        top: '-9px',\n        left: '1px',\n    },\n    filterFieldUnderline: {\n        bottom: '10px',\n    },\n    filterFieldUnderlineFocus: {\n        borderColor: '#aaa',\n        borderWidth: '1px',\n    },\n    clearButton: {\n        width: '20px',\n        height: '24px',\n        padding: 0,\n        top: '-5px',\n        left: '-18px',\n    },\n    clearButtonIcon: {\n        width: '16px',\n        height: '16px',\n    },\n};\n\nexport class Filter extends Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            value: DEFAULT_STATE_DASHBOARDS_FILTER_NAME,\n        };\n    }\n\n    componentWillReceiveProps(nextProps) {\n        this.setState({\n            value: nextProps.name,\n        });\n    }\n\n    setFilterValue = event => {\n        event.preventDefault();\n\n        this.props.onChangeName(event.target.value);\n    };\n\n    handleKeyUp = event => {\n        switch (event.keyCode) {\n            case KEYCODE_ENTER:\n                this.props.onKeypressEnter();\n                break;\n            case KEYCODE_ESCAPE:\n                this.props.onChangeName();\n                break;\n            default:\n                break;\n        }\n    };\n\n    render() {\n        return (\n            <TextField\n                className=\"FilterField\"\n                value={this.state.value}\n                onChange={this.setFilterValue}\n                onKeyUp={this.handleKeyUp}\n                hintText={i18n.t('Search for a dashboard')}\n                style={styles.filterField}\n                inputStyle={styles.filterFieldInput}\n                hintStyle={styles.filterFieldHint}\n                underlineStyle={styles.filterFieldUnderline}\n                underlineFocusStyle={styles.filterFieldUnderlineFocus}\n            />\n        );\n    }\n}\n\nFilter.propTypes = {\n    name: PropTypes.string,\n    onChangeName: PropTypes.func,\n};\n\nFilter.defaultProps = {\n    name: '',\n    onChangeName: Function.prototype,\n};\n\nexport const ClearButton = ({ name, onChangeName }) => {\n    const disabled = isEmpty(name);\n\n    const clearFilter = () => onChangeName();\n\n    return (\n        <IconButton\n            style={Object.assign({}, styles.clearButton, {\n                opacity: disabled ? 0 : 1,\n            })}\n            iconStyle={styles.clearButtonIcon}\n            onClick={clearFilter}\n            disabled={disabled}\n        >\n            <IconClear color=\"action\" />\n        </IconButton>\n    );\n};\n\nClearButton.propTypes = {\n    name: PropTypes.string.isRequired,\n    onChangeName: PropTypes.func.isRequired,\n};\n\nexport default props => (\n    <Fragment>\n        <Filter {...props} />\n        <ClearButton {...props} />\n    </Fragment>\n);\n","import React from 'react';\nimport i18n from '@dhis2/d2-i18n';\nimport { withStyles } from '@material-ui/core/styles';\n\nimport { colors } from '../../modules/colors';\n\nexport const SHOWMORE_BAR_HEIGHT = 16;\n\nconst styles = {\n    showMore: {\n        color: colors.royalBlue,\n        cursor: 'pointer',\n        fontSize: 11,\n        fontWeight: 700,\n        height: SHOWMORE_BAR_HEIGHT,\n        paddingTop: 5,\n        textTransform: 'uppercase',\n        visibility: 'visible',\n    },\n};\n\nexport const ShowMoreButton = ({ onClick, isMaxHeight, classes }) => (\n    <div style={{ textAlign: 'center' }}>\n        <div className={classes.showMore} onClick={onClick}>\n            {isMaxHeight ? i18n.t('Show less') : i18n.t('Show more')}\n        </div>\n    </div>\n);\n\nexport default withStyles(styles)(ShowMoreButton);\n","import { END_FLAP_HEIGHT } from '@dhis2/d2-ui-core/control-bar/ControlBar';\nimport { SHOWMORE_BAR_HEIGHT } from './ShowMoreButton';\n\nexport const CONTROL_BAR_ROW_HEIGHT = 36;\nexport const FIRST_ROW_PADDING_HEIGHT = 10;\nexport const HEADERBAR_HEIGHT = 48;\n\nexport const MIN_ROW_COUNT = 1;\n\nconst CONTROL_BAR_OUTER_HEIGHT_DIFF =\n    FIRST_ROW_PADDING_HEIGHT + SHOWMORE_BAR_HEIGHT - 2; // 2 pixel \"adjustment\"\n\nexport const getRowsHeight = rows => {\n    return rows * CONTROL_BAR_ROW_HEIGHT;\n};\n\nexport const getNumRowsFromHeight = height => {\n    return Math.floor(\n        (height - CONTROL_BAR_OUTER_HEIGHT_DIFF) / CONTROL_BAR_ROW_HEIGHT\n    );\n};\n\nexport const getControlBarHeight = (rows, expandable) => {\n    const flapHeight = !expandable ? END_FLAP_HEIGHT : 0;\n\n    return getRowsHeight(rows) + CONTROL_BAR_OUTER_HEIGHT_DIFF + flapHeight;\n};\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { Link, withRouter } from 'react-router-dom';\nimport ControlBar from '@dhis2/d2-ui-core/control-bar/ControlBar';\nimport arraySort from 'd2-utilizr/lib/arraySort';\n\nimport Chip from './DashboardItemChip';\nimport D2IconButton from '../../widgets/D2IconButton';\nimport Filter from './Filter';\nimport ShowMoreButton from './ShowMoreButton';\nimport {\n    FIRST_ROW_PADDING_HEIGHT,\n    MIN_ROW_COUNT,\n    getRowsHeight,\n    getControlBarHeight,\n    getNumRowsFromHeight,\n} from './controlBarDimensions';\nimport { sGetControlBarUserRows } from '../../reducers/controlBar';\nimport { sGetAllDashboards } from '../../reducers/dashboards';\nimport { sGetFilterName } from '../../reducers/dashboardsFilter';\nimport { sGetSelectedId } from '../../reducers/selected';\nimport { acSetControlBarUserRows } from '../../actions/controlBar';\nimport { acSetFilterName } from '../../actions/dashboardsFilter';\nimport { orObject, orArray } from '../../modules/util';\nimport { apiPostControlBarRows } from '../../api/controlBar';\n\nimport './ControlBar.css';\n\nexport const MAX_ROW_COUNT = 10;\n\nexport class DashboardsBar extends Component {\n    state = {\n        rows: MIN_ROW_COUNT,\n    };\n\n    setInitialDashboardState = rows => {\n        this.setState({ rows, isMaxHeight: rows === MAX_ROW_COUNT });\n    };\n\n    componentDidMount() {\n        this.setInitialDashboardState(this.props.userRows);\n    }\n\n    componentWillReceiveProps(nextProps) {\n        this.setInitialDashboardState(nextProps.userRows);\n    }\n\n    onChangeHeight = newHeight => {\n        const newRows = Math.max(\n            MIN_ROW_COUNT,\n            getNumRowsFromHeight(newHeight)\n        );\n\n        if (newRows !== this.state.rows) {\n            const newRowCount = Math.min(newRows, MAX_ROW_COUNT);\n\n            this.props.onChangeHeight(newRowCount);\n        }\n    };\n\n    onEndDrag = () => {\n        return apiPostControlBarRows(this.state.rows);\n    };\n\n    onToggleMaxHeight = () => {\n        const rows =\n            this.state.rows === MAX_ROW_COUNT\n                ? this.props.userRows\n                : MAX_ROW_COUNT;\n\n        this.setState({ rows, isMaxHeight: !this.state.isMaxHeight });\n    };\n\n    onSelectDashboard = () => {\n        this.props.history.push(`/${this.props.dashboards[0].id}`);\n    };\n\n    render() {\n        const { dashboards, name, selectedId, onChangeFilterName } = this.props;\n\n        const rowCount = this.state.isMaxHeight\n            ? MAX_ROW_COUNT\n            : this.state.rows;\n        const controlBarHeight = getControlBarHeight(rowCount, true);\n        const contentWrapperStyle = {\n            padding: `${FIRST_ROW_PADDING_HEIGHT}px 6px 0 6px`,\n            overflowY: this.state.isMaxHeight ? 'auto' : 'hidden',\n            height: getRowsHeight(rowCount) + FIRST_ROW_PADDING_HEIGHT,\n        };\n\n        return (\n            <ControlBar\n                height={controlBarHeight}\n                onChangeHeight={this.onChangeHeight}\n                onEndDrag={this.onEndDrag}\n                editMode={false}\n                expandable={true}\n            >\n                <div style={contentWrapperStyle}>\n                    <div className=\"left-controls\">\n                        <Link\n                            style={{\n                                display: 'inline-block',\n                                textDecoration: 'none',\n                                marginRight: 10,\n                            }}\n                            to={'/new'}\n                        >\n                            <D2IconButton />\n                        </Link>\n                        <Filter\n                            name={name}\n                            onChangeName={onChangeFilterName}\n                            onKeypressEnter={this.onSelectDashboard}\n                        />\n                    </div>\n                    {orArray(dashboards).map(dashboard => (\n                        <Chip\n                            key={dashboard.id}\n                            label={dashboard.displayName}\n                            starred={dashboard.starred}\n                            dashboardId={dashboard.id}\n                            selected={dashboard.id === selectedId}\n                        />\n                    ))}\n                </div>\n                {this.props.userRows !== MAX_ROW_COUNT ? (\n                    <ShowMoreButton\n                        onClick={this.onToggleMaxHeight}\n                        isMaxHeight={this.state.isMaxHeight}\n                    />\n                ) : null}\n            </ControlBar>\n        );\n    }\n}\n\nconst mapStateToProps = state => ({\n    dashboards: sGetAllDashboards(state),\n    name: sGetFilterName(state),\n    userRows: sGetControlBarUserRows(state),\n    selectedId: sGetSelectedId(state),\n});\n\nconst mapDispatchToProps = {\n    onChangeHeight: acSetControlBarUserRows,\n    onChangeFilterName: acSetFilterName,\n};\nconst mergeProps = (stateProps, dispatchProps, ownProps) => {\n    const dashboards = Object.values(orObject(stateProps.dashboards));\n    const displayDashboards = arraySort(\n        dashboards.filter(d =>\n            d.displayName.toLowerCase().includes(stateProps.name.toLowerCase())\n        ),\n        'ASC',\n        'displayName'\n    );\n\n    return {\n        ...stateProps,\n        ...ownProps,\n        ...dispatchProps,\n        dashboards: [\n            ...displayDashboards.filter(d => d.starred),\n            ...displayDashboards.filter(d => !d.starred),\n        ],\n    };\n};\n\nexport default withRouter(\n    connect(\n        mapStateToProps,\n        mapDispatchToProps,\n        mergeProps\n    )(DashboardsBar)\n);\n","import {\n    SET_DASHBOARDS_FILTER_NAME,\n    SET_DASHBOARDS_FILTER_OWNER,\n    SET_DASHBOARDS_FILTER_ORDER,\n} from '../reducers/dashboardsFilter';\n\n// actions\n\nexport const acSetFilterName = value => ({\n    type: SET_DASHBOARDS_FILTER_NAME,\n    value,\n});\n\nexport const acSetFilterOwner = value => ({\n    type: SET_DASHBOARDS_FILTER_OWNER,\n    value,\n});\n\nexport const acSetFilterOrder = value => ({\n    type: SET_DASHBOARDS_FILTER_ORDER,\n    value,\n});\n","import React from 'react';\nimport { connect } from 'react-redux';\n\nimport {\n    HEADERBAR_HEIGHT,\n    getControlBarHeight,\n    MIN_ROW_COUNT,\n} from '../ControlBar/controlBarDimensions';\nimport { sGetControlBarUserRows } from '../../reducers/controlBar';\n\nconst DashboardVerticalOffset = props => {\n    const rows = props.editMode ? MIN_ROW_COUNT : props.userRows;\n    const marginTop = HEADERBAR_HEIGHT + getControlBarHeight(rows, false);\n\n    return <div className=\"page-container-top-margin\" style={{ marginTop }} />;\n};\n\nconst mapStateToProps = state => ({\n    userRows: sGetControlBarUserRows(state),\n});\n\nexport default connect(mapStateToProps)(DashboardVerticalOffset);\n","import i18n from '@dhis2/d2-i18n';\nimport {\n    itemTypeMap,\n    spacerContent,\n    REPORT_TABLE,\n    CHART,\n    MAP,\n    EVENT_CHART,\n    EVENT_REPORT,\n    USERS,\n    REPORTS,\n    RESOURCES,\n    APP,\n    MESSAGES,\n    TEXT,\n    SPACER,\n} from '../../modules/itemTypes';\n\nexport const singleItems = [\n    {\n        id: 'additional',\n        header: 'Additional items',\n        items: [\n            {\n                type: TEXT,\n                name: i18n.t('Text box'),\n                content: '',\n            },\n            {\n                type: MESSAGES,\n                name: i18n.t('Messages'),\n                content: 'true',\n            },\n            {\n                type: SPACER,\n                name: i18n.t('Spacer'),\n                content: spacerContent,\n            },\n        ],\n    },\n];\n\nexport const listItems = [\n    {\n        id: REPORT_TABLE,\n        title: itemTypeMap[REPORT_TABLE].pluralTitle,\n    },\n    {\n        id: CHART,\n        title: itemTypeMap[CHART].pluralTitle,\n    },\n    { id: MAP, title: itemTypeMap[MAP].pluralTitle },\n    {\n        id: EVENT_REPORT,\n        title: itemTypeMap[EVENT_REPORT].pluralTitle,\n    },\n    {\n        id: EVENT_CHART,\n        title: itemTypeMap[EVENT_CHART].pluralTitle,\n    },\n    {\n        id: USERS,\n        title: itemTypeMap[USERS].pluralTitle,\n    },\n    {\n        id: REPORTS,\n        title: itemTypeMap[REPORTS].pluralTitle,\n    },\n    {\n        id: RESOURCES,\n        title: itemTypeMap[RESOURCES].pluralTitle,\n    },\n    { id: APP, title: itemTypeMap[APP].pluralTitle },\n];\n","import React, { Component, Fragment } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport i18n from '@dhis2/d2-i18n';\nimport Divider from 'material-ui/Divider';\nimport { List, ListItem } from 'material-ui/List';\nimport Button from 'd2-ui/lib/button/Button';\nimport LaunchIcon from '@material-ui/icons/Launch';\nimport { tAddListItemContent } from './actions';\nimport { acAddDashboardItem } from '../../actions/editDashboard';\nimport { sGetEditDashboardRoot } from '../../reducers/editDashboard';\nimport {\n    getItemUrl,\n    getItemIcon,\n    APP,\n    CHART,\n    EVENT_CHART,\n    REPORT_TABLE,\n    EVENT_REPORT,\n    MAP,\n    REPORTS,\n    RESOURCES,\n    USERS,\n} from '../../modules/itemTypes';\nimport { colors } from '../../modules/colors';\n\nclass ItemSelectList extends Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            seeMore: false,\n        };\n    }\n\n    addItem = item => () => {\n        const {\n            type,\n            dashboardId,\n            acAddDashboardItem,\n            tAddListItemContent,\n        } = this.props;\n\n        const newItem = {\n            id: item.id,\n            name: item.displayName || item.name,\n        };\n\n        // special handling for ListItem types\n        if (type.match(/(REPORTS|RESOURCES|USERS)/)) {\n            tAddListItemContent(dashboardId, type, newItem);\n        } else if (type === APP) {\n            acAddDashboardItem({ type, content: item.key });\n        } else {\n            acAddDashboardItem({ type, content: newItem });\n        }\n    };\n\n    toggleSeeMore = () => {\n        this.setState({ seeMore: !this.state.seeMore });\n\n        this.props.onChangeItemsLimit(this.props.type);\n    };\n\n    render() {\n        return (\n            <Fragment>\n                <div\n                    style={{\n                        display: 'flex',\n                        justifyContent: 'space-between',\n                        paddingLeft: '16px',\n                    }}\n                >\n                    <h3>{this.props.title}</h3>\n                    <Button\n                        color=\"primary\"\n                        style={{ textTransform: 'uppercase' }}\n                        onClick={this.toggleSeeMore}\n                    >\n                        {`${i18n.t('See')} ${\n                            this.state.seeMore\n                                ? i18n.t('fewer')\n                                : i18n.t('more')\n                        } ${this.props.title}`}\n                    </Button>\n                </div>\n                <Divider />\n                <List>\n                    {this.props.items.map(item => {\n                        const itemUrl = getItemUrl(\n                            this.props.type,\n                            item,\n                            this.context.d2\n                        );\n\n                        const ItemIcon = getItemIcon(this.props.type);\n\n                        return (\n                            <ListItem // apps don't have item.id\n                                key={item.id || item.key}\n                                leftIcon={\n                                    <ItemIcon\n                                        style={{\n                                            margin: '6px',\n                                            fill: colors.muiDefaultGrey,\n                                        }}\n                                    />\n                                }\n                                innerDivStyle={{ padding: '0px 0px 0px 42px' }}\n                                hoverColor=\"transparent\"\n                                primaryText={\n                                    <p\n                                        style={{\n                                            display: 'flex',\n                                            alignItems: 'center',\n                                            justifyContent: 'flex-start',\n                                            margin: 0,\n                                        }}\n                                    >\n                                        {item.displayName || item.name}\n                                        <Button\n                                            color=\"primary\"\n                                            onClick={this.addItem(item)}\n                                            style={{\n                                                marginLeft: '5px',\n                                                marginRight: '5px',\n                                            }}\n                                        >\n                                            + ADD\n                                        </Button>\n                                        {itemUrl && (\n                                            <a\n                                                target=\"_blank\"\n                                                rel=\"noopener noreferrer\"\n                                                href={itemUrl}\n                                                style={{ display: 'flex' }}\n                                            >\n                                                <LaunchIcon\n                                                    style={{\n                                                        width: '16px',\n                                                        height: '16px',\n                                                        fill:\n                                                            colors.muiDefaultGrey,\n                                                    }}\n                                                />\n                                            </a>\n                                        )}\n                                    </p>\n                                }\n                            />\n                        );\n                    })}\n                </List>\n            </Fragment>\n        );\n    }\n}\n\nItemSelectList.propTypes = {\n    type: PropTypes.oneOf([\n        APP,\n        CHART,\n        EVENT_CHART,\n        REPORT_TABLE,\n        EVENT_REPORT,\n        MAP,\n        REPORTS,\n        RESOURCES,\n        USERS,\n    ]).isRequired,\n    title: PropTypes.string.isRequired,\n    items: PropTypes.array.isRequired,\n    onChangeItemsLimit: PropTypes.func.isRequired,\n};\n\nItemSelectList.contextTypes = {\n    d2: PropTypes.object.isRequired,\n};\n\nexport default connect(\n    state => ({\n        dashboardId: sGetEditDashboardRoot(state).id,\n    }),\n    {\n        acAddDashboardItem,\n        tAddListItemContent,\n    }\n)(ItemSelectList);\n","import { sGetEditDashboardRoot } from '../../reducers/editDashboard';\nimport { itemTypeMap } from '../../modules/itemTypes';\nimport {\n    acAddDashboardItem,\n    acUpdateDashboardItem,\n} from '../../actions/editDashboard';\n\nexport const tAddListItemContent = (dashboardId, type, content) => (\n    dispatch,\n    getState\n) => {\n    const state = getState();\n    const listItemType = itemTypeMap[type].propName;\n    const dashboardItems = sGetEditDashboardRoot(state).dashboardItems;\n    const dashboardItemIndex = dashboardItems.findIndex(\n        item => item.type === type\n    );\n    let dashboardItem;\n\n    // Reports/Resources/Users dashboard item type already present in dashboard\n    if (dashboardItemIndex > -1) {\n        dashboardItem = dashboardItems[dashboardItemIndex];\n        dashboardItem[listItemType].push(content);\n\n        dispatch(acUpdateDashboardItem(dashboardItem));\n    } else {\n        dashboardItem = {\n            type: type,\n            content: [content],\n        };\n\n        dispatch(acAddDashboardItem(dashboardItem));\n    }\n};\n","import React, { Fragment } from 'react';\nimport { connect } from 'react-redux';\nimport Divider from 'material-ui/Divider';\nimport { List, ListItem } from 'material-ui/List';\nimport Button from 'd2-ui/lib/button/Button';\nimport { getItemIcon } from '../../modules/itemTypes';\n\nimport { acAddDashboardItem } from '../../actions/editDashboard';\n\nconst SingleItem = ({ item, onAddToDashboard }) => {\n    const ItemIcon = getItemIcon(item.type);\n    return (\n        <ListItem\n            key={item.type}\n            leftIcon={<ItemIcon style={{ margin: '6px' }} />}\n            innerDivStyle={{ padding: '0px 0px 0px 42px' }}\n            hoverColor=\"transparent\"\n            primaryText={\n                <p\n                    style={{\n                        display: 'flex',\n                        alignItems: 'center',\n                        justifyContent: 'flex-start',\n                        margin: 0,\n                    }}\n                >\n                    {item.name}\n                    <Button\n                        color=\"primary\"\n                        onClick={onAddToDashboard}\n                        style={{\n                            marginLeft: '5px',\n                            marginRight: '5px',\n                        }}\n                    >\n                        + ADD\n                    </Button>\n                </p>\n            }\n        />\n    );\n};\n\nconst ItemSelectSingle = ({ acAddDashboardItem, category }) => {\n    const addToDashboard = ({ type, content }) => () => {\n        acAddDashboardItem({ type, content });\n    };\n\n    return (\n        <Fragment>\n            <div\n                style={{\n                    display: 'flex',\n                    justifyContent: 'space-between',\n                    paddingLeft: '16px',\n                }}\n            >\n                <h3>{category.header}</h3>\n            </div>\n            <Divider />\n            <List>\n                {category.items.map(item => (\n                    <SingleItem\n                        key={item.type}\n                        item={item}\n                        onAddToDashboard={addToDashboard(item)}\n                    />\n                ))}\n            </List>\n        </Fragment>\n    );\n};\n\nexport default connect(\n    null,\n    { acAddDashboardItem }\n)(ItemSelectSingle);\n","import React, { Fragment } from 'react';\nimport PropTypes from 'prop-types';\nimport i18n from '@dhis2/d2-i18n';\nimport Popover from '@material-ui/core/Popover';\nimport SearchIcon from '@material-ui/icons/Search';\nimport TextField from 'material-ui/TextField';\n\nimport { singleItems, listItems } from './selectableItems';\nimport { itemTypeMap } from '../../modules/itemTypes';\nimport ItemSelectList from './ItemSelectList';\nimport ItemSelectSingle from './ItemSelectSingle';\nimport { colors } from '../../modules/colors';\n\nimport './ItemSelect.css';\n\nconst styles = {\n    filterField: {\n        fontSize: '14px',\n        height: '30px',\n        marginLeft: '10px',\n    },\n    filterFieldInput: {\n        top: '-9px',\n        left: '1px',\n    },\n    filterFieldUnderline: {\n        bottom: '10px',\n    },\n    filterFieldUnderlineFocus: {\n        borderColor: '#aaa',\n        borderWidth: '1px',\n    },\n    searchIcon: {\n        fill: colors.muiDefaultGrey,\n    },\n};\n\nconst ItemSearchField = props => (\n    <div style={{ display: 'flex', alignItems: 'baseline' }}>\n        <SearchIcon style={styles.searchIcon} />\n        <TextField\n            hintText={i18n.t('Search for items to add to this dashboard')}\n            fullWidth={true}\n            value={props.value}\n            onClick={props.onClick}\n            onChange={props.onChange}\n            style={styles.filterField}\n            inputStyle={styles.filterFieldInput}\n            hintStyle={styles.filterFieldHint}\n            underlineStyle={styles.filterFieldUnderline}\n            underlineFocusStyle={styles.filterFieldUnderlineFocus}\n        />\n    </div>\n);\n\nclass ItemSelect extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            anchorEl: null,\n            open: false,\n            maxOptions: new Set(),\n            items: undefined,\n            filter: '',\n        };\n    }\n\n    closeList = () => {\n        this.setState({ open: false, filter: '' });\n    };\n\n    openList = event => {\n        this.fetchItems();\n\n        this.setState({\n            anchorEl: event.currentTarget,\n            open: true,\n        });\n    };\n\n    setFilter = event => {\n        this.setState({ filter: event.target.value }, this.fetchItems);\n    };\n\n    getListItems = items => {\n        return listItems.map(type => {\n            const itemType = itemTypeMap[type.id];\n\n            if (items && items[itemType.countName] > 0) {\n                return (\n                    <ItemSelectList\n                        key={type.id}\n                        type={type.id}\n                        title={type.title}\n                        items={items[itemType.endPointName]}\n                        onChangeItemsLimit={this.fetchItems}\n                    />\n                );\n            } else {\n                return null;\n            }\n        });\n    };\n\n    popoverChildren = items => {\n        const SingleItems = singleItems.map(category => (\n            <ItemSelectSingle key={category.id} category={category} />\n        ));\n        const ListItems = this.getListItems(items);\n\n        return ListItems.concat(SingleItems);\n    };\n\n    fetchItems = async maxOption => {\n        const api = this.context.d2.Api.getApi();\n\n        let queryString;\n\n        if (maxOption) {\n            const maxOptions = this.state.maxOptions;\n\n            if (maxOptions.has(maxOption)) {\n                maxOptions.delete(maxOption);\n            } else {\n                maxOptions.add(maxOption);\n            }\n\n            this.setState({\n                maxOptions,\n            });\n        } else {\n            this.setState({\n                maxOptions: new Set(),\n            });\n        }\n\n        if ([...this.state.maxOptions.values()].length) {\n            queryString =\n                'max=' + [...this.state.maxOptions.values()].join('&max=');\n        }\n\n        api.get(\n            `dashboards/q/${this.state.filter || ''}${\n                queryString ? `?${queryString}` : ''\n            }`\n        )\n            .then(response => {\n                this.setState({ items: response });\n            })\n            .catch(console.error);\n    };\n\n    render() {\n        return (\n            <Fragment>\n                <ItemSearchField\n                    value={this.state.filter}\n                    onClick={this.openList}\n                    onChange={this.setFilter}\n                />\n                <Popover\n                    className=\"dashboard-item-select\"\n                    open={this.state.open}\n                    onClose={this.closeList}\n                    anchorEl={this.state.anchorEl}\n                    anchorOrigin={{ horizontal: 'left', vertical: 'bottom' }}\n                    transformOrigin={{ horizontal: 'left', vertical: 'top' }}\n                    style={{ height: '70vh' }}\n                    PaperProps={{ style: { width: '700px' } }}\n                >\n                    {this.popoverChildren(this.state.items)}\n                </Popover>\n            </Fragment>\n        );\n    }\n}\n\nItemSelect.contextTypes = {\n    d2: PropTypes.object.isRequired,\n};\n\nexport default ItemSelect;\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport i18n from '@dhis2/d2-i18n';\nimport TextField from 'd2-ui/lib/text-field/TextField';\n\nimport {\n    acSetDashboardTitle,\n    acSetDashboardDescription,\n} from '../../actions/editDashboard';\nimport { orObject } from '../../modules/util';\nimport { sGetEditDashboardRoot } from '../../reducers/editDashboard';\nimport { sGetDashboardById } from '../../reducers/dashboards';\nimport ItemSelect from '../ItemSelect/ItemSelect';\n\nconst styles = {\n    section: { display: 'flex', justifyContent: 'space-between' },\n    titleDescription: {\n        flex: '3',\n        marginRight: '20px',\n    },\n    title: { padding: '6px 0' },\n    itemSelect: {\n        flex: '2',\n        minWidth: '300px',\n        maxWidth: '730px',\n        position: 'relative',\n        top: '33px',\n    },\n};\n\nexport const EditTitleBar = ({\n    name,\n    displayName,\n    description,\n    style,\n    onChangeTitle,\n    onChangeDescription,\n    classes,\n}) => {\n    const titleStyle = Object.assign({}, style.title, {\n        top: '-2px',\n    });\n\n    const translatedName = () => {\n        return displayName ? (\n            <span style={style.description}>\n                {i18n.t('Current translation')}: {displayName}\n            </span>\n        ) : null;\n    };\n\n    return (\n        <section className={classes.section}>\n            <div className={classes.titleDescription}>\n                <span>{i18n.t('Currently editing')}</span>\n                <div className={classes.title}>\n                    <TextField\n                        multiline\n                        fullWidth\n                        rows={1}\n                        rowsMax={3}\n                        style={titleStyle}\n                        value={name}\n                        placeholder={i18n.t('Add title here')}\n                        onChange={onChangeTitle}\n                    />\n                    {translatedName()}\n                </div>\n                <TextField\n                    multiline\n                    fullWidth\n                    rows={1}\n                    rowsMax={3}\n                    style={style.description}\n                    value={description}\n                    placeholder={i18n.t('Add description here')}\n                    onChange={onChangeDescription}\n                />\n            </div>\n            <div className={classes.itemSelect}>\n                <ItemSelect />\n            </div>\n        </section>\n    );\n};\n\nconst mapStateToProps = state => {\n    const selectedDashboard = orObject(sGetEditDashboardRoot(state));\n    const displayName = orObject(sGetDashboardById(state, selectedDashboard.id))\n        .displayName;\n\n    return {\n        name: selectedDashboard.name,\n        displayName,\n        description: selectedDashboard.description,\n    };\n};\n\nconst mapDispatchToProps = {\n    onChangeTitle: acSetDashboardTitle,\n    onChangeDescription: acSetDashboardDescription,\n};\n\nexport default connect(\n    mapStateToProps,\n    mapDispatchToProps\n)(withStyles(styles)(EditTitleBar));\n\nEditTitleBar.propTypes = {\n    name: PropTypes.string,\n    displayName: PropTypes.string,\n    description: PropTypes.string,\n    onChangeTitle: PropTypes.func.isRequired,\n    onChangeDescription: PropTypes.func.isRequired,\n    style: PropTypes.object,\n};\n\nEditTitleBar.defaultProps = {\n    name: '',\n    displayName: '',\n    description: '',\n    style: {},\n};\n","import React from 'react';\nimport MuiFlatButton from 'material-ui/FlatButton';\nimport { colors } from '../modules/colors';\n\nconst defaultStyles = {\n    color: colors.royalBlue,\n    backgroundColor: 'transparent',\n    minWidth: '30px',\n};\n\nconst FlatButton = ({ onClick, children, style, disabled }) => {\n    const label = typeof children === 'string' ? children : null;\n    const classes = ['d2ui-flat-button', disabled ? 'disabled' : null].join(\n        ' '\n    );\n\n    const combinedStyle = Object.assign({}, defaultStyles, style);\n\n    return (\n        <MuiFlatButton\n            className={classes}\n            style={combinedStyle}\n            onClick={onClick}\n            label={label}\n            disabled={disabled}\n        >\n            {typeof children !== 'string' ? children : null}\n        </MuiFlatButton>\n    );\n};\n\nexport default FlatButton;\n","import React from 'react';\nimport RaisedButton from 'material-ui/RaisedButton';\n\nimport './PrimaryButton.css';\n\nconst PrimaryButton = props => {\n    const { onClick, children, disabled, style } = props;\n    const label = typeof children === 'string' ? children : null;\n    const classes = ['d2ui-primary-button', disabled ? 'disabled' : null].join(\n        ' '\n    );\n\n    return (\n        <RaisedButton\n            className={classes}\n            style={style}\n            primary={true}\n            onClick={onClick}\n            label={label}\n            disabled={disabled}\n        />\n    );\n};\n\nexport default PrimaryButton;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nconst styles = {\n    textLink: {\n        fontSize: '14px',\n        fontWeight: 400,\n        color: '#000',\n        cursor: 'pointer',\n    },\n    textLinkHover: {\n        color: '#666',\n    },\n};\n\nclass D2TextLink extends Component {\n    constructor(props) {\n        super(props);\n\n        this.onMouseOverHandle = this.onMouseOverHandle.bind(this);\n        this.onMouseOutHandle = this.onMouseOutHandle.bind(this);\n\n        const { style } = props;\n\n        this.state = Object.assign({}, styles.textLink, style);\n    }\n\n    onMouseOverHandle(event) {\n        event.preventDefault();\n\n        const { style, hoverStyle } = this.props;\n\n        this.setState({\n            ...styles.textLink,\n            ...styles.textLinkHover,\n            ...style,\n            ...hoverStyle,\n        });\n    }\n\n    onMouseOutHandle(event) {\n        event.preventDefault();\n\n        const { style } = this.props;\n\n        this.setState({\n            ...styles.textLink,\n            ...style,\n        });\n    }\n\n    render() {\n        const { text, onClick } = this.props;\n\n        return (\n            <span\n                style={this.state}\n                onClick={onClick}\n                onMouseOver={this.onMouseOverHandle}\n                onMouseOut={this.onMouseOutHandle}\n            >\n                {text}\n            </span>\n        );\n    }\n}\n\nD2TextLink.propTypes = {\n    text: PropTypes.string,\n    onClick: PropTypes.func,\n    style: PropTypes.object,\n    hoverStyle: PropTypes.object,\n};\n\nD2TextLink.defaultProps = {\n    text: '',\n    onClick: Function.prototype,\n    style: null,\n    hoverStyle: null,\n};\n\nexport default D2TextLink;\n","import React, { Component, Fragment } from 'react';\nimport { connect } from 'react-redux';\nimport { withStyles } from '@material-ui/core/styles';\nimport Dialog from 'material-ui/Dialog';\nimport { OrgUnitTreeMultipleRoots } from '@dhis2/d2-ui-org-unit-tree';\nimport InfoIcon from '@material-ui/icons/Info';\n\nimport FlatButton from '../../widgets/FlatButton';\nimport PrimaryButton from '../../widgets/PrimaryButton';\nimport { apiFetchOrgUnits } from '../../api/orgUnits';\nimport {\n    acSetItemFilter,\n    FILTER_USER_ORG_UNIT,\n} from '../../actions/itemFilter';\nimport { sGetItemFilterRoot } from '../../reducers/itemFilter';\nimport D2TextLink from '../../widgets/D2TextLink';\n\nconst styles = theme => ({\n    container: {\n        height: '500px',\n        overflowY: 'auto',\n        border: '1px solid #eee',\n        padding: '10px 7px',\n    },\n    infoIcon: {\n        fill: '#888',\n        position: 'relative',\n        top: '7px',\n        marginRight: '5px',\n    },\n});\n\nclass ItemFilter extends Component {\n    state = {\n        roots: [],\n        selected: [],\n    };\n\n    componentDidMount() {\n        apiFetchOrgUnits().then(roots => {\n            this.setState({ roots });\n        });\n    }\n\n    componentWillReceiveProps(nextProps) {\n        this.setState({ selected: nextProps.selected });\n    }\n\n    onSelectOrgUnit = (e, orgUnit) => {\n        let selected;\n\n        if (this.state.selected.includes(orgUnit.path)) {\n            selected = this.state.selected.filter(ou => ou !== orgUnit.path);\n        } else {\n            selected = this.state.selected.concat(orgUnit.path);\n        }\n\n        this.setState({ selected });\n    };\n\n    onDeselectAll = () => {\n        this.setState({\n            selected: [],\n        });\n    };\n\n    onSubmit = () => {\n        this.props.acSetItemFilter(FILTER_USER_ORG_UNIT, this.state.selected);\n        this.props.onRequestClose();\n    };\n\n    renderOrgUnitTree = classes => {\n        return (\n            <Fragment>\n                <div\n                    style={{\n                        fontSize: '13px',\n                        marginTop: '5px',\n                        marginBottom: '16px',\n                    }}\n                >\n                    <InfoIcon className={classes.infoIcon} />\n                    Filtering only applies to favorites with \"User org units\"\n                    set\n                </div>\n                <div className={classes.container}>\n                    <div style={{ padding: '1px 0 12px 6px' }}>\n                        <D2TextLink\n                            text=\"Deselect all\"\n                            onClick={this.onDeselectAll}\n                            style={{ color: '#006ed3' }}\n                            hoverStyle={{ color: '#3399f8' }}\n                        />\n                    </div>\n                    <OrgUnitTreeMultipleRoots\n                        roots={this.state.roots}\n                        selected={this.state.selected}\n                        onSelectClick={this.onSelectOrgUnit}\n                        hideCheckboxes\n                    />\n                </div>\n            </Fragment>\n        );\n    };\n\n    render() {\n        const actions = [\n            <FlatButton onClick={this.props.onRequestClose}>Cancel</FlatButton>,\n            <PrimaryButton onClick={this.onSubmit}>Save</PrimaryButton>,\n        ];\n\n        return (\n            <Dialog\n                title=\"Organisation unit filter\"\n                actions={actions}\n                modal={false}\n                open={this.props.open}\n                onRequestClose={this.props.onRequestClose}\n            >\n                {this.renderOrgUnitTree(this.props.classes)}\n            </Dialog>\n        );\n    }\n}\n\nconst mapStateToProps = state => ({\n    selected: sGetItemFilterRoot(state)[FILTER_USER_ORG_UNIT] || [],\n});\n\nexport default connect(\n    mapStateToProps,\n    { acSetItemFilter }\n)(withStyles(styles)(ItemFilter));\n","import { getInstance } from 'd2';\n\nexport const apiFetchOrgUnits = () => {\n    return getInstance().then(d2 => {\n        return d2.models.organisationUnits\n            .list({\n                paging: false,\n                fields: 'id,path,displayName,children::isNotEmpty',\n                userDataViewFallback: true,\n            })\n            .then(rootLevel => {\n                const rootList = rootLevel.toArray();\n                const roots = rootList.length > 1 ? rootList : [rootList[0]];\n\n                return roots;\n            });\n    });\n};\n","import React, { Component } from 'react';\nimport InfoOutlineIcon from '@material-ui/icons/InfoOutlined';\nimport { colors } from '../../modules/colors';\n\nclass Info extends Component {\n    show = false;\n\n    toggle() {\n        this.show = !this.show;\n        return this.show;\n    }\n\n    render() {\n        return (\n            <div onClick={() => this.props.onClick(this.toggle())}>\n                <InfoOutlineIcon style={{ fill: colors.muiDefaultGrey }} />\n            </div>\n        );\n    }\n}\n\nexport default Info;\n","import React, { Component, Fragment } from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport { Link } from 'react-router-dom';\nimport i18n from '@dhis2/d2-i18n';\nimport SharingDialog from '@dhis2/d2-ui-sharing-dialog';\nimport Star from '@material-ui/icons/Star';\nimport StarBorder from '@material-ui/icons/StarBorder';\n\nimport { orObject } from '../../modules/util';\nimport { tStarDashboard } from '../../actions/dashboards';\nimport { acSetSelectedShowDescription } from '../../actions/selected';\nimport FilterDialog from '../ItemFilter/ItemFilter';\nimport FlatButton from '../../widgets/FlatButton';\nimport Info from './Info';\nimport {\n    sGetSelectedId,\n    sGetSelectedShowDescription,\n} from '../../reducers/selected';\nimport {\n    sGetDashboardById,\n    sGetDashboardItems,\n} from '../../reducers/dashboards';\nimport { sGetFilterKeys } from '../../reducers/itemFilter';\nimport { colors } from '../../modules/colors';\n\nconst NO_DESCRIPTION = i18n.t('No description');\n\nconst styles = {\n    actions: {\n        display: 'flex',\n        alignItems: 'center',\n        marginLeft: '20px',\n    },\n    starIcon: {\n        fill: colors.muiDefaultGrey,\n    },\n    textButton: {\n        minWidth: '30px',\n        top: '1px',\n    },\n    editLink: {\n        display: 'inline-block',\n        verticalAlign: 'top',\n        textDecoration: 'none',\n    },\n    titleBar: {\n        display: 'flex',\n        alignItems: 'flex-start',\n    },\n    titleBarIcon: {\n        marginLeft: 5,\n        position: 'relative',\n        top: 1,\n        cursor: 'pointer',\n    },\n};\n\nclass ViewTitleBar extends Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            sharingDialogIsOpen: false,\n            filterDialogIsOpen: false,\n        };\n    }\n\n    toggleSharingDialog = () =>\n        this.setState({ sharingDialogIsOpen: !this.state.sharingDialogIsOpen });\n\n    toggleFilterDialog = () =>\n        this.setState({ filterDialogIsOpen: !this.state.filterDialogIsOpen });\n\n    renderItemFilterLabel = () => {\n        const len = this.props.itemFilterKeys.length;\n\n        return len ? (\n            <span\n                onClick={this.toggleFilterDialog}\n                style={{\n                    marginLeft: '20px',\n                    cursor: 'pointer',\n                    color: colors.white,\n                    fontWeight: 500,\n                    backgroundColor: '#444',\n                    padding: '6px 8px',\n                    borderRadius: '3px',\n                    position: 'relative',\n                    top: '1px',\n                }}\n            >\n                {len} {len > 1 ? 'filters' : 'filter'} applied\n            </span>\n        ) : (\n            ''\n        );\n    };\n\n    render() {\n        const {\n            id,\n            name,\n            description,\n            access,\n            style,\n            showDescription,\n            starred,\n            onStarClick,\n            onInfoClick,\n            classes,\n        } = this.props;\n\n        const titleStyle = Object.assign({}, style.title, {\n            cursor: 'default',\n            userSelect: 'text',\n            top: '7px',\n        });\n\n        const StarIcon = starred ? Star : StarBorder;\n\n        return (\n            <Fragment>\n                <div className={classes.titleBar}>\n                    <span style={titleStyle}>{name}</span>\n                    <div className={classes.actions}>\n                        <div\n                            className={classes.titleBarIcon}\n                            onClick={onStarClick}\n                        >\n                            <StarIcon className={classes.starIcon} />\n                        </div>\n                        <div className={classes.titleBarIcon}>\n                            <Info onClick={onInfoClick} />\n                        </div>\n                        <span style={{ marginLeft: '10px' }}>\n                            {access.update ? (\n                                <Link\n                                    className={classes.editLink}\n                                    to={`/${id}/edit`}\n                                >\n                                    <FlatButton className={classes.textButton}>\n                                        Edit\n                                    </FlatButton>\n                                </Link>\n                            ) : null}\n\n                            {access.manage ? (\n                                <FlatButton\n                                    className={classes.textButton}\n                                    onClick={this.toggleSharingDialog}\n                                >\n                                    Share\n                                </FlatButton>\n                            ) : null}\n                            <FlatButton\n                                className={classes.textButton}\n                                onClick={this.toggleFilterDialog}\n                            >\n                                Filter\n                            </FlatButton>\n                            {this.renderItemFilterLabel()}\n                        </span>\n                    </div>\n                </div>\n                {showDescription ? (\n                    <div\n                        className=\"dashboard-description\"\n                        style={Object.assign(\n                            { paddingTop: '5px', paddingBottom: '5px' },\n                            style.description,\n                            !description ? { color: '#888' } : {}\n                        )}\n                    >\n                        {description || NO_DESCRIPTION}\n                    </div>\n                ) : null}\n                {id ? (\n                    <SharingDialog\n                        d2={this.context.d2}\n                        id={id}\n                        type=\"dashboard\"\n                        open={this.state.sharingDialogIsOpen}\n                        onRequestClose={this.toggleSharingDialog}\n                    />\n                ) : null}\n                {id ? (\n                    <FilterDialog\n                        open={this.state.filterDialogIsOpen}\n                        onRequestClose={this.toggleFilterDialog}\n                    />\n                ) : null}\n            </Fragment>\n        );\n    }\n}\n\nconst mapStateToProps = state => {\n    const id = sGetSelectedId(state);\n    const dashboard = orObject(sGetDashboardById(state, id));\n\n    return {\n        id,\n        name: dashboard.displayName,\n        description: dashboard.displayDescription,\n        dashboardItems: sGetDashboardItems(state),\n        showDescription: sGetSelectedShowDescription(state),\n        starred: dashboard.starred,\n        access: orObject(dashboard.access),\n        itemFilterKeys: sGetFilterKeys(state),\n    };\n};\n\nconst mergeProps = (stateProps, dispatchProps, ownProps) => {\n    const { id, starred, showDescription } = stateProps;\n    const { dispatch } = dispatchProps;\n\n    return {\n        ...stateProps,\n        ...ownProps,\n        onStarClick: () => dispatch(tStarDashboard(id, !starred)),\n        onInfoClick: () =>\n            dispatch(acSetSelectedShowDescription(!showDescription)),\n    };\n};\n\nexport default connect(\n    mapStateToProps,\n    null,\n    mergeProps\n)(withStyles(styles)(ViewTitleBar));\n\nViewTitleBar.propTypes = {\n    id: PropTypes.string,\n    name: PropTypes.string,\n    description: PropTypes.string,\n    starred: PropTypes.bool,\n    showDescription: PropTypes.bool,\n    onInfoClick: PropTypes.func,\n};\n\nViewTitleBar.defaultProps = {\n    name: '',\n    description: '',\n    starred: false,\n    showDescription: false,\n    onInfoClick: null,\n};\n\nViewTitleBar.contextTypes = {\n    d2: PropTypes.object,\n};\n","import React from 'react';\n\nimport { colors } from '../../modules/colors';\nimport EditTitleBar from './EditTitleBar';\nimport ViewTitleBar from './ViewTitleBar';\n\nimport './TitleBar.css';\n\nconst style = {\n    title: {\n        position: 'relative',\n        fontSize: 21,\n        fontWeight: 500,\n        color: colors.black,\n        minWidth: 50,\n    },\n    description: {\n        fontSize: 14,\n        color: colors.darkGrey,\n    },\n};\n\nconst TitleBar = ({ edit }) => {\n    return (\n        <div\n            className=\"titlebar-wrapper\"\n            style={{\n                padding: '20px 15px 5px 10px',\n            }}\n        >\n            {edit ? (\n                <EditTitleBar style={style} />\n            ) : (\n                <ViewTitleBar style={style} />\n            )}\n        </div>\n    );\n};\n\nexport default TitleBar;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport i18n from '@dhis2/d2-i18n';\n\nimport * as pluginManager from './plugin';\nimport { getBaseUrl, orObject } from '../../../modules/util';\n\nconst pluginCredentials = d2 => {\n    return {\n        baseUrl: getBaseUrl(d2),\n        auth: d2.Api.getApi().defaultHeaders.Authorization,\n    };\n};\n\nclass DefaultPlugin extends Component {\n    pluginCredentials = null;\n\n    shouldPluginReload = prevProps => {\n        // TODO - fix this hack, to handle bug with multiple\n        // rerendering while switching between dashboards.\n        //\n        // To determine if the rendering is happening because of a\n        // dashboard switch, check if the item reference has changed.\n        const reloadAllowed = this.props.item === prevProps.item;\n\n        const filterChanged = prevProps.itemFilter !== this.props.itemFilter;\n        const vis = orObject(this.props.visualization);\n        const prevVis = orObject(prevProps.visualization);\n        const visChanged =\n            vis.id !== prevVis.id || vis.activeType !== prevVis.activeType;\n\n        return reloadAllowed && (visChanged || filterChanged);\n    };\n\n    reloadPlugin = prevProps => {\n        if (\n            pluginManager.pluginIsAvailable(\n                this.props.item,\n                this.props.visualization\n            ) &&\n            this.shouldPluginReload(prevProps)\n        ) {\n            const prevVis = orObject(prevProps.visualization);\n            const currentVis = this.props.visualization;\n\n            const useActiveType =\n                currentVis.activeType !== prevVis.activeType ||\n                currentVis.activeType !== this.props.item.type\n                    ? true\n                    : false;\n\n            if (\n                useActiveType ||\n                this.props.itemFilter !== prevProps.itemFilter\n            ) {\n                pluginManager.unmount(\n                    this.props.item,\n                    prevVis.activeType || this.props.item.type\n                );\n\n                pluginManager.load(\n                    this.props.item,\n                    this.pluginCredentials,\n                    useActiveType ? currentVis.activeType : null,\n                    this.props.itemFilter\n                );\n            }\n        }\n    };\n\n    componentDidMount() {\n        this.pluginCredentials = pluginCredentials(this.context.d2);\n\n        if (\n            pluginManager.pluginIsAvailable(\n                this.props.item,\n                this.props.visualization\n            )\n        ) {\n            pluginManager.load(\n                this.props.item,\n                this.pluginCredentials,\n                !this.props.editMode\n                    ? orObject(this.props.visualization).activeType\n                    : null,\n                this.props.itemFilter\n            );\n        }\n    }\n\n    componentDidUpdate(prevProps) {\n        this.reloadPlugin(prevProps);\n    }\n\n    getActiveType = () =>\n        this.props.visualization.activeType || this.props.item.type;\n\n    onSelectVisualization = activeType => {\n        // Cancel request if type is already active\n        if (activeType === this.getActiveType()) {\n            return;\n        }\n\n        pluginManager.unmount(\n            this.props.item,\n            this.props.visualization.activeType || this.props.item.type\n        );\n\n        this.props.onSelectVisualization(\n            this.props.visualization.id,\n            this.props.item.type,\n            activeType\n        );\n    };\n\n    render() {\n        const { classes, item, visualization } = this.props;\n        const pluginIsAvailable = pluginManager.pluginIsAvailable(\n            item,\n            visualization\n        );\n\n        return !pluginIsAvailable ? (\n            <div className={classes.textDiv}>\n                {i18n.t('Unable to load the plugin for this item')}\n            </div>\n        ) : null;\n    }\n}\n\nDefaultPlugin.contextTypes = {\n    d2: PropTypes.object,\n};\n\nDefaultPlugin.propTypes = {\n    itemFilter: PropTypes.object,\n    visualization: PropTypes.object,\n};\n\nDefaultPlugin.defaultProps = {\n    itemFilter: {},\n    visualization: {},\n};\n\nexport default DefaultPlugin;\n","import React from 'react';\n\nexport const HEADER_HEIGHT = 45;\n\nconst ItemHeader = props => {\n    const { title, actionButtons, editMode } = props;\n\n    return (\n        <div className=\"dashboard-item-header\">\n            <div\n                className=\"dashboard-item-header-title\"\n                style={{ userSelect: editMode ? 'none' : 'text' }}\n            >\n                {title}\n            </div>\n            {actionButtons}\n        </div>\n    );\n};\n\nexport default ItemHeader;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { colors } from '../../../modules/colors';\nimport { getId } from './plugin';\nimport InterpretationsComponent from '@dhis2/d2-ui-interpretations';\n\nconst style = {\n    scrollContainer: {\n        overflowY: 'auto',\n        height: '340px',\n    },\n    line: {\n        margin: '-1px 0px 0px',\n        height: '1px',\n        border: 'none',\n        backgroundColor: colors.lightGrey,\n    },\n};\n\nclass ItemFooter extends Component {\n    render() {\n        const objectId = getId(this.props.item);\n\n        return (\n            <div className=\"dashboard-item-footer\">\n                <hr style={style.line} />\n                <div style={style.scrollContainer}>\n                    <InterpretationsComponent\n                        d2={this.context.d2}\n                        item={this.props.item}\n                        type={this.props.item.type.toLowerCase()}\n                        id={objectId}\n                        appName=\"dashboard\"\n                    />\n                </div>\n            </div>\n        );\n    }\n}\n\nItemFooter.contextTypes = {\n    d2: PropTypes.object.isRequired,\n};\n\nItemFooter.propTypes = {\n    item: PropTypes.object.isRequired,\n};\n\nexport default ItemFooter;\n","import React from 'react';\n\nimport './ItemHeaderButton.css';\n\nconst ItemHeaderButton = ({ disabled, onClick, children, style }) => {\n    return (\n        <button\n            disabled={disabled}\n            type=\"button\"\n            className=\"item-action-button\"\n            style={style}\n            onClick={onClick}\n        >\n            {children}\n        </button>\n    );\n};\n\nexport default ItemHeaderButton;\n","import React, { Component, Fragment } from 'react';\nimport MessageIcon from '@material-ui/icons/Message';\nimport TableIcon from '@material-ui/icons/ViewList';\nimport ChartIcon from '@material-ui/icons/InsertChart';\nimport MapIcon from '@material-ui/icons/Public';\n\nimport { extractFavorite } from './plugin';\nimport ItemHeaderButton from '../ItemHeaderButton';\nimport {\n    VISUALIZATION_TYPE_TABLE,\n    VISUALIZATION_TYPE_CHART,\n    VISUALIZATION_TYPE_MAP,\n    itemTypeMap,\n    CHART,\n    MAP,\n    REPORT_TABLE,\n    EVENT_CHART,\n    EVENT_REPORT,\n    DOMAIN_TYPE_AGGREGATE,\n} from '../../../modules/itemTypes';\nimport { colors } from '../../../modules/colors';\n\nconst style = {\n    iconBase: {\n        width: '24px',\n        height: '24px',\n        fill: colors.lightMediumGrey,\n    },\n    buttonBase: {\n        padding: '5px 6px 3px 6px',\n    },\n    buttonDisabled: {\n        padding: '5px 6px 3px 6px',\n        opacity: 0.5,\n        cursor: 'unset',\n    },\n    toggleFooterPadding: {\n        padding: '7px 6px 1px 6px',\n    },\n    border: {\n        borderRadius: '2px',\n        border: `1px solid ${colors.lightGrey}`,\n    },\n};\n\nconst baseStyle = {\n    icon: style.iconBase,\n    container: style.buttonBase,\n};\n\nconst disabledStyle = {\n    icon: style.iconBase,\n    container: style.buttonDisabled,\n};\n\nconst activeStyle = {\n    icon: { ...style.iconBase, fill: colors.royalBlue },\n    container: {\n        ...style.buttonBase,\n        backgroundColor: colors.lightBlue,\n    },\n};\n\nconst inactiveStyle = disabled => (disabled ? disabledStyle : baseStyle);\n\nconst tableBtnStyle = (activeType, disabled) =>\n    [REPORT_TABLE, EVENT_REPORT].includes(activeType)\n        ? activeStyle\n        : inactiveStyle(disabled);\n\nconst chartBtnStyle = (activeType, disabled) =>\n    [CHART, EVENT_CHART].includes(activeType)\n        ? activeStyle\n        : inactiveStyle(disabled);\n\nconst mapBtnStyle = (activeType, disabled) =>\n    [MAP].includes(activeType) ? activeStyle : inactiveStyle(disabled);\n\nexport const getItemTypeId = (itemTypeMap, visualizationType, domainType) => {\n    const item = Object.values(itemTypeMap).find(\n        item =>\n            item.visualizationType === visualizationType &&\n            item.domainType === domainType\n    );\n    return item.id;\n};\n\nclass VisualizationItemHeaderButtons extends Component {\n    render() {\n        const {\n            item,\n            onSelectVisualization,\n            activeFooter,\n            activeType,\n            onToggleFooter,\n        } = this.props;\n\n        const domainType = itemTypeMap[item.type].domainType;\n\n        const onViewTable = () =>\n            onSelectVisualization(\n                getItemTypeId(itemTypeMap, VISUALIZATION_TYPE_TABLE, domainType)\n            );\n\n        const onViewChart = () =>\n            onSelectVisualization(\n                getItemTypeId(itemTypeMap, VISUALIZATION_TYPE_CHART, domainType)\n            );\n\n        const onViewMap = () =>\n            onSelectVisualization(\n                getItemTypeId(itemTypeMap, VISUALIZATION_TYPE_MAP, domainType)\n            );\n\n        const toggleFooterBase = activeFooter ? activeStyle : baseStyle;\n\n        const toggleFooter = {\n            ...toggleFooterBase,\n            container: {\n                ...toggleFooterBase.container,\n                ...style.toggleFooterPadding,\n                ...style.border,\n            },\n        };\n\n        // disable toggle buttons\n        let disabled = false;\n\n        if (item.type === VISUALIZATION_TYPE_CHART) {\n            if (extractFavorite(item).type.match(/^YEAR_OVER_YEAR/)) {\n                disabled = true;\n            }\n        }\n\n        const tableButtonStyle = tableBtnStyle(activeType, disabled);\n        const chartButtonStyle = chartBtnStyle(activeType, disabled);\n        const mapButtonStyle = mapBtnStyle(activeType, disabled);\n\n        return (\n            <Fragment>\n                <div style={{ marginRight: 10 }}>\n                    <ItemHeaderButton\n                        style={toggleFooter.container}\n                        onClick={onToggleFooter}\n                    >\n                        <MessageIcon style={toggleFooter.icon} />\n                    </ItemHeaderButton>\n                </div>\n                <div style={style.border}>\n                    <ItemHeaderButton\n                        disabled={disabled}\n                        style={tableButtonStyle.container}\n                        onClick={onViewTable}\n                    >\n                        <TableIcon style={tableButtonStyle.icon} />\n                    </ItemHeaderButton>\n                    <ItemHeaderButton\n                        disabled={disabled}\n                        style={chartButtonStyle.container}\n                        onClick={onViewChart}\n                    >\n                        <ChartIcon style={chartButtonStyle.icon} />\n                    </ItemHeaderButton>\n                    {domainType === DOMAIN_TYPE_AGGREGATE ? (\n                        <ItemHeaderButton\n                            disabled={disabled}\n                            style={mapButtonStyle.container}\n                            onClick={onViewMap}\n                        >\n                            <MapIcon style={mapButtonStyle.icon} />\n                        </ItemHeaderButton>\n                    ) : null}\n                </div>\n            </Fragment>\n        );\n    }\n}\n\nexport default VisualizationItemHeaderButtons;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport debounce from 'lodash/debounce';\n\nconst defaultDebounceMs = 100;\nconst defaultBufferPx = 0;\nconst defaultInitialBufferFactor = 0.5;\n\nclass ProgressiveLoadingContainer extends Component {\n    static propTypes = {\n        children: PropTypes.node.isRequired,\n        debounceMs: PropTypes.number,\n        bufferPx: PropTypes.number,\n        initialBufferFactor: PropTypes.number,\n    };\n    static defaultProps = {\n        debounceMs: defaultDebounceMs,\n        bufferPx: defaultBufferPx,\n        initialBufferFactor: defaultInitialBufferFactor,\n    };\n\n    state = {\n        shouldLoad: false,\n    };\n    containerRef = null;\n    shouldLoadHandler = null;\n\n    checkShouldLoad(customBufferPx) {\n        const bufferPx = customBufferPx || this.props.bufferPx;\n\n        if (!this.containerRef) {\n            return;\n        }\n\n        const rect = this.containerRef.getBoundingClientRect();\n        if (\n            rect.bottom > -bufferPx &&\n            rect.top < window.innerHeight + bufferPx\n        ) {\n            this.setState({\n                shouldLoad: true,\n            });\n\n            this.removeHandler();\n        }\n    }\n\n    registerHandler() {\n        this.shouldLoadHandler = debounce(\n            () => this.checkShouldLoad(),\n            this.props.debounceMs\n        );\n\n        window.addEventListener('scroll', this.shouldLoadHandler);\n    }\n    removeHandler() {\n        window.removeEventListener('scroll', this.shouldLoadHandler);\n    }\n\n    componentDidMount() {\n        this.registerHandler();\n\n        const initialBufferPx = this.props.initialBufferFactor\n            ? this.props.initialBufferFactor * window.innerHeight\n            : undefined;\n        this.checkShouldLoad(initialBufferPx);\n    }\n\n    componentWillUnmount() {\n        this.removeHandler();\n    }\n\n    render() {\n        const {\n            children,\n            debounceMs,\n            bufferPx,\n            initialBufferFactor,\n            ...props\n        } = this.props;\n        const { shouldLoad } = this.state;\n\n        return (\n            <div ref={ref => (this.containerRef = ref)} {...props}>\n                {shouldLoad && children}\n            </div>\n        );\n    }\n}\n\nexport default ProgressiveLoadingContainer;\n","// Note that this ignores discrepancies in 'this', so shouldn't be used with bound functions\n// This is useful instead of lodash/memoize when we only need to memoize a single value\n// Inspiration: https://github.com/alexreardon/memoize-one\n\nconst memoizeOne = fn => {\n    let lastArgs = undefined;\n    let lastValue = undefined;\n\n    return (...args) => {\n        if (\n            lastArgs &&\n            args.length === lastArgs.length &&\n            args.every((arg, i) => arg === lastArgs[i])\n        ) {\n            return lastValue;\n        }\n        lastArgs = args;\n        lastValue = fn(...args);\n        return lastValue;\n    };\n};\n\nexport default memoizeOne;\n","import React, { Component, Fragment } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { withStyles } from '@material-ui/core/styles';\nimport LaunchIcon from '@material-ui/icons/Launch';\nimport uniqueId from 'lodash/uniqueId';\nimport ChartPlugin from 'data-visualizer-plugin';\n\nimport DefaultPlugin from './DefaultPlugin';\nimport ItemHeader, { HEADER_HEIGHT } from '../ItemHeader';\nimport ItemFooter from './ItemFooter';\nimport VisualizationItemHeaderButtons from './ItemHeaderButtons';\nimport ProgressiveLoadingContainer from '../ProgressiveLoadingContainer';\nimport * as pluginManager from './plugin';\n\nimport { getGridItemDomId } from '../../ItemGrid/gridUtil';\nimport { sGetVisualization } from '../../../reducers/visualizations';\nimport { sGetItemFilterRoot } from '../../../reducers/itemFilter';\nimport { acReceivedActiveVisualization } from '../../../actions/selected';\nimport { itemTypeMap, CHART } from '../../../modules/itemTypes';\nimport { colors } from '../../../modules/colors';\nimport memoizeOne from '../../../modules/memoizeOne';\n\nconst styles = {\n    icon: {\n        width: 16,\n        height: 16,\n        marginLeft: 3,\n        cursor: 'pointer',\n        fill: colors.muiDefaultGrey,\n    },\n    title: {\n        overflow: 'hidden',\n        maxWidth: '85%',\n        textOverflow: 'ellipsis',\n        whiteSpace: 'nowrap',\n    },\n    textDiv: {\n        fontSize: '14px',\n        fontStretch: 'normal',\n        padding: '10px',\n        lineHeight: '20px',\n    },\n};\n\nexport class Item extends Component {\n    state = {\n        showFooter: false,\n    };\n\n    getUniqueKey = memoizeOne(filter => uniqueId());\n\n    pluginCredentials = null;\n\n    onToggleFooter = () => {\n        this.setState(\n            { showFooter: !this.state.showFooter },\n            this.props.onToggleItemExpanded(this.props.item.id)\n        );\n    };\n\n    onSelectVisualization = activeType => {\n        // Cancel request if type is already active\n        if (activeType === this.getActiveType()) {\n            return;\n        }\n\n        pluginManager.unmount(\n            this.props.item,\n            this.props.visualization.activeType || this.props.item.type\n        );\n\n        this.props.onSelectVisualization(\n            this.props.visualization.id,\n            this.props.item.type,\n            activeType\n        );\n    };\n\n    getActiveType = () =>\n        this.props.visualization.activeType || this.props.item.type;\n\n    pluginIsAvailable = () =>\n        pluginManager.pluginIsAvailable(\n            this.props.item,\n            this.props.visualization\n        );\n\n    getTitle = () => {\n        const { item, editMode, classes } = this.props;\n        const itemName = pluginManager.getName(item);\n\n        return (\n            <div style={{ display: 'flex', alignItems: 'center' }}>\n                <span className={classes.title} title={itemName}>\n                    {itemName}\n                </span>\n                {!editMode && this.pluginIsAvailable() ? (\n                    <a\n                        href={pluginManager.getLink(\n                            this.props.item,\n                            this.context.d2\n                        )}\n                        style={{ height: 16 }}\n                        title={`View in ${\n                            itemTypeMap[this.props.item.type].appName\n                        } app`}\n                    >\n                        <LaunchIcon className={classes.icon} />\n                    </a>\n                ) : null}\n            </div>\n        );\n    };\n\n    getActionButtons = () =>\n        pluginManager.pluginIsAvailable(\n            this.props.item,\n            this.props.visualization\n        ) && !this.props.editMode ? (\n            <VisualizationItemHeaderButtons\n                item={this.props.item}\n                activeFooter={this.state.showFooter}\n                activeType={\n                    this.props.visualization.activeType || this.props.item.type\n                }\n                onSelectVisualization={this.onSelectVisualization}\n                onToggleFooter={this.onToggleFooter}\n            />\n        ) : null;\n\n    getContentStyle = () => {\n        const { item, editMode } = this.props;\n        const PADDING_BOTTOM = 4;\n        return !editMode\n            ? {\n                  height: item.originalHeight - HEADER_HEIGHT - PADDING_BOTTOM,\n              }\n            : null;\n    };\n\n    getPluginComponent = () =>\n        this.props.item.type === CHART ? (\n            <ChartPlugin\n                d2={this.context.d2}\n                config={this.props.visualization}\n                filters={this.props.itemFilter}\n                forDashboard={true}\n                style={this.getContentStyle()}\n            />\n        ) : (\n            <DefaultPlugin {...this.props} />\n        );\n\n    render() {\n        const { item, editMode, itemFilter } = this.props;\n        const { showFooter } = this.state;\n\n        return (\n            <Fragment>\n                <ItemHeader\n                    title={this.getTitle()}\n                    actionButtons={this.getActionButtons()}\n                    editMode={editMode}\n                />\n                <ProgressiveLoadingContainer\n                    id={getGridItemDomId(item.id)}\n                    key={\n                        this.getUniqueKey(\n                            itemFilter\n                        ) /* remount the progressive loader every time itemFilter changes */\n                    }\n                    className=\"dashboard-item-content\"\n                    style={this.getContentStyle()}\n                >\n                    {this.getPluginComponent()}\n                </ProgressiveLoadingContainer>\n                {!editMode && showFooter ? <ItemFooter item={item} /> : null}\n            </Fragment>\n        );\n    }\n}\n\nItem.contextTypes = {\n    d2: PropTypes.object,\n};\n\nItem.propTypes = {\n    item: PropTypes.object,\n    editMode: PropTypes.bool,\n    onToggleItemExpanded: PropTypes.func,\n    itemFilter: PropTypes.object,\n    visualization: PropTypes.object,\n};\n\nItem.defaultProps = {\n    item: {},\n    editMode: false,\n    onToggleItemExpanded: Function.prototype,\n    itemFilter: {},\n    visualization: {},\n};\n\nconst mapStateToProps = (state, ownProps) => ({\n    itemFilter: sGetItemFilterRoot(state),\n    visualization: sGetVisualization(\n        state,\n        pluginManager.extractFavorite(ownProps.item).id\n    ),\n});\n\nconst mapDispatchToProps = dispatch => ({\n    onSelectVisualization: (id, type, activeType) =>\n        dispatch(acReceivedActiveVisualization(id, type, activeType)),\n});\n\nexport default connect(\n    mapStateToProps,\n    mapDispatchToProps\n)(withStyles(styles)(Item));\n","import React from 'react';\nimport { colors } from '../modules/colors';\n\nconst style = {\n    backgroundColor: colors.lightGrey,\n    border: 'none',\n    height: '1px',\n    margin: '0px 0px 5px 0px',\n};\n\nconst Line = props => <hr style={style} />;\n\nexport default Line;\n","import React, { Component, Fragment } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport i18n from '@dhis2/d2-i18n';\n\nimport { sGetMessagesRoot } from '../../../reducers/messages';\nimport { formatDate } from '../../../modules/util';\nimport { colors } from '../../../modules/colors';\nimport ItemHeader from '../ItemHeader';\nimport Line from '../../../widgets/Line';\n\nimport './MessagesItem.css';\n\nconst PRIVATE = 'PRIVATE';\n\nconst messageTypes = {\n    [PRIVATE]: 'Private',\n    VALIDATION_RESULT: 'Validation',\n    TICKET: 'Ticket',\n    SYSTEM: 'System',\n};\n\nconst style = {\n    list: {\n        listStyleType: 'none',\n        paddingLeft: '0px',\n    },\n    seeAll: {\n        textAlign: 'center',\n        fontSize: '13px',\n        marginBottom: '5px',\n    },\n    sender: {\n        fontSize: '13px',\n        lineHeight: '15px',\n        margin: 0,\n        color: colors.darkGrey,\n    },\n    snippet: {\n        color: colors.darkGrey,\n        fontSize: '13px',\n        lineHeight: '15px',\n        maxHeight: '30px',\n        overflow: 'hidden',\n    },\n};\n\nclass MessagesItem extends Component {\n    state = {\n        uiLocale: '',\n    };\n\n    async componentDidMount() {\n        const uiLocale = await this.context.d2.currentUser.userSettings.get(\n            'keyUiLocale'\n        );\n\n        this.setState({ uiLocale });\n    }\n\n    getMessageHref = msg => {\n        const msgIdentifier = msg ? `#/${msg.messageType}/${msg.id}` : '';\n        return `${this.context.baseUrl}/dhis-web-messaging/${msgIdentifier}`;\n    };\n\n    getMessageSender = msg => {\n        const latestMsg = msg.messages.slice(-1)[0];\n        return latestMsg.sender ? latestMsg.sender.displayName : '';\n    };\n\n    getMessageItems = () => {\n        const editClass = !this.props.editMode ? 'view' : null;\n\n        return this.props.messages.map(msg => {\n            const redirectToMsg = () => {\n                if (!this.props.editMode) {\n                    document.location.href = this.getMessageHref(msg);\n                }\n            };\n\n            const sender =\n                msg.messageType === PRIVATE\n                    ? this.getMessageSender(msg)\n                    : messageTypes[msg.messageType];\n\n            const readClass = !msg.read ? 'unread' : null;\n            const latestMsg = msg.messages.slice(-1)[0];\n            const msgDate = latestMsg.lastUpdated;\n\n            return (\n                <li\n                    className={`message-item ${editClass}`}\n                    key={msg.id}\n                    onClick={redirectToMsg}\n                >\n                    <p className={`message-title ${readClass}`}>\n                        {msg.displayName} ({msg.messageCount})\n                    </p>\n                    <p style={style.sender}>\n                        {sender} - {formatDate(msgDate, this.state.uiLocale)}\n                    </p>\n                    <p style={style.snippet}>{latestMsg.text}</p>\n                </li>\n            );\n        });\n    };\n\n    render() {\n        return (\n            <Fragment>\n                <ItemHeader title={i18n.t('Messages')} />\n                <Line />\n                {this.props.messages.length > 0 && (\n                    <div className=\"dashboard-item-content\">\n                        <ul style={style.list}>{this.getMessageItems()}</ul>\n                        <div style={style.seeAll}>\n                            <a href={this.getMessageHref()}>\n                                {i18n.t('See all messages')}\n                            </a>\n                        </div>\n                    </div>\n                )}\n            </Fragment>\n        );\n    }\n}\n\nMessagesItem.contextTypes = {\n    d2: PropTypes.object,\n    baseUrl: PropTypes.string,\n};\n\nconst mapStateToProps = state => {\n    return {\n        messages: Object.values(sGetMessagesRoot(state)),\n    };\n};\n\nconst MessagesContainer = connect(\n    mapStateToProps,\n    null\n)(MessagesItem);\n\nexport default MessagesContainer;\n","import React, { Fragment } from 'react';\nimport ItemHeader from '../ItemHeader';\nimport NotInterestedIcon from '@material-ui/icons/NotInterested';\n\nconst NotSupportedItem = props => (\n    <Fragment>\n        <ItemHeader title={`Item type not supported: ${props.item.type}`} />\n        <div\n            style={{\n                display: 'flex',\n                justifyContent: 'center',\n                alignItems: 'center',\n                height: '90%',\n            }}\n        >\n            <NotInterestedIcon\n                style={{ width: 100, height: 100, align: 'center' }}\n                color=\"disabled\"\n            />\n        </div>\n    </Fragment>\n);\n\nexport default NotSupportedItem;\n","import React, { Fragment } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { List, ListItem as MUIListItem } from 'material-ui/List';\nimport IconButton from 'material-ui/IconButton';\nimport DeleteIcon from '@material-ui/icons/Delete';\n\nimport Line from '../../../widgets/Line';\nimport {\n    itemTypeMap,\n    getItemUrl,\n    getItemIcon,\n} from '../../../modules/itemTypes';\nimport { orArray } from '../../../modules/util';\nimport { tRemoveListItemContent } from './actions';\nimport { colors } from '../../../modules/colors';\nimport ItemHeader from '../ItemHeader';\n\nconst getItemTitle = item => {\n    return itemTypeMap[item.type].pluralTitle;\n};\n\nconst getContentItems = item =>\n    orArray(item[itemTypeMap[item.type].propName]).filter(\n        (item, index, array) =>\n            array.findIndex(el => el.id === item.id) === index\n    );\n\nconst removeContent = (handler, item, contentToRemove) => () => {\n    handler(item, contentToRemove);\n};\n\nconst ListItem = (props, context) => {\n    const { item, editMode, tRemoveListItemContent } = props;\n\n    // avoid showing duplicates\n    const contentItems = getContentItems(item);\n\n    const primaryText = contentItem => {\n        const deleteButton = (\n            <IconButton\n                style={{\n                    verticalAlign: 'text-bottom',\n                    padding: '0 12px',\n                    height: 20,\n                }}\n                iconStyle={{\n                    width: 20,\n                    height: 20,\n                    fill: colors.red,\n                }}\n                onClick={removeContent(\n                    tRemoveListItemContent,\n                    item,\n                    contentItem\n                )}\n            >\n                <DeleteIcon />\n            </IconButton>\n        );\n\n        return (\n            <div>\n                <a\n                    style={{ textDecoration: 'none' }}\n                    href={getItemUrl(item.type, contentItem, context.d2)}\n                >\n                    {contentItem.name}\n                </a>\n                {editMode ? deleteButton : null}\n            </div>\n        );\n    };\n\n    const ItemIcon = getItemIcon(item.type);\n\n    return (\n        <Fragment>\n            <ItemHeader title={getItemTitle(item)} />\n            <Line />\n            <List className=\"dashboard-item-content\">\n                {contentItems.map(contentItem => (\n                    <MUIListItem\n                        key={contentItem.id}\n                        primaryText={primaryText(contentItem)}\n                        leftIcon={<ItemIcon style={{ margin: 0 }} />}\n                        disabled={true}\n                        innerDivStyle={{ padding: '4px 4px 4px 32px' }}\n                    />\n                ))}\n            </List>\n        </Fragment>\n    );\n};\n\nListItem.contextTypes = {\n    d2: PropTypes.object,\n};\n\nconst ListItemContainer = connect(\n    null,\n    {\n        tRemoveListItemContent,\n    }\n)(ListItem);\n\nexport default ListItemContainer;\n","import {\n    acUpdateDashboardItem,\n    acRemoveDashboardItem,\n} from '../../../actions/editDashboard';\nimport { itemTypeMap } from '../../../modules/itemTypes';\n\nexport const tRemoveListItemContent = (dashboardItem, content) => dispatch => {\n    const listItemType = itemTypeMap[dashboardItem.type].propName;\n\n    const newContent = dashboardItem[listItemType].filter(\n        item => item.id !== content.id\n    );\n\n    if (newContent.length) {\n        dashboardItem[listItemType] = newContent;\n        dispatch(acUpdateDashboardItem(dashboardItem));\n    } else {\n        dispatch(acRemoveDashboardItem(dashboardItem));\n    }\n};\n","import React, { Fragment } from 'react';\nimport { connect } from 'react-redux';\nimport i18n from '@dhis2/d2-i18n';\nimport TextField from 'd2-ui/lib/text-field/TextField';\n\nimport { acUpdateDashboardItem } from '../../../actions/editDashboard';\nimport { sGetEditDashboardItems } from '../../../reducers/editDashboard';\nimport { sGetDashboardItems } from '../../../reducers/dashboards';\nimport ItemHeader from '../ItemHeader';\nimport Line from '../../../widgets/Line';\n\nconst style = {\n    textDiv: {\n        padding: '10px',\n        whiteSpace: 'pre-line',\n        lineHeight: '20px',\n    },\n    textField: {\n        fontSize: '14px',\n        fontStretch: 'normal',\n        width: '90%',\n        margin: '0 auto',\n        display: 'block',\n    },\n    container: {\n        marginBottom: '20px',\n        marginTop: '20px',\n    },\n};\n\nconst TextItem = props => {\n    const { item, editMode, text, acUpdateDashboardItem } = props;\n\n    const onChangeText = text => {\n        const updatedItem = {\n            ...item,\n            text,\n        };\n\n        acUpdateDashboardItem(updatedItem);\n    };\n\n    const viewItem = () => {\n        const textDivStyle = Object.assign({}, style.textField, style.textDiv);\n        return (\n            <div className=\"dashboard-item-content\" style={style.container}>\n                <div style={textDivStyle}>{text}</div>\n            </div>\n        );\n    };\n\n    const editItem = () => {\n        return (\n            <Fragment>\n                <ItemHeader title={i18n.t('Text item')} />\n                <Line />\n                <div className=\"dashboard-item-content\">\n                    <TextField\n                        value={text}\n                        multiline\n                        rows={1}\n                        rowsMax={8}\n                        fullWidth\n                        style={style.textField}\n                        placeholder={i18n.t('Add text here')}\n                        onChange={onChangeText}\n                    />\n                </div>\n            </Fragment>\n        );\n    };\n\n    return <Fragment>{editMode ? editItem() : viewItem()}</Fragment>;\n};\n\nconst mapStateToProps = (state, ownProps) => {\n    const items = ownProps.editMode\n        ? sGetEditDashboardItems(state)\n        : sGetDashboardItems(state);\n\n    const item = items.find(item => item.id === ownProps.item.id);\n\n    return {\n        text: item ? item.text : '',\n    };\n};\n\nexport default connect(\n    mapStateToProps,\n    {\n        acUpdateDashboardItem,\n    }\n)(TextItem);\n","import React, { Fragment } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport NotInterestedIcon from '@material-ui/icons/NotInterested';\n\nimport { FILTER_USER_ORG_UNIT } from '../../../actions/itemFilter';\nimport { sGetItemFilterRoot } from '../../../reducers/itemFilter';\nimport ItemHeader from '../ItemHeader';\nimport Line from '../../../widgets/Line';\n\nconst getIframeSrc = (appDetails, item, itemFilter) => {\n    let iframeSrc = `${appDetails.launchUrl}?dashboardItemId=${item.id}`;\n\n    if (\n        itemFilter &&\n        itemFilter[FILTER_USER_ORG_UNIT] &&\n        itemFilter[FILTER_USER_ORG_UNIT].length\n    ) {\n        const ouIds = itemFilter[FILTER_USER_ORG_UNIT].map(\n            ouPath => ouPath.split('/').slice(-1)[0]\n        );\n\n        iframeSrc += `&userOrgUnit=${ouIds.join(',')}`;\n    }\n\n    return iframeSrc;\n};\n\nconst AppItem = ({ item, itemFilter }, context) => {\n    let appDetails;\n\n    const appKey = item.appKey;\n\n    if (appKey) {\n        appDetails = context.d2.system.installedApps.find(\n            app => app.key === appKey\n        );\n    }\n\n    return appDetails && appDetails.name && appDetails.launchUrl ? (\n        <Fragment>\n            <ItemHeader title={appDetails.name} />\n            <Line />\n            <iframe\n                title={appDetails.name}\n                src={getIframeSrc(appDetails, item, itemFilter)}\n                className=\"dashboard-item-content\"\n                style={{ border: 'none' }}\n            />\n        </Fragment>\n    ) : (\n        <Fragment>\n            <ItemHeader title={`${appKey} app not found`} />\n            <Line />\n            <div\n                className=\"dashboard-item-content\"\n                style={{\n                    display: 'flex',\n                    justifyContent: 'center',\n                    alignItems: 'center',\n                    height: '90%',\n                }}\n            >\n                <NotInterestedIcon\n                    color=\"disabled\"\n                    disabled\n                    style={{ width: 100, height: 100, align: 'center' }}\n                />\n            </div>\n        </Fragment>\n    );\n};\n\nAppItem.contextTypes = {\n    d2: PropTypes.object,\n};\n\nconst mapStateToProps = state => ({\n    itemFilter: sGetItemFilterRoot(state),\n});\n\nexport default connect(mapStateToProps)(AppItem);\n","import React, { Fragment } from 'react';\nimport i18n from '@dhis2/d2-i18n';\n\nimport { colors } from '../../../modules/colors';\nimport ItemHeader from '../ItemHeader';\n\nconst style = {\n    margin: '21px 28px',\n    fontSize: '14px',\n    lineHeight: '18px',\n    color: colors.charcoalGrey,\n};\n\nconst SpacerItem = () => {\n    return (\n        <Fragment>\n            <ItemHeader title={i18n.t('Spacer')} />\n            <p style={style}>\n                {i18n.t(\n                    'Use a spacer to create empty vertical space between other dashboard items.'\n                )}\n            </p>\n        </Fragment>\n    );\n};\n\nexport default SpacerItem;\n","import React from 'react';\n\nimport VisualizationItem from './VisualizationItem/Item';\nimport MessagesItem from './MessagesItem/Item';\nimport NotSupportedItem from './NotSupportedItem/Item';\nimport ListItem from './ListItem/Item';\nimport TextItem from './TextItem/Item';\nimport AppItem from './AppItem/Item';\nimport SpacerItem from './SpacerItem/Item';\nimport {\n    APP,\n    REPORT_TABLE,\n    CHART,\n    MAP,\n    EVENT_CHART,\n    EVENT_REPORT,\n    MESSAGES,\n    REPORTS,\n    RESOURCES,\n    USERS,\n    TEXT,\n    SPACER,\n} from '../../modules/itemTypes';\nimport { DEFAULT_STATE_ITEM_FILTER } from '../../reducers/itemFilter';\n\nconst getGridItem = type => {\n    switch (type) {\n        case REPORT_TABLE:\n        case CHART:\n        case MAP:\n        case EVENT_CHART:\n        case EVENT_REPORT:\n            return VisualizationItem;\n        case MESSAGES:\n            return MessagesItem;\n        case REPORTS:\n        case RESOURCES:\n        case USERS:\n            return ListItem;\n        case TEXT:\n            return TextItem;\n        case SPACER:\n            return SpacerItem;\n        case APP:\n            return AppItem;\n        default:\n            return NotSupportedItem;\n    }\n};\n\nexport const Item = props => {\n    const GridItem = getGridItem(props.item.type);\n\n    return (\n        <GridItem\n            item={props.item}\n            editMode={props.editMode}\n            itemFilter={\n                props.editMode ? DEFAULT_STATE_ITEM_FILTER : props.itemFilter\n            }\n            onToggleItemExpanded={props.onToggleItemExpanded}\n        />\n    );\n};\n","import React from 'react';\nimport ItemHeaderButton from '../Item/ItemHeaderButton';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport { colors } from '../../modules/colors';\n\nconst style = {\n    button: {\n        position: 'absolute',\n        top: '7px',\n        right: '7px',\n        zIndex: '1000',\n    },\n    icon: {\n        fill: colors.red,\n    },\n};\n\nconst DeleteItemHeaderButton = ({ onClick }) => (\n    <ItemHeaderButton onClick={onClick} style={style.button}>\n        <DeleteIcon style={style.icon} />\n    </ItemHeaderButton>\n);\n\nexport default DeleteItemHeaderButton;\n","import React from 'react';\nimport LoadingMask from 'd2-ui/lib/loading-mask/LoadingMask.component';\n\nconst styles = {\n    modal: {\n        position: 'absolute',\n        top: 0,\n        left: 0,\n        width: '100%',\n        height: '100%',\n        zIndex: 999999998,\n        pointerEvents: 'none',\n    },\n    dark: {\n        backgroundColor: '#000000',\n        opacity: 0.2,\n        zIndex: 999999999,\n    },\n};\n\nconst ModalLoadingMask = ({ isLoading }) => {\n    if (!isLoading) {\n        return null;\n    }\n\n    return (\n        <div className=\"loading-mask-wrapper\">\n            <div style={styles.modal}>\n                <LoadingMask />\n            </div>\n            <div\n                style={{\n                    ...styles.modal,\n                    ...styles.dark,\n                }}\n            />\n        </div>\n    );\n};\n\nexport default ModalLoadingMask;\n","import React from 'react';\nimport { colors } from '../modules/colors';\n\nexport const NoContentMessage = ({ text }) => (\n    <div\n        style={{\n            padding: '50px 10px',\n            textAlign: 'center',\n            fontSize: '15px',\n            fontWeight: 500,\n            color: colors.charcoalGrey,\n        }}\n    >\n        {text}\n    </div>\n);\n\nexport default NoContentMessage;\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport i18n from '@dhis2/d2-i18n';\nimport ReactGridLayout from 'react-grid-layout';\n\nimport {\n    acUpdateDashboardLayout,\n    acRemoveDashboardItem,\n} from '../../actions/editDashboard';\nimport { Item } from '../Item/Item';\nimport { resize as pluginResize } from '../Item/VisualizationItem/plugin';\nimport { isPluginType } from '../../modules/itemTypes';\nimport {\n    GRID_ROW_HEIGHT,\n    GRID_COMPACT_TYPE,\n    ITEM_MIN_HEIGHT,\n    MARGIN,\n    getGridColumns,\n    hasShape,\n    onItemResize,\n} from './gridUtil';\nimport { orArray } from '../../modules/util';\nimport DeleteItemButton from './DeleteItemButton';\nimport ModalLoadingMask from '../../widgets/ModalLoadingMask';\nimport NoContentMessage from '../../widgets/NoContentMessage';\n\nimport 'react-grid-layout/css/styles.css';\nimport 'react-resizable/css/styles.css';\n\nimport './ItemGrid.css';\nimport { sGetSelectedId, sGetSelectedIsLoading } from '../../reducers/selected';\nimport {\n    sGetEditDashboardRoot,\n    sGetEditDashboardItems,\n} from '../../reducers/editDashboard';\nimport {\n    sGetDashboardById,\n    sGetDashboardItems,\n} from '../../reducers/dashboards';\n\n// Component\n\nconst EXPANDED_HEIGHT = 17;\n\nexport class ItemGrid extends Component {\n    state = {\n        expandedItems: {},\n    };\n\n    NO_ITEMS_MESSAGE = i18n.t('There are no items on this dashboard');\n\n    onToggleItemExpanded = clickedId => {\n        const isExpanded =\n            typeof this.state.expandedItems[clickedId] === 'boolean'\n                ? this.state.expandedItems[clickedId]\n                : false;\n\n        const expandedItems = { ...this.state.expandedItems };\n        expandedItems[clickedId] = !isExpanded;\n        this.setState({ expandedItems });\n    };\n\n    onRemoveItem = clickedId => {\n        this.props.acRemoveDashboardItem(clickedId);\n    };\n\n    componentWillReceiveProps(nextProps) {\n        if (nextProps.edit) {\n            this.setState({ expandedItems: {} });\n        }\n    }\n\n    onLayoutChange = newLayout => {\n        if (this.props.edit) {\n            this.props.acUpdateDashboardLayout(newLayout);\n        }\n    };\n\n    onResizeStop = (layout, oldItem, newItem) => {\n        onItemResize(newItem.i);\n\n        const dashboardItem = this.props.dashboardItems.find(\n            item => item.id === newItem.i\n        );\n\n        // call resize on the item component if it's a plugin type\n        if (dashboardItem && isPluginType(dashboardItem)) {\n            pluginResize(dashboardItem);\n        }\n    };\n\n    onRemoveItemWrapper = id => () => this.onRemoveItem(id);\n\n    render() {\n        const { edit, isLoading, dashboardItems } = this.props;\n\n        if (!isLoading && !dashboardItems.length) {\n            return <NoContentMessage text={this.NO_ITEMS_MESSAGE} />;\n        }\n\n        const items = dashboardItems.map((item, index) => {\n            const expandedItem = this.state.expandedItems[item.id];\n            let hProp = { h: item.h };\n\n            if (expandedItem && expandedItem === true) {\n                hProp.h = item.h + EXPANDED_HEIGHT;\n            }\n\n            return Object.assign({}, item, hProp, {\n                i: item.id,\n                minH: ITEM_MIN_HEIGHT,\n            });\n        });\n\n        return (\n            <div className=\"grid-wrapper\">\n                <ModalLoadingMask isLoading={isLoading} />\n                <ReactGridLayout\n                    onLayoutChange={this.onLayoutChange}\n                    onResizeStop={this.onResizeStop}\n                    className=\"layout\"\n                    layout={items}\n                    margin={MARGIN}\n                    cols={getGridColumns()}\n                    rowHeight={GRID_ROW_HEIGHT}\n                    width={window.innerWidth}\n                    compactType={GRID_COMPACT_TYPE}\n                    isDraggable={edit}\n                    isResizable={edit}\n                    draggableCancel=\"input,textarea\"\n                >\n                    {items.map(item => {\n                        const itemClassNames = [\n                            item.type,\n                            edit ? 'edit' : 'view',\n                        ].join(' ');\n\n                        return (\n                            <div key={item.i} className={itemClassNames}>\n                                {edit ? (\n                                    <DeleteItemButton\n                                        onClick={this.onRemoveItemWrapper(\n                                            item.id\n                                        )}\n                                    />\n                                ) : null}\n                                <Item\n                                    item={item}\n                                    editMode={edit}\n                                    onToggleItemExpanded={\n                                        this.onToggleItemExpanded\n                                    }\n                                />\n                            </div>\n                        );\n                    })}\n                </ReactGridLayout>\n            </div>\n        );\n    }\n}\n\nItemGrid.propTypes = {\n    dashboardItems: PropTypes.array,\n};\n\nItemGrid.defaultProps = {\n    dashboardItems: [],\n};\n\n// Container\n\nconst mapStateToProps = (state, ownProps) => {\n    const selectedDashboard = ownProps.edit\n        ? sGetEditDashboardRoot(state)\n        : sGetDashboardById(state, sGetSelectedId(state));\n\n    const dashboardItems = ownProps.edit\n        ? sGetEditDashboardItems(state)\n        : sGetDashboardItems(state);\n\n    return {\n        isLoading: sGetSelectedIsLoading(state) || !selectedDashboard,\n        dashboardItems,\n    };\n};\n\nconst mapDispatchToProps = {\n    acUpdateDashboardLayout,\n    acRemoveDashboardItem,\n};\n\nconst mergeProps = (stateProps, dispatchProps, ownProps) => {\n    const validItems = orArray(stateProps.dashboardItems).filter(hasShape);\n\n    return {\n        ...dispatchProps,\n        edit: ownProps.edit,\n        isLoading: stateProps.isLoading,\n        dashboardItems: validItems,\n        onItemResize,\n    };\n};\n\nexport default connect(\n    mapStateToProps,\n    mapDispatchToProps,\n    mergeProps\n)(ItemGrid);\n","import React, { Fragment } from 'react';\nimport TitleBar from '../TitleBar/TitleBar';\nimport ItemGrid from '../ItemGrid/ItemGrid';\n\nexport const DashboardContent = props => (\n    <Fragment>\n        <TitleBar edit={props.editMode} />\n        <ItemGrid edit={props.editMode} />\n    </Fragment>\n);\n\nexport default DashboardContent;\n","import React, { Fragment } from 'react';\nimport { connect } from 'react-redux';\nimport isEmpty from 'lodash/isEmpty';\nimport i18n from '@dhis2/d2-i18n';\n\nimport {\n    sGetAllDashboards,\n    sDashboardsIsFetching,\n} from '../../reducers/dashboards';\nimport { sGetSelectedId } from '../../reducers/selected';\nimport DashboardsBar from '../ControlBar/DashboardsBar';\nimport DashboardVerticalOffset from './DashboardVerticalOffset';\nimport DashboardContent from './DashboardContent';\nimport NoContentMessage from '../../widgets/NoContentMessage';\n\nexport const Content = ({ hasDashboardContent, dashboardsIsEmpty }) => {\n    const msg = dashboardsIsEmpty\n        ? i18n.t(\n              'No dashboards found. Use the + button to create a new dashboard.'\n          )\n        : i18n.t('Requested dashboard not found');\n\n    return hasDashboardContent ? (\n        <DashboardContent editMode={false} />\n    ) : (\n        <NoContentMessage text={msg} />\n    );\n};\n\nexport const ViewDashboard = ({ id, dashboardsIsEmpty, dashboardsLoaded }) => {\n    const hasDashboardContent = id && !dashboardsIsEmpty;\n    const contentNotReady = !dashboardsLoaded || id === null;\n\n    return (\n        <Fragment>\n            <DashboardsBar />\n            <DashboardVerticalOffset />\n            <div className=\"dashboard-wrapper\">\n                {contentNotReady ? null : (\n                    <Content\n                        hasDashboardContent={hasDashboardContent}\n                        dashboardsIsEmpty={dashboardsIsEmpty}\n                    />\n                )}\n            </div>\n        </Fragment>\n    );\n};\n\nconst mapStateToProps = state => {\n    const dashboards = sGetAllDashboards(state);\n\n    return {\n        id: sGetSelectedId(state),\n        dashboardsIsEmpty: isEmpty(dashboards),\n        dashboardsLoaded: !sDashboardsIsFetching(state),\n    };\n};\n\nexport default connect(mapStateToProps)(ViewDashboard);\n","import React from 'react';\nimport i18n from '@dhis2/d2-i18n';\nimport Dialog from 'material-ui/Dialog';\n\nimport FlatButton from '../../widgets/FlatButton';\nimport PrimaryButton from '../../widgets/PrimaryButton';\n\nexport const ConfirmDeleteDialog = ({\n    dashboardName,\n    onDeleteConfirmed,\n    onContinueEditing,\n    open,\n}) => {\n    const actions = [\n        <FlatButton onClick={onDeleteConfirmed}>{i18n.t('Delete')}</FlatButton>,\n        <PrimaryButton onClick={onContinueEditing}>\n            {i18n.t('Continue editing')}\n        </PrimaryButton>,\n    ];\n\n    return (\n        <Dialog\n            title={i18n.t('Confirm delete dashboard')}\n            actions={actions}\n            modal={true}\n            open={open}\n        >\n            {i18n.t(\n                'Are you sure you want to delete dashboard \"{{ dashboardName }}\"?',\n                { dashboardName }\n            )}\n        </Dialog>\n    );\n};\n\nexport default ConfirmDeleteDialog;\n","import React, { Component, Fragment } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { Redirect } from 'react-router-dom';\nimport i18n from '@dhis2/d2-i18n';\nimport ControlBar from '@dhis2/d2-ui-core/control-bar/ControlBar';\nimport TranslationDialog from '@dhis2/d2-ui-translation-dialog';\n\nimport PrimaryButton from '../../widgets/PrimaryButton';\nimport FlatButton from '../../widgets/FlatButton';\nimport ConfirmDeleteDialog from './ConfirmDeleteDialog';\nimport {\n    tSaveDashboard,\n    acClearEditDashboard,\n} from '../../actions/editDashboard';\nimport {\n    tDeleteDashboard,\n    acSetDashboardDisplayName,\n} from '../../actions/dashboards';\nimport {\n    sGetEditDashboardRoot,\n    sGetIsNewDashboard,\n} from '../../reducers/editDashboard';\nimport {\n    CONTROL_BAR_ROW_HEIGHT,\n    MIN_ROW_COUNT,\n    getControlBarHeight,\n} from './controlBarDimensions';\nimport { apiFetchDashboard } from '../../api/dashboards';\n\nimport './ControlBar.css';\n\nconst buttonBarStyle = {\n    height: CONTROL_BAR_ROW_HEIGHT,\n    paddingTop: '15px',\n    marginLeft: '15px',\n    marginRight: '15px',\n};\n\nexport class EditBar extends Component {\n    state = {\n        translationDialogIsOpen: false,\n        dashboardModel: undefined,\n        confirmDeleteDialogOpen: false,\n        redirectUrl: undefined,\n    };\n\n    onConfirmDelete = () => {\n        this.setState({ confirmDeleteDialogOpen: true });\n    };\n\n    onSave = () => {\n        this.props.onSave().then(newId => {\n            this.setState({ redirectUrl: `/${newId}` });\n        });\n    };\n\n    onDiscard = () => {\n        this.props.onDiscardChanges();\n        const redirectUrl = this.props.dashboardId\n            ? `/${this.props.dashboardId}`\n            : '/';\n        this.setState({ redirectUrl });\n    };\n\n    onContinueEditing = () => {\n        this.setState({ confirmDeleteDialogOpen: false });\n    };\n\n    onDeleteConfirmed = () => {\n        this.setState({ confirmDeleteDialogOpen: false });\n        this.props.onDelete(this.props.dashboardId).then(() => {\n            this.setState({ redirectUrl: '/' });\n        });\n    };\n\n    onTranslationsSaved = async translations => {\n        if (translations && translations.length) {\n            const dbLocale = await this.context.d2.currentUser.userSettings.get(\n                'keyDbLocale'\n            );\n\n            const translation = translations.find(\n                t => t.locale === dbLocale && t.property === 'NAME'\n            );\n\n            if (translation && translation.value) {\n                this.props.onTranslate(\n                    this.props.dashboardId,\n                    translation.value\n                );\n            }\n        }\n    };\n\n    fetchDashboardModel = () => {\n        if (this.props.dashboardId && !this.state.dashboardModel) {\n            apiFetchDashboard(this.props.dashboardId).then(dashboardModel =>\n                this.setState({ dashboardModel })\n            );\n        }\n    };\n\n    componentDidMount() {\n        this.fetchDashboardModel();\n    }\n\n    componentDidUpdate() {\n        this.fetchDashboardModel();\n    }\n\n    toggleTranslationDialog = () => {\n        this.setState({\n            translationDialogIsOpen: !this.state.translationDialogIsOpen,\n        });\n    };\n\n    confirmDeleteDialog = () =>\n        this.props.deleteAccess && this.props.dashboardId ? (\n            <ConfirmDeleteDialog\n                dashboardName={this.props.dashboardName}\n                onDeleteConfirmed={this.onDeleteConfirmed}\n                onContinueEditing={this.onContinueEditing}\n                open={this.state.confirmDeleteDialogOpen}\n            />\n        ) : null;\n\n    translationDialog = () =>\n        this.state.dashboardModel && this.state.dashboardModel.id ? (\n            <TranslationDialog\n                className=\"translation-dialog\"\n                d2={this.context.d2}\n                open={this.state.translationDialogIsOpen}\n                onRequestClose={this.toggleTranslationDialog}\n                objectToTranslate={this.state.dashboardModel}\n                fieldsToTranslate={['name', 'description']}\n                // TODO handle messages in snackbar\n                onTranslationSaved={this.onTranslationsSaved}\n                onTranslationError={err =>\n                    console.log('translation update error', err)\n                }\n            />\n        ) : null;\n\n    render() {\n        if (this.state.redirectUrl) {\n            return <Redirect to={this.state.redirectUrl} />;\n        }\n\n        const { dashboardId, deleteAccess, updateAccess } = this.props;\n        const controlBarHeight = getControlBarHeight(MIN_ROW_COUNT, false);\n\n        const discardBtnText = updateAccess\n            ? i18n.t('Exit without saving')\n            : i18n.t('Go to dashboards');\n\n        return (\n            <Fragment>\n                <ControlBar\n                    height={controlBarHeight}\n                    editMode={true}\n                    expandable={false}\n                >\n                    <div style={buttonBarStyle}>\n                        {updateAccess ? (\n                            <div className=\"left-controls\">\n                                <span style={{ marginRight: '15px' }}>\n                                    <PrimaryButton\n                                        className=\"save-button\"\n                                        onClick={this.onSave}\n                                    >\n                                        {i18n.t('Save changes')}\n                                    </PrimaryButton>\n                                </span>\n                                {dashboardId && deleteAccess ? (\n                                    <FlatButton\n                                        className=\"delete-button\"\n                                        onClick={this.onConfirmDelete}\n                                    >\n                                        {i18n.t('Delete')}\n                                    </FlatButton>\n                                ) : null}\n                                {dashboardId ? (\n                                    <FlatButton\n                                        className=\"translate-button\"\n                                        onClick={this.toggleTranslationDialog}\n                                    >\n                                        {i18n.t('Translate')}\n                                    </FlatButton>\n                                ) : null}\n                            </div>\n                        ) : null}\n\n                        <div className=\"right-controls\">\n                            <FlatButton\n                                className=\"discard-button\"\n                                onClick={this.onDiscard}\n                            >\n                                {discardBtnText}\n                            </FlatButton>\n                        </div>\n                    </div>\n                </ControlBar>\n                {this.translationDialog()}\n                {this.confirmDeleteDialog()}\n            </Fragment>\n        );\n    }\n}\n\nEditBar.contextTypes = {\n    d2: PropTypes.object,\n};\n\nconst mapStateToProps = state => {\n    const dashboard = sGetEditDashboardRoot(state);\n\n    let deleteAccess;\n    let updateAccess;\n    if (sGetIsNewDashboard(state)) {\n        deleteAccess = true;\n        updateAccess = true;\n    } else {\n        updateAccess = dashboard.access ? dashboard.access.update : false;\n        deleteAccess = dashboard.access ? dashboard.access.delete : false;\n    }\n\n    return {\n        dashboardId: dashboard.id,\n        dashboardName: dashboard.name,\n        deleteAccess,\n        updateAccess,\n    };\n};\n\nconst mapDispatchToProps = dispatch => ({\n    onSave: () => dispatch(tSaveDashboard()).then(id => id),\n    onDelete: id => dispatch(tDeleteDashboard(id)),\n    onDiscardChanges: () => dispatch(acClearEditDashboard()),\n    onTranslate: (id, value) => dispatch(acSetDashboardDisplayName(id, value)),\n});\n\nexport default connect(\n    mapStateToProps,\n    mapDispatchToProps\n)(EditBar);\n","import React, { Fragment, Component } from 'react';\nimport { connect } from 'react-redux';\nimport i18n from '@dhis2/d2-i18n';\n\nimport { acSetEditDashboard } from '../../actions/editDashboard';\nimport { sGetSelectedId } from '../../reducers/selected';\nimport {\n    sGetDashboardById,\n    sGetDashboardItems,\n    sDashboardsIsFetching,\n} from '../../reducers/dashboards';\nimport DashboardVerticalOffset from './DashboardVerticalOffset';\nimport DashboardContent from './DashboardContent';\nimport EditBar from '../ControlBar/EditBar';\nimport NoContentMessage from '../../widgets/NoContentMessage';\n\nexport const Content = ({ updateAccess }) => {\n    return updateAccess ? (\n        <DashboardContent editMode={true} />\n    ) : (\n        <NoContentMessage text={i18n.t('No access')} />\n    );\n};\nexport class EditDashboard extends Component {\n    state = {\n        initialized: false,\n    };\n\n    initEditDashboard = () => {\n        if (this.props.dashboard) {\n            this.setState({ initialized: true });\n            this.props.setEditDashboard(this.props.dashboard, this.props.items);\n        }\n    };\n\n    componentDidMount() {\n        this.initEditDashboard();\n    }\n\n    componentDidUpdate() {\n        if (!this.state.initialized) {\n            this.initEditDashboard();\n        }\n    }\n\n    getDashboardContent = () => {\n        const contentNotReady =\n            !this.props.dashboardsLoaded || this.props.id === null;\n\n        return (\n            <div className=\"dashboard-wrapper\">\n                {contentNotReady ? null : (\n                    <Content updateAccess={this.props.updateAccess} />\n                )}\n            </div>\n        );\n    };\n\n    render() {\n        return (\n            <Fragment>\n                <EditBar />\n                <DashboardVerticalOffset editMode={true} />\n                {this.getDashboardContent()}\n            </Fragment>\n        );\n    }\n}\n\nconst mapStateToProps = state => {\n    const id = sGetSelectedId(state);\n    const dashboard = id ? sGetDashboardById(state, id) : null;\n\n    const updateAccess =\n        dashboard && dashboard.access ? dashboard.access.update : false;\n\n    return {\n        dashboard,\n        id,\n        updateAccess,\n        items: sGetDashboardItems(state),\n        dashboardsLoaded: !sDashboardsIsFetching(state),\n    };\n};\n\nexport default connect(\n    mapStateToProps,\n    {\n        setEditDashboard: acSetEditDashboard,\n    }\n)(EditDashboard);\n","import React, { Component, Fragment } from 'react';\nimport { connect } from 'react-redux';\n\nimport { acSetEditNewDashboard } from '../../actions/editDashboard';\nimport DashboardVerticalOffset from './DashboardVerticalOffset';\nimport EditBar from '../ControlBar/EditBar';\nimport DashboardContent from './DashboardContent';\n\nclass NewDashboard extends Component {\n    componentDidMount() {\n        this.props.setNewDashboard();\n    }\n\n    render() {\n        return (\n            <Fragment>\n                <EditBar />\n                <DashboardVerticalOffset editMode={true} />\n                <div className=\"dashboard-wrapper\">\n                    <DashboardContent editMode={true} />\n                </div>\n            </Fragment>\n        );\n    }\n}\n\nexport default connect(\n    null,\n    {\n        setNewDashboard: acSetEditNewDashboard,\n    }\n)(NewDashboard);\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\n\nimport { tSelectDashboard } from '../../actions/dashboards';\nimport { sDashboardsIsFetching } from '../../reducers/dashboards';\nimport { EDIT, NEW } from './dashboardModes';\nimport ViewDashboard from './ViewDashboard';\nimport EditDashboard from './EditDashboard';\nimport NewDashboard from './NewDashboard';\n\nclass Dashboard extends Component {\n    setDashboard = () => {\n        if (this.props.dashboardsLoaded) {\n            const id = this.props.match.params.dashboardId || null;\n            this.props.selectDashboard(id);\n        }\n    };\n\n    componentDidMount() {\n        this.setDashboard();\n    }\n\n    componentDidUpdate() {\n        this.setDashboard();\n    }\n\n    render() {\n        switch (this.props.mode) {\n            case EDIT:\n                return <EditDashboard />;\n            case NEW:\n                return <NewDashboard />;\n            default:\n                return <ViewDashboard />;\n        }\n    }\n}\n\nconst mapStateToProps = state => {\n    return { dashboardsLoaded: !sDashboardsIsFetching(state) };\n};\n\nexport default connect(\n    mapStateToProps,\n    {\n        selectDashboard: tSelectDashboard,\n    }\n)(Dashboard);\n","export const EDIT = 'edit';\nexport const NEW = 'new';\nexport const VIEW = 'view';\n","import React, { Component } from 'react';\nimport { HashRouter as Router, Route, Switch } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport i18n from '@dhis2/d2-i18n';\nimport HeaderBar from '@dhis2/ui/widgets/HeaderBar';\n\nimport { EDIT, VIEW, NEW } from './Dashboard/dashboardModes';\nimport { acReceivedUser } from '../actions/user';\nimport { tFetchDashboards } from '../actions/dashboards';\nimport { tSetControlBarRows } from '../actions/controlBar';\nimport Dashboard from './Dashboard/Dashboard';\nimport SnackbarMessage from './SnackbarMessage/SnackbarMessage';\n\nimport 'typeface-roboto';\nimport './App.css';\n\nexport class App extends Component {\n    componentDidMount() {\n        this.props.setCurrentUser(this.props.d2.currentUser);\n        this.props.fetchDashboards();\n        this.props.setControlBarRows();\n    }\n\n    getChildContext() {\n        return { baseUrl: this.props.baseUrl, i18n, d2: this.props.d2 };\n    }\n\n    render() {\n        return (\n            <div className=\"app-wrapper\">\n                <div className=\"dashboard-header-bar\">\n                    <HeaderBar appName={i18n.t('Dashboard')} />\n                </div>\n                <Router>\n                    <Switch>\n                        <Route\n                            exact\n                            path=\"/\"\n                            render={props => (\n                                <Dashboard {...props} mode={VIEW} />\n                            )}\n                        />\n                        <Route\n                            exact\n                            path=\"/new\"\n                            render={props => (\n                                <Dashboard {...props} mode={NEW} />\n                            )}\n                        />\n                        <Route\n                            exact\n                            path=\"/:dashboardId\"\n                            render={props => (\n                                <Dashboard {...props} mode={VIEW} />\n                            )}\n                        />\n                        <Route\n                            exact\n                            path=\"/:dashboardId/edit\"\n                            render={props => (\n                                <Dashboard {...props} mode={EDIT} />\n                            )}\n                        />\n                    </Switch>\n                </Router>\n                <SnackbarMessage />\n            </div>\n        );\n    }\n}\n\nApp.childContextTypes = {\n    baseUrl: PropTypes.string,\n    i18n: PropTypes.object,\n    d2: PropTypes.object,\n};\n\nconst mapDispatchToProps = dispatch => {\n    return {\n        setCurrentUser: currentUser => dispatch(acReceivedUser(currentUser)),\n        fetchDashboards: () => dispatch(tFetchDashboards()),\n        setControlBarRows: () => dispatch(tSetControlBarRows()),\n    };\n};\n\nexport default connect(\n    null,\n    mapDispatchToProps\n)(App);\n","import { RECEIVED_USER } from '../reducers/user';\n\nexport const acReceivedUser = value => ({\n    type: RECEIVED_USER,\n    value,\n});\n","//------------------------------------------------------------------------------\n// <auto-generated>\n// This code was generated by d2-i18n-generate.\n//\n// Changes to this file may cause incorrect behavior and will be lost if\n// the code is regenerated.\n// </auto-generated>\n//------------------------------------------------------------------------------\nimport i18n from '@dhis2/d2-i18n';\nimport moment from 'moment';\nimport 'moment/locale/lo';\nimport 'moment/locale/sv';\nimport 'moment/locale/ur';\nimport 'moment/locale/vi';\n\nimport enTranslations from './en/translations.json';\nimport loTranslations from './lo/translations.json';\nimport svTranslations from './sv/translations.json';\nimport urTranslations from './ur/translations.json';\nimport viTranslations from './vi/translations.json';\n\nconst namespace = 'dashboards-app';\nmoment.locale('en');\n\ni18n.addResources('en', namespace, enTranslations);\ni18n.addResources('lo', namespace, loTranslations);\ni18n.addResources('sv', namespace, svTranslations);\ni18n.addResources('ur', namespace, urTranslations);\ni18n.addResources('vi', namespace, viTranslations);\n\ni18n.setDefaultNamespace(namespace);\ni18n.changeLanguage('en');\n\nexport default i18n;\n","/** @module reducers/selected */\nimport { validateReducer } from '../modules/util';\n\nexport const SET_STYLE = 'SET_STYLE';\n\nexport const DEFAULT_STATE_STYLE = 'LIST';\n\n/**\n * Reducer functions that computes and returns the new state based on the given action\n * @function\n * @param {Object} state The current state\n * @param {Object} action The action to be evaluated\n */\nconst style = (state = DEFAULT_STATE_STYLE, action) => {\n    switch (action.type) {\n        case SET_STYLE:\n            return validateReducer(action.value, DEFAULT_STATE_STYLE);\n        default:\n            return state;\n    }\n};\n\nexport default style;\n\n/**\n * Selectors that point to specific props in the state object\n * @function\n * @param {Object} state\n * @returns {Object}\n */\nexport const sGetStyleRoot = state => state.style;\n","import { combineReducers } from 'redux';\nimport arraySort from 'd2-utilizr/lib/arraySort';\n\nimport dashboards, { sGetDashboardsRoot } from './dashboards';\nimport selected from './selected';\nimport dashboardsFilter, {\n    ownerData,\n    sGetFilterName,\n    sGetFilterOrder,\n    sGetFilterOwner,\n} from './dashboardsFilter';\nimport controlBar from './controlBar';\nimport visualizations from './visualizations';\nimport editDashboard from './editDashboard';\nimport messages from './messages';\nimport user from './user';\nimport snackbar from './snackbar';\nimport itemFilter from './itemFilter';\nimport style from './style';\n\nconst USER = 'system';\n\n// Reducers\n\nexport default combineReducers({\n    dashboards,\n    selected,\n    dashboardsFilter,\n    controlBar,\n    visualizations,\n    messages,\n    user,\n    editDashboard,\n    itemFilter,\n    style,\n    snackbar,\n});\n\n// Map constants to data\nconst mapConstToData = {\n    NAME: 'name',\n    ITEMS: 'numberOfItems',\n    CREATED: 'created',\n    OWNER: 'owner',\n};\n\n// Selectors\n\n// Filter dashboards by name\nexport const sFilterDashboardsByName = (dashboards, filter) =>\n    dashboards.filter(d =>\n        d.displayName.toLowerCase().includes(filter.toLowerCase())\n    );\n\n// Filter dashboards by owner, TODO FIXME\nexport const sFilterDashboardsByOwner = (dashboards, filter) => {\n    const ME = ownerData[1]; // TODO\n    const OTHERS = ownerData[2]; // TODO\n\n    switch (filter) {\n        case ME:\n            return dashboards.filter(d => d.owner === USER);\n        case OTHERS:\n            return dashboards.filter(d => d.owner !== USER);\n        default:\n            return dashboards;\n    }\n};\n\n// Filter dashboards by order\nexport const sFilterDashboardsByOrder = (dashboards, filter) => {\n    const filterValues = filter.split(':');\n\n    const key = filterValues[0];\n    const direction = filterValues[1];\n\n    return arraySort(dashboards, direction, mapConstToData[key]);\n};\n\n// Selectors dependency level 2\n\n// Get filtered dashboards\nexport const sGetFilteredDashboards = state => {\n    const dashboards = sGetDashboardsRoot(state);\n\n    const nameFilter = sGetFilterName(state);\n    const ownerFilter = sGetFilterOwner(state);\n    const orderFilter = sGetFilterOrder(state);\n\n    return sFilterDashboardsByOrder(\n        sFilterDashboardsByName(\n            sFilterDashboardsByOwner(dashboards, ownerFilter),\n            nameFilter\n        ),\n        orderFilter\n    );\n};\n","import { createStore, applyMiddleware, compose } from 'redux';\nimport { createLogger } from 'redux-logger';\nimport thunk from 'redux-thunk';\nimport reducer from './reducers';\n\nconst configureStore = () => {\n    const middleware = [thunk];\n\n    // Enable Redux devtools if extension is installed instead of redux-logger\n    const composeEnhancers =\n        window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\n    if (\n        !window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ &&\n        process.env.NODE_ENV !== 'production'\n    ) {\n        middleware.push(createLogger());\n    }\n\n    return createStore(\n        reducer,\n        composeEnhancers(applyMiddleware(...middleware))\n    );\n};\n\nexport default configureStore;\n","import getMuiTheme from 'material-ui/styles/getMuiTheme';\n\nimport { colors } from './colors';\n\nexport const muiTheme = () => {\n    const raisedButton = {\n        primaryColor: colors.royalBlue,\n        disabledColor: colors.paleBlue,\n        disabledTextColor: colors.lightMediumGrey,\n    };\n\n    const theme = getMuiTheme({ raisedButton });\n\n    return theme;\n};\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport { MuiThemeProvider, createMuiTheme } from '@material-ui/core/styles';\nimport { MuiThemeProvider as V0MuiThemeProvider } from 'material-ui';\nimport { init as d2Init, config, getManifest, getUserSettings } from 'd2';\nimport dhis2theme from '@dhis2/d2-ui-core/theme/mui3.theme';\n\n// temporary workaround until new ui headerbar is ready\nimport 'material-design-icons/iconfont/material-icons.css';\nimport './reset.css';\n\nimport App from './components/App';\nimport './index.css';\nimport i18n from './locales';\nimport configureStore from './configureStore';\nimport { muiTheme } from './modules/theme';\n\nconst v1Theme = () => createMuiTheme({ ...dhis2theme });\n\nconst configI18n = userSettings => {\n    const uiLocale = userSettings.keyUiLocale;\n\n    if (uiLocale && uiLocale !== 'en') {\n        config.i18n.sources.add(`./i18n/i18n_module_${uiLocale}.properties`);\n    }\n\n    config.i18n.sources.add('./i18n/i18n_module_en.properties');\n    i18n.changeLanguage(uiLocale);\n};\n\nconst init = async () => {\n    const manifest = await getManifest('./manifest.webapp');\n\n    // log app info\n    console.info(\n        `Dashboards app, v${manifest.version}, ${\n            manifest.manifest_generated_at\n        }`\n    );\n\n    const isProd = process.env.NODE_ENV === 'production';\n\n    if (\n        !isProd &&\n        (!process.env.REACT_APP_DHIS2_BASE_URL ||\n            !process.env.REACT_APP_DHIS2_AUTHORIZATION)\n    ) {\n        throw new Error(\n            'Missing env variables REACT_APP_DHIS2_BASE_URL and REACT_APP_DHIS2_AUTHORIZATION'\n        );\n    }\n\n    // api config\n    const baseUrl = isProd\n        ? manifest.activities.dhis.href\n        : process.env.REACT_APP_DHIS2_BASE_URL;\n    const authorization = process.env.REACT_APP_DHIS2_AUTHORIZATION;\n\n    config.baseUrl = `${baseUrl}/api/${manifest.dhis2.apiVersion}`;\n    config.headers = isProd ? null : { Authorization: authorization };\n    config.schemas = [\n        'chart',\n        'map',\n        'report',\n        'reportTable',\n        'eventChart',\n        'eventReport',\n        'dashboard',\n        'organisationUnit',\n        'userGroup',\n    ];\n\n    getUserSettings()\n        .then(configI18n)\n        .then(() => d2Init(config))\n        .then(initializedD2 => {\n            ReactDOM.render(\n                <Provider store={configureStore()}>\n                    <MuiThemeProvider theme={v1Theme()}>\n                        <V0MuiThemeProvider muiTheme={muiTheme()}>\n                            <App baseUrl={baseUrl} d2={initializedD2} />\n                        </V0MuiThemeProvider>\n                    </MuiThemeProvider>\n                </Provider>,\n                document.getElementById('root')\n            );\n        });\n};\n\ninit();\n","import isObject from 'lodash/isObject';\n\n// validation\nexport function orNull(param) {\n    return param === undefined ? null : param;\n}\n\nexport function orArray(param) {\n    return Array.isArray(param) ? param : [];\n}\n\nexport function orObject(param) {\n    return isObject(param) ? param : {};\n}\n\n// array\nexport function arrayGetById(array, id) {\n    return array.find(item => item.id === id);\n}\n\n// object\nexport function arrayToIdMap(array) {\n    return array.reduce((obj, item) => {\n        obj[item.id] = item;\n        return obj;\n    }, {});\n}\n\n// date\nexport function getDate() {\n    const y = Math.floor(Math.random() * 3) + 2015;\n    const M = Math.floor(Math.random() * 12) + 1;\n    const d = Math.floor(Math.random() * 28) + 1;\n    // const h = Math.floor(Math.random() * 23) + 1;\n    // const m = Math.floor(Math.random() * 59) + 1;\n    // const s = Math.floor(Math.random() * 59) + 1;\n\n    return new Date(`${y}-${M}-${d}`)\n        .toJSON()\n        .replace('T', ' ')\n        .substr(0, 10);\n}\n\nexport const formatDate = (value, uiLocale) => {\n    if (typeof global.Intl !== 'undefined' && Intl.DateTimeFormat) {\n        const locale = uiLocale || 'en';\n        return new Intl.DateTimeFormat(locale, {\n            year: 'numeric',\n            month: 'short',\n            day: 'numeric',\n        }).format(new Date(value));\n    }\n\n    return value.substr(0, 19).replace('T', ' ');\n};\n\n/**\n * Sorts an array of objects based on provided date property\n *\n * @param {Array} items Array of objects\n * @param {String} dateProp Name of the date property to be used for sorting\n * @param {Boolean} ascending Whether to sort ascending or descending\n */\nexport const sortByDate = (items, dateProp, ascending = true) => {\n    const values = Object.values(items);\n\n    values.sort((a, b) => {\n        const aDate = new Date(a[dateProp]);\n        const bDate = new Date(b[dateProp]);\n\n        return ascending ? aDate - bDate : bDate - aDate;\n    });\n\n    return values;\n};\n\n// reducer validator\nexport const validateReducer = (value, defaultValue) =>\n    value === undefined || value === null ? defaultValue : value;\n\nexport const getBaseUrl = d2 => {\n    const api = d2.Api.getApi();\n    const idx = api.baseUrl.indexOf('/api');\n    return idx > -1 ? api.baseUrl.slice(0, idx) : api.baseUrl;\n};\n","import i18n from '@dhis2/d2-i18n';\nimport TableIcon from '@material-ui/icons/ViewList';\nimport ChartIcon from '@material-ui/icons/InsertChart';\nimport MapIcon from '@material-ui/icons/Public';\nimport ExtensionIcon from '@material-ui/icons/Extension';\nimport DescriptionIcon from '@material-ui/icons/Description';\nimport PersonIcon from '@material-ui/icons/Person';\nimport FontDownloadIcon from '@material-ui/icons/FontDownload';\nimport EmailIcon from '@material-ui/icons/Email';\nimport CropFreeIcon from '@material-ui/icons/CropFree';\nimport NotInterestedIcon from '@material-ui/icons/NotInterested';\n\nimport { getBaseUrl } from './util';\n\n// Item types\nexport const REPORT_TABLE = 'REPORT_TABLE';\nexport const CHART = 'CHART';\nexport const MAP = 'MAP';\nexport const EVENT_REPORT = 'EVENT_REPORT';\nexport const EVENT_CHART = 'EVENT_CHART';\nexport const APP = 'APP';\nexport const REPORTS = 'REPORTS';\nexport const RESOURCES = 'RESOURCES';\nexport const USERS = 'USERS';\nexport const MESSAGES = 'MESSAGES';\nexport const TEXT = 'TEXT';\nexport const SPACER = 'SPACER';\n\n// Domain types\nexport const DOMAIN_TYPE_AGGREGATE = 'AGGREGATE';\nexport const DOMAIN_TYPE_TRACKER = 'TRACKER';\n\n// Visualization types\nexport const VISUALIZATION_TYPE_TABLE = 'TABLE';\nexport const VISUALIZATION_TYPE_CHART = 'CHART';\nexport const VISUALIZATION_TYPE_MAP = 'MAP';\n\nexport const spacerContent = 'SPACER_ITEM_FOR_DASHBOARD_LAYOUT_CONVENIENCE';\nexport const emptyTextItemContent = 'TEXT_ITEM_WITH_NO_CONTENT';\nexport const isSpacerType = item =>\n    item.type === TEXT && item.text === spacerContent;\nexport const isTextType = item =>\n    item.type === TEXT && item.text !== spacerContent;\nexport const isPluginType = item =>\n    itemTypeMap[item.type].hasOwnProperty('plugin');\n\nexport const getPlugin = type => {\n    const pluginName = itemTypeMap[type].plugin;\n\n    if (type === CHART) {\n        return true;\n    }\n\n    return global[pluginName];\n};\n\n// Item type map\nexport const itemTypeMap = {\n    [REPORT_TABLE]: {\n        id: REPORT_TABLE,\n        endPointName: 'reportTables',\n        propName: 'reportTable',\n        countName: 'reportTableCount',\n        pluralTitle: i18n.t('Pivot tables'),\n        plugin: 'reportTablePlugin',\n        domainType: DOMAIN_TYPE_AGGREGATE,\n        visualizationType: VISUALIZATION_TYPE_TABLE,\n        appUrl: id => `dhis-web-pivot/?id=${id}`,\n        appName: i18n.t('Pivot Tables'),\n    },\n    [CHART]: {\n        id: CHART,\n        endPointName: 'charts',\n        propName: 'chart',\n        countName: 'chartCount',\n        pluralTitle: i18n.t('Charts'),\n        plugin: 'chartPlugin',\n        domainType: DOMAIN_TYPE_AGGREGATE,\n        visualizationType: VISUALIZATION_TYPE_CHART,\n        appUrl: id => `dhis-web-data-visualizer/#/${id}`,\n        appName: i18n.t('Visualizer'),\n    },\n    [MAP]: {\n        id: MAP,\n        endPointName: 'maps',\n        propName: 'map',\n        countName: 'mapCount',\n        pluralTitle: i18n.t('Maps'),\n        plugin: 'mapPlugin',\n        domainType: DOMAIN_TYPE_AGGREGATE,\n        visualizationType: VISUALIZATION_TYPE_MAP,\n        appUrl: id => `dhis-web-maps/?id=${id}`,\n        appName: i18n.t('Maps'),\n    },\n    [EVENT_REPORT]: {\n        id: EVENT_REPORT,\n        endPointName: 'eventReports',\n        propName: 'eventReport',\n        countName: 'eventReportCount',\n        pluralTitle: i18n.t('Event reports'),\n        plugin: 'eventReportPlugin',\n        domainType: DOMAIN_TYPE_TRACKER,\n        visualizationType: VISUALIZATION_TYPE_TABLE,\n        appUrl: id => `dhis-web-event-reports/?id=${id}`,\n        appName: i18n.t('Event Reports'),\n    },\n    [EVENT_CHART]: {\n        id: EVENT_CHART,\n        endPointName: 'eventCharts',\n        propName: 'eventChart',\n        countName: 'eventChartCount',\n        pluralTitle: i18n.t('Event charts'),\n        plugin: 'eventChartPlugin',\n        domainType: DOMAIN_TYPE_TRACKER,\n        visualizationType: VISUALIZATION_TYPE_CHART,\n        appUrl: id => `dhis-web-event-visualizer/?id=${id}`,\n        appName: i18n.t('Event Visualizer'),\n    },\n    [APP]: {\n        endPointName: 'apps',\n        propName: 'appKey',\n        countName: 'appCount',\n        pluralTitle: 'Apps',\n    },\n    [REPORTS]: {\n        id: REPORTS,\n        endPointName: 'reports',\n        propName: 'reports',\n        countName: 'reportCount',\n        pluralTitle: i18n.t('Reports'),\n        appUrl: id =>\n            `dhis-web-reporting/getReportParams.action?mode=report&uid=${id}`,\n    },\n    [RESOURCES]: {\n        id: RESOURCES,\n        endPointName: 'resources',\n        propName: 'resources',\n        countName: 'resourceCount',\n        pluralTitle: i18n.t('Resources'),\n        appUrl: id => `api/documents/${id}/data`,\n    },\n    [USERS]: {\n        id: USERS,\n        endPointName: 'users',\n        propName: 'users',\n        countName: 'userCount',\n        pluralTitle: i18n.t('Users'),\n        appUrl: id => `dhis-web-dashboard-integration/profile.action?id=${id}`,\n    },\n    [TEXT]: {\n        id: TEXT,\n        propName: 'text',\n    },\n    [MESSAGES]: {\n        propName: 'messages',\n    },\n    [SPACER]: {\n        propName: 'text',\n    },\n};\n\nexport const getItemUrl = (type, item, d2) => {\n    let url;\n\n    if (type === APP) {\n        url = item.launchUrl;\n    }\n\n    if (itemTypeMap[type] && itemTypeMap[type].appUrl) {\n        url = `${getBaseUrl(d2)}/${itemTypeMap[type].appUrl(item.id)}`;\n    }\n\n    return url;\n};\n\nexport const getItemIcon = type => {\n    switch (type) {\n        case REPORT_TABLE:\n        case EVENT_REPORT:\n        case REPORTS:\n            return TableIcon;\n        case CHART:\n        case EVENT_CHART:\n            return ChartIcon;\n        case MAP:\n            return MapIcon;\n        case APP:\n            return ExtensionIcon;\n        case RESOURCES:\n            return DescriptionIcon;\n        case USERS:\n            return PersonIcon;\n        case TEXT:\n            return FontDownloadIcon;\n        case MESSAGES:\n            return EmailIcon;\n        case SPACER:\n            return CropFreeIcon;\n        default:\n            return NotInterestedIcon;\n    }\n};\n"],"sourceRoot":""}
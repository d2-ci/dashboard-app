{"version":3,"sources":["D2App/components/ControlBar/ViewControlBar/styles/DashboardItemChip.module.css","D2App/components/ControlBar/ViewControlBar/styles/ClearButton.module.css","D2App/components/ControlBar/ViewControlBar/styles/Filter.module.css","D2App/components/ControlBar/ViewControlBar/styles/Content.module.css","D2App/components/ControlBar/ViewControlBar/styles/ShowMoreButton.module.css","D2App/components/ControlBar/ViewControlBar/styles/DragHandle.module.css","D2App/components/ControlBar/ViewControlBar/styles/DashboardsBar.module.css","D2App/components/Dashboard/styles/DashboardContainer.module.css","D2App/modules/itemTypes.js","D2App/modules/util.js","D2App/components/ItemFilter/styles/FilterSelector.module.css","D2App/components/TitleBar/styles/ViewTitleBar.module.css","D2App/modules/loadExternalScript.js","D2App/components/Item/VisualizationItem/Visualization/styles/NoVisualizationMessage.module.css","D2App/components/Item/VisualizationItem/Visualization/styles/LoadingMask.module.css","D2App/components/Item/VisualizationItem/styles/FatalErrorBoundary.module.css","D2App/components/Item/ItemHeader/styles/DeleteItemButton.module.css","D2App/components/Item/ItemHeader/styles/PrintItemInfo.module.css","D2App/components/Item/VisualizationItem/styles/ItemFooter.module.css","D2App/components/Item/ListItem/Item.module.css","D2App/components/Item/PrintTitlePageItem/styles/Item.module.css","D2App/components/FilterBar/styles/FilterBar.module.css","D2App/components/Dashboard/styles/ViewDashboard.module.css","D2App/components/ItemSelector/styles/HeaderMenuItem.module.css","D2App/components/ItemSelector/styles/ContentMenuItem.module.css","D2App/components/ItemSelector/styles/CategorizedMenuGroup.module.css","D2App/components/ItemSelector/styles/ItemSelector.module.css","D2App/components/TitleBar/styles/EditTitleBar.module.css","D2App/components/ControlBar/styles/ConfirmDeleteDialog.module.css","D2App/components/ControlBar/styles/EditBar.module.css","D2App/components/Dashboard/styles/NotSupportedNotice.module.css","D2App/components/Dashboard/styles/PrintInfo.module.css","D2App/components/Dashboard/styles/PrintActionsBar.module.css","D2App/components/Dashboard/styles/PrintLayoutDashboard.module.css","D2App/components/Dashboard/styles/EditDashboard.module.css","D2App/components/Dashboard/styles/NewDashboard.module.css","D2App/components/Dashboard/styles/PrintDashboard.module.css","D2App/components/WindowDimensionsProvider.js","D2App/api/settings.js","D2App/components/SystemSettingsProvider.js","D2App/icons/Star.js","D2App/api/dataStatistics.js","D2App/components/ControlBar/ViewControlBar/DashboardItemChip.js","D2App/icons/AddCircle.js","D2App/icons/Search.js","D2App/icons/Clear.js","D2App/components/ControlBar/ViewControlBar/ClearButton.js","D2App/reducers/dashboardsFilter.js","D2App/modules/gridUtil.js","D2App/modules/smallScreen.js","D2App/components/ControlBar/ViewControlBar/Filter.js","D2App/actions/dashboardsFilter.js","D2App/modules/uiBackendItemConverter.js","D2App/reducers/dashboards.js","D2App/reducers/selected.js","D2App/modules/getFilteredDashboards.js","D2App/components/ControlBar/ViewControlBar/Content.js","D2App/components/ControlBar/ViewControlBar/assets/icons.js","D2App/components/ControlBar/ViewControlBar/ShowMoreButton.js","D2App/components/ControlBar/ViewControlBar/DragHandle.js","D2App/components/ControlBar/ViewControlBar/controlBarDimensions.js","D2App/reducers/controlBar.js","D2App/api/userDataStore.js","D2App/api/controlBar.js","D2App/actions/controlBar.js","D2App/components/ControlBar/ViewControlBar/DashboardsBar.js","D2App/widgets/NoContentMessage.js","D2App/components/Dashboard/DashboardContainer.js","D2App/components/Item/VisualizationItem/assets/icons.js","D2App/api/description.js","D2App/reducers/user.js","D2App/reducers/dimensions.js","D2App/reducers/itemFilters.js","D2App/actions/itemFilters.js","D2App/reducers/messages.js","D2App/api/messages.js","D2App/components/Item/MessagesItem/actions.js","D2App/reducers/alert.js","D2App/actions/alert.js","D2App/reducers/visualizations.js","D2App/actions/visualizations.js","D2App/api/metadata.js","D2App/api/index.js","D2App/api/dashboards.js","D2App/actions/selected.js","D2App/api/localStorage.js","D2App/actions/dashboards.js","D2App/components/ItemFilter/FilterDialog.js","D2App/reducers/activeModalDimension.js","D2App/actions/activeModalDimension.js","D2App/components/ItemFilter/FilterSelector.js","D2App/components/TitleBar/ViewTitleBar.js","D2App/api/starDashboard.js","D2App/components/Item/VisualizationItem/Visualization/DefaultPlugin.js","D2App/components/Item/VisualizationItem/Visualization/NoVisualizationMessage.js","D2App/components/Item/VisualizationItem/Visualization/MapPlugin.js","D2App/components/Item/VisualizationItem/Visualization/LoadingMask.js","D2App/components/Item/VisualizationItem/Visualization/getFilteredVisualization.js","D2App/components/Item/VisualizationItem/Visualization/getVisualizationConfig.js","D2App/modules/memoizeOne.js","D2App/components/Item/VisualizationItem/Visualization/DataVisualizerPlugin.js","D2App/components/Item/VisualizationItem/Visualization/Visualization.js","D2App/components/Item/VisualizationItem/FatalErrorBoundary.js","D2App/components/Item/ItemHeader/ViewItemActions.js","D2App/components/Item/ItemHeader/DeleteItemButton.js","D2App/reducers/editDashboard.js","D2App/api/editDashboard.js","D2App/actions/editDashboard.js","D2App/components/Item/ItemHeader/EditItemActions.js","D2App/icons/Info.js","D2App/components/Item/ItemHeader/PrintItemInfo.js","D2App/components/Dashboard/dashboardModes.js","D2App/components/Item/ItemHeader/ItemHeader.js","D2App/components/Item/VisualizationItem/ItemHeaderButtons.js","D2App/components/Item/VisualizationItem/ItemFooter.js","D2App/components/Item/VisualizationItem/Item.js","D2App/widgets/Line.js","D2App/components/Item/MessagesItem/Item.js","D2App/components/Item/NotSupportedItem/Item.js","D2App/icons/Description.js","D2App/icons/Delete.js","D2App/components/Item/ListItem/Item.js","D2App/components/Item/ListItem/actions.js","D2App/reducers/printDashboard.js","D2App/components/Item/TextItem/Item.js","D2App/components/Item/AppItem/Item.js","D2App/components/Item/SpacerItem/Item.js","D2App/components/Item/PageBreakItem/Item.js","D2App/components/Item/PrintTitlePageItem/Item.js","D2App/components/Item/Item.js","D2App/components/Item/ProgressiveLoadingContainer.js","D2App/components/ItemGrid/ViewItemGrid.js","D2App/components/FilterBar/FilterBadge.js","D2App/components/FilterBar/FilterBar.js","D2App/actions/printDashboard.js","D2App/components/Dashboard/ViewDashboard.js","D2App/components/ItemSelector/ItemSearchField.js","D2App/components/ItemSelector/HeaderMenuItem.js","D2App/icons/Launch.js","D2App/components/ItemSelector/ContentMenuItem.js","D2App/components/ItemSelector/actions.js","D2App/components/ItemSelector/selectableItems.js","D2App/components/ItemSelector/CategorizedMenuGroup.js","D2App/components/ItemSelector/SinglesMenuGroup.js","D2App/components/ItemSelector/ItemSelector.js","D2App/components/TitleBar/EditTitleBar.js","D2App/components/ItemGrid/EditItemGrid.js","D2App/components/ControlBar/ConfirmDeleteDialog.js","D2App/components/ControlBar/EditBar.js","D2App/components/Dashboard/NotSupportedNotice.js","D2App/components/Dashboard/PrintInfo.js","D2App/icons/LessHorizontal.js","D2App/components/Dashboard/PrintActionsBar.js","D2App/modules/printUtils.js","D2App/components/ItemGrid/StaticGrid.js","D2App/components/ItemGrid/PrintLayoutItemGrid.js","D2App/components/Dashboard/PrintLayoutDashboard.js","D2App/components/Dashboard/EditDashboard.js","D2App/components/Dashboard/NewDashboard.js","D2App/components/ItemGrid/PrintItemGrid.js","D2App/components/Dashboard/PrintDashboard.js","D2App/components/Dashboard/Dashboard.js","D2App/components/AlertBar/AlertBar.js","D2App/modules/getFilteredDimensions.js","D2App/components/App.js","D2App/actions/user.js","D2App/actions/dimensions.js","D2App/reducers/style.js","D2App/reducers/index.js","D2App/configureStore.js","D2App/locales/index.js","D2App/AppWrapper.js","D2App/modules/item.js","D2App/components/Item/VisualizationItem/Visualization/plugin.js","D2App/modules/getGridItemDomId.js","D2App/components/Item/ItemHeader/styles/ItemHeader.module.css"],"names":["module","exports","VISUALIZATION","REPORT_TABLE","CHART","MAP","EVENT_REPORT","EVENT_CHART","APP","REPORTS","RESOURCES","USERS","MESSAGES","TEXT","SPACER","PAGEBREAK","PRINT_TITLE_PAGE","DOMAIN_TYPE_AGGREGATE","DOMAIN_TYPE_TRACKER","isVisualizationType","item","itemTypeMap","type","hasMapView","itemType","domainType","isTrackerDomainType","getDefaultItemCount","defaultItemCount","getAppName","appName","id","endPointName","propName","pluralTitle","i18n","t","appUrl","dataStatisticsName","Date","getTime","getEndPointName","getDataStatisticsName","getItemUrl","baseUrl","url","launchUrl","getItemIcon","TableIcon","ChartIcon","MapIcon","ExtensionIcon","DescriptionIcon","PersonIcon","FontDownloadIcon","EmailIcon","CropFreeIcon","NotInterestedIcon","orArray","param","Array","isArray","orObject","isObject","arrayToIdMap","array","reduce","obj","formatDate","value","uiLocale","global","Intl","DateTimeFormat","locale","year","month","day","format","substr","replace","validateReducer","defaultValue","undefined","loadExternalScript","src","startsWith","path","process","join","normalizeRelativePath","Promise","resolve","reject","document","querySelector","isScriptLoaded","element","createElement","async","cleanup","console","log","head","removeChild","onload","e","onerror","error","appendChild","WindowDimensionsCtx","createContext","windowDims","height","window","innerHeight","width","innerWidth","WindowDimensionsProvider","children","dimensions","setDimensions","useState","useEffect","handleResize","debounce","addEventListener","removeEventListener","Provider","useWindowDimensions","useContext","DEFAULT_SETTINGS","displayNameProperty","keyDashboardContextMenuItemOpenInRelevantApp","keyDashboardContextMenuItemShowInterpretationsAndDetails","keyDashboardContextMenuItemSwitchViewType","keyDashboardContextMenuItemViewFullscreen","keyGatherAnalyticalObjectStatisticsInDashboardViews","SYSTEM_SETTINGS_REMAPPINGS","renameSystemSettings","settings","Object","keys","mapped","key","query","resource","params","SystemSettingsCtx","SystemSettingsProvider","setSettings","engine","useDataEngine","systemSettings","settingsQuery","assign","fetchData","useSystemSettings","StarIcon","className","xmlns","viewBox","d","fill","apiPostDataStatistics","eventType","d2","getInstance","Api","getApi","post","DashboardItemChip","starred","selected","label","dashboardId","onClick","chipProps","selectedState","classes","unselected","icon","Star","debouncedPostStatistics","link","to","data-test","AddCircleIcon","colors","teal600","SearchIcon","small","ClearIcon","grey800","ClearButton","onClear","button","Clear","color","SET_DASHBOARDS_FILTER","CLEAR_DASHBOARDS_FILTER","sGetDashboardsFilter","state","dashboardsFilter","GRID_COMPACT_TYPE","GRID_ROW_HEIGHT_PX","MARGIN_PX","MARGIN_SM_PX","GRID_PADDING_PX","NEW_ITEM_SHAPE","x","y","w","h","isNonNegativeInteger","Number","isInteger","hasShape","withShape","items","map","i","col","row","Math","floor","itemWidth","MAX_ITEM_GRID_WIDTH","getShape","originalH","getGridWidth","windowWidthPx","getGridUnitsForSmFromPx","hPx","gridUnitHeightPx","round","getProportionalHeight","wPx","getItemWHPx","ratioWH","newWPx","newHPx","getGridItemProperties","itemId","minH","getPageBreakItemShape","yPos","isStatic","GRID_COLUMNS","static","getPrintTitlePageItemShape","isOneItemPerPage","gridUnits","colOrRowSize","marginPx","max","isSmallScreen","mapDispatchToProps","setDashboardsFilter","clearDashboardsFilter","connect","filterText","expanded","onKeypressEnter","onSearchClicked","focusedClassName","setFocusedClassName","inputFocused","setInputFocus","cx","container","collapsed","searchButton","Search","searchIcon","searchArea","onFocus","event","preventDefault","focused","onBlur","searchIconContainer","searchIconSmall","searchIconLarge","input","placeholder","onChange","target","onKeyUp","keyCode","ref","focus","clearButtonContainer","spacerContent","emptyTextItemContent","isTextType","text","convertUiItemsToBackend","isUiSpacerType","convertBackendItemsToUi","isBackendSpacerType","gridProperties","SET_DASHBOARDS","ADD_DASHBOARDS","SET_DASHBOARD_STARRED","SET_DASHBOARD_DISPLAY_NAME","SET_DASHBOARD_ITEMS","DEFAULT_STATE_DASHBOARDS","byId","EMPTY_DASHBOARD","updateDashboardProp","prop","sGetDashboardsRoot","dashboards","sGetDashboardById","sDashboardsIsFetching","sGetAllDashboards","sGetDashboardItems","sGetStarredDashboards","values","filter","dashboard","sGetUnstarredDashboards","getCustomDashboards","data","arrayFrom","name","displayName","description","displayDescription","favorite","owner","user","created","split","lastUpdated","access","numberOfItems","dashboardItems","length","SET_SELECTED_ID","SET_SELECTED_ISLOADING","SET_SELECTED_SHOWDESCRIPTION","SET_SELECTED_ITEM_ACTIVE_TYPE","CLEAR_SELECTED_ITEM_ACTIVE_TYPES","DEFAULT_STATE_SELECTED_SHOWDESCRIPTION","DEFAULT_STATE_SELECTED_ITEM_ACTIVE_TYPES","combineReducers","action","isLoading","showDescription","itemActiveTypes","activeType","sGetSelectedRoot","sGetSelectedId","sGetSelectedIsLoading","sGetSelectedShowDescription","sGetSelectedItemActiveType","getFilteredDashboards","filteredDashboards","arraySort","toLowerCase","includes","withRouter","selectedId","history","onChipClicked","onSelectDashboard","push","controlsSmall","Filter","chipsContainer","controlsLarge","newLink","AddCircle","ChevronDown","ChevronUp","ShowMoreButton","dashboardBarIsExpanded","disabled","containerRef","useRef","buttonLabel","onButtonClicked","buttonEl","current","MouseEvent","bubbles","cancelable","dispatchEvent","content","placement","onMouseOver","onMouseOut","showMore","aria-label","DragHandle","onHeightChanged","setDragging","startingY","setStartingY","onDrag","stopPropagation","currentY","clientY","requestAnimationFrame","onEndDrag","draghandle","onMouseDown","SET_CONTROLBAR_USER_ROWS","userRows","sGetControlBarUserRows","controlBar","sGetControlBarRoot","NAMESPACE","hasNamespace","currentUser","dataStore","has","getNamespace","get","create","apiPostUserDataStoreValue","set","apiGetUserDataStoreValue","namespace","find","k","KEY_CONTROLBAR_ROWS","acSetControlBarUserRows","rows","updateUserRows","onExpandedChanged","dragging","userRowsChanged","createRef","rootElement","documentElement","style","setProperty","apiPostControlBarRows","scrollToTop","scroll","toggleExpanded","cancelExpanded","newHeight","newRows","min","spacer","NoContentMessage","padding","textAlign","fontSize","fontWeight","grey600","DashboardContainer","covered","ThreeDots","SpeechBubble","margin","fillRule","transform","Warning","Fullscreen","ExitFullscreen","KEY_SHOW_DESCRIPTION","RECEIVED_USER","DEFAULT_STATE_USER","username","isSuperuser","sGetUserUsername","SET_DIMENSIONS","DEFAULT_DIMENSIONS","getDimensionById","DIMENSION_ID_PERIOD","DIMENSION_ID_ORGUNIT","sGetDimensions","CLEAR_ITEM_FILTERS","SET_ITEM_FILTERS","ADD_ITEM_FILTER","REMOVE_ITEM_FILTER","DEFAULT_STATE_ITEM_FILTERS","sGetItemFiltersRoot","itemFilters","sGetNamedItemFilters","createSelector","filters","arr","dimension","acRemoveItemFilter","RECEIVED_MESSAGES","sGetMessagesRoot","messages","messageConversationsQuery","fields","order","pageSize","tGetMessages","dataEngine","messageConversations","getMessages","dispatch","err","SET_ALERT_MESSAGE","CLEAR_ALERT_MESSAGE","sGetAlertMessage","alert","acClearAlertMessage","ADD_VISUALIZATION","CLEAR_VISUALIZATIONS","DEFAULT_STATE_VISUALIZATIONS","isEmpty","p","sGetVisualization","visualizations","sGetVisualizationsRoot","acAddVisualization","getIdNameFields","rename","getDimensionFields","withItems","arrayClean","getAxesFields","getFavoriteFields","withDimensions","withOptions","getFavoritesFields","apiFetchVisualization","getVisualizationId","onError","getDashboardItemsFields","withFavorite","getDashboardFields","dashboardsQuery","paging","dashboardQuery","deleteDashboardMutation","apiFetchDashboard","variables","acSetSelectedId","acSetSelectedIsLoading","acSetSelectedShowDescription","tSetSelectedDashboardById","getState","alertTimeout","setTimeout","onSuccess","acAppendDashboards","customDashboard","acSetDashboardItems","localStorage","setItem","forEach","getVisualizationFromItem","clearTimeout","tFetchDashboards","acSetDashboards","apiFetchDashboards","tDeleteDashboard","mutate","apiDeleteDashboard","initiallySelectedItems","addItemFilter","removeItemFilter","onClose","setFilters","useD2","onSelectItems","dimensionId","onDeselectItems","itemIdsToRemove","newList","onReorderItems","itemIds","oldList","reorderedList","dataTest","position","large","commonProps","onSelect","onDeselect","onReorder","selectedItems","selectedPeriods","ouItems","renderDialogContent","secondary","primary","filterItems","SET_ACTIVE_MODAL_DIMENSION","CLEAR_ACTIVE_MODAL_DIMENSION","DEFAULT_STATE_ACTIVE_MODAL_DIMENSION","sGetActiveModalDimension","activeModalDimension","acSetActiveModalDimension","clearActiveModalDimension","setActiveModalDimension","props","showPopover","setShowPopover","onCloseDialog","buttonContainer","onClickOutside","reference","arrow","popover","onDimensionClick","selectedIds","ViewTitleBar","setDashboardStarred","updateShowDescription","moreOptionsIsOpen","setMoreOptionsIsOpen","sharingDialogIsOpen","setSharingDialogIsOpen","redirectUrl","setRedirectUrl","warningAlert","useAlert","msg","warning","toggleSharingDialog","toggleMoreOptions","StarBorder","showHideDescriptionLabel","toggleStarredDashboardLabel","onToggleStarredDashboard","isStarred","mutation","getStarDashboardMutation","getUnstarDashboardMutation","apiStarDashboard","then","catch","show","buttonRef","userAccess","descriptionClasses","descContainer","desc","noDesc","getMoreButton","useSmall","moreText","titleBar","title","actions","star","strip","update","editLink","manage","shareButton","moreButton","moreButtonSmall","dense","apiPostShowDescription","open","onRequestClose","defaultProps","DefaultPlugin","visualization","options","useConfig","credentials","auth","defaultHeaders","Authorization","prevItem","prevActiveType","load","unmount","shouldPluginReload","reloadAllowed","visChanged","getGridItemDomId","NoVisualizationMessage","message","MapPlugin","applyFilters","mapViews","mapView","layer","pluginIsAvailable","hideTitle","LoadingMask","center","getFilteredVisualization","visRows","visColumns","columns","visFilters","dimensionFound","dimensionObjects","getWithoutId","object","getVisualizationConfig","originalType","extractedMapView","mv","VIS_TYPE_COLUMN","VIS_TYPE_PIVOT_TABLE","layout","getAdaptedUiLayoutByType","memoizeOne","fn","lastArgs","lastValue","args","every","arg","VisualizationPlugin","React","lazy","DataVisualizerPlugin","fallback","Visualization","Component","constructor","super","pluginLoaded","onLoadingComplete","this","setState","memoizedGetFilteredVisualization","memoizedGetVisualizationConfig","render","availableHeight","availableWidth","pluginProps","forDashboard","ownProps","FatalErrorBoundary","errorFound","componentDidCatch","info","ViewItemActions","actionButtons","itemActionsWrap","DeleteItemButton","deleteItemButton","red500","RECEIVED_EDIT_DASHBOARD","RECEIVED_NOT_EDITING","START_NEW_DASHBOARD","RECEIVED_TITLE","RECEIVED_DESCRIPTION","ADD_DASHBOARD_ITEM","REMOVE_DASHBOARD_ITEM","UPDATE_DASHBOARD_ITEM","RECEIVED_DASHBOARD_LAYOUT","SET_PRINT_PREVIEW_VIEW","CLEAR_PRINT_PREVIEW_VIEW","DEFAULT_STATE_EDIT_DASHBOARD","NEW_DASHBOARD_STATE","printPreviewView","sGetEditDashboardRoot","editDashboard","sGetIsEditing","sGetIsPrintPreviewView","sGetEditDashboardItems","createDashboardMutation","updateDashboardMutation","generatePayload","acClearEditDashboard","acAddDashboardItem","itemPropName","generateUid","gridItemProperties","shape","acUpdateDashboardItem","acRemoveDashboardItem","tSaveDashboard","dashboardToSave","response","uid","updateDashboard","postDashboard","WarningIcon","PrintWarning","Info","EDIT","NEW","VIEW","PRINT","PRINT_LAYOUT","isEditMode","mode","isPrintMode","isViewMode","ItemHeader","forwardRef","dashboardMode","isShortened","rest","Actions","EditItemActions","PrintItemInfo","getItemActionsMap","itemHeaderWrap","itemTitle","iconFill","ItemHeaderButtons","menuIsOpen","setMenuIsOpen","isOpen","onSelectActiveType","openInRelevantApp","showInterpretationsAndDetails","switchViewType","fullscreenAllowedInSettings","isTrackerType","onViewTable","closeMenu","onViewChart","onViewMap","canViewAs","isSingleValue","isYearOverYear","VIS_TYPE_GAUGE","VIS_TYPE_PIE","interpretationMenuLabel","activeFooter","ViewAsMenuItems","fullscreenAllowed","fullscreenSupported","isFullscreen","onToggleFullscreen","href","getLink","onToggleFooter","ItemFooter","line","scrollContainer","Item","showFooter","configLoaded","isFullscreenSupported","el","itemDomElSelector","requestFullscreen","webkitRequestFullscreen","handleFullscreenChange","fullscreenElement","webkitFullscreenElement","pluginResize","exitFullscreen","webkitExitFullscreen","getUniqueKey","uniqueId","onToggleItemExpanded","setActiveType","getActiveType","isEditing","getAvailableHeight","calculatedHeight","smallOriginalH","getItemHeightPx","headerRef","clientHeight","memoizedGetContentHeight","contentRef","offsetHeight","getAvailableWidth","rect","getBoundingClientRect","ITEM_CONTENT_PADDING","measuredHeight","preferMeasured","updateVisualization","onfullscreenchange","onwebkitfullscreenchange","componentWillUnmount","componentDidUpdate","prevProps","gridWidth","setViewportSize","clientWidth","getVisualizationName","shortened","Consumer","Function","prototype","backgroundColor","grey200","border","Line","PRIVATE","messageTypes","VALIDATION_RESULT","TICKET","SYSTEM","list","listStyleType","paddingLeft","seeAll","marginBottom","sender","lineHeight","snippet","maxHeight","overflow","MessagesContainer","setUiLocale","userSettings","getUiLocale","getMessageHref","msgIdentifier","messageType","modeClass","latestMsg","slice","getMessageSender","readClass","read","msgDate","location","messageCount","getMessageItems","NotSupportedItem","display","justifyContent","alignItems","align","grey500","DeleteIcon","getItemTitle","tRemoveListItemContent","dashboardItem","listItemType","newContent","contentItems","index","findIndex","getContentItems","contentItem","deleteButton","deletebutton","deleteicon","grey900","Description","itemicon","SET_PRINT_DASHBOARD","CLEAR_PRINT_DASHBOARD","ADD_PRINT_DASHBOARD_ITEM","SET_PRINT_DASHBOARD_LAYOUT","REMOVE_PRINT_DASHBOARD_ITEM","UPDATE_PRINT_DASHBOARD_ITEM","DEFAULT_STATE_PRINT_DASHBOARD","DEFAULT_DASHBOARD_ITEMS","NEW_PRINT_DASHBOARD_STATE","sGetPrintDashboardRoot","printDashboard","sGetIsPrinting","sGetPrintDashboardItems","textDiv","whiteSpace","textField","fontStretch","marginTop","onChangeText","updatedItem","viewItem","textDivStyle","editItem","onEdit","multiline","fullWidth","printItem","textItem","getIframeSrc","appDetails","iframeSrc","ouIds","ouFilter","appKey","system","installedApps","app","dashboardWidget","SpacerItem","PageBreakItem","PrintTitlePageItem","titlePage","filterTitle","listItems","filterListItem","val","filterList","getItemFilterList","viewDashboard","sGetPrintDashboardName","sGetPrintDashboardDescription","GridItem","VisualizationItem","MessagesItem","ListItem","TextItem","AppItem","getGridItem","ProgressiveLoadingContainer","shouldLoad","shouldLoadHandler","handlerOptions","passive","checkShouldLoad","bufferPx","bufferFactor","bottom","top","removeHandler","registerHandler","debounceMs","from","getElementsByClassName","componentDidMount","eventProps","pick","selectedDashboard","expandedItems","setExpandedItems","displayItems","setDisplayItems","layoutSm","setLayoutSm","setGridWidth","getItemsWithAdjustedHeight","sortBy","clickedId","isExpanded","newExpandedItems","expandedItem","expandedHeight","translucent","rowHeight","cols","lg","sm","breakpoints","SMALL_SCREEN_BREAKPOINT","layouts","compactType","containerPadding","isDraggable","isResizable","draggableCancel","onWidthChange","containerWidth","getItemComponent","styles","badgeContainer","borderRadius","white","badge","cursor","badgeRemove","textDecoration","marginLeft","FilterBadge","onRemove","count","FilterBar","onBadgeRemove","onBadgeClick","bar","removeItemFIlter","acSetPrintDashboard","acClearPrintDashboard","acAddPrintDashboardItem","acUpdatePrintDashboardItem","dashboardIsEditing","dashboardIsPrinting","clearEditDashboard","clearPrintDashboard","controlbarExpanded","setControlbarExpanded","cover","ViewItemGrid","ItemSearchField","HeaderMenuItem","LaunchIcon","LaunchLink","launchLink","rel","InsertButton","buttonInsert","ContentMenuItem","onInsert","visType","ItemIcon","renderedItemIcon","visTypeIcons","menuItem","marginRight","singleItems","header","categorizedItems","listItemTypes","tAddListItemContent","dashboardItemIndex","hasMore","onChangeItemsLimit","seeMore","setSeeMore","addItem","newItem","itemUrl","showMoreButton","category","addToDashboard","ItemSelector","setIsOpen","setFilter","setItems","maxOptions","setMaxOptions","Set","queryString","filterStr","updateMaxOptions","delete","add","inputRef","maxWidth","menu","itemCount","allItems","concat","EditTitleBar","onChangeTitle","onChangeDescription","section","titleDescription","_","itemSelector","acUpdateDashboardLayout","onLayoutChange","newLayout","onResizeStop","oldItem","ConfirmDeleteDialog","dashboardName","onDeleteConfirmed","onContinueEditing","destructive","saveFailedMessage","deleteAccess","updateAccess","sGetIsNewDashboard","isPrintPreviewView","clearPrintPreview","saveDashboard","onDelete","onDiscardChanges","onTranslate","acSetDashboardDisplayName","showPrintPreview","translationDlgIsOpen","setTranslationDlgIsOpen","setDashboard","confirmDeleteDlgIsOpen","setConfirmDeleteDlgIsOpen","failureAlert","critical","dboard","onConfirmDelete","onSave","newId","onPrintPreview","onTranslationsSaved","translations","dbLocale","translation","property","toggleTranslationDialog","discardBtnText","editBar","controls","objectToTranslate","modelDefinition","fieldsToTranslate","onTranslationSaved","onTranslationError","NotSupportedNotice","noticeContainer","PrintInfo","isLayout","layoutStyle","printSuggestions","divider","LessHorizontalIcon","PrintActionsBar","getExitPrintButton","isSmall","buttonSmall","buttonLarge","LessHorizontal","getPrintButton","print","getTransformYPx","elStyle","transformY","match","parseInt","isLeapPage","n","getMultiple","factor","multiple","StaticGrid","PrintLayoutItemGrid","updateDashboardLayout","isFirstPageBreak","pageBreaks","sortedPageBreaks","itemClassNames","getItemComponents","hideExtraPageBreaks","sortedElements","elements","types","elementsWithBoundingRect","classList","indexOf","bottomY","getDomGridItemsSortedByYPos","querySelectorAll","pageBreakBottom","lastItemBottom","foundNonPageBreak","thisItemBottom","gridElement","firstBreak","scrollArea","addPageBreaks","addDashboardItem","yPosList","pageNum","getPageBreakPositions","fromEdit","setPrintDashboard","updateDashboardItem","wrapper","editView","pageOuter","setEditDashboard","notice","setNewDashboard","notSupportedNotice","removeDashboardItem","sortedItems","spacerCount","dashboardMap","dashboardsIsEmpty","dashboardsLoaded","routeId","selectDashboard","dashboardToSelect","preferredId","getItem","dash","sGetDashboardsSortedByStarred","getElementsByTagName","remove","setHeaderbarVisibility","onHidden","permanent","filteredDimensions","dim","dimensionType","dataDimensionType","fetchDashboards","setControlBarRows","controlBarRows","apiGetControlBarRows","setCurrentUser","setShowDescription","apiGetShowDescription","apiFetchDimensions","getFilteredDimensions","fetchDimensions","spacers","exact","AlertBar","DEFAULT_STATE_STYLE","objectClean","conversations","$merge","d2Object","keyUiLocale","authorities","newState","$splice","$unshift","idToRemove","stateItems","layoutHasChanged","newStateItems","stateItem","si","configureStore","middleware","thunk","withExtraArgument","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","createStore","reducer","applyMiddleware","addResources","arTranslations","ar_IQTranslations","ckbTranslations","csTranslations","daTranslations","enTranslations","esTranslations","frTranslations","idTranslations","kmTranslations","loTranslations","myTranslations","nbTranslations","prsTranslations","psTranslations","ptTranslations","pt_BRTranslations","ruTranslations","svTranslations","tetTranslations","tgTranslations","ukTranslations","urTranslations","uzTranslations","uz_CyrlTranslations","uz_LatnTranslations","viTranslations","zhTranslations","zh_CNTranslations","d2Config","schemas","authorization","REACT_APP_DHIS2_AUTHORIZATION","headers","AppWrapper","store","theme","createMuiTheme","dhis2theme","i18nRoot","reportTable","chart","eventReport","eventChart","itemTypeToGlobalVariable","itemTypeToScriptPath","hasIntegratedPlugin","getPlugin","loadPlugin","config","plugin","globalName","scripts","scriptsPromise","all","fetchPlugin","loadingIndicator","resize"],"mappings":"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","file":"static/js/app.0ca20447.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"link\":\"DashboardItemChip_link__BW7Y-\",\"icon\":\"DashboardItemChip_icon__3bSyL\",\"selected\":\"DashboardItemChip_selected__3HtWQ\",\"unselected\":\"DashboardItemChip_unselected__aM-zh\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"ClearButton_button__3WukP\",\"icon\":\"ClearButton_icon__2ErJB\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"searchArea\":\"Filter_searchArea__3NG5o\",\"input\":\"Filter_input__3nbSP\",\"focused\":\"Filter_focused__E3c7W\",\"searchIcon\":\"Filter_searchIcon__2SzJD\",\"searchIconSmall\":\"Filter_searchIconSmall__2EqS1\",\"searchIconLarge\":\"Filter_searchIconLarge__UOHRT\",\"searchButton\":\"Filter_searchButton__3MTLn\",\"searchIconContainer\":\"Filter_searchIconContainer__21GtO\",\"clearButtonContainer\":\"Filter_clearButtonContainer__36uqp\",\"container\":\"Filter_container__wim8v\",\"collapsed\":\"Filter_collapsed__3NFNh\",\"expanded\":\"Filter_expanded__HFSRS\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Content_container__DYubU\",\"newLink\":\"Content_newLink__3PXmM\",\"controlsSmall\":\"Content_controlsSmall__2YcgC\",\"controlsLarge\":\"Content_controlsLarge__3D9AJ\",\"collapsed\":\"Content_collapsed__3ozGX\",\"expanded\":\"Content_expanded__22Kcl\",\"chipsContainer\":\"Content_chipsContainer__1W0Fq\",\"controls\":\"Content_controls__1eJVS\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"ShowMoreButton_container__W_K20\",\"showMore\":\"ShowMoreButton_showMore__1Db77\",\"disabled\":\"ShowMoreButton_disabled__3KzHL\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"draghandle\":\"DragHandle_draghandle__2j24a\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"DashboardsBar_container__2T0a0\",\"content\":\"DashboardsBar_content__2eVDk\",\"expanded\":\"DashboardsBar_expanded__2srLP\",\"spacer\":\"DashboardsBar_spacer__1W4--\",\"collapsed\":\"DashboardsBar_collapsed__3f7ol\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"DashboardContainer_container__2A1Hw\",\"covered\":\"DashboardContainer_covered__QHw50\"};","import i18n from '@dhis2/d2-i18n';\nimport TableIcon from '@material-ui/icons/ViewList';\nimport ChartIcon from '@material-ui/icons/InsertChart';\nimport MapIcon from '@material-ui/icons/Public';\nimport ExtensionIcon from '@material-ui/icons/Extension';\nimport DescriptionIcon from '@material-ui/icons/Description';\nimport PersonIcon from '@material-ui/icons/Person';\nimport FontDownloadIcon from '@material-ui/icons/FontDownload';\nimport EmailIcon from '@material-ui/icons/Email';\nimport CropFreeIcon from '@material-ui/icons/CropFree';\nimport NotInterestedIcon from '@material-ui/icons/NotInterested'; // Item types\n\nexport const VISUALIZATION = 'VISUALIZATION';\nexport const REPORT_TABLE = 'REPORT_TABLE';\nexport const CHART = 'CHART';\nexport const MAP = 'MAP';\nexport const EVENT_REPORT = 'EVENT_REPORT';\nexport const EVENT_CHART = 'EVENT_CHART';\nexport const APP = 'APP';\nexport const REPORTS = 'REPORTS';\nexport const RESOURCES = 'RESOURCES';\nexport const USERS = 'USERS';\nexport const MESSAGES = 'MESSAGES';\nexport const TEXT = 'TEXT';\nexport const SPACER = 'SPACER';\nexport const PAGEBREAK = 'PAGEBREAK';\nexport const PRINT_TITLE_PAGE = 'PRINT_TITLE_PAGE';\nconst DOMAIN_TYPE_AGGREGATE = 'AGGREGATE';\nconst DOMAIN_TYPE_TRACKER = 'TRACKER'; // Dashboard helpers\n\nexport const isVisualizationType = item => !!itemTypeMap[item.type].isVisualizationType;\nexport const hasMapView = itemType => itemTypeMap[itemType].domainType === DOMAIN_TYPE_AGGREGATE;\nexport const isTrackerDomainType = itemType => itemTypeMap[itemType].domainType === DOMAIN_TYPE_TRACKER;\nexport const getDefaultItemCount = itemType => itemTypeMap[itemType].defaultItemCount || 5;\nexport const getAppName = itemType => itemTypeMap[itemType].appName || ''; // Item type map\n\nexport const itemTypeMap = {\n  [VISUALIZATION]: {\n    id: VISUALIZATION,\n    endPointName: 'visualizations',\n    propName: 'visualization',\n    pluralTitle: i18n.t('Visualizations'),\n    appUrl: id => `dhis-web-data-visualizer/#/${id}`,\n    appName: 'Data Visualizer',\n    defaultItemCount: 10\n  },\n  [REPORT_TABLE]: {\n    id: REPORT_TABLE,\n    endPointName: 'visualizations',\n    dataStatisticsName: 'REPORT_TABLE_VIEW',\n    propName: 'visualization',\n    pluralTitle: i18n.t('Pivot tables'),\n    domainType: DOMAIN_TYPE_AGGREGATE,\n    isVisualizationType: true,\n    appUrl: id => `dhis-web-data-visualizer/#/${id}`,\n    appName: 'Data Visualizer'\n  },\n  [CHART]: {\n    id: CHART,\n    endPointName: 'visualizations',\n    propName: 'visualization',\n    dataStatisticsName: 'CHART_VIEW',\n    pluralTitle: i18n.t('Charts'),\n    domainType: DOMAIN_TYPE_AGGREGATE,\n    isVisualizationType: true,\n    appUrl: id => `dhis-web-data-visualizer/#/${id}`,\n    appName: 'Data Visualizer'\n  },\n  [MAP]: {\n    id: MAP,\n    endPointName: 'maps',\n    dataStatisticsName: 'MAP_VIEW',\n    propName: 'map',\n    pluralTitle: i18n.t('Maps'),\n    domainType: DOMAIN_TYPE_AGGREGATE,\n    isVisualizationType: true,\n    appUrl: id => `dhis-web-maps/?id=${id}`,\n    appName: 'Maps'\n  },\n  [EVENT_REPORT]: {\n    id: EVENT_REPORT,\n    endPointName: 'eventReports',\n    propName: 'eventReport',\n    pluralTitle: i18n.t('Event reports'),\n    domainType: DOMAIN_TYPE_TRACKER,\n    isVisualizationType: true,\n    appUrl: id => `dhis-web-event-reports/?id=${id}`,\n    appName: 'Event Reports'\n  },\n  [EVENT_CHART]: {\n    id: EVENT_CHART,\n    endPointName: 'eventCharts',\n    propName: 'eventChart',\n    pluralTitle: i18n.t('Event charts'),\n    domainType: DOMAIN_TYPE_TRACKER,\n    isVisualizationType: true,\n    appUrl: id => `dhis-web-event-visualizer/?id=${id}`,\n    appName: 'Event Visualizer'\n  },\n  [APP]: {\n    endPointName: 'apps',\n    propName: 'appKey',\n    pluralTitle: i18n.t('Apps')\n  },\n  [REPORTS]: {\n    id: REPORTS,\n    endPointName: 'reports',\n    propName: 'reports',\n    pluralTitle: i18n.t('Reports'),\n    appUrl: (id, type) => {\n      switch (type) {\n        case 'HTML':\n          return `dhis-web-reports/#/standard-report/view/${id}`;\n\n        case 'JASPER_REPORT_TABLE':\n        case 'JASPER_JDBC':\n        default:\n          return `api/reports/${id}/data.pdf?t=${new Date().getTime()}`;\n      }\n    }\n  },\n  [RESOURCES]: {\n    id: RESOURCES,\n    endPointName: 'resources',\n    propName: 'resources',\n    pluralTitle: i18n.t('Resources'),\n    appUrl: id => `api/documents/${id}/data`\n  },\n  [USERS]: {\n    id: USERS,\n    endPointName: 'users',\n    propName: 'users',\n    pluralTitle: i18n.t('Users'),\n    appUrl: id => `dhis-web-dashboard-integration/profile.action?id=${id}`\n  },\n  [TEXT]: {\n    id: TEXT,\n    propName: 'text'\n  },\n  [MESSAGES]: {\n    propName: 'messages'\n  },\n  [SPACER]: {\n    propName: 'text'\n  },\n  [PAGEBREAK]: {\n    propName: 'text'\n  },\n  [PRINT_TITLE_PAGE]: {\n    propName: 'text'\n  }\n};\nexport const getEndPointName = type => itemTypeMap[type].endPointName;\nexport const getDataStatisticsName = type => itemTypeMap[type].dataStatisticsName || null;\nexport const getItemUrl = (type, item, baseUrl) => {\n  let url;\n\n  if (type === APP) {\n    url = item.launchUrl;\n  }\n\n  if (itemTypeMap[type] && itemTypeMap[type].appUrl) {\n    url = `${baseUrl}/${itemTypeMap[type].appUrl(item.id, item.type)}`;\n  }\n\n  return url;\n};\nexport const getItemIcon = type => {\n  switch (type) {\n    case REPORT_TABLE:\n    case EVENT_REPORT:\n    case REPORTS:\n      return TableIcon;\n\n    case CHART:\n    case EVENT_CHART:\n      return ChartIcon;\n\n    case MAP:\n      return MapIcon;\n\n    case APP:\n      return ExtensionIcon;\n\n    case RESOURCES:\n      return DescriptionIcon;\n\n    case USERS:\n      return PersonIcon;\n\n    case TEXT:\n      return FontDownloadIcon;\n\n    case MESSAGES:\n      return EmailIcon;\n\n    case SPACER:\n      return CropFreeIcon;\n\n    default:\n      return NotInterestedIcon;\n  }\n};","import isObject from 'lodash/isObject'; // validation\n\nexport function orNull(param) {\n  return param === undefined ? null : param;\n}\nexport function orArray(param) {\n  return Array.isArray(param) ? param : [];\n}\nexport function orObject(param) {\n  return isObject(param) ? param : {};\n} // array\n\nexport function arrayGetById(array, id) {\n  return array.find(item => item.id === id);\n} // object\n\nexport function arrayToIdMap(array) {\n  return array.reduce((obj, item) => {\n    obj[item.id] = item;\n    return obj;\n  }, {});\n} // date\n\nexport function getDate() {\n  const y = Math.floor(Math.random() * 3) + 2015;\n  const M = Math.floor(Math.random() * 12) + 1;\n  const d = Math.floor(Math.random() * 28) + 1; // const h = Math.floor(Math.random() * 23) + 1;\n  // const m = Math.floor(Math.random() * 59) + 1;\n  // const s = Math.floor(Math.random() * 59) + 1;\n\n  return new Date(`${y}-${M}-${d}`).toJSON().replace('T', ' ').substr(0, 10);\n}\nexport const formatDate = (value, uiLocale) => {\n  if (typeof global.Intl !== 'undefined' && Intl.DateTimeFormat) {\n    const locale = uiLocale || 'en';\n    return new Intl.DateTimeFormat(locale, {\n      year: 'numeric',\n      month: 'short',\n      day: 'numeric'\n    }).format(new Date(value));\n  }\n\n  return value.substr(0, 19).replace('T', ' ');\n};\n/**\n * Sorts an array of objects based on provided date property\n *\n * @param {Array} items Array of objects\n * @param {String} dateProp Name of the date property to be used for sorting\n * @param {Boolean} ascending Whether to sort ascending or descending\n */\n\nexport const sortByDate = (items, dateProp, ascending = true) => {\n  const values = Object.values(items);\n  values.sort((a, b) => {\n    const aDate = new Date(a[dateProp]);\n    const bDate = new Date(b[dateProp]);\n    return ascending ? aDate - bDate : bDate - aDate;\n  });\n  return values;\n}; // reducer validator\n\nexport const validateReducer = (value, defaultValue) => value === undefined || value === null ? defaultValue : value;","// extracted by mini-css-extract-plugin\nmodule.exports = {\"buttonContainer\":\"FilterSelector_buttonContainer__O_amY\",\"popover\":\"FilterSelector_popover__3TVEp\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"ViewTitleBar_container__VivO0\",\"actions\":\"ViewTitleBar_actions__2UTRz\",\"editLink\":\"ViewTitleBar_editLink__d_HzW\",\"titleBar\":\"ViewTitleBar_titleBar__eiwJS\",\"star\":\"ViewTitleBar_star__26YmT\",\"strip\":\"ViewTitleBar_strip__3xR4U\",\"title\":\"ViewTitleBar_title__2GhTR\",\"descContainer\":\"ViewTitleBar_descContainer__3rF10\",\"desc\":\"ViewTitleBar_desc__3QW6Z\",\"noDesc\":\"ViewTitleBar_noDesc__Jettc\",\"moreText\":\"ViewTitleBar_moreText__3yHR0\",\"moreButtonSmall\":\"ViewTitleBar_moreButtonSmall__1ajrf\",\"shareButton\":\"ViewTitleBar_shareButton__3yEKR\",\"moreButton\":\"ViewTitleBar_moreButton__1HduK\"};","const isRelative = path => path.startsWith('./');\n\nconst normalizeRelativePath = path => [process.env.PUBLIC_URL, path.replace(/^\\.\\//, '')].join('/');\n\nconst isScriptLoaded = src => document.querySelector('script[src=\"' + src + '\"]') ? true : false;\n\nexport const loadExternalScript = src => {\n  if (isRelative(src)) {\n    src = normalizeRelativePath(src);\n  }\n\n  return new Promise((resolve, reject) => {\n    if (isScriptLoaded(src)) {\n      return resolve();\n    }\n\n    const element = document.createElement('script');\n    element.src = src;\n    element.type = 'text/javascript';\n    element.async = false;\n\n    const cleanup = () => {\n      console.log(`Dynamic Script Removed: ${src}`);\n      document.head.removeChild(element);\n    };\n\n    element.onload = () => {\n      console.log(`Dynamic Script Loaded: ${src}`);\n\n      try {\n        resolve();\n      } catch (e) {\n        cleanup();\n        reject();\n      }\n    };\n\n    element.onerror = () => {\n      console.error(`Dynamic Script Error: ${src}`);\n      cleanup();\n      reject();\n    };\n\n    document.head.appendChild(element);\n  });\n};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"message\":\"NoVisualizationMessage_message__22IPi\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"center\":\"LoadingMask_center__KHIYy\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"FatalErrorBoundary_container__3SViR\",\"icon\":\"FatalErrorBoundary_icon__2UbeP\",\"message\":\"FatalErrorBoundary_message__3FzrY\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"deleteItemButton\":\"DeleteItemButton_deleteItemButton__3TJm9\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"warning\":\"PrintItemInfo_warning__123PK\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"line\":\"ItemFooter_line__3Ko0R\",\"scrollContainer\":\"ItemFooter_scrollContainer__tuq4P\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"Item_list__1_nkQ\",\"item\":\"Item_item__3-6QE\",\"itemicon\":\"Item_itemicon__QlouX\",\"link\":\"Item_link___3c_q\",\"deleteicon\":\"Item_deleteicon__3usrl\",\"deletebutton\":\"Item_deletebutton__1DpBW\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"titlePage\":\"Item_titlePage__18CNQ\",\"name\":\"Item_name__3nuTV\",\"description\":\"Item_description__1gFQd\",\"filterTitle\":\"Item_filterTitle__2p7TQ\",\"filterList\":\"Item_filterList__qc_G3\",\"filterListItem\":\"Item_filterListItem__sPbBY\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"bar\":\"FilterBar_bar__1Ma3p\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"ViewDashboard_container__3uNdy\",\"cover\":\"ViewDashboard_cover__2SbDj\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"HeaderMenuItem_item__313hC\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"menuItem\":\"ContentMenuItem_menuItem__vbKn3\",\"launchLink\":\"ContentMenuItem_launchLink__2Nql9\",\"label\":\"ContentMenuItem_label__ANfH1\",\"buttonInsert\":\"ContentMenuItem_buttonInsert__1joHg\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"showMoreButton\":\"CategorizedMenuGroup_showMoreButton__2RbRp\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"menu\":\"ItemSelector_menu__2VYae\",\"popover\":\"ItemSelector_popover__2aDe3\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"section\":\"EditTitleBar_section__LIaIC\",\"titleDescription\":\"EditTitleBar_titleDescription__1YsU6\",\"title\":\"EditTitleBar_title__3mUbt\",\"description\":\"EditTitleBar_description__24U5X\",\"itemSelector\":\"EditTitleBar_itemSelector__1cFEp\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"content\":\"ConfirmDeleteDialog_content__EqswE\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"editBar\":\"EditBar_editBar__1d1xM\",\"controls\":\"EditBar_controls__1t0nO\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"noticeContainer\":\"NotSupportedNotice_noticeContainer__3z9Up\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"PrintInfo_container__9gH0b\",\"title\":\"PrintInfo_title__2_VZd\",\"printSuggestions\":\"PrintInfo_printSuggestions__30tcU\",\"divider\":\"PrintInfo_divider__3wzx9\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"PrintActionsBar_container__2iQp7\",\"actions\":\"PrintActionsBar_actions__2I2I0\",\"link\":\"PrintActionsBar_link__lFUmI\",\"buttonSmall\":\"PrintActionsBar_buttonSmall__27sFq\",\"buttonLarge\":\"PrintActionsBar_buttonLarge__QcrPj\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"PrintLayoutDashboard_container__3eIY-\",\"wrapper\":\"PrintLayoutDashboard_wrapper__1WDh4\",\"editView\":\"PrintLayoutDashboard_editView__1Zk_3\",\"pageOuter\":\"PrintLayoutDashboard_pageOuter__22acI\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"EditDashboard_container__EcqEU\",\"notice\":\"EditDashboard_notice__1X7zB\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"NewDashboard_container__VsR3D\",\"notice\":\"NewDashboard_notice__cTvCt\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"PrintDashboard_container__2KgcY\",\"wrapper\":\"PrintDashboard_wrapper__1O3s_\",\"pageOuter\":\"PrintDashboard_pageOuter__fl9tw\"};","import React, { createContext, useContext, useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport debounce from 'lodash/debounce';\nexport const WindowDimensionsCtx = createContext(null);\n\nconst windowDims = () => ({\n  height: window.innerHeight,\n  width: window.innerWidth\n});\n\nconst WindowDimensionsProvider = ({\n  children\n}) => {\n  const [dimensions, setDimensions] = useState(windowDims());\n  useEffect(() => {\n    const handleResize = debounce(() => {\n      setDimensions(windowDims());\n    }, 100);\n    window.addEventListener('resize', handleResize);\n    return () => {\n      window.removeEventListener('resize', handleResize);\n    };\n  }, []);\n  return <WindowDimensionsCtx.Provider value={dimensions}>\n            {children}\n        </WindowDimensionsCtx.Provider>;\n};\n\nWindowDimensionsProvider.propTypes = {\n  children: PropTypes.node.isRequired\n};\nexport default WindowDimensionsProvider;\nexport const useWindowDimensions = () => {\n  return useContext(WindowDimensionsCtx);\n};","export const DEFAULT_SETTINGS = {\n  displayNameProperty: 'displayName',\n  keyDashboardContextMenuItemOpenInRelevantApp: true,\n  keyDashboardContextMenuItemShowInterpretationsAndDetails: true,\n  keyDashboardContextMenuItemSwitchViewType: true,\n  keyDashboardContextMenuItemViewFullscreen: true,\n  keyGatherAnalyticalObjectStatisticsInDashboardViews: false\n};\nconst SYSTEM_SETTINGS = ['keyDashboardContextMenuItemOpenInRelevantApp', 'keyDashboardContextMenuItemShowInterpretationsAndDetails', 'keyDashboardContextMenuItemSwitchViewType', 'keyDashboardContextMenuItemViewFullscreen', 'keyGatherAnalyticalObjectStatisticsInDashboardViews'];\nconst SYSTEM_SETTINGS_REMAPPINGS = {\n  keyDashboardContextMenuItemOpenInRelevantApp: 'openInRelevantApp',\n  keyDashboardContextMenuItemShowInterpretationsAndDetails: 'showInterpretationsAndDetails',\n  keyDashboardContextMenuItemSwitchViewType: 'switchViewType',\n  keyDashboardContextMenuItemViewFullscreen: 'fullscreenAllowedInSettings'\n};\nexport const renameSystemSettings = settings => {\n  return Object.keys(settings).reduce((mapped, key) => {\n    mapped[SYSTEM_SETTINGS_REMAPPINGS[key] || key] = settings[key];\n    return mapped;\n  }, {});\n};\nconst query = {\n  resource: 'systemSettings',\n  params: {\n    key: SYSTEM_SETTINGS\n  }\n};\nexport default query;","import React, { useContext, useState, useEffect, createContext } from 'react';\nimport PropTypes from 'prop-types';\nimport { useDataEngine } from '@dhis2/app-runtime';\nimport settingsQuery, { renameSystemSettings, DEFAULT_SETTINGS } from '../api/settings';\nexport const SystemSettingsCtx = createContext({});\n\nconst SystemSettingsProvider = ({\n  children\n}) => {\n  const [settings, setSettings] = useState([]);\n  const engine = useDataEngine();\n  useEffect(() => {\n    async function fetchData() {\n      const {\n        systemSettings\n      } = await engine.query({\n        systemSettings: settingsQuery\n      });\n      setSettings(Object.assign({}, renameSystemSettings(DEFAULT_SETTINGS), renameSystemSettings(systemSettings)));\n    }\n\n    fetchData();\n  }, []);\n  return <SystemSettingsCtx.Provider value={{\n    settings\n  }}>\n            {children}\n        </SystemSettingsCtx.Provider>;\n};\n\nSystemSettingsProvider.propTypes = {\n  children: PropTypes.node\n};\nexport default SystemSettingsProvider;\nexport const useSystemSettings = () => useContext(SystemSettingsCtx);","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst StarIcon = ({\n  className\n}) => <svg className={className} xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\">\n        <path d=\"M0 0h24v24H0z\" fill=\"none\" />\n        <path d=\"M12 17.27L18.18 21l-1.64-7.03L22 9.24l-7.19-.61L12 2 9.19 8.63 2 9.24l5.46 4.73L5.82 21z\" />\n        <path d=\"M0 0h24v24H0z\" fill=\"none\" />\n    </svg>;\n\nStarIcon.propTypes = {\n  className: PropTypes.string\n};\nexport default StarIcon;","import { getInstance } from 'd2';\nexport const apiPostDataStatistics = async (eventType, id) => {\n  const d2 = await getInstance();\n  const url = `dataStatistics?eventType=${eventType}&favorite=${id}`;\n  d2.Api.getApi().post(url);\n};","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Chip } from '@dhis2/ui';\nimport { Link } from 'react-router-dom';\nimport debounce from 'lodash/debounce';\nimport StarIcon from '../../../icons/Star';\nimport { apiPostDataStatistics } from '../../../api/dataStatistics';\nimport classes from './styles/DashboardItemChip.module.css';\nexport const DashboardItemChip = ({\n  starred,\n  selected,\n  label,\n  dashboardId,\n  onClick\n}) => {\n  const chipProps = {\n    selected\n  };\n\n  if (starred) {\n    const selectedState = selected ? classes.selected : classes.unselected;\n    chipProps.icon = <StarIcon className={`${classes.icon} ${selectedState}`} />;\n  }\n\n  const debouncedPostStatistics = debounce(() => apiPostDataStatistics('DASHBOARD_VIEW', dashboardId), 500);\n\n  const handleClick = () => {\n    debouncedPostStatistics();\n    onClick();\n  };\n\n  return <Link className={classes.link} to={`/${dashboardId}`} onClick={handleClick} data-test=\"dashboard-chip\">\n            <Chip {...chipProps}>{label}</Chip>\n        </Link>;\n};\nDashboardItemChip.propTypes = {\n  dashboardId: PropTypes.string.isRequired,\n  label: PropTypes.string.isRequired,\n  selected: PropTypes.bool.isRequired,\n  starred: PropTypes.bool.isRequired,\n  onClick: PropTypes.func.isRequired,\n  classes: PropTypes.object\n};\nexport default DashboardItemChip;","import React from 'react';\nimport { colors } from '@dhis2/ui';\n\nconst AddCircleIcon = () => <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"32\" height=\"32\" fill={colors.teal600} viewBox=\"0 0 24 24\">\n        <path d=\"M12 2C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2zm4 11h-3v3c0 .55-.45 1-1 1s-1-.45-1-1v-3H8c-.55 0-1-.45-1-1s.45-1 1-1h3V8c0-.55.45-1 1-1s1 .45 1 1v3h3c.55 0 1 .45 1 1s-.45 1-1 1z\" />\n    </svg>;\n\nexport default AddCircleIcon;","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst SearchIcon = ({\n  className,\n  small\n}) => small ? <svg className={className} height=\"16\" viewBox=\"0 0 16 16\" width=\"16\" xmlns=\"http://www.w3.org/2000/svg\">\n            <path d=\"m6 1c2.76142375 0 5 2.23857625 5 5 0 1.20065927-.4231997 2.30247496-1.12856994 3.16441794l4.48212334 4.48202866-.7071068.7071068-4.48202866-4.48212334c-.86194298.70537024-1.96375867 1.12856994-3.16441794 1.12856994-2.76142375 0-5-2.23857625-5-5s2.23857625-5 5-5zm0 1c-2.209139 0-4 1.790861-4 4s1.790861 4 4 4 4-1.790861 4-4-1.790861-4-4-4z\" fill=\"#010101\" />\n        </svg> : <svg className={className} xmlns=\"http://www.w3.org/2000/svg\" height=\"24\" viewBox=\"0 0 24 24\" width=\"24\">\n            <path d=\"M0 0h24v24H0z\" fill=\"none\" />\n            <path d=\"M15.5 14h-.79l-.28-.27C15.41 12.59 16 11.11 16 9.5 16 5.91 13.09 3 9.5 3S3 5.91 3 9.5 5.91 16 9.5 16c1.61 0 3.09-.59 4.23-1.57l.27.28v.79l5 4.99L20.49 19l-4.99-5zm-6 0C7.01 14 5 11.99 5 9.5S7.01 5 9.5 5 14 7.01 14 9.5 11.99 14 9.5 14z\" />\n        </svg>;\n\nSearchIcon.propTypes = {\n  className: PropTypes.string,\n  small: PropTypes.bool\n};\nexport default SearchIcon;","import React from 'react';\nimport { colors } from '@dhis2/ui';\nimport PropTypes from 'prop-types';\n\nconst ClearIcon = ({\n  className\n}) => <svg className={className} fill={colors.grey800} xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\">\n        <path d=\"M19 6.41L17.59 5 12 10.59 6.41 5 5 6.41 10.59 12 5 17.59 6.41 19 12 13.41 17.59 19 19 17.59 13.41 12z\" />\n        <path d=\"M0 0h24v24H0z\" fill=\"none\" />\n    </svg>;\n\nClearIcon.propTypes = {\n  className: PropTypes.string\n};\nexport default ClearIcon;","import React from 'react';\nimport PropTypes from 'prop-types';\nimport ClearIcon from '../../../icons/Clear';\nimport classes from './styles/ClearButton.module.css';\nexport const ClearButton = ({\n  onClear\n}) => <button className={classes.button} onClick={onClear}>\n        <span>\n            <ClearIcon className={classes.icon} color=\"action\" />\n        </span>\n    </button>;\nClearButton.propTypes = {\n  onClear: PropTypes.func.isRequired\n};\nexport default ClearButton;","import { validateReducer } from '../modules/util';\nexport const SET_DASHBOARDS_FILTER = 'SET_DASHBOARDS_FILTER';\nexport const CLEAR_DASHBOARDS_FILTER = 'CLEAR_DASHBOARDS_FILTER';\nexport const DEFAULT_STATE_DASHBOARDS_FILTER = '';\nexport default ((state = DEFAULT_STATE_DASHBOARDS_FILTER, action) => {\n  switch (action.type) {\n    case SET_DASHBOARDS_FILTER:\n      {\n        return validateReducer(action.value, DEFAULT_STATE_DASHBOARDS_FILTER);\n      }\n\n    case CLEAR_DASHBOARDS_FILTER:\n      {\n        return DEFAULT_STATE_DASHBOARDS_FILTER;\n      }\n\n    default:\n      return state;\n  }\n}); // selectors\n\nexport const sGetDashboardsFilter = state => state.dashboardsFilter;","// Dimensions for the react-grid-layout\nimport sortBy from 'lodash/sortBy';\nimport { isVisualizationType } from './itemTypes';\nimport { isSmallScreen } from './smallScreen';\nexport const GRID_COMPACT_TYPE = 'vertical'; // vertical | horizonal | null\n\nexport const GRID_ROW_HEIGHT_PX = 10;\nexport const MARGIN_PX = [10, 10];\nconst SM_SCREEN_MIN_ITEM_GRID_HEIGHT = 13; // minimum of ~320px\n\nexport const SM_SCREEN_GRID_COLUMNS = 1;\nexport const MARGIN_SM_PX = [0, 16];\nexport const GRID_PADDING_PX = [0, 0]; // sum of left+right padding of dashboard-wrapper (App.css)\n\nexport const DASHBOARD_WRAPPER_LR_MARGIN_PX = 32; // make an assumption about the original item w/h ratio\n// assumes grid width of ~1200px at time dashboard was created\n\nconst GRID_COL_WIDTH_PX = 10;\nexport const GRID_COLUMNS = 60; // Dimensions for getShape\n\nexport const NEW_ITEM_SHAPE = {\n  x: 0,\n  y: 0,\n  w: 20,\n  h: 29\n};\nconst NUMBER_OF_ITEM_COLS = 2;\nconst MAX_ITEM_GRID_WIDTH = GRID_COLUMNS - 1;\nexport const MAX_ITEM_GRID_HEIGHT = 34;\nexport const MAX_ITEM_GRID_HEIGHT_OIPP = 35;\nexport const MAX_ITEM_GRID_WIDTH_OIPP = 56;\nconst MIN_ITEM_GRID_HEIGHT = 4; // isNonNegativeInteger\n\nconst isNonNegativeInteger = x => Number.isInteger(x) && x >= 0; // Does the item have all the shape properties?\n\n\nexport const hasShape = item => isNonNegativeInteger(item.x) && isNonNegativeInteger(item.y) && isNonNegativeInteger(item.w) && isNonNegativeInteger(item.h); // returns a rectangular grid block dimensioned with x, y, w, h in grid units.\n// based on a grid with 3 items across\n\nconst getShape = i => {\n  const col = i % NUMBER_OF_ITEM_COLS;\n  const row = Math.floor(i / NUMBER_OF_ITEM_COLS);\n  const itemWidth = Math.floor(MAX_ITEM_GRID_WIDTH / NUMBER_OF_ITEM_COLS);\n  const itemHeight = GRID_ROW_HEIGHT_PX * 2;\n  return {\n    x: col * itemWidth,\n    y: row * itemHeight,\n    w: itemWidth,\n    h: itemHeight\n  };\n};\n/**\n * Returns an array of items containing the x, y, w, h dimensions\n * and the item's originalheight in pixels\n * and dimensions to create the small layout (x, y, w, h)\n * @function\n * @param {Array} items\n * @returns {Array}\n */\n\n\nexport const withShape = (items = []) => {\n  const itemsWithShape = items.map((item, i) => hasShape(item) ? item : Object.assign({}, item, getShape(i)));\n  return itemsWithShape.map(item => Object.assign({}, item, {\n    originalH: item.h\n  }));\n};\nexport const getGridWidth = windowWidthPx => windowWidthPx - DASHBOARD_WRAPPER_LR_MARGIN_PX;\n\nconst getGridUnitsForSmFromPx = hPx => {\n  const gridUnitHeightPx = GRID_ROW_HEIGHT_PX + MARGIN_SM_PX[1];\n  return Math.round((hPx + MARGIN_SM_PX[1]) / gridUnitHeightPx);\n};\n\nexport const getProportionalHeight = (item, windowWidthPx) => {\n  // get w/h ratio of the original item\n  const wPx = getItemWHPx(item.w, GRID_COL_WIDTH_PX, MARGIN_PX[0]);\n  const hPx = getItemWHPx(item.h, GRID_ROW_HEIGHT_PX, MARGIN_PX[1]);\n  const ratioWH = wPx / hPx;\n\n  if (!isVisualizationType(item)) {\n    return getGridUnitsForSmFromPx(hPx);\n  }\n\n  const gridWidthPx = getGridWidth(windowWidthPx); // get new height in px based on the ratio\n\n  const newColWidthPx = (gridWidthPx - MARGIN_SM_PX[0] * (SM_SCREEN_GRID_COLUMNS - 1) - GRID_PADDING_PX[0] * 2) / SM_SCREEN_GRID_COLUMNS;\n  const newWPx = newColWidthPx * SM_SCREEN_GRID_COLUMNS;\n  const newHPx = Math.round(newWPx / ratioWH); //convert height in px back to grid units\n\n  const h = getGridUnitsForSmFromPx(newHPx); // item must be at least the set minimum\n\n  return h < SM_SCREEN_MIN_ITEM_GRID_HEIGHT ? SM_SCREEN_MIN_ITEM_GRID_HEIGHT : h;\n};\nexport const getSmallLayout = (items, windowWidthPx) => sortBy(items, ['y', 'x']).map((item, i) => Object.assign({}, item, {\n  x: 0,\n  y: i,\n  w: SM_SCREEN_GRID_COLUMNS,\n  h: getProportionalHeight(item, windowWidthPx)\n}));\nexport const getGridItemProperties = itemId => {\n  return {\n    i: itemId,\n    minH: MIN_ITEM_GRID_HEIGHT\n  };\n};\nexport const getPageBreakItemShape = (yPos, isStatic = true) => {\n  return {\n    x: 0,\n    y: yPos,\n    w: MAX_ITEM_GRID_WIDTH,\n    h: 5,\n    static: !!isStatic,\n    minH: 1\n  };\n};\nexport const getPrintTitlePageItemShape = isOneItemPerPage => {\n  return {\n    x: 0,\n    y: 0,\n    w: isOneItemPerPage ? MAX_ITEM_GRID_WIDTH_OIPP : MAX_ITEM_GRID_WIDTH,\n    h: MAX_ITEM_GRID_HEIGHT,\n    static: true,\n    minH: 1\n  };\n};\n/**\n * Calculates the grid item's height in pixels based\n * on the height in grid units. This calculation\n * is copied directly from react-grid-layout\n * calculateUtils.js (calcGridItemWHPx)\n *\n * Each row's px height is the sum of the GRID_ROW_HEIGHT_PX + MARGIN-Y\n * So the calculation is:\n * GRID_ROW_HEIGHT_PX * Number of rows\n * +\n * yMargin * Number of rows-1\n *\n * @param {Object} item item containing shape (x, y, w, h)\n */\n\nexport const getItemHeightPx = (item, windowWidthPx) => {\n  if (isSmallScreen(windowWidthPx)) {\n    const h = item.smallOriginalH ? item.smallOriginalH : getProportionalHeight(item, windowWidthPx);\n    return getItemWHPx(h, GRID_ROW_HEIGHT_PX, MARGIN_SM_PX[1]);\n  }\n\n  return getItemWHPx(item.originalH, GRID_ROW_HEIGHT_PX, MARGIN_PX[1]);\n};\n\nconst getItemWHPx = (gridUnits, colOrRowSize, marginPx) => Math.round(colOrRowSize * gridUnits + Math.max(0, gridUnits - 1) * marginPx);","import { DASHBOARD_WRAPPER_LR_MARGIN_PX } from './gridUtil';\nconst SMALL_SCREEN_BREAKPOINT = 480;\nexport const isSmallScreen = width => width <= SMALL_SCREEN_BREAKPOINT;\nexport const getBreakpoint = () => SMALL_SCREEN_BREAKPOINT - DASHBOARD_WRAPPER_LR_MARGIN_PX;","import React, { useState } from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport i18n from '@dhis2/d2-i18n';\nimport cx from 'classnames';\nimport SearchIcon from '../../../icons/Search';\nimport ClearButton from './ClearButton';\nimport { useWindowDimensions } from '../../WindowDimensionsProvider';\nimport { acSetDashboardsFilter, acClearDashboardsFilter } from '../../../actions/dashboardsFilter';\nimport { sGetDashboardsFilter } from '../../../reducers/dashboardsFilter';\nimport { isSmallScreen } from '../../../modules/smallScreen';\nimport classes from './styles/Filter.module.css';\nexport const KEYCODE_ENTER = 13;\nexport const KEYCODE_ESCAPE = 27;\nexport const FilterUnconnected = ({\n  clearDashboardsFilter,\n  expanded,\n  filterText,\n  setDashboardsFilter,\n  onKeypressEnter,\n  onSearchClicked\n}) => {\n  const [focusedClassName, setFocusedClassName] = useState('');\n  const [inputFocused, setInputFocus] = useState(false);\n  const {\n    width\n  } = useWindowDimensions();\n\n  const setFilterValue = event => {\n    event.preventDefault();\n    setDashboardsFilter(event.target.value);\n  };\n\n  const onKeyUp = event => {\n    switch (event.keyCode) {\n      case KEYCODE_ENTER:\n        onKeypressEnter();\n        clearDashboardsFilter();\n        break;\n\n      case KEYCODE_ESCAPE:\n        clearDashboardsFilter();\n        break;\n\n      default:\n        break;\n    }\n  };\n\n  const onFocus = event => {\n    event.preventDefault();\n    setFocusedClassName(classes.focused);\n  };\n\n  const onBlur = event => {\n    event.preventDefault();\n    setFocusedClassName('');\n  };\n\n  const onFocusInput = input => {\n    if (input && inputFocused && isSmallScreen(width)) {\n      return input.focus();\n    }\n  };\n\n  const activateSearchInput = () => {\n    onSearchClicked();\n    setInputFocus(true);\n  };\n\n  return <div className={cx(classes.container, expanded ? classes.expanded : classes.collapsed)}>\n            <button className={classes.searchButton} onClick={activateSearchInput}>\n                <SearchIcon className={classes.searchIcon} />\n            </button>\n            <div className={cx(classes.searchArea, `${focusedClassName}`)} onFocus={onFocus} onBlur={onBlur}>\n                <div className={classes.searchIconContainer}>\n                    <SearchIcon className={classes.searchIconSmall} small />\n                    <SearchIcon className={classes.searchIconLarge} />\n                </div>\n                <input className={classes.input} type=\"text\" placeholder={i18n.t('Search for a dashboard')} onChange={setFilterValue} onKeyUp={onKeyUp} value={filterText} data-test=\"search-dashboard-input\" ref={onFocusInput} />\n                {filterText && <div className={classes.clearButtonContainer}>\n                        <ClearButton onClear={clearDashboardsFilter} />\n                    </div>}\n            </div>\n        </div>;\n};\nFilterUnconnected.propTypes = {\n  clearDashboardsFilter: PropTypes.func,\n  expanded: PropTypes.bool,\n  filterText: PropTypes.string,\n  setDashboardsFilter: PropTypes.func,\n  onKeypressEnter: PropTypes.func,\n  onSearchClicked: PropTypes.func\n};\n\nconst mapStateToProps = state => ({\n  filterText: sGetDashboardsFilter(state)\n});\n\nconst mapDispatchToProps = {\n  setDashboardsFilter: acSetDashboardsFilter,\n  clearDashboardsFilter: acClearDashboardsFilter\n};\nexport default connect(mapStateToProps, mapDispatchToProps)(FilterUnconnected);","import { SET_DASHBOARDS_FILTER, CLEAR_DASHBOARDS_FILTER } from '../reducers/dashboardsFilter'; // actions\n\nexport const acSetDashboardsFilter = value => ({\n  type: SET_DASHBOARDS_FILTER,\n  value\n});\nexport const acClearDashboardsFilter = () => ({\n  type: CLEAR_DASHBOARDS_FILTER\n});","import { TEXT, SPACER } from './itemTypes';\nimport { getGridItemProperties } from './gridUtil';\nexport const spacerContent = 'SPACER_ITEM_FOR_DASHBOARD_LAYOUT_CONVENIENCE';\nexport const emptyTextItemContent = 'TEXT_ITEM_WITH_NO_CONTENT';\n\nconst isBackendSpacerType = item => item.type === TEXT && item.text === spacerContent;\n\nconst isUiSpacerType = item => item.type === SPACER;\n\nconst isTextType = item => item.type === TEXT && item.text !== spacerContent;\n\nexport const convertUiItemsToBackend = items => items.map(item => {\n  let text = null;\n\n  if (isUiSpacerType(item)) {\n    text = spacerContent;\n  } else if (isTextType(item)) {\n    text = item.text || emptyTextItemContent;\n  }\n\n  return { ...item,\n    ...(text ? {\n      text\n    } : {})\n  };\n});\nexport const convertBackendItemsToUi = items => items.map(item => {\n  const type = isBackendSpacerType(item) ? SPACER : item.type;\n  const gridProperties = getGridItemProperties(item.id);\n  const text = isTextType(item) ? item.text === emptyTextItemContent ? '' : item.text : null;\n  return { ...item,\n    ...(text !== null ? {\n      text\n    } : {}),\n    type,\n    ...gridProperties\n  };\n});","/** @module reducers/dashboards */\nimport arrayFrom from 'd2-utilizr/lib/arrayFrom';\nimport arraySort from 'd2-utilizr/lib/arraySort';\nimport { orArray, orObject } from '../modules/util';\nimport { convertBackendItemsToUi } from '../modules/uiBackendItemConverter';\nexport const SET_DASHBOARDS = 'SET_DASHBOARDS';\nexport const ADD_DASHBOARDS = 'ADD_DASHBOARDS';\nexport const SET_DASHBOARD_STARRED = 'SET_DASHBOARD_STARRED';\nexport const SET_DASHBOARD_DISPLAY_NAME = 'SET_DASHBOARD_DISPLAY_NAME';\nexport const SET_DASHBOARD_ITEMS = 'SET_DASHBOARD_ITEMS';\nexport const DEFAULT_STATE_DASHBOARDS = {\n  byId: null,\n  items: []\n};\nexport const EMPTY_DASHBOARD = {}; // reducer helper functions\n\nconst updateDashboardProp = ({\n  state,\n  dashboardId,\n  prop,\n  value\n}) => ({\n  byId: { ...state.byId,\n    [dashboardId]: { ...state.byId[dashboardId],\n      [prop]: value\n    }\n  },\n  items: state.items\n});\n/**\n * Reducer that computes and returns the new state based on the given action\n * @function\n * @param {Object} state The current state\n * @param {Object} action The action to be evaluated\n * @returns {Object}\n */\n\n\nexport default ((state = DEFAULT_STATE_DASHBOARDS, action) => {\n  switch (action.type) {\n    case SET_DASHBOARDS:\n      {\n        return {\n          byId: action.value,\n          items: []\n        };\n      }\n\n    case ADD_DASHBOARDS:\n      {\n        return { ...state,\n          byId: { ...state.byId,\n            ...action.value\n          }\n        };\n      }\n\n    case SET_DASHBOARD_STARRED:\n      {\n        return updateDashboardProp({\n          state,\n          dashboardId: action.dashboardId,\n          prop: 'starred',\n          value: action.value\n        });\n      }\n\n    case SET_DASHBOARD_DISPLAY_NAME:\n      {\n        return updateDashboardProp({\n          state,\n          dashboardId: action.dashboardId,\n          prop: 'displayName',\n          value: action.value\n        });\n      }\n\n    case SET_DASHBOARD_ITEMS:\n      {\n        return { ...state,\n          items: action.value\n        };\n      }\n\n    default:\n      return state;\n  }\n}); // root selector\n\nexport const sGetDashboardsRoot = state => state.dashboards; // selector level 1\n\n/**\n * Selector which returns a dashboard by id from the state object\n * If no matching dashboard is found it returns undefined\n * If dashboards.byId is null, then the dashboards api request\n * has not yet completed. If dashboards.byId is an empty object\n * then the dashboards api request is complete, but no dashboards\n * were returned\n *\n * @function\n * @param {Object} state The current state\n * @param {Number} id The id of the dashboard\n * @returns {Object | undefined}\n */\n\nexport const sGetDashboardById = (state, id) => orObject(sGetDashboardsRoot(state).byId)[id];\nexport const sDashboardsIsFetching = state => {\n  return sGetDashboardsRoot(state).byId === null;\n};\n/**\n * Selector which returns all dashboards (the byId object)\n *\n * @function\n * @param {Object} state The current state\n * @returns {Object | undefined}\n */\n\nexport const sGetAllDashboards = state => orObject(sGetDashboardsRoot(state).byId);\n/**\n * Selector which returns the current dashboard items\n *\n * @function\n * @param {Object} state The current state\n * @returns {Array}\n */\n\nexport const sGetDashboardItems = state => sGetDashboardsRoot(state).items; // selector level 2\n\nexport const sGetStarredDashboards = state => Object.values(sGetAllDashboards(state)).filter(dashboard => dashboard.starred === true);\nexport const sGetUnstarredDashboards = state => Object.values(sGetAllDashboards(state)).filter(dashboard => dashboard.starred === false); // selector level 3\n\nexport const sGetStarredDashboardIds = state => {\n  return sGetStarredDashboards(state).map(dashboard => dashboard.id);\n};\nexport const sGetUnstarredDashboardIds = state => sGetUnstarredDashboards(state).map(dashboard => dashboard.id);\nexport const sGetDashboardsSortedByStarred = state => [...arraySort(sGetStarredDashboards(state), 'ASC', 'displayName'), ...arraySort(sGetUnstarredDashboards(state), 'ASC', 'displayName')]; // utils\n\n/**\n * Returns the array of dashboards, customized for ui\n * @function\n * @param {Array} data The original dashboard list\n * @returns {Array}\n */\n\nexport const getCustomDashboards = data => arrayFrom(data).map(d => ({\n  id: d.id,\n  name: d.name,\n  displayName: d.displayName,\n  description: d.description,\n  displayDescription: d.displayDescription,\n  starred: d.favorite,\n  owner: d.user.name,\n  created: d.created.split('T').join(' ').substr(0, 16),\n  lastUpdated: d.lastUpdated.split('T').join(' ').substr(0, 16),\n  access: d.access,\n  numberOfItems: orArray(d.dashboardItems).length,\n  dashboardItems: convertBackendItemsToUi(d.dashboardItems)\n}));","/** @module reducers/selected */\nimport { combineReducers } from 'redux';\nimport { validateReducer } from '../modules/util';\nexport const SET_SELECTED_ID = 'SET_SELECTED_ID';\nexport const SET_SELECTED_ISLOADING = 'SET_SELECTED_ISLOADING';\nexport const SET_SELECTED_SHOWDESCRIPTION = 'SET_SELECTED_SHOWDESCRIPTION';\nexport const SET_SELECTED_ITEM_ACTIVE_TYPE = 'SET_SELECTED_ITEM_ACTIVE_TYPE';\nexport const CLEAR_SELECTED_ITEM_ACTIVE_TYPES = 'CLEAR_SELECTED_ITEM_ACTIVE_TYPES';\nexport const DEFAULT_STATE_SELECTED_ID = null;\nexport const DEFAULT_STATE_SELECTED_ISLOADING = false;\nexport const DEFAULT_STATE_SELECTED_SHOWDESCRIPTION = false;\nexport const DEFAULT_STATE_SELECTED_ITEM_ACTIVE_TYPES = {};\nexport const NON_EXISTING_DASHBOARD_ID = '0';\n\nconst id = (state = DEFAULT_STATE_SELECTED_ID, action) => {\n  switch (action.type) {\n    case SET_SELECTED_ID:\n      return validateReducer(action.value, DEFAULT_STATE_SELECTED_ID);\n\n    default:\n      return state;\n  }\n};\n\nconst isLoading = (state = DEFAULT_STATE_SELECTED_ISLOADING, action) => {\n  switch (action.type) {\n    case SET_SELECTED_ISLOADING:\n      return validateReducer(action.value, DEFAULT_STATE_SELECTED_ISLOADING);\n\n    default:\n      return state;\n  }\n};\n\nconst showDescription = (state = DEFAULT_STATE_SELECTED_SHOWDESCRIPTION, action) => {\n  switch (action.type) {\n    case SET_SELECTED_SHOWDESCRIPTION:\n      return validateReducer(action.value, DEFAULT_STATE_SELECTED_SHOWDESCRIPTION);\n\n    default:\n      return state;\n  }\n};\n\nconst itemActiveTypes = (state = DEFAULT_STATE_SELECTED_ITEM_ACTIVE_TYPES, action) => {\n  switch (action.type) {\n    case SET_SELECTED_ITEM_ACTIVE_TYPE:\n      {\n        return { ...state,\n          [action.id]: action.activeType\n        };\n      }\n\n    case CLEAR_SELECTED_ITEM_ACTIVE_TYPES:\n      {\n        return DEFAULT_STATE_SELECTED_ITEM_ACTIVE_TYPES;\n      }\n\n    default:\n      return state;\n  }\n};\n\nexport default combineReducers({\n  id,\n  isLoading,\n  showDescription,\n  itemActiveTypes\n}); // Selectors\n\nexport const sGetSelectedRoot = state => state.selected;\nexport const sGetSelectedId = state => sGetSelectedRoot(state).id;\nexport const sGetSelectedIsLoading = state => sGetSelectedRoot(state).isLoading;\nexport const sGetSelectedShowDescription = state => sGetSelectedRoot(state).showDescription;\nexport const sGetSelectedItemActiveType = (state, id) => sGetSelectedRoot(state).itemActiveTypes[id];","import arraySort from 'd2-utilizr/lib/arraySort';\nexport const getFilteredDashboards = (dashboards, filterText) => {\n  const filteredDashboards = arraySort(Object.values(dashboards).filter(d => d.displayName.toLowerCase().includes(filterText.toLowerCase())), 'ASC', 'displayName');\n  return [...filteredDashboards.filter(d => d.starred), ...filteredDashboards.filter(d => !d.starred)];\n};","import React from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport cx from 'classnames';\nimport { Link, withRouter } from 'react-router-dom';\nimport Chip from './DashboardItemChip';\nimport AddCircleIcon from '../../../icons/AddCircle';\nimport Filter from './Filter';\nimport { sGetAllDashboards } from '../../../reducers/dashboards';\nimport { sGetDashboardsFilter } from '../../../reducers/dashboardsFilter';\nimport { sGetSelectedId } from '../../../reducers/selected';\nimport { getFilteredDashboards } from '../../../modules/getFilteredDashboards';\nimport classes from './styles/Content.module.css';\n\nconst Content = ({\n  dashboards,\n  expanded,\n  filterText,\n  history,\n  selectedId,\n  onChipClicked,\n  onSearchClicked\n}) => {\n  const onSelectDashboard = () => {\n    const id = getFilteredDashboards(dashboards, filterText)[0]?.id;\n\n    if (id) {\n      history.push(id);\n    }\n  };\n\n  const getChips = () => getFilteredDashboards(dashboards, filterText).map(dashboard => <Chip key={dashboard.id} label={dashboard.displayName} starred={dashboard.starred} dashboardId={dashboard.id} selected={dashboard.id === selectedId} onClick={onChipClicked} />);\n\n  const getControlsSmall = () => <div className={classes.controlsSmall}>\n            <Filter onKeypressEnter={onSelectDashboard} onSearchClicked={onSearchClicked} expanded={expanded} />\n        </div>;\n\n  const getControlsLarge = () => <div className={classes.controlsLarge}>\n            <Link className={classes.newLink} to={'/new'} data-test=\"link-new-dashboard\">\n                <AddCircleIcon />\n            </Link>\n            <Filter onKeypressEnter={onSelectDashboard} onSearchClicked={onSearchClicked} expanded={expanded} />\n        </div>;\n\n  return <div className={cx(classes.container, expanded ? classes.expanded : classes.collapsed)}>\n            {getControlsSmall()}\n            <div className={classes.chipsContainer}>\n                {getControlsLarge()}\n                {getChips()}\n            </div>\n        </div>;\n};\n\nContent.propTypes = {\n  dashboards: PropTypes.object,\n  expanded: PropTypes.bool,\n  filterText: PropTypes.string,\n  history: PropTypes.object,\n  selectedId: PropTypes.string,\n  onChipClicked: PropTypes.func,\n  onSearchClicked: PropTypes.func\n};\n\nconst mapStateToProps = state => ({\n  dashboards: sGetAllDashboards(state),\n  selectedId: sGetSelectedId(state),\n  filterText: sGetDashboardsFilter(state)\n});\n\nexport default withRouter(connect(mapStateToProps)(Content));","import React from 'react';\nexport const ChevronDown = () => <svg height=\"24\" viewBox=\"0 0 24 24\" width=\"24\" xmlns=\"http://www.w3.org/2000/svg\">\n        <path d=\"m11.29289 15.7071c.39053.3905 1.02369.3905 1.41422 0l4.99999-4.99999c.3905-.39053.3905-1.02369 0-1.41422-.3905-.39052-1.0237-.39052-1.4142 0l-4.2929 4.2929-4.29289-4.2929c-.39053-.39052-1.02369-.39052-1.41422 0-.39052.39053-.39052 1.02369 0 1.41422z\" fill=\"#a0adba\" />\n    </svg>;\nexport const ChevronUp = () => <svg height=\"24\" viewBox=\"0 0 24 24\" width=\"24\" xmlns=\"http://www.w3.org/2000/svg\">\n        <path d=\"m11.2928932 8.29289322c.360484-.36048396.927715-.3882135 1.3200062-.08318861l.0942074.08318861 5 4.99999998c.3905243.3905243.3905243 1.0236893 0 1.4142136-.360484.3604839-.927715.3882135-1.3200062.0831886l-.0942074-.0831886-4.2928932-4.2921068-4.29289322 4.2921068c-.36048396.3604839-.92771502.3882135-1.32000622.0831886l-.09420734-.0831886c-.36048396-.360484-.3882135-.927715-.08318861-1.3200062l.08318861-.0942074z\" fill=\"#a0adba\" />\n    </svg>;","import React, { useRef } from 'react';\nimport PropTypes from 'prop-types';\nimport i18n from '@dhis2/d2-i18n';\nimport { Tooltip } from '@dhis2/ui';\nimport { ChevronDown, ChevronUp } from './assets/icons';\nimport classes from './styles/ShowMoreButton.module.css';\n\nconst ShowMoreButton = ({\n  onClick,\n  dashboardBarIsExpanded,\n  disabled\n}) => {\n  const containerRef = useRef(null);\n  const buttonLabel = dashboardBarIsExpanded ? i18n.t('Show fewer dashboards') : i18n.t('Show more dashboards');\n\n  const onButtonClicked = () => {\n    // The click may happen on the svg or path\n    // element of the button icon.\n    // In that case it is necessary to trigger\n    // the mouseout on the button element\n    // to ensure that the tooltip is removed\n    const buttonEl = containerRef.current.children[0];\n    const event = new MouseEvent('mouseout', {\n      bubbles: true,\n      cancelable: false\n    });\n    onClick();\n    buttonEl.dispatchEvent(event);\n  };\n\n  return <div className={classes.container} ref={containerRef}>\n            {disabled ? <div className={classes.disabled}>\n                    <ChevronDown />\n                </div> : <Tooltip content={buttonLabel} placement=\"bottom\">\n                    {({\n        onMouseOver,\n        onMouseOut,\n        ref\n      }) => <button className={classes.showMore} onClick={onButtonClicked} data-test=\"showmore-button\" aria-label={buttonLabel} ref={ref} onMouseOver={onMouseOver} onMouseOut={onMouseOut}>\n                            {dashboardBarIsExpanded ? <ChevronUp /> : <ChevronDown />}\n                        </button>}\n                </Tooltip>}\n        </div>;\n};\n\nShowMoreButton.propTypes = {\n  dashboardBarIsExpanded: PropTypes.bool,\n  disabled: PropTypes.bool,\n  onClick: PropTypes.func\n};\nexport default ShowMoreButton;","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport classes from './styles/DragHandle.module.css';\n\nconst DragHandle = ({\n  onHeightChanged,\n  setDragging\n}) => {\n  const [startingY, setStartingY] = useState(0);\n\n  const onStartDrag = e => {\n    setStartingY(e.clientY);\n    setDragging(true);\n    window.addEventListener('mousemove', onDrag);\n    window.addEventListener('mouseup', onEndDrag);\n  };\n\n  const onDrag = e => {\n    e.preventDefault();\n    e.stopPropagation();\n    const currentY = e.clientY;\n\n    if (currentY !== startingY && currentY > 0) {\n      requestAnimationFrame(() => {\n        onHeightChanged(currentY);\n      });\n    }\n  };\n\n  const onEndDrag = () => {\n    setDragging(false);\n    window.removeEventListener('mousemove', onDrag);\n    window.removeEventListener('mouseup', onEndDrag);\n  };\n\n  return <div className={classes.draghandle} onMouseDown={onStartDrag} data-test=\"controlbar-drag-handle\" />;\n};\n\nDragHandle.propTypes = {\n  setDragging: PropTypes.func,\n  onHeightChanged: PropTypes.func\n};\nexport default DragHandle;","const ROW_HEIGHT = 40;\nconst PADDING_TOP = 10;\nconst SHOWMORE_BUTTON_HEIGHT = 21; // 27px - 6px below bottom edge of ctrlbar\n\nexport const getRowsFromHeight = height => {\n  return Math.floor((height - SHOWMORE_BUTTON_HEIGHT - PADDING_TOP) / ROW_HEIGHT);\n};","/** @module reducers/controlBar */\nimport { combineReducers } from 'redux';\nimport { validateReducer } from '../modules/util';\nexport const SET_CONTROLBAR_USER_ROWS = 'SET_CONTROLBAR_USER_ROWS';\nexport const DEFAULT_STATE_CONTROLBAR_ROWS = 1;\n\nconst userRows = (state = DEFAULT_STATE_CONTROLBAR_ROWS, action) => {\n  switch (action.type) {\n    case SET_CONTROLBAR_USER_ROWS:\n      return validateReducer(action.value, DEFAULT_STATE_CONTROLBAR_ROWS);\n\n    default:\n      return state;\n  }\n};\n\nexport default combineReducers({\n  userRows\n});\n/**\n * Selectors that point to specific props in the state object\n * @function\n * @param {Object} state\n * @returns {Object}\n */\n\nconst sGetControlBarRoot = state => state.controlBar; // Selector dependency level 2\n\n\nexport const sGetControlBarUserRows = state => sGetControlBarRoot(state).userRows;","import { getInstance } from 'd2';\nexport const NAMESPACE = 'dashboard';\nexport const hasNamespace = async (d2) => await d2.currentUser.dataStore.has(NAMESPACE);\nexport const getNamespace = async (d2, hasNamespace) => hasNamespace ? await d2.currentUser.dataStore.get(NAMESPACE) : await d2.currentUser.dataStore.create(NAMESPACE);\nexport const apiPostUserDataStoreValue = async (key, value) => {\n  const d2 = await getInstance();\n  const ns = await getNamespace(d2, hasNamespace);\n  return ns.set(key, value);\n};\nexport const apiGetUserDataStoreValue = async (key, defaultValue) => {\n  const d2 = await getInstance();\n  const namespace = await getNamespace(d2, await hasNamespace(d2));\n  const hasKey = namespace?.keys?.find(k => k === key);\n\n  if (hasKey) {\n    return await namespace.get(key);\n  } else {\n    await apiPostUserDataStoreValue(key, defaultValue, namespace);\n    console.log('(These errors to /userDataStore can be ignored)');\n    return defaultValue;\n  }\n};","import { apiGetUserDataStoreValue, apiPostUserDataStoreValue } from './userDataStore';\nimport { DEFAULT_STATE_CONTROLBAR_ROWS } from '../reducers/controlBar';\nconst KEY_CONTROLBAR_ROWS = 'controlBarRows';\nexport const apiGetControlBarRows = async () => await apiGetUserDataStoreValue(KEY_CONTROLBAR_ROWS, DEFAULT_STATE_CONTROLBAR_ROWS);\nexport const apiPostControlBarRows = async (value) => await apiPostUserDataStoreValue(KEY_CONTROLBAR_ROWS, value);","import { SET_CONTROLBAR_USER_ROWS } from '../reducers/controlBar';\nimport { apiGetControlBarRows } from '../api/controlBar'; // actions\n\nexport const acSetControlBarUserRows = rows => ({\n  type: SET_CONTROLBAR_USER_ROWS,\n  value: rows\n}); // thunks\n\nexport const tSetControlBarRows = () => async dispatch => {\n  const onSuccess = rows => {\n    dispatch(acSetControlBarUserRows(rows));\n  };\n\n  const onError = error => {\n    console.log('Error (apiGetControlBarRows): ', error);\n    return error;\n  };\n\n  try {\n    const controlBarRows = await apiGetControlBarRows();\n    return onSuccess(controlBarRows);\n  } catch (err) {\n    return onError(err);\n  }\n};","import React, { useState, useRef, useEffect, createRef } from 'react';\nimport { connect } from 'react-redux';\nimport cx from 'classnames';\nimport PropTypes from 'prop-types';\nimport Content from './Content';\nimport ShowMoreButton from './ShowMoreButton';\nimport DragHandle from './DragHandle';\nimport { getRowsFromHeight } from './controlBarDimensions';\nimport { sGetControlBarUserRows } from '../../../reducers/controlBar';\nimport { acSetControlBarUserRows } from '../../../actions/controlBar';\nimport { apiPostControlBarRows } from '../../../api/controlBar';\nimport classes from './styles/DashboardsBar.module.css';\nexport const MIN_ROW_COUNT = 1;\nexport const MAX_ROW_COUNT = 10;\n\nconst DashboardsBar = ({\n  userRows,\n  updateUserRows,\n  expanded,\n  onExpandedChanged\n}) => {\n  const [dragging, setDragging] = useState(false);\n  const userRowsChanged = useRef(false);\n  const ref = createRef();\n  const rootElement = document.documentElement;\n\n  const adjustRows = newHeight => {\n    const newRows = Math.max(MIN_ROW_COUNT, getRowsFromHeight(newHeight - 52) // don't rush the transition to a bigger row count\n    );\n\n    if (newRows !== userRows) {\n      updateUserRows(Math.min(newRows, MAX_ROW_COUNT));\n      userRowsChanged.current = true;\n    }\n  };\n\n  useEffect(() => {\n    rootElement.style.setProperty('--user-rows-count', userRows);\n  }, [userRows]);\n  useEffect(() => {\n    if (!dragging && userRowsChanged.current) {\n      apiPostControlBarRows(userRows);\n      userRowsChanged.current = false;\n    }\n  }, [dragging, userRowsChanged.current]);\n\n  const scrollToTop = () => {\n    if (expanded) {\n      ref.current.scroll(0, 0);\n    }\n  };\n\n  const toggleExpanded = () => {\n    if (expanded) {\n      cancelExpanded();\n    } else {\n      scrollToTop();\n      onExpandedChanged(!expanded);\n    }\n  };\n\n  const cancelExpanded = () => {\n    scrollToTop();\n    onExpandedChanged(false);\n  };\n\n  return <div className={expanded ? classes.expanded : classes.collapsed} data-test=\"dashboards-bar\">\n            <div className={cx(classes.container)}>\n                <div className={classes.content} ref={ref}>\n                    <Content onChipClicked={cancelExpanded} onSearchClicked={toggleExpanded} expanded={expanded} />\n                </div>\n                <ShowMoreButton onClick={toggleExpanded} dashboardBarIsExpanded={expanded} disabled={!expanded && userRows === MAX_ROW_COUNT} />\n                <DragHandle setDragging={setDragging} onHeightChanged={adjustRows} />\n            </div>\n            <div className={cx(classes.spacer)} />\n        </div>;\n};\n\nDashboardsBar.propTypes = {\n  expanded: PropTypes.bool,\n  updateUserRows: PropTypes.func,\n  userRows: PropTypes.number,\n  onExpandedChanged: PropTypes.func\n};\n\nconst mapStateToProps = state => ({\n  userRows: sGetControlBarUserRows(state)\n});\n\nconst mapDispatchToProps = {\n  updateUserRows: acSetControlBarUserRows\n};\nexport default connect(mapStateToProps, mapDispatchToProps)(DashboardsBar);","import React from 'react';\nimport { colors } from '@dhis2/ui';\nimport PropTypes from 'prop-types';\n\nconst NoContentMessage = ({\n  text\n}) => <div style={{\n  padding: '50px 10px',\n  textAlign: 'center',\n  fontSize: '15px',\n  fontWeight: 500,\n  color: colors.grey600\n}}>\n        {text}\n    </div>;\n\nNoContentMessage.propTypes = {\n  text: PropTypes.string\n};\nexport default NoContentMessage;","import React from 'react';\nimport PropTypes from 'prop-types';\nimport cx from 'classnames';\nimport classes from './styles/DashboardContainer.module.css';\n\nconst DashboardContainer = ({\n  children,\n  covered\n}) => {\n  return <div className={cx(classes.container, 'dashboard-scroll-container', covered && classes.covered)}>\n            {children}\n        </div>;\n};\n\nDashboardContainer.propTypes = {\n  children: PropTypes.node,\n  covered: PropTypes.bool\n};\nexport default DashboardContainer;","import React from 'react';\nimport { colors } from '@dhis2/ui';\nexport const ThreeDots = () => <svg height=\"18\" viewBox=\"0 0 18 18\" width=\"18\" xmlns=\"http://www.w3.org/2000/svg\">\n        <path d=\"m4 7.5c-.83 0-1.5.67-1.5 1.5s.67 1.5 1.5 1.5 1.5-.67 1.5-1.5-.67-1.5-1.5-1.5zm10 0c-.83 0-1.5.67-1.5 1.5s.67 1.5 1.5 1.5 1.5-.67 1.5-1.5-.67-1.5-1.5-1.5zm-5 0c-.83 0-1.5.67-1.5 1.5s.67 1.5 1.5 1.5 1.5-.67 1.5-1.5-.67-1.5-1.5-1.5z\" fill=\"#6e7a8a\" />\n    </svg>;\nexport const SpeechBubble = () => <svg height=\"20\" viewBox=\"0 0 20 20\" width=\"20\" xmlns=\"http://www.w3.org/2000/svg\" style={{\n  margin: '3px 2px 0 2px'\n}} // Temporary fix for the misaligned icon, should be removed once the icon is replaced\n>\n        <path d=\"m20 2h-16c-1.1 0-1.99.9-1.99 2l-.01 18 4-4h14c1.1 0 2-.9 2-2v-12c0-1.1-.9-2-2-2zm-2 12h-12v-2h12zm0-3h-12v-2h12zm0-3h-12v-2h12z\" fill=\"#6e7a8a\" fillRule=\"evenodd\" transform=\"translate(-2 -2)\" />\n    </svg>;\nexport const Warning = () => <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24\" viewBox=\"0 0 24 24\" width=\"24\" fill={colors.grey600}>\n        <path d=\"M0 0h24v24H0z\" fill=\"none\" />\n        <path d=\"M1 21h22L12 2 1 21zm12-3h-2v-2h2v2zm0-4h-2v-4h2v4z\" />\n    </svg>;\nexport const Fullscreen = () => <svg height=\"16\" viewBox=\"0 0 16 16\" width=\"16\" xmlns=\"http://www.w3.org/2000/svg\">\n        <path d=\"m6.85355339 9.14644661c.17356635.17356635.1928515.44299075.05785545.63785889l-.05785545.06924789-4.14755339 4.14644661h2.794c.24545989 0 .44960837.1768752.49194433.4101244l.00805567.0898756c0 .2454599-.17687516.4496084-.41012437.4919443l-.08987563.0080557h-4c-.24545989 0-.44960837-.1768752-.49194433-.4101244l-.00805567-.0898756v-4c0-.2761424.22385763-.5.5-.5.24545989 0 .44960837.1768752.49194433.4101244l.00805567.0898756v2.792l4.14644661-4.14555339c.19526215-.19526215.51184463-.19526215.70710678 0zm6.14644661-2.14644661v6h-6v-1h5v-5zm-4-4v1h-5v5h-1v-6zm5.5-2c.2454599 0 .4496084.17687516.4919443.41012437l.0080557.08987563v4c0 .27614237-.2238576.5-.5.5-.2454599 0-.4496084-.17687516-.4919443-.41012437l-.0080557-.08987563v-2.794l-4.14644661 4.14755339c-.19526215.19526215-.51184463.19526215-.70710678 0-.17356635-.17356635-.1928515-.44299075-.05785545-.63785889l.05785545-.06924789 4.14655339-4.14744661-2.793.001c-.2454599 0-.4496084-.17687516-.4919443-.41012437l-.0080557-.08987563c0-.24545989.1768752-.44960837.4101244-.49194433l.0898756-.00805567z\" fill=\"inherit\" />\n    </svg>;\nexport const ExitFullscreen = () => <svg height=\"16\" viewBox=\"0 0 16 16\" width=\"16\" xmlns=\"http://www.w3.org/2000/svg\">\n        <path d=\"m6.5 9c.24545989 0 .44960837.17687516.49194433.41012437l.00805567.08987563v4c0 .2761424-.22385763.5-.5.5-.24545989 0-.44960837-.1768752-.49194433-.4101244l-.00805567-.0898756v-2.794l-3.64644661 3.6475534c-.19526215.1952621-.51184463.1952621-.70710678 0-.17356635-.1735664-.1928515-.4429908-.05785545-.6378589l.05785545-.0692479 3.64555339-3.6464466h-2.792c-.24545989 0-.44960837-.17687516-.49194433-.41012437l-.00805567-.08987563c0-.24545989.17687516-.44960837.41012437-.49194433l.08987563-.00805567zm7.5-.5v5.5h-5.5v-1h4.5v-4.5zm-6.5-6.5v1h-4.5v4.5h-1v-5.5zm6.8535534-.35355339c.1735663.17356635.1928515.44299075.0578554.63785889l-.0578554.06924789-3.6475534 3.64644661h2.794c.2454599 0 .4496084.17687516.4919443.41012437l.0080557.08987563c0 .24545989-.1768752.44960837-.4101244.49194433l-.0898756.00805567h-4c-.24545989 0-.44960837-.17687516-.49194433-.41012437l-.00805567-.08987563v-4c0-.27614237.22385763-.5.5-.5.24545989 0 .44960837.17687516.49194433.41012437l.00805567.08987563v2.792l3.6464466-3.64555339c.1952622-.19526215.5118446-.19526215.7071068 0z\" fill=\"inherit\" />\n    </svg>;","import { apiGetUserDataStoreValue, apiPostUserDataStoreValue } from './userDataStore';\nimport { DEFAULT_STATE_SELECTED_SHOWDESCRIPTION } from '../reducers/selected';\nconst KEY_SHOW_DESCRIPTION = 'showDescription';\nexport const apiGetShowDescription = async () => await apiGetUserDataStoreValue(KEY_SHOW_DESCRIPTION, DEFAULT_STATE_SELECTED_SHOWDESCRIPTION);\nexport const apiPostShowDescription = value => apiPostUserDataStoreValue(KEY_SHOW_DESCRIPTION, value);","export const RECEIVED_USER = 'RECEIVED_USER';\nexport const DEFAULT_STATE_USER = {\n  id: '',\n  username: '',\n  uiLocale: '',\n  isSuperuser: false\n};\nexport default ((state = DEFAULT_STATE_USER, action) => {\n  switch (action.type) {\n    case RECEIVED_USER:\n      {\n        return fromD2ToUserObj(action.value);\n      }\n\n    default:\n      return state;\n  }\n});\n\nfunction fromD2ToUserObj(d2Object) {\n  return {\n    id: d2Object.id,\n    username: d2Object.username,\n    uiLocale: d2Object.settings.keyUiLocale,\n    isSuperuser: d2Object.authorities.has('ALL')\n  };\n} // selectors\n\n\nexport const sGetUserId = state => state.user.id;\nexport const sGetUserUsername = state => state.user.username;\nexport const sGetIsSuperuser = state => state.user.isSuperuser;\nexport const sGetUiLocale = state => state.user.uiLocale;","import { getDimensionById, DIMENSION_ID_PERIOD, DIMENSION_ID_ORGUNIT } from '@dhis2/analytics';\nexport const SET_DIMENSIONS = 'SET_DIMENSIONS';\nexport const DEFAULT_DIMENSIONS = [getDimensionById(DIMENSION_ID_PERIOD), getDimensionById(DIMENSION_ID_ORGUNIT)];\nexport default ((state = DEFAULT_DIMENSIONS, action) => {\n  switch (action.type) {\n    case SET_DIMENSIONS:\n      {\n        return [...DEFAULT_DIMENSIONS, ...action.value];\n      }\n\n    default:\n      return state;\n  }\n});\nexport const sGetDimensions = state => state.dimensions;","import { sGetDimensions } from './dimensions';\nimport { createSelector } from 'reselect';\nexport const CLEAR_ITEM_FILTERS = 'CLEAR_ITEM_FILTERS';\nexport const SET_ITEM_FILTERS = 'SET_ITEM_FILTERS';\nexport const ADD_ITEM_FILTER = 'ADD_ITEM_FILTER';\nexport const REMOVE_ITEM_FILTER = 'REMOVE_ITEM_FILTER';\nexport const DEFAULT_STATE_ITEM_FILTERS = {};\nexport default ((state = DEFAULT_STATE_ITEM_FILTERS, action) => {\n  switch (action.type) {\n    case ADD_ITEM_FILTER:\n      {\n        return { ...state,\n          [action.filter.id]: action.filter.value\n        };\n      }\n\n    case REMOVE_ITEM_FILTER:\n      {\n        const newState = { ...state\n        };\n        delete newState[action.id];\n        return newState;\n      }\n\n    case SET_ITEM_FILTERS:\n      {\n        return action.filters;\n      }\n\n    case CLEAR_ITEM_FILTERS:\n      {\n        return DEFAULT_STATE_ITEM_FILTERS;\n      }\n\n    default:\n      return state;\n  }\n}); // selectors\n\nexport const sGetItemFiltersRoot = state => state.itemFilters; // simplify the filters structure to:\n// [{ id: 'pe', name: 'Period', values: [{ id: 2019: name: '2019' }, {id: 'LAST_MONTH', name: 'Last month' }]}, ...]\n\nexport const sGetNamedItemFilters = createSelector([sGetItemFiltersRoot, sGetDimensions], (filters, dimensions) => Object.keys(filters).reduce((arr, id) => {\n  arr.push({\n    id: id,\n    name: dimensions.find(dimension => dimension.id === id).name,\n    values: filters[id].map(value => ({\n      id: value.id,\n      name: value.displayName || value.name\n    }))\n  });\n  return arr;\n}, []));","import { ADD_ITEM_FILTER, REMOVE_ITEM_FILTER, SET_ITEM_FILTERS, CLEAR_ITEM_FILTERS } from '../reducers/itemFilters';\nexport const FILTER_ORG_UNIT = 'ou'; // actions\n\nexport const acAddItemFilter = filter => ({\n  type: ADD_ITEM_FILTER,\n  filter\n});\nexport const acRemoveItemFilter = id => ({\n  type: REMOVE_ITEM_FILTER,\n  id\n});\nexport const acClearItemFilters = () => ({\n  type: CLEAR_ITEM_FILTERS\n});\nexport const acSetItemFilters = filters => ({\n  type: SET_ITEM_FILTERS,\n  filters\n});","import update from 'immutability-helper';\nimport { arrayToIdMap } from '../modules/util';\nexport const RECEIVED_MESSAGES = 'RECEIVED_MESSAGES';\nexport default ((state = {}, action) => {\n  switch (action.type) {\n    case RECEIVED_MESSAGES:\n      {\n        const conversations = arrayToIdMap(action.value);\n        const newState = update(state, {\n          $merge: conversations\n        });\n        return newState;\n      }\n\n    default:\n      return state;\n  }\n}); // selectors\n\nexport const sGetMessagesRoot = state => state.messages;","export const messageConversationsQuery = {\n  resource: 'messageConversations',\n  params: {\n    fields: 'id,messageCount,lastUpdated,messageType,displayName,read,messages[id,read,sender[id,displayName],text,lastUpdated]',\n    order: 'read:asc',\n    pageSize: 200\n  }\n};\nexport const getMessages = async dataEngine => {\n  try {\n    const {\n      messageConversations\n    } = await dataEngine.query({\n      messageConversations: messageConversationsQuery\n    });\n    return messageConversations.messageConversations;\n  } catch (error) {\n    console.log('Error:', error);\n  }\n};","import { RECEIVED_MESSAGES } from '../../../reducers/messages';\nimport { getMessages } from '../../../api/messages';\n\nconst onError = (action, error) => {\n  console.log(`Error in action ${action}: ${error}`);\n  return error;\n};\n\nexport const receivedMessages = value => ({\n  type: RECEIVED_MESSAGES,\n  value\n});\nexport const tGetMessages = dataEngine => async dispatch => {\n  try {\n    const messageConversations = await getMessages(dataEngine);\n    return dispatch(receivedMessages(messageConversations));\n  } catch (err) {\n    return onError('Get Messages', err);\n  }\n};","export const SET_ALERT_MESSAGE = 'SET_ALERT_MESSAGE';\nexport const CLEAR_ALERT_MESSAGE = 'CLEAR_ALERT_MESSAGE';\nexport const DEFAULT_STATE_ALERT = null;\nexport default ((state = DEFAULT_STATE_ALERT, action) => {\n  switch (action.type) {\n    case SET_ALERT_MESSAGE:\n      {\n        return action.value;\n      }\n\n    case CLEAR_ALERT_MESSAGE:\n      {\n        return DEFAULT_STATE_ALERT;\n      }\n\n    default:\n      return state;\n  }\n}); // selectors\n\nexport const sGetAlertMessage = state => state.alert;","import { SET_ALERT_MESSAGE, CLEAR_ALERT_MESSAGE } from '../reducers/alert';\nexport const acSetAlertMessage = value => ({\n  type: SET_ALERT_MESSAGE,\n  value\n});\nexport const acClearAlertMessage = () => ({\n  type: CLEAR_ALERT_MESSAGE\n});","import { orObject } from '../modules/util';\nimport objectClean from 'd2-utilizr/lib/objectClean';\n/** @module reducers/visualizations */\n\nexport const ADD_VISUALIZATION = 'ADD_VISUALIZATION';\nexport const SET_ACTIVE_VISUALIZATION_TYPE = 'SET_ACTIVE_VISUALIZATION_TYPE';\nexport const CLEAR_VISUALIZATIONS = 'CLEAR_VISUALIZATIONS';\nexport const DEFAULT_STATE_VISUALIZATIONS = {};\n\nconst isEmpty = p => p === undefined || p === null;\n\nexport default ((state = DEFAULT_STATE_VISUALIZATIONS, action) => {\n  switch (action.type) {\n    case ADD_VISUALIZATION:\n      {\n        return { ...state,\n          [action.value.id]: objectClean({ ...orObject(state[action.value.id]),\n            ...action.value\n          }, isEmpty)\n        };\n      }\n\n    case CLEAR_VISUALIZATIONS:\n      {\n        return DEFAULT_STATE_VISUALIZATIONS;\n      }\n\n    default:\n      return state;\n  }\n}); // root selector\n\nexport const sGetVisualizationsRoot = state => state.visualizations; // selectors level 1\n\nexport const sGetVisualization = (state, id) => {\n  return sGetVisualizationsRoot(state)[id];\n};","import { ADD_VISUALIZATION, CLEAR_VISUALIZATIONS } from '../reducers/visualizations';\nexport const acAddVisualization = value => ({\n  type: ADD_VISUALIZATION,\n  value\n});\nexport const acClearVisualizations = () => ({\n  type: CLEAR_VISUALIZATIONS\n});","import { getInstance } from 'd2';\nimport arrayClean from 'd2-utilizr/lib/arrayClean';\nimport { getEndPointName, MAP } from '../modules/itemTypes';\nimport { getVisualizationId } from '../modules/item'; // Id, name\n\nexport const getIdNameFields = ({\n  rename\n} = {}) => ['id', `${rename ? 'displayName~rename(name)' : 'name,displayName'}`]; // Item\n\nexport const getItemFields = () => ['dimensionItem~rename(id)', 'displayName~rename(name)', 'dimensionItemType']; // Dimension\n\nexport const getDimensionFields = ({\n  withItems\n}) => arrayClean(['dimension', 'legendSet[id]', 'filter', 'programStage', withItems ? `items[${getItemFields().join(',')}]` : ``]); // Axis\n\nexport const getAxesFields = ({\n  withItems\n}) => [`columns[${getDimensionFields({\n  withItems\n}).join(',')}]`, `rows[${getDimensionFields({\n  withItems\n}).join(',')}]`, `filters[${getDimensionFields({\n  withItems\n}).join(',')}]`]; // Favorite\n\nexport const getFavoriteFields = ({\n  withDimensions,\n  withOptions\n}) => {\n  return arrayClean([`${getIdNameFields({\n    rename: true\n  }).join(',')}`, 'displayDescription~rename(description)', withDimensions ? `${getAxesFields({\n    withItems: true\n  }).join(',')}` : ``, withOptions ? ['*', '!attributeDimensions', '!attributeValues', '!category', '!categoryDimensions', '!categoryOptionGroupSetDimensions', '!columnDimensions', '!dataDimensionItems', '!dataElementDimensions', '!dataElementGroupSetDimensions', '!filterDimensions', '!itemOrganisationUnitGroups', '!lastUpdatedBy', '!organisationUnitGroupSetDimensions', '!organisationUnitLevels', '!organisationUnits', '!programIndicatorDimensions', '!relativePeriods', '!reportParams', '!rowDimensions', '!translations', '!userOrganisationUnit', '!userOrganisationUnitChildren', '!userOrganisationUnitGrandChildren'].join(',') : '']);\n};\nexport const getFavoritesFields = ({\n  withDimensions\n}) => [`reportTable[${getFavoriteFields({\n  withDimensions\n}).join(',')}]`, `chart[${['type', ...getFavoriteFields({\n  withDimensions\n})].join(',')}]`, `map[${getFavoriteFields({\n  withDimensions\n}).join(',')}]`, `eventReport[${getFavoriteFields({\n  withDimensions\n}).join(',')}]`, `eventChart[${getFavoriteFields({\n  withDimensions\n}).join(',')}]`]; // List item\n\nexport const getListItemFields = () => [`reports[${['type', ...getIdNameFields({\n  rename: true\n})].join(',')}]`, `resources[${getIdNameFields({\n  rename: true\n}).join(',')}]`, `users[${getIdNameFields({\n  rename: true\n}).join(',')}]`]; // Map\n\nexport const getMapFields = () => [`${getIdNameFields({\n  rename: true\n}).join(',')}`, 'user,longitude,latitude,zoom,basemap', `mapViews[${getFavoriteFields({\n  withDimensions: true,\n  withOptions: true\n})}]`]; // Api\n\nexport const apiFetchVisualization = async item => {\n  const id = getVisualizationId(item);\n  const fields = item.type === MAP ? getMapFields() : getFavoriteFields({\n    withDimensions: true,\n    withOptions: true\n  });\n  const d2 = await getInstance();\n  return await d2.Api.getApi().get(`${getEndPointName(item.type)}/${id}`, {\n    fields\n  });\n};","import arrayClean from 'd2-utilizr/lib/arrayClean';\nimport { getListItemFields, getFavoritesFields, getIdNameFields } from './metadata'; // Helper functions\n\nexport const onError = error => console.log('Error: ', error); // Dashboard item\n\nexport const getDashboardItemsFields = ({\n  withFavorite\n} = {}) => arrayClean(['id', 'type', 'shape', 'x', 'y', 'width~rename(w)', 'height~rename(h)', 'messages', 'text', 'appKey', `${getListItemFields().join(',')}`, withFavorite ? `${getFavoritesFields({\n  withDimensions: withFavorite.withDimensions\n}).join(',')}` : ``]); // Dashboard\n\nexport const getDashboardFields = ({\n  withItems,\n  withFavorite\n} = {}) => arrayClean([`${getIdNameFields().join(',')}`, 'description', 'displayDescription', 'favorite', `user[${getIdNameFields({\n  rename: true\n}).join(',')}]`, 'created', 'lastUpdated', 'access', 'href', // needed for d2-ui-translations-dialog, since we don't pass a d2 Model anymore\nwithItems ? `dashboardItems[${getDashboardItemsFields({\n  withFavorite\n}).join(',')}]` : ``]);","import arrayClean from 'd2-utilizr/lib/arrayClean';\nimport { onError, getDashboardFields } from './index';\nexport const dashboardsQuery = {\n  resource: 'dashboards',\n  params: {\n    fields: [getDashboardFields(), 'dashboardItems[id]'].join(','),\n    paging: false\n  }\n};\nexport const dashboardQuery = {\n  resource: 'dashboards',\n  id: ({\n    id\n  }) => id,\n  params: {\n    fields: arrayClean(getDashboardFields({\n      withItems: true,\n      withFavorite: {\n        withDimensions: false\n      }\n    })).join(',')\n  }\n};\nexport const deleteDashboardMutation = {\n  type: 'delete',\n  resource: 'dashboards',\n  id: ({\n    id\n  }) => id\n}; // Get \"all\" dashboards on startup\n\nexport const apiFetchDashboards = async dataEngine => {\n  try {\n    const dashboardsData = await dataEngine.query({\n      dashboards: dashboardsQuery\n    });\n    return dashboardsData.dashboards.dashboards;\n  } catch (error) {\n    onError(error);\n  }\n}; // Get more info about selected dashboard\n\nexport const apiFetchDashboard = async (dataEngine, id) => {\n  try {\n    const dashboardData = await dataEngine.query({\n      dashboard: dashboardQuery\n    }, {\n      variables: {\n        id\n      }\n    });\n    return dashboardData.dashboard;\n  } catch (error) {\n    onError(error);\n  }\n};\nexport const apiDeleteDashboard = async (dataEngine, id) => {\n  try {\n    await dataEngine.mutate(deleteDashboardMutation, {\n      variables: {\n        id\n      }\n    });\n  } catch (error) {\n    onError(error);\n  }\n};","import i18n from '@dhis2/d2-i18n';\nimport { getCustomDashboards, sGetDashboardById } from '../reducers/dashboards';\nimport { SET_SELECTED_ID, SET_SELECTED_ISLOADING, SET_SELECTED_SHOWDESCRIPTION, SET_SELECTED_ITEM_ACTIVE_TYPE, CLEAR_SELECTED_ITEM_ACTIVE_TYPES, sGetSelectedIsLoading, sGetSelectedId } from '../reducers/selected';\nimport { sGetUserUsername } from '../reducers/user';\nimport { acSetDashboardItems, acAppendDashboards } from './dashboards';\nimport { acClearItemFilters } from './itemFilters';\nimport { tGetMessages } from '../components/Item/MessagesItem/actions';\nimport { acSetAlertMessage, acClearAlertMessage } from './alert';\nimport { acAddVisualization, acClearVisualizations } from './visualizations';\nimport { apiFetchDashboard } from '../api/dashboards';\nimport { storePreferredDashboardId } from '../api/localStorage';\nimport { apiGetShowDescription } from '../api/description';\nimport { withShape } from '../modules/gridUtil';\nimport { getVisualizationFromItem } from '../modules/item';\nimport { REPORT_TABLE, CHART, MAP, EVENT_REPORT, EVENT_CHART, MESSAGES } from '../modules/itemTypes'; // actions\n\nexport const acSetSelectedId = value => ({\n  type: SET_SELECTED_ID,\n  value\n});\nexport const acSetSelectedIsLoading = value => ({\n  type: SET_SELECTED_ISLOADING,\n  value\n});\nexport const acSetSelectedShowDescription = value => ({\n  type: SET_SELECTED_SHOWDESCRIPTION,\n  value\n});\nexport const acSetSelectedItemActiveType = (id, activeType) => {\n  const action = {\n    type: SET_SELECTED_ITEM_ACTIVE_TYPE,\n    id,\n    activeType\n  };\n  return action;\n};\nexport const acClearSelectedItemActiveTypes = () => ({\n  type: CLEAR_SELECTED_ITEM_ACTIVE_TYPES\n}); // thunks\n\nexport const tSetSelectedDashboardById = id => async (dispatch, getState, dataEngine) => {\n  dispatch(acSetSelectedIsLoading(true));\n  const alertTimeout = setTimeout(() => {\n    const name = sGetDashboardById(getState(), id)?.displayName;\n\n    if (sGetSelectedIsLoading(getState()) && name) {\n      dispatch(acSetAlertMessage(i18n.t('Loading dashboard – {{name}}', {\n        name\n      })));\n    }\n  }, 500);\n\n  const onSuccess = selected => {\n    dispatch(acAppendDashboards(selected));\n    const customDashboard = getCustomDashboards(selected)[0];\n    dispatch(acSetDashboardItems(withShape(customDashboard.dashboardItems)));\n    storePreferredDashboardId(sGetUserUsername(getState()), id);\n\n    if (id !== sGetSelectedId(getState())) {\n      dispatch(acClearItemFilters());\n      dispatch(acClearVisualizations());\n      dispatch(acClearSelectedItemActiveTypes());\n    }\n\n    customDashboard.dashboardItems.forEach(item => {\n      switch (item.type) {\n        case REPORT_TABLE:\n        case CHART:\n        case MAP:\n        case EVENT_REPORT:\n        case EVENT_CHART:\n          dispatch(acAddVisualization(getVisualizationFromItem(item)));\n          break;\n\n        case MESSAGES:\n          dispatch(tGetMessages(dataEngine));\n          break;\n\n        default:\n          break;\n      }\n    });\n    dispatch(acSetSelectedId(id));\n    dispatch(acSetSelectedIsLoading(false));\n    clearTimeout(alertTimeout);\n    dispatch(acClearAlertMessage());\n    return selected;\n  };\n\n  try {\n    const dashboard = await apiFetchDashboard(dataEngine, id);\n    return onSuccess(dashboard);\n  } catch (err) {\n    console.error('Error: ', err);\n    return err;\n  }\n};\nexport const tSetShowDescription = () => async dispatch => {\n  const onSuccess = value => {\n    dispatch(acSetSelectedShowDescription(value));\n  };\n\n  try {\n    const showDescription = await apiGetShowDescription();\n    return onSuccess(showDescription);\n  } catch (err) {\n    console.error('Error (apiGetShowDescription): ', err);\n    return err;\n  }\n};","export const getPreferredDashboardId = username => localStorage.getItem(`dhis2.dashboard.current.${username}`) || undefined;\nexport const storePreferredDashboardId = (username, dashboardId) => {\n  localStorage.setItem(`dhis2.dashboard.current.${username}`, dashboardId);\n};","import { SET_DASHBOARDS, ADD_DASHBOARDS, SET_DASHBOARD_STARRED, SET_DASHBOARD_DISPLAY_NAME, SET_DASHBOARD_ITEMS, getCustomDashboards, sGetDashboardById, sGetDashboardsSortedByStarred } from '../reducers/dashboards';\nimport { NON_EXISTING_DASHBOARD_ID } from '../reducers/selected';\nimport { sGetUserUsername } from '../reducers/user';\nimport { tSetSelectedDashboardById, acSetSelectedId } from './selected';\nimport { apiFetchDashboards, apiDeleteDashboard } from '../api/dashboards';\nimport { getPreferredDashboardId } from '../api/localStorage';\nimport { arrayToIdMap } from '../modules/util'; // actions\n\nexport const acSetDashboards = dashboards => ({\n  type: SET_DASHBOARDS,\n  value: arrayToIdMap(getCustomDashboards(dashboards))\n});\nexport const acAppendDashboards = dashboards => ({\n  type: ADD_DASHBOARDS,\n  value: arrayToIdMap(getCustomDashboards(dashboards))\n});\nexport const acSetDashboardStarred = (dashboardId, isStarred) => ({\n  type: SET_DASHBOARD_STARRED,\n  dashboardId: dashboardId,\n  value: isStarred\n});\nexport const acSetDashboardDisplayName = (dashboardId, value) => ({\n  type: SET_DASHBOARD_DISPLAY_NAME,\n  dashboardId,\n  value\n});\nexport const acSetDashboardItems = value => ({\n  type: SET_DASHBOARD_ITEMS,\n  value\n}); // thunks\n\nexport const tFetchDashboards = () => async (dispatch, getState, dataEngine) => {\n  const dashboards = await apiFetchDashboards(dataEngine);\n  dispatch(acSetDashboards(dashboards));\n};\nexport const tSelectDashboard = id => async (dispatch, getState) => {\n  try {\n    const state = getState();\n    let dashboardToSelect = null;\n\n    if (id) {\n      dashboardToSelect = sGetDashboardById(state, id) || null;\n    } else {\n      const preferredId = getPreferredDashboardId(sGetUserUsername(state));\n      const dash = sGetDashboardById(state, preferredId);\n      dashboardToSelect = preferredId && dash ? dash : sGetDashboardsSortedByStarred(state)[0];\n    }\n\n    if (dashboardToSelect) {\n      dispatch(tSetSelectedDashboardById(dashboardToSelect.id));\n    } else {\n      dispatch(acSetSelectedId(NON_EXISTING_DASHBOARD_ID));\n    }\n  } catch (err) {\n    console.error('Error (apiFetchDashboards): ', err);\n    return err;\n  }\n};\nexport const tDeleteDashboard = id => async (dispatch, getState, dataEngine) => {\n  try {\n    await apiDeleteDashboard(dataEngine, id);\n    await dispatch(tFetchDashboards());\n    return Promise.resolve();\n  } catch (err) {\n    console.error('Error (deleteDashboard): ', err);\n    return err;\n  }\n};","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport i18n from '@dhis2/d2-i18n';\nimport { useD2 } from '@dhis2/app-runtime-adapter-d2';\nimport { Button, Modal, ModalTitle, ModalContent, ModalActions, ButtonStrip } from '@dhis2/ui';\nimport { PeriodDimension, DynamicDimension, OrgUnitDimension, DIMENSION_ID_PERIOD, DIMENSION_ID_ORGUNIT } from '@dhis2/analytics';\nimport { acAddItemFilter, acRemoveItemFilter } from '../../actions/itemFilters';\nimport { sGetItemFiltersRoot } from '../../reducers/itemFilters';\nimport { useSystemSettings } from '../SystemSettingsProvider';\n\nconst FilterDialog = ({\n  dimension,\n  initiallySelectedItems,\n  addItemFilter,\n  removeItemFilter,\n  onClose\n}) => {\n  const [filters, setFilters] = useState(initiallySelectedItems);\n  const {\n    d2\n  } = useD2({});\n  const {\n    settings\n  } = useSystemSettings();\n\n  const onSelectItems = ({\n    dimensionId,\n    items\n  }) => {\n    setFilters({\n      [dimensionId]: items\n    });\n  };\n\n  const onDeselectItems = ({\n    dimensionId,\n    itemIdsToRemove\n  }) => {\n    const oldList = filters[dimensionId] || [];\n    const newList = oldList.filter(item => !itemIdsToRemove.includes(item.id));\n    setFilters({ ...filters,\n      [dimensionId]: newList\n    });\n  };\n\n  const onReorderItems = ({\n    dimensionId,\n    itemIds\n  }) => {\n    const oldList = filters[dimensionId] || [];\n    const reorderedList = itemIds.map(id => oldList.find(item => item.id === id));\n    setFilters({ ...filters,\n      [dimensionId]: reorderedList\n    });\n  };\n\n  const saveFilter = () => {\n    const id = dimension.id;\n    const filterItems = filters[id];\n\n    if (filterItems && filterItems.length) {\n      addItemFilter({\n        id,\n        value: [...filterItems]\n      });\n    } else {\n      removeItemFilter(id);\n    }\n\n    onClose(id);\n  };\n\n  const renderDialogContent = () => {\n    const commonProps = {\n      d2,\n      onSelect: onSelectItems,\n      onDeselect: onDeselectItems,\n      onReorder: onReorderItems\n    };\n    const selectedItems = filters[dimension.id] || [];\n\n    switch (dimension.id) {\n      case DIMENSION_ID_PERIOD:\n        {\n          return <PeriodDimension selectedPeriods={selectedItems} onSelect={commonProps.onSelect} />;\n        }\n\n      case DIMENSION_ID_ORGUNIT:\n        return <OrgUnitDimension displayNameProperty={settings.displayNameProperty} ouItems={selectedItems} {...commonProps} />;\n\n      default:\n        return <DynamicDimension selectedItems={selectedItems} dimensionId={dimension.id} onSelect={commonProps.onSelect} />;\n    }\n  };\n\n  return <>\n            {dimension.id && <Modal dataTest={`${dimension.id}-dimension-modal`} onClose={onClose} position=\"top\" large>\n                    <ModalTitle>{dimension.name}</ModalTitle>\n                    <ModalContent>{renderDialogContent()}</ModalContent>\n                    <ModalActions>\n                        <ButtonStrip>\n                            <Button secondary onClick={onClose}>\n                                {i18n.t('Cancel')}\n                            </Button>\n                            <Button primary onClick={saveFilter}>\n                                {i18n.t('Confirm')}\n                            </Button>\n                        </ButtonStrip>\n                    </ModalActions>\n                </Modal>}\n        </>;\n};\n\nFilterDialog.propTypes = {\n  addItemFilter: PropTypes.func,\n  dimension: PropTypes.object,\n  initiallySelectedItems: PropTypes.object,\n  removeItemFilter: PropTypes.func,\n  onClose: PropTypes.func\n};\n\nconst mapStateToProps = state => ({\n  initiallySelectedItems: sGetItemFiltersRoot(state)\n});\n\nexport default connect(mapStateToProps, {\n  addItemFilter: acAddItemFilter,\n  removeItemFilter: acRemoveItemFilter\n})(FilterDialog);","export const SET_ACTIVE_MODAL_DIMENSION = 'SET_ACTIVE_MODAL_DIMENSION';\nexport const CLEAR_ACTIVE_MODAL_DIMENSION = 'CLEAR_ACTIVE_MODAL_DIMENSION';\nexport const DEFAULT_STATE_ACTIVE_MODAL_DIMENSION = {};\nexport default ((state = DEFAULT_STATE_ACTIVE_MODAL_DIMENSION, action) => {\n  switch (action.type) {\n    case SET_ACTIVE_MODAL_DIMENSION:\n      {\n        return action.value;\n      }\n\n    case CLEAR_ACTIVE_MODAL_DIMENSION:\n      {\n        return DEFAULT_STATE_ACTIVE_MODAL_DIMENSION;\n      }\n\n    default:\n      return state;\n  }\n});\nexport const sGetActiveModalDimension = state => state.activeModalDimension;","import { SET_ACTIVE_MODAL_DIMENSION, CLEAR_ACTIVE_MODAL_DIMENSION } from '../reducers/activeModalDimension';\nexport const acSetActiveModalDimension = value => ({\n  type: SET_ACTIVE_MODAL_DIMENSION,\n  value\n});\nexport const acClearActiveModalDimension = () => ({\n  type: CLEAR_ACTIVE_MODAL_DIMENSION\n});","import React, { useState, useRef } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport ArrowDropDownIcon from '@material-ui/icons/ArrowDropDown';\nimport isEmpty from 'lodash/isEmpty';\nimport i18n from '@dhis2/d2-i18n';\nimport { DimensionsPanel } from '@dhis2/analytics';\nimport { Button, Popover } from '@dhis2/ui';\nimport FilterDialog from './FilterDialog';\nimport { sGetActiveModalDimension } from '../../reducers/activeModalDimension';\nimport { sGetDimensions } from '../../reducers/dimensions';\nimport { sGetItemFiltersRoot } from '../../reducers/itemFilters';\nimport { acClearActiveModalDimension, acSetActiveModalDimension } from '../../actions/activeModalDimension';\nimport classes from './styles/FilterSelector.module.css';\n\nconst FilterSelector = props => {\n  const [showPopover, setShowPopover] = useState(false);\n  const ref = useRef(null);\n\n  const onCloseDialog = () => {\n    setShowPopover(false);\n    props.clearActiveModalDimension();\n  };\n\n  const selectDimension = id => {\n    props.setActiveModalDimension(props.dimensions.find(dimension => dimension.id === id));\n  };\n\n  return <>\n            <span className={classes.buttonContainer} ref={ref}>\n                <Button onClick={() => setShowPopover(true)}>\n                    {i18n.t('Add filter')}\n                    <ArrowDropDownIcon />\n                </Button>\n            </span>\n            {showPopover && <Popover onClickOutside={onCloseDialog} reference={ref} arrow={true} placement=\"bottom-start\" dataTest=\"dashboard-filter-popover\">\n                    <div className={classes.popover}>\n                        <DimensionsPanel style={{\n          width: '320px'\n        }} dimensions={props.dimensions} onDimensionClick={selectDimension} selectedIds={Object.keys(props.initiallySelectedItems)} />\n                    </div>\n                </Popover>}\n            {!isEmpty(props.dimension) ? <FilterDialog dimension={props.dimension} onClose={onCloseDialog} /> : null}\n        </>;\n};\n\nconst mapStateToProps = state => ({\n  dimension: sGetActiveModalDimension(state),\n  dimensions: sGetDimensions(state),\n  initiallySelectedItems: sGetItemFiltersRoot(state)\n});\n\nFilterSelector.propTypes = {\n  clearActiveModalDimension: PropTypes.func,\n  dimension: PropTypes.object,\n  dimensions: PropTypes.array,\n  initiallySelectedItems: PropTypes.object,\n  setActiveModalDimension: PropTypes.func\n};\nexport default connect(mapStateToProps, {\n  clearActiveModalDimension: acClearActiveModalDimension,\n  setActiveModalDimension: acSetActiveModalDimension\n})(FilterSelector);","import React, { useState, createRef } from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport cx from 'classnames';\nimport { Link, Redirect } from 'react-router-dom';\nimport i18n from '@dhis2/d2-i18n';\nimport SharingDialog from '@dhis2/d2-ui-sharing-dialog';\nimport { useDataEngine, useAlert } from '@dhis2/app-runtime';\nimport Star from '@material-ui/icons/Star';\nimport StarBorder from '@material-ui/icons/StarBorder';\nimport { Button, FlyoutMenu, Popover, MenuItem, colors } from '@dhis2/ui';\nimport { useD2 } from '@dhis2/app-runtime-adapter-d2';\nimport { ThreeDots } from '../Item/VisualizationItem/assets/icons';\nimport { orObject } from '../../modules/util';\nimport { apiStarDashboard } from '../../api/starDashboard';\nimport { apiPostShowDescription } from '../../api/description';\nimport { acSetDashboardStarred } from '../../actions/dashboards';\nimport { acSetSelectedShowDescription } from '../../actions/selected';\nimport FilterSelector from '../ItemFilter/FilterSelector';\nimport { sGetSelectedId, sGetSelectedShowDescription } from '../../reducers/selected';\nimport { sGetDashboardById, sGetDashboardItems, EMPTY_DASHBOARD } from '../../reducers/dashboards';\nimport classes from './styles/ViewTitleBar.module.css';\n\nconst ViewTitleBar = ({\n  id,\n  name,\n  description,\n  access,\n  showDescription,\n  starred,\n  setDashboardStarred,\n  updateShowDescription\n}) => {\n  const [moreOptionsIsOpen, setMoreOptionsIsOpen] = useState(false);\n  const [sharingDialogIsOpen, setSharingDialogIsOpen] = useState(false);\n  const [redirectUrl, setRedirectUrl] = useState(null);\n  const {\n    d2\n  } = useD2({});\n  const dataEngine = useDataEngine();\n  const warningAlert = useAlert(({\n    msg\n  }) => msg, {\n    warning: true\n  });\n\n  const toggleSharingDialog = () => setSharingDialogIsOpen(!sharingDialogIsOpen);\n\n  const toggleMoreOptions = () => setMoreOptionsIsOpen(!moreOptionsIsOpen);\n\n  const printLayout = () => setRedirectUrl(`${id}/printlayout`);\n\n  const printOipp = () => setRedirectUrl(`${id}/printoipp`);\n\n  const StarIcon = starred ? Star : StarBorder;\n\n  if (redirectUrl) {\n    return <Redirect to={redirectUrl} />;\n  }\n\n  const showHideDescriptionLabel = showDescription ? i18n.t('Hide description') : i18n.t('Show description');\n\n  const onToggleShowDescription = () => apiPostShowDescription(!showDescription).then(() => {\n    updateShowDescription(!showDescription);\n    toggleMoreOptions();\n  }).catch(() => {\n    const msg = showDescription ? i18n.t('Failed to hide description') : i18n.t('Failed to show description');\n    warningAlert.show({\n      msg\n    });\n  });\n\n  const toggleStarredDashboardLabel = starred ? i18n.t('Unstar dashboard') : i18n.t('Star dashboard');\n\n  const onToggleStarredDashboard = () => apiStarDashboard(dataEngine, id, !starred).then(() => {\n    setDashboardStarred(id, !starred);\n\n    if (moreOptionsIsOpen) {\n      toggleMoreOptions();\n    }\n  }).catch(() => {\n    const msg = starred ? i18n.t('Failed to unstar the dashboard') : i18n.t('Failed to star the dashboard');\n    warningAlert.show({\n      msg\n    });\n  });\n\n  const buttonRef = createRef();\n  const userAccess = orObject(access);\n  const descriptionClasses = cx(classes.descContainer, description ? classes.desc : classes.noDesc);\n\n  const getMoreButton = (className, useSmall) => <Button className={className} small={useSmall} onClick={toggleMoreOptions}>\n            <ThreeDots />\n            <span className={classes.moreText}>{i18n.t('More')}</span>\n        </Button>;\n\n  return <>\n            <div className={classes.container}>\n                <div className={classes.titleBar}>\n                    <span className={classes.title} data-test=\"view-dashboard-title\">\n                        {name}\n                    </span>\n                    <div className={classes.actions}>\n                        <div className={classes.star} onClick={onToggleStarredDashboard} data-test=\"button-star-dashboard\">\n                            <StarIcon style={{\n              fill: colors.grey600\n            }} data-test={starred ? 'dashboard-starred' : 'dashboard-unstarred'} />\n                        </div>\n                        <div className={classes.strip}>\n                            {userAccess.update ? <Link className={classes.editLink} to={`/${id}/edit`} data-test=\"link-edit-dashboard\">\n                                    <Button>{i18n.t('Edit')}</Button>\n                                </Link> : null}\n                            {userAccess.manage ? <Button className={classes.shareButton} onClick={toggleSharingDialog}>\n                                    {i18n.t('Share')}\n                                </Button> : null}\n                            <FilterSelector />\n                            <span ref={buttonRef}>\n                                {getMoreButton(classes.moreButton, false)}\n                                {getMoreButton(classes.moreButtonSmall, true)}\n                            </span>\n                        </div>\n                        {moreOptionsIsOpen && <Popover reference={buttonRef} placement=\"bottom-start\" onClickOutside={toggleMoreOptions}>\n                                <FlyoutMenu>\n                                    <MenuItem dense label={toggleStarredDashboardLabel} onClick={onToggleStarredDashboard} />\n                                    <MenuItem dense label={showHideDescriptionLabel} onClick={onToggleShowDescription} />\n                                    <MenuItem dense label={i18n.t('Print')} dataTest=\"print-menu-item\">\n                                        <MenuItem dense label={i18n.t('Dashboard layout')} onClick={printLayout} dataTest=\"print-layout-menu-item\" />\n                                        <MenuItem dense label={i18n.t('One item per page')} onClick={printOipp} dataTest=\"print-oipp-menu-item\" />\n                                    </MenuItem>\n                                </FlyoutMenu>\n                            </Popover>}\n                    </div>\n                </div>\n                {showDescription && <div className={descriptionClasses} data-test=\"dashboard-description\">\n                        {description || i18n.t('No description')}\n                    </div>}\n            </div>\n            {id && <SharingDialog d2={d2} id={id} type=\"dashboard\" open={sharingDialogIsOpen} onRequestClose={toggleSharingDialog} />}\n        </>;\n};\n\nViewTitleBar.propTypes = {\n  access: PropTypes.object,\n  description: PropTypes.string,\n  id: PropTypes.string,\n  name: PropTypes.string,\n  setDashboardStarred: PropTypes.func,\n  showDescription: PropTypes.bool,\n  starred: PropTypes.bool,\n  updateShowDescription: PropTypes.func\n};\nViewTitleBar.defaultProps = {\n  name: '',\n  description: '',\n  starred: false,\n  showDescription: false\n};\n\nconst mapStateToProps = state => {\n  const id = sGetSelectedId(state);\n  const dashboard = sGetDashboardById(state, id) || EMPTY_DASHBOARD;\n  return {\n    id,\n    name: dashboard.displayName,\n    description: dashboard.displayDescription,\n    dashboardItems: sGetDashboardItems(state),\n    showDescription: sGetSelectedShowDescription(state),\n    starred: dashboard.starred,\n    access: dashboard.access\n  };\n};\n\nexport default connect(mapStateToProps, {\n  setDashboardStarred: acSetDashboardStarred,\n  updateShowDescription: acSetSelectedShowDescription\n})(ViewTitleBar);","export const getStarDashboardMutation = id => ({\n  type: 'create',\n  resource: `dashboards/${id}/favorite`\n});\nexport const getUnstarDashboardMutation = id => ({\n  type: 'delete',\n  resource: `dashboards/${id}/favorite`\n});\nexport const apiStarDashboard = (dataEngine, id, isStarred) => {\n  const mutation = isStarred ? getStarDashboardMutation(id) : getUnstarDashboardMutation(id);\n  return dataEngine.mutate(mutation);\n};","import React, { useEffect, useRef } from 'react';\nimport PropTypes from 'prop-types';\nimport { useD2 } from '@dhis2/app-runtime-adapter-d2';\nimport { useConfig } from '@dhis2/app-runtime';\nimport { load, unmount } from './plugin';\nimport getGridItemDomId from '../../../../modules/getGridItemDomId';\n\nconst DefaultPlugin = ({\n  item,\n  activeType,\n  visualization,\n  options,\n  style\n}) => {\n  const {\n    d2\n  } = useD2({});\n  const {\n    baseUrl\n  } = useConfig();\n  const credentials = {\n    baseUrl,\n    auth: d2.Api.getApi().defaultHeaders.Authorization\n  };\n  const prevItem = useRef();\n  const prevActiveType = useRef();\n  useEffect(() => {\n    load(item, visualization, {\n      credentials,\n      activeType,\n      options\n    });\n    prevItem.current = item;\n    prevActiveType.current = activeType;\n    return () => unmount(item, activeType);\n  }, []);\n  useEffect(() => {\n    if (shouldPluginReload()) {\n      unmount(item, prevActiveType.current);\n      load(item, visualization, {\n        credentials,\n        activeType\n      });\n    }\n\n    prevItem.current = item;\n    prevActiveType.current = activeType;\n  }, [item, visualization, activeType]);\n  /**\n   * Prevent unnecessary re-rendering\n   * TODO: fix this hack\n   */\n\n  const shouldPluginReload = () => {\n    const reloadAllowed = prevItem.current === item;\n    const visChanged = prevActiveType.current !== activeType;\n    return reloadAllowed && visChanged;\n  };\n\n  return <div id={getGridItemDomId(item.id)} style={style} />;\n};\n\nDefaultPlugin.propTypes = {\n  activeType: PropTypes.string,\n  item: PropTypes.object,\n  options: PropTypes.object,\n  style: PropTypes.object,\n  visualization: PropTypes.object\n};\nDefaultPlugin.defaultProps = {\n  style: {},\n  item: {},\n  options: {},\n  visualization: {}\n};\nexport default DefaultPlugin;","import React from 'react';\nimport PropTypes from 'prop-types';\nimport classes from './styles/NoVisualizationMessage.module.css';\n\nconst NoVisualizationMessage = ({\n  message\n}) => {\n  return <div className={classes.message}>{message}</div>;\n};\n\nNoVisualizationMessage.propTypes = {\n  message: PropTypes.string\n};\nexport default NoVisualizationMessage;","import React from 'react';\nimport PropTypes from 'prop-types';\nimport i18n from '@dhis2/d2-i18n';\nimport DefaultPlugin from './DefaultPlugin';\nimport { MAP } from '../../../../modules/itemTypes';\nimport { pluginIsAvailable } from './plugin';\nimport NoVisualizationMessage from './NoVisualizationMessage';\n\nconst MapPlugin = ({\n  applyFilters,\n  ...props\n}) => {\n  if (props.item.type === MAP) {\n    // apply filters only to thematic and event layers\n    // for maps AO\n    const mapViews = props.visualization.mapViews.map(mapView => {\n      if (mapView.layer.includes('thematic') || mapView.layer.includes('event')) {\n        return applyFilters(mapView, props.itemFilters);\n      }\n\n      return mapView;\n    });\n    props.visualization = { ...props.visualization,\n      mapViews\n    };\n  } else {\n    // this is the case of a non map AO passed to the maps plugin\n    // due to a visualization type switch in dashboard item\n    // maps plugin takes care of converting the AO to a suitable format\n    props.visualization = applyFilters(props.visualization, props.itemFilters);\n  }\n\n  return pluginIsAvailable(props.activeType || props.item.type) ? <DefaultPlugin options={{\n    hideTitle: true\n  }} {...props} /> : <NoVisualizationMessage message={i18n.t('Unable to load the plugin for this item')} />;\n};\n\nMapPlugin.propTypes = {\n  activeType: PropTypes.string,\n  applyFilters: PropTypes.func,\n  item: PropTypes.object,\n  itemFilters: PropTypes.object,\n  visualization: PropTypes.object\n};\nexport default MapPlugin;","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { CircularLoader } from '@dhis2/ui';\nimport classes from './styles/LoadingMask.module.css';\n\nconst LoadingMask = ({\n  style\n}) => {\n  return <div className={classes.center} style={style}>\n            <CircularLoader />\n        </div>;\n};\n\nLoadingMask.propTypes = {\n  style: PropTypes.object\n};\nexport default LoadingMask;","const getFilteredVisualization = (visualization, filters) => {\n  if (!Object.keys(filters).length) {\n    return visualization;\n  } // deep clone objects in filters to avoid changing the visualization in the Redux store\n\n\n  const visRows = visualization.rows.map(obj => ({ ...obj\n  }));\n  const visColumns = visualization.columns.map(obj => ({ ...obj\n  }));\n  const visFilters = visualization.filters.map(obj => ({ ...obj\n  }));\n  Object.keys(filters).forEach(dimensionId => {\n    if (filters[dimensionId]) {\n      let dimensionFound = false;\n      [visRows, visColumns, visFilters].forEach(dimensionObjects => dimensionObjects.filter(obj => obj.dimension === dimensionId).forEach(obj => {\n        dimensionFound = true;\n        obj.items = filters[dimensionId];\n      })); // add dimension to filters if not already present elsewhere\n\n      if (!dimensionFound) {\n        visFilters.push({\n          dimension: dimensionId,\n          items: filters[dimensionId]\n        });\n      }\n    }\n  });\n  return { ...visualization,\n    rows: visRows,\n    columns: visColumns,\n    filters: visFilters\n  };\n};\n\nexport default getFilteredVisualization;","import { VIS_TYPE_COLUMN, VIS_TYPE_PIVOT_TABLE, getAdaptedUiLayoutByType } from '@dhis2/analytics';\nimport { REPORT_TABLE, CHART, MAP } from '../../../../modules/itemTypes';\nexport const THEMATIC_LAYER = 'thematic';\n\nconst extractMapView = map => map.mapViews && map.mapViews.find(mv => mv.layer.includes(THEMATIC_LAYER));\n\nconst getWithoutId = object => ({ ...object,\n  id: undefined\n});\n\nconst getVisualizationConfig = (visualization, originalType, activeType) => {\n  if (originalType === MAP && originalType !== activeType) {\n    const extractedMapView = extractMapView(visualization);\n\n    if (extractedMapView === undefined) {\n      return null;\n    }\n\n    return getWithoutId({ ...visualization,\n      ...extractedMapView,\n      mapViews: undefined,\n      type: activeType === CHART ? VIS_TYPE_COLUMN : VIS_TYPE_PIVOT_TABLE\n    });\n  } else if (originalType === REPORT_TABLE && activeType === CHART) {\n    const layout = getAdaptedUiLayoutByType(visualization, VIS_TYPE_COLUMN);\n    return getWithoutId({ ...visualization,\n      ...layout,\n      type: VIS_TYPE_COLUMN\n    });\n  } else if (originalType === CHART && activeType === REPORT_TABLE) {\n    const layout = getAdaptedUiLayoutByType(visualization, VIS_TYPE_PIVOT_TABLE);\n    return getWithoutId({ ...visualization,\n      ...layout,\n      type: VIS_TYPE_PIVOT_TABLE\n    });\n  }\n\n  return getWithoutId(visualization);\n};\n\nexport default getVisualizationConfig;","// Note that this ignores discrepancies in 'this', so shouldn't be used with bound functions\n// This is useful instead of lodash/memoize when we only need to memoize a single value\n// Inspiration: https://github.com/alexreardon/memoize-one\nconst memoizeOne = fn => {\n  let lastArgs = undefined;\n  let lastValue = undefined;\n  return (...args) => {\n    if (lastArgs && args.length === lastArgs.length && args.every((arg, i) => arg === lastArgs[i])) {\n      return lastValue;\n    }\n\n    lastArgs = args;\n    lastValue = fn(...args);\n    return lastValue;\n  };\n};\n\nexport default memoizeOne;","import React, { Suspense } from 'react';\nimport { useD2 } from '@dhis2/app-runtime-adapter-d2';\nconst VisualizationPlugin = React.lazy(() => import(\n/* webpackChunkName: \"data-visualizer-plugin\" */\n\n/* webpackPrefetch: true */\n'@dhis2/data-visualizer-plugin'));\nexport const DataVisualizerPlugin = props => {\n  const d2 = useD2({});\n  return <Suspense fallback={<div />}>\n            <VisualizationPlugin d2={d2} {...props} />\n        </Suspense>;\n};","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport i18n from '@dhis2/d2-i18n';\nimport DefaultPlugin from './DefaultPlugin';\nimport MapPlugin from './MapPlugin';\nimport LoadingMask from './LoadingMask';\nimport NoVisualizationMessage from './NoVisualizationMessage';\nimport getFilteredVisualization from './getFilteredVisualization';\nimport getVisualizationConfig from './getVisualizationConfig';\nimport { VISUALIZATION, MAP, CHART, REPORT_TABLE } from '../../../../modules/itemTypes';\nimport { getVisualizationId } from '../../../../modules/item';\nimport memoizeOne from '../../../../modules/memoizeOne';\nimport { sGetVisualization } from '../../../../reducers/visualizations';\nimport { pluginIsAvailable } from './plugin';\nimport { DataVisualizerPlugin } from './DataVisualizerPlugin';\n\nclass Visualization extends React.Component {\n  state = {\n    pluginLoaded: false\n  };\n\n  constructor(props) {\n    super(props);\n    this.memoizedGetFilteredVisualization = memoizeOne(getFilteredVisualization);\n    this.memoizedGetVisualizationConfig = memoizeOne(getVisualizationConfig);\n  }\n\n  onLoadingComplete = () => {\n    this.setState({\n      pluginLoaded: true\n    });\n  };\n\n  render() {\n    const {\n      visualization,\n      activeType,\n      item,\n      itemFilters,\n      availableHeight,\n      availableWidth\n    } = this.props;\n\n    if (!visualization) {\n      return <NoVisualizationMessage message={i18n.t('No data to display')} />;\n    }\n\n    const style = {\n      height: availableHeight\n    };\n\n    if (availableWidth) {\n      style.width = availableWidth;\n    }\n\n    const pluginProps = {\n      item,\n      itemFilters,\n      activeType,\n      style,\n      visualization: this.memoizedGetVisualizationConfig(visualization, item.type, activeType)\n    };\n\n    switch (activeType) {\n      case VISUALIZATION:\n      case CHART:\n      case REPORT_TABLE:\n        {\n          return <>\n                        {!this.state.pluginLoaded && <LoadingMask style={pluginProps.style} />}\n                        <DataVisualizerPlugin visualization={this.memoizedGetFilteredVisualization(pluginProps.visualization, pluginProps.itemFilters)} onLoadingComplete={this.onLoadingComplete} forDashboard={true} style={pluginProps.style} />\n                    </>;\n        }\n\n      case MAP:\n        {\n          return <MapPlugin applyFilters={this.memoizedGetFilteredVisualization} {...pluginProps} />;\n        }\n\n      default:\n        {\n          pluginProps.visualization = this.memoizedGetFilteredVisualization(pluginProps.visualization, pluginProps.itemFilters);\n          return pluginIsAvailable(pluginProps.activeType || pluginProps.item.type) ? <DefaultPlugin {...pluginProps} /> : <NoVisualizationMessage message={i18n.t('Unable to load the plugin for this item')} />;\n        }\n    }\n  }\n\n}\n\nVisualization.propTypes = {\n  activeType: PropTypes.string,\n  availableHeight: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n  availableWidth: PropTypes.number,\n  item: PropTypes.object,\n  itemFilters: PropTypes.object,\n  visualization: PropTypes.object\n};\n\nconst mapStateToProps = (state, ownProps) => {\n  return {\n    visualization: sGetVisualization(state, getVisualizationId(ownProps.item))\n  };\n};\n\nexport default connect(mapStateToProps)(Visualization);","import React from 'react';\nimport PropTypes from 'prop-types';\nimport i18n from '@dhis2/d2-i18n';\nimport { Warning } from './assets/icons';\nimport classes from './styles/FatalErrorBoundary.module.css';\n\nclass FatalErrorBoundary extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      errorFound: false\n    };\n  }\n\n  componentDidCatch(error, info) {\n    this.setState({\n      errorFound: true\n    });\n    console.log('error: ', error);\n    console.log('info: ', info);\n  }\n\n  render() {\n    if (this.state.errorFound) {\n      return <p className={classes.container}>\n                    <span className={classes.icon}>\n                        <Warning />\n                    </span>\n                    <span className={classes.message}>\n                        {i18n.t('There was a problem loading this dashboard item')}\n                    </span>\n                </p>;\n    }\n\n    return this.props.children;\n  }\n\n}\n\nFatalErrorBoundary.propTypes = {\n  children: PropTypes.node\n};\nexport default FatalErrorBoundary;","import React from 'react';\nimport PropTypes from 'prop-types';\nimport classes from './styles/ItemHeader.module.css';\n\nconst ViewItemActions = ({\n  actionButtons\n}) => {\n  return actionButtons ? <div className={classes.itemActionsWrap}>{actionButtons}</div> : null;\n};\n\nViewItemActions.propTypes = {\n  actionButtons: PropTypes.node\n};\nexport default ViewItemActions;","import React from 'react';\nimport PropTypes from 'prop-types';\nimport i18n from '@dhis2/d2-i18n';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport { colors } from '@dhis2/ui';\nimport classes from './styles/DeleteItemButton.module.css';\n\nconst DeleteItemButton = ({\n  onClick\n}) => <button type=\"button\" className={classes.deleteItemButton} onClick={onClick} title={i18n.t(`Delete item`)}>\n        <DeleteIcon style={{\n    fill: colors.red500\n  }} />\n    </button>;\n\nDeleteItemButton.propTypes = {\n  onClick: PropTypes.func\n};\nexport default DeleteItemButton;","/** @module reducers/editDashboard */\nimport update from 'immutability-helper';\nimport isEmpty from 'lodash/isEmpty';\nimport { orArray, orObject } from '../modules/util';\nexport const RECEIVED_EDIT_DASHBOARD = 'RECEIVED_EDIT_DASHBOARD';\nexport const RECEIVED_NOT_EDITING = 'RECEIVED_NOT_EDITING';\nexport const START_NEW_DASHBOARD = 'START_NEW_DASHBOARD';\nexport const RECEIVED_TITLE = 'RECEIVED_TITLE';\nexport const RECEIVED_DESCRIPTION = 'RECEIVED_DESCRIPTION';\nexport const ADD_DASHBOARD_ITEM = 'ADD_DASHBOARD_ITEM';\nexport const REMOVE_DASHBOARD_ITEM = 'REMOVE_DASHBOARD_ITEM';\nexport const UPDATE_DASHBOARD_ITEM = 'UPDATE_DASHBOARD_ITEM';\nexport const RECEIVED_DASHBOARD_LAYOUT = 'RECEIVED_DASHBOARD_LAYOUT';\nexport const SET_PRINT_PREVIEW_VIEW = 'SET_PRINT_PREVIEW_VIEW';\nexport const CLEAR_PRINT_PREVIEW_VIEW = 'CLEAR_PRINT_PREVIEW_VIEW';\nexport const DEFAULT_STATE_EDIT_DASHBOARD = {};\nexport const NEW_DASHBOARD_STATE = {\n  id: '',\n  name: '',\n  access: {},\n  description: '',\n  dashboardItems: [],\n  printPreviewView: false\n};\nexport default ((state = DEFAULT_STATE_EDIT_DASHBOARD, action) => {\n  switch (action.type) {\n    case RECEIVED_EDIT_DASHBOARD:\n      {\n        const newState = {};\n        Object.keys(NEW_DASHBOARD_STATE).map(k => newState[k] = action.value[k]);\n        newState.printPreviewView = false;\n        return newState;\n      }\n\n    case RECEIVED_NOT_EDITING:\n      return DEFAULT_STATE_EDIT_DASHBOARD;\n\n    case SET_PRINT_PREVIEW_VIEW:\n      return Object.assign({}, state, {\n        printPreviewView: true\n      });\n\n    case CLEAR_PRINT_PREVIEW_VIEW:\n      return Object.assign({}, state, {\n        printPreviewView: false\n      });\n\n    case START_NEW_DASHBOARD:\n      return NEW_DASHBOARD_STATE;\n\n    case RECEIVED_TITLE:\n      {\n        return Object.assign({}, state, {\n          name: action.value\n        });\n      }\n\n    case RECEIVED_DESCRIPTION:\n      {\n        return Object.assign({}, state, {\n          description: action.value\n        });\n      }\n\n    case ADD_DASHBOARD_ITEM:\n      if (!action.value.position) {\n        return update(state, {\n          dashboardItems: {\n            $unshift: [action.value]\n          }\n        });\n      }\n\n      return update(state, {\n        dashboardItems: {\n          $splice: [[parseInt(action.value.position), 0, action.value]]\n        }\n      });\n\n    case REMOVE_DASHBOARD_ITEM:\n      {\n        const idToRemove = action.value;\n        const dashboardItemIndex = state.dashboardItems.findIndex(item => item.id === idToRemove);\n\n        if (dashboardItemIndex > -1) {\n          return update(state, {\n            dashboardItems: {\n              $splice: [[dashboardItemIndex, 1]]\n            }\n          });\n        }\n\n        return state;\n      }\n\n    case RECEIVED_DASHBOARD_LAYOUT:\n      {\n        const stateItems = orArray(state.dashboardItems);\n        let layoutHasChanged = false;\n        const newStateItems = action.value.map(({\n          x,\n          y,\n          w,\n          h,\n          i\n        }) => {\n          const stateItem = stateItems.find(si => si.id === i);\n\n          if (!(stateItem.x === x && stateItem.y === y && stateItem.w === w && stateItem.h === h)) {\n            layoutHasChanged = true;\n            return Object.assign({}, stateItem, {\n              w,\n              h,\n              x,\n              y\n            });\n          }\n\n          return stateItem;\n        });\n        return layoutHasChanged ? { ...state,\n          dashboardItems: newStateItems\n        } : state;\n      }\n\n    case UPDATE_DASHBOARD_ITEM:\n      {\n        const dashboardItem = action.value;\n        const dashboardItemIndex = state.dashboardItems.findIndex(item => item.id === dashboardItem.id);\n\n        if (dashboardItemIndex > -1) {\n          const newState = update(state, {\n            dashboardItems: {\n              $splice: [[dashboardItemIndex, 1, Object.assign({}, dashboardItem)]]\n            }\n          });\n          return newState;\n        }\n\n        return state;\n      }\n\n    default:\n      return state;\n  }\n}); // root selector\n\nexport const sGetEditDashboardRoot = state => state.editDashboard; // selectors\n\nexport const sGetIsEditing = state => !isEmpty(state.editDashboard);\nexport const sGetIsPrintPreviewView = state => sGetEditDashboardRoot(state).printPreviewView;\nexport const sGetIsNewDashboard = state => {\n  return !isEmpty(state.editDashboard) && sGetEditDashboardRoot(state).id === '';\n};\nexport const sGetEditDashboardName = state => sGetEditDashboardRoot(state).name;\nexport const sGetEditDashboardDescription = state => sGetEditDashboardRoot(state).description;\nexport const sGetEditDashboardItems = state => orObject(sGetEditDashboardRoot(state)).dashboardItems;","import { apiFetchDashboard } from './dashboards';\nexport const createDashboardMutation = {\n  resource: 'dashboards',\n  type: 'create',\n  data: ({\n    data\n  }) => data\n};\nexport const updateDashboardMutation = {\n  resource: 'dashboards',\n  type: 'update',\n  id: ({\n    id\n  }) => id,\n  data: ({\n    data\n  }) => data\n};\n\nconst generatePayload = (dashboard = {}, data) => {\n  return { ...dashboard,\n    name: data.name,\n    description: data.description,\n    dashboardItems: data.dashboardItems.map(item => ({ ...item,\n      width: item.w,\n      height: item.h\n    }))\n  };\n};\n\nexport const updateDashboard = async (dataEngine, data) => {\n  const dashboard = await apiFetchDashboard(dataEngine, data.id);\n  const {\n    response\n  } = await dataEngine.mutate(updateDashboardMutation, {\n    variables: {\n      id: data.id,\n      data: generatePayload(dashboard, data)\n    }\n  });\n  return response.uid;\n};\nexport const postDashboard = async (dataEngine, data) => {\n  const {\n    response\n  } = await dataEngine.mutate(createDashboardMutation, {\n    variables: {\n      data: generatePayload({}, data)\n    }\n  });\n  return response.uid;\n};","import { generateUid } from 'd2/uid';\nimport i18n from '@dhis2/d2-i18n';\nimport { RECEIVED_EDIT_DASHBOARD, START_NEW_DASHBOARD, RECEIVED_NOT_EDITING, RECEIVED_TITLE, RECEIVED_DESCRIPTION, RECEIVED_DASHBOARD_LAYOUT, ADD_DASHBOARD_ITEM, UPDATE_DASHBOARD_ITEM, REMOVE_DASHBOARD_ITEM, SET_PRINT_PREVIEW_VIEW, CLEAR_PRINT_PREVIEW_VIEW, sGetEditDashboardRoot } from '../reducers/editDashboard';\nimport { tFetchDashboards } from './dashboards';\nimport { updateDashboard, postDashboard } from '../api/editDashboard';\nimport { NEW_ITEM_SHAPE, getGridItemProperties, getPageBreakItemShape, getPrintTitlePageItemShape } from '../modules/gridUtil';\nimport { itemTypeMap, PAGEBREAK, PRINT_TITLE_PAGE } from '../modules/itemTypes';\nimport { convertUiItemsToBackend } from '../modules/uiBackendItemConverter'; // actions\n\nexport const acSetEditDashboard = (dashboard, items) => {\n  const val = { ...dashboard,\n    dashboardItems: items\n  };\n  return {\n    type: RECEIVED_EDIT_DASHBOARD,\n    value: val\n  };\n};\nexport const acSetEditNewDashboard = () => ({\n  type: START_NEW_DASHBOARD\n});\nexport const acClearEditDashboard = () => ({\n  type: RECEIVED_NOT_EDITING\n});\nexport const acSetPrintPreviewView = () => ({\n  type: SET_PRINT_PREVIEW_VIEW\n});\nexport const acClearPrintPreviewView = () => ({\n  type: CLEAR_PRINT_PREVIEW_VIEW\n});\nexport const acSetDashboardTitle = value => ({\n  type: RECEIVED_TITLE,\n  value\n});\nexport const acSetDashboardDescription = value => ({\n  type: RECEIVED_DESCRIPTION,\n  value\n});\nexport const acUpdateDashboardLayout = value => ({\n  type: RECEIVED_DASHBOARD_LAYOUT,\n  value\n});\nexport const acAddDashboardItem = item => {\n  const type = item.type;\n  delete item.type;\n  const itemPropName = itemTypeMap[type].propName;\n  const id = generateUid();\n  const gridItemProperties = getGridItemProperties(id);\n  let shape;\n\n  if (type === PAGEBREAK) {\n    const yPos = item.yPos || 0;\n    shape = getPageBreakItemShape(yPos, item.isStatic);\n  } else if (type === PRINT_TITLE_PAGE) {\n    shape = getPrintTitlePageItemShape();\n  } else {\n    shape = NEW_ITEM_SHAPE;\n  }\n\n  return {\n    type: ADD_DASHBOARD_ITEM,\n    value: {\n      id,\n      type,\n      position: item.position || null,\n      [itemPropName]: item.content,\n      ...NEW_ITEM_SHAPE,\n      ...gridItemProperties,\n      ...shape\n    }\n  };\n};\nexport const acUpdateDashboardItem = item => ({\n  type: UPDATE_DASHBOARD_ITEM,\n  value: item\n});\nexport const acRemoveDashboardItem = value => ({\n  type: REMOVE_DASHBOARD_ITEM,\n  value\n}); // thunks\n\nexport const tSaveDashboard = () => async (dispatch, getState, dataEngine) => {\n  const dashboard = sGetEditDashboardRoot(getState());\n  const dashboardToSave = { ...dashboard,\n    dashboardItems: convertUiItemsToBackend(dashboard.dashboardItems),\n    name: dashboard.name || i18n.t('Untitled dashboard')\n  };\n  const dashboardId = dashboardToSave.id ? await updateDashboard(dataEngine, dashboardToSave) : await postDashboard(dataEngine, dashboardToSave); // update the dashboard list\n\n  await dispatch(tFetchDashboards());\n  return Promise.resolve(dashboardId);\n};","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport DeleteItemButton from './DeleteItemButton';\nimport { acRemoveDashboardItem } from '../../../actions/editDashboard';\nimport classes from './styles/ItemHeader.module.css';\n\nconst EditItemActions = ({\n  itemId,\n  acRemoveDashboardItem\n}) => {\n  const handleDeleteItem = () => acRemoveDashboardItem(itemId);\n\n  return <div className={classes.itemActionsWrap}>\n            <DeleteItemButton onClick={handleDeleteItem} />\n        </div>;\n};\n\nEditItemActions.propTypes = {\n  acRemoveDashboardItem: PropTypes.func,\n  itemId: PropTypes.string\n};\nconst mapDispatchToProps = {\n  acRemoveDashboardItem\n};\nexport default connect(null, mapDispatchToProps)(EditItemActions);","import React from 'react';\nimport { colors } from '@dhis2/ui';\n\nconst WarningIcon = () => <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24\" viewBox=\"0 0 24 24\" width=\"24\" fill={colors.grey600}>\n        <path d=\"M0 0h24v24H0z\" fill=\"none\" />\n        <path d=\"M12 2C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2zm1 15h-2v-6h2v6zm0-8h-2V7h2v2z\" />\n    </svg>;\n\nexport default WarningIcon;","import React from 'react';\nimport { Tooltip } from '@dhis2/ui';\nimport i18n from '@dhis2/d2-i18n';\nimport InfoIcon from '../../../icons/Info';\nimport classes from './styles/PrintItemInfo.module.css';\n\nconst PrintWarning = () => <div className={classes.warning}>\n        <Tooltip content={i18n.t('This item has been shortened to fit on one page')} placement=\"bottom\">\n            <InfoIcon />\n        </Tooltip>\n    </div>;\n\nexport default PrintWarning;","export const EDIT = 'edit';\nexport const NEW = 'new';\nexport const VIEW = 'view';\nexport const PRINT = 'print';\nexport const PRINT_LAYOUT = 'print-layout';\nexport const isEditMode = mode => [EDIT, NEW].includes(mode);\nexport const isPrintMode = mode => [PRINT, PRINT_LAYOUT].includes(mode);\nexport const isViewMode = mode => mode === VIEW;","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport ViewItemActions from './ViewItemActions';\nimport EditItemActions from './EditItemActions';\nimport PrintItemInfo from './PrintItemInfo';\nimport { VIEW, EDIT, PRINT_LAYOUT } from '../../Dashboard/dashboardModes';\nimport classes from './styles/ItemHeader.module.css';\n\nconst getItemActionsMap = isShortened => {\n  return {\n    [VIEW]: ViewItemActions,\n    [EDIT]: EditItemActions,\n    [PRINT_LAYOUT]: isShortened ? PrintItemInfo : null\n  };\n}; // This is the margin-top + margin-bottom defined in the css file\n\n\nexport const HEADER_MARGIN_HEIGHT = 12;\nconst ItemHeader = React.forwardRef(({\n  dashboardMode,\n  title,\n  isShortened,\n  ...rest\n}, ref) => {\n  const Actions = getItemActionsMap(isShortened)[dashboardMode];\n  return <div className={classes.itemHeaderWrap} ref={ref}>\n                <p className={classes.itemTitle}>{title}</p>\n                {Actions ? <Actions {...rest} /> : null}\n            </div>;\n});\nItemHeader.displayName = 'ItemHeader';\nItemHeader.propTypes = {\n  dashboardMode: PropTypes.string,\n  isShortened: PropTypes.bool,\n  title: PropTypes.string\n};\nexport default connect(null, null, null, {\n  forwardRef: true\n})(ItemHeader);","import React, { useState, createRef } from 'react';\nimport PropTypes from 'prop-types';\nimport { useConfig } from '@dhis2/app-runtime';\nimport { isSingleValue, isYearOverYear, VIS_TYPE_GAUGE, VIS_TYPE_PIE } from '@dhis2/analytics';\nimport { Button, Menu, Popover, MenuItem, Divider, colors } from '@dhis2/ui';\nimport i18n from '@dhis2/d2-i18n';\nimport TableIcon from '@material-ui/icons/ViewList';\nimport ChartIcon from '@material-ui/icons/InsertChart';\nimport MapIcon from '@material-ui/icons/Public';\nimport LaunchIcon from '@material-ui/icons/Launch';\nimport { ThreeDots, SpeechBubble, Fullscreen, ExitFullscreen } from './assets/icons';\nimport { getLink } from './Visualization/plugin';\nimport { CHART, MAP, REPORT_TABLE, EVENT_CHART, EVENT_REPORT, isTrackerDomainType, hasMapView, getAppName } from '../../../modules/itemTypes';\nimport { useSystemSettings } from '../../SystemSettingsProvider';\nconst iconFill = {\n  fill: colors.grey600\n};\n\nconst ItemHeaderButtons = props => {\n  const [menuIsOpen, setMenuIsOpen] = useState(props.isOpen);\n  const {\n    baseUrl\n  } = useConfig();\n  const {\n    item,\n    visualization,\n    onSelectActiveType,\n    activeType\n  } = props;\n  const {\n    openInRelevantApp,\n    showInterpretationsAndDetails,\n    switchViewType,\n    fullscreenAllowedInSettings\n  } = useSystemSettings().settings;\n  const isTrackerType = isTrackerDomainType(item.type);\n\n  const onViewTable = () => {\n    closeMenu();\n    onSelectActiveType(isTrackerType ? EVENT_REPORT : REPORT_TABLE);\n  };\n\n  const onViewChart = () => {\n    closeMenu();\n    onSelectActiveType(isTrackerType ? EVENT_CHART : CHART);\n  };\n\n  const onViewMap = () => {\n    closeMenu();\n    onSelectActiveType(MAP);\n  };\n\n  const itemHasMapView = () => hasMapView(item.type);\n\n  const handleInterpretationClick = () => {\n    props.onToggleFooter();\n\n    if (menuIsOpen) {\n      closeMenu();\n    }\n  };\n\n  const handleToggleFullscreenClick = () => {\n    props.onToggleFullscreen();\n    closeMenu();\n  };\n\n  const openMenu = () => setMenuIsOpen(true);\n\n  const closeMenu = () => setMenuIsOpen(false);\n\n  const type = visualization.type || item.type;\n  const canViewAs = switchViewType && !isSingleValue(type) && !isYearOverYear(type) && type !== VIS_TYPE_GAUGE && type !== VIS_TYPE_PIE;\n  const interpretationMenuLabel = props.activeFooter ? i18n.t(`Hide interpretations and details`) : i18n.t(`Show interpretations and details`);\n\n  const ViewAsMenuItems = () => <>\n            {activeType !== CHART && activeType !== EVENT_CHART && <MenuItem dense label={i18n.t('View as Chart')} onClick={onViewChart} icon={<ChartIcon style={iconFill} />} />}\n            {activeType !== REPORT_TABLE && activeType !== EVENT_REPORT && <MenuItem dense label={i18n.t('View as Table')} onClick={onViewTable} icon={<TableIcon style={iconFill} />} />}\n            {itemHasMapView() && activeType !== MAP && <MenuItem dense label={i18n.t('View as Map')} onClick={onViewMap} icon={<MapIcon style={iconFill} />} />}\n        </>;\n\n  const buttonRef = createRef();\n  const fullscreenAllowed = props.fullscreenSupported && fullscreenAllowedInSettings;\n\n  if (!openInRelevantApp && !showInterpretationsAndDetails && !switchViewType && !fullscreenAllowed) {\n    return null;\n  }\n\n  return props.isFullscreen ? <Button small secondary onClick={props.onToggleFullscreen}>\n            <ExitFullscreen />\n        </Button> : <>\n            <div ref={buttonRef}>\n                <Button small secondary onClick={openMenu} dataTest=\"dashboarditem-menu-button\">\n                    <ThreeDots />\n                </Button>\n            </div>\n            {menuIsOpen && <Popover reference={buttonRef} placement=\"auto-start\" arrow={false} onClickOutside={closeMenu}>\n                    <Menu>\n                        {canViewAs && <>\n                                <ViewAsMenuItems />\n                                {(showInterpretationsAndDetails || openInRelevantApp || fullscreenAllowed) && <Divider />}\n                            </>}\n                        {openInRelevantApp && <MenuItem dense icon={<LaunchIcon style={{\n          fill: '#6e7a8a'\n        }} />} label={i18n.t('Open in {{appName}} app', {\n          appName: getAppName(item.type)\n        })} href={getLink(item, baseUrl)} target=\"_blank\" />}\n                        {showInterpretationsAndDetails && <MenuItem dense icon={<SpeechBubble />} label={interpretationMenuLabel} onClick={handleInterpretationClick} />}\n                        {fullscreenAllowed && <MenuItem dense icon={<Fullscreen />} label={i18n.t('View fullscreen')} onClick={handleToggleFullscreenClick} />}\n                    </Menu>\n                </Popover>}\n        </>;\n};\n\nItemHeaderButtons.propTypes = {\n  activeFooter: PropTypes.bool,\n  activeType: PropTypes.string,\n  fullscreenSupported: PropTypes.bool,\n  isFullscreen: PropTypes.bool,\n  isOpen: PropTypes.bool,\n  item: PropTypes.object,\n  visualization: PropTypes.object,\n  onSelectActiveType: PropTypes.func,\n  onToggleFooter: PropTypes.func,\n  onToggleFullscreen: PropTypes.func\n};\nexport default ItemHeaderButtons;","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { getVisualizationId } from '../../../modules/item';\nimport InterpretationsComponent from '@dhis2/d2-ui-interpretations';\nimport { useD2 } from '@dhis2/app-runtime-adapter-d2';\nimport classes from './styles/ItemFooter.module.css';\n\nconst ItemFooter = props => {\n  const {\n    d2\n  } = useD2({});\n  return <div data-test=\"dashboarditem-footer\">\n            <hr className={classes.line} />\n            <div className={classes.scrollContainer}>\n                <InterpretationsComponent d2={d2} item={props.item} type={props.item.type.toLowerCase()} id={getVisualizationId(props.item)} appName=\"dashboard\" />\n            </div>\n        </div>;\n};\n\nItemFooter.propTypes = {\n  item: PropTypes.object.isRequired\n};\nexport default ItemFooter;","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport uniqueId from 'lodash/uniqueId';\nimport Visualization from './Visualization/Visualization';\nimport FatalErrorBoundary from './FatalErrorBoundary';\nimport ItemHeader, { HEADER_MARGIN_HEIGHT } from '../ItemHeader/ItemHeader';\nimport ItemHeaderButtons from './ItemHeaderButtons';\nimport ItemFooter from './ItemFooter';\nimport { WindowDimensionsCtx } from '../../WindowDimensionsProvider';\nimport { SystemSettingsCtx } from '../../SystemSettingsProvider';\nimport { apiPostDataStatistics } from '../../../api/dataStatistics';\nimport { apiFetchVisualization } from '../../../api/metadata';\nimport { sGetVisualization } from '../../../reducers/visualizations';\nimport { sGetSelectedItemActiveType } from '../../../reducers/selected';\nimport { sGetIsEditing } from '../../../reducers/editDashboard';\nimport { sGetItemFiltersRoot, DEFAULT_STATE_ITEM_FILTERS } from '../../../reducers/itemFilters';\nimport { acAddVisualization } from '../../../actions/visualizations';\nimport { acSetSelectedItemActiveType } from '../../../actions/selected';\nimport { pluginIsAvailable, resize as pluginResize } from './Visualization/plugin';\nimport { getDataStatisticsName } from '../../../modules/itemTypes';\nimport { getVisualizationId, getVisualizationName } from '../../../modules/item';\nimport memoizeOne from '../../../modules/memoizeOne';\nimport { isEditMode, isPrintMode, isViewMode } from '../../Dashboard/dashboardModes';\nimport { getItemHeightPx } from '../../../modules/gridUtil';\nimport getGridItemDomId from '../../../modules/getGridItemDomId'; // this is set in the .dashboard-item-content css\n\nconst ITEM_CONTENT_PADDING = 4;\nexport class Item extends Component {\n  state = {\n    showFooter: false,\n    configLoaded: false,\n    isFullscreen: false\n  };\n\n  constructor(props) {\n    super(props);\n    this.contentRef = React.createRef();\n    this.headerRef = React.createRef();\n    this.itemDomElSelector = `.reactgriditem-${this.props.item.id}`;\n    this.memoizedGetContentHeight = memoizeOne((calculatedHeight, measuredHeight, preferMeasured) => preferMeasured ? measuredHeight || calculatedHeight : calculatedHeight);\n  }\n\n  async componentDidMount() {\n    this.props.updateVisualization(await apiFetchVisualization(this.props.item));\n\n    try {\n      if (this.props.settings.keyGatherAnalyticalObjectStatisticsInDashboardViews && isViewMode(this.props.dashboardMode)) {\n        await apiPostDataStatistics(getDataStatisticsName(this.props.item.type), getVisualizationId(this.props.item));\n      }\n    } catch (e) {\n      console.log(e);\n    }\n\n    this.setState({\n      configLoaded: true\n    });\n    const el = document.querySelector(this.itemDomElSelector);\n\n    if (el?.requestFullscreen) {\n      el.onfullscreenchange = this.handleFullscreenChange;\n    } else if (el?.webkitRequestFullscreen) {\n      el.onwebkitfullscreenchange = this.handleFullscreenChange;\n    }\n  }\n\n  componentWillUnmount() {\n    const el = document.querySelector(this.itemDomElSelector);\n\n    if (el?.onfullscreenchange) {\n      el.removeEventListener('onfullscreenchange', this.handleFullscreenChange);\n    } else if (el?.onwebkitfullscreenchange) {\n      el.removeEventListener('onwebkitfullscreenchange', this.handleFullscreenChange);\n    }\n  }\n\n  componentDidUpdate(prevProps) {\n    if (prevProps.gridWidth !== this.props.gridWidth) {\n      const el = document.querySelector(`#${getGridItemDomId(this.props.item.id)}`);\n\n      if (typeof el?.setViewportSize === 'function') {\n        setTimeout(() => el.setViewportSize(el.clientWidth - 5, el.clientHeight - 5), 10);\n      } // call resize on Map item\n\n\n      pluginResize(this.props.item, this.state.isFullscreen);\n    }\n  }\n\n  isFullscreenSupported = () => {\n    const el = document.querySelector(this.itemDomElSelector);\n    return !!(el?.requestFullscreen || el?.webkitRequestFullscreen);\n  };\n  handleFullscreenChange = () => {\n    this.setState({\n      isFullscreen: !!document.fullscreenElement || !!document.webkitFullscreenElement\n    }, () => pluginResize(this.props.item, this.state.isFullscreen));\n  };\n  onToggleFullscreen = () => {\n    if (!this.state.isFullscreen) {\n      const el = document.querySelector(this.itemDomElSelector);\n\n      if (el?.requestFullscreen) {\n        el.requestFullscreen();\n      } else if (el?.webkitRequestFullscreen) {\n        el.webkitRequestFullscreen();\n      }\n    } else {\n      document.exitFullscreen ? document.exitFullscreen() : document.webkitExitFullscreen();\n    }\n  };\n  getUniqueKey = memoizeOne(() => uniqueId());\n  onToggleFooter = () => {\n    this.setState({\n      showFooter: !this.state.showFooter\n    }, this.props.onToggleItemExpanded(this.props.item.id));\n  };\n  setActiveType = type => {\n    type !== this.getActiveType() && this.props.setActiveType(this.props.item.id, type);\n  };\n  getActiveType = () => {\n    if (this.props.isEditing) {\n      return this.props.item.type;\n    }\n\n    return this.props.activeType || this.props.item.type;\n  };\n  getAvailableHeight = width => {\n    if (this.state.isFullscreen) {\n      return '95vh';\n    }\n\n    const calculatedHeight = getItemHeightPx(this.props.item, width) - this.headerRef.current.clientHeight - HEADER_MARGIN_HEIGHT - ITEM_CONTENT_PADDING;\n    return this.memoizedGetContentHeight(calculatedHeight, this.contentRef ? this.contentRef.offsetHeight : null, isEditMode(this.props.dashboardMode) || isPrintMode(this.props.dashboardMode));\n  };\n  getAvailableWidth = () => {\n    const rect = document.querySelector(this.itemDomElSelector)?.getBoundingClientRect();\n    return rect && rect.width - ITEM_CONTENT_PADDING * 2;\n  };\n\n  render() {\n    const {\n      item,\n      dashboardMode,\n      itemFilters\n    } = this.props;\n    const {\n      showFooter\n    } = this.state;\n    const activeType = this.getActiveType();\n    const actionButtons = pluginIsAvailable(activeType || item.type) ? <ItemHeaderButtons item={item} visualization={this.props.visualization} onSelectActiveType={this.setActiveType} onToggleFooter={this.onToggleFooter} onToggleFullscreen={this.onToggleFullscreen} activeType={activeType} activeFooter={showFooter} isFullscreen={this.state.isFullscreen} fullscreenSupported={this.isFullscreenSupported()} /> : null;\n    return <>\n                <ItemHeader title={getVisualizationName(item)} itemId={item.id} actionButtons={actionButtons} ref={this.headerRef} dashboardMode={dashboardMode} isShortened={item.shortened} />\n                <FatalErrorBoundary>\n                    <div key={this.getUniqueKey(itemFilters)} className=\"dashboard-item-content\" ref={ref => this.contentRef = ref}>\n                        {this.state.configLoaded && <WindowDimensionsCtx.Consumer>\n                                {dimensions => <Visualization item={item} activeType={activeType} itemFilters={itemFilters} availableHeight={this.getAvailableHeight(dimensions.width)} availableWidth={this.getAvailableWidth()} />}\n                            </WindowDimensionsCtx.Consumer>}\n                    </div>\n                </FatalErrorBoundary>\n                {isViewMode(dashboardMode) && showFooter ? <ItemFooter item={item} /> : null}\n            </>;\n  }\n\n}\nItem.propTypes = {\n  activeType: PropTypes.string,\n  dashboardMode: PropTypes.string,\n  gridWidth: PropTypes.number,\n  isEditing: PropTypes.bool,\n  item: PropTypes.object,\n  itemFilters: PropTypes.object,\n  setActiveType: PropTypes.func,\n  settings: PropTypes.object,\n  updateVisualization: PropTypes.func,\n  visualization: PropTypes.object,\n  onToggleItemExpanded: PropTypes.func\n};\nItem.defaultProps = {\n  item: {},\n  onToggleItemExpanded: Function.prototype,\n  visualization: {}\n};\n\nconst mapStateToProps = (state, ownProps) => {\n  const itemFilters = !isEditMode(ownProps.dashboardMode) ? sGetItemFiltersRoot(state) : DEFAULT_STATE_ITEM_FILTERS;\n  return {\n    activeType: sGetSelectedItemActiveType(state, ownProps.item?.id),\n    isEditing: sGetIsEditing(state),\n    itemFilters,\n    visualization: sGetVisualization(state, getVisualizationId(ownProps.item))\n  };\n};\n\nconst mapDispatchToProps = {\n  setActiveType: acSetSelectedItemActiveType,\n  updateVisualization: acAddVisualization\n};\n\nconst ItemWithSettings = props => <SystemSettingsCtx.Consumer>\n        {({\n    settings\n  }) => <Item settings={settings} {...props} />}\n    </SystemSettingsCtx.Consumer>;\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ItemWithSettings);","import React from 'react';\nimport { colors } from '@dhis2/ui';\nconst style = {\n  backgroundColor: colors.grey200,\n  border: 'none',\n  height: '1px',\n  margin: '0px 0px 5px 0px'\n};\n\nconst Line = () => <hr style={style} />;\n\nexport default Line;","import React, { useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport i18n from '@dhis2/d2-i18n';\nimport { colors } from '@dhis2/ui';\nimport { useConfig } from '@dhis2/app-runtime';\nimport { useD2 } from '@dhis2/app-runtime-adapter-d2';\nimport ItemHeader from '../ItemHeader/ItemHeader';\nimport Line from '../../../widgets/Line';\nimport { sGetMessagesRoot } from '../../../reducers/messages';\nimport { formatDate } from '../../../modules/util';\nimport { isViewMode } from '../../Dashboard/dashboardModes';\nimport './MessagesItem.css';\nconst PRIVATE = 'PRIVATE';\nconst messageTypes = {\n  [PRIVATE]: 'Private',\n  VALIDATION_RESULT: 'Validation',\n  TICKET: 'Ticket',\n  SYSTEM: 'System'\n};\nconst style = {\n  list: {\n    listStyleType: 'none',\n    paddingLeft: '0px'\n  },\n  seeAll: {\n    textAlign: 'center',\n    fontSize: '13px',\n    marginBottom: '5px'\n  },\n  sender: {\n    fontSize: '13px',\n    lineHeight: '15px',\n    margin: 0,\n    color: colors.grey800\n  },\n  snippet: {\n    color: colors.grey800,\n    fontSize: '13px',\n    lineHeight: '15px',\n    maxHeight: '30px',\n    overflow: 'hidden'\n  }\n};\n\nconst MessagesItem = ({\n  messages,\n  item,\n  dashboardMode\n}) => {\n  const [uiLocale, setUiLocale] = useState('');\n  const {\n    d2\n  } = useD2({});\n  const {\n    baseUrl\n  } = useConfig();\n  useEffect(() => {\n    const getUiLocale = async () => {\n      const uiLocale = await d2.currentUser.userSettings.get('keyUiLocale');\n      setUiLocale(uiLocale);\n    };\n\n    getUiLocale();\n  }, []);\n\n  const getMessageHref = msg => {\n    const msgIdentifier = msg ? `#/${msg.messageType}/${msg.id}` : '';\n    return `${baseUrl}/dhis-web-messaging/${msgIdentifier}`;\n  };\n\n  const getMessageSender = msg => {\n    const latestMsg = msg.messages.slice(-1)[0];\n    return latestMsg.sender ? latestMsg.sender.displayName : '';\n  };\n\n  const getMessageItems = () => {\n    const modeClass = isViewMode(dashboardMode) ? 'view' : null;\n    return messages.map(msg => {\n      const redirectToMsg = () => {\n        if (isViewMode(dashboardMode)) {\n          document.location.href = getMessageHref(msg);\n        }\n      };\n\n      const sender = msg.messageType === PRIVATE ? getMessageSender(msg) : messageTypes[msg.messageType];\n      const readClass = !msg.read ? 'unread' : null;\n      const latestMsg = msg.messages.slice(-1)[0];\n      const msgDate = latestMsg.lastUpdated;\n      return <li className={`message-item ${modeClass}`} key={msg.id} onClick={redirectToMsg}>\n                    <p className={`message-title ${readClass}`}>\n                        {msg.displayName} ({msg.messageCount})\n                    </p>\n                    <p style={style.sender}>\n                        {sender} - {formatDate(msgDate, uiLocale)}\n                    </p>\n                    <p style={style.snippet}>{latestMsg.text}</p>\n                </li>;\n    });\n  };\n\n  return <>\n            <ItemHeader title={i18n.t('Messages')} itemId={item.id} dashboardMode={dashboardMode} isShortened={item.shortened} />\n            <Line />\n            {messages.length > 0 && <div className=\"dashboard-item-content\">\n                    <ul style={style.list}>{getMessageItems()}</ul>\n                    <div style={style.seeAll}>\n                        <a href={getMessageHref()}>\n                            {i18n.t('See all messages')}\n                        </a>\n                    </div>\n                </div>}\n        </>;\n};\n\nMessagesItem.propTypes = {\n  dashboardMode: PropTypes.string,\n  item: PropTypes.object,\n  messages: PropTypes.array\n};\n\nconst mapStateToProps = state => {\n  return {\n    messages: Object.values(sGetMessagesRoot(state))\n  };\n};\n\nconst MessagesContainer = connect(mapStateToProps, null)(MessagesItem);\nexport default MessagesContainer;","import React from 'react';\nimport PropTypes from 'prop-types';\nimport i18n from '@dhis2/d2-i18n';\nimport ItemHeader from '../ItemHeader/ItemHeader';\nimport NotInterestedIcon from '@material-ui/icons/NotInterested';\n\nconst NotSupportedItem = props => <>\n        <ItemHeader title={i18n.t('Item type \"{{type}}\" not supported', {\n    type: props.item.type\n  })} itemId={props.item.id} dashboardMode={props.dashboardMode} isShortened={props.item.shortened} />\n        <div style={{\n    display: 'flex',\n    justifyContent: 'center',\n    alignItems: 'center',\n    height: '90%'\n  }}>\n            <NotInterestedIcon style={{\n      width: 100,\n      height: 100,\n      align: 'center'\n    }} color=\"disabled\" />\n        </div>\n    </>;\n\nNotSupportedItem.propTypes = {\n  dashboardMode: PropTypes.string,\n  item: PropTypes.object\n};\nexport default NotSupportedItem;","import React from 'react';\nimport { colors } from '@dhis2/ui';\nimport PropTypes from 'prop-types';\n\nconst DescriptionIcon = ({\n  className\n}) => <svg className={className} xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\" fill={colors.grey500}>\n        <path d=\"M0 0h24v24H0z\" fill=\"none\" />\n        <path d=\"M14 2H6c-1.1 0-1.99.9-1.99 2L4 20c0 1.1.89 2 1.99 2H18c1.1 0 2-.9 2-2V8l-6-6zm2 16H8v-2h8v2zm0-4H8v-2h8v2zm-3-5V3.5L18.5 9H13z\" />\n    </svg>;\n\nDescriptionIcon.propTypes = {\n  className: PropTypes.string\n};\nexport default DescriptionIcon;","import React from 'react';\nimport { colors } from '@dhis2/ui';\nimport PropTypes from 'prop-types';\n\nconst DeleteIcon = ({\n  className\n}) => <svg className={className} xmlns=\"http://www.w3.org/2000/svg\" width=\"18\" height=\"18\" viewBox=\"0 0 24 24\" fill={colors.red500}>\n        <path d=\"M6 19c0 1.1.9 2 2 2h8c1.1 0 2-.9 2-2V7H6v12zM19 4h-3.5l-1-1h-5l-1 1H5v2h14V4z\" />\n        <path d=\"M0 0h24v24H0z\" fill=\"none\" />\n    </svg>;\n\nDeleteIcon.propTypes = {\n  className: PropTypes.string\n};\nexport default DeleteIcon;","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { colors } from '@dhis2/ui';\nimport { useConfig } from '@dhis2/app-runtime';\nimport DescriptionIcon from '../../../icons/Description';\nimport DeleteIcon from '../../../icons/Delete';\nimport Line from '../../../widgets/Line';\nimport { itemTypeMap, getItemUrl } from '../../../modules/itemTypes';\nimport { orArray } from '../../../modules/util';\nimport { tRemoveListItemContent } from './actions';\nimport ItemHeader from '../ItemHeader/ItemHeader';\nimport { isEditMode } from '../../Dashboard/dashboardModes';\nimport classes from './Item.module.css';\n\nconst getItemTitle = item => itemTypeMap[item.type].pluralTitle;\n\nconst getContentItems = item => orArray(item[itemTypeMap[item.type].propName]).filter((item, index, array) => array.findIndex(el => el.id === item.id) === index);\n\nconst ListItem = ({\n  item,\n  dashboardMode,\n  tRemoveListItemContent\n}) => {\n  const {\n    baseUrl\n  } = useConfig();\n  const contentItems = getContentItems(item);\n\n  const getLink = contentItem => {\n    const deleteButton = <button className={classes.deletebutton} onClick={() => tRemoveListItemContent(item, contentItem)}>\n                <DeleteIcon className={classes.deleteicon} />\n            </button>;\n    return <>\n                <a className={classes.link} style={{\n        color: colors.grey900\n      }} href={getItemUrl(item.type, contentItem, baseUrl)}>\n                    {contentItem.name}\n                </a>\n                {isEditMode(dashboardMode) ? deleteButton : null}\n            </>;\n  };\n\n  return <>\n            <ItemHeader title={getItemTitle(item)} itemId={item.id} dashboardMode={dashboardMode} isShortened={item.shortened} />\n            <Line />\n            <div className=\"dashboard-item-content\">\n                <ul className={classes.list}>\n                    {contentItems.map(contentItem => <li className={classes.item} key={contentItem.id}>\n                            <DescriptionIcon className={classes.itemicon} />\n                            {getLink(contentItem)}\n                        </li>)}\n                </ul>\n            </div>\n        </>;\n};\n\nListItem.propTypes = {\n  dashboardMode: PropTypes.string,\n  item: PropTypes.object,\n  tRemoveListItemContent: PropTypes.func\n};\nexport default connect(null, {\n  tRemoveListItemContent\n})(ListItem);","import { acUpdateDashboardItem, acRemoveDashboardItem } from '../../../actions/editDashboard';\nimport { itemTypeMap } from '../../../modules/itemTypes';\nexport const tRemoveListItemContent = (dashboardItem, content) => dispatch => {\n  const listItemType = itemTypeMap[dashboardItem.type].propName;\n  const newContent = dashboardItem[listItemType].filter(item => item.id !== content.id);\n\n  if (newContent.length) {\n    dashboardItem[listItemType] = newContent;\n    dispatch(acUpdateDashboardItem(dashboardItem));\n  } else {\n    dispatch(acRemoveDashboardItem(dashboardItem));\n  }\n};","/** @module reducers/editDashboard */\nimport update from 'immutability-helper';\nimport isEmpty from 'lodash/isEmpty';\nimport { orArray } from '../modules/util';\nexport const SET_PRINT_DASHBOARD = 'SET_PRINT_DASHBOARD';\nexport const CLEAR_PRINT_DASHBOARD = 'CLEAR_PRINT_DASHBOARD';\nexport const ADD_PRINT_DASHBOARD_ITEM = 'ADD_PRINT_DASHBOARD_ITEM';\nexport const SET_PRINT_DASHBOARD_LAYOUT = 'SET_PRINT_DASHBOARD_LAYOUT';\nexport const REMOVE_PRINT_DASHBOARD_ITEM = 'REMOVE_PRINT_DASHBOARD_ITEM';\nexport const UPDATE_PRINT_DASHBOARD_ITEM = 'UPDATE_PRINT_DASHBOARD_ITEM';\nexport const DEFAULT_STATE_PRINT_DASHBOARD = {};\nconst DEFAULT_DASHBOARD_ITEMS = [];\nexport const NEW_PRINT_DASHBOARD_STATE = {\n  id: '',\n  name: '',\n  access: {},\n  description: '',\n  dashboardItems: DEFAULT_DASHBOARD_ITEMS\n};\nexport default ((state = DEFAULT_STATE_PRINT_DASHBOARD, action) => {\n  switch (action.type) {\n    case SET_PRINT_DASHBOARD:\n      {\n        const newState = {};\n        Object.keys(NEW_PRINT_DASHBOARD_STATE).map(k => newState[k] = action.value[k]);\n        return newState;\n      }\n\n    case CLEAR_PRINT_DASHBOARD:\n      return DEFAULT_STATE_PRINT_DASHBOARD;\n\n    case ADD_PRINT_DASHBOARD_ITEM:\n      if (!action.value.position) {\n        return update(state, {\n          dashboardItems: {\n            $unshift: [action.value]\n          }\n        });\n      }\n\n      return update(state, {\n        dashboardItems: {\n          $splice: [[parseInt(action.value.position), 0, action.value]]\n        }\n      });\n\n    case REMOVE_PRINT_DASHBOARD_ITEM:\n      {\n        const idToRemove = action.value;\n        const dashboardItemIndex = state.dashboardItems.findIndex(item => item.id === idToRemove);\n\n        if (dashboardItemIndex > -1) {\n          return update(state, {\n            dashboardItems: {\n              $splice: [[dashboardItemIndex, 1]]\n            }\n          });\n        }\n\n        return state;\n      }\n\n    case UPDATE_PRINT_DASHBOARD_ITEM:\n      {\n        const dashboardItem = action.value;\n        const dashboardItemIndex = state.dashboardItems.findIndex(item => item.id === dashboardItem.id);\n\n        if (dashboardItemIndex > -1) {\n          const newState = update(state, {\n            dashboardItems: {\n              $splice: [[dashboardItemIndex, 1, Object.assign({}, dashboardItem)]]\n            }\n          });\n          return newState;\n        }\n\n        return state;\n      }\n\n    case SET_PRINT_DASHBOARD_LAYOUT:\n      {\n        const stateItems = orArray(state.dashboardItems);\n        let layoutHasChanged = false;\n        const newStateItems = action.value.map(({\n          x,\n          y,\n          w,\n          h,\n          i\n        }) => {\n          const stateItem = stateItems.find(si => si.id === i);\n\n          if (!(stateItem.x === x && stateItem.y === y && stateItem.w === w && stateItem.h === h)) {\n            layoutHasChanged = true;\n            return Object.assign({}, stateItem, {\n              w,\n              h,\n              x,\n              y\n            });\n          }\n\n          return stateItem;\n        });\n        return layoutHasChanged ? { ...state,\n          dashboardItems: newStateItems\n        } : state;\n      }\n\n    default:\n      return state;\n  }\n}); // root selector\n\nexport const sGetPrintDashboardRoot = state => state.printDashboard; // selectors\n\nexport const sGetIsPrinting = state => !isEmpty(state.printDashboard);\nexport const sGetPrintDashboardName = state => sGetPrintDashboardRoot(state).name;\nexport const sGetPrintDashboardDescription = state => sGetPrintDashboardRoot(state).description;\nexport const sGetPrintDashboardItems = state => {\n  return sGetPrintDashboardRoot(state)?.dashboardItems || DEFAULT_DASHBOARD_ITEMS;\n};","import React from 'react';\nimport { connect } from 'react-redux';\nimport i18n from '@dhis2/d2-i18n';\nimport PropTypes from 'prop-types';\nimport Input from '@material-ui/core/Input';\nimport ItemHeader from '../ItemHeader/ItemHeader';\nimport PrintItemInfo from '../ItemHeader/PrintItemInfo';\nimport Line from '../../../widgets/Line';\nimport { Parser as RichTextParser, Editor as RichTextEditor } from '@dhis2/d2-ui-rich-text';\nimport { acUpdateDashboardItem } from '../../../actions/editDashboard';\nimport { sGetEditDashboardItems } from '../../../reducers/editDashboard';\nimport { sGetDashboardItems } from '../../../reducers/dashboards';\nimport { sGetIsPrinting, sGetPrintDashboardItems } from '../../../reducers/printDashboard';\nimport { isEditMode, PRINT_LAYOUT } from '../../Dashboard/dashboardModes';\nconst style = {\n  textDiv: {\n    padding: '10px',\n    whiteSpace: 'pre-line',\n    lineHeight: '20px'\n  },\n  textField: {\n    fontSize: '14px',\n    fontStretch: 'normal',\n    width: '90%',\n    margin: '0 auto',\n    display: 'block',\n    lineHeight: '24px'\n  },\n  container: {\n    marginBottom: '20px',\n    marginTop: '20px'\n  }\n};\n\nconst TextItem = props => {\n  const {\n    item,\n    dashboardMode,\n    text,\n    acUpdateDashboardItem\n  } = props;\n\n  const onChangeText = event => {\n    const updatedItem = { ...item,\n      text: event.target.value\n    };\n    acUpdateDashboardItem(updatedItem);\n  };\n\n  const viewItem = () => {\n    const textDivStyle = Object.assign({}, style.textField, style.textDiv);\n    return <div className=\"dashboard-item-content\" style={style.container}>\n                <RichTextParser style={textDivStyle}>{text}</RichTextParser>\n            </div>;\n  };\n\n  const editItem = () => {\n    return <>\n                <ItemHeader title={i18n.t('Text item')} itemId={item.id} dashboardMode={dashboardMode} />\n                <Line />\n                <div className=\"dashboard-item-content\">\n                    <RichTextEditor onEdit={onChangeText}>\n                        <Input value={text} multiline fullWidth style={style.textField} placeholder={i18n.t('Add text here')} onChange={onChangeText} />\n                    </RichTextEditor>\n                </div>\n            </>;\n  };\n\n  const printItem = () => {\n    const textDivStyle = Object.assign({}, style.textField, style.textDiv);\n    return <>\n                {props.item.shortened ? <PrintItemInfo /> : null}\n                <div className=\"dashboard-item-content\" style={style.container}>\n                    <RichTextParser style={textDivStyle}>{text}</RichTextParser>\n                </div>\n            </>;\n  };\n\n  let textItem;\n\n  if (isEditMode(dashboardMode)) {\n    textItem = editItem;\n  } else if (dashboardMode === PRINT_LAYOUT) {\n    textItem = printItem;\n  } else {\n    textItem = viewItem;\n  }\n\n  return <>{textItem()}</>;\n};\n\nconst mapStateToProps = (state, ownProps) => {\n  const isPrintPreview = sGetIsPrinting(state);\n  let items;\n\n  if (isPrintPreview) {\n    items = sGetPrintDashboardItems(state);\n  } else if (isEditMode(ownProps.dashboardMode)) {\n    items = sGetEditDashboardItems(state);\n  } else {\n    items = sGetDashboardItems(state);\n  }\n\n  const item = items.find(item => item.id === ownProps.item.id);\n  return {\n    text: item ? item.text : ''\n  };\n};\n\nTextItem.propTypes = {\n  acUpdateDashboardItem: PropTypes.func,\n  dashboardMode: PropTypes.string,\n  item: PropTypes.object,\n  text: PropTypes.string\n};\nexport default connect(mapStateToProps, {\n  acUpdateDashboardItem\n})(TextItem);","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport NotInterestedIcon from '@material-ui/icons/NotInterested';\nimport { useD2 } from '@dhis2/app-runtime-adapter-d2';\nimport ItemHeader from '../ItemHeader/ItemHeader';\nimport Line from '../../../widgets/Line';\nimport { FILTER_ORG_UNIT } from '../../../actions/itemFilters';\nimport { sGetItemFiltersRoot, DEFAULT_STATE_ITEM_FILTERS } from '../../../reducers/itemFilters';\nimport { EDIT, isEditMode } from '../../Dashboard/dashboardModes';\n\nconst getIframeSrc = (appDetails, item, itemFilters) => {\n  let iframeSrc = `${appDetails.launchUrl}?dashboardItemId=${item.id}`;\n\n  if (itemFilters[FILTER_ORG_UNIT] && itemFilters[FILTER_ORG_UNIT].length) {\n    const ouIds = itemFilters[FILTER_ORG_UNIT].map(ouFilter => ouFilter.path.split('/').slice(-1)[0]);\n    iframeSrc += `&userOrgUnit=${ouIds.join(',')}`;\n  }\n\n  return iframeSrc;\n};\n\nconst AppItem = ({\n  dashboardMode,\n  item,\n  itemFilters\n}) => {\n  const {\n    d2\n  } = useD2({});\n  let appDetails;\n  const appKey = item.appKey;\n\n  if (appKey) {\n    appDetails = d2.system.installedApps.find(app => app.key === appKey);\n  }\n\n  const hideTitle = appDetails?.settings?.dashboardWidget?.hideTitle && dashboardMode !== EDIT;\n  return appDetails && appDetails.name && appDetails.launchUrl ? <>\n            {!hideTitle && <>\n                    <ItemHeader title={appDetails.name} itemId={item.id} dashboardMode={dashboardMode} isShortened={item.shortened} />\n                    <Line />\n                </>}\n            <iframe title={appDetails.name} src={getIframeSrc(appDetails, item, itemFilters)} className={!hideTitle ? 'dashboard-item-content' : 'dashboard-item-content-hidden-title'} style={{\n      border: 'none'\n    }} />\n        </> : <>\n            <ItemHeader title={`${appKey} app not found`} />\n            <Line />\n            <div className=\"dashboard-item-content\" style={{\n      display: 'flex',\n      justifyContent: 'center',\n      alignItems: 'center',\n      height: '90%'\n    }}>\n                <NotInterestedIcon color=\"disabled\" disabled style={{\n        width: 100,\n        height: 100,\n        align: 'center'\n      }} />\n            </div>\n        </>;\n};\n\nAppItem.propTypes = {\n  dashboardMode: PropTypes.string,\n  item: PropTypes.object,\n  itemFilters: PropTypes.object\n};\n\nconst mapStateToProps = (state, ownProps) => {\n  const itemFilters = !isEditMode(ownProps.dashboardMode) ? sGetItemFiltersRoot(state) : DEFAULT_STATE_ITEM_FILTERS;\n  return {\n    itemFilters\n  };\n};\n\nexport default connect(mapStateToProps)(AppItem);","import React from 'react';\nimport PropTypes from 'prop-types';\nimport i18n from '@dhis2/d2-i18n';\nimport { colors } from '@dhis2/ui';\nimport ItemHeader from '../ItemHeader/ItemHeader';\nconst style = {\n  margin: '21px 28px',\n  fontSize: '14px',\n  lineHeight: '18px',\n  color: colors.grey600\n};\n\nconst SpacerItem = props => {\n  return <>\n            <ItemHeader title={i18n.t('Spacer')} itemId={props.item.id} dashboardMode={props.dashboardMode} isShortened={props.item.shortened} />\n            <p style={style}>\n                {i18n.t('Use a spacer to create empty vertical space between other dashboard items.')}\n            </p>\n        </>;\n};\n\nSpacerItem.propTypes = {\n  dashboardMode: PropTypes.string,\n  item: PropTypes.object\n};\nexport default SpacerItem;","import React from 'react';\n\nconst PageBreakItem = () => <div />;\n\nexport default PageBreakItem;","import React from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport i18n from '@dhis2/d2-i18n';\nimport { sGetSelectedId, sGetSelectedShowDescription } from '../../../reducers/selected';\nimport { sGetDashboardById, EMPTY_DASHBOARD } from '../../../reducers/dashboards';\nimport { sGetNamedItemFilters } from '../../../reducers/itemFilters';\nimport { sGetIsEditing } from '../../../reducers/editDashboard';\nimport { sGetPrintDashboardName, sGetPrintDashboardDescription } from '../../../reducers/printDashboard';\nimport classes from './styles/Item.module.css';\n\nconst PrintTitlePageItem = ({\n  name,\n  description,\n  itemFilters,\n  showDescription\n}) => {\n  const getItemFilterList = () => {\n    const listItems = itemFilters.map(({\n      name,\n      values\n    }) => <li className={classes.filterListItem} key={name}>\n                {name}: {values.map(val => val.name).join(', ')}\n            </li>);\n    return <ul className={classes.filterList}>{listItems}</ul>;\n  };\n\n  return <div className={classes.titlePage}>\n            <p className={classes.name}>{name}</p>\n            {showDescription && description && <p className={classes.description}>{description}</p>}\n            {itemFilters.length > 0 && <>\n                    <p className={classes.filterTitle}>\n                        {i18n.t('Filters applied')}\n                    </p>\n                    {getItemFilterList()}\n                </>}\n        </div>;\n};\n\nPrintTitlePageItem.propTypes = {\n  description: PropTypes.string,\n  itemFilters: PropTypes.array,\n  name: PropTypes.string,\n  showDescription: PropTypes.bool\n};\nPrintTitlePageItem.defaultProps = {\n  description: '',\n  name: '',\n  showDescription: false\n};\n\nconst mapStateToProps = state => {\n  const id = sGetSelectedId(state);\n  const isEditMode = sGetIsEditing(state);\n  const viewDashboard = sGetDashboardById(state, id) || EMPTY_DASHBOARD;\n  const name = isEditMode ? sGetPrintDashboardName(state) || i18n.t('Untitled dashboard') : viewDashboard.displayName;\n  const description = isEditMode ? sGetPrintDashboardDescription(state) : viewDashboard.displayDescription;\n  return {\n    name,\n    description,\n    itemFilters: sGetNamedItemFilters(state),\n    showDescription: sGetSelectedShowDescription(state)\n  };\n};\n\nexport default connect(mapStateToProps)(PrintTitlePageItem);","import React from 'react';\nimport PropTypes from 'prop-types';\nimport VisualizationItem from './VisualizationItem/Item';\nimport MessagesItem from './MessagesItem/Item';\nimport NotSupportedItem from './NotSupportedItem/Item';\nimport ListItem from './ListItem/Item';\nimport TextItem from './TextItem/Item';\nimport AppItem from './AppItem/Item';\nimport SpacerItem from './SpacerItem/Item';\nimport PageBreakItem from './PageBreakItem/Item';\nimport PrintTitlePageItem from './PrintTitlePageItem/Item';\nimport { APP, VISUALIZATION, REPORT_TABLE, CHART, MAP, EVENT_CHART, EVENT_REPORT, MESSAGES, REPORTS, RESOURCES, USERS, TEXT, SPACER, PAGEBREAK, PRINT_TITLE_PAGE } from '../../modules/itemTypes';\n\nconst getGridItem = type => {\n  switch (type) {\n    case VISUALIZATION:\n    case REPORT_TABLE:\n    case CHART:\n    case MAP:\n    case EVENT_CHART:\n    case EVENT_REPORT:\n      return VisualizationItem;\n\n    case MESSAGES:\n      return MessagesItem;\n\n    case REPORTS:\n    case RESOURCES:\n    case USERS:\n      return ListItem;\n\n    case TEXT:\n      return TextItem;\n\n    case SPACER:\n      return SpacerItem;\n\n    case APP:\n      return AppItem;\n\n    case PAGEBREAK:\n      return PageBreakItem;\n\n    case PRINT_TITLE_PAGE:\n      return PrintTitlePageItem;\n\n    default:\n      return NotSupportedItem;\n  }\n};\n\nexport const Item = props => {\n  const GridItem = getGridItem(props.item.type);\n  return <GridItem item={props.item} gridWidth={props.gridWidth} dashboardMode={props.dashboardMode} onToggleItemExpanded={props.onToggleItemExpanded} />;\n};\nItem.propTypes = {\n  dashboardMode: PropTypes.string,\n  gridWidth: PropTypes.number,\n  item: PropTypes.object,\n  onToggleItemExpanded: PropTypes.func\n};","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport debounce from 'lodash/debounce';\nimport pick from 'lodash/pick';\nconst defaultDebounceMs = 100;\nconst defaultBufferFactor = 0.25;\n\nclass ProgressiveLoadingContainer extends Component {\n  static propTypes = {\n    children: PropTypes.node.isRequired,\n    bufferFactor: PropTypes.number,\n    className: PropTypes.string,\n    debounceMs: PropTypes.number,\n    style: PropTypes.object\n  };\n  static defaultProps = {\n    debounceMs: defaultDebounceMs,\n    bufferFactor: defaultBufferFactor\n  };\n  state = {\n    shouldLoad: false\n  };\n  containerRef = null;\n  shouldLoadHandler = null;\n  handlerOptions = {\n    passive: true\n  };\n\n  checkShouldLoad() {\n    if (!this.containerRef) {\n      return;\n    }\n\n    const bufferPx = this.props.bufferFactor * window.innerHeight;\n    const rect = this.containerRef.getBoundingClientRect();\n\n    if (rect.bottom > -bufferPx && rect.top < window.innerHeight + bufferPx) {\n      this.setState({\n        shouldLoad: true\n      });\n      this.removeHandler();\n    }\n  }\n\n  registerHandler() {\n    this.shouldLoadHandler = debounce(() => this.checkShouldLoad(), this.props.debounceMs);\n    Array.from(document.getElementsByClassName('dashboard-scroll-container')).forEach(container => {\n      container.addEventListener('scroll', this.shouldLoadHandler, this.handlerOptions);\n    });\n  }\n\n  removeHandler() {\n    Array.from(document.getElementsByClassName('dashboard-scroll-container')).forEach(container => {\n      container.removeEventListener('scroll', this.shouldLoadHandler, this.handlerOptions);\n    });\n  }\n\n  componentDidMount() {\n    this.registerHandler();\n    this.checkShouldLoad();\n  }\n\n  componentWillUnmount() {\n    this.removeHandler();\n  }\n\n  render() {\n    const {\n      children,\n      className,\n      style,\n      ...props\n    } = this.props;\n    const {\n      shouldLoad\n    } = this.state;\n    const eventProps = pick(props, ['onMouseDown', 'onTouchStart', 'onMouseUp', 'onTouchEnd']);\n    return <div ref={ref => this.containerRef = ref} style={style} className={className} data-test={`dashboarditem-${props.itemId}`} {...eventProps}>\n                {shouldLoad && children}\n            </div>;\n  }\n\n}\n\nexport default ProgressiveLoadingContainer;","import React, { useState, useEffect } from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport i18n from '@dhis2/d2-i18n';\nimport cx from 'classnames';\nimport { Responsive as ResponsiveReactGridLayout } from 'react-grid-layout';\nimport { Layer, CenteredContent, CircularLoader } from '@dhis2/ui';\nimport { useWindowDimensions } from '../WindowDimensionsProvider';\nimport { Item } from '../Item/Item';\nimport { GRID_ROW_HEIGHT_PX, SM_SCREEN_GRID_COLUMNS, GRID_COMPACT_TYPE, GRID_PADDING_PX, MARGIN_PX, MARGIN_SM_PX, hasShape, GRID_COLUMNS, getSmallLayout, getGridWidth, getProportionalHeight } from '../../modules/gridUtil';\nimport { orArray } from '../../modules/util';\nimport NoContentMessage from '../../widgets/NoContentMessage';\nimport { sGetSelectedId, sGetSelectedIsLoading } from '../../reducers/selected';\nimport { sGetDashboardById, sGetDashboardItems } from '../../reducers/dashboards';\nimport ProgressiveLoadingContainer from '../Item/ProgressiveLoadingContainer';\nimport { VIEW } from '../Dashboard/dashboardModes';\nimport { getBreakpoint, isSmallScreen } from '../../modules/smallScreen';\nimport 'react-grid-layout/css/styles.css';\nimport 'react-resizable/css/styles.css';\nimport './styles/ItemGrid.css';\nconst EXPANDED_HEIGHT = 17;\nconst EXPANDED_HEIGHT_SM = 13;\n\nconst ResponsiveItemGrid = ({\n  isLoading,\n  dashboardItems\n}) => {\n  const {\n    width\n  } = useWindowDimensions();\n  const [expandedItems, setExpandedItems] = useState({});\n  const [displayItems, setDisplayItems] = useState(dashboardItems);\n  const [layoutSm, setLayoutSm] = useState([]);\n  const [gridWidth, setGridWidth] = useState(0);\n  useEffect(() => {\n    if (isSmallScreen(width)) {\n      setLayoutSm(getItemsWithAdjustedHeight(getSmallLayout(dashboardItems, width)));\n    }\n\n    setDisplayItems(getItemsWithAdjustedHeight(dashboardItems));\n  }, [expandedItems, width, dashboardItems]);\n\n  const onToggleItemExpanded = clickedId => {\n    const isExpanded = typeof expandedItems[clickedId] === 'boolean' ? expandedItems[clickedId] : false;\n    const newExpandedItems = { ...expandedItems\n    };\n    newExpandedItems[clickedId] = !isExpanded;\n    setExpandedItems(newExpandedItems);\n  };\n\n  const getItemsWithAdjustedHeight = items => items.map(item => {\n    const expandedItem = expandedItems[item.id];\n\n    if (expandedItem && expandedItem === true) {\n      const expandedHeight = isSmallScreen(width) ? EXPANDED_HEIGHT_SM : EXPANDED_HEIGHT;\n      return Object.assign({}, item, {\n        h: item.h + expandedHeight,\n        smallOriginalH: getProportionalHeight(item, width)\n      });\n    }\n\n    return item;\n  });\n\n  const getItemComponent = item => <ProgressiveLoadingContainer key={item.i} className={cx(item.type, 'view', `reactgriditem-${item.id}`)} itemId={item.id}>\n            <Item item={item} gridWidth={gridWidth} dashboardMode={VIEW} onToggleItemExpanded={onToggleItemExpanded} />\n        </ProgressiveLoadingContainer>;\n\n  const getItemComponents = items => items.map(item => getItemComponent(item));\n\n  const onWidthChanged = containerWidth => {\n    setTimeout(() => {\n      setGridWidth(containerWidth);\n    }, 200);\n  };\n\n  if (!isLoading && !dashboardItems.length) {\n    return <NoContentMessage text={i18n.t('There are no items on this dashboard')} />;\n  }\n\n  return <>\n            {isLoading ? <Layer translucent>\n                    <CenteredContent>\n                        <CircularLoader />\n                    </CenteredContent>\n                </Layer> : null}\n            <ResponsiveReactGridLayout rowHeight={GRID_ROW_HEIGHT_PX} width={getGridWidth(width)} cols={{\n      lg: GRID_COLUMNS,\n      sm: SM_SCREEN_GRID_COLUMNS\n    }} breakpoints={{\n      lg: getBreakpoint(),\n      sm: 0\n    }} layouts={{\n      lg: displayItems,\n      sm: layoutSm\n    }} compactType={GRID_COMPACT_TYPE} margin={isSmallScreen(width) ? MARGIN_SM_PX : MARGIN_PX} containerPadding={{\n      lg: GRID_PADDING_PX,\n      sm: GRID_PADDING_PX\n    }} isDraggable={false} isResizable={false} draggableCancel=\"input,textarea\" onWidthChange={onWidthChanged}>\n                {getItemComponents(displayItems)}\n            </ResponsiveReactGridLayout>\n        </>;\n};\n\nResponsiveItemGrid.propTypes = {\n  dashboardItems: PropTypes.array,\n  isLoading: PropTypes.bool\n};\n\nconst mapStateToProps = state => {\n  const selectedDashboard = sGetDashboardById(state, sGetSelectedId(state));\n  const dashboardItems = orArray(sGetDashboardItems(state)).filter(hasShape);\n  return {\n    isLoading: sGetSelectedIsLoading(state) || !selectedDashboard,\n    dashboardItems\n  };\n};\n\nexport default connect(mapStateToProps)(ResponsiveItemGrid);","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport i18n from '@dhis2/d2-i18n';\nimport { colors } from '@dhis2/ui';\nconst styles = {\n  badgeContainer: {\n    margin: '2px',\n    padding: '0 16px',\n    borderRadius: '4px',\n    color: colors.white,\n    backgroundColor: '#212934',\n    height: 36,\n    display: 'flex',\n    alignItems: 'center'\n  },\n  badge: {\n    fontSize: '13px',\n    cursor: 'pointer',\n    whiteSpace: 'nowrap'\n  },\n  badgeRemove: {\n    fontSize: '12px',\n    textDecoration: 'underline',\n    marginLeft: '24px',\n    cursor: 'pointer'\n  }\n};\n\nclass FilterBadge extends Component {\n  onClick = id => () => this.props.onClick(id);\n  onRemove = id => () => this.props.onRemove(id);\n\n  render() {\n    const {\n      data\n    } = this.props;\n    return <div style={styles.badgeContainer} data-test=\"dashboard-filter-badge\">\n                <span style={styles.badge} onClick={this.onClick(data.id)}>\n                    {`${data.name}: ${data.values.length > 1 ? i18n.t('{{count}} selected', {\n          count: data.values.length\n        }) : data.values[0].name}`}\n                </span>\n                <span style={styles.badgeRemove} onClick={this.onRemove(data.id)}>\n                    {i18n.t('Remove')}\n                </span>\n            </div>;\n  }\n\n}\n\nFilterBadge.propTypes = {\n  data: PropTypes.object.isRequired,\n  onClick: PropTypes.func.isRequired,\n  onRemove: PropTypes.func.isRequired\n};\nFilterBadge.defaultProps = {\n  onClick: Function.prototype,\n  onRemove: Function.prototype\n};\nexport default FilterBadge;","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport FilterBadge from './FilterBadge';\nimport { sGetNamedItemFilters } from '../../reducers/itemFilters';\nimport { acRemoveItemFilter } from '../../actions/itemFilters';\nimport { acSetActiveModalDimension } from '../../actions/activeModalDimension';\nimport classes from './styles/FilterBar.module.css';\n\nclass FilterBar extends Component {\n  onBadgeRemove = id => {\n    this.props.removeItemFilter(id);\n  };\n  onBadgeClick = id => {\n    this.props.setActiveModalDimension({\n      id,\n      name: this.props.filters.find(item => item.id === id).name\n    });\n  };\n\n  render() {\n    const {\n      filters\n    } = this.props;\n    return filters.length ? // the 3 is calculated so that the FilterBar has the same vertical position as the TitleBar in relation to the ControlBar\n    <div className={classes.bar} style={{\n      top: 3\n    }}>\n                {filters.map(filter => <FilterBadge key={filter.id} data={filter} onClick={this.onBadgeClick} onRemove={this.onBadgeRemove} />)}\n            </div> : null;\n  }\n\n}\n\nFilterBar.propTypes = {\n  filters: PropTypes.array.isRequired,\n  removeItemFilter: PropTypes.func.isRequired,\n  setActiveModalDimension: PropTypes.func\n};\nFilterBar.defaultProps = {\n  filters: [],\n  removeItemFIlter: Function.prototype\n};\n\nconst mapStateToProps = state => ({\n  filters: sGetNamedItemFilters(state)\n});\n\nexport default connect(mapStateToProps, {\n  setActiveModalDimension: acSetActiveModalDimension,\n  removeItemFilter: acRemoveItemFilter\n})(FilterBar);","import { generateUid } from 'd2/uid';\nimport { SET_PRINT_DASHBOARD, CLEAR_PRINT_DASHBOARD, SET_PRINT_DASHBOARD_LAYOUT, ADD_PRINT_DASHBOARD_ITEM, REMOVE_PRINT_DASHBOARD_ITEM, UPDATE_PRINT_DASHBOARD_ITEM } from '../reducers/printDashboard';\nimport { NEW_ITEM_SHAPE, getGridItemProperties, getPageBreakItemShape, getPrintTitlePageItemShape } from '../modules/gridUtil';\nimport { itemTypeMap, PAGEBREAK } from '../modules/itemTypes'; // actions\n\nexport const acSetPrintDashboard = (dashboard, items) => {\n  const val = { ...dashboard,\n    dashboardItems: items\n  };\n  return {\n    type: SET_PRINT_DASHBOARD,\n    value: val\n  };\n};\nexport const acClearPrintDashboard = () => ({\n  type: CLEAR_PRINT_DASHBOARD\n});\nexport const acUpdatePrintDashboardLayout = value => ({\n  type: SET_PRINT_DASHBOARD_LAYOUT,\n  value\n});\nexport const acAddPrintDashboardItem = item => {\n  const type = item.type;\n  delete item.type;\n  const itemPropName = itemTypeMap[type].propName;\n  const id = generateUid();\n  const gridItemProperties = getGridItemProperties(id);\n  let shape;\n\n  if (type === PAGEBREAK) {\n    const yPos = item.yPos || 0;\n    shape = getPageBreakItemShape(yPos, item.isStatic);\n  } else {\n    shape = getPrintTitlePageItemShape(item.isOneItemPerPage);\n  }\n\n  return {\n    type: ADD_PRINT_DASHBOARD_ITEM,\n    value: {\n      id,\n      type,\n      position: item.position || null,\n      [itemPropName]: item.content,\n      ...NEW_ITEM_SHAPE,\n      ...gridItemProperties,\n      ...shape\n    }\n  };\n};\nexport const acRemovePrintDashboardItem = value => ({\n  type: REMOVE_PRINT_DASHBOARD_ITEM,\n  value\n});\nexport const acUpdatePrintDashboardItem = item => ({\n  type: UPDATE_PRINT_DASHBOARD_ITEM,\n  value: item\n});","import React, { useState, useEffect } from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { ComponentCover } from '@dhis2/ui';\nimport cx from 'classnames';\nimport DashboardContainer from './DashboardContainer';\nimport ViewTitleBar from '../TitleBar/ViewTitleBar';\nimport ViewItemGrid from '../ItemGrid/ViewItemGrid';\nimport FilterBar from '../FilterBar/FilterBar';\nimport DashboardsBar from '../ControlBar/ViewControlBar/DashboardsBar';\nimport { sGetIsEditing } from '../../reducers/editDashboard';\nimport { sGetIsPrinting } from '../../reducers/printDashboard';\nimport { sGetSelectedId } from '../../reducers/selected';\nimport { acClearEditDashboard } from '../../actions/editDashboard';\nimport { acClearPrintDashboard } from '../../actions/printDashboard';\nimport classes from './styles/ViewDashboard.module.css';\nexport const ViewDashboard = props => {\n  const [controlbarExpanded, setControlbarExpanded] = useState(false);\n  useEffect(() => {\n    if (props.dashboardIsEditing) {\n      props.clearEditDashboard();\n    } else if (props.dashboardIsPrinting) {\n      props.clearPrintDashboard();\n    }\n  }, [props.dashboardIsEditing, props.dashboardIsPrinting]);\n  useEffect(() => {\n    Array.from(document.getElementsByClassName('dashboard-scroll-container')).forEach(container => {\n      container.scroll(0, 0);\n    });\n  }, [props.selectedId]);\n\n  const onExpandedChanged = expanded => setControlbarExpanded(expanded);\n\n  return <div className={cx(classes.container, 'dashboard-scroll-container')}>\n            <DashboardsBar expanded={controlbarExpanded} onExpandedChanged={onExpandedChanged} />\n            <DashboardContainer covered={controlbarExpanded}>\n                {controlbarExpanded && <ComponentCover className={classes.cover} translucent onClick={() => setControlbarExpanded(false)} />}\n                <ViewTitleBar />\n                <FilterBar />\n                <ViewItemGrid />\n            </DashboardContainer>\n        </div>;\n};\nViewDashboard.propTypes = {\n  clearEditDashboard: PropTypes.func,\n  clearPrintDashboard: PropTypes.func,\n  dashboardIsEditing: PropTypes.bool,\n  dashboardIsPrinting: PropTypes.bool,\n  selectedId: PropTypes.string\n};\n\nconst mapStateToProps = state => {\n  return {\n    dashboardIsEditing: sGetIsEditing(state),\n    dashboardIsPrinting: sGetIsPrinting(state),\n    selectedId: sGetSelectedId(state)\n  };\n};\n\nexport default connect(mapStateToProps, {\n  clearEditDashboard: acClearEditDashboard,\n  clearPrintDashboard: acClearPrintDashboard\n})(ViewDashboard);","import React from 'react';\nimport PropTypes from 'prop-types';\nimport i18n from '@dhis2/d2-i18n';\nimport { InputField } from '@dhis2/ui';\n\nconst ItemSearchField = props => <InputField name=\"Dashboard item search\" label={i18n.t('Search for items to add to this dashboard')} type=\"text\" onChange={props.onChange} onFocus={props.onFocus} value={props.value} dataTest=\"item-search\" />;\n\nItemSearchField.propTypes = {\n  value: PropTypes.string,\n  onChange: PropTypes.func,\n  onFocus: PropTypes.func\n};\nexport default ItemSearchField;","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { MenuItem, colors } from '@dhis2/ui';\nimport classes from './styles/HeaderMenuItem.module.css';\n\nconst HeaderMenuItem = ({\n  title\n}) => <MenuItem className={classes.item} dense key={title} disabled label={<span style={{\n  color: colors.grey800,\n  fontWeight: '600'\n}}>\n                {title}\n            </span>} />;\n\nHeaderMenuItem.propTypes = {\n  title: PropTypes.string.isRequired\n};\nexport default HeaderMenuItem;","import React from 'react';\nimport { colors } from '@dhis2/ui';\nimport PropTypes from 'prop-types';\n\nconst LaunchIcon = ({\n  className\n}) => <svg className={className} xmlns=\"http://www.w3.org/2000/svg\" width=\"12\" height=\"12\" fill={colors.grey600} viewBox=\"0 0 24 24\">\n        <path d=\"M0 0h24v24H0z\" fill=\"none\" />\n        <path d=\"M19 19H5V5h7V3H5c-1.11 0-2 .9-2 2v14c0 1.1.89 2 2 2h14c1.1 0 2-.9 2-2v-7h-2v7zM14 3v2h3.59l-9.83 9.83 1.41 1.41L19 6.41V10h2V3h-7z\" />\n    </svg>;\n\nLaunchIcon.propTypes = {\n  className: PropTypes.string\n};\nexport default LaunchIcon;","import React from 'react';\nimport { MenuItem, colors } from '@dhis2/ui';\nimport i18n from '@dhis2/d2-i18n';\nimport PropTypes from 'prop-types';\nimport { visTypeIcons } from '@dhis2/analytics';\nimport { getItemIcon, VISUALIZATION } from '../../modules/itemTypes';\nimport LaunchIcon from '../../icons/Launch';\nimport classes from './styles/ContentMenuItem.module.css';\n\nconst LaunchLink = ({\n  url\n}) => <a onClick={e => e.stopPropagation()} className={classes.launchLink} target=\"_blank\" rel=\"noopener noreferrer\" href={url}>\n        <LaunchIcon />\n    </a>;\n\nLaunchLink.propTypes = {\n  url: PropTypes.string\n};\n\nconst InsertButton = () => <button className={classes.buttonInsert}>{i18n.t('Insert')}</button>;\n\nconst ContentMenuItem = ({\n  type,\n  name,\n  onInsert,\n  url,\n  visType\n}) => {\n  const ItemIcon = getItemIcon(type);\n  const renderedItemIcon = type === VISUALIZATION ? visTypeIcons[visType] : <ItemIcon style={{\n    fill: colors.grey600\n  }} />;\n  return <MenuItem dense onClick={onInsert} label={<div className={classes.menuItem}>\n                    <div className={classes.label}>\n                        <span style={{\n        marginRight: '6px'\n      }}>\n                            {renderedItemIcon}\n                        </span>\n                        <span>{name}</span>\n                        {url ? <LaunchLink url={url} /> : null}\n                    </div>\n                    <InsertButton />\n                </div>} dataTest={`menu-item-${name}`} />;\n};\n\nContentMenuItem.propTypes = {\n  name: PropTypes.string,\n  type: PropTypes.string,\n  url: PropTypes.string,\n  visType: PropTypes.string,\n  onInsert: PropTypes.func\n};\nexport default ContentMenuItem;","import { sGetEditDashboardRoot } from '../../reducers/editDashboard';\nimport { itemTypeMap } from '../../modules/itemTypes';\nimport { acAddDashboardItem, acUpdateDashboardItem } from '../../actions/editDashboard';\nexport const tAddListItemContent = (type, content) => (dispatch, getState) => {\n  const state = getState();\n  const listItemType = itemTypeMap[type].propName;\n  const dashboardItems = sGetEditDashboardRoot(state).dashboardItems;\n  const dashboardItemIndex = dashboardItems.findIndex(item => item.type === type);\n  let dashboardItem; // Reports/Resources/Users dashboard item type already present in dashboard\n\n  if (dashboardItemIndex > -1) {\n    dashboardItem = dashboardItems[dashboardItemIndex];\n    dashboardItem[listItemType].push(content);\n    dispatch(acUpdateDashboardItem(dashboardItem));\n  } else {\n    dashboardItem = {\n      type: type,\n      content: [content]\n    };\n    dispatch(acAddDashboardItem(dashboardItem));\n  }\n};","import i18n from '@dhis2/d2-i18n';\nimport { VISUALIZATION, MAP, EVENT_CHART, EVENT_REPORT, USERS, REPORTS, RESOURCES, APP, MESSAGES, TEXT, SPACER } from '../../modules/itemTypes';\nexport const singleItems = [{\n  id: 'additional',\n  header: i18n.t('Additional items'),\n  items: [{\n    type: TEXT,\n    name: i18n.t('Text box'),\n    content: ''\n  }, {\n    type: MESSAGES,\n    name: i18n.t('Messages'),\n    content: 'true'\n  }, {\n    type: SPACER,\n    name: i18n.t('Spacer'),\n    content: ''\n  }]\n}]; // categorizedItems are grouped in the item selector menu\n\nexport const categorizedItems = [VISUALIZATION, MAP, EVENT_REPORT, EVENT_CHART, USERS, REPORTS, RESOURCES, APP]; // listItemTypes are included in a single dashboard item\n\nexport const listItemTypes = [REPORTS, RESOURCES, USERS];","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport i18n from '@dhis2/d2-i18n';\nimport { MenuItem, Divider } from '@dhis2/ui';\nimport { useConfig } from '@dhis2/app-runtime';\nimport HeaderMenuItem from './HeaderMenuItem';\nimport ContentMenuItem from './ContentMenuItem';\nimport { tAddListItemContent } from './actions';\nimport { acAddDashboardItem } from '../../actions/editDashboard';\nimport { getItemUrl, APP, VISUALIZATION } from '../../modules/itemTypes';\nimport { categorizedItems, listItemTypes } from './selectableItems';\nimport classes from './styles/CategorizedMenuGroup.module.css';\n\nconst CategorizedMenuGroup = ({\n  type,\n  title,\n  items,\n  hasMore,\n  acAddDashboardItem,\n  tAddListItemContent,\n  onChangeItemsLimit\n}) => {\n  const {\n    baseUrl\n  } = useConfig();\n  const [seeMore, setSeeMore] = useState(false);\n\n  const addItem = item => () => {\n    if (type === APP) {\n      acAddDashboardItem({\n        type,\n        content: item.key\n      });\n    } else {\n      const newItem = {\n        id: item.id,\n        name: item.displayName || item.name\n      };\n\n      if (listItemTypes.includes(type)) {\n        tAddListItemContent(type, newItem);\n      } else {\n        acAddDashboardItem({\n          type,\n          content: newItem\n        });\n      }\n    }\n  };\n\n  const toggleSeeMore = () => {\n    setSeeMore(!seeMore);\n    onChangeItemsLimit(type);\n  };\n\n  return <>\n            <HeaderMenuItem title={title} />\n            {items.map(item => {\n      const itemUrl = getItemUrl(type, item, baseUrl);\n      return <ContentMenuItem key={item.id || item.key} type={type} visType={type === VISUALIZATION ? item.type : type} name={item.displayName || item.name} onInsert={addItem(item)} url={itemUrl} />;\n    })}\n            {hasMore ? <MenuItem dense key={`showmore${title}`} onClick={toggleSeeMore} label={<button className={classes.showMoreButton}>\n                            {seeMore ? i18n.t('Show fewer') : i18n.t('Show more')}\n                        </button>} /> : null}\n            <Divider margin=\"8px 0px\" />\n        </>;\n};\n\nCategorizedMenuGroup.propTypes = {\n  items: PropTypes.array.isRequired,\n  title: PropTypes.string.isRequired,\n  type: PropTypes.oneOf(categorizedItems).isRequired,\n  onChangeItemsLimit: PropTypes.func.isRequired,\n  acAddDashboardItem: PropTypes.func,\n  hasMore: PropTypes.bool,\n  tAddListItemContent: PropTypes.func\n};\nexport default connect(null, {\n  acAddDashboardItem,\n  tAddListItemContent\n})(CategorizedMenuGroup);","import React from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport HeaderMenuItem from './HeaderMenuItem';\nimport ContentMenuItem from './ContentMenuItem';\nimport { acAddDashboardItem } from '../../actions/editDashboard';\nexport const SinglesMenuGroup = ({\n  acAddDashboardItem,\n  category\n}) => {\n  const addToDashboard = ({\n    type,\n    content\n  }) => () => {\n    acAddDashboardItem({\n      type,\n      content\n    });\n  };\n\n  return <>\n            <HeaderMenuItem title={category.header} />\n            {category.items.map(item => <ContentMenuItem key={item.type} type={item.type} name={item.name} onInsert={addToDashboard(item)} />)}\n        </>;\n};\nSinglesMenuGroup.propTypes = {\n  acAddDashboardItem: PropTypes.func,\n  category: PropTypes.object\n};\nexport default connect(null, {\n  acAddDashboardItem\n})(SinglesMenuGroup);","import React, { useState, useEffect, createRef } from 'react';\nimport { Popover, FlyoutMenu } from '@dhis2/ui';\nimport { useD2 } from '@dhis2/app-runtime-adapter-d2';\nimport ItemSearchField from './ItemSearchField';\nimport CategorizedMenuGroup from './CategorizedMenuGroup';\nimport SinglesMenuGroup from './SinglesMenuGroup';\nimport { singleItems, categorizedItems } from './selectableItems';\nimport { itemTypeMap, getDefaultItemCount } from '../../modules/itemTypes';\nimport classes from './styles/ItemSelector.module.css';\n\nconst ItemSelector = () => {\n  const [isOpen, setIsOpen] = useState(false);\n  const [filter, setFilter] = useState('');\n  const [items, setItems] = useState(null);\n  const [maxOptions, setMaxOptions] = useState(new Set());\n  const {\n    d2\n  } = useD2({});\n  useEffect(() => {\n    let queryString = '?count=11';\n\n    if ([...maxOptions.values()].length) {\n      queryString += '&max=' + [...maxOptions.values()].join('&max=');\n    }\n\n    const filterStr = filter ? `/${filter}` : '';\n    d2.Api.getApi().get(`dashboards/q${filterStr}${queryString}`).then(response => setItems(response)).catch(console.error);\n  }, [filter, maxOptions]);\n\n  const closeMenu = () => {\n    setIsOpen(false);\n    setFilter('');\n    setMaxOptions(new Set());\n  };\n\n  const openMenu = () => setIsOpen(true);\n\n  const getCategorizedMenuGroups = () => {\n    return categorizedItems.filter(type => {\n      const itemType = itemTypeMap[type];\n      return items && items[itemType.endPointName];\n    }).map(type => {\n      const itemType = itemTypeMap[type];\n      const itemCount = getDefaultItemCount(type);\n      const allItems = items[itemType.endPointName];\n      const hasMore = allItems.length > itemCount;\n      const displayItems = maxOptions.has(itemType.id) ? allItems : allItems.slice(0, itemCount);\n      return <CategorizedMenuGroup key={type} type={type} title={itemType.pluralTitle} items={displayItems} onChangeItemsLimit={updateMaxOptions} hasMore={hasMore} />;\n    });\n  };\n\n  const getSinglesMenuGroups = () => singleItems.map(category => <SinglesMenuGroup key={category.id} category={category} />);\n\n  const getMenuGroups = () => getCategorizedMenuGroups().concat(getSinglesMenuGroups());\n\n  const updateMaxOptions = type => {\n    if (type) {\n      const options = new Set(maxOptions);\n      options.has(type) ? options.delete(type) : options.add(type);\n      setMaxOptions(options);\n    } else {\n      setMaxOptions(new Set());\n    }\n  };\n\n  const updateFilter = ({\n    value\n  }) => setFilter(value);\n\n  const inputRef = createRef();\n  return <>\n            <span ref={inputRef}>\n                <ItemSearchField value={filter} onChange={updateFilter} onFocus={openMenu} />\n            </span>\n            {isOpen && <Popover reference={inputRef} placement=\"bottom-start\" onClickOutside={closeMenu} arrow={false} maxWidth={700}>\n                    <div className={classes.popover}>\n                        <FlyoutMenu className={classes.menu} dataTest=\"item-menu\" maxWidth=\"700px\">\n                            {getMenuGroups()}\n                        </FlyoutMenu>\n                    </div>\n                </Popover>}\n        </>;\n};\n\nexport default ItemSelector;","import React from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport i18n from '@dhis2/d2-i18n';\nimport { InputField, TextAreaField } from '@dhis2/ui';\nimport ItemSelector from '../ItemSelector/ItemSelector';\nimport { acSetDashboardTitle, acSetDashboardDescription } from '../../actions/editDashboard';\nimport { orObject } from '../../modules/util';\nimport { sGetEditDashboardRoot } from '../../reducers/editDashboard';\nimport classes from './styles/EditTitleBar.module.css';\nexport const EditTitleBar = ({\n  name,\n  description,\n  onChangeTitle,\n  onChangeDescription\n}) => {\n  const updateTitle = (_, e) => {\n    onChangeTitle(e.target.value);\n  };\n\n  const updateDescription = (_, e) => {\n    onChangeDescription(e.target.value);\n  };\n\n  return <section className={classes.section}>\n            <div className={classes.titleDescription}>\n                <InputField className={classes.title} name=\"Dashboard title input\" label={i18n.t('Dashboard title')} type=\"text\" onChange={updateTitle} value={name} placeholder={i18n.t('Untitled dashboard')} dataTest=\"dashboard-title-input\" />\n                <TextAreaField className={classes.description} name=\"Dashboard description input\" label={i18n.t('Dashboard description')} onChange={updateDescription} value={description} dataTest=\"dashboard-description-input\" />\n            </div>\n            <div className={classes.itemSelector}>\n                <ItemSelector />\n            </div>\n        </section>;\n};\nEditTitleBar.propTypes = {\n  onChangeDescription: PropTypes.func.isRequired,\n  onChangeTitle: PropTypes.func.isRequired,\n  description: PropTypes.string,\n  name: PropTypes.string\n};\nEditTitleBar.defaultProps = {\n  name: '',\n  description: ''\n};\n\nconst mapStateToProps = state => {\n  const selectedDashboard = orObject(sGetEditDashboardRoot(state));\n  return {\n    name: selectedDashboard.name,\n    description: selectedDashboard.description\n  };\n};\n\nconst mapDispatchToProps = {\n  onChangeTitle: acSetDashboardTitle,\n  onChangeDescription: acSetDashboardDescription\n};\nexport default connect(mapStateToProps, mapDispatchToProps)(EditTitleBar);","import React, { useState } from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport i18n from '@dhis2/d2-i18n';\nimport { Responsive as ResponsiveReactGridLayout } from 'react-grid-layout';\nimport { Layer, CenteredContent, CircularLoader } from '@dhis2/ui';\nimport cx from 'classnames';\nimport { acUpdateDashboardLayout } from '../../actions/editDashboard';\nimport { Item } from '../Item/Item';\nimport { resize as pluginResize } from '../Item/VisualizationItem/Visualization/plugin';\nimport { isVisualizationType } from '../../modules/itemTypes';\nimport { GRID_ROW_HEIGHT_PX, GRID_COMPACT_TYPE, MARGIN_PX, GRID_PADDING_PX, GRID_COLUMNS, hasShape, getGridWidth } from '../../modules/gridUtil';\nimport { getBreakpoint } from '../../modules/smallScreen';\nimport getGridItemDomId from '../../modules/getGridItemDomId';\nimport { orArray } from '../../modules/util';\nimport NoContentMessage from '../../widgets/NoContentMessage';\nimport { sGetSelectedIsLoading } from '../../reducers/selected';\nimport { sGetEditDashboardRoot, sGetEditDashboardItems } from '../../reducers/editDashboard';\nimport ProgressiveLoadingContainer from '../Item/ProgressiveLoadingContainer';\nimport { EDIT } from '../Dashboard/dashboardModes';\nimport { useWindowDimensions } from '../WindowDimensionsProvider';\nimport 'react-grid-layout/css/styles.css';\nimport 'react-resizable/css/styles.css';\nimport './styles/ItemGrid.css';\n\nconst EditItemGrid = ({\n  isLoading,\n  dashboardItems,\n  acUpdateDashboardLayout\n}) => {\n  const [gridWidth, setGridWidth] = useState(0);\n  const {\n    width\n  } = useWindowDimensions();\n\n  const onLayoutChange = newLayout => {\n    acUpdateDashboardLayout(newLayout);\n  };\n\n  const onResizeStop = (layout, oldItem, newItem) => {\n    const el = document.querySelector(`#${getGridItemDomId(newItem.i)}`) || {};\n    if (typeof el.setViewportSize === 'function') setTimeout(() => el.setViewportSize(el.clientWidth - 5, el.clientHeight - 5), 10);\n    const dashboardItem = dashboardItems.find(item => item.id === newItem.i); // call resize on the item component if it's a plugin type\n\n    if (dashboardItem && isVisualizationType(dashboardItem)) {\n      pluginResize(dashboardItem);\n    }\n  };\n\n  const getItemComponent = item => <ProgressiveLoadingContainer key={item.i} className={cx(item.type, 'edit')} itemId={item.id}>\n            <Item item={item} gridWidth={gridWidth} dashboardMode={EDIT} />\n        </ProgressiveLoadingContainer>;\n\n  const getItemComponents = items => items.map(item => getItemComponent(item));\n\n  const onWidthChanged = containerWidth => {\n    setTimeout(() => {\n      setGridWidth(containerWidth);\n    }, 200);\n  };\n\n  if (!isLoading && !dashboardItems.length) {\n    return <NoContentMessage text={i18n.t('There are no items on this dashboard')} />;\n  }\n\n  return <>\n            {isLoading ? <Layer translucent>\n                    <CenteredContent>\n                        <CircularLoader />\n                    </CenteredContent>\n                </Layer> : null}\n            <ResponsiveReactGridLayout rowHeight={GRID_ROW_HEIGHT_PX} width={getGridWidth(width)} cols={{\n      lg: GRID_COLUMNS\n    }} breakpoints={{\n      lg: getBreakpoint()\n    }} layouts={{\n      lg: dashboardItems\n    }} compactType={GRID_COMPACT_TYPE} margin={MARGIN_PX} containerPadding={{\n      lg: GRID_PADDING_PX\n    }} onLayoutChange={onLayoutChange} onResizeStop={onResizeStop} onWidthChange={onWidthChanged} isDraggable={true} isResizable={true} draggableCancel=\"input,textarea\">\n                {getItemComponents(dashboardItems)}\n            </ResponsiveReactGridLayout>\n        </>;\n};\n\nEditItemGrid.propTypes = {\n  acUpdateDashboardLayout: PropTypes.func,\n  dashboardItems: PropTypes.array,\n  isLoading: PropTypes.bool\n}; // Container\n\nconst mapStateToProps = state => {\n  const selectedDashboard = sGetEditDashboardRoot(state);\n  const dashboardItems = orArray(sGetEditDashboardItems(state)).filter(hasShape);\n  return {\n    isLoading: sGetSelectedIsLoading(state) || !selectedDashboard,\n    dashboardItems\n  };\n};\n\nconst mapDispatchToProps = {\n  acUpdateDashboardLayout\n};\nexport default connect(mapStateToProps, mapDispatchToProps)(EditItemGrid);","import React from 'react';\nimport PropTypes from 'prop-types';\nimport i18n from '@dhis2/d2-i18n';\nimport { Button, Modal, ModalContent, ModalActions, ButtonStrip, ModalTitle } from '@dhis2/ui';\nimport classes from './styles/ConfirmDeleteDialog.module.css';\nexport const ConfirmDeleteDialog = ({\n  dashboardName,\n  onDeleteConfirmed,\n  onContinueEditing,\n  open\n}) => {\n  const actions = [<Button key=\"cancel\" secondary onClick={onContinueEditing} dataTest=\"cancel-delete-dashboard\">\n            {i18n.t('Cancel')}\n        </Button>, <Button key=\"delete\" destructive onClick={onDeleteConfirmed} dataTest=\"confirm-delete-dashboard\">\n            {i18n.t('Delete')}\n        </Button>];\n  return open && <Modal onClose={onContinueEditing} small position=\"middle\">\n                <ModalTitle>{i18n.t('Delete dashboard')}</ModalTitle>\n                <ModalContent>\n                    <span className={classes.content}>\n                        {i18n.t('Deleting dashboard \"{{ dashboardName }}\" will remove it for all users. This action cannot be undone. Are you sure you want to permanently delete this dashboard?', {\n          dashboardName\n        })}\n                    </span>\n                </ModalContent>\n                <ModalActions>\n                    <ButtonStrip>{actions}</ButtonStrip>\n                </ModalActions>\n            </Modal>;\n};\nConfirmDeleteDialog.propTypes = {\n  dashboardName: PropTypes.string,\n  open: PropTypes.bool,\n  onContinueEditing: PropTypes.func,\n  onDeleteConfirmed: PropTypes.func\n};\nexport default ConfirmDeleteDialog;","import React, { useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { Redirect } from 'react-router-dom';\nimport i18n from '@dhis2/d2-i18n';\nimport TranslationDialog from '@dhis2/d2-ui-translation-dialog';\nimport { Button, ButtonStrip } from '@dhis2/ui';\nimport { useDataEngine, useAlert } from '@dhis2/app-runtime';\nimport { useD2 } from '@dhis2/app-runtime-adapter-d2';\nimport ConfirmDeleteDialog from './ConfirmDeleteDialog';\nimport { tSaveDashboard, acClearEditDashboard, acSetPrintPreviewView, acClearPrintPreviewView } from '../../actions/editDashboard';\nimport { acClearPrintDashboard } from '../../actions/printDashboard';\nimport { tDeleteDashboard, acSetDashboardDisplayName } from '../../actions/dashboards';\nimport { sGetEditDashboardRoot, sGetIsNewDashboard, sGetIsPrintPreviewView } from '../../reducers/editDashboard';\nimport { apiFetchDashboard } from '../../api/dashboards';\nimport classes from './styles/EditBar.module.css';\nconst saveFailedMessage = i18n.t('Failed to save dashboard. You might be offline or not have access to edit this dashboard.');\n\nconst EditBar = props => {\n  const {\n    d2\n  } = useD2({});\n  const dataEngine = useDataEngine();\n  const [translationDlgIsOpen, setTranslationDlgIsOpen] = useState(false);\n  const [dashboard, setDashboard] = useState(undefined);\n  const [confirmDeleteDlgIsOpen, setConfirmDeleteDlgIsOpen] = useState(false);\n  const [redirectUrl, setRedirectUrl] = useState(undefined);\n  const failureAlert = useAlert(saveFailedMessage, {\n    critical: true\n  });\n  useEffect(() => {\n    if (props.dashboardId && !dashboard) {\n      apiFetchDashboard(dataEngine, props.dashboardId).then(dboard => setDashboard(dboard));\n    }\n  }, [props.dashboardId, dashboard]);\n\n  const onConfirmDelete = () => {\n    setConfirmDeleteDlgIsOpen(true);\n  };\n\n  const onSave = () => {\n    props.saveDashboard().then(newId => {\n      setRedirectUrl(`/${newId}`);\n    }).catch(() => failureAlert.show());\n  };\n\n  const onPrintPreview = () => {\n    if (props.isPrintPreviewView) {\n      props.clearPrintPreview();\n      props.clearPrintDashboard();\n    } else {\n      props.showPrintPreview();\n    }\n  };\n\n  const onDiscard = () => {\n    props.onDiscardChanges();\n    const redirectUrl = props.dashboardId ? `/${props.dashboardId}` : '/';\n    setRedirectUrl(redirectUrl);\n  };\n\n  const onContinueEditing = () => {\n    setConfirmDeleteDlgIsOpen(false);\n  };\n\n  const onDeleteConfirmed = () => {\n    setConfirmDeleteDlgIsOpen(false);\n    props.onDelete(props.dashboardId).then(() => {\n      setRedirectUrl('/');\n    });\n  };\n\n  const onTranslationsSaved = async translations => {\n    if (translations && translations.length) {\n      const dbLocale = await d2.currentUser.userSettings.get('keyDbLocale');\n      const translation = translations.find(t => t.locale === dbLocale && t.property === 'NAME');\n\n      if (translation && translation.value) {\n        props.onTranslate(props.dashboardId, translation.value);\n      }\n    }\n  };\n\n  const toggleTranslationDialog = () => setTranslationDlgIsOpen(!translationDlgIsOpen);\n\n  const confirmDeleteDialog = () => props.deleteAccess && props.dashboardId ? <ConfirmDeleteDialog dashboardName={props.dashboardName} onDeleteConfirmed={onDeleteConfirmed} onContinueEditing={onContinueEditing} open={confirmDeleteDlgIsOpen} /> : null;\n\n  const translationDialog = () => dashboard && dashboard.id ? <TranslationDialog className=\"translation-dialog\" d2={d2} open={translationDlgIsOpen} onRequestClose={toggleTranslationDialog} objectToTranslate={{ ...dashboard,\n    modelDefinition: {\n      name: 'dashboard'\n    }\n  }} fieldsToTranslate={['name', 'description']} onTranslationSaved={onTranslationsSaved} onTranslationError={err => console.log('translation update error', err)} /> : null;\n\n  const renderActionButtons = () => <ButtonStrip>\n            <Button primary onClick={onSave} dataTest=\"save-dashboard-button\">\n                {i18n.t('Save changes')}\n            </Button>\n            <Button onClick={onPrintPreview}>\n                {props.isPrintPreviewView ? i18n.t('Exit Print preview') : i18n.t('Print preview')}\n            </Button>\n\n            {props.dashboardId && <Button onClick={toggleTranslationDialog}>\n                    {i18n.t('Translate')}\n                </Button>}\n            {props.dashboardId && props.deleteAccess && <Button onClick={onConfirmDelete} dataTest=\"delete-dashboard-button\">\n                    {i18n.t('Delete')}\n                </Button>}\n        </ButtonStrip>;\n\n  if (redirectUrl) {\n    return <Redirect to={redirectUrl} />;\n  }\n\n  const {\n    updateAccess\n  } = props;\n  const discardBtnText = updateAccess ? i18n.t('Exit without saving') : i18n.t('Go to dashboards');\n  return <>\n            <div className={classes.editBar}>\n                <div className={classes.controls}>\n                    {updateAccess ? renderActionButtons() : null}\n                    <Button secondary onClick={onDiscard}>\n                        {discardBtnText}\n                    </Button>\n                </div>\n            </div>\n            {translationDialog()}\n            {confirmDeleteDialog()}\n        </>;\n};\n\nEditBar.propTypes = {\n  clearPrintDashboard: PropTypes.func,\n  clearPrintPreview: PropTypes.func,\n  dashboardId: PropTypes.string,\n  dashboardName: PropTypes.string,\n  deleteAccess: PropTypes.bool,\n  isPrintPreviewView: PropTypes.bool,\n  saveDashboard: PropTypes.func,\n  showPrintPreview: PropTypes.func,\n  updateAccess: PropTypes.bool,\n  onDelete: PropTypes.func,\n  onDiscardChanges: PropTypes.func,\n  onTranslate: PropTypes.func\n};\n\nconst mapStateToProps = state => {\n  const dashboard = sGetEditDashboardRoot(state);\n  let deleteAccess;\n  let updateAccess;\n\n  if (sGetIsNewDashboard(state)) {\n    deleteAccess = true;\n    updateAccess = true;\n  } else {\n    updateAccess = dashboard.access ? dashboard.access.update : false;\n    deleteAccess = dashboard.access ? dashboard.access.delete : false;\n  }\n\n  return {\n    dashboardId: dashboard.id,\n    dashboardName: dashboard.name,\n    deleteAccess,\n    isPrintPreviewView: sGetIsPrintPreviewView(state),\n    updateAccess\n  };\n};\n\nconst mapDispatchToProps = dispatch => ({\n  clearPrintDashboard: () => dispatch(acClearPrintDashboard()),\n  clearPrintPreview: () => dispatch(acClearPrintPreviewView()),\n  saveDashboard: () => dispatch(tSaveDashboard()).then(id => id),\n  onDelete: id => dispatch(tDeleteDashboard(id)),\n  onDiscardChanges: () => dispatch(acClearEditDashboard()),\n  onTranslate: (id, value) => dispatch(acSetDashboardDisplayName(id, value)),\n  showPrintPreview: () => dispatch(acSetPrintPreviewView())\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(EditBar);","import React from 'react';\nimport PropTypes from 'prop-types';\nimport i18n from '@dhis2/d2-i18n';\nimport { NoticeBox, CenteredContent } from '@dhis2/ui';\nimport classes from './styles/NotSupportedNotice.module.css';\n\nconst NotSupportedNotice = ({\n  message\n}) => <CenteredContent position=\"top\">\n        <div className={classes.noticeContainer}>\n            <NoticeBox title={i18n.t('Not supported')} warning>\n                {message}\n            </NoticeBox>\n        </div>\n    </CenteredContent>;\n\nNotSupportedNotice.propTypes = {\n  message: PropTypes.string\n};\nexport default NotSupportedNotice;","import React from 'react';\nimport PropTypes from 'prop-types';\nimport i18n from '@dhis2/d2-i18n';\nimport classes from './styles/PrintInfo.module.css';\n\nconst PrintInfo = ({\n  isLayout\n}) => {\n  const layoutStyle = isLayout ? i18n.t('dashboard layout') : i18n.t('one item per page');\n  return <div className={classes.container}>\n            <p className={classes.title}>\n                {`${i18n.t('Print Preview')}: ${layoutStyle}`}\n            </p>\n            <div className={classes.printSuggestions}>\n                <p>{`${i18n.t('For best print results')}:`}</p>\n                <ul>\n                    <li>{i18n.t('Use Chrome or Edge web browser')}</li>\n                    <li>\n                        {i18n.t('Wait for all dashboard items to load before printing')}\n                    </li>\n                    <li>\n                        {i18n.t('Use A4 landscape paper size and default margin settings in the browser print dialog')}\n                    </li>\n                </ul>\n            </div>\n            <hr className={classes.divider} />\n        </div>;\n};\n\nPrintInfo.propTypes = {\n  isLayout: PropTypes.bool\n};\nexport default PrintInfo;","import React from 'react';\nimport { colors } from '@dhis2/ui';\n\nconst LessHorizontalIcon = () => <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" fill={colors.grey600} viewBox=\"0 0 24 24\">\n        <path d=\"m13.2928932 6.29289322c.3905243-.39052429 1.0236893-.39052429 1.4142136 0 .3604839.36048396.3882135.92771502.0831886 1.32000622l-.0831886.09420734-4.2921068 4.29289322 4.2921068 4.2928932c.3604839.360484.3882135.927715.0831886 1.3200062l-.0831886.0942074c-.360484.3604839-.927715.3882135-1.3200062.0831886l-.0942074-.0831886-4.99999998-5c-.36048396-.360484-.3882135-.927715-.08318861-1.3200062l.08318861-.0942074z\" />\n    </svg>;\n\nexport default LessHorizontalIcon;","import React from 'react';\nimport PropTypes from 'prop-types';\nimport i18n from '@dhis2/d2-i18n';\nimport { Button } from '@dhis2/ui';\nimport { Link } from 'react-router-dom';\nimport LessHorizontalIcon from '../../icons/LessHorizontal';\nimport classes from './styles/PrintActionsBar.module.css'; // set in PrintActionsBar.module.css\n\nexport const PRINT_ACTIONS_BAR_HEIGHT = 44;\nexport const PRINT_ACTIONS_BAR_HEIGHT_SM = 36;\n\nconst PrintActionsBar = ({\n  id\n}) => {\n  const getExitPrintButton = isSmall => <Button className={isSmall ? classes.buttonSmall : classes.buttonLarge} small={isSmall}>\n            <LessHorizontalIcon />\n            {i18n.t('Exit print preview')}\n        </Button>;\n\n  const getPrintButton = isSmall => <Button className={isSmall ? classes.buttonSmall : classes.buttonLarge} small={isSmall} onClick={window.print}>\n            {i18n.t('Print')}\n        </Button>;\n\n  return <div className={classes.container}>\n            <div className={classes.actions}>\n                <Link className={classes.link} to={`/${id}`}>\n                    {getExitPrintButton(true)}\n                    {getExitPrintButton(false)}\n                </Link>\n                {getPrintButton(true)}\n                {getPrintButton(false)}\n            </div>\n        </div>;\n};\n\nPrintActionsBar.propTypes = {\n  id: PropTypes.string\n};\nexport default PrintActionsBar;","import sortBy from 'lodash/sortBy';\nimport { orArray } from './util';\nimport { itemTypeMap } from './itemTypes'; // for A4 landscape (297x210mm)\n// 794 px = (21cm / 2.54) * 96 pixels/inch\n// 1122 px = 29.7 /2.54 * 96 pixels/inch\n// const a4LandscapeHeightPx = 794\n\nexport const A4_LANDSCAPE_WIDTH_PX = 1102;\nexport const getTransformYPx = elStyle => {\n  if (!elStyle || !elStyle.transform) {\n    return null;\n  } // find valid transforms - those with y pixels\n  // the code is expecting the transform prop to\n  // look like:  translate(10px, 300px)\n\n\n  const transformY = elStyle.transform.split(' ')[1]?.match(/(\\d+)px/);\n\n  if (transformY) {\n    return parseInt(transformY[1]);\n  } else {\n    return null;\n  }\n};\nexport const getDomGridItemsSortedByYPos = elements => {\n  const types = Object.keys(itemTypeMap);\n  const elementsWithBoundingRect = orArray(elements).map(el => {\n    const type = Array.from(el.classList).find(className => types.indexOf(className) > -1);\n    const rect = el.getBoundingClientRect();\n    const y = getTransformYPx(el.style) || parseInt(rect.y);\n    return {\n      type,\n      classList: el.classList,\n      bottomY: y + parseInt(rect.height),\n      el\n    };\n  });\n  return sortBy(elementsWithBoundingRect, ['bottomY']);\n};\n\nconst isLeapPage = n => {\n  // pages 5,9,13,17,21,25,29... are leap pages\n  let x = 0;\n  const startPage = 1;\n\n  const getMultiple = factor => startPage + 4 * factor;\n\n  let multiple = getMultiple(0);\n  let isLeapPage = false;\n\n  while (multiple < n) {\n    multiple = getMultiple(x);\n    ++x;\n\n    if (multiple === n) {\n      isLeapPage = true;\n      break;\n    }\n  }\n\n  return isLeapPage;\n};\n\nexport const getPageBreakPositions = items => {\n  // add enough page breaks so that each item could\n  // be put on its own page. Due to the react-grid-layout\n  // unit system, we have to estimate roughly the size of each\n  // page. At regular intervals add a unit, like a leap year\n  const yPosList = [];\n  let yPos = 0;\n\n  for (let pageNum = 1; pageNum <= items.length; ++pageNum) {\n    if (pageNum === 1) {\n      yPos += 35;\n    } else if (isLeapPage(pageNum)) {\n      yPos += 40;\n    } else {\n      yPos += 39;\n    }\n\n    yPosList.push(yPos);\n  }\n\n  return yPosList;\n};","import React from 'react';\nimport PropTypes from 'prop-types';\nimport cx from 'classnames';\nimport ReactGridLayout from 'react-grid-layout';\nimport i18n from '@dhis2/d2-i18n';\nimport { Layer, CenteredContent, CircularLoader } from '@dhis2/ui';\nimport NoContentMessage from '../../widgets/NoContentMessage';\nimport { GRID_ROW_HEIGHT_PX, GRID_COMPACT_TYPE, MARGIN_PX, GRID_COLUMNS } from '../../modules/gridUtil';\nimport { A4_LANDSCAPE_WIDTH_PX } from '../../modules/printUtils';\nimport 'react-grid-layout/css/styles.css';\nimport 'react-resizable/css/styles.css';\nimport './styles/ItemGrid.css';\n\nconst StaticGrid = ({\n  layout,\n  children,\n  onLayoutChange,\n  className,\n  isLoading\n}) => {\n  if (!isLoading && !layout.length) {\n    return <NoContentMessage text={i18n.t('There are no items on this dashboard')} />;\n  }\n\n  return <>\n            {isLoading ? <Layer translucent>\n                    <CenteredContent>\n                        <CircularLoader />\n                    </CenteredContent>\n                </Layer> : null}\n            <ReactGridLayout margin={MARGIN_PX} cols={GRID_COLUMNS} rowHeight={GRID_ROW_HEIGHT_PX} width={A4_LANDSCAPE_WIDTH_PX} compactType={GRID_COMPACT_TYPE} isDraggable={false} isResizable={false} draggableCancel=\"input,textarea\" className={cx('layout', className)} layout={layout} onLayoutChange={onLayoutChange}>\n                {children}\n            </ReactGridLayout>\n        </>;\n};\n\nStaticGrid.defaultProps = {\n  onLayoutChange: Function.prototype\n};\nStaticGrid.propTypes = {\n  children: PropTypes.node,\n  className: PropTypes.string,\n  isLoading: PropTypes.bool,\n  layout: PropTypes.array,\n  onLayoutChange: PropTypes.func\n};\nexport default StaticGrid;","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport sortBy from 'lodash/sortBy';\nimport cx from 'classnames';\nimport StaticGrid from './StaticGrid';\nimport { Item } from '../Item/Item';\nimport { acUpdatePrintDashboardLayout } from '../../actions/printDashboard';\nimport { sGetSelectedIsLoading } from '../../reducers/selected';\nimport { sGetPrintDashboardRoot, sGetPrintDashboardItems } from '../../reducers/printDashboard';\nimport { sGetIsEditing } from '../../reducers/editDashboard';\nimport { hasShape } from '../../modules/gridUtil';\nimport { getDomGridItemsSortedByYPos, getTransformYPx } from '../../modules/printUtils';\nimport { PRINT_LAYOUT } from '../Dashboard/dashboardModes';\nimport { PAGEBREAK } from '../../modules/itemTypes';\nexport class PrintLayoutItemGrid extends Component {\n  onLayoutChange = newLayout => {\n    this.props.updateDashboardLayout(newLayout);\n  };\n  isFirstPageBreak = item => {\n    if (item.type !== PAGEBREAK) {\n      return false;\n    }\n\n    const pageBreaks = this.props.dashboardItems.filter(i => i.type === PAGEBREAK);\n    const sortedPageBreaks = sortBy(pageBreaks, ['y']);\n    return item.y === sortedPageBreaks[0].y;\n  };\n  getItemComponent = item => {\n    // the first-page-break class is used in Edit print preview\n    const itemClassNames = cx('print', 'layout', `${item.type}`, {\n      'first-page-break': this.props.isEditing && this.isFirstPageBreak(item),\n      shortened: !!item.shortened\n    });\n    return <div key={item.i} className={itemClassNames}>\n                <Item item={item} dashboardMode={PRINT_LAYOUT} />\n            </div>;\n  };\n  getItemComponents = items => items.map(item => this.getItemComponent(item));\n\n  hideExtraPageBreaks() {\n    const sortedElements = getDomGridItemsSortedByYPos(Array.from(document.querySelectorAll('.react-grid-item')));\n    let pageBreakBottom = 0;\n    let lastItemBottom = 0;\n    let foundNonPageBreak = false;\n\n    for (let i = sortedElements.length - 1; i >= 0; --i) {\n      const item = sortedElements[i];\n\n      if (item.type === PAGEBREAK) {\n        if (!foundNonPageBreak) {\n          item.el.classList.add('removed');\n        } else {\n          pageBreakBottom = item.bottomY;\n          break;\n        }\n      } else {\n        foundNonPageBreak = true;\n        const thisItemBottom = item.bottomY;\n\n        if (thisItemBottom > lastItemBottom) {\n          lastItemBottom = thisItemBottom;\n        }\n      }\n    }\n\n    const pageHeight = 720;\n    const gridElement = document.querySelector('.react-grid-layout'); // the last page break is before the last item(s) so\n    // maxHeight is one page beyond the last page break\n\n    const maxHeight = pageBreakBottom + pageHeight;\n\n    if (gridElement) {\n      gridElement.style.height = `${maxHeight}px`;\n    }\n\n    if (this.props.isEditing) {\n      //scroll to below the title page - which is middle of the first pagebreak\n      const firstBreak = document.querySelector('.first-page-break');\n\n      if (firstBreak && firstBreak.style && firstBreak.style.transform) {\n        const yPos = getTransformYPx(firstBreak.style);\n        const scrollArea = document.querySelector('.scroll-area');\n        scrollArea && scrollArea.scroll(0, yPos + 50);\n      }\n    }\n  }\n\n  componentDidMount() {\n    this.hideExtraPageBreaks();\n  }\n\n  componentDidUpdate() {\n    this.hideExtraPageBreaks();\n  }\n\n  render() {\n    const {\n      isLoading,\n      dashboardItems\n    } = this.props;\n    return <StaticGrid isLoading={isLoading} layout={dashboardItems} onLayoutChange={this.onLayoutChange}>\n                {this.getItemComponents(dashboardItems)}\n            </StaticGrid>;\n  }\n\n}\nPrintLayoutItemGrid.propTypes = {\n  dashboardItems: PropTypes.array,\n  isEditing: PropTypes.bool,\n  isLoading: PropTypes.bool,\n  updateDashboardLayout: PropTypes.func\n};\nPrintLayoutItemGrid.defaultProps = {\n  dashboardItems: []\n};\n\nconst mapStateToProps = state => {\n  const selectedDashboard = sGetPrintDashboardRoot(state);\n  return {\n    isLoading: sGetSelectedIsLoading(state) || !selectedDashboard,\n    dashboardItems: sGetPrintDashboardItems(state).filter(hasShape),\n    isEditing: sGetIsEditing(state)\n  };\n};\n\nexport default connect(mapStateToProps, {\n  updateDashboardLayout: acUpdatePrintDashboardLayout\n})(PrintLayoutItemGrid);","import React, { useEffect } from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport cx from 'classnames';\nimport PrintInfo from './PrintInfo';\nimport PrintActionsBar from './PrintActionsBar';\nimport PrintLayoutItemGrid from '../ItemGrid/PrintLayoutItemGrid';\nimport { acSetPrintDashboard, acAddPrintDashboardItem, acUpdatePrintDashboardItem } from '../../actions/printDashboard';\nimport { sGetSelectedId } from '../../reducers/selected';\nimport { sGetEditDashboardRoot, sGetEditDashboardItems } from '../../reducers/editDashboard';\nimport { sGetDashboardById, sGetDashboardItems } from '../../reducers/dashboards';\nimport { PAGEBREAK, PRINT_TITLE_PAGE } from '../../modules/itemTypes';\nimport { MAX_ITEM_GRID_HEIGHT } from '../../modules/gridUtil';\nimport { getPageBreakPositions } from '../../modules/printUtils';\nimport classes from './styles/PrintLayoutDashboard.module.css';\nimport './styles/print.css';\nimport './styles/print-layout.css';\n\nconst addPageBreaks = (items, addDashboardItem) => {\n  const yPosList = getPageBreakPositions(items);\n\n  for (let i = 0; i < items.length; ++i) {\n    addDashboardItem({\n      type: PAGEBREAK,\n      yPos: yPosList[i]\n    });\n  }\n};\n\nconst PrintLayoutDashboard = ({\n  dashboard,\n  items,\n  setPrintDashboard,\n  addDashboardItem,\n  updateDashboardItem,\n  fromEdit\n}) => {\n  useEffect(() => {\n    if (dashboard) {\n      setPrintDashboard(dashboard, items); // If any items are taller than one page, reduce it to one\n      // page (react-grid-layout units)\n\n      items.forEach(item => {\n        if (item.h > MAX_ITEM_GRID_HEIGHT) {\n          item.shortened = true;\n          updateDashboardItem(Object.assign({}, item, {\n            h: MAX_ITEM_GRID_HEIGHT\n          }));\n        }\n      });\n      addPageBreaks(items, addDashboardItem);\n      addDashboardItem({\n        type: PRINT_TITLE_PAGE,\n        isOneItemPerPage: false\n      });\n    }\n  }, [dashboard, items]);\n  return <div className={classes.container}>\n            {!fromEdit && <PrintActionsBar id={dashboard.id} />}\n            <div className={cx(classes.wrapper, 'scroll-area', fromEdit && classes.editView)}>\n                {!fromEdit && <PrintInfo isLayout={true} />}\n                <div className={classes.pageOuter} data-test=\"print-layout-page\">\n                    <PrintLayoutItemGrid />\n                </div>\n            </div>\n        </div>;\n};\n\nPrintLayoutDashboard.propTypes = {\n  addDashboardItem: PropTypes.func,\n  dashboard: PropTypes.object,\n  fromEdit: PropTypes.bool,\n  items: PropTypes.array,\n  setPrintDashboard: PropTypes.func,\n  updateDashboardItem: PropTypes.func\n};\n\nconst mapStateToProps = (state, ownProps) => {\n  const id = sGetSelectedId(state);\n\n  if (ownProps.fromEdit) {\n    const dashboard = sGetEditDashboardRoot(state);\n    return {\n      dashboard,\n      id,\n      items: sGetEditDashboardItems(state)\n    };\n  }\n\n  const dashboard = id ? sGetDashboardById(state, id) : null;\n  return {\n    dashboard,\n    id,\n    items: sGetDashboardItems(state)\n  };\n};\n\nexport default connect(mapStateToProps, {\n  setPrintDashboard: acSetPrintDashboard,\n  addDashboardItem: acAddPrintDashboardItem,\n  updateDashboardItem: acUpdatePrintDashboardItem\n})(PrintLayoutDashboard);","import React, { useEffect } from 'react';\nimport { connect } from 'react-redux';\nimport i18n from '@dhis2/d2-i18n';\nimport PropTypes from 'prop-types';\nimport DashboardContainer from './DashboardContainer';\nimport EditTitleBar from '../TitleBar/EditTitleBar';\nimport EditItemGrid from '../ItemGrid/EditItemGrid';\nimport EditBar from '../ControlBar/EditBar';\nimport NotSupportedNotice from './NotSupportedNotice';\nimport LayoutPrintPreview from './PrintLayoutDashboard';\nimport NoContentMessage from '../../widgets/NoContentMessage';\nimport { acSetEditDashboard } from '../../actions/editDashboard';\nimport { sGetSelectedId } from '../../reducers/selected';\nimport { sGetDashboardById, sGetDashboardItems } from '../../reducers/dashboards';\nimport { sGetIsPrintPreviewView } from '../../reducers/editDashboard';\nimport classes from './styles/EditDashboard.module.css';\n\nconst EditDashboard = props => {\n  useEffect(() => {\n    if (props.dashboard) {\n      props.setEditDashboard(props.dashboard, props.items);\n    }\n  }, [props.dashboard]);\n\n  const renderGrid = () => {\n    if (props.isPrintPreviewView) {\n      return <LayoutPrintPreview fromEdit={true} />;\n    }\n\n    return <DashboardContainer>\n                <EditTitleBar />\n                <EditItemGrid />\n            </DashboardContainer>;\n  };\n\n  return <>\n            <div className={classes.container}>\n                <EditBar />\n                {props.updateAccess ? renderGrid() : <NoContentMessage text={i18n.t('No access')} />}\n            </div>\n            <div className={classes.notice}>\n                <NotSupportedNotice message={i18n.t('Editing dashboards on small screens is not supported. Resize your screen to return to edit mode.')} />\n            </div>\n        </>;\n};\n\nEditDashboard.propTypes = {\n  dashboard: PropTypes.object,\n  isPrintPreviewView: PropTypes.bool,\n  items: PropTypes.array,\n  setEditDashboard: PropTypes.func,\n  updateAccess: PropTypes.bool\n};\n\nconst mapStateToProps = state => {\n  const id = sGetSelectedId(state);\n  const dashboard = id ? sGetDashboardById(state, id) : null;\n  const updateAccess = dashboard && dashboard.access ? dashboard.access.update : false;\n  return {\n    dashboard,\n    updateAccess,\n    items: sGetDashboardItems(state),\n    isPrintPreviewView: sGetIsPrintPreviewView(state)\n  };\n};\n\nexport default connect(mapStateToProps, {\n  setEditDashboard: acSetEditDashboard\n})(EditDashboard);","import React, { useEffect } from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport i18n from '@dhis2/d2-i18n';\nimport DashboardContainer from './DashboardContainer';\nimport EditBar from '../ControlBar/EditBar';\nimport EditTitleBar from '../TitleBar/EditTitleBar';\nimport EditItemGrid from '../ItemGrid/EditItemGrid';\nimport LayoutPrintPreview from './PrintLayoutDashboard';\nimport NotSupportedNotice from './NotSupportedNotice';\nimport { acSetEditNewDashboard } from '../../actions/editDashboard';\nimport { sGetIsPrintPreviewView } from '../../reducers/editDashboard';\nimport classes from './styles/NewDashboard.module.css';\n\nconst NewDashboard = props => {\n  useEffect(() => {\n    props.setNewDashboard();\n  }, []);\n  return <div>\n            <div className={classes.container}>\n                <EditBar />\n                {props.isPrintPreviewView ? <LayoutPrintPreview fromEdit={true} /> : <DashboardContainer>\n                        <EditTitleBar />\n                        <EditItemGrid />\n                    </DashboardContainer>}\n            </div>\n            <div className={classes.notice}>\n                <NotSupportedNotice className={classes.notSupportedNotice} message={i18n.t('Creating dashboards on small screens is not supported. Resize your screen to return to create mode.')} />\n            </div>\n        </div>;\n};\n\nNewDashboard.propTypes = {\n  isPrintPreviewView: PropTypes.bool,\n  setNewDashboard: PropTypes.func\n};\n\nconst mapStateToProps = state => ({\n  isPrintPreviewView: sGetIsPrintPreviewView(state)\n});\n\nexport default connect(mapStateToProps, {\n  setNewDashboard: acSetEditNewDashboard\n})(NewDashboard);","import React from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport cx from 'classnames';\nimport StaticGrid from './StaticGrid';\nimport { Item } from '../Item/Item';\nimport { hasShape } from '../../modules/gridUtil';\nimport { PRINT } from '../Dashboard/dashboardModes';\nimport { sGetSelectedIsLoading } from '../../reducers/selected';\nimport { sGetPrintDashboardRoot, sGetPrintDashboardItems } from '../../reducers/printDashboard';\nimport { orArray } from '../../modules/util';\n\nconst PrintItemGrid = ({\n  isLoading,\n  dashboardItems\n}) => {\n  const getItemComponent = item => <div key={item.i} className={cx(item.type, 'print', 'oipp')}>\n            <Item item={item} dashboardMode={PRINT} />\n        </div>;\n\n  const getItemComponents = items => items.map(item => getItemComponent(item));\n\n  return <StaticGrid isLoading={isLoading} className=\"print\" layout={dashboardItems}>\n            {getItemComponents(dashboardItems)}\n        </StaticGrid>;\n};\n\nPrintItemGrid.propTypes = {\n  dashboardItems: PropTypes.array,\n  isLoading: PropTypes.bool\n};\n\nconst mapStateToProps = state => {\n  const selectedDashboard = sGetPrintDashboardRoot(state);\n  return {\n    isLoading: sGetSelectedIsLoading(state) || !selectedDashboard,\n    dashboardItems: orArray(sGetPrintDashboardItems(state)).filter(hasShape)\n  };\n};\n\nexport default connect(mapStateToProps)(PrintItemGrid);","import React, { useEffect } from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport sortBy from 'lodash/sortBy';\nimport PrintInfo from './PrintInfo';\nimport PrintActionsBar from './PrintActionsBar';\nimport PrintItemGrid from '../ItemGrid/PrintItemGrid';\nimport { acSetPrintDashboard, acAddPrintDashboardItem, acRemovePrintDashboardItem, acUpdatePrintDashboardItem } from '../../actions/printDashboard';\nimport { sGetSelectedId } from '../../reducers/selected';\nimport { sGetDashboardById, sGetDashboardItems } from '../../reducers/dashboards';\nimport { PAGEBREAK, PRINT_TITLE_PAGE, SPACER } from '../../modules/itemTypes';\nimport { MAX_ITEM_GRID_HEIGHT_OIPP, MAX_ITEM_GRID_WIDTH_OIPP } from '../../modules/gridUtil';\nimport classes from './styles/PrintDashboard.module.css';\nimport './styles/print.css';\nimport './styles/print-oipp.css';\n\nconst PrintDashboard = ({\n  dashboard,\n  items,\n  setPrintDashboard,\n  addDashboardItem,\n  updateDashboardItem,\n  removeDashboardItem\n}) => {\n  useEffect(() => {\n    if (dashboard) {\n      //sort the items by Y pos so they print in order of top to bottom\n      const sortedItems = sortBy(items, ['y', 'x']);\n      setPrintDashboard(dashboard, sortedItems); // remove spacers - don't want empty pages\n\n      let spacerCount = 0;\n      items.forEach(item => {\n        if (item.type === SPACER) {\n          spacerCount += 1;\n          removeDashboardItem(item.id);\n        }\n      }); // Resize the items to the full page size\n\n      items.forEach(item => {\n        updateDashboardItem(Object.assign({}, item, {\n          w: MAX_ITEM_GRID_WIDTH_OIPP,\n          h: MAX_ITEM_GRID_HEIGHT_OIPP\n        }));\n      }); // insert page breaks into the document flow to create the \"pages\"\n      // when previewing the print\n\n      for (let i = 0; i < (items.length - spacerCount) * 2; i += 2) {\n        addDashboardItem({\n          type: PAGEBREAK,\n          position: i,\n          isStatic: false\n        });\n      }\n\n      addDashboardItem({\n        type: PRINT_TITLE_PAGE,\n        isOneItemPerPage: true\n      });\n    }\n  }, [dashboard, items]);\n  return <div className={classes.container}>\n            <PrintActionsBar id={dashboard.id} />\n            <div className={classes.wrapper}>\n                <PrintInfo isLayout={false} />\n                <div className={classes.pageOuter} data-test=\"print-oipp-page\">\n                    <PrintItemGrid />\n                </div>\n            </div>\n        </div>;\n};\n\nPrintDashboard.propTypes = {\n  addDashboardItem: PropTypes.func,\n  dashboard: PropTypes.object,\n  items: PropTypes.array,\n  removeDashboardItem: PropTypes.func,\n  setPrintDashboard: PropTypes.func,\n  updateDashboardItem: PropTypes.func\n};\n\nconst mapStateToProps = state => {\n  const id = sGetSelectedId(state);\n  const dashboard = id ? sGetDashboardById(state, id) : null;\n  return {\n    dashboard,\n    id,\n    items: sGetDashboardItems(state)\n  };\n};\n\nexport default connect(mapStateToProps, {\n  setPrintDashboard: acSetPrintDashboard,\n  addDashboardItem: acAddPrintDashboardItem,\n  removeDashboardItem: acRemovePrintDashboardItem,\n  updateDashboardItem: acUpdatePrintDashboardItem\n})(PrintDashboard);","import React, { useState, useEffect } from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport isEmpty from 'lodash/isEmpty';\nimport i18n from '@dhis2/d2-i18n';\nimport { Layer, CenteredContent, CircularLoader } from '@dhis2/ui';\nimport { Redirect } from 'react-router-dom';\nimport DashboardsBar from '../ControlBar/ViewControlBar/DashboardsBar';\nimport NoContentMessage from '../../widgets/NoContentMessage';\nimport ViewDashboard from './ViewDashboard';\nimport EditDashboard from './EditDashboard';\nimport NewDashboard from './NewDashboard';\nimport PrintDashboard from './PrintDashboard';\nimport PrintLayoutDashboard from './PrintLayoutDashboard';\nimport { tSelectDashboard } from '../../actions/dashboards';\nimport { acClearEditDashboard } from '../../actions/editDashboard';\nimport { sDashboardsIsFetching, sGetAllDashboards } from '../../reducers/dashboards';\nimport { sGetSelectedId, NON_EXISTING_DASHBOARD_ID } from '../../reducers/selected';\nimport { EDIT, NEW, VIEW, PRINT, PRINT_LAYOUT, isPrintMode, isEditMode } from './dashboardModes';\nimport { useWindowDimensions } from '../WindowDimensionsProvider';\nimport { isSmallScreen } from '../../modules/smallScreen';\n\nconst setHeaderbarVisibility = mode => {\n  const header = document.getElementsByTagName('header')[0];\n\n  if (isPrintMode(mode)) {\n    header.classList.add('hidden');\n  } else {\n    header.classList.remove('hidden');\n  }\n};\n\nconst dashboardMap = {\n  [VIEW]: <ViewDashboard />,\n  [EDIT]: <EditDashboard />,\n  [NEW]: <NewDashboard />,\n  [PRINT]: <PrintDashboard />,\n  [PRINT_LAYOUT]: <PrintLayoutDashboard />\n};\n\nconst Dashboard = ({\n  id,\n  mode,\n  dashboardsLoaded,\n  dashboardsIsEmpty,\n  routeId,\n  selectDashboard,\n  clearEditDashboard\n}) => {\n  const {\n    width\n  } = useWindowDimensions();\n  const [redirectUrl, setRedirectUrl] = useState(null);\n  useEffect(() => {\n    setHeaderbarVisibility(mode);\n  }, [mode]);\n  useEffect(() => {\n    if (isSmallScreen(width) && isEditMode(mode)) {\n      const redirectUrl = routeId ? `/${routeId}` : '/';\n      setRedirectUrl(redirectUrl);\n    } else {\n      setRedirectUrl(null);\n    }\n  }, [mode]);\n  useEffect(() => {\n    if (!isEditMode(mode)) {\n      clearEditDashboard();\n    }\n  }, [mode]);\n  useEffect(() => {\n    if (dashboardsLoaded && !dashboardsIsEmpty) {\n      selectDashboard(routeId);\n    }\n  }, [dashboardsLoaded, dashboardsIsEmpty, routeId, mode]);\n\n  if (!dashboardsLoaded) {\n    return <Layer translucent>\n                <CenteredContent>\n                    <CircularLoader />\n                </CenteredContent>\n            </Layer>;\n  }\n\n  if (redirectUrl) {\n    return <Redirect to={redirectUrl} />;\n  }\n\n  if (mode === NEW) {\n    return dashboardMap[mode];\n  }\n\n  if (dashboardsIsEmpty) {\n    return <>\n                <DashboardsBar />\n                <NoContentMessage text={i18n.t('No dashboards found. Use the + button to create a new dashboard.')} />\n            </>;\n  }\n\n  if (id === NON_EXISTING_DASHBOARD_ID) {\n    return <>\n                <DashboardsBar />\n                <NoContentMessage text={i18n.t('Requested dashboard not found')} />\n            </>;\n  }\n\n  if (id === null) {\n    return <Layer translucent>\n                <CenteredContent>\n                    <CircularLoader />\n                </CenteredContent>\n            </Layer>;\n  }\n\n  return dashboardMap[mode];\n};\n\nDashboard.propTypes = {\n  dashboardsIsEmpty: PropTypes.bool,\n  dashboardsLoaded: PropTypes.bool,\n  id: PropTypes.string,\n  match: PropTypes.object,\n  // provided by the react-router-dom\n  mode: PropTypes.string,\n  routeId: PropTypes.string,\n  selectDashboard: PropTypes.func\n};\n\nconst mapStateToProps = (state, ownProps) => {\n  const dashboards = sGetAllDashboards(state);\n  return {\n    dashboardsIsEmpty: isEmpty(dashboards),\n    dashboardsLoaded: !sDashboardsIsFetching(state),\n    id: sGetSelectedId(state),\n    routeId: ownProps.match?.params?.dashboardId || null\n  };\n};\n\nexport default connect(mapStateToProps, {\n  selectDashboard: tSelectDashboard,\n  clearEditDashboard: acClearEditDashboard\n})(Dashboard);","import React from 'react';\nimport { connect } from 'react-redux';\nimport { AlertBar, AlertStack } from '@dhis2/ui';\nimport PropTypes from 'prop-types';\nimport { sGetAlertMessage } from '../../reducers/alert';\nimport { acClearAlertMessage } from '../../actions/alert';\nexport const Alert = ({\n  message,\n  onClose\n}) => message ? <AlertStack>\n            <AlertBar onHidden={onClose} permanent>\n                {message}\n            </AlertBar>\n        </AlertStack> : null;\nAlert.propTypes = {\n  message: PropTypes.string,\n  onClose: PropTypes.func\n};\n\nconst mapStateToProps = state => ({\n  message: sGetAlertMessage(state)\n});\n\nexport default connect(mapStateToProps, {\n  onClose: acClearAlertMessage\n})(Alert);","// filter out CATEGORY that are not of type ATTRIBUTE\nconst filteredDimensions = dimensions => dimensions.filter(dim => dim.dimensionType !== 'CATEGORY' || dim.dimensionType === 'CATEGORY' && dim.dataDimensionType === 'ATTRIBUTE');\n\nexport default filteredDimensions;","import React, { useEffect } from 'react';\nimport { HashRouter as Router, Route, Switch } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { CssVariables } from '@dhis2/ui';\nimport { useD2 } from '@dhis2/app-runtime-adapter-d2';\nimport { apiFetchDimensions } from '@dhis2/analytics';\nimport { useDataEngine } from '@dhis2/app-runtime';\nimport Dashboard from './Dashboard/Dashboard';\nimport AlertBar from './AlertBar/AlertBar';\nimport { useSystemSettings } from './SystemSettingsProvider';\nimport { acReceivedUser } from '../actions/user';\nimport { tFetchDashboards } from '../actions/dashboards';\nimport { tSetControlBarRows } from '../actions/controlBar';\nimport { tSetShowDescription } from '../actions/selected';\nimport { acSetDimensions } from '../actions/dimensions';\nimport getFilteredDimensions from '../modules/getFilteredDimensions';\nimport { EDIT, VIEW, NEW, PRINT, PRINT_LAYOUT } from './Dashboard/dashboardModes';\nimport './App.css';\n\nconst App = props => {\n  const {\n    d2\n  } = useD2({});\n  const dataEngine = useDataEngine();\n  const {\n    settings\n  } = useSystemSettings();\n  useEffect(() => {\n    props.setCurrentUser(d2.currentUser);\n    props.fetchDashboards();\n    props.setControlBarRows();\n    props.setShowDescription();\n  }, []);\n  useEffect(() => {\n    const fetchDimensions = async () => {\n      try {\n        const dimensions = await apiFetchDimensions(dataEngine, settings.displayNameProperty);\n        props.setDimensions(getFilteredDimensions(dimensions));\n      } catch (e) {\n        console.error(e);\n      }\n    };\n\n    if (settings.displayNameProperty) {\n      fetchDimensions();\n    }\n  }, [settings]);\n  return <>\n            <CssVariables colors spacers />\n            <Router>\n                <Switch>\n                    <Route exact path=\"/\" render={props => <Dashboard {...props} mode={VIEW} />} />\n                    <Route exact path=\"/new\" render={props => <Dashboard {...props} mode={NEW} />} />\n                    <Route exact path=\"/:dashboardId\" render={props => <Dashboard {...props} mode={VIEW} />} />\n                    <Route exact path=\"/:dashboardId/edit\" render={props => <Dashboard {...props} mode={EDIT} />} />\n                    <Route exact path=\"/:dashboardId/printoipp\" render={props => <Dashboard {...props} mode={PRINT} />} />\n                    <Route exact path=\"/:dashboardId/printlayout\" render={props => <Dashboard {...props} mode={PRINT_LAYOUT} />} />\n                </Switch>\n            </Router>\n            <AlertBar />\n        </>;\n};\n\nApp.propTypes = {\n  fetchDashboards: PropTypes.func.isRequired,\n  setControlBarRows: PropTypes.func.isRequired,\n  setCurrentUser: PropTypes.func.isRequired,\n  setDimensions: PropTypes.func.isRequired,\n  setShowDescription: PropTypes.func.isRequired\n};\nconst mapDispatchToProps = {\n  fetchDashboards: tFetchDashboards,\n  setControlBarRows: tSetControlBarRows,\n  setCurrentUser: acReceivedUser,\n  setDimensions: acSetDimensions,\n  setShowDescription: tSetShowDescription\n};\nexport default connect(null, mapDispatchToProps)(App);","import { RECEIVED_USER } from '../reducers/user';\nexport const acReceivedUser = value => ({\n  type: RECEIVED_USER,\n  value\n});","import { SET_DIMENSIONS } from '../reducers/dimensions';\nexport const acSetDimensions = dimensions => ({\n  type: SET_DIMENSIONS,\n  value: dimensions\n});","/** @module reducers/selected */\nimport { validateReducer } from '../modules/util';\nexport const SET_STYLE = 'SET_STYLE';\nexport const DEFAULT_STATE_STYLE = 'LIST';\n/**\n * Reducer functions that computes and returns the new state based on the given action\n * @function\n * @param {Object} state The current state\n * @param {Object} action The action to be evaluated\n */\n\nconst style = (state = DEFAULT_STATE_STYLE, action) => {\n  switch (action.type) {\n    case SET_STYLE:\n      return validateReducer(action.value, DEFAULT_STATE_STYLE);\n\n    default:\n      return state;\n  }\n};\n\nexport default style;\n/**\n * Selectors that point to specific props in the state object\n * @function\n * @param {Object} state\n * @returns {Object}\n */\n\nexport const sGetStyleRoot = state => state.style;","import { combineReducers } from 'redux';\nimport dashboards from './dashboards';\nimport selected from './selected';\nimport dashboardsFilter from './dashboardsFilter';\nimport controlBar from './controlBar';\nimport visualizations from './visualizations';\nimport editDashboard from './editDashboard';\nimport printDashboard from './printDashboard';\nimport messages from './messages';\nimport user from './user';\nimport alert from './alert';\nimport itemFilters from './itemFilters';\nimport style from './style';\nimport dimensions from './dimensions';\nimport activeModalDimension from './activeModalDimension';\nexport default combineReducers({\n  dashboards,\n  selected,\n  dashboardsFilter,\n  controlBar,\n  visualizations,\n  messages,\n  user,\n  editDashboard,\n  printDashboard,\n  itemFilters,\n  style,\n  alert,\n  dimensions,\n  activeModalDimension\n});","import { createStore, applyMiddleware, compose } from 'redux';\nimport { createLogger } from 'redux-logger';\nimport thunk from 'redux-thunk';\nimport reducer from './reducers';\n\nconst configureStore = dataEngine => {\n  const middleware = [thunk.withExtraArgument(dataEngine)]; // Enable Redux devtools if extension is installed instead of redux-logger\n\n  const composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\n\n  if (!window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ && process.env.NODE_ENV !== 'production') {\n    middleware.push(createLogger());\n  }\n\n  return createStore(reducer, composeEnhancers(applyMiddleware(...middleware)));\n};\n\nexport default configureStore;","//------------------------------------------------------------------------------\n// <auto-generated>\n// This code was generated by d2-i18n-generate.\n//\n// Changes to this file may cause incorrect behavior and will be lost if\n// the code is regenerated.\n// </auto-generated>\n//------------------------------------------------------------------------------\nimport i18n from '@dhis2/d2-i18n';\nimport arTranslations from './ar/translations.json';\nimport ar_IQTranslations from './ar_IQ/translations.json';\nimport ckbTranslations from './ckb/translations.json';\nimport csTranslations from './cs/translations.json';\nimport daTranslations from './da/translations.json';\nimport enTranslations from './en/translations.json';\nimport esTranslations from './es/translations.json';\nimport frTranslations from './fr/translations.json';\nimport idTranslations from './id/translations.json';\nimport kmTranslations from './km/translations.json';\nimport loTranslations from './lo/translations.json';\nimport myTranslations from './my/translations.json';\nimport nbTranslations from './nb/translations.json';\nimport prsTranslations from './prs/translations.json';\nimport psTranslations from './ps/translations.json';\nimport ptTranslations from './pt/translations.json';\nimport pt_BRTranslations from './pt_BR/translations.json';\nimport ruTranslations from './ru/translations.json';\nimport svTranslations from './sv/translations.json';\nimport tetTranslations from './tet/translations.json';\nimport tgTranslations from './tg/translations.json';\nimport ukTranslations from './uk/translations.json';\nimport urTranslations from './ur/translations.json';\nimport uzTranslations from './uz/translations.json';\nimport uz_CyrlTranslations from './uz_Cyrl/translations.json';\nimport uz_LatnTranslations from './uz_Latn/translations.json';\nimport viTranslations from './vi/translations.json';\nimport zhTranslations from './zh/translations.json';\nimport zh_CNTranslations from './zh_CN/translations.json';\nconst namespace = 'default';\ni18n.addResources('ar', namespace, arTranslations);\ni18n.addResources('ar_IQ', namespace, ar_IQTranslations);\ni18n.addResources('ckb', namespace, ckbTranslations);\ni18n.addResources('cs', namespace, csTranslations);\ni18n.addResources('da', namespace, daTranslations);\ni18n.addResources('en', namespace, enTranslations);\ni18n.addResources('es', namespace, esTranslations);\ni18n.addResources('fr', namespace, frTranslations);\ni18n.addResources('id', namespace, idTranslations);\ni18n.addResources('km', namespace, kmTranslations);\ni18n.addResources('lo', namespace, loTranslations);\ni18n.addResources('my', namespace, myTranslations);\ni18n.addResources('nb', namespace, nbTranslations);\ni18n.addResources('prs', namespace, prsTranslations);\ni18n.addResources('ps', namespace, psTranslations);\ni18n.addResources('pt', namespace, ptTranslations);\ni18n.addResources('pt_BR', namespace, pt_BRTranslations);\ni18n.addResources('ru', namespace, ruTranslations);\ni18n.addResources('sv', namespace, svTranslations);\ni18n.addResources('tet', namespace, tetTranslations);\ni18n.addResources('tg', namespace, tgTranslations);\ni18n.addResources('uk', namespace, ukTranslations);\ni18n.addResources('ur', namespace, urTranslations);\ni18n.addResources('uz', namespace, uzTranslations);\ni18n.addResources('uz_Cyrl', namespace, uz_CyrlTranslations);\ni18n.addResources('uz_Latn', namespace, uz_LatnTranslations);\ni18n.addResources('vi', namespace, viTranslations);\ni18n.addResources('zh', namespace, zhTranslations);\ni18n.addResources('zh_CN', namespace, zh_CNTranslations);\nexport default i18n;","import React from 'react';\nimport { MuiThemeProvider, createMuiTheme } from '@material-ui/core/styles';\nimport dhis2theme from '@dhis2/d2-ui-core/theme/mui3.theme';\nimport { Provider as ReduxProvider } from 'react-redux';\nimport { D2Shim } from '@dhis2/app-runtime-adapter-d2';\nimport { useDataEngine } from '@dhis2/app-runtime';\nimport WindowDimensionsProvider from './components/WindowDimensionsProvider';\nimport SystemSettingsProvider from './components/SystemSettingsProvider';\nimport App from './components/App';\nimport configureStore from './configureStore';\nimport './AppWrapper.css';\nimport './locales';\n\nconst muiTheme = () => createMuiTheme(dhis2theme);\n\nconst d2Config = {\n  schemas: ['chart', 'map', 'report', 'reportTable', 'eventChart', 'eventReport', 'dashboard', 'organisationUnit', 'userGroup']\n}; // TODO: ER and EV plugins require the auth header in development mode.\n// Remove this when these plugins are rewritten\n\nconst authorization = process.env.REACT_APP_DHIS2_AUTHORIZATION || null;\n\nif (authorization) {\n  d2Config.headers = {\n    Authorization: authorization\n  };\n}\n\nconst AppWrapper = () => {\n  const dataEngine = useDataEngine();\n  return <ReduxProvider store={configureStore(dataEngine)}>\n            <MuiThemeProvider theme={muiTheme()}>\n                <D2Shim d2Config={d2Config} i18nRoot=\"./i18n\">\n                    {({\n          d2\n        }) => {\n          if (!d2) {\n            // TODO: Handle errors in d2 initialization\n            return null;\n          }\n\n          return <SystemSettingsProvider>\n                                <WindowDimensionsProvider>\n                                    <App />\n                                </WindowDimensionsProvider>\n                            </SystemSettingsProvider>;\n        }}\n                </D2Shim>\n            </MuiThemeProvider>\n        </ReduxProvider>;\n};\n\nexport default AppWrapper;","import isObject from 'lodash/isObject';\nimport { itemTypeMap } from './itemTypes';\nexport const getVisualizationFromItem = item => {\n  if (!isObject(item)) {\n    return null;\n  }\n\n  const propName = itemTypeMap[item.type]?.propName;\n  return item[propName] || item.reportTable || item.chart || item.map || item.eventReport || item.eventChart || {};\n};\nexport const getVisualizationId = item => getVisualizationFromItem(item).id;\nexport const getVisualizationName = item => getVisualizationFromItem(item).name;","import { REPORT_TABLE, CHART, MAP, EVENT_REPORT, EVENT_CHART, itemTypeMap } from '../../../../modules/itemTypes';\nimport { getVisualizationId } from '../../../../modules/item';\nimport getGridItemDomId from '../../../../modules/getGridItemDomId';\nimport { loadExternalScript } from '../../../../modules/loadExternalScript'; //external plugins\n\nconst itemTypeToGlobalVariable = {\n  [MAP]: 'mapPlugin',\n  [EVENT_REPORT]: 'eventReportPlugin',\n  [EVENT_CHART]: 'eventChartPlugin'\n};\nconst itemTypeToScriptPath = {\n  [MAP]: '/dhis-web-maps/map.js',\n  [EVENT_REPORT]: '/dhis-web-event-reports/eventreport.js',\n  [EVENT_CHART]: '/dhis-web-event-visualizer/eventchart.js'\n};\n\nconst hasIntegratedPlugin = type => [CHART, REPORT_TABLE].includes(type);\n\nconst getPlugin = async type => {\n  if (hasIntegratedPlugin(type)) {\n    return true;\n  }\n\n  const pluginName = itemTypeToGlobalVariable[type];\n  return global[pluginName];\n};\n\nconst fetchPlugin = async (type, baseUrl) => {\n  const globalName = itemTypeToGlobalVariable[type];\n\n  if (global[globalName]) {\n    return global[globalName]; // Will be a promise if fetch is in progress\n  }\n\n  const scripts = [];\n\n  if (type === EVENT_REPORT || type === EVENT_CHART) {\n    if (process.env.NODE_ENV === 'production') {\n      scripts.push('./vendor/babel-polyfill-6.26.0.min.js');\n      scripts.push('./vendor/jquery-3.3.1.min.js');\n      scripts.push('./vendor/jquery-migrate-3.0.1.min.js');\n    } else {\n      scripts.push('./vendor/babel-polyfill-6.26.0.js');\n      scripts.push('./vendor/jquery-3.3.1.js');\n      scripts.push('./vendor/jquery-migrate-3.0.1.js');\n    }\n  }\n\n  scripts.push(baseUrl + itemTypeToScriptPath[type]);\n  const scriptsPromise = Promise.all(scripts.map(loadExternalScript)).then(() => global[globalName] // At this point, has been replaced with the real thing\n  );\n  global[globalName] = scriptsPromise;\n  return await scriptsPromise;\n};\n\nexport const pluginIsAvailable = type => hasIntegratedPlugin(type) || itemTypeToGlobalVariable[type];\nexport const loadPlugin = async (type, config, credentials) => {\n  if (!pluginIsAvailable(type)) {\n    return;\n  }\n\n  const plugin = await fetchPlugin(type, credentials.baseUrl);\n\n  if (!(plugin && plugin.load)) {\n    return;\n  }\n\n  plugin.url = credentials.baseUrl;\n  plugin.loadingIndicator = true;\n  plugin.dashboard = true;\n\n  if (credentials.auth) {\n    plugin.auth = credentials.auth;\n  }\n\n  plugin.load(config);\n};\nexport const getLink = (item, baseUrl) => {\n  const appUrl = itemTypeMap[item.type].appUrl(getVisualizationId(item));\n  return `${baseUrl}/${appUrl}`;\n};\nexport const load = async (item, visualization, {\n  credentials,\n  activeType,\n  options = {}\n}) => {\n  const config = { ...visualization,\n    ...options,\n    el: getGridItemDomId(item.id)\n  };\n  const type = activeType || item.type;\n  await loadPlugin(type, config, credentials);\n};\nexport const resize = (item, isFullscreen) => {\n  const plugin = getPlugin(item.type);\n\n  if (plugin && plugin.resize) {\n    plugin.resize(getGridItemDomId(item.id), isFullscreen);\n  }\n};\nexport const unmount = (item, activeType) => {\n  const plugin = getPlugin(activeType);\n\n  if (plugin && plugin.unmount) {\n    plugin.unmount(getGridItemDomId(item.id));\n  }\n};","const getGridItemDomId = id => `item-${id}`;\n\nexport default getGridItemDomId;","// extracted by mini-css-extract-plugin\nmodule.exports = {\"itemHeaderWrap\":\"ItemHeader_itemHeaderWrap__JcBP7\",\"itemTitle\":\"ItemHeader_itemTitle__34rHa\",\"itemActionsWrap\":\"ItemHeader_itemActionsWrap__Gx3D9\"};"],"sourceRoot":""}
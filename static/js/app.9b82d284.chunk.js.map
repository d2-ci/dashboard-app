{"version":3,"sources":["D2App/components/ItemGrid/styles/ItemGrid.module.css","D2App/components/ControlBar/ViewControlBar/styles/DashboardItemChip.module.css","D2App/components/ControlBar/ViewControlBar/styles/ClearButton.module.css","D2App/components/ControlBar/ViewControlBar/styles/Filter.module.css","D2App/components/ControlBar/ViewControlBar/styles/Content.module.css","D2App/components/ControlBar/ViewControlBar/styles/ShowMoreButton.module.css","D2App/components/ControlBar/ViewControlBar/styles/DragHandle.module.css","D2App/components/ControlBar/ViewControlBar/styles/DashboardsBar.module.css","D2App/components/Dashboard/styles/DashboardContainer.module.css","D2App/modules/itemTypes.js","D2App/modules/util.js","D2App/components/ItemFilter/styles/FilterSelector.module.css","D2App/components/TitleBar/styles/ViewTitleBar.module.css","D2App/components/Item/VisualizationItem/Visualization/styles/NoVisualizationMessage.module.css","D2App/components/Item/VisualizationItem/Visualization/styles/LoadingMask.module.css","D2App/components/Item/VisualizationItem/styles/FatalErrorBoundary.module.css","D2App/components/Item/ItemHeader/styles/DeleteItemButton.module.css","D2App/components/Item/ItemHeader/styles/PrintItemInfo.module.css","D2App/components/Item/VisualizationItem/styles/ItemFooter.module.css","D2App/components/Item/ListItem/Item.module.css","D2App/components/Item/PrintTitlePageItem/styles/Item.module.css","D2App/components/FilterBar/styles/FilterBadge.module.css","D2App/components/FilterBar/styles/FilterBar.module.css","D2App/components/Dashboard/styles/ViewDashboard.module.css","D2App/components/ItemSelector/styles/HeaderMenuItem.module.css","D2App/components/ItemSelector/styles/ContentMenuItem.module.css","D2App/components/ItemSelector/styles/CategorizedMenuGroup.module.css","D2App/components/ItemSelector/styles/ItemSelector.module.css","D2App/components/TitleBar/styles/EditTitleBar.module.css","D2App/components/ControlBar/styles/ConfirmDeleteDialog.module.css","D2App/components/ControlBar/styles/EditBar.module.css","D2App/components/Dashboard/styles/NotSupportedNotice.module.css","D2App/components/Dashboard/styles/PrintInfo.module.css","D2App/components/Dashboard/styles/PrintActionsBar.module.css","D2App/components/Dashboard/styles/PrintLayoutDashboard.module.css","D2App/components/Dashboard/styles/EditDashboard.module.css","D2App/components/Dashboard/styles/NewDashboard.module.css","D2App/components/Dashboard/styles/PrintDashboard.module.css","D2App/components/WindowDimensionsProvider.js","D2App/api/settings.js","D2App/components/SystemSettingsProvider.js","D2App/icons/Star.js","D2App/api/dataStatistics.js","D2App/components/ControlBar/ViewControlBar/DashboardItemChip.js","D2App/icons/AddCircle.js","D2App/icons/Search.js","D2App/icons/Clear.js","D2App/components/ControlBar/ViewControlBar/ClearButton.js","D2App/reducers/dashboardsFilter.js","D2App/modules/gridUtil.js","D2App/modules/smallScreen.js","D2App/components/ControlBar/ViewControlBar/Filter.js","D2App/actions/dashboardsFilter.js","D2App/modules/uiBackendItemConverter.js","D2App/reducers/dashboards.js","D2App/reducers/selected.js","D2App/modules/getFilteredDashboards.js","D2App/components/ControlBar/ViewControlBar/Content.js","D2App/components/ControlBar/ViewControlBar/assets/icons.js","D2App/components/ControlBar/ViewControlBar/ShowMoreButton.js","D2App/components/ControlBar/ViewControlBar/DragHandle.js","D2App/components/ControlBar/ViewControlBar/controlBarDimensions.js","D2App/reducers/controlBar.js","D2App/api/userDataStore.js","D2App/api/controlBar.js","D2App/actions/controlBar.js","D2App/components/ControlBar/ViewControlBar/DashboardsBar.js","D2App/widgets/NoContentMessage.js","D2App/components/Dashboard/DashboardContainer.js","D2App/components/Item/VisualizationItem/assets/icons.js","D2App/api/description.js","D2App/reducers/user.js","D2App/reducers/dimensions.js","D2App/reducers/itemFilters.js","D2App/actions/itemFilters.js","D2App/reducers/messages.js","D2App/api/messages.js","D2App/components/Item/MessagesItem/actions.js","D2App/reducers/alert.js","D2App/actions/alert.js","D2App/reducers/visualizations.js","D2App/actions/visualizations.js","D2App/api/metadata.js","D2App/api/index.js","D2App/api/dashboards.js","D2App/actions/selected.js","D2App/api/localStorage.js","D2App/actions/dashboards.js","D2App/components/ItemFilter/FilterDialog.js","D2App/reducers/activeModalDimension.js","D2App/actions/activeModalDimension.js","D2App/components/ItemFilter/FilterSelector.js","D2App/components/TitleBar/ViewTitleBar.js","D2App/api/starDashboard.js","D2App/components/Item/VisualizationItem/Visualization/DefaultPlugin.js","D2App/components/Item/VisualizationItem/Visualization/NoVisualizationMessage.js","D2App/components/Item/VisualizationItem/Visualization/MapPlugin.js","D2App/components/Item/VisualizationItem/Visualization/LoadingMask.js","D2App/components/Item/VisualizationItem/Visualization/getFilteredVisualization.js","D2App/components/Item/VisualizationItem/Visualization/getVisualizationConfig.js","D2App/modules/memoizeOne.js","D2App/components/Item/VisualizationItem/Visualization/Visualization.js","D2App/components/Item/VisualizationItem/FatalErrorBoundary.js","D2App/components/Item/ItemHeader/ViewItemActions.js","D2App/components/Item/ItemHeader/DeleteItemButton.js","D2App/reducers/editDashboard.js","D2App/api/editDashboard.js","D2App/actions/editDashboard.js","D2App/components/Item/ItemHeader/EditItemActions.js","D2App/icons/Info.js","D2App/components/Item/ItemHeader/PrintItemInfo.js","D2App/components/Dashboard/dashboardModes.js","D2App/components/Item/ItemHeader/ItemHeader.js","D2App/components/Item/VisualizationItem/ItemHeaderButtons.js","D2App/components/Item/VisualizationItem/ItemFooter.js","D2App/components/Item/VisualizationItem/Item.js","D2App/widgets/Line.js","D2App/components/Item/MessagesItem/Item.js","D2App/components/Item/NotSupportedItem/Item.js","D2App/icons/Description.js","D2App/icons/Delete.js","D2App/components/Item/ListItem/Item.js","D2App/components/Item/ListItem/actions.js","D2App/reducers/printDashboard.js","D2App/components/Item/TextItem/Item.js","D2App/components/Item/AppItem/Item.js","D2App/components/Item/SpacerItem/Item.js","D2App/components/Item/PageBreakItem/Item.js","D2App/components/Item/PrintTitlePageItem/Item.js","D2App/components/Item/Item.js","D2App/components/Item/ProgressiveLoadingContainer.js","D2App/components/ItemGrid/ViewItemGrid.js","D2App/components/FilterBar/FilterBadge.js","D2App/components/FilterBar/FilterBar.js","D2App/actions/printDashboard.js","D2App/components/Dashboard/ViewDashboard.js","D2App/components/ItemSelector/ItemSearchField.js","D2App/components/ItemSelector/HeaderMenuItem.js","D2App/icons/Launch.js","D2App/components/ItemSelector/ContentMenuItem.js","D2App/components/ItemSelector/actions.js","D2App/components/ItemSelector/selectableItems.js","D2App/components/ItemSelector/CategorizedMenuGroup.js","D2App/components/ItemSelector/SinglesMenuGroup.js","D2App/components/ItemSelector/ItemSelector.js","D2App/components/TitleBar/EditTitleBar.js","D2App/components/ItemGrid/EditItemGrid.js","D2App/components/ControlBar/ConfirmDeleteDialog.js","D2App/components/ControlBar/EditBar.js","D2App/components/Dashboard/NotSupportedNotice.js","D2App/components/Dashboard/PrintInfo.js","D2App/icons/LessHorizontal.js","D2App/components/Dashboard/PrintActionsBar.js","D2App/modules/printUtils.js","D2App/components/ItemGrid/StaticGrid.js","D2App/components/ItemGrid/PrintLayoutItemGrid.js","D2App/components/Dashboard/PrintLayoutDashboard.js","D2App/components/Dashboard/EditDashboard.js","D2App/components/Dashboard/NewDashboard.js","D2App/components/ItemGrid/PrintItemGrid.js","D2App/components/Dashboard/PrintDashboard.js","D2App/components/Dashboard/Dashboard.js","D2App/components/AlertBar/AlertBar.js","D2App/modules/getFilteredDimensions.js","D2App/components/App.js","D2App/actions/user.js","D2App/actions/dimensions.js","D2App/reducers/style.js","D2App/reducers/index.js","D2App/configureStore.js","D2App/locales/index.js","D2App/AppWrapper.js","D2App/modules/item.js","D2App/components/Item/VisualizationItem/Visualization/plugin.js","D2App/modules/getGridItemDomId.js","D2App/components/Item/ItemHeader/styles/ItemHeader.module.css"],"names":["module","exports","VISUALIZATION","REPORT_TABLE","CHART","MAP","EVENT_REPORT","EVENT_CHART","APP","REPORTS","RESOURCES","USERS","MESSAGES","TEXT","SPACER","PAGEBREAK","PRINT_TITLE_PAGE","DOMAIN_TYPE_AGGREGATE","DOMAIN_TYPE_TRACKER","isVisualizationType","item","itemTypeMap","type","hasMapView","itemType","domainType","isTrackerDomainType","getDefaultItemCount","defaultItemCount","getAppName","appName","id","endPointName","propName","pluralTitle","i18n","t","appUrl","dataStatisticsName","Date","getTime","getEndPointName","getDataStatisticsName","getItemUrl","baseUrl","url","launchUrl","getItemIcon","TableIcon","ChartIcon","MapIcon","ExtensionIcon","DescriptionIcon","PersonIcon","FontDownloadIcon","EmailIcon","CropFreeIcon","NotInterestedIcon","orArray","param","Array","isArray","orObject","isObject","arrayToIdMap","array","reduce","obj","formatDate","value","uiLocale","global","Intl","DateTimeFormat","locale","year","month","day","format","substr","replace","validateReducer","defaultValue","undefined","WindowDimensionsCtx","createContext","windowDims","height","window","innerHeight","width","innerWidth","WindowDimensionsProvider","children","dimensions","setDimensions","useState","useEffect","handleResize","debounce","addEventListener","removeEventListener","Provider","useWindowDimensions","useContext","DEFAULT_SETTINGS","displayNameProperty","keyDashboardContextMenuItemOpenInRelevantApp","keyDashboardContextMenuItemShowInterpretationsAndDetails","keyDashboardContextMenuItemSwitchViewType","keyDashboardContextMenuItemViewFullscreen","keyGatherAnalyticalObjectStatisticsInDashboardViews","SYSTEM_SETTINGS_REMAPPINGS","renameSystemSettings","settings","Object","keys","mapped","key","query","resource","params","SystemSettingsCtx","SystemSettingsProvider","setSettings","engine","useDataEngine","async","systemSettings","settingsQuery","assign","fetchData","useSystemSettings","StarIcon","className","xmlns","viewBox","d","fill","apiPostDataStatistics","eventType","d2","getInstance","Api","getApi","post","DashboardItemChip","starred","selected","label","dashboardId","onClick","chipProps","selectedState","classes","unselected","icon","Star","debouncedPostStatistics","link","to","data-test","AddCircleIcon","colors","teal600","SearchIcon","small","ClearIcon","grey800","ClearButton","onClear","button","Clear","color","SET_DASHBOARDS_FILTER","CLEAR_DASHBOARDS_FILTER","sGetDashboardsFilter","state","dashboardsFilter","GRID_COMPACT_TYPE","GRID_ROW_HEIGHT_PX","MARGIN_PX","MARGIN_SM_PX","GRID_PADDING_PX","NEW_ITEM_SHAPE","x","y","w","h","isNonNegativeInteger","Number","isInteger","hasShape","withShape","items","map","i","col","row","Math","floor","itemWidth","MAX_ITEM_GRID_WIDTH","getShape","originalH","getGridWidth","windowWidthPx","getGridUnitsForSmFromPx","hPx","gridUnitHeightPx","round","getProportionalHeight","wPx","getItemWHPx","ratioWH","newWPx","newHPx","getGridItemProperties","itemId","minH","getPageBreakItemShape","yPos","isStatic","GRID_COLUMNS","static","getPrintTitlePageItemShape","isOneItemPerPage","gridUnits","colOrRowSize","marginPx","max","isSmallScreen","mapDispatchToProps","setDashboardsFilter","clearDashboardsFilter","connect","filterText","expanded","onKeypressEnter","onSearchClicked","focusedClassName","setFocusedClassName","inputFocused","setInputFocus","cx","container","collapsed","searchButton","Search","searchIcon","searchArea","onFocus","event","preventDefault","focused","onBlur","searchIconContainer","searchIconSmall","searchIconLarge","input","placeholder","onChange","target","onKeyUp","keyCode","ref","focus","clearButtonContainer","spacerContent","emptyTextItemContent","isTextType","text","convertUiItemsToBackend","isUiSpacerType","convertBackendItemsToUi","isBackendSpacerType","gridProperties","SET_DASHBOARDS","ADD_DASHBOARDS","SET_DASHBOARD_STARRED","SET_DASHBOARD_DISPLAY_NAME","SET_DASHBOARD_ITEMS","DEFAULT_STATE_DASHBOARDS","byId","EMPTY_DASHBOARD","updateDashboardProp","prop","sGetDashboardsRoot","dashboards","sGetDashboardById","sDashboardsIsFetching","sGetAllDashboards","sGetDashboardItems","sGetStarredDashboards","values","filter","dashboard","sGetUnstarredDashboards","getCustomDashboards","data","arrayFrom","name","displayName","description","displayDescription","favorite","owner","user","created","split","join","lastUpdated","access","numberOfItems","dashboardItems","length","SET_SELECTED_ID","SET_SELECTED_ISLOADING","SET_SELECTED_SHOWDESCRIPTION","SET_SELECTED_ITEM_ACTIVE_TYPE","CLEAR_SELECTED_ITEM_ACTIVE_TYPES","DEFAULT_STATE_SELECTED_SHOWDESCRIPTION","DEFAULT_STATE_SELECTED_ITEM_ACTIVE_TYPES","combineReducers","action","isLoading","showDescription","itemActiveTypes","activeType","sGetSelectedRoot","sGetSelectedId","sGetSelectedIsLoading","sGetSelectedShowDescription","sGetSelectedItemActiveType","getFilteredDashboards","filteredDashboards","arraySort","toLowerCase","includes","withRouter","selectedId","history","onChipClicked","onSelectDashboard","push","controlsSmall","Filter","chipsContainer","controlsLarge","newLink","AddCircle","ChevronDown","ChevronUp","ShowMoreButton","dashboardBarIsExpanded","disabled","containerRef","useRef","buttonLabel","onButtonClicked","buttonEl","current","MouseEvent","bubbles","cancelable","dispatchEvent","content","placement","onMouseOver","onMouseOut","showMore","aria-label","DragHandle","onHeightChanged","setDragging","startingY","setStartingY","onDrag","e","stopPropagation","currentY","clientY","requestAnimationFrame","onEndDrag","draghandle","onMouseDown","SET_CONTROLBAR_USER_ROWS","userRows","sGetControlBarUserRows","controlBar","sGetControlBarRoot","NAMESPACE","hasNamespace","currentUser","dataStore","has","getNamespace","get","create","apiPostUserDataStoreValue","set","apiGetUserDataStoreValue","namespace","find","k","console","log","KEY_CONTROLBAR_ROWS","acSetControlBarUserRows","rows","updateUserRows","onExpandedChanged","dragging","userRowsChanged","createRef","rootElement","document","documentElement","style","setProperty","apiPostControlBarRows","scrollToTop","scroll","toggleExpanded","cancelExpanded","newHeight","newRows","min","spacer","NoContentMessage","padding","textAlign","fontSize","fontWeight","grey600","DashboardContainer","covered","ThreeDots","SpeechBubble","margin","fillRule","transform","Warning","Fullscreen","ExitFullscreen","KEY_SHOW_DESCRIPTION","RECEIVED_USER","DEFAULT_STATE_USER","username","isSuperuser","sGetUserUsername","SET_DIMENSIONS","DEFAULT_DIMENSIONS","getDimensionById","DIMENSION_ID_PERIOD","DIMENSION_ID_ORGUNIT","sGetDimensions","CLEAR_ITEM_FILTERS","SET_ITEM_FILTERS","ADD_ITEM_FILTER","REMOVE_ITEM_FILTER","DEFAULT_STATE_ITEM_FILTERS","sGetItemFiltersRoot","itemFilters","sGetNamedItemFilters","createSelector","filters","arr","dimension","acRemoveItemFilter","RECEIVED_MESSAGES","sGetMessagesRoot","messages","messageConversationsQuery","fields","order","pageSize","tGetMessages","dataEngine","messageConversations","error","getMessages","dispatch","err","SET_ALERT_MESSAGE","CLEAR_ALERT_MESSAGE","sGetAlertMessage","alert","acClearAlertMessage","ADD_VISUALIZATION","CLEAR_VISUALIZATIONS","DEFAULT_STATE_VISUALIZATIONS","isEmpty","p","sGetVisualization","visualizations","sGetVisualizationsRoot","acAddVisualization","getIdNameFields","rename","getDimensionFields","withItems","arrayClean","getAxesFields","getFavoriteFields","withDimensions","withOptions","getFavoritesFields","apiFetchVisualization","getVisualizationId","onError","getDashboardItemsFields","withFavorite","getDashboardFields","dashboardsQuery","paging","dashboardQuery","deleteDashboardMutation","apiFetchDashboard","variables","acSetSelectedId","acSetSelectedIsLoading","acSetSelectedShowDescription","tSetSelectedDashboardById","getState","alertTimeout","setTimeout","onSuccess","acAppendDashboards","customDashboard","acSetDashboardItems","localStorage","setItem","forEach","getVisualizationFromItem","clearTimeout","tFetchDashboards","acSetDashboards","apiFetchDashboards","tDeleteDashboard","mutate","apiDeleteDashboard","Promise","resolve","initiallySelectedItems","addItemFilter","removeItemFilter","onClose","setFilters","useD2","onSelectItems","dimensionId","onDeselectItems","itemIdsToRemove","newList","onReorderItems","itemIds","oldList","reorderedList","dataTest","position","large","commonProps","onSelect","onDeselect","onReorder","selectedItems","selectedPeriods","ouItems","renderDialogContent","secondary","primary","filterItems","SET_ACTIVE_MODAL_DIMENSION","CLEAR_ACTIVE_MODAL_DIMENSION","DEFAULT_STATE_ACTIVE_MODAL_DIMENSION","sGetActiveModalDimension","activeModalDimension","acSetActiveModalDimension","clearActiveModalDimension","setActiveModalDimension","props","showPopover","setShowPopover","onCloseDialog","buttonContainer","onClickOutside","reference","arrow","popover","onDimensionClick","selectedIds","ViewTitleBar","setDashboardStarred","updateShowDescription","moreOptionsIsOpen","setMoreOptionsIsOpen","sharingDialogIsOpen","setSharingDialogIsOpen","redirectUrl","setRedirectUrl","warningAlert","useAlert","msg","warning","toggleSharingDialog","toggleMoreOptions","StarBorder","showHideDescriptionLabel","toggleStarredDashboardLabel","onToggleStarredDashboard","isStarred","mutation","getStarDashboardMutation","getUnstarDashboardMutation","apiStarDashboard","then","catch","show","buttonRef","userAccess","descriptionClasses","descContainer","desc","noDesc","getMoreButton","useSmall","moreText","titleBar","title","actions","star","strip","update","editLink","manage","shareButton","moreButton","moreButtonSmall","dense","apiPostShowDescription","open","onRequestClose","defaultProps","DefaultPlugin","visualization","options","useConfig","credentials","auth","defaultHeaders","Authorization","prevItem","prevActiveType","load","unmount","shouldPluginReload","reloadAllowed","visChanged","getGridItemDomId","NoVisualizationMessage","message","MapPlugin","applyFilters","mapViews","mapView","layer","pluginIsAvailable","hideTitle","LoadingMask","center","getFilteredVisualization","visRows","visColumns","columns","visFilters","dimensionFound","dimensionObjects","getWithoutId","object","getVisualizationConfig","originalType","extractedMapView","mv","VIS_TYPE_COLUMN","VIS_TYPE_PIVOT_TABLE","layout","getAdaptedUiLayoutByType","memoizeOne","fn","lastArgs","lastValue","args","every","arg","Visualization","React","Component","constructor","super","pluginLoaded","onLoadingComplete","this","setState","memoizedGetFilteredVisualization","memoizedGetVisualizationConfig","render","availableHeight","availableWidth","pluginProps","d2Config","forDashboard","ownProps","FatalErrorBoundary","errorFound","componentDidCatch","info","ViewItemActions","actionButtons","itemActionsWrap","DeleteItemButton","deleteItemButton","red500","RECEIVED_EDIT_DASHBOARD","RECEIVED_NOT_EDITING","START_NEW_DASHBOARD","RECEIVED_TITLE","RECEIVED_DESCRIPTION","ADD_DASHBOARD_ITEM","REMOVE_DASHBOARD_ITEM","UPDATE_DASHBOARD_ITEM","RECEIVED_DASHBOARD_LAYOUT","SET_PRINT_PREVIEW_VIEW","CLEAR_PRINT_PREVIEW_VIEW","DEFAULT_STATE_EDIT_DASHBOARD","NEW_DASHBOARD_STATE","printPreviewView","sGetEditDashboardRoot","editDashboard","sGetIsEditing","sGetIsPrintPreviewView","sGetEditDashboardItems","createDashboardMutation","updateDashboardMutation","generatePayload","acClearEditDashboard","acAddDashboardItem","itemPropName","generateUid","gridItemProperties","shape","acUpdateDashboardItem","acRemoveDashboardItem","tSaveDashboard","dashboardToSave","response","uid","updateDashboard","postDashboard","WarningIcon","PrintWarning","Info","EDIT","NEW","VIEW","PRINT","PRINT_LAYOUT","isEditMode","mode","isPrintMode","isViewMode","ItemHeader","forwardRef","dashboardMode","isShortened","rest","Actions","EditItemActions","PrintItemInfo","getItemActionsMap","itemHeaderWrap","itemTitle","iconFill","ItemHeaderButtons","menuIsOpen","setMenuIsOpen","isOpen","onSelectActiveType","openInRelevantApp","showInterpretationsAndDetails","switchViewType","fullscreenAllowedInSettings","isTrackerType","onViewTable","closeMenu","onViewChart","onViewMap","canViewAs","isSingleValue","isYearOverYear","VIS_TYPE_GAUGE","VIS_TYPE_PIE","interpretationMenuLabel","activeFooter","ViewAsMenuItems","fullscreenAllowed","fullscreenSupported","isFullscreen","onToggleFullscreen","href","getLink","onToggleFooter","ItemFooter","line","scrollContainer","Item","showFooter","configLoaded","isFullscreenSupported","el","querySelector","itemDomElSelector","requestFullscreen","webkitRequestFullscreen","handleFullscreenChange","fullscreenElement","webkitFullscreenElement","pluginResize","exitFullscreen","webkitExitFullscreen","getUniqueKey","uniqueId","onToggleItemExpanded","setActiveType","getActiveType","isEditing","getAvailableHeight","calculatedHeight","smallOriginalH","getItemHeightPx","headerRef","clientHeight","memoizedGetContentHeight","contentRef","offsetHeight","getAvailableWidth","rect","getBoundingClientRect","ITEM_CONTENT_PADDING","measuredHeight","preferMeasured","updateVisualization","onfullscreenchange","onwebkitfullscreenchange","componentWillUnmount","componentDidUpdate","prevProps","gridWidth","setViewportSize","clientWidth","getVisualizationName","shortened","Consumer","Function","prototype","backgroundColor","grey200","border","Line","PRIVATE","messageTypes","VALIDATION_RESULT","TICKET","SYSTEM","list","listStyleType","paddingLeft","seeAll","marginBottom","sender","lineHeight","snippet","maxHeight","overflow","MessagesContainer","setUiLocale","userSettings","getUiLocale","getMessageHref","msgIdentifier","messageType","modeClass","latestMsg","slice","getMessageSender","readClass","read","msgDate","location","messageCount","getMessageItems","NotSupportedItem","display","justifyContent","alignItems","align","grey500","DeleteIcon","getItemTitle","tRemoveListItemContent","dashboardItem","listItemType","newContent","contentItems","index","findIndex","getContentItems","contentItem","deleteButton","deletebutton","deleteicon","grey900","Description","itemicon","SET_PRINT_DASHBOARD","CLEAR_PRINT_DASHBOARD","ADD_PRINT_DASHBOARD_ITEM","SET_PRINT_DASHBOARD_LAYOUT","REMOVE_PRINT_DASHBOARD_ITEM","UPDATE_PRINT_DASHBOARD_ITEM","DEFAULT_STATE_PRINT_DASHBOARD","DEFAULT_DASHBOARD_ITEMS","NEW_PRINT_DASHBOARD_STATE","sGetPrintDashboardRoot","printDashboard","sGetIsPrinting","sGetPrintDashboardItems","textDiv","whiteSpace","textField","fontStretch","marginTop","onChangeText","updatedItem","viewItem","textDivStyle","editItem","onEdit","multiline","fullWidth","printItem","textItem","getIframeSrc","appDetails","iframeSrc","ouIds","ouFilter","path","appKey","system","installedApps","app","dashboardWidget","src","SpacerItem","PageBreakItem","PrintTitlePageItem","titlePage","filterTitle","listItems","filterListItem","val","filterList","getItemFilterList","viewDashboard","sGetPrintDashboardName","sGetPrintDashboardDescription","GridItem","VisualizationItem","MessagesItem","ListItem","TextItem","AppItem","getGridItem","ProgressiveLoadingContainer","shouldLoad","shouldLoadHandler","handlerOptions","passive","checkShouldLoad","bufferPx","bufferFactor","bottom","top","removeHandler","registerHandler","debounceMs","from","getElementsByClassName","componentDidMount","eventProps","pick","selectedDashboard","expandedItems","setExpandedItems","displayItems","setDisplayItems","layoutSm","setLayoutSm","setGridWidth","getItemsWithAdjustedHeight","sortBy","clickedId","isExpanded","newExpandedItems","expandedItem","expandedHeight","translucent","grid","rowHeight","cols","lg","sm","breakpoints","SMALL_SCREEN_BREAKPOINT","layouts","compactType","containerPadding","isDraggable","isResizable","draggableCancel","onWidthChange","containerWidth","getItemComponent","openFilterModal","removeFilter","badge","count","removeButton","FilterBar","bar","acSetPrintDashboard","acClearPrintDashboard","acAddPrintDashboardItem","acUpdatePrintDashboardItem","dashboardIsEditing","dashboardIsPrinting","clearEditDashboard","clearPrintDashboard","controlbarExpanded","setControlbarExpanded","cover","ViewItemGrid","ItemSearchField","HeaderMenuItem","LaunchIcon","LaunchLink","launchLink","rel","InsertButton","buttonInsert","ContentMenuItem","onInsert","visType","ItemIcon","renderedItemIcon","visTypeIcons","menuItem","marginRight","singleItems","header","categorizedItems","listItemTypes","tAddListItemContent","dashboardItemIndex","hasMore","onChangeItemsLimit","seeMore","setSeeMore","addItem","newItem","itemUrl","showMoreButton","category","addToDashboard","ItemSelector","setIsOpen","setFilter","setItems","maxOptions","setMaxOptions","Set","queryString","filterStr","updateMaxOptions","delete","add","inputRef","maxWidth","menu","itemCount","allItems","concat","EditTitleBar","onChangeTitle","onChangeDescription","section","titleDescription","_","itemSelector","acUpdateDashboardLayout","onLayoutChange","newLayout","onResizeStop","oldItem","ConfirmDeleteDialog","dashboardName","onDeleteConfirmed","onContinueEditing","destructive","saveFailedMessage","deleteAccess","updateAccess","sGetIsNewDashboard","isPrintPreviewView","clearPrintPreview","saveDashboard","onDelete","onDiscardChanges","onTranslate","acSetDashboardDisplayName","showPrintPreview","translationDlgIsOpen","setTranslationDlgIsOpen","setDashboard","confirmDeleteDlgIsOpen","setConfirmDeleteDlgIsOpen","failureAlert","critical","dboard","onConfirmDelete","onSave","newId","onPrintPreview","onTranslationsSaved","translations","dbLocale","translation","property","toggleTranslationDialog","discardBtnText","editBar","controls","objectToTranslate","modelDefinition","fieldsToTranslate","onTranslationSaved","onTranslationError","NotSupportedNotice","noticeContainer","PrintInfo","isLayout","layoutStyle","printSuggestions","divider","LessHorizontalIcon","PrintActionsBar","getExitPrintButton","isSmall","buttonSmall","buttonLarge","LessHorizontal","getPrintButton","print","getTransformYPx","elStyle","transformY","match","parseInt","isLeapPage","n","getMultiple","factor","multiple","StaticGrid","PrintLayoutItemGrid","updateDashboardLayout","isFirstPageBreak","pageBreaks","sortedPageBreaks","itemClassNames","getItemComponents","hideExtraPageBreaks","sortedElements","elements","types","elementsWithBoundingRect","classList","indexOf","bottomY","getDomGridItemsSortedByYPos","querySelectorAll","pageBreakBottom","lastItemBottom","foundNonPageBreak","thisItemBottom","gridElement","firstBreak","scrollArea","addPageBreaks","addDashboardItem","yPosList","pageNum","getPageBreakPositions","fromEdit","setPrintDashboard","updateDashboardItem","wrapper","editView","pageOuter","setEditDashboard","notice","setNewDashboard","notSupportedNotice","removeDashboardItem","sortedItems","spacerCount","dashboardMap","dashboardsIsEmpty","dashboardsLoaded","routeId","selectDashboard","dashboardToSelect","preferredId","getItem","dash","sGetDashboardsSortedByStarred","getElementsByTagName","remove","setHeaderbarVisibility","onHidden","permanent","filteredDimensions","dim","dimensionType","dataDimensionType","fetchDashboards","setControlBarRows","controlBarRows","apiGetControlBarRows","setCurrentUser","setShowDescription","apiGetShowDescription","apiFetchDimensions","getFilteredDimensions","fetchDimensions","spacers","exact","AlertBar","DEFAULT_STATE_STYLE","objectClean","conversations","$merge","d2Object","keyUiLocale","authorities","newState","$splice","$unshift","idToRemove","stateItems","layoutHasChanged","newStateItems","stateItem","si","configureStore","middleware","thunk","withExtraArgument","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","createStore","reducer","applyMiddleware","addResources","arTranslations","ar_IQTranslations","ckbTranslations","csTranslations","daTranslations","enTranslations","esTranslations","frTranslations","idTranslations","kmTranslations","loTranslations","myTranslations","nbTranslations","prsTranslations","psTranslations","ptTranslations","pt_BRTranslations","ruTranslations","svTranslations","tetTranslations","tgTranslations","ukTranslations","urTranslations","uzTranslations","uz_CyrlTranslations","uz_LatnTranslations","viTranslations","zhTranslations","zh_CNTranslations","schemas","authorization","process","REACT_APP_DHIS2_AUTHORIZATION","headers","AppWrapper","store","theme","createMuiTheme","dhis2theme","i18nRoot","reportTable","chart","eventReport","eventChart","itemTypeToExternalPlugin","getPlugin","hasIntegratedPlugin","config","plugin","loadingIndicator","loadPlugin","resize"],"mappings":"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","file":"static/js/app.9b82d284.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"grid\":\"ItemGrid_grid__1omnd\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"link\":\"DashboardItemChip_link__BW7Y-\",\"icon\":\"DashboardItemChip_icon__3bSyL\",\"selected\":\"DashboardItemChip_selected__3HtWQ\",\"unselected\":\"DashboardItemChip_unselected__aM-zh\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"ClearButton_button__3WukP\",\"icon\":\"ClearButton_icon__2ErJB\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Filter_container__wim8v\",\"searchArea\":\"Filter_searchArea__3NG5o\",\"input\":\"Filter_input__3nbSP\",\"focused\":\"Filter_focused__E3c7W\",\"searchIcon\":\"Filter_searchIcon__2SzJD\",\"searchIconSmall\":\"Filter_searchIconSmall__2EqS1\",\"searchIconLarge\":\"Filter_searchIconLarge__UOHRT\",\"searchButton\":\"Filter_searchButton__3MTLn\",\"searchIconContainer\":\"Filter_searchIconContainer__21GtO\",\"clearButtonContainer\":\"Filter_clearButtonContainer__36uqp\",\"collapsed\":\"Filter_collapsed__3NFNh\",\"expanded\":\"Filter_expanded__HFSRS\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Content_container__DYubU\",\"newLink\":\"Content_newLink__3PXmM\",\"controlsSmall\":\"Content_controlsSmall__2YcgC\",\"controlsLarge\":\"Content_controlsLarge__3D9AJ\",\"collapsed\":\"Content_collapsed__3ozGX\",\"expanded\":\"Content_expanded__22Kcl\",\"chipsContainer\":\"Content_chipsContainer__1W0Fq\",\"controls\":\"Content_controls__1eJVS\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"ShowMoreButton_container__W_K20\",\"showMore\":\"ShowMoreButton_showMore__1Db77\",\"disabled\":\"ShowMoreButton_disabled__3KzHL\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"draghandle\":\"DragHandle_draghandle__2j24a\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"DashboardsBar_container__2T0a0\",\"content\":\"DashboardsBar_content__2eVDk\",\"expanded\":\"DashboardsBar_expanded__2srLP\",\"spacer\":\"DashboardsBar_spacer__1W4--\",\"collapsed\":\"DashboardsBar_collapsed__3f7ol\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"DashboardContainer_container__2A1Hw\",\"covered\":\"DashboardContainer_covered__QHw50\"};","import i18n from '@dhis2/d2-i18n';\nimport TableIcon from '@material-ui/icons/ViewList';\nimport ChartIcon from '@material-ui/icons/InsertChart';\nimport MapIcon from '@material-ui/icons/Public';\nimport ExtensionIcon from '@material-ui/icons/Extension';\nimport DescriptionIcon from '@material-ui/icons/Description';\nimport PersonIcon from '@material-ui/icons/Person';\nimport FontDownloadIcon from '@material-ui/icons/FontDownload';\nimport EmailIcon from '@material-ui/icons/Email';\nimport CropFreeIcon from '@material-ui/icons/CropFree';\nimport NotInterestedIcon from '@material-ui/icons/NotInterested'; // Item types\n\nexport const VISUALIZATION = 'VISUALIZATION';\nexport const REPORT_TABLE = 'REPORT_TABLE';\nexport const CHART = 'CHART';\nexport const MAP = 'MAP';\nexport const EVENT_REPORT = 'EVENT_REPORT';\nexport const EVENT_CHART = 'EVENT_CHART';\nexport const APP = 'APP';\nexport const REPORTS = 'REPORTS';\nexport const RESOURCES = 'RESOURCES';\nexport const USERS = 'USERS';\nexport const MESSAGES = 'MESSAGES';\nexport const TEXT = 'TEXT';\nexport const SPACER = 'SPACER';\nexport const PAGEBREAK = 'PAGEBREAK';\nexport const PRINT_TITLE_PAGE = 'PRINT_TITLE_PAGE';\nconst DOMAIN_TYPE_AGGREGATE = 'AGGREGATE';\nconst DOMAIN_TYPE_TRACKER = 'TRACKER'; // Dashboard helpers\n\nexport const isVisualizationType = item => !!itemTypeMap[item.type].isVisualizationType;\nexport const hasMapView = itemType => itemTypeMap[itemType].domainType === DOMAIN_TYPE_AGGREGATE;\nexport const isTrackerDomainType = itemType => itemTypeMap[itemType].domainType === DOMAIN_TYPE_TRACKER;\nexport const getDefaultItemCount = itemType => itemTypeMap[itemType].defaultItemCount || 5;\nexport const getAppName = itemType => itemTypeMap[itemType].appName || ''; // Item type map\n\nexport const itemTypeMap = {\n  [VISUALIZATION]: {\n    id: VISUALIZATION,\n    endPointName: 'visualizations',\n    propName: 'visualization',\n    pluralTitle: i18n.t('Visualizations'),\n    appUrl: id => `dhis-web-data-visualizer/#/${id}`,\n    appName: 'Data Visualizer',\n    defaultItemCount: 10\n  },\n  [REPORT_TABLE]: {\n    id: REPORT_TABLE,\n    endPointName: 'visualizations',\n    dataStatisticsName: 'REPORT_TABLE_VIEW',\n    propName: 'visualization',\n    pluralTitle: i18n.t('Pivot tables'),\n    domainType: DOMAIN_TYPE_AGGREGATE,\n    isVisualizationType: true,\n    appUrl: id => `dhis-web-data-visualizer/#/${id}`,\n    appName: 'Data Visualizer'\n  },\n  [CHART]: {\n    id: CHART,\n    endPointName: 'visualizations',\n    propName: 'visualization',\n    dataStatisticsName: 'CHART_VIEW',\n    pluralTitle: i18n.t('Charts'),\n    domainType: DOMAIN_TYPE_AGGREGATE,\n    isVisualizationType: true,\n    appUrl: id => `dhis-web-data-visualizer/#/${id}`,\n    appName: 'Data Visualizer'\n  },\n  [MAP]: {\n    id: MAP,\n    endPointName: 'maps',\n    dataStatisticsName: 'MAP_VIEW',\n    propName: 'map',\n    pluralTitle: i18n.t('Maps'),\n    domainType: DOMAIN_TYPE_AGGREGATE,\n    isVisualizationType: true,\n    appUrl: id => `dhis-web-maps/?id=${id}`,\n    appName: 'Maps'\n  },\n  [EVENT_REPORT]: {\n    id: EVENT_REPORT,\n    endPointName: 'eventReports',\n    propName: 'eventReport',\n    pluralTitle: i18n.t('Event reports'),\n    domainType: DOMAIN_TYPE_TRACKER,\n    isVisualizationType: true,\n    appUrl: id => `dhis-web-event-reports/?id=${id}`,\n    appName: 'Event Reports'\n  },\n  [EVENT_CHART]: {\n    id: EVENT_CHART,\n    endPointName: 'eventCharts',\n    propName: 'eventChart',\n    pluralTitle: i18n.t('Event charts'),\n    domainType: DOMAIN_TYPE_TRACKER,\n    isVisualizationType: true,\n    appUrl: id => `dhis-web-event-visualizer/?id=${id}`,\n    appName: 'Event Visualizer'\n  },\n  [APP]: {\n    endPointName: 'apps',\n    propName: 'appKey',\n    pluralTitle: i18n.t('Apps')\n  },\n  [REPORTS]: {\n    id: REPORTS,\n    endPointName: 'reports',\n    propName: 'reports',\n    pluralTitle: i18n.t('Reports'),\n    appUrl: (id, type) => {\n      switch (type) {\n        case 'HTML':\n          return `dhis-web-reports/#/standard-report/view/${id}`;\n\n        case 'JASPER_REPORT_TABLE':\n        case 'JASPER_JDBC':\n        default:\n          return `api/reports/${id}/data.pdf?t=${new Date().getTime()}`;\n      }\n    }\n  },\n  [RESOURCES]: {\n    id: RESOURCES,\n    endPointName: 'resources',\n    propName: 'resources',\n    pluralTitle: i18n.t('Resources'),\n    appUrl: id => `api/documents/${id}/data`\n  },\n  [USERS]: {\n    id: USERS,\n    endPointName: 'users',\n    propName: 'users',\n    pluralTitle: i18n.t('Users'),\n    appUrl: id => `dhis-web-dashboard-integration/profile.action?id=${id}`\n  },\n  [TEXT]: {\n    id: TEXT,\n    propName: 'text'\n  },\n  [MESSAGES]: {\n    propName: 'messages'\n  },\n  [SPACER]: {\n    propName: 'text'\n  },\n  [PAGEBREAK]: {\n    propName: 'text'\n  },\n  [PRINT_TITLE_PAGE]: {\n    propName: 'text'\n  }\n};\nexport const getEndPointName = type => itemTypeMap[type].endPointName;\nexport const getDataStatisticsName = type => itemTypeMap[type].dataStatisticsName || null;\nexport const getItemUrl = (type, item, baseUrl) => {\n  let url;\n\n  if (type === APP) {\n    url = item.launchUrl;\n  }\n\n  if (itemTypeMap[type] && itemTypeMap[type].appUrl) {\n    url = `${baseUrl}/${itemTypeMap[type].appUrl(item.id, item.type)}`;\n  }\n\n  return url;\n};\nexport const getItemIcon = type => {\n  switch (type) {\n    case REPORT_TABLE:\n    case EVENT_REPORT:\n    case REPORTS:\n      return TableIcon;\n\n    case CHART:\n    case EVENT_CHART:\n      return ChartIcon;\n\n    case MAP:\n      return MapIcon;\n\n    case APP:\n      return ExtensionIcon;\n\n    case RESOURCES:\n      return DescriptionIcon;\n\n    case USERS:\n      return PersonIcon;\n\n    case TEXT:\n      return FontDownloadIcon;\n\n    case MESSAGES:\n      return EmailIcon;\n\n    case SPACER:\n      return CropFreeIcon;\n\n    default:\n      return NotInterestedIcon;\n  }\n};","import isObject from 'lodash/isObject'; // validation\n\nexport function orNull(param) {\n  return param === undefined ? null : param;\n}\nexport function orArray(param) {\n  return Array.isArray(param) ? param : [];\n}\nexport function orObject(param) {\n  return isObject(param) ? param : {};\n} // array\n\nexport function arrayGetById(array, id) {\n  return array.find(item => item.id === id);\n} // object\n\nexport function arrayToIdMap(array) {\n  return array.reduce((obj, item) => {\n    obj[item.id] = item;\n    return obj;\n  }, {});\n} // date\n\nexport function getDate() {\n  const y = Math.floor(Math.random() * 3) + 2015;\n  const M = Math.floor(Math.random() * 12) + 1;\n  const d = Math.floor(Math.random() * 28) + 1; // const h = Math.floor(Math.random() * 23) + 1;\n  // const m = Math.floor(Math.random() * 59) + 1;\n  // const s = Math.floor(Math.random() * 59) + 1;\n\n  return new Date(`${y}-${M}-${d}`).toJSON().replace('T', ' ').substr(0, 10);\n}\nexport const formatDate = (value, uiLocale) => {\n  if (typeof global.Intl !== 'undefined' && Intl.DateTimeFormat) {\n    const locale = uiLocale || 'en';\n    return new Intl.DateTimeFormat(locale, {\n      year: 'numeric',\n      month: 'short',\n      day: 'numeric'\n    }).format(new Date(value));\n  }\n\n  return value.substr(0, 19).replace('T', ' ');\n};\n/**\n * Sorts an array of objects based on provided date property\n *\n * @param {Array} items Array of objects\n * @param {String} dateProp Name of the date property to be used for sorting\n * @param {Boolean} ascending Whether to sort ascending or descending\n */\n\nexport const sortByDate = (items, dateProp, ascending = true) => {\n  const values = Object.values(items);\n  values.sort((a, b) => {\n    const aDate = new Date(a[dateProp]);\n    const bDate = new Date(b[dateProp]);\n    return ascending ? aDate - bDate : bDate - aDate;\n  });\n  return values;\n}; // reducer validator\n\nexport const validateReducer = (value, defaultValue) => value === undefined || value === null ? defaultValue : value;","// extracted by mini-css-extract-plugin\nmodule.exports = {\"buttonContainer\":\"FilterSelector_buttonContainer__O_amY\",\"popover\":\"FilterSelector_popover__3TVEp\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"ViewTitleBar_container__VivO0\",\"actions\":\"ViewTitleBar_actions__2UTRz\",\"editLink\":\"ViewTitleBar_editLink__d_HzW\",\"titleBar\":\"ViewTitleBar_titleBar__eiwJS\",\"star\":\"ViewTitleBar_star__26YmT\",\"strip\":\"ViewTitleBar_strip__3xR4U\",\"title\":\"ViewTitleBar_title__2GhTR\",\"descContainer\":\"ViewTitleBar_descContainer__3rF10\",\"desc\":\"ViewTitleBar_desc__3QW6Z\",\"noDesc\":\"ViewTitleBar_noDesc__Jettc\",\"moreText\":\"ViewTitleBar_moreText__3yHR0\",\"moreButtonSmall\":\"ViewTitleBar_moreButtonSmall__1ajrf\",\"shareButton\":\"ViewTitleBar_shareButton__3yEKR\",\"moreButton\":\"ViewTitleBar_moreButton__1HduK\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"message\":\"NoVisualizationMessage_message__22IPi\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"center\":\"LoadingMask_center__KHIYy\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"FatalErrorBoundary_container__3SViR\",\"icon\":\"FatalErrorBoundary_icon__2UbeP\",\"message\":\"FatalErrorBoundary_message__3FzrY\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"deleteItemButton\":\"DeleteItemButton_deleteItemButton__3TJm9\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"warning\":\"PrintItemInfo_warning__123PK\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"line\":\"ItemFooter_line__3Ko0R\",\"scrollContainer\":\"ItemFooter_scrollContainer__tuq4P\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"Item_list__1_nkQ\",\"item\":\"Item_item__3-6QE\",\"itemicon\":\"Item_itemicon__QlouX\",\"link\":\"Item_link___3c_q\",\"deleteicon\":\"Item_deleteicon__3usrl\",\"deletebutton\":\"Item_deletebutton__1DpBW\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"titlePage\":\"Item_titlePage__18CNQ\",\"name\":\"Item_name__3nuTV\",\"description\":\"Item_description__1gFQd\",\"filterTitle\":\"Item_filterTitle__2p7TQ\",\"filterList\":\"Item_filterList__qc_G3\",\"filterListItem\":\"Item_filterListItem__sPbBY\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"FilterBadge_container__22K0B\",\"badge\":\"FilterBadge_badge__28kyj\",\"removeButton\":\"FilterBadge_removeButton__3siwT\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"bar\":\"FilterBar_bar__1Ma3p\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"ViewDashboard_container__3uNdy\",\"cover\":\"ViewDashboard_cover__2SbDj\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"HeaderMenuItem_item__313hC\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"menuItem\":\"ContentMenuItem_menuItem__vbKn3\",\"launchLink\":\"ContentMenuItem_launchLink__2Nql9\",\"label\":\"ContentMenuItem_label__ANfH1\",\"buttonInsert\":\"ContentMenuItem_buttonInsert__1joHg\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"showMoreButton\":\"CategorizedMenuGroup_showMoreButton__2RbRp\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"menu\":\"ItemSelector_menu__2VYae\",\"popover\":\"ItemSelector_popover__2aDe3\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"section\":\"EditTitleBar_section__LIaIC\",\"titleDescription\":\"EditTitleBar_titleDescription__1YsU6\",\"title\":\"EditTitleBar_title__3mUbt\",\"description\":\"EditTitleBar_description__24U5X\",\"itemSelector\":\"EditTitleBar_itemSelector__1cFEp\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"content\":\"ConfirmDeleteDialog_content__EqswE\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"editBar\":\"EditBar_editBar__1d1xM\",\"controls\":\"EditBar_controls__1t0nO\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"noticeContainer\":\"NotSupportedNotice_noticeContainer__3z9Up\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"PrintInfo_container__9gH0b\",\"title\":\"PrintInfo_title__2_VZd\",\"printSuggestions\":\"PrintInfo_printSuggestions__30tcU\",\"divider\":\"PrintInfo_divider__3wzx9\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"PrintActionsBar_container__2iQp7\",\"actions\":\"PrintActionsBar_actions__2I2I0\",\"link\":\"PrintActionsBar_link__lFUmI\",\"buttonSmall\":\"PrintActionsBar_buttonSmall__27sFq\",\"buttonLarge\":\"PrintActionsBar_buttonLarge__QcrPj\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"PrintLayoutDashboard_container__3eIY-\",\"wrapper\":\"PrintLayoutDashboard_wrapper__1WDh4\",\"editView\":\"PrintLayoutDashboard_editView__1Zk_3\",\"pageOuter\":\"PrintLayoutDashboard_pageOuter__22acI\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"EditDashboard_container__EcqEU\",\"notice\":\"EditDashboard_notice__1X7zB\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"NewDashboard_container__VsR3D\",\"notice\":\"NewDashboard_notice__cTvCt\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"PrintDashboard_container__2KgcY\",\"wrapper\":\"PrintDashboard_wrapper__1O3s_\",\"pageOuter\":\"PrintDashboard_pageOuter__fl9tw\"};","import React, { createContext, useContext, useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport debounce from 'lodash/debounce';\nexport const WindowDimensionsCtx = createContext(null);\n\nconst windowDims = () => ({\n  height: window.innerHeight,\n  width: window.innerWidth\n});\n\nconst WindowDimensionsProvider = ({\n  children\n}) => {\n  const [dimensions, setDimensions] = useState(windowDims());\n  useEffect(() => {\n    const handleResize = debounce(() => {\n      setDimensions(windowDims());\n    }, 100);\n    window.addEventListener('resize', handleResize);\n    return () => {\n      window.removeEventListener('resize', handleResize);\n    };\n  }, []);\n  return <WindowDimensionsCtx.Provider value={dimensions}>\n            {children}\n        </WindowDimensionsCtx.Provider>;\n};\n\nWindowDimensionsProvider.propTypes = {\n  children: PropTypes.node.isRequired\n};\nexport default WindowDimensionsProvider;\nexport const useWindowDimensions = () => {\n  return useContext(WindowDimensionsCtx);\n};","export const DEFAULT_SETTINGS = {\n  displayNameProperty: 'displayName',\n  keyDashboardContextMenuItemOpenInRelevantApp: true,\n  keyDashboardContextMenuItemShowInterpretationsAndDetails: true,\n  keyDashboardContextMenuItemSwitchViewType: true,\n  keyDashboardContextMenuItemViewFullscreen: true,\n  keyGatherAnalyticalObjectStatisticsInDashboardViews: false\n};\nconst SYSTEM_SETTINGS = ['keyDashboardContextMenuItemOpenInRelevantApp', 'keyDashboardContextMenuItemShowInterpretationsAndDetails', 'keyDashboardContextMenuItemSwitchViewType', 'keyDashboardContextMenuItemViewFullscreen', 'keyGatherAnalyticalObjectStatisticsInDashboardViews'];\nconst SYSTEM_SETTINGS_REMAPPINGS = {\n  keyDashboardContextMenuItemOpenInRelevantApp: 'openInRelevantApp',\n  keyDashboardContextMenuItemShowInterpretationsAndDetails: 'showInterpretationsAndDetails',\n  keyDashboardContextMenuItemSwitchViewType: 'switchViewType',\n  keyDashboardContextMenuItemViewFullscreen: 'fullscreenAllowedInSettings'\n};\nexport const renameSystemSettings = settings => {\n  return Object.keys(settings).reduce((mapped, key) => {\n    mapped[SYSTEM_SETTINGS_REMAPPINGS[key] || key] = settings[key];\n    return mapped;\n  }, {});\n};\nconst query = {\n  resource: 'systemSettings',\n  params: {\n    key: SYSTEM_SETTINGS\n  }\n};\nexport default query;","import React, { useContext, useState, useEffect, createContext } from 'react';\nimport PropTypes from 'prop-types';\nimport { useDataEngine } from '@dhis2/app-runtime';\nimport settingsQuery, { renameSystemSettings, DEFAULT_SETTINGS } from '../api/settings';\nexport const SystemSettingsCtx = createContext({});\n\nconst SystemSettingsProvider = ({\n  children\n}) => {\n  const [settings, setSettings] = useState([]);\n  const engine = useDataEngine();\n  useEffect(() => {\n    async function fetchData() {\n      const {\n        systemSettings\n      } = await engine.query({\n        systemSettings: settingsQuery\n      });\n      setSettings(Object.assign({}, renameSystemSettings(DEFAULT_SETTINGS), renameSystemSettings(systemSettings)));\n    }\n\n    fetchData();\n  }, []);\n  return <SystemSettingsCtx.Provider value={{\n    settings\n  }}>\n            {children}\n        </SystemSettingsCtx.Provider>;\n};\n\nSystemSettingsProvider.propTypes = {\n  children: PropTypes.node\n};\nexport default SystemSettingsProvider;\nexport const useSystemSettings = () => useContext(SystemSettingsCtx);","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst StarIcon = ({\n  className\n}) => <svg className={className} xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\">\n        <path d=\"M0 0h24v24H0z\" fill=\"none\" />\n        <path d=\"M12 17.27L18.18 21l-1.64-7.03L22 9.24l-7.19-.61L12 2 9.19 8.63 2 9.24l5.46 4.73L5.82 21z\" />\n        <path d=\"M0 0h24v24H0z\" fill=\"none\" />\n    </svg>;\n\nStarIcon.propTypes = {\n  className: PropTypes.string\n};\nexport default StarIcon;","import { getInstance } from 'd2';\nexport const apiPostDataStatistics = async (eventType, id) => {\n  const d2 = await getInstance();\n  const url = `dataStatistics?eventType=${eventType}&favorite=${id}`;\n  d2.Api.getApi().post(url);\n};","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Chip } from '@dhis2/ui';\nimport { Link } from 'react-router-dom';\nimport debounce from 'lodash/debounce';\nimport StarIcon from '../../../icons/Star';\nimport { apiPostDataStatistics } from '../../../api/dataStatistics';\nimport classes from './styles/DashboardItemChip.module.css';\nexport const DashboardItemChip = ({\n  starred,\n  selected,\n  label,\n  dashboardId,\n  onClick\n}) => {\n  const chipProps = {\n    selected\n  };\n\n  if (starred) {\n    const selectedState = selected ? classes.selected : classes.unselected;\n    chipProps.icon = <StarIcon className={`${classes.icon} ${selectedState}`} />;\n  }\n\n  const debouncedPostStatistics = debounce(() => apiPostDataStatistics('DASHBOARD_VIEW', dashboardId), 500);\n\n  const handleClick = () => {\n    debouncedPostStatistics();\n    onClick();\n  };\n\n  return <Link className={classes.link} to={`/${dashboardId}`} onClick={handleClick} data-test=\"dashboard-chip\">\n            <Chip {...chipProps}>{label}</Chip>\n        </Link>;\n};\nDashboardItemChip.propTypes = {\n  dashboardId: PropTypes.string.isRequired,\n  label: PropTypes.string.isRequired,\n  selected: PropTypes.bool.isRequired,\n  starred: PropTypes.bool.isRequired,\n  onClick: PropTypes.func.isRequired,\n  classes: PropTypes.object\n};\nexport default DashboardItemChip;","import React from 'react';\nimport { colors } from '@dhis2/ui';\n\nconst AddCircleIcon = () => <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"32\" height=\"32\" fill={colors.teal600} viewBox=\"0 0 24 24\">\n        <path d=\"M12 2C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2zm4 11h-3v3c0 .55-.45 1-1 1s-1-.45-1-1v-3H8c-.55 0-1-.45-1-1s.45-1 1-1h3V8c0-.55.45-1 1-1s1 .45 1 1v3h3c.55 0 1 .45 1 1s-.45 1-1 1z\" />\n    </svg>;\n\nexport default AddCircleIcon;","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst SearchIcon = ({\n  className,\n  small\n}) => small ? <svg className={className} height=\"16\" viewBox=\"0 0 16 16\" width=\"16\" xmlns=\"http://www.w3.org/2000/svg\">\n            <path d=\"m6 1c2.76142375 0 5 2.23857625 5 5 0 1.20065927-.4231997 2.30247496-1.12856994 3.16441794l4.48212334 4.48202866-.7071068.7071068-4.48202866-4.48212334c-.86194298.70537024-1.96375867 1.12856994-3.16441794 1.12856994-2.76142375 0-5-2.23857625-5-5s2.23857625-5 5-5zm0 1c-2.209139 0-4 1.790861-4 4s1.790861 4 4 4 4-1.790861 4-4-1.790861-4-4-4z\" fill=\"#010101\" />\n        </svg> : <svg className={className} xmlns=\"http://www.w3.org/2000/svg\" height=\"24\" viewBox=\"0 0 24 24\" width=\"24\">\n            <path d=\"M0 0h24v24H0z\" fill=\"none\" />\n            <path d=\"M15.5 14h-.79l-.28-.27C15.41 12.59 16 11.11 16 9.5 16 5.91 13.09 3 9.5 3S3 5.91 3 9.5 5.91 16 9.5 16c1.61 0 3.09-.59 4.23-1.57l.27.28v.79l5 4.99L20.49 19l-4.99-5zm-6 0C7.01 14 5 11.99 5 9.5S7.01 5 9.5 5 14 7.01 14 9.5 11.99 14 9.5 14z\" />\n        </svg>;\n\nSearchIcon.propTypes = {\n  className: PropTypes.string,\n  small: PropTypes.bool\n};\nexport default SearchIcon;","import React from 'react';\nimport { colors } from '@dhis2/ui';\nimport PropTypes from 'prop-types';\n\nconst ClearIcon = ({\n  className\n}) => <svg className={className} fill={colors.grey800} xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\">\n        <path d=\"M19 6.41L17.59 5 12 10.59 6.41 5 5 6.41 10.59 12 5 17.59 6.41 19 12 13.41 17.59 19 19 17.59 13.41 12z\" />\n        <path d=\"M0 0h24v24H0z\" fill=\"none\" />\n    </svg>;\n\nClearIcon.propTypes = {\n  className: PropTypes.string\n};\nexport default ClearIcon;","import React from 'react';\nimport PropTypes from 'prop-types';\nimport ClearIcon from '../../../icons/Clear';\nimport classes from './styles/ClearButton.module.css';\nexport const ClearButton = ({\n  onClear\n}) => <button className={classes.button} onClick={onClear}>\n        <span>\n            <ClearIcon className={classes.icon} color=\"action\" />\n        </span>\n    </button>;\nClearButton.propTypes = {\n  onClear: PropTypes.func.isRequired\n};\nexport default ClearButton;","import { validateReducer } from '../modules/util';\nexport const SET_DASHBOARDS_FILTER = 'SET_DASHBOARDS_FILTER';\nexport const CLEAR_DASHBOARDS_FILTER = 'CLEAR_DASHBOARDS_FILTER';\nexport const DEFAULT_STATE_DASHBOARDS_FILTER = '';\nexport default ((state = DEFAULT_STATE_DASHBOARDS_FILTER, action) => {\n  switch (action.type) {\n    case SET_DASHBOARDS_FILTER:\n      {\n        return validateReducer(action.value, DEFAULT_STATE_DASHBOARDS_FILTER);\n      }\n\n    case CLEAR_DASHBOARDS_FILTER:\n      {\n        return DEFAULT_STATE_DASHBOARDS_FILTER;\n      }\n\n    default:\n      return state;\n  }\n}); // selectors\n\nexport const sGetDashboardsFilter = state => state.dashboardsFilter;","// Dimensions for the react-grid-layout\nimport sortBy from 'lodash/sortBy';\nimport { isVisualizationType } from './itemTypes';\nimport { isSmallScreen } from './smallScreen';\nexport const GRID_COMPACT_TYPE = 'vertical'; // vertical | horizonal | null\n\nexport const GRID_ROW_HEIGHT_PX = 10;\nexport const MARGIN_PX = [10, 10];\nconst SM_SCREEN_MIN_ITEM_GRID_HEIGHT = 13; // minimum of ~320px\n\nexport const SM_SCREEN_GRID_COLUMNS = 1;\nexport const MARGIN_SM_PX = [0, 16];\nexport const GRID_PADDING_PX = [0, 0]; // sum of left+right padding of dashboard-wrapper (App.css)\n\nexport const DASHBOARD_WRAPPER_LR_MARGIN_PX = 32; // make an assumption about the original item w/h ratio\n// assumes grid width of ~1200px at time dashboard was created\n\nconst GRID_COL_WIDTH_PX = 10;\nexport const GRID_COLUMNS = 60; // Dimensions for getShape\n\nexport const NEW_ITEM_SHAPE = {\n  x: 0,\n  y: 0,\n  w: 20,\n  h: 29\n};\nconst NUMBER_OF_ITEM_COLS = 2;\nconst MAX_ITEM_GRID_WIDTH = GRID_COLUMNS - 1;\nexport const MAX_ITEM_GRID_HEIGHT = 34;\nexport const MAX_ITEM_GRID_HEIGHT_OIPP = 35;\nexport const MAX_ITEM_GRID_WIDTH_OIPP = 56;\nconst MIN_ITEM_GRID_HEIGHT = 4; // isNonNegativeInteger\n\nconst isNonNegativeInteger = x => Number.isInteger(x) && x >= 0; // Does the item have all the shape properties?\n\n\nexport const hasShape = item => isNonNegativeInteger(item.x) && isNonNegativeInteger(item.y) && isNonNegativeInteger(item.w) && isNonNegativeInteger(item.h); // returns a rectangular grid block dimensioned with x, y, w, h in grid units.\n// based on a grid with 3 items across\n\nconst getShape = i => {\n  const col = i % NUMBER_OF_ITEM_COLS;\n  const row = Math.floor(i / NUMBER_OF_ITEM_COLS);\n  const itemWidth = Math.floor(MAX_ITEM_GRID_WIDTH / NUMBER_OF_ITEM_COLS);\n  const itemHeight = GRID_ROW_HEIGHT_PX * 2;\n  return {\n    x: col * itemWidth,\n    y: row * itemHeight,\n    w: itemWidth,\n    h: itemHeight\n  };\n};\n/**\n * Returns an array of items containing the x, y, w, h dimensions\n * and the item's originalheight in pixels\n * and dimensions to create the small layout (x, y, w, h)\n * @function\n * @param {Array} items\n * @returns {Array}\n */\n\n\nexport const withShape = (items = []) => {\n  const itemsWithShape = items.map((item, i) => hasShape(item) ? item : Object.assign({}, item, getShape(i)));\n  return itemsWithShape.map(item => Object.assign({}, item, {\n    originalH: item.h\n  }));\n};\nexport const getGridWidth = windowWidthPx => windowWidthPx - DASHBOARD_WRAPPER_LR_MARGIN_PX;\n\nconst getGridUnitsForSmFromPx = hPx => {\n  const gridUnitHeightPx = GRID_ROW_HEIGHT_PX + MARGIN_SM_PX[1];\n  return Math.round((hPx + MARGIN_SM_PX[1]) / gridUnitHeightPx);\n};\n\nexport const getProportionalHeight = (item, windowWidthPx) => {\n  // get w/h ratio of the original item\n  const wPx = getItemWHPx(item.w, GRID_COL_WIDTH_PX, MARGIN_PX[0]);\n  const hPx = getItemWHPx(item.h, GRID_ROW_HEIGHT_PX, MARGIN_PX[1]);\n  const ratioWH = wPx / hPx;\n\n  if (!isVisualizationType(item)) {\n    return getGridUnitsForSmFromPx(hPx);\n  }\n\n  const gridWidthPx = getGridWidth(windowWidthPx); // get new height in px based on the ratio\n\n  const newColWidthPx = (gridWidthPx - MARGIN_SM_PX[0] * (SM_SCREEN_GRID_COLUMNS - 1) - GRID_PADDING_PX[0] * 2) / SM_SCREEN_GRID_COLUMNS;\n  const newWPx = newColWidthPx * SM_SCREEN_GRID_COLUMNS;\n  const newHPx = Math.round(newWPx / ratioWH); //convert height in px back to grid units\n\n  const h = getGridUnitsForSmFromPx(newHPx); // item must be at least the set minimum\n\n  return h < SM_SCREEN_MIN_ITEM_GRID_HEIGHT ? SM_SCREEN_MIN_ITEM_GRID_HEIGHT : h;\n};\nexport const getSmallLayout = (items, windowWidthPx) => sortBy(items, ['y', 'x']).map((item, i) => Object.assign({}, item, {\n  x: 0,\n  y: i,\n  w: SM_SCREEN_GRID_COLUMNS,\n  h: getProportionalHeight(item, windowWidthPx)\n}));\nexport const getGridItemProperties = itemId => {\n  return {\n    i: itemId,\n    minH: MIN_ITEM_GRID_HEIGHT\n  };\n};\nexport const getPageBreakItemShape = (yPos, isStatic = true) => {\n  return {\n    x: 0,\n    y: yPos,\n    w: MAX_ITEM_GRID_WIDTH,\n    h: 5,\n    static: !!isStatic,\n    minH: 1\n  };\n};\nexport const getPrintTitlePageItemShape = isOneItemPerPage => {\n  return {\n    x: 0,\n    y: 0,\n    w: isOneItemPerPage ? MAX_ITEM_GRID_WIDTH_OIPP : MAX_ITEM_GRID_WIDTH,\n    h: MAX_ITEM_GRID_HEIGHT,\n    static: true,\n    minH: 1\n  };\n};\n/**\n * Calculates the grid item's height in pixels based\n * on the height in grid units. This calculation\n * is copied directly from react-grid-layout\n * calculateUtils.js (calcGridItemWHPx)\n *\n * Each row's px height is the sum of the GRID_ROW_HEIGHT_PX + MARGIN-Y\n * So the calculation is:\n * GRID_ROW_HEIGHT_PX * Number of rows\n * +\n * yMargin * Number of rows-1\n *\n * @param {Object} item item containing shape (x, y, w, h)\n */\n\nexport const getItemHeightPx = (item, windowWidthPx) => {\n  if (isSmallScreen(windowWidthPx)) {\n    const h = item.smallOriginalH ? item.smallOriginalH : getProportionalHeight(item, windowWidthPx);\n    return getItemWHPx(h, GRID_ROW_HEIGHT_PX, MARGIN_SM_PX[1]);\n  }\n\n  return getItemWHPx(item.originalH, GRID_ROW_HEIGHT_PX, MARGIN_PX[1]);\n};\n\nconst getItemWHPx = (gridUnits, colOrRowSize, marginPx) => Math.round(colOrRowSize * gridUnits + Math.max(0, gridUnits - 1) * marginPx);","import { DASHBOARD_WRAPPER_LR_MARGIN_PX } from './gridUtil';\nconst SMALL_SCREEN_BREAKPOINT = 480;\nexport const isSmallScreen = width => width <= SMALL_SCREEN_BREAKPOINT;\nexport const getBreakpoint = () => SMALL_SCREEN_BREAKPOINT - DASHBOARD_WRAPPER_LR_MARGIN_PX;","import React, { useState } from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport i18n from '@dhis2/d2-i18n';\nimport cx from 'classnames';\nimport SearchIcon from '../../../icons/Search';\nimport ClearButton from './ClearButton';\nimport { useWindowDimensions } from '../../WindowDimensionsProvider';\nimport { acSetDashboardsFilter, acClearDashboardsFilter } from '../../../actions/dashboardsFilter';\nimport { sGetDashboardsFilter } from '../../../reducers/dashboardsFilter';\nimport { isSmallScreen } from '../../../modules/smallScreen';\nimport classes from './styles/Filter.module.css';\nexport const KEYCODE_ENTER = 13;\nexport const KEYCODE_ESCAPE = 27;\nexport const FilterUnconnected = ({\n  clearDashboardsFilter,\n  expanded,\n  filterText,\n  setDashboardsFilter,\n  onKeypressEnter,\n  onSearchClicked\n}) => {\n  const [focusedClassName, setFocusedClassName] = useState('');\n  const [inputFocused, setInputFocus] = useState(false);\n  const {\n    width\n  } = useWindowDimensions();\n\n  const setFilterValue = event => {\n    event.preventDefault();\n    setDashboardsFilter(event.target.value);\n  };\n\n  const onKeyUp = event => {\n    switch (event.keyCode) {\n      case KEYCODE_ENTER:\n        onKeypressEnter();\n        clearDashboardsFilter();\n        break;\n\n      case KEYCODE_ESCAPE:\n        clearDashboardsFilter();\n        break;\n\n      default:\n        break;\n    }\n  };\n\n  const onFocus = event => {\n    event.preventDefault();\n    setFocusedClassName(classes.focused);\n  };\n\n  const onBlur = event => {\n    event.preventDefault();\n    setFocusedClassName('');\n  };\n\n  const onFocusInput = input => {\n    if (input && inputFocused && isSmallScreen(width)) {\n      return input.focus();\n    }\n  };\n\n  const activateSearchInput = () => {\n    onSearchClicked();\n    setInputFocus(true);\n  };\n\n  return <div className={cx(classes.container, expanded ? classes.expanded : classes.collapsed)}>\n            <button className={classes.searchButton} onClick={activateSearchInput}>\n                <SearchIcon className={classes.searchIcon} />\n            </button>\n            <div className={cx(classes.searchArea, `${focusedClassName}`)} onFocus={onFocus} onBlur={onBlur}>\n                <div className={classes.searchIconContainer}>\n                    <SearchIcon className={classes.searchIconSmall} small />\n                    <SearchIcon className={classes.searchIconLarge} />\n                </div>\n                <input className={classes.input} type=\"text\" placeholder={i18n.t('Search for a dashboard')} onChange={setFilterValue} onKeyUp={onKeyUp} value={filterText} data-test=\"search-dashboard-input\" ref={onFocusInput} />\n                {filterText && <div className={classes.clearButtonContainer}>\n                        <ClearButton onClear={clearDashboardsFilter} />\n                    </div>}\n            </div>\n        </div>;\n};\nFilterUnconnected.propTypes = {\n  clearDashboardsFilter: PropTypes.func,\n  expanded: PropTypes.bool,\n  filterText: PropTypes.string,\n  setDashboardsFilter: PropTypes.func,\n  onKeypressEnter: PropTypes.func,\n  onSearchClicked: PropTypes.func\n};\n\nconst mapStateToProps = state => ({\n  filterText: sGetDashboardsFilter(state)\n});\n\nconst mapDispatchToProps = {\n  setDashboardsFilter: acSetDashboardsFilter,\n  clearDashboardsFilter: acClearDashboardsFilter\n};\nexport default connect(mapStateToProps, mapDispatchToProps)(FilterUnconnected);","import { SET_DASHBOARDS_FILTER, CLEAR_DASHBOARDS_FILTER } from '../reducers/dashboardsFilter'; // actions\n\nexport const acSetDashboardsFilter = value => ({\n  type: SET_DASHBOARDS_FILTER,\n  value\n});\nexport const acClearDashboardsFilter = () => ({\n  type: CLEAR_DASHBOARDS_FILTER\n});","import { TEXT, SPACER } from './itemTypes';\nimport { getGridItemProperties } from './gridUtil';\nexport const spacerContent = 'SPACER_ITEM_FOR_DASHBOARD_LAYOUT_CONVENIENCE';\nexport const emptyTextItemContent = 'TEXT_ITEM_WITH_NO_CONTENT';\n\nconst isBackendSpacerType = item => item.type === TEXT && item.text === spacerContent;\n\nconst isUiSpacerType = item => item.type === SPACER;\n\nconst isTextType = item => item.type === TEXT && item.text !== spacerContent;\n\nexport const convertUiItemsToBackend = items => items.map(item => {\n  let text = null;\n\n  if (isUiSpacerType(item)) {\n    text = spacerContent;\n  } else if (isTextType(item)) {\n    text = item.text || emptyTextItemContent;\n  }\n\n  return { ...item,\n    ...(text ? {\n      text\n    } : {})\n  };\n});\nexport const convertBackendItemsToUi = items => items.map(item => {\n  const type = isBackendSpacerType(item) ? SPACER : item.type;\n  const gridProperties = getGridItemProperties(item.id);\n  const text = isTextType(item) ? item.text === emptyTextItemContent ? '' : item.text : null;\n  return { ...item,\n    ...(text !== null ? {\n      text\n    } : {}),\n    type,\n    ...gridProperties\n  };\n});","/** @module reducers/dashboards */\nimport arrayFrom from 'd2-utilizr/lib/arrayFrom';\nimport arraySort from 'd2-utilizr/lib/arraySort';\nimport { orArray, orObject } from '../modules/util';\nimport { convertBackendItemsToUi } from '../modules/uiBackendItemConverter';\nexport const SET_DASHBOARDS = 'SET_DASHBOARDS';\nexport const ADD_DASHBOARDS = 'ADD_DASHBOARDS';\nexport const SET_DASHBOARD_STARRED = 'SET_DASHBOARD_STARRED';\nexport const SET_DASHBOARD_DISPLAY_NAME = 'SET_DASHBOARD_DISPLAY_NAME';\nexport const SET_DASHBOARD_ITEMS = 'SET_DASHBOARD_ITEMS';\nexport const DEFAULT_STATE_DASHBOARDS = {\n  byId: null,\n  items: []\n};\nexport const EMPTY_DASHBOARD = {}; // reducer helper functions\n\nconst updateDashboardProp = ({\n  state,\n  dashboardId,\n  prop,\n  value\n}) => ({\n  byId: { ...state.byId,\n    [dashboardId]: { ...state.byId[dashboardId],\n      [prop]: value\n    }\n  },\n  items: state.items\n});\n/**\n * Reducer that computes and returns the new state based on the given action\n * @function\n * @param {Object} state The current state\n * @param {Object} action The action to be evaluated\n * @returns {Object}\n */\n\n\nexport default ((state = DEFAULT_STATE_DASHBOARDS, action) => {\n  switch (action.type) {\n    case SET_DASHBOARDS:\n      {\n        return {\n          byId: action.value,\n          items: []\n        };\n      }\n\n    case ADD_DASHBOARDS:\n      {\n        return { ...state,\n          byId: { ...state.byId,\n            ...action.value\n          }\n        };\n      }\n\n    case SET_DASHBOARD_STARRED:\n      {\n        return updateDashboardProp({\n          state,\n          dashboardId: action.dashboardId,\n          prop: 'starred',\n          value: action.value\n        });\n      }\n\n    case SET_DASHBOARD_DISPLAY_NAME:\n      {\n        return updateDashboardProp({\n          state,\n          dashboardId: action.dashboardId,\n          prop: 'displayName',\n          value: action.value\n        });\n      }\n\n    case SET_DASHBOARD_ITEMS:\n      {\n        return { ...state,\n          items: action.value\n        };\n      }\n\n    default:\n      return state;\n  }\n}); // root selector\n\nexport const sGetDashboardsRoot = state => state.dashboards; // selector level 1\n\n/**\n * Selector which returns a dashboard by id from the state object\n * If no matching dashboard is found it returns undefined\n * If dashboards.byId is null, then the dashboards api request\n * has not yet completed. If dashboards.byId is an empty object\n * then the dashboards api request is complete, but no dashboards\n * were returned\n *\n * @function\n * @param {Object} state The current state\n * @param {Number} id The id of the dashboard\n * @returns {Object | undefined}\n */\n\nexport const sGetDashboardById = (state, id) => orObject(sGetDashboardsRoot(state).byId)[id];\nexport const sDashboardsIsFetching = state => {\n  return sGetDashboardsRoot(state).byId === null;\n};\n/**\n * Selector which returns all dashboards (the byId object)\n *\n * @function\n * @param {Object} state The current state\n * @returns {Object | undefined}\n */\n\nexport const sGetAllDashboards = state => orObject(sGetDashboardsRoot(state).byId);\n/**\n * Selector which returns the current dashboard items\n *\n * @function\n * @param {Object} state The current state\n * @returns {Array}\n */\n\nexport const sGetDashboardItems = state => sGetDashboardsRoot(state).items; // selector level 2\n\nexport const sGetStarredDashboards = state => Object.values(sGetAllDashboards(state)).filter(dashboard => dashboard.starred === true);\nexport const sGetUnstarredDashboards = state => Object.values(sGetAllDashboards(state)).filter(dashboard => dashboard.starred === false); // selector level 3\n\nexport const sGetStarredDashboardIds = state => {\n  return sGetStarredDashboards(state).map(dashboard => dashboard.id);\n};\nexport const sGetUnstarredDashboardIds = state => sGetUnstarredDashboards(state).map(dashboard => dashboard.id);\nexport const sGetDashboardsSortedByStarred = state => [...arraySort(sGetStarredDashboards(state), 'ASC', 'displayName'), ...arraySort(sGetUnstarredDashboards(state), 'ASC', 'displayName')]; // utils\n\n/**\n * Returns the array of dashboards, customized for ui\n * @function\n * @param {Array} data The original dashboard list\n * @returns {Array}\n */\n\nexport const getCustomDashboards = data => arrayFrom(data).map(d => ({\n  id: d.id,\n  name: d.name,\n  displayName: d.displayName,\n  description: d.description,\n  displayDescription: d.displayDescription,\n  starred: d.favorite,\n  owner: d.user.name,\n  created: d.created.split('T').join(' ').substr(0, 16),\n  lastUpdated: d.lastUpdated.split('T').join(' ').substr(0, 16),\n  access: d.access,\n  numberOfItems: orArray(d.dashboardItems).length,\n  dashboardItems: convertBackendItemsToUi(d.dashboardItems)\n}));","/** @module reducers/selected */\nimport { combineReducers } from 'redux';\nimport { validateReducer } from '../modules/util';\nexport const SET_SELECTED_ID = 'SET_SELECTED_ID';\nexport const SET_SELECTED_ISLOADING = 'SET_SELECTED_ISLOADING';\nexport const SET_SELECTED_SHOWDESCRIPTION = 'SET_SELECTED_SHOWDESCRIPTION';\nexport const SET_SELECTED_ITEM_ACTIVE_TYPE = 'SET_SELECTED_ITEM_ACTIVE_TYPE';\nexport const CLEAR_SELECTED_ITEM_ACTIVE_TYPES = 'CLEAR_SELECTED_ITEM_ACTIVE_TYPES';\nexport const DEFAULT_STATE_SELECTED_ID = null;\nexport const DEFAULT_STATE_SELECTED_ISLOADING = false;\nexport const DEFAULT_STATE_SELECTED_SHOWDESCRIPTION = false;\nexport const DEFAULT_STATE_SELECTED_ITEM_ACTIVE_TYPES = {};\nexport const NON_EXISTING_DASHBOARD_ID = '0';\n\nconst id = (state = DEFAULT_STATE_SELECTED_ID, action) => {\n  switch (action.type) {\n    case SET_SELECTED_ID:\n      return validateReducer(action.value, DEFAULT_STATE_SELECTED_ID);\n\n    default:\n      return state;\n  }\n};\n\nconst isLoading = (state = DEFAULT_STATE_SELECTED_ISLOADING, action) => {\n  switch (action.type) {\n    case SET_SELECTED_ISLOADING:\n      return validateReducer(action.value, DEFAULT_STATE_SELECTED_ISLOADING);\n\n    default:\n      return state;\n  }\n};\n\nconst showDescription = (state = DEFAULT_STATE_SELECTED_SHOWDESCRIPTION, action) => {\n  switch (action.type) {\n    case SET_SELECTED_SHOWDESCRIPTION:\n      return validateReducer(action.value, DEFAULT_STATE_SELECTED_SHOWDESCRIPTION);\n\n    default:\n      return state;\n  }\n};\n\nconst itemActiveTypes = (state = DEFAULT_STATE_SELECTED_ITEM_ACTIVE_TYPES, action) => {\n  switch (action.type) {\n    case SET_SELECTED_ITEM_ACTIVE_TYPE:\n      {\n        return { ...state,\n          [action.id]: action.activeType\n        };\n      }\n\n    case CLEAR_SELECTED_ITEM_ACTIVE_TYPES:\n      {\n        return DEFAULT_STATE_SELECTED_ITEM_ACTIVE_TYPES;\n      }\n\n    default:\n      return state;\n  }\n};\n\nexport default combineReducers({\n  id,\n  isLoading,\n  showDescription,\n  itemActiveTypes\n}); // Selectors\n\nexport const sGetSelectedRoot = state => state.selected;\nexport const sGetSelectedId = state => sGetSelectedRoot(state).id;\nexport const sGetSelectedIsLoading = state => sGetSelectedRoot(state).isLoading;\nexport const sGetSelectedShowDescription = state => sGetSelectedRoot(state).showDescription;\nexport const sGetSelectedItemActiveType = (state, id) => sGetSelectedRoot(state).itemActiveTypes[id];","import arraySort from 'd2-utilizr/lib/arraySort';\nexport const getFilteredDashboards = (dashboards, filterText) => {\n  const filteredDashboards = arraySort(Object.values(dashboards).filter(d => d.displayName.toLowerCase().includes(filterText.toLowerCase())), 'ASC', 'displayName');\n  return [...filteredDashboards.filter(d => d.starred), ...filteredDashboards.filter(d => !d.starred)];\n};","import React from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport cx from 'classnames';\nimport { Link, withRouter } from 'react-router-dom';\nimport Chip from './DashboardItemChip';\nimport AddCircleIcon from '../../../icons/AddCircle';\nimport Filter from './Filter';\nimport { sGetAllDashboards } from '../../../reducers/dashboards';\nimport { sGetDashboardsFilter } from '../../../reducers/dashboardsFilter';\nimport { sGetSelectedId } from '../../../reducers/selected';\nimport { getFilteredDashboards } from '../../../modules/getFilteredDashboards';\nimport classes from './styles/Content.module.css';\n\nconst Content = ({\n  dashboards,\n  expanded,\n  filterText,\n  history,\n  selectedId,\n  onChipClicked,\n  onSearchClicked\n}) => {\n  const onSelectDashboard = () => {\n    const id = getFilteredDashboards(dashboards, filterText)[0]?.id;\n\n    if (id) {\n      history.push(id);\n    }\n  };\n\n  const getChips = () => getFilteredDashboards(dashboards, filterText).map(dashboard => <Chip key={dashboard.id} label={dashboard.displayName} starred={dashboard.starred} dashboardId={dashboard.id} selected={dashboard.id === selectedId} onClick={onChipClicked} />);\n\n  const getControlsSmall = () => <div className={classes.controlsSmall}>\n            <Filter onKeypressEnter={onSelectDashboard} onSearchClicked={onSearchClicked} expanded={expanded} />\n        </div>;\n\n  const getControlsLarge = () => <div className={classes.controlsLarge}>\n            <Link className={classes.newLink} to={'/new'} data-test=\"link-new-dashboard\">\n                <AddCircleIcon />\n            </Link>\n            <Filter onKeypressEnter={onSelectDashboard} onSearchClicked={onSearchClicked} expanded={expanded} />\n        </div>;\n\n  return <div className={cx(classes.container, expanded ? classes.expanded : classes.collapsed)}>\n            {getControlsSmall()}\n            <div className={classes.chipsContainer}>\n                {getControlsLarge()}\n                {getChips()}\n            </div>\n        </div>;\n};\n\nContent.propTypes = {\n  dashboards: PropTypes.object,\n  expanded: PropTypes.bool,\n  filterText: PropTypes.string,\n  history: PropTypes.object,\n  selectedId: PropTypes.string,\n  onChipClicked: PropTypes.func,\n  onSearchClicked: PropTypes.func\n};\n\nconst mapStateToProps = state => ({\n  dashboards: sGetAllDashboards(state),\n  selectedId: sGetSelectedId(state),\n  filterText: sGetDashboardsFilter(state)\n});\n\nexport default withRouter(connect(mapStateToProps)(Content));","import React from 'react';\nexport const ChevronDown = () => <svg height=\"24\" viewBox=\"0 0 24 24\" width=\"24\" xmlns=\"http://www.w3.org/2000/svg\">\n        <path d=\"m11.29289 15.7071c.39053.3905 1.02369.3905 1.41422 0l4.99999-4.99999c.3905-.39053.3905-1.02369 0-1.41422-.3905-.39052-1.0237-.39052-1.4142 0l-4.2929 4.2929-4.29289-4.2929c-.39053-.39052-1.02369-.39052-1.41422 0-.39052.39053-.39052 1.02369 0 1.41422z\" fill=\"#a0adba\" />\n    </svg>;\nexport const ChevronUp = () => <svg height=\"24\" viewBox=\"0 0 24 24\" width=\"24\" xmlns=\"http://www.w3.org/2000/svg\">\n        <path d=\"m11.2928932 8.29289322c.360484-.36048396.927715-.3882135 1.3200062-.08318861l.0942074.08318861 5 4.99999998c.3905243.3905243.3905243 1.0236893 0 1.4142136-.360484.3604839-.927715.3882135-1.3200062.0831886l-.0942074-.0831886-4.2928932-4.2921068-4.29289322 4.2921068c-.36048396.3604839-.92771502.3882135-1.32000622.0831886l-.09420734-.0831886c-.36048396-.360484-.3882135-.927715-.08318861-1.3200062l.08318861-.0942074z\" fill=\"#a0adba\" />\n    </svg>;","import React, { useRef } from 'react';\nimport PropTypes from 'prop-types';\nimport i18n from '@dhis2/d2-i18n';\nimport { Tooltip } from '@dhis2/ui';\nimport { ChevronDown, ChevronUp } from './assets/icons';\nimport classes from './styles/ShowMoreButton.module.css';\n\nconst ShowMoreButton = ({\n  onClick,\n  dashboardBarIsExpanded,\n  disabled\n}) => {\n  const containerRef = useRef(null);\n  const buttonLabel = dashboardBarIsExpanded ? i18n.t('Show fewer dashboards') : i18n.t('Show more dashboards');\n\n  const onButtonClicked = () => {\n    // The click may happen on the svg or path\n    // element of the button icon.\n    // In that case it is necessary to trigger\n    // the mouseout on the button element\n    // to ensure that the tooltip is removed\n    const buttonEl = containerRef.current.children[0];\n    const event = new MouseEvent('mouseout', {\n      bubbles: true,\n      cancelable: false\n    });\n    onClick();\n    buttonEl.dispatchEvent(event);\n  };\n\n  return <div className={classes.container} ref={containerRef}>\n            {disabled ? <div className={classes.disabled}>\n                    <ChevronDown />\n                </div> : <Tooltip content={buttonLabel} placement=\"bottom\">\n                    {({\n        onMouseOver,\n        onMouseOut,\n        ref\n      }) => <button className={classes.showMore} onClick={onButtonClicked} data-test=\"showmore-button\" aria-label={buttonLabel} ref={ref} onMouseOver={onMouseOver} onMouseOut={onMouseOut}>\n                            {dashboardBarIsExpanded ? <ChevronUp /> : <ChevronDown />}\n                        </button>}\n                </Tooltip>}\n        </div>;\n};\n\nShowMoreButton.propTypes = {\n  dashboardBarIsExpanded: PropTypes.bool,\n  disabled: PropTypes.bool,\n  onClick: PropTypes.func\n};\nexport default ShowMoreButton;","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport classes from './styles/DragHandle.module.css';\n\nconst DragHandle = ({\n  onHeightChanged,\n  setDragging\n}) => {\n  const [startingY, setStartingY] = useState(0);\n\n  const onStartDrag = e => {\n    setStartingY(e.clientY);\n    setDragging(true);\n    window.addEventListener('mousemove', onDrag);\n    window.addEventListener('mouseup', onEndDrag);\n  };\n\n  const onDrag = e => {\n    e.preventDefault();\n    e.stopPropagation();\n    const currentY = e.clientY;\n\n    if (currentY !== startingY && currentY > 0) {\n      requestAnimationFrame(() => {\n        onHeightChanged(currentY);\n      });\n    }\n  };\n\n  const onEndDrag = () => {\n    setDragging(false);\n    window.removeEventListener('mousemove', onDrag);\n    window.removeEventListener('mouseup', onEndDrag);\n  };\n\n  return <div className={classes.draghandle} onMouseDown={onStartDrag} data-test=\"controlbar-drag-handle\" />;\n};\n\nDragHandle.propTypes = {\n  setDragging: PropTypes.func,\n  onHeightChanged: PropTypes.func\n};\nexport default DragHandle;","const ROW_HEIGHT = 40;\nconst PADDING_TOP = 10;\nconst SHOWMORE_BUTTON_HEIGHT = 21; // 27px - 6px below bottom edge of ctrlbar\n\nexport const getRowsFromHeight = height => {\n  return Math.floor((height - SHOWMORE_BUTTON_HEIGHT - PADDING_TOP) / ROW_HEIGHT);\n};","/** @module reducers/controlBar */\nimport { combineReducers } from 'redux';\nimport { validateReducer } from '../modules/util';\nexport const SET_CONTROLBAR_USER_ROWS = 'SET_CONTROLBAR_USER_ROWS';\nexport const DEFAULT_STATE_CONTROLBAR_ROWS = 1;\n\nconst userRows = (state = DEFAULT_STATE_CONTROLBAR_ROWS, action) => {\n  switch (action.type) {\n    case SET_CONTROLBAR_USER_ROWS:\n      return validateReducer(action.value, DEFAULT_STATE_CONTROLBAR_ROWS);\n\n    default:\n      return state;\n  }\n};\n\nexport default combineReducers({\n  userRows\n});\n/**\n * Selectors that point to specific props in the state object\n * @function\n * @param {Object} state\n * @returns {Object}\n */\n\nconst sGetControlBarRoot = state => state.controlBar; // Selector dependency level 2\n\n\nexport const sGetControlBarUserRows = state => sGetControlBarRoot(state).userRows;","import { getInstance } from 'd2';\nexport const NAMESPACE = 'dashboard';\nexport const hasNamespace = async (d2) => await d2.currentUser.dataStore.has(NAMESPACE);\nexport const getNamespace = async (d2, hasNamespace) => hasNamespace ? await d2.currentUser.dataStore.get(NAMESPACE) : await d2.currentUser.dataStore.create(NAMESPACE);\nexport const apiPostUserDataStoreValue = async (key, value) => {\n  const d2 = await getInstance();\n  const ns = await getNamespace(d2, hasNamespace);\n  return ns.set(key, value);\n};\nexport const apiGetUserDataStoreValue = async (key, defaultValue) => {\n  const d2 = await getInstance();\n  const namespace = await getNamespace(d2, await hasNamespace(d2));\n  const hasKey = namespace?.keys?.find(k => k === key);\n\n  if (hasKey) {\n    return await namespace.get(key);\n  } else {\n    await apiPostUserDataStoreValue(key, defaultValue, namespace);\n    console.log('(These errors to /userDataStore can be ignored)');\n    return defaultValue;\n  }\n};","import { apiGetUserDataStoreValue, apiPostUserDataStoreValue } from './userDataStore';\nimport { DEFAULT_STATE_CONTROLBAR_ROWS } from '../reducers/controlBar';\nconst KEY_CONTROLBAR_ROWS = 'controlBarRows';\nexport const apiGetControlBarRows = async () => await apiGetUserDataStoreValue(KEY_CONTROLBAR_ROWS, DEFAULT_STATE_CONTROLBAR_ROWS);\nexport const apiPostControlBarRows = async (value) => await apiPostUserDataStoreValue(KEY_CONTROLBAR_ROWS, value);","import { SET_CONTROLBAR_USER_ROWS } from '../reducers/controlBar';\nimport { apiGetControlBarRows } from '../api/controlBar'; // actions\n\nexport const acSetControlBarUserRows = rows => ({\n  type: SET_CONTROLBAR_USER_ROWS,\n  value: rows\n}); // thunks\n\nexport const tSetControlBarRows = () => async dispatch => {\n  const onSuccess = rows => {\n    dispatch(acSetControlBarUserRows(rows));\n  };\n\n  const onError = error => {\n    console.log('Error (apiGetControlBarRows): ', error);\n    return error;\n  };\n\n  try {\n    const controlBarRows = await apiGetControlBarRows();\n    return onSuccess(controlBarRows);\n  } catch (err) {\n    return onError(err);\n  }\n};","import React, { useState, useRef, useEffect, createRef } from 'react';\nimport { connect } from 'react-redux';\nimport cx from 'classnames';\nimport PropTypes from 'prop-types';\nimport Content from './Content';\nimport ShowMoreButton from './ShowMoreButton';\nimport DragHandle from './DragHandle';\nimport { getRowsFromHeight } from './controlBarDimensions';\nimport { sGetControlBarUserRows } from '../../../reducers/controlBar';\nimport { acSetControlBarUserRows } from '../../../actions/controlBar';\nimport { apiPostControlBarRows } from '../../../api/controlBar';\nimport classes from './styles/DashboardsBar.module.css';\nexport const MIN_ROW_COUNT = 1;\nexport const MAX_ROW_COUNT = 10;\n\nconst DashboardsBar = ({\n  userRows,\n  updateUserRows,\n  expanded,\n  onExpandedChanged\n}) => {\n  const [dragging, setDragging] = useState(false);\n  const userRowsChanged = useRef(false);\n  const ref = createRef();\n  const rootElement = document.documentElement;\n\n  const adjustRows = newHeight => {\n    const newRows = Math.max(MIN_ROW_COUNT, getRowsFromHeight(newHeight - 52) // don't rush the transition to a bigger row count\n    );\n\n    if (newRows !== userRows) {\n      updateUserRows(Math.min(newRows, MAX_ROW_COUNT));\n      userRowsChanged.current = true;\n    }\n  };\n\n  useEffect(() => {\n    rootElement.style.setProperty('--user-rows-count', userRows);\n  }, [userRows]);\n  useEffect(() => {\n    if (!dragging && userRowsChanged.current) {\n      apiPostControlBarRows(userRows);\n      userRowsChanged.current = false;\n    }\n  }, [dragging, userRowsChanged.current]);\n\n  const scrollToTop = () => {\n    if (expanded) {\n      ref.current.scroll(0, 0);\n    }\n  };\n\n  const toggleExpanded = () => {\n    if (expanded) {\n      cancelExpanded();\n    } else {\n      scrollToTop();\n      onExpandedChanged(!expanded);\n    }\n  };\n\n  const cancelExpanded = () => {\n    scrollToTop();\n    onExpandedChanged(false);\n  };\n\n  return <div className={expanded ? classes.expanded : classes.collapsed} data-test=\"dashboards-bar\">\n            <div className={cx(classes.container)}>\n                <div className={classes.content} ref={ref}>\n                    <Content onChipClicked={cancelExpanded} onSearchClicked={toggleExpanded} expanded={expanded} />\n                </div>\n                <ShowMoreButton onClick={toggleExpanded} dashboardBarIsExpanded={expanded} disabled={!expanded && userRows === MAX_ROW_COUNT} />\n                <DragHandle setDragging={setDragging} onHeightChanged={adjustRows} />\n            </div>\n            <div className={cx(classes.spacer)} />\n        </div>;\n};\n\nDashboardsBar.propTypes = {\n  expanded: PropTypes.bool,\n  updateUserRows: PropTypes.func,\n  userRows: PropTypes.number,\n  onExpandedChanged: PropTypes.func\n};\n\nconst mapStateToProps = state => ({\n  userRows: sGetControlBarUserRows(state)\n});\n\nconst mapDispatchToProps = {\n  updateUserRows: acSetControlBarUserRows\n};\nexport default connect(mapStateToProps, mapDispatchToProps)(DashboardsBar);","import React from 'react';\nimport { colors } from '@dhis2/ui';\nimport PropTypes from 'prop-types';\n\nconst NoContentMessage = ({\n  text\n}) => <div style={{\n  padding: '50px 10px',\n  textAlign: 'center',\n  fontSize: '15px',\n  fontWeight: 500,\n  color: colors.grey600\n}}>\n        {text}\n    </div>;\n\nNoContentMessage.propTypes = {\n  text: PropTypes.string\n};\nexport default NoContentMessage;","import React from 'react';\nimport PropTypes from 'prop-types';\nimport cx from 'classnames';\nimport classes from './styles/DashboardContainer.module.css';\n\nconst DashboardContainer = ({\n  children,\n  covered\n}) => {\n  return <div className={cx(classes.container, 'dashboard-scroll-container', covered && classes.covered)}>\n            {children}\n        </div>;\n};\n\nDashboardContainer.propTypes = {\n  children: PropTypes.node,\n  covered: PropTypes.bool\n};\nexport default DashboardContainer;","import React from 'react';\nimport { colors } from '@dhis2/ui';\nexport const ThreeDots = () => <svg height=\"18\" viewBox=\"0 0 18 18\" width=\"18\" xmlns=\"http://www.w3.org/2000/svg\">\n        <path d=\"m4 7.5c-.83 0-1.5.67-1.5 1.5s.67 1.5 1.5 1.5 1.5-.67 1.5-1.5-.67-1.5-1.5-1.5zm10 0c-.83 0-1.5.67-1.5 1.5s.67 1.5 1.5 1.5 1.5-.67 1.5-1.5-.67-1.5-1.5-1.5zm-5 0c-.83 0-1.5.67-1.5 1.5s.67 1.5 1.5 1.5 1.5-.67 1.5-1.5-.67-1.5-1.5-1.5z\" fill=\"#6e7a8a\" />\n    </svg>;\nexport const SpeechBubble = () => <svg height=\"20\" viewBox=\"0 0 20 20\" width=\"20\" xmlns=\"http://www.w3.org/2000/svg\" style={{\n  margin: '3px 2px 0 2px'\n}} // Temporary fix for the misaligned icon, should be removed once the icon is replaced\n>\n        <path d=\"m20 2h-16c-1.1 0-1.99.9-1.99 2l-.01 18 4-4h14c1.1 0 2-.9 2-2v-12c0-1.1-.9-2-2-2zm-2 12h-12v-2h12zm0-3h-12v-2h12zm0-3h-12v-2h12z\" fill=\"#6e7a8a\" fillRule=\"evenodd\" transform=\"translate(-2 -2)\" />\n    </svg>;\nexport const Warning = () => <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24\" viewBox=\"0 0 24 24\" width=\"24\" fill={colors.grey600}>\n        <path d=\"M0 0h24v24H0z\" fill=\"none\" />\n        <path d=\"M1 21h22L12 2 1 21zm12-3h-2v-2h2v2zm0-4h-2v-4h2v4z\" />\n    </svg>;\nexport const Fullscreen = () => <svg height=\"16\" viewBox=\"0 0 16 16\" width=\"16\" xmlns=\"http://www.w3.org/2000/svg\">\n        <path d=\"m6.85355339 9.14644661c.17356635.17356635.1928515.44299075.05785545.63785889l-.05785545.06924789-4.14755339 4.14644661h2.794c.24545989 0 .44960837.1768752.49194433.4101244l.00805567.0898756c0 .2454599-.17687516.4496084-.41012437.4919443l-.08987563.0080557h-4c-.24545989 0-.44960837-.1768752-.49194433-.4101244l-.00805567-.0898756v-4c0-.2761424.22385763-.5.5-.5.24545989 0 .44960837.1768752.49194433.4101244l.00805567.0898756v2.792l4.14644661-4.14555339c.19526215-.19526215.51184463-.19526215.70710678 0zm6.14644661-2.14644661v6h-6v-1h5v-5zm-4-4v1h-5v5h-1v-6zm5.5-2c.2454599 0 .4496084.17687516.4919443.41012437l.0080557.08987563v4c0 .27614237-.2238576.5-.5.5-.2454599 0-.4496084-.17687516-.4919443-.41012437l-.0080557-.08987563v-2.794l-4.14644661 4.14755339c-.19526215.19526215-.51184463.19526215-.70710678 0-.17356635-.17356635-.1928515-.44299075-.05785545-.63785889l.05785545-.06924789 4.14655339-4.14744661-2.793.001c-.2454599 0-.4496084-.17687516-.4919443-.41012437l-.0080557-.08987563c0-.24545989.1768752-.44960837.4101244-.49194433l.0898756-.00805567z\" fill=\"inherit\" />\n    </svg>;\nexport const ExitFullscreen = () => <svg height=\"16\" viewBox=\"0 0 16 16\" width=\"16\" xmlns=\"http://www.w3.org/2000/svg\">\n        <path d=\"m6.5 9c.24545989 0 .44960837.17687516.49194433.41012437l.00805567.08987563v4c0 .2761424-.22385763.5-.5.5-.24545989 0-.44960837-.1768752-.49194433-.4101244l-.00805567-.0898756v-2.794l-3.64644661 3.6475534c-.19526215.1952621-.51184463.1952621-.70710678 0-.17356635-.1735664-.1928515-.4429908-.05785545-.6378589l.05785545-.0692479 3.64555339-3.6464466h-2.792c-.24545989 0-.44960837-.17687516-.49194433-.41012437l-.00805567-.08987563c0-.24545989.17687516-.44960837.41012437-.49194433l.08987563-.00805567zm7.5-.5v5.5h-5.5v-1h4.5v-4.5zm-6.5-6.5v1h-4.5v4.5h-1v-5.5zm6.8535534-.35355339c.1735663.17356635.1928515.44299075.0578554.63785889l-.0578554.06924789-3.6475534 3.64644661h2.794c.2454599 0 .4496084.17687516.4919443.41012437l.0080557.08987563c0 .24545989-.1768752.44960837-.4101244.49194433l-.0898756.00805567h-4c-.24545989 0-.44960837-.17687516-.49194433-.41012437l-.00805567-.08987563v-4c0-.27614237.22385763-.5.5-.5.24545989 0 .44960837.17687516.49194433.41012437l.00805567.08987563v2.792l3.6464466-3.64555339c.1952622-.19526215.5118446-.19526215.7071068 0z\" fill=\"inherit\" />\n    </svg>;","import { apiGetUserDataStoreValue, apiPostUserDataStoreValue } from './userDataStore';\nimport { DEFAULT_STATE_SELECTED_SHOWDESCRIPTION } from '../reducers/selected';\nconst KEY_SHOW_DESCRIPTION = 'showDescription';\nexport const apiGetShowDescription = async () => await apiGetUserDataStoreValue(KEY_SHOW_DESCRIPTION, DEFAULT_STATE_SELECTED_SHOWDESCRIPTION);\nexport const apiPostShowDescription = value => apiPostUserDataStoreValue(KEY_SHOW_DESCRIPTION, value);","export const RECEIVED_USER = 'RECEIVED_USER';\nexport const DEFAULT_STATE_USER = {\n  id: '',\n  username: '',\n  uiLocale: '',\n  isSuperuser: false\n};\nexport default ((state = DEFAULT_STATE_USER, action) => {\n  switch (action.type) {\n    case RECEIVED_USER:\n      {\n        return fromD2ToUserObj(action.value);\n      }\n\n    default:\n      return state;\n  }\n});\n\nfunction fromD2ToUserObj(d2Object) {\n  return {\n    id: d2Object.id,\n    username: d2Object.username,\n    uiLocale: d2Object.settings.keyUiLocale,\n    isSuperuser: d2Object.authorities.has('ALL')\n  };\n} // selectors\n\n\nexport const sGetUserId = state => state.user.id;\nexport const sGetUserUsername = state => state.user.username;\nexport const sGetIsSuperuser = state => state.user.isSuperuser;\nexport const sGetUiLocale = state => state.user.uiLocale;","import { getDimensionById, DIMENSION_ID_PERIOD, DIMENSION_ID_ORGUNIT } from '@dhis2/analytics';\nexport const SET_DIMENSIONS = 'SET_DIMENSIONS';\nexport const DEFAULT_DIMENSIONS = [getDimensionById(DIMENSION_ID_PERIOD), getDimensionById(DIMENSION_ID_ORGUNIT)];\nexport default ((state = DEFAULT_DIMENSIONS, action) => {\n  switch (action.type) {\n    case SET_DIMENSIONS:\n      {\n        return [...DEFAULT_DIMENSIONS, ...action.value];\n      }\n\n    default:\n      return state;\n  }\n});\nexport const sGetDimensions = state => state.dimensions;","import { sGetDimensions } from './dimensions';\nimport { createSelector } from 'reselect';\nexport const CLEAR_ITEM_FILTERS = 'CLEAR_ITEM_FILTERS';\nexport const SET_ITEM_FILTERS = 'SET_ITEM_FILTERS';\nexport const ADD_ITEM_FILTER = 'ADD_ITEM_FILTER';\nexport const REMOVE_ITEM_FILTER = 'REMOVE_ITEM_FILTER';\nexport const DEFAULT_STATE_ITEM_FILTERS = {};\nexport default ((state = DEFAULT_STATE_ITEM_FILTERS, action) => {\n  switch (action.type) {\n    case ADD_ITEM_FILTER:\n      {\n        return { ...state,\n          [action.filter.id]: action.filter.value\n        };\n      }\n\n    case REMOVE_ITEM_FILTER:\n      {\n        const newState = { ...state\n        };\n        delete newState[action.id];\n        return newState;\n      }\n\n    case SET_ITEM_FILTERS:\n      {\n        return action.filters;\n      }\n\n    case CLEAR_ITEM_FILTERS:\n      {\n        return DEFAULT_STATE_ITEM_FILTERS;\n      }\n\n    default:\n      return state;\n  }\n}); // selectors\n\nexport const sGetItemFiltersRoot = state => state.itemFilters; // simplify the filters structure to:\n// [{ id: 'pe', name: 'Period', values: [{ id: 2019: name: '2019' }, {id: 'LAST_MONTH', name: 'Last month' }]}, ...]\n\nexport const sGetNamedItemFilters = createSelector([sGetItemFiltersRoot, sGetDimensions], (filters, dimensions) => Object.keys(filters).reduce((arr, id) => {\n  arr.push({\n    id: id,\n    name: dimensions.find(dimension => dimension.id === id).name,\n    values: filters[id].map(value => ({\n      id: value.id,\n      name: value.displayName || value.name\n    }))\n  });\n  return arr;\n}, []));","import { ADD_ITEM_FILTER, REMOVE_ITEM_FILTER, SET_ITEM_FILTERS, CLEAR_ITEM_FILTERS } from '../reducers/itemFilters';\nexport const FILTER_ORG_UNIT = 'ou'; // actions\n\nexport const acAddItemFilter = filter => ({\n  type: ADD_ITEM_FILTER,\n  filter\n});\nexport const acRemoveItemFilter = id => ({\n  type: REMOVE_ITEM_FILTER,\n  id\n});\nexport const acClearItemFilters = () => ({\n  type: CLEAR_ITEM_FILTERS\n});\nexport const acSetItemFilters = filters => ({\n  type: SET_ITEM_FILTERS,\n  filters\n});","import update from 'immutability-helper';\nimport { arrayToIdMap } from '../modules/util';\nexport const RECEIVED_MESSAGES = 'RECEIVED_MESSAGES';\nexport default ((state = {}, action) => {\n  switch (action.type) {\n    case RECEIVED_MESSAGES:\n      {\n        const conversations = arrayToIdMap(action.value);\n        const newState = update(state, {\n          $merge: conversations\n        });\n        return newState;\n      }\n\n    default:\n      return state;\n  }\n}); // selectors\n\nexport const sGetMessagesRoot = state => state.messages;","export const messageConversationsQuery = {\n  resource: 'messageConversations',\n  params: {\n    fields: 'id,messageCount,lastUpdated,messageType,displayName,read,messages[id,read,sender[id,displayName],text,lastUpdated]',\n    order: 'read:asc',\n    pageSize: 200\n  }\n};\nexport const getMessages = async dataEngine => {\n  try {\n    const {\n      messageConversations\n    } = await dataEngine.query({\n      messageConversations: messageConversationsQuery\n    });\n    return messageConversations.messageConversations;\n  } catch (error) {\n    console.log('Error:', error);\n  }\n};","import { RECEIVED_MESSAGES } from '../../../reducers/messages';\nimport { getMessages } from '../../../api/messages';\n\nconst onError = (action, error) => {\n  console.log(`Error in action ${action}: ${error}`);\n  return error;\n};\n\nexport const receivedMessages = value => ({\n  type: RECEIVED_MESSAGES,\n  value\n});\nexport const tGetMessages = dataEngine => async dispatch => {\n  try {\n    const messageConversations = await getMessages(dataEngine);\n    return dispatch(receivedMessages(messageConversations));\n  } catch (err) {\n    return onError('Get Messages', err);\n  }\n};","export const SET_ALERT_MESSAGE = 'SET_ALERT_MESSAGE';\nexport const CLEAR_ALERT_MESSAGE = 'CLEAR_ALERT_MESSAGE';\nexport const DEFAULT_STATE_ALERT = null;\nexport default ((state = DEFAULT_STATE_ALERT, action) => {\n  switch (action.type) {\n    case SET_ALERT_MESSAGE:\n      {\n        return action.value;\n      }\n\n    case CLEAR_ALERT_MESSAGE:\n      {\n        return DEFAULT_STATE_ALERT;\n      }\n\n    default:\n      return state;\n  }\n}); // selectors\n\nexport const sGetAlertMessage = state => state.alert;","import { SET_ALERT_MESSAGE, CLEAR_ALERT_MESSAGE } from '../reducers/alert';\nexport const acSetAlertMessage = value => ({\n  type: SET_ALERT_MESSAGE,\n  value\n});\nexport const acClearAlertMessage = () => ({\n  type: CLEAR_ALERT_MESSAGE\n});","import { orObject } from '../modules/util';\nimport objectClean from 'd2-utilizr/lib/objectClean';\n/** @module reducers/visualizations */\n\nexport const ADD_VISUALIZATION = 'ADD_VISUALIZATION';\nexport const SET_ACTIVE_VISUALIZATION_TYPE = 'SET_ACTIVE_VISUALIZATION_TYPE';\nexport const CLEAR_VISUALIZATIONS = 'CLEAR_VISUALIZATIONS';\nexport const DEFAULT_STATE_VISUALIZATIONS = {};\n\nconst isEmpty = p => p === undefined || p === null;\n\nexport default ((state = DEFAULT_STATE_VISUALIZATIONS, action) => {\n  switch (action.type) {\n    case ADD_VISUALIZATION:\n      {\n        return { ...state,\n          [action.value.id]: objectClean({ ...orObject(state[action.value.id]),\n            ...action.value\n          }, isEmpty)\n        };\n      }\n\n    case CLEAR_VISUALIZATIONS:\n      {\n        return DEFAULT_STATE_VISUALIZATIONS;\n      }\n\n    default:\n      return state;\n  }\n}); // root selector\n\nexport const sGetVisualizationsRoot = state => state.visualizations; // selectors level 1\n\nexport const sGetVisualization = (state, id) => {\n  return sGetVisualizationsRoot(state)[id];\n};","import { ADD_VISUALIZATION, CLEAR_VISUALIZATIONS } from '../reducers/visualizations';\nexport const acAddVisualization = value => ({\n  type: ADD_VISUALIZATION,\n  value\n});\nexport const acClearVisualizations = () => ({\n  type: CLEAR_VISUALIZATIONS\n});","import { getInstance } from 'd2';\nimport arrayClean from 'd2-utilizr/lib/arrayClean';\nimport { getEndPointName, MAP } from '../modules/itemTypes';\nimport { getVisualizationId } from '../modules/item'; // Id, name\n\nexport const getIdNameFields = ({\n  rename\n} = {}) => ['id', `${rename ? 'displayName~rename(name)' : 'name,displayName'}`]; // Item\n\nexport const getItemFields = () => ['dimensionItem~rename(id)', 'displayName~rename(name)', 'dimensionItemType']; // Dimension\n\nexport const getDimensionFields = ({\n  withItems\n}) => arrayClean(['dimension', 'legendSet[id]', 'filter', 'programStage', withItems ? `items[${getItemFields().join(',')}]` : ``]); // Axis\n\nexport const getAxesFields = ({\n  withItems\n}) => [`columns[${getDimensionFields({\n  withItems\n}).join(',')}]`, `rows[${getDimensionFields({\n  withItems\n}).join(',')}]`, `filters[${getDimensionFields({\n  withItems\n}).join(',')}]`]; // Favorite\n\nexport const getFavoriteFields = ({\n  withDimensions,\n  withOptions\n}) => {\n  return arrayClean([`${getIdNameFields({\n    rename: true\n  }).join(',')}`, 'displayDescription~rename(description)', withDimensions ? `${getAxesFields({\n    withItems: true\n  }).join(',')}` : ``, withOptions ? ['*', '!attributeDimensions', '!attributeValues', '!category', '!categoryDimensions', '!categoryOptionGroupSetDimensions', '!columnDimensions', '!dataDimensionItems', '!dataElementDimensions', '!dataElementGroupSetDimensions', '!filterDimensions', '!itemOrganisationUnitGroups', '!lastUpdatedBy', '!organisationUnitGroupSetDimensions', '!organisationUnitLevels', '!organisationUnits', '!programIndicatorDimensions', '!relativePeriods', '!reportParams', '!rowDimensions', '!translations', '!userOrganisationUnit', '!userOrganisationUnitChildren', '!userOrganisationUnitGrandChildren'].join(',') : '']);\n};\nexport const getFavoritesFields = ({\n  withDimensions\n}) => [`reportTable[${getFavoriteFields({\n  withDimensions\n}).join(',')}]`, `chart[${['type', ...getFavoriteFields({\n  withDimensions\n})].join(',')}]`, `map[${getFavoriteFields({\n  withDimensions\n}).join(',')}]`, `eventReport[${getFavoriteFields({\n  withDimensions\n}).join(',')}]`, `eventChart[${getFavoriteFields({\n  withDimensions\n}).join(',')}]`]; // List item\n\nexport const getListItemFields = () => [`reports[${['type', ...getIdNameFields({\n  rename: true\n})].join(',')}]`, `resources[${getIdNameFields({\n  rename: true\n}).join(',')}]`, `users[${getIdNameFields({\n  rename: true\n}).join(',')}]`]; // Map\n\nexport const getMapFields = () => [`${getIdNameFields({\n  rename: true\n}).join(',')}`, 'user,longitude,latitude,zoom,basemap', `mapViews[${getFavoriteFields({\n  withDimensions: true,\n  withOptions: true\n})}]`]; // Api\n\nexport const apiFetchVisualization = async item => {\n  const id = getVisualizationId(item);\n  const fields = item.type === MAP ? getMapFields() : getFavoriteFields({\n    withDimensions: true,\n    withOptions: true\n  });\n  const d2 = await getInstance();\n  return await d2.Api.getApi().get(`${getEndPointName(item.type)}/${id}`, {\n    fields\n  });\n};","import arrayClean from 'd2-utilizr/lib/arrayClean';\nimport { getListItemFields, getFavoritesFields, getIdNameFields } from './metadata'; // Helper functions\n\nexport const onError = error => console.log('Error: ', error); // Dashboard item\n\nexport const getDashboardItemsFields = ({\n  withFavorite\n} = {}) => arrayClean(['id', 'type', 'shape', 'x', 'y', 'width~rename(w)', 'height~rename(h)', 'messages', 'text', 'appKey', `${getListItemFields().join(',')}`, withFavorite ? `${getFavoritesFields({\n  withDimensions: withFavorite.withDimensions\n}).join(',')}` : ``]); // Dashboard\n\nexport const getDashboardFields = ({\n  withItems,\n  withFavorite\n} = {}) => arrayClean([`${getIdNameFields().join(',')}`, 'description', 'displayDescription', 'favorite', `user[${getIdNameFields({\n  rename: true\n}).join(',')}]`, 'created', 'lastUpdated', 'access', 'href', // needed for d2-ui-translations-dialog, since we don't pass a d2 Model anymore\nwithItems ? `dashboardItems[${getDashboardItemsFields({\n  withFavorite\n}).join(',')}]` : ``]);","import arrayClean from 'd2-utilizr/lib/arrayClean';\nimport { onError, getDashboardFields } from './index';\nexport const dashboardsQuery = {\n  resource: 'dashboards',\n  params: {\n    fields: [getDashboardFields(), 'dashboardItems[id]'].join(','),\n    paging: false\n  }\n};\nexport const dashboardQuery = {\n  resource: 'dashboards',\n  id: ({\n    id\n  }) => id,\n  params: {\n    fields: arrayClean(getDashboardFields({\n      withItems: true,\n      withFavorite: {\n        withDimensions: false\n      }\n    })).join(',')\n  }\n};\nexport const deleteDashboardMutation = {\n  type: 'delete',\n  resource: 'dashboards',\n  id: ({\n    id\n  }) => id\n}; // Get \"all\" dashboards on startup\n\nexport const apiFetchDashboards = async dataEngine => {\n  try {\n    const dashboardsData = await dataEngine.query({\n      dashboards: dashboardsQuery\n    });\n    return dashboardsData.dashboards.dashboards;\n  } catch (error) {\n    onError(error);\n  }\n}; // Get more info about selected dashboard\n\nexport const apiFetchDashboard = async (dataEngine, id) => {\n  try {\n    const dashboardData = await dataEngine.query({\n      dashboard: dashboardQuery\n    }, {\n      variables: {\n        id\n      }\n    });\n    return dashboardData.dashboard;\n  } catch (error) {\n    onError(error);\n  }\n};\nexport const apiDeleteDashboard = async (dataEngine, id) => {\n  try {\n    await dataEngine.mutate(deleteDashboardMutation, {\n      variables: {\n        id\n      }\n    });\n  } catch (error) {\n    onError(error);\n  }\n};","import i18n from '@dhis2/d2-i18n';\nimport { getCustomDashboards, sGetDashboardById } from '../reducers/dashboards';\nimport { SET_SELECTED_ID, SET_SELECTED_ISLOADING, SET_SELECTED_SHOWDESCRIPTION, SET_SELECTED_ITEM_ACTIVE_TYPE, CLEAR_SELECTED_ITEM_ACTIVE_TYPES, sGetSelectedIsLoading, sGetSelectedId } from '../reducers/selected';\nimport { sGetUserUsername } from '../reducers/user';\nimport { acSetDashboardItems, acAppendDashboards } from './dashboards';\nimport { acClearItemFilters } from './itemFilters';\nimport { tGetMessages } from '../components/Item/MessagesItem/actions';\nimport { acSetAlertMessage, acClearAlertMessage } from './alert';\nimport { acAddVisualization, acClearVisualizations } from './visualizations';\nimport { apiFetchDashboard } from '../api/dashboards';\nimport { storePreferredDashboardId } from '../api/localStorage';\nimport { apiGetShowDescription } from '../api/description';\nimport { withShape } from '../modules/gridUtil';\nimport { getVisualizationFromItem } from '../modules/item';\nimport { REPORT_TABLE, CHART, MAP, EVENT_REPORT, EVENT_CHART, MESSAGES } from '../modules/itemTypes'; // actions\n\nexport const acSetSelectedId = value => ({\n  type: SET_SELECTED_ID,\n  value\n});\nexport const acSetSelectedIsLoading = value => ({\n  type: SET_SELECTED_ISLOADING,\n  value\n});\nexport const acSetSelectedShowDescription = value => ({\n  type: SET_SELECTED_SHOWDESCRIPTION,\n  value\n});\nexport const acSetSelectedItemActiveType = (id, activeType) => {\n  const action = {\n    type: SET_SELECTED_ITEM_ACTIVE_TYPE,\n    id,\n    activeType\n  };\n  return action;\n};\nexport const acClearSelectedItemActiveTypes = () => ({\n  type: CLEAR_SELECTED_ITEM_ACTIVE_TYPES\n}); // thunks\n\nexport const tSetSelectedDashboardById = id => async (dispatch, getState, dataEngine) => {\n  dispatch(acSetSelectedIsLoading(true));\n  const alertTimeout = setTimeout(() => {\n    const name = sGetDashboardById(getState(), id)?.displayName;\n\n    if (sGetSelectedIsLoading(getState()) && name) {\n      dispatch(acSetAlertMessage(i18n.t('Loading dashboard – {{name}}', {\n        name\n      })));\n    }\n  }, 500);\n\n  const onSuccess = selected => {\n    dispatch(acAppendDashboards(selected));\n    const customDashboard = getCustomDashboards(selected)[0];\n    dispatch(acSetDashboardItems(withShape(customDashboard.dashboardItems)));\n    storePreferredDashboardId(sGetUserUsername(getState()), id);\n\n    if (id !== sGetSelectedId(getState())) {\n      dispatch(acClearItemFilters());\n      dispatch(acClearVisualizations());\n      dispatch(acClearSelectedItemActiveTypes());\n    }\n\n    customDashboard.dashboardItems.forEach(item => {\n      switch (item.type) {\n        case REPORT_TABLE:\n        case CHART:\n        case MAP:\n        case EVENT_REPORT:\n        case EVENT_CHART:\n          dispatch(acAddVisualization(getVisualizationFromItem(item)));\n          break;\n\n        case MESSAGES:\n          dispatch(tGetMessages(dataEngine));\n          break;\n\n        default:\n          break;\n      }\n    });\n    dispatch(acSetSelectedId(id));\n    dispatch(acSetSelectedIsLoading(false));\n    clearTimeout(alertTimeout);\n    dispatch(acClearAlertMessage());\n    return selected;\n  };\n\n  try {\n    const dashboard = await apiFetchDashboard(dataEngine, id);\n    return onSuccess(dashboard);\n  } catch (err) {\n    console.error('Error: ', err);\n    return err;\n  }\n};\nexport const tSetShowDescription = () => async dispatch => {\n  const onSuccess = value => {\n    dispatch(acSetSelectedShowDescription(value));\n  };\n\n  try {\n    const showDescription = await apiGetShowDescription();\n    return onSuccess(showDescription);\n  } catch (err) {\n    console.error('Error (apiGetShowDescription): ', err);\n    return err;\n  }\n};","export const getPreferredDashboardId = username => localStorage.getItem(`dhis2.dashboard.current.${username}`) || undefined;\nexport const storePreferredDashboardId = (username, dashboardId) => {\n  localStorage.setItem(`dhis2.dashboard.current.${username}`, dashboardId);\n};","import { SET_DASHBOARDS, ADD_DASHBOARDS, SET_DASHBOARD_STARRED, SET_DASHBOARD_DISPLAY_NAME, SET_DASHBOARD_ITEMS, getCustomDashboards, sGetDashboardById, sGetDashboardsSortedByStarred } from '../reducers/dashboards';\nimport { NON_EXISTING_DASHBOARD_ID } from '../reducers/selected';\nimport { sGetUserUsername } from '../reducers/user';\nimport { tSetSelectedDashboardById, acSetSelectedId } from './selected';\nimport { apiFetchDashboards, apiDeleteDashboard } from '../api/dashboards';\nimport { getPreferredDashboardId } from '../api/localStorage';\nimport { arrayToIdMap } from '../modules/util'; // actions\n\nexport const acSetDashboards = dashboards => ({\n  type: SET_DASHBOARDS,\n  value: arrayToIdMap(getCustomDashboards(dashboards))\n});\nexport const acAppendDashboards = dashboards => ({\n  type: ADD_DASHBOARDS,\n  value: arrayToIdMap(getCustomDashboards(dashboards))\n});\nexport const acSetDashboardStarred = (dashboardId, isStarred) => ({\n  type: SET_DASHBOARD_STARRED,\n  dashboardId: dashboardId,\n  value: isStarred\n});\nexport const acSetDashboardDisplayName = (dashboardId, value) => ({\n  type: SET_DASHBOARD_DISPLAY_NAME,\n  dashboardId,\n  value\n});\nexport const acSetDashboardItems = value => ({\n  type: SET_DASHBOARD_ITEMS,\n  value\n}); // thunks\n\nexport const tFetchDashboards = () => async (dispatch, getState, dataEngine) => {\n  const dashboards = await apiFetchDashboards(dataEngine);\n  dispatch(acSetDashboards(dashboards));\n};\nexport const tSelectDashboard = id => async (dispatch, getState) => {\n  try {\n    const state = getState();\n    let dashboardToSelect = null;\n\n    if (id) {\n      dashboardToSelect = sGetDashboardById(state, id) || null;\n    } else {\n      const preferredId = getPreferredDashboardId(sGetUserUsername(state));\n      const dash = sGetDashboardById(state, preferredId);\n      dashboardToSelect = preferredId && dash ? dash : sGetDashboardsSortedByStarred(state)[0];\n    }\n\n    if (dashboardToSelect) {\n      dispatch(tSetSelectedDashboardById(dashboardToSelect.id));\n    } else {\n      dispatch(acSetSelectedId(NON_EXISTING_DASHBOARD_ID));\n    }\n  } catch (err) {\n    console.error('Error (apiFetchDashboards): ', err);\n    return err;\n  }\n};\nexport const tDeleteDashboard = id => async (dispatch, getState, dataEngine) => {\n  try {\n    await apiDeleteDashboard(dataEngine, id);\n    await dispatch(tFetchDashboards());\n    return Promise.resolve();\n  } catch (err) {\n    console.error('Error (deleteDashboard): ', err);\n    return err;\n  }\n};","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport i18n from '@dhis2/d2-i18n';\nimport { useD2 } from '@dhis2/app-runtime-adapter-d2';\nimport { Button, Modal, ModalTitle, ModalContent, ModalActions, ButtonStrip } from '@dhis2/ui';\nimport { PeriodDimension, DynamicDimension, OrgUnitDimension, DIMENSION_ID_PERIOD, DIMENSION_ID_ORGUNIT } from '@dhis2/analytics';\nimport { acAddItemFilter, acRemoveItemFilter } from '../../actions/itemFilters';\nimport { sGetItemFiltersRoot } from '../../reducers/itemFilters';\nimport { useSystemSettings } from '../SystemSettingsProvider';\n\nconst FilterDialog = ({\n  dimension,\n  initiallySelectedItems,\n  addItemFilter,\n  removeItemFilter,\n  onClose\n}) => {\n  const [filters, setFilters] = useState(initiallySelectedItems);\n  const {\n    d2\n  } = useD2({});\n  const {\n    settings\n  } = useSystemSettings();\n\n  const onSelectItems = ({\n    dimensionId,\n    items\n  }) => {\n    setFilters({\n      [dimensionId]: items\n    });\n  };\n\n  const onDeselectItems = ({\n    dimensionId,\n    itemIdsToRemove\n  }) => {\n    const oldList = filters[dimensionId] || [];\n    const newList = oldList.filter(item => !itemIdsToRemove.includes(item.id));\n    setFilters({ ...filters,\n      [dimensionId]: newList\n    });\n  };\n\n  const onReorderItems = ({\n    dimensionId,\n    itemIds\n  }) => {\n    const oldList = filters[dimensionId] || [];\n    const reorderedList = itemIds.map(id => oldList.find(item => item.id === id));\n    setFilters({ ...filters,\n      [dimensionId]: reorderedList\n    });\n  };\n\n  const saveFilter = () => {\n    const id = dimension.id;\n    const filterItems = filters[id];\n\n    if (filterItems && filterItems.length) {\n      addItemFilter({\n        id,\n        value: [...filterItems]\n      });\n    } else {\n      removeItemFilter(id);\n    }\n\n    onClose(id);\n  };\n\n  const renderDialogContent = () => {\n    const commonProps = {\n      d2,\n      onSelect: onSelectItems,\n      onDeselect: onDeselectItems,\n      onReorder: onReorderItems\n    };\n    const selectedItems = filters[dimension.id] || [];\n\n    switch (dimension.id) {\n      case DIMENSION_ID_PERIOD:\n        {\n          return <PeriodDimension selectedPeriods={selectedItems} onSelect={commonProps.onSelect} />;\n        }\n\n      case DIMENSION_ID_ORGUNIT:\n        return <OrgUnitDimension displayNameProperty={settings.displayNameProperty} ouItems={selectedItems} {...commonProps} />;\n\n      default:\n        return <DynamicDimension selectedItems={selectedItems} dimensionId={dimension.id} onSelect={commonProps.onSelect} />;\n    }\n  };\n\n  return <>\n            {dimension.id && <Modal dataTest={`${dimension.id}-dimension-modal`} onClose={onClose} position=\"top\" large>\n                    <ModalTitle>{dimension.name}</ModalTitle>\n                    <ModalContent>{renderDialogContent()}</ModalContent>\n                    <ModalActions>\n                        <ButtonStrip>\n                            <Button secondary onClick={onClose}>\n                                {i18n.t('Cancel')}\n                            </Button>\n                            <Button primary onClick={saveFilter}>\n                                {i18n.t('Confirm')}\n                            </Button>\n                        </ButtonStrip>\n                    </ModalActions>\n                </Modal>}\n        </>;\n};\n\nFilterDialog.propTypes = {\n  addItemFilter: PropTypes.func,\n  dimension: PropTypes.object,\n  initiallySelectedItems: PropTypes.object,\n  removeItemFilter: PropTypes.func,\n  onClose: PropTypes.func\n};\n\nconst mapStateToProps = state => ({\n  initiallySelectedItems: sGetItemFiltersRoot(state)\n});\n\nexport default connect(mapStateToProps, {\n  addItemFilter: acAddItemFilter,\n  removeItemFilter: acRemoveItemFilter\n})(FilterDialog);","export const SET_ACTIVE_MODAL_DIMENSION = 'SET_ACTIVE_MODAL_DIMENSION';\nexport const CLEAR_ACTIVE_MODAL_DIMENSION = 'CLEAR_ACTIVE_MODAL_DIMENSION';\nexport const DEFAULT_STATE_ACTIVE_MODAL_DIMENSION = {};\nexport default ((state = DEFAULT_STATE_ACTIVE_MODAL_DIMENSION, action) => {\n  switch (action.type) {\n    case SET_ACTIVE_MODAL_DIMENSION:\n      {\n        return action.value;\n      }\n\n    case CLEAR_ACTIVE_MODAL_DIMENSION:\n      {\n        return DEFAULT_STATE_ACTIVE_MODAL_DIMENSION;\n      }\n\n    default:\n      return state;\n  }\n});\nexport const sGetActiveModalDimension = state => state.activeModalDimension;","import { SET_ACTIVE_MODAL_DIMENSION, CLEAR_ACTIVE_MODAL_DIMENSION } from '../reducers/activeModalDimension';\nexport const acSetActiveModalDimension = value => ({\n  type: SET_ACTIVE_MODAL_DIMENSION,\n  value\n});\nexport const acClearActiveModalDimension = () => ({\n  type: CLEAR_ACTIVE_MODAL_DIMENSION\n});","import React, { useState, useRef } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport ArrowDropDownIcon from '@material-ui/icons/ArrowDropDown';\nimport isEmpty from 'lodash/isEmpty';\nimport i18n from '@dhis2/d2-i18n';\nimport { DimensionsPanel } from '@dhis2/analytics';\nimport { Button, Popover } from '@dhis2/ui';\nimport FilterDialog from './FilterDialog';\nimport { sGetActiveModalDimension } from '../../reducers/activeModalDimension';\nimport { sGetDimensions } from '../../reducers/dimensions';\nimport { sGetItemFiltersRoot } from '../../reducers/itemFilters';\nimport { acClearActiveModalDimension, acSetActiveModalDimension } from '../../actions/activeModalDimension';\nimport classes from './styles/FilterSelector.module.css';\n\nconst FilterSelector = props => {\n  const [showPopover, setShowPopover] = useState(false);\n  const ref = useRef(null);\n\n  const onCloseDialog = () => {\n    setShowPopover(false);\n    props.clearActiveModalDimension();\n  };\n\n  const selectDimension = id => {\n    props.setActiveModalDimension(props.dimensions.find(dimension => dimension.id === id));\n  };\n\n  return <>\n            <span className={classes.buttonContainer} ref={ref}>\n                <Button onClick={() => setShowPopover(true)}>\n                    {i18n.t('Add filter')}\n                    <ArrowDropDownIcon />\n                </Button>\n            </span>\n            {showPopover && <Popover onClickOutside={onCloseDialog} reference={ref} arrow={true} placement=\"bottom-start\" dataTest=\"dashboard-filter-popover\">\n                    <div className={classes.popover}>\n                        <DimensionsPanel style={{\n          width: '320px'\n        }} dimensions={props.dimensions} onDimensionClick={selectDimension} selectedIds={Object.keys(props.initiallySelectedItems)} />\n                    </div>\n                </Popover>}\n            {!isEmpty(props.dimension) ? <FilterDialog dimension={props.dimension} onClose={onCloseDialog} /> : null}\n        </>;\n};\n\nconst mapStateToProps = state => ({\n  dimension: sGetActiveModalDimension(state),\n  dimensions: sGetDimensions(state),\n  initiallySelectedItems: sGetItemFiltersRoot(state)\n});\n\nFilterSelector.propTypes = {\n  clearActiveModalDimension: PropTypes.func,\n  dimension: PropTypes.object,\n  dimensions: PropTypes.array,\n  initiallySelectedItems: PropTypes.object,\n  setActiveModalDimension: PropTypes.func\n};\nexport default connect(mapStateToProps, {\n  clearActiveModalDimension: acClearActiveModalDimension,\n  setActiveModalDimension: acSetActiveModalDimension\n})(FilterSelector);","import React, { useState, createRef } from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport cx from 'classnames';\nimport { Link, Redirect } from 'react-router-dom';\nimport i18n from '@dhis2/d2-i18n';\nimport SharingDialog from '@dhis2/d2-ui-sharing-dialog';\nimport { useDataEngine, useAlert } from '@dhis2/app-runtime';\nimport Star from '@material-ui/icons/Star';\nimport StarBorder from '@material-ui/icons/StarBorder';\nimport { Button, FlyoutMenu, Popover, MenuItem, colors } from '@dhis2/ui';\nimport { useD2 } from '@dhis2/app-runtime-adapter-d2';\nimport { ThreeDots } from '../Item/VisualizationItem/assets/icons';\nimport { orObject } from '../../modules/util';\nimport { apiStarDashboard } from '../../api/starDashboard';\nimport { apiPostShowDescription } from '../../api/description';\nimport { acSetDashboardStarred } from '../../actions/dashboards';\nimport { acSetSelectedShowDescription } from '../../actions/selected';\nimport FilterSelector from '../ItemFilter/FilterSelector';\nimport { sGetSelectedId, sGetSelectedShowDescription } from '../../reducers/selected';\nimport { sGetDashboardById, sGetDashboardItems, EMPTY_DASHBOARD } from '../../reducers/dashboards';\nimport classes from './styles/ViewTitleBar.module.css';\n\nconst ViewTitleBar = ({\n  id,\n  name,\n  description,\n  access,\n  showDescription,\n  starred,\n  setDashboardStarred,\n  updateShowDescription\n}) => {\n  const [moreOptionsIsOpen, setMoreOptionsIsOpen] = useState(false);\n  const [sharingDialogIsOpen, setSharingDialogIsOpen] = useState(false);\n  const [redirectUrl, setRedirectUrl] = useState(null);\n  const {\n    d2\n  } = useD2({});\n  const dataEngine = useDataEngine();\n  const warningAlert = useAlert(({\n    msg\n  }) => msg, {\n    warning: true\n  });\n\n  const toggleSharingDialog = () => setSharingDialogIsOpen(!sharingDialogIsOpen);\n\n  const toggleMoreOptions = () => setMoreOptionsIsOpen(!moreOptionsIsOpen);\n\n  const printLayout = () => setRedirectUrl(`${id}/printlayout`);\n\n  const printOipp = () => setRedirectUrl(`${id}/printoipp`);\n\n  const StarIcon = starred ? Star : StarBorder;\n\n  if (redirectUrl) {\n    return <Redirect to={redirectUrl} />;\n  }\n\n  const showHideDescriptionLabel = showDescription ? i18n.t('Hide description') : i18n.t('Show description');\n\n  const onToggleShowDescription = () => apiPostShowDescription(!showDescription).then(() => {\n    updateShowDescription(!showDescription);\n    toggleMoreOptions();\n  }).catch(() => {\n    const msg = showDescription ? i18n.t('Failed to hide description') : i18n.t('Failed to show description');\n    warningAlert.show({\n      msg\n    });\n  });\n\n  const toggleStarredDashboardLabel = starred ? i18n.t('Unstar dashboard') : i18n.t('Star dashboard');\n\n  const onToggleStarredDashboard = () => apiStarDashboard(dataEngine, id, !starred).then(() => {\n    setDashboardStarred(id, !starred);\n\n    if (moreOptionsIsOpen) {\n      toggleMoreOptions();\n    }\n  }).catch(() => {\n    const msg = starred ? i18n.t('Failed to unstar the dashboard') : i18n.t('Failed to star the dashboard');\n    warningAlert.show({\n      msg\n    });\n  });\n\n  const buttonRef = createRef();\n  const userAccess = orObject(access);\n  const descriptionClasses = cx(classes.descContainer, description ? classes.desc : classes.noDesc);\n\n  const getMoreButton = (className, useSmall) => <Button className={className} small={useSmall} onClick={toggleMoreOptions}>\n            <ThreeDots />\n            <span className={classes.moreText}>{i18n.t('More')}</span>\n        </Button>;\n\n  return <>\n            <div className={classes.container}>\n                <div className={classes.titleBar}>\n                    <span className={classes.title} data-test=\"view-dashboard-title\">\n                        {name}\n                    </span>\n                    <div className={classes.actions}>\n                        <div className={classes.star} onClick={onToggleStarredDashboard} data-test=\"button-star-dashboard\">\n                            <StarIcon style={{\n              fill: colors.grey600\n            }} data-test={starred ? 'dashboard-starred' : 'dashboard-unstarred'} />\n                        </div>\n                        <div className={classes.strip}>\n                            {userAccess.update ? <Link className={classes.editLink} to={`/${id}/edit`} data-test=\"link-edit-dashboard\">\n                                    <Button>{i18n.t('Edit')}</Button>\n                                </Link> : null}\n                            {userAccess.manage ? <Button className={classes.shareButton} onClick={toggleSharingDialog}>\n                                    {i18n.t('Share')}\n                                </Button> : null}\n                            <FilterSelector />\n                            <span ref={buttonRef}>\n                                {getMoreButton(classes.moreButton, false)}\n                                {getMoreButton(classes.moreButtonSmall, true)}\n                            </span>\n                        </div>\n                        {moreOptionsIsOpen && <Popover reference={buttonRef} placement=\"bottom-start\" onClickOutside={toggleMoreOptions}>\n                                <FlyoutMenu>\n                                    <MenuItem dense label={toggleStarredDashboardLabel} onClick={onToggleStarredDashboard} />\n                                    <MenuItem dense label={showHideDescriptionLabel} onClick={onToggleShowDescription} />\n                                    <MenuItem dense label={i18n.t('Print')} dataTest=\"print-menu-item\">\n                                        <MenuItem dense label={i18n.t('Dashboard layout')} onClick={printLayout} dataTest=\"print-layout-menu-item\" />\n                                        <MenuItem dense label={i18n.t('One item per page')} onClick={printOipp} dataTest=\"print-oipp-menu-item\" />\n                                    </MenuItem>\n                                </FlyoutMenu>\n                            </Popover>}\n                    </div>\n                </div>\n                {showDescription && <div className={descriptionClasses} data-test=\"dashboard-description\">\n                        {description || i18n.t('No description')}\n                    </div>}\n            </div>\n            {id && <SharingDialog d2={d2} id={id} type=\"dashboard\" open={sharingDialogIsOpen} onRequestClose={toggleSharingDialog} />}\n        </>;\n};\n\nViewTitleBar.propTypes = {\n  access: PropTypes.object,\n  description: PropTypes.string,\n  id: PropTypes.string,\n  name: PropTypes.string,\n  setDashboardStarred: PropTypes.func,\n  showDescription: PropTypes.bool,\n  starred: PropTypes.bool,\n  updateShowDescription: PropTypes.func\n};\nViewTitleBar.defaultProps = {\n  name: '',\n  description: '',\n  starred: false,\n  showDescription: false\n};\n\nconst mapStateToProps = state => {\n  const id = sGetSelectedId(state);\n  const dashboard = sGetDashboardById(state, id) || EMPTY_DASHBOARD;\n  return {\n    id,\n    name: dashboard.displayName,\n    description: dashboard.displayDescription,\n    dashboardItems: sGetDashboardItems(state),\n    showDescription: sGetSelectedShowDescription(state),\n    starred: dashboard.starred,\n    access: dashboard.access\n  };\n};\n\nexport default connect(mapStateToProps, {\n  setDashboardStarred: acSetDashboardStarred,\n  updateShowDescription: acSetSelectedShowDescription\n})(ViewTitleBar);","export const getStarDashboardMutation = id => ({\n  type: 'create',\n  resource: `dashboards/${id}/favorite`\n});\nexport const getUnstarDashboardMutation = id => ({\n  type: 'delete',\n  resource: `dashboards/${id}/favorite`\n});\nexport const apiStarDashboard = (dataEngine, id, isStarred) => {\n  const mutation = isStarred ? getStarDashboardMutation(id) : getUnstarDashboardMutation(id);\n  return dataEngine.mutate(mutation);\n};","import React, { useEffect, useRef } from 'react';\nimport PropTypes from 'prop-types';\nimport { useD2 } from '@dhis2/app-runtime-adapter-d2';\nimport { useConfig } from '@dhis2/app-runtime';\nimport { load, unmount } from './plugin';\nimport getGridItemDomId from '../../../../modules/getGridItemDomId';\n\nconst DefaultPlugin = ({\n  item,\n  activeType,\n  visualization,\n  options,\n  style\n}) => {\n  const {\n    d2\n  } = useD2({});\n  const {\n    baseUrl\n  } = useConfig();\n  const credentials = {\n    baseUrl,\n    auth: d2.Api.getApi().defaultHeaders.Authorization\n  };\n  const prevItem = useRef();\n  const prevActiveType = useRef();\n  useEffect(() => {\n    load(item, visualization, {\n      credentials,\n      activeType,\n      options\n    });\n    prevItem.current = item;\n    prevActiveType.current = activeType;\n    return () => unmount(item, activeType);\n  }, []);\n  useEffect(() => {\n    if (shouldPluginReload()) {\n      unmount(item, prevActiveType.current);\n      load(item, visualization, {\n        credentials,\n        activeType\n      });\n    }\n\n    prevItem.current = item;\n    prevActiveType.current = activeType;\n  }, [item, visualization, activeType]);\n  /**\n   * Prevent unnecessary re-rendering\n   * TODO: fix this hack\n   */\n\n  const shouldPluginReload = () => {\n    const reloadAllowed = prevItem.current === item;\n    const visChanged = prevActiveType.current !== activeType;\n    return reloadAllowed && visChanged;\n  };\n\n  return <div id={getGridItemDomId(item.id)} style={style} />;\n};\n\nDefaultPlugin.propTypes = {\n  activeType: PropTypes.string,\n  item: PropTypes.object,\n  options: PropTypes.object,\n  style: PropTypes.object,\n  visualization: PropTypes.object\n};\nDefaultPlugin.defaultProps = {\n  style: {},\n  item: {},\n  options: {},\n  visualization: {}\n};\nexport default DefaultPlugin;","import React from 'react';\nimport PropTypes from 'prop-types';\nimport classes from './styles/NoVisualizationMessage.module.css';\n\nconst NoVisualizationMessage = ({\n  message\n}) => {\n  return <div className={classes.message}>{message}</div>;\n};\n\nNoVisualizationMessage.propTypes = {\n  message: PropTypes.string\n};\nexport default NoVisualizationMessage;","import React from 'react';\nimport PropTypes from 'prop-types';\nimport i18n from '@dhis2/d2-i18n';\nimport DefaultPlugin from './DefaultPlugin';\nimport { MAP } from '../../../../modules/itemTypes';\nimport { pluginIsAvailable } from './plugin';\nimport NoVisualizationMessage from './NoVisualizationMessage';\n\nconst MapPlugin = ({\n  applyFilters,\n  ...props\n}) => {\n  if (props.item.type === MAP) {\n    // apply filters only to thematic and event layers\n    // for maps AO\n    const mapViews = props.visualization.mapViews.map(mapView => {\n      if (mapView.layer.includes('thematic') || mapView.layer.includes('event')) {\n        return applyFilters(mapView, props.itemFilters);\n      }\n\n      return mapView;\n    });\n    props.visualization = { ...props.visualization,\n      mapViews\n    };\n  } else {\n    // this is the case of a non map AO passed to the maps plugin\n    // due to a visualization type switch in dashboard item\n    // maps plugin takes care of converting the AO to a suitable format\n    props.visualization = applyFilters(props.visualization, props.itemFilters);\n  }\n\n  return pluginIsAvailable(props.activeType || props.item.type) ? <DefaultPlugin options={{\n    hideTitle: true\n  }} {...props} /> : <NoVisualizationMessage message={i18n.t('Unable to load the plugin for this item')} />;\n};\n\nMapPlugin.propTypes = {\n  activeType: PropTypes.string,\n  applyFilters: PropTypes.func,\n  item: PropTypes.object,\n  itemFilters: PropTypes.object,\n  visualization: PropTypes.object\n};\nexport default MapPlugin;","import React from 'react';\nimport { CircularLoader } from '@dhis2/ui';\nimport classes from './styles/LoadingMask.module.css';\n\nconst LoadingMask = () => {\n  return <div className={classes.center}>\n            <CircularLoader />\n        </div>;\n};\n\nexport default LoadingMask;","const getFilteredVisualization = (visualization, filters) => {\n  if (!Object.keys(filters).length) {\n    return visualization;\n  } // deep clone objects in filters to avoid changing the visualization in the Redux store\n\n\n  const visRows = visualization.rows.map(obj => ({ ...obj\n  }));\n  const visColumns = visualization.columns.map(obj => ({ ...obj\n  }));\n  const visFilters = visualization.filters.map(obj => ({ ...obj\n  }));\n  Object.keys(filters).forEach(dimensionId => {\n    if (filters[dimensionId]) {\n      let dimensionFound = false;\n      [visRows, visColumns, visFilters].forEach(dimensionObjects => dimensionObjects.filter(obj => obj.dimension === dimensionId).forEach(obj => {\n        dimensionFound = true;\n        obj.items = filters[dimensionId];\n      })); // add dimension to filters if not already present elsewhere\n\n      if (!dimensionFound) {\n        visFilters.push({\n          dimension: dimensionId,\n          items: filters[dimensionId]\n        });\n      }\n    }\n  });\n  return { ...visualization,\n    rows: visRows,\n    columns: visColumns,\n    filters: visFilters\n  };\n};\n\nexport default getFilteredVisualization;","import { VIS_TYPE_COLUMN, VIS_TYPE_PIVOT_TABLE, getAdaptedUiLayoutByType } from '@dhis2/analytics';\nimport { REPORT_TABLE, CHART, MAP } from '../../../../modules/itemTypes';\nexport const THEMATIC_LAYER = 'thematic';\n\nconst extractMapView = map => map.mapViews && map.mapViews.find(mv => mv.layer.includes(THEMATIC_LAYER));\n\nconst getWithoutId = object => ({ ...object,\n  id: undefined\n});\n\nconst getVisualizationConfig = (visualization, originalType, activeType) => {\n  if (originalType === MAP && originalType !== activeType) {\n    const extractedMapView = extractMapView(visualization);\n\n    if (extractedMapView === undefined) {\n      return null;\n    }\n\n    return getWithoutId({ ...visualization,\n      ...extractedMapView,\n      mapViews: undefined,\n      type: activeType === CHART ? VIS_TYPE_COLUMN : VIS_TYPE_PIVOT_TABLE\n    });\n  } else if (originalType === REPORT_TABLE && activeType === CHART) {\n    const layout = getAdaptedUiLayoutByType(visualization, VIS_TYPE_COLUMN);\n    return getWithoutId({ ...visualization,\n      ...layout,\n      type: VIS_TYPE_COLUMN\n    });\n  } else if (originalType === CHART && activeType === REPORT_TABLE) {\n    const layout = getAdaptedUiLayoutByType(visualization, VIS_TYPE_PIVOT_TABLE);\n    return getWithoutId({ ...visualization,\n      ...layout,\n      type: VIS_TYPE_PIVOT_TABLE\n    });\n  }\n\n  return getWithoutId(visualization);\n};\n\nexport default getVisualizationConfig;","// Note that this ignores discrepancies in 'this', so shouldn't be used with bound functions\n// This is useful instead of lodash/memoize when we only need to memoize a single value\n// Inspiration: https://github.com/alexreardon/memoize-one\nconst memoizeOne = fn => {\n  let lastArgs = undefined;\n  let lastValue = undefined;\n  return (...args) => {\n    if (lastArgs && args.length === lastArgs.length && args.every((arg, i) => arg === lastArgs[i])) {\n      return lastValue;\n    }\n\n    lastArgs = args;\n    lastValue = fn(...args);\n    return lastValue;\n  };\n};\n\nexport default memoizeOne;","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport VisualizationPlugin from '@dhis2/data-visualizer-plugin';\nimport i18n from '@dhis2/d2-i18n';\nimport { D2Shim } from '@dhis2/app-runtime-adapter-d2';\nimport DefaultPlugin from './DefaultPlugin';\nimport MapPlugin from './MapPlugin';\nimport LoadingMask from './LoadingMask';\nimport NoVisualizationMessage from './NoVisualizationMessage';\nimport getFilteredVisualization from './getFilteredVisualization';\nimport getVisualizationConfig from './getVisualizationConfig';\nimport { VISUALIZATION, MAP, CHART, REPORT_TABLE } from '../../../../modules/itemTypes';\nimport { getVisualizationId } from '../../../../modules/item';\nimport memoizeOne from '../../../../modules/memoizeOne';\nimport { sGetVisualization } from '../../../../reducers/visualizations';\nimport { pluginIsAvailable } from './plugin';\n\nclass Visualization extends React.Component {\n  state = {\n    pluginLoaded: false\n  };\n\n  constructor(props) {\n    super(props);\n    this.memoizedGetFilteredVisualization = memoizeOne(getFilteredVisualization);\n    this.memoizedGetVisualizationConfig = memoizeOne(getVisualizationConfig);\n  }\n\n  onLoadingComplete = () => {\n    this.setState({\n      pluginLoaded: true\n    });\n  };\n\n  render() {\n    const {\n      visualization,\n      activeType,\n      item,\n      itemFilters,\n      availableHeight,\n      availableWidth\n    } = this.props;\n\n    if (!visualization) {\n      return <NoVisualizationMessage message={i18n.t('No data to display')} />;\n    }\n\n    const style = {\n      height: availableHeight\n    };\n\n    if (availableWidth) {\n      style.width = availableWidth;\n    }\n\n    const pluginProps = {\n      item,\n      itemFilters,\n      activeType,\n      style,\n      visualization: this.memoizedGetVisualizationConfig(visualization, item.type, activeType)\n    };\n\n    switch (activeType) {\n      case VISUALIZATION:\n      case CHART:\n      case REPORT_TABLE:\n        {\n          return <>\n                        {!this.state.pluginLoaded && <div style={pluginProps.style}>\n                                <LoadingMask />\n                            </div>}\n                        <D2Shim d2Config={{}}>\n                            {({\n                d2\n              }) => <VisualizationPlugin d2={d2} visualization={this.memoizedGetFilteredVisualization(pluginProps.visualization, pluginProps.itemFilters)} onLoadingComplete={this.onLoadingComplete} forDashboard={true} style={pluginProps.style} />}\n                        </D2Shim>\n                    </>;\n        }\n\n      case MAP:\n        {\n          return <MapPlugin applyFilters={this.memoizedGetFilteredVisualization} {...pluginProps} />;\n        }\n\n      default:\n        {\n          pluginProps.visualization = this.memoizedGetFilteredVisualization(pluginProps.visualization, pluginProps.itemFilters);\n          return pluginIsAvailable(pluginProps.activeType || pluginProps.item.type) ? <DefaultPlugin {...pluginProps} /> : <NoVisualizationMessage message={i18n.t('Unable to load the plugin for this item')} />;\n        }\n    }\n  }\n\n}\n\nVisualization.propTypes = {\n  activeType: PropTypes.string,\n  availableHeight: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n  availableWidth: PropTypes.number,\n  item: PropTypes.object,\n  itemFilters: PropTypes.object,\n  visualization: PropTypes.object\n};\n\nconst mapStateToProps = (state, ownProps) => {\n  return {\n    visualization: sGetVisualization(state, getVisualizationId(ownProps.item))\n  };\n};\n\nexport default connect(mapStateToProps)(Visualization);","import React from 'react';\nimport PropTypes from 'prop-types';\nimport i18n from '@dhis2/d2-i18n';\nimport { Warning } from './assets/icons';\nimport classes from './styles/FatalErrorBoundary.module.css';\n\nclass FatalErrorBoundary extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      errorFound: false\n    };\n  }\n\n  componentDidCatch(error, info) {\n    this.setState({\n      errorFound: true\n    });\n    console.log('error: ', error);\n    console.log('info: ', info);\n  }\n\n  render() {\n    if (this.state.errorFound) {\n      return <p className={classes.container}>\n                    <span className={classes.icon}>\n                        <Warning />\n                    </span>\n                    <span className={classes.message}>\n                        {i18n.t('There was a problem loading this dashboard item')}\n                    </span>\n                </p>;\n    }\n\n    return this.props.children;\n  }\n\n}\n\nFatalErrorBoundary.propTypes = {\n  children: PropTypes.node\n};\nexport default FatalErrorBoundary;","import React from 'react';\nimport PropTypes from 'prop-types';\nimport classes from './styles/ItemHeader.module.css';\n\nconst ViewItemActions = ({\n  actionButtons\n}) => {\n  return actionButtons ? <div className={classes.itemActionsWrap}>{actionButtons}</div> : null;\n};\n\nViewItemActions.propTypes = {\n  actionButtons: PropTypes.node\n};\nexport default ViewItemActions;","import React from 'react';\nimport PropTypes from 'prop-types';\nimport i18n from '@dhis2/d2-i18n';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport { colors } from '@dhis2/ui';\nimport classes from './styles/DeleteItemButton.module.css';\n\nconst DeleteItemButton = ({\n  onClick\n}) => <button type=\"button\" className={classes.deleteItemButton} onClick={onClick} title={i18n.t(`Delete item`)}>\n        <DeleteIcon style={{\n    fill: colors.red500\n  }} />\n    </button>;\n\nDeleteItemButton.propTypes = {\n  onClick: PropTypes.func\n};\nexport default DeleteItemButton;","/** @module reducers/editDashboard */\nimport update from 'immutability-helper';\nimport isEmpty from 'lodash/isEmpty';\nimport { orArray, orObject } from '../modules/util';\nexport const RECEIVED_EDIT_DASHBOARD = 'RECEIVED_EDIT_DASHBOARD';\nexport const RECEIVED_NOT_EDITING = 'RECEIVED_NOT_EDITING';\nexport const START_NEW_DASHBOARD = 'START_NEW_DASHBOARD';\nexport const RECEIVED_TITLE = 'RECEIVED_TITLE';\nexport const RECEIVED_DESCRIPTION = 'RECEIVED_DESCRIPTION';\nexport const ADD_DASHBOARD_ITEM = 'ADD_DASHBOARD_ITEM';\nexport const REMOVE_DASHBOARD_ITEM = 'REMOVE_DASHBOARD_ITEM';\nexport const UPDATE_DASHBOARD_ITEM = 'UPDATE_DASHBOARD_ITEM';\nexport const RECEIVED_DASHBOARD_LAYOUT = 'RECEIVED_DASHBOARD_LAYOUT';\nexport const SET_PRINT_PREVIEW_VIEW = 'SET_PRINT_PREVIEW_VIEW';\nexport const CLEAR_PRINT_PREVIEW_VIEW = 'CLEAR_PRINT_PREVIEW_VIEW';\nexport const DEFAULT_STATE_EDIT_DASHBOARD = {};\nexport const NEW_DASHBOARD_STATE = {\n  id: '',\n  name: '',\n  access: {},\n  description: '',\n  dashboardItems: [],\n  printPreviewView: false\n};\nexport default ((state = DEFAULT_STATE_EDIT_DASHBOARD, action) => {\n  switch (action.type) {\n    case RECEIVED_EDIT_DASHBOARD:\n      {\n        const newState = {};\n        Object.keys(NEW_DASHBOARD_STATE).map(k => newState[k] = action.value[k]);\n        newState.printPreviewView = false;\n        return newState;\n      }\n\n    case RECEIVED_NOT_EDITING:\n      return DEFAULT_STATE_EDIT_DASHBOARD;\n\n    case SET_PRINT_PREVIEW_VIEW:\n      return Object.assign({}, state, {\n        printPreviewView: true\n      });\n\n    case CLEAR_PRINT_PREVIEW_VIEW:\n      return Object.assign({}, state, {\n        printPreviewView: false\n      });\n\n    case START_NEW_DASHBOARD:\n      return NEW_DASHBOARD_STATE;\n\n    case RECEIVED_TITLE:\n      {\n        return Object.assign({}, state, {\n          name: action.value\n        });\n      }\n\n    case RECEIVED_DESCRIPTION:\n      {\n        return Object.assign({}, state, {\n          description: action.value\n        });\n      }\n\n    case ADD_DASHBOARD_ITEM:\n      if (!action.value.position) {\n        return update(state, {\n          dashboardItems: {\n            $unshift: [action.value]\n          }\n        });\n      }\n\n      return update(state, {\n        dashboardItems: {\n          $splice: [[parseInt(action.value.position), 0, action.value]]\n        }\n      });\n\n    case REMOVE_DASHBOARD_ITEM:\n      {\n        const idToRemove = action.value;\n        const dashboardItemIndex = state.dashboardItems.findIndex(item => item.id === idToRemove);\n\n        if (dashboardItemIndex > -1) {\n          return update(state, {\n            dashboardItems: {\n              $splice: [[dashboardItemIndex, 1]]\n            }\n          });\n        }\n\n        return state;\n      }\n\n    case RECEIVED_DASHBOARD_LAYOUT:\n      {\n        const stateItems = orArray(state.dashboardItems);\n        let layoutHasChanged = false;\n        const newStateItems = action.value.map(({\n          x,\n          y,\n          w,\n          h,\n          i\n        }) => {\n          const stateItem = stateItems.find(si => si.id === i);\n\n          if (!(stateItem.x === x && stateItem.y === y && stateItem.w === w && stateItem.h === h)) {\n            layoutHasChanged = true;\n            return Object.assign({}, stateItem, {\n              w,\n              h,\n              x,\n              y\n            });\n          }\n\n          return stateItem;\n        });\n        return layoutHasChanged ? { ...state,\n          dashboardItems: newStateItems\n        } : state;\n      }\n\n    case UPDATE_DASHBOARD_ITEM:\n      {\n        const dashboardItem = action.value;\n        const dashboardItemIndex = state.dashboardItems.findIndex(item => item.id === dashboardItem.id);\n\n        if (dashboardItemIndex > -1) {\n          const newState = update(state, {\n            dashboardItems: {\n              $splice: [[dashboardItemIndex, 1, Object.assign({}, dashboardItem)]]\n            }\n          });\n          return newState;\n        }\n\n        return state;\n      }\n\n    default:\n      return state;\n  }\n}); // root selector\n\nexport const sGetEditDashboardRoot = state => state.editDashboard; // selectors\n\nexport const sGetIsEditing = state => !isEmpty(state.editDashboard);\nexport const sGetIsPrintPreviewView = state => sGetEditDashboardRoot(state).printPreviewView;\nexport const sGetIsNewDashboard = state => {\n  return !isEmpty(state.editDashboard) && sGetEditDashboardRoot(state).id === '';\n};\nexport const sGetEditDashboardName = state => sGetEditDashboardRoot(state).name;\nexport const sGetEditDashboardDescription = state => sGetEditDashboardRoot(state).description;\nexport const sGetEditDashboardItems = state => orObject(sGetEditDashboardRoot(state)).dashboardItems;","import { apiFetchDashboard } from './dashboards';\nexport const createDashboardMutation = {\n  resource: 'dashboards',\n  type: 'create',\n  data: ({\n    data\n  }) => data\n};\nexport const updateDashboardMutation = {\n  resource: 'dashboards',\n  type: 'update',\n  id: ({\n    id\n  }) => id,\n  data: ({\n    data\n  }) => data\n};\n\nconst generatePayload = (dashboard = {}, data) => {\n  return { ...dashboard,\n    name: data.name,\n    description: data.description,\n    dashboardItems: data.dashboardItems.map(item => ({ ...item,\n      width: item.w,\n      height: item.h\n    }))\n  };\n};\n\nexport const updateDashboard = async (dataEngine, data) => {\n  const dashboard = await apiFetchDashboard(dataEngine, data.id);\n  const {\n    response\n  } = await dataEngine.mutate(updateDashboardMutation, {\n    variables: {\n      id: data.id,\n      data: generatePayload(dashboard, data)\n    }\n  });\n  return response.uid;\n};\nexport const postDashboard = async (dataEngine, data) => {\n  const {\n    response\n  } = await dataEngine.mutate(createDashboardMutation, {\n    variables: {\n      data: generatePayload({}, data)\n    }\n  });\n  return response.uid;\n};","import { generateUid } from 'd2/uid';\nimport i18n from '@dhis2/d2-i18n';\nimport { RECEIVED_EDIT_DASHBOARD, START_NEW_DASHBOARD, RECEIVED_NOT_EDITING, RECEIVED_TITLE, RECEIVED_DESCRIPTION, RECEIVED_DASHBOARD_LAYOUT, ADD_DASHBOARD_ITEM, UPDATE_DASHBOARD_ITEM, REMOVE_DASHBOARD_ITEM, SET_PRINT_PREVIEW_VIEW, CLEAR_PRINT_PREVIEW_VIEW, sGetEditDashboardRoot } from '../reducers/editDashboard';\nimport { tFetchDashboards } from './dashboards';\nimport { updateDashboard, postDashboard } from '../api/editDashboard';\nimport { NEW_ITEM_SHAPE, getGridItemProperties, getPageBreakItemShape, getPrintTitlePageItemShape } from '../modules/gridUtil';\nimport { itemTypeMap, PAGEBREAK, PRINT_TITLE_PAGE } from '../modules/itemTypes';\nimport { convertUiItemsToBackend } from '../modules/uiBackendItemConverter'; // actions\n\nexport const acSetEditDashboard = (dashboard, items) => {\n  const val = { ...dashboard,\n    dashboardItems: items\n  };\n  return {\n    type: RECEIVED_EDIT_DASHBOARD,\n    value: val\n  };\n};\nexport const acSetEditNewDashboard = () => ({\n  type: START_NEW_DASHBOARD\n});\nexport const acClearEditDashboard = () => ({\n  type: RECEIVED_NOT_EDITING\n});\nexport const acSetPrintPreviewView = () => ({\n  type: SET_PRINT_PREVIEW_VIEW\n});\nexport const acClearPrintPreviewView = () => ({\n  type: CLEAR_PRINT_PREVIEW_VIEW\n});\nexport const acSetDashboardTitle = value => ({\n  type: RECEIVED_TITLE,\n  value\n});\nexport const acSetDashboardDescription = value => ({\n  type: RECEIVED_DESCRIPTION,\n  value\n});\nexport const acUpdateDashboardLayout = value => ({\n  type: RECEIVED_DASHBOARD_LAYOUT,\n  value\n});\nexport const acAddDashboardItem = item => {\n  const type = item.type;\n  delete item.type;\n  const itemPropName = itemTypeMap[type].propName;\n  const id = generateUid();\n  const gridItemProperties = getGridItemProperties(id);\n  let shape;\n\n  if (type === PAGEBREAK) {\n    const yPos = item.yPos || 0;\n    shape = getPageBreakItemShape(yPos, item.isStatic);\n  } else if (type === PRINT_TITLE_PAGE) {\n    shape = getPrintTitlePageItemShape();\n  } else {\n    shape = NEW_ITEM_SHAPE;\n  }\n\n  return {\n    type: ADD_DASHBOARD_ITEM,\n    value: {\n      id,\n      type,\n      position: item.position || null,\n      [itemPropName]: item.content,\n      ...NEW_ITEM_SHAPE,\n      ...gridItemProperties,\n      ...shape\n    }\n  };\n};\nexport const acUpdateDashboardItem = item => ({\n  type: UPDATE_DASHBOARD_ITEM,\n  value: item\n});\nexport const acRemoveDashboardItem = value => ({\n  type: REMOVE_DASHBOARD_ITEM,\n  value\n}); // thunks\n\nexport const tSaveDashboard = () => async (dispatch, getState, dataEngine) => {\n  const dashboard = sGetEditDashboardRoot(getState());\n  const dashboardToSave = { ...dashboard,\n    dashboardItems: convertUiItemsToBackend(dashboard.dashboardItems),\n    name: dashboard.name || i18n.t('Untitled dashboard')\n  };\n  const dashboardId = dashboardToSave.id ? await updateDashboard(dataEngine, dashboardToSave) : await postDashboard(dataEngine, dashboardToSave); // update the dashboard list\n\n  await dispatch(tFetchDashboards());\n  return Promise.resolve(dashboardId);\n};","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport DeleteItemButton from './DeleteItemButton';\nimport { acRemoveDashboardItem } from '../../../actions/editDashboard';\nimport classes from './styles/ItemHeader.module.css';\n\nconst EditItemActions = ({\n  itemId,\n  acRemoveDashboardItem\n}) => {\n  const handleDeleteItem = () => acRemoveDashboardItem(itemId);\n\n  return <div className={classes.itemActionsWrap}>\n            <DeleteItemButton onClick={handleDeleteItem} />\n        </div>;\n};\n\nEditItemActions.propTypes = {\n  acRemoveDashboardItem: PropTypes.func,\n  itemId: PropTypes.string\n};\nconst mapDispatchToProps = {\n  acRemoveDashboardItem\n};\nexport default connect(null, mapDispatchToProps)(EditItemActions);","import React from 'react';\nimport { colors } from '@dhis2/ui';\n\nconst WarningIcon = () => <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24\" viewBox=\"0 0 24 24\" width=\"24\" fill={colors.grey600}>\n        <path d=\"M0 0h24v24H0z\" fill=\"none\" />\n        <path d=\"M12 2C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2zm1 15h-2v-6h2v6zm0-8h-2V7h2v2z\" />\n    </svg>;\n\nexport default WarningIcon;","import React from 'react';\nimport { Tooltip } from '@dhis2/ui';\nimport i18n from '@dhis2/d2-i18n';\nimport InfoIcon from '../../../icons/Info';\nimport classes from './styles/PrintItemInfo.module.css';\n\nconst PrintWarning = () => <div className={classes.warning}>\n        <Tooltip content={i18n.t('This item has been shortened to fit on one page')} placement=\"bottom\">\n            <InfoIcon />\n        </Tooltip>\n    </div>;\n\nexport default PrintWarning;","export const EDIT = 'edit';\nexport const NEW = 'new';\nexport const VIEW = 'view';\nexport const PRINT = 'print';\nexport const PRINT_LAYOUT = 'print-layout';\nexport const isEditMode = mode => [EDIT, NEW].includes(mode);\nexport const isPrintMode = mode => [PRINT, PRINT_LAYOUT].includes(mode);\nexport const isViewMode = mode => mode === VIEW;","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport ViewItemActions from './ViewItemActions';\nimport EditItemActions from './EditItemActions';\nimport PrintItemInfo from './PrintItemInfo';\nimport { VIEW, EDIT, PRINT_LAYOUT } from '../../Dashboard/dashboardModes';\nimport classes from './styles/ItemHeader.module.css';\n\nconst getItemActionsMap = isShortened => {\n  return {\n    [VIEW]: ViewItemActions,\n    [EDIT]: EditItemActions,\n    [PRINT_LAYOUT]: isShortened ? PrintItemInfo : null\n  };\n}; // This is the margin-top + margin-bottom defined in the css file\n\n\nexport const HEADER_MARGIN_HEIGHT = 12;\nconst ItemHeader = React.forwardRef(({\n  dashboardMode,\n  title,\n  isShortened,\n  ...rest\n}, ref) => {\n  const Actions = getItemActionsMap(isShortened)[dashboardMode];\n  return <div className={classes.itemHeaderWrap} ref={ref}>\n                <p className={classes.itemTitle}>{title}</p>\n                {Actions ? <Actions {...rest} /> : null}\n            </div>;\n});\nItemHeader.displayName = 'ItemHeader';\nItemHeader.propTypes = {\n  dashboardMode: PropTypes.string,\n  isShortened: PropTypes.bool,\n  title: PropTypes.string\n};\nexport default connect(null, null, null, {\n  forwardRef: true\n})(ItemHeader);","import React, { useState, createRef } from 'react';\nimport PropTypes from 'prop-types';\nimport { useConfig } from '@dhis2/app-runtime';\nimport { isSingleValue, isYearOverYear, VIS_TYPE_GAUGE, VIS_TYPE_PIE } from '@dhis2/analytics';\nimport { Button, Menu, Popover, MenuItem, Divider, colors } from '@dhis2/ui';\nimport i18n from '@dhis2/d2-i18n';\nimport TableIcon from '@material-ui/icons/ViewList';\nimport ChartIcon from '@material-ui/icons/InsertChart';\nimport MapIcon from '@material-ui/icons/Public';\nimport LaunchIcon from '@material-ui/icons/Launch';\nimport { ThreeDots, SpeechBubble, Fullscreen, ExitFullscreen } from './assets/icons';\nimport { getLink } from './Visualization/plugin';\nimport { CHART, MAP, REPORT_TABLE, EVENT_CHART, EVENT_REPORT, isTrackerDomainType, hasMapView, getAppName } from '../../../modules/itemTypes';\nimport { useSystemSettings } from '../../SystemSettingsProvider';\nconst iconFill = {\n  fill: colors.grey600\n};\n\nconst ItemHeaderButtons = props => {\n  const [menuIsOpen, setMenuIsOpen] = useState(props.isOpen);\n  const {\n    baseUrl\n  } = useConfig();\n  const {\n    item,\n    visualization,\n    onSelectActiveType,\n    activeType\n  } = props;\n  const {\n    openInRelevantApp,\n    showInterpretationsAndDetails,\n    switchViewType,\n    fullscreenAllowedInSettings\n  } = useSystemSettings().settings;\n  const isTrackerType = isTrackerDomainType(item.type);\n\n  const onViewTable = () => {\n    closeMenu();\n    onSelectActiveType(isTrackerType ? EVENT_REPORT : REPORT_TABLE);\n  };\n\n  const onViewChart = () => {\n    closeMenu();\n    onSelectActiveType(isTrackerType ? EVENT_CHART : CHART);\n  };\n\n  const onViewMap = () => {\n    closeMenu();\n    onSelectActiveType(MAP);\n  };\n\n  const itemHasMapView = () => hasMapView(item.type);\n\n  const handleInterpretationClick = () => {\n    props.onToggleFooter();\n\n    if (menuIsOpen) {\n      closeMenu();\n    }\n  };\n\n  const handleToggleFullscreenClick = () => {\n    props.onToggleFullscreen();\n    closeMenu();\n  };\n\n  const openMenu = () => setMenuIsOpen(true);\n\n  const closeMenu = () => setMenuIsOpen(false);\n\n  const type = visualization.type || item.type;\n  const canViewAs = switchViewType && !isSingleValue(type) && !isYearOverYear(type) && type !== VIS_TYPE_GAUGE && type !== VIS_TYPE_PIE;\n  const interpretationMenuLabel = props.activeFooter ? i18n.t(`Hide interpretations and details`) : i18n.t(`Show interpretations and details`);\n\n  const ViewAsMenuItems = () => <>\n            {activeType !== CHART && activeType !== EVENT_CHART && <MenuItem dense label={i18n.t('View as Chart')} onClick={onViewChart} icon={<ChartIcon style={iconFill} />} />}\n            {activeType !== REPORT_TABLE && activeType !== EVENT_REPORT && <MenuItem dense label={i18n.t('View as Table')} onClick={onViewTable} icon={<TableIcon style={iconFill} />} />}\n            {itemHasMapView() && activeType !== MAP && <MenuItem dense label={i18n.t('View as Map')} onClick={onViewMap} icon={<MapIcon style={iconFill} />} />}\n        </>;\n\n  const buttonRef = createRef();\n  const fullscreenAllowed = props.fullscreenSupported && fullscreenAllowedInSettings;\n\n  if (!openInRelevantApp && !showInterpretationsAndDetails && !switchViewType && !fullscreenAllowed) {\n    return null;\n  }\n\n  return props.isFullscreen ? <Button small secondary onClick={props.onToggleFullscreen}>\n            <ExitFullscreen />\n        </Button> : <>\n            <div ref={buttonRef}>\n                <Button small secondary onClick={openMenu} dataTest=\"dashboarditem-menu-button\">\n                    <ThreeDots />\n                </Button>\n            </div>\n            {menuIsOpen && <Popover reference={buttonRef} placement=\"auto-start\" arrow={false} onClickOutside={closeMenu}>\n                    <Menu>\n                        {canViewAs && <>\n                                <ViewAsMenuItems />\n                                {(showInterpretationsAndDetails || openInRelevantApp || fullscreenAllowed) && <Divider />}\n                            </>}\n                        {openInRelevantApp && <MenuItem dense icon={<LaunchIcon style={{\n          fill: '#6e7a8a'\n        }} />} label={i18n.t('Open in {{appName}} app', {\n          appName: getAppName(item.type)\n        })} href={getLink(item, baseUrl)} target=\"_blank\" />}\n                        {showInterpretationsAndDetails && <MenuItem dense icon={<SpeechBubble />} label={interpretationMenuLabel} onClick={handleInterpretationClick} />}\n                        {fullscreenAllowed && <MenuItem dense icon={<Fullscreen />} label={i18n.t('View fullscreen')} onClick={handleToggleFullscreenClick} />}\n                    </Menu>\n                </Popover>}\n        </>;\n};\n\nItemHeaderButtons.propTypes = {\n  activeFooter: PropTypes.bool,\n  activeType: PropTypes.string,\n  fullscreenSupported: PropTypes.bool,\n  isFullscreen: PropTypes.bool,\n  isOpen: PropTypes.bool,\n  item: PropTypes.object,\n  visualization: PropTypes.object,\n  onSelectActiveType: PropTypes.func,\n  onToggleFooter: PropTypes.func,\n  onToggleFullscreen: PropTypes.func\n};\nexport default ItemHeaderButtons;","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { getVisualizationId } from '../../../modules/item';\nimport InterpretationsComponent from '@dhis2/d2-ui-interpretations';\nimport { useD2 } from '@dhis2/app-runtime-adapter-d2';\nimport classes from './styles/ItemFooter.module.css';\n\nconst ItemFooter = props => {\n  const {\n    d2\n  } = useD2({});\n  return <div data-test=\"dashboarditem-footer\">\n            <hr className={classes.line} />\n            <div className={classes.scrollContainer}>\n                <InterpretationsComponent d2={d2} item={props.item} type={props.item.type.toLowerCase()} id={getVisualizationId(props.item)} appName=\"dashboard\" />\n            </div>\n        </div>;\n};\n\nItemFooter.propTypes = {\n  item: PropTypes.object.isRequired\n};\nexport default ItemFooter;","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport uniqueId from 'lodash/uniqueId';\nimport Visualization from './Visualization/Visualization';\nimport FatalErrorBoundary from './FatalErrorBoundary';\nimport ItemHeader, { HEADER_MARGIN_HEIGHT } from '../ItemHeader/ItemHeader';\nimport ItemHeaderButtons from './ItemHeaderButtons';\nimport ItemFooter from './ItemFooter';\nimport { WindowDimensionsCtx } from '../../WindowDimensionsProvider';\nimport { SystemSettingsCtx } from '../../SystemSettingsProvider';\nimport { apiPostDataStatistics } from '../../../api/dataStatistics';\nimport { apiFetchVisualization } from '../../../api/metadata';\nimport { sGetVisualization } from '../../../reducers/visualizations';\nimport { sGetSelectedItemActiveType } from '../../../reducers/selected';\nimport { sGetIsEditing } from '../../../reducers/editDashboard';\nimport { sGetItemFiltersRoot, DEFAULT_STATE_ITEM_FILTERS } from '../../../reducers/itemFilters';\nimport { acAddVisualization } from '../../../actions/visualizations';\nimport { acSetSelectedItemActiveType } from '../../../actions/selected';\nimport { pluginIsAvailable, resize as pluginResize } from './Visualization/plugin';\nimport { getDataStatisticsName } from '../../../modules/itemTypes';\nimport { getVisualizationId, getVisualizationName } from '../../../modules/item';\nimport memoizeOne from '../../../modules/memoizeOne';\nimport { isEditMode, isPrintMode, isViewMode } from '../../Dashboard/dashboardModes';\nimport { getItemHeightPx } from '../../../modules/gridUtil';\nimport getGridItemDomId from '../../../modules/getGridItemDomId'; // this is set in the .dashboard-item-content css\n\nconst ITEM_CONTENT_PADDING = 4;\nexport class Item extends Component {\n  state = {\n    showFooter: false,\n    configLoaded: false,\n    isFullscreen: false\n  };\n\n  constructor(props) {\n    super(props);\n    this.contentRef = React.createRef();\n    this.headerRef = React.createRef();\n    this.itemDomElSelector = `.reactgriditem-${this.props.item.id}`;\n    this.memoizedGetContentHeight = memoizeOne((calculatedHeight, measuredHeight, preferMeasured) => preferMeasured ? measuredHeight || calculatedHeight : calculatedHeight);\n  }\n\n  async componentDidMount() {\n    this.props.updateVisualization(await apiFetchVisualization(this.props.item));\n\n    try {\n      if (this.props.settings.keyGatherAnalyticalObjectStatisticsInDashboardViews && isViewMode(this.props.dashboardMode)) {\n        await apiPostDataStatistics(getDataStatisticsName(this.props.item.type), getVisualizationId(this.props.item));\n      }\n    } catch (e) {\n      console.log(e);\n    }\n\n    this.setState({\n      configLoaded: true\n    });\n    const el = document.querySelector(this.itemDomElSelector);\n\n    if (el?.requestFullscreen) {\n      el.onfullscreenchange = this.handleFullscreenChange;\n    } else if (el?.webkitRequestFullscreen) {\n      el.onwebkitfullscreenchange = this.handleFullscreenChange;\n    }\n  }\n\n  componentWillUnmount() {\n    const el = document.querySelector(this.itemDomElSelector);\n\n    if (el?.onfullscreenchange) {\n      el.removeEventListener('onfullscreenchange', this.handleFullscreenChange);\n    } else if (el?.onwebkitfullscreenchange) {\n      el.removeEventListener('onwebkitfullscreenchange', this.handleFullscreenChange);\n    }\n  }\n\n  componentDidUpdate(prevProps) {\n    if (prevProps.gridWidth !== this.props.gridWidth) {\n      const el = document.querySelector(`#${getGridItemDomId(this.props.item.id)}`);\n\n      if (typeof el?.setViewportSize === 'function') {\n        setTimeout(() => el.setViewportSize(el.clientWidth - 5, el.clientHeight - 5), 10);\n      } // call resize on Map item\n\n\n      pluginResize(this.props.item, this.state.isFullscreen);\n    }\n  }\n\n  isFullscreenSupported = () => {\n    const el = document.querySelector(this.itemDomElSelector);\n    return !!(el?.requestFullscreen || el?.webkitRequestFullscreen);\n  };\n  handleFullscreenChange = () => {\n    this.setState({\n      isFullscreen: !!document.fullscreenElement || !!document.webkitFullscreenElement\n    }, () => pluginResize(this.props.item, this.state.isFullscreen));\n  };\n  onToggleFullscreen = () => {\n    if (!this.state.isFullscreen) {\n      const el = document.querySelector(this.itemDomElSelector);\n\n      if (el?.requestFullscreen) {\n        el.requestFullscreen();\n      } else if (el?.webkitRequestFullscreen) {\n        el.webkitRequestFullscreen();\n      }\n    } else {\n      document.exitFullscreen ? document.exitFullscreen() : document.webkitExitFullscreen();\n    }\n  };\n  getUniqueKey = memoizeOne(() => uniqueId());\n  onToggleFooter = () => {\n    this.setState({\n      showFooter: !this.state.showFooter\n    }, this.props.onToggleItemExpanded(this.props.item.id));\n  };\n  setActiveType = type => {\n    type !== this.getActiveType() && this.props.setActiveType(this.props.item.id, type);\n  };\n  getActiveType = () => {\n    if (this.props.isEditing) {\n      return this.props.item.type;\n    }\n\n    return this.props.activeType || this.props.item.type;\n  };\n  getAvailableHeight = width => {\n    if (this.state.isFullscreen) {\n      return '95vh';\n    }\n\n    const calculatedHeight = getItemHeightPx(this.props.item, width) - this.headerRef.current.clientHeight - HEADER_MARGIN_HEIGHT - ITEM_CONTENT_PADDING;\n    return this.memoizedGetContentHeight(calculatedHeight, this.contentRef ? this.contentRef.offsetHeight : null, isEditMode(this.props.dashboardMode) || isPrintMode(this.props.dashboardMode));\n  };\n  getAvailableWidth = () => {\n    const rect = document.querySelector(this.itemDomElSelector)?.getBoundingClientRect();\n    return rect && rect.width - ITEM_CONTENT_PADDING * 2;\n  };\n\n  render() {\n    const {\n      item,\n      dashboardMode,\n      itemFilters\n    } = this.props;\n    const {\n      showFooter\n    } = this.state;\n    const activeType = this.getActiveType();\n    const actionButtons = pluginIsAvailable(activeType || item.type) ? <ItemHeaderButtons item={item} visualization={this.props.visualization} onSelectActiveType={this.setActiveType} onToggleFooter={this.onToggleFooter} onToggleFullscreen={this.onToggleFullscreen} activeType={activeType} activeFooter={showFooter} isFullscreen={this.state.isFullscreen} fullscreenSupported={this.isFullscreenSupported()} /> : null;\n    return <>\n                <ItemHeader title={getVisualizationName(item)} itemId={item.id} actionButtons={actionButtons} ref={this.headerRef} dashboardMode={dashboardMode} isShortened={item.shortened} />\n                <FatalErrorBoundary>\n                    <div key={this.getUniqueKey(itemFilters)} className=\"dashboard-item-content\" ref={ref => this.contentRef = ref}>\n                        {this.state.configLoaded && <WindowDimensionsCtx.Consumer>\n                                {dimensions => <Visualization item={item} activeType={activeType} itemFilters={itemFilters} availableHeight={this.getAvailableHeight(dimensions.width)} availableWidth={this.getAvailableWidth()} />}\n                            </WindowDimensionsCtx.Consumer>}\n                    </div>\n                </FatalErrorBoundary>\n                {isViewMode(dashboardMode) && showFooter ? <ItemFooter item={item} /> : null}\n            </>;\n  }\n\n}\nItem.propTypes = {\n  activeType: PropTypes.string,\n  dashboardMode: PropTypes.string,\n  gridWidth: PropTypes.number,\n  isEditing: PropTypes.bool,\n  item: PropTypes.object,\n  itemFilters: PropTypes.object,\n  setActiveType: PropTypes.func,\n  settings: PropTypes.object,\n  updateVisualization: PropTypes.func,\n  visualization: PropTypes.object,\n  onToggleItemExpanded: PropTypes.func\n};\nItem.defaultProps = {\n  item: {},\n  onToggleItemExpanded: Function.prototype,\n  visualization: {}\n};\n\nconst mapStateToProps = (state, ownProps) => {\n  const itemFilters = !isEditMode(ownProps.dashboardMode) ? sGetItemFiltersRoot(state) : DEFAULT_STATE_ITEM_FILTERS;\n  return {\n    activeType: sGetSelectedItemActiveType(state, ownProps.item?.id),\n    isEditing: sGetIsEditing(state),\n    itemFilters,\n    visualization: sGetVisualization(state, getVisualizationId(ownProps.item))\n  };\n};\n\nconst mapDispatchToProps = {\n  setActiveType: acSetSelectedItemActiveType,\n  updateVisualization: acAddVisualization\n};\n\nconst ItemWithSettings = props => <SystemSettingsCtx.Consumer>\n        {({\n    settings\n  }) => <Item settings={settings} {...props} />}\n    </SystemSettingsCtx.Consumer>;\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ItemWithSettings);","import React from 'react';\nimport { colors } from '@dhis2/ui';\nconst style = {\n  backgroundColor: colors.grey200,\n  border: 'none',\n  height: '1px',\n  margin: '0px 0px 5px 0px'\n};\n\nconst Line = () => <hr style={style} />;\n\nexport default Line;","import React, { useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport i18n from '@dhis2/d2-i18n';\nimport { colors } from '@dhis2/ui';\nimport { useConfig } from '@dhis2/app-runtime';\nimport { useD2 } from '@dhis2/app-runtime-adapter-d2';\nimport ItemHeader from '../ItemHeader/ItemHeader';\nimport Line from '../../../widgets/Line';\nimport { sGetMessagesRoot } from '../../../reducers/messages';\nimport { formatDate } from '../../../modules/util';\nimport { isViewMode } from '../../Dashboard/dashboardModes';\nimport './MessagesItem.css';\nconst PRIVATE = 'PRIVATE';\nconst messageTypes = {\n  [PRIVATE]: 'Private',\n  VALIDATION_RESULT: 'Validation',\n  TICKET: 'Ticket',\n  SYSTEM: 'System'\n};\nconst style = {\n  list: {\n    listStyleType: 'none',\n    paddingLeft: '0px'\n  },\n  seeAll: {\n    textAlign: 'center',\n    fontSize: '13px',\n    marginBottom: '5px'\n  },\n  sender: {\n    fontSize: '13px',\n    lineHeight: '15px',\n    margin: 0,\n    color: colors.grey800\n  },\n  snippet: {\n    color: colors.grey800,\n    fontSize: '13px',\n    lineHeight: '15px',\n    maxHeight: '30px',\n    overflow: 'hidden'\n  }\n};\n\nconst MessagesItem = ({\n  messages,\n  item,\n  dashboardMode\n}) => {\n  const [uiLocale, setUiLocale] = useState('');\n  const {\n    d2\n  } = useD2({});\n  const {\n    baseUrl\n  } = useConfig();\n  useEffect(() => {\n    const getUiLocale = async () => {\n      const uiLocale = await d2.currentUser.userSettings.get('keyUiLocale');\n      setUiLocale(uiLocale);\n    };\n\n    getUiLocale();\n  }, []);\n\n  const getMessageHref = msg => {\n    const msgIdentifier = msg ? `#/${msg.messageType}/${msg.id}` : '';\n    return `${baseUrl}/dhis-web-messaging/${msgIdentifier}`;\n  };\n\n  const getMessageSender = msg => {\n    const latestMsg = msg.messages.slice(-1)[0];\n    return latestMsg.sender ? latestMsg.sender.displayName : '';\n  };\n\n  const getMessageItems = () => {\n    const modeClass = isViewMode(dashboardMode) ? 'view' : null;\n    return messages.map(msg => {\n      const redirectToMsg = () => {\n        if (isViewMode(dashboardMode)) {\n          document.location.href = getMessageHref(msg);\n        }\n      };\n\n      const sender = msg.messageType === PRIVATE ? getMessageSender(msg) : messageTypes[msg.messageType];\n      const readClass = !msg.read ? 'unread' : null;\n      const latestMsg = msg.messages.slice(-1)[0];\n      const msgDate = latestMsg.lastUpdated;\n      return <li className={`message-item ${modeClass}`} key={msg.id} onClick={redirectToMsg}>\n                    <p className={`message-title ${readClass}`}>\n                        {msg.displayName} ({msg.messageCount})\n                    </p>\n                    <p style={style.sender}>\n                        {sender} - {formatDate(msgDate, uiLocale)}\n                    </p>\n                    <p style={style.snippet}>{latestMsg.text}</p>\n                </li>;\n    });\n  };\n\n  return <>\n            <ItemHeader title={i18n.t('Messages')} itemId={item.id} dashboardMode={dashboardMode} isShortened={item.shortened} />\n            <Line />\n            {messages.length > 0 && <div className=\"dashboard-item-content\">\n                    <ul style={style.list}>{getMessageItems()}</ul>\n                    <div style={style.seeAll}>\n                        <a href={getMessageHref()}>\n                            {i18n.t('See all messages')}\n                        </a>\n                    </div>\n                </div>}\n        </>;\n};\n\nMessagesItem.propTypes = {\n  dashboardMode: PropTypes.string,\n  item: PropTypes.object,\n  messages: PropTypes.array\n};\n\nconst mapStateToProps = state => {\n  return {\n    messages: Object.values(sGetMessagesRoot(state))\n  };\n};\n\nconst MessagesContainer = connect(mapStateToProps, null)(MessagesItem);\nexport default MessagesContainer;","import React from 'react';\nimport PropTypes from 'prop-types';\nimport i18n from '@dhis2/d2-i18n';\nimport ItemHeader from '../ItemHeader/ItemHeader';\nimport NotInterestedIcon from '@material-ui/icons/NotInterested';\n\nconst NotSupportedItem = props => <>\n        <ItemHeader title={i18n.t('Item type \"{{type}}\" not supported', {\n    type: props.item.type\n  })} itemId={props.item.id} dashboardMode={props.dashboardMode} isShortened={props.item.shortened} />\n        <div style={{\n    display: 'flex',\n    justifyContent: 'center',\n    alignItems: 'center',\n    height: '90%'\n  }}>\n            <NotInterestedIcon style={{\n      width: 100,\n      height: 100,\n      align: 'center'\n    }} color=\"disabled\" />\n        </div>\n    </>;\n\nNotSupportedItem.propTypes = {\n  dashboardMode: PropTypes.string,\n  item: PropTypes.object\n};\nexport default NotSupportedItem;","import React from 'react';\nimport { colors } from '@dhis2/ui';\nimport PropTypes from 'prop-types';\n\nconst DescriptionIcon = ({\n  className\n}) => <svg className={className} xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\" fill={colors.grey500}>\n        <path d=\"M0 0h24v24H0z\" fill=\"none\" />\n        <path d=\"M14 2H6c-1.1 0-1.99.9-1.99 2L4 20c0 1.1.89 2 1.99 2H18c1.1 0 2-.9 2-2V8l-6-6zm2 16H8v-2h8v2zm0-4H8v-2h8v2zm-3-5V3.5L18.5 9H13z\" />\n    </svg>;\n\nDescriptionIcon.propTypes = {\n  className: PropTypes.string\n};\nexport default DescriptionIcon;","import React from 'react';\nimport { colors } from '@dhis2/ui';\nimport PropTypes from 'prop-types';\n\nconst DeleteIcon = ({\n  className\n}) => <svg className={className} xmlns=\"http://www.w3.org/2000/svg\" width=\"18\" height=\"18\" viewBox=\"0 0 24 24\" fill={colors.red500}>\n        <path d=\"M6 19c0 1.1.9 2 2 2h8c1.1 0 2-.9 2-2V7H6v12zM19 4h-3.5l-1-1h-5l-1 1H5v2h14V4z\" />\n        <path d=\"M0 0h24v24H0z\" fill=\"none\" />\n    </svg>;\n\nDeleteIcon.propTypes = {\n  className: PropTypes.string\n};\nexport default DeleteIcon;","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { colors } from '@dhis2/ui';\nimport { useConfig } from '@dhis2/app-runtime';\nimport DescriptionIcon from '../../../icons/Description';\nimport DeleteIcon from '../../../icons/Delete';\nimport Line from '../../../widgets/Line';\nimport { itemTypeMap, getItemUrl } from '../../../modules/itemTypes';\nimport { orArray } from '../../../modules/util';\nimport { tRemoveListItemContent } from './actions';\nimport ItemHeader from '../ItemHeader/ItemHeader';\nimport { isEditMode } from '../../Dashboard/dashboardModes';\nimport classes from './Item.module.css';\n\nconst getItemTitle = item => itemTypeMap[item.type].pluralTitle;\n\nconst getContentItems = item => orArray(item[itemTypeMap[item.type].propName]).filter((item, index, array) => array.findIndex(el => el.id === item.id) === index);\n\nconst ListItem = ({\n  item,\n  dashboardMode,\n  tRemoveListItemContent\n}) => {\n  const {\n    baseUrl\n  } = useConfig();\n  const contentItems = getContentItems(item);\n\n  const getLink = contentItem => {\n    const deleteButton = <button className={classes.deletebutton} onClick={() => tRemoveListItemContent(item, contentItem)}>\n                <DeleteIcon className={classes.deleteicon} />\n            </button>;\n    return <>\n                <a className={classes.link} style={{\n        color: colors.grey900\n      }} href={getItemUrl(item.type, contentItem, baseUrl)}>\n                    {contentItem.name}\n                </a>\n                {isEditMode(dashboardMode) ? deleteButton : null}\n            </>;\n  };\n\n  return <>\n            <ItemHeader title={getItemTitle(item)} itemId={item.id} dashboardMode={dashboardMode} isShortened={item.shortened} />\n            <Line />\n            <div className=\"dashboard-item-content\">\n                <ul className={classes.list}>\n                    {contentItems.map(contentItem => <li className={classes.item} key={contentItem.id}>\n                            <DescriptionIcon className={classes.itemicon} />\n                            {getLink(contentItem)}\n                        </li>)}\n                </ul>\n            </div>\n        </>;\n};\n\nListItem.propTypes = {\n  dashboardMode: PropTypes.string,\n  item: PropTypes.object,\n  tRemoveListItemContent: PropTypes.func\n};\nexport default connect(null, {\n  tRemoveListItemContent\n})(ListItem);","import { acUpdateDashboardItem, acRemoveDashboardItem } from '../../../actions/editDashboard';\nimport { itemTypeMap } from '../../../modules/itemTypes';\nexport const tRemoveListItemContent = (dashboardItem, content) => dispatch => {\n  const listItemType = itemTypeMap[dashboardItem.type].propName;\n  const newContent = dashboardItem[listItemType].filter(item => item.id !== content.id);\n\n  if (newContent.length) {\n    dashboardItem[listItemType] = newContent;\n    dispatch(acUpdateDashboardItem(dashboardItem));\n  } else {\n    dispatch(acRemoveDashboardItem(dashboardItem));\n  }\n};","/** @module reducers/editDashboard */\nimport update from 'immutability-helper';\nimport isEmpty from 'lodash/isEmpty';\nimport { orArray } from '../modules/util';\nexport const SET_PRINT_DASHBOARD = 'SET_PRINT_DASHBOARD';\nexport const CLEAR_PRINT_DASHBOARD = 'CLEAR_PRINT_DASHBOARD';\nexport const ADD_PRINT_DASHBOARD_ITEM = 'ADD_PRINT_DASHBOARD_ITEM';\nexport const SET_PRINT_DASHBOARD_LAYOUT = 'SET_PRINT_DASHBOARD_LAYOUT';\nexport const REMOVE_PRINT_DASHBOARD_ITEM = 'REMOVE_PRINT_DASHBOARD_ITEM';\nexport const UPDATE_PRINT_DASHBOARD_ITEM = 'UPDATE_PRINT_DASHBOARD_ITEM';\nexport const DEFAULT_STATE_PRINT_DASHBOARD = {};\nconst DEFAULT_DASHBOARD_ITEMS = [];\nexport const NEW_PRINT_DASHBOARD_STATE = {\n  id: '',\n  name: '',\n  access: {},\n  description: '',\n  dashboardItems: DEFAULT_DASHBOARD_ITEMS\n};\nexport default ((state = DEFAULT_STATE_PRINT_DASHBOARD, action) => {\n  switch (action.type) {\n    case SET_PRINT_DASHBOARD:\n      {\n        const newState = {};\n        Object.keys(NEW_PRINT_DASHBOARD_STATE).map(k => newState[k] = action.value[k]);\n        return newState;\n      }\n\n    case CLEAR_PRINT_DASHBOARD:\n      return DEFAULT_STATE_PRINT_DASHBOARD;\n\n    case ADD_PRINT_DASHBOARD_ITEM:\n      if (!action.value.position) {\n        return update(state, {\n          dashboardItems: {\n            $unshift: [action.value]\n          }\n        });\n      }\n\n      return update(state, {\n        dashboardItems: {\n          $splice: [[parseInt(action.value.position), 0, action.value]]\n        }\n      });\n\n    case REMOVE_PRINT_DASHBOARD_ITEM:\n      {\n        const idToRemove = action.value;\n        const dashboardItemIndex = state.dashboardItems.findIndex(item => item.id === idToRemove);\n\n        if (dashboardItemIndex > -1) {\n          return update(state, {\n            dashboardItems: {\n              $splice: [[dashboardItemIndex, 1]]\n            }\n          });\n        }\n\n        return state;\n      }\n\n    case UPDATE_PRINT_DASHBOARD_ITEM:\n      {\n        const dashboardItem = action.value;\n        const dashboardItemIndex = state.dashboardItems.findIndex(item => item.id === dashboardItem.id);\n\n        if (dashboardItemIndex > -1) {\n          const newState = update(state, {\n            dashboardItems: {\n              $splice: [[dashboardItemIndex, 1, Object.assign({}, dashboardItem)]]\n            }\n          });\n          return newState;\n        }\n\n        return state;\n      }\n\n    case SET_PRINT_DASHBOARD_LAYOUT:\n      {\n        const stateItems = orArray(state.dashboardItems);\n        let layoutHasChanged = false;\n        const newStateItems = action.value.map(({\n          x,\n          y,\n          w,\n          h,\n          i\n        }) => {\n          const stateItem = stateItems.find(si => si.id === i);\n\n          if (!(stateItem.x === x && stateItem.y === y && stateItem.w === w && stateItem.h === h)) {\n            layoutHasChanged = true;\n            return Object.assign({}, stateItem, {\n              w,\n              h,\n              x,\n              y\n            });\n          }\n\n          return stateItem;\n        });\n        return layoutHasChanged ? { ...state,\n          dashboardItems: newStateItems\n        } : state;\n      }\n\n    default:\n      return state;\n  }\n}); // root selector\n\nexport const sGetPrintDashboardRoot = state => state.printDashboard; // selectors\n\nexport const sGetIsPrinting = state => !isEmpty(state.printDashboard);\nexport const sGetPrintDashboardName = state => sGetPrintDashboardRoot(state).name;\nexport const sGetPrintDashboardDescription = state => sGetPrintDashboardRoot(state).description;\nexport const sGetPrintDashboardItems = state => {\n  return sGetPrintDashboardRoot(state)?.dashboardItems || DEFAULT_DASHBOARD_ITEMS;\n};","import React from 'react';\nimport { connect } from 'react-redux';\nimport i18n from '@dhis2/d2-i18n';\nimport PropTypes from 'prop-types';\nimport Input from '@material-ui/core/Input';\nimport ItemHeader from '../ItemHeader/ItemHeader';\nimport PrintItemInfo from '../ItemHeader/PrintItemInfo';\nimport Line from '../../../widgets/Line';\nimport { Parser as RichTextParser, Editor as RichTextEditor } from '@dhis2/d2-ui-rich-text';\nimport { acUpdateDashboardItem } from '../../../actions/editDashboard';\nimport { sGetEditDashboardItems } from '../../../reducers/editDashboard';\nimport { sGetDashboardItems } from '../../../reducers/dashboards';\nimport { sGetIsPrinting, sGetPrintDashboardItems } from '../../../reducers/printDashboard';\nimport { isEditMode, PRINT_LAYOUT } from '../../Dashboard/dashboardModes';\nconst style = {\n  textDiv: {\n    padding: '10px',\n    whiteSpace: 'pre-line',\n    lineHeight: '20px'\n  },\n  textField: {\n    fontSize: '14px',\n    fontStretch: 'normal',\n    width: '90%',\n    margin: '0 auto',\n    display: 'block',\n    lineHeight: '24px'\n  },\n  container: {\n    marginBottom: '20px',\n    marginTop: '20px'\n  }\n};\n\nconst TextItem = props => {\n  const {\n    item,\n    dashboardMode,\n    text,\n    acUpdateDashboardItem\n  } = props;\n\n  const onChangeText = event => {\n    const updatedItem = { ...item,\n      text: event.target.value\n    };\n    acUpdateDashboardItem(updatedItem);\n  };\n\n  const viewItem = () => {\n    const textDivStyle = Object.assign({}, style.textField, style.textDiv);\n    return <div className=\"dashboard-item-content\" style={style.container}>\n                <RichTextParser style={textDivStyle}>{text}</RichTextParser>\n            </div>;\n  };\n\n  const editItem = () => {\n    return <>\n                <ItemHeader title={i18n.t('Text item')} itemId={item.id} dashboardMode={dashboardMode} />\n                <Line />\n                <div className=\"dashboard-item-content\">\n                    <RichTextEditor onEdit={onChangeText}>\n                        <Input value={text} multiline fullWidth style={style.textField} placeholder={i18n.t('Add text here')} onChange={onChangeText} />\n                    </RichTextEditor>\n                </div>\n            </>;\n  };\n\n  const printItem = () => {\n    const textDivStyle = Object.assign({}, style.textField, style.textDiv);\n    return <>\n                {props.item.shortened ? <PrintItemInfo /> : null}\n                <div className=\"dashboard-item-content\" style={style.container}>\n                    <RichTextParser style={textDivStyle}>{text}</RichTextParser>\n                </div>\n            </>;\n  };\n\n  let textItem;\n\n  if (isEditMode(dashboardMode)) {\n    textItem = editItem;\n  } else if (dashboardMode === PRINT_LAYOUT) {\n    textItem = printItem;\n  } else {\n    textItem = viewItem;\n  }\n\n  return <>{textItem()}</>;\n};\n\nconst mapStateToProps = (state, ownProps) => {\n  const isPrintPreview = sGetIsPrinting(state);\n  let items;\n\n  if (isPrintPreview) {\n    items = sGetPrintDashboardItems(state);\n  } else if (isEditMode(ownProps.dashboardMode)) {\n    items = sGetEditDashboardItems(state);\n  } else {\n    items = sGetDashboardItems(state);\n  }\n\n  const item = items.find(item => item.id === ownProps.item.id);\n  return {\n    text: item ? item.text : ''\n  };\n};\n\nTextItem.propTypes = {\n  acUpdateDashboardItem: PropTypes.func,\n  dashboardMode: PropTypes.string,\n  item: PropTypes.object,\n  text: PropTypes.string\n};\nexport default connect(mapStateToProps, {\n  acUpdateDashboardItem\n})(TextItem);","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport NotInterestedIcon from '@material-ui/icons/NotInterested';\nimport { useD2 } from '@dhis2/app-runtime-adapter-d2';\nimport ItemHeader from '../ItemHeader/ItemHeader';\nimport Line from '../../../widgets/Line';\nimport { FILTER_ORG_UNIT } from '../../../actions/itemFilters';\nimport { sGetItemFiltersRoot, DEFAULT_STATE_ITEM_FILTERS } from '../../../reducers/itemFilters';\nimport { EDIT, isEditMode } from '../../Dashboard/dashboardModes';\n\nconst getIframeSrc = (appDetails, item, itemFilters) => {\n  let iframeSrc = `${appDetails.launchUrl}?dashboardItemId=${item.id}`;\n\n  if (itemFilters[FILTER_ORG_UNIT] && itemFilters[FILTER_ORG_UNIT].length) {\n    const ouIds = itemFilters[FILTER_ORG_UNIT].map(ouFilter => ouFilter.path.split('/').slice(-1)[0]);\n    iframeSrc += `&userOrgUnit=${ouIds.join(',')}`;\n  }\n\n  return iframeSrc;\n};\n\nconst AppItem = ({\n  dashboardMode,\n  item,\n  itemFilters\n}) => {\n  const {\n    d2\n  } = useD2({});\n  let appDetails;\n  const appKey = item.appKey;\n\n  if (appKey) {\n    appDetails = d2.system.installedApps.find(app => app.key === appKey);\n  }\n\n  const hideTitle = appDetails?.settings?.dashboardWidget?.hideTitle && dashboardMode !== EDIT;\n  return appDetails && appDetails.name && appDetails.launchUrl ? <>\n            {!hideTitle && <>\n                    <ItemHeader title={appDetails.name} itemId={item.id} dashboardMode={dashboardMode} isShortened={item.shortened} />\n                    <Line />\n                </>}\n            <iframe title={appDetails.name} src={getIframeSrc(appDetails, item, itemFilters)} className={!hideTitle ? 'dashboard-item-content' : 'dashboard-item-content-hidden-title'} style={{\n      border: 'none'\n    }} />\n        </> : <>\n            <ItemHeader title={`${appKey} app not found`} />\n            <Line />\n            <div className=\"dashboard-item-content\" style={{\n      display: 'flex',\n      justifyContent: 'center',\n      alignItems: 'center',\n      height: '90%'\n    }}>\n                <NotInterestedIcon color=\"disabled\" disabled style={{\n        width: 100,\n        height: 100,\n        align: 'center'\n      }} />\n            </div>\n        </>;\n};\n\nAppItem.propTypes = {\n  dashboardMode: PropTypes.string,\n  item: PropTypes.object,\n  itemFilters: PropTypes.object\n};\n\nconst mapStateToProps = (state, ownProps) => {\n  const itemFilters = !isEditMode(ownProps.dashboardMode) ? sGetItemFiltersRoot(state) : DEFAULT_STATE_ITEM_FILTERS;\n  return {\n    itemFilters\n  };\n};\n\nexport default connect(mapStateToProps)(AppItem);","import React from 'react';\nimport PropTypes from 'prop-types';\nimport i18n from '@dhis2/d2-i18n';\nimport { colors } from '@dhis2/ui';\nimport ItemHeader from '../ItemHeader/ItemHeader';\nconst style = {\n  margin: '21px 28px',\n  fontSize: '14px',\n  lineHeight: '18px',\n  color: colors.grey600\n};\n\nconst SpacerItem = props => {\n  return <>\n            <ItemHeader title={i18n.t('Spacer')} itemId={props.item.id} dashboardMode={props.dashboardMode} isShortened={props.item.shortened} />\n            <p style={style}>\n                {i18n.t('Use a spacer to create empty vertical space between other dashboard items.')}\n            </p>\n        </>;\n};\n\nSpacerItem.propTypes = {\n  dashboardMode: PropTypes.string,\n  item: PropTypes.object\n};\nexport default SpacerItem;","import React from 'react';\n\nconst PageBreakItem = () => <div />;\n\nexport default PageBreakItem;","import React from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport i18n from '@dhis2/d2-i18n';\nimport { sGetSelectedId, sGetSelectedShowDescription } from '../../../reducers/selected';\nimport { sGetDashboardById, EMPTY_DASHBOARD } from '../../../reducers/dashboards';\nimport { sGetNamedItemFilters } from '../../../reducers/itemFilters';\nimport { sGetIsEditing } from '../../../reducers/editDashboard';\nimport { sGetPrintDashboardName, sGetPrintDashboardDescription } from '../../../reducers/printDashboard';\nimport classes from './styles/Item.module.css';\n\nconst PrintTitlePageItem = ({\n  name,\n  description,\n  itemFilters,\n  showDescription\n}) => {\n  const getItemFilterList = () => {\n    const listItems = itemFilters.map(({\n      name,\n      values\n    }) => <li className={classes.filterListItem} key={name}>\n                {name}: {values.map(val => val.name).join(', ')}\n            </li>);\n    return <ul className={classes.filterList}>{listItems}</ul>;\n  };\n\n  return <div className={classes.titlePage}>\n            <p className={classes.name}>{name}</p>\n            {showDescription && description && <p className={classes.description}>{description}</p>}\n            {itemFilters.length > 0 && <>\n                    <p className={classes.filterTitle}>\n                        {i18n.t('Filters applied')}\n                    </p>\n                    {getItemFilterList()}\n                </>}\n        </div>;\n};\n\nPrintTitlePageItem.propTypes = {\n  description: PropTypes.string,\n  itemFilters: PropTypes.array,\n  name: PropTypes.string,\n  showDescription: PropTypes.bool\n};\nPrintTitlePageItem.defaultProps = {\n  description: '',\n  name: '',\n  showDescription: false\n};\n\nconst mapStateToProps = state => {\n  const id = sGetSelectedId(state);\n  const isEditMode = sGetIsEditing(state);\n  const viewDashboard = sGetDashboardById(state, id) || EMPTY_DASHBOARD;\n  const name = isEditMode ? sGetPrintDashboardName(state) || i18n.t('Untitled dashboard') : viewDashboard.displayName;\n  const description = isEditMode ? sGetPrintDashboardDescription(state) : viewDashboard.displayDescription;\n  return {\n    name,\n    description,\n    itemFilters: sGetNamedItemFilters(state),\n    showDescription: sGetSelectedShowDescription(state)\n  };\n};\n\nexport default connect(mapStateToProps)(PrintTitlePageItem);","import React from 'react';\nimport PropTypes from 'prop-types';\nimport VisualizationItem from './VisualizationItem/Item';\nimport MessagesItem from './MessagesItem/Item';\nimport NotSupportedItem from './NotSupportedItem/Item';\nimport ListItem from './ListItem/Item';\nimport TextItem from './TextItem/Item';\nimport AppItem from './AppItem/Item';\nimport SpacerItem from './SpacerItem/Item';\nimport PageBreakItem from './PageBreakItem/Item';\nimport PrintTitlePageItem from './PrintTitlePageItem/Item';\nimport { APP, VISUALIZATION, REPORT_TABLE, CHART, MAP, EVENT_CHART, EVENT_REPORT, MESSAGES, REPORTS, RESOURCES, USERS, TEXT, SPACER, PAGEBREAK, PRINT_TITLE_PAGE } from '../../modules/itemTypes';\n\nconst getGridItem = type => {\n  switch (type) {\n    case VISUALIZATION:\n    case REPORT_TABLE:\n    case CHART:\n    case MAP:\n    case EVENT_CHART:\n    case EVENT_REPORT:\n      return VisualizationItem;\n\n    case MESSAGES:\n      return MessagesItem;\n\n    case REPORTS:\n    case RESOURCES:\n    case USERS:\n      return ListItem;\n\n    case TEXT:\n      return TextItem;\n\n    case SPACER:\n      return SpacerItem;\n\n    case APP:\n      return AppItem;\n\n    case PAGEBREAK:\n      return PageBreakItem;\n\n    case PRINT_TITLE_PAGE:\n      return PrintTitlePageItem;\n\n    default:\n      return NotSupportedItem;\n  }\n};\n\nexport const Item = props => {\n  const GridItem = getGridItem(props.item.type);\n  return <GridItem item={props.item} gridWidth={props.gridWidth} dashboardMode={props.dashboardMode} onToggleItemExpanded={props.onToggleItemExpanded} />;\n};\nItem.propTypes = {\n  dashboardMode: PropTypes.string,\n  gridWidth: PropTypes.number,\n  item: PropTypes.object,\n  onToggleItemExpanded: PropTypes.func\n};","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport debounce from 'lodash/debounce';\nimport pick from 'lodash/pick';\nconst defaultDebounceMs = 100;\nconst defaultBufferFactor = 0.25;\n\nclass ProgressiveLoadingContainer extends Component {\n  static propTypes = {\n    children: PropTypes.node.isRequired,\n    bufferFactor: PropTypes.number,\n    className: PropTypes.string,\n    debounceMs: PropTypes.number,\n    style: PropTypes.object\n  };\n  static defaultProps = {\n    debounceMs: defaultDebounceMs,\n    bufferFactor: defaultBufferFactor\n  };\n  state = {\n    shouldLoad: false\n  };\n  containerRef = null;\n  shouldLoadHandler = null;\n  handlerOptions = {\n    passive: true\n  };\n\n  checkShouldLoad() {\n    if (!this.containerRef) {\n      return;\n    }\n\n    const bufferPx = this.props.bufferFactor * window.innerHeight;\n    const rect = this.containerRef.getBoundingClientRect();\n\n    if (rect.bottom > -bufferPx && rect.top < window.innerHeight + bufferPx) {\n      this.setState({\n        shouldLoad: true\n      });\n      this.removeHandler();\n    }\n  }\n\n  registerHandler() {\n    this.shouldLoadHandler = debounce(() => this.checkShouldLoad(), this.props.debounceMs);\n    Array.from(document.getElementsByClassName('dashboard-scroll-container')).forEach(container => {\n      container.addEventListener('scroll', this.shouldLoadHandler, this.handlerOptions);\n    });\n  }\n\n  removeHandler() {\n    Array.from(document.getElementsByClassName('dashboard-scroll-container')).forEach(container => {\n      container.removeEventListener('scroll', this.shouldLoadHandler, this.handlerOptions);\n    });\n  }\n\n  componentDidMount() {\n    this.registerHandler();\n    this.checkShouldLoad();\n  }\n\n  componentWillUnmount() {\n    this.removeHandler();\n  }\n\n  render() {\n    const {\n      children,\n      className,\n      style,\n      ...props\n    } = this.props;\n    const {\n      shouldLoad\n    } = this.state;\n    const eventProps = pick(props, ['onMouseDown', 'onTouchStart', 'onMouseUp', 'onTouchEnd']);\n    return <div ref={ref => this.containerRef = ref} style={style} className={className} data-test={`dashboarditem-${props.itemId}`} {...eventProps}>\n                {shouldLoad && children}\n            </div>;\n  }\n\n}\n\nexport default ProgressiveLoadingContainer;","import React, { useState, useEffect } from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport i18n from '@dhis2/d2-i18n';\nimport cx from 'classnames';\nimport { Responsive as ResponsiveReactGridLayout } from 'react-grid-layout';\nimport { Layer, CenteredContent, CircularLoader } from '@dhis2/ui';\nimport { useWindowDimensions } from '../WindowDimensionsProvider';\nimport { Item } from '../Item/Item';\nimport { GRID_ROW_HEIGHT_PX, SM_SCREEN_GRID_COLUMNS, GRID_COMPACT_TYPE, GRID_PADDING_PX, MARGIN_PX, MARGIN_SM_PX, hasShape, GRID_COLUMNS, getSmallLayout, getGridWidth, getProportionalHeight } from '../../modules/gridUtil';\nimport { orArray } from '../../modules/util';\nimport NoContentMessage from '../../widgets/NoContentMessage';\nimport { sGetSelectedId, sGetSelectedIsLoading } from '../../reducers/selected';\nimport { sGetDashboardById, sGetDashboardItems } from '../../reducers/dashboards';\nimport ProgressiveLoadingContainer from '../Item/ProgressiveLoadingContainer';\nimport { VIEW } from '../Dashboard/dashboardModes';\nimport { getBreakpoint, isSmallScreen } from '../../modules/smallScreen';\nimport classes from './styles/ItemGrid.module.css';\nimport 'react-grid-layout/css/styles.css';\nimport 'react-resizable/css/styles.css';\nimport './styles/ItemGrid.css';\nconst EXPANDED_HEIGHT = 17;\nconst EXPANDED_HEIGHT_SM = 13;\n\nconst ResponsiveItemGrid = ({\n  isLoading,\n  dashboardItems\n}) => {\n  const {\n    width\n  } = useWindowDimensions();\n  const [expandedItems, setExpandedItems] = useState({});\n  const [displayItems, setDisplayItems] = useState(dashboardItems);\n  const [layoutSm, setLayoutSm] = useState([]);\n  const [gridWidth, setGridWidth] = useState(0);\n  useEffect(() => {\n    if (isSmallScreen(width)) {\n      setLayoutSm(getItemsWithAdjustedHeight(getSmallLayout(dashboardItems, width)));\n    }\n\n    setDisplayItems(getItemsWithAdjustedHeight(dashboardItems));\n  }, [expandedItems, width, dashboardItems]);\n\n  const onToggleItemExpanded = clickedId => {\n    const isExpanded = typeof expandedItems[clickedId] === 'boolean' ? expandedItems[clickedId] : false;\n    const newExpandedItems = { ...expandedItems\n    };\n    newExpandedItems[clickedId] = !isExpanded;\n    setExpandedItems(newExpandedItems);\n  };\n\n  const getItemsWithAdjustedHeight = items => items.map(item => {\n    const expandedItem = expandedItems[item.id];\n\n    if (expandedItem && expandedItem === true) {\n      const expandedHeight = isSmallScreen(width) ? EXPANDED_HEIGHT_SM : EXPANDED_HEIGHT;\n      return Object.assign({}, item, {\n        h: item.h + expandedHeight,\n        smallOriginalH: getProportionalHeight(item, width)\n      });\n    }\n\n    return item;\n  });\n\n  const getItemComponent = item => <ProgressiveLoadingContainer key={item.i} className={cx(item.type, 'view', `reactgriditem-${item.id}`)} itemId={item.id}>\n            <Item item={item} gridWidth={gridWidth} dashboardMode={VIEW} onToggleItemExpanded={onToggleItemExpanded} />\n        </ProgressiveLoadingContainer>;\n\n  const getItemComponents = items => items.map(item => getItemComponent(item));\n\n  const onWidthChanged = containerWidth => {\n    setTimeout(() => {\n      setGridWidth(containerWidth);\n    }, 200);\n  };\n\n  if (!isLoading && !dashboardItems.length) {\n    return <NoContentMessage text={i18n.t('There are no items on this dashboard')} />;\n  }\n\n  return <>\n            {isLoading ? <Layer translucent>\n                    <CenteredContent>\n                        <CircularLoader />\n                    </CenteredContent>\n                </Layer> : null}\n            <ResponsiveReactGridLayout className={classes.grid} rowHeight={GRID_ROW_HEIGHT_PX} width={getGridWidth(width)} cols={{\n      lg: GRID_COLUMNS,\n      sm: SM_SCREEN_GRID_COLUMNS\n    }} breakpoints={{\n      lg: getBreakpoint(),\n      sm: 0\n    }} layouts={{\n      lg: displayItems,\n      sm: layoutSm\n    }} compactType={GRID_COMPACT_TYPE} margin={isSmallScreen(width) ? MARGIN_SM_PX : MARGIN_PX} containerPadding={{\n      lg: GRID_PADDING_PX,\n      sm: GRID_PADDING_PX\n    }} isDraggable={false} isResizable={false} draggableCancel=\"input,textarea\" onWidthChange={onWidthChanged}>\n                {getItemComponents(displayItems)}\n            </ResponsiveReactGridLayout>\n        </>;\n};\n\nResponsiveItemGrid.propTypes = {\n  dashboardItems: PropTypes.array,\n  isLoading: PropTypes.bool\n};\n\nconst mapStateToProps = state => {\n  const selectedDashboard = sGetDashboardById(state, sGetSelectedId(state));\n  const dashboardItems = orArray(sGetDashboardItems(state)).filter(hasShape);\n  return {\n    isLoading: sGetSelectedIsLoading(state) || !selectedDashboard,\n    dashboardItems\n  };\n};\n\nexport default connect(mapStateToProps)(ResponsiveItemGrid);","import React from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport i18n from '@dhis2/d2-i18n';\nimport { acRemoveItemFilter } from '../../actions/itemFilters';\nimport { acSetActiveModalDimension } from '../../actions/activeModalDimension';\nimport classes from './styles/FilterBadge.module.css';\n\nconst FilterBadge = ({\n  filter,\n  openFilterModal,\n  removeFilter\n}) => <div className={classes.container} data-test=\"dashboard-filter-badge\">\n        <span className={classes.badge} onClick={() => openFilterModal({\n    id: filter.id,\n    name: filter.name\n  })}>\n            {`${filter.name}: ${filter.values.length > 1 ? i18n.t('{{count}} selected', {\n      count: filter.values.length\n    }) : filter.values[0].name}`}\n        </span>\n        <span className={classes.removeButton} onClick={() => removeFilter(filter.id)}>\n            {i18n.t('Remove')}\n        </span>\n    </div>;\n\nFilterBadge.propTypes = {\n  filter: PropTypes.object.isRequired,\n  openFilterModal: PropTypes.func.isRequired,\n  removeFilter: PropTypes.func.isRequired\n};\nexport default connect(null, {\n  openFilterModal: acSetActiveModalDimension,\n  removeFilter: acRemoveItemFilter\n})(FilterBadge);","import React from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport FilterBadge from './FilterBadge';\nimport { sGetNamedItemFilters } from '../../reducers/itemFilters';\nimport classes from './styles/FilterBar.module.css';\n\nconst FilterBar = ({\n  filters\n}) => filters.length ? <div className={classes.bar}>\n            {filters.map(filter => <FilterBadge key={filter.id} filter={filter} />)}\n        </div> : null;\n\nFilterBar.propTypes = {\n  filters: PropTypes.array.isRequired\n};\nFilterBar.defaultProps = {\n  filters: []\n};\n\nconst mapStateToProps = state => ({\n  filters: sGetNamedItemFilters(state)\n});\n\nexport default connect(mapStateToProps)(FilterBar);","import { generateUid } from 'd2/uid';\nimport { SET_PRINT_DASHBOARD, CLEAR_PRINT_DASHBOARD, SET_PRINT_DASHBOARD_LAYOUT, ADD_PRINT_DASHBOARD_ITEM, REMOVE_PRINT_DASHBOARD_ITEM, UPDATE_PRINT_DASHBOARD_ITEM } from '../reducers/printDashboard';\nimport { NEW_ITEM_SHAPE, getGridItemProperties, getPageBreakItemShape, getPrintTitlePageItemShape } from '../modules/gridUtil';\nimport { itemTypeMap, PAGEBREAK } from '../modules/itemTypes'; // actions\n\nexport const acSetPrintDashboard = (dashboard, items) => {\n  const val = { ...dashboard,\n    dashboardItems: items\n  };\n  return {\n    type: SET_PRINT_DASHBOARD,\n    value: val\n  };\n};\nexport const acClearPrintDashboard = () => ({\n  type: CLEAR_PRINT_DASHBOARD\n});\nexport const acUpdatePrintDashboardLayout = value => ({\n  type: SET_PRINT_DASHBOARD_LAYOUT,\n  value\n});\nexport const acAddPrintDashboardItem = item => {\n  const type = item.type;\n  delete item.type;\n  const itemPropName = itemTypeMap[type].propName;\n  const id = generateUid();\n  const gridItemProperties = getGridItemProperties(id);\n  let shape;\n\n  if (type === PAGEBREAK) {\n    const yPos = item.yPos || 0;\n    shape = getPageBreakItemShape(yPos, item.isStatic);\n  } else {\n    shape = getPrintTitlePageItemShape(item.isOneItemPerPage);\n  }\n\n  return {\n    type: ADD_PRINT_DASHBOARD_ITEM,\n    value: {\n      id,\n      type,\n      position: item.position || null,\n      [itemPropName]: item.content,\n      ...NEW_ITEM_SHAPE,\n      ...gridItemProperties,\n      ...shape\n    }\n  };\n};\nexport const acRemovePrintDashboardItem = value => ({\n  type: REMOVE_PRINT_DASHBOARD_ITEM,\n  value\n});\nexport const acUpdatePrintDashboardItem = item => ({\n  type: UPDATE_PRINT_DASHBOARD_ITEM,\n  value: item\n});","import React, { useState, useEffect } from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { ComponentCover } from '@dhis2/ui';\nimport cx from 'classnames';\nimport DashboardContainer from './DashboardContainer';\nimport ViewTitleBar from '../TitleBar/ViewTitleBar';\nimport ViewItemGrid from '../ItemGrid/ViewItemGrid';\nimport FilterBar from '../FilterBar/FilterBar';\nimport DashboardsBar from '../ControlBar/ViewControlBar/DashboardsBar';\nimport { sGetIsEditing } from '../../reducers/editDashboard';\nimport { sGetIsPrinting } from '../../reducers/printDashboard';\nimport { sGetSelectedId } from '../../reducers/selected';\nimport { acClearEditDashboard } from '../../actions/editDashboard';\nimport { acClearPrintDashboard } from '../../actions/printDashboard';\nimport classes from './styles/ViewDashboard.module.css';\nexport const ViewDashboard = props => {\n  const [controlbarExpanded, setControlbarExpanded] = useState(false);\n  useEffect(() => {\n    if (props.dashboardIsEditing) {\n      props.clearEditDashboard();\n    } else if (props.dashboardIsPrinting) {\n      props.clearPrintDashboard();\n    }\n  }, [props.dashboardIsEditing, props.dashboardIsPrinting]);\n  useEffect(() => {\n    Array.from(document.getElementsByClassName('dashboard-scroll-container')).forEach(container => {\n      container.scroll(0, 0);\n    });\n  }, [props.selectedId]);\n\n  const onExpandedChanged = expanded => setControlbarExpanded(expanded);\n\n  return <div className={cx(classes.container, 'dashboard-scroll-container')}>\n            <DashboardsBar expanded={controlbarExpanded} onExpandedChanged={onExpandedChanged} />\n            <DashboardContainer covered={controlbarExpanded}>\n                {controlbarExpanded && <ComponentCover className={classes.cover} translucent onClick={() => setControlbarExpanded(false)} />}\n                <ViewTitleBar />\n                <FilterBar />\n                <ViewItemGrid />\n            </DashboardContainer>\n        </div>;\n};\nViewDashboard.propTypes = {\n  clearEditDashboard: PropTypes.func,\n  clearPrintDashboard: PropTypes.func,\n  dashboardIsEditing: PropTypes.bool,\n  dashboardIsPrinting: PropTypes.bool,\n  selectedId: PropTypes.string\n};\n\nconst mapStateToProps = state => {\n  return {\n    dashboardIsEditing: sGetIsEditing(state),\n    dashboardIsPrinting: sGetIsPrinting(state),\n    selectedId: sGetSelectedId(state)\n  };\n};\n\nexport default connect(mapStateToProps, {\n  clearEditDashboard: acClearEditDashboard,\n  clearPrintDashboard: acClearPrintDashboard\n})(ViewDashboard);","import React from 'react';\nimport PropTypes from 'prop-types';\nimport i18n from '@dhis2/d2-i18n';\nimport { InputField } from '@dhis2/ui';\n\nconst ItemSearchField = props => <InputField name=\"Dashboard item search\" label={i18n.t('Search for items to add to this dashboard')} type=\"text\" onChange={props.onChange} onFocus={props.onFocus} value={props.value} dataTest=\"item-search\" />;\n\nItemSearchField.propTypes = {\n  value: PropTypes.string,\n  onChange: PropTypes.func,\n  onFocus: PropTypes.func\n};\nexport default ItemSearchField;","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { MenuItem, colors } from '@dhis2/ui';\nimport classes from './styles/HeaderMenuItem.module.css';\n\nconst HeaderMenuItem = ({\n  title\n}) => <MenuItem className={classes.item} dense key={title} disabled label={<span style={{\n  color: colors.grey800,\n  fontWeight: '600'\n}}>\n                {title}\n            </span>} />;\n\nHeaderMenuItem.propTypes = {\n  title: PropTypes.string.isRequired\n};\nexport default HeaderMenuItem;","import React from 'react';\nimport { colors } from '@dhis2/ui';\nimport PropTypes from 'prop-types';\n\nconst LaunchIcon = ({\n  className\n}) => <svg className={className} xmlns=\"http://www.w3.org/2000/svg\" width=\"12\" height=\"12\" fill={colors.grey600} viewBox=\"0 0 24 24\">\n        <path d=\"M0 0h24v24H0z\" fill=\"none\" />\n        <path d=\"M19 19H5V5h7V3H5c-1.11 0-2 .9-2 2v14c0 1.1.89 2 2 2h14c1.1 0 2-.9 2-2v-7h-2v7zM14 3v2h3.59l-9.83 9.83 1.41 1.41L19 6.41V10h2V3h-7z\" />\n    </svg>;\n\nLaunchIcon.propTypes = {\n  className: PropTypes.string\n};\nexport default LaunchIcon;","import React from 'react';\nimport { MenuItem, colors } from '@dhis2/ui';\nimport i18n from '@dhis2/d2-i18n';\nimport PropTypes from 'prop-types';\nimport { visTypeIcons } from '@dhis2/analytics';\nimport { getItemIcon, VISUALIZATION } from '../../modules/itemTypes';\nimport LaunchIcon from '../../icons/Launch';\nimport classes from './styles/ContentMenuItem.module.css';\n\nconst LaunchLink = ({\n  url\n}) => <a onClick={e => e.stopPropagation()} className={classes.launchLink} target=\"_blank\" rel=\"noopener noreferrer\" href={url}>\n        <LaunchIcon />\n    </a>;\n\nLaunchLink.propTypes = {\n  url: PropTypes.string\n};\n\nconst InsertButton = () => <button className={classes.buttonInsert}>{i18n.t('Insert')}</button>;\n\nconst ContentMenuItem = ({\n  type,\n  name,\n  onInsert,\n  url,\n  visType\n}) => {\n  const ItemIcon = getItemIcon(type);\n  const renderedItemIcon = type === VISUALIZATION ? visTypeIcons[visType] : <ItemIcon style={{\n    fill: colors.grey600\n  }} />;\n  return <MenuItem dense onClick={onInsert} label={<div className={classes.menuItem}>\n                    <div className={classes.label}>\n                        <span style={{\n        marginRight: '6px'\n      }}>\n                            {renderedItemIcon}\n                        </span>\n                        <span>{name}</span>\n                        {url ? <LaunchLink url={url} /> : null}\n                    </div>\n                    <InsertButton />\n                </div>} dataTest={`menu-item-${name}`} />;\n};\n\nContentMenuItem.propTypes = {\n  name: PropTypes.string,\n  type: PropTypes.string,\n  url: PropTypes.string,\n  visType: PropTypes.string,\n  onInsert: PropTypes.func\n};\nexport default ContentMenuItem;","import { sGetEditDashboardRoot } from '../../reducers/editDashboard';\nimport { itemTypeMap } from '../../modules/itemTypes';\nimport { acAddDashboardItem, acUpdateDashboardItem } from '../../actions/editDashboard';\nexport const tAddListItemContent = (type, content) => (dispatch, getState) => {\n  const state = getState();\n  const listItemType = itemTypeMap[type].propName;\n  const dashboardItems = sGetEditDashboardRoot(state).dashboardItems;\n  const dashboardItemIndex = dashboardItems.findIndex(item => item.type === type);\n  let dashboardItem; // Reports/Resources/Users dashboard item type already present in dashboard\n\n  if (dashboardItemIndex > -1) {\n    dashboardItem = dashboardItems[dashboardItemIndex];\n    dashboardItem[listItemType].push(content);\n    dispatch(acUpdateDashboardItem(dashboardItem));\n  } else {\n    dashboardItem = {\n      type: type,\n      content: [content]\n    };\n    dispatch(acAddDashboardItem(dashboardItem));\n  }\n};","import i18n from '@dhis2/d2-i18n';\nimport { VISUALIZATION, MAP, EVENT_CHART, EVENT_REPORT, USERS, REPORTS, RESOURCES, APP, MESSAGES, TEXT, SPACER } from '../../modules/itemTypes';\nexport const singleItems = [{\n  id: 'additional',\n  header: i18n.t('Additional items'),\n  items: [{\n    type: TEXT,\n    name: i18n.t('Text box'),\n    content: ''\n  }, {\n    type: MESSAGES,\n    name: i18n.t('Messages'),\n    content: 'true'\n  }, {\n    type: SPACER,\n    name: i18n.t('Spacer'),\n    content: ''\n  }]\n}]; // categorizedItems are grouped in the item selector menu\n\nexport const categorizedItems = [VISUALIZATION, MAP, EVENT_REPORT, EVENT_CHART, USERS, REPORTS, RESOURCES, APP]; // listItemTypes are included in a single dashboard item\n\nexport const listItemTypes = [REPORTS, RESOURCES, USERS];","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport i18n from '@dhis2/d2-i18n';\nimport { MenuItem, Divider } from '@dhis2/ui';\nimport { useConfig } from '@dhis2/app-runtime';\nimport HeaderMenuItem from './HeaderMenuItem';\nimport ContentMenuItem from './ContentMenuItem';\nimport { tAddListItemContent } from './actions';\nimport { acAddDashboardItem } from '../../actions/editDashboard';\nimport { getItemUrl, APP, VISUALIZATION } from '../../modules/itemTypes';\nimport { categorizedItems, listItemTypes } from './selectableItems';\nimport classes from './styles/CategorizedMenuGroup.module.css';\n\nconst CategorizedMenuGroup = ({\n  type,\n  title,\n  items,\n  hasMore,\n  acAddDashboardItem,\n  tAddListItemContent,\n  onChangeItemsLimit\n}) => {\n  const {\n    baseUrl\n  } = useConfig();\n  const [seeMore, setSeeMore] = useState(false);\n\n  const addItem = item => () => {\n    if (type === APP) {\n      acAddDashboardItem({\n        type,\n        content: item.key\n      });\n    } else {\n      const newItem = {\n        id: item.id,\n        name: item.displayName || item.name\n      };\n\n      if (listItemTypes.includes(type)) {\n        tAddListItemContent(type, newItem);\n      } else {\n        acAddDashboardItem({\n          type,\n          content: newItem\n        });\n      }\n    }\n  };\n\n  const toggleSeeMore = () => {\n    setSeeMore(!seeMore);\n    onChangeItemsLimit(type);\n  };\n\n  return <>\n            <HeaderMenuItem title={title} />\n            {items.map(item => {\n      const itemUrl = getItemUrl(type, item, baseUrl);\n      return <ContentMenuItem key={item.id || item.key} type={type} visType={type === VISUALIZATION ? item.type : type} name={item.displayName || item.name} onInsert={addItem(item)} url={itemUrl} />;\n    })}\n            {hasMore ? <MenuItem dense key={`showmore${title}`} onClick={toggleSeeMore} label={<button className={classes.showMoreButton}>\n                            {seeMore ? i18n.t('Show fewer') : i18n.t('Show more')}\n                        </button>} /> : null}\n            <Divider margin=\"8px 0px\" />\n        </>;\n};\n\nCategorizedMenuGroup.propTypes = {\n  items: PropTypes.array.isRequired,\n  title: PropTypes.string.isRequired,\n  type: PropTypes.oneOf(categorizedItems).isRequired,\n  onChangeItemsLimit: PropTypes.func.isRequired,\n  acAddDashboardItem: PropTypes.func,\n  hasMore: PropTypes.bool,\n  tAddListItemContent: PropTypes.func\n};\nexport default connect(null, {\n  acAddDashboardItem,\n  tAddListItemContent\n})(CategorizedMenuGroup);","import React from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport HeaderMenuItem from './HeaderMenuItem';\nimport ContentMenuItem from './ContentMenuItem';\nimport { acAddDashboardItem } from '../../actions/editDashboard';\nexport const SinglesMenuGroup = ({\n  acAddDashboardItem,\n  category\n}) => {\n  const addToDashboard = ({\n    type,\n    content\n  }) => () => {\n    acAddDashboardItem({\n      type,\n      content\n    });\n  };\n\n  return <>\n            <HeaderMenuItem title={category.header} />\n            {category.items.map(item => <ContentMenuItem key={item.type} type={item.type} name={item.name} onInsert={addToDashboard(item)} />)}\n        </>;\n};\nSinglesMenuGroup.propTypes = {\n  acAddDashboardItem: PropTypes.func,\n  category: PropTypes.object\n};\nexport default connect(null, {\n  acAddDashboardItem\n})(SinglesMenuGroup);","import React, { useState, useEffect, createRef } from 'react';\nimport { Popover, FlyoutMenu } from '@dhis2/ui';\nimport { useD2 } from '@dhis2/app-runtime-adapter-d2';\nimport ItemSearchField from './ItemSearchField';\nimport CategorizedMenuGroup from './CategorizedMenuGroup';\nimport SinglesMenuGroup from './SinglesMenuGroup';\nimport { singleItems, categorizedItems } from './selectableItems';\nimport { itemTypeMap, getDefaultItemCount } from '../../modules/itemTypes';\nimport classes from './styles/ItemSelector.module.css';\n\nconst ItemSelector = () => {\n  const [isOpen, setIsOpen] = useState(false);\n  const [filter, setFilter] = useState('');\n  const [items, setItems] = useState(null);\n  const [maxOptions, setMaxOptions] = useState(new Set());\n  const {\n    d2\n  } = useD2({});\n  useEffect(() => {\n    let queryString = '?count=11';\n\n    if ([...maxOptions.values()].length) {\n      queryString += '&max=' + [...maxOptions.values()].join('&max=');\n    }\n\n    const filterStr = filter ? `/${filter}` : '';\n    d2.Api.getApi().get(`dashboards/q${filterStr}${queryString}`).then(response => setItems(response)).catch(console.error);\n  }, [filter, maxOptions]);\n\n  const closeMenu = () => {\n    setIsOpen(false);\n    setFilter('');\n    setMaxOptions(new Set());\n  };\n\n  const openMenu = () => setIsOpen(true);\n\n  const getCategorizedMenuGroups = () => {\n    return categorizedItems.filter(type => {\n      const itemType = itemTypeMap[type];\n      return items && items[itemType.endPointName];\n    }).map(type => {\n      const itemType = itemTypeMap[type];\n      const itemCount = getDefaultItemCount(type);\n      const allItems = items[itemType.endPointName];\n      const hasMore = allItems.length > itemCount;\n      const displayItems = maxOptions.has(itemType.id) ? allItems : allItems.slice(0, itemCount);\n      return <CategorizedMenuGroup key={type} type={type} title={itemType.pluralTitle} items={displayItems} onChangeItemsLimit={updateMaxOptions} hasMore={hasMore} />;\n    });\n  };\n\n  const getSinglesMenuGroups = () => singleItems.map(category => <SinglesMenuGroup key={category.id} category={category} />);\n\n  const getMenuGroups = () => getCategorizedMenuGroups().concat(getSinglesMenuGroups());\n\n  const updateMaxOptions = type => {\n    if (type) {\n      const options = new Set(maxOptions);\n      options.has(type) ? options.delete(type) : options.add(type);\n      setMaxOptions(options);\n    } else {\n      setMaxOptions(new Set());\n    }\n  };\n\n  const updateFilter = ({\n    value\n  }) => setFilter(value);\n\n  const inputRef = createRef();\n  return <>\n            <span ref={inputRef}>\n                <ItemSearchField value={filter} onChange={updateFilter} onFocus={openMenu} />\n            </span>\n            {isOpen && <Popover reference={inputRef} placement=\"bottom-start\" onClickOutside={closeMenu} arrow={false} maxWidth={700}>\n                    <div className={classes.popover}>\n                        <FlyoutMenu className={classes.menu} dataTest=\"item-menu\" maxWidth=\"700px\">\n                            {getMenuGroups()}\n                        </FlyoutMenu>\n                    </div>\n                </Popover>}\n        </>;\n};\n\nexport default ItemSelector;","import React from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport i18n from '@dhis2/d2-i18n';\nimport { InputField, TextAreaField } from '@dhis2/ui';\nimport ItemSelector from '../ItemSelector/ItemSelector';\nimport { acSetDashboardTitle, acSetDashboardDescription } from '../../actions/editDashboard';\nimport { orObject } from '../../modules/util';\nimport { sGetEditDashboardRoot } from '../../reducers/editDashboard';\nimport classes from './styles/EditTitleBar.module.css';\nexport const EditTitleBar = ({\n  name,\n  description,\n  onChangeTitle,\n  onChangeDescription\n}) => {\n  const updateTitle = (_, e) => {\n    onChangeTitle(e.target.value);\n  };\n\n  const updateDescription = (_, e) => {\n    onChangeDescription(e.target.value);\n  };\n\n  return <section className={classes.section}>\n            <div className={classes.titleDescription}>\n                <InputField className={classes.title} name=\"Dashboard title input\" label={i18n.t('Dashboard title')} type=\"text\" onChange={updateTitle} value={name} placeholder={i18n.t('Untitled dashboard')} dataTest=\"dashboard-title-input\" />\n                <TextAreaField className={classes.description} name=\"Dashboard description input\" label={i18n.t('Dashboard description')} onChange={updateDescription} value={description} dataTest=\"dashboard-description-input\" />\n            </div>\n            <div className={classes.itemSelector}>\n                <ItemSelector />\n            </div>\n        </section>;\n};\nEditTitleBar.propTypes = {\n  onChangeDescription: PropTypes.func.isRequired,\n  onChangeTitle: PropTypes.func.isRequired,\n  description: PropTypes.string,\n  name: PropTypes.string\n};\nEditTitleBar.defaultProps = {\n  name: '',\n  description: ''\n};\n\nconst mapStateToProps = state => {\n  const selectedDashboard = orObject(sGetEditDashboardRoot(state));\n  return {\n    name: selectedDashboard.name,\n    description: selectedDashboard.description\n  };\n};\n\nconst mapDispatchToProps = {\n  onChangeTitle: acSetDashboardTitle,\n  onChangeDescription: acSetDashboardDescription\n};\nexport default connect(mapStateToProps, mapDispatchToProps)(EditTitleBar);","import React, { useState } from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport i18n from '@dhis2/d2-i18n';\nimport { Responsive as ResponsiveReactGridLayout } from 'react-grid-layout';\nimport { Layer, CenteredContent, CircularLoader } from '@dhis2/ui';\nimport cx from 'classnames';\nimport { acUpdateDashboardLayout } from '../../actions/editDashboard';\nimport { Item } from '../Item/Item';\nimport { resize as pluginResize } from '../Item/VisualizationItem/Visualization/plugin';\nimport { isVisualizationType } from '../../modules/itemTypes';\nimport { GRID_ROW_HEIGHT_PX, GRID_COMPACT_TYPE, MARGIN_PX, GRID_PADDING_PX, GRID_COLUMNS, hasShape, getGridWidth } from '../../modules/gridUtil';\nimport { getBreakpoint } from '../../modules/smallScreen';\nimport getGridItemDomId from '../../modules/getGridItemDomId';\nimport { orArray } from '../../modules/util';\nimport NoContentMessage from '../../widgets/NoContentMessage';\nimport { sGetSelectedIsLoading } from '../../reducers/selected';\nimport { sGetEditDashboardRoot, sGetEditDashboardItems } from '../../reducers/editDashboard';\nimport ProgressiveLoadingContainer from '../Item/ProgressiveLoadingContainer';\nimport { EDIT } from '../Dashboard/dashboardModes';\nimport { useWindowDimensions } from '../WindowDimensionsProvider';\nimport classes from './styles/ItemGrid.module.css';\nimport 'react-grid-layout/css/styles.css';\nimport 'react-resizable/css/styles.css';\nimport './styles/ItemGrid.css';\n\nconst EditItemGrid = ({\n  isLoading,\n  dashboardItems,\n  acUpdateDashboardLayout\n}) => {\n  const [gridWidth, setGridWidth] = useState(0);\n  const {\n    width\n  } = useWindowDimensions();\n\n  const onLayoutChange = newLayout => {\n    acUpdateDashboardLayout(newLayout);\n  };\n\n  const onResizeStop = (layout, oldItem, newItem) => {\n    const el = document.querySelector(`#${getGridItemDomId(newItem.i)}`) || {};\n    if (typeof el.setViewportSize === 'function') setTimeout(() => el.setViewportSize(el.clientWidth - 5, el.clientHeight - 5), 10);\n    const dashboardItem = dashboardItems.find(item => item.id === newItem.i); // call resize on the item component if it's a plugin type\n\n    if (dashboardItem && isVisualizationType(dashboardItem)) {\n      pluginResize(dashboardItem);\n    }\n  };\n\n  const getItemComponent = item => <ProgressiveLoadingContainer key={item.i} className={cx(item.type, 'edit')} itemId={item.id}>\n            <Item item={item} gridWidth={gridWidth} dashboardMode={EDIT} />\n        </ProgressiveLoadingContainer>;\n\n  const getItemComponents = items => items.map(item => getItemComponent(item));\n\n  const onWidthChanged = containerWidth => {\n    setTimeout(() => {\n      setGridWidth(containerWidth);\n    }, 200);\n  };\n\n  if (!isLoading && !dashboardItems.length) {\n    return <NoContentMessage text={i18n.t('There are no items on this dashboard')} />;\n  }\n\n  return <>\n            {isLoading ? <Layer translucent>\n                    <CenteredContent>\n                        <CircularLoader />\n                    </CenteredContent>\n                </Layer> : null}\n            <ResponsiveReactGridLayout className={classes.grid} rowHeight={GRID_ROW_HEIGHT_PX} width={getGridWidth(width)} cols={{\n      lg: GRID_COLUMNS\n    }} breakpoints={{\n      lg: getBreakpoint()\n    }} layouts={{\n      lg: dashboardItems\n    }} compactType={GRID_COMPACT_TYPE} margin={MARGIN_PX} containerPadding={{\n      lg: GRID_PADDING_PX\n    }} onLayoutChange={onLayoutChange} onResizeStop={onResizeStop} onWidthChange={onWidthChanged} isDraggable={true} isResizable={true} draggableCancel=\"input,textarea\">\n                {getItemComponents(dashboardItems)}\n            </ResponsiveReactGridLayout>\n        </>;\n};\n\nEditItemGrid.propTypes = {\n  acUpdateDashboardLayout: PropTypes.func,\n  dashboardItems: PropTypes.array,\n  isLoading: PropTypes.bool\n}; // Container\n\nconst mapStateToProps = state => {\n  const selectedDashboard = sGetEditDashboardRoot(state);\n  const dashboardItems = orArray(sGetEditDashboardItems(state)).filter(hasShape);\n  return {\n    isLoading: sGetSelectedIsLoading(state) || !selectedDashboard,\n    dashboardItems\n  };\n};\n\nconst mapDispatchToProps = {\n  acUpdateDashboardLayout\n};\nexport default connect(mapStateToProps, mapDispatchToProps)(EditItemGrid);","import React from 'react';\nimport PropTypes from 'prop-types';\nimport i18n from '@dhis2/d2-i18n';\nimport { Button, Modal, ModalContent, ModalActions, ButtonStrip, ModalTitle } from '@dhis2/ui';\nimport classes from './styles/ConfirmDeleteDialog.module.css';\nexport const ConfirmDeleteDialog = ({\n  dashboardName,\n  onDeleteConfirmed,\n  onContinueEditing,\n  open\n}) => {\n  const actions = [<Button key=\"cancel\" secondary onClick={onContinueEditing} dataTest=\"cancel-delete-dashboard\">\n            {i18n.t('Cancel')}\n        </Button>, <Button key=\"delete\" destructive onClick={onDeleteConfirmed} dataTest=\"confirm-delete-dashboard\">\n            {i18n.t('Delete')}\n        </Button>];\n  return open && <Modal onClose={onContinueEditing} small position=\"middle\">\n                <ModalTitle>{i18n.t('Delete dashboard')}</ModalTitle>\n                <ModalContent>\n                    <span className={classes.content}>\n                        {i18n.t('Deleting dashboard \"{{ dashboardName }}\" will remove it for all users. This action cannot be undone. Are you sure you want to permanently delete this dashboard?', {\n          dashboardName\n        })}\n                    </span>\n                </ModalContent>\n                <ModalActions>\n                    <ButtonStrip>{actions}</ButtonStrip>\n                </ModalActions>\n            </Modal>;\n};\nConfirmDeleteDialog.propTypes = {\n  dashboardName: PropTypes.string,\n  open: PropTypes.bool,\n  onContinueEditing: PropTypes.func,\n  onDeleteConfirmed: PropTypes.func\n};\nexport default ConfirmDeleteDialog;","import React, { useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { Redirect } from 'react-router-dom';\nimport i18n from '@dhis2/d2-i18n';\nimport TranslationDialog from '@dhis2/d2-ui-translation-dialog';\nimport { Button, ButtonStrip } from '@dhis2/ui';\nimport { useDataEngine, useAlert } from '@dhis2/app-runtime';\nimport { useD2 } from '@dhis2/app-runtime-adapter-d2';\nimport ConfirmDeleteDialog from './ConfirmDeleteDialog';\nimport { tSaveDashboard, acClearEditDashboard, acSetPrintPreviewView, acClearPrintPreviewView } from '../../actions/editDashboard';\nimport { acClearPrintDashboard } from '../../actions/printDashboard';\nimport { tDeleteDashboard, acSetDashboardDisplayName } from '../../actions/dashboards';\nimport { sGetEditDashboardRoot, sGetIsNewDashboard, sGetIsPrintPreviewView } from '../../reducers/editDashboard';\nimport { apiFetchDashboard } from '../../api/dashboards';\nimport classes from './styles/EditBar.module.css';\nconst saveFailedMessage = i18n.t('Failed to save dashboard. You might be offline or not have access to edit this dashboard.');\n\nconst EditBar = props => {\n  const {\n    d2\n  } = useD2({});\n  const dataEngine = useDataEngine();\n  const [translationDlgIsOpen, setTranslationDlgIsOpen] = useState(false);\n  const [dashboard, setDashboard] = useState(undefined);\n  const [confirmDeleteDlgIsOpen, setConfirmDeleteDlgIsOpen] = useState(false);\n  const [redirectUrl, setRedirectUrl] = useState(undefined);\n  const failureAlert = useAlert(saveFailedMessage, {\n    critical: true\n  });\n  useEffect(() => {\n    if (props.dashboardId && !dashboard) {\n      apiFetchDashboard(dataEngine, props.dashboardId).then(dboard => setDashboard(dboard));\n    }\n  }, [props.dashboardId, dashboard]);\n\n  const onConfirmDelete = () => {\n    setConfirmDeleteDlgIsOpen(true);\n  };\n\n  const onSave = () => {\n    props.saveDashboard().then(newId => {\n      setRedirectUrl(`/${newId}`);\n    }).catch(() => failureAlert.show());\n  };\n\n  const onPrintPreview = () => {\n    if (props.isPrintPreviewView) {\n      props.clearPrintPreview();\n      props.clearPrintDashboard();\n    } else {\n      props.showPrintPreview();\n    }\n  };\n\n  const onDiscard = () => {\n    props.onDiscardChanges();\n    const redirectUrl = props.dashboardId ? `/${props.dashboardId}` : '/';\n    setRedirectUrl(redirectUrl);\n  };\n\n  const onContinueEditing = () => {\n    setConfirmDeleteDlgIsOpen(false);\n  };\n\n  const onDeleteConfirmed = () => {\n    setConfirmDeleteDlgIsOpen(false);\n    props.onDelete(props.dashboardId).then(() => {\n      setRedirectUrl('/');\n    });\n  };\n\n  const onTranslationsSaved = async translations => {\n    if (translations && translations.length) {\n      const dbLocale = await d2.currentUser.userSettings.get('keyDbLocale');\n      const translation = translations.find(t => t.locale === dbLocale && t.property === 'NAME');\n\n      if (translation && translation.value) {\n        props.onTranslate(props.dashboardId, translation.value);\n      }\n    }\n  };\n\n  const toggleTranslationDialog = () => setTranslationDlgIsOpen(!translationDlgIsOpen);\n\n  const confirmDeleteDialog = () => props.deleteAccess && props.dashboardId ? <ConfirmDeleteDialog dashboardName={props.dashboardName} onDeleteConfirmed={onDeleteConfirmed} onContinueEditing={onContinueEditing} open={confirmDeleteDlgIsOpen} /> : null;\n\n  const translationDialog = () => dashboard && dashboard.id ? <TranslationDialog className=\"translation-dialog\" d2={d2} open={translationDlgIsOpen} onRequestClose={toggleTranslationDialog} objectToTranslate={{ ...dashboard,\n    modelDefinition: {\n      name: 'dashboard'\n    }\n  }} fieldsToTranslate={['name', 'description']} onTranslationSaved={onTranslationsSaved} onTranslationError={err => console.log('translation update error', err)} /> : null;\n\n  const renderActionButtons = () => <ButtonStrip>\n            <Button primary onClick={onSave} dataTest=\"save-dashboard-button\">\n                {i18n.t('Save changes')}\n            </Button>\n            <Button onClick={onPrintPreview}>\n                {props.isPrintPreviewView ? i18n.t('Exit Print preview') : i18n.t('Print preview')}\n            </Button>\n\n            {props.dashboardId && <Button onClick={toggleTranslationDialog}>\n                    {i18n.t('Translate')}\n                </Button>}\n            {props.dashboardId && props.deleteAccess && <Button onClick={onConfirmDelete} dataTest=\"delete-dashboard-button\">\n                    {i18n.t('Delete')}\n                </Button>}\n        </ButtonStrip>;\n\n  if (redirectUrl) {\n    return <Redirect to={redirectUrl} />;\n  }\n\n  const {\n    updateAccess\n  } = props;\n  const discardBtnText = updateAccess ? i18n.t('Exit without saving') : i18n.t('Go to dashboards');\n  return <>\n            <div className={classes.editBar}>\n                <div className={classes.controls}>\n                    {updateAccess ? renderActionButtons() : null}\n                    <Button secondary onClick={onDiscard}>\n                        {discardBtnText}\n                    </Button>\n                </div>\n            </div>\n            {translationDialog()}\n            {confirmDeleteDialog()}\n        </>;\n};\n\nEditBar.propTypes = {\n  clearPrintDashboard: PropTypes.func,\n  clearPrintPreview: PropTypes.func,\n  dashboardId: PropTypes.string,\n  dashboardName: PropTypes.string,\n  deleteAccess: PropTypes.bool,\n  isPrintPreviewView: PropTypes.bool,\n  saveDashboard: PropTypes.func,\n  showPrintPreview: PropTypes.func,\n  updateAccess: PropTypes.bool,\n  onDelete: PropTypes.func,\n  onDiscardChanges: PropTypes.func,\n  onTranslate: PropTypes.func\n};\n\nconst mapStateToProps = state => {\n  const dashboard = sGetEditDashboardRoot(state);\n  let deleteAccess;\n  let updateAccess;\n\n  if (sGetIsNewDashboard(state)) {\n    deleteAccess = true;\n    updateAccess = true;\n  } else {\n    updateAccess = dashboard.access ? dashboard.access.update : false;\n    deleteAccess = dashboard.access ? dashboard.access.delete : false;\n  }\n\n  return {\n    dashboardId: dashboard.id,\n    dashboardName: dashboard.name,\n    deleteAccess,\n    isPrintPreviewView: sGetIsPrintPreviewView(state),\n    updateAccess\n  };\n};\n\nconst mapDispatchToProps = dispatch => ({\n  clearPrintDashboard: () => dispatch(acClearPrintDashboard()),\n  clearPrintPreview: () => dispatch(acClearPrintPreviewView()),\n  saveDashboard: () => dispatch(tSaveDashboard()).then(id => id),\n  onDelete: id => dispatch(tDeleteDashboard(id)),\n  onDiscardChanges: () => dispatch(acClearEditDashboard()),\n  onTranslate: (id, value) => dispatch(acSetDashboardDisplayName(id, value)),\n  showPrintPreview: () => dispatch(acSetPrintPreviewView())\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(EditBar);","import React from 'react';\nimport PropTypes from 'prop-types';\nimport i18n from '@dhis2/d2-i18n';\nimport { NoticeBox, CenteredContent } from '@dhis2/ui';\nimport classes from './styles/NotSupportedNotice.module.css';\n\nconst NotSupportedNotice = ({\n  message\n}) => <CenteredContent position=\"top\">\n        <div className={classes.noticeContainer}>\n            <NoticeBox title={i18n.t('Not supported')} warning>\n                {message}\n            </NoticeBox>\n        </div>\n    </CenteredContent>;\n\nNotSupportedNotice.propTypes = {\n  message: PropTypes.string\n};\nexport default NotSupportedNotice;","import React from 'react';\nimport PropTypes from 'prop-types';\nimport i18n from '@dhis2/d2-i18n';\nimport classes from './styles/PrintInfo.module.css';\n\nconst PrintInfo = ({\n  isLayout\n}) => {\n  const layoutStyle = isLayout ? i18n.t('dashboard layout') : i18n.t('one item per page');\n  return <div className={classes.container}>\n            <p className={classes.title}>\n                {`${i18n.t('Print Preview')}: ${layoutStyle}`}\n            </p>\n            <div className={classes.printSuggestions}>\n                <p>{`${i18n.t('For best print results')}:`}</p>\n                <ul>\n                    <li>{i18n.t('Use Chrome or Edge web browser')}</li>\n                    <li>\n                        {i18n.t('Wait for all dashboard items to load before printing')}\n                    </li>\n                    <li>\n                        {i18n.t('Use A4 landscape paper size and default margin settings in the browser print dialog')}\n                    </li>\n                </ul>\n            </div>\n            <hr className={classes.divider} />\n        </div>;\n};\n\nPrintInfo.propTypes = {\n  isLayout: PropTypes.bool\n};\nexport default PrintInfo;","import React from 'react';\nimport { colors } from '@dhis2/ui';\n\nconst LessHorizontalIcon = () => <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" fill={colors.grey600} viewBox=\"0 0 24 24\">\n        <path d=\"m13.2928932 6.29289322c.3905243-.39052429 1.0236893-.39052429 1.4142136 0 .3604839.36048396.3882135.92771502.0831886 1.32000622l-.0831886.09420734-4.2921068 4.29289322 4.2921068 4.2928932c.3604839.360484.3882135.927715.0831886 1.3200062l-.0831886.0942074c-.360484.3604839-.927715.3882135-1.3200062.0831886l-.0942074-.0831886-4.99999998-5c-.36048396-.360484-.3882135-.927715-.08318861-1.3200062l.08318861-.0942074z\" />\n    </svg>;\n\nexport default LessHorizontalIcon;","import React from 'react';\nimport PropTypes from 'prop-types';\nimport i18n from '@dhis2/d2-i18n';\nimport { Button } from '@dhis2/ui';\nimport { Link } from 'react-router-dom';\nimport LessHorizontalIcon from '../../icons/LessHorizontal';\nimport classes from './styles/PrintActionsBar.module.css'; // set in PrintActionsBar.module.css\n\nexport const PRINT_ACTIONS_BAR_HEIGHT = 44;\nexport const PRINT_ACTIONS_BAR_HEIGHT_SM = 36;\n\nconst PrintActionsBar = ({\n  id\n}) => {\n  const getExitPrintButton = isSmall => <Button className={isSmall ? classes.buttonSmall : classes.buttonLarge} small={isSmall}>\n            <LessHorizontalIcon />\n            {i18n.t('Exit print preview')}\n        </Button>;\n\n  const getPrintButton = isSmall => <Button className={isSmall ? classes.buttonSmall : classes.buttonLarge} small={isSmall} onClick={window.print}>\n            {i18n.t('Print')}\n        </Button>;\n\n  return <div className={classes.container}>\n            <div className={classes.actions}>\n                <Link className={classes.link} to={`/${id}`}>\n                    {getExitPrintButton(true)}\n                    {getExitPrintButton(false)}\n                </Link>\n                {getPrintButton(true)}\n                {getPrintButton(false)}\n            </div>\n        </div>;\n};\n\nPrintActionsBar.propTypes = {\n  id: PropTypes.string\n};\nexport default PrintActionsBar;","import sortBy from 'lodash/sortBy';\nimport { orArray } from './util';\nimport { itemTypeMap } from './itemTypes'; // for A4 landscape (297x210mm)\n// 794 px = (21cm / 2.54) * 96 pixels/inch\n// 1122 px = 29.7 /2.54 * 96 pixels/inch\n// const a4LandscapeHeightPx = 794\n\nexport const A4_LANDSCAPE_WIDTH_PX = 1102;\nexport const getTransformYPx = elStyle => {\n  if (!elStyle || !elStyle.transform) {\n    return null;\n  } // find valid transforms - those with y pixels\n  // the code is expecting the transform prop to\n  // look like:  translate(10px, 300px)\n\n\n  const transformY = elStyle.transform.split(' ')[1]?.match(/(\\d+)px/);\n\n  if (transformY) {\n    return parseInt(transformY[1]);\n  } else {\n    return null;\n  }\n};\nexport const getDomGridItemsSortedByYPos = elements => {\n  const types = Object.keys(itemTypeMap);\n  const elementsWithBoundingRect = orArray(elements).map(el => {\n    const type = Array.from(el.classList).find(className => types.indexOf(className) > -1);\n    const rect = el.getBoundingClientRect();\n    const y = getTransformYPx(el.style) || parseInt(rect.y);\n    return {\n      type,\n      classList: el.classList,\n      bottomY: y + parseInt(rect.height),\n      el\n    };\n  });\n  return sortBy(elementsWithBoundingRect, ['bottomY']);\n};\n\nconst isLeapPage = n => {\n  // pages 5,9,13,17,21,25,29... are leap pages\n  let x = 0;\n  const startPage = 1;\n\n  const getMultiple = factor => startPage + 4 * factor;\n\n  let multiple = getMultiple(0);\n  let isLeapPage = false;\n\n  while (multiple < n) {\n    multiple = getMultiple(x);\n    ++x;\n\n    if (multiple === n) {\n      isLeapPage = true;\n      break;\n    }\n  }\n\n  return isLeapPage;\n};\n\nexport const getPageBreakPositions = items => {\n  // add enough page breaks so that each item could\n  // be put on its own page. Due to the react-grid-layout\n  // unit system, we have to estimate roughly the size of each\n  // page. At regular intervals add a unit, like a leap year\n  const yPosList = [];\n  let yPos = 0;\n\n  for (let pageNum = 1; pageNum <= items.length; ++pageNum) {\n    if (pageNum === 1) {\n      yPos += 35;\n    } else if (isLeapPage(pageNum)) {\n      yPos += 40;\n    } else {\n      yPos += 39;\n    }\n\n    yPosList.push(yPos);\n  }\n\n  return yPosList;\n};","import React from 'react';\nimport PropTypes from 'prop-types';\nimport cx from 'classnames';\nimport ReactGridLayout from 'react-grid-layout';\nimport i18n from '@dhis2/d2-i18n';\nimport { Layer, CenteredContent, CircularLoader } from '@dhis2/ui';\nimport NoContentMessage from '../../widgets/NoContentMessage';\nimport { GRID_ROW_HEIGHT_PX, GRID_COMPACT_TYPE, MARGIN_PX, GRID_COLUMNS } from '../../modules/gridUtil';\nimport { A4_LANDSCAPE_WIDTH_PX } from '../../modules/printUtils';\nimport 'react-grid-layout/css/styles.css';\nimport 'react-resizable/css/styles.css';\nimport './styles/ItemGrid.css';\n\nconst StaticGrid = ({\n  layout,\n  children,\n  onLayoutChange,\n  className,\n  isLoading\n}) => {\n  if (!isLoading && !layout.length) {\n    return <NoContentMessage text={i18n.t('There are no items on this dashboard')} />;\n  }\n\n  return <>\n            {isLoading ? <Layer translucent>\n                    <CenteredContent>\n                        <CircularLoader />\n                    </CenteredContent>\n                </Layer> : null}\n            <ReactGridLayout margin={MARGIN_PX} cols={GRID_COLUMNS} rowHeight={GRID_ROW_HEIGHT_PX} width={A4_LANDSCAPE_WIDTH_PX} compactType={GRID_COMPACT_TYPE} isDraggable={false} isResizable={false} draggableCancel=\"input,textarea\" className={cx('layout', className)} layout={layout} onLayoutChange={onLayoutChange}>\n                {children}\n            </ReactGridLayout>\n        </>;\n};\n\nStaticGrid.defaultProps = {\n  onLayoutChange: Function.prototype\n};\nStaticGrid.propTypes = {\n  children: PropTypes.node,\n  className: PropTypes.string,\n  isLoading: PropTypes.bool,\n  layout: PropTypes.array,\n  onLayoutChange: PropTypes.func\n};\nexport default StaticGrid;","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport sortBy from 'lodash/sortBy';\nimport cx from 'classnames';\nimport StaticGrid from './StaticGrid';\nimport { Item } from '../Item/Item';\nimport { acUpdatePrintDashboardLayout } from '../../actions/printDashboard';\nimport { sGetSelectedIsLoading } from '../../reducers/selected';\nimport { sGetPrintDashboardRoot, sGetPrintDashboardItems } from '../../reducers/printDashboard';\nimport { sGetIsEditing } from '../../reducers/editDashboard';\nimport { hasShape } from '../../modules/gridUtil';\nimport { getDomGridItemsSortedByYPos, getTransformYPx } from '../../modules/printUtils';\nimport { PRINT_LAYOUT } from '../Dashboard/dashboardModes';\nimport { PAGEBREAK } from '../../modules/itemTypes';\nexport class PrintLayoutItemGrid extends Component {\n  onLayoutChange = newLayout => {\n    this.props.updateDashboardLayout(newLayout);\n  };\n  isFirstPageBreak = item => {\n    if (item.type !== PAGEBREAK) {\n      return false;\n    }\n\n    const pageBreaks = this.props.dashboardItems.filter(i => i.type === PAGEBREAK);\n    const sortedPageBreaks = sortBy(pageBreaks, ['y']);\n    return item.y === sortedPageBreaks[0].y;\n  };\n  getItemComponent = item => {\n    // the first-page-break class is used in Edit print preview\n    const itemClassNames = cx('print', 'layout', `${item.type}`, {\n      'first-page-break': this.props.isEditing && this.isFirstPageBreak(item),\n      shortened: !!item.shortened\n    });\n    return <div key={item.i} className={itemClassNames}>\n                <Item item={item} dashboardMode={PRINT_LAYOUT} />\n            </div>;\n  };\n  getItemComponents = items => items.map(item => this.getItemComponent(item));\n\n  hideExtraPageBreaks() {\n    const sortedElements = getDomGridItemsSortedByYPos(Array.from(document.querySelectorAll('.react-grid-item')));\n    let pageBreakBottom = 0;\n    let lastItemBottom = 0;\n    let foundNonPageBreak = false;\n\n    for (let i = sortedElements.length - 1; i >= 0; --i) {\n      const item = sortedElements[i];\n\n      if (item.type === PAGEBREAK) {\n        if (!foundNonPageBreak) {\n          item.el.classList.add('removed');\n        } else {\n          pageBreakBottom = item.bottomY;\n          break;\n        }\n      } else {\n        foundNonPageBreak = true;\n        const thisItemBottom = item.bottomY;\n\n        if (thisItemBottom > lastItemBottom) {\n          lastItemBottom = thisItemBottom;\n        }\n      }\n    }\n\n    const pageHeight = 720;\n    const gridElement = document.querySelector('.react-grid-layout'); // the last page break is before the last item(s) so\n    // maxHeight is one page beyond the last page break\n\n    const maxHeight = pageBreakBottom + pageHeight;\n\n    if (gridElement) {\n      gridElement.style.height = `${maxHeight}px`;\n    }\n\n    if (this.props.isEditing) {\n      //scroll to below the title page - which is middle of the first pagebreak\n      const firstBreak = document.querySelector('.first-page-break');\n\n      if (firstBreak && firstBreak.style && firstBreak.style.transform) {\n        const yPos = getTransformYPx(firstBreak.style);\n        const scrollArea = document.querySelector('.scroll-area');\n        scrollArea && scrollArea.scroll(0, yPos + 50);\n      }\n    }\n  }\n\n  componentDidMount() {\n    this.hideExtraPageBreaks();\n  }\n\n  componentDidUpdate() {\n    this.hideExtraPageBreaks();\n  }\n\n  render() {\n    const {\n      isLoading,\n      dashboardItems\n    } = this.props;\n    return <StaticGrid isLoading={isLoading} layout={dashboardItems} onLayoutChange={this.onLayoutChange}>\n                {this.getItemComponents(dashboardItems)}\n            </StaticGrid>;\n  }\n\n}\nPrintLayoutItemGrid.propTypes = {\n  dashboardItems: PropTypes.array,\n  isEditing: PropTypes.bool,\n  isLoading: PropTypes.bool,\n  updateDashboardLayout: PropTypes.func\n};\nPrintLayoutItemGrid.defaultProps = {\n  dashboardItems: []\n};\n\nconst mapStateToProps = state => {\n  const selectedDashboard = sGetPrintDashboardRoot(state);\n  return {\n    isLoading: sGetSelectedIsLoading(state) || !selectedDashboard,\n    dashboardItems: sGetPrintDashboardItems(state).filter(hasShape),\n    isEditing: sGetIsEditing(state)\n  };\n};\n\nexport default connect(mapStateToProps, {\n  updateDashboardLayout: acUpdatePrintDashboardLayout\n})(PrintLayoutItemGrid);","import React, { useEffect } from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport cx from 'classnames';\nimport PrintInfo from './PrintInfo';\nimport PrintActionsBar from './PrintActionsBar';\nimport PrintLayoutItemGrid from '../ItemGrid/PrintLayoutItemGrid';\nimport { acSetPrintDashboard, acAddPrintDashboardItem, acUpdatePrintDashboardItem } from '../../actions/printDashboard';\nimport { sGetSelectedId } from '../../reducers/selected';\nimport { sGetEditDashboardRoot, sGetEditDashboardItems } from '../../reducers/editDashboard';\nimport { sGetDashboardById, sGetDashboardItems } from '../../reducers/dashboards';\nimport { PAGEBREAK, PRINT_TITLE_PAGE } from '../../modules/itemTypes';\nimport { MAX_ITEM_GRID_HEIGHT } from '../../modules/gridUtil';\nimport { getPageBreakPositions } from '../../modules/printUtils';\nimport classes from './styles/PrintLayoutDashboard.module.css';\nimport './styles/print.css';\nimport './styles/print-layout.css';\n\nconst addPageBreaks = (items, addDashboardItem) => {\n  const yPosList = getPageBreakPositions(items);\n\n  for (let i = 0; i < items.length; ++i) {\n    addDashboardItem({\n      type: PAGEBREAK,\n      yPos: yPosList[i]\n    });\n  }\n};\n\nconst PrintLayoutDashboard = ({\n  dashboard,\n  items,\n  setPrintDashboard,\n  addDashboardItem,\n  updateDashboardItem,\n  fromEdit\n}) => {\n  useEffect(() => {\n    if (dashboard) {\n      setPrintDashboard(dashboard, items); // If any items are taller than one page, reduce it to one\n      // page (react-grid-layout units)\n\n      items.forEach(item => {\n        if (item.h > MAX_ITEM_GRID_HEIGHT) {\n          item.shortened = true;\n          updateDashboardItem(Object.assign({}, item, {\n            h: MAX_ITEM_GRID_HEIGHT\n          }));\n        }\n      });\n      addPageBreaks(items, addDashboardItem);\n      addDashboardItem({\n        type: PRINT_TITLE_PAGE,\n        isOneItemPerPage: false\n      });\n    }\n  }, [dashboard, items]);\n  return <div className={classes.container}>\n            {!fromEdit && <PrintActionsBar id={dashboard.id} />}\n            <div className={cx(classes.wrapper, 'scroll-area', fromEdit && classes.editView)}>\n                {!fromEdit && <PrintInfo isLayout={true} />}\n                <div className={classes.pageOuter} data-test=\"print-layout-page\">\n                    <PrintLayoutItemGrid />\n                </div>\n            </div>\n        </div>;\n};\n\nPrintLayoutDashboard.propTypes = {\n  addDashboardItem: PropTypes.func,\n  dashboard: PropTypes.object,\n  fromEdit: PropTypes.bool,\n  items: PropTypes.array,\n  setPrintDashboard: PropTypes.func,\n  updateDashboardItem: PropTypes.func\n};\n\nconst mapStateToProps = (state, ownProps) => {\n  const id = sGetSelectedId(state);\n\n  if (ownProps.fromEdit) {\n    const dashboard = sGetEditDashboardRoot(state);\n    return {\n      dashboard,\n      id,\n      items: sGetEditDashboardItems(state)\n    };\n  }\n\n  const dashboard = id ? sGetDashboardById(state, id) : null;\n  return {\n    dashboard,\n    id,\n    items: sGetDashboardItems(state)\n  };\n};\n\nexport default connect(mapStateToProps, {\n  setPrintDashboard: acSetPrintDashboard,\n  addDashboardItem: acAddPrintDashboardItem,\n  updateDashboardItem: acUpdatePrintDashboardItem\n})(PrintLayoutDashboard);","import React, { useEffect } from 'react';\nimport { connect } from 'react-redux';\nimport i18n from '@dhis2/d2-i18n';\nimport PropTypes from 'prop-types';\nimport DashboardContainer from './DashboardContainer';\nimport EditTitleBar from '../TitleBar/EditTitleBar';\nimport EditItemGrid from '../ItemGrid/EditItemGrid';\nimport EditBar from '../ControlBar/EditBar';\nimport NotSupportedNotice from './NotSupportedNotice';\nimport LayoutPrintPreview from './PrintLayoutDashboard';\nimport NoContentMessage from '../../widgets/NoContentMessage';\nimport { acSetEditDashboard } from '../../actions/editDashboard';\nimport { sGetSelectedId } from '../../reducers/selected';\nimport { sGetDashboardById, sGetDashboardItems } from '../../reducers/dashboards';\nimport { sGetIsPrintPreviewView } from '../../reducers/editDashboard';\nimport classes from './styles/EditDashboard.module.css';\n\nconst EditDashboard = props => {\n  useEffect(() => {\n    if (props.dashboard) {\n      props.setEditDashboard(props.dashboard, props.items);\n    }\n  }, [props.dashboard]);\n\n  const renderGrid = () => {\n    if (props.isPrintPreviewView) {\n      return <LayoutPrintPreview fromEdit={true} />;\n    }\n\n    return <DashboardContainer>\n                <EditTitleBar />\n                <EditItemGrid />\n            </DashboardContainer>;\n  };\n\n  return <>\n            <div className={classes.container}>\n                <EditBar />\n                {props.updateAccess ? renderGrid() : <NoContentMessage text={i18n.t('No access')} />}\n            </div>\n            <div className={classes.notice}>\n                <NotSupportedNotice message={i18n.t('Editing dashboards on small screens is not supported. Resize your screen to return to edit mode.')} />\n            </div>\n        </>;\n};\n\nEditDashboard.propTypes = {\n  dashboard: PropTypes.object,\n  isPrintPreviewView: PropTypes.bool,\n  items: PropTypes.array,\n  setEditDashboard: PropTypes.func,\n  updateAccess: PropTypes.bool\n};\n\nconst mapStateToProps = state => {\n  const id = sGetSelectedId(state);\n  const dashboard = id ? sGetDashboardById(state, id) : null;\n  const updateAccess = dashboard && dashboard.access ? dashboard.access.update : false;\n  return {\n    dashboard,\n    updateAccess,\n    items: sGetDashboardItems(state),\n    isPrintPreviewView: sGetIsPrintPreviewView(state)\n  };\n};\n\nexport default connect(mapStateToProps, {\n  setEditDashboard: acSetEditDashboard\n})(EditDashboard);","import React, { useEffect } from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport i18n from '@dhis2/d2-i18n';\nimport DashboardContainer from './DashboardContainer';\nimport EditBar from '../ControlBar/EditBar';\nimport EditTitleBar from '../TitleBar/EditTitleBar';\nimport EditItemGrid from '../ItemGrid/EditItemGrid';\nimport LayoutPrintPreview from './PrintLayoutDashboard';\nimport NotSupportedNotice from './NotSupportedNotice';\nimport { acSetEditNewDashboard } from '../../actions/editDashboard';\nimport { sGetIsPrintPreviewView } from '../../reducers/editDashboard';\nimport classes from './styles/NewDashboard.module.css';\n\nconst NewDashboard = props => {\n  useEffect(() => {\n    props.setNewDashboard();\n  }, []);\n  return <div>\n            <div className={classes.container}>\n                <EditBar />\n                {props.isPrintPreviewView ? <LayoutPrintPreview fromEdit={true} /> : <DashboardContainer>\n                        <EditTitleBar />\n                        <EditItemGrid />\n                    </DashboardContainer>}\n            </div>\n            <div className={classes.notice}>\n                <NotSupportedNotice className={classes.notSupportedNotice} message={i18n.t('Creating dashboards on small screens is not supported. Resize your screen to return to create mode.')} />\n            </div>\n        </div>;\n};\n\nNewDashboard.propTypes = {\n  isPrintPreviewView: PropTypes.bool,\n  setNewDashboard: PropTypes.func\n};\n\nconst mapStateToProps = state => ({\n  isPrintPreviewView: sGetIsPrintPreviewView(state)\n});\n\nexport default connect(mapStateToProps, {\n  setNewDashboard: acSetEditNewDashboard\n})(NewDashboard);","import React from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport cx from 'classnames';\nimport StaticGrid from './StaticGrid';\nimport { Item } from '../Item/Item';\nimport { hasShape } from '../../modules/gridUtil';\nimport { PRINT } from '../Dashboard/dashboardModes';\nimport { sGetSelectedIsLoading } from '../../reducers/selected';\nimport { sGetPrintDashboardRoot, sGetPrintDashboardItems } from '../../reducers/printDashboard';\nimport { orArray } from '../../modules/util';\n\nconst PrintItemGrid = ({\n  isLoading,\n  dashboardItems\n}) => {\n  const getItemComponent = item => <div key={item.i} className={cx(item.type, 'print', 'oipp')}>\n            <Item item={item} dashboardMode={PRINT} />\n        </div>;\n\n  const getItemComponents = items => items.map(item => getItemComponent(item));\n\n  return <StaticGrid isLoading={isLoading} className=\"print\" layout={dashboardItems}>\n            {getItemComponents(dashboardItems)}\n        </StaticGrid>;\n};\n\nPrintItemGrid.propTypes = {\n  dashboardItems: PropTypes.array,\n  isLoading: PropTypes.bool\n};\n\nconst mapStateToProps = state => {\n  const selectedDashboard = sGetPrintDashboardRoot(state);\n  return {\n    isLoading: sGetSelectedIsLoading(state) || !selectedDashboard,\n    dashboardItems: orArray(sGetPrintDashboardItems(state)).filter(hasShape)\n  };\n};\n\nexport default connect(mapStateToProps)(PrintItemGrid);","import React, { useEffect } from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport sortBy from 'lodash/sortBy';\nimport PrintInfo from './PrintInfo';\nimport PrintActionsBar from './PrintActionsBar';\nimport PrintItemGrid from '../ItemGrid/PrintItemGrid';\nimport { acSetPrintDashboard, acAddPrintDashboardItem, acRemovePrintDashboardItem, acUpdatePrintDashboardItem } from '../../actions/printDashboard';\nimport { sGetSelectedId } from '../../reducers/selected';\nimport { sGetDashboardById, sGetDashboardItems } from '../../reducers/dashboards';\nimport { PAGEBREAK, PRINT_TITLE_PAGE, SPACER } from '../../modules/itemTypes';\nimport { MAX_ITEM_GRID_HEIGHT_OIPP, MAX_ITEM_GRID_WIDTH_OIPP } from '../../modules/gridUtil';\nimport classes from './styles/PrintDashboard.module.css';\nimport './styles/print.css';\nimport './styles/print-oipp.css';\n\nconst PrintDashboard = ({\n  dashboard,\n  items,\n  setPrintDashboard,\n  addDashboardItem,\n  updateDashboardItem,\n  removeDashboardItem\n}) => {\n  useEffect(() => {\n    if (dashboard) {\n      //sort the items by Y pos so they print in order of top to bottom\n      const sortedItems = sortBy(items, ['y', 'x']);\n      setPrintDashboard(dashboard, sortedItems); // remove spacers - don't want empty pages\n\n      let spacerCount = 0;\n      items.forEach(item => {\n        if (item.type === SPACER) {\n          spacerCount += 1;\n          removeDashboardItem(item.id);\n        }\n      }); // Resize the items to the full page size\n\n      items.forEach(item => {\n        updateDashboardItem(Object.assign({}, item, {\n          w: MAX_ITEM_GRID_WIDTH_OIPP,\n          h: MAX_ITEM_GRID_HEIGHT_OIPP\n        }));\n      }); // insert page breaks into the document flow to create the \"pages\"\n      // when previewing the print\n\n      for (let i = 0; i < (items.length - spacerCount) * 2; i += 2) {\n        addDashboardItem({\n          type: PAGEBREAK,\n          position: i,\n          isStatic: false\n        });\n      }\n\n      addDashboardItem({\n        type: PRINT_TITLE_PAGE,\n        isOneItemPerPage: true\n      });\n    }\n  }, [dashboard, items]);\n  return <div className={classes.container}>\n            <PrintActionsBar id={dashboard.id} />\n            <div className={classes.wrapper}>\n                <PrintInfo isLayout={false} />\n                <div className={classes.pageOuter} data-test=\"print-oipp-page\">\n                    <PrintItemGrid />\n                </div>\n            </div>\n        </div>;\n};\n\nPrintDashboard.propTypes = {\n  addDashboardItem: PropTypes.func,\n  dashboard: PropTypes.object,\n  items: PropTypes.array,\n  removeDashboardItem: PropTypes.func,\n  setPrintDashboard: PropTypes.func,\n  updateDashboardItem: PropTypes.func\n};\n\nconst mapStateToProps = state => {\n  const id = sGetSelectedId(state);\n  const dashboard = id ? sGetDashboardById(state, id) : null;\n  return {\n    dashboard,\n    id,\n    items: sGetDashboardItems(state)\n  };\n};\n\nexport default connect(mapStateToProps, {\n  setPrintDashboard: acSetPrintDashboard,\n  addDashboardItem: acAddPrintDashboardItem,\n  removeDashboardItem: acRemovePrintDashboardItem,\n  updateDashboardItem: acUpdatePrintDashboardItem\n})(PrintDashboard);","import React, { useState, useEffect } from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport isEmpty from 'lodash/isEmpty';\nimport i18n from '@dhis2/d2-i18n';\nimport { Layer, CenteredContent, CircularLoader } from '@dhis2/ui';\nimport { Redirect } from 'react-router-dom';\nimport DashboardsBar from '../ControlBar/ViewControlBar/DashboardsBar';\nimport NoContentMessage from '../../widgets/NoContentMessage';\nimport ViewDashboard from './ViewDashboard';\nimport EditDashboard from './EditDashboard';\nimport NewDashboard from './NewDashboard';\nimport PrintDashboard from './PrintDashboard';\nimport PrintLayoutDashboard from './PrintLayoutDashboard';\nimport { tSelectDashboard } from '../../actions/dashboards';\nimport { acClearEditDashboard } from '../../actions/editDashboard';\nimport { sDashboardsIsFetching, sGetAllDashboards } from '../../reducers/dashboards';\nimport { sGetSelectedId, NON_EXISTING_DASHBOARD_ID } from '../../reducers/selected';\nimport { EDIT, NEW, VIEW, PRINT, PRINT_LAYOUT, isPrintMode, isEditMode } from './dashboardModes';\nimport { useWindowDimensions } from '../WindowDimensionsProvider';\nimport { isSmallScreen } from '../../modules/smallScreen';\n\nconst setHeaderbarVisibility = mode => {\n  const header = document.getElementsByTagName('header')[0];\n\n  if (isPrintMode(mode)) {\n    header.classList.add('hidden');\n  } else {\n    header.classList.remove('hidden');\n  }\n};\n\nconst dashboardMap = {\n  [VIEW]: <ViewDashboard />,\n  [EDIT]: <EditDashboard />,\n  [NEW]: <NewDashboard />,\n  [PRINT]: <PrintDashboard />,\n  [PRINT_LAYOUT]: <PrintLayoutDashboard />\n};\n\nconst Dashboard = ({\n  id,\n  mode,\n  dashboardsLoaded,\n  dashboardsIsEmpty,\n  routeId,\n  selectDashboard,\n  clearEditDashboard\n}) => {\n  const {\n    width\n  } = useWindowDimensions();\n  const [redirectUrl, setRedirectUrl] = useState(null);\n  useEffect(() => {\n    setHeaderbarVisibility(mode);\n  }, [mode]);\n  useEffect(() => {\n    if (isSmallScreen(width) && isEditMode(mode)) {\n      const redirectUrl = routeId ? `/${routeId}` : '/';\n      setRedirectUrl(redirectUrl);\n    } else {\n      setRedirectUrl(null);\n    }\n  }, [mode]);\n  useEffect(() => {\n    if (!isEditMode(mode)) {\n      clearEditDashboard();\n    }\n  }, [mode]);\n  useEffect(() => {\n    if (dashboardsLoaded && !dashboardsIsEmpty) {\n      selectDashboard(routeId);\n    }\n  }, [dashboardsLoaded, dashboardsIsEmpty, routeId, mode]);\n\n  if (!dashboardsLoaded) {\n    return <Layer translucent>\n                <CenteredContent>\n                    <CircularLoader />\n                </CenteredContent>\n            </Layer>;\n  }\n\n  if (redirectUrl) {\n    return <Redirect to={redirectUrl} />;\n  }\n\n  if (mode === NEW) {\n    return dashboardMap[mode];\n  }\n\n  if (dashboardsIsEmpty) {\n    return <>\n                <DashboardsBar />\n                <NoContentMessage text={i18n.t('No dashboards found. Use the + button to create a new dashboard.')} />\n            </>;\n  }\n\n  if (id === NON_EXISTING_DASHBOARD_ID) {\n    return <>\n                <DashboardsBar />\n                <NoContentMessage text={i18n.t('Requested dashboard not found')} />\n            </>;\n  }\n\n  if (id === null) {\n    return <Layer translucent>\n                <CenteredContent>\n                    <CircularLoader />\n                </CenteredContent>\n            </Layer>;\n  }\n\n  return dashboardMap[mode];\n};\n\nDashboard.propTypes = {\n  dashboardsIsEmpty: PropTypes.bool,\n  dashboardsLoaded: PropTypes.bool,\n  id: PropTypes.string,\n  match: PropTypes.object,\n  // provided by the react-router-dom\n  mode: PropTypes.string,\n  routeId: PropTypes.string,\n  selectDashboard: PropTypes.func\n};\n\nconst mapStateToProps = (state, ownProps) => {\n  const dashboards = sGetAllDashboards(state);\n  return {\n    dashboardsIsEmpty: isEmpty(dashboards),\n    dashboardsLoaded: !sDashboardsIsFetching(state),\n    id: sGetSelectedId(state),\n    routeId: ownProps.match?.params?.dashboardId || null\n  };\n};\n\nexport default connect(mapStateToProps, {\n  selectDashboard: tSelectDashboard,\n  clearEditDashboard: acClearEditDashboard\n})(Dashboard);","import React from 'react';\nimport { connect } from 'react-redux';\nimport { AlertBar, AlertStack } from '@dhis2/ui';\nimport PropTypes from 'prop-types';\nimport { sGetAlertMessage } from '../../reducers/alert';\nimport { acClearAlertMessage } from '../../actions/alert';\nexport const Alert = ({\n  message,\n  onClose\n}) => message ? <AlertStack>\n            <AlertBar onHidden={onClose} permanent>\n                {message}\n            </AlertBar>\n        </AlertStack> : null;\nAlert.propTypes = {\n  message: PropTypes.string,\n  onClose: PropTypes.func\n};\n\nconst mapStateToProps = state => ({\n  message: sGetAlertMessage(state)\n});\n\nexport default connect(mapStateToProps, {\n  onClose: acClearAlertMessage\n})(Alert);","// filter out CATEGORY that are not of type ATTRIBUTE\nconst filteredDimensions = dimensions => dimensions.filter(dim => dim.dimensionType !== 'CATEGORY' || dim.dimensionType === 'CATEGORY' && dim.dataDimensionType === 'ATTRIBUTE');\n\nexport default filteredDimensions;","import React, { useEffect } from 'react';\nimport { HashRouter as Router, Route, Switch } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { CssVariables } from '@dhis2/ui';\nimport { useD2 } from '@dhis2/app-runtime-adapter-d2';\nimport { apiFetchDimensions } from '@dhis2/analytics';\nimport { useDataEngine } from '@dhis2/app-runtime';\nimport Dashboard from './Dashboard/Dashboard';\nimport AlertBar from './AlertBar/AlertBar';\nimport { useSystemSettings } from './SystemSettingsProvider';\nimport { acReceivedUser } from '../actions/user';\nimport { tFetchDashboards } from '../actions/dashboards';\nimport { tSetControlBarRows } from '../actions/controlBar';\nimport { tSetShowDescription } from '../actions/selected';\nimport { acSetDimensions } from '../actions/dimensions';\nimport getFilteredDimensions from '../modules/getFilteredDimensions';\nimport { EDIT, VIEW, NEW, PRINT, PRINT_LAYOUT } from './Dashboard/dashboardModes';\nimport './App.css';\n\nconst App = props => {\n  const {\n    d2\n  } = useD2({});\n  const dataEngine = useDataEngine();\n  const {\n    settings\n  } = useSystemSettings();\n  useEffect(() => {\n    props.setCurrentUser(d2.currentUser);\n    props.fetchDashboards();\n    props.setControlBarRows();\n    props.setShowDescription();\n  }, []);\n  useEffect(() => {\n    const fetchDimensions = async () => {\n      try {\n        const dimensions = await apiFetchDimensions(dataEngine, settings.displayNameProperty);\n        props.setDimensions(getFilteredDimensions(dimensions));\n      } catch (e) {\n        console.error(e);\n      }\n    };\n\n    if (settings.displayNameProperty) {\n      fetchDimensions();\n    }\n  }, [settings]);\n  return <>\n            <CssVariables colors spacers />\n            <Router>\n                <Switch>\n                    <Route exact path=\"/\" render={props => <Dashboard {...props} mode={VIEW} />} />\n                    <Route exact path=\"/new\" render={props => <Dashboard {...props} mode={NEW} />} />\n                    <Route exact path=\"/:dashboardId\" render={props => <Dashboard {...props} mode={VIEW} />} />\n                    <Route exact path=\"/:dashboardId/edit\" render={props => <Dashboard {...props} mode={EDIT} />} />\n                    <Route exact path=\"/:dashboardId/printoipp\" render={props => <Dashboard {...props} mode={PRINT} />} />\n                    <Route exact path=\"/:dashboardId/printlayout\" render={props => <Dashboard {...props} mode={PRINT_LAYOUT} />} />\n                </Switch>\n            </Router>\n            <AlertBar />\n        </>;\n};\n\nApp.propTypes = {\n  fetchDashboards: PropTypes.func.isRequired,\n  setControlBarRows: PropTypes.func.isRequired,\n  setCurrentUser: PropTypes.func.isRequired,\n  setDimensions: PropTypes.func.isRequired,\n  setShowDescription: PropTypes.func.isRequired\n};\nconst mapDispatchToProps = {\n  fetchDashboards: tFetchDashboards,\n  setControlBarRows: tSetControlBarRows,\n  setCurrentUser: acReceivedUser,\n  setDimensions: acSetDimensions,\n  setShowDescription: tSetShowDescription\n};\nexport default connect(null, mapDispatchToProps)(App);","import { RECEIVED_USER } from '../reducers/user';\nexport const acReceivedUser = value => ({\n  type: RECEIVED_USER,\n  value\n});","import { SET_DIMENSIONS } from '../reducers/dimensions';\nexport const acSetDimensions = dimensions => ({\n  type: SET_DIMENSIONS,\n  value: dimensions\n});","/** @module reducers/selected */\nimport { validateReducer } from '../modules/util';\nexport const SET_STYLE = 'SET_STYLE';\nexport const DEFAULT_STATE_STYLE = 'LIST';\n/**\n * Reducer functions that computes and returns the new state based on the given action\n * @function\n * @param {Object} state The current state\n * @param {Object} action The action to be evaluated\n */\n\nconst style = (state = DEFAULT_STATE_STYLE, action) => {\n  switch (action.type) {\n    case SET_STYLE:\n      return validateReducer(action.value, DEFAULT_STATE_STYLE);\n\n    default:\n      return state;\n  }\n};\n\nexport default style;\n/**\n * Selectors that point to specific props in the state object\n * @function\n * @param {Object} state\n * @returns {Object}\n */\n\nexport const sGetStyleRoot = state => state.style;","import { combineReducers } from 'redux';\nimport dashboards from './dashboards';\nimport selected from './selected';\nimport dashboardsFilter from './dashboardsFilter';\nimport controlBar from './controlBar';\nimport visualizations from './visualizations';\nimport editDashboard from './editDashboard';\nimport printDashboard from './printDashboard';\nimport messages from './messages';\nimport user from './user';\nimport alert from './alert';\nimport itemFilters from './itemFilters';\nimport style from './style';\nimport dimensions from './dimensions';\nimport activeModalDimension from './activeModalDimension';\nexport default combineReducers({\n  dashboards,\n  selected,\n  dashboardsFilter,\n  controlBar,\n  visualizations,\n  messages,\n  user,\n  editDashboard,\n  printDashboard,\n  itemFilters,\n  style,\n  alert,\n  dimensions,\n  activeModalDimension\n});","import { createStore, applyMiddleware, compose } from 'redux';\nimport { createLogger } from 'redux-logger';\nimport thunk from 'redux-thunk';\nimport reducer from './reducers';\n\nconst configureStore = dataEngine => {\n  const middleware = [thunk.withExtraArgument(dataEngine)]; // Enable Redux devtools if extension is installed instead of redux-logger\n\n  const composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\n\n  if (!window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ && process.env.NODE_ENV !== 'production') {\n    middleware.push(createLogger());\n  }\n\n  return createStore(reducer, composeEnhancers(applyMiddleware(...middleware)));\n};\n\nexport default configureStore;","//------------------------------------------------------------------------------\n// <auto-generated>\n// This code was generated by d2-i18n-generate.\n//\n// Changes to this file may cause incorrect behavior and will be lost if\n// the code is regenerated.\n// </auto-generated>\n//------------------------------------------------------------------------------\nimport i18n from '@dhis2/d2-i18n';\nimport arTranslations from './ar/translations.json';\nimport ar_IQTranslations from './ar_IQ/translations.json';\nimport ckbTranslations from './ckb/translations.json';\nimport csTranslations from './cs/translations.json';\nimport daTranslations from './da/translations.json';\nimport enTranslations from './en/translations.json';\nimport esTranslations from './es/translations.json';\nimport frTranslations from './fr/translations.json';\nimport idTranslations from './id/translations.json';\nimport kmTranslations from './km/translations.json';\nimport loTranslations from './lo/translations.json';\nimport myTranslations from './my/translations.json';\nimport nbTranslations from './nb/translations.json';\nimport prsTranslations from './prs/translations.json';\nimport psTranslations from './ps/translations.json';\nimport ptTranslations from './pt/translations.json';\nimport pt_BRTranslations from './pt_BR/translations.json';\nimport ruTranslations from './ru/translations.json';\nimport svTranslations from './sv/translations.json';\nimport tetTranslations from './tet/translations.json';\nimport tgTranslations from './tg/translations.json';\nimport ukTranslations from './uk/translations.json';\nimport urTranslations from './ur/translations.json';\nimport uzTranslations from './uz/translations.json';\nimport uz_CyrlTranslations from './uz_Cyrl/translations.json';\nimport uz_LatnTranslations from './uz_Latn/translations.json';\nimport viTranslations from './vi/translations.json';\nimport zhTranslations from './zh/translations.json';\nimport zh_CNTranslations from './zh_CN/translations.json';\nconst namespace = 'default';\ni18n.addResources('ar', namespace, arTranslations);\ni18n.addResources('ar_IQ', namespace, ar_IQTranslations);\ni18n.addResources('ckb', namespace, ckbTranslations);\ni18n.addResources('cs', namespace, csTranslations);\ni18n.addResources('da', namespace, daTranslations);\ni18n.addResources('en', namespace, enTranslations);\ni18n.addResources('es', namespace, esTranslations);\ni18n.addResources('fr', namespace, frTranslations);\ni18n.addResources('id', namespace, idTranslations);\ni18n.addResources('km', namespace, kmTranslations);\ni18n.addResources('lo', namespace, loTranslations);\ni18n.addResources('my', namespace, myTranslations);\ni18n.addResources('nb', namespace, nbTranslations);\ni18n.addResources('prs', namespace, prsTranslations);\ni18n.addResources('ps', namespace, psTranslations);\ni18n.addResources('pt', namespace, ptTranslations);\ni18n.addResources('pt_BR', namespace, pt_BRTranslations);\ni18n.addResources('ru', namespace, ruTranslations);\ni18n.addResources('sv', namespace, svTranslations);\ni18n.addResources('tet', namespace, tetTranslations);\ni18n.addResources('tg', namespace, tgTranslations);\ni18n.addResources('uk', namespace, ukTranslations);\ni18n.addResources('ur', namespace, urTranslations);\ni18n.addResources('uz', namespace, uzTranslations);\ni18n.addResources('uz_Cyrl', namespace, uz_CyrlTranslations);\ni18n.addResources('uz_Latn', namespace, uz_LatnTranslations);\ni18n.addResources('vi', namespace, viTranslations);\ni18n.addResources('zh', namespace, zhTranslations);\ni18n.addResources('zh_CN', namespace, zh_CNTranslations);\nexport default i18n;","import React from 'react';\nimport { MuiThemeProvider, createMuiTheme } from '@material-ui/core/styles';\nimport dhis2theme from '@dhis2/d2-ui-core/theme/mui3.theme';\nimport { Provider as ReduxProvider } from 'react-redux';\nimport { D2Shim } from '@dhis2/app-runtime-adapter-d2';\nimport { useDataEngine } from '@dhis2/app-runtime';\nimport WindowDimensionsProvider from './components/WindowDimensionsProvider';\nimport SystemSettingsProvider from './components/SystemSettingsProvider';\nimport App from './components/App';\nimport configureStore from './configureStore';\nimport './AppWrapper.css';\nimport './locales';\n\nconst muiTheme = () => createMuiTheme(dhis2theme);\n\nconst d2Config = {\n  schemas: ['chart', 'map', 'report', 'reportTable', 'eventChart', 'eventReport', 'dashboard', 'organisationUnit', 'userGroup']\n}; // TODO: ER and EV plugins require the auth header in development mode.\n// Remove this when these plugins are rewritten\n\nconst authorization = process.env.REACT_APP_DHIS2_AUTHORIZATION || null;\n\nif (authorization) {\n  d2Config.headers = {\n    Authorization: authorization\n  };\n}\n\nconst AppWrapper = () => {\n  const dataEngine = useDataEngine();\n  return <ReduxProvider store={configureStore(dataEngine)}>\n            <MuiThemeProvider theme={muiTheme()}>\n                <D2Shim d2Config={d2Config} i18nRoot=\"./i18n\">\n                    {({\n          d2\n        }) => {\n          if (!d2) {\n            // TODO: Handle errors in d2 initialization\n            return null;\n          }\n\n          return <SystemSettingsProvider>\n                                <WindowDimensionsProvider>\n                                    <App />\n                                </WindowDimensionsProvider>\n                            </SystemSettingsProvider>;\n        }}\n                </D2Shim>\n            </MuiThemeProvider>\n        </ReduxProvider>;\n};\n\nexport default AppWrapper;","import isObject from 'lodash/isObject';\nimport { itemTypeMap } from './itemTypes';\nexport const getVisualizationFromItem = item => {\n  if (!isObject(item)) {\n    return null;\n  }\n\n  const propName = itemTypeMap[item.type]?.propName;\n  return item[propName] || item.reportTable || item.chart || item.map || item.eventReport || item.eventChart || {};\n};\nexport const getVisualizationId = item => getVisualizationFromItem(item).id;\nexport const getVisualizationName = item => getVisualizationFromItem(item).name;","import { REPORT_TABLE, CHART, MAP, EVENT_REPORT, EVENT_CHART, itemTypeMap } from '../../../../modules/itemTypes';\nimport { getVisualizationId } from '../../../../modules/item';\nimport getGridItemDomId from '../../../../modules/getGridItemDomId'; //external plugins\n\nconst itemTypeToExternalPlugin = {\n  [MAP]: 'mapPlugin',\n  [EVENT_REPORT]: 'eventReportPlugin',\n  [EVENT_CHART]: 'eventChartPlugin'\n};\n\nconst hasIntegratedPlugin = type => [CHART, REPORT_TABLE].includes(type);\n\nconst getPlugin = type => {\n  if (hasIntegratedPlugin(type)) {\n    return true;\n  }\n\n  const pluginName = itemTypeToExternalPlugin[type];\n  return global[pluginName];\n};\n\nexport const pluginIsAvailable = type => !!getPlugin(type);\nexport const loadPlugin = (plugin, config, credentials) => {\n  if (!(plugin && plugin.load)) {\n    return;\n  }\n\n  plugin.url = credentials.baseUrl;\n  plugin.loadingIndicator = true;\n  plugin.dashboard = true;\n\n  if (credentials.auth) {\n    plugin.auth = credentials.auth;\n  }\n\n  plugin.load(config);\n};\nexport const getLink = (item, baseUrl) => {\n  const appUrl = itemTypeMap[item.type].appUrl(getVisualizationId(item));\n  return `${baseUrl}/${appUrl}`;\n};\nexport const load = async (item, visualization, {\n  credentials,\n  activeType,\n  options = {}\n}) => {\n  const config = { ...visualization,\n    ...options,\n    el: getGridItemDomId(item.id)\n  };\n  const type = activeType || item.type;\n  const plugin = getPlugin(type);\n  loadPlugin(plugin, config, credentials);\n};\nexport const resize = (item, isFullscreen) => {\n  const plugin = getPlugin(item.type);\n\n  if (plugin && plugin.resize) {\n    plugin.resize(getGridItemDomId(item.id), isFullscreen);\n  }\n};\nexport const unmount = (item, activeType) => {\n  const plugin = getPlugin(activeType);\n\n  if (plugin && plugin.unmount) {\n    plugin.unmount(getGridItemDomId(item.id));\n  }\n};","const getGridItemDomId = id => `item-${id}`;\n\nexport default getGridItemDomId;","// extracted by mini-css-extract-plugin\nmodule.exports = {\"itemHeaderWrap\":\"ItemHeader_itemHeaderWrap__JcBP7\",\"itemTitle\":\"ItemHeader_itemTitle__34rHa\",\"itemActionsWrap\":\"ItemHeader_itemActionsWrap__Gx3D9\"};"],"sourceRoot":""}
{"version":3,"sources":["D2App/components/ControlBar/styles/ControlBar.module.css","D2App/components/ControlBar/styles/DashboardItemChip.module.css","D2App/components/ControlBar/styles/ClearButton.module.css","D2App/components/ControlBar/styles/ShowMoreButton.module.css","D2App/components/ItemSelector/styles/ContentMenuItem.module.css","D2App/components/ItemSelector/styles/CategorizedMenuGroup.module.css","D2App/components/TitleBar/styles/EditTitleBar.module.css","D2App/components/TitleBar/styles/ViewTitleBar.module.css","D2App/components/Item/VisualizationItem/styles/FatalErrorBoundary.module.css","D2App/components/Item/ItemHeader/styles/DeleteItemButton.module.css","D2App/components/Item/VisualizationItem/styles/LoadingMask.module.css","D2App/components/Item/VisualizationItem/styles/Item.module.css","D2App/components/Item/ListItem/Item.module.css","D2App/components/Item/PrintTitlePageItem/styles/Item.module.css","D2App/components/FilterBar/styles/FilterBar.module.css","D2App/components/ControlBar/styles/ConfirmDeleteDialog.module.css","D2App/components/Dashboard/styles/PrintInfo.module.css","D2App/components/Dashboard/styles/PrintActionsBar.module.css","D2App/components/Dashboard/styles/PrintLayoutDashboard.module.css","D2App/components/Dashboard/styles/PrintDashboard.module.css","D2App/components/Dashboard/dashboardModes.js","D2App/reducers/user.js","D2App/modules/uiBackendItemConverter.js","D2App/reducers/dashboards.js","D2App/reducers/selected.js","D2App/reducers/dimensions.js","D2App/reducers/itemFilters.js","D2App/actions/itemFilters.js","D2App/reducers/messages.js","D2App/api/messages.js","D2App/components/Item/MessagesItem/actions.js","D2App/reducers/snackbar.js","D2App/actions/snackbar.js","D2App/reducers/visualizations.js","D2App/actions/visualizations.js","D2App/api/index.js","D2App/api/dashboards.js","D2App/api/userDataStore.js","D2App/components/SnackbarMessage/SnackbarMessage.js","D2App/actions/selected.js","D2App/api/localStorage.js","D2App/api/description.js","D2App/actions/dashboards.js","D2App/reducers/controlBar.js","D2App/actions/controlBar.js","D2App/api/controlBar.js","D2App/reducers/settings.js","D2App/actions/dimensions.js","D2App/components/ControlBar/ControlBar.js","D2App/icons/Star.js","D2App/components/ControlBar/DashboardItemChip.js","D2App/api/dataStatistics.js","D2App/icons/AddCircle.js","D2App/icons/Clear.js","D2App/components/ControlBar/ClearButton.js","D2App/reducers/dashboardsFilter.js","D2App/components/ControlBar/Filter.js","D2App/components/ControlBar/ShowMoreButton.js","D2App/components/ControlBar/controlBarDimensions.js","D2App/components/ControlBar/DashboardsBar.js","D2App/actions/dashboardsFilter.js","D2App/components/Dashboard/DashboardVerticalOffset.js","D2App/widgets/NoContentMessage.js","D2App/components/ItemSelector/HeaderMenuItem.js","D2App/icons/Launch.js","D2App/components/ItemSelector/ContentMenuItem.js","D2App/reducers/editDashboard.js","D2App/api/editDashboard.js","D2App/actions/editDashboard.js","D2App/components/ItemSelector/selectableItems.js","D2App/components/ItemSelector/CategorizedMenuGroup.js","D2App/components/ItemSelector/actions.js","D2App/components/ItemSelector/SinglesMenuGroup.js","D2App/components/ItemSelector/ItemSelector.js","D2App/components/TitleBar/EditTitleBar.js","D2App/components/Item/VisualizationItem/assets/icons.js","D2App/components/ItemFilter/FilterDialog.js","D2App/reducers/activeModalDimension.js","D2App/actions/activeModalDimension.js","D2App/components/ItemFilter/FilterSelector.js","D2App/components/TitleBar/ViewTitleBar.js","D2App/components/TitleBar/TitleBar.js","D2App/components/Item/VisualizationItem/DefaultPlugin.js","D2App/components/Item/VisualizationItem/FatalErrorBoundary.js","D2App/components/Item/ItemHeader/ViewItemActions.js","D2App/components/Item/ItemHeader/DeleteItemButton.js","D2App/components/Item/ItemHeader/EditItemActions.js","D2App/components/Item/ItemHeader/ItemHeader.js","D2App/components/Item/VisualizationItem/ItemHeaderButtons.js","D2App/components/Item/VisualizationItem/ItemFooter.js","D2App/components/Item/VisualizationItem/LoadingMask.js","D2App/modules/memoizeOne.js","D2App/components/Item/VisualizationItem/Item.js","D2App/widgets/Line.js","D2App/components/Item/MessagesItem/Item.js","D2App/components/Item/NotSupportedItem/Item.js","D2App/icons/Description.js","D2App/icons/Delete.js","D2App/components/Item/ListItem/Item.js","D2App/components/Item/ListItem/actions.js","D2App/reducers/printDashboard.js","D2App/components/Item/TextItem/Item.js","D2App/components/Item/AppItem/Item.js","D2App/components/Item/SpacerItem/Item.js","D2App/components/Item/PageBreakItem/Item.js","D2App/components/Item/PrintTitlePageItem/Item.js","D2App/components/Item/Item.js","D2App/components/Item/ProgressiveLoadingContainer.js","D2App/components/ItemGrid/ItemGrid.js","D2App/components/FilterBar/FilterBadge.js","D2App/components/FilterBar/FilterBar.js","D2App/actions/printDashboard.js","D2App/components/Dashboard/ViewDashboard.js","D2App/components/ControlBar/ConfirmDeleteDialog.js","D2App/components/ControlBar/EditBar.js","D2App/components/Dashboard/PrintInfo.js","D2App/modules/printUtils.js","D2App/icons/LessHorizontal.js","D2App/components/Dashboard/PrintActionsBar.js","D2App/components/ItemGrid/PrintLayoutItemGrid.js","D2App/components/Dashboard/PrintLayoutDashboard.js","D2App/components/Dashboard/EditDashboard.js","D2App/components/Dashboard/NewDashboard.js","D2App/components/ItemGrid/PrintItemGrid.js","D2App/components/Dashboard/PrintDashboard.js","D2App/components/Dashboard/Dashboard.js","D2App/components/App.js","D2App/actions/user.js","D2App/reducers/style.js","D2App/reducers/index.js","D2App/configureStore.js","D2App/locales/index.js","D2App/AppWrapper.js","D2App/modules/util.js","D2App/modules/itemTypes.js","D2App/components/ItemGrid/gridUtil.js","D2App/components/Item/VisualizationItem/plugin.js","D2App/components/Item/ItemHeader/styles/ItemHeader.module.css","D2App/api/metadata.js","D2App/components/ControlBar/styles/DashboardsBar.module.css"],"names":["module","exports","EDIT","NEW","PRINT","PRINT_LAYOUT","isEditMode","mode","includes","isPrintMode","isViewMode","DEFAULT_STATE_USER","id","username","uiLocale","isSuperuser","sGetUserUsername","state","user","spacerContent","isTextType","item","type","TEXT","text","convertUiItemsToBackend","items","map","SPACER","isUiSpacerType","convertBackendItemsToUi","isBackendSpacerType","gridProperties","getGridItemProperties","DEFAULT_STATE_DASHBOARDS","byId","updateDashboardProp","dashboardId","prop","value","sGetDashboardsRoot","dashboards","sGetDashboardById","orObject","sDashboardsIsFetching","sGetAllDashboards","sGetDashboardItems","sGetStarredDashboards","Object","values","filter","dashboard","starred","sGetUnstarredDashboards","getCustomDashboards","data","arrayFrom","d","name","displayName","description","displayDescription","favorite","owner","created","split","join","substr","lastUpdated","access","numberOfItems","orArray","dashboardItems","length","combineReducers","action","validateReducer","isLoading","showDescription","sGetSelectedRoot","selected","sGetSelectedId","sGetSelectedIsLoading","sGetSelectedShowDescription","DEFAULT_DIMENSIONS","getDimensionById","DIMENSION_ID_PERIOD","DIMENSION_ID_ORGUNIT","sGetDimensions","dimensions","DEFAULT_STATE_ITEM_FILTERS","sGetItemFiltersRoot","itemFilters","sGetFiltersKeys","keys","sGetNamedItemFilters","createSelector","filters","reduce","arr","push","find","dimension","acRemoveItemFilter","sGetMessagesRoot","messages","tGetMessages","async","url","getInstance","then","d2","Api","getApi","get","catch","error","console","log","getMessages","messageConversations","dispatch","err","DEFAULT_STATE_SNACKBAR","message","duration","open","acCloseSnackbar","DEFAULT_STATE_VISUALIZATIONS","isEmpty","p","undefined","sGetVisualization","visualizations","sGetVisualizationsRoot","acAddVisualization","onError","getDashboardItemsFields","withFavorite","arrayClean","getListItemFields","getFavoritesFields","withDimensions","getDashboardFields","withItems","getIdNameFields","rename","apiFetchDashboard","models","fields","hasNamespace","currentUser","dataStore","has","getNamespace","create","apiPostUserDataStoreValue","key","set","apiGetUserDataStoreValue","defaultValue","namespace","k","loadingDashboardMsg","SnackbarMessageContent","style","fontWeight","connect","snackbar","sGetSnackbar","snackbarOpen","snackbarMessage","snackbarDuration","onCloseSnackbar","props","zIndex","autoHideDuration","onClose","acSetSelectedId","acSetSelectedIsLoading","acSetSelectedShowDescription","tSetSelectedDashboardById","getState","snackbarTimeout","setTimeout","dashboardName","onSuccess","acAppendDashboards","customDashboard","acSetDashboardItems","withShape","localStorage","setItem","forEach","REPORT_TABLE","CHART","MAP","EVENT_REPORT","EVENT_CHART","extractFavorite","MESSAGES","clearTimeout","tSetShowDescription","apiGetShowDescription","tUpdateShowDescription","apiPostShowDescription","arrayToIdMap","tFetchDashboards","collection","list","paging","toArray","tStarDashboard","isStarred","post","delete","apiStarDashboard","acSetDashboardStarred","tDeleteDashboard","apiDeleteDashboard","Promise","resolve","userRows","sGetControlBarUserRows","controlBar","sGetControlBarRoot","acSetControlBarUserRows","rows","tSetControlBarRows","controlBarRows","apiGetControlBarRows","DEFAULT_SETTINGS","keyDateFormat","keyAnalysisRelativePeriod","keyAnalysisDigitGroupSeparator","displayNameProperty","rootOrganisationUnit","sGetSettings","settings","sGetSettingsDisplayNameProperty","tSetDimensions","displayNameProp","apiFetchDimensions","acSetDimensions","dim","dimensionType","dataDimensionType","ControlBar","React","Component","constructor","super","onStartDrag","this","setState","dragging","window","addEventListener","onDrag","onEndDrag","event","preventDefault","stopPropagation","newHeight","clientY","onChangeHeight","height","requestAnimationFrame","removeEventListener","renderDragHandle","className","classes","draghandle","onMouseDown","render","Math","max","rootStyle","assign","backgroundColor","editMode","colors","yellow050","white","paddingBottom","transition","root","content","children","defaultProps","StarIcon","xmlns","viewBox","fill","DashboardItemChip","label","chipProps","selectedState","unselected","icon","Star","link","to","onClick","debounce","eventType","apiPostDataStatistics","AddCircleIcon","width","teal600","ClearIcon","grey800","ClearButton","onClear","button","Clear","color","ownerData","DEFAULT_STATE_DASHBOARDS_FILTER_OWNER","order","sGetDashboardsFilterRoot","dashboardsFilter","sGetFilterName","styles","filterField","fontSize","top","searchIcon","grey700","Filter","setFilterValue","onChangeName","target","handleKeyUp","keyCode","onKeypressEnter","componentWillReceiveProps","nextProps","startAdornment","position","endAdornment","placeholder","i18n","t","onChange","onKeyUp","Function","prototype","withStyles","ShowMoreButton","isMaxHeight","disabled","textAlign","showMore","getRowsHeight","getControlBarHeight","FIRST_ROW_PADDING_HEIGHT","DashboardsBar","setInitialDashboardState","adjustedHeight","newRows","floor","newRowCount","min","apiPostControlBarRows","onToggleMaxHeight","onSelectDashboard","history","componentDidMount","selectedId","onChangeFilterName","rowCount","controlBarHeight","contentWrapperStyle","padding","overflowY","leftControls","display","textDecoration","marginRight","AddCircle","mapDispatchToProps","withRouter","stateProps","dispatchProps","ownProps","displayDashboards","arraySort","toLowerCase","marginTop","NoContentMessage","grey600","HeaderMenuItem","title","dense","LaunchIcon","LaunchLink","e","launchLink","rel","href","Launch","InsertButton","buttonInsert","ContentMenuItem","onInsert","visType","ItemIcon","getItemIcon","renderedItemIcon","VISUALIZATION","visTypeIcons","menuItem","DEFAULT_STATE_EDIT_DASHBOARD","NEW_DASHBOARD_STATE","printPreviewView","sGetEditDashboardRoot","editDashboard","sGetIsEditing","sGetIsPrintPreviewView","sGetEditDashboardItems","saveDashboard","w","h","save","msg","response","uid","acClearEditDashboard","acAddDashboardItem","itemPropName","itemTypeMap","propName","generateUid","gridItemProperties","shape","PAGEBREAK","yPos","getPageBreakItemShape","isStatic","PRINT_TITLE_PAGE","getPrintTitlePageItemShape","NEW_ITEM_SHAPE","acUpdateDashboardItem","acRemoveDashboardItem","tSaveDashboard","dashboardToSave","postDashboard","singleItems","header","categorizedItems","USERS","REPORTS","RESOURCES","APP","listItemTypes","CategorizedMenuGroup","addItem","tAddListItemContent","newItem","toggleSeeMore","seeMore","onChangeItemsLimit","hasMore","itemUrl","getItemUrl","context","showMoreButton","margin","contextTypes","PropTypes","object","isRequired","listItemType","dashboardItemIndex","findIndex","dashboardItem","category","addToDashboard","ItemSearchField","onFocus","ItemSelector","closeList","openList","_","fetchItems","anchorEl","currentTarget","setFilter","getCategorizedMenuGroups","itemType","endPointName","itemCount","getDefaultItemCount","allItems","maxOptions","slice","pluralTitle","getSinglesMenuGroups","getMenuGroups","concat","add","Set","queryString","anchorOrigin","horizontal","vertical","transformOrigin","PaperProps","disableAutoFocus","disableEnforceFocus","disableRestoreFocus","maxWidth","EditTitleBar","onChangeTitle","onChangeDescription","section","titleDescription","itemSelector","selectedDashboard","ThreeDots","SpeechBubble","fillRule","transform","Warning","FilterDialog","onConfirm","renderDialogContent","selectedItems","dialogId","commonProps","onSelect","onDeselect","onReorder","selectedPeriods","ouItems","dimensionId","large","secondary","primary","DEFAULT_STATE_ACTIVE_MODAL_DIMENSION","sGetActiveModalDimension","activeModalDimension","acSetActiveModalDimension","initiallySelectedItems","selectedDimensions","clearActiveModalDimension","setActiveModalDimension","addItemFilter","removeItemFilter","showPopover","setShowPopover","useState","setFilters","ref","useRef","closePanel","onCloseDialog","onClickOutside","reference","arrow","placement","onDimensionClick","selectedIds","itemIdsToRemove","newList","itemIds","oldList","reorderedList","filterItems","ViewTitleBar","moreOptionsIsOpen","setMoreOptionsIsOpen","sharingDialogIsOpen","setSharingDialogIsOpen","redirectUrl","setRedirectUrl","onToggleStarredDashboard","onShowHideDescription","toggleSharingDialog","toggleMoreOptions","titleStyle","cursor","userSelect","StarBorder","showHideDescriptionLabel","toggleStarredDashboardLabel","buttonRef","createRef","titleBar","actions","titleBarIcon","strip","update","editLink","manage","marginLeft","paddingTop","onRequestClose","black","minWidth","TitleBar","edit","DefaultPlugin","pluginCredentials","shouldPluginReload","prevProps","reloadAllowed","filtersChanged","vis","visualization","prevVis","visChanged","activeType","reloadPlugin","pluginManager","currentVis","useActiveType","credentials","getActiveType","baseUrl","getBaseUrl","auth","defaultHeaders","Authorization","options","componentDidUpdate","getGridItemDomId","textDiv","FatalErrorBoundary","errorFound","componentDidCatch","info","container","ViewItemActions","actionButtons","itemActionsWrap","DeleteItemButton","deleteItemButton","red500","itemId","itemActionsMap","EditItemActions","ItemHeader","forwardRef","dashboardMode","rest","Actions","itemHeaderWrap","itemTitle","iconFill","ItemHeaderButtons","setAnchorEl","onSelectActiveType","isTrackerType","isTrackerDomainType","onViewTable","handleClose","onViewChart","onViewMap","canViewAs","isSingleValue","isYearOverYear","VIS_TYPE_GAUGE","VIS_TYPE_PIE","interpretationMenuLabel","activeFooter","ViewAsMenuItems","hasMapView","pluginIsAvailable","small","Boolean","appName","getAppName","getLink","onToggleFooter","scrollContainer","line","border","grey100","ItemFooter","objectId","getId","LoadingMask","center","memoizeOne","fn","lastArgs","lastValue","args","every","arg","i","Item","showFooter","configLoaded","pluginIsLoaded","applyFilters","visRows","obj","visColumns","columns","visFilters","dimensionFound","dimensionObjects","getUniqueKey","uniqueId","getPluginComponent","memoizedGetVisualizationConfig","calculatedHeight","originalHeight","headerRef","current","clientHeight","ITEM_CONTENT_PADDING_BOTTOM","memoizedGetContentStyle","contentRef","offsetHeight","memoizedApplyFilters","onLoadingComplete","forDashboard","mapViews","layer","hideTitle","onToggleItemExpanded","getContentStyle","measuredHeight","preferMeasured","onVisualizationLoaded","prevState","acSetActiveVisualizationType","grey200","Line","messageTypes","VALIDATION_RESULT","TICKET","SYSTEM","listStyleType","paddingLeft","seeAll","marginBottom","sender","lineHeight","snippet","maxHeight","overflow","MessagesItem","getMessageHref","msgIdentifier","messageType","getMessageSender","latestMsg","getMessageItems","modeClass","readClass","read","msgDate","document","location","messageCount","formatDate","userSettings","string","MessagesContainer","NotSupportedItem","justifyContent","alignItems","align","DescriptionIcon","grey500","DeleteIcon","getItemTitle","ListItem","tRemoveListItemContent","contentItems","index","array","el","getContentItems","contentItem","Description","itemicon","deleteButton","deletebutton","deleteicon","grey900","newContent","DEFAULT_STATE_PRINT_DASHBOARD","DEFAULT_DASHBOARD_ITEMS","NEW_PRINT_DASHBOARD_STATE","sGetPrintDashboardRoot","printDashboard","sGetIsPrinting","sGetPrintDashboardItems","whiteSpace","textField","fontStretch","onChangeText","updatedItem","onEdit","multiline","fullWidth","textDivStyle","viewItem","getIframeSrc","appDetails","iframeSrc","launchUrl","ouIds","ouPath","AppItem","appKey","system","installedApps","app","src","SpacerItem","PageBreakItem","PrintTitlePageItem","titlePage","filterTitle","listItems","filterListItem","val","filterList","getItemFilterList","GridItem","VisualizationItem","TextItem","getGridItem","ProgressiveLoadingContainer","shouldLoad","containerRef","shouldLoadHandler","checkShouldLoad","bufferPx","bufferFactor","innerHeight","rect","getBoundingClientRect","bottom","removeHandler","registerHandler","debounceMs","getElementsByClassName","componentWillUnmount","eventProps","pick","ItemGrid","expandedItems","clickedId","isExpanded","onLayoutChange","newLayout","acUpdateDashboardLayout","onResizeStop","layout","oldItem","onItemResize","isVisualizationType","pluginResize","adjustHeightForExpanded","expandedItem","getItemComponent","itemClassNames","getItemComponents","translucent","MARGIN","cols","getGridColumns","rowHeight","GRID_ROW_HEIGHT","innerWidth","compactType","GRID_COMPACT_TYPE","isDraggable","isResizable","draggableCancel","validItems","hasShape","badgeContainer","borderRadius","badge","badgeRemove","FilterBadge","onRemove","count","FilterBar","onBadgeRemove","onBadgeClick","bar","removeItemFIlter","acSetPrintDashboard","acClearPrintDashboard","acAddPrintDashboardItem","dashboardIsEditing","dashboardIsPrinting","clearEditDashboard","clearPrintDashboard","useEffect","ConfirmDeleteDialog","onDeleteConfirmed","onContinueEditing","destructive","buttonBarStyle","EditBar","translationDialogIsOpen","dashboardModel","confirmDeleteDialogOpen","onConfirmDelete","onSave","newId","onPrintPreview","isPrintPreviewView","clearPrintPreview","showPrintPreview","onDiscard","onDiscardChanges","onDelete","onTranslationsSaved","translations","dbLocale","translation","locale","property","onTranslate","fetchDashboardModel","toggleTranslationDialog","confirmDeleteDialog","deleteAccess","translationDialog","objectToTranslate","fieldsToTranslate","onTranslationSaved","onTranslationError","renderActionButtons","printPreviewText","updateAccess","discardBtnText","rightControls","sGetIsNewDashboard","acSetDashboardDisplayName","PrintInfo","isLayout","infoPartOne","infoPartTwo","infoHeader","infoWrapper","divider","LessHorizontalIcon","PrintActionsBar","inner","LessHorizontal","print","PrintLayoutItemGrid","updateDashboardLayout","hideExtraPageBreaks","sortedElements","elements","types","elementsWithBoundingRect","Array","from","classList","indexOf","y","parseInt","bottomY","sortBy","getDomGridItemsSortedByYPos","querySelectorAll","pageBreakBottom","lastItemBottom","foundNonPageBreak","thisItemBottom","gridElement","querySelector","PrintLayoutDashboard","initialized","initPrintLayoutDashboard","setPrintDashboard","updateDashboardItem","addDashboardItem","yPosList","addPageBreaks","fromEdit","wrapper","pageOuter","EditDashboard","initEditDashboard","setEditDashboard","renderGrid","NewDashboard","setNewDashboard","PrintItemGrid","PrintDashboard","initPrintDashboard","sortedItems","spacerCount","removeDashboardItem","dashboardMap","Dashboard","setDashboard","dashboardsLoaded","match","params","selectDashboard","setHeaderbarVisibility","scrollToTop","getElementsByTagName","remove","scrollTo","dashboardsIsEmpty","dashboardToSelect","preferredId","getItem","dash","sGetDashboardsSortedByStarred","App","setCurrentUser","fetchDashboards","setControlBarRows","setShowDescription","setDimensions","getChildContext","spacers","exact","path","childContextTypes","objectClean","conversations","$merge","d2Object","keyUiLocale","authorities","newState","$splice","$unshift","idToRemove","stateItems","layoutHasChanged","newStateItems","x","stateItem","si","configureStore","middleware","thunk","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","createStore","reducer","applyMiddleware","addResources","arTranslations","ar_IQTranslations","daTranslations","enTranslations","esTranslations","frTranslations","idTranslations","kmTranslations","loTranslations","myTranslations","nbTranslations","prsTranslations","psTranslations","ptTranslations","pt_BRTranslations","ruTranslations","svTranslations","tetTranslations","tgTranslations","ukTranslations","urTranslations","viTranslations","zhTranslations","zh_CNTranslations","appConfig","schemas","authorization","process","REACT_APP_DHIS2_AUTHORIZATION","headers","AppWrapper","store","theme","createMuiTheme","dhis2theme","i18nRoot","param","isArray","isObject","global","Intl","DateTimeFormat","year","month","day","format","Date","replace","api","idx","getWithoutId","domainType","defaultItemCount","appUrl","getTime","getEndPointName","TableIcon","ChartIcon","MapIcon","ExtensionIcon","PersonIcon","FontDownloadIcon","EmailIcon","CropFreeIcon","NotInterestedIcon","isNonNegativeInteger","Number","isInteger","minH","GRID_COLUMNS","static","itemWithShape","Error","col","row","itemWidth","itemHeight","getShape","round","getOriginalHeight","isFunction","setViewportSize","clientWidth","itemTypeToExternalPlugin","getPlugin","hasIntegratedPlugin","reportTable","chart","eventReport","eventChart","getName","load","config","plugin","loadingIndicator","loadPlugin","fetch","apiFetchFavorite","getMapFields","resize","unmount","getVisualizationConfig","originalType","extractedMapView","mv","VIS_TYPE_COLUMN","VIS_TYPE_PIVOT_TABLE","getDimensionFields","getAxesFields","getFavoriteFields","withOptions"],"mappings":"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","file":"static/js/app.76568be2.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"ControlBar_root__iikeX\",\"content\":\"ControlBar_content__26Z33\",\"draghandle\":\"ControlBar_draghandle__27zum\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"link\":\"DashboardItemChip_link__21drZ\",\"icon\":\"DashboardItemChip_icon__2hcIR\",\"selected\":\"DashboardItemChip_selected__r00uP\",\"unselected\":\"DashboardItemChip_unselected__2H9l2\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"ClearButton_button__33ZbK\",\"icon\":\"ClearButton_icon__vTJm3\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"showMore\":\"ShowMoreButton_showMore__3S3He\",\"disabled\":\"ShowMoreButton_disabled__2FQNA\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"menuItem\":\"ContentMenuItem_menuItem__vbKn3\",\"launchLink\":\"ContentMenuItem_launchLink__2Nql9\",\"label\":\"ContentMenuItem_label__ANfH1\",\"buttonInsert\":\"ContentMenuItem_buttonInsert__1joHg\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"showMoreButton\":\"CategorizedMenuGroup_showMoreButton__2RbRp\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"section\":\"EditTitleBar_section__LIaIC\",\"titleDescription\":\"EditTitleBar_titleDescription__1YsU6\",\"title\":\"EditTitleBar_title__3mUbt\",\"description\":\"EditTitleBar_description__24U5X\",\"itemSelector\":\"EditTitleBar_itemSelector__1cFEp\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"actions\":\"ViewTitleBar_actions__2UTRz\",\"editLink\":\"ViewTitleBar_editLink__d_HzW\",\"titleBar\":\"ViewTitleBar_titleBar__eiwJS\",\"titleBarIcon\":\"ViewTitleBar_titleBarIcon__2cBxv\",\"strip\":\"ViewTitleBar_strip__3xR4U\",\"backdrop\":\"ViewTitleBar_backdrop__2Cpm8\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"FatalErrorBoundary_container__3SViR\",\"icon\":\"FatalErrorBoundary_icon__2UbeP\",\"message\":\"FatalErrorBoundary_message__3FzrY\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"deleteItemButton\":\"DeleteItemButton_deleteItemButton__3TJm9\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"center\":\"LoadingMask_center__2SFwS\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"textDiv\":\"Item_textDiv__1U7zV\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"Item_list__1_nkQ\",\"item\":\"Item_item__3-6QE\",\"itemicon\":\"Item_itemicon__QlouX\",\"link\":\"Item_link___3c_q\",\"deleteicon\":\"Item_deleteicon__3usrl\",\"deletebutton\":\"Item_deletebutton__1DpBW\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"titlePage\":\"Item_titlePage__18CNQ\",\"name\":\"Item_name__3nuTV\",\"description\":\"Item_description__1gFQd\",\"filterTitle\":\"Item_filterTitle__2p7TQ\",\"filterList\":\"Item_filterList__qc_G3\",\"filterListItem\":\"Item_filterListItem__sPbBY\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"bar\":\"FilterBar_bar__1Ma3p\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"content\":\"ConfirmDeleteDialog_content__EqswE\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"infoWrapper\":\"PrintInfo_infoWrapper__3m2lt\",\"infoHeader\":\"PrintInfo_infoHeader__KyW8I\",\"info\":\"PrintInfo_info__13oXZ\",\"divider\":\"PrintInfo_divider__3wzx9\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"PrintActionsBar_container__2iQp7\",\"inner\":\"PrintActionsBar_inner__uBqU7\",\"link\":\"PrintActionsBar_link__lFUmI\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"PrintLayoutDashboard_wrapper__1WDh4\",\"pageOuter\":\"PrintLayoutDashboard_pageOuter__22acI\",\"pageWrapper\":\"PrintLayoutDashboard_pageWrapper__14vaM\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"PrintDashboard_wrapper__1O3s_\",\"pageOuter\":\"PrintDashboard_pageOuter__fl9tw\",\"pageWrapper\":\"PrintDashboard_pageWrapper__2YkgX\"};","export const EDIT = 'edit';\nexport const NEW = 'new';\nexport const VIEW = 'view';\nexport const PRINT = 'print';\nexport const PRINT_LAYOUT = 'print-layout';\nexport const isEditMode = mode => [EDIT, NEW].includes(mode);\nexport const isPrintMode = mode => [PRINT, PRINT_LAYOUT].includes(mode);\nexport const isViewMode = mode => mode === VIEW;","export const RECEIVED_USER = 'RECEIVED_USER';\nexport const DEFAULT_STATE_USER = {\n  id: '',\n  username: '',\n  uiLocale: '',\n  isSuperuser: false\n};\nexport default ((state = DEFAULT_STATE_USER, action) => {\n  switch (action.type) {\n    case RECEIVED_USER:\n      {\n        return fromD2ToUserObj(action.value);\n      }\n\n    default:\n      return state;\n  }\n});\n\nfunction fromD2ToUserObj(d2Object) {\n  return {\n    id: d2Object.id,\n    username: d2Object.username,\n    uiLocale: d2Object.settings.keyUiLocale,\n    isSuperuser: d2Object.authorities.has('ALL')\n  };\n} // selectors\n\n\nexport const sGetUserId = state => state.user.id;\nexport const sGetUserUsername = state => state.user.username;\nexport const sGetIsSuperuser = state => state.user.isSuperuser;\nexport const sGetUiLocale = state => state.user.uiLocale;","import { TEXT, SPACER } from './itemTypes';\nimport { getGridItemProperties } from '../components/ItemGrid/gridUtil';\nexport const spacerContent = 'SPACER_ITEM_FOR_DASHBOARD_LAYOUT_CONVENIENCE';\nexport const emptyTextItemContent = 'TEXT_ITEM_WITH_NO_CONTENT';\n\nconst isBackendSpacerType = item => item.type === TEXT && item.text === spacerContent;\n\nconst isUiSpacerType = item => item.type === SPACER;\n\nconst isTextType = item => item.type === TEXT && item.text !== spacerContent;\n\nexport const convertUiItemsToBackend = items => items.map(item => {\n  let text = null;\n\n  if (isUiSpacerType(item)) {\n    text = spacerContent;\n  } else if (isTextType(item)) {\n    text = item.text || emptyTextItemContent;\n  }\n\n  return { ...item,\n    ...(text ? {\n      text\n    } : {})\n  };\n});\nexport const convertBackendItemsToUi = items => items.map(item => {\n  const type = isBackendSpacerType(item) ? SPACER : item.type;\n  const gridProperties = getGridItemProperties(item.id);\n  const text = isTextType(item) ? item.text === emptyTextItemContent ? '' : item.text : null;\n  return { ...item,\n    ...(text !== null ? {\n      text\n    } : {}),\n    type,\n    ...gridProperties\n  };\n});","/** @module reducers/dashboards */\nimport arrayFrom from 'd2-utilizr/lib/arrayFrom';\nimport arraySort from 'd2-utilizr/lib/arraySort';\nimport { orArray, orObject } from '../modules/util';\nimport { convertBackendItemsToUi } from '../modules/uiBackendItemConverter';\nexport const SET_DASHBOARDS = 'SET_DASHBOARDS';\nexport const ADD_DASHBOARDS = 'ADD_DASHBOARDS';\nexport const SET_DASHBOARD_STARRED = 'SET_DASHBOARD_STARRED';\nexport const SET_DASHBOARD_DISPLAY_NAME = 'SET_DASHBOARD_DISPLAY_NAME';\nexport const SET_DASHBOARD_ITEMS = 'SET_DASHBOARD_ITEMS';\nexport const DEFAULT_STATE_DASHBOARDS = {\n  byId: null,\n  items: []\n}; // reducer helper functions\n\nconst updateDashboardProp = ({\n  state,\n  dashboardId,\n  prop,\n  value\n}) => ({\n  byId: { ...state.byId,\n    [dashboardId]: { ...state.byId[dashboardId],\n      [prop]: value\n    }\n  },\n  items: state.items\n});\n/**\n * Reducer that computes and returns the new state based on the given action\n * @function\n * @param {Object} state The current state\n * @param {Object} action The action to be evaluated\n * @returns {Object}\n */\n\n\nexport default ((state = DEFAULT_STATE_DASHBOARDS, action) => {\n  switch (action.type) {\n    case SET_DASHBOARDS:\n      {\n        return {\n          byId: action.value,\n          items: []\n        };\n      }\n\n    case ADD_DASHBOARDS:\n      {\n        return { ...state,\n          byId: { ...state.byId,\n            ...action.value\n          }\n        };\n      }\n\n    case SET_DASHBOARD_STARRED:\n      {\n        return updateDashboardProp({\n          state,\n          dashboardId: action.dashboardId,\n          prop: 'starred',\n          value: action.value\n        });\n      }\n\n    case SET_DASHBOARD_DISPLAY_NAME:\n      {\n        return updateDashboardProp({\n          state,\n          dashboardId: action.dashboardId,\n          prop: 'displayName',\n          value: action.value\n        });\n      }\n\n    case SET_DASHBOARD_ITEMS:\n      {\n        return { ...state,\n          items: action.value\n        };\n      }\n\n    default:\n      return state;\n  }\n}); // root selector\n\nexport const sGetDashboardsRoot = state => state.dashboards; // selector level 1\n\n/**\n * Selector which returns a dashboard by id from the state object\n * If no matching dashboard is found it returns undefined\n * If dashboards.byId is null, then the dashboards api request\n * has not yet completed. If dashboards.byId is an empty object\n * then the dashboards api request is complete, but no dashboards\n * were returned\n *\n * @function\n * @param {Object} state The current state\n * @param {Number} id The id of the dashboard\n * @returns {Object | undefined}\n */\n\nexport const sGetDashboardById = (state, id) => orObject(sGetDashboardsRoot(state).byId)[id];\nexport const sDashboardsIsFetching = state => {\n  return sGetDashboardsRoot(state).byId === null;\n};\n/**\n * Selector which returns all dashboards (the byId object)\n *\n * @function\n * @param {Object} state The current state\n * @returns {Object | undefined}\n */\n\nexport const sGetAllDashboards = state => orObject(sGetDashboardsRoot(state).byId);\n/**\n * Selector which returns the current dashboard items\n *\n * @function\n * @param {Object} state The current state\n * @returns {Array}\n */\n\nexport const sGetDashboardItems = state => sGetDashboardsRoot(state).items; // selector level 2\n\nexport const sGetStarredDashboards = state => Object.values(sGetAllDashboards(state)).filter(dashboard => dashboard.starred === true);\nexport const sGetUnstarredDashboards = state => Object.values(sGetAllDashboards(state)).filter(dashboard => dashboard.starred === false); // selector level 3\n\nexport const sGetStarredDashboardIds = state => {\n  return sGetStarredDashboards(state).map(dashboard => dashboard.id);\n};\nexport const sGetUnstarredDashboardIds = state => sGetUnstarredDashboards(state).map(dashboard => dashboard.id);\nexport const sGetDashboardsSortedByStarred = state => [...arraySort(sGetStarredDashboards(state), 'ASC', 'displayName'), ...arraySort(sGetUnstarredDashboards(state), 'ASC', 'displayName')]; // utils\n\n/**\n * Returns the array of dashboards, customized for ui\n * @function\n * @param {Array} data The original dashboard list\n * @returns {Array}\n */\n\nexport const getCustomDashboards = data => arrayFrom(data).map(d => ({\n  id: d.id,\n  name: d.name,\n  displayName: d.displayName,\n  description: d.description,\n  displayDescription: d.displayDescription,\n  starred: d.favorite,\n  owner: d.user.name,\n  created: d.created.split('T').join(' ').substr(0, 16),\n  lastUpdated: d.lastUpdated.split('T').join(' ').substr(0, 16),\n  access: d.access,\n  numberOfItems: orArray(d.dashboardItems).length,\n  dashboardItems: convertBackendItemsToUi(d.dashboardItems)\n}));","/** @module reducers/selected */\nimport { combineReducers } from 'redux';\nimport { validateReducer } from '../modules/util';\nexport const SET_SELECTED_ID = 'SET_SELECTED_ID';\nexport const SET_SELECTED_ISLOADING = 'SET_SELECTED_ISLOADING';\nexport const SET_SELECTED_SHOWDESCRIPTION = 'SET_SELECTED_SHOWDESCRIPTION';\nexport const DEFAULT_STATE_SELECTED_ID = null;\nexport const DEFAULT_STATE_SELECTED_ISLOADING = false;\nexport const DEFAULT_STATE_SELECTED_SHOWDESCRIPTION = false;\nexport const NON_EXISTING_DASHBOARD_ID = '0';\n/**\n * Reducer functions that computes and returns the new state based on the given action\n * @function\n * @param {Object} state The current state\n * @param {Object} action The action to be evaluated\n */\n\nconst id = (state = DEFAULT_STATE_SELECTED_ID, action) => {\n  switch (action.type) {\n    case SET_SELECTED_ID:\n      return validateReducer(action.value, DEFAULT_STATE_SELECTED_ID);\n\n    default:\n      return state;\n  }\n};\n\nconst isLoading = (state = DEFAULT_STATE_SELECTED_ISLOADING, action) => {\n  switch (action.type) {\n    case SET_SELECTED_ISLOADING:\n      return validateReducer(action.value, DEFAULT_STATE_SELECTED_ISLOADING);\n\n    default:\n      return state;\n  }\n};\n\nconst showDescription = (state = DEFAULT_STATE_SELECTED_SHOWDESCRIPTION, action) => {\n  switch (action.type) {\n    case SET_SELECTED_SHOWDESCRIPTION:\n      return validateReducer(action.value, DEFAULT_STATE_SELECTED_SHOWDESCRIPTION);\n\n    default:\n      return state;\n  }\n};\n\nexport default combineReducers({\n  id,\n  isLoading,\n  showDescription\n}); // Selectors\n\nexport const sGetSelectedRoot = state => state.selected;\nexport const sGetSelectedId = state => sGetSelectedRoot(state).id;\nexport const sGetSelectedIsLoading = state => sGetSelectedRoot(state).isLoading;\nexport const sGetSelectedShowDescription = state => sGetSelectedRoot(state).showDescription;","import { getDimensionById, DIMENSION_ID_PERIOD, DIMENSION_ID_ORGUNIT } from '@dhis2/analytics';\nexport const SET_DIMENSIONS = 'SET_DIMENSIONS';\nexport const DEFAULT_DIMENSIONS = [getDimensionById(DIMENSION_ID_PERIOD), getDimensionById(DIMENSION_ID_ORGUNIT)];\nexport default ((state = DEFAULT_DIMENSIONS, action) => {\n  switch (action.type) {\n    case SET_DIMENSIONS:\n      {\n        return [...DEFAULT_DIMENSIONS, ...action.value];\n      }\n\n    default:\n      return state;\n  }\n});\nexport const sGetDimensions = state => state.dimensions;","import { sGetDimensions } from './dimensions';\nimport { createSelector } from 'reselect';\nexport const CLEAR_ITEM_FILTERS = 'CLEAR_ITEM_FILTERS';\nexport const SET_ITEM_FILTERS = 'SET_ITEM_FILTERS';\nexport const ADD_ITEM_FILTER = 'ADD_ITEM_FILTER';\nexport const REMOVE_ITEM_FILTER = 'REMOVE_ITEM_FILTER';\nexport const DEFAULT_STATE_ITEM_FILTERS = {};\nexport default ((state = DEFAULT_STATE_ITEM_FILTERS, action) => {\n  switch (action.type) {\n    case ADD_ITEM_FILTER:\n      {\n        return { ...state,\n          [action.filter.id]: action.filter.value\n        };\n      }\n\n    case REMOVE_ITEM_FILTER:\n      {\n        const newState = { ...state\n        };\n        delete newState[action.id];\n        return newState;\n      }\n\n    case SET_ITEM_FILTERS:\n      {\n        return action.filters;\n      }\n\n    case CLEAR_ITEM_FILTERS:\n      {\n        return DEFAULT_STATE_ITEM_FILTERS;\n      }\n\n    default:\n      return state;\n  }\n}); // selectors\n\nexport const sGetItemFiltersRoot = state => state.itemFilters;\nexport const sGetFiltersKeys = state => Object.keys(sGetItemFiltersRoot(state)); // simplify the filters structure to:\n// [{ id: 'pe', name: 'Period', values: [{ id: 2019: name: '2019' }, {id: 'LAST_MONTH', name: 'Last month' }]}, ...]\n\nexport const sGetNamedItemFilters = createSelector([sGetItemFiltersRoot, sGetDimensions], (filters, dimensions) => Object.keys(filters).reduce((arr, id) => {\n  arr.push({\n    id: id,\n    name: dimensions.find(dimension => dimension.id === id).name,\n    values: filters[id].map(value => ({\n      id: value.id,\n      name: value.displayName || value.name\n    }))\n  });\n  return arr;\n}, []));","import { ADD_ITEM_FILTER, REMOVE_ITEM_FILTER, SET_ITEM_FILTERS, CLEAR_ITEM_FILTERS } from '../reducers/itemFilters';\nexport const FILTER_ORG_UNIT = 'ou'; // actions\n\nexport const acAddItemFilter = filter => ({\n  type: ADD_ITEM_FILTER,\n  filter\n});\nexport const acRemoveItemFilter = id => ({\n  type: REMOVE_ITEM_FILTER,\n  id\n});\nexport const acClearItemFilters = () => ({\n  type: CLEAR_ITEM_FILTERS\n});\nexport const acSetItemFilters = filters => ({\n  type: SET_ITEM_FILTERS,\n  filters\n});","import update from 'immutability-helper';\nimport { arrayToIdMap } from '../modules/util';\nexport const RECEIVED_MESSAGES = 'RECEIVED_MESSAGES';\nexport default ((state = {}, action) => {\n  switch (action.type) {\n    case RECEIVED_MESSAGES:\n      {\n        const conversations = arrayToIdMap(action.value);\n        const newState = update(state, {\n          $merge: conversations\n        });\n        return newState;\n      }\n\n    default:\n      return state;\n  }\n}); // selectors\n\nexport const sGetMessagesRoot = state => state.messages;","import { getInstance } from 'd2';\nexport const getMessages = () => {\n  const fields = 'id,messageCount,lastUpdated,messageType,displayName,read,messages[id,read,sender[id,displayName],text,lastUpdated]';\n  const url = `/messageConversations?fields=${fields}&order=read:asc&pageSize=200`;\n  return getInstance().then(d2 => d2.Api.getApi().get(url)).catch(error => console.log('Error:', error));\n};","import { RECEIVED_MESSAGES } from '../../../reducers/messages';\nimport { getMessages } from '../../../api/messages';\n\nconst onError = (action, error) => {\n  console.log(`Error in action ${action}: ${error}`);\n  return error;\n};\n\nexport const receivedMessages = value => ({\n  type: RECEIVED_MESSAGES,\n  value\n});\nexport const tGetMessages = () => async dispatch => {\n  try {\n    const messages = await getMessages();\n    const {\n      messageConversations\n    } = messages;\n    return dispatch(receivedMessages(messageConversations));\n  } catch (err) {\n    return onError('Get Messages', err);\n  }\n};","export const RECEIVED_SNACKBAR_MESSAGE = 'RECEIVED_SNACKBAR_MESSAGE';\nexport const CLOSE_SNACKBAR = 'CLOSE_SNACKBAR';\nexport const DEFAULT_STATE_SNACKBAR = {\n  message: {},\n  duration: null,\n  open: false\n};\nexport default ((state = DEFAULT_STATE_SNACKBAR, action) => {\n  switch (action.type) {\n    case RECEIVED_SNACKBAR_MESSAGE:\n      {\n        return { ...state,\n          ...action.value\n        };\n      }\n\n    case CLOSE_SNACKBAR:\n      {\n        return DEFAULT_STATE_SNACKBAR;\n      }\n\n    default:\n      return state;\n  }\n}); // selectors\n\nexport const sGetSnackbar = state => state.snackbar || DEFAULT_STATE_SNACKBAR;","import { RECEIVED_SNACKBAR_MESSAGE, CLOSE_SNACKBAR } from '../reducers/snackbar';\nexport const acReceivedSnackbarMessage = value => ({\n  type: RECEIVED_SNACKBAR_MESSAGE,\n  value\n});\nexport const acCloseSnackbar = () => ({\n  type: CLOSE_SNACKBAR\n});","import { orObject } from '../modules/util';\nimport objectClean from 'd2-utilizr/lib/objectClean';\n/** @module reducers/visualizations */\n\nexport const ADD_VISUALIZATION = 'ADD_VISUALIZATION';\nexport const SET_ACTIVE_VISUALIZATION_TYPE = 'SET_ACTIVE_VISUALIZATION_TYPE';\nexport const DEFAULT_STATE_VISUALIZATIONS = {};\n\nconst isEmpty = p => p === undefined || p === null;\n\nexport default ((state = DEFAULT_STATE_VISUALIZATIONS, action) => {\n  switch (action.type) {\n    case ADD_VISUALIZATION:\n      {\n        return { ...state,\n          [action.value.id]: objectClean({ ...orObject(state[action.value.id]),\n            ...action.value\n          }, isEmpty)\n        };\n      }\n\n    case SET_ACTIVE_VISUALIZATION_TYPE:\n      {\n        return { ...state,\n          [action.id]: objectClean({ ...orObject(state[action.id]),\n            activeType: action.activeType\n          }, isEmpty)\n        };\n      }\n\n    default:\n      return state;\n  }\n}); // root selector\n\nexport const sGetVisualizationsRoot = state => state.visualizations; // selectors level 1\n\nexport const sGetVisualization = (state, id) => {\n  return sGetVisualizationsRoot(state)[id];\n};","import { ADD_VISUALIZATION, SET_ACTIVE_VISUALIZATION_TYPE } from '../reducers/visualizations';\nexport const acAddVisualization = value => ({\n  type: ADD_VISUALIZATION,\n  value\n});\nexport const acSetActiveVisualizationType = (id, activeType) => {\n  const action = {\n    type: SET_ACTIVE_VISUALIZATION_TYPE,\n    id,\n    activeType\n  };\n  return action;\n};","import arrayClean from 'd2-utilizr/lib/arrayClean';\nimport { getListItemFields, getFavoritesFields, getIdNameFields } from './metadata'; // Helper functions\n\nexport const onError = error => console.log('Error: ', error); // Dashboard item\n\nexport const getDashboardItemsFields = ({\n  withFavorite\n} = {}) => arrayClean(['id', 'type', 'shape', 'x', 'y', 'width~rename(w)', 'height~rename(h)', 'messages', 'text', 'appKey', `${getListItemFields().join(',')}`, withFavorite ? `${getFavoritesFields({\n  withDimensions: withFavorite.withDimensions\n}).join(',')}` : ``]); // Dashboard\n\nexport const getDashboardFields = ({\n  withItems,\n  withFavorite\n} = {}) => arrayClean([`${getIdNameFields().join(',')}`, 'description', 'displayDescription', 'favorite', `user[${getIdNameFields({\n  rename: true\n}).join(',')}]`, 'created', 'lastUpdated', 'access', withItems ? `dashboardItems[${getDashboardItemsFields({\n  withFavorite\n}).join(',')}]` : ``]);","import { getInstance } from 'd2';\nimport arrayClean from 'd2-utilizr/lib/arrayClean';\nimport { onError, getDashboardFields } from './index'; // Get \"all\" dashboards on startup\n\nexport const apiFetchDashboards = () => getInstance().then(d2 => d2.models.dashboard.list({\n  fields: [getDashboardFields().join(','), 'dashboardItems[id]'].join(','),\n  paging: 'false'\n})).catch(onError); // Get more info about selected dashboard\n\nexport const apiFetchDashboard = id => getInstance().then(d2 => d2.models.dashboard.get(id, {\n  fields: arrayClean(getDashboardFields({\n    withItems: true,\n    withFavorite: {\n      withDimensions: false\n    }\n  })).join(',')\n})).catch(onError); // Star dashboard\n\nexport const apiStarDashboard = (id, isStarred) => {\n  const url = `dashboards/${id}/favorite`;\n  getInstance().then(d2 => {\n    if (isStarred) {\n      d2.Api.getApi().post(url);\n    } else {\n      d2.Api.getApi().delete(url);\n    }\n  });\n};\nexport const apiDeleteDashboard = id => {\n  return getInstance().then(d2 => {\n    return d2.models.dashboards.get(id).then(dashboard => dashboard.delete());\n  }).catch(onError);\n};","import { getInstance } from 'd2';\nexport const NAMESPACE = 'dashboard';\nexport const hasNamespace = async (d2) => await d2.currentUser.dataStore.has(NAMESPACE);\nexport const getNamespace = async (d2, hasNamespace) => hasNamespace ? await d2.currentUser.dataStore.get(NAMESPACE) : await d2.currentUser.dataStore.create(NAMESPACE);\nexport const apiPostUserDataStoreValue = async (key, value) => {\n  const d2 = await getInstance();\n  const ns = await getNamespace(d2, hasNamespace);\n  ns.set(key, value);\n};\nexport const apiGetUserDataStoreValue = async (key, defaultValue) => {\n  const d2 = await getInstance();\n  const namespace = await getNamespace(d2, await hasNamespace(d2));\n  const hasKey = namespace?.keys?.find(k => k === key);\n\n  if (hasKey) {\n    return await namespace.get(key);\n  } else {\n    await apiPostUserDataStoreValue(key, defaultValue, namespace);\n    console.log('(These errors to /userDataStore can be ignored)');\n    return defaultValue;\n  }\n};","import React from 'react';\nimport { connect } from 'react-redux';\nimport Snackbar from '@material-ui/core/Snackbar';\nimport PropTypes from 'prop-types';\nimport { sGetSnackbar } from '../../reducers/snackbar';\nimport { acCloseSnackbar } from '../../actions/snackbar';\nconst LOADING_DASHBOARD = 'LOADING_DASHBOARD';\nexport const loadingDashboardMsg = {\n  name: '',\n  type: LOADING_DASHBOARD\n};\n\nconst SnackbarMessageContent = ({\n  message\n}) => {\n  if (typeof message === 'object') {\n    //future message types:  switch(message.type)\n    return <span>\n                Loading <span style={{\n        fontWeight: 800\n      }}>{message.name}</span>{' '}\n                dashboard\n            </span>;\n  }\n\n  return message;\n};\n\nexport const SnackbarMessage = props => {\n  return <Snackbar style={{\n    zIndex: 10001\n  }} open={props.snackbarOpen} message={<SnackbarMessageContent message={props.snackbarMessage} />} autoHideDuration={props.snackbarDuration} onClose={props.onCloseSnackbar} />;\n};\n\nconst mapStateToProps = state => {\n  const {\n    message,\n    duration,\n    open\n  } = sGetSnackbar(state);\n  return {\n    snackbarOpen: open,\n    snackbarMessage: message,\n    snackbarDuration: duration\n  };\n};\n\nSnackbarMessage.propTypes = {\n  snackbarDuration: PropTypes.string,\n  snackbarMessage: PropTypes.object,\n  snackbarOpen: PropTypes.bool,\n  onCloseSnackbar: PropTypes.func\n};\nexport default connect(mapStateToProps, {\n  onCloseSnackbar: acCloseSnackbar\n})(SnackbarMessage);","import { getCustomDashboards, sGetDashboardById } from '../reducers/dashboards';\nimport { SET_SELECTED_ID, SET_SELECTED_ISLOADING, SET_SELECTED_SHOWDESCRIPTION, sGetSelectedIsLoading, sGetSelectedId } from '../reducers/selected';\nimport { sGetUserUsername } from '../reducers/user';\nimport { acSetDashboardItems, acAppendDashboards } from './dashboards';\nimport { acClearItemFilters } from './itemFilters';\nimport { tGetMessages } from '../components/Item/MessagesItem/actions';\nimport { acReceivedSnackbarMessage, acCloseSnackbar } from './snackbar';\nimport { acAddVisualization } from './visualizations';\nimport { apiFetchDashboard } from '../api/dashboards';\nimport { storePreferredDashboardId } from '../api/localStorage';\nimport { apiGetShowDescription, apiPostShowDescription } from '../api/description';\nimport { withShape } from '../components/ItemGrid/gridUtil';\nimport { loadingDashboardMsg } from '../components/SnackbarMessage/SnackbarMessage';\nimport { extractFavorite } from '../components/Item/VisualizationItem/plugin';\nimport { REPORT_TABLE, CHART, MAP, EVENT_REPORT, EVENT_CHART, MESSAGES } from '../modules/itemTypes';\nimport { orObject } from '../modules/util'; // actions\n\nexport const acSetSelectedId = value => ({\n  type: SET_SELECTED_ID,\n  value\n});\nexport const acSetSelectedIsLoading = value => ({\n  type: SET_SELECTED_ISLOADING,\n  value\n});\nexport const acSetSelectedShowDescription = value => ({\n  type: SET_SELECTED_SHOWDESCRIPTION,\n  value\n}); // thunks\n\nexport const tSetSelectedDashboardById = id => async (dispatch, getState) => {\n  dispatch(acSetSelectedIsLoading(true));\n  const snackbarTimeout = setTimeout(() => {\n    const dashboardName = orObject(sGetDashboardById(getState(), id)).displayName;\n\n    if (sGetSelectedIsLoading(getState()) && dashboardName) {\n      loadingDashboardMsg.name = dashboardName;\n      dispatch(acReceivedSnackbarMessage({\n        message: loadingDashboardMsg,\n        open: true\n      }));\n    }\n  }, 500);\n\n  const onSuccess = selected => {\n    dispatch(acAppendDashboards(selected));\n    const customDashboard = getCustomDashboards(selected)[0];\n    dispatch(acSetDashboardItems(withShape(customDashboard.dashboardItems)));\n    storePreferredDashboardId(sGetUserUsername(getState()), id);\n    customDashboard.dashboardItems.forEach(item => {\n      switch (item.type) {\n        case REPORT_TABLE:\n        case CHART:\n        case MAP:\n        case EVENT_REPORT:\n        case EVENT_CHART:\n          dispatch(acAddVisualization(extractFavorite(item)));\n          break;\n\n        case MESSAGES:\n          dispatch(tGetMessages(id));\n          break;\n\n        default:\n          break;\n      }\n    });\n\n    if (id !== sGetSelectedId(getState())) {\n      dispatch(acClearItemFilters());\n    }\n\n    dispatch(acSetSelectedId(id));\n    dispatch(acSetSelectedIsLoading(false));\n    clearTimeout(snackbarTimeout);\n    dispatch(acCloseSnackbar());\n    return selected;\n  };\n\n  const onError = error => {\n    console.log('Error: ', error);\n    return error;\n  };\n\n  try {\n    const dashboard = await apiFetchDashboard(id);\n    return onSuccess(dashboard);\n  } catch (err) {\n    return onError(err);\n  }\n};\nexport const tSetShowDescription = () => async dispatch => {\n  const onSuccess = value => {\n    dispatch(acSetSelectedShowDescription(value));\n  };\n\n  const onError = error => {\n    console.log('Error (apiGetShowDescription): ', error);\n    return error;\n  };\n\n  try {\n    const showDescription = await apiGetShowDescription();\n    return onSuccess(showDescription);\n  } catch (err) {\n    return onError(err);\n  }\n};\nexport const tUpdateShowDescription = value => async dispatch => {\n  const onSuccess = () => {\n    dispatch(acSetSelectedShowDescription(value));\n  };\n\n  const onError = error => {\n    console.log('Error (apiGetShowDescription): ', error);\n    return error;\n  };\n\n  try {\n    await apiPostShowDescription(value);\n    return onSuccess();\n  } catch (err) {\n    return onError(err);\n  }\n};","export const getPreferredDashboardId = username => localStorage.getItem(`dhis2.dashboard.current.${username}`) || undefined;\nexport const storePreferredDashboardId = (username, dashboardId) => {\n  localStorage.setItem(`dhis2.dashboard.current.${username}`, dashboardId);\n};","import { apiGetUserDataStoreValue, apiPostUserDataStoreValue } from './userDataStore';\nimport { DEFAULT_STATE_SELECTED_SHOWDESCRIPTION } from '../reducers/selected';\nconst KEY_SHOW_DESCRIPTION = 'showDescription';\nexport const apiGetShowDescription = async () => await apiGetUserDataStoreValue(KEY_SHOW_DESCRIPTION, DEFAULT_STATE_SELECTED_SHOWDESCRIPTION);\nexport const apiPostShowDescription = async (value) => await apiPostUserDataStoreValue(KEY_SHOW_DESCRIPTION, value);","import { SET_DASHBOARDS, ADD_DASHBOARDS, SET_DASHBOARD_STARRED, SET_DASHBOARD_DISPLAY_NAME, SET_DASHBOARD_ITEMS } from '../reducers/dashboards';\nimport { getCustomDashboards, sGetDashboardById, sGetDashboardsSortedByStarred } from '../reducers/dashboards';\nimport { NON_EXISTING_DASHBOARD_ID } from '../reducers/selected';\nimport { sGetUserUsername } from '../reducers/user';\nimport { tSetSelectedDashboardById, acSetSelectedId } from './selected';\nimport { apiFetchDashboards, apiStarDashboard, apiDeleteDashboard } from '../api/dashboards';\nimport { getPreferredDashboardId } from '../api/localStorage';\nimport { arrayToIdMap } from '../modules/util'; // actions\n\nexport const acSetDashboards = dashboards => ({\n  type: SET_DASHBOARDS,\n  value: arrayToIdMap(getCustomDashboards(dashboards))\n});\nexport const acAppendDashboards = dashboards => ({\n  type: ADD_DASHBOARDS,\n  value: arrayToIdMap(getCustomDashboards(dashboards))\n});\nexport const acSetDashboardStarred = (dashboardId, isStarred) => ({\n  type: SET_DASHBOARD_STARRED,\n  dashboardId: dashboardId,\n  value: isStarred\n});\nexport const acSetDashboardDisplayName = (dashboardId, value) => ({\n  type: SET_DASHBOARD_DISPLAY_NAME,\n  dashboardId,\n  value\n});\nexport const acSetDashboardItems = value => ({\n  type: SET_DASHBOARD_ITEMS,\n  value\n}); // thunks\n\nexport const tFetchDashboards = () => async dispatch => {\n  const collection = await apiFetchDashboards();\n  dispatch(acSetDashboards(collection.toArray()));\n};\nexport const tSelectDashboard = id => async (dispatch, getState) => {\n  const onError = error => {\n    console.log('Error (apiFetchDashboards): ', error);\n    return error;\n  };\n\n  try {\n    const state = getState();\n    let dashboardToSelect = null;\n\n    if (id) {\n      dashboardToSelect = sGetDashboardById(state, id) || null;\n    } else {\n      const preferredId = getPreferredDashboardId(sGetUserUsername(state));\n      const dash = sGetDashboardById(state, preferredId);\n      dashboardToSelect = preferredId && dash ? dash : sGetDashboardsSortedByStarred(state)[0];\n    }\n\n    if (dashboardToSelect) {\n      dispatch(tSetSelectedDashboardById(dashboardToSelect.id));\n    } else {\n      dispatch(acSetSelectedId(NON_EXISTING_DASHBOARD_ID));\n    }\n  } catch (err) {\n    return onError(err);\n  }\n};\nexport const tStarDashboard = (id, isStarred) => async dispatch => {\n  const onSuccess = id => {\n    dispatch(acSetDashboardStarred(id, isStarred));\n    return id;\n  };\n\n  const onError = error => {\n    console.log('Error (apiStarDashboard): ', error);\n    return error;\n  };\n\n  try {\n    await apiStarDashboard(id, isStarred);\n    return onSuccess(id);\n  } catch (err) {\n    return onError(err);\n  }\n};\nexport const tDeleteDashboard = id => async dispatch => {\n  try {\n    await apiDeleteDashboard(id);\n    await dispatch(tFetchDashboards());\n    return Promise.resolve();\n  } catch (err) {\n    console.log('Error (deleteDashboard): ', err);\n    return err;\n  }\n};","/** @module reducers/controlBar */\nimport { combineReducers } from 'redux';\nimport { validateReducer } from '../modules/util';\nexport const SET_CONTROLBAR_USER_ROWS = 'SET_CONTROLBAR_USER_ROWS';\nexport const DEFAULT_STATE_CONTROLBAR_ROWS = 1;\n\nconst userRows = (state = DEFAULT_STATE_CONTROLBAR_ROWS, action) => {\n  switch (action.type) {\n    case SET_CONTROLBAR_USER_ROWS:\n      return validateReducer(action.value, DEFAULT_STATE_CONTROLBAR_ROWS);\n\n    default:\n      return state;\n  }\n};\n\nexport default combineReducers({\n  userRows\n});\n/**\n * Selectors that point to specific props in the state object\n * @function\n * @param {Object} state\n * @returns {Object}\n */\n\nexport const sGetControlBarRoot = state => state.controlBar; // Selector dependency level 2\n\nexport const sGetControlBarUserRows = state => sGetControlBarRoot(state).userRows;","import { SET_CONTROLBAR_USER_ROWS } from '../reducers/controlBar';\nimport { apiGetControlBarRows } from '../api/controlBar'; // actions\n\nexport const acSetControlBarUserRows = rows => ({\n  type: SET_CONTROLBAR_USER_ROWS,\n  value: rows\n}); // thunks\n\nexport const tSetControlBarRows = () => async dispatch => {\n  const onSuccess = rows => {\n    dispatch(acSetControlBarUserRows(rows));\n  };\n\n  const onError = error => {\n    console.log('Error (apiGetControlBarRows): ', error);\n    return error;\n  };\n\n  try {\n    const controlBarRows = await apiGetControlBarRows();\n    return onSuccess(controlBarRows);\n  } catch (err) {\n    return onError(err);\n  }\n};","import { apiGetUserDataStoreValue, apiPostUserDataStoreValue } from './userDataStore';\nimport { DEFAULT_STATE_CONTROLBAR_ROWS } from '../reducers/controlBar';\nconst KEY_CONTROLBAR_ROWS = 'controlBarRows';\nexport const apiGetControlBarRows = async () => await apiGetUserDataStoreValue(KEY_CONTROLBAR_ROWS, DEFAULT_STATE_CONTROLBAR_ROWS);\nexport const apiPostControlBarRows = async (value) => await apiPostUserDataStoreValue(KEY_CONTROLBAR_ROWS, value);","export const SET_SETTINGS = 'SET_SETTINGS';\nexport const ADD_SETTINGS = 'ADD_SETTINGS';\nexport const DEFAULT_SETTINGS = {\n  keyDateFormat: 'yyyy-MM-dd',\n  keyAnalysisRelativePeriod: 'LAST_12_MONTHS',\n  keyAnalysisDigitGroupSeparator: 'SPACE',\n  displayNameProperty: 'displayName',\n  uiLocale: 'en',\n  rootOrganisationUnit: {}\n};\nexport default ((state = DEFAULT_SETTINGS, action) => {\n  switch (action.type) {\n    case SET_SETTINGS:\n      {\n        return Object.assign({}, action.value);\n      }\n\n    case ADD_SETTINGS:\n      {\n        return { ...state,\n          ...action.value\n        };\n      }\n\n    default:\n      return state;\n  }\n}); // Selectors\n\nexport const sGetSettings = state => state.settings;\nexport const sGetSettingsDisplayNameProperty = state => sGetSettings(state).displayNameProperty;\nexport const sGetRootOrgUnit = state => sGetSettings(state).rootOrganisationUnit;\nexport const sGetRelativePeriod = state => sGetSettings(state).keyAnalysisRelativePeriod;\nexport const sGetUiLocale = state => sGetSettings(state).uiLocale;","import { SET_DIMENSIONS } from '../reducers/dimensions';\nimport { apiFetchDimensions } from '@dhis2/analytics';\nimport { sGetSettingsDisplayNameProperty } from '../reducers/settings';\nexport const acSetDimensions = dimensions => ({\n  type: SET_DIMENSIONS,\n  value: dimensions\n});\nexport const tSetDimensions = d2 => async (dispatch, getState) => {\n  const onSuccess = dimensions => {\n    dispatch(acSetDimensions(dimensions));\n  };\n\n  const onError = error => {\n    console.log('Error (apiFetchDimensions): ', error);\n    return error;\n  };\n\n  try {\n    const displayNameProp = sGetSettingsDisplayNameProperty(getState());\n    const dimensions = await apiFetchDimensions(d2, displayNameProp); // filter out CATEGORY that are not of type ATTRIBUTE\n\n    const filteredDimensions = dimensions.filter(dim => dim.dimensionType !== 'CATEGORY' || dim.dimensionType === 'CATEGORY' && dim.dataDimensionType === 'ATTRIBUTE');\n    return onSuccess(filteredDimensions);\n  } catch (err) {\n    return onError(err);\n  }\n};","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { colors } from '@dhis2/ui';\nimport classes from './styles/ControlBar.module.css';\nconst DRAG_HANDLE_HEIGHT = 7;\n\nclass ControlBar extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      dragging: false\n    };\n  }\n\n  onStartDrag = () => {\n    this.setState({\n      dragging: true\n    });\n    window.addEventListener('mousemove', this.onDrag);\n    window.addEventListener('mouseup', this.onEndDrag);\n  };\n  onDrag = event => {\n    event.preventDefault();\n    event.stopPropagation();\n    const newHeight = event.clientY;\n\n    if (this.props.onChangeHeight && newHeight !== this.props.height && newHeight > 0) {\n      requestAnimationFrame(() => {\n        this.props.onChangeHeight(newHeight);\n      });\n    }\n  };\n  onEndDrag = () => {\n    this.setState({\n      dragging: false\n    });\n    window.removeEventListener('mousemove', this.onDrag);\n    window.removeEventListener('mouseup', this.onEndDrag);\n\n    if (this.props.onEndDrag) {\n      this.props.onEndDrag();\n    }\n  };\n\n  renderDragHandle() {\n    return typeof this.props.onChangeHeight === 'function' ? <div className={classes.draghandle} style={{\n      height: DRAG_HANDLE_HEIGHT\n    }} onMouseDown={this.onStartDrag} /> : null;\n  }\n\n  render() {\n    const height = Math.max(this.props.height, 0) + DRAG_HANDLE_HEIGHT;\n    const rootStyle = Object.assign({\n      height,\n      backgroundColor: this.props.editMode ? colors.yellow050 : colors.white,\n      paddingBottom: DRAG_HANDLE_HEIGHT\n    }, // Disable animations while dragging\n    this.state.dragging ? {\n      transition: 'none'\n    } : {});\n    return <div style={rootStyle} className={classes.root}>\n                <div className={classes.content}>{this.props.children}</div>\n                {this.renderDragHandle()}\n            </div>;\n  }\n\n}\n\nControlBar.propTypes = {\n  /**\n   * The height of the control bar in number of lines. Must be a positive integer.\n   */\n  children: PropTypes.node.isRequired,\n\n  /**\n   * If true, the background color of the control bar changes to indicate that edit mode is active.\n   */\n  editMode: PropTypes.bool.isRequired,\n\n  /**\n   * Callback function that is called when the control bar is resized.\n   * The callback receives one argument: The new height in pixels.\n   *\n   * If no callback is specified the control bar will not have a drag handle.\n   */\n  height: PropTypes.number.isRequired,\n\n  /**\n   * Callback function that is called when the control bar is dropped after being dragged.\n   * The callback receives one argument: The new height in pixels.\n   *\n   * Ignored if no \"onChangeHeight\" function is provided.\n   */\n  onChangeHeight: PropTypes.func,\n\n  /**\n   * The contents of the control bar.\n   */\n  onEndDrag: PropTypes.func\n};\nControlBar.defaultProps = {\n  onChangeHeight: null,\n  onEndDrag: null\n};\nexport default ControlBar;","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst StarIcon = ({\n  className\n}) => <svg className={className} xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\">\n        <path d=\"M0 0h24v24H0z\" fill=\"none\" />\n        <path d=\"M12 17.27L18.18 21l-1.64-7.03L22 9.24l-7.19-.61L12 2 9.19 8.63 2 9.24l5.46 4.73L5.82 21z\" />\n        <path d=\"M0 0h24v24H0z\" fill=\"none\" />\n    </svg>;\n\nStarIcon.propTypes = {\n  className: PropTypes.string\n};\nexport default StarIcon;","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Chip } from '@dhis2/ui';\nimport { Link } from 'react-router-dom';\nimport debounce from 'lodash/debounce';\nimport StarIcon from '../../icons/Star';\nimport { apiPostDataStatistics } from '../../api/dataStatistics';\nimport classes from './styles/DashboardItemChip.module.css';\nexport const DashboardItemChip = ({\n  starred,\n  selected,\n  label,\n  dashboardId\n}) => {\n  const chipProps = {\n    selected\n  };\n\n  if (starred) {\n    const selectedState = selected ? classes.selected : classes.unselected;\n    chipProps.icon = <StarIcon className={`${classes.icon} ${selectedState}`} />;\n  }\n\n  return <Link className={classes.link} to={`/${dashboardId}`} onClick={debounce(() => apiPostDataStatistics('DASHBOARD_VIEW', dashboardId), 500)}>\n            <Chip {...chipProps}>{label}</Chip>\n        </Link>;\n};\nDashboardItemChip.propTypes = {\n  dashboardId: PropTypes.string.isRequired,\n  label: PropTypes.string.isRequired,\n  selected: PropTypes.bool.isRequired,\n  starred: PropTypes.bool.isRequired,\n  classes: PropTypes.object\n};\nexport default DashboardItemChip;","import { getInstance } from 'd2';\nexport const apiPostDataStatistics = async (eventType, id) => {\n  const d2 = await getInstance();\n  const url = `dataStatistics?eventType=${eventType}&favorite=${id}`;\n  d2.Api.getApi().post(url);\n};","import React from 'react';\nimport { colors } from '@dhis2/ui';\n\nconst AddCircleIcon = () => <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"32\" height=\"32\" fill={colors.teal600} viewBox=\"0 0 24 24\">\n        <path d=\"M12 2C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2zm4 11h-3v3c0 .55-.45 1-1 1s-1-.45-1-1v-3H8c-.55 0-1-.45-1-1s.45-1 1-1h3V8c0-.55.45-1 1-1s1 .45 1 1v3h3c.55 0 1 .45 1 1s-.45 1-1 1z\" />\n    </svg>;\n\nexport default AddCircleIcon;","import React from 'react';\nimport { colors } from '@dhis2/ui';\nimport PropTypes from 'prop-types';\n\nconst ClearIcon = ({\n  className\n}) => <svg className={className} fill={colors.grey800} xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\">\n        <path d=\"M19 6.41L17.59 5 12 10.59 6.41 5 5 6.41 10.59 12 5 17.59 6.41 19 12 13.41 17.59 19 19 17.59 13.41 12z\" />\n        <path d=\"M0 0h24v24H0z\" fill=\"none\" />\n    </svg>;\n\nClearIcon.propTypes = {\n  className: PropTypes.string\n};\nexport default ClearIcon;","import React from 'react';\nimport PropTypes from 'prop-types';\nimport ClearIcon from '../../icons/Clear';\nimport classes from './styles/ClearButton.module.css';\nexport const ClearButton = ({\n  onClear\n}) => <button className={classes.button} onClick={onClear}>\n        <span>\n            <ClearIcon className={classes.icon} color=\"action\" />\n        </span>\n    </button>;\nClearButton.propTypes = {\n  onClear: PropTypes.func.isRequired\n};\nexport default ClearButton;","import { combineReducers } from 'redux';\nimport { validateReducer } from '../modules/util';\nexport const SET_DASHBOARDS_FILTER_NAME = 'SET_DASHBOARDS_FILTER_NAME';\nexport const SET_DASHBOARDS_FILTER_OWNER = 'SET_DASHBOARDS_FILTER_OWNER';\nexport const SET_DASHBOARDS_FILTER_ORDER = 'SET_DASHBOARDS_FILTER_ORDER';\nexport const ownerData = [{\n  id: 'ALL',\n  value: 'All users'\n}, {\n  id: 'ME',\n  value: 'Created by me'\n}, {\n  id: 'OTHERS',\n  value: 'Created by others'\n}];\nexport const orderData = [{\n  id: 'NAME:ASC',\n  value: 'Name (asc)'\n}, {\n  id: 'NAME:ASC',\n  value: 'Name (desc)'\n}, {\n  id: 'ITEMS:ASC',\n  value: 'Number of items (asc)'\n}, {\n  id: 'ITEMS:ASC',\n  value: 'Number of items (desc)'\n}, {\n  id: 'CREATED:ASC',\n  value: 'Created date (asc)'\n}, {\n  id: 'CREATED:ASC',\n  value: 'Created date (desc)'\n}];\nexport const DEFAULT_STATE_DASHBOARDS_FILTER_NAME = '';\nexport const DEFAULT_STATE_DASHBOARDS_FILTER_OWNER = ownerData[0].id;\nexport const DEFAULT_STATE_DASHBOARDS_FILTER_ORDER = orderData[0].id;\n\nconst name = (state = DEFAULT_STATE_DASHBOARDS_FILTER_NAME, action) => {\n  switch (action.type) {\n    case SET_DASHBOARDS_FILTER_NAME:\n      return validateReducer(action.value, DEFAULT_STATE_DASHBOARDS_FILTER_NAME);\n\n    default:\n      return state;\n  }\n};\n\nconst owner = (state = DEFAULT_STATE_DASHBOARDS_FILTER_OWNER, action) => {\n  switch (action.type) {\n    case SET_DASHBOARDS_FILTER_OWNER:\n      return validateReducer(action.value, DEFAULT_STATE_DASHBOARDS_FILTER_NAME);\n\n    default:\n      return state;\n  }\n};\n\nconst order = (state = DEFAULT_STATE_DASHBOARDS_FILTER_ORDER, action) => {\n  switch (action.type) {\n    case SET_DASHBOARDS_FILTER_ORDER:\n      return validateReducer(action.value, DEFAULT_STATE_DASHBOARDS_FILTER_ORDER);\n\n    default:\n      return state;\n  }\n};\n\nexport default combineReducers({\n  name,\n  owner,\n  order\n}); // selectors\n\nexport const sGetDashboardsFilterRoot = state => state.dashboardsFilter; // selector dependency level 2\n\nexport const sGetFilterName = state => sGetDashboardsFilterRoot(state).name;\nexport const sGetFilterOwner = state => sGetDashboardsFilterRoot(state).owner;\nexport const sGetFilterOrder = state => sGetDashboardsFilterRoot(state).order;","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport i18n from '@dhis2/d2-i18n';\nimport { withStyles } from '@material-ui/core/styles';\nimport InputField from '@material-ui/core/Input';\nimport InputAdornment from '@material-ui/core/InputAdornment';\nimport SearchIcon from '@material-ui/icons/Search';\nimport { colors } from '@dhis2/ui';\nimport ClearButton from './ClearButton';\nimport { DEFAULT_STATE_DASHBOARDS_FILTER_NAME } from '../../reducers/dashboardsFilter';\nconst styles = {\n  filterField: {\n    fontSize: '14px',\n    width: '200px',\n    height: '30px',\n    top: '-4px'\n  },\n  searchIcon: {\n    color: colors.grey700,\n    width: '20px',\n    height: '20px'\n  }\n};\nexport const KEYCODE_ENTER = 13;\nexport const KEYCODE_ESCAPE = 27;\nexport class Filter extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      value: DEFAULT_STATE_DASHBOARDS_FILTER_NAME\n    };\n  }\n\n  componentWillReceiveProps(nextProps) {\n    this.setState({\n      value: nextProps.name\n    });\n  }\n\n  setFilterValue = event => {\n    event.preventDefault();\n    this.props.onChangeName(event.target.value);\n  };\n  handleKeyUp = event => {\n    switch (event.keyCode) {\n      case KEYCODE_ENTER:\n        this.props.onKeypressEnter();\n        break;\n\n      case KEYCODE_ESCAPE:\n        this.props.onChangeName();\n        break;\n\n      default:\n        break;\n    }\n  };\n\n  render() {\n    const {\n      classes,\n      name,\n      onChangeName\n    } = this.props;\n    const startAdornment = <InputAdornment position=\"start\">\n                <SearchIcon className={classes.searchIcon} />\n            </InputAdornment>;\n    const endAdornment = name !== '' && name !== null ? <InputAdornment position=\"end\">\n                    <ClearButton onClear={() => onChangeName()} />\n                </InputAdornment> : null;\n    return <InputField className={classes.filterField} placeholder={i18n.t('Search for a dashboard')} startAdornment={startAdornment} endAdornment={endAdornment} value={this.state.value} onChange={this.setFilterValue} onKeyUp={this.handleKeyUp} />;\n  }\n\n}\nFilter.propTypes = {\n  classes: PropTypes.object,\n  name: PropTypes.string,\n  onChangeName: PropTypes.func,\n  onKeypressEnter: PropTypes.func\n};\nFilter.defaultProps = {\n  name: '',\n  onChangeName: Function.prototype\n};\nexport default withStyles(styles)(Filter);","import React from 'react';\nimport PropTypes from 'prop-types';\nimport i18n from '@dhis2/d2-i18n';\nimport classes from './styles/ShowMoreButton.module.css';\nexport const SHOWMORE_BAR_HEIGHT = 16;\nexport const ShowMoreButton = ({\n  onClick,\n  isMaxHeight,\n  disabled\n}) => {\n  return <div style={{\n    textAlign: 'center'\n  }}>\n            {disabled ? <div className={classes.disabled}>{i18n.t('Show more')}</div> : <div className={classes.showMore} onClick={onClick}>\n                    {isMaxHeight ? i18n.t('Show less') : i18n.t('Show more')}\n                </div>}\n        </div>;\n};\nShowMoreButton.propTypes = {\n  disabled: PropTypes.bool,\n  isMaxHeight: PropTypes.bool,\n  onClick: PropTypes.func\n};\nexport default ShowMoreButton;","import { SHOWMORE_BAR_HEIGHT } from './ShowMoreButton';\nexport const CONTROL_BAR_ROW_HEIGHT = 40;\nexport const FIRST_ROW_PADDING_HEIGHT = 10;\nexport const MIN_ROW_COUNT = 1;\nconst CONTROL_BAR_OUTER_HEIGHT_DIFF = FIRST_ROW_PADDING_HEIGHT + SHOWMORE_BAR_HEIGHT - 2; // 2 pixel \"adjustment\"\n\nexport const getRowsHeight = rows => {\n  return rows * CONTROL_BAR_ROW_HEIGHT;\n};\nexport const getNumRowsFromHeight = height => {\n  return Math.floor((height - CONTROL_BAR_OUTER_HEIGHT_DIFF) / CONTROL_BAR_ROW_HEIGHT);\n};\nexport const getControlBarHeight = rows => {\n  return getRowsHeight(rows) + CONTROL_BAR_OUTER_HEIGHT_DIFF;\n};","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { Link, withRouter } from 'react-router-dom';\nimport ControlBar from './ControlBar';\nimport arraySort from 'd2-utilizr/lib/arraySort';\nimport PropTypes from 'prop-types';\nimport Chip from './DashboardItemChip';\nimport AddCircleIcon from '../../icons/AddCircle';\nimport Filter from './Filter';\nimport ShowMoreButton from './ShowMoreButton';\nimport { FIRST_ROW_PADDING_HEIGHT, MIN_ROW_COUNT, getRowsHeight, getControlBarHeight, getNumRowsFromHeight } from './controlBarDimensions';\nimport { sGetControlBarUserRows } from '../../reducers/controlBar';\nimport { sGetAllDashboards } from '../../reducers/dashboards';\nimport { sGetFilterName } from '../../reducers/dashboardsFilter';\nimport { sGetSelectedId } from '../../reducers/selected';\nimport { acSetControlBarUserRows } from '../../actions/controlBar';\nimport { acSetFilterName } from '../../actions/dashboardsFilter';\nimport { orObject, orArray } from '../../modules/util';\nimport { apiPostControlBarRows } from '../../api/controlBar';\nimport classes from './styles/DashboardsBar.module.css';\nexport const MAX_ROW_COUNT = 10;\nexport class DashboardsBar extends Component {\n  state = {\n    rows: MIN_ROW_COUNT\n  };\n  setInitialDashboardState = rows => {\n    this.setState({\n      rows,\n      isMaxHeight: rows === MAX_ROW_COUNT\n    });\n  };\n\n  componentDidMount() {\n    this.setInitialDashboardState(this.props.userRows);\n  }\n\n  componentWillReceiveProps(nextProps) {\n    this.setInitialDashboardState(nextProps.userRows);\n  }\n\n  onChangeHeight = newHeight => {\n    const adjustedHeight = newHeight - 52; // don't rush the transition to a bigger row count\n\n    const newRows = Math.max(MIN_ROW_COUNT, getNumRowsFromHeight(adjustedHeight));\n\n    if (newRows !== this.state.rows) {\n      const newRowCount = Math.min(newRows, MAX_ROW_COUNT);\n      this.props.onChangeHeight(newRowCount);\n    }\n  };\n  onEndDrag = () => {\n    return apiPostControlBarRows(this.state.rows);\n  };\n  onToggleMaxHeight = () => {\n    const rows = this.state.rows === MAX_ROW_COUNT ? this.props.userRows : MAX_ROW_COUNT;\n    this.setState({\n      rows,\n      isMaxHeight: !this.state.isMaxHeight\n    });\n  };\n  onSelectDashboard = () => {\n    this.props.history.push(`/${this.props.dashboards[0].id}`);\n  };\n\n  render() {\n    const {\n      dashboards,\n      name,\n      selectedId,\n      onChangeFilterName\n    } = this.props;\n    const rowCount = this.state.isMaxHeight ? MAX_ROW_COUNT : this.state.rows;\n    const controlBarHeight = getControlBarHeight(rowCount);\n    const contentWrapperStyle = {\n      padding: `${FIRST_ROW_PADDING_HEIGHT}px 6px 0 6px`,\n      overflowY: this.state.isMaxHeight ? 'auto' : 'hidden',\n      height: getRowsHeight(rowCount) + FIRST_ROW_PADDING_HEIGHT\n    };\n    return <ControlBar height={controlBarHeight} onChangeHeight={this.onChangeHeight} onEndDrag={this.onEndDrag} editMode={false}>\n                <div style={contentWrapperStyle}>\n                    <div className={classes.leftControls}>\n                        <Link style={{\n            display: 'inline-block',\n            textDecoration: 'none',\n            marginRight: 10,\n            position: 'relative',\n            top: '2px'\n          }} to={'/new'}>\n                            <AddCircleIcon />\n                        </Link>\n                        <Filter name={name} onChangeName={onChangeFilterName} onKeypressEnter={this.onSelectDashboard} />\n                    </div>\n                    {orArray(dashboards).map(dashboard => <Chip key={dashboard.id} label={dashboard.displayName} starred={dashboard.starred} dashboardId={dashboard.id} selected={dashboard.id === selectedId} />)}\n                </div>\n                <ShowMoreButton onClick={this.onToggleMaxHeight} isMaxHeight={this.state.isMaxHeight} disabled={this.props.userRows === MAX_ROW_COUNT} />\n            </ControlBar>;\n  }\n\n}\n\nconst mapStateToProps = state => ({\n  dashboards: sGetAllDashboards(state),\n  name: sGetFilterName(state),\n  userRows: sGetControlBarUserRows(state),\n  selectedId: sGetSelectedId(state)\n});\n\nconst mapDispatchToProps = {\n  onChangeHeight: acSetControlBarUserRows,\n  onChangeFilterName: acSetFilterName\n};\n\nconst mergeProps = (stateProps, dispatchProps, ownProps) => {\n  const dashboards = Object.values(orObject(stateProps.dashboards));\n  const displayDashboards = arraySort(dashboards.filter(d => d.displayName.toLowerCase().includes(stateProps.name.toLowerCase())), 'ASC', 'displayName');\n  return { ...stateProps,\n    ...ownProps,\n    ...dispatchProps,\n    dashboards: [...displayDashboards.filter(d => d.starred), ...displayDashboards.filter(d => !d.starred)]\n  };\n};\n\nDashboardsBar.propTypes = {\n  dashboards: PropTypes.array,\n  history: PropTypes.object,\n  name: PropTypes.string,\n  selectedId: PropTypes.string,\n  userRows: PropTypes.number,\n  onChangeFilterName: PropTypes.func,\n  onChangeHeight: PropTypes.func\n};\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps, mergeProps)(DashboardsBar));","import { SET_DASHBOARDS_FILTER_NAME, SET_DASHBOARDS_FILTER_OWNER, SET_DASHBOARDS_FILTER_ORDER } from '../reducers/dashboardsFilter'; // actions\n\nexport const acSetFilterName = value => ({\n  type: SET_DASHBOARDS_FILTER_NAME,\n  value\n});\nexport const acSetFilterOwner = value => ({\n  type: SET_DASHBOARDS_FILTER_OWNER,\n  value\n});\nexport const acSetFilterOrder = value => ({\n  type: SET_DASHBOARDS_FILTER_ORDER,\n  value\n});","import React from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { getControlBarHeight, MIN_ROW_COUNT } from '../ControlBar/controlBarDimensions';\nimport { sGetControlBarUserRows } from '../../reducers/controlBar';\n\nconst DashboardVerticalOffset = props => {\n  const rows = props.editMode ? MIN_ROW_COUNT : props.userRows;\n  const marginTop = getControlBarHeight(rows);\n  return <div className=\"page-container-top-margin\" style={{\n    marginTop\n  }} />;\n};\n\nconst mapStateToProps = state => ({\n  userRows: sGetControlBarUserRows(state)\n});\n\nDashboardVerticalOffset.propTypes = {\n  editMode: PropTypes.bool,\n  userRows: PropTypes.number\n};\nexport default connect(mapStateToProps)(DashboardVerticalOffset);","import React from 'react';\nimport { colors } from '@dhis2/ui';\nimport PropTypes from 'prop-types';\nexport const NoContentMessage = ({\n  text\n}) => <div style={{\n  padding: '50px 10px',\n  textAlign: 'center',\n  fontSize: '15px',\n  fontWeight: 500,\n  color: colors.grey600\n}}>\n        {text}\n    </div>;\nNoContentMessage.propTypes = {\n  text: PropTypes.string\n};\nexport default NoContentMessage;","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { MenuItem, colors } from '@dhis2/ui';\n\nconst HeaderMenuItem = ({\n  title\n}) => <MenuItem dense key={title} disabled label={<span style={{\n  color: colors.grey800,\n  fontWeight: '600'\n}}>\n                {title}\n            </span>} />;\n\nHeaderMenuItem.propTypes = {\n  title: PropTypes.string.isRequired\n};\nexport default HeaderMenuItem;","import React from 'react';\nimport { colors } from '@dhis2/ui';\nimport PropTypes from 'prop-types';\n\nconst LaunchIcon = ({\n  className\n}) => <svg className={className} xmlns=\"http://www.w3.org/2000/svg\" width=\"12\" height=\"12\" fill={colors.grey600} viewBox=\"0 0 24 24\">\n        <path d=\"M0 0h24v24H0z\" fill=\"none\" />\n        <path d=\"M19 19H5V5h7V3H5c-1.11 0-2 .9-2 2v14c0 1.1.89 2 2 2h14c1.1 0 2-.9 2-2v-7h-2v7zM14 3v2h3.59l-9.83 9.83 1.41 1.41L19 6.41V10h2V3h-7z\" />\n    </svg>;\n\nLaunchIcon.propTypes = {\n  className: PropTypes.string\n};\nexport default LaunchIcon;","import React from 'react';\nimport { MenuItem, colors } from '@dhis2/ui';\nimport i18n from '@dhis2/d2-i18n';\nimport PropTypes from 'prop-types';\nimport { visTypeIcons } from '@dhis2/analytics';\nimport { getItemIcon, VISUALIZATION } from '../../modules/itemTypes';\nimport LaunchIcon from '../../icons/Launch';\nimport classes from './styles/ContentMenuItem.module.css';\n\nconst LaunchLink = ({\n  url\n}) => <a onClick={e => e.stopPropagation()} className={classes.launchLink} target=\"_blank\" rel=\"noopener noreferrer\" href={url}>\n        <LaunchIcon />\n    </a>;\n\nLaunchLink.propTypes = {\n  url: PropTypes.string\n};\n\nconst InsertButton = () => <button className={classes.buttonInsert}>{i18n.t('Insert')}</button>;\n\nconst ContentMenuItem = ({\n  type,\n  name,\n  onInsert,\n  url,\n  visType\n}) => {\n  const ItemIcon = getItemIcon(type);\n  const renderedItemIcon = type === VISUALIZATION ? visTypeIcons[visType] : <ItemIcon style={{\n    fill: colors.grey600\n  }} />;\n  return <MenuItem dense onClick={onInsert} label={<div className={classes.menuItem}>\n                    <div className={classes.label}>\n                        <span style={{\n        marginRight: '6px'\n      }}>\n                            {renderedItemIcon}\n                        </span>\n                        <span>{name}</span>\n                        {url ? <LaunchLink url={url} /> : null}\n                    </div>\n                    <InsertButton />\n                </div>} />;\n};\n\nContentMenuItem.propTypes = {\n  name: PropTypes.string,\n  type: PropTypes.string,\n  url: PropTypes.string,\n  visType: PropTypes.string,\n  onInsert: PropTypes.func\n};\nexport default ContentMenuItem;","/** @module reducers/editDashboard */\nimport update from 'immutability-helper';\nimport isEmpty from 'lodash/isEmpty';\nimport { orArray, orObject } from '../modules/util';\nexport const RECEIVED_EDIT_DASHBOARD = 'RECEIVED_EDIT_DASHBOARD';\nexport const RECEIVED_NOT_EDITING = 'RECEIVED_NOT_EDITING';\nexport const START_NEW_DASHBOARD = 'START_NEW_DASHBOARD';\nexport const RECEIVED_TITLE = 'RECEIVED_TITLE';\nexport const RECEIVED_DESCRIPTION = 'RECEIVED_DESCRIPTION';\nexport const ADD_DASHBOARD_ITEM = 'ADD_DASHBOARD_ITEM';\nexport const REMOVE_DASHBOARD_ITEM = 'REMOVE_DASHBOARD_ITEM';\nexport const UPDATE_DASHBOARD_ITEM = 'UPDATE_DASHBOARD_ITEM';\nexport const RECEIVED_DASHBOARD_LAYOUT = 'RECEIVED_DASHBOARD_LAYOUT';\nexport const SET_PRINT_PREVIEW_VIEW = 'SET_PRINT_PREVIEW_VIEW';\nexport const CLEAR_PRINT_PREVIEW_VIEW = 'CLEAR_PRINT_PREVIEW_VIEW';\nexport const DEFAULT_STATE_EDIT_DASHBOARD = {};\nexport const NEW_DASHBOARD_STATE = {\n  id: '',\n  name: '',\n  access: {},\n  description: '',\n  dashboardItems: [],\n  printPreviewView: false\n};\nexport default ((state = DEFAULT_STATE_EDIT_DASHBOARD, action) => {\n  switch (action.type) {\n    case RECEIVED_EDIT_DASHBOARD:\n      {\n        const newState = {};\n        Object.keys(NEW_DASHBOARD_STATE).map(k => newState[k] = action.value[k]);\n        newState.printPreviewView = false;\n        return newState;\n      }\n\n    case RECEIVED_NOT_EDITING:\n      return DEFAULT_STATE_EDIT_DASHBOARD;\n\n    case SET_PRINT_PREVIEW_VIEW:\n      return Object.assign({}, state, {\n        printPreviewView: true\n      });\n\n    case CLEAR_PRINT_PREVIEW_VIEW:\n      return Object.assign({}, state, {\n        printPreviewView: false\n      });\n\n    case START_NEW_DASHBOARD:\n      return NEW_DASHBOARD_STATE;\n\n    case RECEIVED_TITLE:\n      {\n        return Object.assign({}, state, {\n          name: action.value\n        });\n      }\n\n    case RECEIVED_DESCRIPTION:\n      {\n        return Object.assign({}, state, {\n          description: action.value\n        });\n      }\n\n    case ADD_DASHBOARD_ITEM:\n      if (!action.value.position) {\n        return update(state, {\n          dashboardItems: {\n            $unshift: [action.value]\n          }\n        });\n      }\n\n      return update(state, {\n        dashboardItems: {\n          $splice: [[parseInt(action.value.position), 0, action.value]]\n        }\n      });\n\n    case REMOVE_DASHBOARD_ITEM:\n      {\n        const idToRemove = action.value;\n        const dashboardItemIndex = state.dashboardItems.findIndex(item => item.id === idToRemove);\n\n        if (dashboardItemIndex > -1) {\n          return update(state, {\n            dashboardItems: {\n              $splice: [[dashboardItemIndex, 1]]\n            }\n          });\n        }\n\n        return state;\n      }\n\n    case RECEIVED_DASHBOARD_LAYOUT:\n      {\n        const stateItems = orArray(state.dashboardItems);\n        let layoutHasChanged = false;\n        const newStateItems = action.value.map(({\n          x,\n          y,\n          w,\n          h,\n          i\n        }) => {\n          const stateItem = stateItems.find(si => si.id === i);\n\n          if (!(stateItem.x === x && stateItem.y === y && stateItem.w === w && stateItem.h === h)) {\n            layoutHasChanged = true;\n            return Object.assign({}, stateItem, {\n              w,\n              h,\n              x,\n              y\n            });\n          }\n\n          return stateItem;\n        });\n        return layoutHasChanged ? { ...state,\n          dashboardItems: newStateItems\n        } : state;\n      }\n\n    case UPDATE_DASHBOARD_ITEM:\n      {\n        const dashboardItem = action.value;\n        const dashboardItemIndex = state.dashboardItems.findIndex(item => item.id === dashboardItem.id);\n\n        if (dashboardItemIndex > -1) {\n          const newState = update(state, {\n            dashboardItems: {\n              $splice: [[dashboardItemIndex, 1, Object.assign({}, dashboardItem)]]\n            }\n          });\n          return newState;\n        }\n\n        return state;\n      }\n\n    default:\n      return state;\n  }\n}); // root selector\n\nexport const sGetEditDashboardRoot = state => state.editDashboard; // selectors\n\nexport const sGetIsEditing = state => !isEmpty(state.editDashboard);\nexport const sGetIsPrintPreviewView = state => sGetEditDashboardRoot(state).printPreviewView;\nexport const sGetIsNewDashboard = state => {\n  return !isEmpty(state.editDashboard) && sGetEditDashboardRoot(state).id === '';\n};\nexport const sGetEditDashboardName = state => sGetEditDashboardRoot(state).name;\nexport const sGetEditDashboardDescription = state => sGetEditDashboardRoot(state).description;\nexport const sGetEditDashboardItems = state => orObject(sGetEditDashboardRoot(state)).dashboardItems;","import { getInstance } from 'd2';\n\nconst onError = error => console.log('Error: ', error);\n\nconst saveDashboard = (dashboard, data) => {\n  const {\n    name,\n    description,\n    dashboardItems\n  } = data;\n  dashboard.name = name;\n  dashboard.description = description;\n  dashboard.dashboardItems = dashboardItems.map(item => Object.assign({}, item, {\n    width: item.w,\n    height: item.h\n  }));\n  return dashboard.save().then(msg => msg.response.uid);\n};\n\nexport const updateDashboard = data => {\n  return getInstance().then(d2 => {\n    return d2.models.dashboards.get(data.id).then(dashboard => saveDashboard(dashboard, data));\n  }).catch(onError);\n};\nexport const postDashboard = data => {\n  return getInstance().then(d2 => {\n    const dashboard = d2.models.dashboards.create();\n    return saveDashboard(dashboard, data);\n  });\n};","import { generateUid } from 'd2/uid';\nimport i18n from '@dhis2/d2-i18n';\nimport { RECEIVED_EDIT_DASHBOARD, START_NEW_DASHBOARD, RECEIVED_NOT_EDITING, RECEIVED_TITLE, RECEIVED_DESCRIPTION, RECEIVED_DASHBOARD_LAYOUT, ADD_DASHBOARD_ITEM, UPDATE_DASHBOARD_ITEM, REMOVE_DASHBOARD_ITEM, SET_PRINT_PREVIEW_VIEW, CLEAR_PRINT_PREVIEW_VIEW } from '../reducers/editDashboard';\nimport { sGetEditDashboardRoot } from '../reducers/editDashboard';\nimport { updateDashboard, postDashboard } from '../api/editDashboard';\nimport { tSetSelectedDashboardById } from '../actions/selected';\nimport { NEW_ITEM_SHAPE, getGridItemProperties, getPageBreakItemShape, getPrintTitlePageItemShape } from '../components/ItemGrid/gridUtil';\nimport { itemTypeMap, PAGEBREAK, PRINT_TITLE_PAGE } from '../modules/itemTypes';\nimport { convertUiItemsToBackend } from '../modules/uiBackendItemConverter';\n\nconst onError = error => {\n  console.log('Error (Saving Dashboard): ', error);\n  return error;\n}; // actions\n\n\nexport const acSetEditDashboard = (dashboard, items) => {\n  const val = { ...dashboard,\n    dashboardItems: items\n  };\n  return {\n    type: RECEIVED_EDIT_DASHBOARD,\n    value: val\n  };\n};\nexport const acSetEditNewDashboard = () => ({\n  type: START_NEW_DASHBOARD\n});\nexport const acClearEditDashboard = () => ({\n  type: RECEIVED_NOT_EDITING\n});\nexport const acSetPrintPreviewView = () => ({\n  type: SET_PRINT_PREVIEW_VIEW\n});\nexport const acClearPrintPreviewView = () => ({\n  type: CLEAR_PRINT_PREVIEW_VIEW\n});\nexport const acSetDashboardTitle = value => ({\n  type: RECEIVED_TITLE,\n  value\n});\nexport const acSetDashboardDescription = value => ({\n  type: RECEIVED_DESCRIPTION,\n  value\n});\nexport const acUpdateDashboardLayout = value => ({\n  type: RECEIVED_DASHBOARD_LAYOUT,\n  value\n});\nexport const acAddDashboardItem = item => {\n  const type = item.type;\n  delete item.type;\n  const itemPropName = itemTypeMap[type].propName;\n  const id = generateUid();\n  const gridItemProperties = getGridItemProperties(id);\n  let shape;\n\n  if (type === PAGEBREAK) {\n    const yPos = item.yPos || 0;\n    shape = getPageBreakItemShape(yPos, item.isStatic);\n  } else if (type === PRINT_TITLE_PAGE) {\n    shape = getPrintTitlePageItemShape();\n  } else {\n    shape = NEW_ITEM_SHAPE;\n  }\n\n  return {\n    type: ADD_DASHBOARD_ITEM,\n    value: {\n      id,\n      type,\n      position: item.position || null,\n      [itemPropName]: item.content,\n      ...NEW_ITEM_SHAPE,\n      ...gridItemProperties,\n      ...shape\n    }\n  };\n};\nexport const acUpdateDashboardItem = item => ({\n  type: UPDATE_DASHBOARD_ITEM,\n  value: item\n});\nexport const acRemoveDashboardItem = value => ({\n  type: REMOVE_DASHBOARD_ITEM,\n  value\n}); // thunks\n\nexport const tSaveDashboard = () => async (dispatch, getState) => {\n  const dashboard = sGetEditDashboardRoot(getState());\n  const dashboardToSave = { ...dashboard,\n    dashboardItems: convertUiItemsToBackend(dashboard.dashboardItems),\n    name: dashboard.name || i18n.t('Untitled dashboard')\n  };\n\n  try {\n    const dashboardId = dashboardToSave.id ? await updateDashboard(dashboardToSave) : await postDashboard(dashboardToSave);\n    dispatch(acClearEditDashboard());\n    await dispatch(tSetSelectedDashboardById(dashboardId));\n    return Promise.resolve(dashboardId);\n  } catch (error) {\n    onError(error);\n  }\n};","import i18n from '@dhis2/d2-i18n';\nimport { VISUALIZATION, MAP, EVENT_CHART, EVENT_REPORT, USERS, REPORTS, RESOURCES, APP, MESSAGES, TEXT, SPACER } from '../../modules/itemTypes';\nexport const singleItems = [{\n  id: 'additional',\n  header: i18n.t('Additional items'),\n  items: [{\n    type: TEXT,\n    name: i18n.t('Text box'),\n    content: ''\n  }, {\n    type: MESSAGES,\n    name: i18n.t('Messages'),\n    content: 'true'\n  }, {\n    type: SPACER,\n    name: i18n.t('Spacer'),\n    content: ''\n  }]\n}]; // categorizedItems are grouped in the item selector menu\n\nexport const categorizedItems = [VISUALIZATION, MAP, EVENT_REPORT, EVENT_CHART, USERS, REPORTS, RESOURCES, APP]; // listItemTypes are included in a single dashboard item\n\nexport const listItemTypes = [REPORTS, RESOURCES, USERS];","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport i18n from '@dhis2/d2-i18n';\nimport { MenuItem, Divider } from '@dhis2/ui';\nimport HeaderMenuItem from './HeaderMenuItem';\nimport ContentMenuItem from './ContentMenuItem';\nimport { tAddListItemContent } from './actions';\nimport { acAddDashboardItem } from '../../actions/editDashboard';\nimport { getItemUrl, APP, VISUALIZATION } from '../../modules/itemTypes';\nimport { categorizedItems, listItemTypes } from './selectableItems';\nimport classes from './styles/CategorizedMenuGroup.module.css';\n\nclass CategorizedMenuGroup extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      seeMore: false\n    };\n  }\n\n  addItem = item => () => {\n    const {\n      type,\n      acAddDashboardItem,\n      tAddListItemContent\n    } = this.props;\n\n    if (type === APP) {\n      acAddDashboardItem({\n        type,\n        content: item.key\n      });\n    } else {\n      const newItem = {\n        id: item.id,\n        name: item.displayName || item.name\n      };\n\n      if (listItemTypes.includes(type)) {\n        tAddListItemContent(type, newItem);\n      } else {\n        acAddDashboardItem({\n          type,\n          content: newItem\n        });\n      }\n    }\n  };\n  toggleSeeMore = () => {\n    this.setState({\n      seeMore: !this.state.seeMore\n    });\n    this.props.onChangeItemsLimit(this.props.type);\n  };\n\n  render() {\n    const {\n      title,\n      type,\n      items,\n      hasMore\n    } = this.props;\n    return <>\n                <HeaderMenuItem title={title} />\n                {items.map(item => {\n        const itemUrl = getItemUrl(type, item, this.context.d2);\n        return <ContentMenuItem key={item.id || item.key} type={type} visType={type === VISUALIZATION ? item.type : type} name={item.displayName || item.name} onInsert={this.addItem(item)} url={itemUrl} />;\n      })}\n                {hasMore ? <MenuItem dense key={`showmore${title}`} onClick={this.toggleSeeMore} label={<button className={classes.showMoreButton}>\n                                {this.state.seeMore ? i18n.t('Show fewer') : i18n.t('Show more')}\n                            </button>} /> : null}\n                <Divider margin=\"8px 0px\" />\n            </>;\n  }\n\n}\n\nCategorizedMenuGroup.propTypes = {\n  items: PropTypes.array.isRequired,\n  title: PropTypes.string.isRequired,\n  type: PropTypes.oneOf(categorizedItems).isRequired,\n  onChangeItemsLimit: PropTypes.func.isRequired,\n  acAddDashboardItem: PropTypes.func,\n  hasMore: PropTypes.bool,\n  tAddListItemContent: PropTypes.func\n};\nCategorizedMenuGroup.contextTypes = {\n  d2: PropTypes.object.isRequired\n};\nexport default connect(null, {\n  acAddDashboardItem,\n  tAddListItemContent\n})(CategorizedMenuGroup);","import { sGetEditDashboardRoot } from '../../reducers/editDashboard';\nimport { itemTypeMap } from '../../modules/itemTypes';\nimport { acAddDashboardItem, acUpdateDashboardItem } from '../../actions/editDashboard';\nexport const tAddListItemContent = (type, content) => (dispatch, getState) => {\n  const state = getState();\n  const listItemType = itemTypeMap[type].propName;\n  const dashboardItems = sGetEditDashboardRoot(state).dashboardItems;\n  const dashboardItemIndex = dashboardItems.findIndex(item => item.type === type);\n  let dashboardItem; // Reports/Resources/Users dashboard item type already present in dashboard\n\n  if (dashboardItemIndex > -1) {\n    dashboardItem = dashboardItems[dashboardItemIndex];\n    dashboardItem[listItemType].push(content);\n    dispatch(acUpdateDashboardItem(dashboardItem));\n  } else {\n    dashboardItem = {\n      type: type,\n      content: [content]\n    };\n    dispatch(acAddDashboardItem(dashboardItem));\n  }\n};","import React from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport HeaderMenuItem from './HeaderMenuItem';\nimport ContentMenuItem from './ContentMenuItem';\nimport { acAddDashboardItem } from '../../actions/editDashboard';\nexport const SinglesMenuGroup = ({\n  acAddDashboardItem,\n  category\n}) => {\n  const addToDashboard = ({\n    type,\n    content\n  }) => () => {\n    acAddDashboardItem({\n      type,\n      content\n    });\n  };\n\n  return <>\n            <HeaderMenuItem title={category.header} />\n            {category.items.map(item => <ContentMenuItem key={item.type} type={item.type} name={item.name} onInsert={addToDashboard(item)} />)}\n        </>;\n};\nSinglesMenuGroup.propTypes = {\n  acAddDashboardItem: PropTypes.func,\n  category: PropTypes.object\n};\nexport default connect(null, {\n  acAddDashboardItem\n})(SinglesMenuGroup);","import React from 'react';\nimport PropTypes from 'prop-types';\nimport i18n from '@dhis2/d2-i18n';\nimport Popover from '@material-ui/core/Popover';\nimport { InputField, Menu } from '@dhis2/ui';\nimport CategorizedMenuGroup from './CategorizedMenuGroup';\nimport SinglesMenuGroup from './SinglesMenuGroup';\nimport { singleItems, categorizedItems } from './selectableItems';\nimport { itemTypeMap, getDefaultItemCount } from '../../modules/itemTypes';\nimport './styles/ItemSelector.css';\n\nconst ItemSearchField = props => <InputField name=\"Dashboard item search\" label={i18n.t('Search for items to add to this dashboard')} type=\"text\" onChange={props.onChange} onFocus={props.onFocus} value={props.value} />;\n\nclass ItemSelector extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      anchorEl: null,\n      open: false,\n      maxOptions: new Set(),\n      items: undefined,\n      filter: ''\n    };\n  }\n\n  closeList = () => {\n    this.setState({\n      open: false,\n      filter: ''\n    });\n  };\n  openList = (_, event) => {\n    this.fetchItems();\n    this.setState({\n      anchorEl: event.currentTarget,\n      open: true\n    });\n  };\n  setFilter = (_, event) => {\n    this.setState({\n      filter: event.target.value\n    }, this.fetchItems);\n  };\n  getCategorizedMenuGroups = () => categorizedItems.filter(type => {\n    const itemType = itemTypeMap[type];\n    return this.state.items && this.state.items[itemType.endPointName];\n  }).map(type => {\n    const itemType = itemTypeMap[type];\n    const itemCount = getDefaultItemCount(type);\n    const allItems = this.state.items[itemType.endPointName];\n    const hasMore = allItems.length > itemCount;\n    const items = this.state.maxOptions.has(itemType.id) ? allItems : allItems.slice(0, itemCount);\n    return <CategorizedMenuGroup key={type} type={type} title={itemType.pluralTitle} items={items} onChangeItemsLimit={this.fetchItems} hasMore={hasMore} />;\n  });\n  getSinglesMenuGroups = () => singleItems.map(category => <SinglesMenuGroup key={category.id} category={category} />);\n  getMenuGroups = () => this.getCategorizedMenuGroups().concat(this.getSinglesMenuGroups());\n  fetchItems = async type => {\n    if (type) {\n      const maxOptions = this.state.maxOptions;\n\n      if (maxOptions.has(type)) {\n        maxOptions.delete(type);\n      } else {\n        maxOptions.add(type);\n      }\n\n      this.setState({\n        maxOptions\n      });\n    } else {\n      this.setState({\n        maxOptions: new Set()\n      });\n    }\n\n    let queryString = '?count=11';\n\n    if ([...this.state.maxOptions.values()].length) {\n      queryString += '&max=' + [...this.state.maxOptions.values()].join('&max=');\n    }\n\n    const filter = this.state.filter ? `/${this.state.filter}` : '';\n    this.context.d2.Api.getApi().get(`dashboards/q${filter}${queryString}`).then(response => this.setState({\n      items: response\n    })).catch(console.error);\n  };\n\n  render() {\n    return <>\n                <ItemSearchField value={this.state.filter} onChange={this.setFilter} onFocus={this.openList} />\n                <Popover className=\"dashboard-item-selector\" open={this.state.open} onClose={this.closeList} anchorEl={this.state.anchorEl} anchorOrigin={{\n        horizontal: 'left',\n        vertical: 'bottom'\n      }} transformOrigin={{\n        horizontal: 'left',\n        vertical: 'top'\n      }} style={{\n        height: '70vh'\n      }} PaperProps={{\n        style: {\n          width: '700px'\n        }\n      }} disableAutoFocus={true} disableEnforceFocus={true} disableRestoreFocus={true}>\n                    <Menu maxWidth={'700px'}>{this.getMenuGroups()}</Menu>\n                </Popover>\n            </>;\n  }\n\n}\n\nItemSearchField.propTypes = {\n  value: PropTypes.string,\n  onChange: PropTypes.func,\n  onFocus: PropTypes.func\n};\nItemSelector.contextTypes = {\n  d2: PropTypes.object.isRequired\n};\nexport default ItemSelector;","import React from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport i18n from '@dhis2/d2-i18n';\nimport { InputField, TextAreaField } from '@dhis2/ui';\nimport ItemSelector from '../ItemSelector/ItemSelector';\nimport { acSetDashboardTitle, acSetDashboardDescription } from '../../actions/editDashboard';\nimport { orObject } from '../../modules/util';\nimport { sGetEditDashboardRoot } from '../../reducers/editDashboard';\nimport classes from './styles/EditTitleBar.module.css';\nexport const EditTitleBar = ({\n  name,\n  description,\n  onChangeTitle,\n  onChangeDescription\n}) => {\n  const updateTitle = (_, e) => {\n    onChangeTitle(e.target.value);\n  };\n\n  const updateDescription = (_, e) => {\n    onChangeDescription(e.target.value);\n  };\n\n  return <section className={classes.section}>\n            <div className={classes.titleDescription}>\n                <InputField className={classes.title} name=\"Dashboard title input\" label={i18n.t('Dashboard title')} type=\"text\" onChange={updateTitle} value={name} placeholder={i18n.t('Untitled dashboard')} />\n                <TextAreaField className={classes.description} name=\"Dashboard description input\" label={i18n.t('Dashboard description')} onChange={updateDescription} value={description} />\n            </div>\n            <div className={classes.itemSelector}>\n                <ItemSelector />\n            </div>\n        </section>;\n};\nEditTitleBar.propTypes = {\n  onChangeDescription: PropTypes.func.isRequired,\n  onChangeTitle: PropTypes.func.isRequired,\n  description: PropTypes.string,\n  name: PropTypes.string\n};\nEditTitleBar.defaultProps = {\n  name: '',\n  description: ''\n};\n\nconst mapStateToProps = state => {\n  const selectedDashboard = orObject(sGetEditDashboardRoot(state));\n  return {\n    name: selectedDashboard.name,\n    description: selectedDashboard.description\n  };\n};\n\nconst mapDispatchToProps = {\n  onChangeTitle: acSetDashboardTitle,\n  onChangeDescription: acSetDashboardDescription\n};\nexport default connect(mapStateToProps, mapDispatchToProps)(EditTitleBar);","import React from 'react';\nimport { colors } from '@dhis2/ui';\nexport const ThreeDots = () => <svg height=\"18\" viewBox=\"0 0 18 18\" width=\"18\" xmlns=\"http://www.w3.org/2000/svg\">\n        <path d=\"m4 7.5c-.83 0-1.5.67-1.5 1.5s.67 1.5 1.5 1.5 1.5-.67 1.5-1.5-.67-1.5-1.5-1.5zm10 0c-.83 0-1.5.67-1.5 1.5s.67 1.5 1.5 1.5 1.5-.67 1.5-1.5-.67-1.5-1.5-1.5zm-5 0c-.83 0-1.5.67-1.5 1.5s.67 1.5 1.5 1.5 1.5-.67 1.5-1.5-.67-1.5-1.5-1.5z\" fill=\"#6e7a8a\" />\n    </svg>;\nexport const SpeechBubble = () => <svg height=\"20\" viewBox=\"0 0 20 20\" width=\"20\" xmlns=\"http://www.w3.org/2000/svg\" style={{\n  margin: '3px 2px 0 2px'\n}} // Temporary fix for the misaligned icon, should be removed once the icon is replaced\n>\n        <path d=\"m20 2h-16c-1.1 0-1.99.9-1.99 2l-.01 18 4-4h14c1.1 0 2-.9 2-2v-12c0-1.1-.9-2-2-2zm-2 12h-12v-2h12zm0-3h-12v-2h12zm0-3h-12v-2h12z\" fill=\"#6e7a8a\" fillRule=\"evenodd\" transform=\"translate(-2 -2)\" />\n    </svg>;\nexport const Warning = () => <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24\" viewBox=\"0 0 24 24\" width=\"24\" fill={colors.grey600}>\n        <path d=\"M0 0h24v24H0z\" fill=\"none\" />\n        <path d=\"M1 21h22L12 2 1 21zm12-3h-2v-2h2v2zm0-4h-2v-4h2v4z\" />\n    </svg>;","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { Button, Modal, ModalTitle, ModalContent, ModalActions, ButtonStrip } from '@dhis2/ui';\nimport i18n from '@dhis2/d2-i18n';\nimport { PeriodDimension, DynamicDimension, OrgUnitDimension, DIMENSION_ID_PERIOD, DIMENSION_ID_ORGUNIT } from '@dhis2/analytics';\n\nclass FilterDialog extends Component {\n  onConfirm = id => () => this.props.onConfirm(id);\n\n  renderDialogContent() {\n    const {\n      displayNameProperty,\n      dimension,\n      selectedItems\n    } = this.props;\n    const dialogId = dimension.id;\n    const commonProps = {\n      d2: this.context.d2,\n      onSelect: this.props.onSelect,\n      onDeselect: this.props.onDeselect,\n      onReorder: this.props.onReorder\n    };\n\n    switch (dialogId) {\n      case DIMENSION_ID_PERIOD:\n        {\n          return <PeriodDimension selectedPeriods={selectedItems} onSelect={commonProps.onSelect} />;\n        }\n\n      case DIMENSION_ID_ORGUNIT:\n        return <OrgUnitDimension displayNameProperty={displayNameProperty} ouItems={selectedItems} {...commonProps} />;\n\n      default:\n        return <DynamicDimension selectedItems={selectedItems} dimensionId={dialogId} onSelect={commonProps.onSelect} context={commonProps.d2} />;\n    }\n  }\n\n  render() {\n    const {\n      dimension,\n      onClose\n    } = this.props;\n    const dialogId = dimension.id;\n    return <>\n                {dialogId && <Modal onClose={onClose} position=\"top\" large>\n                        <ModalTitle>{dimension.name}</ModalTitle>\n                        <ModalContent>\n                            {this.renderDialogContent()}\n                        </ModalContent>\n                        <ModalActions>\n                            <ButtonStrip>\n                                <Button secondary onClick={onClose}>\n                                    {i18n.t('Cancel')}\n                                </Button>\n                                <Button primary onClick={this.onConfirm(dialogId)}>\n                                    {i18n.t('Confirm')}\n                                </Button>\n                            </ButtonStrip>\n                        </ModalActions>\n                    </Modal>}\n            </>;\n  }\n\n}\n\nFilterDialog.propTypes = {\n  dimension: PropTypes.object,\n  displayNameProperty: PropTypes.string,\n  selectedItems: PropTypes.array,\n  onClose: PropTypes.func,\n  onConfirm: PropTypes.func,\n  onDeselect: PropTypes.func,\n  onReorder: PropTypes.func,\n  onSelect: PropTypes.func\n};\nFilterDialog.contextTypes = {\n  d2: PropTypes.object\n};\nexport default FilterDialog;","export const SET_ACTIVE_MODAL_DIMENSION = 'SET_ACTIVE_MODAL_DIMENSION';\nexport const CLEAR_ACTIVE_MODAL_DIMENSION = 'CLEAR_ACTIVE_MODAL_DIMENSION';\nexport const DEFAULT_STATE_ACTIVE_MODAL_DIMENSION = {};\nexport default ((state = DEFAULT_STATE_ACTIVE_MODAL_DIMENSION, action) => {\n  switch (action.type) {\n    case SET_ACTIVE_MODAL_DIMENSION:\n      {\n        return action.value;\n      }\n\n    case CLEAR_ACTIVE_MODAL_DIMENSION:\n      {\n        return DEFAULT_STATE_ACTIVE_MODAL_DIMENSION;\n      }\n\n    default:\n      return state;\n  }\n});\nexport const sGetActiveModalDimension = state => state.activeModalDimension;","import { SET_ACTIVE_MODAL_DIMENSION, CLEAR_ACTIVE_MODAL_DIMENSION } from '../reducers/activeModalDimension';\nexport const acSetActiveModalDimension = value => ({\n  type: SET_ACTIVE_MODAL_DIMENSION,\n  value\n});\nexport const acClearActiveModalDimension = () => ({\n  type: CLEAR_ACTIVE_MODAL_DIMENSION\n});","import React, { useState, useRef } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport ArrowDropDownIcon from '@material-ui/icons/ArrowDropDown';\nimport i18n from '@dhis2/d2-i18n';\nimport { DimensionsPanel } from '@dhis2/analytics';\nimport { Button, Popover } from '@dhis2/ui';\nimport FilterDialog from './FilterDialog';\nimport { sGetSettingsDisplayNameProperty } from '../../reducers/settings';\nimport { sGetActiveModalDimension } from '../../reducers/activeModalDimension';\nimport { sGetDimensions } from '../../reducers/dimensions';\nimport { sGetItemFiltersRoot, sGetFiltersKeys } from '../../reducers/itemFilters';\nimport { acAddItemFilter, acRemoveItemFilter } from '../../actions/itemFilters';\nimport { acClearActiveModalDimension, acSetActiveModalDimension } from '../../actions/activeModalDimension';\n\nconst FilterSelector = props => {\n  const [showPopover, setShowPopover] = useState(false);\n  const [filters, setFilters] = useState(props.initiallySelectedItems);\n  const ref = useRef(null);\n\n  const closePanel = () => setShowPopover(false);\n\n  const onCloseDialog = () => {\n    closePanel();\n    props.clearActiveModalDimension();\n  };\n\n  const selectDimension = id => {\n    props.setActiveModalDimension(props.dimensions.find(dimension => dimension.id === id));\n  };\n\n  const onSelectItems = ({\n    dimensionId,\n    items\n  }) => {\n    setFilters({ ...filters,\n      [dimensionId]: items\n    });\n  };\n\n  const onDeselectItems = ({\n    dimensionId,\n    itemIdsToRemove\n  }) => {\n    const oldList = filters[dimensionId] || [];\n    const newList = oldList.filter(item => !itemIdsToRemove.includes(item.id));\n    const list = newList.length ? newList : [];\n    setFilters({ ...filters,\n      [dimensionId]: list\n    });\n  };\n\n  const onReorderItems = ({\n    dimensionId,\n    itemIds\n  }) => {\n    const oldList = filters[dimensionId] || [];\n    const reorderedList = itemIds.map(id => oldList.find(item => item.id === id));\n    setFilters({ ...filters,\n      [dimensionId]: reorderedList\n    });\n  };\n\n  const saveFilter = id => {\n    const filterItems = filters[id];\n\n    if (filterItems && filterItems.length) {\n      props.addItemFilter({\n        id,\n        value: [...filterItems]\n      });\n    } else {\n      props.removeItemFilter(id);\n    }\n\n    onCloseDialog();\n  };\n\n  return <>\n            <span ref={ref}>\n                <Button onClick={() => setShowPopover(true)}>\n                    {i18n.t('Add filter')}\n                    <ArrowDropDownIcon />\n                </Button>\n            </span>\n            {showPopover && <Popover onClickOutside={closePanel} reference={ref} arrow={true} placement=\"bottom-start\">\n                    <DimensionsPanel style={{\n        width: '320px'\n      }} dimensions={props.dimensions} onDimensionClick={selectDimension} selectedIds={props.selectedDimensions} />\n                </Popover>}\n            {props.dimension ? <FilterDialog displayNameProperty={props.displayNameProperty} dimension={props.dimension} selectedItems={filters[props.dimension.id] || []} onSelect={onSelectItems} onDeselect={onDeselectItems} onReorder={onReorderItems} onClose={onCloseDialog} onConfirm={saveFilter} /> : null}\n        </>;\n};\n\nconst mapStateToProps = state => ({\n  displayNameProperty: sGetSettingsDisplayNameProperty(state),\n  dimension: sGetActiveModalDimension(state),\n  dimensions: sGetDimensions(state),\n  initiallySelectedItems: sGetItemFiltersRoot(state),\n  selectedDimensions: sGetFiltersKeys(state)\n});\n\nFilterSelector.propTypes = {\n  addItemFilter: PropTypes.func,\n  clearActiveModalDimension: PropTypes.func,\n  dimension: PropTypes.object,\n  dimensions: PropTypes.array,\n  displayNameProperty: PropTypes.string,\n  initiallySelectedItems: PropTypes.object,\n  removeItemFilter: PropTypes.func,\n  selectedDimensions: PropTypes.array,\n  setActiveModalDimension: PropTypes.func\n};\nexport default connect(mapStateToProps, {\n  clearActiveModalDimension: acClearActiveModalDimension,\n  setActiveModalDimension: acSetActiveModalDimension,\n  addItemFilter: acAddItemFilter,\n  removeItemFilter: acRemoveItemFilter\n})(FilterSelector);","import React, { useState, createRef } from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { Link } from 'react-router-dom';\nimport i18n from '@dhis2/d2-i18n';\nimport { Redirect } from 'react-router-dom';\nimport SharingDialog from '@dhis2/d2-ui-sharing-dialog';\nimport Star from '@material-ui/icons/Star';\nimport StarBorder from '@material-ui/icons/StarBorder';\nimport { Button, FlyoutMenu, Popover, MenuItem, colors } from '@dhis2/ui';\nimport { ThreeDots } from '../Item/VisualizationItem/assets/icons';\nimport { orObject } from '../../modules/util';\nimport { tStarDashboard } from '../../actions/dashboards';\nimport { tUpdateShowDescription } from '../../actions/selected';\nimport FilterSelector from '../ItemFilter/FilterSelector';\nimport { sGetSelectedId, sGetSelectedShowDescription } from '../../reducers/selected';\nimport { sGetDashboardById, sGetDashboardItems } from '../../reducers/dashboards';\nimport classes from './styles/ViewTitleBar.module.css';\n\nconst ViewTitleBar = (props, context) => {\n  const [moreOptionsIsOpen, setMoreOptionsIsOpen] = useState(false);\n  const [sharingDialogIsOpen, setSharingDialogIsOpen] = useState(false);\n  const [redirectUrl, setRedirectUrl] = useState(null);\n  const {\n    id,\n    name,\n    description,\n    access,\n    style,\n    showDescription,\n    starred,\n    onToggleStarredDashboard,\n    onShowHideDescription\n  } = props;\n\n  const toggleSharingDialog = () => setSharingDialogIsOpen(!sharingDialogIsOpen);\n\n  const toggleMoreOptions = () => setMoreOptionsIsOpen(!moreOptionsIsOpen);\n\n  const printLayout = () => setRedirectUrl(`${id}/printlayout`);\n\n  const printOipp = () => setRedirectUrl(`${id}/printoipp`);\n\n  const titleStyle = Object.assign({}, style.title, {\n    cursor: 'default',\n    userSelect: 'text',\n    top: '7px'\n  });\n  const StarIcon = starred ? Star : StarBorder;\n\n  if (redirectUrl) {\n    return <Redirect to={redirectUrl} />;\n  }\n\n  const showHideDescriptionLabel = showDescription ? i18n.t('Hide description') : i18n.t('Show description');\n\n  const showHideDescription = () => {\n    onShowHideDescription();\n    toggleMoreOptions();\n  };\n\n  const toggleStarredDashboardLabel = starred ? i18n.t('Unstar dashboard') : i18n.t('Star dashboard');\n\n  const toggleStarredDashboard = () => {\n    onToggleStarredDashboard();\n    toggleMoreOptions();\n  };\n\n  const buttonRef = createRef();\n  return <>\n            <div className={classes.titleBar}>\n                <span style={titleStyle}>{name}</span>\n                <div className={classes.actions}>\n                    <div className={classes.titleBarIcon} onClick={onToggleStarredDashboard}>\n                        <StarIcon style={{\n            fill: colors.grey600\n          }} />\n                    </div>\n                    <div className={classes.strip}>\n                        {access.update ? <Link className={classes.editLink} to={`/${id}/edit`}>\n                                <Button>{i18n.t('Edit')}</Button>\n                            </Link> : null}\n                        {access.manage ? <Button onClick={toggleSharingDialog}>\n                                {i18n.t('Share')}\n                            </Button> : null}\n                        <FilterSelector />\n                        <span ref={buttonRef}>\n                            <Button onClick={toggleMoreOptions}>\n                                <ThreeDots />\n                                <span style={{\n                marginLeft: '5px'\n              }}>\n                                    {i18n.t('More')}\n                                </span>\n                            </Button>\n                        </span>\n                    </div>\n                    {moreOptionsIsOpen && <Popover reference={buttonRef} placement=\"bottom-start\" onClickOutside={toggleMoreOptions}>\n                            <FlyoutMenu>\n                                <MenuItem dense label={toggleStarredDashboardLabel} onClick={toggleStarredDashboard} />\n                                <MenuItem dense label={showHideDescriptionLabel} onClick={showHideDescription} />\n                                <MenuItem dense label={i18n.t('Print')}>\n                                    <MenuItem dense label={i18n.t('Dashboard layout')} onClick={printLayout} />\n                                    <MenuItem dense label={i18n.t('One item per page')} onClick={printOipp} />\n                                </MenuItem>\n                            </FlyoutMenu>\n                        </Popover>}\n                </div>\n            </div>\n            {showDescription ? <div className=\"dashboard-description\" style={Object.assign({\n      paddingTop: '5px',\n      paddingBottom: '5px'\n    }, style.description, !description ? {\n      color: '#888'\n    } : {})}>\n                    {description || i18n.t('No description')}\n                </div> : null}\n            {id ? <SharingDialog d2={context.d2} id={id} type=\"dashboard\" open={sharingDialogIsOpen} onRequestClose={toggleSharingDialog} /> : null}\n        </>;\n};\n\nViewTitleBar.propTypes = {\n  access: PropTypes.object,\n  description: PropTypes.string,\n  id: PropTypes.string,\n  name: PropTypes.string,\n  showDescription: PropTypes.bool,\n  starred: PropTypes.bool,\n  style: PropTypes.object,\n  onShowHideDescription: PropTypes.func,\n  onToggleStarredDashboard: PropTypes.func\n};\nViewTitleBar.defaultProps = {\n  name: '',\n  description: '',\n  starred: false,\n  showDescription: false\n};\nViewTitleBar.contextTypes = {\n  d2: PropTypes.object\n};\n\nconst mapStateToProps = state => {\n  const id = sGetSelectedId(state);\n  const dashboard = orObject(sGetDashboardById(state, id));\n  return {\n    id,\n    name: dashboard.displayName,\n    description: dashboard.displayDescription,\n    dashboardItems: sGetDashboardItems(state),\n    showDescription: sGetSelectedShowDescription(state),\n    starred: dashboard.starred,\n    access: orObject(dashboard.access)\n  };\n};\n\nconst mergeProps = (stateProps, dispatchProps, ownProps) => {\n  const {\n    id,\n    starred,\n    showDescription\n  } = stateProps;\n  const {\n    dispatch\n  } = dispatchProps;\n  return { ...stateProps,\n    ...ownProps,\n    onToggleStarredDashboard: () => dispatch(tStarDashboard(id, !starred)),\n    onShowHideDescription: () => dispatch(tUpdateShowDescription(!showDescription))\n  };\n};\n\nexport default connect(mapStateToProps, null, mergeProps)(ViewTitleBar);","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { colors } from '@dhis2/ui';\nimport EditTitleBar from './EditTitleBar';\nimport ViewTitleBar from './ViewTitleBar';\nimport './TitleBar.css';\nconst style = {\n  title: {\n    position: 'relative',\n    fontSize: 21,\n    fontWeight: 500,\n    color: colors.black,\n    minWidth: 50\n  },\n  description: {\n    fontSize: 14,\n    color: colors.grey800\n  }\n};\n\nconst TitleBar = ({\n  edit\n}) => {\n  return <div className=\"titlebar-wrapper\" style={{\n    padding: '20px 15px 5px 10px'\n  }}>\n            {edit ? <EditTitleBar style={style} /> : <ViewTitleBar style={style} />}\n        </div>;\n};\n\nTitleBar.propTypes = {\n  edit: PropTypes.bool\n};\nexport default TitleBar;","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport i18n from '@dhis2/d2-i18n';\nimport * as pluginManager from './plugin';\nimport { getBaseUrl, orObject } from '../../../modules/util';\nimport { getGridItemDomId } from '../../ItemGrid/gridUtil';\n\nconst pluginCredentials = d2 => {\n  return {\n    baseUrl: getBaseUrl(d2),\n    auth: d2.Api.getApi().defaultHeaders.Authorization\n  };\n};\n\nclass DefaultPlugin extends Component {\n  pluginCredentials = null;\n\n  constructor(props, context) {\n    super(props);\n    this.d2 = context.d2;\n  }\n\n  shouldPluginReload = prevProps => {\n    // TODO - fix this hack, to handle bug with multiple\n    // rerendering while switching between dashboards.\n    //\n    // To determine if the rendering is happening because of a\n    // dashboard switch, check if the item reference has changed.\n    const reloadAllowed = this.props.item === prevProps.item;\n    const filtersChanged = prevProps.itemFilters !== this.props.itemFilters;\n    const vis = orObject(this.props.visualization);\n    const prevVis = orObject(prevProps.visualization);\n    const visChanged = vis.id !== prevVis.id || vis.activeType !== prevVis.activeType;\n    return reloadAllowed && (visChanged || filtersChanged);\n  };\n  reloadPlugin = prevProps => {\n    if (pluginManager.pluginIsAvailable(this.props.item, this.props.visualization) && this.shouldPluginReload(prevProps)) {\n      const prevVis = orObject(prevProps.visualization);\n      const currentVis = this.props.visualization;\n      const useActiveType = currentVis.activeType !== prevVis.activeType || currentVis.activeType !== this.props.item.type;\n\n      if (useActiveType || this.props.itemFilters !== prevProps.itemFilters) {\n        pluginManager.unmount(this.props.item, prevVis.activeType || this.props.item.type);\n        pluginManager.load(this.props.item, this.props.visualization, {\n          credentials: this.pluginCredentials,\n          activeType: useActiveType ? currentVis.activeType : null\n        });\n      }\n    }\n  };\n\n  componentDidMount() {\n    this.pluginCredentials = pluginCredentials(this.d2);\n\n    if (pluginManager.pluginIsAvailable(this.props.item, this.props.visualization)) {\n      pluginManager.load(this.props.item, this.props.visualization, {\n        credentials: this.pluginCredentials,\n        activeType: this.props.useActiveType ? this.getActiveType() : null,\n        options: this.props.options\n      });\n    }\n  }\n\n  componentDidUpdate(prevProps) {\n    this.reloadPlugin(prevProps);\n  }\n\n  getActiveType = () => this.props.visualization.activeType || this.props.item.type;\n\n  render() {\n    const {\n      classes,\n      item,\n      visualization,\n      style\n    } = this.props;\n    const pluginIsAvailable = pluginManager.pluginIsAvailable(item, visualization);\n    return pluginIsAvailable ? <div id={getGridItemDomId(item.id)} style={style} /> : <div className={classes.textDiv}>\n                {i18n.t('Unable to load the plugin for this item')}\n            </div>;\n  }\n\n}\n\nDefaultPlugin.contextTypes = {\n  d2: PropTypes.object\n};\nDefaultPlugin.propTypes = {\n  classes: PropTypes.object,\n  useActiveType: PropTypes.bool,\n  item: PropTypes.object,\n  itemFilters: PropTypes.object,\n  options: PropTypes.object,\n  style: PropTypes.object,\n  visualization: PropTypes.object\n};\nDefaultPlugin.defaultProps = {\n  style: {},\n  item: {},\n  itemFilters: {},\n  options: {},\n  visualization: {}\n};\nexport default DefaultPlugin;","import React from 'react';\nimport PropTypes from 'prop-types';\nimport i18n from '@dhis2/d2-i18n';\nimport { Warning } from './assets/icons';\nimport classes from './styles/FatalErrorBoundary.module.css';\n\nclass FatalErrorBoundary extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      errorFound: false\n    };\n  }\n\n  componentDidCatch(error, info) {\n    this.setState({\n      errorFound: true\n    });\n    console.log('error: ', error);\n    console.log('info: ', info);\n  }\n\n  render() {\n    if (this.state.errorFound) {\n      return <p className={classes.container}>\n                    <span className={classes.icon}>\n                        <Warning />\n                    </span>\n                    <span className={classes.message}>\n                        {i18n.t('There was a problem loading this dashboard item')}\n                    </span>\n                </p>;\n    }\n\n    return this.props.children;\n  }\n\n}\n\nFatalErrorBoundary.propTypes = {\n  children: PropTypes.node\n};\nexport default FatalErrorBoundary;","import React from 'react';\nimport PropTypes from 'prop-types';\nimport classes from './styles/ItemHeader.module.css';\n\nconst ViewItemActions = ({\n  actionButtons\n}) => {\n  return actionButtons ? <div className={classes.itemActionsWrap}>{actionButtons}</div> : null;\n};\n\nViewItemActions.propTypes = {\n  actionButtons: PropTypes.node\n};\nexport default ViewItemActions;","import React from 'react';\nimport PropTypes from 'prop-types';\nimport i18n from '@dhis2/d2-i18n';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport { colors } from '@dhis2/ui';\nimport classes from './styles/DeleteItemButton.module.css';\n\nconst DeleteItemButton = ({\n  onClick\n}) => <button type=\"button\" className={classes.deleteItemButton} onClick={onClick} title={i18n.t(`Delete item`)}>\n        <DeleteIcon style={{\n    fill: colors.red500\n  }} />\n    </button>;\n\nDeleteItemButton.propTypes = {\n  onClick: PropTypes.func\n};\nexport default DeleteItemButton;","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport DeleteItemButton from './DeleteItemButton';\nimport { acRemoveDashboardItem } from '../../../actions/editDashboard';\nimport classes from './styles/ItemHeader.module.css';\n\nconst EditItemActions = ({\n  itemId,\n  acRemoveDashboardItem\n}) => {\n  const handleDeleteItem = () => acRemoveDashboardItem(itemId);\n\n  return <div className={classes.itemActionsWrap}>\n            <DeleteItemButton onClick={handleDeleteItem} />\n        </div>;\n};\n\nEditItemActions.propTypes = {\n  acRemoveDashboardItem: PropTypes.func,\n  itemId: PropTypes.string\n};\nconst mapDispatchToProps = {\n  acRemoveDashboardItem\n};\nexport default connect(null, mapDispatchToProps)(EditItemActions);","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport ViewItemActions from './ViewItemActions';\nimport EditItemActions from './EditItemActions';\nimport { VIEW, EDIT } from '../../Dashboard/dashboardModes';\nimport classes from './styles/ItemHeader.module.css';\nconst itemActionsMap = {\n  [VIEW]: ViewItemActions,\n  [EDIT]: EditItemActions\n}; // This is the margin-top + margin-bottom defined in the css file\n\nexport const HEADER_MARGIN_HEIGHT = 12;\nconst ItemHeader = React.forwardRef(({\n  dashboardMode,\n  title,\n  ...rest\n}, ref) => {\n  const Actions = itemActionsMap[dashboardMode];\n  return <div className={classes.itemHeaderWrap} ref={ref}>\n                <p className={classes.itemTitle}>{title}</p>\n                {Actions ? <Actions {...rest} /> : null}\n            </div>;\n});\nItemHeader.displayName = 'ItemHeader';\nItemHeader.propTypes = {\n  dashboardMode: PropTypes.string,\n  title: PropTypes.string\n};\nexport default connect(null, null, null, {\n  forwardRef: true\n})(ItemHeader);","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { isSingleValue, isYearOverYear, VIS_TYPE_GAUGE, VIS_TYPE_PIE } from '@dhis2/analytics';\nimport { Button, Menu, MenuItem, Divider, colors } from '@dhis2/ui';\nimport i18n from '@dhis2/d2-i18n';\nimport Popover from '@material-ui/core/Popover';\nimport TableIcon from '@material-ui/icons/ViewList';\nimport ChartIcon from '@material-ui/icons/InsertChart';\nimport MapIcon from '@material-ui/icons/Public';\nimport LaunchIcon from '@material-ui/icons/Launch';\nimport { ThreeDots, SpeechBubble } from './assets/icons';\nimport { pluginIsAvailable, getLink } from './plugin';\nimport { CHART, MAP, REPORT_TABLE, EVENT_CHART, EVENT_REPORT, isTrackerDomainType, hasMapView, getAppName } from '../../../modules/itemTypes';\nconst iconFill = {\n  fill: colors.grey600\n};\n\nconst ItemHeaderButtons = props => {\n  const [anchorEl, setAnchorEl] = useState(null);\n  const {\n    item,\n    visualization,\n    onSelectActiveType,\n    d2,\n    activeType\n  } = props;\n  const isTrackerType = isTrackerDomainType(item.type);\n\n  const onViewTable = () => {\n    handleClose();\n    onSelectActiveType(isTrackerType ? EVENT_REPORT : REPORT_TABLE);\n  };\n\n  const onViewChart = () => {\n    handleClose();\n    onSelectActiveType(isTrackerType ? EVENT_CHART : CHART);\n  };\n\n  const onViewMap = () => {\n    handleClose();\n    onSelectActiveType(MAP);\n  };\n\n  const itemHasMapView = () => hasMapView(item.type);\n\n  const handleMenuClick = (_, event) => setAnchorEl(event.currentTarget);\n\n  const handleInterpretationClick = () => {\n    props.onToggleFooter();\n\n    if (anchorEl !== null) {\n      handleClose();\n    }\n  };\n\n  const handleClose = () => setAnchorEl(null);\n\n  const type = visualization.type || item.type;\n  const canViewAs = !isSingleValue(type) && !isYearOverYear(type) && type !== VIS_TYPE_GAUGE && type !== VIS_TYPE_PIE;\n  const interpretationMenuLabel = props.activeFooter ? i18n.t(`Hide interpretations and details`) : i18n.t(`Show interpretations and details`);\n\n  const ViewAsMenuItems = () => <>\n            {activeType !== CHART && activeType !== EVENT_CHART && <MenuItem dense label={i18n.t('View as Chart')} onClick={onViewChart} icon={<ChartIcon style={iconFill} />} />}\n            {activeType !== REPORT_TABLE && activeType !== EVENT_REPORT && <MenuItem dense label={i18n.t('View as Table')} onClick={onViewTable} icon={<TableIcon style={iconFill} />} />}\n            {itemHasMapView() && activeType !== MAP && <MenuItem dense label={i18n.t('View as Map')} onClick={onViewMap} icon={<MapIcon style={iconFill} />} />}\n        </>;\n\n  return pluginIsAvailable(item, visualization) ? <>\n            <Button small secondary onClick={handleMenuClick}>\n                <ThreeDots />\n            </Button>\n            {anchorEl && <Popover open={Boolean(anchorEl)} onClose={handleClose} anchorEl={anchorEl}>\n                    <Menu>\n                        {canViewAs && <>\n                                <ViewAsMenuItems />\n                                <Divider />\n                            </>}\n                        <MenuItem dense icon={<LaunchIcon style={{\n          fill: '#6e7a8a'\n        }} />} label={i18n.t('Open in {{appName}} app', {\n          appName: getAppName(item.type)\n        })} href={getLink(item, d2)} target=\"_blank\" />\n                        <MenuItem dense icon={<SpeechBubble />} label={interpretationMenuLabel} onClick={handleInterpretationClick} />\n                    </Menu>\n                </Popover>}\n        </> : null;\n};\n\nItemHeaderButtons.propTypes = {\n  activeFooter: PropTypes.bool,\n  activeType: PropTypes.string,\n  d2: PropTypes.object,\n  item: PropTypes.object,\n  visualization: PropTypes.object,\n  onSelectActiveType: PropTypes.func,\n  onToggleFooter: PropTypes.func\n};\nexport default ItemHeaderButtons;","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { colors } from '@dhis2/ui';\nimport { getId } from './plugin';\nimport InterpretationsComponent from '@dhis2/d2-ui-interpretations';\nconst style = {\n  scrollContainer: {\n    overflowY: 'auto',\n    height: '340px'\n  },\n  line: {\n    margin: '-1px 0px 0px',\n    height: '1px',\n    border: 'none',\n    backgroundColor: colors.grey100\n  }\n};\n\nclass ItemFooter extends Component {\n  render() {\n    const objectId = getId(this.props.item);\n    return <div className=\"dashboard-item-footer\">\n                <hr style={style.line} />\n                <div style={style.scrollContainer}>\n                    <InterpretationsComponent d2={this.context.d2} item={this.props.item} type={this.props.item.type.toLowerCase()} id={objectId} appName=\"dashboard\" />\n                </div>\n            </div>;\n  }\n\n}\n\nItemFooter.contextTypes = {\n  d2: PropTypes.object.isRequired\n};\nItemFooter.propTypes = {\n  item: PropTypes.object.isRequired\n};\nexport default ItemFooter;","import React from 'react';\nimport { CircularLoader } from '@dhis2/ui';\nimport classes from './styles/LoadingMask.module.css';\n\nconst LoadingMask = () => {\n  return <div className={classes.center}>\n            <CircularLoader />\n        </div>;\n};\n\nexport default LoadingMask;","// Note that this ignores discrepancies in 'this', so shouldn't be used with bound functions\n// This is useful instead of lodash/memoize when we only need to memoize a single value\n// Inspiration: https://github.com/alexreardon/memoize-one\nconst memoizeOne = fn => {\n  let lastArgs = undefined;\n  let lastValue = undefined;\n  return (...args) => {\n    if (lastArgs && args.length === lastArgs.length && args.every((arg, i) => arg === lastArgs[i])) {\n      return lastValue;\n    }\n\n    lastArgs = args;\n    lastValue = fn(...args);\n    return lastValue;\n  };\n};\n\nexport default memoizeOne;","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport uniqueId from 'lodash/uniqueId';\nimport VisualizationPlugin from '@dhis2/data-visualizer-plugin';\nimport i18n from '@dhis2/d2-i18n';\nimport DefaultPlugin from './DefaultPlugin';\nimport FatalErrorBoundary from './FatalErrorBoundary';\nimport ItemHeader, { HEADER_MARGIN_HEIGHT } from '../ItemHeader/ItemHeader';\nimport ItemHeaderButtons from './ItemHeaderButtons';\nimport ItemFooter from './ItemFooter';\nimport LoadingMask from './LoadingMask';\nimport * as pluginManager from './plugin';\nimport { sGetVisualization } from '../../../reducers/visualizations';\nimport { sGetItemFiltersRoot, DEFAULT_STATE_ITEM_FILTERS } from '../../../reducers/itemFilters';\nimport { acAddVisualization, acSetActiveVisualizationType } from '../../../actions/visualizations';\nimport { VISUALIZATION, MAP, CHART, REPORT_TABLE } from '../../../modules/itemTypes';\nimport memoizeOne from '../../../modules/memoizeOne';\nimport { isEditMode, isPrintMode, isViewMode } from '../../Dashboard/dashboardModes';\nimport { ITEM_CONTENT_PADDING_BOTTOM } from '../../ItemGrid/ItemGrid';\nimport classes from './styles/Item.module.css';\nexport class Item extends Component {\n  state = {\n    showFooter: false,\n    configLoaded: false,\n    pluginIsLoaded: false\n  };\n\n  constructor(props, context) {\n    super(props);\n    this.d2 = context.d2;\n    this.contentRef = React.createRef();\n    this.headerRef = React.createRef();\n    this.memoizedApplyFilters = memoizeOne(this.applyFilters);\n    this.memoizedGetVisualizationConfig = memoizeOne(pluginManager.getVisualizationConfig);\n    this.memoizedGetContentStyle = memoizeOne(this.getContentStyle);\n  }\n\n  async componentDidMount() {\n    this.props.onVisualizationLoaded( // TODO do not call fetch on the pluginManager, do it here as the manager will eventually be removed...\n    await pluginManager.fetch(this.props.item));\n    this.setState({\n      configLoaded: true\n    });\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    if (prevState.pluginIsLoaded && (prevProps.visualization !== this.props.visualization || prevProps.itemFilters !== this.props.itemFilters)) {\n      this.setState({\n        pluginIsLoaded: false\n      });\n    }\n  }\n\n  applyFilters = (visualization, filters) => {\n    if (!Object.keys(filters).length) {\n      return visualization;\n    } // deep clone objects in filters to avoid changing the visualization in the Redux store\n\n\n    const visRows = visualization.rows.map(obj => ({ ...obj\n    }));\n    const visColumns = visualization.columns.map(obj => ({ ...obj\n    }));\n    const visFilters = visualization.filters.map(obj => ({ ...obj\n    }));\n    Object.keys(filters).forEach(dimensionId => {\n      if (filters[dimensionId]) {\n        let dimensionFound = false;\n        [visRows, visColumns, visFilters].forEach(dimensionObjects => dimensionObjects.filter(obj => obj.dimension === dimensionId).forEach(obj => {\n          dimensionFound = true;\n          obj.items = filters[dimensionId];\n        })); // add dimension to filters if not already present elsewhere\n\n        if (!dimensionFound) {\n          visFilters.push({\n            dimension: dimensionId,\n            items: filters[dimensionId]\n          });\n        }\n      }\n    });\n    return { ...visualization,\n      rows: visRows,\n      columns: visColumns,\n      filters: visFilters\n    };\n  };\n  getUniqueKey = memoizeOne(() => uniqueId());\n  pluginCredentials = null;\n  getPluginComponent = () => {\n    const activeType = this.getActiveType();\n    const visualization = this.memoizedGetVisualizationConfig(this.props.visualization, this.props.item.type, activeType);\n\n    if (!visualization) {\n      return <div className={classes.textDiv}>\n                    {i18n.t('No data to display')}\n                </div>;\n    }\n\n    const calculatedHeight = this.props.item.originalHeight - this.headerRef.current.clientHeight - HEADER_MARGIN_HEIGHT - ITEM_CONTENT_PADDING_BOTTOM;\n    const props = { ...this.props,\n      useActiveType: !isEditMode(this.props.dashboardMode),\n      visualization,\n      classes,\n      style: this.memoizedGetContentStyle(calculatedHeight, this.contentRef ? this.contentRef.offsetHeight : null, isEditMode(this.props.dashboardMode) || isPrintMode(this.props.dashboardMode))\n    };\n\n    switch (activeType) {\n      case VISUALIZATION:\n      case CHART:\n      case REPORT_TABLE:\n        {\n          return <>\n                        {!this.state.pluginIsLoaded && <div style={props.style}>\n                                <LoadingMask />\n                            </div>}\n                        <VisualizationPlugin d2={this.d2} visualization={this.memoizedApplyFilters(visualization, props.itemFilters)} onLoadingComplete={this.onLoadingComplete} forDashboard={true} style={props.style} />\n                    </>;\n        }\n\n      case MAP:\n        {\n          if (props.item.type === MAP) {\n            // apply filters only to thematic and event layers\n            // for maps AO\n            const mapViews = props.visualization.mapViews.map(obj => {\n              if (obj.layer.includes('thematic') || obj.layer.includes('event')) {\n                return this.memoizedApplyFilters(obj, props.itemFilters);\n              }\n\n              return obj;\n            });\n            props.visualization = { ...props.visualization,\n              mapViews\n            };\n          } else {\n            // this is the case of a non map AO passed to the maps plugin\n            // due to a visualization type switch in dashboard item\n            // maps plugin takes care of converting the AO to a suitable format\n            props.visualization = this.memoizedApplyFilters(props.visualization, props.itemFilters);\n          }\n\n          props.options = { ...props.options,\n            hideTitle: true\n          };\n          return <DefaultPlugin {...props} />;\n        }\n\n      default:\n        {\n          props.visualization = this.memoizedApplyFilters(props.visualization, props.itemFilters);\n          return <DefaultPlugin {...props} />;\n        }\n    }\n  };\n  onLoadingComplete = () => {\n    this.setState({\n      pluginIsLoaded: true\n    });\n  };\n  onToggleFooter = () => {\n    this.setState({\n      showFooter: !this.state.showFooter\n    }, this.props.onToggleItemExpanded(this.props.item.id));\n  };\n  onSelectActiveType = type => {\n    if (type === this.getActiveType()) {\n      return;\n    }\n\n    pluginManager.unmount(this.props.item, this.getActiveType());\n    this.props.onSelectActiveType(this.props.visualization.id, type);\n  };\n  getActiveType = () => this.props.visualization.activeType || this.props.item.type;\n  pluginIsAvailable = () => pluginManager.pluginIsAvailable(this.props.item, this.props.visualization);\n  getContentStyle = (calculatedHeight, measuredHeight, preferMeasured) => {\n    const height = preferMeasured ? measuredHeight || calculatedHeight : calculatedHeight;\n    return {\n      height\n    };\n  };\n\n  render() {\n    const {\n      item,\n      dashboardMode,\n      itemFilters\n    } = this.props;\n    const {\n      showFooter\n    } = this.state;\n    const actionButtons = <ItemHeaderButtons item={item} visualization={this.props.visualization} onSelectActiveType={this.onSelectActiveType} onToggleFooter={this.onToggleFooter} d2={this.d2} activeType={this.getActiveType()} activeFooter={this.state.showFooter} />;\n    return <>\n                <ItemHeader title={pluginManager.getName(item)} itemId={item.id} actionButtons={actionButtons} ref={this.headerRef} dashboardMode={dashboardMode} />\n                <FatalErrorBoundary>\n                    <div key={this.getUniqueKey(itemFilters)} className=\"dashboard-item-content\" ref={ref => this.contentRef = ref}>\n                        {this.state.configLoaded && this.getPluginComponent()}\n                    </div>\n                </FatalErrorBoundary>\n                {isViewMode(dashboardMode) && showFooter ? <ItemFooter item={item} /> : null}\n            </>;\n  }\n\n}\nItem.contextTypes = {\n  d2: PropTypes.object\n};\nItem.propTypes = {\n  dashboardMode: PropTypes.string,\n  item: PropTypes.object,\n  itemFilters: PropTypes.object,\n  visualization: PropTypes.object,\n  onSelectActiveType: PropTypes.func,\n  onToggleItemExpanded: PropTypes.func,\n  onVisualizationLoaded: PropTypes.func\n};\nItem.defaultProps = {\n  item: {},\n  onToggleItemExpanded: Function.prototype,\n  visualization: {}\n};\n\nconst mapStateToProps = (state, ownProps) => {\n  const itemFilters = !isEditMode(ownProps.dashboardMode) ? sGetItemFiltersRoot(state) : DEFAULT_STATE_ITEM_FILTERS;\n  return {\n    itemFilters,\n    visualization: sGetVisualization(state, pluginManager.extractFavorite(ownProps.item).id)\n  };\n};\n\nconst mapDispatchToProps = dispatch => ({\n  onVisualizationLoaded: visualization => dispatch(acAddVisualization(visualization)),\n  onSelectActiveType: (id, type, activeType) => dispatch(acSetActiveVisualizationType(id, type, activeType))\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Item);","import React from 'react';\nimport { colors } from '@dhis2/ui';\nconst style = {\n  backgroundColor: colors.grey200,\n  border: 'none',\n  height: '1px',\n  margin: '0px 0px 5px 0px'\n};\n\nconst Line = () => <hr style={style} />;\n\nexport default Line;","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport i18n from '@dhis2/d2-i18n';\nimport { colors } from '@dhis2/ui';\nimport ItemHeader from '../ItemHeader/ItemHeader';\nimport Line from '../../../widgets/Line';\nimport { sGetMessagesRoot } from '../../../reducers/messages';\nimport { formatDate } from '../../../modules/util';\nimport { isViewMode } from '../../Dashboard/dashboardModes';\nimport './MessagesItem.css';\nconst PRIVATE = 'PRIVATE';\nconst messageTypes = {\n  [PRIVATE]: 'Private',\n  VALIDATION_RESULT: 'Validation',\n  TICKET: 'Ticket',\n  SYSTEM: 'System'\n};\nconst style = {\n  list: {\n    listStyleType: 'none',\n    paddingLeft: '0px'\n  },\n  seeAll: {\n    textAlign: 'center',\n    fontSize: '13px',\n    marginBottom: '5px'\n  },\n  sender: {\n    fontSize: '13px',\n    lineHeight: '15px',\n    margin: 0,\n    color: colors.grey800\n  },\n  snippet: {\n    color: colors.grey800,\n    fontSize: '13px',\n    lineHeight: '15px',\n    maxHeight: '30px',\n    overflow: 'hidden'\n  }\n};\n\nclass MessagesItem extends Component {\n  state = {\n    uiLocale: ''\n  };\n\n  async componentDidMount() {\n    const uiLocale = await this.context.d2.currentUser.userSettings.get('keyUiLocale');\n    this.setState({\n      uiLocale\n    });\n  }\n\n  getMessageHref = msg => {\n    const msgIdentifier = msg ? `#/${msg.messageType}/${msg.id}` : '';\n    return `${this.context.baseUrl}/dhis-web-messaging/${msgIdentifier}`;\n  };\n  getMessageSender = msg => {\n    const latestMsg = msg.messages.slice(-1)[0];\n    return latestMsg.sender ? latestMsg.sender.displayName : '';\n  };\n  getMessageItems = () => {\n    const modeClass = isViewMode(this.props.dashboardMode) ? 'view' : null;\n    return this.props.messages.map(msg => {\n      const redirectToMsg = () => {\n        if (isViewMode(this.props.dashboardMode)) {\n          document.location.href = this.getMessageHref(msg);\n        }\n      };\n\n      const sender = msg.messageType === PRIVATE ? this.getMessageSender(msg) : messageTypes[msg.messageType];\n      const readClass = !msg.read ? 'unread' : null;\n      const latestMsg = msg.messages.slice(-1)[0];\n      const msgDate = latestMsg.lastUpdated;\n      return <li className={`message-item ${modeClass}`} key={msg.id} onClick={redirectToMsg}>\n                    <p className={`message-title ${readClass}`}>\n                        {msg.displayName} ({msg.messageCount})\n                    </p>\n                    <p style={style.sender}>\n                        {sender} - {formatDate(msgDate, this.state.uiLocale)}\n                    </p>\n                    <p style={style.snippet}>{latestMsg.text}</p>\n                </li>;\n    });\n  };\n\n  render() {\n    return <>\n                <ItemHeader title={i18n.t('Messages')} itemId={this.props.item.id} dashboardMode={this.props.dashboardMode} />\n                <Line />\n                {this.props.messages.length > 0 && <div className=\"dashboard-item-content\">\n                        <ul style={style.list}>{this.getMessageItems()}</ul>\n                        <div style={style.seeAll}>\n                            <a href={this.getMessageHref()}>\n                                {i18n.t('See all messages')}\n                            </a>\n                        </div>\n                    </div>}\n            </>;\n  }\n\n}\n\nMessagesItem.propTypes = {\n  dashboardMode: PropTypes.string,\n  item: PropTypes.object,\n  messages: PropTypes.array\n};\nMessagesItem.contextTypes = {\n  d2: PropTypes.object,\n  baseUrl: PropTypes.string\n};\n\nconst mapStateToProps = state => {\n  return {\n    messages: Object.values(sGetMessagesRoot(state))\n  };\n};\n\nconst MessagesContainer = connect(mapStateToProps, null)(MessagesItem);\nexport default MessagesContainer;","import React from 'react';\nimport PropTypes from 'prop-types';\nimport i18n from '@dhis2/d2-i18n';\nimport ItemHeader from '../ItemHeader/ItemHeader';\nimport NotInterestedIcon from '@material-ui/icons/NotInterested';\n\nconst NotSupportedItem = props => <>\n        <ItemHeader title={i18n.t('Item type \"{{type}}\" not supported', {\n    type: props.item.type\n  })} itemId={props.item.id} dashboardMode={props.dashboardMode} />\n        <div style={{\n    display: 'flex',\n    justifyContent: 'center',\n    alignItems: 'center',\n    height: '90%'\n  }}>\n            <NotInterestedIcon style={{\n      width: 100,\n      height: 100,\n      align: 'center'\n    }} color=\"disabled\" />\n        </div>\n    </>;\n\nNotSupportedItem.propTypes = {\n  dashboardMode: PropTypes.string,\n  item: PropTypes.object\n};\nexport default NotSupportedItem;","import React from 'react';\nimport { colors } from '@dhis2/ui';\nimport PropTypes from 'prop-types';\n\nconst DescriptionIcon = ({\n  className\n}) => <svg className={className} xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\" fill={colors.grey500}>\n        <path d=\"M0 0h24v24H0z\" fill=\"none\" />\n        <path d=\"M14 2H6c-1.1 0-1.99.9-1.99 2L4 20c0 1.1.89 2 1.99 2H18c1.1 0 2-.9 2-2V8l-6-6zm2 16H8v-2h8v2zm0-4H8v-2h8v2zm-3-5V3.5L18.5 9H13z\" />\n    </svg>;\n\nDescriptionIcon.propTypes = {\n  className: PropTypes.string\n};\nexport default DescriptionIcon;","import React from 'react';\nimport { colors } from '@dhis2/ui';\nimport PropTypes from 'prop-types';\n\nconst DeleteIcon = ({\n  className\n}) => <svg className={className} xmlns=\"http://www.w3.org/2000/svg\" width=\"18\" height=\"18\" viewBox=\"0 0 24 24\" fill={colors.red500}>\n        <path d=\"M6 19c0 1.1.9 2 2 2h8c1.1 0 2-.9 2-2V7H6v12zM19 4h-3.5l-1-1h-5l-1 1H5v2h14V4z\" />\n        <path d=\"M0 0h24v24H0z\" fill=\"none\" />\n    </svg>;\n\nDeleteIcon.propTypes = {\n  className: PropTypes.string\n};\nexport default DeleteIcon;","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { colors } from '@dhis2/ui';\nimport DescriptionIcon from '../../../icons/Description';\nimport DeleteIcon from '../../../icons/Delete';\nimport Line from '../../../widgets/Line';\nimport { itemTypeMap, getItemUrl } from '../../../modules/itemTypes';\nimport { orArray } from '../../../modules/util';\nimport { tRemoveListItemContent } from './actions';\nimport ItemHeader from '../ItemHeader/ItemHeader';\nimport { isEditMode } from '../../Dashboard/dashboardModes';\nimport classes from './Item.module.css';\n\nconst getItemTitle = item => itemTypeMap[item.type].pluralTitle;\n\nconst getContentItems = item => orArray(item[itemTypeMap[item.type].propName]).filter((item, index, array) => array.findIndex(el => el.id === item.id) === index);\n\nconst ListItem = (props, context) => {\n  const {\n    item,\n    dashboardMode,\n    tRemoveListItemContent\n  } = props;\n  const contentItems = getContentItems(item);\n\n  const getLink = contentItem => {\n    const deleteButton = <button className={classes.deletebutton} onClick={() => tRemoveListItemContent(item, contentItem)}>\n                <DeleteIcon className={classes.deleteicon} />\n            </button>;\n    return <>\n                <a className={classes.link} style={{\n        color: colors.grey900\n      }} href={getItemUrl(item.type, contentItem, context.d2)}>\n                    {contentItem.name}\n                </a>\n                {isEditMode(dashboardMode) ? deleteButton : null}\n            </>;\n  };\n\n  return <>\n            <ItemHeader title={getItemTitle(item)} itemId={item.id} dashboardMode={dashboardMode} />\n            <Line />\n            <div className=\"dashboard-item-content\">\n                <ul className={classes.list}>\n                    {contentItems.map(contentItem => <li className={classes.item} key={contentItem.id}>\n                            <DescriptionIcon className={classes.itemicon} />\n                            {getLink(contentItem)}\n                        </li>)}\n                </ul>\n            </div>\n        </>;\n};\n\nListItem.propTypes = {\n  dashboardMode: PropTypes.string,\n  item: PropTypes.object,\n  tRemoveListItemContent: PropTypes.func\n};\nListItem.contextTypes = {\n  d2: PropTypes.object\n};\nexport default connect(null, {\n  tRemoveListItemContent\n})(ListItem);","import { acUpdateDashboardItem, acRemoveDashboardItem } from '../../../actions/editDashboard';\nimport { itemTypeMap } from '../../../modules/itemTypes';\nexport const tRemoveListItemContent = (dashboardItem, content) => dispatch => {\n  const listItemType = itemTypeMap[dashboardItem.type].propName;\n  const newContent = dashboardItem[listItemType].filter(item => item.id !== content.id);\n\n  if (newContent.length) {\n    dashboardItem[listItemType] = newContent;\n    dispatch(acUpdateDashboardItem(dashboardItem));\n  } else {\n    dispatch(acRemoveDashboardItem(dashboardItem));\n  }\n};","/** @module reducers/editDashboard */\nimport update from 'immutability-helper';\nimport isEmpty from 'lodash/isEmpty';\nimport { orArray } from '../modules/util';\nexport const SET_PRINT_DASHBOARD = 'SET_PRINT_DASHBOARD';\nexport const CLEAR_PRINT_DASHBOARD = 'CLEAR_PRINT_DASHBOARD';\nexport const ADD_PRINT_DASHBOARD_ITEM = 'ADD_PRINT_DASHBOARD_ITEM';\nexport const SET_PRINT_DASHBOARD_LAYOUT = 'SET_PRINT_DASHBOARD_LAYOUT';\nexport const REMOVE_PRINT_DASHBOARD_ITEM = 'REMOVE_PRINT_DASHBOARD_ITEM';\nexport const UPDATE_PRINT_DASHBOARD_ITEM = 'UPDATE_PRINT_DASHBOARD_ITEM';\nexport const DEFAULT_STATE_PRINT_DASHBOARD = {};\nconst DEFAULT_DASHBOARD_ITEMS = [];\nexport const NEW_PRINT_DASHBOARD_STATE = {\n  id: '',\n  name: '',\n  access: {},\n  description: '',\n  dashboardItems: DEFAULT_DASHBOARD_ITEMS\n};\nexport default ((state = DEFAULT_STATE_PRINT_DASHBOARD, action) => {\n  switch (action.type) {\n    case SET_PRINT_DASHBOARD:\n      {\n        const newState = {};\n        Object.keys(NEW_PRINT_DASHBOARD_STATE).map(k => newState[k] = action.value[k]);\n        return newState;\n      }\n\n    case CLEAR_PRINT_DASHBOARD:\n      return DEFAULT_STATE_PRINT_DASHBOARD;\n\n    case ADD_PRINT_DASHBOARD_ITEM:\n      if (!action.value.position) {\n        return update(state, {\n          dashboardItems: {\n            $unshift: [action.value]\n          }\n        });\n      }\n\n      return update(state, {\n        dashboardItems: {\n          $splice: [[parseInt(action.value.position), 0, action.value]]\n        }\n      });\n\n    case REMOVE_PRINT_DASHBOARD_ITEM:\n      {\n        const idToRemove = action.value;\n        const dashboardItemIndex = state.dashboardItems.findIndex(item => item.id === idToRemove);\n\n        if (dashboardItemIndex > -1) {\n          return update(state, {\n            dashboardItems: {\n              $splice: [[dashboardItemIndex, 1]]\n            }\n          });\n        }\n\n        return state;\n      }\n\n    case UPDATE_PRINT_DASHBOARD_ITEM:\n      {\n        const dashboardItem = action.value;\n        const dashboardItemIndex = state.dashboardItems.findIndex(item => item.id === dashboardItem.id);\n\n        if (dashboardItemIndex > -1) {\n          const newState = update(state, {\n            dashboardItems: {\n              $splice: [[dashboardItemIndex, 1, Object.assign({}, dashboardItem)]]\n            }\n          });\n          return newState;\n        }\n\n        return state;\n      }\n\n    case SET_PRINT_DASHBOARD_LAYOUT:\n      {\n        const stateItems = orArray(state.dashboardItems);\n        let layoutHasChanged = false;\n        const newStateItems = action.value.map(({\n          x,\n          y,\n          w,\n          h,\n          i\n        }) => {\n          const stateItem = stateItems.find(si => si.id === i);\n\n          if (!(stateItem.x === x && stateItem.y === y && stateItem.w === w && stateItem.h === h)) {\n            layoutHasChanged = true;\n            return Object.assign({}, stateItem, {\n              w,\n              h,\n              x,\n              y\n            });\n          }\n\n          return stateItem;\n        });\n        return layoutHasChanged ? { ...state,\n          dashboardItems: newStateItems\n        } : state;\n      }\n\n    default:\n      return state;\n  }\n}); // root selector\n\nexport const sGetPrintDashboardRoot = state => state.printDashboard; // selectors\n\nexport const sGetIsPrinting = state => !isEmpty(state.printDashboard);\nexport const sGetPrintDashboardItems = state => {\n  return sGetPrintDashboardRoot(state)?.dashboardItems || DEFAULT_DASHBOARD_ITEMS;\n};","import React from 'react';\nimport { connect } from 'react-redux';\nimport i18n from '@dhis2/d2-i18n';\nimport PropTypes from 'prop-types';\nimport Input from '@material-ui/core/Input';\nimport ItemHeader from '../ItemHeader/ItemHeader';\nimport Line from '../../../widgets/Line';\nimport { Parser as RichTextParser, Editor as RichTextEditor } from '@dhis2/d2-ui-rich-text';\nimport { acUpdateDashboardItem } from '../../../actions/editDashboard';\nimport { sGetEditDashboardItems } from '../../../reducers/editDashboard';\nimport { sGetDashboardItems } from '../../../reducers/dashboards';\nimport { sGetIsPrinting, sGetPrintDashboardItems } from '../../../reducers/printDashboard';\nimport { isEditMode } from '../../Dashboard/dashboardModes';\nconst style = {\n  textDiv: {\n    padding: '10px',\n    whiteSpace: 'pre-line',\n    lineHeight: '20px'\n  },\n  textField: {\n    fontSize: '14px',\n    fontStretch: 'normal',\n    width: '90%',\n    margin: '0 auto',\n    display: 'block',\n    lineHeight: '24px'\n  },\n  container: {\n    marginBottom: '20px',\n    marginTop: '20px'\n  }\n};\n\nconst TextItem = props => {\n  const {\n    item,\n    dashboardMode,\n    text,\n    acUpdateDashboardItem\n  } = props;\n\n  const onChangeText = event => {\n    const updatedItem = { ...item,\n      text: event.target.value\n    };\n    acUpdateDashboardItem(updatedItem);\n  };\n\n  const viewItem = () => {\n    const textDivStyle = Object.assign({}, style.textField, style.textDiv);\n    return <div className=\"dashboard-item-content\" style={style.container}>\n                <RichTextParser style={textDivStyle}>{text}</RichTextParser>\n            </div>;\n  };\n\n  const editItem = () => {\n    return <>\n                <ItemHeader title={i18n.t('Text item')} itemId={item.id} dashboardMode={dashboardMode} />\n                <Line />\n                <div className=\"dashboard-item-content\">\n                    <RichTextEditor onEdit={onChangeText}>\n                        <Input value={text} multiline fullWidth style={style.textField} placeholder={i18n.t('Add text here')} onChange={onChangeText} />\n                    </RichTextEditor>\n                </div>\n            </>;\n  };\n\n  return <>{isEditMode(dashboardMode) ? editItem() : viewItem()}</>;\n};\n\nconst mapStateToProps = (state, ownProps) => {\n  const isPrintPreview = sGetIsPrinting(state);\n  let items;\n\n  if (isPrintPreview) {\n    items = sGetPrintDashboardItems(state);\n  } else if (isEditMode(ownProps.dashboardMode)) {\n    items = sGetEditDashboardItems(state);\n  } else {\n    items = sGetDashboardItems(state);\n  }\n\n  const item = items.find(item => item.id === ownProps.item.id);\n  return {\n    text: item ? item.text : ''\n  };\n};\n\nTextItem.propTypes = {\n  acUpdateDashboardItem: PropTypes.func,\n  dashboardMode: PropTypes.string,\n  item: PropTypes.object,\n  text: PropTypes.string\n};\nexport default connect(mapStateToProps, {\n  acUpdateDashboardItem\n})(TextItem);","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport NotInterestedIcon from '@material-ui/icons/NotInterested';\nimport { FILTER_ORG_UNIT } from '../../../actions/itemFilters';\nimport { sGetItemFiltersRoot, DEFAULT_STATE_ITEM_FILTERS } from '../../../reducers/itemFilters';\nimport ItemHeader from '../ItemHeader/ItemHeader';\nimport Line from '../../../widgets/Line';\nimport { isEditMode } from '../../Dashboard/dashboardModes';\n\nconst getIframeSrc = (appDetails, item, itemFilters) => {\n  let iframeSrc = `${appDetails.launchUrl}?dashboardItemId=${item.id}`;\n\n  if (itemFilters && itemFilters[FILTER_ORG_UNIT] && itemFilters[FILTER_ORG_UNIT].length) {\n    const ouIds = itemFilters[FILTER_ORG_UNIT].map(ouPath => ouPath.split('/').slice(-1)[0]);\n    iframeSrc += `&userOrgUnit=${ouIds.join(',')}`;\n  }\n\n  return iframeSrc;\n};\n\nconst AppItem = ({\n  dashboardMode,\n  item,\n  itemFilters\n}, context) => {\n  let appDetails;\n  const appKey = item.appKey;\n\n  if (appKey) {\n    appDetails = context.d2.system.installedApps.find(app => app.key === appKey);\n  }\n\n  return appDetails && appDetails.name && appDetails.launchUrl ? <>\n            <ItemHeader title={appDetails.name} itemId={item.id} dashboardMode={dashboardMode} />\n            <Line />\n            <iframe title={appDetails.name} src={getIframeSrc(appDetails, item, itemFilters)} className=\"dashboard-item-content\" style={{\n      border: 'none'\n    }} />\n        </> : <>\n            <ItemHeader title={`${appKey} app not found`} />\n            <Line />\n            <div className=\"dashboard-item-content\" style={{\n      display: 'flex',\n      justifyContent: 'center',\n      alignItems: 'center',\n      height: '90%'\n    }}>\n                <NotInterestedIcon color=\"disabled\" disabled style={{\n        width: 100,\n        height: 100,\n        align: 'center'\n      }} />\n            </div>\n        </>;\n};\n\nAppItem.propTypes = {\n  dashboardMode: PropTypes.string,\n  item: PropTypes.object,\n  itemFilters: PropTypes.object\n};\nAppItem.contextTypes = {\n  d2: PropTypes.object\n};\n\nconst mapStateToProps = (state, ownProps) => {\n  const itemFilters = !isEditMode(ownProps.dashboardMode) ? sGetItemFiltersRoot(state) : DEFAULT_STATE_ITEM_FILTERS;\n  return {\n    itemFilters\n  };\n};\n\nexport default connect(mapStateToProps)(AppItem);","import React from 'react';\nimport PropTypes from 'prop-types';\nimport i18n from '@dhis2/d2-i18n';\nimport { colors } from '@dhis2/ui';\nimport ItemHeader from '../ItemHeader/ItemHeader';\nconst style = {\n  margin: '21px 28px',\n  fontSize: '14px',\n  lineHeight: '18px',\n  color: colors.grey600\n};\n\nconst SpacerItem = props => {\n  return <>\n            <ItemHeader title={i18n.t('Spacer')} itemId={props.item.id} dashboardMode={props.dashboardMode} />\n            <p style={style}>\n                {i18n.t('Use a spacer to create empty vertical space between other dashboard items.')}\n            </p>\n        </>;\n};\n\nSpacerItem.propTypes = {\n  dashboardMode: PropTypes.string,\n  item: PropTypes.object\n};\nexport default SpacerItem;","import React from 'react';\n\nconst PageBreakItem = () => <div />;\n\nexport default PageBreakItem;","import React from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport i18n from '@dhis2/d2-i18n';\nimport { orObject } from '../../../modules/util';\nimport { sGetSelectedId, sGetSelectedShowDescription } from '../../../reducers/selected';\nimport { sGetDashboardById } from '../../../reducers/dashboards';\nimport { sGetNamedItemFilters } from '../../../reducers/itemFilters';\nimport classes from './styles/Item.module.css';\n\nconst PrintTitlePageItem = ({\n  name,\n  description,\n  itemFilters,\n  showDescription\n}) => {\n  const getItemFilterList = () => {\n    const listItems = itemFilters.map(({\n      name,\n      values\n    }) => <li className={classes.filterListItem} key={name}>\n                {name}: {values.map(val => val.name).join(', ')}\n            </li>);\n    return <ul className={classes.filterList}>{listItems}</ul>;\n  };\n\n  return <div className={classes.titlePage}>\n            <p className={classes.name}>{name}</p>\n            {showDescription && description && <p className={classes.description}>{description}</p>}\n            {itemFilters.length > 0 && <>\n                    <p className={classes.filterTitle}>\n                        {i18n.t('Filters applied')}\n                    </p>\n                    {getItemFilterList()}\n                </>}\n        </div>;\n};\n\nPrintTitlePageItem.propTypes = {\n  description: PropTypes.string,\n  itemFilters: PropTypes.array,\n  name: PropTypes.string,\n  showDescription: PropTypes.bool\n};\nPrintTitlePageItem.defaultProps = {\n  description: '',\n  name: '',\n  showDescription: false\n};\n\nconst mapStateToProps = state => {\n  const id = sGetSelectedId(state);\n  const dashboard = orObject(sGetDashboardById(state, id));\n  return {\n    name: dashboard.displayName,\n    itemFilters: sGetNamedItemFilters(state),\n    description: dashboard.displayDescription,\n    showDescription: sGetSelectedShowDescription(state)\n  };\n};\n\nexport default connect(mapStateToProps)(PrintTitlePageItem);","import React from 'react';\nimport PropTypes from 'prop-types';\nimport VisualizationItem from './VisualizationItem/Item';\nimport MessagesItem from './MessagesItem/Item';\nimport NotSupportedItem from './NotSupportedItem/Item';\nimport ListItem from './ListItem/Item';\nimport TextItem from './TextItem/Item';\nimport AppItem from './AppItem/Item';\nimport SpacerItem from './SpacerItem/Item';\nimport PageBreakItem from './PageBreakItem/Item';\nimport PrintTitlePageItem from './PrintTitlePageItem/Item';\nimport { APP, VISUALIZATION, REPORT_TABLE, CHART, MAP, EVENT_CHART, EVENT_REPORT, MESSAGES, REPORTS, RESOURCES, USERS, TEXT, SPACER, PAGEBREAK, PRINT_TITLE_PAGE } from '../../modules/itemTypes';\n\nconst getGridItem = type => {\n  switch (type) {\n    case VISUALIZATION:\n    case REPORT_TABLE:\n    case CHART:\n    case MAP:\n    case EVENT_CHART:\n    case EVENT_REPORT:\n      return VisualizationItem;\n\n    case MESSAGES:\n      return MessagesItem;\n\n    case REPORTS:\n    case RESOURCES:\n    case USERS:\n      return ListItem;\n\n    case TEXT:\n      return TextItem;\n\n    case SPACER:\n      return SpacerItem;\n\n    case APP:\n      return AppItem;\n\n    case PAGEBREAK:\n      return PageBreakItem;\n\n    case PRINT_TITLE_PAGE:\n      return PrintTitlePageItem;\n\n    default:\n      return NotSupportedItem;\n  }\n};\n\nexport const Item = props => {\n  const GridItem = getGridItem(props.item.type);\n  return <GridItem item={props.item} dashboardMode={props.dashboardMode} onToggleItemExpanded={props.onToggleItemExpanded} />;\n};\nItem.propTypes = {\n  dashboardMode: PropTypes.string,\n  item: PropTypes.object,\n  onToggleItemExpanded: PropTypes.func\n};","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport debounce from 'lodash/debounce';\nimport pick from 'lodash/pick';\nconst defaultDebounceMs = 100;\nconst defaultBufferFactor = 0.25;\n\nclass ProgressiveLoadingContainer extends Component {\n  static propTypes = {\n    children: PropTypes.node.isRequired,\n    bufferFactor: PropTypes.number,\n    className: PropTypes.string,\n    debounceMs: PropTypes.number,\n    style: PropTypes.object\n  };\n  static defaultProps = {\n    debounceMs: defaultDebounceMs,\n    bufferFactor: defaultBufferFactor\n  };\n  state = {\n    shouldLoad: false\n  };\n  containerRef = null;\n  shouldLoadHandler = null;\n\n  checkShouldLoad() {\n    const bufferPx = this.props.bufferFactor * window.innerHeight;\n\n    if (!this.containerRef) {\n      return;\n    }\n\n    const rect = this.containerRef.getBoundingClientRect();\n\n    if (rect.bottom > -bufferPx && rect.top < window.innerHeight + bufferPx) {\n      this.setState({\n        shouldLoad: true\n      });\n      this.removeHandler();\n    }\n  }\n\n  registerHandler() {\n    this.shouldLoadHandler = debounce(() => this.checkShouldLoad(), this.props.debounceMs);\n    const containers = [window, // this is probably unnecessary\n    ...document.getElementsByClassName('app-shell-app')];\n    containers.forEach(container => {\n      container.addEventListener('scroll', this.shouldLoadHandler);\n    });\n  }\n\n  removeHandler() {\n    const containers = [window, // this is probably unnecessary\n    ...document.getElementsByClassName('app-shell-app')];\n    containers.forEach(container => {\n      container.removeEventListener('scroll', this.shouldLoadHandler);\n    });\n  }\n\n  componentDidMount() {\n    this.registerHandler();\n    this.checkShouldLoad();\n  }\n\n  componentWillUnmount() {\n    this.removeHandler();\n  }\n\n  render() {\n    const {\n      children,\n      className,\n      style,\n      ...props\n    } = this.props;\n    const {\n      shouldLoad\n    } = this.state;\n    const eventProps = pick(props, ['onMouseDown', 'onTouchStart', 'onMouseUp', 'onTouchEnd']);\n    return <div ref={ref => this.containerRef = ref} style={style} className={className} {...eventProps}>\n                {shouldLoad && children}\n            </div>;\n  }\n\n}\n\nexport default ProgressiveLoadingContainer;","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport i18n from '@dhis2/d2-i18n';\nimport ReactGridLayout from 'react-grid-layout';\nimport { Layer, CenteredContent, CircularLoader } from '@dhis2/ui';\nimport { acUpdateDashboardLayout } from '../../actions/editDashboard';\nimport { Item } from '../Item/Item';\nimport { resize as pluginResize } from '../Item/VisualizationItem/plugin';\nimport { isVisualizationType } from '../../modules/itemTypes';\nimport { GRID_ROW_HEIGHT, GRID_COMPACT_TYPE, MARGIN, getGridColumns, hasShape, onItemResize } from './gridUtil';\nimport { orArray } from '../../modules/util';\nimport NoContentMessage from '../../widgets/NoContentMessage';\nimport 'react-grid-layout/css/styles.css';\nimport 'react-resizable/css/styles.css';\nimport './ItemGrid.css';\nimport { sGetSelectedId, sGetSelectedIsLoading } from '../../reducers/selected';\nimport { sGetEditDashboardRoot, sGetEditDashboardItems } from '../../reducers/editDashboard';\nimport { sGetDashboardById, sGetDashboardItems } from '../../reducers/dashboards';\nimport ProgressiveLoadingContainer from '../Item/ProgressiveLoadingContainer';\nimport { VIEW, EDIT } from '../Dashboard/dashboardModes'; // Component\n\nconst EXPANDED_HEIGHT = 17; // this is set in the .dashboard-item-content css\n\nexport const ITEM_CONTENT_PADDING_BOTTOM = 4;\nexport class ItemGrid extends Component {\n  state = {\n    expandedItems: {}\n  };\n  onToggleItemExpanded = clickedId => {\n    const isExpanded = typeof this.state.expandedItems[clickedId] === 'boolean' ? this.state.expandedItems[clickedId] : false;\n    const expandedItems = { ...this.state.expandedItems\n    };\n    expandedItems[clickedId] = !isExpanded;\n    this.setState({\n      expandedItems\n    });\n  };\n\n  componentWillReceiveProps(nextProps) {\n    if (nextProps.edit) {\n      this.setState({\n        expandedItems: {}\n      });\n    }\n  }\n\n  onLayoutChange = newLayout => {\n    if (this.props.edit) {\n      this.props.acUpdateDashboardLayout(newLayout);\n    }\n  };\n  onResizeStop = (layout, oldItem, newItem) => {\n    onItemResize(newItem.i);\n    const dashboardItem = this.props.dashboardItems.find(item => item.id === newItem.i); // call resize on the item component if it's a plugin type\n\n    if (dashboardItem && isVisualizationType(dashboardItem)) {\n      pluginResize(dashboardItem);\n    }\n  };\n  adjustHeightForExpanded = dashboardItem => {\n    const expandedItem = this.state.expandedItems[dashboardItem.id];\n\n    if (expandedItem && expandedItem === true) {\n      return Object.assign({}, dashboardItem, {\n        h: dashboardItem.h + EXPANDED_HEIGHT\n      });\n    }\n\n    return dashboardItem;\n  };\n  getItemComponent = item => {\n    const itemClassNames = [item.type, this.props.edit ? 'edit' : 'view'].join(' ');\n    return <ProgressiveLoadingContainer key={item.i} className={itemClassNames}>\n                <Item item={item} dashboardMode={this.props.edit ? EDIT : VIEW} onToggleItemExpanded={this.onToggleItemExpanded} />\n            </ProgressiveLoadingContainer>;\n  };\n  getItemComponents = items => items.map(item => this.getItemComponent(item));\n\n  render() {\n    const {\n      edit,\n      isLoading,\n      dashboardItems\n    } = this.props;\n\n    if (!isLoading && !dashboardItems.length) {\n      return <NoContentMessage text={i18n.t('There are no items on this dashboard')} />;\n    }\n\n    const items = edit ? dashboardItems : dashboardItems.map(this.adjustHeightForExpanded);\n    return <div className=\"grid-wrapper\">\n                {isLoading ? <Layer translucent>\n                        <CenteredContent>\n                            <CircularLoader />\n                        </CenteredContent>\n                    </Layer> : null}\n                <ReactGridLayout onLayoutChange={this.onLayoutChange} onResizeStop={this.onResizeStop} className=\"layout\" layout={items} margin={MARGIN} cols={getGridColumns()} rowHeight={GRID_ROW_HEIGHT} width={window.innerWidth} compactType={GRID_COMPACT_TYPE} isDraggable={edit} isResizable={edit} draggableCancel=\"input,textarea\">\n                    {this.getItemComponents(items)}\n                </ReactGridLayout>\n            </div>;\n  }\n\n}\nItemGrid.propTypes = {\n  acUpdateDashboardLayout: PropTypes.func,\n  dashboardItems: PropTypes.array,\n  edit: PropTypes.bool,\n  isLoading: PropTypes.bool\n};\nItemGrid.defaultProps = {\n  dashboardItems: []\n}; // Container\n\nconst mapStateToProps = (state, ownProps) => {\n  const selectedDashboard = ownProps.edit ? sGetEditDashboardRoot(state) : sGetDashboardById(state, sGetSelectedId(state));\n  const dashboardItems = ownProps.edit ? sGetEditDashboardItems(state) : sGetDashboardItems(state);\n  return {\n    isLoading: sGetSelectedIsLoading(state) || !selectedDashboard,\n    dashboardItems\n  };\n};\n\nconst mapDispatchToProps = {\n  acUpdateDashboardLayout\n};\n\nconst mergeProps = (stateProps, dispatchProps, ownProps) => {\n  const validItems = orArray(stateProps.dashboardItems).filter(hasShape);\n  return { ...dispatchProps,\n    edit: ownProps.edit,\n    isLoading: stateProps.isLoading,\n    dashboardItems: validItems,\n    onItemResize\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps, mergeProps)(ItemGrid);","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport i18n from '@dhis2/d2-i18n';\nimport { colors } from '@dhis2/ui';\nconst styles = {\n  badgeContainer: {\n    margin: '2px',\n    padding: '0 16px',\n    borderRadius: '4px',\n    color: colors.white,\n    backgroundColor: '#212934',\n    height: 36,\n    display: 'flex',\n    alignItems: 'center'\n  },\n  badge: {\n    fontSize: '13px',\n    cursor: 'pointer',\n    whiteSpace: 'nowrap'\n  },\n  badgeRemove: {\n    fontSize: '12px',\n    textDecoration: 'underline',\n    marginLeft: '24px',\n    cursor: 'pointer'\n  }\n};\n\nclass FilterBadge extends Component {\n  onClick = id => () => this.props.onClick(id);\n  onRemove = id => () => this.props.onRemove(id);\n\n  render() {\n    const {\n      data\n    } = this.props;\n    return <div style={styles.badgeContainer}>\n                <span style={styles.badge} onClick={this.onClick(data.id)}>\n                    {`${data.name}: ${data.values.length > 1 ? i18n.t('{{count}} selected', {\n          count: data.values.length\n        }) : data.values[0].name}`}\n                </span>\n                <span style={styles.badgeRemove} onClick={this.onRemove(data.id)}>\n                    {i18n.t('Remove')}\n                </span>\n            </div>;\n  }\n\n}\n\nFilterBadge.propTypes = {\n  data: PropTypes.object.isRequired,\n  onClick: PropTypes.func.isRequired,\n  onRemove: PropTypes.func.isRequired\n};\nFilterBadge.defaultProps = {\n  onClick: Function.prototype,\n  onRemove: Function.prototype\n};\nexport default FilterBadge;","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport FilterBadge from './FilterBadge';\nimport { sGetNamedItemFilters } from '../../reducers/itemFilters';\nimport { sGetControlBarUserRows } from '../../reducers/controlBar';\nimport { getControlBarHeight } from '../ControlBar/controlBarDimensions';\nimport { acRemoveItemFilter } from '../../actions/itemFilters';\nimport { acSetActiveModalDimension } from '../../actions/activeModalDimension';\nimport classes from './styles/FilterBar.module.css';\nexport class FilterBar extends Component {\n  onBadgeRemove = id => {\n    this.props.removeItemFilter(id);\n  };\n  onBadgeClick = id => {\n    this.props.setActiveModalDimension({\n      id,\n      name: this.props.filters.find(item => item.id === id).name\n    });\n  };\n\n  render() {\n    const {\n      filters,\n      userRows\n    } = this.props;\n    const top = getControlBarHeight(userRows) + 10;\n    return filters.length ? <div className={classes.bar} style={{\n      top\n    }}>\n                {filters.map(filter => <FilterBadge key={filter.id} data={filter} onClick={this.onBadgeClick} onRemove={this.onBadgeRemove} />)}\n            </div> : null;\n  }\n\n}\nFilterBar.propTypes = {\n  filters: PropTypes.array.isRequired,\n  removeItemFilter: PropTypes.func.isRequired,\n  setActiveModalDimension: PropTypes.func,\n  userRows: PropTypes.number\n};\nFilterBar.defaultProps = {\n  filters: [],\n  removeItemFIlter: Function.prototype\n};\n\nconst mapStateToProps = state => ({\n  filters: sGetNamedItemFilters(state),\n  userRows: sGetControlBarUserRows(state)\n});\n\nexport default connect(mapStateToProps, {\n  setActiveModalDimension: acSetActiveModalDimension,\n  removeItemFilter: acRemoveItemFilter\n})(FilterBar);","import { generateUid } from 'd2/uid';\nimport { SET_PRINT_DASHBOARD, CLEAR_PRINT_DASHBOARD, SET_PRINT_DASHBOARD_LAYOUT, ADD_PRINT_DASHBOARD_ITEM, REMOVE_PRINT_DASHBOARD_ITEM, UPDATE_PRINT_DASHBOARD_ITEM } from '../reducers/printDashboard';\nimport { NEW_ITEM_SHAPE, getGridItemProperties, getPageBreakItemShape, getPrintTitlePageItemShape } from '../components/ItemGrid/gridUtil';\nimport { itemTypeMap, PAGEBREAK } from '../modules/itemTypes'; // actions\n\nexport const acSetPrintDashboard = (dashboard, items) => {\n  const val = { ...dashboard,\n    dashboardItems: items\n  };\n  return {\n    type: SET_PRINT_DASHBOARD,\n    value: val\n  };\n};\nexport const acClearPrintDashboard = () => ({\n  type: CLEAR_PRINT_DASHBOARD\n});\nexport const acUpdatePrintDashboardLayout = value => ({\n  type: SET_PRINT_DASHBOARD_LAYOUT,\n  value\n});\nexport const acAddPrintDashboardItem = item => {\n  const type = item.type;\n  delete item.type;\n  const itemPropName = itemTypeMap[type].propName;\n  const id = generateUid();\n  const gridItemProperties = getGridItemProperties(id);\n  let shape;\n\n  if (type === PAGEBREAK) {\n    const yPos = item.yPos || 0;\n    shape = getPageBreakItemShape(yPos, item.isStatic);\n  } else {\n    shape = getPrintTitlePageItemShape();\n  }\n\n  return {\n    type: ADD_PRINT_DASHBOARD_ITEM,\n    value: {\n      id,\n      type,\n      position: item.position || null,\n      [itemPropName]: item.content,\n      ...NEW_ITEM_SHAPE,\n      ...gridItemProperties,\n      ...shape\n    }\n  };\n};\nexport const acRemovePrintDashboardItem = value => ({\n  type: REMOVE_PRINT_DASHBOARD_ITEM,\n  value\n});\nexport const acUpdatePrintDashboardItem = item => ({\n  type: UPDATE_PRINT_DASHBOARD_ITEM,\n  value: item\n});","import React, { useEffect } from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport TitleBar from '../TitleBar/TitleBar';\nimport ItemGrid from '../ItemGrid/ItemGrid';\nimport FilterBar from '../FilterBar/FilterBar';\nimport DashboardsBar from '../ControlBar/DashboardsBar';\nimport DashboardVerticalOffset from './DashboardVerticalOffset';\nimport { sGetIsEditing } from '../../reducers/editDashboard';\nimport { sGetIsPrinting } from '../../reducers/printDashboard';\nimport { acClearEditDashboard } from '../../actions/editDashboard';\nimport { acClearPrintDashboard } from '../../actions/printDashboard';\nexport const ViewDashboard = props => {\n  useEffect(() => {\n    if (props.dashboardIsEditing) {\n      props.clearEditDashboard();\n    } else if (props.dashboardIsPrinting) {\n      props.clearPrintDashboard();\n    }\n  }, [props.dashboardIsEditing, props.dashboardIsPrinting]);\n  return <>\n            <DashboardsBar />\n            <DashboardVerticalOffset />\n            <div className=\"dashboard-wrapper\">\n                <TitleBar edit={false} />\n                <FilterBar />\n                <ItemGrid edit={false} />\n            </div>\n        </>;\n};\nViewDashboard.propTypes = {\n  clearEditDashboard: PropTypes.func,\n  clearPrintDashboard: PropTypes.func,\n  dashboardIsEditing: PropTypes.bool,\n  dashboardIsPrinting: PropTypes.bool\n};\n\nconst mapStateToProps = state => {\n  return {\n    dashboardIsEditing: sGetIsEditing(state),\n    dashboardIsPrinting: sGetIsPrinting(state)\n  };\n};\n\nexport default connect(mapStateToProps, {\n  clearEditDashboard: acClearEditDashboard,\n  clearPrintDashboard: acClearPrintDashboard\n})(ViewDashboard);","import React from 'react';\nimport PropTypes from 'prop-types';\nimport i18n from '@dhis2/d2-i18n';\nimport { Button, Modal, ModalContent, ModalActions, ButtonStrip, ModalTitle } from '@dhis2/ui';\nimport classes from './styles/ConfirmDeleteDialog.module.css';\nexport const ConfirmDeleteDialog = ({\n  dashboardName,\n  onDeleteConfirmed,\n  onContinueEditing,\n  open\n}) => {\n  const actions = [<Button key=\"cancel\" secondary onClick={onContinueEditing}>\n            {i18n.t('Cancel')}\n        </Button>, <Button key=\"delete\" destructive onClick={onDeleteConfirmed}>\n            {i18n.t('Delete')}\n        </Button>];\n  return open && <Modal onClose={onContinueEditing} small position=\"middle\">\n                <ModalTitle>{i18n.t('Delete dashboard')}</ModalTitle>\n                <ModalContent>\n                    <span className={classes.content}>\n                        {i18n.t('Deleting dashboard \"{{ dashboardName }}\" will remove it for all users. This action cannot be undone. Are you sure you want to permanently delete this dashboard?', {\n          dashboardName\n        })}\n                    </span>\n                </ModalContent>\n                <ModalActions>\n                    <ButtonStrip>{actions}</ButtonStrip>\n                </ModalActions>\n            </Modal>;\n};\nConfirmDeleteDialog.propTypes = {\n  dashboardName: PropTypes.string,\n  open: PropTypes.bool,\n  onContinueEditing: PropTypes.func,\n  onDeleteConfirmed: PropTypes.func\n};\nexport default ConfirmDeleteDialog;","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { Redirect } from 'react-router-dom';\nimport i18n from '@dhis2/d2-i18n';\nimport ControlBar from './ControlBar';\nimport TranslationDialog from '@dhis2/d2-ui-translation-dialog';\nimport { Button, ButtonStrip } from '@dhis2/ui';\nimport ConfirmDeleteDialog from './ConfirmDeleteDialog';\nimport { tSaveDashboard, acClearEditDashboard } from '../../actions/editDashboard';\nimport { acClearPrintDashboard } from '../../actions/printDashboard';\nimport { tDeleteDashboard, acSetDashboardDisplayName } from '../../actions/dashboards';\nimport { sGetEditDashboardRoot, sGetIsNewDashboard, sGetIsPrintPreviewView } from '../../reducers/editDashboard';\nimport { acSetPrintPreviewView, acClearPrintPreviewView } from '../../actions/editDashboard';\nimport { CONTROL_BAR_ROW_HEIGHT, MIN_ROW_COUNT, getControlBarHeight } from './controlBarDimensions';\nimport { apiFetchDashboard } from '../../api/dashboards';\nimport classes from './styles/DashboardsBar.module.css';\nconst buttonBarStyle = {\n  height: CONTROL_BAR_ROW_HEIGHT,\n  paddingTop: '15px',\n  marginLeft: '15px',\n  marginRight: '15px'\n};\nexport class EditBar extends Component {\n  state = {\n    translationDialogIsOpen: false,\n    dashboardModel: undefined,\n    confirmDeleteDialogOpen: false,\n    redirectUrl: undefined\n  };\n  onConfirmDelete = () => {\n    this.setState({\n      confirmDeleteDialogOpen: true\n    });\n  };\n  onSave = () => {\n    this.props.onSave().then(newId => {\n      this.setState({\n        redirectUrl: `/${newId}`\n      });\n    });\n  };\n  onPrintPreview = () => {\n    if (this.props.isPrintPreviewView) {\n      this.props.clearPrintPreview();\n      this.props.clearPrintDashboard();\n    } else {\n      this.props.showPrintPreview();\n    }\n  };\n  onDiscard = () => {\n    this.props.onDiscardChanges();\n    const redirectUrl = this.props.dashboardId ? `/${this.props.dashboardId}` : '/';\n    this.setState({\n      redirectUrl\n    });\n  };\n  onContinueEditing = () => {\n    this.setState({\n      confirmDeleteDialogOpen: false\n    });\n  };\n  onDeleteConfirmed = () => {\n    this.setState({\n      confirmDeleteDialogOpen: false\n    });\n    this.props.onDelete(this.props.dashboardId).then(() => {\n      this.setState({\n        redirectUrl: '/'\n      });\n    });\n  };\n  onTranslationsSaved = async translations => {\n    if (translations && translations.length) {\n      const dbLocale = await this.context.d2.currentUser.userSettings.get('keyDbLocale');\n      const translation = translations.find(t => t.locale === dbLocale && t.property === 'NAME');\n\n      if (translation && translation.value) {\n        this.props.onTranslate(this.props.dashboardId, translation.value);\n      }\n    }\n  };\n  fetchDashboardModel = () => {\n    if (this.props.dashboardId && !this.state.dashboardModel) {\n      apiFetchDashboard(this.props.dashboardId).then(dashboardModel => this.setState({\n        dashboardModel\n      }));\n    }\n  };\n\n  componentDidMount() {\n    this.fetchDashboardModel();\n  }\n\n  componentDidUpdate() {\n    this.fetchDashboardModel();\n  }\n\n  toggleTranslationDialog = () => {\n    this.setState({\n      translationDialogIsOpen: !this.state.translationDialogIsOpen\n    });\n  };\n  confirmDeleteDialog = () => this.props.deleteAccess && this.props.dashboardId ? <ConfirmDeleteDialog dashboardName={this.props.dashboardName} onDeleteConfirmed={this.onDeleteConfirmed} onContinueEditing={this.onContinueEditing} open={this.state.confirmDeleteDialogOpen} /> : null;\n  translationDialog = () => this.state.dashboardModel && this.state.dashboardModel.id ? <TranslationDialog className=\"translation-dialog\" d2={this.context.d2} open={this.state.translationDialogIsOpen} onRequestClose={this.toggleTranslationDialog} objectToTranslate={this.state.dashboardModel} fieldsToTranslate={['name', 'description']} // TODO handle messages in snackbar\n  onTranslationSaved={this.onTranslationsSaved} onTranslationError={err => console.log('translation update error', err)} /> : null;\n  renderActionButtons = () => {\n    const printPreviewText = this.props.isPrintPreviewView ? i18n.t('Exit Print preview') : i18n.t('Print preview');\n    return <div className={classes.leftControls}>\n                <ButtonStrip>\n                    <Button primary onClick={this.onSave}>\n                        {i18n.t('Save changes')}\n                    </Button>\n                    <Button onClick={this.onPrintPreview}>\n                        {printPreviewText}\n                    </Button>\n\n                    {this.props.dashboardId ? <Button onClick={this.toggleTranslationDialog}>\n                            {i18n.t('Translate')}\n                        </Button> : null}\n                    {this.props.dashboardId && this.props.deleteAccess ? <Button onClick={this.onConfirmDelete}>\n                            {i18n.t('Delete')}\n                        </Button> : null}\n                </ButtonStrip>\n            </div>;\n  };\n\n  render() {\n    if (this.state.redirectUrl) {\n      return <Redirect to={this.state.redirectUrl} />;\n    }\n\n    const {\n      updateAccess\n    } = this.props;\n    const controlBarHeight = getControlBarHeight(MIN_ROW_COUNT);\n    const discardBtnText = updateAccess ? i18n.t('Exit without saving') : i18n.t('Go to dashboards');\n    return <>\n                <ControlBar height={controlBarHeight} editMode={true}>\n                    <div style={buttonBarStyle}>\n                        {updateAccess ? this.renderActionButtons() : null}\n\n                        <div className={classes.rightControls}>\n                            <Button secondary onClick={this.onDiscard}>\n                                {discardBtnText}\n                            </Button>\n                        </div>\n                    </div>\n                </ControlBar>\n                {this.translationDialog()}\n                {this.confirmDeleteDialog()}\n            </>;\n  }\n\n}\nEditBar.propTypes = {\n  clearPrintDashboard: PropTypes.func,\n  clearPrintPreview: PropTypes.func,\n  dashboardId: PropTypes.string,\n  dashboardName: PropTypes.string,\n  deleteAccess: PropTypes.bool,\n  isPrintPreviewView: PropTypes.bool,\n  showPrintPreview: PropTypes.func,\n  updateAccess: PropTypes.bool,\n  onDelete: PropTypes.func,\n  onDiscardChanges: PropTypes.func,\n  onSave: PropTypes.func,\n  onTranslate: PropTypes.func\n};\nEditBar.contextTypes = {\n  d2: PropTypes.object\n};\n\nconst mapStateToProps = state => {\n  const dashboard = sGetEditDashboardRoot(state);\n  let deleteAccess;\n  let updateAccess;\n\n  if (sGetIsNewDashboard(state)) {\n    deleteAccess = true;\n    updateAccess = true;\n  } else {\n    updateAccess = dashboard.access ? dashboard.access.update : false;\n    deleteAccess = dashboard.access ? dashboard.access.delete : false;\n  }\n\n  return {\n    dashboardId: dashboard.id,\n    dashboardName: dashboard.name,\n    deleteAccess,\n    isPrintPreviewView: sGetIsPrintPreviewView(state),\n    updateAccess\n  };\n};\n\nconst mapDispatchToProps = dispatch => ({\n  clearPrintDashboard: () => dispatch(acClearPrintDashboard()),\n  clearPrintPreview: () => dispatch(acClearPrintPreviewView()),\n  onSave: () => dispatch(tSaveDashboard()).then(id => id),\n  onDelete: id => dispatch(tDeleteDashboard(id)),\n  onDiscardChanges: () => dispatch(acClearEditDashboard()),\n  onTranslate: (id, value) => dispatch(acSetDashboardDisplayName(id, value)),\n  showPrintPreview: () => dispatch(acSetPrintPreviewView())\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(EditBar);","import React from 'react';\nimport PropTypes from 'prop-types';\nimport i18n from '@dhis2/d2-i18n';\nimport { a4LandscapeWidthPx } from '../../modules/printUtils';\nimport classes from './styles/PrintInfo.module.css';\n\nconst PrintInfo = ({\n  isLayout\n}) => {\n  const maxWidth = a4LandscapeWidthPx < window.innerWidth ? a4LandscapeWidthPx : window.innerWidth;\n  const infoPartOne = isLayout ? i18n.t('The pages below are a preview of how the dashboard layout will be printed.') : i18n.t('The pages below are a preview of how each dashboard item will be printed on a separate page.');\n  const infoPartTwo = i18n.t('Use the default printer settings for best results and check that all dashboard items have finished loading before printing. This text will not be printed.');\n  const infoHeader = isLayout ? i18n.t('dashboard layout') : i18n.t('one item per page');\n  return <div className={classes.infoWrapper}>\n            <p className={classes.infoHeader}>\n                {`${i18n.t('Print Preview')}: ${infoHeader}`}\n            </p>\n            <div style={{\n      maxWidth\n    }}>\n                <p className={classes.info}>{`${infoPartOne} ${infoPartTwo}`}</p>\n            </div>\n            <hr className={classes.divider} />\n        </div>;\n};\n\nPrintInfo.propTypes = {\n  isLayout: PropTypes.bool\n};\nexport default PrintInfo;","import sortBy from 'lodash/sortBy';\nimport { orArray } from './util';\nimport { itemTypeMap } from './itemTypes'; // for A4 landscape (297x210mm)\n// 794 px = (21cm / 2.54) * 96 pixels/inch\n// 1122 px = 29.7 /2.54 * 96 pixels/inch\n// const a4LandscapeHeightPx = 794\n\nexport const a4LandscapeWidthPx = 1102;\nexport const getDomGridItemsSortedByYPos = elements => {\n  const types = Object.keys(itemTypeMap);\n  const elementsWithBoundingRect = orArray(elements).map(el => {\n    const type = Array.from(el.classList).find(className => types.indexOf(className) > -1);\n    const rect = el.getBoundingClientRect();\n    const y = el.style.transform ? parseInt(el.style.transform?.split(' ')[1]?.slice(0, -3)) : parseInt(rect.y);\n    return {\n      type,\n      classList: el.classList,\n      bottomY: y + parseInt(rect.height),\n      el\n    };\n  });\n  return sortBy(elementsWithBoundingRect, ['bottomY']);\n};","import React from 'react';\nimport { colors } from '@dhis2/ui';\n\nconst LessHorizontalIcon = () => <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" fill={colors.grey600} viewBox=\"0 0 24 24\">\n        <path d=\"m13.2928932 6.29289322c.3905243-.39052429 1.0236893-.39052429 1.4142136 0 .3604839.36048396.3882135.92771502.0831886 1.32000622l-.0831886.09420734-4.2921068 4.29289322 4.2921068 4.2928932c.3604839.360484.3882135.927715.0831886 1.3200062l-.0831886.0942074c-.360484.3604839-.927715.3882135-1.3200062.0831886l-.0942074-.0831886-4.99999998-5c-.36048396-.360484-.3882135-.927715-.08318861-1.3200062l.08318861-.0942074z\" />\n    </svg>;\n\nexport default LessHorizontalIcon;","import React from 'react';\nimport PropTypes from 'prop-types';\nimport i18n from '@dhis2/d2-i18n';\nimport { Button } from '@dhis2/ui';\nimport { Link } from 'react-router-dom';\nimport LessHorizontalIcon from '../../icons/LessHorizontal';\nimport { a4LandscapeWidthPx } from '../../modules/printUtils';\nimport classes from './styles/PrintActionsBar.module.css';\n\nconst PrintActionsBar = ({\n  id\n}) => {\n  const width = a4LandscapeWidthPx < window.innerWidth ? a4LandscapeWidthPx : window.innerWidth;\n  return <div className={classes.container}>\n            <div className={classes.inner} style={{\n      width\n    }}>\n                <Link className={classes.link} to={`/${id}`}>\n                    <Button>\n                        <LessHorizontalIcon />\n                        {i18n.t('Exit print preview')}\n                    </Button>\n                </Link>\n                <Button onClick={window.print}>{i18n.t('Print')}</Button>\n            </div>\n        </div>;\n};\n\nPrintActionsBar.propTypes = {\n  id: PropTypes.string\n};\nexport default PrintActionsBar;","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport i18n from '@dhis2/d2-i18n';\nimport ReactGridLayout from 'react-grid-layout';\nimport { Layer, CenteredContent, CircularLoader } from '@dhis2/ui';\nimport { Item } from '../Item/Item';\nimport NoContentMessage from '../../widgets/NoContentMessage';\nimport { acUpdatePrintDashboardLayout } from '../../actions/printDashboard';\nimport { sGetSelectedIsLoading } from '../../reducers/selected';\nimport { sGetPrintDashboardRoot, sGetPrintDashboardItems } from '../../reducers/printDashboard';\nimport { GRID_ROW_HEIGHT, GRID_COMPACT_TYPE, MARGIN, getGridColumns, hasShape } from './gridUtil';\nimport { a4LandscapeWidthPx, getDomGridItemsSortedByYPos } from '../../modules/printUtils';\nimport { PRINT_LAYOUT } from '../Dashboard/dashboardModes';\nimport { PAGEBREAK } from '../../modules/itemTypes';\nimport 'react-grid-layout/css/styles.css';\nimport 'react-resizable/css/styles.css';\nimport './ItemGrid.css'; // this is set in the .dashboard-item-content css\n\nexport const ITEM_CONTENT_PADDING_BOTTOM = 4;\nexport class PrintLayoutItemGrid extends Component {\n  onLayoutChange = newLayout => {\n    this.props.updateDashboardLayout(newLayout);\n  };\n  getItemComponent = item => {\n    const itemClassNames = [item.type, 'print', 'layout'].join(' ');\n    return <div key={item.i} className={itemClassNames}>\n                <Item item={item} dashboardMode={PRINT_LAYOUT} />\n            </div>;\n  };\n  getItemComponents = items => items.map(item => this.getItemComponent(item));\n\n  hideExtraPageBreaks() {\n    const sortedElements = getDomGridItemsSortedByYPos(Array.from(document.querySelectorAll('.react-grid-item')));\n    let pageBreakBottom = 0;\n    let lastItemBottom = 0;\n    let foundNonPageBreak = false;\n\n    for (let i = sortedElements.length - 1; i >= 0; --i) {\n      const item = sortedElements[i];\n\n      if (item.type === PAGEBREAK) {\n        if (!foundNonPageBreak) {\n          item.el.classList.add('removed');\n        } else {\n          pageBreakBottom = item.bottomY;\n          break;\n        }\n      } else {\n        foundNonPageBreak = true;\n        const thisItemBottom = item.bottomY;\n\n        if (thisItemBottom > lastItemBottom) {\n          lastItemBottom = thisItemBottom;\n        }\n      }\n    }\n\n    const pageHeight = 720;\n    const gridElement = document.querySelector('.react-grid-layout');\n    const maxHeight = pageBreakBottom + pageHeight;\n\n    if (maxHeight < lastItemBottom) {\n      // there is a problem - this should not happen\n      console.log('jj PROBLEM! items extend beyond page bottom', maxHeight, '<', lastItemBottom);\n    }\n\n    if (gridElement) {\n      gridElement.style.height = `${maxHeight}px`;\n    }\n  }\n\n  componentDidMount() {\n    this.hideExtraPageBreaks();\n  }\n\n  componentDidUpdate() {\n    this.hideExtraPageBreaks();\n  }\n\n  render() {\n    const {\n      isLoading,\n      dashboardItems\n    } = this.props;\n\n    if (!isLoading && !dashboardItems.length) {\n      return <NoContentMessage text={i18n.t('There are no items on this dashboard')} />;\n    }\n\n    const width = a4LandscapeWidthPx < window.innerWidth ? a4LandscapeWidthPx : window.innerWidth;\n    return <div className=\"grid-wrapper\">\n                {isLoading ? <Layer translucent>\n                        <CenteredContent>\n                            <CircularLoader />\n                        </CenteredContent>\n                    </Layer> : null}\n                <ReactGridLayout onLayoutChange={this.onLayoutChange} className=\"layout\" layout={dashboardItems} margin={MARGIN} cols={getGridColumns()} rowHeight={GRID_ROW_HEIGHT} width={width} compactType={GRID_COMPACT_TYPE} isDraggable={false} isResizable={false} draggableCancel=\"input,textarea\">\n                    {this.getItemComponents(dashboardItems)}\n                </ReactGridLayout>\n            </div>;\n  }\n\n}\nPrintLayoutItemGrid.propTypes = {\n  dashboardItems: PropTypes.array,\n  isLoading: PropTypes.bool,\n  updateDashboardLayout: PropTypes.func\n};\nPrintLayoutItemGrid.defaultProps = {\n  dashboardItems: []\n};\n\nconst mapStateToProps = state => {\n  const selectedDashboard = sGetPrintDashboardRoot(state);\n  return {\n    isLoading: sGetSelectedIsLoading(state) || !selectedDashboard,\n    dashboardItems: sGetPrintDashboardItems(state).filter(hasShape)\n  };\n};\n\nexport default connect(mapStateToProps, {\n  updateDashboardLayout: acUpdatePrintDashboardLayout\n})(PrintLayoutItemGrid);","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport PrintInfo from './PrintInfo';\nimport PrintActionsBar from './PrintActionsBar';\nimport PrintLayoutItemGrid from '../ItemGrid/PrintLayoutItemGrid';\nimport { acSetPrintDashboard, acAddPrintDashboardItem, acUpdatePrintDashboardItem } from '../../actions/printDashboard';\nimport { sGetSelectedId } from '../../reducers/selected';\nimport { sGetEditDashboardRoot, sGetEditDashboardItems } from '../../reducers/editDashboard';\nimport { sGetDashboardById, sGetDashboardItems } from '../../reducers/dashboards';\nimport { PAGEBREAK, PRINT_TITLE_PAGE } from '../../modules/itemTypes';\nimport { a4LandscapeWidthPx } from '../../modules/printUtils';\nimport classes from './styles/PrintLayoutDashboard.module.css';\nimport './styles/print.css';\nimport './styles/print-layout.css';\n\nconst isEven = n => n % 2 == 0;\n\nconst addPageBreaks = ({\n  items,\n  addDashboardItem\n}) => {\n  // add enough page breaks so that each item could\n  // be put on its own page. Due to the react-grid-layout\n  // unit system, we have to estimate roughly the size of each\n  // page. At regular intervals adding an extra unit, like a leap year :P\n  let yPos = 0;\n  const yPosList = [];\n\n  for (let i = 0; i < items.length; ++i) {\n    if (i === 0) {\n      yPos += 35;\n    } else if (i === 4 || i === 10) {\n      yPos += 40;\n    } else if (isEven(i)) {\n      yPos += 39;\n    } else {\n      yPos += 40;\n    }\n\n    yPosList.push(yPos);\n  }\n\n  for (let i = 0; i < items.length; ++i) {\n    addDashboardItem({\n      type: PAGEBREAK,\n      yPos: yPosList[i]\n    });\n  }\n};\n\nexport class PrintLayoutDashboard extends Component {\n  state = {\n    initialized: false\n  };\n  initPrintLayoutDashboard = () => {\n    if (this.props.dashboard) {\n      this.setState({\n        initialized: true\n      });\n      this.props.setPrintDashboard(this.props.dashboard, this.props.items); // If any items are taller than one page, reduce it to one\n      // page (react-grid-layout units)\n\n      this.props.items.forEach(item => {\n        if (item.h > 34) {\n          this.props.updateDashboardItem(Object.assign({}, item, {\n            h: 34\n          }));\n        }\n      });\n      addPageBreaks(this.props);\n\n      if (!this.props.fromEdit) {\n        this.props.addDashboardItem({\n          type: PRINT_TITLE_PAGE\n        });\n      }\n    }\n  };\n\n  componentDidMount() {\n    this.initPrintLayoutDashboard();\n  }\n\n  componentDidUpdate() {\n    if (!this.state.initialized) {\n      this.initPrintLayoutDashboard();\n    }\n  }\n\n  render() {\n    const style = this.props.fromEdit ? {\n      marginTop: '100px'\n    } : {};\n    return <>\n                {!this.props.fromEdit && <PrintActionsBar id={this.props.dashboard.id} />}\n                <div className={classes.wrapper} style={style}>\n                    {!this.props.fromEdit && <PrintInfo isLayout={true} />}\n                    <div className={classes.pageOuter} style={{\n          width: a4LandscapeWidthPx\n        }}>\n                        <PrintLayoutItemGrid />\n                    </div>\n                </div>\n            </>;\n  }\n\n}\nPrintLayoutDashboard.propTypes = {\n  addDashboardItem: PropTypes.func,\n  dashboard: PropTypes.object,\n  fromEdit: PropTypes.bool,\n  items: PropTypes.array,\n  setPrintDashboard: PropTypes.func,\n  updateDashboardItem: PropTypes.func\n};\n\nconst mapStateToProps = (state, ownProps) => {\n  const id = sGetSelectedId(state);\n\n  if (ownProps.fromEdit) {\n    const dashboard = sGetEditDashboardRoot(state);\n    return {\n      dashboard,\n      id,\n      items: sGetEditDashboardItems(state)\n    };\n  }\n\n  const dashboard = id ? sGetDashboardById(state, id) : null;\n  return {\n    dashboard,\n    id,\n    items: sGetDashboardItems(state)\n  };\n};\n\nexport default connect(mapStateToProps, {\n  setPrintDashboard: acSetPrintDashboard,\n  addDashboardItem: acAddPrintDashboardItem,\n  updateDashboardItem: acUpdatePrintDashboardItem\n})(PrintLayoutDashboard);","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport i18n from '@dhis2/d2-i18n';\nimport PropTypes from 'prop-types';\nimport DashboardVerticalOffset from './DashboardVerticalOffset';\nimport TitleBar from '../TitleBar/TitleBar';\nimport ItemGrid from '../ItemGrid/ItemGrid';\nimport EditBar from '../ControlBar/EditBar';\nimport LayoutPrintPreview from './PrintLayoutDashboard';\nimport NoContentMessage from '../../widgets/NoContentMessage';\nimport { acSetEditDashboard } from '../../actions/editDashboard';\nimport { sGetSelectedId } from '../../reducers/selected';\nimport { sGetDashboardById, sGetDashboardItems } from '../../reducers/dashboards';\nimport { sGetIsPrintPreviewView } from '../../reducers/editDashboard';\nexport class EditDashboard extends Component {\n  state = {\n    initialized: false\n  };\n  initEditDashboard = () => {\n    if (this.props.dashboard) {\n      this.setState({\n        initialized: true\n      });\n      this.props.setEditDashboard(this.props.dashboard, this.props.items);\n    }\n  };\n\n  componentDidMount() {\n    this.initEditDashboard();\n  }\n\n  componentDidUpdate() {\n    if (!this.state.initialized) {\n      this.initEditDashboard();\n    }\n  }\n\n  renderGrid = () => {\n    if (this.props.isPrintPreviewView) {\n      return <LayoutPrintPreview fromEdit={true} />;\n    }\n\n    return <div className=\"dashboard-wrapper\">\n                <TitleBar edit={true} />\n                <ItemGrid edit={true} />\n            </div>;\n  };\n\n  render() {\n    return <>\n                <EditBar />\n                <DashboardVerticalOffset editMode={true} />\n                {this.props.updateAccess ? this.renderGrid() : <NoContentMessage text={i18n.t('No access')} />}\n            </>;\n  }\n\n}\nEditDashboard.propTypes = {\n  dashboard: PropTypes.object,\n  isPrintPreviewView: PropTypes.bool,\n  items: PropTypes.array,\n  setEditDashboard: PropTypes.func,\n  updateAccess: PropTypes.bool\n};\n\nconst mapStateToProps = state => {\n  const id = sGetSelectedId(state);\n  const dashboard = id ? sGetDashboardById(state, id) : null;\n  const updateAccess = dashboard && dashboard.access ? dashboard.access.update : false;\n  return {\n    dashboard,\n    updateAccess,\n    items: sGetDashboardItems(state),\n    isPrintPreviewView: sGetIsPrintPreviewView(state)\n  };\n};\n\nexport default connect(mapStateToProps, {\n  setEditDashboard: acSetEditDashboard\n})(EditDashboard);","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport DashboardVerticalOffset from './DashboardVerticalOffset';\nimport EditBar from '../ControlBar/EditBar';\nimport TitleBar from '../TitleBar/TitleBar';\nimport ItemGrid from '../ItemGrid/ItemGrid';\nimport LayoutPrintPreview from './PrintLayoutDashboard';\nimport { acSetEditNewDashboard } from '../../actions/editDashboard';\nimport { sGetIsPrintPreviewView } from '../../reducers/editDashboard';\n\nclass NewDashboard extends Component {\n  componentDidMount() {\n    this.props.setNewDashboard();\n  }\n\n  render() {\n    return <>\n                <EditBar />\n                <DashboardVerticalOffset editMode={true} />\n                {this.props.isPrintPreviewView ? <LayoutPrintPreview fromEdit={true} /> : <div className=\"dashboard-wrapper\">\n                        <TitleBar edit={true} />\n                        <ItemGrid edit={true} />\n                    </div>}\n            </>;\n  }\n\n}\n\nNewDashboard.propTypes = {\n  isPrintPreviewView: PropTypes.bool,\n  setNewDashboard: PropTypes.func\n};\n\nconst mapStateToProps = state => ({\n  isPrintPreviewView: sGetIsPrintPreviewView(state)\n});\n\nexport default connect(mapStateToProps, {\n  setNewDashboard: acSetEditNewDashboard\n})(NewDashboard);","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport i18n from '@dhis2/d2-i18n';\nimport ReactGridLayout from 'react-grid-layout';\nimport { Layer, CenteredContent, CircularLoader } from '@dhis2/ui';\nimport { Item } from '../Item/Item';\nimport NoContentMessage from '../../widgets/NoContentMessage';\nimport { PRINT } from '../Dashboard/dashboardModes';\nimport { sGetSelectedIsLoading } from '../../reducers/selected';\nimport { sGetPrintDashboardRoot, sGetPrintDashboardItems } from '../../reducers/printDashboard';\nimport { GRID_ROW_HEIGHT, GRID_COMPACT_TYPE, MARGIN, getGridColumns, hasShape } from './gridUtil';\nimport { a4LandscapeWidthPx } from '../../modules/printUtils';\nimport { orArray } from '../../modules/util';\nimport { PAGEBREAK } from '../../modules/itemTypes';\nimport 'react-grid-layout/css/styles.css';\nimport './ItemGrid.css';\nexport class PrintItemGrid extends Component {\n  getItemComponent = item => {\n    const itemClassNames = [item.type, 'print', 'oipp'].join(' '); // TODO: this mutates the redux store\n\n    item.w = 56;\n\n    if (item.type === PAGEBREAK) {\n      item.h = 3;\n    } else {\n      item.h = 35;\n    }\n\n    return <div key={item.i} className={itemClassNames}>\n                <Item item={item} dashboardMode={PRINT} />\n            </div>;\n  };\n  getItemComponents = items => items.map(item => this.getItemComponent(item));\n\n  render() {\n    const {\n      isLoading,\n      dashboardItems\n    } = this.props;\n\n    if (!isLoading && !dashboardItems.length) {\n      return <NoContentMessage text={i18n.t('There are no items on this dashboard')} />;\n    }\n\n    const width = a4LandscapeWidthPx < window.innerWidth ? a4LandscapeWidthPx : window.innerWidth;\n    return <>\n                {isLoading ? <Layer translucent>\n                        <CenteredContent>\n                            <CircularLoader />\n                        </CenteredContent>\n                    </Layer> : null}\n                <ReactGridLayout className=\"layout print\" layout={dashboardItems} margin={MARGIN} cols={getGridColumns()} rowHeight={GRID_ROW_HEIGHT} width={width} compactType={GRID_COMPACT_TYPE} isDraggable={false} isResizable={false} draggableCancel=\"input,textarea\">\n                    {this.getItemComponents(dashboardItems)}\n                </ReactGridLayout>\n            </>;\n  }\n\n}\nPrintItemGrid.propTypes = {\n  dashboardItems: PropTypes.array,\n  isLoading: PropTypes.bool\n};\nPrintItemGrid.defaultProps = {\n  dashboardItems: []\n};\n\nconst mapStateToProps = state => {\n  const selectedDashboard = sGetPrintDashboardRoot(state);\n  return {\n    isLoading: sGetSelectedIsLoading(state) || !selectedDashboard,\n    dashboardItems: orArray(sGetPrintDashboardItems(state)).filter(hasShape)\n  };\n};\n\nexport default connect(mapStateToProps)(PrintItemGrid);","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport sortBy from 'lodash/sortBy';\nimport PrintInfo from './PrintInfo';\nimport PrintActionsBar from './PrintActionsBar';\nimport PrintItemGrid from '../ItemGrid/PrintItemGrid';\nimport { acSetPrintDashboard, acAddPrintDashboardItem, acRemovePrintDashboardItem } from '../../actions/printDashboard';\nimport { sGetSelectedId } from '../../reducers/selected';\nimport { sGetDashboardById, sGetDashboardItems } from '../../reducers/dashboards';\nimport { PAGEBREAK, PRINT_TITLE_PAGE, SPACER } from '../../modules/itemTypes';\nimport { a4LandscapeWidthPx } from '../../modules/printUtils';\nimport classes from './styles/PrintDashboard.module.css';\nimport './styles/print.css';\nimport './styles/print-oipp.css';\nexport class PrintDashboard extends Component {\n  state = {\n    initialized: false\n  };\n  initPrintDashboard = () => {\n    if (this.props.dashboard) {\n      this.setState({\n        initialized: true\n      }); //sort the items by Y pos so they print in order of top to bottom\n\n      const sortedItems = sortBy(this.props.items, ['y', 'x']);\n      this.props.setPrintDashboard(this.props.dashboard, sortedItems); // remove spacers - don't want empty pages\n\n      let spacerCount = 0;\n      this.props.items.forEach(item => {\n        if (item.type === SPACER) {\n          spacerCount += 1;\n          this.props.removeDashboardItem(item.id);\n        }\n      }); // insert page breaks into the document flow to create the \"pages\"\n      // when previewing the print\n\n      for (let i = 0; i < (this.props.items.length - spacerCount) * 2; i += 2) {\n        this.props.addDashboardItem({\n          type: PAGEBREAK,\n          position: i,\n          isStatic: false\n        });\n      }\n\n      this.props.addDashboardItem({\n        type: PRINT_TITLE_PAGE\n      });\n    }\n  };\n\n  componentDidMount() {\n    this.initPrintDashboard();\n  }\n\n  componentDidUpdate() {\n    if (!this.state.initialized) {\n      this.initPrintDashboard();\n    }\n  }\n\n  render() {\n    return <>\n                <PrintActionsBar id={this.props.dashboard.id} />\n                <div className={classes.wrapper}>\n                    <PrintInfo isLayout={false} />\n                    <div className={classes.pageOuter} style={{\n          width: a4LandscapeWidthPx\n        }}>\n                        <PrintItemGrid />\n                    </div>\n                </div>\n            </>;\n  }\n\n}\nPrintDashboard.propTypes = {\n  addDashboardItem: PropTypes.func,\n  dashboard: PropTypes.object,\n  items: PropTypes.array,\n  removeDashboardItem: PropTypes.func,\n  setPrintDashboard: PropTypes.func\n};\n\nconst mapStateToProps = state => {\n  const id = sGetSelectedId(state);\n  const dashboard = id ? sGetDashboardById(state, id) : null;\n  return {\n    dashboard,\n    id,\n    items: sGetDashboardItems(state)\n  };\n};\n\nexport default connect(mapStateToProps, {\n  setPrintDashboard: acSetPrintDashboard,\n  addDashboardItem: acAddPrintDashboardItem,\n  removeDashboardItem: acRemovePrintDashboardItem\n})(PrintDashboard);","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport isEmpty from 'lodash/isEmpty';\nimport i18n from '@dhis2/d2-i18n';\nimport { Layer, CenteredContent, CircularLoader } from '@dhis2/ui';\nimport DashboardsBar from '../ControlBar/DashboardsBar';\nimport DashboardVerticalOffset from './DashboardVerticalOffset';\nimport NoContentMessage from '../../widgets/NoContentMessage';\nimport ViewDashboard from './ViewDashboard';\nimport EditDashboard from './EditDashboard';\nimport NewDashboard from './NewDashboard';\nimport PrintDashboard from './PrintDashboard';\nimport PrintLayoutDashboard from './PrintLayoutDashboard';\nimport { tSelectDashboard } from '../../actions/dashboards';\nimport { sDashboardsIsFetching, sGetAllDashboards } from '../../reducers/dashboards';\nimport { sGetSelectedId, NON_EXISTING_DASHBOARD_ID } from '../../reducers/selected';\nimport { EDIT, NEW, VIEW, PRINT, PRINT_LAYOUT, isPrintMode } from './dashboardModes';\nconst dashboardMap = {\n  [VIEW]: <ViewDashboard />,\n  [EDIT]: <EditDashboard />,\n  [NEW]: <NewDashboard />,\n  [PRINT]: <PrintDashboard />,\n  [PRINT_LAYOUT]: <PrintLayoutDashboard />\n};\nexport class Dashboard extends Component {\n  setDashboard = () => {\n    if (this.props.dashboardsLoaded) {\n      const id = this.props.match.params.dashboardId || null || null;\n      this.props.selectDashboard(id);\n      this.setHeaderbarVisibility();\n      this.scrollToTop();\n    }\n  };\n  setHeaderbarVisibility = () => {\n    const header = document.getElementsByTagName('header')[0];\n\n    if (isPrintMode(this.props.mode)) {\n      header.classList.add('hidden');\n    } else {\n      header.classList.remove('hidden');\n    }\n  };\n  scrollToTop = () => {\n    window.scrollTo(0, 0);\n  };\n\n  componentDidMount() {\n    this.setDashboard();\n  }\n\n  componentDidUpdate() {\n    this.setDashboard();\n  }\n\n  render() {\n    const {\n      id,\n      mode,\n      dashboardsLoaded,\n      dashboardsIsEmpty\n    } = this.props;\n\n    if (!dashboardsLoaded || id === null) {\n      return <Layer translucent>\n                    <CenteredContent>\n                        <CircularLoader />\n                    </CenteredContent>\n                </Layer>;\n    }\n\n    if (mode === NEW) {\n      return dashboardMap[mode];\n    }\n\n    if (dashboardsIsEmpty) {\n      return <>\n                    <DashboardsBar />\n                    <DashboardVerticalOffset />\n                    <NoContentMessage text={i18n.t('No dashboards found. Use the + button to create a new dashboard.')} />\n                </>;\n    }\n\n    if (id === NON_EXISTING_DASHBOARD_ID) {\n      return <>\n                    <DashboardsBar />\n                    <DashboardVerticalOffset />\n                    <NoContentMessage text={i18n.t('Requested dashboard not found')} />\n                </>;\n    }\n\n    return dashboardMap[mode];\n  }\n\n}\nDashboard.propTypes = {\n  dashboardsIsEmpty: PropTypes.bool,\n  dashboardsLoaded: PropTypes.bool,\n  id: PropTypes.string,\n  match: PropTypes.object,\n  mode: PropTypes.string,\n  selectDashboard: PropTypes.func\n};\n\nconst mapStateToProps = state => {\n  const dashboards = sGetAllDashboards(state);\n  return {\n    dashboardsIsEmpty: isEmpty(dashboards),\n    dashboardsLoaded: !sDashboardsIsFetching(state),\n    id: sGetSelectedId(state)\n  };\n};\n\nexport default connect(mapStateToProps, {\n  selectDashboard: tSelectDashboard\n})(Dashboard);","import React, { Component } from 'react';\nimport { HashRouter as Router, Route, Switch } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport i18n from '@dhis2/d2-i18n';\nimport { CssVariables } from '@dhis2/ui';\nimport { EDIT, VIEW, NEW, PRINT, PRINT_LAYOUT } from './Dashboard/dashboardModes';\nimport { acReceivedUser } from '../actions/user';\nimport { tFetchDashboards } from '../actions/dashboards';\nimport { tSetControlBarRows } from '../actions/controlBar';\nimport { tSetShowDescription } from '../actions/selected';\nimport { tSetDimensions } from '../actions/dimensions';\nimport Dashboard from './Dashboard/Dashboard';\nimport SnackbarMessage from './SnackbarMessage/SnackbarMessage';\nimport './App.css';\nexport class App extends Component {\n  componentDidMount() {\n    this.props.setCurrentUser(this.props.d2.currentUser);\n    this.props.fetchDashboards();\n    this.props.setControlBarRows();\n    this.props.setShowDescription();\n    this.props.setDimensions(this.props.d2);\n  }\n\n  getChildContext() {\n    return {\n      baseUrl: this.props.baseUrl,\n      i18n,\n      d2: this.props.d2\n    };\n  }\n\n  render() {\n    return <>\n                <CssVariables colors spacers />\n                <Router>\n                    <Switch>\n                        <Route exact path=\"/\" render={props => <Dashboard {...props} mode={VIEW} />} />\n                        <Route exact path=\"/new\" render={props => <Dashboard {...props} mode={NEW} />} />\n                        <Route exact path=\"/:dashboardId\" render={props => <Dashboard {...props} mode={VIEW} />} />\n                        <Route exact path=\"/:dashboardId/edit\" render={props => <Dashboard {...props} mode={EDIT} />} />\n                        <Route exact path=\"/:dashboardId/printoipp\" render={props => <Dashboard {...props} mode={PRINT} />} />\n                        <Route exact path=\"/:dashboardId/printlayout\" render={props => <Dashboard {...props} mode={PRINT_LAYOUT} />} />\n                    </Switch>\n                </Router>\n                <SnackbarMessage />\n            </>;\n  }\n\n}\nApp.propTypes = {\n  fetchDashboards: PropTypes.func.isRequired,\n  setControlBarRows: PropTypes.func.isRequired,\n  setCurrentUser: PropTypes.func.isRequired,\n  setDimensions: PropTypes.func.isRequired,\n  setShowDescription: PropTypes.func.isRequired,\n  baseUrl: PropTypes.string,\n  d2: PropTypes.object\n};\nApp.childContextTypes = {\n  baseUrl: PropTypes.string,\n  i18n: PropTypes.object,\n  d2: PropTypes.object\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    fetchDashboards: () => dispatch(tFetchDashboards()),\n    setControlBarRows: () => dispatch(tSetControlBarRows()),\n    setCurrentUser: currentUser => dispatch(acReceivedUser(currentUser)),\n    setDimensions: d2 => dispatch(tSetDimensions(d2)),\n    setShowDescription: () => dispatch(tSetShowDescription())\n  };\n};\n\nexport default connect(null, mapDispatchToProps)(App);","import { RECEIVED_USER } from '../reducers/user';\nexport const acReceivedUser = value => ({\n  type: RECEIVED_USER,\n  value\n});","/** @module reducers/selected */\nimport { validateReducer } from '../modules/util';\nexport const SET_STYLE = 'SET_STYLE';\nexport const DEFAULT_STATE_STYLE = 'LIST';\n/**\n * Reducer functions that computes and returns the new state based on the given action\n * @function\n * @param {Object} state The current state\n * @param {Object} action The action to be evaluated\n */\n\nconst style = (state = DEFAULT_STATE_STYLE, action) => {\n  switch (action.type) {\n    case SET_STYLE:\n      return validateReducer(action.value, DEFAULT_STATE_STYLE);\n\n    default:\n      return state;\n  }\n};\n\nexport default style;\n/**\n * Selectors that point to specific props in the state object\n * @function\n * @param {Object} state\n * @returns {Object}\n */\n\nexport const sGetStyleRoot = state => state.style;","import { combineReducers } from 'redux';\nimport arraySort from 'd2-utilizr/lib/arraySort';\nimport dashboards, { sGetDashboardsRoot } from './dashboards';\nimport selected from './selected';\nimport dashboardsFilter, { ownerData, sGetFilterName, sGetFilterOrder, sGetFilterOwner } from './dashboardsFilter';\nimport controlBar from './controlBar';\nimport visualizations from './visualizations';\nimport editDashboard from './editDashboard';\nimport printDashboard from './printDashboard';\nimport messages from './messages';\nimport user from './user';\nimport snackbar from './snackbar';\nimport itemFilters from './itemFilters';\nimport style from './style';\nimport dimensions from './dimensions';\nimport settings from './settings';\nimport activeModalDimension from './activeModalDimension';\nconst USER = 'system'; // Reducers\n\nexport default combineReducers({\n  dashboards,\n  selected,\n  dashboardsFilter,\n  controlBar,\n  visualizations,\n  messages,\n  user,\n  editDashboard,\n  printDashboard,\n  itemFilters,\n  style,\n  snackbar,\n  dimensions,\n  settings,\n  activeModalDimension\n}); // Map constants to data\n\nconst mapConstToData = {\n  NAME: 'name',\n  ITEMS: 'numberOfItems',\n  CREATED: 'created',\n  OWNER: 'owner'\n}; // Selectors\n// Filter dashboards by name\n\nexport const sFilterDashboardsByName = (dashboards, filter) => dashboards.filter(d => d.displayName.toLowerCase().includes(filter.toLowerCase())); // Filter dashboards by owner, TODO FIXME\n\nexport const sFilterDashboardsByOwner = (dashboards, filter) => {\n  const ME = ownerData[1]; // TODO\n\n  const OTHERS = ownerData[2]; // TODO\n\n  switch (filter) {\n    case ME:\n      return dashboards.filter(d => d.owner === USER);\n\n    case OTHERS:\n      return dashboards.filter(d => d.owner !== USER);\n\n    default:\n      return dashboards;\n  }\n}; // Filter dashboards by order\n\nexport const sFilterDashboardsByOrder = (dashboards, filter) => {\n  const filterValues = filter.split(':');\n  const key = filterValues[0];\n  const direction = filterValues[1];\n  return arraySort(dashboards, direction, mapConstToData[key]);\n}; // Selectors dependency level 2\n// Get filtered dashboards\n\nexport const sGetFilteredDashboards = state => {\n  const dashboards = sGetDashboardsRoot(state);\n  const nameFilter = sGetFilterName(state);\n  const ownerFilter = sGetFilterOwner(state);\n  const orderFilter = sGetFilterOrder(state);\n  return sFilterDashboardsByOrder(sFilterDashboardsByName(sFilterDashboardsByOwner(dashboards, ownerFilter), nameFilter), orderFilter);\n};","import { createStore, applyMiddleware, compose } from 'redux';\nimport { createLogger } from 'redux-logger';\nimport thunk from 'redux-thunk';\nimport reducer from './reducers';\n\nconst configureStore = () => {\n  const middleware = [thunk]; // Enable Redux devtools if extension is installed instead of redux-logger\n\n  const composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\n\n  if (!window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ && process.env.NODE_ENV !== 'production') {\n    middleware.push(createLogger());\n  }\n\n  return createStore(reducer, composeEnhancers(applyMiddleware(...middleware)));\n};\n\nexport default configureStore;","//------------------------------------------------------------------------------\n// <auto-generated>\n// This code was generated by d2-i18n-generate.\n//\n// Changes to this file may cause incorrect behavior and will be lost if\n// the code is regenerated.\n// </auto-generated>\n//------------------------------------------------------------------------------\nimport i18n from '@dhis2/d2-i18n';\nimport arTranslations from './ar/translations.json';\nimport ar_IQTranslations from './ar_IQ/translations.json';\nimport daTranslations from './da/translations.json';\nimport enTranslations from './en/translations.json';\nimport esTranslations from './es/translations.json';\nimport frTranslations from './fr/translations.json';\nimport idTranslations from './id/translations.json';\nimport kmTranslations from './km/translations.json';\nimport loTranslations from './lo/translations.json';\nimport myTranslations from './my/translations.json';\nimport nbTranslations from './nb/translations.json';\nimport prsTranslations from './prs/translations.json';\nimport psTranslations from './ps/translations.json';\nimport ptTranslations from './pt/translations.json';\nimport pt_BRTranslations from './pt_BR/translations.json';\nimport ruTranslations from './ru/translations.json';\nimport svTranslations from './sv/translations.json';\nimport tetTranslations from './tet/translations.json';\nimport tgTranslations from './tg/translations.json';\nimport ukTranslations from './uk/translations.json';\nimport urTranslations from './ur/translations.json';\nimport viTranslations from './vi/translations.json';\nimport zhTranslations from './zh/translations.json';\nimport zh_CNTranslations from './zh_CN/translations.json';\nconst namespace = 'default';\ni18n.addResources('ar', namespace, arTranslations);\ni18n.addResources('ar_IQ', namespace, ar_IQTranslations);\ni18n.addResources('da', namespace, daTranslations);\ni18n.addResources('en', namespace, enTranslations);\ni18n.addResources('es', namespace, esTranslations);\ni18n.addResources('fr', namespace, frTranslations);\ni18n.addResources('id', namespace, idTranslations);\ni18n.addResources('km', namespace, kmTranslations);\ni18n.addResources('lo', namespace, loTranslations);\ni18n.addResources('my', namespace, myTranslations);\ni18n.addResources('nb', namespace, nbTranslations);\ni18n.addResources('prs', namespace, prsTranslations);\ni18n.addResources('ps', namespace, psTranslations);\ni18n.addResources('pt', namespace, ptTranslations);\ni18n.addResources('pt_BR', namespace, pt_BRTranslations);\ni18n.addResources('ru', namespace, ruTranslations);\ni18n.addResources('sv', namespace, svTranslations);\ni18n.addResources('tet', namespace, tetTranslations);\ni18n.addResources('tg', namespace, tgTranslations);\ni18n.addResources('uk', namespace, ukTranslations);\ni18n.addResources('ur', namespace, urTranslations);\ni18n.addResources('vi', namespace, viTranslations);\ni18n.addResources('zh', namespace, zhTranslations);\ni18n.addResources('zh_CN', namespace, zh_CNTranslations);\nexport default i18n;","import React from 'react';\nimport { MuiThemeProvider, createMuiTheme } from '@material-ui/core/styles';\nimport dhis2theme from '@dhis2/d2-ui-core/theme/mui3.theme';\nimport { Provider as ReduxProvider } from 'react-redux';\nimport { D2Shim } from '@dhis2/app-runtime-adapter-d2';\nimport App from './components/App';\nimport configureStore from './configureStore';\nimport './AppWrapper.css';\nimport './locales';\n\nconst muiTheme = () => createMuiTheme(dhis2theme);\n\nconst schemas = ['chart', 'map', 'report', 'reportTable', 'eventChart', 'eventReport', 'dashboard', 'organisationUnit', 'userGroup'];\nconst appConfig = {\n  schemas\n};\nconst authorization = process.env.REACT_APP_DHIS2_AUTHORIZATION || null; // TODO: ER and EV plugins require the auth header in development mode.\n// Remove this when these plugins are rewritten\n\nif (authorization) {\n  appConfig.headers = {\n    Authorization: authorization\n  };\n}\n\nconst AppWrapper = () => {\n  return <ReduxProvider store={configureStore()}>\n            <MuiThemeProvider theme={muiTheme()}>\n                <D2Shim appConfig={appConfig} i18nRoot=\"./i18n\">\n                    {({\n          d2\n        }) => {\n          if (!d2) {\n            // TODO: Handle errors in d2 initialization\n            return null;\n          }\n\n          return <App d2={d2} />;\n        }}\n                </D2Shim>\n            </MuiThemeProvider>\n        </ReduxProvider>;\n};\n\nexport default AppWrapper;","import isObject from 'lodash/isObject'; // validation\n\nexport function orNull(param) {\n  return param === undefined ? null : param;\n}\nexport function orArray(param) {\n  return Array.isArray(param) ? param : [];\n}\nexport function orObject(param) {\n  return isObject(param) ? param : {};\n} // array\n\nexport function arrayGetById(array, id) {\n  return array.find(item => item.id === id);\n} // object\n\nexport function arrayToIdMap(array) {\n  return array.reduce((obj, item) => {\n    obj[item.id] = item;\n    return obj;\n  }, {});\n} // date\n\nexport function getDate() {\n  const y = Math.floor(Math.random() * 3) + 2015;\n  const M = Math.floor(Math.random() * 12) + 1;\n  const d = Math.floor(Math.random() * 28) + 1; // const h = Math.floor(Math.random() * 23) + 1;\n  // const m = Math.floor(Math.random() * 59) + 1;\n  // const s = Math.floor(Math.random() * 59) + 1;\n\n  return new Date(`${y}-${M}-${d}`).toJSON().replace('T', ' ').substr(0, 10);\n}\nexport const formatDate = (value, uiLocale) => {\n  if (typeof global.Intl !== 'undefined' && Intl.DateTimeFormat) {\n    const locale = uiLocale || 'en';\n    return new Intl.DateTimeFormat(locale, {\n      year: 'numeric',\n      month: 'short',\n      day: 'numeric'\n    }).format(new Date(value));\n  }\n\n  return value.substr(0, 19).replace('T', ' ');\n};\n/**\n * Sorts an array of objects based on provided date property\n *\n * @param {Array} items Array of objects\n * @param {String} dateProp Name of the date property to be used for sorting\n * @param {Boolean} ascending Whether to sort ascending or descending\n */\n\nexport const sortByDate = (items, dateProp, ascending = true) => {\n  const values = Object.values(items);\n  values.sort((a, b) => {\n    const aDate = new Date(a[dateProp]);\n    const bDate = new Date(b[dateProp]);\n    return ascending ? aDate - bDate : bDate - aDate;\n  });\n  return values;\n}; // reducer validator\n\nexport const validateReducer = (value, defaultValue) => value === undefined || value === null ? defaultValue : value;\nexport const getBaseUrl = d2 => {\n  const api = d2.Api.getApi();\n  const idx = api.baseUrl.indexOf('/api');\n  return idx > -1 ? api.baseUrl.slice(0, idx) : api.baseUrl;\n};\nexport const getWithoutId = object => ({ ...object,\n  id: undefined\n});","import i18n from '@dhis2/d2-i18n';\nimport TableIcon from '@material-ui/icons/ViewList';\nimport ChartIcon from '@material-ui/icons/InsertChart';\nimport MapIcon from '@material-ui/icons/Public';\nimport ExtensionIcon from '@material-ui/icons/Extension';\nimport DescriptionIcon from '@material-ui/icons/Description';\nimport PersonIcon from '@material-ui/icons/Person';\nimport FontDownloadIcon from '@material-ui/icons/FontDownload';\nimport EmailIcon from '@material-ui/icons/Email';\nimport CropFreeIcon from '@material-ui/icons/CropFree';\nimport NotInterestedIcon from '@material-ui/icons/NotInterested';\nimport { getBaseUrl } from './util'; // Item types\n\nexport const VISUALIZATION = 'VISUALIZATION';\nexport const REPORT_TABLE = 'REPORT_TABLE';\nexport const CHART = 'CHART';\nexport const MAP = 'MAP';\nexport const EVENT_REPORT = 'EVENT_REPORT';\nexport const EVENT_CHART = 'EVENT_CHART';\nexport const APP = 'APP';\nexport const REPORTS = 'REPORTS';\nexport const RESOURCES = 'RESOURCES';\nexport const USERS = 'USERS';\nexport const MESSAGES = 'MESSAGES';\nexport const TEXT = 'TEXT';\nexport const SPACER = 'SPACER';\nexport const PAGEBREAK = 'PAGEBREAK';\nexport const PRINT_TITLE_PAGE = 'PRINT_TITLE_PAGE';\nconst DOMAIN_TYPE_AGGREGATE = 'AGGREGATE';\nconst DOMAIN_TYPE_TRACKER = 'TRACKER'; // Dashboard helpers\n\nexport const isVisualizationType = item => !!itemTypeMap[item.type].isVisualizationType;\nexport const hasMapView = itemType => itemTypeMap[itemType].domainType === DOMAIN_TYPE_AGGREGATE;\nexport const isTrackerDomainType = itemType => itemTypeMap[itemType].domainType === DOMAIN_TYPE_TRACKER;\nexport const getDefaultItemCount = itemType => itemTypeMap[itemType].defaultItemCount || 5;\nexport const getAppName = itemType => itemTypeMap[itemType].appName || ''; // Item type map\n\nexport const itemTypeMap = {\n  [VISUALIZATION]: {\n    id: VISUALIZATION,\n    endPointName: 'visualizations',\n    propName: 'visualization',\n    pluralTitle: i18n.t('Visualizations'),\n    appUrl: id => `dhis-web-data-visualizer/#/${id}`,\n    appName: 'Data Visualizer',\n    defaultItemCount: 10\n  },\n  [REPORT_TABLE]: {\n    id: REPORT_TABLE,\n    endPointName: 'visualizations',\n    propName: 'visualization',\n    pluralTitle: i18n.t('Pivot tables'),\n    domainType: DOMAIN_TYPE_AGGREGATE,\n    isVisualizationType: true,\n    appUrl: id => `dhis-web-data-visualizer/#/${id}`,\n    appName: 'Data Visualizer'\n  },\n  [CHART]: {\n    id: CHART,\n    endPointName: 'visualizations',\n    propName: 'visualization',\n    pluralTitle: i18n.t('Charts'),\n    domainType: DOMAIN_TYPE_AGGREGATE,\n    isVisualizationType: true,\n    appUrl: id => `dhis-web-data-visualizer/#/${id}`,\n    appName: 'Data Visualizer'\n  },\n  [MAP]: {\n    id: MAP,\n    endPointName: 'maps',\n    propName: 'map',\n    pluralTitle: i18n.t('Maps'),\n    domainType: DOMAIN_TYPE_AGGREGATE,\n    isVisualizationType: true,\n    appUrl: id => `dhis-web-maps/?id=${id}`,\n    appName: 'Maps'\n  },\n  [EVENT_REPORT]: {\n    id: EVENT_REPORT,\n    endPointName: 'eventReports',\n    propName: 'eventReport',\n    pluralTitle: i18n.t('Event reports'),\n    domainType: DOMAIN_TYPE_TRACKER,\n    isVisualizationType: true,\n    appUrl: id => `dhis-web-event-reports/?id=${id}`,\n    appName: 'Event Reports'\n  },\n  [EVENT_CHART]: {\n    id: EVENT_CHART,\n    endPointName: 'eventCharts',\n    propName: 'eventChart',\n    pluralTitle: i18n.t('Event charts'),\n    domainType: DOMAIN_TYPE_TRACKER,\n    isVisualizationType: true,\n    appUrl: id => `dhis-web-event-visualizer/?id=${id}`,\n    appName: 'Event Visualizer'\n  },\n  [APP]: {\n    endPointName: 'apps',\n    propName: 'appKey',\n    pluralTitle: i18n.t('Apps')\n  },\n  [REPORTS]: {\n    id: REPORTS,\n    endPointName: 'reports',\n    propName: 'reports',\n    pluralTitle: i18n.t('Reports'),\n    appUrl: (id, type) => {\n      switch (type) {\n        case 'HTML':\n          return `dhis-web-reports/#/standard-report/view/${id}`;\n\n        case 'JASPER_REPORT_TABLE':\n        case 'JASPER_JDBC':\n        default:\n          return `api/reports/${id}/data.pdf?t=${new Date().getTime()}`;\n      }\n    }\n  },\n  [RESOURCES]: {\n    id: RESOURCES,\n    endPointName: 'resources',\n    propName: 'resources',\n    pluralTitle: i18n.t('Resources'),\n    appUrl: id => `api/documents/${id}/data`\n  },\n  [USERS]: {\n    id: USERS,\n    endPointName: 'users',\n    propName: 'users',\n    pluralTitle: i18n.t('Users'),\n    appUrl: id => `dhis-web-dashboard-integration/profile.action?id=${id}`\n  },\n  [TEXT]: {\n    id: TEXT,\n    propName: 'text'\n  },\n  [MESSAGES]: {\n    propName: 'messages'\n  },\n  [SPACER]: {\n    propName: 'text'\n  },\n  [PAGEBREAK]: {\n    propName: 'text'\n  },\n  [PRINT_TITLE_PAGE]: {\n    propName: 'text'\n  }\n};\nexport const getEndPointName = type => itemTypeMap[type].endPointName;\nexport const getItemUrl = (type, item, d2) => {\n  let url;\n\n  if (type === APP) {\n    url = item.launchUrl;\n  }\n\n  if (itemTypeMap[type] && itemTypeMap[type].appUrl) {\n    url = `${getBaseUrl(d2)}/${itemTypeMap[type].appUrl(item.id, item.type)}`;\n  }\n\n  return url;\n};\nexport const getItemIcon = type => {\n  switch (type) {\n    case REPORT_TABLE:\n    case EVENT_REPORT:\n    case REPORTS:\n      return TableIcon;\n\n    case CHART:\n    case EVENT_CHART:\n      return ChartIcon;\n\n    case MAP:\n      return MapIcon;\n\n    case APP:\n      return ExtensionIcon;\n\n    case RESOURCES:\n      return DescriptionIcon;\n\n    case USERS:\n      return PersonIcon;\n\n    case TEXT:\n      return FontDownloadIcon;\n\n    case MESSAGES:\n      return EmailIcon;\n\n    case SPACER:\n      return CropFreeIcon;\n\n    default:\n      return NotInterestedIcon;\n  }\n};","import isFunction from 'd2-utilizr/lib/isFunction';\nimport { orObject } from '../../modules/util'; // Dimensions for the react-grid-layout\n\nexport const GRID_COMPACT_TYPE = 'vertical'; // vertical | horizonal | null\n\nexport const GRID_ROW_HEIGHT = 10;\nconst GRID_COLUMN_WIDTH_PX = 20;\nconst GRID_LAYOUT = 'FLEXIBLE'; // FIXED | FLEXIBLE\n\nexport const MARGIN = [10, 10];\nexport const NEW_ITEM_SHAPE = {\n  x: 0,\n  y: 0,\n  w: 20,\n  h: 29\n}; // Dimensions for getShape\n\nconst NUMBER_OF_ITEM_COLS = 2;\nconst GRID_COLUMNS = 60;\nexport const getGridColumns = () => {\n  switch (GRID_LAYOUT) {\n    case 'FLEXIBLE':\n      return GRID_COLUMNS;\n\n    case 'FIXED':\n      return Math.floor((window.innerWidth - 20) / GRID_COLUMN_WIDTH_PX);\n\n    default:\n      return GRID_COLUMNS;\n  }\n}; // isNonNegativeInteger\n\nconst isNonNegativeInteger = x => Number.isInteger(x) && x >= 0; // Does the item have all the shape properties?\n\n\nexport const hasShape = item => isNonNegativeInteger(item.x) && isNonNegativeInteger(item.y) && isNonNegativeInteger(item.w) && isNonNegativeInteger(item.h); // returns a rectangular grid block dimensioned with x, y, w, h in grid units.\n// based on a grid with 3 items across\n\nexport const getShape = i => {\n  if (!isNonNegativeInteger(i)) {\n    throw new Error('Invalid grid block number');\n  }\n\n  const col = i % NUMBER_OF_ITEM_COLS;\n  const row = Math.floor(i / NUMBER_OF_ITEM_COLS);\n  const itemWidth = Math.floor((GRID_COLUMNS - 1) / NUMBER_OF_ITEM_COLS);\n  const itemHeight = GRID_ROW_HEIGHT * 2;\n  return {\n    x: col * itemWidth,\n    y: row * itemHeight,\n    w: itemWidth,\n    h: itemHeight\n  };\n};\nexport const getGridItemProperties = itemId => {\n  return {\n    i: itemId,\n    minH: 4 // minimum height for item\n\n  };\n};\nexport const getPageBreakItemShape = (yPos, isStatic = true) => {\n  return {\n    x: 0,\n    y: yPos,\n    w: GRID_COLUMNS - 1,\n    h: 5,\n    static: !!isStatic,\n    minH: 1\n  };\n};\nexport const getPrintTitlePageItemShape = () => {\n  return {\n    x: 0,\n    y: 0,\n    w: GRID_COLUMNS - 1,\n    h: 30,\n    static: true,\n    minH: 1\n  };\n};\n/**\n * Calculates the grid item's original height in pixels based\n * on the height in grid units. This calculation\n * is copied directly from react-grid-layout GridItem.js (calcPosition)\n *\n * @param {Object} item item containing shape (x, y, w, h)\n */\n\nexport const getOriginalHeight = item => {\n  const originalHeight = Math.round(GRID_ROW_HEIGHT * item.h + Math.max(0, item.h - 1) * MARGIN[1]);\n  return {\n    originalHeight\n  };\n};\n/**\n * Returns an array of items containing the x, y, w, h dimensions\n * and the item's originalheight in pixels\n * @function\n * @param {Array} items\n * @returns {Array}\n */\n\nexport const withShape = items => items.map((item, index) => {\n  const itemWithShape = hasShape(item) ? item : Object.assign({}, item, getShape(index));\n  return Object.assign({}, itemWithShape, getOriginalHeight(itemWithShape));\n});\nexport const getGridItemDomId = id => `item-${id}`;\nexport function onItemResize(id) {\n  const el = orObject(document.querySelector(`#${getGridItemDomId(id)}`));\n  if (isFunction(el.setViewportSize)) setTimeout(() => el.setViewportSize(el.clientWidth - 5, el.clientHeight - 5), 10);\n}","import isObject from 'lodash/isObject';\nimport { VIS_TYPE_COLUMN, VIS_TYPE_PIVOT_TABLE } from '@dhis2/analytics';\nimport { apiFetchFavorite, getMapFields } from '../../../api/metadata';\nimport { REPORT_TABLE, CHART, MAP, EVENT_REPORT, EVENT_CHART, itemTypeMap } from '../../../modules/itemTypes';\nimport { getBaseUrl, getWithoutId } from '../../../modules/util';\nimport { getGridItemDomId } from '../../ItemGrid/gridUtil'; //external plugins\n\nconst itemTypeToExternalPlugin = {\n  [MAP]: 'mapPlugin',\n  [EVENT_REPORT]: 'eventReportPlugin',\n  [EVENT_CHART]: 'eventChartPlugin'\n};\n\nconst hasIntegratedPlugin = type => [CHART, REPORT_TABLE].includes(type);\n\nconst getPlugin = type => {\n  if (hasIntegratedPlugin(type)) {\n    return true;\n  }\n\n  const pluginName = itemTypeToExternalPlugin[type];\n  return global[pluginName];\n};\n\nexport const THEMATIC_LAYER = 'thematic';\nexport const pluginIsAvailable = (item = {}, visualization = {}) => {\n  const type = visualization.activeType || item.type;\n  return !!getPlugin(type);\n};\nexport const extractFavorite = item => {\n  if (!isObject(item)) {\n    return null;\n  }\n\n  const propName = itemTypeMap[item.type].propName;\n  return item[propName] || item.reportTable || item.chart || item.map || item.eventReport || item.eventChart || {};\n};\nexport const extractMapView = map => map.mapViews && map.mapViews.find(mv => mv.layer.includes(THEMATIC_LAYER));\nexport const loadPlugin = (plugin, config, credentials) => {\n  if (!(plugin && plugin.load)) {\n    return;\n  }\n\n  plugin.url = credentials.baseUrl;\n  plugin.loadingIndicator = true;\n  plugin.dashboard = true;\n\n  if (credentials.auth) {\n    plugin.auth = credentials.auth;\n  }\n\n  plugin.load(config);\n};\nexport const getId = item => extractFavorite(item).id;\nexport const getName = item => extractFavorite(item).name;\nexport const getDescription = item => extractFavorite(item).description;\nexport const getLink = (item, d2) => {\n  const baseUrl = getBaseUrl(d2);\n  const appUrl = itemTypeMap[item.type].appUrl(getId(item));\n  return `${baseUrl}/${appUrl}`;\n};\nexport const load = async (item, visualization, {\n  credentials,\n  activeType,\n  options = {}\n}) => {\n  const config = { ...visualization,\n    ...options,\n    el: getGridItemDomId(item.id)\n  };\n  const type = activeType || item.type;\n  const plugin = getPlugin(type);\n  loadPlugin(plugin, config, credentials);\n};\nexport const fetch = async item => {\n  const fetchedFavorite = await apiFetchFavorite(getId(item), item.type, {\n    fields: item.type === MAP ? getMapFields() : null\n  });\n  return fetchedFavorite;\n};\nexport const resize = item => {\n  const plugin = getPlugin(item.type);\n\n  if (plugin && plugin.resize) {\n    plugin.resize(getGridItemDomId(item.id));\n  }\n};\nexport const unmount = (item, activeType) => {\n  const plugin = getPlugin(activeType);\n\n  if (plugin && plugin.unmount) {\n    plugin.unmount(getGridItemDomId(item.id));\n  }\n};\nexport const getVisualizationConfig = (visualization, originalType, activeType) => {\n  if (originalType === MAP && originalType !== activeType) {\n    const extractedMapView = extractMapView(visualization);\n\n    if (extractedMapView === undefined) {\n      return null;\n    }\n\n    return getWithoutId({ ...visualization,\n      ...extractedMapView,\n      mapViews: undefined,\n      type: activeType === CHART ? VIS_TYPE_COLUMN : VIS_TYPE_PIVOT_TABLE\n    });\n  } else if (originalType === REPORT_TABLE && activeType === CHART) {\n    return getWithoutId({ ...visualization,\n      type: VIS_TYPE_COLUMN\n    });\n  } else if (originalType === CHART && activeType === REPORT_TABLE) {\n    return getWithoutId({ ...visualization,\n      type: VIS_TYPE_PIVOT_TABLE\n    });\n  }\n\n  return getWithoutId(visualization);\n};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"itemWrap\":\"ItemHeader_itemWrap__1SbYo\",\"itemHeaderWrap\":\"ItemHeader_itemHeaderWrap__JcBP7\",\"itemTitle\":\"ItemHeader_itemTitle__34rHa\",\"itemActionsWrap\":\"ItemHeader_itemActionsWrap__Gx3D9\"};","import { getInstance } from 'd2';\nimport arrayClean from 'd2-utilizr/lib/arrayClean';\nimport { getEndPointName } from '../modules/itemTypes'; // Id, name\n\nexport const getIdNameFields = ({\n  rename\n} = {}) => ['id', `${rename ? 'displayName~rename(name)' : 'name,displayName'}`]; // Item\n\nexport const getItemFields = () => ['dimensionItem~rename(id)', 'displayName~rename(name)', 'dimensionItemType']; // Dimension\n\nexport const getDimensionFields = ({\n  withItems\n}) => arrayClean(['dimension', 'legendSet[id]', 'filter', 'programStage', withItems ? `items[${getItemFields().join(',')}]` : ``]); // Axis\n\nexport const getAxesFields = ({\n  withItems\n}) => [`columns[${getDimensionFields({\n  withItems\n}).join(',')}]`, `rows[${getDimensionFields({\n  withItems\n}).join(',')}]`, `filters[${getDimensionFields({\n  withItems\n}).join(',')}]`]; // Favorite\n\nexport const getFavoriteFields = ({\n  withDimensions,\n  withOptions\n}) => {\n  return arrayClean([`${getIdNameFields({\n    rename: true\n  }).join(',')}`, 'displayDescription~rename(description)', withDimensions ? `${getAxesFields({\n    withItems: true\n  }).join(',')}` : ``, withOptions ? ['*', '!attributeDimensions', '!attributeValues', '!category', '!categoryDimensions', '!categoryOptionGroupSetDimensions', '!columnDimensions', '!dataDimensionItems', '!dataElementDimensions', '!dataElementGroupSetDimensions', '!filterDimensions', '!itemOrganisationUnitGroups', '!lastUpdatedBy', '!organisationUnitGroupSetDimensions', '!organisationUnitLevels', '!organisationUnits', '!programIndicatorDimensions', '!relativePeriods', '!reportParams', '!rowDimensions', '!series', '!translations', '!userOrganisationUnit', '!userOrganisationUnitChildren', '!userOrganisationUnitGrandChildren'].join(',') : '']);\n};\nexport const getFavoritesFields = ({\n  withDimensions\n}) => [`reportTable[${getFavoriteFields({\n  withDimensions\n}).join(',')}]`, `chart[${['type', ...getFavoriteFields({\n  withDimensions\n})].join(',')}]`, `map[${getFavoriteFields({\n  withDimensions\n}).join(',')}]`, `eventReport[${getFavoriteFields({\n  withDimensions\n}).join(',')}]`, `eventChart[${getFavoriteFields({\n  withDimensions\n}).join(',')}]`]; // List item\n\nexport const getListItemFields = () => [`reports[${['type', ...getIdNameFields({\n  rename: true\n})].join(',')}]`, `resources[${getIdNameFields({\n  rename: true\n}).join(',')}]`, `users[${getIdNameFields({\n  rename: true\n}).join(',')}]`]; // Map\n\nexport const getMapFields = () => [`${getIdNameFields({\n  rename: true\n}).join(',')}`, 'user,longitude,latitude,zoom,basemap', `mapViews[${getFavoriteFields({\n  withDimensions: true,\n  withOptions: true\n})}]`]; // Api\n// Get more info about the favorite of a dashboard item\n\nexport const apiFetchFavorite = (id, type, {\n  fields\n}) => getInstance().then(d2 => d2.Api.getApi().get(`${getEndPointName(type)}/${id}`, {\n  fields: fields || getFavoriteFields({\n    withDimensions: true,\n    withOptions: true\n  })\n}));","// extracted by mini-css-extract-plugin\nmodule.exports = {\"leftControls\":\"DashboardsBar_leftControls__k-Y57\",\"rightControls\":\"DashboardsBar_rightControls__1cyr1\"};"],"sourceRoot":""}
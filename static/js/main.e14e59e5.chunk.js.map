{"version":3,"sources":["icons/Description.js","modules/itemTypes.js","components/Item/ListItem/Item.module.css","reducers/user.js","reducers/dashboards.js","reducers/selected.js","reducers/visualizations.js","api/metadata.js","api/index.js","api/dashboards.js","components/ItemGrid/gridUtil.js","reducers/messages.js","api/messages.js","reducers/snackbar.js","actions/snackbar.js","components/SnackbarMessage/SnackbarMessage.js","components/Item/VisualizationItem/plugin.js","actions/selected.js","api/localStorage.js","components/Item/MessagesItem/actions.js","reducers/editDashboard.js","reducers/editItemFilters.js","reducers/itemFilters.js","actions/itemFilters.js","actions/editItemFilters.js","api/editDashboard.js","actions/editDashboard.js","actions/dashboards.js","reducers/controlBar.js","api/controlBar.js","actions/controlBar.js","reducers/dimensions.js","reducers/settings.js","actions/dimensions.js","modules/colors.js","api/dataStatistics.js","components/ControlBar/DashboardItemChip.js","icons/AddCircle.js","reducers/dashboardsFilter.js","components/ControlBar/Filter.js","components/ControlBar/ShowMoreButton.js","components/ControlBar/controlBarDimensions.js","components/ControlBar/DashboardsBar.js","actions/dashboardsFilter.js","components/Dashboard/DashboardVerticalOffset.js","components/ItemSelect/selectableItems.js","components/ItemSelect/ItemSelectList.js","components/ItemSelect/actions.js","components/ItemSelect/ItemSelectSingle.js","components/ItemSelect/ItemSelect.js","components/TitleBar/EditTitleBar.js","components/ItemFilter/FilterDialog.js","reducers/activeModalDimension.js","actions/activeModalDimension.js","components/ItemFilter/FilterSelector.js","components/TitleBar/Info.js","components/TitleBar/ViewTitleBar.js","components/TitleBar/TitleBar.js","components/Item/VisualizationItem/DefaultPlugin.js","components/Item/ItemHeader.js","components/Item/VisualizationItem/ItemFooter.js","components/Item/ItemHeaderButton.js","components/Item/VisualizationItem/ItemHeaderButtons.js","modules/memoizeOne.js","components/Item/VisualizationItem/Item.js","widgets/Line.js","components/Item/MessagesItem/Item.js","components/Item/NotSupportedItem/Item.js","icons/Delete.js","components/Item/ListItem/Item.js","components/Item/ListItem/actions.js","components/Item/TextItem/Item.js","components/Item/AppItem/Item.js","components/Item/SpacerItem/Item.js","components/Item/Item.js","components/ItemGrid/DeleteItemButton.js","widgets/ModalLoadingMask.js","widgets/NoContentMessage.js","components/Item/ProgressiveLoadingContainer.js","components/ItemGrid/ItemGrid.js","components/FilterBar/FilterBadge.js","components/FilterBar/FilterBar.js","components/Dashboard/DashboardContent.js","components/Dashboard/ViewDashboard.js","components/ControlBar/ConfirmDeleteDialog.js","components/ControlBar/EditBar.js","components/Dashboard/EditDashboard.js","components/Dashboard/NewDashboard.js","components/Dashboard/Dashboard.js","components/Dashboard/dashboardModes.js","components/App.js","actions/user.js","locales/index.js","reducers/style.js","reducers/index.js","configureStore.js","modules/theme.js","index.js","modules/util.js"],"names":["react__WEBPACK_IMPORTED_MODULE_0__","__webpack_require__","react__WEBPACK_IMPORTED_MODULE_0___default","n","_dhis2_ui_core__WEBPACK_IMPORTED_MODULE_1__","DescriptionIcon","_ref","className","a","createElement","xmlns","width","height","viewBox","fill","colors","grey500","d","REPORT_TABLE","CHART","MAP","EVENT_REPORT","EVENT_CHART","APP","REPORTS","RESOURCES","USERS","MESSAGES","TEXT","SPACER","DOMAIN_TYPE_AGGREGATE","VISUALIZATION_TYPE_TABLE","VISUALIZATION_TYPE_CHART","VISUALIZATION_TYPE_MAP","spacerContent","emptyTextItemContent","isSpacerType","item","type","text","isTextType","isPluginType","itemTypeMap","hasOwnProperty","getPlugin","pluginName","plugin","global","_itemTypeMap","Object","_home_travis_build_dhis2_dashboards_app_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_defineProperty__WEBPACK_IMPORTED_MODULE_0__","id","endPointName","propName","countName","pluralTitle","i18n","t","domainType","visualizationType","appUrl","concat","appName","getItemUrl","d2","url","launchUrl","getBaseUrl","getItemIcon","TableIcon","ChartIcon","MapIcon","ExtensionIcon","PersonIcon","FontDownloadIcon","EmailIcon","CropFreeIcon","NotInterestedIcon","module","exports","list","itemicon","link","deleteicon","deletebutton","DEFAULT_STATE_USER","username","uiLocale","isSuperuser","sGetUserUsername","state","user","DEFAULT_STATE_DASHBOARDS","byId","items","updateDashboardProp","dashboardId","prop","value","objectSpread","defineProperty","sGetDashboardsRoot","dashboards","sGetDashboardById","orObject","sDashboardsIsFetching","sGetAllDashboards","sGetDashboardItems","sGetStarredDashboards","values","filter","dashboard","starred","sGetUnstarredDashboards","sGetDashboardsSortedByStarred","toConsumableArray","arraySort","getCustomDashboards","data","arrayFrom","map","index","name","displayName","description","displayDescription","favorite","owner","created","split","join","substr","lastUpdated","access","numberOfItems","orArray","dashboardItems","length","combineReducers","arguments","undefined","action","validateReducer","isLoading","showDescription","sGetSelectedRoot","selected","sGetSelectedId","sGetSelectedIsLoading","sGetSelectedShowDescription","DEFAULT_STATE_VISUALIZATIONS","isEmpty","p","sGetVisualization","visualizations","sGetVisualizationsRoot","getIdNameFields","rename","getDimensionFields","_ref2","withItems","arrayClean","getAxesFields","_ref3","getFavoriteFields","_ref4","withDimensions","withOptions","getFavoritesFields","_ref5","apiFetchFavorite","_ref6","fields","getInstance","then","Api","getApi","get","getEndPointName","onError","error","console","log","getDashboardItemsFields","withFavorite","getDashboardFields","apiFetchDashboard","models","catch","apiStarDashboard","isStarred","post","delete","apiDeleteDashboard","MARGIN","NEW_ITEM_SHAPE","x","y","w","h","isNonNegativeInteger","Number","isInteger","hasShape","withShape","itemWithShape","assign","i","Error","col","row","Math","floor","itemWidth","GRID_ROW_HEIGHT","getShape","originalHeight","round","max","getOriginalHeight","getGridItemDomId","onItemResize","el","document","querySelector","isFunction","setViewportSize","setTimeout","clientWidth","clientHeight","sGetMessagesRoot","messages","getMessages","DEFAULT_STATE_SNACKBAR","message","duration","open","acCloseSnackbar","loadingDashboardMsg","SnackbarMessageContent","react_default","style","fontWeight","connect","_sGetSnackbar","snackbar","sGetSnackbar","snackbarOpen","snackbarMessage","snackbarDuration","onCloseSnackbar","props","Snackbar_default","SnackbarMessage_SnackbarMessageContent","autoHideDuration","onClose","pluginIsAvailable","activeType","extractFavorite","isObject","reportTable","chart","eventReport","eventChart","loadPlugin","config","credentials","load","baseUrl","loadingIndicator","auth","getId","getName","getLink","asyncToGenerator","regenerator_default","mark","_callee","visualization","_args","wrap","_context","prev","next","stop","_x","_x2","_x3","_x4","apply","this","fetch","_callee2","fetchedFavorite","_context2","sent","abrupt","_x5","resize","unmount","getVisualizationConfig","originalType","extractedMapView","mapViews","find","mv","layer","includes","getWithoutId","acSetSelectedId","acSetSelectedIsLoading","acReceivedVisualization","tLoadDashboard","dispatch","getState","dash","acAppendDashboards","Promise","resolve","t0","tSetSelectedDashboardById","snackbarTimeout","onSuccess","dashboardName","customDashboard","acSetDashboardItems","localStorage","setItem","forEach","messageConversations","clearTimeout","DEFAULT_STATE_EDIT_DASHBOARD","NEW_DASHBOARD_STATE","sGetEditDashboardRoot","editDashboard","sGetIsEditing","sGetEditDashboardItems","DEFAULT_STATE_EDIT_ITEM_FILTERS","sGetEditItemFiltersRoot","editItemFilters","DEFAULT_STATE_ITEM_FILTERS","sGetItemFiltersRoot","itemFilters","sGetFiltersKeys","keys","acRemoveItemFilter","acRemoveEditItemFilter","saveDashboard","save","msg","response","uid","updateDashboard","postDashboard","create","acAddDashboardItem","itemPropName","generateUid","content","acUpdateDashboardItem","acRemoveDashboardItem","arrayToIdMap","acSetDashboardStarred","tFetchDashboards","collection","paging","toArray","userRows","sGetControlBarUserRows","controlBar","sGetControlBarRoot","KEY","hasNamespace","currentUser","dataStore","has","getNamespace","apiGetControlBarRows","_callee3","namespace","_context3","t1","t2","key","apiPostControlBarRows","_callee4","rows","_context4","set","acSetControlBarUserRows","DEFAULT_DIMENSIONS","pe","FIXED_DIMENSIONS","ou","sGetDimensions","dimensions","DEFAULT_SETTINGS","keyDateFormat","keyAnalysisRelativePeriod","keyAnalysisDigitGroupSeparator","displayNameProperty","rootOrganisationUnit","sGetSettings","settings","sGetSettingsDisplayNameProperty","acSetDimensions","keyBy","sortBy","toLowerCase","apiPostDataStatistics","eventType","chipTheme","default","labelColor","backgroundColor","primary","accent","DashboardItemChip","label","chipColorProps","labelStyle","fontSize","lineHeight","margin","cursor","Link","display","verticalAlign","textDecoration","to","onClick","debounce","Chip_default","avatarProps","color","Avatar_default","icon","Star_default","avatar","AddCircleIcon","teal600","ownerData","DEFAULT_STATE_DASHBOARDS_FILTER_NAME","DEFAULT_STATE_DASHBOARDS_FILTER_OWNER","order","sGetDashboardsFilterRoot","dashboardsFilter","sGetFilterName","KEYCODE_ENTER","KEYCODE_ESCAPE","styles","filterField","top","filterFieldInput","left","filterFieldUnderline","bottom","filterFieldUnderlineFocus","borderColor","borderWidth","clearButton","padding","clearButtonIcon","Filter","_Component","_this","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","setFilterValue","event","preventDefault","onChangeName","target","handleKeyUp","keyCode","onKeypressEnter","inherits","createClass","nextProps","setState","TextField_default","onChange","onKeyUp","hintText","inputStyle","hintStyle","filterFieldHint","underlineStyle","underlineFocusStyle","Component","defaultProps","Function","prototype","ClearButton","disabled","IconButton_default","opacity","iconStyle","Clear_default","ControlBar_Filter","react","Filter_Filter","Filter_ClearButton","showMore","paddingTop","textTransform","visibility","withStyles","isMaxHeight","classes","textAlign","MIN_ROW_COUNT","getRowsHeight","getNumRowsFromHeight","FIRST_ROW_PADDING_HEIGHT","getTopOffset","getControlBarHeight","expandable","flapHeight","END_FLAP_HEIGHT","MAX_ROW_COUNT","DashboardsBar","_getPrototypeOf2","_len","args","Array","_key","setInitialDashboardState","onChangeHeight","newHeight","newRows","newRowCount","min","onEndDrag","onToggleMaxHeight","onSelectDashboard","history","push","_this$props","selectedId","onChangeFilterName","rowCount","controlBarHeight","contentWrapperStyle","overflowY","ControlBar_default","editMode","marginRight","AddCircle","ControlBar_DashboardItemChip","ControlBar_ShowMoreButton","mapDispatchToProps","withRouter","stateProps","dispatchProps","ownProps","displayDashboards","marginTop","singleItems","header","listItems","title","ItemSelectList","addItem","tAddListItemContent","newItem","match","toggleSeeMore","seeMore","onChangeItemsLimit","_this2","justifyContent","paddingLeft","Button_default","Divider_default","List","itemUrl","context","ItemIcon","leftIcon","innerDivStyle","hoverColor","primaryText","alignItems","marginLeft","rel","href","Launch_default","contextTypes","PropTypes","object","isRequired","dashboardItem","listItemType","dashboardItemIndex","findIndex","SingleItem","onAddToDashboard","category","addToDashboard","ItemSelectSingle_SingleItem","searchIcon","ItemSearchField","Search_default","fullWidth","ItemSelect","closeList","openList","fetchItems","anchorEl","currentTarget","setFilter","getListItems","itemType","ItemSelect_ItemSelectList","popoverChildren","SingleItems","ItemSelect_ItemSelectSingle","maxOption","api","queryString","maxOptions","add","Set","ItemSelect_ItemSearchField","Popover_default","anchorOrigin","horizontal","vertical","transformOrigin","PaperProps","disableAutoFocus","disableRestoreFocus","React","EditTitleBar","onChangeTitle","onChangeDescription","titleStyle","section","titleDescription","text_field_TextField_default","multiline","rowsMax","placeholder","itemSelect","components_ItemSelect_ItemSelect","selectedDashboard","flex","minWidth","maxWidth","position","peId","ouId","FilterDialog","onConfirm","dimension","selectedItems","dialogId","commonProps","onSelect","onDeselect","onReorder","build","selectedPeriods","ouItems","dialogTitle","_this$props2","Dialog_default","disableEnforceFocus","dialogContent","DialogActions_default","es_Button","kind","DEFAULT_STATE_ACTIVE_MODAL_DIMENSION","sGetActiveModalDimension","activeModalDimension","acSetActiveModalDimension","FilterSelector","openPanel","closePanel","closeDialog","clearActiveModalDimension","selectDimension","setActiveModalDimension","onSelectItems","dimensionId","setEditItemFilters","onDeselectItems","itemIdsToRemove","newList","removeEditItemFilter","onReorderItems","itemIds","oldList","reorderedList","saveFilter","filterItems","addItemFilter","removeItemFilter","selectedDimensions","ArrowDropDown_default","Boolean","onDimensionClick","selectedIds","ItemFilter_FilterDialog","filters","Info","show","toggle","InfoOutlined_default","NO_DESCRIPTION","actions","starIcon","textButton","editLink","titleBar","titleBarIcon","ViewTitleBar","toggleSharingDialog","sharingDialogIsOpen","onStarClick","onInfoClick","userSelect","StarIcon","Star","StarBorder","TitleBar_Info","update","manage","ItemFilter_FilterSelector","paddingBottom","d2_ui_sharing_dialog_default","onRequestClose","tStarDashboard","TitleBar","edit","TitleBar_EditTitleBar","TitleBar_ViewTitleBar","DefaultPlugin","pluginCredentials","shouldPluginReload","prevProps","reloadAllowed","filtersChanged","vis","prevVis","visChanged","reloadPlugin","pluginManager","currentVis","useActiveType","getActiveType","defaultHeaders","Authorization","textDiv","HEADER_HEIGHT","ItemHeader","actionButtons","scrollContainer","line","border","ItemFooter","objectId","d2_ui_interpretations_default","ItemHeaderButton","children","iconBase","buttonBase","buttonDisabled","toggleFooterPadding","borderRadius","baseStyle","container","disabledStyle","activeStyle","inactiveStyle","getItemTypeId","VisualizationItemHeaderButtons","onSelectVisualization","activeFooter","onToggleFooter","toggleFooterBase","toggleFooter","tableButtonStyle","tableBtnStyle","chartButtonStyle","chartBtnStyle","mapButtonStyle","mapBtnStyle","components_Item_ItemHeaderButton","Message_default","ViewList_default","InsertChart_default","Public_default","memoizeOne","fn","lastArgs","lastValue","every","arg","overflow","textOverflow","whiteSpace","fontStretch","applyFilters","visRows","obj","visColumns","columns","visFilters","dimensionFound","dimensionObjects","Item","showFooter","configLoaded","getUniqueKey","uniqueId","getPluginComponent","getContentStyle","data_visualizer_plugin_build","forDashboard","VisualizationItem_DefaultPlugin","onToggleItemExpanded","getTitle","itemName","getActionButtons","ItemHeaderButtons","contentRef","offsetHeight","createRef","_componentDidMount","onVisualizationLoaded","_this$props3","Item_ItemHeader","ref","VisualizationItem_ItemFooter","acReceivedActiveVisualization","Line","PRIVATE","messageTypes","_messageTypes","listStyleType","seeAll","marginBottom","sender","snippet","maxHeight","MessagesItem","getMessageHref","msgIdentifier","messageType","getMessageSender","latestMsg","slice","getMessageItems","editClass","readClass","read","msgDate","location","messageCount","formatDate","userSettings","widgets_Line","string","MessagesContainer","NotSupportedItem","NotInterested_default","align","DeleteIcon","red500","getItemTitle","removeContent","handler","contentToRemove","ListItem","tRemoveListItemContent","contentItems","array","getContentItems","contentItem","deleteButton","Delete","grey900","newContent","textField","onChangeText","updatedItem","d2_ui_rich_text","onEdit","textDivStyle","viewItem","getIframeSrc","appDetails","iframeSrc","ouIds","ouPath","AppItem","appKey","system","installedApps","app","src","SpacerItem","GridItem","VisualizationItem","TextItem","getGridItem","button","right","zIndex","DeleteItemHeaderButton","Delete_default","modal","pointerEvents","dark","ModalLoadingMask","LoadingMask_component_default","NoContentMessage","ProgressiveLoadingContainer","shouldLoad","containerRef","shouldLoadHandler","bufferPx","bufferFactor","window","innerHeight","rect","getBoundingClientRect","removeHandler","checkShouldLoad","debounceMs","addEventListener","removeEventListener","registerHandler","_this3","objectWithoutProperties","ItemGrid","expandedItems","NO_ITEMS_MESSAGE","clickedId","isExpanded","onRemoveItem","onLayoutChange","newLayout","acUpdateDashboardLayout","onResizeStop","layout","oldItem","pluginResize","onRemoveItemWrapper","widgets_NoContentMessage","expandedItem","hProp","minH","widgets_ModalLoadingMask","react_grid_layout_default","cols","rowHeight","innerWidth","compactType","isDraggable","isResizable","draggableCancel","itemClassNames","Item_ProgressiveLoadingContainer","DeleteItemButton","Item_Item_Item","validItems","badgeContainer","badge","badgeRemove","FilterBadge","onRemove","count","FilterBar","onBadgeRemove","onBadgeClick","bar","FilterBar_FilterBadge","removeItemFIlter","filtersSelector","createSelector","reduce","arr","flexWrap","DashboardContent","components_TitleBar_TitleBar","components_FilterBar_FilterBar","components_ItemGrid_ItemGrid","Content","hasDashboardContent","dashboardsIsEmpty","Dashboard_DashboardContent","dashboardsLoaded","contentNotReady","ControlBar_DashboardsBar","Dashboard_DashboardVerticalOffset","ViewDashboard_Content","ConfirmDeleteDialog","onDeleteConfirmed","onContinueEditing","secondary","destructive","DialogTitle_default","DialogContent_default","DialogContentText_default","buttonBarStyle","EditBar","translationDialogIsOpen","dashboardModel","confirmDeleteDialogOpen","redirectUrl","onConfirmDelete","onSave","newId","onDiscard","onDiscardChanges","onDelete","onTranslationsSaved","translations","dbLocale","translation","locale","property","onTranslate","fetchDashboardModel","toggleTranslationDialog","confirmDeleteDialog","deleteAccess","ControlBar_ConfirmDeleteDialog","translationDialog","d2_ui_translation_dialog_default","objectToTranslate","fieldsToTranslate","onTranslationSaved","onTranslationError","err","Redirect","updateAccess","discardBtnText","sGetIsNewDashboard","dashboardToSave","_x6","_x7","tDeleteDashboard","acSetDashboardDisplayName","EditDashboard","initialized","initEditDashboard","setEditDashboard","getDashboardContent","EditDashboard_Content","ControlBar_EditBar","NewDashboard","setNewDashboard","Dashboard","setDashboard","params","selectDashboard","scrollToTop","scrollTo","mode","Dashboard_EditDashboard","Dashboard_NewDashboard","Dashboard_ViewDashboard","dashboardToSelect","preferredId","getItem","App","setCurrentUser","fetchDashboards","setControlBarRows","setDimensions","HeaderBar_default","HashRouter","Switch","Route","exact","path","render","components_Dashboard_Dashboard","components_SnackbarMessage_SnackbarMessage","childContextTypes","controlBarRows","displayNameProp","filteredDimensions","apiFetchDimensions","dim","dimensionType","dataDimensionType","tSetDimensions","moment","addResources","enTranslations","loTranslations","svTranslations","urTranslations","viTranslations","setDefaultNamespace","changeLanguage","objectClean","conversations","$merge","d2Object","keyUiLocale","authorities","newState","k","$unshift","idToRemove","$splice","stateItems","newStateItems","stateItem","si","$set","configureStore","middleware","thunk","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","createStore","reducer","applyMiddleware","muiTheme","raisedButton","primaryColor","disabledColor","disabledTextColor","getMuiTheme","configI18n","sources","manifest","isProd","getManifest","info","version","manifest_generated_at","process","activities","dhis","dhis2","apiVersion","headers","schemas","getUserSettings","d2Init","initializedD2","ReactDOM","es","store","theme","createMuiTheme","dhis2theme","index_es","src_components_App","getElementById","init","param","isArray","Intl","DateTimeFormat","year","month","day","format","Date","replace","defaultValue","idx","indexOf","_home_travis_build_dhis2_dashboards_app_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectSpread__WEBPACK_IMPORTED_MODULE_0__"],"mappings":"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","file":"static/js/main.e14e59e5.chunk.js","sourcesContent":["import React from 'react';\nimport { colors } from '@dhis2/ui-core';\n\nconst DescriptionIcon = ({ className }) => (\n    <svg\n        className={className}\n        xmlns=\"http://www.w3.org/2000/svg\"\n        width=\"18\"\n        height=\"18\"\n        viewBox=\"0 0 24 24\"\n        fill={colors.grey500}\n    >\n        <path d=\"M0 0h24v24H0z\" fill=\"none\" />\n        <path d=\"M14 2H6c-1.1 0-1.99.9-1.99 2L4 20c0 1.1.89 2 1.99 2H18c1.1 0 2-.9 2-2V8l-6-6zm2 16H8v-2h8v2zm0-4H8v-2h8v2zm-3-5V3.5L18.5 9H13z\" />\n    </svg>\n);\n\nexport default DescriptionIcon;\n","import i18n from '@dhis2/d2-i18n';\nimport TableIcon from '@material-ui/icons/ViewList';\nimport ChartIcon from '@material-ui/icons/InsertChart';\nimport MapIcon from '@material-ui/icons/Public';\nimport ExtensionIcon from '@material-ui/icons/Extension';\nimport DescriptionIcon from '../icons/Description';\nimport PersonIcon from '@material-ui/icons/Person';\nimport FontDownloadIcon from '@material-ui/icons/FontDownload';\nimport EmailIcon from '@material-ui/icons/Email';\nimport CropFreeIcon from '@material-ui/icons/CropFree';\nimport NotInterestedIcon from '@material-ui/icons/NotInterested';\n\nimport { getBaseUrl } from './util';\n\n// Item types\nexport const REPORT_TABLE = 'REPORT_TABLE';\nexport const CHART = 'CHART';\nexport const MAP = 'MAP';\nexport const EVENT_REPORT = 'EVENT_REPORT';\nexport const EVENT_CHART = 'EVENT_CHART';\nexport const APP = 'APP';\nexport const REPORTS = 'REPORTS';\nexport const RESOURCES = 'RESOURCES';\nexport const USERS = 'USERS';\nexport const MESSAGES = 'MESSAGES';\nexport const TEXT = 'TEXT';\nexport const SPACER = 'SPACER';\n\n// Domain types\nexport const DOMAIN_TYPE_AGGREGATE = 'AGGREGATE';\nexport const DOMAIN_TYPE_TRACKER = 'TRACKER';\n\n// Visualization types\nexport const VISUALIZATION_TYPE_TABLE = 'TABLE';\nexport const VISUALIZATION_TYPE_CHART = 'CHART';\nexport const VISUALIZATION_TYPE_MAP = 'MAP';\n\nexport const spacerContent = 'SPACER_ITEM_FOR_DASHBOARD_LAYOUT_CONVENIENCE';\nexport const emptyTextItemContent = 'TEXT_ITEM_WITH_NO_CONTENT';\nexport const isSpacerType = item =>\n    item.type === TEXT && item.text === spacerContent;\nexport const isTextType = item =>\n    item.type === TEXT && item.text !== spacerContent;\nexport const isPluginType = item =>\n    itemTypeMap[item.type].hasOwnProperty('plugin');\n\nexport const getPlugin = type => {\n    const pluginName = itemTypeMap[type].plugin;\n\n    if (type === CHART) {\n        return true;\n    }\n\n    return global[pluginName];\n};\n\n// Item type map\nexport const itemTypeMap = {\n    [REPORT_TABLE]: {\n        id: REPORT_TABLE,\n        endPointName: 'reportTables',\n        propName: 'reportTable',\n        countName: 'reportTableCount',\n        pluralTitle: i18n.t('Pivot tables'),\n        plugin: 'reportTablePlugin',\n        domainType: DOMAIN_TYPE_AGGREGATE,\n        visualizationType: VISUALIZATION_TYPE_TABLE,\n        appUrl: id => `dhis-web-pivot/?id=${id}`,\n        appName: i18n.t('Pivot Tables'),\n    },\n    [CHART]: {\n        id: CHART,\n        endPointName: 'charts',\n        propName: 'chart',\n        countName: 'chartCount',\n        pluralTitle: i18n.t('Charts'),\n        plugin: 'chartPlugin',\n        domainType: DOMAIN_TYPE_AGGREGATE,\n        visualizationType: VISUALIZATION_TYPE_CHART,\n        appUrl: id => `dhis-web-data-visualizer/#/${id}`,\n        appName: i18n.t('Visualizer'),\n    },\n    [MAP]: {\n        id: MAP,\n        endPointName: 'maps',\n        propName: 'map',\n        countName: 'mapCount',\n        pluralTitle: i18n.t('Maps'),\n        plugin: 'mapPlugin',\n        domainType: DOMAIN_TYPE_AGGREGATE,\n        visualizationType: VISUALIZATION_TYPE_MAP,\n        appUrl: id => `dhis-web-maps/?id=${id}`,\n        appName: i18n.t('Maps'),\n    },\n    [EVENT_REPORT]: {\n        id: EVENT_REPORT,\n        endPointName: 'eventReports',\n        propName: 'eventReport',\n        countName: 'eventReportCount',\n        pluralTitle: i18n.t('Event reports'),\n        plugin: 'eventReportPlugin',\n        domainType: DOMAIN_TYPE_TRACKER,\n        visualizationType: VISUALIZATION_TYPE_TABLE,\n        appUrl: id => `dhis-web-event-reports/?id=${id}`,\n        appName: i18n.t('Event Reports'),\n    },\n    [EVENT_CHART]: {\n        id: EVENT_CHART,\n        endPointName: 'eventCharts',\n        propName: 'eventChart',\n        countName: 'eventChartCount',\n        pluralTitle: i18n.t('Event charts'),\n        plugin: 'eventChartPlugin',\n        domainType: DOMAIN_TYPE_TRACKER,\n        visualizationType: VISUALIZATION_TYPE_CHART,\n        appUrl: id => `dhis-web-event-visualizer/?id=${id}`,\n        appName: i18n.t('Event Visualizer'),\n    },\n    [APP]: {\n        endPointName: 'apps',\n        propName: 'appKey',\n        countName: 'appCount',\n        pluralTitle: 'Apps',\n    },\n    [REPORTS]: {\n        id: REPORTS,\n        endPointName: 'reports',\n        propName: 'reports',\n        countName: 'reportCount',\n        pluralTitle: i18n.t('Reports'),\n        appUrl: id =>\n            `dhis-web-reporting/getReportParams.action?mode=report&uid=${id}`,\n    },\n    [RESOURCES]: {\n        id: RESOURCES,\n        endPointName: 'resources',\n        propName: 'resources',\n        countName: 'resourceCount',\n        pluralTitle: i18n.t('Resources'),\n        appUrl: id => `api/documents/${id}/data`,\n    },\n    [USERS]: {\n        id: USERS,\n        endPointName: 'users',\n        propName: 'users',\n        countName: 'userCount',\n        pluralTitle: i18n.t('Users'),\n        appUrl: id => `dhis-web-dashboard-integration/profile.action?id=${id}`,\n    },\n    [TEXT]: {\n        id: TEXT,\n        propName: 'text',\n    },\n    [MESSAGES]: {\n        propName: 'messages',\n    },\n    [SPACER]: {\n        propName: 'text',\n    },\n};\n\nexport const getItemUrl = (type, item, d2) => {\n    let url;\n\n    if (type === APP) {\n        url = item.launchUrl;\n    }\n\n    if (itemTypeMap[type] && itemTypeMap[type].appUrl) {\n        url = `${getBaseUrl(d2)}/${itemTypeMap[type].appUrl(item.id)}`;\n    }\n\n    return url;\n};\n\nexport const getItemIcon = type => {\n    switch (type) {\n        case REPORT_TABLE:\n        case EVENT_REPORT:\n        case REPORTS:\n            return TableIcon;\n        case CHART:\n        case EVENT_CHART:\n            return ChartIcon;\n        case MAP:\n            return MapIcon;\n        case APP:\n            return ExtensionIcon;\n        case RESOURCES:\n            return DescriptionIcon;\n        case USERS:\n            return PersonIcon;\n        case TEXT:\n            return FontDownloadIcon;\n        case MESSAGES:\n            return EmailIcon;\n        case SPACER:\n            return CropFreeIcon;\n        default:\n            return NotInterestedIcon;\n    }\n};\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"Item_list__2oHc1\",\"item\":\"Item_item__lO40M\",\"itemicon\":\"Item_itemicon__dv5ah\",\"link\":\"Item_link__2gULT\",\"deleteicon\":\"Item_deleteicon__3c7bl\",\"deletebutton\":\"Item_deletebutton__1DfY5\"};","export const RECEIVED_USER = 'RECEIVED_USER';\n\nexport const DEFAULT_STATE_USER = {\n    id: '',\n    username: '',\n    uiLocale: '',\n    isSuperuser: false,\n};\n\nexport default (state = DEFAULT_STATE_USER, action) => {\n    switch (action.type) {\n        case RECEIVED_USER: {\n            return fromD2ToUserObj(action.value);\n        }\n        default:\n            return state;\n    }\n};\n\nfunction fromD2ToUserObj(d2Object) {\n    return {\n        id: d2Object.id,\n        username: d2Object.username,\n        uiLocale: d2Object.settings.keyUiLocale,\n        isSuperuser: d2Object.authorities.has('ALL'),\n    };\n}\n\n// selectors\n\nexport const sGetUserId = state => state.user.id;\nexport const sGetUserUsername = state => state.user.username;\nexport const sGetIsSuperuser = state => state.user.isSuperuser;\nexport const sGetUiLocale = state => state.user.uiLocale;\n","/** @module reducers/dashboards */\n\nimport arrayFrom from 'd2-utilizr/lib/arrayFrom';\nimport arraySort from 'd2-utilizr/lib/arraySort';\n\nimport { orArray, orObject } from '../modules/util';\nimport {\n    SPACER,\n    isSpacerType,\n    isTextType,\n    emptyTextItemContent,\n} from '../modules/itemTypes';\n\nexport const SET_DASHBOARDS = 'SET_DASHBOARDS';\nexport const ADD_DASHBOARDS = 'ADD_DASHBOARDS';\nexport const SET_DASHBOARD_STARRED = 'SET_DASHBOARD_STARRED';\nexport const SET_DASHBOARD_DISPLAY_NAME = 'SET_DASHBOARD_DISPLAY_NAME';\nexport const SET_DASHBOARD_ITEMS = 'SET_DASHBOARD_ITEMS';\n\nexport const DEFAULT_STATE_DASHBOARDS = {\n    byId: null,\n    items: [],\n};\n\n// reducer helper functions\n\nconst updateDashboardProp = (state, dashboardId, prop, value) => ({\n    byId: {\n        ...state.byId,\n        [dashboardId]: {\n            ...state.byId[dashboardId],\n            [prop]: value,\n        },\n    },\n    items: state.items,\n});\n\n/**\n * Reducer that computes and returns the new state based on the given action\n * @function\n * @param {Object} state The current state\n * @param {Object} action The action to be evaluated\n * @returns {Object}\n */\nexport default (state = DEFAULT_STATE_DASHBOARDS, action) => {\n    switch (action.type) {\n        case SET_DASHBOARDS: {\n            return {\n                byId: action.value,\n                items: [],\n            };\n        }\n        case ADD_DASHBOARDS: {\n            return {\n                ...state,\n                byId: {\n                    ...state.byId,\n                    ...action.value,\n                },\n            };\n        }\n        case SET_DASHBOARD_STARRED: {\n            return updateDashboardProp(\n                state,\n                action.dashboardId,\n                'starred',\n                action.value\n            );\n        }\n        case SET_DASHBOARD_DISPLAY_NAME: {\n            return updateDashboardProp(\n                state,\n                action.dashboardId,\n                'displayName',\n                action.value\n            );\n        }\n        case SET_DASHBOARD_ITEMS: {\n            return {\n                ...state,\n                items: action.value,\n            };\n        }\n        default:\n            return state;\n    }\n};\n\n// root selector\n\nexport const sGetDashboardsRoot = state => state.dashboards;\n\n// selector level 1\n\n/**\n * Selector which returns a dashboard by id from the state object\n * If no matching dashboard is found it returns undefined\n * If dashboards.byId is null, then the dashboards api request\n * has not yet completed. If dashboards.byId is an empty object\n * then the dashboards api request is complete, but no dashboards\n * were returned\n *\n * @function\n * @param {Object} state The current state\n * @param {Number} id The id of the dashboard\n * @returns {Object | undefined}\n */\nexport const sGetDashboardById = (state, id) =>\n    orObject(sGetDashboardsRoot(state).byId)[id];\n\nexport const sDashboardsIsFetching = state => {\n    return sGetDashboardsRoot(state).byId === null;\n};\n\n/**\n * Selector which returns all dashboards (the byId object)\n *\n * @function\n * @param {Object} state The current state\n * @returns {Object | undefined}\n */\nexport const sGetAllDashboards = state =>\n    orObject(sGetDashboardsRoot(state).byId);\n\n/**\n * Selector which returns the current dashboard items\n *\n * @function\n * @param {Object} state The current state\n * @returns {Array}\n */\nexport const sGetDashboardItems = state => sGetDashboardsRoot(state).items;\n\n// selector level 2\n\nexport const sGetStarredDashboards = state =>\n    Object.values(sGetAllDashboards(state)).filter(\n        dashboard => dashboard.starred === true\n    );\n\nexport const sGetUnstarredDashboards = state =>\n    Object.values(sGetAllDashboards(state)).filter(\n        dashboard => dashboard.starred === false\n    );\n\n// selector level 3\n\nexport const sGetStarredDashboardIds = state => {\n    return sGetStarredDashboards(state).map(dashboard => dashboard.id);\n};\n\nexport const sGetUnstarredDashboardIds = state =>\n    sGetUnstarredDashboards(state).map(dashboard => dashboard.id);\n\nexport const sGetDashboardsSortedByStarred = state => [\n    ...arraySort(sGetStarredDashboards(state), 'ASC', 'displayName'),\n    ...arraySort(sGetUnstarredDashboards(state), 'ASC', 'displayName'),\n];\n\n// utils\n\n/**\n * Returns the array of dashboards, customized for ui\n * @function\n * @param {Array} data The original dashboard list\n * @returns {Array}\n */\nexport const getCustomDashboards = data => {\n    const uiItems = items =>\n        items.map(item => {\n            const type = isSpacerType(item) ? SPACER : item.type;\n            const text = isTextType(item)\n                ? item.text === emptyTextItemContent\n                    ? ''\n                    : item.text\n                : null;\n\n            return {\n                ...item,\n                ...(text !== null ? { text } : {}),\n                type,\n            };\n        });\n\n    return arrayFrom(data).map((d, index) => ({\n        id: d.id,\n        name: d.name,\n        displayName: d.displayName,\n        description: d.description,\n        displayDescription: d.displayDescription,\n        starred: d.favorite,\n        owner: d.user.name,\n        created: d.created\n            .split('T')\n            .join(' ')\n            .substr(0, 16),\n        lastUpdated: d.lastUpdated\n            .split('T')\n            .join(' ')\n            .substr(0, 16),\n        access: d.access,\n        numberOfItems: orArray(d.dashboardItems).length,\n        dashboardItems: uiItems(d.dashboardItems),\n    }));\n};\n","/** @module reducers/selected */\nimport { combineReducers } from 'redux';\n\nimport { validateReducer } from '../modules/util';\n\nexport const SET_SELECTED_ID = 'SET_SELECTED_ID';\nexport const SET_SELECTED_ISLOADING = 'SET_SELECTED_ISLOADING';\nexport const SET_SELECTED_SHOWDESCRIPTION = 'SET_SELECTED_SHOWDESCRIPTION';\n\nexport const DEFAULT_STATE_SELECTED_ID = null;\nexport const DEFAULT_STATE_SELECTED_ISLOADING = false;\nexport const DEFAULT_STATE_SELECTED_SHOWDESCRIPTION = false;\n\n/**\n * Reducer functions that computes and returns the new state based on the given action\n * @function\n * @param {Object} state The current state\n * @param {Object} action The action to be evaluated\n */\nconst id = (state = DEFAULT_STATE_SELECTED_ID, action) => {\n    switch (action.type) {\n        case SET_SELECTED_ID:\n            return validateReducer(action.value, DEFAULT_STATE_SELECTED_ID);\n        default:\n            return state;\n    }\n};\n\nconst isLoading = (state = DEFAULT_STATE_SELECTED_ISLOADING, action) => {\n    switch (action.type) {\n        case SET_SELECTED_ISLOADING:\n            return validateReducer(\n                action.value,\n                DEFAULT_STATE_SELECTED_ISLOADING\n            );\n        default:\n            return state;\n    }\n};\n\nconst showDescription = (\n    state = DEFAULT_STATE_SELECTED_SHOWDESCRIPTION,\n    action\n) => {\n    switch (action.type) {\n        case SET_SELECTED_SHOWDESCRIPTION:\n            return validateReducer(\n                action.value,\n                DEFAULT_STATE_SELECTED_SHOWDESCRIPTION\n            );\n        default:\n            return state;\n    }\n};\n\nexport default combineReducers({\n    id,\n    isLoading,\n    showDescription,\n});\n\n// Selectors\n\nexport const sGetSelectedRoot = state => state.selected;\n\nexport const sGetSelectedId = state => sGetSelectedRoot(state).id;\n\nexport const sGetSelectedIsLoading = state => sGetSelectedRoot(state).isLoading;\n\nexport const sGetSelectedShowDescription = state =>\n    sGetSelectedRoot(state).showDescription;\n","import { orObject } from '../modules/util';\nimport objectClean from 'd2-utilizr/lib/objectClean';\n\n/** @module reducers/visualizations */\n\nexport const RECEIVED_VISUALIZATION = 'RECEIVED_VISUALIZATION';\nexport const RECEIVED_ACTIVE_VISUALIZATION = 'RECEIVED_ACTIVE_VISUALIZATION';\n\nexport const DEFAULT_STATE_VISUALIZATIONS = {};\n\nconst isEmpty = p => p === undefined || p === null;\n\nexport default (state = DEFAULT_STATE_VISUALIZATIONS, action) => {\n    switch (action.type) {\n        case RECEIVED_VISUALIZATION: {\n            return {\n                ...state,\n                [action.value.id]: objectClean(\n                    {\n                        ...orObject(state[action.value.id]),\n                        ...action.value,\n                    },\n                    isEmpty\n                ),\n            };\n        }\n        case RECEIVED_ACTIVE_VISUALIZATION: {\n            return {\n                ...state,\n                [action.id]: objectClean(\n                    {\n                        ...orObject(state[action.id]),\n                        activeType: action.activeType,\n                    },\n                    isEmpty\n                ),\n            };\n        }\n        default:\n            return state;\n    }\n};\n\n// root selector\nexport const sGetVisualizationsRoot = state => state.visualizations;\n\n// selectors level 1\nexport const sGetVisualization = (state, id) => {\n    return sGetVisualizationsRoot(state)[id];\n};\n","import { getInstance } from 'd2';\nimport arrayClean from 'd2-utilizr/lib/arrayClean';\n\nimport { getEndPointName } from './index';\n\n// Id, name\nexport const getIdNameFields = ({ rename } = {}) => [\n    'id',\n    `${rename ? 'displayName~rename(name)' : 'name,displayName'}`,\n];\n\n// Item\nexport const getItemFields = () => [\n    'dimensionItem~rename(id)',\n    'displayName~rename(name)',\n    'dimensionItemType',\n];\n\n// Dimension\nexport const getDimensionFields = ({ withItems }) =>\n    arrayClean([\n        'dimension',\n        'legendSet[id]',\n        'filter',\n        withItems ? `items[${getItemFields().join(',')}]` : ``,\n    ]);\n\n// Axis\nexport const getAxesFields = ({ withItems }) => [\n    `columns[${getDimensionFields({ withItems }).join(',')}]`,\n    `rows[${getDimensionFields({ withItems }).join(',')}]`,\n    `filters[${getDimensionFields({ withItems }).join(',')}]`,\n];\n\n// Favorite\nexport const getFavoriteFields = ({ withDimensions, withOptions }) => {\n    return arrayClean([\n        `${getIdNameFields({ rename: true }).join(',')}`,\n        'displayDescription~rename(description)',\n        withDimensions ? `${getAxesFields({ withItems: true }).join(',')}` : ``,\n        withOptions\n            ? [\n                  '*',\n                  '!attributeDimensions',\n                  '!attributeValues',\n                  '!category',\n                  '!categoryDimensions',\n                  '!categoryOptionGroupSetDimensions',\n                  '!columnDimensions',\n                  '!dataDimensionItems',\n                  '!dataElementDimensions',\n                  '!dataElementGroupSetDimensions',\n                  '!filterDimensions',\n                  '!itemOrganisationUnitGroups',\n                  '!lastUpdatedBy',\n                  '!organisationUnitGroupSetDimensions',\n                  '!organisationUnitLevels',\n                  '!organisationUnits',\n                  '!programIndicatorDimensions',\n                  '!relativePeriods',\n                  '!reportParams',\n                  '!rowDimensions',\n                  '!series',\n                  '!translations',\n                  '!userOrganisationUnit',\n                  '!userOrganisationUnitChildren',\n                  '!userOrganisationUnitGrandChildren',\n              ].join(',')\n            : '',\n    ]);\n};\n\nexport const getFavoritesFields = ({ withDimensions, withOptions }) => [\n    `reportTable[${getFavoriteFields({ withDimensions }).join(',')}]`,\n    `chart[${['type', ...getFavoriteFields({ withDimensions })].join(',')}]`,\n    `map[${getFavoriteFields({ withDimensions }).join(',')}]`,\n    `eventReport[${getFavoriteFields({ withDimensions }).join(',')}]`,\n    `eventChart[${getFavoriteFields({ withDimensions }).join(',')}]`,\n];\n\n// List item\nexport const getListItemFields = () => [\n    `reports[${getIdNameFields({ rename: true }).join(',')}]`,\n    `resources[${getIdNameFields({ rename: true }).join(',')}]`,\n    `users[${getIdNameFields({ rename: true }).join(',')}]`,\n];\n\n// Map\nexport const getMapFields = () => [\n    `${getIdNameFields({ rename: true }).join(',')}`,\n    'user,longitude,latitude,zoom,basemap',\n    `mapViews[${getFavoriteFields({\n        withDimensions: true,\n        withOptions: true,\n    })}]`,\n];\n\n// Api\n\n// Get more info about the favorite of a dashboard item\nexport const apiFetchFavorite = (id, type, { fields }) =>\n    getInstance().then(d2 =>\n        d2.Api.getApi().get(`${getEndPointName(type)}/${id}`, {\n            fields:\n                fields ||\n                getFavoriteFields({\n                    withDimensions: true,\n                    withOptions: true,\n                }),\n        })\n    );\n","import arrayClean from 'd2-utilizr/lib/arrayClean';\nimport { itemTypeMap } from '../modules/itemTypes';\nimport {\n    getListItemFields,\n    getFavoritesFields,\n    getIdNameFields,\n} from './metadata';\n\n// Helper functions\n\nexport const onError = error => console.log('Error: ', error);\n\nexport const getEndPointName = type => itemTypeMap[type].endPointName;\n\n// Dashboard item\nexport const getDashboardItemsFields = ({ withFavorite } = {}) =>\n    arrayClean([\n        'id',\n        'type',\n        'shape',\n        'x',\n        'y',\n        'width~rename(w)',\n        'height~rename(h)',\n        'messages',\n        'text',\n        'appKey',\n        `${getListItemFields().join(',')}`,\n        withFavorite\n            ? `${getFavoritesFields({\n                  withDimensions: withFavorite.withDimensions,\n              }).join(',')}`\n            : ``,\n    ]);\n\n// Dashboard\nexport const getDashboardFields = ({ withItems, withFavorite } = {}) =>\n    arrayClean([\n        `${getIdNameFields().join(',')}`,\n        'description',\n        'displayDescription',\n        'favorite',\n        `user[${getIdNameFields({ rename: true }).join(',')}]`,\n        'created',\n        'lastUpdated',\n        'access',\n        withItems\n            ? `dashboardItems[${getDashboardItemsFields({\n                  withFavorite,\n              }).join(',')}]`\n            : ``,\n    ]);\n","import { getInstance } from 'd2';\nimport arrayClean from 'd2-utilizr/lib/arrayClean';\nimport { onError, getDashboardFields } from './index';\n\n// Get \"all\" dashboards on startup\nexport const apiFetchDashboards = () =>\n    getInstance()\n        .then(d2 =>\n            d2.models.dashboard.list({\n                fields: [\n                    getDashboardFields().join(','),\n                    'dashboardItems[id]',\n                ].join(','),\n                paging: 'false',\n            })\n        )\n        .catch(onError);\n\n// Get more info about selected dashboard\nexport const apiFetchDashboard = id =>\n    getInstance()\n        .then(d2 =>\n            d2.models.dashboard.get(id, {\n                fields: arrayClean(\n                    getDashboardFields({\n                        withItems: true,\n                        withFavorite: { withDimensions: false },\n                    })\n                ).join(','),\n            })\n        )\n        .catch(onError);\n\n// Star dashboard\nexport const apiStarDashboard = (id, isStarred) => {\n    const url = `dashboards/${id}/favorite`;\n\n    getInstance().then(d2 => {\n        if (isStarred) {\n            d2.Api.getApi().post(url);\n        } else {\n            d2.Api.getApi().delete(url);\n        }\n    });\n};\n\nexport const apiDeleteDashboard = id => {\n    return getInstance()\n        .then(d2 => {\n            return d2.models.dashboards\n                .get(id)\n                .then(dashboard => dashboard.delete());\n        })\n        .catch(onError);\n};\n","import isFunction from 'd2-utilizr/lib/isFunction';\n\nimport { orObject } from '../../modules/util';\n\n// Dimensions for the react-grid-layout\n\nexport const GRID_COMPACT_TYPE = 'vertical'; // vertical | horizonal | null\nexport const GRID_ROW_HEIGHT = 10;\nconst GRID_COLUMN_WIDTH_PX = 20;\nconst GRID_LAYOUT = 'FLEXIBLE'; // FIXED | FLEXIBLE\nexport const MARGIN = [10, 10];\n\nexport const NEW_ITEM_SHAPE = { x: 0, y: 0, w: 20, h: 29 };\nexport const ITEM_MIN_HEIGHT = 4;\n\n// Dimensions for getShape\n\nconst NUMBER_OF_ITEM_COLS = 2;\nconst GRID_COLUMNS = 60;\n\nexport const getGridColumns = () => {\n    switch (GRID_LAYOUT) {\n        case 'FLEXIBLE':\n            return GRID_COLUMNS;\n        case 'FIXED':\n            return Math.floor((window.innerWidth - 20) / GRID_COLUMN_WIDTH_PX);\n        default:\n            return GRID_COLUMNS;\n    }\n};\n\n// isNonNegativeInteger\n\nconst isNonNegativeInteger = x => Number.isInteger(x) && x >= 0;\n\n// Does the item have all the shape properties?\n\nexport const hasShape = item =>\n    isNonNegativeInteger(item.x) &&\n    isNonNegativeInteger(item.y) &&\n    isNonNegativeInteger(item.w) &&\n    isNonNegativeInteger(item.h);\n\n// returns a rectangular grid block dimensioned with x, y, w, h in grid units.\n// based on a grid with 3 items across\nexport const getShape = i => {\n    if (!isNonNegativeInteger(i)) {\n        throw new Error('Invalid grid block number');\n    }\n\n    const col = i % NUMBER_OF_ITEM_COLS;\n    const row = Math.floor(i / NUMBER_OF_ITEM_COLS);\n    const itemWidth = Math.floor((GRID_COLUMNS - 1) / NUMBER_OF_ITEM_COLS);\n    const itemHeight = GRID_ROW_HEIGHT * 2;\n\n    return {\n        x: col * itemWidth,\n        y: row * itemHeight,\n        w: itemWidth,\n        h: itemHeight,\n    };\n};\n\n/**\n * Calculates the grid item's original height in pixels based\n * on the height in grid units. This calculation\n * is copied directly from react-grid-layout GridItem.js (calcPosition)\n *\n * @param {Object} item item containing shape (x, y, w, h)\n */\nconst getOriginalHeight = item => {\n    const originalHeight = Math.round(\n        GRID_ROW_HEIGHT * item.h + Math.max(0, item.h - 1) * MARGIN[1]\n    );\n\n    return { originalHeight };\n};\n\n/**\n * Returns an array of items containing the x, y, w, h dimensions\n * and the item's originalheight in pixels\n * @function\n * @param {Array} items\n * @returns {Array}\n */\n\nexport const withShape = items =>\n    items.map((item, index) => {\n        const itemWithShape = hasShape(item)\n            ? item\n            : Object.assign({}, item, getShape(index));\n\n        return Object.assign(\n            {},\n            itemWithShape,\n            getOriginalHeight(itemWithShape)\n        );\n    });\n\nexport const getGridItemDomId = id => `item-${id}`;\n\nexport function onItemResize(id) {\n    const el = orObject(document.querySelector(`#${getGridItemDomId(id)}`));\n    if (isFunction(el.setViewportSize))\n        setTimeout(\n            () => el.setViewportSize(el.clientWidth - 5, el.clientHeight - 5),\n            10\n        );\n}\n","import update from 'immutability-helper';\nimport { arrayToIdMap } from '../modules/util';\n\nexport const RECEIVED_MESSAGES = 'RECEIVED_MESSAGES';\n\nexport default (state = {}, action) => {\n    switch (action.type) {\n        case RECEIVED_MESSAGES: {\n            const conversations = arrayToIdMap(action.value);\n\n            const newState = update(state, { $merge: conversations });\n\n            return newState;\n        }\n        default:\n            return state;\n    }\n};\n\n// selectors\n\nexport const sGetMessagesRoot = state => state.messages;\n","import { getInstance } from 'd2';\n\nexport const getMessages = () => {\n    const fields =\n        'id,messageCount,lastUpdated,messageType,displayName,read,messages[id,read,sender[id,displayName],text,lastUpdated]';\n    const url = `/messageConversations?fields=${fields}&order=read:asc&pageSize=200`;\n    return getInstance()\n        .then(d2 => d2.Api.getApi().get(url))\n        .catch(error => console.log('Error:', error));\n};\n","export const RECEIVED_SNACKBAR_MESSAGE = 'RECEIVED_SNACKBAR_MESSAGE';\nexport const CLOSE_SNACKBAR = 'CLOSE_SNACKBAR';\n\nexport const DEFAULT_STATE_SNACKBAR = {\n    message: {},\n    duration: null,\n    open: false,\n};\n\nexport default (state = DEFAULT_STATE_SNACKBAR, action) => {\n    switch (action.type) {\n        case RECEIVED_SNACKBAR_MESSAGE: {\n            return { ...state, ...action.value };\n        }\n        case CLOSE_SNACKBAR: {\n            return DEFAULT_STATE_SNACKBAR;\n        }\n        default:\n            return state;\n    }\n};\n\n// selectors\n\nexport const sGetSnackbar = state => state.snackbar || DEFAULT_STATE_SNACKBAR;\n","import {\n    RECEIVED_SNACKBAR_MESSAGE,\n    CLOSE_SNACKBAR,\n} from '../reducers/snackbar';\n\nexport const acReceivedSnackbarMessage = value => ({\n    type: RECEIVED_SNACKBAR_MESSAGE,\n    value,\n});\n\nexport const acCloseSnackbar = () => ({\n    type: CLOSE_SNACKBAR,\n});\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport Snackbar from '@material-ui/core/Snackbar';\n\nimport { sGetSnackbar } from '../../reducers/snackbar';\nimport { acCloseSnackbar } from '../../actions/snackbar';\n\nconst LOADING_DASHBOARD = 'LOADING_DASHBOARD';\nexport const loadingDashboardMsg = { name: '', type: LOADING_DASHBOARD };\n\nconst SnackbarMessageContent = ({ message }) => {\n    if (typeof message === 'object') {\n        //future message types:  switch(message.type)\n        return (\n            <span>\n                Loading <span style={{ fontWeight: 800 }}>{message.name}</span>{' '}\n                dashboard\n            </span>\n        );\n    }\n    return message;\n};\n\nexport const SnackbarMessage = props => {\n    return (\n        <Snackbar\n            open={props.snackbarOpen}\n            message={<SnackbarMessageContent message={props.snackbarMessage} />}\n            autoHideDuration={props.snackbarDuration}\n            onClose={props.onCloseSnackbar}\n        />\n    );\n};\n\nconst mapStateToProps = state => {\n    const { message, duration, open } = sGetSnackbar(state);\n    return {\n        snackbarOpen: open,\n        snackbarMessage: message,\n        snackbarDuration: duration,\n    };\n};\n\nexport default connect(\n    mapStateToProps,\n    {\n        onCloseSnackbar: acCloseSnackbar,\n    }\n)(SnackbarMessage);\n","import isObject from 'lodash/isObject';\nimport { apiFetchFavorite, getMapFields } from '../../../api/metadata';\nimport {\n    REPORT_TABLE,\n    CHART,\n    MAP,\n    EVENT_REPORT,\n    EVENT_CHART,\n    itemTypeMap,\n    getPlugin,\n} from '../../../modules/itemTypes';\nimport { getBaseUrl, getWithoutId } from '../../../modules/util';\nimport { getGridItemDomId } from '../../ItemGrid/gridUtil';\n\nexport const THEMATIC_LAYER = 'thematic';\n\nexport const pluginIsAvailable = (item = {}, visualization = {}) => {\n    const type = visualization.activeType || item.type;\n\n    return !!getPlugin(type);\n};\n\nexport const extractFavorite = item => {\n    if (!isObject(item)) {\n        return null;\n    }\n\n    switch (item.type) {\n        case REPORT_TABLE:\n            return item.reportTable;\n        case CHART:\n            return item.chart;\n        case MAP:\n            return item.map;\n        case EVENT_REPORT:\n            return item.eventReport;\n        case EVENT_CHART:\n            return item.eventChart;\n        default:\n            return (\n                item.reportTable ||\n                item.chart ||\n                item.map ||\n                item.eventReport ||\n                item.eventChart ||\n                {}\n            );\n    }\n};\n\nexport const extractMapView = map =>\n    map.mapViews && map.mapViews.find(mv => mv.layer.includes(THEMATIC_LAYER));\n\nexport const loadPlugin = (plugin, config, credentials) => {\n    if (!(plugin && plugin.load)) {\n        return;\n    }\n\n    plugin.url = credentials.baseUrl;\n    plugin.loadingIndicator = true;\n    plugin.dashboard = true;\n    if (credentials.auth) {\n        plugin.auth = credentials.auth;\n    }\n    plugin.load(config);\n};\n\nexport const getId = item => extractFavorite(item).id;\nexport const getName = item => extractFavorite(item).name;\nexport const getDescription = item => extractFavorite(item).description;\nexport const getLink = (item, d2) => {\n    const baseUrl = getBaseUrl(d2);\n    const appUrl = itemTypeMap[item.type].appUrl(getId(item));\n\n    return `${baseUrl}/${appUrl}`;\n};\n\nexport const load = async (\n    item,\n    visualization,\n    credentials,\n    activeType,\n    filter = {}\n) => {\n    const config = {\n        ...visualization,\n        el: getGridItemDomId(item.id),\n    };\n\n    const type = activeType || item.type;\n    const plugin = getPlugin(type);\n\n    loadPlugin(plugin, config, credentials);\n};\n\nexport const fetch = async item => {\n    const fetchedFavorite = await apiFetchFavorite(getId(item), item.type, {\n        fields: item.type === MAP ? getMapFields() : null,\n    });\n\n    return fetchedFavorite;\n};\n\nexport const resize = item => {\n    const plugin = getPlugin(item.type);\n\n    if (plugin && plugin.resize) {\n        plugin.resize(getGridItemDomId(item.id));\n    }\n};\n\nexport const unmount = (item, activeType) => {\n    const plugin = getPlugin(activeType);\n\n    if (plugin && plugin.unmount) {\n        plugin.unmount(getGridItemDomId(item.id));\n    }\n};\n\nexport const getVisualizationConfig = (\n    visualization,\n    originalType,\n    activeType\n) => {\n    if (originalType === MAP && originalType !== activeType) {\n        const extractedMapView = extractMapView(visualization);\n\n        if (extractedMapView === undefined) {\n            return null;\n        }\n\n        return getWithoutId({\n            ...visualization,\n            ...extractedMapView,\n            mapViews: undefined,\n        });\n    }\n\n    return getWithoutId(visualization);\n};\n","import {\n    SET_SELECTED_ID,\n    SET_SELECTED_ISLOADING,\n    SET_SELECTED_SHOWDESCRIPTION,\n} from '../reducers/selected';\nimport {\n    RECEIVED_VISUALIZATION,\n    RECEIVED_ACTIVE_VISUALIZATION,\n} from '../reducers/visualizations';\nimport { sGetSelectedIsLoading } from '../reducers/selected';\nimport { sGetUserUsername } from '../reducers/user';\nimport { getCustomDashboards, sGetDashboardById } from '../reducers/dashboards';\nimport { apiFetchDashboard } from '../api/dashboards';\nimport { acSetDashboardItems, acAppendDashboards } from './dashboards';\nimport { withShape } from '../components/ItemGrid/gridUtil';\nimport { tGetMessages } from '../components/Item/MessagesItem/actions';\nimport { acReceivedSnackbarMessage, acCloseSnackbar } from './snackbar';\nimport { storePreferredDashboardId } from '../api/localStorage';\nimport { loadingDashboardMsg } from '../components/SnackbarMessage/SnackbarMessage';\nimport {\n    REPORT_TABLE,\n    CHART,\n    MAP,\n    EVENT_REPORT,\n    EVENT_CHART,\n    MESSAGES,\n} from '../modules/itemTypes';\nimport { extractFavorite } from '../components/Item/VisualizationItem/plugin';\nimport { orObject } from '../modules/util';\n\n// actions\n\nexport const acSetSelectedId = value => ({\n    type: SET_SELECTED_ID,\n    value,\n});\n\nexport const acSetSelectedIsLoading = value => ({\n    type: SET_SELECTED_ISLOADING,\n    value,\n});\n\nexport const acSetSelectedShowDescription = value => ({\n    type: SET_SELECTED_SHOWDESCRIPTION,\n    value,\n});\n\nexport const acReceivedVisualization = value => ({\n    type: RECEIVED_VISUALIZATION,\n    value,\n});\n\nexport const acReceivedActiveVisualization = (id, type, activeType) => {\n    const action = {\n        type: RECEIVED_ACTIVE_VISUALIZATION,\n        id,\n    };\n\n    if (activeType !== type) {\n        action.activeType = activeType;\n    }\n\n    return action;\n};\n\nexport const tLoadDashboard = id => async (dispatch, getState) => {\n    try {\n        const dash = await apiFetchDashboard(id);\n        dispatch(acAppendDashboards(dash));\n\n        return Promise.resolve(dash);\n    } catch (err) {\n        console.log('Error: ', err);\n        return err;\n    }\n};\n\n// thunks\nexport const tSetSelectedDashboardById = id => async (dispatch, getState) => {\n    dispatch(acSetSelectedIsLoading(true));\n\n    const snackbarTimeout = setTimeout(() => {\n        const dashboardName = orObject(sGetDashboardById(getState(), id))\n            .displayName;\n        if (sGetSelectedIsLoading(getState()) && dashboardName) {\n            loadingDashboardMsg.name = dashboardName;\n\n            dispatch(\n                acReceivedSnackbarMessage({\n                    message: loadingDashboardMsg,\n                    open: true,\n                })\n            );\n        }\n    }, 500);\n\n    const onSuccess = selected => {\n        const customDashboard = getCustomDashboards(selected)[0];\n\n        dispatch(\n            acSetDashboardItems(withShape(customDashboard.dashboardItems))\n        );\n\n        storePreferredDashboardId(sGetUserUsername(getState()), id);\n\n        // add visualizations to store\n        customDashboard.dashboardItems.forEach(item => {\n            switch (item.type) {\n                case REPORT_TABLE:\n                case CHART:\n                case MAP:\n                case EVENT_REPORT:\n                case EVENT_CHART:\n                    dispatch(acReceivedVisualization(extractFavorite(item)));\n                    break;\n                case MESSAGES:\n                    dispatch(tGetMessages(id));\n                    break;\n                default:\n                    break;\n            }\n        });\n\n        dispatch(acSetSelectedId(id));\n\n        dispatch(acSetSelectedIsLoading(false));\n\n        clearTimeout(snackbarTimeout);\n\n        dispatch(acCloseSnackbar());\n\n        return selected;\n    };\n\n    const onError = error => {\n        console.log('Error: ', error);\n        return error;\n    };\n\n    try {\n        const selected = await dispatch(tLoadDashboard(id));\n\n        return onSuccess(selected);\n    } catch (err) {\n        return onError(err);\n    }\n};\n","export const getPreferredDashboardId = username =>\n    localStorage.getItem(`dhis2.dashboard.current.${username}`) || undefined;\n\nexport const storePreferredDashboardId = (username, dashboardId) => {\n    localStorage.setItem(`dhis2.dashboard.current.${username}`, dashboardId);\n};\n","import { RECEIVED_MESSAGES } from '../../../reducers/messages';\nimport { getMessages } from '../../../api/messages';\n\nconst onError = (action, error) => {\n    console.log(`Error in action ${action}: ${error}`);\n    return error;\n};\n\nexport const receivedMessages = value => ({\n    type: RECEIVED_MESSAGES,\n    value,\n});\n\nexport const tGetMessages = dashboardItemId => async dispatch => {\n    try {\n        const messages = await getMessages();\n        const { messageConversations } = messages;\n\n        return dispatch(receivedMessages(messageConversations));\n    } catch (err) {\n        return onError('Get Messages', err);\n    }\n};\n","/** @module reducers/editDashboard */\nimport update from 'immutability-helper';\nimport isEmpty from 'lodash/isEmpty';\nimport { orArray, orObject } from '../modules/util';\n\nexport const RECEIVED_EDIT_DASHBOARD = 'RECEIVED_EDIT_DASHBOARD';\nexport const RECEIVED_NOT_EDITING = 'RECEIVED_NOT_EDITING';\nexport const START_NEW_DASHBOARD = 'START_NEW_DASHBOARD';\nexport const RECEIVED_TITLE = 'RECEIVED_TITLE';\nexport const RECEIVED_DESCRIPTION = 'RECEIVED_DESCRIPTION';\nexport const ADD_DASHBOARD_ITEM = 'ADD_DASHBOARD_ITEM';\nexport const REMOVE_DASHBOARD_ITEM = 'REMOVE_DASHBOARD_ITEM';\nexport const UPDATE_DASHBOARD_ITEM = 'UPDATE_DASHBOARD_ITEM';\nexport const RECEIVED_DASHBOARD_LAYOUT = 'RECEIVED_DASHBOARD_LAYOUT';\n\nexport const DEFAULT_STATE_EDIT_DASHBOARD = {};\nexport const NEW_DASHBOARD_STATE = {\n    id: '',\n    name: '',\n    access: {},\n    description: '',\n    dashboardItems: [],\n};\n\nexport default (state = DEFAULT_STATE_EDIT_DASHBOARD, action) => {\n    switch (action.type) {\n        case RECEIVED_EDIT_DASHBOARD:\n            const newState = {};\n            Object.keys(NEW_DASHBOARD_STATE).map(\n                k => (newState[k] = action.value[k])\n            );\n            return newState;\n        case RECEIVED_NOT_EDITING:\n            return DEFAULT_STATE_EDIT_DASHBOARD;\n        case START_NEW_DASHBOARD:\n            return NEW_DASHBOARD_STATE;\n        case RECEIVED_TITLE: {\n            return Object.assign({}, state, { name: action.value });\n        }\n        case RECEIVED_DESCRIPTION: {\n            return Object.assign({}, state, {\n                description: action.value,\n            });\n        }\n        case ADD_DASHBOARD_ITEM:\n            return update(state, {\n                dashboardItems: { $unshift: [action.value] },\n            });\n        case REMOVE_DASHBOARD_ITEM: {\n            const idToRemove = action.value;\n\n            const dashboardItemIndex = state.dashboardItems.findIndex(\n                item => item.id === idToRemove\n            );\n\n            if (dashboardItemIndex > -1) {\n                return update(state, {\n                    dashboardItems: {\n                        $splice: [[dashboardItemIndex, 1]],\n                    },\n                });\n            }\n\n            return state;\n        }\n        case RECEIVED_DASHBOARD_LAYOUT: {\n            const stateItems = orArray(state.dashboardItems);\n\n            const newStateItems = action.value.map(({ x, y, w, h, i }) => {\n                const stateItem = stateItems.find(si => si.id === i);\n\n                return Object.assign({}, stateItem, { w, h, x, y });\n            });\n\n            return update(state, {\n                dashboardItems: { $set: newStateItems },\n            });\n        }\n        case UPDATE_DASHBOARD_ITEM: {\n            const dashboardItem = action.value;\n\n            const dashboardItemIndex = state.dashboardItems.findIndex(\n                item => item.id === dashboardItem.id\n            );\n\n            if (dashboardItemIndex > -1) {\n                const newState = update(state, {\n                    dashboardItems: {\n                        $splice: [[dashboardItemIndex, 1, dashboardItem]],\n                    },\n                });\n\n                return newState;\n            }\n\n            return state;\n        }\n        default:\n            return state;\n    }\n};\n\n// root selector\n\nexport const sGetEditDashboardRoot = state => state.editDashboard;\n\n// selectors\n\nexport const sGetIsEditing = state => !isEmpty(state.editDashboard);\n\nexport const sGetIsNewDashboard = state => {\n    return (\n        !isEmpty(state.editDashboard) && sGetEditDashboardRoot(state).id === ''\n    );\n};\n\nexport const sGetEditDashboardItems = state =>\n    orObject(sGetEditDashboardRoot(state)).dashboardItems;\n","export const CLEAR_EDIT_ITEM_FILTERS = 'CLEAR_EDIT_ITEM_FILTERS';\nexport const REMOVE_EDIT_ITEM_FILTER = 'REMOVE_EDIT_ITEM_FILTER';\nexport const SET_EDIT_ITEM_FILTERS = 'SET_EDIT_ITEM_FILTERS';\n\nexport const DEFAULT_STATE_EDIT_ITEM_FILTERS = {};\n\nexport default (state = DEFAULT_STATE_EDIT_ITEM_FILTERS, action) => {\n    switch (action.type) {\n        case REMOVE_EDIT_ITEM_FILTER: {\n            const newState = { ...state };\n\n            delete newState[action.id];\n\n            return newState;\n        }\n        case SET_EDIT_ITEM_FILTERS: {\n            return action.filters;\n        }\n        case CLEAR_EDIT_ITEM_FILTERS: {\n            return DEFAULT_STATE_EDIT_ITEM_FILTERS;\n        }\n        default:\n            return state;\n    }\n};\n\n// selectors\n\nexport const sGetEditItemFiltersRoot = state => state.editItemFilters;\n\nexport const sGetEditFiltersKeys = state =>\n    Object.keys(sGetEditItemFiltersRoot(state));\n","export const CLEAR_ITEM_FILTERS = 'CLEAR_ITEM_FILTERS';\nexport const SET_ITEM_FILTERS = 'SET_ITEM_FILTERS';\nexport const ADD_ITEM_FILTER = 'ADD_ITEM_FILTER';\nexport const REMOVE_ITEM_FILTER = 'REMOVE_ITEM_FILTER';\n\nexport const DEFAULT_STATE_ITEM_FILTERS = {};\n\nexport default (state = DEFAULT_STATE_ITEM_FILTERS, action) => {\n    switch (action.type) {\n        case ADD_ITEM_FILTER: {\n            return {\n                ...state,\n                [action.filter.id]: action.filter.value,\n            };\n        }\n        case REMOVE_ITEM_FILTER: {\n            const newState = { ...state };\n\n            delete newState[action.id];\n\n            return newState;\n        }\n        case SET_ITEM_FILTERS: {\n            return action.filters;\n        }\n        case CLEAR_ITEM_FILTERS: {\n            return DEFAULT_STATE_ITEM_FILTERS;\n        }\n        default:\n            return state;\n    }\n};\n\n// selectors\n\nexport const sGetItemFiltersRoot = state => state.itemFilters;\n\nexport const sGetFiltersKeys = state => Object.keys(sGetItemFiltersRoot(state));\n","import {\n    ADD_ITEM_FILTER,\n    REMOVE_ITEM_FILTER,\n    SET_ITEM_FILTERS,\n    CLEAR_ITEM_FILTERS,\n} from '../reducers/itemFilters';\n\nexport const FILTER_ORG_UNIT = 'ou';\n\n// actions\n\nexport const acAddItemFilter = filter => ({\n    type: ADD_ITEM_FILTER,\n    filter,\n});\n\nexport const acRemoveItemFilter = id => ({\n    type: REMOVE_ITEM_FILTER,\n    id,\n});\n\nexport const acClearItemFilters = () => ({\n    type: CLEAR_ITEM_FILTERS,\n});\n\nexport const acSetItemFilters = filters => ({\n    type: SET_ITEM_FILTERS,\n    filters,\n});\n","import {\n    REMOVE_EDIT_ITEM_FILTER,\n    SET_EDIT_ITEM_FILTERS,\n    CLEAR_EDIT_ITEM_FILTERS,\n} from '../reducers/editItemFilters';\n\n// actions\n\nexport const acRemoveEditItemFilter = id => ({\n    type: REMOVE_EDIT_ITEM_FILTER,\n    id,\n});\n\nexport const acClearEditItemFilters = () => ({\n    type: CLEAR_EDIT_ITEM_FILTERS,\n});\n\nexport const acSetEditItemFilters = filters => ({\n    type: SET_EDIT_ITEM_FILTERS,\n    filters,\n});\n","import { getInstance } from 'd2';\n\nconst onError = error => console.log('Error: ', error);\n\nconst saveDashboard = (dashboard, data) => {\n    const { name, description, dashboardItems } = data;\n\n    dashboard.name = name;\n    dashboard.description = description;\n    dashboard.dashboardItems = dashboardItems.map(item =>\n        Object.assign({}, item, { width: item.w, height: item.h })\n    );\n\n    return dashboard.save().then(msg => msg.response.uid);\n};\n\nexport const updateDashboard = data => {\n    return getInstance()\n        .then(d2 => {\n            return d2.models.dashboards\n                .get(data.id)\n                .then(dashboard => saveDashboard(dashboard, data));\n        })\n        .catch(onError);\n};\n\nexport const postDashboard = data => {\n    return getInstance().then(d2 => {\n        const dashboard = d2.models.dashboards.create();\n\n        return saveDashboard(dashboard, data);\n    });\n};\n","import { generateUid } from 'd2/uid';\n\nimport {\n    RECEIVED_EDIT_DASHBOARD,\n    START_NEW_DASHBOARD,\n    RECEIVED_NOT_EDITING,\n    RECEIVED_TITLE,\n    RECEIVED_DESCRIPTION,\n    RECEIVED_DASHBOARD_LAYOUT,\n    ADD_DASHBOARD_ITEM,\n    UPDATE_DASHBOARD_ITEM,\n    REMOVE_DASHBOARD_ITEM,\n} from '../reducers/editDashboard';\nimport { sGetEditDashboardRoot } from '../reducers/editDashboard';\nimport { updateDashboard, postDashboard } from '../api/editDashboard';\nimport { tSetSelectedDashboardById } from '../actions/selected';\nimport { NEW_ITEM_SHAPE } from '../components/ItemGrid/gridUtil';\nimport {\n    itemTypeMap,\n    isSpacerType,\n    TEXT,\n    emptyTextItemContent,\n    isTextType,\n} from '../modules/itemTypes';\n\nconst onError = error => {\n    console.log('Error (Saving Dashboard): ', error);\n    return error;\n};\n\n// actions\n\nexport const acSetEditDashboard = (dashboard, items) => {\n    const val = {\n        ...dashboard,\n        dashboardItems: items,\n    };\n\n    return {\n        type: RECEIVED_EDIT_DASHBOARD,\n        value: val,\n    };\n};\n\nexport const acSetEditNewDashboard = () => ({\n    type: START_NEW_DASHBOARD,\n});\n\nexport const acClearEditDashboard = () => ({\n    type: RECEIVED_NOT_EDITING,\n});\n\nexport const acSetDashboardTitle = value => ({\n    type: RECEIVED_TITLE,\n    value,\n});\n\nexport const acSetDashboardDescription = value => ({\n    type: RECEIVED_DESCRIPTION,\n    value,\n});\n\nexport const acUpdateDashboardLayout = value => ({\n    type: RECEIVED_DASHBOARD_LAYOUT,\n    value,\n});\n\nexport const acAddDashboardItem = item => {\n    const type = item.type;\n    delete item.type;\n    const itemPropName = itemTypeMap[type].propName;\n\n    return {\n        type: ADD_DASHBOARD_ITEM,\n        value: {\n            id: generateUid(),\n            type,\n            [itemPropName]: item.content,\n            ...NEW_ITEM_SHAPE,\n        },\n    };\n};\n\nexport const acUpdateDashboardItem = item => ({\n    type: UPDATE_DASHBOARD_ITEM,\n    value: item,\n});\n\nexport const acRemoveDashboardItem = value => ({\n    type: REMOVE_DASHBOARD_ITEM,\n    value,\n});\n\n// thunks\n\nexport const tSaveDashboard = () => async (dispatch, getState) => {\n    const dashboard = sGetEditDashboardRoot(getState());\n\n    const dashboardItems = dashboard.dashboardItems.map(item => {\n        const text = isTextType(item)\n            ? item.text || emptyTextItemContent\n            : null;\n\n        const type = isSpacerType(item) ? TEXT : item.type;\n\n        return {\n            ...item,\n            ...(text ? { text } : {}),\n            type,\n        };\n    });\n\n    const dashboardToSave = {\n        ...dashboard,\n        dashboardItems,\n    };\n\n    try {\n        const dashboardId = dashboardToSave.id\n            ? await updateDashboard(dashboardToSave)\n            : await postDashboard(dashboardToSave);\n\n        dispatch(acClearEditDashboard());\n        await dispatch(tSetSelectedDashboardById(dashboardId));\n\n        return Promise.resolve(dashboardId);\n    } catch (error) {\n        onError(error);\n    }\n};\n","import {\n    SET_DASHBOARDS,\n    ADD_DASHBOARDS,\n    SET_DASHBOARD_STARRED,\n    SET_DASHBOARD_DISPLAY_NAME,\n    SET_DASHBOARD_ITEMS,\n} from '../reducers/dashboards';\nimport {\n    getCustomDashboards,\n    sGetDashboardById,\n    sGetDashboardsSortedByStarred,\n} from '../reducers/dashboards';\nimport { sGetUserUsername } from '../reducers/user';\nimport { tSetSelectedDashboardById, acSetSelectedId } from './selected';\nimport { sGetSelectedId } from '../reducers/selected';\nimport { sGetIsEditing } from '../reducers/editDashboard';\nimport { sGetEditItemFiltersRoot } from '../reducers/editItemFilters';\nimport { acSetItemFilters, acClearItemFilters } from './itemFilters';\nimport { acClearEditItemFilters } from './editItemFilters';\nimport { acClearEditDashboard } from './editDashboard';\nimport {\n    apiFetchDashboards,\n    apiStarDashboard,\n    apiDeleteDashboard,\n} from '../api/dashboards';\nimport { getPreferredDashboardId } from '../api/localStorage';\nimport { arrayToIdMap } from '../modules/util';\n\n// actions\n\nexport const acSetDashboards = dashboards => ({\n    type: SET_DASHBOARDS,\n    value: arrayToIdMap(getCustomDashboards(dashboards)),\n});\n\nexport const acAppendDashboards = dashboards => ({\n    type: ADD_DASHBOARDS,\n    value: arrayToIdMap(getCustomDashboards(dashboards)),\n});\n\nexport const acSetDashboardStarred = (dashboardId, isStarred) => ({\n    type: SET_DASHBOARD_STARRED,\n    dashboardId: dashboardId,\n    value: isStarred,\n});\n\nexport const acSetDashboardDisplayName = (dashboardId, value) => ({\n    type: SET_DASHBOARD_DISPLAY_NAME,\n    dashboardId,\n    value,\n});\n\nexport const acSetDashboardItems = value => ({\n    type: SET_DASHBOARD_ITEMS,\n    value,\n});\n\n// thunks\n\nexport const tFetchDashboards = () => async dispatch => {\n    const collection = await apiFetchDashboards();\n    dispatch(acSetDashboards(collection.toArray()));\n};\n\nexport const tSelectDashboard = id => async (dispatch, getState) => {\n    const onError = error => {\n        console.log('Error (apiFetchDashboards): ', error);\n        return error;\n    };\n\n    try {\n        const state = getState();\n\n        let dashboardToSelect = null;\n        if (id) {\n            dashboardToSelect = sGetDashboardById(state, id) || null;\n        } else {\n            const preferredId = getPreferredDashboardId(\n                sGetUserUsername(state)\n            );\n            const dash = sGetDashboardById(state, preferredId);\n            dashboardToSelect =\n                preferredId && dash\n                    ? dash\n                    : sGetDashboardsSortedByStarred(state)[0];\n        }\n\n        if (dashboardToSelect) {\n            dispatch(tSetSelectedDashboardById(dashboardToSelect.id));\n\n            if (dashboardToSelect.id === sGetSelectedId(state)) {\n                if (sGetIsEditing(state)) {\n                    // disable filters when switching to edit mode\n                    dispatch(acClearItemFilters());\n                } else {\n                    // enable filters when switching to view mode\n                    dispatch(acSetItemFilters(sGetEditItemFiltersRoot(state)));\n                }\n            } else {\n                // clear filters when switching dashboard\n                dispatch(acClearEditItemFilters());\n                dispatch(acClearItemFilters());\n            }\n        } else {\n            dispatch(acSetSelectedId(false));\n        }\n    } catch (err) {\n        return onError(err);\n    }\n};\n\nexport const tStarDashboard = (id, isStarred) => async (dispatch, getState) => {\n    const onSuccess = id => {\n        dispatch(acSetDashboardStarred(id, isStarred));\n        return id;\n    };\n\n    const onError = error => {\n        console.log('Error (apiStarDashboard): ', error);\n        return error;\n    };\n    try {\n        await apiStarDashboard(id, isStarred);\n        return onSuccess(id);\n    } catch (err) {\n        return onError(err);\n    }\n};\n\nexport const tDeleteDashboard = id => async (dispatch, getState) => {\n    try {\n        await apiDeleteDashboard(id);\n        dispatch(acClearEditDashboard());\n        dispatch(acSetSelectedId());\n        dispatch(acSetDashboardItems([]));\n\n        await dispatch(tFetchDashboards());\n\n        return Promise.resolve();\n    } catch (err) {\n        console.log('Error (deleteDashboard): ', err);\n        return err;\n    }\n};\n","/** @module reducers/controlBar */\nimport { combineReducers } from 'redux';\nimport { validateReducer } from '../modules/util';\n\nexport const SET_CONTROLBAR_USER_ROWS = 'SET_CONTROLBAR_USER_ROWS';\n\nexport const DEFAULT_STATE_CONTROLBAR_ROWS = 1;\n\nconst userRows = (state = DEFAULT_STATE_CONTROLBAR_ROWS, action) => {\n    switch (action.type) {\n        case SET_CONTROLBAR_USER_ROWS:\n            return validateReducer(action.value, DEFAULT_STATE_CONTROLBAR_ROWS);\n        default:\n            return state;\n    }\n};\n\nexport default combineReducers({\n    userRows,\n});\n\n/**\n * Selectors that point to specific props in the state object\n * @function\n * @param {Object} state\n * @returns {Object}\n */\nexport const sGetControlBarRoot = state => state.controlBar;\n\n// Selector dependency level 2\n\nexport const sGetControlBarUserRows = state =>\n    sGetControlBarRoot(state).userRows;\n","import { getInstance } from 'd2';\nimport { DEFAULT_STATE_CONTROLBAR_ROWS } from '../reducers/controlBar';\n\nconst NAMESPACE = 'dashboard';\nconst KEY = 'controlBarRows';\n\nconst hasNamespace = async d2 => await d2.currentUser.dataStore.has(NAMESPACE);\n\nconst getNamespace = async (d2, hasNamespace) =>\n    hasNamespace\n        ? await d2.currentUser.dataStore.get(NAMESPACE)\n        : await d2.currentUser.dataStore.create(NAMESPACE);\n\nexport const apiGetControlBarRows = async () => {\n    const d2 = await getInstance();\n    const namespace = await getNamespace(d2, await hasNamespace(d2));\n    const hasKey = namespace.keys && namespace.keys.find(key => key === KEY);\n\n    if (hasKey) {\n        return await namespace.get(KEY);\n    } else {\n        await apiPostControlBarRows(DEFAULT_STATE_CONTROLBAR_ROWS, namespace);\n        console.log(\n            '(These errors to /userDataStore/dashboard can be ignored)'\n        );\n        return DEFAULT_STATE_CONTROLBAR_ROWS;\n    }\n};\n\nexport const apiPostControlBarRows = async (rows, namespace) => {\n    const d2 = await getInstance();\n    const ns = namespace || (await getNamespace(d2, hasNamespace));\n\n    ns.set(KEY, rows);\n};\n","import { SET_CONTROLBAR_USER_ROWS } from '../reducers/controlBar';\nimport { apiGetControlBarRows } from '../api/controlBar';\n\n// actions\n\nexport const acSetControlBarUserRows = rows => ({\n    type: SET_CONTROLBAR_USER_ROWS,\n    value: rows,\n});\n\n// thunks\n\nexport const tSetControlBarRows = () => async (dispatch, getState) => {\n    const onSuccess = rows => {\n        dispatch(acSetControlBarUserRows(rows));\n    };\n\n    const onError = error => {\n        console.log('Error (apiGetControlBarRows): ', error);\n        return error;\n    };\n\n    try {\n        const controlBarRows = await apiGetControlBarRows();\n        return onSuccess(controlBarRows);\n    } catch (err) {\n        return onError(err);\n    }\n};\n","import { FIXED_DIMENSIONS } from '@dhis2/d2-ui-analytics';\n\nexport const SET_DIMENSIONS = 'SET_DIMENSIONS';\nexport const DEFAULT_DIMENSIONS = {\n    pe: FIXED_DIMENSIONS.pe,\n    ou: FIXED_DIMENSIONS.ou,\n};\n\nexport default (state = DEFAULT_DIMENSIONS, action) => {\n    switch (action.type) {\n        case SET_DIMENSIONS: {\n            return {\n                ...DEFAULT_DIMENSIONS,\n                ...action.value,\n            };\n        }\n        default:\n            return state;\n    }\n};\n\nexport const sGetDimensions = state => state.dimensions;\n","export const SET_SETTINGS = 'SET_SETTINGS';\nexport const ADD_SETTINGS = 'ADD_SETTINGS';\n\nexport const DEFAULT_SETTINGS = {\n    keyDateFormat: 'yyyy-MM-dd',\n    keyAnalysisRelativePeriod: 'LAST_12_MONTHS',\n    keyAnalysisDigitGroupSeparator: 'SPACE',\n    displayNameProperty: 'displayName',\n    uiLocale: 'en',\n    rootOrganisationUnit: {},\n};\n\nexport default (state = DEFAULT_SETTINGS, action) => {\n    switch (action.type) {\n        case SET_SETTINGS: {\n            return Object.assign({}, action.value);\n        }\n        case ADD_SETTINGS: {\n            return {\n                ...state,\n                ...action.value,\n            };\n        }\n        default:\n            return state;\n    }\n};\n\n// Selectors\n\nexport const sGetSettings = state => state.settings;\n\nexport const sGetSettingsDisplayNameProperty = state =>\n    sGetSettings(state).displayNameProperty;\n\nexport const sGetRootOrgUnit = state =>\n    sGetSettings(state).rootOrganisationUnit;\n\nexport const sGetRelativePeriod = state =>\n    sGetSettings(state).keyAnalysisRelativePeriod;\n\nexport const sGetUiLocale = state => sGetSettings(state).uiLocale;\n","import keyBy from 'lodash/keyBy';\nimport sortBy from 'lodash/sortBy';\nimport { SET_DIMENSIONS } from '../reducers/dimensions';\nimport { apiFetchDimensions } from '@dhis2/d2-ui-analytics';\nimport { sGetSettingsDisplayNameProperty } from '../reducers/settings';\n\nexport const acSetDimensions = dimensions => ({\n    type: SET_DIMENSIONS,\n    value: keyBy(sortBy(dimensions, [d => d.name.toLowerCase()]), 'id'),\n});\n\nexport const tSetDimensions = d2 => async (dispatch, getState) => {\n    const onSuccess = dimensions => {\n        dispatch(acSetDimensions(dimensions));\n    };\n\n    const onError = error => {\n        console.log('Error (apiFetchDimensions): ', error);\n        return error;\n    };\n\n    try {\n        const displayNameProp = sGetSettingsDisplayNameProperty(getState());\n        const dimensions = await apiFetchDimensions(d2, displayNameProp);\n\n        // filter out CATEGORY that are not of type ATTRIBUTE\n        const filteredDimensions = dimensions.filter(\n            dim =>\n                dim.dimensionType !== 'CATEGORY' ||\n                (dim.dimensionType === 'CATEGORY' &&\n                    dim.dataDimensionType === 'ATTRIBUTE')\n        );\n        return onSuccess(filteredDimensions);\n    } catch (err) {\n        return onError(err);\n    }\n};\n","const lightGrey = '#ECEFF1';\nconst lightMediumGrey = '#9E9E9E';\nconst mediumGrey = '#393939';\nconst charcoalGrey = '#8C8C8C';\nconst darkGrey = '#494949';\nconst muiDefaultGrey = '#757575';\n\nconst red = '#E53935';\n\nconst paleBlue = '#E3F2FD';\nconst lightBlue = '#EAF4FF'; //'#63A4FF'\nconst royalBlue = '#004BA0';\n\nconst mint = '#B2DFDB';\nconst lightGreen = '#48A999';\nconst mediumGreen = '#00796B';\nconst darkGreen = '#004C40';\n\nconst paleYellow = '#FFF8E1';\n\nconst white = '#FFFFFF';\nconst black = 'rgba(0,0,0,0.87)';\n\nexport const colors = {\n    lightGrey,\n    lightMediumGrey,\n    mediumGrey,\n    charcoalGrey,\n    darkGrey,\n    muiDefaultGrey,\n    red,\n    paleBlue,\n    lightBlue,\n    royalBlue,\n    mint,\n    lightGreen,\n    mediumGreen,\n    darkGreen,\n    paleYellow,\n    white,\n    black,\n};\n","import { getInstance } from 'd2';\n\nexport const apiPostDataStatistics = async (eventType, id) => {\n    const d2 = await getInstance();\n    const url = `dataStatistics?eventType=${eventType}&favorite=${id}`;\n\n    d2.Api.getApi().post(url);\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport MuiChip from 'material-ui/Chip';\nimport Avatar from 'material-ui/Avatar';\nimport IconStar from '@material-ui/icons/Star';\nimport { Link } from 'react-router-dom';\nimport debounce from 'lodash/debounce';\n\nimport { colors } from '../../modules/colors';\nimport { apiPostDataStatistics } from '../../api/dataStatistics';\n\nconst chipTheme = {\n    default: {\n        labelColor: colors.black,\n        backgroundColor: colors.lightGrey,\n    },\n    primary: {\n        labelColor: colors.black,\n        backgroundColor: colors.lightGrey,\n    },\n    accent: {\n        labelColor: colors.white,\n        backgroundColor: colors.mediumGreen,\n    },\n};\n\nconst d = '30px';\n\nconst avatar = selected => {\n    const avatarProps = {\n        color: colors.white,\n        backgroundColor: selected ? 'transparent' : colors.lightMediumGrey,\n        style: { height: d, width: d },\n    };\n\n    return <Avatar icon={<IconStar />} {...avatarProps} />;\n};\n\nconst DashboardItemChip = ({ starred, selected, label, dashboardId }) => {\n    const chipColorProps = selected\n        ? chipTheme.accent\n        : starred\n        ? chipTheme.primary\n        : chipTheme.default;\n\n    const labelStyle = { fontSize: '14px', fontWeight: 400, lineHeight: d };\n    const style = { margin: 3, height: d, cursor: 'pointer' };\n\n    const props = {\n        style,\n        labelStyle,\n        ...chipColorProps,\n    };\n\n    return (\n        <Link\n            style={{\n                display: 'inline-block',\n                verticalAlign: 'top',\n                textDecoration: 'none',\n            }}\n            to={`/${dashboardId}`}\n            onClick={debounce(\n                () => apiPostDataStatistics('DASHBOARD_VIEW', dashboardId),\n                500\n            )}\n        >\n            <MuiChip {...props}>\n                {starred ? avatar(selected) : null}\n                {label}\n            </MuiChip>\n        </Link>\n    );\n};\n\nDashboardItemChip.propTypes = {\n    starred: PropTypes.bool.isRequired,\n    selected: PropTypes.bool.isRequired,\n    label: PropTypes.string.isRequired,\n};\n\nexport default DashboardItemChip;\n","import React from 'react';\nimport { colors } from '@dhis2/ui-core';\n\nconst AddCircleIcon = () => (\n    <svg\n        xmlns=\"http://www.w3.org/2000/svg\"\n        width=\"32\"\n        height=\"32\"\n        fill={colors.teal600}\n        viewBox=\"0 0 24 24\"\n    >\n        <path d=\"M12 2C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2zm4 11h-3v3c0 .55-.45 1-1 1s-1-.45-1-1v-3H8c-.55 0-1-.45-1-1s.45-1 1-1h3V8c0-.55.45-1 1-1s1 .45 1 1v3h3c.55 0 1 .45 1 1s-.45 1-1 1z\" />\n    </svg>\n);\n\nexport default AddCircleIcon;\n","import { combineReducers } from 'redux';\nimport { validateReducer } from '../modules/util';\n\nexport const SET_DASHBOARDS_FILTER_NAME = 'SET_DASHBOARDS_FILTER_NAME';\nexport const SET_DASHBOARDS_FILTER_OWNER = 'SET_DASHBOARDS_FILTER_OWNER';\nexport const SET_DASHBOARDS_FILTER_ORDER = 'SET_DASHBOARDS_FILTER_ORDER';\n\nexport const ownerData = [\n    { id: 'ALL', value: 'All users' },\n    { id: 'ME', value: 'Created by me' },\n    { id: 'OTHERS', value: 'Created by others' },\n];\n\nexport const orderData = [\n    { id: 'NAME:ASC', value: 'Name (asc)' },\n    { id: 'NAME:ASC', value: 'Name (desc)' },\n    { id: 'ITEMS:ASC', value: 'Number of items (asc)' },\n    { id: 'ITEMS:ASC', value: 'Number of items (desc)' },\n    { id: 'CREATED:ASC', value: 'Created date (asc)' },\n    { id: 'CREATED:ASC', value: 'Created date (desc)' },\n];\n\nexport const DEFAULT_STATE_DASHBOARDS_FILTER_NAME = '';\nexport const DEFAULT_STATE_DASHBOARDS_FILTER_OWNER = ownerData[0].id;\nexport const DEFAULT_STATE_DASHBOARDS_FILTER_ORDER = orderData[0].id;\n\nconst name = (state = DEFAULT_STATE_DASHBOARDS_FILTER_NAME, action) => {\n    switch (action.type) {\n        case SET_DASHBOARDS_FILTER_NAME:\n            return validateReducer(\n                action.value,\n                DEFAULT_STATE_DASHBOARDS_FILTER_NAME\n            );\n        default:\n            return state;\n    }\n};\n\nconst owner = (state = DEFAULT_STATE_DASHBOARDS_FILTER_OWNER, action) => {\n    switch (action.type) {\n        case SET_DASHBOARDS_FILTER_OWNER:\n            return validateReducer(\n                action.value,\n                DEFAULT_STATE_DASHBOARDS_FILTER_NAME\n            );\n        default:\n            return state;\n    }\n};\n\nconst order = (state = DEFAULT_STATE_DASHBOARDS_FILTER_ORDER, action) => {\n    switch (action.type) {\n        case SET_DASHBOARDS_FILTER_ORDER:\n            return validateReducer(\n                action.value,\n                DEFAULT_STATE_DASHBOARDS_FILTER_ORDER\n            );\n        default:\n            return state;\n    }\n};\n\nexport default combineReducers({\n    name,\n    owner,\n    order,\n});\n\n// selectors\n\nexport const sGetDashboardsFilterRoot = state => state.dashboardsFilter;\n\n// selector dependency level 2\n\nexport const sGetFilterName = state => sGetDashboardsFilterRoot(state).name;\nexport const sGetFilterOwner = state => sGetDashboardsFilterRoot(state).owner;\nexport const sGetFilterOrder = state => sGetDashboardsFilterRoot(state).order;\n","import React, { Component, Fragment } from 'react';\nimport i18n from '@dhis2/d2-i18n';\nimport PropTypes from 'prop-types';\nimport TextField from 'material-ui/TextField';\nimport IconButton from 'material-ui/IconButton';\nimport IconClear from '@material-ui/icons/Clear';\nimport isEmpty from 'd2-utilizr/lib/isEmpty';\n\nimport { DEFAULT_STATE_DASHBOARDS_FILTER_NAME } from '../../reducers/dashboardsFilter';\n\nexport const KEYCODE_ENTER = 13;\nexport const KEYCODE_ESCAPE = 27;\n\nconst styles = {\n    filterField: {\n        fontSize: '14px',\n        width: '200px',\n        height: '30px',\n        top: '-1px',\n    },\n    filterFieldInput: {\n        top: '-9px',\n        left: '1px',\n    },\n    filterFieldUnderline: {\n        bottom: '10px',\n    },\n    filterFieldUnderlineFocus: {\n        borderColor: '#aaa',\n        borderWidth: '1px',\n    },\n    clearButton: {\n        width: '20px',\n        height: '24px',\n        padding: 0,\n        top: '-5px',\n        left: '-18px',\n    },\n    clearButtonIcon: {\n        width: '16px',\n        height: '16px',\n    },\n};\n\nexport class Filter extends Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            value: DEFAULT_STATE_DASHBOARDS_FILTER_NAME,\n        };\n    }\n\n    componentWillReceiveProps(nextProps) {\n        this.setState({\n            value: nextProps.name,\n        });\n    }\n\n    setFilterValue = event => {\n        event.preventDefault();\n\n        this.props.onChangeName(event.target.value);\n    };\n\n    handleKeyUp = event => {\n        switch (event.keyCode) {\n            case KEYCODE_ENTER:\n                this.props.onKeypressEnter();\n                break;\n            case KEYCODE_ESCAPE:\n                this.props.onChangeName();\n                break;\n            default:\n                break;\n        }\n    };\n\n    render() {\n        return (\n            <TextField\n                className=\"FilterField\"\n                value={this.state.value}\n                onChange={this.setFilterValue}\n                onKeyUp={this.handleKeyUp}\n                hintText={i18n.t('Search for a dashboard')}\n                style={styles.filterField}\n                inputStyle={styles.filterFieldInput}\n                hintStyle={styles.filterFieldHint}\n                underlineStyle={styles.filterFieldUnderline}\n                underlineFocusStyle={styles.filterFieldUnderlineFocus}\n            />\n        );\n    }\n}\n\nFilter.propTypes = {\n    name: PropTypes.string,\n    onChangeName: PropTypes.func,\n};\n\nFilter.defaultProps = {\n    name: '',\n    onChangeName: Function.prototype,\n};\n\nexport const ClearButton = ({ name, onChangeName }) => {\n    const disabled = isEmpty(name);\n\n    const clearFilter = () => onChangeName();\n\n    return (\n        <IconButton\n            style={Object.assign({}, styles.clearButton, {\n                opacity: disabled ? 0 : 1,\n            })}\n            iconStyle={styles.clearButtonIcon}\n            onClick={clearFilter}\n            disabled={disabled}\n        >\n            <IconClear color=\"action\" />\n        </IconButton>\n    );\n};\n\nClearButton.propTypes = {\n    name: PropTypes.string.isRequired,\n    onChangeName: PropTypes.func.isRequired,\n};\n\nexport default props => (\n    <Fragment>\n        <Filter {...props} />\n        <ClearButton {...props} />\n    </Fragment>\n);\n","import React from 'react';\nimport i18n from '@dhis2/d2-i18n';\nimport { withStyles } from '@material-ui/core/styles';\n\nimport { colors } from '../../modules/colors';\n\nexport const SHOWMORE_BAR_HEIGHT = 16;\n\nconst styles = {\n    showMore: {\n        color: colors.royalBlue,\n        cursor: 'pointer',\n        fontSize: 11,\n        fontWeight: 700,\n        height: SHOWMORE_BAR_HEIGHT,\n        paddingTop: 5,\n        textTransform: 'uppercase',\n        visibility: 'visible',\n    },\n};\n\nexport const ShowMoreButton = ({ onClick, isMaxHeight, classes }) => (\n    <div style={{ textAlign: 'center' }}>\n        <div className={classes.showMore} onClick={onClick}>\n            {isMaxHeight ? i18n.t('Show less') : i18n.t('Show more')}\n        </div>\n    </div>\n);\n\nexport default withStyles(styles)(ShowMoreButton);\n","import { END_FLAP_HEIGHT } from '@dhis2/d2-ui-core/control-bar/ControlBar';\nimport { SHOWMORE_BAR_HEIGHT } from './ShowMoreButton';\n\nexport const CONTROL_BAR_ROW_HEIGHT = 36;\nexport const FIRST_ROW_PADDING_HEIGHT = 10;\nexport const MIN_ROW_COUNT = 1;\n\nconst HEADERBAR_HEIGHT = 48;\n\nconst CONTROL_BAR_OUTER_HEIGHT_DIFF =\n    FIRST_ROW_PADDING_HEIGHT + SHOWMORE_BAR_HEIGHT - 2; // 2 pixel \"adjustment\"\n\nexport const getRowsHeight = rows => {\n    return rows * CONTROL_BAR_ROW_HEIGHT;\n};\n\nexport const getNumRowsFromHeight = height => {\n    return Math.floor(\n        (height - CONTROL_BAR_OUTER_HEIGHT_DIFF) / CONTROL_BAR_ROW_HEIGHT\n    );\n};\n\nexport const getTopOffset = rows => {\n    return HEADERBAR_HEIGHT + getControlBarHeight(rows, false);\n};\n\nexport const getControlBarHeight = (rows, expandable) => {\n    const flapHeight = !expandable ? END_FLAP_HEIGHT : 0;\n\n    return getRowsHeight(rows) + CONTROL_BAR_OUTER_HEIGHT_DIFF + flapHeight;\n};\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { Link, withRouter } from 'react-router-dom';\nimport ControlBar from '@dhis2/d2-ui-core/control-bar/ControlBar';\nimport arraySort from 'd2-utilizr/lib/arraySort';\n\nimport Chip from './DashboardItemChip';\nimport AddCircleIcon from '../../icons/AddCircle';\nimport Filter from './Filter';\nimport ShowMoreButton from './ShowMoreButton';\nimport {\n    FIRST_ROW_PADDING_HEIGHT,\n    MIN_ROW_COUNT,\n    getRowsHeight,\n    getControlBarHeight,\n    getNumRowsFromHeight,\n} from './controlBarDimensions';\nimport { sGetControlBarUserRows } from '../../reducers/controlBar';\nimport { sGetAllDashboards } from '../../reducers/dashboards';\nimport { sGetFilterName } from '../../reducers/dashboardsFilter';\nimport { sGetSelectedId } from '../../reducers/selected';\nimport { acSetControlBarUserRows } from '../../actions/controlBar';\nimport { acSetFilterName } from '../../actions/dashboardsFilter';\nimport { orObject, orArray } from '../../modules/util';\nimport { apiPostControlBarRows } from '../../api/controlBar';\n\nimport './ControlBar.css';\n\nexport const MAX_ROW_COUNT = 10;\n\nexport class DashboardsBar extends Component {\n    state = {\n        rows: MIN_ROW_COUNT,\n    };\n\n    setInitialDashboardState = rows => {\n        this.setState({ rows, isMaxHeight: rows === MAX_ROW_COUNT });\n    };\n\n    componentDidMount() {\n        this.setInitialDashboardState(this.props.userRows);\n    }\n\n    componentWillReceiveProps(nextProps) {\n        this.setInitialDashboardState(nextProps.userRows);\n    }\n\n    onChangeHeight = newHeight => {\n        const newRows = Math.max(\n            MIN_ROW_COUNT,\n            getNumRowsFromHeight(newHeight)\n        );\n\n        if (newRows !== this.state.rows) {\n            const newRowCount = Math.min(newRows, MAX_ROW_COUNT);\n\n            this.props.onChangeHeight(newRowCount);\n        }\n    };\n\n    onEndDrag = () => {\n        return apiPostControlBarRows(this.state.rows);\n    };\n\n    onToggleMaxHeight = () => {\n        const rows =\n            this.state.rows === MAX_ROW_COUNT\n                ? this.props.userRows\n                : MAX_ROW_COUNT;\n\n        this.setState({ rows, isMaxHeight: !this.state.isMaxHeight });\n    };\n\n    onSelectDashboard = () => {\n        this.props.history.push(`/${this.props.dashboards[0].id}`);\n    };\n\n    render() {\n        const { dashboards, name, selectedId, onChangeFilterName } = this.props;\n\n        const rowCount = this.state.isMaxHeight\n            ? MAX_ROW_COUNT\n            : this.state.rows;\n        const controlBarHeight = getControlBarHeight(rowCount, true);\n        const contentWrapperStyle = {\n            padding: `${FIRST_ROW_PADDING_HEIGHT}px 6px 0 6px`,\n            overflowY: this.state.isMaxHeight ? 'auto' : 'hidden',\n            height: getRowsHeight(rowCount) + FIRST_ROW_PADDING_HEIGHT,\n        };\n\n        return (\n            <ControlBar\n                height={controlBarHeight}\n                onChangeHeight={this.onChangeHeight}\n                onEndDrag={this.onEndDrag}\n                editMode={false}\n                expandable={true}\n            >\n                <div style={contentWrapperStyle}>\n                    <div className=\"left-controls\">\n                        <Link\n                            style={{\n                                display: 'inline-block',\n                                textDecoration: 'none',\n                                marginRight: 10,\n                            }}\n                            to={'/new'}\n                        >\n                            <AddCircleIcon />\n                        </Link>\n                        <Filter\n                            name={name}\n                            onChangeName={onChangeFilterName}\n                            onKeypressEnter={this.onSelectDashboard}\n                        />\n                    </div>\n                    {orArray(dashboards).map(dashboard => (\n                        <Chip\n                            key={dashboard.id}\n                            label={dashboard.displayName}\n                            starred={dashboard.starred}\n                            dashboardId={dashboard.id}\n                            selected={dashboard.id === selectedId}\n                        />\n                    ))}\n                </div>\n                {this.props.userRows !== MAX_ROW_COUNT ? (\n                    <ShowMoreButton\n                        onClick={this.onToggleMaxHeight}\n                        isMaxHeight={this.state.isMaxHeight}\n                    />\n                ) : null}\n            </ControlBar>\n        );\n    }\n}\n\nconst mapStateToProps = state => ({\n    dashboards: sGetAllDashboards(state),\n    name: sGetFilterName(state),\n    userRows: sGetControlBarUserRows(state),\n    selectedId: sGetSelectedId(state),\n});\n\nconst mapDispatchToProps = {\n    onChangeHeight: acSetControlBarUserRows,\n    onChangeFilterName: acSetFilterName,\n};\nconst mergeProps = (stateProps, dispatchProps, ownProps) => {\n    const dashboards = Object.values(orObject(stateProps.dashboards));\n    const displayDashboards = arraySort(\n        dashboards.filter(d =>\n            d.displayName.toLowerCase().includes(stateProps.name.toLowerCase())\n        ),\n        'ASC',\n        'displayName'\n    );\n\n    return {\n        ...stateProps,\n        ...ownProps,\n        ...dispatchProps,\n        dashboards: [\n            ...displayDashboards.filter(d => d.starred),\n            ...displayDashboards.filter(d => !d.starred),\n        ],\n    };\n};\n\nexport default withRouter(\n    connect(\n        mapStateToProps,\n        mapDispatchToProps,\n        mergeProps\n    )(DashboardsBar)\n);\n","import {\n    SET_DASHBOARDS_FILTER_NAME,\n    SET_DASHBOARDS_FILTER_OWNER,\n    SET_DASHBOARDS_FILTER_ORDER,\n} from '../reducers/dashboardsFilter';\n\n// actions\n\nexport const acSetFilterName = value => ({\n    type: SET_DASHBOARDS_FILTER_NAME,\n    value,\n});\n\nexport const acSetFilterOwner = value => ({\n    type: SET_DASHBOARDS_FILTER_OWNER,\n    value,\n});\n\nexport const acSetFilterOrder = value => ({\n    type: SET_DASHBOARDS_FILTER_ORDER,\n    value,\n});\n","import React from 'react';\nimport { connect } from 'react-redux';\n\nimport {\n    getTopOffset,\n    MIN_ROW_COUNT,\n} from '../ControlBar/controlBarDimensions';\nimport { sGetControlBarUserRows } from '../../reducers/controlBar';\n\nconst DashboardVerticalOffset = props => {\n    const rows = props.editMode ? MIN_ROW_COUNT : props.userRows;\n    const marginTop = getTopOffset(rows);\n\n    return <div className=\"page-container-top-margin\" style={{ marginTop }} />;\n};\n\nconst mapStateToProps = state => ({\n    userRows: sGetControlBarUserRows(state),\n});\n\nexport default connect(mapStateToProps)(DashboardVerticalOffset);\n","import i18n from '@dhis2/d2-i18n';\nimport {\n    itemTypeMap,\n    spacerContent,\n    REPORT_TABLE,\n    CHART,\n    MAP,\n    EVENT_CHART,\n    EVENT_REPORT,\n    USERS,\n    REPORTS,\n    RESOURCES,\n    APP,\n    MESSAGES,\n    TEXT,\n    SPACER,\n} from '../../modules/itemTypes';\n\nexport const singleItems = [\n    {\n        id: 'additional',\n        header: 'Additional items',\n        items: [\n            {\n                type: TEXT,\n                name: i18n.t('Text box'),\n                content: '',\n            },\n            {\n                type: MESSAGES,\n                name: i18n.t('Messages'),\n                content: 'true',\n            },\n            {\n                type: SPACER,\n                name: i18n.t('Spacer'),\n                content: spacerContent,\n            },\n        ],\n    },\n];\n\nexport const listItems = [\n    {\n        id: REPORT_TABLE,\n        title: itemTypeMap[REPORT_TABLE].pluralTitle,\n    },\n    {\n        id: CHART,\n        title: itemTypeMap[CHART].pluralTitle,\n    },\n    { id: MAP, title: itemTypeMap[MAP].pluralTitle },\n    {\n        id: EVENT_REPORT,\n        title: itemTypeMap[EVENT_REPORT].pluralTitle,\n    },\n    {\n        id: EVENT_CHART,\n        title: itemTypeMap[EVENT_CHART].pluralTitle,\n    },\n    {\n        id: USERS,\n        title: itemTypeMap[USERS].pluralTitle,\n    },\n    {\n        id: REPORTS,\n        title: itemTypeMap[REPORTS].pluralTitle,\n    },\n    {\n        id: RESOURCES,\n        title: itemTypeMap[RESOURCES].pluralTitle,\n    },\n    { id: APP, title: itemTypeMap[APP].pluralTitle },\n];\n","import React, { Component, Fragment } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport i18n from '@dhis2/d2-i18n';\nimport Divider from '@material-ui/core/Divider';\nimport { List, ListItem } from 'material-ui/List';\nimport Button from '@dhis2/d2-ui-core/button/Button';\nimport LaunchIcon from '@material-ui/icons/Launch';\nimport { tAddListItemContent } from './actions';\nimport { acAddDashboardItem } from '../../actions/editDashboard';\nimport { sGetEditDashboardRoot } from '../../reducers/editDashboard';\nimport {\n    getItemUrl,\n    getItemIcon,\n    APP,\n    CHART,\n    EVENT_CHART,\n    REPORT_TABLE,\n    EVENT_REPORT,\n    MAP,\n    REPORTS,\n    RESOURCES,\n    USERS,\n} from '../../modules/itemTypes';\nimport { colors } from '../../modules/colors';\n\nclass ItemSelectList extends Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            seeMore: false,\n        };\n    }\n\n    addItem = item => () => {\n        const {\n            type,\n            dashboardId,\n            acAddDashboardItem,\n            tAddListItemContent,\n        } = this.props;\n\n        const newItem = {\n            id: item.id,\n            name: item.displayName || item.name,\n        };\n\n        // special handling for ListItem types\n        if (type.match(/(REPORTS|RESOURCES|USERS)/)) {\n            tAddListItemContent(dashboardId, type, newItem);\n        } else if (type === APP) {\n            acAddDashboardItem({ type, content: item.key });\n        } else {\n            acAddDashboardItem({ type, content: newItem });\n        }\n    };\n\n    toggleSeeMore = () => {\n        this.setState({ seeMore: !this.state.seeMore });\n\n        this.props.onChangeItemsLimit(this.props.type);\n    };\n\n    render() {\n        return (\n            <Fragment>\n                <div\n                    style={{\n                        display: 'flex',\n                        justifyContent: 'space-between',\n                        paddingLeft: '16px',\n                    }}\n                >\n                    <h3>{this.props.title}</h3>\n                    <Button\n                        color=\"primary\"\n                        style={{ textTransform: 'uppercase' }}\n                        onClick={this.toggleSeeMore}\n                    >\n                        {`${i18n.t('See')} ${\n                            this.state.seeMore\n                                ? i18n.t('fewer')\n                                : i18n.t('more')\n                        } ${this.props.title}`}\n                    </Button>\n                </div>\n                <Divider />\n                <List>\n                    {this.props.items.map(item => {\n                        const itemUrl = getItemUrl(\n                            this.props.type,\n                            item,\n                            this.context.d2\n                        );\n\n                        const ItemIcon = getItemIcon(this.props.type);\n\n                        return (\n                            <ListItem // apps don't have item.id\n                                key={item.id || item.key}\n                                leftIcon={\n                                    <ItemIcon\n                                        style={{\n                                            margin: '6px',\n                                            fill: colors.muiDefaultGrey,\n                                        }}\n                                    />\n                                }\n                                innerDivStyle={{ padding: '0px 0px 0px 42px' }}\n                                hoverColor=\"transparent\"\n                                primaryText={\n                                    <p\n                                        style={{\n                                            display: 'flex',\n                                            alignItems: 'center',\n                                            justifyContent: 'flex-start',\n                                            margin: 0,\n                                        }}\n                                    >\n                                        {item.displayName || item.name}\n                                        <Button\n                                            color=\"primary\"\n                                            onClick={this.addItem(item)}\n                                            style={{\n                                                marginLeft: '5px',\n                                                marginRight: '5px',\n                                            }}\n                                        >\n                                            + ADD\n                                        </Button>\n                                        {itemUrl && (\n                                            <a\n                                                target=\"_blank\"\n                                                rel=\"noopener noreferrer\"\n                                                href={itemUrl}\n                                                style={{ display: 'flex' }}\n                                            >\n                                                <LaunchIcon\n                                                    style={{\n                                                        width: '16px',\n                                                        height: '16px',\n                                                        fill:\n                                                            colors.muiDefaultGrey,\n                                                    }}\n                                                />\n                                            </a>\n                                        )}\n                                    </p>\n                                }\n                            />\n                        );\n                    })}\n                </List>\n            </Fragment>\n        );\n    }\n}\n\nItemSelectList.propTypes = {\n    type: PropTypes.oneOf([\n        APP,\n        CHART,\n        EVENT_CHART,\n        REPORT_TABLE,\n        EVENT_REPORT,\n        MAP,\n        REPORTS,\n        RESOURCES,\n        USERS,\n    ]).isRequired,\n    title: PropTypes.string.isRequired,\n    items: PropTypes.array.isRequired,\n    onChangeItemsLimit: PropTypes.func.isRequired,\n};\n\nItemSelectList.contextTypes = {\n    d2: PropTypes.object.isRequired,\n};\n\nexport default connect(\n    state => ({\n        dashboardId: sGetEditDashboardRoot(state).id,\n    }),\n    {\n        acAddDashboardItem,\n        tAddListItemContent,\n    }\n)(ItemSelectList);\n","import { sGetEditDashboardRoot } from '../../reducers/editDashboard';\nimport { itemTypeMap } from '../../modules/itemTypes';\nimport {\n    acAddDashboardItem,\n    acUpdateDashboardItem,\n} from '../../actions/editDashboard';\n\nexport const tAddListItemContent = (dashboardId, type, content) => (\n    dispatch,\n    getState\n) => {\n    const state = getState();\n    const listItemType = itemTypeMap[type].propName;\n    const dashboardItems = sGetEditDashboardRoot(state).dashboardItems;\n    const dashboardItemIndex = dashboardItems.findIndex(\n        item => item.type === type\n    );\n    let dashboardItem;\n\n    // Reports/Resources/Users dashboard item type already present in dashboard\n    if (dashboardItemIndex > -1) {\n        dashboardItem = dashboardItems[dashboardItemIndex];\n        dashboardItem[listItemType].push(content);\n\n        dispatch(acUpdateDashboardItem(dashboardItem));\n    } else {\n        dashboardItem = {\n            type: type,\n            content: [content],\n        };\n\n        dispatch(acAddDashboardItem(dashboardItem));\n    }\n};\n","import React, { Fragment } from 'react';\nimport { connect } from 'react-redux';\nimport Divider from '@material-ui/core/Divider';\nimport { List, ListItem } from 'material-ui/List';\nimport Button from '@dhis2/d2-ui-core/button/Button';\nimport { getItemIcon } from '../../modules/itemTypes';\n\nimport { acAddDashboardItem } from '../../actions/editDashboard';\n\nconst SingleItem = ({ item, onAddToDashboard }) => {\n    const ItemIcon = getItemIcon(item.type);\n    return (\n        <ListItem\n            key={item.type}\n            leftIcon={<ItemIcon style={{ margin: '6px' }} />}\n            innerDivStyle={{ padding: '0px 0px 0px 42px' }}\n            hoverColor=\"transparent\"\n            primaryText={\n                <p\n                    style={{\n                        display: 'flex',\n                        alignItems: 'center',\n                        justifyContent: 'flex-start',\n                        margin: 0,\n                    }}\n                >\n                    {item.name}\n                    <Button\n                        color=\"primary\"\n                        onClick={onAddToDashboard}\n                        style={{\n                            marginLeft: '5px',\n                            marginRight: '5px',\n                        }}\n                    >\n                        + ADD\n                    </Button>\n                </p>\n            }\n        />\n    );\n};\n\nconst ItemSelectSingle = ({ acAddDashboardItem, category }) => {\n    const addToDashboard = ({ type, content }) => () => {\n        acAddDashboardItem({ type, content });\n    };\n\n    return (\n        <Fragment>\n            <div\n                style={{\n                    display: 'flex',\n                    justifyContent: 'space-between',\n                    paddingLeft: '16px',\n                }}\n            >\n                <h3>{category.header}</h3>\n            </div>\n            <Divider />\n            <List>\n                {category.items.map(item => (\n                    <SingleItem\n                        key={item.type}\n                        item={item}\n                        onAddToDashboard={addToDashboard(item)}\n                    />\n                ))}\n            </List>\n        </Fragment>\n    );\n};\n\nexport default connect(\n    null,\n    { acAddDashboardItem }\n)(ItemSelectSingle);\n","import React, { Fragment } from 'react';\nimport PropTypes from 'prop-types';\nimport i18n from '@dhis2/d2-i18n';\nimport Popover from '@material-ui/core/Popover';\nimport SearchIcon from '@material-ui/icons/Search';\nimport TextField from 'material-ui/TextField';\n\nimport { singleItems, listItems } from './selectableItems';\nimport { itemTypeMap } from '../../modules/itemTypes';\nimport ItemSelectList from './ItemSelectList';\nimport ItemSelectSingle from './ItemSelectSingle';\nimport { colors } from '../../modules/colors';\n\nimport './ItemSelect.css';\n\nconst styles = {\n    filterField: {\n        fontSize: '14px',\n        height: '30px',\n        marginLeft: '10px',\n    },\n    filterFieldInput: {\n        top: '-9px',\n        left: '1px',\n    },\n    filterFieldUnderline: {\n        bottom: '10px',\n    },\n    filterFieldUnderlineFocus: {\n        borderColor: '#aaa',\n        borderWidth: '1px',\n    },\n    searchIcon: {\n        fill: colors.muiDefaultGrey,\n    },\n};\n\nconst ItemSearchField = props => (\n    <div style={{ display: 'flex', alignItems: 'baseline' }}>\n        <SearchIcon style={styles.searchIcon} />\n        <TextField\n            hintText={i18n.t('Search for items to add to this dashboard')}\n            fullWidth={true}\n            value={props.value}\n            onClick={props.onClick}\n            onChange={props.onChange}\n            style={styles.filterField}\n            inputStyle={styles.filterFieldInput}\n            hintStyle={styles.filterFieldHint}\n            underlineStyle={styles.filterFieldUnderline}\n            underlineFocusStyle={styles.filterFieldUnderlineFocus}\n        />\n    </div>\n);\n\nclass ItemSelect extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            anchorEl: null,\n            open: false,\n            maxOptions: new Set(),\n            items: undefined,\n            filter: '',\n        };\n    }\n\n    closeList = () => {\n        this.setState({ open: false, filter: '' });\n    };\n\n    openList = event => {\n        this.fetchItems();\n\n        this.setState({\n            anchorEl: event.currentTarget,\n            open: true,\n        });\n    };\n\n    setFilter = event => {\n        this.setState({ filter: event.target.value }, this.fetchItems);\n    };\n\n    getListItems = items => {\n        return listItems.map(type => {\n            const itemType = itemTypeMap[type.id];\n\n            if (items && items[itemType.countName] > 0) {\n                return (\n                    <ItemSelectList\n                        key={type.id}\n                        type={type.id}\n                        title={type.title}\n                        items={items[itemType.endPointName]}\n                        onChangeItemsLimit={this.fetchItems}\n                    />\n                );\n            } else {\n                return null;\n            }\n        });\n    };\n\n    popoverChildren = items => {\n        const SingleItems = singleItems.map(category => (\n            <ItemSelectSingle key={category.id} category={category} />\n        ));\n        const ListItems = this.getListItems(items);\n\n        return ListItems.concat(SingleItems);\n    };\n\n    fetchItems = async maxOption => {\n        const api = this.context.d2.Api.getApi();\n\n        let queryString;\n\n        if (maxOption) {\n            const maxOptions = this.state.maxOptions;\n\n            if (maxOptions.has(maxOption)) {\n                maxOptions.delete(maxOption);\n            } else {\n                maxOptions.add(maxOption);\n            }\n\n            this.setState({\n                maxOptions,\n            });\n        } else {\n            this.setState({\n                maxOptions: new Set(),\n            });\n        }\n\n        if ([...this.state.maxOptions.values()].length) {\n            queryString =\n                'max=' + [...this.state.maxOptions.values()].join('&max=');\n        }\n\n        api.get(\n            `dashboards/q/${this.state.filter || ''}${\n                queryString ? `?${queryString}` : ''\n            }`\n        )\n            .then(response => {\n                this.setState({ items: response });\n            })\n            .catch(console.error);\n    };\n\n    render() {\n        return (\n            <Fragment>\n                <ItemSearchField\n                    value={this.state.filter}\n                    onClick={this.openList}\n                    onChange={this.setFilter}\n                />\n                <Popover\n                    className=\"dashboard-item-select\"\n                    open={this.state.open}\n                    onClose={this.closeList}\n                    anchorEl={this.state.anchorEl}\n                    anchorOrigin={{ horizontal: 'left', vertical: 'bottom' }}\n                    transformOrigin={{ horizontal: 'left', vertical: 'top' }}\n                    style={{ height: '70vh' }}\n                    PaperProps={{ style: { width: '700px' } }}\n                    disableAutoFocus={true}\n                    disableRestoreFocus={true}\n                >\n                    {this.popoverChildren(this.state.items)}\n                </Popover>\n            </Fragment>\n        );\n    }\n}\n\nItemSelect.contextTypes = {\n    d2: PropTypes.object.isRequired,\n};\n\nexport default ItemSelect;\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport i18n from '@dhis2/d2-i18n';\nimport TextField from '@dhis2/d2-ui-core/text-field/TextField';\n\nimport {\n    acSetDashboardTitle,\n    acSetDashboardDescription,\n} from '../../actions/editDashboard';\nimport { orObject } from '../../modules/util';\nimport { sGetEditDashboardRoot } from '../../reducers/editDashboard';\nimport { sGetDashboardById } from '../../reducers/dashboards';\nimport ItemSelect from '../ItemSelect/ItemSelect';\n\nconst styles = {\n    section: { display: 'flex', justifyContent: 'space-between' },\n    titleDescription: {\n        flex: '3',\n        marginRight: '20px',\n    },\n    title: { padding: '6px 0' },\n    itemSelect: {\n        flex: '2',\n        minWidth: '300px',\n        maxWidth: '730px',\n        position: 'relative',\n        top: '33px',\n    },\n};\n\nexport const EditTitleBar = ({\n    name,\n    displayName,\n    description,\n    style,\n    onChangeTitle,\n    onChangeDescription,\n    classes,\n}) => {\n    const titleStyle = Object.assign({}, style.title, {\n        top: '-2px',\n    });\n\n    const translatedName = () => {\n        return displayName ? (\n            <span style={style.description}>\n                {i18n.t('Current translation')}: {displayName}\n            </span>\n        ) : null;\n    };\n\n    return (\n        <section className={classes.section}>\n            <div className={classes.titleDescription}>\n                <span>{i18n.t('Currently editing')}</span>\n                <div className={classes.title}>\n                    <TextField\n                        multiline\n                        fullWidth\n                        rows={1}\n                        rowsMax={3}\n                        style={titleStyle}\n                        value={name}\n                        placeholder={i18n.t('Add title here')}\n                        onChange={onChangeTitle}\n                    />\n                    {translatedName()}\n                </div>\n                <TextField\n                    multiline\n                    fullWidth\n                    rows={1}\n                    rowsMax={3}\n                    style={style.description}\n                    value={description}\n                    placeholder={i18n.t('Add description here')}\n                    onChange={onChangeDescription}\n                />\n            </div>\n            <div className={classes.itemSelect}>\n                <ItemSelect />\n            </div>\n        </section>\n    );\n};\n\nconst mapStateToProps = state => {\n    const selectedDashboard = orObject(sGetEditDashboardRoot(state));\n    const displayName = orObject(sGetDashboardById(state, selectedDashboard.id))\n        .displayName;\n\n    return {\n        name: selectedDashboard.name,\n        displayName,\n        description: selectedDashboard.description,\n    };\n};\n\nconst mapDispatchToProps = {\n    onChangeTitle: acSetDashboardTitle,\n    onChangeDescription: acSetDashboardDescription,\n};\n\nexport default connect(\n    mapStateToProps,\n    mapDispatchToProps\n)(withStyles(styles)(EditTitleBar));\n\nEditTitleBar.propTypes = {\n    name: PropTypes.string,\n    displayName: PropTypes.string,\n    description: PropTypes.string,\n    onChangeTitle: PropTypes.func.isRequired,\n    onChangeDescription: PropTypes.func.isRequired,\n    style: PropTypes.object,\n};\n\nEditTitleBar.defaultProps = {\n    name: '',\n    displayName: '',\n    description: '',\n    style: {},\n};\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nimport { Button } from '@dhis2/ui-core';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\n\nimport i18n from '@dhis2/d2-i18n';\n\nimport {\n    PeriodDimension,\n    DynamicDimension,\n    OrgUnitDimension,\n    FIXED_DIMENSIONS,\n} from '@dhis2/d2-ui-analytics';\n\nconst peId = FIXED_DIMENSIONS.pe.id;\nconst ouId = FIXED_DIMENSIONS.ou.id;\n\nclass FilterDialog extends Component {\n    onConfirm = id => () => this.props.onConfirm(id);\n\n    dialogContent() {\n        const { displayNameProperty, dimension, selectedItems } = this.props;\n        const dialogId = dimension.id;\n\n        const commonProps = {\n            d2: this.context.d2,\n            onSelect: this.props.onSelect,\n            onDeselect: this.props.onDeselect,\n            onReorder: this.props.onReorder,\n        };\n\n        switch (dialogId) {\n            case peId: {\n                return (\n                    <PeriodDimension\n                        selectedPeriods={selectedItems}\n                        {...commonProps}\n                    />\n                );\n            }\n            case ouId:\n                return (\n                    <OrgUnitDimension\n                        displayNameProperty={displayNameProperty}\n                        ouItems={selectedItems}\n                        {...commonProps}\n                    />\n                );\n            default:\n                return (\n                    <DynamicDimension\n                        selectedItems={selectedItems}\n                        dialogId={dialogId}\n                        dialogTitle={dimension.name}\n                        {...commonProps}\n                    />\n                );\n        }\n    }\n\n    render() {\n        const { dimension, onClose } = this.props;\n        const dialogId = dimension.id;\n\n        return (\n            <Dialog\n                open={!!dialogId}\n                maxWidth=\"lg\"\n                disableEnforceFocus\n                onClose={onClose}\n            >\n                {dialogId && this.dialogContent()}\n                <DialogActions>\n                    <Button kind=\"secondary\" onClick={onClose}>\n                        {i18n.t('Cancel')}\n                    </Button>\n                    <Button kind=\"primary\" onClick={this.onConfirm(dialogId)}>\n                        {i18n.t('Confirm')}\n                    </Button>\n                </DialogActions>\n            </Dialog>\n        );\n    }\n}\n\nFilterDialog.propTypes = {\n    displayNameProperty: PropTypes.string,\n    dimension: PropTypes.object,\n    selectedItems: PropTypes.array,\n    onSelect: PropTypes.func,\n    onDeselect: PropTypes.func,\n    onReorder: PropTypes.func,\n    onClose: PropTypes.func,\n    onConfirm: PropTypes.func,\n};\n\nFilterDialog.contextTypes = {\n    d2: PropTypes.object,\n};\n\nexport default FilterDialog;\n","export const SET_ACTIVE_MODAL_DIMENSION = 'SET_ACTIVE_MODAL_DIMENSION';\nexport const CLEAR_ACTIVE_MODAL_DIMENSION = 'CLEAR_ACTIVE_MODAL_DIMENSION';\n\nexport const DEFAULT_STATE_ACTIVE_MODAL_DIMENSION = {};\n\nexport default (state = DEFAULT_STATE_ACTIVE_MODAL_DIMENSION, action) => {\n    switch (action.type) {\n        case SET_ACTIVE_MODAL_DIMENSION: {\n            return action.value;\n        }\n        case CLEAR_ACTIVE_MODAL_DIMENSION: {\n            return DEFAULT_STATE_ACTIVE_MODAL_DIMENSION;\n        }\n        default:\n            return state;\n    }\n};\n\nexport const sGetActiveModalDimension = state => state.activeModalDimension;\n","import {\n    SET_ACTIVE_MODAL_DIMENSION,\n    CLEAR_ACTIVE_MODAL_DIMENSION,\n} from '../reducers/activeModalDimension';\n\nexport const acSetActiveModalDimension = value => ({\n    type: SET_ACTIVE_MODAL_DIMENSION,\n    value,\n});\n\nexport const acClearActiveModalDimension = () => ({\n    type: CLEAR_ACTIVE_MODAL_DIMENSION,\n});\n","import React, { Component, Fragment } from 'react';\nimport { connect } from 'react-redux';\nimport Popover from '@material-ui/core/Popover';\nimport ArrowDropDownIcon from '@material-ui/icons/ArrowDropDown';\n\nimport i18n from '@dhis2/d2-i18n';\nimport { DimensionsPanel } from '@dhis2/d2-ui-analytics';\n\nimport { Button } from '@dhis2/ui-core';\nimport FilterDialog from './FilterDialog';\n\nimport { sGetSettingsDisplayNameProperty } from '../../reducers/settings';\nimport { sGetActiveModalDimension } from '../../reducers/activeModalDimension';\nimport { sGetDimensions } from '../../reducers/dimensions';\nimport { sGetFiltersKeys } from '../../reducers/itemFilters';\nimport { sGetEditItemFiltersRoot } from '../../reducers/editItemFilters';\nimport { acAddItemFilter, acRemoveItemFilter } from '../../actions/itemFilters';\nimport {\n    acRemoveEditItemFilter,\n    acSetEditItemFilters,\n} from '../../actions/editItemFilters';\nimport {\n    acClearActiveModalDimension,\n    acSetActiveModalDimension,\n} from '../../actions/activeModalDimension';\n\nclass FilterSelector extends Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            anchorEl: null,\n        };\n    }\n\n    openPanel = event => {\n        this.setState({ anchorEl: event.currentTarget });\n    };\n\n    closePanel = () => {\n        this.setState({ anchorEl: null });\n    };\n\n    closeDialog = () => {\n        this.setState({ anchorEl: null });\n\n        this.props.clearActiveModalDimension();\n    };\n\n    selectDimension = id => {\n        this.props.setActiveModalDimension({\n            id,\n            name: this.props.dimensions[id].name,\n        });\n    };\n\n    onSelectItems = ({ dimensionId, items }) => {\n        this.props.setEditItemFilters({\n            ...this.props.selectedItems,\n            [dimensionId]: items,\n        });\n    };\n\n    onDeselectItems = ({ dimensionId, itemIdsToRemove }) => {\n        const oldList = this.props.selectedItems[dimensionId] || [];\n        const newList = oldList.filter(\n            item => !itemIdsToRemove.includes(item.id)\n        );\n\n        if (newList.length) {\n            this.props.setEditItemFilters({\n                ...this.props.selectedItems,\n                [dimensionId]: newList,\n            });\n        } else {\n            this.props.removeEditItemFilter(dimensionId);\n        }\n    };\n\n    onReorderItems = ({ dimensionId, itemIds }) => {\n        const oldList = this.props.selectedItems[dimensionId] || [];\n        const reorderedList = itemIds.map(id =>\n            oldList.find(item => item.id === id)\n        );\n\n        this.props.setEditItemFilters({\n            ...this.props.selectedItems,\n            [dimensionId]: reorderedList,\n        });\n    };\n\n    saveFilter = id => {\n        const filterItems = this.props.selectedItems[id];\n\n        if (filterItems && filterItems.length) {\n            this.props.addItemFilter({\n                id,\n                value: [...filterItems],\n            });\n        } else {\n            this.props.removeItemFilter(id);\n        }\n\n        this.closeDialog();\n    };\n\n    render() {\n        const {\n            displayNameProperty,\n            dimension,\n            dimensions,\n            selectedDimensions,\n            selectedItems,\n        } = this.props;\n\n        return (\n            <Fragment>\n                <Button onClick={this.openPanel}>\n                    {i18n.t('Add filter')}\n                    <ArrowDropDownIcon />\n                </Button>\n                <Popover\n                    open={Boolean(this.state.anchorEl)}\n                    anchorEl={this.state.anchorEl}\n                    anchorOrigin={{ vertical: 'bottom', horizontal: 'left' }}\n                    onClose={this.closePanel}\n                    style={{ height: '100%' }}\n                >\n                    <DimensionsPanel\n                        dimensions={dimensions}\n                        onDimensionClick={this.selectDimension}\n                        selectedIds={selectedDimensions}\n                    />\n                </Popover>\n                {dimension ? (\n                    <FilterDialog\n                        displayNameProperty={displayNameProperty}\n                        dimension={dimension}\n                        selectedItems={selectedItems[dimension.id] || []}\n                        onSelect={this.onSelectItems}\n                        onDeselect={this.onDeselectItems}\n                        onReorder={this.onReorderItems}\n                        onClose={this.closeDialog}\n                        onConfirm={this.saveFilter}\n                    />\n                ) : null}\n            </Fragment>\n        );\n    }\n}\n\nconst mapStateToProps = state => ({\n    displayNameProperty: sGetSettingsDisplayNameProperty(state),\n    dimension: sGetActiveModalDimension(state),\n    dimensions: sGetDimensions(state),\n    selectedDimensions: sGetFiltersKeys(state),\n    selectedItems: sGetEditItemFiltersRoot(state),\n});\n\nexport default connect(\n    mapStateToProps,\n    {\n        clearActiveModalDimension: acClearActiveModalDimension,\n        setActiveModalDimension: acSetActiveModalDimension,\n        addItemFilter: acAddItemFilter,\n        removeItemFilter: acRemoveItemFilter,\n        removeEditItemFilter: acRemoveEditItemFilter,\n        setEditItemFilters: acSetEditItemFilters,\n    }\n)(FilterSelector);\n","import React, { Component } from 'react';\nimport InfoOutlineIcon from '@material-ui/icons/InfoOutlined';\nimport { colors } from '../../modules/colors';\n\nclass Info extends Component {\n    show = false;\n\n    toggle() {\n        this.show = !this.show;\n        return this.show;\n    }\n\n    render() {\n        return (\n            <div onClick={() => this.props.onClick(this.toggle())}>\n                <InfoOutlineIcon style={{ fill: colors.muiDefaultGrey }} />\n            </div>\n        );\n    }\n}\n\nexport default Info;\n","import React, { Component, Fragment } from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport { Link } from 'react-router-dom';\nimport i18n from '@dhis2/d2-i18n';\nimport SharingDialog from '@dhis2/d2-ui-sharing-dialog';\nimport Star from '@material-ui/icons/Star';\nimport StarBorder from '@material-ui/icons/StarBorder';\n\nimport { orObject } from '../../modules/util';\nimport { tStarDashboard } from '../../actions/dashboards';\nimport { acSetSelectedShowDescription } from '../../actions/selected';\nimport FilterSelector from '../ItemFilter/FilterSelector';\nimport { Button } from '@dhis2/ui-core';\nimport Info from './Info';\nimport {\n    sGetSelectedId,\n    sGetSelectedShowDescription,\n} from '../../reducers/selected';\nimport {\n    sGetDashboardById,\n    sGetDashboardItems,\n} from '../../reducers/dashboards';\nimport { colors } from '../../modules/colors';\n\nconst NO_DESCRIPTION = i18n.t('No description');\n\nconst styles = {\n    actions: {\n        display: 'flex',\n        alignItems: 'center',\n        marginLeft: '20px',\n    },\n    starIcon: {\n        fill: colors.muiDefaultGrey,\n    },\n    textButton: {\n        minWidth: '30px',\n        top: '1px',\n    },\n    editLink: {\n        display: 'inline-block',\n        verticalAlign: 'top',\n        textDecoration: 'none',\n        marginRight: '4px',\n    },\n    titleBar: {\n        display: 'flex',\n        alignItems: 'flex-start',\n    },\n    titleBarIcon: {\n        marginLeft: 5,\n        position: 'relative',\n        top: 1,\n        cursor: 'pointer',\n    },\n};\n\nclass ViewTitleBar extends Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            sharingDialogIsOpen: false,\n        };\n    }\n\n    toggleSharingDialog = () =>\n        this.setState({ sharingDialogIsOpen: !this.state.sharingDialogIsOpen });\n\n    render() {\n        const {\n            id,\n            name,\n            description,\n            access,\n            style,\n            showDescription,\n            starred,\n            onStarClick,\n            onInfoClick,\n            classes,\n        } = this.props;\n\n        const titleStyle = Object.assign({}, style.title, {\n            cursor: 'default',\n            userSelect: 'text',\n            top: '7px',\n        });\n\n        const StarIcon = starred ? Star : StarBorder;\n\n        return (\n            <Fragment>\n                <div className={classes.titleBar}>\n                    <span style={titleStyle}>{name}</span>\n                    <div className={classes.actions}>\n                        <div\n                            className={classes.titleBarIcon}\n                            onClick={onStarClick}\n                        >\n                            <StarIcon className={classes.starIcon} />\n                        </div>\n                        <div className={classes.titleBarIcon}>\n                            <Info onClick={onInfoClick} />\n                        </div>\n                        <div style={{ marginLeft: '10px' }}>\n                            {access.update ? (\n                                <Link\n                                    className={classes.editLink}\n                                    to={`/${id}/edit`}\n                                >\n                                    <Button>{i18n.t('Edit')}</Button>\n                                </Link>\n                            ) : null}\n                            {access.manage ? (\n                                <span style={{ marginRight: '4px' }}>\n                                    <Button onClick={this.toggleSharingDialog}>\n                                        {i18n.t('Share')}\n                                    </Button>\n                                </span>\n                            ) : null}\n                            <span style={{ marginRight: '4px' }}>\n                                <FilterSelector />\n                            </span>\n                        </div>\n                    </div>\n                </div>\n                {showDescription ? (\n                    <div\n                        className=\"dashboard-description\"\n                        style={Object.assign(\n                            { paddingTop: '5px', paddingBottom: '5px' },\n                            style.description,\n                            !description ? { color: '#888' } : {}\n                        )}\n                    >\n                        {description || NO_DESCRIPTION}\n                    </div>\n                ) : null}\n                {id ? (\n                    <SharingDialog\n                        d2={this.context.d2}\n                        id={id}\n                        type=\"dashboard\"\n                        open={this.state.sharingDialogIsOpen}\n                        onRequestClose={this.toggleSharingDialog}\n                    />\n                ) : null}\n            </Fragment>\n        );\n    }\n}\n\nconst mapStateToProps = state => {\n    const id = sGetSelectedId(state);\n    const dashboard = orObject(sGetDashboardById(state, id));\n\n    return {\n        id,\n        name: dashboard.displayName,\n        description: dashboard.displayDescription,\n        dashboardItems: sGetDashboardItems(state),\n        showDescription: sGetSelectedShowDescription(state),\n        starred: dashboard.starred,\n        access: orObject(dashboard.access),\n    };\n};\n\nconst mergeProps = (stateProps, dispatchProps, ownProps) => {\n    const { id, starred, showDescription } = stateProps;\n    const { dispatch } = dispatchProps;\n\n    return {\n        ...stateProps,\n        ...ownProps,\n        onStarClick: () => dispatch(tStarDashboard(id, !starred)),\n        onInfoClick: () =>\n            dispatch(acSetSelectedShowDescription(!showDescription)),\n    };\n};\n\nexport default connect(\n    mapStateToProps,\n    null,\n    mergeProps\n)(withStyles(styles)(ViewTitleBar));\n\nViewTitleBar.propTypes = {\n    id: PropTypes.string,\n    name: PropTypes.string,\n    description: PropTypes.string,\n    starred: PropTypes.bool,\n    showDescription: PropTypes.bool,\n    onInfoClick: PropTypes.func,\n};\n\nViewTitleBar.defaultProps = {\n    name: '',\n    description: '',\n    starred: false,\n    showDescription: false,\n    onInfoClick: null,\n};\n\nViewTitleBar.contextTypes = {\n    d2: PropTypes.object,\n};\n","import React from 'react';\n\nimport { colors } from '../../modules/colors';\nimport EditTitleBar from './EditTitleBar';\nimport ViewTitleBar from './ViewTitleBar';\n\nimport './TitleBar.css';\n\nconst style = {\n    title: {\n        position: 'relative',\n        fontSize: 21,\n        fontWeight: 500,\n        color: colors.black,\n        minWidth: 50,\n    },\n    description: {\n        fontSize: 14,\n        color: colors.darkGrey,\n    },\n};\n\nconst TitleBar = ({ edit }) => {\n    return (\n        <div\n            className=\"titlebar-wrapper\"\n            style={{\n                padding: '20px 15px 5px 10px',\n            }}\n        >\n            {edit ? (\n                <EditTitleBar style={style} />\n            ) : (\n                <ViewTitleBar style={style} />\n            )}\n        </div>\n    );\n};\n\nexport default TitleBar;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nimport i18n from '@dhis2/d2-i18n';\n\nimport * as pluginManager from './plugin';\nimport { getBaseUrl, orObject } from '../../../modules/util';\nimport { getGridItemDomId } from '../../ItemGrid/gridUtil';\n\nconst pluginCredentials = d2 => {\n    return {\n        baseUrl: getBaseUrl(d2),\n        auth: d2.Api.getApi().defaultHeaders.Authorization,\n    };\n};\n\nclass DefaultPlugin extends Component {\n    pluginCredentials = null;\n\n    constructor(props, context) {\n        super(props);\n\n        this.d2 = context.d2;\n    }\n\n    shouldPluginReload = prevProps => {\n        // TODO - fix this hack, to handle bug with multiple\n        // rerendering while switching between dashboards.\n        //\n        // To determine if the rendering is happening because of a\n        // dashboard switch, check if the item reference has changed.\n        const reloadAllowed = this.props.item === prevProps.item;\n\n        const filtersChanged = prevProps.itemFilters !== this.props.itemFilters;\n        const vis = orObject(this.props.visualization);\n        const prevVis = orObject(prevProps.visualization);\n        const visChanged =\n            vis.id !== prevVis.id || vis.activeType !== prevVis.activeType;\n\n        return reloadAllowed && (visChanged || filtersChanged);\n    };\n\n    reloadPlugin = prevProps => {\n        if (\n            pluginManager.pluginIsAvailable(\n                this.props.item,\n                this.props.visualization\n            ) &&\n            this.shouldPluginReload(prevProps)\n        ) {\n            const prevVis = orObject(prevProps.visualization);\n            const currentVis = this.props.visualization;\n\n            const useActiveType =\n                currentVis.activeType !== prevVis.activeType ||\n                currentVis.activeType !== this.props.item.type;\n\n            if (\n                useActiveType ||\n                this.props.itemFilters !== prevProps.itemFilters\n            ) {\n                pluginManager.unmount(\n                    this.props.item,\n                    prevVis.activeType || this.props.item.type\n                );\n\n                pluginManager.load(\n                    this.props.item,\n                    this.props.visualization,\n                    this.pluginCredentials,\n                    useActiveType ? currentVis.activeType : null\n                );\n            }\n        }\n    };\n\n    componentDidMount() {\n        this.pluginCredentials = pluginCredentials(this.d2);\n\n        if (\n            pluginManager.pluginIsAvailable(\n                this.props.item,\n                this.props.visualization\n            )\n        ) {\n            pluginManager.load(\n                this.props.item,\n                this.props.visualization,\n                this.pluginCredentials,\n                !this.props.editMode ? this.getActiveType() : null\n            );\n        }\n    }\n\n    componentDidUpdate(prevProps) {\n        this.reloadPlugin(prevProps);\n    }\n\n    getActiveType = () =>\n        this.props.visualization.activeType || this.props.item.type;\n\n    render() {\n        const { classes, item, visualization, style } = this.props;\n        const pluginIsAvailable = pluginManager.pluginIsAvailable(\n            item,\n            visualization\n        );\n\n        return pluginIsAvailable ? (\n            <div id={getGridItemDomId(item.id)} style={style} />\n        ) : (\n            <div className={classes.textDiv}>\n                {i18n.t('Unable to load the plugin for this item')}\n            </div>\n        );\n    }\n}\n\nDefaultPlugin.contextTypes = {\n    d2: PropTypes.object,\n};\n\nDefaultPlugin.propTypes = {\n    style: PropTypes.object,\n    item: PropTypes.object,\n    itemFilters: PropTypes.object,\n    visualization: PropTypes.object,\n};\n\nDefaultPlugin.defaultProps = {\n    style: {},\n    item: {},\n    itemFilters: {},\n    visualization: {},\n};\n\nexport default DefaultPlugin;\n","import React from 'react';\n\nexport const HEADER_HEIGHT = 45;\n\nconst ItemHeader = props => {\n    const { title, actionButtons, editMode } = props;\n\n    return (\n        <div className=\"dashboard-item-header\">\n            <div\n                className=\"dashboard-item-header-title\"\n                style={{ userSelect: editMode ? 'none' : 'text' }}\n            >\n                {title}\n            </div>\n            {actionButtons}\n        </div>\n    );\n};\n\nexport default ItemHeader;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { colors } from '../../../modules/colors';\nimport { getId } from './plugin';\nimport InterpretationsComponent from '@dhis2/d2-ui-interpretations';\n\nconst style = {\n    scrollContainer: {\n        overflowY: 'auto',\n        height: '340px',\n    },\n    line: {\n        margin: '-1px 0px 0px',\n        height: '1px',\n        border: 'none',\n        backgroundColor: colors.lightGrey,\n    },\n};\n\nclass ItemFooter extends Component {\n    render() {\n        const objectId = getId(this.props.item);\n\n        return (\n            <div className=\"dashboard-item-footer\">\n                <hr style={style.line} />\n                <div style={style.scrollContainer}>\n                    <InterpretationsComponent\n                        d2={this.context.d2}\n                        item={this.props.item}\n                        type={this.props.item.type.toLowerCase()}\n                        id={objectId}\n                        appName=\"dashboard\"\n                    />\n                </div>\n            </div>\n        );\n    }\n}\n\nItemFooter.contextTypes = {\n    d2: PropTypes.object.isRequired,\n};\n\nItemFooter.propTypes = {\n    item: PropTypes.object.isRequired,\n};\n\nexport default ItemFooter;\n","import React from 'react';\n\nimport './ItemHeaderButton.css';\n\nconst ItemHeaderButton = ({ disabled, onClick, children, style }) => {\n    return (\n        <button\n            disabled={disabled}\n            type=\"button\"\n            className=\"item-action-button\"\n            style={style}\n            onClick={onClick}\n        >\n            {children}\n        </button>\n    );\n};\n\nexport default ItemHeaderButton;\n","import React, { Component, Fragment } from 'react';\nimport MessageIcon from '@material-ui/icons/Message';\nimport TableIcon from '@material-ui/icons/ViewList';\nimport ChartIcon from '@material-ui/icons/InsertChart';\nimport MapIcon from '@material-ui/icons/Public';\n\nimport { extractFavorite } from './plugin';\nimport ItemHeaderButton from '../ItemHeaderButton';\nimport {\n    VISUALIZATION_TYPE_TABLE,\n    VISUALIZATION_TYPE_CHART,\n    VISUALIZATION_TYPE_MAP,\n    itemTypeMap,\n    CHART,\n    MAP,\n    REPORT_TABLE,\n    EVENT_CHART,\n    EVENT_REPORT,\n    DOMAIN_TYPE_AGGREGATE,\n} from '../../../modules/itemTypes';\nimport { colors } from '../../../modules/colors';\n\nconst style = {\n    iconBase: {\n        width: '24px',\n        height: '24px',\n        fill: colors.lightMediumGrey,\n    },\n    buttonBase: {\n        padding: '5px 6px 3px 6px',\n    },\n    buttonDisabled: {\n        padding: '5px 6px 3px 6px',\n        opacity: 0.5,\n        cursor: 'unset',\n    },\n    toggleFooterPadding: {\n        padding: '7px 6px 1px 6px',\n    },\n    border: {\n        borderRadius: '2px',\n        border: `1px solid ${colors.lightGrey}`,\n    },\n};\n\nconst baseStyle = {\n    icon: style.iconBase,\n    container: style.buttonBase,\n};\n\nconst disabledStyle = {\n    icon: style.iconBase,\n    container: style.buttonDisabled,\n};\n\nconst activeStyle = {\n    icon: { ...style.iconBase, fill: colors.royalBlue },\n    container: {\n        ...style.buttonBase,\n        backgroundColor: colors.lightBlue,\n    },\n};\n\nconst inactiveStyle = disabled => (disabled ? disabledStyle : baseStyle);\n\nconst tableBtnStyle = (activeType, disabled) =>\n    [REPORT_TABLE, EVENT_REPORT].includes(activeType)\n        ? activeStyle\n        : inactiveStyle(disabled);\n\nconst chartBtnStyle = (activeType, disabled) =>\n    [CHART, EVENT_CHART].includes(activeType)\n        ? activeStyle\n        : inactiveStyle(disabled);\n\nconst mapBtnStyle = (activeType, disabled) =>\n    [MAP].includes(activeType) ? activeStyle : inactiveStyle(disabled);\n\nexport const getItemTypeId = (itemTypeMap, visualizationType, domainType) => {\n    const item = Object.values(itemTypeMap).find(\n        item =>\n            item.visualizationType === visualizationType &&\n            item.domainType === domainType\n    );\n    return item.id;\n};\n\nclass VisualizationItemHeaderButtons extends Component {\n    render() {\n        const {\n            item,\n            onSelectVisualization,\n            activeFooter,\n            activeType,\n            onToggleFooter,\n        } = this.props;\n\n        const domainType = itemTypeMap[item.type].domainType;\n\n        const onViewTable = () =>\n            onSelectVisualization(\n                getItemTypeId(itemTypeMap, VISUALIZATION_TYPE_TABLE, domainType)\n            );\n\n        const onViewChart = () =>\n            onSelectVisualization(\n                getItemTypeId(itemTypeMap, VISUALIZATION_TYPE_CHART, domainType)\n            );\n\n        const onViewMap = () =>\n            onSelectVisualization(\n                getItemTypeId(itemTypeMap, VISUALIZATION_TYPE_MAP, domainType)\n            );\n\n        const toggleFooterBase = activeFooter ? activeStyle : baseStyle;\n\n        const toggleFooter = {\n            ...toggleFooterBase,\n            container: {\n                ...toggleFooterBase.container,\n                ...style.toggleFooterPadding,\n                ...style.border,\n            },\n        };\n\n        // disable toggle buttons\n        let disabled = false;\n\n        if (item.type === VISUALIZATION_TYPE_CHART) {\n            if (extractFavorite(item).type.match(/^YEAR_OVER_YEAR/)) {\n                disabled = true;\n            }\n        }\n\n        const tableButtonStyle = tableBtnStyle(activeType, disabled);\n        const chartButtonStyle = chartBtnStyle(activeType, disabled);\n        const mapButtonStyle = mapBtnStyle(activeType, disabled);\n\n        return (\n            <Fragment>\n                <div style={{ marginRight: 10 }}>\n                    <ItemHeaderButton\n                        style={toggleFooter.container}\n                        onClick={onToggleFooter}\n                    >\n                        <MessageIcon style={toggleFooter.icon} />\n                    </ItemHeaderButton>\n                </div>\n                <div style={style.border}>\n                    <ItemHeaderButton\n                        disabled={disabled}\n                        style={tableButtonStyle.container}\n                        onClick={onViewTable}\n                    >\n                        <TableIcon style={tableButtonStyle.icon} />\n                    </ItemHeaderButton>\n                    <ItemHeaderButton\n                        disabled={disabled}\n                        style={chartButtonStyle.container}\n                        onClick={onViewChart}\n                    >\n                        <ChartIcon style={chartButtonStyle.icon} />\n                    </ItemHeaderButton>\n                    {domainType === DOMAIN_TYPE_AGGREGATE ? (\n                        <ItemHeaderButton\n                            disabled={disabled}\n                            style={mapButtonStyle.container}\n                            onClick={onViewMap}\n                        >\n                            <MapIcon style={mapButtonStyle.icon} />\n                        </ItemHeaderButton>\n                    ) : null}\n                </div>\n            </Fragment>\n        );\n    }\n}\n\nexport default VisualizationItemHeaderButtons;\n","// Note that this ignores discrepancies in 'this', so shouldn't be used with bound functions\n// This is useful instead of lodash/memoize when we only need to memoize a single value\n// Inspiration: https://github.com/alexreardon/memoize-one\n\nconst memoizeOne = fn => {\n    let lastArgs = undefined;\n    let lastValue = undefined;\n\n    return (...args) => {\n        if (\n            lastArgs &&\n            args.length === lastArgs.length &&\n            args.every((arg, i) => arg === lastArgs[i])\n        ) {\n            return lastValue;\n        }\n        lastArgs = args;\n        lastValue = fn(...args);\n        return lastValue;\n    };\n};\n\nexport default memoizeOne;\n","import React, { Component, Fragment } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { withStyles } from '@material-ui/core/styles';\nimport LaunchIcon from '@material-ui/icons/Launch';\nimport ChartPlugin from '@dhis2/data-visualizer-plugin';\n\nimport i18n from '@dhis2/d2-i18n';\nimport uniqueId from 'lodash/uniqueId';\n\nimport DefaultPlugin from './DefaultPlugin';\nimport ItemHeader, { HEADER_HEIGHT } from '../ItemHeader';\nimport ItemFooter from './ItemFooter';\nimport VisualizationItemHeaderButtons from './ItemHeaderButtons';\nimport * as pluginManager from './plugin';\nimport { sGetVisualization } from '../../../reducers/visualizations';\nimport { sGetItemFiltersRoot } from '../../../reducers/itemFilters';\nimport {\n    acReceivedVisualization,\n    acReceivedActiveVisualization,\n} from '../../../actions/selected';\nimport { CHART, MAP, itemTypeMap } from '../../../modules/itemTypes';\nimport { colors } from '../../../modules/colors';\nimport memoizeOne from '../../../modules/memoizeOne';\nimport { getVisualizationConfig } from './plugin';\n\nconst styles = {\n    icon: {\n        width: 16,\n        height: 16,\n        marginLeft: 3,\n        cursor: 'pointer',\n        fill: colors.muiDefaultGrey,\n    },\n    title: {\n        overflow: 'hidden',\n        maxWidth: '85%',\n        textOverflow: 'ellipsis',\n        whiteSpace: 'nowrap',\n    },\n    textDiv: {\n        fontSize: '14px',\n        fontStretch: 'normal',\n        padding: '10px',\n        lineHeight: '20px',\n    },\n};\n\nconst applyFilters = (visualization, filters) => {\n    if (!Object.keys(filters).length) {\n        return visualization;\n    }\n\n    // deep clone objects in filters to avoid changing the visualization in the Redux store\n    const visRows = visualization.rows.map(obj => ({ ...obj }));\n    const visColumns = visualization.columns.map(obj => ({ ...obj }));\n    const visFilters = visualization.filters.map(obj => ({ ...obj }));\n\n    Object.keys(filters).forEach(dimensionId => {\n        if (filters[dimensionId]) {\n            let dimensionFound = false;\n\n            [visRows, visColumns, visFilters].forEach(dimensionObjects =>\n                dimensionObjects\n                    .filter(obj => obj.dimension === dimensionId)\n                    .forEach(obj => {\n                        dimensionFound = true;\n                        obj.items = filters[dimensionId];\n                    })\n            );\n\n            // add dimension to filters if not already present elsewhere\n            if (!dimensionFound) {\n                visFilters.push({\n                    dimension: dimensionId,\n                    items: filters[dimensionId],\n                });\n            }\n        }\n    });\n\n    return {\n        ...visualization,\n        rows: visRows,\n        columns: visColumns,\n        filters: visFilters,\n    };\n};\n\nexport class Item extends Component {\n    state = {\n        showFooter: false,\n        configLoaded: false,\n    };\n\n    constructor(props, context) {\n        super(props);\n\n        this.d2 = context.d2;\n\n        this.contentRef = React.createRef();\n    }\n\n    async componentDidMount() {\n        this.props.onVisualizationLoaded(\n            // TODO do not call fetch on the pluginManager, do it here as the manager will eventually be removed...\n            await pluginManager.fetch(this.props.item)\n        );\n\n        this.setState({\n            configLoaded: true,\n        });\n    }\n\n    getUniqueKey = memoizeOne(() => uniqueId());\n\n    pluginCredentials = null;\n\n    getPluginComponent = () => {\n        const visualization = getVisualizationConfig(\n            this.props.visualization,\n            this.props.item.type,\n            this.getActiveType()\n        );\n\n        if (!visualization) {\n            return (\n                <div className={this.props.classes.textDiv}>\n                    {i18n.t('No data to display')}\n                </div>\n            );\n        }\n\n        const props = {\n            ...this.props,\n            visualization,\n            style: this.getContentStyle(),\n        };\n\n        switch (this.getActiveType()) {\n            case CHART: {\n                return (\n                    <ChartPlugin\n                        d2={this.d2}\n                        config={applyFilters(\n                            props.visualization,\n                            props.itemFilters\n                        )}\n                        forDashboard={true}\n                        style={props.style}\n                    />\n                );\n            }\n            case MAP: {\n                if (props.item.type === MAP) {\n                    // apply filters only to thematic and event layers\n                    // for maps AO\n                    const mapViews = props.visualization.mapViews.map(obj => {\n                        if (\n                            obj.layer.includes('thematic') ||\n                            obj.layer.includes('event')\n                        ) {\n                            return applyFilters(obj, props.itemFilters);\n                        }\n\n                        return obj;\n                    });\n\n                    props.visualization = {\n                        ...props.visualization,\n                        mapViews,\n                    };\n                } else {\n                    // this is the case of a non map AO passed to the maps plugin\n                    // due to a visualization type switch in dashboard item\n                    // maps plugin takes care of converting the AO to a suitable format\n                    props.visualization = applyFilters(\n                        props.visualization,\n                        props.itemFilters\n                    );\n                }\n\n                return <DefaultPlugin {...props} />;\n            }\n            default: {\n                props.visualization = applyFilters(\n                    props.visualization,\n                    props.itemFilters\n                );\n\n                return <DefaultPlugin {...props} />;\n            }\n        }\n    };\n\n    onToggleFooter = () => {\n        this.setState(\n            { showFooter: !this.state.showFooter },\n            this.props.onToggleItemExpanded(this.props.item.id)\n        );\n    };\n\n    onSelectVisualization = activeType => {\n        // Cancel request if type is already active\n        if (activeType === this.getActiveType()) {\n            return;\n        }\n\n        pluginManager.unmount(this.props.item, this.getActiveType());\n\n        this.props.onSelectVisualization(\n            this.props.visualization.id,\n            this.props.item.type,\n            activeType\n        );\n    };\n\n    getActiveType = () =>\n        this.props.visualization.activeType || this.props.item.type;\n\n    pluginIsAvailable = () =>\n        pluginManager.pluginIsAvailable(\n            this.props.item,\n            this.props.visualization\n        );\n\n    getTitle = () => {\n        const { item, editMode, classes } = this.props;\n        const itemName = pluginManager.getName(item);\n\n        return (\n            <div style={{ display: 'flex', alignItems: 'center' }}>\n                <span className={classes.title} title={itemName}>\n                    {itemName}\n                </span>\n                {!editMode && this.pluginIsAvailable() ? (\n                    <a\n                        href={pluginManager.getLink(this.props.item, this.d2)}\n                        style={{ height: 16 }}\n                        title={`View in ${\n                            itemTypeMap[this.props.item.type].appName\n                        } app`}\n                    >\n                        <LaunchIcon className={classes.icon} />\n                    </a>\n                ) : null}\n            </div>\n        );\n    };\n\n    getActionButtons = () =>\n        pluginManager.pluginIsAvailable(\n            this.props.item,\n            this.props.visualization\n        ) && !this.props.editMode ? (\n            <VisualizationItemHeaderButtons\n                item={this.props.item}\n                activeFooter={this.state.showFooter}\n                activeType={this.getActiveType()}\n                onSelectVisualization={this.onSelectVisualization}\n                onToggleFooter={this.onToggleFooter}\n            />\n        ) : null;\n\n    getContentStyle = () => {\n        const { item, editMode } = this.props;\n        const PADDING_BOTTOM = 4;\n\n        return !editMode\n            ? {\n                  height: item.originalHeight - HEADER_HEIGHT - PADDING_BOTTOM,\n              }\n            : { height: this.contentRef.offsetHeight };\n    };\n\n    render() {\n        const { item, editMode, itemFilters } = this.props;\n        const { showFooter } = this.state;\n\n        return (\n            <Fragment>\n                <ItemHeader\n                    title={this.getTitle()}\n                    actionButtons={this.getActionButtons()}\n                    editMode={editMode}\n                />\n                <div\n                    key={this.getUniqueKey(itemFilters)}\n                    className=\"dashboard-item-content\"\n                    ref={ref => (this.contentRef = ref)}\n                >\n                    {this.state.configLoaded && this.getPluginComponent()}\n                </div>\n                {!editMode && showFooter ? <ItemFooter item={item} /> : null}\n            </Fragment>\n        );\n    }\n}\n\nItem.contextTypes = {\n    d2: PropTypes.object,\n};\n\nItem.propTypes = {\n    item: PropTypes.object,\n    editMode: PropTypes.bool,\n    onToggleItemExpanded: PropTypes.func,\n    itemFilters: PropTypes.object,\n    visualization: PropTypes.object,\n};\n\nItem.defaultProps = {\n    item: {},\n    editMode: false,\n    onToggleItemExpanded: Function.prototype,\n    itemFilters: {},\n    visualization: {},\n};\n\nconst mapStateToProps = (state, ownProps) => ({\n    itemFilters: sGetItemFiltersRoot(state),\n    visualization: sGetVisualization(\n        state,\n        pluginManager.extractFavorite(ownProps.item).id\n    ),\n});\n\nconst mapDispatchToProps = dispatch => ({\n    onVisualizationLoaded: visualization =>\n        dispatch(acReceivedVisualization(visualization)),\n    onSelectVisualization: (id, type, activeType) =>\n        dispatch(acReceivedActiveVisualization(id, type, activeType)),\n});\n\nexport default connect(\n    mapStateToProps,\n    mapDispatchToProps\n)(withStyles(styles)(Item));\n","import React from 'react';\nimport { colors } from '../modules/colors';\n\nconst style = {\n    backgroundColor: colors.lightGrey,\n    border: 'none',\n    height: '1px',\n    margin: '0px 0px 5px 0px',\n};\n\nconst Line = props => <hr style={style} />;\n\nexport default Line;\n","import React, { Component, Fragment } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport i18n from '@dhis2/d2-i18n';\n\nimport { sGetMessagesRoot } from '../../../reducers/messages';\nimport { formatDate } from '../../../modules/util';\nimport { colors } from '../../../modules/colors';\nimport ItemHeader from '../ItemHeader';\nimport Line from '../../../widgets/Line';\n\nimport './MessagesItem.css';\n\nconst PRIVATE = 'PRIVATE';\n\nconst messageTypes = {\n    [PRIVATE]: 'Private',\n    VALIDATION_RESULT: 'Validation',\n    TICKET: 'Ticket',\n    SYSTEM: 'System',\n};\n\nconst style = {\n    list: {\n        listStyleType: 'none',\n        paddingLeft: '0px',\n    },\n    seeAll: {\n        textAlign: 'center',\n        fontSize: '13px',\n        marginBottom: '5px',\n    },\n    sender: {\n        fontSize: '13px',\n        lineHeight: '15px',\n        margin: 0,\n        color: colors.darkGrey,\n    },\n    snippet: {\n        color: colors.darkGrey,\n        fontSize: '13px',\n        lineHeight: '15px',\n        maxHeight: '30px',\n        overflow: 'hidden',\n    },\n};\n\nclass MessagesItem extends Component {\n    state = {\n        uiLocale: '',\n    };\n\n    async componentDidMount() {\n        const uiLocale = await this.context.d2.currentUser.userSettings.get(\n            'keyUiLocale'\n        );\n\n        this.setState({ uiLocale });\n    }\n\n    getMessageHref = msg => {\n        const msgIdentifier = msg ? `#/${msg.messageType}/${msg.id}` : '';\n        return `${this.context.baseUrl}/dhis-web-messaging/${msgIdentifier}`;\n    };\n\n    getMessageSender = msg => {\n        const latestMsg = msg.messages.slice(-1)[0];\n        return latestMsg.sender ? latestMsg.sender.displayName : '';\n    };\n\n    getMessageItems = () => {\n        const editClass = !this.props.editMode ? 'view' : null;\n\n        return this.props.messages.map(msg => {\n            const redirectToMsg = () => {\n                if (!this.props.editMode) {\n                    document.location.href = this.getMessageHref(msg);\n                }\n            };\n\n            const sender =\n                msg.messageType === PRIVATE\n                    ? this.getMessageSender(msg)\n                    : messageTypes[msg.messageType];\n\n            const readClass = !msg.read ? 'unread' : null;\n            const latestMsg = msg.messages.slice(-1)[0];\n            const msgDate = latestMsg.lastUpdated;\n\n            return (\n                <li\n                    className={`message-item ${editClass}`}\n                    key={msg.id}\n                    onClick={redirectToMsg}\n                >\n                    <p className={`message-title ${readClass}`}>\n                        {msg.displayName} ({msg.messageCount})\n                    </p>\n                    <p style={style.sender}>\n                        {sender} - {formatDate(msgDate, this.state.uiLocale)}\n                    </p>\n                    <p style={style.snippet}>{latestMsg.text}</p>\n                </li>\n            );\n        });\n    };\n\n    render() {\n        return (\n            <Fragment>\n                <ItemHeader title={i18n.t('Messages')} />\n                <Line />\n                {this.props.messages.length > 0 && (\n                    <div className=\"dashboard-item-content\">\n                        <ul style={style.list}>{this.getMessageItems()}</ul>\n                        <div style={style.seeAll}>\n                            <a href={this.getMessageHref()}>\n                                {i18n.t('See all messages')}\n                            </a>\n                        </div>\n                    </div>\n                )}\n            </Fragment>\n        );\n    }\n}\n\nMessagesItem.contextTypes = {\n    d2: PropTypes.object,\n    baseUrl: PropTypes.string,\n};\n\nconst mapStateToProps = state => {\n    return {\n        messages: Object.values(sGetMessagesRoot(state)),\n    };\n};\n\nconst MessagesContainer = connect(\n    mapStateToProps,\n    null\n)(MessagesItem);\n\nexport default MessagesContainer;\n","import React, { Fragment } from 'react';\nimport ItemHeader from '../ItemHeader';\nimport NotInterestedIcon from '@material-ui/icons/NotInterested';\n\nconst NotSupportedItem = props => (\n    <Fragment>\n        <ItemHeader title={`Item type not supported: ${props.item.type}`} />\n        <div\n            style={{\n                display: 'flex',\n                justifyContent: 'center',\n                alignItems: 'center',\n                height: '90%',\n            }}\n        >\n            <NotInterestedIcon\n                style={{ width: 100, height: 100, align: 'center' }}\n                color=\"disabled\"\n            />\n        </div>\n    </Fragment>\n);\n\nexport default NotSupportedItem;\n","import React from 'react';\nimport { colors } from '@dhis2/ui-core';\n\nconst DeleteIcon = ({ className }) => (\n    <svg\n        className={className}\n        xmlns=\"http://www.w3.org/2000/svg\"\n        width=\"18\"\n        height=\"18\"\n        viewBox=\"0 0 24 24\"\n        fill={colors.red500}\n    >\n        <path d=\"M6 19c0 1.1.9 2 2 2h8c1.1 0 2-.9 2-2V7H6v12zM19 4h-3.5l-1-1h-5l-1 1H5v2h14V4z\" />\n        <path d=\"M0 0h24v24H0z\" fill=\"none\" />\n    </svg>\n);\n\nexport default DeleteIcon;\n","import React, { Fragment } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { colors } from '@dhis2/ui-core';\n\nimport DeleteIcon from '../../../icons/Delete';\nimport Line from '../../../widgets/Line';\nimport {\n    itemTypeMap,\n    getItemUrl,\n    getItemIcon,\n} from '../../../modules/itemTypes';\nimport { orArray } from '../../../modules/util';\nimport { tRemoveListItemContent } from './actions';\nimport ItemHeader from '../ItemHeader';\nimport classes from './Item.module.css';\n\nconst getItemTitle = item => itemTypeMap[item.type].pluralTitle;\n\nconst getContentItems = item =>\n    orArray(item[itemTypeMap[item.type].propName]).filter(\n        (item, index, array) =>\n            array.findIndex(el => el.id === item.id) === index\n    );\n\nconst removeContent = (handler, item, contentToRemove) => () => {\n    handler(item, contentToRemove);\n};\n\nconst ListItem = (props, context) => {\n    const { item, editMode, tRemoveListItemContent } = props;\n    const contentItems = getContentItems(item);\n\n    const getLink = contentItem => {\n        const deleteButton = (\n            <button\n                className={classes.deletebutton}\n                onClick={removeContent(\n                    tRemoveListItemContent,\n                    item,\n                    contentItem\n                )}\n            >\n                <DeleteIcon style={{ verticalAlign: 'bottom' }} />\n            </button>\n        );\n\n        return (\n            <Fragment>\n                <a\n                    className={classes.link}\n                    style={{ color: colors.grey900 }}\n                    href={getItemUrl(item.type, contentItem, context.d2)}\n                >\n                    {contentItem.name}\n                </a>\n                {editMode ? deleteButton : null}\n            </Fragment>\n        );\n    };\n\n    const ItemIcon = getItemIcon(item.type);\n\n    return (\n        <Fragment>\n            <ItemHeader title={getItemTitle(item)} />\n            <Line />\n            <div className=\"dashboard-item-content\">\n                <ul className={classes.list}>\n                    {contentItems.map(contentItem => (\n                        <li className={classes.item} key={contentItem.id}>\n                            <ItemIcon className={classes.itemicon} />\n                            {getLink(contentItem)}\n                        </li>\n                    ))}\n                </ul>\n            </div>\n        </Fragment>\n    );\n};\n\nListItem.contextTypes = {\n    d2: PropTypes.object,\n};\n\nexport default connect(\n    null,\n    {\n        tRemoveListItemContent,\n    }\n)(ListItem);\n","import {\n    acUpdateDashboardItem,\n    acRemoveDashboardItem,\n} from '../../../actions/editDashboard';\nimport { itemTypeMap } from '../../../modules/itemTypes';\n\nexport const tRemoveListItemContent = (dashboardItem, content) => dispatch => {\n    const listItemType = itemTypeMap[dashboardItem.type].propName;\n\n    const newContent = dashboardItem[listItemType].filter(\n        item => item.id !== content.id\n    );\n\n    if (newContent.length) {\n        dashboardItem[listItemType] = newContent;\n        dispatch(acUpdateDashboardItem(dashboardItem));\n    } else {\n        dispatch(acRemoveDashboardItem(dashboardItem));\n    }\n};\n","import React, { Fragment } from 'react';\nimport { connect } from 'react-redux';\nimport i18n from '@dhis2/d2-i18n';\nimport TextField from '@dhis2/d2-ui-core/text-field/TextField';\nimport {\n    Parser as RichTextParser,\n    Editor as RichTextEditor,\n} from '@dhis2/d2-ui-rich-text';\n\nimport { acUpdateDashboardItem } from '../../../actions/editDashboard';\nimport { sGetEditDashboardItems } from '../../../reducers/editDashboard';\nimport { sGetDashboardItems } from '../../../reducers/dashboards';\nimport ItemHeader from '../ItemHeader';\nimport Line from '../../../widgets/Line';\n\nconst style = {\n    textDiv: {\n        padding: '10px',\n        whiteSpace: 'pre-line',\n        lineHeight: '20px',\n    },\n    textField: {\n        fontSize: '14px',\n        fontStretch: 'normal',\n        width: '90%',\n        margin: '0 auto',\n        display: 'block',\n    },\n    container: {\n        marginBottom: '20px',\n        marginTop: '20px',\n    },\n};\n\nconst TextItem = props => {\n    const { item, editMode, text, acUpdateDashboardItem } = props;\n\n    const onChangeText = text => {\n        const updatedItem = {\n            ...item,\n            text,\n        };\n\n        acUpdateDashboardItem(updatedItem);\n    };\n\n    const viewItem = () => {\n        const textDivStyle = Object.assign({}, style.textField, style.textDiv);\n        return (\n            <div className=\"dashboard-item-content\" style={style.container}>\n                <RichTextParser style={textDivStyle}>{text}</RichTextParser>\n            </div>\n        );\n    };\n\n    const editItem = () => {\n        return (\n            <Fragment>\n                <ItemHeader title={i18n.t('Text item')} />\n                <Line />\n                <div className=\"dashboard-item-content\">\n                    <RichTextEditor onEdit={onChangeText}>\n                        <TextField\n                            value={text}\n                            multiline\n                            rows={1}\n                            fullWidth\n                            style={style.textField}\n                            placeholder={i18n.t('Add text here')}\n                            onChange={onChangeText}\n                        />\n                    </RichTextEditor>\n                </div>\n            </Fragment>\n        );\n    };\n\n    return <Fragment>{editMode ? editItem() : viewItem()}</Fragment>;\n};\n\nconst mapStateToProps = (state, ownProps) => {\n    const items = ownProps.editMode\n        ? sGetEditDashboardItems(state)\n        : sGetDashboardItems(state);\n\n    const item = items.find(item => item.id === ownProps.item.id);\n\n    return {\n        text: item ? item.text : '',\n    };\n};\n\nexport default connect(\n    mapStateToProps,\n    {\n        acUpdateDashboardItem,\n    }\n)(TextItem);\n","import React, { Fragment } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport NotInterestedIcon from '@material-ui/icons/NotInterested';\n\nimport { FILTER_ORG_UNIT } from '../../../actions/itemFilters';\nimport { sGetItemFiltersRoot } from '../../../reducers/itemFilters';\nimport ItemHeader from '../ItemHeader';\nimport Line from '../../../widgets/Line';\n\nconst getIframeSrc = (appDetails, item, itemFilters) => {\n    let iframeSrc = `${appDetails.launchUrl}?dashboardItemId=${item.id}`;\n\n    if (\n        itemFilters &&\n        itemFilters[FILTER_ORG_UNIT] &&\n        itemFilters[FILTER_ORG_UNIT].length\n    ) {\n        const ouIds = itemFilters[FILTER_ORG_UNIT].map(\n            ouPath => ouPath.split('/').slice(-1)[0]\n        );\n\n        iframeSrc += `&userOrgUnit=${ouIds.join(',')}`;\n    }\n\n    return iframeSrc;\n};\n\nconst AppItem = ({ item, itemFilters }, context) => {\n    let appDetails;\n\n    const appKey = item.appKey;\n\n    if (appKey) {\n        appDetails = context.d2.system.installedApps.find(\n            app => app.key === appKey\n        );\n    }\n\n    return appDetails && appDetails.name && appDetails.launchUrl ? (\n        <Fragment>\n            <ItemHeader title={appDetails.name} />\n            <Line />\n            <iframe\n                title={appDetails.name}\n                src={getIframeSrc(appDetails, item, itemFilters)}\n                className=\"dashboard-item-content\"\n                style={{ border: 'none' }}\n            />\n        </Fragment>\n    ) : (\n        <Fragment>\n            <ItemHeader title={`${appKey} app not found`} />\n            <Line />\n            <div\n                className=\"dashboard-item-content\"\n                style={{\n                    display: 'flex',\n                    justifyContent: 'center',\n                    alignItems: 'center',\n                    height: '90%',\n                }}\n            >\n                <NotInterestedIcon\n                    color=\"disabled\"\n                    disabled\n                    style={{ width: 100, height: 100, align: 'center' }}\n                />\n            </div>\n        </Fragment>\n    );\n};\n\nAppItem.contextTypes = {\n    d2: PropTypes.object,\n};\n\nconst mapStateToProps = state => ({\n    itemFilters: sGetItemFiltersRoot(state),\n});\n\nexport default connect(mapStateToProps)(AppItem);\n","import React, { Fragment } from 'react';\nimport i18n from '@dhis2/d2-i18n';\n\nimport { colors } from '../../../modules/colors';\nimport ItemHeader from '../ItemHeader';\n\nconst style = {\n    margin: '21px 28px',\n    fontSize: '14px',\n    lineHeight: '18px',\n    color: colors.charcoalGrey,\n};\n\nconst SpacerItem = () => {\n    return (\n        <Fragment>\n            <ItemHeader title={i18n.t('Spacer')} />\n            <p style={style}>\n                {i18n.t(\n                    'Use a spacer to create empty vertical space between other dashboard items.'\n                )}\n            </p>\n        </Fragment>\n    );\n};\n\nexport default SpacerItem;\n","import React from 'react';\n\nimport VisualizationItem from './VisualizationItem/Item';\nimport MessagesItem from './MessagesItem/Item';\nimport NotSupportedItem from './NotSupportedItem/Item';\nimport ListItem from './ListItem/Item';\nimport TextItem from './TextItem/Item';\nimport AppItem from './AppItem/Item';\nimport SpacerItem from './SpacerItem/Item';\nimport {\n    APP,\n    REPORT_TABLE,\n    CHART,\n    MAP,\n    EVENT_CHART,\n    EVENT_REPORT,\n    MESSAGES,\n    REPORTS,\n    RESOURCES,\n    USERS,\n    TEXT,\n    SPACER,\n} from '../../modules/itemTypes';\nimport { DEFAULT_STATE_ITEM_FILTERS } from '../../reducers/itemFilters';\n\nconst getGridItem = type => {\n    switch (type) {\n        case REPORT_TABLE:\n        case CHART:\n        case MAP:\n        case EVENT_CHART:\n        case EVENT_REPORT:\n            return VisualizationItem;\n        case MESSAGES:\n            return MessagesItem;\n        case REPORTS:\n        case RESOURCES:\n        case USERS:\n            return ListItem;\n        case TEXT:\n            return TextItem;\n        case SPACER:\n            return SpacerItem;\n        case APP:\n            return AppItem;\n        default:\n            return NotSupportedItem;\n    }\n};\n\nexport const Item = props => {\n    const GridItem = getGridItem(props.item.type);\n\n    return (\n        <GridItem\n            item={props.item}\n            editMode={props.editMode}\n            itemFilters={\n                props.editMode ? DEFAULT_STATE_ITEM_FILTERS : props.itemFilters\n            }\n            onToggleItemExpanded={props.onToggleItemExpanded}\n        />\n    );\n};\n","import React from 'react';\nimport ItemHeaderButton from '../Item/ItemHeaderButton';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport { colors } from '../../modules/colors';\n\nconst style = {\n    button: {\n        position: 'absolute',\n        top: '7px',\n        right: '7px',\n        zIndex: '1000',\n    },\n    icon: {\n        fill: colors.red,\n    },\n};\n\nconst DeleteItemHeaderButton = ({ onClick }) => (\n    <ItemHeaderButton onClick={onClick} style={style.button}>\n        <DeleteIcon style={style.icon} />\n    </ItemHeaderButton>\n);\n\nexport default DeleteItemHeaderButton;\n","import React from 'react';\nimport LoadingMask from '@dhis2/d2-ui-core/loading-mask/LoadingMask.component';\n\nconst styles = {\n    modal: {\n        position: 'absolute',\n        top: 0,\n        left: 0,\n        width: '100%',\n        height: '100%',\n        zIndex: 999999998,\n        pointerEvents: 'none',\n    },\n    dark: {\n        backgroundColor: '#000000',\n        opacity: 0.2,\n        zIndex: 999999999,\n    },\n};\n\nconst ModalLoadingMask = ({ isLoading }) => {\n    if (!isLoading) {\n        return null;\n    }\n\n    return (\n        <div className=\"loading-mask-wrapper\">\n            <div style={styles.modal}>\n                <LoadingMask />\n            </div>\n            <div\n                style={{\n                    ...styles.modal,\n                    ...styles.dark,\n                }}\n            />\n        </div>\n    );\n};\n\nexport default ModalLoadingMask;\n","import React from 'react';\nimport { colors } from '../modules/colors';\n\nexport const NoContentMessage = ({ text }) => (\n    <div\n        style={{\n            padding: '50px 10px',\n            textAlign: 'center',\n            fontSize: '15px',\n            fontWeight: 500,\n            color: colors.charcoalGrey,\n        }}\n    >\n        {text}\n    </div>\n);\n\nexport default NoContentMessage;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport debounce from 'lodash/debounce';\n\nconst defaultDebounceMs = 100;\nconst defaultBufferFactor = 0.25;\n\nclass ProgressiveLoadingContainer extends Component {\n    static propTypes = {\n        children: PropTypes.node.isRequired,\n        debounceMs: PropTypes.number,\n        bufferFactor: PropTypes.number,\n    };\n    static defaultProps = {\n        debounceMs: defaultDebounceMs,\n        bufferFactor: defaultBufferFactor,\n    };\n\n    state = {\n        shouldLoad: false,\n    };\n    containerRef = null;\n    shouldLoadHandler = null;\n\n    checkShouldLoad() {\n        const bufferPx = this.props.bufferFactor * window.innerHeight;\n\n        if (!this.containerRef) {\n            return;\n        }\n\n        const rect = this.containerRef.getBoundingClientRect();\n        if (\n            rect.bottom > -bufferPx &&\n            rect.top < window.innerHeight + bufferPx\n        ) {\n            this.setState({\n                shouldLoad: true,\n            });\n\n            this.removeHandler();\n        }\n    }\n\n    registerHandler() {\n        this.shouldLoadHandler = debounce(\n            () => this.checkShouldLoad(),\n            this.props.debounceMs\n        );\n\n        window.addEventListener('scroll', this.shouldLoadHandler);\n    }\n    removeHandler() {\n        window.removeEventListener('scroll', this.shouldLoadHandler);\n    }\n\n    componentDidMount() {\n        this.registerHandler();\n        this.checkShouldLoad();\n    }\n\n    componentWillUnmount() {\n        this.removeHandler();\n    }\n\n    render() {\n        const { children, debounceMs, bufferFactor, ...props } = this.props;\n        const { shouldLoad } = this.state;\n\n        return (\n            <div ref={ref => (this.containerRef = ref)} {...props}>\n                {shouldLoad && children}\n            </div>\n        );\n    }\n}\n\nexport default ProgressiveLoadingContainer;\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport i18n from '@dhis2/d2-i18n';\nimport ReactGridLayout from 'react-grid-layout';\n\nimport {\n    acUpdateDashboardLayout,\n    acRemoveDashboardItem,\n} from '../../actions/editDashboard';\nimport { Item } from '../Item/Item';\nimport { resize as pluginResize } from '../Item/VisualizationItem/plugin';\nimport { isPluginType } from '../../modules/itemTypes';\nimport {\n    GRID_ROW_HEIGHT,\n    GRID_COMPACT_TYPE,\n    ITEM_MIN_HEIGHT,\n    MARGIN,\n    getGridColumns,\n    hasShape,\n    onItemResize,\n} from './gridUtil';\nimport { orArray } from '../../modules/util';\nimport DeleteItemButton from './DeleteItemButton';\nimport ModalLoadingMask from '../../widgets/ModalLoadingMask';\nimport NoContentMessage from '../../widgets/NoContentMessage';\n\nimport 'react-grid-layout/css/styles.css';\nimport 'react-resizable/css/styles.css';\n\nimport './ItemGrid.css';\nimport { sGetSelectedId, sGetSelectedIsLoading } from '../../reducers/selected';\nimport {\n    sGetEditDashboardRoot,\n    sGetEditDashboardItems,\n} from '../../reducers/editDashboard';\nimport {\n    sGetDashboardById,\n    sGetDashboardItems,\n} from '../../reducers/dashboards';\nimport ProgressiveLoadingContainer from '../Item/ProgressiveLoadingContainer';\n\n// Component\n\nconst EXPANDED_HEIGHT = 17;\n\nexport class ItemGrid extends Component {\n    state = {\n        expandedItems: {},\n    };\n\n    NO_ITEMS_MESSAGE = i18n.t('There are no items on this dashboard');\n\n    onToggleItemExpanded = clickedId => {\n        const isExpanded =\n            typeof this.state.expandedItems[clickedId] === 'boolean'\n                ? this.state.expandedItems[clickedId]\n                : false;\n\n        const expandedItems = { ...this.state.expandedItems };\n        expandedItems[clickedId] = !isExpanded;\n        this.setState({ expandedItems });\n    };\n\n    onRemoveItem = clickedId => {\n        this.props.acRemoveDashboardItem(clickedId);\n    };\n\n    componentWillReceiveProps(nextProps) {\n        if (nextProps.edit) {\n            this.setState({ expandedItems: {} });\n        }\n    }\n\n    onLayoutChange = newLayout => {\n        if (this.props.edit) {\n            this.props.acUpdateDashboardLayout(newLayout);\n        }\n    };\n\n    onResizeStop = (layout, oldItem, newItem) => {\n        onItemResize(newItem.i);\n\n        const dashboardItem = this.props.dashboardItems.find(\n            item => item.id === newItem.i\n        );\n\n        // call resize on the item component if it's a plugin type\n        if (dashboardItem && isPluginType(dashboardItem)) {\n            pluginResize(dashboardItem);\n        }\n    };\n\n    onRemoveItemWrapper = id => () => this.onRemoveItem(id);\n\n    render() {\n        const { edit, isLoading, dashboardItems } = this.props;\n\n        if (!isLoading && !dashboardItems.length) {\n            return <NoContentMessage text={this.NO_ITEMS_MESSAGE} />;\n        }\n\n        const items = dashboardItems.map((item, index) => {\n            const expandedItem = this.state.expandedItems[item.id];\n            let hProp = { h: item.h };\n\n            if (expandedItem && expandedItem === true) {\n                hProp.h = item.h + EXPANDED_HEIGHT;\n            }\n\n            return Object.assign({}, item, hProp, {\n                i: item.id,\n                minH: ITEM_MIN_HEIGHT,\n            });\n        });\n\n        return (\n            <div className=\"grid-wrapper\">\n                <ModalLoadingMask isLoading={isLoading} />\n                <ReactGridLayout\n                    onLayoutChange={this.onLayoutChange}\n                    onResizeStop={this.onResizeStop}\n                    className=\"layout\"\n                    layout={items}\n                    margin={MARGIN}\n                    cols={getGridColumns()}\n                    rowHeight={GRID_ROW_HEIGHT}\n                    width={window.innerWidth}\n                    compactType={GRID_COMPACT_TYPE}\n                    isDraggable={edit}\n                    isResizable={edit}\n                    draggableCancel=\"input,textarea\"\n                >\n                    {items.map(item => {\n                        const itemClassNames = [\n                            item.type,\n                            edit ? 'edit' : 'view',\n                        ].join(' ');\n\n                        return (\n                            <ProgressiveLoadingContainer\n                                key={item.i}\n                                className={itemClassNames}\n                            >\n                                {edit ? (\n                                    <DeleteItemButton\n                                        onClick={this.onRemoveItemWrapper(\n                                            item.id\n                                        )}\n                                    />\n                                ) : null}\n                                <Item\n                                    item={item}\n                                    editMode={edit}\n                                    onToggleItemExpanded={\n                                        this.onToggleItemExpanded\n                                    }\n                                />\n                            </ProgressiveLoadingContainer>\n                        );\n                    })}\n                </ReactGridLayout>\n            </div>\n        );\n    }\n}\n\nItemGrid.propTypes = {\n    dashboardItems: PropTypes.array,\n};\n\nItemGrid.defaultProps = {\n    dashboardItems: [],\n};\n\n// Container\n\nconst mapStateToProps = (state, ownProps) => {\n    const selectedDashboard = ownProps.edit\n        ? sGetEditDashboardRoot(state)\n        : sGetDashboardById(state, sGetSelectedId(state));\n\n    const dashboardItems = ownProps.edit\n        ? sGetEditDashboardItems(state)\n        : sGetDashboardItems(state);\n\n    return {\n        isLoading: sGetSelectedIsLoading(state) || !selectedDashboard,\n        dashboardItems,\n    };\n};\n\nconst mapDispatchToProps = {\n    acUpdateDashboardLayout,\n    acRemoveDashboardItem,\n};\n\nconst mergeProps = (stateProps, dispatchProps, ownProps) => {\n    const validItems = orArray(stateProps.dashboardItems).filter(hasShape);\n\n    return {\n        ...dispatchProps,\n        edit: ownProps.edit,\n        isLoading: stateProps.isLoading,\n        dashboardItems: validItems,\n        onItemResize,\n    };\n};\n\nexport default connect(\n    mapStateToProps,\n    mapDispatchToProps,\n    mergeProps\n)(ItemGrid);\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nimport i18n from '@dhis2/d2-i18n';\n\nimport { colors } from '../../modules/colors';\n\nconst styles = {\n    badgeContainer: {\n        margin: '2px',\n        padding: '0 16px',\n        borderRadius: '4px',\n        color: colors.white,\n        backgroundColor: '#212934',\n        height: 36,\n        display: 'flex',\n        alignItems: 'center',\n    },\n    badge: {\n        fontSize: '13px',\n        cursor: 'pointer',\n        whiteSpace: 'nowrap',\n    },\n    badgeRemove: {\n        fontSize: '12px',\n        textDecoration: 'underline',\n        marginLeft: '24px',\n        cursor: 'pointer',\n    },\n};\n\nclass FilterBadge extends Component {\n    onClick = id => () => this.props.onClick(id);\n    onRemove = id => () => this.props.onRemove(id);\n\n    render() {\n        const { data } = this.props;\n\n        return (\n            <div style={styles.badgeContainer}>\n                <span style={styles.badge} onClick={this.onClick(data.id)}>\n                    {`${data.name}: ${\n                        data.values.length > 1\n                            ? i18n.t('{{count}} selected', {\n                                  count: data.values.length,\n                              })\n                            : data.values[0].name\n                    }`}\n                </span>\n                <span\n                    style={styles.badgeRemove}\n                    onClick={this.onRemove(data.id)}\n                >\n                    {i18n.t('Remove')}\n                </span>\n            </div>\n        );\n    }\n}\n\nFilterBadge.propTypes = {\n    data: PropTypes.object.isRequired,\n    onClick: PropTypes.func.isRequired,\n    onRemove: PropTypes.func.isRequired,\n};\n\nFilterBadge.defaultProps = {\n    onClick: Function.prototype,\n    onRemove: Function.prototype,\n};\n\nexport default FilterBadge;\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { createSelector } from 'reselect';\nimport { withStyles } from '@material-ui/core/styles';\n\nimport { sGetDimensions } from '../../reducers/dimensions';\nimport { sGetItemFiltersRoot } from '../../reducers/itemFilters';\nimport { sGetControlBarUserRows } from '../../reducers/controlBar';\nimport { getTopOffset } from '../ControlBar/controlBarDimensions';\nimport { acRemoveItemFilter } from '../../actions/itemFilters';\nimport { acRemoveEditItemFilter } from '../../actions/editItemFilters';\nimport { acSetActiveModalDimension } from '../../actions/activeModalDimension';\n\nimport FilterBadge from './FilterBadge';\n\nconst styles = {\n    bar: {\n        position: 'sticky',\n        zIndex: 7,\n        padding: '8px 0',\n        display: 'flex',\n        justifyContent: 'center',\n        flexWrap: 'wrap',\n    },\n};\n\nexport class FilterBar extends Component {\n    onBadgeRemove = id => {\n        this.props.removeItemFilter(id);\n        this.props.removeEditItemFilter(id);\n    };\n\n    onBadgeClick = id => {\n        this.props.setActiveModalDimension({\n            id,\n            name: this.props.filters.find(item => item.id === id).name,\n        });\n    };\n\n    render() {\n        const { filters, userRows, classes } = this.props;\n        const top = getTopOffset(userRows) + 10;\n\n        return filters.length ? (\n            <div className={classes.bar} style={{ top }}>\n                {filters.map(filter => (\n                    <FilterBadge\n                        key={filter.id}\n                        data={filter}\n                        onClick={this.onBadgeClick}\n                        onRemove={this.onBadgeRemove}\n                    />\n                ))}\n            </div>\n        ) : null;\n    }\n}\n\nFilterBar.propTypes = {\n    filters: PropTypes.array.isRequired,\n    removeItemFilter: PropTypes.func.isRequired,\n    removeEditItemFilter: PropTypes.func.isRequired,\n};\n\nFilterBar.defaultProps = {\n    filters: [],\n    removeItemFIlter: Function.prototype,\n    removeEditItemFilter: Function.prototype,\n};\n\n// simplify the filters structure to:\n// [{ id: 'pe', name: 'Period', values: [{ id: 2019: name: '2019' }, {id: 'LAST_MONTH', name: 'Last month' }]}, ...]\nconst filtersSelector = createSelector(\n    [sGetItemFiltersRoot, sGetDimensions],\n    (filters, dimensions) =>\n        Object.keys(filters).reduce((arr, id) => {\n            arr.push({\n                id: id,\n                name: dimensions[id].name,\n                values: filters[id].map(value => ({\n                    id: value.id,\n                    name: value.displayName || value.name,\n                })),\n            });\n\n            return arr;\n        }, [])\n);\n\nconst mapStateToProps = state => ({\n    filters: filtersSelector(state),\n    userRows: sGetControlBarUserRows(state),\n});\n\nexport default connect(\n    mapStateToProps,\n    {\n        setActiveModalDimension: acSetActiveModalDimension,\n        removeItemFilter: acRemoveItemFilter,\n        removeEditItemFilter: acRemoveEditItemFilter,\n    }\n)(withStyles(styles)(FilterBar));\n","import React, { Fragment } from 'react';\nimport TitleBar from '../TitleBar/TitleBar';\nimport ItemGrid from '../ItemGrid/ItemGrid';\nimport FilterBar from '../FilterBar/FilterBar';\n\nexport const DashboardContent = props => (\n    <Fragment>\n        <TitleBar edit={props.editMode} />\n        <FilterBar />\n        <ItemGrid edit={props.editMode} />\n    </Fragment>\n);\n\nexport default DashboardContent;\n","import React, { Fragment } from 'react';\nimport { connect } from 'react-redux';\nimport isEmpty from 'lodash/isEmpty';\nimport i18n from '@dhis2/d2-i18n';\n\nimport {\n    sGetAllDashboards,\n    sDashboardsIsFetching,\n} from '../../reducers/dashboards';\nimport { sGetSelectedId } from '../../reducers/selected';\nimport DashboardsBar from '../ControlBar/DashboardsBar';\nimport DashboardVerticalOffset from './DashboardVerticalOffset';\nimport DashboardContent from './DashboardContent';\nimport NoContentMessage from '../../widgets/NoContentMessage';\n\nexport const Content = ({ hasDashboardContent, dashboardsIsEmpty }) => {\n    const msg = dashboardsIsEmpty\n        ? i18n.t(\n              'No dashboards found. Use the + button to create a new dashboard.'\n          )\n        : i18n.t('Requested dashboard not found');\n\n    return hasDashboardContent ? (\n        <DashboardContent editMode={false} />\n    ) : (\n        <NoContentMessage text={msg} />\n    );\n};\n\nexport const ViewDashboard = ({ id, dashboardsIsEmpty, dashboardsLoaded }) => {\n    const hasDashboardContent = id && !dashboardsIsEmpty;\n    const contentNotReady = !dashboardsLoaded || id === null;\n\n    return (\n        <Fragment>\n            <DashboardsBar />\n            <DashboardVerticalOffset />\n            <div className=\"dashboard-wrapper\">\n                {contentNotReady ? null : (\n                    <Content\n                        hasDashboardContent={hasDashboardContent}\n                        dashboardsIsEmpty={dashboardsIsEmpty}\n                    />\n                )}\n            </div>\n        </Fragment>\n    );\n};\n\nconst mapStateToProps = state => {\n    const dashboards = sGetAllDashboards(state);\n\n    return {\n        id: sGetSelectedId(state),\n        dashboardsIsEmpty: isEmpty(dashboards),\n        dashboardsLoaded: !sDashboardsIsFetching(state),\n    };\n};\n\nexport default connect(mapStateToProps)(ViewDashboard);\n","import React from 'react';\nimport i18n from '@dhis2/d2-i18n';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport { Button } from '@dhis2/ui-core';\n\nexport const ConfirmDeleteDialog = ({\n    dashboardName,\n    onDeleteConfirmed,\n    onContinueEditing,\n    open,\n}) => {\n    const actions = [\n        <Button key=\"cancel\" secondary onClick={onContinueEditing}>\n            {i18n.t('Cancel')}\n        </Button>,\n        <Button key=\"delete\" destructive onClick={onDeleteConfirmed}>\n            {i18n.t('Delete')}\n        </Button>,\n    ];\n\n    return (\n        <Dialog open={open} onClose={onContinueEditing}>\n            <DialogTitle style={{ fontSize: '1.25rem', fontWeight: '450' }}>\n                {i18n.t('Delete dashboard')}\n            </DialogTitle>\n            <DialogContent>\n                <DialogContentText style={{ fontSize: '0.875rem' }}>\n                    {i18n.t(\n                        'Deleting dashboard \"{{ dashboardName }}\" will remove it for all users. This action cannot be undone. Are you sure you want to permanently delete this dashboard?',\n                        { dashboardName }\n                    )}\n                </DialogContentText>\n            </DialogContent>\n            <DialogActions>{actions}</DialogActions>\n        </Dialog>\n    );\n};\n\nexport default ConfirmDeleteDialog;\n","import React, { Component, Fragment } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { Redirect } from 'react-router-dom';\nimport i18n from '@dhis2/d2-i18n';\nimport ControlBar from '@dhis2/d2-ui-core/control-bar/ControlBar';\nimport TranslationDialog from '@dhis2/d2-ui-translation-dialog';\nimport { Button } from '@dhis2/ui-core';\n\nimport ConfirmDeleteDialog from './ConfirmDeleteDialog';\nimport {\n    tSaveDashboard,\n    acClearEditDashboard,\n} from '../../actions/editDashboard';\nimport {\n    tDeleteDashboard,\n    acSetDashboardDisplayName,\n} from '../../actions/dashboards';\nimport {\n    sGetEditDashboardRoot,\n    sGetIsNewDashboard,\n} from '../../reducers/editDashboard';\nimport {\n    CONTROL_BAR_ROW_HEIGHT,\n    MIN_ROW_COUNT,\n    getControlBarHeight,\n} from './controlBarDimensions';\nimport { apiFetchDashboard } from '../../api/dashboards';\n\nimport './ControlBar.css';\n\nconst buttonBarStyle = {\n    height: CONTROL_BAR_ROW_HEIGHT,\n    paddingTop: '15px',\n    marginLeft: '15px',\n    marginRight: '15px',\n};\n\nexport class EditBar extends Component {\n    state = {\n        translationDialogIsOpen: false,\n        dashboardModel: undefined,\n        confirmDeleteDialogOpen: false,\n        redirectUrl: undefined,\n    };\n\n    onConfirmDelete = () => {\n        this.setState({ confirmDeleteDialogOpen: true });\n    };\n\n    onSave = () => {\n        this.props.onSave().then(newId => {\n            this.setState({ redirectUrl: `/${newId}` });\n        });\n    };\n\n    onDiscard = () => {\n        this.props.onDiscardChanges();\n        const redirectUrl = this.props.dashboardId\n            ? `/${this.props.dashboardId}`\n            : '/';\n        this.setState({ redirectUrl });\n    };\n\n    onContinueEditing = () => {\n        this.setState({ confirmDeleteDialogOpen: false });\n    };\n\n    onDeleteConfirmed = () => {\n        this.setState({ confirmDeleteDialogOpen: false });\n        this.props.onDelete(this.props.dashboardId).then(() => {\n            this.setState({ redirectUrl: '/' });\n        });\n    };\n\n    onTranslationsSaved = async translations => {\n        if (translations && translations.length) {\n            const dbLocale = await this.context.d2.currentUser.userSettings.get(\n                'keyDbLocale'\n            );\n\n            const translation = translations.find(\n                t => t.locale === dbLocale && t.property === 'NAME'\n            );\n\n            if (translation && translation.value) {\n                this.props.onTranslate(\n                    this.props.dashboardId,\n                    translation.value\n                );\n            }\n        }\n    };\n\n    fetchDashboardModel = () => {\n        if (this.props.dashboardId && !this.state.dashboardModel) {\n            apiFetchDashboard(this.props.dashboardId).then(dashboardModel =>\n                this.setState({ dashboardModel })\n            );\n        }\n    };\n\n    componentDidMount() {\n        this.fetchDashboardModel();\n    }\n\n    componentDidUpdate() {\n        this.fetchDashboardModel();\n    }\n\n    toggleTranslationDialog = () => {\n        this.setState({\n            translationDialogIsOpen: !this.state.translationDialogIsOpen,\n        });\n    };\n\n    confirmDeleteDialog = () =>\n        this.props.deleteAccess && this.props.dashboardId ? (\n            <ConfirmDeleteDialog\n                dashboardName={this.props.dashboardName}\n                onDeleteConfirmed={this.onDeleteConfirmed}\n                onContinueEditing={this.onContinueEditing}\n                open={this.state.confirmDeleteDialogOpen}\n            />\n        ) : null;\n\n    translationDialog = () =>\n        this.state.dashboardModel && this.state.dashboardModel.id ? (\n            <TranslationDialog\n                className=\"translation-dialog\"\n                d2={this.context.d2}\n                open={this.state.translationDialogIsOpen}\n                onRequestClose={this.toggleTranslationDialog}\n                objectToTranslate={this.state.dashboardModel}\n                fieldsToTranslate={['name', 'description']}\n                // TODO handle messages in snackbar\n                onTranslationSaved={this.onTranslationsSaved}\n                onTranslationError={err =>\n                    console.log('translation update error', err)\n                }\n            />\n        ) : null;\n\n    render() {\n        if (this.state.redirectUrl) {\n            return <Redirect to={this.state.redirectUrl} />;\n        }\n\n        const { dashboardId, deleteAccess, updateAccess } = this.props;\n        const controlBarHeight = getControlBarHeight(MIN_ROW_COUNT, false);\n\n        const discardBtnText = updateAccess\n            ? i18n.t('Exit without saving')\n            : i18n.t('Go to dashboards');\n\n        return (\n            <Fragment>\n                <ControlBar\n                    height={controlBarHeight}\n                    editMode={true}\n                    expandable={false}\n                >\n                    <div style={buttonBarStyle}>\n                        {updateAccess ? (\n                            <div className=\"left-controls\">\n                                <span style={{ marginRight: '15px' }}>\n                                    <Button primary onClick={this.onSave}>\n                                        {i18n.t('Save changes')}\n                                    </Button>\n                                </span>\n\n                                {dashboardId ? (\n                                    <span style={{ marginRight: '15px' }}>\n                                        <Button\n                                            onClick={\n                                                this.toggleTranslationDialog\n                                            }\n                                        >\n                                            {i18n.t('Translate')}\n                                        </Button>\n                                    </span>\n                                ) : null}\n                                {dashboardId && deleteAccess ? (\n                                    <Button onClick={this.onConfirmDelete}>\n                                        {i18n.t('Delete')}\n                                    </Button>\n                                ) : null}\n                            </div>\n                        ) : null}\n\n                        <div className=\"right-controls\">\n                            <Button secondary onClick={this.onDiscard}>\n                                {discardBtnText}\n                            </Button>\n                        </div>\n                    </div>\n                </ControlBar>\n                {this.translationDialog()}\n                {this.confirmDeleteDialog()}\n            </Fragment>\n        );\n    }\n}\n\nEditBar.contextTypes = {\n    d2: PropTypes.object,\n};\n\nconst mapStateToProps = state => {\n    const dashboard = sGetEditDashboardRoot(state);\n\n    let deleteAccess;\n    let updateAccess;\n    if (sGetIsNewDashboard(state)) {\n        deleteAccess = true;\n        updateAccess = true;\n    } else {\n        updateAccess = dashboard.access ? dashboard.access.update : false;\n        deleteAccess = dashboard.access ? dashboard.access.delete : false;\n    }\n\n    return {\n        dashboardId: dashboard.id,\n        dashboardName: dashboard.name,\n        deleteAccess,\n        updateAccess,\n    };\n};\n\nconst mapDispatchToProps = dispatch => ({\n    onSave: () => dispatch(tSaveDashboard()).then(id => id),\n    onDelete: id => dispatch(tDeleteDashboard(id)),\n    onDiscardChanges: () => dispatch(acClearEditDashboard()),\n    onTranslate: (id, value) => dispatch(acSetDashboardDisplayName(id, value)),\n});\n\nexport default connect(\n    mapStateToProps,\n    mapDispatchToProps\n)(EditBar);\n","import React, { Fragment, Component } from 'react';\nimport { connect } from 'react-redux';\nimport i18n from '@dhis2/d2-i18n';\n\nimport { acSetEditDashboard } from '../../actions/editDashboard';\nimport { sGetSelectedId } from '../../reducers/selected';\nimport {\n    sGetDashboardById,\n    sGetDashboardItems,\n    sDashboardsIsFetching,\n} from '../../reducers/dashboards';\nimport DashboardVerticalOffset from './DashboardVerticalOffset';\nimport DashboardContent from './DashboardContent';\nimport EditBar from '../ControlBar/EditBar';\nimport NoContentMessage from '../../widgets/NoContentMessage';\n\nexport const Content = ({ updateAccess }) => {\n    return updateAccess ? (\n        <DashboardContent editMode={true} />\n    ) : (\n        <NoContentMessage text={i18n.t('No access')} />\n    );\n};\nexport class EditDashboard extends Component {\n    state = {\n        initialized: false,\n    };\n\n    initEditDashboard = () => {\n        if (this.props.dashboard) {\n            this.setState({ initialized: true });\n            this.props.setEditDashboard(this.props.dashboard, this.props.items);\n        }\n    };\n\n    componentDidMount() {\n        this.initEditDashboard();\n    }\n\n    componentDidUpdate() {\n        if (!this.state.initialized) {\n            this.initEditDashboard();\n        }\n    }\n\n    getDashboardContent = () => {\n        const contentNotReady =\n            !this.props.dashboardsLoaded || this.props.id === null;\n\n        return (\n            <div className=\"dashboard-wrapper\">\n                {contentNotReady ? null : (\n                    <Content updateAccess={this.props.updateAccess} />\n                )}\n            </div>\n        );\n    };\n\n    render() {\n        return (\n            <Fragment>\n                <EditBar />\n                <DashboardVerticalOffset editMode={true} />\n                {this.getDashboardContent()}\n            </Fragment>\n        );\n    }\n}\n\nconst mapStateToProps = state => {\n    const id = sGetSelectedId(state);\n    const dashboard = id ? sGetDashboardById(state, id) : null;\n\n    const updateAccess =\n        dashboard && dashboard.access ? dashboard.access.update : false;\n\n    return {\n        dashboard,\n        id,\n        updateAccess,\n        items: sGetDashboardItems(state),\n        dashboardsLoaded: !sDashboardsIsFetching(state),\n    };\n};\n\nexport default connect(\n    mapStateToProps,\n    {\n        setEditDashboard: acSetEditDashboard,\n    }\n)(EditDashboard);\n","import React, { Component, Fragment } from 'react';\nimport { connect } from 'react-redux';\n\nimport { acSetEditNewDashboard } from '../../actions/editDashboard';\nimport DashboardVerticalOffset from './DashboardVerticalOffset';\nimport EditBar from '../ControlBar/EditBar';\nimport DashboardContent from './DashboardContent';\n\nclass NewDashboard extends Component {\n    componentDidMount() {\n        this.props.setNewDashboard();\n    }\n\n    render() {\n        return (\n            <Fragment>\n                <EditBar />\n                <DashboardVerticalOffset editMode={true} />\n                <div className=\"dashboard-wrapper\">\n                    <DashboardContent editMode={true} />\n                </div>\n            </Fragment>\n        );\n    }\n}\n\nexport default connect(\n    null,\n    {\n        setNewDashboard: acSetEditNewDashboard,\n    }\n)(NewDashboard);\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\n\nimport { tSelectDashboard } from '../../actions/dashboards';\nimport { sDashboardsIsFetching } from '../../reducers/dashboards';\nimport { EDIT, NEW } from './dashboardModes';\nimport ViewDashboard from './ViewDashboard';\nimport EditDashboard from './EditDashboard';\nimport NewDashboard from './NewDashboard';\n\nclass Dashboard extends Component {\n    setDashboard = () => {\n        if (this.props.dashboardsLoaded) {\n            const id = this.props.match.params.dashboardId || null;\n\n            this.props.selectDashboard(id);\n\n            this.scrollToTop();\n        }\n    };\n\n    scrollToTop = () => {\n        window.scrollTo(0, 0);\n    };\n\n    componentDidMount() {\n        this.setDashboard();\n    }\n\n    componentDidUpdate() {\n        this.setDashboard();\n    }\n\n    render() {\n        switch (this.props.mode) {\n            case EDIT:\n                return <EditDashboard />;\n            case NEW:\n                return <NewDashboard />;\n            default:\n                return <ViewDashboard />;\n        }\n    }\n}\n\nconst mapStateToProps = state => {\n    return { dashboardsLoaded: !sDashboardsIsFetching(state) };\n};\n\nexport default connect(\n    mapStateToProps,\n    {\n        selectDashboard: tSelectDashboard,\n    }\n)(Dashboard);\n","export const EDIT = 'edit';\nexport const NEW = 'new';\nexport const VIEW = 'view';\n","import React, { Component } from 'react';\nimport { HashRouter as Router, Route, Switch } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport i18n from '@dhis2/d2-i18n';\nimport HeaderBar from '@dhis2/ui/widgets/HeaderBar';\n\nimport { EDIT, VIEW, NEW } from './Dashboard/dashboardModes';\nimport { acReceivedUser } from '../actions/user';\nimport { tFetchDashboards } from '../actions/dashboards';\nimport { tSetControlBarRows } from '../actions/controlBar';\nimport { tSetDimensions } from '../actions/dimensions';\nimport Dashboard from './Dashboard/Dashboard';\nimport SnackbarMessage from './SnackbarMessage/SnackbarMessage';\n\nimport 'typeface-roboto';\nimport './App.css';\n\nexport class App extends Component {\n    componentDidMount() {\n        this.props.setCurrentUser(this.props.d2.currentUser);\n        this.props.fetchDashboards();\n        this.props.setControlBarRows();\n        this.props.setDimensions(this.props.d2);\n    }\n\n    getChildContext() {\n        return { baseUrl: this.props.baseUrl, i18n, d2: this.props.d2 };\n    }\n\n    render() {\n        return (\n            <div className=\"app-wrapper\">\n                <div className=\"dashboard-header-bar\">\n                    <HeaderBar appName={i18n.t('Dashboard')} />\n                </div>\n                <Router>\n                    <Switch>\n                        <Route\n                            exact\n                            path=\"/\"\n                            render={props => (\n                                <Dashboard {...props} mode={VIEW} />\n                            )}\n                        />\n                        <Route\n                            exact\n                            path=\"/new\"\n                            render={props => (\n                                <Dashboard {...props} mode={NEW} />\n                            )}\n                        />\n                        <Route\n                            exact\n                            path=\"/:dashboardId\"\n                            render={props => (\n                                <Dashboard {...props} mode={VIEW} />\n                            )}\n                        />\n                        <Route\n                            exact\n                            path=\"/:dashboardId/edit\"\n                            render={props => (\n                                <Dashboard {...props} mode={EDIT} />\n                            )}\n                        />\n                    </Switch>\n                </Router>\n                <SnackbarMessage />\n            </div>\n        );\n    }\n}\n\nApp.childContextTypes = {\n    baseUrl: PropTypes.string,\n    i18n: PropTypes.object,\n    d2: PropTypes.object,\n};\n\nconst mapDispatchToProps = dispatch => {\n    return {\n        setCurrentUser: currentUser => dispatch(acReceivedUser(currentUser)),\n        fetchDashboards: () => dispatch(tFetchDashboards()),\n        setControlBarRows: () => dispatch(tSetControlBarRows()),\n        setDimensions: d2 => dispatch(tSetDimensions(d2)),\n    };\n};\n\nexport default connect(\n    null,\n    mapDispatchToProps\n)(App);\n","import { RECEIVED_USER } from '../reducers/user';\n\nexport const acReceivedUser = value => ({\n    type: RECEIVED_USER,\n    value,\n});\n","//------------------------------------------------------------------------------\n// <auto-generated>\n// This code was generated by d2-i18n-generate.\n//\n// Changes to this file may cause incorrect behavior and will be lost if\n// the code is regenerated.\n// </auto-generated>\n//------------------------------------------------------------------------------\nimport i18n from '@dhis2/d2-i18n';\nimport moment from 'moment';\nimport 'moment/locale/lo';\nimport 'moment/locale/sv';\nimport 'moment/locale/ur';\nimport 'moment/locale/vi';\n\nimport enTranslations from './en/translations.json';\nimport loTranslations from './lo/translations.json';\nimport svTranslations from './sv/translations.json';\nimport urTranslations from './ur/translations.json';\nimport viTranslations from './vi/translations.json';\n\nconst namespace = 'dashboards-app';\nmoment.locale('en');\n\ni18n.addResources('en', namespace, enTranslations);\ni18n.addResources('lo', namespace, loTranslations);\ni18n.addResources('sv', namespace, svTranslations);\ni18n.addResources('ur', namespace, urTranslations);\ni18n.addResources('vi', namespace, viTranslations);\n\ni18n.setDefaultNamespace(namespace);\ni18n.changeLanguage('en');\n\nexport default i18n;\n","/** @module reducers/selected */\nimport { validateReducer } from '../modules/util';\n\nexport const SET_STYLE = 'SET_STYLE';\n\nexport const DEFAULT_STATE_STYLE = 'LIST';\n\n/**\n * Reducer functions that computes and returns the new state based on the given action\n * @function\n * @param {Object} state The current state\n * @param {Object} action The action to be evaluated\n */\nconst style = (state = DEFAULT_STATE_STYLE, action) => {\n    switch (action.type) {\n        case SET_STYLE:\n            return validateReducer(action.value, DEFAULT_STATE_STYLE);\n        default:\n            return state;\n    }\n};\n\nexport default style;\n\n/**\n * Selectors that point to specific props in the state object\n * @function\n * @param {Object} state\n * @returns {Object}\n */\nexport const sGetStyleRoot = state => state.style;\n","import { combineReducers } from 'redux';\nimport arraySort from 'd2-utilizr/lib/arraySort';\n\nimport dashboards, { sGetDashboardsRoot } from './dashboards';\nimport selected from './selected';\nimport dashboardsFilter, {\n    ownerData,\n    sGetFilterName,\n    sGetFilterOrder,\n    sGetFilterOwner,\n} from './dashboardsFilter';\nimport controlBar from './controlBar';\nimport visualizations from './visualizations';\nimport editDashboard from './editDashboard';\nimport messages from './messages';\nimport user from './user';\nimport snackbar from './snackbar';\nimport itemFilters from './itemFilters';\nimport editItemFilters from './editItemFilters';\nimport style from './style';\nimport dimensions from './dimensions';\nimport settings from './settings';\nimport activeModalDimension from './activeModalDimension';\n\nconst USER = 'system';\n\n// Reducers\n\nexport default combineReducers({\n    dashboards,\n    selected,\n    dashboardsFilter,\n    controlBar,\n    visualizations,\n    messages,\n    user,\n    editDashboard,\n    itemFilters,\n    editItemFilters,\n    style,\n    snackbar,\n    dimensions,\n    settings,\n    activeModalDimension,\n});\n\n// Map constants to data\nconst mapConstToData = {\n    NAME: 'name',\n    ITEMS: 'numberOfItems',\n    CREATED: 'created',\n    OWNER: 'owner',\n};\n\n// Selectors\n\n// Filter dashboards by name\nexport const sFilterDashboardsByName = (dashboards, filter) =>\n    dashboards.filter(d =>\n        d.displayName.toLowerCase().includes(filter.toLowerCase())\n    );\n\n// Filter dashboards by owner, TODO FIXME\nexport const sFilterDashboardsByOwner = (dashboards, filter) => {\n    const ME = ownerData[1]; // TODO\n    const OTHERS = ownerData[2]; // TODO\n\n    switch (filter) {\n        case ME:\n            return dashboards.filter(d => d.owner === USER);\n        case OTHERS:\n            return dashboards.filter(d => d.owner !== USER);\n        default:\n            return dashboards;\n    }\n};\n\n// Filter dashboards by order\nexport const sFilterDashboardsByOrder = (dashboards, filter) => {\n    const filterValues = filter.split(':');\n\n    const key = filterValues[0];\n    const direction = filterValues[1];\n\n    return arraySort(dashboards, direction, mapConstToData[key]);\n};\n\n// Selectors dependency level 2\n\n// Get filtered dashboards\nexport const sGetFilteredDashboards = state => {\n    const dashboards = sGetDashboardsRoot(state);\n\n    const nameFilter = sGetFilterName(state);\n    const ownerFilter = sGetFilterOwner(state);\n    const orderFilter = sGetFilterOrder(state);\n\n    return sFilterDashboardsByOrder(\n        sFilterDashboardsByName(\n            sFilterDashboardsByOwner(dashboards, ownerFilter),\n            nameFilter\n        ),\n        orderFilter\n    );\n};\n","import { createStore, applyMiddleware, compose } from 'redux';\nimport { createLogger } from 'redux-logger';\nimport thunk from 'redux-thunk';\nimport reducer from './reducers';\n\nconst configureStore = () => {\n    const middleware = [thunk];\n\n    // Enable Redux devtools if extension is installed instead of redux-logger\n    const composeEnhancers =\n        window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\n    if (\n        !window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ &&\n        process.env.NODE_ENV !== 'production'\n    ) {\n        middleware.push(createLogger());\n    }\n\n    return createStore(\n        reducer,\n        composeEnhancers(applyMiddleware(...middleware))\n    );\n};\n\nexport default configureStore;\n","import getMuiTheme from 'material-ui/styles/getMuiTheme';\n\nimport { colors } from './colors';\n\nexport const muiTheme = () => {\n    const raisedButton = {\n        primaryColor: colors.royalBlue,\n        disabledColor: colors.paleBlue,\n        disabledTextColor: colors.lightMediumGrey,\n    };\n\n    const theme = getMuiTheme({ raisedButton });\n\n    return theme;\n};\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport { MuiThemeProvider, createMuiTheme } from '@material-ui/core/styles';\nimport { MuiThemeProvider as V0MuiThemeProvider } from 'material-ui';\nimport { init as d2Init, config, getManifest, getUserSettings } from 'd2';\nimport dhis2theme from '@dhis2/d2-ui-core/theme/mui3.theme';\n\n// temporary workaround until new ui headerbar is ready\nimport 'material-design-icons/iconfont/material-icons.css';\nimport './reset.css';\n\nimport App from './components/App';\nimport './index.css';\nimport i18n from './locales';\nimport configureStore from './configureStore';\nimport { muiTheme } from './modules/theme';\n\nconst v1Theme = () => createMuiTheme({ ...dhis2theme });\n\nconst configI18n = userSettings => {\n    const uiLocale = userSettings.keyUiLocale;\n\n    if (uiLocale && uiLocale !== 'en') {\n        config.i18n.sources.add(`./i18n/i18n_module_${uiLocale}.properties`);\n    }\n\n    config.i18n.sources.add('./i18n/i18n_module_en.properties');\n    i18n.changeLanguage(uiLocale);\n};\n\nconst init = async () => {\n    const manifest = await getManifest('./manifest.webapp');\n\n    // log app info\n    console.info(\n        `Dashboards app, v${manifest.version}, ${\n            manifest.manifest_generated_at\n        }`\n    );\n\n    const isProd = process.env.NODE_ENV === 'production';\n\n    if (\n        !isProd &&\n        (!process.env.REACT_APP_DHIS2_BASE_URL ||\n            !process.env.REACT_APP_DHIS2_AUTHORIZATION)\n    ) {\n        throw new Error(\n            'Missing env variables REACT_APP_DHIS2_BASE_URL and REACT_APP_DHIS2_AUTHORIZATION'\n        );\n    }\n\n    // api config\n    const baseUrl = isProd\n        ? manifest.activities.dhis.href\n        : process.env.REACT_APP_DHIS2_BASE_URL;\n    const authorization = process.env.REACT_APP_DHIS2_AUTHORIZATION;\n\n    config.baseUrl = `${baseUrl}/api/${manifest.dhis2.apiVersion}`;\n    config.headers = isProd ? null : { Authorization: authorization };\n    config.schemas = [\n        'chart',\n        'map',\n        'report',\n        'reportTable',\n        'eventChart',\n        'eventReport',\n        'dashboard',\n        'organisationUnit',\n        'userGroup',\n    ];\n\n    getUserSettings()\n        .then(configI18n)\n        .then(() => d2Init(config))\n        .then(initializedD2 => {\n            ReactDOM.render(\n                <Provider store={configureStore()}>\n                    <MuiThemeProvider theme={v1Theme()}>\n                        <V0MuiThemeProvider muiTheme={muiTheme()}>\n                            <App baseUrl={baseUrl} d2={initializedD2} />\n                        </V0MuiThemeProvider>\n                    </MuiThemeProvider>\n                </Provider>,\n                document.getElementById('root')\n            );\n        });\n};\n\ninit();\n","import isObject from 'lodash/isObject';\n\n// validation\nexport function orNull(param) {\n    return param === undefined ? null : param;\n}\n\nexport function orArray(param) {\n    return Array.isArray(param) ? param : [];\n}\n\nexport function orObject(param) {\n    return isObject(param) ? param : {};\n}\n\n// array\nexport function arrayGetById(array, id) {\n    return array.find(item => item.id === id);\n}\n\n// object\nexport function arrayToIdMap(array) {\n    return array.reduce((obj, item) => {\n        obj[item.id] = item;\n        return obj;\n    }, {});\n}\n\n// date\nexport function getDate() {\n    const y = Math.floor(Math.random() * 3) + 2015;\n    const M = Math.floor(Math.random() * 12) + 1;\n    const d = Math.floor(Math.random() * 28) + 1;\n    // const h = Math.floor(Math.random() * 23) + 1;\n    // const m = Math.floor(Math.random() * 59) + 1;\n    // const s = Math.floor(Math.random() * 59) + 1;\n\n    return new Date(`${y}-${M}-${d}`)\n        .toJSON()\n        .replace('T', ' ')\n        .substr(0, 10);\n}\n\nexport const formatDate = (value, uiLocale) => {\n    if (typeof global.Intl !== 'undefined' && Intl.DateTimeFormat) {\n        const locale = uiLocale || 'en';\n        return new Intl.DateTimeFormat(locale, {\n            year: 'numeric',\n            month: 'short',\n            day: 'numeric',\n        }).format(new Date(value));\n    }\n\n    return value.substr(0, 19).replace('T', ' ');\n};\n\n/**\n * Sorts an array of objects based on provided date property\n *\n * @param {Array} items Array of objects\n * @param {String} dateProp Name of the date property to be used for sorting\n * @param {Boolean} ascending Whether to sort ascending or descending\n */\nexport const sortByDate = (items, dateProp, ascending = true) => {\n    const values = Object.values(items);\n\n    values.sort((a, b) => {\n        const aDate = new Date(a[dateProp]);\n        const bDate = new Date(b[dateProp]);\n\n        return ascending ? aDate - bDate : bDate - aDate;\n    });\n\n    return values;\n};\n\n// reducer validator\nexport const validateReducer = (value, defaultValue) =>\n    value === undefined || value === null ? defaultValue : value;\n\nexport const getBaseUrl = d2 => {\n    const api = d2.Api.getApi();\n    const idx = api.baseUrl.indexOf('/api');\n    return idx > -1 ? api.baseUrl.slice(0, idx) : api.baseUrl;\n};\n\nexport const getWithoutId = object => ({\n    ...object,\n    id: undefined,\n});\n"],"sourceRoot":""}
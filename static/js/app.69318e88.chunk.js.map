{"version":3,"sources":["D2App/components/ItemSelector/styles/CategorizedMenuGroup.module.css","D2App/components/TitleBar/styles/EditTitleBar.module.css","D2App/components/TitleBar/styles/ViewTitleBar.module.css","D2App/components/Item/VisualizationItem/styles/FatalErrorBoundary.module.css","D2App/components/Item/ItemHeader/styles/DeleteItemButton.module.css","D2App/components/Item/ItemHeader/styles/PrintItemInfo.module.css","D2App/components/Item/VisualizationItem/styles/LoadingMask.module.css","D2App/components/Item/VisualizationItem/styles/Item.module.css","D2App/components/Item/ListItem/Item.module.css","D2App/components/Item/PrintTitlePageItem/styles/Item.module.css","D2App/components/FilterBar/styles/FilterBar.module.css","D2App/components/ControlBar/styles/ConfirmDeleteDialog.module.css","D2App/components/Dashboard/styles/PrintInfo.module.css","D2App/components/Dashboard/styles/PrintActionsBar.module.css","D2App/components/Dashboard/styles/PrintLayoutDashboard.module.css","D2App/components/Dashboard/styles/PrintDashboard.module.css","D2App/components/ControlBar/ControlBar.js","D2App/icons/Star.js","D2App/components/ControlBar/DashboardItemChip.js","D2App/api/dataStatistics.js","D2App/icons/AddCircle.js","D2App/icons/Search.js","D2App/icons/Clear.js","D2App/components/ControlBar/ClearButton.js","D2App/reducers/dashboardsFilter.js","D2App/components/ControlBar/Filter.js","D2App/actions/dashboardsFilter.js","D2App/components/ControlBar/ShowMoreButton.js","D2App/components/ControlBar/controlBarDimensions.js","D2App/reducers/controlBar.js","D2App/modules/uiBackendItemConverter.js","D2App/reducers/dashboards.js","D2App/reducers/selected.js","D2App/api/userDataStore.js","D2App/actions/controlBar.js","D2App/api/controlBar.js","D2App/components/ControlBar/DashboardsBar.js","D2App/components/Dashboard/DashboardVerticalOffset.js","D2App/widgets/NoContentMessage.js","D2App/components/ItemSelector/HeaderMenuItem.js","D2App/icons/Launch.js","D2App/components/ItemSelector/ContentMenuItem.js","D2App/reducers/editDashboard.js","D2App/api/editDashboard.js","D2App/reducers/user.js","D2App/api/index.js","D2App/api/dashboards.js","D2App/actions/dashboards.js","D2App/reducers/dimensions.js","D2App/reducers/itemFilters.js","D2App/actions/itemFilters.js","D2App/reducers/messages.js","D2App/components/Item/MessagesItem/actions.js","D2App/api/messages.js","D2App/reducers/alert.js","D2App/actions/alert.js","D2App/reducers/visualizations.js","D2App/actions/visualizations.js","D2App/actions/selected.js","D2App/api/localStorage.js","D2App/api/description.js","D2App/actions/editDashboard.js","D2App/components/ItemSelector/selectableItems.js","D2App/components/ItemSelector/CategorizedMenuGroup.js","D2App/components/ItemSelector/actions.js","D2App/components/ItemSelector/SinglesMenuGroup.js","D2App/components/ItemSelector/ItemSelector.js","D2App/components/TitleBar/EditTitleBar.js","D2App/components/Item/VisualizationItem/assets/icons.js","D2App/components/ItemFilter/FilterDialog.js","D2App/reducers/settings.js","D2App/reducers/activeModalDimension.js","D2App/actions/activeModalDimension.js","D2App/components/ItemFilter/FilterSelector.js","D2App/components/TitleBar/ViewTitleBar.js","D2App/components/TitleBar/TitleBar.js","D2App/components/Item/VisualizationItem/DefaultPlugin.js","D2App/components/Item/VisualizationItem/FatalErrorBoundary.js","D2App/components/Item/ItemHeader/ViewItemActions.js","D2App/components/Item/ItemHeader/DeleteItemButton.js","D2App/components/Item/ItemHeader/EditItemActions.js","D2App/icons/Info.js","D2App/components/Item/ItemHeader/PrintItemInfo.js","D2App/components/Dashboard/dashboardModes.js","D2App/components/Item/ItemHeader/ItemHeader.js","D2App/components/Item/VisualizationItem/ItemHeaderButtons.js","D2App/components/Item/VisualizationItem/ItemFooter.js","D2App/components/Item/VisualizationItem/LoadingMask.js","D2App/modules/memoizeOne.js","D2App/components/Item/VisualizationItem/Item.js","D2App/widgets/Line.js","D2App/components/Item/MessagesItem/Item.js","D2App/components/Item/NotSupportedItem/Item.js","D2App/icons/Description.js","D2App/icons/Delete.js","D2App/components/Item/ListItem/Item.js","D2App/components/Item/ListItem/actions.js","D2App/reducers/printDashboard.js","D2App/components/Item/TextItem/Item.js","D2App/components/Item/AppItem/Item.js","D2App/components/Item/SpacerItem/Item.js","D2App/components/Item/PageBreakItem/Item.js","D2App/components/Item/PrintTitlePageItem/Item.js","D2App/components/Item/Item.js","D2App/components/Item/ProgressiveLoadingContainer.js","D2App/components/ItemGrid/ItemGrid.js","D2App/components/FilterBar/FilterBadge.js","D2App/components/FilterBar/FilterBar.js","D2App/reducers/windowHeight.js","D2App/actions/printDashboard.js","D2App/components/Dashboard/ViewDashboard.js","D2App/components/ControlBar/ConfirmDeleteDialog.js","D2App/components/ControlBar/EditBar.js","D2App/components/Dashboard/PrintInfo.js","D2App/icons/LessHorizontal.js","D2App/components/Dashboard/PrintActionsBar.js","D2App/modules/printUtils.js","D2App/components/ItemGrid/PrintLayoutItemGrid.js","D2App/components/Dashboard/PrintLayoutDashboard.js","D2App/components/Dashboard/EditDashboard.js","D2App/components/Dashboard/NewDashboard.js","D2App/components/ItemGrid/PrintItemGrid.js","D2App/components/Dashboard/PrintDashboard.js","D2App/actions/windowHeight.js","D2App/components/Dashboard/Dashboard.js","D2App/components/AlertBar/AlertBar.js","D2App/actions/user.js","D2App/actions/dimensions.js","D2App/components/App.js","D2App/reducers/style.js","D2App/reducers/index.js","D2App/configureStore.js","D2App/locales/index.js","D2App/AppWrapper.js","D2App/modules/util.js","D2App/modules/itemTypes.js","D2App/components/ItemGrid/gridUtil.js","D2App/components/Item/VisualizationItem/plugin.js","D2App/components/Item/ItemHeader/styles/ItemHeader.module.css","D2App/components/ControlBar/styles/DashboardsBar.module.css","D2App/api/metadata.js","D2App/components/ControlBar/styles/ControlBar.module.css","D2App/components/ControlBar/styles/DashboardItemChip.module.css","D2App/components/ControlBar/styles/ClearButton.module.css","D2App/components/ControlBar/styles/Filter.module.css","D2App/components/ControlBar/styles/ShowMoreButton.module.css","D2App/components/ItemSelector/styles/ContentMenuItem.module.css"],"names":["module","exports","ControlBar","React","Component","constructor","props","super","onStartDrag","this","setState","dragging","window","addEventListener","onDrag","onEndDrag","event","preventDefault","stopPropagation","newHeight","clientY","onChangeHeight","height","requestAnimationFrame","removeEventListener","state","renderDragHandle","className","classes","draghandle","style","onMouseDown","render","Math","max","rootStyle","Object","assign","backgroundColor","editMode","colors","yellow050","white","paddingBottom","transition","root","content","children","defaultProps","StarIcon","xmlns","viewBox","d","fill","DashboardItemChip","starred","selected","label","dashboardId","chipProps","selectedState","unselected","icon","Star","link","to","onClick","debounce","async","eventType","id","d2","getInstance","url","Api","getApi","post","apiPostDataStatistics","AddCircleIcon","width","teal600","SearchIcon","ClearIcon","grey800","ClearButton","onClear","button","Clear","color","sGetDashboardsFilter","dashboardsFilter","mapDispatchToProps","setDashboardsFilter","value","type","clearDashboardsFilter","connect","filterText","onKeypressEnter","focusedClassName","setFocusedClassName","useState","cx","container","onFocus","focused","onBlur","Search","searchIcon","input","placeholder","i18n","t","onChange","target","onKeyUp","keyCode","ShowMoreButton","isMaxHeight","disabled","showMore","getRowsHeight","rows","getControlBarHeight","FIRST_ROW_PADDING_HEIGHT","combineReducers","userRows","action","validateReducer","sGetControlBarUserRows","controlBar","sGetControlBarRoot","spacerContent","isTextType","item","TEXT","text","convertUiItemsToBackend","items","map","SPACER","isUiSpacerType","convertBackendItemsToUi","isBackendSpacerType","gridProperties","getGridItemProperties","DEFAULT_STATE_DASHBOARDS","byId","EMPTY_DASHBOARD","updateDashboardProp","prop","sGetDashboardsRoot","dashboards","sGetDashboardById","orObject","sDashboardsIsFetching","sGetAllDashboards","sGetDashboardItems","sGetStarredDashboards","values","filter","dashboard","sGetUnstarredDashboards","getCustomDashboards","data","arrayFrom","name","displayName","description","displayDescription","favorite","owner","user","created","split","join","substr","lastUpdated","access","numberOfItems","orArray","dashboardItems","length","DEFAULT_STATE_SELECTED_ITEM_ACTIVE_TYPES","isLoading","showDescription","itemActiveTypes","activeType","sGetSelectedRoot","sGetSelectedId","sGetSelectedIsLoading","sGetSelectedShowDescription","sGetSelectedItemActiveType","hasNamespace","currentUser","dataStore","has","getNamespace","get","create","apiPostUserDataStoreValue","key","set","apiGetUserDataStoreValue","defaultValue","namespace","keys","find","k","console","log","acSetControlBarUserRows","tSetControlBarRows","controlBarRows","apiGetControlBarRows","dispatch","err","error","withRouter","selectedId","history","setRows","useEffect","getFilteredDashboards","filteredDashboards","arraySort","toLowerCase","includes","overflowYClass","overflowYAuto","overflowYHidden","newRows","floor","min","apiPostControlBarRows","leftControls","newLink","AddCircle","push","marginTop","NoContentMessage","padding","textAlign","fontSize","fontWeight","grey600","HeaderMenuItem","title","dense","LaunchIcon","LaunchLink","e","launchLink","rel","href","Launch","InsertButton","buttonInsert","ContentMenuItem","onInsert","visType","ItemIcon","getItemIcon","renderedItemIcon","VISUALIZATION","visTypeIcons","menuItem","marginRight","DEFAULT_STATE_EDIT_DASHBOARD","NEW_DASHBOARD_STATE","printPreviewView","sGetEditDashboardRoot","editDashboard","sGetIsEditing","isEmpty","sGetIsPrintPreviewView","sGetEditDashboardItems","onError","saveDashboard","w","h","save","then","msg","response","uid","DEFAULT_STATE_USER","username","uiLocale","isSuperuser","sGetUserUsername","getDashboardItemsFields","withFavorite","arrayClean","getListItemFields","getFavoritesFields","withDimensions","getDashboardFields","withItems","getIdNameFields","rename","apiFetchDashboard","models","fields","catch","tFetchDashboards","collection","list","paging","toArray","arrayToIdMap","tStarDashboard","isStarred","delete","apiStarDashboard","acSetDashboardStarred","onSuccess","tDeleteDashboard","apiDeleteDashboard","Promise","resolve","DEFAULT_DIMENSIONS","getDimensionById","DIMENSION_ID_PERIOD","DIMENSION_ID_ORGUNIT","sGetDimensions","dimensions","DEFAULT_STATE_ITEM_FILTERS","sGetItemFiltersRoot","itemFilters","sGetNamedItemFilters","createSelector","filters","reduce","arr","dimension","acRemoveItemFilter","sGetMessagesRoot","messages","tGetMessages","getMessages","messageConversations","sGetAlertMessage","alert","acClearAlertMessage","DEFAULT_STATE_VISUALIZATIONS","p","undefined","sGetVisualization","visualizations","sGetVisualizationsRoot","acAddVisualization","acSetSelectedId","acSetSelectedIsLoading","acSetSelectedShowDescription","tSetSelectedDashboardById","getState","alertTimeout","setTimeout","customDashboard","withShape","localStorage","setItem","forEach","REPORT_TABLE","CHART","MAP","EVENT_REPORT","EVENT_CHART","extractFavorite","MESSAGES","clearTimeout","tSetShowDescription","apiGetShowDescription","tUpdateShowDescription","apiPostShowDescription","acClearEditDashboard","acAddDashboardItem","itemPropName","itemTypeMap","propName","generateUid","gridItemProperties","shape","PAGEBREAK","yPos","getPageBreakItemShape","isStatic","PRINT_TITLE_PAGE","getPrintTitlePageItemShape","NEW_ITEM_SHAPE","position","acUpdateDashboardItem","acRemoveDashboardItem","tSaveDashboard","dashboardToSave","postDashboard","singleItems","header","categorizedItems","USERS","REPORTS","RESOURCES","APP","listItemTypes","CategorizedMenuGroup","addItem","tAddListItemContent","newItem","toggleSeeMore","seeMore","onChangeItemsLimit","hasMore","itemUrl","getItemUrl","context","showMoreButton","margin","contextTypes","PropTypes","object","isRequired","listItemType","dashboardItemIndex","findIndex","dashboardItem","category","addToDashboard","ItemSearchField","ItemSelector","closeList","open","openList","_","fetchItems","anchorEl","currentTarget","setFilter","getCategorizedMenuGroups","itemType","endPointName","itemCount","getDefaultItemCount","allItems","maxOptions","slice","pluralTitle","getSinglesMenuGroups","getMenuGroups","concat","add","Set","queryString","onClose","anchorOrigin","horizontal","vertical","transformOrigin","PaperProps","disableAutoFocus","disableEnforceFocus","disableRestoreFocus","maxWidth","EditTitleBar","onChangeTitle","onChangeDescription","section","titleDescription","itemSelector","selectedDashboard","ThreeDots","SpeechBubble","fillRule","transform","Warning","FilterDialog","displayNameProperty","initiallySelectedItems","addItemFilter","removeItemFilter","setFilters","onSelectItems","dimensionId","onDeselectItems","itemIdsToRemove","newList","onReorderItems","itemIds","oldList","reorderedList","large","commonProps","onSelect","onDeselect","onReorder","selectedItems","selectedPeriods","ouItems","renderDialogContent","secondary","primary","filterItems","DEFAULT_SETTINGS","keyDateFormat","keyAnalysisRelativePeriod","keyAnalysisDigitGroupSeparator","rootOrganisationUnit","sGetSettings","settings","sGetSettingsDisplayNameProperty","DEFAULT_STATE_ACTIVE_MODAL_DIMENSION","sGetActiveModalDimension","activeModalDimension","acSetActiveModalDimension","clearActiveModalDimension","setActiveModalDimension","showPopover","setShowPopover","ref","useRef","onCloseDialog","onClickOutside","reference","arrow","placement","onDimensionClick","selectedIds","ViewTitleBar","moreOptionsIsOpen","setMoreOptionsIsOpen","sharingDialogIsOpen","setSharingDialogIsOpen","redirectUrl","setRedirectUrl","onToggleStarredDashboard","onShowHideDescription","toggleSharingDialog","toggleMoreOptions","titleStyle","cursor","userSelect","top","StarBorder","showHideDescriptionLabel","toggleStarredDashboardLabel","buttonRef","createRef","userAccess","titleBar","actions","titleBarIcon","strip","update","editLink","manage","marginLeft","paddingTop","onRequestClose","stateProps","dispatchProps","ownProps","black","minWidth","TitleBar","edit","DefaultPlugin","pluginCredentials","shouldPluginReload","prevProps","reloadAllowed","filtersChanged","vis","visualization","prevVis","visChanged","reloadPlugin","pluginManager","credentials","componentDidMount","baseUrl","getBaseUrl","auth","defaultHeaders","Authorization","options","componentDidUpdate","componentWillUnmount","getGridItemDomId","textDiv","FatalErrorBoundary","errorFound","componentDidCatch","info","message","ViewItemActions","actionButtons","itemActionsWrap","DeleteItemButton","deleteItemButton","red500","itemId","WarningIcon","PrintWarning","warning","Info","EDIT","NEW","PRINT","PRINT_LAYOUT","isEditMode","mode","isPrintMode","isViewMode","ItemHeader","forwardRef","dashboardMode","isShortened","rest","Actions","EditItemActions","PrintItemInfo","getItemActionsMap","itemHeaderWrap","itemTitle","iconFill","ItemHeaderButtons","setAnchorEl","onSelectActiveType","isTrackerType","isTrackerDomainType","onViewTable","handleClose","onViewChart","onViewMap","canViewAs","isSingleValue","isYearOverYear","VIS_TYPE_GAUGE","VIS_TYPE_PIE","interpretationMenuLabel","activeFooter","ViewAsMenuItems","hasMapView","pluginIsAvailable","small","Boolean","appName","getAppName","getLink","onToggleFooter","scrollContainer","overflowY","line","border","grey100","ItemFooter","objectId","getId","LoadingMask","center","memoizeOne","fn","lastArgs","lastValue","args","every","arg","i","Item","showFooter","configLoaded","pluginIsLoaded","applyFilters","visRows","obj","visColumns","columns","visFilters","dimensionFound","dimensionObjects","getUniqueKey","uniqueId","getPluginComponent","getActiveType","memoizedGetVisualizationConfig","calculatedHeight","originalHeight","headerRef","current","clientHeight","ITEM_CONTENT_PADDING_BOTTOM","memoizedGetContentStyle","contentRef","offsetHeight","memoizedApplyFilters","onLoadingComplete","forDashboard","mapViews","layer","hideTitle","onToggleItemExpanded","selectActiveType","isEditing","getContentStyle","measuredHeight","preferMeasured","updateVisualization","prevState","shortened","Function","prototype","grey200","Line","messageTypes","VALIDATION_RESULT","TICKET","SYSTEM","listStyleType","paddingLeft","seeAll","marginBottom","sender","lineHeight","snippet","maxHeight","overflow","MessagesItem","getMessageHref","msgIdentifier","messageType","getMessageSender","latestMsg","getMessageItems","modeClass","readClass","read","msgDate","document","location","messageCount","formatDate","userSettings","string","MessagesContainer","NotSupportedItem","display","justifyContent","alignItems","align","DescriptionIcon","grey500","DeleteIcon","getItemTitle","ListItem","tRemoveListItemContent","contentItems","index","array","el","getContentItems","contentItem","Description","itemicon","deleteButton","deletebutton","deleteicon","grey900","newContent","DEFAULT_STATE_PRINT_DASHBOARD","DEFAULT_DASHBOARD_ITEMS","NEW_PRINT_DASHBOARD_STATE","sGetPrintDashboardRoot","printDashboard","sGetIsPrinting","sGetPrintDashboardItems","whiteSpace","textField","fontStretch","onChangeText","updatedItem","viewItem","textDivStyle","editItem","onEdit","multiline","fullWidth","printItem","textItem","getIframeSrc","appDetails","iframeSrc","launchUrl","ouIds","ouPath","AppItem","appKey","system","installedApps","app","src","SpacerItem","PageBreakItem","PrintTitlePageItem","titlePage","filterTitle","listItems","filterListItem","val","filterList","getItemFilterList","viewDashboard","sGetPrintDashboardName","sGetPrintDashboardDescription","GridItem","VisualizationItem","TextItem","getGridItem","ProgressiveLoadingContainer","shouldLoad","containerRef","shouldLoadHandler","handlerOptions","passive","checkShouldLoad","bufferPx","bufferFactor","innerHeight","rect","getBoundingClientRect","bottom","removeHandler","registerHandler","debounceMs","getElementsByClassName","eventProps","pick","ItemGrid","expandedItems","clickedId","isExpanded","onLayoutChange","newLayout","acUpdateDashboardLayout","onResizeStop","layout","oldItem","onItemResize","isVisualizationType","pluginResize","adjustHeightForExpanded","expandedItem","getItemComponent","itemClassNames","getItemComponents","componentWillReceiveProps","nextProps","translucent","MARGIN","cols","getGridColumns","rowHeight","GRID_ROW_HEIGHT","innerWidth","compactType","GRID_COMPACT_TYPE","isDraggable","isResizable","draggableCancel","validItems","hasShape","styles","badgeContainer","borderRadius","badge","badgeRemove","textDecoration","FilterBadge","onRemove","count","FilterBar","onBadgeRemove","onBadgeClick","bar","removeItemFIlter","DEFAULT_STATE_WINDOW_HEIGHT","sGetWindowHeight","windowHeight","acSetPrintDashboard","acClearPrintDashboard","acAddPrintDashboardItem","isOneItemPerPage","acUpdatePrintDashboardItem","dashboardIsEditing","dashboardIsPrinting","clearEditDashboard","clearPrintDashboard","querySelector","scroll","ConfirmDeleteDialog","dashboardName","onDeleteConfirmed","onContinueEditing","destructive","buttonBarStyle","EditBar","translationDialogIsOpen","dashboardModel","confirmDeleteDialogOpen","onConfirmDelete","onSave","newId","onPrintPreview","isPrintPreviewView","clearPrintPreview","showPrintPreview","onDiscard","onDiscardChanges","onDelete","onTranslationsSaved","translations","dbLocale","translation","locale","property","onTranslate","fetchDashboardModel","toggleTranslationDialog","confirmDeleteDialog","deleteAccess","translationDialog","objectToTranslate","fieldsToTranslate","onTranslationSaved","onTranslationError","renderActionButtons","printPreviewText","updateAccess","controlBarHeight","discardBtnText","rightControls","topMargin","sGetIsNewDashboard","acSetDashboardDisplayName","PrintInfo","isLayout","a4LandscapeWidthPx","infoHeader","infoWrapper","infoList","divider","LessHorizontalIcon","PrintActionsBar","inner","LessHorizontal","print","getTransformYPx","elStyle","transformY","match","parseInt","PrintLayoutItemGrid","updateDashboardLayout","isFirstPageBreak","pageBreaks","sortedPageBreaks","sortBy","y","hideExtraPageBreaks","sortedElements","elements","types","elementsWithBoundingRect","Array","from","classList","indexOf","bottomY","getDomGridItemsSortedByYPos","querySelectorAll","pageBreakBottom","lastItemBottom","foundNonPageBreak","thisItemBottom","gridElement","firstBreak","scrollArea","EDIT_BAR_HEIGHT","isLeapPage","n","x","getMultiple","factor","multiple","PrintLayoutDashboard","initialized","initPrintLayoutDashboard","setPrintDashboard","MAX_ITEM_GRID_HEIGHT","updateDashboardItem","addDashboardItem","yPosList","pageNum","addPageBreaks","getWrapperStyle","fromEdit","spacers","dp24","wrapper","pageOuter","EditDashboard","initEditDashboard","setEditDashboard","renderGrid","NewDashboard","setNewDashboard","PrintItemGrid","PrintDashboard","initPrintDashboard","sortedItems","spacerCount","removeDashboardItem","MAX_ITEM_GRID_WIDTH_OIPP","MAX_ITEM_GRID_HEIGHT_OIPP","dashboardMap","dashboardsIsEmpty","dashboardsLoaded","routeId","params","selectDashboard","dashboardToSelect","preferredId","getItem","dash","sGetDashboardsSortedByStarred","setWindowHeight","getElementsByTagName","remove","setHeaderbarVisibility","onResize","onHidden","permanent","tSetDimensions","displayNameProp","apiFetchDimensions","acSetDimensions","dim","dimensionType","dataDimensionType","App","setCurrentUser","fetchDashboards","setControlBarRows","setShowDescription","setDimensions","getChildContext","exact","path","AlertBar","childContextTypes","objectClean","conversations","$merge","d2Object","keyUiLocale","authorities","newState","$splice","$unshift","idToRemove","stateItems","layoutHasChanged","newStateItems","stateItem","si","configureStore","middleware","thunk","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","createStore","reducer","applyMiddleware","addResources","arTranslations","ar_IQTranslations","ckbTranslations","daTranslations","enTranslations","esTranslations","frTranslations","idTranslations","kmTranslations","loTranslations","myTranslations","nbTranslations","prsTranslations","psTranslations","ptTranslations","pt_BRTranslations","ruTranslations","svTranslations","tetTranslations","tgTranslations","ukTranslations","urTranslations","uz_CyrlTranslations","viTranslations","zhTranslations","zh_CNTranslations","appConfig","schemas","authorization","process","REACT_APP_DHIS2_AUTHORIZATION","headers","AppWrapper","store","theme","createMuiTheme","dhis2theme","i18nRoot","param","isArray","isObject","global","Intl","DateTimeFormat","year","month","day","format","Date","replace","api","idx","getWithoutId","domainType","defaultItemCount","appUrl","getTime","getEndPointName","TableIcon","ChartIcon","MapIcon","ExtensionIcon","PersonIcon","FontDownloadIcon","EmailIcon","CropFreeIcon","NotInterestedIcon","isNonNegativeInteger","Number","isInteger","minH","GRID_COLUMNS","static","itemWithShape","Error","col","row","itemWidth","MAX_ITEM_GRID_WIDTH","itemHeight","getShape","round","getOriginalHeight","isFunction","setViewportSize","clientWidth","itemTypeToExternalPlugin","getPlugin","hasIntegratedPlugin","reportTable","chart","eventReport","eventChart","getName","load","config","plugin","loadingIndicator","loadPlugin","fetch","apiFetchFavorite","getMapFields","resize","unmount","getVisualizationConfig","originalType","extractedMapView","mv","VIS_TYPE_COLUMN","VIS_TYPE_PIVOT_TABLE","getDimensionFields","getAxesFields","getFavoriteFields","withOptions"],"mappings":"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","file":"static/js/app.69318e88.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"showMoreButton\":\"CategorizedMenuGroup_showMoreButton__2RbRp\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"section\":\"EditTitleBar_section__LIaIC\",\"titleDescription\":\"EditTitleBar_titleDescription__1YsU6\",\"title\":\"EditTitleBar_title__3mUbt\",\"description\":\"EditTitleBar_description__24U5X\",\"itemSelector\":\"EditTitleBar_itemSelector__1cFEp\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"actions\":\"ViewTitleBar_actions__2UTRz\",\"editLink\":\"ViewTitleBar_editLink__d_HzW\",\"titleBar\":\"ViewTitleBar_titleBar__eiwJS\",\"titleBarIcon\":\"ViewTitleBar_titleBarIcon__2cBxv\",\"strip\":\"ViewTitleBar_strip__3xR4U\",\"backdrop\":\"ViewTitleBar_backdrop__2Cpm8\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"FatalErrorBoundary_container__3SViR\",\"icon\":\"FatalErrorBoundary_icon__2UbeP\",\"message\":\"FatalErrorBoundary_message__3FzrY\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"deleteItemButton\":\"DeleteItemButton_deleteItemButton__3TJm9\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"warning\":\"PrintItemInfo_warning__123PK\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"center\":\"LoadingMask_center__2SFwS\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"textDiv\":\"Item_textDiv__1U7zV\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"Item_list__1_nkQ\",\"item\":\"Item_item__3-6QE\",\"itemicon\":\"Item_itemicon__QlouX\",\"link\":\"Item_link___3c_q\",\"deleteicon\":\"Item_deleteicon__3usrl\",\"deletebutton\":\"Item_deletebutton__1DpBW\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"titlePage\":\"Item_titlePage__18CNQ\",\"name\":\"Item_name__3nuTV\",\"description\":\"Item_description__1gFQd\",\"filterTitle\":\"Item_filterTitle__2p7TQ\",\"filterList\":\"Item_filterList__qc_G3\",\"filterListItem\":\"Item_filterListItem__sPbBY\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"bar\":\"FilterBar_bar__1Ma3p\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"content\":\"ConfirmDeleteDialog_content__EqswE\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"infoWrapper\":\"PrintInfo_infoWrapper__3m2lt\",\"infoHeader\":\"PrintInfo_infoHeader__KyW8I\",\"info\":\"PrintInfo_info__13oXZ\",\"infoList\":\"PrintInfo_infoList__Iu9MC\",\"divider\":\"PrintInfo_divider__3wzx9\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"PrintActionsBar_container__2iQp7\",\"topMargin\":\"PrintActionsBar_topMargin__OpYDN\",\"inner\":\"PrintActionsBar_inner__uBqU7\",\"link\":\"PrintActionsBar_link__lFUmI\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"PrintLayoutDashboard_wrapper__1WDh4\",\"pageOuter\":\"PrintLayoutDashboard_pageOuter__22acI\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"PrintDashboard_wrapper__1O3s_\",\"pageOuter\":\"PrintDashboard_pageOuter__fl9tw\"};","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { colors } from '@dhis2/ui';\nimport classes from './styles/ControlBar.module.css';\nexport const DRAG_HANDLE_HEIGHT = 7;\n\nclass ControlBar extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      dragging: false\n    };\n  }\n\n  onStartDrag = () => {\n    this.setState({\n      dragging: true\n    });\n    window.addEventListener('mousemove', this.onDrag);\n    window.addEventListener('mouseup', this.onEndDrag);\n  };\n  onDrag = event => {\n    event.preventDefault();\n    event.stopPropagation();\n    const newHeight = event.clientY;\n\n    if (this.props.onChangeHeight && newHeight !== this.props.height && newHeight > 0) {\n      requestAnimationFrame(() => {\n        this.props.onChangeHeight(newHeight);\n      });\n    }\n  };\n  onEndDrag = () => {\n    this.setState({\n      dragging: false\n    });\n    window.removeEventListener('mousemove', this.onDrag);\n    window.removeEventListener('mouseup', this.onEndDrag);\n\n    if (this.props.onEndDrag) {\n      this.props.onEndDrag();\n    }\n  };\n\n  renderDragHandle() {\n    return typeof this.props.onChangeHeight === 'function' ? <div className={classes.draghandle} style={{\n      height: DRAG_HANDLE_HEIGHT\n    }} onMouseDown={this.onStartDrag} /> : null;\n  }\n\n  render() {\n    const height = Math.max(this.props.height, 0) + DRAG_HANDLE_HEIGHT;\n    const rootStyle = Object.assign({\n      height,\n      backgroundColor: this.props.editMode ? colors.yellow050 : colors.white,\n      paddingBottom: DRAG_HANDLE_HEIGHT\n    }, // Disable animations while dragging\n    this.state.dragging ? {\n      transition: 'none'\n    } : {});\n    return <div style={rootStyle} className={classes.root}>\n                <div className={classes.content}>{this.props.children}</div>\n                {this.renderDragHandle()}\n            </div>;\n  }\n\n}\n\nControlBar.propTypes = {\n  /**\n   * The height of the control bar in number of lines. Must be a positive integer.\n   */\n  children: PropTypes.node.isRequired,\n\n  /**\n   * If true, the background color of the control bar changes to indicate that edit mode is active.\n   */\n  editMode: PropTypes.bool.isRequired,\n\n  /**\n   * Callback function that is called when the control bar is resized.\n   * The callback receives one argument: The new height in pixels.\n   *\n   * If no callback is specified the control bar will not have a drag handle.\n   */\n  height: PropTypes.number.isRequired,\n\n  /**\n   * Callback function that is called when the control bar is dropped after being dragged.\n   * The callback receives one argument: The new height in pixels.\n   *\n   * Ignored if no \"onChangeHeight\" function is provided.\n   */\n  onChangeHeight: PropTypes.func,\n\n  /**\n   * The contents of the control bar.\n   */\n  onEndDrag: PropTypes.func\n};\nControlBar.defaultProps = {\n  onChangeHeight: null,\n  onEndDrag: null\n};\nexport default ControlBar;","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst StarIcon = ({\n  className\n}) => <svg className={className} xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\">\n        <path d=\"M0 0h24v24H0z\" fill=\"none\" />\n        <path d=\"M12 17.27L18.18 21l-1.64-7.03L22 9.24l-7.19-.61L12 2 9.19 8.63 2 9.24l5.46 4.73L5.82 21z\" />\n        <path d=\"M0 0h24v24H0z\" fill=\"none\" />\n    </svg>;\n\nStarIcon.propTypes = {\n  className: PropTypes.string\n};\nexport default StarIcon;","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Chip } from '@dhis2/ui';\nimport { Link } from 'react-router-dom';\nimport debounce from 'lodash/debounce';\nimport StarIcon from '../../icons/Star';\nimport { apiPostDataStatistics } from '../../api/dataStatistics';\nimport classes from './styles/DashboardItemChip.module.css';\nexport const DashboardItemChip = ({\n  starred,\n  selected,\n  label,\n  dashboardId\n}) => {\n  const chipProps = {\n    selected\n  };\n\n  if (starred) {\n    const selectedState = selected ? classes.selected : classes.unselected;\n    chipProps.icon = <StarIcon className={`${classes.icon} ${selectedState}`} />;\n  }\n\n  return <Link className={classes.link} to={`/${dashboardId}`} onClick={debounce(() => apiPostDataStatistics('DASHBOARD_VIEW', dashboardId), 500)}>\n            <Chip {...chipProps}>{label}</Chip>\n        </Link>;\n};\nDashboardItemChip.propTypes = {\n  dashboardId: PropTypes.string.isRequired,\n  label: PropTypes.string.isRequired,\n  selected: PropTypes.bool.isRequired,\n  starred: PropTypes.bool.isRequired,\n  classes: PropTypes.object\n};\nexport default DashboardItemChip;","import { getInstance } from 'd2';\nexport const apiPostDataStatistics = async (eventType, id) => {\n  const d2 = await getInstance();\n  const url = `dataStatistics?eventType=${eventType}&favorite=${id}`;\n  d2.Api.getApi().post(url);\n};","import React from 'react';\nimport { colors } from '@dhis2/ui';\n\nconst AddCircleIcon = () => <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"32\" height=\"32\" fill={colors.teal600} viewBox=\"0 0 24 24\">\n        <path d=\"M12 2C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2zm4 11h-3v3c0 .55-.45 1-1 1s-1-.45-1-1v-3H8c-.55 0-1-.45-1-1s.45-1 1-1h3V8c0-.55.45-1 1-1s1 .45 1 1v3h3c.55 0 1 .45 1 1s-.45 1-1 1z\" />\n    </svg>;\n\nexport default AddCircleIcon;","import React from 'react';\n\nconst SearchIcon = ({\n  className\n}) => <svg className={className} xmlns=\"http://www.w3.org/2000/svg\" height=\"24\" viewBox=\"0 0 24 24\" width=\"24\">\n        <path d=\"M0 0h24v24H0z\" fill=\"none\" />\n        <path d=\"M15.5 14h-.79l-.28-.27C15.41 12.59 16 11.11 16 9.5 16 5.91 13.09 3 9.5 3S3 5.91 3 9.5 5.91 16 9.5 16c1.61 0 3.09-.59 4.23-1.57l.27.28v.79l5 4.99L20.49 19l-4.99-5zm-6 0C7.01 14 5 11.99 5 9.5S7.01 5 9.5 5 14 7.01 14 9.5 11.99 14 9.5 14z\" />\n    </svg>;\n\nexport default SearchIcon;","import React from 'react';\nimport { colors } from '@dhis2/ui';\nimport PropTypes from 'prop-types';\n\nconst ClearIcon = ({\n  className\n}) => <svg className={className} fill={colors.grey800} xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\">\n        <path d=\"M19 6.41L17.59 5 12 10.59 6.41 5 5 6.41 10.59 12 5 17.59 6.41 19 12 13.41 17.59 19 19 17.59 13.41 12z\" />\n        <path d=\"M0 0h24v24H0z\" fill=\"none\" />\n    </svg>;\n\nClearIcon.propTypes = {\n  className: PropTypes.string\n};\nexport default ClearIcon;","import React from 'react';\nimport PropTypes from 'prop-types';\nimport ClearIcon from '../../icons/Clear';\nimport classes from './styles/ClearButton.module.css';\nexport const ClearButton = ({\n  onClear\n}) => <button className={classes.button} onClick={onClear}>\n        <span>\n            <ClearIcon className={classes.icon} color=\"action\" />\n        </span>\n    </button>;\nClearButton.propTypes = {\n  onClear: PropTypes.func.isRequired\n};\nexport default ClearButton;","import { validateReducer } from '../modules/util';\nexport const SET_DASHBOARDS_FILTER = 'SET_DASHBOARDS_FILTER';\nexport const CLEAR_DASHBOARDS_FILTER = 'CLEAR_DASHBOARDS_FILTER';\nexport const DEFAULT_STATE_DASHBOARDS_FILTER = '';\nexport default ((state = DEFAULT_STATE_DASHBOARDS_FILTER, action) => {\n  switch (action.type) {\n    case SET_DASHBOARDS_FILTER:\n      {\n        return validateReducer(action.value, DEFAULT_STATE_DASHBOARDS_FILTER);\n      }\n\n    case CLEAR_DASHBOARDS_FILTER:\n      {\n        return DEFAULT_STATE_DASHBOARDS_FILTER;\n      }\n\n    default:\n      return state;\n  }\n}); // selectors\n\nexport const sGetDashboardsFilter = state => state.dashboardsFilter;","import React, { useState } from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport i18n from '@dhis2/d2-i18n';\nimport cx from 'classnames';\nimport SearchIcon from '../../icons/Search';\nimport ClearButton from './ClearButton';\nimport { acSetDashboardsFilter, acClearDashboardsFilter } from '../../actions/dashboardsFilter';\nimport { sGetDashboardsFilter } from '../../reducers/dashboardsFilter';\nimport classes from './styles/Filter.module.css';\nexport const KEYCODE_ENTER = 13;\nexport const KEYCODE_ESCAPE = 27;\nexport const Filter = ({\n  clearDashboardsFilter,\n  filterText,\n  setDashboardsFilter,\n  onKeypressEnter\n}) => {\n  const [focusedClassName, setFocusedClassName] = useState('');\n\n  const setFilterValue = event => {\n    event.preventDefault();\n    setDashboardsFilter(event.target.value);\n  };\n\n  const onKeyUp = event => {\n    switch (event.keyCode) {\n      case KEYCODE_ENTER:\n        onKeypressEnter();\n        clearDashboardsFilter();\n        break;\n\n      case KEYCODE_ESCAPE:\n        clearDashboardsFilter();\n        break;\n\n      default:\n        break;\n    }\n  };\n\n  const onFocus = event => {\n    event.preventDefault();\n    setFocusedClassName(classes.focused);\n  };\n\n  const onBlur = event => {\n    event.preventDefault();\n    setFocusedClassName('');\n  };\n\n  return <div className={cx(classes.container, `${focusedClassName}`)} onFocus={onFocus} onBlur={onBlur}>\n            <SearchIcon className={classes.searchIcon} />\n            <input className={classes.input} type=\"text\" placeholder={i18n.t('Search for a dashboard')} onChange={setFilterValue} onKeyUp={onKeyUp} value={filterText} />\n            {filterText && <ClearButton onClear={clearDashboardsFilter} />}\n        </div>;\n};\nFilter.propTypes = {\n  clearDashboardsFilter: PropTypes.func,\n  filterText: PropTypes.string,\n  setDashboardsFilter: PropTypes.func,\n  onKeypressEnter: PropTypes.func\n};\n\nconst mapStateToProps = state => ({\n  filterText: sGetDashboardsFilter(state)\n});\n\nconst mapDispatchToProps = {\n  setDashboardsFilter: acSetDashboardsFilter,\n  clearDashboardsFilter: acClearDashboardsFilter\n};\nexport default connect(mapStateToProps, mapDispatchToProps)(Filter);","import { SET_DASHBOARDS_FILTER, CLEAR_DASHBOARDS_FILTER } from '../reducers/dashboardsFilter'; // actions\n\nexport const acSetDashboardsFilter = value => ({\n  type: SET_DASHBOARDS_FILTER,\n  value\n});\nexport const acClearDashboardsFilter = () => ({\n  type: CLEAR_DASHBOARDS_FILTER\n});","import React from 'react';\nimport PropTypes from 'prop-types';\nimport i18n from '@dhis2/d2-i18n';\nimport classes from './styles/ShowMoreButton.module.css';\nexport const SHOWMORE_BAR_HEIGHT = 16;\nexport const ShowMoreButton = ({\n  onClick,\n  isMaxHeight,\n  disabled\n}) => {\n  return <div className={classes.container}>\n            {disabled ? <div className={classes.disabled}>{i18n.t('Show more')}</div> : <div className={classes.showMore} onClick={onClick}>\n                    {isMaxHeight ? i18n.t('Show less') : i18n.t('Show more')}\n                </div>}\n        </div>;\n};\nShowMoreButton.propTypes = {\n  disabled: PropTypes.bool,\n  isMaxHeight: PropTypes.bool,\n  onClick: PropTypes.func\n};\nexport default ShowMoreButton;","import { SHOWMORE_BAR_HEIGHT } from './ShowMoreButton';\nexport const CONTROL_BAR_ROW_HEIGHT = 40;\nexport const FIRST_ROW_PADDING_HEIGHT = 10;\nexport const MIN_ROW_COUNT = 1;\nexport const HEADERBAR_HEIGHT = 48;\nconst CONTROL_BAR_OUTER_HEIGHT_DIFF = FIRST_ROW_PADDING_HEIGHT + SHOWMORE_BAR_HEIGHT - 2; // 2 pixel \"adjustment\"\n\nexport const getRowsHeight = rows => {\n  return rows * CONTROL_BAR_ROW_HEIGHT;\n};\nexport const getNumRowsFromHeight = height => {\n  return Math.floor((height - CONTROL_BAR_OUTER_HEIGHT_DIFF) / CONTROL_BAR_ROW_HEIGHT);\n};\nexport const getControlBarHeight = rows => {\n  return getRowsHeight(rows) + CONTROL_BAR_OUTER_HEIGHT_DIFF;\n};","/** @module reducers/controlBar */\nimport { combineReducers } from 'redux';\nimport { validateReducer } from '../modules/util';\nexport const SET_CONTROLBAR_USER_ROWS = 'SET_CONTROLBAR_USER_ROWS';\nexport const DEFAULT_STATE_CONTROLBAR_ROWS = 1;\n\nconst userRows = (state = DEFAULT_STATE_CONTROLBAR_ROWS, action) => {\n  switch (action.type) {\n    case SET_CONTROLBAR_USER_ROWS:\n      return validateReducer(action.value, DEFAULT_STATE_CONTROLBAR_ROWS);\n\n    default:\n      return state;\n  }\n};\n\nexport default combineReducers({\n  userRows\n});\n/**\n * Selectors that point to specific props in the state object\n * @function\n * @param {Object} state\n * @returns {Object}\n */\n\nexport const sGetControlBarRoot = state => state.controlBar; // Selector dependency level 2\n\nexport const sGetControlBarUserRows = state => sGetControlBarRoot(state).userRows;","import { TEXT, SPACER } from './itemTypes';\nimport { getGridItemProperties } from '../components/ItemGrid/gridUtil';\nexport const spacerContent = 'SPACER_ITEM_FOR_DASHBOARD_LAYOUT_CONVENIENCE';\nexport const emptyTextItemContent = 'TEXT_ITEM_WITH_NO_CONTENT';\n\nconst isBackendSpacerType = item => item.type === TEXT && item.text === spacerContent;\n\nconst isUiSpacerType = item => item.type === SPACER;\n\nconst isTextType = item => item.type === TEXT && item.text !== spacerContent;\n\nexport const convertUiItemsToBackend = items => items.map(item => {\n  let text = null;\n\n  if (isUiSpacerType(item)) {\n    text = spacerContent;\n  } else if (isTextType(item)) {\n    text = item.text || emptyTextItemContent;\n  }\n\n  return { ...item,\n    ...(text ? {\n      text\n    } : {})\n  };\n});\nexport const convertBackendItemsToUi = items => items.map(item => {\n  const type = isBackendSpacerType(item) ? SPACER : item.type;\n  const gridProperties = getGridItemProperties(item.id);\n  const text = isTextType(item) ? item.text === emptyTextItemContent ? '' : item.text : null;\n  return { ...item,\n    ...(text !== null ? {\n      text\n    } : {}),\n    type,\n    ...gridProperties\n  };\n});","/** @module reducers/dashboards */\nimport arrayFrom from 'd2-utilizr/lib/arrayFrom';\nimport arraySort from 'd2-utilizr/lib/arraySort';\nimport { orArray, orObject } from '../modules/util';\nimport { convertBackendItemsToUi } from '../modules/uiBackendItemConverter';\nexport const SET_DASHBOARDS = 'SET_DASHBOARDS';\nexport const ADD_DASHBOARDS = 'ADD_DASHBOARDS';\nexport const SET_DASHBOARD_STARRED = 'SET_DASHBOARD_STARRED';\nexport const SET_DASHBOARD_DISPLAY_NAME = 'SET_DASHBOARD_DISPLAY_NAME';\nexport const SET_DASHBOARD_ITEMS = 'SET_DASHBOARD_ITEMS';\nexport const DEFAULT_STATE_DASHBOARDS = {\n  byId: null,\n  items: []\n};\nexport const EMPTY_DASHBOARD = {}; // reducer helper functions\n\nconst updateDashboardProp = ({\n  state,\n  dashboardId,\n  prop,\n  value\n}) => ({\n  byId: { ...state.byId,\n    [dashboardId]: { ...state.byId[dashboardId],\n      [prop]: value\n    }\n  },\n  items: state.items\n});\n/**\n * Reducer that computes and returns the new state based on the given action\n * @function\n * @param {Object} state The current state\n * @param {Object} action The action to be evaluated\n * @returns {Object}\n */\n\n\nexport default ((state = DEFAULT_STATE_DASHBOARDS, action) => {\n  switch (action.type) {\n    case SET_DASHBOARDS:\n      {\n        return {\n          byId: action.value,\n          items: []\n        };\n      }\n\n    case ADD_DASHBOARDS:\n      {\n        return { ...state,\n          byId: { ...state.byId,\n            ...action.value\n          }\n        };\n      }\n\n    case SET_DASHBOARD_STARRED:\n      {\n        return updateDashboardProp({\n          state,\n          dashboardId: action.dashboardId,\n          prop: 'starred',\n          value: action.value\n        });\n      }\n\n    case SET_DASHBOARD_DISPLAY_NAME:\n      {\n        return updateDashboardProp({\n          state,\n          dashboardId: action.dashboardId,\n          prop: 'displayName',\n          value: action.value\n        });\n      }\n\n    case SET_DASHBOARD_ITEMS:\n      {\n        return { ...state,\n          items: action.value\n        };\n      }\n\n    default:\n      return state;\n  }\n}); // root selector\n\nexport const sGetDashboardsRoot = state => state.dashboards; // selector level 1\n\n/**\n * Selector which returns a dashboard by id from the state object\n * If no matching dashboard is found it returns undefined\n * If dashboards.byId is null, then the dashboards api request\n * has not yet completed. If dashboards.byId is an empty object\n * then the dashboards api request is complete, but no dashboards\n * were returned\n *\n * @function\n * @param {Object} state The current state\n * @param {Number} id The id of the dashboard\n * @returns {Object | undefined}\n */\n\nexport const sGetDashboardById = (state, id) => orObject(sGetDashboardsRoot(state).byId)[id];\nexport const sDashboardsIsFetching = state => {\n  return sGetDashboardsRoot(state).byId === null;\n};\n/**\n * Selector which returns all dashboards (the byId object)\n *\n * @function\n * @param {Object} state The current state\n * @returns {Object | undefined}\n */\n\nexport const sGetAllDashboards = state => orObject(sGetDashboardsRoot(state).byId);\n/**\n * Selector which returns the current dashboard items\n *\n * @function\n * @param {Object} state The current state\n * @returns {Array}\n */\n\nexport const sGetDashboardItems = state => sGetDashboardsRoot(state).items; // selector level 2\n\nexport const sGetStarredDashboards = state => Object.values(sGetAllDashboards(state)).filter(dashboard => dashboard.starred === true);\nexport const sGetUnstarredDashboards = state => Object.values(sGetAllDashboards(state)).filter(dashboard => dashboard.starred === false); // selector level 3\n\nexport const sGetStarredDashboardIds = state => {\n  return sGetStarredDashboards(state).map(dashboard => dashboard.id);\n};\nexport const sGetUnstarredDashboardIds = state => sGetUnstarredDashboards(state).map(dashboard => dashboard.id);\nexport const sGetDashboardsSortedByStarred = state => [...arraySort(sGetStarredDashboards(state), 'ASC', 'displayName'), ...arraySort(sGetUnstarredDashboards(state), 'ASC', 'displayName')]; // utils\n\n/**\n * Returns the array of dashboards, customized for ui\n * @function\n * @param {Array} data The original dashboard list\n * @returns {Array}\n */\n\nexport const getCustomDashboards = data => arrayFrom(data).map(d => ({\n  id: d.id,\n  name: d.name,\n  displayName: d.displayName,\n  description: d.description,\n  displayDescription: d.displayDescription,\n  starred: d.favorite,\n  owner: d.user.name,\n  created: d.created.split('T').join(' ').substr(0, 16),\n  lastUpdated: d.lastUpdated.split('T').join(' ').substr(0, 16),\n  access: d.access,\n  numberOfItems: orArray(d.dashboardItems).length,\n  dashboardItems: convertBackendItemsToUi(d.dashboardItems)\n}));","/** @module reducers/selected */\nimport { combineReducers } from 'redux';\nimport { validateReducer } from '../modules/util';\nexport const SET_SELECTED_ID = 'SET_SELECTED_ID';\nexport const SET_SELECTED_ISLOADING = 'SET_SELECTED_ISLOADING';\nexport const SET_SELECTED_SHOWDESCRIPTION = 'SET_SELECTED_SHOWDESCRIPTION';\nexport const SET_SELECTED_ITEM_ACTIVE_TYPE = 'SET_SELECTED_ITEM_ACTIVE_TYPE';\nexport const CLEAR_SELECTED_ITEM_ACTIVE_TYPES = 'CLEAR_SELECTED_ITEM_ACTIVE_TYPES';\nexport const DEFAULT_STATE_SELECTED_ID = null;\nexport const DEFAULT_STATE_SELECTED_ISLOADING = false;\nexport const DEFAULT_STATE_SELECTED_SHOWDESCRIPTION = false;\nexport const DEFAULT_STATE_SELECTED_ITEM_ACTIVE_TYPES = {};\nexport const NON_EXISTING_DASHBOARD_ID = '0';\n/**\n * Reducer functions that computes and returns the new state based on the given action\n * @function\n * @param {Object} state The current state\n * @param {Object} action The action to be evaluated\n */\n\nconst id = (state = DEFAULT_STATE_SELECTED_ID, action) => {\n  switch (action.type) {\n    case SET_SELECTED_ID:\n      return validateReducer(action.value, DEFAULT_STATE_SELECTED_ID);\n\n    default:\n      return state;\n  }\n};\n\nconst isLoading = (state = DEFAULT_STATE_SELECTED_ISLOADING, action) => {\n  switch (action.type) {\n    case SET_SELECTED_ISLOADING:\n      return validateReducer(action.value, DEFAULT_STATE_SELECTED_ISLOADING);\n\n    default:\n      return state;\n  }\n};\n\nconst showDescription = (state = DEFAULT_STATE_SELECTED_SHOWDESCRIPTION, action) => {\n  switch (action.type) {\n    case SET_SELECTED_SHOWDESCRIPTION:\n      return validateReducer(action.value, DEFAULT_STATE_SELECTED_SHOWDESCRIPTION);\n\n    default:\n      return state;\n  }\n};\n\nconst itemActiveTypes = (state = DEFAULT_STATE_SELECTED_ITEM_ACTIVE_TYPES, action) => {\n  switch (action.type) {\n    case SET_SELECTED_ITEM_ACTIVE_TYPE:\n      {\n        return { ...state,\n          [action.id]: action.activeType\n        };\n      }\n\n    case CLEAR_SELECTED_ITEM_ACTIVE_TYPES:\n      {\n        return DEFAULT_STATE_SELECTED_ITEM_ACTIVE_TYPES;\n      }\n\n    default:\n      return state;\n  }\n};\n\nexport default combineReducers({\n  id,\n  isLoading,\n  showDescription,\n  itemActiveTypes\n}); // Selectors\n\nexport const sGetSelectedRoot = state => state.selected;\nexport const sGetSelectedId = state => sGetSelectedRoot(state).id;\nexport const sGetSelectedIsLoading = state => sGetSelectedRoot(state).isLoading;\nexport const sGetSelectedShowDescription = state => sGetSelectedRoot(state).showDescription;\nexport const sGetSelectedItemActiveType = (state, id) => sGetSelectedRoot(state).itemActiveTypes[id];","import { getInstance } from 'd2';\nexport const NAMESPACE = 'dashboard';\nexport const hasNamespace = async (d2) => await d2.currentUser.dataStore.has(NAMESPACE);\nexport const getNamespace = async (d2, hasNamespace) => hasNamespace ? await d2.currentUser.dataStore.get(NAMESPACE) : await d2.currentUser.dataStore.create(NAMESPACE);\nexport const apiPostUserDataStoreValue = async (key, value) => {\n  const d2 = await getInstance();\n  const ns = await getNamespace(d2, hasNamespace);\n  ns.set(key, value);\n};\nexport const apiGetUserDataStoreValue = async (key, defaultValue) => {\n  const d2 = await getInstance();\n  const namespace = await getNamespace(d2, await hasNamespace(d2));\n  const hasKey = namespace?.keys?.find(k => k === key);\n\n  if (hasKey) {\n    return await namespace.get(key);\n  } else {\n    await apiPostUserDataStoreValue(key, defaultValue, namespace);\n    console.log('(These errors to /userDataStore can be ignored)');\n    return defaultValue;\n  }\n};","import { SET_CONTROLBAR_USER_ROWS } from '../reducers/controlBar';\nimport { apiGetControlBarRows } from '../api/controlBar'; // actions\n\nexport const acSetControlBarUserRows = rows => ({\n  type: SET_CONTROLBAR_USER_ROWS,\n  value: rows\n}); // thunks\n\nexport const tSetControlBarRows = () => async dispatch => {\n  const onSuccess = rows => {\n    dispatch(acSetControlBarUserRows(rows));\n  };\n\n  const onError = error => {\n    console.log('Error (apiGetControlBarRows): ', error);\n    return error;\n  };\n\n  try {\n    const controlBarRows = await apiGetControlBarRows();\n    return onSuccess(controlBarRows);\n  } catch (err) {\n    return onError(err);\n  }\n};","import { apiGetUserDataStoreValue, apiPostUserDataStoreValue } from './userDataStore';\nimport { DEFAULT_STATE_CONTROLBAR_ROWS } from '../reducers/controlBar';\nconst KEY_CONTROLBAR_ROWS = 'controlBarRows';\nexport const apiGetControlBarRows = async () => await apiGetUserDataStoreValue(KEY_CONTROLBAR_ROWS, DEFAULT_STATE_CONTROLBAR_ROWS);\nexport const apiPostControlBarRows = async (value) => await apiPostUserDataStoreValue(KEY_CONTROLBAR_ROWS, value);","import React, { useState, useEffect } from 'react';\nimport { connect } from 'react-redux';\nimport { Link, withRouter } from 'react-router-dom';\nimport cx from 'classnames';\nimport arraySort from 'd2-utilizr/lib/arraySort';\nimport PropTypes from 'prop-types';\nimport ControlBar from './ControlBar';\nimport Chip from './DashboardItemChip';\nimport AddCircleIcon from '../../icons/AddCircle';\nimport Filter from './Filter';\nimport ShowMoreButton from './ShowMoreButton';\nimport { FIRST_ROW_PADDING_HEIGHT, MIN_ROW_COUNT, getRowsHeight, getControlBarHeight, getNumRowsFromHeight } from './controlBarDimensions';\nimport { sGetDashboardsFilter } from '../../reducers/dashboardsFilter';\nimport { sGetControlBarUserRows } from '../../reducers/controlBar';\nimport { sGetAllDashboards } from '../../reducers/dashboards';\nimport { sGetSelectedId } from '../../reducers/selected';\nimport { acSetControlBarUserRows } from '../../actions/controlBar';\nimport { apiPostControlBarRows } from '../../api/controlBar';\nimport classes from './styles/DashboardsBar.module.css';\nexport const MAX_ROW_COUNT = 10;\nexport const DashboardsBar = ({\n  userRows,\n  onChangeHeight,\n  history,\n  dashboards,\n  selectedId,\n  filterText\n}) => {\n  const [rows, setRows] = useState(MIN_ROW_COUNT);\n  useEffect(() => {\n    setRows(userRows);\n  }, [userRows]);\n\n  const isMaxHeight = () => rows === MAX_ROW_COUNT;\n\n  const adjustHeight = newHeight => {\n    const newRows = Math.max(MIN_ROW_COUNT, getNumRowsFromHeight(newHeight - 52) // don't rush the transition to a bigger row count\n    );\n\n    if (newRows !== rows) {\n      onChangeHeight(Math.min(newRows, MAX_ROW_COUNT));\n    }\n  };\n\n  const onEndDrag = () => apiPostControlBarRows(rows);\n\n  const toggleMaxHeight = () => {\n    const newRows = isMaxHeight() ? userRows : MAX_ROW_COUNT;\n    setRows(newRows);\n  };\n\n  const onSelectDashboard = () => {\n    const id = getFilteredDashboards()[0].id;\n    history.push(id);\n  };\n\n  const getFilteredDashboards = () => {\n    const filteredDashboards = arraySort(Object.values(dashboards).filter(d => d.displayName.toLowerCase().includes(filterText.toLowerCase())), 'ASC', 'displayName');\n    return [...filteredDashboards.filter(d => d.starred), ...filteredDashboards.filter(d => !d.starred)];\n  };\n\n  const overflowYClass = isMaxHeight() ? classes.overflowYAuto : classes.overflowYHidden;\n  return <ControlBar height={getControlBarHeight(rows)} onChangeHeight={adjustHeight} onEndDrag={onEndDrag} editMode={false}>\n            <div className={cx(classes.container, overflowYClass)} style={{\n      height: getRowsHeight(rows) + FIRST_ROW_PADDING_HEIGHT\n    }}>\n                <div className={classes.leftControls}>\n                    <Link className={classes.newLink} to={'/new'}>\n                        <AddCircleIcon />\n                    </Link>\n                    <Filter onKeypressEnter={onSelectDashboard} />\n                </div>\n                {getFilteredDashboards().map(dashboard => <Chip key={dashboard.id} label={dashboard.displayName} starred={dashboard.starred} dashboardId={dashboard.id} selected={dashboard.id === selectedId} />)}\n            </div>\n            <ShowMoreButton onClick={toggleMaxHeight} isMaxHeight={isMaxHeight()} disabled={userRows === MAX_ROW_COUNT} />\n        </ControlBar>;\n};\nDashboardsBar.propTypes = {\n  dashboards: PropTypes.object,\n  filterText: PropTypes.string,\n  history: PropTypes.object,\n  selectedId: PropTypes.string,\n  userRows: PropTypes.number,\n  onChangeHeight: PropTypes.func\n};\n\nconst mapStateToProps = state => ({\n  dashboards: sGetAllDashboards(state),\n  filterText: sGetDashboardsFilter(state),\n  selectedId: sGetSelectedId(state),\n  userRows: sGetControlBarUserRows(state)\n});\n\nconst mapDispatchToProps = {\n  onChangeHeight: acSetControlBarUserRows\n};\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(DashboardsBar));","import React from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { getControlBarHeight, MIN_ROW_COUNT } from '../ControlBar/controlBarDimensions';\nimport { sGetControlBarUserRows } from '../../reducers/controlBar';\nimport { DRAG_HANDLE_HEIGHT } from '../ControlBar/ControlBar';\n\nconst DashboardVerticalOffset = props => {\n  const rows = props.editMode ? MIN_ROW_COUNT : props.userRows;\n  const marginTop = getControlBarHeight(rows) + DRAG_HANDLE_HEIGHT;\n  return <div className=\"page-container-top-margin\" style={{\n    marginTop\n  }} />;\n};\n\nconst mapStateToProps = state => ({\n  userRows: sGetControlBarUserRows(state)\n});\n\nDashboardVerticalOffset.propTypes = {\n  editMode: PropTypes.bool,\n  userRows: PropTypes.number\n};\nexport default connect(mapStateToProps)(DashboardVerticalOffset);","import React from 'react';\nimport { colors } from '@dhis2/ui';\nimport PropTypes from 'prop-types';\nexport const NoContentMessage = ({\n  text\n}) => <div style={{\n  padding: '50px 10px',\n  textAlign: 'center',\n  fontSize: '15px',\n  fontWeight: 500,\n  color: colors.grey600\n}}>\n        {text}\n    </div>;\nNoContentMessage.propTypes = {\n  text: PropTypes.string\n};\nexport default NoContentMessage;","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { MenuItem, colors } from '@dhis2/ui';\n\nconst HeaderMenuItem = ({\n  title\n}) => <MenuItem dense key={title} disabled label={<span style={{\n  color: colors.grey800,\n  fontWeight: '600'\n}}>\n                {title}\n            </span>} />;\n\nHeaderMenuItem.propTypes = {\n  title: PropTypes.string.isRequired\n};\nexport default HeaderMenuItem;","import React from 'react';\nimport { colors } from '@dhis2/ui';\nimport PropTypes from 'prop-types';\n\nconst LaunchIcon = ({\n  className\n}) => <svg className={className} xmlns=\"http://www.w3.org/2000/svg\" width=\"12\" height=\"12\" fill={colors.grey600} viewBox=\"0 0 24 24\">\n        <path d=\"M0 0h24v24H0z\" fill=\"none\" />\n        <path d=\"M19 19H5V5h7V3H5c-1.11 0-2 .9-2 2v14c0 1.1.89 2 2 2h14c1.1 0 2-.9 2-2v-7h-2v7zM14 3v2h3.59l-9.83 9.83 1.41 1.41L19 6.41V10h2V3h-7z\" />\n    </svg>;\n\nLaunchIcon.propTypes = {\n  className: PropTypes.string\n};\nexport default LaunchIcon;","import React from 'react';\nimport { MenuItem, colors } from '@dhis2/ui';\nimport i18n from '@dhis2/d2-i18n';\nimport PropTypes from 'prop-types';\nimport { visTypeIcons } from '@dhis2/analytics';\nimport { getItemIcon, VISUALIZATION } from '../../modules/itemTypes';\nimport LaunchIcon from '../../icons/Launch';\nimport classes from './styles/ContentMenuItem.module.css';\n\nconst LaunchLink = ({\n  url\n}) => <a onClick={e => e.stopPropagation()} className={classes.launchLink} target=\"_blank\" rel=\"noopener noreferrer\" href={url}>\n        <LaunchIcon />\n    </a>;\n\nLaunchLink.propTypes = {\n  url: PropTypes.string\n};\n\nconst InsertButton = () => <button className={classes.buttonInsert}>{i18n.t('Insert')}</button>;\n\nconst ContentMenuItem = ({\n  type,\n  name,\n  onInsert,\n  url,\n  visType\n}) => {\n  const ItemIcon = getItemIcon(type);\n  const renderedItemIcon = type === VISUALIZATION ? visTypeIcons[visType] : <ItemIcon style={{\n    fill: colors.grey600\n  }} />;\n  return <MenuItem dense onClick={onInsert} label={<div className={classes.menuItem}>\n                    <div className={classes.label}>\n                        <span style={{\n        marginRight: '6px'\n      }}>\n                            {renderedItemIcon}\n                        </span>\n                        <span>{name}</span>\n                        {url ? <LaunchLink url={url} /> : null}\n                    </div>\n                    <InsertButton />\n                </div>} />;\n};\n\nContentMenuItem.propTypes = {\n  name: PropTypes.string,\n  type: PropTypes.string,\n  url: PropTypes.string,\n  visType: PropTypes.string,\n  onInsert: PropTypes.func\n};\nexport default ContentMenuItem;","/** @module reducers/editDashboard */\nimport update from 'immutability-helper';\nimport isEmpty from 'lodash/isEmpty';\nimport { orArray, orObject } from '../modules/util';\nexport const RECEIVED_EDIT_DASHBOARD = 'RECEIVED_EDIT_DASHBOARD';\nexport const RECEIVED_NOT_EDITING = 'RECEIVED_NOT_EDITING';\nexport const START_NEW_DASHBOARD = 'START_NEW_DASHBOARD';\nexport const RECEIVED_TITLE = 'RECEIVED_TITLE';\nexport const RECEIVED_DESCRIPTION = 'RECEIVED_DESCRIPTION';\nexport const ADD_DASHBOARD_ITEM = 'ADD_DASHBOARD_ITEM';\nexport const REMOVE_DASHBOARD_ITEM = 'REMOVE_DASHBOARD_ITEM';\nexport const UPDATE_DASHBOARD_ITEM = 'UPDATE_DASHBOARD_ITEM';\nexport const RECEIVED_DASHBOARD_LAYOUT = 'RECEIVED_DASHBOARD_LAYOUT';\nexport const SET_PRINT_PREVIEW_VIEW = 'SET_PRINT_PREVIEW_VIEW';\nexport const CLEAR_PRINT_PREVIEW_VIEW = 'CLEAR_PRINT_PREVIEW_VIEW';\nexport const DEFAULT_STATE_EDIT_DASHBOARD = {};\nexport const NEW_DASHBOARD_STATE = {\n  id: '',\n  name: '',\n  access: {},\n  description: '',\n  dashboardItems: [],\n  printPreviewView: false\n};\nexport default ((state = DEFAULT_STATE_EDIT_DASHBOARD, action) => {\n  switch (action.type) {\n    case RECEIVED_EDIT_DASHBOARD:\n      {\n        const newState = {};\n        Object.keys(NEW_DASHBOARD_STATE).map(k => newState[k] = action.value[k]);\n        newState.printPreviewView = false;\n        return newState;\n      }\n\n    case RECEIVED_NOT_EDITING:\n      return DEFAULT_STATE_EDIT_DASHBOARD;\n\n    case SET_PRINT_PREVIEW_VIEW:\n      return Object.assign({}, state, {\n        printPreviewView: true\n      });\n\n    case CLEAR_PRINT_PREVIEW_VIEW:\n      return Object.assign({}, state, {\n        printPreviewView: false\n      });\n\n    case START_NEW_DASHBOARD:\n      return NEW_DASHBOARD_STATE;\n\n    case RECEIVED_TITLE:\n      {\n        return Object.assign({}, state, {\n          name: action.value\n        });\n      }\n\n    case RECEIVED_DESCRIPTION:\n      {\n        return Object.assign({}, state, {\n          description: action.value\n        });\n      }\n\n    case ADD_DASHBOARD_ITEM:\n      if (!action.value.position) {\n        return update(state, {\n          dashboardItems: {\n            $unshift: [action.value]\n          }\n        });\n      }\n\n      return update(state, {\n        dashboardItems: {\n          $splice: [[parseInt(action.value.position), 0, action.value]]\n        }\n      });\n\n    case REMOVE_DASHBOARD_ITEM:\n      {\n        const idToRemove = action.value;\n        const dashboardItemIndex = state.dashboardItems.findIndex(item => item.id === idToRemove);\n\n        if (dashboardItemIndex > -1) {\n          return update(state, {\n            dashboardItems: {\n              $splice: [[dashboardItemIndex, 1]]\n            }\n          });\n        }\n\n        return state;\n      }\n\n    case RECEIVED_DASHBOARD_LAYOUT:\n      {\n        const stateItems = orArray(state.dashboardItems);\n        let layoutHasChanged = false;\n        const newStateItems = action.value.map(({\n          x,\n          y,\n          w,\n          h,\n          i\n        }) => {\n          const stateItem = stateItems.find(si => si.id === i);\n\n          if (!(stateItem.x === x && stateItem.y === y && stateItem.w === w && stateItem.h === h)) {\n            layoutHasChanged = true;\n            return Object.assign({}, stateItem, {\n              w,\n              h,\n              x,\n              y\n            });\n          }\n\n          return stateItem;\n        });\n        return layoutHasChanged ? { ...state,\n          dashboardItems: newStateItems\n        } : state;\n      }\n\n    case UPDATE_DASHBOARD_ITEM:\n      {\n        const dashboardItem = action.value;\n        const dashboardItemIndex = state.dashboardItems.findIndex(item => item.id === dashboardItem.id);\n\n        if (dashboardItemIndex > -1) {\n          const newState = update(state, {\n            dashboardItems: {\n              $splice: [[dashboardItemIndex, 1, Object.assign({}, dashboardItem)]]\n            }\n          });\n          return newState;\n        }\n\n        return state;\n      }\n\n    default:\n      return state;\n  }\n}); // root selector\n\nexport const sGetEditDashboardRoot = state => state.editDashboard; // selectors\n\nexport const sGetIsEditing = state => !isEmpty(state.editDashboard);\nexport const sGetIsPrintPreviewView = state => sGetEditDashboardRoot(state).printPreviewView;\nexport const sGetIsNewDashboard = state => {\n  return !isEmpty(state.editDashboard) && sGetEditDashboardRoot(state).id === '';\n};\nexport const sGetEditDashboardName = state => sGetEditDashboardRoot(state).name;\nexport const sGetEditDashboardDescription = state => sGetEditDashboardRoot(state).description;\nexport const sGetEditDashboardItems = state => orObject(sGetEditDashboardRoot(state)).dashboardItems;","import { getInstance } from 'd2';\n\nconst onError = error => console.log('Error: ', error);\n\nconst saveDashboard = (dashboard, data) => {\n  const {\n    name,\n    description,\n    dashboardItems\n  } = data;\n  dashboard.name = name;\n  dashboard.description = description;\n  dashboard.dashboardItems = dashboardItems.map(item => Object.assign({}, item, {\n    width: item.w,\n    height: item.h\n  }));\n  return dashboard.save().then(msg => msg.response.uid);\n};\n\nexport const updateDashboard = data => {\n  return getInstance().then(d2 => {\n    return d2.models.dashboards.get(data.id).then(dashboard => saveDashboard(dashboard, data));\n  }).catch(onError);\n};\nexport const postDashboard = data => {\n  return getInstance().then(d2 => {\n    const dashboard = d2.models.dashboards.create();\n    return saveDashboard(dashboard, data);\n  });\n};","export const RECEIVED_USER = 'RECEIVED_USER';\nexport const DEFAULT_STATE_USER = {\n  id: '',\n  username: '',\n  uiLocale: '',\n  isSuperuser: false\n};\nexport default ((state = DEFAULT_STATE_USER, action) => {\n  switch (action.type) {\n    case RECEIVED_USER:\n      {\n        return fromD2ToUserObj(action.value);\n      }\n\n    default:\n      return state;\n  }\n});\n\nfunction fromD2ToUserObj(d2Object) {\n  return {\n    id: d2Object.id,\n    username: d2Object.username,\n    uiLocale: d2Object.settings.keyUiLocale,\n    isSuperuser: d2Object.authorities.has('ALL')\n  };\n} // selectors\n\n\nexport const sGetUserId = state => state.user.id;\nexport const sGetUserUsername = state => state.user.username;\nexport const sGetIsSuperuser = state => state.user.isSuperuser;\nexport const sGetUiLocale = state => state.user.uiLocale;","import arrayClean from 'd2-utilizr/lib/arrayClean';\nimport { getListItemFields, getFavoritesFields, getIdNameFields } from './metadata'; // Helper functions\n\nexport const onError = error => console.log('Error: ', error); // Dashboard item\n\nexport const getDashboardItemsFields = ({\n  withFavorite\n} = {}) => arrayClean(['id', 'type', 'shape', 'x', 'y', 'width~rename(w)', 'height~rename(h)', 'messages', 'text', 'appKey', `${getListItemFields().join(',')}`, withFavorite ? `${getFavoritesFields({\n  withDimensions: withFavorite.withDimensions\n}).join(',')}` : ``]); // Dashboard\n\nexport const getDashboardFields = ({\n  withItems,\n  withFavorite\n} = {}) => arrayClean([`${getIdNameFields().join(',')}`, 'description', 'displayDescription', 'favorite', `user[${getIdNameFields({\n  rename: true\n}).join(',')}]`, 'created', 'lastUpdated', 'access', withItems ? `dashboardItems[${getDashboardItemsFields({\n  withFavorite\n}).join(',')}]` : ``]);","import { getInstance } from 'd2';\nimport arrayClean from 'd2-utilizr/lib/arrayClean';\nimport { onError, getDashboardFields } from './index'; // Get \"all\" dashboards on startup\n\nexport const apiFetchDashboards = () => getInstance().then(d2 => d2.models.dashboard.list({\n  fields: [getDashboardFields().join(','), 'dashboardItems[id]'].join(','),\n  paging: 'false'\n})).catch(onError); // Get more info about selected dashboard\n\nexport const apiFetchDashboard = id => getInstance().then(d2 => d2.models.dashboard.get(id, {\n  fields: arrayClean(getDashboardFields({\n    withItems: true,\n    withFavorite: {\n      withDimensions: false\n    }\n  })).join(',')\n})).catch(onError); // Star dashboard\n\nexport const apiStarDashboard = (id, isStarred) => {\n  const url = `dashboards/${id}/favorite`;\n  getInstance().then(d2 => {\n    if (isStarred) {\n      d2.Api.getApi().post(url);\n    } else {\n      d2.Api.getApi().delete(url);\n    }\n  });\n};\nexport const apiDeleteDashboard = id => {\n  return getInstance().then(d2 => {\n    return d2.models.dashboards.get(id).then(dashboard => dashboard.delete());\n  }).catch(onError);\n};","import { SET_DASHBOARDS, ADD_DASHBOARDS, SET_DASHBOARD_STARRED, SET_DASHBOARD_DISPLAY_NAME, SET_DASHBOARD_ITEMS } from '../reducers/dashboards';\nimport { getCustomDashboards, sGetDashboardById, sGetDashboardsSortedByStarred } from '../reducers/dashboards';\nimport { NON_EXISTING_DASHBOARD_ID } from '../reducers/selected';\nimport { sGetUserUsername } from '../reducers/user';\nimport { tSetSelectedDashboardById, acSetSelectedId } from './selected';\nimport { apiFetchDashboards, apiStarDashboard, apiDeleteDashboard } from '../api/dashboards';\nimport { getPreferredDashboardId } from '../api/localStorage';\nimport { arrayToIdMap } from '../modules/util'; // actions\n\nexport const acSetDashboards = dashboards => ({\n  type: SET_DASHBOARDS,\n  value: arrayToIdMap(getCustomDashboards(dashboards))\n});\nexport const acAppendDashboards = dashboards => ({\n  type: ADD_DASHBOARDS,\n  value: arrayToIdMap(getCustomDashboards(dashboards))\n});\nexport const acSetDashboardStarred = (dashboardId, isStarred) => ({\n  type: SET_DASHBOARD_STARRED,\n  dashboardId: dashboardId,\n  value: isStarred\n});\nexport const acSetDashboardDisplayName = (dashboardId, value) => ({\n  type: SET_DASHBOARD_DISPLAY_NAME,\n  dashboardId,\n  value\n});\nexport const acSetDashboardItems = value => ({\n  type: SET_DASHBOARD_ITEMS,\n  value\n}); // thunks\n\nexport const tFetchDashboards = () => async dispatch => {\n  const collection = await apiFetchDashboards();\n  dispatch(acSetDashboards(collection.toArray()));\n};\nexport const tSelectDashboard = id => async (dispatch, getState) => {\n  const onError = error => {\n    console.log('Error (apiFetchDashboards): ', error);\n    return error;\n  };\n\n  try {\n    const state = getState();\n    let dashboardToSelect = null;\n\n    if (id) {\n      dashboardToSelect = sGetDashboardById(state, id) || null;\n    } else {\n      const preferredId = getPreferredDashboardId(sGetUserUsername(state));\n      const dash = sGetDashboardById(state, preferredId);\n      dashboardToSelect = preferredId && dash ? dash : sGetDashboardsSortedByStarred(state)[0];\n    }\n\n    if (dashboardToSelect) {\n      dispatch(tSetSelectedDashboardById(dashboardToSelect.id));\n    } else {\n      dispatch(acSetSelectedId(NON_EXISTING_DASHBOARD_ID));\n    }\n  } catch (err) {\n    return onError(err);\n  }\n};\nexport const tStarDashboard = (id, isStarred) => async dispatch => {\n  const onSuccess = id => {\n    dispatch(acSetDashboardStarred(id, isStarred));\n    return id;\n  };\n\n  const onError = error => {\n    console.log('Error (apiStarDashboard): ', error);\n    return error;\n  };\n\n  try {\n    await apiStarDashboard(id, isStarred);\n    return onSuccess(id);\n  } catch (err) {\n    return onError(err);\n  }\n};\nexport const tDeleteDashboard = id => async dispatch => {\n  try {\n    await apiDeleteDashboard(id);\n    await dispatch(tFetchDashboards());\n    return Promise.resolve();\n  } catch (err) {\n    console.log('Error (deleteDashboard): ', err);\n    return err;\n  }\n};","import { getDimensionById, DIMENSION_ID_PERIOD, DIMENSION_ID_ORGUNIT } from '@dhis2/analytics';\nexport const SET_DIMENSIONS = 'SET_DIMENSIONS';\nexport const DEFAULT_DIMENSIONS = [getDimensionById(DIMENSION_ID_PERIOD), getDimensionById(DIMENSION_ID_ORGUNIT)];\nexport default ((state = DEFAULT_DIMENSIONS, action) => {\n  switch (action.type) {\n    case SET_DIMENSIONS:\n      {\n        return [...DEFAULT_DIMENSIONS, ...action.value];\n      }\n\n    default:\n      return state;\n  }\n});\nexport const sGetDimensions = state => state.dimensions;","import { sGetDimensions } from './dimensions';\nimport { createSelector } from 'reselect';\nexport const CLEAR_ITEM_FILTERS = 'CLEAR_ITEM_FILTERS';\nexport const SET_ITEM_FILTERS = 'SET_ITEM_FILTERS';\nexport const ADD_ITEM_FILTER = 'ADD_ITEM_FILTER';\nexport const REMOVE_ITEM_FILTER = 'REMOVE_ITEM_FILTER';\nexport const DEFAULT_STATE_ITEM_FILTERS = {};\nexport default ((state = DEFAULT_STATE_ITEM_FILTERS, action) => {\n  switch (action.type) {\n    case ADD_ITEM_FILTER:\n      {\n        return { ...state,\n          [action.filter.id]: action.filter.value\n        };\n      }\n\n    case REMOVE_ITEM_FILTER:\n      {\n        const newState = { ...state\n        };\n        delete newState[action.id];\n        return newState;\n      }\n\n    case SET_ITEM_FILTERS:\n      {\n        return action.filters;\n      }\n\n    case CLEAR_ITEM_FILTERS:\n      {\n        return DEFAULT_STATE_ITEM_FILTERS;\n      }\n\n    default:\n      return state;\n  }\n}); // selectors\n\nexport const sGetItemFiltersRoot = state => state.itemFilters; // simplify the filters structure to:\n// [{ id: 'pe', name: 'Period', values: [{ id: 2019: name: '2019' }, {id: 'LAST_MONTH', name: 'Last month' }]}, ...]\n\nexport const sGetNamedItemFilters = createSelector([sGetItemFiltersRoot, sGetDimensions], (filters, dimensions) => Object.keys(filters).reduce((arr, id) => {\n  arr.push({\n    id: id,\n    name: dimensions.find(dimension => dimension.id === id).name,\n    values: filters[id].map(value => ({\n      id: value.id,\n      name: value.displayName || value.name\n    }))\n  });\n  return arr;\n}, []));","import { ADD_ITEM_FILTER, REMOVE_ITEM_FILTER, SET_ITEM_FILTERS, CLEAR_ITEM_FILTERS } from '../reducers/itemFilters';\nexport const FILTER_ORG_UNIT = 'ou'; // actions\n\nexport const acAddItemFilter = filter => ({\n  type: ADD_ITEM_FILTER,\n  filter\n});\nexport const acRemoveItemFilter = id => ({\n  type: REMOVE_ITEM_FILTER,\n  id\n});\nexport const acClearItemFilters = () => ({\n  type: CLEAR_ITEM_FILTERS\n});\nexport const acSetItemFilters = filters => ({\n  type: SET_ITEM_FILTERS,\n  filters\n});","import update from 'immutability-helper';\nimport { arrayToIdMap } from '../modules/util';\nexport const RECEIVED_MESSAGES = 'RECEIVED_MESSAGES';\nexport default ((state = {}, action) => {\n  switch (action.type) {\n    case RECEIVED_MESSAGES:\n      {\n        const conversations = arrayToIdMap(action.value);\n        const newState = update(state, {\n          $merge: conversations\n        });\n        return newState;\n      }\n\n    default:\n      return state;\n  }\n}); // selectors\n\nexport const sGetMessagesRoot = state => state.messages;","import { RECEIVED_MESSAGES } from '../../../reducers/messages';\nimport { getMessages } from '../../../api/messages';\n\nconst onError = (action, error) => {\n  console.log(`Error in action ${action}: ${error}`);\n  return error;\n};\n\nexport const receivedMessages = value => ({\n  type: RECEIVED_MESSAGES,\n  value\n});\nexport const tGetMessages = () => async dispatch => {\n  try {\n    const messages = await getMessages();\n    const {\n      messageConversations\n    } = messages;\n    return dispatch(receivedMessages(messageConversations));\n  } catch (err) {\n    return onError('Get Messages', err);\n  }\n};","import { getInstance } from 'd2';\nexport const getMessages = () => {\n  const fields = 'id,messageCount,lastUpdated,messageType,displayName,read,messages[id,read,sender[id,displayName],text,lastUpdated]';\n  const url = `/messageConversations?fields=${fields}&order=read:asc&pageSize=200`;\n  return getInstance().then(d2 => d2.Api.getApi().get(url)).catch(error => console.log('Error:', error));\n};","export const SET_ALERT_MESSAGE = 'SET_ALERT_MESSAGE';\nexport const CLEAR_ALERT_MESSAGE = 'CLEAR_ALERT_MESSAGE';\nexport const DEFAULT_STATE_ALERT = null;\nexport default ((state = DEFAULT_STATE_ALERT, action) => {\n  switch (action.type) {\n    case SET_ALERT_MESSAGE:\n      {\n        return action.value;\n      }\n\n    case CLEAR_ALERT_MESSAGE:\n      {\n        return DEFAULT_STATE_ALERT;\n      }\n\n    default:\n      return state;\n  }\n}); // selectors\n\nexport const sGetAlertMessage = state => state.alert;","import { SET_ALERT_MESSAGE, CLEAR_ALERT_MESSAGE } from '../reducers/alert';\nexport const acSetAlertMessage = value => ({\n  type: SET_ALERT_MESSAGE,\n  value\n});\nexport const acClearAlertMessage = () => ({\n  type: CLEAR_ALERT_MESSAGE\n});","import { orObject } from '../modules/util';\nimport objectClean from 'd2-utilizr/lib/objectClean';\n/** @module reducers/visualizations */\n\nexport const ADD_VISUALIZATION = 'ADD_VISUALIZATION';\nexport const SET_ACTIVE_VISUALIZATION_TYPE = 'SET_ACTIVE_VISUALIZATION_TYPE';\nexport const CLEAR_VISUALIZATIONS = 'CLEAR_VISUALIZATIONS';\nexport const DEFAULT_STATE_VISUALIZATIONS = {};\n\nconst isEmpty = p => p === undefined || p === null;\n\nexport default ((state = DEFAULT_STATE_VISUALIZATIONS, action) => {\n  switch (action.type) {\n    case ADD_VISUALIZATION:\n      {\n        return { ...state,\n          [action.value.id]: objectClean({ ...orObject(state[action.value.id]),\n            ...action.value\n          }, isEmpty)\n        };\n      }\n\n    case CLEAR_VISUALIZATIONS:\n      {\n        return DEFAULT_STATE_VISUALIZATIONS;\n      }\n\n    default:\n      return state;\n  }\n}); // root selector\n\nexport const sGetVisualizationsRoot = state => state.visualizations; // selectors level 1\n\nexport const sGetVisualization = (state, id) => {\n  return sGetVisualizationsRoot(state)[id];\n};","import { ADD_VISUALIZATION, CLEAR_VISUALIZATIONS } from '../reducers/visualizations';\nexport const acAddVisualization = value => ({\n  type: ADD_VISUALIZATION,\n  value\n});\nexport const acClearVisualizations = () => ({\n  type: CLEAR_VISUALIZATIONS\n});","import i18n from '@dhis2/d2-i18n';\nimport { getCustomDashboards, sGetDashboardById } from '../reducers/dashboards';\nimport { SET_SELECTED_ID, SET_SELECTED_ISLOADING, SET_SELECTED_SHOWDESCRIPTION, SET_SELECTED_ITEM_ACTIVE_TYPE, CLEAR_SELECTED_ITEM_ACTIVE_TYPES, sGetSelectedIsLoading, sGetSelectedId } from '../reducers/selected';\nimport { sGetUserUsername } from '../reducers/user';\nimport { acSetDashboardItems, acAppendDashboards } from './dashboards';\nimport { acClearItemFilters } from './itemFilters';\nimport { tGetMessages } from '../components/Item/MessagesItem/actions';\nimport { acSetAlertMessage, acClearAlertMessage } from './alert';\nimport { acAddVisualization, acClearVisualizations } from './visualizations';\nimport { apiFetchDashboard } from '../api/dashboards';\nimport { storePreferredDashboardId } from '../api/localStorage';\nimport { apiGetShowDescription, apiPostShowDescription } from '../api/description';\nimport { withShape } from '../components/ItemGrid/gridUtil';\nimport { extractFavorite } from '../components/Item/VisualizationItem/plugin';\nimport { REPORT_TABLE, CHART, MAP, EVENT_REPORT, EVENT_CHART, MESSAGES } from '../modules/itemTypes'; // actions\n\nexport const acSetSelectedId = value => ({\n  type: SET_SELECTED_ID,\n  value\n});\nexport const acSetSelectedIsLoading = value => ({\n  type: SET_SELECTED_ISLOADING,\n  value\n});\nexport const acSetSelectedShowDescription = value => ({\n  type: SET_SELECTED_SHOWDESCRIPTION,\n  value\n});\nexport const acSetSelectedItemActiveType = (id, activeType) => {\n  const action = {\n    type: SET_SELECTED_ITEM_ACTIVE_TYPE,\n    id,\n    activeType\n  };\n  return action;\n};\nexport const acClearSelectedItemActiveTypes = () => ({\n  type: CLEAR_SELECTED_ITEM_ACTIVE_TYPES\n}); // thunks\n\nexport const tSetSelectedDashboardById = id => async (dispatch, getState) => {\n  dispatch(acSetSelectedIsLoading(true));\n  const alertTimeout = setTimeout(() => {\n    const name = sGetDashboardById(getState(), id)?.displayName;\n\n    if (sGetSelectedIsLoading(getState()) && name) {\n      dispatch(acSetAlertMessage(i18n.t('Loading dashboard – {{name}}', {\n        name\n      })));\n    }\n  }, 500);\n\n  const onSuccess = selected => {\n    dispatch(acAppendDashboards(selected));\n    const customDashboard = getCustomDashboards(selected)[0];\n    dispatch(acSetDashboardItems(withShape(customDashboard.dashboardItems)));\n    storePreferredDashboardId(sGetUserUsername(getState()), id);\n\n    if (id !== sGetSelectedId(getState())) {\n      dispatch(acClearItemFilters());\n      dispatch(acClearVisualizations());\n      dispatch(acClearSelectedItemActiveTypes());\n    }\n\n    customDashboard.dashboardItems.forEach(item => {\n      switch (item.type) {\n        case REPORT_TABLE:\n        case CHART:\n        case MAP:\n        case EVENT_REPORT:\n        case EVENT_CHART:\n          dispatch(acAddVisualization(extractFavorite(item)));\n          break;\n\n        case MESSAGES:\n          dispatch(tGetMessages(id));\n          break;\n\n        default:\n          break;\n      }\n    });\n    dispatch(acSetSelectedId(id));\n    dispatch(acSetSelectedIsLoading(false));\n    clearTimeout(alertTimeout);\n    dispatch(acClearAlertMessage());\n    return selected;\n  };\n\n  const onError = error => {\n    console.log('Error: ', error);\n    return error;\n  };\n\n  try {\n    const dashboard = await apiFetchDashboard(id);\n    return onSuccess(dashboard);\n  } catch (err) {\n    return onError(err);\n  }\n};\nexport const tSetShowDescription = () => async dispatch => {\n  const onSuccess = value => {\n    dispatch(acSetSelectedShowDescription(value));\n  };\n\n  const onError = error => {\n    console.log('Error (apiGetShowDescription): ', error);\n    return error;\n  };\n\n  try {\n    const showDescription = await apiGetShowDescription();\n    return onSuccess(showDescription);\n  } catch (err) {\n    return onError(err);\n  }\n};\nexport const tUpdateShowDescription = value => async dispatch => {\n  const onSuccess = () => {\n    dispatch(acSetSelectedShowDescription(value));\n  };\n\n  const onError = error => {\n    console.log('Error (apiGetShowDescription): ', error);\n    return error;\n  };\n\n  try {\n    await apiPostShowDescription(value);\n    return onSuccess();\n  } catch (err) {\n    return onError(err);\n  }\n};","export const getPreferredDashboardId = username => localStorage.getItem(`dhis2.dashboard.current.${username}`) || undefined;\nexport const storePreferredDashboardId = (username, dashboardId) => {\n  localStorage.setItem(`dhis2.dashboard.current.${username}`, dashboardId);\n};","import { apiGetUserDataStoreValue, apiPostUserDataStoreValue } from './userDataStore';\nimport { DEFAULT_STATE_SELECTED_SHOWDESCRIPTION } from '../reducers/selected';\nconst KEY_SHOW_DESCRIPTION = 'showDescription';\nexport const apiGetShowDescription = async () => await apiGetUserDataStoreValue(KEY_SHOW_DESCRIPTION, DEFAULT_STATE_SELECTED_SHOWDESCRIPTION);\nexport const apiPostShowDescription = async (value) => await apiPostUserDataStoreValue(KEY_SHOW_DESCRIPTION, value);","import { generateUid } from 'd2/uid';\nimport i18n from '@dhis2/d2-i18n';\nimport { RECEIVED_EDIT_DASHBOARD, START_NEW_DASHBOARD, RECEIVED_NOT_EDITING, RECEIVED_TITLE, RECEIVED_DESCRIPTION, RECEIVED_DASHBOARD_LAYOUT, ADD_DASHBOARD_ITEM, UPDATE_DASHBOARD_ITEM, REMOVE_DASHBOARD_ITEM, SET_PRINT_PREVIEW_VIEW, CLEAR_PRINT_PREVIEW_VIEW } from '../reducers/editDashboard';\nimport { sGetEditDashboardRoot } from '../reducers/editDashboard';\nimport { updateDashboard, postDashboard } from '../api/editDashboard';\nimport { tSetSelectedDashboardById } from '../actions/selected';\nimport { NEW_ITEM_SHAPE, getGridItemProperties, getPageBreakItemShape, getPrintTitlePageItemShape } from '../components/ItemGrid/gridUtil';\nimport { itemTypeMap, PAGEBREAK, PRINT_TITLE_PAGE } from '../modules/itemTypes';\nimport { convertUiItemsToBackend } from '../modules/uiBackendItemConverter';\n\nconst onError = error => {\n  console.log('Error (Saving Dashboard): ', error);\n  return error;\n}; // actions\n\n\nexport const acSetEditDashboard = (dashboard, items) => {\n  const val = { ...dashboard,\n    dashboardItems: items\n  };\n  return {\n    type: RECEIVED_EDIT_DASHBOARD,\n    value: val\n  };\n};\nexport const acSetEditNewDashboard = () => ({\n  type: START_NEW_DASHBOARD\n});\nexport const acClearEditDashboard = () => ({\n  type: RECEIVED_NOT_EDITING\n});\nexport const acSetPrintPreviewView = () => ({\n  type: SET_PRINT_PREVIEW_VIEW\n});\nexport const acClearPrintPreviewView = () => ({\n  type: CLEAR_PRINT_PREVIEW_VIEW\n});\nexport const acSetDashboardTitle = value => ({\n  type: RECEIVED_TITLE,\n  value\n});\nexport const acSetDashboardDescription = value => ({\n  type: RECEIVED_DESCRIPTION,\n  value\n});\nexport const acUpdateDashboardLayout = value => ({\n  type: RECEIVED_DASHBOARD_LAYOUT,\n  value\n});\nexport const acAddDashboardItem = item => {\n  const type = item.type;\n  delete item.type;\n  const itemPropName = itemTypeMap[type].propName;\n  const id = generateUid();\n  const gridItemProperties = getGridItemProperties(id);\n  let shape;\n\n  if (type === PAGEBREAK) {\n    const yPos = item.yPos || 0;\n    shape = getPageBreakItemShape(yPos, item.isStatic);\n  } else if (type === PRINT_TITLE_PAGE) {\n    shape = getPrintTitlePageItemShape();\n  } else {\n    shape = NEW_ITEM_SHAPE;\n  }\n\n  return {\n    type: ADD_DASHBOARD_ITEM,\n    value: {\n      id,\n      type,\n      position: item.position || null,\n      [itemPropName]: item.content,\n      ...NEW_ITEM_SHAPE,\n      ...gridItemProperties,\n      ...shape\n    }\n  };\n};\nexport const acUpdateDashboardItem = item => ({\n  type: UPDATE_DASHBOARD_ITEM,\n  value: item\n});\nexport const acRemoveDashboardItem = value => ({\n  type: REMOVE_DASHBOARD_ITEM,\n  value\n}); // thunks\n\nexport const tSaveDashboard = () => async (dispatch, getState) => {\n  const dashboard = sGetEditDashboardRoot(getState());\n  const dashboardToSave = { ...dashboard,\n    dashboardItems: convertUiItemsToBackend(dashboard.dashboardItems),\n    name: dashboard.name || i18n.t('Untitled dashboard')\n  };\n\n  try {\n    const dashboardId = dashboardToSave.id ? await updateDashboard(dashboardToSave) : await postDashboard(dashboardToSave);\n    dispatch(acClearEditDashboard());\n    await dispatch(tSetSelectedDashboardById(dashboardId));\n    return Promise.resolve(dashboardId);\n  } catch (error) {\n    onError(error);\n  }\n};","import i18n from '@dhis2/d2-i18n';\nimport { VISUALIZATION, MAP, EVENT_CHART, EVENT_REPORT, USERS, REPORTS, RESOURCES, APP, MESSAGES, TEXT, SPACER } from '../../modules/itemTypes';\nexport const singleItems = [{\n  id: 'additional',\n  header: i18n.t('Additional items'),\n  items: [{\n    type: TEXT,\n    name: i18n.t('Text box'),\n    content: ''\n  }, {\n    type: MESSAGES,\n    name: i18n.t('Messages'),\n    content: 'true'\n  }, {\n    type: SPACER,\n    name: i18n.t('Spacer'),\n    content: ''\n  }]\n}]; // categorizedItems are grouped in the item selector menu\n\nexport const categorizedItems = [VISUALIZATION, MAP, EVENT_REPORT, EVENT_CHART, USERS, REPORTS, RESOURCES, APP]; // listItemTypes are included in a single dashboard item\n\nexport const listItemTypes = [REPORTS, RESOURCES, USERS];","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport i18n from '@dhis2/d2-i18n';\nimport { MenuItem, Divider } from '@dhis2/ui';\nimport HeaderMenuItem from './HeaderMenuItem';\nimport ContentMenuItem from './ContentMenuItem';\nimport { tAddListItemContent } from './actions';\nimport { acAddDashboardItem } from '../../actions/editDashboard';\nimport { getItemUrl, APP, VISUALIZATION } from '../../modules/itemTypes';\nimport { categorizedItems, listItemTypes } from './selectableItems';\nimport classes from './styles/CategorizedMenuGroup.module.css';\n\nclass CategorizedMenuGroup extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      seeMore: false\n    };\n  }\n\n  addItem = item => () => {\n    const {\n      type,\n      acAddDashboardItem,\n      tAddListItemContent\n    } = this.props;\n\n    if (type === APP) {\n      acAddDashboardItem({\n        type,\n        content: item.key\n      });\n    } else {\n      const newItem = {\n        id: item.id,\n        name: item.displayName || item.name\n      };\n\n      if (listItemTypes.includes(type)) {\n        tAddListItemContent(type, newItem);\n      } else {\n        acAddDashboardItem({\n          type,\n          content: newItem\n        });\n      }\n    }\n  };\n  toggleSeeMore = () => {\n    this.setState({\n      seeMore: !this.state.seeMore\n    });\n    this.props.onChangeItemsLimit(this.props.type);\n  };\n\n  render() {\n    const {\n      title,\n      type,\n      items,\n      hasMore\n    } = this.props;\n    return <>\n                <HeaderMenuItem title={title} />\n                {items.map(item => {\n        const itemUrl = getItemUrl(type, item, this.context.d2);\n        return <ContentMenuItem key={item.id || item.key} type={type} visType={type === VISUALIZATION ? item.type : type} name={item.displayName || item.name} onInsert={this.addItem(item)} url={itemUrl} />;\n      })}\n                {hasMore ? <MenuItem dense key={`showmore${title}`} onClick={this.toggleSeeMore} label={<button className={classes.showMoreButton}>\n                                {this.state.seeMore ? i18n.t('Show fewer') : i18n.t('Show more')}\n                            </button>} /> : null}\n                <Divider margin=\"8px 0px\" />\n            </>;\n  }\n\n}\n\nCategorizedMenuGroup.propTypes = {\n  items: PropTypes.array.isRequired,\n  title: PropTypes.string.isRequired,\n  type: PropTypes.oneOf(categorizedItems).isRequired,\n  onChangeItemsLimit: PropTypes.func.isRequired,\n  acAddDashboardItem: PropTypes.func,\n  hasMore: PropTypes.bool,\n  tAddListItemContent: PropTypes.func\n};\nCategorizedMenuGroup.contextTypes = {\n  d2: PropTypes.object.isRequired\n};\nexport default connect(null, {\n  acAddDashboardItem,\n  tAddListItemContent\n})(CategorizedMenuGroup);","import { sGetEditDashboardRoot } from '../../reducers/editDashboard';\nimport { itemTypeMap } from '../../modules/itemTypes';\nimport { acAddDashboardItem, acUpdateDashboardItem } from '../../actions/editDashboard';\nexport const tAddListItemContent = (type, content) => (dispatch, getState) => {\n  const state = getState();\n  const listItemType = itemTypeMap[type].propName;\n  const dashboardItems = sGetEditDashboardRoot(state).dashboardItems;\n  const dashboardItemIndex = dashboardItems.findIndex(item => item.type === type);\n  let dashboardItem; // Reports/Resources/Users dashboard item type already present in dashboard\n\n  if (dashboardItemIndex > -1) {\n    dashboardItem = dashboardItems[dashboardItemIndex];\n    dashboardItem[listItemType].push(content);\n    dispatch(acUpdateDashboardItem(dashboardItem));\n  } else {\n    dashboardItem = {\n      type: type,\n      content: [content]\n    };\n    dispatch(acAddDashboardItem(dashboardItem));\n  }\n};","import React from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport HeaderMenuItem from './HeaderMenuItem';\nimport ContentMenuItem from './ContentMenuItem';\nimport { acAddDashboardItem } from '../../actions/editDashboard';\nexport const SinglesMenuGroup = ({\n  acAddDashboardItem,\n  category\n}) => {\n  const addToDashboard = ({\n    type,\n    content\n  }) => () => {\n    acAddDashboardItem({\n      type,\n      content\n    });\n  };\n\n  return <>\n            <HeaderMenuItem title={category.header} />\n            {category.items.map(item => <ContentMenuItem key={item.type} type={item.type} name={item.name} onInsert={addToDashboard(item)} />)}\n        </>;\n};\nSinglesMenuGroup.propTypes = {\n  acAddDashboardItem: PropTypes.func,\n  category: PropTypes.object\n};\nexport default connect(null, {\n  acAddDashboardItem\n})(SinglesMenuGroup);","import React from 'react';\nimport PropTypes from 'prop-types';\nimport i18n from '@dhis2/d2-i18n';\nimport Popover from '@material-ui/core/Popover';\nimport { InputField, Menu } from '@dhis2/ui';\nimport CategorizedMenuGroup from './CategorizedMenuGroup';\nimport SinglesMenuGroup from './SinglesMenuGroup';\nimport { singleItems, categorizedItems } from './selectableItems';\nimport { itemTypeMap, getDefaultItemCount } from '../../modules/itemTypes';\nimport './styles/ItemSelector.css';\n\nconst ItemSearchField = props => <InputField name=\"Dashboard item search\" label={i18n.t('Search for items to add to this dashboard')} type=\"text\" onChange={props.onChange} onFocus={props.onFocus} value={props.value} />;\n\nclass ItemSelector extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      anchorEl: null,\n      open: false,\n      maxOptions: new Set(),\n      items: undefined,\n      filter: ''\n    };\n  }\n\n  closeList = () => {\n    this.setState({\n      open: false,\n      filter: ''\n    });\n  };\n  openList = (_, event) => {\n    this.fetchItems();\n    this.setState({\n      anchorEl: event.currentTarget,\n      open: true\n    });\n  };\n  setFilter = (_, event) => {\n    this.setState({\n      filter: event.target.value\n    }, this.fetchItems);\n  };\n  getCategorizedMenuGroups = () => categorizedItems.filter(type => {\n    const itemType = itemTypeMap[type];\n    return this.state.items && this.state.items[itemType.endPointName];\n  }).map(type => {\n    const itemType = itemTypeMap[type];\n    const itemCount = getDefaultItemCount(type);\n    const allItems = this.state.items[itemType.endPointName];\n    const hasMore = allItems.length > itemCount;\n    const items = this.state.maxOptions.has(itemType.id) ? allItems : allItems.slice(0, itemCount);\n    return <CategorizedMenuGroup key={type} type={type} title={itemType.pluralTitle} items={items} onChangeItemsLimit={this.fetchItems} hasMore={hasMore} />;\n  });\n  getSinglesMenuGroups = () => singleItems.map(category => <SinglesMenuGroup key={category.id} category={category} />);\n  getMenuGroups = () => this.getCategorizedMenuGroups().concat(this.getSinglesMenuGroups());\n  fetchItems = async type => {\n    if (type) {\n      const maxOptions = this.state.maxOptions;\n\n      if (maxOptions.has(type)) {\n        maxOptions.delete(type);\n      } else {\n        maxOptions.add(type);\n      }\n\n      this.setState({\n        maxOptions\n      });\n    } else {\n      this.setState({\n        maxOptions: new Set()\n      });\n    }\n\n    let queryString = '?count=11';\n\n    if ([...this.state.maxOptions.values()].length) {\n      queryString += '&max=' + [...this.state.maxOptions.values()].join('&max=');\n    }\n\n    const filter = this.state.filter ? `/${this.state.filter}` : '';\n    this.context.d2.Api.getApi().get(`dashboards/q${filter}${queryString}`).then(response => this.setState({\n      items: response\n    })).catch(console.error);\n  };\n\n  render() {\n    return <>\n                <ItemSearchField value={this.state.filter} onChange={this.setFilter} onFocus={this.openList} />\n                <Popover className=\"dashboard-item-selector\" open={this.state.open} onClose={this.closeList} anchorEl={this.state.anchorEl} anchorOrigin={{\n        horizontal: 'left',\n        vertical: 'bottom'\n      }} transformOrigin={{\n        horizontal: 'left',\n        vertical: 'top'\n      }} style={{\n        height: '70vh'\n      }} PaperProps={{\n        style: {\n          width: '700px'\n        }\n      }} disableAutoFocus={true} disableEnforceFocus={true} disableRestoreFocus={true}>\n                    <Menu maxWidth={'700px'}>{this.getMenuGroups()}</Menu>\n                </Popover>\n            </>;\n  }\n\n}\n\nItemSearchField.propTypes = {\n  value: PropTypes.string,\n  onChange: PropTypes.func,\n  onFocus: PropTypes.func\n};\nItemSelector.contextTypes = {\n  d2: PropTypes.object.isRequired\n};\nexport default ItemSelector;","import React from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport i18n from '@dhis2/d2-i18n';\nimport { InputField, TextAreaField } from '@dhis2/ui';\nimport ItemSelector from '../ItemSelector/ItemSelector';\nimport { acSetDashboardTitle, acSetDashboardDescription } from '../../actions/editDashboard';\nimport { orObject } from '../../modules/util';\nimport { sGetEditDashboardRoot } from '../../reducers/editDashboard';\nimport classes from './styles/EditTitleBar.module.css';\nexport const EditTitleBar = ({\n  name,\n  description,\n  onChangeTitle,\n  onChangeDescription\n}) => {\n  const updateTitle = (_, e) => {\n    onChangeTitle(e.target.value);\n  };\n\n  const updateDescription = (_, e) => {\n    onChangeDescription(e.target.value);\n  };\n\n  return <section className={classes.section}>\n            <div className={classes.titleDescription}>\n                <InputField className={classes.title} name=\"Dashboard title input\" label={i18n.t('Dashboard title')} type=\"text\" onChange={updateTitle} value={name} placeholder={i18n.t('Untitled dashboard')} />\n                <TextAreaField className={classes.description} name=\"Dashboard description input\" label={i18n.t('Dashboard description')} onChange={updateDescription} value={description} />\n            </div>\n            <div className={classes.itemSelector}>\n                <ItemSelector />\n            </div>\n        </section>;\n};\nEditTitleBar.propTypes = {\n  onChangeDescription: PropTypes.func.isRequired,\n  onChangeTitle: PropTypes.func.isRequired,\n  description: PropTypes.string,\n  name: PropTypes.string\n};\nEditTitleBar.defaultProps = {\n  name: '',\n  description: ''\n};\n\nconst mapStateToProps = state => {\n  const selectedDashboard = orObject(sGetEditDashboardRoot(state));\n  return {\n    name: selectedDashboard.name,\n    description: selectedDashboard.description\n  };\n};\n\nconst mapDispatchToProps = {\n  onChangeTitle: acSetDashboardTitle,\n  onChangeDescription: acSetDashboardDescription\n};\nexport default connect(mapStateToProps, mapDispatchToProps)(EditTitleBar);","import React from 'react';\nimport { colors } from '@dhis2/ui';\nexport const ThreeDots = () => <svg height=\"18\" viewBox=\"0 0 18 18\" width=\"18\" xmlns=\"http://www.w3.org/2000/svg\">\n        <path d=\"m4 7.5c-.83 0-1.5.67-1.5 1.5s.67 1.5 1.5 1.5 1.5-.67 1.5-1.5-.67-1.5-1.5-1.5zm10 0c-.83 0-1.5.67-1.5 1.5s.67 1.5 1.5 1.5 1.5-.67 1.5-1.5-.67-1.5-1.5-1.5zm-5 0c-.83 0-1.5.67-1.5 1.5s.67 1.5 1.5 1.5 1.5-.67 1.5-1.5-.67-1.5-1.5-1.5z\" fill=\"#6e7a8a\" />\n    </svg>;\nexport const SpeechBubble = () => <svg height=\"20\" viewBox=\"0 0 20 20\" width=\"20\" xmlns=\"http://www.w3.org/2000/svg\" style={{\n  margin: '3px 2px 0 2px'\n}} // Temporary fix for the misaligned icon, should be removed once the icon is replaced\n>\n        <path d=\"m20 2h-16c-1.1 0-1.99.9-1.99 2l-.01 18 4-4h14c1.1 0 2-.9 2-2v-12c0-1.1-.9-2-2-2zm-2 12h-12v-2h12zm0-3h-12v-2h12zm0-3h-12v-2h12z\" fill=\"#6e7a8a\" fillRule=\"evenodd\" transform=\"translate(-2 -2)\" />\n    </svg>;\nexport const Warning = () => <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24\" viewBox=\"0 0 24 24\" width=\"24\" fill={colors.grey600}>\n        <path d=\"M0 0h24v24H0z\" fill=\"none\" />\n        <path d=\"M1 21h22L12 2 1 21zm12-3h-2v-2h2v2zm0-4h-2v-4h2v4z\" />\n    </svg>;","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport i18n from '@dhis2/d2-i18n';\nimport { Button, Modal, ModalTitle, ModalContent, ModalActions, ButtonStrip } from '@dhis2/ui';\nimport { PeriodDimension, DynamicDimension, OrgUnitDimension, DIMENSION_ID_PERIOD, DIMENSION_ID_ORGUNIT } from '@dhis2/analytics';\nimport { acAddItemFilter, acRemoveItemFilter } from '../../actions/itemFilters';\nimport { sGetItemFiltersRoot } from '../../reducers/itemFilters';\n\nconst FilterDialog = ({\n  displayNameProperty,\n  dimension,\n  initiallySelectedItems,\n  addItemFilter,\n  removeItemFilter,\n  onClose\n}, context) => {\n  const [filters, setFilters] = useState(initiallySelectedItems);\n\n  const onSelectItems = ({\n    dimensionId,\n    items\n  }) => {\n    setFilters({\n      [dimensionId]: items\n    });\n  };\n\n  const onDeselectItems = ({\n    dimensionId,\n    itemIdsToRemove\n  }) => {\n    const oldList = filters[dimensionId] || [];\n    const newList = oldList.filter(item => !itemIdsToRemove.includes(item.id));\n    setFilters({ ...filters,\n      [dimensionId]: newList\n    });\n  };\n\n  const onReorderItems = ({\n    dimensionId,\n    itemIds\n  }) => {\n    const oldList = filters[dimensionId] || [];\n    const reorderedList = itemIds.map(id => oldList.find(item => item.id === id));\n    setFilters({ ...filters,\n      [dimensionId]: reorderedList\n    });\n  };\n\n  const saveFilter = () => {\n    const id = dimension.id;\n    const filterItems = filters[id];\n\n    if (filterItems && filterItems.length) {\n      addItemFilter({\n        id,\n        value: [...filterItems]\n      });\n    } else {\n      removeItemFilter(id);\n    }\n\n    onClose(id);\n  };\n\n  const renderDialogContent = () => {\n    const commonProps = {\n      d2: context.d2,\n      onSelect: onSelectItems,\n      onDeselect: onDeselectItems,\n      onReorder: onReorderItems\n    };\n    const selectedItems = filters[dimension.id] || [];\n\n    switch (dimension.id) {\n      case DIMENSION_ID_PERIOD:\n        {\n          return <PeriodDimension selectedPeriods={selectedItems} onSelect={commonProps.onSelect} />;\n        }\n\n      case DIMENSION_ID_ORGUNIT:\n        return <OrgUnitDimension displayNameProperty={displayNameProperty} ouItems={selectedItems} {...commonProps} />;\n\n      default:\n        return <DynamicDimension selectedItems={selectedItems} dimensionId={dimension.id} onSelect={commonProps.onSelect} context={commonProps.d2} />;\n    }\n  };\n\n  return <>\n            {dimension.id && <Modal onClose={onClose} position=\"top\" large>\n                    <ModalTitle>{dimension.name}</ModalTitle>\n                    <ModalContent>{renderDialogContent()}</ModalContent>\n                    <ModalActions>\n                        <ButtonStrip>\n                            <Button secondary onClick={onClose}>\n                                {i18n.t('Cancel')}\n                            </Button>\n                            <Button primary onClick={saveFilter}>\n                                {i18n.t('Confirm')}\n                            </Button>\n                        </ButtonStrip>\n                    </ModalActions>\n                </Modal>}\n        </>;\n};\n\nFilterDialog.propTypes = {\n  addItemFilter: PropTypes.func,\n  dimension: PropTypes.object,\n  displayNameProperty: PropTypes.string,\n  initiallySelectedItems: PropTypes.object,\n  removeItemFilter: PropTypes.func,\n  onClose: PropTypes.func\n};\nFilterDialog.contextTypes = {\n  d2: PropTypes.object\n};\n\nconst mapStateToProps = state => ({\n  initiallySelectedItems: sGetItemFiltersRoot(state)\n});\n\nexport default connect(mapStateToProps, {\n  addItemFilter: acAddItemFilter,\n  removeItemFilter: acRemoveItemFilter\n})(FilterDialog);","export const SET_SETTINGS = 'SET_SETTINGS';\nexport const ADD_SETTINGS = 'ADD_SETTINGS';\nexport const DEFAULT_SETTINGS = {\n  keyDateFormat: 'yyyy-MM-dd',\n  keyAnalysisRelativePeriod: 'LAST_12_MONTHS',\n  keyAnalysisDigitGroupSeparator: 'SPACE',\n  displayNameProperty: 'displayName',\n  uiLocale: 'en',\n  rootOrganisationUnit: {}\n};\nexport default ((state = DEFAULT_SETTINGS, action) => {\n  switch (action.type) {\n    case SET_SETTINGS:\n      {\n        return Object.assign({}, action.value);\n      }\n\n    case ADD_SETTINGS:\n      {\n        return { ...state,\n          ...action.value\n        };\n      }\n\n    default:\n      return state;\n  }\n}); // Selectors\n\nexport const sGetSettings = state => state.settings;\nexport const sGetSettingsDisplayNameProperty = state => sGetSettings(state).displayNameProperty;\nexport const sGetRootOrgUnit = state => sGetSettings(state).rootOrganisationUnit;\nexport const sGetRelativePeriod = state => sGetSettings(state).keyAnalysisRelativePeriod;\nexport const sGetUiLocale = state => sGetSettings(state).uiLocale;","export const SET_ACTIVE_MODAL_DIMENSION = 'SET_ACTIVE_MODAL_DIMENSION';\nexport const CLEAR_ACTIVE_MODAL_DIMENSION = 'CLEAR_ACTIVE_MODAL_DIMENSION';\nexport const DEFAULT_STATE_ACTIVE_MODAL_DIMENSION = {};\nexport default ((state = DEFAULT_STATE_ACTIVE_MODAL_DIMENSION, action) => {\n  switch (action.type) {\n    case SET_ACTIVE_MODAL_DIMENSION:\n      {\n        return action.value;\n      }\n\n    case CLEAR_ACTIVE_MODAL_DIMENSION:\n      {\n        return DEFAULT_STATE_ACTIVE_MODAL_DIMENSION;\n      }\n\n    default:\n      return state;\n  }\n});\nexport const sGetActiveModalDimension = state => state.activeModalDimension;","import { SET_ACTIVE_MODAL_DIMENSION, CLEAR_ACTIVE_MODAL_DIMENSION } from '../reducers/activeModalDimension';\nexport const acSetActiveModalDimension = value => ({\n  type: SET_ACTIVE_MODAL_DIMENSION,\n  value\n});\nexport const acClearActiveModalDimension = () => ({\n  type: CLEAR_ACTIVE_MODAL_DIMENSION\n});","import React, { useState, useRef } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport ArrowDropDownIcon from '@material-ui/icons/ArrowDropDown';\nimport isEmpty from 'lodash/isEmpty';\nimport i18n from '@dhis2/d2-i18n';\nimport { DimensionsPanel } from '@dhis2/analytics';\nimport { Button, Popover } from '@dhis2/ui';\nimport FilterDialog from './FilterDialog';\nimport { sGetSettingsDisplayNameProperty } from '../../reducers/settings';\nimport { sGetActiveModalDimension } from '../../reducers/activeModalDimension';\nimport { sGetDimensions } from '../../reducers/dimensions';\nimport { sGetItemFiltersRoot } from '../../reducers/itemFilters';\nimport { acClearActiveModalDimension, acSetActiveModalDimension } from '../../actions/activeModalDimension';\n\nconst FilterSelector = props => {\n  const [showPopover, setShowPopover] = useState(false);\n  const ref = useRef(null);\n\n  const onCloseDialog = () => {\n    setShowPopover(false);\n    props.clearActiveModalDimension();\n  };\n\n  const selectDimension = id => {\n    props.setActiveModalDimension(props.dimensions.find(dimension => dimension.id === id));\n  };\n\n  return <>\n            <span ref={ref}>\n                <Button onClick={() => setShowPopover(true)}>\n                    {i18n.t('Add filter')}\n                    <ArrowDropDownIcon />\n                </Button>\n            </span>\n            {showPopover && <Popover onClickOutside={onCloseDialog} reference={ref} arrow={true} placement=\"bottom-start\">\n                    <DimensionsPanel style={{\n        width: '320px'\n      }} dimensions={props.dimensions} onDimensionClick={selectDimension} selectedIds={Object.keys(props.initiallySelectedItems)} />\n                </Popover>}\n            {!isEmpty(props.dimension) ? <FilterDialog displayNameProperty={props.displayNameProperty} dimension={props.dimension} onClose={onCloseDialog} /> : null}\n        </>;\n};\n\nconst mapStateToProps = state => ({\n  displayNameProperty: sGetSettingsDisplayNameProperty(state),\n  dimension: sGetActiveModalDimension(state),\n  dimensions: sGetDimensions(state),\n  initiallySelectedItems: sGetItemFiltersRoot(state)\n});\n\nFilterSelector.propTypes = {\n  clearActiveModalDimension: PropTypes.func,\n  dimension: PropTypes.object,\n  dimensions: PropTypes.array,\n  displayNameProperty: PropTypes.string,\n  initiallySelectedItems: PropTypes.object,\n  setActiveModalDimension: PropTypes.func\n};\nexport default connect(mapStateToProps, {\n  clearActiveModalDimension: acClearActiveModalDimension,\n  setActiveModalDimension: acSetActiveModalDimension\n})(FilterSelector);","import React, { useState, createRef } from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { Link } from 'react-router-dom';\nimport i18n from '@dhis2/d2-i18n';\nimport { Redirect } from 'react-router-dom';\nimport SharingDialog from '@dhis2/d2-ui-sharing-dialog';\nimport Star from '@material-ui/icons/Star';\nimport StarBorder from '@material-ui/icons/StarBorder';\nimport { Button, FlyoutMenu, Popover, MenuItem, colors } from '@dhis2/ui';\nimport { ThreeDots } from '../Item/VisualizationItem/assets/icons';\nimport { orObject } from '../../modules/util';\nimport { tStarDashboard } from '../../actions/dashboards';\nimport { tUpdateShowDescription } from '../../actions/selected';\nimport FilterSelector from '../ItemFilter/FilterSelector';\nimport { sGetSelectedId, sGetSelectedShowDescription } from '../../reducers/selected';\nimport { sGetDashboardById, sGetDashboardItems, EMPTY_DASHBOARD } from '../../reducers/dashboards';\nimport classes from './styles/ViewTitleBar.module.css';\n\nconst ViewTitleBar = (props, context) => {\n  const [moreOptionsIsOpen, setMoreOptionsIsOpen] = useState(false);\n  const [sharingDialogIsOpen, setSharingDialogIsOpen] = useState(false);\n  const [redirectUrl, setRedirectUrl] = useState(null);\n  const {\n    id,\n    name,\n    description,\n    access,\n    style,\n    showDescription,\n    starred,\n    onToggleStarredDashboard,\n    onShowHideDescription\n  } = props;\n\n  const toggleSharingDialog = () => setSharingDialogIsOpen(!sharingDialogIsOpen);\n\n  const toggleMoreOptions = () => setMoreOptionsIsOpen(!moreOptionsIsOpen);\n\n  const printLayout = () => setRedirectUrl(`${id}/printlayout`);\n\n  const printOipp = () => setRedirectUrl(`${id}/printoipp`);\n\n  const titleStyle = Object.assign({}, style.title, {\n    cursor: 'default',\n    userSelect: 'text',\n    top: '7px'\n  });\n  const StarIcon = starred ? Star : StarBorder;\n\n  if (redirectUrl) {\n    return <Redirect to={redirectUrl} />;\n  }\n\n  const showHideDescriptionLabel = showDescription ? i18n.t('Hide description') : i18n.t('Show description');\n\n  const showHideDescription = () => {\n    onShowHideDescription();\n    toggleMoreOptions();\n  };\n\n  const toggleStarredDashboardLabel = starred ? i18n.t('Unstar dashboard') : i18n.t('Star dashboard');\n\n  const toggleStarredDashboard = () => {\n    onToggleStarredDashboard();\n    toggleMoreOptions();\n  };\n\n  const buttonRef = createRef();\n  const userAccess = orObject(access);\n  return <>\n            <div className={classes.titleBar}>\n                <span style={titleStyle}>{name}</span>\n                <div className={classes.actions}>\n                    <div className={classes.titleBarIcon} onClick={onToggleStarredDashboard}>\n                        <StarIcon style={{\n            fill: colors.grey600\n          }} />\n                    </div>\n                    <div className={classes.strip}>\n                        {userAccess.update ? <Link className={classes.editLink} to={`/${id}/edit`}>\n                                <Button>{i18n.t('Edit')}</Button>\n                            </Link> : null}\n                        {userAccess.manage ? <Button onClick={toggleSharingDialog}>\n                                {i18n.t('Share')}\n                            </Button> : null}\n                        <FilterSelector />\n                        <span ref={buttonRef}>\n                            <Button onClick={toggleMoreOptions}>\n                                <ThreeDots />\n                                <span style={{\n                marginLeft: '5px'\n              }}>\n                                    {i18n.t('More')}\n                                </span>\n                            </Button>\n                        </span>\n                    </div>\n                    {moreOptionsIsOpen && <Popover reference={buttonRef} placement=\"bottom-start\" onClickOutside={toggleMoreOptions}>\n                            <FlyoutMenu>\n                                <MenuItem dense label={toggleStarredDashboardLabel} onClick={toggleStarredDashboard} />\n                                <MenuItem dense label={showHideDescriptionLabel} onClick={showHideDescription} />\n                                <MenuItem dense label={i18n.t('Print')}>\n                                    <MenuItem dense label={i18n.t('Dashboard layout')} onClick={printLayout} />\n                                    <MenuItem dense label={i18n.t('One item per page')} onClick={printOipp} />\n                                </MenuItem>\n                            </FlyoutMenu>\n                        </Popover>}\n                </div>\n            </div>\n            {showDescription ? <div className=\"dashboard-description\" style={Object.assign({\n      paddingTop: '5px',\n      paddingBottom: '5px'\n    }, style.description, !description ? {\n      color: '#888'\n    } : {})}>\n                    {description || i18n.t('No description')}\n                </div> : null}\n            {id ? <SharingDialog d2={context.d2} id={id} type=\"dashboard\" open={sharingDialogIsOpen} onRequestClose={toggleSharingDialog} /> : null}\n        </>;\n};\n\nViewTitleBar.propTypes = {\n  access: PropTypes.object,\n  description: PropTypes.string,\n  id: PropTypes.string,\n  name: PropTypes.string,\n  showDescription: PropTypes.bool,\n  starred: PropTypes.bool,\n  style: PropTypes.object,\n  onShowHideDescription: PropTypes.func,\n  onToggleStarredDashboard: PropTypes.func\n};\nViewTitleBar.defaultProps = {\n  name: '',\n  description: '',\n  starred: false,\n  showDescription: false\n};\nViewTitleBar.contextTypes = {\n  d2: PropTypes.object\n};\n\nconst mapStateToProps = state => {\n  const id = sGetSelectedId(state);\n  const dashboard = sGetDashboardById(state, id) || EMPTY_DASHBOARD;\n  return {\n    id,\n    name: dashboard.displayName,\n    description: dashboard.displayDescription,\n    dashboardItems: sGetDashboardItems(state),\n    showDescription: sGetSelectedShowDescription(state),\n    starred: dashboard.starred,\n    access: dashboard.access\n  };\n};\n\nconst mergeProps = (stateProps, dispatchProps, ownProps) => {\n  const {\n    id,\n    starred,\n    showDescription\n  } = stateProps;\n  const {\n    dispatch\n  } = dispatchProps;\n  return { ...stateProps,\n    ...ownProps,\n    onToggleStarredDashboard: () => dispatch(tStarDashboard(id, !starred)),\n    onShowHideDescription: () => dispatch(tUpdateShowDescription(!showDescription))\n  };\n};\n\nexport default connect(mapStateToProps, null, mergeProps)(ViewTitleBar);","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { colors } from '@dhis2/ui';\nimport EditTitleBar from './EditTitleBar';\nimport ViewTitleBar from './ViewTitleBar';\nimport './TitleBar.css';\nconst style = {\n  title: {\n    position: 'relative',\n    fontSize: 21,\n    fontWeight: 500,\n    color: colors.black,\n    minWidth: 50\n  },\n  description: {\n    fontSize: 14,\n    color: colors.grey800\n  }\n};\n\nconst TitleBar = ({\n  edit\n}) => {\n  return <div className=\"titlebar-wrapper\" style={{\n    padding: '13px 15px 5px 10px'\n  }}>\n            {edit ? <EditTitleBar style={style} /> : <ViewTitleBar style={style} />}\n        </div>;\n};\n\nTitleBar.propTypes = {\n  edit: PropTypes.bool\n};\nexport default TitleBar;","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport i18n from '@dhis2/d2-i18n';\nimport * as pluginManager from './plugin';\nimport { getBaseUrl, orObject } from '../../../modules/util';\nimport { getGridItemDomId } from '../../ItemGrid/gridUtil';\n\nconst pluginCredentials = d2 => {\n  return {\n    baseUrl: getBaseUrl(d2),\n    auth: d2.Api.getApi().defaultHeaders.Authorization\n  };\n};\n\nclass DefaultPlugin extends Component {\n  pluginCredentials = null;\n\n  constructor(props, context) {\n    super(props);\n    this.d2 = context.d2;\n  }\n\n  shouldPluginReload = prevProps => {\n    // TODO - fix this hack, to handle bug with multiple\n    // rerendering while switching between dashboards.\n    //\n    // To determine if the rendering is happening because of a\n    // dashboard switch, check if the item reference has changed.\n    const reloadAllowed = this.props.item === prevProps.item;\n    const filtersChanged = prevProps.itemFilters !== this.props.itemFilters;\n    const vis = orObject(this.props.visualization);\n    const prevVis = orObject(prevProps.visualization);\n    const visChanged = vis.id !== prevVis.id || vis.activeType !== prevVis.activeType;\n    return reloadAllowed && (visChanged || filtersChanged);\n  };\n  reloadPlugin = prevProps => {\n    if (pluginManager.pluginIsAvailable(this.props.item, this.props.visualization) && this.shouldPluginReload(prevProps)) {\n      if (this.props.activeType !== prevProps.activeType || this.props.itemFilters !== prevProps.itemFilters) {\n        pluginManager.unmount(this.props.item, prevProps.activeType);\n        pluginManager.load(this.props.item, this.props.visualization, {\n          credentials: this.pluginCredentials,\n          activeType: this.props.activeType\n        });\n      }\n    }\n  };\n\n  componentDidMount() {\n    this.pluginCredentials = pluginCredentials(this.d2);\n\n    if (pluginManager.pluginIsAvailable(this.props.item, this.props.visualization)) {\n      pluginManager.load(this.props.item, this.props.visualization, {\n        credentials: this.pluginCredentials,\n        activeType: this.props.activeType,\n        options: this.props.options\n      });\n    }\n  }\n\n  componentDidUpdate(prevProps) {\n    this.reloadPlugin(prevProps);\n  }\n\n  componentWillUnmount() {\n    if (pluginManager.pluginIsAvailable(this.props.item, this.props.visualization)) {\n      pluginManager.unmount(this.props.item, this.props.activeType);\n    }\n  }\n\n  render() {\n    const {\n      classes,\n      item,\n      visualization,\n      style\n    } = this.props;\n    const pluginIsAvailable = pluginManager.pluginIsAvailable(item, visualization);\n    return pluginIsAvailable ? <div id={getGridItemDomId(item.id)} style={style} /> : <div className={classes.textDiv}>\n                {i18n.t('Unable to load the plugin for this item')}\n            </div>;\n  }\n\n}\n\nDefaultPlugin.contextTypes = {\n  d2: PropTypes.object\n};\nDefaultPlugin.propTypes = {\n  activeType: PropTypes.string,\n  classes: PropTypes.object,\n  item: PropTypes.object,\n  itemFilters: PropTypes.object,\n  options: PropTypes.object,\n  style: PropTypes.object,\n  visualization: PropTypes.object\n};\nDefaultPlugin.defaultProps = {\n  style: {},\n  item: {},\n  itemFilters: {},\n  options: {},\n  visualization: {}\n};\nexport default DefaultPlugin;","import React from 'react';\nimport PropTypes from 'prop-types';\nimport i18n from '@dhis2/d2-i18n';\nimport { Warning } from './assets/icons';\nimport classes from './styles/FatalErrorBoundary.module.css';\n\nclass FatalErrorBoundary extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      errorFound: false\n    };\n  }\n\n  componentDidCatch(error, info) {\n    this.setState({\n      errorFound: true\n    });\n    console.log('error: ', error);\n    console.log('info: ', info);\n  }\n\n  render() {\n    if (this.state.errorFound) {\n      return <p className={classes.container}>\n                    <span className={classes.icon}>\n                        <Warning />\n                    </span>\n                    <span className={classes.message}>\n                        {i18n.t('There was a problem loading this dashboard item')}\n                    </span>\n                </p>;\n    }\n\n    return this.props.children;\n  }\n\n}\n\nFatalErrorBoundary.propTypes = {\n  children: PropTypes.node\n};\nexport default FatalErrorBoundary;","import React from 'react';\nimport PropTypes from 'prop-types';\nimport classes from './styles/ItemHeader.module.css';\n\nconst ViewItemActions = ({\n  actionButtons\n}) => {\n  return actionButtons ? <div className={classes.itemActionsWrap}>{actionButtons}</div> : null;\n};\n\nViewItemActions.propTypes = {\n  actionButtons: PropTypes.node\n};\nexport default ViewItemActions;","import React from 'react';\nimport PropTypes from 'prop-types';\nimport i18n from '@dhis2/d2-i18n';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport { colors } from '@dhis2/ui';\nimport classes from './styles/DeleteItemButton.module.css';\n\nconst DeleteItemButton = ({\n  onClick\n}) => <button type=\"button\" className={classes.deleteItemButton} onClick={onClick} title={i18n.t(`Delete item`)}>\n        <DeleteIcon style={{\n    fill: colors.red500\n  }} />\n    </button>;\n\nDeleteItemButton.propTypes = {\n  onClick: PropTypes.func\n};\nexport default DeleteItemButton;","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport DeleteItemButton from './DeleteItemButton';\nimport { acRemoveDashboardItem } from '../../../actions/editDashboard';\nimport classes from './styles/ItemHeader.module.css';\n\nconst EditItemActions = ({\n  itemId,\n  acRemoveDashboardItem\n}) => {\n  const handleDeleteItem = () => acRemoveDashboardItem(itemId);\n\n  return <div className={classes.itemActionsWrap}>\n            <DeleteItemButton onClick={handleDeleteItem} />\n        </div>;\n};\n\nEditItemActions.propTypes = {\n  acRemoveDashboardItem: PropTypes.func,\n  itemId: PropTypes.string\n};\nconst mapDispatchToProps = {\n  acRemoveDashboardItem\n};\nexport default connect(null, mapDispatchToProps)(EditItemActions);","import React from 'react';\nimport { colors } from '@dhis2/ui';\n\nconst WarningIcon = () => <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24\" viewBox=\"0 0 24 24\" width=\"24\" fill={colors.grey600}>\n        <path d=\"M0 0h24v24H0z\" fill=\"none\" />\n        <path d=\"M12 2C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2zm1 15h-2v-6h2v6zm0-8h-2V7h2v2z\" />\n    </svg>;\n\nexport default WarningIcon;","import React from 'react';\nimport { Tooltip } from '@dhis2/ui';\nimport i18n from '@dhis2/d2-i18n';\nimport InfoIcon from '../../../icons/Info';\nimport classes from './styles/PrintItemInfo.module.css';\n\nconst PrintWarning = () => <div className={classes.warning}>\n        <Tooltip content={i18n.t('This item has been shortened to fit on one page')} placement=\"bottom\">\n            <InfoIcon />\n        </Tooltip>\n    </div>;\n\nexport default PrintWarning;","export const EDIT = 'edit';\nexport const NEW = 'new';\nexport const VIEW = 'view';\nexport const PRINT = 'print';\nexport const PRINT_LAYOUT = 'print-layout';\nexport const isEditMode = mode => [EDIT, NEW].includes(mode);\nexport const isPrintMode = mode => [PRINT, PRINT_LAYOUT].includes(mode);\nexport const isViewMode = mode => mode === VIEW;","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport ViewItemActions from './ViewItemActions';\nimport EditItemActions from './EditItemActions';\nimport PrintItemInfo from './PrintItemInfo';\nimport { VIEW, EDIT, PRINT_LAYOUT } from '../../Dashboard/dashboardModes';\nimport classes from './styles/ItemHeader.module.css';\n\nconst getItemActionsMap = isShortened => {\n  return {\n    [VIEW]: ViewItemActions,\n    [EDIT]: EditItemActions,\n    [PRINT_LAYOUT]: isShortened ? PrintItemInfo : null\n  };\n}; // This is the margin-top + margin-bottom defined in the css file\n\n\nexport const HEADER_MARGIN_HEIGHT = 12;\nconst ItemHeader = React.forwardRef(({\n  dashboardMode,\n  title,\n  isShortened,\n  ...rest\n}, ref) => {\n  const Actions = getItemActionsMap(isShortened)[dashboardMode];\n  return <div className={classes.itemHeaderWrap} ref={ref}>\n                <p className={classes.itemTitle}>{title}</p>\n                {Actions ? <Actions {...rest} /> : null}\n            </div>;\n});\nItemHeader.displayName = 'ItemHeader';\nItemHeader.propTypes = {\n  dashboardMode: PropTypes.string,\n  isShortened: PropTypes.bool,\n  title: PropTypes.string\n};\nexport default connect(null, null, null, {\n  forwardRef: true\n})(ItemHeader);","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { isSingleValue, isYearOverYear, VIS_TYPE_GAUGE, VIS_TYPE_PIE } from '@dhis2/analytics';\nimport { Button, Menu, MenuItem, Divider, colors } from '@dhis2/ui';\nimport i18n from '@dhis2/d2-i18n';\nimport Popover from '@material-ui/core/Popover';\nimport TableIcon from '@material-ui/icons/ViewList';\nimport ChartIcon from '@material-ui/icons/InsertChart';\nimport MapIcon from '@material-ui/icons/Public';\nimport LaunchIcon from '@material-ui/icons/Launch';\nimport { ThreeDots, SpeechBubble } from './assets/icons';\nimport { pluginIsAvailable, getLink } from './plugin';\nimport { CHART, MAP, REPORT_TABLE, EVENT_CHART, EVENT_REPORT, isTrackerDomainType, hasMapView, getAppName } from '../../../modules/itemTypes';\nconst iconFill = {\n  fill: colors.grey600\n};\n\nconst ItemHeaderButtons = props => {\n  const [anchorEl, setAnchorEl] = useState(null);\n  const {\n    item,\n    visualization,\n    onSelectActiveType,\n    d2,\n    activeType\n  } = props;\n  const isTrackerType = isTrackerDomainType(item.type);\n\n  const onViewTable = () => {\n    handleClose();\n    onSelectActiveType(isTrackerType ? EVENT_REPORT : REPORT_TABLE);\n  };\n\n  const onViewChart = () => {\n    handleClose();\n    onSelectActiveType(isTrackerType ? EVENT_CHART : CHART);\n  };\n\n  const onViewMap = () => {\n    handleClose();\n    onSelectActiveType(MAP);\n  };\n\n  const itemHasMapView = () => hasMapView(item.type);\n\n  const handleMenuClick = (_, event) => setAnchorEl(event.currentTarget);\n\n  const handleInterpretationClick = () => {\n    props.onToggleFooter();\n\n    if (anchorEl !== null) {\n      handleClose();\n    }\n  };\n\n  const handleClose = () => setAnchorEl(null);\n\n  const type = visualization.type || item.type;\n  const canViewAs = !isSingleValue(type) && !isYearOverYear(type) && type !== VIS_TYPE_GAUGE && type !== VIS_TYPE_PIE;\n  const interpretationMenuLabel = props.activeFooter ? i18n.t(`Hide interpretations and details`) : i18n.t(`Show interpretations and details`);\n\n  const ViewAsMenuItems = () => <>\n            {activeType !== CHART && activeType !== EVENT_CHART && <MenuItem dense label={i18n.t('View as Chart')} onClick={onViewChart} icon={<ChartIcon style={iconFill} />} />}\n            {activeType !== REPORT_TABLE && activeType !== EVENT_REPORT && <MenuItem dense label={i18n.t('View as Table')} onClick={onViewTable} icon={<TableIcon style={iconFill} />} />}\n            {itemHasMapView() && activeType !== MAP && <MenuItem dense label={i18n.t('View as Map')} onClick={onViewMap} icon={<MapIcon style={iconFill} />} />}\n        </>;\n\n  return pluginIsAvailable(item, visualization) ? <>\n            <Button small secondary onClick={handleMenuClick}>\n                <ThreeDots />\n            </Button>\n            {anchorEl && <Popover open={Boolean(anchorEl)} onClose={handleClose} anchorEl={anchorEl}>\n                    <Menu>\n                        {canViewAs && <>\n                                <ViewAsMenuItems />\n                                <Divider />\n                            </>}\n                        <MenuItem dense icon={<LaunchIcon style={{\n          fill: '#6e7a8a'\n        }} />} label={i18n.t('Open in {{appName}} app', {\n          appName: getAppName(item.type)\n        })} href={getLink(item, d2)} target=\"_blank\" />\n                        <MenuItem dense icon={<SpeechBubble />} label={interpretationMenuLabel} onClick={handleInterpretationClick} />\n                    </Menu>\n                </Popover>}\n        </> : null;\n};\n\nItemHeaderButtons.propTypes = {\n  activeFooter: PropTypes.bool,\n  activeType: PropTypes.string,\n  d2: PropTypes.object,\n  item: PropTypes.object,\n  visualization: PropTypes.object,\n  onSelectActiveType: PropTypes.func,\n  onToggleFooter: PropTypes.func\n};\nexport default ItemHeaderButtons;","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { colors } from '@dhis2/ui';\nimport { getId } from './plugin';\nimport InterpretationsComponent from '@dhis2/d2-ui-interpretations';\nconst style = {\n  scrollContainer: {\n    overflowY: 'auto',\n    height: '340px'\n  },\n  line: {\n    margin: '-1px 0px 0px',\n    height: '1px',\n    border: 'none',\n    backgroundColor: colors.grey100\n  }\n};\n\nclass ItemFooter extends Component {\n  render() {\n    const objectId = getId(this.props.item);\n    return <div className=\"dashboard-item-footer\">\n                <hr style={style.line} />\n                <div style={style.scrollContainer}>\n                    <InterpretationsComponent d2={this.context.d2} item={this.props.item} type={this.props.item.type.toLowerCase()} id={objectId} appName=\"dashboard\" />\n                </div>\n            </div>;\n  }\n\n}\n\nItemFooter.contextTypes = {\n  d2: PropTypes.object.isRequired\n};\nItemFooter.propTypes = {\n  item: PropTypes.object.isRequired\n};\nexport default ItemFooter;","import React from 'react';\nimport { CircularLoader } from '@dhis2/ui';\nimport classes from './styles/LoadingMask.module.css';\n\nconst LoadingMask = () => {\n  return <div className={classes.center}>\n            <CircularLoader />\n        </div>;\n};\n\nexport default LoadingMask;","// Note that this ignores discrepancies in 'this', so shouldn't be used with bound functions\n// This is useful instead of lodash/memoize when we only need to memoize a single value\n// Inspiration: https://github.com/alexreardon/memoize-one\nconst memoizeOne = fn => {\n  let lastArgs = undefined;\n  let lastValue = undefined;\n  return (...args) => {\n    if (lastArgs && args.length === lastArgs.length && args.every((arg, i) => arg === lastArgs[i])) {\n      return lastValue;\n    }\n\n    lastArgs = args;\n    lastValue = fn(...args);\n    return lastValue;\n  };\n};\n\nexport default memoizeOne;","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport uniqueId from 'lodash/uniqueId';\nimport VisualizationPlugin from '@dhis2/data-visualizer-plugin';\nimport i18n from '@dhis2/d2-i18n';\nimport DefaultPlugin from './DefaultPlugin';\nimport FatalErrorBoundary from './FatalErrorBoundary';\nimport ItemHeader, { HEADER_MARGIN_HEIGHT } from '../ItemHeader/ItemHeader';\nimport ItemHeaderButtons from './ItemHeaderButtons';\nimport ItemFooter from './ItemFooter';\nimport LoadingMask from './LoadingMask';\nimport * as pluginManager from './plugin';\nimport { sGetVisualization } from '../../../reducers/visualizations';\nimport { sGetSelectedItemActiveType } from '../../../reducers/selected';\nimport { sGetIsEditing } from '../../../reducers/editDashboard';\nimport { sGetItemFiltersRoot, DEFAULT_STATE_ITEM_FILTERS } from '../../../reducers/itemFilters';\nimport { acAddVisualization } from '../../../actions/visualizations';\nimport { acSetSelectedItemActiveType } from '../../../actions/selected';\nimport { VISUALIZATION, MAP, CHART, REPORT_TABLE } from '../../../modules/itemTypes';\nimport memoizeOne from '../../../modules/memoizeOne';\nimport { isEditMode, isPrintMode, isViewMode } from '../../Dashboard/dashboardModes';\nimport { ITEM_CONTENT_PADDING_BOTTOM } from '../../ItemGrid/ItemGrid';\nimport classes from './styles/Item.module.css';\nexport class Item extends Component {\n  state = {\n    showFooter: false,\n    configLoaded: false,\n    pluginIsLoaded: false\n  };\n\n  constructor(props, context) {\n    super(props);\n    this.d2 = context.d2;\n    this.contentRef = React.createRef();\n    this.headerRef = React.createRef();\n    this.memoizedApplyFilters = memoizeOne(this.applyFilters);\n    this.memoizedGetVisualizationConfig = memoizeOne(pluginManager.getVisualizationConfig);\n    this.memoizedGetContentStyle = memoizeOne(this.getContentStyle);\n  }\n\n  async componentDidMount() {\n    this.props.updateVisualization( // TODO do not call fetch on the pluginManager, do it here as the manager will eventually be removed...\n    await pluginManager.fetch(this.props.item));\n    this.setState({\n      configLoaded: true\n    });\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    if (prevState.pluginIsLoaded && (prevProps.visualization !== this.props.visualization || prevProps.itemFilters !== this.props.itemFilters)) {\n      this.setState({\n        pluginIsLoaded: false\n      });\n    }\n  }\n\n  applyFilters = (visualization, filters) => {\n    if (!Object.keys(filters).length) {\n      return visualization;\n    } // deep clone objects in filters to avoid changing the visualization in the Redux store\n\n\n    const visRows = visualization.rows.map(obj => ({ ...obj\n    }));\n    const visColumns = visualization.columns.map(obj => ({ ...obj\n    }));\n    const visFilters = visualization.filters.map(obj => ({ ...obj\n    }));\n    Object.keys(filters).forEach(dimensionId => {\n      if (filters[dimensionId]) {\n        let dimensionFound = false;\n        [visRows, visColumns, visFilters].forEach(dimensionObjects => dimensionObjects.filter(obj => obj.dimension === dimensionId).forEach(obj => {\n          dimensionFound = true;\n          obj.items = filters[dimensionId];\n        })); // add dimension to filters if not already present elsewhere\n\n        if (!dimensionFound) {\n          visFilters.push({\n            dimension: dimensionId,\n            items: filters[dimensionId]\n          });\n        }\n      }\n    });\n    return { ...visualization,\n      rows: visRows,\n      columns: visColumns,\n      filters: visFilters\n    };\n  };\n  getUniqueKey = memoizeOne(() => uniqueId());\n  pluginCredentials = null;\n  getPluginComponent = () => {\n    const activeType = this.getActiveType();\n    const visualization = this.memoizedGetVisualizationConfig(this.props.visualization, this.props.item.type, activeType);\n\n    if (!visualization) {\n      return <div className={classes.textDiv}>\n                    {i18n.t('No data to display')}\n                </div>;\n    }\n\n    const calculatedHeight = this.props.item.originalHeight - this.headerRef.current.clientHeight - HEADER_MARGIN_HEIGHT - ITEM_CONTENT_PADDING_BOTTOM;\n    const props = { ...this.props,\n      activeType,\n      visualization,\n      classes,\n      style: this.memoizedGetContentStyle(calculatedHeight, this.contentRef ? this.contentRef.offsetHeight : null, isEditMode(this.props.dashboardMode) || isPrintMode(this.props.dashboardMode))\n    };\n\n    switch (activeType) {\n      case VISUALIZATION:\n      case CHART:\n      case REPORT_TABLE:\n        {\n          return <>\n                        {!this.state.pluginIsLoaded && <div style={props.style}>\n                                <LoadingMask />\n                            </div>}\n                        <VisualizationPlugin d2={this.d2} visualization={this.memoizedApplyFilters(visualization, props.itemFilters)} onLoadingComplete={this.onLoadingComplete} forDashboard={true} style={props.style} />\n                    </>;\n        }\n\n      case MAP:\n        {\n          if (props.item.type === MAP) {\n            // apply filters only to thematic and event layers\n            // for maps AO\n            const mapViews = props.visualization.mapViews.map(obj => {\n              if (obj.layer.includes('thematic') || obj.layer.includes('event')) {\n                return this.memoizedApplyFilters(obj, props.itemFilters);\n              }\n\n              return obj;\n            });\n            props.visualization = { ...props.visualization,\n              mapViews\n            };\n          } else {\n            // this is the case of a non map AO passed to the maps plugin\n            // due to a visualization type switch in dashboard item\n            // maps plugin takes care of converting the AO to a suitable format\n            props.visualization = this.memoizedApplyFilters(props.visualization, props.itemFilters);\n          }\n\n          props.options = { ...props.options,\n            hideTitle: true\n          };\n          return <DefaultPlugin {...props} />;\n        }\n\n      default:\n        {\n          props.visualization = this.memoizedApplyFilters(props.visualization, props.itemFilters);\n          return <DefaultPlugin {...props} />;\n        }\n    }\n  };\n  onLoadingComplete = () => {\n    this.setState({\n      pluginIsLoaded: true\n    });\n  };\n  onToggleFooter = () => {\n    this.setState({\n      showFooter: !this.state.showFooter\n    }, this.props.onToggleItemExpanded(this.props.item.id));\n  };\n  selectActiveType = type => {\n    type !== this.getActiveType() && this.props.selectActiveType(this.props.item.id, type);\n  };\n  getActiveType = () => {\n    if (this.props.isEditing) {\n      return this.props.item.type;\n    }\n\n    return this.props.activeType || this.props.item.type;\n  };\n  pluginIsAvailable = () => pluginManager.pluginIsAvailable(this.props.item, this.props.visualization);\n  getContentStyle = (calculatedHeight, measuredHeight, preferMeasured) => {\n    const height = preferMeasured ? measuredHeight || calculatedHeight : calculatedHeight;\n    return {\n      height\n    };\n  };\n\n  render() {\n    const {\n      item,\n      dashboardMode,\n      itemFilters\n    } = this.props;\n    const {\n      showFooter\n    } = this.state;\n    const actionButtons = <ItemHeaderButtons item={item} visualization={this.props.visualization} onSelectActiveType={this.selectActiveType} onToggleFooter={this.onToggleFooter} d2={this.d2} activeType={this.getActiveType()} activeFooter={this.state.showFooter} />;\n    return <>\n                <ItemHeader title={pluginManager.getName(item)} itemId={item.id} actionButtons={actionButtons} ref={this.headerRef} dashboardMode={dashboardMode} isShortened={item.shortened} />\n                <FatalErrorBoundary>\n                    <div key={this.getUniqueKey(itemFilters)} className=\"dashboard-item-content\" ref={ref => this.contentRef = ref}>\n                        {this.state.configLoaded && this.getPluginComponent()}\n                    </div>\n                </FatalErrorBoundary>\n                {isViewMode(dashboardMode) && showFooter ? <ItemFooter item={item} /> : null}\n            </>;\n  }\n\n}\nItem.contextTypes = {\n  d2: PropTypes.object\n};\nItem.propTypes = {\n  activeType: PropTypes.string,\n  dashboardMode: PropTypes.string,\n  isEditing: PropTypes.bool,\n  item: PropTypes.object,\n  itemFilters: PropTypes.object,\n  selectActiveType: PropTypes.func,\n  updateVisualization: PropTypes.func,\n  visualization: PropTypes.object,\n  onToggleItemExpanded: PropTypes.func\n};\nItem.defaultProps = {\n  item: {},\n  onToggleItemExpanded: Function.prototype,\n  visualization: {}\n};\n\nconst mapStateToProps = (state, ownProps) => {\n  const itemFilters = !isEditMode(ownProps.dashboardMode) ? sGetItemFiltersRoot(state) : DEFAULT_STATE_ITEM_FILTERS;\n  return {\n    activeType: sGetSelectedItemActiveType(state, ownProps.item?.id),\n    isEditing: sGetIsEditing(state),\n    itemFilters,\n    visualization: sGetVisualization(state, pluginManager.extractFavorite(ownProps.item).id)\n  };\n};\n\nconst mapDispatchToProps = {\n  selectActiveType: acSetSelectedItemActiveType,\n  updateVisualization: acAddVisualization\n};\nexport default connect(mapStateToProps, mapDispatchToProps)(Item);","import React from 'react';\nimport { colors } from '@dhis2/ui';\nconst style = {\n  backgroundColor: colors.grey200,\n  border: 'none',\n  height: '1px',\n  margin: '0px 0px 5px 0px'\n};\n\nconst Line = () => <hr style={style} />;\n\nexport default Line;","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport i18n from '@dhis2/d2-i18n';\nimport { colors } from '@dhis2/ui';\nimport ItemHeader from '../ItemHeader/ItemHeader';\nimport Line from '../../../widgets/Line';\nimport { sGetMessagesRoot } from '../../../reducers/messages';\nimport { formatDate } from '../../../modules/util';\nimport { isViewMode } from '../../Dashboard/dashboardModes';\nimport './MessagesItem.css';\nconst PRIVATE = 'PRIVATE';\nconst messageTypes = {\n  [PRIVATE]: 'Private',\n  VALIDATION_RESULT: 'Validation',\n  TICKET: 'Ticket',\n  SYSTEM: 'System'\n};\nconst style = {\n  list: {\n    listStyleType: 'none',\n    paddingLeft: '0px'\n  },\n  seeAll: {\n    textAlign: 'center',\n    fontSize: '13px',\n    marginBottom: '5px'\n  },\n  sender: {\n    fontSize: '13px',\n    lineHeight: '15px',\n    margin: 0,\n    color: colors.grey800\n  },\n  snippet: {\n    color: colors.grey800,\n    fontSize: '13px',\n    lineHeight: '15px',\n    maxHeight: '30px',\n    overflow: 'hidden'\n  }\n};\n\nclass MessagesItem extends Component {\n  state = {\n    uiLocale: ''\n  };\n\n  async componentDidMount() {\n    const uiLocale = await this.context.d2.currentUser.userSettings.get('keyUiLocale');\n    this.setState({\n      uiLocale\n    });\n  }\n\n  getMessageHref = msg => {\n    const msgIdentifier = msg ? `#/${msg.messageType}/${msg.id}` : '';\n    return `${this.context.baseUrl}/dhis-web-messaging/${msgIdentifier}`;\n  };\n  getMessageSender = msg => {\n    const latestMsg = msg.messages.slice(-1)[0];\n    return latestMsg.sender ? latestMsg.sender.displayName : '';\n  };\n  getMessageItems = () => {\n    const modeClass = isViewMode(this.props.dashboardMode) ? 'view' : null;\n    return this.props.messages.map(msg => {\n      const redirectToMsg = () => {\n        if (isViewMode(this.props.dashboardMode)) {\n          document.location.href = this.getMessageHref(msg);\n        }\n      };\n\n      const sender = msg.messageType === PRIVATE ? this.getMessageSender(msg) : messageTypes[msg.messageType];\n      const readClass = !msg.read ? 'unread' : null;\n      const latestMsg = msg.messages.slice(-1)[0];\n      const msgDate = latestMsg.lastUpdated;\n      return <li className={`message-item ${modeClass}`} key={msg.id} onClick={redirectToMsg}>\n                    <p className={`message-title ${readClass}`}>\n                        {msg.displayName} ({msg.messageCount})\n                    </p>\n                    <p style={style.sender}>\n                        {sender} - {formatDate(msgDate, this.state.uiLocale)}\n                    </p>\n                    <p style={style.snippet}>{latestMsg.text}</p>\n                </li>;\n    });\n  };\n\n  render() {\n    return <>\n                <ItemHeader title={i18n.t('Messages')} itemId={this.props.item.id} dashboardMode={this.props.dashboardMode} isShortened={this.props.item.shortened} />\n                <Line />\n                {this.props.messages.length > 0 && <div className=\"dashboard-item-content\">\n                        <ul style={style.list}>{this.getMessageItems()}</ul>\n                        <div style={style.seeAll}>\n                            <a href={this.getMessageHref()}>\n                                {i18n.t('See all messages')}\n                            </a>\n                        </div>\n                    </div>}\n            </>;\n  }\n\n}\n\nMessagesItem.propTypes = {\n  dashboardMode: PropTypes.string,\n  item: PropTypes.object,\n  messages: PropTypes.array\n};\nMessagesItem.contextTypes = {\n  d2: PropTypes.object,\n  baseUrl: PropTypes.string\n};\n\nconst mapStateToProps = state => {\n  return {\n    messages: Object.values(sGetMessagesRoot(state))\n  };\n};\n\nconst MessagesContainer = connect(mapStateToProps, null)(MessagesItem);\nexport default MessagesContainer;","import React from 'react';\nimport PropTypes from 'prop-types';\nimport i18n from '@dhis2/d2-i18n';\nimport ItemHeader from '../ItemHeader/ItemHeader';\nimport NotInterestedIcon from '@material-ui/icons/NotInterested';\n\nconst NotSupportedItem = props => <>\n        <ItemHeader title={i18n.t('Item type \"{{type}}\" not supported', {\n    type: props.item.type\n  })} itemId={props.item.id} dashboardMode={props.dashboardMode} isShortened={props.item.shortened} />\n        <div style={{\n    display: 'flex',\n    justifyContent: 'center',\n    alignItems: 'center',\n    height: '90%'\n  }}>\n            <NotInterestedIcon style={{\n      width: 100,\n      height: 100,\n      align: 'center'\n    }} color=\"disabled\" />\n        </div>\n    </>;\n\nNotSupportedItem.propTypes = {\n  dashboardMode: PropTypes.string,\n  item: PropTypes.object\n};\nexport default NotSupportedItem;","import React from 'react';\nimport { colors } from '@dhis2/ui';\nimport PropTypes from 'prop-types';\n\nconst DescriptionIcon = ({\n  className\n}) => <svg className={className} xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\" fill={colors.grey500}>\n        <path d=\"M0 0h24v24H0z\" fill=\"none\" />\n        <path d=\"M14 2H6c-1.1 0-1.99.9-1.99 2L4 20c0 1.1.89 2 1.99 2H18c1.1 0 2-.9 2-2V8l-6-6zm2 16H8v-2h8v2zm0-4H8v-2h8v2zm-3-5V3.5L18.5 9H13z\" />\n    </svg>;\n\nDescriptionIcon.propTypes = {\n  className: PropTypes.string\n};\nexport default DescriptionIcon;","import React from 'react';\nimport { colors } from '@dhis2/ui';\nimport PropTypes from 'prop-types';\n\nconst DeleteIcon = ({\n  className\n}) => <svg className={className} xmlns=\"http://www.w3.org/2000/svg\" width=\"18\" height=\"18\" viewBox=\"0 0 24 24\" fill={colors.red500}>\n        <path d=\"M6 19c0 1.1.9 2 2 2h8c1.1 0 2-.9 2-2V7H6v12zM19 4h-3.5l-1-1h-5l-1 1H5v2h14V4z\" />\n        <path d=\"M0 0h24v24H0z\" fill=\"none\" />\n    </svg>;\n\nDeleteIcon.propTypes = {\n  className: PropTypes.string\n};\nexport default DeleteIcon;","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { colors } from '@dhis2/ui';\nimport DescriptionIcon from '../../../icons/Description';\nimport DeleteIcon from '../../../icons/Delete';\nimport Line from '../../../widgets/Line';\nimport { itemTypeMap, getItemUrl } from '../../../modules/itemTypes';\nimport { orArray } from '../../../modules/util';\nimport { tRemoveListItemContent } from './actions';\nimport ItemHeader from '../ItemHeader/ItemHeader';\nimport { isEditMode } from '../../Dashboard/dashboardModes';\nimport classes from './Item.module.css';\n\nconst getItemTitle = item => itemTypeMap[item.type].pluralTitle;\n\nconst getContentItems = item => orArray(item[itemTypeMap[item.type].propName]).filter((item, index, array) => array.findIndex(el => el.id === item.id) === index);\n\nconst ListItem = (props, context) => {\n  const {\n    item,\n    dashboardMode,\n    tRemoveListItemContent\n  } = props;\n  const contentItems = getContentItems(item);\n\n  const getLink = contentItem => {\n    const deleteButton = <button className={classes.deletebutton} onClick={() => tRemoveListItemContent(item, contentItem)}>\n                <DeleteIcon className={classes.deleteicon} />\n            </button>;\n    return <>\n                <a className={classes.link} style={{\n        color: colors.grey900\n      }} href={getItemUrl(item.type, contentItem, context.d2)}>\n                    {contentItem.name}\n                </a>\n                {isEditMode(dashboardMode) ? deleteButton : null}\n            </>;\n  };\n\n  return <>\n            <ItemHeader title={getItemTitle(item)} itemId={item.id} dashboardMode={dashboardMode} isShortened={item.shortened} />\n            <Line />\n            <div className=\"dashboard-item-content\">\n                <ul className={classes.list}>\n                    {contentItems.map(contentItem => <li className={classes.item} key={contentItem.id}>\n                            <DescriptionIcon className={classes.itemicon} />\n                            {getLink(contentItem)}\n                        </li>)}\n                </ul>\n            </div>\n        </>;\n};\n\nListItem.propTypes = {\n  dashboardMode: PropTypes.string,\n  item: PropTypes.object,\n  tRemoveListItemContent: PropTypes.func\n};\nListItem.contextTypes = {\n  d2: PropTypes.object\n};\nexport default connect(null, {\n  tRemoveListItemContent\n})(ListItem);","import { acUpdateDashboardItem, acRemoveDashboardItem } from '../../../actions/editDashboard';\nimport { itemTypeMap } from '../../../modules/itemTypes';\nexport const tRemoveListItemContent = (dashboardItem, content) => dispatch => {\n  const listItemType = itemTypeMap[dashboardItem.type].propName;\n  const newContent = dashboardItem[listItemType].filter(item => item.id !== content.id);\n\n  if (newContent.length) {\n    dashboardItem[listItemType] = newContent;\n    dispatch(acUpdateDashboardItem(dashboardItem));\n  } else {\n    dispatch(acRemoveDashboardItem(dashboardItem));\n  }\n};","/** @module reducers/editDashboard */\nimport update from 'immutability-helper';\nimport isEmpty from 'lodash/isEmpty';\nimport { orArray } from '../modules/util';\nexport const SET_PRINT_DASHBOARD = 'SET_PRINT_DASHBOARD';\nexport const CLEAR_PRINT_DASHBOARD = 'CLEAR_PRINT_DASHBOARD';\nexport const ADD_PRINT_DASHBOARD_ITEM = 'ADD_PRINT_DASHBOARD_ITEM';\nexport const SET_PRINT_DASHBOARD_LAYOUT = 'SET_PRINT_DASHBOARD_LAYOUT';\nexport const REMOVE_PRINT_DASHBOARD_ITEM = 'REMOVE_PRINT_DASHBOARD_ITEM';\nexport const UPDATE_PRINT_DASHBOARD_ITEM = 'UPDATE_PRINT_DASHBOARD_ITEM';\nexport const DEFAULT_STATE_PRINT_DASHBOARD = {};\nconst DEFAULT_DASHBOARD_ITEMS = [];\nexport const NEW_PRINT_DASHBOARD_STATE = {\n  id: '',\n  name: '',\n  access: {},\n  description: '',\n  dashboardItems: DEFAULT_DASHBOARD_ITEMS\n};\nexport default ((state = DEFAULT_STATE_PRINT_DASHBOARD, action) => {\n  switch (action.type) {\n    case SET_PRINT_DASHBOARD:\n      {\n        const newState = {};\n        Object.keys(NEW_PRINT_DASHBOARD_STATE).map(k => newState[k] = action.value[k]);\n        return newState;\n      }\n\n    case CLEAR_PRINT_DASHBOARD:\n      return DEFAULT_STATE_PRINT_DASHBOARD;\n\n    case ADD_PRINT_DASHBOARD_ITEM:\n      if (!action.value.position) {\n        return update(state, {\n          dashboardItems: {\n            $unshift: [action.value]\n          }\n        });\n      }\n\n      return update(state, {\n        dashboardItems: {\n          $splice: [[parseInt(action.value.position), 0, action.value]]\n        }\n      });\n\n    case REMOVE_PRINT_DASHBOARD_ITEM:\n      {\n        const idToRemove = action.value;\n        const dashboardItemIndex = state.dashboardItems.findIndex(item => item.id === idToRemove);\n\n        if (dashboardItemIndex > -1) {\n          return update(state, {\n            dashboardItems: {\n              $splice: [[dashboardItemIndex, 1]]\n            }\n          });\n        }\n\n        return state;\n      }\n\n    case UPDATE_PRINT_DASHBOARD_ITEM:\n      {\n        const dashboardItem = action.value;\n        const dashboardItemIndex = state.dashboardItems.findIndex(item => item.id === dashboardItem.id);\n\n        if (dashboardItemIndex > -1) {\n          const newState = update(state, {\n            dashboardItems: {\n              $splice: [[dashboardItemIndex, 1, Object.assign({}, dashboardItem)]]\n            }\n          });\n          return newState;\n        }\n\n        return state;\n      }\n\n    case SET_PRINT_DASHBOARD_LAYOUT:\n      {\n        const stateItems = orArray(state.dashboardItems);\n        let layoutHasChanged = false;\n        const newStateItems = action.value.map(({\n          x,\n          y,\n          w,\n          h,\n          i\n        }) => {\n          const stateItem = stateItems.find(si => si.id === i);\n\n          if (!(stateItem.x === x && stateItem.y === y && stateItem.w === w && stateItem.h === h)) {\n            layoutHasChanged = true;\n            return Object.assign({}, stateItem, {\n              w,\n              h,\n              x,\n              y\n            });\n          }\n\n          return stateItem;\n        });\n        return layoutHasChanged ? { ...state,\n          dashboardItems: newStateItems\n        } : state;\n      }\n\n    default:\n      return state;\n  }\n}); // root selector\n\nexport const sGetPrintDashboardRoot = state => state.printDashboard; // selectors\n\nexport const sGetIsPrinting = state => !isEmpty(state.printDashboard);\nexport const sGetPrintDashboardName = state => sGetPrintDashboardRoot(state).name;\nexport const sGetPrintDashboardDescription = state => sGetPrintDashboardRoot(state).description;\nexport const sGetPrintDashboardItems = state => {\n  return sGetPrintDashboardRoot(state)?.dashboardItems || DEFAULT_DASHBOARD_ITEMS;\n};","import React from 'react';\nimport { connect } from 'react-redux';\nimport i18n from '@dhis2/d2-i18n';\nimport PropTypes from 'prop-types';\nimport Input from '@material-ui/core/Input';\nimport ItemHeader from '../ItemHeader/ItemHeader';\nimport PrintItemInfo from '../ItemHeader/PrintItemInfo';\nimport Line from '../../../widgets/Line';\nimport { Parser as RichTextParser, Editor as RichTextEditor } from '@dhis2/d2-ui-rich-text';\nimport { acUpdateDashboardItem } from '../../../actions/editDashboard';\nimport { sGetEditDashboardItems } from '../../../reducers/editDashboard';\nimport { sGetDashboardItems } from '../../../reducers/dashboards';\nimport { sGetIsPrinting, sGetPrintDashboardItems } from '../../../reducers/printDashboard';\nimport { isEditMode, PRINT_LAYOUT } from '../../Dashboard/dashboardModes';\nconst style = {\n  textDiv: {\n    padding: '10px',\n    whiteSpace: 'pre-line',\n    lineHeight: '20px'\n  },\n  textField: {\n    fontSize: '14px',\n    fontStretch: 'normal',\n    width: '90%',\n    margin: '0 auto',\n    display: 'block',\n    lineHeight: '24px'\n  },\n  container: {\n    marginBottom: '20px',\n    marginTop: '20px'\n  }\n};\n\nconst TextItem = props => {\n  const {\n    item,\n    dashboardMode,\n    text,\n    acUpdateDashboardItem\n  } = props;\n\n  const onChangeText = event => {\n    const updatedItem = { ...item,\n      text: event.target.value\n    };\n    acUpdateDashboardItem(updatedItem);\n  };\n\n  const viewItem = () => {\n    const textDivStyle = Object.assign({}, style.textField, style.textDiv);\n    return <div className=\"dashboard-item-content\" style={style.container}>\n                <RichTextParser style={textDivStyle}>{text}</RichTextParser>\n            </div>;\n  };\n\n  const editItem = () => {\n    return <>\n                <ItemHeader title={i18n.t('Text item')} itemId={item.id} dashboardMode={dashboardMode} />\n                <Line />\n                <div className=\"dashboard-item-content\">\n                    <RichTextEditor onEdit={onChangeText}>\n                        <Input value={text} multiline fullWidth style={style.textField} placeholder={i18n.t('Add text here')} onChange={onChangeText} />\n                    </RichTextEditor>\n                </div>\n            </>;\n  };\n\n  const printItem = () => {\n    const textDivStyle = Object.assign({}, style.textField, style.textDiv);\n    return <>\n                {props.item.shortened ? <PrintItemInfo /> : null}\n                <div className=\"dashboard-item-content\" style={style.container}>\n                    <RichTextParser style={textDivStyle}>{text}</RichTextParser>\n                </div>\n            </>;\n  };\n\n  let textItem;\n\n  if (isEditMode(dashboardMode)) {\n    textItem = editItem;\n  } else if (dashboardMode === PRINT_LAYOUT) {\n    textItem = printItem;\n  } else {\n    textItem = viewItem;\n  }\n\n  return <>{textItem()}</>;\n};\n\nconst mapStateToProps = (state, ownProps) => {\n  const isPrintPreview = sGetIsPrinting(state);\n  let items;\n\n  if (isPrintPreview) {\n    items = sGetPrintDashboardItems(state);\n  } else if (isEditMode(ownProps.dashboardMode)) {\n    items = sGetEditDashboardItems(state);\n  } else {\n    items = sGetDashboardItems(state);\n  }\n\n  const item = items.find(item => item.id === ownProps.item.id);\n  return {\n    text: item ? item.text : ''\n  };\n};\n\nTextItem.propTypes = {\n  acUpdateDashboardItem: PropTypes.func,\n  dashboardMode: PropTypes.string,\n  item: PropTypes.object,\n  text: PropTypes.string\n};\nexport default connect(mapStateToProps, {\n  acUpdateDashboardItem\n})(TextItem);","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport NotInterestedIcon from '@material-ui/icons/NotInterested';\nimport { FILTER_ORG_UNIT } from '../../../actions/itemFilters';\nimport { sGetItemFiltersRoot, DEFAULT_STATE_ITEM_FILTERS } from '../../../reducers/itemFilters';\nimport ItemHeader from '../ItemHeader/ItemHeader';\nimport Line from '../../../widgets/Line';\nimport { isEditMode } from '../../Dashboard/dashboardModes';\n\nconst getIframeSrc = (appDetails, item, itemFilters) => {\n  let iframeSrc = `${appDetails.launchUrl}?dashboardItemId=${item.id}`;\n\n  if (itemFilters && itemFilters[FILTER_ORG_UNIT] && itemFilters[FILTER_ORG_UNIT].length) {\n    const ouIds = itemFilters[FILTER_ORG_UNIT].map(ouPath => ouPath.split('/').slice(-1)[0]);\n    iframeSrc += `&userOrgUnit=${ouIds.join(',')}`;\n  }\n\n  return iframeSrc;\n};\n\nconst AppItem = ({\n  dashboardMode,\n  item,\n  itemFilters\n}, context) => {\n  let appDetails;\n  const appKey = item.appKey;\n\n  if (appKey) {\n    appDetails = context.d2.system.installedApps.find(app => app.key === appKey);\n  }\n\n  return appDetails && appDetails.name && appDetails.launchUrl ? <>\n            <ItemHeader title={appDetails.name} itemId={item.id} dashboardMode={dashboardMode} isShortened={item.shortened} />\n            <Line />\n            <iframe title={appDetails.name} src={getIframeSrc(appDetails, item, itemFilters)} className=\"dashboard-item-content\" style={{\n      border: 'none'\n    }} />\n        </> : <>\n            <ItemHeader title={`${appKey} app not found`} />\n            <Line />\n            <div className=\"dashboard-item-content\" style={{\n      display: 'flex',\n      justifyContent: 'center',\n      alignItems: 'center',\n      height: '90%'\n    }}>\n                <NotInterestedIcon color=\"disabled\" disabled style={{\n        width: 100,\n        height: 100,\n        align: 'center'\n      }} />\n            </div>\n        </>;\n};\n\nAppItem.propTypes = {\n  dashboardMode: PropTypes.string,\n  item: PropTypes.object,\n  itemFilters: PropTypes.object\n};\nAppItem.contextTypes = {\n  d2: PropTypes.object\n};\n\nconst mapStateToProps = (state, ownProps) => {\n  const itemFilters = !isEditMode(ownProps.dashboardMode) ? sGetItemFiltersRoot(state) : DEFAULT_STATE_ITEM_FILTERS;\n  return {\n    itemFilters\n  };\n};\n\nexport default connect(mapStateToProps)(AppItem);","import React from 'react';\nimport PropTypes from 'prop-types';\nimport i18n from '@dhis2/d2-i18n';\nimport { colors } from '@dhis2/ui';\nimport ItemHeader from '../ItemHeader/ItemHeader';\nconst style = {\n  margin: '21px 28px',\n  fontSize: '14px',\n  lineHeight: '18px',\n  color: colors.grey600\n};\n\nconst SpacerItem = props => {\n  return <>\n            <ItemHeader title={i18n.t('Spacer')} itemId={props.item.id} dashboardMode={props.dashboardMode} isShortened={props.item.shortened} />\n            <p style={style}>\n                {i18n.t('Use a spacer to create empty vertical space between other dashboard items.')}\n            </p>\n        </>;\n};\n\nSpacerItem.propTypes = {\n  dashboardMode: PropTypes.string,\n  item: PropTypes.object\n};\nexport default SpacerItem;","import React from 'react';\n\nconst PageBreakItem = () => <div />;\n\nexport default PageBreakItem;","import React from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport i18n from '@dhis2/d2-i18n';\nimport { sGetSelectedId, sGetSelectedShowDescription } from '../../../reducers/selected';\nimport { sGetDashboardById, EMPTY_DASHBOARD } from '../../../reducers/dashboards';\nimport { sGetNamedItemFilters } from '../../../reducers/itemFilters';\nimport { sGetIsEditing } from '../../../reducers/editDashboard';\nimport { sGetPrintDashboardName, sGetPrintDashboardDescription } from '../../../reducers/printDashboard';\nimport classes from './styles/Item.module.css';\n\nconst PrintTitlePageItem = ({\n  name,\n  description,\n  itemFilters,\n  showDescription\n}) => {\n  const getItemFilterList = () => {\n    const listItems = itemFilters.map(({\n      name,\n      values\n    }) => <li className={classes.filterListItem} key={name}>\n                {name}: {values.map(val => val.name).join(', ')}\n            </li>);\n    return <ul className={classes.filterList}>{listItems}</ul>;\n  };\n\n  return <div className={classes.titlePage}>\n            <p className={classes.name}>{name}</p>\n            {showDescription && description && <p className={classes.description}>{description}</p>}\n            {itemFilters.length > 0 && <>\n                    <p className={classes.filterTitle}>\n                        {i18n.t('Filters applied')}\n                    </p>\n                    {getItemFilterList()}\n                </>}\n        </div>;\n};\n\nPrintTitlePageItem.propTypes = {\n  description: PropTypes.string,\n  itemFilters: PropTypes.array,\n  name: PropTypes.string,\n  showDescription: PropTypes.bool\n};\nPrintTitlePageItem.defaultProps = {\n  description: '',\n  name: '',\n  showDescription: false\n};\n\nconst mapStateToProps = state => {\n  const id = sGetSelectedId(state);\n  const isEditMode = sGetIsEditing(state);\n  const viewDashboard = sGetDashboardById(state, id) || EMPTY_DASHBOARD;\n  const name = isEditMode ? sGetPrintDashboardName(state) || i18n.t('Untitled dashboard') : viewDashboard.displayName;\n  const description = isEditMode ? sGetPrintDashboardDescription(state) : viewDashboard.displayDescription;\n  return {\n    name,\n    description,\n    itemFilters: sGetNamedItemFilters(state),\n    showDescription: sGetSelectedShowDescription(state)\n  };\n};\n\nexport default connect(mapStateToProps)(PrintTitlePageItem);","import React from 'react';\nimport PropTypes from 'prop-types';\nimport VisualizationItem from './VisualizationItem/Item';\nimport MessagesItem from './MessagesItem/Item';\nimport NotSupportedItem from './NotSupportedItem/Item';\nimport ListItem from './ListItem/Item';\nimport TextItem from './TextItem/Item';\nimport AppItem from './AppItem/Item';\nimport SpacerItem from './SpacerItem/Item';\nimport PageBreakItem from './PageBreakItem/Item';\nimport PrintTitlePageItem from './PrintTitlePageItem/Item';\nimport { APP, VISUALIZATION, REPORT_TABLE, CHART, MAP, EVENT_CHART, EVENT_REPORT, MESSAGES, REPORTS, RESOURCES, USERS, TEXT, SPACER, PAGEBREAK, PRINT_TITLE_PAGE } from '../../modules/itemTypes';\n\nconst getGridItem = type => {\n  switch (type) {\n    case VISUALIZATION:\n    case REPORT_TABLE:\n    case CHART:\n    case MAP:\n    case EVENT_CHART:\n    case EVENT_REPORT:\n      return VisualizationItem;\n\n    case MESSAGES:\n      return MessagesItem;\n\n    case REPORTS:\n    case RESOURCES:\n    case USERS:\n      return ListItem;\n\n    case TEXT:\n      return TextItem;\n\n    case SPACER:\n      return SpacerItem;\n\n    case APP:\n      return AppItem;\n\n    case PAGEBREAK:\n      return PageBreakItem;\n\n    case PRINT_TITLE_PAGE:\n      return PrintTitlePageItem;\n\n    default:\n      return NotSupportedItem;\n  }\n};\n\nexport const Item = props => {\n  const GridItem = getGridItem(props.item.type);\n  return <GridItem item={props.item} dashboardMode={props.dashboardMode} onToggleItemExpanded={props.onToggleItemExpanded} />;\n};\nItem.propTypes = {\n  dashboardMode: PropTypes.string,\n  item: PropTypes.object,\n  onToggleItemExpanded: PropTypes.func\n};","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport debounce from 'lodash/debounce';\nimport pick from 'lodash/pick';\nconst defaultDebounceMs = 100;\nconst defaultBufferFactor = 0.25;\n\nclass ProgressiveLoadingContainer extends Component {\n  static propTypes = {\n    children: PropTypes.node.isRequired,\n    bufferFactor: PropTypes.number,\n    className: PropTypes.string,\n    debounceMs: PropTypes.number,\n    style: PropTypes.object\n  };\n  static defaultProps = {\n    debounceMs: defaultDebounceMs,\n    bufferFactor: defaultBufferFactor\n  };\n  state = {\n    shouldLoad: false\n  };\n  containerRef = null;\n  shouldLoadHandler = null;\n  handlerOptions = {\n    passive: true\n  };\n\n  checkShouldLoad() {\n    if (!this.containerRef) {\n      return;\n    }\n\n    const bufferPx = this.props.bufferFactor * window.innerHeight;\n    const rect = this.containerRef.getBoundingClientRect();\n\n    if (rect.bottom > -bufferPx && rect.top < window.innerHeight + bufferPx) {\n      this.setState({\n        shouldLoad: true\n      });\n      this.removeHandler();\n    }\n  }\n\n  registerHandler() {\n    this.shouldLoadHandler = debounce(() => this.checkShouldLoad(), this.props.debounceMs);\n    document.getElementsByClassName('dashboard-wrapper')[0]?.addEventListener('scroll', this.shouldLoadHandler, this.handlerOptions);\n  }\n\n  removeHandler() {\n    document.getElementsByClassName('dashboard-wrapper')[0]?.removeEventListener('scroll', this.shouldLoadHandler, this.handlerOptions);\n  }\n\n  componentDidMount() {\n    this.registerHandler();\n    this.checkShouldLoad();\n  }\n\n  componentWillUnmount() {\n    this.removeHandler();\n  }\n\n  render() {\n    const {\n      children,\n      className,\n      style,\n      ...props\n    } = this.props;\n    const {\n      shouldLoad\n    } = this.state;\n    const eventProps = pick(props, ['onMouseDown', 'onTouchStart', 'onMouseUp', 'onTouchEnd']);\n    return <div ref={ref => this.containerRef = ref} style={style} className={className} {...eventProps}>\n                {shouldLoad && children}\n            </div>;\n  }\n\n}\n\nexport default ProgressiveLoadingContainer;","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport i18n from '@dhis2/d2-i18n';\nimport ReactGridLayout from 'react-grid-layout';\nimport { Layer, CenteredContent, CircularLoader } from '@dhis2/ui';\nimport { acUpdateDashboardLayout } from '../../actions/editDashboard';\nimport { Item } from '../Item/Item';\nimport { resize as pluginResize } from '../Item/VisualizationItem/plugin';\nimport { isVisualizationType } from '../../modules/itemTypes';\nimport { GRID_ROW_HEIGHT, GRID_COMPACT_TYPE, MARGIN, getGridColumns, hasShape, onItemResize } from './gridUtil';\nimport { orArray } from '../../modules/util';\nimport NoContentMessage from '../../widgets/NoContentMessage';\nimport 'react-grid-layout/css/styles.css';\nimport 'react-resizable/css/styles.css';\nimport './ItemGrid.css';\nimport { sGetSelectedId, sGetSelectedIsLoading } from '../../reducers/selected';\nimport { sGetEditDashboardRoot, sGetEditDashboardItems } from '../../reducers/editDashboard';\nimport { sGetDashboardById, sGetDashboardItems } from '../../reducers/dashboards';\nimport ProgressiveLoadingContainer from '../Item/ProgressiveLoadingContainer';\nimport { VIEW, EDIT } from '../Dashboard/dashboardModes'; // Component\n\nconst EXPANDED_HEIGHT = 17; // this is set in the .dashboard-item-content css\n\nexport const ITEM_CONTENT_PADDING_BOTTOM = 4;\nexport class ItemGrid extends Component {\n  state = {\n    expandedItems: {}\n  };\n  onToggleItemExpanded = clickedId => {\n    const isExpanded = typeof this.state.expandedItems[clickedId] === 'boolean' ? this.state.expandedItems[clickedId] : false;\n    const expandedItems = { ...this.state.expandedItems\n    };\n    expandedItems[clickedId] = !isExpanded;\n    this.setState({\n      expandedItems\n    });\n  };\n\n  componentWillReceiveProps(nextProps) {\n    if (nextProps.edit) {\n      this.setState({\n        expandedItems: {}\n      });\n    }\n  }\n\n  onLayoutChange = newLayout => {\n    if (this.props.edit) {\n      this.props.acUpdateDashboardLayout(newLayout);\n    }\n  };\n  onResizeStop = (layout, oldItem, newItem) => {\n    onItemResize(newItem.i);\n    const dashboardItem = this.props.dashboardItems.find(item => item.id === newItem.i); // call resize on the item component if it's a plugin type\n\n    if (dashboardItem && isVisualizationType(dashboardItem)) {\n      pluginResize(dashboardItem);\n    }\n  };\n  adjustHeightForExpanded = dashboardItem => {\n    const expandedItem = this.state.expandedItems[dashboardItem.id];\n\n    if (expandedItem && expandedItem === true) {\n      return Object.assign({}, dashboardItem, {\n        h: dashboardItem.h + EXPANDED_HEIGHT\n      });\n    }\n\n    return dashboardItem;\n  };\n  getItemComponent = item => {\n    const itemClassNames = [item.type, this.props.edit ? 'edit' : 'view'].join(' ');\n    return <ProgressiveLoadingContainer key={item.i} className={itemClassNames}>\n                <Item item={item} dashboardMode={this.props.edit ? EDIT : VIEW} onToggleItemExpanded={this.onToggleItemExpanded} />\n            </ProgressiveLoadingContainer>;\n  };\n  getItemComponents = items => items.map(item => this.getItemComponent(item));\n\n  render() {\n    const {\n      edit,\n      isLoading,\n      dashboardItems\n    } = this.props;\n\n    if (!isLoading && !dashboardItems.length) {\n      return <NoContentMessage text={i18n.t('There are no items on this dashboard')} />;\n    }\n\n    const items = edit ? dashboardItems : dashboardItems.map(this.adjustHeightForExpanded);\n    return <div className=\"grid-wrapper\">\n                {isLoading ? <Layer translucent>\n                        <CenteredContent>\n                            <CircularLoader />\n                        </CenteredContent>\n                    </Layer> : null}\n                <ReactGridLayout onLayoutChange={this.onLayoutChange} onResizeStop={this.onResizeStop} className=\"layout\" layout={items} margin={MARGIN} cols={getGridColumns()} rowHeight={GRID_ROW_HEIGHT} width={window.innerWidth} compactType={GRID_COMPACT_TYPE} isDraggable={edit} isResizable={edit} draggableCancel=\"input,textarea\">\n                    {this.getItemComponents(items)}\n                </ReactGridLayout>\n            </div>;\n  }\n\n}\nItemGrid.propTypes = {\n  acUpdateDashboardLayout: PropTypes.func,\n  dashboardItems: PropTypes.array,\n  edit: PropTypes.bool,\n  isLoading: PropTypes.bool\n};\nItemGrid.defaultProps = {\n  dashboardItems: []\n}; // Container\n\nconst mapStateToProps = (state, ownProps) => {\n  const selectedDashboard = ownProps.edit ? sGetEditDashboardRoot(state) : sGetDashboardById(state, sGetSelectedId(state));\n  const dashboardItems = ownProps.edit ? sGetEditDashboardItems(state) : sGetDashboardItems(state);\n  return {\n    isLoading: sGetSelectedIsLoading(state) || !selectedDashboard,\n    dashboardItems\n  };\n};\n\nconst mapDispatchToProps = {\n  acUpdateDashboardLayout\n};\n\nconst mergeProps = (stateProps, dispatchProps, ownProps) => {\n  const validItems = orArray(stateProps.dashboardItems).filter(hasShape);\n  return { ...dispatchProps,\n    edit: ownProps.edit,\n    isLoading: stateProps.isLoading,\n    dashboardItems: validItems,\n    onItemResize\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps, mergeProps)(ItemGrid);","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport i18n from '@dhis2/d2-i18n';\nimport { colors } from '@dhis2/ui';\nconst styles = {\n  badgeContainer: {\n    margin: '2px',\n    padding: '0 16px',\n    borderRadius: '4px',\n    color: colors.white,\n    backgroundColor: '#212934',\n    height: 36,\n    display: 'flex',\n    alignItems: 'center'\n  },\n  badge: {\n    fontSize: '13px',\n    cursor: 'pointer',\n    whiteSpace: 'nowrap'\n  },\n  badgeRemove: {\n    fontSize: '12px',\n    textDecoration: 'underline',\n    marginLeft: '24px',\n    cursor: 'pointer'\n  }\n};\n\nclass FilterBadge extends Component {\n  onClick = id => () => this.props.onClick(id);\n  onRemove = id => () => this.props.onRemove(id);\n\n  render() {\n    const {\n      data\n    } = this.props;\n    return <div style={styles.badgeContainer}>\n                <span style={styles.badge} onClick={this.onClick(data.id)}>\n                    {`${data.name}: ${data.values.length > 1 ? i18n.t('{{count}} selected', {\n          count: data.values.length\n        }) : data.values[0].name}`}\n                </span>\n                <span style={styles.badgeRemove} onClick={this.onRemove(data.id)}>\n                    {i18n.t('Remove')}\n                </span>\n            </div>;\n  }\n\n}\n\nFilterBadge.propTypes = {\n  data: PropTypes.object.isRequired,\n  onClick: PropTypes.func.isRequired,\n  onRemove: PropTypes.func.isRequired\n};\nFilterBadge.defaultProps = {\n  onClick: Function.prototype,\n  onRemove: Function.prototype\n};\nexport default FilterBadge;","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport FilterBadge from './FilterBadge';\nimport { sGetNamedItemFilters } from '../../reducers/itemFilters';\nimport { acRemoveItemFilter } from '../../actions/itemFilters';\nimport { acSetActiveModalDimension } from '../../actions/activeModalDimension';\nimport classes from './styles/FilterBar.module.css';\nexport class FilterBar extends Component {\n  onBadgeRemove = id => {\n    this.props.removeItemFilter(id);\n  };\n  onBadgeClick = id => {\n    this.props.setActiveModalDimension({\n      id,\n      name: this.props.filters.find(item => item.id === id).name\n    });\n  };\n\n  render() {\n    const {\n      filters\n    } = this.props;\n    return filters.length ? // the 3 is calculated so that the FilterBar has the same vertical position as the TitleBar in relation to the ControlBar\n    <div className={classes.bar} style={{\n      top: 3\n    }}>\n                {filters.map(filter => <FilterBadge key={filter.id} data={filter} onClick={this.onBadgeClick} onRemove={this.onBadgeRemove} />)}\n            </div> : null;\n  }\n\n}\nFilterBar.propTypes = {\n  filters: PropTypes.array.isRequired,\n  removeItemFilter: PropTypes.func.isRequired,\n  setActiveModalDimension: PropTypes.func\n};\nFilterBar.defaultProps = {\n  filters: [],\n  removeItemFIlter: Function.prototype\n};\n\nconst mapStateToProps = state => ({\n  filters: sGetNamedItemFilters(state)\n});\n\nexport default connect(mapStateToProps, {\n  setActiveModalDimension: acSetActiveModalDimension,\n  removeItemFilter: acRemoveItemFilter\n})(FilterBar);","export const SET_WINDOW_HEIGHT = 'SET_WINDOW_HEIGHT';\nexport const DEFAULT_STATE_WINDOW_HEIGHT = window.innerHeight;\nexport default ((state = DEFAULT_STATE_WINDOW_HEIGHT, action) => {\n  switch (action.type) {\n    case SET_WINDOW_HEIGHT:\n      {\n        return action.value;\n      }\n\n    default:\n      return state;\n  }\n});\nexport const sGetWindowHeight = state => state.windowHeight;","import { generateUid } from 'd2/uid';\nimport { SET_PRINT_DASHBOARD, CLEAR_PRINT_DASHBOARD, SET_PRINT_DASHBOARD_LAYOUT, ADD_PRINT_DASHBOARD_ITEM, REMOVE_PRINT_DASHBOARD_ITEM, UPDATE_PRINT_DASHBOARD_ITEM } from '../reducers/printDashboard';\nimport { NEW_ITEM_SHAPE, getGridItemProperties, getPageBreakItemShape, getPrintTitlePageItemShape } from '../components/ItemGrid/gridUtil';\nimport { itemTypeMap, PAGEBREAK } from '../modules/itemTypes'; // actions\n\nexport const acSetPrintDashboard = (dashboard, items) => {\n  const val = { ...dashboard,\n    dashboardItems: items\n  };\n  return {\n    type: SET_PRINT_DASHBOARD,\n    value: val\n  };\n};\nexport const acClearPrintDashboard = () => ({\n  type: CLEAR_PRINT_DASHBOARD\n});\nexport const acUpdatePrintDashboardLayout = value => ({\n  type: SET_PRINT_DASHBOARD_LAYOUT,\n  value\n});\nexport const acAddPrintDashboardItem = item => {\n  const type = item.type;\n  delete item.type;\n  const itemPropName = itemTypeMap[type].propName;\n  const id = generateUid();\n  const gridItemProperties = getGridItemProperties(id);\n  let shape;\n\n  if (type === PAGEBREAK) {\n    const yPos = item.yPos || 0;\n    shape = getPageBreakItemShape(yPos, item.isStatic);\n  } else {\n    shape = getPrintTitlePageItemShape(item.isOneItemPerPage);\n  }\n\n  return {\n    type: ADD_PRINT_DASHBOARD_ITEM,\n    value: {\n      id,\n      type,\n      position: item.position || null,\n      [itemPropName]: item.content,\n      ...NEW_ITEM_SHAPE,\n      ...gridItemProperties,\n      ...shape\n    }\n  };\n};\nexport const acRemovePrintDashboardItem = value => ({\n  type: REMOVE_PRINT_DASHBOARD_ITEM,\n  value\n});\nexport const acUpdatePrintDashboardItem = item => ({\n  type: UPDATE_PRINT_DASHBOARD_ITEM,\n  value: item\n});","import React, { useEffect } from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport TitleBar from '../TitleBar/TitleBar';\nimport ItemGrid from '../ItemGrid/ItemGrid';\nimport FilterBar from '../FilterBar/FilterBar';\nimport DashboardsBar from '../ControlBar/DashboardsBar';\nimport DashboardVerticalOffset from './DashboardVerticalOffset';\nimport { sGetIsEditing } from '../../reducers/editDashboard';\nimport { sGetIsPrinting } from '../../reducers/printDashboard';\nimport { sGetSelectedId } from '../../reducers/selected';\nimport { sGetWindowHeight } from '../../reducers/windowHeight';\nimport { sGetControlBarUserRows } from '../../reducers/controlBar';\nimport { acClearEditDashboard } from '../../actions/editDashboard';\nimport { acClearPrintDashboard } from '../../actions/printDashboard';\nimport { getControlBarHeight, HEADERBAR_HEIGHT } from '../ControlBar/controlBarDimensions';\nexport const ViewDashboard = props => {\n  useEffect(() => {\n    if (props.dashboardIsEditing) {\n      props.clearEditDashboard();\n    } else if (props.dashboardIsPrinting) {\n      props.clearPrintDashboard();\n    }\n  }, [props.dashboardIsEditing, props.dashboardIsPrinting]);\n  useEffect(() => {\n    document.querySelector('.dashboard-wrapper')?.scroll(0, 0);\n  }, [props.selectedId]);\n  const height = props.windowHeight - HEADERBAR_HEIGHT - getControlBarHeight(props.controlBarRows);\n  return <>\n            <DashboardsBar />\n            <DashboardVerticalOffset />\n            <div className=\"dashboard-wrapper\" style={{\n      height\n    }}>\n                <TitleBar edit={false} />\n                <FilterBar />\n                <ItemGrid edit={false} />\n            </div>\n        </>;\n};\nViewDashboard.propTypes = {\n  clearEditDashboard: PropTypes.func,\n  clearPrintDashboard: PropTypes.func,\n  controlBarRows: PropTypes.number,\n  dashboardIsEditing: PropTypes.bool,\n  dashboardIsPrinting: PropTypes.bool,\n  selectedId: PropTypes.string,\n  windowHeight: PropTypes.number\n};\n\nconst mapStateToProps = state => {\n  return {\n    dashboardIsEditing: sGetIsEditing(state),\n    dashboardIsPrinting: sGetIsPrinting(state),\n    controlBarRows: sGetControlBarUserRows(state),\n    selectedId: sGetSelectedId(state),\n    windowHeight: sGetWindowHeight(state)\n  };\n};\n\nexport default connect(mapStateToProps, {\n  clearEditDashboard: acClearEditDashboard,\n  clearPrintDashboard: acClearPrintDashboard\n})(ViewDashboard);","import React from 'react';\nimport PropTypes from 'prop-types';\nimport i18n from '@dhis2/d2-i18n';\nimport { Button, Modal, ModalContent, ModalActions, ButtonStrip, ModalTitle } from '@dhis2/ui';\nimport classes from './styles/ConfirmDeleteDialog.module.css';\nexport const ConfirmDeleteDialog = ({\n  dashboardName,\n  onDeleteConfirmed,\n  onContinueEditing,\n  open\n}) => {\n  const actions = [<Button key=\"cancel\" secondary onClick={onContinueEditing}>\n            {i18n.t('Cancel')}\n        </Button>, <Button key=\"delete\" destructive onClick={onDeleteConfirmed}>\n            {i18n.t('Delete')}\n        </Button>];\n  return open && <Modal onClose={onContinueEditing} small position=\"middle\">\n                <ModalTitle>{i18n.t('Delete dashboard')}</ModalTitle>\n                <ModalContent>\n                    <span className={classes.content}>\n                        {i18n.t('Deleting dashboard \"{{ dashboardName }}\" will remove it for all users. This action cannot be undone. Are you sure you want to permanently delete this dashboard?', {\n          dashboardName\n        })}\n                    </span>\n                </ModalContent>\n                <ModalActions>\n                    <ButtonStrip>{actions}</ButtonStrip>\n                </ModalActions>\n            </Modal>;\n};\nConfirmDeleteDialog.propTypes = {\n  dashboardName: PropTypes.string,\n  open: PropTypes.bool,\n  onContinueEditing: PropTypes.func,\n  onDeleteConfirmed: PropTypes.func\n};\nexport default ConfirmDeleteDialog;","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { Redirect } from 'react-router-dom';\nimport i18n from '@dhis2/d2-i18n';\nimport ControlBar from './ControlBar';\nimport TranslationDialog from '@dhis2/d2-ui-translation-dialog';\nimport { Button, ButtonStrip } from '@dhis2/ui';\nimport ConfirmDeleteDialog from './ConfirmDeleteDialog';\nimport { tSaveDashboard, acClearEditDashboard } from '../../actions/editDashboard';\nimport { acClearPrintDashboard } from '../../actions/printDashboard';\nimport { tDeleteDashboard, acSetDashboardDisplayName } from '../../actions/dashboards';\nimport { sGetEditDashboardRoot, sGetIsNewDashboard, sGetIsPrintPreviewView } from '../../reducers/editDashboard';\nimport { acSetPrintPreviewView, acClearPrintPreviewView } from '../../actions/editDashboard';\nimport { CONTROL_BAR_ROW_HEIGHT, MIN_ROW_COUNT, getControlBarHeight } from './controlBarDimensions';\nimport { apiFetchDashboard } from '../../api/dashboards';\nimport classes from './styles/DashboardsBar.module.css';\nconst buttonBarStyle = {\n  height: CONTROL_BAR_ROW_HEIGHT,\n  paddingTop: '15px',\n  marginLeft: '15px',\n  marginRight: '15px'\n};\nexport class EditBar extends Component {\n  state = {\n    translationDialogIsOpen: false,\n    dashboardModel: undefined,\n    confirmDeleteDialogOpen: false,\n    redirectUrl: undefined\n  };\n  onConfirmDelete = () => {\n    this.setState({\n      confirmDeleteDialogOpen: true\n    });\n  };\n  onSave = () => {\n    this.props.onSave().then(newId => {\n      this.setState({\n        redirectUrl: `/${newId}`\n      });\n    });\n  };\n  onPrintPreview = () => {\n    if (this.props.isPrintPreviewView) {\n      this.props.clearPrintPreview();\n      this.props.clearPrintDashboard();\n    } else {\n      this.props.showPrintPreview();\n    }\n  };\n  onDiscard = () => {\n    this.props.onDiscardChanges();\n    const redirectUrl = this.props.dashboardId ? `/${this.props.dashboardId}` : '/';\n    this.setState({\n      redirectUrl\n    });\n  };\n  onContinueEditing = () => {\n    this.setState({\n      confirmDeleteDialogOpen: false\n    });\n  };\n  onDeleteConfirmed = () => {\n    this.setState({\n      confirmDeleteDialogOpen: false\n    });\n    this.props.onDelete(this.props.dashboardId).then(() => {\n      this.setState({\n        redirectUrl: '/'\n      });\n    });\n  };\n  onTranslationsSaved = async translations => {\n    if (translations && translations.length) {\n      const dbLocale = await this.context.d2.currentUser.userSettings.get('keyDbLocale');\n      const translation = translations.find(t => t.locale === dbLocale && t.property === 'NAME');\n\n      if (translation && translation.value) {\n        this.props.onTranslate(this.props.dashboardId, translation.value);\n      }\n    }\n  };\n  fetchDashboardModel = () => {\n    if (this.props.dashboardId && !this.state.dashboardModel) {\n      apiFetchDashboard(this.props.dashboardId).then(dashboardModel => this.setState({\n        dashboardModel\n      }));\n    }\n  };\n\n  componentDidMount() {\n    this.fetchDashboardModel();\n  }\n\n  componentDidUpdate() {\n    this.fetchDashboardModel();\n  }\n\n  toggleTranslationDialog = () => {\n    this.setState({\n      translationDialogIsOpen: !this.state.translationDialogIsOpen\n    });\n  };\n  confirmDeleteDialog = () => this.props.deleteAccess && this.props.dashboardId ? <ConfirmDeleteDialog dashboardName={this.props.dashboardName} onDeleteConfirmed={this.onDeleteConfirmed} onContinueEditing={this.onContinueEditing} open={this.state.confirmDeleteDialogOpen} /> : null;\n  translationDialog = () => this.state.dashboardModel && this.state.dashboardModel.id ? <TranslationDialog className=\"translation-dialog\" d2={this.context.d2} open={this.state.translationDialogIsOpen} onRequestClose={this.toggleTranslationDialog} objectToTranslate={this.state.dashboardModel} fieldsToTranslate={['name', 'description']} onTranslationSaved={this.onTranslationsSaved} onTranslationError={err => console.log('translation update error', err)} /> : null;\n  renderActionButtons = () => {\n    const printPreviewText = this.props.isPrintPreviewView ? i18n.t('Exit Print preview') : i18n.t('Print preview');\n    return <div className={classes.leftControls}>\n                <ButtonStrip>\n                    <Button primary onClick={this.onSave}>\n                        {i18n.t('Save changes')}\n                    </Button>\n                    <Button onClick={this.onPrintPreview}>\n                        {printPreviewText}\n                    </Button>\n\n                    {this.props.dashboardId ? <Button onClick={this.toggleTranslationDialog}>\n                            {i18n.t('Translate')}\n                        </Button> : null}\n                    {this.props.dashboardId && this.props.deleteAccess ? <Button onClick={this.onConfirmDelete}>\n                            {i18n.t('Delete')}\n                        </Button> : null}\n                </ButtonStrip>\n            </div>;\n  };\n\n  render() {\n    if (this.state.redirectUrl) {\n      return <Redirect to={this.state.redirectUrl} />;\n    }\n\n    const {\n      updateAccess\n    } = this.props;\n    const controlBarHeight = getControlBarHeight(MIN_ROW_COUNT);\n    const discardBtnText = updateAccess ? i18n.t('Exit without saving') : i18n.t('Go to dashboards');\n    return <>\n                <ControlBar height={controlBarHeight} editMode={true}>\n                    <div style={buttonBarStyle}>\n                        {updateAccess ? this.renderActionButtons() : null}\n\n                        <div className={classes.rightControls}>\n                            <Button secondary onClick={this.onDiscard}>\n                                {discardBtnText}\n                            </Button>\n                        </div>\n                    </div>\n                </ControlBar>\n                <div className={classes.topMargin} />\n                {this.translationDialog()}\n                {this.confirmDeleteDialog()}\n            </>;\n  }\n\n}\nEditBar.propTypes = {\n  clearPrintDashboard: PropTypes.func,\n  clearPrintPreview: PropTypes.func,\n  dashboardId: PropTypes.string,\n  dashboardName: PropTypes.string,\n  deleteAccess: PropTypes.bool,\n  isPrintPreviewView: PropTypes.bool,\n  showPrintPreview: PropTypes.func,\n  updateAccess: PropTypes.bool,\n  onDelete: PropTypes.func,\n  onDiscardChanges: PropTypes.func,\n  onSave: PropTypes.func,\n  onTranslate: PropTypes.func\n};\nEditBar.contextTypes = {\n  d2: PropTypes.object\n};\n\nconst mapStateToProps = state => {\n  const dashboard = sGetEditDashboardRoot(state);\n  let deleteAccess;\n  let updateAccess;\n\n  if (sGetIsNewDashboard(state)) {\n    deleteAccess = true;\n    updateAccess = true;\n  } else {\n    updateAccess = dashboard.access ? dashboard.access.update : false;\n    deleteAccess = dashboard.access ? dashboard.access.delete : false;\n  }\n\n  return {\n    dashboardId: dashboard.id,\n    dashboardName: dashboard.name,\n    deleteAccess,\n    isPrintPreviewView: sGetIsPrintPreviewView(state),\n    updateAccess\n  };\n};\n\nconst mapDispatchToProps = dispatch => ({\n  clearPrintDashboard: () => dispatch(acClearPrintDashboard()),\n  clearPrintPreview: () => dispatch(acClearPrintPreviewView()),\n  onSave: () => dispatch(tSaveDashboard()).then(id => id),\n  onDelete: id => dispatch(tDeleteDashboard(id)),\n  onDiscardChanges: () => dispatch(acClearEditDashboard()),\n  onTranslate: (id, value) => dispatch(acSetDashboardDisplayName(id, value)),\n  showPrintPreview: () => dispatch(acSetPrintPreviewView())\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(EditBar);","import React from 'react';\nimport PropTypes from 'prop-types';\nimport i18n from '@dhis2/d2-i18n';\nimport { a4LandscapeWidthPx } from '../ItemGrid/gridUtil';\nimport classes from './styles/PrintInfo.module.css';\n\nconst PrintInfo = ({\n  isLayout\n}) => {\n  const maxWidth = a4LandscapeWidthPx < window.innerWidth ? a4LandscapeWidthPx : window.innerWidth;\n  const infoHeader = isLayout ? i18n.t('dashboard layout') : i18n.t('one item per page');\n  return <div className={classes.infoWrapper}>\n            <p className={classes.infoHeader}>\n                {`${i18n.t('Print Preview')}: ${infoHeader}`}\n            </p>\n            <div style={{\n      maxWidth\n    }}>\n                <p className={classes.info}>\n                    {`${i18n.t('For best print results')}:`}\n                </p>\n                <div className={classes.info}>\n                    <ul className={classes.infoList}>\n                        <li>{i18n.t('Use Chrome or Edge web browser')}</li>\n                        <li>\n                            {i18n.t('Wait for all dashboard items to load before printing')}\n                        </li>\n                        <li>\n                            {i18n.t('Use A4 landscape paper size and default margin settings in the browser print dialog')}\n                        </li>\n                    </ul>\n                </div>\n            </div>\n            <hr className={classes.divider} />\n        </div>;\n};\n\nPrintInfo.propTypes = {\n  isLayout: PropTypes.bool\n};\nexport default PrintInfo;","import React from 'react';\nimport { colors } from '@dhis2/ui';\n\nconst LessHorizontalIcon = () => <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" fill={colors.grey600} viewBox=\"0 0 24 24\">\n        <path d=\"m13.2928932 6.29289322c.3905243-.39052429 1.0236893-.39052429 1.4142136 0 .3604839.36048396.3882135.92771502.0831886 1.32000622l-.0831886.09420734-4.2921068 4.29289322 4.2921068 4.2928932c.3604839.360484.3882135.927715.0831886 1.3200062l-.0831886.0942074c-.360484.3604839-.927715.3882135-1.3200062.0831886l-.0942074-.0831886-4.99999998-5c-.36048396-.360484-.3882135-.927715-.08318861-1.3200062l.08318861-.0942074z\" />\n    </svg>;\n\nexport default LessHorizontalIcon;","import React from 'react';\nimport PropTypes from 'prop-types';\nimport i18n from '@dhis2/d2-i18n';\nimport { Button } from '@dhis2/ui';\nimport { Link } from 'react-router-dom';\nimport LessHorizontalIcon from '../../icons/LessHorizontal';\nimport { a4LandscapeWidthPx } from '../ItemGrid/gridUtil';\nimport classes from './styles/PrintActionsBar.module.css'; // 42px set in the module css file\n\nexport const PRINT_ACTIONS_BAR_HEIGHT = 42;\n\nconst PrintActionsBar = ({\n  id\n}) => {\n  const width = a4LandscapeWidthPx < window.innerWidth ? a4LandscapeWidthPx : window.innerWidth;\n  return <>\n            <div className={classes.container}>\n                <div className={classes.inner} style={{\n        width\n      }}>\n                    <Link className={classes.link} to={`/${id}`}>\n                        <Button>\n                            <LessHorizontalIcon />\n                            {i18n.t('Exit print preview')}\n                        </Button>\n                    </Link>\n                    <Button onClick={window.print}>{i18n.t('Print')}</Button>\n                </div>\n            </div>\n            <div className={classes.topMargin} />\n        </>;\n};\n\nPrintActionsBar.propTypes = {\n  id: PropTypes.string\n};\nexport default PrintActionsBar;","import sortBy from 'lodash/sortBy';\nimport { orArray } from './util';\nimport { itemTypeMap } from './itemTypes';\nexport const getTransformYPx = elStyle => {\n  if (!elStyle || !elStyle.transform) {\n    return null;\n  } // find valid transforms - those with y pixels\n  // the code is expecting the transform prop to\n  // look like:  translate(10px, 300px)\n\n\n  const transformY = elStyle.transform.split(' ')[1]?.match(/(\\d+)px/);\n\n  if (transformY) {\n    return parseInt(transformY[1]);\n  } else {\n    return null;\n  }\n};\nexport const getDomGridItemsSortedByYPos = elements => {\n  const types = Object.keys(itemTypeMap);\n  const elementsWithBoundingRect = orArray(elements).map(el => {\n    const type = Array.from(el.classList).find(className => types.indexOf(className) > -1);\n    const rect = el.getBoundingClientRect();\n    const y = getTransformYPx(el.style) || parseInt(rect.y);\n    return {\n      type,\n      classList: el.classList,\n      bottomY: y + parseInt(rect.height),\n      el\n    };\n  });\n  return sortBy(elementsWithBoundingRect, ['bottomY']);\n};","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport i18n from '@dhis2/d2-i18n';\nimport sortBy from 'lodash/sortBy';\nimport ReactGridLayout from 'react-grid-layout';\nimport { Layer, CenteredContent, CircularLoader } from '@dhis2/ui';\nimport cx from 'classnames';\nimport { Item } from '../Item/Item';\nimport NoContentMessage from '../../widgets/NoContentMessage';\nimport { acUpdatePrintDashboardLayout } from '../../actions/printDashboard';\nimport { sGetSelectedIsLoading } from '../../reducers/selected';\nimport { sGetPrintDashboardRoot, sGetPrintDashboardItems } from '../../reducers/printDashboard';\nimport { sGetIsEditing } from '../../reducers/editDashboard';\nimport { GRID_ROW_HEIGHT, GRID_COMPACT_TYPE, MARGIN, getGridColumns, hasShape, a4LandscapeWidthPx } from './gridUtil';\nimport { getDomGridItemsSortedByYPos, getTransformYPx } from '../../modules/printUtils';\nimport { PRINT_LAYOUT } from '../Dashboard/dashboardModes';\nimport { PAGEBREAK } from '../../modules/itemTypes';\nimport 'react-grid-layout/css/styles.css';\nimport 'react-resizable/css/styles.css';\nimport './ItemGrid.css'; // this is set in the .dashboard-item-content css\n\nexport const ITEM_CONTENT_PADDING_BOTTOM = 4;\nexport class PrintLayoutItemGrid extends Component {\n  onLayoutChange = newLayout => {\n    this.props.updateDashboardLayout(newLayout);\n  };\n  isFirstPageBreak = item => {\n    if (item.type !== PAGEBREAK) {\n      return false;\n    }\n\n    const pageBreaks = this.props.dashboardItems.filter(i => i.type === PAGEBREAK);\n    const sortedPageBreaks = sortBy(pageBreaks, ['y']);\n    return item.y === sortedPageBreaks[0].y;\n  };\n  getItemComponent = item => {\n    // the first-page-break class is used in Edit print preview\n    const itemClassNames = cx('print', 'layout', `${item.type}`, {\n      'first-page-break': this.props.isEditing && this.isFirstPageBreak(item),\n      shortened: !!item.shortened\n    });\n    return <div key={item.i} className={itemClassNames}>\n                <Item item={item} dashboardMode={PRINT_LAYOUT} />\n            </div>;\n  };\n  getItemComponents = items => items.map(item => this.getItemComponent(item));\n\n  hideExtraPageBreaks() {\n    const sortedElements = getDomGridItemsSortedByYPos(Array.from(document.querySelectorAll('.react-grid-item')));\n    let pageBreakBottom = 0;\n    let lastItemBottom = 0;\n    let foundNonPageBreak = false;\n\n    for (let i = sortedElements.length - 1; i >= 0; --i) {\n      const item = sortedElements[i];\n\n      if (item.type === PAGEBREAK) {\n        if (!foundNonPageBreak) {\n          item.el.classList.add('removed');\n        } else {\n          pageBreakBottom = item.bottomY;\n          break;\n        }\n      } else {\n        foundNonPageBreak = true;\n        const thisItemBottom = item.bottomY;\n\n        if (thisItemBottom > lastItemBottom) {\n          lastItemBottom = thisItemBottom;\n        }\n      }\n    }\n\n    const pageHeight = 720;\n    const gridElement = document.querySelector('.react-grid-layout'); // the last page break is before the last item(s) so\n    // maxHeight is one page beyond the last page break\n\n    const maxHeight = pageBreakBottom + pageHeight;\n\n    if (gridElement) {\n      gridElement.style.height = `${maxHeight}px`;\n    }\n\n    if (this.props.isEditing) {\n      //scroll to below the title page - which is middle of the first pagebreak\n      const firstBreak = document.querySelector('.first-page-break');\n\n      if (firstBreak && firstBreak.style && firstBreak.style.transform) {\n        const yPos = getTransformYPx(firstBreak.style);\n        const scrollArea = document.querySelector('.scroll-area');\n        scrollArea && scrollArea.scroll(0, yPos + 50);\n      }\n    }\n  }\n\n  componentDidMount() {\n    this.hideExtraPageBreaks();\n  }\n\n  componentDidUpdate() {\n    this.hideExtraPageBreaks();\n  }\n\n  render() {\n    const {\n      isLoading,\n      dashboardItems\n    } = this.props;\n\n    if (!isLoading && !dashboardItems.length) {\n      return <NoContentMessage text={i18n.t('There are no items on this dashboard')} />;\n    }\n\n    const width = a4LandscapeWidthPx < window.innerWidth ? a4LandscapeWidthPx : window.innerWidth;\n    return <div className=\"grid-wrapper\">\n                {isLoading ? <Layer translucent>\n                        <CenteredContent>\n                            <CircularLoader />\n                        </CenteredContent>\n                    </Layer> : null}\n                <ReactGridLayout onLayoutChange={this.onLayoutChange} className=\"layout\" layout={dashboardItems} margin={MARGIN} cols={getGridColumns()} rowHeight={GRID_ROW_HEIGHT} width={width} compactType={GRID_COMPACT_TYPE} isDraggable={false} isResizable={false} draggableCancel=\"input,textarea\">\n                    {this.getItemComponents(dashboardItems)}\n                </ReactGridLayout>\n            </div>;\n  }\n\n}\nPrintLayoutItemGrid.propTypes = {\n  dashboardItems: PropTypes.array,\n  isEditing: PropTypes.bool,\n  isLoading: PropTypes.bool,\n  updateDashboardLayout: PropTypes.func\n};\nPrintLayoutItemGrid.defaultProps = {\n  dashboardItems: []\n};\n\nconst mapStateToProps = state => {\n  const selectedDashboard = sGetPrintDashboardRoot(state);\n  return {\n    isLoading: sGetSelectedIsLoading(state) || !selectedDashboard,\n    dashboardItems: sGetPrintDashboardItems(state).filter(hasShape),\n    isEditing: sGetIsEditing(state)\n  };\n};\n\nexport default connect(mapStateToProps, {\n  updateDashboardLayout: acUpdatePrintDashboardLayout\n})(PrintLayoutItemGrid);","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { spacers } from '@dhis2/ui';\nimport cx from 'classnames';\nimport PrintInfo from './PrintInfo';\nimport PrintActionsBar from './PrintActionsBar';\nimport PrintLayoutItemGrid from '../ItemGrid/PrintLayoutItemGrid';\nimport { acSetPrintDashboard, acAddPrintDashboardItem, acUpdatePrintDashboardItem } from '../../actions/printDashboard';\nimport { sGetSelectedId } from '../../reducers/selected';\nimport { sGetWindowHeight } from '../../reducers/windowHeight';\nimport { sGetEditDashboardRoot, sGetEditDashboardItems } from '../../reducers/editDashboard';\nimport { sGetDashboardById, sGetDashboardItems } from '../../reducers/dashboards';\nimport { PAGEBREAK, PRINT_TITLE_PAGE } from '../../modules/itemTypes';\nimport { a4LandscapeWidthPx, MAX_ITEM_GRID_HEIGHT } from '../ItemGrid/gridUtil';\nimport { getControlBarHeight, HEADERBAR_HEIGHT } from '../ControlBar/controlBarDimensions';\nimport { PRINT_ACTIONS_BAR_HEIGHT } from './PrintActionsBar';\nimport { DRAG_HANDLE_HEIGHT } from '../ControlBar/ControlBar';\nimport classes from './styles/PrintLayoutDashboard.module.css';\nimport './styles/print.css';\nimport './styles/print-layout.css';\nconst EDIT_BAR_HEIGHT = getControlBarHeight(1) + DRAG_HANDLE_HEIGHT;\n\nconst isLeapPage = n => {\n  // pages 5,9,13,17,21,25,29... are leap pages\n  let x = 0;\n  const startPage = 1;\n\n  const getMultiple = factor => startPage + 4 * factor;\n\n  let multiple = getMultiple(0);\n  let isLeapPage = false;\n\n  while (multiple < n) {\n    multiple = getMultiple(x);\n    ++x;\n\n    if (multiple === n) {\n      isLeapPage = true;\n      break;\n    }\n  }\n\n  return isLeapPage;\n};\n\nconst addPageBreaks = ({\n  items,\n  addDashboardItem\n}) => {\n  // add enough page breaks so that each item could\n  // be put on its own page. Due to the react-grid-layout\n  // unit system, we have to estimate roughly the size of each\n  // page. At regular intervals add a unit, like a leap year\n  let yPos = 0;\n  const yPosList = [];\n\n  for (let pageNum = 1; pageNum <= items.length; ++pageNum) {\n    if (pageNum === 1) {\n      yPos += 35;\n    } else if (isLeapPage(pageNum)) {\n      yPos += 40;\n    } else {\n      yPos += 39;\n    }\n\n    yPosList.push(yPos);\n  }\n\n  for (let i = 0; i < items.length; ++i) {\n    addDashboardItem({\n      type: PAGEBREAK,\n      yPos: yPosList[i]\n    });\n  }\n};\n\nexport class PrintLayoutDashboard extends Component {\n  state = {\n    initialized: false\n  };\n  initPrintLayoutDashboard = () => {\n    if (this.props.dashboard) {\n      this.setState({\n        initialized: true\n      });\n      this.props.setPrintDashboard(this.props.dashboard, this.props.items); // If any items are taller than one page, reduce it to one\n      // page (react-grid-layout units)\n\n      this.props.items.forEach(item => {\n        if (item.h > MAX_ITEM_GRID_HEIGHT) {\n          item.shortened = true;\n          this.props.updateDashboardItem(Object.assign({}, item, {\n            h: MAX_ITEM_GRID_HEIGHT\n          }));\n        }\n      });\n      addPageBreaks(this.props);\n      this.props.addDashboardItem({\n        type: PRINT_TITLE_PAGE,\n        isOneItemPerPage: false\n      });\n    }\n  };\n\n  componentDidMount() {\n    this.initPrintLayoutDashboard();\n  }\n\n  componentDidUpdate() {\n    if (!this.state.initialized) {\n      this.initPrintLayoutDashboard();\n    }\n  }\n\n  getWrapperStyle = () => {\n    return this.props.fromEdit ? {\n      paddingTop: spacers.dp24,\n      height: this.props.windowHeight - EDIT_BAR_HEIGHT - HEADERBAR_HEIGHT\n    } : {\n      height: this.props.windowHeight - PRINT_ACTIONS_BAR_HEIGHT\n    };\n  };\n\n  render() {\n    return <>\n                {!this.props.fromEdit && <PrintActionsBar id={this.props.dashboard.id} />}\n                <div className={cx(classes.wrapper, 'scroll-area')} style={this.getWrapperStyle()}>\n                    {!this.props.fromEdit && <PrintInfo isLayout={true} />}\n                    <div className={classes.pageOuter} style={{\n          width: a4LandscapeWidthPx\n        }}>\n                        <PrintLayoutItemGrid />\n                    </div>\n                </div>\n            </>;\n  }\n\n}\nPrintLayoutDashboard.propTypes = {\n  addDashboardItem: PropTypes.func,\n  dashboard: PropTypes.object,\n  fromEdit: PropTypes.bool,\n  items: PropTypes.array,\n  setPrintDashboard: PropTypes.func,\n  updateDashboardItem: PropTypes.func,\n  windowHeight: PropTypes.number\n};\n\nconst mapStateToProps = (state, ownProps) => {\n  const id = sGetSelectedId(state);\n\n  if (ownProps.fromEdit) {\n    const dashboard = sGetEditDashboardRoot(state);\n    return {\n      dashboard,\n      id,\n      items: sGetEditDashboardItems(state),\n      windowHeight: sGetWindowHeight(state)\n    };\n  }\n\n  const dashboard = id ? sGetDashboardById(state, id) : null;\n  return {\n    dashboard,\n    id,\n    items: sGetDashboardItems(state),\n    windowHeight: sGetWindowHeight(state)\n  };\n};\n\nexport default connect(mapStateToProps, {\n  setPrintDashboard: acSetPrintDashboard,\n  addDashboardItem: acAddPrintDashboardItem,\n  updateDashboardItem: acUpdatePrintDashboardItem\n})(PrintLayoutDashboard);","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport i18n from '@dhis2/d2-i18n';\nimport PropTypes from 'prop-types';\nimport TitleBar from '../TitleBar/TitleBar';\nimport ItemGrid from '../ItemGrid/ItemGrid';\nimport EditBar from '../ControlBar/EditBar';\nimport LayoutPrintPreview from './PrintLayoutDashboard';\nimport NoContentMessage from '../../widgets/NoContentMessage';\nimport { acSetEditDashboard } from '../../actions/editDashboard';\nimport { sGetWindowHeight } from '../../reducers/windowHeight';\nimport { sGetSelectedId } from '../../reducers/selected';\nimport { sGetDashboardById, sGetDashboardItems } from '../../reducers/dashboards';\nimport { sGetIsPrintPreviewView } from '../../reducers/editDashboard';\nimport { getControlBarHeight, HEADERBAR_HEIGHT } from '../ControlBar/controlBarDimensions';\nexport class EditDashboard extends Component {\n  state = {\n    initialized: false\n  };\n  initEditDashboard = () => {\n    if (this.props.dashboard) {\n      this.setState({\n        initialized: true\n      });\n      this.props.setEditDashboard(this.props.dashboard, this.props.items);\n    }\n  };\n\n  componentDidMount() {\n    this.initEditDashboard();\n  }\n\n  componentDidUpdate() {\n    if (!this.state.initialized) {\n      this.initEditDashboard();\n    }\n  }\n\n  renderGrid = () => {\n    if (this.props.isPrintPreviewView) {\n      return <LayoutPrintPreview fromEdit={true} />;\n    }\n\n    const height = this.props.windowHeight - HEADERBAR_HEIGHT - getControlBarHeight(1);\n    return <div className=\"dashboard-wrapper\" style={{\n      height\n    }}>\n                <TitleBar edit={true} />\n                <ItemGrid edit={true} />\n            </div>;\n  };\n\n  render() {\n    return <>\n                <EditBar />\n                {this.props.updateAccess ? this.renderGrid() : <NoContentMessage text={i18n.t('No access')} />}\n            </>;\n  }\n\n}\nEditDashboard.propTypes = {\n  dashboard: PropTypes.object,\n  isPrintPreviewView: PropTypes.bool,\n  items: PropTypes.array,\n  setEditDashboard: PropTypes.func,\n  updateAccess: PropTypes.bool,\n  windowHeight: PropTypes.number\n};\n\nconst mapStateToProps = state => {\n  const id = sGetSelectedId(state);\n  const dashboard = id ? sGetDashboardById(state, id) : null;\n  const updateAccess = dashboard && dashboard.access ? dashboard.access.update : false;\n  return {\n    dashboard,\n    updateAccess,\n    items: sGetDashboardItems(state),\n    isPrintPreviewView: sGetIsPrintPreviewView(state),\n    windowHeight: sGetWindowHeight(state)\n  };\n};\n\nexport default connect(mapStateToProps, {\n  setEditDashboard: acSetEditDashboard\n})(EditDashboard);","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport EditBar from '../ControlBar/EditBar';\nimport TitleBar from '../TitleBar/TitleBar';\nimport ItemGrid from '../ItemGrid/ItemGrid';\nimport LayoutPrintPreview from './PrintLayoutDashboard';\nimport { acSetEditNewDashboard } from '../../actions/editDashboard';\nimport { sGetIsPrintPreviewView } from '../../reducers/editDashboard';\nimport { sGetWindowHeight } from '../../reducers/windowHeight';\nimport { getControlBarHeight, HEADERBAR_HEIGHT } from '../ControlBar/controlBarDimensions';\n\nclass NewDashboard extends Component {\n  componentDidMount() {\n    this.props.setNewDashboard();\n  }\n\n  render() {\n    const height = this.props.windowHeight - HEADERBAR_HEIGHT - getControlBarHeight(1);\n    return <>\n                <EditBar />\n                {this.props.isPrintPreviewView ? <LayoutPrintPreview fromEdit={true} /> : <div className=\"dashboard-wrapper\" style={{\n        height\n      }}>\n                        <TitleBar edit={true} />\n                        <ItemGrid edit={true} />\n                    </div>}\n            </>;\n  }\n\n}\n\nNewDashboard.propTypes = {\n  isPrintPreviewView: PropTypes.bool,\n  setNewDashboard: PropTypes.func,\n  windowHeight: PropTypes.number\n};\n\nconst mapStateToProps = state => ({\n  isPrintPreviewView: sGetIsPrintPreviewView(state),\n  windowHeight: sGetWindowHeight(state)\n});\n\nexport default connect(mapStateToProps, {\n  setNewDashboard: acSetEditNewDashboard\n})(NewDashboard);","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport i18n from '@dhis2/d2-i18n';\nimport ReactGridLayout from 'react-grid-layout';\nimport { Layer, CenteredContent, CircularLoader } from '@dhis2/ui';\nimport cx from 'classnames';\nimport { Item } from '../Item/Item';\nimport NoContentMessage from '../../widgets/NoContentMessage';\nimport { PRINT } from '../Dashboard/dashboardModes';\nimport { sGetSelectedIsLoading } from '../../reducers/selected';\nimport { sGetPrintDashboardRoot, sGetPrintDashboardItems } from '../../reducers/printDashboard';\nimport { GRID_ROW_HEIGHT, GRID_COMPACT_TYPE, MARGIN, getGridColumns, hasShape, a4LandscapeWidthPx } from './gridUtil';\nimport { orArray } from '../../modules/util';\nimport 'react-grid-layout/css/styles.css';\nimport './ItemGrid.css';\nexport class PrintItemGrid extends Component {\n  getItemComponent = item => <div key={item.i} className={cx(item.type, 'print', 'oipp')}>\n            <Item item={item} dashboardMode={PRINT} />\n        </div>;\n  getItemComponents = items => items.map(item => this.getItemComponent(item));\n\n  render() {\n    const {\n      isLoading,\n      dashboardItems\n    } = this.props;\n\n    if (!isLoading && !dashboardItems.length) {\n      return <NoContentMessage text={i18n.t('There are no items on this dashboard')} />;\n    }\n\n    const width = a4LandscapeWidthPx < window.innerWidth ? a4LandscapeWidthPx : window.innerWidth;\n    return <>\n                {isLoading ? <Layer translucent>\n                        <CenteredContent>\n                            <CircularLoader />\n                        </CenteredContent>\n                    </Layer> : null}\n                <ReactGridLayout className=\"layout print\" layout={dashboardItems} margin={MARGIN} cols={getGridColumns()} rowHeight={GRID_ROW_HEIGHT} width={width} compactType={GRID_COMPACT_TYPE} isDraggable={false} isResizable={false} draggableCancel=\"input,textarea\">\n                    {this.getItemComponents(dashboardItems)}\n                </ReactGridLayout>\n            </>;\n  }\n\n}\nPrintItemGrid.propTypes = {\n  dashboardItems: PropTypes.array,\n  isLoading: PropTypes.bool\n};\nPrintItemGrid.defaultProps = {\n  dashboardItems: []\n};\n\nconst mapStateToProps = state => {\n  const selectedDashboard = sGetPrintDashboardRoot(state);\n  return {\n    isLoading: sGetSelectedIsLoading(state) || !selectedDashboard,\n    dashboardItems: orArray(sGetPrintDashboardItems(state)).filter(hasShape)\n  };\n};\n\nexport default connect(mapStateToProps)(PrintItemGrid);","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport sortBy from 'lodash/sortBy';\nimport PrintInfo from './PrintInfo';\nimport PrintActionsBar from './PrintActionsBar';\nimport PrintItemGrid from '../ItemGrid/PrintItemGrid';\nimport { acSetPrintDashboard, acAddPrintDashboardItem, acRemovePrintDashboardItem, acUpdatePrintDashboardItem } from '../../actions/printDashboard';\nimport { sGetSelectedId } from '../../reducers/selected';\nimport { sGetWindowHeight } from '../../reducers/windowHeight';\nimport { sGetDashboardById, sGetDashboardItems } from '../../reducers/dashboards';\nimport { PAGEBREAK, PRINT_TITLE_PAGE, SPACER } from '../../modules/itemTypes';\nimport { a4LandscapeWidthPx, MAX_ITEM_GRID_HEIGHT_OIPP, MAX_ITEM_GRID_WIDTH_OIPP } from '../ItemGrid/gridUtil';\nimport { PRINT_ACTIONS_BAR_HEIGHT } from './PrintActionsBar';\nimport classes from './styles/PrintDashboard.module.css';\nimport './styles/print.css';\nimport './styles/print-oipp.css';\nexport class PrintDashboard extends Component {\n  state = {\n    initialized: false\n  };\n  initPrintDashboard = () => {\n    if (this.props.dashboard) {\n      this.setState({\n        initialized: true\n      }); //sort the items by Y pos so they print in order of top to bottom\n\n      const sortedItems = sortBy(this.props.items, ['y', 'x']);\n      this.props.setPrintDashboard(this.props.dashboard, sortedItems); // remove spacers - don't want empty pages\n\n      let spacerCount = 0;\n      this.props.items.forEach(item => {\n        if (item.type === SPACER) {\n          spacerCount += 1;\n          this.props.removeDashboardItem(item.id);\n        }\n      }); // Resize the items to the full page size\n\n      this.props.items.forEach(item => {\n        this.props.updateDashboardItem(Object.assign({}, item, {\n          w: MAX_ITEM_GRID_WIDTH_OIPP,\n          h: MAX_ITEM_GRID_HEIGHT_OIPP\n        }));\n      }); // insert page breaks into the document flow to create the \"pages\"\n      // when previewing the print\n\n      for (let i = 0; i < (this.props.items.length - spacerCount) * 2; i += 2) {\n        this.props.addDashboardItem({\n          type: PAGEBREAK,\n          position: i,\n          isStatic: false\n        });\n      }\n\n      this.props.addDashboardItem({\n        type: PRINT_TITLE_PAGE,\n        isOneItemPerPage: true\n      });\n    }\n  };\n\n  componentDidMount() {\n    this.initPrintDashboard();\n  }\n\n  componentDidUpdate() {\n    if (!this.state.initialized) {\n      this.initPrintDashboard();\n    }\n  }\n\n  render() {\n    const height = this.props.windowHeight - PRINT_ACTIONS_BAR_HEIGHT;\n    return <>\n                <PrintActionsBar id={this.props.dashboard.id} />\n                <div className={classes.wrapper} style={{\n        height\n      }}>\n                    <PrintInfo isLayout={false} />\n                    <div className={classes.pageOuter} style={{\n          width: a4LandscapeWidthPx\n        }}>\n                        <PrintItemGrid />\n                    </div>\n                </div>\n            </>;\n  }\n\n}\nPrintDashboard.propTypes = {\n  addDashboardItem: PropTypes.func,\n  dashboard: PropTypes.object,\n  items: PropTypes.array,\n  removeDashboardItem: PropTypes.func,\n  setPrintDashboard: PropTypes.func,\n  updateDashboardItem: PropTypes.func,\n  windowHeight: PropTypes.number\n};\n\nconst mapStateToProps = state => {\n  const id = sGetSelectedId(state);\n  const dashboard = id ? sGetDashboardById(state, id) : null;\n  return {\n    dashboard,\n    id,\n    items: sGetDashboardItems(state),\n    windowHeight: sGetWindowHeight(state)\n  };\n};\n\nexport default connect(mapStateToProps, {\n  setPrintDashboard: acSetPrintDashboard,\n  addDashboardItem: acAddPrintDashboardItem,\n  removeDashboardItem: acRemovePrintDashboardItem,\n  updateDashboardItem: acUpdatePrintDashboardItem\n})(PrintDashboard);","import { SET_WINDOW_HEIGHT } from '../reducers/windowHeight';\nexport const acSetWindowHeight = value => ({\n  type: SET_WINDOW_HEIGHT,\n  value\n});","import React, { useEffect } from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport isEmpty from 'lodash/isEmpty';\nimport i18n from '@dhis2/d2-i18n';\nimport { Layer, CenteredContent, CircularLoader } from '@dhis2/ui';\nimport debounce from 'lodash/debounce';\nimport DashboardsBar from '../ControlBar/DashboardsBar';\nimport DashboardVerticalOffset from './DashboardVerticalOffset';\nimport NoContentMessage from '../../widgets/NoContentMessage';\nimport ViewDashboard from './ViewDashboard';\nimport EditDashboard from './EditDashboard';\nimport NewDashboard from './NewDashboard';\nimport PrintDashboard from './PrintDashboard';\nimport PrintLayoutDashboard from './PrintLayoutDashboard';\nimport { tSelectDashboard } from '../../actions/dashboards';\nimport { acSetWindowHeight } from '../../actions/windowHeight';\nimport { sDashboardsIsFetching, sGetAllDashboards } from '../../reducers/dashboards';\nimport { sGetSelectedId, NON_EXISTING_DASHBOARD_ID } from '../../reducers/selected';\nimport { EDIT, NEW, VIEW, PRINT, PRINT_LAYOUT, isPrintMode } from './dashboardModes';\n\nconst setHeaderbarVisibility = mode => {\n  const header = document.getElementsByTagName('header')[0];\n\n  if (isPrintMode(mode)) {\n    header.classList.add('hidden');\n  } else {\n    header.classList.remove('hidden');\n  }\n};\n\nconst dashboardMap = {\n  [VIEW]: <ViewDashboard />,\n  [EDIT]: <EditDashboard />,\n  [NEW]: <NewDashboard />,\n  [PRINT]: <PrintDashboard />,\n  [PRINT_LAYOUT]: <PrintLayoutDashboard />\n};\nexport const Dashboard = ({\n  id,\n  mode,\n  dashboardsLoaded,\n  dashboardsIsEmpty,\n  routeId,\n  selectDashboard,\n  setWindowHeight\n}) => {\n  useEffect(() => {\n    setHeaderbarVisibility(mode);\n  }, [mode]);\n  useEffect(() => {\n    if (dashboardsLoaded && !dashboardsIsEmpty) {\n      selectDashboard(routeId);\n    }\n  }, [dashboardsLoaded, dashboardsIsEmpty, routeId]);\n  useEffect(() => {\n    const onResize = debounce(() => setWindowHeight(window.innerHeight), 300);\n    window.addEventListener('resize', onResize);\n    return () => {\n      window.removeEventListener('resize', onResize);\n    };\n  }, []);\n\n  if (!dashboardsLoaded) {\n    return <Layer translucent>\n                <CenteredContent>\n                    <CircularLoader />\n                </CenteredContent>\n            </Layer>;\n  }\n\n  if (mode === NEW) {\n    return dashboardMap[mode];\n  }\n\n  if (dashboardsIsEmpty) {\n    return <>\n                <DashboardsBar />\n                <DashboardVerticalOffset />\n                <NoContentMessage text={i18n.t('No dashboards found. Use the + button to create a new dashboard.')} />\n            </>;\n  }\n\n  if (id === NON_EXISTING_DASHBOARD_ID) {\n    return <>\n                <DashboardsBar />\n                <DashboardVerticalOffset />\n                <NoContentMessage text={i18n.t('Requested dashboard not found')} />\n            </>;\n  }\n\n  if (id === null) {\n    return <Layer translucent>\n                <CenteredContent>\n                    <CircularLoader />\n                </CenteredContent>\n            </Layer>;\n  }\n\n  return dashboardMap[mode];\n};\nDashboard.propTypes = {\n  dashboardsIsEmpty: PropTypes.bool,\n  dashboardsLoaded: PropTypes.bool,\n  id: PropTypes.string,\n  match: PropTypes.object,\n  // provided by the react-router-dom\n  mode: PropTypes.string,\n  routeId: PropTypes.string,\n  selectDashboard: PropTypes.func,\n  setWindowHeight: PropTypes.func\n};\n\nconst mapStateToProps = (state, ownProps) => {\n  const dashboards = sGetAllDashboards(state);\n  return {\n    dashboardsIsEmpty: isEmpty(dashboards),\n    dashboardsLoaded: !sDashboardsIsFetching(state),\n    id: sGetSelectedId(state),\n    routeId: ownProps.match?.params?.dashboardId || null\n  };\n};\n\nexport default connect(mapStateToProps, {\n  selectDashboard: tSelectDashboard,\n  setWindowHeight: acSetWindowHeight\n})(Dashboard);","import React from 'react';\nimport { connect } from 'react-redux';\nimport { AlertBar, AlertStack } from '@dhis2/ui';\nimport PropTypes from 'prop-types';\nimport { sGetAlertMessage } from '../../reducers/alert';\nimport { acClearAlertMessage } from '../../actions/alert';\nexport const Alert = ({\n  message,\n  onClose\n}) => message ? <AlertStack>\n            <AlertBar onHidden={onClose} permanent>\n                {message}\n            </AlertBar>\n        </AlertStack> : null;\nAlert.propTypes = {\n  message: PropTypes.string,\n  onClose: PropTypes.func\n};\n\nconst mapStateToProps = state => ({\n  message: sGetAlertMessage(state)\n});\n\nexport default connect(mapStateToProps, {\n  onClose: acClearAlertMessage\n})(Alert);","import { RECEIVED_USER } from '../reducers/user';\nexport const acReceivedUser = value => ({\n  type: RECEIVED_USER,\n  value\n});","import { SET_DIMENSIONS } from '../reducers/dimensions';\nimport { apiFetchDimensions } from '@dhis2/analytics';\nimport { sGetSettingsDisplayNameProperty } from '../reducers/settings';\nexport const acSetDimensions = dimensions => ({\n  type: SET_DIMENSIONS,\n  value: dimensions\n});\nexport const tSetDimensions = d2 => async (dispatch, getState) => {\n  const onSuccess = dimensions => {\n    dispatch(acSetDimensions(dimensions));\n  };\n\n  const onError = error => {\n    console.log('Error (apiFetchDimensions): ', error);\n    return error;\n  };\n\n  try {\n    const displayNameProp = sGetSettingsDisplayNameProperty(getState());\n    const dimensions = await apiFetchDimensions(d2, displayNameProp); // filter out CATEGORY that are not of type ATTRIBUTE\n\n    const filteredDimensions = dimensions.filter(dim => dim.dimensionType !== 'CATEGORY' || dim.dimensionType === 'CATEGORY' && dim.dataDimensionType === 'ATTRIBUTE');\n    return onSuccess(filteredDimensions);\n  } catch (err) {\n    return onError(err);\n  }\n};","import React, { Component } from 'react';\nimport { HashRouter as Router, Route, Switch } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport i18n from '@dhis2/d2-i18n';\nimport { CssVariables } from '@dhis2/ui';\nimport Dashboard from './Dashboard/Dashboard';\nimport AlertBar from './AlertBar/AlertBar';\nimport { acReceivedUser } from '../actions/user';\nimport { tFetchDashboards } from '../actions/dashboards';\nimport { tSetControlBarRows } from '../actions/controlBar';\nimport { tSetShowDescription } from '../actions/selected';\nimport { tSetDimensions } from '../actions/dimensions';\nimport { EDIT, VIEW, NEW, PRINT, PRINT_LAYOUT } from './Dashboard/dashboardModes';\nimport './App.css';\nexport class App extends Component {\n  componentDidMount() {\n    this.props.setCurrentUser(this.props.d2.currentUser);\n    this.props.fetchDashboards();\n    this.props.setControlBarRows();\n    this.props.setShowDescription();\n    this.props.setDimensions(this.props.d2);\n  }\n\n  getChildContext() {\n    return {\n      baseUrl: this.props.baseUrl,\n      i18n,\n      d2: this.props.d2\n    };\n  }\n\n  render() {\n    return <>\n                <CssVariables colors spacers />\n                <Router>\n                    <Switch>\n                        <Route exact path=\"/\" render={props => <Dashboard {...props} mode={VIEW} />} />\n                        <Route exact path=\"/new\" render={props => <Dashboard {...props} mode={NEW} />} />\n                        <Route exact path=\"/:dashboardId\" render={props => <Dashboard {...props} mode={VIEW} />} />\n                        <Route exact path=\"/:dashboardId/edit\" render={props => <Dashboard {...props} mode={EDIT} />} />\n                        <Route exact path=\"/:dashboardId/printoipp\" render={props => <Dashboard {...props} mode={PRINT} />} />\n                        <Route exact path=\"/:dashboardId/printlayout\" render={props => <Dashboard {...props} mode={PRINT_LAYOUT} />} />\n                    </Switch>\n                </Router>\n                <AlertBar />\n            </>;\n  }\n\n}\nApp.propTypes = {\n  fetchDashboards: PropTypes.func.isRequired,\n  setControlBarRows: PropTypes.func.isRequired,\n  setCurrentUser: PropTypes.func.isRequired,\n  setDimensions: PropTypes.func.isRequired,\n  setShowDescription: PropTypes.func.isRequired,\n  baseUrl: PropTypes.string,\n  d2: PropTypes.object\n};\nApp.childContextTypes = {\n  baseUrl: PropTypes.string,\n  i18n: PropTypes.object,\n  d2: PropTypes.object\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    fetchDashboards: () => dispatch(tFetchDashboards()),\n    setControlBarRows: () => dispatch(tSetControlBarRows()),\n    setCurrentUser: currentUser => dispatch(acReceivedUser(currentUser)),\n    setDimensions: d2 => dispatch(tSetDimensions(d2)),\n    setShowDescription: () => dispatch(tSetShowDescription())\n  };\n};\n\nexport default connect(null, mapDispatchToProps)(App);","/** @module reducers/selected */\nimport { validateReducer } from '../modules/util';\nexport const SET_STYLE = 'SET_STYLE';\nexport const DEFAULT_STATE_STYLE = 'LIST';\n/**\n * Reducer functions that computes and returns the new state based on the given action\n * @function\n * @param {Object} state The current state\n * @param {Object} action The action to be evaluated\n */\n\nconst style = (state = DEFAULT_STATE_STYLE, action) => {\n  switch (action.type) {\n    case SET_STYLE:\n      return validateReducer(action.value, DEFAULT_STATE_STYLE);\n\n    default:\n      return state;\n  }\n};\n\nexport default style;\n/**\n * Selectors that point to specific props in the state object\n * @function\n * @param {Object} state\n * @returns {Object}\n */\n\nexport const sGetStyleRoot = state => state.style;","import { combineReducers } from 'redux';\nimport dashboards from './dashboards';\nimport selected from './selected';\nimport dashboardsFilter from './dashboardsFilter';\nimport controlBar from './controlBar';\nimport visualizations from './visualizations';\nimport editDashboard from './editDashboard';\nimport printDashboard from './printDashboard';\nimport messages from './messages';\nimport user from './user';\nimport alert from './alert';\nimport itemFilters from './itemFilters';\nimport style from './style';\nimport dimensions from './dimensions';\nimport settings from './settings';\nimport activeModalDimension from './activeModalDimension';\nimport windowHeight from './windowHeight';\nexport default combineReducers({\n  dashboards,\n  selected,\n  dashboardsFilter,\n  controlBar,\n  visualizations,\n  messages,\n  user,\n  editDashboard,\n  printDashboard,\n  itemFilters,\n  style,\n  alert,\n  dimensions,\n  settings,\n  activeModalDimension,\n  windowHeight\n});","import { createStore, applyMiddleware, compose } from 'redux';\nimport { createLogger } from 'redux-logger';\nimport thunk from 'redux-thunk';\nimport reducer from './reducers';\n\nconst configureStore = () => {\n  const middleware = [thunk]; // Enable Redux devtools if extension is installed instead of redux-logger\n\n  const composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\n\n  if (!window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ && process.env.NODE_ENV !== 'production') {\n    middleware.push(createLogger());\n  }\n\n  return createStore(reducer, composeEnhancers(applyMiddleware(...middleware)));\n};\n\nexport default configureStore;","//------------------------------------------------------------------------------\n// <auto-generated>\n// This code was generated by d2-i18n-generate.\n//\n// Changes to this file may cause incorrect behavior and will be lost if\n// the code is regenerated.\n// </auto-generated>\n//------------------------------------------------------------------------------\nimport i18n from '@dhis2/d2-i18n';\nimport arTranslations from './ar/translations.json';\nimport ar_IQTranslations from './ar_IQ/translations.json';\nimport ckbTranslations from './ckb/translations.json';\nimport daTranslations from './da/translations.json';\nimport enTranslations from './en/translations.json';\nimport esTranslations from './es/translations.json';\nimport frTranslations from './fr/translations.json';\nimport idTranslations from './id/translations.json';\nimport kmTranslations from './km/translations.json';\nimport loTranslations from './lo/translations.json';\nimport myTranslations from './my/translations.json';\nimport nbTranslations from './nb/translations.json';\nimport prsTranslations from './prs/translations.json';\nimport psTranslations from './ps/translations.json';\nimport ptTranslations from './pt/translations.json';\nimport pt_BRTranslations from './pt_BR/translations.json';\nimport ruTranslations from './ru/translations.json';\nimport svTranslations from './sv/translations.json';\nimport tetTranslations from './tet/translations.json';\nimport tgTranslations from './tg/translations.json';\nimport ukTranslations from './uk/translations.json';\nimport urTranslations from './ur/translations.json';\nimport uz_CyrlTranslations from './uz_Cyrl/translations.json';\nimport viTranslations from './vi/translations.json';\nimport zhTranslations from './zh/translations.json';\nimport zh_CNTranslations from './zh_CN/translations.json';\nconst namespace = 'default';\ni18n.addResources('ar', namespace, arTranslations);\ni18n.addResources('ar_IQ', namespace, ar_IQTranslations);\ni18n.addResources('ckb', namespace, ckbTranslations);\ni18n.addResources('da', namespace, daTranslations);\ni18n.addResources('en', namespace, enTranslations);\ni18n.addResources('es', namespace, esTranslations);\ni18n.addResources('fr', namespace, frTranslations);\ni18n.addResources('id', namespace, idTranslations);\ni18n.addResources('km', namespace, kmTranslations);\ni18n.addResources('lo', namespace, loTranslations);\ni18n.addResources('my', namespace, myTranslations);\ni18n.addResources('nb', namespace, nbTranslations);\ni18n.addResources('prs', namespace, prsTranslations);\ni18n.addResources('ps', namespace, psTranslations);\ni18n.addResources('pt', namespace, ptTranslations);\ni18n.addResources('pt_BR', namespace, pt_BRTranslations);\ni18n.addResources('ru', namespace, ruTranslations);\ni18n.addResources('sv', namespace, svTranslations);\ni18n.addResources('tet', namespace, tetTranslations);\ni18n.addResources('tg', namespace, tgTranslations);\ni18n.addResources('uk', namespace, ukTranslations);\ni18n.addResources('ur', namespace, urTranslations);\ni18n.addResources('uz_Cyrl', namespace, uz_CyrlTranslations);\ni18n.addResources('vi', namespace, viTranslations);\ni18n.addResources('zh', namespace, zhTranslations);\ni18n.addResources('zh_CN', namespace, zh_CNTranslations);\nexport default i18n;","import React from 'react';\nimport { MuiThemeProvider, createMuiTheme } from '@material-ui/core/styles';\nimport dhis2theme from '@dhis2/d2-ui-core/theme/mui3.theme';\nimport { Provider as ReduxProvider } from 'react-redux';\nimport { D2Shim } from '@dhis2/app-runtime-adapter-d2';\nimport App from './components/App';\nimport configureStore from './configureStore';\nimport './AppWrapper.css';\nimport './locales';\n\nconst muiTheme = () => createMuiTheme(dhis2theme);\n\nconst schemas = ['chart', 'map', 'report', 'reportTable', 'eventChart', 'eventReport', 'dashboard', 'organisationUnit', 'userGroup'];\nconst appConfig = {\n  schemas\n};\nconst authorization = process.env.REACT_APP_DHIS2_AUTHORIZATION || null; // TODO: ER and EV plugins require the auth header in development mode.\n// Remove this when these plugins are rewritten\n\nif (authorization) {\n  appConfig.headers = {\n    Authorization: authorization\n  };\n}\n\nconst AppWrapper = () => {\n  return <ReduxProvider store={configureStore()}>\n            <MuiThemeProvider theme={muiTheme()}>\n                <D2Shim appConfig={appConfig} i18nRoot=\"./i18n\">\n                    {({\n          d2\n        }) => {\n          if (!d2) {\n            // TODO: Handle errors in d2 initialization\n            return null;\n          }\n\n          return <App d2={d2} />;\n        }}\n                </D2Shim>\n            </MuiThemeProvider>\n        </ReduxProvider>;\n};\n\nexport default AppWrapper;","import isObject from 'lodash/isObject'; // validation\n\nexport function orNull(param) {\n  return param === undefined ? null : param;\n}\nexport function orArray(param) {\n  return Array.isArray(param) ? param : [];\n}\nexport function orObject(param) {\n  return isObject(param) ? param : {};\n} // array\n\nexport function arrayGetById(array, id) {\n  return array.find(item => item.id === id);\n} // object\n\nexport function arrayToIdMap(array) {\n  return array.reduce((obj, item) => {\n    obj[item.id] = item;\n    return obj;\n  }, {});\n} // date\n\nexport function getDate() {\n  const y = Math.floor(Math.random() * 3) + 2015;\n  const M = Math.floor(Math.random() * 12) + 1;\n  const d = Math.floor(Math.random() * 28) + 1; // const h = Math.floor(Math.random() * 23) + 1;\n  // const m = Math.floor(Math.random() * 59) + 1;\n  // const s = Math.floor(Math.random() * 59) + 1;\n\n  return new Date(`${y}-${M}-${d}`).toJSON().replace('T', ' ').substr(0, 10);\n}\nexport const formatDate = (value, uiLocale) => {\n  if (typeof global.Intl !== 'undefined' && Intl.DateTimeFormat) {\n    const locale = uiLocale || 'en';\n    return new Intl.DateTimeFormat(locale, {\n      year: 'numeric',\n      month: 'short',\n      day: 'numeric'\n    }).format(new Date(value));\n  }\n\n  return value.substr(0, 19).replace('T', ' ');\n};\n/**\n * Sorts an array of objects based on provided date property\n *\n * @param {Array} items Array of objects\n * @param {String} dateProp Name of the date property to be used for sorting\n * @param {Boolean} ascending Whether to sort ascending or descending\n */\n\nexport const sortByDate = (items, dateProp, ascending = true) => {\n  const values = Object.values(items);\n  values.sort((a, b) => {\n    const aDate = new Date(a[dateProp]);\n    const bDate = new Date(b[dateProp]);\n    return ascending ? aDate - bDate : bDate - aDate;\n  });\n  return values;\n}; // reducer validator\n\nexport const validateReducer = (value, defaultValue) => value === undefined || value === null ? defaultValue : value;\nexport const getBaseUrl = d2 => {\n  const api = d2.Api.getApi();\n  const idx = api.baseUrl.indexOf('/api');\n  return idx > -1 ? api.baseUrl.slice(0, idx) : api.baseUrl;\n};\nexport const getWithoutId = object => ({ ...object,\n  id: undefined\n});","import i18n from '@dhis2/d2-i18n';\nimport TableIcon from '@material-ui/icons/ViewList';\nimport ChartIcon from '@material-ui/icons/InsertChart';\nimport MapIcon from '@material-ui/icons/Public';\nimport ExtensionIcon from '@material-ui/icons/Extension';\nimport DescriptionIcon from '@material-ui/icons/Description';\nimport PersonIcon from '@material-ui/icons/Person';\nimport FontDownloadIcon from '@material-ui/icons/FontDownload';\nimport EmailIcon from '@material-ui/icons/Email';\nimport CropFreeIcon from '@material-ui/icons/CropFree';\nimport NotInterestedIcon from '@material-ui/icons/NotInterested';\nimport { getBaseUrl } from './util'; // Item types\n\nexport const VISUALIZATION = 'VISUALIZATION';\nexport const REPORT_TABLE = 'REPORT_TABLE';\nexport const CHART = 'CHART';\nexport const MAP = 'MAP';\nexport const EVENT_REPORT = 'EVENT_REPORT';\nexport const EVENT_CHART = 'EVENT_CHART';\nexport const APP = 'APP';\nexport const REPORTS = 'REPORTS';\nexport const RESOURCES = 'RESOURCES';\nexport const USERS = 'USERS';\nexport const MESSAGES = 'MESSAGES';\nexport const TEXT = 'TEXT';\nexport const SPACER = 'SPACER';\nexport const PAGEBREAK = 'PAGEBREAK';\nexport const PRINT_TITLE_PAGE = 'PRINT_TITLE_PAGE';\nconst DOMAIN_TYPE_AGGREGATE = 'AGGREGATE';\nconst DOMAIN_TYPE_TRACKER = 'TRACKER'; // Dashboard helpers\n\nexport const isVisualizationType = item => !!itemTypeMap[item.type].isVisualizationType;\nexport const hasMapView = itemType => itemTypeMap[itemType].domainType === DOMAIN_TYPE_AGGREGATE;\nexport const isTrackerDomainType = itemType => itemTypeMap[itemType].domainType === DOMAIN_TYPE_TRACKER;\nexport const getDefaultItemCount = itemType => itemTypeMap[itemType].defaultItemCount || 5;\nexport const getAppName = itemType => itemTypeMap[itemType].appName || ''; // Item type map\n\nexport const itemTypeMap = {\n  [VISUALIZATION]: {\n    id: VISUALIZATION,\n    endPointName: 'visualizations',\n    propName: 'visualization',\n    pluralTitle: i18n.t('Visualizations'),\n    appUrl: id => `dhis-web-data-visualizer/#/${id}`,\n    appName: 'Data Visualizer',\n    defaultItemCount: 10\n  },\n  [REPORT_TABLE]: {\n    id: REPORT_TABLE,\n    endPointName: 'visualizations',\n    propName: 'visualization',\n    pluralTitle: i18n.t('Pivot tables'),\n    domainType: DOMAIN_TYPE_AGGREGATE,\n    isVisualizationType: true,\n    appUrl: id => `dhis-web-data-visualizer/#/${id}`,\n    appName: 'Data Visualizer'\n  },\n  [CHART]: {\n    id: CHART,\n    endPointName: 'visualizations',\n    propName: 'visualization',\n    pluralTitle: i18n.t('Charts'),\n    domainType: DOMAIN_TYPE_AGGREGATE,\n    isVisualizationType: true,\n    appUrl: id => `dhis-web-data-visualizer/#/${id}`,\n    appName: 'Data Visualizer'\n  },\n  [MAP]: {\n    id: MAP,\n    endPointName: 'maps',\n    propName: 'map',\n    pluralTitle: i18n.t('Maps'),\n    domainType: DOMAIN_TYPE_AGGREGATE,\n    isVisualizationType: true,\n    appUrl: id => `dhis-web-maps/?id=${id}`,\n    appName: 'Maps'\n  },\n  [EVENT_REPORT]: {\n    id: EVENT_REPORT,\n    endPointName: 'eventReports',\n    propName: 'eventReport',\n    pluralTitle: i18n.t('Event reports'),\n    domainType: DOMAIN_TYPE_TRACKER,\n    isVisualizationType: true,\n    appUrl: id => `dhis-web-event-reports/?id=${id}`,\n    appName: 'Event Reports'\n  },\n  [EVENT_CHART]: {\n    id: EVENT_CHART,\n    endPointName: 'eventCharts',\n    propName: 'eventChart',\n    pluralTitle: i18n.t('Event charts'),\n    domainType: DOMAIN_TYPE_TRACKER,\n    isVisualizationType: true,\n    appUrl: id => `dhis-web-event-visualizer/?id=${id}`,\n    appName: 'Event Visualizer'\n  },\n  [APP]: {\n    endPointName: 'apps',\n    propName: 'appKey',\n    pluralTitle: i18n.t('Apps')\n  },\n  [REPORTS]: {\n    id: REPORTS,\n    endPointName: 'reports',\n    propName: 'reports',\n    pluralTitle: i18n.t('Reports'),\n    appUrl: (id, type) => {\n      switch (type) {\n        case 'HTML':\n          return `dhis-web-reports/#/standard-report/view/${id}`;\n\n        case 'JASPER_REPORT_TABLE':\n        case 'JASPER_JDBC':\n        default:\n          return `api/reports/${id}/data.pdf?t=${new Date().getTime()}`;\n      }\n    }\n  },\n  [RESOURCES]: {\n    id: RESOURCES,\n    endPointName: 'resources',\n    propName: 'resources',\n    pluralTitle: i18n.t('Resources'),\n    appUrl: id => `api/documents/${id}/data`\n  },\n  [USERS]: {\n    id: USERS,\n    endPointName: 'users',\n    propName: 'users',\n    pluralTitle: i18n.t('Users'),\n    appUrl: id => `dhis-web-dashboard-integration/profile.action?id=${id}`\n  },\n  [TEXT]: {\n    id: TEXT,\n    propName: 'text'\n  },\n  [MESSAGES]: {\n    propName: 'messages'\n  },\n  [SPACER]: {\n    propName: 'text'\n  },\n  [PAGEBREAK]: {\n    propName: 'text'\n  },\n  [PRINT_TITLE_PAGE]: {\n    propName: 'text'\n  }\n};\nexport const getEndPointName = type => itemTypeMap[type].endPointName;\nexport const getItemUrl = (type, item, d2) => {\n  let url;\n\n  if (type === APP) {\n    url = item.launchUrl;\n  }\n\n  if (itemTypeMap[type] && itemTypeMap[type].appUrl) {\n    url = `${getBaseUrl(d2)}/${itemTypeMap[type].appUrl(item.id, item.type)}`;\n  }\n\n  return url;\n};\nexport const getItemIcon = type => {\n  switch (type) {\n    case REPORT_TABLE:\n    case EVENT_REPORT:\n    case REPORTS:\n      return TableIcon;\n\n    case CHART:\n    case EVENT_CHART:\n      return ChartIcon;\n\n    case MAP:\n      return MapIcon;\n\n    case APP:\n      return ExtensionIcon;\n\n    case RESOURCES:\n      return DescriptionIcon;\n\n    case USERS:\n      return PersonIcon;\n\n    case TEXT:\n      return FontDownloadIcon;\n\n    case MESSAGES:\n      return EmailIcon;\n\n    case SPACER:\n      return CropFreeIcon;\n\n    default:\n      return NotInterestedIcon;\n  }\n};","import isFunction from 'd2-utilizr/lib/isFunction';\nimport { orObject } from '../../modules/util'; // Dimensions for the react-grid-layout\n\nexport const GRID_COMPACT_TYPE = 'vertical'; // vertical | horizonal | null\n\nexport const GRID_ROW_HEIGHT = 10;\nconst GRID_COLUMN_WIDTH_PX = 20;\nconst GRID_LAYOUT = 'FLEXIBLE'; // FIXED | FLEXIBLE\n\nexport const MARGIN = [10, 10];\nexport const NEW_ITEM_SHAPE = {\n  x: 0,\n  y: 0,\n  w: 20,\n  h: 29\n}; // Dimensions for getShape\n\nconst NUMBER_OF_ITEM_COLS = 2;\nconst GRID_COLUMNS = 60;\nconst MAX_ITEM_GRID_WIDTH = GRID_COLUMNS - 1;\nexport const MAX_ITEM_GRID_HEIGHT = 34;\nexport const MAX_ITEM_GRID_HEIGHT_OIPP = 35;\nexport const MAX_ITEM_GRID_WIDTH_OIPP = 56; // for A4 landscape (297x210mm)\n// 794 px = (21cm / 2.54) * 96 pixels/inch\n// 1122 px = 29.7 /2.54 * 96 pixels/inch\n// const a4LandscapeHeightPx = 794\n\nexport const a4LandscapeWidthPx = 1102;\nexport const getGridColumns = () => {\n  switch (GRID_LAYOUT) {\n    case 'FLEXIBLE':\n      return GRID_COLUMNS;\n\n    case 'FIXED':\n      return Math.floor((window.innerWidth - 20) / GRID_COLUMN_WIDTH_PX);\n\n    default:\n      return GRID_COLUMNS;\n  }\n}; // isNonNegativeInteger\n\nconst isNonNegativeInteger = x => Number.isInteger(x) && x >= 0; // Does the item have all the shape properties?\n\n\nexport const hasShape = item => isNonNegativeInteger(item.x) && isNonNegativeInteger(item.y) && isNonNegativeInteger(item.w) && isNonNegativeInteger(item.h); // returns a rectangular grid block dimensioned with x, y, w, h in grid units.\n// based on a grid with 3 items across\n\nexport const getShape = i => {\n  if (!isNonNegativeInteger(i)) {\n    throw new Error('Invalid grid block number');\n  }\n\n  const col = i % NUMBER_OF_ITEM_COLS;\n  const row = Math.floor(i / NUMBER_OF_ITEM_COLS);\n  const itemWidth = Math.floor(MAX_ITEM_GRID_WIDTH / NUMBER_OF_ITEM_COLS);\n  const itemHeight = GRID_ROW_HEIGHT * 2;\n  return {\n    x: col * itemWidth,\n    y: row * itemHeight,\n    w: itemWidth,\n    h: itemHeight\n  };\n};\nexport const getGridItemProperties = itemId => {\n  return {\n    i: itemId,\n    minH: 4 // minimum height for item\n\n  };\n};\nexport const getPageBreakItemShape = (yPos, isStatic = true) => {\n  return {\n    x: 0,\n    y: yPos,\n    w: MAX_ITEM_GRID_WIDTH,\n    h: 5,\n    static: !!isStatic,\n    minH: 1\n  };\n};\nexport const getPrintTitlePageItemShape = isOneItemPerPage => {\n  return {\n    x: 0,\n    y: 0,\n    w: isOneItemPerPage ? MAX_ITEM_GRID_WIDTH_OIPP : MAX_ITEM_GRID_WIDTH,\n    h: MAX_ITEM_GRID_HEIGHT,\n    static: true,\n    minH: 1\n  };\n};\n/**\n * Calculates the grid item's original height in pixels based\n * on the height in grid units. This calculation\n * is copied directly from react-grid-layout GridItem.js (calcPosition)\n *\n * @param {Object} item item containing shape (x, y, w, h)\n */\n\nexport const getOriginalHeight = item => {\n  const originalHeight = Math.round(GRID_ROW_HEIGHT * item.h + Math.max(0, item.h - 1) * MARGIN[1]);\n  return {\n    originalHeight\n  };\n};\n/**\n * Returns an array of items containing the x, y, w, h dimensions\n * and the item's originalheight in pixels\n * @function\n * @param {Array} items\n * @returns {Array}\n */\n\nexport const withShape = items => items.map((item, index) => {\n  const itemWithShape = hasShape(item) ? item : Object.assign({}, item, getShape(index));\n  return Object.assign({}, itemWithShape, getOriginalHeight(itemWithShape));\n});\nexport const getGridItemDomId = id => `item-${id}`;\nexport function onItemResize(id) {\n  const el = orObject(document.querySelector(`#${getGridItemDomId(id)}`));\n  if (isFunction(el.setViewportSize)) setTimeout(() => el.setViewportSize(el.clientWidth - 5, el.clientHeight - 5), 10);\n}","import isObject from 'lodash/isObject';\nimport { VIS_TYPE_COLUMN, VIS_TYPE_PIVOT_TABLE } from '@dhis2/analytics';\nimport { apiFetchFavorite, getMapFields } from '../../../api/metadata';\nimport { REPORT_TABLE, CHART, MAP, EVENT_REPORT, EVENT_CHART, itemTypeMap } from '../../../modules/itemTypes';\nimport { getBaseUrl, getWithoutId } from '../../../modules/util';\nimport { getGridItemDomId } from '../../ItemGrid/gridUtil'; //external plugins\n\nconst itemTypeToExternalPlugin = {\n  [MAP]: 'mapPlugin',\n  [EVENT_REPORT]: 'eventReportPlugin',\n  [EVENT_CHART]: 'eventChartPlugin'\n};\n\nconst hasIntegratedPlugin = type => [CHART, REPORT_TABLE].includes(type);\n\nconst getPlugin = type => {\n  if (hasIntegratedPlugin(type)) {\n    return true;\n  }\n\n  const pluginName = itemTypeToExternalPlugin[type];\n  return global[pluginName];\n};\n\nexport const THEMATIC_LAYER = 'thematic';\nexport const pluginIsAvailable = (item = {}, visualization = {}) => {\n  const type = visualization.activeType || item.type;\n  return !!getPlugin(type);\n};\nexport const extractFavorite = item => {\n  if (!isObject(item)) {\n    return null;\n  }\n\n  const propName = itemTypeMap[item.type].propName;\n  return item[propName] || item.reportTable || item.chart || item.map || item.eventReport || item.eventChart || {};\n};\nexport const extractMapView = map => map.mapViews && map.mapViews.find(mv => mv.layer.includes(THEMATIC_LAYER));\nexport const loadPlugin = (plugin, config, credentials) => {\n  if (!(plugin && plugin.load)) {\n    return;\n  }\n\n  plugin.url = credentials.baseUrl;\n  plugin.loadingIndicator = true;\n  plugin.dashboard = true;\n\n  if (credentials.auth) {\n    plugin.auth = credentials.auth;\n  }\n\n  plugin.load(config);\n};\nexport const getId = item => extractFavorite(item).id;\nexport const getName = item => extractFavorite(item).name;\nexport const getDescription = item => extractFavorite(item).description;\nexport const getLink = (item, d2) => {\n  const baseUrl = getBaseUrl(d2);\n  const appUrl = itemTypeMap[item.type].appUrl(getId(item));\n  return `${baseUrl}/${appUrl}`;\n};\nexport const load = async (item, visualization, {\n  credentials,\n  activeType,\n  options = {}\n}) => {\n  const config = { ...visualization,\n    ...options,\n    el: getGridItemDomId(item.id)\n  };\n  const type = activeType || item.type;\n  const plugin = getPlugin(type);\n  loadPlugin(plugin, config, credentials);\n};\nexport const fetch = async item => {\n  const fetchedFavorite = await apiFetchFavorite(getId(item), item.type, {\n    fields: item.type === MAP ? getMapFields() : null\n  });\n  return fetchedFavorite;\n};\nexport const resize = item => {\n  const plugin = getPlugin(item.type);\n\n  if (plugin && plugin.resize) {\n    plugin.resize(getGridItemDomId(item.id));\n  }\n};\nexport const unmount = (item, activeType) => {\n  const plugin = getPlugin(activeType);\n\n  if (plugin && plugin.unmount) {\n    plugin.unmount(getGridItemDomId(item.id));\n  }\n};\nexport const getVisualizationConfig = (visualization, originalType, activeType) => {\n  if (originalType === MAP && originalType !== activeType) {\n    const extractedMapView = extractMapView(visualization);\n\n    if (extractedMapView === undefined) {\n      return null;\n    }\n\n    return getWithoutId({ ...visualization,\n      ...extractedMapView,\n      mapViews: undefined,\n      type: activeType === CHART ? VIS_TYPE_COLUMN : VIS_TYPE_PIVOT_TABLE\n    });\n  } else if (originalType === REPORT_TABLE && activeType === CHART) {\n    return getWithoutId({ ...visualization,\n      type: VIS_TYPE_COLUMN\n    });\n  } else if (originalType === CHART && activeType === REPORT_TABLE) {\n    return getWithoutId({ ...visualization,\n      type: VIS_TYPE_PIVOT_TABLE\n    });\n  }\n\n  return getWithoutId(visualization);\n};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"itemHeaderWrap\":\"ItemHeader_itemHeaderWrap__JcBP7\",\"itemTitle\":\"ItemHeader_itemTitle__34rHa\",\"itemActionsWrap\":\"ItemHeader_itemActionsWrap__Gx3D9\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"DashboardsBar_container__1xuCo\",\"overflowYAuto\":\"DashboardsBar_overflowYAuto__2mKmg\",\"overflowYHidden\":\"DashboardsBar_overflowYHidden__24dgC\",\"leftControls\":\"DashboardsBar_leftControls__k-Y57\",\"newLink\":\"DashboardsBar_newLink__2PkLQ\",\"rightControls\":\"DashboardsBar_rightControls__1cyr1\",\"topMargin\":\"DashboardsBar_topMargin__FKGgr\"};","import { getInstance } from 'd2';\nimport arrayClean from 'd2-utilizr/lib/arrayClean';\nimport { getEndPointName } from '../modules/itemTypes'; // Id, name\n\nexport const getIdNameFields = ({\n  rename\n} = {}) => ['id', `${rename ? 'displayName~rename(name)' : 'name,displayName'}`]; // Item\n\nexport const getItemFields = () => ['dimensionItem~rename(id)', 'displayName~rename(name)', 'dimensionItemType']; // Dimension\n\nexport const getDimensionFields = ({\n  withItems\n}) => arrayClean(['dimension', 'legendSet[id]', 'filter', 'programStage', withItems ? `items[${getItemFields().join(',')}]` : ``]); // Axis\n\nexport const getAxesFields = ({\n  withItems\n}) => [`columns[${getDimensionFields({\n  withItems\n}).join(',')}]`, `rows[${getDimensionFields({\n  withItems\n}).join(',')}]`, `filters[${getDimensionFields({\n  withItems\n}).join(',')}]`]; // Favorite\n\nexport const getFavoriteFields = ({\n  withDimensions,\n  withOptions\n}) => {\n  return arrayClean([`${getIdNameFields({\n    rename: true\n  }).join(',')}`, 'displayDescription~rename(description)', withDimensions ? `${getAxesFields({\n    withItems: true\n  }).join(',')}` : ``, withOptions ? ['*', '!attributeDimensions', '!attributeValues', '!category', '!categoryDimensions', '!categoryOptionGroupSetDimensions', '!columnDimensions', '!dataDimensionItems', '!dataElementDimensions', '!dataElementGroupSetDimensions', '!filterDimensions', '!itemOrganisationUnitGroups', '!lastUpdatedBy', '!organisationUnitGroupSetDimensions', '!organisationUnitLevels', '!organisationUnits', '!programIndicatorDimensions', '!relativePeriods', '!reportParams', '!rowDimensions', '!translations', '!userOrganisationUnit', '!userOrganisationUnitChildren', '!userOrganisationUnitGrandChildren'].join(',') : '']);\n};\nexport const getFavoritesFields = ({\n  withDimensions\n}) => [`reportTable[${getFavoriteFields({\n  withDimensions\n}).join(',')}]`, `chart[${['type', ...getFavoriteFields({\n  withDimensions\n})].join(',')}]`, `map[${getFavoriteFields({\n  withDimensions\n}).join(',')}]`, `eventReport[${getFavoriteFields({\n  withDimensions\n}).join(',')}]`, `eventChart[${getFavoriteFields({\n  withDimensions\n}).join(',')}]`]; // List item\n\nexport const getListItemFields = () => [`reports[${['type', ...getIdNameFields({\n  rename: true\n})].join(',')}]`, `resources[${getIdNameFields({\n  rename: true\n}).join(',')}]`, `users[${getIdNameFields({\n  rename: true\n}).join(',')}]`]; // Map\n\nexport const getMapFields = () => [`${getIdNameFields({\n  rename: true\n}).join(',')}`, 'user,longitude,latitude,zoom,basemap', `mapViews[${getFavoriteFields({\n  withDimensions: true,\n  withOptions: true\n})}]`]; // Api\n// Get more info about the favorite of a dashboard item\n\nexport const apiFetchFavorite = (id, type, {\n  fields\n}) => getInstance().then(d2 => d2.Api.getApi().get(`${getEndPointName(type)}/${id}`, {\n  fields: fields || getFavoriteFields({\n    withDimensions: true,\n    withOptions: true\n  })\n}));","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"ControlBar_root__iikeX\",\"content\":\"ControlBar_content__26Z33\",\"draghandle\":\"ControlBar_draghandle__27zum\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"link\":\"DashboardItemChip_link__21drZ\",\"icon\":\"DashboardItemChip_icon__2hcIR\",\"selected\":\"DashboardItemChip_selected__r00uP\",\"unselected\":\"DashboardItemChip_unselected__2H9l2\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"ClearButton_button__33ZbK\",\"icon\":\"ClearButton_icon__vTJm3\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Filter_container__1Vxdh\",\"input\":\"Filter_input__14lhU\",\"focused\":\"Filter_focused__Lvyz3\",\"searchIcon\":\"Filter_searchIcon__2ojUp\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"ShowMoreButton_container__riJz_\",\"showMore\":\"ShowMoreButton_showMore__3S3He\",\"disabled\":\"ShowMoreButton_disabled__2FQNA\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"menuItem\":\"ContentMenuItem_menuItem__vbKn3\",\"launchLink\":\"ContentMenuItem_launchLink__2Nql9\",\"label\":\"ContentMenuItem_label__ANfH1\",\"buttonInsert\":\"ContentMenuItem_buttonInsert__1joHg\"};"],"sourceRoot":""}
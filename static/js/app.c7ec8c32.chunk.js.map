{"version":3,"sources":["D2App/components/styles/DashboardContainer.module.css","D2App/components/styles/NoContentMessage.module.css","D2App/components/styles/Notice.module.css","D2App/pages/print/styles/PrintActionsBar.module.css","D2App/pages/print/styles/PrintInfo.module.css","D2App/components/Item/ItemHeader/styles/PrintItemInfo.module.css","D2App/components/Item/ListItem/Item.module.css","D2App/components/Item/MessagesItem/getFormattedDate.js","D2App/components/Item/MessagesItem/styles/Item.module.css","D2App/components/Item/PrintTitlePageItem/styles/Item.module.css","D2App/components/Item/VisualizationItem/styles/FatalErrorBoundary.module.css","D2App/components/styles/Tooltip.module.css","D2App/components/Item/VisualizationItem/styles/ItemFooter.module.css","D2App/components/Item/VisualizationItem/Visualization/loadExternalScript.js","D2App/components/Item/VisualizationItem/Visualization/styles/LoadingMask.module.css","D2App/components/Item/VisualizationItem/Visualization/styles/DataVisualizerPlugin.module.css","D2App/components/Item/VisualizationItem/Visualization/styles/VisualizationErrorMessage.module.css","D2App/components/Item/VisualizationItem/Visualization/styles/NoVisualizationMessage.module.css","D2App/pages/print/styles/PrintLayoutDashboard.module.css","D2App/components/styles/ConfirmActionDialog.module.css","D2App/pages/edit/styles/FilterSettingsDialog.module.css","D2App/pages/edit/styles/ActionsBar.module.css","D2App/pages/edit/styles/ItemGrid.module.css","D2App/pages/edit/styles/EditDashboard.module.css","D2App/pages/edit/ItemSelector/styles/ContentMenuItem.module.css","D2App/pages/edit/ItemSelector/styles/HeaderMenuItem.module.css","D2App/pages/edit/ItemSelector/styles/CategorizedMenuGroup.module.css","D2App/pages/edit/ItemSelector/styles/ItemSearchField.module.css","D2App/pages/edit/ItemSelector/styles/ItemSelector.module.css","D2App/pages/edit/styles/LayoutModal.module.css","D2App/pages/edit/styles/TitleBar.module.css","D2App/pages/edit/styles/NewDashboard.module.css","D2App/pages/print/styles/PrintDashboard.module.css","D2App/components/DashboardsBar/styles/Chip.module.css","D2App/components/DashboardsBar/styles/ClearButton.module.css","D2App/components/DashboardsBar/styles/Filter.module.css","D2App/components/DashboardsBar/styles/Content.module.css","D2App/components/DashboardsBar/styles/DragHandle.module.css","D2App/components/DashboardsBar/styles/ShowMoreButton.module.css","D2App/components/DashboardsBar/styles/DashboardsBar.module.css","D2App/pages/start/styles/DashboardLink.module.css","D2App/pages/start/styles/StartScreen.module.css","D2App/pages/view/FilterBar/styles/FilterBadge.module.css","D2App/pages/view/FilterBar/styles/FilterBar.module.css","D2App/pages/view/styles/ItemGrid.module.css","D2App/pages/view/styles/ViewDashboard.module.css","D2App/components/DropdownButton/DropdownButton.module.css","D2App/pages/view/TitleBar/styles/FilterSelector.module.css","D2App/pages/view/TitleBar/styles/StarDashboardButton.module.css","D2App/pages/view/TitleBar/styles/ActionsBar.module.css","D2App/pages/view/TitleBar/styles/Description.module.css","D2App/pages/view/TitleBar/styles/LastUpdatedTag.module.css","D2App/pages/view/TitleBar/styles/TitleBar.module.css","D2App/reducers/activeModalDimension.js","D2App/actions/activeModalDimension.js","D2App/modules/util.js","D2App/reducers/controlBar.js","D2App/api/userDataStore.js","D2App/api/controlBar.js","D2App/actions/controlBar.js","D2App/api/fetchAllDashboards.js","D2App/reducers/dashboards.js","D2App/actions/dashboards.js","D2App/reducers/dashboardsFilter.js","D2App/actions/dashboardsFilter.js","D2App/modules/dashboardModes.js","D2App/modules/smallScreen.js","D2App/modules/gridUtil.js","D2App/modules/uiBackendItemConverter.js","D2App/api/metadata.js","D2App/api/fetchDashboard.js","D2App/modules/getCustomDashboards.js","D2App/api/editDashboard.js","D2App/reducers/editDashboard.js","D2App/actions/editDashboard.js","D2App/reducers/itemActiveTypes.js","D2App/actions/itemActiveTypes.js","D2App/reducers/dimensions.js","D2App/reducers/itemFilters.js","D2App/actions/itemFilters.js","D2App/reducers/printDashboard.js","D2App/actions/printDashboard.js","D2App/api/messages.js","D2App/reducers/messages.js","D2App/components/Item/MessagesItem/actions.js","D2App/modules/localStorage.js","D2App/reducers/selected.js","D2App/reducers/visualizations.js","D2App/actions/visualizations.js","D2App/actions/selected.js","D2App/reducers/showDescription.js","D2App/api/description.js","D2App/actions/showDescription.js","D2App/components/DashboardContainer.js","D2App/components/NoContentMessage.js","D2App/components/Notice.js","D2App/components/WindowDimensionsProvider.js","D2App/modules/setHeaderbarVisible.js","D2App/pages/print/ActionsBar.js","D2App/pages/print/PrintInfo.js","D2App/components/Item/ItemHeader/DeleteItemButton.js","D2App/components/Item/ItemHeader/EditItemActions.js","D2App/components/Item/ItemHeader/PrintItemInfo.js","D2App/components/Item/ItemHeader/ViewItemActions.js","D2App/components/Item/ItemHeader/ItemHeader.js","D2App/components/Item/AppItem/Item.js","D2App/components/Item/ListItem/Item.js","D2App/api/userSettings.js","D2App/components/UserSettingsProvider.js","D2App/components/Item/MessagesItem/Item.js","D2App/components/Item/NotSupportedItem/Item.js","D2App/components/Item/PageBreakItem/Item.js","D2App/components/Item/PrintTitlePageItem/Item.js","D2App/components/Item/SpacerItem/Item.js","D2App/components/Item/TextItem/Item.js","D2App/api/dataStatistics.js","D2App/modules/item.js","D2App/api/fetchVisualization.js","D2App/api/systemSettings.js","D2App/components/SystemSettingsProvider.js","D2App/components/Item/VisualizationItem/assets/icons.js","D2App/components/Item/VisualizationItem/FatalErrorBoundary.js","D2App/modules/getGridItemDomElementClassName.js","D2App/components/Item/VisualizationItem/getGridItemElement.js","D2App/components/Item/VisualizationItem/isElementFullscreen.js","D2App/components/OfflineTooltip.js","D2App/components/MenuItemWithTooltip.js","D2App/components/Item/VisualizationItem/getThematicMapViews.js","D2App/components/Item/VisualizationItem/ItemContextMenu/ViewAsMenuItems.js","D2App/components/Item/VisualizationItem/ItemContextMenu/ItemContextMenu.js","D2App/components/Item/VisualizationItem/ItemFooter.js","D2App/components/Item/VisualizationItem/memoizeOne.js","D2App/components/Item/VisualizationItem/Visualization/LoadingMask.js","D2App/components/Item/VisualizationItem/Visualization/VisualizationErrorMessage.js","D2App/components/Item/VisualizationItem/Visualization/DataVisualizerPlugin.js","D2App/components/Item/VisualizationItem/Visualization/getFilteredVisualization.js","D2App/components/Item/VisualizationItem/Visualization/getVisualizationConfig.js","D2App/components/Item/VisualizationItem/Visualization/DefaultPlugin.js","D2App/components/Item/VisualizationItem/Visualization/LegacyPlugin.js","D2App/components/Item/VisualizationItem/Visualization/NoVisualizationMessage.js","D2App/components/Item/VisualizationItem/Visualization/MapPlugin.js","D2App/components/Item/VisualizationItem/Visualization/Visualization.js","D2App/components/Item/VisualizationItem/Item.js","D2App/components/Item/Item.js","D2App/pages/print/printUtils.js","D2App/pages/print/StaticGrid.js","D2App/pages/print/PrintLayoutItemGrid.js","D2App/pages/print/PrintLayoutDashboard.js","D2App/components/ConfirmActionDialog.js","D2App/pages/edit/deleteDashboardMutation.js","D2App/modules/getFilteredDimensions.js","D2App/modules/useDimensions.js","D2App/actions/dimensions.js","D2App/pages/edit/FilterSettingsDialog.js","D2App/pages/edit/ActionsBar.js","D2App/components/ProgressiveLoadingContainer.js","D2App/pages/edit/ItemGrid.js","D2App/pages/edit/assets/LayoutFixed.js","D2App/pages/edit/assets/LayoutFreeflow.js","D2App/modules/useDebounce.js","D2App/pages/edit/ItemSelector/ContentMenuItem.js","D2App/pages/edit/ItemSelector/HeaderMenuItem.js","D2App/pages/edit/ItemSelector/selectableItems.js","D2App/pages/edit/ItemSelector/CategorizedMenuGroup.js","D2App/pages/edit/ItemSelector/actions.js","D2App/pages/edit/ItemSelector/ItemSearchField.js","D2App/pages/edit/ItemSelector/SinglesMenuGroup.js","D2App/pages/edit/ItemSelector/ItemSelector.js","D2App/pages/edit/ItemSelector/dashboardsQQuery.js","D2App/pages/edit/LayoutModal.js","D2App/pages/edit/TitleBar.js","D2App/pages/edit/EditDashboard.js","D2App/pages/edit/NewDashboard.js","D2App/pages/print/PrintItemGrid.js","D2App/pages/print/PrintDashboard.js","D2App/modules/getCacheableSectionId.js","D2App/modules/useCacheableSection.js","D2App/components/DashboardsBar/assets/icons.js","D2App/components/DashboardsBar/Chip.js","D2App/components/DashboardsBar/assets/Clear.js","D2App/components/DashboardsBar/ClearButton.js","D2App/components/DashboardsBar/Filter.js","D2App/components/DashboardsBar/getFilteredDashboards.js","D2App/components/DashboardsBar/Content.js","D2App/components/DashboardsBar/DragHandle.js","D2App/components/DashboardsBar/ShowMoreButton.js","D2App/components/DashboardsBar/DashboardsBar.js","D2App/components/DashboardsBar/getRowsFromHeight.js","D2App/pages/start/DashboardLink.js","D2App/pages/start/StartScreen.js","D2App/pages/start/LandingPage.js","D2App/pages/start/index.js","D2App/components/LoadingMask.js","D2App/reducers/passiveViewRegistered.js","D2App/pages/view/FilterBar/FilterBadge.js","D2App/pages/view/FilterBar/FilterBar.js","D2App/pages/view/ItemGrid.js","D2App/components/DropdownButton/assets/Arrow.js","D2App/components/DropdownButton/DropdownButton.js","D2App/pages/view/TitleBar/FilterDialog.js","D2App/pages/view/TitleBar/FilterSelector.js","D2App/pages/view/TitleBar/StarDashboardButton.js","D2App/pages/view/TitleBar/ActionsBar.js","D2App/pages/view/TitleBar/apiStarDashboard.js","D2App/pages/view/TitleBar/Description.js","D2App/pages/view/TitleBar/LastUpdatedTag.js","D2App/pages/view/TitleBar/TitleBar.js","D2App/pages/view/ViewDashboard.js","D2App/actions/passiveViewRegistered.js","D2App/pages/view/CacheableViewDashboard.js","D2App/components/App.js","D2App/reducers/index.js","D2App/configureStore.js","D2App/locales/index.js","D2App/AppWrapper.js","D2App/modules/itemTypes.js","D2App/components/Item/VisualizationItem/Visualization/plugin.js","D2App/components/Item/VisualizationItem/getVisualizationContainerDomId.js","D2App/components/Item/ItemHeader/styles/ItemHeader.module.css"],"names":["module","exports","getFormattedDate","value","uiLocale","global","Intl","DateTimeFormat","locale","year","month","day","format","Date","substr","replace","loadExternalScript","src","startsWith","path","process","join","normalizeRelativePath","Promise","resolve","reject","document","querySelector","isScriptLoaded","element","createElement","type","async","cleanup","console","log","head","removeChild","onload","e","onerror","error","appendChild","SET_ACTIVE_MODAL_DIMENSION","CLEAR_ACTIVE_MODAL_DIMENSION","DEFAULT_STATE_ACTIVE_MODAL_DIMENSION","sGetActiveModalDimension","state","activeModalDimension","acSetActiveModalDimension","acClearActiveModalDimension","orArray","param","Array","isArray","orObject","isObject","arrayToIdMap","array","reduce","obj","item","id","validateReducer","defaultValue","undefined","SET_CONTROLBAR_USER_ROWS","combineReducers","userRows","action","sGetControlBarUserRows","controlBar","sGetControlBarRoot","NAMESPACE","getNamespace","d2","currentUser","dataStore","has","hasDashboardNamespace","get","create","apiPostUserDataStoreValue","key","getInstance","set","apiGetUserDataStoreValue","_ns$keys","ns","keys","find","k","KEY_CONTROLBAR_ROWS","acSetControlBarUserRows","rows","dashboardsQuery","resource","params","fields","paging","SET_DASHBOARDS","ADD_DASHBOARDS","SET_DASHBOARD_STARRED","EMPTY_DASHBOARDS","sGetDashboardsRoot","dashboards","sGetDashboardById","sGetDashboardStarred","starred","sDashboardsIsFetching","sGetAllDashboards","sGetStarredDashboards","Object","values","filter","dashboard","sGetUnstarredDashboards","tFetchDashboards","dispatch","getState","dataEngine","acSetDashboards","query","apiFetchDashboards","SET_DASHBOARDS_FILTER","CLEAR_DASHBOARDS_FILTER","sGetDashboardsFilter","dashboardsFilter","acClearDashboardsFilter","EDIT","NEW","VIEW","PRINT","PRINT_LAYOUT","isEditMode","mode","includes","isPrintMode","isViewMode","isSmallScreen","width","getBreakpoint","DASHBOARD_WRAPPER_LR_MARGIN_PX","GRID_COMPACT_TYPE","GRID_ROW_HEIGHT_PX","MARGIN_PX","MARGIN_SM_PX","GRID_PADDING_PX","GRID_COLUMNS","NEW_ITEM_SHAPE","x","y","w","h","isNonNegativeInteger","Number","isInteger","hasShape","withShape","items","map","i","assign","col","row","Math","floor","itemWidth","MAX_ITEM_GRID_WIDTH","getShape","originalH","getGridWidth","windowWidthPx","getGridUnitsForSmFromPx","hPx","gridUnitHeightPx","round","getProportionalHeight","wPx","getItemWHPx","ratioWH","isVisualizationType","newWPx","newHPx","getGridItemProperties","itemId","minH","getPageBreakItemShape","yPos","isStatic","static","getPrintTitlePageItemShape","isOneItemPerPage","gridUnits","colOrRowSize","marginPx","max","getAutoItemShapes","dashboardItems","columns","maxColUnits","numberOfColUnits","length","getNumberOfColUnits","slice","sort","a","b","sortItems","itemsWithNewShape","itemHeight","colIdx","rowIdx","push","updateItems","options","reload","acSetHideGrid","acUpdateDashboardItemShapes","setTimeout","hasLayout","layout","_layout$columns","Boolean","getDashboardItem","_itemTypeMap$type","itemPropName","itemTypeMap","propName","generateUid","gridItemProperties","shape","PAGEBREAK","PRINT_TITLE_PAGE","position","content","spacerContent","emptyTextItemContent","isTextType","TEXT","text","convertUiItemsToBackend","SPACER","isUiSpacerType","convertBackendItemsToUi","isBackendSpacerType","gridProperties","getIdNameFields","rename","getDimensionFields","withItems","arrayClean","getAxesFields","getFavoriteFields","withDimensions","withOptions","baseDashboardFields","viewDashboardQuery","editDashboardQuery","apiFetchDashboard","forSave","variables","data","arrayFrom","d","_d$allowedFilters","name","code","displayName","description","displayDescription","created","lastUpdated","access","restrictFilters","allowedFilters","href","itemConfig","createDashboardMutation","updateDashboardMutation","skipTranslation","skipSharing","generatePayload","height","RECEIVED_EDIT_DASHBOARD","RECEIVED_NOT_EDITING","START_NEW_DASHBOARD","RECEIVED_TITLE","RECEIVED_CODE","RECEIVED_DESCRIPTION","ADD_DASHBOARD_ITEM","REMOVE_DASHBOARD_ITEM","UPDATE_DASHBOARD_ITEM","RECEIVED_DASHBOARD_ITEM_SHAPES","SET_PRINT_PREVIEW_VIEW","CLEAR_PRINT_PREVIEW_VIEW","RECEIVED_FILTER_SETTINGS","RECEIVED_HIDE_GRID","RECEIVED_LAYOUT_COLUMNS","RECEIVED_ITEM_CONFIG_INSERT_POSITION","EMPTY_STATE_EDIT_DASHBOARD","DEFAULT_STATE_EDIT_DASHBOARD","update","delete","printPreviewView","isDirty","hideGrid","insertPosition","sGetEditDashboardRoot","editDashboard","sGetIsEditing","isEmpty","sGetIsPrintPreviewView","sGetEditDashboardItems","sGetEditIsDirty","sGetHideGrid","sGetLayout","getLayout","sGetLayoutColumns","sGetItemConfigInsertPosition","getItemConfig","sGetItemConfig","acClearEditDashboard","acUpdateDashboardItem","acRemoveDashboardItem","tSetDashboardItems","itemToAdd","itemIdToRemove","dashboardItemsWithShapes","newDashboardItem","addToItemsStart","mx","addToItemsEnd","tSaveDashboard","dashboardToSave","i18n","t","dashboardId","response","mutate","uid","updateDashboard","postDashboard","SET_ITEM_ACTIVE_TYPE","CLEAR_ITEM_ACTIVE_TYPES","DEFAULT_STATE_ITEM_ACTIVE_TYPES","sGetItemActiveType","itemActiveTypes","acClearItemActiveTypes","SET_DIMENSIONS","PE_OU_DIMENSIONS","getDimensionById","DIMENSION_ID_PERIOD","DIMENSION_ID_ORGUNIT","INITIAL_DIMENSIONS","CLEAR_ITEM_FILTERS","ADD_ITEM_FILTER","REMOVE_ITEM_FILTER","DEFAULT_STATE_ITEM_FILTERS","sGetItemFiltersRoot","itemFilters","sGetNamedItemFilters","createSelector","dimensions","filters","arr","dimension","acRemoveItemFilter","acClearItemFilters","SET_PRINT_DASHBOARD","CLEAR_PRINT_DASHBOARD","ADD_PRINT_DASHBOARD_ITEM","SET_PRINT_DASHBOARD_LAYOUT","REMOVE_PRINT_DASHBOARD_ITEM","UPDATE_PRINT_DASHBOARD_ITEM","DEFAULT_STATE_PRINT_DASHBOARD","DEFAULT_DASHBOARD_ITEMS","NEW_PRINT_DASHBOARD_STATE","sGetPrintDashboardRoot","printDashboard","sGetPrintDashboardItems","_sGetPrintDashboardRo","acSetPrintDashboard","acClearPrintDashboard","acAddPrintDashboardItem","acUpdatePrintDashboardItem","messageConversationsQuery","order","pageSize","RECEIVED_MESSAGES","sGetMessagesRoot","messages","tGetMessages","messageConversations","getMessages","err","storePreferredDashboardId","username","localStorage","setItem","SET_SELECTED","CLEAR_SELECTED","DEFAULT_SELECTED_STATE","SELECTED_PROPERTIES","sGetSelected","selected","sGetSelectedId","sGetSelectedDashboardItems","ADD_VISUALIZATION","CLEAR_VISUALIZATIONS","DEFAULT_STATE_VISUALIZATIONS","p","sGetVisualization","visualizations","sGetVisualizationsRoot","acClearVisualizations","acSetSelected","SET_SHOW_DESCRIPTION","sGetShowDescription","showDescription","KEY_SHOW_DESCRIPTION","acSetShowDescription","DashboardContainer","children","covered","React","className","cx","classes","container","NoContentMessage","Notice","title","message","CenteredContent","noticeContainer","NoticeBox","warning","WindowDimensionsCtx","createContext","windowDims","window","innerHeight","innerWidth","WindowDimensionsProvider","setDimensions","useState","useEffect","handleResize","debounce","addEventListener","removeEventListener","Provider","useWindowDimensions","useContext","setHeaderbarVisible","show","header","getElementsByTagName","classList","remove","add","PrintActionsBar","getExitPrintButton","isSmall","Button","buttonSmall","buttonLarge","small","IconChevronLeft24","color","colors","grey700","getPrintButton","onClick","print","actions","Link","link","to","defaultValues","PrintInfo","isLayout","layoutStyle","printSuggestions","divider","DeleteItemButton","Tooltip","placement","secondary","icon","IconDelete24","red600","dataTest","mapDispatchToProps","onDeleteItem","connect","itemActionsWrap","PrintWarning","IconWarning24","grey600","ViewItemActions","actionButtons","ItemHeader","forwardRef","dashboardMode","isShortened","rest","ref","Actions","EditItemActions","PrintItemInfo","getItemActionsMap","itemHeaderWrap","itemTitle","getIframeSrc","appDetails","iframeSrc","launchUrl","ouFilter","split","ownProps","_appDetails","_appDetails$settings","_appDetails$settings$","useD2","appKey","system","installedApps","app","hideTitle","settings","dashboardWidget","Fragment","shortened","Divider","margin","spacers","dp4","style","border","display","justifyContent","alignItems","IconQuestion24","grey500","getItemTitle","pluralTitle","removeItem","updateItem","baseUrl","useConfig","contentItems","index","findIndex","el","getContentItems","getLink","contentItem","removeButton","listItemType","newContent","updateDashboardItem","grey900","getItemUrl","list","itemContent","IconFileDocument16","userSettingsQuery","UserSettingsCtx","UserSettingsProvider","setSettings","engine","useDataEngine","userSettings","displayProperty","keyAnalysisDisplayProperty","fetchData","useUserSettings","PRIVATE","messageTypes","VALIDATION_RESULT","TICKET","SYSTEM","MessagesContainer","getMessageHref","msg","msgIdentifier","messageType","modeClass","sender","latestMsg","getMessageSender","readClass","read","msgDate","location","messageCount","keyUiLocale","snippet","getMessageItems","seeAll","NotSupportedItem","flexDirection","PageBreakItem","PrintTitlePageItem","titlePage","filterTitle","listItems","filterListItem","val","filterList","getItemFilterList","defaultProps","sGetPrintDashboardName","sGetSelectedDisplayName","sGetPrintDashboardDescription","sGetSelectedDisplayDescription","fontSize","lineHeight","SpacerItem","props","textDiv","padding","whiteSpace","textField","fontStretch","marginBottom","marginTop","sGetIsPrinting","onChangeText","updatedItem","viewItem","textDivStyle","RichTextParser","editItem","RichTextEditor","onEdit","event","target","TextArea","placeholder","onChange","printItem","textItem","apiPostDataStatistics","eventType","url","Api","getApi","post","getVisualizationFromItem","_itemTypeMap$item$typ","visualization","eventReport","eventChart","getVisualizationId","getVisualizationName","apiFetchVisualization","MAP","favoriteFields","concat","getMapFields","getEndPointName","DEFAULT_SETTINGS","keyDashboardContextMenuItemOpenInRelevantApp","keyDashboardContextMenuItemShowInterpretationsAndDetails","keyDashboardContextMenuItemSwitchViewType","keyDashboardContextMenuItemViewFullscreen","keyGatherAnalyticalObjectStatisticsInDashboardViews","startModuleEnableLightweight","SYSTEM_SETTINGS_REMAPPINGS","keyHideBiMonthlyPeriods","keyHideDailyPeriods","keyHideMonthlyPeriods","keyHideWeeklyPeriods","keyHideBiWeeklyPeriods","renameSystemSettings","mapped","systemSettingsQuery","SystemSettingsCtx","SystemSettingsProvider","systemSettings","onError","useSystemSettings","Warning","xmlns","viewBox","fill","FatalErrorBoundary","Component","constructor","super","this","errorFound","componentDidCatch","info","setState","onFatalError","render","Function","prototype","getGridItemDomElementClassName","getGridItemElement","isElementFullscreen","fullscreenElement","webkitFullscreenElement","contains","disabledWhenOffline","disabled","offline","useOnlineStatus","notAllowed","UiTooltip","openDelay","closeDelay","onMouseOver","onMouseOut","span","_extends","arguments","source","hasOwnProperty","call","apply","MenuItemWithTooltip","tooltip","label","tooltipContent","MenuItem","dense","OfflineTooltip","getThematicMapViews","mapViews","mv","layer","ViewAsMenuItems","activeType","onActiveTypeChanged","isTrackerType","isTrackerDomainType","notSupported","CHART","EVENT_CHART","IconVisualizationColumn16","REPORT_TABLE","EVENT_REPORT","IconTable16","hasMapView","IconWorld16","ItemContextMenu","menuIsOpen","setMenuIsOpen","allowVisOpenInApp","allowVisShowInterpretations","allowVisViewAs","allowVisFullscreen","fullscreenAllowed","fullscreenSupported","loadItemFailed","closeMenu","canViewAs","isSingleValue","isYearOverYear","VIS_TYPE_GAUGE","VIS_TYPE_PIE","interpretationMenuLabel","activeFooter","buttonRef","createRef","itemHref","appUrl","onToggleFullscreen","IconFullscreenExit16","IconMore24","Popover","reference","arrow","onClickOutside","Menu","getItemTypeForVis","onSelectActiveType","IconLaunch16","appName","getAppName","IconMessages16","onToggleFooter","IconFullscreen16","ItemFooter","itemFooter","line","scrollContainer","InterpretationsComponent","toLowerCase","isOffline","memoizeOne","fn","lastArgs","lastValue","args","every","arg","LoadingMask","center","CircularLoader","VisualizationErrorMessage","visHref","grey400","transform","errorMessage","appLink","stopPropagation","rel","VisualizationPlugin","lazy","DataVisualizerPlugin","filterVersion","visualizationLoaded","setVisualizationLoaded","setError","onLoadingComplete","useCallback","Suspense","fallback","wrapper","forDashboard","getFilteredVisualization","visRows","visColumns","visFilters","forEach","dimensionId","dimensionFound","dimensionObjects","getWithoutId","object","getVisualizationConfig","originalType","thematicMapViews","VIS_TYPE_COLUMN","VIS_TYPE_PIVOT_TABLE","getAdaptedUiLayoutByType","DefaultPlugin","mapViewCount","credentials","auth","defaultHeaders","Authorization","prevItem","useRef","prevActiveType","prevFilterVersion","prevMapViewCount","load","current","unmount","getVisualizationContainerDomId","LegacyPlugin","availableHeight","availableWidth","gridWidth","setViewportSize","clientWidth","clientHeight","NoVisualizationMessage","mapViewIsEELayer","mapView","MapPlugin","applyFilters","_visualization$mapVie","_vis$mapViews","initialized","setInitialized","isFullscreen","plugin","getPlugin","resize","resizeMap","setOfflineStatus","offlineStatus","setMapOfflineStatus","vis","mapViewIsThematicOrEvent","getVisualization","pluginIsAvailable","Visualization","memoizedGetFilteredVisualization","memoizedGetVisualizationConfig","getFilterVersion","uniqueId","visualizationConfig","VISUALIZATION","_defineProperty","defineProperty","enumerable","configurable","writable","Item","showFooter","configLoaded","requestFullscreen","webkitRequestFullscreen","exitFullscreen","webkitExitFullscreen","onToggleItemExpanded","getActiveType","setActiveType","isEditing","headerRef","itemHeaderTotalMargin","itemContentPadding","calculatedHeight","smallOriginalH","getItemHeightPx","memoizedGetContentHeight","contentRef","offsetHeight","_getGridItemElement","rect","getBoundingClientRect","getComputedStyle","documentElement","parseInt","getPropertyValue","measuredHeight","preferMeasured","setVisualization","getDataStatisticsName","isFullscreenSupported","Consumer","getAvailableHeight","getAvailableWidth","_ownProps$item","GridItem","VisualizationItem","MESSAGES","MessagesItem","REPORTS","RESOURCES","USERS","ListItem","TextItem","APP","AppItem","getGridItem","getTransformYPx","elStyle","_elStyle$transform$sp","transformY","match","isLeapPage","n","getMultiple","factor","multiple","StaticGrid","onLayoutChange","pageWidthPx","ReactGridLayout","cols","rowHeight","compactType","isDraggable","isResizable","draggableCancel","PrintLayoutItemGrid","newLayout","updateDashboardLayout","pageBreaks","sortedPageBreaks","sortBy","itemClassNames","isFirstPageBreak","getItemComponent","hideExtraPageBreaks","sortedElements","elements","types","elementsWithBoundingRect","from","indexOf","bottomY","getDomGridItemsSortedByYPos","querySelectorAll","pageBreakBottom","lastItemBottom","foundNonPageBreak","thisItemBottom","gridElement","maxHeight","firstBreak","scrollArea","scroll","componentDidMount","componentDidUpdate","getItemComponents","addPageBreaks","addDashboardItem","yPosList","pageNum","getPageBreakPositions","_ownProps$match","_ownProps$match$param","fromEdit","setPrintDashboard","redirectUrl","setRedirectUrl","isLoading","setIsLoading","customizePrintLayoutDashboard","dboard","loadDashboard","Redirect","Layer","translucent","editView","pageOuter","ConfirmActionDialog","onConfirm","onCancel","open","cancelLabel","confirmLabel","Modal","onClose","ModalTitle","ModalContent","ModalActions","ButtonStrip","destructive","deleteDashboardMutation","filteredDimensions","dim","dimensionType","dataDimensionType","useDimensions","doFetch","useSelector","useDispatch","fetchDimensions","unfilteredDimensions","apiFetchDimensions","acSetDimensions","getFilteredDimensions","RadioOptions","filtersSelectable","updateFilterDimensionRestrictability","radioButton","Radio","checked","payload","FilterSettingsDialog","initiallySelectedItems","setSelected","setFiltersSelectable","updateSelectedFilters","sItems","periodItem","Set","orgUnitItem","otherItems","closeDialog","large","descContainer","Transfer","filterable","leftHeader","transferHeader","maxSelections","Infinity","optionsWidth","rightHeader","selectedWidth","end","primary","saveFailedMessage","saveFailedCodeExistsMessage","deleteFailedMessage","EditBar","_dashboard$access2","_dashboard$access3","_dashboard$access4","_dashboard$access5","_dashboard$access6","online","translationDlgIsOpen","setTranslationDlgIsOpen","filterSettingsDlgIsOpen","setFilterSettingsDlgIsOpen","confirmDeleteDlgIsOpen","setConfirmDeleteDlgIsOpen","confirmDiscardDlgIsOpen","setConfirmDiscardDlgIsOpen","saveFailureAlert","useAlert","critical","saveFailureCodeExistsAlert","deleteFailureAlert","onConfirmDelete","onSave","saveDashboard","then","newId","clearSelected","catch","_e$details$response","_e$details$response$e","_e$details$response$e2","details","httpStatusCode","errorReports","at","errorCode","onPrintPreview","isPrintPreviewView","clearPrintPreview","clearPrintDashboard","showPrintPreview","onDiscardConfirmed","onDiscardChanges","onContinueEditing","onFilterSettingsConfirmed","filterSettingsRestrictability","selectedFilters","setFilterSettings","toggleFilterSettingsDialog","toggleTranslationDialog","editBar","controls","_dashboard$access","renderActionButtons","TranslationDialog","onRequestClose","objectToTranslate","modelDefinition","fieldsToTranslate","onTranslationError","onTranslationSaved","insertTheme","isOnline","dashboardName","fetchDashboards","acSetFilterSettings","observerConfig","attributes","childList","subtree","ProgressiveLoadingContainer","shouldLoad","passive","checkShouldLoad","containerRef","forceLoad","removeHandler","bufferPx","bufferFactor","bottom","top","registerHandler","debouncedCheckShouldLoad","debounceMs","getElementsByClassName","handlerOptions","observer","MutationObserver","mutationsList","mutation","attributeName","observe","disconnect","componentWillUnmount","eventProps","pick","PropTypes","node","isRequired","number","string","bool","setGridWidth","ResponsiveReactGridLayout","grid","lg","breakpoints","layouts","containerPadding","onWidthChange","containerWidth","LayoutFixedIcon","fillRule","LayoutFreeflowIcon","useDebounce","delay","debouncedValue","setDebouncedValue","handler","clearTimeout","LaunchLink","launchLink","InsertButton","buttonInsert","ContentMenuItem","onInsert","visType","ItemIcon","getItemIcon","renderedItemIcon","VisualizationIcon","visTypeIcons","menuItem","HeaderMenuItem","grey800","fontWeight","singleItems","categorizedItems","listItemTypes","tAddListItemContent","dashboardItemIndex","dashboardItem","onAddItem","hasMore","onChangeItemsLimit","seeMore","setSeeMore","addItem","newItem","itemUrl","showMoreButton","ItemSearchField","getInput","Input","onFocus","category","addToDashboard","ItemSelector","isOpen","setIsOpen","setFilter","setItems","maxOptions","setMaxOptions","debouncedFilterText","maxItems","encodeURIComponent","count","getDashboardsQQuery","res","updateMaxOptions","inputRef","maxWidth","popover","FlyoutMenu","menu","itemType","endPointName","itemCount","getDefaultItemCount","allItems","displayItems","CategorizedMenuGroup","SinglesMenuGroup","isColumns","LayoutModal","onSaveLayout","setCols","option","active","radio","iconWrapper","activeIcon","activeOption","columnOptions","InputField","inputWidth","min","String","parsedValue","isNaN","setColsWrapper","EditTitleBar","onChangeCode","onChangeInsertPosition","onChangeTitle","onChangeDescription","showLayoutModal","setShowLayoutModal","inputWrapper","inputFieldWrapper","_","validationText","TextAreaField","searchContainer","layoutWrapper","layoutOption","layoutValue","defaultValue_plural","positionWrapper","positionOptions","searchWrapper","selectedDashboard","setEditDashboard","hasUpdateAccess","setHasUpdateAccess","ActionsBar","LayoutPrintPreview","TitleBar","ItemGrid","notice","setNewDashboard","removeDashboardItem","_match$params","sortedItems","spacerCount","PrintItemGrid","userId","useCacheableSection","useCacheableSectionAppRuntime","getCacheableSectionId","ChevronDown","ChevronUp","OfflineSaved","Chip","chipProps","IconStarFilled24","white","debouncedPostStatistics","UiChip","labelWithAdornment","adornment","ClearIcon","ClearButton","onClear","button","setDashboardsFilter","clearDashboardsFilter","filterText","expanded","onKeypressEnter","onSearchClicked","focusedClassName","setFocusedClassName","inputFocused","setInputFocus","collapsed","searchButton","IconSearch24","searchArea","preventDefault","focused","onBlur","searchIconContainer","IconSearch16","input","onKeyUp","keyCode","focus","clearButtonContainer","getFilteredDashboards","filteredDashboards","arraySort","withRouter","selectedId","history","onChipClicked","onSelectDashboard","_getFilteredDashboard","enterNewMode","controlsSmall","Filter","chipsContainer","controlsLarge","buttonPadding","buttonPosition","newButton","IconAdd24","ComponentCover","DragHandle","onHeightChanged","setDragging","startingY","setStartingY","onDrag","currentY","clientY","requestAnimationFrame","onEndDrag","draghandle","onMouseDown","memo","ShowMoreButton","dashboardBarIsExpanded","buttonLabel","onButtonClicked","buttonEl","MouseEvent","bubbles","cancelable","dispatchEvent","showMore","DashboardsBar","updateUserRows","onExpandedChanged","dragging","mouseYPos","setMouseYPos","userRowsChanged","rootElement","newRows","getRowsFromHeight","setProperty","vh","apiPostControlBarRows","scrollToTop","memoizedToggleExpanded","memoizedCancelExpanded","bar","Content","spacer","DashboardLink","isCached","styles","IconDashboardWindow16","StartScreen","mostViewedDashboards","setMostViewedDashboards","getDataStatisticsQuery","apiGetDataStatistics","populateMostViewedDashboards","outer","inner","section","guide","guideItem","LandingPage","onMount","controlbarExpanded","setControlbarExpanded","ROUTE_START_PATH","REGISTER_PASSIVE_VIEW","sGetPassiveViewRegistered","passiveViewRegistered","openFilterModal","onRemove","badge","badgeSmall","FilterBar","removeFilter","removeAllFilters","dialogIsOpen","setDialogIsOpen","onRemoveFilter","filterId","FilterBadge","expandedItems","setExpandedItems","setDisplayItems","layoutSm","setLayoutSm","setForceLoad","recordingState","getItemsWithAdjustedHeight","clickedId","isExpanded","newExpandedItems","expandedItem","expandedHeight","sm","ArrowDown","_JSXStyle","ArrowUp","DropdownButton","component","anchorRef","ArrowIconComponent","transparent","Popper","addItemFilter","removeItemFilter","setFilters","onSelectItems","onDeselectItems","itemIdsToRemove","newList","onReorderItems","itemIds","oldList","reorderedList","getExcludedPeriodTypes","DAILY","WEEKLY","WEEKLYWED","WEEKLYTHU","WEEKLYSAT","WEEKLYSUN","BIWEEKLY","MONTHLY","BIMONTHLY","commonProps","onSelect","onDeselect","onReorder","selectedItems","PeriodDimension","selectedPeriods","excludedPeriodTypes","OrgUnitDimension","displayNameProperty","ouItems","DynamicDimension","dimensionTitle","displayNameProp","renderDialogContent","filterItems","clearActiveModalDimension","setActiveModalDimension","_props$allowedFilters","filterDialogIsOpen","setFilterDialogIsOpen","selectDimension","buttonContainer","IconFilter24","Card","DimensionsPanel","onDimensionClick","selectedIds","FilterDialog","StarDashboardButton","StarIcon","IconStar24","star","filtersLength","setDashboardStarred","isStarred","updateShowDescription","moreOptionsSmallIsOpen","setMoreOptionsSmallIsOpen","moreOptionsIsOpen","setMoreOptionsIsOpen","sharingDialogIsOpen","setSharingDialogIsOpen","confirmCacheDialogIsOpen","setConfirmCacheDialogIsOpen","startRecording","isCritical","closeMoreOptions","onRecordError","onRemoveFromOffline","onAddToOffline","onToggleShowDescription","onToggleStarredDashboard","getStarDashboardMutation","getUnstarDashboardMutation","apiStarDashboard","onToggleSharingDialog","userAccess","getMoreButton","useSmall","strip","editButton","manage","shareButton","FilterSelector","moreButton","moreButtonSmall","SharingDialog","Description","desc","noDesc","LastUpdatedTag","toString","moment","Tag","lastUpdatedTag","time","fromNow","titleBar","requestedId","requestedDashboardName","currentId","clearEditDashboard","registerPassiveView","fetchDashboard","some","setSelectedAsOffline","loadingMessage","setLoadingMessage","loaded","setLoaded","loadFailed","setLoadFailed","requestedIsAvailable","switchingDashboard","alertTimeout","cover","AlertStack","AlertBar","onHidden","permanent","_dashboardToSelect","sGetDashboardsSortedByStarred","routeId","dashboardToSelect","lastStoredDashboardId","getItem","dash","dashboardsIsEmpty","dashboardsLoaded","dashboardsBarExpanded","setDashboardsBarExpanded","cacheSectionId","CacheableSection","loadingMask","ViewDashboard","setControlBarRows","controlBarRows","apiGetControlBarRows","setShowDescription","apiGetShowDescription","resetState","headerbarHeight","CssVariables","Router","Switch","Route","exact","NewDashboard","EditDashboard","PrintDashboard","PrintLayoutDashboard","newState","objectClean","conversations","$merge","$splice","$set","$unshift","idToRemove","stateItems","shapesHaveChanged","newStateItems","stateItem","si","layoutHasChanged","configureStore","middleware","thunk","withExtraArgument","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","createStore","reducer","applyMiddleware","namespace","addResources","arTranslations","ar_IQTranslations","ckbTranslations","csTranslations","daTranslations","enTranslations","esTranslations","frTranslations","idTranslations","kmTranslations","loTranslations","myTranslations","nbTranslations","prsTranslations","psTranslations","ptTranslations","pt_BRTranslations","ruTranslations","svTranslations","tetTranslations","tgTranslations","ukTranslations","urTranslations","uzTranslations","uz_CyrlTranslations","uz_LatnTranslations","viTranslations","zhTranslations","zh_CNTranslations","d2Config","schemas","authorization","REACT_APP_DHIS2_AUTHORIZATION","headers","AppWrapper","ReduxProvider","store","D2Shim","i18nRoot","App","DOMAIN_TYPE_AGGREGATE","DOMAIN_TYPE_TRACKER","domainType","defaultItemCount","dataStatisticsName","getTime","IconTable24","IconFileDocument24","IconVisualizationColumn24","IconWorld24","IconApps24","IconLink24","IconUser24","IconTextBox24","IconMail24","IconEmptyFrame24","itemTypeToGlobalVariable","itemTypeToScriptPath","hasIntegratedPlugin","pluginName","loadPlugin","config","globalName","scripts","scriptsPromise","all","fetchPlugin","loadingIndicator"],"mappings":"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","file":"static/js/app.c7ec8c32.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"DashboardContainer_container__2PwUK\",\"covered\":\"DashboardContainer_covered__10XqJ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"NoContentMessage_container__2Aub9\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"noticeContainer\":\"Notice_noticeContainer__3KDHx\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"PrintActionsBar_container__2EBX_\",\"actions\":\"PrintActionsBar_actions__2_vXA\",\"link\":\"PrintActionsBar_link__2fCaa\",\"buttonSmall\":\"PrintActionsBar_buttonSmall__1wcN_\",\"buttonLarge\":\"PrintActionsBar_buttonLarge__3kwwv\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"PrintInfo_container__1jB2t\",\"title\":\"PrintInfo_title__2MfuJ\",\"printSuggestions\":\"PrintInfo_printSuggestions__38G1G\",\"divider\":\"PrintInfo_divider__3ko2I\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"warning\":\"PrintItemInfo_warning__123PK\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"Item_list__1_nkQ\",\"item\":\"Item_item__3-6QE\",\"itemContent\":\"Item_itemContent__2pyz-\",\"link\":\"Item_link___3c_q\",\"removeButton\":\"Item_removeButton__3kelh\"};","export const getFormattedDate = (value, uiLocale) => {\n  if (typeof global.Intl !== 'undefined' && Intl.DateTimeFormat) {\n    const locale = uiLocale || 'en';\n    return new Intl.DateTimeFormat(locale, {\n      year: 'numeric',\n      month: 'short',\n      day: 'numeric'\n    }).format(new Date(value));\n  }\n\n  return value.substr(0, 19).replace('T', ' ');\n};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"Item_list__14BHv\",\"seeAll\":\"Item_seeAll__2mEvq\",\"sender\":\"Item_sender__3ojzC\",\"snippet\":\"Item_snippet__2Off5\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"titlePage\":\"Item_titlePage__18CNQ\",\"name\":\"Item_name__3nuTV\",\"description\":\"Item_description__1gFQd\",\"filterTitle\":\"Item_filterTitle__2p7TQ\",\"filterList\":\"Item_filterList__qc_G3\",\"filterListItem\":\"Item_filterListItem__sPbBY\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"FatalErrorBoundary_container__3SViR\",\"icon\":\"FatalErrorBoundary_icon__2UbeP\",\"message\":\"FatalErrorBoundary_message__3FzrY\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"span\":\"Tooltip_span__1vH5V\",\"notAllowed\":\"Tooltip_notAllowed__1i3bb\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"itemFooter\":\"ItemFooter_itemFooter__3R_oD\",\"line\":\"ItemFooter_line__3Ko0R\",\"cover\":\"ItemFooter_cover__3C7gL\",\"scrollContainer\":\"ItemFooter_scrollContainer__tuq4P\"};","const isRelative = path => path.startsWith('./');\n\nconst normalizeRelativePath = path => [process.env.PUBLIC_URL, path.replace(/^\\.\\//, '')].join('/');\n\nconst isScriptLoaded = src => document.querySelector('script[src=\"' + src + '\"]') ? true : false;\n\nexport const loadExternalScript = src => {\n  if (isRelative(src)) {\n    src = normalizeRelativePath(src);\n  }\n\n  return new Promise((resolve, reject) => {\n    if (isScriptLoaded(src)) {\n      return resolve();\n    }\n\n    const element = document.createElement('script');\n    element.src = src;\n    element.type = 'text/javascript';\n    element.async = false;\n\n    const cleanup = () => {\n      console.log(`Dynamic Script Removed: ${src}`);\n      document.head.removeChild(element);\n    };\n\n    element.onload = () => {\n      console.log(`Dynamic Script Loaded: ${src}`);\n\n      try {\n        resolve();\n      } catch (e) {\n        cleanup();\n        reject();\n      }\n    };\n\n    element.onerror = () => {\n      console.error(`Dynamic Script Error: ${src}`);\n      cleanup();\n      reject();\n    };\n\n    document.head.appendChild(element);\n  });\n};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"center\":\"LoadingMask_center__KHIYy\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"DataVisualizerPlugin_wrapper__3_M-Z\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"center\":\"VisualizationErrorMessage_center__2qYSm\",\"errorMessage\":\"VisualizationErrorMessage_errorMessage__3nCRf\",\"appLink\":\"VisualizationErrorMessage_appLink__bguER\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"NoVisualizationMessage_container__kl_Q8\",\"icon\":\"NoVisualizationMessage_icon__30jMK\",\"message\":\"NoVisualizationMessage_message__22IPi\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"PrintLayoutDashboard_container__3SXqv\",\"wrapper\":\"PrintLayoutDashboard_wrapper__2hsUa\",\"editView\":\"PrintLayoutDashboard_editView__11x2D\",\"pageOuter\":\"PrintLayoutDashboard_pageOuter__CkoEZ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"content\":\"ConfirmActionDialog_content__2tWgR\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"descContainer\":\"FilterSettingsDialog_descContainer__2wKaB\",\"radioButton\":\"FilterSettingsDialog_radioButton__38B7A\",\"transferHeader\":\"FilterSettingsDialog_transferHeader__105SW\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"editBar\":\"ActionsBar_editBar__P9kaO\",\"controls\":\"ActionsBar_controls__3Y3i1\",\"offline\":\"ActionsBar_offline__3jmca\",\"online\":\"ActionsBar_online__1bkTr\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"grid\":\"ItemGrid_grid__1pIMt\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"EditDashboard_container__2H9lQ\",\"notice\":\"EditDashboard_notice__Ho_Ks\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"menuItem\":\"ContentMenuItem_menuItem__3OEIQ\",\"launchLink\":\"ContentMenuItem_launchLink__13wRn\",\"label\":\"ContentMenuItem_label__1kS6o\",\"buttonInsert\":\"ContentMenuItem_buttonInsert__3rvGo\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"HeaderMenuItem_item__3xBhl\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"showMoreButton\":\"CategorizedMenuGroup_showMoreButton__36Y5A\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"label\":\"ItemSearchField_label__1EJlb\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"menu\":\"ItemSelector_menu__1jnIl\",\"popover\":\"ItemSelector_popover__1JI8S\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"option\":\"LayoutModal_option__1BEWQ\",\"activeOption\":\"LayoutModal_activeOption__2UKST\",\"radio\":\"LayoutModal_radio__1j4Wk\",\"iconWrapper\":\"LayoutModal_iconWrapper__AD1_U\",\"activeIcon\":\"LayoutModal_activeIcon___VBGY\",\"title\":\"LayoutModal_title__ccDFI\",\"description\":\"LayoutModal_description__3KKos\",\"columnOptions\":\"LayoutModal_columnOptions__3mXbQ\",\"gap\":\"LayoutModal_gap__3Mafe\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"TitleBar_container__8R5oB\",\"inputWrapper\":\"TitleBar_inputWrapper__17zVQ\",\"inputFieldWrapper\":\"TitleBar_inputFieldWrapper__1j2H3\",\"searchContainer\":\"TitleBar_searchContainer__172-Z\",\"searchWrapper\":\"TitleBar_searchWrapper__17o_U\",\"layoutWrapper\":\"TitleBar_layoutWrapper__1a22O\",\"positionWrapper\":\"TitleBar_positionWrapper__xzdM6\",\"label\":\"TitleBar_label__17T4v\",\"layoutValue\":\"TitleBar_layoutValue__2x2yg\",\"layoutOption\":\"TitleBar_layoutOption__1nAfD\",\"positionOptions\":\"TitleBar_positionOptions__312vW\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"NewDashboard_container__3vGiA\",\"notice\":\"NewDashboard_notice__2rtDL\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"PrintDashboard_container__1eUFy\",\"wrapper\":\"PrintDashboard_wrapper__3vfN1\",\"pageOuter\":\"PrintDashboard_pageOuter__G7Kho\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"link\":\"Chip_link__3YSbf\",\"labelWithAdornment\":\"Chip_labelWithAdornment__2VosD\",\"adornment\":\"Chip_adornment__vPexX\",\"selected\":\"Chip_selected__3y33n\",\"progressIndicator\":\"Chip_progressIndicator__2_vC-\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"ClearButton_button__2cIgq\",\"icon\":\"ClearButton_icon__3sFu7\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"searchArea\":\"Filter_searchArea__o_Gzl\",\"input\":\"Filter_input__3J3-a\",\"focused\":\"Filter_focused__1S2oM\",\"searchButton\":\"Filter_searchButton__2xaHk\",\"searchIconContainer\":\"Filter_searchIconContainer__10XBe\",\"clearButtonContainer\":\"Filter_clearButtonContainer__3Rp3r\",\"collapsed\":\"Filter_collapsed__hljwu\",\"expanded\":\"Filter_expanded__1Ymqq\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Content_container__3eFfj\",\"controlsSmall\":\"Content_controlsSmall__3Lmc1\",\"controlsLarge\":\"Content_controlsLarge__3K3Ec\",\"buttonPadding\":\"Content_buttonPadding__1lk8U\",\"buttonPosition\":\"Content_buttonPosition__3SPz_\",\"chipsContainer\":\"Content_chipsContainer__XGDUo\",\"newLink\":\"Content_newLink__12yMm\",\"collapsed\":\"Content_collapsed__2bU0t\",\"expanded\":\"Content_expanded__3IhYG\",\"controls\":\"Content_controls__auIOY\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"draghandle\":\"DragHandle_draghandle__2sxxu\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"ShowMoreButton_container__2fipt\",\"showMore\":\"ShowMoreButton_showMore__3zIMh\",\"disabled\":\"ShowMoreButton_disabled__246ZU\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"bar\":\"DashboardsBar_bar__2Q3_U\",\"container\":\"DashboardsBar_container__1PU_T\",\"content\":\"DashboardsBar_content__1Qr1c\",\"expanded\":\"DashboardsBar_expanded__ev-Z4\",\"spacer\":\"DashboardsBar_spacer__1qSs_\",\"collapsed\":\"DashboardsBar_collapsed__wGwOg\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"dashboard\":\"DashboardLink_dashboard__ybaxL\",\"icon\":\"DashboardLink_icon__AaC63\",\"adornment\":\"DashboardLink_adornment__AMPgD\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"outer\":\"StartScreen_outer__DZnpR\",\"inner\":\"StartScreen_inner__UlvA9\",\"errorContainer\":\"StartScreen_errorContainer__V3iXq\",\"errorIcon\":\"StartScreen_errorIcon__GG8jH\",\"errorTitle\":\"StartScreen_errorTitle__2kzOf\",\"errorDescription\":\"StartScreen_errorDescription__28YVn\",\"title\":\"StartScreen_title__3Zjaz\",\"section\":\"StartScreen_section__Tvrzu\",\"guide\":\"StartScreen_guide__6nuAp\",\"guideItem\":\"StartScreen_guideItem__2XIse\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"FilterBadge_container__3tGhK\",\"badge\":\"FilterBadge_badge__1_Inq\",\"badgeSmall\":\"FilterBadge_badgeSmall__eEMLp\",\"removeButton\":\"FilterBadge_removeButton__3i9CK\",\"span\":\"FilterBadge_span__340Kx\",\"notAllowed\":\"FilterBadge_notAllowed__2NEIc\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"bar\":\"FilterBar_bar__1XjvP\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"grid\":\"ItemGrid_grid__3RId_\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"ViewDashboard_container__2Sa9Z\",\"cover\":\"ViewDashboard_cover__3E6k_\",\"link\":\"ViewDashboard_link__33JM4\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"arrow\":\"DropdownButton_arrow__3SBa4\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"buttonContainer\":\"FilterSelector_buttonContainer__3yctX\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"star\":\"StarDashboardButton_star__3lBqk\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"actions\":\"ActionsBar_actions__2S7Bp\",\"strip\":\"ActionsBar_strip__1BGo5\",\"moreButtonSmall\":\"ActionsBar_moreButtonSmall__j9bcw\",\"editButton\":\"ActionsBar_editButton__1vO5Q\",\"shareButton\":\"ActionsBar_shareButton__2oyZG\",\"moreButton\":\"ActionsBar_moreButton__24qQ-\",\"link\":\"ActionsBar_link__ztlRD\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"desc\":\"Description_desc__mrRlu\",\"noDesc\":\"Description_noDesc__2FBxT\",\"descContainer\":\"Description_descContainer__3T4PO\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"lastUpdatedTag\":\"LastUpdatedTag_lastUpdatedTag__1Gm5J\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"TitleBar_container__DnAGn\",\"titleBar\":\"TitleBar_titleBar__3Lh6b\",\"title\":\"TitleBar_title__s0IFk\"};","export const SET_ACTIVE_MODAL_DIMENSION = 'SET_ACTIVE_MODAL_DIMENSION';\nexport const CLEAR_ACTIVE_MODAL_DIMENSION = 'CLEAR_ACTIVE_MODAL_DIMENSION';\nexport const DEFAULT_STATE_ACTIVE_MODAL_DIMENSION = {};\nexport default ((state = DEFAULT_STATE_ACTIVE_MODAL_DIMENSION, action) => {\n  switch (action.type) {\n    case SET_ACTIVE_MODAL_DIMENSION:\n      {\n        return action.value;\n      }\n\n    case CLEAR_ACTIVE_MODAL_DIMENSION:\n      {\n        return DEFAULT_STATE_ACTIVE_MODAL_DIMENSION;\n      }\n\n    default:\n      return state;\n  }\n});\nexport const sGetActiveModalDimension = state => state.activeModalDimension;","import { SET_ACTIVE_MODAL_DIMENSION, CLEAR_ACTIVE_MODAL_DIMENSION } from '../reducers/activeModalDimension';\nexport const acSetActiveModalDimension = value => ({\n  type: SET_ACTIVE_MODAL_DIMENSION,\n  value\n});\nexport const acClearActiveModalDimension = () => ({\n  type: CLEAR_ACTIVE_MODAL_DIMENSION\n});","import isObject from 'lodash/isObject';\nexport function orArray(param) {\n  return Array.isArray(param) ? param : [];\n}\nexport function orObject(param) {\n  return isObject(param) ? param : {};\n} // object\n\nexport function arrayToIdMap(array) {\n  return array.reduce((obj, item) => {\n    obj[item.id] = item;\n    return obj;\n  }, {});\n} // reducer validator\n\nexport const validateReducer = (value, defaultValue) => value === undefined || value === null ? defaultValue : value;","/** @module reducers/controlBar */\nimport { combineReducers } from 'redux';\nimport { validateReducer } from '../modules/util';\nexport const SET_CONTROLBAR_USER_ROWS = 'SET_CONTROLBAR_USER_ROWS';\nexport const DEFAULT_STATE_CONTROLBAR_ROWS = 1;\n\nconst userRows = (state = DEFAULT_STATE_CONTROLBAR_ROWS, action) => {\n  switch (action.type) {\n    case SET_CONTROLBAR_USER_ROWS:\n      return validateReducer(action.value, DEFAULT_STATE_CONTROLBAR_ROWS);\n\n    default:\n      return state;\n  }\n};\n\nexport default combineReducers({\n  userRows\n});\n/**\n * Selectors that point to specific props in the state object\n * @function\n * @param {Object} state\n * @returns {Object}\n */\n\nconst sGetControlBarRoot = state => state.controlBar; // Selector dependency level 2\n\n\nexport const sGetControlBarUserRows = state => sGetControlBarRoot(state).userRows;","import { getInstance } from 'd2';\nexport const NAMESPACE = 'dashboard';\nexport const hasDashboardNamespace = async d2 => await d2.currentUser.dataStore.has(NAMESPACE);\nexport const getNamespace = async d2 => {\n  const hasNamespace = await hasDashboardNamespace(d2);\n  return hasNamespace ? await d2.currentUser.dataStore.get(NAMESPACE) : await d2.currentUser.dataStore.create(NAMESPACE);\n};\nexport const apiPostUserDataStoreValue = async (key, value) => {\n  const d2 = await getInstance();\n  const ns = await getNamespace(d2);\n  return ns.set(key, value);\n};\nexport const apiGetUserDataStoreValue = async (key, defaultValue) => {\n  var _ns$keys;\n\n  const d2 = await getInstance();\n  const ns = await getNamespace(d2);\n  const hasKey = ns === null || ns === void 0 ? void 0 : (_ns$keys = ns.keys) === null || _ns$keys === void 0 ? void 0 : _ns$keys.find(k => k === key);\n\n  if (hasKey) {\n    return await ns.get(key);\n  } else {\n    await apiPostUserDataStoreValue(key, defaultValue, ns);\n    console.log('(These errors to /userDataStore can be ignored)');\n    return defaultValue;\n  }\n};","import { DEFAULT_STATE_CONTROLBAR_ROWS } from '../reducers/controlBar';\nimport { apiGetUserDataStoreValue, apiPostUserDataStoreValue } from './userDataStore';\nconst KEY_CONTROLBAR_ROWS = 'controlBarRows';\nexport const apiGetControlBarRows = async () => await apiGetUserDataStoreValue(KEY_CONTROLBAR_ROWS, DEFAULT_STATE_CONTROLBAR_ROWS);\nexport const apiPostControlBarRows = async value => await apiPostUserDataStoreValue(KEY_CONTROLBAR_ROWS, value);","import { apiGetControlBarRows } from '../api/controlBar';\nimport { SET_CONTROLBAR_USER_ROWS } from '../reducers/controlBar'; // actions\n\nexport const acSetControlBarUserRows = rows => ({\n  type: SET_CONTROLBAR_USER_ROWS,\n  value: rows\n}); // thunks\n\nexport const tSetControlBarRows = () => async dispatch => {\n  const onSuccess = rows => {\n    dispatch(acSetControlBarUserRows(rows));\n  };\n\n  const onError = error => {\n    console.log('Error (apiGetControlBarRows): ', error);\n    return error;\n  };\n\n  try {\n    const controlBarRows = await apiGetControlBarRows();\n    return onSuccess(controlBarRows);\n  } catch (err) {\n    return onError(err);\n  }\n};","export const dashboardsQuery = {\n  resource: 'dashboards',\n  params: {\n    fields: ['id', 'displayName', 'favorite~rename(starred)'],\n    paging: false\n  }\n};\nexport const apiFetchDashboards = async dataEngine => {\n  try {\n    const dashboardsData = await dataEngine.query({\n      dashboards: dashboardsQuery\n    });\n    return dashboardsData.dashboards.dashboards;\n  } catch (error) {\n    console.log('Error: ', error);\n  }\n};","/** @module reducers/dashboards */\nimport arraySort from 'd2-utilizr/lib/arraySort';\nimport { orObject } from '../modules/util';\nexport const SET_DASHBOARDS = 'SET_DASHBOARDS';\nexport const ADD_DASHBOARDS = 'ADD_DASHBOARDS';\nexport const SET_DASHBOARD_STARRED = 'SET_DASHBOARD_STARRED';\nexport const EMPTY_DASHBOARDS = {};\nexport const DEFAULT_STATE_DASHBOARDS = null;\n/**\n * Reducer that computes and returns the new state based on the given action\n * @function\n * @param {Object} state The current state\n * @param {Object} action The action to be evaluated\n * @returns {Object}\n */\n\nexport default ((state = DEFAULT_STATE_DASHBOARDS, action) => {\n  switch (action.type) {\n    case SET_DASHBOARDS:\n      {\n        return action.value;\n      }\n\n    case ADD_DASHBOARDS:\n      {\n        return { ...state,\n          ...action.value\n        };\n      }\n\n    case SET_DASHBOARD_STARRED:\n      {\n        return { ...state,\n          [action.id]: { ...state[action.id],\n            starred: action.value\n          }\n        };\n      }\n\n    default:\n      return state;\n  }\n}); // root selector\n\nexport const sGetDashboardsRoot = state => state.dashboards; // selector level 1\n\n/**\n * Selector which returns a dashboard by id from the state object\n * If no matching dashboard is found it returns undefined\n * If dashboards is null, then the dashboards api request\n * has not yet completed. If dashboards is an empty object\n * then the dashboards api request is complete, but no dashboards\n * were returned\n *\n * @function\n * @param {Object} state The current state\n * @param {Number} id The id of the dashboard\n * @returns {Object | undefined}\n */\n\nexport const sGetDashboardById = (state, id) => (sGetDashboardsRoot(state) || EMPTY_DASHBOARDS)[id];\nexport const sGetDashboardStarred = (state, id) => sGetDashboardById(state, id).starred;\nexport const sDashboardsIsFetching = state => {\n  return sGetDashboardsRoot(state) === null;\n};\n/**\n * Selector which returns all dashboards\n *\n * @function\n * @param {Object} state The current state\n * @returns {Object | undefined}\n */\n\nexport const sGetAllDashboards = state => orObject(sGetDashboardsRoot(state)); // selector level 2\n\nconst sGetStarredDashboards = state => Object.values(sGetAllDashboards(state)).filter(dashboard => dashboard.starred === true);\n\nconst sGetUnstarredDashboards = state => Object.values(sGetAllDashboards(state)).filter(dashboard => dashboard.starred === false); // selector level 3\n\n\nexport const sGetDashboardsSortedByStarred = state => [...arraySort(sGetStarredDashboards(state), 'ASC', 'displayName'), ...arraySort(sGetUnstarredDashboards(state), 'ASC', 'displayName')];","import { apiFetchDashboards } from '../api/fetchAllDashboards';\nimport { arrayToIdMap } from '../modules/util';\nimport { SET_DASHBOARDS, ADD_DASHBOARDS, SET_DASHBOARD_STARRED } from '../reducers/dashboards'; // actions\n\nexport const acSetDashboards = dashboards => ({\n  type: SET_DASHBOARDS,\n  value: arrayToIdMap(dashboards)\n});\nexport const acAppendDashboards = dashboards => ({\n  type: ADD_DASHBOARDS,\n  value: arrayToIdMap(dashboards)\n});\nexport const acSetDashboardStarred = (id, isStarred) => ({\n  type: SET_DASHBOARD_STARRED,\n  id,\n  value: isStarred\n}); // thunks\n\nexport const tFetchDashboards = () => async (dispatch, getState, dataEngine) => {\n  const dashboards = await apiFetchDashboards(dataEngine);\n  return dispatch(acSetDashboards(dashboards));\n};","import { validateReducer } from '../modules/util';\nexport const SET_DASHBOARDS_FILTER = 'SET_DASHBOARDS_FILTER';\nexport const CLEAR_DASHBOARDS_FILTER = 'CLEAR_DASHBOARDS_FILTER';\nexport const DEFAULT_STATE_DASHBOARDS_FILTER = '';\nexport default ((state = DEFAULT_STATE_DASHBOARDS_FILTER, action) => {\n  switch (action.type) {\n    case SET_DASHBOARDS_FILTER:\n      {\n        return validateReducer(action.value, DEFAULT_STATE_DASHBOARDS_FILTER);\n      }\n\n    case CLEAR_DASHBOARDS_FILTER:\n      {\n        return DEFAULT_STATE_DASHBOARDS_FILTER;\n      }\n\n    default:\n      return state;\n  }\n}); // selectors\n\nexport const sGetDashboardsFilter = state => state.dashboardsFilter;","import { SET_DASHBOARDS_FILTER, CLEAR_DASHBOARDS_FILTER } from '../reducers/dashboardsFilter'; // actions\n\nexport const acSetDashboardsFilter = value => ({\n  type: SET_DASHBOARDS_FILTER,\n  value\n});\nexport const acClearDashboardsFilter = () => ({\n  type: CLEAR_DASHBOARDS_FILTER\n});","export const EDIT = 'edit';\nexport const NEW = 'new';\nexport const VIEW = 'view';\nexport const PRINT = 'print';\nexport const PRINT_LAYOUT = 'print-layout';\nexport const isEditMode = mode => [EDIT, NEW].includes(mode);\nexport const isPrintMode = mode => [PRINT, PRINT_LAYOUT].includes(mode);\nexport const isViewMode = mode => mode === VIEW;","import { DASHBOARD_WRAPPER_LR_MARGIN_PX } from './gridUtil';\nconst SMALL_SCREEN_BREAKPOINT = 480;\nexport const isSmallScreen = width => width <= SMALL_SCREEN_BREAKPOINT;\nexport const getBreakpoint = () => SMALL_SCREEN_BREAKPOINT - DASHBOARD_WRAPPER_LR_MARGIN_PX;","// Dimensions for the react-grid-layout\nimport { generateUid } from 'd2/uid';\nimport sortBy from 'lodash/sortBy';\nimport { acSetHideGrid, acUpdateDashboardItemShapes } from '../actions/editDashboard';\nimport { isVisualizationType, itemTypeMap, PAGEBREAK, PRINT_TITLE_PAGE } from './itemTypes';\nimport { isSmallScreen } from './smallScreen';\nexport const GRID_COMPACT_TYPE = 'vertical'; // vertical | horizonal | null\n\nexport const GRID_ROW_HEIGHT_PX = 10;\nexport const MARGIN_PX = [10, 10];\nconst SM_SCREEN_MIN_ITEM_GRID_HEIGHT = 13; // minimum of ~320px\n\nexport const SM_SCREEN_GRID_COLUMNS = 1;\nexport const MARGIN_SM_PX = [0, 16];\nexport const GRID_PADDING_PX = [0, 0]; // sum of left+right padding of dashboard-wrapper (App.css)\n\nexport const DASHBOARD_WRAPPER_LR_MARGIN_PX = 32; // make an assumption about the original item w/h ratio\n// assumes grid width of ~1200px at time dashboard was created\n\nconst GRID_COL_WIDTH_PX = 10;\nexport const GRID_COLUMNS = 60; // Dimensions for getShape\n\nexport const NEW_ITEM_SHAPE = {\n  x: 0,\n  y: 0,\n  w: 20,\n  h: 29\n};\nconst NUMBER_OF_ITEM_COLS = 2;\nconst MAX_ITEM_GRID_WIDTH = GRID_COLUMNS - 1;\nexport const MAX_ITEM_GRID_HEIGHT = 34;\nexport const MAX_ITEM_GRID_HEIGHT_OIPP = 35;\nexport const MAX_ITEM_GRID_WIDTH_OIPP = 56;\nconst MIN_ITEM_GRID_HEIGHT = 4; // isNonNegativeInteger\n\nconst isNonNegativeInteger = x => Number.isInteger(x) && x >= 0; // Does the item have all the shape properties?\n\n\nexport const hasShape = item => isNonNegativeInteger(item.x) && isNonNegativeInteger(item.y) && isNonNegativeInteger(item.w) && isNonNegativeInteger(item.h); // returns a rectangular grid block dimensioned with x, y, w, h in grid units.\n// based on a grid with 3 items across\n\nconst getShape = i => {\n  const col = i % NUMBER_OF_ITEM_COLS;\n  const row = Math.floor(i / NUMBER_OF_ITEM_COLS);\n  const itemWidth = Math.floor(MAX_ITEM_GRID_WIDTH / NUMBER_OF_ITEM_COLS);\n  const itemHeight = GRID_ROW_HEIGHT_PX * 2;\n  return {\n    x: col * itemWidth,\n    y: row * itemHeight,\n    w: itemWidth,\n    h: itemHeight\n  };\n};\n/**\n * Returns an array of items containing the x, y, w, h dimensions\n * and the item's originalheight in pixels\n * and dimensions to create the small layout (x, y, w, h)\n * @function\n * @param {Array} items\n * @returns {Array}\n */\n\n\nexport const withShape = (items = []) => {\n  const itemsWithShape = items.map((item, i) => hasShape(item) ? item : Object.assign({}, item, getShape(i)));\n  return itemsWithShape.map(item => Object.assign({}, item, {\n    originalH: item.h\n  }));\n};\nexport const getGridWidth = windowWidthPx => windowWidthPx - DASHBOARD_WRAPPER_LR_MARGIN_PX;\n\nconst getGridUnitsForSmFromPx = hPx => {\n  const gridUnitHeightPx = GRID_ROW_HEIGHT_PX + MARGIN_SM_PX[1];\n  return Math.round((hPx + MARGIN_SM_PX[1]) / gridUnitHeightPx);\n};\n\nexport const getProportionalHeight = (item, windowWidthPx) => {\n  // get w/h ratio of the original item\n  const wPx = getItemWHPx(item.w, GRID_COL_WIDTH_PX, MARGIN_PX[0]);\n  const hPx = getItemWHPx(item.h, GRID_ROW_HEIGHT_PX, MARGIN_PX[1]);\n  const ratioWH = wPx / hPx;\n\n  if (!isVisualizationType(item)) {\n    return getGridUnitsForSmFromPx(hPx);\n  }\n\n  const gridWidthPx = getGridWidth(windowWidthPx); // get new height in px based on the ratio\n\n  const newColWidthPx = (gridWidthPx - MARGIN_SM_PX[0] * (SM_SCREEN_GRID_COLUMNS - 1) - GRID_PADDING_PX[0] * 2) / SM_SCREEN_GRID_COLUMNS;\n  const newWPx = newColWidthPx * SM_SCREEN_GRID_COLUMNS;\n  const newHPx = Math.round(newWPx / ratioWH); //convert height in px back to grid units\n\n  const h = getGridUnitsForSmFromPx(newHPx); // item must be at least the set minimum\n\n  return h < SM_SCREEN_MIN_ITEM_GRID_HEIGHT ? SM_SCREEN_MIN_ITEM_GRID_HEIGHT : h;\n};\nexport const getSmallLayout = (items, windowWidthPx) => sortBy(items, ['y', 'x']).map((item, i) => Object.assign({}, item, {\n  x: 0,\n  y: i,\n  w: SM_SCREEN_GRID_COLUMNS,\n  h: getProportionalHeight(item, windowWidthPx)\n}));\nexport const getGridItemProperties = itemId => {\n  return {\n    i: itemId,\n    minH: MIN_ITEM_GRID_HEIGHT\n  };\n};\nexport const getPageBreakItemShape = (yPos, isStatic = true) => {\n  return {\n    x: 0,\n    y: yPos,\n    w: MAX_ITEM_GRID_WIDTH,\n    h: 5,\n    static: !!isStatic,\n    minH: 1\n  };\n};\nexport const getPrintTitlePageItemShape = isOneItemPerPage => {\n  return {\n    x: 0,\n    y: 0,\n    w: isOneItemPerPage ? MAX_ITEM_GRID_WIDTH_OIPP : MAX_ITEM_GRID_WIDTH,\n    h: MAX_ITEM_GRID_HEIGHT,\n    static: true,\n    minH: 1\n  };\n};\n/**\n * Calculates the grid item's height in pixels based\n * on the height in grid units. This calculation\n * is copied directly from react-grid-layout\n * calculateUtils.js (calcGridItemWHPx)\n *\n * Each row's px height is the sum of the GRID_ROW_HEIGHT_PX + MARGIN-Y\n * So the calculation is:\n * GRID_ROW_HEIGHT_PX * Number of rows\n * +\n * yMargin * Number of rows-1\n *\n * @param {Object} item item containing shape (x, y, w, h)\n */\n\nexport const getItemHeightPx = (item, windowWidthPx) => {\n  if (isSmallScreen(windowWidthPx)) {\n    const h = item.smallOriginalH ? item.smallOriginalH : getProportionalHeight(item, windowWidthPx);\n    return getItemWHPx(h, GRID_ROW_HEIGHT_PX, MARGIN_SM_PX[1]);\n  }\n\n  return getItemWHPx(item.originalH, GRID_ROW_HEIGHT_PX, MARGIN_PX[1]);\n};\n\nconst getItemWHPx = (gridUnits, colOrRowSize, marginPx) => Math.round(colOrRowSize * gridUnits + Math.max(0, gridUnits - 1) * marginPx); // Auto layout\n\n\nconst getNumberOfColUnits = (columns, maxColUnits = GRID_COLUMNS) => {\n  if (columns.length < 1 || columns.length > maxColUnits) {\n    return null;\n  }\n\n  return Math.floor(maxColUnits / columns.length);\n};\n\nconst sortItems = items => items.slice().sort((a, b) => a.y - b.y || a.x - b.x || a.h - b.h || a.w - b.w);\n\nexport const getAutoItemShapes = (dashboardItems, columns, maxColUnits) => {\n  const numberOfColUnits = getNumberOfColUnits(columns, maxColUnits);\n\n  if (!numberOfColUnits || !dashboardItems.length) {\n    return null;\n  }\n\n  const items = sortItems(dashboardItems);\n  const itemsWithNewShape = [];\n  const itemHeight = NEW_ITEM_SHAPE.h;\n\n  for (let i = 0, colIdx = 0, rowIdx = 0, item; i < items.length; i++) {\n    item = items[i];\n    itemsWithNewShape.push({ ...item,\n      w: numberOfColUnits,\n      h: itemHeight,\n      x: numberOfColUnits * colIdx,\n      y: itemHeight * rowIdx\n    });\n    colIdx = colIdx + 1;\n\n    if (colIdx === columns.length) {\n      colIdx = 0;\n      rowIdx = rowIdx + 1;\n    }\n  }\n\n  return itemsWithNewShape;\n};\nexport const addToItemsStart = (dashboardItems, columns, newDashboardItem) => {\n  if (!columns.length) {\n    // when no layout\n    return [{ ...NEW_ITEM_SHAPE,\n      ...newDashboardItem\n    }, ...dashboardItems];\n  } else {\n    return getAutoItemShapes([...dashboardItems, { ...newDashboardItem,\n      x: 0,\n      y: 0,\n      w: 0,\n      h: 0\n    }], columns);\n  }\n};\nexport const addToItemsEnd = (dashboardItems, columns, newDashboardItem) => {\n  const items = [...dashboardItems, { ...NEW_ITEM_SHAPE,\n    ...newDashboardItem,\n    y: dashboardItems.reduce((mx, item) => Math.max(mx, item.y + item.h), 0)\n  }];\n  return columns.length ? getAutoItemShapes(items, columns) : items;\n};\nexport const updateItems = (items, dispatch, options = {}) => {\n  const {\n    reload\n  } = options;\n\n  if (reload) {\n    dispatch(acSetHideGrid(true));\n    dispatch(acUpdateDashboardItemShapes(items));\n    setTimeout(() => dispatch(acSetHideGrid(false)), 0);\n  } else {\n    dispatch(acUpdateDashboardItemShapes(items));\n  }\n};\nexport const hasLayout = layout => {\n  var _layout$columns;\n\n  return Boolean(layout === null || layout === void 0 ? void 0 : (_layout$columns = layout.columns) === null || _layout$columns === void 0 ? void 0 : _layout$columns.length);\n};\nexport const getDashboardItem = item => {\n  var _itemTypeMap$type;\n\n  const type = item.type;\n  const itemPropName = (_itemTypeMap$type = itemTypeMap[type]) === null || _itemTypeMap$type === void 0 ? void 0 : _itemTypeMap$type.propName;\n  const id = generateUid();\n  const gridItemProperties = getGridItemProperties(id);\n  let shape;\n\n  if (type === PAGEBREAK) {\n    const yPos = item.yPos || 0;\n    shape = getPageBreakItemShape(yPos, item.isStatic);\n  } else if (type === PRINT_TITLE_PAGE) {\n    shape = getPrintTitlePageItemShape();\n  } else {\n    shape = NEW_ITEM_SHAPE;\n  }\n\n  return {\n    id,\n    type,\n    position: item.position || null,\n    [itemPropName]: item.content,\n    ...NEW_ITEM_SHAPE,\n    ...gridItemProperties,\n    ...shape\n  };\n};","import { getGridItemProperties } from './gridUtil';\nimport { TEXT, SPACER } from './itemTypes';\nexport const spacerContent = 'SPACER_ITEM_FOR_DASHBOARD_LAYOUT_CONVENIENCE';\nexport const emptyTextItemContent = 'TEXT_ITEM_WITH_NO_CONTENT';\n\nconst isBackendSpacerType = item => item.type === TEXT && item.text === spacerContent;\n\nconst isUiSpacerType = item => item.type === SPACER;\n\nconst isTextType = item => item.type === TEXT && item.text !== spacerContent;\n\nexport const convertUiItemsToBackend = items => items.map(item => {\n  let text = null;\n\n  if (isUiSpacerType(item)) {\n    text = spacerContent;\n  } else if (isTextType(item)) {\n    text = item.text || emptyTextItemContent;\n  }\n\n  return { ...item,\n    ...(text ? {\n      text\n    } : {})\n  };\n});\nexport const convertBackendItemsToUi = items => items.map(item => {\n  const type = isBackendSpacerType(item) ? SPACER : item.type;\n  const gridProperties = getGridItemProperties(item.id);\n  const text = isTextType(item) ? item.text === emptyTextItemContent ? '' : item.text : null;\n  return { ...item,\n    ...(text !== null ? {\n      text\n    } : {}),\n    type,\n    ...gridProperties\n  };\n});","import arrayClean from 'd2-utilizr/lib/arrayClean'; // Id, name\n\nexport const getIdNameFields = ({\n  rename\n} = {}) => ['id', `${rename ? 'displayName~rename(name)' : 'name,displayName'}`]; // Item\n\nexport const getItemFields = () => ['dimensionItem~rename(id)', 'displayName~rename(name)', 'dimensionItemType']; // Dimension\n\nexport const getDimensionFields = ({\n  withItems\n}) => arrayClean(['dimension', 'legendSet[id]', 'filter', 'programStage', withItems ? `items[${getItemFields().join(',')}]` : ``]); // Axis\n\nexport const getAxesFields = ({\n  withItems\n}) => [`columns[${getDimensionFields({\n  withItems\n}).join(',')}]`, `rows[${getDimensionFields({\n  withItems\n}).join(',')}]`, `filters[${getDimensionFields({\n  withItems\n}).join(',')}]`]; // Favorite\n\nexport const getFavoriteFields = ({\n  withDimensions,\n  withOptions\n}) => {\n  return arrayClean([`${getIdNameFields({\n    rename: true\n  }).join(',')}`, 'type', 'displayDescription~rename(description)', withDimensions ? `${getAxesFields({\n    withItems: true\n  }).join(',')}` : ``, withOptions ? ['*', '!attributeDimensions', '!attributeValues', '!category', '!categoryDimensions', '!categoryOptionGroupSetDimensions', '!columnDimensions', '!dataDimensionItems', '!dataElementDimensions', '!dataElementGroupSetDimensions', '!filterDimensions', '!itemOrganisationUnitGroups', '!lastUpdatedBy', '!organisationUnitGroupSetDimensions', '!organisationUnitLevels', '!organisationUnits', '!programIndicatorDimensions', '!relativePeriods', '!reportParams', '!rowDimensions', '!translations', '!userOrganisationUnit', '!userOrganisationUnitChildren', '!userOrganisationUnitGrandChildren'].join(',') : '']);\n};\nexport const getFavoritesFields = () => [`visualization[${getFavoriteFields({\n  withDimensions: false\n}).join(',')}]`, `map[${getFavoriteFields({\n  withDimensions: false\n}).join(',')}]`, `eventReport[${getFavoriteFields({\n  withDimensions: false\n}).join(',')}]`, `eventChart[${getFavoriteFields({\n  withDimensions: false\n}).join(',')}]`]; // List item\n\nexport const getListItemFields = () => [`reports[${['type', ...getIdNameFields({\n  rename: true\n})].join(',')}]`, `resources[${getIdNameFields({\n  rename: true\n}).join(',')}]`, `users[${getIdNameFields({\n  rename: true\n}).join(',')}]`]; // Map\n\nexport const getMapFields = () => {\n  const favoriteFields = getFavoriteFields({\n    withDimensions: true,\n    withOptions: true\n  });\n  const teFields = 'program[id,displayName~rename(name)],programStage[id,displayName~rename(name)],trackedEntityType[id,displayName~rename(name)]';\n  return [`${getIdNameFields({\n    rename: true\n  }).join(',')}`, 'user,longitude,latitude,zoom,basemap', `mapViews[${favoriteFields.concat(teFields)}]`];\n};","import arrayClean from 'd2-utilizr/lib/arrayClean';\nimport { isViewMode } from '../modules/dashboardModes';\nimport { getCustomDashboards } from '../modules/getCustomDashboards';\nimport { withShape } from '../modules/gridUtil';\nimport { getIdNameFields, getListItemFields, getFavoritesFields } from './metadata';\n\nconst getDashboardItemsFields = () => arrayClean(['id', 'type', 'shape', 'x', 'y', 'width~rename(w)', 'height~rename(h)', 'messages', 'text', 'appKey', `${getListItemFields().join(',')}`, `${getFavoritesFields().join(',')}`]);\n\nconst baseDashboardFields = arrayClean(['id', 'displayName', 'displayDescription', 'favorite~rename(starred)', 'access', 'restrictFilters', 'allowedFilters', 'layout', 'itemConfig', `dashboardItems[${getDashboardItemsFields().join(',')}]`]);\nexport const viewDashboardQuery = {\n  resource: 'dashboards',\n  id: ({\n    id\n  }) => id,\n  params: {\n    fields: baseDashboardFields\n  }\n};\nexport const editDashboardQuery = {\n  resource: 'dashboards',\n  id: ({\n    id\n  }) => id,\n  params: {\n    fields: arrayClean([...baseDashboardFields, `user[${getIdNameFields({\n      rename: true\n    }).join(',')}]`, 'name', 'code', 'description', 'created', 'favorite', 'favorites', 'lastUpdated', 'href' // needed for d2-ui-translations-dialog\n    ])\n  }\n}; // Get more info about selected dashboard\n\nexport const apiFetchDashboard = async (dataEngine, id, {\n  mode = null,\n  forSave = false\n} = {}) => {\n  const query = isViewMode(mode) ? viewDashboardQuery : editDashboardQuery;\n\n  try {\n    const dashboardData = await dataEngine.query({\n      dashboard: query\n    }, {\n      variables: {\n        id\n      }\n    });\n    const dashboard = dashboardData.dashboard;\n\n    if (!forSave) {\n      return getCustomDashboards(Object.assign({}, dashboard, {\n        dashboardItems: withShape(dashboard.dashboardItems)\n      }))[0];\n    }\n\n    return dashboard;\n  } catch (error) {\n    console.log('Error: ', error);\n  }\n};","import arrayFrom from 'd2-utilizr/lib/arrayFrom';\nimport { convertBackendItemsToUi } from './uiBackendItemConverter';\n/**\n * Returns the array of dashboards, customized for ui\n * @function\n * @param {Array} data The original dashboard list\n * @returns {Array}\n */\n\nexport const getCustomDashboards = data => arrayFrom(data).map(d => {\n  var _d$allowedFilters;\n\n  return {\n    id: d.id,\n    name: d.name,\n    code: d.code,\n    displayName: d.displayName,\n    description: d.description,\n    displayDescription: d.displayDescription,\n    starred: d.starred,\n    created: d.created,\n    lastUpdated: d.lastUpdated,\n    access: d.access,\n    dashboardItems: convertBackendItemsToUi(d.dashboardItems),\n    restrictFilters: d.restrictFilters,\n    allowedFilters: (_d$allowedFilters = d.allowedFilters) !== null && _d$allowedFilters !== void 0 ? _d$allowedFilters : [],\n    href: d.href,\n    layout: d.layout,\n    itemConfig: d.itemConfig\n  };\n});","import { EDIT } from '../modules/dashboardModes';\nimport { apiFetchDashboard } from './fetchDashboard';\nexport const createDashboardMutation = {\n  resource: 'dashboards',\n  type: 'create',\n  data: ({\n    data\n  }) => data\n};\nexport const updateDashboardMutation = {\n  resource: 'dashboards',\n  type: 'update',\n  id: ({\n    id\n  }) => id,\n  data: ({\n    data\n  }) => data,\n  params: {\n    skipTranslation: true,\n    skipSharing: true\n  }\n};\n\nconst generatePayload = (dashboard = {}, data) => {\n  return { ...dashboard,\n    name: data.name,\n    code: data.code,\n    description: data.description,\n    dashboardItems: data.dashboardItems.map(item => ({ ...item,\n      width: item.w,\n      height: item.h\n    })),\n    allowedFilters: data.allowedFilters,\n    restrictFilters: data.restrictFilters,\n    layout: data.layout,\n    itemConfig: data.itemConfig\n  };\n};\n\nexport const updateDashboard = async (dataEngine, data) => {\n  const dashboard = await apiFetchDashboard(dataEngine, data.id, {\n    mode: EDIT,\n    forSave: true\n  });\n  const {\n    response\n  } = await dataEngine.mutate(updateDashboardMutation, {\n    variables: {\n      id: data.id,\n      data: generatePayload(dashboard, data)\n    }\n  });\n  return response.uid;\n};\nexport const postDashboard = async (dataEngine, data) => {\n  const {\n    response\n  } = await dataEngine.mutate(createDashboardMutation, {\n    variables: {\n      data: generatePayload({}, data)\n    }\n  });\n  return response.uid;\n};","/** @module reducers/editDashboard */\n// import { generateUid } from 'd2/uid'\nimport update from 'immutability-helper';\nimport isEmpty from 'lodash/isEmpty';\nimport { getDashboardItem } from '../modules/gridUtil'; // import {\n//     getGridItemProperties,\n//     getPageBreakItemShape,\n//     getPrintTitlePageItemShape,\n//     NEW_ITEM_SHAPE,\n// } from '../modules/gridUtil'\n// import { itemTypeMap, PAGEBREAK, PRINT_TITLE_PAGE } from '../modules/itemTypes'\n\nimport { orArray, orObject } from '../modules/util';\nexport const RECEIVED_EDIT_DASHBOARD = 'RECEIVED_EDIT_DASHBOARD';\nexport const RECEIVED_NOT_EDITING = 'RECEIVED_NOT_EDITING';\nexport const START_NEW_DASHBOARD = 'START_NEW_DASHBOARD';\nexport const RECEIVED_TITLE = 'RECEIVED_TITLE';\nexport const RECEIVED_CODE = 'RECEIVED_CODE';\nexport const RECEIVED_DESCRIPTION = 'RECEIVED_DESCRIPTION';\nexport const ADD_DASHBOARD_ITEM = 'ADD_DASHBOARD_ITEM';\nexport const REMOVE_DASHBOARD_ITEM = 'REMOVE_DASHBOARD_ITEM';\nexport const UPDATE_DASHBOARD_ITEM = 'UPDATE_DASHBOARD_ITEM';\nexport const RECEIVED_DASHBOARD_ITEM_SHAPES = 'RECEIVED_DASHBOARD_ITEM_SHAPES';\nexport const SET_PRINT_PREVIEW_VIEW = 'SET_PRINT_PREVIEW_VIEW';\nexport const CLEAR_PRINT_PREVIEW_VIEW = 'CLEAR_PRINT_PREVIEW_VIEW';\nexport const RECEIVED_FILTER_SETTINGS = 'RECEIVED_FILTER_SETTINGS';\nexport const RECEIVED_HIDE_GRID = 'RECEIVED_HIDE_GRID';\nexport const RECEIVED_LAYOUT_COLUMNS = 'RECEIVED_LAYOUT_COLUMNS';\nexport const RECEIVED_ITEM_CONFIG_INSERT_POSITION = 'RECEIVED_ITEM_CONFIG_INSERT_POSITION';\nexport const EMPTY_STATE_EDIT_DASHBOARD = {};\nexport const DEFAULT_STATE_EDIT_DASHBOARD = {\n  id: '',\n  name: '',\n  code: '',\n  access: {\n    update: true,\n    delete: true\n  },\n  allowedFilters: [],\n  description: '',\n  dashboardItems: [],\n  restrictFilters: false,\n  printPreviewView: false,\n  isDirty: false,\n  href: '',\n  hideGrid: false,\n  layout: {\n    columns: []\n  },\n  itemConfig: {\n    insertPosition: 'END'\n  }\n};\nexport default ((state = DEFAULT_STATE_EDIT_DASHBOARD, action) => {\n  switch (action.type) {\n    case RECEIVED_EDIT_DASHBOARD:\n      {\n        const newState = {};\n        Object.keys(DEFAULT_STATE_EDIT_DASHBOARD).forEach(k => newState[k] = action.value[k]);\n        newState.printPreviewView = DEFAULT_STATE_EDIT_DASHBOARD.printPreviewView;\n        newState.isDirty = DEFAULT_STATE_EDIT_DASHBOARD.isDirty;\n        return newState;\n      }\n\n    case RECEIVED_NOT_EDITING:\n      return EMPTY_STATE_EDIT_DASHBOARD;\n\n    case SET_PRINT_PREVIEW_VIEW:\n      return Object.assign({}, state, {\n        printPreviewView: true\n      });\n\n    case CLEAR_PRINT_PREVIEW_VIEW:\n      return Object.assign({}, state, {\n        printPreviewView: false\n      });\n\n    case START_NEW_DASHBOARD:\n      return DEFAULT_STATE_EDIT_DASHBOARD;\n\n    case RECEIVED_TITLE:\n      {\n        return Object.assign({}, state, {\n          name: action.value,\n          isDirty: true\n        });\n      }\n\n    case RECEIVED_CODE:\n      {\n        return Object.assign({}, state, {\n          code: action.value,\n          isDirty: true\n        });\n      }\n\n    case RECEIVED_DESCRIPTION:\n      {\n        return Object.assign({}, state, {\n          description: action.value,\n          isDirty: true\n        });\n      }\n\n    case ADD_DASHBOARD_ITEM:\n      {\n        const dashboardItem = getDashboardItem(action.value);\n\n        if (!dashboardItem.position) {\n          return update(state, {\n            dashboardItems: {\n              $unshift: [dashboardItem]\n            },\n            isDirty: {\n              $set: true\n            }\n          });\n        }\n\n        return update(state, {\n          dashboardItems: {\n            $splice: [[parseInt(dashboardItem.position), 0, dashboardItem]]\n          },\n          isDirty: {\n            $set: true\n          }\n        });\n      }\n\n    case REMOVE_DASHBOARD_ITEM:\n      {\n        const idToRemove = action.value;\n        const dashboardItemIndex = state.dashboardItems.findIndex(item => item.id === idToRemove);\n\n        if (dashboardItemIndex > -1) {\n          return update(state, {\n            dashboardItems: {\n              $splice: [[dashboardItemIndex, 1]]\n            },\n            isDirty: {\n              $set: true\n            }\n          });\n        }\n\n        return state;\n      }\n\n    case RECEIVED_DASHBOARD_ITEM_SHAPES:\n      {\n        if (!action.value) {\n          return state;\n        }\n\n        const stateItems = orArray(state.dashboardItems);\n\n        if (stateItems.length !== action.value.length) {\n          return { ...state,\n            dashboardItems: action.value\n          };\n        }\n\n        let shapesHaveChanged = false;\n        const newStateItems = action.value.map(({\n          x,\n          y,\n          w,\n          h,\n          i\n        }) => {\n          const stateItem = stateItems.find(si => si.id === i);\n\n          if (!(stateItem.x === x && stateItem.y === y && stateItem.w === w && stateItem.h === h)) {\n            shapesHaveChanged = true;\n            return Object.assign({}, stateItem, {\n              w,\n              h,\n              x,\n              y\n            });\n          }\n\n          return stateItem;\n        });\n        return { ...state,\n          dashboardItems: shapesHaveChanged ? newStateItems : state.dashboardItems,\n          isDirty: shapesHaveChanged\n        };\n      }\n\n    case UPDATE_DASHBOARD_ITEM:\n      {\n        const dashboardItem = action.value;\n        const dashboardItemIndex = state.dashboardItems.findIndex(item => item.id === dashboardItem.id);\n\n        if (dashboardItemIndex > -1) {\n          const newState = update(state, {\n            dashboardItems: {\n              $splice: [[dashboardItemIndex, 1, Object.assign({}, dashboardItem)]]\n            },\n            isDirty: {\n              $set: true\n            }\n          });\n          return newState;\n        }\n\n        return state;\n      }\n\n    case RECEIVED_FILTER_SETTINGS:\n      {\n        return Object.assign({}, state, {\n          allowedFilters: action.value.allowedFilters,\n          restrictFilters: action.value.restrictFilters,\n          isDirty: true\n        });\n      }\n\n    case RECEIVED_HIDE_GRID:\n      {\n        return { ...state,\n          hideGrid: action.value\n        };\n      }\n\n    case RECEIVED_LAYOUT_COLUMNS:\n      {\n        return { ...state,\n          layout: { ...state.layout,\n            columns: action.value\n          }\n        };\n      }\n\n    case RECEIVED_ITEM_CONFIG_INSERT_POSITION:\n      {\n        return { ...state,\n          itemConfig: { ...state.itemConfig,\n            insertPosition: action.value\n          }\n        };\n      }\n\n    default:\n      return state;\n  }\n}); // root selector\n\nexport const sGetEditDashboardRoot = state => state.editDashboard; // selectors\n\nexport const sGetIsEditing = state => !isEmpty(state.editDashboard);\nexport const sGetIsPrintPreviewView = state => sGetEditDashboardRoot(state).printPreviewView;\nexport const sGetEditDashboardName = state => sGetEditDashboardRoot(state).name;\nexport const sGetEditDashboardCode = state => sGetEditDashboardRoot(state).code;\nexport const sGetEditDashboardDescription = state => sGetEditDashboardRoot(state).description;\nexport const sGetEditDashboardItems = state => orObject(sGetEditDashboardRoot(state)).dashboardItems;\nexport const sGetEditIsDirty = state => sGetEditDashboardRoot(state).isDirty;\nexport const sGetHideGrid = state => sGetEditDashboardRoot(state).hideGrid;\n\nconst getLayout = editDashboard => editDashboard.layout;\n\nexport const sGetLayout = state => orObject(getLayout(sGetEditDashboardRoot(state)));\n\nconst getColumns = layout => layout.columns;\n\nexport const sGetLayoutColumns = state => orArray(getColumns(sGetLayout(state)));\n\nconst getItemConfig = editDashboard => editDashboard.itemConfig;\n\nexport const sGetItemConfig = state => orObject(getItemConfig(sGetEditDashboardRoot(state)));\n\nconst getInsertPosition = itemConfig => itemConfig.insertPosition;\n\nexport const sGetItemConfigInsertPosition = state => getInsertPosition(sGetItemConfig(state));","import i18n from '@dhis2/d2-i18n';\nimport { updateDashboard, postDashboard } from '../api/editDashboard';\nimport { addToItemsEnd, addToItemsStart, getAutoItemShapes, getDashboardItem, updateItems } from '../modules/gridUtil';\nimport { convertUiItemsToBackend } from '../modules/uiBackendItemConverter';\nimport { RECEIVED_EDIT_DASHBOARD, START_NEW_DASHBOARD, RECEIVED_NOT_EDITING, RECEIVED_TITLE, RECEIVED_DESCRIPTION, RECEIVED_DASHBOARD_ITEM_SHAPES, ADD_DASHBOARD_ITEM, UPDATE_DASHBOARD_ITEM, REMOVE_DASHBOARD_ITEM, SET_PRINT_PREVIEW_VIEW, CLEAR_PRINT_PREVIEW_VIEW, RECEIVED_FILTER_SETTINGS, sGetEditDashboardRoot, RECEIVED_HIDE_GRID, RECEIVED_LAYOUT_COLUMNS, RECEIVED_ITEM_CONFIG_INSERT_POSITION, sGetEditDashboardItems, sGetLayoutColumns, sGetItemConfigInsertPosition, RECEIVED_CODE } from '../reducers/editDashboard';\nimport { tFetchDashboards } from './dashboards'; // actions\n\nexport const acSetEditDashboard = dashboard => ({\n  type: RECEIVED_EDIT_DASHBOARD,\n  value: dashboard\n});\nexport const acSetEditNewDashboard = () => ({\n  type: START_NEW_DASHBOARD\n});\nexport const acClearEditDashboard = () => ({\n  type: RECEIVED_NOT_EDITING\n});\nexport const acSetPrintPreviewView = () => ({\n  type: SET_PRINT_PREVIEW_VIEW\n});\nexport const acClearPrintPreviewView = () => ({\n  type: CLEAR_PRINT_PREVIEW_VIEW\n});\nexport const acSetDashboardTitle = value => ({\n  type: RECEIVED_TITLE,\n  value\n});\nexport const acSetDashboardCode = value => ({\n  type: RECEIVED_CODE,\n  value\n});\nexport const acSetDashboardDescription = value => ({\n  type: RECEIVED_DESCRIPTION,\n  value\n});\nexport const acUpdateDashboardItemShapes = value => ({\n  type: RECEIVED_DASHBOARD_ITEM_SHAPES,\n  value\n});\nexport const acAddDashboardItem = item => ({\n  type: ADD_DASHBOARD_ITEM,\n  value: item\n});\nexport const acUpdateDashboardItem = item => ({\n  type: UPDATE_DASHBOARD_ITEM,\n  value: item\n});\nexport const acRemoveDashboardItem = value => ({\n  type: REMOVE_DASHBOARD_ITEM,\n  value\n});\nexport const acSetFilterSettings = value => ({\n  type: RECEIVED_FILTER_SETTINGS,\n  value\n});\nexport const acSetHideGrid = value => ({\n  type: RECEIVED_HIDE_GRID,\n  value\n});\nexport const acSetLayoutColumns = value => ({\n  type: RECEIVED_LAYOUT_COLUMNS,\n  value\n});\nexport const acSetItemConfigInsertPosition = value => ({\n  type: RECEIVED_ITEM_CONFIG_INSERT_POSITION,\n  value\n}); // thunks\n// no layout + end: add to new row at the end, default size\n// no layout + start: add to 0,0, default size\n// layout + end: calculate and add to \"next shape in layout\"\n// layout + start: add to 0,0,0,0, sort, remount\n\nexport const tSetDashboardItems = (itemToAdd, itemIdToRemove) => (dispatch, getState) => {\n  const insertPosition = sGetItemConfigInsertPosition(getState());\n  const columns = sGetLayoutColumns(getState());\n  let items = [...sGetEditDashboardItems(getState())];\n  let dashboardItemsWithShapes;\n\n  if (!itemToAdd && !itemIdToRemove) {\n    // changing columns\n    if (!columns.length) {\n      // freeflow\n      updateItems(items, dispatch);\n    } else {\n      dashboardItemsWithShapes = getAutoItemShapes(items, columns);\n      updateItems(dashboardItemsWithShapes, dispatch, {\n        reload: true\n      });\n    }\n  } else {\n    if (itemIdToRemove) {\n      items = items.filter(item => item.id !== itemIdToRemove);\n    }\n\n    if (!itemToAdd) {\n      dashboardItemsWithShapes = getAutoItemShapes(items, columns);\n      updateItems(dashboardItemsWithShapes, dispatch);\n    } else {\n      const newDashboardItem = getDashboardItem(itemToAdd);\n\n      switch (insertPosition) {\n        case 'START':\n          dashboardItemsWithShapes = addToItemsStart(items, columns, newDashboardItem);\n          break;\n\n        case 'END':\n        default:\n          dashboardItemsWithShapes = addToItemsEnd(items, columns, newDashboardItem);\n      }\n\n      updateItems(dashboardItemsWithShapes, dispatch);\n    }\n  }\n};\nexport const tSaveDashboard = () => async (dispatch, getState, dataEngine) => {\n  const dashboard = sGetEditDashboardRoot(getState());\n  const dashboardToSave = { ...dashboard,\n    dashboardItems: convertUiItemsToBackend(dashboard.dashboardItems),\n    name: dashboard.name || i18n.t('Untitled dashboard')\n  };\n  const dashboardId = dashboardToSave.id ? await updateDashboard(dataEngine, dashboardToSave) : await postDashboard(dataEngine, dashboardToSave); // update the dashboard list\n\n  await dispatch(tFetchDashboards());\n  return Promise.resolve(dashboardId);\n};","export const SET_ITEM_ACTIVE_TYPE = 'SET_ITEM_ACTIVE_TYPE';\nexport const CLEAR_ITEM_ACTIVE_TYPES = 'CLEAR_ITEM_ACTIVE_TYPES';\nexport const DEFAULT_STATE_ITEM_ACTIVE_TYPES = {};\nexport default ((state = DEFAULT_STATE_ITEM_ACTIVE_TYPES, action) => {\n  switch (action.type) {\n    case SET_ITEM_ACTIVE_TYPE:\n      {\n        return { ...state,\n          [action.id]: action.activeType\n        };\n      }\n\n    case CLEAR_ITEM_ACTIVE_TYPES:\n      {\n        return DEFAULT_STATE_ITEM_ACTIVE_TYPES;\n      }\n\n    default:\n      return state;\n  }\n});\nexport const sGetItemActiveType = (state, id) => state.itemActiveTypes[id];","import { SET_ITEM_ACTIVE_TYPE, CLEAR_ITEM_ACTIVE_TYPES } from '../reducers/itemActiveTypes';\nexport const acSetItemActiveType = (id, activeType) => {\n  const action = {\n    type: SET_ITEM_ACTIVE_TYPE,\n    id,\n    activeType\n  };\n  return action;\n};\nexport const acClearItemActiveTypes = () => ({\n  type: CLEAR_ITEM_ACTIVE_TYPES\n});","import { getDimensionById, DIMENSION_ID_PERIOD, DIMENSION_ID_ORGUNIT } from '@dhis2/analytics';\nexport const SET_DIMENSIONS = 'SET_DIMENSIONS';\nconst PE_OU_DIMENSIONS = [getDimensionById(DIMENSION_ID_PERIOD), getDimensionById(DIMENSION_ID_ORGUNIT)];\nconst INITIAL_DIMENSIONS = [];\nexport default ((state = INITIAL_DIMENSIONS, action) => {\n  switch (action.type) {\n    case SET_DIMENSIONS:\n      {\n        return [...PE_OU_DIMENSIONS, ...action.value];\n      }\n\n    default:\n      return state;\n  }\n});\nexport const sGetDimensions = state => state.dimensions;","import { createSelector } from 'reselect';\nimport { sGetDimensions } from './dimensions';\nexport const CLEAR_ITEM_FILTERS = 'CLEAR_ITEM_FILTERS';\nexport const ADD_ITEM_FILTER = 'ADD_ITEM_FILTER';\nexport const REMOVE_ITEM_FILTER = 'REMOVE_ITEM_FILTER';\nexport const DEFAULT_STATE_ITEM_FILTERS = {};\nexport default ((state = DEFAULT_STATE_ITEM_FILTERS, action) => {\n  switch (action.type) {\n    case ADD_ITEM_FILTER:\n      {\n        return { ...state,\n          [action.filter.id]: action.filter.value\n        };\n      }\n\n    case REMOVE_ITEM_FILTER:\n      {\n        const newState = { ...state\n        };\n        delete newState[action.id];\n        return newState;\n      }\n\n    case CLEAR_ITEM_FILTERS:\n      {\n        return DEFAULT_STATE_ITEM_FILTERS;\n      }\n\n    default:\n      return state;\n  }\n}); // selectors\n\nexport const sGetItemFiltersRoot = state => state.itemFilters; // simplify the filters structure to:\n// [{ id: 'pe', name: 'Period', values: [{ id: 2019: name: '2019' }, {id: 'LAST_MONTH', name: 'Last month' }]}, ...]\n\nexport const sGetNamedItemFilters = createSelector([sGetItemFiltersRoot, sGetDimensions], (filters, dimensions) => Object.keys(filters).reduce((arr, id) => {\n  arr.push({\n    id: id,\n    name: dimensions.find(dimension => dimension.id === id).name,\n    values: filters[id].map(value => ({\n      id: value.id,\n      name: value.displayName || value.name\n    }))\n  });\n  return arr;\n}, []));","import { ADD_ITEM_FILTER, REMOVE_ITEM_FILTER, CLEAR_ITEM_FILTERS } from '../reducers/itemFilters';\nexport const FILTER_ORG_UNIT = 'ou'; // actions\n\nexport const acAddItemFilter = filter => ({\n  type: ADD_ITEM_FILTER,\n  filter\n});\nexport const acRemoveItemFilter = id => ({\n  type: REMOVE_ITEM_FILTER,\n  id\n});\nexport const acClearItemFilters = () => ({\n  type: CLEAR_ITEM_FILTERS\n});","/** @module reducers/editDashboard */\nimport update from 'immutability-helper';\nimport isEmpty from 'lodash/isEmpty';\nimport { orArray } from '../modules/util';\nexport const SET_PRINT_DASHBOARD = 'SET_PRINT_DASHBOARD';\nexport const CLEAR_PRINT_DASHBOARD = 'CLEAR_PRINT_DASHBOARD';\nexport const ADD_PRINT_DASHBOARD_ITEM = 'ADD_PRINT_DASHBOARD_ITEM';\nexport const SET_PRINT_DASHBOARD_LAYOUT = 'SET_PRINT_DASHBOARD_LAYOUT';\nexport const REMOVE_PRINT_DASHBOARD_ITEM = 'REMOVE_PRINT_DASHBOARD_ITEM';\nexport const UPDATE_PRINT_DASHBOARD_ITEM = 'UPDATE_PRINT_DASHBOARD_ITEM';\nexport const DEFAULT_STATE_PRINT_DASHBOARD = {};\nconst DEFAULT_DASHBOARD_ITEMS = [];\nexport const NEW_PRINT_DASHBOARD_STATE = {\n  id: '',\n  name: '',\n  access: {},\n  description: '',\n  dashboardItems: DEFAULT_DASHBOARD_ITEMS\n};\nexport default ((state = DEFAULT_STATE_PRINT_DASHBOARD, action) => {\n  switch (action.type) {\n    case SET_PRINT_DASHBOARD:\n      {\n        const newState = {};\n        Object.keys(NEW_PRINT_DASHBOARD_STATE).map(k => newState[k] = action.value[k]);\n        return newState;\n      }\n\n    case CLEAR_PRINT_DASHBOARD:\n      return DEFAULT_STATE_PRINT_DASHBOARD;\n\n    case ADD_PRINT_DASHBOARD_ITEM:\n      if (!action.value.position) {\n        return update(state, {\n          dashboardItems: {\n            $unshift: [action.value]\n          }\n        });\n      }\n\n      return update(state, {\n        dashboardItems: {\n          $splice: [[parseInt(action.value.position), 0, action.value]]\n        }\n      });\n\n    case REMOVE_PRINT_DASHBOARD_ITEM:\n      {\n        const idToRemove = action.value;\n        const dashboardItemIndex = state.dashboardItems.findIndex(item => item.id === idToRemove);\n\n        if (dashboardItemIndex > -1) {\n          return update(state, {\n            dashboardItems: {\n              $splice: [[dashboardItemIndex, 1]]\n            }\n          });\n        }\n\n        return state;\n      }\n\n    case UPDATE_PRINT_DASHBOARD_ITEM:\n      {\n        const dashboardItem = action.value;\n        const dashboardItemIndex = state.dashboardItems.findIndex(item => item.id === dashboardItem.id);\n\n        if (dashboardItemIndex > -1) {\n          const newState = update(state, {\n            dashboardItems: {\n              $splice: [[dashboardItemIndex, 1, Object.assign({}, dashboardItem)]]\n            }\n          });\n          return newState;\n        }\n\n        return state;\n      }\n\n    case SET_PRINT_DASHBOARD_LAYOUT:\n      {\n        const stateItems = orArray(state.dashboardItems);\n        let layoutHasChanged = false;\n        const newStateItems = action.value.map(({\n          x,\n          y,\n          w,\n          h,\n          i\n        }) => {\n          const stateItem = stateItems.find(si => si.id === i);\n\n          if (!(stateItem.x === x && stateItem.y === y && stateItem.w === w && stateItem.h === h)) {\n            layoutHasChanged = true;\n            return Object.assign({}, stateItem, {\n              w,\n              h,\n              x,\n              y\n            });\n          }\n\n          return stateItem;\n        });\n        return layoutHasChanged ? { ...state,\n          dashboardItems: newStateItems\n        } : state;\n      }\n\n    default:\n      return state;\n  }\n}); // root selector\n\nexport const sGetPrintDashboardRoot = state => state.printDashboard; // selectors\n\nexport const sGetIsPrinting = state => !isEmpty(state.printDashboard);\nexport const sGetPrintDashboardName = state => sGetPrintDashboardRoot(state).name;\nexport const sGetPrintDashboardDescription = state => sGetPrintDashboardRoot(state).description;\nexport const sGetPrintDashboardItems = state => {\n  var _sGetPrintDashboardRo;\n\n  return ((_sGetPrintDashboardRo = sGetPrintDashboardRoot(state)) === null || _sGetPrintDashboardRo === void 0 ? void 0 : _sGetPrintDashboardRo.dashboardItems) || DEFAULT_DASHBOARD_ITEMS;\n};","import { generateUid } from 'd2/uid';\nimport { NEW_ITEM_SHAPE, getGridItemProperties, getPageBreakItemShape, getPrintTitlePageItemShape } from '../modules/gridUtil';\nimport { itemTypeMap, PAGEBREAK } from '../modules/itemTypes';\nimport { SET_PRINT_DASHBOARD, CLEAR_PRINT_DASHBOARD, SET_PRINT_DASHBOARD_LAYOUT, ADD_PRINT_DASHBOARD_ITEM, REMOVE_PRINT_DASHBOARD_ITEM, UPDATE_PRINT_DASHBOARD_ITEM } from '../reducers/printDashboard'; // actions\n\nexport const acSetPrintDashboard = dashboard => ({\n  type: SET_PRINT_DASHBOARD,\n  value: dashboard\n});\nexport const acClearPrintDashboard = () => ({\n  type: CLEAR_PRINT_DASHBOARD\n});\nexport const acUpdatePrintDashboardLayout = value => ({\n  type: SET_PRINT_DASHBOARD_LAYOUT,\n  value\n});\nexport const acAddPrintDashboardItem = item => {\n  const type = item.type;\n  delete item.type;\n  const itemPropName = itemTypeMap[type].propName;\n  const id = generateUid();\n  const gridItemProperties = getGridItemProperties(id);\n  let shape;\n\n  if (type === PAGEBREAK) {\n    const yPos = item.yPos || 0;\n    shape = getPageBreakItemShape(yPos, item.isStatic);\n  } else {\n    shape = getPrintTitlePageItemShape(item.isOneItemPerPage);\n  }\n\n  return {\n    type: ADD_PRINT_DASHBOARD_ITEM,\n    value: {\n      id,\n      type,\n      position: item.position || null,\n      [itemPropName]: item.content,\n      ...NEW_ITEM_SHAPE,\n      ...gridItemProperties,\n      ...shape\n    }\n  };\n};\nexport const acRemovePrintDashboardItem = value => ({\n  type: REMOVE_PRINT_DASHBOARD_ITEM,\n  value\n});\nexport const acUpdatePrintDashboardItem = item => ({\n  type: UPDATE_PRINT_DASHBOARD_ITEM,\n  value: item\n});","export const messageConversationsQuery = {\n  resource: 'messageConversations',\n  params: {\n    fields: 'id,messageCount,lastUpdated,messageType,displayName,read,messages[id,read,sender[id,displayName],text,lastUpdated]',\n    order: 'read:asc',\n    pageSize: 200\n  }\n};\nexport const getMessages = async dataEngine => {\n  try {\n    const {\n      messageConversations\n    } = await dataEngine.query({\n      messageConversations: messageConversationsQuery\n    });\n    return messageConversations.messageConversations;\n  } catch (error) {\n    console.log('Error:', error);\n  }\n};","import update from 'immutability-helper';\nimport { arrayToIdMap } from '../modules/util';\nexport const RECEIVED_MESSAGES = 'RECEIVED_MESSAGES';\nexport default ((state = {}, action) => {\n  switch (action.type) {\n    case RECEIVED_MESSAGES:\n      {\n        const conversations = arrayToIdMap(action.value);\n        const newState = update(state, {\n          $merge: conversations\n        });\n        return newState;\n      }\n\n    default:\n      return state;\n  }\n}); // selectors\n\nexport const sGetMessagesRoot = state => state.messages;","import { getMessages } from '../../../api/messages';\nimport { RECEIVED_MESSAGES } from '../../../reducers/messages';\n\nconst onError = (action, error) => {\n  console.log(`Error in action ${action}: ${error}`);\n  return error;\n};\n\nexport const receivedMessages = value => ({\n  type: RECEIVED_MESSAGES,\n  value\n});\nexport const tGetMessages = dataEngine => async dispatch => {\n  try {\n    const messageConversations = await getMessages(dataEngine);\n    return dispatch(receivedMessages(messageConversations));\n  } catch (err) {\n    return onError('Get Messages', err);\n  }\n};","export const getPreferredDashboardId = username => localStorage.getItem(`dhis2.dashboard.current.${username}`) || undefined;\nexport const storePreferredDashboardId = (username, dashboardId) => {\n  localStorage.setItem(`dhis2.dashboard.current.${username}`, dashboardId);\n};","export const SET_SELECTED = 'SET_SELECTED';\nexport const CLEAR_SELECTED = 'CLEAR_SELECTED';\nexport const DEFAULT_SELECTED_STATE = {};\nconst SELECTED_PROPERTIES = {\n  id: '',\n  displayName: '',\n  displayDescription: '',\n  access: {},\n  restrictFilters: false,\n  allowedFilters: [],\n  dashboardItems: [],\n  layout: [],\n  itemConfig: {}\n};\nexport default ((state = DEFAULT_SELECTED_STATE, action) => {\n  switch (action.type) {\n    case SET_SELECTED:\n      {\n        const newState = {};\n        Object.keys(SELECTED_PROPERTIES).map(k => newState[k] = action.value[k]);\n        return newState;\n      }\n\n    case CLEAR_SELECTED:\n      {\n        return DEFAULT_SELECTED_STATE;\n      }\n\n    default:\n      return state;\n  }\n}); // Selectors\n\nexport const sGetSelected = state => state.selected;\nexport const sGetSelectedId = state => sGetSelected(state).id;\nexport const sGetSelectedDisplayName = state => sGetSelected(state).displayName;\nexport const sGetSelectedDisplayDescription = state => sGetSelected(state).displayDescription;\nexport const sGetSelectedDashboardItems = state => sGetSelected(state).dashboardItems || SELECTED_PROPERTIES.dashboardItems;\nexport const sGetIsNullDashboardItems = state => sGetSelected(state).dashboardItems === undefined;","import objectClean from 'd2-utilizr/lib/objectClean';\nimport { orObject } from '../modules/util';\n/** @module reducers/visualizations */\n\nexport const ADD_VISUALIZATION = 'ADD_VISUALIZATION';\nexport const CLEAR_VISUALIZATIONS = 'CLEAR_VISUALIZATIONS';\nexport const DEFAULT_STATE_VISUALIZATIONS = {};\n\nconst isEmpty = p => p === undefined || p === null;\n\nexport default ((state = DEFAULT_STATE_VISUALIZATIONS, action) => {\n  switch (action.type) {\n    case ADD_VISUALIZATION:\n      {\n        return { ...state,\n          [action.value.id]: objectClean({ ...orObject(state[action.value.id]),\n            ...action.value\n          }, isEmpty)\n        };\n      }\n\n    case CLEAR_VISUALIZATIONS:\n      {\n        return DEFAULT_STATE_VISUALIZATIONS;\n      }\n\n    default:\n      return state;\n  }\n}); // root selector\n\nconst sGetVisualizationsRoot = state => state.visualizations; // selectors level 1\n\n\nexport const sGetVisualization = (state, id) => {\n  return sGetVisualizationsRoot(state)[id];\n};","import { ADD_VISUALIZATION, CLEAR_VISUALIZATIONS } from '../reducers/visualizations';\nexport const acAddVisualization = value => ({\n  type: ADD_VISUALIZATION,\n  value\n});\nexport const acClearVisualizations = () => ({\n  type: CLEAR_VISUALIZATIONS\n});","import { apiFetchDashboard } from '../api/fetchDashboard';\nimport { tGetMessages } from '../components/Item/MessagesItem/actions';\nimport { VIEW } from '../modules/dashboardModes';\nimport { MESSAGES } from '../modules/itemTypes';\nimport { storePreferredDashboardId } from '../modules/localStorage';\nimport { SET_SELECTED, CLEAR_SELECTED, sGetSelectedId } from '../reducers/selected';\nimport { acAppendDashboards } from './dashboards';\nimport { acClearItemActiveTypes } from './itemActiveTypes';\nimport { acClearItemFilters } from './itemFilters';\nimport { acClearVisualizations } from './visualizations'; // actions\n\nexport const acSetSelected = value => ({\n  type: SET_SELECTED,\n  value\n});\nexport const acClearSelected = () => ({\n  type: CLEAR_SELECTED\n}); // thunks\n\nexport const tSetSelectedDashboardById = (id, username) => async (dispatch, getState, dataEngine) => {\n  const dashboard = await apiFetchDashboard(dataEngine, id, {\n    mode: VIEW\n  });\n  dispatch(acAppendDashboards([{\n    id: dashboard.id,\n    displayName: dashboard.displayName,\n    starred: dashboard.starred\n  }]));\n\n  if (username) {\n    storePreferredDashboardId(username, id);\n  }\n\n  if (id !== sGetSelectedId(getState())) {\n    dispatch(acClearItemFilters());\n    dispatch(acClearVisualizations());\n    dispatch(acClearItemActiveTypes());\n  }\n\n  dashboard.dashboardItems.some(item => item.type === MESSAGES) && dispatch(tGetMessages(dataEngine));\n  dispatch(acSetSelected(dashboard));\n};\nexport const tSetSelectedDashboardByIdOffline = (id, username) => (dispatch, getState) => {\n  if (username) {\n    storePreferredDashboardId(username, id);\n  }\n\n  if (id !== sGetSelectedId(getState())) {\n    dispatch(acClearItemFilters());\n    dispatch(acClearVisualizations());\n    dispatch(acClearItemActiveTypes());\n  }\n\n  dispatch(acSetSelected({\n    id\n  }));\n};","export const SET_SHOW_DESCRIPTION = 'SET_SHOW_DESCRIPTION';\nexport const DEFAULT_STATE_SHOW_DESCRIPTION = false;\nexport default ((state = DEFAULT_STATE_SHOW_DESCRIPTION, action) => {\n  switch (action.type) {\n    case SET_SHOW_DESCRIPTION:\n      {\n        return action.value;\n      }\n\n    default:\n      return state;\n  }\n});\nexport const sGetShowDescription = state => state.showDescription;","import { DEFAULT_STATE_SHOW_DESCRIPTION } from '../reducers/showDescription';\nimport { apiGetUserDataStoreValue, apiPostUserDataStoreValue } from './userDataStore';\nconst KEY_SHOW_DESCRIPTION = 'showDescription';\nexport const apiGetShowDescription = async () => await apiGetUserDataStoreValue(KEY_SHOW_DESCRIPTION, DEFAULT_STATE_SHOW_DESCRIPTION);\nexport const apiPostShowDescription = value => apiPostUserDataStoreValue(KEY_SHOW_DESCRIPTION, value);","import { apiGetShowDescription } from '../api/description';\nimport { SET_SHOW_DESCRIPTION } from '../reducers/showDescription';\nexport const acSetShowDescription = value => ({\n  type: SET_SHOW_DESCRIPTION,\n  value\n});\nexport const tSetShowDescription = () => async dispatch => {\n  const onSuccess = value => {\n    dispatch(acSetShowDescription(value));\n  };\n\n  try {\n    const showDescription = await apiGetShowDescription();\n    return onSuccess(showDescription);\n  } catch (err) {\n    console.error('Error (apiGetShowDescription): ', err);\n    return err;\n  }\n};","import cx from 'classnames';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport classes from './styles/DashboardContainer.module.css';\n\nconst DashboardContainer = ({\n  children,\n  covered\n}) => {\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: cx(classes.container, 'dashboard-scroll-container', covered && classes.covered),\n    \"data-test\": \"inner-scroll-container\"\n  }, children);\n};\n\nDashboardContainer.propTypes = {\n  children: PropTypes.node,\n  covered: PropTypes.bool\n};\nexport default DashboardContainer;","import PropTypes from 'prop-types';\nimport React from 'react';\nimport classes from './styles/NoContentMessage.module.css';\n\nconst NoContentMessage = ({\n  text\n}) => /*#__PURE__*/React.createElement(\"div\", {\n  className: classes.container\n}, text);\n\nNoContentMessage.propTypes = {\n  text: PropTypes.string\n};\nexport default NoContentMessage;","import { NoticeBox, CenteredContent } from '@dhis2/ui';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport classes from './styles/Notice.module.css';\n\nconst Notice = ({\n  title,\n  message\n}) => /*#__PURE__*/React.createElement(CenteredContent, {\n  position: \"top\"\n}, /*#__PURE__*/React.createElement(\"div\", {\n  className: classes.noticeContainer\n}, /*#__PURE__*/React.createElement(NoticeBox, {\n  title: title,\n  warning: true\n}, message)));\n\nNotice.propTypes = {\n  message: PropTypes.string,\n  title: PropTypes.string\n};\nexport default Notice;","import debounce from 'lodash/debounce';\nimport PropTypes from 'prop-types';\nimport React, { createContext, useContext, useState, useEffect } from 'react';\nexport const WindowDimensionsCtx = /*#__PURE__*/createContext(null);\n\nconst windowDims = () => ({\n  height: window.innerHeight,\n  width: window.innerWidth\n});\n\nconst WindowDimensionsProvider = ({\n  children\n}) => {\n  const [dimensions, setDimensions] = useState(windowDims());\n  useEffect(() => {\n    const handleResize = debounce(() => {\n      setDimensions(windowDims());\n    }, 100);\n    window.addEventListener('resize', handleResize);\n    return () => {\n      window.removeEventListener('resize', handleResize);\n    };\n  }, []);\n  return /*#__PURE__*/React.createElement(WindowDimensionsCtx.Provider, {\n    value: dimensions\n  }, children);\n};\n\nWindowDimensionsProvider.propTypes = {\n  children: PropTypes.node.isRequired\n};\nexport default WindowDimensionsProvider;\nexport const useWindowDimensions = () => {\n  return useContext(WindowDimensionsCtx);\n};","export const setHeaderbarVisible = show => {\n  const header = document.getElementsByTagName('header')[0];\n\n  if (show) {\n    header.classList.remove('hidden');\n  } else {\n    header.classList.add('hidden');\n  }\n};","import i18n from '@dhis2/d2-i18n';\nimport { Button, colors, IconChevronLeft24 } from '@dhis2/ui';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport { Link } from 'react-router-dom';\nimport classes from './styles/PrintActionsBar.module.css'; // set in PrintActionsBar.module.css\n\nexport const PRINT_ACTIONS_BAR_HEIGHT = 44;\nexport const PRINT_ACTIONS_BAR_HEIGHT_SM = 36;\n\nconst PrintActionsBar = ({\n  id\n}) => {\n  const getExitPrintButton = isSmall => /*#__PURE__*/React.createElement(Button, {\n    className: isSmall ? classes.buttonSmall : classes.buttonLarge,\n    small: isSmall\n  }, /*#__PURE__*/React.createElement(IconChevronLeft24, {\n    color: colors.grey700\n  }), i18n.t('Exit print preview'));\n\n  const getPrintButton = isSmall => /*#__PURE__*/React.createElement(Button, {\n    className: isSmall ? classes.buttonSmall : classes.buttonLarge,\n    small: isSmall,\n    onClick: window.print\n  }, i18n.t('Print'));\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.container\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.actions\n  }, /*#__PURE__*/React.createElement(Link, {\n    className: classes.link,\n    to: `/${id}`\n  }, getExitPrintButton(true), getExitPrintButton(false)), getPrintButton(true), getPrintButton(false)));\n};\n\nPrintActionsBar.defaultValues = {\n  id: '/'\n};\nPrintActionsBar.propTypes = {\n  id: PropTypes.string\n};\nexport default PrintActionsBar;","import i18n from '@dhis2/d2-i18n';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport classes from './styles/PrintInfo.module.css';\n\nconst PrintInfo = ({\n  isLayout\n}) => {\n  const layoutStyle = isLayout ? i18n.t('dashboard layout') : i18n.t('one item per page');\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.container\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    className: classes.title\n  }, `${i18n.t('Print Preview')}: ${layoutStyle}`), /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.printSuggestions\n  }, /*#__PURE__*/React.createElement(\"p\", null, `${i18n.t('For best print results')}:`), /*#__PURE__*/React.createElement(\"ul\", null, /*#__PURE__*/React.createElement(\"li\", null, i18n.t('Use Chrome or Edge web browser')), /*#__PURE__*/React.createElement(\"li\", null, i18n.t('Wait for all dashboard items to load before printing')), /*#__PURE__*/React.createElement(\"li\", null, i18n.t('Use A4 landscape paper size, default margin settings and turn on background graphics in the browser print dialog')))), /*#__PURE__*/React.createElement(\"hr\", {\n    className: classes.divider\n  }));\n};\n\nPrintInfo.propTypes = {\n  isLayout: PropTypes.bool\n};\nexport default PrintInfo;","import i18n from '@dhis2/d2-i18n';\nimport { colors, Button, Tooltip, IconDelete24 } from '@dhis2/ui';\nimport PropTypes from 'prop-types';\nimport React from 'react';\n\nconst DeleteItemButton = ({\n  onClick\n}) => /*#__PURE__*/React.createElement(Tooltip, {\n  content: i18n.t('Remove this item'),\n  placement: \"bottom\"\n}, /*#__PURE__*/React.createElement(Button, {\n  secondary: true,\n  small: true,\n  onClick: onClick,\n  icon: /*#__PURE__*/React.createElement(IconDelete24, {\n    color: colors.red600\n  }),\n  dataTest: \"delete-item-button\"\n}));\n\nDeleteItemButton.propTypes = {\n  onClick: PropTypes.func\n};\nexport default DeleteItemButton;","import PropTypes from 'prop-types';\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport { acRemoveDashboardItem, tSetDashboardItems } from '../../../actions/editDashboard';\nimport { sGetEditDashboardItems, sGetLayoutColumns } from '../../../reducers/editDashboard';\nimport DeleteItemButton from './DeleteItemButton';\nimport classes from './styles/ItemHeader.module.css';\n\nconst EditItemActions = ({\n  itemId,\n  onDeleteItem\n}) => {\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.itemActionsWrap\n  }, /*#__PURE__*/React.createElement(DeleteItemButton, {\n    onClick: () => onDeleteItem(itemId)\n  }));\n};\n\nEditItemActions.propTypes = {\n  itemId: PropTypes.string,\n  onDeleteItem: PropTypes.func\n};\nconst mapDispatchToProps = {\n  onDeleteItem: itemId => (dispatch, getState) => {\n    const columns = sGetLayoutColumns(getState());\n    const dashboardItems = sGetEditDashboardItems(getState());\n\n    if (!columns.length || dashboardItems.length === 1) {\n      dispatch(acRemoveDashboardItem(itemId));\n    } else {\n      dispatch(tSetDashboardItems(null, itemId));\n    }\n  }\n};\nexport default connect(null, mapDispatchToProps)(EditItemActions);","import i18n from '@dhis2/d2-i18n';\nimport { Tooltip, colors, IconWarning24 } from '@dhis2/ui';\nimport React from 'react';\nimport classes from './styles/PrintItemInfo.module.css';\n\nconst PrintWarning = () => /*#__PURE__*/React.createElement(\"div\", {\n  className: classes.warning\n}, /*#__PURE__*/React.createElement(Tooltip, {\n  content: i18n.t('This item has been shortened to fit on one page'),\n  placement: \"bottom\"\n}, /*#__PURE__*/React.createElement(IconWarning24, {\n  color: colors.grey600\n})));\n\nexport default PrintWarning;","import PropTypes from 'prop-types';\nimport React from 'react';\nimport classes from './styles/ItemHeader.module.css';\n\nconst ViewItemActions = ({\n  actionButtons\n}) => {\n  return actionButtons ? /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.itemActionsWrap\n  }, actionButtons) : null;\n};\n\nViewItemActions.propTypes = {\n  actionButtons: PropTypes.node\n};\nexport default ViewItemActions;","import PropTypes from 'prop-types';\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport { VIEW, EDIT, PRINT_LAYOUT } from '../../../modules/dashboardModes';\nimport EditItemActions from './EditItemActions';\nimport PrintItemInfo from './PrintItemInfo';\nimport classes from './styles/ItemHeader.module.css';\nimport ViewItemActions from './ViewItemActions';\n\nconst getItemActionsMap = isShortened => {\n  return {\n    [VIEW]: ViewItemActions,\n    [EDIT]: EditItemActions,\n    [PRINT_LAYOUT]: isShortened ? PrintItemInfo : null\n  };\n};\n\nconst ItemHeader = /*#__PURE__*/React.forwardRef(({\n  dashboardMode,\n  title,\n  isShortened,\n  ...rest\n}, ref) => {\n  const Actions = getItemActionsMap(isShortened)[dashboardMode];\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.itemHeaderWrap,\n    ref: ref\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    className: classes.itemTitle\n  }, title), Actions ? /*#__PURE__*/React.createElement(Actions, rest) : null);\n});\nItemHeader.displayName = 'ItemHeader';\nItemHeader.propTypes = {\n  dashboardMode: PropTypes.string,\n  isShortened: PropTypes.bool,\n  title: PropTypes.string\n};\nexport default connect(null, null, null, {\n  forwardRef: true\n})(ItemHeader);","import { useD2 } from '@dhis2/app-runtime-adapter-d2';\nimport { Divider, colors, spacers, IconQuestion24 } from '@dhis2/ui';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport { FILTER_ORG_UNIT } from '../../../actions/itemFilters';\nimport { EDIT, isEditMode } from '../../../modules/dashboardModes';\nimport { sGetItemFiltersRoot, DEFAULT_STATE_ITEM_FILTERS } from '../../../reducers/itemFilters';\nimport ItemHeader from '../ItemHeader/ItemHeader';\n\nconst getIframeSrc = (appDetails, item, itemFilters) => {\n  let iframeSrc = `${appDetails.launchUrl}?dashboardItemId=${item.id}`;\n\n  if (itemFilters[FILTER_ORG_UNIT] && itemFilters[FILTER_ORG_UNIT].length) {\n    const ouIds = itemFilters[FILTER_ORG_UNIT].map(ouFilter => ouFilter.path.split('/').slice(-1)[0]);\n    iframeSrc += `&userOrgUnit=${ouIds.join(',')}`;\n  }\n\n  return iframeSrc;\n};\n\nconst AppItem = ({\n  dashboardMode,\n  item,\n  itemFilters\n}) => {\n  var _appDetails, _appDetails$settings, _appDetails$settings$;\n\n  const {\n    d2\n  } = useD2();\n  let appDetails;\n  const appKey = item.appKey;\n\n  if (appKey) {\n    appDetails = d2.system.installedApps.find(app => app.key === appKey);\n  }\n\n  const hideTitle = ((_appDetails = appDetails) === null || _appDetails === void 0 ? void 0 : (_appDetails$settings = _appDetails.settings) === null || _appDetails$settings === void 0 ? void 0 : (_appDetails$settings$ = _appDetails$settings.dashboardWidget) === null || _appDetails$settings$ === void 0 ? void 0 : _appDetails$settings$.hideTitle) && dashboardMode !== EDIT;\n  return appDetails && appDetails.name && appDetails.launchUrl ? /*#__PURE__*/React.createElement(React.Fragment, null, !hideTitle && /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(ItemHeader, {\n    title: appDetails.name,\n    itemId: item.id,\n    dashboardMode: dashboardMode,\n    isShortened: item.shortened\n  }), /*#__PURE__*/React.createElement(Divider, {\n    margin: `0 0 ${spacers.dp4} 0`\n  })), /*#__PURE__*/React.createElement(\"iframe\", {\n    title: appDetails.name,\n    src: getIframeSrc(appDetails, item, itemFilters),\n    className: !hideTitle ? 'dashboard-item-content' : 'dashboard-item-content-hidden-title',\n    style: {\n      border: 'none'\n    }\n  })) : /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(ItemHeader, {\n    title: `${appKey} app not found`\n  }), /*#__PURE__*/React.createElement(Divider, {\n    margin: `0 0 ${spacers.dp4} 0`\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"dashboard-item-content\",\n    style: {\n      display: 'flex',\n      justifyContent: 'center',\n      alignItems: 'center',\n      height: '90%'\n    }\n  }, /*#__PURE__*/React.createElement(IconQuestion24, {\n    color: colors.grey500\n  })));\n};\n\nAppItem.propTypes = {\n  dashboardMode: PropTypes.string,\n  item: PropTypes.object,\n  itemFilters: PropTypes.object\n};\n\nconst mapStateToProps = (state, ownProps) => {\n  const itemFilters = !isEditMode(ownProps.dashboardMode) ? sGetItemFiltersRoot(state) : DEFAULT_STATE_ITEM_FILTERS;\n  return {\n    itemFilters\n  };\n};\n\nexport default connect(mapStateToProps)(AppItem);","import { useConfig } from '@dhis2/app-runtime';\nimport i18n from '@dhis2/d2-i18n';\nimport { Divider, IconFileDocument16, colors, spacers } from '@dhis2/ui';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport { acUpdateDashboardItem, acRemoveDashboardItem } from '../../../actions/editDashboard';\nimport { isEditMode } from '../../../modules/dashboardModes';\nimport { itemTypeMap, getItemUrl } from '../../../modules/itemTypes';\nimport { orArray } from '../../../modules/util';\nimport ItemHeader from '../ItemHeader/ItemHeader';\nimport classes from './Item.module.css';\n\nconst getItemTitle = item => itemTypeMap[item.type].pluralTitle;\n\nconst getContentItems = item => orArray(item[itemTypeMap[item.type].propName]).filter((item, index, array) => array.findIndex(el => el.id === item.id) === index);\n\nconst ListItem = ({\n  item,\n  dashboardMode,\n  removeItem,\n  updateItem\n}) => {\n  const {\n    baseUrl\n  } = useConfig();\n  const contentItems = getContentItems(item);\n\n  const updateDashboardItem = content => {\n    const listItemType = itemTypeMap[item.type].propName;\n    const newContent = item[listItemType].filter(item => item.id !== content.id);\n\n    if (newContent.length) {\n      item[listItemType] = newContent;\n      updateItem(item);\n    } else {\n      removeItem(item);\n    }\n  };\n\n  const getLink = contentItem => {\n    const removeButton = /*#__PURE__*/React.createElement(\"button\", {\n      className: classes.removeButton,\n      onClick: () => updateDashboardItem(contentItem)\n    }, i18n.t('Remove'));\n    return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"a\", {\n      className: classes.link,\n      style: {\n        color: colors.grey900\n      },\n      href: getItemUrl(item.type, contentItem, baseUrl)\n    }, contentItem.name), isEditMode(dashboardMode) ? removeButton : null);\n  };\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(ItemHeader, {\n    title: getItemTitle(item),\n    itemId: item.id,\n    dashboardMode: dashboardMode,\n    isShortened: item.shortened\n  }), /*#__PURE__*/React.createElement(Divider, {\n    margin: `0 0 ${spacers.dp4} 0`\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"dashboard-item-content\"\n  }, /*#__PURE__*/React.createElement(\"ul\", {\n    className: classes.list\n  }, contentItems.map(contentItem => /*#__PURE__*/React.createElement(\"li\", {\n    className: classes.item,\n    key: contentItem.id\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    className: classes.itemContent\n  }, /*#__PURE__*/React.createElement(IconFileDocument16, {\n    color: colors.grey600\n  }), getLink(contentItem)))))));\n};\n\nListItem.propTypes = {\n  dashboardMode: PropTypes.string,\n  item: PropTypes.object,\n  removeItem: PropTypes.func,\n  updateItem: PropTypes.func\n};\nexport default connect(null, {\n  removeItem: acRemoveDashboardItem,\n  updateItem: acUpdateDashboardItem\n})(ListItem);","export const userSettingsQuery = {\n  resource: 'userSettings',\n  params: {\n    key: ['keyDbLocale', 'keyUiLocale', 'keyAnalysisDisplayProperty']\n  }\n};","import { useDataEngine } from '@dhis2/app-runtime';\nimport PropTypes from 'prop-types';\nimport React, { useContext, useState, useEffect, createContext } from 'react';\nimport { userSettingsQuery } from '../api/userSettings';\nexport const UserSettingsCtx = /*#__PURE__*/createContext({});\n\nconst UserSettingsProvider = ({\n  children\n}) => {\n  const [settings, setSettings] = useState([]);\n  const engine = useDataEngine();\n  useEffect(() => {\n    async function fetchData() {\n      const {\n        userSettings\n      } = await engine.query({\n        userSettings: userSettingsQuery\n      });\n      setSettings({ ...userSettings,\n        displayProperty: userSettings.keyAnalysisDisplayProperty\n      });\n    }\n\n    fetchData();\n  }, []);\n  return /*#__PURE__*/React.createElement(UserSettingsCtx.Provider, {\n    value: {\n      userSettings: settings\n    }\n  }, children);\n};\n\nUserSettingsProvider.propTypes = {\n  children: PropTypes.node\n};\nexport default UserSettingsProvider;\nexport const useUserSettings = () => useContext(UserSettingsCtx);","import { useConfig } from '@dhis2/app-runtime';\nimport i18n from '@dhis2/d2-i18n';\nimport { Divider, spacers } from '@dhis2/ui';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport { isViewMode } from '../../../modules/dashboardModes';\nimport { sGetMessagesRoot } from '../../../reducers/messages';\nimport { useUserSettings } from '../../UserSettingsProvider';\nimport ItemHeader from '../ItemHeader/ItemHeader';\nimport { getFormattedDate } from './getFormattedDate';\nimport classes from './styles/Item.module.css';\nimport './MessagesItem.css';\nconst PRIVATE = 'PRIVATE';\nconst messageTypes = {\n  [PRIVATE]: 'Private',\n  VALIDATION_RESULT: 'Validation',\n  TICKET: 'Ticket',\n  SYSTEM: 'System'\n};\n\nconst MessagesItem = ({\n  messages,\n  item,\n  dashboardMode\n}) => {\n  const {\n    baseUrl\n  } = useConfig();\n  const {\n    userSettings\n  } = useUserSettings();\n\n  const getMessageHref = msg => {\n    const msgIdentifier = msg ? `#/${msg.messageType}/${msg.id}` : '';\n    return `${baseUrl}/dhis-web-messaging/${msgIdentifier}`;\n  };\n\n  const getMessageSender = msg => {\n    const latestMsg = msg.messages.slice(-1)[0];\n    return latestMsg.sender ? latestMsg.sender.displayName : '';\n  };\n\n  const getMessageItems = () => {\n    const modeClass = isViewMode(dashboardMode) ? 'view' : null;\n    return messages.map(msg => {\n      const redirectToMsg = () => {\n        if (isViewMode(dashboardMode)) {\n          document.location.href = getMessageHref(msg);\n        }\n      };\n\n      const sender = msg.messageType === PRIVATE ? getMessageSender(msg) : messageTypes[msg.messageType];\n      const readClass = !msg.read ? 'unread' : null;\n      const latestMsg = msg.messages.slice(-1)[0];\n      const msgDate = latestMsg.lastUpdated;\n      return /*#__PURE__*/React.createElement(\"li\", {\n        className: `message-item ${modeClass}`,\n        key: msg.id,\n        onClick: redirectToMsg\n      }, /*#__PURE__*/React.createElement(\"p\", {\n        className: `message-title ${readClass}`\n      }, msg.displayName, \" (\", msg.messageCount, \")\"), /*#__PURE__*/React.createElement(\"p\", {\n        className: classes.sender\n      }, sender, \" -\", ' ', getFormattedDate(msgDate, userSettings.keyUiLocale)), /*#__PURE__*/React.createElement(\"p\", {\n        className: classes.snippet\n      }, latestMsg.text));\n    });\n  };\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(ItemHeader, {\n    title: i18n.t('Messages'),\n    itemId: item.id,\n    dashboardMode: dashboardMode,\n    isShortened: item.shortened\n  }), /*#__PURE__*/React.createElement(Divider, {\n    margin: `0 0 ${spacers.dp4} 0`\n  }), messages.length > 0 && /*#__PURE__*/React.createElement(\"div\", {\n    className: \"dashboard-item-content\"\n  }, /*#__PURE__*/React.createElement(\"ul\", {\n    className: classes.list\n  }, getMessageItems()), /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.seeAll\n  }, /*#__PURE__*/React.createElement(\"a\", {\n    href: getMessageHref()\n  }, i18n.t('See all messages')))));\n};\n\nMessagesItem.propTypes = {\n  dashboardMode: PropTypes.string,\n  item: PropTypes.object,\n  messages: PropTypes.array\n};\n\nconst mapStateToProps = state => {\n  return {\n    messages: Object.values(sGetMessagesRoot(state))\n  };\n};\n\nconst MessagesContainer = connect(mapStateToProps, null)(MessagesItem);\nexport default MessagesContainer;","import i18n from '@dhis2/d2-i18n';\nimport { colors, IconQuestion24 } from '@dhis2/ui';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport ItemHeader from '../ItemHeader/ItemHeader';\n\nconst NotSupportedItem = ({\n  item,\n  dashboardMode\n}) => {\n  const message = item.type ? i18n.t('Item type \"{{type}}\" is not supported', {\n    type: item.type\n  }) : i18n.t('The item type is missing');\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(ItemHeader, {\n    itemId: item.id,\n    dashboardMode: dashboardMode,\n    isShortened: item.shortened\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      display: 'flex',\n      flexDirection: 'column',\n      justifyContent: 'center',\n      alignItems: 'center',\n      height: '90%'\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", null, message), /*#__PURE__*/React.createElement(IconQuestion24, {\n    color: colors.grey500\n  })));\n};\n\nNotSupportedItem.propTypes = {\n  dashboardMode: PropTypes.string,\n  item: PropTypes.object\n};\nexport default NotSupportedItem;","import React from 'react';\n\nconst PageBreakItem = () => /*#__PURE__*/React.createElement(\"div\", null);\n\nexport default PageBreakItem;","import i18n from '@dhis2/d2-i18n';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport { sGetIsEditing } from '../../../reducers/editDashboard';\nimport { sGetNamedItemFilters } from '../../../reducers/itemFilters';\nimport { sGetPrintDashboardName, sGetPrintDashboardDescription } from '../../../reducers/printDashboard';\nimport { sGetSelectedDisplayName, sGetSelectedDisplayDescription } from '../../../reducers/selected';\nimport { sGetShowDescription } from '../../../reducers/showDescription';\nimport classes from './styles/Item.module.css';\n\nconst PrintTitlePageItem = ({\n  name,\n  description,\n  itemFilters,\n  showDescription\n}) => {\n  const getItemFilterList = () => {\n    const listItems = itemFilters.map(({\n      name,\n      values\n    }) => /*#__PURE__*/React.createElement(\"li\", {\n      className: classes.filterListItem,\n      key: name\n    }, name, \": \", values.map(val => val.name).join(', ')));\n    return /*#__PURE__*/React.createElement(\"ul\", {\n      className: classes.filterList\n    }, listItems);\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.titlePage\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    className: classes.name\n  }, name), showDescription && description && /*#__PURE__*/React.createElement(\"p\", {\n    className: classes.description\n  }, description), itemFilters.length > 0 && /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"p\", {\n    className: classes.filterTitle\n  }, i18n.t('Filters applied')), getItemFilterList()));\n};\n\nPrintTitlePageItem.propTypes = {\n  description: PropTypes.string,\n  itemFilters: PropTypes.array,\n  name: PropTypes.string,\n  showDescription: PropTypes.bool\n};\nPrintTitlePageItem.defaultProps = {\n  description: '',\n  name: '',\n  showDescription: false\n};\n\nconst mapStateToProps = state => {\n  const isEditMode = sGetIsEditing(state);\n  const name = isEditMode ? sGetPrintDashboardName(state) || i18n.t('Untitled dashboard') : sGetSelectedDisplayName(state);\n  const description = isEditMode ? sGetPrintDashboardDescription(state) : sGetSelectedDisplayDescription(state);\n  return {\n    name,\n    description,\n    itemFilters: sGetNamedItemFilters(state),\n    showDescription: sGetShowDescription(state)\n  };\n};\n\nexport default connect(mapStateToProps)(PrintTitlePageItem);","import i18n from '@dhis2/d2-i18n';\nimport { colors } from '@dhis2/ui';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport ItemHeader from '../ItemHeader/ItemHeader';\nconst style = {\n  margin: '21px 28px',\n  fontSize: '14px',\n  lineHeight: '18px',\n  color: colors.grey600\n};\n\nconst SpacerItem = props => {\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(ItemHeader, {\n    title: i18n.t('Spacer'),\n    itemId: props.item.id,\n    dashboardMode: props.dashboardMode,\n    isShortened: props.item.shortened\n  }), /*#__PURE__*/React.createElement(\"p\", {\n    style: style\n  }, i18n.t('Use a spacer to create empty vertical space between other dashboard items.')));\n};\n\nSpacerItem.propTypes = {\n  dashboardMode: PropTypes.string,\n  item: PropTypes.object\n};\nexport default SpacerItem;","import i18n from '@dhis2/d2-i18n';\nimport { Parser as RichTextParser, Editor as RichTextEditor } from '@dhis2/d2-ui-rich-text';\nimport { Divider, TextArea, spacers } from '@dhis2/ui';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport { acUpdateDashboardItem } from '../../../actions/editDashboard';\nimport { isEditMode, PRINT_LAYOUT } from '../../../modules/dashboardModes';\nimport { sGetEditDashboardItems } from '../../../reducers/editDashboard';\nimport { sGetIsPrinting, sGetPrintDashboardItems } from '../../../reducers/printDashboard';\nimport { sGetSelectedDashboardItems } from '../../../reducers/selected';\nimport ItemHeader from '../ItemHeader/ItemHeader';\nimport PrintItemInfo from '../ItemHeader/PrintItemInfo';\nconst style = {\n  textDiv: {\n    padding: '10px',\n    whiteSpace: 'pre-line',\n    lineHeight: '20px'\n  },\n  textField: {\n    fontSize: '14px',\n    fontStretch: 'normal',\n    width: '90%',\n    margin: '0 auto',\n    display: 'block',\n    lineHeight: '24px'\n  },\n  container: {\n    marginBottom: '20px',\n    marginTop: '20px'\n  }\n};\n\nconst TextItem = props => {\n  const {\n    item,\n    dashboardMode,\n    text,\n    acUpdateDashboardItem\n  } = props;\n\n  const onChangeText = text => {\n    const updatedItem = { ...item,\n      text\n    };\n    acUpdateDashboardItem(updatedItem);\n  };\n\n  const viewItem = () => {\n    const textDivStyle = Object.assign({}, style.textField, style.textDiv);\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"dashboard-item-content\",\n      style: style.container\n    }, /*#__PURE__*/React.createElement(RichTextParser, {\n      style: textDivStyle\n    }, text));\n  };\n\n  const editItem = () => {\n    return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(ItemHeader, {\n      title: i18n.t('Text item'),\n      itemId: item.id,\n      dashboardMode: dashboardMode\n    }), /*#__PURE__*/React.createElement(Divider, {\n      margin: `0 0 ${spacers.dp4} 0`\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"dashboard-item-content\"\n    }, /*#__PURE__*/React.createElement(RichTextEditor, {\n      onEdit: event => onChangeText(event.target.value)\n    }, /*#__PURE__*/React.createElement(TextArea, {\n      rows: 30,\n      value: text,\n      placeholder: i18n.t('Add text here'),\n      onChange: ({\n        value\n      }) => onChangeText(value)\n    }))));\n  };\n\n  const printItem = () => {\n    const textDivStyle = Object.assign({}, style.textField, style.textDiv);\n    return /*#__PURE__*/React.createElement(React.Fragment, null, props.item.shortened ? /*#__PURE__*/React.createElement(PrintItemInfo, null) : null, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"dashboard-item-content\",\n      style: style.container\n    }, /*#__PURE__*/React.createElement(RichTextParser, {\n      style: textDivStyle\n    }, text)));\n  };\n\n  let textItem;\n\n  if (isEditMode(dashboardMode)) {\n    textItem = editItem;\n  } else if (dashboardMode === PRINT_LAYOUT) {\n    textItem = printItem;\n  } else {\n    textItem = viewItem;\n  }\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, textItem());\n};\n\nconst mapStateToProps = (state, ownProps) => {\n  const isPrintPreview = sGetIsPrinting(state);\n  let items;\n\n  if (isPrintPreview) {\n    items = sGetPrintDashboardItems(state);\n  } else if (isEditMode(ownProps.dashboardMode)) {\n    items = sGetEditDashboardItems(state);\n  } else {\n    items = sGetSelectedDashboardItems(state);\n  }\n\n  const item = items.find(item => item.id === ownProps.item.id);\n  return {\n    text: item ? item.text : ''\n  };\n};\n\nTextItem.propTypes = {\n  acUpdateDashboardItem: PropTypes.func,\n  dashboardMode: PropTypes.string,\n  item: PropTypes.object,\n  text: PropTypes.string\n};\nexport default connect(mapStateToProps, {\n  acUpdateDashboardItem\n})(TextItem);","import { getInstance } from 'd2';\nexport const apiGetDataStatistics = async (dataEngine, username) => {\n  const getDataStatisticsQuery = {\n    resource: 'dataStatistics/favorites',\n    params: {\n      eventType: 'DASHBOARD_VIEW',\n      pageSize: 6,\n      ...(username ? {\n        username\n      } : {})\n    }\n  };\n\n  try {\n    const mostViewedDashboardsResult = await dataEngine.query({\n      dashboard: getDataStatisticsQuery\n    });\n    return mostViewedDashboardsResult;\n  } catch (error) {\n    console.log('Error: ', error);\n  }\n};\nexport const apiPostDataStatistics = async (eventType, id) => {\n  const d2 = await getInstance();\n  const url = `dataStatistics?eventType=${eventType}&favorite=${id}`;\n  d2.Api.getApi().post(url);\n};","import isObject from 'lodash/isObject';\nimport { itemTypeMap } from './itemTypes';\nexport const getVisualizationFromItem = item => {\n  var _itemTypeMap$item$typ;\n\n  if (!isObject(item)) {\n    return null;\n  }\n\n  const propName = (_itemTypeMap$item$typ = itemTypeMap[item.type]) === null || _itemTypeMap$item$typ === void 0 ? void 0 : _itemTypeMap$item$typ.propName;\n  return item[propName] || item.visualization || item.map || item.eventReport || item.eventChart || {};\n};\nexport const getVisualizationId = item => getVisualizationFromItem(item).id;\nexport const getVisualizationName = item => getVisualizationFromItem(item).name;","import { getInstance } from 'd2';\nimport { getVisualizationId } from '../modules/item';\nimport { getEndPointName, MAP } from '../modules/itemTypes';\nimport { getMapFields, getFavoriteFields } from './metadata';\nexport const apiFetchVisualization = async item => {\n  const id = getVisualizationId(item);\n  const fields = item.type === MAP ? getMapFields() : getFavoriteFields({\n    withDimensions: true,\n    withOptions: true\n  });\n  const d2 = await getInstance();\n  return await d2.Api.getApi().get(`${getEndPointName(item.type)}/${id}`, {\n    fields\n  });\n};","export const DEFAULT_SETTINGS = {\n  keyDashboardContextMenuItemOpenInRelevantApp: true,\n  keyDashboardContextMenuItemShowInterpretationsAndDetails: true,\n  keyDashboardContextMenuItemSwitchViewType: true,\n  keyDashboardContextMenuItemViewFullscreen: true,\n  keyGatherAnalyticalObjectStatisticsInDashboardViews: false,\n  startModuleEnableLightweight: false\n};\nconst SYSTEM_SETTINGS = ['keyDashboardContextMenuItemOpenInRelevantApp', 'keyDashboardContextMenuItemShowInterpretationsAndDetails', 'keyDashboardContextMenuItemSwitchViewType', 'keyDashboardContextMenuItemViewFullscreen', 'keyGatherAnalyticalObjectStatisticsInDashboardViews', 'keyHideBiMonthlyPeriods', 'keyHideDailyPeriods', 'keyHideMonthlyPeriods', 'keyHideWeeklyPeriods', 'keyHideBiWeeklyPeriods', 'startModuleEnableLightweight'];\nconst SYSTEM_SETTINGS_REMAPPINGS = {\n  keyDashboardContextMenuItemOpenInRelevantApp: 'allowVisOpenInApp',\n  keyDashboardContextMenuItemShowInterpretationsAndDetails: 'allowVisShowInterpretations',\n  keyDashboardContextMenuItemSwitchViewType: 'allowVisViewAs',\n  keyDashboardContextMenuItemViewFullscreen: 'allowVisFullscreen',\n  keyHideBiMonthlyPeriods: 'hideBiMonthlyPeriods',\n  keyHideDailyPeriods: 'hideDailyPeriods',\n  keyHideMonthlyPeriods: 'hideMonthlyPeriods',\n  keyHideWeeklyPeriods: 'hideWeeklyPeriods',\n  keyHideBiWeeklyPeriods: 'hideBiWeeklyPeriods'\n};\nexport const renameSystemSettings = settings => {\n  return Object.keys(settings).reduce((mapped, key) => {\n    mapped[SYSTEM_SETTINGS_REMAPPINGS[key] || key] = settings[key];\n    return mapped;\n  }, {});\n};\nexport const systemSettingsQuery = {\n  resource: 'systemSettings',\n  params: {\n    key: SYSTEM_SETTINGS\n  }\n};","import { useDataEngine } from '@dhis2/app-runtime';\nimport PropTypes from 'prop-types';\nimport React, { useContext, useState, useEffect, createContext } from 'react';\nimport { systemSettingsQuery, renameSystemSettings, DEFAULT_SETTINGS } from '../api/systemSettings';\nexport const SystemSettingsCtx = /*#__PURE__*/createContext({});\n\nconst SystemSettingsProvider = ({\n  children\n}) => {\n  const [settings, setSettings] = useState(null);\n  const engine = useDataEngine();\n  useEffect(() => {\n    async function fetchData() {\n      const {\n        systemSettings\n      } = await engine.query({\n        systemSettings: systemSettingsQuery\n      }, {\n        onError: error => {\n          console.log('Error', 'systemSettingsQuery', error);\n          setSettings({});\n        }\n      });\n      setSettings(Object.assign({}, renameSystemSettings(DEFAULT_SETTINGS), renameSystemSettings(systemSettings)));\n    }\n\n    fetchData();\n  }, []);\n  return /*#__PURE__*/React.createElement(SystemSettingsCtx.Provider, {\n    value: {\n      systemSettings: settings\n    }\n  }, children);\n};\n\nSystemSettingsProvider.propTypes = {\n  children: PropTypes.node\n};\nexport default SystemSettingsProvider;\nexport const useSystemSettings = () => useContext(SystemSettingsCtx);","import { colors } from '@dhis2/ui';\nimport React from 'react';\nexport const Warning = () => /*#__PURE__*/React.createElement(\"svg\", {\n  xmlns: \"http://www.w3.org/2000/svg\",\n  height: \"24\",\n  viewBox: \"0 0 24 24\",\n  width: \"24\",\n  fill: colors.grey600\n}, /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M0 0h24v24H0z\",\n  fill: \"none\"\n}), /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M1 21h22L12 2 1 21zm12-3h-2v-2h2v2zm0-4h-2v-4h2v4z\"\n}));","import PropTypes from 'prop-types';\nimport React from 'react';\nimport { Warning } from './assets/icons';\nimport classes from './styles/FatalErrorBoundary.module.css';\n\nclass FatalErrorBoundary extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      errorFound: false\n    };\n  }\n\n  componentDidCatch(error, info) {\n    this.setState({\n      errorFound: true\n    });\n    console.log('error: ', error);\n    console.log('info: ', info);\n    this.props.onFatalError();\n  }\n\n  render() {\n    if (this.state.errorFound) {\n      return /*#__PURE__*/React.createElement(\"p\", {\n        className: classes.container\n      }, /*#__PURE__*/React.createElement(\"span\", {\n        className: classes.icon\n      }, /*#__PURE__*/React.createElement(Warning, null)), /*#__PURE__*/React.createElement(\"span\", {\n        className: classes.message\n      }, this.props.message));\n    }\n\n    return this.props.children;\n  }\n\n}\n\nFatalErrorBoundary.propTypes = {\n  children: PropTypes.node,\n  message: PropTypes.string,\n  onFatalError: PropTypes.func\n};\nFatalErrorBoundary.defaultProps = {\n  onFatalError: Function.prototype\n};\nexport default FatalErrorBoundary;","export const getGridItemDomElementClassName = itemId => `reactgriditem-${itemId}`;","import { getGridItemDomElementClassName } from '../../../modules/getGridItemDomElementClassName';\nexport const getGridItemElement = itemId => document.querySelector(`.${getGridItemDomElementClassName(itemId)}`);","import { getGridItemDomElementClassName } from '../../../modules/getGridItemDomElementClassName';\nexport const isElementFullscreen = itemId => {\n  const fullscreenElement = document.fullscreenElement || document.webkitFullscreenElement;\n  return fullscreenElement === null || fullscreenElement === void 0 ? void 0 : fullscreenElement.classList.contains(getGridItemDomElementClassName(itemId));\n};","import { useOnlineStatus } from '@dhis2/app-runtime';\nimport i18n from '@dhis2/d2-i18n';\nimport { Tooltip as UiTooltip } from '@dhis2/ui';\nimport cx from 'classnames';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport classes from './styles/Tooltip.module.css';\n\nconst Tooltip = ({\n  disabledWhenOffline,\n  disabled,\n  content,\n  children\n}) => {\n  const {\n    offline\n  } = useOnlineStatus();\n  const notAllowed = disabled || disabledWhenOffline && offline;\n  return /*#__PURE__*/React.createElement(UiTooltip, {\n    content: content || i18n.t('Not available offline'),\n    openDelay: 200,\n    closeDelay: 100\n  }, ({\n    onMouseOver,\n    onMouseOut,\n    ref\n  }) => /*#__PURE__*/React.createElement(\"span\", {\n    className: cx(classes.span, notAllowed && classes.notAllowed),\n    onMouseOver: () => notAllowed && onMouseOver(),\n    onMouseOut: () => notAllowed && onMouseOut(),\n    ref: ref\n  }, children));\n};\n\nTooltip.propTypes = {\n  children: PropTypes.node,\n  content: PropTypes.string,\n  disabled: PropTypes.bool,\n  disabledWhenOffline: PropTypes.bool\n};\nTooltip.defaultProps = {\n  disabled: false,\n  disabledWhenOffline: true\n};\nexport default Tooltip;","function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nimport { useOnlineStatus } from '@dhis2/app-runtime';\nimport i18n from '@dhis2/d2-i18n';\nimport { MenuItem } from '@dhis2/ui';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport OfflineTooltip from './OfflineTooltip';\n\nconst MenuItemWithTooltip = ({\n  disabledWhenOffline,\n  tooltip,\n  label,\n  disabled,\n  ...rest\n}) => {\n  const {\n    offline\n  } = useOnlineStatus();\n  const tooltipContent = disabledWhenOffline && offline ? i18n.t('Not available offline') : tooltip;\n  const notAllowed = disabled || disabledWhenOffline && offline;\n  return /*#__PURE__*/React.createElement(MenuItem, _extends({\n    dense: true,\n    disabled: notAllowed,\n    label: /*#__PURE__*/React.createElement(OfflineTooltip, {\n      content: tooltipContent,\n      disabled: disabled,\n      disabledWhenOffline: disabledWhenOffline\n    }, label)\n  }, rest));\n};\n\nMenuItemWithTooltip.propTypes = {\n  disabled: PropTypes.bool,\n  disabledWhenOffline: PropTypes.bool,\n  label: PropTypes.string,\n  tooltip: PropTypes.string\n};\nMenuItemWithTooltip.defaultProps = {\n  disabled: false,\n  disabledWhenOffline: true,\n  tooltip: ''\n};\nexport default MenuItemWithTooltip;","export const THEMATIC_LAYER = 'thematic';\n\nconst getThematicMapViews = map => map.mapViews && map.mapViews.find(mv => mv.layer.includes(THEMATIC_LAYER));\n\nexport default getThematicMapViews;","import i18n from '@dhis2/d2-i18n';\nimport { IconVisualizationColumn16, IconTable16, IconWorld16 } from '@dhis2/ui';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport { CHART, MAP, REPORT_TABLE, EVENT_CHART, EVENT_REPORT, isTrackerDomainType, hasMapView } from '../../../../modules/itemTypes';\nimport MenuItem from '../../../MenuItemWithTooltip';\nimport getThematicMapViews from '../getThematicMapViews';\n\nconst ViewAsMenuItems = ({\n  type,\n  activeType,\n  visualization,\n  onActiveTypeChanged\n}) => {\n  const isTrackerType = isTrackerDomainType(type);\n\n  const onViewTable = () => onActiveTypeChanged(isTrackerType ? EVENT_REPORT : REPORT_TABLE);\n\n  const onViewChart = () => onActiveTypeChanged(isTrackerType ? EVENT_CHART : CHART);\n\n  const onViewMap = () => onActiveTypeChanged(MAP);\n\n  const notSupported = type === MAP && !getThematicMapViews(visualization);\n  return /*#__PURE__*/React.createElement(React.Fragment, null, activeType !== CHART && activeType !== EVENT_CHART && /*#__PURE__*/React.createElement(MenuItem, {\n    tooltip: notSupported ? i18n.t(\"This map can't be displayed as a chart\") : null,\n    label: i18n.t('View as Chart'),\n    onClick: onViewChart,\n    disabled: notSupported,\n    icon: /*#__PURE__*/React.createElement(IconVisualizationColumn16, null)\n  }), activeType !== REPORT_TABLE && activeType !== EVENT_REPORT && /*#__PURE__*/React.createElement(MenuItem, {\n    tooltip: notSupported ? i18n.t(\"This map can't be displayed as a table\") : null,\n    label: i18n.t('View as Table'),\n    onClick: onViewTable,\n    disabled: notSupported,\n    icon: /*#__PURE__*/React.createElement(IconTable16, null)\n  }), hasMapView(type) && activeType !== MAP && /*#__PURE__*/React.createElement(MenuItem, {\n    label: i18n.t('View as Map'),\n    onClick: onViewMap,\n    icon: /*#__PURE__*/React.createElement(IconWorld16, null)\n  }));\n};\n\nViewAsMenuItems.propTypes = {\n  activeType: PropTypes.string,\n  type: PropTypes.string,\n  visualization: PropTypes.object,\n  onActiveTypeChanged: PropTypes.func\n};\nexport default ViewAsMenuItems;","import { isSingleValue, isYearOverYear, VIS_TYPE_GAUGE, VIS_TYPE_PIE } from '@dhis2/analytics';\nimport { useConfig } from '@dhis2/app-runtime';\nimport i18n from '@dhis2/d2-i18n';\nimport { colors, Button, Menu, Popover, Divider, IconFullscreen16, IconFullscreenExit16, IconLaunch16, IconMessages16, IconMore24 } from '@dhis2/ui';\nimport PropTypes from 'prop-types';\nimport React, { useState, createRef } from 'react';\nimport { getVisualizationId } from '../../../../modules/item';\nimport { getAppName, itemTypeMap, getItemTypeForVis } from '../../../../modules/itemTypes';\nimport { isSmallScreen } from '../../../../modules/smallScreen';\nimport MenuItem from '../../../MenuItemWithTooltip';\nimport { useSystemSettings } from '../../../SystemSettingsProvider';\nimport { useWindowDimensions } from '../../../WindowDimensionsProvider';\nimport { isElementFullscreen } from '../isElementFullscreen';\nimport ViewAsMenuItems from './ViewAsMenuItems';\n\nconst ItemContextMenu = props => {\n  const [menuIsOpen, setMenuIsOpen] = useState(false);\n  const {\n    width\n  } = useWindowDimensions();\n  const {\n    baseUrl\n  } = useConfig();\n  const {\n    allowVisOpenInApp,\n    allowVisShowInterpretations,\n    allowVisViewAs,\n    allowVisFullscreen\n  } = useSystemSettings().systemSettings;\n  const fullscreenAllowed = props.fullscreenSupported && allowVisFullscreen;\n  const noOptionsEnabled = !allowVisOpenInApp && !allowVisShowInterpretations && !allowVisViewAs && !fullscreenAllowed;\n\n  if (noOptionsEnabled || !allowVisOpenInApp && props.loadItemFailed) {\n    return null;\n  }\n\n  const toggleInterpretations = () => {\n    props.onToggleFooter();\n\n    if (menuIsOpen) {\n      closeMenu();\n    }\n  };\n\n  const toggleFullscreen = () => {\n    props.onToggleFullscreen();\n    closeMenu();\n  };\n\n  const onActiveTypeChanged = type => {\n    closeMenu();\n    props.onSelectActiveType(type);\n  };\n\n  const openMenu = () => {\n    setMenuIsOpen(true);\n  };\n\n  const closeMenu = () => setMenuIsOpen(false);\n\n  const {\n    item,\n    visualization,\n    loadItemFailed,\n    activeType\n  } = props;\n  const type = visualization.type || item.type;\n  const canViewAs = allowVisViewAs && !isSingleValue(type) && !isYearOverYear(type) && type !== VIS_TYPE_GAUGE && type !== VIS_TYPE_PIE;\n  const interpretationMenuLabel = props.activeFooter ? i18n.t(`Hide details and interpretations`) : i18n.t(`Show details and interpretations`);\n  const buttonRef = /*#__PURE__*/createRef();\n  const itemHref = `${baseUrl}/${itemTypeMap[item.type].appUrl(getVisualizationId(item))}`;\n  return isElementFullscreen(item.id) ? /*#__PURE__*/React.createElement(Button, {\n    small: true,\n    secondary: true,\n    onClick: props.onToggleFullscreen\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    \"data-testid\": \"exit-fullscreen-button\"\n  }, /*#__PURE__*/React.createElement(IconFullscreenExit16, {\n    color: colors.grey600\n  }))) : /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\n    ref: buttonRef\n  }, /*#__PURE__*/React.createElement(Button, {\n    small: true,\n    secondary: true,\n    onClick: openMenu,\n    dataTest: \"dashboarditem-menu-button\",\n    icon: /*#__PURE__*/React.createElement(IconMore24, {\n      color: colors.grey700\n    })\n  })), menuIsOpen && /*#__PURE__*/React.createElement(Popover, {\n    reference: buttonRef,\n    placement: \"auto-start\",\n    arrow: false,\n    onClickOutside: closeMenu\n  }, /*#__PURE__*/React.createElement(Menu, {\n    dense: true\n  }, canViewAs && !loadItemFailed && /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(ViewAsMenuItems, {\n    type: getItemTypeForVis(item),\n    activeType: activeType,\n    onActiveTypeChanged: onActiveTypeChanged,\n    visualization: visualization\n  }), (allowVisShowInterpretations || allowVisOpenInApp && !isSmallScreen(width) || fullscreenAllowed) && /*#__PURE__*/React.createElement(\"span\", {\n    \"data-testid\": \"divider\"\n  }, /*#__PURE__*/React.createElement(Divider, null))), allowVisOpenInApp && !isSmallScreen(width) && /*#__PURE__*/React.createElement(MenuItem, {\n    icon: /*#__PURE__*/React.createElement(IconLaunch16, null),\n    disabledWhenOffline: false,\n    label: i18n.t('Open in {{appName}} app', {\n      appName: getAppName(item.type)\n    }),\n    href: itemHref,\n    target: \"_blank\"\n  }), allowVisShowInterpretations && !loadItemFailed && /*#__PURE__*/React.createElement(MenuItem, {\n    icon: /*#__PURE__*/React.createElement(IconMessages16, null),\n    label: interpretationMenuLabel,\n    onClick: toggleInterpretations\n  }), fullscreenAllowed && !loadItemFailed && /*#__PURE__*/React.createElement(MenuItem, {\n    disabledWhenOffline: false,\n    icon: /*#__PURE__*/React.createElement(IconFullscreen16, null),\n    label: i18n.t('View fullscreen'),\n    onClick: toggleFullscreen\n  }))));\n};\n\nItemContextMenu.propTypes = {\n  activeFooter: PropTypes.bool,\n  activeType: PropTypes.string,\n  fullscreenSupported: PropTypes.bool,\n  item: PropTypes.object,\n  loadItemFailed: PropTypes.bool,\n  visualization: PropTypes.object,\n  onSelectActiveType: PropTypes.func,\n  onToggleFooter: PropTypes.func,\n  onToggleFullscreen: PropTypes.func\n};\nexport default ItemContextMenu;","import { useOnlineStatus } from '@dhis2/app-runtime';\nimport { useD2 } from '@dhis2/app-runtime-adapter-d2';\nimport i18n from '@dhis2/d2-i18n';\nimport InterpretationsComponent from '@dhis2/d2-ui-interpretations';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport { getVisualizationId } from '../../../modules/item';\nimport FatalErrorBoundary from './FatalErrorBoundary';\nimport classes from './styles/ItemFooter.module.css';\n\nconst ItemFooter = props => {\n  const {\n    d2\n  } = useD2();\n  const {\n    offline\n  } = useOnlineStatus();\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.itemFooter,\n    \"data-test\": \"dashboarditem-footer\"\n  }, /*#__PURE__*/React.createElement(\"hr\", {\n    className: classes.line\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.scrollContainer\n  }, /*#__PURE__*/React.createElement(FatalErrorBoundary, {\n    message: i18n.t('There was a problem loading interpretations for this item')\n  }, /*#__PURE__*/React.createElement(InterpretationsComponent, {\n    d2: d2,\n    item: props.item,\n    type: props.item.type.toLowerCase(),\n    id: getVisualizationId(props.item),\n    appName: \"dashboard\",\n    isOffline: offline\n  }))));\n};\n\nItemFooter.propTypes = {\n  item: PropTypes.object.isRequired\n};\nexport default ItemFooter;","// Note that this ignores discrepancies in 'this', so shouldn't be used with bound functions\n// This is useful instead of lodash/memoize when we only need to memoize a single value\n// Inspiration: https://github.com/alexreardon/memoize-one\nconst memoizeOne = fn => {\n  let lastArgs = undefined;\n  let lastValue = undefined;\n  return (...args) => {\n    if (lastArgs && args.length === lastArgs.length && args.every((arg, i) => arg === lastArgs[i])) {\n      return lastValue;\n    }\n\n    lastArgs = args;\n    lastValue = fn(...args);\n    return lastValue;\n  };\n};\n\nexport default memoizeOne;","import { CircularLoader } from '@dhis2/ui';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport classes from './styles/LoadingMask.module.css';\n\nconst LoadingMask = ({\n  style\n}) => {\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.center,\n    style: style\n  }, /*#__PURE__*/React.createElement(CircularLoader, null));\n};\n\nLoadingMask.propTypes = {\n  style: PropTypes.object\n};\nexport default LoadingMask;","import { useConfig } from '@dhis2/app-runtime';\nimport i18n from '@dhis2/d2-i18n';\nimport { colors } from '@dhis2/ui';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport { isPrintMode } from '../../../../modules/dashboardModes';\nimport { getVisualizationId } from '../../../../modules/item';\nimport { getAppName, itemTypeMap } from '../../../../modules/itemTypes';\nimport classes from './styles/VisualizationErrorMessage.module.css';\n\nconst getErrorIcon = () => /*#__PURE__*/React.createElement(\"svg\", {\n  height: \"96\",\n  viewBox: \"0 0 96 96\",\n  width: \"96\",\n  xmlns: \"http://www.w3.org/2000/svg\"\n}, /*#__PURE__*/React.createElement(\"g\", {\n  fill: colors.grey400,\n  transform: \"translate(3 3)\"\n}, /*#__PURE__*/React.createElement(\"path\", {\n  d: \"m40.5 73.5000001c0 2.4852813 2.0147186 4.5 4.5 4.5s4.5-2.0147187 4.5-4.5c0-2.4142734-1.9012365-4.3844892-4.2881643-4.4951021l-.2128322-.0048979c-2.4848234.0005384-4.4990035 2.0150507-4.4990035 4.5z\"\n}), /*#__PURE__*/React.createElement(\"path\", {\n  d: \"m48 60v-30c0-1.6568542-1.3431458-3-3-3s-3 1.3431458-3 3v30c0 1.6568542 1.3431458 3 3 3s3-1.3431458 3-3z\"\n}), /*#__PURE__*/React.createElement(\"path\", {\n  d: \"m45-2.99904788c3.8985931 0 7.4578604 2.21715778 9.1770339 5.71709169l37.8912554 77.19048409c1.3845546 2.8165473 1.2171646 6.1482722-.4427191 8.811863-1.6598833 2.6635901-4.5771005 4.2816904-7.7135702 4.2796124h-77.82201115c-3.13845856.002078-6.05567574-1.6160223-7.71555901-4.2796124-1.65988369-2.6635908-1.82727377-5.9953157-.44346379-8.8103471l37.89234295-77.19269833c1.7188306-3.49923557 5.2780979-5.71639335 9.176691-5.71639335zm0 6c-1.6106864 0-3.0811818.91600885-3.7909661 2.36100407l-37.89274459 77.19351591c-.47005356.9562122-.41322496 2.0873262.15030227 2.99161.56352731.9042839 1.5539177 1.4529206 2.62140842 1.4529206h77.8259889c1.0655018 0 2.0558922-.5486367 2.6194195-1.4529206.5635272-.9042838.6203558-2.0353978.1495577-2.9931259l-37.8916571-77.19130167c-.7101272-1.44569356-2.1806226-2.36170241-3.791309-2.36170241z\"\n})));\n\nconst VisualizationErrorMessage = ({\n  item,\n  dashboardMode\n}) => {\n  const {\n    baseUrl\n  } = useConfig();\n  const visHref = `${baseUrl}/${itemTypeMap[item.type].appUrl(getVisualizationId(item))}`;\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.center\n  }, getErrorIcon(), /*#__PURE__*/React.createElement(\"p\", {\n    className: classes.errorMessage\n  }, i18n.t('There was an error loading data for this item')), !isPrintMode(dashboardMode) ? /*#__PURE__*/React.createElement(\"p\", {\n    className: classes.appLink\n  }, /*#__PURE__*/React.createElement(\"a\", {\n    onClick: e => e.stopPropagation(),\n    target: \"_blank\",\n    rel: \"noopener noreferrer\",\n    href: visHref\n  }, i18n.t('Open this item in {{appName}}', {\n    appName: getAppName(item.type)\n  }))) : null);\n};\n\nVisualizationErrorMessage.propTypes = {\n  dashboardMode: PropTypes.string,\n  item: PropTypes.object\n};\nexport default VisualizationErrorMessage;","import PropTypes from 'prop-types';\nimport React, { Suspense, useState, useEffect, useCallback } from 'react';\nimport { useUserSettings } from '../../../UserSettingsProvider';\nimport LoadingMask from './LoadingMask';\nimport classes from './styles/DataVisualizerPlugin.module.css';\nimport VisualizationErrorMessage from './VisualizationErrorMessage';\nconst VisualizationPlugin = /*#__PURE__*/React.lazy(() => import(\n/* webpackChunkName: \"data-visualizer-plugin\" */\n\n/* webpackPrefetch: true */\n'@dhis2/data-visualizer-plugin'));\n\nconst DataVisualizerPlugin = ({\n  filterVersion,\n  item,\n  style,\n  visualization,\n  dashboardMode\n}) => {\n  const {\n    userSettings\n  } = useUserSettings();\n  const [visualizationLoaded, setVisualizationLoaded] = useState(false);\n  const [error, setError] = useState(false);\n  const onLoadingComplete = useCallback(() => setVisualizationLoaded(true), []);\n\n  const onError = () => setError(true);\n\n  useEffect(() => {\n    setError(false);\n  }, [filterVersion, visualization.type]);\n\n  if (error) {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      style: style\n    }, /*#__PURE__*/React.createElement(VisualizationErrorMessage, {\n      item: item,\n      dashboardMode: dashboardMode\n    }));\n  }\n\n  return /*#__PURE__*/React.createElement(Suspense, {\n    fallback: /*#__PURE__*/React.createElement(\"div\", null)\n  }, !visualizationLoaded && /*#__PURE__*/React.createElement(LoadingMask, {\n    style: style\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.wrapper\n  }, /*#__PURE__*/React.createElement(VisualizationPlugin, {\n    visualization: visualization,\n    forDashboard: true,\n    userSettings: userSettings,\n    style: style,\n    onLoadingComplete: onLoadingComplete,\n    onError: onError\n  })));\n};\n\nDataVisualizerPlugin.propTypes = {\n  dashboardMode: PropTypes.string,\n  filterVersion: PropTypes.string,\n  item: PropTypes.object,\n  style: PropTypes.object,\n  visualization: PropTypes.object\n};\nexport default DataVisualizerPlugin;","const getFilteredVisualization = (visualization, filters) => {\n  if (!Object.keys(filters).length) {\n    return visualization;\n  } // deep clone objects in filters to avoid changing the visualization in the Redux store\n\n\n  const visRows = visualization.rows.map(obj => ({ ...obj\n  }));\n  const visColumns = visualization.columns.map(obj => ({ ...obj\n  }));\n  const visFilters = visualization.filters.map(obj => ({ ...obj\n  }));\n  Object.keys(filters).forEach(dimensionId => {\n    if (filters[dimensionId]) {\n      let dimensionFound = false;\n      [visRows, visColumns, visFilters].forEach(dimensionObjects => dimensionObjects.filter(obj => obj.dimension === dimensionId).forEach(obj => {\n        dimensionFound = true;\n        obj.items = filters[dimensionId];\n      })); // add dimension to filters if not already present elsewhere\n\n      if (!dimensionFound) {\n        visFilters.push({\n          dimension: dimensionId,\n          items: filters[dimensionId]\n        });\n      }\n    }\n  });\n  return { ...visualization,\n    rows: visRows,\n    columns: visColumns,\n    filters: visFilters\n  };\n};\n\nexport default getFilteredVisualization;","import { VIS_TYPE_COLUMN, VIS_TYPE_PIVOT_TABLE, getAdaptedUiLayoutByType } from '@dhis2/analytics';\nimport { REPORT_TABLE, CHART, MAP } from '../../../../modules/itemTypes';\nimport getThematicMapViews from '../getThematicMapViews';\n\nconst getWithoutId = object => ({ ...object,\n  id: undefined\n});\n\nconst getVisualizationConfig = (visualization, originalType, activeType) => {\n  if (originalType === MAP && originalType !== activeType) {\n    const thematicMapViews = getThematicMapViews(visualization);\n\n    if (thematicMapViews === undefined) {\n      return null;\n    }\n\n    return getWithoutId({ ...visualization,\n      ...thematicMapViews,\n      mapViews: undefined,\n      type: activeType === CHART ? VIS_TYPE_COLUMN : VIS_TYPE_PIVOT_TABLE\n    });\n  } else if (originalType === REPORT_TABLE && activeType === CHART) {\n    const layout = getAdaptedUiLayoutByType(visualization, VIS_TYPE_COLUMN);\n    return getWithoutId({ ...visualization,\n      ...layout,\n      type: VIS_TYPE_COLUMN\n    });\n  } else if (originalType === CHART && activeType === REPORT_TABLE) {\n    const layout = getAdaptedUiLayoutByType(visualization, VIS_TYPE_PIVOT_TABLE);\n    return getWithoutId({ ...visualization,\n      ...layout,\n      type: VIS_TYPE_PIVOT_TABLE\n    });\n  }\n\n  return getWithoutId(visualization);\n};\n\nexport default getVisualizationConfig;","import { useConfig } from '@dhis2/app-runtime';\nimport { useD2 } from '@dhis2/app-runtime-adapter-d2';\nimport PropTypes from 'prop-types';\nimport React, { useEffect, useRef } from 'react';\nimport getVisualizationContainerDomId from '../getVisualizationContainerDomId';\nimport { load, unmount } from './plugin';\n\nconst DefaultPlugin = ({\n  item,\n  activeType,\n  filterVersion,\n  mapViewCount,\n  visualization,\n  options,\n  style\n}) => {\n  const {\n    d2\n  } = useD2();\n  const {\n    baseUrl\n  } = useConfig();\n  const credentials = {\n    baseUrl,\n    auth: d2.Api.getApi().defaultHeaders.Authorization\n  };\n  const prevItem = useRef();\n  const prevActiveType = useRef();\n  const prevFilterVersion = useRef();\n  const prevMapViewCount = useRef();\n  useEffect(() => {\n    load(item, visualization, {\n      credentials,\n      activeType,\n      options\n    });\n    prevItem.current = item;\n    prevActiveType.current = activeType;\n    prevFilterVersion.current = filterVersion;\n    prevMapViewCount.current = mapViewCount;\n    return () => unmount(item, item.type || activeType);\n  }, []);\n  useEffect(() => {\n    if (prevItem.current === item && (prevActiveType.current !== activeType || prevFilterVersion.current !== filterVersion || prevMapViewCount.current < mapViewCount)) {\n      /* Item is the same but type or filters has changed\n       * or map was previously loaded with fewer mapViews\n       * so necessary to reload\n       */\n      load(item, visualization, {\n        credentials,\n        activeType,\n        options\n      });\n    }\n\n    prevItem.current = item;\n    prevActiveType.current = activeType;\n    prevFilterVersion.current = filterVersion;\n  }, [item, visualization, activeType, filterVersion, mapViewCount]);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    id: getVisualizationContainerDomId(item.id),\n    style: style\n  });\n};\n\nDefaultPlugin.propTypes = {\n  activeType: PropTypes.string,\n  filterVersion: PropTypes.string,\n  item: PropTypes.object,\n  mapViewCount: PropTypes.number,\n  options: PropTypes.object,\n  style: PropTypes.object,\n  visualization: PropTypes.object\n};\nDefaultPlugin.defaultProps = {\n  style: {},\n  item: {},\n  options: {},\n  visualization: {}\n};\nexport default DefaultPlugin;","import PropTypes from 'prop-types';\nimport React, { useEffect } from 'react';\nimport getVisualizationContainerDomId from '../getVisualizationContainerDomId';\nimport DefaultPlugin from './DefaultPlugin';\n\nconst LegacyPlugin = ({\n  availableHeight,\n  availableWidth,\n  gridWidth,\n  ...props\n}) => {\n  useEffect(() => {\n    const el = document.querySelector(`#${getVisualizationContainerDomId(props.item.id)}`);\n\n    if (typeof (el === null || el === void 0 ? void 0 : el.setViewportSize) === 'function') {\n      setTimeout(() => el.setViewportSize(el.clientWidth - 5, el.clientHeight - 5), 10);\n    }\n  }, [availableHeight, availableWidth, gridWidth]);\n  return /*#__PURE__*/React.createElement(DefaultPlugin, props);\n};\n\nLegacyPlugin.propTypes = {\n  activeType: PropTypes.string,\n  availableHeight: PropTypes.number,\n  availableWidth: PropTypes.number,\n  gridWidth: PropTypes.number,\n  isFullscreen: PropTypes.bool,\n  item: PropTypes.object\n};\nexport default LegacyPlugin;","import { IconWarning24, colors } from '@dhis2/ui';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport classes from './styles/NoVisualizationMessage.module.css';\n\nconst NoVisualizationMessage = ({\n  message\n}) => {\n  return /*#__PURE__*/React.createElement(\"p\", {\n    className: classes.container\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    className: classes.icon\n  }, /*#__PURE__*/React.createElement(IconWarning24, {\n    color: colors.grey400\n  })), /*#__PURE__*/React.createElement(\"span\", {\n    className: classes.message\n  }, message));\n};\n\nNoVisualizationMessage.propTypes = {\n  message: PropTypes.string\n};\nexport default NoVisualizationMessage;","function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nimport { useOnlineStatus } from '@dhis2/app-runtime';\nimport i18n from '@dhis2/d2-i18n';\nimport PropTypes from 'prop-types';\nimport React, { useState, useEffect } from 'react';\nimport { MAP } from '../../../../modules/itemTypes';\nimport getVisualizationContainerDomId from '../getVisualizationContainerDomId';\nimport { isElementFullscreen } from '../isElementFullscreen';\nimport DefaultPlugin from './DefaultPlugin';\nimport NoVisualizationMessage from './NoVisualizationMessage';\nimport { pluginIsAvailable, getPlugin, unmount } from './plugin';\n\nconst mapViewIsThematicOrEvent = mapView => mapView.layer.includes('thematic') || mapView.layer.includes('event');\n\nconst mapViewIsEELayer = mapView => mapView.layer.includes('earthEngine');\n\nconst MapPlugin = ({\n  visualization,\n  applyFilters,\n  availableHeight,\n  availableWidth,\n  gridWidth,\n  itemFilters,\n  ...props\n}) => {\n  var _visualization$mapVie, _vis$mapViews;\n\n  const {\n    offline\n  } = useOnlineStatus();\n  const [initialized, setInitialized] = useState(false);\n  useEffect(() => {\n    const resizeMap = async (id, isFullscreen) => {\n      const plugin = await getPlugin(MAP);\n      (plugin === null || plugin === void 0 ? void 0 : plugin.resize) && plugin.resize(getVisualizationContainerDomId(id), isFullscreen);\n    };\n\n    resizeMap(props.item.id, isElementFullscreen(props.item.id));\n  }, [availableHeight, availableWidth, gridWidth]); // The function returned from this effect is run when this component unmounts\n\n  useEffect(() => () => unmount(props.item, MAP), []);\n  useEffect(() => {\n    const setMapOfflineStatus = async offlineStatus => {\n      const plugin = await getPlugin(MAP);\n      (plugin === null || plugin === void 0 ? void 0 : plugin.setOfflineStatus) && plugin.setOfflineStatus(offlineStatus);\n    };\n\n    !offline && setInitialized(true);\n    setMapOfflineStatus(offline);\n  }, [offline]);\n\n  const getVisualization = () => {\n    if (props.item.type === MAP) {\n      // apply filters only to thematic and event layers\n      // for maps AO\n      const mapViews = visualization.mapViews.map(mapView => {\n        if (mapViewIsThematicOrEvent(mapView)) {\n          return applyFilters(mapView, itemFilters);\n        }\n\n        return mapView;\n      });\n      return { ...visualization,\n        mapViews\n      };\n    } else {\n      // this is the case of a non map AO passed to the maps plugin\n      // due to a visualization type switch in dashboard item\n      // maps plugin takes care of converting the AO to a suitable format\n      return applyFilters(visualization, itemFilters);\n    }\n  };\n\n  if (offline && !initialized && (_visualization$mapVie = visualization.mapViews) !== null && _visualization$mapVie !== void 0 && _visualization$mapVie.find(mapViewIsEELayer)) {\n    return /*#__PURE__*/React.createElement(NoVisualizationMessage, {\n      message: i18n.t('Maps with Earth Engine layers cannot be displayed when offline')\n    });\n  }\n\n  const vis = getVisualization();\n  return pluginIsAvailable(MAP) ? /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(DefaultPlugin, _extends({\n    options: {\n      hideTitle: true\n    }\n  }, props, {\n    visualization: vis,\n    mapViewCount: (_vis$mapViews = vis.mapViews) === null || _vis$mapViews === void 0 ? void 0 : _vis$mapViews.length\n  }))) : /*#__PURE__*/React.createElement(NoVisualizationMessage, {\n    message: i18n.t('Unable to load the plugin for this item')\n  });\n};\n\nMapPlugin.propTypes = {\n  applyFilters: PropTypes.func,\n  availableHeight: PropTypes.number,\n  availableWidth: PropTypes.number,\n  gridWidth: PropTypes.number,\n  isFullscreen: PropTypes.bool,\n  item: PropTypes.object,\n  itemFilters: PropTypes.object,\n  visualization: PropTypes.object\n};\nexport default MapPlugin;","function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nimport i18n from '@dhis2/d2-i18n';\nimport uniqueId from 'lodash/uniqueId';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport { isEditMode } from '../../../../modules/dashboardModes';\nimport { getVisualizationId } from '../../../../modules/item';\nimport { VISUALIZATION, MAP, CHART, REPORT_TABLE, getItemTypeForVis } from '../../../../modules/itemTypes';\nimport { sGetItemFiltersRoot, DEFAULT_STATE_ITEM_FILTERS } from '../../../../reducers/itemFilters';\nimport { sGetVisualization } from '../../../../reducers/visualizations';\nimport memoizeOne from '../memoizeOne';\nimport DataVisualizerPlugin from './DataVisualizerPlugin';\nimport getFilteredVisualization from './getFilteredVisualization';\nimport getVisualizationConfig from './getVisualizationConfig';\nimport LegacyPlugin from './LegacyPlugin';\nimport MapPlugin from './MapPlugin';\nimport NoVisualizationMessage from './NoVisualizationMessage';\nimport { pluginIsAvailable } from './plugin';\n\nclass Visualization extends React.Component {\n  constructor(props) {\n    super(props);\n    this.memoizedGetFilteredVisualization = memoizeOne(getFilteredVisualization);\n    this.memoizedGetVisualizationConfig = memoizeOne(getVisualizationConfig);\n    this.getFilterVersion = memoizeOne(() => uniqueId());\n  }\n\n  render() {\n    const {\n      visualization,\n      activeType,\n      item,\n      itemFilters,\n      ...rest\n    } = this.props;\n\n    if (!visualization) {\n      return /*#__PURE__*/React.createElement(NoVisualizationMessage, {\n        message: i18n.t('No data to display')\n      });\n    }\n\n    const style = {\n      height: this.props.availableHeight\n    };\n\n    if (this.props.availableWidth) {\n      style.width = this.props.availableWidth;\n    }\n\n    const visualizationConfig = this.memoizedGetVisualizationConfig(visualization, getItemTypeForVis(item), activeType);\n    const filterVersion = this.getFilterVersion(itemFilters);\n\n    switch (activeType) {\n      case VISUALIZATION:\n      case CHART:\n      case REPORT_TABLE:\n        {\n          return /*#__PURE__*/React.createElement(DataVisualizerPlugin, {\n            visualization: this.memoizedGetFilteredVisualization(visualizationConfig, itemFilters),\n            style: style,\n            filterVersion: filterVersion,\n            item: item,\n            dashboardMode: this.props.dashboardMode\n          });\n        }\n\n      case MAP:\n        {\n          return /*#__PURE__*/React.createElement(MapPlugin, _extends({\n            item: item,\n            activeType: activeType,\n            visualization: visualizationConfig,\n            itemFilters: itemFilters,\n            applyFilters: this.memoizedGetFilteredVisualization,\n            filterVersion: filterVersion,\n            style: style\n          }, rest));\n        }\n\n      default:\n        {\n          return pluginIsAvailable(activeType || item.type) ? /*#__PURE__*/React.createElement(LegacyPlugin, _extends({\n            item: item,\n            activeType: activeType,\n            visualization: this.memoizedGetFilteredVisualization(visualizationConfig, itemFilters),\n            filterVersion: filterVersion,\n            style: style\n          }, rest)) : /*#__PURE__*/React.createElement(NoVisualizationMessage, {\n            message: i18n.t('Unable to load the plugin for this item')\n          });\n        }\n    }\n  }\n\n}\n\nVisualization.propTypes = {\n  activeType: PropTypes.string,\n  availableHeight: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n  availableWidth: PropTypes.number,\n  dashboardMode: PropTypes.string,\n  item: PropTypes.object,\n  itemFilters: PropTypes.object,\n  visualization: PropTypes.object\n};\n\nconst mapStateToProps = (state, ownProps) => {\n  const itemFilters = !isEditMode(ownProps.dashboardMode) ? sGetItemFiltersRoot(state) : DEFAULT_STATE_ITEM_FILTERS;\n  return {\n    itemFilters,\n    visualization: sGetVisualization(state, getVisualizationId(ownProps.item))\n  };\n};\n\nexport default connect(mapStateToProps)(Visualization);","function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport i18n from '@dhis2/d2-i18n';\nimport PropTypes from 'prop-types';\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { acSetItemActiveType } from '../../../actions/itemActiveTypes';\nimport { acAddVisualization } from '../../../actions/visualizations';\nimport { apiPostDataStatistics } from '../../../api/dataStatistics';\nimport { apiFetchVisualization } from '../../../api/fetchVisualization';\nimport { isEditMode, isPrintMode, isViewMode } from '../../../modules/dashboardModes';\nimport { getItemHeightPx } from '../../../modules/gridUtil';\nimport { getVisualizationId, getVisualizationName } from '../../../modules/item';\nimport { getDataStatisticsName, getItemTypeForVis } from '../../../modules/itemTypes';\nimport { sGetIsEditing } from '../../../reducers/editDashboard';\nimport { sGetItemActiveType } from '../../../reducers/itemActiveTypes';\nimport { sGetItemFiltersRoot, DEFAULT_STATE_ITEM_FILTERS } from '../../../reducers/itemFilters';\nimport { sGetVisualization } from '../../../reducers/visualizations';\nimport { SystemSettingsCtx } from '../../SystemSettingsProvider';\nimport { WindowDimensionsCtx } from '../../WindowDimensionsProvider';\nimport ItemHeader from '../ItemHeader/ItemHeader';\nimport FatalErrorBoundary from './FatalErrorBoundary';\nimport { getGridItemElement } from './getGridItemElement';\nimport { isElementFullscreen } from './isElementFullscreen';\nimport ItemContextMenu from './ItemContextMenu/ItemContextMenu';\nimport ItemFooter from './ItemFooter';\nimport memoizeOne from './memoizeOne';\nimport { pluginIsAvailable } from './Visualization/plugin';\nimport Visualization from './Visualization/Visualization';\n\nclass Item extends Component {\n  constructor(props) {\n    super(props);\n\n    _defineProperty(this, \"state\", {\n      showFooter: false,\n      configLoaded: false,\n      loadItemFailed: false\n    });\n\n    _defineProperty(this, \"isFullscreenSupported\", () => {\n      const el = getGridItemElement(this.props.item.id);\n      return !!(el !== null && el !== void 0 && el.requestFullscreen || el !== null && el !== void 0 && el.webkitRequestFullscreen);\n    });\n\n    _defineProperty(this, \"onToggleFullscreen\", () => {\n      if (!isElementFullscreen(this.props.item.id)) {\n        const el = getGridItemElement(this.props.item.id);\n\n        if (el !== null && el !== void 0 && el.requestFullscreen) {\n          el.requestFullscreen();\n        } else if (el !== null && el !== void 0 && el.webkitRequestFullscreen) {\n          el.webkitRequestFullscreen();\n        }\n      } else {\n        document.exitFullscreen ? document.exitFullscreen() : document.webkitExitFullscreen();\n      }\n    });\n\n    _defineProperty(this, \"onToggleFooter\", () => {\n      this.setState({\n        showFooter: !this.state.showFooter\n      }, this.props.onToggleItemExpanded(this.props.item.id));\n    });\n\n    _defineProperty(this, \"setActiveType\", type => {\n      type !== this.getActiveType() && this.props.setActiveType(this.props.item.id, type);\n    });\n\n    _defineProperty(this, \"getActiveType\", () => {\n      if (this.props.isEditing) {\n        return getItemTypeForVis(this.props.item);\n      }\n\n      return this.props.activeType || getItemTypeForVis(this.props.item);\n    });\n\n    _defineProperty(this, \"getAvailableHeight\", ({\n      width,\n      height\n    }) => {\n      if (isElementFullscreen(this.props.item.id)) {\n        return height - this.headerRef.current.clientHeight - this.itemHeaderTotalMargin - this.itemContentPadding;\n      }\n\n      const calculatedHeight = getItemHeightPx(this.props.item, width) - this.headerRef.current.clientHeight - this.itemHeaderTotalMargin - this.itemContentPadding;\n      return this.memoizedGetContentHeight(calculatedHeight, this.contentRef ? this.contentRef.offsetHeight : null, isEditMode(this.props.dashboardMode) || isPrintMode(this.props.dashboardMode));\n    });\n\n    _defineProperty(this, \"getAvailableWidth\", () => {\n      var _getGridItemElement;\n\n      const rect = (_getGridItemElement = getGridItemElement(this.props.item.id)) === null || _getGridItemElement === void 0 ? void 0 : _getGridItemElement.getBoundingClientRect();\n      return rect && rect.width - this.itemContentPadding * 2;\n    });\n\n    _defineProperty(this, \"onFatalError\", () => {\n      this.setState({\n        loadItemFailed: true\n      });\n    });\n\n    this.contentRef = /*#__PURE__*/React.createRef();\n    this.headerRef = /*#__PURE__*/React.createRef();\n    const style = window.getComputedStyle(document.documentElement);\n    this.itemContentPadding = parseInt(style.getPropertyValue('--item-content-padding').replace('px', ''));\n    this.itemHeaderTotalMargin = parseInt(style.getPropertyValue('--item-header-margin-top').replace('px', '')) + parseInt(style.getPropertyValue('--item-header-margin-bottom').replace('px', ''));\n    this.memoizedGetContentHeight = memoizeOne((calculatedHeight, measuredHeight, preferMeasured) => preferMeasured ? measuredHeight || calculatedHeight : calculatedHeight);\n  }\n\n  async componentDidMount() {\n    this.props.setVisualization(await apiFetchVisualization(this.props.item));\n\n    try {\n      if (this.props.settings.keyGatherAnalyticalObjectStatisticsInDashboardViews && isViewMode(this.props.dashboardMode)) {\n        await apiPostDataStatistics(getDataStatisticsName(this.props.item.type), getVisualizationId(this.props.item));\n      }\n    } catch (e) {\n      console.log(e);\n    }\n\n    this.setState({\n      configLoaded: true\n    });\n  }\n\n  render() {\n    const {\n      item,\n      dashboardMode,\n      itemFilters\n    } = this.props;\n    const {\n      showFooter\n    } = this.state;\n    const activeType = this.getActiveType();\n    const actionButtons = pluginIsAvailable(activeType || item.type) && isViewMode(dashboardMode) ? /*#__PURE__*/React.createElement(ItemContextMenu, {\n      item: item,\n      visualization: this.props.visualization,\n      onSelectActiveType: this.setActiveType,\n      onToggleFooter: this.onToggleFooter,\n      onToggleFullscreen: this.onToggleFullscreen,\n      activeType: activeType,\n      activeFooter: showFooter,\n      fullscreenSupported: this.isFullscreenSupported(),\n      loadItemFailed: this.state.loadItemFailed\n    }) : null;\n    return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(ItemHeader, {\n      title: getVisualizationName(item),\n      itemId: item.id,\n      actionButtons: actionButtons,\n      ref: this.headerRef,\n      dashboardMode: dashboardMode,\n      isShortened: item.shortened\n    }), /*#__PURE__*/React.createElement(FatalErrorBoundary, {\n      message: i18n.t('There was a problem loading this dashboard item'),\n      onFatalError: this.onFatalError\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"dashboard-item-content\",\n      ref: ref => this.contentRef = ref\n    }, this.state.configLoaded && /*#__PURE__*/React.createElement(WindowDimensionsCtx.Consumer, null, dimensions => /*#__PURE__*/React.createElement(Visualization, {\n      item: item,\n      activeType: activeType,\n      itemFilters: itemFilters,\n      availableHeight: this.getAvailableHeight(dimensions),\n      availableWidth: this.getAvailableWidth(),\n      gridWidth: this.props.gridWidth,\n      dashboardMode: dashboardMode\n    })))), isViewMode(dashboardMode) && showFooter ? /*#__PURE__*/React.createElement(ItemFooter, {\n      item: item\n    }) : null);\n  }\n\n}\n\nItem.propTypes = {\n  activeType: PropTypes.string,\n  dashboardMode: PropTypes.string,\n  gridWidth: PropTypes.number,\n  isEditing: PropTypes.bool,\n  item: PropTypes.object,\n  itemFilters: PropTypes.object,\n  setActiveType: PropTypes.func,\n  setVisualization: PropTypes.func,\n  settings: PropTypes.object,\n  visualization: PropTypes.object,\n  onToggleItemExpanded: PropTypes.func\n};\nItem.defaultProps = {\n  item: {},\n  onToggleItemExpanded: Function.prototype,\n  visualization: {}\n};\n\nconst mapStateToProps = (state, ownProps) => {\n  var _ownProps$item;\n\n  const itemFilters = !isEditMode(ownProps.dashboardMode) ? sGetItemFiltersRoot(state) : DEFAULT_STATE_ITEM_FILTERS;\n  return {\n    activeType: sGetItemActiveType(state, (_ownProps$item = ownProps.item) === null || _ownProps$item === void 0 ? void 0 : _ownProps$item.id),\n    isEditing: sGetIsEditing(state),\n    itemFilters,\n    visualization: sGetVisualization(state, getVisualizationId(ownProps.item))\n  };\n};\n\nconst mapDispatchToProps = {\n  setActiveType: acSetItemActiveType,\n  setVisualization: acAddVisualization\n};\n\nconst ItemWithSettings = props => /*#__PURE__*/React.createElement(SystemSettingsCtx.Consumer, null, ({\n  systemSettings\n}) => /*#__PURE__*/React.createElement(Item, _extends({\n  settings: systemSettings\n}, props)));\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ItemWithSettings);","import PropTypes from 'prop-types';\nimport React from 'react';\nimport { APP, VISUALIZATION, REPORT_TABLE, CHART, MAP, EVENT_CHART, EVENT_REPORT, MESSAGES, REPORTS, RESOURCES, USERS, TEXT, SPACER, PAGEBREAK, PRINT_TITLE_PAGE } from '../../modules/itemTypes';\nimport AppItem from './AppItem/Item';\nimport ListItem from './ListItem/Item';\nimport MessagesItem from './MessagesItem/Item';\nimport NotSupportedItem from './NotSupportedItem/Item';\nimport PageBreakItem from './PageBreakItem/Item';\nimport PrintTitlePageItem from './PrintTitlePageItem/Item';\nimport SpacerItem from './SpacerItem/Item';\nimport TextItem from './TextItem/Item';\nimport VisualizationItem from './VisualizationItem/Item';\n\nconst getGridItem = type => {\n  switch (type) {\n    case VISUALIZATION:\n    case REPORT_TABLE:\n    case CHART:\n    case MAP:\n    case EVENT_CHART:\n    case EVENT_REPORT:\n      return VisualizationItem;\n\n    case MESSAGES:\n      return MessagesItem;\n\n    case REPORTS:\n    case RESOURCES:\n    case USERS:\n      return ListItem;\n\n    case TEXT:\n      return TextItem;\n\n    case SPACER:\n      return SpacerItem;\n\n    case APP:\n      return AppItem;\n\n    case PAGEBREAK:\n      return PageBreakItem;\n\n    case PRINT_TITLE_PAGE:\n      return PrintTitlePageItem;\n\n    default:\n      return NotSupportedItem;\n  }\n};\n\nexport const Item = props => {\n  const GridItem = getGridItem(props.item.type);\n  return /*#__PURE__*/React.createElement(GridItem, props);\n};\nItem.propTypes = {\n  item: PropTypes.object\n};","import sortBy from 'lodash/sortBy';\nimport { itemTypeMap } from '../../modules/itemTypes';\nimport { orArray } from '../../modules/util';\nexport const getTransformYPx = elStyle => {\n  var _elStyle$transform$sp;\n\n  if (!elStyle || !elStyle.transform) {\n    return null;\n  } // find valid transforms - those with y pixels\n  // the code is expecting the transform prop to\n  // look like:  translate(10px, 300px)\n\n\n  const transformY = (_elStyle$transform$sp = elStyle.transform.split(' ')[1]) === null || _elStyle$transform$sp === void 0 ? void 0 : _elStyle$transform$sp.match(/(\\d+)px/);\n\n  if (transformY) {\n    return parseInt(transformY[1]);\n  } else {\n    return null;\n  }\n};\nexport const getDomGridItemsSortedByYPos = elements => {\n  const types = Object.keys(itemTypeMap);\n  const elementsWithBoundingRect = orArray(elements).map(el => {\n    const type = Array.from(el.classList).find(className => types.indexOf(className) > -1);\n    const rect = el.getBoundingClientRect();\n    const y = getTransformYPx(el.style) || parseInt(rect.y);\n    return {\n      type,\n      classList: el.classList,\n      bottomY: y + parseInt(rect.height),\n      el\n    };\n  });\n  return sortBy(elementsWithBoundingRect, ['bottomY']);\n};\n\nconst isLeapPage = n => {\n  // pages 5,9,13,17,21,25,29... are leap pages\n  let x = 0;\n  const startPage = 1;\n\n  const getMultiple = factor => startPage + 4 * factor;\n\n  let multiple = getMultiple(0);\n  let isLeapPage = false;\n\n  while (multiple < n) {\n    multiple = getMultiple(x);\n    ++x;\n\n    if (multiple === n) {\n      isLeapPage = true;\n      break;\n    }\n  }\n\n  return isLeapPage;\n};\n\nexport const getPageBreakPositions = items => {\n  // add enough page breaks so that each item could\n  // be put on its own page. Due to the react-grid-layout\n  // unit system, we have to estimate roughly the size of each\n  // page. At regular intervals add a unit, like a leap year\n  const yPosList = [];\n  let yPos = 0;\n\n  for (let pageNum = 1; pageNum <= items.length; ++pageNum) {\n    if (pageNum === 1) {\n      yPos += 35;\n    } else if (isLeapPage(pageNum)) {\n      yPos += 40;\n    } else {\n      yPos += 39;\n    }\n\n    yPosList.push(yPos);\n  }\n\n  return yPosList;\n};","import i18n from '@dhis2/d2-i18n';\nimport cx from 'classnames';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport ReactGridLayout from 'react-grid-layout';\nimport NoContentMessage from '../../components/NoContentMessage';\nimport { GRID_ROW_HEIGHT_PX, GRID_COMPACT_TYPE, MARGIN_PX, GRID_COLUMNS } from '../../modules/gridUtil';\nconst PAGE_PADDING_PX = 24;\n\nconst StaticGrid = ({\n  layout,\n  children,\n  onLayoutChange,\n  className\n}) => {\n  if (!layout.length) {\n    return /*#__PURE__*/React.createElement(NoContentMessage, {\n      text: i18n.t('There are no items on this dashboard')\n    });\n  }\n\n  const style = window.getComputedStyle(document.documentElement);\n  const pageWidthPx = parseInt(style.getPropertyValue('--a4-landscape-width-px').replace('px', ''));\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(ReactGridLayout, {\n    margin: MARGIN_PX,\n    cols: GRID_COLUMNS,\n    rowHeight: GRID_ROW_HEIGHT_PX,\n    width: pageWidthPx - PAGE_PADDING_PX,\n    compactType: GRID_COMPACT_TYPE,\n    isDraggable: false,\n    isResizable: false,\n    draggableCancel: \"input,textarea\",\n    className: cx('layout', className),\n    layout: layout,\n    onLayoutChange: onLayoutChange\n  }, children));\n};\n\nStaticGrid.defaultProps = {\n  onLayoutChange: Function.prototype\n};\nStaticGrid.propTypes = {\n  children: PropTypes.node,\n  className: PropTypes.string,\n  layout: PropTypes.array,\n  onLayoutChange: PropTypes.func\n};\nexport default StaticGrid;","function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport cx from 'classnames';\nimport sortBy from 'lodash/sortBy';\nimport PropTypes from 'prop-types';\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { acUpdatePrintDashboardLayout } from '../../actions/printDashboard';\nimport { Item } from '../../components/Item/Item';\nimport { PRINT_LAYOUT } from '../../modules/dashboardModes';\nimport { getGridItemDomElementClassName } from '../../modules/getGridItemDomElementClassName';\nimport { hasShape } from '../../modules/gridUtil';\nimport { PAGEBREAK } from '../../modules/itemTypes';\nimport { sGetIsEditing } from '../../reducers/editDashboard';\nimport { sGetPrintDashboardItems } from '../../reducers/printDashboard';\nimport { getDomGridItemsSortedByYPos, getTransformYPx } from './printUtils';\nimport StaticGrid from './StaticGrid';\n\nclass PrintLayoutItemGrid extends Component {\n  constructor(...args) {\n    super(...args);\n\n    _defineProperty(this, \"onLayoutChange\", newLayout => {\n      this.props.updateDashboardLayout(newLayout);\n    });\n\n    _defineProperty(this, \"isFirstPageBreak\", item => {\n      if (item.type !== PAGEBREAK) {\n        return false;\n      }\n\n      const pageBreaks = this.props.dashboardItems.filter(i => i.type === PAGEBREAK);\n      const sortedPageBreaks = sortBy(pageBreaks, ['y']);\n      return item.y === sortedPageBreaks[0].y;\n    });\n\n    _defineProperty(this, \"getItemComponent\", item => {\n      // the first-page-break class is used in Edit print preview\n      const itemClassNames = cx('print', 'layout', getGridItemDomElementClassName(item.id), `${item.type}`, {\n        'first-page-break': this.props.isEditing && this.isFirstPageBreak(item),\n        shortened: !!item.shortened\n      });\n      return /*#__PURE__*/React.createElement(\"div\", {\n        key: item.i,\n        className: itemClassNames,\n        \"data-test\": `dashboarditem-${item.id}`\n      }, /*#__PURE__*/React.createElement(Item, {\n        item: item,\n        dashboardMode: PRINT_LAYOUT\n      }));\n    });\n\n    _defineProperty(this, \"getItemComponents\", items => items.map(item => this.getItemComponent(item)));\n  }\n\n  hideExtraPageBreaks() {\n    const sortedElements = getDomGridItemsSortedByYPos(Array.from(document.querySelectorAll('.react-grid-item')));\n    let pageBreakBottom = 0;\n    let lastItemBottom = 0;\n    let foundNonPageBreak = false;\n\n    for (let i = sortedElements.length - 1; i >= 0; --i) {\n      const item = sortedElements[i];\n\n      if (item.type === PAGEBREAK) {\n        if (!foundNonPageBreak) {\n          item.el.classList.add('removed');\n        } else {\n          pageBreakBottom = item.bottomY;\n          break;\n        }\n      } else {\n        foundNonPageBreak = true;\n        const thisItemBottom = item.bottomY;\n\n        if (thisItemBottom > lastItemBottom) {\n          lastItemBottom = thisItemBottom;\n        }\n      }\n    }\n\n    const pageHeight = 720;\n    const gridElement = document.querySelector('.react-grid-layout'); // the last page break is before the last item(s) so\n    // maxHeight is one page beyond the last page break\n\n    const maxHeight = pageBreakBottom + pageHeight;\n\n    if (gridElement) {\n      gridElement.style.height = `${maxHeight}px`;\n    }\n\n    if (this.props.isEditing) {\n      //scroll to below the title page - which is middle of the first pagebreak\n      const firstBreak = document.querySelector('.first-page-break');\n\n      if (firstBreak && firstBreak.style && firstBreak.style.transform) {\n        const yPos = getTransformYPx(firstBreak.style);\n        const scrollArea = document.querySelector('.scroll-area');\n        scrollArea && scrollArea.scroll(0, yPos + 50);\n      }\n    }\n  }\n\n  componentDidMount() {\n    this.hideExtraPageBreaks();\n  }\n\n  componentDidUpdate() {\n    this.hideExtraPageBreaks();\n  }\n\n  render() {\n    const {\n      dashboardItems\n    } = this.props;\n    return /*#__PURE__*/React.createElement(StaticGrid, {\n      layout: dashboardItems,\n      onLayoutChange: this.onLayoutChange\n    }, this.getItemComponents(dashboardItems));\n  }\n\n}\n\nPrintLayoutItemGrid.propTypes = {\n  dashboardItems: PropTypes.array,\n  isEditing: PropTypes.bool,\n  updateDashboardLayout: PropTypes.func\n};\n\nconst mapStateToProps = state => {\n  return {\n    dashboardItems: sGetPrintDashboardItems(state).filter(hasShape),\n    isEditing: sGetIsEditing(state)\n  };\n};\n\nexport default connect(mapStateToProps, {\n  updateDashboardLayout: acUpdatePrintDashboardLayout\n})(PrintLayoutItemGrid);","import { useDataEngine } from '@dhis2/app-runtime';\nimport { Layer, CenteredContent, CircularLoader } from '@dhis2/ui';\nimport cx from 'classnames';\nimport PropTypes from 'prop-types';\nimport React, { useState, useEffect } from 'react';\nimport { connect } from 'react-redux';\nimport { Redirect } from 'react-router-dom';\nimport { acSetPrintDashboard, acAddPrintDashboardItem, acUpdatePrintDashboardItem } from '../../actions/printDashboard';\nimport { apiFetchDashboard } from '../../api/fetchDashboard';\nimport { VIEW } from '../../modules/dashboardModes';\nimport { MAX_ITEM_GRID_HEIGHT } from '../../modules/gridUtil';\nimport { PAGEBREAK, PRINT_TITLE_PAGE } from '../../modules/itemTypes';\nimport { setHeaderbarVisible } from '../../modules/setHeaderbarVisible';\nimport { sGetEditDashboardRoot } from '../../reducers/editDashboard';\nimport PrintActionsBar from './ActionsBar';\nimport PrintInfo from './PrintInfo';\nimport PrintLayoutItemGrid from './PrintLayoutItemGrid';\nimport { getPageBreakPositions } from './printUtils';\nimport classes from './styles/PrintLayoutDashboard.module.css';\nimport './styles/print.css';\nimport './styles/print-layout.css';\n\nconst addPageBreaks = (items, addDashboardItem) => {\n  const yPosList = getPageBreakPositions(items);\n\n  for (let i = 0; i < items.length; ++i) {\n    addDashboardItem({\n      type: PAGEBREAK,\n      yPos: yPosList[i]\n    });\n  }\n};\n\nconst PrintLayoutDashboard = ({\n  dashboard,\n  id,\n  setPrintDashboard,\n  addDashboardItem,\n  updateDashboardItem,\n  fromEdit\n}) => {\n  const dataEngine = useDataEngine();\n  const [redirectUrl, setRedirectUrl] = useState(null);\n  const [isLoading, setIsLoading] = useState(true);\n\n  const customizePrintLayoutDashboard = dboard => {\n    // If any items are taller than one page, reduce it to one\n    // page (react-grid-layout units)\n    dboard.dashboardItems.forEach(item => {\n      if (item.h > MAX_ITEM_GRID_HEIGHT) {\n        item.shortened = true;\n        updateDashboardItem(Object.assign({}, item, {\n          h: MAX_ITEM_GRID_HEIGHT\n        }));\n      }\n    });\n    addPageBreaks(dboard.dashboardItems, addDashboardItem);\n    addDashboardItem({\n      type: PRINT_TITLE_PAGE,\n      isOneItemPerPage: false\n    });\n    setIsLoading(false);\n  };\n\n  useEffect(() => {\n    const loadDashboard = async () => {\n      try {\n        const dashboard = await apiFetchDashboard(dataEngine, id, {\n          mode: VIEW\n        });\n        setPrintDashboard(dashboard);\n        customizePrintLayoutDashboard(dashboard);\n      } catch (error) {\n        setRedirectUrl(id ? `/${id}` : '/');\n        setIsLoading(false);\n      }\n    };\n\n    setHeaderbarVisible(false);\n\n    if (!dashboard) {\n      loadDashboard();\n    } else {\n      setPrintDashboard(dashboard);\n      customizePrintLayoutDashboard(dashboard);\n    }\n  }, [dashboard]);\n\n  if (redirectUrl) {\n    return /*#__PURE__*/React.createElement(Redirect, {\n      to: redirectUrl\n    });\n  }\n\n  if (isLoading) {\n    return /*#__PURE__*/React.createElement(Layer, {\n      translucent: true\n    }, /*#__PURE__*/React.createElement(CenteredContent, null, /*#__PURE__*/React.createElement(CircularLoader, null)));\n  }\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.container\n  }, !fromEdit && /*#__PURE__*/React.createElement(PrintActionsBar, {\n    id: id\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: cx(classes.wrapper, 'scroll-area', fromEdit && classes.editView)\n  }, !fromEdit && /*#__PURE__*/React.createElement(PrintInfo, {\n    isLayout: true\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.pageOuter,\n    \"data-test\": \"print-layout-page\"\n  }, /*#__PURE__*/React.createElement(PrintLayoutItemGrid, null))));\n};\n\nPrintLayoutDashboard.propTypes = {\n  addDashboardItem: PropTypes.func,\n  dashboard: PropTypes.object,\n  fromEdit: PropTypes.bool,\n  id: PropTypes.string,\n  setPrintDashboard: PropTypes.func,\n  updateDashboardItem: PropTypes.func\n};\n\nconst mapStateToProps = (state, ownProps) => {\n  var _ownProps$match, _ownProps$match$param;\n\n  return {\n    dashboard: ownProps.fromEdit ? sGetEditDashboardRoot(state) : null,\n    id: ((_ownProps$match = ownProps.match) === null || _ownProps$match === void 0 ? void 0 : (_ownProps$match$param = _ownProps$match.params) === null || _ownProps$match$param === void 0 ? void 0 : _ownProps$match$param.dashboardId) || null\n  };\n};\n\nexport default connect(mapStateToProps, {\n  setPrintDashboard: acSetPrintDashboard,\n  addDashboardItem: acAddPrintDashboardItem,\n  updateDashboardItem: acUpdatePrintDashboardItem\n})(PrintLayoutDashboard);","import { Button, Modal, ModalContent, ModalActions, ButtonStrip, ModalTitle } from '@dhis2/ui';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport classes from './styles/ConfirmActionDialog.module.css';\n\nconst ConfirmActionDialog = ({\n  onConfirm,\n  onCancel,\n  open,\n  title,\n  message,\n  cancelLabel,\n  confirmLabel\n}) => {\n  return open && /*#__PURE__*/React.createElement(Modal, {\n    dataTest: \"confirm-action-dialog\",\n    onClose: onCancel,\n    small: true,\n    position: \"middle\"\n  }, /*#__PURE__*/React.createElement(ModalTitle, null, title), /*#__PURE__*/React.createElement(ModalContent, null, /*#__PURE__*/React.createElement(\"span\", {\n    className: classes.content\n  }, message)), /*#__PURE__*/React.createElement(ModalActions, null, /*#__PURE__*/React.createElement(ButtonStrip, null, /*#__PURE__*/React.createElement(Button, {\n    key: \"cancel\",\n    secondary: true,\n    onClick: onCancel\n  }, cancelLabel), /*#__PURE__*/React.createElement(Button, {\n    key: \"confirm\",\n    destructive: true,\n    onClick: onConfirm\n  }, confirmLabel))));\n};\n\nConfirmActionDialog.propTypes = {\n  cancelLabel: PropTypes.string,\n  confirmLabel: PropTypes.string,\n  message: PropTypes.string,\n  open: PropTypes.bool,\n  title: PropTypes.string,\n  onCancel: PropTypes.func,\n  onConfirm: PropTypes.func\n};\nexport default ConfirmActionDialog;","export const deleteDashboardMutation = {\n  type: 'delete',\n  resource: 'dashboards',\n  id: ({\n    id\n  }) => id\n};","// filter out CATEGORY that are not of type ATTRIBUTE\nconst filteredDimensions = dimensions => dimensions.filter(dim => dim.dimensionType !== 'CATEGORY' || dim.dimensionType === 'CATEGORY' && dim.dataDimensionType === 'ATTRIBUTE');\n\nexport default filteredDimensions;","import { apiFetchDimensions } from '@dhis2/analytics';\nimport { useDataEngine } from '@dhis2/app-runtime';\nimport { useEffect } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { acSetDimensions } from '../actions/dimensions';\nimport { useUserSettings } from '../components/UserSettingsProvider';\nimport getFilteredDimensions from './getFilteredDimensions';\n\nconst useDimensions = doFetch => {\n  const dataEngine = useDataEngine();\n  const {\n    userSettings\n  } = useUserSettings();\n  const dimensions = useSelector(state => state.dimensions);\n  const dispatch = useDispatch();\n  useEffect(() => {\n    const fetchDimensions = async () => {\n      try {\n        const unfilteredDimensions = await apiFetchDimensions(dataEngine, userSettings.keyAnalysisDisplayProperty);\n        dispatch(acSetDimensions(getFilteredDimensions(unfilteredDimensions)));\n      } catch (e) {\n        console.error(e);\n      }\n    };\n\n    if (!dimensions.length && doFetch && userSettings.keyAnalysisDisplayProperty) {\n      fetchDimensions();\n    }\n  }, [dimensions, doFetch, userSettings.keyAnalysisDisplayProperty]);\n  return dimensions;\n};\n\nexport default useDimensions;","import { SET_DIMENSIONS } from '../reducers/dimensions';\nexport const acSetDimensions = dimensions => ({\n  type: SET_DIMENSIONS,\n  value: dimensions\n});","import { DIMENSION_ID_PERIOD, DIMENSION_ID_ORGUNIT } from '@dhis2/analytics';\nimport i18n from '@dhis2/d2-i18n';\nimport { Button, ButtonStrip, Modal, ModalActions, ModalContent, ModalTitle, Radio, Transfer } from '@dhis2/ui';\nimport PropTypes from 'prop-types';\nimport React, { useState } from 'react';\nimport useDimensions from '../../modules/useDimensions';\nimport classes from './styles/FilterSettingsDialog.module.css';\n\nconst RadioOptions = ({\n  filtersSelectable,\n  updateFilterDimensionRestrictability\n}) => /*#__PURE__*/React.createElement(\"form\", null, /*#__PURE__*/React.createElement(\"div\", {\n  className: classes.radioButton\n}, /*#__PURE__*/React.createElement(Radio, {\n  dense: true,\n  checked: !filtersSelectable,\n  label: i18n.t('Allow filtering by all dimensions'),\n  name: \"radio-allow-filtering-on-all\",\n  onChange: payload => {\n    return updateFilterDimensionRestrictability(payload.value === 'true');\n  },\n  value: 'false'\n})), /*#__PURE__*/React.createElement(\"div\", {\n  className: classes.radioButton\n}, /*#__PURE__*/React.createElement(Radio, {\n  dense: true,\n  checked: filtersSelectable,\n  label: i18n.t('Only allow filtering by selected dimensions'),\n  name: \"radio-restrict-filtering\",\n  onChange: payload => {\n    return updateFilterDimensionRestrictability(payload.value === 'true');\n  },\n  value: 'true'\n})));\n\nRadioOptions.propTypes = {\n  filtersSelectable: PropTypes.bool,\n  updateFilterDimensionRestrictability: PropTypes.func\n};\n\nconst FilterSettingsDialog = ({\n  restrictFilters,\n  initiallySelectedItems,\n  onClose,\n  onConfirm,\n  open\n}) => {\n  const [selected, setSelected] = useState(initiallySelectedItems);\n  const [filtersSelectable, setFiltersSelectable] = useState(restrictFilters);\n  const dimensions = useDimensions(open);\n\n  const updateFilterDimensionRestrictability = val => {\n    if (val) {\n      const otherItems = selected.filter(i => i !== DIMENSION_ID_ORGUNIT && i !== DIMENSION_ID_PERIOD);\n      updateSelectedFilters([DIMENSION_ID_PERIOD, DIMENSION_ID_ORGUNIT, ...otherItems]);\n    }\n\n    setFiltersSelectable(val);\n  };\n\n  const updateSelectedFilters = sItems => {\n    // ensure that orgUnit, period appear before other items\n    const periodItem = [...new Set(sItems.filter(i => i === DIMENSION_ID_PERIOD))];\n    const orgUnitItem = [...new Set(sItems.filter(i => i === DIMENSION_ID_ORGUNIT))];\n    const otherItems = sItems.filter(i => i !== DIMENSION_ID_ORGUNIT && i !== DIMENSION_ID_PERIOD);\n    return setSelected([...periodItem, ...orgUnitItem, ...otherItems]);\n  };\n\n  const closeDialog = () => {\n    setSelected(initiallySelectedItems);\n    setFiltersSelectable(restrictFilters);\n    onClose();\n  };\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, open && /*#__PURE__*/React.createElement(Modal, {\n    large: true,\n    position: \"top\",\n    onClose: closeDialog\n  }, /*#__PURE__*/React.createElement(ModalTitle, null, i18n.t('Dashboard filter settings')), /*#__PURE__*/React.createElement(ModalContent, null, /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.descContainer\n  }, /*#__PURE__*/React.createElement(\"span\", null, i18n.t(`Dashboards can be filtered by dimensions to change\n                                         the data shown. By default, all dimensions are available\n                                         as filters. Alternatively, only selected dimensions can\n                                         be made available on a dashboard.`))), /*#__PURE__*/React.createElement(RadioOptions, {\n    filtersSelectable: filtersSelectable,\n    updateFilterDimensionRestrictability: updateFilterDimensionRestrictability\n  }), filtersSelectable && /*#__PURE__*/React.createElement(Transfer, {\n    filterable: true,\n    height: \"400px\",\n    leftHeader: /*#__PURE__*/React.createElement(\"div\", {\n      className: classes.transferHeader\n    }, /*#__PURE__*/React.createElement(\"span\", null, i18n.t('Available Filters'))),\n    maxSelections: Infinity,\n    onChange: payload => {\n      return updateSelectedFilters(payload.selected);\n    },\n    options: dimensions.map(d => {\n      return {\n        label: d.name,\n        value: d.id\n      };\n    }),\n    optionsWidth: \"350px\",\n    rightHeader: /*#__PURE__*/React.createElement(\"div\", {\n      className: classes.transferHeader\n    }, /*#__PURE__*/React.createElement(\"span\", null, i18n.t('Selected Filters'))),\n    selected: selected,\n    selectedWidth: \"350px\"\n  })), /*#__PURE__*/React.createElement(ModalActions, null, /*#__PURE__*/React.createElement(ButtonStrip, {\n    end: true\n  }, /*#__PURE__*/React.createElement(Button, {\n    onClick: closeDialog,\n    secondary: true,\n    type: \"button\"\n  }, i18n.t('Cancel')), /*#__PURE__*/React.createElement(Button, {\n    onClick: () => {\n      if (!filtersSelectable) {\n        setSelected([]);\n      }\n\n      onConfirm(filtersSelectable, selected);\n    },\n    primary: true,\n    type: \"button\"\n  }, i18n.t('Confirm'))))));\n};\n\nFilterSettingsDialog.propTypes = {\n  initiallySelectedItems: PropTypes.array,\n  open: PropTypes.bool,\n  restrictFilters: PropTypes.bool,\n  onClose: PropTypes.func,\n  onConfirm: PropTypes.func\n};\nexport default FilterSettingsDialog;","import { useOnlineStatus, useDataEngine, useAlert } from '@dhis2/app-runtime';\nimport { useD2 } from '@dhis2/app-runtime-adapter-d2';\nimport i18n from '@dhis2/d2-i18n';\nimport TranslationDialog from '@dhis2/d2-ui-translation-dialog';\nimport { Button, ButtonStrip } from '@dhis2/ui';\nimport PropTypes from 'prop-types';\nimport React, { useState } from 'react';\nimport { connect } from 'react-redux';\nimport { Redirect } from 'react-router-dom';\nimport { tFetchDashboards } from '../../actions/dashboards';\nimport { tSaveDashboard, acClearEditDashboard, acSetPrintPreviewView, acClearPrintPreviewView, acSetFilterSettings } from '../../actions/editDashboard';\nimport { acClearPrintDashboard } from '../../actions/printDashboard';\nimport { acClearSelected } from '../../actions/selected';\nimport ConfirmActionDialog from '../../components/ConfirmActionDialog';\nimport OfflineTooltip from '../../components/OfflineTooltip';\nimport { sGetEditDashboardRoot, sGetIsPrintPreviewView, sGetEditIsDirty, sGetLayoutColumns } from '../../reducers/editDashboard';\nimport { deleteDashboardMutation } from './deleteDashboardMutation';\nimport FilterSettingsDialog from './FilterSettingsDialog';\nimport classes from './styles/ActionsBar.module.css';\nconst saveFailedMessage = i18n.t('Failed to save dashboard. You might be offline or not have access to edit this dashboard.');\nconst saveFailedCodeExistsMessage = i18n.t('This code is already being used on another dashboard');\nconst deleteFailedMessage = i18n.t('Failed to delete dashboard. You might be offline or not have access to edit this dashboard.');\n\nconst EditBar = ({\n  dashboard,\n  ...props\n}) => {\n  var _dashboard$access2, _dashboard$access3, _dashboard$access4, _dashboard$access5, _dashboard$access6;\n\n  const {\n    d2\n  } = useD2();\n  const dataEngine = useDataEngine();\n  const {\n    online\n  } = useOnlineStatus();\n  const [translationDlgIsOpen, setTranslationDlgIsOpen] = useState(false);\n  const [filterSettingsDlgIsOpen, setFilterSettingsDlgIsOpen] = useState(false);\n  const [confirmDeleteDlgIsOpen, setConfirmDeleteDlgIsOpen] = useState(false);\n  const [confirmDiscardDlgIsOpen, setConfirmDiscardDlgIsOpen] = useState(false);\n  const [redirectUrl, setRedirectUrl] = useState(undefined);\n  const saveFailureAlert = useAlert(saveFailedMessage, {\n    critical: true\n  });\n  const saveFailureCodeExistsAlert = useAlert(saveFailedCodeExistsMessage, {\n    critical: true\n  });\n  const deleteFailureAlert = useAlert(deleteFailedMessage, {\n    critical: true\n  });\n\n  const onConfirmDelete = () => {\n    setConfirmDeleteDlgIsOpen(true);\n  };\n\n  const onDeleteConfirmed = () => {\n    setConfirmDeleteDlgIsOpen(false);\n    dataEngine.mutate(deleteDashboardMutation, {\n      variables: {\n        id: dashboard.id\n      }\n    }).then(() => {\n      props.clearSelected();\n      return props.fetchDashboards();\n    }).then(() => setRedirectUrl('/')).catch(deleteFailureAlert.show);\n  };\n\n  const onSave = () => {\n    props.saveDashboard().then(newId => {\n      props.clearSelected();\n      setRedirectUrl(`/${newId}`);\n    }).catch(e => {\n      var _e$details$response, _e$details$response$e, _e$details$response$e2;\n\n      if (e.details.httpStatusCode === 409 && ((_e$details$response = e.details.response) === null || _e$details$response === void 0 ? void 0 : (_e$details$response$e = _e$details$response.errorReports) === null || _e$details$response$e === void 0 ? void 0 : (_e$details$response$e2 = _e$details$response$e.at(0)) === null || _e$details$response$e2 === void 0 ? void 0 : _e$details$response$e2.errorCode) === 'E5003') {\n        saveFailureCodeExistsAlert.show();\n      } else {\n        saveFailureAlert.show();\n      }\n    });\n  };\n\n  const onPrintPreview = () => {\n    if (props.isPrintPreviewView) {\n      props.clearPrintPreview();\n      props.clearPrintDashboard();\n    } else {\n      props.showPrintPreview();\n    }\n  };\n\n  const onConfirmDiscard = () => {\n    // disabling dirty check in 2.37\n    // if (props.isDirty) {\n    //     setConfirmDiscardDlgIsOpen(true)\n    // } else {\n    onDiscardConfirmed(); // }\n  };\n\n  const onDiscardConfirmed = () => {\n    props.onDiscardChanges();\n    const redirectUrl = dashboard.id ? `/${dashboard.id}` : '/';\n    setRedirectUrl(redirectUrl);\n  };\n\n  const onContinueEditing = () => {\n    setConfirmDeleteDlgIsOpen(false);\n    setConfirmDiscardDlgIsOpen(false);\n  };\n\n  const onFilterSettingsConfirmed = (filterSettingsRestrictability, selectedFilters) => {\n    const allowedFilters = filterSettingsRestrictability ? selectedFilters : [];\n    props.setFilterSettings({\n      allowedFilters,\n      restrictFilters: filterSettingsRestrictability\n    });\n    toggleFilterSettingsDialog();\n  };\n\n  const toggleTranslationDialog = () => setTranslationDlgIsOpen(!translationDlgIsOpen);\n\n  const toggleFilterSettingsDialog = () => {\n    setFilterSettingsDlgIsOpen(!filterSettingsDlgIsOpen);\n  };\n\n  const translationDialog = () => dashboard.id ? /*#__PURE__*/React.createElement(TranslationDialog, {\n    className: \"translation-dialog\",\n    d2: d2,\n    open: translationDlgIsOpen,\n    onRequestClose: toggleTranslationDialog,\n    objectToTranslate: { ...dashboard,\n      modelDefinition: {\n        name: 'dashboard'\n      }\n    },\n    fieldsToTranslate: ['name', 'description'],\n    onTranslationError: err => console.log('translation update error', err),\n    onTranslationSaved: Function.prototype,\n    insertTheme: true,\n    isOnline: online\n  }) : null;\n\n  const filterSettingsDialog = () => {\n    return /*#__PURE__*/React.createElement(FilterSettingsDialog, {\n      restrictFilters: dashboard.restrictFilters,\n      initiallySelectedItems: dashboard.allowedFilters,\n      onClose: toggleFilterSettingsDialog,\n      onConfirm: onFilterSettingsConfirmed,\n      open: filterSettingsDlgIsOpen\n    });\n  };\n\n  const renderActionButtons = () => {\n    var _dashboard$access;\n\n    return /*#__PURE__*/React.createElement(ButtonStrip, null, !props.isPrintPreviewView && /*#__PURE__*/React.createElement(OfflineTooltip, {\n      content: i18n.t('Cannot save this dashboard while offline')\n    }, /*#__PURE__*/React.createElement(Button, {\n      disabled: !online,\n      primary: true,\n      small: true,\n      onClick: onSave,\n      dataTest: \"save-dashboard-button\"\n    }, i18n.t('Save changes'))), /*#__PURE__*/React.createElement(OfflineTooltip, null, /*#__PURE__*/React.createElement(Button, {\n      small: true,\n      disabled: !online,\n      onClick: onPrintPreview\n    }, props.isPrintPreviewView ? i18n.t('Exit print preview') : i18n.t('Print preview'))), !props.isPrintPreviewView && /*#__PURE__*/React.createElement(OfflineTooltip, null, /*#__PURE__*/React.createElement(Button, {\n      small: true,\n      disabled: !online,\n      onClick: toggleFilterSettingsDialog\n    }, i18n.t('Filter settings'))), dashboard.id && !props.isPrintPreviewView && /*#__PURE__*/React.createElement(OfflineTooltip, null, /*#__PURE__*/React.createElement(Button, {\n      small: true,\n      disabled: !online,\n      onClick: toggleTranslationDialog\n    }, i18n.t('Translate'))), dashboard.id && !props.isPrintPreviewView && ((_dashboard$access = dashboard.access) === null || _dashboard$access === void 0 ? void 0 : _dashboard$access.delete) && /*#__PURE__*/React.createElement(OfflineTooltip, {\n      content: i18n.t('Cannot delete this dashboard while offline')\n    }, /*#__PURE__*/React.createElement(Button, {\n      small: true,\n      disabled: !online,\n      onClick: onConfirmDelete,\n      dataTest: \"delete-dashboard-button\"\n    }, i18n.t('Delete'))));\n  };\n\n  if (redirectUrl) {\n    return /*#__PURE__*/React.createElement(Redirect, {\n      to: redirectUrl\n    });\n  }\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.editBar,\n    \"data-test\": \"edit-control-bar\"\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.controls\n  }, (_dashboard$access2 = dashboard.access) !== null && _dashboard$access2 !== void 0 && _dashboard$access2.update ? renderActionButtons() : null, !props.isPrintPreviewView && /*#__PURE__*/React.createElement(Button, {\n    small: true,\n    secondary: true,\n    onClick: onConfirmDiscard\n  }, (_dashboard$access3 = dashboard.access) !== null && _dashboard$access3 !== void 0 && _dashboard$access3.update ? i18n.t('Exit without saving') : i18n.t('Go to dashboards')))), ((_dashboard$access4 = dashboard.access) === null || _dashboard$access4 === void 0 ? void 0 : _dashboard$access4.update) && filterSettingsDialog(), dashboard.id && ((_dashboard$access5 = dashboard.access) === null || _dashboard$access5 === void 0 ? void 0 : _dashboard$access5.update) && translationDialog(), dashboard.id && ((_dashboard$access6 = dashboard.access) === null || _dashboard$access6 === void 0 ? void 0 : _dashboard$access6.delete) && /*#__PURE__*/React.createElement(ConfirmActionDialog, {\n    title: i18n.t('Delete dashboard'),\n    message: i18n.t('Deleting dashboard \"{{ dashboardName }}\" will remove it for all users. This action cannot be undone. Are you sure you want to permanently delete this dashboard?', {\n      dashboardName: dashboard.name\n    }),\n    cancelLabel: i18n.t('Cancel'),\n    confirmLabel: i18n.t('Delete'),\n    onConfirm: onDeleteConfirmed,\n    onCancel: onContinueEditing,\n    open: confirmDeleteDlgIsOpen\n  }), /*#__PURE__*/React.createElement(ConfirmActionDialog, {\n    title: i18n.t('Discard changes'),\n    message: i18n.t('This dashboard has unsaved changes. Are you sure you want to leave and discard these unsaved changes?'),\n    cancelLabel: i18n.t('No, stay here'),\n    confirmLabel: i18n.t('Yes, discard changes'),\n    onConfirm: onDiscardConfirmed,\n    onCancel: onContinueEditing,\n    open: confirmDiscardDlgIsOpen\n  }));\n};\n\nEditBar.propTypes = {\n  clearPrintDashboard: PropTypes.func,\n  clearPrintPreview: PropTypes.func,\n  clearSelected: PropTypes.func,\n  columns: PropTypes.array,\n  dashboard: PropTypes.object,\n  fetchDashboards: PropTypes.func,\n  isDirty: PropTypes.bool,\n  isPrintPreviewView: PropTypes.bool,\n  saveDashboard: PropTypes.func,\n  setFilterSettings: PropTypes.func,\n  showPrintPreview: PropTypes.func,\n  onAutoLayoutSelect: PropTypes.func,\n  onDiscardChanges: PropTypes.func\n};\nEditBar.defaultProps = {\n  columns: [...Array(5).keys()].map(i => ({\n    index: i\n  }))\n};\n\nconst mapStateToProps = state => ({\n  columns: sGetLayoutColumns(state),\n  dashboard: sGetEditDashboardRoot(state),\n  isPrintPreviewView: sGetIsPrintPreviewView(state),\n  isDirty: sGetEditIsDirty(state)\n});\n\nconst mapDispatchToProps = {\n  clearPrintDashboard: () => dispatch => dispatch(acClearPrintDashboard()),\n  clearPrintPreview: () => dispatch => dispatch(acClearPrintPreviewView()),\n  clearSelected: () => dispatch => dispatch(acClearSelected()),\n  saveDashboard: () => dispatch => dispatch(tSaveDashboard()).then(id => id),\n  fetchDashboards: () => dispatch => dispatch(tFetchDashboards()),\n  onDiscardChanges: () => dispatch => dispatch(acClearEditDashboard()),\n  setFilterSettings: value => dispatch => dispatch(acSetFilterSettings(value)),\n  showPrintPreview: () => dispatch => dispatch(acSetPrintPreviewView())\n};\nexport default connect(mapStateToProps, mapDispatchToProps)(EditBar);","function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport debounce from 'lodash/debounce';\nimport pick from 'lodash/pick';\nimport PropTypes from 'prop-types';\nimport React, { Component } from 'react';\nconst defaultDebounceMs = 100;\nconst defaultBufferFactor = 0.25;\nconst observerConfig = {\n  attributes: true,\n  childList: false,\n  subtree: false\n};\n\nclass ProgressiveLoadingContainer extends Component {\n  constructor(...args) {\n    super(...args);\n\n    _defineProperty(this, \"state\", {\n      shouldLoad: false\n    });\n\n    _defineProperty(this, \"containerRef\", null);\n\n    _defineProperty(this, \"debouncedCheckShouldLoad\", null);\n\n    _defineProperty(this, \"handlerOptions\", {\n      passive: true\n    });\n\n    _defineProperty(this, \"observer\", null);\n  }\n\n  checkShouldLoad() {\n    if (!this.containerRef) {\n      return;\n    } // force load item regardless of its position\n\n\n    if (this.forceLoad && !this.state.shouldLoad) {\n      this.setState({\n        shouldLoad: true\n      });\n      this.removeHandler();\n      return;\n    }\n\n    const bufferPx = this.props.bufferFactor * window.innerHeight;\n    const rect = this.containerRef.getBoundingClientRect(); // load item if it is near viewport\n\n    if (rect.bottom > -bufferPx && rect.top < window.innerHeight + bufferPx) {\n      this.setState({\n        shouldLoad: true\n      });\n      this.removeHandler();\n    }\n  }\n\n  registerHandler() {\n    this.debouncedCheckShouldLoad = debounce(() => this.checkShouldLoad(), this.props.debounceMs);\n    Array.from(document.getElementsByClassName('dashboard-scroll-container')).forEach(container => {\n      container.addEventListener('scroll', this.debouncedCheckShouldLoad, this.handlerOptions);\n    });\n\n    const mutationCallback = mutationsList => {\n      const styleChanged = mutationsList.find(mutation => mutation.attributeName === 'style');\n\n      if (styleChanged) {\n        this.debouncedCheckShouldLoad();\n      }\n    };\n\n    this.observer = new MutationObserver(mutationCallback);\n    this.observer.observe(this.containerRef, observerConfig);\n  }\n\n  removeHandler() {\n    Array.from(document.getElementsByClassName('dashboard-scroll-container')).forEach(container => {\n      container.removeEventListener('scroll', this.debouncedCheckShouldLoad, this.handlerOptions);\n    });\n    this.observer.disconnect();\n  }\n\n  componentDidMount() {\n    this.registerHandler();\n    this.checkShouldLoad();\n  }\n\n  componentDidUpdate() {\n    if (this.props.forceLoad && !this.state.shouldLoad) {\n      this.checkShouldLoad();\n    }\n  }\n\n  componentWillUnmount() {\n    this.removeHandler();\n  }\n\n  render() {\n    const {\n      children,\n      className,\n      style,\n      ...props\n    } = this.props;\n    const shouldLoad = this.state.shouldLoad || props.forceLoad;\n    const eventProps = pick(props, ['onMouseDown', 'onTouchStart', 'onMouseUp', 'onTouchEnd']);\n    return /*#__PURE__*/React.createElement(\"div\", _extends({\n      ref: ref => this.containerRef = ref,\n      style: style,\n      className: className,\n      \"data-test\": `dashboarditem-${props.itemId}`\n    }, eventProps), shouldLoad && children);\n  }\n\n}\n\n_defineProperty(ProgressiveLoadingContainer, \"propTypes\", {\n  children: PropTypes.node.isRequired,\n  bufferFactor: PropTypes.number,\n  className: PropTypes.string,\n  debounceMs: PropTypes.number,\n  forceLoad: PropTypes.bool,\n  itemId: PropTypes.string,\n  style: PropTypes.object\n});\n\n_defineProperty(ProgressiveLoadingContainer, \"defaultProps\", {\n  debounceMs: defaultDebounceMs,\n  bufferFactor: defaultBufferFactor,\n  forceLoad: false\n});\n\nexport default ProgressiveLoadingContainer;","import i18n from '@dhis2/d2-i18n';\nimport cx from 'classnames';\nimport PropTypes from 'prop-types';\nimport React, { useState } from 'react';\nimport { Responsive as ResponsiveReactGridLayout } from 'react-grid-layout';\nimport { connect } from 'react-redux';\nimport { acUpdateDashboardItemShapes } from '../../actions/editDashboard';\nimport { Item } from '../../components/Item/Item';\nimport NoContentMessage from '../../components/NoContentMessage';\nimport ProgressiveLoadingContainer from '../../components/ProgressiveLoadingContainer';\nimport { useWindowDimensions } from '../../components/WindowDimensionsProvider';\nimport { EDIT } from '../../modules/dashboardModes';\nimport { getGridItemDomElementClassName } from '../../modules/getGridItemDomElementClassName';\nimport { GRID_ROW_HEIGHT_PX, GRID_COMPACT_TYPE, MARGIN_PX, GRID_PADDING_PX, GRID_COLUMNS, hasShape, getGridWidth, hasLayout } from '../../modules/gridUtil';\nimport { getBreakpoint } from '../../modules/smallScreen';\nimport { orArray } from '../../modules/util';\nimport { sGetEditDashboardItems, sGetHideGrid, sGetLayout } from '../../reducers/editDashboard';\nimport classes from './styles/ItemGrid.module.css';\n\nconst EditItemGrid = ({\n  dashboardItems,\n  acUpdateDashboardItemShapes,\n  hasLayout,\n  hideGrid\n}) => {\n  const [gridWidth, setGridWidth] = useState({\n    width: 0\n  });\n  const {\n    width\n  } = useWindowDimensions();\n\n  const onLayoutChange = newLayout => {\n    acUpdateDashboardItemShapes(newLayout);\n  };\n\n  const onWidthChanged = containerWidth => setTimeout(() => setGridWidth({\n    width: containerWidth\n  }), 200);\n\n  const getItemComponent = item => /*#__PURE__*/React.createElement(ProgressiveLoadingContainer, {\n    key: item.i,\n    className: cx(item.type, 'edit', getGridItemDomElementClassName(item.id)),\n    itemId: item.id\n  }, /*#__PURE__*/React.createElement(Item, {\n    item: item,\n    gridWidth: gridWidth.width,\n    dashboardMode: EDIT\n  }));\n\n  const getItemComponents = items => items.map(item => getItemComponent(item));\n\n  if (!dashboardItems.length) {\n    return /*#__PURE__*/React.createElement(NoContentMessage, {\n      text: i18n.t('There are no items on this dashboard')\n    });\n  }\n\n  if (hideGrid) {\n    return null;\n  }\n\n  return /*#__PURE__*/React.createElement(ResponsiveReactGridLayout, {\n    className: classes.grid,\n    rowHeight: GRID_ROW_HEIGHT_PX,\n    width: getGridWidth(width),\n    cols: {\n      lg: GRID_COLUMNS\n    },\n    breakpoints: {\n      lg: getBreakpoint()\n    },\n    layouts: {\n      lg: dashboardItems\n    },\n    compactType: GRID_COMPACT_TYPE,\n    margin: MARGIN_PX,\n    containerPadding: {\n      lg: GRID_PADDING_PX\n    },\n    onLayoutChange: onLayoutChange,\n    onWidthChange: onWidthChanged,\n    isDraggable: !hasLayout,\n    isResizable: !hasLayout,\n    draggableCancel: \"input,textarea\"\n  }, getItemComponents(dashboardItems));\n};\n\nEditItemGrid.propTypes = {\n  acUpdateDashboardItemShapes: PropTypes.func,\n  dashboardItems: PropTypes.array,\n  hasLayout: PropTypes.bool,\n  hideGrid: PropTypes.bool\n}; // Container\n\nconst mapStateToProps = state => {\n  return {\n    dashboardItems: orArray(sGetEditDashboardItems(state)).filter(hasShape),\n    hasLayout: hasLayout(sGetLayout(state)),\n    hideGrid: sGetHideGrid(state)\n  };\n};\n\nconst mapDispatchToProps = {\n  acUpdateDashboardItemShapes\n};\nexport default connect(mapStateToProps, mapDispatchToProps)(EditItemGrid);","import React from 'react';\nexport const LayoutFixedIcon = () => /*#__PURE__*/React.createElement(\"svg\", {\n  height: \"42\",\n  viewBox: \"0 0 42 42\",\n  width: \"42\",\n  xmlns: \"http://www.w3.org/2000/svg\"\n}, /*#__PURE__*/React.createElement(\"path\", {\n  d: \"m10 0v42h-10v-42zm16 0v42h-10v-42zm16 0v42h-10v-42z\",\n  fillRule: \"evenodd\"\n}));\nexport default LayoutFixedIcon;","import React from 'react';\nexport const LayoutFreeflowIcon = () => /*#__PURE__*/React.createElement(\"svg\", {\n  height: \"42\",\n  viewBox: \"0 0 42 42\",\n  width: \"42\",\n  xmlns: \"http://www.w3.org/2000/svg\"\n}, /*#__PURE__*/React.createElement(\"path\", {\n  d: \"m42 33v9h-42v-9zm-31-12v7h-11v-7zm15 0v7h-11v-7zm16-21v28h-10v-28zm-16 0v16h-26v-16z\",\n  fillRule: \"evenodd\"\n}));\nexport default LayoutFreeflowIcon;","import { useState, useEffect } from 'react';\n\nconst useDebounce = (value, delay) => {\n  const [debouncedValue, setDebouncedValue] = useState(value);\n  useEffect(() => {\n    const handler = setTimeout(() => {\n      setDebouncedValue(value);\n    }, delay);\n    return () => {\n      clearTimeout(handler);\n    };\n  }, [value, delay]);\n  return debouncedValue;\n};\n\nexport default useDebounce;","import { visTypeIcons } from '@dhis2/analytics';\nimport i18n from '@dhis2/d2-i18n';\nimport { MenuItem, colors, IconLaunch16 } from '@dhis2/ui';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport { getItemIcon, VISUALIZATION } from '../../../modules/itemTypes';\nimport classes from './styles/ContentMenuItem.module.css';\n\nconst LaunchLink = ({\n  url\n}) => /*#__PURE__*/React.createElement(\"a\", {\n  onClick: e => e.stopPropagation(),\n  className: classes.launchLink,\n  target: \"_blank\",\n  rel: \"noopener noreferrer\",\n  href: url\n}, /*#__PURE__*/React.createElement(IconLaunch16, {\n  color: colors.grey700\n}));\n\nLaunchLink.propTypes = {\n  url: PropTypes.string\n};\n\nconst InsertButton = () => /*#__PURE__*/React.createElement(\"button\", {\n  className: classes.buttonInsert\n}, i18n.t('Insert'));\n\nconst ContentMenuItem = ({\n  type,\n  name,\n  onInsert,\n  url,\n  visType\n}) => {\n  const ItemIcon = getItemIcon(type);\n  let renderedItemIcon;\n\n  if (type === VISUALIZATION) {\n    const VisualizationIcon = visTypeIcons[visType];\n    renderedItemIcon = /*#__PURE__*/React.createElement(VisualizationIcon, {\n      color: colors.grey600\n    });\n  } else {\n    renderedItemIcon = /*#__PURE__*/React.createElement(ItemIcon, {\n      color: colors.grey600\n    });\n  }\n\n  return /*#__PURE__*/React.createElement(MenuItem, {\n    onClick: onInsert,\n    icon: renderedItemIcon,\n    label: /*#__PURE__*/React.createElement(\"div\", {\n      className: classes.menuItem\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: classes.label\n    }, /*#__PURE__*/React.createElement(\"span\", null, name), url ? /*#__PURE__*/React.createElement(LaunchLink, {\n      url: url\n    }) : null), /*#__PURE__*/React.createElement(InsertButton, null)),\n    dataTest: `menu-item-${name}`\n  });\n};\n\nContentMenuItem.propTypes = {\n  name: PropTypes.string,\n  type: PropTypes.string,\n  url: PropTypes.string,\n  visType: PropTypes.string,\n  onInsert: PropTypes.func\n};\nexport default ContentMenuItem;","import { MenuItem, colors } from '@dhis2/ui';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport classes from './styles/HeaderMenuItem.module.css';\n\nconst HeaderMenuItem = ({\n  title\n}) => /*#__PURE__*/React.createElement(MenuItem, {\n  className: classes.item,\n  dense: true,\n  key: title,\n  disabled: true,\n  label: /*#__PURE__*/React.createElement(\"span\", {\n    style: {\n      color: colors.grey800,\n      fontWeight: '600'\n    }\n  }, title)\n});\n\nHeaderMenuItem.propTypes = {\n  title: PropTypes.string.isRequired\n};\nexport default HeaderMenuItem;","import i18n from '@dhis2/d2-i18n';\nimport { VISUALIZATION, MAP, EVENT_CHART, EVENT_REPORT, REPORTS, RESOURCES, APP, MESSAGES, TEXT, SPACER } from '../../../modules/itemTypes';\nexport const singleItems = [{\n  id: 'additional',\n  header: i18n.t('Additional items'),\n  items: [{\n    type: TEXT,\n    name: i18n.t('Text box'),\n    content: ''\n  }, {\n    type: MESSAGES,\n    name: i18n.t('Messages'),\n    content: 'true'\n  }, {\n    type: SPACER,\n    name: i18n.t('Spacer'),\n    content: ''\n  }]\n}]; // categorizedItems are grouped in the item selector menu\n\nexport const categorizedItems = [VISUALIZATION, MAP, EVENT_REPORT, EVENT_CHART, REPORTS, RESOURCES, APP]; // listItemTypes are included in a single dashboard item\n\nexport const listItemTypes = [REPORTS, RESOURCES];","import { useConfig } from '@dhis2/app-runtime';\nimport i18n from '@dhis2/d2-i18n';\nimport { MenuItem, Divider } from '@dhis2/ui';\nimport PropTypes from 'prop-types';\nimport React, { useState } from 'react';\nimport { connect } from 'react-redux';\nimport { tSetDashboardItems } from '../../../actions/editDashboard';\nimport { getItemUrl, APP, VISUALIZATION } from '../../../modules/itemTypes';\nimport { tAddListItemContent } from './actions';\nimport ContentMenuItem from './ContentMenuItem';\nimport HeaderMenuItem from './HeaderMenuItem';\nimport { categorizedItems, listItemTypes } from './selectableItems';\nimport classes from './styles/CategorizedMenuGroup.module.css';\n\nconst CategorizedMenuGroup = ({\n  type,\n  title,\n  items,\n  hasMore,\n  onAddItem,\n  tAddListItemContent,\n  onChangeItemsLimit\n}) => {\n  const {\n    baseUrl\n  } = useConfig();\n  const [seeMore, setSeeMore] = useState(false);\n\n  const addItem = item => () => {\n    if (type === APP) {\n      // acAddDashboardItem({ type, content: item.key })\n      onAddItem({\n        type,\n        content: item.key\n      });\n    } else {\n      const newItem = {\n        id: item.id,\n        name: item.displayName || item.name\n      };\n\n      if (listItemTypes.includes(type)) {\n        tAddListItemContent(type, newItem);\n      } else {\n        onAddItem({\n          type,\n          content: newItem\n        });\n      }\n    }\n  };\n\n  const toggleSeeMore = () => {\n    setSeeMore(!seeMore);\n    onChangeItemsLimit(type);\n  };\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(HeaderMenuItem, {\n    title: title\n  }), items.map(item => {\n    const itemUrl = getItemUrl(type, item, baseUrl);\n    return /*#__PURE__*/React.createElement(ContentMenuItem, {\n      key: item.id || item.key,\n      type: type,\n      visType: type === VISUALIZATION ? item.type : type,\n      name: item.displayName || item.name,\n      onInsert: addItem(item),\n      url: itemUrl\n    });\n  }), hasMore ? /*#__PURE__*/React.createElement(MenuItem, {\n    dense: true,\n    key: `showmore${title}`,\n    onClick: toggleSeeMore,\n    label: /*#__PURE__*/React.createElement(\"button\", {\n      className: classes.showMoreButton\n    }, seeMore ? i18n.t('Show fewer') : i18n.t('Show more'))\n  }) : null, /*#__PURE__*/React.createElement(Divider, {\n    margin: \"8px 0px\"\n  }));\n};\n\nCategorizedMenuGroup.propTypes = {\n  items: PropTypes.array.isRequired,\n  title: PropTypes.string.isRequired,\n  type: PropTypes.oneOf(categorizedItems).isRequired,\n  onAddItem: PropTypes.func.isRequired,\n  onChangeItemsLimit: PropTypes.func.isRequired,\n  hasMore: PropTypes.bool,\n  tAddListItemContent: PropTypes.func\n};\nexport default connect(null, {\n  tAddListItemContent,\n  onAddItem: item => dispatch => {\n    dispatch(tSetDashboardItems(item));\n  }\n})(CategorizedMenuGroup);","import { // acAddDashboardItem,\nacUpdateDashboardItem, tSetDashboardItems } from '../../../actions/editDashboard';\nimport { itemTypeMap } from '../../../modules/itemTypes';\nimport { sGetEditDashboardRoot } from '../../../reducers/editDashboard';\nexport const tAddListItemContent = (type, content) => (dispatch, getState) => {\n  const state = getState();\n  const listItemType = itemTypeMap[type].propName;\n  const dashboardItems = sGetEditDashboardRoot(state).dashboardItems;\n  const dashboardItemIndex = dashboardItems.findIndex(item => item.type === type);\n  let dashboardItem; // Reports/Resources/Users dashboard item type already present in dashboard\n\n  if (dashboardItemIndex > -1) {\n    dashboardItem = dashboardItems[dashboardItemIndex];\n    dashboardItem[listItemType].push(content);\n    dispatch(acUpdateDashboardItem(dashboardItem));\n  } else {\n    dashboardItem = {\n      type: type,\n      content: [content]\n    }; // dispatch(acAddDashboardItem(dashboardItem))\n\n    dispatch(tSetDashboardItems(dashboardItem));\n  }\n};","import { useOnlineStatus } from '@dhis2/app-runtime';\nimport i18n from '@dhis2/d2-i18n';\nimport { Input, Tooltip } from '@dhis2/ui';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport classes from './styles/ItemSearchField.module.css';\n\nconst ItemSearchField = props => {\n  const {\n    online\n  } = useOnlineStatus();\n\n  const getInput = () => /*#__PURE__*/React.createElement(Input, {\n    name: \"Dashboard item search\",\n    label: i18n.t('Search for items to add to this dashboard'),\n    type: \"text\",\n    onChange: props.onChange,\n    onFocus: props.onFocus,\n    value: props.value,\n    dataTest: \"item-search\",\n    dense: true,\n    disabled: !online,\n    placeholder: i18n.t('Search for visualizations, reports and more')\n  });\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.label\n  }, \"Search for items to add to this dashboard\"), online ? getInput() : /*#__PURE__*/React.createElement(Tooltip, {\n    content: i18n.t('Cannot search for dashboard items while offline'),\n    openDelay: 200,\n    closeDelay: 100\n  }, getInput()));\n};\n\nItemSearchField.propTypes = {\n  value: PropTypes.string,\n  onChange: PropTypes.func,\n  onFocus: PropTypes.func\n};\nexport default ItemSearchField;","import PropTypes from 'prop-types';\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport { tSetDashboardItems } from '../../../actions/editDashboard';\nimport ContentMenuItem from './ContentMenuItem';\nimport HeaderMenuItem from './HeaderMenuItem';\n\nconst SinglesMenuGroup = ({\n  onAddItem,\n  category\n}) => {\n  const addToDashboard = ({\n    type,\n    content\n  }) => () => {\n    onAddItem({\n      type,\n      content\n    });\n  };\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(HeaderMenuItem, {\n    title: category.header\n  }), category.items.map(item => /*#__PURE__*/React.createElement(ContentMenuItem, {\n    key: item.type,\n    type: item.type,\n    name: item.name,\n    onInsert: addToDashboard(item)\n  })));\n};\n\nSinglesMenuGroup.propTypes = {\n  category: PropTypes.object,\n  onAddItem: PropTypes.func\n};\nexport default connect(null, {\n  onAddItem: item => dispatch => {\n    dispatch(tSetDashboardItems(item));\n  }\n})(SinglesMenuGroup);","import { useDataEngine } from '@dhis2/app-runtime';\nimport { Popover, FlyoutMenu } from '@dhis2/ui';\nimport React, { useState, useEffect, createRef } from 'react';\nimport { itemTypeMap, getDefaultItemCount } from '../../../modules/itemTypes';\nimport useDebounce from '../../../modules/useDebounce';\nimport CategorizedMenuGroup from './CategorizedMenuGroup';\nimport { getDashboardsQQuery } from './dashboardsQQuery';\nimport ItemSearchField from './ItemSearchField';\nimport { singleItems, categorizedItems } from './selectableItems';\nimport SinglesMenuGroup from './SinglesMenuGroup';\nimport classes from './styles/ItemSelector.module.css';\n\nconst ItemSelector = () => {\n  const [isOpen, setIsOpen] = useState(false);\n  const [filter, setFilter] = useState('');\n  const [items, setItems] = useState(null);\n  const [maxOptions, setMaxOptions] = useState(new Set());\n  const dataEngine = useDataEngine();\n  const debouncedFilterText = useDebounce(filter, 350);\n  useEffect(() => {\n    const query = getDashboardsQQuery(debouncedFilterText, Array.from(maxOptions));\n    dataEngine.query({\n      items: query\n    }).then(res => setItems(res.items));\n  }, [debouncedFilterText, maxOptions]);\n\n  const closeMenu = () => {\n    setIsOpen(false);\n    setFilter('');\n    setMaxOptions(new Set());\n  };\n\n  const openMenu = () => setIsOpen(true);\n\n  const getCategorizedMenuGroups = () => {\n    return categorizedItems.filter(type => {\n      const itemType = itemTypeMap[type];\n      return items && items[itemType.endPointName];\n    }).map(type => {\n      const itemType = itemTypeMap[type];\n      const itemCount = getDefaultItemCount(type);\n      const allItems = items[itemType.endPointName];\n      const hasMore = allItems.length > itemCount;\n      const displayItems = maxOptions.has(itemType.id) ? allItems : allItems.slice(0, itemCount);\n      return /*#__PURE__*/React.createElement(CategorizedMenuGroup, {\n        key: type,\n        type: type,\n        title: itemType.pluralTitle,\n        items: displayItems,\n        onChangeItemsLimit: updateMaxOptions,\n        hasMore: hasMore\n      });\n    });\n  };\n\n  const getSinglesMenuGroups = () => singleItems.map(category => /*#__PURE__*/React.createElement(SinglesMenuGroup, {\n    key: category.id,\n    category: category\n  }));\n\n  const getMenuGroups = () => getCategorizedMenuGroups().concat(getSinglesMenuGroups());\n\n  const updateMaxOptions = type => {\n    if (type) {\n      const options = new Set(maxOptions);\n      options.has(type) ? options.delete(type) : options.add(type);\n      setMaxOptions(options);\n    } else {\n      setMaxOptions(new Set());\n    }\n  };\n\n  const updateFilter = ({\n    value\n  }) => setFilter(value);\n\n  const inputRef = /*#__PURE__*/createRef();\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"span\", {\n    ref: inputRef\n  }, /*#__PURE__*/React.createElement(ItemSearchField, {\n    value: filter,\n    onChange: updateFilter,\n    onFocus: openMenu\n  })), isOpen && /*#__PURE__*/React.createElement(Popover, {\n    reference: inputRef,\n    placement: \"bottom-start\",\n    onClickOutside: closeMenu,\n    arrow: false,\n    maxWidth: 700\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.popover\n  }, /*#__PURE__*/React.createElement(FlyoutMenu, {\n    className: classes.menu,\n    dataTest: \"item-menu\",\n    maxWidth: \"700px\"\n  }, getMenuGroups()))));\n};\n\nexport default ItemSelector;","export const getDashboardsQQuery = (query = '', maxItems = []) => {\n  return {\n    resource: `dashboards/q/${encodeURIComponent(query)}`,\n    params: {\n      count: 11,\n      max: maxItems\n    }\n  };\n};","import { useOnlineStatus } from '@dhis2/app-runtime';\nimport i18n from '@dhis2/d2-i18n';\nimport { Modal, ModalTitle, ModalContent, ModalActions, ButtonStrip, Button, InputField, Radio } from '@dhis2/ui';\nimport cx from 'classnames';\nimport PropTypes from 'prop-types';\nimport React, { useEffect, useState } from 'react';\nimport OfflineTooltip from '../../components/OfflineTooltip';\nimport { GRID_COLUMNS } from '../../modules/gridUtil';\nimport { LayoutFixedIcon } from './assets/LayoutFixed';\nimport { LayoutFreeflowIcon } from './assets/LayoutFreeflow';\nimport classes from './styles/LayoutModal.module.css';\nconst DEFAULT_COLUMNS = 3;\n\nconst isColumns = value => Boolean(value) || value === '';\n\nconst getColsSaveValue = value => value === '' ? DEFAULT_COLUMNS : parseInt(value, 10);\n\nexport const LayoutModal = ({\n  columns,\n  onSaveLayout,\n  onClose\n}) => {\n  const {\n    offline\n  } = useOnlineStatus();\n  const [cols, setCols] = useState(columns);\n  useEffect(() => setCols(columns), []);\n\n  const setColsWrapper = value => {\n    const parsedValue = parseInt(value, 10); // handle values like \".2\"\n\n    if (isNaN(parsedValue) && value !== '') {\n      setCols(1);\n      return;\n    }\n\n    if (parsedValue < 1) {\n      setCols(1);\n      return;\n    }\n\n    if (parsedValue > GRID_COLUMNS) {\n      setCols(GRID_COLUMNS);\n      return;\n    }\n\n    setCols(value);\n  };\n\n  return /*#__PURE__*/React.createElement(Modal, {\n    large: true,\n    onClose: onClose\n  }, /*#__PURE__*/React.createElement(ModalTitle, null, i18n.t('Dashboard layout')), /*#__PURE__*/React.createElement(ModalContent, null, /*#__PURE__*/React.createElement(\"div\", {\n    className: cx(classes.option, {\n      [classes.active]: !isColumns(cols)\n    }),\n    onClick: () => setCols(0)\n  }, /*#__PURE__*/React.createElement(Radio, {\n    onChange: () => setCols(0),\n    checked: cols === 0,\n    className: classes.radio\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: cx(classes.iconWrapper, {\n      [classes.activeIcon]: !isColumns(cols)\n    })\n  }, /*#__PURE__*/React.createElement(LayoutFreeflowIcon, null)), /*#__PURE__*/React.createElement(\"div\", null, /*#__PURE__*/React.createElement(\"h2\", {\n    className: classes.title\n  }, i18n.t('Freeflow')), /*#__PURE__*/React.createElement(\"p\", {\n    className: classes.description\n  }, i18n.t('Dashboard items can be placed anywhere, at any size.')))), /*#__PURE__*/React.createElement(\"div\", {\n    className: cx(classes.option, {\n      [classes.activeOption]: isColumns(cols)\n    }),\n    onClick: () => {\n      if (cols === 0) {\n        setCols(DEFAULT_COLUMNS);\n      }\n    }\n  }, /*#__PURE__*/React.createElement(Radio, {\n    onChange: () => {\n      if (cols === 0) {\n        setCols(DEFAULT_COLUMNS);\n      }\n    },\n    checked: isColumns(cols),\n    className: classes.radio\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: cx(classes.iconWrapper, {\n      [classes.activeIcon]: isColumns(cols)\n    })\n  }, /*#__PURE__*/React.createElement(LayoutFixedIcon, null)), /*#__PURE__*/React.createElement(\"div\", null, /*#__PURE__*/React.createElement(\"h2\", {\n    className: classes.title\n  }, i18n.t('Fixed columns')), /*#__PURE__*/React.createElement(\"p\", {\n    className: classes.description\n  }, i18n.t('Dashboard items are automatically placed within fixed, horizontal columns. The number of columns can be adjusted.')), isColumns(cols) && /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.columnOptions\n  }, /*#__PURE__*/React.createElement(InputField, {\n    inputWidth: \"100px\",\n    type: \"number\",\n    min: \"1\",\n    max: String(GRID_COLUMNS),\n    placeholder: String(DEFAULT_COLUMNS),\n    label: i18n.t('Number of columns'),\n    className: classes.columns,\n    value: String(cols),\n    onChange: ({\n      value\n    }) => setColsWrapper(value)\n  }))))), /*#__PURE__*/React.createElement(ModalActions, null, /*#__PURE__*/React.createElement(ButtonStrip, {\n    end: true\n  }, /*#__PURE__*/React.createElement(Button, {\n    secondary: true,\n    onClick: onClose\n  }, i18n.t('Cancel')), /*#__PURE__*/React.createElement(OfflineTooltip, null, /*#__PURE__*/React.createElement(Button, {\n    disabled: offline,\n    primary: true,\n    onClick: () => {\n      onSaveLayout(getColsSaveValue(cols));\n      onClose();\n    }\n  }, i18n.t('Save layout'))))));\n};\nLayoutModal.propTypes = {\n  columns: PropTypes.number,\n  onClose: PropTypes.func,\n  onSaveLayout: PropTypes.func\n};","function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nimport { useOnlineStatus } from '@dhis2/app-runtime';\nimport i18n from '@dhis2/d2-i18n';\nimport { InputField, TextAreaField, Radio, Button } from '@dhis2/ui';\nimport PropTypes from 'prop-types';\nimport React, { useState } from 'react';\nimport { connect } from 'react-redux';\nimport { acSetDashboardTitle, acSetDashboardDescription, acSetLayoutColumns, tSetDashboardItems, acSetItemConfigInsertPosition, acSetDashboardCode } from '../../actions/editDashboard';\nimport OfflineTooltip from '../../components/OfflineTooltip';\nimport { orObject } from '../../modules/util';\nimport { sGetEditDashboardRoot, sGetItemConfigInsertPosition, sGetLayoutColumns } from '../../reducers/editDashboard';\nimport { LayoutFixedIcon } from './assets/LayoutFixed';\nimport { LayoutFreeflowIcon } from './assets/LayoutFreeflow';\nimport ItemSelector from './ItemSelector/ItemSelector';\nimport { LayoutModal } from './LayoutModal';\nimport classes from './styles/TitleBar.module.css';\n\nconst EditTitleBar = ({\n  insertPosition,\n  columns,\n  description,\n  name,\n  code,\n  onChangeCode,\n  onChangeInsertPosition,\n  onChangeTitle,\n  onChangeDescription,\n  onSaveLayout\n}) => {\n  const {\n    offline\n  } = useOnlineStatus();\n\n  const updateTitle = (_, e) => {\n    onChangeTitle(e.target.value);\n  };\n\n  const updateCode = (_, e) => {\n    onChangeCode(e.target.value);\n  };\n\n  const updateDescription = (_, e) => {\n    onChangeDescription(e.target.value);\n  };\n\n  const [showLayoutModal, setShowLayoutModal] = useState(false);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.container\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.inputWrapper\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.inputFieldWrapper\n  }, /*#__PURE__*/React.createElement(InputField, {\n    name: \"Dashboard title input\",\n    label: i18n.t('Dashboard title'),\n    type: \"text\",\n    onChange: updateTitle,\n    value: name,\n    placeholder: i18n.t('Untitled dashboard'),\n    dataTest: \"dashboard-title-input\",\n    dense: true\n  }), /*#__PURE__*/React.createElement(InputField, _extends({\n    name: \"Dashboard code input\",\n    label: i18n.t('Dashboard code'),\n    type: \"text\",\n    onChange: updateCode,\n    value: code,\n    dataTest: \"dashboard-code-input\",\n    dense: true\n  }, code.length > 50 && {\n    error: true,\n    validationText: i18n.t(\"Code can't be longer than 50 characters\")\n  }))), /*#__PURE__*/React.createElement(TextAreaField, {\n    name: \"Dashboard description input\",\n    label: i18n.t('Dashboard description'),\n    onChange: updateDescription,\n    value: description,\n    dataTest: \"dashboard-description-input\",\n    rows: 6,\n    dense: true\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.searchContainer\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.layoutWrapper\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    className: classes.label\n  }, i18n.t('Layout')), /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.layoutOption\n  }, columns.length ? /*#__PURE__*/React.createElement(LayoutFixedIcon, null) : /*#__PURE__*/React.createElement(LayoutFreeflowIcon, null), /*#__PURE__*/React.createElement(\"span\", {\n    className: classes.layoutValue\n  }, columns.length ? i18n.t('{{count}} columns', {\n    count: columns.length,\n    defaultValue: '{{count}} column',\n    defaultValue_plural: '{{count}} columns'\n  }) : i18n.t('Freeflow')), /*#__PURE__*/React.createElement(OfflineTooltip, null, /*#__PURE__*/React.createElement(Button, {\n    disabled: offline,\n    small: true,\n    onClick: () => setShowLayoutModal(true)\n  }, i18n.t('Change layout'))))), /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.positionWrapper\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    className: classes.label\n  }, i18n.t('Add new items to')), /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.positionOptions\n  }, /*#__PURE__*/React.createElement(Radio, {\n    dense: true,\n    label: i18n.t('End of dashboard'),\n    name: \"END\",\n    onChange: value => value.checked && onChangeInsertPosition(value.name),\n    checked: insertPosition === 'END'\n  }), /*#__PURE__*/React.createElement(Radio, {\n    dense: true,\n    label: i18n.t('Start of dashboard'),\n    name: \"START\",\n    onChange: value => value.checked && onChangeInsertPosition(value.name),\n    checked: insertPosition === 'START'\n  }))), /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.searchWrapper\n  }, /*#__PURE__*/React.createElement(ItemSelector, null))), showLayoutModal && /*#__PURE__*/React.createElement(LayoutModal, {\n    onClose: () => setShowLayoutModal(false),\n    columns: columns.length,\n    onSaveLayout: onSaveLayout\n  }));\n};\n\nEditTitleBar.propTypes = {\n  onChangeCode: PropTypes.func.isRequired,\n  onChangeDescription: PropTypes.func.isRequired,\n  onChangeInsertPosition: PropTypes.func.isRequired,\n  onChangeTitle: PropTypes.func.isRequired,\n  onSaveLayout: PropTypes.func.isRequired,\n  code: PropTypes.string,\n  columns: PropTypes.array,\n  description: PropTypes.string,\n  insertPosition: PropTypes.string,\n  name: PropTypes.string\n};\nEditTitleBar.defaultProps = {\n  name: '',\n  code: '',\n  description: '',\n  insertPosition: 'END'\n};\n\nconst mapStateToProps = state => {\n  const selectedDashboard = orObject(sGetEditDashboardRoot(state));\n  return {\n    name: selectedDashboard.name,\n    code: selectedDashboard.code,\n    columns: sGetLayoutColumns(state),\n    description: selectedDashboard.description,\n    insertPosition: sGetItemConfigInsertPosition(state)\n  };\n};\n\nconst mapDispatchToProps = {\n  onChangeCode: acSetDashboardCode,\n  onChangeTitle: acSetDashboardTitle,\n  onChangeDescription: acSetDashboardDescription,\n  onChangeInsertPosition: acSetItemConfigInsertPosition,\n  onSaveLayout: columns => dispatch => {\n    dispatch(acSetLayoutColumns([...Array(columns).keys()].map(i => ({\n      index: i\n    }))));\n    dispatch(tSetDashboardItems());\n  }\n};\nexport default connect(mapStateToProps, mapDispatchToProps)(EditTitleBar);","import { useDataEngine } from '@dhis2/app-runtime';\nimport i18n from '@dhis2/d2-i18n';\nimport { Layer, CenteredContent, CircularLoader } from '@dhis2/ui';\nimport cx from 'classnames';\nimport PropTypes from 'prop-types';\nimport React, { useState, useEffect } from 'react';\nimport { connect } from 'react-redux';\nimport { Redirect } from 'react-router-dom';\nimport { acSetEditDashboard } from '../../actions/editDashboard';\nimport { apiFetchDashboard } from '../../api/fetchDashboard';\nimport DashboardContainer from '../../components/DashboardContainer';\nimport NoContentMessage from '../../components/NoContentMessage';\nimport Notice from '../../components/Notice';\nimport { useWindowDimensions } from '../../components/WindowDimensionsProvider';\nimport { EDIT } from '../../modules/dashboardModes';\nimport { setHeaderbarVisible } from '../../modules/setHeaderbarVisible';\nimport { isSmallScreen } from '../../modules/smallScreen';\nimport { sGetIsPrintPreviewView } from '../../reducers/editDashboard';\nimport LayoutPrintPreview from '../print/PrintLayoutDashboard';\nimport ActionsBar from './ActionsBar';\nimport ItemGrid from './ItemGrid';\nimport classes from './styles/EditDashboard.module.css';\nimport TitleBar from './TitleBar';\n\nconst EditDashboard = props => {\n  const dataEngine = useDataEngine();\n  const {\n    width\n  } = useWindowDimensions();\n  const [redirectUrl, setRedirectUrl] = useState(null);\n  const [hasUpdateAccess, setHasUpdateAccess] = useState(null);\n  const [isLoading, setIsLoading] = useState(true);\n  useEffect(() => {\n    const loadDashboard = async () => {\n      try {\n        var _dashboard$access;\n\n        const dashboard = await apiFetchDashboard(dataEngine, props.id, {\n          mode: EDIT\n        });\n        props.setEditDashboard(dashboard);\n        setHasUpdateAccess(((_dashboard$access = dashboard.access) === null || _dashboard$access === void 0 ? void 0 : _dashboard$access.update) || false);\n        setIsLoading(false);\n      } catch (error) {\n        setRedirectUrl(props.id ? `/${props.id}` : '/');\n        setIsLoading(false);\n      }\n    };\n\n    if (isSmallScreen(width)) {\n      setRedirectUrl(props.id ? `/${props.id}` : '/');\n      return;\n    }\n\n    setHeaderbarVisible(true);\n    loadDashboard();\n  }, [props.id]);\n\n  if (redirectUrl) {\n    return /*#__PURE__*/React.createElement(Redirect, {\n      to: redirectUrl\n    });\n  }\n\n  if (isLoading) {\n    return /*#__PURE__*/React.createElement(Layer, {\n      translucent: true\n    }, /*#__PURE__*/React.createElement(CenteredContent, null, /*#__PURE__*/React.createElement(CircularLoader, null)));\n  }\n\n  const renderGrid = () => {\n    if (props.isPrintPreviewView) {\n      return /*#__PURE__*/React.createElement(LayoutPrintPreview, {\n        fromEdit: true\n      });\n    }\n\n    return /*#__PURE__*/React.createElement(DashboardContainer, null, /*#__PURE__*/React.createElement(TitleBar, null), /*#__PURE__*/React.createElement(ItemGrid, null));\n  };\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\n    className: cx(classes.container, 'dashboard-scroll-container'),\n    \"data-test\": \"outer-scroll-container\"\n  }, /*#__PURE__*/React.createElement(ActionsBar, null), hasUpdateAccess ? renderGrid() : /*#__PURE__*/React.createElement(NoContentMessage, {\n    text: i18n.t('No access')\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.notice\n  }, /*#__PURE__*/React.createElement(Notice, {\n    title: i18n.t('Not supported'),\n    message: i18n.t('Editing dashboards on small screens is not supported. Resize your screen to return to edit mode.')\n  })));\n};\n\nEditDashboard.propTypes = {\n  id: PropTypes.string,\n  isPrintPreviewView: PropTypes.bool,\n  setEditDashboard: PropTypes.func\n};\n\nconst mapStateToProps = (state, ownProps) => {\n  var _ownProps$match, _ownProps$match$param;\n\n  return {\n    id: ((_ownProps$match = ownProps.match) === null || _ownProps$match === void 0 ? void 0 : (_ownProps$match$param = _ownProps$match.params) === null || _ownProps$match$param === void 0 ? void 0 : _ownProps$match$param.dashboardId) || null,\n    isPrintPreviewView: sGetIsPrintPreviewView(state)\n  };\n};\n\nexport default connect(mapStateToProps, {\n  setEditDashboard: acSetEditDashboard\n})(EditDashboard);","import i18n from '@dhis2/d2-i18n';\nimport cx from 'classnames';\nimport PropTypes from 'prop-types';\nimport React, { useState, useEffect } from 'react';\nimport { connect } from 'react-redux';\nimport { Redirect } from 'react-router-dom';\nimport { acSetEditNewDashboard } from '../../actions/editDashboard';\nimport DashboardContainer from '../../components/DashboardContainer';\nimport Notice from '../../components/Notice';\nimport { useWindowDimensions } from '../../components/WindowDimensionsProvider';\nimport { setHeaderbarVisible } from '../../modules/setHeaderbarVisible';\nimport { isSmallScreen } from '../../modules/smallScreen';\nimport { sGetIsPrintPreviewView } from '../../reducers/editDashboard';\nimport LayoutPrintPreview from '../print/PrintLayoutDashboard';\nimport ActionsBar from './ActionsBar';\nimport ItemGrid from './ItemGrid';\nimport classes from './styles/NewDashboard.module.css';\nimport TitleBar from './TitleBar';\n\nconst NewDashboard = props => {\n  const {\n    width\n  } = useWindowDimensions();\n  const [redirectUrl, setRedirectUrl] = useState(null);\n  useEffect(() => {\n    if (isSmallScreen(width)) {\n      setRedirectUrl('/');\n      return;\n    }\n\n    setHeaderbarVisible(true);\n    props.setNewDashboard();\n  }, []);\n\n  if (redirectUrl) {\n    return /*#__PURE__*/React.createElement(Redirect, {\n      to: redirectUrl\n    });\n  }\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\n    className: cx(classes.container, 'dashboard-scroll-container')\n  }, /*#__PURE__*/React.createElement(ActionsBar, null), props.isPrintPreviewView ? /*#__PURE__*/React.createElement(LayoutPrintPreview, {\n    fromEdit: true\n  }) : /*#__PURE__*/React.createElement(DashboardContainer, null, /*#__PURE__*/React.createElement(TitleBar, null), /*#__PURE__*/React.createElement(ItemGrid, null))), /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.notice\n  }, /*#__PURE__*/React.createElement(Notice, {\n    title: i18n.t('Not supported'),\n    message: i18n.t('Editing dashboards on small screens is not supported. Resize your screen to return to edit mode.')\n  })));\n};\n\nNewDashboard.propTypes = {\n  isPrintPreviewView: PropTypes.bool,\n  setNewDashboard: PropTypes.func\n};\n\nconst mapStateToProps = state => ({\n  isPrintPreviewView: sGetIsPrintPreviewView(state)\n});\n\nexport default connect(mapStateToProps, {\n  setNewDashboard: acSetEditNewDashboard\n})(NewDashboard);","import cx from 'classnames';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport { Item } from '../../components/Item/Item';\nimport { PRINT } from '../../modules/dashboardModes';\nimport { getGridItemDomElementClassName } from '../../modules/getGridItemDomElementClassName';\nimport { hasShape } from '../../modules/gridUtil';\nimport { orArray } from '../../modules/util';\nimport { sGetPrintDashboardItems } from '../../reducers/printDashboard';\nimport StaticGrid from './StaticGrid';\n\nconst PrintItemGrid = ({\n  dashboardItems\n}) => {\n  const getItemComponent = item => /*#__PURE__*/React.createElement(\"div\", {\n    key: item.i,\n    className: cx(item.type, 'print', 'oipp', getGridItemDomElementClassName(item.id))\n  }, /*#__PURE__*/React.createElement(Item, {\n    item: item,\n    dashboardMode: PRINT\n  }));\n\n  const getItemComponents = items => items.map(item => getItemComponent(item));\n\n  return /*#__PURE__*/React.createElement(StaticGrid, {\n    className: \"print\",\n    layout: dashboardItems\n  }, getItemComponents(dashboardItems));\n};\n\nPrintItemGrid.propTypes = {\n  dashboardItems: PropTypes.array\n};\n\nconst mapStateToProps = state => {\n  return {\n    dashboardItems: orArray(sGetPrintDashboardItems(state)).filter(hasShape)\n  };\n};\n\nexport default connect(mapStateToProps)(PrintItemGrid);","import { useDataEngine } from '@dhis2/app-runtime';\nimport { Layer, CenteredContent, CircularLoader } from '@dhis2/ui';\nimport sortBy from 'lodash/sortBy';\nimport PropTypes from 'prop-types';\nimport React, { useState, useEffect } from 'react';\nimport { connect } from 'react-redux';\nimport { Redirect } from 'react-router-dom';\nimport { acSetPrintDashboard, acAddPrintDashboardItem, acRemovePrintDashboardItem, acUpdatePrintDashboardItem } from '../../actions/printDashboard';\nimport { apiFetchDashboard } from '../../api/fetchDashboard';\nimport { VIEW } from '../../modules/dashboardModes';\nimport { MAX_ITEM_GRID_HEIGHT_OIPP, MAX_ITEM_GRID_WIDTH_OIPP } from '../../modules/gridUtil';\nimport { PAGEBREAK, PRINT_TITLE_PAGE, SPACER } from '../../modules/itemTypes';\nimport { setHeaderbarVisible } from '../../modules/setHeaderbarVisible';\nimport PrintActionsBar from './ActionsBar';\nimport PrintInfo from './PrintInfo';\nimport PrintItemGrid from './PrintItemGrid';\nimport classes from './styles/PrintDashboard.module.css';\nimport './styles/print.css';\nimport './styles/print-oipp.css';\n\nconst PrintDashboard = ({\n  match,\n  setPrintDashboard,\n  addDashboardItem,\n  updateDashboardItem,\n  removeDashboardItem\n}) => {\n  var _match$params;\n\n  const dataEngine = useDataEngine();\n  const [redirectUrl, setRedirectUrl] = useState(null);\n  const [isLoading, setIsLoading] = useState(true);\n  const id = (match === null || match === void 0 ? void 0 : (_match$params = match.params) === null || _match$params === void 0 ? void 0 : _match$params.dashboardId) || null;\n  useEffect(() => {\n    const loadDashboard = async () => {\n      try {\n        const dashboard = await apiFetchDashboard(dataEngine, id, {\n          mode: VIEW\n        }); //sort the items by Y pos so they print in order of top to bottom\n\n        const sortedItems = sortBy(dashboard.dashboardItems, ['y', 'x']);\n        setPrintDashboard(Object.assign({}, dashboard, {\n          dashboardItems: sortedItems\n        })); // remove spacers - don't want empty pages\n\n        let spacerCount = 0;\n        sortedItems.forEach(item => {\n          if (item.type === SPACER) {\n            spacerCount += 1;\n            removeDashboardItem(item.id);\n          }\n        }); // Resize the items to the full page size\n\n        sortedItems.forEach(item => {\n          updateDashboardItem(Object.assign({}, item, {\n            w: MAX_ITEM_GRID_WIDTH_OIPP,\n            h: MAX_ITEM_GRID_HEIGHT_OIPP\n          }));\n        }); // insert page breaks into the document flow to create the \"pages\"\n        // when previewing the print\n\n        for (let i = 0; i < (sortedItems.length - spacerCount) * 2; i += 2) {\n          addDashboardItem({\n            type: PAGEBREAK,\n            position: i,\n            isStatic: false\n          });\n        }\n\n        addDashboardItem({\n          type: PRINT_TITLE_PAGE,\n          isOneItemPerPage: true\n        });\n        setIsLoading(false);\n      } catch (error) {\n        setRedirectUrl(id ? `/${id}` : '/');\n        setIsLoading(false);\n      }\n    };\n\n    setHeaderbarVisible(false);\n    loadDashboard();\n  }, [id]);\n\n  if (redirectUrl) {\n    return /*#__PURE__*/React.createElement(Redirect, {\n      to: redirectUrl\n    });\n  }\n\n  if (isLoading) {\n    return /*#__PURE__*/React.createElement(Layer, {\n      translucent: true\n    }, /*#__PURE__*/React.createElement(CenteredContent, null, /*#__PURE__*/React.createElement(CircularLoader, null)));\n  }\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.container\n  }, /*#__PURE__*/React.createElement(PrintActionsBar, {\n    id: id\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.wrapper\n  }, /*#__PURE__*/React.createElement(PrintInfo, {\n    isLayout: false\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.pageOuter,\n    \"data-test\": \"print-oipp-page\"\n  }, /*#__PURE__*/React.createElement(PrintItemGrid, null))));\n};\n\nPrintDashboard.propTypes = {\n  addDashboardItem: PropTypes.func,\n  match: PropTypes.object,\n  removeDashboardItem: PropTypes.func,\n  setPrintDashboard: PropTypes.func,\n  updateDashboardItem: PropTypes.func\n};\nexport default connect(null, {\n  setPrintDashboard: acSetPrintDashboard,\n  addDashboardItem: acAddPrintDashboardItem,\n  removeDashboardItem: acRemovePrintDashboardItem,\n  updateDashboardItem: acUpdatePrintDashboardItem\n})(PrintDashboard);","export default ((userId, dashboardId) => `${userId}-${dashboardId}`);","import { useCacheableSection as useCacheableSectionAppRuntime } from '@dhis2/app-runtime';\nimport { useD2 } from '@dhis2/app-runtime-adapter-d2';\nimport getCacheableSectionId from './getCacheableSectionId';\nexport const useCacheableSection = dashboardId => {\n  const {\n    d2\n  } = useD2();\n  const cacheableSectionProps = useCacheableSectionAppRuntime(getCacheableSectionId(d2.currentUser.id, dashboardId));\n  return { ...cacheableSectionProps\n  };\n};","import PropTypes from 'prop-types';\nimport React from 'react';\nexport const ChevronDown = () => /*#__PURE__*/React.createElement(\"svg\", {\n  height: \"24\",\n  viewBox: \"0 0 24 24\",\n  width: \"24\",\n  xmlns: \"http://www.w3.org/2000/svg\"\n}, /*#__PURE__*/React.createElement(\"path\", {\n  d: \"m11.29289 15.7071c.39053.3905 1.02369.3905 1.41422 0l4.99999-4.99999c.3905-.39053.3905-1.02369 0-1.41422-.3905-.39052-1.0237-.39052-1.4142 0l-4.2929 4.2929-4.29289-4.2929c-.39053-.39052-1.02369-.39052-1.41422 0-.39052.39053-.39052 1.02369 0 1.41422z\",\n  fill: \"#a0adba\"\n}));\nexport const ChevronUp = () => /*#__PURE__*/React.createElement(\"svg\", {\n  height: \"24\",\n  viewBox: \"0 0 24 24\",\n  width: \"24\",\n  xmlns: \"http://www.w3.org/2000/svg\"\n}, /*#__PURE__*/React.createElement(\"path\", {\n  d: \"m11.2928932 8.29289322c.360484-.36048396.927715-.3882135 1.3200062-.08318861l.0942074.08318861 5 4.99999998c.3905243.3905243.3905243 1.0236893 0 1.4142136-.360484.3604839-.927715.3882135-1.3200062.0831886l-.0942074-.0831886-4.2928932-4.2921068-4.29289322 4.2921068c-.36048396.3604839-.92771502.3882135-1.32000622.0831886l-.09420734-.0831886c-.36048396-.360484-.3882135-.927715-.08318861-1.3200062l.08318861-.0942074z\",\n  fill: \"#a0adba\"\n}));\nexport const OfflineSaved = ({\n  className\n}) => /*#__PURE__*/React.createElement(\"svg\", {\n  className: className,\n  height: \"16\",\n  viewBox: \"0 0 16 16\",\n  width: \"16\",\n  xmlns: \"http://www.w3.org/2000/svg\"\n}, /*#__PURE__*/React.createElement(\"path\", {\n  d: \"m4.5 7v1h-1.5v6h10v-6h-1.5v-1h1.5c.5522847 0 1 .44771525 1 1v6c0 .5522847-.4477153 1-1 1h-10c-.55228475 0-1-.4477153-1-1v-6c0-.55228475.44771525-1 1-1zm5 3v1h-3v-1zm2.1130214-9.31661889.7739572.63323779-4.84985989 5.92760659-3.3906721-3.3906721.70710678-.70710678 2.60944661 2.60955339z\",\n  fill: \"inherit\",\n  fillRule: \"evenodd\"\n}));\nOfflineSaved.propTypes = {\n  className: PropTypes.string\n};","import { useOnlineStatus } from '@dhis2/app-runtime';\nimport { Chip as UiChip, colors, IconStarFilled24 } from '@dhis2/ui';\nimport cx from 'classnames';\nimport debounce from 'lodash/debounce';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport { Link } from 'react-router-dom';\nimport { apiPostDataStatistics } from '../../api/dataStatistics';\nimport { useCacheableSection } from '../../modules/useCacheableSection';\nimport { OfflineSaved } from './assets/icons';\nimport classes from './styles/Chip.module.css';\n\nconst Chip = ({\n  starred,\n  selected,\n  label,\n  dashboardId,\n  onClick\n}) => {\n  const {\n    lastUpdated\n  } = useCacheableSection(dashboardId);\n  const {\n    online\n  } = useOnlineStatus();\n  const chipProps = {\n    selected\n  };\n\n  if (starred) {\n    chipProps.icon = /*#__PURE__*/React.createElement(IconStarFilled24, {\n      color: selected ? colors.white : colors.grey600\n    });\n  }\n\n  const debouncedPostStatistics = debounce(() => apiPostDataStatistics('DASHBOARD_VIEW', dashboardId), 500);\n\n  const handleClick = () => {\n    online && debouncedPostStatistics();\n    onClick();\n  };\n\n  return /*#__PURE__*/React.createElement(Link, {\n    className: classes.link,\n    to: `/${dashboardId}`,\n    onClick: handleClick,\n    \"data-test\": \"dashboard-chip\"\n  }, /*#__PURE__*/React.createElement(UiChip, chipProps, /*#__PURE__*/React.createElement(\"span\", {\n    className: lastUpdated ? classes.labelWithAdornment : undefined\n  }, label), lastUpdated && /*#__PURE__*/React.createElement(OfflineSaved, {\n    className: cx(classes.adornment, selected && classes.selected)\n  })));\n};\n\nChip.propTypes = {\n  dashboardId: PropTypes.string.isRequired,\n  label: PropTypes.string.isRequired,\n  selected: PropTypes.bool.isRequired,\n  starred: PropTypes.bool.isRequired,\n  onClick: PropTypes.func.isRequired\n};\nexport default Chip;","import { colors } from '@dhis2/ui';\nimport PropTypes from 'prop-types';\nimport React from 'react';\n\nconst ClearIcon = ({\n  className\n}) => /*#__PURE__*/React.createElement(\"svg\", {\n  className: className,\n  fill: colors.grey800,\n  xmlns: \"http://www.w3.org/2000/svg\",\n  viewBox: \"0 0 24 24\"\n}, /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M19 6.41L17.59 5 12 10.59 6.41 5 5 6.41 10.59 12 5 17.59 6.41 19 12 13.41 17.59 19 19 17.59 13.41 12z\"\n}), /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M0 0h24v24H0z\",\n  fill: \"none\"\n}));\n\nClearIcon.propTypes = {\n  className: PropTypes.string\n};\nexport default ClearIcon;","import PropTypes from 'prop-types';\nimport React from 'react';\nimport ClearIcon from './assets/Clear';\nimport classes from './styles/ClearButton.module.css';\n\nconst ClearButton = ({\n  onClear\n}) => /*#__PURE__*/React.createElement(\"button\", {\n  className: classes.button,\n  onClick: onClear\n}, /*#__PURE__*/React.createElement(\"span\", null, /*#__PURE__*/React.createElement(ClearIcon, {\n  className: classes.icon,\n  color: \"action\"\n})));\n\nClearButton.propTypes = {\n  onClear: PropTypes.func.isRequired\n};\nexport default ClearButton;","import i18n from '@dhis2/d2-i18n';\nimport { colors, IconSearch16, IconSearch24 } from '@dhis2/ui';\nimport cx from 'classnames';\nimport PropTypes from 'prop-types';\nimport React, { useState } from 'react';\nimport { connect } from 'react-redux';\nimport { acSetDashboardsFilter, acClearDashboardsFilter } from '../../actions/dashboardsFilter';\nimport { isSmallScreen } from '../../modules/smallScreen';\nimport { sGetDashboardsFilter } from '../../reducers/dashboardsFilter';\nimport { useWindowDimensions } from '../WindowDimensionsProvider';\nimport ClearButton from './ClearButton';\nimport classes from './styles/Filter.module.css';\nexport const KEYCODE_ENTER = 13;\nexport const KEYCODE_ESCAPE = 27;\n\nconst Filter = ({\n  clearDashboardsFilter,\n  expanded,\n  filterText,\n  setDashboardsFilter,\n  onKeypressEnter,\n  onSearchClicked\n}) => {\n  const [focusedClassName, setFocusedClassName] = useState('');\n  const [inputFocused, setInputFocus] = useState(false);\n  const {\n    width\n  } = useWindowDimensions();\n\n  const setFilterValue = event => {\n    event.preventDefault();\n    setDashboardsFilter(event.target.value);\n  };\n\n  const onKeyUp = event => {\n    switch (event.keyCode) {\n      case KEYCODE_ENTER:\n        onKeypressEnter();\n        clearDashboardsFilter();\n        break;\n\n      case KEYCODE_ESCAPE:\n        clearDashboardsFilter();\n        break;\n\n      default:\n        break;\n    }\n  };\n\n  const onFocus = event => {\n    event.preventDefault();\n    setFocusedClassName(classes.focused);\n  };\n\n  const onBlur = event => {\n    event.preventDefault();\n    setFocusedClassName('');\n  };\n\n  const onFocusInput = input => {\n    if (input && inputFocused && isSmallScreen(width)) {\n      return input.focus();\n    }\n  };\n\n  const activateSearchInput = () => {\n    onSearchClicked();\n    setInputFocus(true);\n  };\n\n  return /*#__PURE__*/React.createElement(\"span\", {\n    className: cx(classes.container, expanded ? classes.expanded : classes.collapsed)\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    className: classes.searchButton,\n    onClick: activateSearchInput\n  }, /*#__PURE__*/React.createElement(IconSearch24, {\n    color: colors.grey800\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: cx(classes.searchArea, `${focusedClassName}`),\n    onFocus: onFocus,\n    onBlur: onBlur\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.searchIconContainer\n  }, /*#__PURE__*/React.createElement(IconSearch16, {\n    color: colors.grey800\n  })), /*#__PURE__*/React.createElement(\"input\", {\n    className: classes.input,\n    type: \"text\",\n    placeholder: i18n.t('Search for a dashboard'),\n    onChange: setFilterValue,\n    onKeyUp: onKeyUp,\n    value: filterText,\n    \"data-test\": \"search-dashboard-input\",\n    ref: onFocusInput\n  }), filterText && /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.clearButtonContainer\n  }, /*#__PURE__*/React.createElement(ClearButton, {\n    onClear: clearDashboardsFilter\n  }))));\n};\n\nFilter.propTypes = {\n  clearDashboardsFilter: PropTypes.func,\n  expanded: PropTypes.bool,\n  filterText: PropTypes.string,\n  setDashboardsFilter: PropTypes.func,\n  onKeypressEnter: PropTypes.func,\n  onSearchClicked: PropTypes.func\n};\n\nconst mapStateToProps = state => ({\n  filterText: sGetDashboardsFilter(state)\n});\n\nconst mapDispatchToProps = {\n  setDashboardsFilter: acSetDashboardsFilter,\n  clearDashboardsFilter: acClearDashboardsFilter\n};\nexport default connect(mapStateToProps, mapDispatchToProps)(Filter);","import arraySort from 'd2-utilizr/lib/arraySort';\nexport const getFilteredDashboards = (dashboards, filterText) => {\n  const filteredDashboards = arraySort(Object.values(dashboards).filter(d => d.displayName.toLowerCase().includes(filterText.toLowerCase())), 'ASC', 'displayName');\n  return [...filteredDashboards.filter(d => d.starred), ...filteredDashboards.filter(d => !d.starred)];\n};","import { useOnlineStatus } from '@dhis2/app-runtime';\nimport i18n from '@dhis2/d2-i18n';\nimport { Button, ComponentCover, Tooltip, IconAdd24 } from '@dhis2/ui';\nimport cx from 'classnames';\nimport PropTypes from 'prop-types';\nimport React, { useState } from 'react';\nimport { connect } from 'react-redux';\nimport { Redirect, withRouter } from 'react-router-dom';\nimport { sGetAllDashboards } from '../../reducers/dashboards';\nimport { sGetDashboardsFilter } from '../../reducers/dashboardsFilter';\nimport { sGetSelectedId } from '../../reducers/selected';\nimport Chip from './Chip';\nimport Filter from './Filter';\nimport { getFilteredDashboards } from './getFilteredDashboards';\nimport classes from './styles/Content.module.css';\n\nconst Content = ({\n  dashboards,\n  expanded,\n  filterText,\n  history,\n  selectedId,\n  onChipClicked,\n  onSearchClicked\n}) => {\n  const [redirectUrl, setRedirectUrl] = useState(null);\n  const {\n    offline\n  } = useOnlineStatus();\n\n  const onSelectDashboard = () => {\n    var _getFilteredDashboard;\n\n    const id = (_getFilteredDashboard = getFilteredDashboards(dashboards, filterText)[0]) === null || _getFilteredDashboard === void 0 ? void 0 : _getFilteredDashboard.id;\n\n    if (id) {\n      history.push(id);\n    }\n  };\n\n  const enterNewMode = () => {\n    if (!offline) {\n      setRedirectUrl('/new');\n    }\n  };\n\n  const getChips = () => getFilteredDashboards(dashboards, filterText).map(dashboard => /*#__PURE__*/React.createElement(Chip, {\n    key: dashboard.id,\n    label: dashboard.displayName,\n    starred: dashboard.starred,\n    dashboardId: dashboard.id,\n    selected: dashboard.id === selectedId,\n    onClick: onChipClicked\n  }));\n\n  const getControlsSmall = () => /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.controlsSmall\n  }, /*#__PURE__*/React.createElement(Filter, {\n    onKeypressEnter: onSelectDashboard,\n    onSearchClicked: onSearchClicked,\n    expanded: expanded\n  }));\n\n  const getControlsLarge = () => /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.controlsLarge\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.buttonPadding\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.buttonPosition\n  }, /*#__PURE__*/React.createElement(Tooltip, {\n    content: offline ? i18n.t('Cannot create a dashboard while offline') : i18n.t('Create new dashboard'),\n    closeDelay: 100,\n    openDelay: 400\n  }, /*#__PURE__*/React.createElement(Button, {\n    className: classes.newButton,\n    disabled: offline,\n    small: true,\n    icon: /*#__PURE__*/React.createElement(IconAdd24, null),\n    onClick: enterNewMode,\n    dataTest: \"new-button\"\n  }), offline && /*#__PURE__*/React.createElement(ComponentCover, null)))), /*#__PURE__*/React.createElement(Filter, {\n    onKeypressEnter: onSelectDashboard,\n    onSearchClicked: onSearchClicked,\n    expanded: expanded\n  }));\n\n  if (redirectUrl) {\n    return /*#__PURE__*/React.createElement(Redirect, {\n      to: redirectUrl\n    });\n  }\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: cx(classes.container, expanded ? classes.expanded : classes.collapsed)\n  }, getControlsSmall(), /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.chipsContainer\n  }, getControlsLarge(), getChips()));\n};\n\nContent.propTypes = {\n  dashboards: PropTypes.object,\n  expanded: PropTypes.bool,\n  filterText: PropTypes.string,\n  history: PropTypes.object,\n  selectedId: PropTypes.string,\n  onChipClicked: PropTypes.func,\n  onSearchClicked: PropTypes.func\n};\n\nconst mapStateToProps = state => ({\n  dashboards: sGetAllDashboards(state),\n  selectedId: sGetSelectedId(state),\n  filterText: sGetDashboardsFilter(state)\n});\n\nexport default withRouter(connect(mapStateToProps)(Content));","import PropTypes from 'prop-types';\nimport React, { useState } from 'react';\nimport classes from './styles/DragHandle.module.css';\n\nconst DragHandle = ({\n  onHeightChanged,\n  setDragging\n}) => {\n  const [startingY, setStartingY] = useState(0);\n\n  const onStartDrag = e => {\n    setStartingY(e.clientY);\n    setDragging(true);\n    window.addEventListener('mousemove', onDrag);\n    window.addEventListener('mouseup', onEndDrag);\n  };\n\n  const onDrag = e => {\n    e.preventDefault();\n    e.stopPropagation();\n    const currentY = e.clientY;\n\n    if (currentY !== startingY && currentY > 0) {\n      requestAnimationFrame(() => {\n        onHeightChanged(currentY);\n      });\n    }\n  };\n\n  const onEndDrag = () => {\n    setDragging(false);\n    window.removeEventListener('mousemove', onDrag);\n    window.removeEventListener('mouseup', onEndDrag);\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.draghandle,\n    onMouseDown: onStartDrag,\n    \"data-test\": \"controlbar-drag-handle\"\n  });\n};\n\nDragHandle.propTypes = {\n  setDragging: PropTypes.func,\n  onHeightChanged: PropTypes.func\n};\nexport default /*#__PURE__*/React.memo(DragHandle, () => true);","import i18n from '@dhis2/d2-i18n';\nimport { Tooltip } from '@dhis2/ui';\nimport PropTypes from 'prop-types';\nimport React, { useRef } from 'react';\nimport { ChevronDown, ChevronUp } from './assets/icons';\nimport classes from './styles/ShowMoreButton.module.css';\n\nconst ShowMoreButton = ({\n  onClick,\n  dashboardBarIsExpanded,\n  disabled\n}) => {\n  const containerRef = useRef(null);\n  const buttonLabel = dashboardBarIsExpanded ? i18n.t('Show fewer dashboards') : i18n.t('Show more dashboards');\n\n  const onButtonClicked = () => {\n    // The click may happen on the svg or path\n    // element of the button icon.\n    // In that case it is necessary to trigger\n    // the mouseout on the button element\n    // to ensure that the tooltip is removed\n    const buttonEl = containerRef.current.children[0];\n    const event = new MouseEvent('mouseout', {\n      bubbles: true,\n      cancelable: false\n    });\n    onClick();\n    buttonEl.dispatchEvent(event);\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.container,\n    ref: containerRef\n  }, disabled ? /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.disabled\n  }, /*#__PURE__*/React.createElement(ChevronDown, null)) : /*#__PURE__*/React.createElement(Tooltip, {\n    content: buttonLabel,\n    placement: \"top\",\n    openDelay: 800,\n    closeDelay: 0\n  }, ({\n    onMouseOver,\n    onMouseOut,\n    ref\n  }) => /*#__PURE__*/React.createElement(\"button\", {\n    className: classes.showMore,\n    onClick: onButtonClicked,\n    \"data-test\": \"showmore-button\",\n    \"aria-label\": buttonLabel,\n    ref: ref,\n    onMouseOver: onMouseOver,\n    onMouseOut: onMouseOut\n  }, dashboardBarIsExpanded ? /*#__PURE__*/React.createElement(ChevronUp, null) : /*#__PURE__*/React.createElement(ChevronDown, null))));\n};\n\nShowMoreButton.propTypes = {\n  dashboardBarIsExpanded: PropTypes.bool,\n  disabled: PropTypes.bool,\n  onClick: PropTypes.func\n};\nexport default ShowMoreButton;","import cx from 'classnames';\nimport PropTypes from 'prop-types';\nimport React, { useState, useRef, useEffect, useCallback, createRef } from 'react';\nimport { connect } from 'react-redux';\nimport { acSetControlBarUserRows } from '../../actions/controlBar';\nimport { apiPostControlBarRows } from '../../api/controlBar';\nimport { useWindowDimensions } from '../../components/WindowDimensionsProvider';\nimport { sGetControlBarUserRows } from '../../reducers/controlBar';\nimport Content from './Content';\nimport DragHandle from './DragHandle';\nimport { getRowsFromHeight } from './getRowsFromHeight';\nimport ShowMoreButton from './ShowMoreButton';\nimport classes from './styles/DashboardsBar.module.css';\nexport const MIN_ROW_COUNT = 1;\nexport const MAX_ROW_COUNT = 10;\n\nconst DashboardsBar = ({\n  userRows,\n  updateUserRows,\n  expanded,\n  onExpandedChanged\n}) => {\n  const [dragging, setDragging] = useState(false);\n  const [mouseYPos, setMouseYPos] = useState(0);\n  const userRowsChanged = useRef(false);\n  const ref = /*#__PURE__*/createRef();\n  const {\n    height\n  } = useWindowDimensions();\n  const rootElement = document.documentElement;\n  useEffect(() => {\n    if (mouseYPos === 0) {\n      return;\n    }\n\n    const newRows = Math.max(MIN_ROW_COUNT, getRowsFromHeight(mouseYPos - 52) // don't rush the transition to a bigger row count\n    );\n\n    if (newRows < MAX_ROW_COUNT) {\n      onExpandedChanged(false);\n    }\n\n    if (newRows !== userRows) {\n      updateUserRows(Math.min(newRows, MAX_ROW_COUNT));\n      userRowsChanged.current = true;\n    }\n  }, [mouseYPos]);\n  useEffect(() => {\n    rootElement.style.setProperty('--user-rows-count', userRows);\n  }, [userRows]);\n  useEffect(() => {\n    const vh = height * 0.01;\n    rootElement.style.setProperty('--vh', `${vh}px`);\n  }, [height]);\n  useEffect(() => {\n    if (!dragging && userRowsChanged.current) {\n      apiPostControlBarRows(userRows);\n      userRowsChanged.current = false;\n    }\n  }, [dragging, userRowsChanged.current]);\n\n  const scrollToTop = () => {\n    if (expanded) {\n      ref.current.scroll(0, 0);\n    }\n  };\n\n  const memoizedToggleExpanded = useCallback(() => {\n    if (expanded) {\n      memoizedCancelExpanded();\n    } else {\n      scrollToTop();\n      onExpandedChanged(!expanded);\n    }\n  }, [expanded]);\n  const memoizedCancelExpanded = useCallback(() => {\n    scrollToTop();\n    onExpandedChanged(false);\n  }, []);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: cx(classes.bar, expanded ? classes.expanded : classes.collapsed),\n    \"data-test\": \"dashboards-bar\"\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.container,\n    \"data-test\": \"dashboardsbar-container\"\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.content,\n    ref: ref\n  }, /*#__PURE__*/React.createElement(Content, {\n    onChipClicked: memoizedCancelExpanded,\n    onSearchClicked: memoizedToggleExpanded,\n    expanded: expanded\n  })), /*#__PURE__*/React.createElement(ShowMoreButton, {\n    onClick: memoizedToggleExpanded,\n    dashboardBarIsExpanded: expanded,\n    disabled: !expanded && userRows === MAX_ROW_COUNT\n  }), /*#__PURE__*/React.createElement(DragHandle, {\n    setDragging: setDragging,\n    onHeightChanged: setMouseYPos\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.spacer\n  }));\n};\n\nDashboardsBar.propTypes = {\n  expanded: PropTypes.bool,\n  updateUserRows: PropTypes.func,\n  userRows: PropTypes.number,\n  onExpandedChanged: PropTypes.func\n};\nDashboardsBar.defaultProps = {\n  onExpandedChanged: Function.prototype\n};\n\nconst mapStateToProps = state => ({\n  userRows: sGetControlBarUserRows(state)\n});\n\nconst mapDispatchToProps = {\n  updateUserRows: acSetControlBarUserRows\n};\nexport default connect(mapStateToProps, mapDispatchToProps)(DashboardsBar);","const ROW_HEIGHT = 40;\nconst PADDING_TOP = 10;\nconst SHOWMORE_BUTTON_HEIGHT = 21; // 27px - 6px below bottom edge of ctrlbar\n\nexport const getRowsFromHeight = height => {\n  return Math.round((height - SHOWMORE_BUTTON_HEIGHT - PADDING_TOP) / ROW_HEIGHT);\n};","import { IconDashboardWindow16, colors } from '@dhis2/ui';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport { Link } from 'react-router-dom';\nimport { OfflineSaved } from '../../components/DashboardsBar/assets/icons';\nimport { useCacheableSection } from '../../modules/useCacheableSection';\nimport styles from './styles/DashboardLink.module.css';\n\nconst DashboardLink = ({\n  id,\n  name\n}) => {\n  const {\n    isCached\n  } = useCacheableSection(id);\n  return /*#__PURE__*/React.createElement(Link, {\n    className: styles.dashboard,\n    to: `/${id}`\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    className: styles.icon\n  }, /*#__PURE__*/React.createElement(IconDashboardWindow16, {\n    color: colors.grey600\n  })), /*#__PURE__*/React.createElement(\"span\", null, name), isCached && /*#__PURE__*/React.createElement(OfflineSaved, {\n    className: styles.adornment\n  }));\n};\n\nDashboardLink.propTypes = {\n  id: PropTypes.string,\n  name: PropTypes.string\n};\nexport default DashboardLink;","import { useDataEngine, useOnlineStatus } from '@dhis2/app-runtime';\nimport i18n from '@dhis2/d2-i18n';\nimport PropTypes from 'prop-types';\nimport React, { useEffect, useState } from 'react';\nimport { apiGetDataStatistics } from '../../api/dataStatistics';\nimport DashboardLink from './DashboardLink';\nimport styles from './styles/StartScreen.module.css';\n\nconst StartScreen = ({\n  username\n}) => {\n  const [mostViewedDashboards, setMostViewedDashboards] = useState([]);\n  const dataEngine = useDataEngine();\n  const {\n    online\n  } = useOnlineStatus();\n  useEffect(() => {\n    async function populateMostViewedDashboards(dataEngine) {\n      const mostViewedDashboardsResult = await apiGetDataStatistics(dataEngine, username);\n      const dashboards = mostViewedDashboardsResult.dashboard;\n\n      if (dashboards && dashboards.length) {\n        setMostViewedDashboards(dashboards);\n      }\n    }\n\n    populateMostViewedDashboards(dataEngine);\n  }, [username, online]);\n\n  const getContent = () => /*#__PURE__*/React.createElement(\"div\", {\n    \"data-test\": \"start-screen\"\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: styles.section\n  }, /*#__PURE__*/React.createElement(\"h3\", {\n    className: styles.title\n  }, i18n.t('Getting started')), /*#__PURE__*/React.createElement(\"ul\", {\n    className: styles.guide\n  }, /*#__PURE__*/React.createElement(\"li\", {\n    className: styles.guideItem\n  }, i18n.t('Search for and open saved dashboards from the top bar.')), /*#__PURE__*/React.createElement(\"li\", {\n    className: styles.guideItem\n  }, i18n.t('Click a dashboard chip to open it. Get back to this screen from the \"More\" menu.')), /*#__PURE__*/React.createElement(\"li\", {\n    className: styles.guideItem\n  }, i18n.t('Create a new dashboard with the + button.')))), mostViewedDashboards.length > 0 && /*#__PURE__*/React.createElement(\"div\", {\n    className: styles.section\n  }, /*#__PURE__*/React.createElement(\"h3\", {\n    className: styles.title\n  }, i18n.t('Your most viewed dashboards')), mostViewedDashboards.map((dashboard, index) => /*#__PURE__*/React.createElement(\"p\", {\n    key: index\n  }, /*#__PURE__*/React.createElement(DashboardLink, dashboard)))));\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: styles.outer\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: styles.inner\n  }, getContent()));\n};\n\nStartScreen.propTypes = {\n  username: PropTypes.string\n};\nexport default StartScreen;","import PropTypes from 'prop-types';\nimport React, { useEffect, useState } from 'react';\nimport DashboardsBar from '../../components/DashboardsBar/DashboardsBar';\nimport StartScreen from './StartScreen';\n\nconst LandingPage = ({\n  username,\n  onMount\n}) => {\n  const [controlbarExpanded, setControlbarExpanded] = useState(false);\n  useEffect(() => {\n    onMount();\n  }, []);\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(DashboardsBar, {\n    expanded: controlbarExpanded,\n    onExpandedChanged: expanded => setControlbarExpanded(expanded)\n  }), /*#__PURE__*/React.createElement(StartScreen, {\n    username: username\n  }));\n};\n\nLandingPage.propTypes = {\n  username: PropTypes.string,\n  onMount: PropTypes.func\n};\nexport default LandingPage;","import LandingPage from './LandingPage';\nconst ROUTE_START_PATH = '/start';\nexport { LandingPage, ROUTE_START_PATH };","import { Layer, CenteredContent, CircularLoader } from '@dhis2/ui';\nimport React from 'react';\n\nconst LoadingMask = () => /*#__PURE__*/React.createElement(Layer, {\n  translucent: true\n}, /*#__PURE__*/React.createElement(CenteredContent, null, /*#__PURE__*/React.createElement(CircularLoader, null)));\n\nexport default LoadingMask;","export const REGISTER_PASSIVE_VIEW = 'REGISTER_PASSIVE_VIEW';\nexport default ((state = false, action) => {\n  switch (action.type) {\n    case REGISTER_PASSIVE_VIEW:\n      {\n        return true;\n      }\n\n    default:\n      return state;\n  }\n});\nexport const sGetPassiveViewRegistered = state => state.passiveViewRegistered;","import { useOnlineStatus } from '@dhis2/app-runtime';\nimport i18n from '@dhis2/d2-i18n';\nimport { Tooltip } from '@dhis2/ui';\nimport cx from 'classnames';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport { acSetActiveModalDimension } from '../../../actions/activeModalDimension';\nimport { useCacheableSection } from '../../../modules/useCacheableSection';\nimport { sGetSelectedId } from '../../../reducers/selected';\nimport classes from './styles/FilterBadge.module.css';\n\nconst FilterBadge = ({\n  dashboardId,\n  filter,\n  openFilterModal,\n  onRemove\n}) => {\n  const {\n    online\n  } = useOnlineStatus();\n  const {\n    isCached\n  } = useCacheableSection(dashboardId);\n  const notAllowed = !isCached && !online;\n  const filterText = `${filter.name}: ${filter.values.length > 1 ? i18n.t('{{count}} selected', {\n    count: filter.values.length\n  }) : filter.values[0].name}`;\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.container,\n    \"data-test\": \"dashboard-filter-badge\"\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    className: classes.badge,\n    onClick: () => openFilterModal({\n      id: filter.id,\n      name: filter.name\n    })\n  }, filterText), /*#__PURE__*/React.createElement(\"span\", {\n    className: classes.badgeSmall\n  }, filterText), /*#__PURE__*/React.createElement(Tooltip, {\n    content: i18n.t('Cannot remove filters while offline'),\n    openDelay: 200,\n    closeDelay: 100\n  }, ({\n    onMouseOver,\n    onMouseOut,\n    ref\n  }) => /*#__PURE__*/React.createElement(\"span\", {\n    className: cx(classes.span, notAllowed && classes.notAllowed),\n    onMouseOver: () => notAllowed && onMouseOver(),\n    onMouseOut: () => notAllowed && onMouseOut(),\n    ref: ref\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    disabled: notAllowed,\n    className: classes.removeButton,\n    onClick: () => onRemove(filter.id)\n  }, i18n.t('Remove')))));\n};\n\nFilterBadge.propTypes = {\n  dashboardId: PropTypes.string.isRequired,\n  filter: PropTypes.object.isRequired,\n  openFilterModal: PropTypes.func.isRequired,\n  onRemove: PropTypes.func.isRequired\n};\n\nconst mapStateToProps = state => ({\n  dashboardId: sGetSelectedId(state)\n});\n\nexport default connect(mapStateToProps, {\n  openFilterModal: acSetActiveModalDimension\n})(FilterBadge);","import { useOnlineStatus } from '@dhis2/app-runtime';\nimport i18n from '@dhis2/d2-i18n';\nimport PropTypes from 'prop-types';\nimport React, { useState } from 'react';\nimport { connect } from 'react-redux';\nimport { acRemoveItemFilter, acClearItemFilters } from '../../../actions/itemFilters';\nimport ConfirmActionDialog from '../../../components/ConfirmActionDialog';\nimport { sGetNamedItemFilters } from '../../../reducers/itemFilters';\nimport FilterBadge from './FilterBadge';\nimport classes from './styles/FilterBar.module.css';\n\nconst FilterBar = ({\n  filters,\n  removeFilter,\n  removeAllFilters\n}) => {\n  const {\n    online\n  } = useOnlineStatus();\n  const [dialogIsOpen, setDialogIsOpen] = useState(false);\n\n  const onRemoveFilter = filterId => {\n    if (!online && filters.length > 1) {\n      setDialogIsOpen(true);\n    } else {\n      removeFilter(filterId);\n    }\n  };\n\n  const closeDialog = () => setDialogIsOpen(false);\n\n  return filters.length ? /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.bar\n  }, filters.map(filter => /*#__PURE__*/React.createElement(FilterBadge, {\n    key: filter.id,\n    filter: filter,\n    onRemove: onRemoveFilter\n  }))), /*#__PURE__*/React.createElement(ConfirmActionDialog, {\n    open: dialogIsOpen,\n    title: i18n.t('Removing filters while offline'),\n    message: i18n.t('Removing this filter while offline will remove all other filters. Do you want to remove all filters on this dashboard?'),\n    cancelLabel: i18n.t('No, cancel'),\n    confirmLabel: i18n.t('Yes, remove filters'),\n    onConfirm: removeAllFilters,\n    onCancel: closeDialog\n  })) : null;\n};\n\nFilterBar.propTypes = {\n  filters: PropTypes.array.isRequired,\n  removeAllFilters: PropTypes.func.isRequired,\n  removeFilter: PropTypes.func.isRequired\n};\nFilterBar.defaultProps = {\n  filters: []\n};\n\nconst mapStateToProps = state => ({\n  filters: sGetNamedItemFilters(state)\n});\n\nexport default connect(mapStateToProps, {\n  removeAllFilters: acClearItemFilters,\n  removeFilter: acRemoveItemFilter\n})(FilterBar);","import i18n from '@dhis2/d2-i18n';\nimport cx from 'classnames';\nimport PropTypes from 'prop-types';\nimport React, { useState, useEffect } from 'react';\nimport { Responsive as ResponsiveReactGridLayout } from 'react-grid-layout';\nimport { connect } from 'react-redux';\nimport { Item } from '../../components/Item/Item';\nimport NoContentMessage from '../../components/NoContentMessage';\nimport ProgressiveLoadingContainer from '../../components/ProgressiveLoadingContainer';\nimport { useWindowDimensions } from '../../components/WindowDimensionsProvider';\nimport { VIEW } from '../../modules/dashboardModes';\nimport { getGridItemDomElementClassName } from '../../modules/getGridItemDomElementClassName';\nimport { GRID_ROW_HEIGHT_PX, SM_SCREEN_GRID_COLUMNS, GRID_COMPACT_TYPE, GRID_PADDING_PX, MARGIN_PX, MARGIN_SM_PX, GRID_COLUMNS, getSmallLayout, getGridWidth, getProportionalHeight } from '../../modules/gridUtil';\nimport { getBreakpoint, isSmallScreen } from '../../modules/smallScreen';\nimport { useCacheableSection } from '../../modules/useCacheableSection';\nimport { sGetSelectedId, sGetSelectedDashboardItems } from '../../reducers/selected';\nimport classes from './styles/ItemGrid.module.css';\nconst EXPANDED_HEIGHT = 17;\nconst EXPANDED_HEIGHT_SM = 13;\n\nconst ResponsiveItemGrid = ({\n  dashboardId,\n  dashboardItems\n}) => {\n  const {\n    width\n  } = useWindowDimensions();\n  const [expandedItems, setExpandedItems] = useState({});\n  const [displayItems, setDisplayItems] = useState(dashboardItems);\n  const [layoutSm, setLayoutSm] = useState([]);\n  const [gridWidth, setGridWidth] = useState(0);\n  const [forceLoad, setForceLoad] = useState(false);\n  const {\n    recordingState\n  } = useCacheableSection(dashboardId);\n  useEffect(() => {\n    setLayoutSm(getItemsWithAdjustedHeight(getSmallLayout(dashboardItems, width)));\n    setDisplayItems(getItemsWithAdjustedHeight(dashboardItems));\n  }, [expandedItems, width, dashboardItems]);\n  useEffect(() => {\n    if (recordingState === 'recording') {\n      setForceLoad(true);\n    }\n  }, [recordingState]);\n\n  const onToggleItemExpanded = clickedId => {\n    const isExpanded = typeof expandedItems[clickedId] === 'boolean' ? expandedItems[clickedId] : false;\n    const newExpandedItems = { ...expandedItems\n    };\n    newExpandedItems[clickedId] = !isExpanded;\n    setExpandedItems(newExpandedItems);\n  };\n\n  const getItemsWithAdjustedHeight = items => items.map(item => {\n    const expandedItem = expandedItems[item.id];\n\n    if (expandedItem && expandedItem === true) {\n      const expandedHeight = isSmallScreen(width) ? EXPANDED_HEIGHT_SM : EXPANDED_HEIGHT;\n      return Object.assign({}, item, {\n        h: item.h + expandedHeight,\n        smallOriginalH: getProportionalHeight(item, width)\n      });\n    }\n\n    return item;\n  });\n\n  const getItemComponent = item => {\n    if (!layoutSm.length) {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        key: item.i\n      });\n    }\n\n    return /*#__PURE__*/React.createElement(ProgressiveLoadingContainer, {\n      key: item.i,\n      className: cx(item.type, 'view', getGridItemDomElementClassName(item.id)),\n      itemId: item.id,\n      forceLoad: forceLoad\n    }, /*#__PURE__*/React.createElement(Item, {\n      item: item,\n      gridWidth: gridWidth,\n      dashboardMode: VIEW,\n      onToggleItemExpanded: onToggleItemExpanded\n    }));\n  };\n\n  const getItemComponents = items => items.map(item => getItemComponent(item));\n\n  const onWidthChanged = containerWidth => setTimeout(() => setGridWidth(containerWidth), 200);\n\n  if (!dashboardItems.length) {\n    return /*#__PURE__*/React.createElement(NoContentMessage, {\n      text: i18n.t('There are no items on this dashboard')\n    });\n  }\n\n  return /*#__PURE__*/React.createElement(ResponsiveReactGridLayout, {\n    className: classes.grid,\n    rowHeight: GRID_ROW_HEIGHT_PX,\n    width: getGridWidth(width),\n    cols: {\n      lg: GRID_COLUMNS,\n      sm: SM_SCREEN_GRID_COLUMNS\n    },\n    breakpoints: {\n      lg: getBreakpoint(),\n      sm: 0\n    },\n    layouts: {\n      lg: displayItems,\n      sm: layoutSm\n    },\n    compactType: GRID_COMPACT_TYPE,\n    margin: isSmallScreen(width) ? MARGIN_SM_PX : MARGIN_PX,\n    containerPadding: {\n      lg: GRID_PADDING_PX,\n      sm: GRID_PADDING_PX\n    },\n    isDraggable: false,\n    isResizable: false,\n    draggableCancel: \"input,textarea\",\n    onWidthChange: onWidthChanged\n  }, getItemComponents(displayItems));\n};\n\nResponsiveItemGrid.propTypes = {\n  dashboardId: PropTypes.string,\n  dashboardItems: PropTypes.array\n};\n\nconst mapStateToProps = state => ({\n  dashboardItems: sGetSelectedDashboardItems(state),\n  dashboardId: sGetSelectedId(state)\n});\n\nexport default connect(mapStateToProps)(ResponsiveItemGrid);","import _JSXStyle from \"styled-jsx/style\";\nimport propTypes from '@dhis2/prop-types';\nimport React from 'react';\nexport function ArrowDown({\n  className\n}) {\n  return /*#__PURE__*/React.createElement(\"svg\", {\n    xmlns: \"http://www.w3.org/2000/svg\",\n    viewBox: \"0 0 12 12\",\n    className: \"jsx-2347926856\" + \" \" + (className || \"\")\n  }, /*#__PURE__*/React.createElement(\"path\", {\n    d: \"m5.29289 8.7071c.39053.3905 1.02369.3905 1.41422 0l2.99999-2.99999c.3905-.39053.3905-1.02369 0-1.41422-.3905-.39052-1.0237-.39052-1.4142 0l-2.2929 2.2929-2.29289-2.2929c-.39053-.39052-1.02369-.39052-1.41422 0-.39052.39053-.39052 1.02369 0 1.41422z\",\n    className: \"jsx-2347926856\"\n  }), /*#__PURE__*/React.createElement(_JSXStyle, {\n    id: \"2347926856\"\n  }, [\"svg.jsx-2347926856{fill:inherit;height:12px;width:12px;vertical-align:middle;pointer-events:none;}\"]));\n}\nArrowDown.propTypes = {\n  className: propTypes.string\n};\nexport function ArrowUp({\n  className\n}) {\n  return /*#__PURE__*/React.createElement(\"svg\", {\n    xmlns: \"http://www.w3.org/2000/svg\",\n    viewBox: \"0 0 12 12\",\n    className: \"jsx-2347926856\" + \" \" + (className || \"\")\n  }, /*#__PURE__*/React.createElement(\"path\", {\n    d: \"m5.29289 8.7071c.39053.3905 1.02369.3905 1.41422 0l2.99999-2.99999c.3905-.39053.3905-1.02369 0-1.41422-.3905-.39052-1.0237-.39052-1.4142 0l-2.2929 2.2929-2.29289-2.2929c-.39053-.39052-1.02369-.39052-1.41422 0-.39052.39053-.39052 1.02369 0 1.41422z\",\n    transform: \"matrix(1 0 0 -1 0 12.999974)\",\n    className: \"jsx-2347926856\"\n  }), /*#__PURE__*/React.createElement(_JSXStyle, {\n    id: \"2347926856\"\n  }, [\"svg.jsx-2347926856{fill:inherit;height:12px;width:12px;vertical-align:middle;pointer-events:none;}\"]));\n}\nArrowUp.propTypes = {\n  className: propTypes.string\n};","function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nimport { Button, Layer, Popper } from '@dhis2/ui';\nimport PropTypes from 'prop-types';\nimport React, { useRef } from 'react';\nimport OfflineTooltip from '../OfflineTooltip';\nimport { ArrowDown, ArrowUp } from './assets/Arrow';\nimport styles from './DropdownButton.module.css';\n\nconst DropdownButton = ({\n  children,\n  open,\n  onClick,\n  disabledWhenOffline,\n  component,\n  ...rest\n}) => {\n  const anchorRef = useRef();\n  const ArrowIconComponent = open ? ArrowUp : ArrowDown;\n  return /*#__PURE__*/React.createElement(\"div\", {\n    ref: anchorRef\n  }, /*#__PURE__*/React.createElement(OfflineTooltip, {\n    disabledWhenOffline: disabledWhenOffline\n  }, /*#__PURE__*/React.createElement(Button, _extends({\n    onClick: onClick,\n    type: \"button\"\n  }, rest), children, /*#__PURE__*/React.createElement(ArrowIconComponent, {\n    className: styles.arrow\n  }))), open && /*#__PURE__*/React.createElement(Layer, {\n    onClick: onClick,\n    transparent: true\n  }, /*#__PURE__*/React.createElement(Popper, {\n    placement: \"bottom-start\",\n    reference: anchorRef\n  }, component)));\n};\n\nDropdownButton.propTypes = {\n  children: PropTypes.node.isRequired,\n  component: PropTypes.element.isRequired,\n  open: PropTypes.bool.isRequired,\n  onClick: PropTypes.func.isRequired,\n  disabledWhenOffline: PropTypes.bool\n};\nexport default DropdownButton;","function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nimport { PeriodDimension, DynamicDimension, OrgUnitDimension, DIMENSION_ID_PERIOD, DIMENSION_ID_ORGUNIT, DAILY, WEEKLY, WEEKLYWED, WEEKLYTHU, WEEKLYSAT, WEEKLYSUN, BIWEEKLY, MONTHLY, BIMONTHLY } from '@dhis2/analytics';\nimport { useD2 } from '@dhis2/app-runtime-adapter-d2';\nimport i18n from '@dhis2/d2-i18n';\nimport { Button, Modal, ModalTitle, ModalContent, ModalActions, ButtonStrip } from '@dhis2/ui';\nimport PropTypes from 'prop-types';\nimport React, { useState } from 'react';\nimport { connect } from 'react-redux';\nimport { acAddItemFilter, acRemoveItemFilter } from '../../../actions/itemFilters';\nimport { useSystemSettings } from '../../../components/SystemSettingsProvider';\nimport { useUserSettings } from '../../../components/UserSettingsProvider';\nimport { sGetItemFiltersRoot } from '../../../reducers/itemFilters';\n\nconst FilterDialog = ({\n  dimension,\n  initiallySelectedItems,\n  addItemFilter,\n  removeItemFilter,\n  onClose\n}) => {\n  const [filters, setFilters] = useState(initiallySelectedItems);\n  const {\n    d2\n  } = useD2();\n  const {\n    userSettings\n  } = useUserSettings();\n  const {\n    systemSettings\n  } = useSystemSettings();\n\n  const onSelectItems = ({\n    dimensionId,\n    items\n  }) => {\n    setFilters({\n      [dimensionId]: items\n    });\n  };\n\n  const onDeselectItems = ({\n    dimensionId,\n    itemIdsToRemove\n  }) => {\n    const oldList = filters[dimensionId] || [];\n    const newList = oldList.filter(item => !itemIdsToRemove.includes(item.id));\n    setFilters({ ...filters,\n      [dimensionId]: newList\n    });\n  };\n\n  const onReorderItems = ({\n    dimensionId,\n    itemIds\n  }) => {\n    const oldList = filters[dimensionId] || [];\n    const reorderedList = itemIds.map(id => oldList.find(item => item.id === id));\n    setFilters({ ...filters,\n      [dimensionId]: reorderedList\n    });\n  };\n\n  const saveFilter = () => {\n    const id = dimension.id;\n    const filterItems = filters[id];\n\n    if (filterItems && filterItems.length) {\n      addItemFilter({\n        id,\n        value: [...filterItems]\n      });\n    } else {\n      removeItemFilter(id);\n    }\n\n    onClose(id);\n  };\n\n  const getExcludedPeriodTypes = (systemSettings = {}) => {\n    const types = [];\n\n    if (systemSettings['hideDailyPeriods']) {\n      types.push(DAILY);\n    }\n\n    if (systemSettings['hideWeeklyPeriods']) {\n      types.push(WEEKLY, WEEKLYWED, WEEKLYTHU, WEEKLYSAT, WEEKLYSUN);\n    }\n\n    if (systemSettings['hideBiWeeklyPeriods']) {\n      types.push(BIWEEKLY);\n    }\n\n    if (systemSettings['hideMonthlyPeriods']) {\n      types.push(MONTHLY);\n    }\n\n    if (systemSettings['hideBiMonthlyPeriods']) {\n      types.push(BIMONTHLY);\n    }\n\n    return types;\n  };\n\n  const renderDialogContent = () => {\n    const commonProps = {\n      d2,\n      onSelect: onSelectItems,\n      onDeselect: onDeselectItems,\n      onReorder: onReorderItems\n    };\n    const selectedItems = filters[dimension.id] || [];\n\n    switch (dimension.id) {\n      case DIMENSION_ID_PERIOD:\n        {\n          return /*#__PURE__*/React.createElement(PeriodDimension, {\n            selectedPeriods: selectedItems,\n            onSelect: commonProps.onSelect,\n            excludedPeriodTypes: getExcludedPeriodTypes(systemSettings)\n          });\n        }\n\n      case DIMENSION_ID_ORGUNIT:\n        return /*#__PURE__*/React.createElement(OrgUnitDimension, _extends({\n          displayNameProperty: userSettings.keyAnalysisDisplayProperty,\n          ouItems: selectedItems\n        }, commonProps));\n\n      default:\n        return /*#__PURE__*/React.createElement(DynamicDimension, {\n          selectedItems: selectedItems,\n          dimensionId: dimension.id,\n          onSelect: commonProps.onSelect,\n          dimensionTitle: dimension.name,\n          displayNameProp: userSettings.keyAnalysisDisplayProperty\n        });\n    }\n  };\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, dimension.id && /*#__PURE__*/React.createElement(Modal, {\n    dataTest: \"dimension-modal\",\n    onClose: onClose,\n    position: \"top\",\n    large: true\n  }, /*#__PURE__*/React.createElement(ModalTitle, null, dimension.name), /*#__PURE__*/React.createElement(ModalContent, null, renderDialogContent()), /*#__PURE__*/React.createElement(ModalActions, null, /*#__PURE__*/React.createElement(ButtonStrip, null, /*#__PURE__*/React.createElement(Button, {\n    secondary: true,\n    onClick: onClose\n  }, i18n.t('Cancel')), /*#__PURE__*/React.createElement(Button, {\n    primary: true,\n    onClick: saveFilter\n  }, i18n.t('Confirm'))))));\n};\n\nFilterDialog.propTypes = {\n  addItemFilter: PropTypes.func,\n  dimension: PropTypes.object,\n  initiallySelectedItems: PropTypes.object,\n  removeItemFilter: PropTypes.func,\n  onClose: PropTypes.func\n};\n\nconst mapStateToProps = state => ({\n  initiallySelectedItems: sGetItemFiltersRoot(state)\n});\n\nexport default connect(mapStateToProps, {\n  addItemFilter: acAddItemFilter,\n  removeItemFilter: acRemoveItemFilter\n})(FilterDialog);","import { DimensionsPanel } from '@dhis2/analytics';\nimport { useOnlineStatus } from '@dhis2/app-runtime';\nimport i18n from '@dhis2/d2-i18n';\nimport { Card, colors, IconFilter24 } from '@dhis2/ui';\nimport isEmpty from 'lodash/isEmpty';\nimport PropTypes from 'prop-types';\nimport React, { useState } from 'react';\nimport { connect } from 'react-redux';\nimport { acClearActiveModalDimension, acSetActiveModalDimension } from '../../../actions/activeModalDimension';\nimport DropdownButton from '../../../components/DropdownButton/DropdownButton';\nimport useDimensions from '../../../modules/useDimensions';\nimport { sGetActiveModalDimension } from '../../../reducers/activeModalDimension';\nimport { sGetItemFiltersRoot } from '../../../reducers/itemFilters';\nimport FilterDialog from './FilterDialog';\nimport classes from './styles/FilterSelector.module.css';\n\nconst FilterSelector = props => {\n  var _props$allowedFilters;\n\n  const [filterDialogIsOpen, setFilterDialogIsOpen] = useState(false);\n  const dimensions = useDimensions(filterDialogIsOpen);\n  const {\n    offline\n  } = useOnlineStatus();\n\n  const toggleFilterDialogIsOpen = () => setFilterDialogIsOpen(!filterDialogIsOpen);\n\n  const onCloseDialog = () => {\n    setFilterDialogIsOpen(false);\n    props.clearActiveModalDimension();\n  };\n\n  const selectDimension = id => {\n    props.setActiveModalDimension(dimensions.find(dimension => dimension.id === id));\n  };\n\n  const filterDimensions = () => {\n    if (!props.restrictFilters) {\n      return dimensions;\n    } else {\n      return dimensions.filter(d => [...props.allowedFilters].includes(d.id));\n    }\n  };\n\n  const getFilterSelector = () => /*#__PURE__*/React.createElement(Card, {\n    dataTest: \"dashboard-filter-popover\"\n  }, /*#__PURE__*/React.createElement(DimensionsPanel, {\n    style: {\n      width: '320px'\n    },\n    dimensions: filterDimensions(),\n    onDimensionClick: selectDimension,\n    selectedIds: Object.keys(props.initiallySelectedItems)\n  }));\n\n  return props.restrictFilters && !((_props$allowedFilters = props.allowedFilters) !== null && _props$allowedFilters !== void 0 && _props$allowedFilters.length) ? null : /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"span\", {\n    className: classes.buttonContainer\n  }, /*#__PURE__*/React.createElement(DropdownButton, {\n    open: filterDialogIsOpen,\n    disabled: offline,\n    onClick: toggleFilterDialogIsOpen,\n    icon: /*#__PURE__*/React.createElement(IconFilter24, {\n      color: colors.grey700\n    }),\n    component: getFilterSelector()\n  }, i18n.t('Add filter'))), !isEmpty(props.dimension) ? /*#__PURE__*/React.createElement(FilterDialog, {\n    dimension: props.dimension,\n    onClose: onCloseDialog\n  }) : null);\n};\n\nconst mapStateToProps = state => ({\n  dimension: sGetActiveModalDimension(state),\n  initiallySelectedItems: sGetItemFiltersRoot(state)\n});\n\nFilterSelector.propTypes = {\n  allowedFilters: PropTypes.array,\n  clearActiveModalDimension: PropTypes.func,\n  dimension: PropTypes.object,\n  initiallySelectedItems: PropTypes.object,\n  restrictFilters: PropTypes.bool,\n  setActiveModalDimension: PropTypes.func\n};\nexport default connect(mapStateToProps, {\n  clearActiveModalDimension: acClearActiveModalDimension,\n  setActiveModalDimension: acSetActiveModalDimension\n})(FilterSelector);","import { useOnlineStatus } from '@dhis2/app-runtime';\nimport i18n from '@dhis2/d2-i18n';\nimport { Tooltip, IconStar24, IconStarFilled24, colors } from '@dhis2/ui';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport classes from './styles/StarDashboardButton.module.css';\n\nconst StarDashboardButton = ({\n  starred,\n  onClick\n}) => {\n  const {\n    online\n  } = useOnlineStatus();\n  const StarIcon = starred ? IconStarFilled24 : IconStar24;\n\n  const handleOnClick = () => {\n    online && onClick();\n  };\n\n  let tooltipContent;\n\n  if (online) {\n    if (starred) {\n      tooltipContent = i18n.t('Unstar dashboard');\n    } else {\n      tooltipContent = i18n.t('Star dashboard');\n    }\n  } else {\n    if (starred) {\n      tooltipContent = i18n.t('Cannot unstar this dashboard while offline');\n    } else {\n      tooltipContent = i18n.t('Cannot star this dashboard while offline');\n    }\n  }\n\n  return /*#__PURE__*/React.createElement(\"button\", {\n    className: classes.star,\n    disabled: !online,\n    onClick: handleOnClick,\n    \"data-test\": \"button-star-dashboard\"\n  }, /*#__PURE__*/React.createElement(Tooltip, {\n    content: tooltipContent\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    \"data-test\": starred ? 'dashboard-starred' : 'dashboard-unstarred'\n  }, /*#__PURE__*/React.createElement(StarIcon, {\n    color: colors.grey600\n  }))));\n};\n\nStarDashboardButton.propTypes = {\n  starred: PropTypes.bool,\n  onClick: PropTypes.func\n};\nStarDashboardButton.defaultProps = {\n  onClick: Function.prototype\n};\nexport default StarDashboardButton;","import { useDataEngine, useAlert, useOnlineStatus } from '@dhis2/app-runtime';\nimport i18n from '@dhis2/d2-i18n';\nimport { Button, FlyoutMenu, colors, IconMore24, SharingDialog } from '@dhis2/ui';\nimport PropTypes from 'prop-types';\nimport React, { useState } from 'react';\nimport { connect } from 'react-redux';\nimport { Link, Redirect } from 'react-router-dom';\nimport { acSetDashboardStarred } from '../../../actions/dashboards';\nimport { acClearItemFilters } from '../../../actions/itemFilters';\nimport { acSetShowDescription } from '../../../actions/showDescription';\nimport { apiPostShowDescription } from '../../../api/description';\nimport ConfirmActionDialog from '../../../components/ConfirmActionDialog';\nimport DropdownButton from '../../../components/DropdownButton/DropdownButton';\nimport MenuItem from '../../../components/MenuItemWithTooltip';\nimport OfflineTooltip from '../../../components/OfflineTooltip';\nimport { useCacheableSection } from '../../../modules/useCacheableSection';\nimport { orObject } from '../../../modules/util';\nimport { sGetDashboardStarred } from '../../../reducers/dashboards';\nimport { sGetNamedItemFilters } from '../../../reducers/itemFilters';\nimport { sGetSelected } from '../../../reducers/selected';\nimport { sGetShowDescription } from '../../../reducers/showDescription';\nimport { ROUTE_START_PATH } from '../../start';\nimport { apiStarDashboard } from './apiStarDashboard';\nimport FilterSelector from './FilterSelector';\nimport StarDashboardButton from './StarDashboardButton';\nimport classes from './styles/ActionsBar.module.css';\n\nconst ViewActions = ({\n  id,\n  access,\n  showDescription,\n  starred,\n  setDashboardStarred,\n  updateShowDescription,\n  removeAllFilters,\n  restrictFilters,\n  allowedFilters,\n  filtersLength\n}) => {\n  const [moreOptionsSmallIsOpen, setMoreOptionsSmallIsOpen] = useState(false);\n  const [moreOptionsIsOpen, setMoreOptionsIsOpen] = useState(false);\n  const [sharingDialogIsOpen, setSharingDialogIsOpen] = useState(false);\n  const [confirmCacheDialogIsOpen, setConfirmCacheDialogIsOpen] = useState(false);\n  const [redirectUrl, setRedirectUrl] = useState(null);\n  const dataEngine = useDataEngine();\n  const {\n    offline\n  } = useOnlineStatus();\n  const {\n    lastUpdated,\n    isCached,\n    startRecording,\n    remove\n  } = useCacheableSection(id);\n  const {\n    show\n  } = useAlert(({\n    msg\n  }) => msg, ({\n    isCritical\n  }) => isCritical ? {\n    critical: true\n  } : {\n    warning: true\n  });\n\n  const toggleMoreOptions = small => small ? setMoreOptionsSmallIsOpen(!moreOptionsSmallIsOpen) : setMoreOptionsIsOpen(!moreOptionsIsOpen);\n\n  const closeMoreOptions = () => {\n    setMoreOptionsSmallIsOpen(false);\n    setMoreOptionsIsOpen(false);\n  };\n\n  if (redirectUrl) {\n    return /*#__PURE__*/React.createElement(Redirect, {\n      to: redirectUrl\n    });\n  }\n\n  const onRecordError = () => {\n    show({\n      msg: i18n.t(\"The dashboard couldn't be made available offline. Try again.\"),\n      isCritical: true\n    });\n  };\n\n  const onCacheDashboardConfirmed = () => {\n    setConfirmCacheDialogIsOpen(false);\n    removeAllFilters();\n    startRecording({\n      onError: onRecordError\n    });\n  };\n\n  const onRemoveFromOffline = () => {\n    closeMoreOptions();\n    lastUpdated && remove();\n  };\n\n  const onAddToOffline = () => {\n    closeMoreOptions();\n    return filtersLength ? setConfirmCacheDialogIsOpen(true) : startRecording({\n      onError: onRecordError\n    });\n  };\n\n  const onToggleShowDescription = () => {\n    updateShowDescription(!showDescription);\n    closeMoreOptions();\n    !offline && apiPostShowDescription(!showDescription);\n  };\n\n  const onToggleStarredDashboard = () => apiStarDashboard(dataEngine, id, !starred).then(() => {\n    setDashboardStarred(id, !starred);\n    closeMoreOptions();\n  }).catch(() => {\n    const msg = starred ? i18n.t('Failed to unstar the dashboard') : i18n.t('Failed to star the dashboard');\n    show({\n      msg,\n      isCritical: false\n    });\n  });\n\n  const onToggleSharingDialog = () => setSharingDialogIsOpen(!sharingDialogIsOpen);\n\n  const userAccess = orObject(access);\n\n  const getMoreMenu = () => /*#__PURE__*/React.createElement(FlyoutMenu, null, lastUpdated ? /*#__PURE__*/React.createElement(MenuItem, {\n    dense: true,\n    disabledWhenOffline: false,\n    label: i18n.t('Remove from offline storage'),\n    onClick: onRemoveFromOffline\n  }) : /*#__PURE__*/React.createElement(MenuItem, {\n    dense: true,\n    disabled: offline,\n    label: i18n.t('Make available offline'),\n    onClick: onAddToOffline\n  }), lastUpdated && /*#__PURE__*/React.createElement(MenuItem, {\n    dense: true,\n    label: i18n.t('Sync offline data now'),\n    disabled: offline,\n    onClick: onAddToOffline\n  }), /*#__PURE__*/React.createElement(MenuItem, {\n    dense: true,\n    disabled: offline,\n    label: starred ? i18n.t('Unstar dashboard') : i18n.t('Star dashboard'),\n    onClick: onToggleStarredDashboard\n  }), /*#__PURE__*/React.createElement(MenuItem, {\n    dense: true,\n    disabledWhenOffline: false,\n    label: showDescription ? i18n.t('Hide description') : i18n.t('Show description'),\n    onClick: onToggleShowDescription\n  }), /*#__PURE__*/React.createElement(MenuItem, {\n    dense: true,\n    disabled: offline && !isCached,\n    disabledWhenOffline: false,\n    label: i18n.t('Print'),\n    dataTest: \"print-menu-item\"\n  }, /*#__PURE__*/React.createElement(MenuItem, {\n    dense: true,\n    disabled: offline && !isCached,\n    disabledWhenOffline: false,\n    label: i18n.t('Dashboard layout'),\n    onClick: () => setRedirectUrl(`${id}/printlayout`),\n    dataTest: \"print-layout-menu-item\"\n  }), /*#__PURE__*/React.createElement(MenuItem, {\n    dense: true,\n    disabled: offline && !isCached,\n    disabledWhenOffline: false,\n    label: i18n.t('One item per page'),\n    onClick: () => setRedirectUrl(`${id}/printoipp`),\n    dataTest: \"print-oipp-menu-item\"\n  })), /*#__PURE__*/React.createElement(Link, {\n    to: ROUTE_START_PATH,\n    className: classes.link\n  }, /*#__PURE__*/React.createElement(MenuItem, {\n    dense: true,\n    disabledWhenOffline: false,\n    label: i18n.t('Close dashboard')\n  })));\n\n  const getMoreButton = (className, useSmall) => /*#__PURE__*/React.createElement(DropdownButton, {\n    className: className,\n    small: useSmall,\n    open: useSmall ? moreOptionsSmallIsOpen : moreOptionsIsOpen,\n    disabledWhenOffline: false,\n    onClick: () => toggleMoreOptions(useSmall),\n    icon: /*#__PURE__*/React.createElement(IconMore24, {\n      color: colors.grey700\n    }),\n    component: getMoreMenu()\n  }, i18n.t('More'));\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.actions\n  }, /*#__PURE__*/React.createElement(StarDashboardButton, {\n    starred: starred,\n    onClick: onToggleStarredDashboard\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.strip\n  }, userAccess.update ? /*#__PURE__*/React.createElement(OfflineTooltip, null, /*#__PURE__*/React.createElement(Button, {\n    disabled: offline,\n    className: classes.editButton,\n    onClick: () => setRedirectUrl(`${id}/edit`)\n  }, i18n.t('Edit'))) : null, userAccess.manage ? /*#__PURE__*/React.createElement(OfflineTooltip, null, /*#__PURE__*/React.createElement(Button, {\n    disabled: offline,\n    className: classes.shareButton,\n    onClick: onToggleSharingDialog\n  }, i18n.t('Share'))) : null, /*#__PURE__*/React.createElement(FilterSelector, {\n    allowedFilters: allowedFilters,\n    restrictFilters: restrictFilters\n  }), getMoreButton(classes.moreButton, false), getMoreButton(classes.moreButtonSmall, true))), id && sharingDialogIsOpen && /*#__PURE__*/React.createElement(SharingDialog, {\n    id: id,\n    type: \"dashboard\",\n    onClose: onToggleSharingDialog\n  }), /*#__PURE__*/React.createElement(ConfirmActionDialog, {\n    title: i18n.t('Clear dashboard filters?'),\n    message: i18n.t(\"A dashboard's filters can’t be saved offline. Do you want to remove the filters and make this dashboard available offline?\"),\n    cancelLabel: i18n.t('No, cancel'),\n    confirmLabel: i18n.t('Yes, clear filters and sync'),\n    onConfirm: onCacheDashboardConfirmed,\n    onCancel: () => setConfirmCacheDialogIsOpen(false),\n    open: confirmCacheDialogIsOpen\n  }));\n};\n\nViewActions.propTypes = {\n  access: PropTypes.object,\n  allowedFilters: PropTypes.array,\n  filtersLength: PropTypes.number,\n  id: PropTypes.string,\n  removeAllFilters: PropTypes.func,\n  restrictFilters: PropTypes.bool,\n  setDashboardStarred: PropTypes.func,\n  showDescription: PropTypes.bool,\n  starred: PropTypes.bool,\n  updateShowDescription: PropTypes.func\n};\n\nconst mapStateToProps = state => {\n  const dashboard = sGetSelected(state);\n  return { ...dashboard,\n    filtersLength: sGetNamedItemFilters(state).length,\n    starred: dashboard.id ? sGetDashboardStarred(state, dashboard.id) : false,\n    showDescription: sGetShowDescription(state)\n  };\n};\n\nexport default connect(mapStateToProps, {\n  setDashboardStarred: acSetDashboardStarred,\n  removeAllFilters: acClearItemFilters,\n  updateShowDescription: acSetShowDescription\n})(ViewActions);","const getStarDashboardMutation = id => ({\n  type: 'create',\n  resource: `dashboards/${id}/favorite`\n});\n\nconst getUnstarDashboardMutation = id => ({\n  type: 'delete',\n  resource: `dashboards/${id}/favorite`\n});\n\nexport const apiStarDashboard = (dataEngine, id, isStarred) => {\n  const mutation = isStarred ? getStarDashboardMutation(id) : getUnstarDashboardMutation(id);\n  return dataEngine.mutate(mutation);\n};","import i18n from '@dhis2/d2-i18n';\nimport cx from 'classnames';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport classes from './styles/Description.module.css';\n\nconst Description = ({\n  description\n}) => /*#__PURE__*/React.createElement(\"div\", {\n  className: cx(classes.descContainer, description ? classes.desc : classes.noDesc),\n  \"data-test\": \"dashboard-description\"\n}, description || i18n.t('No description'));\n\nDescription.propTypes = {\n  description: PropTypes.string\n};\nexport default Description;","import i18n from '@dhis2/d2-i18n';\nimport { Tag, Tooltip } from '@dhis2/ui';\nimport moment from 'moment';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport { useCacheableSection } from '../../../modules/useCacheableSection';\nimport classes from './styles/LastUpdatedTag.module.css';\n\nconst LastUpdatedTag = ({\n  id\n}) => {\n  const {\n    lastUpdated\n  } = useCacheableSection(id);\n  return lastUpdated !== null && lastUpdated !== void 0 && lastUpdated.toString ? /*#__PURE__*/React.createElement(Tooltip, {\n    content: /*#__PURE__*/React.createElement(\"span\", null, moment(lastUpdated).format('llll')),\n    openDelay: 200,\n    closeDelay: 100\n  }, /*#__PURE__*/React.createElement(Tag, {\n    className: classes.lastUpdatedTag,\n    maxWidth: \"400px\"\n  }, i18n.t('Offline data last updated {{time}}', {\n    time: moment(lastUpdated).fromNow()\n  }))) : null;\n};\n\nLastUpdatedTag.propTypes = {\n  id: PropTypes.string\n};\nexport default LastUpdatedTag;","import PropTypes from 'prop-types';\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport { sGetSelected } from '../../../reducers/selected';\nimport { sGetShowDescription } from '../../../reducers/showDescription';\nimport ActionsBar from './ActionsBar';\nimport Description from './Description';\nimport LastUpdatedTag from './LastUpdatedTag';\nimport classes from './styles/TitleBar.module.css';\n\nconst ViewTitleBar = ({\n  id,\n  displayName,\n  displayDescription,\n  showDescription\n}) => {\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.container\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.titleBar,\n    \"data-test\": \"title-bar\"\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    className: classes.title,\n    \"data-test\": \"view-dashboard-title\"\n  }, displayName), /*#__PURE__*/React.createElement(ActionsBar, null)), showDescription && /*#__PURE__*/React.createElement(Description, {\n    description: displayDescription\n  }), /*#__PURE__*/React.createElement(LastUpdatedTag, {\n    id: id\n  }));\n};\n\nViewTitleBar.propTypes = {\n  displayDescription: PropTypes.string,\n  displayName: PropTypes.string,\n  id: PropTypes.string,\n  showDescription: PropTypes.bool\n};\n\nconst mapStateToProps = state => {\n  const dashboard = sGetSelected(state);\n  return { ...dashboard,\n    showDescription: sGetShowDescription(state)\n  };\n};\n\nexport default connect(mapStateToProps)(ViewTitleBar);","import { useOnlineStatus } from '@dhis2/app-runtime';\nimport i18n from '@dhis2/d2-i18n';\nimport { AlertStack, AlertBar } from '@dhis2/ui';\nimport cx from 'classnames';\nimport PropTypes from 'prop-types';\nimport React, { useState, useEffect } from 'react';\nimport { connect } from 'react-redux';\nimport { Link } from 'react-router-dom';\nimport { acClearEditDashboard } from '../../actions/editDashboard';\nimport { acSetPassiveViewRegistered } from '../../actions/passiveViewRegistered';\nimport { acClearPrintDashboard } from '../../actions/printDashboard';\nimport { tSetSelectedDashboardById, tSetSelectedDashboardByIdOffline } from '../../actions/selected';\nimport { apiPostDataStatistics } from '../../api/dataStatistics';\nimport DashboardContainer from '../../components/DashboardContainer';\nimport DashboardsBar from '../../components/DashboardsBar/DashboardsBar';\nimport LoadingMask from '../../components/LoadingMask';\nimport Notice from '../../components/Notice';\nimport { setHeaderbarVisible } from '../../modules/setHeaderbarVisible';\nimport { useCacheableSection } from '../../modules/useCacheableSection';\nimport { sGetDashboardById } from '../../reducers/dashboards';\nimport { sGetPassiveViewRegistered } from '../../reducers/passiveViewRegistered';\nimport { sGetSelectedId } from '../../reducers/selected';\nimport { ROUTE_START_PATH } from '../start';\nimport FilterBar from './FilterBar/FilterBar';\nimport ItemGrid from './ItemGrid';\nimport classes from './styles/ViewDashboard.module.css';\nimport TitleBar from './TitleBar/TitleBar';\n\nconst ViewDashboard = props => {\n  const [controlbarExpanded, setControlbarExpanded] = useState(false);\n  const [loadingMessage, setLoadingMessage] = useState(null);\n  const [loaded, setLoaded] = useState(false);\n  const [loadFailed, setLoadFailed] = useState(false);\n  const {\n    online\n  } = useOnlineStatus();\n  const {\n    isCached\n  } = useCacheableSection(props.requestedId);\n  useEffect(() => {\n    setHeaderbarVisible(true);\n    props.clearEditDashboard();\n    props.clearPrintDashboard();\n  }, []);\n  useEffect(() => {\n    setLoaded(false);\n    Array.from(document.getElementsByClassName('dashboard-scroll-container')).forEach(container => {\n      container.scroll(0, 0);\n    });\n  }, [props.requestedId]);\n  useEffect(() => {\n    if (!props.passiveViewRegistered && online) {\n      apiPostDataStatistics('PASSIVE_DASHBOARD_VIEW', props.requestedId).then(() => {\n        props.registerPassiveView();\n      }).catch(error => console.info(error));\n    }\n  }, [props.passiveViewRegistered]);\n  useEffect(() => {\n    const loadDashboard = async () => {\n      const alertTimeout = setTimeout(() => {\n        if (props.requestedDashboardName) {\n          setLoadingMessage(i18n.t('Loading dashboard – {{name}}', {\n            name: props.requestedDashboardName\n          }));\n        } else {\n          setLoadingMessage(i18n.t('Loading dashboard'));\n        }\n      }, 500);\n\n      try {\n        await props.fetchDashboard(props.requestedId, props.username);\n        setLoaded(true);\n        setLoadFailed(false);\n        setLoadingMessage(null);\n        clearTimeout(alertTimeout);\n      } catch (e) {\n        setLoaded(false);\n        setLoadFailed(true);\n        setLoadingMessage(null);\n        clearTimeout(alertTimeout);\n        props.setSelectedAsOffline(props.requestedId, props.username);\n      }\n    };\n\n    const requestedIsAvailable = online || isCached;\n    const switchingDashboard = props.requestedId !== props.currentId;\n\n    if (requestedIsAvailable && !loaded) {\n      loadDashboard();\n    } else if (!requestedIsAvailable && switchingDashboard) {\n      setLoaded(false);\n      props.setSelectedAsOffline(props.requestedId, props.username);\n    }\n  }, [props.requestedId, props.currentId, loaded, online]);\n\n  const onExpandedChanged = expanded => setControlbarExpanded(expanded);\n\n  const getContent = () => {\n    if (!online && !isCached && (props.requestedId !== props.currentId || !loaded)) {\n      return /*#__PURE__*/React.createElement(Notice, {\n        title: i18n.t('Offline'),\n        message: /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"p\", null, i18n.t('This dashboard cannot be loaded while offline.')), /*#__PURE__*/React.createElement(\"div\", null, /*#__PURE__*/React.createElement(Link, {\n          to: ROUTE_START_PATH,\n          className: classes.link\n        }, i18n.t('Go to start page'))))\n      });\n    }\n\n    if (loadFailed) {\n      return /*#__PURE__*/React.createElement(Notice, {\n        title: i18n.t('Load dashboard failed'),\n        message: i18n.t('This dashboard could not be loaded. Please try again later.')\n      });\n    }\n\n    return props.requestedId !== props.currentId ? /*#__PURE__*/React.createElement(LoadingMask, null) : /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(TitleBar, null), /*#__PURE__*/React.createElement(FilterBar, null), /*#__PURE__*/React.createElement(ItemGrid, null));\n  };\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\n    className: cx(classes.container, 'dashboard-scroll-container'),\n    \"data-test\": \"outer-scroll-container\"\n  }, /*#__PURE__*/React.createElement(DashboardsBar, {\n    expanded: controlbarExpanded,\n    onExpandedChanged: onExpandedChanged\n  }), /*#__PURE__*/React.createElement(DashboardContainer, {\n    covered: controlbarExpanded\n  }, controlbarExpanded && /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.cover,\n    onClick: () => setControlbarExpanded(false)\n  }), getContent())), /*#__PURE__*/React.createElement(AlertStack, null, loadingMessage && /*#__PURE__*/React.createElement(AlertBar, {\n    onHidden: () => setLoadingMessage(null),\n    permanent: true\n  }, loadingMessage)));\n};\n\nViewDashboard.propTypes = {\n  clearEditDashboard: PropTypes.func,\n  clearPrintDashboard: PropTypes.func,\n  currentId: PropTypes.string,\n  fetchDashboard: PropTypes.func,\n  passiveViewRegistered: PropTypes.bool,\n  registerPassiveView: PropTypes.func,\n  requestedDashboardName: PropTypes.string,\n  requestedId: PropTypes.string,\n  setSelectedAsOffline: PropTypes.func,\n  username: PropTypes.string\n};\n\nconst mapStateToProps = (state, ownProps) => {\n  const dashboard = sGetDashboardById(state, ownProps.requestedId) || {};\n  return {\n    passiveViewRegistered: sGetPassiveViewRegistered(state),\n    requestedDashboardName: dashboard.displayName || null,\n    currentId: sGetSelectedId(state)\n  };\n};\n\nexport default connect(mapStateToProps, {\n  clearEditDashboard: acClearEditDashboard,\n  clearPrintDashboard: acClearPrintDashboard,\n  registerPassiveView: acSetPassiveViewRegistered,\n  fetchDashboard: tSetSelectedDashboardById,\n  setSelectedAsOffline: tSetSelectedDashboardByIdOffline\n})(ViewDashboard);","import { REGISTER_PASSIVE_VIEW } from '../reducers/passiveViewRegistered';\nexport const acSetPassiveViewRegistered = () => ({\n  type: REGISTER_PASSIVE_VIEW\n});","import { CacheableSection } from '@dhis2/app-runtime';\nimport { useD2 } from '@dhis2/app-runtime-adapter-d2';\nimport i18n from '@dhis2/d2-i18n';\nimport isEmpty from 'lodash/isEmpty';\nimport PropTypes from 'prop-types';\nimport React, { useState } from 'react';\nimport { connect } from 'react-redux';\nimport DashboardsBar from '../../components/DashboardsBar/DashboardsBar';\nimport LoadingMask from '../../components/LoadingMask';\nimport NoContentMessage from '../../components/NoContentMessage';\nimport getCacheableSectionId from '../../modules/getCacheableSectionId';\nimport { getPreferredDashboardId } from '../../modules/localStorage';\nimport { sDashboardsIsFetching, sGetDashboardById, sGetDashboardsSortedByStarred } from '../../reducers/dashboards';\nimport ViewDashboard from './ViewDashboard';\n\nconst CacheableViewDashboard = ({\n  id,\n  dashboardsLoaded,\n  dashboardsIsEmpty\n}) => {\n  const [dashboardsBarExpanded, setDashboardsBarExpanded] = useState(false);\n  const {\n    d2\n  } = useD2();\n\n  if (!dashboardsLoaded) {\n    return /*#__PURE__*/React.createElement(LoadingMask, null);\n  }\n\n  if (dashboardsIsEmpty || id === null) {\n    return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(DashboardsBar, {\n      expanded: dashboardsBarExpanded,\n      onExpandedChanged: expanded => setDashboardsBarExpanded(expanded)\n    }), /*#__PURE__*/React.createElement(NoContentMessage, {\n      text: dashboardsIsEmpty ? i18n.t('No dashboards found. Use the + button to create a new dashboard.') : i18n.t('Requested dashboard not found')\n    }));\n  }\n\n  const cacheSectionId = getCacheableSectionId(d2.currentUser.id, id);\n  return /*#__PURE__*/React.createElement(CacheableSection, {\n    id: cacheSectionId,\n    loadingMask: /*#__PURE__*/React.createElement(LoadingMask, null)\n  }, /*#__PURE__*/React.createElement(ViewDashboard, {\n    key: cacheSectionId,\n    requestedId: id,\n    username: d2.currentUser.username\n  }));\n};\n\nCacheableViewDashboard.propTypes = {\n  dashboardsIsEmpty: PropTypes.bool,\n  dashboardsLoaded: PropTypes.bool,\n  id: PropTypes.string\n};\n\nconst mapStateToProps = (state, ownProps) => {\n  var _ownProps$match, _ownProps$match$param, _dashboardToSelect;\n\n  const dashboards = sGetDashboardsSortedByStarred(state); // match is provided by the react-router-dom\n\n  const routeId = ((_ownProps$match = ownProps.match) === null || _ownProps$match === void 0 ? void 0 : (_ownProps$match$param = _ownProps$match.params) === null || _ownProps$match$param === void 0 ? void 0 : _ownProps$match$param.dashboardId) || null;\n  let dashboardToSelect = null;\n\n  if (routeId) {\n    dashboardToSelect = sGetDashboardById(state, routeId) || null;\n  } else {\n    const lastStoredDashboardId = getPreferredDashboardId(ownProps.username);\n    const dash = sGetDashboardById(state, lastStoredDashboardId);\n    dashboardToSelect = lastStoredDashboardId && dash ? dash : dashboards[0];\n  }\n\n  return {\n    dashboardsIsEmpty: isEmpty(dashboards),\n    dashboardsLoaded: !sDashboardsIsFetching(state),\n    id: ((_dashboardToSelect = dashboardToSelect) === null || _dashboardToSelect === void 0 ? void 0 : _dashboardToSelect.id) || null\n  };\n};\n\nexport default connect(mapStateToProps, null)(CacheableViewDashboard);","function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nimport { useD2 } from '@dhis2/app-runtime-adapter-d2';\nimport { CssVariables } from '@dhis2/ui';\nimport PropTypes from 'prop-types';\nimport React, { useEffect } from 'react';\nimport { connect } from 'react-redux';\nimport { Redirect, HashRouter as Router, Route, Switch } from 'react-router-dom';\nimport { acClearActiveModalDimension } from '../actions/activeModalDimension';\nimport { tSetControlBarRows } from '../actions/controlBar';\nimport { tFetchDashboards } from '../actions/dashboards';\nimport { acClearDashboardsFilter } from '../actions/dashboardsFilter';\nimport { acClearEditDashboard } from '../actions/editDashboard';\nimport { acClearItemActiveTypes } from '../actions/itemActiveTypes';\nimport { acClearItemFilters } from '../actions/itemFilters';\nimport { acClearPrintDashboard } from '../actions/printDashboard';\nimport { acSetSelected } from '../actions/selected';\nimport { tSetShowDescription } from '../actions/showDescription';\nimport { acClearVisualizations } from '../actions/visualizations';\nimport { NewDashboard, EditDashboard } from '../pages/edit';\nimport { PrintDashboard, PrintLayoutDashboard } from '../pages/print';\nimport { LandingPage, ROUTE_START_PATH } from '../pages/start';\nimport { ViewDashboard } from '../pages/view';\nimport { useSystemSettings } from './SystemSettingsProvider';\nimport './styles/App.css';\nimport 'react-grid-layout/css/styles.css';\nimport 'react-resizable/css/styles.css';\nimport './styles/ItemGrid.css';\n\nconst App = props => {\n  const {\n    d2\n  } = useD2();\n  const {\n    systemSettings\n  } = useSystemSettings();\n  useEffect(() => {\n    props.fetchDashboards();\n    props.setControlBarRows();\n    props.setShowDescription(); // store the headerbar height for controlbar height calculations\n\n    const headerbarHeight = document.querySelector('header').getBoundingClientRect().height;\n    document.documentElement.style.setProperty('--headerbar-height', `${headerbarHeight}px`);\n  }, []);\n  return systemSettings && /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(CssVariables, {\n    colors: true,\n    spacers: true\n  }), /*#__PURE__*/React.createElement(Router, null, /*#__PURE__*/React.createElement(Switch, null, /*#__PURE__*/React.createElement(Route, {\n    exact: true,\n    path: \"/\",\n    render: props => systemSettings.startModuleEnableLightweight ? /*#__PURE__*/React.createElement(Redirect, {\n      to: ROUTE_START_PATH\n    }) : /*#__PURE__*/React.createElement(ViewDashboard, _extends({}, props, {\n      username: d2.currentUser.username\n    }))\n  }), /*#__PURE__*/React.createElement(Route, {\n    exact: true,\n    path: ROUTE_START_PATH,\n    render: () => /*#__PURE__*/React.createElement(LandingPage, {\n      username: d2.currentUser.username,\n      onMount: props.resetState\n    })\n  }), /*#__PURE__*/React.createElement(Route, {\n    exact: true,\n    path: \"/new\",\n    render: props => /*#__PURE__*/React.createElement(NewDashboard, props)\n  }), /*#__PURE__*/React.createElement(Route, {\n    exact: true,\n    path: \"/:dashboardId\",\n    render: props => /*#__PURE__*/React.createElement(ViewDashboard, _extends({}, props, {\n      username: d2.currentUser.username\n    }))\n  }), /*#__PURE__*/React.createElement(Route, {\n    exact: true,\n    path: \"/:dashboardId/edit\",\n    render: props => /*#__PURE__*/React.createElement(EditDashboard, props)\n  }), /*#__PURE__*/React.createElement(Route, {\n    exact: true,\n    path: \"/:dashboardId/printoipp\",\n    render: props => /*#__PURE__*/React.createElement(PrintDashboard, props)\n  }), /*#__PURE__*/React.createElement(Route, {\n    exact: true,\n    path: \"/:dashboardId/printlayout\",\n    render: props => /*#__PURE__*/React.createElement(PrintLayoutDashboard, props)\n  }))));\n};\n\nApp.propTypes = {\n  fetchDashboards: PropTypes.func,\n  resetState: PropTypes.func,\n  setControlBarRows: PropTypes.func,\n  setShowDescription: PropTypes.func\n};\nconst mapDispatchToProps = {\n  fetchDashboards: tFetchDashboards,\n  setControlBarRows: tSetControlBarRows,\n  setShowDescription: tSetShowDescription,\n  resetState: () => dispatch => {\n    dispatch(acSetSelected({}));\n    dispatch(acClearDashboardsFilter());\n    dispatch(acClearVisualizations());\n    dispatch(acClearEditDashboard());\n    dispatch(acClearPrintDashboard());\n    dispatch(acClearItemFilters());\n    dispatch(acClearActiveModalDimension());\n    dispatch(acClearItemActiveTypes());\n  }\n};\nexport default connect(null, mapDispatchToProps)(App);","import { combineReducers } from 'redux';\nimport activeModalDimension from './activeModalDimension';\nimport controlBar from './controlBar';\nimport dashboards from './dashboards';\nimport dashboardsFilter from './dashboardsFilter';\nimport dimensions from './dimensions';\nimport editDashboard from './editDashboard';\nimport itemActiveTypes from './itemActiveTypes';\nimport itemFilters from './itemFilters';\nimport messages from './messages';\nimport passiveViewRegistered from './passiveViewRegistered';\nimport printDashboard from './printDashboard';\nimport selected from './selected';\nimport showDescription from './showDescription';\nimport visualizations from './visualizations';\nexport default combineReducers({\n  dashboards,\n  selected,\n  dashboardsFilter,\n  controlBar,\n  visualizations,\n  messages,\n  editDashboard,\n  printDashboard,\n  itemFilters,\n  dimensions,\n  activeModalDimension,\n  passiveViewRegistered,\n  showDescription,\n  itemActiveTypes\n});","import { createStore, applyMiddleware, compose } from 'redux';\nimport { createLogger } from 'redux-logger';\nimport thunk from 'redux-thunk';\nimport reducer from './reducers';\n\nconst configureStore = dataEngine => {\n  const middleware = [thunk.withExtraArgument(dataEngine)]; // Enable Redux devtools if extension is installed instead of redux-logger\n\n  const composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\n\n  if (!window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ && process.env.NODE_ENV !== 'production') {\n    middleware.push(createLogger());\n  }\n\n  return createStore(reducer, composeEnhancers(applyMiddleware(...middleware)));\n};\n\nexport default configureStore;","//------------------------------------------------------------------------------\n// <auto-generated>\n// This code was generated by d2-i18n-generate.\n//\n// Changes to this file may cause incorrect behavior and will be lost if\n// the code is regenerated.\n// </auto-generated>\n//------------------------------------------------------------------------------\nimport i18n from '@dhis2/d2-i18n';\nimport arTranslations from './ar/translations.json';\nimport ar_IQTranslations from './ar_IQ/translations.json';\nimport ckbTranslations from './ckb/translations.json';\nimport csTranslations from './cs/translations.json';\nimport daTranslations from './da/translations.json';\nimport enTranslations from './en/translations.json';\nimport esTranslations from './es/translations.json';\nimport frTranslations from './fr/translations.json';\nimport idTranslations from './id/translations.json';\nimport kmTranslations from './km/translations.json';\nimport loTranslations from './lo/translations.json';\nimport myTranslations from './my/translations.json';\nimport nbTranslations from './nb/translations.json';\nimport prsTranslations from './prs/translations.json';\nimport psTranslations from './ps/translations.json';\nimport ptTranslations from './pt/translations.json';\nimport pt_BRTranslations from './pt_BR/translations.json';\nimport ruTranslations from './ru/translations.json';\nimport svTranslations from './sv/translations.json';\nimport tetTranslations from './tet/translations.json';\nimport tgTranslations from './tg/translations.json';\nimport ukTranslations from './uk/translations.json';\nimport urTranslations from './ur/translations.json';\nimport uzTranslations from './uz/translations.json';\nimport uz_CyrlTranslations from './uz_Cyrl/translations.json';\nimport uz_LatnTranslations from './uz_Latn/translations.json';\nimport viTranslations from './vi/translations.json';\nimport zhTranslations from './zh/translations.json';\nimport zh_CNTranslations from './zh_CN/translations.json';\nconst namespace = 'default';\ni18n.addResources('ar', namespace, arTranslations);\ni18n.addResources('ar_IQ', namespace, ar_IQTranslations);\ni18n.addResources('ckb', namespace, ckbTranslations);\ni18n.addResources('cs', namespace, csTranslations);\ni18n.addResources('da', namespace, daTranslations);\ni18n.addResources('en', namespace, enTranslations);\ni18n.addResources('es', namespace, esTranslations);\ni18n.addResources('fr', namespace, frTranslations);\ni18n.addResources('id', namespace, idTranslations);\ni18n.addResources('km', namespace, kmTranslations);\ni18n.addResources('lo', namespace, loTranslations);\ni18n.addResources('my', namespace, myTranslations);\ni18n.addResources('nb', namespace, nbTranslations);\ni18n.addResources('prs', namespace, prsTranslations);\ni18n.addResources('ps', namespace, psTranslations);\ni18n.addResources('pt', namespace, ptTranslations);\ni18n.addResources('pt_BR', namespace, pt_BRTranslations);\ni18n.addResources('ru', namespace, ruTranslations);\ni18n.addResources('sv', namespace, svTranslations);\ni18n.addResources('tet', namespace, tetTranslations);\ni18n.addResources('tg', namespace, tgTranslations);\ni18n.addResources('uk', namespace, ukTranslations);\ni18n.addResources('ur', namespace, urTranslations);\ni18n.addResources('uz', namespace, uzTranslations);\ni18n.addResources('uz_Cyrl', namespace, uz_CyrlTranslations);\ni18n.addResources('uz_Latn', namespace, uz_LatnTranslations);\ni18n.addResources('vi', namespace, viTranslations);\ni18n.addResources('zh', namespace, zhTranslations);\ni18n.addResources('zh_CN', namespace, zh_CNTranslations);\nexport default i18n;","import { useDataEngine } from '@dhis2/app-runtime';\nimport { D2Shim } from '@dhis2/app-runtime-adapter-d2';\nimport React from 'react';\nimport { Provider as ReduxProvider } from 'react-redux';\nimport App from './components/App';\nimport SystemSettingsProvider from './components/SystemSettingsProvider';\nimport UserSettingsProvider from './components/UserSettingsProvider';\nimport WindowDimensionsProvider from './components/WindowDimensionsProvider';\nimport configureStore from './configureStore';\nimport './locales';\nconst d2Config = {\n  schemas: ['visualization', 'map', 'report', 'eventChart', 'eventReport', 'dashboard', 'organisationUnit', 'userGroup']\n}; // TODO: ER and EV plugins require the auth header in development mode.\n// Remove this when these plugins are rewritten\n\nconst authorization = process.env.REACT_APP_DHIS2_AUTHORIZATION || null;\n\nif (authorization) {\n  d2Config.headers = {\n    Authorization: authorization\n  };\n}\n\nconst AppWrapper = () => {\n  const dataEngine = useDataEngine();\n  return /*#__PURE__*/React.createElement(ReduxProvider, {\n    store: configureStore(dataEngine)\n  }, /*#__PURE__*/React.createElement(D2Shim, {\n    d2Config: d2Config,\n    i18nRoot: \"./i18n\"\n  }, ({\n    d2\n  }) => {\n    if (!d2) {\n      // TODO: Handle errors in d2 initialization\n      return null;\n    }\n\n    return /*#__PURE__*/React.createElement(SystemSettingsProvider, null, /*#__PURE__*/React.createElement(UserSettingsProvider, null, /*#__PURE__*/React.createElement(WindowDimensionsProvider, null, /*#__PURE__*/React.createElement(App, null))));\n  }));\n};\n\nexport default AppWrapper;","import { VIS_TYPE_PIVOT_TABLE } from '@dhis2/analytics';\nimport i18n from '@dhis2/d2-i18n';\nimport { IconApps24, IconEmptyFrame24, IconFileDocument24, IconLink24, IconMail24, IconQuestion24, IconTable24, IconTextBox24, IconUser24, IconVisualizationColumn24, IconWorld24 } from '@dhis2/ui'; // Item types\n\nexport const VISUALIZATION = 'VISUALIZATION';\nexport const REPORT_TABLE = 'REPORT_TABLE';\nexport const CHART = 'CHART';\nexport const MAP = 'MAP';\nexport const EVENT_REPORT = 'EVENT_REPORT';\nexport const EVENT_CHART = 'EVENT_CHART';\nexport const APP = 'APP';\nexport const REPORTS = 'REPORTS';\nexport const RESOURCES = 'RESOURCES';\nexport const USERS = 'USERS';\nexport const MESSAGES = 'MESSAGES';\nexport const TEXT = 'TEXT';\nexport const SPACER = 'SPACER';\nexport const PAGEBREAK = 'PAGEBREAK';\nexport const PRINT_TITLE_PAGE = 'PRINT_TITLE_PAGE';\nconst DOMAIN_TYPE_AGGREGATE = 'AGGREGATE';\nconst DOMAIN_TYPE_TRACKER = 'TRACKER'; // Dashboard helpers\n\nexport const isVisualizationType = item => {\n  var _itemTypeMap$item$typ;\n\n  return !!((_itemTypeMap$item$typ = itemTypeMap[item.type]) !== null && _itemTypeMap$item$typ !== void 0 && _itemTypeMap$item$typ.isVisualizationType);\n};\nexport const hasMapView = itemType => itemTypeMap[itemType].domainType === DOMAIN_TYPE_AGGREGATE;\nexport const isTrackerDomainType = itemType => itemTypeMap[itemType].domainType === DOMAIN_TYPE_TRACKER;\nexport const getDefaultItemCount = itemType => itemTypeMap[itemType].defaultItemCount || 5;\nexport const getAppName = itemType => itemTypeMap[itemType].appName || '';\nexport const getItemTypeForVis = item => {\n  if (item.type === VISUALIZATION) {\n    if (item.visualization.type === VIS_TYPE_PIVOT_TABLE) {\n      return REPORT_TABLE;\n    } else {\n      return CHART;\n    }\n  }\n\n  return item.type;\n}; // Item type map\n\nexport const itemTypeMap = {\n  [VISUALIZATION]: {\n    id: VISUALIZATION,\n    endPointName: 'visualizations',\n    dataStatisticsName: 'VISUALIZATION_VIEW',\n    propName: 'visualization',\n    pluralTitle: i18n.t('Visualizations'),\n    domainType: DOMAIN_TYPE_AGGREGATE,\n    isVisualizationType: true,\n    appUrl: id => `dhis-web-data-visualizer/#/${id}`,\n    appName: 'Data Visualizer',\n    defaultItemCount: 10\n  },\n  [REPORT_TABLE]: {\n    id: REPORT_TABLE,\n    endPointName: 'visualizations',\n    dataStatisticsName: 'REPORT_TABLE_VIEW',\n    propName: 'visualization',\n    pluralTitle: i18n.t('Pivot tables'),\n    domainType: DOMAIN_TYPE_AGGREGATE,\n    isVisualizationType: true,\n    appUrl: id => `dhis-web-data-visualizer/#/${id}`,\n    appName: 'Data Visualizer'\n  },\n  [CHART]: {\n    id: CHART,\n    endPointName: 'visualizations',\n    propName: 'visualization',\n    dataStatisticsName: 'CHART_VIEW',\n    pluralTitle: i18n.t('Charts'),\n    domainType: DOMAIN_TYPE_AGGREGATE,\n    isVisualizationType: true,\n    appUrl: id => `dhis-web-data-visualizer/#/${id}`,\n    appName: 'Data Visualizer'\n  },\n  [MAP]: {\n    id: MAP,\n    endPointName: 'maps',\n    dataStatisticsName: 'MAP_VIEW',\n    propName: 'map',\n    pluralTitle: i18n.t('Maps'),\n    domainType: DOMAIN_TYPE_AGGREGATE,\n    isVisualizationType: true,\n    appUrl: id => `dhis-web-maps/?id=${id}`,\n    appName: 'Maps'\n  },\n  [EVENT_REPORT]: {\n    id: EVENT_REPORT,\n    endPointName: 'eventReports',\n    propName: 'eventReport',\n    pluralTitle: i18n.t('Event reports'),\n    domainType: DOMAIN_TYPE_TRACKER,\n    isVisualizationType: true,\n    appUrl: id => `dhis-web-event-reports/?id=${id}`,\n    appName: 'Event Reports'\n  },\n  [EVENT_CHART]: {\n    id: EVENT_CHART,\n    endPointName: 'eventCharts',\n    propName: 'eventChart',\n    pluralTitle: i18n.t('Event charts'),\n    domainType: DOMAIN_TYPE_TRACKER,\n    isVisualizationType: true,\n    appUrl: id => `dhis-web-event-visualizer/?id=${id}`,\n    appName: 'Event Visualizer'\n  },\n  [APP]: {\n    endPointName: 'apps',\n    propName: 'appKey',\n    pluralTitle: i18n.t('Apps')\n  },\n  [REPORTS]: {\n    id: REPORTS,\n    endPointName: 'reports',\n    propName: 'reports',\n    pluralTitle: i18n.t('Reports'),\n    appUrl: (id, type) => {\n      switch (type) {\n        case 'HTML':\n          return `dhis-web-reports/#/standard-report/view/${id}`;\n\n        case 'JASPER_REPORT_TABLE':\n        case 'JASPER_JDBC':\n        default:\n          return `api/reports/${id}/data.pdf?t=${new Date().getTime()}`;\n      }\n    }\n  },\n  [RESOURCES]: {\n    id: RESOURCES,\n    endPointName: 'resources',\n    propName: 'resources',\n    pluralTitle: i18n.t('Resources'),\n    appUrl: id => `api/documents/${id}/data`\n  },\n  [USERS]: {\n    id: USERS,\n    endPointName: 'users',\n    propName: 'users',\n    pluralTitle: i18n.t('Users'),\n    appUrl: id => `dhis-web-dashboard-integration/profile.action?id=${id}`\n  },\n  [TEXT]: {\n    id: TEXT,\n    propName: 'text'\n  },\n  [MESSAGES]: {\n    propName: 'messages'\n  },\n  [SPACER]: {\n    propName: 'text'\n  },\n  [PAGEBREAK]: {\n    propName: 'text'\n  },\n  [PRINT_TITLE_PAGE]: {\n    propName: 'text'\n  }\n};\nexport const getEndPointName = type => itemTypeMap[type].endPointName;\nexport const getDataStatisticsName = type => itemTypeMap[type].dataStatisticsName || null;\nexport const getItemUrl = (type, item, baseUrl) => {\n  let url;\n\n  if (type === APP) {\n    url = item.launchUrl;\n  }\n\n  if (itemTypeMap[type] && itemTypeMap[type].appUrl) {\n    url = `${baseUrl}/${itemTypeMap[type].appUrl(item.id, item.type)}`;\n  }\n\n  return url;\n};\nexport const getItemIcon = type => {\n  switch (type) {\n    case REPORT_TABLE:\n    case EVENT_REPORT:\n      return IconTable24;\n\n    case REPORTS:\n      return IconFileDocument24;\n\n    case CHART:\n    case EVENT_CHART:\n      return IconVisualizationColumn24;\n\n    case MAP:\n      return IconWorld24;\n\n    case APP:\n      return IconApps24;\n\n    case RESOURCES:\n      return IconLink24;\n\n    case USERS:\n      return IconUser24;\n\n    case TEXT:\n      return IconTextBox24;\n\n    case MESSAGES:\n      return IconMail24;\n\n    case SPACER:\n      return IconEmptyFrame24;\n\n    default:\n      return IconQuestion24;\n  }\n};","import { REPORT_TABLE, CHART, VISUALIZATION, MAP, EVENT_REPORT, EVENT_CHART } from '../../../../modules/itemTypes';\nimport getVisualizationContainerDomId from '../getVisualizationContainerDomId';\nimport { loadExternalScript } from './loadExternalScript'; //external plugins\n\nconst itemTypeToGlobalVariable = {\n  [MAP]: 'mapPlugin',\n  [EVENT_REPORT]: 'eventReportPlugin',\n  [EVENT_CHART]: 'eventChartPlugin'\n};\nconst itemTypeToScriptPath = {\n  [MAP]: '/dhis-web-maps/map.js',\n  [EVENT_REPORT]: '/dhis-web-event-reports/eventreport.js',\n  [EVENT_CHART]: '/dhis-web-event-visualizer/eventchart.js'\n};\n\nconst hasIntegratedPlugin = type => [CHART, REPORT_TABLE, VISUALIZATION].includes(type);\n\nexport const getPlugin = async type => {\n  if (hasIntegratedPlugin(type)) {\n    return true;\n  }\n\n  const pluginName = itemTypeToGlobalVariable[type];\n  return await global[pluginName];\n};\n\nconst fetchPlugin = async (type, baseUrl) => {\n  const globalName = itemTypeToGlobalVariable[type];\n\n  if (global[globalName]) {\n    return global[globalName]; // Will be a promise if fetch is in progress\n  }\n\n  const scripts = [];\n\n  if (type === EVENT_REPORT || type === EVENT_CHART) {\n    if (process.env.NODE_ENV === 'production') {\n      scripts.push('./vendor/babel-polyfill-6.26.0.min.js');\n      scripts.push('./vendor/jquery-3.3.1.min.js');\n      scripts.push('./vendor/jquery-migrate-3.0.1.min.js');\n    } else {\n      scripts.push('./vendor/babel-polyfill-6.26.0.js');\n      scripts.push('./vendor/jquery-3.3.1.js');\n      scripts.push('./vendor/jquery-migrate-3.0.1.js');\n    }\n  }\n\n  scripts.push(baseUrl + itemTypeToScriptPath[type]);\n  const scriptsPromise = Promise.all(scripts.map(loadExternalScript)).then(() => global[globalName] // At this point, has been replaced with the real thing\n  );\n  global[globalName] = scriptsPromise;\n  return await scriptsPromise;\n};\n\nexport const pluginIsAvailable = type => hasIntegratedPlugin(type) || itemTypeToGlobalVariable[type];\n\nconst loadPlugin = async (type, config, credentials) => {\n  if (!pluginIsAvailable(type)) {\n    return;\n  }\n\n  const plugin = await fetchPlugin(type, credentials.baseUrl);\n\n  if (!(plugin && plugin.load)) {\n    return;\n  }\n\n  plugin.url = credentials.baseUrl;\n  plugin.loadingIndicator = true;\n  plugin.dashboard = true;\n\n  if (credentials.auth) {\n    plugin.auth = credentials.auth;\n  }\n\n  plugin.load(config);\n};\n\nexport const load = async (item, visualization, {\n  credentials,\n  activeType,\n  options = {}\n}) => {\n  const config = { ...visualization,\n    ...options,\n    el: getVisualizationContainerDomId(item.id)\n  };\n  const type = activeType || item.type;\n  await loadPlugin(type, config, credentials);\n};\nexport const unmount = async (item, activeType) => {\n  const plugin = await getPlugin(activeType);\n\n  if (plugin && plugin.unmount) {\n    plugin.unmount(getVisualizationContainerDomId(item.id));\n  }\n};","const getVisualizationContainerDomId = id => `item-${id}`;\n\nexport default getVisualizationContainerDomId;","// extracted by mini-css-extract-plugin\nmodule.exports = {\"itemHeaderWrap\":\"ItemHeader_itemHeaderWrap__JcBP7\",\"itemTitle\":\"ItemHeader_itemTitle__34rHa\",\"itemActionsWrap\":\"ItemHeader_itemActionsWrap__Gx3D9\"};"],"sourceRoot":""}
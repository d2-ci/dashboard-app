{"version":3,"sources":["modules/itemTypes.js","api/metadata.js","components/Item/ListItem/Item.module.css","reducers/user.js","reducers/dashboards.js","reducers/editDashboard.js","reducers/editItemFilters.js","reducers/selected.js","actions/editItemFilters.js","reducers/itemFilters.js","actions/itemFilters.js","reducers/messages.js","api/messages.js","reducers/snackbar.js","actions/snackbar.js","reducers/visualizations.js","actions/visualizations.js","api/index.js","api/dashboards.js","components/SnackbarMessage/SnackbarMessage.js","actions/selected.js","api/localStorage.js","components/Item/MessagesItem/actions.js","api/editDashboard.js","actions/editDashboard.js","actions/dashboards.js","reducers/controlBar.js","api/controlBar.js","actions/controlBar.js","reducers/dimensions.js","reducers/settings.js","actions/dimensions.js","components/ControlBar/ShowMoreButton.js","components/ControlBar/controlBarDimensions.js","components/ControlBar/ControlBar.js","icons/Star.js","api/dataStatistics.js","components/ControlBar/DashboardItemChip.js","icons/AddCircle.js","icons/Clear.js","components/ControlBar/ClearButton.js","reducers/dashboardsFilter.js","components/ControlBar/Filter.js","components/ControlBar/DashboardsBar.js","actions/dashboardsFilter.js","components/Dashboard/DashboardVerticalOffset.js","components/ItemSelector/HeaderMenuItem.js","icons/Launch.js","components/ItemSelector/ContentMenuItem.js","components/ItemSelector/selectableItems.js","components/ItemSelector/CategorizedMenuGroup.js","components/ItemSelector/actions.js","components/ItemSelector/SinglesMenuGroup.js","components/ItemSelector/ItemSelector.js","components/TitleBar/EditTitleBar.js","components/ItemFilter/FilterDialog.js","reducers/activeModalDimension.js","actions/activeModalDimension.js","components/ItemFilter/FilterSelector.js","components/TitleBar/Info.js","components/TitleBar/ViewTitleBar.js","components/TitleBar/TitleBar.js","components/Item/VisualizationItem/DefaultPlugin.js","components/Item/VisualizationItem/assets/icons.js","components/Item/VisualizationItem/FatalErrorBoundary.js","components/Item/DeleteItemButton.js","components/Item/ItemHeader.js","components/Item/VisualizationItem/ItemHeaderButtons.js","components/Item/VisualizationItem/ItemFooter.js","modules/memoizeOne.js","components/Item/VisualizationItem/LoadingMask.js","components/Item/VisualizationItem/Item.js","widgets/Line.js","components/Item/MessagesItem/Item.js","components/Item/NotSupportedItem/Item.js","icons/Description.js","icons/Delete.js","components/Item/ListItem/Item.js","components/Item/ListItem/actions.js","components/Item/TextItem/Item.js","components/Item/AppItem/Item.js","components/Item/SpacerItem/Item.js","components/Item/Item.js","widgets/NoContentMessage.js","components/Item/ProgressiveLoadingContainer.js","components/ItemGrid/ItemGrid.js","components/FilterBar/FilterBadge.js","components/FilterBar/FilterBar.js","components/Dashboard/DashboardContent.js","components/Dashboard/ViewDashboard.js","components/ControlBar/ConfirmDeleteDialog.js","components/ControlBar/EditBar.js","components/Dashboard/EditDashboard.js","components/Dashboard/NewDashboard.js","components/Dashboard/Dashboard.js","components/Dashboard/dashboardModes.js","components/App.js","actions/user.js","locales/index.js","reducers/style.js","reducers/index.js","configureStore.js","index.js","modules/util.js","components/ControlBar/styles/DashboardsBar.module.css","components/ItemSelector/styles/ContentMenuItem.module.css","components/Item/styles/ItemHeader.module.css","components/ControlBar/styles/ControlBar.module.css","components/Item/VisualizationItem/styles/FatalErrorBoundary.module.css","components/ControlBar/styles/ClearButton.module.css","components/Item/VisualizationItem/plugin.js","components/ItemGrid/gridUtil.js","components/ItemSelector/styles/CategorizedMenuGroup.module.css","components/Item/styles/DeleteItemButton.module.css"],"names":["VISUALIZATION","REPORT_TABLE","CHART","MAP","EVENT_REPORT","EVENT_CHART","APP","REPORTS","RESOURCES","USERS","MESSAGES","TEXT","SPACER","spacerContent","emptyTextItemContent","isSpacerType","item","type","text","isTextType","isVisualizationType","itemTypeMap","hasMapView","itemType","domainType","isTrackerDomainType","getDefaultItemCount","defaultItemCount","getAppName","appName","_itemTypeMap","Object","_home_travis_build_dhis2_dashboards_app_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_defineProperty__WEBPACK_IMPORTED_MODULE_0__","id","endPointName","propName","pluralTitle","i18n","t","appUrl","concat","getEndPointName","getItemUrl","d2","url","launchUrl","getBaseUrl","getItemIcon","TableIcon","ChartIcon","MapIcon","ExtensionIcon","DescriptionIcon","PersonIcon","FontDownloadIcon","EmailIcon","CropFreeIcon","NotInterestedIcon","getIdNameFields","rename","arguments","length","undefined","getDimensionFields","_ref2","withItems","arrayClean","join","getAxesFields","_ref3","getFavoriteFields","_ref4","withDimensions","withOptions","getFavoritesFields","_ref5","_home_travis_build_dhis2_dashboards_app_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_toConsumableArray__WEBPACK_IMPORTED_MODULE_0__","getListItemFields","getMapFields","apiFetchFavorite","_ref6","fields","getInstance","then","Api","getApi","get","module","exports","list","itemicon","link","deleteicon","deletebutton","DEFAULT_STATE_USER","username","uiLocale","isSuperuser","sGetUserUsername","state","user","DEFAULT_STATE_DASHBOARDS","byId","items","updateDashboardProp","_ref","dashboardId","prop","value","objectSpread","defineProperty","sGetDashboardsRoot","dashboards","sGetDashboardById","orObject","sDashboardsIsFetching","sGetAllDashboards","sGetDashboardItems","sGetStarredDashboards","values","filter","dashboard","starred","sGetUnstarredDashboards","sGetDashboardsSortedByStarred","toConsumableArray","arraySort","getCustomDashboards","data","arrayFrom","map","d","name","displayName","description","displayDescription","favorite","owner","created","split","substr","lastUpdated","access","numberOfItems","orArray","dashboardItems","reportTable","chart","DEFAULT_STATE_EDIT_DASHBOARD","NEW_DASHBOARD_STATE","sGetEditDashboardRoot","editDashboard","sGetIsEditing","isEmpty","sGetEditDashboardItems","DEFAULT_STATE_EDIT_ITEM_FILTERS","sGetEditItemFiltersRoot","editItemFilters","combineReducers","action","validateReducer","isLoading","showDescription","sGetSelectedRoot","selected","sGetSelectedId","sGetSelectedIsLoading","sGetSelectedShowDescription","acRemoveEditItemFilter","DEFAULT_STATE_ITEM_FILTERS","sGetItemFiltersRoot","itemFilters","sGetFiltersKeys","keys","acRemoveItemFilter","sGetMessagesRoot","messages","getMessages","catch","error","console","log","DEFAULT_STATE_SNACKBAR","message","duration","open","acCloseSnackbar","DEFAULT_STATE_VISUALIZATIONS","p","sGetVisualization","visualizations","sGetVisualizationsRoot","acAddVisualization","onError","getDashboardItemsFields","withFavorite","getDashboardFields","apiFetchDashboard","models","apiStarDashboard","isStarred","post","delete","apiDeleteDashboard","loadingDashboardMsg","SnackbarMessageContent","react_default","a","createElement","style","fontWeight","connect","_sGetSnackbar","snackbar","sGetSnackbar","snackbarOpen","snackbarMessage","snackbarDuration","onCloseSnackbar","props","Snackbar_default","zIndex","SnackbarMessage_SnackbarMessageContent","autoHideDuration","onClose","acSetSelectedId","acSetSelectedIsLoading","tLoadDashboard","asyncToGenerator","regenerator_default","mark","_callee","dispatch","dash","wrap","_context","prev","next","sent","acAppendDashboards","abrupt","Promise","resolve","t0","stop","_x","apply","this","tSetSelectedDashboardById","_callee2","getState","snackbarTimeout","onSuccess","_context2","setTimeout","dashboardName","customDashboard","acSetDashboardItems","withShape","localStorage","setItem","forEach","extractFavorite","messageConversations","filters","clearTimeout","_x2","_x3","saveDashboard","assign","width","w","height","h","save","msg","response","uid","updateDashboard","postDashboard","create","acAddDashboardItem","itemPropName","generateUid","content","NEW_ITEM_SHAPE","acUpdateDashboardItem","acRemoveDashboardItem","arrayToIdMap","acSetDashboardStarred","tFetchDashboards","collection","paging","toArray","userRows","sGetControlBarUserRows","controlBar","sGetControlBarRoot","KEY","hasNamespace","currentUser","dataStore","has","getNamespace","apiGetControlBarRows","_callee3","namespace","_context3","t1","t2","find","key","apiPostControlBarRows","_callee4","rows","_context4","set","_x4","_x5","acSetControlBarUserRows","DEFAULT_DIMENSIONS","getDimensionById","DIMENSION_ID_PERIOD","DIMENSION_ID_ORGUNIT","sGetDimensions","dimensions","DEFAULT_SETTINGS","keyDateFormat","keyAnalysisRelativePeriod","keyAnalysisDigitGroupSeparator","displayNameProperty","rootOrganisationUnit","sGetSettings","settings","sGetSettingsDisplayNameProperty","acSetDimensions","styles","showMore","color","colors","grey700","cursor","fontSize","paddingTop","&:hover","textDecoration","disabled","grey500","withStyles","onClick","isMaxHeight","classes","textAlign","className","MIN_ROW_COUNT","getRowsHeight","getNumRowsFromHeight","Math","floor","FIRST_ROW_PADDING_HEIGHT","getTopOffset","getControlBarHeight","ControlBar","_this","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","onStartDrag","setState","dragging","window","addEventListener","onDrag","onEndDrag","event","preventDefault","stopPropagation","newHeight","clientY","onChangeHeight","requestAnimationFrame","removeEventListener","draghandle","onMouseDown","max","rootStyle","top","backgroundColor","editMode","yellow050","white","paddingBottom","transition","root","children","renderDragHandle","React","Component","defaultProps","StarIcon","xmlns","viewBox","fill","apiPostDataStatistics","eventType","chip","margin","grey600","display","verticalAlign","icon","marginTop","unselected","label","chipProps","selectedState","Star","Link","to","debounce","lib","AddCircleIcon","teal600","ClearIcon","grey800","ClearButton","onClear","button","Clear","ownerData","DEFAULT_STATE_DASHBOARDS_FILTER_NAME","DEFAULT_STATE_DASHBOARDS_FILTER_OWNER","order","sGetDashboardsFilterRoot","dashboardsFilter","sGetFilterName","KEYCODE_ENTER","KEYCODE_ESCAPE","filterField","searchIcon","Filter","_Component","setFilterValue","onChangeName","target","handleKeyUp","keyCode","onKeypressEnter","inherits","createClass","nextProps","_this$props","startAdornment","InputAdornment_default","position","Search_default","endAdornment","ControlBar_ClearButton","Input_default","placeholder","onChange","onKeyUp","Function","prototype","MAX_ROW_COUNT","DashboardsBar","_getPrototypeOf2","_len","args","Array","_key","setInitialDashboardState","adjustedHeight","newRows","newRowCount","min","onToggleMaxHeight","onSelectDashboard","history","push","selectedId","onChangeFilterName","rowCount","controlBarHeight","contentWrapperStyle","padding","overflowY","components_ControlBar_ControlBar","leftControls","marginRight","AddCircle","ControlBar_Filter","ControlBar_DashboardItemChip","ControlBar_ShowMoreButton","mapDispatchToProps","withRouter","stateProps","dispatchProps","ownProps","displayDashboards","toLowerCase","includes","HeaderMenuItem","title","dense","LaunchIcon","LaunchLink","e","launchLink","rel","href","Launch","InsertButton","buttonInsert","ContentMenuItem","onInsert","visType","ItemIcon","renderedItemIcon","visTypeIcons","menuItem","ContentMenuItem_LaunchLink","ContentMenuItem_InsertButton","singleItems","header","categorizedItems","listItemTypes","CategorizedMenuGroup","addItem","tAddListItemContent","newItem","toggleSeeMore","seeMore","onChangeItemsLimit","_this2","_this$props2","hasMore","react","ItemSelector_HeaderMenuItem","itemUrl","context","ItemSelector_ContentMenuItem","showMoreButton","contextTypes","PropTypes","object","isRequired","dashboardItem","listItemType","dashboardItemIndex","findIndex","category","addToDashboard","ItemSearchField","onFocus","ItemSelector","closeList","openList","_","fetchItems","anchorEl","currentTarget","setFilter","getCategorizedMenuGroups","itemCount","allItems","maxOptions","slice","ItemSelector_CategorizedMenuGroup","getSinglesMenuGroups","ItemSelector_SinglesMenuGroup","getMenuGroups","queryString","add","Set","ItemSelector_ItemSearchField","Popover_default","anchorOrigin","horizontal","vertical","transformOrigin","PaperProps","disableAutoFocus","disableRestoreFocus","EditTitleBar","onChangeTitle","onChangeDescription","section","titleDescription","itemSelector","components_ItemSelector_ItemSelector","selectedDashboard","justifyContent","flex","clear","underline","&::before","borderBottom","&:hover::before","input","borderRadius","peId","ouId","FilterDialog","onConfirm","dimension","selectedItems","dialogId","commonProps","onSelect","onDeselect","onReorder","es_lib","selectedPeriods","ouItems","dialogTitle","Dialog_default","maxWidth","disableEnforceFocus","dialogContent","DialogActions_default","kind","DEFAULT_STATE_ACTIVE_MODAL_DIMENSION","sGetActiveModalDimension","activeModalDimension","acSetActiveModalDimension","FilterSelector","openPanel","closePanel","closeDialog","clearActiveModalDimension","selectDimension","setActiveModalDimension","onSelectItems","dimensionId","setEditItemFilters","onDeselectItems","itemIdsToRemove","newList","removeEditItemFilter","onReorderItems","itemIds","oldList","reorderedList","saveFilter","filterItems","addItemFilter","removeItemFilter","theme","selectedDimensions","ArrowDropDown_default","Boolean","fontFamily","typography","onDimensionClick","selectedIds","ItemFilter_FilterDialog","withTheme","Info","show","toggle","InfoOutlined_default","NO_DESCRIPTION","actions","alignItems","marginLeft","starIcon","textButton","minWidth","editLink","titleBar","titleBarIcon","ViewTitleBar","toggleSharingDialog","sharingDialogIsOpen","onStarClick","onInfoClick","titleStyle","userSelect","StarBorder","TitleBar_Info","update","manage","ItemFilter_FilterSelector","d2_ui_sharing_dialog_default","onRequestClose","tStarDashboard","black","TitleBar","edit","TitleBar_EditTitleBar","TitleBar_ViewTitleBar","DefaultPlugin","pluginCredentials","shouldPluginReload","prevProps","reloadAllowed","filtersChanged","vis","visualization","prevVis","visChanged","activeType","reloadPlugin","pluginManager","currentVis","useActiveType","credentials","getActiveType","baseUrl","auth","defaultHeaders","Authorization","getGridItemDomId","textDiv","ThreeDots","SpeechBubble","fillRule","transform","Warning","FatalErrorBoundary","errorFound","info","container","icons_Warning","DeleteItemButton","deleteItemButton","Delete_default","red500","HEADER_MARGIN_HEIGHT","ItemHeader","actionButtons","itemId","forwardedRef","itemHeaderWrap","ref","itemTitle","itemActionsWrap","Item_DeleteItemButton","ConnectedItemHeader","forwardRef","iconFill","ItemHeaderButtons","_useState","useState","_useState2","slicedToArray","setAnchorEl","onSelectActiveType","isTrackerType","onViewTable","handleClose","onViewChart","onViewMap","canViewAs","isSingleValue","isYearOverYear","VIS_TYPE_GAUGE","VIS_TYPE_PIE","interpretationMenuLabel","activeFooter","pluginIsAvailable","Fragment","small","secondary","icons_ThreeDots","InsertChart_default","ViewList_default","Public_default","Launch_default","getLink","icons_SpeechBubble","onToggleFooter","scrollContainer","line","border","grey100","ItemFooter","objectId","getId","d2_ui_interpretations_default","memoizeOne","fn","lastArgs","lastValue","every","arg","i","progress","spacing","unit","alignSelf","outer","CircularProgress_default","overflow","textOverflow","whiteSpace","fontStretch","lineHeight","loadingCover","left","background","Item","showFooter","configLoaded","pluginIsLoaded","applyFilters","visRows","obj","visColumns","columns","visFilters","dimensionFound","dimensionObjects","getUniqueKey","uniqueId","getPluginComponent","memoizedGetVisualizationConfig","calculatedHeight","originalHeight","headerRef","current","clientHeight","ITEM_CONTENT_PADDING_BOTTOM","memoizedGetContentStyle","contentRef","offsetHeight","LoadingMask","build_es_lib","memoizedApplyFilters","onLoadingComplete","forDashboard","mapViews","layer","VisualizationItem_DefaultPlugin","onToggleItemExpanded","getContentStyle","measuredHeight","createRef","getVisualizationConfig","_componentDidMount","onVisualizationLoaded","prevState","VisualizationItem_ItemHeaderButtons","Item_ItemHeader","VisualizationItem_FatalErrorBoundary","VisualizationItem_ItemFooter","acSetActiveVisualizationType","grey200","Line","PRIVATE","messageTypes","_messageTypes","listStyleType","paddingLeft","seeAll","marginBottom","sender","snippet","maxHeight","MessagesItem","getMessageHref","msgIdentifier","messageType","getMessageSender","latestMsg","getMessageItems","editClass","readClass","read","msgDate","document","location","messageCount","formatDate","userSettings","widgets_Line","string","MessagesContainer","NotSupportedItem","NotInterested_default","align","DeleteIcon","getItemTitle","ListItem","tRemoveListItemContent","contentItems","index","array","el","getContentItems","contentItem","Description","deleteButton","icons_Delete","grey900","newContent","textField","onChangeText","updatedItem","d2_ui_rich_text","onEdit","multiline","fullWidth","textDivStyle","viewItem","getIframeSrc","appDetails","iframeSrc","ouIds","ouPath","AppItem","appKey","system","installedApps","app","src","SpacerItem","GridItem","VisualizationItem","TextItem","getGridItem","NoContentMessage","ProgressiveLoadingContainer","shouldLoad","containerRef","shouldLoadHandler","bufferPx","bufferFactor","innerHeight","rect","getBoundingClientRect","bottom","removeHandler","checkShouldLoad","debounceMs","registerHandler","_this3","objectWithoutProperties","eventProps","pick","EXPANDED_HEIGHT","ItemGrid","expandedItems","clickedId","isExpanded","onRemoveItem","onLayoutChange","newLayout","acUpdateDashboardLayout","onResizeStop","layout","oldItem","onItemResize","pluginResize","onRemoveItemWrapper","getItem","expandedItem","hProp","minH","ITEM_MIN_HEIGHT","randomNumber","random","getItems","getMemoizedItem","getItemComponent","itemClassNames","Item_ProgressiveLoadingContainer","Item_Item_Item","getItemComponents","memoize","widgets_NoContentMessage","react_grid_layout_default","MARGIN","cols","getGridColumns","rowHeight","GRID_ROW_HEIGHT","innerWidth","compactType","GRID_COMPACT_TYPE","isDraggable","isResizable","draggableCancel","validItems","hasShape","badgeContainer","badge","badgeRemove","FilterBadge","onRemove","count","FilterBar","onBadgeRemove","onBadgeClick","bar","FilterBar_FilterBadge","removeItemFIlter","filtersSelector","createSelector","reduce","arr","flexWrap","DashboardContent","components_TitleBar_TitleBar","components_FilterBar_FilterBar","components_ItemGrid_ItemGrid","Content","hasDashboardContent","dashboardsIsEmpty","Dashboard_DashboardContent","dashboardsLoaded","contentNotReady","ControlBar_DashboardsBar","Dashboard_DashboardVerticalOffset","ViewDashboard_Content","ConfirmDeleteDialog","onDeleteConfirmed","onContinueEditing","destructive","DialogTitle_default","DialogContent_default","DialogContentText_default","buttonBarStyle","EditBar","translationDialogIsOpen","dashboardModel","confirmDeleteDialogOpen","redirectUrl","onConfirmDelete","onSave","newId","onDiscard","onDiscardChanges","onDelete","onTranslationsSaved","translations","dbLocale","translation","locale","property","onTranslate","fetchDashboardModel","toggleTranslationDialog","confirmDeleteDialog","deleteAccess","ControlBar_ConfirmDeleteDialog","translationDialog","d2_ui_translation_dialog_default","objectToTranslate","fieldsToTranslate","onTranslationSaved","onTranslationError","err","Redirect","updateAccess","discardBtnText","primary","rightControls","sGetIsNewDashboard","dashboardToSave","tDeleteDashboard","acSetDashboardDisplayName","EditDashboard","initialized","initEditDashboard","setEditDashboard","getDashboardContent","EditDashboard_Content","ControlBar_EditBar","NewDashboard","setNewDashboard","Dashboard","setDashboard","match","params","selectDashboard","scrollToTop","scrollTo","mode","Dashboard_EditDashboard","Dashboard_NewDashboard","Dashboard_ViewDashboard","dashboardToSelect","preferredId","App","setCurrentUser","fetchDashboards","setControlBarRows","setDimensions","spacers","HeaderBar","HashRouter","Switch","Route","exact","path","render","components_Dashboard_Dashboard","components_SnackbarMessage_SnackbarMessage","childContextTypes","controlBarRows","displayNameProp","filteredDimensions","apiFetchDimensions","dim","dimensionType","dataDimensionType","tSetDimensions","moment","addResources","arTranslations","daTranslations","enTranslations","esTranslations","frTranslations","idTranslations","kmTranslations","loTranslations","myTranslations","prsTranslations","psTranslations","ptTranslations","pt_BRTranslations","ruTranslations","svTranslations","tetTranslations","tgTranslations","ukTranslations","urTranslations","viTranslations","zhTranslations","zh_CNTranslations","setDefaultNamespace","changeLanguage","objectClean","conversations","$merge","d2Object","keyUiLocale","authorities","newState","k","$unshift","idToRemove","$splice","stateItems","layoutHasChanged","newStateItems","x","y","stateItem","si","configureStore","middleware","thunk","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","createStore","reducer","applyMiddleware","configI18n","config","sources","manifest","isProd","getManifest","version","manifest_generated_at","process","activities","dhis","dhis2","apiVersion","headers","schemas","getUserSettings","d2Init","initializedD2","ReactDOM","build_es","es","store","createMuiTheme","dhis2theme","src_components_App","getElementById","init","param","isArray","isObject","global","Intl","DateTimeFormat","year","month","day","format","Date","replace","defaultValue","api","idx","indexOf","getWithoutId","_home_travis_build_dhis2_dashboards_app_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectSpread__WEBPACK_IMPORTED_MODULE_0__","itemWrap","itemTypeToExternalPlugin","_itemTypeToExternalPl","_home_travis_build_dhis2_dashboards_app_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_defineProperty__WEBPACK_IMPORTED_MODULE_3__","getPlugin","hasIntegratedPlugin","eventReport","eventChart","loadPlugin","plugin","load","loadingIndicator","getName","_home_travis_build_dhis2_dashboards_app_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_asyncToGenerator__WEBPACK_IMPORTED_MODULE_2__","_home_travis_build_dhis2_dashboards_app_node_modules_babel_preset_react_app_node_modules_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default","_home_travis_build_dhis2_dashboards_app_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectSpread__WEBPACK_IMPORTED_MODULE_1__","fetch","fetchedFavorite","resize","unmount","originalType","extractedMapView","mv","VIS_TYPE_COLUMN","VIS_TYPE_PIVOT_TABLE","__webpack_require__","__webpack_exports__","d2_utilizr_lib_isFunction__WEBPACK_IMPORTED_MODULE_0__","d2_utilizr_lib_isFunction__WEBPACK_IMPORTED_MODULE_0___default","n","_modules_util__WEBPACK_IMPORTED_MODULE_1__","isNonNegativeInteger","Number","isInteger","itemWithShape","Error","col","row","itemWidth","itemHeight","getShape","round","getOriginalHeight","querySelector","isFunction","setViewportSize","clientWidth"],"mappings":"knCAeaA,EAAgB,gBAChBC,EAAe,eACfC,EAAQ,QACRC,EAAM,MACNC,EAAe,eACfC,EAAc,cACdC,EAAM,MACNC,EAAU,UACVC,EAAY,YACZC,EAAQ,QACRC,EAAW,WACXC,EAAO,OACPC,EAAS,SAMTC,EAAgB,+CAChBC,EAAuB,4BACvBC,EAAe,SAAAC,GAAI,OAC5BA,EAAKC,OAASN,GAAQK,EAAKE,OAASL,GAC3BM,EAAa,SAAAH,GAAI,OAC1BA,EAAKC,OAASN,GAAQK,EAAKE,OAASL,GAC3BO,EAAsB,SAAAJ,GAAI,QACjCK,EAAYL,EAAKC,MAAMG,qBAChBE,EAAa,SAAAC,GAAQ,MAZJ,cAa1BF,EAAYE,GAAUC,YACbC,EAAsB,SAAAF,GAAQ,MAbf,YAcxBF,EAAYE,GAAUC,YACbE,EAAsB,SAAAH,GAAQ,OACvCF,EAAYE,GAAUI,kBAAoB,GACjCC,EAAa,SAAAL,GAAQ,OAAIF,EAAYE,GAAUM,SAAW,IAG1DR,GAAWS,EAAA,GAAAC,OAAAC,EAAA,EAAAD,CAAAD,EACnB9B,EAAgB,CACbiC,GAAIjC,EACJkC,aAAc,iBACdC,SAAU,gBACVC,YAAaC,IAAKC,EAAE,kBACpBC,OAAQ,SAAAN,GAAE,oCAAAO,OAAkCP,IAC5CJ,QAAS,kBACTF,iBAAkB,KARFI,OAAAC,EAAA,EAAAD,CAAAD,EAUnB7B,EAAe,CACZgC,GAAIhC,EACJiC,aAAc,iBACdC,SAAU,gBACVC,YAAaC,IAAKC,EAAE,gBACpBd,WApCsB,YAqCtBJ,qBAAqB,EACrBmB,OAAQ,SAAAN,GAAE,oCAAAO,OAAkCP,IAC5CJ,QAAS,oBAlBOE,OAAAC,EAAA,EAAAD,CAAAD,EAoBnB5B,EAAQ,CACL+B,GAAI/B,EACJgC,aAAc,iBACdC,SAAU,gBACVC,YAAaC,IAAKC,EAAE,UACpBd,WA9CsB,YA+CtBJ,qBAAqB,EACrBmB,OAAQ,SAAAN,GAAE,oCAAAO,OAAkCP,IAC5CJ,QAAS,oBA5BOE,OAAAC,EAAA,EAAAD,CAAAD,EA8BnB3B,EAAM,CACH8B,GAAI9B,EACJ+B,aAAc,OACdC,SAAU,MACVC,YAAaC,IAAKC,EAAE,QACpBd,WAxDsB,YAyDtBJ,qBAAqB,EACrBmB,OAAQ,SAAAN,GAAE,2BAAAO,OAAyBP,IACnCJ,QAAS,SAtCOE,OAAAC,EAAA,EAAAD,CAAAD,EAwCnB1B,EAAe,CACZ6B,GAAI7B,EACJ8B,aAAc,eACdC,SAAU,cACVC,YAAaC,IAAKC,EAAE,iBACpBd,WAjEoB,UAkEpBJ,qBAAqB,EACrBmB,OAAQ,SAAAN,GAAE,oCAAAO,OAAkCP,IAC5CJ,QAAS,kBAhDOE,OAAAC,EAAA,EAAAD,CAAAD,EAkDnBzB,EAAc,CACX4B,GAAI5B,EACJ6B,aAAc,cACdC,SAAU,aACVC,YAAaC,IAAKC,EAAE,gBACpBd,WA3EoB,UA4EpBJ,qBAAqB,EACrBmB,OAAQ,SAAAN,GAAE,uCAAAO,OAAqCP,IAC/CJ,QAAS,qBA1DOE,OAAAC,EAAA,EAAAD,CAAAD,EA4DnBxB,EAAM,CACH4B,aAAc,OACdC,SAAU,SACVC,YAAaC,IAAKC,EAAE,UA/DJP,OAAAC,EAAA,EAAAD,CAAAD,EAiEnBvB,EAAU,CACP0B,GAAI1B,EACJ2B,aAAc,UACdC,SAAU,UACVC,YAAaC,IAAKC,EAAE,WACpBC,OAAQ,SAAAN,GAAE,mEAAAO,OACuDP,MAvEjDF,OAAAC,EAAA,EAAAD,CAAAD,EAyEnBtB,EAAY,CACTyB,GAAIzB,EACJ0B,aAAc,YACdC,SAAU,YACVC,YAAaC,IAAKC,EAAE,aACpBC,OAAQ,SAAAN,GAAE,uBAAAO,OAAqBP,EAArB,YA9EMF,OAAAC,EAAA,EAAAD,CAAAD,EAgFnBrB,EAAQ,CACLwB,GAAIxB,EACJyB,aAAc,QACdC,SAAU,QACVC,YAAaC,IAAKC,EAAE,SACpBC,OAAQ,SAAAN,GAAE,0DAAAO,OAAwDP,MArFlDF,OAAAC,EAAA,EAAAD,CAAAD,EAuFnBnB,EAAO,CACJsB,GAAItB,EACJwB,SAAU,SAzFMJ,OAAAC,EAAA,EAAAD,CAAAD,EA2FnBpB,EAAW,CACRyB,SAAU,aA5FMJ,OAAAC,EAAA,EAAAD,CAAAD,EA8FnBlB,EAAS,CACNuB,SAAU,SA/FML,GAmGXW,EAAkB,SAAAxB,GAAI,OAAII,EAAYJ,GAAMiB,cAE5CQ,EAAa,SAACzB,EAAMD,EAAM2B,GACnC,IAAIC,EAUJ,OARI3B,IAASX,IACTsC,EAAM5B,EAAK6B,WAGXxB,EAAYJ,IAASI,EAAYJ,GAAMsB,SACvCK,EAAG,GAAAJ,OAAMM,YAAWH,GAAjB,KAAAH,OAAwBnB,EAAYJ,GAAMsB,OAAOvB,EAAKiB,MAGtDW,GAGEG,EAAc,SAAA9B,GACvB,OAAQA,GACJ,KAAKhB,EACL,KAAKG,EACL,KAAKG,EACD,OAAOyC,IACX,KAAK9C,EACL,KAAKG,EACD,OAAO4C,IACX,KAAK9C,EACD,OAAO+C,IACX,KAAK5C,EACD,OAAO6C,IACX,KAAK3C,EACD,OAAO4C,IACX,KAAK3C,EACD,OAAO4C,IACX,KAAK1C,EACD,OAAO2C,IACX,KAAK5C,EACD,OAAO6C,IACX,KAAK3C,EACD,OAAO4C,IACX,QACI,OAAOC,qPCvLNC,EAAkB,eAAGC,GAAHC,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAc,IAAXD,OAAH,MAAqB,CAChD,KADgD,GAAAnB,OAE7CmB,EAAS,2BAA6B,sBAWhCI,EAAqB,SAAAC,GAAA,IAAGC,EAAHD,EAAGC,UAAH,OAC9BC,IAAW,CACP,YACA,gBACA,SACA,eACAD,EAAS,SAAAzB,OAbkB,CAC/B,2BACA,2BACA,qBAUyC2B,KAAK,KAAjC,WAIJC,EAAgB,SAAAC,GAAA,IAAGJ,EAAHI,EAAGJ,UAAH,MAAmB,YAAAzB,OACjCuB,EAAmB,CAAEE,cAAaE,KAAK,KADN,aAAA3B,OAEpCuB,EAAmB,CAAEE,cAAaE,KAAK,KAFH,gBAAA3B,OAGjCuB,EAAmB,CAAEE,cAAaE,KAAK,KAHN,OAOnCG,EAAoB,SAAAC,GAAqC,IAAlCC,EAAkCD,EAAlCC,eAAgBC,EAAkBF,EAAlBE,YAChD,OAAOP,IAAW,IAAA1B,OACXkB,EAAgB,CAAEC,QAAQ,IAAQQ,KAAK,MAC1C,yCACAK,EAAc,GAAAhC,OAAM4B,EAAc,CAAEH,WAAW,IAAQE,KAAK,MAA9C,GACdM,EACM,CACI,IACA,uBACA,mBACA,YACA,sBACA,oCACA,oBACA,sBACA,yBACA,iCACA,oBACA,8BACA,iBACA,sCACA,0BACA,qBACA,8BACA,mBACA,gBACA,iBACA,UACA,gBACA,wBACA,gCACA,sCACFN,KAAK,KACP,MAIDO,EAAqB,SAAAC,GAAA,IAAGH,EAAHG,EAAGH,eAAH,MAAwB,gBAAAhC,OACvC8B,EAAkB,CAAEE,mBAAkBL,KAAK,KADJ,cAAA3B,OAE7C,CAAC,QAADA,OAAAT,OAAA6C,EAAA,EAAA7C,CAAYuC,EAAkB,CAAEE,qBAAmBL,KAAK,KAFX,YAAA3B,OAG/C8B,EAAkB,CAAEE,mBAAkBL,KAAK,KAHI,oBAAA3B,OAIvC8B,EAAkB,CAAEE,mBAAkBL,KAAK,KAJJ,mBAAA3B,OAKxC8B,EAAkB,CAAEE,mBAAkBL,KAAK,KALH,OAS7CU,EAAoB,iBAAM,YAAArC,OACxBkB,EAAgB,CAAEC,QAAQ,IAAQQ,KAAK,KADf,kBAAA3B,OAEtBkB,EAAgB,CAAEC,QAAQ,IAAQQ,KAAK,KAFjB,cAAA3B,OAG1BkB,EAAgB,CAAEC,QAAQ,IAAQQ,KAAK,KAHb,OAO1BW,EAAe,iBAAM,IAAAtC,OAC3BkB,EAAgB,CAAEC,QAAQ,IAAQQ,KAAK,MAC1C,uCAF8B,YAAA3B,OAGlB8B,EAAkB,CAC1BE,gBAAgB,EAChBC,aAAa,IALa,OAYrBM,EAAmB,SAAC9C,EAAIhB,EAAL+D,GAAA,IAAaC,EAAbD,EAAaC,OAAb,OAC5BC,wBAAcC,KAAK,SAAAxC,GAAE,OACjBA,EAAGyC,IAAIC,SAASC,IAAhB,GAAA9C,OAAuBC,YAAgBxB,GAAvC,KAAAuB,OAAgDP,GAAM,CAClDgD,OACIA,GACAX,EAAkB,CACdE,gBAAgB,EAChBC,aAAa,8BC3GjCc,EAAAC,QAAA,CAAkBC,KAAA,mBAAAzE,KAAA,mBAAA0E,SAAA,uBAAAC,KAAA,mBAAAC,WAAA,yBAAAC,aAAA,wbCCLC,EAAqB,CAC9B7D,GAAI,GACJ8D,SAAU,GACVC,SAAU,GACVC,aAAa,GAwBV,IACMC,EAAmB,SAAAC,GAAK,OAAIA,EAAMC,KAAKL,qFCTvCM,EAA2B,CACpCC,KAAM,KACNC,MAAO,IAKLC,EAAsB,SAAAC,GAAA,IAAGN,EAAHM,EAAGN,MAAOO,EAAVD,EAAUC,YAAaC,EAAvBF,EAAuBE,KAAMC,EAA7BH,EAA6BG,MAA7B,MAA0C,CAClEN,KAAKvE,OAAA8E,EAAA,EAAA9E,CAAA,GACEoE,EAAMG,KADTvE,OAAA+E,EAAA,EAAA/E,CAAA,GAEC2E,EAFD3E,OAAA8E,EAAA,EAAA9E,CAAA,GAGOoE,EAAMG,KAAKI,GAHlB3E,OAAA+E,EAAA,EAAA/E,CAAA,GAIK4E,EAAOC,MAGhBL,MAAOJ,EAAMI,QAwDJQ,EAAqB,SAAAZ,GAAK,OAAIA,EAAMa,YAiBpCC,EAAoB,SAACd,EAAOlE,GAAR,OAC7BiF,YAASH,EAAmBZ,GAAOG,MAAMrE,IAEhCkF,EAAwB,SAAAhB,GACjC,OAA0C,OAAnCY,EAAmBZ,GAAOG,MAUxBc,EAAoB,SAAAjB,GAAK,OAClCe,YAASH,EAAmBZ,GAAOG,OAS1Be,EAAqB,SAAAlB,GAAK,OAAIY,EAAmBZ,GAAOI,OAIxDe,EAAwB,SAAAnB,GAAK,OACtCpE,OAAOwF,OAAOH,EAAkBjB,IAAQqB,OACpC,SAAAC,GAAS,OAA0B,IAAtBA,EAAUC,WAGlBC,EAA0B,SAAAxB,GAAK,OACxCpE,OAAOwF,OAAOH,EAAkBjB,IAAQqB,OACpC,SAAAC,GAAS,OAA0B,IAAtBA,EAAUC,WAYlBE,EAAgC,SAAAzB,GAAK,SAAA3D,OAAAT,OAAA8F,EAAA,EAAA9F,CAC3C+F,IAAUR,EAAsBnB,GAAQ,MAAO,gBADJpE,OAAA8F,EAAA,EAAA9F,CAE3C+F,IAAUH,EAAwBxB,GAAQ,MAAO,kBAW3C4B,EAAsB,SAAAC,GA4B/B,OAAOC,IAAUD,GAAME,IAAI,SAAAC,GAAC,MAAK,CAC7BlG,GAAIkG,EAAElG,GACNmG,KAAMD,EAAEC,KACRC,YAAaF,EAAEE,YACfC,YAAaH,EAAEG,YACfC,mBAAoBJ,EAAEI,mBACtBb,QAASS,EAAEK,SACXC,MAAON,EAAE/B,KAAKgC,KACdM,QAASP,EAAEO,QACNC,MAAM,KACNxE,KAAK,KACLyE,OAAO,EAAG,IACfC,YAAaV,EAAEU,YACVF,MAAM,KACNxE,KAAK,KACLyE,OAAO,EAAG,IACfE,OAAQX,EAAEW,OACVC,cAAeC,YAAQb,EAAEc,gBAAgBpF,OACzCoF,gBA7CY1C,EA6CY4B,EAAEc,eA5C1B1C,EAAM2B,IAAI,SAAAlH,GACN,IAAIC,EAAOF,YAAaC,GAAQJ,IAASI,EAAKC,KAI1CA,IAASjB,MACTiB,EAAOD,EAAKkI,YACNjJ,IACAe,EAAKmI,MACLjJ,IACAe,GAGV,IAAMC,EAAOC,YAAWH,GAClBA,EAAKE,OAASJ,IACV,GACAE,EAAKE,KACT,KAEN,OAAOa,OAAA8E,EAAA,EAAA9E,CAAA,GACAf,EACU,OAATE,EAAgB,CAAEA,QAAS,GAFnC,CAGID,aAvBI,IAAAsF,4CC5JP6C,GAA+B,GAC/BC,GAAsB,CAC/BpH,GAAI,GACJmG,KAAM,GACNU,OAAQ,GACRR,YAAa,GACbW,eAAgB,IAoGPK,GAAwB,SAAAnD,GAAK,OAAIA,EAAMoD,eAIvCC,GAAgB,SAAArD,GAAK,OAAKsD,KAAQtD,EAAMoD,gBAQxCG,GAAyB,SAAAvD,GAAK,OACvCe,YAASoC,GAAsBnD,IAAQ8C,gBClI9BU,GAAkC,GAwBlCC,GAA0B,SAAAzD,GAAK,OAAIA,EAAM0D,0BC2BvCC,gBAAgB,CAC3B7H,GArCO,WAA+C,IAA9CkE,EAA8CvC,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAVjB,KAUMmG,EAAWnG,UAAAC,OAAA,EAAAD,UAAA,QAAAE,EACtD,OAAQiG,EAAO9I,MACX,IAhBuB,kBAiBnB,OAAO+I,YAAgBD,EAAOnD,MAbD,MAcjC,QACI,OAAOT,IAiCf8D,UA7Bc,WAAsD,IAArD9D,EAAqDvC,UAAAC,OAAA,QAAAC,IAAAF,UAAA,IAAAA,UAAA,GAAXmG,EAAWnG,UAAAC,OAAA,EAAAD,UAAA,QAAAE,EACpE,OAAQiG,EAAO9I,MACX,IAxB8B,yBAyB1B,OAAO+I,YACHD,EAAOnD,OAtByB,GAyBxC,QACI,OAAOT,IAsBf+D,gBAlBoB,WAGnB,IAFD/D,EAECvC,UAAAC,OAAA,QAAAC,IAAAF,UAAA,IAAAA,UAAA,GADDmG,EACCnG,UAAAC,OAAA,EAAAD,UAAA,QAAAE,EACD,OAAQiG,EAAO9I,MACX,IAtCoC,+BAuChC,OAAO+I,YACHD,EAAOnD,OApC+B,GAuC9C,QACI,OAAOT,MAYNgE,GAAmB,SAAAhE,GAAK,OAAIA,EAAMiE,UAElCC,GAAiB,SAAAlE,GAAK,OAAIgE,GAAiBhE,GAAOlE,IAElDqI,GAAwB,SAAAnE,GAAK,OAAIgE,GAAiBhE,GAAO8D,WAEzDM,GAA8B,SAAApE,GAAK,OAC5CgE,GAAiBhE,GAAO+D,iBC9DfM,GAAyB,SAAAvI,GAAE,MAAK,CACzChB,KFRmC,0BESnCgB,OCLSwI,GAA6B,GA8B7BC,GAAsB,SAAAvE,GAAK,OAAIA,EAAMwE,aAErCC,GAAkB,SAAAzE,GAAK,OAAIpE,OAAO8I,KAAKH,GAAoBvE,KCrB3D2E,GAAqB,SAAA7I,GAAE,MAAK,CACrChB,KDd8B,qBCe9BgB,OCGS8I,GAAmB,SAAA5E,GAAK,OAAIA,EAAM6E,UCnBlCC,GAAc,WACvB,IAEMrI,EAAG,gCAAAJ,OADL,qHACK,gCACT,OAAO0C,wBACFC,KAAK,SAAAxC,GAAE,OAAIA,EAAGyC,IAAIC,SAASC,IAAI1C,KAC/BsI,MAAM,SAAAC,GAAK,OAAIC,QAAQC,IAAI,SAAUF,MCLjCG,GAAyB,CAClCC,QAAS,GACTC,SAAU,KACVC,MAAM,GCIGC,GAAkB,iBAAO,CAClCzK,KDV0B,uCEOjB0K,GAA+B,GAEtClC,GAAU,SAAAmC,GAAC,YAAU9H,IAAN8H,GAAyB,OAANA,GAqC3BC,GAAoB,SAAC1F,EAAOlE,GACrC,OAJkC,SAAAkE,GAAK,OAAIA,EAAM2F,eAI1CC,CAAuB5F,GAAOlE,IC3C5B+J,GAAqB,SAAApF,GAAK,MAAK,CACxC3F,KDD6B,oBCE7B2F,wCCESqF,GAAU,SAAAd,GAAK,OAAIC,QAAQC,IAAI,UAAWF,IAG1Ce,GAA0B,eAAGC,GAAHvI,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAoB,IAAjBuI,aAAH,OACnCjI,KAAW,CACP,KACA,OACA,QACA,IACA,IACA,kBACA,mBACA,WACA,OACA,SAVO,GAAA1B,OAWJqC,eAAoBV,KAAK,MAC5BgI,EAAY,GAAA3J,OACHkC,aAAmB,CAClBF,eAAgB2H,EAAa3H,iBAC9BL,KAAK,MAHF,MAQPiI,GAAqB,eAAApI,EAAAJ,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAA+B,GAA5BK,EAAHD,EAAGC,UAAWkI,EAAdnI,EAAcmI,aAAd,OAC9BjI,KAAW,IAAA1B,OACJkB,eAAkBS,KAAK,MAC1B,cACA,qBACA,WAJO,QAAA3B,OAKCkB,aAAgB,CAAEC,QAAQ,IAAQQ,KAAK,KALxC,KAMP,UACA,cACA,SACAF,EAAS,kBAAAzB,OACe0J,GAAwB,CACtCC,iBACDhI,KAAK,KAHL,WCxBJkI,GAAoB,SAAApK,GAAE,OAC/BiD,wBACKC,KAAK,SAAAxC,GAAE,OACJA,EAAG2J,OAAO7E,UAAUnC,IAAIrD,EAAI,CACxBgD,OAAQf,KACJkI,GAAmB,CACfnI,WAAW,EACXkI,aAAc,CAAE3H,gBAAgB,MAEtCL,KAAK,SAGd+G,MAAMe,KAGFM,GAAmB,SAACtK,EAAIuK,GACjC,IAAM5J,EAAG,cAAAJ,OAAiBP,EAAjB,aAETiD,wBAAcC,KAAK,SAAAxC,GACX6J,EACA7J,EAAGyC,IAAIC,SAASoH,KAAK7J,GAErBD,EAAGyC,IAAIC,SAASqH,OAAO9J,MAKtB+J,GAAqB,SAAA1K,GAC9B,OAAOiD,wBACFC,KAAK,SAAAxC,GACF,OAAOA,EAAG2J,OAAOtF,WACZ1B,IAAIrD,GACJkD,KAAK,SAAAsC,GAAS,OAAIA,EAAUiF,aAEpCxB,MAAMe,mCC5CFW,GAAsB,CAAExE,KAAM,GAAInH,KADrB,qBAGpB4L,GAAyB,SAAApG,GAAiB,IAAd8E,EAAc9E,EAAd8E,QAC9B,MAAuB,kBAAZA,EAGHuB,EAAAC,EAAAC,cAAA,uBACYF,EAAAC,EAAAC,cAAA,QAAMC,MAAO,CAAEC,WAAY,MAAQ3B,EAAQnD,MAAa,IADpE,aAMDmD,GA+BI4B,eAhBS,SAAAhH,GAAS,IAAAiH,ENZL,SAAAjH,GAAK,OAAIA,EAAMkH,UAAY/B,GMafgC,CAAanH,GAAzCoF,EADqB6B,EACrB7B,QAASC,EADY4B,EACZ5B,SACjB,MAAO,CACH+B,aAHyBH,EACF3B,KAGvB+B,gBAAiBjC,EACjBkC,iBAAkBjC,IAatB,CACIkC,gBAAiBhC,IAHVyB,CA5BgB,SAAAQ,GAC3B,OACIb,EAAAC,EAAAC,cAACY,GAAAb,EAAD,CACIE,MAAO,CAAEY,OAAQ,OACjBpC,KAAMkC,EAAMJ,aACZhC,QAASuB,EAAAC,EAAAC,cAACc,GAAD,CAAwBvC,QAASoC,EAAMH,kBAChDO,iBAAkBJ,EAAMF,iBACxBO,QAASL,EAAMD,6BCOdO,GAAkB,SAAArH,GAAK,MAAK,CACrC3F,KblC2B,kBamC3B2F,UAGSsH,GAAyB,SAAAtH,GAAK,MAAK,CAC5C3F,KbtCkC,yBauClC2F,UAQSuH,GAAiB,SAAAlM,GAAE,sBAAAwE,EAAA1E,OAAAqM,EAAA,EAAArM,CAAAsM,EAAAtB,EAAAuB,KAAI,SAAAC,EAAMC,GAAN,IAAAC,EAAA,OAAAJ,EAAAtB,EAAA2B,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAF,EAAAC,KAAA,EAAAD,EAAAE,KAAA,EAETxC,GAAkBpK,GAFT,cAEtBwM,EAFsBE,EAAAG,KAI5BN,EAASO,GAAmBN,IAJAE,EAAAK,OAAA,SAMrBC,QAAQC,QAAQT,IANK,cAAAE,EAAAC,KAAA,EAAAD,EAAAQ,GAAAR,EAAA,SAQ5BvD,QAAQC,IAAI,UAAZsD,EAAAQ,IAR4BR,EAAAK,OAAA,SAAAL,EAAAQ,IAAA,yBAAAR,EAAAS,SAAAb,EAAA,iBAAJ,gBAAAc,GAAA,OAAA5I,EAAA6I,MAAAC,KAAA3L,YAAA,IAcnB4L,GAA4B,SAAAvN,GAAE,sBAAA+B,EAAAjC,OAAAqM,EAAA,EAAArM,CAAAsM,EAAAtB,EAAAuB,KAAI,SAAAmB,EAAOjB,EAAUkB,GAAjB,IAAAC,EAAAC,EAAA3D,EAAA7B,EAAA,OAAAiE,EAAAtB,EAAA2B,KAAA,SAAAmB,GAAA,cAAAA,EAAAjB,KAAAiB,EAAAhB,MAAA,cAC3CL,EAASN,IAAuB,IAE1ByB,EAAkBG,WAAW,WAC/B,IAAMC,EAAgB7I,YAASD,EAAkByI,IAAYzN,IACxDoG,YACDiC,GAAsBoF,MAAeK,IACrCnD,GAAoBxE,KAAO2H,EAE3BvB,ENvEuC,CAC/CvN,KDNqC,4BCOrC2F,MMsEsC,CACtB2E,QAASqB,GACTnB,MAAM,OAInB,KAEGmE,EAAY,SAAAxF,GACd,ICnFkCrE,EAAUW,EDmFtCsJ,EAAkBjI,EAAoBqC,GAAU,GAEtDoE,EACIyB,GAAoBC,aAAUF,EAAgB/G,kBCtFhBlD,EDyFRG,EAAiBwJ,KCzFChJ,EDyFYzE,ECxF5DkO,aAAaC,QAAb,2BAAA5N,OAAgDuD,GAAYW,GD2FxDsJ,EAAgB/G,eAAeoH,QAAQ,SAAArP,GACnC,OAAQA,EAAKC,MACT,KAAKhB,IACL,KAAKC,IACL,KAAKC,IACL,KAAKC,IACL,KAAKC,IACDmO,EAASxC,GAAmBsE,aAAgBtP,KAC5C,MACJ,KAAKN,IACD8N,EE5FQ,eAAA/H,EAAA1E,OAAAqM,EAAA,EAAArM,CAAAsM,EAAAtB,EAAAuB,KAAM,SAAAC,EAAMC,GAAN,IAAAxD,EAAAuF,EAAA,OAAAlC,EAAAtB,EAAA2B,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAF,EAAAC,KAAA,EAAAD,EAAAE,KAAA,EAEH5D,KAFG,cAEpBD,EAFoB2D,EAAAG,KAGlByB,EAAyBvF,EAAzBuF,qBAHkB5B,EAAAK,OAAA,SAKnBR,EAV2B,CACtCvN,KXN6B,oBWO7B2F,MAQqC2J,KALP,cAAA5B,EAAAC,KAAA,EAAAD,EAAAQ,GAAAR,EAAA,SAAAA,EAAAK,OAAA,UAVjBjF,EAiBM,eAjBEoB,EAiBHwD,EAAAQ,GAhBlB/D,QAAQC,IAAR,mBAAA7I,OAA+BuH,EAA/B,MAAAvH,OAA0C2I,IACnCA,IAQuB,yBAAAwD,EAAAS,OAVlB,IAACrF,EAAQoB,GAUSoD,EAAA,iBAAN,gBAAAc,GAAA,OAAA5I,EAAA6I,MAAAC,KAAA3L,YAAA,OFmGpB,IAAMuC,EAAQuJ,IAuBd,OAtBIzN,IAAOoI,GAAelE,GAClBqD,GAAcrD,GAEdqI,EV/FyB,CACrCvN,KDtB8B,uBWuHlBuN,EV9F4B,CACxCvN,KDzB4B,mBC0B5BuP,QU4FsC5G,GAAwBzD,MAItDqI,EZ9GiC,CACzCvN,KFdmC,4Bc4H3BuN,EVvG6B,CACrCvN,KDtB8B,wBW+H1BuN,EAASP,GAAgBhM,IAEzBuM,EAASN,IAAuB,IAEhCuC,aAAad,GAEbnB,EN3H8B,CAClCvN,KDV0B,mBOsIfmJ,GAGL6B,EAAU,SAAAd,GAEZ,OADAC,QAAQC,IAAI,UAAWF,GAChBA,GAzEgC0E,EAAAjB,KAAA,EAAAiB,EAAAhB,KAAA,EA6EhBL,EAASL,GAAelM,IA7ER,cA6EjCmI,EA7EiCyF,EAAAf,KAAAe,EAAAb,OAAA,SA+EhCY,EAAUxF,IA/EsB,eAAAyF,EAAAjB,KAAA,GAAAiB,EAAAV,GAAAU,EAAA,SAAAA,EAAAb,OAAA,SAiFhC/C,EAAO4D,EAAAV,KAjFyB,yBAAAU,EAAAT,SAAAK,EAAA,kBAAJ,gBAAAiB,EAAAC,GAAA,OAAA3M,EAAAsL,MAAAC,KAAA3L,YAAA,cGjErCqI,GAAU,SAAAd,GAAK,OAAIC,QAAQC,IAAI,UAAWF,IAE1CyF,GAAgB,SAACnJ,EAAWO,GAAS,IAC/BI,EAAsCJ,EAAtCI,KAAME,EAAgCN,EAAhCM,YAAaW,EAAmBjB,EAAnBiB,eAQ3B,OANAxB,EAAUW,KAAOA,EACjBX,EAAUa,YAAcA,EACxBb,EAAUwB,eAAiBA,EAAef,IAAI,SAAAlH,GAAI,OAC9Ce,OAAO8O,OAAO,GAAI7P,EAAM,CAAE8P,MAAO9P,EAAK+P,EAAGC,OAAQhQ,EAAKiQ,MAGnDxJ,EAAUyJ,OAAO/L,KAAK,SAAAgM,GAAG,OAAIA,EAAIC,SAASC,OAGxCC,GAAkB,SAAAtJ,GAC3B,OAAO9C,wBACFC,KAAK,SAAAxC,GACF,OAAOA,EAAG2J,OAAOtF,WACZ1B,IAAI0C,EAAK/F,IACTkD,KAAK,SAAAsC,GAAS,OAAImJ,GAAcnJ,EAAWO,OAEnDkD,MAAMe,KAGFsF,GAAgB,SAAAvJ,GACzB,OAAO9C,wBAAcC,KAAK,SAAAxC,GACtB,IAAM8E,EAAY9E,EAAG2J,OAAOtF,WAAWwK,SAEvC,OAAOZ,GAAcnJ,EAAWO,MCqC3ByJ,GAAqB,SAAAzQ,GAC9B,IAAMC,EAAOD,EAAKC,YACXD,EAAKC,KACZ,IAAMyQ,EAAerQ,IAAYJ,GAAMkB,SAEvC,MAAO,CACHlB,KnB/D0B,qBmBgE1B2F,MAAM7E,OAAA8E,EAAA,EAAA9E,QAAA+E,EAAA,EAAA/E,CAAA,CACFE,GAAI0P,yBACJ1Q,QACCyQ,EAAe1Q,EAAK4Q,SAClBC,QAKFC,GAAwB,SAAA9Q,GAAI,MAAK,CAC1CC,KnBxEiC,wBmByEjC2F,MAAO5F,IAGE+Q,GAAwB,SAAAnL,GAAK,MAAK,CAC3C3F,KnB9EiC,wBmB+EjC2F,UC5DSmI,GAAqB,SAAA/H,GAAU,MAAK,CAC7C/F,KrBd0B,iBqBe1B2F,MAAOoL,YAAajK,EAAoBf,MAG/BiL,GAAwB,SAACvL,EAAa8F,GAAd,MAA6B,CAC9DvL,KrBlBiC,wBqBmBjCyF,YAAaA,EACbE,MAAO4F,IASEyD,GAAsB,SAAArJ,GAAK,MAAK,CACzC3F,KrB5B+B,sBqB6B/B2F,UAKSsL,GAAmB,iCAAAzL,EAAA1E,OAAAqM,EAAA,EAAArM,CAAAsM,EAAAtB,EAAAuB,KAAM,SAAAC,EAAMC,GAAN,IAAA2D,EAAA,OAAA9D,EAAAtB,EAAA2B,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAF,EAAAE,KAAA,EPhDlC3J,wBACKC,KAAK,SAAAxC,GAAE,OACJA,EAAG2J,OAAO7E,UAAUhC,KAAK,CACrBR,OAAQ,CACJmH,KAAqBjI,KAAK,KAC1B,sBACFA,KAAK,KACPiO,OAAQ,YAGflH,MAAMe,IOsCuB,OAC5BkG,EAD4BxD,EAAAG,KAElCN,GA/B2BxH,EA+BFmL,EAAWE,UA/BM,CAC1CpR,KrBV0B,iBqBW1B2F,MAAOoL,YAAajK,EAAoBf,OA2BN,wBAAA2H,EAAAS,OA7BP,IAAApI,GA6BOuH,MAAN,gBAAAc,GAAA,OAAA5I,EAAA6I,MAAAC,KAAA3L,YAAA,ICrCjBkG,gBAAgB,CAC3BwI,SAVa,WAAmD,IAAlDnM,EAAkDvC,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAFvB,EAEYmG,EAAWnG,UAAAC,OAAA,EAAAD,UAAA,QAAAE,EAChE,OAAQiG,EAAO9I,MACX,IANgC,2BAO5B,OAAO+I,YAAgBD,EAAOnD,MALG,GAMrC,QACI,OAAOT,MAkBNoM,GAAyB,SAAApM,GAAK,OAJT,SAAAA,GAAK,OAAIA,EAAMqM,WAK7CC,CAAmBtM,GAAOmM,UC5BxBI,GAAM,iBAENC,GAAY,eAAAlM,EAAA1E,OAAAqM,EAAA,EAAArM,CAAAsM,EAAAtB,EAAAuB,KAAG,SAAAC,EAAM5L,GAAN,OAAA0L,EAAAtB,EAAA2B,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAF,EAAAE,KAAA,EAAkBlM,EAAGiQ,YAAYC,UAAUC,IAH9C,aAGG,cAAAnE,EAAAK,OAAA,SAAAL,EAAAG,MAAA,wBAAAH,EAAAS,SAAAb,MAAH,gBAAAc,GAAA,OAAA5I,EAAA6I,MAAAC,KAAA3L,YAAA,GAEZmP,GAAY,eAAA/O,EAAAjC,OAAAqM,EAAA,EAAArM,CAAAsM,EAAAtB,EAAAuB,KAAG,SAAAmB,EAAO9M,EAAIgQ,GAAX,OAAAtE,EAAAtB,EAAA2B,KAAA,SAAAmB,GAAA,cAAAA,EAAAjB,KAAAiB,EAAAhB,MAAA,WACjB8D,EADiB,CAAA9C,EAAAhB,KAAA,eAAAgB,EAAAhB,KAAA,EAELlM,EAAGiQ,YAAYC,UAAUvN,IAPvB,aAKG,OAAAuK,EAAAV,GAAAU,EAAAf,KAAAe,EAAAhB,KAAA,sBAAAgB,EAAAhB,KAAA,EAGLlM,EAAGiQ,YAAYC,UAAUrB,OARvB,aAKG,OAAA3B,EAAAV,GAAAU,EAAAf,KAAA,cAAAe,EAAAb,OAAA,SAAAa,EAAAV,IAAA,yBAAAU,EAAAT,SAAAK,MAAH,gBAAAiB,EAAAC,GAAA,OAAA3M,EAAAsL,MAAAC,KAAA3L,YAAA,GAKLoP,GAAoB,eAAA3O,EAAAtC,OAAAqM,EAAA,EAAArM,CAAAsM,EAAAtB,EAAAuB,KAAG,SAAA2E,IAAA,IAAAtQ,EAAAuQ,EAAA,OAAA7E,EAAAtB,EAAA2B,KAAA,SAAAyE,GAAA,cAAAA,EAAAvE,KAAAuE,EAAAtE,MAAA,cAAAsE,EAAAtE,KAAA,EACf3J,wBADe,cAC1BvC,EAD0BwQ,EAAArE,KAAAqE,EAAAhE,GAER4D,GAFQI,EAAAC,GAEKzQ,EAFLwQ,EAAAtE,KAAA,EAEe8D,GAAahQ,GAF5B,cAAAwQ,EAAAE,GAAAF,EAAArE,KAAAqE,EAAAtE,KAAA,MAAAsE,EAAAhE,IAAAgE,EAAAC,GAAAD,EAAAE,IAAA,WAE1BH,EAF0BC,EAAArE,OAGjBoE,EAAUrI,MAAQqI,EAAUrI,KAAKyI,KAAK,SAAAC,GAAG,OAAIA,IAAQb,MAHpC,CAAAS,EAAAtE,KAAA,gBAAAsE,EAAAtE,KAAA,GAMfqE,EAAU5N,IAAIoN,IANC,eAAAS,EAAAnE,OAAA,SAAAmE,EAAArE,MAAA,eAAAqE,EAAAtE,KAAA,GAQtB2E,GDf+B,ECesBN,GAR/B,eAS5B9H,QAAQC,IACJ,6DAVwB8H,EAAAnE,OAAA,SDPS,GCOT,yBAAAmE,EAAA/D,SAAA6D,MAAH,yBAAA5O,EAAAiL,MAAAC,KAAA3L,YAAA,GAgBpB4P,GAAqB,eAAAjP,EAAAxC,OAAAqM,EAAA,EAAArM,CAAAsM,EAAAtB,EAAAuB,KAAG,SAAAmF,EAAOC,EAAMR,GAAb,IAAAvQ,EAAA,OAAA0L,EAAAtB,EAAA2B,KAAA,SAAAiF,GAAA,cAAAA,EAAA/E,KAAA+E,EAAA9E,MAAA,cAAA8E,EAAA9E,KAAA,EAChB3J,wBADgB,UAC3BvC,EAD2BgR,EAAA7E,KAAA6E,EAAAxE,GAEtB+D,EAFsBS,EAAAxE,GAAA,CAAAwE,EAAA9E,KAAA,eAAA8E,EAAA9E,KAAA,EAEFkE,GAAapQ,EAAIgQ,IAFf,OAAAgB,EAAAxE,GAAAwE,EAAA7E,KAAA,OAAA6E,EAAAxE,GAI9ByE,IAAIlB,GAAKgB,GAJqB,yBAAAC,EAAAvE,SAAAqE,MAAH,gBAAAI,EAAAC,GAAA,OAAAvP,EAAA+K,MAAAC,KAAA3L,YAAA,GCxBrBmQ,GAA0B,SAAAL,GAAI,MAAK,CAC5CzS,KFFoC,2BEGpC2F,MAAO8M,aCAEM,GAAqB,CAC9BC,aAAiBC,MACjBD,aAAiBE,OAaRC,GAAiB,SAAAjO,GAAK,OAAIA,EAAMkO,YCnBhCC,GAAmB,CAC5BC,cAAe,aACfC,0BAA2B,iBAC3BC,+BAAgC,QAChCC,oBAAqB,cACrB1O,SAAU,KACV2O,qBAAsB,IAqBbC,GAAe,SAAAzO,GAAK,OAAIA,EAAM0O,UAE9BC,GAAkC,SAAA3O,GAAK,OAChDyO,GAAazO,GAAOuO,qBC7BXK,GAAkB,SAAAV,GAAU,MAAK,CAC1CpT,KFC0B,iBEA1B2F,MAAOyN,0BCELW,GAAS,CACXC,SAAU,CACNC,MAAOC,IAAOC,QACdC,OAAQ,UACRC,SAAU,GACVC,WAAY,EACZC,UAAW,CACPC,eAAgB,cAGxBC,SAAU,CACNH,WAAY,EACZL,MAAOC,IAAOQ,QACdL,SAAU,GACVD,OAAQ,gBAyBDO,wBAAWZ,GAAXY,CArBe,SAAAnP,GAAiD,IAA9CoP,EAA8CpP,EAA9CoP,QAASC,EAAqCrP,EAArCqP,YAAaC,EAAwBtP,EAAxBsP,QAASL,EAAejP,EAAfiP,SAC5D,OACI5I,EAAAC,EAAAC,cAAA,OAAKC,MAAO,CAAE+I,UAAW,WACpBN,EACG5I,EAAAC,EAAAC,cAAA,OAAKiJ,UAAWF,EAAQL,UAAWrT,IAAKC,EAAE,cAE1CwK,EAAAC,EAAAC,cAAA,OAAKiJ,UAAWF,EAAQd,SAAUY,QAASA,GACtCC,EAAczT,IAAKC,EAAE,aAAeD,IAAKC,EAAE,iBC7BnD4T,GAAgB,EAOhBC,GAAgB,SAAAzC,GACzB,OAVkC,GAU3BA,GAGE0C,GAAuB,SAAApF,GAChC,OAAOqF,KAAKC,OACPtF,EARLuF,IAPkC,KAmBzBC,GAAe,SAAA9C,GACxB,OAhB4B,GAgBF+C,GAAoB/C,GAAM,IAG3C+C,GAAsB,SAAA/C,GAC/B,OAAOyC,GAAczC,GAjBrB6C,yBCAEG,eACF,SAAAA,EAAY/I,GAAO,IAAAgJ,EAAA,OAAA5U,OAAA6U,EAAA,EAAA7U,CAAAwN,KAAAmH,IACfC,EAAA5U,OAAA8U,EAAA,EAAA9U,CAAAwN,KAAAxN,OAAA+U,EAAA,EAAA/U,CAAA2U,GAAAK,KAAAxH,KAAM5B,KAOVqJ,YAAc,WACVL,EAAKM,SAAS,CAAEC,UAAU,IAC1BC,OAAOC,iBAAiB,YAAaT,EAAKU,QAC1CF,OAAOC,iBAAiB,UAAWT,EAAKW,YAXzBX,EAcnBU,OAAS,SAAAE,GACLA,EAAMC,iBACND,EAAME,kBAEN,IAAMC,EAAYH,EAAMI,QAGpBhB,EAAKhJ,MAAMiK,gBACXF,IAAcf,EAAKhJ,MAAMqD,QACzB0G,EAAY,GAEZG,sBAAsB,WAClBlB,EAAKhJ,MAAMiK,eAAeF,MA1BnBf,EA+BnBW,UAAY,WACRX,EAAKM,SAAS,CAAEC,UAAU,IAC1BC,OAAOW,oBAAoB,YAAanB,EAAKU,QAC7CF,OAAOW,oBAAoB,UAAWnB,EAAKW,WAEvCX,EAAKhJ,MAAM2J,WACXX,EAAKhJ,MAAM2J,aAlCfX,EAAKxQ,MAAQ,CACT+Q,UAAU,GAJCP,kFA0Cf,MAA4C,oBAA9BpH,KAAK5B,MAAMiK,eACrB9K,EAAAC,EAAAC,cAAA,OACIiJ,UAAWF,KAAQgC,WACnB9K,MAAO,CAAE+D,OAhDE,GAiDXgH,YAAazI,KAAKyH,cAEtB,sCAIJ,IAAMhG,EAASqF,KAAK4B,IAAI1I,KAAK5B,MAAMqD,OAAQ,GAvDxB,EAyDbkH,EAAYnW,OAAO8O,OACrB,CACIG,SACAmH,ID7DgB,GC8DhBC,gBAAiB7I,KAAK5B,MAAM0K,SACtBlD,IAAOmD,UACPnD,IAAOoD,MACbC,cAhEW,GAmEfjJ,KAAKpJ,MAAM+Q,SAAW,CAAEuB,WAAY,QAAW,IAGnD,OACI3L,EAAAC,EAAAC,cAAA,OAAKC,MAAOiL,EAAWjC,UAAWF,KAAQ2C,MACtC5L,EAAAC,EAAAC,cAAA,OAAKiJ,UAAWF,KAAQnE,SAAUrC,KAAK5B,MAAMgL,UAC5CpJ,KAAKqJ,2BAvEGC,IAAMC,WA8G/BpC,GAAWqC,aAAe,CACtBnB,eAAgB,KAChBN,UAAW,MAGAZ,+BCzGAsC,GAhBE,SAAAvS,GAAA,IAAGwP,EAAHxP,EAAGwP,UAAH,OACbnJ,EAAAC,EAAAC,cAAA,OACIiJ,UAAWA,EACXgD,MAAM,6BACNC,QAAQ,aAERpM,EAAAC,EAAAC,cAAA,QAAM7E,EAAE,gBAAgBgR,KAAK,SAC7BrM,EAAAC,EAAAC,cAAA,QAAM7E,EAAE,6FACR2E,EAAAC,EAAAC,cAAA,QAAM7E,EAAE,gBAAgBgR,KAAK,WCTxBC,GAAqB,eAAA3S,EAAA1E,OAAAqM,EAAA,EAAArM,CAAAsM,EAAAtB,EAAAuB,KAAG,SAAAC,EAAO8K,EAAWpX,GAAlB,IAAAU,EAAAC,EAAA,OAAAyL,EAAAtB,EAAA2B,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAF,EAAAE,KAAA,EAChB3J,wBADgB,OAC3BvC,EAD2BgM,EAAAG,KAE3BlM,EAF2B,4BAAAJ,OAEO6W,EAFP,cAAA7W,OAE6BP,GAE9DU,EAAGyC,IAAIC,SAASoH,KAAK7J,GAJY,wBAAA+L,EAAAS,SAAAb,MAAH,gBAAAc,EAAAqB,GAAA,OAAAjK,EAAA6I,MAAAC,KAAA3L,YAAA,GCQ5BoR,GAAS,CACXsE,KAAM,CACFC,OAAQ,OAEZ5T,KAAM,CACFuP,MAAOC,IAAOqE,QACdC,QAAS,eACThE,eAAgB,OAChBiE,cAAe,OAEnBC,KAAM,CACF3I,OAAQ,OACR4I,UAAW,MACX9I,MAAO,QAEX1G,SAAU,CACN+O,KAAMhE,IAAOoD,OAEjBsB,WAAY,CACRV,KAAMhE,IAAOC,UA6CNQ,wBAAWZ,GAAXY,CAzCkB,SAAAnP,GAM3B,IALFiB,EAKEjB,EALFiB,QACA0C,EAIE3D,EAJF2D,SACA0P,EAGErT,EAHFqT,MACApT,EAEED,EAFFC,YACAqP,EACEtP,EADFsP,QAEMgE,EAAY,CACd3P,WACA6L,UAAWF,EAAQuD,MAGvB,GAAI5R,EAAS,CACT,IAAMsS,EAAgB5P,EAAW2L,EAAQ3L,SAAW2L,EAAQ8D,WAC5DE,EAAUJ,KACN7M,EAAAC,EAAAC,cAACiN,GAAD,CAAUhE,UAAS,GAAAzT,OAAKuT,EAAQ4D,KAAb,KAAAnX,OAAqBwX,KAIhD,OACIlN,EAAAC,EAAAC,cAACkN,GAAA,EAAD,CACIjE,UAAWF,EAAQpQ,KACnBwU,GAAE,IAAA3X,OAAMkE,GACRmP,QAASuE,KACL,kBAAMhB,GAAsB,iBAAkB1S,IAC9C,MAGJoG,EAAAC,EAAAC,cAACqN,EAAA,EAASN,EAAYD,MC9CnBQ,GAZO,kBAClBxN,EAAAC,EAAAC,cAAA,OACIiM,MAAM,6BACNnI,MAAM,KACNE,OAAO,KACPmI,KAAMhE,IAAOoF,QACbrB,QAAQ,aAERpM,EAAAC,EAAAC,cAAA,QAAM7E,EAAE,0QCSDqS,GAhBG,SAAA/T,GAAA,IAAGwP,EAAHxP,EAAGwP,UAAH,OACdnJ,EAAAC,EAAAC,cAAA,OACIiJ,UAAWA,EACXkD,KAAMhE,IAAOsF,QACbxB,MAAM,6BACNC,QAAQ,aAERpM,EAAAC,EAAAC,cAAA,QAAM7E,EAAE,0GACR2E,EAAAC,EAAAC,cAAA,QAAM7E,EAAE,gBAAgBgR,KAAK,gCCMtBuB,GAZY,SAAAjU,GAAA,IAAGkU,EAAHlU,EAAGkU,QAAH,OACvB7N,EAAAC,EAAAC,cAAA,UAAQiJ,UAAWF,KAAQ6E,OAAQ/E,QAAS8E,GACxC7N,EAAAC,EAAAC,cAAA,YACIF,EAAAC,EAAAC,cAAC6N,GAAD,CAAW5E,UAAWF,KAAQ4D,KAAMzE,MAAM,cCFzC4F,GAAY,CACrB,CAAE7Y,GAAI,MAAO2E,MAAO,aACpB,CAAE3E,GAAI,KAAM2E,MAAO,iBACnB,CAAE3E,GAAI,SAAU2E,MAAO,sBAYdmU,GAAuC,GACvCC,GAAwCF,GAAU,GAAG7Y,GAuCnD6H,gBAAgB,CAC3B1B,KArCS,WAA0D,IAAzDjC,EAAyDvC,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAjDmX,GAAsChR,EAAWnG,UAAAC,OAAA,EAAAD,UAAA,QAAAE,EACnE,OAAQiG,EAAO9I,MACX,IAzBkC,6BA0B9B,OAAO+I,YACHD,EAAOnD,MACPmU,IAER,QACI,OAAO5U,IA8BfsC,MA1BU,WAA2D,IAA1DtC,EAA0DvC,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAlDoX,GAAuCjR,EAAWnG,UAAAC,OAAA,EAAAD,UAAA,QAAAE,EACrE,OAAQiG,EAAO9I,MACX,IApCmC,8BAqC/B,OAAO+I,YACHD,EAAOnD,MACPmU,IAER,QACI,OAAO5U,IAmBf8U,MAfU,WAA2D,IAA1D9U,EAA0DvC,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GApC/D,WAoCoDmG,EAAWnG,UAAAC,OAAA,EAAAD,UAAA,QAAAE,EACrE,OAAQiG,EAAO9I,MACX,IA/CmC,8BAgD/B,OAAO+I,YACHD,EAAOnD,MAxCb,YA2CF,QACI,OAAOT,MAYN+U,GAA2B,SAAA/U,GAAK,OAAIA,EAAMgV,kBAI1CC,GAAiB,SAAAjV,GAAK,OAAI+U,GAAyB/U,GAAOiC,MC9D1DiT,GAAgB,GAChBC,GAAiB,GAExBtG,GAAS,CACXuG,YAAa,CACTjG,SAAU,OACVxE,MAAO,QACPE,OAAQ,OACRmH,IAAK,QAETqD,WAAY,CACRtG,MAAOC,IAAOC,QACdtE,MAAO,OACPE,OAAQ,SAIHyK,GAAb,SAAAC,GACI,SAAAD,EAAY9N,GAAO,IAAAgJ,EAAA,OAAA5U,OAAA6U,EAAA,EAAA7U,CAAAwN,KAAAkM,IACf9E,EAAA5U,OAAA8U,EAAA,EAAA9U,CAAAwN,KAAAxN,OAAA+U,EAAA,EAAA/U,CAAA0Z,GAAA1E,KAAAxH,KAAM5B,KAaVgO,eAAiB,SAAApE,GACbA,EAAMC,iBAENb,EAAKhJ,MAAMiO,aAAarE,EAAMsE,OAAOjV,QAjBtB+P,EAoBnBmF,YAAc,SAAAvE,GACV,OAAQA,EAAMwE,SACV,KAAKV,GACD1E,EAAKhJ,MAAMqO,kBACX,MACJ,KAAKV,GACD3E,EAAKhJ,MAAMiO,iBAvBnBjF,EAAKxQ,MAAQ,CACTS,MAAOmU,IAJIpE,EADvB,OAAA5U,OAAAka,EAAA,EAAAla,CAAA0Z,EAAAC,GAAA3Z,OAAAma,EAAA,EAAAna,CAAA0Z,EAAA,EAAAlI,IAAA,4BAAA3M,MAAA,SAS8BuV,GACtB5M,KAAK0H,SAAS,CACVrQ,MAAOuV,EAAU/T,SAX7B,CAAAmL,IAAA,SAAA3M,MAAA,WAkCa,IAAAwV,EACmC7M,KAAK5B,MAArCoI,EADHqG,EACGrG,QAAS3N,EADZgU,EACYhU,KAAMwT,EADlBQ,EACkBR,aAEjBS,EACFvP,EAAAC,EAAAC,cAACsP,GAAAvP,EAAD,CAAgBwP,SAAS,SACrBzP,EAAAC,EAAAC,cAACwP,GAAAzP,EAAD,CAAYkJ,UAAWF,EAAQyF,cAIjCiB,EACO,KAATrU,GAAwB,OAATA,EACX0E,EAAAC,EAAAC,cAACsP,GAAAvP,EAAD,CAAgBwP,SAAS,OACrBzP,EAAAC,EAAAC,cAAC0P,GAAD,CAAa/B,QAAS,kBAAMiB,QAEhC,KAER,OACI9O,EAAAC,EAAAC,cAAC2P,GAAA5P,EAAD,CACIkJ,UAAWF,EAAQwF,YACnBqB,YAAava,IAAKC,EAAE,0BACpB+Z,eAAgBA,EAChBI,aAAcA,EACd7V,MAAO2I,KAAKpJ,MAAMS,MAClBiW,SAAUtN,KAAKoM,eACfmB,QAASvN,KAAKuM,kBA1D9BL,EAAA,CAA4B3C,aAuE5B2C,GAAO1C,aAAe,CAClB3Q,KAAM,GACNwT,aAAcmB,SAASC,WAGZpH,4BAAWZ,GAAXY,CAAmB6F,yBC5ErBwB,GAAgB,GAEhBC,GAAb,SAAAxB,GAAA,SAAAwB,IAAA,IAAAC,EAAAxG,EAAA5U,OAAA6U,EAAA,EAAA7U,CAAAwN,KAAA2N,GAAA,QAAAE,EAAAxZ,UAAAC,OAAAwZ,EAAA,IAAAC,MAAAF,GAAAG,EAAA,EAAAA,EAAAH,EAAAG,IAAAF,EAAAE,GAAA3Z,UAAA2Z,GAAA,OAAA5G,EAAA5U,OAAA8U,EAAA,EAAA9U,CAAAwN,MAAA4N,EAAApb,OAAA+U,EAAA,EAAA/U,CAAAmb,IAAAnG,KAAAzH,MAAA6N,EAAA,CAAA5N,MAAA/M,OAAA6a,MACIlX,MAAQ,CACJuN,KAAMwC,IAFdS,EAKI6G,yBAA2B,SAAA9J,GACvBiD,EAAKM,SAAS,CAAEvD,OAAMoC,YAAapC,IAASuJ,MANpDtG,EAiBIiB,eAAiB,SAAAF,GACb,IAAM+F,EAAiB/F,EAAY,GAC7BgG,EAAUrH,KAAK4B,IACjB/B,GACAE,GAAqBqH,IAGzB,GAAIC,IAAY/G,EAAKxQ,MAAMuN,KAAM,CAC7B,IAAMiK,EAActH,KAAKuH,IAAIF,EAAST,IAEtCtG,EAAKhJ,MAAMiK,eAAe+F,KA3BtChH,EA+BIW,UAAY,WACR,OAAO9D,GAAsBmD,EAAKxQ,MAAMuN,OAhChDiD,EAmCIkH,kBAAoB,WAChB,IAAMnK,EACFiD,EAAKxQ,MAAMuN,OAASuJ,GACdtG,EAAKhJ,MAAM2E,SACX2K,GAEVtG,EAAKM,SAAS,CAAEvD,OAAMoC,aAAca,EAAKxQ,MAAM2P,eAzCvDa,EA4CImH,kBAAoB,WAChBnH,EAAKhJ,MAAMoQ,QAAQC,KAAnB,IAAAxb,OAA4BmU,EAAKhJ,MAAM3G,WAAW,GAAG/E,MA7C7D0U,EAAA,OAAA5U,OAAAka,EAAA,EAAAla,CAAAmb,EAAAxB,GAAA3Z,OAAAma,EAAA,EAAAna,CAAAmb,EAAA,EAAA3J,IAAA,oBAAA3M,MAAA,WAUQ2I,KAAKiO,yBAAyBjO,KAAK5B,MAAM2E,YAVjD,CAAAiB,IAAA,4BAAA3M,MAAA,SAa8BuV,GACtB5M,KAAKiO,yBAAyBrB,EAAU7J,YAdhD,CAAAiB,IAAA,SAAA3M,MAAA,WAgDa,IAAAwV,EACwD7M,KAAK5B,MAA1D3G,EADHoV,EACGpV,WAAYoB,EADfgU,EACehU,KAAM6V,EADrB7B,EACqB6B,WAAYC,EADjC9B,EACiC8B,mBAEhCC,EAAW5O,KAAKpJ,MAAM2P,YACtBmH,GACA1N,KAAKpJ,MAAMuN,KACX0K,EAAmB3H,GAAoB0H,GACvCE,EAAsB,CACxBC,QAAO,GAAA9b,OVpFqB,GUoFrB,gBACP+b,UAAWhP,KAAKpJ,MAAM2P,YAAc,OAAS,SAC7C9E,OAAQmF,GAAcgI,GVtFM,IUyFhC,OACIrR,EAAAC,EAAAC,cAACwR,GAAD,CACIxN,OAAQoN,EACRxG,eAAgBrI,KAAKqI,eACrBN,UAAW/H,KAAK+H,UAChBe,UAAU,GAEVvL,EAAAC,EAAAC,cAAA,OAAKC,MAAOoR,GACRvR,EAAAC,EAAAC,cAAA,OAAKiJ,UAAWF,KAAQ0I,cACpB3R,EAAAC,EAAAC,cAACkN,GAAA,EAAD,CACIjN,MAAO,CACHwM,QAAS,eACThE,eAAgB,OAChBiJ,YAAa,GACbnC,SAAU,WACVpE,IAAK,OAETgC,GAAI,QAEJrN,EAAAC,EAAAC,cAAC2R,GAAD,OAEJ7R,EAAAC,EAAAC,cAAC4R,GAAD,CACIxW,KAAMA,EACNwT,aAAcsC,EACdlC,gBAAiBzM,KAAKuO,qBAG7B9U,YAAQhC,GAAYkB,IAAI,SAAAT,GAAS,OAC9BqF,EAAAC,EAAAC,cAAC6R,GAAD,CACItL,IAAK9L,EAAUxF,GACf6X,MAAOrS,EAAUY,YACjBX,QAASD,EAAUC,QACnBhB,YAAae,EAAUxF,GACvBmI,SAAU3C,EAAUxF,KAAOgc,OAIvCnR,EAAAC,EAAAC,cAAC8R,GAAD,CACIjJ,QAAStG,KAAKsO,kBACd/H,YAAavG,KAAKpJ,MAAM2P,YACxBJ,SAAUnG,KAAK5B,MAAM2E,WAAa2K,UArGtDC,EAAA,CAAmCpE,aAmH7BiG,GAAqB,CACvBnH,eAAgB7D,GAChBmK,mBC5I2B,SAAAtX,GAAK,MAAK,CACrC3F,KHNsC,6BGOtC2F,WD2KWoY,gBACX7R,YA3CoB,SAAAhH,GAAK,MAAK,CAC9Ba,WAAYI,EAAkBjB,GAC9BiC,KAAMgT,GAAejV,GACrBmM,SAAUC,GAAuBpM,GACjC8X,WAAY5T,GAAelE,KAyCvB4Y,GAlCW,SAACE,EAAYC,EAAeC,GAC3C,IAAMnY,EAAajF,OAAOwF,OAAOL,YAAS+X,EAAWjY,aAC/CoY,EAAoBtX,IACtBd,EAAWQ,OAAO,SAAAW,GAAC,OACfA,EAAEE,YAAYgX,cAAcC,SAASL,EAAW7W,KAAKiX,iBAEzD,MACA,eAGJ,OAAOtd,OAAA8E,EAAA,EAAA9E,CAAA,GACAkd,EACAE,EACAD,EAHP,CAIIlY,WAAU,GAAAxE,OAAAT,OAAA8F,EAAA,EAAA9F,CACHqd,EAAkB5X,OAAO,SAAAW,GAAC,OAAIA,EAAET,WAD7B3F,OAAA8F,EAAA,EAAA9F,CAEHqd,EAAkB5X,OAAO,SAAAW,GAAC,OAAKA,EAAET,eAgB5CyF,CAIE+P,KEhKS/P,eATS,SAAAhH,GAAK,MAAK,CAC9BmM,SAAUC,GAAuBpM,KAQtBgH,CAhBiB,SAAAQ,GAC5B,IAAM+F,EAAO/F,EAAM0K,SAAWnC,GAAgBvI,EAAM2E,SAC9CsH,EAAYpD,GAAa9C,GAE/B,OAAO5G,EAAAC,EAAAC,cAAA,OAAKiJ,UAAU,4BAA4BhJ,MAAO,CAAE2M,sCCKhD2F,GAfQ,SAAA9Y,GAAA,IAAG+Y,EAAH/Y,EAAG+Y,MAAH,OACnB1S,EAAAC,EAAAC,cAACqN,EAAA,EAAD,CACIoF,OAAK,EACLlM,IAAKiM,EACL9J,UAAQ,EACRoE,MACIhN,EAAAC,EAAAC,cAAA,KAAGC,MAAO,CAAEiI,MAAOC,IAAOsF,QAASvN,WAAY,QAAUsS,MCYtDE,GAlBI,SAAAjZ,GAAA,IAAGwP,EAAHxP,EAAGwP,UAAH,OACfnJ,EAAAC,EAAAC,cAAA,OACIiJ,UAAWA,EACXgD,MAAM,6BACNnI,MAAM,KACNE,OAAO,KACPmI,KAAMhE,IAAOqE,QACbN,QAAQ,aAERpM,EAAAC,EAAAC,cAAA,QAAM7E,EAAE,gBAAgBgR,KAAK,SAC7BrM,EAAAC,EAAAC,cAAA,QAAM7E,EAAE,8JCHVwX,GAAa,SAAAlZ,GAAA,IAAG7D,EAAH6D,EAAG7D,IAAH,OACfkK,EAAAC,EAAAC,cAAA,KACI6I,QAAS,SAAA+J,GAAC,OAAIA,EAAEnI,mBAChBxB,UAAWF,KAAQ8J,WACnBhE,OAAO,SACPiE,IAAI,sBACJC,KAAMnd,GAENkK,EAAAC,EAAAC,cAACgT,GAAD,QAQFC,GAAe,kBACjBnT,EAAAC,EAAAC,cAAA,UAAQiJ,UAAWF,KAAQmK,cAAe7d,IAAKC,EAAE,YAyCtC6d,GAtCS,SAAAnc,GAA4C,IAAzC/C,EAAyC+C,EAAzC/C,KAAMmH,EAAmCpE,EAAnCoE,KAAMgY,EAA6Bpc,EAA7Boc,SAAUxd,EAAmBoB,EAAnBpB,IAAKyd,EAAcrc,EAAdqc,QAC5CC,EAAWvd,YAAY9B,GAEvBsf,EACFtf,IAASjB,IACLwgB,KAAaH,GAEbvT,EAAAC,EAAAC,cAACsT,EAAD,CAAUrT,MAAO,CAAEkM,KAAMhE,IAAOqE,WAGxC,OACI1M,EAAAC,EAAAC,cAACqN,EAAA,EAAD,CACIoF,OAAK,EACL5J,QAASuK,EACTtG,MACIhN,EAAAC,EAAAC,cAAA,OAAKiJ,UAAWF,KAAQ0K,UACpB3T,EAAAC,EAAAC,cAAA,OAAKiJ,UAAWF,KAAQ+D,OACpBhN,EAAAC,EAAAC,cAAA,QAAMC,MAAO,CAAEsM,OAAQ,QAClBgH,GAELzT,EAAAC,EAAAC,cAAA,YAAO5E,GACNxF,EAAMkK,EAAAC,EAAAC,cAAC0T,GAAD,CAAY9d,IAAKA,IAAU,MAEtCkK,EAAAC,EAAAC,cAAC2T,GAAD,UCtCPC,GAAc,CACvB,CACI3e,GAAI,aACJ4e,OAAQxe,IAAKC,EAAE,oBACfiE,MAAO,CACH,CACItF,KAAMN,IACNyH,KAAM/F,IAAKC,EAAE,YACbsP,QAAS,IAEb,CACI3Q,KAAMP,IACN0H,KAAM/F,IAAKC,EAAE,YACbsP,QAAS,QAEb,CACI3Q,KAAML,IACNwH,KAAM/F,IAAKC,EAAE,UACbsP,QAAS/Q,QAOZigB,GAAmB,CAC5B9gB,IACAG,IACAC,IACAC,IACAI,IACAF,IACAC,IACAF,KAISygB,GAAgB,CAACxgB,IAASC,IAAWC,0BCrC5CugB,eACF,SAAAA,EAAYrT,GAAO,IAAAgJ,EAAA,OAAA5U,OAAA6U,EAAA,EAAA7U,CAAAwN,KAAAyR,IACfrK,EAAA5U,OAAA8U,EAAA,EAAA9U,CAAAwN,KAAAxN,OAAA+U,EAAA,EAAA/U,CAAAif,GAAAjK,KAAAxH,KAAM5B,KAOVsT,QAAU,SAAAjgB,GAAI,OAAI,WAAM,IAAAob,EACsCzF,EAAKhJ,MAAvD1M,EADYmb,EACZnb,KAAMwQ,EADM2K,EACN3K,mBAAoByP,EADd9E,EACc8E,oBAElC,GAAIjgB,IAASX,IACTmR,EAAmB,CAAExQ,OAAM2Q,QAAS5Q,EAAKuS,UACtC,CACH,IAAM4N,EAAU,CACZlf,GAAIjB,EAAKiB,GACTmG,KAAMpH,EAAKqH,aAAerH,EAAKoH,MAG/B2Y,GAAczB,SAASre,GACvBigB,EAAoBjgB,EAAMkgB,GAE1B1P,EAAmB,CAAExQ,OAAM2Q,QAASuP,OAtB7BxK,EA2BnByK,cAAgB,WACZzK,EAAKM,SAAS,CAAEoK,SAAU1K,EAAKxQ,MAAMkb,UAErC1K,EAAKhJ,MAAM2T,mBAAmB3K,EAAKhJ,MAAM1M,OA3BzC0V,EAAKxQ,MAAQ,CACTkb,SAAS,GAJE1K,wEAiCV,IAAA4K,EAAAhS,KAAAiS,EACmCjS,KAAK5B,MAArC6R,EADHgC,EACGhC,MAAOve,EADVugB,EACUvgB,KAAMsF,EADhBib,EACgBjb,MAAOkb,EADvBD,EACuBC,QAC5B,OACI3U,EAAAC,EAAAC,cAAC0U,EAAA,SAAD,KACI5U,EAAAC,EAAAC,cAAC2U,GAAD,CAAgBnC,MAAOA,IACtBjZ,EAAM2B,IAAI,SAAAlH,GACP,IAAM4gB,EAAUlf,YAAWzB,EAAMD,EAAMugB,EAAKM,QAAQlf,IACpD,OACImK,EAAAC,EAAAC,cAAC8U,GAAD,CACIvO,IAAKvS,EAAKiB,IAAMjB,EAAKuS,IACrBtS,KAAMA,EACNof,QAASpf,IAASjB,IAAgBgB,EAAKC,KAAOA,EAC9CmH,KAAMpH,EAAKqH,aAAerH,EAAKoH,KAC/BgY,SAAUmB,EAAKN,QAAQjgB,GACvB4B,IAAKgf,MAIhBH,EACG3U,EAAAC,EAAAC,cAACqN,EAAA,EAAD,CACIoF,OAAK,EACLlM,IAAG,WAAA/Q,OAAagd,GAChB3J,QAAStG,KAAK6R,cACdtH,MACIhN,EAAAC,EAAAC,cAAA,UAAQiJ,UAAWF,KAAQgM,gBACtBxS,KAAKpJ,MAAMkb,QACNhf,IAAKC,EAAE,cACPD,IAAKC,EAAE,gBAIzB,KACJwK,EAAAC,EAAAC,cAACqN,EAAA,EAAD,CAASd,OAAO,oBAlEGT,aAkFnCkI,GAAqBgB,aAAe,CAChCrf,GAAIsf,IAAUC,OAAOC,YAGVhV,mBACX,KACA,CACIsE,sBACAyP,oBCnG2B,SAACjgB,EAAM2Q,GAAP,OAAmB,SAACpD,EAAUkB,GAC7D,IAMI0S,EANEjc,EAAQuJ,IACR2S,EAAehhB,IAAYJ,GAAMkB,SACjC8G,EAAiBK,GAAsBnD,GAAO8C,eAC9CqZ,EAAqBrZ,EAAesZ,UACtC,SAAAvhB,GAAI,OAAIA,EAAKC,OAASA,IAKtBqhB,GAAsB,IACtBF,EAAgBnZ,EAAeqZ,IACjBD,GAAcrE,KAAKpM,GAEjCpD,EAASsD,GAAsBsQ,KAO/B5T,EAASiD,GALT2Q,EAAgB,CACZnhB,KAAMA,EACN2Q,QAAS,CAACA,SD6EPzE,CAMb6T,IE3Ea7T,eACX,KACA,CAAEsE,uBAFStE,CAzBiB,SAAA1G,GAAsC,IAAnCgL,EAAmChL,EAAnCgL,mBAAoB+Q,EAAe/b,EAAf+b,SAC7CC,EAAiB,SAAAze,GAAA,IAAG/C,EAAH+C,EAAG/C,KAAM2Q,EAAT5N,EAAS4N,QAAT,OAAuB,WAC1CH,EAAmB,CAAExQ,OAAM2Q,cAG/B,OACI9E,EAAAC,EAAAC,cAAC0U,EAAA,SAAD,KACI5U,EAAAC,EAAAC,cAAC2U,GAAD,CAAgBnC,MAAOgD,EAAS3B,SAC/B2B,EAASjc,MAAM2B,IAAI,SAAAlH,GAAI,OACpB8L,EAAAC,EAAAC,cAAC8U,GAAD,CACIvO,IAAKvS,EAAKC,KACVA,KAAMD,EAAKC,KACXmH,KAAMpH,EAAKoH,KACXgY,SAAUqC,EAAezhB,UCRvC0hB,YAAkB,SAAA/U,GAAK,OACzBb,EAAAC,EAAAC,cAACqN,EAAA,EAAD,CACIjS,KAAK,wBACL0R,MAAOzX,IAAKC,EAAE,6CACdrB,KAAK,OACL4b,SAAUlP,EAAMkP,SAChB8F,QAAShV,EAAMgV,QACf/b,MAAO+G,EAAM/G,UAIfgc,eACF,SAAAA,EAAYjV,GAAO,IAAAgJ,EAAA,OAAA5U,OAAA6U,EAAA,EAAA7U,CAAAwN,KAAAqT,IACfjM,EAAA5U,OAAA8U,EAAA,EAAA9U,CAAAwN,KAAAxN,OAAA+U,EAAA,EAAA/U,CAAA6gB,GAAA7L,KAAAxH,KAAM5B,KAWVkV,UAAY,WACRlM,EAAKM,SAAS,CAAExL,MAAM,EAAOjE,OAAQ,MAbtBmP,EAgBnBmM,SAAW,SAACC,EAAGxL,GACXZ,EAAKqM,aAELrM,EAAKM,SAAS,CACVgM,SAAU1L,EAAM2L,cAChBzX,MAAM,KArBKkL,EAyBnBwM,UAAY,SAACJ,EAAGxL,GACZZ,EAAKM,SAAS,CAAEzP,OAAQ+P,EAAMsE,OAAOjV,OAAS+P,EAAKqM,aA1BpCrM,EA6BnByM,yBAA2B,kBACvBtC,GACKtZ,OAAO,SAAAvG,GACJ,IAAMM,EAAWF,IAAYJ,GAC7B,OACI0V,EAAKxQ,MAAMI,OAASoQ,EAAKxQ,MAAMI,MAAMhF,EAASW,gBAGrDgG,IAAI,SAAAjH,GACD,IAAMM,EAAWF,IAAYJ,GACvBoiB,EAAY3hB,YAAoBT,GAChCqiB,EAAW3M,EAAKxQ,MAAMI,MAAMhF,EAASW,cACrCuf,EAAU6B,EAASzf,OAASwf,EAC5B9c,EAAQoQ,EAAKxQ,MAAMod,WAAWzQ,IAAIvR,EAASU,IAC3CqhB,EACAA,EAASE,MAAM,EAAGH,GAExB,OACIvW,EAAAC,EAAAC,cAACyW,GAAD,CACIlQ,IAAKtS,EACLA,KAAMA,EACNue,MAAOje,EAASa,YAChBmE,MAAOA,EACP+a,mBAAoB3K,EAAKqM,WACzBvB,QAASA,OArDV9K,EA0DnB+M,qBAAuB,kBACnB9C,GAAY1Y,IAAI,SAAAsa,GAAQ,OACpB1V,EAAAC,EAAAC,cAAC2W,GAAD,CAAkBpQ,IAAKiP,EAASvgB,GAAIugB,SAAUA,OA5DnC7L,EA+DnBiN,cAAgB,kBACZjN,EAAKyM,2BAA2B5gB,OAAOmU,EAAK+M,yBAhE7B/M,EAkEnBqM,WAlEmB,eAAAvc,EAAA1E,OAAAqM,EAAA,EAAArM,CAAAsM,EAAAtB,EAAAuB,KAkEN,SAAAC,EAAMtN,GAAN,IAAAsiB,EAAAM,EAAArc,EAAA,OAAA6G,EAAAtB,EAAA2B,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,OACL5N,IACMsiB,EAAa5M,EAAKxQ,MAAMod,YAEfzQ,IAAI7R,GACfsiB,EAAW7W,OAAOzL,GAElBsiB,EAAWO,IAAI7iB,GAGnB0V,EAAKM,SAAS,CAAEsM,gBAEhB5M,EAAKM,SAAS,CACVsM,WAAY,IAAIQ,MAIpBF,EAAc,YACd9hB,OAAA8F,EAAA,EAAA9F,CAAI4U,EAAKxQ,MAAMod,WAAWhc,UAAU1D,SACpCggB,GACI,QAAU9hB,OAAA8F,EAAA,EAAA9F,CAAI4U,EAAKxQ,MAAMod,WAAWhc,UAAUpD,KAAK,UAGrDqD,EAASmP,EAAKxQ,MAAMqB,OAAX,IAAAhF,OAAwBmU,EAAKxQ,MAAMqB,QAAW,GAE7DmP,EAAKkL,QAAQlf,GAAGyC,IAAIC,SACfC,IADL,eAAA9C,OACwBgF,GADxBhF,OACiCqhB,IAC5B1e,KAAK,SAAAiM,GAAQ,OAAIuF,EAAKM,SAAS,CAAE1Q,MAAO6K,MACxClG,MAAME,QAAQD,OA5BV,wBAAAwD,EAAAS,SAAAb,MAlEM,gBAAAc,GAAA,OAAA5I,EAAA6I,MAAAC,KAAA3L,YAAA,GAGf+S,EAAKxQ,MAAQ,CACT8c,SAAU,KACVxX,MAAM,EACN8X,WAAY,IAAIQ,IAChBxd,WAAOzC,EACP0D,OAAQ,IARGmP,wEAkGf,OACI7J,EAAAC,EAAAC,cAAC0U,EAAA,SAAD,KACI5U,EAAAC,EAAAC,cAACgX,GAAD,CACIpd,MAAO2I,KAAKpJ,MAAMqB,OAClBqV,SAAUtN,KAAK4T,UACfR,QAASpT,KAAKuT,WAElBhW,EAAAC,EAAAC,cAACiX,GAAAlX,EAAD,CACIkJ,UAAU,0BACVxK,KAAM8D,KAAKpJ,MAAMsF,KACjBuC,QAASuB,KAAKsT,UACdI,SAAU1T,KAAKpJ,MAAM8c,SACrBiB,aAAc,CAAEC,WAAY,OAAQC,SAAU,UAC9CC,gBAAiB,CAAEF,WAAY,OAAQC,SAAU,OACjDnX,MAAO,CAAE+D,OAAQ,QACjBsT,WAAY,CAAErX,MAAO,CAAE6D,MAAO,UAC9ByT,kBAAkB,EAClBC,qBAAqB,GAErB1X,EAAAC,EAAAC,cAACqN,EAAA,EAAD,KAAO9K,KAAKqU,0BAtHL/K,IAAMC,WAmIjC8J,GAAaZ,aAAe,CACxBrf,GAAIsf,IAAUC,OAAOC,YAGVS,UC3GF6B,GAAe,SAAAhe,GAMtB,IALF2B,EAKE3B,EALF2B,KACAE,EAIE7B,EAJF6B,YACAoc,EAGEje,EAHFie,cACAC,EAEEle,EAFFke,oBACA5O,EACEtP,EADFsP,QAUA,OACIjJ,EAAAC,EAAAC,cAAA,WAASiJ,UAAWF,EAAQ6O,SACxB9X,EAAAC,EAAAC,cAAA,OAAKiJ,UAAWF,EAAQ8O,kBACpB/X,EAAAC,EAAAC,cAACqN,EAAA,EAAD,CACIpE,UAAWF,EAAQyJ,MACnBpX,KAAK,wBACL0R,MAAOzX,IAAKC,EAAE,mBACdrB,KAAK,OACL4b,SAhBI,SAACkG,EAAGnD,GACpB8E,EAAc9E,EAAE/D,OAAOjV,QAgBXA,MAAOwB,IAEX0E,EAAAC,EAAAC,cAACqN,EAAA,EAAD,CACIpE,UAAWF,EAAQzN,YACnBF,KAAK,8BACL0R,MAAOzX,IAAKC,EAAE,yBACdua,SAnBU,SAACkG,EAAGnD,GAC1B+E,EAAoB/E,EAAE/D,OAAOjV,QAmBjBA,MAAO0B,KAGfwE,EAAAC,EAAAC,cAAA,OAAKiJ,UAAWF,EAAQ+O,cACpBhY,EAAAC,EAAAC,cAAC+X,GAAD,SAeVhG,GAAqB,CACvB2F,c9BnD+B,SAAA9d,GAAK,MAAK,CACzC3F,KnB7C0B,iBmB8C1B2F,U8BkDA+d,oB9B/CqC,SAAA/d,GAAK,MAAK,CAC/C3F,KnBjDgC,uBmBkDhC2F,W8BgDWuG,eAdS,SAAAhH,GACpB,IAAM6e,EAAoB9d,YAASoC,GAAsBnD,IAEzD,MAAO,CACHiC,KAAM4c,EAAkB5c,KACxBE,YAAa0c,EAAkB1c,cAWnCyW,GAFW5R,CAGbyI,qBA/Fa,CACXgP,QAAS,CAAEnL,QAAS,OAAQwL,eAAgB,iBAC5CJ,iBAAkB,CACdK,KAAM,IACNxG,YAAa,QAEjBc,MAAO,CACH/F,QAAS,QACT0L,MAAO,QAEX7c,YAAa,CACTmR,QAAS,QACT0L,MAAO,OACPvL,UAAW,QAEfwL,UAAW,CACPC,YAAa,CACTC,aAAY,QAEhBC,kBAAmB,CACfD,aAAY,mBAGpBE,MAAO,CACHpN,gBAAiB,uBACjBqN,aAAc,MACd3U,MAAO,OACP0E,UAAW,CACP4C,gBAAiB,yBAGzB0M,aAAc,CACVI,KAAM,IACN3I,SAAU,aA8DhB3G,CAAmB6O,KAUrBA,GAAa1L,aAAe,CACxB3Q,KAAM,GACNE,YAAa,sICzGXod,GAAOxR,KACPyR,GAAOxR,KAEPyR,8MACFC,UAAY,SAAA5jB,GAAE,OAAI,kBAAM0U,EAAKhJ,MAAMkY,UAAU5jB,oFAE7B,IAAAma,EAC8C7M,KAAK5B,MAAvD+G,EADI0H,EACJ1H,oBAAqBoR,EADjB1J,EACiB0J,UAAWC,EAD5B3J,EAC4B2J,cAClCC,EAAWF,EAAU7jB,GAErBgkB,EAAc,CAChBtjB,GAAI4M,KAAKsS,QAAQlf,GACjBujB,SAAU3W,KAAK5B,MAAMuY,SACrBC,WAAY5W,KAAK5B,MAAMwY,WACvBC,UAAW7W,KAAK5B,MAAMyY,WAG1B,OAAQJ,GACJ,KAAKN,GACD,OACI5Y,EAAAC,EAAAC,cAACqZ,GAAA,EAADtkB,OAAA8O,OAAA,CACIyV,gBAAiBP,GACbE,IAIhB,KAAKN,GACD,OACI7Y,EAAAC,EAAAC,cAACqZ,GAAA,EAADtkB,OAAA8O,OAAA,CACI6D,oBAAqBA,EACrB6R,QAASR,GACLE,IAGhB,QACI,OACInZ,EAAAC,EAAAC,cAACqZ,GAAA,EAADtkB,OAAA8O,OAAA,CACIkV,cAAeA,EACfC,SAAUA,EACVQ,YAAaV,EAAU1d,MACnB6d,sCAMf,IAAAzE,EAC0BjS,KAAK5B,MAA5BmY,EADHtE,EACGsE,UAAW9X,EADdwT,EACcxT,QACbgY,EAAWF,EAAU7jB,GAE3B,OACI6K,EAAAC,EAAAC,cAACyZ,GAAA1Z,EAAD,CACItB,OAAQua,EACRU,SAAS,KACTC,qBAAmB,EACnB3Y,QAASA,GAERgY,GAAYzW,KAAKqX,gBAClB9Z,EAAAC,EAAAC,cAAC6Z,GAAA9Z,EAAD,KACID,EAAAC,EAAAC,cAACqN,EAAA,EAAD,CAAQyM,KAAK,YAAYjR,QAAS7H,GAC7B3L,IAAKC,EAAE,WAEZwK,EAAAC,EAAAC,cAACqN,EAAA,EAAD,CAAQyM,KAAK,UAAUjR,QAAStG,KAAKsW,UAAUG,IAC1C3jB,IAAKC,EAAE,qBA5DLwW,aA+E3B8M,GAAa5D,aAAe,CACxBrf,GAAIsf,IAAUC,QAGH0D,UCpGFmB,GAAuC,GAevCC,GAA2B,SAAA7gB,GAAK,OAAIA,EAAM8gB,sBCb1CC,GAA4B,SAAAtgB,GAAK,MAAK,CAC/C3F,KDNsC,6BCOtC2F,UCqBEugB,eACF,SAAAA,EAAYxZ,GAAO,IAAAgJ,EAAA,OAAA5U,OAAA6U,EAAA,EAAA7U,CAAAwN,KAAA4X,IACfxQ,EAAA5U,OAAA8U,EAAA,EAAA9U,CAAAwN,KAAAxN,OAAA+U,EAAA,EAAA/U,CAAAolB,GAAApQ,KAAAxH,KAAM5B,KAOVyZ,UAAY,SAACrE,EAAGxL,GACZZ,EAAKM,SAAS,CAAEgM,SAAU1L,EAAM2L,iBATjBvM,EAYnB0Q,WAAa,WACT1Q,EAAKM,SAAS,CAAEgM,SAAU,QAbXtM,EAgBnB2Q,YAAc,WACV3Q,EAAKM,SAAS,CAAEgM,SAAU,OAE1BtM,EAAKhJ,MAAM4Z,6BAnBI5Q,EAsBnB6Q,gBAAkB,SAAAvlB,GACd0U,EAAKhJ,MAAM8Z,wBACP9Q,EAAKhJ,MAAM0G,WAAWf,KAAK,SAAAwS,GAAS,OAAIA,EAAU7jB,KAAOA,MAxB9C0U,EA4BnB+Q,cAAgB,SAAAjhB,GAA4B,IAAzBkhB,EAAyBlhB,EAAzBkhB,YAAaphB,EAAYE,EAAZF,MAC5BoQ,EAAKhJ,MAAMia,mBAAX7lB,OAAA8E,EAAA,EAAA9E,CAAA,GACO4U,EAAKhJ,MAAMoY,cADlBhkB,OAAA+E,EAAA,EAAA/E,CAAA,GAEK4lB,EAAcphB,MA/BJoQ,EAmCnBkR,gBAAkB,SAAA7jB,GAAsC,IAAnC2jB,EAAmC3jB,EAAnC2jB,YAAaG,EAAsB9jB,EAAtB8jB,gBAExBC,GADUpR,EAAKhJ,MAAMoY,cAAc4B,IAAgB,IACjCngB,OACpB,SAAAxG,GAAI,OAAK8mB,EAAgBxI,SAASte,EAAKiB,MAGvC8lB,EAAQlkB,OACR8S,EAAKhJ,MAAMia,mBAAX7lB,OAAA8E,EAAA,EAAA9E,CAAA,GACO4U,EAAKhJ,MAAMoY,cADlBhkB,OAAA+E,EAAA,EAAA/E,CAAA,GAEK4lB,EAAcI,KAGnBpR,EAAKhJ,MAAMqa,qBAAqBL,IA/CrBhR,EAmDnBsR,eAAiB,SAAA5jB,GAA8B,IAA3BsjB,EAA2BtjB,EAA3BsjB,YAAaO,EAAc7jB,EAAd6jB,QACvBC,EAAUxR,EAAKhJ,MAAMoY,cAAc4B,IAAgB,GACnDS,EAAgBF,EAAQhgB,IAAI,SAAAjG,GAAE,OAChCkmB,EAAQ7U,KAAK,SAAAtS,GAAI,OAAIA,EAAKiB,KAAOA,MAGrC0U,EAAKhJ,MAAMia,mBAAX7lB,OAAA8E,EAAA,EAAA9E,CAAA,GACO4U,EAAKhJ,MAAMoY,cADlBhkB,OAAA+E,EAAA,EAAA/E,CAAA,GAEK4lB,EAAcS,MA3DJzR,EA+DnB0R,WAAa,SAAApmB,GACT,IAAMqmB,EAAc3R,EAAKhJ,MAAMoY,cAAc9jB,GAEzCqmB,GAAeA,EAAYzkB,OAC3B8S,EAAKhJ,MAAM4a,cAAc,CACrBtmB,KACA2E,MAAM7E,OAAA8F,EAAA,EAAA9F,CAAKumB,KAGf3R,EAAKhJ,MAAM6a,iBAAiBvmB,GAGhC0U,EAAK2Q,eAxEL3Q,EAAKxQ,MAAQ,CACT8c,SAAU,MAJCtM,wEA8EV,IAAAyF,EAQD7M,KAAK5B,MANL8a,EAFCrM,EAEDqM,MACA/T,EAHC0H,EAGD1H,oBACAoR,EAJC1J,EAID0J,UACAzR,EALC+H,EAKD/H,WACAqU,EANCtM,EAMDsM,mBACA3C,EAPC3J,EAOD2J,cAGJ,OACIjZ,EAAAC,EAAAC,cAAC0U,EAAA,SAAD,KACI5U,EAAAC,EAAAC,cAACqN,EAAA,EAAD,CAAQxE,QAAStG,KAAK6X,WACjB/kB,IAAKC,EAAE,cACRwK,EAAAC,EAAAC,cAAC2b,GAAA5b,EAAD,OAEJD,EAAAC,EAAAC,cAACiX,GAAAlX,EAAD,CACItB,KAAMmd,QAAQrZ,KAAKpJ,MAAM8c,UACzBA,SAAU1T,KAAKpJ,MAAM8c,SACrBiB,aAAc,CAAEE,SAAU,SAAUD,WAAY,QAChDnW,QAASuB,KAAK8X,WACdpa,MAAO,CACH+D,OAAQ,OACR6X,WAAYJ,EAAMK,WAAWD,aAGjC/b,EAAAC,EAAAC,cAACqZ,GAAA,EAAD,CACIpZ,MAAO,CAAE6D,MAAO,SAChBuD,WAAYA,EACZ0U,iBAAkBxZ,KAAKiY,gBACvBwB,YAAaN,KAGpB5C,EACGhZ,EAAAC,EAAAC,cAACic,GAAD,CACIvU,oBAAqBA,EACrBoR,UAAWA,EACXC,cAAeA,EAAcD,EAAU7jB,KAAO,GAC9CikB,SAAU3W,KAAKmY,cACfvB,WAAY5W,KAAKsY,gBACjBzB,UAAW7W,KAAK0Y,eAChBja,QAASuB,KAAK+X,YACdzB,UAAWtW,KAAK8Y,aAEpB,aA3HSvP,aAwJd3L,eAvBS,SAAAhH,GAAK,MAAK,CAC9BuO,oBAAqBI,GAAgC3O,GACrD2f,UAAWkB,GAAyB7gB,GACpCkO,WAAYD,GAAejO,GAC3BuiB,mBAAoB9d,GAAgBzE,GACpC4f,cAAenc,GAAwBzD,KAoBvC,CACIohB,0BD7KmC,iBAAO,CAC9CtmB,KDVwC,iCEuLpCwmB,wBAAyBP,GACzBqB,chD9KuB,SAAA/gB,GAAM,MAAK,CACtCvG,KDV2B,kBCW3BuG,WgD6KIghB,iBAAkB1d,GAClBkd,qBAAsBxd,GACtBod,mBlD3K4B,SAAApX,GAAO,MAAK,CAC5CvP,KFhBiC,wBEiBjCuP,akDiKWrD,CAUb+b,sBAAY/B,0BCpKCgC,8MApBXC,MAAO,0EAIH,OADA7Z,KAAK6Z,MAAQ7Z,KAAK6Z,KACX7Z,KAAK6Z,sCAGP,IAAA7H,EAAAhS,KACL,OACIzC,EAAAC,EAAAC,cAAA,OAAK6I,QAAS,kBAAM0L,EAAK5T,MAAMkI,QAAQ0L,EAAK8H,YACxCvc,EAAAC,EAAAC,cAACsc,GAAAvc,EAAD,CAAiBE,MAAO,CAAEkM,KAAMhE,IAAOqE,mBAXpCV,aCqBbyQ,GAAiBlnB,IAAKC,EAAE,kBAExB0S,GAAS,CACXwU,QAAS,CACL/P,QAAS,OACTgQ,WAAY,SACZC,WAAY,QAEhBC,SAAU,CACNxQ,KAAMhE,IAAOqE,SAEjBoQ,WAAY,CACRC,SAAU,OACV1R,IAAK,OAET2R,SAAU,CACNrQ,QAAS,eACTC,cAAe,MACfjE,eAAgB,OAChBiJ,YAAa,OAEjBqL,SAAU,CACNtQ,QAAS,OACTgQ,WAAY,cAEhBO,aAAc,CACVN,WAAY,EACZnN,SAAU,WACVpE,IAAK,EACL9C,OAAQ,YAIV4U,eACF,SAAAA,EAAYtc,GAAO,IAAAgJ,EAAA,OAAA5U,OAAA6U,EAAA,EAAA7U,CAAAwN,KAAA0a,IACftT,EAAA5U,OAAA8U,EAAA,EAAA9U,CAAAwN,KAAAxN,OAAA+U,EAAA,EAAA/U,CAAAkoB,GAAAlT,KAAAxH,KAAM5B,KAOVuc,oBAAsB,kBAClBvT,EAAKM,SAAS,CAAEkT,qBAAsBxT,EAAKxQ,MAAMgkB,uBANjDxT,EAAKxQ,MAAQ,CACTgkB,qBAAqB,GAJVxT,wEAWV,IAAAyF,EAYD7M,KAAK5B,MAVL1L,EAFCma,EAEDna,GACAmG,EAHCgU,EAGDhU,KACAE,EAJC8T,EAID9T,YACAQ,EALCsT,EAKDtT,OACAmE,EANCmP,EAMDnP,MACA/C,EAPCkS,EAODlS,gBACAxC,EARC0U,EAQD1U,QACA0iB,EATChO,EASDgO,YACAC,EAVCjO,EAUDiO,YACAtU,EAXCqG,EAWDrG,QAGEuU,EAAavoB,OAAO8O,OAAO,GAAI5D,EAAMuS,MAAO,CAC9CnK,OAAQ,UACRkV,WAAY,OACZpS,IAAK,QAGHa,EAAWtR,EAAUuS,KAAOuQ,KAElC,OACI1d,EAAAC,EAAAC,cAAC0U,EAAA,SAAD,KACI5U,EAAAC,EAAAC,cAAA,OAAKiJ,UAAWF,EAAQgU,UACpBjd,EAAAC,EAAAC,cAAA,QAAMC,MAAOqd,GAAaliB,GAC1B0E,EAAAC,EAAAC,cAAA,OAAKiJ,UAAWF,EAAQyT,SACpB1c,EAAAC,EAAAC,cAAA,OACIiJ,UAAWF,EAAQiU,aACnBnU,QAASuU,GAETtd,EAAAC,EAAAC,cAACgM,EAAD,CAAU/C,UAAWF,EAAQ4T,YAEjC7c,EAAAC,EAAAC,cAAA,OAAKiJ,UAAWF,EAAQiU,cACpBld,EAAAC,EAAAC,cAACyd,GAAD,CAAM5U,QAASwU,KAEnBvd,EAAAC,EAAAC,cAAA,OAAKC,MAAO,CAAEyc,WAAY,SACrB5gB,EAAO4hB,OACJ5d,EAAAC,EAAAC,cAACkN,GAAA,EAAD,CACIjE,UAAWF,EAAQ+T,SACnB3P,GAAE,IAAA3X,OAAMP,EAAN,UAEF6K,EAAAC,EAAAC,cAACqN,EAAA,EAAD,KAAShY,IAAKC,EAAE,UAEpB,KACHwG,EAAO6hB,OACJ7d,EAAAC,EAAAC,cAAA,QAAMC,MAAO,CAAEyR,YAAa,QACxB5R,EAAAC,EAAAC,cAACqN,EAAA,EAAD,CAAQxE,QAAStG,KAAK2a,qBACjB7nB,IAAKC,EAAE,WAGhB,KACJwK,EAAAC,EAAAC,cAAA,QAAMC,MAAO,CAAEyR,YAAa,QACxB5R,EAAAC,EAAAC,cAAC4d,GAAD,UAKf1gB,EACG4C,EAAAC,EAAAC,cAAA,OACIiJ,UAAU,wBACVhJ,MAAOlL,OAAO8O,OACV,CAAE0E,WAAY,MAAOiD,cAAe,OACpCvL,EAAM3E,YACLA,EAAkC,GAApB,CAAE4M,MAAO,UAG3B5M,GAAeihB,IAEpB,KACHtnB,EACG6K,EAAAC,EAAAC,cAAC6d,GAAA9d,EAAD,CACIpK,GAAI4M,KAAKsS,QAAQlf,GACjBV,GAAIA,EACJhB,KAAK,YACLwK,KAAM8D,KAAKpJ,MAAMgkB,oBACjBW,eAAgBvb,KAAK2a,sBAEzB,aA1FOpR,aA4HZ3L,eA5BS,SAAAhH,GACpB,IAAMlE,EAAKoI,GAAelE,GACpBsB,EAAYP,YAASD,EAAkBd,EAAOlE,IAEpD,MAAO,CACHA,KACAmG,KAAMX,EAAUY,YAChBC,YAAab,EAAUc,mBACvBU,eAAgB5B,EAAmBlB,GACnC+D,gBAAiBK,GAA4BpE,GAC7CuB,QAASD,EAAUC,QACnBoB,OAAQ5B,YAASO,EAAUqB,UAmB/B,KAfe,SAACmW,EAAYC,EAAeC,GAAa,IAChDld,EAAiCgd,EAAjChd,GAAIyF,EAA6BuX,EAA7BvX,QAASwC,EAAoB+U,EAApB/U,gBACbsE,EAAa0Q,EAAb1Q,SAER,OAAOzM,OAAA8E,EAAA,EAAA9E,CAAA,GACAkd,EACAE,EAFP,CAGIiL,YAAa,kBAAM5b,EnCrFG,SAACvM,EAAIuK,GAAL,sBAAAnI,EAAAtC,OAAAqM,EAAA,EAAArM,CAAAsM,EAAAtB,EAAAuB,KAAmB,SAAA2E,EAAMzE,GAAN,IAAAoB,EAAA3D,EAAA,OAAAoC,EAAAtB,EAAA2B,KAAA,SAAAyE,GAAA,cAAAA,EAAAvE,KAAAuE,EAAAtE,MAAA,cACvCe,EAAY,SAAA3N,GAEd,OADAuM,EAASyD,GAAsBhQ,EAAIuK,IAC5BvK,GAGLgK,EAAU,SAAAd,GAEZ,OADAC,QAAQC,IAAI,6BAA8BF,GACnCA,GARkCgI,EAAAvE,KAAA,EAAAuE,EAAAtE,KAAA,EAWnCtC,GAAiBtK,EAAIuK,GAXc,cAAA2G,EAAAnE,OAAA,SAYlCY,EAAU3N,IAZwB,cAAAkR,EAAAvE,KAAA,EAAAuE,EAAAhE,GAAAgE,EAAA,SAAAA,EAAAnE,OAAA,SAclC/C,EAAOkH,EAAAhE,KAd2B,yBAAAgE,EAAA/D,SAAA6D,EAAA,iBAAnB,gBAAAY,GAAA,OAAAxP,EAAAiL,MAAAC,KAAA3L,YAAA,GmCqFMmnB,CAAe9oB,GAAKyF,KAChD2iB,YAAa,kBACT7b,ExCnI0C,CAClDvN,Kb1CwC,+Ba2CxC2F,OwCiI+CsD,QAIpCiD,CAIbyI,qBAAWZ,GAAXY,CAAmBqU,KAerBA,GAAalR,aAAe,CACxB3Q,KAAM,GACNE,YAAa,GACbZ,SAAS,EACTwC,iBAAiB,EACjBmgB,YAAa,MAGjBJ,GAAajI,aAAe,CACxBrf,GAAIsf,IAAUC,oBC1MZjV,GAAQ,CACVuS,MAAO,CACHjD,SAAU,WACVjH,SAAU,GACVpI,WAAY,IACZgI,MAAOC,IAAO6V,MACdnB,SAAU,IAEdvhB,YAAa,CACTgN,SAAU,GACVJ,MAAOC,IAAOsF,UAyBPwQ,GArBE,SAAAxkB,GAAc,IAAXykB,EAAWzkB,EAAXykB,KAChB,OACIpe,EAAAC,EAAAC,cAAA,OACIiJ,UAAU,mBACVhJ,MAAO,CACHqR,QAAS,uBAGZ4M,EACGpe,EAAAC,EAAAC,cAACme,GAAD,CAAcle,MAAOA,KAErBH,EAAAC,EAAAC,cAACoe,GAAD,CAAcne,MAAOA,gFClB/Boe,eAGF,SAAAA,EAAY1d,EAAOkU,GAAS,IAAAlL,EAAA,OAAA5U,OAAA6U,EAAA,EAAA7U,CAAAwN,KAAA8b,IACxB1U,EAAA5U,OAAA8U,EAAA,EAAA9U,CAAAwN,KAAAxN,OAAA+U,EAAA,EAAA/U,CAAAspB,GAAAtU,KAAAxH,KAAM5B,KAHV2d,kBAAoB,KAEQ3U,EAM5B4U,mBAAqB,SAAAC,GAMjB,IAAMC,EAAgB9U,EAAKhJ,MAAM3M,OAASwqB,EAAUxqB,KAE9C0qB,EAAiBF,EAAU7gB,cAAgBgM,EAAKhJ,MAAMhD,YACtDghB,EAAMzkB,YAASyP,EAAKhJ,MAAMie,eAC1BC,EAAU3kB,YAASskB,EAAUI,eAC7BE,EACFH,EAAI1pB,KAAO4pB,EAAQ5pB,IAAM0pB,EAAII,aAAeF,EAAQE,WAExD,OAAON,IAAkBK,GAAcJ,IApBf/U,EAuB5BqV,aAAe,SAAAR,GACX,GACIS,KACItV,EAAKhJ,MAAM3M,KACX2V,EAAKhJ,MAAMie,gBAEfjV,EAAK4U,mBAAmBC,GAC1B,CACE,IAAMK,EAAU3kB,YAASskB,EAAUI,eAC7BM,EAAavV,EAAKhJ,MAAMie,cAExBO,EACFD,EAAWH,aAAeF,EAAQE,YAClCG,EAAWH,aAAepV,EAAKhJ,MAAM3M,KAAKC,MAG1CkrB,GACAxV,EAAKhJ,MAAMhD,cAAgB6gB,EAAU7gB,eAErCshB,KACItV,EAAKhJ,MAAM3M,KACX6qB,EAAQE,YAAcpV,EAAKhJ,MAAM3M,KAAKC,MAG1CgrB,KAAmBtV,EAAKhJ,MAAM3M,KAAM2V,EAAKhJ,MAAMie,cAAe,CAC1DQ,YAAazV,EAAK2U,kBAClBS,WAAYI,EAAgBD,EAAWH,WAAa,UAjDxCpV,EA2E5B0V,cAAgB,kBACZ1V,EAAKhJ,MAAMie,cAAcG,YAAcpV,EAAKhJ,MAAM3M,KAAKC,MAzEvD0V,EAAKhU,GAAKkf,EAAQlf,GAHMgU,mFAVN,IAAAhU,EAkElB4M,KAAK+b,mBAlEa3oB,EAkEyB4M,KAAK5M,GAjE7C,CACH2pB,QAASxpB,YAAWH,GACpB4pB,KAAM5pB,EAAGyC,IAAIC,SAASmnB,eAAeC,gBAkEjCR,KACI1c,KAAK5B,MAAM3M,KACXuO,KAAK5B,MAAMie,gBAGfK,KAAmB1c,KAAK5B,MAAM3M,KAAMuO,KAAK5B,MAAMie,cAAe,CAC1DQ,YAAa7c,KAAK+b,kBAClBS,WAAaxc,KAAK5B,MAAM0K,SAAkC,KAAvB9I,KAAK8c,6DAKjCb,GACfjc,KAAKyc,aAAaR,oCAMb,IAAApP,EAC2C7M,KAAK5B,MAA7CoI,EADHqG,EACGrG,QAAS/U,EADZob,EACYpb,KAAM4qB,EADlBxP,EACkBwP,cAAe3e,EADjCmP,EACiCnP,MAMtC,OAL0Bgf,KACtBjrB,EACA4qB,GAIA9e,EAAAC,EAAAC,cAAA,OAAK/K,GAAIyqB,aAAiB1rB,EAAKiB,IAAKgL,MAAOA,IAE3CH,EAAAC,EAAAC,cAAA,OAAKiJ,UAAWF,EAAQ4W,SACnBtqB,IAAKC,EAAE,mDA5FIwW,aAkG5BuS,GAAcrJ,aAAe,CACzBrf,GAAIsf,IAAUC,QAYlBmJ,GAActS,aAAe,CACzB9L,MAAO,GACPjM,KAAM,GACN2J,YAAa,GACbihB,cAAe,IAGJP,UCnIFuB,GAAY,kBACrB9f,EAAAC,EAAAC,cAAA,OACIgE,OAAO,KACPkI,QAAQ,YACRpI,MAAM,KACNmI,MAAM,8BAENnM,EAAAC,EAAAC,cAAA,QACI7E,EAAE,wOACFgR,KAAK,cAKJ0T,GAAe,kBACxB/f,EAAAC,EAAAC,cAAA,OACIgE,OAAO,KACPkI,QAAQ,YACRpI,MAAM,KACNmI,MAAM,6BACNhM,MAAO,CAAEsM,OAAQ,kBAEjBzM,EAAAC,EAAAC,cAAA,QACI7E,EAAE,kIACFgR,KAAK,UACL2T,SAAS,UACTC,UAAU,uBAKTC,GAAU,kBACnBlgB,EAAAC,EAAAC,cAAA,OACIiM,MAAM,6BACNjI,OAAO,KACPkI,QAAQ,YACRpI,MAAM,KACNqI,KAAMhE,IAAOqE,SAEb1M,EAAAC,EAAAC,cAAA,QAAM7E,EAAE,gBAAgBgR,KAAK,SAC7BrM,EAAAC,EAAAC,cAAA,QAAM7E,EAAE,8ECCD8kB,eApCX,SAAAA,EAAYtf,GAAO,IAAAgJ,EAAA,OAAA5U,OAAA6U,EAAA,EAAA7U,CAAAwN,KAAA0d,IACftW,EAAA5U,OAAA8U,EAAA,EAAA9U,CAAAwN,KAAAxN,OAAA+U,EAAA,EAAA/U,CAAAkrB,GAAAlW,KAAAxH,KAAM5B,KACDxH,MAAQ,CACT+mB,YAAY,GAHDvW,iFAMDxL,EAAOgiB,GACrB5d,KAAK0H,SAAS,CACViW,YAAY,IAEhB9hB,QAAQC,IAAI,UAAWF,GACvBC,QAAQC,IAAI,SAAU8hB,oCAGtB,OAAI5d,KAAKpJ,MAAM+mB,WAEPpgB,EAAAC,EAAAC,cAAA,KAAGiJ,UAAWF,KAAQqX,WAClBtgB,EAAAC,EAAAC,cAAA,QAAMiJ,UAAWF,KAAQ4D,MACrB7M,EAAAC,EAAAC,cAACqgB,GAAD,OAEJvgB,EAAAC,EAAAC,cAAA,QAAMiJ,UAAWF,KAAQxK,SACpBlJ,IAAKC,EACF,qDAMbiN,KAAK5B,MAAMgL,gBA7BOE,IAAMC,qDCgBxBwU,GAfU,SAAA7mB,GAAA,IAAGoP,EAAHpP,EAAGoP,QAAH,OACrB/I,EAAAC,EAAAC,cAAA,UACI/L,KAAK,SACLgV,UAAWF,KAAQwX,iBACnB1X,QAASA,EACT2J,MAAOnd,IAAKC,EAAL,gBAEPwK,EAAAC,EAAAC,cAACwgB,GAAAzgB,EAAD,CAAYE,MAAO,CAAEkM,KAAMhE,IAAOsY,iCCJ7BC,GAAuB,GAE9BC,GAAa,SAAAhgB,GAAS,IAEpB6R,EAMA7R,EANA6R,MACAnH,EAKA1K,EALA0K,SACAuV,EAIAjgB,EAJAigB,cACAC,EAGAlgB,EAHAkgB,OACA9b,EAEApE,EAFAoE,sBACA+b,EACAngB,EADAmgB,aAKJ,OACIhhB,EAAAC,EAAAC,cAAA,OAAKiJ,UAAWF,KAAQgY,eAAgBC,IAAKF,GACzChhB,EAAAC,EAAAC,cAAA,KAAGiJ,UAAWF,KAAQkY,WAAYzO,GACjCnH,EACGvL,EAAAC,EAAAC,cAAA,OAAKiJ,UAAWF,KAAQmY,iBACpBphB,EAAAC,EAAAC,cAACmhB,GAAD,CAAkBtY,QAPT,kBAAM9D,EAAsB8b,OAUzCD,GACI9gB,EAAAC,EAAAC,cAAA,OAAKiJ,UAAWF,KAAQmY,iBACnBN,KAiBzBD,GAAW5U,aAAe,CACtB+U,aAAc,IAGlB,IAIM/O,GAAqB,CACvBhN,0BAGEqc,GAAsBjhB,YARJ,SAAAhH,GAAK,MAAK,CAC9BkS,SAAU7O,GAAcrD,KASxB4Y,GAFwB5R,CAG1BwgB,IAKa9U,OAAMwV,WAAW,SAAC1gB,EAAOqgB,GAAR,OAC5BlhB,EAAAC,EAAAC,cAACohB,GAADrsB,OAAA8O,OAAA,GAAyBlD,EAAzB,CAAgCmgB,aAAcE,oGC3C5CM,GAAW,CAAEnV,KAAMhE,IAAOqE,SA+HjB+U,GA7HW,SAAA5gB,GAAS,IAAA6gB,EACCC,mBAAS,MADVC,EAAA3sB,OAAA4sB,GAAA,EAAA5sB,CAAAysB,EAAA,GACxBvL,EADwByL,EAAA,GACdE,EADcF,EAAA,GAGvB1tB,EAA4D2M,EAA5D3M,KAAM4qB,EAAsDje,EAAtDie,cAAeiD,EAAuClhB,EAAvCkhB,mBAAoBlsB,EAAmBgL,EAAnBhL,GAAIopB,EAAepe,EAAfoe,WAE/C+C,EAAgBrtB,YAAoBT,EAAKC,MAEzC8tB,EAAc,WAChBC,IACAH,EAAmBC,EAAgB1uB,IAAeH,MAGhDgvB,EAAc,WAChBD,IACAH,EAAmBC,EAAgBzuB,IAAcH,MAG/CgvB,EAAY,WACdF,IACAH,EAAmB1uB,MAcjB6uB,EAAc,kBAAMJ,EAAY,OAEhC3tB,EAAO2qB,EAAc3qB,MAAQD,EAAKC,KAClCkuB,GACDC,aAAcnuB,KACdouB,aAAepuB,IAChBA,IAASquB,MACTruB,IAASsuB,KAEPC,EAA0B7hB,EAAM8hB,aAChCptB,IAAKC,EAAL,oCACAD,IAAKC,EAAL,oCA+BN,OAAOotB,aAAkB1uB,EAAM4qB,GAC3B9e,EAAAC,EAAAC,cAAAF,EAAAC,EAAA4iB,SAAA,KACI7iB,EAAAC,EAAAC,cAACqN,EAAA,EAAD,CAAQuV,OAAK,EAACC,WAAS,EAACha,QArDR,SAACkN,EAAGxL,GAAJ,OAAcqX,EAAYrX,EAAM2L,iBAsD5CpW,EAAAC,EAAAC,cAAC8iB,GAAD,OAEH7M,GACGnW,EAAAC,EAAAC,cAACiX,GAAAlX,EAAD,CACItB,KAAMmd,QAAQ3F,GACdjV,QAASghB,EACT/L,SAAUA,GAEVnW,EAAAC,EAAAC,cAACqN,EAAA,EAAD,KACK8U,GACGriB,EAAAC,EAAAC,cAAAF,EAAAC,EAAA4iB,SAAA,KACI7iB,EAAAC,EAAAC,cA3CJ,kBACpBF,EAAAC,EAAAC,cAAAF,EAAAC,EAAA4iB,SAAA,KACK5D,IAAe7rB,KAAS6rB,IAAe1rB,KACpCyM,EAAAC,EAAAC,cAACqN,EAAA,EAAD,CACIoF,OAAK,EACL3F,MAAOzX,IAAKC,EAAE,iBACduT,QAASoZ,EACTtV,KAAM7M,EAAAC,EAAAC,cAAC+iB,GAAAhjB,EAAD,CAAWE,MAAOqhB,OAG/BvC,IAAe9rB,KAAgB8rB,IAAe3rB,KAC3C0M,EAAAC,EAAAC,cAACqN,EAAA,EAAD,CACIoF,OAAK,EACL3F,MAAOzX,IAAKC,EAAE,iBACduT,QAASkZ,EACTpV,KAAM7M,EAAAC,EAAAC,cAACgjB,GAAAjjB,EAAD,CAAWE,MAAOqhB,OAvCXhtB,YAAWN,EAAKC,OA0ChB8qB,IAAe5rB,KAChC2M,EAAAC,EAAAC,cAACqN,EAAA,EAAD,CACIoF,OAAK,EACL3F,MAAOzX,IAAKC,EAAE,eACduT,QAASqZ,EACTvV,KAAM7M,EAAAC,EAAAC,cAACijB,GAAAljB,EAAD,CAASE,MAAOqhB,SAoBV,MACAxhB,EAAAC,EAAAC,cAACqN,EAAA,EAAD,OAGRvN,EAAAC,EAAAC,cAACqN,EAAA,EAAD,CACIoF,OAAK,EACL9F,KAAM7M,EAAAC,EAAAC,cAACkjB,GAAAnjB,EAAD,CAAYE,MAAO,CAAEkM,KAAM,aACjCW,MAAOzX,IAAKC,EAAE,0BAA2B,CACrCT,QAASD,YAAWZ,EAAKC,QAE7B8e,KAAMoQ,aAAQnvB,EAAM2B,GACpBkZ,OAAO,WAEX/O,EAAAC,EAAAC,cAACqN,EAAA,EAAD,CACIoF,OAAK,EACL9F,KAAM7M,EAAAC,EAAAC,cAACojB,GAAD,MACNtW,MAAO0V,EACP3Z,QAhFU,WAC9BlI,EAAM0iB,iBACW,OAAbpN,GACA+L,UAmFJ,2BC1IF/hB,GAAQ,CACVqjB,gBAAiB,CACb/R,UAAW,OACXvN,OAAQ,SAEZuf,KAAM,CACFhX,OAAQ,eACRvI,OAAQ,MACRwf,OAAQ,OACRpY,gBAAiBjD,IAAOsb,UAI1BC,oLAEE,IAAMC,EAAWC,aAAMrhB,KAAK5B,MAAM3M,MAElC,OACI8L,EAAAC,EAAAC,cAAA,OAAKiJ,UAAU,yBACXnJ,EAAAC,EAAAC,cAAA,MAAIC,MAAOA,GAAMsjB,OACjBzjB,EAAAC,EAAAC,cAAA,OAAKC,MAAOA,GAAMqjB,iBACdxjB,EAAAC,EAAAC,cAAC6jB,GAAA9jB,EAAD,CACIpK,GAAI4M,KAAKsS,QAAQlf,GACjB3B,KAAMuO,KAAK5B,MAAM3M,KACjBC,KAAMsO,KAAK5B,MAAM3M,KAAKC,KAAKoe,cAC3Bpd,GAAI0uB,EACJ9uB,QAAQ,uBAbPiX,aAqBzB4X,GAAW1O,aAAe,CACtBrf,GAAIsf,IAAUC,OAAOC,YAOVuO,UC1BAI,GAlBI,SAAAC,GACf,IAAIC,OAAWltB,EACXmtB,OAAYntB,EAEhB,OAAO,WAAa,QAAAsZ,EAAAxZ,UAAAC,OAATwZ,EAAS,IAAAC,MAAAF,GAAAG,EAAA,EAAAA,EAAAH,EAAAG,IAATF,EAASE,GAAA3Z,UAAA2Z,GAChB,OACIyT,GACA3T,EAAKxZ,SAAWmtB,EAASntB,QACzBwZ,EAAK6T,MAAM,SAACC,EAAKC,GAAN,OAAYD,IAAQH,EAASI,KAEjCH,GAEXD,EAAW3T,EACX4T,EAAYF,EAAEzhB,WAAF,EAAM+N,2BCeXzH,4BA3BA,SAAA6S,GAAK,MAAK,CACrB4I,SAAU,CACN9X,OAA6B,EAArBkP,EAAM6I,QAAQC,KACtB7K,SAAU,IACV1Q,UAAW,SACXwb,UAAW,UAEfC,MAAO,CACHhY,QAAS,OACTwL,eAAgB,SAChBjU,OAAQ,UAiBD4E,CAbf,SAA+BjI,GAAO,IAC1BoI,EAAYpI,EAAZoI,QACR,OACIjJ,EAAAC,EAAAC,cAAA,OAAKiJ,UAAWF,EAAQ0b,OACpB3kB,EAAAC,EAAAC,cAAC0kB,GAAA3kB,EAAD,CAAkBkJ,UAAWF,EAAQsb,cCU3Crc,GAAS,CACX2E,KAAM,CACF7I,MAAO,GACPE,OAAQ,GACR0Y,WAAY,EACZrU,OAAQ,UACR8D,KAAMhE,IAAOqE,SAEjBgG,MAAO,CACHmS,SAAU,SACVjL,SAAU,MACVkL,aAAc,WACdC,WAAY,UAEhBlF,QAAS,CACLrX,SAAU,OACVwc,YAAa,SACbxT,QAAS,OACTyT,WAAY,QAEhBC,aAAc,CACVzV,SAAU,WACVvL,OAAQ,OACRF,MAAO,OACPmhB,KAAM,EACN9Z,IAAK,EACLtK,OAAQ,IACRqkB,WAAY,cAIPC,GAAb,SAAAzW,GAOI,SAAAyW,EAAYxkB,EAAOkU,GAAS,IAAAlL,EAAA,OAAA5U,OAAA6U,EAAA,EAAA7U,CAAAwN,KAAA4iB,IACxBxb,EAAA5U,OAAA8U,EAAA,EAAA9U,CAAAwN,KAAAxN,OAAA+U,EAAA,EAAA/U,CAAAowB,GAAApb,KAAAxH,KAAM5B,KAPVxH,MAAQ,CACJisB,YAAY,EACZC,cAAc,EACdC,gBAAgB,GAGQ3b,EAwC5B4b,aAAe,SAAC3G,EAAepb,GAC3B,IAAKzO,OAAO8I,KAAK2F,GAAS3M,OACtB,OAAO+nB,EAIX,IAAM4G,EAAU5G,EAAclY,KAAKxL,IAAI,SAAAuqB,GAAG,OAAA1wB,OAAA8E,EAAA,EAAA9E,CAAA,GAAU0wB,KAC9CC,EAAa9G,EAAc+G,QAAQzqB,IAAI,SAAAuqB,GAAG,OAAA1wB,OAAA8E,EAAA,EAAA9E,CAAA,GAAU0wB,KACpDG,EAAahH,EAAcpb,QAAQtI,IAAI,SAAAuqB,GAAG,OAAA1wB,OAAA8E,EAAA,EAAA9E,CAAA,GAAU0wB,KAyB1D,OAvBA1wB,OAAO8I,KAAK2F,GAASH,QAAQ,SAAAsX,GACzB,GAAInX,EAAQmX,GAAc,CACtB,IAAIkL,GAAiB,EAErB,CAACL,EAASE,EAAYE,GAAYviB,QAAQ,SAAAyiB,GAAgB,OACtDA,EACKtrB,OAAO,SAAAirB,GAAG,OAAIA,EAAI3M,YAAc6B,IAChCtX,QAAQ,SAAAoiB,GACLI,GAAiB,EACjBJ,EAAIlsB,MAAQiK,EAAQmX,OAK3BkL,GACDD,EAAW5U,KAAK,CACZ8H,UAAW6B,EACXphB,MAAOiK,EAAQmX,QAMxB5lB,OAAA8E,EAAA,EAAA9E,CAAA,GACA6pB,EADP,CAEIlY,KAAM8e,EACNG,QAASD,EACTliB,QAASoiB,KA7EWjc,EAiF5Boc,aAAejC,GAAW,kBAAMkC,SAjFJrc,EAmF5B2U,kBAAoB,KAnFQ3U,EAqF5Bsc,mBAAqB,WACjB,IAAMlH,EAAapV,EAAK0V,gBAClBT,EAAgBjV,EAAKuc,+BACvBvc,EAAKhJ,MAAMie,cACXjV,EAAKhJ,MAAM3M,KAAKC,KAChB8qB,GAGJ,IAAKH,EACD,OACI9e,EAAAC,EAAAC,cAAA,OAAKiJ,UAAWU,EAAKhJ,MAAMoI,QAAQ4W,SAC9BtqB,IAAKC,EAAE,uBAKpB,IAAM6wB,EACFxc,EAAKhJ,MAAM3M,KAAKoyB,eAChBzc,EAAK0c,UAAUC,QAAQC,aACvB7F,GACA8F,GAEE7lB,EAAK5L,OAAA8E,EAAA,EAAA9E,CAAA,GACJ4U,EAAKhJ,MADD,CAEPie,gBACA3e,MAAO0J,EAAK8c,wBACRN,EACAxc,EAAK+c,WAAa/c,EAAK+c,WAAWC,aAAe,KACjDhd,EAAKhJ,MAAM0K,YAInB,OAAQ0T,GACJ,KAAK/rB,IACL,KAAKE,IACL,KAAKD,IACD,OACI6M,EAAAC,EAAAC,cAAC0U,EAAA,SAAD,KACM/K,EAAKxQ,MAAMmsB,eAIT,KAHAxlB,EAAAC,EAAAC,cAAA,OAAKC,MAAO+H,GAAOgd,cACfllB,EAAAC,EAAAC,cAAC4mB,GAAD,OAGR9mB,EAAAC,EAAAC,cAAC6mB,GAAA,EAAD,CACIlxB,GAAIgU,EAAKhU,GACTipB,cAAejV,EAAKmd,qBAChBlI,EACAje,EAAMhD,aAEVopB,kBAAmBpd,EAAKod,kBACxBC,cAAc,EACd/mB,MAAOU,EAAMV,SAK7B,KAAK9M,IACD,GAAIwN,EAAM3M,KAAKC,OAASd,IAAK,CAGzB,IAAM8zB,EAAWtmB,EAAMie,cAAcqI,SAAS/rB,IAAI,SAAAuqB,GAC9C,OACIA,EAAIyB,MAAM5U,SAAS,aACnBmT,EAAIyB,MAAM5U,SAAS,SAEZ3I,EAAKmd,qBACRrB,EACA9kB,EAAMhD,aAIP8nB,IAGX9kB,EAAMie,cAAN7pB,OAAA8E,EAAA,EAAA9E,CAAA,GACO4L,EAAMie,cADb,CAEIqI,kBAMJtmB,EAAMie,cAAgBjV,EAAKmd,qBACvBnmB,EAAMie,cACNje,EAAMhD,aAId,OAAOmC,EAAAC,EAAAC,cAACmnB,GAAkBxmB,GAE9B,QAMI,OALAA,EAAMie,cAAgBjV,EAAKmd,qBACvBnmB,EAAMie,cACNje,EAAMhD,aAGHmC,EAAAC,EAAAC,cAACmnB,GAAkBxmB,KArLVgJ,EA0L5Bod,kBAAoB,WAChBpd,EAAKM,SAAS,CACVqb,gBAAgB,KA5LI3b,EAgM5B0Z,eAAiB,WACb1Z,EAAKM,SACD,CAAEmb,YAAazb,EAAKxQ,MAAMisB,YAC1Bzb,EAAKhJ,MAAMymB,qBAAqBzd,EAAKhJ,MAAM3M,KAAKiB,MAnM5B0U,EAuM5BkY,mBAAqB,SAAA5tB,GACbA,IAAS0V,EAAK0V,kBAIlBJ,KAAsBtV,EAAKhJ,MAAM3M,KAAM2V,EAAK0V,iBAE5C1V,EAAKhJ,MAAMkhB,mBAAmBlY,EAAKhJ,MAAMie,cAAc3pB,GAAIhB,KA9MnC0V,EAiN5B0V,cAAgB,kBACZ1V,EAAKhJ,MAAMie,cAAcG,YAAcpV,EAAKhJ,MAAM3M,KAAKC,MAlN/B0V,EAoN5B+Y,kBAAoB,kBAChBzD,KACItV,EAAKhJ,MAAM3M,KACX2V,EAAKhJ,MAAMie,gBAvNSjV,EA0N5B0d,gBAAkB,SAAClB,EAAkBmB,EAAgBjc,GAKjD,MAAO,CAAErH,OAJMqH,GACTic,GACAnB,IA1NNxc,EAAKhU,GAAKkf,EAAQlf,GAElBgU,EAAK+c,WAAa7a,IAAM0b,YACxB5d,EAAK0c,UAAYxa,IAAM0b,YAEvB5d,EAAKmd,qBAAuBhD,GAAWna,EAAK4b,cAE5C5b,EAAKuc,+BAAiCpC,GAClC0D,MAGJ7d,EAAK8c,wBAA0B3C,GAAWna,EAAK0d,iBAdvB1d,EAPhC,OAAA5U,OAAAka,EAAA,EAAAla,CAAAowB,EAAAzW,GAAA3Z,OAAAma,EAAA,EAAAna,CAAAowB,EAAA,EAAA5e,IAAA,oBAAA3M,MAAA,eAAA6tB,EAAA1yB,OAAAqM,EAAA,EAAArM,CAAAsM,EAAAtB,EAAAuB,KAAA,SAAAC,IAAA,OAAAF,EAAAtB,EAAA2B,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAF,EAAAQ,GAyBQI,KAAK5B,MAzBbgB,EAAAE,KAAA,EA2BkBod,KAAoB1c,KAAK5B,MAAM3M,MA3BjD,OAAA2N,EAAAyE,GAAAzE,EAAAG,KAAAH,EAAAQ,GAyBmBulB,sBAzBnB3d,KAAApI,EAAAQ,GAAAR,EAAAyE,IA8BQ7D,KAAK0H,SAAS,CACVob,cAAc,IA/B1B,wBAAA1jB,EAAAS,SAAAb,EAAAgB,SAAA,yBAAAklB,EAAAnlB,MAAAC,KAAA3L,YAAA,KAAA2P,IAAA,qBAAA3M,MAAA,SAmCuB4kB,EAAWmJ,IAEtBA,EAAUrC,gBACT9G,EAAUI,gBAAkBrc,KAAK5B,MAAMie,eACpCJ,EAAU7gB,cAAgB4E,KAAK5B,MAAMhD,aAEzC4E,KAAK0H,SAAS,CACVqb,gBAAgB,MA1ChC,CAAA/e,IAAA,SAAA3M,MAAA,WAyOa,IAAA2a,EAAAhS,KAAA6M,EACmC7M,KAAK5B,MAArC3M,EADHob,EACGpb,KAAMqX,EADT+D,EACS/D,SAAU1N,EADnByR,EACmBzR,YAChBynB,EAAe7iB,KAAKpJ,MAApBisB,WAEFxE,EACF9gB,EAAAC,EAAAC,cAAC4nB,GAAD,CACI5zB,KAAMA,EACN4qB,cAAerc,KAAK5B,MAAMie,cAC1BiD,mBAAoBtf,KAAKsf,mBACzBwB,eAAgB9gB,KAAK8gB,eACrB1tB,GAAI4M,KAAK5M,GACTopB,WAAYxc,KAAK8c,gBACjBoD,aAAclgB,KAAKpJ,MAAMisB,aAIjC,OACItlB,EAAAC,EAAAC,cAAAF,EAAAC,EAAA4iB,SAAA,KACI7iB,EAAAC,EAAAC,cAAC6nB,GAAD,CACIrV,MAAOyM,KAAsBjrB,GAC7B6sB,OAAQ7sB,EAAKiB,GACb2rB,cAAeA,EACfI,IAAKze,KAAK8jB,YAEdvmB,EAAAC,EAAAC,cAAC8nB,GAAD,KACIhoB,EAAAC,EAAAC,cAAA,OACIuG,IAAKhE,KAAKwjB,aAAapoB,GACvBsL,UAAU,yBACV+X,IAAK,SAAAA,GAAG,OAAKzM,EAAKmS,WAAa1F,IAE9Bze,KAAKpJ,MAAMksB,cAAgB9iB,KAAK0jB,wBAGvC5a,GAAY+Z,EAAatlB,EAAAC,EAAAC,cAAC+nB,GAAD,CAAY/zB,KAAMA,IAAW,UA1QxEmxB,EAAA,CAA0BrZ,aAgR1BqZ,GAAKnQ,aAAe,CAChBrf,GAAIsf,IAAUC,QAclBiQ,GAAKpZ,aAAe,CAChB/X,KAAM,GACNqX,UAAU,EACV+b,qBAAsBrX,SAASC,UAC/BrS,YAAa,GACbihB,cAAe,IAGnB,OAeeze,eAfS,SAAChH,EAAOgZ,GAAR,MAAsB,CAC1CxU,YAAaD,GAAoBvE,GACjCylB,cAAe/f,GACX1F,EACA8lB,KAA8B9M,EAASne,MAAMiB,MAI1B,SAAAuM,GAAQ,MAAK,CACpCkmB,sBAAuB,SAAA9I,GAAa,OAChCpd,EAASxC,GAAmB4f,KAChCiD,mBAAoB,SAAC5sB,EAAIhB,EAAM8qB,GAAX,OAChBvd,EvDzWoC,SAACvM,EAAI8pB,GAO7C,MANe,CACX9qB,KDNqC,gCCOrCgB,KACA8pB,cuDqWSiJ,CAA6B/yB,EAAIhB,OAGnCkM,CAGbyI,qBAAWZ,GAAXY,CAAmBuc,KCtXfllB,GAAQ,CACVmL,gBAAiBjD,IAAO8f,QACxBzE,OAAQ,OACRxf,OAAQ,MACRuI,OAAQ,mBAKG2b,GAFF,kBAAMpoB,EAAAC,EAAAC,cAAA,MAAIC,MAAOA,MCGxBkoB,YAAU,WAEVC,IAAYC,GAAA,GAAAtzB,OAAA+E,EAAA,EAAA/E,CAAAszB,GACbF,GAAU,WADGpzB,OAAA+E,EAAA,EAAA/E,CAAAszB,GAAA,oBAEK,cAFLtzB,OAAA+E,EAAA,EAAA/E,CAAAszB,GAAA,SAGN,UAHMtzB,OAAA+E,EAAA,EAAA/E,CAAAszB,GAAA,SAIN,UAJMA,IAOZpoB,GAAQ,CACVxH,KAAM,CACF6vB,cAAe,OACfC,YAAa,OAEjBC,OAAQ,CACJxf,UAAW,SACXV,SAAU,OACVmgB,aAAc,OAElBC,OAAQ,CACJpgB,SAAU,OACVyc,WAAY,OACZxY,OAAQ,EACRrE,MAAOC,IAAOsF,SAElBkb,QAAS,CACLzgB,MAAOC,IAAOsF,QACdnF,SAAU,OACVyc,WAAY,OACZ6D,UAAW,OACXjE,SAAU,WAIZkE,8MACF1vB,MAAQ,CACJH,SAAU,MAWd8vB,eAAiB,SAAA3kB,GACb,IAAM4kB,EAAgB5kB,EAAG,KAAA3O,OAAQ2O,EAAI6kB,YAAZ,KAAAxzB,OAA2B2O,EAAIlP,IAAO,GAC/D,SAAAO,OAAUmU,EAAKkL,QAAQyK,QAAvB,wBAAA9pB,OAAqDuzB,MAGzDE,iBAAmB,SAAA9kB,GACf,IAAM+kB,EAAY/kB,EAAInG,SAASwY,OAAO,GAAG,GACzC,OAAO0S,EAAUR,OAASQ,EAAUR,OAAOrtB,YAAc,MAG7D8tB,gBAAkB,WACd,IAAMC,EAAazf,EAAKhJ,MAAM0K,SAAoB,KAAT,OAEzC,OAAO1B,EAAKhJ,MAAM3C,SAAS9C,IAAI,SAAAiJ,GAC3B,IAMMukB,EACFvkB,EAAI6kB,cAAgBb,GACdxe,EAAKsf,iBAAiB9kB,GACtBikB,GAAajkB,EAAI6kB,aAErBK,EAAallB,EAAImlB,KAAkB,KAAX,SACxBJ,EAAY/kB,EAAInG,SAASwY,OAAO,GAAG,GACnC+S,EAAUL,EAAUrtB,YAE1B,OACIiE,EAAAC,EAAAC,cAAA,MACIiJ,UAAS,gBAAAzT,OAAkB4zB,GAC3B7iB,IAAKpC,EAAIlP,GACT4T,QAnBc,WACbc,EAAKhJ,MAAM0K,WACZme,SAASC,SAAS1W,KAAOpJ,EAAKmf,eAAe3kB,MAmB7CrE,EAAAC,EAAAC,cAAA,KAAGiJ,UAAS,iBAAAzT,OAAmB6zB,IAC1BllB,EAAI9I,YADT,KACwB8I,EAAIulB,aAD5B,KAGA5pB,EAAAC,EAAAC,cAAA,KAAGC,MAAOA,GAAMyoB,QACXA,EADL,MACgBiB,YAAWJ,EAAS5f,EAAKxQ,MAAMH,WAE/C8G,EAAAC,EAAAC,cAAA,KAAGC,MAAOA,GAAM0oB,SAAUO,EAAUh1B,2NAhDzBqO,KAAKsS,QAAQlf,GAAGiQ,YAAYgkB,aAAatxB,IAC5D,sBADEU,SAINuJ,KAAK0H,SAAS,CAAEjR,gJAmDhB,OACI8G,EAAAC,EAAAC,cAAC0U,EAAA,SAAD,KACI5U,EAAAC,EAAAC,cAAC6nB,GAAD,CACIrV,MAAOnd,IAAKC,EAAE,YACdurB,OAAQte,KAAK5B,MAAM3M,KAAKiB,KAE5B6K,EAAAC,EAAAC,cAAC6pB,GAAD,MACCtnB,KAAK5B,MAAM3C,SAASnH,OAAS,GAC1BiJ,EAAAC,EAAAC,cAAA,OAAKiJ,UAAU,0BACXnJ,EAAAC,EAAAC,cAAA,MAAIC,MAAOA,GAAMxH,MAAO8J,KAAK4mB,mBAC7BrpB,EAAAC,EAAAC,cAAA,OAAKC,MAAOA,GAAMuoB,QACd1oB,EAAAC,EAAAC,cAAA,KAAG+S,KAAMxQ,KAAKumB,kBACTzzB,IAAKC,EAAE,+BAzEbwW,aAyF3B+c,GAAa7T,aAAe,CACxBrf,GAAIsf,IAAUC,OACdoK,QAASrK,IAAU6U,QAGvB,IAWeC,GALW5pB,YANF,SAAAhH,GACpB,MAAO,CACH6E,SAAUjJ,OAAOwF,OAAOwD,GAAiB5E,MAM7C,KAFsBgH,CAGxB0oB,yBCpHamB,GA5BU,SAAArpB,GAAK,OAC1Bb,EAAAC,EAAAC,cAAC0U,EAAA,SAAD,KACI5U,EAAAC,EAAAC,cAAC6nB,GAAD,CACIrV,MAAOnd,IAAKC,EAAE,qCAAsC,CAChDrB,KAAM0M,EAAM3M,KAAKC,OAErB4sB,OAAQlgB,EAAM3M,KAAKiB,KAEvB6K,EAAAC,EAAAC,cAAA,OACIC,MAAO,CACHwM,QAAS,OACTwL,eAAgB,SAChBwE,WAAY,SACZzY,OAAQ,QAGZlE,EAAAC,EAAAC,cAACiqB,GAAAlqB,EAAD,CACIE,MAAO,CAAE6D,MAAO,IAAKE,OAAQ,IAAKkmB,MAAO,UACzChiB,MAAM,gBCJP9R,GAhBS,SAAAqD,GAAA,IAAGwP,EAAHxP,EAAGwP,UAAH,OACpBnJ,EAAAC,EAAAC,cAAA,OACIiJ,UAAWA,EACXgD,MAAM,6BACNC,QAAQ,YACRC,KAAMhE,IAAOQ,SAEb7I,EAAAC,EAAAC,cAAA,QAAM7E,EAAE,gBAAgBgR,KAAK,SAC7BrM,EAAAC,EAAAC,cAAA,QAAM7E,EAAE,qICUDgvB,GAlBI,SAAA1wB,GAAA,IAAGwP,EAAHxP,EAAGwP,UAAH,OACfnJ,EAAAC,EAAAC,cAAA,OACIiJ,UAAWA,EACXgD,MAAM,6BACNnI,MAAM,KACNE,OAAO,KACPkI,QAAQ,YACRC,KAAMhE,IAAOsY,QAEb3gB,EAAAC,EAAAC,cAAA,QAAM7E,EAAE,kFACR2E,EAAAC,EAAAC,cAAA,QAAM7E,EAAE,gBAAgBgR,KAAK,gCCA/Bie,GAAe,SAAAp2B,GAAI,OAAIK,IAAYL,EAAKC,MAAMmB,aAQ9Ci1B,GAAW,SAAC1pB,EAAOkU,GAAY,IACzB7gB,EAA2C2M,EAA3C3M,KAAMqX,EAAqC1K,EAArC0K,SAAUif,EAA2B3pB,EAA3B2pB,uBAClBC,EARc,SAAAv2B,GAAI,OACxBgI,YAAQhI,EAAKK,IAAYL,EAAKC,MAAMkB,WAAWqF,OAC3C,SAACxG,EAAMw2B,EAAOC,GAAd,OACIA,EAAMlV,UAAU,SAAAmV,GAAE,OAAIA,EAAGz1B,KAAOjB,EAAKiB,OAAQu1B,IAKhCG,CAAgB32B,GA0BrC,OACI8L,EAAAC,EAAAC,cAAC0U,EAAA,SAAD,KACI5U,EAAAC,EAAAC,cAAC6nB,GAAD,CAAYrV,MAAO4X,GAAap2B,GAAO6sB,OAAQ7sB,EAAKiB,KACpD6K,EAAAC,EAAAC,cAAC6pB,GAAD,MACA/pB,EAAAC,EAAAC,cAAA,OAAKiJ,UAAU,0BACXnJ,EAAAC,EAAAC,cAAA,MAAIiJ,UAAWF,KAAQtQ,MAClB8xB,EAAarvB,IAAI,SAAA0vB,GAAW,OACzB9qB,EAAAC,EAAAC,cAAA,MAAIiJ,UAAWF,KAAQ/U,KAAMuS,IAAKqkB,EAAY31B,IAC1C6K,EAAAC,EAAAC,cAAC6qB,GAAD,CAAiB5hB,UAAWF,KAAQrQ,WAhC5C,SAAAkyB,GACZ,IAAME,EACFhrB,EAAAC,EAAAC,cAAA,UACIiJ,UAAWF,KAAQlQ,aACnBgQ,QAAS,kBAAMyhB,EAAuBt2B,EAAM42B,KAE5C9qB,EAAAC,EAAAC,cAAC+qB,GAAD,CAAY9hB,UAAWF,KAAQnQ,cAIvC,OACIkH,EAAAC,EAAAC,cAAC0U,EAAA,SAAD,KACI5U,EAAAC,EAAAC,cAAA,KACIiJ,UAAWF,KAAQpQ,KACnBsH,MAAO,CAAEiI,MAAOC,IAAO6iB,SACvBjY,KAAMrd,YAAW1B,EAAKC,KAAM22B,EAAa/V,EAAQlf,KAEhDi1B,EAAYxvB,MAEhBiQ,EAAWyf,EAAe,MAcd3H,CAAQyH,UAerCP,GAASrV,aAAe,CACpBrf,GAAIsf,IAAUC,QAGH/U,mBACX,KACA,CACImqB,uBC3E8B,SAAClV,EAAexQ,GAAhB,OAA4B,SAAApD,GAC9D,IAAM6T,EAAehhB,IAAY+gB,EAAcnhB,MAAMkB,SAE/C81B,EAAa7V,EAAcC,GAAc7a,OAC3C,SAAAxG,GAAI,OAAIA,EAAKiB,KAAO2P,EAAQ3P,KAG5Bg2B,EAAWp0B,QACXue,EAAcC,GAAgB4V,EAC9BzpB,EAASsD,GAAsBsQ,KAE/B5T,EAASuD,GAAsBqQ,OD6DxBjV,CAKbkqB,cElEIpqB,GAAQ,CACV0f,QAAS,CACLrO,QAAS,OACTuT,WAAY,WACZE,WAAY,QAEhBmG,UAAW,CACP5iB,SAAU,OACVwc,YAAa,SACbhhB,MAAO,MACPyI,OAAQ,SACRE,QAAS,QACTsY,WAAY,QAEhB3E,UAAW,CACPqI,aAAc,OACd7b,UAAW,SAoEJzM,eAnBS,SAAChH,EAAOgZ,GAC5B,IAIMne,GAJQme,EAAS9G,SACjB3O,GAAuBvD,GACvBkB,EAAmBlB,IAENmN,KAAK,SAAAtS,GAAI,OAAIA,EAAKiB,KAAOkd,EAASne,KAAKiB,KAE1D,MAAO,CACHf,KAAMF,EAAOA,EAAKE,KAAO,KAa7B,CACI4Q,0BAHO3E,CAhEE,SAAAQ,GAAS,IACd3M,EAAgD2M,EAAhD3M,KAAMqX,EAA0C1K,EAA1C0K,SAAUnX,EAAgCyM,EAAhCzM,KAAM4Q,EAA0BnE,EAA1BmE,sBAExBqmB,EAAe,SAAA5gB,GACjB,IAAM6gB,EAAWr2B,OAAA8E,EAAA,EAAA9E,CAAA,GACVf,EADU,CAEbE,KAAMqW,EAAMsE,OAAOjV,QAGvBkL,EAAsBsmB,IAiC1B,OAAOtrB,EAAAC,EAAAC,cAAC0U,EAAA,SAAD,KAAWrJ,EAnBVvL,EAAAC,EAAAC,cAAC0U,EAAA,SAAD,KACI5U,EAAAC,EAAAC,cAAC6nB,GAAD,CAAYrV,MAAOnd,IAAKC,EAAE,aAAcurB,OAAQ7sB,EAAKiB,KACrD6K,EAAAC,EAAAC,cAAC6pB,GAAD,MACA/pB,EAAAC,EAAAC,cAAA,OAAKiJ,UAAU,0BACXnJ,EAAAC,EAAAC,cAACqrB,GAAA,OAAD,CAAgBC,OAAQH,GACpBrrB,EAAAC,EAAAC,cAAC2P,GAAA5P,EAAD,CACInG,MAAO1F,EACPq3B,WAAS,EACTC,WAAS,EACTvrB,MAAOA,GAAMirB,UACbtb,YAAava,IAAKC,EAAE,iBACpBua,SAAUsb,OAtBjB,WACb,IAAMM,EAAe12B,OAAO8O,OAAO,GAAI5D,GAAMirB,UAAWjrB,GAAM0f,SAC9D,OACI7f,EAAAC,EAAAC,cAAA,OAAKiJ,UAAU,yBAAyBhJ,MAAOA,GAAMmgB,WACjDtgB,EAAAC,EAAAC,cAACqrB,GAAA,OAAD,CAAgBprB,MAAOwrB,GAAev3B,IA0BRw3B,MCrExCC,GAAe,SAACC,EAAY53B,EAAM2J,GACpC,IAAIkuB,EAAS,GAAAr2B,OAAMo2B,EAAW/1B,UAAjB,qBAAAL,OAA8CxB,EAAKiB,IAEhE,GACI0I,GACAA,EAAW,IACXA,EAAW,GAAkB9G,OAC/B,CACE,IAAMi1B,EAAQnuB,EAAW,GAAkBzC,IACvC,SAAA6wB,GAAM,OAAIA,EAAOpwB,MAAM,KAAK6a,OAAO,GAAG,KAG1CqV,GAAS,gBAAAr2B,OAAoBs2B,EAAM30B,KAAK,MAG5C,OAAO00B,GAGLG,GAAU,SAAAvyB,EAAwBob,GAAY,IAC5C+W,EADW53B,EAAiCyF,EAAjCzF,KAAM2J,EAA2BlE,EAA3BkE,YAGfsuB,EAASj4B,EAAKi4B,OAQpB,OANIA,IACAL,EAAa/W,EAAQlf,GAAGu2B,OAAOC,cAAc7lB,KACzC,SAAA8lB,GAAG,OAAIA,EAAI7lB,MAAQ0lB,KAIpBL,GAAcA,EAAWxwB,MAAQwwB,EAAW/1B,UAC/CiK,EAAAC,EAAAC,cAAC0U,EAAA,SAAD,KACI5U,EAAAC,EAAAC,cAAC6nB,GAAD,CAAYrV,MAAOoZ,EAAWxwB,KAAMylB,OAAQ7sB,EAAKiB,KACjD6K,EAAAC,EAAAC,cAAC6pB,GAAD,MACA/pB,EAAAC,EAAAC,cAAA,UACIwS,MAAOoZ,EAAWxwB,KAClBixB,IAAKV,GAAaC,EAAY53B,EAAM2J,GACpCsL,UAAU,yBACVhJ,MAAO,CAAEujB,OAAQ,WAIzB1jB,EAAAC,EAAAC,cAAC0U,EAAA,SAAD,KACI5U,EAAAC,EAAAC,cAAC6nB,GAAD,CAAYrV,MAAK,GAAAhd,OAAKy2B,EAAL,oBACjBnsB,EAAAC,EAAAC,cAAC6pB,GAAD,MACA/pB,EAAAC,EAAAC,cAAA,OACIiJ,UAAU,yBACVhJ,MAAO,CACHwM,QAAS,OACTwL,eAAgB,SAChBwE,WAAY,SACZzY,OAAQ,QAGZlE,EAAAC,EAAAC,cAACiqB,GAAAlqB,EAAD,CACImI,MAAM,WACNQ,UAAQ,EACRzI,MAAO,CAAE6D,MAAO,IAAKE,OAAQ,IAAKkmB,MAAO,eAY7D8B,GAAQhX,aAAe,CACnBrf,GAAIsf,IAAUC,QAGlB,IAIe/U,eAJS,SAAAhH,GAAK,MAAK,CAC9BwE,YAAaD,GAAoBvE,KAGtBgH,CAAyB6rB,IC/ElC/rB,GAAQ,CACVsM,OAAQ,YACRjE,SAAU,OACVyc,WAAY,OACZ7c,MAAOC,IAAOqE,SAoBH8f,GAjBI,SAAA3rB,GACf,OACIb,EAAAC,EAAAC,cAAC0U,EAAA,SAAD,KACI5U,EAAAC,EAAAC,cAAC6nB,GAAD,CAAYrV,MAAOnd,IAAKC,EAAE,UAAWurB,OAAQlgB,EAAM3M,KAAKiB,KACxD6K,EAAAC,EAAAC,cAAA,KAAGC,MAAOA,IACL5K,IAAKC,EACF,iFCiCP6vB,GAAO,SAAAxkB,GAChB,IAAM4rB,EA3BU,SAAAt4B,GAChB,OAAQA,GACJ,KAAKjB,IACL,KAAKC,IACL,KAAKC,IACL,KAAKC,IACL,KAAKE,IACL,KAAKD,IACD,OAAOo5B,GACX,KAAK94B,IACD,OAAOm1B,GACX,KAAKt1B,IACL,KAAKC,IACL,KAAKC,IACD,OAAO42B,GACX,KAAK12B,IACD,OAAO84B,GACX,KAAK74B,IACD,OAAO04B,GACX,KAAKh5B,IACD,OAAO04B,GACX,QACI,OAAOhC,IAKE0C,CAAY/rB,EAAM3M,KAAKC,MAExC,OACI6L,EAAAC,EAAAC,cAACusB,EAAD,CACIv4B,KAAM2M,EAAM3M,KACZqX,SAAU1K,EAAM0K,SAChB1N,YACIgD,EAAM0K,SAAW5N,GAA6BkD,EAAMhD,YAExDypB,qBAAsBzmB,EAAMymB,wBCzCzBuF,GAlBiB,SAAAlzB,GAAA,IAAGvF,EAAHuF,EAAGvF,KAAH,OAC5B4L,EAAAC,EAAAC,cAAA,OACIC,MAAO,CACHqR,QAAS,YACTtI,UAAW,SACXV,SAAU,OACVpI,WAAY,IACZgI,MAAOC,IAAOqE,UAGjBtY,6DCNH04B,8MAaFzzB,MAAQ,CACJ0zB,YAAY,KAEhBC,aAAe,OACfC,kBAAoB,sFAGhB,IAAMC,EAAWzqB,KAAK5B,MAAMssB,aAAe9iB,OAAO+iB,YAElD,GAAK3qB,KAAKuqB,aAAV,CAIA,IAAMK,EAAO5qB,KAAKuqB,aAAaM,wBAE3BD,EAAKE,QAAUL,GACfG,EAAKhiB,IAAMhB,OAAO+iB,YAAcF,IAEhCzqB,KAAK0H,SAAS,CACV4iB,YAAY,IAGhBtqB,KAAK+qB,4DAIK,IAAA/Y,EAAAhS,KACdA,KAAKwqB,kBAAoB3f,KACrB,kBAAMmH,EAAKgZ,mBACXhrB,KAAK5B,MAAM6sB,YAGfrjB,OAAOC,iBAAiB,SAAU7H,KAAKwqB,2DAGvC5iB,OAAOW,oBAAoB,SAAUvI,KAAKwqB,+DAI1CxqB,KAAKkrB,kBACLlrB,KAAKgrB,iEAILhrB,KAAK+qB,iDAGA,IAAAI,EAAAnrB,KAAA6M,EAC4C7M,KAAK5B,MAA9CgL,EADHyD,EACGzD,SAAU1C,EADbmG,EACanG,UAAWhJ,EADxBmP,EACwBnP,MAAUU,EADlC5L,OAAA44B,GAAA,EAAA54B,CAAAqa,EAAA,kCAEGyd,EAAetqB,KAAKpJ,MAApB0zB,WAEFe,EAAaC,KAAKltB,EAAO,CAC3B,cACA,eACA,YACA,eAGJ,OACIb,EAAAC,EAAAC,cAAA,MAAAjL,OAAA8O,OAAA,CACImd,IAAK,SAAAA,GAAG,OAAK0M,EAAKZ,aAAe9L,GACjC/gB,MAAOA,EACPgJ,UAAWA,GACP2kB,GAEHf,GAAclhB,UA9EWG,aAApC8gB,GAQK7gB,aAAe,CAClByhB,WAZkB,IAalBP,aAZoB,KAsFbL,UC/CTkB,GAAkB,GAEXtH,GAA8B,EAE9BuH,GAAb,SAAArf,GAKI,SAAAqf,EAAYptB,GAAO,IAAAgJ,EAAA,OAAA5U,OAAA6U,EAAA,EAAA7U,CAAAwN,KAAAwrB,IACfpkB,EAAA5U,OAAA8U,EAAA,EAAA9U,CAAAwN,KAAAxN,OAAA+U,EAAA,EAAA/U,CAAAg5B,GAAAhkB,KAAAxH,KAAM5B,KALVxH,MAAQ,CACJ60B,cAAe,IAGArkB,EAMnByd,qBAAuB,SAAA6G,GACnB,IAAMC,EAC6C,mBAAxCvkB,EAAKxQ,MAAM60B,cAAcC,IAC1BtkB,EAAKxQ,MAAM60B,cAAcC,GAG7BD,EAAaj5B,OAAA8E,EAAA,EAAA9E,CAAA,GAAQ4U,EAAKxQ,MAAM60B,eACtCA,EAAcC,IAAcC,EAC5BvkB,EAAKM,SAAS,CAAE+jB,mBAdDrkB,EAiBnBwkB,aAAe,SAAAF,GACXtkB,EAAKhJ,MAAMoE,sBAAsBkpB,IAlBlBtkB,EA2BnBykB,eAAiB,SAAAC,GACT1kB,EAAKhJ,MAAMud,MACXvU,EAAKhJ,MAAM2tB,wBAAwBD,IA7BxB1kB,EAiCnB4kB,aAAe,SAACC,EAAQC,EAASta,GAC7Bua,aAAava,EAAQiQ,GAErB,IAAMhP,EAAgBzL,EAAKhJ,MAAM1E,eAAeqK,KAC5C,SAAAtS,GAAI,OAAIA,EAAKiB,KAAOkf,EAAQiQ,IAI5BhP,GAAiBhhB,YAAoBghB,IACrCuZ,aAAavZ,IA1CFzL,EA8CnBilB,oBAAsB,SAAA35B,GAAE,OAAI,kBAAM0U,EAAKwkB,aAAal5B,KA9CjC0U,EAgDnBklB,QAAU,SAAAzZ,GACN,IAAM0Z,EAAenlB,EAAKxQ,MAAM60B,cAAc5Y,EAAcngB,IACtD85B,EAAQ,CAAE9qB,EAAGmR,EAAcnR,GAMjC,OAJI6qB,IAAiC,IAAjBA,IAChBC,EAAM9qB,EAAImR,EAAcnR,EAAI6pB,IAGzB/4B,OAAO8O,OAAO,GAAIuR,EAAe2Z,EAAO,CAC3C3K,EAAGhP,EAAcngB,GACjB+5B,KAAMC,KACNC,aAAc7lB,KAAK8lB,YA3DRxlB,EA+DnBylB,SAAW,SAAAnzB,GAAc,OACrBA,EAAef,IAAI,SAAAlH,GAAI,OAAI2V,EAAK0lB,gBAAgBr7B,MAhEjC2V,EAkEnB2lB,iBAAmB,SAAAt7B,GACf,IAAMu7B,EAAiB,CACnBv7B,EAAKC,KACL0V,EAAKhJ,MAAMud,KAAO,OAAS,QAC7B/mB,KAAK,KAEP,OACI2I,EAAAC,EAAAC,cAACwvB,GAAD,CACIjpB,IAAKvS,EAAKowB,EACVnb,UAAWsmB,GAEXzvB,EAAAC,EAAAC,cAACyvB,GAAD,CACIz7B,KAAMA,EACNqX,SAAU1B,EAAKhJ,MAAMud,KACrBkJ,qBAAsBzd,EAAKyd,yBAhFxBzd,EAsFnB+lB,kBAAoB,SAAAn2B,GAAK,OAAIA,EAAM2B,IAAI,SAAAlH,GAAI,OAAI2V,EAAK2lB,iBAAiBt7B,MAnFjE2V,EAAK0lB,gBAAkBM,KAAQhmB,EAAKklB,SAHrBllB,EALvB,OAAA5U,OAAAka,EAAA,EAAAla,CAAAg5B,EAAArf,GAAA3Z,OAAAma,EAAA,EAAAna,CAAAg5B,EAAA,EAAAxnB,IAAA,4BAAA3M,MAAA,SA0B8BuV,GAClBA,EAAU+O,MACV3b,KAAK0H,SAAS,CAAE+jB,cAAe,OA5B3C,CAAAznB,IAAA,SAAA3M,MAAA,WA6Fa,IAAAwV,EACuC7M,KAAK5B,MAAzCud,EADH9O,EACG8O,KAAMjhB,EADTmS,EACSnS,UAAWhB,EADpBmT,EACoBnT,eAEzB,IAAKgB,IAAchB,EAAepF,OAC9B,OACIiJ,EAAAC,EAAAC,cAAC4vB,GAAD,CACI17B,KAAMmB,IAAKC,EAAE,0CAKzB,IAAMiE,EAAQ2kB,EACR3b,KAAK6sB,SAASnzB,GACdA,EAAef,IAAIqH,KAAKssB,SAE9B,OACI/uB,EAAAC,EAAAC,cAAA,OAAKiJ,UAAU,gBACVhM,EACG6C,EAAAC,EAAAC,cAACqN,EAAA,EAAD,KACIvN,EAAAC,EAAAC,cAACqN,EAAA,EAAD,OAEJ,KACJvN,EAAAC,EAAAC,cAAC6vB,GAAA9vB,EAAD,CACIquB,eAAgB7rB,KAAK6rB,eACrBG,aAAchsB,KAAKgsB,aACnBtlB,UAAU,SACVulB,OAAQj1B,EACRgT,OAAQujB,KACRC,KAAMC,eACNC,UAAWC,KACXpsB,MAAOqG,OAAOgmB,WACdC,YAAaC,KACbC,YAAapS,EACbqS,YAAarS,EACbsS,gBAAgB,kBAEfjuB,KAAKmtB,kBAAkBn2B,SAjI5Cw0B,EAAA,CAA8BjiB,aAgJ9BiiB,GAAShiB,aAAe,CACpB9P,eAAgB,IAKpB,IAeM8V,GAAqB,CACvBuc,wB7DzJmC,SAAA10B,GAAK,MAAK,CAC7C3F,KnBlDqC,4BmBmDrC2F,U6DwJAmL,0BAeW5E,eAhCS,SAAChH,EAAOgZ,GAC5B,IAAM6F,EAAoB7F,EAAS+L,KAC7B5hB,GAAsBnD,GACtBc,EAAkBd,EAAOkE,GAAelE,IAExC8C,EAAiBkW,EAAS+L,KAC1BxhB,GAAuBvD,GACvBkB,EAAmBlB,GAEzB,MAAO,CACH8D,UAAWK,GAAsBnE,KAAW6e,EAC5C/b,mBAuBJ8V,GAde,SAACE,EAAYC,EAAeC,GAC3C,IAAMse,EAAaz0B,YAAQiW,EAAWhW,gBAAgBzB,OAAOk2B,MAE7D,OAAO37B,OAAA8E,EAAA,EAAA9E,CAAA,GACAmd,EADP,CAEIgM,KAAM/L,EAAS+L,KACfjhB,UAAWgV,EAAWhV,UACtBhB,eAAgBw0B,EAChB/B,qBAIOvuB,CAIb4tB,cCpOI/lB,GAAS,CACX2oB,eAAgB,CACZpkB,OAAQ,MACR+E,QAAS,SACTmH,aAAc,MACdvQ,MAAOC,IAAOoD,MACdH,gBAAiB,UACjBpH,OAAQ,GACRyI,QAAS,OACTgQ,WAAY,UAEhBmU,MAAO,CACHtoB,SAAU,OACVD,OAAQ,UACRwc,WAAY,UAEhBgM,YAAa,CACTvoB,SAAU,OACVG,eAAgB,YAChBiU,WAAY,OACZrU,OAAQ,YAIVyoB,8MACFjoB,QAAU,SAAA5T,GAAE,OAAI,kBAAM0U,EAAKhJ,MAAMkI,QAAQ5T,OACzC87B,SAAW,SAAA97B,GAAE,OAAI,kBAAM0U,EAAKhJ,MAAMowB,SAAS97B,6EAElC,IACG+F,EAASuH,KAAK5B,MAAd3F,KAER,OACI8E,EAAAC,EAAAC,cAAA,OAAKC,MAAO+H,GAAO2oB,gBACf7wB,EAAAC,EAAAC,cAAA,QAAMC,MAAO+H,GAAO4oB,MAAO/nB,QAAStG,KAAKsG,QAAQ7N,EAAK/F,KAAtD,GAAAO,OACQwF,EAAKI,KADb,MAAA5F,OAEQwF,EAAKT,OAAO1D,OAAS,EACfxB,IAAKC,EAAE,qBAAsB,CACzB07B,MAAOh2B,EAAKT,OAAO1D,SAEvBmE,EAAKT,OAAO,GAAGa,OAG7B0E,EAAAC,EAAAC,cAAA,QACIC,MAAO+H,GAAO6oB,YACdhoB,QAAStG,KAAKwuB,SAAS/1B,EAAK/F,KAE3BI,IAAKC,EAAE,mBAtBFwW,aAmC1BglB,GAAY/kB,aAAe,CACvBlD,QAASkH,SAASC,UAClB+gB,SAAUhhB,SAASC,WAGR8gB,UC5CFG,GAAb,SAAAviB,GAAA,SAAAuiB,IAAA,IAAA9gB,EAAAxG,EAAA5U,OAAA6U,EAAA,EAAA7U,CAAAwN,KAAA0uB,GAAA,QAAA7gB,EAAAxZ,UAAAC,OAAAwZ,EAAA,IAAAC,MAAAF,GAAAG,EAAA,EAAAA,EAAAH,EAAAG,IAAAF,EAAAE,GAAA3Z,UAAA2Z,GAAA,OAAA5G,EAAA5U,OAAA8U,EAAA,EAAA9U,CAAAwN,MAAA4N,EAAApb,OAAA+U,EAAA,EAAA/U,CAAAk8B,IAAAlnB,KAAAzH,MAAA6N,EAAA,CAAA5N,MAAA/M,OAAA6a,MACI6gB,cAAgB,SAAAj8B,GACZ0U,EAAKhJ,MAAM6a,iBAAiBvmB,GAC5B0U,EAAKhJ,MAAMqa,qBAAqB/lB,IAHxC0U,EAMIwnB,aAAe,SAAAl8B,GACX0U,EAAKhJ,MAAM8Z,wBAAwB,CAC/BxlB,KACAmG,KAAMuO,EAAKhJ,MAAM6C,QAAQ8C,KAAK,SAAAtS,GAAI,OAAIA,EAAKiB,KAAOA,IAAImG,QATlEuO,EAAA,OAAA5U,OAAAka,EAAA,EAAAla,CAAAk8B,EAAAviB,GAAA3Z,OAAAma,EAAA,EAAAna,CAAAk8B,EAAA,EAAA1qB,IAAA,SAAA3M,MAAA,WAaa,IAAA2a,EAAAhS,KAAA6M,EACkC7M,KAAK5B,MAApC6C,EADH4L,EACG5L,QAAS8B,EADZ8J,EACY9J,SAAUyD,EADtBqG,EACsBrG,QACrBoC,EAAM3B,GAAalE,GAAY,GAErC,OAAO9B,EAAQ3M,OACXiJ,EAAAC,EAAAC,cAAA,OAAKiJ,UAAWF,EAAQqoB,IAAKnxB,MAAO,CAAEkL,QACjC3H,EAAQtI,IAAI,SAAAV,GAAM,OACfsF,EAAAC,EAAAC,cAACqxB,GAAD,CACI9qB,IAAK/L,EAAOvF,GACZ+F,KAAMR,EACNqO,QAAS0L,EAAK4c,aACdJ,SAAUxc,EAAK2c,mBAI3B,SA5BZD,EAAA,CAA+BnlB,aAyC/BmlB,GAAUllB,aAAe,CACrBvI,QAAS,GACT8tB,iBAAkBvhB,SAASC,UAC3BgL,qBAAsBjL,SAASC,WAKnC,IAAMuhB,GAAkBC,aACpB,CAAC9zB,GAAqB0J,IACtB,SAAC5D,EAAS6D,GAAV,OACItS,OAAO8I,KAAK2F,GAASiuB,OAAO,SAACC,EAAKz8B,GAU9B,OATAy8B,EAAI1gB,KAAK,CACL/b,GAAIA,EACJmG,KAAMiM,EAAWf,KAAK,SAAAwS,GAAS,OAAIA,EAAU7jB,KAAOA,IAAImG,KACxDb,OAAQiJ,EAAQvO,GAAIiG,IAAI,SAAAtB,GAAK,MAAK,CAC9B3E,GAAI2E,EAAM3E,GACVmG,KAAMxB,EAAMyB,aAAezB,EAAMwB,UAIlCs2B,GACR,MAQIvxB,eALS,SAAAhH,GAAK,MAAK,CAC9BqK,QAAS+tB,GAAgBp4B,GACzBmM,SAAUC,GAAuBpM,KAKjC,CACIshB,wBAAyBP,GACzBsB,iBAAkB1d,GAClBkd,qBAAsBxd,IALf2C,CAObyI,qBAzFa,CACXwoB,IAAK,CACD7hB,SAAU,SACV1O,OAAQ,EACRyQ,QAAS,QACT7E,QAAS,OACTwL,eAAgB,SAChB0Z,SAAU,SAkFhB/oB,CAAmBqoB,KCvFNW,GAZiB,SAAAjxB,GAAK,OACjCb,EAAAC,EAAAC,cAAC0U,EAAA,SAAD,KACI5U,EAAAC,EAAAC,cAAC6xB,GAAD,CAAU3T,KAAMvd,EAAM0K,WACtBvL,EAAAC,EAAAC,cAAC8xB,GAAD,MACAhyB,EAAAC,EAAAC,cAAC+xB,GAAD,CAAU7T,KAAMvd,EAAM0K,aCMjB2mB,GAAU,SAAAv4B,GAAgD,IAA7Cw4B,EAA6Cx4B,EAA7Cw4B,oBAChB9tB,EAD6D1K,EAAxBy4B,kBAErC78B,IAAKC,EACD,oEAEJD,IAAKC,EAAE,iCAEb,OAAO28B,EACHnyB,EAAAC,EAAAC,cAACmyB,GAAD,CAAkB9mB,UAAU,IAE5BvL,EAAAC,EAAAC,cAAC4vB,GAAD,CAAkB17B,KAAMiQ,KA6CjBhE,eAVS,SAAAhH,GACpB,IAAMa,EAAaI,EAAkBjB,GAErC,MAAO,CACHlE,GAAIoI,GAAelE,GACnB+4B,kBAAmBz1B,KAAQzC,GAC3Bo4B,kBAAmBj4B,EAAsBhB,KAIlCgH,CApCc,SAAAnJ,GAAiD,IAA9C/B,EAA8C+B,EAA9C/B,GAAIi9B,EAA0Cl7B,EAA1Ck7B,kBAC1BD,EAAsBh9B,IAAOi9B,EAC7BG,GAFoEr7B,EAAvBo7B,kBAEC,OAAPn9B,EAE7C,OACI6K,EAAAC,EAAAC,cAAC0U,EAAA,SAAD,KACI5U,EAAAC,EAAAC,cAACsyB,GAAD,MACAxyB,EAAAC,EAAAC,cAACuyB,GAAD,MACAzyB,EAAAC,EAAAC,cAAA,OAAKiJ,UAAU,qBACVopB,EAAkB,KACfvyB,EAAAC,EAAAC,cAACwyB,GAAD,CACIP,oBAAqBA,EACrBC,kBAAmBA,qGCG5BO,GAxCoB,SAAAh5B,GAK7B,IAJFsJ,EAIEtJ,EAJFsJ,cACA2vB,EAGEj5B,EAHFi5B,kBACAC,EAEEl5B,EAFFk5B,kBACAl0B,EACEhF,EADFgF,KAEM+d,EAAU,CACZ1c,EAAAC,EAAAC,cAACqN,EAAA,EAAD,CAAQ9G,IAAI,SAASsc,WAAS,EAACha,QAAS8pB,GACnCt9B,IAAKC,EAAE,WAEZwK,EAAAC,EAAAC,cAACqN,EAAA,EAAD,CAAQ9G,IAAI,SAASqsB,aAAW,EAAC/pB,QAAS6pB,GACrCr9B,IAAKC,EAAE,YAIhB,OACIwK,EAAAC,EAAAC,cAACyZ,GAAA1Z,EAAD,CAAQtB,KAAMA,EAAMuC,QAAS2xB,GACzB7yB,EAAAC,EAAAC,cAAC6yB,GAAA9yB,EAAD,CAAaE,MAAO,CAAEqI,SAAU,UAAWpI,WAAY,QAClD7K,IAAKC,EAAE,qBAEZwK,EAAAC,EAAAC,cAAC8yB,GAAA/yB,EAAD,KACID,EAAAC,EAAAC,cAAC+yB,GAAAhzB,EAAD,CAAmBE,MAAO,CAAEqI,SAAU,aACjCjT,IAAKC,EACF,mKACA,CAAEyN,oBAIdjD,EAAAC,EAAAC,cAAC6Z,GAAA9Z,EAAD,KAAgByc,KCPtBwW,GAAiB,CACnBhvB,O1D9BkC,G0D+BlCuE,WAAY,OACZmU,WAAY,OACZhL,YAAa,QAGJuhB,GAAb,SAAAvkB,GAAA,SAAAukB,IAAA,IAAA9iB,EAAAxG,EAAA5U,OAAA6U,EAAA,EAAA7U,CAAAwN,KAAA0wB,GAAA,QAAA7iB,EAAAxZ,UAAAC,OAAAwZ,EAAA,IAAAC,MAAAF,GAAAG,EAAA,EAAAA,EAAAH,EAAAG,IAAAF,EAAAE,GAAA3Z,UAAA2Z,GAAA,OAAA5G,EAAA5U,OAAA8U,EAAA,EAAA9U,CAAAwN,MAAA4N,EAAApb,OAAA+U,EAAA,EAAA/U,CAAAk+B,IAAAlpB,KAAAzH,MAAA6N,EAAA,CAAA5N,MAAA/M,OAAA6a,MACIlX,MAAQ,CACJ+5B,yBAAyB,EACzBC,oBAAgBr8B,EAChBs8B,yBAAyB,EACzBC,iBAAav8B,GALrB6S,EAQI2pB,gBAAkB,WACd3pB,EAAKM,SAAS,CAAEmpB,yBAAyB,KATjDzpB,EAYI4pB,OAAS,WACL5pB,EAAKhJ,MAAM4yB,SAASp7B,KAAK,SAAAq7B,GACrB7pB,EAAKM,SAAS,CAAEopB,YAAW,IAAA79B,OAAMg+B,QAd7C7pB,EAkBI8pB,UAAY,WACR9pB,EAAKhJ,MAAM+yB,mBACX,IAAML,EAAc1pB,EAAKhJ,MAAMjH,YAAX,IAAAlE,OACVmU,EAAKhJ,MAAMjH,aACf,IACNiQ,EAAKM,SAAS,CAAEopB,iBAvBxB1pB,EA0BIgpB,kBAAoB,WAChBhpB,EAAKM,SAAS,CAAEmpB,yBAAyB,KA3BjDzpB,EA8BI+oB,kBAAoB,WAChB/oB,EAAKM,SAAS,CAAEmpB,yBAAyB,IACzCzpB,EAAKhJ,MAAMgzB,SAAShqB,EAAKhJ,MAAMjH,aAAavB,KAAK,WAC7CwR,EAAKM,SAAS,CAAEopB,YAAa,SAjCzC1pB,EAqCIiqB,oBArCJ,eAAAn6B,EAAA1E,OAAAqM,EAAA,EAAArM,CAAAsM,EAAAtB,EAAAuB,KAqC0B,SAAAC,EAAMsyB,GAAN,IAAAC,EAAAC,EAAA,OAAA1yB,EAAAtB,EAAA2B,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,WACdgyB,IAAgBA,EAAah9B,OADf,CAAA8K,EAAAE,KAAA,eAAAF,EAAAE,KAAA,EAES8H,EAAKkL,QAAQlf,GAAGiQ,YAAYgkB,aAAatxB,IAC5D,eAHU,OAERw7B,EAFQnyB,EAAAG,MAMRiyB,EAAcF,EAAavtB,KAC7B,SAAAhR,GAAC,OAAIA,EAAE0+B,SAAWF,GAA2B,SAAfx+B,EAAE2+B,aAGjBF,EAAYn6B,OAC3B+P,EAAKhJ,MAAMuzB,YACPvqB,EAAKhJ,MAAMjH,YACXq6B,EAAYn6B,OAbN,wBAAA+H,EAAAS,SAAAb,MArC1B,gBAAAc,GAAA,OAAA5I,EAAA6I,MAAAC,KAAA3L,YAAA,GAAA+S,EAwDIwqB,oBAAsB,WACdxqB,EAAKhJ,MAAMjH,cAAgBiQ,EAAKxQ,MAAMg6B,gBACtC9zB,GAAkBsK,EAAKhJ,MAAMjH,aAAavB,KAAK,SAAAg7B,GAAc,OACzDxpB,EAAKM,SAAS,CAAEkpB,sBA3DhCxpB,EAwEIyqB,wBAA0B,WACtBzqB,EAAKM,SAAS,CACVipB,yBAA0BvpB,EAAKxQ,MAAM+5B,2BA1EjDvpB,EA8EI0qB,oBAAsB,kBAClB1qB,EAAKhJ,MAAM2zB,cAAgB3qB,EAAKhJ,MAAMjH,YAClCoG,EAAAC,EAAAC,cAACu0B,GAAD,CACIxxB,cAAe4G,EAAKhJ,MAAMoC,cAC1B2vB,kBAAmB/oB,EAAK+oB,kBACxBC,kBAAmBhpB,EAAKgpB,kBACxBl0B,KAAMkL,EAAKxQ,MAAMi6B,0BAErB,MAtFZzpB,EAwFI6qB,kBAAoB,kBAChB7qB,EAAKxQ,MAAMg6B,gBAAkBxpB,EAAKxQ,MAAMg6B,eAAel+B,GACnD6K,EAAAC,EAAAC,cAACy0B,GAAA10B,EAAD,CACIkJ,UAAU,qBACVtT,GAAIgU,EAAKkL,QAAQlf,GACjB8I,KAAMkL,EAAKxQ,MAAM+5B,wBACjBpV,eAAgBnU,EAAKyqB,wBACrBM,kBAAmB/qB,EAAKxQ,MAAMg6B,eAC9BwB,kBAAmB,CAAC,OAAQ,eAE5BC,mBAAoBjrB,EAAKiqB,oBACzBiB,mBAAoB,SAAAC,GAAG,OACnB12B,QAAQC,IAAI,2BAA4By2B,MAGhD,MAvGZnrB,EAAA,OAAA5U,OAAAka,EAAA,EAAAla,CAAAk+B,EAAAvkB,GAAA3Z,OAAAma,EAAA,EAAAna,CAAAk+B,EAAA,EAAA1sB,IAAA,oBAAA3M,MAAA,WAiEQ2I,KAAK4xB,wBAjEb,CAAA5tB,IAAA,qBAAA3M,MAAA,WAqEQ2I,KAAK4xB,wBArEb,CAAA5tB,IAAA,SAAA3M,MAAA,WA0GQ,GAAI2I,KAAKpJ,MAAMk6B,YACX,OAAOvzB,EAAAC,EAAAC,cAAC+0B,GAAA,EAAD,CAAU5nB,GAAI5K,KAAKpJ,MAAMk6B,cAF/B,IAAAjkB,EAK+C7M,KAAK5B,MAAjDjH,EALH0V,EAKG1V,YAAa46B,EALhBllB,EAKgBklB,aAAcU,EAL9B5lB,EAK8B4lB,aAC7B5jB,EAAmB3H,GAAoBP,IAEvC+rB,EAAiBD,EACjB3/B,IAAKC,EAAE,uBACPD,IAAKC,EAAE,oBAEb,OACIwK,EAAAC,EAAAC,cAAC0U,EAAA,SAAD,KACI5U,EAAAC,EAAAC,cAACwR,GAAD,CAAYxN,OAAQoN,EAAkB/F,UAAU,GAC5CvL,EAAAC,EAAAC,cAAA,OAAKC,MAAO+yB,IACPgC,EACGl1B,EAAAC,EAAAC,cAAA,OAAKiJ,UAAWF,KAAQ0I,cACpB3R,EAAAC,EAAAC,cAAA,QAAMC,MAAO,CAAEyR,YAAa,SACxB5R,EAAAC,EAAAC,cAACqN,EAAA,EAAD,CAAQ6nB,SAAO,EAACrsB,QAAStG,KAAKgxB,QACzBl+B,IAAKC,EAAE,kBAIfoE,EACGoG,EAAAC,EAAAC,cAAA,QAAMC,MAAO,CAAEyR,YAAa,SACxB5R,EAAAC,EAAAC,cAACqN,EAAA,EAAD,CACIxE,QACItG,KAAK6xB,yBAGR/+B,IAAKC,EAAE,eAGhB,KACHoE,GAAe46B,EACZx0B,EAAAC,EAAAC,cAACqN,EAAA,EAAD,CAAQxE,QAAStG,KAAK+wB,iBACjBj+B,IAAKC,EAAE,WAEZ,MAER,KAEJwK,EAAAC,EAAAC,cAAA,OAAKiJ,UAAWF,KAAQosB,eACpBr1B,EAAAC,EAAAC,cAACqN,EAAA,EAAD,CAAQwV,WAAS,EAACha,QAAStG,KAAKkxB,WAC3BwB,MAKhB1yB,KAAKiyB,oBACLjyB,KAAK8xB,2BA5JtBpB,EAAA,CAA6BnnB,aA6K7BmnB,GAAQje,aAAe,CACnBrf,GAAIsf,IAAUC,QAGlB,IA4Be/U,eA5BS,SAAAhH,GACpB,IAEIm7B,EACAU,EAHEv6B,EAAY6B,GAAsBnD,GAYxC,OtFrG8B,SAAAA,GAC9B,OACKsD,KAAQtD,EAAMoD,gBAAsD,KAApCD,GAAsBnD,GAAOlE,GsF2F9DmgC,CAAmBj8B,IACnBm7B,GAAe,EACfU,GAAe,IAEfA,IAAev6B,EAAUqB,QAASrB,EAAUqB,OAAO4hB,OACnD4W,IAAe75B,EAAUqB,QAASrB,EAAUqB,OAAO4D,QAGhD,CACHhG,YAAae,EAAUxF,GACvB8N,cAAetI,EAAUW,KACzBk5B,eACAU,iBAImB,SAAAxzB,GAAQ,MAAK,CACpC+xB,OAAQ,kBAAM/xB,EnE9IY,eAAA/H,EAAA1E,OAAAqM,EAAA,EAAArM,CAAAsM,EAAAtB,EAAAuB,KAAM,SAAAC,EAAOC,EAAUkB,GAAjB,IAAAjI,EAAAwB,EAAAo5B,EAAA37B,EAAA,OAAA2H,EAAAtB,EAAA2B,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,UAC1BpH,EAAY6B,GAAsBoG,KAElCzG,EAAiBxB,EAAUwB,eAAef,IAAI,SAAAlH,GAChD,IAAME,EAAOC,YAAWH,GAClBA,EAAKE,MAAQJ,IACb,KAEAG,EAAOF,YAAaC,GAAQL,IAAOK,EAAKC,KAE9C,OAAOc,OAAA8E,EAAA,EAAA9E,CAAA,GACAf,EACCE,EAAO,CAAEA,QAAS,GAF1B,CAGID,WAIFohC,EAjB0BtgC,OAAA8E,EAAA,EAAA9E,CAAA,GAkBzB0F,EAlByB,CAmB5BwB,mBAnB4B0F,EAAAC,KAAA,GAuBRyzB,EAAgBpgC,GAvBR,CAAA0M,EAAAE,KAAA,gBAAAF,EAAAE,KAAA,EAwBhByC,GAAgB+wB,GAxBA,OAAA1zB,EAAAQ,GAAAR,EAAAG,KAAAH,EAAAE,KAAA,wBAAAF,EAAAE,KAAA,GAyBhB0C,GAAc8wB,GAzBE,QAAA1zB,EAAAQ,GAAAR,EAAAG,KAAA,eAuBtBpI,EAvBsBiI,EAAAQ,GA2B5BX,EA1EmC,CACvCvN,KnB3CgC,yBmByFA0N,EAAAE,KAAA,GA4BtBL,EAASgB,GAA0B9I,IA5Bb,eAAAiI,EAAAK,OAAA,SA8BrBC,QAAQC,QAAQxI,IA9BK,QAAAiI,EAAAC,KAAA,GAAAD,EAAAyE,GAAAzE,EAAA,SAtEpBxD,EAsGDwD,EAAAyE,GArGXhI,QAAQC,IAAI,6BAA8BF,GAqEV,yBAAAwD,EAAAS,OAtEpB,IAAAjE,GAsEoBoD,EAAA,kBAAN,gBAAAc,EAAAqB,GAAA,OAAAjK,EAAA6I,MAAAC,KAAA3L,YAAA,ImE8IeuB,KAAK,SAAAlD,GAAE,OAAIA,KACpD0+B,SAAU,SAAA1+B,GAAE,OAAIuM,ElEhIY,SAAAvM,GAAE,sBAAAsC,EAAAxC,OAAAqM,EAAA,EAAArM,CAAAsM,EAAAtB,EAAAuB,KAAI,SAAAmF,EAAMjF,GAAN,OAAAH,EAAAtB,EAAA2B,KAAA,SAAAiF,GAAA,cAAAA,EAAA/E,KAAA+E,EAAA9E,MAAA,cAAA8E,EAAA/E,KAAA,EAAA+E,EAAA9E,KAAA,EAExBlC,GAAmB1K,GAFK,cAG9BuM,EDjEmC,CACvCvN,KnB3CgC,yBoB4G5BuN,EAASP,MACTO,EAASyB,GAAoB,KALC0D,EAAA9E,KAAA,EAOxBL,EAAS0D,MAPe,cAAAyB,EAAA3E,OAAA,SASvBC,QAAQC,WATe,eAAAyE,EAAA/E,KAAA,GAAA+E,EAAAxE,GAAAwE,EAAA,SAW9BvI,QAAQC,IAAI,4BAAZsI,EAAAxE,IAX8BwE,EAAA3E,OAAA,SAAA2E,EAAAxE,IAAA,yBAAAwE,EAAAvE,SAAAqE,EAAA,kBAAJ,gBAAAK,GAAA,OAAAvP,EAAA+K,MAAAC,KAAA3L,YAAA,GkEgIL0+B,CAAiBrgC,KAC1Cy+B,iBAAkB,kBAAMlyB,EnE/Le,CACvCvN,KnB3CgC,0BsF0OhCigC,YAAa,SAACj/B,EAAI2E,GAAL,OAAe4H,ElEvMS,SAAC9H,EAAaE,GAAd,MAAyB,CAC9D3F,KrBvBsC,6BqBwBtCyF,cACAE,SkEoMqC27B,CAA0BtgC,EAAI2E,OAGxDuG,CAGb8yB,ICrOWjB,GAAU,SAAAv4B,GACnB,OADyCA,EAAnBu7B,aAElBl1B,EAAAC,EAAAC,cAACmyB,GAAD,CAAkB9mB,UAAU,IAE5BvL,EAAAC,EAAAC,cAAC4vB,GAAD,CAAkB17B,KAAMmB,IAAKC,EAAE,gBAO1BkgC,GAAb,SAAA9mB,GAAA,SAAA8mB,IAAA,IAAArlB,EAAAxG,EAAA5U,OAAA6U,EAAA,EAAA7U,CAAAwN,KAAAizB,GAAA,QAAAplB,EAAAxZ,UAAAC,OAAAwZ,EAAA,IAAAC,MAAAF,GAAAG,EAAA,EAAAA,EAAAH,EAAAG,IAAAF,EAAAE,GAAA3Z,UAAA2Z,GAAA,OAAA5G,EAAA5U,OAAA8U,EAAA,EAAA9U,CAAAwN,MAAA4N,EAAApb,OAAA+U,EAAA,EAAA/U,CAAAygC,IAAAzrB,KAAAzH,MAAA6N,EAAA,CAAA5N,MAAA/M,OAAA6a,MACIlX,MAAQ,CACJs8B,aAAa,GAFrB9rB,EAKI+rB,kBAAoB,WACZ/rB,EAAKhJ,MAAMlG,YACXkP,EAAKM,SAAS,CAAEwrB,aAAa,IAC7B9rB,EAAKhJ,MAAMg1B,iBAAiBhsB,EAAKhJ,MAAMlG,UAAWkP,EAAKhJ,MAAMpH,SARzEoQ,EAsBIisB,oBAAsB,WAClB,IAAMvD,GACD1oB,EAAKhJ,MAAMyxB,kBAAsC,OAAlBzoB,EAAKhJ,MAAM1L,GAE/C,OACI6K,EAAAC,EAAAC,cAAA,OAAKiJ,UAAU,qBACVopB,EAAkB,KACfvyB,EAAAC,EAAAC,cAAC61B,GAAD,CAASb,aAAcrrB,EAAKhJ,MAAMq0B,iBA7BtDrrB,EAAA,OAAA5U,OAAAka,EAAA,EAAAla,CAAAygC,EAAA9mB,GAAA3Z,OAAAma,EAAA,EAAAna,CAAAygC,EAAA,EAAAjvB,IAAA,oBAAA3M,MAAA,WAaQ2I,KAAKmzB,sBAbb,CAAAnvB,IAAA,qBAAA3M,MAAA,WAiBa2I,KAAKpJ,MAAMs8B,aACZlzB,KAAKmzB,sBAlBjB,CAAAnvB,IAAA,SAAA3M,MAAA,WAoCQ,OACIkG,EAAAC,EAAAC,cAAC0U,EAAA,SAAD,KACI5U,EAAAC,EAAAC,cAAC81B,GAAD,MACAh2B,EAAAC,EAAAC,cAACuyB,GAAD,CAAyBlnB,UAAU,IAClC9I,KAAKqzB,2BAxCtBJ,EAAA,CAAmC1pB,aAuEpB3L,eAhBS,SAAAhH,GACpB,IAAMlE,EAAKoI,GAAelE,GACpBsB,EAAYxF,EAAKgF,EAAkBd,EAAOlE,GAAM,KAKtD,MAAO,CACHwF,YACAxF,KACA+/B,gBALAv6B,IAAaA,EAAUqB,SAASrB,EAAUqB,OAAO4hB,OAMjDnkB,MAAOc,EAAmBlB,GAC1Bi5B,kBAAmBj4B,EAAsBhB,KAM7C,CACIw8B,iBpEtE0B,SAACl7B,EAAWlB,GAM1C,MAAO,CACHtF,KnBlC+B,0BmBmC/B2F,MAPK7E,OAAA8E,EAAA,EAAA9E,CAAA,GACF0F,EADE,CAELwB,eAAgB1C,OoEgET4G,CAKbq1B,IC/FIO,+LAEExzB,KAAK5B,MAAMq1B,mDAIX,OACIl2B,EAAAC,EAAAC,cAAC0U,EAAA,SAAD,KACI5U,EAAAC,EAAAC,cAAC81B,GAAD,MACAh2B,EAAAC,EAAAC,cAACuyB,GAAD,CAAyBlnB,UAAU,IACnCvL,EAAAC,EAAAC,cAAA,OAAKiJ,UAAU,qBACXnJ,EAAAC,EAAAC,cAACmyB,GAAD,CAAkB9mB,UAAU,aAXrBS,aAsBZ3L,eACX,KACA,CACI61B,gBrEU6B,iBAAO,CACxC/hC,KnBtC+B,yBwFwBpBkM,CAKb41B,ICzBIE,8MACFC,aAAe,WACX,GAAIvsB,EAAKhJ,MAAMyxB,iBAAkB,CAC7B,IAAMn9B,EAAK0U,EAAKhJ,MAAMw1B,MAAMC,OAAO18B,aAAe,KAElDiQ,EAAKhJ,MAAM01B,gBAAgBphC,GAE3B0U,EAAK2sB,kBAIbA,YAAc,WACVnsB,OAAOosB,SAAS,EAAG,uFAInBh0B,KAAK2zB,4DAIL3zB,KAAK2zB,gDAIL,OAAQ3zB,KAAK5B,MAAM61B,MACf,ICpCQ,ODqCJ,OAAO12B,EAAAC,EAAAC,cAACy2B,GAAD,MACX,ICrCO,MDsCH,OAAO32B,EAAAC,EAAAC,cAAC02B,GAAD,MACX,QACI,OAAO52B,EAAAC,EAAAC,cAAC22B,GAAD,cA9BC7qB,aA8CT3L,eAJS,SAAAhH,GACpB,MAAO,CAAEi5B,kBAAmBj4B,EAAsBhB,KAKlD,CACIk9B,gBrEDwB,SAAAphC,GAAE,sBAAA+B,EAAAjC,OAAAqM,EAAA,EAAArM,CAAAsM,EAAAtB,EAAAuB,KAAI,SAAAmB,EAAOjB,EAAUkB,GAAjB,IAAAzD,EAAA9F,EAAAy9B,EAAAC,EAAAp1B,EAAA,OAAAJ,EAAAtB,EAAA2B,KAAA,SAAAmB,GAAA,cAAAA,EAAAjB,KAAAiB,EAAAhB,MAAA,OAC5B5C,EAAU,SAAAd,GAEZ,OADAC,QAAQC,IAAI,+BAAgCF,GACrCA,GAHuB0E,EAAAjB,KAAA,EAOxBzI,EAAQuJ,IAEVk0B,EAAoB,KACpB3hC,EACA2hC,EAAoB38B,EAAkBd,EAAOlE,IAAO,MJtEzB8D,EIyEvBG,EAAiBC,GADf09B,EJvEd1zB,aAAa0rB,QAAb,2BAAAr5B,OAAgDuD,UAAejC,EI0EjD2K,EAAOxH,EAAkBd,EAAO09B,GACtCD,EACIC,GAAep1B,EACTA,EACA7G,EAA8BzB,GAAO,IAI/CqI,EADAo1B,EACSp0B,GAA0Bo0B,EAAkB3hC,IAE5CgM,MA1BiB4B,EAAAhB,KAAA,uBAAAgB,EAAAjB,KAAA,EAAAiB,EAAAV,GAAAU,EAAA,SAAAA,EAAAb,OAAA,SA6BvB/C,EAAO4D,EAAAV,KA7BgB,yBAAAU,EAAAT,OJ3DC,IAAArJ,GI2DD0J,EAAA,iBAAJ,gBAAAiB,EAAAC,GAAA,OAAA3M,EAAAsL,MAAAC,KAAA3L,YAAA,KqEFnBuJ,CAKb81B,IE3CWa,oBAAb,SAAApoB,GAAA,SAAAooB,IAAA,OAAA/hC,OAAA6U,EAAA,EAAA7U,CAAAwN,KAAAu0B,GAAA/hC,OAAA8U,EAAA,EAAA9U,CAAAwN,KAAAxN,OAAA+U,EAAA,EAAA/U,CAAA+hC,GAAAx0B,MAAAC,KAAA3L,YAAA,OAAA7B,OAAAka,EAAA,EAAAla,CAAA+hC,EAAApoB,GAAA3Z,OAAAma,EAAA,EAAAna,CAAA+hC,EAAA,EAAAvwB,IAAA,oBAAA3M,MAAA,WAEQ2I,KAAK5B,MAAMo2B,eAAex0B,KAAK5B,MAAMhL,GAAGiQ,aACxCrD,KAAK5B,MAAMq2B,kBACXz0B,KAAK5B,MAAMs2B,oBACX10B,KAAK5B,MAAMu2B,cAAc30B,KAAK5B,MAAMhL,MAL5C,CAAA4Q,IAAA,kBAAA3M,MAAA,WASQ,MAAO,CAAE0lB,QAAS/c,KAAK5B,MAAM2e,QAASjqB,SAAMM,GAAI4M,KAAK5B,MAAMhL,MATnE,CAAA4Q,IAAA,SAAA3M,MAAA,WAaQ,OACIkG,EAAAC,EAAAC,cAAAF,EAAAC,EAAA4iB,SAAA,KACI7iB,EAAAC,EAAAC,cAACqN,EAAA,EAAD,CAAclF,QAAM,EAACgvB,SAAO,IAC5Br3B,EAAAC,EAAAC,cAAA,OAAKiJ,UAAU,eACXnJ,EAAAC,EAAAC,cAAA,OAAKiJ,UAAU,wBACXnJ,EAAAC,EAAAC,cAACo3B,EAAA,EAAD,CAAWviC,QAASQ,IAAKC,EAAE,gBAE/BwK,EAAAC,EAAAC,cAACq3B,EAAA,EAAD,KACIv3B,EAAAC,EAAAC,cAACs3B,EAAA,EAAD,KACIx3B,EAAAC,EAAAC,cAACu3B,EAAA,EAAD,CACIC,OAAK,EACLC,KAAK,IACLC,OAAQ,SAAA/2B,GAAK,OACTb,EAAAC,EAAAC,cAAC23B,GAAD5iC,OAAA8O,OAAA,GAAelD,EAAf,CAAsB61B,KD3CtC,aC8CQ12B,EAAAC,EAAAC,cAACu3B,EAAA,EAAD,CACIC,OAAK,EACLC,KAAK,OACLC,OAAQ,SAAA/2B,GAAK,OACTb,EAAAC,EAAAC,cAAC23B,GAAD5iC,OAAA8O,OAAA,GAAelD,EAAf,CAAsB61B,KDnDvC,YCsDS12B,EAAAC,EAAAC,cAACu3B,EAAA,EAAD,CACIC,OAAK,EACLC,KAAK,gBACLC,OAAQ,SAAA/2B,GAAK,OACTb,EAAAC,EAAAC,cAAC23B,GAAD5iC,OAAA8O,OAAA,GAAelD,EAAf,CAAsB61B,KDzDtC,aC4DQ12B,EAAAC,EAAAC,cAACu3B,EAAA,EAAD,CACIC,OAAK,EACLC,KAAK,qBACLC,OAAQ,SAAA/2B,GAAK,OACTb,EAAAC,EAAAC,cAAC23B,GAAD5iC,OAAA8O,OAAA,GAAelD,EAAf,CAAsB61B,KDlEtC,eCuEA12B,EAAAC,EAAAC,cAAC43B,GAAD,YApDpBd,EAAA,CAAyBhrB,cAoEzBgrB,GAAIe,kBAAoB,CACpBvY,QAASrK,IAAU6U,OACnBz0B,KAAM4f,IAAUC,OAChBvf,GAAIsf,IAAUC,QAGlB,IASe/U,eACX,KAVuB,SAAAqB,GACvB,MAAO,CACHu1B,eAAgB,SAAAnxB,GAAW,OAAIpE,EC7FC,CACpCvN,K9FHyB,gB8FIzB2F,MD2F2DgM,KACvDoxB,gBAAiB,kBAAMx1B,EAAS0D,OAChC+xB,kBAAmB,kBAAMz1B,EpErFC,eAAA/H,EAAA1E,OAAAqM,EAAA,EAAArM,CAAAsM,EAAAtB,EAAAuB,KAAM,SAAAC,EAAMC,GAAN,IAAAoB,EAAA3D,EAAA64B,EAAA,OAAAz2B,EAAAtB,EAAA2B,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAC9Be,EAAY,SAAA8D,GACdlF,EAASuF,GAAwBL,KAG/BzH,EAAU,SAAAd,GAEZ,OADAC,QAAQC,IAAI,iCAAkCF,GACvCA,GAPyBwD,EAAAC,KAAA,EAAAD,EAAAE,KAAA,EAWHmE,KAXG,cAW1B8xB,EAX0Bn2B,EAAAG,KAAAH,EAAAK,OAAA,SAYzBY,EAAUk1B,IAZe,cAAAn2B,EAAAC,KAAA,EAAAD,EAAAQ,GAAAR,EAAA,SAAAA,EAAAK,OAAA,SAczB/C,EAAO0C,EAAAQ,KAdkB,yBAAAR,EAAAS,SAAAb,EAAA,iBAAN,gBAAAc,GAAA,OAAA5I,EAAA6I,MAAAC,KAAA3L,YAAA,KoEsF1BsgC,cAAe,SAAAvhC,GAAE,OAAI6L,EjEzFC,SAAA7L,GAAE,sBAAA8D,EAAA1E,OAAAqM,EAAA,EAAArM,CAAAsM,EAAAtB,EAAAuB,KAAI,SAAAC,EAAOC,EAAUkB,GAAjB,IAAAE,EAAA3D,EAAA84B,EAAA1wB,EAAA2wB,EAAA,OAAA32B,EAAAtB,EAAA2B,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAC1Be,EAAY,SAAAyE,GACd7F,EAASuG,GAAgBV,KAGvBpI,EAAU,SAAAd,GAEZ,OADAC,QAAQC,IAAI,+BAAgCF,GACrCA,GAPqBwD,EAAAC,KAAA,EAWtBm2B,EAAkBjwB,GAAgCpF,KAX5Bf,EAAAE,KAAA,EAYHo2B,aAAmBtiC,EAAIoiC,GAZpB,cAYtB1wB,EAZsB1F,EAAAG,KAetBk2B,EAAqB3wB,EAAW7M,OAClC,SAAA09B,GAAG,MACuB,aAAtBA,EAAIC,eACmB,aAAtBD,EAAIC,eACyB,cAA1BD,EAAIE,oBAnBYz2B,EAAAK,OAAA,SAqBrBY,EAAUo1B,IArBW,eAAAr2B,EAAAC,KAAA,GAAAD,EAAAQ,GAAAR,EAAA,SAAAA,EAAAK,OAAA,SAuBrB/C,EAAO0C,EAAAQ,KAvBc,yBAAAR,EAAAS,SAAAb,EAAA,kBAAJ,gBAAAc,EAAAqB,GAAA,OAAAjK,EAAA6I,MAAAC,KAAA3L,YAAA,GiEyFMyhC,CAAe1iC,OAItCwK,CAGb22B,oVE1DFwB,KAAOtE,OAAO,MAEd3+B,IAAKkjC,aAAa,KAHA,iBAGiBC,IACnCnjC,IAAKkjC,aAAa,KAJA,iBAIiBE,IACnCpjC,IAAKkjC,aAAa,KALA,iBAKiBG,IACnCrjC,IAAKkjC,aAAa,KANA,iBAMiBI,IACnCtjC,IAAKkjC,aAAa,KAPA,iBAOiBK,IACnCvjC,IAAKkjC,aAAa,KARA,iBAQiBM,IACnCxjC,IAAKkjC,aAAa,KATA,iBASiBO,IACnCzjC,IAAKkjC,aAAa,KAVA,iBAUiBQ,IACnC1jC,IAAKkjC,aAAa,KAXA,iBAWiBS,IACnC3jC,IAAKkjC,aAAa,MAZA,iBAYkBU,IACpC5jC,IAAKkjC,aAAa,KAbA,iBAaiBW,IACnC7jC,IAAKkjC,aAAa,KAdA,iBAciBY,IACnC9jC,IAAKkjC,aAAa,QAfA,iBAeoBa,IACtC/jC,IAAKkjC,aAAa,KAhBA,iBAgBiBc,IACnChkC,IAAKkjC,aAAa,KAjBA,iBAiBiBe,IACnCjkC,IAAKkjC,aAAa,MAlBA,iBAkBkBgB,IACpClkC,IAAKkjC,aAAa,KAnBA,iBAmBiBiB,IACnCnkC,IAAKkjC,aAAa,KApBA,iBAoBiBkB,IACnCpkC,IAAKkjC,aAAa,KArBA,iBAqBiBmB,IACnCrkC,IAAKkjC,aAAa,KAtBA,iBAsBiBoB,IACnCtkC,IAAKkjC,aAAa,KAvBA,iBAuBiBqB,IACnCvkC,IAAKkjC,aAAa,QAxBA,iBAwBoBsB,IAEtCxkC,IAAKykC,oBA1Ba,kBA2BlBzkC,IAAK0kC,eAAe,MAEL1kC,SAAf,qBCrDe4K,GATD,WAAyC,IAAxC9G,EAAwCvC,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GARpB,OAQSmG,EAAWnG,UAAAC,OAAA,EAAAD,UAAA,QAAAE,EACnD,OAAQiG,EAAO9I,MACX,IAZiB,YAab,OAAO+I,YAAgBD,EAAOnD,MAXP,QAY3B,QACI,OAAOT,ICUJ2D,gBAAgB,CAC3B9C,WhGkBW,WAA8C,IAA7Cb,EAA6CvC,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAArCyC,EAA0B0D,EAAWnG,UAAAC,OAAA,EAAAD,UAAA,QAAAE,EACzD,OAAQiG,EAAO9I,MACX,IAjCsB,iBAkClB,MAAO,CACHqF,KAAMyD,EAAOnD,MACbL,MAAO,IAGf,IAtCsB,iBAuClB,OAAOxE,OAAA8E,EAAA,EAAA9E,CAAA,GACAoE,EADP,CAEIG,KAAKvE,OAAA8E,EAAA,EAAA9E,CAAA,GACEoE,EAAMG,KACNyD,EAAOnD,SAItB,IA9C6B,wBA+CzB,OAAOJ,EAAoB,CACvBL,QACAO,YAAaqD,EAAOrD,YACpBC,KAAM,UACNC,MAAOmD,EAAOnD,QAGtB,IArDkC,6BAsD9B,OAAOJ,EAAoB,CACvBL,QACAO,YAAaqD,EAAOrD,YACpBC,KAAM,cACNC,MAAOmD,EAAOnD,QAGtB,IA5D2B,sBA6DvB,OAAO7E,OAAA8E,EAAA,EAAA9E,CAAA,GACAoE,EADP,CAEII,MAAOwD,EAAOnD,QAGtB,QACI,OAAOT,IgGzDfiE,YACA+Q,oBACA3I,cACA1G,erFrBW,WAAkD,IAAjD3F,EAAiDvC,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAzC+H,GAA8B5B,EAAWnG,UAAAC,OAAA,EAAAD,UAAA,QAAAE,EAC7D,OAAQiG,EAAO9I,MACX,IATyB,oBAUrB,OAAOc,OAAA8E,EAAA,EAAA9E,CAAA,GACAoE,EADPpE,OAAA+E,EAAA,EAAA/E,CAAA,GAEKgI,EAAOnD,MAAM3E,GAAK+kC,KAAYjlC,OAAA8E,EAAA,EAAA9E,CAAA,GAEpBmF,YAASf,EAAM4D,EAAOnD,MAAM3E,KAC5B8H,EAAOnD,OAEd6C,MAIZ,IApBqC,gCAqBjC,OAAO1H,OAAA8E,EAAA,EAAA9E,CAAA,GACAoE,EADPpE,OAAA+E,EAAA,EAAA/E,CAAA,GAEKgI,EAAO9H,GAAK+kC,KAAYjlC,OAAA8E,EAAA,EAAA9E,CAAA,GAEdmF,YAASf,EAAM4D,EAAO9H,KAFT,CAGhB8pB,WAAYhiB,EAAOgiB,aAEvBtiB,MAIZ,QACI,OAAOtD,IqFLf6E,SzF7BW,WAAwB,IAAvB7E,EAAuBvC,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAf,GAAImG,EAAWnG,UAAAC,OAAA,EAAAD,UAAA,QAAAE,EACnC,OAAQiG,EAAO9I,MACX,IAJyB,oBAKrB,IAAMgmC,EAAgBj1B,YAAajI,EAAOnD,OAI1C,OAFiB8jB,IAAOvkB,EAAO,CAAE+gC,OAAQD,IAI7C,QACI,OAAO9gC,IyFoBfC,KjG1BW,WAAwC,IAU9B+gC,EAVThhC,EAAuCvC,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAA/BkC,EAAoBiE,EAAWnG,UAAAC,OAAA,EAAAD,UAAA,QAAAE,EACnD,OAAQiG,EAAO9I,MACX,IAXqB,gBAYjB,MAQD,CACHgB,IAFiBklC,EAPUp9B,EAAOnD,OASrB3E,GACb8D,SAAUohC,EAASphC,SACnBC,SAAUmhC,EAAStyB,SAASuyB,YAC5BnhC,YAAakhC,EAASE,YAAYv0B,IAAI,QAVtC,QACI,OAAO3M,IiGqBfoD,c/FZW,WAAkD,IAAjDpD,EAAiDvC,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAzCwF,GAA8BW,EAAWnG,UAAAC,OAAA,EAAAD,UAAA,QAAAE,EAC7D,OAAQiG,EAAO9I,MACX,IArB+B,0BAsB3B,IAAMqmC,EAAW,GAIjB,OAHAvlC,OAAO8I,KAAKxB,IAAqBnB,IAC7B,SAAAq/B,GAAC,OAAKD,EAASC,GAAKx9B,EAAOnD,MAAM2gC,KAE9BD,EAEX,IA3B4B,uBA4BxB,OAAOl+B,GACX,IA5B2B,sBA6BvB,OAAOC,GACX,IA7BsB,iBA8BlB,OAAOtH,OAAO8O,OAAO,GAAI1K,EAAO,CAAEiC,KAAM2B,EAAOnD,QAEnD,IA/B4B,uBAgCxB,OAAO7E,OAAO8O,OAAO,GAAI1K,EAAO,CAC5BmC,YAAayB,EAAOnD,QAG5B,IAnC0B,qBAoCtB,OAAO8jB,IAAOvkB,EAAO,CACjB8C,eAAgB,CAAEu+B,SAAU,CAACz9B,EAAOnD,UAE5C,IAtC6B,wBAuCzB,IAAM6gC,EAAa19B,EAAOnD,MAEpB0b,EAAqBnc,EAAM8C,eAAesZ,UAC5C,SAAAvhB,GAAI,OAAIA,EAAKiB,KAAOwlC,IAGxB,OAAInlB,GAAsB,EACfoI,IAAOvkB,EAAO,CACjB8C,eAAgB,CACZy+B,QAAS,CAAC,CAACplB,EAAoB,OAKpCnc,EAEX,IArDiC,4BAsD7B,IAAMwhC,EAAa3+B,YAAQ7C,EAAM8C,gBAC7B2+B,GAAmB,EAEjBC,EAAgB99B,EAAOnD,MAAMsB,IAAI,SAAAzB,GAAuB,IAApBqhC,EAAoBrhC,EAApBqhC,EAAGC,EAAiBthC,EAAjBshC,EAAGh3B,EAActK,EAAdsK,EAAGE,EAAWxK,EAAXwK,EAAGmgB,EAAQ3qB,EAAR2qB,EAC5C4W,EAAYL,EAAWr0B,KAAK,SAAA20B,GAAE,OAAIA,EAAGhmC,KAAOmvB,IAElD,OAEQ4W,EAAUF,IAAMA,GAChBE,EAAUD,IAAMA,GAChBC,EAAUj3B,IAAMA,GAChBi3B,EAAU/2B,IAAMA,GAGpB22B,GAAmB,EACZ7lC,OAAO8O,OAAO,GAAIm3B,EAAW,CAAEj3B,IAAGE,IAAG62B,IAAGC,OAG5CC,IAGX,OAAOJ,EAAgB7lC,OAAA8E,EAAA,EAAA9E,CAAA,GAEVoE,EAFU,CAGb8C,eAAgB4+B,IAEpB1hC,EAEV,IAnF6B,wBAoFzB,IAAMic,EAAgBrY,EAAOnD,MAEvB0b,EAAqBnc,EAAM8C,eAAesZ,UAC5C,SAAAvhB,GAAI,OAAIA,EAAKiB,KAAOmgB,EAAcngB,KAGtC,OAAIqgB,GAAsB,EACLoI,IAAOvkB,EAAO,CAC3B8C,eAAgB,CACZy+B,QAAS,CAAC,CAACplB,EAAoB,EAAGF,OAOvCjc,EAEX,QACI,OAAOA,I+F9EfwE,Y3F9BW,WAAgD,IAA/CxE,EAA+CvC,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAvC6G,GAA4BV,EAAWnG,UAAAC,OAAA,EAAAD,UAAA,QAAAE,EAC3D,OAAQiG,EAAO9I,MACX,IAPuB,kBAQnB,OAAOc,OAAA8E,EAAA,EAAA9E,CAAA,GACAoE,EADPpE,OAAA+E,EAAA,EAAA/E,CAAA,GAEKgI,EAAOvC,OAAOvF,GAAK8H,EAAOvC,OAAOZ,QAG1C,IAZ0B,qBAatB,IAAM0gC,EAAQvlC,OAAA8E,EAAA,EAAA9E,CAAA,GAAQoE,GAItB,cAFOmhC,EAASv9B,EAAO9H,IAEhBqlC,EAEX,IArBwB,mBAsBpB,OAAOv9B,EAAOyG,QAElB,IAzB0B,qBA0BtB,OAAO/F,GAEX,QACI,OAAOtE,I2FSf0D,gB9FhCW,WAAqD,IAApD1D,EAAoDvC,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAA5C+F,GAAiCI,EAAWnG,UAAAC,OAAA,EAAAD,UAAA,QAAAE,EAChE,OAAQiG,EAAO9I,MACX,IAP+B,0BAQ3B,IAAMqmC,EAAQvlC,OAAA8E,EAAA,EAAA9E,CAAA,GAAQoE,GAItB,cAFOmhC,EAASv9B,EAAO9H,IAEhBqlC,EAEX,IAb6B,wBAczB,OAAOv9B,EAAOyG,QAElB,IAlB+B,0BAmB3B,OAAO7G,GAEX,QACI,OAAOxD,I8FiBf8G,SACAI,SvF/BW,WAA4C,IAA3ClH,EAA2CvC,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAnC0H,GAAwBvB,EAAWnG,UAAAC,OAAA,EAAAD,UAAA,QAAAE,EACvD,OAAQiG,EAAO9I,MACX,IAXiC,4BAY7B,OAAOc,OAAA8E,EAAA,EAAA9E,CAAA,GAAKoE,EAAU4D,EAAOnD,OAEjC,IAbsB,iBAclB,OAAO0E,GAEX,QACI,OAAOnF,IuFuBfkO,WvE7BW,WAAwC,IAAvClO,EAAuCvC,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAA/BoQ,GAAoBjK,EAAWnG,UAAAC,OAAA,EAAAD,UAAA,QAAAE,EACnD,OAAQiG,EAAO9I,MACX,IARsB,iBASlB,SAAAuB,OAAWwR,GAAXjS,OAAA8F,EAAA,EAAA9F,CAAkCgI,EAAOnD,QAE7C,QACI,OAAOT,IuEwBf0O,StE9BW,WAAsC,IAArC1O,EAAqCvC,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAA7B0Q,GAAkBvK,EAAWnG,UAAAC,OAAA,EAAAD,UAAA,QAAAE,EACjD,OAAQiG,EAAO9I,MACX,IAdoB,eAehB,OAAOc,OAAO8O,OAAO,GAAI9G,EAAOnD,OAEpC,IAhBoB,eAiBhB,OAAO7E,OAAA8E,EAAA,EAAA9E,CAAA,GACAoE,EACA4D,EAAOnD,OAGlB,QACI,OAAOT,IsEmBf8gB,qB5CtCW,WAA0D,IAAzD9gB,EAAyDvC,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAjDmjB,GAAsChd,EAAWnG,UAAAC,OAAA,EAAAD,UAAA,QAAAE,EACrE,OAAQiG,EAAO9I,MACX,IAPkC,6BAQ9B,OAAO8I,EAAOnD,MAElB,IAToC,+BAUhC,OAAOmgB,GAEX,QACI,OAAO5gB,M6CUJ+hC,GAnBQ,WACnB,IAAMC,EAAa,CAACC,MAGdC,EACFlxB,OAAOmxB,sCAAwCC,KAQnD,OANKpxB,OAAOmxB,qCAMLE,aACHC,GACAJ,EAAiBK,KAAep5B,WAAf,EAAmB64B,MCHtCQ,GAAa,SAAA/R,GACf,IAAM5wB,EAAW4wB,EAAawQ,YAE1BphC,GAAyB,OAAbA,GACZ4iC,SAAOvmC,KAAKwmC,QAAQ/kB,IAApB,sBAAAthB,OAA8CwD,EAA9C,gBAGJ4iC,SAAOvmC,KAAKwmC,QAAQ/kB,IAAI,oCACxBzhB,GAAK0kC,eAAe/gC,KAGd,eAAAS,EAAA1E,OAAAqM,EAAA,EAAArM,CAAAsM,EAAAtB,EAAAuB,KAAG,SAAAC,IAAA,IAAAu6B,EAAAC,EAAAzc,EAAA,OAAAje,EAAAtB,EAAA2B,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAF,EAAAE,KAAA,EACcm6B,sBAAY,qBAD1B,OACHF,EADGn6B,EAAAG,KAIT1D,QAAQ+hB,KAAR,oBAAA3qB,OACwBsmC,EAASG,QADjC,MAAAzmC,OAEQsmC,EAASI,wBAIXH,GAASI,EAVNx6B,EAAAE,KAAA,eAuBHyd,EAAUyc,EACVD,EAASM,WAAWC,KAAKtpB,KACzBopB,KACgBA,SAEtBP,SAAOtc,QAAP,GAAA9pB,OAAoB8pB,EAApB,SAAA9pB,OAAmCsmC,EAASQ,MAAMC,YAClDX,SAAOY,QAAUT,EAAS,KAAO,CAAEtc,cAHb0c,UAItBP,SAAOa,QAAU,CACb,QACA,MACA,SACA,cACA,aACA,cACA,YACA,mBACA,aAGJC,4BACKvkC,KAAKwjC,IACLxjC,KAAK,kBAAMwkC,eAAOf,YAClBzjC,KAAK,SAAAykC,GACFC,IAASnF,OACL53B,EAAAC,EAAAC,cAAC88B,EAAA,EAAD,CACIlB,OAAQ,CACJtc,QAASA,EACTid,WAAYT,EAASQ,MAAMC,aAG/Bz8B,EAAAC,EAAAC,cAACqN,EAAA,EAAD,MACAvN,EAAAC,EAAAC,cAAC+8B,EAAA,EAAD,CAAUC,MAAO9B,MACbp7B,EAAAC,EAAAC,cAACgI,EAAA,iBAAD,CAAkByT,MApEnBwhB,yBAAeC,MAqEVp9B,EAAAC,EAAAC,cAACm9B,GAAD,CAAK7d,QAASA,EAAS3pB,GAAIinC,OAIvCpT,SAAS4T,eAAe,WA5D3B,yBAAAz7B,EAAAS,SAAAb,MAAH,yBAAA9H,EAAA6I,MAAAC,KAAA3L,aAAA,EAiEVymC,8SCtFO,SAASrhC,EAAQshC,GACpB,OAAOhtB,MAAMitB,QAAQD,GAASA,EAAQ,GAGnC,SAASpjC,EAASojC,GACrB,OAAOE,IAASF,GAASA,EAAQ,GAS9B,SAASt4B,EAAaylB,GACzB,OAAOA,EAAMgH,OAAO,SAAChM,EAAKzxB,GAEtB,OADAyxB,EAAIzxB,EAAKiB,IAAMjB,EACRyxB,GACR,IAkBA,IAAMkE,EAAa,SAAC/vB,EAAOZ,GAC9B,GAA2B,qBAAhBykC,EAAOC,MAAwBA,KAAKC,eAAgB,CAC3D,IAAM3J,EAASh7B,GAAY,KAC3B,OAAO,IAAI0kC,KAAKC,eAAe3J,EAAQ,CACnC4J,KAAM,UACNC,MAAO,QACPC,IAAK,YACNC,OAAO,IAAIC,KAAKpkC,IAGvB,OAAOA,EAAMgC,OAAO,EAAG,IAAIqiC,QAAQ,IAAK,MAwB/BjhC,EAAkB,SAACpD,EAAOskC,GAAR,YACjBpnC,IAAV8C,GAAiC,OAAVA,EAAiBskC,EAAetkC,GAE9C9D,EAAa,SAAAH,GACtB,IAAMwoC,EAAMxoC,EAAGyC,IAAIC,SACb+lC,EAAMD,EAAI7e,QAAQ+e,QAAQ,QAChC,OAAOD,GAAO,EAAID,EAAI7e,QAAQ9I,MAAM,EAAG4nB,GAAOD,EAAI7e,SAGzCgf,EAAe,SAAAppB,GAAM,OAAAngB,OAAAwpC,EAAA,EAAAxpC,CAAA,GAC3BmgB,EAD2B,CAE9BjgB,QAAI6B,6CCvFRyB,EAAAC,QAAA,CAAkBiZ,aAAA,oCAAA0jB,cAAA,2DCAlB58B,EAAAC,QAAA,CAAkBib,SAAA,kCAAAZ,WAAA,oCAAA/F,MAAA,+BAAAoG,aAAA,4DCAlB3a,EAAAC,QAAA,CAAkBgmC,SAAA,6BAAAzd,eAAA,mCAAAE,UAAA,8BAAAC,gBAAA,0DCAlB3oB,EAAAC,QAAA,CAAkBkT,KAAA,yBAAA9G,QAAA,4BAAAmG,WAAA,qDCAlBxS,EAAAC,QAAA,CAAkB4nB,UAAA,sCAAAzT,KAAA,iCAAApO,QAAA,0DCAlBhG,EAAAC,QAAA,CAAkBoV,OAAA,4BAAAjB,KAAA,ifCcZ8xB,GAAwBC,EAAA,GAAA3pC,OAAA4pC,EAAA,EAAA5pC,CAAA2pC,EACzBvrC,IAAM,aADmB4B,OAAA4pC,EAAA,EAAA5pC,CAAA2pC,EAEzBtrC,IAAe,qBAFU2B,OAAA4pC,EAAA,EAAA5pC,CAAA2pC,EAGzBrrC,IAAc,oBAHWqrC,GAOxBE,EAAY,SAAA3qC,GACd,QAHwB,SAAAA,GAAI,MAAI,CAACf,IAAOD,KAAcqf,SAASre,GAG3D4qC,CAAoB5qC,IAKjBwpC,EAFYgB,EAAyBxqC,KAOnCyuB,EAAoB,WAAmC,IAAlC1uB,EAAkC4C,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAA3B,GAC/B3C,GAD0D2C,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAP,IAC9BmoB,YAAc/qB,EAAKC,KAE9C,QAAS2qC,EAAU3qC,IAGVqP,EAAkB,SAAAtP,GAC3B,OAAKwpC,IAASxpC,GAOVA,EAHaK,IAAYL,EAAKC,MAAMkB,WAInCnB,EAAKkI,aACFlI,EAAKmI,OACLnI,EAAKkH,KACLlH,EAAK8qC,aACL9qC,EAAK+qC,YACL,GAZG,MAmBFC,EAAa,SAACC,EAAQrD,EAAQxc,GACjC6f,GAAUA,EAAOC,OAIvBD,EAAOrpC,IAAMwpB,EAAYE,QACzB2f,EAAOE,kBAAmB,EAC1BF,EAAOxkC,WAAY,EACf2kB,EAAYG,OACZ0f,EAAO1f,KAAOH,EAAYG,MAE9B0f,EAAOC,KAAKtD,KAGHhY,EAAQ,SAAA5vB,GAAI,OAAIsP,EAAgBtP,GAAMiB,IACtCmqC,EAAU,SAAAprC,GAAI,OAAIsP,EAAgBtP,GAAMoH,MAExC+nB,EAAU,SAACnvB,EAAM2B,GAC1B,IAAM2pB,EAAUxpB,YAAWH,GACrBJ,EAASlB,IAAYL,EAAKC,MAAMsB,OAAOquB,EAAM5vB,IAEnD,SAAAwB,OAAU8pB,EAAV,KAAA9pB,OAAqBD,IAGZ2pC,EAAI,eAAAloC,EAAAjC,OAAAsqC,EAAA,EAAAtqC,CAAAuqC,EAAAv/B,EAAAuB,KAAG,SAAAC,EAChBvN,EACA4qB,EAFgBnlB,GAAA,IAAA2lB,EAAAL,EAAA6c,EAAA3nC,EAAAgrC,EAAA,OAAAK,EAAAv/B,EAAA2B,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,OAGdud,EAHc3lB,EAGd2lB,YAAaL,EAHCtlB,EAGDslB,WAET6c,EALU7mC,OAAAwqC,EAAA,EAAAxqC,CAAA,GAMT6pB,EANS,CAOZ8L,GAAIhL,YAAiB1rB,EAAKiB,MAGxBhB,EAAO8qB,GAAc/qB,EAAKC,KAC1BgrC,EAASL,EAAU3qC,GAEzB+qC,EAAWC,EAAQrD,EAAQxc,GAbX,wBAAAzd,EAAAS,SAAAb,MAAH,gBAAAc,EAAAqB,EAAAC,GAAA,OAAA3M,EAAAsL,MAAAC,KAAA3L,YAAA,GAgBJ4oC,EAAK,eAAAnoC,EAAAtC,OAAAsqC,EAAA,EAAAtqC,CAAAuqC,EAAAv/B,EAAAuB,KAAG,SAAAmB,EAAMzO,GAAN,IAAAyrC,EAAA,OAAAH,EAAAv/B,EAAA2B,KAAA,SAAAmB,GAAA,cAAAA,EAAAjB,KAAAiB,EAAAhB,MAAA,cAAAgB,EAAAhB,KAAA,EACa9J,YAAiB6rB,EAAM5vB,GAAOA,EAAKC,KAAM,CACnEgE,OAAQjE,EAAKC,OAASd,IAAM2E,cAAiB,OAFhC,cACX2nC,EADW58B,EAAAf,KAAAe,EAAAb,OAAA,SAKVy9B,GALU,wBAAA58B,EAAAT,SAAAK,MAAH,gBAAAoE,GAAA,OAAAxP,EAAAiL,MAAAC,KAAA3L,YAAA,GAQL8oC,EAAS,SAAA1rC,GAClB,IAAMirC,EAASL,EAAU5qC,EAAKC,MAE1BgrC,GAAUA,EAAOS,QACjBT,EAAOS,OAAOhgB,YAAiB1rB,EAAKiB,MAI/B0qC,EAAU,SAAC3rC,EAAM+qB,GAC1B,IAAMkgB,EAASL,EAAU7f,GAErBkgB,GAAUA,EAAOU,SACjBV,EAAOU,QAAQjgB,YAAiB1rB,EAAKiB,MAIhCuyB,EAAyB,SAClC5I,EACAghB,EACA7gB,GAEA,GAAI6gB,IAAiBzsC,KAAOysC,IAAiB7gB,EAAY,CACrD,IAAM8gB,GAzEgB3kC,EAyEkB0jB,GAxExCqI,UAAY/rB,EAAI+rB,SAAS3gB,KAAK,SAAAw5B,GAAE,OAAIA,EAAG5Y,MAAM5U,SA3BvB,cAqGtB,YAAyBxb,IAArB+oC,EACO,KAGJvB,YAAavpC,OAAAwqC,EAAA,EAAAxqC,CAAA,GACb6pB,EACAihB,EAFY,CAGf5Y,cAAUnwB,EACV7C,KAAM8qB,IAAe7rB,IAAQ6sC,IAAkBC,OAEhD,OAAIJ,IAAiB3sC,KAAgB8rB,IAAe7rB,IAChDorC,YAAavpC,OAAAwqC,EAAA,EAAAxqC,CAAA,GAAK6pB,EAAN,CAAqB3qB,KAAM8rC,OACvCH,IAAiB1sC,KAAS6rB,IAAe9rB,IACzCqrC,YAAavpC,OAAAwqC,EAAA,EAAAxqC,CAAA,GACb6pB,EADY,CAEf3qB,KAAM+rC,OAIP1B,YAAa1f,GA9FM,IAAA1jB,uDCzD9B+kC,EAAA9kC,EAAA+kC,EAAA,sBAAA7P,IAAA4P,EAAA9kC,EAAA+kC,EAAA,sBAAAhQ,IAAA+P,EAAA9kC,EAAA+kC,EAAA,sBAAApQ,IAAAmQ,EAAA9kC,EAAA+kC,EAAA,sBAAAr7B,IAAAo7B,EAAA9kC,EAAA+kC,EAAA,sBAAAjR,IAAAgR,EAAA9kC,EAAA+kC,EAAA,sBAAAlQ,IAAAiQ,EAAA9kC,EAAA+kC,EAAA,sBAAAxP,IAAAuP,EAAA9kC,EAAA+kC,EAAA,sBAAAh9B,IAAA+8B,EAAA9kC,EAAA+kC,EAAA,sBAAAxgB,IAAAugB,EAAA9kC,EAAA+kC,EAAA,sBAAAxR,IAAA,IAAAyR,EAAAF,EAAA,KAAAG,EAAAH,EAAAI,EAAAF,GAAAG,EAAAL,EAAA,IAMa5P,EAAoB,WACpBH,EAAkB,GAGlBJ,EAAS,CAAC,GAAI,IAEdjrB,EAAiB,CAAEi2B,EAAG,EAAGC,EAAG,EAAGh3B,EAAG,GAAIE,EAAG,IACzCgrB,EAAkB,EAOlBe,EAAiB,WAGlB,OALS,IAefuQ,EAAuB,SAAAzF,GAAC,OAAI0F,OAAOC,UAAU3F,IAAMA,GAAK,GAIjDpK,EAAW,SAAA18B,GAAI,OACxBusC,EAAqBvsC,EAAK8mC,IAC1ByF,EAAqBvsC,EAAK+mC,IAC1BwF,EAAqBvsC,EAAK+P,IAC1Bw8B,EAAqBvsC,EAAKiQ,IA6CjBf,EAAY,SAAA3J,GAAK,OAC1BA,EAAM2B,IAAI,SAAClH,EAAMw2B,GACb,IAAMkW,EAAgBhQ,EAAS18B,GACzBA,EACAe,OAAO8O,OAAO,GAAI7P,EA7CR,SAAAowB,GACpB,IAAKmc,EAAqBnc,GACtB,MAAM,IAAIuc,MAAM,6BAGpB,IAAMC,EAAMxc,EAjCY,EAkClByc,EAAMx3B,KAAKC,MAAM8a,EAlCC,GAmClB0c,EAAYz3B,KAAKC,MAAM,MACvBy3B,EAA+B,EAAlB7Q,EAEnB,MAAO,CACH4K,EAAG8F,EAAME,EACT/F,EAAG8F,EAAME,EACTh9B,EAAG+8B,EACH78B,EAAG88B,GA+B2BC,CAASxW,IAEvC,OAAOz1B,OAAO8O,OACV,GACA68B,EAxBc,SAAA1sC,GAKtB,MAAO,CAAEoyB,eAJc/c,KAAK43B,MACxB/Q,EAAkBl8B,EAAKiQ,EAAIoF,KAAK4B,IAAI,EAAGjX,EAAKiQ,EAAI,GAAK6rB,EAAO,KAuBxDoR,CAAkBR,OAIjBhhB,EAAmB,SAAAzqB,GAAE,cAAAO,OAAYP,IAEvC,SAASy5B,EAAaz5B,GACzB,IAAMy1B,EAAKxwB,YAASsvB,SAAS2X,cAAT,IAAA3rC,OAA2BkqB,EAAiBzqB,MAC5DmsC,IAAW1W,EAAG2W,kBACdv+B,WACI,kBAAM4nB,EAAG2W,gBAAgB3W,EAAG4W,YAAc,EAAG5W,EAAGnE,aAAe,IAC/D,0BCzGZhuB,EAAAC,QAAA,CAAkBuc,eAAA,mECAlBxc,EAAAC,QAAA,CAAkB+nB,iBAAA","file":"static/js/main.d9f0221c.chunk.js","sourcesContent":["import i18n from '@dhis2/d2-i18n';\nimport TableIcon from '@material-ui/icons/ViewList';\nimport ChartIcon from '@material-ui/icons/InsertChart';\nimport MapIcon from '@material-ui/icons/Public';\nimport ExtensionIcon from '@material-ui/icons/Extension';\nimport DescriptionIcon from '@material-ui/icons/Description';\nimport PersonIcon from '@material-ui/icons/Person';\nimport FontDownloadIcon from '@material-ui/icons/FontDownload';\nimport EmailIcon from '@material-ui/icons/Email';\nimport CropFreeIcon from '@material-ui/icons/CropFree';\nimport NotInterestedIcon from '@material-ui/icons/NotInterested';\n\nimport { getBaseUrl } from './util';\n\n// Item types\nexport const VISUALIZATION = 'VISUALIZATION';\nexport const REPORT_TABLE = 'REPORT_TABLE';\nexport const CHART = 'CHART';\nexport const MAP = 'MAP';\nexport const EVENT_REPORT = 'EVENT_REPORT';\nexport const EVENT_CHART = 'EVENT_CHART';\nexport const APP = 'APP';\nexport const REPORTS = 'REPORTS';\nexport const RESOURCES = 'RESOURCES';\nexport const USERS = 'USERS';\nexport const MESSAGES = 'MESSAGES';\nexport const TEXT = 'TEXT';\nexport const SPACER = 'SPACER';\n\nconst DOMAIN_TYPE_AGGREGATE = 'AGGREGATE';\nconst DOMAIN_TYPE_TRACKER = 'TRACKER';\n\n// Dashboard helpers\nexport const spacerContent = 'SPACER_ITEM_FOR_DASHBOARD_LAYOUT_CONVENIENCE';\nexport const emptyTextItemContent = 'TEXT_ITEM_WITH_NO_CONTENT';\nexport const isSpacerType = item =>\n    item.type === TEXT && item.text === spacerContent;\nexport const isTextType = item =>\n    item.type === TEXT && item.text !== spacerContent;\nexport const isVisualizationType = item =>\n    !!itemTypeMap[item.type].isVisualizationType;\nexport const hasMapView = itemType =>\n    itemTypeMap[itemType].domainType === DOMAIN_TYPE_AGGREGATE;\nexport const isTrackerDomainType = itemType =>\n    itemTypeMap[itemType].domainType === DOMAIN_TYPE_TRACKER;\nexport const getDefaultItemCount = itemType =>\n    itemTypeMap[itemType].defaultItemCount || 5;\nexport const getAppName = itemType => itemTypeMap[itemType].appName || '';\n\n// Item type map\nexport const itemTypeMap = {\n    [VISUALIZATION]: {\n        id: VISUALIZATION,\n        endPointName: 'visualizations',\n        propName: 'visualization',\n        pluralTitle: i18n.t('Visualizations'),\n        appUrl: id => `dhis-web-data-visualizer/#/${id}`,\n        appName: 'Data Visualizer',\n        defaultItemCount: 10,\n    },\n    [REPORT_TABLE]: {\n        id: REPORT_TABLE,\n        endPointName: 'visualizations',\n        propName: 'visualization',\n        pluralTitle: i18n.t('Pivot tables'),\n        domainType: DOMAIN_TYPE_AGGREGATE,\n        isVisualizationType: true,\n        appUrl: id => `dhis-web-data-visualizer/#/${id}`,\n        appName: 'Data Visualizer',\n    },\n    [CHART]: {\n        id: CHART,\n        endPointName: 'visualizations',\n        propName: 'visualization',\n        pluralTitle: i18n.t('Charts'),\n        domainType: DOMAIN_TYPE_AGGREGATE,\n        isVisualizationType: true,\n        appUrl: id => `dhis-web-data-visualizer/#/${id}`,\n        appName: 'Data Visualizer',\n    },\n    [MAP]: {\n        id: MAP,\n        endPointName: 'maps',\n        propName: 'map',\n        pluralTitle: i18n.t('Maps'),\n        domainType: DOMAIN_TYPE_AGGREGATE,\n        isVisualizationType: true,\n        appUrl: id => `dhis-web-maps/?id=${id}`,\n        appName: 'Maps',\n    },\n    [EVENT_REPORT]: {\n        id: EVENT_REPORT,\n        endPointName: 'eventReports',\n        propName: 'eventReport',\n        pluralTitle: i18n.t('Event reports'),\n        domainType: DOMAIN_TYPE_TRACKER,\n        isVisualizationType: true,\n        appUrl: id => `dhis-web-event-reports/?id=${id}`,\n        appName: 'Event Reports',\n    },\n    [EVENT_CHART]: {\n        id: EVENT_CHART,\n        endPointName: 'eventCharts',\n        propName: 'eventChart',\n        pluralTitle: i18n.t('Event charts'),\n        domainType: DOMAIN_TYPE_TRACKER,\n        isVisualizationType: true,\n        appUrl: id => `dhis-web-event-visualizer/?id=${id}`,\n        appName: 'Event Visualizer',\n    },\n    [APP]: {\n        endPointName: 'apps',\n        propName: 'appKey',\n        pluralTitle: i18n.t('Apps'),\n    },\n    [REPORTS]: {\n        id: REPORTS,\n        endPointName: 'reports',\n        propName: 'reports',\n        pluralTitle: i18n.t('Reports'),\n        appUrl: id =>\n            `dhis-web-reporting/getReportParams.action?mode=report&uid=${id}`,\n    },\n    [RESOURCES]: {\n        id: RESOURCES,\n        endPointName: 'resources',\n        propName: 'resources',\n        pluralTitle: i18n.t('Resources'),\n        appUrl: id => `api/documents/${id}/data`,\n    },\n    [USERS]: {\n        id: USERS,\n        endPointName: 'users',\n        propName: 'users',\n        pluralTitle: i18n.t('Users'),\n        appUrl: id => `dhis-web-dashboard-integration/profile.action?id=${id}`,\n    },\n    [TEXT]: {\n        id: TEXT,\n        propName: 'text',\n    },\n    [MESSAGES]: {\n        propName: 'messages',\n    },\n    [SPACER]: {\n        propName: 'text',\n    },\n};\n\nexport const getEndPointName = type => itemTypeMap[type].endPointName;\n\nexport const getItemUrl = (type, item, d2) => {\n    let url;\n\n    if (type === APP) {\n        url = item.launchUrl;\n    }\n\n    if (itemTypeMap[type] && itemTypeMap[type].appUrl) {\n        url = `${getBaseUrl(d2)}/${itemTypeMap[type].appUrl(item.id)}`;\n    }\n\n    return url;\n};\n\nexport const getItemIcon = type => {\n    switch (type) {\n        case REPORT_TABLE:\n        case EVENT_REPORT:\n        case REPORTS:\n            return TableIcon;\n        case CHART:\n        case EVENT_CHART:\n            return ChartIcon;\n        case MAP:\n            return MapIcon;\n        case APP:\n            return ExtensionIcon;\n        case RESOURCES:\n            return DescriptionIcon;\n        case USERS:\n            return PersonIcon;\n        case TEXT:\n            return FontDownloadIcon;\n        case MESSAGES:\n            return EmailIcon;\n        case SPACER:\n            return CropFreeIcon;\n        default:\n            return NotInterestedIcon;\n    }\n};\n","import { getInstance } from 'd2';\nimport arrayClean from 'd2-utilizr/lib/arrayClean';\n\nimport { getEndPointName } from '../modules/itemTypes';\n\n// Id, name\nexport const getIdNameFields = ({ rename } = {}) => [\n    'id',\n    `${rename ? 'displayName~rename(name)' : 'name,displayName'}`,\n];\n\n// Item\nexport const getItemFields = () => [\n    'dimensionItem~rename(id)',\n    'displayName~rename(name)',\n    'dimensionItemType',\n];\n\n// Dimension\nexport const getDimensionFields = ({ withItems }) =>\n    arrayClean([\n        'dimension',\n        'legendSet[id]',\n        'filter',\n        'programStage',\n        withItems ? `items[${getItemFields().join(',')}]` : ``,\n    ]);\n\n// Axis\nexport const getAxesFields = ({ withItems }) => [\n    `columns[${getDimensionFields({ withItems }).join(',')}]`,\n    `rows[${getDimensionFields({ withItems }).join(',')}]`,\n    `filters[${getDimensionFields({ withItems }).join(',')}]`,\n];\n\n// Favorite\nexport const getFavoriteFields = ({ withDimensions, withOptions }) => {\n    return arrayClean([\n        `${getIdNameFields({ rename: true }).join(',')}`,\n        'displayDescription~rename(description)',\n        withDimensions ? `${getAxesFields({ withItems: true }).join(',')}` : ``,\n        withOptions\n            ? [\n                  '*',\n                  '!attributeDimensions',\n                  '!attributeValues',\n                  '!category',\n                  '!categoryDimensions',\n                  '!categoryOptionGroupSetDimensions',\n                  '!columnDimensions',\n                  '!dataDimensionItems',\n                  '!dataElementDimensions',\n                  '!dataElementGroupSetDimensions',\n                  '!filterDimensions',\n                  '!itemOrganisationUnitGroups',\n                  '!lastUpdatedBy',\n                  '!organisationUnitGroupSetDimensions',\n                  '!organisationUnitLevels',\n                  '!organisationUnits',\n                  '!programIndicatorDimensions',\n                  '!relativePeriods',\n                  '!reportParams',\n                  '!rowDimensions',\n                  '!series',\n                  '!translations',\n                  '!userOrganisationUnit',\n                  '!userOrganisationUnitChildren',\n                  '!userOrganisationUnitGrandChildren',\n              ].join(',')\n            : '',\n    ]);\n};\n\nexport const getFavoritesFields = ({ withDimensions }) => [\n    `reportTable[${getFavoriteFields({ withDimensions }).join(',')}]`,\n    `chart[${['type', ...getFavoriteFields({ withDimensions })].join(',')}]`,\n    `map[${getFavoriteFields({ withDimensions }).join(',')}]`,\n    `eventReport[${getFavoriteFields({ withDimensions }).join(',')}]`,\n    `eventChart[${getFavoriteFields({ withDimensions }).join(',')}]`,\n];\n\n// List item\nexport const getListItemFields = () => [\n    `reports[${getIdNameFields({ rename: true }).join(',')}]`,\n    `resources[${getIdNameFields({ rename: true }).join(',')}]`,\n    `users[${getIdNameFields({ rename: true }).join(',')}]`,\n];\n\n// Map\nexport const getMapFields = () => [\n    `${getIdNameFields({ rename: true }).join(',')}`,\n    'user,longitude,latitude,zoom,basemap',\n    `mapViews[${getFavoriteFields({\n        withDimensions: true,\n        withOptions: true,\n    })}]`,\n];\n\n// Api\n\n// Get more info about the favorite of a dashboard item\nexport const apiFetchFavorite = (id, type, { fields }) =>\n    getInstance().then(d2 =>\n        d2.Api.getApi().get(`${getEndPointName(type)}/${id}`, {\n            fields:\n                fields ||\n                getFavoriteFields({\n                    withDimensions: true,\n                    withOptions: true,\n                }),\n        })\n    );\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"Item_list__2oHc1\",\"item\":\"Item_item__lO40M\",\"itemicon\":\"Item_itemicon__dv5ah\",\"link\":\"Item_link__2gULT\",\"deleteicon\":\"Item_deleteicon__3c7bl\",\"deletebutton\":\"Item_deletebutton__1DfY5\"};","export const RECEIVED_USER = 'RECEIVED_USER';\n\nexport const DEFAULT_STATE_USER = {\n    id: '',\n    username: '',\n    uiLocale: '',\n    isSuperuser: false,\n};\n\nexport default (state = DEFAULT_STATE_USER, action) => {\n    switch (action.type) {\n        case RECEIVED_USER: {\n            return fromD2ToUserObj(action.value);\n        }\n        default:\n            return state;\n    }\n};\n\nfunction fromD2ToUserObj(d2Object) {\n    return {\n        id: d2Object.id,\n        username: d2Object.username,\n        uiLocale: d2Object.settings.keyUiLocale,\n        isSuperuser: d2Object.authorities.has('ALL'),\n    };\n}\n\n// selectors\n\nexport const sGetUserId = state => state.user.id;\nexport const sGetUserUsername = state => state.user.username;\nexport const sGetIsSuperuser = state => state.user.isSuperuser;\nexport const sGetUiLocale = state => state.user.uiLocale;\n","/** @module reducers/dashboards */\n\nimport arrayFrom from 'd2-utilizr/lib/arrayFrom';\nimport arraySort from 'd2-utilizr/lib/arraySort';\n\nimport { orArray, orObject } from '../modules/util';\nimport {\n    SPACER,\n    isSpacerType,\n    isTextType,\n    emptyTextItemContent,\n    REPORT_TABLE,\n    CHART,\n    VISUALIZATION,\n} from '../modules/itemTypes';\n\nexport const SET_DASHBOARDS = 'SET_DASHBOARDS';\nexport const ADD_DASHBOARDS = 'ADD_DASHBOARDS';\nexport const SET_DASHBOARD_STARRED = 'SET_DASHBOARD_STARRED';\nexport const SET_DASHBOARD_DISPLAY_NAME = 'SET_DASHBOARD_DISPLAY_NAME';\nexport const SET_DASHBOARD_ITEMS = 'SET_DASHBOARD_ITEMS';\n\nexport const DEFAULT_STATE_DASHBOARDS = {\n    byId: null,\n    items: [],\n};\n\n// reducer helper functions\n\nconst updateDashboardProp = ({ state, dashboardId, prop, value }) => ({\n    byId: {\n        ...state.byId,\n        [dashboardId]: {\n            ...state.byId[dashboardId],\n            [prop]: value,\n        },\n    },\n    items: state.items,\n});\n\n/**\n * Reducer that computes and returns the new state based on the given action\n * @function\n * @param {Object} state The current state\n * @param {Object} action The action to be evaluated\n * @returns {Object}\n */\nexport default (state = DEFAULT_STATE_DASHBOARDS, action) => {\n    switch (action.type) {\n        case SET_DASHBOARDS: {\n            return {\n                byId: action.value,\n                items: [],\n            };\n        }\n        case ADD_DASHBOARDS: {\n            return {\n                ...state,\n                byId: {\n                    ...state.byId,\n                    ...action.value,\n                },\n            };\n        }\n        case SET_DASHBOARD_STARRED: {\n            return updateDashboardProp({\n                state,\n                dashboardId: action.dashboardId,\n                prop: 'starred',\n                value: action.value,\n            });\n        }\n        case SET_DASHBOARD_DISPLAY_NAME: {\n            return updateDashboardProp({\n                state,\n                dashboardId: action.dashboardId,\n                prop: 'displayName',\n                value: action.value,\n            });\n        }\n        case SET_DASHBOARD_ITEMS: {\n            return {\n                ...state,\n                items: action.value,\n            };\n        }\n        default:\n            return state;\n    }\n};\n\n// root selector\n\nexport const sGetDashboardsRoot = state => state.dashboards;\n\n// selector level 1\n\n/**\n * Selector which returns a dashboard by id from the state object\n * If no matching dashboard is found it returns undefined\n * If dashboards.byId is null, then the dashboards api request\n * has not yet completed. If dashboards.byId is an empty object\n * then the dashboards api request is complete, but no dashboards\n * were returned\n *\n * @function\n * @param {Object} state The current state\n * @param {Number} id The id of the dashboard\n * @returns {Object | undefined}\n */\nexport const sGetDashboardById = (state, id) =>\n    orObject(sGetDashboardsRoot(state).byId)[id];\n\nexport const sDashboardsIsFetching = state => {\n    return sGetDashboardsRoot(state).byId === null;\n};\n\n/**\n * Selector which returns all dashboards (the byId object)\n *\n * @function\n * @param {Object} state The current state\n * @returns {Object | undefined}\n */\nexport const sGetAllDashboards = state =>\n    orObject(sGetDashboardsRoot(state).byId);\n\n/**\n * Selector which returns the current dashboard items\n *\n * @function\n * @param {Object} state The current state\n * @returns {Array}\n */\nexport const sGetDashboardItems = state => sGetDashboardsRoot(state).items;\n\n// selector level 2\n\nexport const sGetStarredDashboards = state =>\n    Object.values(sGetAllDashboards(state)).filter(\n        dashboard => dashboard.starred === true\n    );\n\nexport const sGetUnstarredDashboards = state =>\n    Object.values(sGetAllDashboards(state)).filter(\n        dashboard => dashboard.starred === false\n    );\n\n// selector level 3\n\nexport const sGetStarredDashboardIds = state => {\n    return sGetStarredDashboards(state).map(dashboard => dashboard.id);\n};\n\nexport const sGetUnstarredDashboardIds = state =>\n    sGetUnstarredDashboards(state).map(dashboard => dashboard.id);\n\nexport const sGetDashboardsSortedByStarred = state => [\n    ...arraySort(sGetStarredDashboards(state), 'ASC', 'displayName'),\n    ...arraySort(sGetUnstarredDashboards(state), 'ASC', 'displayName'),\n];\n\n// utils\n\n/**\n * Returns the array of dashboards, customized for ui\n * @function\n * @param {Array} data The original dashboard list\n * @returns {Array}\n */\nexport const getCustomDashboards = data => {\n    const uiItems = items =>\n        items.map(item => {\n            let type = isSpacerType(item) ? SPACER : item.type;\n\n            // TODO: temporary fix before 2.34 epic branch is merged\n            // if \"VISUALIZATION\", reset to \"REPORT_TABLE\" or \"CHART\"\n            if (type === VISUALIZATION) {\n                type = item.reportTable\n                    ? REPORT_TABLE\n                    : item.chart\n                    ? CHART\n                    : type;\n            }\n\n            const text = isTextType(item)\n                ? item.text === emptyTextItemContent\n                    ? ''\n                    : item.text\n                : null;\n\n            return {\n                ...item,\n                ...(text !== null ? { text } : {}),\n                type,\n            };\n        });\n\n    return arrayFrom(data).map(d => ({\n        id: d.id,\n        name: d.name,\n        displayName: d.displayName,\n        description: d.description,\n        displayDescription: d.displayDescription,\n        starred: d.favorite,\n        owner: d.user.name,\n        created: d.created\n            .split('T')\n            .join(' ')\n            .substr(0, 16),\n        lastUpdated: d.lastUpdated\n            .split('T')\n            .join(' ')\n            .substr(0, 16),\n        access: d.access,\n        numberOfItems: orArray(d.dashboardItems).length,\n        dashboardItems: uiItems(d.dashboardItems),\n    }));\n};\n","/** @module reducers/editDashboard */\nimport update from 'immutability-helper';\nimport isEmpty from 'lodash/isEmpty';\nimport { orArray, orObject } from '../modules/util';\n\nexport const RECEIVED_EDIT_DASHBOARD = 'RECEIVED_EDIT_DASHBOARD';\nexport const RECEIVED_NOT_EDITING = 'RECEIVED_NOT_EDITING';\nexport const START_NEW_DASHBOARD = 'START_NEW_DASHBOARD';\nexport const RECEIVED_TITLE = 'RECEIVED_TITLE';\nexport const RECEIVED_DESCRIPTION = 'RECEIVED_DESCRIPTION';\nexport const ADD_DASHBOARD_ITEM = 'ADD_DASHBOARD_ITEM';\nexport const REMOVE_DASHBOARD_ITEM = 'REMOVE_DASHBOARD_ITEM';\nexport const UPDATE_DASHBOARD_ITEM = 'UPDATE_DASHBOARD_ITEM';\nexport const RECEIVED_DASHBOARD_LAYOUT = 'RECEIVED_DASHBOARD_LAYOUT';\n\nexport const DEFAULT_STATE_EDIT_DASHBOARD = {};\nexport const NEW_DASHBOARD_STATE = {\n    id: '',\n    name: '',\n    access: {},\n    description: '',\n    dashboardItems: [],\n};\n\nexport default (state = DEFAULT_STATE_EDIT_DASHBOARD, action) => {\n    switch (action.type) {\n        case RECEIVED_EDIT_DASHBOARD: {\n            const newState = {};\n            Object.keys(NEW_DASHBOARD_STATE).map(\n                k => (newState[k] = action.value[k])\n            );\n            return newState;\n        }\n        case RECEIVED_NOT_EDITING:\n            return DEFAULT_STATE_EDIT_DASHBOARD;\n        case START_NEW_DASHBOARD:\n            return NEW_DASHBOARD_STATE;\n        case RECEIVED_TITLE: {\n            return Object.assign({}, state, { name: action.value });\n        }\n        case RECEIVED_DESCRIPTION: {\n            return Object.assign({}, state, {\n                description: action.value,\n            });\n        }\n        case ADD_DASHBOARD_ITEM:\n            return update(state, {\n                dashboardItems: { $unshift: [action.value] },\n            });\n        case REMOVE_DASHBOARD_ITEM: {\n            const idToRemove = action.value;\n\n            const dashboardItemIndex = state.dashboardItems.findIndex(\n                item => item.id === idToRemove\n            );\n\n            if (dashboardItemIndex > -1) {\n                return update(state, {\n                    dashboardItems: {\n                        $splice: [[dashboardItemIndex, 1]],\n                    },\n                });\n            }\n\n            return state;\n        }\n        case RECEIVED_DASHBOARD_LAYOUT: {\n            const stateItems = orArray(state.dashboardItems);\n            let layoutHasChanged = false;\n\n            const newStateItems = action.value.map(({ x, y, w, h, i }) => {\n                const stateItem = stateItems.find(si => si.id === i);\n\n                if (\n                    !(\n                        stateItem.x === x &&\n                        stateItem.y === y &&\n                        stateItem.w === w &&\n                        stateItem.h === h\n                    )\n                ) {\n                    layoutHasChanged = true;\n                    return Object.assign({}, stateItem, { w, h, x, y });\n                }\n\n                return stateItem;\n            });\n\n            return layoutHasChanged\n                ? {\n                      ...state,\n                      dashboardItems: newStateItems,\n                  }\n                : state;\n        }\n        case UPDATE_DASHBOARD_ITEM: {\n            const dashboardItem = action.value;\n\n            const dashboardItemIndex = state.dashboardItems.findIndex(\n                item => item.id === dashboardItem.id\n            );\n\n            if (dashboardItemIndex > -1) {\n                const newState = update(state, {\n                    dashboardItems: {\n                        $splice: [[dashboardItemIndex, 1, dashboardItem]],\n                    },\n                });\n\n                return newState;\n            }\n\n            return state;\n        }\n        default:\n            return state;\n    }\n};\n\n// root selector\n\nexport const sGetEditDashboardRoot = state => state.editDashboard;\n\n// selectors\n\nexport const sGetIsEditing = state => !isEmpty(state.editDashboard);\n\nexport const sGetIsNewDashboard = state => {\n    return (\n        !isEmpty(state.editDashboard) && sGetEditDashboardRoot(state).id === ''\n    );\n};\n\nexport const sGetEditDashboardItems = state =>\n    orObject(sGetEditDashboardRoot(state)).dashboardItems;\n","export const CLEAR_EDIT_ITEM_FILTERS = 'CLEAR_EDIT_ITEM_FILTERS';\nexport const REMOVE_EDIT_ITEM_FILTER = 'REMOVE_EDIT_ITEM_FILTER';\nexport const SET_EDIT_ITEM_FILTERS = 'SET_EDIT_ITEM_FILTERS';\n\nexport const DEFAULT_STATE_EDIT_ITEM_FILTERS = {};\n\nexport default (state = DEFAULT_STATE_EDIT_ITEM_FILTERS, action) => {\n    switch (action.type) {\n        case REMOVE_EDIT_ITEM_FILTER: {\n            const newState = { ...state };\n\n            delete newState[action.id];\n\n            return newState;\n        }\n        case SET_EDIT_ITEM_FILTERS: {\n            return action.filters;\n        }\n        case CLEAR_EDIT_ITEM_FILTERS: {\n            return DEFAULT_STATE_EDIT_ITEM_FILTERS;\n        }\n        default:\n            return state;\n    }\n};\n\n// selectors\n\nexport const sGetEditItemFiltersRoot = state => state.editItemFilters;\n\nexport const sGetEditFiltersKeys = state =>\n    Object.keys(sGetEditItemFiltersRoot(state));\n","/** @module reducers/selected */\nimport { combineReducers } from 'redux';\n\nimport { validateReducer } from '../modules/util';\n\nexport const SET_SELECTED_ID = 'SET_SELECTED_ID';\nexport const SET_SELECTED_ISLOADING = 'SET_SELECTED_ISLOADING';\nexport const SET_SELECTED_SHOWDESCRIPTION = 'SET_SELECTED_SHOWDESCRIPTION';\n\nexport const DEFAULT_STATE_SELECTED_ID = null;\nexport const DEFAULT_STATE_SELECTED_ISLOADING = false;\nexport const DEFAULT_STATE_SELECTED_SHOWDESCRIPTION = false;\n\n/**\n * Reducer functions that computes and returns the new state based on the given action\n * @function\n * @param {Object} state The current state\n * @param {Object} action The action to be evaluated\n */\nconst id = (state = DEFAULT_STATE_SELECTED_ID, action) => {\n    switch (action.type) {\n        case SET_SELECTED_ID:\n            return validateReducer(action.value, DEFAULT_STATE_SELECTED_ID);\n        default:\n            return state;\n    }\n};\n\nconst isLoading = (state = DEFAULT_STATE_SELECTED_ISLOADING, action) => {\n    switch (action.type) {\n        case SET_SELECTED_ISLOADING:\n            return validateReducer(\n                action.value,\n                DEFAULT_STATE_SELECTED_ISLOADING\n            );\n        default:\n            return state;\n    }\n};\n\nconst showDescription = (\n    state = DEFAULT_STATE_SELECTED_SHOWDESCRIPTION,\n    action\n) => {\n    switch (action.type) {\n        case SET_SELECTED_SHOWDESCRIPTION:\n            return validateReducer(\n                action.value,\n                DEFAULT_STATE_SELECTED_SHOWDESCRIPTION\n            );\n        default:\n            return state;\n    }\n};\n\nexport default combineReducers({\n    id,\n    isLoading,\n    showDescription,\n});\n\n// Selectors\n\nexport const sGetSelectedRoot = state => state.selected;\n\nexport const sGetSelectedId = state => sGetSelectedRoot(state).id;\n\nexport const sGetSelectedIsLoading = state => sGetSelectedRoot(state).isLoading;\n\nexport const sGetSelectedShowDescription = state =>\n    sGetSelectedRoot(state).showDescription;\n","import {\n    REMOVE_EDIT_ITEM_FILTER,\n    SET_EDIT_ITEM_FILTERS,\n    CLEAR_EDIT_ITEM_FILTERS,\n} from '../reducers/editItemFilters';\n\n// actions\n\nexport const acRemoveEditItemFilter = id => ({\n    type: REMOVE_EDIT_ITEM_FILTER,\n    id,\n});\n\nexport const acClearEditItemFilters = () => ({\n    type: CLEAR_EDIT_ITEM_FILTERS,\n});\n\nexport const acSetEditItemFilters = filters => ({\n    type: SET_EDIT_ITEM_FILTERS,\n    filters,\n});\n","export const CLEAR_ITEM_FILTERS = 'CLEAR_ITEM_FILTERS';\nexport const SET_ITEM_FILTERS = 'SET_ITEM_FILTERS';\nexport const ADD_ITEM_FILTER = 'ADD_ITEM_FILTER';\nexport const REMOVE_ITEM_FILTER = 'REMOVE_ITEM_FILTER';\n\nexport const DEFAULT_STATE_ITEM_FILTERS = {};\n\nexport default (state = DEFAULT_STATE_ITEM_FILTERS, action) => {\n    switch (action.type) {\n        case ADD_ITEM_FILTER: {\n            return {\n                ...state,\n                [action.filter.id]: action.filter.value,\n            };\n        }\n        case REMOVE_ITEM_FILTER: {\n            const newState = { ...state };\n\n            delete newState[action.id];\n\n            return newState;\n        }\n        case SET_ITEM_FILTERS: {\n            return action.filters;\n        }\n        case CLEAR_ITEM_FILTERS: {\n            return DEFAULT_STATE_ITEM_FILTERS;\n        }\n        default:\n            return state;\n    }\n};\n\n// selectors\n\nexport const sGetItemFiltersRoot = state => state.itemFilters;\n\nexport const sGetFiltersKeys = state => Object.keys(sGetItemFiltersRoot(state));\n","import {\n    ADD_ITEM_FILTER,\n    REMOVE_ITEM_FILTER,\n    SET_ITEM_FILTERS,\n    CLEAR_ITEM_FILTERS,\n} from '../reducers/itemFilters';\n\nexport const FILTER_ORG_UNIT = 'ou';\n\n// actions\n\nexport const acAddItemFilter = filter => ({\n    type: ADD_ITEM_FILTER,\n    filter,\n});\n\nexport const acRemoveItemFilter = id => ({\n    type: REMOVE_ITEM_FILTER,\n    id,\n});\n\nexport const acClearItemFilters = () => ({\n    type: CLEAR_ITEM_FILTERS,\n});\n\nexport const acSetItemFilters = filters => ({\n    type: SET_ITEM_FILTERS,\n    filters,\n});\n","import update from 'immutability-helper';\nimport { arrayToIdMap } from '../modules/util';\n\nexport const RECEIVED_MESSAGES = 'RECEIVED_MESSAGES';\n\nexport default (state = {}, action) => {\n    switch (action.type) {\n        case RECEIVED_MESSAGES: {\n            const conversations = arrayToIdMap(action.value);\n\n            const newState = update(state, { $merge: conversations });\n\n            return newState;\n        }\n        default:\n            return state;\n    }\n};\n\n// selectors\n\nexport const sGetMessagesRoot = state => state.messages;\n","import { getInstance } from 'd2';\n\nexport const getMessages = () => {\n    const fields =\n        'id,messageCount,lastUpdated,messageType,displayName,read,messages[id,read,sender[id,displayName],text,lastUpdated]';\n    const url = `/messageConversations?fields=${fields}&order=read:asc&pageSize=200`;\n    return getInstance()\n        .then(d2 => d2.Api.getApi().get(url))\n        .catch(error => console.log('Error:', error));\n};\n","export const RECEIVED_SNACKBAR_MESSAGE = 'RECEIVED_SNACKBAR_MESSAGE';\nexport const CLOSE_SNACKBAR = 'CLOSE_SNACKBAR';\n\nexport const DEFAULT_STATE_SNACKBAR = {\n    message: {},\n    duration: null,\n    open: false,\n};\n\nexport default (state = DEFAULT_STATE_SNACKBAR, action) => {\n    switch (action.type) {\n        case RECEIVED_SNACKBAR_MESSAGE: {\n            return { ...state, ...action.value };\n        }\n        case CLOSE_SNACKBAR: {\n            return DEFAULT_STATE_SNACKBAR;\n        }\n        default:\n            return state;\n    }\n};\n\n// selectors\n\nexport const sGetSnackbar = state => state.snackbar || DEFAULT_STATE_SNACKBAR;\n","import {\n    RECEIVED_SNACKBAR_MESSAGE,\n    CLOSE_SNACKBAR,\n} from '../reducers/snackbar';\n\nexport const acReceivedSnackbarMessage = value => ({\n    type: RECEIVED_SNACKBAR_MESSAGE,\n    value,\n});\n\nexport const acCloseSnackbar = () => ({\n    type: CLOSE_SNACKBAR,\n});\n","import { orObject } from '../modules/util';\nimport objectClean from 'd2-utilizr/lib/objectClean';\n\n/** @module reducers/visualizations */\n\nexport const ADD_VISUALIZATION = 'ADD_VISUALIZATION';\nexport const SET_ACTIVE_VISUALIZATION_TYPE = 'SET_ACTIVE_VISUALIZATION_TYPE';\n\nexport const DEFAULT_STATE_VISUALIZATIONS = {};\n\nconst isEmpty = p => p === undefined || p === null;\n\nexport default (state = DEFAULT_STATE_VISUALIZATIONS, action) => {\n    switch (action.type) {\n        case ADD_VISUALIZATION: {\n            return {\n                ...state,\n                [action.value.id]: objectClean(\n                    {\n                        ...orObject(state[action.value.id]),\n                        ...action.value,\n                    },\n                    isEmpty\n                ),\n            };\n        }\n        case SET_ACTIVE_VISUALIZATION_TYPE: {\n            return {\n                ...state,\n                [action.id]: objectClean(\n                    {\n                        ...orObject(state[action.id]),\n                        activeType: action.activeType,\n                    },\n                    isEmpty\n                ),\n            };\n        }\n        default:\n            return state;\n    }\n};\n\n// root selector\nexport const sGetVisualizationsRoot = state => state.visualizations;\n\n// selectors level 1\nexport const sGetVisualization = (state, id) => {\n    return sGetVisualizationsRoot(state)[id];\n};\n","import {\n    ADD_VISUALIZATION,\n    SET_ACTIVE_VISUALIZATION_TYPE,\n} from '../reducers/visualizations';\n\nexport const acAddVisualization = value => ({\n    type: ADD_VISUALIZATION,\n    value,\n});\n\nexport const acSetActiveVisualizationType = (id, activeType) => {\n    const action = {\n        type: SET_ACTIVE_VISUALIZATION_TYPE,\n        id,\n        activeType,\n    };\n\n    return action;\n};\n","import arrayClean from 'd2-utilizr/lib/arrayClean';\nimport {\n    getListItemFields,\n    getFavoritesFields,\n    getIdNameFields,\n} from './metadata';\n\n// Helper functions\n\nexport const onError = error => console.log('Error: ', error);\n\n// Dashboard item\nexport const getDashboardItemsFields = ({ withFavorite } = {}) =>\n    arrayClean([\n        'id',\n        'type',\n        'shape',\n        'x',\n        'y',\n        'width~rename(w)',\n        'height~rename(h)',\n        'messages',\n        'text',\n        'appKey',\n        `${getListItemFields().join(',')}`,\n        withFavorite\n            ? `${getFavoritesFields({\n                  withDimensions: withFavorite.withDimensions,\n              }).join(',')}`\n            : ``,\n    ]);\n\n// Dashboard\nexport const getDashboardFields = ({ withItems, withFavorite } = {}) =>\n    arrayClean([\n        `${getIdNameFields().join(',')}`,\n        'description',\n        'displayDescription',\n        'favorite',\n        `user[${getIdNameFields({ rename: true }).join(',')}]`,\n        'created',\n        'lastUpdated',\n        'access',\n        withItems\n            ? `dashboardItems[${getDashboardItemsFields({\n                  withFavorite,\n              }).join(',')}]`\n            : ``,\n    ]);\n","import { getInstance } from 'd2';\nimport arrayClean from 'd2-utilizr/lib/arrayClean';\nimport { onError, getDashboardFields } from './index';\n\n// Get \"all\" dashboards on startup\nexport const apiFetchDashboards = () =>\n    getInstance()\n        .then(d2 =>\n            d2.models.dashboard.list({\n                fields: [\n                    getDashboardFields().join(','),\n                    'dashboardItems[id]',\n                ].join(','),\n                paging: 'false',\n            })\n        )\n        .catch(onError);\n\n// Get more info about selected dashboard\nexport const apiFetchDashboard = id =>\n    getInstance()\n        .then(d2 =>\n            d2.models.dashboard.get(id, {\n                fields: arrayClean(\n                    getDashboardFields({\n                        withItems: true,\n                        withFavorite: { withDimensions: false },\n                    })\n                ).join(','),\n            })\n        )\n        .catch(onError);\n\n// Star dashboard\nexport const apiStarDashboard = (id, isStarred) => {\n    const url = `dashboards/${id}/favorite`;\n\n    getInstance().then(d2 => {\n        if (isStarred) {\n            d2.Api.getApi().post(url);\n        } else {\n            d2.Api.getApi().delete(url);\n        }\n    });\n};\n\nexport const apiDeleteDashboard = id => {\n    return getInstance()\n        .then(d2 => {\n            return d2.models.dashboards\n                .get(id)\n                .then(dashboard => dashboard.delete());\n        })\n        .catch(onError);\n};\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport Snackbar from '@material-ui/core/Snackbar';\nimport PropTypes from 'prop-types';\n\nimport { sGetSnackbar } from '../../reducers/snackbar';\nimport { acCloseSnackbar } from '../../actions/snackbar';\n\nconst LOADING_DASHBOARD = 'LOADING_DASHBOARD';\nexport const loadingDashboardMsg = { name: '', type: LOADING_DASHBOARD };\n\nconst SnackbarMessageContent = ({ message }) => {\n    if (typeof message === 'object') {\n        //future message types:  switch(message.type)\n        return (\n            <span>\n                Loading <span style={{ fontWeight: 800 }}>{message.name}</span>{' '}\n                dashboard\n            </span>\n        );\n    }\n    return message;\n};\n\nexport const SnackbarMessage = props => {\n    return (\n        <Snackbar\n            style={{ zIndex: 10001 }}\n            open={props.snackbarOpen}\n            message={<SnackbarMessageContent message={props.snackbarMessage} />}\n            autoHideDuration={props.snackbarDuration}\n            onClose={props.onCloseSnackbar}\n        />\n    );\n};\n\nconst mapStateToProps = state => {\n    const { message, duration, open } = sGetSnackbar(state);\n    return {\n        snackbarOpen: open,\n        snackbarMessage: message,\n        snackbarDuration: duration,\n    };\n};\n\nSnackbarMessage.propTypes = {\n    snackbarDuration: PropTypes.string,\n    snackbarMessage: PropTypes.object,\n    snackbarOpen: PropTypes.bool,\n    onCloseSnackbar: PropTypes.func,\n};\n\nexport default connect(\n    mapStateToProps,\n    {\n        onCloseSnackbar: acCloseSnackbar,\n    }\n)(SnackbarMessage);\n","import { getCustomDashboards, sGetDashboardById } from '../reducers/dashboards';\nimport { sGetIsEditing } from '../reducers/editDashboard';\nimport { sGetEditItemFiltersRoot } from '../reducers/editItemFilters';\nimport {\n    SET_SELECTED_ID,\n    SET_SELECTED_ISLOADING,\n    SET_SELECTED_SHOWDESCRIPTION,\n    sGetSelectedIsLoading,\n    sGetSelectedId,\n} from '../reducers/selected';\nimport { sGetUserUsername } from '../reducers/user';\n\nimport { acSetDashboardItems, acAppendDashboards } from './dashboards';\nimport { acClearEditItemFilters } from './editItemFilters';\nimport { acClearItemFilters, acSetItemFilters } from './itemFilters';\nimport { tGetMessages } from '../components/Item/MessagesItem/actions';\nimport { acReceivedSnackbarMessage, acCloseSnackbar } from './snackbar';\nimport { acAddVisualization } from './visualizations';\n\nimport { apiFetchDashboard } from '../api/dashboards';\nimport { storePreferredDashboardId } from '../api/localStorage';\n\nimport { withShape } from '../components/ItemGrid/gridUtil';\nimport { loadingDashboardMsg } from '../components/SnackbarMessage/SnackbarMessage';\nimport { extractFavorite } from '../components/Item/VisualizationItem/plugin';\n\nimport {\n    REPORT_TABLE,\n    CHART,\n    MAP,\n    EVENT_REPORT,\n    EVENT_CHART,\n    MESSAGES,\n} from '../modules/itemTypes';\nimport { orObject } from '../modules/util';\n\n// actions\n\nexport const acSetSelectedId = value => ({\n    type: SET_SELECTED_ID,\n    value,\n});\n\nexport const acSetSelectedIsLoading = value => ({\n    type: SET_SELECTED_ISLOADING,\n    value,\n});\n\nexport const acSetSelectedShowDescription = value => ({\n    type: SET_SELECTED_SHOWDESCRIPTION,\n    value,\n});\n\nexport const tLoadDashboard = id => async dispatch => {\n    try {\n        const dash = await apiFetchDashboard(id);\n\n        dispatch(acAppendDashboards(dash));\n\n        return Promise.resolve(dash);\n    } catch (err) {\n        console.log('Error: ', err);\n        return err;\n    }\n};\n\n// thunks\nexport const tSetSelectedDashboardById = id => async (dispatch, getState) => {\n    dispatch(acSetSelectedIsLoading(true));\n\n    const snackbarTimeout = setTimeout(() => {\n        const dashboardName = orObject(sGetDashboardById(getState(), id))\n            .displayName;\n        if (sGetSelectedIsLoading(getState()) && dashboardName) {\n            loadingDashboardMsg.name = dashboardName;\n\n            dispatch(\n                acReceivedSnackbarMessage({\n                    message: loadingDashboardMsg,\n                    open: true,\n                })\n            );\n        }\n    }, 500);\n\n    const onSuccess = selected => {\n        const customDashboard = getCustomDashboards(selected)[0];\n\n        dispatch(\n            acSetDashboardItems(withShape(customDashboard.dashboardItems))\n        );\n\n        storePreferredDashboardId(sGetUserUsername(getState()), id);\n\n        // add visualizations to store\n        customDashboard.dashboardItems.forEach(item => {\n            switch (item.type) {\n                case REPORT_TABLE:\n                case CHART:\n                case MAP:\n                case EVENT_REPORT:\n                case EVENT_CHART:\n                    dispatch(acAddVisualization(extractFavorite(item)));\n                    break;\n                case MESSAGES:\n                    dispatch(tGetMessages(id));\n                    break;\n                default:\n                    break;\n            }\n        });\n\n        const state = getState();\n        if (id === sGetSelectedId(state)) {\n            if (sGetIsEditing(state)) {\n                // disable filters when switching to edit mode\n                dispatch(acClearItemFilters());\n            } else {\n                // enable filters when switching to view mode\n                dispatch(acSetItemFilters(sGetEditItemFiltersRoot(state)));\n            }\n        } else {\n            // clear filters when switching dashboard\n            dispatch(acClearEditItemFilters());\n            dispatch(acClearItemFilters());\n        }\n\n        dispatch(acSetSelectedId(id));\n\n        dispatch(acSetSelectedIsLoading(false));\n\n        clearTimeout(snackbarTimeout);\n\n        dispatch(acCloseSnackbar());\n\n        return selected;\n    };\n\n    const onError = error => {\n        console.log('Error: ', error);\n        return error;\n    };\n\n    try {\n        const selected = await dispatch(tLoadDashboard(id));\n\n        return onSuccess(selected);\n    } catch (err) {\n        return onError(err);\n    }\n};\n","export const getPreferredDashboardId = username =>\n    localStorage.getItem(`dhis2.dashboard.current.${username}`) || undefined;\n\nexport const storePreferredDashboardId = (username, dashboardId) => {\n    localStorage.setItem(`dhis2.dashboard.current.${username}`, dashboardId);\n};\n","import { RECEIVED_MESSAGES } from '../../../reducers/messages';\nimport { getMessages } from '../../../api/messages';\n\nconst onError = (action, error) => {\n    console.log(`Error in action ${action}: ${error}`);\n    return error;\n};\n\nexport const receivedMessages = value => ({\n    type: RECEIVED_MESSAGES,\n    value,\n});\n\nexport const tGetMessages = () => async dispatch => {\n    try {\n        const messages = await getMessages();\n        const { messageConversations } = messages;\n\n        return dispatch(receivedMessages(messageConversations));\n    } catch (err) {\n        return onError('Get Messages', err);\n    }\n};\n","import { getInstance } from 'd2';\n\nconst onError = error => console.log('Error: ', error);\n\nconst saveDashboard = (dashboard, data) => {\n    const { name, description, dashboardItems } = data;\n\n    dashboard.name = name;\n    dashboard.description = description;\n    dashboard.dashboardItems = dashboardItems.map(item =>\n        Object.assign({}, item, { width: item.w, height: item.h })\n    );\n\n    return dashboard.save().then(msg => msg.response.uid);\n};\n\nexport const updateDashboard = data => {\n    return getInstance()\n        .then(d2 => {\n            return d2.models.dashboards\n                .get(data.id)\n                .then(dashboard => saveDashboard(dashboard, data));\n        })\n        .catch(onError);\n};\n\nexport const postDashboard = data => {\n    return getInstance().then(d2 => {\n        const dashboard = d2.models.dashboards.create();\n\n        return saveDashboard(dashboard, data);\n    });\n};\n","import { generateUid } from 'd2/uid';\n\nimport {\n    RECEIVED_EDIT_DASHBOARD,\n    START_NEW_DASHBOARD,\n    RECEIVED_NOT_EDITING,\n    RECEIVED_TITLE,\n    RECEIVED_DESCRIPTION,\n    RECEIVED_DASHBOARD_LAYOUT,\n    ADD_DASHBOARD_ITEM,\n    UPDATE_DASHBOARD_ITEM,\n    REMOVE_DASHBOARD_ITEM,\n} from '../reducers/editDashboard';\nimport { sGetEditDashboardRoot } from '../reducers/editDashboard';\nimport { updateDashboard, postDashboard } from '../api/editDashboard';\nimport { tSetSelectedDashboardById } from '../actions/selected';\nimport { NEW_ITEM_SHAPE } from '../components/ItemGrid/gridUtil';\nimport {\n    itemTypeMap,\n    isSpacerType,\n    TEXT,\n    emptyTextItemContent,\n    isTextType,\n} from '../modules/itemTypes';\n\nconst onError = error => {\n    console.log('Error (Saving Dashboard): ', error);\n    return error;\n};\n\n// actions\n\nexport const acSetEditDashboard = (dashboard, items) => {\n    const val = {\n        ...dashboard,\n        dashboardItems: items,\n    };\n\n    return {\n        type: RECEIVED_EDIT_DASHBOARD,\n        value: val,\n    };\n};\n\nexport const acSetEditNewDashboard = () => ({\n    type: START_NEW_DASHBOARD,\n});\n\nexport const acClearEditDashboard = () => ({\n    type: RECEIVED_NOT_EDITING,\n});\n\nexport const acSetDashboardTitle = value => ({\n    type: RECEIVED_TITLE,\n    value,\n});\n\nexport const acSetDashboardDescription = value => ({\n    type: RECEIVED_DESCRIPTION,\n    value,\n});\n\nexport const acUpdateDashboardLayout = value => ({\n    type: RECEIVED_DASHBOARD_LAYOUT,\n    value,\n});\n\nexport const acAddDashboardItem = item => {\n    const type = item.type;\n    delete item.type;\n    const itemPropName = itemTypeMap[type].propName;\n\n    return {\n        type: ADD_DASHBOARD_ITEM,\n        value: {\n            id: generateUid(),\n            type,\n            [itemPropName]: item.content,\n            ...NEW_ITEM_SHAPE,\n        },\n    };\n};\n\nexport const acUpdateDashboardItem = item => ({\n    type: UPDATE_DASHBOARD_ITEM,\n    value: item,\n});\n\nexport const acRemoveDashboardItem = value => ({\n    type: REMOVE_DASHBOARD_ITEM,\n    value,\n});\n\n// thunks\n\nexport const tSaveDashboard = () => async (dispatch, getState) => {\n    const dashboard = sGetEditDashboardRoot(getState());\n\n    const dashboardItems = dashboard.dashboardItems.map(item => {\n        const text = isTextType(item)\n            ? item.text || emptyTextItemContent\n            : null;\n\n        const type = isSpacerType(item) ? TEXT : item.type;\n\n        return {\n            ...item,\n            ...(text ? { text } : {}),\n            type,\n        };\n    });\n\n    const dashboardToSave = {\n        ...dashboard,\n        dashboardItems,\n    };\n\n    try {\n        const dashboardId = dashboardToSave.id\n            ? await updateDashboard(dashboardToSave)\n            : await postDashboard(dashboardToSave);\n\n        dispatch(acClearEditDashboard());\n        await dispatch(tSetSelectedDashboardById(dashboardId));\n\n        return Promise.resolve(dashboardId);\n    } catch (error) {\n        onError(error);\n    }\n};\n","import {\n    SET_DASHBOARDS,\n    ADD_DASHBOARDS,\n    SET_DASHBOARD_STARRED,\n    SET_DASHBOARD_DISPLAY_NAME,\n    SET_DASHBOARD_ITEMS,\n} from '../reducers/dashboards';\nimport {\n    getCustomDashboards,\n    sGetDashboardById,\n    sGetDashboardsSortedByStarred,\n} from '../reducers/dashboards';\nimport { sGetUserUsername } from '../reducers/user';\nimport { tSetSelectedDashboardById, acSetSelectedId } from './selected';\nimport { acClearEditDashboard } from './editDashboard';\nimport {\n    apiFetchDashboards,\n    apiStarDashboard,\n    apiDeleteDashboard,\n} from '../api/dashboards';\nimport { getPreferredDashboardId } from '../api/localStorage';\nimport { arrayToIdMap } from '../modules/util';\n\n// actions\n\nexport const acSetDashboards = dashboards => ({\n    type: SET_DASHBOARDS,\n    value: arrayToIdMap(getCustomDashboards(dashboards)),\n});\n\nexport const acAppendDashboards = dashboards => ({\n    type: ADD_DASHBOARDS,\n    value: arrayToIdMap(getCustomDashboards(dashboards)),\n});\n\nexport const acSetDashboardStarred = (dashboardId, isStarred) => ({\n    type: SET_DASHBOARD_STARRED,\n    dashboardId: dashboardId,\n    value: isStarred,\n});\n\nexport const acSetDashboardDisplayName = (dashboardId, value) => ({\n    type: SET_DASHBOARD_DISPLAY_NAME,\n    dashboardId,\n    value,\n});\n\nexport const acSetDashboardItems = value => ({\n    type: SET_DASHBOARD_ITEMS,\n    value,\n});\n\n// thunks\n\nexport const tFetchDashboards = () => async dispatch => {\n    const collection = await apiFetchDashboards();\n    dispatch(acSetDashboards(collection.toArray()));\n};\n\nexport const tSelectDashboard = id => async (dispatch, getState) => {\n    const onError = error => {\n        console.log('Error (apiFetchDashboards): ', error);\n        return error;\n    };\n\n    try {\n        const state = getState();\n\n        let dashboardToSelect = null;\n        if (id) {\n            dashboardToSelect = sGetDashboardById(state, id) || null;\n        } else {\n            const preferredId = getPreferredDashboardId(\n                sGetUserUsername(state)\n            );\n            const dash = sGetDashboardById(state, preferredId);\n            dashboardToSelect =\n                preferredId && dash\n                    ? dash\n                    : sGetDashboardsSortedByStarred(state)[0];\n        }\n\n        if (dashboardToSelect) {\n            dispatch(tSetSelectedDashboardById(dashboardToSelect.id));\n        } else {\n            dispatch(acSetSelectedId());\n        }\n    } catch (err) {\n        return onError(err);\n    }\n};\n\nexport const tStarDashboard = (id, isStarred) => async dispatch => {\n    const onSuccess = id => {\n        dispatch(acSetDashboardStarred(id, isStarred));\n        return id;\n    };\n\n    const onError = error => {\n        console.log('Error (apiStarDashboard): ', error);\n        return error;\n    };\n    try {\n        await apiStarDashboard(id, isStarred);\n        return onSuccess(id);\n    } catch (err) {\n        return onError(err);\n    }\n};\n\nexport const tDeleteDashboard = id => async dispatch => {\n    try {\n        await apiDeleteDashboard(id);\n        dispatch(acClearEditDashboard());\n        dispatch(acSetSelectedId());\n        dispatch(acSetDashboardItems([]));\n\n        await dispatch(tFetchDashboards());\n\n        return Promise.resolve();\n    } catch (err) {\n        console.log('Error (deleteDashboard): ', err);\n        return err;\n    }\n};\n","/** @module reducers/controlBar */\nimport { combineReducers } from 'redux';\nimport { validateReducer } from '../modules/util';\n\nexport const SET_CONTROLBAR_USER_ROWS = 'SET_CONTROLBAR_USER_ROWS';\n\nexport const DEFAULT_STATE_CONTROLBAR_ROWS = 1;\n\nconst userRows = (state = DEFAULT_STATE_CONTROLBAR_ROWS, action) => {\n    switch (action.type) {\n        case SET_CONTROLBAR_USER_ROWS:\n            return validateReducer(action.value, DEFAULT_STATE_CONTROLBAR_ROWS);\n        default:\n            return state;\n    }\n};\n\nexport default combineReducers({\n    userRows,\n});\n\n/**\n * Selectors that point to specific props in the state object\n * @function\n * @param {Object} state\n * @returns {Object}\n */\nexport const sGetControlBarRoot = state => state.controlBar;\n\n// Selector dependency level 2\n\nexport const sGetControlBarUserRows = state =>\n    sGetControlBarRoot(state).userRows;\n","import { getInstance } from 'd2';\nimport { DEFAULT_STATE_CONTROLBAR_ROWS } from '../reducers/controlBar';\n\nconst NAMESPACE = 'dashboard';\nconst KEY = 'controlBarRows';\n\nconst hasNamespace = async d2 => await d2.currentUser.dataStore.has(NAMESPACE);\n\nconst getNamespace = async (d2, hasNamespace) =>\n    hasNamespace\n        ? await d2.currentUser.dataStore.get(NAMESPACE)\n        : await d2.currentUser.dataStore.create(NAMESPACE);\n\nexport const apiGetControlBarRows = async () => {\n    const d2 = await getInstance();\n    const namespace = await getNamespace(d2, await hasNamespace(d2));\n    const hasKey = namespace.keys && namespace.keys.find(key => key === KEY);\n\n    if (hasKey) {\n        return await namespace.get(KEY);\n    } else {\n        await apiPostControlBarRows(DEFAULT_STATE_CONTROLBAR_ROWS, namespace);\n        console.log(\n            '(These errors to /userDataStore/dashboard can be ignored)'\n        );\n        return DEFAULT_STATE_CONTROLBAR_ROWS;\n    }\n};\n\nexport const apiPostControlBarRows = async (rows, namespace) => {\n    const d2 = await getInstance();\n    const ns = namespace || (await getNamespace(d2, hasNamespace));\n\n    ns.set(KEY, rows);\n};\n","import { SET_CONTROLBAR_USER_ROWS } from '../reducers/controlBar';\nimport { apiGetControlBarRows } from '../api/controlBar';\n\n// actions\n\nexport const acSetControlBarUserRows = rows => ({\n    type: SET_CONTROLBAR_USER_ROWS,\n    value: rows,\n});\n\n// thunks\n\nexport const tSetControlBarRows = () => async dispatch => {\n    const onSuccess = rows => {\n        dispatch(acSetControlBarUserRows(rows));\n    };\n\n    const onError = error => {\n        console.log('Error (apiGetControlBarRows): ', error);\n        return error;\n    };\n\n    try {\n        const controlBarRows = await apiGetControlBarRows();\n        return onSuccess(controlBarRows);\n    } catch (err) {\n        return onError(err);\n    }\n};\n","import {\n    getDimensionById,\n    DIMENSION_ID_PERIOD,\n    DIMENSION_ID_ORGUNIT,\n} from '@dhis2/analytics';\n\nexport const SET_DIMENSIONS = 'SET_DIMENSIONS';\nexport const DEFAULT_DIMENSIONS = [\n    getDimensionById(DIMENSION_ID_PERIOD),\n    getDimensionById(DIMENSION_ID_ORGUNIT),\n];\n\nexport default (state = DEFAULT_DIMENSIONS, action) => {\n    switch (action.type) {\n        case SET_DIMENSIONS: {\n            return [...DEFAULT_DIMENSIONS, ...action.value];\n        }\n        default:\n            return state;\n    }\n};\n\nexport const sGetDimensions = state => state.dimensions;\n","export const SET_SETTINGS = 'SET_SETTINGS';\nexport const ADD_SETTINGS = 'ADD_SETTINGS';\n\nexport const DEFAULT_SETTINGS = {\n    keyDateFormat: 'yyyy-MM-dd',\n    keyAnalysisRelativePeriod: 'LAST_12_MONTHS',\n    keyAnalysisDigitGroupSeparator: 'SPACE',\n    displayNameProperty: 'displayName',\n    uiLocale: 'en',\n    rootOrganisationUnit: {},\n};\n\nexport default (state = DEFAULT_SETTINGS, action) => {\n    switch (action.type) {\n        case SET_SETTINGS: {\n            return Object.assign({}, action.value);\n        }\n        case ADD_SETTINGS: {\n            return {\n                ...state,\n                ...action.value,\n            };\n        }\n        default:\n            return state;\n    }\n};\n\n// Selectors\n\nexport const sGetSettings = state => state.settings;\n\nexport const sGetSettingsDisplayNameProperty = state =>\n    sGetSettings(state).displayNameProperty;\n\nexport const sGetRootOrgUnit = state =>\n    sGetSettings(state).rootOrganisationUnit;\n\nexport const sGetRelativePeriod = state =>\n    sGetSettings(state).keyAnalysisRelativePeriod;\n\nexport const sGetUiLocale = state => sGetSettings(state).uiLocale;\n","import { SET_DIMENSIONS } from '../reducers/dimensions';\nimport { apiFetchDimensions } from '@dhis2/analytics';\nimport { sGetSettingsDisplayNameProperty } from '../reducers/settings';\n\nexport const acSetDimensions = dimensions => ({\n    type: SET_DIMENSIONS,\n    value: dimensions,\n});\n\nexport const tSetDimensions = d2 => async (dispatch, getState) => {\n    const onSuccess = dimensions => {\n        dispatch(acSetDimensions(dimensions));\n    };\n\n    const onError = error => {\n        console.log('Error (apiFetchDimensions): ', error);\n        return error;\n    };\n\n    try {\n        const displayNameProp = sGetSettingsDisplayNameProperty(getState());\n        const dimensions = await apiFetchDimensions(d2, displayNameProp);\n\n        // filter out CATEGORY that are not of type ATTRIBUTE\n        const filteredDimensions = dimensions.filter(\n            dim =>\n                dim.dimensionType !== 'CATEGORY' ||\n                (dim.dimensionType === 'CATEGORY' &&\n                    dim.dataDimensionType === 'ATTRIBUTE')\n        );\n        return onSuccess(filteredDimensions);\n    } catch (err) {\n        return onError(err);\n    }\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport i18n from '@dhis2/d2-i18n';\nimport { colors } from '@dhis2/ui-core';\nimport { withStyles } from '@material-ui/core/styles';\n\nexport const SHOWMORE_BAR_HEIGHT = 16;\n\nconst styles = {\n    showMore: {\n        color: colors.grey700,\n        cursor: 'pointer',\n        fontSize: 11,\n        paddingTop: 5,\n        '&:hover': {\n            textDecoration: 'underline',\n        },\n    },\n    disabled: {\n        paddingTop: 5,\n        color: colors.grey500,\n        fontSize: 11,\n        cursor: 'not-allowed',\n    },\n};\n\nexport const ShowMoreButton = ({ onClick, isMaxHeight, classes, disabled }) => {\n    return (\n        <div style={{ textAlign: 'center' }}>\n            {disabled ? (\n                <div className={classes.disabled}>{i18n.t('Show more')}</div>\n            ) : (\n                <div className={classes.showMore} onClick={onClick}>\n                    {isMaxHeight ? i18n.t('Show less') : i18n.t('Show more')}\n                </div>\n            )}\n        </div>\n    );\n};\n\nShowMoreButton.propTypes = {\n    classes: PropTypes.object,\n    disabled: PropTypes.bool,\n    isMaxHeight: PropTypes.bool,\n    onClick: PropTypes.func,\n};\n\nexport default withStyles(styles)(ShowMoreButton);\n","import { SHOWMORE_BAR_HEIGHT } from './ShowMoreButton';\n\nexport const CONTROL_BAR_ROW_HEIGHT = 40;\nexport const FIRST_ROW_PADDING_HEIGHT = 10;\nexport const MIN_ROW_COUNT = 1;\n\nexport const HEADERBAR_HEIGHT = 48;\n\nconst CONTROL_BAR_OUTER_HEIGHT_DIFF =\n    FIRST_ROW_PADDING_HEIGHT + SHOWMORE_BAR_HEIGHT - 2; // 2 pixel \"adjustment\"\n\nexport const getRowsHeight = rows => {\n    return rows * CONTROL_BAR_ROW_HEIGHT;\n};\n\nexport const getNumRowsFromHeight = height => {\n    return Math.floor(\n        (height - CONTROL_BAR_OUTER_HEIGHT_DIFF) / CONTROL_BAR_ROW_HEIGHT\n    );\n};\n\nexport const getTopOffset = rows => {\n    return HEADERBAR_HEIGHT + getControlBarHeight(rows, false);\n};\n\nexport const getControlBarHeight = rows => {\n    return getRowsHeight(rows) + CONTROL_BAR_OUTER_HEIGHT_DIFF;\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { colors } from '@dhis2/ui-core';\nimport { HEADERBAR_HEIGHT } from './controlBarDimensions';\n\nimport classes from './styles/ControlBar.module.css';\n\nconst DRAG_HANDLE_HEIGHT = 7;\n\nclass ControlBar extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            dragging: false,\n        };\n    }\n\n    onStartDrag = () => {\n        this.setState({ dragging: true });\n        window.addEventListener('mousemove', this.onDrag);\n        window.addEventListener('mouseup', this.onEndDrag);\n    };\n\n    onDrag = event => {\n        event.preventDefault();\n        event.stopPropagation();\n\n        const newHeight = event.clientY;\n\n        if (\n            this.props.onChangeHeight &&\n            newHeight !== this.props.height &&\n            newHeight > 0\n        ) {\n            requestAnimationFrame(() => {\n                this.props.onChangeHeight(newHeight);\n            });\n        }\n    };\n\n    onEndDrag = () => {\n        this.setState({ dragging: false });\n        window.removeEventListener('mousemove', this.onDrag);\n        window.removeEventListener('mouseup', this.onEndDrag);\n\n        if (this.props.onEndDrag) {\n            this.props.onEndDrag();\n        }\n    };\n\n    renderDragHandle() {\n        return typeof this.props.onChangeHeight === 'function' ? (\n            <div\n                className={classes.draghandle}\n                style={{ height: DRAG_HANDLE_HEIGHT }}\n                onMouseDown={this.onStartDrag}\n            />\n        ) : null;\n    }\n\n    render() {\n        const height = Math.max(this.props.height, 0) + DRAG_HANDLE_HEIGHT;\n\n        const rootStyle = Object.assign(\n            {\n                height,\n                top: HEADERBAR_HEIGHT,\n                backgroundColor: this.props.editMode\n                    ? colors.yellow050\n                    : colors.white,\n                paddingBottom: DRAG_HANDLE_HEIGHT,\n            },\n            // Disable animations while dragging\n            this.state.dragging ? { transition: 'none' } : {}\n        );\n\n        return (\n            <div style={rootStyle} className={classes.root}>\n                <div className={classes.content}>{this.props.children}</div>\n                {this.renderDragHandle()}\n            </div>\n        );\n    }\n}\n\nControlBar.propTypes = {\n    /**\n     * The height of the control bar in number of lines. Must be a positive integer.\n     */\n    children: PropTypes.node.isRequired,\n\n    /**\n     * If true, the background color of the control bar changes to indicate that edit mode is active.\n     */\n    editMode: PropTypes.bool.isRequired,\n\n    /**\n     * Callback function that is called when the control bar is resized.\n     * The callback receives one argument: The new height in pixels.\n     *\n     * If no callback is specified the control bar will not have a drag handle.\n     */\n    height: PropTypes.number.isRequired,\n\n    /**\n     * Callback function that is called when the control bar is dropped after being dragged.\n     * The callback receives one argument: The new height in pixels.\n     *\n     * Ignored if no \"onChangeHeight\" function is provided.\n     */\n    onChangeHeight: PropTypes.func,\n\n    /**\n     * The contents of the control bar.\n     */\n    onEndDrag: PropTypes.func,\n};\n\nControlBar.defaultProps = {\n    onChangeHeight: null,\n    onEndDrag: null,\n};\n\nexport default ControlBar;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst StarIcon = ({ className }) => (\n    <svg\n        className={className}\n        xmlns=\"http://www.w3.org/2000/svg\"\n        viewBox=\"0 0 24 24\"\n    >\n        <path d=\"M0 0h24v24H0z\" fill=\"none\" />\n        <path d=\"M12 17.27L18.18 21l-1.64-7.03L22 9.24l-7.19-.61L12 2 9.19 8.63 2 9.24l5.46 4.73L5.82 21z\" />\n        <path d=\"M0 0h24v24H0z\" fill=\"none\" />\n    </svg>\n);\n\nStarIcon.propTypes = {\n    className: PropTypes.string,\n};\n\nexport default StarIcon;\n","import { getInstance } from 'd2';\n\nexport const apiPostDataStatistics = async (eventType, id) => {\n    const d2 = await getInstance();\n    const url = `dataStatistics?eventType=${eventType}&favorite=${id}`;\n\n    d2.Api.getApi().post(url);\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport { Chip, colors } from '@dhis2/ui-core';\nimport { Link } from 'react-router-dom';\nimport debounce from 'lodash/debounce';\n\nimport StarIcon from '../../icons/Star';\nimport { apiPostDataStatistics } from '../../api/dataStatistics';\n\nconst styles = {\n    chip: {\n        margin: '3px',\n    },\n    link: {\n        color: colors.grey600,\n        display: 'inline-block',\n        textDecoration: 'none',\n        verticalAlign: 'top',\n    },\n    icon: {\n        height: '20px',\n        marginTop: '2px',\n        width: '20px',\n    },\n    selected: {\n        fill: colors.white,\n    },\n    unselected: {\n        fill: colors.grey700,\n    },\n};\n\nexport const DashboardItemChip = ({\n    starred,\n    selected,\n    label,\n    dashboardId,\n    classes,\n}) => {\n    const chipProps = {\n        selected,\n        className: classes.chip,\n    };\n\n    if (starred) {\n        const selectedState = selected ? classes.selected : classes.unselected;\n        chipProps.icon = (\n            <StarIcon className={`${classes.icon} ${selectedState}`} />\n        );\n    }\n\n    return (\n        <Link\n            className={classes.link}\n            to={`/${dashboardId}`}\n            onClick={debounce(\n                () => apiPostDataStatistics('DASHBOARD_VIEW', dashboardId),\n                500\n            )}\n        >\n            <Chip {...chipProps}>{label}</Chip>\n        </Link>\n    );\n};\n\nDashboardItemChip.propTypes = {\n    dashboardId: PropTypes.string.isRequired,\n    label: PropTypes.string.isRequired,\n    selected: PropTypes.bool.isRequired,\n    starred: PropTypes.bool.isRequired,\n    classes: PropTypes.object,\n};\n\nexport default withStyles(styles)(DashboardItemChip);\n","import React from 'react';\nimport { colors } from '@dhis2/ui-core';\n\nconst AddCircleIcon = () => (\n    <svg\n        xmlns=\"http://www.w3.org/2000/svg\"\n        width=\"32\"\n        height=\"32\"\n        fill={colors.teal600}\n        viewBox=\"0 0 24 24\"\n    >\n        <path d=\"M12 2C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2zm4 11h-3v3c0 .55-.45 1-1 1s-1-.45-1-1v-3H8c-.55 0-1-.45-1-1s.45-1 1-1h3V8c0-.55.45-1 1-1s1 .45 1 1v3h3c.55 0 1 .45 1 1s-.45 1-1 1z\" />\n    </svg>\n);\n\nexport default AddCircleIcon;\n","import React from 'react';\nimport { colors } from '@dhis2/ui-core';\nimport PropTypes from 'prop-types';\n\nconst ClearIcon = ({ className }) => (\n    <svg\n        className={className}\n        fill={colors.grey800}\n        xmlns=\"http://www.w3.org/2000/svg\"\n        viewBox=\"0 0 24 24\"\n    >\n        <path d=\"M19 6.41L17.59 5 12 10.59 6.41 5 5 6.41 10.59 12 5 17.59 6.41 19 12 13.41 17.59 19 19 17.59 13.41 12z\" />\n        <path d=\"M0 0h24v24H0z\" fill=\"none\" />\n    </svg>\n);\n\nClearIcon.propTypes = {\n    className: PropTypes.string,\n};\n\nexport default ClearIcon;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport ClearIcon from '../../icons/Clear';\n\nimport classes from './styles/ClearButton.module.css';\n\nexport const ClearButton = ({ onClear }) => (\n    <button className={classes.button} onClick={onClear}>\n        <span>\n            <ClearIcon className={classes.icon} color=\"action\" />\n        </span>\n    </button>\n);\n\nClearButton.propTypes = {\n    onClear: PropTypes.func.isRequired,\n};\n\nexport default ClearButton;\n","import { combineReducers } from 'redux';\nimport { validateReducer } from '../modules/util';\n\nexport const SET_DASHBOARDS_FILTER_NAME = 'SET_DASHBOARDS_FILTER_NAME';\nexport const SET_DASHBOARDS_FILTER_OWNER = 'SET_DASHBOARDS_FILTER_OWNER';\nexport const SET_DASHBOARDS_FILTER_ORDER = 'SET_DASHBOARDS_FILTER_ORDER';\n\nexport const ownerData = [\n    { id: 'ALL', value: 'All users' },\n    { id: 'ME', value: 'Created by me' },\n    { id: 'OTHERS', value: 'Created by others' },\n];\n\nexport const orderData = [\n    { id: 'NAME:ASC', value: 'Name (asc)' },\n    { id: 'NAME:ASC', value: 'Name (desc)' },\n    { id: 'ITEMS:ASC', value: 'Number of items (asc)' },\n    { id: 'ITEMS:ASC', value: 'Number of items (desc)' },\n    { id: 'CREATED:ASC', value: 'Created date (asc)' },\n    { id: 'CREATED:ASC', value: 'Created date (desc)' },\n];\n\nexport const DEFAULT_STATE_DASHBOARDS_FILTER_NAME = '';\nexport const DEFAULT_STATE_DASHBOARDS_FILTER_OWNER = ownerData[0].id;\nexport const DEFAULT_STATE_DASHBOARDS_FILTER_ORDER = orderData[0].id;\n\nconst name = (state = DEFAULT_STATE_DASHBOARDS_FILTER_NAME, action) => {\n    switch (action.type) {\n        case SET_DASHBOARDS_FILTER_NAME:\n            return validateReducer(\n                action.value,\n                DEFAULT_STATE_DASHBOARDS_FILTER_NAME\n            );\n        default:\n            return state;\n    }\n};\n\nconst owner = (state = DEFAULT_STATE_DASHBOARDS_FILTER_OWNER, action) => {\n    switch (action.type) {\n        case SET_DASHBOARDS_FILTER_OWNER:\n            return validateReducer(\n                action.value,\n                DEFAULT_STATE_DASHBOARDS_FILTER_NAME\n            );\n        default:\n            return state;\n    }\n};\n\nconst order = (state = DEFAULT_STATE_DASHBOARDS_FILTER_ORDER, action) => {\n    switch (action.type) {\n        case SET_DASHBOARDS_FILTER_ORDER:\n            return validateReducer(\n                action.value,\n                DEFAULT_STATE_DASHBOARDS_FILTER_ORDER\n            );\n        default:\n            return state;\n    }\n};\n\nexport default combineReducers({\n    name,\n    owner,\n    order,\n});\n\n// selectors\n\nexport const sGetDashboardsFilterRoot = state => state.dashboardsFilter;\n\n// selector dependency level 2\n\nexport const sGetFilterName = state => sGetDashboardsFilterRoot(state).name;\nexport const sGetFilterOwner = state => sGetDashboardsFilterRoot(state).owner;\nexport const sGetFilterOrder = state => sGetDashboardsFilterRoot(state).order;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport i18n from '@dhis2/d2-i18n';\nimport InputField from '@material-ui/core/Input';\nimport InputAdornment from '@material-ui/core/InputAdornment';\nimport SearchIcon from '@material-ui/icons/Search';\nimport { colors } from '@dhis2/ui-core';\n\nimport ClearButton from './ClearButton';\nimport { DEFAULT_STATE_DASHBOARDS_FILTER_NAME } from '../../reducers/dashboardsFilter';\n\nexport const KEYCODE_ENTER = 13;\nexport const KEYCODE_ESCAPE = 27;\n\nconst styles = {\n    filterField: {\n        fontSize: '14px',\n        width: '200px',\n        height: '30px',\n        top: '-4px',\n    },\n    searchIcon: {\n        color: colors.grey700,\n        width: '20px',\n        height: '20px',\n    },\n};\n\nexport class Filter extends Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            value: DEFAULT_STATE_DASHBOARDS_FILTER_NAME,\n        };\n    }\n\n    componentWillReceiveProps(nextProps) {\n        this.setState({\n            value: nextProps.name,\n        });\n    }\n\n    setFilterValue = event => {\n        event.preventDefault();\n\n        this.props.onChangeName(event.target.value);\n    };\n\n    handleKeyUp = event => {\n        switch (event.keyCode) {\n            case KEYCODE_ENTER:\n                this.props.onKeypressEnter();\n                break;\n            case KEYCODE_ESCAPE:\n                this.props.onChangeName();\n                break;\n            default:\n                break;\n        }\n    };\n\n    render() {\n        const { classes, name, onChangeName } = this.props;\n\n        const startAdornment = (\n            <InputAdornment position=\"start\">\n                <SearchIcon className={classes.searchIcon} />\n            </InputAdornment>\n        );\n\n        const endAdornment =\n            name !== '' && name !== null ? (\n                <InputAdornment position=\"end\">\n                    <ClearButton onClear={() => onChangeName()} />\n                </InputAdornment>\n            ) : null;\n\n        return (\n            <InputField\n                className={classes.filterField}\n                placeholder={i18n.t('Search for a dashboard')}\n                startAdornment={startAdornment}\n                endAdornment={endAdornment}\n                value={this.state.value}\n                onChange={this.setFilterValue}\n                onKeyUp={this.handleKeyUp}\n            />\n        );\n    }\n}\n\nFilter.propTypes = {\n    classes: PropTypes.object,\n    name: PropTypes.string,\n    onChangeName: PropTypes.func,\n    onKeypressEnter: PropTypes.func,\n};\n\nFilter.defaultProps = {\n    name: '',\n    onChangeName: Function.prototype,\n};\n\nexport default withStyles(styles)(Filter);\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { Link, withRouter } from 'react-router-dom';\nimport ControlBar from './ControlBar';\nimport arraySort from 'd2-utilizr/lib/arraySort';\nimport PropTypes from 'prop-types';\n\nimport Chip from './DashboardItemChip';\nimport AddCircleIcon from '../../icons/AddCircle';\nimport Filter from './Filter';\nimport ShowMoreButton from './ShowMoreButton';\nimport {\n    FIRST_ROW_PADDING_HEIGHT,\n    MIN_ROW_COUNT,\n    getRowsHeight,\n    getControlBarHeight,\n    getNumRowsFromHeight,\n} from './controlBarDimensions';\nimport { sGetControlBarUserRows } from '../../reducers/controlBar';\nimport { sGetAllDashboards } from '../../reducers/dashboards';\nimport { sGetFilterName } from '../../reducers/dashboardsFilter';\nimport { sGetSelectedId } from '../../reducers/selected';\nimport { acSetControlBarUserRows } from '../../actions/controlBar';\nimport { acSetFilterName } from '../../actions/dashboardsFilter';\nimport { orObject, orArray } from '../../modules/util';\nimport { apiPostControlBarRows } from '../../api/controlBar';\n\nimport classes from './styles/DashboardsBar.module.css';\n\nexport const MAX_ROW_COUNT = 10;\n\nexport class DashboardsBar extends Component {\n    state = {\n        rows: MIN_ROW_COUNT,\n    };\n\n    setInitialDashboardState = rows => {\n        this.setState({ rows, isMaxHeight: rows === MAX_ROW_COUNT });\n    };\n\n    componentDidMount() {\n        this.setInitialDashboardState(this.props.userRows);\n    }\n\n    componentWillReceiveProps(nextProps) {\n        this.setInitialDashboardState(nextProps.userRows);\n    }\n\n    onChangeHeight = newHeight => {\n        const adjustedHeight = newHeight - 52; // don't rush the transition to a bigger row count\n        const newRows = Math.max(\n            MIN_ROW_COUNT,\n            getNumRowsFromHeight(adjustedHeight)\n        );\n\n        if (newRows !== this.state.rows) {\n            const newRowCount = Math.min(newRows, MAX_ROW_COUNT);\n\n            this.props.onChangeHeight(newRowCount);\n        }\n    };\n\n    onEndDrag = () => {\n        return apiPostControlBarRows(this.state.rows);\n    };\n\n    onToggleMaxHeight = () => {\n        const rows =\n            this.state.rows === MAX_ROW_COUNT\n                ? this.props.userRows\n                : MAX_ROW_COUNT;\n\n        this.setState({ rows, isMaxHeight: !this.state.isMaxHeight });\n    };\n\n    onSelectDashboard = () => {\n        this.props.history.push(`/${this.props.dashboards[0].id}`);\n    };\n\n    render() {\n        const { dashboards, name, selectedId, onChangeFilterName } = this.props;\n\n        const rowCount = this.state.isMaxHeight\n            ? MAX_ROW_COUNT\n            : this.state.rows;\n        const controlBarHeight = getControlBarHeight(rowCount);\n        const contentWrapperStyle = {\n            padding: `${FIRST_ROW_PADDING_HEIGHT}px 6px 0 6px`,\n            overflowY: this.state.isMaxHeight ? 'auto' : 'hidden',\n            height: getRowsHeight(rowCount) + FIRST_ROW_PADDING_HEIGHT,\n        };\n\n        return (\n            <ControlBar\n                height={controlBarHeight}\n                onChangeHeight={this.onChangeHeight}\n                onEndDrag={this.onEndDrag}\n                editMode={false}\n            >\n                <div style={contentWrapperStyle}>\n                    <div className={classes.leftControls}>\n                        <Link\n                            style={{\n                                display: 'inline-block',\n                                textDecoration: 'none',\n                                marginRight: 10,\n                                position: 'relative',\n                                top: '2px',\n                            }}\n                            to={'/new'}\n                        >\n                            <AddCircleIcon />\n                        </Link>\n                        <Filter\n                            name={name}\n                            onChangeName={onChangeFilterName}\n                            onKeypressEnter={this.onSelectDashboard}\n                        />\n                    </div>\n                    {orArray(dashboards).map(dashboard => (\n                        <Chip\n                            key={dashboard.id}\n                            label={dashboard.displayName}\n                            starred={dashboard.starred}\n                            dashboardId={dashboard.id}\n                            selected={dashboard.id === selectedId}\n                        />\n                    ))}\n                </div>\n                <ShowMoreButton\n                    onClick={this.onToggleMaxHeight}\n                    isMaxHeight={this.state.isMaxHeight}\n                    disabled={this.props.userRows === MAX_ROW_COUNT}\n                />\n            </ControlBar>\n        );\n    }\n}\n\nconst mapStateToProps = state => ({\n    dashboards: sGetAllDashboards(state),\n    name: sGetFilterName(state),\n    userRows: sGetControlBarUserRows(state),\n    selectedId: sGetSelectedId(state),\n});\n\nconst mapDispatchToProps = {\n    onChangeHeight: acSetControlBarUserRows,\n    onChangeFilterName: acSetFilterName,\n};\nconst mergeProps = (stateProps, dispatchProps, ownProps) => {\n    const dashboards = Object.values(orObject(stateProps.dashboards));\n    const displayDashboards = arraySort(\n        dashboards.filter(d =>\n            d.displayName.toLowerCase().includes(stateProps.name.toLowerCase())\n        ),\n        'ASC',\n        'displayName'\n    );\n\n    return {\n        ...stateProps,\n        ...ownProps,\n        ...dispatchProps,\n        dashboards: [\n            ...displayDashboards.filter(d => d.starred),\n            ...displayDashboards.filter(d => !d.starred),\n        ],\n    };\n};\n\nDashboardsBar.propTypes = {\n    dashboards: PropTypes.array,\n    history: PropTypes.object,\n    name: PropTypes.string,\n    selectedId: PropTypes.string,\n    userRows: PropTypes.number,\n    onChangeFilterName: PropTypes.func,\n    onChangeHeight: PropTypes.func,\n};\n\nexport default withRouter(\n    connect(\n        mapStateToProps,\n        mapDispatchToProps,\n        mergeProps\n    )(DashboardsBar)\n);\n","import {\n    SET_DASHBOARDS_FILTER_NAME,\n    SET_DASHBOARDS_FILTER_OWNER,\n    SET_DASHBOARDS_FILTER_ORDER,\n} from '../reducers/dashboardsFilter';\n\n// actions\n\nexport const acSetFilterName = value => ({\n    type: SET_DASHBOARDS_FILTER_NAME,\n    value,\n});\n\nexport const acSetFilterOwner = value => ({\n    type: SET_DASHBOARDS_FILTER_OWNER,\n    value,\n});\n\nexport const acSetFilterOrder = value => ({\n    type: SET_DASHBOARDS_FILTER_ORDER,\n    value,\n});\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\n\nimport {\n    getTopOffset,\n    MIN_ROW_COUNT,\n} from '../ControlBar/controlBarDimensions';\nimport { sGetControlBarUserRows } from '../../reducers/controlBar';\n\nconst DashboardVerticalOffset = props => {\n    const rows = props.editMode ? MIN_ROW_COUNT : props.userRows;\n    const marginTop = getTopOffset(rows);\n\n    return <div className=\"page-container-top-margin\" style={{ marginTop }} />;\n};\n\nconst mapStateToProps = state => ({\n    userRows: sGetControlBarUserRows(state),\n});\n\nDashboardVerticalOffset.propTypes = {\n    editMode: PropTypes.bool,\n    userRows: PropTypes.number,\n};\n\nexport default connect(mapStateToProps)(DashboardVerticalOffset);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { MenuItem, colors } from '@dhis2/ui-core';\n\nconst HeaderMenuItem = ({ title }) => (\n    <MenuItem\n        dense\n        key={title}\n        disabled\n        label={\n            <p style={{ color: colors.grey800, fontWeight: '600' }}>{title}</p>\n        }\n    />\n);\n\nHeaderMenuItem.propTypes = {\n    title: PropTypes.string.isRequired,\n};\n\nexport default HeaderMenuItem;\n","import React from 'react';\nimport { colors } from '@dhis2/ui-core';\nimport PropTypes from 'prop-types';\n\nconst LaunchIcon = ({ className }) => (\n    <svg\n        className={className}\n        xmlns=\"http://www.w3.org/2000/svg\"\n        width=\"12\"\n        height=\"12\"\n        fill={colors.grey600}\n        viewBox=\"0 0 24 24\"\n    >\n        <path d=\"M0 0h24v24H0z\" fill=\"none\" />\n        <path d=\"M19 19H5V5h7V3H5c-1.11 0-2 .9-2 2v14c0 1.1.89 2 2 2h14c1.1 0 2-.9 2-2v-7h-2v7zM14 3v2h3.59l-9.83 9.83 1.41 1.41L19 6.41V10h2V3h-7z\" />\n    </svg>\n);\n\nLaunchIcon.propTypes = {\n    className: PropTypes.string,\n};\n\nexport default LaunchIcon;\n","import React from 'react';\nimport { MenuItem, colors } from '@dhis2/ui-core';\nimport i18n from '@dhis2/d2-i18n';\nimport PropTypes from 'prop-types';\nimport { visTypeIcons } from '@dhis2/analytics';\n\nimport { getItemIcon, VISUALIZATION } from '../../modules/itemTypes';\nimport LaunchIcon from '../../icons/Launch';\n\nimport classes from './styles/ContentMenuItem.module.css';\n\nconst LaunchLink = ({ url }) => (\n    <a\n        onClick={e => e.stopPropagation()}\n        className={classes.launchLink}\n        target=\"_blank\"\n        rel=\"noopener noreferrer\"\n        href={url}\n    >\n        <LaunchIcon />\n    </a>\n);\n\nLaunchLink.propTypes = {\n    url: PropTypes.string,\n};\n\nconst InsertButton = () => (\n    <button className={classes.buttonInsert}>{i18n.t('Insert')}</button>\n);\n\nconst ContentMenuItem = ({ type, name, onInsert, url, visType }) => {\n    const ItemIcon = getItemIcon(type);\n\n    const renderedItemIcon =\n        type === VISUALIZATION ? (\n            visTypeIcons[visType]\n        ) : (\n            <ItemIcon style={{ fill: colors.grey600 }} />\n        );\n\n    return (\n        <MenuItem\n            dense\n            onClick={onInsert}\n            label={\n                <div className={classes.menuItem}>\n                    <div className={classes.label}>\n                        <span style={{ margin: '6px' }}>\n                            {renderedItemIcon}\n                        </span>\n                        <span>{name}</span>\n                        {url ? <LaunchLink url={url} /> : null}\n                    </div>\n                    <InsertButton />\n                </div>\n            }\n        />\n    );\n};\n\nContentMenuItem.propTypes = {\n    name: PropTypes.string,\n    type: PropTypes.string,\n    url: PropTypes.string,\n    visType: PropTypes.string,\n    onInsert: PropTypes.func,\n};\n\nexport default ContentMenuItem;\n","import i18n from '@dhis2/d2-i18n';\nimport {\n    spacerContent,\n    VISUALIZATION,\n    MAP,\n    EVENT_CHART,\n    EVENT_REPORT,\n    USERS,\n    REPORTS,\n    RESOURCES,\n    APP,\n    MESSAGES,\n    TEXT,\n    SPACER,\n} from '../../modules/itemTypes';\n\nexport const singleItems = [\n    {\n        id: 'additional',\n        header: i18n.t('Additional items'),\n        items: [\n            {\n                type: TEXT,\n                name: i18n.t('Text box'),\n                content: '',\n            },\n            {\n                type: MESSAGES,\n                name: i18n.t('Messages'),\n                content: 'true',\n            },\n            {\n                type: SPACER,\n                name: i18n.t('Spacer'),\n                content: spacerContent,\n            },\n        ],\n    },\n];\n\n// categorizedItems are grouped in the item selector menu\nexport const categorizedItems = [\n    VISUALIZATION,\n    MAP,\n    EVENT_REPORT,\n    EVENT_CHART,\n    USERS,\n    REPORTS,\n    RESOURCES,\n    APP,\n];\n\n// listItemTypes are included in a single dashboard item\nexport const listItemTypes = [REPORTS, RESOURCES, USERS];\n","import React, { Component, Fragment } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport i18n from '@dhis2/d2-i18n';\nimport { MenuItem, Divider } from '@dhis2/ui-core';\n\nimport HeaderMenuItem from './HeaderMenuItem';\nimport ContentMenuItem from './ContentMenuItem';\n\nimport { tAddListItemContent } from './actions';\nimport { acAddDashboardItem } from '../../actions/editDashboard';\nimport { getItemUrl, APP, VISUALIZATION } from '../../modules/itemTypes';\nimport { categorizedItems, listItemTypes } from './selectableItems';\n\nimport classes from './styles/CategorizedMenuGroup.module.css';\n\nclass CategorizedMenuGroup extends Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            seeMore: false,\n        };\n    }\n\n    addItem = item => () => {\n        const { type, acAddDashboardItem, tAddListItemContent } = this.props;\n\n        if (type === APP) {\n            acAddDashboardItem({ type, content: item.key });\n        } else {\n            const newItem = {\n                id: item.id,\n                name: item.displayName || item.name,\n            };\n\n            if (listItemTypes.includes(type)) {\n                tAddListItemContent(type, newItem);\n            } else {\n                acAddDashboardItem({ type, content: newItem });\n            }\n        }\n    };\n\n    toggleSeeMore = () => {\n        this.setState({ seeMore: !this.state.seeMore });\n\n        this.props.onChangeItemsLimit(this.props.type);\n    };\n\n    render() {\n        const { title, type, items, hasMore } = this.props;\n        return (\n            <Fragment>\n                <HeaderMenuItem title={title} />\n                {items.map(item => {\n                    const itemUrl = getItemUrl(type, item, this.context.d2);\n                    return (\n                        <ContentMenuItem\n                            key={item.id || item.key}\n                            type={type}\n                            visType={type === VISUALIZATION ? item.type : type}\n                            name={item.displayName || item.name}\n                            onInsert={this.addItem(item)}\n                            url={itemUrl}\n                        />\n                    );\n                })}\n                {hasMore ? (\n                    <MenuItem\n                        dense\n                        key={`showmore${title}`}\n                        onClick={this.toggleSeeMore}\n                        label={\n                            <button className={classes.showMoreButton}>\n                                {this.state.seeMore\n                                    ? i18n.t('Show fewer')\n                                    : i18n.t('Show more')}\n                            </button>\n                        }\n                    />\n                ) : null}\n                <Divider margin=\"8px 0px\" />\n            </Fragment>\n        );\n    }\n}\n\nCategorizedMenuGroup.propTypes = {\n    items: PropTypes.array.isRequired,\n    title: PropTypes.string.isRequired,\n    type: PropTypes.oneOf(categorizedItems).isRequired,\n    onChangeItemsLimit: PropTypes.func.isRequired,\n    acAddDashboardItem: PropTypes.func,\n    hasMore: PropTypes.bool,\n    tAddListItemContent: PropTypes.func,\n};\n\nCategorizedMenuGroup.contextTypes = {\n    d2: PropTypes.object.isRequired,\n};\n\nexport default connect(\n    null,\n    {\n        acAddDashboardItem,\n        tAddListItemContent,\n    }\n)(CategorizedMenuGroup);\n","import { sGetEditDashboardRoot } from '../../reducers/editDashboard';\nimport { itemTypeMap } from '../../modules/itemTypes';\nimport {\n    acAddDashboardItem,\n    acUpdateDashboardItem,\n} from '../../actions/editDashboard';\n\nexport const tAddListItemContent = (type, content) => (dispatch, getState) => {\n    const state = getState();\n    const listItemType = itemTypeMap[type].propName;\n    const dashboardItems = sGetEditDashboardRoot(state).dashboardItems;\n    const dashboardItemIndex = dashboardItems.findIndex(\n        item => item.type === type\n    );\n    let dashboardItem;\n\n    // Reports/Resources/Users dashboard item type already present in dashboard\n    if (dashboardItemIndex > -1) {\n        dashboardItem = dashboardItems[dashboardItemIndex];\n        dashboardItem[listItemType].push(content);\n\n        dispatch(acUpdateDashboardItem(dashboardItem));\n    } else {\n        dashboardItem = {\n            type: type,\n            content: [content],\n        };\n\n        dispatch(acAddDashboardItem(dashboardItem));\n    }\n};\n","import React, { Fragment } from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\n\nimport HeaderMenuItem from './HeaderMenuItem';\nimport ContentMenuItem from './ContentMenuItem';\nimport { acAddDashboardItem } from '../../actions/editDashboard';\n\nexport const SinglesMenuGroup = ({ acAddDashboardItem, category }) => {\n    const addToDashboard = ({ type, content }) => () => {\n        acAddDashboardItem({ type, content });\n    };\n\n    return (\n        <Fragment>\n            <HeaderMenuItem title={category.header} />\n            {category.items.map(item => (\n                <ContentMenuItem\n                    key={item.type}\n                    type={item.type}\n                    name={item.name}\n                    onInsert={addToDashboard(item)}\n                />\n            ))}\n        </Fragment>\n    );\n};\n\nSinglesMenuGroup.propTypes = {\n    acAddDashboardItem: PropTypes.func,\n    category: PropTypes.object,\n};\n\nexport default connect(\n    null,\n    { acAddDashboardItem }\n)(SinglesMenuGroup);\n","import React, { Fragment } from 'react';\nimport PropTypes from 'prop-types';\nimport i18n from '@dhis2/d2-i18n';\nimport Popover from '@material-ui/core/Popover';\nimport { InputField, Menu } from '@dhis2/ui-core';\n\nimport CategorizedMenuGroup from './CategorizedMenuGroup';\nimport SinglesMenuGroup from './SinglesMenuGroup';\nimport { singleItems, categorizedItems } from './selectableItems';\nimport { itemTypeMap, getDefaultItemCount } from '../../modules/itemTypes';\n\nimport './styles/ItemSelector.css';\n\nconst ItemSearchField = props => (\n    <InputField\n        name=\"Dashboard item search\"\n        label={i18n.t('Search for items to add to this dashboard')}\n        type=\"text\"\n        onChange={props.onChange}\n        onFocus={props.onFocus}\n        value={props.value}\n    />\n);\n\nclass ItemSelector extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            anchorEl: null,\n            open: false,\n            maxOptions: new Set(),\n            items: undefined,\n            filter: '',\n        };\n    }\n\n    closeList = () => {\n        this.setState({ open: false, filter: '' });\n    };\n\n    openList = (_, event) => {\n        this.fetchItems();\n\n        this.setState({\n            anchorEl: event.currentTarget,\n            open: true,\n        });\n    };\n\n    setFilter = (_, event) => {\n        this.setState({ filter: event.target.value }, this.fetchItems);\n    };\n\n    getCategorizedMenuGroups = () =>\n        categorizedItems\n            .filter(type => {\n                const itemType = itemTypeMap[type];\n                return (\n                    this.state.items && this.state.items[itemType.endPointName]\n                );\n            })\n            .map(type => {\n                const itemType = itemTypeMap[type];\n                const itemCount = getDefaultItemCount(type);\n                const allItems = this.state.items[itemType.endPointName];\n                const hasMore = allItems.length > itemCount;\n                const items = this.state.maxOptions.has(itemType.id)\n                    ? allItems\n                    : allItems.slice(0, itemCount);\n\n                return (\n                    <CategorizedMenuGroup\n                        key={type}\n                        type={type}\n                        title={itemType.pluralTitle}\n                        items={items}\n                        onChangeItemsLimit={this.fetchItems}\n                        hasMore={hasMore}\n                    />\n                );\n            });\n\n    getSinglesMenuGroups = () =>\n        singleItems.map(category => (\n            <SinglesMenuGroup key={category.id} category={category} />\n        ));\n\n    getMenuGroups = () =>\n        this.getCategorizedMenuGroups().concat(this.getSinglesMenuGroups());\n\n    fetchItems = async type => {\n        if (type) {\n            const maxOptions = this.state.maxOptions;\n\n            if (maxOptions.has(type)) {\n                maxOptions.delete(type);\n            } else {\n                maxOptions.add(type);\n            }\n\n            this.setState({ maxOptions });\n        } else {\n            this.setState({\n                maxOptions: new Set(),\n            });\n        }\n\n        let queryString = '?count=11';\n        if ([...this.state.maxOptions.values()].length) {\n            queryString +=\n                '&max=' + [...this.state.maxOptions.values()].join('&max=');\n        }\n\n        const filter = this.state.filter ? `/${this.state.filter}` : '';\n\n        this.context.d2.Api.getApi()\n            .get(`dashboards/q${filter}${queryString}`)\n            .then(response => this.setState({ items: response }))\n            .catch(console.error);\n    };\n\n    render() {\n        return (\n            <Fragment>\n                <ItemSearchField\n                    value={this.state.filter}\n                    onChange={this.setFilter}\n                    onFocus={this.openList}\n                />\n                <Popover\n                    className=\"dashboard-item-selector\"\n                    open={this.state.open}\n                    onClose={this.closeList}\n                    anchorEl={this.state.anchorEl}\n                    anchorOrigin={{ horizontal: 'left', vertical: 'bottom' }}\n                    transformOrigin={{ horizontal: 'left', vertical: 'top' }}\n                    style={{ height: '70vh' }}\n                    PaperProps={{ style: { width: '700px' } }}\n                    disableAutoFocus={true}\n                    disableRestoreFocus={true}\n                >\n                    <Menu>{this.getMenuGroups()}</Menu>\n                </Popover>\n            </Fragment>\n        );\n    }\n}\n\nItemSearchField.propTypes = {\n    value: PropTypes.string,\n    onChange: PropTypes.func,\n    onFocus: PropTypes.func,\n};\n\nItemSelector.contextTypes = {\n    d2: PropTypes.object.isRequired,\n};\n\nexport default ItemSelector;\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport i18n from '@dhis2/d2-i18n';\nimport { InputField, TextAreaField } from '@dhis2/ui-core';\n\nimport ItemSelector from '../ItemSelector/ItemSelector';\nimport {\n    acSetDashboardTitle,\n    acSetDashboardDescription,\n} from '../../actions/editDashboard';\nimport { orObject } from '../../modules/util';\nimport { sGetEditDashboardRoot } from '../../reducers/editDashboard';\n\nconst styles = {\n    section: { display: 'flex', justifyContent: 'space-between' },\n    titleDescription: {\n        flex: '3',\n        marginRight: '50px',\n    },\n    title: {\n        display: 'block',\n        clear: 'both',\n    },\n    description: {\n        display: 'block',\n        clear: 'both',\n        marginTop: '15px',\n    },\n    underline: {\n        '&::before': {\n            borderBottom: `none`,\n        },\n        '&:hover::before': {\n            borderBottom: `none!important`,\n        },\n    },\n    input: {\n        backgroundColor: 'rgba(0, 0, 10, 0.05)',\n        borderRadius: '4px',\n        width: '100%',\n        '&:hover': {\n            backgroundColor: 'rgba(0, 0, 10, 0.08)',\n        },\n    },\n    itemSelector: {\n        flex: '2',\n        position: 'relative',\n    },\n};\n\nexport const EditTitleBar = ({\n    name,\n    description,\n    onChangeTitle,\n    onChangeDescription,\n    classes,\n}) => {\n    const updateTitle = (_, e) => {\n        onChangeTitle(e.target.value);\n    };\n\n    const updateDescription = (_, e) => {\n        onChangeDescription(e.target.value);\n    };\n\n    return (\n        <section className={classes.section}>\n            <div className={classes.titleDescription}>\n                <InputField\n                    className={classes.title}\n                    name=\"Dashboard title input\"\n                    label={i18n.t('Dashboard title')}\n                    type=\"text\"\n                    onChange={updateTitle}\n                    value={name}\n                />\n                <TextAreaField\n                    className={classes.description}\n                    name=\"Dashboard description input\"\n                    label={i18n.t('Dashboard description')}\n                    onChange={updateDescription}\n                    value={description}\n                />\n            </div>\n            <div className={classes.itemSelector}>\n                <ItemSelector />\n            </div>\n        </section>\n    );\n};\n\nconst mapStateToProps = state => {\n    const selectedDashboard = orObject(sGetEditDashboardRoot(state));\n\n    return {\n        name: selectedDashboard.name,\n        description: selectedDashboard.description,\n    };\n};\n\nconst mapDispatchToProps = {\n    onChangeTitle: acSetDashboardTitle,\n    onChangeDescription: acSetDashboardDescription,\n};\n\nexport default connect(\n    mapStateToProps,\n    mapDispatchToProps\n)(withStyles(styles)(EditTitleBar));\n\nEditTitleBar.propTypes = {\n    onChangeDescription: PropTypes.func.isRequired,\n    onChangeTitle: PropTypes.func.isRequired,\n    classes: PropTypes.object,\n    description: PropTypes.string,\n    name: PropTypes.string,\n};\n\nEditTitleBar.defaultProps = {\n    name: '',\n    description: '',\n};\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nimport { Button } from '@dhis2/ui-core';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\n\nimport i18n from '@dhis2/d2-i18n';\n\nimport {\n    PeriodDimension,\n    DynamicDimension,\n    OrgUnitDimension,\n    DIMENSION_ID_PERIOD,\n    DIMENSION_ID_ORGUNIT,\n} from '@dhis2/analytics';\n\nconst peId = DIMENSION_ID_PERIOD;\nconst ouId = DIMENSION_ID_ORGUNIT;\n\nclass FilterDialog extends Component {\n    onConfirm = id => () => this.props.onConfirm(id);\n\n    dialogContent() {\n        const { displayNameProperty, dimension, selectedItems } = this.props;\n        const dialogId = dimension.id;\n\n        const commonProps = {\n            d2: this.context.d2,\n            onSelect: this.props.onSelect,\n            onDeselect: this.props.onDeselect,\n            onReorder: this.props.onReorder,\n        };\n\n        switch (dialogId) {\n            case peId: {\n                return (\n                    <PeriodDimension\n                        selectedPeriods={selectedItems}\n                        {...commonProps}\n                    />\n                );\n            }\n            case ouId:\n                return (\n                    <OrgUnitDimension\n                        displayNameProperty={displayNameProperty}\n                        ouItems={selectedItems}\n                        {...commonProps}\n                    />\n                );\n            default:\n                return (\n                    <DynamicDimension\n                        selectedItems={selectedItems}\n                        dialogId={dialogId}\n                        dialogTitle={dimension.name}\n                        {...commonProps}\n                    />\n                );\n        }\n    }\n\n    render() {\n        const { dimension, onClose } = this.props;\n        const dialogId = dimension.id;\n\n        return (\n            <Dialog\n                open={!!dialogId}\n                maxWidth=\"lg\"\n                disableEnforceFocus\n                onClose={onClose}\n            >\n                {dialogId && this.dialogContent()}\n                <DialogActions>\n                    <Button kind=\"secondary\" onClick={onClose}>\n                        {i18n.t('Cancel')}\n                    </Button>\n                    <Button kind=\"primary\" onClick={this.onConfirm(dialogId)}>\n                        {i18n.t('Confirm')}\n                    </Button>\n                </DialogActions>\n            </Dialog>\n        );\n    }\n}\n\nFilterDialog.propTypes = {\n    dimension: PropTypes.object,\n    displayNameProperty: PropTypes.string,\n    selectedItems: PropTypes.array,\n    onClose: PropTypes.func,\n    onConfirm: PropTypes.func,\n    onDeselect: PropTypes.func,\n    onReorder: PropTypes.func,\n    onSelect: PropTypes.func,\n};\n\nFilterDialog.contextTypes = {\n    d2: PropTypes.object,\n};\n\nexport default FilterDialog;\n","export const SET_ACTIVE_MODAL_DIMENSION = 'SET_ACTIVE_MODAL_DIMENSION';\nexport const CLEAR_ACTIVE_MODAL_DIMENSION = 'CLEAR_ACTIVE_MODAL_DIMENSION';\n\nexport const DEFAULT_STATE_ACTIVE_MODAL_DIMENSION = {};\n\nexport default (state = DEFAULT_STATE_ACTIVE_MODAL_DIMENSION, action) => {\n    switch (action.type) {\n        case SET_ACTIVE_MODAL_DIMENSION: {\n            return action.value;\n        }\n        case CLEAR_ACTIVE_MODAL_DIMENSION: {\n            return DEFAULT_STATE_ACTIVE_MODAL_DIMENSION;\n        }\n        default:\n            return state;\n    }\n};\n\nexport const sGetActiveModalDimension = state => state.activeModalDimension;\n","import {\n    SET_ACTIVE_MODAL_DIMENSION,\n    CLEAR_ACTIVE_MODAL_DIMENSION,\n} from '../reducers/activeModalDimension';\n\nexport const acSetActiveModalDimension = value => ({\n    type: SET_ACTIVE_MODAL_DIMENSION,\n    value,\n});\n\nexport const acClearActiveModalDimension = () => ({\n    type: CLEAR_ACTIVE_MODAL_DIMENSION,\n});\n","import React, { Component, Fragment } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport Popover from '@material-ui/core/Popover';\nimport ArrowDropDownIcon from '@material-ui/icons/ArrowDropDown';\nimport { withTheme } from '@material-ui/core/styles';\n\nimport i18n from '@dhis2/d2-i18n';\nimport { DimensionsPanel } from '@dhis2/analytics';\n\nimport { Button } from '@dhis2/ui-core';\nimport FilterDialog from './FilterDialog';\n\nimport { sGetSettingsDisplayNameProperty } from '../../reducers/settings';\nimport { sGetActiveModalDimension } from '../../reducers/activeModalDimension';\nimport { sGetDimensions } from '../../reducers/dimensions';\nimport { sGetFiltersKeys } from '../../reducers/itemFilters';\nimport { sGetEditItemFiltersRoot } from '../../reducers/editItemFilters';\nimport { acAddItemFilter, acRemoveItemFilter } from '../../actions/itemFilters';\nimport {\n    acRemoveEditItemFilter,\n    acSetEditItemFilters,\n} from '../../actions/editItemFilters';\nimport {\n    acClearActiveModalDimension,\n    acSetActiveModalDimension,\n} from '../../actions/activeModalDimension';\n\nclass FilterSelector extends Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            anchorEl: null,\n        };\n    }\n\n    openPanel = (_, event) => {\n        this.setState({ anchorEl: event.currentTarget });\n    };\n\n    closePanel = () => {\n        this.setState({ anchorEl: null });\n    };\n\n    closeDialog = () => {\n        this.setState({ anchorEl: null });\n\n        this.props.clearActiveModalDimension();\n    };\n\n    selectDimension = id => {\n        this.props.setActiveModalDimension(\n            this.props.dimensions.find(dimension => dimension.id === id)\n        );\n    };\n\n    onSelectItems = ({ dimensionId, items }) => {\n        this.props.setEditItemFilters({\n            ...this.props.selectedItems,\n            [dimensionId]: items,\n        });\n    };\n\n    onDeselectItems = ({ dimensionId, itemIdsToRemove }) => {\n        const oldList = this.props.selectedItems[dimensionId] || [];\n        const newList = oldList.filter(\n            item => !itemIdsToRemove.includes(item.id)\n        );\n\n        if (newList.length) {\n            this.props.setEditItemFilters({\n                ...this.props.selectedItems,\n                [dimensionId]: newList,\n            });\n        } else {\n            this.props.removeEditItemFilter(dimensionId);\n        }\n    };\n\n    onReorderItems = ({ dimensionId, itemIds }) => {\n        const oldList = this.props.selectedItems[dimensionId] || [];\n        const reorderedList = itemIds.map(id =>\n            oldList.find(item => item.id === id)\n        );\n\n        this.props.setEditItemFilters({\n            ...this.props.selectedItems,\n            [dimensionId]: reorderedList,\n        });\n    };\n\n    saveFilter = id => {\n        const filterItems = this.props.selectedItems[id];\n\n        if (filterItems && filterItems.length) {\n            this.props.addItemFilter({\n                id,\n                value: [...filterItems],\n            });\n        } else {\n            this.props.removeItemFilter(id);\n        }\n\n        this.closeDialog();\n    };\n\n    render() {\n        const {\n            theme,\n            displayNameProperty,\n            dimension,\n            dimensions,\n            selectedDimensions,\n            selectedItems,\n        } = this.props;\n\n        return (\n            <Fragment>\n                <Button onClick={this.openPanel}>\n                    {i18n.t('Add filter')}\n                    <ArrowDropDownIcon />\n                </Button>\n                <Popover\n                    open={Boolean(this.state.anchorEl)}\n                    anchorEl={this.state.anchorEl}\n                    anchorOrigin={{ vertical: 'bottom', horizontal: 'left' }}\n                    onClose={this.closePanel}\n                    style={{\n                        height: '100%',\n                        fontFamily: theme.typography.fontFamily,\n                    }}\n                >\n                    <DimensionsPanel\n                        style={{ width: '320px' }}\n                        dimensions={dimensions}\n                        onDimensionClick={this.selectDimension}\n                        selectedIds={selectedDimensions}\n                    />\n                </Popover>\n                {dimension ? (\n                    <FilterDialog\n                        displayNameProperty={displayNameProperty}\n                        dimension={dimension}\n                        selectedItems={selectedItems[dimension.id] || []}\n                        onSelect={this.onSelectItems}\n                        onDeselect={this.onDeselectItems}\n                        onReorder={this.onReorderItems}\n                        onClose={this.closeDialog}\n                        onConfirm={this.saveFilter}\n                    />\n                ) : null}\n            </Fragment>\n        );\n    }\n}\n\nconst mapStateToProps = state => ({\n    displayNameProperty: sGetSettingsDisplayNameProperty(state),\n    dimension: sGetActiveModalDimension(state),\n    dimensions: sGetDimensions(state),\n    selectedDimensions: sGetFiltersKeys(state),\n    selectedItems: sGetEditItemFiltersRoot(state),\n});\n\nFilterSelector.propTypes = {\n    addItemFilter: PropTypes.func,\n    clearActiveModalDimension: PropTypes.func,\n    dimension: PropTypes.object,\n    dimensions: PropTypes.array,\n    displayNameProperty: PropTypes.string,\n    removeEditItemFilter: PropTypes.func,\n    removeItemFilter: PropTypes.func,\n    selectedDimensions: PropTypes.array,\n    selectedItems: PropTypes.object,\n    setActiveModalDimension: PropTypes.func,\n    setEditItemFilters: PropTypes.func,\n    theme: PropTypes.object,\n};\n\nexport default connect(\n    mapStateToProps,\n    {\n        clearActiveModalDimension: acClearActiveModalDimension,\n        setActiveModalDimension: acSetActiveModalDimension,\n        addItemFilter: acAddItemFilter,\n        removeItemFilter: acRemoveItemFilter,\n        removeEditItemFilter: acRemoveEditItemFilter,\n        setEditItemFilters: acSetEditItemFilters,\n    }\n)(withTheme()(FilterSelector));\n","import React, { Component } from 'react';\nimport InfoOutlineIcon from '@material-ui/icons/InfoOutlined';\nimport { colors } from '@dhis2/ui-core';\nimport PropTypes from 'prop-types';\n\nclass Info extends Component {\n    show = false;\n\n    toggle() {\n        this.show = !this.show;\n        return this.show;\n    }\n\n    render() {\n        return (\n            <div onClick={() => this.props.onClick(this.toggle())}>\n                <InfoOutlineIcon style={{ fill: colors.grey600 }} />\n            </div>\n        );\n    }\n}\n\nInfo.propTypes = {\n    onClick: PropTypes.func,\n};\n\nexport default Info;\n","import React, { Component, Fragment } from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport { Link } from 'react-router-dom';\nimport i18n from '@dhis2/d2-i18n';\nimport SharingDialog from '@dhis2/d2-ui-sharing-dialog';\nimport Star from '@material-ui/icons/Star';\nimport StarBorder from '@material-ui/icons/StarBorder';\n\nimport { orObject } from '../../modules/util';\nimport { tStarDashboard } from '../../actions/dashboards';\nimport { acSetSelectedShowDescription } from '../../actions/selected';\nimport FilterSelector from '../ItemFilter/FilterSelector';\nimport { Button } from '@dhis2/ui-core';\nimport Info from './Info';\nimport {\n    sGetSelectedId,\n    sGetSelectedShowDescription,\n} from '../../reducers/selected';\nimport {\n    sGetDashboardById,\n    sGetDashboardItems,\n} from '../../reducers/dashboards';\nimport { colors } from '@dhis2/ui-core';\n\nconst NO_DESCRIPTION = i18n.t('No description');\n\nconst styles = {\n    actions: {\n        display: 'flex',\n        alignItems: 'center',\n        marginLeft: '20px',\n    },\n    starIcon: {\n        fill: colors.grey600,\n    },\n    textButton: {\n        minWidth: '30px',\n        top: '1px',\n    },\n    editLink: {\n        display: 'inline-block',\n        verticalAlign: 'top',\n        textDecoration: 'none',\n        marginRight: '4px',\n    },\n    titleBar: {\n        display: 'flex',\n        alignItems: 'flex-start',\n    },\n    titleBarIcon: {\n        marginLeft: 5,\n        position: 'relative',\n        top: 1,\n        cursor: 'pointer',\n    },\n};\n\nclass ViewTitleBar extends Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            sharingDialogIsOpen: false,\n        };\n    }\n\n    toggleSharingDialog = () =>\n        this.setState({ sharingDialogIsOpen: !this.state.sharingDialogIsOpen });\n\n    render() {\n        const {\n            id,\n            name,\n            description,\n            access,\n            style,\n            showDescription,\n            starred,\n            onStarClick,\n            onInfoClick,\n            classes,\n        } = this.props;\n\n        const titleStyle = Object.assign({}, style.title, {\n            cursor: 'default',\n            userSelect: 'text',\n            top: '7px',\n        });\n\n        const StarIcon = starred ? Star : StarBorder;\n\n        return (\n            <Fragment>\n                <div className={classes.titleBar}>\n                    <span style={titleStyle}>{name}</span>\n                    <div className={classes.actions}>\n                        <div\n                            className={classes.titleBarIcon}\n                            onClick={onStarClick}\n                        >\n                            <StarIcon className={classes.starIcon} />\n                        </div>\n                        <div className={classes.titleBarIcon}>\n                            <Info onClick={onInfoClick} />\n                        </div>\n                        <div style={{ marginLeft: '10px' }}>\n                            {access.update ? (\n                                <Link\n                                    className={classes.editLink}\n                                    to={`/${id}/edit`}\n                                >\n                                    <Button>{i18n.t('Edit')}</Button>\n                                </Link>\n                            ) : null}\n                            {access.manage ? (\n                                <span style={{ marginRight: '4px' }}>\n                                    <Button onClick={this.toggleSharingDialog}>\n                                        {i18n.t('Share')}\n                                    </Button>\n                                </span>\n                            ) : null}\n                            <span style={{ marginRight: '4px' }}>\n                                <FilterSelector />\n                            </span>\n                        </div>\n                    </div>\n                </div>\n                {showDescription ? (\n                    <div\n                        className=\"dashboard-description\"\n                        style={Object.assign(\n                            { paddingTop: '5px', paddingBottom: '5px' },\n                            style.description,\n                            !description ? { color: '#888' } : {}\n                        )}\n                    >\n                        {description || NO_DESCRIPTION}\n                    </div>\n                ) : null}\n                {id ? (\n                    <SharingDialog\n                        d2={this.context.d2}\n                        id={id}\n                        type=\"dashboard\"\n                        open={this.state.sharingDialogIsOpen}\n                        onRequestClose={this.toggleSharingDialog}\n                    />\n                ) : null}\n            </Fragment>\n        );\n    }\n}\n\nconst mapStateToProps = state => {\n    const id = sGetSelectedId(state);\n    const dashboard = orObject(sGetDashboardById(state, id));\n\n    return {\n        id,\n        name: dashboard.displayName,\n        description: dashboard.displayDescription,\n        dashboardItems: sGetDashboardItems(state),\n        showDescription: sGetSelectedShowDescription(state),\n        starred: dashboard.starred,\n        access: orObject(dashboard.access),\n    };\n};\n\nconst mergeProps = (stateProps, dispatchProps, ownProps) => {\n    const { id, starred, showDescription } = stateProps;\n    const { dispatch } = dispatchProps;\n\n    return {\n        ...stateProps,\n        ...ownProps,\n        onStarClick: () => dispatch(tStarDashboard(id, !starred)),\n        onInfoClick: () =>\n            dispatch(acSetSelectedShowDescription(!showDescription)),\n    };\n};\n\nexport default connect(\n    mapStateToProps,\n    null,\n    mergeProps\n)(withStyles(styles)(ViewTitleBar));\n\nViewTitleBar.propTypes = {\n    access: PropTypes.object,\n    classes: PropTypes.object,\n    description: PropTypes.string,\n    id: PropTypes.string,\n    name: PropTypes.string,\n    showDescription: PropTypes.bool,\n    starred: PropTypes.bool,\n    style: PropTypes.object,\n    onInfoClick: PropTypes.func,\n    onStarClick: PropTypes.func,\n};\n\nViewTitleBar.defaultProps = {\n    name: '',\n    description: '',\n    starred: false,\n    showDescription: false,\n    onInfoClick: null,\n};\n\nViewTitleBar.contextTypes = {\n    d2: PropTypes.object,\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport { colors } from '@dhis2/ui-core';\nimport EditTitleBar from './EditTitleBar';\nimport ViewTitleBar from './ViewTitleBar';\n\nimport './TitleBar.css';\n\nconst style = {\n    title: {\n        position: 'relative',\n        fontSize: 21,\n        fontWeight: 500,\n        color: colors.black,\n        minWidth: 50,\n    },\n    description: {\n        fontSize: 14,\n        color: colors.grey800,\n    },\n};\n\nconst TitleBar = ({ edit }) => {\n    return (\n        <div\n            className=\"titlebar-wrapper\"\n            style={{\n                padding: '20px 15px 5px 10px',\n            }}\n        >\n            {edit ? (\n                <EditTitleBar style={style} />\n            ) : (\n                <ViewTitleBar style={style} />\n            )}\n        </div>\n    );\n};\n\nTitleBar.propTypes = {\n    edit: PropTypes.bool,\n};\n\nexport default TitleBar;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nimport i18n from '@dhis2/d2-i18n';\n\nimport * as pluginManager from './plugin';\nimport { getBaseUrl, orObject } from '../../../modules/util';\nimport { getGridItemDomId } from '../../ItemGrid/gridUtil';\n\nconst pluginCredentials = d2 => {\n    return {\n        baseUrl: getBaseUrl(d2),\n        auth: d2.Api.getApi().defaultHeaders.Authorization,\n    };\n};\n\nclass DefaultPlugin extends Component {\n    pluginCredentials = null;\n\n    constructor(props, context) {\n        super(props);\n\n        this.d2 = context.d2;\n    }\n\n    shouldPluginReload = prevProps => {\n        // TODO - fix this hack, to handle bug with multiple\n        // rerendering while switching between dashboards.\n        //\n        // To determine if the rendering is happening because of a\n        // dashboard switch, check if the item reference has changed.\n        const reloadAllowed = this.props.item === prevProps.item;\n\n        const filtersChanged = prevProps.itemFilters !== this.props.itemFilters;\n        const vis = orObject(this.props.visualization);\n        const prevVis = orObject(prevProps.visualization);\n        const visChanged =\n            vis.id !== prevVis.id || vis.activeType !== prevVis.activeType;\n\n        return reloadAllowed && (visChanged || filtersChanged);\n    };\n\n    reloadPlugin = prevProps => {\n        if (\n            pluginManager.pluginIsAvailable(\n                this.props.item,\n                this.props.visualization\n            ) &&\n            this.shouldPluginReload(prevProps)\n        ) {\n            const prevVis = orObject(prevProps.visualization);\n            const currentVis = this.props.visualization;\n\n            const useActiveType =\n                currentVis.activeType !== prevVis.activeType ||\n                currentVis.activeType !== this.props.item.type;\n\n            if (\n                useActiveType ||\n                this.props.itemFilters !== prevProps.itemFilters\n            ) {\n                pluginManager.unmount(\n                    this.props.item,\n                    prevVis.activeType || this.props.item.type\n                );\n\n                pluginManager.load(this.props.item, this.props.visualization, {\n                    credentials: this.pluginCredentials,\n                    activeType: useActiveType ? currentVis.activeType : null,\n                });\n            }\n        }\n    };\n\n    componentDidMount() {\n        this.pluginCredentials = pluginCredentials(this.d2);\n\n        if (\n            pluginManager.pluginIsAvailable(\n                this.props.item,\n                this.props.visualization\n            )\n        ) {\n            pluginManager.load(this.props.item, this.props.visualization, {\n                credentials: this.pluginCredentials,\n                activeType: !this.props.editMode ? this.getActiveType() : null,\n            });\n        }\n    }\n\n    componentDidUpdate(prevProps) {\n        this.reloadPlugin(prevProps);\n    }\n\n    getActiveType = () =>\n        this.props.visualization.activeType || this.props.item.type;\n\n    render() {\n        const { classes, item, visualization, style } = this.props;\n        const pluginIsAvailable = pluginManager.pluginIsAvailable(\n            item,\n            visualization\n        );\n\n        return pluginIsAvailable ? (\n            <div id={getGridItemDomId(item.id)} style={style} />\n        ) : (\n            <div className={classes.textDiv}>\n                {i18n.t('Unable to load the plugin for this item')}\n            </div>\n        );\n    }\n}\n\nDefaultPlugin.contextTypes = {\n    d2: PropTypes.object,\n};\n\nDefaultPlugin.propTypes = {\n    classes: PropTypes.object,\n    editMode: PropTypes.bool,\n    item: PropTypes.object,\n    itemFilters: PropTypes.object,\n    style: PropTypes.object,\n    visualization: PropTypes.object,\n};\n\nDefaultPlugin.defaultProps = {\n    style: {},\n    item: {},\n    itemFilters: {},\n    visualization: {},\n};\n\nexport default DefaultPlugin;\n","import React from 'react';\nimport { colors } from '@dhis2/ui-core';\n\nexport const ThreeDots = () => (\n    <svg\n        height=\"18\"\n        viewBox=\"0 0 18 18\"\n        width=\"18\"\n        xmlns=\"http://www.w3.org/2000/svg\"\n    >\n        <path\n            d=\"m4 7.5c-.83 0-1.5.67-1.5 1.5s.67 1.5 1.5 1.5 1.5-.67 1.5-1.5-.67-1.5-1.5-1.5zm10 0c-.83 0-1.5.67-1.5 1.5s.67 1.5 1.5 1.5 1.5-.67 1.5-1.5-.67-1.5-1.5-1.5zm-5 0c-.83 0-1.5.67-1.5 1.5s.67 1.5 1.5 1.5 1.5-.67 1.5-1.5-.67-1.5-1.5-1.5z\"\n            fill=\"#6e7a8a\"\n        />\n    </svg>\n);\n\nexport const SpeechBubble = () => (\n    <svg\n        height=\"20\"\n        viewBox=\"0 0 20 20\"\n        width=\"20\"\n        xmlns=\"http://www.w3.org/2000/svg\"\n        style={{ margin: '3px 2px 0 2px' }} // Temporary fix for the misaligned icon, should be removed once the icon is replaced\n    >\n        <path\n            d=\"m20 2h-16c-1.1 0-1.99.9-1.99 2l-.01 18 4-4h14c1.1 0 2-.9 2-2v-12c0-1.1-.9-2-2-2zm-2 12h-12v-2h12zm0-3h-12v-2h12zm0-3h-12v-2h12z\"\n            fill=\"#6e7a8a\"\n            fillRule=\"evenodd\"\n            transform=\"translate(-2 -2)\"\n        />\n    </svg>\n);\n\nexport const Warning = () => (\n    <svg\n        xmlns=\"http://www.w3.org/2000/svg\"\n        height=\"24\"\n        viewBox=\"0 0 24 24\"\n        width=\"24\"\n        fill={colors.grey600}\n    >\n        <path d=\"M0 0h24v24H0z\" fill=\"none\" />\n        <path d=\"M1 21h22L12 2 1 21zm12-3h-2v-2h2v2zm0-4h-2v-4h2v4z\" />\n    </svg>\n);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport i18n from '@dhis2/d2-i18n';\nimport { Warning } from './assets/icons';\n\nimport classes from './styles/FatalErrorBoundary.module.css';\n\nclass FatalErrorBoundary extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            errorFound: false,\n        };\n    }\n    componentDidCatch(error, info) {\n        this.setState({\n            errorFound: true,\n        });\n        console.log('error: ', error);\n        console.log('info: ', info);\n    }\n    render() {\n        if (this.state.errorFound) {\n            return (\n                <p className={classes.container}>\n                    <span className={classes.icon}>\n                        <Warning />\n                    </span>\n                    <span className={classes.message}>\n                        {i18n.t(\n                            'There was a problem loading this dashboard item'\n                        )}\n                    </span>\n                </p>\n            );\n        }\n        return this.props.children;\n    }\n}\n\nFatalErrorBoundary.propTypes = {\n    children: PropTypes.node,\n};\n\nexport default FatalErrorBoundary;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport i18n from '@dhis2/d2-i18n';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport { colors } from '@dhis2/ui-core';\n\nimport classes from './styles/DeleteItemButton.module.css';\n\nconst DeleteItemButton = ({ onClick }) => (\n    <button\n        type=\"button\"\n        className={classes.deleteItemButton}\n        onClick={onClick}\n        title={i18n.t(`Delete item`)}\n    >\n        <DeleteIcon style={{ fill: colors.red500 }} />\n    </button>\n);\n\nDeleteItemButton.propTypes = {\n    onClick: PropTypes.func,\n};\n\nexport default DeleteItemButton;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\n\nimport { sGetIsEditing } from '../../reducers/editDashboard';\nimport { acRemoveDashboardItem } from '../../actions/editDashboard';\nimport DeleteItemButton from './DeleteItemButton';\n\nimport classes from './styles/ItemHeader.module.css';\n\n// This is the margin-top + margin-bottom defined in the css file\nexport const HEADER_MARGIN_HEIGHT = 12;\n\nconst ItemHeader = props => {\n    const {\n        title,\n        editMode,\n        actionButtons,\n        itemId,\n        acRemoveDashboardItem,\n        forwardedRef,\n    } = props;\n\n    const handleDeleteItem = () => acRemoveDashboardItem(itemId);\n\n    return (\n        <div className={classes.itemHeaderWrap} ref={forwardedRef}>\n            <p className={classes.itemTitle}>{title}</p>\n            {editMode ? (\n                <div className={classes.itemActionsWrap}>\n                    <DeleteItemButton onClick={handleDeleteItem} />\n                </div>\n            ) : (\n                actionButtons && (\n                    <div className={classes.itemActionsWrap}>\n                        {actionButtons}\n                    </div>\n                )\n            )}\n        </div>\n    );\n};\n\nItemHeader.propTypes = {\n    acRemoveDashboardItem: PropTypes.func,\n    actionButtons: PropTypes.node,\n    editMode: PropTypes.bool,\n    forwardedRef: PropTypes.object,\n    itemId: PropTypes.string,\n    title: PropTypes.string,\n};\n\nItemHeader.defaultProps = {\n    forwardedRef: {},\n};\n\nconst mapStateToProps = state => ({\n    editMode: sGetIsEditing(state),\n});\n\nconst mapDispatchToProps = {\n    acRemoveDashboardItem,\n};\n\nconst ConnectedItemHeader = connect(\n    mapStateToProps,\n    mapDispatchToProps\n)(ItemHeader);\n\n// TODO this is a false positive that is fixed in eslint-plugin-react v7.15\n// github.com/yannickcr/eslint-plugin-react/blob/master/CHANGELOG.md\n/* eslint-disable react/display-name */\nexport default React.forwardRef((props, ref) => (\n    <ConnectedItemHeader {...props} forwardedRef={ref} />\n));\n/* eslint-enable react/display-name */\n","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\n\nimport {\n    isSingleValue,\n    isYearOverYear,\n    VIS_TYPE_GAUGE,\n    VIS_TYPE_PIE,\n} from '@dhis2/analytics';\nimport { Button, Menu, MenuItem, Divider, colors } from '@dhis2/ui-core';\nimport i18n from '@dhis2/d2-i18n';\nimport Popover from '@material-ui/core/Popover';\nimport TableIcon from '@material-ui/icons/ViewList';\nimport ChartIcon from '@material-ui/icons/InsertChart';\nimport MapIcon from '@material-ui/icons/Public';\nimport LaunchIcon from '@material-ui/icons/Launch';\n\nimport { ThreeDots, SpeechBubble } from './assets/icons';\nimport { pluginIsAvailable, getLink } from './plugin';\nimport {\n    CHART,\n    MAP,\n    REPORT_TABLE,\n    EVENT_CHART,\n    EVENT_REPORT,\n    isTrackerDomainType,\n    hasMapView,\n    getAppName,\n} from '../../../modules/itemTypes';\n\nconst iconFill = { fill: colors.grey600 };\n\nconst ItemHeaderButtons = props => {\n    const [anchorEl, setAnchorEl] = useState(null);\n\n    const { item, visualization, onSelectActiveType, d2, activeType } = props;\n\n    const isTrackerType = isTrackerDomainType(item.type);\n\n    const onViewTable = () => {\n        handleClose();\n        onSelectActiveType(isTrackerType ? EVENT_REPORT : REPORT_TABLE);\n    };\n\n    const onViewChart = () => {\n        handleClose();\n        onSelectActiveType(isTrackerType ? EVENT_CHART : CHART);\n    };\n\n    const onViewMap = () => {\n        handleClose();\n        onSelectActiveType(MAP);\n    };\n\n    const itemHasMapView = () => hasMapView(item.type);\n\n    const handleMenuClick = (_, event) => setAnchorEl(event.currentTarget);\n\n    const handleInterpretationClick = () => {\n        props.onToggleFooter();\n        if (anchorEl !== null) {\n            handleClose();\n        }\n    };\n\n    const handleClose = () => setAnchorEl(null);\n\n    const type = visualization.type || item.type;\n    const canViewAs =\n        !isSingleValue(type) &&\n        !isYearOverYear(type) &&\n        type !== VIS_TYPE_GAUGE &&\n        type !== VIS_TYPE_PIE;\n\n    const interpretationMenuLabel = props.activeFooter\n        ? i18n.t(`Hide interpretations and details`)\n        : i18n.t(`Show interpretations and details`);\n\n    const ViewAsMenuItems = () => (\n        <>\n            {activeType !== CHART && activeType !== EVENT_CHART && (\n                <MenuItem\n                    dense\n                    label={i18n.t('View as Chart')}\n                    onClick={onViewChart}\n                    icon={<ChartIcon style={iconFill} />}\n                />\n            )}\n            {activeType !== REPORT_TABLE && activeType !== EVENT_REPORT && (\n                <MenuItem\n                    dense\n                    label={i18n.t('View as Table')}\n                    onClick={onViewTable}\n                    icon={<TableIcon style={iconFill} />}\n                />\n            )}\n            {itemHasMapView() && activeType !== MAP && (\n                <MenuItem\n                    dense\n                    label={i18n.t('View as Map')}\n                    onClick={onViewMap}\n                    icon={<MapIcon style={iconFill} />}\n                />\n            )}\n        </>\n    );\n\n    return pluginIsAvailable(item, visualization) ? (\n        <>\n            <Button small secondary onClick={handleMenuClick}>\n                <ThreeDots />\n            </Button>\n            {anchorEl && (\n                <Popover\n                    open={Boolean(anchorEl)}\n                    onClose={handleClose}\n                    anchorEl={anchorEl}\n                >\n                    <Menu>\n                        {canViewAs && (\n                            <>\n                                <ViewAsMenuItems />\n                                <Divider />\n                            </>\n                        )}\n                        <MenuItem\n                            dense\n                            icon={<LaunchIcon style={{ fill: '#6e7a8a' }} />}\n                            label={i18n.t('Open in {{appName}} app', {\n                                appName: getAppName(item.type),\n                            })}\n                            href={getLink(item, d2)}\n                            target=\"_blank\"\n                        />\n                        <MenuItem\n                            dense\n                            icon={<SpeechBubble />}\n                            label={interpretationMenuLabel}\n                            onClick={handleInterpretationClick}\n                        />\n                    </Menu>\n                </Popover>\n            )}\n        </>\n    ) : null;\n};\n\nItemHeaderButtons.propTypes = {\n    activeFooter: PropTypes.bool,\n    activeType: PropTypes.string,\n    d2: PropTypes.object,\n    item: PropTypes.object,\n    visualization: PropTypes.object,\n    onSelectActiveType: PropTypes.func,\n    onToggleFooter: PropTypes.func,\n};\n\nexport default ItemHeaderButtons;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { colors } from '@dhis2/ui-core';\nimport { getId } from './plugin';\nimport InterpretationsComponent from '@dhis2/d2-ui-interpretations';\n\nconst style = {\n    scrollContainer: {\n        overflowY: 'auto',\n        height: '340px',\n    },\n    line: {\n        margin: '-1px 0px 0px',\n        height: '1px',\n        border: 'none',\n        backgroundColor: colors.grey100,\n    },\n};\n\nclass ItemFooter extends Component {\n    render() {\n        const objectId = getId(this.props.item);\n\n        return (\n            <div className=\"dashboard-item-footer\">\n                <hr style={style.line} />\n                <div style={style.scrollContainer}>\n                    <InterpretationsComponent\n                        d2={this.context.d2}\n                        item={this.props.item}\n                        type={this.props.item.type.toLowerCase()}\n                        id={objectId}\n                        appName=\"dashboard\"\n                    />\n                </div>\n            </div>\n        );\n    }\n}\n\nItemFooter.contextTypes = {\n    d2: PropTypes.object.isRequired,\n};\n\nItemFooter.propTypes = {\n    item: PropTypes.object.isRequired,\n};\n\nexport default ItemFooter;\n","// Note that this ignores discrepancies in 'this', so shouldn't be used with bound functions\n// This is useful instead of lodash/memoize when we only need to memoize a single value\n// Inspiration: https://github.com/alexreardon/memoize-one\n\nconst memoizeOne = fn => {\n    let lastArgs = undefined;\n    let lastValue = undefined;\n\n    return (...args) => {\n        if (\n            lastArgs &&\n            args.length === lastArgs.length &&\n            args.every((arg, i) => arg === lastArgs[i])\n        ) {\n            return lastValue;\n        }\n        lastArgs = args;\n        lastValue = fn(...args);\n        return lastValue;\n    };\n};\n\nexport default memoizeOne;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport CircularProgress from '@material-ui/core/CircularProgress';\n\nconst styles = theme => ({\n    progress: {\n        margin: theme.spacing.unit * 2,\n        maxWidth: 200,\n        textAlign: 'center',\n        alignSelf: 'center',\n    },\n    outer: {\n        display: 'flex',\n        justifyContent: 'center',\n        height: '100%',\n    },\n});\n\nfunction CircularIndeterminate(props) {\n    const { classes } = props;\n    return (\n        <div className={classes.outer}>\n            <CircularProgress className={classes.progress} />\n        </div>\n    );\n}\n\nCircularIndeterminate.propTypes = {\n    classes: PropTypes.object.isRequired,\n};\n\nexport default withStyles(styles)(CircularIndeterminate);\n","import React, { Component, Fragment } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { withStyles } from '@material-ui/core/styles';\nimport uniqueId from 'lodash/uniqueId';\nimport VisualizationPlugin from '@dhis2/data-visualizer-plugin';\nimport i18n from '@dhis2/d2-i18n';\n\nimport DefaultPlugin from './DefaultPlugin';\nimport FatalErrorBoundary from './FatalErrorBoundary';\nimport ItemHeader, { HEADER_MARGIN_HEIGHT } from '../ItemHeader';\nimport ItemHeaderButtons from './ItemHeaderButtons';\nimport ItemFooter from './ItemFooter';\nimport * as pluginManager from './plugin';\nimport { sGetVisualization } from '../../../reducers/visualizations';\nimport { sGetItemFiltersRoot } from '../../../reducers/itemFilters';\nimport {\n    acAddVisualization,\n    acSetActiveVisualizationType,\n} from '../../../actions/visualizations';\nimport {\n    VISUALIZATION,\n    MAP,\n    CHART,\n    REPORT_TABLE,\n} from '../../../modules/itemTypes';\nimport memoizeOne from '../../../modules/memoizeOne';\n\nimport { colors } from '@dhis2/ui-core';\nimport { getVisualizationConfig } from './plugin';\nimport LoadingMask from './LoadingMask';\nimport { ITEM_CONTENT_PADDING_BOTTOM } from '../../ItemGrid/ItemGrid';\n\nconst styles = {\n    icon: {\n        width: 16,\n        height: 16,\n        marginLeft: 3,\n        cursor: 'pointer',\n        fill: colors.grey600,\n    },\n    title: {\n        overflow: 'hidden',\n        maxWidth: '85%',\n        textOverflow: 'ellipsis',\n        whiteSpace: 'nowrap',\n    },\n    textDiv: {\n        fontSize: '14px',\n        fontStretch: 'normal',\n        padding: '10px',\n        lineHeight: '20px',\n    },\n    loadingCover: {\n        position: 'absolute',\n        height: '100%',\n        width: '100%',\n        left: 0,\n        top: 0,\n        zIndex: 100,\n        background: '#ffffffab',\n    },\n};\n\nexport class Item extends Component {\n    state = {\n        showFooter: false,\n        configLoaded: false,\n        pluginIsLoaded: false,\n    };\n\n    constructor(props, context) {\n        super(props);\n\n        this.d2 = context.d2;\n\n        this.contentRef = React.createRef();\n        this.headerRef = React.createRef();\n\n        this.memoizedApplyFilters = memoizeOne(this.applyFilters);\n\n        this.memoizedGetVisualizationConfig = memoizeOne(\n            getVisualizationConfig\n        );\n\n        this.memoizedGetContentStyle = memoizeOne(this.getContentStyle);\n    }\n\n    async componentDidMount() {\n        this.props.onVisualizationLoaded(\n            // TODO do not call fetch on the pluginManager, do it here as the manager will eventually be removed...\n            await pluginManager.fetch(this.props.item)\n        );\n\n        this.setState({\n            configLoaded: true,\n        });\n    }\n\n    componentDidUpdate(prevProps, prevState) {\n        if (\n            prevState.pluginIsLoaded &&\n            (prevProps.visualization !== this.props.visualization ||\n                prevProps.itemFilters !== this.props.itemFilters)\n        ) {\n            this.setState({\n                pluginIsLoaded: false,\n            });\n        }\n    }\n\n    applyFilters = (visualization, filters) => {\n        if (!Object.keys(filters).length) {\n            return visualization;\n        }\n\n        // deep clone objects in filters to avoid changing the visualization in the Redux store\n        const visRows = visualization.rows.map(obj => ({ ...obj }));\n        const visColumns = visualization.columns.map(obj => ({ ...obj }));\n        const visFilters = visualization.filters.map(obj => ({ ...obj }));\n\n        Object.keys(filters).forEach(dimensionId => {\n            if (filters[dimensionId]) {\n                let dimensionFound = false;\n\n                [visRows, visColumns, visFilters].forEach(dimensionObjects =>\n                    dimensionObjects\n                        .filter(obj => obj.dimension === dimensionId)\n                        .forEach(obj => {\n                            dimensionFound = true;\n                            obj.items = filters[dimensionId];\n                        })\n                );\n\n                // add dimension to filters if not already present elsewhere\n                if (!dimensionFound) {\n                    visFilters.push({\n                        dimension: dimensionId,\n                        items: filters[dimensionId],\n                    });\n                }\n            }\n        });\n\n        return {\n            ...visualization,\n            rows: visRows,\n            columns: visColumns,\n            filters: visFilters,\n        };\n    };\n\n    getUniqueKey = memoizeOne(() => uniqueId());\n\n    pluginCredentials = null;\n\n    getPluginComponent = () => {\n        const activeType = this.getActiveType();\n        const visualization = this.memoizedGetVisualizationConfig(\n            this.props.visualization,\n            this.props.item.type,\n            activeType\n        );\n\n        if (!visualization) {\n            return (\n                <div className={this.props.classes.textDiv}>\n                    {i18n.t('No data to display')}\n                </div>\n            );\n        }\n\n        const calculatedHeight =\n            this.props.item.originalHeight -\n            this.headerRef.current.clientHeight -\n            HEADER_MARGIN_HEIGHT -\n            ITEM_CONTENT_PADDING_BOTTOM;\n\n        const props = {\n            ...this.props,\n            visualization,\n            style: this.memoizedGetContentStyle(\n                calculatedHeight,\n                this.contentRef ? this.contentRef.offsetHeight : null,\n                this.props.editMode\n            ),\n        };\n\n        switch (activeType) {\n            case VISUALIZATION:\n            case CHART:\n            case REPORT_TABLE: {\n                return (\n                    <Fragment>\n                        {!this.state.pluginIsLoaded ? (\n                            <div style={styles.loadingCover}>\n                                <LoadingMask />\n                            </div>\n                        ) : null}\n                        <VisualizationPlugin\n                            d2={this.d2}\n                            visualization={this.memoizedApplyFilters(\n                                visualization,\n                                props.itemFilters\n                            )}\n                            onLoadingComplete={this.onLoadingComplete}\n                            forDashboard={true}\n                            style={props.style}\n                        />\n                    </Fragment>\n                );\n            }\n            case MAP: {\n                if (props.item.type === MAP) {\n                    // apply filters only to thematic and event layers\n                    // for maps AO\n                    const mapViews = props.visualization.mapViews.map(obj => {\n                        if (\n                            obj.layer.includes('thematic') ||\n                            obj.layer.includes('event')\n                        ) {\n                            return this.memoizedApplyFilters(\n                                obj,\n                                props.itemFilters\n                            );\n                        }\n\n                        return obj;\n                    });\n\n                    props.visualization = {\n                        ...props.visualization,\n                        mapViews,\n                    };\n                } else {\n                    // this is the case of a non map AO passed to the maps plugin\n                    // due to a visualization type switch in dashboard item\n                    // maps plugin takes care of converting the AO to a suitable format\n                    props.visualization = this.memoizedApplyFilters(\n                        props.visualization,\n                        props.itemFilters\n                    );\n                }\n\n                return <DefaultPlugin {...props} />;\n            }\n            default: {\n                props.visualization = this.memoizedApplyFilters(\n                    props.visualization,\n                    props.itemFilters\n                );\n\n                return <DefaultPlugin {...props} />;\n            }\n        }\n    };\n\n    onLoadingComplete = () => {\n        this.setState({\n            pluginIsLoaded: true,\n        });\n    };\n\n    onToggleFooter = () => {\n        this.setState(\n            { showFooter: !this.state.showFooter },\n            this.props.onToggleItemExpanded(this.props.item.id)\n        );\n    };\n\n    onSelectActiveType = type => {\n        if (type === this.getActiveType()) {\n            return;\n        }\n\n        pluginManager.unmount(this.props.item, this.getActiveType());\n\n        this.props.onSelectActiveType(this.props.visualization.id, type);\n    };\n\n    getActiveType = () =>\n        this.props.visualization.activeType || this.props.item.type;\n\n    pluginIsAvailable = () =>\n        pluginManager.pluginIsAvailable(\n            this.props.item,\n            this.props.visualization\n        );\n\n    getContentStyle = (calculatedHeight, measuredHeight, editMode) => {\n        const height = editMode\n            ? measuredHeight || calculatedHeight\n            : calculatedHeight;\n\n        return { height };\n    };\n\n    render() {\n        const { item, editMode, itemFilters } = this.props;\n        const { showFooter } = this.state;\n\n        const actionButtons = (\n            <ItemHeaderButtons\n                item={item}\n                visualization={this.props.visualization}\n                onSelectActiveType={this.onSelectActiveType}\n                onToggleFooter={this.onToggleFooter}\n                d2={this.d2}\n                activeType={this.getActiveType()}\n                activeFooter={this.state.showFooter}\n            />\n        );\n\n        return (\n            <>\n                <ItemHeader\n                    title={pluginManager.getName(item)}\n                    itemId={item.id}\n                    actionButtons={actionButtons}\n                    ref={this.headerRef}\n                />\n                <FatalErrorBoundary>\n                    <div\n                        key={this.getUniqueKey(itemFilters)}\n                        className=\"dashboard-item-content\"\n                        ref={ref => (this.contentRef = ref)}\n                    >\n                        {this.state.configLoaded && this.getPluginComponent()}\n                    </div>\n                </FatalErrorBoundary>\n                {!editMode && showFooter ? <ItemFooter item={item} /> : null}\n            </>\n        );\n    }\n}\n\nItem.contextTypes = {\n    d2: PropTypes.object,\n};\n\nItem.propTypes = {\n    classes: PropTypes.object,\n    editMode: PropTypes.bool,\n    item: PropTypes.object,\n    itemFilters: PropTypes.object,\n    visualization: PropTypes.object,\n    onSelectActiveType: PropTypes.func,\n    onToggleItemExpanded: PropTypes.func,\n    onVisualizationLoaded: PropTypes.func,\n};\n\nItem.defaultProps = {\n    item: {},\n    editMode: false,\n    onToggleItemExpanded: Function.prototype,\n    itemFilters: {},\n    visualization: {},\n};\n\nconst mapStateToProps = (state, ownProps) => ({\n    itemFilters: sGetItemFiltersRoot(state),\n    visualization: sGetVisualization(\n        state,\n        pluginManager.extractFavorite(ownProps.item).id\n    ),\n});\n\nconst mapDispatchToProps = dispatch => ({\n    onVisualizationLoaded: visualization =>\n        dispatch(acAddVisualization(visualization)),\n    onSelectActiveType: (id, type, activeType) =>\n        dispatch(acSetActiveVisualizationType(id, type, activeType)),\n});\n\nexport default connect(\n    mapStateToProps,\n    mapDispatchToProps\n)(withStyles(styles)(Item));\n","import React from 'react';\nimport { colors } from '@dhis2/ui-core';\n\nconst style = {\n    backgroundColor: colors.grey200,\n    border: 'none',\n    height: '1px',\n    margin: '0px 0px 5px 0px',\n};\n\nconst Line = () => <hr style={style} />;\n\nexport default Line;\n","import React, { Component, Fragment } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport i18n from '@dhis2/d2-i18n';\n\nimport { sGetMessagesRoot } from '../../../reducers/messages';\nimport { formatDate } from '../../../modules/util';\nimport { colors } from '@dhis2/ui-core';\nimport ItemHeader from '../ItemHeader';\nimport Line from '../../../widgets/Line';\n\nimport './MessagesItem.css';\n\nconst PRIVATE = 'PRIVATE';\n\nconst messageTypes = {\n    [PRIVATE]: 'Private',\n    VALIDATION_RESULT: 'Validation',\n    TICKET: 'Ticket',\n    SYSTEM: 'System',\n};\n\nconst style = {\n    list: {\n        listStyleType: 'none',\n        paddingLeft: '0px',\n    },\n    seeAll: {\n        textAlign: 'center',\n        fontSize: '13px',\n        marginBottom: '5px',\n    },\n    sender: {\n        fontSize: '13px',\n        lineHeight: '15px',\n        margin: 0,\n        color: colors.grey800,\n    },\n    snippet: {\n        color: colors.grey800,\n        fontSize: '13px',\n        lineHeight: '15px',\n        maxHeight: '30px',\n        overflow: 'hidden',\n    },\n};\n\nclass MessagesItem extends Component {\n    state = {\n        uiLocale: '',\n    };\n\n    async componentDidMount() {\n        const uiLocale = await this.context.d2.currentUser.userSettings.get(\n            'keyUiLocale'\n        );\n\n        this.setState({ uiLocale });\n    }\n\n    getMessageHref = msg => {\n        const msgIdentifier = msg ? `#/${msg.messageType}/${msg.id}` : '';\n        return `${this.context.baseUrl}/dhis-web-messaging/${msgIdentifier}`;\n    };\n\n    getMessageSender = msg => {\n        const latestMsg = msg.messages.slice(-1)[0];\n        return latestMsg.sender ? latestMsg.sender.displayName : '';\n    };\n\n    getMessageItems = () => {\n        const editClass = !this.props.editMode ? 'view' : null;\n\n        return this.props.messages.map(msg => {\n            const redirectToMsg = () => {\n                if (!this.props.editMode) {\n                    document.location.href = this.getMessageHref(msg);\n                }\n            };\n\n            const sender =\n                msg.messageType === PRIVATE\n                    ? this.getMessageSender(msg)\n                    : messageTypes[msg.messageType];\n\n            const readClass = !msg.read ? 'unread' : null;\n            const latestMsg = msg.messages.slice(-1)[0];\n            const msgDate = latestMsg.lastUpdated;\n\n            return (\n                <li\n                    className={`message-item ${editClass}`}\n                    key={msg.id}\n                    onClick={redirectToMsg}\n                >\n                    <p className={`message-title ${readClass}`}>\n                        {msg.displayName} ({msg.messageCount})\n                    </p>\n                    <p style={style.sender}>\n                        {sender} - {formatDate(msgDate, this.state.uiLocale)}\n                    </p>\n                    <p style={style.snippet}>{latestMsg.text}</p>\n                </li>\n            );\n        });\n    };\n\n    render() {\n        return (\n            <Fragment>\n                <ItemHeader\n                    title={i18n.t('Messages')}\n                    itemId={this.props.item.id}\n                />\n                <Line />\n                {this.props.messages.length > 0 && (\n                    <div className=\"dashboard-item-content\">\n                        <ul style={style.list}>{this.getMessageItems()}</ul>\n                        <div style={style.seeAll}>\n                            <a href={this.getMessageHref()}>\n                                {i18n.t('See all messages')}\n                            </a>\n                        </div>\n                    </div>\n                )}\n            </Fragment>\n        );\n    }\n}\n\nMessagesItem.propTypes = {\n    editMode: PropTypes.bool,\n    item: PropTypes.object,\n    messages: PropTypes.array,\n};\n\nMessagesItem.contextTypes = {\n    d2: PropTypes.object,\n    baseUrl: PropTypes.string,\n};\n\nconst mapStateToProps = state => {\n    return {\n        messages: Object.values(sGetMessagesRoot(state)),\n    };\n};\n\nconst MessagesContainer = connect(\n    mapStateToProps,\n    null\n)(MessagesItem);\n\nexport default MessagesContainer;\n","import React, { Fragment } from 'react';\nimport PropTypes from 'prop-types';\nimport i18n from '@dhis2/d2-i18n';\nimport ItemHeader from '../ItemHeader';\nimport NotInterestedIcon from '@material-ui/icons/NotInterested';\n\nconst NotSupportedItem = props => (\n    <Fragment>\n        <ItemHeader\n            title={i18n.t('Item type \"{{type}}\" not supported', {\n                type: props.item.type,\n            })}\n            itemId={props.item.id}\n        />\n        <div\n            style={{\n                display: 'flex',\n                justifyContent: 'center',\n                alignItems: 'center',\n                height: '90%',\n            }}\n        >\n            <NotInterestedIcon\n                style={{ width: 100, height: 100, align: 'center' }}\n                color=\"disabled\"\n            />\n        </div>\n    </Fragment>\n);\n\nNotSupportedItem.propTypes = {\n    item: PropTypes.object,\n};\n\nexport default NotSupportedItem;\n","import React from 'react';\nimport { colors } from '@dhis2/ui-core';\nimport PropTypes from 'prop-types';\n\nconst DescriptionIcon = ({ className }) => (\n    <svg\n        className={className}\n        xmlns=\"http://www.w3.org/2000/svg\"\n        viewBox=\"0 0 24 24\"\n        fill={colors.grey500}\n    >\n        <path d=\"M0 0h24v24H0z\" fill=\"none\" />\n        <path d=\"M14 2H6c-1.1 0-1.99.9-1.99 2L4 20c0 1.1.89 2 1.99 2H18c1.1 0 2-.9 2-2V8l-6-6zm2 16H8v-2h8v2zm0-4H8v-2h8v2zm-3-5V3.5L18.5 9H13z\" />\n    </svg>\n);\n\nDescriptionIcon.propTypes = {\n    className: PropTypes.string,\n};\n\nexport default DescriptionIcon;\n","import React from 'react';\nimport { colors } from '@dhis2/ui-core';\nimport PropTypes from 'prop-types';\n\nconst DeleteIcon = ({ className }) => (\n    <svg\n        className={className}\n        xmlns=\"http://www.w3.org/2000/svg\"\n        width=\"18\"\n        height=\"18\"\n        viewBox=\"0 0 24 24\"\n        fill={colors.red500}\n    >\n        <path d=\"M6 19c0 1.1.9 2 2 2h8c1.1 0 2-.9 2-2V7H6v12zM19 4h-3.5l-1-1h-5l-1 1H5v2h14V4z\" />\n        <path d=\"M0 0h24v24H0z\" fill=\"none\" />\n    </svg>\n);\n\nDeleteIcon.propTypes = {\n    className: PropTypes.string,\n};\n\nexport default DeleteIcon;\n","import React, { Fragment } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { colors } from '@dhis2/ui-core';\nimport DescriptionIcon from '../../../icons/Description';\n\nimport DeleteIcon from '../../../icons/Delete';\nimport Line from '../../../widgets/Line';\nimport { itemTypeMap, getItemUrl } from '../../../modules/itemTypes';\nimport { orArray } from '../../../modules/util';\nimport { tRemoveListItemContent } from './actions';\nimport ItemHeader from '../ItemHeader';\nimport classes from './Item.module.css';\n\nconst getItemTitle = item => itemTypeMap[item.type].pluralTitle;\n\nconst getContentItems = item =>\n    orArray(item[itemTypeMap[item.type].propName]).filter(\n        (item, index, array) =>\n            array.findIndex(el => el.id === item.id) === index\n    );\n\nconst ListItem = (props, context) => {\n    const { item, editMode, tRemoveListItemContent } = props;\n    const contentItems = getContentItems(item);\n\n    const getLink = contentItem => {\n        const deleteButton = (\n            <button\n                className={classes.deletebutton}\n                onClick={() => tRemoveListItemContent(item, contentItem)}\n            >\n                <DeleteIcon className={classes.deleteicon} />\n            </button>\n        );\n\n        return (\n            <Fragment>\n                <a\n                    className={classes.link}\n                    style={{ color: colors.grey900 }}\n                    href={getItemUrl(item.type, contentItem, context.d2)}\n                >\n                    {contentItem.name}\n                </a>\n                {editMode ? deleteButton : null}\n            </Fragment>\n        );\n    };\n\n    return (\n        <Fragment>\n            <ItemHeader title={getItemTitle(item)} itemId={item.id} />\n            <Line />\n            <div className=\"dashboard-item-content\">\n                <ul className={classes.list}>\n                    {contentItems.map(contentItem => (\n                        <li className={classes.item} key={contentItem.id}>\n                            <DescriptionIcon className={classes.itemicon} />\n                            {getLink(contentItem)}\n                        </li>\n                    ))}\n                </ul>\n            </div>\n        </Fragment>\n    );\n};\n\nListItem.propTypes = {\n    editMode: PropTypes.bool,\n    item: PropTypes.object,\n    tRemoveListItemContent: PropTypes.func,\n};\n\nListItem.contextTypes = {\n    d2: PropTypes.object,\n};\n\nexport default connect(\n    null,\n    {\n        tRemoveListItemContent,\n    }\n)(ListItem);\n","import {\n    acUpdateDashboardItem,\n    acRemoveDashboardItem,\n} from '../../../actions/editDashboard';\nimport { itemTypeMap } from '../../../modules/itemTypes';\n\nexport const tRemoveListItemContent = (dashboardItem, content) => dispatch => {\n    const listItemType = itemTypeMap[dashboardItem.type].propName;\n\n    const newContent = dashboardItem[listItemType].filter(\n        item => item.id !== content.id\n    );\n\n    if (newContent.length) {\n        dashboardItem[listItemType] = newContent;\n        dispatch(acUpdateDashboardItem(dashboardItem));\n    } else {\n        dispatch(acRemoveDashboardItem(dashboardItem));\n    }\n};\n","import React, { Fragment } from 'react';\nimport { connect } from 'react-redux';\nimport i18n from '@dhis2/d2-i18n';\nimport PropTypes from 'prop-types';\n\nimport Input from '@material-ui/core/Input';\nimport {\n    Parser as RichTextParser,\n    Editor as RichTextEditor,\n} from '@dhis2/d2-ui-rich-text';\n\nimport { acUpdateDashboardItem } from '../../../actions/editDashboard';\nimport { sGetEditDashboardItems } from '../../../reducers/editDashboard';\nimport { sGetDashboardItems } from '../../../reducers/dashboards';\nimport ItemHeader from '../ItemHeader';\nimport Line from '../../../widgets/Line';\n\nconst style = {\n    textDiv: {\n        padding: '10px',\n        whiteSpace: 'pre-line',\n        lineHeight: '20px',\n    },\n    textField: {\n        fontSize: '14px',\n        fontStretch: 'normal',\n        width: '90%',\n        margin: '0 auto',\n        display: 'block',\n        lineHeight: '24px',\n    },\n    container: {\n        marginBottom: '20px',\n        marginTop: '20px',\n    },\n};\n\nconst TextItem = props => {\n    const { item, editMode, text, acUpdateDashboardItem } = props;\n\n    const onChangeText = event => {\n        const updatedItem = {\n            ...item,\n            text: event.target.value,\n        };\n\n        acUpdateDashboardItem(updatedItem);\n    };\n\n    const viewItem = () => {\n        const textDivStyle = Object.assign({}, style.textField, style.textDiv);\n        return (\n            <div className=\"dashboard-item-content\" style={style.container}>\n                <RichTextParser style={textDivStyle}>{text}</RichTextParser>\n            </div>\n        );\n    };\n\n    const editItem = () => {\n        return (\n            <Fragment>\n                <ItemHeader title={i18n.t('Text item')} itemId={item.id} />\n                <Line />\n                <div className=\"dashboard-item-content\">\n                    <RichTextEditor onEdit={onChangeText}>\n                        <Input\n                            value={text}\n                            multiline\n                            fullWidth\n                            style={style.textField}\n                            placeholder={i18n.t('Add text here')}\n                            onChange={onChangeText}\n                        />\n                    </RichTextEditor>\n                </div>\n            </Fragment>\n        );\n    };\n\n    return <Fragment>{editMode ? editItem() : viewItem()}</Fragment>;\n};\n\nconst mapStateToProps = (state, ownProps) => {\n    const items = ownProps.editMode\n        ? sGetEditDashboardItems(state)\n        : sGetDashboardItems(state);\n\n    const item = items.find(item => item.id === ownProps.item.id);\n\n    return {\n        text: item ? item.text : '',\n    };\n};\n\nTextItem.propTypes = {\n    acUpdateDashboardItem: PropTypes.func,\n    editMode: PropTypes.bool,\n    item: PropTypes.object,\n    text: PropTypes.string,\n};\n\nexport default connect(\n    mapStateToProps,\n    {\n        acUpdateDashboardItem,\n    }\n)(TextItem);\n","import React, { Fragment } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport NotInterestedIcon from '@material-ui/icons/NotInterested';\n\nimport { FILTER_ORG_UNIT } from '../../../actions/itemFilters';\nimport { sGetItemFiltersRoot } from '../../../reducers/itemFilters';\nimport ItemHeader from '../ItemHeader';\nimport Line from '../../../widgets/Line';\n\nconst getIframeSrc = (appDetails, item, itemFilters) => {\n    let iframeSrc = `${appDetails.launchUrl}?dashboardItemId=${item.id}`;\n\n    if (\n        itemFilters &&\n        itemFilters[FILTER_ORG_UNIT] &&\n        itemFilters[FILTER_ORG_UNIT].length\n    ) {\n        const ouIds = itemFilters[FILTER_ORG_UNIT].map(\n            ouPath => ouPath.split('/').slice(-1)[0]\n        );\n\n        iframeSrc += `&userOrgUnit=${ouIds.join(',')}`;\n    }\n\n    return iframeSrc;\n};\n\nconst AppItem = ({ item, itemFilters }, context) => {\n    let appDetails;\n\n    const appKey = item.appKey;\n\n    if (appKey) {\n        appDetails = context.d2.system.installedApps.find(\n            app => app.key === appKey\n        );\n    }\n\n    return appDetails && appDetails.name && appDetails.launchUrl ? (\n        <Fragment>\n            <ItemHeader title={appDetails.name} itemId={item.id} />\n            <Line />\n            <iframe\n                title={appDetails.name}\n                src={getIframeSrc(appDetails, item, itemFilters)}\n                className=\"dashboard-item-content\"\n                style={{ border: 'none' }}\n            />\n        </Fragment>\n    ) : (\n        <Fragment>\n            <ItemHeader title={`${appKey} app not found`} />\n            <Line />\n            <div\n                className=\"dashboard-item-content\"\n                style={{\n                    display: 'flex',\n                    justifyContent: 'center',\n                    alignItems: 'center',\n                    height: '90%',\n                }}\n            >\n                <NotInterestedIcon\n                    color=\"disabled\"\n                    disabled\n                    style={{ width: 100, height: 100, align: 'center' }}\n                />\n            </div>\n        </Fragment>\n    );\n};\n\nAppItem.propTypes = {\n    item: PropTypes.object,\n    itemFilters: PropTypes.object,\n};\n\nAppItem.contextTypes = {\n    d2: PropTypes.object,\n};\n\nconst mapStateToProps = state => ({\n    itemFilters: sGetItemFiltersRoot(state),\n});\n\nexport default connect(mapStateToProps)(AppItem);\n","import React, { Fragment } from 'react';\nimport PropTypes from 'prop-types';\nimport i18n from '@dhis2/d2-i18n';\n\nimport { colors } from '@dhis2/ui-core';\nimport ItemHeader from '../ItemHeader';\n\nconst style = {\n    margin: '21px 28px',\n    fontSize: '14px',\n    lineHeight: '18px',\n    color: colors.grey600,\n};\n\nconst SpacerItem = props => {\n    return (\n        <Fragment>\n            <ItemHeader title={i18n.t('Spacer')} itemId={props.item.id} />\n            <p style={style}>\n                {i18n.t(\n                    'Use a spacer to create empty vertical space between other dashboard items.'\n                )}\n            </p>\n        </Fragment>\n    );\n};\n\nSpacerItem.propTypes = {\n    item: PropTypes.object,\n};\n\nexport default SpacerItem;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport VisualizationItem from './VisualizationItem/Item';\nimport MessagesItem from './MessagesItem/Item';\nimport NotSupportedItem from './NotSupportedItem/Item';\nimport ListItem from './ListItem/Item';\nimport TextItem from './TextItem/Item';\nimport AppItem from './AppItem/Item';\nimport SpacerItem from './SpacerItem/Item';\nimport {\n    APP,\n    VISUALIZATION,\n    REPORT_TABLE,\n    CHART,\n    MAP,\n    EVENT_CHART,\n    EVENT_REPORT,\n    MESSAGES,\n    REPORTS,\n    RESOURCES,\n    USERS,\n    TEXT,\n    SPACER,\n} from '../../modules/itemTypes';\nimport { DEFAULT_STATE_ITEM_FILTERS } from '../../reducers/itemFilters';\n\nconst getGridItem = type => {\n    switch (type) {\n        case VISUALIZATION:\n        case REPORT_TABLE:\n        case CHART:\n        case MAP:\n        case EVENT_CHART:\n        case EVENT_REPORT:\n            return VisualizationItem;\n        case MESSAGES:\n            return MessagesItem;\n        case REPORTS:\n        case RESOURCES:\n        case USERS:\n            return ListItem;\n        case TEXT:\n            return TextItem;\n        case SPACER:\n            return SpacerItem;\n        case APP:\n            return AppItem;\n        default:\n            return NotSupportedItem;\n    }\n};\n\nexport const Item = props => {\n    const GridItem = getGridItem(props.item.type);\n\n    return (\n        <GridItem\n            item={props.item}\n            editMode={props.editMode}\n            itemFilters={\n                props.editMode ? DEFAULT_STATE_ITEM_FILTERS : props.itemFilters\n            }\n            onToggleItemExpanded={props.onToggleItemExpanded}\n        />\n    );\n};\n\nItem.propTypes = {\n    editMode: PropTypes.bool,\n    item: PropTypes.object,\n    itemFilters: PropTypes.object,\n    onToggleItemExpanded: PropTypes.func,\n};\n","import React from 'react';\nimport { colors } from '@dhis2/ui-core';\nimport PropTypes from 'prop-types';\n\nexport const NoContentMessage = ({ text }) => (\n    <div\n        style={{\n            padding: '50px 10px',\n            textAlign: 'center',\n            fontSize: '15px',\n            fontWeight: 500,\n            color: colors.grey600,\n        }}\n    >\n        {text}\n    </div>\n);\n\nNoContentMessage.propTypes = {\n    text: PropTypes.string,\n};\n\nexport default NoContentMessage;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport debounce from 'lodash/debounce';\nimport pick from 'lodash/pick';\n\nconst defaultDebounceMs = 100;\nconst defaultBufferFactor = 0.25;\n\nclass ProgressiveLoadingContainer extends Component {\n    static propTypes = {\n        children: PropTypes.node.isRequired,\n        bufferFactor: PropTypes.number,\n        className: PropTypes.string,\n        debounceMs: PropTypes.number,\n        style: PropTypes.object,\n    };\n    static defaultProps = {\n        debounceMs: defaultDebounceMs,\n        bufferFactor: defaultBufferFactor,\n    };\n\n    state = {\n        shouldLoad: false,\n    };\n    containerRef = null;\n    shouldLoadHandler = null;\n\n    checkShouldLoad() {\n        const bufferPx = this.props.bufferFactor * window.innerHeight;\n\n        if (!this.containerRef) {\n            return;\n        }\n\n        const rect = this.containerRef.getBoundingClientRect();\n        if (\n            rect.bottom > -bufferPx &&\n            rect.top < window.innerHeight + bufferPx\n        ) {\n            this.setState({\n                shouldLoad: true,\n            });\n\n            this.removeHandler();\n        }\n    }\n\n    registerHandler() {\n        this.shouldLoadHandler = debounce(\n            () => this.checkShouldLoad(),\n            this.props.debounceMs\n        );\n\n        window.addEventListener('scroll', this.shouldLoadHandler);\n    }\n    removeHandler() {\n        window.removeEventListener('scroll', this.shouldLoadHandler);\n    }\n\n    componentDidMount() {\n        this.registerHandler();\n        this.checkShouldLoad();\n    }\n\n    componentWillUnmount() {\n        this.removeHandler();\n    }\n\n    render() {\n        const { children, className, style, ...props } = this.props;\n        const { shouldLoad } = this.state;\n\n        const eventProps = pick(props, [\n            'onMouseDown',\n            'onTouchStart',\n            'onMouseUp',\n            'onTouchEnd',\n        ]);\n\n        return (\n            <div\n                ref={ref => (this.containerRef = ref)}\n                style={style}\n                className={className}\n                {...eventProps}\n            >\n                {shouldLoad && children}\n            </div>\n        );\n    }\n}\n\nexport default ProgressiveLoadingContainer;\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport memoize from 'lodash/memoize';\nimport i18n from '@dhis2/d2-i18n';\nimport ReactGridLayout from 'react-grid-layout';\nimport { CircularLoader, ScreenCover } from '@dhis2/ui-core';\n\nimport {\n    acUpdateDashboardLayout,\n    acRemoveDashboardItem,\n} from '../../actions/editDashboard';\nimport { Item } from '../Item/Item';\nimport { resize as pluginResize } from '../Item/VisualizationItem/plugin';\nimport { isVisualizationType } from '../../modules/itemTypes';\nimport {\n    GRID_ROW_HEIGHT,\n    GRID_COMPACT_TYPE,\n    ITEM_MIN_HEIGHT,\n    MARGIN,\n    getGridColumns,\n    hasShape,\n    onItemResize,\n} from './gridUtil';\nimport { orArray } from '../../modules/util';\n\nimport NoContentMessage from '../../widgets/NoContentMessage';\n\nimport 'react-grid-layout/css/styles.css';\nimport 'react-resizable/css/styles.css';\n\nimport './ItemGrid.css';\nimport { sGetSelectedId, sGetSelectedIsLoading } from '../../reducers/selected';\nimport {\n    sGetEditDashboardRoot,\n    sGetEditDashboardItems,\n} from '../../reducers/editDashboard';\nimport {\n    sGetDashboardById,\n    sGetDashboardItems,\n} from '../../reducers/dashboards';\nimport ProgressiveLoadingContainer from '../Item/ProgressiveLoadingContainer';\n\n// Component\n\nconst EXPANDED_HEIGHT = 17;\n// this is set in the .dashboard-item-content css\nexport const ITEM_CONTENT_PADDING_BOTTOM = 4;\n\nexport class ItemGrid extends Component {\n    state = {\n        expandedItems: {},\n    };\n\n    constructor(props) {\n        super(props);\n\n        this.getMemoizedItem = memoize(this.getItem);\n    }\n\n    onToggleItemExpanded = clickedId => {\n        const isExpanded =\n            typeof this.state.expandedItems[clickedId] === 'boolean'\n                ? this.state.expandedItems[clickedId]\n                : false;\n\n        const expandedItems = { ...this.state.expandedItems };\n        expandedItems[clickedId] = !isExpanded;\n        this.setState({ expandedItems });\n    };\n\n    onRemoveItem = clickedId => {\n        this.props.acRemoveDashboardItem(clickedId);\n    };\n\n    componentWillReceiveProps(nextProps) {\n        if (nextProps.edit) {\n            this.setState({ expandedItems: {} });\n        }\n    }\n\n    onLayoutChange = newLayout => {\n        if (this.props.edit) {\n            this.props.acUpdateDashboardLayout(newLayout);\n        }\n    };\n\n    onResizeStop = (layout, oldItem, newItem) => {\n        onItemResize(newItem.i);\n\n        const dashboardItem = this.props.dashboardItems.find(\n            item => item.id === newItem.i\n        );\n\n        // call resize on the item component if it's a plugin type\n        if (dashboardItem && isVisualizationType(dashboardItem)) {\n            pluginResize(dashboardItem);\n        }\n    };\n\n    onRemoveItemWrapper = id => () => this.onRemoveItem(id);\n\n    getItem = dashboardItem => {\n        const expandedItem = this.state.expandedItems[dashboardItem.id];\n        const hProp = { h: dashboardItem.h };\n\n        if (expandedItem && expandedItem === true) {\n            hProp.h = dashboardItem.h + EXPANDED_HEIGHT;\n        }\n\n        return Object.assign({}, dashboardItem, hProp, {\n            i: dashboardItem.id,\n            minH: ITEM_MIN_HEIGHT,\n            randomNumber: Math.random(),\n        });\n    };\n\n    getItems = dashboardItems =>\n        dashboardItems.map(item => this.getMemoizedItem(item));\n\n    getItemComponent = item => {\n        const itemClassNames = [\n            item.type,\n            this.props.edit ? 'edit' : 'view',\n        ].join(' ');\n\n        return (\n            <ProgressiveLoadingContainer\n                key={item.i}\n                className={itemClassNames}\n            >\n                <Item\n                    item={item}\n                    editMode={this.props.edit}\n                    onToggleItemExpanded={this.onToggleItemExpanded}\n                />\n            </ProgressiveLoadingContainer>\n        );\n    };\n\n    getItemComponents = items => items.map(item => this.getItemComponent(item));\n\n    render() {\n        const { edit, isLoading, dashboardItems } = this.props;\n\n        if (!isLoading && !dashboardItems.length) {\n            return (\n                <NoContentMessage\n                    text={i18n.t('There are no items on this dashboard')}\n                />\n            );\n        }\n\n        const items = edit\n            ? this.getItems(dashboardItems)\n            : dashboardItems.map(this.getItem);\n\n        return (\n            <div className=\"grid-wrapper\">\n                {isLoading ? (\n                    <ScreenCover>\n                        <CircularLoader />\n                    </ScreenCover>\n                ) : null}\n                <ReactGridLayout\n                    onLayoutChange={this.onLayoutChange}\n                    onResizeStop={this.onResizeStop}\n                    className=\"layout\"\n                    layout={items}\n                    margin={MARGIN}\n                    cols={getGridColumns()}\n                    rowHeight={GRID_ROW_HEIGHT}\n                    width={window.innerWidth}\n                    compactType={GRID_COMPACT_TYPE}\n                    isDraggable={edit}\n                    isResizable={edit}\n                    draggableCancel=\"input,textarea\"\n                >\n                    {this.getItemComponents(items)}\n                </ReactGridLayout>\n            </div>\n        );\n    }\n}\n\nItemGrid.propTypes = {\n    acRemoveDashboardItem: PropTypes.func,\n    acUpdateDashboardLayout: PropTypes.func,\n    dashboardItems: PropTypes.array,\n    edit: PropTypes.bool,\n    isLoading: PropTypes.bool,\n};\n\nItemGrid.defaultProps = {\n    dashboardItems: [],\n};\n\n// Container\n\nconst mapStateToProps = (state, ownProps) => {\n    const selectedDashboard = ownProps.edit\n        ? sGetEditDashboardRoot(state)\n        : sGetDashboardById(state, sGetSelectedId(state));\n\n    const dashboardItems = ownProps.edit\n        ? sGetEditDashboardItems(state)\n        : sGetDashboardItems(state);\n\n    return {\n        isLoading: sGetSelectedIsLoading(state) || !selectedDashboard,\n        dashboardItems,\n    };\n};\n\nconst mapDispatchToProps = {\n    acUpdateDashboardLayout,\n    acRemoveDashboardItem,\n};\n\nconst mergeProps = (stateProps, dispatchProps, ownProps) => {\n    const validItems = orArray(stateProps.dashboardItems).filter(hasShape);\n\n    return {\n        ...dispatchProps,\n        edit: ownProps.edit,\n        isLoading: stateProps.isLoading,\n        dashboardItems: validItems,\n        onItemResize,\n    };\n};\n\nexport default connect(\n    mapStateToProps,\n    mapDispatchToProps,\n    mergeProps\n)(ItemGrid);\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nimport i18n from '@dhis2/d2-i18n';\n\nimport { colors } from '@dhis2/ui-core';\n\nconst styles = {\n    badgeContainer: {\n        margin: '2px',\n        padding: '0 16px',\n        borderRadius: '4px',\n        color: colors.white,\n        backgroundColor: '#212934',\n        height: 36,\n        display: 'flex',\n        alignItems: 'center',\n    },\n    badge: {\n        fontSize: '13px',\n        cursor: 'pointer',\n        whiteSpace: 'nowrap',\n    },\n    badgeRemove: {\n        fontSize: '12px',\n        textDecoration: 'underline',\n        marginLeft: '24px',\n        cursor: 'pointer',\n    },\n};\n\nclass FilterBadge extends Component {\n    onClick = id => () => this.props.onClick(id);\n    onRemove = id => () => this.props.onRemove(id);\n\n    render() {\n        const { data } = this.props;\n\n        return (\n            <div style={styles.badgeContainer}>\n                <span style={styles.badge} onClick={this.onClick(data.id)}>\n                    {`${data.name}: ${\n                        data.values.length > 1\n                            ? i18n.t('{{count}} selected', {\n                                  count: data.values.length,\n                              })\n                            : data.values[0].name\n                    }`}\n                </span>\n                <span\n                    style={styles.badgeRemove}\n                    onClick={this.onRemove(data.id)}\n                >\n                    {i18n.t('Remove')}\n                </span>\n            </div>\n        );\n    }\n}\n\nFilterBadge.propTypes = {\n    data: PropTypes.object.isRequired,\n    onClick: PropTypes.func.isRequired,\n    onRemove: PropTypes.func.isRequired,\n};\n\nFilterBadge.defaultProps = {\n    onClick: Function.prototype,\n    onRemove: Function.prototype,\n};\n\nexport default FilterBadge;\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { createSelector } from 'reselect';\nimport { withStyles } from '@material-ui/core/styles';\n\nimport { sGetDimensions } from '../../reducers/dimensions';\nimport { sGetItemFiltersRoot } from '../../reducers/itemFilters';\nimport { sGetControlBarUserRows } from '../../reducers/controlBar';\nimport { getTopOffset } from '../ControlBar/controlBarDimensions';\nimport { acRemoveItemFilter } from '../../actions/itemFilters';\nimport { acRemoveEditItemFilter } from '../../actions/editItemFilters';\nimport { acSetActiveModalDimension } from '../../actions/activeModalDimension';\n\nimport FilterBadge from './FilterBadge';\n\nconst styles = {\n    bar: {\n        position: 'sticky',\n        zIndex: 7,\n        padding: '8px 0',\n        display: 'flex',\n        justifyContent: 'center',\n        flexWrap: 'wrap',\n    },\n};\n\nexport class FilterBar extends Component {\n    onBadgeRemove = id => {\n        this.props.removeItemFilter(id);\n        this.props.removeEditItemFilter(id);\n    };\n\n    onBadgeClick = id => {\n        this.props.setActiveModalDimension({\n            id,\n            name: this.props.filters.find(item => item.id === id).name,\n        });\n    };\n\n    render() {\n        const { filters, userRows, classes } = this.props;\n        const top = getTopOffset(userRows) + 10;\n\n        return filters.length ? (\n            <div className={classes.bar} style={{ top }}>\n                {filters.map(filter => (\n                    <FilterBadge\n                        key={filter.id}\n                        data={filter}\n                        onClick={this.onBadgeClick}\n                        onRemove={this.onBadgeRemove}\n                    />\n                ))}\n            </div>\n        ) : null;\n    }\n}\n\nFilterBar.propTypes = {\n    filters: PropTypes.array.isRequired,\n    removeEditItemFilter: PropTypes.func.isRequired,\n    removeItemFilter: PropTypes.func.isRequired,\n    classes: PropTypes.object,\n    setActiveModalDimension: PropTypes.func,\n    userRows: PropTypes.number,\n};\n\nFilterBar.defaultProps = {\n    filters: [],\n    removeItemFIlter: Function.prototype,\n    removeEditItemFilter: Function.prototype,\n};\n\n// simplify the filters structure to:\n// [{ id: 'pe', name: 'Period', values: [{ id: 2019: name: '2019' }, {id: 'LAST_MONTH', name: 'Last month' }]}, ...]\nconst filtersSelector = createSelector(\n    [sGetItemFiltersRoot, sGetDimensions],\n    (filters, dimensions) =>\n        Object.keys(filters).reduce((arr, id) => {\n            arr.push({\n                id: id,\n                name: dimensions.find(dimension => dimension.id === id).name,\n                values: filters[id].map(value => ({\n                    id: value.id,\n                    name: value.displayName || value.name,\n                })),\n            });\n\n            return arr;\n        }, [])\n);\n\nconst mapStateToProps = state => ({\n    filters: filtersSelector(state),\n    userRows: sGetControlBarUserRows(state),\n});\n\nexport default connect(\n    mapStateToProps,\n    {\n        setActiveModalDimension: acSetActiveModalDimension,\n        removeItemFilter: acRemoveItemFilter,\n        removeEditItemFilter: acRemoveEditItemFilter,\n    }\n)(withStyles(styles)(FilterBar));\n","import React, { Fragment } from 'react';\nimport PropTypes from 'prop-types';\nimport TitleBar from '../TitleBar/TitleBar';\nimport ItemGrid from '../ItemGrid/ItemGrid';\nimport FilterBar from '../FilterBar/FilterBar';\n\nexport const DashboardContent = props => (\n    <Fragment>\n        <TitleBar edit={props.editMode} />\n        <FilterBar />\n        <ItemGrid edit={props.editMode} />\n    </Fragment>\n);\n\nDashboardContent.propTypes = {\n    editMode: PropTypes.bool,\n};\n\nexport default DashboardContent;\n","import React, { Fragment } from 'react';\nimport { connect } from 'react-redux';\nimport isEmpty from 'lodash/isEmpty';\nimport i18n from '@dhis2/d2-i18n';\nimport PropTypes from 'prop-types';\n\nimport {\n    sGetAllDashboards,\n    sDashboardsIsFetching,\n} from '../../reducers/dashboards';\nimport { sGetSelectedId } from '../../reducers/selected';\nimport DashboardsBar from '../ControlBar/DashboardsBar';\nimport DashboardVerticalOffset from './DashboardVerticalOffset';\nimport DashboardContent from './DashboardContent';\nimport NoContentMessage from '../../widgets/NoContentMessage';\n\nexport const Content = ({ hasDashboardContent, dashboardsIsEmpty }) => {\n    const msg = dashboardsIsEmpty\n        ? i18n.t(\n              'No dashboards found. Use the + button to create a new dashboard.'\n          )\n        : i18n.t('Requested dashboard not found');\n\n    return hasDashboardContent ? (\n        <DashboardContent editMode={false} />\n    ) : (\n        <NoContentMessage text={msg} />\n    );\n};\n\nContent.propTypes = {\n    dashboardsIsEmpty: PropTypes.bool,\n    hasDashboardContent: PropTypes.bool,\n};\n\nexport const ViewDashboard = ({ id, dashboardsIsEmpty, dashboardsLoaded }) => {\n    const hasDashboardContent = id && !dashboardsIsEmpty;\n    const contentNotReady = !dashboardsLoaded || id === null;\n\n    return (\n        <Fragment>\n            <DashboardsBar />\n            <DashboardVerticalOffset />\n            <div className=\"dashboard-wrapper\">\n                {contentNotReady ? null : (\n                    <Content\n                        hasDashboardContent={hasDashboardContent}\n                        dashboardsIsEmpty={dashboardsIsEmpty}\n                    />\n                )}\n            </div>\n        </Fragment>\n    );\n};\n\nViewDashboard.propTypes = {\n    dashboardsIsEmpty: PropTypes.bool,\n    dashboardsLoaded: PropTypes.bool,\n    id: PropTypes.string,\n};\n\nconst mapStateToProps = state => {\n    const dashboards = sGetAllDashboards(state);\n\n    return {\n        id: sGetSelectedId(state),\n        dashboardsIsEmpty: isEmpty(dashboards),\n        dashboardsLoaded: !sDashboardsIsFetching(state),\n    };\n};\n\nexport default connect(mapStateToProps)(ViewDashboard);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport i18n from '@dhis2/d2-i18n';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport { Button } from '@dhis2/ui-core';\n\nexport const ConfirmDeleteDialog = ({\n    dashboardName,\n    onDeleteConfirmed,\n    onContinueEditing,\n    open,\n}) => {\n    const actions = [\n        <Button key=\"cancel\" secondary onClick={onContinueEditing}>\n            {i18n.t('Cancel')}\n        </Button>,\n        <Button key=\"delete\" destructive onClick={onDeleteConfirmed}>\n            {i18n.t('Delete')}\n        </Button>,\n    ];\n\n    return (\n        <Dialog open={open} onClose={onContinueEditing}>\n            <DialogTitle style={{ fontSize: '1.25rem', fontWeight: '450' }}>\n                {i18n.t('Delete dashboard')}\n            </DialogTitle>\n            <DialogContent>\n                <DialogContentText style={{ fontSize: '0.875rem' }}>\n                    {i18n.t(\n                        'Deleting dashboard \"{{ dashboardName }}\" will remove it for all users. This action cannot be undone. Are you sure you want to permanently delete this dashboard?',\n                        { dashboardName }\n                    )}\n                </DialogContentText>\n            </DialogContent>\n            <DialogActions>{actions}</DialogActions>\n        </Dialog>\n    );\n};\n\nConfirmDeleteDialog.propTypes = {\n    dashboardName: PropTypes.string,\n    open: PropTypes.bool,\n    onContinueEditing: PropTypes.func,\n    onDeleteConfirmed: PropTypes.func,\n};\n\nexport default ConfirmDeleteDialog;\n","import React, { Component, Fragment } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { Redirect } from 'react-router-dom';\nimport i18n from '@dhis2/d2-i18n';\nimport ControlBar from './ControlBar';\nimport TranslationDialog from '@dhis2/d2-ui-translation-dialog';\nimport { Button } from '@dhis2/ui-core';\n\nimport ConfirmDeleteDialog from './ConfirmDeleteDialog';\nimport {\n    tSaveDashboard,\n    acClearEditDashboard,\n} from '../../actions/editDashboard';\nimport {\n    tDeleteDashboard,\n    acSetDashboardDisplayName,\n} from '../../actions/dashboards';\nimport {\n    sGetEditDashboardRoot,\n    sGetIsNewDashboard,\n} from '../../reducers/editDashboard';\nimport {\n    CONTROL_BAR_ROW_HEIGHT,\n    MIN_ROW_COUNT,\n    getControlBarHeight,\n} from './controlBarDimensions';\nimport { apiFetchDashboard } from '../../api/dashboards';\n\nimport classes from './styles/DashboardsBar.module.css';\n\nconst buttonBarStyle = {\n    height: CONTROL_BAR_ROW_HEIGHT,\n    paddingTop: '15px',\n    marginLeft: '15px',\n    marginRight: '15px',\n};\n\nexport class EditBar extends Component {\n    state = {\n        translationDialogIsOpen: false,\n        dashboardModel: undefined,\n        confirmDeleteDialogOpen: false,\n        redirectUrl: undefined,\n    };\n\n    onConfirmDelete = () => {\n        this.setState({ confirmDeleteDialogOpen: true });\n    };\n\n    onSave = () => {\n        this.props.onSave().then(newId => {\n            this.setState({ redirectUrl: `/${newId}` });\n        });\n    };\n\n    onDiscard = () => {\n        this.props.onDiscardChanges();\n        const redirectUrl = this.props.dashboardId\n            ? `/${this.props.dashboardId}`\n            : '/';\n        this.setState({ redirectUrl });\n    };\n\n    onContinueEditing = () => {\n        this.setState({ confirmDeleteDialogOpen: false });\n    };\n\n    onDeleteConfirmed = () => {\n        this.setState({ confirmDeleteDialogOpen: false });\n        this.props.onDelete(this.props.dashboardId).then(() => {\n            this.setState({ redirectUrl: '/' });\n        });\n    };\n\n    onTranslationsSaved = async translations => {\n        if (translations && translations.length) {\n            const dbLocale = await this.context.d2.currentUser.userSettings.get(\n                'keyDbLocale'\n            );\n\n            const translation = translations.find(\n                t => t.locale === dbLocale && t.property === 'NAME'\n            );\n\n            if (translation && translation.value) {\n                this.props.onTranslate(\n                    this.props.dashboardId,\n                    translation.value\n                );\n            }\n        }\n    };\n\n    fetchDashboardModel = () => {\n        if (this.props.dashboardId && !this.state.dashboardModel) {\n            apiFetchDashboard(this.props.dashboardId).then(dashboardModel =>\n                this.setState({ dashboardModel })\n            );\n        }\n    };\n\n    componentDidMount() {\n        this.fetchDashboardModel();\n    }\n\n    componentDidUpdate() {\n        this.fetchDashboardModel();\n    }\n\n    toggleTranslationDialog = () => {\n        this.setState({\n            translationDialogIsOpen: !this.state.translationDialogIsOpen,\n        });\n    };\n\n    confirmDeleteDialog = () =>\n        this.props.deleteAccess && this.props.dashboardId ? (\n            <ConfirmDeleteDialog\n                dashboardName={this.props.dashboardName}\n                onDeleteConfirmed={this.onDeleteConfirmed}\n                onContinueEditing={this.onContinueEditing}\n                open={this.state.confirmDeleteDialogOpen}\n            />\n        ) : null;\n\n    translationDialog = () =>\n        this.state.dashboardModel && this.state.dashboardModel.id ? (\n            <TranslationDialog\n                className=\"translation-dialog\"\n                d2={this.context.d2}\n                open={this.state.translationDialogIsOpen}\n                onRequestClose={this.toggleTranslationDialog}\n                objectToTranslate={this.state.dashboardModel}\n                fieldsToTranslate={['name', 'description']}\n                // TODO handle messages in snackbar\n                onTranslationSaved={this.onTranslationsSaved}\n                onTranslationError={err =>\n                    console.log('translation update error', err)\n                }\n            />\n        ) : null;\n\n    render() {\n        if (this.state.redirectUrl) {\n            return <Redirect to={this.state.redirectUrl} />;\n        }\n\n        const { dashboardId, deleteAccess, updateAccess } = this.props;\n        const controlBarHeight = getControlBarHeight(MIN_ROW_COUNT);\n\n        const discardBtnText = updateAccess\n            ? i18n.t('Exit without saving')\n            : i18n.t('Go to dashboards');\n\n        return (\n            <Fragment>\n                <ControlBar height={controlBarHeight} editMode={true}>\n                    <div style={buttonBarStyle}>\n                        {updateAccess ? (\n                            <div className={classes.leftControls}>\n                                <span style={{ marginRight: '15px' }}>\n                                    <Button primary onClick={this.onSave}>\n                                        {i18n.t('Save changes')}\n                                    </Button>\n                                </span>\n\n                                {dashboardId ? (\n                                    <span style={{ marginRight: '15px' }}>\n                                        <Button\n                                            onClick={\n                                                this.toggleTranslationDialog\n                                            }\n                                        >\n                                            {i18n.t('Translate')}\n                                        </Button>\n                                    </span>\n                                ) : null}\n                                {dashboardId && deleteAccess ? (\n                                    <Button onClick={this.onConfirmDelete}>\n                                        {i18n.t('Delete')}\n                                    </Button>\n                                ) : null}\n                            </div>\n                        ) : null}\n\n                        <div className={classes.rightControls}>\n                            <Button secondary onClick={this.onDiscard}>\n                                {discardBtnText}\n                            </Button>\n                        </div>\n                    </div>\n                </ControlBar>\n                {this.translationDialog()}\n                {this.confirmDeleteDialog()}\n            </Fragment>\n        );\n    }\n}\n\nEditBar.propTypes = {\n    dashboardId: PropTypes.string,\n    dashboardName: PropTypes.string,\n    deleteAccess: PropTypes.bool,\n    updateAccess: PropTypes.bool,\n    onDelete: PropTypes.func,\n    onDiscardChanges: PropTypes.func,\n    onSave: PropTypes.func,\n    onTranslate: PropTypes.func,\n};\n\nEditBar.contextTypes = {\n    d2: PropTypes.object,\n};\n\nconst mapStateToProps = state => {\n    const dashboard = sGetEditDashboardRoot(state);\n\n    let deleteAccess;\n    let updateAccess;\n    if (sGetIsNewDashboard(state)) {\n        deleteAccess = true;\n        updateAccess = true;\n    } else {\n        updateAccess = dashboard.access ? dashboard.access.update : false;\n        deleteAccess = dashboard.access ? dashboard.access.delete : false;\n    }\n\n    return {\n        dashboardId: dashboard.id,\n        dashboardName: dashboard.name,\n        deleteAccess,\n        updateAccess,\n    };\n};\n\nconst mapDispatchToProps = dispatch => ({\n    onSave: () => dispatch(tSaveDashboard()).then(id => id),\n    onDelete: id => dispatch(tDeleteDashboard(id)),\n    onDiscardChanges: () => dispatch(acClearEditDashboard()),\n    onTranslate: (id, value) => dispatch(acSetDashboardDisplayName(id, value)),\n});\n\nexport default connect(\n    mapStateToProps,\n    mapDispatchToProps\n)(EditBar);\n","import React, { Fragment, Component } from 'react';\nimport { connect } from 'react-redux';\nimport i18n from '@dhis2/d2-i18n';\nimport PropTypes from 'prop-types';\n\nimport { acSetEditDashboard } from '../../actions/editDashboard';\nimport { sGetSelectedId } from '../../reducers/selected';\nimport {\n    sGetDashboardById,\n    sGetDashboardItems,\n    sDashboardsIsFetching,\n} from '../../reducers/dashboards';\nimport DashboardVerticalOffset from './DashboardVerticalOffset';\nimport DashboardContent from './DashboardContent';\nimport EditBar from '../ControlBar/EditBar';\nimport NoContentMessage from '../../widgets/NoContentMessage';\n\nexport const Content = ({ updateAccess }) => {\n    return updateAccess ? (\n        <DashboardContent editMode={true} />\n    ) : (\n        <NoContentMessage text={i18n.t('No access')} />\n    );\n};\n\nContent.propTypes = {\n    updateAccess: PropTypes.bool,\n};\nexport class EditDashboard extends Component {\n    state = {\n        initialized: false,\n    };\n\n    initEditDashboard = () => {\n        if (this.props.dashboard) {\n            this.setState({ initialized: true });\n            this.props.setEditDashboard(this.props.dashboard, this.props.items);\n        }\n    };\n\n    componentDidMount() {\n        this.initEditDashboard();\n    }\n\n    componentDidUpdate() {\n        if (!this.state.initialized) {\n            this.initEditDashboard();\n        }\n    }\n\n    getDashboardContent = () => {\n        const contentNotReady =\n            !this.props.dashboardsLoaded || this.props.id === null;\n\n        return (\n            <div className=\"dashboard-wrapper\">\n                {contentNotReady ? null : (\n                    <Content updateAccess={this.props.updateAccess} />\n                )}\n            </div>\n        );\n    };\n\n    render() {\n        return (\n            <Fragment>\n                <EditBar />\n                <DashboardVerticalOffset editMode={true} />\n                {this.getDashboardContent()}\n            </Fragment>\n        );\n    }\n}\n\nEditDashboard.propTypes = {\n    dashboard: PropTypes.object,\n    dashboardsLoaded: PropTypes.bool,\n    id: PropTypes.string,\n    items: PropTypes.array,\n    setEditDashboard: PropTypes.func,\n    updateAccess: PropTypes.bool,\n};\n\nconst mapStateToProps = state => {\n    const id = sGetSelectedId(state);\n    const dashboard = id ? sGetDashboardById(state, id) : null;\n\n    const updateAccess =\n        dashboard && dashboard.access ? dashboard.access.update : false;\n\n    return {\n        dashboard,\n        id,\n        updateAccess,\n        items: sGetDashboardItems(state),\n        dashboardsLoaded: !sDashboardsIsFetching(state),\n    };\n};\n\nexport default connect(\n    mapStateToProps,\n    {\n        setEditDashboard: acSetEditDashboard,\n    }\n)(EditDashboard);\n","import React, { Component, Fragment } from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\n\nimport { acSetEditNewDashboard } from '../../actions/editDashboard';\nimport DashboardVerticalOffset from './DashboardVerticalOffset';\nimport EditBar from '../ControlBar/EditBar';\nimport DashboardContent from './DashboardContent';\n\nclass NewDashboard extends Component {\n    componentDidMount() {\n        this.props.setNewDashboard();\n    }\n\n    render() {\n        return (\n            <Fragment>\n                <EditBar />\n                <DashboardVerticalOffset editMode={true} />\n                <div className=\"dashboard-wrapper\">\n                    <DashboardContent editMode={true} />\n                </div>\n            </Fragment>\n        );\n    }\n}\n\nNewDashboard.propTypes = {\n    setNewDashboard: PropTypes.func,\n};\n\nexport default connect(\n    null,\n    {\n        setNewDashboard: acSetEditNewDashboard,\n    }\n)(NewDashboard);\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\n\nimport { tSelectDashboard } from '../../actions/dashboards';\nimport { sDashboardsIsFetching } from '../../reducers/dashboards';\nimport { EDIT, NEW } from './dashboardModes';\nimport ViewDashboard from './ViewDashboard';\nimport EditDashboard from './EditDashboard';\nimport NewDashboard from './NewDashboard';\n\nclass Dashboard extends Component {\n    setDashboard = () => {\n        if (this.props.dashboardsLoaded) {\n            const id = this.props.match.params.dashboardId || null;\n\n            this.props.selectDashboard(id);\n\n            this.scrollToTop();\n        }\n    };\n\n    scrollToTop = () => {\n        window.scrollTo(0, 0);\n    };\n\n    componentDidMount() {\n        this.setDashboard();\n    }\n\n    componentDidUpdate() {\n        this.setDashboard();\n    }\n\n    render() {\n        switch (this.props.mode) {\n            case EDIT:\n                return <EditDashboard />;\n            case NEW:\n                return <NewDashboard />;\n            default:\n                return <ViewDashboard />;\n        }\n    }\n}\n\nDashboard.propTypes = {\n    dashboardsLoaded: PropTypes.bool,\n    match: PropTypes.object,\n    mode: PropTypes.string,\n    selectDashboard: PropTypes.func,\n};\n\nconst mapStateToProps = state => {\n    return { dashboardsLoaded: !sDashboardsIsFetching(state) };\n};\n\nexport default connect(\n    mapStateToProps,\n    {\n        selectDashboard: tSelectDashboard,\n    }\n)(Dashboard);\n","export const EDIT = 'edit';\nexport const NEW = 'new';\nexport const VIEW = 'view';\n","import React, { Component } from 'react';\nimport { HashRouter as Router, Route, Switch } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport i18n from '@dhis2/d2-i18n';\nimport { HeaderBar } from '@dhis2/ui-widgets';\nimport { CssVariables } from '@dhis2/ui-core';\n\nimport { EDIT, VIEW, NEW } from './Dashboard/dashboardModes';\nimport { acReceivedUser } from '../actions/user';\nimport { tFetchDashboards } from '../actions/dashboards';\nimport { tSetControlBarRows } from '../actions/controlBar';\nimport { tSetDimensions } from '../actions/dimensions';\nimport Dashboard from './Dashboard/Dashboard';\nimport SnackbarMessage from './SnackbarMessage/SnackbarMessage';\n\nimport 'typeface-roboto';\nimport './App.css';\n\nexport class App extends Component {\n    componentDidMount() {\n        this.props.setCurrentUser(this.props.d2.currentUser);\n        this.props.fetchDashboards();\n        this.props.setControlBarRows();\n        this.props.setDimensions(this.props.d2);\n    }\n\n    getChildContext() {\n        return { baseUrl: this.props.baseUrl, i18n, d2: this.props.d2 };\n    }\n\n    render() {\n        return (\n            <>\n                <CssVariables colors spacers />\n                <div className=\"app-wrapper\">\n                    <div className=\"dashboard-header-bar\">\n                        <HeaderBar appName={i18n.t('Dashboard')} />\n                    </div>\n                    <Router>\n                        <Switch>\n                            <Route\n                                exact\n                                path=\"/\"\n                                render={props => (\n                                    <Dashboard {...props} mode={VIEW} />\n                                )}\n                            />\n                            <Route\n                                exact\n                                path=\"/new\"\n                                render={props => (\n                                    <Dashboard {...props} mode={NEW} />\n                                )}\n                            />\n                            <Route\n                                exact\n                                path=\"/:dashboardId\"\n                                render={props => (\n                                    <Dashboard {...props} mode={VIEW} />\n                                )}\n                            />\n                            <Route\n                                exact\n                                path=\"/:dashboardId/edit\"\n                                render={props => (\n                                    <Dashboard {...props} mode={EDIT} />\n                                )}\n                            />\n                        </Switch>\n                    </Router>\n                    <SnackbarMessage />\n                </div>\n            </>\n        );\n    }\n}\n\nApp.propTypes = {\n    fetchDashboards: PropTypes.func.isRequired,\n    setControlBarRows: PropTypes.func.isRequired,\n    setCurrentUser: PropTypes.func.isRequired,\n    setDimensions: PropTypes.func.isRequired,\n    baseUrl: PropTypes.string,\n    d2: PropTypes.object,\n};\n\nApp.childContextTypes = {\n    baseUrl: PropTypes.string,\n    i18n: PropTypes.object,\n    d2: PropTypes.object,\n};\n\nconst mapDispatchToProps = dispatch => {\n    return {\n        setCurrentUser: currentUser => dispatch(acReceivedUser(currentUser)),\n        fetchDashboards: () => dispatch(tFetchDashboards()),\n        setControlBarRows: () => dispatch(tSetControlBarRows()),\n        setDimensions: d2 => dispatch(tSetDimensions(d2)),\n    };\n};\n\nexport default connect(\n    null,\n    mapDispatchToProps\n)(App);\n","import { RECEIVED_USER } from '../reducers/user';\n\nexport const acReceivedUser = value => ({\n    type: RECEIVED_USER,\n    value,\n});\n","//------------------------------------------------------------------------------\n// <auto-generated>\n// This code was generated by d2-i18n-generate.\n//\n// Changes to this file may cause incorrect behavior and will be lost if\n// the code is regenerated.\n// </auto-generated>\n//------------------------------------------------------------------------------\nimport i18n from '@dhis2/d2-i18n';\nimport moment from 'moment';\nimport 'moment/locale/ar';\nimport 'moment/locale/es';\nimport 'moment/locale/fr';\nimport 'moment/locale/lo';\nimport 'moment/locale/pt';\nimport 'moment/locale/ru';\nimport 'moment/locale/sv';\nimport 'moment/locale/tg';\nimport 'moment/locale/uk';\nimport 'moment/locale/ur';\nimport 'moment/locale/vi';\nimport 'moment/locale/zh-cn';\n\nimport arTranslations from './ar/translations.json';\nimport daTranslations from './da/translations.json';\nimport enTranslations from './en/translations.json';\nimport esTranslations from './es/translations.json';\nimport frTranslations from './fr/translations.json';\nimport idTranslations from './id/translations.json';\nimport kmTranslations from './km/translations.json';\nimport loTranslations from './lo/translations.json';\nimport myTranslations from './my/translations.json';\nimport prsTranslations from './prs/translations.json';\nimport psTranslations from './ps/translations.json';\nimport ptTranslations from './pt/translations.json';\nimport pt_BRTranslations from './pt_BR/translations.json';\nimport ruTranslations from './ru/translations.json';\nimport svTranslations from './sv/translations.json';\nimport tetTranslations from './tet/translations.json';\nimport tgTranslations from './tg/translations.json';\nimport ukTranslations from './uk/translations.json';\nimport urTranslations from './ur/translations.json';\nimport viTranslations from './vi/translations.json';\nimport zhTranslations from './zh/translations.json';\nimport zh_CNTranslations from './zh_CN/translations.json';\n\nconst namespace = 'dashboards-app';\nmoment.locale('en');\n\ni18n.addResources('ar', namespace, arTranslations);\ni18n.addResources('da', namespace, daTranslations);\ni18n.addResources('en', namespace, enTranslations);\ni18n.addResources('es', namespace, esTranslations);\ni18n.addResources('fr', namespace, frTranslations);\ni18n.addResources('id', namespace, idTranslations);\ni18n.addResources('km', namespace, kmTranslations);\ni18n.addResources('lo', namespace, loTranslations);\ni18n.addResources('my', namespace, myTranslations);\ni18n.addResources('prs', namespace, prsTranslations);\ni18n.addResources('ps', namespace, psTranslations);\ni18n.addResources('pt', namespace, ptTranslations);\ni18n.addResources('pt_BR', namespace, pt_BRTranslations);\ni18n.addResources('ru', namespace, ruTranslations);\ni18n.addResources('sv', namespace, svTranslations);\ni18n.addResources('tet', namespace, tetTranslations);\ni18n.addResources('tg', namespace, tgTranslations);\ni18n.addResources('uk', namespace, ukTranslations);\ni18n.addResources('ur', namespace, urTranslations);\ni18n.addResources('vi', namespace, viTranslations);\ni18n.addResources('zh', namespace, zhTranslations);\ni18n.addResources('zh_CN', namespace, zh_CNTranslations);\n\ni18n.setDefaultNamespace(namespace);\ni18n.changeLanguage('en');\n\nexport default i18n;\n","/** @module reducers/selected */\nimport { validateReducer } from '../modules/util';\n\nexport const SET_STYLE = 'SET_STYLE';\n\nexport const DEFAULT_STATE_STYLE = 'LIST';\n\n/**\n * Reducer functions that computes and returns the new state based on the given action\n * @function\n * @param {Object} state The current state\n * @param {Object} action The action to be evaluated\n */\nconst style = (state = DEFAULT_STATE_STYLE, action) => {\n    switch (action.type) {\n        case SET_STYLE:\n            return validateReducer(action.value, DEFAULT_STATE_STYLE);\n        default:\n            return state;\n    }\n};\n\nexport default style;\n\n/**\n * Selectors that point to specific props in the state object\n * @function\n * @param {Object} state\n * @returns {Object}\n */\nexport const sGetStyleRoot = state => state.style;\n","import { combineReducers } from 'redux';\nimport arraySort from 'd2-utilizr/lib/arraySort';\n\nimport dashboards, { sGetDashboardsRoot } from './dashboards';\nimport selected from './selected';\nimport dashboardsFilter, {\n    ownerData,\n    sGetFilterName,\n    sGetFilterOrder,\n    sGetFilterOwner,\n} from './dashboardsFilter';\nimport controlBar from './controlBar';\nimport visualizations from './visualizations';\nimport editDashboard from './editDashboard';\nimport messages from './messages';\nimport user from './user';\nimport snackbar from './snackbar';\nimport itemFilters from './itemFilters';\nimport editItemFilters from './editItemFilters';\nimport style from './style';\nimport dimensions from './dimensions';\nimport settings from './settings';\nimport activeModalDimension from './activeModalDimension';\n\nconst USER = 'system';\n\n// Reducers\n\nexport default combineReducers({\n    dashboards,\n    selected,\n    dashboardsFilter,\n    controlBar,\n    visualizations,\n    messages,\n    user,\n    editDashboard,\n    itemFilters,\n    editItemFilters,\n    style,\n    snackbar,\n    dimensions,\n    settings,\n    activeModalDimension,\n});\n\n// Map constants to data\nconst mapConstToData = {\n    NAME: 'name',\n    ITEMS: 'numberOfItems',\n    CREATED: 'created',\n    OWNER: 'owner',\n};\n\n// Selectors\n\n// Filter dashboards by name\nexport const sFilterDashboardsByName = (dashboards, filter) =>\n    dashboards.filter(d =>\n        d.displayName.toLowerCase().includes(filter.toLowerCase())\n    );\n\n// Filter dashboards by owner, TODO FIXME\nexport const sFilterDashboardsByOwner = (dashboards, filter) => {\n    const ME = ownerData[1]; // TODO\n    const OTHERS = ownerData[2]; // TODO\n\n    switch (filter) {\n        case ME:\n            return dashboards.filter(d => d.owner === USER);\n        case OTHERS:\n            return dashboards.filter(d => d.owner !== USER);\n        default:\n            return dashboards;\n    }\n};\n\n// Filter dashboards by order\nexport const sFilterDashboardsByOrder = (dashboards, filter) => {\n    const filterValues = filter.split(':');\n\n    const key = filterValues[0];\n    const direction = filterValues[1];\n\n    return arraySort(dashboards, direction, mapConstToData[key]);\n};\n\n// Selectors dependency level 2\n\n// Get filtered dashboards\nexport const sGetFilteredDashboards = state => {\n    const dashboards = sGetDashboardsRoot(state);\n\n    const nameFilter = sGetFilterName(state);\n    const ownerFilter = sGetFilterOwner(state);\n    const orderFilter = sGetFilterOrder(state);\n\n    return sFilterDashboardsByOrder(\n        sFilterDashboardsByName(\n            sFilterDashboardsByOwner(dashboards, ownerFilter),\n            nameFilter\n        ),\n        orderFilter\n    );\n};\n","import { createStore, applyMiddleware, compose } from 'redux';\nimport { createLogger } from 'redux-logger';\nimport thunk from 'redux-thunk';\nimport reducer from './reducers';\n\nconst configureStore = () => {\n    const middleware = [thunk];\n\n    // Enable Redux devtools if extension is installed instead of redux-logger\n    const composeEnhancers =\n        window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\n    if (\n        !window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ &&\n        process.env.NODE_ENV !== 'production'\n    ) {\n        middleware.push(createLogger());\n    }\n\n    return createStore(\n        reducer,\n        composeEnhancers(applyMiddleware(...middleware))\n    );\n};\n\nexport default configureStore;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport { MuiThemeProvider, createMuiTheme } from '@material-ui/core/styles';\nimport { init as d2Init, config, getManifest, getUserSettings } from 'd2';\nimport dhis2theme from '@dhis2/d2-ui-core/theme/mui3.theme';\n\nimport { Provider as RuntimeProvider } from '@dhis2/app-runtime';\nimport { CssReset } from '@dhis2/ui-core';\n\nimport App from './components/App';\nimport './index.css';\nimport i18n from './locales';\nimport configureStore from './configureStore';\n\nconst muiTheme = () => createMuiTheme(dhis2theme);\n\nconst configI18n = userSettings => {\n    const uiLocale = userSettings.keyUiLocale;\n\n    if (uiLocale && uiLocale !== 'en') {\n        config.i18n.sources.add(`./i18n/i18n_module_${uiLocale}.properties`);\n    }\n\n    config.i18n.sources.add('./i18n/i18n_module_en.properties');\n    i18n.changeLanguage(uiLocale);\n};\n\nconst init = async () => {\n    const manifest = await getManifest('./manifest.webapp');\n\n    // log app info\n    console.info(\n        `Dashboards app, v${manifest.version}, ${\n            manifest.manifest_generated_at\n        }`\n    );\n\n    const isProd = process.env.NODE_ENV === 'production';\n\n    if (\n        !isProd &&\n        (!process.env.REACT_APP_DHIS2_BASE_URL ||\n            !process.env.REACT_APP_DHIS2_AUTHORIZATION)\n    ) {\n        throw new Error(\n            'Missing env variables REACT_APP_DHIS2_BASE_URL and REACT_APP_DHIS2_AUTHORIZATION'\n        );\n    }\n\n    // api config\n    const baseUrl = isProd\n        ? manifest.activities.dhis.href\n        : process.env.REACT_APP_DHIS2_BASE_URL;\n    const authorization = process.env.REACT_APP_DHIS2_AUTHORIZATION;\n\n    config.baseUrl = `${baseUrl}/api/${manifest.dhis2.apiVersion}`;\n    config.headers = isProd ? null : { Authorization: authorization };\n    config.schemas = [\n        'chart',\n        'map',\n        'report',\n        'reportTable',\n        'eventChart',\n        'eventReport',\n        'dashboard',\n        'organisationUnit',\n        'userGroup',\n    ];\n\n    getUserSettings()\n        .then(configI18n)\n        .then(() => d2Init(config))\n        .then(initializedD2 => {\n            ReactDOM.render(\n                <RuntimeProvider\n                    config={{\n                        baseUrl: baseUrl,\n                        apiVersion: manifest.dhis2.apiVersion,\n                    }}\n                >\n                    <CssReset />\n                    <Provider store={configureStore()}>\n                        <MuiThemeProvider theme={muiTheme()}>\n                            <App baseUrl={baseUrl} d2={initializedD2} />\n                        </MuiThemeProvider>\n                    </Provider>\n                </RuntimeProvider>,\n                document.getElementById('root')\n            );\n        });\n};\n\ninit();\n","import isObject from 'lodash/isObject';\n\n// validation\nexport function orNull(param) {\n    return param === undefined ? null : param;\n}\n\nexport function orArray(param) {\n    return Array.isArray(param) ? param : [];\n}\n\nexport function orObject(param) {\n    return isObject(param) ? param : {};\n}\n\n// array\nexport function arrayGetById(array, id) {\n    return array.find(item => item.id === id);\n}\n\n// object\nexport function arrayToIdMap(array) {\n    return array.reduce((obj, item) => {\n        obj[item.id] = item;\n        return obj;\n    }, {});\n}\n\n// date\nexport function getDate() {\n    const y = Math.floor(Math.random() * 3) + 2015;\n    const M = Math.floor(Math.random() * 12) + 1;\n    const d = Math.floor(Math.random() * 28) + 1;\n    // const h = Math.floor(Math.random() * 23) + 1;\n    // const m = Math.floor(Math.random() * 59) + 1;\n    // const s = Math.floor(Math.random() * 59) + 1;\n\n    return new Date(`${y}-${M}-${d}`)\n        .toJSON()\n        .replace('T', ' ')\n        .substr(0, 10);\n}\n\nexport const formatDate = (value, uiLocale) => {\n    if (typeof global.Intl !== 'undefined' && Intl.DateTimeFormat) {\n        const locale = uiLocale || 'en';\n        return new Intl.DateTimeFormat(locale, {\n            year: 'numeric',\n            month: 'short',\n            day: 'numeric',\n        }).format(new Date(value));\n    }\n\n    return value.substr(0, 19).replace('T', ' ');\n};\n\n/**\n * Sorts an array of objects based on provided date property\n *\n * @param {Array} items Array of objects\n * @param {String} dateProp Name of the date property to be used for sorting\n * @param {Boolean} ascending Whether to sort ascending or descending\n */\nexport const sortByDate = (items, dateProp, ascending = true) => {\n    const values = Object.values(items);\n\n    values.sort((a, b) => {\n        const aDate = new Date(a[dateProp]);\n        const bDate = new Date(b[dateProp]);\n\n        return ascending ? aDate - bDate : bDate - aDate;\n    });\n\n    return values;\n};\n\n// reducer validator\nexport const validateReducer = (value, defaultValue) =>\n    value === undefined || value === null ? defaultValue : value;\n\nexport const getBaseUrl = d2 => {\n    const api = d2.Api.getApi();\n    const idx = api.baseUrl.indexOf('/api');\n    return idx > -1 ? api.baseUrl.slice(0, idx) : api.baseUrl;\n};\n\nexport const getWithoutId = object => ({\n    ...object,\n    id: undefined,\n});\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"leftControls\":\"DashboardsBar_leftControls__2kr14\",\"rightControls\":\"DashboardsBar_rightControls__2l1lT\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"menuItem\":\"ContentMenuItem_menuItem__2DIcB\",\"launchLink\":\"ContentMenuItem_launchLink__MRANR\",\"label\":\"ContentMenuItem_label__2pIfq\",\"buttonInsert\":\"ContentMenuItem_buttonInsert__1GlZy\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"itemWrap\":\"ItemHeader_itemWrap__3gJiQ\",\"itemHeaderWrap\":\"ItemHeader_itemHeaderWrap__xEKwZ\",\"itemTitle\":\"ItemHeader_itemTitle__3LmXp\",\"itemActionsWrap\":\"ItemHeader_itemActionsWrap__1U5Ex\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"ControlBar_root__3LaTt\",\"content\":\"ControlBar_content__1r98-\",\"draghandle\":\"ControlBar_draghandle__1VWa0\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"FatalErrorBoundary_container__x6zhd\",\"icon\":\"FatalErrorBoundary_icon__2XjC2\",\"message\":\"FatalErrorBoundary_message__2p9y8\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"ClearButton_button__2yjcV\",\"icon\":\"ClearButton_icon__1fqj8\"};","import isObject from 'lodash/isObject';\nimport { VIS_TYPE_COLUMN, VIS_TYPE_PIVOT_TABLE } from '@dhis2/analytics';\nimport { apiFetchFavorite, getMapFields } from '../../../api/metadata';\nimport {\n    REPORT_TABLE,\n    CHART,\n    MAP,\n    EVENT_REPORT,\n    EVENT_CHART,\n    itemTypeMap,\n} from '../../../modules/itemTypes';\nimport { getBaseUrl, getWithoutId } from '../../../modules/util';\nimport { getGridItemDomId } from '../../ItemGrid/gridUtil';\n\n//external plugins\nconst itemTypeToExternalPlugin = {\n    [MAP]: 'mapPlugin',\n    [EVENT_REPORT]: 'eventReportPlugin',\n    [EVENT_CHART]: 'eventChartPlugin',\n};\nconst hasIntegratedPlugin = type => [CHART, REPORT_TABLE].includes(type);\n\nconst getPlugin = type => {\n    if (hasIntegratedPlugin(type)) {\n        return true;\n    }\n    const pluginName = itemTypeToExternalPlugin[type];\n\n    return global[pluginName];\n};\n\nexport const THEMATIC_LAYER = 'thematic';\n\nexport const pluginIsAvailable = (item = {}, visualization = {}) => {\n    const type = visualization.activeType || item.type;\n\n    return !!getPlugin(type);\n};\n\nexport const extractFavorite = item => {\n    if (!isObject(item)) {\n        return null;\n    }\n\n    const propName = itemTypeMap[item.type].propName;\n\n    return (\n        item[propName] ||\n        (item.reportTable ||\n            item.chart ||\n            item.map ||\n            item.eventReport ||\n            item.eventChart ||\n            {})\n    );\n};\n\nexport const extractMapView = map =>\n    map.mapViews && map.mapViews.find(mv => mv.layer.includes(THEMATIC_LAYER));\n\nexport const loadPlugin = (plugin, config, credentials) => {\n    if (!(plugin && plugin.load)) {\n        return;\n    }\n\n    plugin.url = credentials.baseUrl;\n    plugin.loadingIndicator = true;\n    plugin.dashboard = true;\n    if (credentials.auth) {\n        plugin.auth = credentials.auth;\n    }\n    plugin.load(config);\n};\n\nexport const getId = item => extractFavorite(item).id;\nexport const getName = item => extractFavorite(item).name;\nexport const getDescription = item => extractFavorite(item).description;\nexport const getLink = (item, d2) => {\n    const baseUrl = getBaseUrl(d2);\n    const appUrl = itemTypeMap[item.type].appUrl(getId(item));\n\n    return `${baseUrl}/${appUrl}`;\n};\n\nexport const load = async (\n    item,\n    visualization,\n    { credentials, activeType }\n) => {\n    const config = {\n        ...visualization,\n        el: getGridItemDomId(item.id),\n    };\n\n    const type = activeType || item.type;\n    const plugin = getPlugin(type);\n\n    loadPlugin(plugin, config, credentials);\n};\n\nexport const fetch = async item => {\n    const fetchedFavorite = await apiFetchFavorite(getId(item), item.type, {\n        fields: item.type === MAP ? getMapFields() : null,\n    });\n\n    return fetchedFavorite;\n};\n\nexport const resize = item => {\n    const plugin = getPlugin(item.type);\n\n    if (plugin && plugin.resize) {\n        plugin.resize(getGridItemDomId(item.id));\n    }\n};\n\nexport const unmount = (item, activeType) => {\n    const plugin = getPlugin(activeType);\n\n    if (plugin && plugin.unmount) {\n        plugin.unmount(getGridItemDomId(item.id));\n    }\n};\n\nexport const getVisualizationConfig = (\n    visualization,\n    originalType,\n    activeType\n) => {\n    if (originalType === MAP && originalType !== activeType) {\n        const extractedMapView = extractMapView(visualization);\n\n        if (extractedMapView === undefined) {\n            return null;\n        }\n\n        return getWithoutId({\n            ...visualization,\n            ...extractedMapView,\n            mapViews: undefined,\n            type: activeType === CHART ? VIS_TYPE_COLUMN : VIS_TYPE_PIVOT_TABLE,\n        });\n    } else if (originalType === REPORT_TABLE && activeType === CHART) {\n        return getWithoutId({ ...visualization, type: VIS_TYPE_COLUMN });\n    } else if (originalType === CHART && activeType === REPORT_TABLE) {\n        return getWithoutId({\n            ...visualization,\n            type: VIS_TYPE_PIVOT_TABLE,\n        });\n    }\n\n    return getWithoutId(visualization);\n};\n","import isFunction from 'd2-utilizr/lib/isFunction';\n\nimport { orObject } from '../../modules/util';\n\n// Dimensions for the react-grid-layout\n\nexport const GRID_COMPACT_TYPE = 'vertical'; // vertical | horizonal | null\nexport const GRID_ROW_HEIGHT = 10;\nconst GRID_COLUMN_WIDTH_PX = 20;\nconst GRID_LAYOUT = 'FLEXIBLE'; // FIXED | FLEXIBLE\nexport const MARGIN = [10, 10];\n\nexport const NEW_ITEM_SHAPE = { x: 0, y: 0, w: 20, h: 29 };\nexport const ITEM_MIN_HEIGHT = 4;\n\n// Dimensions for getShape\n\nconst NUMBER_OF_ITEM_COLS = 2;\nconst GRID_COLUMNS = 60;\n\nexport const getGridColumns = () => {\n    switch (GRID_LAYOUT) {\n        case 'FLEXIBLE':\n            return GRID_COLUMNS;\n        case 'FIXED':\n            return Math.floor((window.innerWidth - 20) / GRID_COLUMN_WIDTH_PX);\n        default:\n            return GRID_COLUMNS;\n    }\n};\n\n// isNonNegativeInteger\n\nconst isNonNegativeInteger = x => Number.isInteger(x) && x >= 0;\n\n// Does the item have all the shape properties?\n\nexport const hasShape = item =>\n    isNonNegativeInteger(item.x) &&\n    isNonNegativeInteger(item.y) &&\n    isNonNegativeInteger(item.w) &&\n    isNonNegativeInteger(item.h);\n\n// returns a rectangular grid block dimensioned with x, y, w, h in grid units.\n// based on a grid with 3 items across\nexport const getShape = i => {\n    if (!isNonNegativeInteger(i)) {\n        throw new Error('Invalid grid block number');\n    }\n\n    const col = i % NUMBER_OF_ITEM_COLS;\n    const row = Math.floor(i / NUMBER_OF_ITEM_COLS);\n    const itemWidth = Math.floor((GRID_COLUMNS - 1) / NUMBER_OF_ITEM_COLS);\n    const itemHeight = GRID_ROW_HEIGHT * 2;\n\n    return {\n        x: col * itemWidth,\n        y: row * itemHeight,\n        w: itemWidth,\n        h: itemHeight,\n    };\n};\n\n/**\n * Calculates the grid item's original height in pixels based\n * on the height in grid units. This calculation\n * is copied directly from react-grid-layout GridItem.js (calcPosition)\n *\n * @param {Object} item item containing shape (x, y, w, h)\n */\nconst getOriginalHeight = item => {\n    const originalHeight = Math.round(\n        GRID_ROW_HEIGHT * item.h + Math.max(0, item.h - 1) * MARGIN[1]\n    );\n\n    return { originalHeight };\n};\n\n/**\n * Returns an array of items containing the x, y, w, h dimensions\n * and the item's originalheight in pixels\n * @function\n * @param {Array} items\n * @returns {Array}\n */\n\nexport const withShape = items =>\n    items.map((item, index) => {\n        const itemWithShape = hasShape(item)\n            ? item\n            : Object.assign({}, item, getShape(index));\n\n        return Object.assign(\n            {},\n            itemWithShape,\n            getOriginalHeight(itemWithShape)\n        );\n    });\n\nexport const getGridItemDomId = id => `item-${id}`;\n\nexport function onItemResize(id) {\n    const el = orObject(document.querySelector(`#${getGridItemDomId(id)}`));\n    if (isFunction(el.setViewportSize))\n        setTimeout(\n            () => el.setViewportSize(el.clientWidth - 5, el.clientHeight - 5),\n            10\n        );\n}\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"showMoreButton\":\"CategorizedMenuGroup_showMoreButton__3-0Wa\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"deleteItemButton\":\"DeleteItemButton_deleteItemButton__4YLrM\"};"],"sourceRoot":""}
{"version":3,"sources":["modules/itemTypes.js","api/metadata.js","components/Item/ListItem/Item.module.css","modules/util.js","reducers/user.js","reducers/dashboards.js","reducers/selected.js","reducers/visualizations.js","actions/visualizations.js","api/index.js","api/dashboards.js","reducers/messages.js","api/messages.js","reducers/snackbar.js","actions/snackbar.js","components/SnackbarMessage/SnackbarMessage.js","actions/selected.js","api/localStorage.js","components/Item/MessagesItem/actions.js","reducers/editDashboard.js","reducers/editItemFilters.js","reducers/itemFilters.js","actions/itemFilters.js","actions/editItemFilters.js","api/editDashboard.js","actions/editDashboard.js","actions/dashboards.js","reducers/controlBar.js","api/controlBar.js","actions/controlBar.js","reducers/dimensions.js","reducers/settings.js","actions/dimensions.js","components/ControlBar/ShowMoreButton.js","components/ControlBar/controlBarDimensions.js","components/ControlBar/ControlBar.js","icons/Star.js","api/dataStatistics.js","components/ControlBar/DashboardItemChip.js","icons/AddCircle.js","icons/Clear.js","components/ControlBar/ClearButton.js","reducers/dashboardsFilter.js","components/ControlBar/Filter.js","components/ControlBar/DashboardsBar.js","actions/dashboardsFilter.js","components/Dashboard/DashboardVerticalOffset.js","components/ItemSelector/HeaderMenuItem.js","icons/Launch.js","components/ItemSelector/ContentMenuItem.js","components/ItemSelector/selectableItems.js","components/ItemSelector/CategorizedMenuGroup.js","components/ItemSelector/actions.js","components/ItemSelector/SinglesMenuGroup.js","components/ItemSelector/ItemSelector.js","components/TitleBar/EditTitleBar.js","components/ItemFilter/FilterDialog.js","reducers/activeModalDimension.js","actions/activeModalDimension.js","components/ItemFilter/FilterSelector.js","components/TitleBar/Info.js","components/TitleBar/ViewTitleBar.js","components/TitleBar/TitleBar.js","components/Item/VisualizationItem/DefaultPlugin.js","components/Item/ItemHeader.js","components/Item/VisualizationItem/ItemFooter.js","components/Item/ItemHeaderButton.js","components/Item/VisualizationItem/ItemHeaderButtons.js","modules/memoizeOne.js","components/Item/VisualizationItem/Item.js","widgets/Line.js","components/Item/MessagesItem/Item.js","components/Item/NotSupportedItem/Item.js","icons/Description.js","icons/Delete.js","components/Item/ListItem/Item.js","components/Item/ListItem/actions.js","components/Item/TextItem/Item.js","components/Item/AppItem/Item.js","components/Item/SpacerItem/Item.js","components/Item/Item.js","components/ItemGrid/DeleteItemButton.js","widgets/NoContentMessage.js","components/Item/ProgressiveLoadingContainer.js","components/ItemGrid/ItemGrid.js","components/FilterBar/FilterBadge.js","components/FilterBar/FilterBar.js","components/Dashboard/DashboardContent.js","components/Dashboard/ViewDashboard.js","components/ControlBar/ConfirmDeleteDialog.js","components/ControlBar/EditBar.js","components/Dashboard/EditDashboard.js","components/Dashboard/NewDashboard.js","components/Dashboard/Dashboard.js","components/Dashboard/dashboardModes.js","components/App.js","actions/user.js","locales/index.js","reducers/style.js","reducers/index.js","configureStore.js","index.js","components/ControlBar/styles/DashboardsBar.module.css","components/ItemSelector/styles/ContentMenuItem.module.css","components/ControlBar/styles/ControlBar.module.css","components/ControlBar/styles/ClearButton.module.css","components/Item/VisualizationItem/plugin.js","components/ItemGrid/gridUtil.js","components/ItemSelector/styles/CategorizedMenuGroup.module.css"],"names":["VISUALIZATION","REPORT_TABLE","CHART","MAP","EVENT_REPORT","EVENT_CHART","APP","REPORTS","RESOURCES","USERS","MESSAGES","TEXT","SPACER","spacerContent","emptyTextItemContent","isSpacerType","item","type","text","isTextType","isVisualizationType","itemTypeMap","hasMapView","itemType","domainType","isTrackerDomainType","getDefaultItemCount","defaultItemCount","_itemTypeMap","Object","_home_travis_build_dhis2_dashboards_app_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_defineProperty__WEBPACK_IMPORTED_MODULE_0__","id","endPointName","propName","pluralTitle","i18n","t","appUrl","concat","appName","getEndPointName","getItemUrl","d2","url","launchUrl","getBaseUrl","getItemIcon","TableIcon","ChartIcon","MapIcon","ExtensionIcon","DescriptionIcon","PersonIcon","FontDownloadIcon","EmailIcon","CropFreeIcon","NotInterestedIcon","getIdNameFields","rename","arguments","length","undefined","getDimensionFields","_ref2","withItems","arrayClean","join","getAxesFields","_ref3","getFavoriteFields","_ref4","withDimensions","withOptions","getFavoritesFields","_ref5","_home_travis_build_dhis2_dashboards_app_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_toConsumableArray__WEBPACK_IMPORTED_MODULE_0__","getListItemFields","getMapFields","apiFetchFavorite","_ref6","fields","getInstance","then","Api","getApi","get","module","exports","list","itemicon","link","deleteicon","deletebutton","orArray","param","Array","isArray","orObject","isObject","arrayToIdMap","array","reduce","obj","formatDate","value","uiLocale","global","Intl","DateTimeFormat","locale","year","month","day","format","Date","substr","replace","validateReducer","defaultValue","api","idx","baseUrl","indexOf","slice","getWithoutId","object","_home_travis_build_dhis2_dashboards_app_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectSpread__WEBPACK_IMPORTED_MODULE_0__","DEFAULT_STATE_USER","username","isSuperuser","sGetUserUsername","state","user","DEFAULT_STATE_DASHBOARDS","byId","items","updateDashboardProp","_ref","dashboardId","prop","objectSpread","defineProperty","sGetDashboardsRoot","dashboards","sGetDashboardById","sDashboardsIsFetching","sGetAllDashboards","sGetDashboardItems","sGetStarredDashboards","values","filter","dashboard","starred","sGetUnstarredDashboards","sGetDashboardsSortedByStarred","toConsumableArray","arraySort","getCustomDashboards","data","arrayFrom","map","d","name","displayName","description","displayDescription","favorite","owner","created","split","lastUpdated","access","numberOfItems","dashboardItems","reportTable","chart","combineReducers","action","isLoading","showDescription","sGetSelectedRoot","selected","sGetSelectedId","sGetSelectedIsLoading","sGetSelectedShowDescription","DEFAULT_STATE_VISUALIZATIONS","isEmpty","p","sGetVisualization","visualizations","sGetVisualizationsRoot","acAddVisualization","onError","error","console","log","getDashboardItemsFields","withFavorite","getDashboardFields","apiFetchDashboard","models","catch","apiStarDashboard","isStarred","post","delete","apiDeleteDashboard","sGetMessagesRoot","messages","getMessages","DEFAULT_STATE_SNACKBAR","message","duration","open","acCloseSnackbar","loadingDashboardMsg","SnackbarMessageContent","react_default","a","createElement","style","fontWeight","connect","_sGetSnackbar","snackbar","sGetSnackbar","snackbarOpen","snackbarMessage","snackbarDuration","onCloseSnackbar","props","Snackbar_default","zIndex","SnackbarMessage_SnackbarMessageContent","autoHideDuration","onClose","acSetSelectedId","acSetSelectedIsLoading","tLoadDashboard","asyncToGenerator","regenerator_default","mark","_callee","dispatch","dash","wrap","_context","prev","next","sent","acAppendDashboards","abrupt","Promise","resolve","t0","stop","_x","apply","this","tSetSelectedDashboardById","_callee2","getState","snackbarTimeout","onSuccess","_context2","setTimeout","dashboardName","customDashboard","acSetDashboardItems","withShape","localStorage","setItem","forEach","extractFavorite","messageConversations","clearTimeout","_x2","_x3","DEFAULT_STATE_EDIT_DASHBOARD","NEW_DASHBOARD_STATE","sGetEditDashboardRoot","editDashboard","sGetIsEditing","sGetEditDashboardItems","DEFAULT_STATE_EDIT_ITEM_FILTERS","sGetEditItemFiltersRoot","editItemFilters","DEFAULT_STATE_ITEM_FILTERS","sGetItemFiltersRoot","itemFilters","sGetFiltersKeys","keys","acRemoveItemFilter","acRemoveEditItemFilter","saveDashboard","assign","width","w","height","h","save","msg","response","uid","updateDashboard","postDashboard","create","acAddDashboardItem","itemPropName","generateUid","content","NEW_ITEM_SHAPE","acUpdateDashboardItem","acRemoveDashboardItem","acSetDashboardStarred","tFetchDashboards","collection","paging","toArray","userRows","sGetControlBarUserRows","controlBar","sGetControlBarRoot","KEY","hasNamespace","currentUser","dataStore","has","getNamespace","apiGetControlBarRows","_callee3","namespace","_context3","t1","t2","find","key","apiPostControlBarRows","_callee4","rows","_context4","set","_x4","_x5","acSetControlBarUserRows","DEFAULT_DIMENSIONS","getDimensionById","DIMENSION_ID_PERIOD","DIMENSION_ID_ORGUNIT","sGetDimensions","dimensions","DEFAULT_SETTINGS","keyDateFormat","keyAnalysisRelativePeriod","keyAnalysisDigitGroupSeparator","displayNameProperty","rootOrganisationUnit","sGetSettings","settings","sGetSettingsDisplayNameProperty","acSetDimensions","styles","showMore","color","colors","grey700","cursor","fontSize","paddingTop","&:hover","textDecoration","disabled","grey500","withStyles","onClick","isMaxHeight","classes","textAlign","className","MIN_ROW_COUNT","getRowsHeight","getNumRowsFromHeight","Math","floor","FIRST_ROW_PADDING_HEIGHT","getTopOffset","getControlBarHeight","ControlBar","_this","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","onStartDrag","setState","dragging","window","addEventListener","onDrag","onEndDrag","event","preventDefault","stopPropagation","newHeight","clientY","onChangeHeight","requestAnimationFrame","removeEventListener","draghandle","onMouseDown","max","rootStyle","top","backgroundColor","editMode","yellow050","white","paddingBottom","transition","root","children","renderDragHandle","React","Component","defaultProps","StarIcon","xmlns","viewBox","fill","apiPostDataStatistics","eventType","chip","margin","grey600","display","verticalAlign","icon","marginTop","unselected","label","chipProps","selectedState","Star","Link","to","debounce","lib","AddCircleIcon","teal600","ClearIcon","grey800","ClearButton","onClear","button","Clear","ownerData","DEFAULT_STATE_DASHBOARDS_FILTER_NAME","DEFAULT_STATE_DASHBOARDS_FILTER_OWNER","order","sGetDashboardsFilterRoot","dashboardsFilter","sGetFilterName","KEYCODE_ENTER","KEYCODE_ESCAPE","filterField","searchIcon","Filter","_Component","setFilterValue","onChangeName","target","handleKeyUp","keyCode","onKeypressEnter","inherits","createClass","nextProps","_this$props","startAdornment","InputAdornment_default","position","Search_default","endAdornment","ControlBar_ClearButton","Input_default","placeholder","onChange","onKeyUp","Function","prototype","MAX_ROW_COUNT","DashboardsBar","_getPrototypeOf2","_len","args","_key","setInitialDashboardState","adjustedHeight","newRows","newRowCount","min","onToggleMaxHeight","onSelectDashboard","history","push","selectedId","onChangeFilterName","rowCount","controlBarHeight","contentWrapperStyle","padding","overflowY","components_ControlBar_ControlBar","leftControls","marginRight","AddCircle","ControlBar_Filter","ControlBar_DashboardItemChip","ControlBar_ShowMoreButton","mapDispatchToProps","withRouter","stateProps","dispatchProps","ownProps","displayDashboards","toLowerCase","includes","HeaderMenuItem","title","dense","LaunchIcon","LaunchLink","e","launchLink","rel","href","Launch","InsertButton","buttonInsert","ContentMenuItem","onInsert","visType","ItemIcon","renderedItemIcon","visTypeIcons","menuItem","ContentMenuItem_LaunchLink","ContentMenuItem_InsertButton","singleItems","header","categorizedItems","listItemTypes","CategorizedMenuGroup","addItem","tAddListItemContent","newItem","toggleSeeMore","seeMore","onChangeItemsLimit","_this2","_this$props2","hasMore","react","ItemSelector_HeaderMenuItem","itemUrl","context","ItemSelector_ContentMenuItem","showMoreButton","contextTypes","PropTypes","isRequired","dashboardItem","listItemType","dashboardItemIndex","findIndex","category","addToDashboard","ItemSearchField","onFocus","ItemSelector","closeList","openList","_","fetchItems","anchorEl","currentTarget","setFilter","getCategorizedMenuGroups","itemCount","allItems","maxOptions","ItemSelector_CategorizedMenuGroup","getSinglesMenuGroups","ItemSelector_SinglesMenuGroup","getMenuGroups","queryString","add","Set","ItemSelector_ItemSearchField","Popover_default","anchorOrigin","horizontal","vertical","transformOrigin","PaperProps","disableAutoFocus","disableRestoreFocus","EditTitleBar","onChangeTitle","onChangeDescription","section","titleDescription","itemSelector","components_ItemSelector_ItemSelector","selectedDashboard","justifyContent","flex","clear","underline","&::before","borderBottom","&:hover::before","input","borderRadius","peId","ouId","FilterDialog","onConfirm","dimension","selectedItems","dialogId","commonProps","onSelect","onDeselect","onReorder","build","selectedPeriods","ouItems","dialogTitle","Dialog_default","maxWidth","disableEnforceFocus","dialogContent","DialogActions_default","kind","DEFAULT_STATE_ACTIVE_MODAL_DIMENSION","sGetActiveModalDimension","activeModalDimension","acSetActiveModalDimension","FilterSelector","openPanel","closePanel","closeDialog","clearActiveModalDimension","selectDimension","setActiveModalDimension","onSelectItems","dimensionId","setEditItemFilters","onDeselectItems","itemIdsToRemove","newList","removeEditItemFilter","onReorderItems","itemIds","oldList","reorderedList","saveFilter","filterItems","addItemFilter","removeItemFilter","theme","selectedDimensions","ArrowDropDown_default","Boolean","fontFamily","typography","onDimensionClick","selectedIds","ItemFilter_FilterDialog","filters","withTheme","Info","show","toggle","InfoOutlined_default","NO_DESCRIPTION","actions","alignItems","marginLeft","starIcon","textButton","minWidth","editLink","titleBar","titleBarIcon","ViewTitleBar","toggleSharingDialog","sharingDialogIsOpen","onStarClick","onInfoClick","titleStyle","userSelect","StarBorder","TitleBar_Info","update","manage","ItemFilter_FilterSelector","d2_ui_sharing_dialog_default","onRequestClose","tStarDashboard","black","TitleBar","edit","TitleBar_EditTitleBar","TitleBar_ViewTitleBar","DefaultPlugin","pluginCredentials","shouldPluginReload","prevProps","reloadAllowed","filtersChanged","vis","visualization","prevVis","visChanged","activeType","reloadPlugin","pluginManager","currentVis","useActiveType","credentials","getActiveType","auth","defaultHeaders","Authorization","getGridItemDomId","textDiv","HEADER_HEIGHT","ItemHeader","actionButtons","scrollContainer","line","border","grey100","ItemFooter","objectId","getId","d2_ui_interpretations_default","ItemHeaderButton","iconBase","buttonBase","buttonDisabled","opacity","toggleFooterPadding","grey200","baseStyle","container","disabledStyle","activeStyle","primary800","primary100","inactiveStyle","VisualizationItemHeaderButtons","activeFooter","onToggleFooter","toggleFooterBase","toggleFooter","components_Item_ItemHeaderButton","Message_default","onSelectActiveType","isSingleValue","match","tableButtonStyle","tableBtnStyle","chartButtonStyle","chartBtnStyle","mapButtonStyle","mapBtnStyle","ViewList_default","InsertChart_default","Public_default","renderInterpretationButton","renderVisualizationButtons","memoizeOne","fn","lastArgs","lastValue","every","arg","i","overflow","textOverflow","whiteSpace","fontStretch","lineHeight","applyFilters","visRows","visColumns","columns","visFilters","dimensionFound","dimensionObjects","Item","showFooter","configLoaded","getUniqueKey","uniqueId","getPluginComponent","getVisualizationConfig","getContentStyle","es_lib","forDashboard","mapViews","layer","VisualizationItem_DefaultPlugin","onToggleItemExpanded","pluginIsAvailable","getTitle","itemName","Launch_default","getActionButtons","ItemHeaderButtons","contentRef","offsetHeight","originalHeight","createRef","_componentDidMount","onVisualizationLoaded","_this$props3","Item_ItemHeader","ref","VisualizationItem_ItemFooter","acSetActiveVisualizationType","Line","PRIVATE","messageTypes","_messageTypes","listStyleType","paddingLeft","seeAll","marginBottom","sender","snippet","maxHeight","MessagesItem","getMessageHref","msgIdentifier","messageType","getMessageSender","latestMsg","getMessageItems","editClass","readClass","read","msgDate","document","location","messageCount","userSettings","widgets_Line","string","MessagesContainer","NotSupportedItem","NotInterested_default","align","DeleteIcon","red500","getItemTitle","ListItem","tRemoveListItemContent","contentItems","index","el","getContentItems","contentItem","Description","deleteButton","Delete","grey900","getLink","newContent","textField","onChangeText","updatedItem","d2_ui_rich_text","onEdit","multiline","fullWidth","textDivStyle","viewItem","getIframeSrc","appDetails","iframeSrc","ouIds","ouPath","AppItem","appKey","system","installedApps","app","src","SpacerItem","GridItem","VisualizationItem","TextItem","getGridItem","right","DeleteItemHeaderButton","Delete_default","NoContentMessage","ProgressiveLoadingContainer","shouldLoad","containerRef","shouldLoadHandler","bufferPx","bufferFactor","innerHeight","rect","getBoundingClientRect","bottom","removeHandler","checkShouldLoad","debounceMs","registerHandler","_this3","objectWithoutProperties","eventProps","pick","ItemGrid","expandedItems","clickedId","isExpanded","onRemoveItem","onLayoutChange","newLayout","acUpdateDashboardLayout","onResizeStop","layout","oldItem","onItemResize","pluginResize","onRemoveItemWrapper","widgets_NoContentMessage","expandedItem","hProp","minH","ITEM_MIN_HEIGHT","react_grid_layout_default","MARGIN","cols","getGridColumns","rowHeight","GRID_ROW_HEIGHT","innerWidth","compactType","GRID_COMPACT_TYPE","isDraggable","isResizable","draggableCancel","itemClassNames","Item_ProgressiveLoadingContainer","DeleteItemButton","Item_Item_Item","validItems","hasShape","badgeContainer","badge","badgeRemove","FilterBadge","onRemove","count","FilterBar","onBadgeRemove","onBadgeClick","bar","FilterBar_FilterBadge","removeItemFIlter","filtersSelector","createSelector","arr","flexWrap","DashboardContent","components_TitleBar_TitleBar","components_FilterBar_FilterBar","components_ItemGrid_ItemGrid","Content","hasDashboardContent","dashboardsIsEmpty","Dashboard_DashboardContent","dashboardsLoaded","contentNotReady","ControlBar_DashboardsBar","Dashboard_DashboardVerticalOffset","ViewDashboard_Content","ConfirmDeleteDialog","onDeleteConfirmed","onContinueEditing","secondary","destructive","DialogTitle_default","DialogContent_default","DialogContentText_default","buttonBarStyle","EditBar","translationDialogIsOpen","dashboardModel","confirmDeleteDialogOpen","redirectUrl","onConfirmDelete","onSave","newId","onDiscard","onDiscardChanges","onDelete","onTranslationsSaved","translations","dbLocale","translation","property","onTranslate","fetchDashboardModel","toggleTranslationDialog","confirmDeleteDialog","deleteAccess","ControlBar_ConfirmDeleteDialog","translationDialog","d2_ui_translation_dialog_default","objectToTranslate","fieldsToTranslate","onTranslationSaved","onTranslationError","err","Redirect","updateAccess","discardBtnText","primary","rightControls","sGetIsNewDashboard","dashboardToSave","tDeleteDashboard","acSetDashboardDisplayName","EditDashboard","initialized","initEditDashboard","setEditDashboard","getDashboardContent","EditDashboard_Content","ControlBar_EditBar","NewDashboard","setNewDashboard","Dashboard","setDashboard","params","selectDashboard","scrollToTop","scrollTo","mode","Dashboard_EditDashboard","Dashboard_NewDashboard","Dashboard_ViewDashboard","dashboardToSelect","preferredId","getItem","App","setCurrentUser","fetchDashboards","setControlBarRows","setDimensions","HeaderBar","HashRouter","Switch","Route","exact","path","render","components_Dashboard_Dashboard","components_SnackbarMessage_SnackbarMessage","childContextTypes","controlBarRows","displayNameProp","filteredDimensions","apiFetchDimensions","dim","dimensionType","dataDimensionType","tSetDimensions","moment","addResources","arTranslations","daTranslations","enTranslations","esTranslations","frTranslations","idTranslations","kmTranslations","loTranslations","myTranslations","prsTranslations","psTranslations","ptTranslations","pt_BRTranslations","ruTranslations","svTranslations","tetTranslations","tgTranslations","ukTranslations","urTranslations","viTranslations","zhTranslations","zh_CNTranslations","setDefaultNamespace","changeLanguage","objectClean","conversations","$merge","d2Object","keyUiLocale","authorities","newState","k","$unshift","idToRemove","$splice","stateItems","newStateItems","x","y","stateItem","si","$set","configureStore","middleware","thunk","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","createStore","reducer","applyMiddleware","configI18n","config","sources","manifest","isProd","getManifest","info","version","manifest_generated_at","process","activities","dhis","dhis2","apiVersion","headers","schemas","getUserSettings","d2Init","initializedD2","ReactDOM","build_es","es","store","createMuiTheme","dhis2theme","src_components_App","getElementById","init","itemTypeToExternalPlugin","_itemTypeToExternalPl","_home_travis_build_dhis2_dashboards_app_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_defineProperty__WEBPACK_IMPORTED_MODULE_3__","getPlugin","hasIntegratedPlugin","eventReport","eventChart","loadPlugin","plugin","load","loadingIndicator","getName","_home_travis_build_dhis2_dashboards_app_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_asyncToGenerator__WEBPACK_IMPORTED_MODULE_2__","_home_travis_build_dhis2_dashboards_app_node_modules_babel_preset_react_app_node_modules_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default","_home_travis_build_dhis2_dashboards_app_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectSpread__WEBPACK_IMPORTED_MODULE_1__","fetch","fetchedFavorite","resize","unmount","originalType","extractedMapView","mv","VIS_TYPE_COLUMN","VIS_TYPE_PIVOT_TABLE","__webpack_require__","__webpack_exports__","d2_utilizr_lib_isFunction__WEBPACK_IMPORTED_MODULE_0__","d2_utilizr_lib_isFunction__WEBPACK_IMPORTED_MODULE_0___default","n","_modules_util__WEBPACK_IMPORTED_MODULE_1__","isNonNegativeInteger","Number","isInteger","itemWithShape","Error","col","row","itemWidth","itemHeight","getShape","round","getOriginalHeight","querySelector","isFunction","setViewportSize","clientWidth","clientHeight"],"mappings":"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","file":"static/js/main.dab5d10e.chunk.js","sourcesContent":["import i18n from '@dhis2/d2-i18n';\nimport TableIcon from '@material-ui/icons/ViewList';\nimport ChartIcon from '@material-ui/icons/InsertChart';\nimport MapIcon from '@material-ui/icons/Public';\nimport ExtensionIcon from '@material-ui/icons/Extension';\nimport DescriptionIcon from '@material-ui/icons/Description';\nimport PersonIcon from '@material-ui/icons/Person';\nimport FontDownloadIcon from '@material-ui/icons/FontDownload';\nimport EmailIcon from '@material-ui/icons/Email';\nimport CropFreeIcon from '@material-ui/icons/CropFree';\nimport NotInterestedIcon from '@material-ui/icons/NotInterested';\n\nimport { getBaseUrl } from './util';\n\n// Item types\nexport const VISUALIZATION = 'VISUALIZATION';\nexport const REPORT_TABLE = 'REPORT_TABLE';\nexport const CHART = 'CHART';\nexport const MAP = 'MAP';\nexport const EVENT_REPORT = 'EVENT_REPORT';\nexport const EVENT_CHART = 'EVENT_CHART';\nexport const APP = 'APP';\nexport const REPORTS = 'REPORTS';\nexport const RESOURCES = 'RESOURCES';\nexport const USERS = 'USERS';\nexport const MESSAGES = 'MESSAGES';\nexport const TEXT = 'TEXT';\nexport const SPACER = 'SPACER';\n\nconst DOMAIN_TYPE_AGGREGATE = 'AGGREGATE';\nconst DOMAIN_TYPE_TRACKER = 'TRACKER';\n\n// Dashboard helpers\nexport const spacerContent = 'SPACER_ITEM_FOR_DASHBOARD_LAYOUT_CONVENIENCE';\nexport const emptyTextItemContent = 'TEXT_ITEM_WITH_NO_CONTENT';\nexport const isSpacerType = item =>\n    item.type === TEXT && item.text === spacerContent;\nexport const isTextType = item =>\n    item.type === TEXT && item.text !== spacerContent;\nexport const isVisualizationType = item =>\n    !!itemTypeMap[item.type].isVisualizationType;\nexport const hasMapView = itemType =>\n    itemTypeMap[itemType].domainType === DOMAIN_TYPE_AGGREGATE;\nexport const isTrackerDomainType = itemType =>\n    itemTypeMap[itemType].domainType === DOMAIN_TYPE_TRACKER;\nexport const getDefaultItemCount = itemType =>\n    itemTypeMap[itemType].defaultItemCount || 5;\n\n// Item type map\nexport const itemTypeMap = {\n    [VISUALIZATION]: {\n        id: VISUALIZATION,\n        endPointName: 'visualizations',\n        propName: 'visualization',\n        pluralTitle: i18n.t('Visualizations'),\n        appUrl: id => `dhis-web-data-visualizer/#/${id}`,\n        appName: i18n.t('Visualizer'),\n        defaultItemCount: 10,\n    },\n    [REPORT_TABLE]: {\n        id: REPORT_TABLE,\n        endPointName: 'reportTables',\n        propName: 'reportTable',\n        pluralTitle: i18n.t('Pivot tables'),\n        domainType: DOMAIN_TYPE_AGGREGATE,\n        isVisualizationType: true,\n        appUrl: id => `dhis-web-data-visualizer/#/${id}`,\n        appName: i18n.t('Visualizer'),\n    },\n    [CHART]: {\n        id: CHART,\n        endPointName: 'charts',\n        propName: 'chart',\n        pluralTitle: i18n.t('Charts'),\n        domainType: DOMAIN_TYPE_AGGREGATE,\n        isVisualizationType: true,\n        appUrl: id => `dhis-web-data-visualizer/#/${id}`,\n        appName: i18n.t('Visualizer'),\n    },\n    [MAP]: {\n        id: MAP,\n        endPointName: 'maps',\n        propName: 'map',\n        pluralTitle: i18n.t('Maps'),\n        domainType: DOMAIN_TYPE_AGGREGATE,\n        isVisualizationType: true,\n        appUrl: id => `dhis-web-maps/?id=${id}`,\n        appName: i18n.t('Maps'),\n    },\n    [EVENT_REPORT]: {\n        id: EVENT_REPORT,\n        endPointName: 'eventReports',\n        propName: 'eventReport',\n        pluralTitle: i18n.t('Event reports'),\n        domainType: DOMAIN_TYPE_TRACKER,\n        isVisualizationType: true,\n        appUrl: id => `dhis-web-event-reports/?id=${id}`,\n        appName: i18n.t('Event Reports'),\n    },\n    [EVENT_CHART]: {\n        id: EVENT_CHART,\n        endPointName: 'eventCharts',\n        propName: 'eventChart',\n        pluralTitle: i18n.t('Event charts'),\n        domainType: DOMAIN_TYPE_TRACKER,\n        isVisualizationType: true,\n        appUrl: id => `dhis-web-event-visualizer/?id=${id}`,\n        appName: i18n.t('Event Visualizer'),\n    },\n    [APP]: {\n        endPointName: 'apps',\n        propName: 'appKey',\n        pluralTitle: i18n.t('Apps'),\n    },\n    [REPORTS]: {\n        id: REPORTS,\n        endPointName: 'reports',\n        propName: 'reports',\n        pluralTitle: i18n.t('Reports'),\n        appUrl: id =>\n            `dhis-web-reporting/getReportParams.action?mode=report&uid=${id}`,\n    },\n    [RESOURCES]: {\n        id: RESOURCES,\n        endPointName: 'resources',\n        propName: 'resources',\n        pluralTitle: i18n.t('Resources'),\n        appUrl: id => `api/documents/${id}/data`,\n    },\n    [USERS]: {\n        id: USERS,\n        endPointName: 'users',\n        propName: 'users',\n        pluralTitle: i18n.t('Users'),\n        appUrl: id => `dhis-web-dashboard-integration/profile.action?id=${id}`,\n    },\n    [TEXT]: {\n        id: TEXT,\n        propName: 'text',\n    },\n    [MESSAGES]: {\n        propName: 'messages',\n    },\n    [SPACER]: {\n        propName: 'text',\n    },\n};\n\nexport const getEndPointName = type => itemTypeMap[type].endPointName;\n\nexport const getItemUrl = (type, item, d2) => {\n    let url;\n\n    if (type === APP) {\n        url = item.launchUrl;\n    }\n\n    if (itemTypeMap[type] && itemTypeMap[type].appUrl) {\n        url = `${getBaseUrl(d2)}/${itemTypeMap[type].appUrl(item.id)}`;\n    }\n\n    return url;\n};\n\nexport const getItemIcon = type => {\n    switch (type) {\n        case REPORT_TABLE:\n        case EVENT_REPORT:\n        case REPORTS:\n            return TableIcon;\n        case CHART:\n        case EVENT_CHART:\n            return ChartIcon;\n        case MAP:\n            return MapIcon;\n        case APP:\n            return ExtensionIcon;\n        case RESOURCES:\n            return DescriptionIcon;\n        case USERS:\n            return PersonIcon;\n        case TEXT:\n            return FontDownloadIcon;\n        case MESSAGES:\n            return EmailIcon;\n        case SPACER:\n            return CropFreeIcon;\n        default:\n            return NotInterestedIcon;\n    }\n};\n","import { getInstance } from 'd2';\nimport arrayClean from 'd2-utilizr/lib/arrayClean';\n\nimport { getEndPointName } from '../modules/itemTypes';\n\n// Id, name\nexport const getIdNameFields = ({ rename } = {}) => [\n    'id',\n    `${rename ? 'displayName~rename(name)' : 'name,displayName'}`,\n];\n\n// Item\nexport const getItemFields = () => [\n    'dimensionItem~rename(id)',\n    'displayName~rename(name)',\n    'dimensionItemType',\n];\n\n// Dimension\nexport const getDimensionFields = ({ withItems }) =>\n    arrayClean([\n        'dimension',\n        'legendSet[id]',\n        'filter',\n        'programStage',\n        withItems ? `items[${getItemFields().join(',')}]` : ``,\n    ]);\n\n// Axis\nexport const getAxesFields = ({ withItems }) => [\n    `columns[${getDimensionFields({ withItems }).join(',')}]`,\n    `rows[${getDimensionFields({ withItems }).join(',')}]`,\n    `filters[${getDimensionFields({ withItems }).join(',')}]`,\n];\n\n// Favorite\nexport const getFavoriteFields = ({ withDimensions, withOptions }) => {\n    return arrayClean([\n        `${getIdNameFields({ rename: true }).join(',')}`,\n        'displayDescription~rename(description)',\n        withDimensions ? `${getAxesFields({ withItems: true }).join(',')}` : ``,\n        withOptions\n            ? [\n                  '*',\n                  '!attributeDimensions',\n                  '!attributeValues',\n                  '!category',\n                  '!categoryDimensions',\n                  '!categoryOptionGroupSetDimensions',\n                  '!columnDimensions',\n                  '!dataDimensionItems',\n                  '!dataElementDimensions',\n                  '!dataElementGroupSetDimensions',\n                  '!filterDimensions',\n                  '!itemOrganisationUnitGroups',\n                  '!lastUpdatedBy',\n                  '!organisationUnitGroupSetDimensions',\n                  '!organisationUnitLevels',\n                  '!organisationUnits',\n                  '!programIndicatorDimensions',\n                  '!relativePeriods',\n                  '!reportParams',\n                  '!rowDimensions',\n                  '!series',\n                  '!translations',\n                  '!userOrganisationUnit',\n                  '!userOrganisationUnitChildren',\n                  '!userOrganisationUnitGrandChildren',\n              ].join(',')\n            : '',\n    ]);\n};\n\nexport const getFavoritesFields = ({ withDimensions }) => [\n    `reportTable[${getFavoriteFields({ withDimensions }).join(',')}]`,\n    `chart[${['type', ...getFavoriteFields({ withDimensions })].join(',')}]`,\n    `map[${getFavoriteFields({ withDimensions }).join(',')}]`,\n    `eventReport[${getFavoriteFields({ withDimensions }).join(',')}]`,\n    `eventChart[${getFavoriteFields({ withDimensions }).join(',')}]`,\n];\n\n// List item\nexport const getListItemFields = () => [\n    `reports[${getIdNameFields({ rename: true }).join(',')}]`,\n    `resources[${getIdNameFields({ rename: true }).join(',')}]`,\n    `users[${getIdNameFields({ rename: true }).join(',')}]`,\n];\n\n// Map\nexport const getMapFields = () => [\n    `${getIdNameFields({ rename: true }).join(',')}`,\n    'user,longitude,latitude,zoom,basemap',\n    `mapViews[${getFavoriteFields({\n        withDimensions: true,\n        withOptions: true,\n    })}]`,\n];\n\n// Api\n\n// Get more info about the favorite of a dashboard item\nexport const apiFetchFavorite = (id, type, { fields }) =>\n    getInstance().then(d2 =>\n        d2.Api.getApi().get(`${getEndPointName(type)}/${id}`, {\n            fields:\n                fields ||\n                getFavoriteFields({\n                    withDimensions: true,\n                    withOptions: true,\n                }),\n        })\n    );\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"Item_list__2oHc1\",\"item\":\"Item_item__lO40M\",\"itemicon\":\"Item_itemicon__dv5ah\",\"link\":\"Item_link__2gULT\",\"deleteicon\":\"Item_deleteicon__3c7bl\",\"deletebutton\":\"Item_deletebutton__1DfY5\"};","import isObject from 'lodash/isObject';\n\n// validation\nexport function orNull(param) {\n    return param === undefined ? null : param;\n}\n\nexport function orArray(param) {\n    return Array.isArray(param) ? param : [];\n}\n\nexport function orObject(param) {\n    return isObject(param) ? param : {};\n}\n\n// array\nexport function arrayGetById(array, id) {\n    return array.find(item => item.id === id);\n}\n\n// object\nexport function arrayToIdMap(array) {\n    return array.reduce((obj, item) => {\n        obj[item.id] = item;\n        return obj;\n    }, {});\n}\n\n// date\nexport function getDate() {\n    const y = Math.floor(Math.random() * 3) + 2015;\n    const M = Math.floor(Math.random() * 12) + 1;\n    const d = Math.floor(Math.random() * 28) + 1;\n    // const h = Math.floor(Math.random() * 23) + 1;\n    // const m = Math.floor(Math.random() * 59) + 1;\n    // const s = Math.floor(Math.random() * 59) + 1;\n\n    return new Date(`${y}-${M}-${d}`)\n        .toJSON()\n        .replace('T', ' ')\n        .substr(0, 10);\n}\n\nexport const formatDate = (value, uiLocale) => {\n    if (typeof global.Intl !== 'undefined' && Intl.DateTimeFormat) {\n        const locale = uiLocale || 'en';\n        return new Intl.DateTimeFormat(locale, {\n            year: 'numeric',\n            month: 'short',\n            day: 'numeric',\n        }).format(new Date(value));\n    }\n\n    return value.substr(0, 19).replace('T', ' ');\n};\n\n/**\n * Sorts an array of objects based on provided date property\n *\n * @param {Array} items Array of objects\n * @param {String} dateProp Name of the date property to be used for sorting\n * @param {Boolean} ascending Whether to sort ascending or descending\n */\nexport const sortByDate = (items, dateProp, ascending = true) => {\n    const values = Object.values(items);\n\n    values.sort((a, b) => {\n        const aDate = new Date(a[dateProp]);\n        const bDate = new Date(b[dateProp]);\n\n        return ascending ? aDate - bDate : bDate - aDate;\n    });\n\n    return values;\n};\n\n// reducer validator\nexport const validateReducer = (value, defaultValue) =>\n    value === undefined || value === null ? defaultValue : value;\n\nexport const getBaseUrl = d2 => {\n    const api = d2.Api.getApi();\n    const idx = api.baseUrl.indexOf('/api');\n    return idx > -1 ? api.baseUrl.slice(0, idx) : api.baseUrl;\n};\n\nexport const getWithoutId = object => ({\n    ...object,\n    id: undefined,\n});\n","export const RECEIVED_USER = 'RECEIVED_USER';\n\nexport const DEFAULT_STATE_USER = {\n    id: '',\n    username: '',\n    uiLocale: '',\n    isSuperuser: false,\n};\n\nexport default (state = DEFAULT_STATE_USER, action) => {\n    switch (action.type) {\n        case RECEIVED_USER: {\n            return fromD2ToUserObj(action.value);\n        }\n        default:\n            return state;\n    }\n};\n\nfunction fromD2ToUserObj(d2Object) {\n    return {\n        id: d2Object.id,\n        username: d2Object.username,\n        uiLocale: d2Object.settings.keyUiLocale,\n        isSuperuser: d2Object.authorities.has('ALL'),\n    };\n}\n\n// selectors\n\nexport const sGetUserId = state => state.user.id;\nexport const sGetUserUsername = state => state.user.username;\nexport const sGetIsSuperuser = state => state.user.isSuperuser;\nexport const sGetUiLocale = state => state.user.uiLocale;\n","/** @module reducers/dashboards */\n\nimport arrayFrom from 'd2-utilizr/lib/arrayFrom';\nimport arraySort from 'd2-utilizr/lib/arraySort';\n\nimport { orArray, orObject } from '../modules/util';\nimport {\n    SPACER,\n    isSpacerType,\n    isTextType,\n    emptyTextItemContent,\n    REPORT_TABLE,\n    CHART,\n    VISUALIZATION,\n} from '../modules/itemTypes';\n\nexport const SET_DASHBOARDS = 'SET_DASHBOARDS';\nexport const ADD_DASHBOARDS = 'ADD_DASHBOARDS';\nexport const SET_DASHBOARD_STARRED = 'SET_DASHBOARD_STARRED';\nexport const SET_DASHBOARD_DISPLAY_NAME = 'SET_DASHBOARD_DISPLAY_NAME';\nexport const SET_DASHBOARD_ITEMS = 'SET_DASHBOARD_ITEMS';\n\nexport const DEFAULT_STATE_DASHBOARDS = {\n    byId: null,\n    items: [],\n};\n\n// reducer helper functions\n\nconst updateDashboardProp = ({ state, dashboardId, prop, value }) => ({\n    byId: {\n        ...state.byId,\n        [dashboardId]: {\n            ...state.byId[dashboardId],\n            [prop]: value,\n        },\n    },\n    items: state.items,\n});\n\n/**\n * Reducer that computes and returns the new state based on the given action\n * @function\n * @param {Object} state The current state\n * @param {Object} action The action to be evaluated\n * @returns {Object}\n */\nexport default (state = DEFAULT_STATE_DASHBOARDS, action) => {\n    switch (action.type) {\n        case SET_DASHBOARDS: {\n            return {\n                byId: action.value,\n                items: [],\n            };\n        }\n        case ADD_DASHBOARDS: {\n            return {\n                ...state,\n                byId: {\n                    ...state.byId,\n                    ...action.value,\n                },\n            };\n        }\n        case SET_DASHBOARD_STARRED: {\n            return updateDashboardProp({\n                state,\n                dashboardId: action.dashboardId,\n                prop: 'starred',\n                value: action.value,\n            });\n        }\n        case SET_DASHBOARD_DISPLAY_NAME: {\n            return updateDashboardProp({\n                state,\n                dashboardId: action.dashboardId,\n                prop: 'displayName',\n                value: action.value,\n            });\n        }\n        case SET_DASHBOARD_ITEMS: {\n            return {\n                ...state,\n                items: action.value,\n            };\n        }\n        default:\n            return state;\n    }\n};\n\n// root selector\n\nexport const sGetDashboardsRoot = state => state.dashboards;\n\n// selector level 1\n\n/**\n * Selector which returns a dashboard by id from the state object\n * If no matching dashboard is found it returns undefined\n * If dashboards.byId is null, then the dashboards api request\n * has not yet completed. If dashboards.byId is an empty object\n * then the dashboards api request is complete, but no dashboards\n * were returned\n *\n * @function\n * @param {Object} state The current state\n * @param {Number} id The id of the dashboard\n * @returns {Object | undefined}\n */\nexport const sGetDashboardById = (state, id) =>\n    orObject(sGetDashboardsRoot(state).byId)[id];\n\nexport const sDashboardsIsFetching = state => {\n    return sGetDashboardsRoot(state).byId === null;\n};\n\n/**\n * Selector which returns all dashboards (the byId object)\n *\n * @function\n * @param {Object} state The current state\n * @returns {Object | undefined}\n */\nexport const sGetAllDashboards = state =>\n    orObject(sGetDashboardsRoot(state).byId);\n\n/**\n * Selector which returns the current dashboard items\n *\n * @function\n * @param {Object} state The current state\n * @returns {Array}\n */\nexport const sGetDashboardItems = state => sGetDashboardsRoot(state).items;\n\n// selector level 2\n\nexport const sGetStarredDashboards = state =>\n    Object.values(sGetAllDashboards(state)).filter(\n        dashboard => dashboard.starred === true\n    );\n\nexport const sGetUnstarredDashboards = state =>\n    Object.values(sGetAllDashboards(state)).filter(\n        dashboard => dashboard.starred === false\n    );\n\n// selector level 3\n\nexport const sGetStarredDashboardIds = state => {\n    return sGetStarredDashboards(state).map(dashboard => dashboard.id);\n};\n\nexport const sGetUnstarredDashboardIds = state =>\n    sGetUnstarredDashboards(state).map(dashboard => dashboard.id);\n\nexport const sGetDashboardsSortedByStarred = state => [\n    ...arraySort(sGetStarredDashboards(state), 'ASC', 'displayName'),\n    ...arraySort(sGetUnstarredDashboards(state), 'ASC', 'displayName'),\n];\n\n// utils\n\n/**\n * Returns the array of dashboards, customized for ui\n * @function\n * @param {Array} data The original dashboard list\n * @returns {Array}\n */\nexport const getCustomDashboards = data => {\n    const uiItems = items =>\n        items.map(item => {\n            let type = isSpacerType(item) ? SPACER : item.type;\n\n            // TODO: temporary fix before 2.34 epic branch is merged\n            // if \"VISUALIZATION\", reset to \"REPORT_TABLE\" or \"CHART\"\n            if (type === VISUALIZATION) {\n                type = item.reportTable\n                    ? REPORT_TABLE\n                    : item.chart\n                    ? CHART\n                    : type;\n            }\n\n            const text = isTextType(item)\n                ? item.text === emptyTextItemContent\n                    ? ''\n                    : item.text\n                : null;\n\n            return {\n                ...item,\n                ...(text !== null ? { text } : {}),\n                type,\n            };\n        });\n\n    return arrayFrom(data).map(d => ({\n        id: d.id,\n        name: d.name,\n        displayName: d.displayName,\n        description: d.description,\n        displayDescription: d.displayDescription,\n        starred: d.favorite,\n        owner: d.user.name,\n        created: d.created\n            .split('T')\n            .join(' ')\n            .substr(0, 16),\n        lastUpdated: d.lastUpdated\n            .split('T')\n            .join(' ')\n            .substr(0, 16),\n        access: d.access,\n        numberOfItems: orArray(d.dashboardItems).length,\n        dashboardItems: uiItems(d.dashboardItems),\n    }));\n};\n","/** @module reducers/selected */\nimport { combineReducers } from 'redux';\n\nimport { validateReducer } from '../modules/util';\n\nexport const SET_SELECTED_ID = 'SET_SELECTED_ID';\nexport const SET_SELECTED_ISLOADING = 'SET_SELECTED_ISLOADING';\nexport const SET_SELECTED_SHOWDESCRIPTION = 'SET_SELECTED_SHOWDESCRIPTION';\n\nexport const DEFAULT_STATE_SELECTED_ID = null;\nexport const DEFAULT_STATE_SELECTED_ISLOADING = false;\nexport const DEFAULT_STATE_SELECTED_SHOWDESCRIPTION = false;\n\n/**\n * Reducer functions that computes and returns the new state based on the given action\n * @function\n * @param {Object} state The current state\n * @param {Object} action The action to be evaluated\n */\nconst id = (state = DEFAULT_STATE_SELECTED_ID, action) => {\n    switch (action.type) {\n        case SET_SELECTED_ID:\n            return validateReducer(action.value, DEFAULT_STATE_SELECTED_ID);\n        default:\n            return state;\n    }\n};\n\nconst isLoading = (state = DEFAULT_STATE_SELECTED_ISLOADING, action) => {\n    switch (action.type) {\n        case SET_SELECTED_ISLOADING:\n            return validateReducer(\n                action.value,\n                DEFAULT_STATE_SELECTED_ISLOADING\n            );\n        default:\n            return state;\n    }\n};\n\nconst showDescription = (\n    state = DEFAULT_STATE_SELECTED_SHOWDESCRIPTION,\n    action\n) => {\n    switch (action.type) {\n        case SET_SELECTED_SHOWDESCRIPTION:\n            return validateReducer(\n                action.value,\n                DEFAULT_STATE_SELECTED_SHOWDESCRIPTION\n            );\n        default:\n            return state;\n    }\n};\n\nexport default combineReducers({\n    id,\n    isLoading,\n    showDescription,\n});\n\n// Selectors\n\nexport const sGetSelectedRoot = state => state.selected;\n\nexport const sGetSelectedId = state => sGetSelectedRoot(state).id;\n\nexport const sGetSelectedIsLoading = state => sGetSelectedRoot(state).isLoading;\n\nexport const sGetSelectedShowDescription = state =>\n    sGetSelectedRoot(state).showDescription;\n","import { orObject } from '../modules/util';\nimport objectClean from 'd2-utilizr/lib/objectClean';\n\n/** @module reducers/visualizations */\n\nexport const ADD_VISUALIZATION = 'ADD_VISUALIZATION';\nexport const SET_ACTIVE_VISUALIZATION_TYPE = 'SET_ACTIVE_VISUALIZATION_TYPE';\n\nexport const DEFAULT_STATE_VISUALIZATIONS = {};\n\nconst isEmpty = p => p === undefined || p === null;\n\nexport default (state = DEFAULT_STATE_VISUALIZATIONS, action) => {\n    switch (action.type) {\n        case ADD_VISUALIZATION: {\n            return {\n                ...state,\n                [action.value.id]: objectClean(\n                    {\n                        ...orObject(state[action.value.id]),\n                        ...action.value,\n                    },\n                    isEmpty\n                ),\n            };\n        }\n        case SET_ACTIVE_VISUALIZATION_TYPE: {\n            return {\n                ...state,\n                [action.id]: objectClean(\n                    {\n                        ...orObject(state[action.id]),\n                        activeType: action.activeType,\n                    },\n                    isEmpty\n                ),\n            };\n        }\n        default:\n            return state;\n    }\n};\n\n// root selector\nexport const sGetVisualizationsRoot = state => state.visualizations;\n\n// selectors level 1\nexport const sGetVisualization = (state, id) => {\n    return sGetVisualizationsRoot(state)[id];\n};\n","import {\n    ADD_VISUALIZATION,\n    SET_ACTIVE_VISUALIZATION_TYPE,\n} from '../reducers/visualizations';\n\nexport const acAddVisualization = value => ({\n    type: ADD_VISUALIZATION,\n    value,\n});\n\nexport const acSetActiveVisualizationType = (id, activeType) => {\n    const action = {\n        type: SET_ACTIVE_VISUALIZATION_TYPE,\n        id,\n        activeType,\n    };\n\n    return action;\n};\n","import arrayClean from 'd2-utilizr/lib/arrayClean';\nimport {\n    getListItemFields,\n    getFavoritesFields,\n    getIdNameFields,\n} from './metadata';\n\n// Helper functions\n\nexport const onError = error => console.log('Error: ', error);\n\n// Dashboard item\nexport const getDashboardItemsFields = ({ withFavorite } = {}) =>\n    arrayClean([\n        'id',\n        'type',\n        'shape',\n        'x',\n        'y',\n        'width~rename(w)',\n        'height~rename(h)',\n        'messages',\n        'text',\n        'appKey',\n        `${getListItemFields().join(',')}`,\n        withFavorite\n            ? `${getFavoritesFields({\n                  withDimensions: withFavorite.withDimensions,\n              }).join(',')}`\n            : ``,\n    ]);\n\n// Dashboard\nexport const getDashboardFields = ({ withItems, withFavorite } = {}) =>\n    arrayClean([\n        `${getIdNameFields().join(',')}`,\n        'description',\n        'displayDescription',\n        'favorite',\n        `user[${getIdNameFields({ rename: true }).join(',')}]`,\n        'created',\n        'lastUpdated',\n        'access',\n        withItems\n            ? `dashboardItems[${getDashboardItemsFields({\n                  withFavorite,\n              }).join(',')}]`\n            : ``,\n    ]);\n","import { getInstance } from 'd2';\nimport arrayClean from 'd2-utilizr/lib/arrayClean';\nimport { onError, getDashboardFields } from './index';\n\n// Get \"all\" dashboards on startup\nexport const apiFetchDashboards = () =>\n    getInstance()\n        .then(d2 =>\n            d2.models.dashboard.list({\n                fields: [\n                    getDashboardFields().join(','),\n                    'dashboardItems[id]',\n                ].join(','),\n                paging: 'false',\n            })\n        )\n        .catch(onError);\n\n// Get more info about selected dashboard\nexport const apiFetchDashboard = id =>\n    getInstance()\n        .then(d2 =>\n            d2.models.dashboard.get(id, {\n                fields: arrayClean(\n                    getDashboardFields({\n                        withItems: true,\n                        withFavorite: { withDimensions: false },\n                    })\n                ).join(','),\n            })\n        )\n        .catch(onError);\n\n// Star dashboard\nexport const apiStarDashboard = (id, isStarred) => {\n    const url = `dashboards/${id}/favorite`;\n\n    getInstance().then(d2 => {\n        if (isStarred) {\n            d2.Api.getApi().post(url);\n        } else {\n            d2.Api.getApi().delete(url);\n        }\n    });\n};\n\nexport const apiDeleteDashboard = id => {\n    return getInstance()\n        .then(d2 => {\n            return d2.models.dashboards\n                .get(id)\n                .then(dashboard => dashboard.delete());\n        })\n        .catch(onError);\n};\n","import update from 'immutability-helper';\nimport { arrayToIdMap } from '../modules/util';\n\nexport const RECEIVED_MESSAGES = 'RECEIVED_MESSAGES';\n\nexport default (state = {}, action) => {\n    switch (action.type) {\n        case RECEIVED_MESSAGES: {\n            const conversations = arrayToIdMap(action.value);\n\n            const newState = update(state, { $merge: conversations });\n\n            return newState;\n        }\n        default:\n            return state;\n    }\n};\n\n// selectors\n\nexport const sGetMessagesRoot = state => state.messages;\n","import { getInstance } from 'd2';\n\nexport const getMessages = () => {\n    const fields =\n        'id,messageCount,lastUpdated,messageType,displayName,read,messages[id,read,sender[id,displayName],text,lastUpdated]';\n    const url = `/messageConversations?fields=${fields}&order=read:asc&pageSize=200`;\n    return getInstance()\n        .then(d2 => d2.Api.getApi().get(url))\n        .catch(error => console.log('Error:', error));\n};\n","export const RECEIVED_SNACKBAR_MESSAGE = 'RECEIVED_SNACKBAR_MESSAGE';\nexport const CLOSE_SNACKBAR = 'CLOSE_SNACKBAR';\n\nexport const DEFAULT_STATE_SNACKBAR = {\n    message: {},\n    duration: null,\n    open: false,\n};\n\nexport default (state = DEFAULT_STATE_SNACKBAR, action) => {\n    switch (action.type) {\n        case RECEIVED_SNACKBAR_MESSAGE: {\n            return { ...state, ...action.value };\n        }\n        case CLOSE_SNACKBAR: {\n            return DEFAULT_STATE_SNACKBAR;\n        }\n        default:\n            return state;\n    }\n};\n\n// selectors\n\nexport const sGetSnackbar = state => state.snackbar || DEFAULT_STATE_SNACKBAR;\n","import {\n    RECEIVED_SNACKBAR_MESSAGE,\n    CLOSE_SNACKBAR,\n} from '../reducers/snackbar';\n\nexport const acReceivedSnackbarMessage = value => ({\n    type: RECEIVED_SNACKBAR_MESSAGE,\n    value,\n});\n\nexport const acCloseSnackbar = () => ({\n    type: CLOSE_SNACKBAR,\n});\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport Snackbar from '@material-ui/core/Snackbar';\nimport PropTypes from 'prop-types';\n\nimport { sGetSnackbar } from '../../reducers/snackbar';\nimport { acCloseSnackbar } from '../../actions/snackbar';\n\nconst LOADING_DASHBOARD = 'LOADING_DASHBOARD';\nexport const loadingDashboardMsg = { name: '', type: LOADING_DASHBOARD };\n\nconst SnackbarMessageContent = ({ message }) => {\n    if (typeof message === 'object') {\n        //future message types:  switch(message.type)\n        return (\n            <span>\n                Loading <span style={{ fontWeight: 800 }}>{message.name}</span>{' '}\n                dashboard\n            </span>\n        );\n    }\n    return message;\n};\n\nexport const SnackbarMessage = props => {\n    return (\n        <Snackbar\n            style={{ zIndex: 10001 }}\n            open={props.snackbarOpen}\n            message={<SnackbarMessageContent message={props.snackbarMessage} />}\n            autoHideDuration={props.snackbarDuration}\n            onClose={props.onCloseSnackbar}\n        />\n    );\n};\n\nconst mapStateToProps = state => {\n    const { message, duration, open } = sGetSnackbar(state);\n    return {\n        snackbarOpen: open,\n        snackbarMessage: message,\n        snackbarDuration: duration,\n    };\n};\n\nSnackbarMessage.propTypes = {\n    snackbarDuration: PropTypes.string,\n    snackbarMessage: PropTypes.object,\n    snackbarOpen: PropTypes.bool,\n    onCloseSnackbar: PropTypes.func,\n};\n\nexport default connect(\n    mapStateToProps,\n    {\n        onCloseSnackbar: acCloseSnackbar,\n    }\n)(SnackbarMessage);\n","import {\n    SET_SELECTED_ID,\n    SET_SELECTED_ISLOADING,\n    SET_SELECTED_SHOWDESCRIPTION,\n} from '../reducers/selected';\nimport { acAddVisualization } from '../actions/visualizations';\nimport { sGetSelectedIsLoading } from '../reducers/selected';\nimport { sGetUserUsername } from '../reducers/user';\nimport { getCustomDashboards, sGetDashboardById } from '../reducers/dashboards';\nimport { apiFetchDashboard } from '../api/dashboards';\nimport { acSetDashboardItems, acAppendDashboards } from './dashboards';\nimport { withShape } from '../components/ItemGrid/gridUtil';\nimport { tGetMessages } from '../components/Item/MessagesItem/actions';\nimport { acReceivedSnackbarMessage, acCloseSnackbar } from './snackbar';\nimport { storePreferredDashboardId } from '../api/localStorage';\nimport { loadingDashboardMsg } from '../components/SnackbarMessage/SnackbarMessage';\nimport {\n    REPORT_TABLE,\n    CHART,\n    MAP,\n    EVENT_REPORT,\n    EVENT_CHART,\n    MESSAGES,\n} from '../modules/itemTypes';\nimport { extractFavorite } from '../components/Item/VisualizationItem/plugin';\nimport { orObject } from '../modules/util';\n\n// actions\n\nexport const acSetSelectedId = value => ({\n    type: SET_SELECTED_ID,\n    value,\n});\n\nexport const acSetSelectedIsLoading = value => ({\n    type: SET_SELECTED_ISLOADING,\n    value,\n});\n\nexport const acSetSelectedShowDescription = value => ({\n    type: SET_SELECTED_SHOWDESCRIPTION,\n    value,\n});\n\nexport const tLoadDashboard = id => async dispatch => {\n    try {\n        const dash = await apiFetchDashboard(id);\n        dispatch(acAppendDashboards(dash));\n\n        return Promise.resolve(dash);\n    } catch (err) {\n        console.log('Error: ', err);\n        return err;\n    }\n};\n\n// thunks\nexport const tSetSelectedDashboardById = id => async (dispatch, getState) => {\n    dispatch(acSetSelectedIsLoading(true));\n\n    const snackbarTimeout = setTimeout(() => {\n        const dashboardName = orObject(sGetDashboardById(getState(), id))\n            .displayName;\n        if (sGetSelectedIsLoading(getState()) && dashboardName) {\n            loadingDashboardMsg.name = dashboardName;\n\n            dispatch(\n                acReceivedSnackbarMessage({\n                    message: loadingDashboardMsg,\n                    open: true,\n                })\n            );\n        }\n    }, 500);\n\n    const onSuccess = selected => {\n        const customDashboard = getCustomDashboards(selected)[0];\n\n        dispatch(\n            acSetDashboardItems(withShape(customDashboard.dashboardItems))\n        );\n\n        storePreferredDashboardId(sGetUserUsername(getState()), id);\n\n        // add visualizations to store\n        customDashboard.dashboardItems.forEach(item => {\n            switch (item.type) {\n                case REPORT_TABLE:\n                case CHART:\n                case MAP:\n                case EVENT_REPORT:\n                case EVENT_CHART:\n                    dispatch(acAddVisualization(extractFavorite(item)));\n                    break;\n                case MESSAGES:\n                    dispatch(tGetMessages(id));\n                    break;\n                default:\n                    break;\n            }\n        });\n\n        dispatch(acSetSelectedId(id));\n\n        dispatch(acSetSelectedIsLoading(false));\n\n        clearTimeout(snackbarTimeout);\n\n        dispatch(acCloseSnackbar());\n\n        return selected;\n    };\n\n    const onError = error => {\n        console.log('Error: ', error);\n        return error;\n    };\n\n    try {\n        const selected = await dispatch(tLoadDashboard(id));\n\n        return onSuccess(selected);\n    } catch (err) {\n        return onError(err);\n    }\n};\n","export const getPreferredDashboardId = username =>\n    localStorage.getItem(`dhis2.dashboard.current.${username}`) || undefined;\n\nexport const storePreferredDashboardId = (username, dashboardId) => {\n    localStorage.setItem(`dhis2.dashboard.current.${username}`, dashboardId);\n};\n","import { RECEIVED_MESSAGES } from '../../../reducers/messages';\nimport { getMessages } from '../../../api/messages';\n\nconst onError = (action, error) => {\n    console.log(`Error in action ${action}: ${error}`);\n    return error;\n};\n\nexport const receivedMessages = value => ({\n    type: RECEIVED_MESSAGES,\n    value,\n});\n\nexport const tGetMessages = () => async dispatch => {\n    try {\n        const messages = await getMessages();\n        const { messageConversations } = messages;\n\n        return dispatch(receivedMessages(messageConversations));\n    } catch (err) {\n        return onError('Get Messages', err);\n    }\n};\n","/** @module reducers/editDashboard */\nimport update from 'immutability-helper';\nimport isEmpty from 'lodash/isEmpty';\nimport { orArray, orObject } from '../modules/util';\n\nexport const RECEIVED_EDIT_DASHBOARD = 'RECEIVED_EDIT_DASHBOARD';\nexport const RECEIVED_NOT_EDITING = 'RECEIVED_NOT_EDITING';\nexport const START_NEW_DASHBOARD = 'START_NEW_DASHBOARD';\nexport const RECEIVED_TITLE = 'RECEIVED_TITLE';\nexport const RECEIVED_DESCRIPTION = 'RECEIVED_DESCRIPTION';\nexport const ADD_DASHBOARD_ITEM = 'ADD_DASHBOARD_ITEM';\nexport const REMOVE_DASHBOARD_ITEM = 'REMOVE_DASHBOARD_ITEM';\nexport const UPDATE_DASHBOARD_ITEM = 'UPDATE_DASHBOARD_ITEM';\nexport const RECEIVED_DASHBOARD_LAYOUT = 'RECEIVED_DASHBOARD_LAYOUT';\n\nexport const DEFAULT_STATE_EDIT_DASHBOARD = {};\nexport const NEW_DASHBOARD_STATE = {\n    id: '',\n    name: '',\n    access: {},\n    description: '',\n    dashboardItems: [],\n};\n\nexport default (state = DEFAULT_STATE_EDIT_DASHBOARD, action) => {\n    switch (action.type) {\n        case RECEIVED_EDIT_DASHBOARD: {\n            const newState = {};\n            Object.keys(NEW_DASHBOARD_STATE).map(\n                k => (newState[k] = action.value[k])\n            );\n            return newState;\n        }\n        case RECEIVED_NOT_EDITING:\n            return DEFAULT_STATE_EDIT_DASHBOARD;\n        case START_NEW_DASHBOARD:\n            return NEW_DASHBOARD_STATE;\n        case RECEIVED_TITLE: {\n            return Object.assign({}, state, { name: action.value });\n        }\n        case RECEIVED_DESCRIPTION: {\n            return Object.assign({}, state, {\n                description: action.value,\n            });\n        }\n        case ADD_DASHBOARD_ITEM:\n            return update(state, {\n                dashboardItems: { $unshift: [action.value] },\n            });\n        case REMOVE_DASHBOARD_ITEM: {\n            const idToRemove = action.value;\n\n            const dashboardItemIndex = state.dashboardItems.findIndex(\n                item => item.id === idToRemove\n            );\n\n            if (dashboardItemIndex > -1) {\n                return update(state, {\n                    dashboardItems: {\n                        $splice: [[dashboardItemIndex, 1]],\n                    },\n                });\n            }\n\n            return state;\n        }\n        case RECEIVED_DASHBOARD_LAYOUT: {\n            const stateItems = orArray(state.dashboardItems);\n\n            const newStateItems = action.value.map(({ x, y, w, h, i }) => {\n                const stateItem = stateItems.find(si => si.id === i);\n\n                return Object.assign({}, stateItem, { w, h, x, y });\n            });\n\n            return update(state, {\n                dashboardItems: { $set: newStateItems },\n            });\n        }\n        case UPDATE_DASHBOARD_ITEM: {\n            const dashboardItem = action.value;\n\n            const dashboardItemIndex = state.dashboardItems.findIndex(\n                item => item.id === dashboardItem.id\n            );\n\n            if (dashboardItemIndex > -1) {\n                const newState = update(state, {\n                    dashboardItems: {\n                        $splice: [[dashboardItemIndex, 1, dashboardItem]],\n                    },\n                });\n\n                return newState;\n            }\n\n            return state;\n        }\n        default:\n            return state;\n    }\n};\n\n// root selector\n\nexport const sGetEditDashboardRoot = state => state.editDashboard;\n\n// selectors\n\nexport const sGetIsEditing = state => !isEmpty(state.editDashboard);\n\nexport const sGetIsNewDashboard = state => {\n    return (\n        !isEmpty(state.editDashboard) && sGetEditDashboardRoot(state).id === ''\n    );\n};\n\nexport const sGetEditDashboardItems = state =>\n    orObject(sGetEditDashboardRoot(state)).dashboardItems;\n","export const CLEAR_EDIT_ITEM_FILTERS = 'CLEAR_EDIT_ITEM_FILTERS';\nexport const REMOVE_EDIT_ITEM_FILTER = 'REMOVE_EDIT_ITEM_FILTER';\nexport const SET_EDIT_ITEM_FILTERS = 'SET_EDIT_ITEM_FILTERS';\n\nexport const DEFAULT_STATE_EDIT_ITEM_FILTERS = {};\n\nexport default (state = DEFAULT_STATE_EDIT_ITEM_FILTERS, action) => {\n    switch (action.type) {\n        case REMOVE_EDIT_ITEM_FILTER: {\n            const newState = { ...state };\n\n            delete newState[action.id];\n\n            return newState;\n        }\n        case SET_EDIT_ITEM_FILTERS: {\n            return action.filters;\n        }\n        case CLEAR_EDIT_ITEM_FILTERS: {\n            return DEFAULT_STATE_EDIT_ITEM_FILTERS;\n        }\n        default:\n            return state;\n    }\n};\n\n// selectors\n\nexport const sGetEditItemFiltersRoot = state => state.editItemFilters;\n\nexport const sGetEditFiltersKeys = state =>\n    Object.keys(sGetEditItemFiltersRoot(state));\n","export const CLEAR_ITEM_FILTERS = 'CLEAR_ITEM_FILTERS';\nexport const SET_ITEM_FILTERS = 'SET_ITEM_FILTERS';\nexport const ADD_ITEM_FILTER = 'ADD_ITEM_FILTER';\nexport const REMOVE_ITEM_FILTER = 'REMOVE_ITEM_FILTER';\n\nexport const DEFAULT_STATE_ITEM_FILTERS = {};\n\nexport default (state = DEFAULT_STATE_ITEM_FILTERS, action) => {\n    switch (action.type) {\n        case ADD_ITEM_FILTER: {\n            return {\n                ...state,\n                [action.filter.id]: action.filter.value,\n            };\n        }\n        case REMOVE_ITEM_FILTER: {\n            const newState = { ...state };\n\n            delete newState[action.id];\n\n            return newState;\n        }\n        case SET_ITEM_FILTERS: {\n            return action.filters;\n        }\n        case CLEAR_ITEM_FILTERS: {\n            return DEFAULT_STATE_ITEM_FILTERS;\n        }\n        default:\n            return state;\n    }\n};\n\n// selectors\n\nexport const sGetItemFiltersRoot = state => state.itemFilters;\n\nexport const sGetFiltersKeys = state => Object.keys(sGetItemFiltersRoot(state));\n","import {\n    ADD_ITEM_FILTER,\n    REMOVE_ITEM_FILTER,\n    SET_ITEM_FILTERS,\n    CLEAR_ITEM_FILTERS,\n} from '../reducers/itemFilters';\n\nexport const FILTER_ORG_UNIT = 'ou';\n\n// actions\n\nexport const acAddItemFilter = filter => ({\n    type: ADD_ITEM_FILTER,\n    filter,\n});\n\nexport const acRemoveItemFilter = id => ({\n    type: REMOVE_ITEM_FILTER,\n    id,\n});\n\nexport const acClearItemFilters = () => ({\n    type: CLEAR_ITEM_FILTERS,\n});\n\nexport const acSetItemFilters = filters => ({\n    type: SET_ITEM_FILTERS,\n    filters,\n});\n","import {\n    REMOVE_EDIT_ITEM_FILTER,\n    SET_EDIT_ITEM_FILTERS,\n    CLEAR_EDIT_ITEM_FILTERS,\n} from '../reducers/editItemFilters';\n\n// actions\n\nexport const acRemoveEditItemFilter = id => ({\n    type: REMOVE_EDIT_ITEM_FILTER,\n    id,\n});\n\nexport const acClearEditItemFilters = () => ({\n    type: CLEAR_EDIT_ITEM_FILTERS,\n});\n\nexport const acSetEditItemFilters = filters => ({\n    type: SET_EDIT_ITEM_FILTERS,\n    filters,\n});\n","import { getInstance } from 'd2';\n\nconst onError = error => console.log('Error: ', error);\n\nconst saveDashboard = (dashboard, data) => {\n    const { name, description, dashboardItems } = data;\n\n    dashboard.name = name;\n    dashboard.description = description;\n    dashboard.dashboardItems = dashboardItems.map(item =>\n        Object.assign({}, item, { width: item.w, height: item.h })\n    );\n\n    return dashboard.save().then(msg => msg.response.uid);\n};\n\nexport const updateDashboard = data => {\n    return getInstance()\n        .then(d2 => {\n            return d2.models.dashboards\n                .get(data.id)\n                .then(dashboard => saveDashboard(dashboard, data));\n        })\n        .catch(onError);\n};\n\nexport const postDashboard = data => {\n    return getInstance().then(d2 => {\n        const dashboard = d2.models.dashboards.create();\n\n        return saveDashboard(dashboard, data);\n    });\n};\n","import { generateUid } from 'd2/uid';\n\nimport {\n    RECEIVED_EDIT_DASHBOARD,\n    START_NEW_DASHBOARD,\n    RECEIVED_NOT_EDITING,\n    RECEIVED_TITLE,\n    RECEIVED_DESCRIPTION,\n    RECEIVED_DASHBOARD_LAYOUT,\n    ADD_DASHBOARD_ITEM,\n    UPDATE_DASHBOARD_ITEM,\n    REMOVE_DASHBOARD_ITEM,\n} from '../reducers/editDashboard';\nimport { sGetEditDashboardRoot } from '../reducers/editDashboard';\nimport { updateDashboard, postDashboard } from '../api/editDashboard';\nimport { tSetSelectedDashboardById } from '../actions/selected';\nimport { NEW_ITEM_SHAPE } from '../components/ItemGrid/gridUtil';\nimport {\n    itemTypeMap,\n    isSpacerType,\n    TEXT,\n    emptyTextItemContent,\n    isTextType,\n} from '../modules/itemTypes';\n\nconst onError = error => {\n    console.log('Error (Saving Dashboard): ', error);\n    return error;\n};\n\n// actions\n\nexport const acSetEditDashboard = (dashboard, items) => {\n    const val = {\n        ...dashboard,\n        dashboardItems: items,\n    };\n\n    return {\n        type: RECEIVED_EDIT_DASHBOARD,\n        value: val,\n    };\n};\n\nexport const acSetEditNewDashboard = () => ({\n    type: START_NEW_DASHBOARD,\n});\n\nexport const acClearEditDashboard = () => ({\n    type: RECEIVED_NOT_EDITING,\n});\n\nexport const acSetDashboardTitle = value => ({\n    type: RECEIVED_TITLE,\n    value,\n});\n\nexport const acSetDashboardDescription = value => ({\n    type: RECEIVED_DESCRIPTION,\n    value,\n});\n\nexport const acUpdateDashboardLayout = value => ({\n    type: RECEIVED_DASHBOARD_LAYOUT,\n    value,\n});\n\nexport const acAddDashboardItem = item => {\n    const type = item.type;\n    delete item.type;\n    const itemPropName = itemTypeMap[type].propName;\n\n    return {\n        type: ADD_DASHBOARD_ITEM,\n        value: {\n            id: generateUid(),\n            type,\n            [itemPropName]: item.content,\n            ...NEW_ITEM_SHAPE,\n        },\n    };\n};\n\nexport const acUpdateDashboardItem = item => ({\n    type: UPDATE_DASHBOARD_ITEM,\n    value: item,\n});\n\nexport const acRemoveDashboardItem = value => ({\n    type: REMOVE_DASHBOARD_ITEM,\n    value,\n});\n\n// thunks\n\nexport const tSaveDashboard = () => async (dispatch, getState) => {\n    const dashboard = sGetEditDashboardRoot(getState());\n\n    const dashboardItems = dashboard.dashboardItems.map(item => {\n        const text = isTextType(item)\n            ? item.text || emptyTextItemContent\n            : null;\n\n        const type = isSpacerType(item) ? TEXT : item.type;\n\n        return {\n            ...item,\n            ...(text ? { text } : {}),\n            type,\n        };\n    });\n\n    const dashboardToSave = {\n        ...dashboard,\n        dashboardItems,\n    };\n\n    try {\n        const dashboardId = dashboardToSave.id\n            ? await updateDashboard(dashboardToSave)\n            : await postDashboard(dashboardToSave);\n\n        dispatch(acClearEditDashboard());\n        await dispatch(tSetSelectedDashboardById(dashboardId));\n\n        return Promise.resolve(dashboardId);\n    } catch (error) {\n        onError(error);\n    }\n};\n","import {\n    SET_DASHBOARDS,\n    ADD_DASHBOARDS,\n    SET_DASHBOARD_STARRED,\n    SET_DASHBOARD_DISPLAY_NAME,\n    SET_DASHBOARD_ITEMS,\n} from '../reducers/dashboards';\nimport {\n    getCustomDashboards,\n    sGetDashboardById,\n    sGetDashboardsSortedByStarred,\n} from '../reducers/dashboards';\nimport { sGetUserUsername } from '../reducers/user';\nimport { tSetSelectedDashboardById, acSetSelectedId } from './selected';\nimport { sGetSelectedId } from '../reducers/selected';\nimport { sGetIsEditing } from '../reducers/editDashboard';\nimport { sGetEditItemFiltersRoot } from '../reducers/editItemFilters';\nimport { acSetItemFilters, acClearItemFilters } from './itemFilters';\nimport { acClearEditItemFilters } from './editItemFilters';\nimport { acClearEditDashboard } from './editDashboard';\nimport {\n    apiFetchDashboards,\n    apiStarDashboard,\n    apiDeleteDashboard,\n} from '../api/dashboards';\nimport { getPreferredDashboardId } from '../api/localStorage';\nimport { arrayToIdMap } from '../modules/util';\n\n// actions\n\nexport const acSetDashboards = dashboards => ({\n    type: SET_DASHBOARDS,\n    value: arrayToIdMap(getCustomDashboards(dashboards)),\n});\n\nexport const acAppendDashboards = dashboards => ({\n    type: ADD_DASHBOARDS,\n    value: arrayToIdMap(getCustomDashboards(dashboards)),\n});\n\nexport const acSetDashboardStarred = (dashboardId, isStarred) => ({\n    type: SET_DASHBOARD_STARRED,\n    dashboardId: dashboardId,\n    value: isStarred,\n});\n\nexport const acSetDashboardDisplayName = (dashboardId, value) => ({\n    type: SET_DASHBOARD_DISPLAY_NAME,\n    dashboardId,\n    value,\n});\n\nexport const acSetDashboardItems = value => ({\n    type: SET_DASHBOARD_ITEMS,\n    value,\n});\n\n// thunks\n\nexport const tFetchDashboards = () => async dispatch => {\n    const collection = await apiFetchDashboards();\n    dispatch(acSetDashboards(collection.toArray()));\n};\n\nexport const tSelectDashboard = id => async (dispatch, getState) => {\n    const onError = error => {\n        console.log('Error (apiFetchDashboards): ', error);\n        return error;\n    };\n\n    try {\n        const state = getState();\n\n        let dashboardToSelect = null;\n        if (id) {\n            dashboardToSelect = sGetDashboardById(state, id) || null;\n        } else {\n            const preferredId = getPreferredDashboardId(\n                sGetUserUsername(state)\n            );\n            const dash = sGetDashboardById(state, preferredId);\n            dashboardToSelect =\n                preferredId && dash\n                    ? dash\n                    : sGetDashboardsSortedByStarred(state)[0];\n        }\n\n        if (dashboardToSelect) {\n            dispatch(tSetSelectedDashboardById(dashboardToSelect.id));\n\n            if (dashboardToSelect.id === sGetSelectedId(state)) {\n                if (sGetIsEditing(state)) {\n                    // disable filters when switching to edit mode\n                    dispatch(acClearItemFilters());\n                } else {\n                    // enable filters when switching to view mode\n                    dispatch(acSetItemFilters(sGetEditItemFiltersRoot(state)));\n                }\n            } else {\n                // clear filters when switching dashboard\n                dispatch(acClearEditItemFilters());\n                dispatch(acClearItemFilters());\n            }\n        } else {\n            dispatch(acSetSelectedId(false));\n        }\n    } catch (err) {\n        return onError(err);\n    }\n};\n\nexport const tStarDashboard = (id, isStarred) => async dispatch => {\n    const onSuccess = id => {\n        dispatch(acSetDashboardStarred(id, isStarred));\n        return id;\n    };\n\n    const onError = error => {\n        console.log('Error (apiStarDashboard): ', error);\n        return error;\n    };\n    try {\n        await apiStarDashboard(id, isStarred);\n        return onSuccess(id);\n    } catch (err) {\n        return onError(err);\n    }\n};\n\nexport const tDeleteDashboard = id => async dispatch => {\n    try {\n        await apiDeleteDashboard(id);\n        dispatch(acClearEditDashboard());\n        dispatch(acSetSelectedId());\n        dispatch(acSetDashboardItems([]));\n\n        await dispatch(tFetchDashboards());\n\n        return Promise.resolve();\n    } catch (err) {\n        console.log('Error (deleteDashboard): ', err);\n        return err;\n    }\n};\n","/** @module reducers/controlBar */\nimport { combineReducers } from 'redux';\nimport { validateReducer } from '../modules/util';\n\nexport const SET_CONTROLBAR_USER_ROWS = 'SET_CONTROLBAR_USER_ROWS';\n\nexport const DEFAULT_STATE_CONTROLBAR_ROWS = 1;\n\nconst userRows = (state = DEFAULT_STATE_CONTROLBAR_ROWS, action) => {\n    switch (action.type) {\n        case SET_CONTROLBAR_USER_ROWS:\n            return validateReducer(action.value, DEFAULT_STATE_CONTROLBAR_ROWS);\n        default:\n            return state;\n    }\n};\n\nexport default combineReducers({\n    userRows,\n});\n\n/**\n * Selectors that point to specific props in the state object\n * @function\n * @param {Object} state\n * @returns {Object}\n */\nexport const sGetControlBarRoot = state => state.controlBar;\n\n// Selector dependency level 2\n\nexport const sGetControlBarUserRows = state =>\n    sGetControlBarRoot(state).userRows;\n","import { getInstance } from 'd2';\nimport { DEFAULT_STATE_CONTROLBAR_ROWS } from '../reducers/controlBar';\n\nconst NAMESPACE = 'dashboard';\nconst KEY = 'controlBarRows';\n\nconst hasNamespace = async d2 => await d2.currentUser.dataStore.has(NAMESPACE);\n\nconst getNamespace = async (d2, hasNamespace) =>\n    hasNamespace\n        ? await d2.currentUser.dataStore.get(NAMESPACE)\n        : await d2.currentUser.dataStore.create(NAMESPACE);\n\nexport const apiGetControlBarRows = async () => {\n    const d2 = await getInstance();\n    const namespace = await getNamespace(d2, await hasNamespace(d2));\n    const hasKey = namespace.keys && namespace.keys.find(key => key === KEY);\n\n    if (hasKey) {\n        return await namespace.get(KEY);\n    } else {\n        await apiPostControlBarRows(DEFAULT_STATE_CONTROLBAR_ROWS, namespace);\n        console.log(\n            '(These errors to /userDataStore/dashboard can be ignored)'\n        );\n        return DEFAULT_STATE_CONTROLBAR_ROWS;\n    }\n};\n\nexport const apiPostControlBarRows = async (rows, namespace) => {\n    const d2 = await getInstance();\n    const ns = namespace || (await getNamespace(d2, hasNamespace));\n\n    ns.set(KEY, rows);\n};\n","import { SET_CONTROLBAR_USER_ROWS } from '../reducers/controlBar';\nimport { apiGetControlBarRows } from '../api/controlBar';\n\n// actions\n\nexport const acSetControlBarUserRows = rows => ({\n    type: SET_CONTROLBAR_USER_ROWS,\n    value: rows,\n});\n\n// thunks\n\nexport const tSetControlBarRows = () => async dispatch => {\n    const onSuccess = rows => {\n        dispatch(acSetControlBarUserRows(rows));\n    };\n\n    const onError = error => {\n        console.log('Error (apiGetControlBarRows): ', error);\n        return error;\n    };\n\n    try {\n        const controlBarRows = await apiGetControlBarRows();\n        return onSuccess(controlBarRows);\n    } catch (err) {\n        return onError(err);\n    }\n};\n","import {\n    getDimensionById,\n    DIMENSION_ID_PERIOD,\n    DIMENSION_ID_ORGUNIT,\n} from '@dhis2/analytics';\n\nexport const SET_DIMENSIONS = 'SET_DIMENSIONS';\nexport const DEFAULT_DIMENSIONS = [\n    getDimensionById(DIMENSION_ID_PERIOD),\n    getDimensionById(DIMENSION_ID_ORGUNIT),\n];\n\nexport default (state = DEFAULT_DIMENSIONS, action) => {\n    switch (action.type) {\n        case SET_DIMENSIONS: {\n            return [...DEFAULT_DIMENSIONS, ...action.value];\n        }\n        default:\n            return state;\n    }\n};\n\nexport const sGetDimensions = state => state.dimensions;\n","export const SET_SETTINGS = 'SET_SETTINGS';\nexport const ADD_SETTINGS = 'ADD_SETTINGS';\n\nexport const DEFAULT_SETTINGS = {\n    keyDateFormat: 'yyyy-MM-dd',\n    keyAnalysisRelativePeriod: 'LAST_12_MONTHS',\n    keyAnalysisDigitGroupSeparator: 'SPACE',\n    displayNameProperty: 'displayName',\n    uiLocale: 'en',\n    rootOrganisationUnit: {},\n};\n\nexport default (state = DEFAULT_SETTINGS, action) => {\n    switch (action.type) {\n        case SET_SETTINGS: {\n            return Object.assign({}, action.value);\n        }\n        case ADD_SETTINGS: {\n            return {\n                ...state,\n                ...action.value,\n            };\n        }\n        default:\n            return state;\n    }\n};\n\n// Selectors\n\nexport const sGetSettings = state => state.settings;\n\nexport const sGetSettingsDisplayNameProperty = state =>\n    sGetSettings(state).displayNameProperty;\n\nexport const sGetRootOrgUnit = state =>\n    sGetSettings(state).rootOrganisationUnit;\n\nexport const sGetRelativePeriod = state =>\n    sGetSettings(state).keyAnalysisRelativePeriod;\n\nexport const sGetUiLocale = state => sGetSettings(state).uiLocale;\n","import { SET_DIMENSIONS } from '../reducers/dimensions';\nimport { apiFetchDimensions } from '@dhis2/analytics';\nimport { sGetSettingsDisplayNameProperty } from '../reducers/settings';\n\nexport const acSetDimensions = dimensions => ({\n    type: SET_DIMENSIONS,\n    value: dimensions,\n});\n\nexport const tSetDimensions = d2 => async (dispatch, getState) => {\n    const onSuccess = dimensions => {\n        dispatch(acSetDimensions(dimensions));\n    };\n\n    const onError = error => {\n        console.log('Error (apiFetchDimensions): ', error);\n        return error;\n    };\n\n    try {\n        const displayNameProp = sGetSettingsDisplayNameProperty(getState());\n        const dimensions = await apiFetchDimensions(d2, displayNameProp);\n\n        // filter out CATEGORY that are not of type ATTRIBUTE\n        const filteredDimensions = dimensions.filter(\n            dim =>\n                dim.dimensionType !== 'CATEGORY' ||\n                (dim.dimensionType === 'CATEGORY' &&\n                    dim.dataDimensionType === 'ATTRIBUTE')\n        );\n        return onSuccess(filteredDimensions);\n    } catch (err) {\n        return onError(err);\n    }\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport i18n from '@dhis2/d2-i18n';\nimport { colors } from '@dhis2/ui-core';\nimport { withStyles } from '@material-ui/core/styles';\n\nexport const SHOWMORE_BAR_HEIGHT = 16;\n\nconst styles = {\n    showMore: {\n        color: colors.grey700,\n        cursor: 'pointer',\n        fontSize: 11,\n        paddingTop: 5,\n        '&:hover': {\n            textDecoration: 'underline',\n        },\n    },\n    disabled: {\n        paddingTop: 5,\n        color: colors.grey500,\n        fontSize: 11,\n        cursor: 'not-allowed',\n    },\n};\n\nexport const ShowMoreButton = ({ onClick, isMaxHeight, classes, disabled }) => {\n    return (\n        <div style={{ textAlign: 'center' }}>\n            {disabled ? (\n                <div className={classes.disabled}>{i18n.t('Show more')}</div>\n            ) : (\n                <div className={classes.showMore} onClick={onClick}>\n                    {isMaxHeight ? i18n.t('Show less') : i18n.t('Show more')}\n                </div>\n            )}\n        </div>\n    );\n};\n\nShowMoreButton.propTypes = {\n    classes: PropTypes.object,\n    disabled: PropTypes.bool,\n    isMaxHeight: PropTypes.bool,\n    onClick: PropTypes.func,\n};\n\nexport default withStyles(styles)(ShowMoreButton);\n","import { SHOWMORE_BAR_HEIGHT } from './ShowMoreButton';\n\nexport const CONTROL_BAR_ROW_HEIGHT = 40;\nexport const FIRST_ROW_PADDING_HEIGHT = 10;\nexport const MIN_ROW_COUNT = 1;\n\nexport const HEADERBAR_HEIGHT = 48;\n\nconst CONTROL_BAR_OUTER_HEIGHT_DIFF =\n    FIRST_ROW_PADDING_HEIGHT + SHOWMORE_BAR_HEIGHT - 2; // 2 pixel \"adjustment\"\n\nexport const getRowsHeight = rows => {\n    return rows * CONTROL_BAR_ROW_HEIGHT;\n};\n\nexport const getNumRowsFromHeight = height => {\n    return Math.floor(\n        (height - CONTROL_BAR_OUTER_HEIGHT_DIFF) / CONTROL_BAR_ROW_HEIGHT\n    );\n};\n\nexport const getTopOffset = rows => {\n    return HEADERBAR_HEIGHT + getControlBarHeight(rows, false);\n};\n\nexport const getControlBarHeight = rows => {\n    return getRowsHeight(rows) + CONTROL_BAR_OUTER_HEIGHT_DIFF;\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { colors } from '@dhis2/ui-core';\nimport { HEADERBAR_HEIGHT } from './controlBarDimensions';\n\nimport classes from './styles/ControlBar.module.css';\n\nconst DRAG_HANDLE_HEIGHT = 7;\n\nclass ControlBar extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            dragging: false,\n        };\n    }\n\n    onStartDrag = () => {\n        this.setState({ dragging: true });\n        window.addEventListener('mousemove', this.onDrag);\n        window.addEventListener('mouseup', this.onEndDrag);\n    };\n\n    onDrag = event => {\n        event.preventDefault();\n        event.stopPropagation();\n\n        const newHeight = event.clientY;\n\n        if (\n            this.props.onChangeHeight &&\n            newHeight !== this.props.height &&\n            newHeight > 0\n        ) {\n            requestAnimationFrame(() => {\n                this.props.onChangeHeight(newHeight);\n            });\n        }\n    };\n\n    onEndDrag = () => {\n        this.setState({ dragging: false });\n        window.removeEventListener('mousemove', this.onDrag);\n        window.removeEventListener('mouseup', this.onEndDrag);\n\n        if (this.props.onEndDrag) {\n            this.props.onEndDrag();\n        }\n    };\n\n    renderDragHandle() {\n        return typeof this.props.onChangeHeight === 'function' ? (\n            <div\n                className={classes.draghandle}\n                style={{ height: DRAG_HANDLE_HEIGHT }}\n                onMouseDown={this.onStartDrag}\n            />\n        ) : null;\n    }\n\n    render() {\n        const height = Math.max(this.props.height, 0) + DRAG_HANDLE_HEIGHT;\n\n        const rootStyle = Object.assign(\n            {\n                height,\n                top: HEADERBAR_HEIGHT,\n                backgroundColor: this.props.editMode\n                    ? colors.yellow050\n                    : colors.white,\n                paddingBottom: DRAG_HANDLE_HEIGHT,\n            },\n            // Disable animations while dragging\n            this.state.dragging ? { transition: 'none' } : {}\n        );\n\n        return (\n            <div style={rootStyle} className={classes.root}>\n                <div className={classes.content}>{this.props.children}</div>\n                {this.renderDragHandle()}\n            </div>\n        );\n    }\n}\n\nControlBar.propTypes = {\n    /**\n     * The height of the control bar in number of lines. Must be a positive integer.\n     */\n    children: PropTypes.node.isRequired,\n\n    /**\n     * If true, the background color of the control bar changes to indicate that edit mode is active.\n     */\n    editMode: PropTypes.bool.isRequired,\n\n    /**\n     * Callback function that is called when the control bar is resized.\n     * The callback receives one argument: The new height in pixels.\n     *\n     * If no callback is specified the control bar will not have a drag handle.\n     */\n    height: PropTypes.number.isRequired,\n\n    /**\n     * Callback function that is called when the control bar is dropped after being dragged.\n     * The callback receives one argument: The new height in pixels.\n     *\n     * Ignored if no \"onChangeHeight\" function is provided.\n     */\n    onChangeHeight: PropTypes.func,\n\n    /**\n     * The contents of the control bar.\n     */\n    onEndDrag: PropTypes.func,\n};\n\nControlBar.defaultProps = {\n    onChangeHeight: null,\n    onEndDrag: null,\n};\n\nexport default ControlBar;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst StarIcon = ({ className }) => (\n    <svg\n        className={className}\n        xmlns=\"http://www.w3.org/2000/svg\"\n        viewBox=\"0 0 24 24\"\n    >\n        <path d=\"M0 0h24v24H0z\" fill=\"none\" />\n        <path d=\"M12 17.27L18.18 21l-1.64-7.03L22 9.24l-7.19-.61L12 2 9.19 8.63 2 9.24l5.46 4.73L5.82 21z\" />\n        <path d=\"M0 0h24v24H0z\" fill=\"none\" />\n    </svg>\n);\n\nStarIcon.propTypes = {\n    className: PropTypes.string,\n};\n\nexport default StarIcon;\n","import { getInstance } from 'd2';\n\nexport const apiPostDataStatistics = async (eventType, id) => {\n    const d2 = await getInstance();\n    const url = `dataStatistics?eventType=${eventType}&favorite=${id}`;\n\n    d2.Api.getApi().post(url);\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport { Chip, colors } from '@dhis2/ui-core';\nimport { Link } from 'react-router-dom';\nimport debounce from 'lodash/debounce';\n\nimport StarIcon from '../../icons/Star';\nimport { apiPostDataStatistics } from '../../api/dataStatistics';\n\nconst styles = {\n    chip: {\n        margin: '3px',\n    },\n    link: {\n        color: colors.grey600,\n        display: 'inline-block',\n        textDecoration: 'none',\n        verticalAlign: 'top',\n    },\n    icon: {\n        height: '20px',\n        marginTop: '2px',\n        width: '20px',\n    },\n    selected: {\n        fill: colors.white,\n    },\n    unselected: {\n        fill: colors.grey700,\n    },\n};\n\nexport const DashboardItemChip = ({\n    starred,\n    selected,\n    label,\n    dashboardId,\n    classes,\n}) => {\n    const chipProps = {\n        selected,\n        className: classes.chip,\n    };\n\n    if (starred) {\n        const selectedState = selected ? classes.selected : classes.unselected;\n        chipProps.icon = (\n            <StarIcon className={`${classes.icon} ${selectedState}`} />\n        );\n    }\n\n    return (\n        <Link\n            className={classes.link}\n            to={`/${dashboardId}`}\n            onClick={debounce(\n                () => apiPostDataStatistics('DASHBOARD_VIEW', dashboardId),\n                500\n            )}\n        >\n            <Chip {...chipProps}>{label}</Chip>\n        </Link>\n    );\n};\n\nDashboardItemChip.propTypes = {\n    dashboardId: PropTypes.string.isRequired,\n    label: PropTypes.string.isRequired,\n    selected: PropTypes.bool.isRequired,\n    starred: PropTypes.bool.isRequired,\n    classes: PropTypes.object,\n};\n\nexport default withStyles(styles)(DashboardItemChip);\n","import React from 'react';\nimport { colors } from '@dhis2/ui-core';\n\nconst AddCircleIcon = () => (\n    <svg\n        xmlns=\"http://www.w3.org/2000/svg\"\n        width=\"32\"\n        height=\"32\"\n        fill={colors.teal600}\n        viewBox=\"0 0 24 24\"\n    >\n        <path d=\"M12 2C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2zm4 11h-3v3c0 .55-.45 1-1 1s-1-.45-1-1v-3H8c-.55 0-1-.45-1-1s.45-1 1-1h3V8c0-.55.45-1 1-1s1 .45 1 1v3h3c.55 0 1 .45 1 1s-.45 1-1 1z\" />\n    </svg>\n);\n\nexport default AddCircleIcon;\n","import React from 'react';\nimport { colors } from '@dhis2/ui-core';\nimport PropTypes from 'prop-types';\n\nconst ClearIcon = ({ className }) => (\n    <svg\n        className={className}\n        fill={colors.grey800}\n        xmlns=\"http://www.w3.org/2000/svg\"\n        viewBox=\"0 0 24 24\"\n    >\n        <path d=\"M19 6.41L17.59 5 12 10.59 6.41 5 5 6.41 10.59 12 5 17.59 6.41 19 12 13.41 17.59 19 19 17.59 13.41 12z\" />\n        <path d=\"M0 0h24v24H0z\" fill=\"none\" />\n    </svg>\n);\n\nClearIcon.propTypes = {\n    className: PropTypes.string,\n};\n\nexport default ClearIcon;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport ClearIcon from '../../icons/Clear';\n\nimport classes from './styles/ClearButton.module.css';\n\nexport const ClearButton = ({ onClear }) => (\n    <button className={classes.button} onClick={onClear}>\n        <span>\n            <ClearIcon className={classes.icon} color=\"action\" />\n        </span>\n    </button>\n);\n\nClearButton.propTypes = {\n    onClear: PropTypes.func.isRequired,\n};\n\nexport default ClearButton;\n","import { combineReducers } from 'redux';\nimport { validateReducer } from '../modules/util';\n\nexport const SET_DASHBOARDS_FILTER_NAME = 'SET_DASHBOARDS_FILTER_NAME';\nexport const SET_DASHBOARDS_FILTER_OWNER = 'SET_DASHBOARDS_FILTER_OWNER';\nexport const SET_DASHBOARDS_FILTER_ORDER = 'SET_DASHBOARDS_FILTER_ORDER';\n\nexport const ownerData = [\n    { id: 'ALL', value: 'All users' },\n    { id: 'ME', value: 'Created by me' },\n    { id: 'OTHERS', value: 'Created by others' },\n];\n\nexport const orderData = [\n    { id: 'NAME:ASC', value: 'Name (asc)' },\n    { id: 'NAME:ASC', value: 'Name (desc)' },\n    { id: 'ITEMS:ASC', value: 'Number of items (asc)' },\n    { id: 'ITEMS:ASC', value: 'Number of items (desc)' },\n    { id: 'CREATED:ASC', value: 'Created date (asc)' },\n    { id: 'CREATED:ASC', value: 'Created date (desc)' },\n];\n\nexport const DEFAULT_STATE_DASHBOARDS_FILTER_NAME = '';\nexport const DEFAULT_STATE_DASHBOARDS_FILTER_OWNER = ownerData[0].id;\nexport const DEFAULT_STATE_DASHBOARDS_FILTER_ORDER = orderData[0].id;\n\nconst name = (state = DEFAULT_STATE_DASHBOARDS_FILTER_NAME, action) => {\n    switch (action.type) {\n        case SET_DASHBOARDS_FILTER_NAME:\n            return validateReducer(\n                action.value,\n                DEFAULT_STATE_DASHBOARDS_FILTER_NAME\n            );\n        default:\n            return state;\n    }\n};\n\nconst owner = (state = DEFAULT_STATE_DASHBOARDS_FILTER_OWNER, action) => {\n    switch (action.type) {\n        case SET_DASHBOARDS_FILTER_OWNER:\n            return validateReducer(\n                action.value,\n                DEFAULT_STATE_DASHBOARDS_FILTER_NAME\n            );\n        default:\n            return state;\n    }\n};\n\nconst order = (state = DEFAULT_STATE_DASHBOARDS_FILTER_ORDER, action) => {\n    switch (action.type) {\n        case SET_DASHBOARDS_FILTER_ORDER:\n            return validateReducer(\n                action.value,\n                DEFAULT_STATE_DASHBOARDS_FILTER_ORDER\n            );\n        default:\n            return state;\n    }\n};\n\nexport default combineReducers({\n    name,\n    owner,\n    order,\n});\n\n// selectors\n\nexport const sGetDashboardsFilterRoot = state => state.dashboardsFilter;\n\n// selector dependency level 2\n\nexport const sGetFilterName = state => sGetDashboardsFilterRoot(state).name;\nexport const sGetFilterOwner = state => sGetDashboardsFilterRoot(state).owner;\nexport const sGetFilterOrder = state => sGetDashboardsFilterRoot(state).order;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport i18n from '@dhis2/d2-i18n';\nimport InputField from '@material-ui/core/Input';\nimport InputAdornment from '@material-ui/core/InputAdornment';\nimport SearchIcon from '@material-ui/icons/Search';\nimport { colors } from '@dhis2/ui-core';\n\nimport ClearButton from './ClearButton';\nimport { DEFAULT_STATE_DASHBOARDS_FILTER_NAME } from '../../reducers/dashboardsFilter';\n\nexport const KEYCODE_ENTER = 13;\nexport const KEYCODE_ESCAPE = 27;\n\nconst styles = {\n    filterField: {\n        fontSize: '14px',\n        width: '200px',\n        height: '30px',\n        top: '-4px',\n    },\n    searchIcon: {\n        color: colors.grey700,\n        width: '20px',\n        height: '20px',\n    },\n};\n\nexport class Filter extends Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            value: DEFAULT_STATE_DASHBOARDS_FILTER_NAME,\n        };\n    }\n\n    componentWillReceiveProps(nextProps) {\n        this.setState({\n            value: nextProps.name,\n        });\n    }\n\n    setFilterValue = event => {\n        event.preventDefault();\n\n        this.props.onChangeName(event.target.value);\n    };\n\n    handleKeyUp = event => {\n        switch (event.keyCode) {\n            case KEYCODE_ENTER:\n                this.props.onKeypressEnter();\n                break;\n            case KEYCODE_ESCAPE:\n                this.props.onChangeName();\n                break;\n            default:\n                break;\n        }\n    };\n\n    render() {\n        const { classes, name, onChangeName } = this.props;\n\n        const startAdornment = (\n            <InputAdornment position=\"start\">\n                <SearchIcon className={classes.searchIcon} />\n            </InputAdornment>\n        );\n\n        const endAdornment =\n            name !== '' && name !== null ? (\n                <InputAdornment position=\"end\">\n                    <ClearButton onClear={() => onChangeName()} />\n                </InputAdornment>\n            ) : null;\n\n        return (\n            <InputField\n                className={classes.filterField}\n                placeholder={i18n.t('Search for a dashboard')}\n                startAdornment={startAdornment}\n                endAdornment={endAdornment}\n                value={this.state.value}\n                onChange={this.setFilterValue}\n                onKeyUp={this.handleKeyUp}\n            />\n        );\n    }\n}\n\nFilter.propTypes = {\n    classes: PropTypes.object,\n    name: PropTypes.string,\n    onChangeName: PropTypes.func,\n    onKeypressEnter: PropTypes.func,\n};\n\nFilter.defaultProps = {\n    name: '',\n    onChangeName: Function.prototype,\n};\n\nexport default withStyles(styles)(Filter);\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { Link, withRouter } from 'react-router-dom';\nimport ControlBar from './ControlBar';\nimport arraySort from 'd2-utilizr/lib/arraySort';\nimport PropTypes from 'prop-types';\n\nimport Chip from './DashboardItemChip';\nimport AddCircleIcon from '../../icons/AddCircle';\nimport Filter from './Filter';\nimport ShowMoreButton from './ShowMoreButton';\nimport {\n    FIRST_ROW_PADDING_HEIGHT,\n    MIN_ROW_COUNT,\n    getRowsHeight,\n    getControlBarHeight,\n    getNumRowsFromHeight,\n} from './controlBarDimensions';\nimport { sGetControlBarUserRows } from '../../reducers/controlBar';\nimport { sGetAllDashboards } from '../../reducers/dashboards';\nimport { sGetFilterName } from '../../reducers/dashboardsFilter';\nimport { sGetSelectedId } from '../../reducers/selected';\nimport { acSetControlBarUserRows } from '../../actions/controlBar';\nimport { acSetFilterName } from '../../actions/dashboardsFilter';\nimport { orObject, orArray } from '../../modules/util';\nimport { apiPostControlBarRows } from '../../api/controlBar';\n\nimport classes from './styles/DashboardsBar.module.css';\n\nexport const MAX_ROW_COUNT = 10;\n\nexport class DashboardsBar extends Component {\n    state = {\n        rows: MIN_ROW_COUNT,\n    };\n\n    setInitialDashboardState = rows => {\n        this.setState({ rows, isMaxHeight: rows === MAX_ROW_COUNT });\n    };\n\n    componentDidMount() {\n        this.setInitialDashboardState(this.props.userRows);\n    }\n\n    componentWillReceiveProps(nextProps) {\n        this.setInitialDashboardState(nextProps.userRows);\n    }\n\n    onChangeHeight = newHeight => {\n        const adjustedHeight = newHeight - 52; // don't rush the transition to a bigger row count\n        const newRows = Math.max(\n            MIN_ROW_COUNT,\n            getNumRowsFromHeight(adjustedHeight)\n        );\n\n        if (newRows !== this.state.rows) {\n            const newRowCount = Math.min(newRows, MAX_ROW_COUNT);\n\n            this.props.onChangeHeight(newRowCount);\n        }\n    };\n\n    onEndDrag = () => {\n        return apiPostControlBarRows(this.state.rows);\n    };\n\n    onToggleMaxHeight = () => {\n        const rows =\n            this.state.rows === MAX_ROW_COUNT\n                ? this.props.userRows\n                : MAX_ROW_COUNT;\n\n        this.setState({ rows, isMaxHeight: !this.state.isMaxHeight });\n    };\n\n    onSelectDashboard = () => {\n        this.props.history.push(`/${this.props.dashboards[0].id}`);\n    };\n\n    render() {\n        const { dashboards, name, selectedId, onChangeFilterName } = this.props;\n\n        const rowCount = this.state.isMaxHeight\n            ? MAX_ROW_COUNT\n            : this.state.rows;\n        const controlBarHeight = getControlBarHeight(rowCount);\n        const contentWrapperStyle = {\n            padding: `${FIRST_ROW_PADDING_HEIGHT}px 6px 0 6px`,\n            overflowY: this.state.isMaxHeight ? 'auto' : 'hidden',\n            height: getRowsHeight(rowCount) + FIRST_ROW_PADDING_HEIGHT,\n        };\n\n        return (\n            <ControlBar\n                height={controlBarHeight}\n                onChangeHeight={this.onChangeHeight}\n                onEndDrag={this.onEndDrag}\n                editMode={false}\n            >\n                <div style={contentWrapperStyle}>\n                    <div className={classes.leftControls}>\n                        <Link\n                            style={{\n                                display: 'inline-block',\n                                textDecoration: 'none',\n                                marginRight: 10,\n                                position: 'relative',\n                                top: '2px',\n                            }}\n                            to={'/new'}\n                        >\n                            <AddCircleIcon />\n                        </Link>\n                        <Filter\n                            name={name}\n                            onChangeName={onChangeFilterName}\n                            onKeypressEnter={this.onSelectDashboard}\n                        />\n                    </div>\n                    {orArray(dashboards).map(dashboard => (\n                        <Chip\n                            key={dashboard.id}\n                            label={dashboard.displayName}\n                            starred={dashboard.starred}\n                            dashboardId={dashboard.id}\n                            selected={dashboard.id === selectedId}\n                        />\n                    ))}\n                </div>\n                <ShowMoreButton\n                    onClick={this.onToggleMaxHeight}\n                    isMaxHeight={this.state.isMaxHeight}\n                    disabled={this.props.userRows === MAX_ROW_COUNT}\n                />\n            </ControlBar>\n        );\n    }\n}\n\nconst mapStateToProps = state => ({\n    dashboards: sGetAllDashboards(state),\n    name: sGetFilterName(state),\n    userRows: sGetControlBarUserRows(state),\n    selectedId: sGetSelectedId(state),\n});\n\nconst mapDispatchToProps = {\n    onChangeHeight: acSetControlBarUserRows,\n    onChangeFilterName: acSetFilterName,\n};\nconst mergeProps = (stateProps, dispatchProps, ownProps) => {\n    const dashboards = Object.values(orObject(stateProps.dashboards));\n    const displayDashboards = arraySort(\n        dashboards.filter(d =>\n            d.displayName.toLowerCase().includes(stateProps.name.toLowerCase())\n        ),\n        'ASC',\n        'displayName'\n    );\n\n    return {\n        ...stateProps,\n        ...ownProps,\n        ...dispatchProps,\n        dashboards: [\n            ...displayDashboards.filter(d => d.starred),\n            ...displayDashboards.filter(d => !d.starred),\n        ],\n    };\n};\n\nDashboardsBar.propTypes = {\n    dashboards: PropTypes.array,\n    history: PropTypes.object,\n    name: PropTypes.string,\n    selectedId: PropTypes.string,\n    userRows: PropTypes.number,\n    onChangeFilterName: PropTypes.func,\n    onChangeHeight: PropTypes.func,\n};\n\nexport default withRouter(\n    connect(\n        mapStateToProps,\n        mapDispatchToProps,\n        mergeProps\n    )(DashboardsBar)\n);\n","import {\n    SET_DASHBOARDS_FILTER_NAME,\n    SET_DASHBOARDS_FILTER_OWNER,\n    SET_DASHBOARDS_FILTER_ORDER,\n} from '../reducers/dashboardsFilter';\n\n// actions\n\nexport const acSetFilterName = value => ({\n    type: SET_DASHBOARDS_FILTER_NAME,\n    value,\n});\n\nexport const acSetFilterOwner = value => ({\n    type: SET_DASHBOARDS_FILTER_OWNER,\n    value,\n});\n\nexport const acSetFilterOrder = value => ({\n    type: SET_DASHBOARDS_FILTER_ORDER,\n    value,\n});\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\n\nimport {\n    getTopOffset,\n    MIN_ROW_COUNT,\n} from '../ControlBar/controlBarDimensions';\nimport { sGetControlBarUserRows } from '../../reducers/controlBar';\n\nconst DashboardVerticalOffset = props => {\n    const rows = props.editMode ? MIN_ROW_COUNT : props.userRows;\n    const marginTop = getTopOffset(rows);\n\n    return <div className=\"page-container-top-margin\" style={{ marginTop }} />;\n};\n\nconst mapStateToProps = state => ({\n    userRows: sGetControlBarUserRows(state),\n});\n\nDashboardVerticalOffset.propTypes = {\n    editMode: PropTypes.bool,\n    userRows: PropTypes.number,\n};\n\nexport default connect(mapStateToProps)(DashboardVerticalOffset);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { MenuItem, colors } from '@dhis2/ui-core';\n\nconst HeaderMenuItem = ({ title }) => (\n    <MenuItem\n        dense\n        key={title}\n        disabled\n        label={\n            <p style={{ color: colors.grey800, fontWeight: '600' }}>{title}</p>\n        }\n    />\n);\n\nHeaderMenuItem.propTypes = {\n    title: PropTypes.string.isRequired,\n};\n\nexport default HeaderMenuItem;\n","import React from 'react';\nimport { colors } from '@dhis2/ui-core';\nimport PropTypes from 'prop-types';\n\nconst LaunchIcon = ({ className }) => (\n    <svg\n        className={className}\n        xmlns=\"http://www.w3.org/2000/svg\"\n        width=\"12\"\n        height=\"12\"\n        fill={colors.grey600}\n        viewBox=\"0 0 24 24\"\n    >\n        <path d=\"M0 0h24v24H0z\" fill=\"none\" />\n        <path d=\"M19 19H5V5h7V3H5c-1.11 0-2 .9-2 2v14c0 1.1.89 2 2 2h14c1.1 0 2-.9 2-2v-7h-2v7zM14 3v2h3.59l-9.83 9.83 1.41 1.41L19 6.41V10h2V3h-7z\" />\n    </svg>\n);\n\nLaunchIcon.propTypes = {\n    className: PropTypes.string,\n};\n\nexport default LaunchIcon;\n","import React from 'react';\nimport { MenuItem, colors } from '@dhis2/ui-core';\nimport i18n from '@dhis2/d2-i18n';\nimport PropTypes from 'prop-types';\nimport { visTypeIcons } from '@dhis2/analytics';\n\nimport { getItemIcon, VISUALIZATION } from '../../modules/itemTypes';\nimport LaunchIcon from '../../icons/Launch';\n\nimport classes from './styles/ContentMenuItem.module.css';\n\nconst LaunchLink = ({ url }) => (\n    <a\n        onClick={e => e.stopPropagation()}\n        className={classes.launchLink}\n        target=\"_blank\"\n        rel=\"noopener noreferrer\"\n        href={url}\n    >\n        <LaunchIcon />\n    </a>\n);\n\nLaunchLink.propTypes = {\n    url: PropTypes.string,\n};\n\nconst InsertButton = () => (\n    <button className={classes.buttonInsert}>{i18n.t('Insert')}</button>\n);\n\nconst ContentMenuItem = ({ type, name, onInsert, url, visType }) => {\n    const ItemIcon = getItemIcon(type);\n\n    const renderedItemIcon =\n        type === VISUALIZATION ? (\n            visTypeIcons[visType]\n        ) : (\n            <ItemIcon style={{ fill: colors.grey600 }} />\n        );\n\n    return (\n        <MenuItem\n            dense\n            onClick={onInsert}\n            label={\n                <div className={classes.menuItem}>\n                    <div className={classes.label}>\n                        <span style={{ margin: '6px' }}>\n                            {renderedItemIcon}\n                        </span>\n                        <span>{name}</span>\n                        {url ? <LaunchLink url={url} /> : null}\n                    </div>\n                    <InsertButton />\n                </div>\n            }\n        />\n    );\n};\n\nContentMenuItem.propTypes = {\n    name: PropTypes.string,\n    type: PropTypes.string,\n    url: PropTypes.string,\n    visType: PropTypes.string,\n    onInsert: PropTypes.func,\n};\n\nexport default ContentMenuItem;\n","import i18n from '@dhis2/d2-i18n';\nimport {\n    spacerContent,\n    VISUALIZATION,\n    MAP,\n    EVENT_CHART,\n    EVENT_REPORT,\n    USERS,\n    REPORTS,\n    RESOURCES,\n    APP,\n    MESSAGES,\n    TEXT,\n    SPACER,\n} from '../../modules/itemTypes';\n\nexport const singleItems = [\n    {\n        id: 'additional',\n        header: i18n.t('Additional items'),\n        items: [\n            {\n                type: TEXT,\n                name: i18n.t('Text box'),\n                content: '',\n            },\n            {\n                type: MESSAGES,\n                name: i18n.t('Messages'),\n                content: 'true',\n            },\n            {\n                type: SPACER,\n                name: i18n.t('Spacer'),\n                content: spacerContent,\n            },\n        ],\n    },\n];\n\n// categorizedItems are grouped in the item selector menu\nexport const categorizedItems = [\n    VISUALIZATION,\n    MAP,\n    EVENT_REPORT,\n    EVENT_CHART,\n    USERS,\n    REPORTS,\n    RESOURCES,\n    APP,\n];\n\n// listItemTypes are included in a single dashboard item\nexport const listItemTypes = [REPORTS, RESOURCES, USERS];\n","import React, { Component, Fragment } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport i18n from '@dhis2/d2-i18n';\nimport { MenuItem, Divider } from '@dhis2/ui-core';\n\nimport HeaderMenuItem from './HeaderMenuItem';\nimport ContentMenuItem from './ContentMenuItem';\n\nimport { tAddListItemContent } from './actions';\nimport { acAddDashboardItem } from '../../actions/editDashboard';\nimport { getItemUrl, APP, VISUALIZATION } from '../../modules/itemTypes';\nimport { categorizedItems, listItemTypes } from './selectableItems';\n\nimport classes from './styles/CategorizedMenuGroup.module.css';\n\nclass CategorizedMenuGroup extends Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            seeMore: false,\n        };\n    }\n\n    addItem = item => () => {\n        const { type, acAddDashboardItem, tAddListItemContent } = this.props;\n\n        if (type === APP) {\n            acAddDashboardItem({ type, content: item.key });\n        } else {\n            const newItem = {\n                id: item.id,\n                name: item.displayName || item.name,\n            };\n\n            if (listItemTypes.includes(type)) {\n                tAddListItemContent(type, newItem);\n            } else {\n                acAddDashboardItem({ type, content: newItem });\n            }\n        }\n    };\n\n    toggleSeeMore = () => {\n        this.setState({ seeMore: !this.state.seeMore });\n\n        this.props.onChangeItemsLimit(this.props.type);\n    };\n\n    render() {\n        const { title, type, items, hasMore } = this.props;\n        return (\n            <Fragment>\n                <HeaderMenuItem title={title} />\n                {items.map(item => {\n                    const itemUrl = getItemUrl(type, item, this.context.d2);\n                    return (\n                        <ContentMenuItem\n                            key={item.id || item.key}\n                            type={type}\n                            visType={type === VISUALIZATION ? item.type : type}\n                            name={item.displayName || item.name}\n                            onInsert={this.addItem(item)}\n                            url={itemUrl}\n                        />\n                    );\n                })}\n                {hasMore ? (\n                    <MenuItem\n                        dense\n                        key={`showmore${title}`}\n                        onClick={this.toggleSeeMore}\n                        label={\n                            <button className={classes.showMoreButton}>\n                                {this.state.seeMore\n                                    ? i18n.t('Show fewer')\n                                    : i18n.t('Show more')}\n                            </button>\n                        }\n                    />\n                ) : null}\n                <Divider margin=\"8px 0px\" />\n            </Fragment>\n        );\n    }\n}\n\nCategorizedMenuGroup.propTypes = {\n    items: PropTypes.array.isRequired,\n    title: PropTypes.string.isRequired,\n    type: PropTypes.oneOf(categorizedItems).isRequired,\n    onChangeItemsLimit: PropTypes.func.isRequired,\n    acAddDashboardItem: PropTypes.func,\n    hasMore: PropTypes.bool,\n    tAddListItemContent: PropTypes.func,\n};\n\nCategorizedMenuGroup.contextTypes = {\n    d2: PropTypes.object.isRequired,\n};\n\nexport default connect(\n    null,\n    {\n        acAddDashboardItem,\n        tAddListItemContent,\n    }\n)(CategorizedMenuGroup);\n","import { sGetEditDashboardRoot } from '../../reducers/editDashboard';\nimport { itemTypeMap } from '../../modules/itemTypes';\nimport {\n    acAddDashboardItem,\n    acUpdateDashboardItem,\n} from '../../actions/editDashboard';\n\nexport const tAddListItemContent = (type, content) => (dispatch, getState) => {\n    const state = getState();\n    const listItemType = itemTypeMap[type].propName;\n    const dashboardItems = sGetEditDashboardRoot(state).dashboardItems;\n    const dashboardItemIndex = dashboardItems.findIndex(\n        item => item.type === type\n    );\n    let dashboardItem;\n\n    // Reports/Resources/Users dashboard item type already present in dashboard\n    if (dashboardItemIndex > -1) {\n        dashboardItem = dashboardItems[dashboardItemIndex];\n        dashboardItem[listItemType].push(content);\n\n        dispatch(acUpdateDashboardItem(dashboardItem));\n    } else {\n        dashboardItem = {\n            type: type,\n            content: [content],\n        };\n\n        dispatch(acAddDashboardItem(dashboardItem));\n    }\n};\n","import React, { Fragment } from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\n\nimport HeaderMenuItem from './HeaderMenuItem';\nimport ContentMenuItem from './ContentMenuItem';\nimport { acAddDashboardItem } from '../../actions/editDashboard';\n\nexport const SinglesMenuGroup = ({ acAddDashboardItem, category }) => {\n    const addToDashboard = ({ type, content }) => () => {\n        acAddDashboardItem({ type, content });\n    };\n\n    return (\n        <Fragment>\n            <HeaderMenuItem title={category.header} />\n            {category.items.map(item => (\n                <ContentMenuItem\n                    key={item.type}\n                    type={item.type}\n                    name={item.name}\n                    onInsert={addToDashboard(item)}\n                />\n            ))}\n        </Fragment>\n    );\n};\n\nSinglesMenuGroup.propTypes = {\n    acAddDashboardItem: PropTypes.func,\n    category: PropTypes.object,\n};\n\nexport default connect(\n    null,\n    { acAddDashboardItem }\n)(SinglesMenuGroup);\n","import React, { Fragment } from 'react';\nimport PropTypes from 'prop-types';\nimport i18n from '@dhis2/d2-i18n';\nimport Popover from '@material-ui/core/Popover';\nimport { InputField, Menu } from '@dhis2/ui-core';\n\nimport CategorizedMenuGroup from './CategorizedMenuGroup';\nimport SinglesMenuGroup from './SinglesMenuGroup';\nimport { singleItems, categorizedItems } from './selectableItems';\nimport { itemTypeMap, getDefaultItemCount } from '../../modules/itemTypes';\n\nimport './styles/ItemSelector.css';\n\nconst ItemSearchField = props => (\n    <InputField\n        name=\"Dashboard item search\"\n        label={i18n.t('Search for items to add to this dashboard')}\n        type=\"text\"\n        onChange={props.onChange}\n        onFocus={props.onFocus}\n        value={props.value}\n    />\n);\n\nclass ItemSelector extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            anchorEl: null,\n            open: false,\n            maxOptions: new Set(),\n            items: undefined,\n            filter: '',\n        };\n    }\n\n    closeList = () => {\n        this.setState({ open: false, filter: '' });\n    };\n\n    openList = (_, event) => {\n        this.fetchItems();\n\n        this.setState({\n            anchorEl: event.currentTarget,\n            open: true,\n        });\n    };\n\n    setFilter = (_, event) => {\n        this.setState({ filter: event.target.value }, this.fetchItems);\n    };\n\n    getCategorizedMenuGroups = () =>\n        categorizedItems\n            .filter(type => {\n                const itemType = itemTypeMap[type];\n                return (\n                    this.state.items && this.state.items[itemType.endPointName]\n                );\n            })\n            .map(type => {\n                const itemType = itemTypeMap[type];\n                const itemCount = getDefaultItemCount(type);\n                const allItems = this.state.items[itemType.endPointName];\n                const hasMore = allItems.length > itemCount;\n                const items = this.state.maxOptions.has(itemType.id)\n                    ? allItems\n                    : allItems.slice(0, itemCount);\n\n                return (\n                    <CategorizedMenuGroup\n                        key={type}\n                        type={type}\n                        title={itemType.pluralTitle}\n                        items={items}\n                        onChangeItemsLimit={this.fetchItems}\n                        hasMore={hasMore}\n                    />\n                );\n            });\n\n    getSinglesMenuGroups = () =>\n        singleItems.map(category => (\n            <SinglesMenuGroup key={category.id} category={category} />\n        ));\n\n    getMenuGroups = () =>\n        this.getCategorizedMenuGroups().concat(this.getSinglesMenuGroups());\n\n    fetchItems = async type => {\n        if (type) {\n            const maxOptions = this.state.maxOptions;\n\n            if (maxOptions.has(type)) {\n                maxOptions.delete(type);\n            } else {\n                maxOptions.add(type);\n            }\n\n            this.setState({ maxOptions });\n        } else {\n            this.setState({\n                maxOptions: new Set(),\n            });\n        }\n\n        let queryString = '?count=11';\n        if ([...this.state.maxOptions.values()].length) {\n            queryString +=\n                '&max=' + [...this.state.maxOptions.values()].join('&max=');\n        }\n\n        const filter = this.state.filter ? `/${this.state.filter}` : '';\n\n        this.context.d2.Api.getApi()\n            .get(`dashboards/q${filter}${queryString}`)\n            .then(response => this.setState({ items: response }))\n            .catch(console.error);\n    };\n\n    render() {\n        return (\n            <Fragment>\n                <ItemSearchField\n                    value={this.state.filter}\n                    onChange={this.setFilter}\n                    onFocus={this.openList}\n                />\n                <Popover\n                    className=\"dashboard-item-selector\"\n                    open={this.state.open}\n                    onClose={this.closeList}\n                    anchorEl={this.state.anchorEl}\n                    anchorOrigin={{ horizontal: 'left', vertical: 'bottom' }}\n                    transformOrigin={{ horizontal: 'left', vertical: 'top' }}\n                    style={{ height: '70vh' }}\n                    PaperProps={{ style: { width: '700px' } }}\n                    disableAutoFocus={true}\n                    disableRestoreFocus={true}\n                >\n                    <Menu>{this.getMenuGroups()}</Menu>\n                </Popover>\n            </Fragment>\n        );\n    }\n}\n\nItemSearchField.propTypes = {\n    value: PropTypes.string,\n    onChange: PropTypes.func,\n    onFocus: PropTypes.func,\n};\n\nItemSelector.contextTypes = {\n    d2: PropTypes.object.isRequired,\n};\n\nexport default ItemSelector;\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport i18n from '@dhis2/d2-i18n';\nimport { InputField, TextAreaField } from '@dhis2/ui-core';\n\nimport ItemSelector from '../ItemSelector/ItemSelector';\nimport {\n    acSetDashboardTitle,\n    acSetDashboardDescription,\n} from '../../actions/editDashboard';\nimport { orObject } from '../../modules/util';\nimport { sGetEditDashboardRoot } from '../../reducers/editDashboard';\n\nconst styles = {\n    section: { display: 'flex', justifyContent: 'space-between' },\n    titleDescription: {\n        flex: '3',\n        marginRight: '50px',\n    },\n    title: {\n        display: 'block',\n        clear: 'both',\n    },\n    description: {\n        display: 'block',\n        clear: 'both',\n        marginTop: '15px',\n    },\n    underline: {\n        '&::before': {\n            borderBottom: `none`,\n        },\n        '&:hover::before': {\n            borderBottom: `none!important`,\n        },\n    },\n    input: {\n        backgroundColor: 'rgba(0, 0, 10, 0.05)',\n        borderRadius: '4px',\n        width: '100%',\n        '&:hover': {\n            backgroundColor: 'rgba(0, 0, 10, 0.08)',\n        },\n    },\n    itemSelector: {\n        flex: '2',\n        position: 'relative',\n    },\n};\n\nexport const EditTitleBar = ({\n    name,\n    description,\n    onChangeTitle,\n    onChangeDescription,\n    classes,\n}) => {\n    const updateTitle = (_, e) => {\n        onChangeTitle(e.target.value);\n    };\n\n    const updateDescription = (_, e) => {\n        onChangeDescription(e.target.value);\n    };\n\n    return (\n        <section className={classes.section}>\n            <div className={classes.titleDescription}>\n                <InputField\n                    className={classes.title}\n                    name=\"Dashboard title input\"\n                    label={i18n.t('Dashboard title')}\n                    type=\"text\"\n                    onChange={updateTitle}\n                    value={name}\n                />\n                <TextAreaField\n                    className={classes.description}\n                    name=\"Dashboard description input\"\n                    label={i18n.t('Dashboard description')}\n                    onChange={updateDescription}\n                    value={description}\n                />\n            </div>\n            <div className={classes.itemSelector}>\n                <ItemSelector />\n            </div>\n        </section>\n    );\n};\n\nconst mapStateToProps = state => {\n    const selectedDashboard = orObject(sGetEditDashboardRoot(state));\n\n    return {\n        name: selectedDashboard.name,\n        description: selectedDashboard.description,\n    };\n};\n\nconst mapDispatchToProps = {\n    onChangeTitle: acSetDashboardTitle,\n    onChangeDescription: acSetDashboardDescription,\n};\n\nexport default connect(\n    mapStateToProps,\n    mapDispatchToProps\n)(withStyles(styles)(EditTitleBar));\n\nEditTitleBar.propTypes = {\n    onChangeDescription: PropTypes.func.isRequired,\n    onChangeTitle: PropTypes.func.isRequired,\n    classes: PropTypes.object,\n    description: PropTypes.string,\n    name: PropTypes.string,\n};\n\nEditTitleBar.defaultProps = {\n    name: '',\n    description: '',\n};\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nimport { Button } from '@dhis2/ui-core';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\n\nimport i18n from '@dhis2/d2-i18n';\n\nimport {\n    PeriodDimension,\n    DynamicDimension,\n    OrgUnitDimension,\n    DIMENSION_ID_PERIOD,\n    DIMENSION_ID_ORGUNIT,\n} from '@dhis2/analytics';\n\nconst peId = DIMENSION_ID_PERIOD;\nconst ouId = DIMENSION_ID_ORGUNIT;\n\nclass FilterDialog extends Component {\n    onConfirm = id => () => this.props.onConfirm(id);\n\n    dialogContent() {\n        const { displayNameProperty, dimension, selectedItems } = this.props;\n        const dialogId = dimension.id;\n\n        const commonProps = {\n            d2: this.context.d2,\n            onSelect: this.props.onSelect,\n            onDeselect: this.props.onDeselect,\n            onReorder: this.props.onReorder,\n        };\n\n        switch (dialogId) {\n            case peId: {\n                return (\n                    <PeriodDimension\n                        selectedPeriods={selectedItems}\n                        {...commonProps}\n                    />\n                );\n            }\n            case ouId:\n                return (\n                    <OrgUnitDimension\n                        displayNameProperty={displayNameProperty}\n                        ouItems={selectedItems}\n                        {...commonProps}\n                    />\n                );\n            default:\n                return (\n                    <DynamicDimension\n                        selectedItems={selectedItems}\n                        dialogId={dialogId}\n                        dialogTitle={dimension.name}\n                        {...commonProps}\n                    />\n                );\n        }\n    }\n\n    render() {\n        const { dimension, onClose } = this.props;\n        const dialogId = dimension.id;\n\n        return (\n            <Dialog\n                open={!!dialogId}\n                maxWidth=\"lg\"\n                disableEnforceFocus\n                onClose={onClose}\n            >\n                {dialogId && this.dialogContent()}\n                <DialogActions>\n                    <Button kind=\"secondary\" onClick={onClose}>\n                        {i18n.t('Cancel')}\n                    </Button>\n                    <Button kind=\"primary\" onClick={this.onConfirm(dialogId)}>\n                        {i18n.t('Confirm')}\n                    </Button>\n                </DialogActions>\n            </Dialog>\n        );\n    }\n}\n\nFilterDialog.propTypes = {\n    dimension: PropTypes.object,\n    displayNameProperty: PropTypes.string,\n    selectedItems: PropTypes.array,\n    onClose: PropTypes.func,\n    onConfirm: PropTypes.func,\n    onDeselect: PropTypes.func,\n    onReorder: PropTypes.func,\n    onSelect: PropTypes.func,\n};\n\nFilterDialog.contextTypes = {\n    d2: PropTypes.object,\n};\n\nexport default FilterDialog;\n","export const SET_ACTIVE_MODAL_DIMENSION = 'SET_ACTIVE_MODAL_DIMENSION';\nexport const CLEAR_ACTIVE_MODAL_DIMENSION = 'CLEAR_ACTIVE_MODAL_DIMENSION';\n\nexport const DEFAULT_STATE_ACTIVE_MODAL_DIMENSION = {};\n\nexport default (state = DEFAULT_STATE_ACTIVE_MODAL_DIMENSION, action) => {\n    switch (action.type) {\n        case SET_ACTIVE_MODAL_DIMENSION: {\n            return action.value;\n        }\n        case CLEAR_ACTIVE_MODAL_DIMENSION: {\n            return DEFAULT_STATE_ACTIVE_MODAL_DIMENSION;\n        }\n        default:\n            return state;\n    }\n};\n\nexport const sGetActiveModalDimension = state => state.activeModalDimension;\n","import {\n    SET_ACTIVE_MODAL_DIMENSION,\n    CLEAR_ACTIVE_MODAL_DIMENSION,\n} from '../reducers/activeModalDimension';\n\nexport const acSetActiveModalDimension = value => ({\n    type: SET_ACTIVE_MODAL_DIMENSION,\n    value,\n});\n\nexport const acClearActiveModalDimension = () => ({\n    type: CLEAR_ACTIVE_MODAL_DIMENSION,\n});\n","import React, { Component, Fragment } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport Popover from '@material-ui/core/Popover';\nimport ArrowDropDownIcon from '@material-ui/icons/ArrowDropDown';\nimport { withTheme } from '@material-ui/core/styles';\n\nimport i18n from '@dhis2/d2-i18n';\nimport { DimensionsPanel } from '@dhis2/analytics';\n\nimport { Button } from '@dhis2/ui-core';\nimport FilterDialog from './FilterDialog';\n\nimport { sGetSettingsDisplayNameProperty } from '../../reducers/settings';\nimport { sGetActiveModalDimension } from '../../reducers/activeModalDimension';\nimport { sGetDimensions } from '../../reducers/dimensions';\nimport { sGetFiltersKeys } from '../../reducers/itemFilters';\nimport { sGetEditItemFiltersRoot } from '../../reducers/editItemFilters';\nimport { acAddItemFilter, acRemoveItemFilter } from '../../actions/itemFilters';\nimport {\n    acRemoveEditItemFilter,\n    acSetEditItemFilters,\n} from '../../actions/editItemFilters';\nimport {\n    acClearActiveModalDimension,\n    acSetActiveModalDimension,\n} from '../../actions/activeModalDimension';\n\nclass FilterSelector extends Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            anchorEl: null,\n        };\n    }\n\n    openPanel = (_, event) => {\n        this.setState({ anchorEl: event.currentTarget });\n    };\n\n    closePanel = () => {\n        this.setState({ anchorEl: null });\n    };\n\n    closeDialog = () => {\n        this.setState({ anchorEl: null });\n\n        this.props.clearActiveModalDimension();\n    };\n\n    selectDimension = id => {\n        this.props.setActiveModalDimension(\n            this.props.dimensions.find(dimension => dimension.id === id)\n        );\n    };\n\n    onSelectItems = ({ dimensionId, items }) => {\n        this.props.setEditItemFilters({\n            ...this.props.selectedItems,\n            [dimensionId]: items,\n        });\n    };\n\n    onDeselectItems = ({ dimensionId, itemIdsToRemove }) => {\n        const oldList = this.props.selectedItems[dimensionId] || [];\n        const newList = oldList.filter(\n            item => !itemIdsToRemove.includes(item.id)\n        );\n\n        if (newList.length) {\n            this.props.setEditItemFilters({\n                ...this.props.selectedItems,\n                [dimensionId]: newList,\n            });\n        } else {\n            this.props.removeEditItemFilter(dimensionId);\n        }\n    };\n\n    onReorderItems = ({ dimensionId, itemIds }) => {\n        const oldList = this.props.selectedItems[dimensionId] || [];\n        const reorderedList = itemIds.map(id =>\n            oldList.find(item => item.id === id)\n        );\n\n        this.props.setEditItemFilters({\n            ...this.props.selectedItems,\n            [dimensionId]: reorderedList,\n        });\n    };\n\n    saveFilter = id => {\n        const filterItems = this.props.selectedItems[id];\n\n        if (filterItems && filterItems.length) {\n            this.props.addItemFilter({\n                id,\n                value: [...filterItems],\n            });\n        } else {\n            this.props.removeItemFilter(id);\n        }\n\n        this.closeDialog();\n    };\n\n    render() {\n        const {\n            theme,\n            displayNameProperty,\n            dimension,\n            dimensions,\n            selectedDimensions,\n            selectedItems,\n        } = this.props;\n\n        return (\n            <Fragment>\n                <Button onClick={this.openPanel}>\n                    {i18n.t('Add filter')}\n                    <ArrowDropDownIcon />\n                </Button>\n                <Popover\n                    open={Boolean(this.state.anchorEl)}\n                    anchorEl={this.state.anchorEl}\n                    anchorOrigin={{ vertical: 'bottom', horizontal: 'left' }}\n                    onClose={this.closePanel}\n                    style={{\n                        height: '100%',\n                        fontFamily: theme.typography.fontFamily,\n                    }}\n                >\n                    <DimensionsPanel\n                        dimensions={dimensions}\n                        onDimensionClick={this.selectDimension}\n                        selectedIds={selectedDimensions}\n                    />\n                </Popover>\n                {dimension ? (\n                    <FilterDialog\n                        displayNameProperty={displayNameProperty}\n                        dimension={dimension}\n                        selectedItems={selectedItems[dimension.id] || []}\n                        onSelect={this.onSelectItems}\n                        onDeselect={this.onDeselectItems}\n                        onReorder={this.onReorderItems}\n                        onClose={this.closeDialog}\n                        onConfirm={this.saveFilter}\n                    />\n                ) : null}\n            </Fragment>\n        );\n    }\n}\n\nconst mapStateToProps = state => ({\n    displayNameProperty: sGetSettingsDisplayNameProperty(state),\n    dimension: sGetActiveModalDimension(state),\n    dimensions: sGetDimensions(state),\n    selectedDimensions: sGetFiltersKeys(state),\n    selectedItems: sGetEditItemFiltersRoot(state),\n});\n\nFilterSelector.propTypes = {\n    addItemFilter: PropTypes.func,\n    clearActiveModalDimension: PropTypes.func,\n    dimension: PropTypes.object,\n    dimensions: PropTypes.object,\n    displayNameProperty: PropTypes.string,\n    removeEditItemFilter: PropTypes.func,\n    removeItemFilter: PropTypes.func,\n    selectedDimensions: PropTypes.array,\n    selectedItems: PropTypes.object,\n    setActiveModalDimension: PropTypes.func,\n    setEditItemFilters: PropTypes.func,\n    theme: PropTypes.object,\n};\n\nexport default connect(\n    mapStateToProps,\n    {\n        clearActiveModalDimension: acClearActiveModalDimension,\n        setActiveModalDimension: acSetActiveModalDimension,\n        addItemFilter: acAddItemFilter,\n        removeItemFilter: acRemoveItemFilter,\n        removeEditItemFilter: acRemoveEditItemFilter,\n        setEditItemFilters: acSetEditItemFilters,\n    }\n)(withTheme()(FilterSelector));\n","import React, { Component } from 'react';\nimport InfoOutlineIcon from '@material-ui/icons/InfoOutlined';\nimport { colors } from '@dhis2/ui-core';\nimport PropTypes from 'prop-types';\n\nclass Info extends Component {\n    show = false;\n\n    toggle() {\n        this.show = !this.show;\n        return this.show;\n    }\n\n    render() {\n        return (\n            <div onClick={() => this.props.onClick(this.toggle())}>\n                <InfoOutlineIcon style={{ fill: colors.grey600 }} />\n            </div>\n        );\n    }\n}\n\nInfo.propTypes = {\n    onClick: PropTypes.func,\n};\n\nexport default Info;\n","import React, { Component, Fragment } from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport { Link } from 'react-router-dom';\nimport i18n from '@dhis2/d2-i18n';\nimport SharingDialog from '@dhis2/d2-ui-sharing-dialog';\nimport Star from '@material-ui/icons/Star';\nimport StarBorder from '@material-ui/icons/StarBorder';\n\nimport { orObject } from '../../modules/util';\nimport { tStarDashboard } from '../../actions/dashboards';\nimport { acSetSelectedShowDescription } from '../../actions/selected';\nimport FilterSelector from '../ItemFilter/FilterSelector';\nimport { Button } from '@dhis2/ui-core';\nimport Info from './Info';\nimport {\n    sGetSelectedId,\n    sGetSelectedShowDescription,\n} from '../../reducers/selected';\nimport {\n    sGetDashboardById,\n    sGetDashboardItems,\n} from '../../reducers/dashboards';\nimport { colors } from '@dhis2/ui-core';\n\nconst NO_DESCRIPTION = i18n.t('No description');\n\nconst styles = {\n    actions: {\n        display: 'flex',\n        alignItems: 'center',\n        marginLeft: '20px',\n    },\n    starIcon: {\n        fill: colors.grey600,\n    },\n    textButton: {\n        minWidth: '30px',\n        top: '1px',\n    },\n    editLink: {\n        display: 'inline-block',\n        verticalAlign: 'top',\n        textDecoration: 'none',\n        marginRight: '4px',\n    },\n    titleBar: {\n        display: 'flex',\n        alignItems: 'flex-start',\n    },\n    titleBarIcon: {\n        marginLeft: 5,\n        position: 'relative',\n        top: 1,\n        cursor: 'pointer',\n    },\n};\n\nclass ViewTitleBar extends Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            sharingDialogIsOpen: false,\n        };\n    }\n\n    toggleSharingDialog = () =>\n        this.setState({ sharingDialogIsOpen: !this.state.sharingDialogIsOpen });\n\n    render() {\n        const {\n            id,\n            name,\n            description,\n            access,\n            style,\n            showDescription,\n            starred,\n            onStarClick,\n            onInfoClick,\n            classes,\n        } = this.props;\n\n        const titleStyle = Object.assign({}, style.title, {\n            cursor: 'default',\n            userSelect: 'text',\n            top: '7px',\n        });\n\n        const StarIcon = starred ? Star : StarBorder;\n\n        return (\n            <Fragment>\n                <div className={classes.titleBar}>\n                    <span style={titleStyle}>{name}</span>\n                    <div className={classes.actions}>\n                        <div\n                            className={classes.titleBarIcon}\n                            onClick={onStarClick}\n                        >\n                            <StarIcon className={classes.starIcon} />\n                        </div>\n                        <div className={classes.titleBarIcon}>\n                            <Info onClick={onInfoClick} />\n                        </div>\n                        <div style={{ marginLeft: '10px' }}>\n                            {access.update ? (\n                                <Link\n                                    className={classes.editLink}\n                                    to={`/${id}/edit`}\n                                >\n                                    <Button>{i18n.t('Edit')}</Button>\n                                </Link>\n                            ) : null}\n                            {access.manage ? (\n                                <span style={{ marginRight: '4px' }}>\n                                    <Button onClick={this.toggleSharingDialog}>\n                                        {i18n.t('Share')}\n                                    </Button>\n                                </span>\n                            ) : null}\n                            <span style={{ marginRight: '4px' }}>\n                                <FilterSelector />\n                            </span>\n                        </div>\n                    </div>\n                </div>\n                {showDescription ? (\n                    <div\n                        className=\"dashboard-description\"\n                        style={Object.assign(\n                            { paddingTop: '5px', paddingBottom: '5px' },\n                            style.description,\n                            !description ? { color: '#888' } : {}\n                        )}\n                    >\n                        {description || NO_DESCRIPTION}\n                    </div>\n                ) : null}\n                {id ? (\n                    <SharingDialog\n                        d2={this.context.d2}\n                        id={id}\n                        type=\"dashboard\"\n                        open={this.state.sharingDialogIsOpen}\n                        onRequestClose={this.toggleSharingDialog}\n                    />\n                ) : null}\n            </Fragment>\n        );\n    }\n}\n\nconst mapStateToProps = state => {\n    const id = sGetSelectedId(state);\n    const dashboard = orObject(sGetDashboardById(state, id));\n\n    return {\n        id,\n        name: dashboard.displayName,\n        description: dashboard.displayDescription,\n        dashboardItems: sGetDashboardItems(state),\n        showDescription: sGetSelectedShowDescription(state),\n        starred: dashboard.starred,\n        access: orObject(dashboard.access),\n    };\n};\n\nconst mergeProps = (stateProps, dispatchProps, ownProps) => {\n    const { id, starred, showDescription } = stateProps;\n    const { dispatch } = dispatchProps;\n\n    return {\n        ...stateProps,\n        ...ownProps,\n        onStarClick: () => dispatch(tStarDashboard(id, !starred)),\n        onInfoClick: () =>\n            dispatch(acSetSelectedShowDescription(!showDescription)),\n    };\n};\n\nexport default connect(\n    mapStateToProps,\n    null,\n    mergeProps\n)(withStyles(styles)(ViewTitleBar));\n\nViewTitleBar.propTypes = {\n    access: PropTypes.object,\n    classes: PropTypes.object,\n    description: PropTypes.string,\n    id: PropTypes.string,\n    name: PropTypes.string,\n    showDescription: PropTypes.bool,\n    starred: PropTypes.bool,\n    style: PropTypes.object,\n    onInfoClick: PropTypes.func,\n    onStarClick: PropTypes.func,\n};\n\nViewTitleBar.defaultProps = {\n    name: '',\n    description: '',\n    starred: false,\n    showDescription: false,\n    onInfoClick: null,\n};\n\nViewTitleBar.contextTypes = {\n    d2: PropTypes.object,\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport { colors } from '@dhis2/ui-core';\nimport EditTitleBar from './EditTitleBar';\nimport ViewTitleBar from './ViewTitleBar';\n\nimport './TitleBar.css';\n\nconst style = {\n    title: {\n        position: 'relative',\n        fontSize: 21,\n        fontWeight: 500,\n        color: colors.black,\n        minWidth: 50,\n    },\n    description: {\n        fontSize: 14,\n        color: colors.grey800,\n    },\n};\n\nconst TitleBar = ({ edit }) => {\n    return (\n        <div\n            className=\"titlebar-wrapper\"\n            style={{\n                padding: '20px 15px 5px 10px',\n            }}\n        >\n            {edit ? (\n                <EditTitleBar style={style} />\n            ) : (\n                <ViewTitleBar style={style} />\n            )}\n        </div>\n    );\n};\n\nTitleBar.propTypes = {\n    edit: PropTypes.bool,\n};\n\nexport default TitleBar;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nimport i18n from '@dhis2/d2-i18n';\n\nimport * as pluginManager from './plugin';\nimport { getBaseUrl, orObject } from '../../../modules/util';\nimport { getGridItemDomId } from '../../ItemGrid/gridUtil';\n\nconst pluginCredentials = d2 => {\n    return {\n        baseUrl: getBaseUrl(d2),\n        auth: d2.Api.getApi().defaultHeaders.Authorization,\n    };\n};\n\nclass DefaultPlugin extends Component {\n    pluginCredentials = null;\n\n    constructor(props, context) {\n        super(props);\n\n        this.d2 = context.d2;\n    }\n\n    shouldPluginReload = prevProps => {\n        // TODO - fix this hack, to handle bug with multiple\n        // rerendering while switching between dashboards.\n        //\n        // To determine if the rendering is happening because of a\n        // dashboard switch, check if the item reference has changed.\n        const reloadAllowed = this.props.item === prevProps.item;\n\n        const filtersChanged = prevProps.itemFilters !== this.props.itemFilters;\n        const vis = orObject(this.props.visualization);\n        const prevVis = orObject(prevProps.visualization);\n        const visChanged =\n            vis.id !== prevVis.id || vis.activeType !== prevVis.activeType;\n\n        return reloadAllowed && (visChanged || filtersChanged);\n    };\n\n    reloadPlugin = prevProps => {\n        if (\n            pluginManager.pluginIsAvailable(\n                this.props.item,\n                this.props.visualization\n            ) &&\n            this.shouldPluginReload(prevProps)\n        ) {\n            const prevVis = orObject(prevProps.visualization);\n            const currentVis = this.props.visualization;\n\n            const useActiveType =\n                currentVis.activeType !== prevVis.activeType ||\n                currentVis.activeType !== this.props.item.type;\n\n            if (\n                useActiveType ||\n                this.props.itemFilters !== prevProps.itemFilters\n            ) {\n                pluginManager.unmount(\n                    this.props.item,\n                    prevVis.activeType || this.props.item.type\n                );\n\n                pluginManager.load(this.props.item, this.props.visualization, {\n                    credentials: this.pluginCredentials,\n                    activeType: useActiveType ? currentVis.activeType : null,\n                });\n            }\n        }\n    };\n\n    componentDidMount() {\n        this.pluginCredentials = pluginCredentials(this.d2);\n\n        if (\n            pluginManager.pluginIsAvailable(\n                this.props.item,\n                this.props.visualization\n            )\n        ) {\n            pluginManager.load(this.props.item, this.props.visualization, {\n                credentials: this.pluginCredentials,\n                activeType: !this.props.editMode ? this.getActiveType() : null,\n            });\n        }\n    }\n\n    componentDidUpdate(prevProps) {\n        this.reloadPlugin(prevProps);\n    }\n\n    getActiveType = () =>\n        this.props.visualization.activeType || this.props.item.type;\n\n    render() {\n        const { classes, item, visualization, style } = this.props;\n        const pluginIsAvailable = pluginManager.pluginIsAvailable(\n            item,\n            visualization\n        );\n\n        return pluginIsAvailable ? (\n            <div id={getGridItemDomId(item.id)} style={style} />\n        ) : (\n            <div className={classes.textDiv}>\n                {i18n.t('Unable to load the plugin for this item')}\n            </div>\n        );\n    }\n}\n\nDefaultPlugin.contextTypes = {\n    d2: PropTypes.object,\n};\n\nDefaultPlugin.propTypes = {\n    classes: PropTypes.object,\n    editMode: PropTypes.bool,\n    item: PropTypes.object,\n    itemFilters: PropTypes.object,\n    style: PropTypes.object,\n    visualization: PropTypes.object,\n};\n\nDefaultPlugin.defaultProps = {\n    style: {},\n    item: {},\n    itemFilters: {},\n    visualization: {},\n};\n\nexport default DefaultPlugin;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nexport const HEADER_HEIGHT = 45;\n\nconst ItemHeader = props => {\n    const { title, actionButtons, editMode } = props;\n\n    return (\n        <div className=\"dashboard-item-header\">\n            <div\n                className=\"dashboard-item-header-title\"\n                style={{ userSelect: editMode ? 'none' : 'text' }}\n            >\n                {title}\n            </div>\n            {actionButtons}\n        </div>\n    );\n};\n\nItemHeader.propTypes = {\n    actionButtons: PropTypes.node,\n    editMode: PropTypes.bool,\n    title: PropTypes.oneOfType([PropTypes.object, PropTypes.string]),\n};\n\nexport default ItemHeader;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { colors } from '@dhis2/ui-core';\nimport { getId } from './plugin';\nimport InterpretationsComponent from '@dhis2/d2-ui-interpretations';\n\nconst style = {\n    scrollContainer: {\n        overflowY: 'auto',\n        height: '340px',\n    },\n    line: {\n        margin: '-1px 0px 0px',\n        height: '1px',\n        border: 'none',\n        backgroundColor: colors.grey100,\n    },\n};\n\nclass ItemFooter extends Component {\n    render() {\n        const objectId = getId(this.props.item);\n\n        return (\n            <div className=\"dashboard-item-footer\">\n                <hr style={style.line} />\n                <div style={style.scrollContainer}>\n                    <InterpretationsComponent\n                        d2={this.context.d2}\n                        item={this.props.item}\n                        type={this.props.item.type.toLowerCase()}\n                        id={objectId}\n                        appName=\"dashboard\"\n                    />\n                </div>\n            </div>\n        );\n    }\n}\n\nItemFooter.contextTypes = {\n    d2: PropTypes.object.isRequired,\n};\n\nItemFooter.propTypes = {\n    item: PropTypes.object.isRequired,\n};\n\nexport default ItemFooter;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport './ItemHeaderButton.css';\n\nconst ItemHeaderButton = ({ disabled, onClick, children, style }) => {\n    return (\n        <button\n            disabled={disabled}\n            type=\"button\"\n            className=\"item-action-button\"\n            style={style}\n            onClick={onClick}\n        >\n            {children}\n        </button>\n    );\n};\n\nItemHeaderButton.propTypes = {\n    children: PropTypes.node,\n    disabled: PropTypes.bool,\n    style: PropTypes.object,\n    onClick: PropTypes.func,\n};\n\nexport default ItemHeaderButton;\n","import React, { Component, Fragment } from 'react';\nimport PropTypes from 'prop-types';\nimport MessageIcon from '@material-ui/icons/Message';\nimport TableIcon from '@material-ui/icons/ViewList';\nimport ChartIcon from '@material-ui/icons/InsertChart';\nimport MapIcon from '@material-ui/icons/Public';\n\nimport { extractFavorite } from './plugin';\nimport ItemHeaderButton from '../ItemHeaderButton';\nimport {\n    CHART,\n    MAP,\n    REPORT_TABLE,\n    EVENT_CHART,\n    EVENT_REPORT,\n    isTrackerDomainType,\n    hasMapView,\n} from '../../../modules/itemTypes';\nimport { colors, theme } from '@dhis2/ui-core';\nimport { isSingleValue } from '@dhis2/analytics';\n\nconst style = {\n    iconBase: {\n        width: '24px',\n        height: '24px',\n        fill: colors.grey500,\n    },\n    buttonBase: {\n        padding: '5px 6px 3px 6px',\n    },\n    buttonDisabled: {\n        padding: '5px 6px 3px 6px',\n        opacity: 0.5,\n        cursor: 'unset',\n    },\n    toggleFooterPadding: {\n        padding: '7px 6px 1px 6px',\n    },\n    border: {\n        borderRadius: '2px',\n        border: `1px solid ${colors.grey200}`,\n    },\n};\n\nconst baseStyle = {\n    icon: style.iconBase,\n    container: style.buttonBase,\n};\n\nconst disabledStyle = {\n    icon: style.iconBase,\n    container: style.buttonDisabled,\n};\n\nconst activeStyle = {\n    icon: { ...style.iconBase, fill: theme.primary800 },\n    container: {\n        ...style.buttonBase,\n        backgroundColor: theme.primary100,\n    },\n};\n\nconst inactiveStyle = disabled => (disabled ? disabledStyle : baseStyle);\n\nconst tableBtnStyle = (activeType, disabled) =>\n    [REPORT_TABLE, EVENT_REPORT].includes(activeType)\n        ? activeStyle\n        : inactiveStyle(disabled);\n\nconst chartBtnStyle = (activeType, disabled) =>\n    [CHART, EVENT_CHART].includes(activeType)\n        ? activeStyle\n        : inactiveStyle(disabled);\n\nconst mapBtnStyle = (activeType, disabled) =>\n    [MAP].includes(activeType) ? activeStyle : inactiveStyle(disabled);\n\nclass VisualizationItemHeaderButtons extends Component {\n    renderInterpretationButton() {\n        const { activeFooter, onToggleFooter } = this.props;\n\n        const toggleFooterBase = activeFooter ? activeStyle : baseStyle;\n\n        const toggleFooter = {\n            ...toggleFooterBase,\n            container: {\n                ...toggleFooterBase.container,\n                ...style.toggleFooterPadding,\n                ...style.border,\n            },\n        };\n\n        return (\n            <Fragment>\n                <ItemHeaderButton\n                    style={toggleFooter.container}\n                    onClick={onToggleFooter}\n                >\n                    <MessageIcon style={toggleFooter.icon} />\n                </ItemHeaderButton>\n            </Fragment>\n        );\n    }\n\n    renderVisualizationButtons() {\n        const {\n            item,\n            visualization,\n            onSelectActiveType,\n            activeType,\n        } = this.props;\n\n        if (isSingleValue(visualization.type)) {\n            return null;\n        }\n\n        const onViewTable = () =>\n            onSelectActiveType(\n                isTrackerDomainType(item.type) ? EVENT_REPORT : REPORT_TABLE\n            );\n\n        const onViewChart = () =>\n            onSelectActiveType(\n                isTrackerDomainType(item.type) ? EVENT_CHART : CHART\n            );\n\n        const onViewMap = () => onSelectActiveType(MAP);\n\n        // disable toggle buttons\n        let disabled = false;\n\n        if (item.type === CHART) {\n            if (extractFavorite(item).type.match(/^YEAR_OVER_YEAR/)) {\n                disabled = true;\n            }\n        }\n\n        const tableButtonStyle = tableBtnStyle(activeType, disabled);\n        const chartButtonStyle = chartBtnStyle(activeType, disabled);\n        const mapButtonStyle = mapBtnStyle(activeType, disabled);\n\n        return (\n            <div style={{ marginLeft: 10 }}>\n                <div style={style.border}>\n                    <ItemHeaderButton\n                        disabled={disabled}\n                        style={tableButtonStyle.container}\n                        onClick={onViewTable}\n                    >\n                        <TableIcon style={tableButtonStyle.icon} />\n                    </ItemHeaderButton>\n                    <ItemHeaderButton\n                        disabled={disabled}\n                        style={chartButtonStyle.container}\n                        onClick={onViewChart}\n                    >\n                        <ChartIcon style={chartButtonStyle.icon} />\n                    </ItemHeaderButton>\n                    {hasMapView(item.type) ? (\n                        <ItemHeaderButton\n                            disabled={disabled}\n                            style={mapButtonStyle.container}\n                            onClick={onViewMap}\n                        >\n                            <MapIcon style={mapButtonStyle.icon} />\n                        </ItemHeaderButton>\n                    ) : null}\n                </div>\n            </div>\n        );\n    }\n\n    render() {\n        return (\n            <Fragment>\n                {this.renderInterpretationButton()}\n                {this.renderVisualizationButtons()}\n            </Fragment>\n        );\n    }\n}\n\nVisualizationItemHeaderButtons.propTypes = {\n    activeFooter: PropTypes.bool,\n    activeType: PropTypes.string,\n    item: PropTypes.object,\n    visualization: PropTypes.object,\n    onSelectActiveType: PropTypes.func,\n    onToggleFooter: PropTypes.func,\n};\n\nexport default VisualizationItemHeaderButtons;\n","// Note that this ignores discrepancies in 'this', so shouldn't be used with bound functions\n// This is useful instead of lodash/memoize when we only need to memoize a single value\n// Inspiration: https://github.com/alexreardon/memoize-one\n\nconst memoizeOne = fn => {\n    let lastArgs = undefined;\n    let lastValue = undefined;\n\n    return (...args) => {\n        if (\n            lastArgs &&\n            args.length === lastArgs.length &&\n            args.every((arg, i) => arg === lastArgs[i])\n        ) {\n            return lastValue;\n        }\n        lastArgs = args;\n        lastValue = fn(...args);\n        return lastValue;\n    };\n};\n\nexport default memoizeOne;\n","import React, { Component, Fragment } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { withStyles } from '@material-ui/core/styles';\nimport LaunchIcon from '@material-ui/icons/Launch';\nimport VisualizationPlugin from '@dhis2/data-visualizer-plugin';\n\nimport i18n from '@dhis2/d2-i18n';\nimport uniqueId from 'lodash/uniqueId';\n\nimport DefaultPlugin from './DefaultPlugin';\nimport ItemHeader, { HEADER_HEIGHT } from '../ItemHeader';\nimport ItemFooter from './ItemFooter';\nimport VisualizationItemHeaderButtons from './ItemHeaderButtons';\nimport * as pluginManager from './plugin';\nimport { sGetVisualization } from '../../../reducers/visualizations';\nimport { sGetItemFiltersRoot } from '../../../reducers/itemFilters';\nimport {\n    acAddVisualization,\n    acSetActiveVisualizationType,\n} from '../../../actions/visualizations';\nimport {\n    VISUALIZATION,\n    MAP,\n    CHART,\n    REPORT_TABLE,\n    itemTypeMap,\n} from '../../../modules/itemTypes';\n\nimport { colors } from '@dhis2/ui-core';\nimport memoizeOne from '../../../modules/memoizeOne';\nimport { getVisualizationConfig } from './plugin';\n\nconst styles = {\n    icon: {\n        width: 16,\n        height: 16,\n        marginLeft: 3,\n        cursor: 'pointer',\n        fill: colors.grey600,\n    },\n    title: {\n        overflow: 'hidden',\n        maxWidth: '85%',\n        textOverflow: 'ellipsis',\n        whiteSpace: 'nowrap',\n    },\n    textDiv: {\n        fontSize: '14px',\n        fontStretch: 'normal',\n        padding: '10px',\n        lineHeight: '20px',\n    },\n};\n\nconst applyFilters = (visualization, filters) => {\n    if (!Object.keys(filters).length) {\n        return visualization;\n    }\n\n    // deep clone objects in filters to avoid changing the visualization in the Redux store\n    const visRows = visualization.rows.map(obj => ({ ...obj }));\n    const visColumns = visualization.columns.map(obj => ({ ...obj }));\n    const visFilters = visualization.filters.map(obj => ({ ...obj }));\n\n    Object.keys(filters).forEach(dimensionId => {\n        if (filters[dimensionId]) {\n            let dimensionFound = false;\n\n            [visRows, visColumns, visFilters].forEach(dimensionObjects =>\n                dimensionObjects\n                    .filter(obj => obj.dimension === dimensionId)\n                    .forEach(obj => {\n                        dimensionFound = true;\n                        obj.items = filters[dimensionId];\n                    })\n            );\n\n            // add dimension to filters if not already present elsewhere\n            if (!dimensionFound) {\n                visFilters.push({\n                    dimension: dimensionId,\n                    items: filters[dimensionId],\n                });\n            }\n        }\n    });\n\n    return {\n        ...visualization,\n        rows: visRows,\n        columns: visColumns,\n        filters: visFilters,\n    };\n};\n\nexport class Item extends Component {\n    state = {\n        showFooter: false,\n        configLoaded: false,\n    };\n\n    constructor(props, context) {\n        super(props);\n\n        this.d2 = context.d2;\n\n        this.contentRef = React.createRef();\n    }\n\n    async componentDidMount() {\n        this.props.onVisualizationLoaded(\n            // TODO do not call fetch on the pluginManager, do it here as the manager will eventually be removed...\n            await pluginManager.fetch(this.props.item)\n        );\n\n        this.setState({\n            configLoaded: true,\n        });\n    }\n\n    getUniqueKey = memoizeOne(() => uniqueId());\n\n    pluginCredentials = null;\n\n    getPluginComponent = () => {\n        const activeType = this.getActiveType();\n        const visualization = getVisualizationConfig(\n            this.props.visualization,\n            this.props.item.type,\n            activeType\n        );\n\n        if (!visualization) {\n            return (\n                <div className={this.props.classes.textDiv}>\n                    {i18n.t('No data to display')}\n                </div>\n            );\n        }\n\n        const props = {\n            ...this.props,\n            visualization,\n            style: this.getContentStyle(),\n        };\n\n        switch (activeType) {\n            case VISUALIZATION:\n            case CHART:\n            case REPORT_TABLE: {\n                return (\n                    <VisualizationPlugin\n                        d2={this.d2}\n                        visualization={applyFilters(\n                            visualization,\n                            props.itemFilters\n                        )}\n                        forDashboard={true}\n                        style={props.style}\n                    />\n                );\n            }\n            case MAP: {\n                if (props.item.type === MAP) {\n                    // apply filters only to thematic and event layers\n                    // for maps AO\n                    const mapViews = props.visualization.mapViews.map(obj => {\n                        if (\n                            obj.layer.includes('thematic') ||\n                            obj.layer.includes('event')\n                        ) {\n                            return applyFilters(obj, props.itemFilters);\n                        }\n\n                        return obj;\n                    });\n\n                    props.visualization = {\n                        ...props.visualization,\n                        mapViews,\n                    };\n                } else {\n                    // this is the case of a non map AO passed to the maps plugin\n                    // due to a visualization type switch in dashboard item\n                    // maps plugin takes care of converting the AO to a suitable format\n                    props.visualization = applyFilters(\n                        props.visualization,\n                        props.itemFilters\n                    );\n                }\n\n                return <DefaultPlugin {...props} />;\n            }\n            default: {\n                props.visualization = applyFilters(\n                    props.visualization,\n                    props.itemFilters\n                );\n\n                return <DefaultPlugin {...props} />;\n            }\n        }\n    };\n\n    onToggleFooter = () => {\n        this.setState(\n            { showFooter: !this.state.showFooter },\n            this.props.onToggleItemExpanded(this.props.item.id)\n        );\n    };\n\n    onSelectActiveType = type => {\n        if (type === this.getActiveType()) {\n            return;\n        }\n\n        pluginManager.unmount(this.props.item, this.getActiveType());\n\n        this.props.onSelectActiveType(this.props.visualization.id, type);\n    };\n\n    getActiveType = () =>\n        this.props.visualization.activeType || this.props.item.type;\n\n    pluginIsAvailable = () =>\n        pluginManager.pluginIsAvailable(\n            this.props.item,\n            this.props.visualization\n        );\n\n    getTitle = () => {\n        const { item, editMode, classes } = this.props;\n        const itemName = pluginManager.getName(item);\n\n        return (\n            <div style={{ display: 'flex' }}>\n                <span className={classes.title} title={itemName}>\n                    {itemName}\n                </span>\n                {!editMode && this.pluginIsAvailable() ? (\n                    <a\n                        href={pluginManager.getLink(this.props.item, this.d2)}\n                        style={{ height: 16 }}\n                        title={`View in ${\n                            itemTypeMap[this.props.item.type].appName\n                        } app`}\n                    >\n                        <LaunchIcon className={classes.icon} />\n                    </a>\n                ) : null}\n            </div>\n        );\n    };\n\n    getActionButtons = () =>\n        pluginManager.pluginIsAvailable(\n            this.props.item,\n            this.props.visualization\n        ) && !this.props.editMode ? (\n            <VisualizationItemHeaderButtons\n                item={this.props.item}\n                visualization={this.props.visualization}\n                activeFooter={this.state.showFooter}\n                activeType={this.getActiveType()}\n                onSelectActiveType={this.onSelectActiveType}\n                onToggleFooter={this.onToggleFooter}\n            />\n        ) : null;\n\n    getContentStyle = () => {\n        const { item, editMode } = this.props;\n        const PADDING_BOTTOM = 4;\n\n        return !editMode\n            ? {\n                  height: item.originalHeight - HEADER_HEIGHT - PADDING_BOTTOM,\n              }\n            : { height: this.contentRef.offsetHeight };\n    };\n\n    render() {\n        const { item, editMode, itemFilters } = this.props;\n        const { showFooter } = this.state;\n\n        return (\n            <Fragment>\n                <ItemHeader\n                    title={this.getTitle()}\n                    actionButtons={this.getActionButtons()}\n                    editMode={editMode}\n                />\n                <div\n                    key={this.getUniqueKey(itemFilters)}\n                    className=\"dashboard-item-content\"\n                    ref={ref => (this.contentRef = ref)}\n                >\n                    {this.state.configLoaded && this.getPluginComponent()}\n                </div>\n                {!editMode && showFooter ? <ItemFooter item={item} /> : null}\n            </Fragment>\n        );\n    }\n}\n\nItem.contextTypes = {\n    d2: PropTypes.object,\n};\n\nItem.propTypes = {\n    classes: PropTypes.object,\n    editMode: PropTypes.bool,\n    item: PropTypes.object,\n    itemFilters: PropTypes.object,\n    visualization: PropTypes.object,\n    onSelectActiveType: PropTypes.func,\n    onToggleItemExpanded: PropTypes.func,\n    onVisualizationLoaded: PropTypes.func,\n};\n\nItem.defaultProps = {\n    item: {},\n    editMode: false,\n    onToggleItemExpanded: Function.prototype,\n    itemFilters: {},\n    visualization: {},\n};\n\nconst mapStateToProps = (state, ownProps) => ({\n    itemFilters: sGetItemFiltersRoot(state),\n    visualization: sGetVisualization(\n        state,\n        pluginManager.extractFavorite(ownProps.item).id\n    ),\n});\n\nconst mapDispatchToProps = dispatch => ({\n    onVisualizationLoaded: visualization =>\n        dispatch(acAddVisualization(visualization)),\n    onSelectActiveType: (id, type, activeType) =>\n        dispatch(acSetActiveVisualizationType(id, type, activeType)),\n});\n\nexport default connect(\n    mapStateToProps,\n    mapDispatchToProps\n)(withStyles(styles)(Item));\n","import React from 'react';\nimport { colors } from '@dhis2/ui-core';\n\nconst style = {\n    backgroundColor: colors.grey200,\n    border: 'none',\n    height: '1px',\n    margin: '0px 0px 5px 0px',\n};\n\nconst Line = () => <hr style={style} />;\n\nexport default Line;\n","import React, { Component, Fragment } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport i18n from '@dhis2/d2-i18n';\n\nimport { sGetMessagesRoot } from '../../../reducers/messages';\nimport { formatDate } from '../../../modules/util';\nimport { colors } from '@dhis2/ui-core';\nimport ItemHeader from '../ItemHeader';\nimport Line from '../../../widgets/Line';\n\nimport './MessagesItem.css';\n\nconst PRIVATE = 'PRIVATE';\n\nconst messageTypes = {\n    [PRIVATE]: 'Private',\n    VALIDATION_RESULT: 'Validation',\n    TICKET: 'Ticket',\n    SYSTEM: 'System',\n};\n\nconst style = {\n    list: {\n        listStyleType: 'none',\n        paddingLeft: '0px',\n    },\n    seeAll: {\n        textAlign: 'center',\n        fontSize: '13px',\n        marginBottom: '5px',\n    },\n    sender: {\n        fontSize: '13px',\n        lineHeight: '15px',\n        margin: 0,\n        color: colors.grey800,\n    },\n    snippet: {\n        color: colors.grey800,\n        fontSize: '13px',\n        lineHeight: '15px',\n        maxHeight: '30px',\n        overflow: 'hidden',\n    },\n};\n\nclass MessagesItem extends Component {\n    state = {\n        uiLocale: '',\n    };\n\n    async componentDidMount() {\n        const uiLocale = await this.context.d2.currentUser.userSettings.get(\n            'keyUiLocale'\n        );\n\n        this.setState({ uiLocale });\n    }\n\n    getMessageHref = msg => {\n        const msgIdentifier = msg ? `#/${msg.messageType}/${msg.id}` : '';\n        return `${this.context.baseUrl}/dhis-web-messaging/${msgIdentifier}`;\n    };\n\n    getMessageSender = msg => {\n        const latestMsg = msg.messages.slice(-1)[0];\n        return latestMsg.sender ? latestMsg.sender.displayName : '';\n    };\n\n    getMessageItems = () => {\n        const editClass = !this.props.editMode ? 'view' : null;\n\n        return this.props.messages.map(msg => {\n            const redirectToMsg = () => {\n                if (!this.props.editMode) {\n                    document.location.href = this.getMessageHref(msg);\n                }\n            };\n\n            const sender =\n                msg.messageType === PRIVATE\n                    ? this.getMessageSender(msg)\n                    : messageTypes[msg.messageType];\n\n            const readClass = !msg.read ? 'unread' : null;\n            const latestMsg = msg.messages.slice(-1)[0];\n            const msgDate = latestMsg.lastUpdated;\n\n            return (\n                <li\n                    className={`message-item ${editClass}`}\n                    key={msg.id}\n                    onClick={redirectToMsg}\n                >\n                    <p className={`message-title ${readClass}`}>\n                        {msg.displayName} ({msg.messageCount})\n                    </p>\n                    <p style={style.sender}>\n                        {sender} - {formatDate(msgDate, this.state.uiLocale)}\n                    </p>\n                    <p style={style.snippet}>{latestMsg.text}</p>\n                </li>\n            );\n        });\n    };\n\n    render() {\n        return (\n            <Fragment>\n                <ItemHeader title={i18n.t('Messages')} />\n                <Line />\n                {this.props.messages.length > 0 && (\n                    <div className=\"dashboard-item-content\">\n                        <ul style={style.list}>{this.getMessageItems()}</ul>\n                        <div style={style.seeAll}>\n                            <a href={this.getMessageHref()}>\n                                {i18n.t('See all messages')}\n                            </a>\n                        </div>\n                    </div>\n                )}\n            </Fragment>\n        );\n    }\n}\n\nMessagesItem.propTypes = {\n    editMode: PropTypes.bool,\n    messages: PropTypes.array,\n};\n\nMessagesItem.contextTypes = {\n    d2: PropTypes.object,\n    baseUrl: PropTypes.string,\n};\n\nconst mapStateToProps = state => {\n    return {\n        messages: Object.values(sGetMessagesRoot(state)),\n    };\n};\n\nconst MessagesContainer = connect(\n    mapStateToProps,\n    null\n)(MessagesItem);\n\nexport default MessagesContainer;\n","import React, { Fragment } from 'react';\nimport PropTypes from 'prop-types';\nimport ItemHeader from '../ItemHeader';\nimport NotInterestedIcon from '@material-ui/icons/NotInterested';\n\nconst NotSupportedItem = props => (\n    <Fragment>\n        <ItemHeader title={`Item type not supported: ${props.item.type}`} />\n        <div\n            style={{\n                display: 'flex',\n                justifyContent: 'center',\n                alignItems: 'center',\n                height: '90%',\n            }}\n        >\n            <NotInterestedIcon\n                style={{ width: 100, height: 100, align: 'center' }}\n                color=\"disabled\"\n            />\n        </div>\n    </Fragment>\n);\n\nNotSupportedItem.propTypes = {\n    item: PropTypes.object,\n};\n\nexport default NotSupportedItem;\n","import React from 'react';\nimport { colors } from '@dhis2/ui-core';\nimport PropTypes from 'prop-types';\n\nconst DescriptionIcon = ({ className }) => (\n    <svg\n        className={className}\n        xmlns=\"http://www.w3.org/2000/svg\"\n        viewBox=\"0 0 24 24\"\n        fill={colors.grey500}\n    >\n        <path d=\"M0 0h24v24H0z\" fill=\"none\" />\n        <path d=\"M14 2H6c-1.1 0-1.99.9-1.99 2L4 20c0 1.1.89 2 1.99 2H18c1.1 0 2-.9 2-2V8l-6-6zm2 16H8v-2h8v2zm0-4H8v-2h8v2zm-3-5V3.5L18.5 9H13z\" />\n    </svg>\n);\n\nDescriptionIcon.propTypes = {\n    className: PropTypes.string,\n};\n\nexport default DescriptionIcon;\n","import React from 'react';\nimport { colors } from '@dhis2/ui-core';\nimport PropTypes from 'prop-types';\n\nconst DeleteIcon = ({ className }) => (\n    <svg\n        className={className}\n        xmlns=\"http://www.w3.org/2000/svg\"\n        width=\"18\"\n        height=\"18\"\n        viewBox=\"0 0 24 24\"\n        fill={colors.red500}\n    >\n        <path d=\"M6 19c0 1.1.9 2 2 2h8c1.1 0 2-.9 2-2V7H6v12zM19 4h-3.5l-1-1h-5l-1 1H5v2h14V4z\" />\n        <path d=\"M0 0h24v24H0z\" fill=\"none\" />\n    </svg>\n);\n\nDeleteIcon.propTypes = {\n    className: PropTypes.string,\n};\n\nexport default DeleteIcon;\n","import React, { Fragment } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { colors } from '@dhis2/ui-core';\nimport DescriptionIcon from '../../../icons/Description';\n\nimport DeleteIcon from '../../../icons/Delete';\nimport Line from '../../../widgets/Line';\nimport { itemTypeMap, getItemUrl } from '../../../modules/itemTypes';\nimport { orArray } from '../../../modules/util';\nimport { tRemoveListItemContent } from './actions';\nimport ItemHeader from '../ItemHeader';\nimport classes from './Item.module.css';\n\nconst getItemTitle = item => itemTypeMap[item.type].pluralTitle;\n\nconst getContentItems = item =>\n    orArray(item[itemTypeMap[item.type].propName]).filter(\n        (item, index, array) =>\n            array.findIndex(el => el.id === item.id) === index\n    );\n\nconst ListItem = (props, context) => {\n    const { item, editMode, tRemoveListItemContent } = props;\n    const contentItems = getContentItems(item);\n\n    const getLink = contentItem => {\n        const deleteButton = (\n            <button\n                className={classes.deletebutton}\n                onClick={() => tRemoveListItemContent(item, contentItem)}\n            >\n                <DeleteIcon className={classes.deleteicon} />\n            </button>\n        );\n\n        return (\n            <Fragment>\n                <a\n                    className={classes.link}\n                    style={{ color: colors.grey900 }}\n                    href={getItemUrl(item.type, contentItem, context.d2)}\n                >\n                    {contentItem.name}\n                </a>\n                {editMode ? deleteButton : null}\n            </Fragment>\n        );\n    };\n\n    return (\n        <Fragment>\n            <ItemHeader title={getItemTitle(item)} />\n            <Line />\n            <div className=\"dashboard-item-content\">\n                <ul className={classes.list}>\n                    {contentItems.map(contentItem => (\n                        <li className={classes.item} key={contentItem.id}>\n                            <DescriptionIcon className={classes.itemicon} />\n                            {getLink(contentItem)}\n                        </li>\n                    ))}\n                </ul>\n            </div>\n        </Fragment>\n    );\n};\n\nListItem.propTypes = {\n    editMode: PropTypes.bool,\n    item: PropTypes.object,\n    tRemoveListItemContent: PropTypes.func,\n};\n\nListItem.contextTypes = {\n    d2: PropTypes.object,\n};\n\nexport default connect(\n    null,\n    {\n        tRemoveListItemContent,\n    }\n)(ListItem);\n","import {\n    acUpdateDashboardItem,\n    acRemoveDashboardItem,\n} from '../../../actions/editDashboard';\nimport { itemTypeMap } from '../../../modules/itemTypes';\n\nexport const tRemoveListItemContent = (dashboardItem, content) => dispatch => {\n    const listItemType = itemTypeMap[dashboardItem.type].propName;\n\n    const newContent = dashboardItem[listItemType].filter(\n        item => item.id !== content.id\n    );\n\n    if (newContent.length) {\n        dashboardItem[listItemType] = newContent;\n        dispatch(acUpdateDashboardItem(dashboardItem));\n    } else {\n        dispatch(acRemoveDashboardItem(dashboardItem));\n    }\n};\n","import React, { Fragment } from 'react';\nimport { connect } from 'react-redux';\nimport i18n from '@dhis2/d2-i18n';\nimport PropTypes from 'prop-types';\n\nimport Input from '@material-ui/core/Input';\nimport {\n    Parser as RichTextParser,\n    Editor as RichTextEditor,\n} from '@dhis2/d2-ui-rich-text';\n\nimport { acUpdateDashboardItem } from '../../../actions/editDashboard';\nimport { sGetEditDashboardItems } from '../../../reducers/editDashboard';\nimport { sGetDashboardItems } from '../../../reducers/dashboards';\nimport ItemHeader from '../ItemHeader';\nimport Line from '../../../widgets/Line';\n\nconst style = {\n    textDiv: {\n        padding: '10px',\n        whiteSpace: 'pre-line',\n        lineHeight: '20px',\n    },\n    textField: {\n        fontSize: '14px',\n        fontStretch: 'normal',\n        width: '90%',\n        margin: '0 auto',\n        display: 'block',\n        lineHeight: '24px',\n    },\n    container: {\n        marginBottom: '20px',\n        marginTop: '20px',\n    },\n};\n\nconst TextItem = props => {\n    const { item, editMode, text, acUpdateDashboardItem } = props;\n\n    const onChangeText = event => {\n        const updatedItem = {\n            ...item,\n            text: event.target.value,\n        };\n\n        acUpdateDashboardItem(updatedItem);\n    };\n\n    const viewItem = () => {\n        const textDivStyle = Object.assign({}, style.textField, style.textDiv);\n        return (\n            <div className=\"dashboard-item-content\" style={style.container}>\n                <RichTextParser style={textDivStyle}>{text}</RichTextParser>\n            </div>\n        );\n    };\n\n    const editItem = () => {\n        return (\n            <Fragment>\n                <ItemHeader title={i18n.t('Text item')} />\n                <Line />\n                <div className=\"dashboard-item-content\">\n                    <RichTextEditor onEdit={onChangeText}>\n                        <Input\n                            value={text}\n                            multiline\n                            fullWidth\n                            style={style.textField}\n                            placeholder={i18n.t('Add text here')}\n                            onChange={onChangeText}\n                        />\n                    </RichTextEditor>\n                </div>\n            </Fragment>\n        );\n    };\n\n    return <Fragment>{editMode ? editItem() : viewItem()}</Fragment>;\n};\n\nconst mapStateToProps = (state, ownProps) => {\n    const items = ownProps.editMode\n        ? sGetEditDashboardItems(state)\n        : sGetDashboardItems(state);\n\n    const item = items.find(item => item.id === ownProps.item.id);\n\n    return {\n        text: item ? item.text : '',\n    };\n};\n\nTextItem.propTypes = {\n    acUpdateDashboardItem: PropTypes.func,\n    editMode: PropTypes.bool,\n    item: PropTypes.object,\n    text: PropTypes.string,\n};\n\nexport default connect(\n    mapStateToProps,\n    {\n        acUpdateDashboardItem,\n    }\n)(TextItem);\n","import React, { Fragment } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport NotInterestedIcon from '@material-ui/icons/NotInterested';\n\nimport { FILTER_ORG_UNIT } from '../../../actions/itemFilters';\nimport { sGetItemFiltersRoot } from '../../../reducers/itemFilters';\nimport ItemHeader from '../ItemHeader';\nimport Line from '../../../widgets/Line';\n\nconst getIframeSrc = (appDetails, item, itemFilters) => {\n    let iframeSrc = `${appDetails.launchUrl}?dashboardItemId=${item.id}`;\n\n    if (\n        itemFilters &&\n        itemFilters[FILTER_ORG_UNIT] &&\n        itemFilters[FILTER_ORG_UNIT].length\n    ) {\n        const ouIds = itemFilters[FILTER_ORG_UNIT].map(\n            ouPath => ouPath.split('/').slice(-1)[0]\n        );\n\n        iframeSrc += `&userOrgUnit=${ouIds.join(',')}`;\n    }\n\n    return iframeSrc;\n};\n\nconst AppItem = ({ item, itemFilters }, context) => {\n    let appDetails;\n\n    const appKey = item.appKey;\n\n    if (appKey) {\n        appDetails = context.d2.system.installedApps.find(\n            app => app.key === appKey\n        );\n    }\n\n    return appDetails && appDetails.name && appDetails.launchUrl ? (\n        <Fragment>\n            <ItemHeader title={appDetails.name} />\n            <Line />\n            <iframe\n                title={appDetails.name}\n                src={getIframeSrc(appDetails, item, itemFilters)}\n                className=\"dashboard-item-content\"\n                style={{ border: 'none' }}\n            />\n        </Fragment>\n    ) : (\n        <Fragment>\n            <ItemHeader title={`${appKey} app not found`} />\n            <Line />\n            <div\n                className=\"dashboard-item-content\"\n                style={{\n                    display: 'flex',\n                    justifyContent: 'center',\n                    alignItems: 'center',\n                    height: '90%',\n                }}\n            >\n                <NotInterestedIcon\n                    color=\"disabled\"\n                    disabled\n                    style={{ width: 100, height: 100, align: 'center' }}\n                />\n            </div>\n        </Fragment>\n    );\n};\n\nAppItem.propTypes = {\n    item: PropTypes.object,\n    itemFilters: PropTypes.object,\n};\n\nAppItem.contextTypes = {\n    d2: PropTypes.object,\n};\n\nconst mapStateToProps = state => ({\n    itemFilters: sGetItemFiltersRoot(state),\n});\n\nexport default connect(mapStateToProps)(AppItem);\n","import React, { Fragment } from 'react';\nimport i18n from '@dhis2/d2-i18n';\n\nimport { colors } from '@dhis2/ui-core';\nimport ItemHeader from '../ItemHeader';\n\nconst style = {\n    margin: '21px 28px',\n    fontSize: '14px',\n    lineHeight: '18px',\n    color: colors.grey600,\n};\n\nconst SpacerItem = () => {\n    return (\n        <Fragment>\n            <ItemHeader title={i18n.t('Spacer')} />\n            <p style={style}>\n                {i18n.t(\n                    'Use a spacer to create empty vertical space between other dashboard items.'\n                )}\n            </p>\n        </Fragment>\n    );\n};\n\nexport default SpacerItem;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport VisualizationItem from './VisualizationItem/Item';\nimport MessagesItem from './MessagesItem/Item';\nimport NotSupportedItem from './NotSupportedItem/Item';\nimport ListItem from './ListItem/Item';\nimport TextItem from './TextItem/Item';\nimport AppItem from './AppItem/Item';\nimport SpacerItem from './SpacerItem/Item';\nimport {\n    APP,\n    VISUALIZATION,\n    REPORT_TABLE,\n    CHART,\n    MAP,\n    EVENT_CHART,\n    EVENT_REPORT,\n    MESSAGES,\n    REPORTS,\n    RESOURCES,\n    USERS,\n    TEXT,\n    SPACER,\n} from '../../modules/itemTypes';\nimport { DEFAULT_STATE_ITEM_FILTERS } from '../../reducers/itemFilters';\n\nconst getGridItem = type => {\n    switch (type) {\n        case VISUALIZATION:\n        case REPORT_TABLE:\n        case CHART:\n        case MAP:\n        case EVENT_CHART:\n        case EVENT_REPORT:\n            return VisualizationItem;\n        case MESSAGES:\n            return MessagesItem;\n        case REPORTS:\n        case RESOURCES:\n        case USERS:\n            return ListItem;\n        case TEXT:\n            return TextItem;\n        case SPACER:\n            return SpacerItem;\n        case APP:\n            return AppItem;\n        default:\n            return NotSupportedItem;\n    }\n};\n\nexport const Item = props => {\n    const GridItem = getGridItem(props.item.type);\n\n    return (\n        <GridItem\n            item={props.item}\n            editMode={props.editMode}\n            itemFilters={\n                props.editMode ? DEFAULT_STATE_ITEM_FILTERS : props.itemFilters\n            }\n            onToggleItemExpanded={props.onToggleItemExpanded}\n        />\n    );\n};\n\nItem.propTypes = {\n    editMode: PropTypes.bool,\n    item: PropTypes.object,\n    itemFilters: PropTypes.object,\n    onToggleItemExpanded: PropTypes.func,\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport ItemHeaderButton from '../Item/ItemHeaderButton';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport { colors } from '@dhis2/ui-core';\n\nconst style = {\n    button: {\n        position: 'absolute',\n        top: '7px',\n        right: '7px',\n        zIndex: '1000',\n    },\n    icon: {\n        fill: colors.red500,\n    },\n};\n\nconst DeleteItemHeaderButton = ({ onClick }) => (\n    <ItemHeaderButton onClick={onClick} style={style.button}>\n        <DeleteIcon style={style.icon} />\n    </ItemHeaderButton>\n);\n\nDeleteItemHeaderButton.propTypes = {\n    onClick: PropTypes.func,\n};\n\nexport default DeleteItemHeaderButton;\n","import React from 'react';\nimport { colors } from '@dhis2/ui-core';\nimport PropTypes from 'prop-types';\n\nexport const NoContentMessage = ({ text }) => (\n    <div\n        style={{\n            padding: '50px 10px',\n            textAlign: 'center',\n            fontSize: '15px',\n            fontWeight: 500,\n            color: colors.grey600,\n        }}\n    >\n        {text}\n    </div>\n);\n\nNoContentMessage.propTypes = {\n    text: PropTypes.string,\n};\n\nexport default NoContentMessage;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport debounce from 'lodash/debounce';\nimport pick from 'lodash/pick';\n\nconst defaultDebounceMs = 100;\nconst defaultBufferFactor = 0.25;\n\nclass ProgressiveLoadingContainer extends Component {\n    static propTypes = {\n        children: PropTypes.node.isRequired,\n        bufferFactor: PropTypes.number,\n        className: PropTypes.string,\n        debounceMs: PropTypes.number,\n        style: PropTypes.object,\n    };\n    static defaultProps = {\n        debounceMs: defaultDebounceMs,\n        bufferFactor: defaultBufferFactor,\n    };\n\n    state = {\n        shouldLoad: false,\n    };\n    containerRef = null;\n    shouldLoadHandler = null;\n\n    checkShouldLoad() {\n        const bufferPx = this.props.bufferFactor * window.innerHeight;\n\n        if (!this.containerRef) {\n            return;\n        }\n\n        const rect = this.containerRef.getBoundingClientRect();\n        if (\n            rect.bottom > -bufferPx &&\n            rect.top < window.innerHeight + bufferPx\n        ) {\n            this.setState({\n                shouldLoad: true,\n            });\n\n            this.removeHandler();\n        }\n    }\n\n    registerHandler() {\n        this.shouldLoadHandler = debounce(\n            () => this.checkShouldLoad(),\n            this.props.debounceMs\n        );\n\n        window.addEventListener('scroll', this.shouldLoadHandler);\n    }\n    removeHandler() {\n        window.removeEventListener('scroll', this.shouldLoadHandler);\n    }\n\n    componentDidMount() {\n        this.registerHandler();\n        this.checkShouldLoad();\n    }\n\n    componentWillUnmount() {\n        this.removeHandler();\n    }\n\n    render() {\n        const { children, className, style, ...props } = this.props;\n        const { shouldLoad } = this.state;\n\n        const eventProps = pick(props, [\n            'onMouseDown',\n            'onTouchStart',\n            'onMouseUp',\n            'onTouchEnd',\n        ]);\n\n        return (\n            <div\n                ref={ref => (this.containerRef = ref)}\n                style={style}\n                className={className}\n                {...eventProps}\n            >\n                {shouldLoad && children}\n            </div>\n        );\n    }\n}\n\nexport default ProgressiveLoadingContainer;\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport i18n from '@dhis2/d2-i18n';\nimport ReactGridLayout from 'react-grid-layout';\nimport { CircularLoader, ScreenCover } from '@dhis2/ui-core';\n\nimport {\n    acUpdateDashboardLayout,\n    acRemoveDashboardItem,\n} from '../../actions/editDashboard';\nimport { Item } from '../Item/Item';\nimport { resize as pluginResize } from '../Item/VisualizationItem/plugin';\nimport { isVisualizationType } from '../../modules/itemTypes';\nimport {\n    GRID_ROW_HEIGHT,\n    GRID_COMPACT_TYPE,\n    ITEM_MIN_HEIGHT,\n    MARGIN,\n    getGridColumns,\n    hasShape,\n    onItemResize,\n} from './gridUtil';\nimport { orArray } from '../../modules/util';\nimport DeleteItemButton from './DeleteItemButton';\nimport NoContentMessage from '../../widgets/NoContentMessage';\n\nimport 'react-grid-layout/css/styles.css';\nimport 'react-resizable/css/styles.css';\n\nimport './ItemGrid.css';\nimport { sGetSelectedId, sGetSelectedIsLoading } from '../../reducers/selected';\nimport {\n    sGetEditDashboardRoot,\n    sGetEditDashboardItems,\n} from '../../reducers/editDashboard';\nimport {\n    sGetDashboardById,\n    sGetDashboardItems,\n} from '../../reducers/dashboards';\nimport ProgressiveLoadingContainer from '../Item/ProgressiveLoadingContainer';\n\n// Component\n\nconst EXPANDED_HEIGHT = 17;\n\nexport class ItemGrid extends Component {\n    state = {\n        expandedItems: {},\n    };\n\n    onToggleItemExpanded = clickedId => {\n        const isExpanded =\n            typeof this.state.expandedItems[clickedId] === 'boolean'\n                ? this.state.expandedItems[clickedId]\n                : false;\n\n        const expandedItems = { ...this.state.expandedItems };\n        expandedItems[clickedId] = !isExpanded;\n        this.setState({ expandedItems });\n    };\n\n    onRemoveItem = clickedId => {\n        this.props.acRemoveDashboardItem(clickedId);\n    };\n\n    componentWillReceiveProps(nextProps) {\n        if (nextProps.edit) {\n            this.setState({ expandedItems: {} });\n        }\n    }\n\n    onLayoutChange = newLayout => {\n        if (this.props.edit) {\n            this.props.acUpdateDashboardLayout(newLayout);\n        }\n    };\n\n    onResizeStop = (layout, oldItem, newItem) => {\n        onItemResize(newItem.i);\n\n        const dashboardItem = this.props.dashboardItems.find(\n            item => item.id === newItem.i\n        );\n\n        // call resize on the item component if it's a plugin type\n        if (dashboardItem && isVisualizationType(dashboardItem)) {\n            pluginResize(dashboardItem);\n        }\n    };\n\n    onRemoveItemWrapper = id => () => this.onRemoveItem(id);\n\n    render() {\n        const { edit, isLoading, dashboardItems } = this.props;\n\n        if (!isLoading && !dashboardItems.length) {\n            return (\n                <NoContentMessage\n                    text={i18n.t('There are no items on this dashboard')}\n                />\n            );\n        }\n\n        const items = dashboardItems.map(item => {\n            const expandedItem = this.state.expandedItems[item.id];\n            const hProp = { h: item.h };\n\n            if (expandedItem && expandedItem === true) {\n                hProp.h = item.h + EXPANDED_HEIGHT;\n            }\n\n            return Object.assign({}, item, hProp, {\n                i: item.id,\n                minH: ITEM_MIN_HEIGHT,\n            });\n        });\n\n        return (\n            <div className=\"grid-wrapper\">\n                {isLoading ? (\n                    <ScreenCover>\n                        <CircularLoader />\n                    </ScreenCover>\n                ) : null}\n                <ReactGridLayout\n                    onLayoutChange={this.onLayoutChange}\n                    onResizeStop={this.onResizeStop}\n                    className=\"layout\"\n                    layout={items}\n                    margin={MARGIN}\n                    cols={getGridColumns()}\n                    rowHeight={GRID_ROW_HEIGHT}\n                    width={window.innerWidth}\n                    compactType={GRID_COMPACT_TYPE}\n                    isDraggable={edit}\n                    isResizable={edit}\n                    draggableCancel=\"input,textarea\"\n                >\n                    {items.map(item => {\n                        const itemClassNames = [\n                            item.type,\n                            edit ? 'edit' : 'view',\n                        ].join(' ');\n\n                        return (\n                            <ProgressiveLoadingContainer\n                                key={item.i}\n                                className={itemClassNames}\n                            >\n                                {edit ? (\n                                    <DeleteItemButton\n                                        onClick={this.onRemoveItemWrapper(\n                                            item.id\n                                        )}\n                                    />\n                                ) : null}\n                                <Item\n                                    item={item}\n                                    editMode={edit}\n                                    onToggleItemExpanded={\n                                        this.onToggleItemExpanded\n                                    }\n                                />\n                            </ProgressiveLoadingContainer>\n                        );\n                    })}\n                </ReactGridLayout>\n            </div>\n        );\n    }\n}\n\nItemGrid.propTypes = {\n    acRemoveDashboardItem: PropTypes.func,\n    acUpdateDashboardLayout: PropTypes.func,\n    dashboardItems: PropTypes.array,\n    edit: PropTypes.bool,\n    isLoading: PropTypes.bool,\n};\n\nItemGrid.defaultProps = {\n    dashboardItems: [],\n};\n\n// Container\n\nconst mapStateToProps = (state, ownProps) => {\n    const selectedDashboard = ownProps.edit\n        ? sGetEditDashboardRoot(state)\n        : sGetDashboardById(state, sGetSelectedId(state));\n\n    const dashboardItems = ownProps.edit\n        ? sGetEditDashboardItems(state)\n        : sGetDashboardItems(state);\n\n    return {\n        isLoading: sGetSelectedIsLoading(state) || !selectedDashboard,\n        dashboardItems,\n    };\n};\n\nconst mapDispatchToProps = {\n    acUpdateDashboardLayout,\n    acRemoveDashboardItem,\n};\n\nconst mergeProps = (stateProps, dispatchProps, ownProps) => {\n    const validItems = orArray(stateProps.dashboardItems).filter(hasShape);\n\n    return {\n        ...dispatchProps,\n        edit: ownProps.edit,\n        isLoading: stateProps.isLoading,\n        dashboardItems: validItems,\n        onItemResize,\n    };\n};\n\nexport default connect(\n    mapStateToProps,\n    mapDispatchToProps,\n    mergeProps\n)(ItemGrid);\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nimport i18n from '@dhis2/d2-i18n';\n\nimport { colors } from '@dhis2/ui-core';\n\nconst styles = {\n    badgeContainer: {\n        margin: '2px',\n        padding: '0 16px',\n        borderRadius: '4px',\n        color: colors.white,\n        backgroundColor: '#212934',\n        height: 36,\n        display: 'flex',\n        alignItems: 'center',\n    },\n    badge: {\n        fontSize: '13px',\n        cursor: 'pointer',\n        whiteSpace: 'nowrap',\n    },\n    badgeRemove: {\n        fontSize: '12px',\n        textDecoration: 'underline',\n        marginLeft: '24px',\n        cursor: 'pointer',\n    },\n};\n\nclass FilterBadge extends Component {\n    onClick = id => () => this.props.onClick(id);\n    onRemove = id => () => this.props.onRemove(id);\n\n    render() {\n        const { data } = this.props;\n\n        return (\n            <div style={styles.badgeContainer}>\n                <span style={styles.badge} onClick={this.onClick(data.id)}>\n                    {`${data.name}: ${\n                        data.values.length > 1\n                            ? i18n.t('{{count}} selected', {\n                                  count: data.values.length,\n                              })\n                            : data.values[0].name\n                    }`}\n                </span>\n                <span\n                    style={styles.badgeRemove}\n                    onClick={this.onRemove(data.id)}\n                >\n                    {i18n.t('Remove')}\n                </span>\n            </div>\n        );\n    }\n}\n\nFilterBadge.propTypes = {\n    data: PropTypes.object.isRequired,\n    onClick: PropTypes.func.isRequired,\n    onRemove: PropTypes.func.isRequired,\n};\n\nFilterBadge.defaultProps = {\n    onClick: Function.prototype,\n    onRemove: Function.prototype,\n};\n\nexport default FilterBadge;\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { createSelector } from 'reselect';\nimport { withStyles } from '@material-ui/core/styles';\n\nimport { sGetDimensions } from '../../reducers/dimensions';\nimport { sGetItemFiltersRoot } from '../../reducers/itemFilters';\nimport { sGetControlBarUserRows } from '../../reducers/controlBar';\nimport { getTopOffset } from '../ControlBar/controlBarDimensions';\nimport { acRemoveItemFilter } from '../../actions/itemFilters';\nimport { acRemoveEditItemFilter } from '../../actions/editItemFilters';\nimport { acSetActiveModalDimension } from '../../actions/activeModalDimension';\n\nimport FilterBadge from './FilterBadge';\n\nconst styles = {\n    bar: {\n        position: 'sticky',\n        zIndex: 7,\n        padding: '8px 0',\n        display: 'flex',\n        justifyContent: 'center',\n        flexWrap: 'wrap',\n    },\n};\n\nexport class FilterBar extends Component {\n    onBadgeRemove = id => {\n        this.props.removeItemFilter(id);\n        this.props.removeEditItemFilter(id);\n    };\n\n    onBadgeClick = id => {\n        this.props.setActiveModalDimension({\n            id,\n            name: this.props.filters.find(item => item.id === id).name,\n        });\n    };\n\n    render() {\n        const { filters, userRows, classes } = this.props;\n        const top = getTopOffset(userRows) + 10;\n\n        return filters.length ? (\n            <div className={classes.bar} style={{ top }}>\n                {filters.map(filter => (\n                    <FilterBadge\n                        key={filter.id}\n                        data={filter}\n                        onClick={this.onBadgeClick}\n                        onRemove={this.onBadgeRemove}\n                    />\n                ))}\n            </div>\n        ) : null;\n    }\n}\n\nFilterBar.propTypes = {\n    filters: PropTypes.array.isRequired,\n    removeEditItemFilter: PropTypes.func.isRequired,\n    removeItemFilter: PropTypes.func.isRequired,\n    classes: PropTypes.object,\n    setActiveModalDimension: PropTypes.func,\n    userRows: PropTypes.number,\n};\n\nFilterBar.defaultProps = {\n    filters: [],\n    removeItemFIlter: Function.prototype,\n    removeEditItemFilter: Function.prototype,\n};\n\n// simplify the filters structure to:\n// [{ id: 'pe', name: 'Period', values: [{ id: 2019: name: '2019' }, {id: 'LAST_MONTH', name: 'Last month' }]}, ...]\nconst filtersSelector = createSelector(\n    [sGetItemFiltersRoot, sGetDimensions],\n    (filters, dimensions) =>\n        Object.keys(filters).reduce((arr, id) => {\n            arr.push({\n                id: id,\n                name: dimensions.find(dimension => dimension.id === id).name,\n                values: filters[id].map(value => ({\n                    id: value.id,\n                    name: value.displayName || value.name,\n                })),\n            });\n\n            return arr;\n        }, [])\n);\n\nconst mapStateToProps = state => ({\n    filters: filtersSelector(state),\n    userRows: sGetControlBarUserRows(state),\n});\n\nexport default connect(\n    mapStateToProps,\n    {\n        setActiveModalDimension: acSetActiveModalDimension,\n        removeItemFilter: acRemoveItemFilter,\n        removeEditItemFilter: acRemoveEditItemFilter,\n    }\n)(withStyles(styles)(FilterBar));\n","import React, { Fragment } from 'react';\nimport PropTypes from 'prop-types';\nimport TitleBar from '../TitleBar/TitleBar';\nimport ItemGrid from '../ItemGrid/ItemGrid';\nimport FilterBar from '../FilterBar/FilterBar';\n\nexport const DashboardContent = props => (\n    <Fragment>\n        <TitleBar edit={props.editMode} />\n        <FilterBar />\n        <ItemGrid edit={props.editMode} />\n    </Fragment>\n);\n\nDashboardContent.propTypes = {\n    editMode: PropTypes.bool,\n};\n\nexport default DashboardContent;\n","import React, { Fragment } from 'react';\nimport { connect } from 'react-redux';\nimport isEmpty from 'lodash/isEmpty';\nimport i18n from '@dhis2/d2-i18n';\nimport PropTypes from 'prop-types';\n\nimport {\n    sGetAllDashboards,\n    sDashboardsIsFetching,\n} from '../../reducers/dashboards';\nimport { sGetSelectedId } from '../../reducers/selected';\nimport DashboardsBar from '../ControlBar/DashboardsBar';\nimport DashboardVerticalOffset from './DashboardVerticalOffset';\nimport DashboardContent from './DashboardContent';\nimport NoContentMessage from '../../widgets/NoContentMessage';\n\nexport const Content = ({ hasDashboardContent, dashboardsIsEmpty }) => {\n    const msg = dashboardsIsEmpty\n        ? i18n.t(\n              'No dashboards found. Use the + button to create a new dashboard.'\n          )\n        : i18n.t('Requested dashboard not found');\n\n    return hasDashboardContent ? (\n        <DashboardContent editMode={false} />\n    ) : (\n        <NoContentMessage text={msg} />\n    );\n};\n\nContent.propTypes = {\n    dashboardsIsEmpty: PropTypes.bool,\n    hasDashboardContent: PropTypes.bool,\n};\n\nexport const ViewDashboard = ({ id, dashboardsIsEmpty, dashboardsLoaded }) => {\n    const hasDashboardContent = id && !dashboardsIsEmpty;\n    const contentNotReady = !dashboardsLoaded || id === null;\n\n    return (\n        <Fragment>\n            <DashboardsBar />\n            <DashboardVerticalOffset />\n            <div className=\"dashboard-wrapper\">\n                {contentNotReady ? null : (\n                    <Content\n                        hasDashboardContent={hasDashboardContent}\n                        dashboardsIsEmpty={dashboardsIsEmpty}\n                    />\n                )}\n            </div>\n        </Fragment>\n    );\n};\n\nViewDashboard.propTypes = {\n    dashboardsIsEmpty: PropTypes.bool,\n    dashboardsLoaded: PropTypes.bool,\n    id: PropTypes.string,\n};\n\nconst mapStateToProps = state => {\n    const dashboards = sGetAllDashboards(state);\n\n    return {\n        id: sGetSelectedId(state),\n        dashboardsIsEmpty: isEmpty(dashboards),\n        dashboardsLoaded: !sDashboardsIsFetching(state),\n    };\n};\n\nexport default connect(mapStateToProps)(ViewDashboard);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport i18n from '@dhis2/d2-i18n';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport { Button } from '@dhis2/ui-core';\n\nexport const ConfirmDeleteDialog = ({\n    dashboardName,\n    onDeleteConfirmed,\n    onContinueEditing,\n    open,\n}) => {\n    const actions = [\n        <Button key=\"cancel\" secondary onClick={onContinueEditing}>\n            {i18n.t('Cancel')}\n        </Button>,\n        <Button key=\"delete\" destructive onClick={onDeleteConfirmed}>\n            {i18n.t('Delete')}\n        </Button>,\n    ];\n\n    return (\n        <Dialog open={open} onClose={onContinueEditing}>\n            <DialogTitle style={{ fontSize: '1.25rem', fontWeight: '450' }}>\n                {i18n.t('Delete dashboard')}\n            </DialogTitle>\n            <DialogContent>\n                <DialogContentText style={{ fontSize: '0.875rem' }}>\n                    {i18n.t(\n                        'Deleting dashboard \"{{ dashboardName }}\" will remove it for all users. This action cannot be undone. Are you sure you want to permanently delete this dashboard?',\n                        { dashboardName }\n                    )}\n                </DialogContentText>\n            </DialogContent>\n            <DialogActions>{actions}</DialogActions>\n        </Dialog>\n    );\n};\n\nConfirmDeleteDialog.propTypes = {\n    dashboardName: PropTypes.string,\n    open: PropTypes.bool,\n    onContinueEditing: PropTypes.func,\n    onDeleteConfirmed: PropTypes.func,\n};\n\nexport default ConfirmDeleteDialog;\n","import React, { Component, Fragment } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { Redirect } from 'react-router-dom';\nimport i18n from '@dhis2/d2-i18n';\nimport ControlBar from './ControlBar';\nimport TranslationDialog from '@dhis2/d2-ui-translation-dialog';\nimport { Button } from '@dhis2/ui-core';\n\nimport ConfirmDeleteDialog from './ConfirmDeleteDialog';\nimport {\n    tSaveDashboard,\n    acClearEditDashboard,\n} from '../../actions/editDashboard';\nimport {\n    tDeleteDashboard,\n    acSetDashboardDisplayName,\n} from '../../actions/dashboards';\nimport {\n    sGetEditDashboardRoot,\n    sGetIsNewDashboard,\n} from '../../reducers/editDashboard';\nimport {\n    CONTROL_BAR_ROW_HEIGHT,\n    MIN_ROW_COUNT,\n    getControlBarHeight,\n} from './controlBarDimensions';\nimport { apiFetchDashboard } from '../../api/dashboards';\n\nimport classes from './styles/DashboardsBar.module.css';\n\nconst buttonBarStyle = {\n    height: CONTROL_BAR_ROW_HEIGHT,\n    paddingTop: '15px',\n    marginLeft: '15px',\n    marginRight: '15px',\n};\n\nexport class EditBar extends Component {\n    state = {\n        translationDialogIsOpen: false,\n        dashboardModel: undefined,\n        confirmDeleteDialogOpen: false,\n        redirectUrl: undefined,\n    };\n\n    onConfirmDelete = () => {\n        this.setState({ confirmDeleteDialogOpen: true });\n    };\n\n    onSave = () => {\n        this.props.onSave().then(newId => {\n            this.setState({ redirectUrl: `/${newId}` });\n        });\n    };\n\n    onDiscard = () => {\n        this.props.onDiscardChanges();\n        const redirectUrl = this.props.dashboardId\n            ? `/${this.props.dashboardId}`\n            : '/';\n        this.setState({ redirectUrl });\n    };\n\n    onContinueEditing = () => {\n        this.setState({ confirmDeleteDialogOpen: false });\n    };\n\n    onDeleteConfirmed = () => {\n        this.setState({ confirmDeleteDialogOpen: false });\n        this.props.onDelete(this.props.dashboardId).then(() => {\n            this.setState({ redirectUrl: '/' });\n        });\n    };\n\n    onTranslationsSaved = async translations => {\n        if (translations && translations.length) {\n            const dbLocale = await this.context.d2.currentUser.userSettings.get(\n                'keyDbLocale'\n            );\n\n            const translation = translations.find(\n                t => t.locale === dbLocale && t.property === 'NAME'\n            );\n\n            if (translation && translation.value) {\n                this.props.onTranslate(\n                    this.props.dashboardId,\n                    translation.value\n                );\n            }\n        }\n    };\n\n    fetchDashboardModel = () => {\n        if (this.props.dashboardId && !this.state.dashboardModel) {\n            apiFetchDashboard(this.props.dashboardId).then(dashboardModel =>\n                this.setState({ dashboardModel })\n            );\n        }\n    };\n\n    componentDidMount() {\n        this.fetchDashboardModel();\n    }\n\n    componentDidUpdate() {\n        this.fetchDashboardModel();\n    }\n\n    toggleTranslationDialog = () => {\n        this.setState({\n            translationDialogIsOpen: !this.state.translationDialogIsOpen,\n        });\n    };\n\n    confirmDeleteDialog = () =>\n        this.props.deleteAccess && this.props.dashboardId ? (\n            <ConfirmDeleteDialog\n                dashboardName={this.props.dashboardName}\n                onDeleteConfirmed={this.onDeleteConfirmed}\n                onContinueEditing={this.onContinueEditing}\n                open={this.state.confirmDeleteDialogOpen}\n            />\n        ) : null;\n\n    translationDialog = () =>\n        this.state.dashboardModel && this.state.dashboardModel.id ? (\n            <TranslationDialog\n                className=\"translation-dialog\"\n                d2={this.context.d2}\n                open={this.state.translationDialogIsOpen}\n                onRequestClose={this.toggleTranslationDialog}\n                objectToTranslate={this.state.dashboardModel}\n                fieldsToTranslate={['name', 'description']}\n                // TODO handle messages in snackbar\n                onTranslationSaved={this.onTranslationsSaved}\n                onTranslationError={err =>\n                    console.log('translation update error', err)\n                }\n            />\n        ) : null;\n\n    render() {\n        if (this.state.redirectUrl) {\n            return <Redirect to={this.state.redirectUrl} />;\n        }\n\n        const { dashboardId, deleteAccess, updateAccess } = this.props;\n        const controlBarHeight = getControlBarHeight(MIN_ROW_COUNT);\n\n        const discardBtnText = updateAccess\n            ? i18n.t('Exit without saving')\n            : i18n.t('Go to dashboards');\n\n        return (\n            <Fragment>\n                <ControlBar height={controlBarHeight} editMode={true}>\n                    <div style={buttonBarStyle}>\n                        {updateAccess ? (\n                            <div className={classes.leftControls}>\n                                <span style={{ marginRight: '15px' }}>\n                                    <Button primary onClick={this.onSave}>\n                                        {i18n.t('Save changes')}\n                                    </Button>\n                                </span>\n\n                                {dashboardId ? (\n                                    <span style={{ marginRight: '15px' }}>\n                                        <Button\n                                            onClick={\n                                                this.toggleTranslationDialog\n                                            }\n                                        >\n                                            {i18n.t('Translate')}\n                                        </Button>\n                                    </span>\n                                ) : null}\n                                {dashboardId && deleteAccess ? (\n                                    <Button onClick={this.onConfirmDelete}>\n                                        {i18n.t('Delete')}\n                                    </Button>\n                                ) : null}\n                            </div>\n                        ) : null}\n\n                        <div className={classes.rightControls}>\n                            <Button secondary onClick={this.onDiscard}>\n                                {discardBtnText}\n                            </Button>\n                        </div>\n                    </div>\n                </ControlBar>\n                {this.translationDialog()}\n                {this.confirmDeleteDialog()}\n            </Fragment>\n        );\n    }\n}\n\nEditBar.propTypes = {\n    dashboardId: PropTypes.string,\n    dashboardName: PropTypes.string,\n    deleteAccess: PropTypes.bool,\n    updateAccess: PropTypes.bool,\n    onDelete: PropTypes.func,\n    onDiscardChanges: PropTypes.func,\n    onSave: PropTypes.func,\n    onTranslate: PropTypes.func,\n};\n\nEditBar.contextTypes = {\n    d2: PropTypes.object,\n};\n\nconst mapStateToProps = state => {\n    const dashboard = sGetEditDashboardRoot(state);\n\n    let deleteAccess;\n    let updateAccess;\n    if (sGetIsNewDashboard(state)) {\n        deleteAccess = true;\n        updateAccess = true;\n    } else {\n        updateAccess = dashboard.access ? dashboard.access.update : false;\n        deleteAccess = dashboard.access ? dashboard.access.delete : false;\n    }\n\n    return {\n        dashboardId: dashboard.id,\n        dashboardName: dashboard.name,\n        deleteAccess,\n        updateAccess,\n    };\n};\n\nconst mapDispatchToProps = dispatch => ({\n    onSave: () => dispatch(tSaveDashboard()).then(id => id),\n    onDelete: id => dispatch(tDeleteDashboard(id)),\n    onDiscardChanges: () => dispatch(acClearEditDashboard()),\n    onTranslate: (id, value) => dispatch(acSetDashboardDisplayName(id, value)),\n});\n\nexport default connect(\n    mapStateToProps,\n    mapDispatchToProps\n)(EditBar);\n","import React, { Fragment, Component } from 'react';\nimport { connect } from 'react-redux';\nimport i18n from '@dhis2/d2-i18n';\nimport PropTypes from 'prop-types';\n\nimport { acSetEditDashboard } from '../../actions/editDashboard';\nimport { sGetSelectedId } from '../../reducers/selected';\nimport {\n    sGetDashboardById,\n    sGetDashboardItems,\n    sDashboardsIsFetching,\n} from '../../reducers/dashboards';\nimport DashboardVerticalOffset from './DashboardVerticalOffset';\nimport DashboardContent from './DashboardContent';\nimport EditBar from '../ControlBar/EditBar';\nimport NoContentMessage from '../../widgets/NoContentMessage';\n\nexport const Content = ({ updateAccess }) => {\n    return updateAccess ? (\n        <DashboardContent editMode={true} />\n    ) : (\n        <NoContentMessage text={i18n.t('No access')} />\n    );\n};\n\nContent.propTypes = {\n    updateAccess: PropTypes.bool,\n};\nexport class EditDashboard extends Component {\n    state = {\n        initialized: false,\n    };\n\n    initEditDashboard = () => {\n        if (this.props.dashboard) {\n            this.setState({ initialized: true });\n            this.props.setEditDashboard(this.props.dashboard, this.props.items);\n        }\n    };\n\n    componentDidMount() {\n        this.initEditDashboard();\n    }\n\n    componentDidUpdate() {\n        if (!this.state.initialized) {\n            this.initEditDashboard();\n        }\n    }\n\n    getDashboardContent = () => {\n        const contentNotReady =\n            !this.props.dashboardsLoaded || this.props.id === null;\n\n        return (\n            <div className=\"dashboard-wrapper\">\n                {contentNotReady ? null : (\n                    <Content updateAccess={this.props.updateAccess} />\n                )}\n            </div>\n        );\n    };\n\n    render() {\n        return (\n            <Fragment>\n                <EditBar />\n                <DashboardVerticalOffset editMode={true} />\n                {this.getDashboardContent()}\n            </Fragment>\n        );\n    }\n}\n\nEditDashboard.propTypes = {\n    dashboard: PropTypes.object,\n    dashboardsLoaded: PropTypes.bool,\n    id: PropTypes.string,\n    items: PropTypes.array,\n    setEditDashboard: PropTypes.func,\n    updateAccess: PropTypes.bool,\n};\n\nconst mapStateToProps = state => {\n    const id = sGetSelectedId(state);\n    const dashboard = id ? sGetDashboardById(state, id) : null;\n\n    const updateAccess =\n        dashboard && dashboard.access ? dashboard.access.update : false;\n\n    return {\n        dashboard,\n        id,\n        updateAccess,\n        items: sGetDashboardItems(state),\n        dashboardsLoaded: !sDashboardsIsFetching(state),\n    };\n};\n\nexport default connect(\n    mapStateToProps,\n    {\n        setEditDashboard: acSetEditDashboard,\n    }\n)(EditDashboard);\n","import React, { Component, Fragment } from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\n\nimport { acSetEditNewDashboard } from '../../actions/editDashboard';\nimport DashboardVerticalOffset from './DashboardVerticalOffset';\nimport EditBar from '../ControlBar/EditBar';\nimport DashboardContent from './DashboardContent';\n\nclass NewDashboard extends Component {\n    componentDidMount() {\n        this.props.setNewDashboard();\n    }\n\n    render() {\n        return (\n            <Fragment>\n                <EditBar />\n                <DashboardVerticalOffset editMode={true} />\n                <div className=\"dashboard-wrapper\">\n                    <DashboardContent editMode={true} />\n                </div>\n            </Fragment>\n        );\n    }\n}\n\nNewDashboard.propTypes = {\n    setNewDashboard: PropTypes.func,\n};\n\nexport default connect(\n    null,\n    {\n        setNewDashboard: acSetEditNewDashboard,\n    }\n)(NewDashboard);\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\n\nimport { tSelectDashboard } from '../../actions/dashboards';\nimport { sDashboardsIsFetching } from '../../reducers/dashboards';\nimport { EDIT, NEW } from './dashboardModes';\nimport ViewDashboard from './ViewDashboard';\nimport EditDashboard from './EditDashboard';\nimport NewDashboard from './NewDashboard';\n\nclass Dashboard extends Component {\n    setDashboard = () => {\n        if (this.props.dashboardsLoaded) {\n            const id = this.props.match.params.dashboardId || null;\n\n            this.props.selectDashboard(id);\n\n            this.scrollToTop();\n        }\n    };\n\n    scrollToTop = () => {\n        window.scrollTo(0, 0);\n    };\n\n    componentDidMount() {\n        this.setDashboard();\n    }\n\n    componentDidUpdate() {\n        this.setDashboard();\n    }\n\n    render() {\n        switch (this.props.mode) {\n            case EDIT:\n                return <EditDashboard />;\n            case NEW:\n                return <NewDashboard />;\n            default:\n                return <ViewDashboard />;\n        }\n    }\n}\n\nDashboard.propTypes = {\n    dashboardsLoaded: PropTypes.bool,\n    match: PropTypes.object,\n    mode: PropTypes.string,\n    selectDashboard: PropTypes.func,\n};\n\nconst mapStateToProps = state => {\n    return { dashboardsLoaded: !sDashboardsIsFetching(state) };\n};\n\nexport default connect(\n    mapStateToProps,\n    {\n        selectDashboard: tSelectDashboard,\n    }\n)(Dashboard);\n","export const EDIT = 'edit';\nexport const NEW = 'new';\nexport const VIEW = 'view';\n","import React, { Component } from 'react';\nimport { HashRouter as Router, Route, Switch } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport i18n from '@dhis2/d2-i18n';\nimport { HeaderBar } from '@dhis2/ui-widgets';\n\nimport { EDIT, VIEW, NEW } from './Dashboard/dashboardModes';\nimport { acReceivedUser } from '../actions/user';\nimport { tFetchDashboards } from '../actions/dashboards';\nimport { tSetControlBarRows } from '../actions/controlBar';\nimport { tSetDimensions } from '../actions/dimensions';\nimport Dashboard from './Dashboard/Dashboard';\nimport SnackbarMessage from './SnackbarMessage/SnackbarMessage';\n\nimport 'typeface-roboto';\nimport './App.css';\n\nexport class App extends Component {\n    componentDidMount() {\n        this.props.setCurrentUser(this.props.d2.currentUser);\n        this.props.fetchDashboards();\n        this.props.setControlBarRows();\n        this.props.setDimensions(this.props.d2);\n    }\n\n    getChildContext() {\n        return { baseUrl: this.props.baseUrl, i18n, d2: this.props.d2 };\n    }\n\n    render() {\n        return (\n            <div className=\"app-wrapper\">\n                <div className=\"dashboard-header-bar\">\n                    <HeaderBar appName={i18n.t('Dashboard')} />\n                </div>\n                <Router>\n                    <Switch>\n                        <Route\n                            exact\n                            path=\"/\"\n                            render={props => (\n                                <Dashboard {...props} mode={VIEW} />\n                            )}\n                        />\n                        <Route\n                            exact\n                            path=\"/new\"\n                            render={props => (\n                                <Dashboard {...props} mode={NEW} />\n                            )}\n                        />\n                        <Route\n                            exact\n                            path=\"/:dashboardId\"\n                            render={props => (\n                                <Dashboard {...props} mode={VIEW} />\n                            )}\n                        />\n                        <Route\n                            exact\n                            path=\"/:dashboardId/edit\"\n                            render={props => (\n                                <Dashboard {...props} mode={EDIT} />\n                            )}\n                        />\n                    </Switch>\n                </Router>\n                <SnackbarMessage />\n            </div>\n        );\n    }\n}\n\nApp.propTypes = {\n    fetchDashboards: PropTypes.func.isRequired,\n    setControlBarRows: PropTypes.func.isRequired,\n    setCurrentUser: PropTypes.func.isRequired,\n    setDimensions: PropTypes.func.isRequired,\n    baseUrl: PropTypes.string,\n    d2: PropTypes.object,\n};\n\nApp.childContextTypes = {\n    baseUrl: PropTypes.string,\n    i18n: PropTypes.object,\n    d2: PropTypes.object,\n};\n\nconst mapDispatchToProps = dispatch => {\n    return {\n        setCurrentUser: currentUser => dispatch(acReceivedUser(currentUser)),\n        fetchDashboards: () => dispatch(tFetchDashboards()),\n        setControlBarRows: () => dispatch(tSetControlBarRows()),\n        setDimensions: d2 => dispatch(tSetDimensions(d2)),\n    };\n};\n\nexport default connect(\n    null,\n    mapDispatchToProps\n)(App);\n","import { RECEIVED_USER } from '../reducers/user';\n\nexport const acReceivedUser = value => ({\n    type: RECEIVED_USER,\n    value,\n});\n","//------------------------------------------------------------------------------\n// <auto-generated>\n// This code was generated by d2-i18n-generate.\n//\n// Changes to this file may cause incorrect behavior and will be lost if\n// the code is regenerated.\n// </auto-generated>\n//------------------------------------------------------------------------------\nimport i18n from '@dhis2/d2-i18n';\nimport moment from 'moment';\nimport 'moment/locale/ar';\nimport 'moment/locale/es';\nimport 'moment/locale/fr';\nimport 'moment/locale/lo';\nimport 'moment/locale/pt';\nimport 'moment/locale/ru';\nimport 'moment/locale/sv';\nimport 'moment/locale/tg';\nimport 'moment/locale/uk';\nimport 'moment/locale/ur';\nimport 'moment/locale/vi';\nimport 'moment/locale/zh-cn';\n\nimport arTranslations from './ar/translations.json';\nimport daTranslations from './da/translations.json';\nimport enTranslations from './en/translations.json';\nimport esTranslations from './es/translations.json';\nimport frTranslations from './fr/translations.json';\nimport idTranslations from './id/translations.json';\nimport kmTranslations from './km/translations.json';\nimport loTranslations from './lo/translations.json';\nimport myTranslations from './my/translations.json';\nimport prsTranslations from './prs/translations.json';\nimport psTranslations from './ps/translations.json';\nimport ptTranslations from './pt/translations.json';\nimport pt_BRTranslations from './pt_BR/translations.json';\nimport ruTranslations from './ru/translations.json';\nimport svTranslations from './sv/translations.json';\nimport tetTranslations from './tet/translations.json';\nimport tgTranslations from './tg/translations.json';\nimport ukTranslations from './uk/translations.json';\nimport urTranslations from './ur/translations.json';\nimport viTranslations from './vi/translations.json';\nimport zhTranslations from './zh/translations.json';\nimport zh_CNTranslations from './zh_CN/translations.json';\n\nconst namespace = 'dashboards-app';\nmoment.locale('en');\n\ni18n.addResources('ar', namespace, arTranslations);\ni18n.addResources('da', namespace, daTranslations);\ni18n.addResources('en', namespace, enTranslations);\ni18n.addResources('es', namespace, esTranslations);\ni18n.addResources('fr', namespace, frTranslations);\ni18n.addResources('id', namespace, idTranslations);\ni18n.addResources('km', namespace, kmTranslations);\ni18n.addResources('lo', namespace, loTranslations);\ni18n.addResources('my', namespace, myTranslations);\ni18n.addResources('prs', namespace, prsTranslations);\ni18n.addResources('ps', namespace, psTranslations);\ni18n.addResources('pt', namespace, ptTranslations);\ni18n.addResources('pt_BR', namespace, pt_BRTranslations);\ni18n.addResources('ru', namespace, ruTranslations);\ni18n.addResources('sv', namespace, svTranslations);\ni18n.addResources('tet', namespace, tetTranslations);\ni18n.addResources('tg', namespace, tgTranslations);\ni18n.addResources('uk', namespace, ukTranslations);\ni18n.addResources('ur', namespace, urTranslations);\ni18n.addResources('vi', namespace, viTranslations);\ni18n.addResources('zh', namespace, zhTranslations);\ni18n.addResources('zh_CN', namespace, zh_CNTranslations);\n\ni18n.setDefaultNamespace(namespace);\ni18n.changeLanguage('en');\n\nexport default i18n;\n","/** @module reducers/selected */\nimport { validateReducer } from '../modules/util';\n\nexport const SET_STYLE = 'SET_STYLE';\n\nexport const DEFAULT_STATE_STYLE = 'LIST';\n\n/**\n * Reducer functions that computes and returns the new state based on the given action\n * @function\n * @param {Object} state The current state\n * @param {Object} action The action to be evaluated\n */\nconst style = (state = DEFAULT_STATE_STYLE, action) => {\n    switch (action.type) {\n        case SET_STYLE:\n            return validateReducer(action.value, DEFAULT_STATE_STYLE);\n        default:\n            return state;\n    }\n};\n\nexport default style;\n\n/**\n * Selectors that point to specific props in the state object\n * @function\n * @param {Object} state\n * @returns {Object}\n */\nexport const sGetStyleRoot = state => state.style;\n","import { combineReducers } from 'redux';\nimport arraySort from 'd2-utilizr/lib/arraySort';\n\nimport dashboards, { sGetDashboardsRoot } from './dashboards';\nimport selected from './selected';\nimport dashboardsFilter, {\n    ownerData,\n    sGetFilterName,\n    sGetFilterOrder,\n    sGetFilterOwner,\n} from './dashboardsFilter';\nimport controlBar from './controlBar';\nimport visualizations from './visualizations';\nimport editDashboard from './editDashboard';\nimport messages from './messages';\nimport user from './user';\nimport snackbar from './snackbar';\nimport itemFilters from './itemFilters';\nimport editItemFilters from './editItemFilters';\nimport style from './style';\nimport dimensions from './dimensions';\nimport settings from './settings';\nimport activeModalDimension from './activeModalDimension';\n\nconst USER = 'system';\n\n// Reducers\n\nexport default combineReducers({\n    dashboards,\n    selected,\n    dashboardsFilter,\n    controlBar,\n    visualizations,\n    messages,\n    user,\n    editDashboard,\n    itemFilters,\n    editItemFilters,\n    style,\n    snackbar,\n    dimensions,\n    settings,\n    activeModalDimension,\n});\n\n// Map constants to data\nconst mapConstToData = {\n    NAME: 'name',\n    ITEMS: 'numberOfItems',\n    CREATED: 'created',\n    OWNER: 'owner',\n};\n\n// Selectors\n\n// Filter dashboards by name\nexport const sFilterDashboardsByName = (dashboards, filter) =>\n    dashboards.filter(d =>\n        d.displayName.toLowerCase().includes(filter.toLowerCase())\n    );\n\n// Filter dashboards by owner, TODO FIXME\nexport const sFilterDashboardsByOwner = (dashboards, filter) => {\n    const ME = ownerData[1]; // TODO\n    const OTHERS = ownerData[2]; // TODO\n\n    switch (filter) {\n        case ME:\n            return dashboards.filter(d => d.owner === USER);\n        case OTHERS:\n            return dashboards.filter(d => d.owner !== USER);\n        default:\n            return dashboards;\n    }\n};\n\n// Filter dashboards by order\nexport const sFilterDashboardsByOrder = (dashboards, filter) => {\n    const filterValues = filter.split(':');\n\n    const key = filterValues[0];\n    const direction = filterValues[1];\n\n    return arraySort(dashboards, direction, mapConstToData[key]);\n};\n\n// Selectors dependency level 2\n\n// Get filtered dashboards\nexport const sGetFilteredDashboards = state => {\n    const dashboards = sGetDashboardsRoot(state);\n\n    const nameFilter = sGetFilterName(state);\n    const ownerFilter = sGetFilterOwner(state);\n    const orderFilter = sGetFilterOrder(state);\n\n    return sFilterDashboardsByOrder(\n        sFilterDashboardsByName(\n            sFilterDashboardsByOwner(dashboards, ownerFilter),\n            nameFilter\n        ),\n        orderFilter\n    );\n};\n","import { createStore, applyMiddleware, compose } from 'redux';\nimport { createLogger } from 'redux-logger';\nimport thunk from 'redux-thunk';\nimport reducer from './reducers';\n\nconst configureStore = () => {\n    const middleware = [thunk];\n\n    // Enable Redux devtools if extension is installed instead of redux-logger\n    const composeEnhancers =\n        window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\n    if (\n        !window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ &&\n        process.env.NODE_ENV !== 'production'\n    ) {\n        middleware.push(createLogger());\n    }\n\n    return createStore(\n        reducer,\n        composeEnhancers(applyMiddleware(...middleware))\n    );\n};\n\nexport default configureStore;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport { MuiThemeProvider, createMuiTheme } from '@material-ui/core/styles';\nimport { init as d2Init, config, getManifest, getUserSettings } from 'd2';\nimport dhis2theme from '@dhis2/d2-ui-core/theme/mui3.theme';\n\nimport { Provider as RuntimeProvider } from '@dhis2/app-runtime';\nimport { CssReset } from '@dhis2/ui-core';\n\nimport App from './components/App';\nimport './index.css';\nimport i18n from './locales';\nimport configureStore from './configureStore';\n\nconst muiTheme = () => createMuiTheme(dhis2theme);\n\nconst configI18n = userSettings => {\n    const uiLocale = userSettings.keyUiLocale;\n\n    if (uiLocale && uiLocale !== 'en') {\n        config.i18n.sources.add(`./i18n/i18n_module_${uiLocale}.properties`);\n    }\n\n    config.i18n.sources.add('./i18n/i18n_module_en.properties');\n    i18n.changeLanguage(uiLocale);\n};\n\nconst init = async () => {\n    const manifest = await getManifest('./manifest.webapp');\n\n    // log app info\n    console.info(\n        `Dashboards app, v${manifest.version}, ${\n            manifest.manifest_generated_at\n        }`\n    );\n\n    const isProd = process.env.NODE_ENV === 'production';\n\n    if (\n        !isProd &&\n        (!process.env.REACT_APP_DHIS2_BASE_URL ||\n            !process.env.REACT_APP_DHIS2_AUTHORIZATION)\n    ) {\n        throw new Error(\n            'Missing env variables REACT_APP_DHIS2_BASE_URL and REACT_APP_DHIS2_AUTHORIZATION'\n        );\n    }\n\n    // api config\n    const baseUrl = isProd\n        ? manifest.activities.dhis.href\n        : process.env.REACT_APP_DHIS2_BASE_URL;\n    const authorization = process.env.REACT_APP_DHIS2_AUTHORIZATION;\n\n    config.baseUrl = `${baseUrl}/api/${manifest.dhis2.apiVersion}`;\n    config.headers = isProd ? null : { Authorization: authorization };\n    config.schemas = [\n        'chart',\n        'map',\n        'report',\n        'reportTable',\n        'eventChart',\n        'eventReport',\n        'dashboard',\n        'organisationUnit',\n        'userGroup',\n    ];\n\n    getUserSettings()\n        .then(configI18n)\n        .then(() => d2Init(config))\n        .then(initializedD2 => {\n            ReactDOM.render(\n                <RuntimeProvider\n                    config={{\n                        baseUrl: baseUrl,\n                        apiVersion: manifest.dhis2.apiVersion,\n                    }}\n                >\n                    <CssReset />\n                    <Provider store={configureStore()}>\n                        <MuiThemeProvider theme={muiTheme()}>\n                            <App baseUrl={baseUrl} d2={initializedD2} />\n                        </MuiThemeProvider>\n                    </Provider>\n                </RuntimeProvider>,\n                document.getElementById('root')\n            );\n        });\n};\n\ninit();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"leftControls\":\"DashboardsBar_leftControls__2kr14\",\"rightControls\":\"DashboardsBar_rightControls__2l1lT\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"menuItem\":\"ContentMenuItem_menuItem__2DIcB\",\"launchLink\":\"ContentMenuItem_launchLink__MRANR\",\"label\":\"ContentMenuItem_label__2pIfq\",\"buttonInsert\":\"ContentMenuItem_buttonInsert__1GlZy\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"ControlBar_root__3LaTt\",\"content\":\"ControlBar_content__1r98-\",\"draghandle\":\"ControlBar_draghandle__1VWa0\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"ClearButton_button__2yjcV\",\"icon\":\"ClearButton_icon__1fqj8\"};","import isObject from 'lodash/isObject';\nimport { VIS_TYPE_COLUMN, VIS_TYPE_PIVOT_TABLE } from '@dhis2/analytics';\nimport { apiFetchFavorite, getMapFields } from '../../../api/metadata';\nimport {\n    REPORT_TABLE,\n    CHART,\n    MAP,\n    EVENT_REPORT,\n    EVENT_CHART,\n    itemTypeMap,\n} from '../../../modules/itemTypes';\nimport { getBaseUrl, getWithoutId } from '../../../modules/util';\nimport { getGridItemDomId } from '../../ItemGrid/gridUtil';\n\n//external plugins\nconst itemTypeToExternalPlugin = {\n    [MAP]: 'mapPlugin',\n    [EVENT_REPORT]: 'eventReportPlugin',\n    [EVENT_CHART]: 'eventChartPlugin',\n};\nconst hasIntegratedPlugin = type => [CHART, REPORT_TABLE].includes(type);\n\nconst getPlugin = type => {\n    if (hasIntegratedPlugin(type)) {\n        return true;\n    }\n    const pluginName = itemTypeToExternalPlugin[type];\n\n    return global[pluginName];\n};\n\nexport const THEMATIC_LAYER = 'thematic';\n\nexport const pluginIsAvailable = (item = {}, visualization = {}) => {\n    const type = visualization.activeType || item.type;\n\n    return !!getPlugin(type);\n};\n\nexport const extractFavorite = item => {\n    if (!isObject(item)) {\n        return null;\n    }\n\n    const propName = itemTypeMap[item.type].propName;\n\n    return (\n        item[propName] ||\n        (item.reportTable ||\n            item.chart ||\n            item.map ||\n            item.eventReport ||\n            item.eventChart ||\n            {})\n    );\n};\n\nexport const extractMapView = map =>\n    map.mapViews && map.mapViews.find(mv => mv.layer.includes(THEMATIC_LAYER));\n\nexport const loadPlugin = (plugin, config, credentials) => {\n    if (!(plugin && plugin.load)) {\n        return;\n    }\n\n    plugin.url = credentials.baseUrl;\n    plugin.loadingIndicator = true;\n    plugin.dashboard = true;\n    if (credentials.auth) {\n        plugin.auth = credentials.auth;\n    }\n    plugin.load(config);\n};\n\nexport const getId = item => extractFavorite(item).id;\nexport const getName = item => extractFavorite(item).name;\nexport const getDescription = item => extractFavorite(item).description;\nexport const getLink = (item, d2) => {\n    const baseUrl = getBaseUrl(d2);\n    const appUrl = itemTypeMap[item.type].appUrl(getId(item));\n\n    return `${baseUrl}/${appUrl}`;\n};\n\nexport const load = async (\n    item,\n    visualization,\n    { credentials, activeType }\n) => {\n    const config = {\n        ...visualization,\n        el: getGridItemDomId(item.id),\n    };\n\n    const type = activeType || item.type;\n    const plugin = getPlugin(type);\n\n    loadPlugin(plugin, config, credentials);\n};\n\nexport const fetch = async item => {\n    const fetchedFavorite = await apiFetchFavorite(getId(item), item.type, {\n        fields: item.type === MAP ? getMapFields() : null,\n    });\n\n    return fetchedFavorite;\n};\n\nexport const resize = item => {\n    const plugin = getPlugin(item.type);\n\n    if (plugin && plugin.resize) {\n        plugin.resize(getGridItemDomId(item.id));\n    }\n};\n\nexport const unmount = (item, activeType) => {\n    const plugin = getPlugin(activeType);\n\n    if (plugin && plugin.unmount) {\n        plugin.unmount(getGridItemDomId(item.id));\n    }\n};\n\nexport const getVisualizationConfig = (\n    visualization,\n    originalType,\n    activeType\n) => {\n    if (originalType === MAP && originalType !== activeType) {\n        const extractedMapView = extractMapView(visualization);\n\n        if (extractedMapView === undefined) {\n            return null;\n        }\n\n        return getWithoutId({\n            ...visualization,\n            ...extractedMapView,\n            mapViews: undefined,\n            type: activeType === CHART ? VIS_TYPE_COLUMN : VIS_TYPE_PIVOT_TABLE,\n        });\n    } else if (originalType === REPORT_TABLE && activeType === CHART) {\n        return getWithoutId({ ...visualization, type: VIS_TYPE_COLUMN });\n    } else if (originalType === CHART && activeType === REPORT_TABLE) {\n        return getWithoutId({\n            ...visualization,\n            type: VIS_TYPE_PIVOT_TABLE,\n        });\n    }\n\n    return getWithoutId(visualization);\n};\n","import isFunction from 'd2-utilizr/lib/isFunction';\n\nimport { orObject } from '../../modules/util';\n\n// Dimensions for the react-grid-layout\n\nexport const GRID_COMPACT_TYPE = 'vertical'; // vertical | horizonal | null\nexport const GRID_ROW_HEIGHT = 10;\nconst GRID_COLUMN_WIDTH_PX = 20;\nconst GRID_LAYOUT = 'FLEXIBLE'; // FIXED | FLEXIBLE\nexport const MARGIN = [10, 10];\n\nexport const NEW_ITEM_SHAPE = { x: 0, y: 0, w: 20, h: 29 };\nexport const ITEM_MIN_HEIGHT = 4;\n\n// Dimensions for getShape\n\nconst NUMBER_OF_ITEM_COLS = 2;\nconst GRID_COLUMNS = 60;\n\nexport const getGridColumns = () => {\n    switch (GRID_LAYOUT) {\n        case 'FLEXIBLE':\n            return GRID_COLUMNS;\n        case 'FIXED':\n            return Math.floor((window.innerWidth - 20) / GRID_COLUMN_WIDTH_PX);\n        default:\n            return GRID_COLUMNS;\n    }\n};\n\n// isNonNegativeInteger\n\nconst isNonNegativeInteger = x => Number.isInteger(x) && x >= 0;\n\n// Does the item have all the shape properties?\n\nexport const hasShape = item =>\n    isNonNegativeInteger(item.x) &&\n    isNonNegativeInteger(item.y) &&\n    isNonNegativeInteger(item.w) &&\n    isNonNegativeInteger(item.h);\n\n// returns a rectangular grid block dimensioned with x, y, w, h in grid units.\n// based on a grid with 3 items across\nexport const getShape = i => {\n    if (!isNonNegativeInteger(i)) {\n        throw new Error('Invalid grid block number');\n    }\n\n    const col = i % NUMBER_OF_ITEM_COLS;\n    const row = Math.floor(i / NUMBER_OF_ITEM_COLS);\n    const itemWidth = Math.floor((GRID_COLUMNS - 1) / NUMBER_OF_ITEM_COLS);\n    const itemHeight = GRID_ROW_HEIGHT * 2;\n\n    return {\n        x: col * itemWidth,\n        y: row * itemHeight,\n        w: itemWidth,\n        h: itemHeight,\n    };\n};\n\n/**\n * Calculates the grid item's original height in pixels based\n * on the height in grid units. This calculation\n * is copied directly from react-grid-layout GridItem.js (calcPosition)\n *\n * @param {Object} item item containing shape (x, y, w, h)\n */\nconst getOriginalHeight = item => {\n    const originalHeight = Math.round(\n        GRID_ROW_HEIGHT * item.h + Math.max(0, item.h - 1) * MARGIN[1]\n    );\n\n    return { originalHeight };\n};\n\n/**\n * Returns an array of items containing the x, y, w, h dimensions\n * and the item's originalheight in pixels\n * @function\n * @param {Array} items\n * @returns {Array}\n */\n\nexport const withShape = items =>\n    items.map((item, index) => {\n        const itemWithShape = hasShape(item)\n            ? item\n            : Object.assign({}, item, getShape(index));\n\n        return Object.assign(\n            {},\n            itemWithShape,\n            getOriginalHeight(itemWithShape)\n        );\n    });\n\nexport const getGridItemDomId = id => `item-${id}`;\n\nexport function onItemResize(id) {\n    const el = orObject(document.querySelector(`#${getGridItemDomId(id)}`));\n    if (isFunction(el.setViewportSize))\n        setTimeout(\n            () => el.setViewportSize(el.clientWidth - 5, el.clientHeight - 5),\n            10\n        );\n}\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"showMoreButton\":\"CategorizedMenuGroup_showMoreButton__3-0Wa\"};"],"sourceRoot":""}
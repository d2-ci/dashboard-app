{"version":3,"sources":["components/Item/ListItem/Item.module.css","reducers/user.js","reducers/dashboards.js","reducers/selected.js","reducers/visualizations.js","api/metadata.js","api/index.js","api/dashboards.js","components/ItemGrid/gridUtil.js","reducers/messages.js","api/messages.js","reducers/snackbar.js","actions/snackbar.js","components/SnackbarMessage/SnackbarMessage.js","components/Item/VisualizationItem/plugin.js","actions/selected.js","api/localStorage.js","components/Item/MessagesItem/actions.js","reducers/editDashboard.js","reducers/editItemFilters.js","reducers/itemFilters.js","actions/itemFilters.js","actions/editItemFilters.js","api/editDashboard.js","actions/editDashboard.js","actions/dashboards.js","reducers/controlBar.js","api/controlBar.js","actions/controlBar.js","reducers/dimensions.js","reducers/settings.js","actions/dimensions.js","components/ControlBar/ShowMoreButton.js","components/ControlBar/controlBarDimensions.js","components/ControlBar/ControlBar.js","icons/Star.js","api/dataStatistics.js","components/ControlBar/DashboardItemChip.js","icons/AddCircle.js","icons/Clear.js","components/ControlBar/ClearButton.js","reducers/dashboardsFilter.js","components/ControlBar/Filter.js","components/ControlBar/DashboardsBar.js","actions/dashboardsFilter.js","components/Dashboard/DashboardVerticalOffset.js","components/ItemSelector/HeaderMenuItem.js","icons/Launch.js","components/ItemSelector/ContentMenuItem.js","components/ItemSelector/selectableItems.js","components/ItemSelector/CategorizedMenuGroup.js","components/ItemSelector/actions.js","components/ItemSelector/SinglesMenuGroup.js","components/ItemSelector/ItemSelector.js","components/TitleBar/EditTitleBar.js","components/ItemFilter/FilterDialog.js","reducers/activeModalDimension.js","actions/activeModalDimension.js","components/ItemFilter/FilterSelector.js","components/TitleBar/Info.js","components/TitleBar/ViewTitleBar.js","components/TitleBar/TitleBar.js","components/Item/VisualizationItem/DefaultPlugin.js","components/Item/ItemHeader.js","components/Item/VisualizationItem/ItemFooter.js","components/Item/ItemHeaderButton.js","components/Item/VisualizationItem/ItemHeaderButtons.js","modules/memoizeOne.js","components/Item/VisualizationItem/Item.js","widgets/Line.js","components/Item/MessagesItem/Item.js","components/Item/NotSupportedItem/Item.js","icons/Description.js","icons/Delete.js","components/Item/ListItem/Item.js","components/Item/ListItem/actions.js","components/Item/TextItem/Item.js","components/Item/AppItem/Item.js","components/Item/SpacerItem/Item.js","components/Item/Item.js","components/ItemGrid/DeleteItemButton.js","widgets/NoContentMessage.js","components/Item/ProgressiveLoadingContainer.js","components/ItemGrid/ItemGrid.js","components/FilterBar/FilterBadge.js","components/FilterBar/FilterBar.js","components/Dashboard/DashboardContent.js","components/Dashboard/ViewDashboard.js","components/ControlBar/ConfirmDeleteDialog.js","components/ControlBar/EditBar.js","components/Dashboard/EditDashboard.js","components/Dashboard/NewDashboard.js","components/Dashboard/Dashboard.js","components/Dashboard/dashboardModes.js","components/App.js","actions/user.js","locales/index.js","reducers/style.js","reducers/index.js","configureStore.js","index.js","components/ControlBar/styles/DashboardsBar.module.css","components/ItemSelector/styles/ContentMenuItem.module.css","modules/util.js","components/ControlBar/styles/ControlBar.module.css","components/ControlBar/styles/ClearButton.module.css","components/ItemSelector/styles/CategorizedMenuGroup.module.css","modules/itemTypes.js"],"names":["module","exports","list","item","itemicon","link","deleteicon","deletebutton","DEFAULT_STATE_USER","id","username","uiLocale","isSuperuser","sGetUserUsername","state","user","DEFAULT_STATE_DASHBOARDS","byId","items","updateDashboardProp","dashboardId","prop","value","Object","objectSpread","defineProperty","sGetDashboardsRoot","dashboards","sGetDashboardById","orObject","sDashboardsIsFetching","sGetAllDashboards","sGetDashboardItems","sGetStarredDashboards","values","filter","dashboard","starred","sGetUnstarredDashboards","sGetDashboardsSortedByStarred","concat","toConsumableArray","arraySort","getCustomDashboards","data","arrayFrom","map","d","index","name","displayName","description","displayDescription","favorite","owner","created","split","join","substr","lastUpdated","access","numberOfItems","orArray","dashboardItems","length","type","isSpacerType","SPACER","text","isTextType","emptyTextItemContent","combineReducers","arguments","undefined","action","validateReducer","isLoading","showDescription","sGetSelectedRoot","selected","sGetSelectedId","sGetSelectedIsLoading","sGetSelectedShowDescription","DEFAULT_STATE_VISUALIZATIONS","isEmpty","p","sGetVisualization","visualizations","sGetVisualizationsRoot","getIdNameFields","rename","getDimensionFields","_ref2","withItems","arrayClean","getAxesFields","_ref3","getFavoriteFields","_ref4","withDimensions","withOptions","getFavoritesFields","_ref5","apiFetchFavorite","_ref6","fields","getInstance","then","d2","Api","getApi","get","getEndPointName","onError","error","console","log","getDashboardItemsFields","withFavorite","getDashboardFields","apiFetchDashboard","models","catch","apiStarDashboard","isStarred","url","post","delete","apiDeleteDashboard","MARGIN","NEW_ITEM_SHAPE","x","y","w","h","isNonNegativeInteger","Number","isInteger","hasShape","withShape","itemWithShape","assign","i","Error","col","row","Math","floor","itemWidth","GRID_ROW_HEIGHT","getShape","originalHeight","round","max","getOriginalHeight","getGridItemDomId","onItemResize","el","document","querySelector","isFunction","setViewportSize","setTimeout","clientWidth","clientHeight","sGetMessagesRoot","messages","getMessages","DEFAULT_STATE_SNACKBAR","message","duration","open","acCloseSnackbar","loadingDashboardMsg","SnackbarMessageContent","_ref","react_default","a","createElement","style","fontWeight","connect","_sGetSnackbar","snackbar","sGetSnackbar","snackbarOpen","snackbarMessage","snackbarDuration","onCloseSnackbar","props","Snackbar_default","zIndex","SnackbarMessage_SnackbarMessageContent","autoHideDuration","onClose","pluginIsAvailable","activeType","getPlugin","extractFavorite","isObject","REPORT_TABLE","reportTable","CHART","chart","MAP","EVENT_REPORT","eventReport","EVENT_CHART","eventChart","loadPlugin","plugin","config","credentials","load","baseUrl","loadingIndicator","auth","getId","getName","getLink","getBaseUrl","appUrl","itemTypeMap","asyncToGenerator","regenerator_default","mark","_callee","visualization","_args","wrap","_context","prev","next","stop","_x","_x2","_x3","_x4","apply","this","fetch","_callee2","fetchedFavorite","_context2","sent","abrupt","_x5","resize","unmount","getVisualizationConfig","originalType","extractedMapView","mapViews","find","mv","layer","includes","getWithoutId","acSetSelectedId","acSetSelectedIsLoading","acReceivedVisualization","tLoadDashboard","dispatch","getState","dash","acAppendDashboards","Promise","resolve","t0","tSetSelectedDashboardById","snackbarTimeout","onSuccess","dashboardName","customDashboard","acSetDashboardItems","localStorage","setItem","forEach","MESSAGES","messageConversations","clearTimeout","DEFAULT_STATE_EDIT_DASHBOARD","NEW_DASHBOARD_STATE","sGetEditDashboardRoot","editDashboard","sGetIsEditing","sGetEditDashboardItems","DEFAULT_STATE_EDIT_ITEM_FILTERS","sGetEditItemFiltersRoot","editItemFilters","DEFAULT_STATE_ITEM_FILTERS","sGetItemFiltersRoot","itemFilters","sGetFiltersKeys","keys","acRemoveItemFilter","acRemoveEditItemFilter","saveDashboard","width","height","save","msg","response","uid","updateDashboard","postDashboard","create","acAddDashboardItem","itemPropName","propName","generateUid","content","acUpdateDashboardItem","acRemoveDashboardItem","arrayToIdMap","acSetDashboardStarred","tFetchDashboards","collection","paging","toArray","userRows","sGetControlBarUserRows","controlBar","sGetControlBarRoot","KEY","hasNamespace","currentUser","dataStore","has","getNamespace","apiGetControlBarRows","_callee3","namespace","_context3","t1","t2","key","apiPostControlBarRows","_callee4","rows","_context4","set","acSetControlBarUserRows","DEFAULT_DIMENSIONS","pe","FIXED_DIMENSIONS","ou","sGetDimensions","dimensions","DEFAULT_SETTINGS","keyDateFormat","keyAnalysisRelativePeriod","keyAnalysisDigitGroupSeparator","displayNameProperty","rootOrganisationUnit","sGetSettings","settings","sGetSettingsDisplayNameProperty","acSetDimensions","keyBy","sortBy","toLowerCase","styles","showMore","color","colors","grey700","cursor","fontSize","paddingTop","&:hover","textDecoration","disabled","grey500","withStyles","onClick","isMaxHeight","classes","textAlign","className","i18n","t","MIN_ROW_COUNT","getRowsHeight","getNumRowsFromHeight","FIRST_ROW_PADDING_HEIGHT","getTopOffset","getControlBarHeight","ControlBar","_this","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","onStartDrag","setState","dragging","window","addEventListener","onDrag","onEndDrag","event","preventDefault","stopPropagation","newHeight","clientY","onChangeHeight","requestAnimationFrame","removeEventListener","draghandle","onMouseDown","rootStyle","top","backgroundColor","editMode","yellow050","white","paddingBottom","transition","root","children","renderDragHandle","React","Component","defaultProps","StarIcon","xmlns","viewBox","fill","apiPostDataStatistics","eventType","chip","margin","grey600","display","verticalAlign","icon","marginTop","unselected","label","chipProps","selectedState","Star","Link","to","debounce","Chip","AddCircleIcon","teal600","ClearIcon","grey800","ClearButton","onClear","button","Clear","ownerData","DEFAULT_STATE_DASHBOARDS_FILTER_NAME","DEFAULT_STATE_DASHBOARDS_FILTER_OWNER","order","sGetDashboardsFilterRoot","dashboardsFilter","sGetFilterName","KEYCODE_ENTER","KEYCODE_ESCAPE","filterField","searchIcon","Filter","_Component","setFilterValue","onChangeName","target","handleKeyUp","keyCode","onKeypressEnter","inherits","createClass","nextProps","_this$props","startAdornment","InputAdornment_default","position","Search_default","endAdornment","ControlBar_ClearButton","Input_default","placeholder","onChange","onKeyUp","Function","prototype","MAX_ROW_COUNT","DashboardsBar","_getPrototypeOf2","_len","args","Array","_key","setInitialDashboardState","adjustedHeight","newRows","newRowCount","min","onToggleMaxHeight","onSelectDashboard","history","push","selectedId","onChangeFilterName","rowCount","controlBarHeight","contentWrapperStyle","padding","overflowY","components_ControlBar_ControlBar","leftControls","marginRight","AddCircle","ControlBar_Filter","ControlBar_DashboardItemChip","ControlBar_ShowMoreButton","mapDispatchToProps","withRouter","stateProps","dispatchProps","ownProps","displayDashboards","HeaderMenuItem","title","MenuItem","dense","LaunchIcon","LaunchLink","e","launchLink","rel","href","Launch","InsertButton","buttonInsert","ContentMenuItem","onInsert","ItemIcon","getItemIcon","menuItem","ContentMenuItem_LaunchLink","ContentMenuItem_InsertButton","singleItems","header","TEXT","spacerContent","categorizedItems","USERS","REPORTS","RESOURCES","APP","listItemTypes","CategorizedMenuGroup","addItem","tAddListItemContent","newItem","toggleSeeMore","seeMore","onChangeItemsLimit","_this2","_this$props2","hasMore","react","ItemSelector_HeaderMenuItem","itemUrl","getItemUrl","context","ItemSelector_ContentMenuItem","showMoreButton","Divider","contextTypes","PropTypes","object","isRequired","dashboardItem","listItemType","dashboardItemIndex","findIndex","category","addToDashboard","ItemSearchField","InputField","filled","onFocus","ItemSelector","closeList","openList","fetchItems","anchorEl","currentTarget","setFilter","getCategorizedMenuGroups","itemType","endPointName","allItems","maxOptions","slice","ItemSelector_CategorizedMenuGroup","pluralTitle","getSinglesMenuGroups","ItemSelector_SinglesMenuGroup","getMenuGroups","queryString","add","Set","ItemSelector_ItemSearchField","Popover_default","anchorOrigin","horizontal","vertical","transformOrigin","PaperProps","disableAutoFocus","disableRestoreFocus","Menu","EditTitleBar","onChangeTitle","onChangeDescription","section","titleDescription","TextField_default","variant","multiline","InputProps","input","underline","itemSelector","components_ItemSelector_ItemSelector","selectedDashboard","justifyContent","flex","clear","&::before","borderBottom","&:hover::before","borderRadius","peId","ouId","FilterDialog","onConfirm","dimension","selectedItems","dialogId","commonProps","onSelect","onDeselect","onReorder","build","selectedPeriods","ouItems","dialogTitle","Dialog_default","maxWidth","disableEnforceFocus","dialogContent","DialogActions_default","Button","kind","DEFAULT_STATE_ACTIVE_MODAL_DIMENSION","sGetActiveModalDimension","activeModalDimension","acSetActiveModalDimension","FilterSelector","openPanel","closePanel","closeDialog","clearActiveModalDimension","selectDimension","setActiveModalDimension","onSelectItems","dimensionId","setEditItemFilters","onDeselectItems","itemIdsToRemove","newList","removeEditItemFilter","onReorderItems","itemIds","oldList","reorderedList","saveFilter","filterItems","addItemFilter","removeItemFilter","theme","selectedDimensions","ArrowDropDown_default","Boolean","fontFamily","typography","onDimensionClick","selectedIds","ItemFilter_FilterDialog","filters","withTheme","Info","show","toggle","InfoOutlined_default","NO_DESCRIPTION","actions","alignItems","marginLeft","starIcon","textButton","minWidth","editLink","titleBar","titleBarIcon","ViewTitleBar","toggleSharingDialog","sharingDialogIsOpen","onStarClick","onInfoClick","titleStyle","userSelect","StarBorder","TitleBar_Info","update","manage","ItemFilter_FilterSelector","d2_ui_sharing_dialog_default","onRequestClose","tStarDashboard","black","TitleBar","edit","TitleBar_EditTitleBar","TitleBar_ViewTitleBar","DefaultPlugin","pluginCredentials","shouldPluginReload","prevProps","reloadAllowed","filtersChanged","vis","prevVis","visChanged","reloadPlugin","pluginManager","currentVis","useActiveType","getActiveType","defaultHeaders","Authorization","textDiv","HEADER_HEIGHT","ItemHeader","actionButtons","scrollContainer","line","border","grey100","ItemFooter","objectId","d2_ui_interpretations_default","appName","ItemHeaderButton","iconBase","buttonBase","buttonDisabled","opacity","toggleFooterPadding","grey200","baseStyle","container","disabledStyle","activeStyle","primary800","primary100","inactiveStyle","getItemTypeId","visualizationType","domainType","VisualizationItemHeaderButtons","onSelectVisualization","activeFooter","onToggleFooter","toggleFooterBase","toggleFooter","VISUALIZATION_TYPE_CHART","match","tableButtonStyle","tableBtnStyle","chartButtonStyle","chartBtnStyle","mapButtonStyle","mapBtnStyle","components_Item_ItemHeaderButton","Message_default","VISUALIZATION_TYPE_TABLE","ViewList_default","InsertChart_default","DOMAIN_TYPE_AGGREGATE","VISUALIZATION_TYPE_MAP","Public_default","memoizeOne","fn","lastArgs","lastValue","every","arg","overflow","textOverflow","whiteSpace","fontStretch","lineHeight","applyFilters","visRows","obj","visColumns","columns","visFilters","dimensionFound","dimensionObjects","Item","showFooter","configLoaded","getUniqueKey","uniqueId","getPluginComponent","getContentStyle","data_visualizer_plugin_build","forDashboard","VisualizationItem_DefaultPlugin","onToggleItemExpanded","getTitle","itemName","Launch_default","getActionButtons","ItemHeaderButtons","contentRef","offsetHeight","createRef","_componentDidMount","onVisualizationLoaded","_this$props3","Item_ItemHeader","ref","VisualizationItem_ItemFooter","acReceivedActiveVisualization","Line","PRIVATE","messageTypes","_messageTypes","listStyleType","paddingLeft","seeAll","marginBottom","sender","snippet","maxHeight","MessagesItem","getMessageHref","msgIdentifier","messageType","getMessageSender","latestMsg","getMessageItems","editClass","readClass","read","msgDate","location","messageCount","formatDate","userSettings","widgets_Line","string","MessagesContainer","NotSupportedItem","NotInterested_default","align","DescriptionIcon","DeleteIcon","red500","getItemTitle","removeContent","handler","contentToRemove","ListItem","tRemoveListItemContent","contentItems","array","getContentItems","contentItem","Description","deleteButton","Delete","grey900","newContent","textField","onChangeText","updatedItem","d2_ui_rich_text","onEdit","fullWidth","textDivStyle","viewItem","getIframeSrc","appDetails","iframeSrc","launchUrl","ouIds","ouPath","AppItem","appKey","system","installedApps","app","src","SpacerItem","GridItem","VisualizationItem","TextItem","getGridItem","right","DeleteItemHeaderButton","Delete_default","NoContentMessage","ProgressiveLoadingContainer","shouldLoad","containerRef","shouldLoadHandler","bufferPx","bufferFactor","innerHeight","rect","getBoundingClientRect","bottom","removeHandler","checkShouldLoad","debounceMs","registerHandler","_this3","objectWithoutProperties","ItemGrid","expandedItems","clickedId","isExpanded","onRemoveItem","onLayoutChange","newLayout","acUpdateDashboardLayout","onResizeStop","layout","oldItem","isPluginType","pluginResize","onRemoveItemWrapper","widgets_NoContentMessage","expandedItem","hProp","minH","ScreenCover","CircularProgress","react_grid_layout_default","cols","rowHeight","innerWidth","compactType","isDraggable","isResizable","draggableCancel","itemClassNames","Item_ProgressiveLoadingContainer","DeleteItemButton","Item_Item_Item","validItems","badgeContainer","badge","badgeRemove","FilterBadge","onRemove","count","FilterBar","onBadgeRemove","onBadgeClick","bar","FilterBar_FilterBadge","removeItemFIlter","filtersSelector","createSelector","reduce","arr","flexWrap","DashboardContent","components_TitleBar_TitleBar","components_FilterBar_FilterBar","components_ItemGrid_ItemGrid","Content","hasDashboardContent","dashboardsIsEmpty","Dashboard_DashboardContent","dashboardsLoaded","contentNotReady","ControlBar_DashboardsBar","Dashboard_DashboardVerticalOffset","ViewDashboard_Content","ConfirmDeleteDialog","onDeleteConfirmed","onContinueEditing","secondary","destructive","DialogTitle_default","DialogContent_default","DialogContentText_default","buttonBarStyle","EditBar","translationDialogIsOpen","dashboardModel","confirmDeleteDialogOpen","redirectUrl","onConfirmDelete","onSave","newId","onDiscard","onDiscardChanges","onDelete","onTranslationsSaved","translations","dbLocale","translation","locale","property","onTranslate","fetchDashboardModel","toggleTranslationDialog","confirmDeleteDialog","deleteAccess","ControlBar_ConfirmDeleteDialog","translationDialog","d2_ui_translation_dialog_default","objectToTranslate","fieldsToTranslate","onTranslationSaved","onTranslationError","err","Redirect","updateAccess","discardBtnText","primary","rightControls","sGetIsNewDashboard","dashboardToSave","_x6","_x7","tDeleteDashboard","acSetDashboardDisplayName","EditDashboard","initialized","initEditDashboard","setEditDashboard","getDashboardContent","EditDashboard_Content","ControlBar_EditBar","NewDashboard","setNewDashboard","Dashboard","setDashboard","params","selectDashboard","scrollToTop","scrollTo","mode","Dashboard_EditDashboard","Dashboard_NewDashboard","Dashboard_ViewDashboard","dashboardToSelect","preferredId","getItem","App","setCurrentUser","fetchDashboards","setControlBarRows","setDimensions","HeaderBar_default","HashRouter","Switch","Route","exact","path","render","components_Dashboard_Dashboard","components_SnackbarMessage_SnackbarMessage","childContextTypes","controlBarRows","displayNameProp","filteredDimensions","apiFetchDimensions","dim","dimensionType","dataDimensionType","tSetDimensions","moment","addResources","enTranslations","loTranslations","ruTranslations","svTranslations","urTranslations","viTranslations","setDefaultNamespace","changeLanguage","objectClean","conversations","$merge","d2Object","keyUiLocale","authorities","newState","k","$unshift","idToRemove","$splice","stateItems","newStateItems","stateItem","si","$set","configureStore","middleware","thunk","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","createStore","reducer","applyMiddleware","dhis2theme","palette","dark","configI18n","sources","manifest","isProd","getManifest","info","version","manifest_generated_at","process","activities","dhis","dhis2","apiVersion","headers","schemas","getUserSettings","d2Init","initializedD2","ReactDOM","es","store","createMuiTheme","src_components_App","getElementById","init","param","isArray","global","Intl","DateTimeFormat","year","month","day","format","Date","replace","defaultValue","api","idx","indexOf","_home_travis_build_dhis2_dashboards_app_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectSpread__WEBPACK_IMPORTED_MODULE_0__","hasOwnProperty","pluginName","_itemTypeMap","_home_travis_build_dhis2_dashboards_app_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_defineProperty__WEBPACK_IMPORTED_MODULE_0__","TableIcon","ChartIcon","MapIcon","ExtensionIcon","PersonIcon","FontDownloadIcon","EmailIcon","CropFreeIcon","NotInterestedIcon"],"mappings":"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","file":"static/js/main.a643b7b2.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"Item_list__2oHc1\",\"item\":\"Item_item__lO40M\",\"itemicon\":\"Item_itemicon__dv5ah\",\"link\":\"Item_link__2gULT\",\"deleteicon\":\"Item_deleteicon__3c7bl\",\"deletebutton\":\"Item_deletebutton__1DfY5\"};","export const RECEIVED_USER = 'RECEIVED_USER';\n\nexport const DEFAULT_STATE_USER = {\n    id: '',\n    username: '',\n    uiLocale: '',\n    isSuperuser: false,\n};\n\nexport default (state = DEFAULT_STATE_USER, action) => {\n    switch (action.type) {\n        case RECEIVED_USER: {\n            return fromD2ToUserObj(action.value);\n        }\n        default:\n            return state;\n    }\n};\n\nfunction fromD2ToUserObj(d2Object) {\n    return {\n        id: d2Object.id,\n        username: d2Object.username,\n        uiLocale: d2Object.settings.keyUiLocale,\n        isSuperuser: d2Object.authorities.has('ALL'),\n    };\n}\n\n// selectors\n\nexport const sGetUserId = state => state.user.id;\nexport const sGetUserUsername = state => state.user.username;\nexport const sGetIsSuperuser = state => state.user.isSuperuser;\nexport const sGetUiLocale = state => state.user.uiLocale;\n","/** @module reducers/dashboards */\n\nimport arrayFrom from 'd2-utilizr/lib/arrayFrom';\nimport arraySort from 'd2-utilizr/lib/arraySort';\n\nimport { orArray, orObject } from '../modules/util';\nimport {\n    SPACER,\n    isSpacerType,\n    isTextType,\n    emptyTextItemContent,\n} from '../modules/itemTypes';\n\nexport const SET_DASHBOARDS = 'SET_DASHBOARDS';\nexport const ADD_DASHBOARDS = 'ADD_DASHBOARDS';\nexport const SET_DASHBOARD_STARRED = 'SET_DASHBOARD_STARRED';\nexport const SET_DASHBOARD_DISPLAY_NAME = 'SET_DASHBOARD_DISPLAY_NAME';\nexport const SET_DASHBOARD_ITEMS = 'SET_DASHBOARD_ITEMS';\n\nexport const DEFAULT_STATE_DASHBOARDS = {\n    byId: null,\n    items: [],\n};\n\n// reducer helper functions\n\nconst updateDashboardProp = (state, dashboardId, prop, value) => ({\n    byId: {\n        ...state.byId,\n        [dashboardId]: {\n            ...state.byId[dashboardId],\n            [prop]: value,\n        },\n    },\n    items: state.items,\n});\n\n/**\n * Reducer that computes and returns the new state based on the given action\n * @function\n * @param {Object} state The current state\n * @param {Object} action The action to be evaluated\n * @returns {Object}\n */\nexport default (state = DEFAULT_STATE_DASHBOARDS, action) => {\n    switch (action.type) {\n        case SET_DASHBOARDS: {\n            return {\n                byId: action.value,\n                items: [],\n            };\n        }\n        case ADD_DASHBOARDS: {\n            return {\n                ...state,\n                byId: {\n                    ...state.byId,\n                    ...action.value,\n                },\n            };\n        }\n        case SET_DASHBOARD_STARRED: {\n            return updateDashboardProp(\n                state,\n                action.dashboardId,\n                'starred',\n                action.value\n            );\n        }\n        case SET_DASHBOARD_DISPLAY_NAME: {\n            return updateDashboardProp(\n                state,\n                action.dashboardId,\n                'displayName',\n                action.value\n            );\n        }\n        case SET_DASHBOARD_ITEMS: {\n            return {\n                ...state,\n                items: action.value,\n            };\n        }\n        default:\n            return state;\n    }\n};\n\n// root selector\n\nexport const sGetDashboardsRoot = state => state.dashboards;\n\n// selector level 1\n\n/**\n * Selector which returns a dashboard by id from the state object\n * If no matching dashboard is found it returns undefined\n * If dashboards.byId is null, then the dashboards api request\n * has not yet completed. If dashboards.byId is an empty object\n * then the dashboards api request is complete, but no dashboards\n * were returned\n *\n * @function\n * @param {Object} state The current state\n * @param {Number} id The id of the dashboard\n * @returns {Object | undefined}\n */\nexport const sGetDashboardById = (state, id) =>\n    orObject(sGetDashboardsRoot(state).byId)[id];\n\nexport const sDashboardsIsFetching = state => {\n    return sGetDashboardsRoot(state).byId === null;\n};\n\n/**\n * Selector which returns all dashboards (the byId object)\n *\n * @function\n * @param {Object} state The current state\n * @returns {Object | undefined}\n */\nexport const sGetAllDashboards = state =>\n    orObject(sGetDashboardsRoot(state).byId);\n\n/**\n * Selector which returns the current dashboard items\n *\n * @function\n * @param {Object} state The current state\n * @returns {Array}\n */\nexport const sGetDashboardItems = state => sGetDashboardsRoot(state).items;\n\n// selector level 2\n\nexport const sGetStarredDashboards = state =>\n    Object.values(sGetAllDashboards(state)).filter(\n        dashboard => dashboard.starred === true\n    );\n\nexport const sGetUnstarredDashboards = state =>\n    Object.values(sGetAllDashboards(state)).filter(\n        dashboard => dashboard.starred === false\n    );\n\n// selector level 3\n\nexport const sGetStarredDashboardIds = state => {\n    return sGetStarredDashboards(state).map(dashboard => dashboard.id);\n};\n\nexport const sGetUnstarredDashboardIds = state =>\n    sGetUnstarredDashboards(state).map(dashboard => dashboard.id);\n\nexport const sGetDashboardsSortedByStarred = state => [\n    ...arraySort(sGetStarredDashboards(state), 'ASC', 'displayName'),\n    ...arraySort(sGetUnstarredDashboards(state), 'ASC', 'displayName'),\n];\n\n// utils\n\n/**\n * Returns the array of dashboards, customized for ui\n * @function\n * @param {Array} data The original dashboard list\n * @returns {Array}\n */\nexport const getCustomDashboards = data => {\n    const uiItems = items =>\n        items.map(item => {\n            const type = isSpacerType(item) ? SPACER : item.type;\n            const text = isTextType(item)\n                ? item.text === emptyTextItemContent\n                    ? ''\n                    : item.text\n                : null;\n\n            return {\n                ...item,\n                ...(text !== null ? { text } : {}),\n                type,\n            };\n        });\n\n    return arrayFrom(data).map((d, index) => ({\n        id: d.id,\n        name: d.name,\n        displayName: d.displayName,\n        description: d.description,\n        displayDescription: d.displayDescription,\n        starred: d.favorite,\n        owner: d.user.name,\n        created: d.created\n            .split('T')\n            .join(' ')\n            .substr(0, 16),\n        lastUpdated: d.lastUpdated\n            .split('T')\n            .join(' ')\n            .substr(0, 16),\n        access: d.access,\n        numberOfItems: orArray(d.dashboardItems).length,\n        dashboardItems: uiItems(d.dashboardItems),\n    }));\n};\n","/** @module reducers/selected */\nimport { combineReducers } from 'redux';\n\nimport { validateReducer } from '../modules/util';\n\nexport const SET_SELECTED_ID = 'SET_SELECTED_ID';\nexport const SET_SELECTED_ISLOADING = 'SET_SELECTED_ISLOADING';\nexport const SET_SELECTED_SHOWDESCRIPTION = 'SET_SELECTED_SHOWDESCRIPTION';\n\nexport const DEFAULT_STATE_SELECTED_ID = null;\nexport const DEFAULT_STATE_SELECTED_ISLOADING = false;\nexport const DEFAULT_STATE_SELECTED_SHOWDESCRIPTION = false;\n\n/**\n * Reducer functions that computes and returns the new state based on the given action\n * @function\n * @param {Object} state The current state\n * @param {Object} action The action to be evaluated\n */\nconst id = (state = DEFAULT_STATE_SELECTED_ID, action) => {\n    switch (action.type) {\n        case SET_SELECTED_ID:\n            return validateReducer(action.value, DEFAULT_STATE_SELECTED_ID);\n        default:\n            return state;\n    }\n};\n\nconst isLoading = (state = DEFAULT_STATE_SELECTED_ISLOADING, action) => {\n    switch (action.type) {\n        case SET_SELECTED_ISLOADING:\n            return validateReducer(\n                action.value,\n                DEFAULT_STATE_SELECTED_ISLOADING\n            );\n        default:\n            return state;\n    }\n};\n\nconst showDescription = (\n    state = DEFAULT_STATE_SELECTED_SHOWDESCRIPTION,\n    action\n) => {\n    switch (action.type) {\n        case SET_SELECTED_SHOWDESCRIPTION:\n            return validateReducer(\n                action.value,\n                DEFAULT_STATE_SELECTED_SHOWDESCRIPTION\n            );\n        default:\n            return state;\n    }\n};\n\nexport default combineReducers({\n    id,\n    isLoading,\n    showDescription,\n});\n\n// Selectors\n\nexport const sGetSelectedRoot = state => state.selected;\n\nexport const sGetSelectedId = state => sGetSelectedRoot(state).id;\n\nexport const sGetSelectedIsLoading = state => sGetSelectedRoot(state).isLoading;\n\nexport const sGetSelectedShowDescription = state =>\n    sGetSelectedRoot(state).showDescription;\n","import { orObject } from '../modules/util';\nimport objectClean from 'd2-utilizr/lib/objectClean';\n\n/** @module reducers/visualizations */\n\nexport const RECEIVED_VISUALIZATION = 'RECEIVED_VISUALIZATION';\nexport const RECEIVED_ACTIVE_VISUALIZATION = 'RECEIVED_ACTIVE_VISUALIZATION';\n\nexport const DEFAULT_STATE_VISUALIZATIONS = {};\n\nconst isEmpty = p => p === undefined || p === null;\n\nexport default (state = DEFAULT_STATE_VISUALIZATIONS, action) => {\n    switch (action.type) {\n        case RECEIVED_VISUALIZATION: {\n            return {\n                ...state,\n                [action.value.id]: objectClean(\n                    {\n                        ...orObject(state[action.value.id]),\n                        ...action.value,\n                    },\n                    isEmpty\n                ),\n            };\n        }\n        case RECEIVED_ACTIVE_VISUALIZATION: {\n            return {\n                ...state,\n                [action.id]: objectClean(\n                    {\n                        ...orObject(state[action.id]),\n                        activeType: action.activeType,\n                    },\n                    isEmpty\n                ),\n            };\n        }\n        default:\n            return state;\n    }\n};\n\n// root selector\nexport const sGetVisualizationsRoot = state => state.visualizations;\n\n// selectors level 1\nexport const sGetVisualization = (state, id) => {\n    return sGetVisualizationsRoot(state)[id];\n};\n","import { getInstance } from 'd2';\nimport arrayClean from 'd2-utilizr/lib/arrayClean';\n\nimport { getEndPointName } from '../modules/itemTypes';\n\n// Id, name\nexport const getIdNameFields = ({ rename } = {}) => [\n    'id',\n    `${rename ? 'displayName~rename(name)' : 'name,displayName'}`,\n];\n\n// Item\nexport const getItemFields = () => [\n    'dimensionItem~rename(id)',\n    'displayName~rename(name)',\n    'dimensionItemType',\n];\n\n// Dimension\nexport const getDimensionFields = ({ withItems }) =>\n    arrayClean([\n        'dimension',\n        'legendSet[id]',\n        'filter',\n        withItems ? `items[${getItemFields().join(',')}]` : ``,\n    ]);\n\n// Axis\nexport const getAxesFields = ({ withItems }) => [\n    `columns[${getDimensionFields({ withItems }).join(',')}]`,\n    `rows[${getDimensionFields({ withItems }).join(',')}]`,\n    `filters[${getDimensionFields({ withItems }).join(',')}]`,\n];\n\n// Favorite\nexport const getFavoriteFields = ({ withDimensions, withOptions }) => {\n    return arrayClean([\n        `${getIdNameFields({ rename: true }).join(',')}`,\n        'displayDescription~rename(description)',\n        withDimensions ? `${getAxesFields({ withItems: true }).join(',')}` : ``,\n        withOptions\n            ? [\n                  '*',\n                  '!attributeDimensions',\n                  '!attributeValues',\n                  '!category',\n                  '!categoryDimensions',\n                  '!categoryOptionGroupSetDimensions',\n                  '!columnDimensions',\n                  '!dataDimensionItems',\n                  '!dataElementDimensions',\n                  '!dataElementGroupSetDimensions',\n                  '!filterDimensions',\n                  '!itemOrganisationUnitGroups',\n                  '!lastUpdatedBy',\n                  '!organisationUnitGroupSetDimensions',\n                  '!organisationUnitLevels',\n                  '!organisationUnits',\n                  '!programIndicatorDimensions',\n                  '!relativePeriods',\n                  '!reportParams',\n                  '!rowDimensions',\n                  '!series',\n                  '!translations',\n                  '!userOrganisationUnit',\n                  '!userOrganisationUnitChildren',\n                  '!userOrganisationUnitGrandChildren',\n              ].join(',')\n            : '',\n    ]);\n};\n\nexport const getFavoritesFields = ({ withDimensions, withOptions }) => [\n    `reportTable[${getFavoriteFields({ withDimensions }).join(',')}]`,\n    `chart[${['type', ...getFavoriteFields({ withDimensions })].join(',')}]`,\n    `map[${getFavoriteFields({ withDimensions }).join(',')}]`,\n    `eventReport[${getFavoriteFields({ withDimensions }).join(',')}]`,\n    `eventChart[${getFavoriteFields({ withDimensions }).join(',')}]`,\n];\n\n// List item\nexport const getListItemFields = () => [\n    `reports[${getIdNameFields({ rename: true }).join(',')}]`,\n    `resources[${getIdNameFields({ rename: true }).join(',')}]`,\n    `users[${getIdNameFields({ rename: true }).join(',')}]`,\n];\n\n// Map\nexport const getMapFields = () => [\n    `${getIdNameFields({ rename: true }).join(',')}`,\n    'user,longitude,latitude,zoom,basemap',\n    `mapViews[${getFavoriteFields({\n        withDimensions: true,\n        withOptions: true,\n    })}]`,\n];\n\n// Api\n\n// Get more info about the favorite of a dashboard item\nexport const apiFetchFavorite = (id, type, { fields }) =>\n    getInstance().then(d2 =>\n        d2.Api.getApi().get(`${getEndPointName(type)}/${id}`, {\n            fields:\n                fields ||\n                getFavoriteFields({\n                    withDimensions: true,\n                    withOptions: true,\n                }),\n        })\n    );\n","import arrayClean from 'd2-utilizr/lib/arrayClean';\nimport {\n    getListItemFields,\n    getFavoritesFields,\n    getIdNameFields,\n} from './metadata';\n\n// Helper functions\n\nexport const onError = error => console.log('Error: ', error);\n\n// Dashboard item\nexport const getDashboardItemsFields = ({ withFavorite } = {}) =>\n    arrayClean([\n        'id',\n        'type',\n        'shape',\n        'x',\n        'y',\n        'width~rename(w)',\n        'height~rename(h)',\n        'messages',\n        'text',\n        'appKey',\n        `${getListItemFields().join(',')}`,\n        withFavorite\n            ? `${getFavoritesFields({\n                  withDimensions: withFavorite.withDimensions,\n              }).join(',')}`\n            : ``,\n    ]);\n\n// Dashboard\nexport const getDashboardFields = ({ withItems, withFavorite } = {}) =>\n    arrayClean([\n        `${getIdNameFields().join(',')}`,\n        'description',\n        'displayDescription',\n        'favorite',\n        `user[${getIdNameFields({ rename: true }).join(',')}]`,\n        'created',\n        'lastUpdated',\n        'access',\n        withItems\n            ? `dashboardItems[${getDashboardItemsFields({\n                  withFavorite,\n              }).join(',')}]`\n            : ``,\n    ]);\n","import { getInstance } from 'd2';\nimport arrayClean from 'd2-utilizr/lib/arrayClean';\nimport { onError, getDashboardFields } from './index';\n\n// Get \"all\" dashboards on startup\nexport const apiFetchDashboards = () =>\n    getInstance()\n        .then(d2 =>\n            d2.models.dashboard.list({\n                fields: [\n                    getDashboardFields().join(','),\n                    'dashboardItems[id]',\n                ].join(','),\n                paging: 'false',\n            })\n        )\n        .catch(onError);\n\n// Get more info about selected dashboard\nexport const apiFetchDashboard = id =>\n    getInstance()\n        .then(d2 =>\n            d2.models.dashboard.get(id, {\n                fields: arrayClean(\n                    getDashboardFields({\n                        withItems: true,\n                        withFavorite: { withDimensions: false },\n                    })\n                ).join(','),\n            })\n        )\n        .catch(onError);\n\n// Star dashboard\nexport const apiStarDashboard = (id, isStarred) => {\n    const url = `dashboards/${id}/favorite`;\n\n    getInstance().then(d2 => {\n        if (isStarred) {\n            d2.Api.getApi().post(url);\n        } else {\n            d2.Api.getApi().delete(url);\n        }\n    });\n};\n\nexport const apiDeleteDashboard = id => {\n    return getInstance()\n        .then(d2 => {\n            return d2.models.dashboards\n                .get(id)\n                .then(dashboard => dashboard.delete());\n        })\n        .catch(onError);\n};\n","import isFunction from 'd2-utilizr/lib/isFunction';\n\nimport { orObject } from '../../modules/util';\n\n// Dimensions for the react-grid-layout\n\nexport const GRID_COMPACT_TYPE = 'vertical'; // vertical | horizonal | null\nexport const GRID_ROW_HEIGHT = 10;\nconst GRID_COLUMN_WIDTH_PX = 20;\nconst GRID_LAYOUT = 'FLEXIBLE'; // FIXED | FLEXIBLE\nexport const MARGIN = [10, 10];\n\nexport const NEW_ITEM_SHAPE = { x: 0, y: 0, w: 20, h: 29 };\nexport const ITEM_MIN_HEIGHT = 4;\n\n// Dimensions for getShape\n\nconst NUMBER_OF_ITEM_COLS = 2;\nconst GRID_COLUMNS = 60;\n\nexport const getGridColumns = () => {\n    switch (GRID_LAYOUT) {\n        case 'FLEXIBLE':\n            return GRID_COLUMNS;\n        case 'FIXED':\n            return Math.floor((window.innerWidth - 20) / GRID_COLUMN_WIDTH_PX);\n        default:\n            return GRID_COLUMNS;\n    }\n};\n\n// isNonNegativeInteger\n\nconst isNonNegativeInteger = x => Number.isInteger(x) && x >= 0;\n\n// Does the item have all the shape properties?\n\nexport const hasShape = item =>\n    isNonNegativeInteger(item.x) &&\n    isNonNegativeInteger(item.y) &&\n    isNonNegativeInteger(item.w) &&\n    isNonNegativeInteger(item.h);\n\n// returns a rectangular grid block dimensioned with x, y, w, h in grid units.\n// based on a grid with 3 items across\nexport const getShape = i => {\n    if (!isNonNegativeInteger(i)) {\n        throw new Error('Invalid grid block number');\n    }\n\n    const col = i % NUMBER_OF_ITEM_COLS;\n    const row = Math.floor(i / NUMBER_OF_ITEM_COLS);\n    const itemWidth = Math.floor((GRID_COLUMNS - 1) / NUMBER_OF_ITEM_COLS);\n    const itemHeight = GRID_ROW_HEIGHT * 2;\n\n    return {\n        x: col * itemWidth,\n        y: row * itemHeight,\n        w: itemWidth,\n        h: itemHeight,\n    };\n};\n\n/**\n * Calculates the grid item's original height in pixels based\n * on the height in grid units. This calculation\n * is copied directly from react-grid-layout GridItem.js (calcPosition)\n *\n * @param {Object} item item containing shape (x, y, w, h)\n */\nconst getOriginalHeight = item => {\n    const originalHeight = Math.round(\n        GRID_ROW_HEIGHT * item.h + Math.max(0, item.h - 1) * MARGIN[1]\n    );\n\n    return { originalHeight };\n};\n\n/**\n * Returns an array of items containing the x, y, w, h dimensions\n * and the item's originalheight in pixels\n * @function\n * @param {Array} items\n * @returns {Array}\n */\n\nexport const withShape = items =>\n    items.map((item, index) => {\n        const itemWithShape = hasShape(item)\n            ? item\n            : Object.assign({}, item, getShape(index));\n\n        return Object.assign(\n            {},\n            itemWithShape,\n            getOriginalHeight(itemWithShape)\n        );\n    });\n\nexport const getGridItemDomId = id => `item-${id}`;\n\nexport function onItemResize(id) {\n    const el = orObject(document.querySelector(`#${getGridItemDomId(id)}`));\n    if (isFunction(el.setViewportSize))\n        setTimeout(\n            () => el.setViewportSize(el.clientWidth - 5, el.clientHeight - 5),\n            10\n        );\n}\n","import update from 'immutability-helper';\nimport { arrayToIdMap } from '../modules/util';\n\nexport const RECEIVED_MESSAGES = 'RECEIVED_MESSAGES';\n\nexport default (state = {}, action) => {\n    switch (action.type) {\n        case RECEIVED_MESSAGES: {\n            const conversations = arrayToIdMap(action.value);\n\n            const newState = update(state, { $merge: conversations });\n\n            return newState;\n        }\n        default:\n            return state;\n    }\n};\n\n// selectors\n\nexport const sGetMessagesRoot = state => state.messages;\n","import { getInstance } from 'd2';\n\nexport const getMessages = () => {\n    const fields =\n        'id,messageCount,lastUpdated,messageType,displayName,read,messages[id,read,sender[id,displayName],text,lastUpdated]';\n    const url = `/messageConversations?fields=${fields}&order=read:asc&pageSize=200`;\n    return getInstance()\n        .then(d2 => d2.Api.getApi().get(url))\n        .catch(error => console.log('Error:', error));\n};\n","export const RECEIVED_SNACKBAR_MESSAGE = 'RECEIVED_SNACKBAR_MESSAGE';\nexport const CLOSE_SNACKBAR = 'CLOSE_SNACKBAR';\n\nexport const DEFAULT_STATE_SNACKBAR = {\n    message: {},\n    duration: null,\n    open: false,\n};\n\nexport default (state = DEFAULT_STATE_SNACKBAR, action) => {\n    switch (action.type) {\n        case RECEIVED_SNACKBAR_MESSAGE: {\n            return { ...state, ...action.value };\n        }\n        case CLOSE_SNACKBAR: {\n            return DEFAULT_STATE_SNACKBAR;\n        }\n        default:\n            return state;\n    }\n};\n\n// selectors\n\nexport const sGetSnackbar = state => state.snackbar || DEFAULT_STATE_SNACKBAR;\n","import {\n    RECEIVED_SNACKBAR_MESSAGE,\n    CLOSE_SNACKBAR,\n} from '../reducers/snackbar';\n\nexport const acReceivedSnackbarMessage = value => ({\n    type: RECEIVED_SNACKBAR_MESSAGE,\n    value,\n});\n\nexport const acCloseSnackbar = () => ({\n    type: CLOSE_SNACKBAR,\n});\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport Snackbar from '@material-ui/core/Snackbar';\n\nimport { sGetSnackbar } from '../../reducers/snackbar';\nimport { acCloseSnackbar } from '../../actions/snackbar';\n\nconst LOADING_DASHBOARD = 'LOADING_DASHBOARD';\nexport const loadingDashboardMsg = { name: '', type: LOADING_DASHBOARD };\n\nconst SnackbarMessageContent = ({ message }) => {\n    if (typeof message === 'object') {\n        //future message types:  switch(message.type)\n        return (\n            <span>\n                Loading <span style={{ fontWeight: 800 }}>{message.name}</span>{' '}\n                dashboard\n            </span>\n        );\n    }\n    return message;\n};\n\nexport const SnackbarMessage = props => {\n    return (\n        <Snackbar\n            style={{ zIndex: 10001 }}\n            open={props.snackbarOpen}\n            message={<SnackbarMessageContent message={props.snackbarMessage} />}\n            autoHideDuration={props.snackbarDuration}\n            onClose={props.onCloseSnackbar}\n        />\n    );\n};\n\nconst mapStateToProps = state => {\n    const { message, duration, open } = sGetSnackbar(state);\n    return {\n        snackbarOpen: open,\n        snackbarMessage: message,\n        snackbarDuration: duration,\n    };\n};\n\nexport default connect(\n    mapStateToProps,\n    {\n        onCloseSnackbar: acCloseSnackbar,\n    }\n)(SnackbarMessage);\n","import isObject from 'lodash/isObject';\nimport { apiFetchFavorite, getMapFields } from '../../../api/metadata';\nimport {\n    REPORT_TABLE,\n    CHART,\n    MAP,\n    EVENT_REPORT,\n    EVENT_CHART,\n    itemTypeMap,\n    getPlugin,\n} from '../../../modules/itemTypes';\nimport { getBaseUrl, getWithoutId } from '../../../modules/util';\nimport { getGridItemDomId } from '../../ItemGrid/gridUtil';\n\nexport const THEMATIC_LAYER = 'thematic';\n\nexport const pluginIsAvailable = (item = {}, visualization = {}) => {\n    const type = visualization.activeType || item.type;\n\n    return !!getPlugin(type);\n};\n\nexport const extractFavorite = item => {\n    if (!isObject(item)) {\n        return null;\n    }\n\n    switch (item.type) {\n        case REPORT_TABLE:\n            return item.reportTable;\n        case CHART:\n            return item.chart;\n        case MAP:\n            return item.map;\n        case EVENT_REPORT:\n            return item.eventReport;\n        case EVENT_CHART:\n            return item.eventChart;\n        default:\n            return (\n                item.reportTable ||\n                item.chart ||\n                item.map ||\n                item.eventReport ||\n                item.eventChart ||\n                {}\n            );\n    }\n};\n\nexport const extractMapView = map =>\n    map.mapViews && map.mapViews.find(mv => mv.layer.includes(THEMATIC_LAYER));\n\nexport const loadPlugin = (plugin, config, credentials) => {\n    if (!(plugin && plugin.load)) {\n        return;\n    }\n\n    plugin.url = credentials.baseUrl;\n    plugin.loadingIndicator = true;\n    plugin.dashboard = true;\n    if (credentials.auth) {\n        plugin.auth = credentials.auth;\n    }\n    plugin.load(config);\n};\n\nexport const getId = item => extractFavorite(item).id;\nexport const getName = item => extractFavorite(item).name;\nexport const getDescription = item => extractFavorite(item).description;\nexport const getLink = (item, d2) => {\n    const baseUrl = getBaseUrl(d2);\n    const appUrl = itemTypeMap[item.type].appUrl(getId(item));\n\n    return `${baseUrl}/${appUrl}`;\n};\n\nexport const load = async (\n    item,\n    visualization,\n    credentials,\n    activeType,\n    filter = {}\n) => {\n    const config = {\n        ...visualization,\n        el: getGridItemDomId(item.id),\n    };\n\n    const type = activeType || item.type;\n    const plugin = getPlugin(type);\n\n    loadPlugin(plugin, config, credentials);\n};\n\nexport const fetch = async item => {\n    const fetchedFavorite = await apiFetchFavorite(getId(item), item.type, {\n        fields: item.type === MAP ? getMapFields() : null,\n    });\n\n    return fetchedFavorite;\n};\n\nexport const resize = item => {\n    const plugin = getPlugin(item.type);\n\n    if (plugin && plugin.resize) {\n        plugin.resize(getGridItemDomId(item.id));\n    }\n};\n\nexport const unmount = (item, activeType) => {\n    const plugin = getPlugin(activeType);\n\n    if (plugin && plugin.unmount) {\n        plugin.unmount(getGridItemDomId(item.id));\n    }\n};\n\nexport const getVisualizationConfig = (\n    visualization,\n    originalType,\n    activeType\n) => {\n    if (originalType === MAP && originalType !== activeType) {\n        const extractedMapView = extractMapView(visualization);\n\n        if (extractedMapView === undefined) {\n            return null;\n        }\n\n        return getWithoutId({\n            ...visualization,\n            ...extractedMapView,\n            mapViews: undefined,\n        });\n    }\n\n    return getWithoutId(visualization);\n};\n","import {\n    SET_SELECTED_ID,\n    SET_SELECTED_ISLOADING,\n    SET_SELECTED_SHOWDESCRIPTION,\n} from '../reducers/selected';\nimport {\n    RECEIVED_VISUALIZATION,\n    RECEIVED_ACTIVE_VISUALIZATION,\n} from '../reducers/visualizations';\nimport { sGetSelectedIsLoading } from '../reducers/selected';\nimport { sGetUserUsername } from '../reducers/user';\nimport { getCustomDashboards, sGetDashboardById } from '../reducers/dashboards';\nimport { apiFetchDashboard } from '../api/dashboards';\nimport { acSetDashboardItems, acAppendDashboards } from './dashboards';\nimport { withShape } from '../components/ItemGrid/gridUtil';\nimport { tGetMessages } from '../components/Item/MessagesItem/actions';\nimport { acReceivedSnackbarMessage, acCloseSnackbar } from './snackbar';\nimport { storePreferredDashboardId } from '../api/localStorage';\nimport { loadingDashboardMsg } from '../components/SnackbarMessage/SnackbarMessage';\nimport {\n    REPORT_TABLE,\n    CHART,\n    MAP,\n    EVENT_REPORT,\n    EVENT_CHART,\n    MESSAGES,\n} from '../modules/itemTypes';\nimport { extractFavorite } from '../components/Item/VisualizationItem/plugin';\nimport { orObject } from '../modules/util';\n\n// actions\n\nexport const acSetSelectedId = value => ({\n    type: SET_SELECTED_ID,\n    value,\n});\n\nexport const acSetSelectedIsLoading = value => ({\n    type: SET_SELECTED_ISLOADING,\n    value,\n});\n\nexport const acSetSelectedShowDescription = value => ({\n    type: SET_SELECTED_SHOWDESCRIPTION,\n    value,\n});\n\nexport const acReceivedVisualization = value => ({\n    type: RECEIVED_VISUALIZATION,\n    value,\n});\n\nexport const acReceivedActiveVisualization = (id, type, activeType) => {\n    const action = {\n        type: RECEIVED_ACTIVE_VISUALIZATION,\n        id,\n    };\n\n    if (activeType !== type) {\n        action.activeType = activeType;\n    }\n\n    return action;\n};\n\nexport const tLoadDashboard = id => async (dispatch, getState) => {\n    try {\n        const dash = await apiFetchDashboard(id);\n        dispatch(acAppendDashboards(dash));\n\n        return Promise.resolve(dash);\n    } catch (err) {\n        console.log('Error: ', err);\n        return err;\n    }\n};\n\n// thunks\nexport const tSetSelectedDashboardById = id => async (dispatch, getState) => {\n    dispatch(acSetSelectedIsLoading(true));\n\n    const snackbarTimeout = setTimeout(() => {\n        const dashboardName = orObject(sGetDashboardById(getState(), id))\n            .displayName;\n        if (sGetSelectedIsLoading(getState()) && dashboardName) {\n            loadingDashboardMsg.name = dashboardName;\n\n            dispatch(\n                acReceivedSnackbarMessage({\n                    message: loadingDashboardMsg,\n                    open: true,\n                })\n            );\n        }\n    }, 500);\n\n    const onSuccess = selected => {\n        const customDashboard = getCustomDashboards(selected)[0];\n\n        dispatch(\n            acSetDashboardItems(withShape(customDashboard.dashboardItems))\n        );\n\n        storePreferredDashboardId(sGetUserUsername(getState()), id);\n\n        // add visualizations to store\n        customDashboard.dashboardItems.forEach(item => {\n            switch (item.type) {\n                case REPORT_TABLE:\n                case CHART:\n                case MAP:\n                case EVENT_REPORT:\n                case EVENT_CHART:\n                    dispatch(acReceivedVisualization(extractFavorite(item)));\n                    break;\n                case MESSAGES:\n                    dispatch(tGetMessages(id));\n                    break;\n                default:\n                    break;\n            }\n        });\n\n        dispatch(acSetSelectedId(id));\n\n        dispatch(acSetSelectedIsLoading(false));\n\n        clearTimeout(snackbarTimeout);\n\n        dispatch(acCloseSnackbar());\n\n        return selected;\n    };\n\n    const onError = error => {\n        console.log('Error: ', error);\n        return error;\n    };\n\n    try {\n        const selected = await dispatch(tLoadDashboard(id));\n\n        return onSuccess(selected);\n    } catch (err) {\n        return onError(err);\n    }\n};\n","export const getPreferredDashboardId = username =>\n    localStorage.getItem(`dhis2.dashboard.current.${username}`) || undefined;\n\nexport const storePreferredDashboardId = (username, dashboardId) => {\n    localStorage.setItem(`dhis2.dashboard.current.${username}`, dashboardId);\n};\n","import { RECEIVED_MESSAGES } from '../../../reducers/messages';\nimport { getMessages } from '../../../api/messages';\n\nconst onError = (action, error) => {\n    console.log(`Error in action ${action}: ${error}`);\n    return error;\n};\n\nexport const receivedMessages = value => ({\n    type: RECEIVED_MESSAGES,\n    value,\n});\n\nexport const tGetMessages = dashboardItemId => async dispatch => {\n    try {\n        const messages = await getMessages();\n        const { messageConversations } = messages;\n\n        return dispatch(receivedMessages(messageConversations));\n    } catch (err) {\n        return onError('Get Messages', err);\n    }\n};\n","/** @module reducers/editDashboard */\nimport update from 'immutability-helper';\nimport isEmpty from 'lodash/isEmpty';\nimport { orArray, orObject } from '../modules/util';\n\nexport const RECEIVED_EDIT_DASHBOARD = 'RECEIVED_EDIT_DASHBOARD';\nexport const RECEIVED_NOT_EDITING = 'RECEIVED_NOT_EDITING';\nexport const START_NEW_DASHBOARD = 'START_NEW_DASHBOARD';\nexport const RECEIVED_TITLE = 'RECEIVED_TITLE';\nexport const RECEIVED_DESCRIPTION = 'RECEIVED_DESCRIPTION';\nexport const ADD_DASHBOARD_ITEM = 'ADD_DASHBOARD_ITEM';\nexport const REMOVE_DASHBOARD_ITEM = 'REMOVE_DASHBOARD_ITEM';\nexport const UPDATE_DASHBOARD_ITEM = 'UPDATE_DASHBOARD_ITEM';\nexport const RECEIVED_DASHBOARD_LAYOUT = 'RECEIVED_DASHBOARD_LAYOUT';\n\nexport const DEFAULT_STATE_EDIT_DASHBOARD = {};\nexport const NEW_DASHBOARD_STATE = {\n    id: '',\n    name: '',\n    access: {},\n    description: '',\n    dashboardItems: [],\n};\n\nexport default (state = DEFAULT_STATE_EDIT_DASHBOARD, action) => {\n    switch (action.type) {\n        case RECEIVED_EDIT_DASHBOARD:\n            const newState = {};\n            Object.keys(NEW_DASHBOARD_STATE).map(\n                k => (newState[k] = action.value[k])\n            );\n            return newState;\n        case RECEIVED_NOT_EDITING:\n            return DEFAULT_STATE_EDIT_DASHBOARD;\n        case START_NEW_DASHBOARD:\n            return NEW_DASHBOARD_STATE;\n        case RECEIVED_TITLE: {\n            return Object.assign({}, state, { name: action.value });\n        }\n        case RECEIVED_DESCRIPTION: {\n            return Object.assign({}, state, {\n                description: action.value,\n            });\n        }\n        case ADD_DASHBOARD_ITEM:\n            return update(state, {\n                dashboardItems: { $unshift: [action.value] },\n            });\n        case REMOVE_DASHBOARD_ITEM: {\n            const idToRemove = action.value;\n\n            const dashboardItemIndex = state.dashboardItems.findIndex(\n                item => item.id === idToRemove\n            );\n\n            if (dashboardItemIndex > -1) {\n                return update(state, {\n                    dashboardItems: {\n                        $splice: [[dashboardItemIndex, 1]],\n                    },\n                });\n            }\n\n            return state;\n        }\n        case RECEIVED_DASHBOARD_LAYOUT: {\n            const stateItems = orArray(state.dashboardItems);\n\n            const newStateItems = action.value.map(({ x, y, w, h, i }) => {\n                const stateItem = stateItems.find(si => si.id === i);\n\n                return Object.assign({}, stateItem, { w, h, x, y });\n            });\n\n            return update(state, {\n                dashboardItems: { $set: newStateItems },\n            });\n        }\n        case UPDATE_DASHBOARD_ITEM: {\n            const dashboardItem = action.value;\n\n            const dashboardItemIndex = state.dashboardItems.findIndex(\n                item => item.id === dashboardItem.id\n            );\n\n            if (dashboardItemIndex > -1) {\n                const newState = update(state, {\n                    dashboardItems: {\n                        $splice: [[dashboardItemIndex, 1, dashboardItem]],\n                    },\n                });\n\n                return newState;\n            }\n\n            return state;\n        }\n        default:\n            return state;\n    }\n};\n\n// root selector\n\nexport const sGetEditDashboardRoot = state => state.editDashboard;\n\n// selectors\n\nexport const sGetIsEditing = state => !isEmpty(state.editDashboard);\n\nexport const sGetIsNewDashboard = state => {\n    return (\n        !isEmpty(state.editDashboard) && sGetEditDashboardRoot(state).id === ''\n    );\n};\n\nexport const sGetEditDashboardItems = state =>\n    orObject(sGetEditDashboardRoot(state)).dashboardItems;\n","export const CLEAR_EDIT_ITEM_FILTERS = 'CLEAR_EDIT_ITEM_FILTERS';\nexport const REMOVE_EDIT_ITEM_FILTER = 'REMOVE_EDIT_ITEM_FILTER';\nexport const SET_EDIT_ITEM_FILTERS = 'SET_EDIT_ITEM_FILTERS';\n\nexport const DEFAULT_STATE_EDIT_ITEM_FILTERS = {};\n\nexport default (state = DEFAULT_STATE_EDIT_ITEM_FILTERS, action) => {\n    switch (action.type) {\n        case REMOVE_EDIT_ITEM_FILTER: {\n            const newState = { ...state };\n\n            delete newState[action.id];\n\n            return newState;\n        }\n        case SET_EDIT_ITEM_FILTERS: {\n            return action.filters;\n        }\n        case CLEAR_EDIT_ITEM_FILTERS: {\n            return DEFAULT_STATE_EDIT_ITEM_FILTERS;\n        }\n        default:\n            return state;\n    }\n};\n\n// selectors\n\nexport const sGetEditItemFiltersRoot = state => state.editItemFilters;\n\nexport const sGetEditFiltersKeys = state =>\n    Object.keys(sGetEditItemFiltersRoot(state));\n","export const CLEAR_ITEM_FILTERS = 'CLEAR_ITEM_FILTERS';\nexport const SET_ITEM_FILTERS = 'SET_ITEM_FILTERS';\nexport const ADD_ITEM_FILTER = 'ADD_ITEM_FILTER';\nexport const REMOVE_ITEM_FILTER = 'REMOVE_ITEM_FILTER';\n\nexport const DEFAULT_STATE_ITEM_FILTERS = {};\n\nexport default (state = DEFAULT_STATE_ITEM_FILTERS, action) => {\n    switch (action.type) {\n        case ADD_ITEM_FILTER: {\n            return {\n                ...state,\n                [action.filter.id]: action.filter.value,\n            };\n        }\n        case REMOVE_ITEM_FILTER: {\n            const newState = { ...state };\n\n            delete newState[action.id];\n\n            return newState;\n        }\n        case SET_ITEM_FILTERS: {\n            return action.filters;\n        }\n        case CLEAR_ITEM_FILTERS: {\n            return DEFAULT_STATE_ITEM_FILTERS;\n        }\n        default:\n            return state;\n    }\n};\n\n// selectors\n\nexport const sGetItemFiltersRoot = state => state.itemFilters;\n\nexport const sGetFiltersKeys = state => Object.keys(sGetItemFiltersRoot(state));\n","import {\n    ADD_ITEM_FILTER,\n    REMOVE_ITEM_FILTER,\n    SET_ITEM_FILTERS,\n    CLEAR_ITEM_FILTERS,\n} from '../reducers/itemFilters';\n\nexport const FILTER_ORG_UNIT = 'ou';\n\n// actions\n\nexport const acAddItemFilter = filter => ({\n    type: ADD_ITEM_FILTER,\n    filter,\n});\n\nexport const acRemoveItemFilter = id => ({\n    type: REMOVE_ITEM_FILTER,\n    id,\n});\n\nexport const acClearItemFilters = () => ({\n    type: CLEAR_ITEM_FILTERS,\n});\n\nexport const acSetItemFilters = filters => ({\n    type: SET_ITEM_FILTERS,\n    filters,\n});\n","import {\n    REMOVE_EDIT_ITEM_FILTER,\n    SET_EDIT_ITEM_FILTERS,\n    CLEAR_EDIT_ITEM_FILTERS,\n} from '../reducers/editItemFilters';\n\n// actions\n\nexport const acRemoveEditItemFilter = id => ({\n    type: REMOVE_EDIT_ITEM_FILTER,\n    id,\n});\n\nexport const acClearEditItemFilters = () => ({\n    type: CLEAR_EDIT_ITEM_FILTERS,\n});\n\nexport const acSetEditItemFilters = filters => ({\n    type: SET_EDIT_ITEM_FILTERS,\n    filters,\n});\n","import { getInstance } from 'd2';\n\nconst onError = error => console.log('Error: ', error);\n\nconst saveDashboard = (dashboard, data) => {\n    const { name, description, dashboardItems } = data;\n\n    dashboard.name = name;\n    dashboard.description = description;\n    dashboard.dashboardItems = dashboardItems.map(item =>\n        Object.assign({}, item, { width: item.w, height: item.h })\n    );\n\n    return dashboard.save().then(msg => msg.response.uid);\n};\n\nexport const updateDashboard = data => {\n    return getInstance()\n        .then(d2 => {\n            return d2.models.dashboards\n                .get(data.id)\n                .then(dashboard => saveDashboard(dashboard, data));\n        })\n        .catch(onError);\n};\n\nexport const postDashboard = data => {\n    return getInstance().then(d2 => {\n        const dashboard = d2.models.dashboards.create();\n\n        return saveDashboard(dashboard, data);\n    });\n};\n","import { generateUid } from 'd2/uid';\n\nimport {\n    RECEIVED_EDIT_DASHBOARD,\n    START_NEW_DASHBOARD,\n    RECEIVED_NOT_EDITING,\n    RECEIVED_TITLE,\n    RECEIVED_DESCRIPTION,\n    RECEIVED_DASHBOARD_LAYOUT,\n    ADD_DASHBOARD_ITEM,\n    UPDATE_DASHBOARD_ITEM,\n    REMOVE_DASHBOARD_ITEM,\n} from '../reducers/editDashboard';\nimport { sGetEditDashboardRoot } from '../reducers/editDashboard';\nimport { updateDashboard, postDashboard } from '../api/editDashboard';\nimport { tSetSelectedDashboardById } from '../actions/selected';\nimport { NEW_ITEM_SHAPE } from '../components/ItemGrid/gridUtil';\nimport {\n    itemTypeMap,\n    isSpacerType,\n    TEXT,\n    emptyTextItemContent,\n    isTextType,\n} from '../modules/itemTypes';\n\nconst onError = error => {\n    console.log('Error (Saving Dashboard): ', error);\n    return error;\n};\n\n// actions\n\nexport const acSetEditDashboard = (dashboard, items) => {\n    const val = {\n        ...dashboard,\n        dashboardItems: items,\n    };\n\n    return {\n        type: RECEIVED_EDIT_DASHBOARD,\n        value: val,\n    };\n};\n\nexport const acSetEditNewDashboard = () => ({\n    type: START_NEW_DASHBOARD,\n});\n\nexport const acClearEditDashboard = () => ({\n    type: RECEIVED_NOT_EDITING,\n});\n\nexport const acSetDashboardTitle = value => ({\n    type: RECEIVED_TITLE,\n    value,\n});\n\nexport const acSetDashboardDescription = value => ({\n    type: RECEIVED_DESCRIPTION,\n    value,\n});\n\nexport const acUpdateDashboardLayout = value => ({\n    type: RECEIVED_DASHBOARD_LAYOUT,\n    value,\n});\n\nexport const acAddDashboardItem = item => {\n    const type = item.type;\n    delete item.type;\n    const itemPropName = itemTypeMap[type].propName;\n\n    return {\n        type: ADD_DASHBOARD_ITEM,\n        value: {\n            id: generateUid(),\n            type,\n            [itemPropName]: item.content,\n            ...NEW_ITEM_SHAPE,\n        },\n    };\n};\n\nexport const acUpdateDashboardItem = item => ({\n    type: UPDATE_DASHBOARD_ITEM,\n    value: item,\n});\n\nexport const acRemoveDashboardItem = value => ({\n    type: REMOVE_DASHBOARD_ITEM,\n    value,\n});\n\n// thunks\n\nexport const tSaveDashboard = () => async (dispatch, getState) => {\n    const dashboard = sGetEditDashboardRoot(getState());\n\n    const dashboardItems = dashboard.dashboardItems.map(item => {\n        const text = isTextType(item)\n            ? item.text || emptyTextItemContent\n            : null;\n\n        const type = isSpacerType(item) ? TEXT : item.type;\n\n        return {\n            ...item,\n            ...(text ? { text } : {}),\n            type,\n        };\n    });\n\n    const dashboardToSave = {\n        ...dashboard,\n        dashboardItems,\n    };\n\n    try {\n        const dashboardId = dashboardToSave.id\n            ? await updateDashboard(dashboardToSave)\n            : await postDashboard(dashboardToSave);\n\n        dispatch(acClearEditDashboard());\n        await dispatch(tSetSelectedDashboardById(dashboardId));\n\n        return Promise.resolve(dashboardId);\n    } catch (error) {\n        onError(error);\n    }\n};\n","import {\n    SET_DASHBOARDS,\n    ADD_DASHBOARDS,\n    SET_DASHBOARD_STARRED,\n    SET_DASHBOARD_DISPLAY_NAME,\n    SET_DASHBOARD_ITEMS,\n} from '../reducers/dashboards';\nimport {\n    getCustomDashboards,\n    sGetDashboardById,\n    sGetDashboardsSortedByStarred,\n} from '../reducers/dashboards';\nimport { sGetUserUsername } from '../reducers/user';\nimport { tSetSelectedDashboardById, acSetSelectedId } from './selected';\nimport { sGetSelectedId } from '../reducers/selected';\nimport { sGetIsEditing } from '../reducers/editDashboard';\nimport { sGetEditItemFiltersRoot } from '../reducers/editItemFilters';\nimport { acSetItemFilters, acClearItemFilters } from './itemFilters';\nimport { acClearEditItemFilters } from './editItemFilters';\nimport { acClearEditDashboard } from './editDashboard';\nimport {\n    apiFetchDashboards,\n    apiStarDashboard,\n    apiDeleteDashboard,\n} from '../api/dashboards';\nimport { getPreferredDashboardId } from '../api/localStorage';\nimport { arrayToIdMap } from '../modules/util';\n\n// actions\n\nexport const acSetDashboards = dashboards => ({\n    type: SET_DASHBOARDS,\n    value: arrayToIdMap(getCustomDashboards(dashboards)),\n});\n\nexport const acAppendDashboards = dashboards => ({\n    type: ADD_DASHBOARDS,\n    value: arrayToIdMap(getCustomDashboards(dashboards)),\n});\n\nexport const acSetDashboardStarred = (dashboardId, isStarred) => ({\n    type: SET_DASHBOARD_STARRED,\n    dashboardId: dashboardId,\n    value: isStarred,\n});\n\nexport const acSetDashboardDisplayName = (dashboardId, value) => ({\n    type: SET_DASHBOARD_DISPLAY_NAME,\n    dashboardId,\n    value,\n});\n\nexport const acSetDashboardItems = value => ({\n    type: SET_DASHBOARD_ITEMS,\n    value,\n});\n\n// thunks\n\nexport const tFetchDashboards = () => async dispatch => {\n    const collection = await apiFetchDashboards();\n    dispatch(acSetDashboards(collection.toArray()));\n};\n\nexport const tSelectDashboard = id => async (dispatch, getState) => {\n    const onError = error => {\n        console.log('Error (apiFetchDashboards): ', error);\n        return error;\n    };\n\n    try {\n        const state = getState();\n\n        let dashboardToSelect = null;\n        if (id) {\n            dashboardToSelect = sGetDashboardById(state, id) || null;\n        } else {\n            const preferredId = getPreferredDashboardId(\n                sGetUserUsername(state)\n            );\n            const dash = sGetDashboardById(state, preferredId);\n            dashboardToSelect =\n                preferredId && dash\n                    ? dash\n                    : sGetDashboardsSortedByStarred(state)[0];\n        }\n\n        if (dashboardToSelect) {\n            dispatch(tSetSelectedDashboardById(dashboardToSelect.id));\n\n            if (dashboardToSelect.id === sGetSelectedId(state)) {\n                if (sGetIsEditing(state)) {\n                    // disable filters when switching to edit mode\n                    dispatch(acClearItemFilters());\n                } else {\n                    // enable filters when switching to view mode\n                    dispatch(acSetItemFilters(sGetEditItemFiltersRoot(state)));\n                }\n            } else {\n                // clear filters when switching dashboard\n                dispatch(acClearEditItemFilters());\n                dispatch(acClearItemFilters());\n            }\n        } else {\n            dispatch(acSetSelectedId(false));\n        }\n    } catch (err) {\n        return onError(err);\n    }\n};\n\nexport const tStarDashboard = (id, isStarred) => async (dispatch, getState) => {\n    const onSuccess = id => {\n        dispatch(acSetDashboardStarred(id, isStarred));\n        return id;\n    };\n\n    const onError = error => {\n        console.log('Error (apiStarDashboard): ', error);\n        return error;\n    };\n    try {\n        await apiStarDashboard(id, isStarred);\n        return onSuccess(id);\n    } catch (err) {\n        return onError(err);\n    }\n};\n\nexport const tDeleteDashboard = id => async (dispatch, getState) => {\n    try {\n        await apiDeleteDashboard(id);\n        dispatch(acClearEditDashboard());\n        dispatch(acSetSelectedId());\n        dispatch(acSetDashboardItems([]));\n\n        await dispatch(tFetchDashboards());\n\n        return Promise.resolve();\n    } catch (err) {\n        console.log('Error (deleteDashboard): ', err);\n        return err;\n    }\n};\n","/** @module reducers/controlBar */\nimport { combineReducers } from 'redux';\nimport { validateReducer } from '../modules/util';\n\nexport const SET_CONTROLBAR_USER_ROWS = 'SET_CONTROLBAR_USER_ROWS';\n\nexport const DEFAULT_STATE_CONTROLBAR_ROWS = 1;\n\nconst userRows = (state = DEFAULT_STATE_CONTROLBAR_ROWS, action) => {\n    switch (action.type) {\n        case SET_CONTROLBAR_USER_ROWS:\n            return validateReducer(action.value, DEFAULT_STATE_CONTROLBAR_ROWS);\n        default:\n            return state;\n    }\n};\n\nexport default combineReducers({\n    userRows,\n});\n\n/**\n * Selectors that point to specific props in the state object\n * @function\n * @param {Object} state\n * @returns {Object}\n */\nexport const sGetControlBarRoot = state => state.controlBar;\n\n// Selector dependency level 2\n\nexport const sGetControlBarUserRows = state =>\n    sGetControlBarRoot(state).userRows;\n","import { getInstance } from 'd2';\nimport { DEFAULT_STATE_CONTROLBAR_ROWS } from '../reducers/controlBar';\n\nconst NAMESPACE = 'dashboard';\nconst KEY = 'controlBarRows';\n\nconst hasNamespace = async d2 => await d2.currentUser.dataStore.has(NAMESPACE);\n\nconst getNamespace = async (d2, hasNamespace) =>\n    hasNamespace\n        ? await d2.currentUser.dataStore.get(NAMESPACE)\n        : await d2.currentUser.dataStore.create(NAMESPACE);\n\nexport const apiGetControlBarRows = async () => {\n    const d2 = await getInstance();\n    const namespace = await getNamespace(d2, await hasNamespace(d2));\n    const hasKey = namespace.keys && namespace.keys.find(key => key === KEY);\n\n    if (hasKey) {\n        return await namespace.get(KEY);\n    } else {\n        await apiPostControlBarRows(DEFAULT_STATE_CONTROLBAR_ROWS, namespace);\n        console.log(\n            '(These errors to /userDataStore/dashboard can be ignored)'\n        );\n        return DEFAULT_STATE_CONTROLBAR_ROWS;\n    }\n};\n\nexport const apiPostControlBarRows = async (rows, namespace) => {\n    const d2 = await getInstance();\n    const ns = namespace || (await getNamespace(d2, hasNamespace));\n\n    ns.set(KEY, rows);\n};\n","import { SET_CONTROLBAR_USER_ROWS } from '../reducers/controlBar';\nimport { apiGetControlBarRows } from '../api/controlBar';\n\n// actions\n\nexport const acSetControlBarUserRows = rows => ({\n    type: SET_CONTROLBAR_USER_ROWS,\n    value: rows,\n});\n\n// thunks\n\nexport const tSetControlBarRows = () => async (dispatch, getState) => {\n    const onSuccess = rows => {\n        dispatch(acSetControlBarUserRows(rows));\n    };\n\n    const onError = error => {\n        console.log('Error (apiGetControlBarRows): ', error);\n        return error;\n    };\n\n    try {\n        const controlBarRows = await apiGetControlBarRows();\n        return onSuccess(controlBarRows);\n    } catch (err) {\n        return onError(err);\n    }\n};\n","import { FIXED_DIMENSIONS } from '@dhis2/analytics';\n\nexport const SET_DIMENSIONS = 'SET_DIMENSIONS';\nexport const DEFAULT_DIMENSIONS = {\n    pe: FIXED_DIMENSIONS.pe,\n    ou: FIXED_DIMENSIONS.ou,\n};\n\nexport default (state = DEFAULT_DIMENSIONS, action) => {\n    switch (action.type) {\n        case SET_DIMENSIONS: {\n            return {\n                ...DEFAULT_DIMENSIONS,\n                ...action.value,\n            };\n        }\n        default:\n            return state;\n    }\n};\n\nexport const sGetDimensions = state => state.dimensions;\n","export const SET_SETTINGS = 'SET_SETTINGS';\nexport const ADD_SETTINGS = 'ADD_SETTINGS';\n\nexport const DEFAULT_SETTINGS = {\n    keyDateFormat: 'yyyy-MM-dd',\n    keyAnalysisRelativePeriod: 'LAST_12_MONTHS',\n    keyAnalysisDigitGroupSeparator: 'SPACE',\n    displayNameProperty: 'displayName',\n    uiLocale: 'en',\n    rootOrganisationUnit: {},\n};\n\nexport default (state = DEFAULT_SETTINGS, action) => {\n    switch (action.type) {\n        case SET_SETTINGS: {\n            return Object.assign({}, action.value);\n        }\n        case ADD_SETTINGS: {\n            return {\n                ...state,\n                ...action.value,\n            };\n        }\n        default:\n            return state;\n    }\n};\n\n// Selectors\n\nexport const sGetSettings = state => state.settings;\n\nexport const sGetSettingsDisplayNameProperty = state =>\n    sGetSettings(state).displayNameProperty;\n\nexport const sGetRootOrgUnit = state =>\n    sGetSettings(state).rootOrganisationUnit;\n\nexport const sGetRelativePeriod = state =>\n    sGetSettings(state).keyAnalysisRelativePeriod;\n\nexport const sGetUiLocale = state => sGetSettings(state).uiLocale;\n","import keyBy from 'lodash/keyBy';\nimport sortBy from 'lodash/sortBy';\nimport { SET_DIMENSIONS } from '../reducers/dimensions';\nimport { apiFetchDimensions } from '@dhis2/analytics';\nimport { sGetSettingsDisplayNameProperty } from '../reducers/settings';\n\nexport const acSetDimensions = dimensions => ({\n    type: SET_DIMENSIONS,\n    value: keyBy(sortBy(dimensions, [d => d.name.toLowerCase()]), 'id'),\n});\n\nexport const tSetDimensions = d2 => async (dispatch, getState) => {\n    const onSuccess = dimensions => {\n        dispatch(acSetDimensions(dimensions));\n    };\n\n    const onError = error => {\n        console.log('Error (apiFetchDimensions): ', error);\n        return error;\n    };\n\n    try {\n        const displayNameProp = sGetSettingsDisplayNameProperty(getState());\n        const dimensions = await apiFetchDimensions(d2, displayNameProp);\n\n        // filter out CATEGORY that are not of type ATTRIBUTE\n        const filteredDimensions = dimensions.filter(\n            dim =>\n                dim.dimensionType !== 'CATEGORY' ||\n                (dim.dimensionType === 'CATEGORY' &&\n                    dim.dataDimensionType === 'ATTRIBUTE')\n        );\n        return onSuccess(filteredDimensions);\n    } catch (err) {\n        return onError(err);\n    }\n};\n","import React from 'react';\nimport i18n from '@dhis2/d2-i18n';\nimport { colors } from '@dhis2/ui-core';\nimport { withStyles } from '@material-ui/core/styles';\n\nexport const SHOWMORE_BAR_HEIGHT = 16;\n\nconst styles = {\n    showMore: {\n        color: colors.grey700,\n        cursor: 'pointer',\n        fontSize: 11,\n        paddingTop: 5,\n        '&:hover': {\n            textDecoration: 'underline',\n        },\n    },\n    disabled: {\n        paddingTop: 5,\n        color: colors.grey500,\n        fontSize: 11,\n        cursor: 'not-allowed',\n    },\n};\n\nexport const ShowMoreButton = ({ onClick, isMaxHeight, classes, disabled }) => {\n    return (\n        <div style={{ textAlign: 'center' }}>\n            {disabled ? (\n                <div className={classes.disabled}>{i18n.t('Show more')}</div>\n            ) : (\n                <div className={classes.showMore} onClick={onClick}>\n                    {isMaxHeight ? i18n.t('Show less') : i18n.t('Show more')}\n                </div>\n            )}\n        </div>\n    );\n};\n\nexport default withStyles(styles)(ShowMoreButton);\n","import { SHOWMORE_BAR_HEIGHT } from './ShowMoreButton';\n\nexport const CONTROL_BAR_ROW_HEIGHT = 40;\nexport const FIRST_ROW_PADDING_HEIGHT = 10;\nexport const MIN_ROW_COUNT = 1;\n\nexport const HEADERBAR_HEIGHT = 48;\n\nconst CONTROL_BAR_OUTER_HEIGHT_DIFF =\n    FIRST_ROW_PADDING_HEIGHT + SHOWMORE_BAR_HEIGHT - 2; // 2 pixel \"adjustment\"\n\nexport const getRowsHeight = rows => {\n    return rows * CONTROL_BAR_ROW_HEIGHT;\n};\n\nexport const getNumRowsFromHeight = height => {\n    return Math.floor(\n        (height - CONTROL_BAR_OUTER_HEIGHT_DIFF) / CONTROL_BAR_ROW_HEIGHT\n    );\n};\n\nexport const getTopOffset = rows => {\n    return HEADERBAR_HEIGHT + getControlBarHeight(rows, false);\n};\n\nexport const getControlBarHeight = rows => {\n    return getRowsHeight(rows) + CONTROL_BAR_OUTER_HEIGHT_DIFF;\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { colors } from '@dhis2/ui-core';\nimport { HEADERBAR_HEIGHT } from './controlBarDimensions';\n\nimport classes from './styles/ControlBar.module.css';\n\nconst DRAG_HANDLE_HEIGHT = 7;\n\nclass ControlBar extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            dragging: false,\n        };\n    }\n\n    onStartDrag = () => {\n        this.setState({ dragging: true });\n        window.addEventListener('mousemove', this.onDrag);\n        window.addEventListener('mouseup', this.onEndDrag);\n    };\n\n    onDrag = event => {\n        event.preventDefault();\n        event.stopPropagation();\n\n        const newHeight = event.clientY;\n\n        if (\n            this.props.onChangeHeight &&\n            newHeight !== this.props.height &&\n            newHeight > 0\n        ) {\n            requestAnimationFrame(() => {\n                this.props.onChangeHeight(newHeight);\n            });\n        }\n    };\n\n    onEndDrag = () => {\n        this.setState({ dragging: false });\n        window.removeEventListener('mousemove', this.onDrag);\n        window.removeEventListener('mouseup', this.onEndDrag);\n\n        if (this.props.onEndDrag) {\n            this.props.onEndDrag();\n        }\n    };\n\n    renderDragHandle() {\n        return typeof this.props.onChangeHeight === 'function' ? (\n            <div\n                className={classes.draghandle}\n                style={{ height: DRAG_HANDLE_HEIGHT }}\n                onMouseDown={this.onStartDrag}\n            />\n        ) : null;\n    }\n\n    render() {\n        const height = Math.max(this.props.height, 0) + DRAG_HANDLE_HEIGHT;\n\n        const rootStyle = Object.assign(\n            {\n                height,\n                top: HEADERBAR_HEIGHT,\n                backgroundColor: this.props.editMode\n                    ? colors.yellow050\n                    : colors.white,\n                paddingBottom: DRAG_HANDLE_HEIGHT,\n            },\n            // Disable animations while dragging\n            this.state.dragging ? { transition: 'none' } : {}\n        );\n\n        return (\n            <div style={rootStyle} className={classes.root}>\n                <div className={classes.content}>{this.props.children}</div>\n                {this.renderDragHandle()}\n            </div>\n        );\n    }\n}\n\nControlBar.propTypes = {\n    /**\n     * The height of the control bar in number of lines. Must be a positive integer.\n     */\n    height: PropTypes.number.isRequired,\n\n    /**\n     * If true, the background color of the control bar changes to indicate that edit mode is active.\n     */\n    editMode: PropTypes.bool.isRequired,\n\n    /**\n     * Callback function that is called when the control bar is resized.\n     * The callback receives one argument: The new height in pixels.\n     *\n     * If no callback is specified the control bar will not have a drag handle.\n     */\n    onChangeHeight: PropTypes.func,\n\n    /**\n     * Callback function that is called when the control bar is dropped after being dragged.\n     * The callback receives one argument: The new height in pixels.\n     *\n     * Ignored if no \"onChangeHeight\" function is provided.\n     */\n    onEndDrag: PropTypes.func,\n\n    /**\n     * The contents of the control bar.\n     */\n    children: PropTypes.node.isRequired,\n};\n\nControlBar.defaultProps = {\n    onChangeHeight: null,\n    onEndDrag: null,\n};\n\nexport default ControlBar;\n","import React from 'react';\n\nconst StarIcon = ({ className }) => (\n    <svg\n        className={className}\n        xmlns=\"http://www.w3.org/2000/svg\"\n        viewBox=\"0 0 24 24\"\n    >\n        <path d=\"M0 0h24v24H0z\" fill=\"none\" />\n        <path d=\"M12 17.27L18.18 21l-1.64-7.03L22 9.24l-7.19-.61L12 2 9.19 8.63 2 9.24l5.46 4.73L5.82 21z\" />\n        <path d=\"M0 0h24v24H0z\" fill=\"none\" />\n    </svg>\n);\n\nexport default StarIcon;\n","import { getInstance } from 'd2';\n\nexport const apiPostDataStatistics = async (eventType, id) => {\n    const d2 = await getInstance();\n    const url = `dataStatistics?eventType=${eventType}&favorite=${id}`;\n\n    d2.Api.getApi().post(url);\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport { Chip, colors } from '@dhis2/ui-core';\nimport { Link } from 'react-router-dom';\nimport debounce from 'lodash/debounce';\n\nimport StarIcon from '../../icons/Star';\nimport { apiPostDataStatistics } from '../../api/dataStatistics';\n\nconst styles = {\n    chip: {\n        margin: '3px',\n    },\n    link: {\n        color: colors.grey600,\n        display: 'inline-block',\n        textDecoration: 'none',\n        verticalAlign: 'top',\n    },\n    icon: {\n        height: '20px',\n        marginTop: '2px',\n        width: '20px',\n    },\n    selected: {\n        fill: colors.white,\n    },\n    unselected: {\n        fill: colors.grey700,\n    },\n};\n\nexport const DashboardItemChip = ({\n    starred,\n    selected,\n    label,\n    dashboardId,\n    classes,\n}) => {\n    const chipProps = {\n        selected,\n        className: classes.chip,\n    };\n\n    if (starred) {\n        const selectedState = selected ? classes.selected : classes.unselected;\n        chipProps.icon = (\n            <StarIcon className={`${classes.icon} ${selectedState}`} />\n        );\n    }\n\n    return (\n        <Link\n            className={classes.link}\n            to={`/${dashboardId}`}\n            onClick={debounce(\n                () => apiPostDataStatistics('DASHBOARD_VIEW', dashboardId),\n                500\n            )}\n        >\n            <Chip {...chipProps}>{label}</Chip>\n        </Link>\n    );\n};\n\nDashboardItemChip.propTypes = {\n    starred: PropTypes.bool.isRequired,\n    selected: PropTypes.bool.isRequired,\n    label: PropTypes.string.isRequired,\n    dashboardId: PropTypes.string.isRequired,\n};\n\nexport default withStyles(styles)(DashboardItemChip);\n","import React from 'react';\nimport { colors } from '@dhis2/ui-core';\n\nconst AddCircleIcon = () => (\n    <svg\n        xmlns=\"http://www.w3.org/2000/svg\"\n        width=\"32\"\n        height=\"32\"\n        fill={colors.teal600}\n        viewBox=\"0 0 24 24\"\n    >\n        <path d=\"M12 2C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2zm4 11h-3v3c0 .55-.45 1-1 1s-1-.45-1-1v-3H8c-.55 0-1-.45-1-1s.45-1 1-1h3V8c0-.55.45-1 1-1s1 .45 1 1v3h3c.55 0 1 .45 1 1s-.45 1-1 1z\" />\n    </svg>\n);\n\nexport default AddCircleIcon;\n","import React from 'react';\nimport { colors } from '@dhis2/ui-core';\n\nconst ClearIcon = ({ className }) => (\n    <svg\n        className={className}\n        fill={colors.grey800}\n        xmlns=\"http://www.w3.org/2000/svg\"\n        viewBox=\"0 0 24 24\"\n    >\n        <path d=\"M19 6.41L17.59 5 12 10.59 6.41 5 5 6.41 10.59 12 5 17.59 6.41 19 12 13.41 17.59 19 19 17.59 13.41 12z\" />\n        <path d=\"M0 0h24v24H0z\" fill=\"none\" />\n    </svg>\n);\n\nexport default ClearIcon;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport ClearIcon from '../../icons/Clear';\n\nimport classes from './styles/ClearButton.module.css';\n\nexport const ClearButton = ({ onClear }) => (\n    <button className={classes.button} onClick={onClear}>\n        <ClearIcon className={classes.icon} color=\"action\" />\n    </button>\n);\n\nClearButton.propTypes = {\n    onClear: PropTypes.func.isRequired,\n};\n\nexport default ClearButton;\n","import { combineReducers } from 'redux';\nimport { validateReducer } from '../modules/util';\n\nexport const SET_DASHBOARDS_FILTER_NAME = 'SET_DASHBOARDS_FILTER_NAME';\nexport const SET_DASHBOARDS_FILTER_OWNER = 'SET_DASHBOARDS_FILTER_OWNER';\nexport const SET_DASHBOARDS_FILTER_ORDER = 'SET_DASHBOARDS_FILTER_ORDER';\n\nexport const ownerData = [\n    { id: 'ALL', value: 'All users' },\n    { id: 'ME', value: 'Created by me' },\n    { id: 'OTHERS', value: 'Created by others' },\n];\n\nexport const orderData = [\n    { id: 'NAME:ASC', value: 'Name (asc)' },\n    { id: 'NAME:ASC', value: 'Name (desc)' },\n    { id: 'ITEMS:ASC', value: 'Number of items (asc)' },\n    { id: 'ITEMS:ASC', value: 'Number of items (desc)' },\n    { id: 'CREATED:ASC', value: 'Created date (asc)' },\n    { id: 'CREATED:ASC', value: 'Created date (desc)' },\n];\n\nexport const DEFAULT_STATE_DASHBOARDS_FILTER_NAME = '';\nexport const DEFAULT_STATE_DASHBOARDS_FILTER_OWNER = ownerData[0].id;\nexport const DEFAULT_STATE_DASHBOARDS_FILTER_ORDER = orderData[0].id;\n\nconst name = (state = DEFAULT_STATE_DASHBOARDS_FILTER_NAME, action) => {\n    switch (action.type) {\n        case SET_DASHBOARDS_FILTER_NAME:\n            return validateReducer(\n                action.value,\n                DEFAULT_STATE_DASHBOARDS_FILTER_NAME\n            );\n        default:\n            return state;\n    }\n};\n\nconst owner = (state = DEFAULT_STATE_DASHBOARDS_FILTER_OWNER, action) => {\n    switch (action.type) {\n        case SET_DASHBOARDS_FILTER_OWNER:\n            return validateReducer(\n                action.value,\n                DEFAULT_STATE_DASHBOARDS_FILTER_NAME\n            );\n        default:\n            return state;\n    }\n};\n\nconst order = (state = DEFAULT_STATE_DASHBOARDS_FILTER_ORDER, action) => {\n    switch (action.type) {\n        case SET_DASHBOARDS_FILTER_ORDER:\n            return validateReducer(\n                action.value,\n                DEFAULT_STATE_DASHBOARDS_FILTER_ORDER\n            );\n        default:\n            return state;\n    }\n};\n\nexport default combineReducers({\n    name,\n    owner,\n    order,\n});\n\n// selectors\n\nexport const sGetDashboardsFilterRoot = state => state.dashboardsFilter;\n\n// selector dependency level 2\n\nexport const sGetFilterName = state => sGetDashboardsFilterRoot(state).name;\nexport const sGetFilterOwner = state => sGetDashboardsFilterRoot(state).owner;\nexport const sGetFilterOrder = state => sGetDashboardsFilterRoot(state).order;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport i18n from '@dhis2/d2-i18n';\nimport InputField from '@material-ui/core/Input';\nimport InputAdornment from '@material-ui/core/InputAdornment';\nimport SearchIcon from '@material-ui/icons/Search';\nimport { colors } from '@dhis2/ui-core';\n\nimport ClearButton from './ClearButton';\nimport { DEFAULT_STATE_DASHBOARDS_FILTER_NAME } from '../../reducers/dashboardsFilter';\n\nexport const KEYCODE_ENTER = 13;\nexport const KEYCODE_ESCAPE = 27;\n\nconst styles = {\n    filterField: {\n        fontSize: '14px',\n        width: '200px',\n        height: '30px',\n        top: '-4px',\n    },\n    searchIcon: {\n        color: colors.grey700,\n        width: '20px',\n        height: '20px',\n    },\n};\n\nexport class Filter extends Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            value: DEFAULT_STATE_DASHBOARDS_FILTER_NAME,\n        };\n    }\n\n    componentWillReceiveProps(nextProps) {\n        this.setState({\n            value: nextProps.name,\n        });\n    }\n\n    setFilterValue = event => {\n        event.preventDefault();\n\n        this.props.onChangeName(event.target.value);\n    };\n\n    handleKeyUp = event => {\n        switch (event.keyCode) {\n            case KEYCODE_ENTER:\n                this.props.onKeypressEnter();\n                break;\n            case KEYCODE_ESCAPE:\n                this.props.onChangeName();\n                break;\n            default:\n                break;\n        }\n    };\n\n    render() {\n        const { classes, name, onChangeName } = this.props;\n\n        const startAdornment = (\n            <InputAdornment position=\"start\">\n                <SearchIcon className={classes.searchIcon} />\n            </InputAdornment>\n        );\n\n        const endAdornment =\n            name !== '' && name !== null ? (\n                <InputAdornment position=\"end\">\n                    <ClearButton onClear={() => onChangeName()} />\n                </InputAdornment>\n            ) : null;\n\n        return (\n            <InputField\n                className={classes.filterField}\n                placeholder={i18n.t('Search for a dashboard')}\n                startAdornment={startAdornment}\n                endAdornment={endAdornment}\n                value={this.state.value}\n                onChange={this.setFilterValue}\n                onKeyUp={this.handleKeyUp}\n            />\n        );\n    }\n}\n\nFilter.propTypes = {\n    name: PropTypes.string,\n    onChangeName: PropTypes.func,\n};\n\nFilter.defaultProps = {\n    name: '',\n    onChangeName: Function.prototype,\n};\n\nexport default withStyles(styles)(Filter);\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { Link, withRouter } from 'react-router-dom';\nimport ControlBar from './ControlBar';\nimport arraySort from 'd2-utilizr/lib/arraySort';\n\nimport Chip from './DashboardItemChip';\nimport AddCircleIcon from '../../icons/AddCircle';\nimport Filter from './Filter';\nimport ShowMoreButton from './ShowMoreButton';\nimport {\n    FIRST_ROW_PADDING_HEIGHT,\n    MIN_ROW_COUNT,\n    getRowsHeight,\n    getControlBarHeight,\n    getNumRowsFromHeight,\n} from './controlBarDimensions';\nimport { sGetControlBarUserRows } from '../../reducers/controlBar';\nimport { sGetAllDashboards } from '../../reducers/dashboards';\nimport { sGetFilterName } from '../../reducers/dashboardsFilter';\nimport { sGetSelectedId } from '../../reducers/selected';\nimport { acSetControlBarUserRows } from '../../actions/controlBar';\nimport { acSetFilterName } from '../../actions/dashboardsFilter';\nimport { orObject, orArray } from '../../modules/util';\nimport { apiPostControlBarRows } from '../../api/controlBar';\n\nimport classes from './styles/DashboardsBar.module.css';\n\nexport const MAX_ROW_COUNT = 10;\n\nexport class DashboardsBar extends Component {\n    state = {\n        rows: MIN_ROW_COUNT,\n    };\n\n    setInitialDashboardState = rows => {\n        this.setState({ rows, isMaxHeight: rows === MAX_ROW_COUNT });\n    };\n\n    componentDidMount() {\n        this.setInitialDashboardState(this.props.userRows);\n    }\n\n    componentWillReceiveProps(nextProps) {\n        this.setInitialDashboardState(nextProps.userRows);\n    }\n\n    onChangeHeight = newHeight => {\n        const adjustedHeight = newHeight - 52; // don't rush the transition to a bigger row count\n        const newRows = Math.max(\n            MIN_ROW_COUNT,\n            getNumRowsFromHeight(adjustedHeight)\n        );\n\n        if (newRows !== this.state.rows) {\n            const newRowCount = Math.min(newRows, MAX_ROW_COUNT);\n\n            this.props.onChangeHeight(newRowCount);\n        }\n    };\n\n    onEndDrag = () => {\n        return apiPostControlBarRows(this.state.rows);\n    };\n\n    onToggleMaxHeight = () => {\n        const rows =\n            this.state.rows === MAX_ROW_COUNT\n                ? this.props.userRows\n                : MAX_ROW_COUNT;\n\n        this.setState({ rows, isMaxHeight: !this.state.isMaxHeight });\n    };\n\n    onSelectDashboard = () => {\n        this.props.history.push(`/${this.props.dashboards[0].id}`);\n    };\n\n    render() {\n        const { dashboards, name, selectedId, onChangeFilterName } = this.props;\n\n        const rowCount = this.state.isMaxHeight\n            ? MAX_ROW_COUNT\n            : this.state.rows;\n        const controlBarHeight = getControlBarHeight(rowCount);\n        const contentWrapperStyle = {\n            padding: `${FIRST_ROW_PADDING_HEIGHT}px 6px 0 6px`,\n            overflowY: this.state.isMaxHeight ? 'auto' : 'hidden',\n            height: getRowsHeight(rowCount) + FIRST_ROW_PADDING_HEIGHT,\n        };\n\n        return (\n            <ControlBar\n                height={controlBarHeight}\n                onChangeHeight={this.onChangeHeight}\n                onEndDrag={this.onEndDrag}\n                editMode={false}\n            >\n                <div style={contentWrapperStyle}>\n                    <div className={classes.leftControls}>\n                        <Link\n                            style={{\n                                display: 'inline-block',\n                                textDecoration: 'none',\n                                marginRight: 10,\n                            }}\n                            to={'/new'}\n                        >\n                            <AddCircleIcon />\n                        </Link>\n                        <Filter\n                            name={name}\n                            onChangeName={onChangeFilterName}\n                            onKeypressEnter={this.onSelectDashboard}\n                        />\n                    </div>\n                    {orArray(dashboards).map(dashboard => (\n                        <Chip\n                            key={dashboard.id}\n                            label={dashboard.displayName}\n                            starred={dashboard.starred}\n                            dashboardId={dashboard.id}\n                            selected={dashboard.id === selectedId}\n                        />\n                    ))}\n                </div>\n                <ShowMoreButton\n                    onClick={this.onToggleMaxHeight}\n                    isMaxHeight={this.state.isMaxHeight}\n                    disabled={this.props.userRows === MAX_ROW_COUNT}\n                />\n            </ControlBar>\n        );\n    }\n}\n\nconst mapStateToProps = state => ({\n    dashboards: sGetAllDashboards(state),\n    name: sGetFilterName(state),\n    userRows: sGetControlBarUserRows(state),\n    selectedId: sGetSelectedId(state),\n});\n\nconst mapDispatchToProps = {\n    onChangeHeight: acSetControlBarUserRows,\n    onChangeFilterName: acSetFilterName,\n};\nconst mergeProps = (stateProps, dispatchProps, ownProps) => {\n    const dashboards = Object.values(orObject(stateProps.dashboards));\n    const displayDashboards = arraySort(\n        dashboards.filter(d =>\n            d.displayName.toLowerCase().includes(stateProps.name.toLowerCase())\n        ),\n        'ASC',\n        'displayName'\n    );\n\n    return {\n        ...stateProps,\n        ...ownProps,\n        ...dispatchProps,\n        dashboards: [\n            ...displayDashboards.filter(d => d.starred),\n            ...displayDashboards.filter(d => !d.starred),\n        ],\n    };\n};\n\nexport default withRouter(\n    connect(\n        mapStateToProps,\n        mapDispatchToProps,\n        mergeProps\n    )(DashboardsBar)\n);\n","import {\n    SET_DASHBOARDS_FILTER_NAME,\n    SET_DASHBOARDS_FILTER_OWNER,\n    SET_DASHBOARDS_FILTER_ORDER,\n} from '../reducers/dashboardsFilter';\n\n// actions\n\nexport const acSetFilterName = value => ({\n    type: SET_DASHBOARDS_FILTER_NAME,\n    value,\n});\n\nexport const acSetFilterOwner = value => ({\n    type: SET_DASHBOARDS_FILTER_OWNER,\n    value,\n});\n\nexport const acSetFilterOrder = value => ({\n    type: SET_DASHBOARDS_FILTER_ORDER,\n    value,\n});\n","import React from 'react';\nimport { connect } from 'react-redux';\n\nimport {\n    getTopOffset,\n    MIN_ROW_COUNT,\n} from '../ControlBar/controlBarDimensions';\nimport { sGetControlBarUserRows } from '../../reducers/controlBar';\n\nconst DashboardVerticalOffset = props => {\n    const rows = props.editMode ? MIN_ROW_COUNT : props.userRows;\n    const marginTop = getTopOffset(rows);\n\n    return <div className=\"page-container-top-margin\" style={{ marginTop }} />;\n};\n\nconst mapStateToProps = state => ({\n    userRows: sGetControlBarUserRows(state),\n});\n\nexport default connect(mapStateToProps)(DashboardVerticalOffset);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { MenuItem, colors } from '@dhis2/ui-core';\n\nconst HeaderMenuItem = ({ title }) => (\n    <MenuItem\n        dense\n        key={title}\n        disabled\n        label={\n            <p style={{ color: colors.grey800, fontWeight: '600' }}>{title}</p>\n        }\n    />\n);\n\nHeaderMenuItem.propTypes = {\n    title: PropTypes.string.isRequired,\n};\n\nexport default HeaderMenuItem;\n","import React from 'react';\nimport { colors } from '@dhis2/ui-core';\n\nconst LaunchIcon = ({ className }) => (\n    <svg\n        className={className}\n        xmlns=\"http://www.w3.org/2000/svg\"\n        width=\"12\"\n        height=\"12\"\n        fill={colors.grey600}\n        viewBox=\"0 0 24 24\"\n    >\n        <path d=\"M0 0h24v24H0z\" fill=\"none\" />\n        <path d=\"M19 19H5V5h7V3H5c-1.11 0-2 .9-2 2v14c0 1.1.89 2 2 2h14c1.1 0 2-.9 2-2v-7h-2v7zM14 3v2h3.59l-9.83 9.83 1.41 1.41L19 6.41V10h2V3h-7z\" />\n    </svg>\n);\n\nexport default LaunchIcon;\n","import React from 'react';\nimport { MenuItem, colors } from '@dhis2/ui-core';\nimport i18n from '@dhis2/d2-i18n';\n\nimport { getItemIcon } from '../../modules/itemTypes';\nimport LaunchIcon from '../../icons/Launch';\n\nimport classes from './styles/ContentMenuItem.module.css';\n\nconst LaunchLink = ({ url }) => (\n    <a\n        onClick={e => e.stopPropagation()}\n        className={classes.launchLink}\n        target=\"_blank\"\n        rel=\"noopener noreferrer\"\n        href={url}\n    >\n        <LaunchIcon />\n    </a>\n);\n\nconst InsertButton = () => (\n    <button className={classes.buttonInsert}>{i18n.t('Insert')}</button>\n);\n\nconst ContentMenuItem = ({ type, name, onInsert, url }) => {\n    const ItemIcon = getItemIcon(type);\n\n    return (\n        <MenuItem\n            dense\n            onClick={onInsert}\n            label={\n                <div className={classes.menuItem}>\n                    <div className={classes.label}>\n                        <ItemIcon\n                            style={{ margin: '6px', fill: colors.grey600 }}\n                        />\n                        <span>{name}</span>\n                        {url ? <LaunchLink url={url} /> : null}\n                    </div>\n                    <InsertButton />\n                </div>\n            }\n        />\n    );\n};\n\nexport default ContentMenuItem;\n","import i18n from '@dhis2/d2-i18n';\nimport {\n    spacerContent,\n    REPORT_TABLE,\n    CHART,\n    MAP,\n    EVENT_CHART,\n    EVENT_REPORT,\n    USERS,\n    REPORTS,\n    RESOURCES,\n    APP,\n    MESSAGES,\n    TEXT,\n    SPACER,\n} from '../../modules/itemTypes';\n\nexport const singleItems = [\n    {\n        id: 'additional',\n        header: i18n.t('Additional items'),\n        items: [\n            {\n                type: TEXT,\n                name: i18n.t('Text box'),\n                content: '',\n            },\n            {\n                type: MESSAGES,\n                name: i18n.t('Messages'),\n                content: 'true',\n            },\n            {\n                type: SPACER,\n                name: i18n.t('Spacer'),\n                content: spacerContent,\n            },\n        ],\n    },\n];\n\n// categorizedItems are grouped in the item selector menu\nexport const categorizedItems = [\n    REPORT_TABLE,\n    CHART,\n    MAP,\n    EVENT_REPORT,\n    EVENT_CHART,\n    USERS,\n    REPORTS,\n    RESOURCES,\n    APP,\n];\n\n// listItemTypes are included in a single dashboard item\nexport const listItemTypes = [REPORTS, RESOURCES, USERS];\n","import React, { Component, Fragment } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport i18n from '@dhis2/d2-i18n';\nimport { MenuItem, Divider } from '@dhis2/ui-core';\n\nimport HeaderMenuItem from './HeaderMenuItem';\nimport ContentMenuItem from './ContentMenuItem';\n\nimport { tAddListItemContent } from './actions';\nimport { acAddDashboardItem } from '../../actions/editDashboard';\nimport { getItemUrl, APP } from '../../modules/itemTypes';\nimport { categorizedItems, listItemTypes } from './selectableItems';\n\nimport classes from './styles/CategorizedMenuGroup.module.css';\n\nclass CategorizedMenuGroup extends Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            seeMore: false,\n        };\n    }\n\n    addItem = item => () => {\n        const { type, acAddDashboardItem, tAddListItemContent } = this.props;\n\n        if (type === APP) {\n            acAddDashboardItem({ type, content: item.key });\n        } else {\n            const newItem = {\n                id: item.id,\n                name: item.displayName || item.name,\n            };\n\n            if (listItemTypes.includes(type)) {\n                tAddListItemContent(type, newItem);\n            } else {\n                acAddDashboardItem({ type, content: newItem });\n            }\n        }\n    };\n\n    toggleSeeMore = () => {\n        this.setState({ seeMore: !this.state.seeMore });\n\n        this.props.onChangeItemsLimit(this.props.type);\n    };\n\n    render() {\n        const { title, type, items, hasMore } = this.props;\n        return (\n            <Fragment>\n                <HeaderMenuItem title={title} />\n                {items.map(item => {\n                    const itemUrl = getItemUrl(type, item, this.context.d2);\n                    return (\n                        <ContentMenuItem\n                            key={item.id || item.key}\n                            type={type}\n                            name={item.displayName || item.name}\n                            onInsert={this.addItem(item)}\n                            url={itemUrl}\n                        />\n                    );\n                })}\n                {hasMore ? (\n                    <MenuItem\n                        dense\n                        key={`showmore${title}`}\n                        onClick={this.toggleSeeMore}\n                        label={\n                            <button className={classes.showMoreButton}>\n                                {this.state.seeMore\n                                    ? i18n.t('Show fewer')\n                                    : i18n.t('Show more')}\n                            </button>\n                        }\n                    />\n                ) : null}\n                <Divider margin=\"8px 0px\" />\n            </Fragment>\n        );\n    }\n}\n\nCategorizedMenuGroup.propTypes = {\n    type: PropTypes.oneOf(categorizedItems).isRequired,\n    title: PropTypes.string.isRequired,\n    items: PropTypes.array.isRequired,\n    onChangeItemsLimit: PropTypes.func.isRequired,\n};\n\nCategorizedMenuGroup.contextTypes = {\n    d2: PropTypes.object.isRequired,\n};\n\nexport default connect(\n    null,\n    {\n        acAddDashboardItem,\n        tAddListItemContent,\n    }\n)(CategorizedMenuGroup);\n","import { sGetEditDashboardRoot } from '../../reducers/editDashboard';\nimport { itemTypeMap } from '../../modules/itemTypes';\nimport {\n    acAddDashboardItem,\n    acUpdateDashboardItem,\n} from '../../actions/editDashboard';\n\nexport const tAddListItemContent = (type, content) => (dispatch, getState) => {\n    const state = getState();\n    const listItemType = itemTypeMap[type].propName;\n    const dashboardItems = sGetEditDashboardRoot(state).dashboardItems;\n    const dashboardItemIndex = dashboardItems.findIndex(\n        item => item.type === type\n    );\n    let dashboardItem;\n\n    // Reports/Resources/Users dashboard item type already present in dashboard\n    if (dashboardItemIndex > -1) {\n        dashboardItem = dashboardItems[dashboardItemIndex];\n        dashboardItem[listItemType].push(content);\n\n        dispatch(acUpdateDashboardItem(dashboardItem));\n    } else {\n        dashboardItem = {\n            type: type,\n            content: [content],\n        };\n\n        dispatch(acAddDashboardItem(dashboardItem));\n    }\n};\n","import React, { Fragment } from 'react';\nimport { connect } from 'react-redux';\n\nimport HeaderMenuItem from './HeaderMenuItem';\nimport ContentMenuItem from './ContentMenuItem';\nimport { acAddDashboardItem } from '../../actions/editDashboard';\n\nexport const SinglesMenuGroup = ({ acAddDashboardItem, category }) => {\n    const addToDashboard = ({ type, content }) => () => {\n        acAddDashboardItem({ type, content });\n    };\n\n    return (\n        <Fragment>\n            <HeaderMenuItem title={category.header} />\n            {category.items.map(item => (\n                <ContentMenuItem\n                    key={item.type}\n                    type={item.type}\n                    name={item.name}\n                    onInsert={addToDashboard(item)}\n                />\n            ))}\n        </Fragment>\n    );\n};\n\nexport default connect(\n    null,\n    { acAddDashboardItem }\n)(SinglesMenuGroup);\n","import React, { Fragment } from 'react';\nimport PropTypes from 'prop-types';\nimport i18n from '@dhis2/d2-i18n';\nimport Popover from '@material-ui/core/Popover';\nimport { InputField, Menu } from '@dhis2/ui-core';\n\nimport CategorizedMenuGroup from './CategorizedMenuGroup';\nimport SinglesMenuGroup from './SinglesMenuGroup';\nimport { singleItems, categorizedItems } from './selectableItems';\nimport { itemTypeMap } from '../../modules/itemTypes';\n\nimport './styles/ItemSelector.css';\n\nconst ItemSearchField = props => (\n    <InputField\n        filled\n        name=\"Dashboard item search\"\n        label={i18n.t('Search for items to add to this dashboard')}\n        type=\"text\"\n        onChange={props.onChange}\n        onFocus={props.onFocus}\n        value={props.value}\n    />\n);\n\nclass ItemSelector extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            anchorEl: null,\n            open: false,\n            maxOptions: new Set(),\n            items: undefined,\n            filter: '',\n        };\n    }\n\n    closeList = () => {\n        this.setState({ open: false, filter: '' });\n    };\n\n    openList = event => {\n        this.fetchItems();\n\n        this.setState({\n            anchorEl: event.currentTarget,\n            open: true,\n        });\n    };\n\n    setFilter = event => {\n        this.setState({ filter: event.target.value }, this.fetchItems);\n    };\n\n    getCategorizedMenuGroups = () =>\n        categorizedItems\n            .filter(type => {\n                const itemType = itemTypeMap[type];\n                return (\n                    this.state.items && this.state.items[itemType.endPointName]\n                );\n            })\n            .map(type => {\n                const itemType = itemTypeMap[type];\n                const allItems = this.state.items[itemType.endPointName];\n                const hasMore = allItems.length > 5;\n                const items = this.state.maxOptions.has(itemType.id)\n                    ? allItems\n                    : allItems.slice(0, 5);\n\n                return (\n                    <CategorizedMenuGroup\n                        key={type}\n                        type={type}\n                        title={itemType.pluralTitle}\n                        items={items}\n                        onChangeItemsLimit={this.fetchItems}\n                        hasMore={hasMore}\n                    />\n                );\n            });\n\n    getSinglesMenuGroups = () =>\n        singleItems.map(category => (\n            <SinglesMenuGroup key={category.id} category={category} />\n        ));\n\n    getMenuGroups = () =>\n        this.getCategorizedMenuGroups().concat(this.getSinglesMenuGroups());\n\n    fetchItems = async type => {\n        if (type) {\n            const maxOptions = this.state.maxOptions;\n\n            if (maxOptions.has(type)) {\n                maxOptions.delete(type);\n            } else {\n                maxOptions.add(type);\n            }\n\n            this.setState({ maxOptions });\n        } else {\n            this.setState({\n                maxOptions: new Set(),\n            });\n        }\n\n        let queryString = '?count=6';\n        if ([...this.state.maxOptions.values()].length) {\n            queryString +=\n                '&max=' + [...this.state.maxOptions.values()].join('&max=');\n        }\n\n        const filter = this.state.filter ? `/${this.state.filter}` : '';\n\n        this.context.d2.Api.getApi()\n            .get(`dashboards/q${filter}${queryString}`)\n            .then(response => this.setState({ items: response }))\n            .catch(console.error);\n    };\n\n    render() {\n        return (\n            <Fragment>\n                <ItemSearchField\n                    value={this.state.filter}\n                    onChange={this.setFilter}\n                    onFocus={this.openList}\n                />\n                <Popover\n                    className=\"dashboard-item-selector\"\n                    open={this.state.open}\n                    onClose={this.closeList}\n                    anchorEl={this.state.anchorEl}\n                    anchorOrigin={{ horizontal: 'left', vertical: 'bottom' }}\n                    transformOrigin={{ horizontal: 'left', vertical: 'top' }}\n                    style={{ height: '70vh' }}\n                    PaperProps={{ style: { width: '700px' } }}\n                    disableAutoFocus={true}\n                    disableRestoreFocus={true}\n                >\n                    <Menu>{this.getMenuGroups()}</Menu>\n                </Popover>\n            </Fragment>\n        );\n    }\n}\n\nItemSelector.contextTypes = {\n    d2: PropTypes.object.isRequired,\n};\n\nexport default ItemSelector;\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport i18n from '@dhis2/d2-i18n';\nimport MuiInputField from '@material-ui/core/TextField';\nimport { InputField } from '@dhis2/ui-core';\n\nimport ItemSelector from '../ItemSelector/ItemSelector';\nimport {\n    acSetDashboardTitle,\n    acSetDashboardDescription,\n} from '../../actions/editDashboard';\nimport { orObject } from '../../modules/util';\nimport { sGetEditDashboardRoot } from '../../reducers/editDashboard';\n\nconst styles = {\n    section: { display: 'flex', justifyContent: 'space-between' },\n    titleDescription: {\n        flex: '3',\n        marginRight: '50px',\n    },\n    title: {\n        display: 'block',\n        clear: 'both',\n    },\n    description: {\n        display: 'block',\n        clear: 'both',\n        marginTop: '15px',\n    },\n    underline: {\n        '&::before': {\n            borderBottom: `none`,\n        },\n        '&:hover::before': {\n            borderBottom: `none!important`,\n        },\n    },\n    input: {\n        backgroundColor: 'rgba(0, 0, 10, 0.05)',\n        borderRadius: '4px',\n        width: '100%',\n        '&:hover': {\n            backgroundColor: 'rgba(0, 0, 10, 0.08)',\n        },\n    },\n    itemSelector: {\n        flex: '2',\n        position: 'relative',\n    },\n};\n\nexport const EditTitleBar = ({\n    name,\n    description,\n    onChangeTitle,\n    onChangeDescription,\n    classes,\n}) => {\n    const updateTitle = e => {\n        onChangeTitle(e.target.value);\n    };\n\n    const updateDescription = e => {\n        onChangeDescription(e.target.value);\n    };\n\n    return (\n        <section className={classes.section}>\n            <div className={classes.titleDescription}>\n                <InputField\n                    className={classes.title}\n                    filled\n                    name=\"Dashboard title input\"\n                    label={i18n.t('Dashboard title')}\n                    type=\"text\"\n                    onChange={updateTitle}\n                    value={name}\n                />\n                <MuiInputField\n                    className={classes.description}\n                    name=\"Dashboard description input\"\n                    label={i18n.t('Dashboard description')}\n                    onChange={updateDescription}\n                    value={description}\n                    variant=\"filled\"\n                    multiline\n                    InputProps={{\n                        classes: {\n                            root: classes.input,\n                            underline: classes.underline,\n                        },\n                    }}\n                />\n            </div>\n            <div className={classes.itemSelector}>\n                <ItemSelector />\n            </div>\n        </section>\n    );\n};\n\nconst mapStateToProps = state => {\n    const selectedDashboard = orObject(sGetEditDashboardRoot(state));\n\n    return {\n        name: selectedDashboard.name,\n        description: selectedDashboard.description,\n    };\n};\n\nconst mapDispatchToProps = {\n    onChangeTitle: acSetDashboardTitle,\n    onChangeDescription: acSetDashboardDescription,\n};\n\nexport default connect(\n    mapStateToProps,\n    mapDispatchToProps\n)(withStyles(styles)(EditTitleBar));\n\nEditTitleBar.propTypes = {\n    name: PropTypes.string,\n    description: PropTypes.string,\n    onChangeTitle: PropTypes.func.isRequired,\n    onChangeDescription: PropTypes.func.isRequired,\n};\n\nEditTitleBar.defaultProps = {\n    name: '',\n    description: '',\n};\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nimport { Button } from '@dhis2/ui-core';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\n\nimport i18n from '@dhis2/d2-i18n';\n\nimport {\n    PeriodDimension,\n    DynamicDimension,\n    OrgUnitDimension,\n    FIXED_DIMENSIONS,\n} from '@dhis2/analytics';\n\nconst peId = FIXED_DIMENSIONS.pe.id;\nconst ouId = FIXED_DIMENSIONS.ou.id;\n\nclass FilterDialog extends Component {\n    onConfirm = id => () => this.props.onConfirm(id);\n\n    dialogContent() {\n        const { displayNameProperty, dimension, selectedItems } = this.props;\n        const dialogId = dimension.id;\n\n        const commonProps = {\n            d2: this.context.d2,\n            onSelect: this.props.onSelect,\n            onDeselect: this.props.onDeselect,\n            onReorder: this.props.onReorder,\n        };\n\n        switch (dialogId) {\n            case peId: {\n                return (\n                    <PeriodDimension\n                        selectedPeriods={selectedItems}\n                        {...commonProps}\n                    />\n                );\n            }\n            case ouId:\n                return (\n                    <OrgUnitDimension\n                        displayNameProperty={displayNameProperty}\n                        ouItems={selectedItems}\n                        {...commonProps}\n                    />\n                );\n            default:\n                return (\n                    <DynamicDimension\n                        selectedItems={selectedItems}\n                        dialogId={dialogId}\n                        dialogTitle={dimension.name}\n                        {...commonProps}\n                    />\n                );\n        }\n    }\n\n    render() {\n        const { dimension, onClose } = this.props;\n        const dialogId = dimension.id;\n\n        return (\n            <Dialog\n                open={!!dialogId}\n                maxWidth=\"lg\"\n                disableEnforceFocus\n                onClose={onClose}\n            >\n                {dialogId && this.dialogContent()}\n                <DialogActions>\n                    <Button kind=\"secondary\" onClick={onClose}>\n                        {i18n.t('Cancel')}\n                    </Button>\n                    <Button kind=\"primary\" onClick={this.onConfirm(dialogId)}>\n                        {i18n.t('Confirm')}\n                    </Button>\n                </DialogActions>\n            </Dialog>\n        );\n    }\n}\n\nFilterDialog.propTypes = {\n    displayNameProperty: PropTypes.string,\n    dimension: PropTypes.object,\n    selectedItems: PropTypes.array,\n    onSelect: PropTypes.func,\n    onDeselect: PropTypes.func,\n    onReorder: PropTypes.func,\n    onClose: PropTypes.func,\n    onConfirm: PropTypes.func,\n};\n\nFilterDialog.contextTypes = {\n    d2: PropTypes.object,\n};\n\nexport default FilterDialog;\n","export const SET_ACTIVE_MODAL_DIMENSION = 'SET_ACTIVE_MODAL_DIMENSION';\nexport const CLEAR_ACTIVE_MODAL_DIMENSION = 'CLEAR_ACTIVE_MODAL_DIMENSION';\n\nexport const DEFAULT_STATE_ACTIVE_MODAL_DIMENSION = {};\n\nexport default (state = DEFAULT_STATE_ACTIVE_MODAL_DIMENSION, action) => {\n    switch (action.type) {\n        case SET_ACTIVE_MODAL_DIMENSION: {\n            return action.value;\n        }\n        case CLEAR_ACTIVE_MODAL_DIMENSION: {\n            return DEFAULT_STATE_ACTIVE_MODAL_DIMENSION;\n        }\n        default:\n            return state;\n    }\n};\n\nexport const sGetActiveModalDimension = state => state.activeModalDimension;\n","import {\n    SET_ACTIVE_MODAL_DIMENSION,\n    CLEAR_ACTIVE_MODAL_DIMENSION,\n} from '../reducers/activeModalDimension';\n\nexport const acSetActiveModalDimension = value => ({\n    type: SET_ACTIVE_MODAL_DIMENSION,\n    value,\n});\n\nexport const acClearActiveModalDimension = () => ({\n    type: CLEAR_ACTIVE_MODAL_DIMENSION,\n});\n","import React, { Component, Fragment } from 'react';\nimport { connect } from 'react-redux';\nimport Popover from '@material-ui/core/Popover';\nimport ArrowDropDownIcon from '@material-ui/icons/ArrowDropDown';\nimport { withTheme } from '@material-ui/core/styles';\n\nimport i18n from '@dhis2/d2-i18n';\nimport { DimensionsPanel } from '@dhis2/analytics';\n\nimport { Button } from '@dhis2/ui-core';\nimport FilterDialog from './FilterDialog';\n\nimport { sGetSettingsDisplayNameProperty } from '../../reducers/settings';\nimport { sGetActiveModalDimension } from '../../reducers/activeModalDimension';\nimport { sGetDimensions } from '../../reducers/dimensions';\nimport { sGetFiltersKeys } from '../../reducers/itemFilters';\nimport { sGetEditItemFiltersRoot } from '../../reducers/editItemFilters';\nimport { acAddItemFilter, acRemoveItemFilter } from '../../actions/itemFilters';\nimport {\n    acRemoveEditItemFilter,\n    acSetEditItemFilters,\n} from '../../actions/editItemFilters';\nimport {\n    acClearActiveModalDimension,\n    acSetActiveModalDimension,\n} from '../../actions/activeModalDimension';\n\nclass FilterSelector extends Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            anchorEl: null,\n        };\n    }\n\n    openPanel = event => {\n        this.setState({ anchorEl: event.currentTarget });\n    };\n\n    closePanel = () => {\n        this.setState({ anchorEl: null });\n    };\n\n    closeDialog = () => {\n        this.setState({ anchorEl: null });\n\n        this.props.clearActiveModalDimension();\n    };\n\n    selectDimension = id => {\n        this.props.setActiveModalDimension({\n            id,\n            name: this.props.dimensions[id].name,\n        });\n    };\n\n    onSelectItems = ({ dimensionId, items }) => {\n        this.props.setEditItemFilters({\n            ...this.props.selectedItems,\n            [dimensionId]: items,\n        });\n    };\n\n    onDeselectItems = ({ dimensionId, itemIdsToRemove }) => {\n        const oldList = this.props.selectedItems[dimensionId] || [];\n        const newList = oldList.filter(\n            item => !itemIdsToRemove.includes(item.id)\n        );\n\n        if (newList.length) {\n            this.props.setEditItemFilters({\n                ...this.props.selectedItems,\n                [dimensionId]: newList,\n            });\n        } else {\n            this.props.removeEditItemFilter(dimensionId);\n        }\n    };\n\n    onReorderItems = ({ dimensionId, itemIds }) => {\n        const oldList = this.props.selectedItems[dimensionId] || [];\n        const reorderedList = itemIds.map(id =>\n            oldList.find(item => item.id === id)\n        );\n\n        this.props.setEditItemFilters({\n            ...this.props.selectedItems,\n            [dimensionId]: reorderedList,\n        });\n    };\n\n    saveFilter = id => {\n        const filterItems = this.props.selectedItems[id];\n\n        if (filterItems && filterItems.length) {\n            this.props.addItemFilter({\n                id,\n                value: [...filterItems],\n            });\n        } else {\n            this.props.removeItemFilter(id);\n        }\n\n        this.closeDialog();\n    };\n\n    render() {\n        const {\n            theme,\n            displayNameProperty,\n            dimension,\n            dimensions,\n            selectedDimensions,\n            selectedItems,\n        } = this.props;\n\n        return (\n            <Fragment>\n                <Button onClick={this.openPanel}>\n                    {i18n.t('Add filter')}\n                    <ArrowDropDownIcon />\n                </Button>\n                <Popover\n                    open={Boolean(this.state.anchorEl)}\n                    anchorEl={this.state.anchorEl}\n                    anchorOrigin={{ vertical: 'bottom', horizontal: 'left' }}\n                    onClose={this.closePanel}\n                    style={{\n                        height: '100%',\n                        fontFamily: theme.typography.fontFamily,\n                    }}\n                >\n                    <DimensionsPanel\n                        dimensions={dimensions}\n                        onDimensionClick={this.selectDimension}\n                        selectedIds={selectedDimensions}\n                    />\n                </Popover>\n                {dimension ? (\n                    <FilterDialog\n                        displayNameProperty={displayNameProperty}\n                        dimension={dimension}\n                        selectedItems={selectedItems[dimension.id] || []}\n                        onSelect={this.onSelectItems}\n                        onDeselect={this.onDeselectItems}\n                        onReorder={this.onReorderItems}\n                        onClose={this.closeDialog}\n                        onConfirm={this.saveFilter}\n                    />\n                ) : null}\n            </Fragment>\n        );\n    }\n}\n\nconst mapStateToProps = state => ({\n    displayNameProperty: sGetSettingsDisplayNameProperty(state),\n    dimension: sGetActiveModalDimension(state),\n    dimensions: sGetDimensions(state),\n    selectedDimensions: sGetFiltersKeys(state),\n    selectedItems: sGetEditItemFiltersRoot(state),\n});\n\nexport default connect(\n    mapStateToProps,\n    {\n        clearActiveModalDimension: acClearActiveModalDimension,\n        setActiveModalDimension: acSetActiveModalDimension,\n        addItemFilter: acAddItemFilter,\n        removeItemFilter: acRemoveItemFilter,\n        removeEditItemFilter: acRemoveEditItemFilter,\n        setEditItemFilters: acSetEditItemFilters,\n    }\n)(withTheme()(FilterSelector));\n","import React, { Component } from 'react';\nimport InfoOutlineIcon from '@material-ui/icons/InfoOutlined';\nimport { colors } from '@dhis2/ui-core';\n\nclass Info extends Component {\n    show = false;\n\n    toggle() {\n        this.show = !this.show;\n        return this.show;\n    }\n\n    render() {\n        return (\n            <div onClick={() => this.props.onClick(this.toggle())}>\n                <InfoOutlineIcon style={{ fill: colors.grey600 }} />\n            </div>\n        );\n    }\n}\n\nexport default Info;\n","import React, { Component, Fragment } from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport { Link } from 'react-router-dom';\nimport i18n from '@dhis2/d2-i18n';\nimport SharingDialog from '@dhis2/d2-ui-sharing-dialog';\nimport Star from '@material-ui/icons/Star';\nimport StarBorder from '@material-ui/icons/StarBorder';\n\nimport { orObject } from '../../modules/util';\nimport { tStarDashboard } from '../../actions/dashboards';\nimport { acSetSelectedShowDescription } from '../../actions/selected';\nimport FilterSelector from '../ItemFilter/FilterSelector';\nimport { Button } from '@dhis2/ui-core';\nimport Info from './Info';\nimport {\n    sGetSelectedId,\n    sGetSelectedShowDescription,\n} from '../../reducers/selected';\nimport {\n    sGetDashboardById,\n    sGetDashboardItems,\n} from '../../reducers/dashboards';\nimport { colors } from '@dhis2/ui-core';\n\nconst NO_DESCRIPTION = i18n.t('No description');\n\nconst styles = {\n    actions: {\n        display: 'flex',\n        alignItems: 'center',\n        marginLeft: '20px',\n    },\n    starIcon: {\n        fill: colors.grey600,\n    },\n    textButton: {\n        minWidth: '30px',\n        top: '1px',\n    },\n    editLink: {\n        display: 'inline-block',\n        verticalAlign: 'top',\n        textDecoration: 'none',\n        marginRight: '4px',\n    },\n    titleBar: {\n        display: 'flex',\n        alignItems: 'flex-start',\n    },\n    titleBarIcon: {\n        marginLeft: 5,\n        position: 'relative',\n        top: 1,\n        cursor: 'pointer',\n    },\n};\n\nclass ViewTitleBar extends Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            sharingDialogIsOpen: false,\n        };\n    }\n\n    toggleSharingDialog = () =>\n        this.setState({ sharingDialogIsOpen: !this.state.sharingDialogIsOpen });\n\n    render() {\n        const {\n            id,\n            name,\n            description,\n            access,\n            style,\n            showDescription,\n            starred,\n            onStarClick,\n            onInfoClick,\n            classes,\n        } = this.props;\n\n        const titleStyle = Object.assign({}, style.title, {\n            cursor: 'default',\n            userSelect: 'text',\n            top: '7px',\n        });\n\n        const StarIcon = starred ? Star : StarBorder;\n\n        return (\n            <Fragment>\n                <div className={classes.titleBar}>\n                    <span style={titleStyle}>{name}</span>\n                    <div className={classes.actions}>\n                        <div\n                            className={classes.titleBarIcon}\n                            onClick={onStarClick}\n                        >\n                            <StarIcon className={classes.starIcon} />\n                        </div>\n                        <div className={classes.titleBarIcon}>\n                            <Info onClick={onInfoClick} />\n                        </div>\n                        <div style={{ marginLeft: '10px' }}>\n                            {access.update ? (\n                                <Link\n                                    className={classes.editLink}\n                                    to={`/${id}/edit`}\n                                >\n                                    <Button>{i18n.t('Edit')}</Button>\n                                </Link>\n                            ) : null}\n                            {access.manage ? (\n                                <span style={{ marginRight: '4px' }}>\n                                    <Button onClick={this.toggleSharingDialog}>\n                                        {i18n.t('Share')}\n                                    </Button>\n                                </span>\n                            ) : null}\n                            <span style={{ marginRight: '4px' }}>\n                                <FilterSelector />\n                            </span>\n                        </div>\n                    </div>\n                </div>\n                {showDescription ? (\n                    <div\n                        className=\"dashboard-description\"\n                        style={Object.assign(\n                            { paddingTop: '5px', paddingBottom: '5px' },\n                            style.description,\n                            !description ? { color: '#888' } : {}\n                        )}\n                    >\n                        {description || NO_DESCRIPTION}\n                    </div>\n                ) : null}\n                {id ? (\n                    <SharingDialog\n                        d2={this.context.d2}\n                        id={id}\n                        type=\"dashboard\"\n                        open={this.state.sharingDialogIsOpen}\n                        onRequestClose={this.toggleSharingDialog}\n                    />\n                ) : null}\n            </Fragment>\n        );\n    }\n}\n\nconst mapStateToProps = state => {\n    const id = sGetSelectedId(state);\n    const dashboard = orObject(sGetDashboardById(state, id));\n\n    return {\n        id,\n        name: dashboard.displayName,\n        description: dashboard.displayDescription,\n        dashboardItems: sGetDashboardItems(state),\n        showDescription: sGetSelectedShowDescription(state),\n        starred: dashboard.starred,\n        access: orObject(dashboard.access),\n    };\n};\n\nconst mergeProps = (stateProps, dispatchProps, ownProps) => {\n    const { id, starred, showDescription } = stateProps;\n    const { dispatch } = dispatchProps;\n\n    return {\n        ...stateProps,\n        ...ownProps,\n        onStarClick: () => dispatch(tStarDashboard(id, !starred)),\n        onInfoClick: () =>\n            dispatch(acSetSelectedShowDescription(!showDescription)),\n    };\n};\n\nexport default connect(\n    mapStateToProps,\n    null,\n    mergeProps\n)(withStyles(styles)(ViewTitleBar));\n\nViewTitleBar.propTypes = {\n    id: PropTypes.string,\n    name: PropTypes.string,\n    description: PropTypes.string,\n    starred: PropTypes.bool,\n    showDescription: PropTypes.bool,\n    onInfoClick: PropTypes.func,\n};\n\nViewTitleBar.defaultProps = {\n    name: '',\n    description: '',\n    starred: false,\n    showDescription: false,\n    onInfoClick: null,\n};\n\nViewTitleBar.contextTypes = {\n    d2: PropTypes.object,\n};\n","import React from 'react';\n\nimport { colors } from '@dhis2/ui-core';\nimport EditTitleBar from './EditTitleBar';\nimport ViewTitleBar from './ViewTitleBar';\n\nimport './TitleBar.css';\n\nconst style = {\n    title: {\n        position: 'relative',\n        fontSize: 21,\n        fontWeight: 500,\n        color: colors.black,\n        minWidth: 50,\n    },\n    description: {\n        fontSize: 14,\n        color: colors.grey800,\n    },\n};\n\nconst TitleBar = ({ edit }) => {\n    return (\n        <div\n            className=\"titlebar-wrapper\"\n            style={{\n                padding: '20px 15px 5px 10px',\n            }}\n        >\n            {edit ? (\n                <EditTitleBar style={style} />\n            ) : (\n                <ViewTitleBar style={style} />\n            )}\n        </div>\n    );\n};\n\nexport default TitleBar;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nimport i18n from '@dhis2/d2-i18n';\n\nimport * as pluginManager from './plugin';\nimport { getBaseUrl, orObject } from '../../../modules/util';\nimport { getGridItemDomId } from '../../ItemGrid/gridUtil';\n\nconst pluginCredentials = d2 => {\n    return {\n        baseUrl: getBaseUrl(d2),\n        auth: d2.Api.getApi().defaultHeaders.Authorization,\n    };\n};\n\nclass DefaultPlugin extends Component {\n    pluginCredentials = null;\n\n    constructor(props, context) {\n        super(props);\n\n        this.d2 = context.d2;\n    }\n\n    shouldPluginReload = prevProps => {\n        // TODO - fix this hack, to handle bug with multiple\n        // rerendering while switching between dashboards.\n        //\n        // To determine if the rendering is happening because of a\n        // dashboard switch, check if the item reference has changed.\n        const reloadAllowed = this.props.item === prevProps.item;\n\n        const filtersChanged = prevProps.itemFilters !== this.props.itemFilters;\n        const vis = orObject(this.props.visualization);\n        const prevVis = orObject(prevProps.visualization);\n        const visChanged =\n            vis.id !== prevVis.id || vis.activeType !== prevVis.activeType;\n\n        return reloadAllowed && (visChanged || filtersChanged);\n    };\n\n    reloadPlugin = prevProps => {\n        if (\n            pluginManager.pluginIsAvailable(\n                this.props.item,\n                this.props.visualization\n            ) &&\n            this.shouldPluginReload(prevProps)\n        ) {\n            const prevVis = orObject(prevProps.visualization);\n            const currentVis = this.props.visualization;\n\n            const useActiveType =\n                currentVis.activeType !== prevVis.activeType ||\n                currentVis.activeType !== this.props.item.type;\n\n            if (\n                useActiveType ||\n                this.props.itemFilters !== prevProps.itemFilters\n            ) {\n                pluginManager.unmount(\n                    this.props.item,\n                    prevVis.activeType || this.props.item.type\n                );\n\n                pluginManager.load(\n                    this.props.item,\n                    this.props.visualization,\n                    this.pluginCredentials,\n                    useActiveType ? currentVis.activeType : null\n                );\n            }\n        }\n    };\n\n    componentDidMount() {\n        this.pluginCredentials = pluginCredentials(this.d2);\n\n        if (\n            pluginManager.pluginIsAvailable(\n                this.props.item,\n                this.props.visualization\n            )\n        ) {\n            pluginManager.load(\n                this.props.item,\n                this.props.visualization,\n                this.pluginCredentials,\n                !this.props.editMode ? this.getActiveType() : null\n            );\n        }\n    }\n\n    componentDidUpdate(prevProps) {\n        this.reloadPlugin(prevProps);\n    }\n\n    getActiveType = () =>\n        this.props.visualization.activeType || this.props.item.type;\n\n    render() {\n        const { classes, item, visualization, style } = this.props;\n        const pluginIsAvailable = pluginManager.pluginIsAvailable(\n            item,\n            visualization\n        );\n\n        return pluginIsAvailable ? (\n            <div id={getGridItemDomId(item.id)} style={style} />\n        ) : (\n            <div className={classes.textDiv}>\n                {i18n.t('Unable to load the plugin for this item')}\n            </div>\n        );\n    }\n}\n\nDefaultPlugin.contextTypes = {\n    d2: PropTypes.object,\n};\n\nDefaultPlugin.propTypes = {\n    style: PropTypes.object,\n    item: PropTypes.object,\n    itemFilters: PropTypes.object,\n    visualization: PropTypes.object,\n};\n\nDefaultPlugin.defaultProps = {\n    style: {},\n    item: {},\n    itemFilters: {},\n    visualization: {},\n};\n\nexport default DefaultPlugin;\n","import React from 'react';\n\nexport const HEADER_HEIGHT = 45;\n\nconst ItemHeader = props => {\n    const { title, actionButtons, editMode } = props;\n\n    return (\n        <div className=\"dashboard-item-header\">\n            <div\n                className=\"dashboard-item-header-title\"\n                style={{ userSelect: editMode ? 'none' : 'text' }}\n            >\n                {title}\n            </div>\n            {actionButtons}\n        </div>\n    );\n};\n\nexport default ItemHeader;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { colors } from '@dhis2/ui-core';\nimport { getId } from './plugin';\nimport InterpretationsComponent from '@dhis2/d2-ui-interpretations';\n\nconst style = {\n    scrollContainer: {\n        overflowY: 'auto',\n        height: '340px',\n    },\n    line: {\n        margin: '-1px 0px 0px',\n        height: '1px',\n        border: 'none',\n        backgroundColor: colors.grey100,\n    },\n};\n\nclass ItemFooter extends Component {\n    render() {\n        const objectId = getId(this.props.item);\n\n        return (\n            <div className=\"dashboard-item-footer\">\n                <hr style={style.line} />\n                <div style={style.scrollContainer}>\n                    <InterpretationsComponent\n                        d2={this.context.d2}\n                        item={this.props.item}\n                        type={this.props.item.type.toLowerCase()}\n                        id={objectId}\n                        appName=\"dashboard\"\n                    />\n                </div>\n            </div>\n        );\n    }\n}\n\nItemFooter.contextTypes = {\n    d2: PropTypes.object.isRequired,\n};\n\nItemFooter.propTypes = {\n    item: PropTypes.object.isRequired,\n};\n\nexport default ItemFooter;\n","import React from 'react';\n\nimport './ItemHeaderButton.css';\n\nconst ItemHeaderButton = ({ disabled, onClick, children, style }) => {\n    return (\n        <button\n            disabled={disabled}\n            type=\"button\"\n            className=\"item-action-button\"\n            style={style}\n            onClick={onClick}\n        >\n            {children}\n        </button>\n    );\n};\n\nexport default ItemHeaderButton;\n","import React, { Component, Fragment } from 'react';\nimport MessageIcon from '@material-ui/icons/Message';\nimport TableIcon from '@material-ui/icons/ViewList';\nimport ChartIcon from '@material-ui/icons/InsertChart';\nimport MapIcon from '@material-ui/icons/Public';\n\nimport { extractFavorite } from './plugin';\nimport ItemHeaderButton from '../ItemHeaderButton';\nimport {\n    VISUALIZATION_TYPE_TABLE,\n    VISUALIZATION_TYPE_CHART,\n    VISUALIZATION_TYPE_MAP,\n    itemTypeMap,\n    CHART,\n    MAP,\n    REPORT_TABLE,\n    EVENT_CHART,\n    EVENT_REPORT,\n    DOMAIN_TYPE_AGGREGATE,\n} from '../../../modules/itemTypes';\nimport { colors, theme } from '@dhis2/ui-core';\n\nconst style = {\n    iconBase: {\n        width: '24px',\n        height: '24px',\n        fill: colors.grey500,\n    },\n    buttonBase: {\n        padding: '5px 6px 3px 6px',\n    },\n    buttonDisabled: {\n        padding: '5px 6px 3px 6px',\n        opacity: 0.5,\n        cursor: 'unset',\n    },\n    toggleFooterPadding: {\n        padding: '7px 6px 1px 6px',\n    },\n    border: {\n        borderRadius: '2px',\n        border: `1px solid ${colors.grey200}`,\n    },\n};\n\nconst baseStyle = {\n    icon: style.iconBase,\n    container: style.buttonBase,\n};\n\nconst disabledStyle = {\n    icon: style.iconBase,\n    container: style.buttonDisabled,\n};\n\nconst activeStyle = {\n    icon: { ...style.iconBase, fill: theme.primary800 },\n    container: {\n        ...style.buttonBase,\n        backgroundColor: theme.primary100,\n    },\n};\n\nconst inactiveStyle = disabled => (disabled ? disabledStyle : baseStyle);\n\nconst tableBtnStyle = (activeType, disabled) =>\n    [REPORT_TABLE, EVENT_REPORT].includes(activeType)\n        ? activeStyle\n        : inactiveStyle(disabled);\n\nconst chartBtnStyle = (activeType, disabled) =>\n    [CHART, EVENT_CHART].includes(activeType)\n        ? activeStyle\n        : inactiveStyle(disabled);\n\nconst mapBtnStyle = (activeType, disabled) =>\n    [MAP].includes(activeType) ? activeStyle : inactiveStyle(disabled);\n\nexport const getItemTypeId = (itemTypeMap, visualizationType, domainType) => {\n    const item = Object.values(itemTypeMap).find(\n        item =>\n            item.visualizationType === visualizationType &&\n            item.domainType === domainType\n    );\n    return item.id;\n};\n\nclass VisualizationItemHeaderButtons extends Component {\n    render() {\n        const {\n            item,\n            onSelectVisualization,\n            activeFooter,\n            activeType,\n            onToggleFooter,\n        } = this.props;\n\n        const domainType = itemTypeMap[item.type].domainType;\n\n        const onViewTable = () =>\n            onSelectVisualization(\n                getItemTypeId(itemTypeMap, VISUALIZATION_TYPE_TABLE, domainType)\n            );\n\n        const onViewChart = () =>\n            onSelectVisualization(\n                getItemTypeId(itemTypeMap, VISUALIZATION_TYPE_CHART, domainType)\n            );\n\n        const onViewMap = () =>\n            onSelectVisualization(\n                getItemTypeId(itemTypeMap, VISUALIZATION_TYPE_MAP, domainType)\n            );\n\n        const toggleFooterBase = activeFooter ? activeStyle : baseStyle;\n\n        const toggleFooter = {\n            ...toggleFooterBase,\n            container: {\n                ...toggleFooterBase.container,\n                ...style.toggleFooterPadding,\n                ...style.border,\n            },\n        };\n\n        // disable toggle buttons\n        let disabled = false;\n\n        if (item.type === VISUALIZATION_TYPE_CHART) {\n            if (extractFavorite(item).type.match(/^YEAR_OVER_YEAR/)) {\n                disabled = true;\n            }\n        }\n\n        const tableButtonStyle = tableBtnStyle(activeType, disabled);\n        const chartButtonStyle = chartBtnStyle(activeType, disabled);\n        const mapButtonStyle = mapBtnStyle(activeType, disabled);\n\n        return (\n            <Fragment>\n                <div style={{ marginRight: 10 }}>\n                    <ItemHeaderButton\n                        style={toggleFooter.container}\n                        onClick={onToggleFooter}\n                    >\n                        <MessageIcon style={toggleFooter.icon} />\n                    </ItemHeaderButton>\n                </div>\n                <div style={style.border}>\n                    <ItemHeaderButton\n                        disabled={disabled}\n                        style={tableButtonStyle.container}\n                        onClick={onViewTable}\n                    >\n                        <TableIcon style={tableButtonStyle.icon} />\n                    </ItemHeaderButton>\n                    <ItemHeaderButton\n                        disabled={disabled}\n                        style={chartButtonStyle.container}\n                        onClick={onViewChart}\n                    >\n                        <ChartIcon style={chartButtonStyle.icon} />\n                    </ItemHeaderButton>\n                    {domainType === DOMAIN_TYPE_AGGREGATE ? (\n                        <ItemHeaderButton\n                            disabled={disabled}\n                            style={mapButtonStyle.container}\n                            onClick={onViewMap}\n                        >\n                            <MapIcon style={mapButtonStyle.icon} />\n                        </ItemHeaderButton>\n                    ) : null}\n                </div>\n            </Fragment>\n        );\n    }\n}\n\nexport default VisualizationItemHeaderButtons;\n","// Note that this ignores discrepancies in 'this', so shouldn't be used with bound functions\n// This is useful instead of lodash/memoize when we only need to memoize a single value\n// Inspiration: https://github.com/alexreardon/memoize-one\n\nconst memoizeOne = fn => {\n    let lastArgs = undefined;\n    let lastValue = undefined;\n\n    return (...args) => {\n        if (\n            lastArgs &&\n            args.length === lastArgs.length &&\n            args.every((arg, i) => arg === lastArgs[i])\n        ) {\n            return lastValue;\n        }\n        lastArgs = args;\n        lastValue = fn(...args);\n        return lastValue;\n    };\n};\n\nexport default memoizeOne;\n","import React, { Component, Fragment } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { withStyles } from '@material-ui/core/styles';\nimport LaunchIcon from '@material-ui/icons/Launch';\nimport ChartPlugin from '@dhis2/data-visualizer-plugin';\n\nimport i18n from '@dhis2/d2-i18n';\nimport uniqueId from 'lodash/uniqueId';\n\nimport DefaultPlugin from './DefaultPlugin';\nimport ItemHeader, { HEADER_HEIGHT } from '../ItemHeader';\nimport ItemFooter from './ItemFooter';\nimport VisualizationItemHeaderButtons from './ItemHeaderButtons';\nimport * as pluginManager from './plugin';\nimport { sGetVisualization } from '../../../reducers/visualizations';\nimport { sGetItemFiltersRoot } from '../../../reducers/itemFilters';\nimport {\n    acReceivedVisualization,\n    acReceivedActiveVisualization,\n} from '../../../actions/selected';\nimport { CHART, MAP, itemTypeMap } from '../../../modules/itemTypes';\nimport { colors } from '@dhis2/ui-core';\nimport memoizeOne from '../../../modules/memoizeOne';\nimport { getVisualizationConfig } from './plugin';\n\nconst styles = {\n    icon: {\n        width: 16,\n        height: 16,\n        marginLeft: 3,\n        cursor: 'pointer',\n        fill: colors.grey600,\n    },\n    title: {\n        overflow: 'hidden',\n        maxWidth: '85%',\n        textOverflow: 'ellipsis',\n        whiteSpace: 'nowrap',\n    },\n    textDiv: {\n        fontSize: '14px',\n        fontStretch: 'normal',\n        padding: '10px',\n        lineHeight: '20px',\n    },\n};\n\nconst applyFilters = (visualization, filters) => {\n    if (!Object.keys(filters).length) {\n        return visualization;\n    }\n\n    // deep clone objects in filters to avoid changing the visualization in the Redux store\n    const visRows = visualization.rows.map(obj => ({ ...obj }));\n    const visColumns = visualization.columns.map(obj => ({ ...obj }));\n    const visFilters = visualization.filters.map(obj => ({ ...obj }));\n\n    Object.keys(filters).forEach(dimensionId => {\n        if (filters[dimensionId]) {\n            let dimensionFound = false;\n\n            [visRows, visColumns, visFilters].forEach(dimensionObjects =>\n                dimensionObjects\n                    .filter(obj => obj.dimension === dimensionId)\n                    .forEach(obj => {\n                        dimensionFound = true;\n                        obj.items = filters[dimensionId];\n                    })\n            );\n\n            // add dimension to filters if not already present elsewhere\n            if (!dimensionFound) {\n                visFilters.push({\n                    dimension: dimensionId,\n                    items: filters[dimensionId],\n                });\n            }\n        }\n    });\n\n    return {\n        ...visualization,\n        rows: visRows,\n        columns: visColumns,\n        filters: visFilters,\n    };\n};\n\nexport class Item extends Component {\n    state = {\n        showFooter: false,\n        configLoaded: false,\n    };\n\n    constructor(props, context) {\n        super(props);\n\n        this.d2 = context.d2;\n\n        this.contentRef = React.createRef();\n    }\n\n    async componentDidMount() {\n        this.props.onVisualizationLoaded(\n            // TODO do not call fetch on the pluginManager, do it here as the manager will eventually be removed...\n            await pluginManager.fetch(this.props.item)\n        );\n\n        this.setState({\n            configLoaded: true,\n        });\n    }\n\n    getUniqueKey = memoizeOne(() => uniqueId());\n\n    pluginCredentials = null;\n\n    getPluginComponent = () => {\n        const visualization = getVisualizationConfig(\n            this.props.visualization,\n            this.props.item.type,\n            this.getActiveType()\n        );\n\n        if (!visualization) {\n            return (\n                <div className={this.props.classes.textDiv}>\n                    {i18n.t('No data to display')}\n                </div>\n            );\n        }\n\n        const props = {\n            ...this.props,\n            visualization,\n            style: this.getContentStyle(),\n        };\n\n        switch (this.getActiveType()) {\n            case CHART: {\n                return (\n                    <ChartPlugin\n                        d2={this.d2}\n                        config={applyFilters(\n                            props.visualization,\n                            props.itemFilters\n                        )}\n                        forDashboard={true}\n                        style={props.style}\n                    />\n                );\n            }\n            case MAP: {\n                if (props.item.type === MAP) {\n                    // apply filters only to thematic and event layers\n                    // for maps AO\n                    const mapViews = props.visualization.mapViews.map(obj => {\n                        if (\n                            obj.layer.includes('thematic') ||\n                            obj.layer.includes('event')\n                        ) {\n                            return applyFilters(obj, props.itemFilters);\n                        }\n\n                        return obj;\n                    });\n\n                    props.visualization = {\n                        ...props.visualization,\n                        mapViews,\n                    };\n                } else {\n                    // this is the case of a non map AO passed to the maps plugin\n                    // due to a visualization type switch in dashboard item\n                    // maps plugin takes care of converting the AO to a suitable format\n                    props.visualization = applyFilters(\n                        props.visualization,\n                        props.itemFilters\n                    );\n                }\n\n                return <DefaultPlugin {...props} />;\n            }\n            default: {\n                props.visualization = applyFilters(\n                    props.visualization,\n                    props.itemFilters\n                );\n\n                return <DefaultPlugin {...props} />;\n            }\n        }\n    };\n\n    onToggleFooter = () => {\n        this.setState(\n            { showFooter: !this.state.showFooter },\n            this.props.onToggleItemExpanded(this.props.item.id)\n        );\n    };\n\n    onSelectVisualization = activeType => {\n        // Cancel request if type is already active\n        if (activeType === this.getActiveType()) {\n            return;\n        }\n\n        pluginManager.unmount(this.props.item, this.getActiveType());\n\n        this.props.onSelectVisualization(\n            this.props.visualization.id,\n            this.props.item.type,\n            activeType\n        );\n    };\n\n    getActiveType = () =>\n        this.props.visualization.activeType || this.props.item.type;\n\n    pluginIsAvailable = () =>\n        pluginManager.pluginIsAvailable(\n            this.props.item,\n            this.props.visualization\n        );\n\n    getTitle = () => {\n        const { item, editMode, classes } = this.props;\n        const itemName = pluginManager.getName(item);\n\n        return (\n            <div style={{ display: 'flex', alignItems: 'center' }}>\n                <span className={classes.title} title={itemName}>\n                    {itemName}\n                </span>\n                {!editMode && this.pluginIsAvailable() ? (\n                    <a\n                        href={pluginManager.getLink(this.props.item, this.d2)}\n                        style={{ height: 16 }}\n                        title={`View in ${\n                            itemTypeMap[this.props.item.type].appName\n                        } app`}\n                    >\n                        <LaunchIcon className={classes.icon} />\n                    </a>\n                ) : null}\n            </div>\n        );\n    };\n\n    getActionButtons = () =>\n        pluginManager.pluginIsAvailable(\n            this.props.item,\n            this.props.visualization\n        ) && !this.props.editMode ? (\n            <VisualizationItemHeaderButtons\n                item={this.props.item}\n                activeFooter={this.state.showFooter}\n                activeType={this.getActiveType()}\n                onSelectVisualization={this.onSelectVisualization}\n                onToggleFooter={this.onToggleFooter}\n            />\n        ) : null;\n\n    getContentStyle = () => {\n        const { item, editMode } = this.props;\n        const PADDING_BOTTOM = 4;\n\n        return !editMode\n            ? {\n                  height: item.originalHeight - HEADER_HEIGHT - PADDING_BOTTOM,\n              }\n            : { height: this.contentRef.offsetHeight };\n    };\n\n    render() {\n        const { item, editMode, itemFilters } = this.props;\n        const { showFooter } = this.state;\n\n        return (\n            <Fragment>\n                <ItemHeader\n                    title={this.getTitle()}\n                    actionButtons={this.getActionButtons()}\n                    editMode={editMode}\n                />\n                <div\n                    key={this.getUniqueKey(itemFilters)}\n                    className=\"dashboard-item-content\"\n                    ref={ref => (this.contentRef = ref)}\n                >\n                    {this.state.configLoaded && this.getPluginComponent()}\n                </div>\n                {!editMode && showFooter ? <ItemFooter item={item} /> : null}\n            </Fragment>\n        );\n    }\n}\n\nItem.contextTypes = {\n    d2: PropTypes.object,\n};\n\nItem.propTypes = {\n    item: PropTypes.object,\n    editMode: PropTypes.bool,\n    onToggleItemExpanded: PropTypes.func,\n    itemFilters: PropTypes.object,\n    visualization: PropTypes.object,\n};\n\nItem.defaultProps = {\n    item: {},\n    editMode: false,\n    onToggleItemExpanded: Function.prototype,\n    itemFilters: {},\n    visualization: {},\n};\n\nconst mapStateToProps = (state, ownProps) => ({\n    itemFilters: sGetItemFiltersRoot(state),\n    visualization: sGetVisualization(\n        state,\n        pluginManager.extractFavorite(ownProps.item).id\n    ),\n});\n\nconst mapDispatchToProps = dispatch => ({\n    onVisualizationLoaded: visualization =>\n        dispatch(acReceivedVisualization(visualization)),\n    onSelectVisualization: (id, type, activeType) =>\n        dispatch(acReceivedActiveVisualization(id, type, activeType)),\n});\n\nexport default connect(\n    mapStateToProps,\n    mapDispatchToProps\n)(withStyles(styles)(Item));\n","import React from 'react';\nimport { colors } from '@dhis2/ui-core';\n\nconst style = {\n    backgroundColor: colors.grey200,\n    border: 'none',\n    height: '1px',\n    margin: '0px 0px 5px 0px',\n};\n\nconst Line = props => <hr style={style} />;\n\nexport default Line;\n","import React, { Component, Fragment } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport i18n from '@dhis2/d2-i18n';\n\nimport { sGetMessagesRoot } from '../../../reducers/messages';\nimport { formatDate } from '../../../modules/util';\nimport { colors } from '@dhis2/ui-core';\nimport ItemHeader from '../ItemHeader';\nimport Line from '../../../widgets/Line';\n\nimport './MessagesItem.css';\n\nconst PRIVATE = 'PRIVATE';\n\nconst messageTypes = {\n    [PRIVATE]: 'Private',\n    VALIDATION_RESULT: 'Validation',\n    TICKET: 'Ticket',\n    SYSTEM: 'System',\n};\n\nconst style = {\n    list: {\n        listStyleType: 'none',\n        paddingLeft: '0px',\n    },\n    seeAll: {\n        textAlign: 'center',\n        fontSize: '13px',\n        marginBottom: '5px',\n    },\n    sender: {\n        fontSize: '13px',\n        lineHeight: '15px',\n        margin: 0,\n        color: colors.grey800,\n    },\n    snippet: {\n        color: colors.grey800,\n        fontSize: '13px',\n        lineHeight: '15px',\n        maxHeight: '30px',\n        overflow: 'hidden',\n    },\n};\n\nclass MessagesItem extends Component {\n    state = {\n        uiLocale: '',\n    };\n\n    async componentDidMount() {\n        const uiLocale = await this.context.d2.currentUser.userSettings.get(\n            'keyUiLocale'\n        );\n\n        this.setState({ uiLocale });\n    }\n\n    getMessageHref = msg => {\n        const msgIdentifier = msg ? `#/${msg.messageType}/${msg.id}` : '';\n        return `${this.context.baseUrl}/dhis-web-messaging/${msgIdentifier}`;\n    };\n\n    getMessageSender = msg => {\n        const latestMsg = msg.messages.slice(-1)[0];\n        return latestMsg.sender ? latestMsg.sender.displayName : '';\n    };\n\n    getMessageItems = () => {\n        const editClass = !this.props.editMode ? 'view' : null;\n\n        return this.props.messages.map(msg => {\n            const redirectToMsg = () => {\n                if (!this.props.editMode) {\n                    document.location.href = this.getMessageHref(msg);\n                }\n            };\n\n            const sender =\n                msg.messageType === PRIVATE\n                    ? this.getMessageSender(msg)\n                    : messageTypes[msg.messageType];\n\n            const readClass = !msg.read ? 'unread' : null;\n            const latestMsg = msg.messages.slice(-1)[0];\n            const msgDate = latestMsg.lastUpdated;\n\n            return (\n                <li\n                    className={`message-item ${editClass}`}\n                    key={msg.id}\n                    onClick={redirectToMsg}\n                >\n                    <p className={`message-title ${readClass}`}>\n                        {msg.displayName} ({msg.messageCount})\n                    </p>\n                    <p style={style.sender}>\n                        {sender} - {formatDate(msgDate, this.state.uiLocale)}\n                    </p>\n                    <p style={style.snippet}>{latestMsg.text}</p>\n                </li>\n            );\n        });\n    };\n\n    render() {\n        return (\n            <Fragment>\n                <ItemHeader title={i18n.t('Messages')} />\n                <Line />\n                {this.props.messages.length > 0 && (\n                    <div className=\"dashboard-item-content\">\n                        <ul style={style.list}>{this.getMessageItems()}</ul>\n                        <div style={style.seeAll}>\n                            <a href={this.getMessageHref()}>\n                                {i18n.t('See all messages')}\n                            </a>\n                        </div>\n                    </div>\n                )}\n            </Fragment>\n        );\n    }\n}\n\nMessagesItem.contextTypes = {\n    d2: PropTypes.object,\n    baseUrl: PropTypes.string,\n};\n\nconst mapStateToProps = state => {\n    return {\n        messages: Object.values(sGetMessagesRoot(state)),\n    };\n};\n\nconst MessagesContainer = connect(\n    mapStateToProps,\n    null\n)(MessagesItem);\n\nexport default MessagesContainer;\n","import React, { Fragment } from 'react';\nimport ItemHeader from '../ItemHeader';\nimport NotInterestedIcon from '@material-ui/icons/NotInterested';\n\nconst NotSupportedItem = props => (\n    <Fragment>\n        <ItemHeader title={`Item type not supported: ${props.item.type}`} />\n        <div\n            style={{\n                display: 'flex',\n                justifyContent: 'center',\n                alignItems: 'center',\n                height: '90%',\n            }}\n        >\n            <NotInterestedIcon\n                style={{ width: 100, height: 100, align: 'center' }}\n                color=\"disabled\"\n            />\n        </div>\n    </Fragment>\n);\n\nexport default NotSupportedItem;\n","import React from 'react';\nimport { colors } from '@dhis2/ui-core';\n\nconst DescriptionIcon = ({ className }) => (\n    <svg\n        className={className}\n        xmlns=\"http://www.w3.org/2000/svg\"\n        viewBox=\"0 0 24 24\"\n        fill={colors.grey500}\n    >\n        <path d=\"M0 0h24v24H0z\" fill=\"none\" />\n        <path d=\"M14 2H6c-1.1 0-1.99.9-1.99 2L4 20c0 1.1.89 2 1.99 2H18c1.1 0 2-.9 2-2V8l-6-6zm2 16H8v-2h8v2zm0-4H8v-2h8v2zm-3-5V3.5L18.5 9H13z\" />\n    </svg>\n);\n\nexport default DescriptionIcon;\n","import React from 'react';\nimport { colors } from '@dhis2/ui-core';\n\nconst DeleteIcon = ({ className }) => (\n    <svg\n        className={className}\n        xmlns=\"http://www.w3.org/2000/svg\"\n        width=\"18\"\n        height=\"18\"\n        viewBox=\"0 0 24 24\"\n        fill={colors.red500}\n    >\n        <path d=\"M6 19c0 1.1.9 2 2 2h8c1.1 0 2-.9 2-2V7H6v12zM19 4h-3.5l-1-1h-5l-1 1H5v2h14V4z\" />\n        <path d=\"M0 0h24v24H0z\" fill=\"none\" />\n    </svg>\n);\n\nexport default DeleteIcon;\n","import React, { Fragment } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { colors } from '@dhis2/ui-core';\nimport DescriptionIcon from '../../../icons/Description';\n\nimport DeleteIcon from '../../../icons/Delete';\nimport Line from '../../../widgets/Line';\nimport { itemTypeMap, getItemUrl } from '../../../modules/itemTypes';\nimport { orArray } from '../../../modules/util';\nimport { tRemoveListItemContent } from './actions';\nimport ItemHeader from '../ItemHeader';\nimport classes from './Item.module.css';\n\nconst getItemTitle = item => itemTypeMap[item.type].pluralTitle;\n\nconst getContentItems = item =>\n    orArray(item[itemTypeMap[item.type].propName]).filter(\n        (item, index, array) =>\n            array.findIndex(el => el.id === item.id) === index\n    );\n\nconst removeContent = (handler, item, contentToRemove) => () => {\n    handler(item, contentToRemove);\n};\n\nconst ListItem = (props, context) => {\n    const { item, editMode, tRemoveListItemContent } = props;\n    const contentItems = getContentItems(item);\n\n    const getLink = contentItem => {\n        const deleteButton = (\n            <button\n                className={classes.deletebutton}\n                onClick={removeContent(\n                    tRemoveListItemContent,\n                    item,\n                    contentItem\n                )}\n            >\n                <DeleteIcon className={classes.deleteicon} />\n            </button>\n        );\n\n        return (\n            <Fragment>\n                <a\n                    className={classes.link}\n                    style={{ color: colors.grey900 }}\n                    href={getItemUrl(item.type, contentItem, context.d2)}\n                >\n                    {contentItem.name}\n                </a>\n                {editMode ? deleteButton : null}\n            </Fragment>\n        );\n    };\n\n    return (\n        <Fragment>\n            <ItemHeader title={getItemTitle(item)} />\n            <Line />\n            <div className=\"dashboard-item-content\">\n                <ul className={classes.list}>\n                    {contentItems.map(contentItem => (\n                        <li className={classes.item} key={contentItem.id}>\n                            <DescriptionIcon className={classes.itemicon} />\n                            {getLink(contentItem)}\n                        </li>\n                    ))}\n                </ul>\n            </div>\n        </Fragment>\n    );\n};\n\nListItem.contextTypes = {\n    d2: PropTypes.object,\n};\n\nexport default connect(\n    null,\n    {\n        tRemoveListItemContent,\n    }\n)(ListItem);\n","import {\n    acUpdateDashboardItem,\n    acRemoveDashboardItem,\n} from '../../../actions/editDashboard';\nimport { itemTypeMap } from '../../../modules/itemTypes';\n\nexport const tRemoveListItemContent = (dashboardItem, content) => dispatch => {\n    const listItemType = itemTypeMap[dashboardItem.type].propName;\n\n    const newContent = dashboardItem[listItemType].filter(\n        item => item.id !== content.id\n    );\n\n    if (newContent.length) {\n        dashboardItem[listItemType] = newContent;\n        dispatch(acUpdateDashboardItem(dashboardItem));\n    } else {\n        dispatch(acRemoveDashboardItem(dashboardItem));\n    }\n};\n","import React, { Fragment } from 'react';\nimport { connect } from 'react-redux';\nimport i18n from '@dhis2/d2-i18n';\nimport Input from '@material-ui/core/Input';\nimport {\n    Parser as RichTextParser,\n    Editor as RichTextEditor,\n} from '@dhis2/d2-ui-rich-text';\n\nimport { acUpdateDashboardItem } from '../../../actions/editDashboard';\nimport { sGetEditDashboardItems } from '../../../reducers/editDashboard';\nimport { sGetDashboardItems } from '../../../reducers/dashboards';\nimport ItemHeader from '../ItemHeader';\nimport Line from '../../../widgets/Line';\n\nconst style = {\n    textDiv: {\n        padding: '10px',\n        whiteSpace: 'pre-line',\n        lineHeight: '20px',\n    },\n    textField: {\n        fontSize: '14px',\n        fontStretch: 'normal',\n        width: '90%',\n        margin: '0 auto',\n        display: 'block',\n        lineHeight: '24px',\n    },\n    container: {\n        marginBottom: '20px',\n        marginTop: '20px',\n    },\n};\n\nconst TextItem = props => {\n    const { item, editMode, text, acUpdateDashboardItem } = props;\n\n    const onChangeText = event => {\n        const updatedItem = {\n            ...item,\n            text: event.target.value,\n        };\n\n        acUpdateDashboardItem(updatedItem);\n    };\n\n    const viewItem = () => {\n        const textDivStyle = Object.assign({}, style.textField, style.textDiv);\n        return (\n            <div className=\"dashboard-item-content\" style={style.container}>\n                <RichTextParser style={textDivStyle}>{text}</RichTextParser>\n            </div>\n        );\n    };\n\n    const editItem = () => {\n        return (\n            <Fragment>\n                <ItemHeader title={i18n.t('Text item')} />\n                <Line />\n                <div className=\"dashboard-item-content\">\n                    <RichTextEditor onEdit={onChangeText}>\n                        <Input\n                            value={text}\n                            multiline\n                            fullWidth\n                            style={style.textField}\n                            placeholder={i18n.t('Add text here')}\n                            onChange={onChangeText}\n                        />\n                    </RichTextEditor>\n                </div>\n            </Fragment>\n        );\n    };\n\n    return <Fragment>{editMode ? editItem() : viewItem()}</Fragment>;\n};\n\nconst mapStateToProps = (state, ownProps) => {\n    const items = ownProps.editMode\n        ? sGetEditDashboardItems(state)\n        : sGetDashboardItems(state);\n\n    const item = items.find(item => item.id === ownProps.item.id);\n\n    return {\n        text: item ? item.text : '',\n    };\n};\n\nexport default connect(\n    mapStateToProps,\n    {\n        acUpdateDashboardItem,\n    }\n)(TextItem);\n","import React, { Fragment } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport NotInterestedIcon from '@material-ui/icons/NotInterested';\n\nimport { FILTER_ORG_UNIT } from '../../../actions/itemFilters';\nimport { sGetItemFiltersRoot } from '../../../reducers/itemFilters';\nimport ItemHeader from '../ItemHeader';\nimport Line from '../../../widgets/Line';\n\nconst getIframeSrc = (appDetails, item, itemFilters) => {\n    let iframeSrc = `${appDetails.launchUrl}?dashboardItemId=${item.id}`;\n\n    if (\n        itemFilters &&\n        itemFilters[FILTER_ORG_UNIT] &&\n        itemFilters[FILTER_ORG_UNIT].length\n    ) {\n        const ouIds = itemFilters[FILTER_ORG_UNIT].map(\n            ouPath => ouPath.split('/').slice(-1)[0]\n        );\n\n        iframeSrc += `&userOrgUnit=${ouIds.join(',')}`;\n    }\n\n    return iframeSrc;\n};\n\nconst AppItem = ({ item, itemFilters }, context) => {\n    let appDetails;\n\n    const appKey = item.appKey;\n\n    if (appKey) {\n        appDetails = context.d2.system.installedApps.find(\n            app => app.key === appKey\n        );\n    }\n\n    return appDetails && appDetails.name && appDetails.launchUrl ? (\n        <Fragment>\n            <ItemHeader title={appDetails.name} />\n            <Line />\n            <iframe\n                title={appDetails.name}\n                src={getIframeSrc(appDetails, item, itemFilters)}\n                className=\"dashboard-item-content\"\n                style={{ border: 'none' }}\n            />\n        </Fragment>\n    ) : (\n        <Fragment>\n            <ItemHeader title={`${appKey} app not found`} />\n            <Line />\n            <div\n                className=\"dashboard-item-content\"\n                style={{\n                    display: 'flex',\n                    justifyContent: 'center',\n                    alignItems: 'center',\n                    height: '90%',\n                }}\n            >\n                <NotInterestedIcon\n                    color=\"disabled\"\n                    disabled\n                    style={{ width: 100, height: 100, align: 'center' }}\n                />\n            </div>\n        </Fragment>\n    );\n};\n\nAppItem.contextTypes = {\n    d2: PropTypes.object,\n};\n\nconst mapStateToProps = state => ({\n    itemFilters: sGetItemFiltersRoot(state),\n});\n\nexport default connect(mapStateToProps)(AppItem);\n","import React, { Fragment } from 'react';\nimport i18n from '@dhis2/d2-i18n';\n\nimport { colors } from '@dhis2/ui-core';\nimport ItemHeader from '../ItemHeader';\n\nconst style = {\n    margin: '21px 28px',\n    fontSize: '14px',\n    lineHeight: '18px',\n    color: colors.grey600,\n};\n\nconst SpacerItem = () => {\n    return (\n        <Fragment>\n            <ItemHeader title={i18n.t('Spacer')} />\n            <p style={style}>\n                {i18n.t(\n                    'Use a spacer to create empty vertical space between other dashboard items.'\n                )}\n            </p>\n        </Fragment>\n    );\n};\n\nexport default SpacerItem;\n","import React from 'react';\n\nimport VisualizationItem from './VisualizationItem/Item';\nimport MessagesItem from './MessagesItem/Item';\nimport NotSupportedItem from './NotSupportedItem/Item';\nimport ListItem from './ListItem/Item';\nimport TextItem from './TextItem/Item';\nimport AppItem from './AppItem/Item';\nimport SpacerItem from './SpacerItem/Item';\nimport {\n    APP,\n    REPORT_TABLE,\n    CHART,\n    MAP,\n    EVENT_CHART,\n    EVENT_REPORT,\n    MESSAGES,\n    REPORTS,\n    RESOURCES,\n    USERS,\n    TEXT,\n    SPACER,\n} from '../../modules/itemTypes';\nimport { DEFAULT_STATE_ITEM_FILTERS } from '../../reducers/itemFilters';\n\nconst getGridItem = type => {\n    switch (type) {\n        case REPORT_TABLE:\n        case CHART:\n        case MAP:\n        case EVENT_CHART:\n        case EVENT_REPORT:\n            return VisualizationItem;\n        case MESSAGES:\n            return MessagesItem;\n        case REPORTS:\n        case RESOURCES:\n        case USERS:\n            return ListItem;\n        case TEXT:\n            return TextItem;\n        case SPACER:\n            return SpacerItem;\n        case APP:\n            return AppItem;\n        default:\n            return NotSupportedItem;\n    }\n};\n\nexport const Item = props => {\n    const GridItem = getGridItem(props.item.type);\n\n    return (\n        <GridItem\n            item={props.item}\n            editMode={props.editMode}\n            itemFilters={\n                props.editMode ? DEFAULT_STATE_ITEM_FILTERS : props.itemFilters\n            }\n            onToggleItemExpanded={props.onToggleItemExpanded}\n        />\n    );\n};\n","import React from 'react';\nimport ItemHeaderButton from '../Item/ItemHeaderButton';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport { colors } from '@dhis2/ui-core';\n\nconst style = {\n    button: {\n        position: 'absolute',\n        top: '7px',\n        right: '7px',\n        zIndex: '1000',\n    },\n    icon: {\n        fill: colors.red500,\n    },\n};\n\nconst DeleteItemHeaderButton = ({ onClick }) => (\n    <ItemHeaderButton onClick={onClick} style={style.button}>\n        <DeleteIcon style={style.icon} />\n    </ItemHeaderButton>\n);\n\nexport default DeleteItemHeaderButton;\n","import React from 'react';\nimport { colors } from '@dhis2/ui-core';\n\nexport const NoContentMessage = ({ text }) => (\n    <div\n        style={{\n            padding: '50px 10px',\n            textAlign: 'center',\n            fontSize: '15px',\n            fontWeight: 500,\n            color: colors.grey600,\n        }}\n    >\n        {text}\n    </div>\n);\n\nexport default NoContentMessage;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport debounce from 'lodash/debounce';\n\nconst defaultDebounceMs = 100;\nconst defaultBufferFactor = 0.25;\n\nclass ProgressiveLoadingContainer extends Component {\n    static propTypes = {\n        children: PropTypes.node.isRequired,\n        debounceMs: PropTypes.number,\n        bufferFactor: PropTypes.number,\n    };\n    static defaultProps = {\n        debounceMs: defaultDebounceMs,\n        bufferFactor: defaultBufferFactor,\n    };\n\n    state = {\n        shouldLoad: false,\n    };\n    containerRef = null;\n    shouldLoadHandler = null;\n\n    checkShouldLoad() {\n        const bufferPx = this.props.bufferFactor * window.innerHeight;\n\n        if (!this.containerRef) {\n            return;\n        }\n\n        const rect = this.containerRef.getBoundingClientRect();\n        if (\n            rect.bottom > -bufferPx &&\n            rect.top < window.innerHeight + bufferPx\n        ) {\n            this.setState({\n                shouldLoad: true,\n            });\n\n            this.removeHandler();\n        }\n    }\n\n    registerHandler() {\n        this.shouldLoadHandler = debounce(\n            () => this.checkShouldLoad(),\n            this.props.debounceMs\n        );\n\n        window.addEventListener('scroll', this.shouldLoadHandler);\n    }\n    removeHandler() {\n        window.removeEventListener('scroll', this.shouldLoadHandler);\n    }\n\n    componentDidMount() {\n        this.registerHandler();\n        this.checkShouldLoad();\n    }\n\n    componentWillUnmount() {\n        this.removeHandler();\n    }\n\n    render() {\n        const { children, debounceMs, bufferFactor, ...props } = this.props;\n        const { shouldLoad } = this.state;\n\n        return (\n            <div ref={ref => (this.containerRef = ref)} {...props}>\n                {shouldLoad && children}\n            </div>\n        );\n    }\n}\n\nexport default ProgressiveLoadingContainer;\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport i18n from '@dhis2/d2-i18n';\nimport ReactGridLayout from 'react-grid-layout';\nimport { CircularProgress, ScreenCover } from '@dhis2/ui-core';\n\nimport {\n    acUpdateDashboardLayout,\n    acRemoveDashboardItem,\n} from '../../actions/editDashboard';\nimport { Item } from '../Item/Item';\nimport { resize as pluginResize } from '../Item/VisualizationItem/plugin';\nimport { isPluginType } from '../../modules/itemTypes';\nimport {\n    GRID_ROW_HEIGHT,\n    GRID_COMPACT_TYPE,\n    ITEM_MIN_HEIGHT,\n    MARGIN,\n    getGridColumns,\n    hasShape,\n    onItemResize,\n} from './gridUtil';\nimport { orArray } from '../../modules/util';\nimport DeleteItemButton from './DeleteItemButton';\nimport NoContentMessage from '../../widgets/NoContentMessage';\n\nimport 'react-grid-layout/css/styles.css';\nimport 'react-resizable/css/styles.css';\n\nimport './ItemGrid.css';\nimport { sGetSelectedId, sGetSelectedIsLoading } from '../../reducers/selected';\nimport {\n    sGetEditDashboardRoot,\n    sGetEditDashboardItems,\n} from '../../reducers/editDashboard';\nimport {\n    sGetDashboardById,\n    sGetDashboardItems,\n} from '../../reducers/dashboards';\nimport ProgressiveLoadingContainer from '../Item/ProgressiveLoadingContainer';\n\n// Component\n\nconst EXPANDED_HEIGHT = 17;\n\nexport class ItemGrid extends Component {\n    state = {\n        expandedItems: {},\n    };\n\n    onToggleItemExpanded = clickedId => {\n        const isExpanded =\n            typeof this.state.expandedItems[clickedId] === 'boolean'\n                ? this.state.expandedItems[clickedId]\n                : false;\n\n        const expandedItems = { ...this.state.expandedItems };\n        expandedItems[clickedId] = !isExpanded;\n        this.setState({ expandedItems });\n    };\n\n    onRemoveItem = clickedId => {\n        this.props.acRemoveDashboardItem(clickedId);\n    };\n\n    componentWillReceiveProps(nextProps) {\n        if (nextProps.edit) {\n            this.setState({ expandedItems: {} });\n        }\n    }\n\n    onLayoutChange = newLayout => {\n        if (this.props.edit) {\n            this.props.acUpdateDashboardLayout(newLayout);\n        }\n    };\n\n    onResizeStop = (layout, oldItem, newItem) => {\n        onItemResize(newItem.i);\n\n        const dashboardItem = this.props.dashboardItems.find(\n            item => item.id === newItem.i\n        );\n\n        // call resize on the item component if it's a plugin type\n        if (dashboardItem && isPluginType(dashboardItem)) {\n            pluginResize(dashboardItem);\n        }\n    };\n\n    onRemoveItemWrapper = id => () => this.onRemoveItem(id);\n\n    render() {\n        const { edit, isLoading, dashboardItems } = this.props;\n\n        if (!isLoading && !dashboardItems.length) {\n            return (\n                <NoContentMessage\n                    text={i18n.t('There are no items on this dashboard')}\n                />\n            );\n        }\n\n        const items = dashboardItems.map(item => {\n            const expandedItem = this.state.expandedItems[item.id];\n            let hProp = { h: item.h };\n\n            if (expandedItem && expandedItem === true) {\n                hProp.h = item.h + EXPANDED_HEIGHT;\n            }\n\n            return Object.assign({}, item, hProp, {\n                i: item.id,\n                minH: ITEM_MIN_HEIGHT,\n            });\n        });\n\n        return (\n            <div className=\"grid-wrapper\">\n                {isLoading ? (\n                    <ScreenCover>\n                        <CircularProgress />\n                    </ScreenCover>\n                ) : null}\n                <ReactGridLayout\n                    onLayoutChange={this.onLayoutChange}\n                    onResizeStop={this.onResizeStop}\n                    className=\"layout\"\n                    layout={items}\n                    margin={MARGIN}\n                    cols={getGridColumns()}\n                    rowHeight={GRID_ROW_HEIGHT}\n                    width={window.innerWidth}\n                    compactType={GRID_COMPACT_TYPE}\n                    isDraggable={edit}\n                    isResizable={edit}\n                    draggableCancel=\"input,textarea\"\n                >\n                    {items.map(item => {\n                        const itemClassNames = [\n                            item.type,\n                            edit ? 'edit' : 'view',\n                        ].join(' ');\n\n                        return (\n                            <ProgressiveLoadingContainer\n                                key={item.i}\n                                className={itemClassNames}\n                            >\n                                {edit ? (\n                                    <DeleteItemButton\n                                        onClick={this.onRemoveItemWrapper(\n                                            item.id\n                                        )}\n                                    />\n                                ) : null}\n                                <Item\n                                    item={item}\n                                    editMode={edit}\n                                    onToggleItemExpanded={\n                                        this.onToggleItemExpanded\n                                    }\n                                />\n                            </ProgressiveLoadingContainer>\n                        );\n                    })}\n                </ReactGridLayout>\n            </div>\n        );\n    }\n}\n\nItemGrid.propTypes = {\n    dashboardItems: PropTypes.array,\n};\n\nItemGrid.defaultProps = {\n    dashboardItems: [],\n};\n\n// Container\n\nconst mapStateToProps = (state, ownProps) => {\n    const selectedDashboard = ownProps.edit\n        ? sGetEditDashboardRoot(state)\n        : sGetDashboardById(state, sGetSelectedId(state));\n\n    const dashboardItems = ownProps.edit\n        ? sGetEditDashboardItems(state)\n        : sGetDashboardItems(state);\n\n    return {\n        isLoading: sGetSelectedIsLoading(state) || !selectedDashboard,\n        dashboardItems,\n    };\n};\n\nconst mapDispatchToProps = {\n    acUpdateDashboardLayout,\n    acRemoveDashboardItem,\n};\n\nconst mergeProps = (stateProps, dispatchProps, ownProps) => {\n    const validItems = orArray(stateProps.dashboardItems).filter(hasShape);\n\n    return {\n        ...dispatchProps,\n        edit: ownProps.edit,\n        isLoading: stateProps.isLoading,\n        dashboardItems: validItems,\n        onItemResize,\n    };\n};\n\nexport default connect(\n    mapStateToProps,\n    mapDispatchToProps,\n    mergeProps\n)(ItemGrid);\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nimport i18n from '@dhis2/d2-i18n';\n\nimport { colors } from '@dhis2/ui-core';\n\nconst styles = {\n    badgeContainer: {\n        margin: '2px',\n        padding: '0 16px',\n        borderRadius: '4px',\n        color: colors.white,\n        backgroundColor: '#212934',\n        height: 36,\n        display: 'flex',\n        alignItems: 'center',\n    },\n    badge: {\n        fontSize: '13px',\n        cursor: 'pointer',\n        whiteSpace: 'nowrap',\n    },\n    badgeRemove: {\n        fontSize: '12px',\n        textDecoration: 'underline',\n        marginLeft: '24px',\n        cursor: 'pointer',\n    },\n};\n\nclass FilterBadge extends Component {\n    onClick = id => () => this.props.onClick(id);\n    onRemove = id => () => this.props.onRemove(id);\n\n    render() {\n        const { data } = this.props;\n\n        return (\n            <div style={styles.badgeContainer}>\n                <span style={styles.badge} onClick={this.onClick(data.id)}>\n                    {`${data.name}: ${\n                        data.values.length > 1\n                            ? i18n.t('{{count}} selected', {\n                                  count: data.values.length,\n                              })\n                            : data.values[0].name\n                    }`}\n                </span>\n                <span\n                    style={styles.badgeRemove}\n                    onClick={this.onRemove(data.id)}\n                >\n                    {i18n.t('Remove')}\n                </span>\n            </div>\n        );\n    }\n}\n\nFilterBadge.propTypes = {\n    data: PropTypes.object.isRequired,\n    onClick: PropTypes.func.isRequired,\n    onRemove: PropTypes.func.isRequired,\n};\n\nFilterBadge.defaultProps = {\n    onClick: Function.prototype,\n    onRemove: Function.prototype,\n};\n\nexport default FilterBadge;\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { createSelector } from 'reselect';\nimport { withStyles } from '@material-ui/core/styles';\n\nimport { sGetDimensions } from '../../reducers/dimensions';\nimport { sGetItemFiltersRoot } from '../../reducers/itemFilters';\nimport { sGetControlBarUserRows } from '../../reducers/controlBar';\nimport { getTopOffset } from '../ControlBar/controlBarDimensions';\nimport { acRemoveItemFilter } from '../../actions/itemFilters';\nimport { acRemoveEditItemFilter } from '../../actions/editItemFilters';\nimport { acSetActiveModalDimension } from '../../actions/activeModalDimension';\n\nimport FilterBadge from './FilterBadge';\n\nconst styles = {\n    bar: {\n        position: 'sticky',\n        zIndex: 7,\n        padding: '8px 0',\n        display: 'flex',\n        justifyContent: 'center',\n        flexWrap: 'wrap',\n    },\n};\n\nexport class FilterBar extends Component {\n    onBadgeRemove = id => {\n        this.props.removeItemFilter(id);\n        this.props.removeEditItemFilter(id);\n    };\n\n    onBadgeClick = id => {\n        this.props.setActiveModalDimension({\n            id,\n            name: this.props.filters.find(item => item.id === id).name,\n        });\n    };\n\n    render() {\n        const { filters, userRows, classes } = this.props;\n        const top = getTopOffset(userRows) + 10;\n\n        return filters.length ? (\n            <div className={classes.bar} style={{ top }}>\n                {filters.map(filter => (\n                    <FilterBadge\n                        key={filter.id}\n                        data={filter}\n                        onClick={this.onBadgeClick}\n                        onRemove={this.onBadgeRemove}\n                    />\n                ))}\n            </div>\n        ) : null;\n    }\n}\n\nFilterBar.propTypes = {\n    filters: PropTypes.array.isRequired,\n    removeItemFilter: PropTypes.func.isRequired,\n    removeEditItemFilter: PropTypes.func.isRequired,\n};\n\nFilterBar.defaultProps = {\n    filters: [],\n    removeItemFIlter: Function.prototype,\n    removeEditItemFilter: Function.prototype,\n};\n\n// simplify the filters structure to:\n// [{ id: 'pe', name: 'Period', values: [{ id: 2019: name: '2019' }, {id: 'LAST_MONTH', name: 'Last month' }]}, ...]\nconst filtersSelector = createSelector(\n    [sGetItemFiltersRoot, sGetDimensions],\n    (filters, dimensions) =>\n        Object.keys(filters).reduce((arr, id) => {\n            arr.push({\n                id: id,\n                name: dimensions[id].name,\n                values: filters[id].map(value => ({\n                    id: value.id,\n                    name: value.displayName || value.name,\n                })),\n            });\n\n            return arr;\n        }, [])\n);\n\nconst mapStateToProps = state => ({\n    filters: filtersSelector(state),\n    userRows: sGetControlBarUserRows(state),\n});\n\nexport default connect(\n    mapStateToProps,\n    {\n        setActiveModalDimension: acSetActiveModalDimension,\n        removeItemFilter: acRemoveItemFilter,\n        removeEditItemFilter: acRemoveEditItemFilter,\n    }\n)(withStyles(styles)(FilterBar));\n","import React, { Fragment } from 'react';\nimport TitleBar from '../TitleBar/TitleBar';\nimport ItemGrid from '../ItemGrid/ItemGrid';\nimport FilterBar from '../FilterBar/FilterBar';\n\nexport const DashboardContent = props => (\n    <Fragment>\n        <TitleBar edit={props.editMode} />\n        <FilterBar />\n        <ItemGrid edit={props.editMode} />\n    </Fragment>\n);\n\nexport default DashboardContent;\n","import React, { Fragment } from 'react';\nimport { connect } from 'react-redux';\nimport isEmpty from 'lodash/isEmpty';\nimport i18n from '@dhis2/d2-i18n';\n\nimport {\n    sGetAllDashboards,\n    sDashboardsIsFetching,\n} from '../../reducers/dashboards';\nimport { sGetSelectedId } from '../../reducers/selected';\nimport DashboardsBar from '../ControlBar/DashboardsBar';\nimport DashboardVerticalOffset from './DashboardVerticalOffset';\nimport DashboardContent from './DashboardContent';\nimport NoContentMessage from '../../widgets/NoContentMessage';\n\nexport const Content = ({ hasDashboardContent, dashboardsIsEmpty }) => {\n    const msg = dashboardsIsEmpty\n        ? i18n.t(\n              'No dashboards found. Use the + button to create a new dashboard.'\n          )\n        : i18n.t('Requested dashboard not found');\n\n    return hasDashboardContent ? (\n        <DashboardContent editMode={false} />\n    ) : (\n        <NoContentMessage text={msg} />\n    );\n};\n\nexport const ViewDashboard = ({ id, dashboardsIsEmpty, dashboardsLoaded }) => {\n    const hasDashboardContent = id && !dashboardsIsEmpty;\n    const contentNotReady = !dashboardsLoaded || id === null;\n\n    return (\n        <Fragment>\n            <DashboardsBar />\n            <DashboardVerticalOffset />\n            <div className=\"dashboard-wrapper\">\n                {contentNotReady ? null : (\n                    <Content\n                        hasDashboardContent={hasDashboardContent}\n                        dashboardsIsEmpty={dashboardsIsEmpty}\n                    />\n                )}\n            </div>\n        </Fragment>\n    );\n};\n\nconst mapStateToProps = state => {\n    const dashboards = sGetAllDashboards(state);\n\n    return {\n        id: sGetSelectedId(state),\n        dashboardsIsEmpty: isEmpty(dashboards),\n        dashboardsLoaded: !sDashboardsIsFetching(state),\n    };\n};\n\nexport default connect(mapStateToProps)(ViewDashboard);\n","import React from 'react';\nimport i18n from '@dhis2/d2-i18n';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport { Button } from '@dhis2/ui-core';\n\nexport const ConfirmDeleteDialog = ({\n    dashboardName,\n    onDeleteConfirmed,\n    onContinueEditing,\n    open,\n}) => {\n    const actions = [\n        <Button key=\"cancel\" secondary onClick={onContinueEditing}>\n            {i18n.t('Cancel')}\n        </Button>,\n        <Button key=\"delete\" destructive onClick={onDeleteConfirmed}>\n            {i18n.t('Delete')}\n        </Button>,\n    ];\n\n    return (\n        <Dialog open={open} onClose={onContinueEditing}>\n            <DialogTitle style={{ fontSize: '1.25rem', fontWeight: '450' }}>\n                {i18n.t('Delete dashboard')}\n            </DialogTitle>\n            <DialogContent>\n                <DialogContentText style={{ fontSize: '0.875rem' }}>\n                    {i18n.t(\n                        'Deleting dashboard \"{{ dashboardName }}\" will remove it for all users. This action cannot be undone. Are you sure you want to permanently delete this dashboard?',\n                        { dashboardName }\n                    )}\n                </DialogContentText>\n            </DialogContent>\n            <DialogActions>{actions}</DialogActions>\n        </Dialog>\n    );\n};\n\nexport default ConfirmDeleteDialog;\n","import React, { Component, Fragment } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { Redirect } from 'react-router-dom';\nimport i18n from '@dhis2/d2-i18n';\nimport ControlBar from './ControlBar';\nimport TranslationDialog from '@dhis2/d2-ui-translation-dialog';\nimport { Button } from '@dhis2/ui-core';\n\nimport ConfirmDeleteDialog from './ConfirmDeleteDialog';\nimport {\n    tSaveDashboard,\n    acClearEditDashboard,\n} from '../../actions/editDashboard';\nimport {\n    tDeleteDashboard,\n    acSetDashboardDisplayName,\n} from '../../actions/dashboards';\nimport {\n    sGetEditDashboardRoot,\n    sGetIsNewDashboard,\n} from '../../reducers/editDashboard';\nimport {\n    CONTROL_BAR_ROW_HEIGHT,\n    MIN_ROW_COUNT,\n    getControlBarHeight,\n} from './controlBarDimensions';\nimport { apiFetchDashboard } from '../../api/dashboards';\n\nimport classes from './styles/DashboardsBar.module.css';\n\nconst buttonBarStyle = {\n    height: CONTROL_BAR_ROW_HEIGHT,\n    paddingTop: '15px',\n    marginLeft: '15px',\n    marginRight: '15px',\n};\n\nexport class EditBar extends Component {\n    state = {\n        translationDialogIsOpen: false,\n        dashboardModel: undefined,\n        confirmDeleteDialogOpen: false,\n        redirectUrl: undefined,\n    };\n\n    onConfirmDelete = () => {\n        this.setState({ confirmDeleteDialogOpen: true });\n    };\n\n    onSave = () => {\n        this.props.onSave().then(newId => {\n            this.setState({ redirectUrl: `/${newId}` });\n        });\n    };\n\n    onDiscard = () => {\n        this.props.onDiscardChanges();\n        const redirectUrl = this.props.dashboardId\n            ? `/${this.props.dashboardId}`\n            : '/';\n        this.setState({ redirectUrl });\n    };\n\n    onContinueEditing = () => {\n        this.setState({ confirmDeleteDialogOpen: false });\n    };\n\n    onDeleteConfirmed = () => {\n        this.setState({ confirmDeleteDialogOpen: false });\n        this.props.onDelete(this.props.dashboardId).then(() => {\n            this.setState({ redirectUrl: '/' });\n        });\n    };\n\n    onTranslationsSaved = async translations => {\n        if (translations && translations.length) {\n            const dbLocale = await this.context.d2.currentUser.userSettings.get(\n                'keyDbLocale'\n            );\n\n            const translation = translations.find(\n                t => t.locale === dbLocale && t.property === 'NAME'\n            );\n\n            if (translation && translation.value) {\n                this.props.onTranslate(\n                    this.props.dashboardId,\n                    translation.value\n                );\n            }\n        }\n    };\n\n    fetchDashboardModel = () => {\n        if (this.props.dashboardId && !this.state.dashboardModel) {\n            apiFetchDashboard(this.props.dashboardId).then(dashboardModel =>\n                this.setState({ dashboardModel })\n            );\n        }\n    };\n\n    componentDidMount() {\n        this.fetchDashboardModel();\n    }\n\n    componentDidUpdate() {\n        this.fetchDashboardModel();\n    }\n\n    toggleTranslationDialog = () => {\n        this.setState({\n            translationDialogIsOpen: !this.state.translationDialogIsOpen,\n        });\n    };\n\n    confirmDeleteDialog = () =>\n        this.props.deleteAccess && this.props.dashboardId ? (\n            <ConfirmDeleteDialog\n                dashboardName={this.props.dashboardName}\n                onDeleteConfirmed={this.onDeleteConfirmed}\n                onContinueEditing={this.onContinueEditing}\n                open={this.state.confirmDeleteDialogOpen}\n            />\n        ) : null;\n\n    translationDialog = () =>\n        this.state.dashboardModel && this.state.dashboardModel.id ? (\n            <TranslationDialog\n                className=\"translation-dialog\"\n                d2={this.context.d2}\n                open={this.state.translationDialogIsOpen}\n                onRequestClose={this.toggleTranslationDialog}\n                objectToTranslate={this.state.dashboardModel}\n                fieldsToTranslate={['name', 'description']}\n                // TODO handle messages in snackbar\n                onTranslationSaved={this.onTranslationsSaved}\n                onTranslationError={err =>\n                    console.log('translation update error', err)\n                }\n            />\n        ) : null;\n\n    render() {\n        if (this.state.redirectUrl) {\n            return <Redirect to={this.state.redirectUrl} />;\n        }\n\n        const { dashboardId, deleteAccess, updateAccess } = this.props;\n        const controlBarHeight = getControlBarHeight(MIN_ROW_COUNT);\n\n        const discardBtnText = updateAccess\n            ? i18n.t('Exit without saving')\n            : i18n.t('Go to dashboards');\n\n        return (\n            <Fragment>\n                <ControlBar height={controlBarHeight} editMode={true}>\n                    <div style={buttonBarStyle}>\n                        {updateAccess ? (\n                            <div className={classes.leftControls}>\n                                <span style={{ marginRight: '15px' }}>\n                                    <Button primary onClick={this.onSave}>\n                                        {i18n.t('Save changes')}\n                                    </Button>\n                                </span>\n\n                                {dashboardId ? (\n                                    <span style={{ marginRight: '15px' }}>\n                                        <Button\n                                            onClick={\n                                                this.toggleTranslationDialog\n                                            }\n                                        >\n                                            {i18n.t('Translate')}\n                                        </Button>\n                                    </span>\n                                ) : null}\n                                {dashboardId && deleteAccess ? (\n                                    <Button onClick={this.onConfirmDelete}>\n                                        {i18n.t('Delete')}\n                                    </Button>\n                                ) : null}\n                            </div>\n                        ) : null}\n\n                        <div className={classes.rightControls}>\n                            <Button secondary onClick={this.onDiscard}>\n                                {discardBtnText}\n                            </Button>\n                        </div>\n                    </div>\n                </ControlBar>\n                {this.translationDialog()}\n                {this.confirmDeleteDialog()}\n            </Fragment>\n        );\n    }\n}\n\nEditBar.contextTypes = {\n    d2: PropTypes.object,\n};\n\nconst mapStateToProps = state => {\n    const dashboard = sGetEditDashboardRoot(state);\n\n    let deleteAccess;\n    let updateAccess;\n    if (sGetIsNewDashboard(state)) {\n        deleteAccess = true;\n        updateAccess = true;\n    } else {\n        updateAccess = dashboard.access ? dashboard.access.update : false;\n        deleteAccess = dashboard.access ? dashboard.access.delete : false;\n    }\n\n    return {\n        dashboardId: dashboard.id,\n        dashboardName: dashboard.name,\n        deleteAccess,\n        updateAccess,\n    };\n};\n\nconst mapDispatchToProps = dispatch => ({\n    onSave: () => dispatch(tSaveDashboard()).then(id => id),\n    onDelete: id => dispatch(tDeleteDashboard(id)),\n    onDiscardChanges: () => dispatch(acClearEditDashboard()),\n    onTranslate: (id, value) => dispatch(acSetDashboardDisplayName(id, value)),\n});\n\nexport default connect(\n    mapStateToProps,\n    mapDispatchToProps\n)(EditBar);\n","import React, { Fragment, Component } from 'react';\nimport { connect } from 'react-redux';\nimport i18n from '@dhis2/d2-i18n';\n\nimport { acSetEditDashboard } from '../../actions/editDashboard';\nimport { sGetSelectedId } from '../../reducers/selected';\nimport {\n    sGetDashboardById,\n    sGetDashboardItems,\n    sDashboardsIsFetching,\n} from '../../reducers/dashboards';\nimport DashboardVerticalOffset from './DashboardVerticalOffset';\nimport DashboardContent from './DashboardContent';\nimport EditBar from '../ControlBar/EditBar';\nimport NoContentMessage from '../../widgets/NoContentMessage';\n\nexport const Content = ({ updateAccess }) => {\n    return updateAccess ? (\n        <DashboardContent editMode={true} />\n    ) : (\n        <NoContentMessage text={i18n.t('No access')} />\n    );\n};\nexport class EditDashboard extends Component {\n    state = {\n        initialized: false,\n    };\n\n    initEditDashboard = () => {\n        if (this.props.dashboard) {\n            this.setState({ initialized: true });\n            this.props.setEditDashboard(this.props.dashboard, this.props.items);\n        }\n    };\n\n    componentDidMount() {\n        this.initEditDashboard();\n    }\n\n    componentDidUpdate() {\n        if (!this.state.initialized) {\n            this.initEditDashboard();\n        }\n    }\n\n    getDashboardContent = () => {\n        const contentNotReady =\n            !this.props.dashboardsLoaded || this.props.id === null;\n\n        return (\n            <div className=\"dashboard-wrapper\">\n                {contentNotReady ? null : (\n                    <Content updateAccess={this.props.updateAccess} />\n                )}\n            </div>\n        );\n    };\n\n    render() {\n        return (\n            <Fragment>\n                <EditBar />\n                <DashboardVerticalOffset editMode={true} />\n                {this.getDashboardContent()}\n            </Fragment>\n        );\n    }\n}\n\nconst mapStateToProps = state => {\n    const id = sGetSelectedId(state);\n    const dashboard = id ? sGetDashboardById(state, id) : null;\n\n    const updateAccess =\n        dashboard && dashboard.access ? dashboard.access.update : false;\n\n    return {\n        dashboard,\n        id,\n        updateAccess,\n        items: sGetDashboardItems(state),\n        dashboardsLoaded: !sDashboardsIsFetching(state),\n    };\n};\n\nexport default connect(\n    mapStateToProps,\n    {\n        setEditDashboard: acSetEditDashboard,\n    }\n)(EditDashboard);\n","import React, { Component, Fragment } from 'react';\nimport { connect } from 'react-redux';\n\nimport { acSetEditNewDashboard } from '../../actions/editDashboard';\nimport DashboardVerticalOffset from './DashboardVerticalOffset';\nimport EditBar from '../ControlBar/EditBar';\nimport DashboardContent from './DashboardContent';\n\nclass NewDashboard extends Component {\n    componentDidMount() {\n        this.props.setNewDashboard();\n    }\n\n    render() {\n        return (\n            <Fragment>\n                <EditBar />\n                <DashboardVerticalOffset editMode={true} />\n                <div className=\"dashboard-wrapper\">\n                    <DashboardContent editMode={true} />\n                </div>\n            </Fragment>\n        );\n    }\n}\n\nexport default connect(\n    null,\n    {\n        setNewDashboard: acSetEditNewDashboard,\n    }\n)(NewDashboard);\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\n\nimport { tSelectDashboard } from '../../actions/dashboards';\nimport { sDashboardsIsFetching } from '../../reducers/dashboards';\nimport { EDIT, NEW } from './dashboardModes';\nimport ViewDashboard from './ViewDashboard';\nimport EditDashboard from './EditDashboard';\nimport NewDashboard from './NewDashboard';\n\nclass Dashboard extends Component {\n    setDashboard = () => {\n        if (this.props.dashboardsLoaded) {\n            const id = this.props.match.params.dashboardId || null;\n\n            this.props.selectDashboard(id);\n\n            this.scrollToTop();\n        }\n    };\n\n    scrollToTop = () => {\n        window.scrollTo(0, 0);\n    };\n\n    componentDidMount() {\n        this.setDashboard();\n    }\n\n    componentDidUpdate() {\n        this.setDashboard();\n    }\n\n    render() {\n        switch (this.props.mode) {\n            case EDIT:\n                return <EditDashboard />;\n            case NEW:\n                return <NewDashboard />;\n            default:\n                return <ViewDashboard />;\n        }\n    }\n}\n\nconst mapStateToProps = state => {\n    return { dashboardsLoaded: !sDashboardsIsFetching(state) };\n};\n\nexport default connect(\n    mapStateToProps,\n    {\n        selectDashboard: tSelectDashboard,\n    }\n)(Dashboard);\n","export const EDIT = 'edit';\nexport const NEW = 'new';\nexport const VIEW = 'view';\n","import React, { Component } from 'react';\nimport { HashRouter as Router, Route, Switch } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport i18n from '@dhis2/d2-i18n';\nimport HeaderBar from '@dhis2/ui/widgets/HeaderBar';\n\nimport { EDIT, VIEW, NEW } from './Dashboard/dashboardModes';\nimport { acReceivedUser } from '../actions/user';\nimport { tFetchDashboards } from '../actions/dashboards';\nimport { tSetControlBarRows } from '../actions/controlBar';\nimport { tSetDimensions } from '../actions/dimensions';\nimport Dashboard from './Dashboard/Dashboard';\nimport SnackbarMessage from './SnackbarMessage/SnackbarMessage';\n\nimport 'typeface-roboto';\nimport './App.css';\n\nexport class App extends Component {\n    componentDidMount() {\n        this.props.setCurrentUser(this.props.d2.currentUser);\n        this.props.fetchDashboards();\n        this.props.setControlBarRows();\n        this.props.setDimensions(this.props.d2);\n    }\n\n    getChildContext() {\n        return { baseUrl: this.props.baseUrl, i18n, d2: this.props.d2 };\n    }\n\n    render() {\n        return (\n            <div className=\"app-wrapper\">\n                <div className=\"dashboard-header-bar\">\n                    <HeaderBar appName={i18n.t('Dashboard')} />\n                </div>\n                <Router>\n                    <Switch>\n                        <Route\n                            exact\n                            path=\"/\"\n                            render={props => (\n                                <Dashboard {...props} mode={VIEW} />\n                            )}\n                        />\n                        <Route\n                            exact\n                            path=\"/new\"\n                            render={props => (\n                                <Dashboard {...props} mode={NEW} />\n                            )}\n                        />\n                        <Route\n                            exact\n                            path=\"/:dashboardId\"\n                            render={props => (\n                                <Dashboard {...props} mode={VIEW} />\n                            )}\n                        />\n                        <Route\n                            exact\n                            path=\"/:dashboardId/edit\"\n                            render={props => (\n                                <Dashboard {...props} mode={EDIT} />\n                            )}\n                        />\n                    </Switch>\n                </Router>\n                <SnackbarMessage />\n            </div>\n        );\n    }\n}\n\nApp.childContextTypes = {\n    baseUrl: PropTypes.string,\n    i18n: PropTypes.object,\n    d2: PropTypes.object,\n};\n\nconst mapDispatchToProps = dispatch => {\n    return {\n        setCurrentUser: currentUser => dispatch(acReceivedUser(currentUser)),\n        fetchDashboards: () => dispatch(tFetchDashboards()),\n        setControlBarRows: () => dispatch(tSetControlBarRows()),\n        setDimensions: d2 => dispatch(tSetDimensions(d2)),\n    };\n};\n\nexport default connect(\n    null,\n    mapDispatchToProps\n)(App);\n","import { RECEIVED_USER } from '../reducers/user';\n\nexport const acReceivedUser = value => ({\n    type: RECEIVED_USER,\n    value,\n});\n","//------------------------------------------------------------------------------\n// <auto-generated>\n// This code was generated by d2-i18n-generate.\n//\n// Changes to this file may cause incorrect behavior and will be lost if\n// the code is regenerated.\n// </auto-generated>\n//------------------------------------------------------------------------------\nimport i18n from '@dhis2/d2-i18n';\nimport moment from 'moment';\nimport 'moment/locale/lo';\nimport 'moment/locale/ru';\nimport 'moment/locale/sv';\nimport 'moment/locale/ur';\nimport 'moment/locale/vi';\n\nimport enTranslations from './en/translations.json';\nimport loTranslations from './lo/translations.json';\nimport ruTranslations from './ru/translations.json';\nimport svTranslations from './sv/translations.json';\nimport urTranslations from './ur/translations.json';\nimport viTranslations from './vi/translations.json';\n\nconst namespace = 'dashboards-app';\nmoment.locale('en');\n\ni18n.addResources('en', namespace, enTranslations);\ni18n.addResources('lo', namespace, loTranslations);\ni18n.addResources('ru', namespace, ruTranslations);\ni18n.addResources('sv', namespace, svTranslations);\ni18n.addResources('ur', namespace, urTranslations);\ni18n.addResources('vi', namespace, viTranslations);\n\ni18n.setDefaultNamespace(namespace);\ni18n.changeLanguage('en');\n\nexport default i18n;\n","/** @module reducers/selected */\nimport { validateReducer } from '../modules/util';\n\nexport const SET_STYLE = 'SET_STYLE';\n\nexport const DEFAULT_STATE_STYLE = 'LIST';\n\n/**\n * Reducer functions that computes and returns the new state based on the given action\n * @function\n * @param {Object} state The current state\n * @param {Object} action The action to be evaluated\n */\nconst style = (state = DEFAULT_STATE_STYLE, action) => {\n    switch (action.type) {\n        case SET_STYLE:\n            return validateReducer(action.value, DEFAULT_STATE_STYLE);\n        default:\n            return state;\n    }\n};\n\nexport default style;\n\n/**\n * Selectors that point to specific props in the state object\n * @function\n * @param {Object} state\n * @returns {Object}\n */\nexport const sGetStyleRoot = state => state.style;\n","import { combineReducers } from 'redux';\nimport arraySort from 'd2-utilizr/lib/arraySort';\n\nimport dashboards, { sGetDashboardsRoot } from './dashboards';\nimport selected from './selected';\nimport dashboardsFilter, {\n    ownerData,\n    sGetFilterName,\n    sGetFilterOrder,\n    sGetFilterOwner,\n} from './dashboardsFilter';\nimport controlBar from './controlBar';\nimport visualizations from './visualizations';\nimport editDashboard from './editDashboard';\nimport messages from './messages';\nimport user from './user';\nimport snackbar from './snackbar';\nimport itemFilters from './itemFilters';\nimport editItemFilters from './editItemFilters';\nimport style from './style';\nimport dimensions from './dimensions';\nimport settings from './settings';\nimport activeModalDimension from './activeModalDimension';\n\nconst USER = 'system';\n\n// Reducers\n\nexport default combineReducers({\n    dashboards,\n    selected,\n    dashboardsFilter,\n    controlBar,\n    visualizations,\n    messages,\n    user,\n    editDashboard,\n    itemFilters,\n    editItemFilters,\n    style,\n    snackbar,\n    dimensions,\n    settings,\n    activeModalDimension,\n});\n\n// Map constants to data\nconst mapConstToData = {\n    NAME: 'name',\n    ITEMS: 'numberOfItems',\n    CREATED: 'created',\n    OWNER: 'owner',\n};\n\n// Selectors\n\n// Filter dashboards by name\nexport const sFilterDashboardsByName = (dashboards, filter) =>\n    dashboards.filter(d =>\n        d.displayName.toLowerCase().includes(filter.toLowerCase())\n    );\n\n// Filter dashboards by owner, TODO FIXME\nexport const sFilterDashboardsByOwner = (dashboards, filter) => {\n    const ME = ownerData[1]; // TODO\n    const OTHERS = ownerData[2]; // TODO\n\n    switch (filter) {\n        case ME:\n            return dashboards.filter(d => d.owner === USER);\n        case OTHERS:\n            return dashboards.filter(d => d.owner !== USER);\n        default:\n            return dashboards;\n    }\n};\n\n// Filter dashboards by order\nexport const sFilterDashboardsByOrder = (dashboards, filter) => {\n    const filterValues = filter.split(':');\n\n    const key = filterValues[0];\n    const direction = filterValues[1];\n\n    return arraySort(dashboards, direction, mapConstToData[key]);\n};\n\n// Selectors dependency level 2\n\n// Get filtered dashboards\nexport const sGetFilteredDashboards = state => {\n    const dashboards = sGetDashboardsRoot(state);\n\n    const nameFilter = sGetFilterName(state);\n    const ownerFilter = sGetFilterOwner(state);\n    const orderFilter = sGetFilterOrder(state);\n\n    return sFilterDashboardsByOrder(\n        sFilterDashboardsByName(\n            sFilterDashboardsByOwner(dashboards, ownerFilter),\n            nameFilter\n        ),\n        orderFilter\n    );\n};\n","import { createStore, applyMiddleware, compose } from 'redux';\nimport { createLogger } from 'redux-logger';\nimport thunk from 'redux-thunk';\nimport reducer from './reducers';\n\nconst configureStore = () => {\n    const middleware = [thunk];\n\n    // Enable Redux devtools if extension is installed instead of redux-logger\n    const composeEnhancers =\n        window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\n    if (\n        !window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ &&\n        process.env.NODE_ENV !== 'production'\n    ) {\n        middleware.push(createLogger());\n    }\n\n    return createStore(\n        reducer,\n        composeEnhancers(applyMiddleware(...middleware))\n    );\n};\n\nexport default configureStore;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport { MuiThemeProvider, createMuiTheme } from '@material-ui/core/styles';\nimport { init as d2Init, config, getManifest, getUserSettings } from 'd2';\nimport dhis2theme from '@dhis2/d2-ui-core/theme/mui3.theme';\nimport { colors } from '@dhis2/ui-core';\n\n// temporary workaround until new ui headerbar is ready\nimport 'material-design-icons/iconfont/material-icons.css';\nimport './reset.css';\n\nimport App from './components/App';\nimport './index.css';\nimport i18n from './locales';\nimport configureStore from './configureStore';\n\n// small workaround until ui-core textarea is ready\ndhis2theme.palette.primary.dark = colors.teal600;\n\nconst muiTheme = () => createMuiTheme(dhis2theme);\n\nconst configI18n = userSettings => {\n    const uiLocale = userSettings.keyUiLocale;\n\n    if (uiLocale && uiLocale !== 'en') {\n        config.i18n.sources.add(`./i18n/i18n_module_${uiLocale}.properties`);\n    }\n\n    config.i18n.sources.add('./i18n/i18n_module_en.properties');\n    i18n.changeLanguage(uiLocale);\n};\n\nconst init = async () => {\n    const manifest = await getManifest('./manifest.webapp');\n\n    // log app info\n    console.info(\n        `Dashboards app, v${manifest.version}, ${\n            manifest.manifest_generated_at\n        }`\n    );\n\n    const isProd = process.env.NODE_ENV === 'production';\n\n    if (\n        !isProd &&\n        (!process.env.REACT_APP_DHIS2_BASE_URL ||\n            !process.env.REACT_APP_DHIS2_AUTHORIZATION)\n    ) {\n        throw new Error(\n            'Missing env variables REACT_APP_DHIS2_BASE_URL and REACT_APP_DHIS2_AUTHORIZATION'\n        );\n    }\n\n    // api config\n    const baseUrl = isProd\n        ? manifest.activities.dhis.href\n        : process.env.REACT_APP_DHIS2_BASE_URL;\n    const authorization = process.env.REACT_APP_DHIS2_AUTHORIZATION;\n\n    config.baseUrl = `${baseUrl}/api/${manifest.dhis2.apiVersion}`;\n    config.headers = isProd ? null : { Authorization: authorization };\n    config.schemas = [\n        'chart',\n        'map',\n        'report',\n        'reportTable',\n        'eventChart',\n        'eventReport',\n        'dashboard',\n        'organisationUnit',\n        'userGroup',\n    ];\n\n    getUserSettings()\n        .then(configI18n)\n        .then(() => d2Init(config))\n        .then(initializedD2 => {\n            ReactDOM.render(\n                <Provider store={configureStore()}>\n                    <MuiThemeProvider theme={muiTheme()}>\n                        <App baseUrl={baseUrl} d2={initializedD2} />\n                    </MuiThemeProvider>\n                </Provider>,\n                document.getElementById('root')\n            );\n        });\n};\n\ninit();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"leftControls\":\"DashboardsBar_leftControls__2kr14\",\"rightControls\":\"DashboardsBar_rightControls__2l1lT\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"menuItem\":\"ContentMenuItem_menuItem__2DIcB\",\"launchLink\":\"ContentMenuItem_launchLink__MRANR\",\"label\":\"ContentMenuItem_label__2pIfq\",\"buttonInsert\":\"ContentMenuItem_buttonInsert__1GlZy\"};","import isObject from 'lodash/isObject';\n\n// validation\nexport function orNull(param) {\n    return param === undefined ? null : param;\n}\n\nexport function orArray(param) {\n    return Array.isArray(param) ? param : [];\n}\n\nexport function orObject(param) {\n    return isObject(param) ? param : {};\n}\n\n// array\nexport function arrayGetById(array, id) {\n    return array.find(item => item.id === id);\n}\n\n// object\nexport function arrayToIdMap(array) {\n    return array.reduce((obj, item) => {\n        obj[item.id] = item;\n        return obj;\n    }, {});\n}\n\n// date\nexport function getDate() {\n    const y = Math.floor(Math.random() * 3) + 2015;\n    const M = Math.floor(Math.random() * 12) + 1;\n    const d = Math.floor(Math.random() * 28) + 1;\n    // const h = Math.floor(Math.random() * 23) + 1;\n    // const m = Math.floor(Math.random() * 59) + 1;\n    // const s = Math.floor(Math.random() * 59) + 1;\n\n    return new Date(`${y}-${M}-${d}`)\n        .toJSON()\n        .replace('T', ' ')\n        .substr(0, 10);\n}\n\nexport const formatDate = (value, uiLocale) => {\n    if (typeof global.Intl !== 'undefined' && Intl.DateTimeFormat) {\n        const locale = uiLocale || 'en';\n        return new Intl.DateTimeFormat(locale, {\n            year: 'numeric',\n            month: 'short',\n            day: 'numeric',\n        }).format(new Date(value));\n    }\n\n    return value.substr(0, 19).replace('T', ' ');\n};\n\n/**\n * Sorts an array of objects based on provided date property\n *\n * @param {Array} items Array of objects\n * @param {String} dateProp Name of the date property to be used for sorting\n * @param {Boolean} ascending Whether to sort ascending or descending\n */\nexport const sortByDate = (items, dateProp, ascending = true) => {\n    const values = Object.values(items);\n\n    values.sort((a, b) => {\n        const aDate = new Date(a[dateProp]);\n        const bDate = new Date(b[dateProp]);\n\n        return ascending ? aDate - bDate : bDate - aDate;\n    });\n\n    return values;\n};\n\n// reducer validator\nexport const validateReducer = (value, defaultValue) =>\n    value === undefined || value === null ? defaultValue : value;\n\nexport const getBaseUrl = d2 => {\n    const api = d2.Api.getApi();\n    const idx = api.baseUrl.indexOf('/api');\n    return idx > -1 ? api.baseUrl.slice(0, idx) : api.baseUrl;\n};\n\nexport const getWithoutId = object => ({\n    ...object,\n    id: undefined,\n});\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"ControlBar_root__3LaTt\",\"content\":\"ControlBar_content__1r98-\",\"draghandle\":\"ControlBar_draghandle__1VWa0\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"ClearButton_button__2yjcV\",\"icon\":\"ClearButton_icon__1fqj8\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"showMoreButton\":\"CategorizedMenuGroup_showMoreButton__3-0Wa\"};","import i18n from '@dhis2/d2-i18n';\nimport TableIcon from '@material-ui/icons/ViewList';\nimport ChartIcon from '@material-ui/icons/InsertChart';\nimport MapIcon from '@material-ui/icons/Public';\nimport ExtensionIcon from '@material-ui/icons/Extension';\nimport DescriptionIcon from '@material-ui/icons/Description';\nimport PersonIcon from '@material-ui/icons/Person';\nimport FontDownloadIcon from '@material-ui/icons/FontDownload';\nimport EmailIcon from '@material-ui/icons/Email';\nimport CropFreeIcon from '@material-ui/icons/CropFree';\nimport NotInterestedIcon from '@material-ui/icons/NotInterested';\n\nimport { getBaseUrl } from './util';\n\n// Item types\nexport const REPORT_TABLE = 'REPORT_TABLE';\nexport const CHART = 'CHART';\nexport const MAP = 'MAP';\nexport const EVENT_REPORT = 'EVENT_REPORT';\nexport const EVENT_CHART = 'EVENT_CHART';\nexport const APP = 'APP';\nexport const REPORTS = 'REPORTS';\nexport const RESOURCES = 'RESOURCES';\nexport const USERS = 'USERS';\nexport const MESSAGES = 'MESSAGES';\nexport const TEXT = 'TEXT';\nexport const SPACER = 'SPACER';\n\n// Domain types\nexport const DOMAIN_TYPE_AGGREGATE = 'AGGREGATE';\nexport const DOMAIN_TYPE_TRACKER = 'TRACKER';\n\n// Visualization types\nexport const VISUALIZATION_TYPE_TABLE = 'TABLE';\nexport const VISUALIZATION_TYPE_CHART = 'CHART';\nexport const VISUALIZATION_TYPE_MAP = 'MAP';\n\nexport const spacerContent = 'SPACER_ITEM_FOR_DASHBOARD_LAYOUT_CONVENIENCE';\nexport const emptyTextItemContent = 'TEXT_ITEM_WITH_NO_CONTENT';\nexport const isSpacerType = item =>\n    item.type === TEXT && item.text === spacerContent;\nexport const isTextType = item =>\n    item.type === TEXT && item.text !== spacerContent;\nexport const isPluginType = item =>\n    itemTypeMap[item.type].hasOwnProperty('plugin');\n\nexport const getPlugin = type => {\n    const pluginName = itemTypeMap[type].plugin;\n\n    if (type === CHART) {\n        return true;\n    }\n\n    return global[pluginName];\n};\n\n// Item type map\nexport const itemTypeMap = {\n    [REPORT_TABLE]: {\n        id: REPORT_TABLE,\n        endPointName: 'reportTables',\n        propName: 'reportTable',\n        pluralTitle: i18n.t('Pivot tables'),\n        plugin: 'reportTablePlugin',\n        domainType: DOMAIN_TYPE_AGGREGATE,\n        visualizationType: VISUALIZATION_TYPE_TABLE,\n        appUrl: id => `dhis-web-pivot/?id=${id}`,\n        appName: i18n.t('Pivot Tables'),\n    },\n    [CHART]: {\n        id: CHART,\n        endPointName: 'charts',\n        propName: 'chart',\n        pluralTitle: i18n.t('Charts'),\n        plugin: 'chartPlugin',\n        domainType: DOMAIN_TYPE_AGGREGATE,\n        visualizationType: VISUALIZATION_TYPE_CHART,\n        appUrl: id => `dhis-web-data-visualizer/#/${id}`,\n        appName: i18n.t('Visualizer'),\n    },\n    [MAP]: {\n        id: MAP,\n        endPointName: 'maps',\n        propName: 'map',\n        pluralTitle: i18n.t('Maps'),\n        plugin: 'mapPlugin',\n        domainType: DOMAIN_TYPE_AGGREGATE,\n        visualizationType: VISUALIZATION_TYPE_MAP,\n        appUrl: id => `dhis-web-maps/?id=${id}`,\n        appName: i18n.t('Maps'),\n    },\n    [EVENT_REPORT]: {\n        id: EVENT_REPORT,\n        endPointName: 'eventReports',\n        propName: 'eventReport',\n        pluralTitle: i18n.t('Event reports'),\n        plugin: 'eventReportPlugin',\n        domainType: DOMAIN_TYPE_TRACKER,\n        visualizationType: VISUALIZATION_TYPE_TABLE,\n        appUrl: id => `dhis-web-event-reports/?id=${id}`,\n        appName: i18n.t('Event Reports'),\n    },\n    [EVENT_CHART]: {\n        id: EVENT_CHART,\n        endPointName: 'eventCharts',\n        propName: 'eventChart',\n        pluralTitle: i18n.t('Event charts'),\n        plugin: 'eventChartPlugin',\n        domainType: DOMAIN_TYPE_TRACKER,\n        visualizationType: VISUALIZATION_TYPE_CHART,\n        appUrl: id => `dhis-web-event-visualizer/?id=${id}`,\n        appName: i18n.t('Event Visualizer'),\n    },\n    [APP]: {\n        endPointName: 'apps',\n        propName: 'appKey',\n        pluralTitle: i18n.t('Apps'),\n    },\n    [REPORTS]: {\n        id: REPORTS,\n        endPointName: 'reports',\n        propName: 'reports',\n        pluralTitle: i18n.t('Reports'),\n        appUrl: id =>\n            `dhis-web-reporting/getReportParams.action?mode=report&uid=${id}`,\n    },\n    [RESOURCES]: {\n        id: RESOURCES,\n        endPointName: 'resources',\n        propName: 'resources',\n        pluralTitle: i18n.t('Resources'),\n        appUrl: id => `api/documents/${id}/data`,\n    },\n    [USERS]: {\n        id: USERS,\n        endPointName: 'users',\n        propName: 'users',\n        pluralTitle: i18n.t('Users'),\n        appUrl: id => `dhis-web-dashboard-integration/profile.action?id=${id}`,\n    },\n    [TEXT]: {\n        id: TEXT,\n        propName: 'text',\n    },\n    [MESSAGES]: {\n        propName: 'messages',\n    },\n    [SPACER]: {\n        propName: 'text',\n    },\n};\n\nexport const getEndPointName = type => itemTypeMap[type].endPointName;\n\nexport const getItemUrl = (type, item, d2) => {\n    let url;\n\n    if (type === APP) {\n        url = item.launchUrl;\n    }\n\n    if (itemTypeMap[type] && itemTypeMap[type].appUrl) {\n        url = `${getBaseUrl(d2)}/${itemTypeMap[type].appUrl(item.id)}`;\n    }\n\n    return url;\n};\n\nexport const getItemIcon = type => {\n    switch (type) {\n        case REPORT_TABLE:\n        case EVENT_REPORT:\n        case REPORTS:\n            return TableIcon;\n        case CHART:\n        case EVENT_CHART:\n            return ChartIcon;\n        case MAP:\n            return MapIcon;\n        case APP:\n            return ExtensionIcon;\n        case RESOURCES:\n            return DescriptionIcon;\n        case USERS:\n            return PersonIcon;\n        case TEXT:\n            return FontDownloadIcon;\n        case MESSAGES:\n            return EmailIcon;\n        case SPACER:\n            return CropFreeIcon;\n        default:\n            return NotInterestedIcon;\n    }\n};\n"],"sourceRoot":""}
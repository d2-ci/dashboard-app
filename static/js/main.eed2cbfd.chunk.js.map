{"version":3,"sources":["api/metadata.js","components/Item/ListItem/Item.module.css","modules/util.js","reducers/user.js","reducers/dashboards.js","reducers/selected.js","reducers/visualizations.js","actions/visualizations.js","api/index.js","api/dashboards.js","reducers/messages.js","api/messages.js","reducers/snackbar.js","actions/snackbar.js","components/SnackbarMessage/SnackbarMessage.js","actions/selected.js","api/localStorage.js","components/Item/MessagesItem/actions.js","reducers/editDashboard.js","reducers/editItemFilters.js","reducers/itemFilters.js","actions/itemFilters.js","actions/editItemFilters.js","api/editDashboard.js","actions/editDashboard.js","actions/dashboards.js","reducers/controlBar.js","api/controlBar.js","actions/controlBar.js","reducers/dimensions.js","reducers/settings.js","actions/dimensions.js","components/ControlBar/ShowMoreButton.js","components/ControlBar/controlBarDimensions.js","components/ControlBar/ControlBar.js","icons/Star.js","api/dataStatistics.js","components/ControlBar/DashboardItemChip.js","icons/AddCircle.js","icons/Clear.js","components/ControlBar/ClearButton.js","reducers/dashboardsFilter.js","components/ControlBar/Filter.js","components/ControlBar/DashboardsBar.js","actions/dashboardsFilter.js","components/Dashboard/DashboardVerticalOffset.js","components/ItemSelector/HeaderMenuItem.js","icons/Launch.js","components/ItemSelector/ContentMenuItem.js","components/ItemSelector/selectableItems.js","components/ItemSelector/CategorizedMenuGroup.js","components/ItemSelector/actions.js","components/ItemSelector/SinglesMenuGroup.js","components/ItemSelector/ItemSelector.js","components/TitleBar/EditTitleBar.js","components/ItemFilter/FilterDialog.js","reducers/activeModalDimension.js","actions/activeModalDimension.js","components/ItemFilter/FilterSelector.js","components/TitleBar/Info.js","components/TitleBar/ViewTitleBar.js","components/TitleBar/TitleBar.js","components/Item/VisualizationItem/DefaultPlugin.js","components/Item/DeleteItemButton.js","components/Item/ItemHeader.js","components/Item/VisualizationItem/assets/icons.js","components/Item/VisualizationItem/ItemHeaderButtons.js","components/Item/VisualizationItem/ItemFooter.js","modules/memoizeOne.js","components/Item/VisualizationItem/Item.js","widgets/Line.js","components/Item/MessagesItem/Item.js","components/Item/NotSupportedItem/Item.js","icons/Description.js","icons/Delete.js","components/Item/ListItem/Item.js","components/Item/ListItem/actions.js","components/Item/TextItem/Item.js","components/Item/AppItem/Item.js","components/Item/SpacerItem/Item.js","components/Item/Item.js","widgets/NoContentMessage.js","components/Item/ProgressiveLoadingContainer.js","components/ItemGrid/ItemGrid.js","components/FilterBar/FilterBadge.js","components/FilterBar/FilterBar.js","components/Dashboard/DashboardContent.js","components/Dashboard/ViewDashboard.js","components/ControlBar/ConfirmDeleteDialog.js","components/ControlBar/EditBar.js","components/Dashboard/EditDashboard.js","components/Dashboard/NewDashboard.js","components/Dashboard/Dashboard.js","components/Dashboard/dashboardModes.js","components/App.js","actions/user.js","locales/index.js","reducers/style.js","reducers/index.js","configureStore.js","index.js","components/ControlBar/styles/DashboardsBar.module.css","components/ItemSelector/styles/ContentMenuItem.module.css","components/Item/styles/ItemHeader.module.css","components/ControlBar/styles/ControlBar.module.css","components/ControlBar/styles/ClearButton.module.css","components/Item/VisualizationItem/plugin.js","components/ItemGrid/gridUtil.js","components/ItemSelector/styles/CategorizedMenuGroup.module.css","components/Item/styles/DeleteItemButton.module.css","modules/itemTypes.js"],"names":["getIdNameFields","rename","arguments","length","undefined","concat","getDimensionFields","_ref2","withItems","arrayClean","join","getAxesFields","_ref3","getFavoriteFields","_ref4","withDimensions","withOptions","getFavoritesFields","_ref5","Object","_home_travis_build_dhis2_dashboards_app_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_toConsumableArray__WEBPACK_IMPORTED_MODULE_0__","getListItemFields","getMapFields","apiFetchFavorite","id","type","_ref6","fields","getInstance","then","d2","Api","getApi","get","getEndPointName","module","exports","list","item","itemicon","link","deleteicon","deletebutton","orArray","param","Array","isArray","orObject","isObject","arrayToIdMap","array","reduce","obj","formatDate","value","uiLocale","global","Intl","DateTimeFormat","locale","year","month","day","format","Date","substr","replace","validateReducer","defaultValue","getBaseUrl","api","idx","baseUrl","indexOf","slice","getWithoutId","object","_home_travis_build_dhis2_dashboards_app_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectSpread__WEBPACK_IMPORTED_MODULE_0__","DEFAULT_STATE_USER","username","isSuperuser","sGetUserUsername","state","user","DEFAULT_STATE_DASHBOARDS","byId","items","updateDashboardProp","_ref","dashboardId","prop","objectSpread","defineProperty","sGetDashboardsRoot","dashboards","sGetDashboardById","sDashboardsIsFetching","sGetAllDashboards","sGetDashboardItems","sGetStarredDashboards","values","filter","dashboard","starred","sGetUnstarredDashboards","sGetDashboardsSortedByStarred","toConsumableArray","arraySort","getCustomDashboards","data","arrayFrom","map","d","name","displayName","description","displayDescription","favorite","owner","created","split","lastUpdated","access","numberOfItems","dashboardItems","isSpacerType","SPACER","VISUALIZATION","reportTable","REPORT_TABLE","chart","CHART","text","isTextType","emptyTextItemContent","combineReducers","action","isLoading","showDescription","sGetSelectedRoot","selected","sGetSelectedId","sGetSelectedIsLoading","sGetSelectedShowDescription","DEFAULT_STATE_VISUALIZATIONS","isEmpty","p","sGetVisualization","visualizations","sGetVisualizationsRoot","acAddVisualization","onError","error","console","log","getDashboardItemsFields","withFavorite","getDashboardFields","apiFetchDashboard","models","catch","apiStarDashboard","isStarred","url","post","delete","apiDeleteDashboard","sGetMessagesRoot","messages","getMessages","DEFAULT_STATE_SNACKBAR","message","duration","open","acCloseSnackbar","loadingDashboardMsg","SnackbarMessageContent","react_default","a","createElement","style","fontWeight","connect","_sGetSnackbar","snackbar","sGetSnackbar","snackbarOpen","snackbarMessage","snackbarDuration","onCloseSnackbar","props","Snackbar_default","zIndex","SnackbarMessage_SnackbarMessageContent","autoHideDuration","onClose","acSetSelectedId","acSetSelectedIsLoading","tLoadDashboard","asyncToGenerator","regenerator_default","mark","_callee","dispatch","dash","wrap","_context","prev","next","sent","acAppendDashboards","abrupt","Promise","resolve","t0","stop","_x","apply","this","tSetSelectedDashboardById","_callee2","getState","snackbarTimeout","onSuccess","_context2","setTimeout","dashboardName","customDashboard","acSetDashboardItems","withShape","localStorage","setItem","forEach","MAP","EVENT_REPORT","EVENT_CHART","extractFavorite","MESSAGES","messageConversations","clearTimeout","_x2","_x3","DEFAULT_STATE_EDIT_DASHBOARD","NEW_DASHBOARD_STATE","sGetEditDashboardRoot","editDashboard","sGetIsEditing","sGetEditDashboardItems","DEFAULT_STATE_EDIT_ITEM_FILTERS","sGetEditItemFiltersRoot","editItemFilters","DEFAULT_STATE_ITEM_FILTERS","sGetItemFiltersRoot","itemFilters","sGetFiltersKeys","keys","acRemoveItemFilter","acRemoveEditItemFilter","saveDashboard","assign","width","w","height","h","save","msg","response","uid","updateDashboard","postDashboard","create","acAddDashboardItem","itemPropName","itemTypeMap","propName","generateUid","content","NEW_ITEM_SHAPE","acUpdateDashboardItem","acRemoveDashboardItem","acSetDashboardStarred","tFetchDashboards","collection","paging","toArray","userRows","sGetControlBarUserRows","controlBar","sGetControlBarRoot","KEY","hasNamespace","currentUser","dataStore","has","getNamespace","apiGetControlBarRows","_callee3","namespace","_context3","t1","t2","find","key","apiPostControlBarRows","_callee4","rows","_context4","set","_x4","_x5","acSetControlBarUserRows","DEFAULT_DIMENSIONS","getDimensionById","DIMENSION_ID_PERIOD","DIMENSION_ID_ORGUNIT","sGetDimensions","dimensions","DEFAULT_SETTINGS","keyDateFormat","keyAnalysisRelativePeriod","keyAnalysisDigitGroupSeparator","displayNameProperty","rootOrganisationUnit","sGetSettings","settings","sGetSettingsDisplayNameProperty","acSetDimensions","styles","showMore","color","colors","grey700","cursor","fontSize","paddingTop","&:hover","textDecoration","disabled","grey500","withStyles","onClick","isMaxHeight","classes","textAlign","className","i18n","t","MIN_ROW_COUNT","getRowsHeight","getNumRowsFromHeight","Math","floor","FIRST_ROW_PADDING_HEIGHT","getTopOffset","getControlBarHeight","ControlBar","_this","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","onStartDrag","setState","dragging","window","addEventListener","onDrag","onEndDrag","event","preventDefault","stopPropagation","newHeight","clientY","onChangeHeight","requestAnimationFrame","removeEventListener","draghandle","onMouseDown","max","rootStyle","top","backgroundColor","editMode","yellow050","white","paddingBottom","transition","root","children","renderDragHandle","React","Component","defaultProps","StarIcon","xmlns","viewBox","fill","apiPostDataStatistics","eventType","chip","margin","grey600","display","verticalAlign","icon","marginTop","unselected","label","chipProps","selectedState","Star","Link","to","debounce","lib","AddCircleIcon","teal600","ClearIcon","grey800","ClearButton","onClear","button","Clear","ownerData","DEFAULT_STATE_DASHBOARDS_FILTER_NAME","DEFAULT_STATE_DASHBOARDS_FILTER_OWNER","order","sGetDashboardsFilterRoot","dashboardsFilter","sGetFilterName","KEYCODE_ENTER","KEYCODE_ESCAPE","filterField","searchIcon","Filter","_Component","setFilterValue","onChangeName","target","handleKeyUp","keyCode","onKeypressEnter","inherits","createClass","nextProps","_this$props","startAdornment","InputAdornment_default","position","Search_default","endAdornment","ControlBar_ClearButton","Input_default","placeholder","onChange","onKeyUp","Function","prototype","MAX_ROW_COUNT","DashboardsBar","_getPrototypeOf2","_len","args","_key","setInitialDashboardState","adjustedHeight","newRows","newRowCount","min","onToggleMaxHeight","onSelectDashboard","history","push","selectedId","onChangeFilterName","rowCount","controlBarHeight","contentWrapperStyle","padding","overflowY","components_ControlBar_ControlBar","leftControls","marginRight","AddCircle","ControlBar_Filter","ControlBar_DashboardItemChip","ControlBar_ShowMoreButton","mapDispatchToProps","withRouter","stateProps","dispatchProps","ownProps","displayDashboards","toLowerCase","includes","HeaderMenuItem","title","dense","LaunchIcon","LaunchLink","e","launchLink","rel","href","Launch","InsertButton","buttonInsert","ContentMenuItem","onInsert","ItemIcon","getItemIcon","menuItem","ContentMenuItem_LaunchLink","ContentMenuItem_InsertButton","singleItems","header","TEXT","spacerContent","categorizedItems","USERS","REPORTS","RESOURCES","APP","listItemTypes","CategorizedMenuGroup","addItem","tAddListItemContent","newItem","toggleSeeMore","seeMore","onChangeItemsLimit","_this2","_this$props2","hasMore","react","ItemSelector_HeaderMenuItem","itemUrl","getItemUrl","context","ItemSelector_ContentMenuItem","showMoreButton","contextTypes","PropTypes","isRequired","dashboardItem","listItemType","dashboardItemIndex","findIndex","category","addToDashboard","ItemSearchField","onFocus","ItemSelector","closeList","openList","_","fetchItems","anchorEl","currentTarget","setFilter","getCategorizedMenuGroups","itemType","endPointName","allItems","maxOptions","ItemSelector_CategorizedMenuGroup","pluralTitle","getSinglesMenuGroups","ItemSelector_SinglesMenuGroup","getMenuGroups","queryString","add","Set","ItemSelector_ItemSearchField","Popover_default","anchorOrigin","horizontal","vertical","transformOrigin","PaperProps","disableAutoFocus","disableRestoreFocus","EditTitleBar","onChangeTitle","onChangeDescription","section","titleDescription","itemSelector","components_ItemSelector_ItemSelector","selectedDashboard","justifyContent","flex","clear","underline","&::before","borderBottom","&:hover::before","input","borderRadius","peId","ouId","FilterDialog","onConfirm","dimension","selectedItems","dialogId","commonProps","onSelect","onDeselect","onReorder","build","selectedPeriods","ouItems","dialogTitle","Dialog_default","maxWidth","disableEnforceFocus","dialogContent","DialogActions_default","kind","DEFAULT_STATE_ACTIVE_MODAL_DIMENSION","sGetActiveModalDimension","activeModalDimension","acSetActiveModalDimension","FilterSelector","openPanel","closePanel","closeDialog","clearActiveModalDimension","selectDimension","setActiveModalDimension","onSelectItems","dimensionId","setEditItemFilters","onDeselectItems","itemIdsToRemove","newList","removeEditItemFilter","onReorderItems","itemIds","oldList","reorderedList","saveFilter","filterItems","addItemFilter","removeItemFilter","theme","selectedDimensions","ArrowDropDown_default","Boolean","fontFamily","typography","onDimensionClick","selectedIds","ItemFilter_FilterDialog","filters","withTheme","Info","show","toggle","InfoOutlined_default","NO_DESCRIPTION","actions","alignItems","marginLeft","starIcon","textButton","minWidth","editLink","titleBar","titleBarIcon","ViewTitleBar","toggleSharingDialog","sharingDialogIsOpen","onStarClick","onInfoClick","titleStyle","userSelect","StarBorder","TitleBar_Info","update","manage","ItemFilter_FilterSelector","d2_ui_sharing_dialog_default","onRequestClose","tStarDashboard","black","TitleBar","edit","TitleBar_EditTitleBar","TitleBar_ViewTitleBar","DefaultPlugin","pluginCredentials","shouldPluginReload","prevProps","reloadAllowed","filtersChanged","vis","visualization","prevVis","visChanged","activeType","reloadPlugin","pluginManager","currentVis","useActiveType","credentials","getActiveType","auth","defaultHeaders","Authorization","getGridItemDomId","textDiv","DeleteItemButton","deleteItemButton","Delete_default","red500","actionButtons","itemId","itemHeaderWrap","itemTitle","itemActionsWrap","Item_DeleteItemButton","ThreeDots","SpeechBubble","fillRule","transform","iconFill","ItemHeaderButtons","_useState","useState","_useState2","slicedToArray","setAnchorEl","onSelectActiveType","isTrackerType","isTrackerDomainType","onViewTable","handleClose","onViewChart","onViewMap","canViewAs","isSingleValue","match","interpretationMenuLabel","activeFooter","pluginIsAvailable","Fragment","small","secondary","icons_ThreeDots","active","InsertChart_default","ViewList_default","hasMapView","Public_default","Launch_default","getAppName","getLink","icons_SpeechBubble","onToggleFooter","scrollContainer","line","border","grey100","ItemFooter","objectId","getId","d2_ui_interpretations_default","appName","memoizeOne","fn","lastArgs","lastValue","every","arg","i","HEADER_HEIGHT","overflow","textOverflow","whiteSpace","fontStretch","lineHeight","applyFilters","visRows","visColumns","columns","visFilters","dimensionFound","dimensionObjects","Item","showFooter","configLoaded","getUniqueKey","uniqueId","getPluginComponent","getVisualizationConfig","getContentStyle","es_lib","forDashboard","mapViews","layer","VisualizationItem_DefaultPlugin","onToggleItemExpanded","contentRef","offsetHeight","originalHeight","createRef","_componentDidMount","onVisualizationLoaded","VisualizationItem_ItemHeaderButtons","Item_ItemHeader","ref","VisualizationItem_ItemFooter","acSetActiveVisualizationType","grey200","Line","PRIVATE","messageTypes","_messageTypes","listStyleType","paddingLeft","seeAll","marginBottom","sender","snippet","maxHeight","MessagesItem","getMessageHref","msgIdentifier","messageType","getMessageSender","latestMsg","getMessageItems","editClass","readClass","read","msgDate","document","location","messageCount","userSettings","widgets_Line","string","MessagesContainer","NotSupportedItem","NotInterested_default","align","DescriptionIcon","DeleteIcon","getItemTitle","ListItem","tRemoveListItemContent","contentItems","index","el","getContentItems","contentItem","Description","deleteButton","icons_Delete","grey900","newContent","textField","container","onChangeText","updatedItem","d2_ui_rich_text","onEdit","multiline","fullWidth","textDivStyle","viewItem","getIframeSrc","appDetails","iframeSrc","launchUrl","ouIds","ouPath","AppItem","appKey","system","installedApps","app","src","SpacerItem","GridItem","VisualizationItem","TextItem","getGridItem","NoContentMessage","ProgressiveLoadingContainer","shouldLoad","containerRef","shouldLoadHandler","bufferPx","bufferFactor","innerHeight","rect","getBoundingClientRect","bottom","removeHandler","checkShouldLoad","debounceMs","registerHandler","_this3","objectWithoutProperties","eventProps","pick","ItemGrid","expandedItems","clickedId","isExpanded","onRemoveItem","onLayoutChange","newLayout","acUpdateDashboardLayout","onResizeStop","layout","oldItem","onItemResize","isVisualizationType","pluginResize","onRemoveItemWrapper","widgets_NoContentMessage","expandedItem","hProp","minH","ITEM_MIN_HEIGHT","react_grid_layout_default","MARGIN","cols","getGridColumns","rowHeight","GRID_ROW_HEIGHT","innerWidth","compactType","GRID_COMPACT_TYPE","isDraggable","isResizable","draggableCancel","itemClassNames","Item_ProgressiveLoadingContainer","Item_Item_Item","validItems","hasShape","badgeContainer","badge","badgeRemove","FilterBadge","onRemove","count","FilterBar","onBadgeRemove","onBadgeClick","bar","FilterBar_FilterBadge","removeItemFIlter","filtersSelector","createSelector","arr","flexWrap","DashboardContent","components_TitleBar_TitleBar","components_FilterBar_FilterBar","components_ItemGrid_ItemGrid","Content","hasDashboardContent","dashboardsIsEmpty","Dashboard_DashboardContent","dashboardsLoaded","contentNotReady","ControlBar_DashboardsBar","Dashboard_DashboardVerticalOffset","ViewDashboard_Content","ConfirmDeleteDialog","onDeleteConfirmed","onContinueEditing","destructive","DialogTitle_default","DialogContent_default","DialogContentText_default","buttonBarStyle","EditBar","translationDialogIsOpen","dashboardModel","confirmDeleteDialogOpen","redirectUrl","onConfirmDelete","onSave","newId","onDiscard","onDiscardChanges","onDelete","onTranslationsSaved","translations","dbLocale","translation","property","onTranslate","fetchDashboardModel","toggleTranslationDialog","confirmDeleteDialog","deleteAccess","ControlBar_ConfirmDeleteDialog","translationDialog","d2_ui_translation_dialog_default","objectToTranslate","fieldsToTranslate","onTranslationSaved","onTranslationError","err","Redirect","updateAccess","discardBtnText","primary","rightControls","sGetIsNewDashboard","dashboardToSave","tDeleteDashboard","acSetDashboardDisplayName","EditDashboard","initialized","initEditDashboard","setEditDashboard","getDashboardContent","EditDashboard_Content","ControlBar_EditBar","NewDashboard","setNewDashboard","Dashboard","setDashboard","params","selectDashboard","scrollToTop","scrollTo","mode","Dashboard_EditDashboard","Dashboard_NewDashboard","Dashboard_ViewDashboard","dashboardToSelect","preferredId","getItem","App","setCurrentUser","fetchDashboards","setControlBarRows","setDimensions","spacers","HeaderBar","HashRouter","Switch","Route","exact","path","render","components_Dashboard_Dashboard","components_SnackbarMessage_SnackbarMessage","childContextTypes","controlBarRows","displayNameProp","filteredDimensions","apiFetchDimensions","dim","dimensionType","dataDimensionType","tSetDimensions","moment","addResources","arTranslations","daTranslations","enTranslations","esTranslations","frTranslations","idTranslations","kmTranslations","loTranslations","myTranslations","prsTranslations","psTranslations","ptTranslations","pt_BRTranslations","ruTranslations","svTranslations","tetTranslations","tgTranslations","ukTranslations","urTranslations","viTranslations","zhTranslations","zh_CNTranslations","setDefaultNamespace","changeLanguage","objectClean","conversations","$merge","d2Object","keyUiLocale","authorities","newState","k","$unshift","idToRemove","$splice","stateItems","newStateItems","x","y","stateItem","si","$set","configureStore","middleware","thunk","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","createStore","reducer","applyMiddleware","configI18n","config","sources","manifest","isProd","getManifest","info","version","manifest_generated_at","process","activities","dhis","dhis2","apiVersion","headers","schemas","getUserSettings","d2Init","initializedD2","ReactDOM","build_es","es","store","createMuiTheme","dhis2theme","src_components_App","getElementById","init","itemWrap","itemTypeToExternalPlugin","_itemTypeToExternalPl","_home_travis_build_dhis2_dashboards_app_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_defineProperty__WEBPACK_IMPORTED_MODULE_3__","getPlugin","hasIntegratedPlugin","eventReport","eventChart","loadPlugin","plugin","load","loadingIndicator","getName","appUrl","_home_travis_build_dhis2_dashboards_app_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_asyncToGenerator__WEBPACK_IMPORTED_MODULE_2__","_home_travis_build_dhis2_dashboards_app_node_modules_babel_preset_react_app_node_modules_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default","_home_travis_build_dhis2_dashboards_app_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectSpread__WEBPACK_IMPORTED_MODULE_1__","fetch","fetchedFavorite","resize","unmount","originalType","extractedMapView","mv","VIS_TYPE_COLUMN","VIS_TYPE_PIVOT_TABLE","__webpack_require__","__webpack_exports__","d2_utilizr_lib_isFunction__WEBPACK_IMPORTED_MODULE_0__","d2_utilizr_lib_isFunction__WEBPACK_IMPORTED_MODULE_0___default","n","_modules_util__WEBPACK_IMPORTED_MODULE_1__","isNonNegativeInteger","Number","isInteger","itemWithShape","Error","col","row","itemWidth","itemHeight","getShape","round","getOriginalHeight","querySelector","isFunction","setViewportSize","clientWidth","clientHeight","domainType","_itemTypeMap","_home_travis_build_dhis2_dashboards_app_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_defineProperty__WEBPACK_IMPORTED_MODULE_0__","defaultItemCount","TableIcon","ChartIcon","MapIcon","ExtensionIcon","PersonIcon","FontDownloadIcon","EmailIcon","CropFreeIcon","NotInterestedIcon"],"mappings":"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","file":"static/js/main.eed2cbfd.chunk.js","sourcesContent":["import { getInstance } from 'd2';\nimport arrayClean from 'd2-utilizr/lib/arrayClean';\n\nimport { getEndPointName } from '../modules/itemTypes';\n\n// Id, name\nexport const getIdNameFields = ({ rename } = {}) => [\n    'id',\n    `${rename ? 'displayName~rename(name)' : 'name,displayName'}`,\n];\n\n// Item\nexport const getItemFields = () => [\n    'dimensionItem~rename(id)',\n    'displayName~rename(name)',\n    'dimensionItemType',\n];\n\n// Dimension\nexport const getDimensionFields = ({ withItems }) =>\n    arrayClean([\n        'dimension',\n        'legendSet[id]',\n        'filter',\n        'programStage',\n        withItems ? `items[${getItemFields().join(',')}]` : ``,\n    ]);\n\n// Axis\nexport const getAxesFields = ({ withItems }) => [\n    `columns[${getDimensionFields({ withItems }).join(',')}]`,\n    `rows[${getDimensionFields({ withItems }).join(',')}]`,\n    `filters[${getDimensionFields({ withItems }).join(',')}]`,\n];\n\n// Favorite\nexport const getFavoriteFields = ({ withDimensions, withOptions }) => {\n    return arrayClean([\n        `${getIdNameFields({ rename: true }).join(',')}`,\n        'displayDescription~rename(description)',\n        withDimensions ? `${getAxesFields({ withItems: true }).join(',')}` : ``,\n        withOptions\n            ? [\n                  '*',\n                  '!attributeDimensions',\n                  '!attributeValues',\n                  '!category',\n                  '!categoryDimensions',\n                  '!categoryOptionGroupSetDimensions',\n                  '!columnDimensions',\n                  '!dataDimensionItems',\n                  '!dataElementDimensions',\n                  '!dataElementGroupSetDimensions',\n                  '!filterDimensions',\n                  '!itemOrganisationUnitGroups',\n                  '!lastUpdatedBy',\n                  '!organisationUnitGroupSetDimensions',\n                  '!organisationUnitLevels',\n                  '!organisationUnits',\n                  '!programIndicatorDimensions',\n                  '!relativePeriods',\n                  '!reportParams',\n                  '!rowDimensions',\n                  '!series',\n                  '!translations',\n                  '!userOrganisationUnit',\n                  '!userOrganisationUnitChildren',\n                  '!userOrganisationUnitGrandChildren',\n              ].join(',')\n            : '',\n    ]);\n};\n\nexport const getFavoritesFields = ({ withDimensions }) => [\n    `reportTable[${getFavoriteFields({ withDimensions }).join(',')}]`,\n    `chart[${['type', ...getFavoriteFields({ withDimensions })].join(',')}]`,\n    `map[${getFavoriteFields({ withDimensions }).join(',')}]`,\n    `eventReport[${getFavoriteFields({ withDimensions }).join(',')}]`,\n    `eventChart[${getFavoriteFields({ withDimensions }).join(',')}]`,\n];\n\n// List item\nexport const getListItemFields = () => [\n    `reports[${getIdNameFields({ rename: true }).join(',')}]`,\n    `resources[${getIdNameFields({ rename: true }).join(',')}]`,\n    `users[${getIdNameFields({ rename: true }).join(',')}]`,\n];\n\n// Map\nexport const getMapFields = () => [\n    `${getIdNameFields({ rename: true }).join(',')}`,\n    'user,longitude,latitude,zoom,basemap',\n    `mapViews[${getFavoriteFields({\n        withDimensions: true,\n        withOptions: true,\n    })}]`,\n];\n\n// Api\n\n// Get more info about the favorite of a dashboard item\nexport const apiFetchFavorite = (id, type, { fields }) =>\n    getInstance().then(d2 =>\n        d2.Api.getApi().get(`${getEndPointName(type)}/${id}`, {\n            fields:\n                fields ||\n                getFavoriteFields({\n                    withDimensions: true,\n                    withOptions: true,\n                }),\n        })\n    );\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"Item_list__2oHc1\",\"item\":\"Item_item__lO40M\",\"itemicon\":\"Item_itemicon__dv5ah\",\"link\":\"Item_link__2gULT\",\"deleteicon\":\"Item_deleteicon__3c7bl\",\"deletebutton\":\"Item_deletebutton__1DfY5\"};","import isObject from 'lodash/isObject';\n\n// validation\nexport function orNull(param) {\n    return param === undefined ? null : param;\n}\n\nexport function orArray(param) {\n    return Array.isArray(param) ? param : [];\n}\n\nexport function orObject(param) {\n    return isObject(param) ? param : {};\n}\n\n// array\nexport function arrayGetById(array, id) {\n    return array.find(item => item.id === id);\n}\n\n// object\nexport function arrayToIdMap(array) {\n    return array.reduce((obj, item) => {\n        obj[item.id] = item;\n        return obj;\n    }, {});\n}\n\n// date\nexport function getDate() {\n    const y = Math.floor(Math.random() * 3) + 2015;\n    const M = Math.floor(Math.random() * 12) + 1;\n    const d = Math.floor(Math.random() * 28) + 1;\n    // const h = Math.floor(Math.random() * 23) + 1;\n    // const m = Math.floor(Math.random() * 59) + 1;\n    // const s = Math.floor(Math.random() * 59) + 1;\n\n    return new Date(`${y}-${M}-${d}`)\n        .toJSON()\n        .replace('T', ' ')\n        .substr(0, 10);\n}\n\nexport const formatDate = (value, uiLocale) => {\n    if (typeof global.Intl !== 'undefined' && Intl.DateTimeFormat) {\n        const locale = uiLocale || 'en';\n        return new Intl.DateTimeFormat(locale, {\n            year: 'numeric',\n            month: 'short',\n            day: 'numeric',\n        }).format(new Date(value));\n    }\n\n    return value.substr(0, 19).replace('T', ' ');\n};\n\n/**\n * Sorts an array of objects based on provided date property\n *\n * @param {Array} items Array of objects\n * @param {String} dateProp Name of the date property to be used for sorting\n * @param {Boolean} ascending Whether to sort ascending or descending\n */\nexport const sortByDate = (items, dateProp, ascending = true) => {\n    const values = Object.values(items);\n\n    values.sort((a, b) => {\n        const aDate = new Date(a[dateProp]);\n        const bDate = new Date(b[dateProp]);\n\n        return ascending ? aDate - bDate : bDate - aDate;\n    });\n\n    return values;\n};\n\n// reducer validator\nexport const validateReducer = (value, defaultValue) =>\n    value === undefined || value === null ? defaultValue : value;\n\nexport const getBaseUrl = d2 => {\n    const api = d2.Api.getApi();\n    const idx = api.baseUrl.indexOf('/api');\n    return idx > -1 ? api.baseUrl.slice(0, idx) : api.baseUrl;\n};\n\nexport const getWithoutId = object => ({\n    ...object,\n    id: undefined,\n});\n","export const RECEIVED_USER = 'RECEIVED_USER';\n\nexport const DEFAULT_STATE_USER = {\n    id: '',\n    username: '',\n    uiLocale: '',\n    isSuperuser: false,\n};\n\nexport default (state = DEFAULT_STATE_USER, action) => {\n    switch (action.type) {\n        case RECEIVED_USER: {\n            return fromD2ToUserObj(action.value);\n        }\n        default:\n            return state;\n    }\n};\n\nfunction fromD2ToUserObj(d2Object) {\n    return {\n        id: d2Object.id,\n        username: d2Object.username,\n        uiLocale: d2Object.settings.keyUiLocale,\n        isSuperuser: d2Object.authorities.has('ALL'),\n    };\n}\n\n// selectors\n\nexport const sGetUserId = state => state.user.id;\nexport const sGetUserUsername = state => state.user.username;\nexport const sGetIsSuperuser = state => state.user.isSuperuser;\nexport const sGetUiLocale = state => state.user.uiLocale;\n","/** @module reducers/dashboards */\n\nimport arrayFrom from 'd2-utilizr/lib/arrayFrom';\nimport arraySort from 'd2-utilizr/lib/arraySort';\n\nimport { orArray, orObject } from '../modules/util';\nimport {\n    SPACER,\n    isSpacerType,\n    isTextType,\n    emptyTextItemContent,\n    REPORT_TABLE,\n    CHART,\n    VISUALIZATION,\n} from '../modules/itemTypes';\n\nexport const SET_DASHBOARDS = 'SET_DASHBOARDS';\nexport const ADD_DASHBOARDS = 'ADD_DASHBOARDS';\nexport const SET_DASHBOARD_STARRED = 'SET_DASHBOARD_STARRED';\nexport const SET_DASHBOARD_DISPLAY_NAME = 'SET_DASHBOARD_DISPLAY_NAME';\nexport const SET_DASHBOARD_ITEMS = 'SET_DASHBOARD_ITEMS';\n\nexport const DEFAULT_STATE_DASHBOARDS = {\n    byId: null,\n    items: [],\n};\n\n// reducer helper functions\n\nconst updateDashboardProp = ({ state, dashboardId, prop, value }) => ({\n    byId: {\n        ...state.byId,\n        [dashboardId]: {\n            ...state.byId[dashboardId],\n            [prop]: value,\n        },\n    },\n    items: state.items,\n});\n\n/**\n * Reducer that computes and returns the new state based on the given action\n * @function\n * @param {Object} state The current state\n * @param {Object} action The action to be evaluated\n * @returns {Object}\n */\nexport default (state = DEFAULT_STATE_DASHBOARDS, action) => {\n    switch (action.type) {\n        case SET_DASHBOARDS: {\n            return {\n                byId: action.value,\n                items: [],\n            };\n        }\n        case ADD_DASHBOARDS: {\n            return {\n                ...state,\n                byId: {\n                    ...state.byId,\n                    ...action.value,\n                },\n            };\n        }\n        case SET_DASHBOARD_STARRED: {\n            return updateDashboardProp({\n                state,\n                dashboardId: action.dashboardId,\n                prop: 'starred',\n                value: action.value,\n            });\n        }\n        case SET_DASHBOARD_DISPLAY_NAME: {\n            return updateDashboardProp({\n                state,\n                dashboardId: action.dashboardId,\n                prop: 'displayName',\n                value: action.value,\n            });\n        }\n        case SET_DASHBOARD_ITEMS: {\n            return {\n                ...state,\n                items: action.value,\n            };\n        }\n        default:\n            return state;\n    }\n};\n\n// root selector\n\nexport const sGetDashboardsRoot = state => state.dashboards;\n\n// selector level 1\n\n/**\n * Selector which returns a dashboard by id from the state object\n * If no matching dashboard is found it returns undefined\n * If dashboards.byId is null, then the dashboards api request\n * has not yet completed. If dashboards.byId is an empty object\n * then the dashboards api request is complete, but no dashboards\n * were returned\n *\n * @function\n * @param {Object} state The current state\n * @param {Number} id The id of the dashboard\n * @returns {Object | undefined}\n */\nexport const sGetDashboardById = (state, id) =>\n    orObject(sGetDashboardsRoot(state).byId)[id];\n\nexport const sDashboardsIsFetching = state => {\n    return sGetDashboardsRoot(state).byId === null;\n};\n\n/**\n * Selector which returns all dashboards (the byId object)\n *\n * @function\n * @param {Object} state The current state\n * @returns {Object | undefined}\n */\nexport const sGetAllDashboards = state =>\n    orObject(sGetDashboardsRoot(state).byId);\n\n/**\n * Selector which returns the current dashboard items\n *\n * @function\n * @param {Object} state The current state\n * @returns {Array}\n */\nexport const sGetDashboardItems = state => sGetDashboardsRoot(state).items;\n\n// selector level 2\n\nexport const sGetStarredDashboards = state =>\n    Object.values(sGetAllDashboards(state)).filter(\n        dashboard => dashboard.starred === true\n    );\n\nexport const sGetUnstarredDashboards = state =>\n    Object.values(sGetAllDashboards(state)).filter(\n        dashboard => dashboard.starred === false\n    );\n\n// selector level 3\n\nexport const sGetStarredDashboardIds = state => {\n    return sGetStarredDashboards(state).map(dashboard => dashboard.id);\n};\n\nexport const sGetUnstarredDashboardIds = state =>\n    sGetUnstarredDashboards(state).map(dashboard => dashboard.id);\n\nexport const sGetDashboardsSortedByStarred = state => [\n    ...arraySort(sGetStarredDashboards(state), 'ASC', 'displayName'),\n    ...arraySort(sGetUnstarredDashboards(state), 'ASC', 'displayName'),\n];\n\n// utils\n\n/**\n * Returns the array of dashboards, customized for ui\n * @function\n * @param {Array} data The original dashboard list\n * @returns {Array}\n */\nexport const getCustomDashboards = data => {\n    const uiItems = items =>\n        items.map(item => {\n            let type = isSpacerType(item) ? SPACER : item.type;\n\n            // TODO: temporary fix before 2.34 epic branch is merged\n            // if \"VISUALIZATION\", reset to \"REPORT_TABLE\" or \"CHART\"\n            if (type === VISUALIZATION) {\n                type = item.reportTable\n                    ? REPORT_TABLE\n                    : item.chart\n                    ? CHART\n                    : type;\n            }\n\n            const text = isTextType(item)\n                ? item.text === emptyTextItemContent\n                    ? ''\n                    : item.text\n                : null;\n\n            return {\n                ...item,\n                ...(text !== null ? { text } : {}),\n                type,\n            };\n        });\n\n    return arrayFrom(data).map(d => ({\n        id: d.id,\n        name: d.name,\n        displayName: d.displayName,\n        description: d.description,\n        displayDescription: d.displayDescription,\n        starred: d.favorite,\n        owner: d.user.name,\n        created: d.created\n            .split('T')\n            .join(' ')\n            .substr(0, 16),\n        lastUpdated: d.lastUpdated\n            .split('T')\n            .join(' ')\n            .substr(0, 16),\n        access: d.access,\n        numberOfItems: orArray(d.dashboardItems).length,\n        dashboardItems: uiItems(d.dashboardItems),\n    }));\n};\n","/** @module reducers/selected */\nimport { combineReducers } from 'redux';\n\nimport { validateReducer } from '../modules/util';\n\nexport const SET_SELECTED_ID = 'SET_SELECTED_ID';\nexport const SET_SELECTED_ISLOADING = 'SET_SELECTED_ISLOADING';\nexport const SET_SELECTED_SHOWDESCRIPTION = 'SET_SELECTED_SHOWDESCRIPTION';\n\nexport const DEFAULT_STATE_SELECTED_ID = null;\nexport const DEFAULT_STATE_SELECTED_ISLOADING = false;\nexport const DEFAULT_STATE_SELECTED_SHOWDESCRIPTION = false;\n\n/**\n * Reducer functions that computes and returns the new state based on the given action\n * @function\n * @param {Object} state The current state\n * @param {Object} action The action to be evaluated\n */\nconst id = (state = DEFAULT_STATE_SELECTED_ID, action) => {\n    switch (action.type) {\n        case SET_SELECTED_ID:\n            return validateReducer(action.value, DEFAULT_STATE_SELECTED_ID);\n        default:\n            return state;\n    }\n};\n\nconst isLoading = (state = DEFAULT_STATE_SELECTED_ISLOADING, action) => {\n    switch (action.type) {\n        case SET_SELECTED_ISLOADING:\n            return validateReducer(\n                action.value,\n                DEFAULT_STATE_SELECTED_ISLOADING\n            );\n        default:\n            return state;\n    }\n};\n\nconst showDescription = (\n    state = DEFAULT_STATE_SELECTED_SHOWDESCRIPTION,\n    action\n) => {\n    switch (action.type) {\n        case SET_SELECTED_SHOWDESCRIPTION:\n            return validateReducer(\n                action.value,\n                DEFAULT_STATE_SELECTED_SHOWDESCRIPTION\n            );\n        default:\n            return state;\n    }\n};\n\nexport default combineReducers({\n    id,\n    isLoading,\n    showDescription,\n});\n\n// Selectors\n\nexport const sGetSelectedRoot = state => state.selected;\n\nexport const sGetSelectedId = state => sGetSelectedRoot(state).id;\n\nexport const sGetSelectedIsLoading = state => sGetSelectedRoot(state).isLoading;\n\nexport const sGetSelectedShowDescription = state =>\n    sGetSelectedRoot(state).showDescription;\n","import { orObject } from '../modules/util';\nimport objectClean from 'd2-utilizr/lib/objectClean';\n\n/** @module reducers/visualizations */\n\nexport const ADD_VISUALIZATION = 'ADD_VISUALIZATION';\nexport const SET_ACTIVE_VISUALIZATION_TYPE = 'SET_ACTIVE_VISUALIZATION_TYPE';\n\nexport const DEFAULT_STATE_VISUALIZATIONS = {};\n\nconst isEmpty = p => p === undefined || p === null;\n\nexport default (state = DEFAULT_STATE_VISUALIZATIONS, action) => {\n    switch (action.type) {\n        case ADD_VISUALIZATION: {\n            return {\n                ...state,\n                [action.value.id]: objectClean(\n                    {\n                        ...orObject(state[action.value.id]),\n                        ...action.value,\n                    },\n                    isEmpty\n                ),\n            };\n        }\n        case SET_ACTIVE_VISUALIZATION_TYPE: {\n            return {\n                ...state,\n                [action.id]: objectClean(\n                    {\n                        ...orObject(state[action.id]),\n                        activeType: action.activeType,\n                    },\n                    isEmpty\n                ),\n            };\n        }\n        default:\n            return state;\n    }\n};\n\n// root selector\nexport const sGetVisualizationsRoot = state => state.visualizations;\n\n// selectors level 1\nexport const sGetVisualization = (state, id) => {\n    return sGetVisualizationsRoot(state)[id];\n};\n","import {\n    ADD_VISUALIZATION,\n    SET_ACTIVE_VISUALIZATION_TYPE,\n} from '../reducers/visualizations';\n\nexport const acAddVisualization = value => ({\n    type: ADD_VISUALIZATION,\n    value,\n});\n\nexport const acSetActiveVisualizationType = (id, activeType) => {\n    const action = {\n        type: SET_ACTIVE_VISUALIZATION_TYPE,\n        id,\n        activeType,\n    };\n\n    return action;\n};\n","import arrayClean from 'd2-utilizr/lib/arrayClean';\nimport {\n    getListItemFields,\n    getFavoritesFields,\n    getIdNameFields,\n} from './metadata';\n\n// Helper functions\n\nexport const onError = error => console.log('Error: ', error);\n\n// Dashboard item\nexport const getDashboardItemsFields = ({ withFavorite } = {}) =>\n    arrayClean([\n        'id',\n        'type',\n        'shape',\n        'x',\n        'y',\n        'width~rename(w)',\n        'height~rename(h)',\n        'messages',\n        'text',\n        'appKey',\n        `${getListItemFields().join(',')}`,\n        withFavorite\n            ? `${getFavoritesFields({\n                  withDimensions: withFavorite.withDimensions,\n              }).join(',')}`\n            : ``,\n    ]);\n\n// Dashboard\nexport const getDashboardFields = ({ withItems, withFavorite } = {}) =>\n    arrayClean([\n        `${getIdNameFields().join(',')}`,\n        'description',\n        'displayDescription',\n        'favorite',\n        `user[${getIdNameFields({ rename: true }).join(',')}]`,\n        'created',\n        'lastUpdated',\n        'access',\n        withItems\n            ? `dashboardItems[${getDashboardItemsFields({\n                  withFavorite,\n              }).join(',')}]`\n            : ``,\n    ]);\n","import { getInstance } from 'd2';\nimport arrayClean from 'd2-utilizr/lib/arrayClean';\nimport { onError, getDashboardFields } from './index';\n\n// Get \"all\" dashboards on startup\nexport const apiFetchDashboards = () =>\n    getInstance()\n        .then(d2 =>\n            d2.models.dashboard.list({\n                fields: [\n                    getDashboardFields().join(','),\n                    'dashboardItems[id]',\n                ].join(','),\n                paging: 'false',\n            })\n        )\n        .catch(onError);\n\n// Get more info about selected dashboard\nexport const apiFetchDashboard = id =>\n    getInstance()\n        .then(d2 =>\n            d2.models.dashboard.get(id, {\n                fields: arrayClean(\n                    getDashboardFields({\n                        withItems: true,\n                        withFavorite: { withDimensions: false },\n                    })\n                ).join(','),\n            })\n        )\n        .catch(onError);\n\n// Star dashboard\nexport const apiStarDashboard = (id, isStarred) => {\n    const url = `dashboards/${id}/favorite`;\n\n    getInstance().then(d2 => {\n        if (isStarred) {\n            d2.Api.getApi().post(url);\n        } else {\n            d2.Api.getApi().delete(url);\n        }\n    });\n};\n\nexport const apiDeleteDashboard = id => {\n    return getInstance()\n        .then(d2 => {\n            return d2.models.dashboards\n                .get(id)\n                .then(dashboard => dashboard.delete());\n        })\n        .catch(onError);\n};\n","import update from 'immutability-helper';\nimport { arrayToIdMap } from '../modules/util';\n\nexport const RECEIVED_MESSAGES = 'RECEIVED_MESSAGES';\n\nexport default (state = {}, action) => {\n    switch (action.type) {\n        case RECEIVED_MESSAGES: {\n            const conversations = arrayToIdMap(action.value);\n\n            const newState = update(state, { $merge: conversations });\n\n            return newState;\n        }\n        default:\n            return state;\n    }\n};\n\n// selectors\n\nexport const sGetMessagesRoot = state => state.messages;\n","import { getInstance } from 'd2';\n\nexport const getMessages = () => {\n    const fields =\n        'id,messageCount,lastUpdated,messageType,displayName,read,messages[id,read,sender[id,displayName],text,lastUpdated]';\n    const url = `/messageConversations?fields=${fields}&order=read:asc&pageSize=200`;\n    return getInstance()\n        .then(d2 => d2.Api.getApi().get(url))\n        .catch(error => console.log('Error:', error));\n};\n","export const RECEIVED_SNACKBAR_MESSAGE = 'RECEIVED_SNACKBAR_MESSAGE';\nexport const CLOSE_SNACKBAR = 'CLOSE_SNACKBAR';\n\nexport const DEFAULT_STATE_SNACKBAR = {\n    message: {},\n    duration: null,\n    open: false,\n};\n\nexport default (state = DEFAULT_STATE_SNACKBAR, action) => {\n    switch (action.type) {\n        case RECEIVED_SNACKBAR_MESSAGE: {\n            return { ...state, ...action.value };\n        }\n        case CLOSE_SNACKBAR: {\n            return DEFAULT_STATE_SNACKBAR;\n        }\n        default:\n            return state;\n    }\n};\n\n// selectors\n\nexport const sGetSnackbar = state => state.snackbar || DEFAULT_STATE_SNACKBAR;\n","import {\n    RECEIVED_SNACKBAR_MESSAGE,\n    CLOSE_SNACKBAR,\n} from '../reducers/snackbar';\n\nexport const acReceivedSnackbarMessage = value => ({\n    type: RECEIVED_SNACKBAR_MESSAGE,\n    value,\n});\n\nexport const acCloseSnackbar = () => ({\n    type: CLOSE_SNACKBAR,\n});\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport Snackbar from '@material-ui/core/Snackbar';\nimport PropTypes from 'prop-types';\n\nimport { sGetSnackbar } from '../../reducers/snackbar';\nimport { acCloseSnackbar } from '../../actions/snackbar';\n\nconst LOADING_DASHBOARD = 'LOADING_DASHBOARD';\nexport const loadingDashboardMsg = { name: '', type: LOADING_DASHBOARD };\n\nconst SnackbarMessageContent = ({ message }) => {\n    if (typeof message === 'object') {\n        //future message types:  switch(message.type)\n        return (\n            <span>\n                Loading <span style={{ fontWeight: 800 }}>{message.name}</span>{' '}\n                dashboard\n            </span>\n        );\n    }\n    return message;\n};\n\nexport const SnackbarMessage = props => {\n    return (\n        <Snackbar\n            style={{ zIndex: 10001 }}\n            open={props.snackbarOpen}\n            message={<SnackbarMessageContent message={props.snackbarMessage} />}\n            autoHideDuration={props.snackbarDuration}\n            onClose={props.onCloseSnackbar}\n        />\n    );\n};\n\nconst mapStateToProps = state => {\n    const { message, duration, open } = sGetSnackbar(state);\n    return {\n        snackbarOpen: open,\n        snackbarMessage: message,\n        snackbarDuration: duration,\n    };\n};\n\nSnackbarMessage.propTypes = {\n    snackbarDuration: PropTypes.string,\n    snackbarMessage: PropTypes.object,\n    snackbarOpen: PropTypes.bool,\n    onCloseSnackbar: PropTypes.func,\n};\n\nexport default connect(\n    mapStateToProps,\n    {\n        onCloseSnackbar: acCloseSnackbar,\n    }\n)(SnackbarMessage);\n","import {\n    SET_SELECTED_ID,\n    SET_SELECTED_ISLOADING,\n    SET_SELECTED_SHOWDESCRIPTION,\n} from '../reducers/selected';\nimport { acAddVisualization } from '../actions/visualizations';\nimport { sGetSelectedIsLoading } from '../reducers/selected';\nimport { sGetUserUsername } from '../reducers/user';\nimport { getCustomDashboards, sGetDashboardById } from '../reducers/dashboards';\nimport { apiFetchDashboard } from '../api/dashboards';\nimport { acSetDashboardItems, acAppendDashboards } from './dashboards';\nimport { withShape } from '../components/ItemGrid/gridUtil';\nimport { tGetMessages } from '../components/Item/MessagesItem/actions';\nimport { acReceivedSnackbarMessage, acCloseSnackbar } from './snackbar';\nimport { storePreferredDashboardId } from '../api/localStorage';\nimport { loadingDashboardMsg } from '../components/SnackbarMessage/SnackbarMessage';\nimport {\n    REPORT_TABLE,\n    CHART,\n    MAP,\n    EVENT_REPORT,\n    EVENT_CHART,\n    MESSAGES,\n} from '../modules/itemTypes';\nimport { extractFavorite } from '../components/Item/VisualizationItem/plugin';\nimport { orObject } from '../modules/util';\n\n// actions\n\nexport const acSetSelectedId = value => ({\n    type: SET_SELECTED_ID,\n    value,\n});\n\nexport const acSetSelectedIsLoading = value => ({\n    type: SET_SELECTED_ISLOADING,\n    value,\n});\n\nexport const acSetSelectedShowDescription = value => ({\n    type: SET_SELECTED_SHOWDESCRIPTION,\n    value,\n});\n\nexport const tLoadDashboard = id => async dispatch => {\n    try {\n        const dash = await apiFetchDashboard(id);\n        dispatch(acAppendDashboards(dash));\n\n        return Promise.resolve(dash);\n    } catch (err) {\n        console.log('Error: ', err);\n        return err;\n    }\n};\n\n// thunks\nexport const tSetSelectedDashboardById = id => async (dispatch, getState) => {\n    dispatch(acSetSelectedIsLoading(true));\n\n    const snackbarTimeout = setTimeout(() => {\n        const dashboardName = orObject(sGetDashboardById(getState(), id))\n            .displayName;\n        if (sGetSelectedIsLoading(getState()) && dashboardName) {\n            loadingDashboardMsg.name = dashboardName;\n\n            dispatch(\n                acReceivedSnackbarMessage({\n                    message: loadingDashboardMsg,\n                    open: true,\n                })\n            );\n        }\n    }, 500);\n\n    const onSuccess = selected => {\n        const customDashboard = getCustomDashboards(selected)[0];\n\n        dispatch(\n            acSetDashboardItems(withShape(customDashboard.dashboardItems))\n        );\n\n        storePreferredDashboardId(sGetUserUsername(getState()), id);\n\n        // add visualizations to store\n        customDashboard.dashboardItems.forEach(item => {\n            switch (item.type) {\n                case REPORT_TABLE:\n                case CHART:\n                case MAP:\n                case EVENT_REPORT:\n                case EVENT_CHART:\n                    dispatch(acAddVisualization(extractFavorite(item)));\n                    break;\n                case MESSAGES:\n                    dispatch(tGetMessages(id));\n                    break;\n                default:\n                    break;\n            }\n        });\n\n        dispatch(acSetSelectedId(id));\n\n        dispatch(acSetSelectedIsLoading(false));\n\n        clearTimeout(snackbarTimeout);\n\n        dispatch(acCloseSnackbar());\n\n        return selected;\n    };\n\n    const onError = error => {\n        console.log('Error: ', error);\n        return error;\n    };\n\n    try {\n        const selected = await dispatch(tLoadDashboard(id));\n\n        return onSuccess(selected);\n    } catch (err) {\n        return onError(err);\n    }\n};\n","export const getPreferredDashboardId = username =>\n    localStorage.getItem(`dhis2.dashboard.current.${username}`) || undefined;\n\nexport const storePreferredDashboardId = (username, dashboardId) => {\n    localStorage.setItem(`dhis2.dashboard.current.${username}`, dashboardId);\n};\n","import { RECEIVED_MESSAGES } from '../../../reducers/messages';\nimport { getMessages } from '../../../api/messages';\n\nconst onError = (action, error) => {\n    console.log(`Error in action ${action}: ${error}`);\n    return error;\n};\n\nexport const receivedMessages = value => ({\n    type: RECEIVED_MESSAGES,\n    value,\n});\n\nexport const tGetMessages = () => async dispatch => {\n    try {\n        const messages = await getMessages();\n        const { messageConversations } = messages;\n\n        return dispatch(receivedMessages(messageConversations));\n    } catch (err) {\n        return onError('Get Messages', err);\n    }\n};\n","/** @module reducers/editDashboard */\nimport update from 'immutability-helper';\nimport isEmpty from 'lodash/isEmpty';\nimport { orArray, orObject } from '../modules/util';\n\nexport const RECEIVED_EDIT_DASHBOARD = 'RECEIVED_EDIT_DASHBOARD';\nexport const RECEIVED_NOT_EDITING = 'RECEIVED_NOT_EDITING';\nexport const START_NEW_DASHBOARD = 'START_NEW_DASHBOARD';\nexport const RECEIVED_TITLE = 'RECEIVED_TITLE';\nexport const RECEIVED_DESCRIPTION = 'RECEIVED_DESCRIPTION';\nexport const ADD_DASHBOARD_ITEM = 'ADD_DASHBOARD_ITEM';\nexport const REMOVE_DASHBOARD_ITEM = 'REMOVE_DASHBOARD_ITEM';\nexport const UPDATE_DASHBOARD_ITEM = 'UPDATE_DASHBOARD_ITEM';\nexport const RECEIVED_DASHBOARD_LAYOUT = 'RECEIVED_DASHBOARD_LAYOUT';\n\nexport const DEFAULT_STATE_EDIT_DASHBOARD = {};\nexport const NEW_DASHBOARD_STATE = {\n    id: '',\n    name: '',\n    access: {},\n    description: '',\n    dashboardItems: [],\n};\n\nexport default (state = DEFAULT_STATE_EDIT_DASHBOARD, action) => {\n    switch (action.type) {\n        case RECEIVED_EDIT_DASHBOARD: {\n            const newState = {};\n            Object.keys(NEW_DASHBOARD_STATE).map(\n                k => (newState[k] = action.value[k])\n            );\n            return newState;\n        }\n        case RECEIVED_NOT_EDITING:\n            return DEFAULT_STATE_EDIT_DASHBOARD;\n        case START_NEW_DASHBOARD:\n            return NEW_DASHBOARD_STATE;\n        case RECEIVED_TITLE: {\n            return Object.assign({}, state, { name: action.value });\n        }\n        case RECEIVED_DESCRIPTION: {\n            return Object.assign({}, state, {\n                description: action.value,\n            });\n        }\n        case ADD_DASHBOARD_ITEM:\n            return update(state, {\n                dashboardItems: { $unshift: [action.value] },\n            });\n        case REMOVE_DASHBOARD_ITEM: {\n            const idToRemove = action.value;\n\n            const dashboardItemIndex = state.dashboardItems.findIndex(\n                item => item.id === idToRemove\n            );\n\n            if (dashboardItemIndex > -1) {\n                return update(state, {\n                    dashboardItems: {\n                        $splice: [[dashboardItemIndex, 1]],\n                    },\n                });\n            }\n\n            return state;\n        }\n        case RECEIVED_DASHBOARD_LAYOUT: {\n            const stateItems = orArray(state.dashboardItems);\n\n            const newStateItems = action.value.map(({ x, y, w, h, i }) => {\n                const stateItem = stateItems.find(si => si.id === i);\n\n                return Object.assign({}, stateItem, { w, h, x, y });\n            });\n\n            return update(state, {\n                dashboardItems: { $set: newStateItems },\n            });\n        }\n        case UPDATE_DASHBOARD_ITEM: {\n            const dashboardItem = action.value;\n\n            const dashboardItemIndex = state.dashboardItems.findIndex(\n                item => item.id === dashboardItem.id\n            );\n\n            if (dashboardItemIndex > -1) {\n                const newState = update(state, {\n                    dashboardItems: {\n                        $splice: [[dashboardItemIndex, 1, dashboardItem]],\n                    },\n                });\n\n                return newState;\n            }\n\n            return state;\n        }\n        default:\n            return state;\n    }\n};\n\n// root selector\n\nexport const sGetEditDashboardRoot = state => state.editDashboard;\n\n// selectors\n\nexport const sGetIsEditing = state => !isEmpty(state.editDashboard);\n\nexport const sGetIsNewDashboard = state => {\n    return (\n        !isEmpty(state.editDashboard) && sGetEditDashboardRoot(state).id === ''\n    );\n};\n\nexport const sGetEditDashboardItems = state =>\n    orObject(sGetEditDashboardRoot(state)).dashboardItems;\n","export const CLEAR_EDIT_ITEM_FILTERS = 'CLEAR_EDIT_ITEM_FILTERS';\nexport const REMOVE_EDIT_ITEM_FILTER = 'REMOVE_EDIT_ITEM_FILTER';\nexport const SET_EDIT_ITEM_FILTERS = 'SET_EDIT_ITEM_FILTERS';\n\nexport const DEFAULT_STATE_EDIT_ITEM_FILTERS = {};\n\nexport default (state = DEFAULT_STATE_EDIT_ITEM_FILTERS, action) => {\n    switch (action.type) {\n        case REMOVE_EDIT_ITEM_FILTER: {\n            const newState = { ...state };\n\n            delete newState[action.id];\n\n            return newState;\n        }\n        case SET_EDIT_ITEM_FILTERS: {\n            return action.filters;\n        }\n        case CLEAR_EDIT_ITEM_FILTERS: {\n            return DEFAULT_STATE_EDIT_ITEM_FILTERS;\n        }\n        default:\n            return state;\n    }\n};\n\n// selectors\n\nexport const sGetEditItemFiltersRoot = state => state.editItemFilters;\n\nexport const sGetEditFiltersKeys = state =>\n    Object.keys(sGetEditItemFiltersRoot(state));\n","export const CLEAR_ITEM_FILTERS = 'CLEAR_ITEM_FILTERS';\nexport const SET_ITEM_FILTERS = 'SET_ITEM_FILTERS';\nexport const ADD_ITEM_FILTER = 'ADD_ITEM_FILTER';\nexport const REMOVE_ITEM_FILTER = 'REMOVE_ITEM_FILTER';\n\nexport const DEFAULT_STATE_ITEM_FILTERS = {};\n\nexport default (state = DEFAULT_STATE_ITEM_FILTERS, action) => {\n    switch (action.type) {\n        case ADD_ITEM_FILTER: {\n            return {\n                ...state,\n                [action.filter.id]: action.filter.value,\n            };\n        }\n        case REMOVE_ITEM_FILTER: {\n            const newState = { ...state };\n\n            delete newState[action.id];\n\n            return newState;\n        }\n        case SET_ITEM_FILTERS: {\n            return action.filters;\n        }\n        case CLEAR_ITEM_FILTERS: {\n            return DEFAULT_STATE_ITEM_FILTERS;\n        }\n        default:\n            return state;\n    }\n};\n\n// selectors\n\nexport const sGetItemFiltersRoot = state => state.itemFilters;\n\nexport const sGetFiltersKeys = state => Object.keys(sGetItemFiltersRoot(state));\n","import {\n    ADD_ITEM_FILTER,\n    REMOVE_ITEM_FILTER,\n    SET_ITEM_FILTERS,\n    CLEAR_ITEM_FILTERS,\n} from '../reducers/itemFilters';\n\nexport const FILTER_ORG_UNIT = 'ou';\n\n// actions\n\nexport const acAddItemFilter = filter => ({\n    type: ADD_ITEM_FILTER,\n    filter,\n});\n\nexport const acRemoveItemFilter = id => ({\n    type: REMOVE_ITEM_FILTER,\n    id,\n});\n\nexport const acClearItemFilters = () => ({\n    type: CLEAR_ITEM_FILTERS,\n});\n\nexport const acSetItemFilters = filters => ({\n    type: SET_ITEM_FILTERS,\n    filters,\n});\n","import {\n    REMOVE_EDIT_ITEM_FILTER,\n    SET_EDIT_ITEM_FILTERS,\n    CLEAR_EDIT_ITEM_FILTERS,\n} from '../reducers/editItemFilters';\n\n// actions\n\nexport const acRemoveEditItemFilter = id => ({\n    type: REMOVE_EDIT_ITEM_FILTER,\n    id,\n});\n\nexport const acClearEditItemFilters = () => ({\n    type: CLEAR_EDIT_ITEM_FILTERS,\n});\n\nexport const acSetEditItemFilters = filters => ({\n    type: SET_EDIT_ITEM_FILTERS,\n    filters,\n});\n","import { getInstance } from 'd2';\n\nconst onError = error => console.log('Error: ', error);\n\nconst saveDashboard = (dashboard, data) => {\n    const { name, description, dashboardItems } = data;\n\n    dashboard.name = name;\n    dashboard.description = description;\n    dashboard.dashboardItems = dashboardItems.map(item =>\n        Object.assign({}, item, { width: item.w, height: item.h })\n    );\n\n    return dashboard.save().then(msg => msg.response.uid);\n};\n\nexport const updateDashboard = data => {\n    return getInstance()\n        .then(d2 => {\n            return d2.models.dashboards\n                .get(data.id)\n                .then(dashboard => saveDashboard(dashboard, data));\n        })\n        .catch(onError);\n};\n\nexport const postDashboard = data => {\n    return getInstance().then(d2 => {\n        const dashboard = d2.models.dashboards.create();\n\n        return saveDashboard(dashboard, data);\n    });\n};\n","import { generateUid } from 'd2/uid';\n\nimport {\n    RECEIVED_EDIT_DASHBOARD,\n    START_NEW_DASHBOARD,\n    RECEIVED_NOT_EDITING,\n    RECEIVED_TITLE,\n    RECEIVED_DESCRIPTION,\n    RECEIVED_DASHBOARD_LAYOUT,\n    ADD_DASHBOARD_ITEM,\n    UPDATE_DASHBOARD_ITEM,\n    REMOVE_DASHBOARD_ITEM,\n} from '../reducers/editDashboard';\nimport { sGetEditDashboardRoot } from '../reducers/editDashboard';\nimport { updateDashboard, postDashboard } from '../api/editDashboard';\nimport { tSetSelectedDashboardById } from '../actions/selected';\nimport { NEW_ITEM_SHAPE } from '../components/ItemGrid/gridUtil';\nimport {\n    itemTypeMap,\n    isSpacerType,\n    TEXT,\n    emptyTextItemContent,\n    isTextType,\n} from '../modules/itemTypes';\n\nconst onError = error => {\n    console.log('Error (Saving Dashboard): ', error);\n    return error;\n};\n\n// actions\n\nexport const acSetEditDashboard = (dashboard, items) => {\n    const val = {\n        ...dashboard,\n        dashboardItems: items,\n    };\n\n    return {\n        type: RECEIVED_EDIT_DASHBOARD,\n        value: val,\n    };\n};\n\nexport const acSetEditNewDashboard = () => ({\n    type: START_NEW_DASHBOARD,\n});\n\nexport const acClearEditDashboard = () => ({\n    type: RECEIVED_NOT_EDITING,\n});\n\nexport const acSetDashboardTitle = value => ({\n    type: RECEIVED_TITLE,\n    value,\n});\n\nexport const acSetDashboardDescription = value => ({\n    type: RECEIVED_DESCRIPTION,\n    value,\n});\n\nexport const acUpdateDashboardLayout = value => ({\n    type: RECEIVED_DASHBOARD_LAYOUT,\n    value,\n});\n\nexport const acAddDashboardItem = item => {\n    const type = item.type;\n    delete item.type;\n    const itemPropName = itemTypeMap[type].propName;\n\n    return {\n        type: ADD_DASHBOARD_ITEM,\n        value: {\n            id: generateUid(),\n            type,\n            [itemPropName]: item.content,\n            ...NEW_ITEM_SHAPE,\n        },\n    };\n};\n\nexport const acUpdateDashboardItem = item => ({\n    type: UPDATE_DASHBOARD_ITEM,\n    value: item,\n});\n\nexport const acRemoveDashboardItem = value => ({\n    type: REMOVE_DASHBOARD_ITEM,\n    value,\n});\n\n// thunks\n\nexport const tSaveDashboard = () => async (dispatch, getState) => {\n    const dashboard = sGetEditDashboardRoot(getState());\n\n    const dashboardItems = dashboard.dashboardItems.map(item => {\n        const text = isTextType(item)\n            ? item.text || emptyTextItemContent\n            : null;\n\n        const type = isSpacerType(item) ? TEXT : item.type;\n\n        return {\n            ...item,\n            ...(text ? { text } : {}),\n            type,\n        };\n    });\n\n    const dashboardToSave = {\n        ...dashboard,\n        dashboardItems,\n    };\n\n    try {\n        const dashboardId = dashboardToSave.id\n            ? await updateDashboard(dashboardToSave)\n            : await postDashboard(dashboardToSave);\n\n        dispatch(acClearEditDashboard());\n        await dispatch(tSetSelectedDashboardById(dashboardId));\n\n        return Promise.resolve(dashboardId);\n    } catch (error) {\n        onError(error);\n    }\n};\n","import {\n    SET_DASHBOARDS,\n    ADD_DASHBOARDS,\n    SET_DASHBOARD_STARRED,\n    SET_DASHBOARD_DISPLAY_NAME,\n    SET_DASHBOARD_ITEMS,\n} from '../reducers/dashboards';\nimport {\n    getCustomDashboards,\n    sGetDashboardById,\n    sGetDashboardsSortedByStarred,\n} from '../reducers/dashboards';\nimport { sGetUserUsername } from '../reducers/user';\nimport { tSetSelectedDashboardById, acSetSelectedId } from './selected';\nimport { sGetSelectedId } from '../reducers/selected';\nimport { sGetIsEditing } from '../reducers/editDashboard';\nimport { sGetEditItemFiltersRoot } from '../reducers/editItemFilters';\nimport { acSetItemFilters, acClearItemFilters } from './itemFilters';\nimport { acClearEditItemFilters } from './editItemFilters';\nimport { acClearEditDashboard } from './editDashboard';\nimport {\n    apiFetchDashboards,\n    apiStarDashboard,\n    apiDeleteDashboard,\n} from '../api/dashboards';\nimport { getPreferredDashboardId } from '../api/localStorage';\nimport { arrayToIdMap } from '../modules/util';\n\n// actions\n\nexport const acSetDashboards = dashboards => ({\n    type: SET_DASHBOARDS,\n    value: arrayToIdMap(getCustomDashboards(dashboards)),\n});\n\nexport const acAppendDashboards = dashboards => ({\n    type: ADD_DASHBOARDS,\n    value: arrayToIdMap(getCustomDashboards(dashboards)),\n});\n\nexport const acSetDashboardStarred = (dashboardId, isStarred) => ({\n    type: SET_DASHBOARD_STARRED,\n    dashboardId: dashboardId,\n    value: isStarred,\n});\n\nexport const acSetDashboardDisplayName = (dashboardId, value) => ({\n    type: SET_DASHBOARD_DISPLAY_NAME,\n    dashboardId,\n    value,\n});\n\nexport const acSetDashboardItems = value => ({\n    type: SET_DASHBOARD_ITEMS,\n    value,\n});\n\n// thunks\n\nexport const tFetchDashboards = () => async dispatch => {\n    const collection = await apiFetchDashboards();\n    dispatch(acSetDashboards(collection.toArray()));\n};\n\nexport const tSelectDashboard = id => async (dispatch, getState) => {\n    const onError = error => {\n        console.log('Error (apiFetchDashboards): ', error);\n        return error;\n    };\n\n    try {\n        const state = getState();\n\n        let dashboardToSelect = null;\n        if (id) {\n            dashboardToSelect = sGetDashboardById(state, id) || null;\n        } else {\n            const preferredId = getPreferredDashboardId(\n                sGetUserUsername(state)\n            );\n            const dash = sGetDashboardById(state, preferredId);\n            dashboardToSelect =\n                preferredId && dash\n                    ? dash\n                    : sGetDashboardsSortedByStarred(state)[0];\n        }\n\n        if (dashboardToSelect) {\n            dispatch(tSetSelectedDashboardById(dashboardToSelect.id));\n\n            if (dashboardToSelect.id === sGetSelectedId(state)) {\n                if (sGetIsEditing(state)) {\n                    // disable filters when switching to edit mode\n                    dispatch(acClearItemFilters());\n                } else {\n                    // enable filters when switching to view mode\n                    dispatch(acSetItemFilters(sGetEditItemFiltersRoot(state)));\n                }\n            } else {\n                // clear filters when switching dashboard\n                dispatch(acClearEditItemFilters());\n                dispatch(acClearItemFilters());\n            }\n        } else {\n            dispatch(acSetSelectedId(false));\n        }\n    } catch (err) {\n        return onError(err);\n    }\n};\n\nexport const tStarDashboard = (id, isStarred) => async dispatch => {\n    const onSuccess = id => {\n        dispatch(acSetDashboardStarred(id, isStarred));\n        return id;\n    };\n\n    const onError = error => {\n        console.log('Error (apiStarDashboard): ', error);\n        return error;\n    };\n    try {\n        await apiStarDashboard(id, isStarred);\n        return onSuccess(id);\n    } catch (err) {\n        return onError(err);\n    }\n};\n\nexport const tDeleteDashboard = id => async dispatch => {\n    try {\n        await apiDeleteDashboard(id);\n        dispatch(acClearEditDashboard());\n        dispatch(acSetSelectedId());\n        dispatch(acSetDashboardItems([]));\n\n        await dispatch(tFetchDashboards());\n\n        return Promise.resolve();\n    } catch (err) {\n        console.log('Error (deleteDashboard): ', err);\n        return err;\n    }\n};\n","/** @module reducers/controlBar */\nimport { combineReducers } from 'redux';\nimport { validateReducer } from '../modules/util';\n\nexport const SET_CONTROLBAR_USER_ROWS = 'SET_CONTROLBAR_USER_ROWS';\n\nexport const DEFAULT_STATE_CONTROLBAR_ROWS = 1;\n\nconst userRows = (state = DEFAULT_STATE_CONTROLBAR_ROWS, action) => {\n    switch (action.type) {\n        case SET_CONTROLBAR_USER_ROWS:\n            return validateReducer(action.value, DEFAULT_STATE_CONTROLBAR_ROWS);\n        default:\n            return state;\n    }\n};\n\nexport default combineReducers({\n    userRows,\n});\n\n/**\n * Selectors that point to specific props in the state object\n * @function\n * @param {Object} state\n * @returns {Object}\n */\nexport const sGetControlBarRoot = state => state.controlBar;\n\n// Selector dependency level 2\n\nexport const sGetControlBarUserRows = state =>\n    sGetControlBarRoot(state).userRows;\n","import { getInstance } from 'd2';\nimport { DEFAULT_STATE_CONTROLBAR_ROWS } from '../reducers/controlBar';\n\nconst NAMESPACE = 'dashboard';\nconst KEY = 'controlBarRows';\n\nconst hasNamespace = async d2 => await d2.currentUser.dataStore.has(NAMESPACE);\n\nconst getNamespace = async (d2, hasNamespace) =>\n    hasNamespace\n        ? await d2.currentUser.dataStore.get(NAMESPACE)\n        : await d2.currentUser.dataStore.create(NAMESPACE);\n\nexport const apiGetControlBarRows = async () => {\n    const d2 = await getInstance();\n    const namespace = await getNamespace(d2, await hasNamespace(d2));\n    const hasKey = namespace.keys && namespace.keys.find(key => key === KEY);\n\n    if (hasKey) {\n        return await namespace.get(KEY);\n    } else {\n        await apiPostControlBarRows(DEFAULT_STATE_CONTROLBAR_ROWS, namespace);\n        console.log(\n            '(These errors to /userDataStore/dashboard can be ignored)'\n        );\n        return DEFAULT_STATE_CONTROLBAR_ROWS;\n    }\n};\n\nexport const apiPostControlBarRows = async (rows, namespace) => {\n    const d2 = await getInstance();\n    const ns = namespace || (await getNamespace(d2, hasNamespace));\n\n    ns.set(KEY, rows);\n};\n","import { SET_CONTROLBAR_USER_ROWS } from '../reducers/controlBar';\nimport { apiGetControlBarRows } from '../api/controlBar';\n\n// actions\n\nexport const acSetControlBarUserRows = rows => ({\n    type: SET_CONTROLBAR_USER_ROWS,\n    value: rows,\n});\n\n// thunks\n\nexport const tSetControlBarRows = () => async dispatch => {\n    const onSuccess = rows => {\n        dispatch(acSetControlBarUserRows(rows));\n    };\n\n    const onError = error => {\n        console.log('Error (apiGetControlBarRows): ', error);\n        return error;\n    };\n\n    try {\n        const controlBarRows = await apiGetControlBarRows();\n        return onSuccess(controlBarRows);\n    } catch (err) {\n        return onError(err);\n    }\n};\n","import {\n    getDimensionById,\n    DIMENSION_ID_PERIOD,\n    DIMENSION_ID_ORGUNIT,\n} from '@dhis2/analytics';\n\nexport const SET_DIMENSIONS = 'SET_DIMENSIONS';\nexport const DEFAULT_DIMENSIONS = [\n    getDimensionById(DIMENSION_ID_PERIOD),\n    getDimensionById(DIMENSION_ID_ORGUNIT),\n];\n\nexport default (state = DEFAULT_DIMENSIONS, action) => {\n    switch (action.type) {\n        case SET_DIMENSIONS: {\n            return [...DEFAULT_DIMENSIONS, ...action.value];\n        }\n        default:\n            return state;\n    }\n};\n\nexport const sGetDimensions = state => state.dimensions;\n","export const SET_SETTINGS = 'SET_SETTINGS';\nexport const ADD_SETTINGS = 'ADD_SETTINGS';\n\nexport const DEFAULT_SETTINGS = {\n    keyDateFormat: 'yyyy-MM-dd',\n    keyAnalysisRelativePeriod: 'LAST_12_MONTHS',\n    keyAnalysisDigitGroupSeparator: 'SPACE',\n    displayNameProperty: 'displayName',\n    uiLocale: 'en',\n    rootOrganisationUnit: {},\n};\n\nexport default (state = DEFAULT_SETTINGS, action) => {\n    switch (action.type) {\n        case SET_SETTINGS: {\n            return Object.assign({}, action.value);\n        }\n        case ADD_SETTINGS: {\n            return {\n                ...state,\n                ...action.value,\n            };\n        }\n        default:\n            return state;\n    }\n};\n\n// Selectors\n\nexport const sGetSettings = state => state.settings;\n\nexport const sGetSettingsDisplayNameProperty = state =>\n    sGetSettings(state).displayNameProperty;\n\nexport const sGetRootOrgUnit = state =>\n    sGetSettings(state).rootOrganisationUnit;\n\nexport const sGetRelativePeriod = state =>\n    sGetSettings(state).keyAnalysisRelativePeriod;\n\nexport const sGetUiLocale = state => sGetSettings(state).uiLocale;\n","import { SET_DIMENSIONS } from '../reducers/dimensions';\nimport { apiFetchDimensions } from '@dhis2/analytics';\nimport { sGetSettingsDisplayNameProperty } from '../reducers/settings';\n\nexport const acSetDimensions = dimensions => ({\n    type: SET_DIMENSIONS,\n    value: dimensions,\n});\n\nexport const tSetDimensions = d2 => async (dispatch, getState) => {\n    const onSuccess = dimensions => {\n        dispatch(acSetDimensions(dimensions));\n    };\n\n    const onError = error => {\n        console.log('Error (apiFetchDimensions): ', error);\n        return error;\n    };\n\n    try {\n        const displayNameProp = sGetSettingsDisplayNameProperty(getState());\n        const dimensions = await apiFetchDimensions(d2, displayNameProp);\n\n        // filter out CATEGORY that are not of type ATTRIBUTE\n        const filteredDimensions = dimensions.filter(\n            dim =>\n                dim.dimensionType !== 'CATEGORY' ||\n                (dim.dimensionType === 'CATEGORY' &&\n                    dim.dataDimensionType === 'ATTRIBUTE')\n        );\n        return onSuccess(filteredDimensions);\n    } catch (err) {\n        return onError(err);\n    }\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport i18n from '@dhis2/d2-i18n';\nimport { colors } from '@dhis2/ui-core';\nimport { withStyles } from '@material-ui/core/styles';\n\nexport const SHOWMORE_BAR_HEIGHT = 16;\n\nconst styles = {\n    showMore: {\n        color: colors.grey700,\n        cursor: 'pointer',\n        fontSize: 11,\n        paddingTop: 5,\n        '&:hover': {\n            textDecoration: 'underline',\n        },\n    },\n    disabled: {\n        paddingTop: 5,\n        color: colors.grey500,\n        fontSize: 11,\n        cursor: 'not-allowed',\n    },\n};\n\nexport const ShowMoreButton = ({ onClick, isMaxHeight, classes, disabled }) => {\n    return (\n        <div style={{ textAlign: 'center' }}>\n            {disabled ? (\n                <div className={classes.disabled}>{i18n.t('Show more')}</div>\n            ) : (\n                <div className={classes.showMore} onClick={onClick}>\n                    {isMaxHeight ? i18n.t('Show less') : i18n.t('Show more')}\n                </div>\n            )}\n        </div>\n    );\n};\n\nShowMoreButton.propTypes = {\n    classes: PropTypes.object,\n    disabled: PropTypes.bool,\n    isMaxHeight: PropTypes.bool,\n    onClick: PropTypes.func,\n};\n\nexport default withStyles(styles)(ShowMoreButton);\n","import { SHOWMORE_BAR_HEIGHT } from './ShowMoreButton';\n\nexport const CONTROL_BAR_ROW_HEIGHT = 40;\nexport const FIRST_ROW_PADDING_HEIGHT = 10;\nexport const MIN_ROW_COUNT = 1;\n\nexport const HEADERBAR_HEIGHT = 48;\n\nconst CONTROL_BAR_OUTER_HEIGHT_DIFF =\n    FIRST_ROW_PADDING_HEIGHT + SHOWMORE_BAR_HEIGHT - 2; // 2 pixel \"adjustment\"\n\nexport const getRowsHeight = rows => {\n    return rows * CONTROL_BAR_ROW_HEIGHT;\n};\n\nexport const getNumRowsFromHeight = height => {\n    return Math.floor(\n        (height - CONTROL_BAR_OUTER_HEIGHT_DIFF) / CONTROL_BAR_ROW_HEIGHT\n    );\n};\n\nexport const getTopOffset = rows => {\n    return HEADERBAR_HEIGHT + getControlBarHeight(rows, false);\n};\n\nexport const getControlBarHeight = rows => {\n    return getRowsHeight(rows) + CONTROL_BAR_OUTER_HEIGHT_DIFF;\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { colors } from '@dhis2/ui-core';\nimport { HEADERBAR_HEIGHT } from './controlBarDimensions';\n\nimport classes from './styles/ControlBar.module.css';\n\nconst DRAG_HANDLE_HEIGHT = 7;\n\nclass ControlBar extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            dragging: false,\n        };\n    }\n\n    onStartDrag = () => {\n        this.setState({ dragging: true });\n        window.addEventListener('mousemove', this.onDrag);\n        window.addEventListener('mouseup', this.onEndDrag);\n    };\n\n    onDrag = event => {\n        event.preventDefault();\n        event.stopPropagation();\n\n        const newHeight = event.clientY;\n\n        if (\n            this.props.onChangeHeight &&\n            newHeight !== this.props.height &&\n            newHeight > 0\n        ) {\n            requestAnimationFrame(() => {\n                this.props.onChangeHeight(newHeight);\n            });\n        }\n    };\n\n    onEndDrag = () => {\n        this.setState({ dragging: false });\n        window.removeEventListener('mousemove', this.onDrag);\n        window.removeEventListener('mouseup', this.onEndDrag);\n\n        if (this.props.onEndDrag) {\n            this.props.onEndDrag();\n        }\n    };\n\n    renderDragHandle() {\n        return typeof this.props.onChangeHeight === 'function' ? (\n            <div\n                className={classes.draghandle}\n                style={{ height: DRAG_HANDLE_HEIGHT }}\n                onMouseDown={this.onStartDrag}\n            />\n        ) : null;\n    }\n\n    render() {\n        const height = Math.max(this.props.height, 0) + DRAG_HANDLE_HEIGHT;\n\n        const rootStyle = Object.assign(\n            {\n                height,\n                top: HEADERBAR_HEIGHT,\n                backgroundColor: this.props.editMode\n                    ? colors.yellow050\n                    : colors.white,\n                paddingBottom: DRAG_HANDLE_HEIGHT,\n            },\n            // Disable animations while dragging\n            this.state.dragging ? { transition: 'none' } : {}\n        );\n\n        return (\n            <div style={rootStyle} className={classes.root}>\n                <div className={classes.content}>{this.props.children}</div>\n                {this.renderDragHandle()}\n            </div>\n        );\n    }\n}\n\nControlBar.propTypes = {\n    /**\n     * The height of the control bar in number of lines. Must be a positive integer.\n     */\n    children: PropTypes.node.isRequired,\n\n    /**\n     * If true, the background color of the control bar changes to indicate that edit mode is active.\n     */\n    editMode: PropTypes.bool.isRequired,\n\n    /**\n     * Callback function that is called when the control bar is resized.\n     * The callback receives one argument: The new height in pixels.\n     *\n     * If no callback is specified the control bar will not have a drag handle.\n     */\n    height: PropTypes.number.isRequired,\n\n    /**\n     * Callback function that is called when the control bar is dropped after being dragged.\n     * The callback receives one argument: The new height in pixels.\n     *\n     * Ignored if no \"onChangeHeight\" function is provided.\n     */\n    onChangeHeight: PropTypes.func,\n\n    /**\n     * The contents of the control bar.\n     */\n    onEndDrag: PropTypes.func,\n};\n\nControlBar.defaultProps = {\n    onChangeHeight: null,\n    onEndDrag: null,\n};\n\nexport default ControlBar;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst StarIcon = ({ className }) => (\n    <svg\n        className={className}\n        xmlns=\"http://www.w3.org/2000/svg\"\n        viewBox=\"0 0 24 24\"\n    >\n        <path d=\"M0 0h24v24H0z\" fill=\"none\" />\n        <path d=\"M12 17.27L18.18 21l-1.64-7.03L22 9.24l-7.19-.61L12 2 9.19 8.63 2 9.24l5.46 4.73L5.82 21z\" />\n        <path d=\"M0 0h24v24H0z\" fill=\"none\" />\n    </svg>\n);\n\nStarIcon.propTypes = {\n    className: PropTypes.string,\n};\n\nexport default StarIcon;\n","import { getInstance } from 'd2';\n\nexport const apiPostDataStatistics = async (eventType, id) => {\n    const d2 = await getInstance();\n    const url = `dataStatistics?eventType=${eventType}&favorite=${id}`;\n\n    d2.Api.getApi().post(url);\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport { Chip, colors } from '@dhis2/ui-core';\nimport { Link } from 'react-router-dom';\nimport debounce from 'lodash/debounce';\n\nimport StarIcon from '../../icons/Star';\nimport { apiPostDataStatistics } from '../../api/dataStatistics';\n\nconst styles = {\n    chip: {\n        margin: '3px',\n    },\n    link: {\n        color: colors.grey600,\n        display: 'inline-block',\n        textDecoration: 'none',\n        verticalAlign: 'top',\n    },\n    icon: {\n        height: '20px',\n        marginTop: '2px',\n        width: '20px',\n    },\n    selected: {\n        fill: colors.white,\n    },\n    unselected: {\n        fill: colors.grey700,\n    },\n};\n\nexport const DashboardItemChip = ({\n    starred,\n    selected,\n    label,\n    dashboardId,\n    classes,\n}) => {\n    const chipProps = {\n        selected,\n        className: classes.chip,\n    };\n\n    if (starred) {\n        const selectedState = selected ? classes.selected : classes.unselected;\n        chipProps.icon = (\n            <StarIcon className={`${classes.icon} ${selectedState}`} />\n        );\n    }\n\n    return (\n        <Link\n            className={classes.link}\n            to={`/${dashboardId}`}\n            onClick={debounce(\n                () => apiPostDataStatistics('DASHBOARD_VIEW', dashboardId),\n                500\n            )}\n        >\n            <Chip {...chipProps}>{label}</Chip>\n        </Link>\n    );\n};\n\nDashboardItemChip.propTypes = {\n    dashboardId: PropTypes.string.isRequired,\n    label: PropTypes.string.isRequired,\n    selected: PropTypes.bool.isRequired,\n    starred: PropTypes.bool.isRequired,\n    classes: PropTypes.object,\n};\n\nexport default withStyles(styles)(DashboardItemChip);\n","import React from 'react';\nimport { colors } from '@dhis2/ui-core';\n\nconst AddCircleIcon = () => (\n    <svg\n        xmlns=\"http://www.w3.org/2000/svg\"\n        width=\"32\"\n        height=\"32\"\n        fill={colors.teal600}\n        viewBox=\"0 0 24 24\"\n    >\n        <path d=\"M12 2C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2zm4 11h-3v3c0 .55-.45 1-1 1s-1-.45-1-1v-3H8c-.55 0-1-.45-1-1s.45-1 1-1h3V8c0-.55.45-1 1-1s1 .45 1 1v3h3c.55 0 1 .45 1 1s-.45 1-1 1z\" />\n    </svg>\n);\n\nexport default AddCircleIcon;\n","import React from 'react';\nimport { colors } from '@dhis2/ui-core';\nimport PropTypes from 'prop-types';\n\nconst ClearIcon = ({ className }) => (\n    <svg\n        className={className}\n        fill={colors.grey800}\n        xmlns=\"http://www.w3.org/2000/svg\"\n        viewBox=\"0 0 24 24\"\n    >\n        <path d=\"M19 6.41L17.59 5 12 10.59 6.41 5 5 6.41 10.59 12 5 17.59 6.41 19 12 13.41 17.59 19 19 17.59 13.41 12z\" />\n        <path d=\"M0 0h24v24H0z\" fill=\"none\" />\n    </svg>\n);\n\nClearIcon.propTypes = {\n    className: PropTypes.string,\n};\n\nexport default ClearIcon;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport ClearIcon from '../../icons/Clear';\n\nimport classes from './styles/ClearButton.module.css';\n\nexport const ClearButton = ({ onClear }) => (\n    <button className={classes.button} onClick={onClear}>\n        <span>\n            <ClearIcon className={classes.icon} color=\"action\" />\n        </span>\n    </button>\n);\n\nClearButton.propTypes = {\n    onClear: PropTypes.func.isRequired,\n};\n\nexport default ClearButton;\n","import { combineReducers } from 'redux';\nimport { validateReducer } from '../modules/util';\n\nexport const SET_DASHBOARDS_FILTER_NAME = 'SET_DASHBOARDS_FILTER_NAME';\nexport const SET_DASHBOARDS_FILTER_OWNER = 'SET_DASHBOARDS_FILTER_OWNER';\nexport const SET_DASHBOARDS_FILTER_ORDER = 'SET_DASHBOARDS_FILTER_ORDER';\n\nexport const ownerData = [\n    { id: 'ALL', value: 'All users' },\n    { id: 'ME', value: 'Created by me' },\n    { id: 'OTHERS', value: 'Created by others' },\n];\n\nexport const orderData = [\n    { id: 'NAME:ASC', value: 'Name (asc)' },\n    { id: 'NAME:ASC', value: 'Name (desc)' },\n    { id: 'ITEMS:ASC', value: 'Number of items (asc)' },\n    { id: 'ITEMS:ASC', value: 'Number of items (desc)' },\n    { id: 'CREATED:ASC', value: 'Created date (asc)' },\n    { id: 'CREATED:ASC', value: 'Created date (desc)' },\n];\n\nexport const DEFAULT_STATE_DASHBOARDS_FILTER_NAME = '';\nexport const DEFAULT_STATE_DASHBOARDS_FILTER_OWNER = ownerData[0].id;\nexport const DEFAULT_STATE_DASHBOARDS_FILTER_ORDER = orderData[0].id;\n\nconst name = (state = DEFAULT_STATE_DASHBOARDS_FILTER_NAME, action) => {\n    switch (action.type) {\n        case SET_DASHBOARDS_FILTER_NAME:\n            return validateReducer(\n                action.value,\n                DEFAULT_STATE_DASHBOARDS_FILTER_NAME\n            );\n        default:\n            return state;\n    }\n};\n\nconst owner = (state = DEFAULT_STATE_DASHBOARDS_FILTER_OWNER, action) => {\n    switch (action.type) {\n        case SET_DASHBOARDS_FILTER_OWNER:\n            return validateReducer(\n                action.value,\n                DEFAULT_STATE_DASHBOARDS_FILTER_NAME\n            );\n        default:\n            return state;\n    }\n};\n\nconst order = (state = DEFAULT_STATE_DASHBOARDS_FILTER_ORDER, action) => {\n    switch (action.type) {\n        case SET_DASHBOARDS_FILTER_ORDER:\n            return validateReducer(\n                action.value,\n                DEFAULT_STATE_DASHBOARDS_FILTER_ORDER\n            );\n        default:\n            return state;\n    }\n};\n\nexport default combineReducers({\n    name,\n    owner,\n    order,\n});\n\n// selectors\n\nexport const sGetDashboardsFilterRoot = state => state.dashboardsFilter;\n\n// selector dependency level 2\n\nexport const sGetFilterName = state => sGetDashboardsFilterRoot(state).name;\nexport const sGetFilterOwner = state => sGetDashboardsFilterRoot(state).owner;\nexport const sGetFilterOrder = state => sGetDashboardsFilterRoot(state).order;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport i18n from '@dhis2/d2-i18n';\nimport InputField from '@material-ui/core/Input';\nimport InputAdornment from '@material-ui/core/InputAdornment';\nimport SearchIcon from '@material-ui/icons/Search';\nimport { colors } from '@dhis2/ui-core';\n\nimport ClearButton from './ClearButton';\nimport { DEFAULT_STATE_DASHBOARDS_FILTER_NAME } from '../../reducers/dashboardsFilter';\n\nexport const KEYCODE_ENTER = 13;\nexport const KEYCODE_ESCAPE = 27;\n\nconst styles = {\n    filterField: {\n        fontSize: '14px',\n        width: '200px',\n        height: '30px',\n        top: '-4px',\n    },\n    searchIcon: {\n        color: colors.grey700,\n        width: '20px',\n        height: '20px',\n    },\n};\n\nexport class Filter extends Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            value: DEFAULT_STATE_DASHBOARDS_FILTER_NAME,\n        };\n    }\n\n    componentWillReceiveProps(nextProps) {\n        this.setState({\n            value: nextProps.name,\n        });\n    }\n\n    setFilterValue = event => {\n        event.preventDefault();\n\n        this.props.onChangeName(event.target.value);\n    };\n\n    handleKeyUp = event => {\n        switch (event.keyCode) {\n            case KEYCODE_ENTER:\n                this.props.onKeypressEnter();\n                break;\n            case KEYCODE_ESCAPE:\n                this.props.onChangeName();\n                break;\n            default:\n                break;\n        }\n    };\n\n    render() {\n        const { classes, name, onChangeName } = this.props;\n\n        const startAdornment = (\n            <InputAdornment position=\"start\">\n                <SearchIcon className={classes.searchIcon} />\n            </InputAdornment>\n        );\n\n        const endAdornment =\n            name !== '' && name !== null ? (\n                <InputAdornment position=\"end\">\n                    <ClearButton onClear={() => onChangeName()} />\n                </InputAdornment>\n            ) : null;\n\n        return (\n            <InputField\n                className={classes.filterField}\n                placeholder={i18n.t('Search for a dashboard')}\n                startAdornment={startAdornment}\n                endAdornment={endAdornment}\n                value={this.state.value}\n                onChange={this.setFilterValue}\n                onKeyUp={this.handleKeyUp}\n            />\n        );\n    }\n}\n\nFilter.propTypes = {\n    classes: PropTypes.object,\n    name: PropTypes.string,\n    onChangeName: PropTypes.func,\n    onKeypressEnter: PropTypes.func,\n};\n\nFilter.defaultProps = {\n    name: '',\n    onChangeName: Function.prototype,\n};\n\nexport default withStyles(styles)(Filter);\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { Link, withRouter } from 'react-router-dom';\nimport ControlBar from './ControlBar';\nimport arraySort from 'd2-utilizr/lib/arraySort';\nimport PropTypes from 'prop-types';\n\nimport Chip from './DashboardItemChip';\nimport AddCircleIcon from '../../icons/AddCircle';\nimport Filter from './Filter';\nimport ShowMoreButton from './ShowMoreButton';\nimport {\n    FIRST_ROW_PADDING_HEIGHT,\n    MIN_ROW_COUNT,\n    getRowsHeight,\n    getControlBarHeight,\n    getNumRowsFromHeight,\n} from './controlBarDimensions';\nimport { sGetControlBarUserRows } from '../../reducers/controlBar';\nimport { sGetAllDashboards } from '../../reducers/dashboards';\nimport { sGetFilterName } from '../../reducers/dashboardsFilter';\nimport { sGetSelectedId } from '../../reducers/selected';\nimport { acSetControlBarUserRows } from '../../actions/controlBar';\nimport { acSetFilterName } from '../../actions/dashboardsFilter';\nimport { orObject, orArray } from '../../modules/util';\nimport { apiPostControlBarRows } from '../../api/controlBar';\n\nimport classes from './styles/DashboardsBar.module.css';\n\nexport const MAX_ROW_COUNT = 10;\n\nexport class DashboardsBar extends Component {\n    state = {\n        rows: MIN_ROW_COUNT,\n    };\n\n    setInitialDashboardState = rows => {\n        this.setState({ rows, isMaxHeight: rows === MAX_ROW_COUNT });\n    };\n\n    componentDidMount() {\n        this.setInitialDashboardState(this.props.userRows);\n    }\n\n    componentWillReceiveProps(nextProps) {\n        this.setInitialDashboardState(nextProps.userRows);\n    }\n\n    onChangeHeight = newHeight => {\n        const adjustedHeight = newHeight - 52; // don't rush the transition to a bigger row count\n        const newRows = Math.max(\n            MIN_ROW_COUNT,\n            getNumRowsFromHeight(adjustedHeight)\n        );\n\n        if (newRows !== this.state.rows) {\n            const newRowCount = Math.min(newRows, MAX_ROW_COUNT);\n\n            this.props.onChangeHeight(newRowCount);\n        }\n    };\n\n    onEndDrag = () => {\n        return apiPostControlBarRows(this.state.rows);\n    };\n\n    onToggleMaxHeight = () => {\n        const rows =\n            this.state.rows === MAX_ROW_COUNT\n                ? this.props.userRows\n                : MAX_ROW_COUNT;\n\n        this.setState({ rows, isMaxHeight: !this.state.isMaxHeight });\n    };\n\n    onSelectDashboard = () => {\n        this.props.history.push(`/${this.props.dashboards[0].id}`);\n    };\n\n    render() {\n        const { dashboards, name, selectedId, onChangeFilterName } = this.props;\n\n        const rowCount = this.state.isMaxHeight\n            ? MAX_ROW_COUNT\n            : this.state.rows;\n        const controlBarHeight = getControlBarHeight(rowCount);\n        const contentWrapperStyle = {\n            padding: `${FIRST_ROW_PADDING_HEIGHT}px 6px 0 6px`,\n            overflowY: this.state.isMaxHeight ? 'auto' : 'hidden',\n            height: getRowsHeight(rowCount) + FIRST_ROW_PADDING_HEIGHT,\n        };\n\n        return (\n            <ControlBar\n                height={controlBarHeight}\n                onChangeHeight={this.onChangeHeight}\n                onEndDrag={this.onEndDrag}\n                editMode={false}\n            >\n                <div style={contentWrapperStyle}>\n                    <div className={classes.leftControls}>\n                        <Link\n                            style={{\n                                display: 'inline-block',\n                                textDecoration: 'none',\n                                marginRight: 10,\n                                position: 'relative',\n                                top: '2px',\n                            }}\n                            to={'/new'}\n                        >\n                            <AddCircleIcon />\n                        </Link>\n                        <Filter\n                            name={name}\n                            onChangeName={onChangeFilterName}\n                            onKeypressEnter={this.onSelectDashboard}\n                        />\n                    </div>\n                    {orArray(dashboards).map(dashboard => (\n                        <Chip\n                            key={dashboard.id}\n                            label={dashboard.displayName}\n                            starred={dashboard.starred}\n                            dashboardId={dashboard.id}\n                            selected={dashboard.id === selectedId}\n                        />\n                    ))}\n                </div>\n                <ShowMoreButton\n                    onClick={this.onToggleMaxHeight}\n                    isMaxHeight={this.state.isMaxHeight}\n                    disabled={this.props.userRows === MAX_ROW_COUNT}\n                />\n            </ControlBar>\n        );\n    }\n}\n\nconst mapStateToProps = state => ({\n    dashboards: sGetAllDashboards(state),\n    name: sGetFilterName(state),\n    userRows: sGetControlBarUserRows(state),\n    selectedId: sGetSelectedId(state),\n});\n\nconst mapDispatchToProps = {\n    onChangeHeight: acSetControlBarUserRows,\n    onChangeFilterName: acSetFilterName,\n};\nconst mergeProps = (stateProps, dispatchProps, ownProps) => {\n    const dashboards = Object.values(orObject(stateProps.dashboards));\n    const displayDashboards = arraySort(\n        dashboards.filter(d =>\n            d.displayName.toLowerCase().includes(stateProps.name.toLowerCase())\n        ),\n        'ASC',\n        'displayName'\n    );\n\n    return {\n        ...stateProps,\n        ...ownProps,\n        ...dispatchProps,\n        dashboards: [\n            ...displayDashboards.filter(d => d.starred),\n            ...displayDashboards.filter(d => !d.starred),\n        ],\n    };\n};\n\nDashboardsBar.propTypes = {\n    dashboards: PropTypes.array,\n    history: PropTypes.object,\n    name: PropTypes.string,\n    selectedId: PropTypes.string,\n    userRows: PropTypes.number,\n    onChangeFilterName: PropTypes.func,\n    onChangeHeight: PropTypes.func,\n};\n\nexport default withRouter(\n    connect(\n        mapStateToProps,\n        mapDispatchToProps,\n        mergeProps\n    )(DashboardsBar)\n);\n","import {\n    SET_DASHBOARDS_FILTER_NAME,\n    SET_DASHBOARDS_FILTER_OWNER,\n    SET_DASHBOARDS_FILTER_ORDER,\n} from '../reducers/dashboardsFilter';\n\n// actions\n\nexport const acSetFilterName = value => ({\n    type: SET_DASHBOARDS_FILTER_NAME,\n    value,\n});\n\nexport const acSetFilterOwner = value => ({\n    type: SET_DASHBOARDS_FILTER_OWNER,\n    value,\n});\n\nexport const acSetFilterOrder = value => ({\n    type: SET_DASHBOARDS_FILTER_ORDER,\n    value,\n});\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\n\nimport {\n    getTopOffset,\n    MIN_ROW_COUNT,\n} from '../ControlBar/controlBarDimensions';\nimport { sGetControlBarUserRows } from '../../reducers/controlBar';\n\nconst DashboardVerticalOffset = props => {\n    const rows = props.editMode ? MIN_ROW_COUNT : props.userRows;\n    const marginTop = getTopOffset(rows);\n\n    return <div className=\"page-container-top-margin\" style={{ marginTop }} />;\n};\n\nconst mapStateToProps = state => ({\n    userRows: sGetControlBarUserRows(state),\n});\n\nDashboardVerticalOffset.propTypes = {\n    editMode: PropTypes.bool,\n    userRows: PropTypes.number,\n};\n\nexport default connect(mapStateToProps)(DashboardVerticalOffset);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { MenuItem, colors } from '@dhis2/ui-core';\n\nconst HeaderMenuItem = ({ title }) => (\n    <MenuItem\n        dense\n        key={title}\n        disabled\n        label={\n            <p style={{ color: colors.grey800, fontWeight: '600' }}>{title}</p>\n        }\n    />\n);\n\nHeaderMenuItem.propTypes = {\n    title: PropTypes.string.isRequired,\n};\n\nexport default HeaderMenuItem;\n","import React from 'react';\nimport { colors } from '@dhis2/ui-core';\nimport PropTypes from 'prop-types';\n\nconst LaunchIcon = ({ className }) => (\n    <svg\n        className={className}\n        xmlns=\"http://www.w3.org/2000/svg\"\n        width=\"12\"\n        height=\"12\"\n        fill={colors.grey600}\n        viewBox=\"0 0 24 24\"\n    >\n        <path d=\"M0 0h24v24H0z\" fill=\"none\" />\n        <path d=\"M19 19H5V5h7V3H5c-1.11 0-2 .9-2 2v14c0 1.1.89 2 2 2h14c1.1 0 2-.9 2-2v-7h-2v7zM14 3v2h3.59l-9.83 9.83 1.41 1.41L19 6.41V10h2V3h-7z\" />\n    </svg>\n);\n\nLaunchIcon.propTypes = {\n    className: PropTypes.string,\n};\n\nexport default LaunchIcon;\n","import React from 'react';\nimport { MenuItem, colors } from '@dhis2/ui-core';\nimport i18n from '@dhis2/d2-i18n';\nimport PropTypes from 'prop-types';\n\nimport { getItemIcon } from '../../modules/itemTypes';\nimport LaunchIcon from '../../icons/Launch';\n\nimport classes from './styles/ContentMenuItem.module.css';\n\nconst LaunchLink = ({ url }) => (\n    <a\n        onClick={e => e.stopPropagation()}\n        className={classes.launchLink}\n        target=\"_blank\"\n        rel=\"noopener noreferrer\"\n        href={url}\n    >\n        <LaunchIcon />\n    </a>\n);\n\nLaunchLink.propTypes = {\n    url: PropTypes.string,\n};\n\nconst InsertButton = () => (\n    <button className={classes.buttonInsert}>{i18n.t('Insert')}</button>\n);\n\nconst ContentMenuItem = ({ type, name, onInsert, url }) => {\n    const ItemIcon = getItemIcon(type);\n\n    return (\n        <MenuItem\n            dense\n            onClick={onInsert}\n            label={\n                <div className={classes.menuItem}>\n                    <div className={classes.label}>\n                        <ItemIcon\n                            style={{ margin: '6px', fill: colors.grey600 }}\n                        />\n                        <span>{name}</span>\n                        {url ? <LaunchLink url={url} /> : null}\n                    </div>\n                    <InsertButton />\n                </div>\n            }\n        />\n    );\n};\n\nContentMenuItem.propTypes = {\n    name: PropTypes.string,\n    type: PropTypes.string,\n    url: PropTypes.string,\n    onInsert: PropTypes.func,\n};\n\nexport default ContentMenuItem;\n","import i18n from '@dhis2/d2-i18n';\nimport {\n    spacerContent,\n    REPORT_TABLE,\n    CHART,\n    MAP,\n    EVENT_CHART,\n    EVENT_REPORT,\n    USERS,\n    REPORTS,\n    RESOURCES,\n    APP,\n    MESSAGES,\n    TEXT,\n    SPACER,\n} from '../../modules/itemTypes';\n\nexport const singleItems = [\n    {\n        id: 'additional',\n        header: i18n.t('Additional items'),\n        items: [\n            {\n                type: TEXT,\n                name: i18n.t('Text box'),\n                content: '',\n            },\n            {\n                type: MESSAGES,\n                name: i18n.t('Messages'),\n                content: 'true',\n            },\n            {\n                type: SPACER,\n                name: i18n.t('Spacer'),\n                content: spacerContent,\n            },\n        ],\n    },\n];\n\n// categorizedItems are grouped in the item selector menu\nexport const categorizedItems = [\n    REPORT_TABLE,\n    CHART,\n    MAP,\n    EVENT_REPORT,\n    EVENT_CHART,\n    USERS,\n    REPORTS,\n    RESOURCES,\n    APP,\n];\n\n// listItemTypes are included in a single dashboard item\nexport const listItemTypes = [REPORTS, RESOURCES, USERS];\n","import React, { Component, Fragment } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport i18n from '@dhis2/d2-i18n';\nimport { MenuItem, Divider } from '@dhis2/ui-core';\n\nimport HeaderMenuItem from './HeaderMenuItem';\nimport ContentMenuItem from './ContentMenuItem';\n\nimport { tAddListItemContent } from './actions';\nimport { acAddDashboardItem } from '../../actions/editDashboard';\nimport { getItemUrl, APP } from '../../modules/itemTypes';\nimport { categorizedItems, listItemTypes } from './selectableItems';\n\nimport classes from './styles/CategorizedMenuGroup.module.css';\n\nclass CategorizedMenuGroup extends Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            seeMore: false,\n        };\n    }\n\n    addItem = item => () => {\n        const { type, acAddDashboardItem, tAddListItemContent } = this.props;\n\n        if (type === APP) {\n            acAddDashboardItem({ type, content: item.key });\n        } else {\n            const newItem = {\n                id: item.id,\n                name: item.displayName || item.name,\n            };\n\n            if (listItemTypes.includes(type)) {\n                tAddListItemContent(type, newItem);\n            } else {\n                acAddDashboardItem({ type, content: newItem });\n            }\n        }\n    };\n\n    toggleSeeMore = () => {\n        this.setState({ seeMore: !this.state.seeMore });\n\n        this.props.onChangeItemsLimit(this.props.type);\n    };\n\n    render() {\n        const { title, type, items, hasMore } = this.props;\n        return (\n            <Fragment>\n                <HeaderMenuItem title={title} />\n                {items.map(item => {\n                    const itemUrl = getItemUrl(type, item, this.context.d2);\n                    return (\n                        <ContentMenuItem\n                            key={item.id || item.key}\n                            type={type}\n                            name={item.displayName || item.name}\n                            onInsert={this.addItem(item)}\n                            url={itemUrl}\n                        />\n                    );\n                })}\n                {hasMore ? (\n                    <MenuItem\n                        dense\n                        key={`showmore${title}`}\n                        onClick={this.toggleSeeMore}\n                        label={\n                            <button className={classes.showMoreButton}>\n                                {this.state.seeMore\n                                    ? i18n.t('Show fewer')\n                                    : i18n.t('Show more')}\n                            </button>\n                        }\n                    />\n                ) : null}\n                <Divider margin=\"8px 0px\" />\n            </Fragment>\n        );\n    }\n}\n\nCategorizedMenuGroup.propTypes = {\n    items: PropTypes.array.isRequired,\n    title: PropTypes.string.isRequired,\n    type: PropTypes.oneOf(categorizedItems).isRequired,\n    onChangeItemsLimit: PropTypes.func.isRequired,\n    acAddDashboardItem: PropTypes.func,\n    hasMore: PropTypes.bool,\n    tAddListItemContent: PropTypes.func,\n};\n\nCategorizedMenuGroup.contextTypes = {\n    d2: PropTypes.object.isRequired,\n};\n\nexport default connect(\n    null,\n    {\n        acAddDashboardItem,\n        tAddListItemContent,\n    }\n)(CategorizedMenuGroup);\n","import { sGetEditDashboardRoot } from '../../reducers/editDashboard';\nimport { itemTypeMap } from '../../modules/itemTypes';\nimport {\n    acAddDashboardItem,\n    acUpdateDashboardItem,\n} from '../../actions/editDashboard';\n\nexport const tAddListItemContent = (type, content) => (dispatch, getState) => {\n    const state = getState();\n    const listItemType = itemTypeMap[type].propName;\n    const dashboardItems = sGetEditDashboardRoot(state).dashboardItems;\n    const dashboardItemIndex = dashboardItems.findIndex(\n        item => item.type === type\n    );\n    let dashboardItem;\n\n    // Reports/Resources/Users dashboard item type already present in dashboard\n    if (dashboardItemIndex > -1) {\n        dashboardItem = dashboardItems[dashboardItemIndex];\n        dashboardItem[listItemType].push(content);\n\n        dispatch(acUpdateDashboardItem(dashboardItem));\n    } else {\n        dashboardItem = {\n            type: type,\n            content: [content],\n        };\n\n        dispatch(acAddDashboardItem(dashboardItem));\n    }\n};\n","import React, { Fragment } from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\n\nimport HeaderMenuItem from './HeaderMenuItem';\nimport ContentMenuItem from './ContentMenuItem';\nimport { acAddDashboardItem } from '../../actions/editDashboard';\n\nexport const SinglesMenuGroup = ({ acAddDashboardItem, category }) => {\n    const addToDashboard = ({ type, content }) => () => {\n        acAddDashboardItem({ type, content });\n    };\n\n    return (\n        <Fragment>\n            <HeaderMenuItem title={category.header} />\n            {category.items.map(item => (\n                <ContentMenuItem\n                    key={item.type}\n                    type={item.type}\n                    name={item.name}\n                    onInsert={addToDashboard(item)}\n                />\n            ))}\n        </Fragment>\n    );\n};\n\nSinglesMenuGroup.propTypes = {\n    acAddDashboardItem: PropTypes.func,\n    category: PropTypes.object,\n};\n\nexport default connect(\n    null,\n    { acAddDashboardItem }\n)(SinglesMenuGroup);\n","import React, { Fragment } from 'react';\nimport PropTypes from 'prop-types';\nimport i18n from '@dhis2/d2-i18n';\nimport Popover from '@material-ui/core/Popover';\nimport { InputField, Menu } from '@dhis2/ui-core';\n\nimport CategorizedMenuGroup from './CategorizedMenuGroup';\nimport SinglesMenuGroup from './SinglesMenuGroup';\nimport { singleItems, categorizedItems } from './selectableItems';\nimport { itemTypeMap } from '../../modules/itemTypes';\n\nimport './styles/ItemSelector.css';\n\nconst ItemSearchField = props => (\n    <InputField\n        name=\"Dashboard item search\"\n        label={i18n.t('Search for items to add to this dashboard')}\n        type=\"text\"\n        onChange={props.onChange}\n        onFocus={props.onFocus}\n        value={props.value}\n    />\n);\n\nclass ItemSelector extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            anchorEl: null,\n            open: false,\n            maxOptions: new Set(),\n            items: undefined,\n            filter: '',\n        };\n    }\n\n    closeList = () => {\n        this.setState({ open: false, filter: '' });\n    };\n\n    openList = (_, event) => {\n        this.fetchItems();\n\n        this.setState({\n            anchorEl: event.currentTarget,\n            open: true,\n        });\n    };\n\n    setFilter = (_, event) => {\n        this.setState({ filter: event.target.value }, this.fetchItems);\n    };\n\n    getCategorizedMenuGroups = () =>\n        categorizedItems\n            .filter(type => {\n                const itemType = itemTypeMap[type];\n                return (\n                    this.state.items && this.state.items[itemType.endPointName]\n                );\n            })\n            .map(type => {\n                const itemType = itemTypeMap[type];\n                const allItems = this.state.items[itemType.endPointName];\n                const hasMore = allItems.length > 5;\n                const items = this.state.maxOptions.has(itemType.id)\n                    ? allItems\n                    : allItems.slice(0, 5);\n\n                return (\n                    <CategorizedMenuGroup\n                        key={type}\n                        type={type}\n                        title={itemType.pluralTitle}\n                        items={items}\n                        onChangeItemsLimit={this.fetchItems}\n                        hasMore={hasMore}\n                    />\n                );\n            });\n\n    getSinglesMenuGroups = () =>\n        singleItems.map(category => (\n            <SinglesMenuGroup key={category.id} category={category} />\n        ));\n\n    getMenuGroups = () =>\n        this.getCategorizedMenuGroups().concat(this.getSinglesMenuGroups());\n\n    fetchItems = async type => {\n        if (type) {\n            const maxOptions = this.state.maxOptions;\n\n            if (maxOptions.has(type)) {\n                maxOptions.delete(type);\n            } else {\n                maxOptions.add(type);\n            }\n\n            this.setState({ maxOptions });\n        } else {\n            this.setState({\n                maxOptions: new Set(),\n            });\n        }\n\n        let queryString = '?count=6';\n        if ([...this.state.maxOptions.values()].length) {\n            queryString +=\n                '&max=' + [...this.state.maxOptions.values()].join('&max=');\n        }\n\n        const filter = this.state.filter ? `/${this.state.filter}` : '';\n\n        this.context.d2.Api.getApi()\n            .get(`dashboards/q${filter}${queryString}`)\n            .then(response => this.setState({ items: response }))\n            .catch(console.error);\n    };\n\n    render() {\n        return (\n            <Fragment>\n                <ItemSearchField\n                    value={this.state.filter}\n                    onChange={this.setFilter}\n                    onFocus={this.openList}\n                />\n                <Popover\n                    className=\"dashboard-item-selector\"\n                    open={this.state.open}\n                    onClose={this.closeList}\n                    anchorEl={this.state.anchorEl}\n                    anchorOrigin={{ horizontal: 'left', vertical: 'bottom' }}\n                    transformOrigin={{ horizontal: 'left', vertical: 'top' }}\n                    style={{ height: '70vh' }}\n                    PaperProps={{ style: { width: '700px' } }}\n                    disableAutoFocus={true}\n                    disableRestoreFocus={true}\n                >\n                    <Menu>{this.getMenuGroups()}</Menu>\n                </Popover>\n            </Fragment>\n        );\n    }\n}\n\nItemSearchField.propTypes = {\n    value: PropTypes.string,\n    onChange: PropTypes.func,\n    onFocus: PropTypes.func,\n};\n\nItemSelector.contextTypes = {\n    d2: PropTypes.object.isRequired,\n};\n\nexport default ItemSelector;\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport i18n from '@dhis2/d2-i18n';\nimport { InputField, TextAreaField } from '@dhis2/ui-core';\n\nimport ItemSelector from '../ItemSelector/ItemSelector';\nimport {\n    acSetDashboardTitle,\n    acSetDashboardDescription,\n} from '../../actions/editDashboard';\nimport { orObject } from '../../modules/util';\nimport { sGetEditDashboardRoot } from '../../reducers/editDashboard';\n\nconst styles = {\n    section: { display: 'flex', justifyContent: 'space-between' },\n    titleDescription: {\n        flex: '3',\n        marginRight: '50px',\n    },\n    title: {\n        display: 'block',\n        clear: 'both',\n    },\n    description: {\n        display: 'block',\n        clear: 'both',\n        marginTop: '15px',\n    },\n    underline: {\n        '&::before': {\n            borderBottom: `none`,\n        },\n        '&:hover::before': {\n            borderBottom: `none!important`,\n        },\n    },\n    input: {\n        backgroundColor: 'rgba(0, 0, 10, 0.05)',\n        borderRadius: '4px',\n        width: '100%',\n        '&:hover': {\n            backgroundColor: 'rgba(0, 0, 10, 0.08)',\n        },\n    },\n    itemSelector: {\n        flex: '2',\n        position: 'relative',\n    },\n};\n\nexport const EditTitleBar = ({\n    name,\n    description,\n    onChangeTitle,\n    onChangeDescription,\n    classes,\n}) => {\n    const updateTitle = (_, e) => {\n        onChangeTitle(e.target.value);\n    };\n\n    const updateDescription = (_, e) => {\n        onChangeDescription(e.target.value);\n    };\n\n    return (\n        <section className={classes.section}>\n            <div className={classes.titleDescription}>\n                <InputField\n                    className={classes.title}\n                    name=\"Dashboard title input\"\n                    label={i18n.t('Dashboard title')}\n                    type=\"text\"\n                    onChange={updateTitle}\n                    value={name}\n                />\n                <TextAreaField\n                    className={classes.description}\n                    name=\"Dashboard description input\"\n                    label={i18n.t('Dashboard description')}\n                    onChange={updateDescription}\n                    value={description}\n                />\n            </div>\n            <div className={classes.itemSelector}>\n                <ItemSelector />\n            </div>\n        </section>\n    );\n};\n\nconst mapStateToProps = state => {\n    const selectedDashboard = orObject(sGetEditDashboardRoot(state));\n\n    return {\n        name: selectedDashboard.name,\n        description: selectedDashboard.description,\n    };\n};\n\nconst mapDispatchToProps = {\n    onChangeTitle: acSetDashboardTitle,\n    onChangeDescription: acSetDashboardDescription,\n};\n\nexport default connect(\n    mapStateToProps,\n    mapDispatchToProps\n)(withStyles(styles)(EditTitleBar));\n\nEditTitleBar.propTypes = {\n    onChangeDescription: PropTypes.func.isRequired,\n    onChangeTitle: PropTypes.func.isRequired,\n    classes: PropTypes.object,\n    description: PropTypes.string,\n    name: PropTypes.string,\n};\n\nEditTitleBar.defaultProps = {\n    name: '',\n    description: '',\n};\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nimport { Button } from '@dhis2/ui-core';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\n\nimport i18n from '@dhis2/d2-i18n';\n\nimport {\n    PeriodDimension,\n    DynamicDimension,\n    OrgUnitDimension,\n    DIMENSION_ID_PERIOD,\n    DIMENSION_ID_ORGUNIT,\n} from '@dhis2/analytics';\n\nconst peId = DIMENSION_ID_PERIOD;\nconst ouId = DIMENSION_ID_ORGUNIT;\n\nclass FilterDialog extends Component {\n    onConfirm = id => () => this.props.onConfirm(id);\n\n    dialogContent() {\n        const { displayNameProperty, dimension, selectedItems } = this.props;\n        const dialogId = dimension.id;\n\n        const commonProps = {\n            d2: this.context.d2,\n            onSelect: this.props.onSelect,\n            onDeselect: this.props.onDeselect,\n            onReorder: this.props.onReorder,\n        };\n\n        switch (dialogId) {\n            case peId: {\n                return (\n                    <PeriodDimension\n                        selectedPeriods={selectedItems}\n                        {...commonProps}\n                    />\n                );\n            }\n            case ouId:\n                return (\n                    <OrgUnitDimension\n                        displayNameProperty={displayNameProperty}\n                        ouItems={selectedItems}\n                        {...commonProps}\n                    />\n                );\n            default:\n                return (\n                    <DynamicDimension\n                        selectedItems={selectedItems}\n                        dialogId={dialogId}\n                        dialogTitle={dimension.name}\n                        {...commonProps}\n                    />\n                );\n        }\n    }\n\n    render() {\n        const { dimension, onClose } = this.props;\n        const dialogId = dimension.id;\n\n        return (\n            <Dialog\n                open={!!dialogId}\n                maxWidth=\"lg\"\n                disableEnforceFocus\n                onClose={onClose}\n            >\n                {dialogId && this.dialogContent()}\n                <DialogActions>\n                    <Button kind=\"secondary\" onClick={onClose}>\n                        {i18n.t('Cancel')}\n                    </Button>\n                    <Button kind=\"primary\" onClick={this.onConfirm(dialogId)}>\n                        {i18n.t('Confirm')}\n                    </Button>\n                </DialogActions>\n            </Dialog>\n        );\n    }\n}\n\nFilterDialog.propTypes = {\n    dimension: PropTypes.object,\n    displayNameProperty: PropTypes.string,\n    selectedItems: PropTypes.array,\n    onClose: PropTypes.func,\n    onConfirm: PropTypes.func,\n    onDeselect: PropTypes.func,\n    onReorder: PropTypes.func,\n    onSelect: PropTypes.func,\n};\n\nFilterDialog.contextTypes = {\n    d2: PropTypes.object,\n};\n\nexport default FilterDialog;\n","export const SET_ACTIVE_MODAL_DIMENSION = 'SET_ACTIVE_MODAL_DIMENSION';\nexport const CLEAR_ACTIVE_MODAL_DIMENSION = 'CLEAR_ACTIVE_MODAL_DIMENSION';\n\nexport const DEFAULT_STATE_ACTIVE_MODAL_DIMENSION = {};\n\nexport default (state = DEFAULT_STATE_ACTIVE_MODAL_DIMENSION, action) => {\n    switch (action.type) {\n        case SET_ACTIVE_MODAL_DIMENSION: {\n            return action.value;\n        }\n        case CLEAR_ACTIVE_MODAL_DIMENSION: {\n            return DEFAULT_STATE_ACTIVE_MODAL_DIMENSION;\n        }\n        default:\n            return state;\n    }\n};\n\nexport const sGetActiveModalDimension = state => state.activeModalDimension;\n","import {\n    SET_ACTIVE_MODAL_DIMENSION,\n    CLEAR_ACTIVE_MODAL_DIMENSION,\n} from '../reducers/activeModalDimension';\n\nexport const acSetActiveModalDimension = value => ({\n    type: SET_ACTIVE_MODAL_DIMENSION,\n    value,\n});\n\nexport const acClearActiveModalDimension = () => ({\n    type: CLEAR_ACTIVE_MODAL_DIMENSION,\n});\n","import React, { Component, Fragment } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport Popover from '@material-ui/core/Popover';\nimport ArrowDropDownIcon from '@material-ui/icons/ArrowDropDown';\nimport { withTheme } from '@material-ui/core/styles';\n\nimport i18n from '@dhis2/d2-i18n';\nimport { DimensionsPanel } from '@dhis2/analytics';\n\nimport { Button } from '@dhis2/ui-core';\nimport FilterDialog from './FilterDialog';\n\nimport { sGetSettingsDisplayNameProperty } from '../../reducers/settings';\nimport { sGetActiveModalDimension } from '../../reducers/activeModalDimension';\nimport { sGetDimensions } from '../../reducers/dimensions';\nimport { sGetFiltersKeys } from '../../reducers/itemFilters';\nimport { sGetEditItemFiltersRoot } from '../../reducers/editItemFilters';\nimport { acAddItemFilter, acRemoveItemFilter } from '../../actions/itemFilters';\nimport {\n    acRemoveEditItemFilter,\n    acSetEditItemFilters,\n} from '../../actions/editItemFilters';\nimport {\n    acClearActiveModalDimension,\n    acSetActiveModalDimension,\n} from '../../actions/activeModalDimension';\n\nclass FilterSelector extends Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            anchorEl: null,\n        };\n    }\n\n    openPanel = (_, event) => {\n        this.setState({ anchorEl: event.currentTarget });\n    };\n\n    closePanel = () => {\n        this.setState({ anchorEl: null });\n    };\n\n    closeDialog = () => {\n        this.setState({ anchorEl: null });\n\n        this.props.clearActiveModalDimension();\n    };\n\n    selectDimension = id => {\n        this.props.setActiveModalDimension(\n            this.props.dimensions.find(dimension => dimension.id === id)\n        );\n    };\n\n    onSelectItems = ({ dimensionId, items }) => {\n        this.props.setEditItemFilters({\n            ...this.props.selectedItems,\n            [dimensionId]: items,\n        });\n    };\n\n    onDeselectItems = ({ dimensionId, itemIdsToRemove }) => {\n        const oldList = this.props.selectedItems[dimensionId] || [];\n        const newList = oldList.filter(\n            item => !itemIdsToRemove.includes(item.id)\n        );\n\n        if (newList.length) {\n            this.props.setEditItemFilters({\n                ...this.props.selectedItems,\n                [dimensionId]: newList,\n            });\n        } else {\n            this.props.removeEditItemFilter(dimensionId);\n        }\n    };\n\n    onReorderItems = ({ dimensionId, itemIds }) => {\n        const oldList = this.props.selectedItems[dimensionId] || [];\n        const reorderedList = itemIds.map(id =>\n            oldList.find(item => item.id === id)\n        );\n\n        this.props.setEditItemFilters({\n            ...this.props.selectedItems,\n            [dimensionId]: reorderedList,\n        });\n    };\n\n    saveFilter = id => {\n        const filterItems = this.props.selectedItems[id];\n\n        if (filterItems && filterItems.length) {\n            this.props.addItemFilter({\n                id,\n                value: [...filterItems],\n            });\n        } else {\n            this.props.removeItemFilter(id);\n        }\n\n        this.closeDialog();\n    };\n\n    render() {\n        const {\n            theme,\n            displayNameProperty,\n            dimension,\n            dimensions,\n            selectedDimensions,\n            selectedItems,\n        } = this.props;\n\n        return (\n            <Fragment>\n                <Button onClick={this.openPanel}>\n                    {i18n.t('Add filter')}\n                    <ArrowDropDownIcon />\n                </Button>\n                <Popover\n                    open={Boolean(this.state.anchorEl)}\n                    anchorEl={this.state.anchorEl}\n                    anchorOrigin={{ vertical: 'bottom', horizontal: 'left' }}\n                    onClose={this.closePanel}\n                    style={{\n                        height: '100%',\n                        fontFamily: theme.typography.fontFamily,\n                    }}\n                >\n                    <DimensionsPanel\n                        dimensions={dimensions}\n                        onDimensionClick={this.selectDimension}\n                        selectedIds={selectedDimensions}\n                    />\n                </Popover>\n                {dimension ? (\n                    <FilterDialog\n                        displayNameProperty={displayNameProperty}\n                        dimension={dimension}\n                        selectedItems={selectedItems[dimension.id] || []}\n                        onSelect={this.onSelectItems}\n                        onDeselect={this.onDeselectItems}\n                        onReorder={this.onReorderItems}\n                        onClose={this.closeDialog}\n                        onConfirm={this.saveFilter}\n                    />\n                ) : null}\n            </Fragment>\n        );\n    }\n}\n\nconst mapStateToProps = state => ({\n    displayNameProperty: sGetSettingsDisplayNameProperty(state),\n    dimension: sGetActiveModalDimension(state),\n    dimensions: sGetDimensions(state),\n    selectedDimensions: sGetFiltersKeys(state),\n    selectedItems: sGetEditItemFiltersRoot(state),\n});\n\nFilterSelector.propTypes = {\n    addItemFilter: PropTypes.func,\n    clearActiveModalDimension: PropTypes.func,\n    dimension: PropTypes.object,\n    dimensions: PropTypes.object,\n    displayNameProperty: PropTypes.string,\n    removeEditItemFilter: PropTypes.func,\n    removeItemFilter: PropTypes.func,\n    selectedDimensions: PropTypes.array,\n    selectedItems: PropTypes.object,\n    setActiveModalDimension: PropTypes.func,\n    setEditItemFilters: PropTypes.func,\n    theme: PropTypes.object,\n};\n\nexport default connect(\n    mapStateToProps,\n    {\n        clearActiveModalDimension: acClearActiveModalDimension,\n        setActiveModalDimension: acSetActiveModalDimension,\n        addItemFilter: acAddItemFilter,\n        removeItemFilter: acRemoveItemFilter,\n        removeEditItemFilter: acRemoveEditItemFilter,\n        setEditItemFilters: acSetEditItemFilters,\n    }\n)(withTheme()(FilterSelector));\n","import React, { Component } from 'react';\nimport InfoOutlineIcon from '@material-ui/icons/InfoOutlined';\nimport { colors } from '@dhis2/ui-core';\nimport PropTypes from 'prop-types';\n\nclass Info extends Component {\n    show = false;\n\n    toggle() {\n        this.show = !this.show;\n        return this.show;\n    }\n\n    render() {\n        return (\n            <div onClick={() => this.props.onClick(this.toggle())}>\n                <InfoOutlineIcon style={{ fill: colors.grey600 }} />\n            </div>\n        );\n    }\n}\n\nInfo.propTypes = {\n    onClick: PropTypes.func,\n};\n\nexport default Info;\n","import React, { Component, Fragment } from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport { Link } from 'react-router-dom';\nimport i18n from '@dhis2/d2-i18n';\nimport SharingDialog from '@dhis2/d2-ui-sharing-dialog';\nimport Star from '@material-ui/icons/Star';\nimport StarBorder from '@material-ui/icons/StarBorder';\n\nimport { orObject } from '../../modules/util';\nimport { tStarDashboard } from '../../actions/dashboards';\nimport { acSetSelectedShowDescription } from '../../actions/selected';\nimport FilterSelector from '../ItemFilter/FilterSelector';\nimport { Button } from '@dhis2/ui-core';\nimport Info from './Info';\nimport {\n    sGetSelectedId,\n    sGetSelectedShowDescription,\n} from '../../reducers/selected';\nimport {\n    sGetDashboardById,\n    sGetDashboardItems,\n} from '../../reducers/dashboards';\nimport { colors } from '@dhis2/ui-core';\n\nconst NO_DESCRIPTION = i18n.t('No description');\n\nconst styles = {\n    actions: {\n        display: 'flex',\n        alignItems: 'center',\n        marginLeft: '20px',\n    },\n    starIcon: {\n        fill: colors.grey600,\n    },\n    textButton: {\n        minWidth: '30px',\n        top: '1px',\n    },\n    editLink: {\n        display: 'inline-block',\n        verticalAlign: 'top',\n        textDecoration: 'none',\n        marginRight: '4px',\n    },\n    titleBar: {\n        display: 'flex',\n        alignItems: 'flex-start',\n    },\n    titleBarIcon: {\n        marginLeft: 5,\n        position: 'relative',\n        top: 1,\n        cursor: 'pointer',\n    },\n};\n\nclass ViewTitleBar extends Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            sharingDialogIsOpen: false,\n        };\n    }\n\n    toggleSharingDialog = () =>\n        this.setState({ sharingDialogIsOpen: !this.state.sharingDialogIsOpen });\n\n    render() {\n        const {\n            id,\n            name,\n            description,\n            access,\n            style,\n            showDescription,\n            starred,\n            onStarClick,\n            onInfoClick,\n            classes,\n        } = this.props;\n\n        const titleStyle = Object.assign({}, style.title, {\n            cursor: 'default',\n            userSelect: 'text',\n            top: '7px',\n        });\n\n        const StarIcon = starred ? Star : StarBorder;\n\n        return (\n            <Fragment>\n                <div className={classes.titleBar}>\n                    <span style={titleStyle}>{name}</span>\n                    <div className={classes.actions}>\n                        <div\n                            className={classes.titleBarIcon}\n                            onClick={onStarClick}\n                        >\n                            <StarIcon className={classes.starIcon} />\n                        </div>\n                        <div className={classes.titleBarIcon}>\n                            <Info onClick={onInfoClick} />\n                        </div>\n                        <div style={{ marginLeft: '10px' }}>\n                            {access.update ? (\n                                <Link\n                                    className={classes.editLink}\n                                    to={`/${id}/edit`}\n                                >\n                                    <Button>{i18n.t('Edit')}</Button>\n                                </Link>\n                            ) : null}\n                            {access.manage ? (\n                                <span style={{ marginRight: '4px' }}>\n                                    <Button onClick={this.toggleSharingDialog}>\n                                        {i18n.t('Share')}\n                                    </Button>\n                                </span>\n                            ) : null}\n                            <span style={{ marginRight: '4px' }}>\n                                <FilterSelector />\n                            </span>\n                        </div>\n                    </div>\n                </div>\n                {showDescription ? (\n                    <div\n                        className=\"dashboard-description\"\n                        style={Object.assign(\n                            { paddingTop: '5px', paddingBottom: '5px' },\n                            style.description,\n                            !description ? { color: '#888' } : {}\n                        )}\n                    >\n                        {description || NO_DESCRIPTION}\n                    </div>\n                ) : null}\n                {id ? (\n                    <SharingDialog\n                        d2={this.context.d2}\n                        id={id}\n                        type=\"dashboard\"\n                        open={this.state.sharingDialogIsOpen}\n                        onRequestClose={this.toggleSharingDialog}\n                    />\n                ) : null}\n            </Fragment>\n        );\n    }\n}\n\nconst mapStateToProps = state => {\n    const id = sGetSelectedId(state);\n    const dashboard = orObject(sGetDashboardById(state, id));\n\n    return {\n        id,\n        name: dashboard.displayName,\n        description: dashboard.displayDescription,\n        dashboardItems: sGetDashboardItems(state),\n        showDescription: sGetSelectedShowDescription(state),\n        starred: dashboard.starred,\n        access: orObject(dashboard.access),\n    };\n};\n\nconst mergeProps = (stateProps, dispatchProps, ownProps) => {\n    const { id, starred, showDescription } = stateProps;\n    const { dispatch } = dispatchProps;\n\n    return {\n        ...stateProps,\n        ...ownProps,\n        onStarClick: () => dispatch(tStarDashboard(id, !starred)),\n        onInfoClick: () =>\n            dispatch(acSetSelectedShowDescription(!showDescription)),\n    };\n};\n\nexport default connect(\n    mapStateToProps,\n    null,\n    mergeProps\n)(withStyles(styles)(ViewTitleBar));\n\nViewTitleBar.propTypes = {\n    access: PropTypes.object,\n    classes: PropTypes.object,\n    description: PropTypes.string,\n    id: PropTypes.string,\n    name: PropTypes.string,\n    showDescription: PropTypes.bool,\n    starred: PropTypes.bool,\n    style: PropTypes.object,\n    onInfoClick: PropTypes.func,\n    onStarClick: PropTypes.func,\n};\n\nViewTitleBar.defaultProps = {\n    name: '',\n    description: '',\n    starred: false,\n    showDescription: false,\n    onInfoClick: null,\n};\n\nViewTitleBar.contextTypes = {\n    d2: PropTypes.object,\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport { colors } from '@dhis2/ui-core';\nimport EditTitleBar from './EditTitleBar';\nimport ViewTitleBar from './ViewTitleBar';\n\nimport './TitleBar.css';\n\nconst style = {\n    title: {\n        position: 'relative',\n        fontSize: 21,\n        fontWeight: 500,\n        color: colors.black,\n        minWidth: 50,\n    },\n    description: {\n        fontSize: 14,\n        color: colors.grey800,\n    },\n};\n\nconst TitleBar = ({ edit }) => {\n    return (\n        <div\n            className=\"titlebar-wrapper\"\n            style={{\n                padding: '20px 15px 5px 10px',\n            }}\n        >\n            {edit ? (\n                <EditTitleBar style={style} />\n            ) : (\n                <ViewTitleBar style={style} />\n            )}\n        </div>\n    );\n};\n\nTitleBar.propTypes = {\n    edit: PropTypes.bool,\n};\n\nexport default TitleBar;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nimport i18n from '@dhis2/d2-i18n';\n\nimport * as pluginManager from './plugin';\nimport { getBaseUrl, orObject } from '../../../modules/util';\nimport { getGridItemDomId } from '../../ItemGrid/gridUtil';\n\nconst pluginCredentials = d2 => {\n    return {\n        baseUrl: getBaseUrl(d2),\n        auth: d2.Api.getApi().defaultHeaders.Authorization,\n    };\n};\n\nclass DefaultPlugin extends Component {\n    pluginCredentials = null;\n\n    constructor(props, context) {\n        super(props);\n\n        this.d2 = context.d2;\n    }\n\n    shouldPluginReload = prevProps => {\n        // TODO - fix this hack, to handle bug with multiple\n        // rerendering while switching between dashboards.\n        //\n        // To determine if the rendering is happening because of a\n        // dashboard switch, check if the item reference has changed.\n        const reloadAllowed = this.props.item === prevProps.item;\n\n        const filtersChanged = prevProps.itemFilters !== this.props.itemFilters;\n        const vis = orObject(this.props.visualization);\n        const prevVis = orObject(prevProps.visualization);\n        const visChanged =\n            vis.id !== prevVis.id || vis.activeType !== prevVis.activeType;\n\n        return reloadAllowed && (visChanged || filtersChanged);\n    };\n\n    reloadPlugin = prevProps => {\n        if (\n            pluginManager.pluginIsAvailable(\n                this.props.item,\n                this.props.visualization\n            ) &&\n            this.shouldPluginReload(prevProps)\n        ) {\n            const prevVis = orObject(prevProps.visualization);\n            const currentVis = this.props.visualization;\n\n            const useActiveType =\n                currentVis.activeType !== prevVis.activeType ||\n                currentVis.activeType !== this.props.item.type;\n\n            if (\n                useActiveType ||\n                this.props.itemFilters !== prevProps.itemFilters\n            ) {\n                pluginManager.unmount(\n                    this.props.item,\n                    prevVis.activeType || this.props.item.type\n                );\n\n                pluginManager.load(this.props.item, this.props.visualization, {\n                    credentials: this.pluginCredentials,\n                    activeType: useActiveType ? currentVis.activeType : null,\n                });\n            }\n        }\n    };\n\n    componentDidMount() {\n        this.pluginCredentials = pluginCredentials(this.d2);\n\n        if (\n            pluginManager.pluginIsAvailable(\n                this.props.item,\n                this.props.visualization\n            )\n        ) {\n            pluginManager.load(this.props.item, this.props.visualization, {\n                credentials: this.pluginCredentials,\n                activeType: !this.props.editMode ? this.getActiveType() : null,\n            });\n        }\n    }\n\n    componentDidUpdate(prevProps) {\n        this.reloadPlugin(prevProps);\n    }\n\n    getActiveType = () =>\n        this.props.visualization.activeType || this.props.item.type;\n\n    render() {\n        const { classes, item, visualization, style } = this.props;\n        const pluginIsAvailable = pluginManager.pluginIsAvailable(\n            item,\n            visualization\n        );\n\n        return pluginIsAvailable ? (\n            <div id={getGridItemDomId(item.id)} style={style} />\n        ) : (\n            <div className={classes.textDiv}>\n                {i18n.t('Unable to load the plugin for this item')}\n            </div>\n        );\n    }\n}\n\nDefaultPlugin.contextTypes = {\n    d2: PropTypes.object,\n};\n\nDefaultPlugin.propTypes = {\n    classes: PropTypes.object,\n    editMode: PropTypes.bool,\n    item: PropTypes.object,\n    itemFilters: PropTypes.object,\n    style: PropTypes.object,\n    visualization: PropTypes.object,\n};\n\nDefaultPlugin.defaultProps = {\n    style: {},\n    item: {},\n    itemFilters: {},\n    visualization: {},\n};\n\nexport default DefaultPlugin;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport { colors } from '@dhis2/ui-core';\n\nimport classes from './styles/DeleteItemButton.module.css';\n\nconst DeleteItemButton = ({ onClick }) => (\n    <button\n        type=\"button\"\n        className={classes.deleteItemButton}\n        onClick={onClick}\n    >\n        <DeleteIcon style={{ fill: colors.red500 }} />\n    </button>\n);\n\nDeleteItemButton.propTypes = {\n    onClick: PropTypes.func,\n};\n\nexport default DeleteItemButton;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\n\nimport { sGetIsEditing } from '../../reducers/editDashboard';\nimport { acRemoveDashboardItem } from '../../actions/editDashboard';\nimport DeleteItemButton from './DeleteItemButton';\n\nimport classes from './styles/ItemHeader.module.css';\n\nconst ItemHeader = props => {\n    const {\n        title,\n        editMode,\n        actionButtons,\n        itemId,\n        acRemoveDashboardItem,\n    } = props;\n\n    const handleDeleteItem = () => acRemoveDashboardItem(itemId);\n\n    return (\n        <div className={classes.itemHeaderWrap}>\n            <p className={classes.itemTitle}>{title}</p>\n            {editMode ? (\n                <div className={classes.itemActionsWrap}>\n                    <DeleteItemButton onClick={handleDeleteItem} />\n                </div>\n            ) : (\n                actionButtons && (\n                    <div className={classes.itemActionsWrap}>\n                        {actionButtons}\n                    </div>\n                )\n            )}\n        </div>\n    );\n};\n\nItemHeader.propTypes = {\n    acRemoveDashboardItem: PropTypes.func,\n    actionButtons: PropTypes.node,\n    editMode: PropTypes.bool,\n    itemId: PropTypes.string,\n    title: PropTypes.string,\n};\n\nconst mapStateToProps = state => ({\n    editMode: sGetIsEditing(state),\n});\n\nconst mapDispatchToProps = {\n    acRemoveDashboardItem,\n};\n\nexport default connect(\n    mapStateToProps,\n    mapDispatchToProps\n)(ItemHeader);\n","import React from 'react';\n\nexport const ThreeDots = () => (\n    <svg\n        height=\"18\"\n        viewBox=\"0 0 18 18\"\n        width=\"18\"\n        xmlns=\"http://www.w3.org/2000/svg\"\n    >\n        <path\n            d=\"m4 7.5c-.83 0-1.5.67-1.5 1.5s.67 1.5 1.5 1.5 1.5-.67 1.5-1.5-.67-1.5-1.5-1.5zm10 0c-.83 0-1.5.67-1.5 1.5s.67 1.5 1.5 1.5 1.5-.67 1.5-1.5-.67-1.5-1.5-1.5zm-5 0c-.83 0-1.5.67-1.5 1.5s.67 1.5 1.5 1.5 1.5-.67 1.5-1.5-.67-1.5-1.5-1.5z\"\n            fill=\"#6e7a8a\"\n        />\n    </svg>\n);\n\nexport const SpeechBubble = () => (\n    <svg\n        height=\"20\"\n        viewBox=\"0 0 20 20\"\n        width=\"20\"\n        xmlns=\"http://www.w3.org/2000/svg\"\n    >\n        <path\n            d=\"m20 2h-16c-1.1 0-1.99.9-1.99 2l-.01 18 4-4h14c1.1 0 2-.9 2-2v-12c0-1.1-.9-2-2-2zm-2 12h-12v-2h12zm0-3h-12v-2h12zm0-3h-12v-2h12z\"\n            fill=\"#6e7a8a\"\n            fillRule=\"evenodd\"\n            transform=\"translate(-2 -2)\"\n        />\n    </svg>\n);\n","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\n\nimport { isSingleValue } from '@dhis2/analytics';\nimport { Button, Menu, MenuItem, Divider, colors } from '@dhis2/ui-core';\nimport i18n from '@dhis2/d2-i18n';\nimport Popover from '@material-ui/core/Popover';\nimport TableIcon from '@material-ui/icons/ViewList';\nimport ChartIcon from '@material-ui/icons/InsertChart';\nimport MapIcon from '@material-ui/icons/Public';\nimport LaunchIcon from '@material-ui/icons/Launch';\n\nimport { ThreeDots, SpeechBubble } from './assets/icons';\nimport { pluginIsAvailable, getLink } from './plugin';\nimport {\n    CHART,\n    MAP,\n    REPORT_TABLE,\n    EVENT_CHART,\n    EVENT_REPORT,\n    isTrackerDomainType,\n    hasMapView,\n    getAppName,\n} from '../../../modules/itemTypes';\n\nconst iconFill = { fill: colors.grey600 };\n\nconst ItemHeaderButtons = props => {\n    const [anchorEl, setAnchorEl] = useState(null);\n\n    const { item, visualization, onSelectActiveType, d2, activeType } = props;\n\n    const isTrackerType = isTrackerDomainType(item.type);\n\n    const onViewTable = () => {\n        onSelectActiveType(isTrackerType ? EVENT_REPORT : REPORT_TABLE);\n        handleClose();\n    };\n\n    const onViewChart = () => {\n        onSelectActiveType(isTrackerType ? EVENT_CHART : CHART);\n        handleClose();\n    };\n\n    const onViewMap = () => {\n        onSelectActiveType(MAP);\n        handleClose();\n    };\n\n    const itemHasMapView = () => hasMapView(item.type);\n\n    const handleMenuClick = (_, event) => setAnchorEl(event.currentTarget);\n\n    const handleInterpretationClick = () => {\n        props.onToggleFooter();\n        if (anchorEl !== null) {\n            handleClose();\n        }\n    };\n\n    const handleClose = () => setAnchorEl(null);\n\n    const type = visualization.type || item.type;\n    const canViewAs =\n        !isSingleValue(props.visualization.type) &&\n        !type.match(/^YEAR_OVER_YEAR/);\n\n    const interpretationMenuLabel = props.activeFooter\n        ? i18n.t(`Show interpretations and details`)\n        : i18n.t(`View interpretations and details`);\n\n    const ViewAsMenuItems = () => (\n        <>\n            <MenuItem\n                dense\n                active={activeType === CHART}\n                label={i18n.t('View as Chart')}\n                onClick={onViewChart}\n                icon={<ChartIcon style={iconFill} />}\n            />\n            <MenuItem\n                dense\n                active={[REPORT_TABLE, EVENT_REPORT].includes(activeType)}\n                label={i18n.t('View as Table')}\n                onClick={onViewTable}\n                icon={<TableIcon style={iconFill} />}\n            />\n            {itemHasMapView() && (\n                <MenuItem\n                    dense\n                    active={activeType === MAP}\n                    label={i18n.t('View as Map')}\n                    onClick={onViewMap}\n                    icon={<MapIcon style={iconFill} />}\n                />\n            )}\n        </>\n    );\n\n    return pluginIsAvailable(item, visualization) ? (\n        <>\n            <Button small secondary onClick={handleMenuClick}>\n                <ThreeDots />\n            </Button>\n            <Popover\n                open={Boolean(anchorEl)}\n                onClose={handleClose}\n                anchorEl={anchorEl}\n            >\n                <Menu>\n                    {canViewAs && (\n                        <>\n                            <ViewAsMenuItems />\n                            <Divider />\n                        </>\n                    )}\n                    <MenuItem\n                        dense\n                        icon={<LaunchIcon style={{ fill: '#6e7a8a' }} />}\n                        label={i18n.t(`Open in ${getAppName(item.type)} app`)}\n                        href={getLink(item, d2)}\n                        target=\"_blank\"\n                    />\n                    <MenuItem\n                        dense\n                        icon={<SpeechBubble />}\n                        label={interpretationMenuLabel}\n                        onClick={handleInterpretationClick}\n                    />\n                </Menu>\n            </Popover>\n        </>\n    ) : null;\n};\n\nItemHeaderButtons.propTypes = {\n    activeFooter: PropTypes.bool,\n    activeType: PropTypes.string,\n    d2: PropTypes.object,\n    item: PropTypes.object,\n    visualization: PropTypes.object,\n    onSelectActiveType: PropTypes.func,\n    onToggleFooter: PropTypes.func,\n};\n\nexport default ItemHeaderButtons;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { colors } from '@dhis2/ui-core';\nimport { getId } from './plugin';\nimport InterpretationsComponent from '@dhis2/d2-ui-interpretations';\n\nconst style = {\n    scrollContainer: {\n        overflowY: 'auto',\n        height: '340px',\n    },\n    line: {\n        margin: '-1px 0px 0px',\n        height: '1px',\n        border: 'none',\n        backgroundColor: colors.grey100,\n    },\n};\n\nclass ItemFooter extends Component {\n    render() {\n        const objectId = getId(this.props.item);\n\n        return (\n            <div className=\"dashboard-item-footer\">\n                <hr style={style.line} />\n                <div style={style.scrollContainer}>\n                    <InterpretationsComponent\n                        d2={this.context.d2}\n                        item={this.props.item}\n                        type={this.props.item.type.toLowerCase()}\n                        id={objectId}\n                        appName=\"dashboard\"\n                    />\n                </div>\n            </div>\n        );\n    }\n}\n\nItemFooter.contextTypes = {\n    d2: PropTypes.object.isRequired,\n};\n\nItemFooter.propTypes = {\n    item: PropTypes.object.isRequired,\n};\n\nexport default ItemFooter;\n","// Note that this ignores discrepancies in 'this', so shouldn't be used with bound functions\n// This is useful instead of lodash/memoize when we only need to memoize a single value\n// Inspiration: https://github.com/alexreardon/memoize-one\n\nconst memoizeOne = fn => {\n    let lastArgs = undefined;\n    let lastValue = undefined;\n\n    return (...args) => {\n        if (\n            lastArgs &&\n            args.length === lastArgs.length &&\n            args.every((arg, i) => arg === lastArgs[i])\n        ) {\n            return lastValue;\n        }\n        lastArgs = args;\n        lastValue = fn(...args);\n        return lastValue;\n    };\n};\n\nexport default memoizeOne;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { withStyles } from '@material-ui/core/styles';\nimport VisualizationPlugin from '@dhis2/data-visualizer-plugin';\n\nimport i18n from '@dhis2/d2-i18n';\nimport uniqueId from 'lodash/uniqueId';\n\nimport DefaultPlugin from './DefaultPlugin';\nimport ItemHeader from '../ItemHeader';\nimport ItemHeaderButtons from './ItemHeaderButtons';\nimport ItemFooter from './ItemFooter';\nimport * as pluginManager from './plugin';\nimport { sGetVisualization } from '../../../reducers/visualizations';\nimport { sGetItemFiltersRoot } from '../../../reducers/itemFilters';\nimport {\n    acAddVisualization,\n    acSetActiveVisualizationType,\n} from '../../../actions/visualizations';\nimport { MAP, CHART, REPORT_TABLE } from '../../../modules/itemTypes';\n\nimport { colors } from '@dhis2/ui-core';\nimport memoizeOne from '../../../modules/memoizeOne';\nimport { getVisualizationConfig } from './plugin';\n\nconst HEADER_HEIGHT = 45;\n\nconst styles = {\n    icon: {\n        width: 16,\n        height: 16,\n        marginLeft: 3,\n        cursor: 'pointer',\n        fill: colors.grey600,\n    },\n    title: {\n        overflow: 'hidden',\n        maxWidth: '85%',\n        textOverflow: 'ellipsis',\n        whiteSpace: 'nowrap',\n    },\n    textDiv: {\n        fontSize: '14px',\n        fontStretch: 'normal',\n        padding: '10px',\n        lineHeight: '20px',\n    },\n};\n\nconst applyFilters = (visualization, filters) => {\n    if (!Object.keys(filters).length) {\n        return visualization;\n    }\n\n    // deep clone objects in filters to avoid changing the visualization in the Redux store\n    const visRows = visualization.rows.map(obj => ({ ...obj }));\n    const visColumns = visualization.columns.map(obj => ({ ...obj }));\n    const visFilters = visualization.filters.map(obj => ({ ...obj }));\n\n    Object.keys(filters).forEach(dimensionId => {\n        if (filters[dimensionId]) {\n            let dimensionFound = false;\n\n            [visRows, visColumns, visFilters].forEach(dimensionObjects =>\n                dimensionObjects\n                    .filter(obj => obj.dimension === dimensionId)\n                    .forEach(obj => {\n                        dimensionFound = true;\n                        obj.items = filters[dimensionId];\n                    })\n            );\n\n            // add dimension to filters if not already present elsewhere\n            if (!dimensionFound) {\n                visFilters.push({\n                    dimension: dimensionId,\n                    items: filters[dimensionId],\n                });\n            }\n        }\n    });\n\n    return {\n        ...visualization,\n        rows: visRows,\n        columns: visColumns,\n        filters: visFilters,\n    };\n};\n\nexport class Item extends Component {\n    state = {\n        showFooter: false,\n        configLoaded: false,\n    };\n\n    constructor(props, context) {\n        super(props);\n\n        this.d2 = context.d2;\n\n        this.contentRef = React.createRef();\n    }\n\n    async componentDidMount() {\n        this.props.onVisualizationLoaded(\n            // TODO do not call fetch on the pluginManager, do it here as the manager will eventually be removed...\n            await pluginManager.fetch(this.props.item)\n        );\n\n        this.setState({\n            configLoaded: true,\n        });\n    }\n\n    getUniqueKey = memoizeOne(() => uniqueId());\n\n    pluginCredentials = null;\n\n    getPluginComponent = () => {\n        const activeType = this.getActiveType();\n        const visualization = getVisualizationConfig(\n            this.props.visualization,\n            this.props.item.type,\n            activeType\n        );\n\n        if (!visualization) {\n            return (\n                <div className={this.props.classes.textDiv}>\n                    {i18n.t('No data to display')}\n                </div>\n            );\n        }\n\n        const props = {\n            ...this.props,\n            visualization,\n            style: this.getContentStyle(),\n        };\n\n        switch (activeType) {\n            case CHART:\n            case REPORT_TABLE: {\n                return (\n                    <VisualizationPlugin\n                        d2={this.d2}\n                        visualization={applyFilters(\n                            visualization,\n                            props.itemFilters\n                        )}\n                        forDashboard={true}\n                        style={props.style}\n                    />\n                );\n            }\n            case MAP: {\n                if (props.item.type === MAP) {\n                    // apply filters only to thematic and event layers\n                    // for maps AO\n                    const mapViews = props.visualization.mapViews.map(obj => {\n                        if (\n                            obj.layer.includes('thematic') ||\n                            obj.layer.includes('event')\n                        ) {\n                            return applyFilters(obj, props.itemFilters);\n                        }\n\n                        return obj;\n                    });\n\n                    props.visualization = {\n                        ...props.visualization,\n                        mapViews,\n                    };\n                } else {\n                    // this is the case of a non map AO passed to the maps plugin\n                    // due to a visualization type switch in dashboard item\n                    // maps plugin takes care of converting the AO to a suitable format\n                    props.visualization = applyFilters(\n                        props.visualization,\n                        props.itemFilters\n                    );\n                }\n\n                return <DefaultPlugin {...props} />;\n            }\n            default: {\n                props.visualization = applyFilters(\n                    props.visualization,\n                    props.itemFilters\n                );\n\n                return <DefaultPlugin {...props} />;\n            }\n        }\n    };\n\n    onToggleFooter = () => {\n        this.setState(\n            { showFooter: !this.state.showFooter },\n            this.props.onToggleItemExpanded(this.props.item.id)\n        );\n    };\n\n    onSelectActiveType = type => {\n        if (type === this.getActiveType()) {\n            return;\n        }\n\n        pluginManager.unmount(this.props.item, this.getActiveType());\n\n        this.props.onSelectActiveType(this.props.visualization.id, type);\n    };\n\n    getActiveType = () =>\n        this.props.visualization.activeType || this.props.item.type;\n\n    pluginIsAvailable = () =>\n        pluginManager.pluginIsAvailable(\n            this.props.item,\n            this.props.visualization\n        );\n\n    getContentStyle = () => {\n        const { item, editMode } = this.props;\n        const PADDING_BOTTOM = 4;\n\n        return !editMode\n            ? {\n                  height: item.originalHeight - HEADER_HEIGHT - PADDING_BOTTOM,\n              }\n            : { height: this.contentRef.offsetHeight };\n    };\n\n    render() {\n        const { item, editMode, itemFilters } = this.props;\n        const { showFooter } = this.state;\n\n        const actionButtons = (\n            <ItemHeaderButtons\n                item={item}\n                visualization={this.props.visualization}\n                onSelectActiveType={this.onSelectActiveType}\n                onToggleFooter={this.onToggleFooter}\n                d2={this.d2}\n                activeType={this.getActiveType()}\n                activeFooter={this.state.showFooter}\n            />\n        );\n\n        return (\n            <>\n                <ItemHeader\n                    title={pluginManager.getName(item)}\n                    itemId={item.id}\n                    actionButtons={actionButtons}\n                />\n                <div\n                    key={this.getUniqueKey(itemFilters)}\n                    className=\"dashboard-item-content\"\n                    ref={ref => (this.contentRef = ref)}\n                >\n                    {this.state.configLoaded && this.getPluginComponent()}\n                </div>\n                {!editMode && showFooter ? <ItemFooter item={item} /> : null}\n            </>\n        );\n    }\n}\n\nItem.contextTypes = {\n    d2: PropTypes.object,\n};\n\nItem.propTypes = {\n    classes: PropTypes.object,\n    editMode: PropTypes.bool,\n    item: PropTypes.object,\n    itemFilters: PropTypes.object,\n    visualization: PropTypes.object,\n    onSelectActiveType: PropTypes.func,\n    onToggleItemExpanded: PropTypes.func,\n    onVisualizationLoaded: PropTypes.func,\n};\n\nItem.defaultProps = {\n    item: {},\n    editMode: false,\n    onToggleItemExpanded: Function.prototype,\n    itemFilters: {},\n    visualization: {},\n};\n\nconst mapStateToProps = (state, ownProps) => ({\n    itemFilters: sGetItemFiltersRoot(state),\n    visualization: sGetVisualization(\n        state,\n        pluginManager.extractFavorite(ownProps.item).id\n    ),\n});\n\nconst mapDispatchToProps = dispatch => ({\n    onVisualizationLoaded: visualization =>\n        dispatch(acAddVisualization(visualization)),\n    onSelectActiveType: (id, type, activeType) =>\n        dispatch(acSetActiveVisualizationType(id, type, activeType)),\n});\n\nexport default connect(\n    mapStateToProps,\n    mapDispatchToProps\n)(withStyles(styles)(Item));\n","import React from 'react';\nimport { colors } from '@dhis2/ui-core';\n\nconst style = {\n    backgroundColor: colors.grey200,\n    border: 'none',\n    height: '1px',\n    margin: '0px 0px 5px 0px',\n};\n\nconst Line = () => <hr style={style} />;\n\nexport default Line;\n","import React, { Component, Fragment } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport i18n from '@dhis2/d2-i18n';\n\nimport { sGetMessagesRoot } from '../../../reducers/messages';\nimport { formatDate } from '../../../modules/util';\nimport { colors } from '@dhis2/ui-core';\nimport ItemHeader from '../ItemHeader';\nimport Line from '../../../widgets/Line';\n\nimport './MessagesItem.css';\n\nconst PRIVATE = 'PRIVATE';\n\nconst messageTypes = {\n    [PRIVATE]: 'Private',\n    VALIDATION_RESULT: 'Validation',\n    TICKET: 'Ticket',\n    SYSTEM: 'System',\n};\n\nconst style = {\n    list: {\n        listStyleType: 'none',\n        paddingLeft: '0px',\n    },\n    seeAll: {\n        textAlign: 'center',\n        fontSize: '13px',\n        marginBottom: '5px',\n    },\n    sender: {\n        fontSize: '13px',\n        lineHeight: '15px',\n        margin: 0,\n        color: colors.grey800,\n    },\n    snippet: {\n        color: colors.grey800,\n        fontSize: '13px',\n        lineHeight: '15px',\n        maxHeight: '30px',\n        overflow: 'hidden',\n    },\n};\n\nclass MessagesItem extends Component {\n    state = {\n        uiLocale: '',\n    };\n\n    async componentDidMount() {\n        const uiLocale = await this.context.d2.currentUser.userSettings.get(\n            'keyUiLocale'\n        );\n\n        this.setState({ uiLocale });\n    }\n\n    getMessageHref = msg => {\n        const msgIdentifier = msg ? `#/${msg.messageType}/${msg.id}` : '';\n        return `${this.context.baseUrl}/dhis-web-messaging/${msgIdentifier}`;\n    };\n\n    getMessageSender = msg => {\n        const latestMsg = msg.messages.slice(-1)[0];\n        return latestMsg.sender ? latestMsg.sender.displayName : '';\n    };\n\n    getMessageItems = () => {\n        const editClass = !this.props.editMode ? 'view' : null;\n\n        return this.props.messages.map(msg => {\n            const redirectToMsg = () => {\n                if (!this.props.editMode) {\n                    document.location.href = this.getMessageHref(msg);\n                }\n            };\n\n            const sender =\n                msg.messageType === PRIVATE\n                    ? this.getMessageSender(msg)\n                    : messageTypes[msg.messageType];\n\n            const readClass = !msg.read ? 'unread' : null;\n            const latestMsg = msg.messages.slice(-1)[0];\n            const msgDate = latestMsg.lastUpdated;\n\n            return (\n                <li\n                    className={`message-item ${editClass}`}\n                    key={msg.id}\n                    onClick={redirectToMsg}\n                >\n                    <p className={`message-title ${readClass}`}>\n                        {msg.displayName} ({msg.messageCount})\n                    </p>\n                    <p style={style.sender}>\n                        {sender} - {formatDate(msgDate, this.state.uiLocale)}\n                    </p>\n                    <p style={style.snippet}>{latestMsg.text}</p>\n                </li>\n            );\n        });\n    };\n\n    render() {\n        return (\n            <Fragment>\n                <ItemHeader\n                    title={i18n.t('Messages')}\n                    itemId={this.props.item.id}\n                />\n                <Line />\n                {this.props.messages.length > 0 && (\n                    <div className=\"dashboard-item-content\">\n                        <ul style={style.list}>{this.getMessageItems()}</ul>\n                        <div style={style.seeAll}>\n                            <a href={this.getMessageHref()}>\n                                {i18n.t('See all messages')}\n                            </a>\n                        </div>\n                    </div>\n                )}\n            </Fragment>\n        );\n    }\n}\n\nMessagesItem.propTypes = {\n    editMode: PropTypes.bool,\n    item: PropTypes.object,\n    messages: PropTypes.array,\n};\n\nMessagesItem.contextTypes = {\n    d2: PropTypes.object,\n    baseUrl: PropTypes.string,\n};\n\nconst mapStateToProps = state => {\n    return {\n        messages: Object.values(sGetMessagesRoot(state)),\n    };\n};\n\nconst MessagesContainer = connect(\n    mapStateToProps,\n    null\n)(MessagesItem);\n\nexport default MessagesContainer;\n","import React, { Fragment } from 'react';\nimport PropTypes from 'prop-types';\nimport ItemHeader from '../ItemHeader';\nimport NotInterestedIcon from '@material-ui/icons/NotInterested';\n\nconst NotSupportedItem = props => (\n    <Fragment>\n        <ItemHeader\n            title={`Item type not supported: ${props.item.type}`}\n            itemId={props.item.id}\n        />\n        <div\n            style={{\n                display: 'flex',\n                justifyContent: 'center',\n                alignItems: 'center',\n                height: '90%',\n            }}\n        >\n            <NotInterestedIcon\n                style={{ width: 100, height: 100, align: 'center' }}\n                color=\"disabled\"\n            />\n        </div>\n    </Fragment>\n);\n\nNotSupportedItem.propTypes = {\n    item: PropTypes.object,\n};\n\nexport default NotSupportedItem;\n","import React from 'react';\nimport { colors } from '@dhis2/ui-core';\nimport PropTypes from 'prop-types';\n\nconst DescriptionIcon = ({ className }) => (\n    <svg\n        className={className}\n        xmlns=\"http://www.w3.org/2000/svg\"\n        viewBox=\"0 0 24 24\"\n        fill={colors.grey500}\n    >\n        <path d=\"M0 0h24v24H0z\" fill=\"none\" />\n        <path d=\"M14 2H6c-1.1 0-1.99.9-1.99 2L4 20c0 1.1.89 2 1.99 2H18c1.1 0 2-.9 2-2V8l-6-6zm2 16H8v-2h8v2zm0-4H8v-2h8v2zm-3-5V3.5L18.5 9H13z\" />\n    </svg>\n);\n\nDescriptionIcon.propTypes = {\n    className: PropTypes.string,\n};\n\nexport default DescriptionIcon;\n","import React from 'react';\nimport { colors } from '@dhis2/ui-core';\nimport PropTypes from 'prop-types';\n\nconst DeleteIcon = ({ className }) => (\n    <svg\n        className={className}\n        xmlns=\"http://www.w3.org/2000/svg\"\n        width=\"18\"\n        height=\"18\"\n        viewBox=\"0 0 24 24\"\n        fill={colors.red500}\n    >\n        <path d=\"M6 19c0 1.1.9 2 2 2h8c1.1 0 2-.9 2-2V7H6v12zM19 4h-3.5l-1-1h-5l-1 1H5v2h14V4z\" />\n        <path d=\"M0 0h24v24H0z\" fill=\"none\" />\n    </svg>\n);\n\nDeleteIcon.propTypes = {\n    className: PropTypes.string,\n};\n\nexport default DeleteIcon;\n","import React, { Fragment } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { colors } from '@dhis2/ui-core';\nimport DescriptionIcon from '../../../icons/Description';\n\nimport DeleteIcon from '../../../icons/Delete';\nimport Line from '../../../widgets/Line';\nimport { itemTypeMap, getItemUrl } from '../../../modules/itemTypes';\nimport { orArray } from '../../../modules/util';\nimport { tRemoveListItemContent } from './actions';\nimport ItemHeader from '../ItemHeader';\nimport classes from './Item.module.css';\n\nconst getItemTitle = item => itemTypeMap[item.type].pluralTitle;\n\nconst getContentItems = item =>\n    orArray(item[itemTypeMap[item.type].propName]).filter(\n        (item, index, array) =>\n            array.findIndex(el => el.id === item.id) === index\n    );\n\nconst ListItem = (props, context) => {\n    const { item, editMode, tRemoveListItemContent } = props;\n    const contentItems = getContentItems(item);\n\n    const getLink = contentItem => {\n        const deleteButton = (\n            <button\n                className={classes.deletebutton}\n                onClick={() => tRemoveListItemContent(item, contentItem)}\n            >\n                <DeleteIcon className={classes.deleteicon} />\n            </button>\n        );\n\n        return (\n            <Fragment>\n                <a\n                    className={classes.link}\n                    style={{ color: colors.grey900 }}\n                    href={getItemUrl(item.type, contentItem, context.d2)}\n                >\n                    {contentItem.name}\n                </a>\n                {editMode ? deleteButton : null}\n            </Fragment>\n        );\n    };\n\n    return (\n        <Fragment>\n            <ItemHeader title={getItemTitle(item)} itemId={item.id} />\n            <Line />\n            <div className=\"dashboard-item-content\">\n                <ul className={classes.list}>\n                    {contentItems.map(contentItem => (\n                        <li className={classes.item} key={contentItem.id}>\n                            <DescriptionIcon className={classes.itemicon} />\n                            {getLink(contentItem)}\n                        </li>\n                    ))}\n                </ul>\n            </div>\n        </Fragment>\n    );\n};\n\nListItem.propTypes = {\n    editMode: PropTypes.bool,\n    item: PropTypes.object,\n    tRemoveListItemContent: PropTypes.func,\n};\n\nListItem.contextTypes = {\n    d2: PropTypes.object,\n};\n\nexport default connect(\n    null,\n    {\n        tRemoveListItemContent,\n    }\n)(ListItem);\n","import {\n    acUpdateDashboardItem,\n    acRemoveDashboardItem,\n} from '../../../actions/editDashboard';\nimport { itemTypeMap } from '../../../modules/itemTypes';\n\nexport const tRemoveListItemContent = (dashboardItem, content) => dispatch => {\n    const listItemType = itemTypeMap[dashboardItem.type].propName;\n\n    const newContent = dashboardItem[listItemType].filter(\n        item => item.id !== content.id\n    );\n\n    if (newContent.length) {\n        dashboardItem[listItemType] = newContent;\n        dispatch(acUpdateDashboardItem(dashboardItem));\n    } else {\n        dispatch(acRemoveDashboardItem(dashboardItem));\n    }\n};\n","import React, { Fragment } from 'react';\nimport { connect } from 'react-redux';\nimport i18n from '@dhis2/d2-i18n';\nimport PropTypes from 'prop-types';\n\nimport Input from '@material-ui/core/Input';\nimport {\n    Parser as RichTextParser,\n    Editor as RichTextEditor,\n} from '@dhis2/d2-ui-rich-text';\n\nimport { acUpdateDashboardItem } from '../../../actions/editDashboard';\nimport { sGetEditDashboardItems } from '../../../reducers/editDashboard';\nimport { sGetDashboardItems } from '../../../reducers/dashboards';\nimport ItemHeader from '../ItemHeader';\nimport Line from '../../../widgets/Line';\n\nconst style = {\n    textDiv: {\n        padding: '10px',\n        whiteSpace: 'pre-line',\n        lineHeight: '20px',\n    },\n    textField: {\n        fontSize: '14px',\n        fontStretch: 'normal',\n        width: '90%',\n        margin: '0 auto',\n        display: 'block',\n        lineHeight: '24px',\n    },\n    container: {\n        marginBottom: '20px',\n        marginTop: '20px',\n    },\n};\n\nconst TextItem = props => {\n    const { item, editMode, text, acUpdateDashboardItem } = props;\n\n    const onChangeText = event => {\n        const updatedItem = {\n            ...item,\n            text: event.target.value,\n        };\n\n        acUpdateDashboardItem(updatedItem);\n    };\n\n    const viewItem = () => {\n        const textDivStyle = Object.assign({}, style.textField, style.textDiv);\n        return (\n            <div className=\"dashboard-item-content\" style={style.container}>\n                <RichTextParser style={textDivStyle}>{text}</RichTextParser>\n            </div>\n        );\n    };\n\n    const editItem = () => {\n        return (\n            <Fragment>\n                <ItemHeader title={i18n.t('Text item')} itemId={item.id} />\n                <Line />\n                <div className=\"dashboard-item-content\">\n                    <RichTextEditor onEdit={onChangeText}>\n                        <Input\n                            value={text}\n                            multiline\n                            fullWidth\n                            style={style.textField}\n                            placeholder={i18n.t('Add text here')}\n                            onChange={onChangeText}\n                        />\n                    </RichTextEditor>\n                </div>\n            </Fragment>\n        );\n    };\n\n    return <Fragment>{editMode ? editItem() : viewItem()}</Fragment>;\n};\n\nconst mapStateToProps = (state, ownProps) => {\n    const items = ownProps.editMode\n        ? sGetEditDashboardItems(state)\n        : sGetDashboardItems(state);\n\n    const item = items.find(item => item.id === ownProps.item.id);\n\n    return {\n        text: item ? item.text : '',\n    };\n};\n\nTextItem.propTypes = {\n    acUpdateDashboardItem: PropTypes.func,\n    editMode: PropTypes.bool,\n    item: PropTypes.object,\n    text: PropTypes.string,\n};\n\nexport default connect(\n    mapStateToProps,\n    {\n        acUpdateDashboardItem,\n    }\n)(TextItem);\n","import React, { Fragment } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport NotInterestedIcon from '@material-ui/icons/NotInterested';\n\nimport { FILTER_ORG_UNIT } from '../../../actions/itemFilters';\nimport { sGetItemFiltersRoot } from '../../../reducers/itemFilters';\nimport ItemHeader from '../ItemHeader';\nimport Line from '../../../widgets/Line';\n\nconst getIframeSrc = (appDetails, item, itemFilters) => {\n    let iframeSrc = `${appDetails.launchUrl}?dashboardItemId=${item.id}`;\n\n    if (\n        itemFilters &&\n        itemFilters[FILTER_ORG_UNIT] &&\n        itemFilters[FILTER_ORG_UNIT].length\n    ) {\n        const ouIds = itemFilters[FILTER_ORG_UNIT].map(\n            ouPath => ouPath.split('/').slice(-1)[0]\n        );\n\n        iframeSrc += `&userOrgUnit=${ouIds.join(',')}`;\n    }\n\n    return iframeSrc;\n};\n\nconst AppItem = ({ item, itemFilters }, context) => {\n    let appDetails;\n\n    const appKey = item.appKey;\n\n    if (appKey) {\n        appDetails = context.d2.system.installedApps.find(\n            app => app.key === appKey\n        );\n    }\n\n    return appDetails && appDetails.name && appDetails.launchUrl ? (\n        <Fragment>\n            <ItemHeader title={appDetails.name} itemId={item.id} />\n            <Line />\n            <iframe\n                title={appDetails.name}\n                src={getIframeSrc(appDetails, item, itemFilters)}\n                className=\"dashboard-item-content\"\n                style={{ border: 'none' }}\n            />\n        </Fragment>\n    ) : (\n        <Fragment>\n            <ItemHeader title={`${appKey} app not found`} />\n            <Line />\n            <div\n                className=\"dashboard-item-content\"\n                style={{\n                    display: 'flex',\n                    justifyContent: 'center',\n                    alignItems: 'center',\n                    height: '90%',\n                }}\n            >\n                <NotInterestedIcon\n                    color=\"disabled\"\n                    disabled\n                    style={{ width: 100, height: 100, align: 'center' }}\n                />\n            </div>\n        </Fragment>\n    );\n};\n\nAppItem.propTypes = {\n    item: PropTypes.object,\n    itemFilters: PropTypes.object,\n};\n\nAppItem.contextTypes = {\n    d2: PropTypes.object,\n};\n\nconst mapStateToProps = state => ({\n    itemFilters: sGetItemFiltersRoot(state),\n});\n\nexport default connect(mapStateToProps)(AppItem);\n","import React, { Fragment } from 'react';\nimport PropTypes from 'prop-types';\nimport i18n from '@dhis2/d2-i18n';\n\nimport { colors } from '@dhis2/ui-core';\nimport ItemHeader from '../ItemHeader';\n\nconst style = {\n    margin: '21px 28px',\n    fontSize: '14px',\n    lineHeight: '18px',\n    color: colors.grey600,\n};\n\nconst SpacerItem = props => {\n    return (\n        <Fragment>\n            <ItemHeader title={i18n.t('Spacer')} itemId={props.item.id} />\n            <p style={style}>\n                {i18n.t(\n                    'Use a spacer to create empty vertical space between other dashboard items.'\n                )}\n            </p>\n        </Fragment>\n    );\n};\n\nSpacerItem.propTypes = {\n    item: PropTypes.object,\n};\n\nexport default SpacerItem;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport VisualizationItem from './VisualizationItem/Item';\nimport MessagesItem from './MessagesItem/Item';\nimport NotSupportedItem from './NotSupportedItem/Item';\nimport ListItem from './ListItem/Item';\nimport TextItem from './TextItem/Item';\nimport AppItem from './AppItem/Item';\nimport SpacerItem from './SpacerItem/Item';\nimport {\n    APP,\n    REPORT_TABLE,\n    CHART,\n    MAP,\n    EVENT_CHART,\n    EVENT_REPORT,\n    MESSAGES,\n    REPORTS,\n    RESOURCES,\n    USERS,\n    TEXT,\n    SPACER,\n} from '../../modules/itemTypes';\nimport { DEFAULT_STATE_ITEM_FILTERS } from '../../reducers/itemFilters';\n\nconst getGridItem = type => {\n    switch (type) {\n        case REPORT_TABLE:\n        case CHART:\n        case MAP:\n        case EVENT_CHART:\n        case EVENT_REPORT:\n            return VisualizationItem;\n        case MESSAGES:\n            return MessagesItem;\n        case REPORTS:\n        case RESOURCES:\n        case USERS:\n            return ListItem;\n        case TEXT:\n            return TextItem;\n        case SPACER:\n            return SpacerItem;\n        case APP:\n            return AppItem;\n        default:\n            return NotSupportedItem;\n    }\n};\n\nexport const Item = props => {\n    const GridItem = getGridItem(props.item.type);\n\n    return (\n        <GridItem\n            item={props.item}\n            editMode={props.editMode}\n            itemFilters={\n                props.editMode ? DEFAULT_STATE_ITEM_FILTERS : props.itemFilters\n            }\n            onToggleItemExpanded={props.onToggleItemExpanded}\n        />\n    );\n};\n\nItem.propTypes = {\n    editMode: PropTypes.bool,\n    item: PropTypes.object,\n    itemFilters: PropTypes.object,\n    onToggleItemExpanded: PropTypes.func,\n};\n","import React from 'react';\nimport { colors } from '@dhis2/ui-core';\nimport PropTypes from 'prop-types';\n\nexport const NoContentMessage = ({ text }) => (\n    <div\n        style={{\n            padding: '50px 10px',\n            textAlign: 'center',\n            fontSize: '15px',\n            fontWeight: 500,\n            color: colors.grey600,\n        }}\n    >\n        {text}\n    </div>\n);\n\nNoContentMessage.propTypes = {\n    text: PropTypes.string,\n};\n\nexport default NoContentMessage;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport debounce from 'lodash/debounce';\nimport pick from 'lodash/pick';\n\nconst defaultDebounceMs = 100;\nconst defaultBufferFactor = 0.25;\n\nclass ProgressiveLoadingContainer extends Component {\n    static propTypes = {\n        children: PropTypes.node.isRequired,\n        bufferFactor: PropTypes.number,\n        className: PropTypes.string,\n        debounceMs: PropTypes.number,\n        style: PropTypes.object,\n    };\n    static defaultProps = {\n        debounceMs: defaultDebounceMs,\n        bufferFactor: defaultBufferFactor,\n    };\n\n    state = {\n        shouldLoad: false,\n    };\n    containerRef = null;\n    shouldLoadHandler = null;\n\n    checkShouldLoad() {\n        const bufferPx = this.props.bufferFactor * window.innerHeight;\n\n        if (!this.containerRef) {\n            return;\n        }\n\n        const rect = this.containerRef.getBoundingClientRect();\n        if (\n            rect.bottom > -bufferPx &&\n            rect.top < window.innerHeight + bufferPx\n        ) {\n            this.setState({\n                shouldLoad: true,\n            });\n\n            this.removeHandler();\n        }\n    }\n\n    registerHandler() {\n        this.shouldLoadHandler = debounce(\n            () => this.checkShouldLoad(),\n            this.props.debounceMs\n        );\n\n        window.addEventListener('scroll', this.shouldLoadHandler);\n    }\n    removeHandler() {\n        window.removeEventListener('scroll', this.shouldLoadHandler);\n    }\n\n    componentDidMount() {\n        this.registerHandler();\n        this.checkShouldLoad();\n    }\n\n    componentWillUnmount() {\n        this.removeHandler();\n    }\n\n    render() {\n        const { children, className, style, ...props } = this.props;\n        const { shouldLoad } = this.state;\n\n        const eventProps = pick(props, [\n            'onMouseDown',\n            'onTouchStart',\n            'onMouseUp',\n            'onTouchEnd',\n        ]);\n\n        return (\n            <div\n                ref={ref => (this.containerRef = ref)}\n                style={style}\n                className={className}\n                {...eventProps}\n            >\n                {shouldLoad && children}\n            </div>\n        );\n    }\n}\n\nexport default ProgressiveLoadingContainer;\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport i18n from '@dhis2/d2-i18n';\nimport ReactGridLayout from 'react-grid-layout';\nimport { CircularLoader, ScreenCover } from '@dhis2/ui-core';\n\nimport {\n    acUpdateDashboardLayout,\n    acRemoveDashboardItem,\n} from '../../actions/editDashboard';\nimport { Item } from '../Item/Item';\nimport { resize as pluginResize } from '../Item/VisualizationItem/plugin';\nimport { isVisualizationType } from '../../modules/itemTypes';\nimport {\n    GRID_ROW_HEIGHT,\n    GRID_COMPACT_TYPE,\n    ITEM_MIN_HEIGHT,\n    MARGIN,\n    getGridColumns,\n    hasShape,\n    onItemResize,\n} from './gridUtil';\nimport { orArray } from '../../modules/util';\n\nimport NoContentMessage from '../../widgets/NoContentMessage';\n\nimport 'react-grid-layout/css/styles.css';\nimport 'react-resizable/css/styles.css';\n\nimport './ItemGrid.css';\nimport { sGetSelectedId, sGetSelectedIsLoading } from '../../reducers/selected';\nimport {\n    sGetEditDashboardRoot,\n    sGetEditDashboardItems,\n} from '../../reducers/editDashboard';\nimport {\n    sGetDashboardById,\n    sGetDashboardItems,\n} from '../../reducers/dashboards';\nimport ProgressiveLoadingContainer from '../Item/ProgressiveLoadingContainer';\n\n// Component\n\nconst EXPANDED_HEIGHT = 17;\n\nexport class ItemGrid extends Component {\n    state = {\n        expandedItems: {},\n    };\n\n    onToggleItemExpanded = clickedId => {\n        const isExpanded =\n            typeof this.state.expandedItems[clickedId] === 'boolean'\n                ? this.state.expandedItems[clickedId]\n                : false;\n\n        const expandedItems = { ...this.state.expandedItems };\n        expandedItems[clickedId] = !isExpanded;\n        this.setState({ expandedItems });\n    };\n\n    onRemoveItem = clickedId => {\n        this.props.acRemoveDashboardItem(clickedId);\n    };\n\n    componentWillReceiveProps(nextProps) {\n        if (nextProps.edit) {\n            this.setState({ expandedItems: {} });\n        }\n    }\n\n    onLayoutChange = newLayout => {\n        if (this.props.edit) {\n            this.props.acUpdateDashboardLayout(newLayout);\n        }\n    };\n\n    onResizeStop = (layout, oldItem, newItem) => {\n        onItemResize(newItem.i);\n\n        const dashboardItem = this.props.dashboardItems.find(\n            item => item.id === newItem.i\n        );\n\n        // call resize on the item component if it's a plugin type\n        if (dashboardItem && isVisualizationType(dashboardItem)) {\n            pluginResize(dashboardItem);\n        }\n    };\n\n    onRemoveItemWrapper = id => () => this.onRemoveItem(id);\n\n    render() {\n        const { edit, isLoading, dashboardItems } = this.props;\n\n        if (!isLoading && !dashboardItems.length) {\n            return (\n                <NoContentMessage\n                    text={i18n.t('There are no items on this dashboard')}\n                />\n            );\n        }\n\n        const items = dashboardItems.map(item => {\n            const expandedItem = this.state.expandedItems[item.id];\n            const hProp = { h: item.h };\n\n            if (expandedItem && expandedItem === true) {\n                hProp.h = item.h + EXPANDED_HEIGHT;\n            }\n\n            return Object.assign({}, item, hProp, {\n                i: item.id,\n                minH: ITEM_MIN_HEIGHT,\n            });\n        });\n\n        return (\n            <div className=\"grid-wrapper\">\n                {isLoading ? (\n                    <ScreenCover>\n                        <CircularLoader />\n                    </ScreenCover>\n                ) : null}\n                <ReactGridLayout\n                    onLayoutChange={this.onLayoutChange}\n                    onResizeStop={this.onResizeStop}\n                    className=\"layout\"\n                    layout={items}\n                    margin={MARGIN}\n                    cols={getGridColumns()}\n                    rowHeight={GRID_ROW_HEIGHT}\n                    width={window.innerWidth}\n                    compactType={GRID_COMPACT_TYPE}\n                    isDraggable={edit}\n                    isResizable={edit}\n                    draggableCancel=\"input,textarea\"\n                >\n                    {items.map(item => {\n                        const itemClassNames = [\n                            item.type,\n                            edit ? 'edit' : 'view',\n                        ].join(' ');\n\n                        return (\n                            <ProgressiveLoadingContainer\n                                key={item.i}\n                                className={itemClassNames}\n                            >\n                                <Item\n                                    item={item}\n                                    editMode={edit}\n                                    onToggleItemExpanded={\n                                        this.onToggleItemExpanded\n                                    }\n                                />\n                            </ProgressiveLoadingContainer>\n                        );\n                    })}\n                </ReactGridLayout>\n            </div>\n        );\n    }\n}\n\nItemGrid.propTypes = {\n    acRemoveDashboardItem: PropTypes.func,\n    acUpdateDashboardLayout: PropTypes.func,\n    dashboardItems: PropTypes.array,\n    edit: PropTypes.bool,\n    isLoading: PropTypes.bool,\n};\n\nItemGrid.defaultProps = {\n    dashboardItems: [],\n};\n\n// Container\n\nconst mapStateToProps = (state, ownProps) => {\n    const selectedDashboard = ownProps.edit\n        ? sGetEditDashboardRoot(state)\n        : sGetDashboardById(state, sGetSelectedId(state));\n\n    const dashboardItems = ownProps.edit\n        ? sGetEditDashboardItems(state)\n        : sGetDashboardItems(state);\n\n    return {\n        isLoading: sGetSelectedIsLoading(state) || !selectedDashboard,\n        dashboardItems,\n    };\n};\n\nconst mapDispatchToProps = {\n    acUpdateDashboardLayout,\n    acRemoveDashboardItem,\n};\n\nconst mergeProps = (stateProps, dispatchProps, ownProps) => {\n    const validItems = orArray(stateProps.dashboardItems).filter(hasShape);\n\n    return {\n        ...dispatchProps,\n        edit: ownProps.edit,\n        isLoading: stateProps.isLoading,\n        dashboardItems: validItems,\n        onItemResize,\n    };\n};\n\nexport default connect(\n    mapStateToProps,\n    mapDispatchToProps,\n    mergeProps\n)(ItemGrid);\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nimport i18n from '@dhis2/d2-i18n';\n\nimport { colors } from '@dhis2/ui-core';\n\nconst styles = {\n    badgeContainer: {\n        margin: '2px',\n        padding: '0 16px',\n        borderRadius: '4px',\n        color: colors.white,\n        backgroundColor: '#212934',\n        height: 36,\n        display: 'flex',\n        alignItems: 'center',\n    },\n    badge: {\n        fontSize: '13px',\n        cursor: 'pointer',\n        whiteSpace: 'nowrap',\n    },\n    badgeRemove: {\n        fontSize: '12px',\n        textDecoration: 'underline',\n        marginLeft: '24px',\n        cursor: 'pointer',\n    },\n};\n\nclass FilterBadge extends Component {\n    onClick = id => () => this.props.onClick(id);\n    onRemove = id => () => this.props.onRemove(id);\n\n    render() {\n        const { data } = this.props;\n\n        return (\n            <div style={styles.badgeContainer}>\n                <span style={styles.badge} onClick={this.onClick(data.id)}>\n                    {`${data.name}: ${\n                        data.values.length > 1\n                            ? i18n.t('{{count}} selected', {\n                                  count: data.values.length,\n                              })\n                            : data.values[0].name\n                    }`}\n                </span>\n                <span\n                    style={styles.badgeRemove}\n                    onClick={this.onRemove(data.id)}\n                >\n                    {i18n.t('Remove')}\n                </span>\n            </div>\n        );\n    }\n}\n\nFilterBadge.propTypes = {\n    data: PropTypes.object.isRequired,\n    onClick: PropTypes.func.isRequired,\n    onRemove: PropTypes.func.isRequired,\n};\n\nFilterBadge.defaultProps = {\n    onClick: Function.prototype,\n    onRemove: Function.prototype,\n};\n\nexport default FilterBadge;\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { createSelector } from 'reselect';\nimport { withStyles } from '@material-ui/core/styles';\n\nimport { sGetDimensions } from '../../reducers/dimensions';\nimport { sGetItemFiltersRoot } from '../../reducers/itemFilters';\nimport { sGetControlBarUserRows } from '../../reducers/controlBar';\nimport { getTopOffset } from '../ControlBar/controlBarDimensions';\nimport { acRemoveItemFilter } from '../../actions/itemFilters';\nimport { acRemoveEditItemFilter } from '../../actions/editItemFilters';\nimport { acSetActiveModalDimension } from '../../actions/activeModalDimension';\n\nimport FilterBadge from './FilterBadge';\n\nconst styles = {\n    bar: {\n        position: 'sticky',\n        zIndex: 7,\n        padding: '8px 0',\n        display: 'flex',\n        justifyContent: 'center',\n        flexWrap: 'wrap',\n    },\n};\n\nexport class FilterBar extends Component {\n    onBadgeRemove = id => {\n        this.props.removeItemFilter(id);\n        this.props.removeEditItemFilter(id);\n    };\n\n    onBadgeClick = id => {\n        this.props.setActiveModalDimension({\n            id,\n            name: this.props.filters.find(item => item.id === id).name,\n        });\n    };\n\n    render() {\n        const { filters, userRows, classes } = this.props;\n        const top = getTopOffset(userRows) + 10;\n\n        return filters.length ? (\n            <div className={classes.bar} style={{ top }}>\n                {filters.map(filter => (\n                    <FilterBadge\n                        key={filter.id}\n                        data={filter}\n                        onClick={this.onBadgeClick}\n                        onRemove={this.onBadgeRemove}\n                    />\n                ))}\n            </div>\n        ) : null;\n    }\n}\n\nFilterBar.propTypes = {\n    filters: PropTypes.array.isRequired,\n    removeEditItemFilter: PropTypes.func.isRequired,\n    removeItemFilter: PropTypes.func.isRequired,\n    classes: PropTypes.object,\n    setActiveModalDimension: PropTypes.func,\n    userRows: PropTypes.number,\n};\n\nFilterBar.defaultProps = {\n    filters: [],\n    removeItemFIlter: Function.prototype,\n    removeEditItemFilter: Function.prototype,\n};\n\n// simplify the filters structure to:\n// [{ id: 'pe', name: 'Period', values: [{ id: 2019: name: '2019' }, {id: 'LAST_MONTH', name: 'Last month' }]}, ...]\nconst filtersSelector = createSelector(\n    [sGetItemFiltersRoot, sGetDimensions],\n    (filters, dimensions) =>\n        Object.keys(filters).reduce((arr, id) => {\n            arr.push({\n                id: id,\n                name: dimensions.find(dimension => dimension.id === id).name,\n                values: filters[id].map(value => ({\n                    id: value.id,\n                    name: value.displayName || value.name,\n                })),\n            });\n\n            return arr;\n        }, [])\n);\n\nconst mapStateToProps = state => ({\n    filters: filtersSelector(state),\n    userRows: sGetControlBarUserRows(state),\n});\n\nexport default connect(\n    mapStateToProps,\n    {\n        setActiveModalDimension: acSetActiveModalDimension,\n        removeItemFilter: acRemoveItemFilter,\n        removeEditItemFilter: acRemoveEditItemFilter,\n    }\n)(withStyles(styles)(FilterBar));\n","import React, { Fragment } from 'react';\nimport PropTypes from 'prop-types';\nimport TitleBar from '../TitleBar/TitleBar';\nimport ItemGrid from '../ItemGrid/ItemGrid';\nimport FilterBar from '../FilterBar/FilterBar';\n\nexport const DashboardContent = props => (\n    <Fragment>\n        <TitleBar edit={props.editMode} />\n        <FilterBar />\n        <ItemGrid edit={props.editMode} />\n    </Fragment>\n);\n\nDashboardContent.propTypes = {\n    editMode: PropTypes.bool,\n};\n\nexport default DashboardContent;\n","import React, { Fragment } from 'react';\nimport { connect } from 'react-redux';\nimport isEmpty from 'lodash/isEmpty';\nimport i18n from '@dhis2/d2-i18n';\nimport PropTypes from 'prop-types';\n\nimport {\n    sGetAllDashboards,\n    sDashboardsIsFetching,\n} from '../../reducers/dashboards';\nimport { sGetSelectedId } from '../../reducers/selected';\nimport DashboardsBar from '../ControlBar/DashboardsBar';\nimport DashboardVerticalOffset from './DashboardVerticalOffset';\nimport DashboardContent from './DashboardContent';\nimport NoContentMessage from '../../widgets/NoContentMessage';\n\nexport const Content = ({ hasDashboardContent, dashboardsIsEmpty }) => {\n    const msg = dashboardsIsEmpty\n        ? i18n.t(\n              'No dashboards found. Use the + button to create a new dashboard.'\n          )\n        : i18n.t('Requested dashboard not found');\n\n    return hasDashboardContent ? (\n        <DashboardContent editMode={false} />\n    ) : (\n        <NoContentMessage text={msg} />\n    );\n};\n\nContent.propTypes = {\n    dashboardsIsEmpty: PropTypes.bool,\n    hasDashboardContent: PropTypes.bool,\n};\n\nexport const ViewDashboard = ({ id, dashboardsIsEmpty, dashboardsLoaded }) => {\n    const hasDashboardContent = id && !dashboardsIsEmpty;\n    const contentNotReady = !dashboardsLoaded || id === null;\n\n    return (\n        <Fragment>\n            <DashboardsBar />\n            <DashboardVerticalOffset />\n            <div className=\"dashboard-wrapper\">\n                {contentNotReady ? null : (\n                    <Content\n                        hasDashboardContent={hasDashboardContent}\n                        dashboardsIsEmpty={dashboardsIsEmpty}\n                    />\n                )}\n            </div>\n        </Fragment>\n    );\n};\n\nViewDashboard.propTypes = {\n    dashboardsIsEmpty: PropTypes.bool,\n    dashboardsLoaded: PropTypes.bool,\n    id: PropTypes.string,\n};\n\nconst mapStateToProps = state => {\n    const dashboards = sGetAllDashboards(state);\n\n    return {\n        id: sGetSelectedId(state),\n        dashboardsIsEmpty: isEmpty(dashboards),\n        dashboardsLoaded: !sDashboardsIsFetching(state),\n    };\n};\n\nexport default connect(mapStateToProps)(ViewDashboard);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport i18n from '@dhis2/d2-i18n';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport { Button } from '@dhis2/ui-core';\n\nexport const ConfirmDeleteDialog = ({\n    dashboardName,\n    onDeleteConfirmed,\n    onContinueEditing,\n    open,\n}) => {\n    const actions = [\n        <Button key=\"cancel\" secondary onClick={onContinueEditing}>\n            {i18n.t('Cancel')}\n        </Button>,\n        <Button key=\"delete\" destructive onClick={onDeleteConfirmed}>\n            {i18n.t('Delete')}\n        </Button>,\n    ];\n\n    return (\n        <Dialog open={open} onClose={onContinueEditing}>\n            <DialogTitle style={{ fontSize: '1.25rem', fontWeight: '450' }}>\n                {i18n.t('Delete dashboard')}\n            </DialogTitle>\n            <DialogContent>\n                <DialogContentText style={{ fontSize: '0.875rem' }}>\n                    {i18n.t(\n                        'Deleting dashboard \"{{ dashboardName }}\" will remove it for all users. This action cannot be undone. Are you sure you want to permanently delete this dashboard?',\n                        { dashboardName }\n                    )}\n                </DialogContentText>\n            </DialogContent>\n            <DialogActions>{actions}</DialogActions>\n        </Dialog>\n    );\n};\n\nConfirmDeleteDialog.propTypes = {\n    dashboardName: PropTypes.string,\n    open: PropTypes.bool,\n    onContinueEditing: PropTypes.func,\n    onDeleteConfirmed: PropTypes.func,\n};\n\nexport default ConfirmDeleteDialog;\n","import React, { Component, Fragment } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { Redirect } from 'react-router-dom';\nimport i18n from '@dhis2/d2-i18n';\nimport ControlBar from './ControlBar';\nimport TranslationDialog from '@dhis2/d2-ui-translation-dialog';\nimport { Button } from '@dhis2/ui-core';\n\nimport ConfirmDeleteDialog from './ConfirmDeleteDialog';\nimport {\n    tSaveDashboard,\n    acClearEditDashboard,\n} from '../../actions/editDashboard';\nimport {\n    tDeleteDashboard,\n    acSetDashboardDisplayName,\n} from '../../actions/dashboards';\nimport {\n    sGetEditDashboardRoot,\n    sGetIsNewDashboard,\n} from '../../reducers/editDashboard';\nimport {\n    CONTROL_BAR_ROW_HEIGHT,\n    MIN_ROW_COUNT,\n    getControlBarHeight,\n} from './controlBarDimensions';\nimport { apiFetchDashboard } from '../../api/dashboards';\n\nimport classes from './styles/DashboardsBar.module.css';\n\nconst buttonBarStyle = {\n    height: CONTROL_BAR_ROW_HEIGHT,\n    paddingTop: '15px',\n    marginLeft: '15px',\n    marginRight: '15px',\n};\n\nexport class EditBar extends Component {\n    state = {\n        translationDialogIsOpen: false,\n        dashboardModel: undefined,\n        confirmDeleteDialogOpen: false,\n        redirectUrl: undefined,\n    };\n\n    onConfirmDelete = () => {\n        this.setState({ confirmDeleteDialogOpen: true });\n    };\n\n    onSave = () => {\n        this.props.onSave().then(newId => {\n            this.setState({ redirectUrl: `/${newId}` });\n        });\n    };\n\n    onDiscard = () => {\n        this.props.onDiscardChanges();\n        const redirectUrl = this.props.dashboardId\n            ? `/${this.props.dashboardId}`\n            : '/';\n        this.setState({ redirectUrl });\n    };\n\n    onContinueEditing = () => {\n        this.setState({ confirmDeleteDialogOpen: false });\n    };\n\n    onDeleteConfirmed = () => {\n        this.setState({ confirmDeleteDialogOpen: false });\n        this.props.onDelete(this.props.dashboardId).then(() => {\n            this.setState({ redirectUrl: '/' });\n        });\n    };\n\n    onTranslationsSaved = async translations => {\n        if (translations && translations.length) {\n            const dbLocale = await this.context.d2.currentUser.userSettings.get(\n                'keyDbLocale'\n            );\n\n            const translation = translations.find(\n                t => t.locale === dbLocale && t.property === 'NAME'\n            );\n\n            if (translation && translation.value) {\n                this.props.onTranslate(\n                    this.props.dashboardId,\n                    translation.value\n                );\n            }\n        }\n    };\n\n    fetchDashboardModel = () => {\n        if (this.props.dashboardId && !this.state.dashboardModel) {\n            apiFetchDashboard(this.props.dashboardId).then(dashboardModel =>\n                this.setState({ dashboardModel })\n            );\n        }\n    };\n\n    componentDidMount() {\n        this.fetchDashboardModel();\n    }\n\n    componentDidUpdate() {\n        this.fetchDashboardModel();\n    }\n\n    toggleTranslationDialog = () => {\n        this.setState({\n            translationDialogIsOpen: !this.state.translationDialogIsOpen,\n        });\n    };\n\n    confirmDeleteDialog = () =>\n        this.props.deleteAccess && this.props.dashboardId ? (\n            <ConfirmDeleteDialog\n                dashboardName={this.props.dashboardName}\n                onDeleteConfirmed={this.onDeleteConfirmed}\n                onContinueEditing={this.onContinueEditing}\n                open={this.state.confirmDeleteDialogOpen}\n            />\n        ) : null;\n\n    translationDialog = () =>\n        this.state.dashboardModel && this.state.dashboardModel.id ? (\n            <TranslationDialog\n                className=\"translation-dialog\"\n                d2={this.context.d2}\n                open={this.state.translationDialogIsOpen}\n                onRequestClose={this.toggleTranslationDialog}\n                objectToTranslate={this.state.dashboardModel}\n                fieldsToTranslate={['name', 'description']}\n                // TODO handle messages in snackbar\n                onTranslationSaved={this.onTranslationsSaved}\n                onTranslationError={err =>\n                    console.log('translation update error', err)\n                }\n            />\n        ) : null;\n\n    render() {\n        if (this.state.redirectUrl) {\n            return <Redirect to={this.state.redirectUrl} />;\n        }\n\n        const { dashboardId, deleteAccess, updateAccess } = this.props;\n        const controlBarHeight = getControlBarHeight(MIN_ROW_COUNT);\n\n        const discardBtnText = updateAccess\n            ? i18n.t('Exit without saving')\n            : i18n.t('Go to dashboards');\n\n        return (\n            <Fragment>\n                <ControlBar height={controlBarHeight} editMode={true}>\n                    <div style={buttonBarStyle}>\n                        {updateAccess ? (\n                            <div className={classes.leftControls}>\n                                <span style={{ marginRight: '15px' }}>\n                                    <Button primary onClick={this.onSave}>\n                                        {i18n.t('Save changes')}\n                                    </Button>\n                                </span>\n\n                                {dashboardId ? (\n                                    <span style={{ marginRight: '15px' }}>\n                                        <Button\n                                            onClick={\n                                                this.toggleTranslationDialog\n                                            }\n                                        >\n                                            {i18n.t('Translate')}\n                                        </Button>\n                                    </span>\n                                ) : null}\n                                {dashboardId && deleteAccess ? (\n                                    <Button onClick={this.onConfirmDelete}>\n                                        {i18n.t('Delete')}\n                                    </Button>\n                                ) : null}\n                            </div>\n                        ) : null}\n\n                        <div className={classes.rightControls}>\n                            <Button secondary onClick={this.onDiscard}>\n                                {discardBtnText}\n                            </Button>\n                        </div>\n                    </div>\n                </ControlBar>\n                {this.translationDialog()}\n                {this.confirmDeleteDialog()}\n            </Fragment>\n        );\n    }\n}\n\nEditBar.propTypes = {\n    dashboardId: PropTypes.string,\n    dashboardName: PropTypes.string,\n    deleteAccess: PropTypes.bool,\n    updateAccess: PropTypes.bool,\n    onDelete: PropTypes.func,\n    onDiscardChanges: PropTypes.func,\n    onSave: PropTypes.func,\n    onTranslate: PropTypes.func,\n};\n\nEditBar.contextTypes = {\n    d2: PropTypes.object,\n};\n\nconst mapStateToProps = state => {\n    const dashboard = sGetEditDashboardRoot(state);\n\n    let deleteAccess;\n    let updateAccess;\n    if (sGetIsNewDashboard(state)) {\n        deleteAccess = true;\n        updateAccess = true;\n    } else {\n        updateAccess = dashboard.access ? dashboard.access.update : false;\n        deleteAccess = dashboard.access ? dashboard.access.delete : false;\n    }\n\n    return {\n        dashboardId: dashboard.id,\n        dashboardName: dashboard.name,\n        deleteAccess,\n        updateAccess,\n    };\n};\n\nconst mapDispatchToProps = dispatch => ({\n    onSave: () => dispatch(tSaveDashboard()).then(id => id),\n    onDelete: id => dispatch(tDeleteDashboard(id)),\n    onDiscardChanges: () => dispatch(acClearEditDashboard()),\n    onTranslate: (id, value) => dispatch(acSetDashboardDisplayName(id, value)),\n});\n\nexport default connect(\n    mapStateToProps,\n    mapDispatchToProps\n)(EditBar);\n","import React, { Fragment, Component } from 'react';\nimport { connect } from 'react-redux';\nimport i18n from '@dhis2/d2-i18n';\nimport PropTypes from 'prop-types';\n\nimport { acSetEditDashboard } from '../../actions/editDashboard';\nimport { sGetSelectedId } from '../../reducers/selected';\nimport {\n    sGetDashboardById,\n    sGetDashboardItems,\n    sDashboardsIsFetching,\n} from '../../reducers/dashboards';\nimport DashboardVerticalOffset from './DashboardVerticalOffset';\nimport DashboardContent from './DashboardContent';\nimport EditBar from '../ControlBar/EditBar';\nimport NoContentMessage from '../../widgets/NoContentMessage';\n\nexport const Content = ({ updateAccess }) => {\n    return updateAccess ? (\n        <DashboardContent editMode={true} />\n    ) : (\n        <NoContentMessage text={i18n.t('No access')} />\n    );\n};\n\nContent.propTypes = {\n    updateAccess: PropTypes.bool,\n};\nexport class EditDashboard extends Component {\n    state = {\n        initialized: false,\n    };\n\n    initEditDashboard = () => {\n        if (this.props.dashboard) {\n            this.setState({ initialized: true });\n            this.props.setEditDashboard(this.props.dashboard, this.props.items);\n        }\n    };\n\n    componentDidMount() {\n        this.initEditDashboard();\n    }\n\n    componentDidUpdate() {\n        if (!this.state.initialized) {\n            this.initEditDashboard();\n        }\n    }\n\n    getDashboardContent = () => {\n        const contentNotReady =\n            !this.props.dashboardsLoaded || this.props.id === null;\n\n        return (\n            <div className=\"dashboard-wrapper\">\n                {contentNotReady ? null : (\n                    <Content updateAccess={this.props.updateAccess} />\n                )}\n            </div>\n        );\n    };\n\n    render() {\n        return (\n            <Fragment>\n                <EditBar />\n                <DashboardVerticalOffset editMode={true} />\n                {this.getDashboardContent()}\n            </Fragment>\n        );\n    }\n}\n\nEditDashboard.propTypes = {\n    dashboard: PropTypes.object,\n    dashboardsLoaded: PropTypes.bool,\n    id: PropTypes.string,\n    items: PropTypes.array,\n    setEditDashboard: PropTypes.func,\n    updateAccess: PropTypes.bool,\n};\n\nconst mapStateToProps = state => {\n    const id = sGetSelectedId(state);\n    const dashboard = id ? sGetDashboardById(state, id) : null;\n\n    const updateAccess =\n        dashboard && dashboard.access ? dashboard.access.update : false;\n\n    return {\n        dashboard,\n        id,\n        updateAccess,\n        items: sGetDashboardItems(state),\n        dashboardsLoaded: !sDashboardsIsFetching(state),\n    };\n};\n\nexport default connect(\n    mapStateToProps,\n    {\n        setEditDashboard: acSetEditDashboard,\n    }\n)(EditDashboard);\n","import React, { Component, Fragment } from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\n\nimport { acSetEditNewDashboard } from '../../actions/editDashboard';\nimport DashboardVerticalOffset from './DashboardVerticalOffset';\nimport EditBar from '../ControlBar/EditBar';\nimport DashboardContent from './DashboardContent';\n\nclass NewDashboard extends Component {\n    componentDidMount() {\n        this.props.setNewDashboard();\n    }\n\n    render() {\n        return (\n            <Fragment>\n                <EditBar />\n                <DashboardVerticalOffset editMode={true} />\n                <div className=\"dashboard-wrapper\">\n                    <DashboardContent editMode={true} />\n                </div>\n            </Fragment>\n        );\n    }\n}\n\nNewDashboard.propTypes = {\n    setNewDashboard: PropTypes.func,\n};\n\nexport default connect(\n    null,\n    {\n        setNewDashboard: acSetEditNewDashboard,\n    }\n)(NewDashboard);\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\n\nimport { tSelectDashboard } from '../../actions/dashboards';\nimport { sDashboardsIsFetching } from '../../reducers/dashboards';\nimport { EDIT, NEW } from './dashboardModes';\nimport ViewDashboard from './ViewDashboard';\nimport EditDashboard from './EditDashboard';\nimport NewDashboard from './NewDashboard';\n\nclass Dashboard extends Component {\n    setDashboard = () => {\n        if (this.props.dashboardsLoaded) {\n            const id = this.props.match.params.dashboardId || null;\n\n            this.props.selectDashboard(id);\n\n            this.scrollToTop();\n        }\n    };\n\n    scrollToTop = () => {\n        window.scrollTo(0, 0);\n    };\n\n    componentDidMount() {\n        this.setDashboard();\n    }\n\n    componentDidUpdate() {\n        this.setDashboard();\n    }\n\n    render() {\n        switch (this.props.mode) {\n            case EDIT:\n                return <EditDashboard />;\n            case NEW:\n                return <NewDashboard />;\n            default:\n                return <ViewDashboard />;\n        }\n    }\n}\n\nDashboard.propTypes = {\n    dashboardsLoaded: PropTypes.bool,\n    match: PropTypes.object,\n    mode: PropTypes.string,\n    selectDashboard: PropTypes.func,\n};\n\nconst mapStateToProps = state => {\n    return { dashboardsLoaded: !sDashboardsIsFetching(state) };\n};\n\nexport default connect(\n    mapStateToProps,\n    {\n        selectDashboard: tSelectDashboard,\n    }\n)(Dashboard);\n","export const EDIT = 'edit';\nexport const NEW = 'new';\nexport const VIEW = 'view';\n","import React, { Component } from 'react';\nimport { HashRouter as Router, Route, Switch } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport i18n from '@dhis2/d2-i18n';\nimport { HeaderBar } from '@dhis2/ui-widgets';\nimport { CssVariables } from '@dhis2/ui-core';\n\nimport { EDIT, VIEW, NEW } from './Dashboard/dashboardModes';\nimport { acReceivedUser } from '../actions/user';\nimport { tFetchDashboards } from '../actions/dashboards';\nimport { tSetControlBarRows } from '../actions/controlBar';\nimport { tSetDimensions } from '../actions/dimensions';\nimport Dashboard from './Dashboard/Dashboard';\nimport SnackbarMessage from './SnackbarMessage/SnackbarMessage';\n\nimport 'typeface-roboto';\nimport './App.css';\n\nexport class App extends Component {\n    componentDidMount() {\n        this.props.setCurrentUser(this.props.d2.currentUser);\n        this.props.fetchDashboards();\n        this.props.setControlBarRows();\n        this.props.setDimensions(this.props.d2);\n    }\n\n    getChildContext() {\n        return { baseUrl: this.props.baseUrl, i18n, d2: this.props.d2 };\n    }\n\n    render() {\n        return (\n            <>\n                <CssVariables colors spacers />\n                <div className=\"app-wrapper\">\n                    <div className=\"dashboard-header-bar\">\n                        <HeaderBar appName={i18n.t('Dashboard')} />\n                    </div>\n                    <Router>\n                        <Switch>\n                            <Route\n                                exact\n                                path=\"/\"\n                                render={props => (\n                                    <Dashboard {...props} mode={VIEW} />\n                                )}\n                            />\n                            <Route\n                                exact\n                                path=\"/new\"\n                                render={props => (\n                                    <Dashboard {...props} mode={NEW} />\n                                )}\n                            />\n                            <Route\n                                exact\n                                path=\"/:dashboardId\"\n                                render={props => (\n                                    <Dashboard {...props} mode={VIEW} />\n                                )}\n                            />\n                            <Route\n                                exact\n                                path=\"/:dashboardId/edit\"\n                                render={props => (\n                                    <Dashboard {...props} mode={EDIT} />\n                                )}\n                            />\n                        </Switch>\n                    </Router>\n                    <SnackbarMessage />\n                </div>\n            </>\n        );\n    }\n}\n\nApp.propTypes = {\n    fetchDashboards: PropTypes.func.isRequired,\n    setControlBarRows: PropTypes.func.isRequired,\n    setCurrentUser: PropTypes.func.isRequired,\n    setDimensions: PropTypes.func.isRequired,\n    baseUrl: PropTypes.string,\n    d2: PropTypes.object,\n};\n\nApp.childContextTypes = {\n    baseUrl: PropTypes.string,\n    i18n: PropTypes.object,\n    d2: PropTypes.object,\n};\n\nconst mapDispatchToProps = dispatch => {\n    return {\n        setCurrentUser: currentUser => dispatch(acReceivedUser(currentUser)),\n        fetchDashboards: () => dispatch(tFetchDashboards()),\n        setControlBarRows: () => dispatch(tSetControlBarRows()),\n        setDimensions: d2 => dispatch(tSetDimensions(d2)),\n    };\n};\n\nexport default connect(\n    null,\n    mapDispatchToProps\n)(App);\n","import { RECEIVED_USER } from '../reducers/user';\n\nexport const acReceivedUser = value => ({\n    type: RECEIVED_USER,\n    value,\n});\n","//------------------------------------------------------------------------------\n// <auto-generated>\n// This code was generated by d2-i18n-generate.\n//\n// Changes to this file may cause incorrect behavior and will be lost if\n// the code is regenerated.\n// </auto-generated>\n//------------------------------------------------------------------------------\nimport i18n from '@dhis2/d2-i18n';\nimport moment from 'moment';\nimport 'moment/locale/ar';\nimport 'moment/locale/es';\nimport 'moment/locale/fr';\nimport 'moment/locale/lo';\nimport 'moment/locale/pt';\nimport 'moment/locale/ru';\nimport 'moment/locale/sv';\nimport 'moment/locale/tg';\nimport 'moment/locale/uk';\nimport 'moment/locale/ur';\nimport 'moment/locale/vi';\nimport 'moment/locale/zh-cn';\n\nimport arTranslations from './ar/translations.json';\nimport daTranslations from './da/translations.json';\nimport enTranslations from './en/translations.json';\nimport esTranslations from './es/translations.json';\nimport frTranslations from './fr/translations.json';\nimport idTranslations from './id/translations.json';\nimport kmTranslations from './km/translations.json';\nimport loTranslations from './lo/translations.json';\nimport myTranslations from './my/translations.json';\nimport prsTranslations from './prs/translations.json';\nimport psTranslations from './ps/translations.json';\nimport ptTranslations from './pt/translations.json';\nimport pt_BRTranslations from './pt_BR/translations.json';\nimport ruTranslations from './ru/translations.json';\nimport svTranslations from './sv/translations.json';\nimport tetTranslations from './tet/translations.json';\nimport tgTranslations from './tg/translations.json';\nimport ukTranslations from './uk/translations.json';\nimport urTranslations from './ur/translations.json';\nimport viTranslations from './vi/translations.json';\nimport zhTranslations from './zh/translations.json';\nimport zh_CNTranslations from './zh_CN/translations.json';\n\nconst namespace = 'dashboards-app';\nmoment.locale('en');\n\ni18n.addResources('ar', namespace, arTranslations);\ni18n.addResources('da', namespace, daTranslations);\ni18n.addResources('en', namespace, enTranslations);\ni18n.addResources('es', namespace, esTranslations);\ni18n.addResources('fr', namespace, frTranslations);\ni18n.addResources('id', namespace, idTranslations);\ni18n.addResources('km', namespace, kmTranslations);\ni18n.addResources('lo', namespace, loTranslations);\ni18n.addResources('my', namespace, myTranslations);\ni18n.addResources('prs', namespace, prsTranslations);\ni18n.addResources('ps', namespace, psTranslations);\ni18n.addResources('pt', namespace, ptTranslations);\ni18n.addResources('pt_BR', namespace, pt_BRTranslations);\ni18n.addResources('ru', namespace, ruTranslations);\ni18n.addResources('sv', namespace, svTranslations);\ni18n.addResources('tet', namespace, tetTranslations);\ni18n.addResources('tg', namespace, tgTranslations);\ni18n.addResources('uk', namespace, ukTranslations);\ni18n.addResources('ur', namespace, urTranslations);\ni18n.addResources('vi', namespace, viTranslations);\ni18n.addResources('zh', namespace, zhTranslations);\ni18n.addResources('zh_CN', namespace, zh_CNTranslations);\n\ni18n.setDefaultNamespace(namespace);\ni18n.changeLanguage('en');\n\nexport default i18n;\n","/** @module reducers/selected */\nimport { validateReducer } from '../modules/util';\n\nexport const SET_STYLE = 'SET_STYLE';\n\nexport const DEFAULT_STATE_STYLE = 'LIST';\n\n/**\n * Reducer functions that computes and returns the new state based on the given action\n * @function\n * @param {Object} state The current state\n * @param {Object} action The action to be evaluated\n */\nconst style = (state = DEFAULT_STATE_STYLE, action) => {\n    switch (action.type) {\n        case SET_STYLE:\n            return validateReducer(action.value, DEFAULT_STATE_STYLE);\n        default:\n            return state;\n    }\n};\n\nexport default style;\n\n/**\n * Selectors that point to specific props in the state object\n * @function\n * @param {Object} state\n * @returns {Object}\n */\nexport const sGetStyleRoot = state => state.style;\n","import { combineReducers } from 'redux';\nimport arraySort from 'd2-utilizr/lib/arraySort';\n\nimport dashboards, { sGetDashboardsRoot } from './dashboards';\nimport selected from './selected';\nimport dashboardsFilter, {\n    ownerData,\n    sGetFilterName,\n    sGetFilterOrder,\n    sGetFilterOwner,\n} from './dashboardsFilter';\nimport controlBar from './controlBar';\nimport visualizations from './visualizations';\nimport editDashboard from './editDashboard';\nimport messages from './messages';\nimport user from './user';\nimport snackbar from './snackbar';\nimport itemFilters from './itemFilters';\nimport editItemFilters from './editItemFilters';\nimport style from './style';\nimport dimensions from './dimensions';\nimport settings from './settings';\nimport activeModalDimension from './activeModalDimension';\n\nconst USER = 'system';\n\n// Reducers\n\nexport default combineReducers({\n    dashboards,\n    selected,\n    dashboardsFilter,\n    controlBar,\n    visualizations,\n    messages,\n    user,\n    editDashboard,\n    itemFilters,\n    editItemFilters,\n    style,\n    snackbar,\n    dimensions,\n    settings,\n    activeModalDimension,\n});\n\n// Map constants to data\nconst mapConstToData = {\n    NAME: 'name',\n    ITEMS: 'numberOfItems',\n    CREATED: 'created',\n    OWNER: 'owner',\n};\n\n// Selectors\n\n// Filter dashboards by name\nexport const sFilterDashboardsByName = (dashboards, filter) =>\n    dashboards.filter(d =>\n        d.displayName.toLowerCase().includes(filter.toLowerCase())\n    );\n\n// Filter dashboards by owner, TODO FIXME\nexport const sFilterDashboardsByOwner = (dashboards, filter) => {\n    const ME = ownerData[1]; // TODO\n    const OTHERS = ownerData[2]; // TODO\n\n    switch (filter) {\n        case ME:\n            return dashboards.filter(d => d.owner === USER);\n        case OTHERS:\n            return dashboards.filter(d => d.owner !== USER);\n        default:\n            return dashboards;\n    }\n};\n\n// Filter dashboards by order\nexport const sFilterDashboardsByOrder = (dashboards, filter) => {\n    const filterValues = filter.split(':');\n\n    const key = filterValues[0];\n    const direction = filterValues[1];\n\n    return arraySort(dashboards, direction, mapConstToData[key]);\n};\n\n// Selectors dependency level 2\n\n// Get filtered dashboards\nexport const sGetFilteredDashboards = state => {\n    const dashboards = sGetDashboardsRoot(state);\n\n    const nameFilter = sGetFilterName(state);\n    const ownerFilter = sGetFilterOwner(state);\n    const orderFilter = sGetFilterOrder(state);\n\n    return sFilterDashboardsByOrder(\n        sFilterDashboardsByName(\n            sFilterDashboardsByOwner(dashboards, ownerFilter),\n            nameFilter\n        ),\n        orderFilter\n    );\n};\n","import { createStore, applyMiddleware, compose } from 'redux';\nimport { createLogger } from 'redux-logger';\nimport thunk from 'redux-thunk';\nimport reducer from './reducers';\n\nconst configureStore = () => {\n    const middleware = [thunk];\n\n    // Enable Redux devtools if extension is installed instead of redux-logger\n    const composeEnhancers =\n        window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\n    if (\n        !window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ &&\n        process.env.NODE_ENV !== 'production'\n    ) {\n        middleware.push(createLogger());\n    }\n\n    return createStore(\n        reducer,\n        composeEnhancers(applyMiddleware(...middleware))\n    );\n};\n\nexport default configureStore;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport { MuiThemeProvider, createMuiTheme } from '@material-ui/core/styles';\nimport { init as d2Init, config, getManifest, getUserSettings } from 'd2';\nimport dhis2theme from '@dhis2/d2-ui-core/theme/mui3.theme';\n\nimport { Provider as RuntimeProvider } from '@dhis2/app-runtime';\nimport { CssReset } from '@dhis2/ui-core';\n\nimport App from './components/App';\nimport './index.css';\nimport i18n from './locales';\nimport configureStore from './configureStore';\n\nconst muiTheme = () => createMuiTheme(dhis2theme);\n\nconst configI18n = userSettings => {\n    const uiLocale = userSettings.keyUiLocale;\n\n    if (uiLocale && uiLocale !== 'en') {\n        config.i18n.sources.add(`./i18n/i18n_module_${uiLocale}.properties`);\n    }\n\n    config.i18n.sources.add('./i18n/i18n_module_en.properties');\n    i18n.changeLanguage(uiLocale);\n};\n\nconst init = async () => {\n    const manifest = await getManifest('./manifest.webapp');\n\n    // log app info\n    console.info(\n        `Dashboards app, v${manifest.version}, ${\n            manifest.manifest_generated_at\n        }`\n    );\n\n    const isProd = process.env.NODE_ENV === 'production';\n\n    if (\n        !isProd &&\n        (!process.env.REACT_APP_DHIS2_BASE_URL ||\n            !process.env.REACT_APP_DHIS2_AUTHORIZATION)\n    ) {\n        throw new Error(\n            'Missing env variables REACT_APP_DHIS2_BASE_URL and REACT_APP_DHIS2_AUTHORIZATION'\n        );\n    }\n\n    // api config\n    const baseUrl = isProd\n        ? manifest.activities.dhis.href\n        : process.env.REACT_APP_DHIS2_BASE_URL;\n    const authorization = process.env.REACT_APP_DHIS2_AUTHORIZATION;\n\n    config.baseUrl = `${baseUrl}/api/${manifest.dhis2.apiVersion}`;\n    config.headers = isProd ? null : { Authorization: authorization };\n    config.schemas = [\n        'chart',\n        'map',\n        'report',\n        'reportTable',\n        'eventChart',\n        'eventReport',\n        'dashboard',\n        'organisationUnit',\n        'userGroup',\n    ];\n\n    getUserSettings()\n        .then(configI18n)\n        .then(() => d2Init(config))\n        .then(initializedD2 => {\n            ReactDOM.render(\n                <RuntimeProvider\n                    config={{\n                        baseUrl: baseUrl,\n                        apiVersion: manifest.dhis2.apiVersion,\n                    }}\n                >\n                    <CssReset />\n                    <Provider store={configureStore()}>\n                        <MuiThemeProvider theme={muiTheme()}>\n                            <App baseUrl={baseUrl} d2={initializedD2} />\n                        </MuiThemeProvider>\n                    </Provider>\n                </RuntimeProvider>,\n                document.getElementById('root')\n            );\n        });\n};\n\ninit();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"leftControls\":\"DashboardsBar_leftControls__2kr14\",\"rightControls\":\"DashboardsBar_rightControls__2l1lT\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"menuItem\":\"ContentMenuItem_menuItem__2DIcB\",\"launchLink\":\"ContentMenuItem_launchLink__MRANR\",\"label\":\"ContentMenuItem_label__2pIfq\",\"buttonInsert\":\"ContentMenuItem_buttonInsert__1GlZy\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"itemWrap\":\"ItemHeader_itemWrap__3gJiQ\",\"itemHeaderWrap\":\"ItemHeader_itemHeaderWrap__xEKwZ\",\"itemTitle\":\"ItemHeader_itemTitle__3LmXp\",\"itemActionsWrap\":\"ItemHeader_itemActionsWrap__1U5Ex\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"ControlBar_root__3LaTt\",\"content\":\"ControlBar_content__1r98-\",\"draghandle\":\"ControlBar_draghandle__1VWa0\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"ClearButton_button__2yjcV\",\"icon\":\"ClearButton_icon__1fqj8\"};","import isObject from 'lodash/isObject';\nimport { VIS_TYPE_COLUMN, VIS_TYPE_PIVOT_TABLE } from '@dhis2/analytics';\nimport { apiFetchFavorite, getMapFields } from '../../../api/metadata';\nimport {\n    REPORT_TABLE,\n    CHART,\n    MAP,\n    EVENT_REPORT,\n    EVENT_CHART,\n    itemTypeMap,\n} from '../../../modules/itemTypes';\nimport { getBaseUrl, getWithoutId } from '../../../modules/util';\nimport { getGridItemDomId } from '../../ItemGrid/gridUtil';\n\n//external plugins\nconst itemTypeToExternalPlugin = {\n    [MAP]: 'mapPlugin',\n    [EVENT_REPORT]: 'eventReportPlugin',\n    [EVENT_CHART]: 'eventChartPlugin',\n};\nconst hasIntegratedPlugin = type => [CHART, REPORT_TABLE].includes(type);\n\nconst getPlugin = type => {\n    if (hasIntegratedPlugin(type)) {\n        return true;\n    }\n    const pluginName = itemTypeToExternalPlugin[type];\n\n    return global[pluginName];\n};\n\nexport const THEMATIC_LAYER = 'thematic';\n\nexport const pluginIsAvailable = (item = {}, visualization = {}) => {\n    const type = visualization.activeType || item.type;\n\n    return !!getPlugin(type);\n};\n\nexport const extractFavorite = item => {\n    if (!isObject(item)) {\n        return null;\n    }\n\n    switch (item.type) {\n        case REPORT_TABLE:\n            return item.reportTable;\n        case CHART:\n            return item.chart;\n        case MAP:\n            return item.map;\n        case EVENT_REPORT:\n            return item.eventReport;\n        case EVENT_CHART:\n            return item.eventChart;\n        default:\n            return (\n                item.reportTable ||\n                item.chart ||\n                item.map ||\n                item.eventReport ||\n                item.eventChart ||\n                {}\n            );\n    }\n};\n\nexport const extractMapView = map =>\n    map.mapViews && map.mapViews.find(mv => mv.layer.includes(THEMATIC_LAYER));\n\nexport const loadPlugin = (plugin, config, credentials) => {\n    if (!(plugin && plugin.load)) {\n        return;\n    }\n\n    plugin.url = credentials.baseUrl;\n    plugin.loadingIndicator = true;\n    plugin.dashboard = true;\n    if (credentials.auth) {\n        plugin.auth = credentials.auth;\n    }\n    plugin.load(config);\n};\n\nexport const getId = item => extractFavorite(item).id;\nexport const getName = item => extractFavorite(item).name;\nexport const getDescription = item => extractFavorite(item).description;\nexport const getLink = (item, d2) => {\n    const baseUrl = getBaseUrl(d2);\n    const appUrl = itemTypeMap[item.type].appUrl(getId(item));\n\n    return `${baseUrl}/${appUrl}`;\n};\n\nexport const load = async (\n    item,\n    visualization,\n    { credentials, activeType }\n) => {\n    const config = {\n        ...visualization,\n        el: getGridItemDomId(item.id),\n    };\n\n    const type = activeType || item.type;\n    const plugin = getPlugin(type);\n\n    loadPlugin(plugin, config, credentials);\n};\n\nexport const fetch = async item => {\n    const fetchedFavorite = await apiFetchFavorite(getId(item), item.type, {\n        fields: item.type === MAP ? getMapFields() : null,\n    });\n\n    return fetchedFavorite;\n};\n\nexport const resize = item => {\n    const plugin = getPlugin(item.type);\n\n    if (plugin && plugin.resize) {\n        plugin.resize(getGridItemDomId(item.id));\n    }\n};\n\nexport const unmount = (item, activeType) => {\n    const plugin = getPlugin(activeType);\n\n    if (plugin && plugin.unmount) {\n        plugin.unmount(getGridItemDomId(item.id));\n    }\n};\n\nexport const getVisualizationConfig = (\n    visualization,\n    originalType,\n    activeType\n) => {\n    if (originalType === MAP && originalType !== activeType) {\n        const extractedMapView = extractMapView(visualization);\n\n        if (extractedMapView === undefined) {\n            return null;\n        }\n\n        return getWithoutId({\n            ...visualization,\n            ...extractedMapView,\n            mapViews: undefined,\n            type: activeType === CHART ? VIS_TYPE_COLUMN : VIS_TYPE_PIVOT_TABLE,\n        });\n    } else if (originalType === REPORT_TABLE && activeType === CHART) {\n        return getWithoutId({ ...visualization, type: VIS_TYPE_COLUMN });\n    } else if (originalType === CHART && activeType === REPORT_TABLE) {\n        return getWithoutId({\n            ...visualization,\n            type: VIS_TYPE_PIVOT_TABLE,\n        });\n    }\n\n    return getWithoutId(visualization);\n};\n","import isFunction from 'd2-utilizr/lib/isFunction';\n\nimport { orObject } from '../../modules/util';\n\n// Dimensions for the react-grid-layout\n\nexport const GRID_COMPACT_TYPE = 'vertical'; // vertical | horizonal | null\nexport const GRID_ROW_HEIGHT = 10;\nconst GRID_COLUMN_WIDTH_PX = 20;\nconst GRID_LAYOUT = 'FLEXIBLE'; // FIXED | FLEXIBLE\nexport const MARGIN = [10, 10];\n\nexport const NEW_ITEM_SHAPE = { x: 0, y: 0, w: 20, h: 29 };\nexport const ITEM_MIN_HEIGHT = 4;\n\n// Dimensions for getShape\n\nconst NUMBER_OF_ITEM_COLS = 2;\nconst GRID_COLUMNS = 60;\n\nexport const getGridColumns = () => {\n    switch (GRID_LAYOUT) {\n        case 'FLEXIBLE':\n            return GRID_COLUMNS;\n        case 'FIXED':\n            return Math.floor((window.innerWidth - 20) / GRID_COLUMN_WIDTH_PX);\n        default:\n            return GRID_COLUMNS;\n    }\n};\n\n// isNonNegativeInteger\n\nconst isNonNegativeInteger = x => Number.isInteger(x) && x >= 0;\n\n// Does the item have all the shape properties?\n\nexport const hasShape = item =>\n    isNonNegativeInteger(item.x) &&\n    isNonNegativeInteger(item.y) &&\n    isNonNegativeInteger(item.w) &&\n    isNonNegativeInteger(item.h);\n\n// returns a rectangular grid block dimensioned with x, y, w, h in grid units.\n// based on a grid with 3 items across\nexport const getShape = i => {\n    if (!isNonNegativeInteger(i)) {\n        throw new Error('Invalid grid block number');\n    }\n\n    const col = i % NUMBER_OF_ITEM_COLS;\n    const row = Math.floor(i / NUMBER_OF_ITEM_COLS);\n    const itemWidth = Math.floor((GRID_COLUMNS - 1) / NUMBER_OF_ITEM_COLS);\n    const itemHeight = GRID_ROW_HEIGHT * 2;\n\n    return {\n        x: col * itemWidth,\n        y: row * itemHeight,\n        w: itemWidth,\n        h: itemHeight,\n    };\n};\n\n/**\n * Calculates the grid item's original height in pixels based\n * on the height in grid units. This calculation\n * is copied directly from react-grid-layout GridItem.js (calcPosition)\n *\n * @param {Object} item item containing shape (x, y, w, h)\n */\nconst getOriginalHeight = item => {\n    const originalHeight = Math.round(\n        GRID_ROW_HEIGHT * item.h + Math.max(0, item.h - 1) * MARGIN[1]\n    );\n\n    return { originalHeight };\n};\n\n/**\n * Returns an array of items containing the x, y, w, h dimensions\n * and the item's originalheight in pixels\n * @function\n * @param {Array} items\n * @returns {Array}\n */\n\nexport const withShape = items =>\n    items.map((item, index) => {\n        const itemWithShape = hasShape(item)\n            ? item\n            : Object.assign({}, item, getShape(index));\n\n        return Object.assign(\n            {},\n            itemWithShape,\n            getOriginalHeight(itemWithShape)\n        );\n    });\n\nexport const getGridItemDomId = id => `item-${id}`;\n\nexport function onItemResize(id) {\n    const el = orObject(document.querySelector(`#${getGridItemDomId(id)}`));\n    if (isFunction(el.setViewportSize))\n        setTimeout(\n            () => el.setViewportSize(el.clientWidth - 5, el.clientHeight - 5),\n            10\n        );\n}\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"showMoreButton\":\"CategorizedMenuGroup_showMoreButton__3-0Wa\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"deleteItemButton\":\"DeleteItemButton_deleteItemButton__4YLrM\"};","import i18n from '@dhis2/d2-i18n';\nimport TableIcon from '@material-ui/icons/ViewList';\nimport ChartIcon from '@material-ui/icons/InsertChart';\nimport MapIcon from '@material-ui/icons/Public';\nimport ExtensionIcon from '@material-ui/icons/Extension';\nimport DescriptionIcon from '@material-ui/icons/Description';\nimport PersonIcon from '@material-ui/icons/Person';\nimport FontDownloadIcon from '@material-ui/icons/FontDownload';\nimport EmailIcon from '@material-ui/icons/Email';\nimport CropFreeIcon from '@material-ui/icons/CropFree';\nimport NotInterestedIcon from '@material-ui/icons/NotInterested';\n\nimport { getBaseUrl } from './util';\n\n// Item types\nexport const VISUALIZATION = 'VISUALIZATION';\nexport const REPORT_TABLE = 'REPORT_TABLE';\nexport const CHART = 'CHART';\nexport const MAP = 'MAP';\nexport const EVENT_REPORT = 'EVENT_REPORT';\nexport const EVENT_CHART = 'EVENT_CHART';\nexport const APP = 'APP';\nexport const REPORTS = 'REPORTS';\nexport const RESOURCES = 'RESOURCES';\nexport const USERS = 'USERS';\nexport const MESSAGES = 'MESSAGES';\nexport const TEXT = 'TEXT';\nexport const SPACER = 'SPACER';\n\nconst DOMAIN_TYPE_AGGREGATE = 'AGGREGATE';\nconst DOMAIN_TYPE_TRACKER = 'TRACKER';\n\n// Dashboard helpers\nexport const spacerContent = 'SPACER_ITEM_FOR_DASHBOARD_LAYOUT_CONVENIENCE';\nexport const emptyTextItemContent = 'TEXT_ITEM_WITH_NO_CONTENT';\nexport const isSpacerType = item =>\n    item.type === TEXT && item.text === spacerContent;\nexport const isTextType = item =>\n    item.type === TEXT && item.text !== spacerContent;\nexport const isVisualizationType = item =>\n    !!itemTypeMap[item.type].isVisualizationType;\n\nexport const hasMapView = itemType =>\n    itemTypeMap[itemType].domainType === DOMAIN_TYPE_AGGREGATE;\n\nexport const isTrackerDomainType = itemType =>\n    itemTypeMap[itemType].domainType === DOMAIN_TYPE_TRACKER;\n\nexport const getDefaultItemCount = itemType =>\n    itemTypeMap[itemType].defaultItemCount || 5;\n\nexport const getAppName = itemType => itemTypeMap[itemType].appName || '';\n\n// Item type map\nexport const itemTypeMap = {\n    [VISUALIZATION]: {\n        id: VISUALIZATION,\n        endPointName: 'visualizations',\n        propName: 'visualization',\n        pluralTitle: i18n.t('Visualizations'),\n        appUrl: id => `dhis-web-data-visualizer/#/${id}`,\n        appName: 'Visualizer',\n        defaultItemCount: 10,\n    },\n    [REPORT_TABLE]: {\n        id: REPORT_TABLE,\n        endPointName: 'reportTables',\n        propName: 'reportTable',\n        pluralTitle: i18n.t('Pivot tables'),\n        domainType: DOMAIN_TYPE_AGGREGATE,\n        isVisualizationType: true,\n        appUrl: id => `dhis-web-data-visualizer/#/${id}`,\n        appName: 'Visualizer',\n    },\n    [CHART]: {\n        id: CHART,\n        endPointName: 'charts',\n        propName: 'chart',\n        pluralTitle: i18n.t('Charts'),\n        domainType: DOMAIN_TYPE_AGGREGATE,\n        isVisualizationType: true,\n        appUrl: id => `dhis-web-data-visualizer/#/${id}`,\n        appName: 'Visualizer',\n    },\n    [MAP]: {\n        id: MAP,\n        endPointName: 'maps',\n        propName: 'map',\n        pluralTitle: i18n.t('Maps'),\n        domainType: DOMAIN_TYPE_AGGREGATE,\n        isVisualizationType: true,\n        appUrl: id => `dhis-web-maps/?id=${id}`,\n        appName: 'Maps',\n    },\n    [EVENT_REPORT]: {\n        id: EVENT_REPORT,\n        endPointName: 'eventReports',\n        propName: 'eventReport',\n        pluralTitle: i18n.t('Event reports'),\n        domainType: DOMAIN_TYPE_TRACKER,\n        isVisualizationType: true,\n        appUrl: id => `dhis-web-event-reports/?id=${id}`,\n        appName: 'Event Reports',\n    },\n    [EVENT_CHART]: {\n        id: EVENT_CHART,\n        endPointName: 'eventCharts',\n        propName: 'eventChart',\n        pluralTitle: i18n.t('Event charts'),\n        domainType: DOMAIN_TYPE_TRACKER,\n        isVisualizationType: true,\n        appUrl: id => `dhis-web-event-visualizer/?id=${id}`,\n        appName: 'Event Visualizer',\n    },\n    [APP]: {\n        endPointName: 'apps',\n        propName: 'appKey',\n        pluralTitle: i18n.t('Apps'),\n    },\n    [REPORTS]: {\n        id: REPORTS,\n        endPointName: 'reports',\n        propName: 'reports',\n        pluralTitle: i18n.t('Reports'),\n        appUrl: id =>\n            `dhis-web-reporting/getReportParams.action?mode=report&uid=${id}`,\n    },\n    [RESOURCES]: {\n        id: RESOURCES,\n        endPointName: 'resources',\n        propName: 'resources',\n        pluralTitle: i18n.t('Resources'),\n        appUrl: id => `api/documents/${id}/data`,\n    },\n    [USERS]: {\n        id: USERS,\n        endPointName: 'users',\n        propName: 'users',\n        pluralTitle: i18n.t('Users'),\n        appUrl: id => `dhis-web-dashboard-integration/profile.action?id=${id}`,\n    },\n    [TEXT]: {\n        id: TEXT,\n        propName: 'text',\n    },\n    [MESSAGES]: {\n        propName: 'messages',\n    },\n    [SPACER]: {\n        propName: 'text',\n    },\n};\n\nexport const getEndPointName = type => itemTypeMap[type].endPointName;\n\nexport const getItemUrl = (type, item, d2) => {\n    let url;\n\n    if (type === APP) {\n        url = item.launchUrl;\n    }\n\n    if (itemTypeMap[type] && itemTypeMap[type].appUrl) {\n        url = `${getBaseUrl(d2)}/${itemTypeMap[type].appUrl(item.id)}`;\n    }\n\n    return url;\n};\n\nexport const getItemIcon = type => {\n    switch (type) {\n        case REPORT_TABLE:\n        case EVENT_REPORT:\n        case REPORTS:\n            return TableIcon;\n        case CHART:\n        case EVENT_CHART:\n            return ChartIcon;\n        case MAP:\n            return MapIcon;\n        case APP:\n            return ExtensionIcon;\n        case RESOURCES:\n            return DescriptionIcon;\n        case USERS:\n            return PersonIcon;\n        case TEXT:\n            return FontDownloadIcon;\n        case MESSAGES:\n            return EmailIcon;\n        case SPACER:\n            return CropFreeIcon;\n        default:\n            return NotInterestedIcon;\n    }\n};\n"],"sourceRoot":""}
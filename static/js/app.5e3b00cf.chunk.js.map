{"version":3,"sources":["D2App/components/ControlBar/styles/ControlBar.module.css","D2App/components/ControlBar/styles/DashboardItemChip.module.css","D2App/components/ControlBar/styles/ClearButton.module.css","D2App/components/ControlBar/styles/ShowMoreButton.module.css","D2App/components/ItemSelector/styles/ContentMenuItem.module.css","D2App/components/ItemSelector/styles/CategorizedMenuGroup.module.css","D2App/components/TitleBar/styles/EditTitleBar.module.css","D2App/components/TitleBar/styles/ViewTitleBar.module.css","D2App/components/Item/VisualizationItem/styles/FatalErrorBoundary.module.css","D2App/components/Item/ItemHeader/styles/DeleteItemButton.module.css","D2App/components/Item/ItemHeader/styles/PrintItemInfo.module.css","D2App/components/Item/VisualizationItem/styles/LoadingMask.module.css","D2App/components/Item/VisualizationItem/styles/Item.module.css","D2App/components/Item/ListItem/Item.module.css","D2App/components/Item/PrintTitlePageItem/styles/Item.module.css","D2App/components/FilterBar/styles/FilterBar.module.css","D2App/components/ControlBar/styles/ConfirmDeleteDialog.module.css","D2App/components/Dashboard/styles/PrintInfo.module.css","D2App/components/Dashboard/styles/PrintActionsBar.module.css","D2App/components/Dashboard/styles/PrintLayoutDashboard.module.css","D2App/components/Dashboard/styles/PrintDashboard.module.css","D2App/modules/util.js","D2App/modules/itemTypes.js","D2App/components/Dashboard/dashboardModes.js","D2App/reducers/user.js","D2App/modules/uiBackendItemConverter.js","D2App/reducers/dashboards.js","D2App/reducers/selected.js","D2App/reducers/dimensions.js","D2App/reducers/itemFilters.js","D2App/actions/itemFilters.js","D2App/reducers/messages.js","D2App/api/messages.js","D2App/components/Item/MessagesItem/actions.js","D2App/reducers/snackbar.js","D2App/actions/snackbar.js","D2App/reducers/visualizations.js","D2App/actions/visualizations.js","D2App/api/index.js","D2App/api/dashboards.js","D2App/api/userDataStore.js","D2App/components/SnackbarMessage/SnackbarMessage.js","D2App/actions/selected.js","D2App/api/localStorage.js","D2App/api/description.js","D2App/actions/dashboards.js","D2App/reducers/controlBar.js","D2App/actions/controlBar.js","D2App/api/controlBar.js","D2App/reducers/settings.js","D2App/actions/dimensions.js","D2App/components/ControlBar/ControlBar.js","D2App/icons/Star.js","D2App/components/ControlBar/DashboardItemChip.js","D2App/api/dataStatistics.js","D2App/icons/AddCircle.js","D2App/icons/Clear.js","D2App/components/ControlBar/ClearButton.js","D2App/reducers/dashboardsFilter.js","D2App/components/ControlBar/Filter.js","D2App/components/ControlBar/ShowMoreButton.js","D2App/components/ControlBar/controlBarDimensions.js","D2App/components/ControlBar/DashboardsBar.js","D2App/actions/dashboardsFilter.js","D2App/components/Dashboard/DashboardVerticalOffset.js","D2App/widgets/NoContentMessage.js","D2App/components/ItemSelector/HeaderMenuItem.js","D2App/icons/Launch.js","D2App/components/ItemSelector/ContentMenuItem.js","D2App/reducers/editDashboard.js","D2App/api/editDashboard.js","D2App/actions/editDashboard.js","D2App/components/ItemSelector/selectableItems.js","D2App/components/ItemSelector/CategorizedMenuGroup.js","D2App/components/ItemSelector/actions.js","D2App/components/ItemSelector/SinglesMenuGroup.js","D2App/components/ItemSelector/ItemSelector.js","D2App/components/TitleBar/EditTitleBar.js","D2App/components/Item/VisualizationItem/assets/icons.js","D2App/components/ItemFilter/FilterDialog.js","D2App/reducers/activeModalDimension.js","D2App/actions/activeModalDimension.js","D2App/components/ItemFilter/FilterSelector.js","D2App/components/TitleBar/ViewTitleBar.js","D2App/components/TitleBar/TitleBar.js","D2App/components/Item/VisualizationItem/DefaultPlugin.js","D2App/components/Item/VisualizationItem/FatalErrorBoundary.js","D2App/components/Item/ItemHeader/ViewItemActions.js","D2App/components/Item/ItemHeader/DeleteItemButton.js","D2App/components/Item/ItemHeader/EditItemActions.js","D2App/icons/Info.js","D2App/components/Item/ItemHeader/PrintItemInfo.js","D2App/components/Item/ItemHeader/ItemHeader.js","D2App/components/Item/VisualizationItem/ItemHeaderButtons.js","D2App/components/Item/VisualizationItem/ItemFooter.js","D2App/components/Item/VisualizationItem/LoadingMask.js","D2App/modules/memoizeOne.js","D2App/components/Item/VisualizationItem/Item.js","D2App/widgets/Line.js","D2App/components/Item/MessagesItem/Item.js","D2App/components/Item/NotSupportedItem/Item.js","D2App/icons/Description.js","D2App/icons/Delete.js","D2App/components/Item/ListItem/Item.js","D2App/components/Item/ListItem/actions.js","D2App/reducers/printDashboard.js","D2App/components/Item/TextItem/Item.js","D2App/components/Item/AppItem/Item.js","D2App/components/Item/SpacerItem/Item.js","D2App/components/Item/PageBreakItem/Item.js","D2App/components/Item/PrintTitlePageItem/Item.js","D2App/components/Item/Item.js","D2App/components/Item/ProgressiveLoadingContainer.js","D2App/components/ItemGrid/ItemGrid.js","D2App/components/FilterBar/FilterBadge.js","D2App/components/FilterBar/FilterBar.js","D2App/reducers/windowHeight.js","D2App/actions/printDashboard.js","D2App/components/Dashboard/ViewDashboard.js","D2App/components/ControlBar/ConfirmDeleteDialog.js","D2App/components/ControlBar/EditBar.js","D2App/components/Dashboard/PrintInfo.js","D2App/icons/LessHorizontal.js","D2App/components/Dashboard/PrintActionsBar.js","D2App/modules/printUtils.js","D2App/components/ItemGrid/PrintLayoutItemGrid.js","D2App/components/Dashboard/PrintLayoutDashboard.js","D2App/components/Dashboard/EditDashboard.js","D2App/components/Dashboard/NewDashboard.js","D2App/components/ItemGrid/PrintItemGrid.js","D2App/components/Dashboard/PrintDashboard.js","D2App/actions/windowHeight.js","D2App/components/Dashboard/Dashboard.js","D2App/components/App.js","D2App/actions/user.js","D2App/reducers/style.js","D2App/reducers/index.js","D2App/configureStore.js","D2App/locales/index.js","D2App/AppWrapper.js","D2App/components/ItemGrid/gridUtil.js","D2App/components/Item/VisualizationItem/plugin.js","D2App/components/Item/ItemHeader/styles/ItemHeader.module.css","D2App/api/metadata.js","D2App/components/ControlBar/styles/DashboardsBar.module.css"],"names":["module","exports","orArray","param","Array","isArray","orObject","isObject","arrayToIdMap","array","reduce","obj","item","id","formatDate","value","uiLocale","global","Intl","DateTimeFormat","locale","year","month","day","format","Date","substr","replace","validateReducer","defaultValue","undefined","getBaseUrl","d2","api","Api","getApi","idx","baseUrl","indexOf","slice","getWithoutId","object","VISUALIZATION","REPORT_TABLE","CHART","MAP","EVENT_REPORT","EVENT_CHART","APP","REPORTS","RESOURCES","USERS","MESSAGES","TEXT","SPACER","PAGEBREAK","PRINT_TITLE_PAGE","isVisualizationType","itemTypeMap","type","hasMapView","itemType","domainType","isTrackerDomainType","getDefaultItemCount","defaultItemCount","getAppName","appName","endPointName","propName","pluralTitle","i18n","t","appUrl","getTime","getEndPointName","getItemUrl","url","launchUrl","getItemIcon","TableIcon","ChartIcon","MapIcon","ExtensionIcon","DescriptionIcon","PersonIcon","FontDownloadIcon","EmailIcon","CropFreeIcon","NotInterestedIcon","EDIT","NEW","PRINT","PRINT_LAYOUT","isEditMode","mode","includes","isPrintMode","isViewMode","DEFAULT_STATE_USER","username","isSuperuser","sGetUserUsername","state","user","spacerContent","isTextType","text","convertUiItemsToBackend","items","map","isUiSpacerType","convertBackendItemsToUi","isBackendSpacerType","gridProperties","getGridItemProperties","DEFAULT_STATE_DASHBOARDS","byId","updateDashboardProp","dashboardId","prop","sGetDashboardsRoot","dashboards","sGetDashboardById","sDashboardsIsFetching","sGetAllDashboards","sGetDashboardItems","sGetStarredDashboards","Object","values","filter","dashboard","starred","sGetUnstarredDashboards","getCustomDashboards","data","arrayFrom","d","name","displayName","description","displayDescription","favorite","owner","created","split","join","lastUpdated","access","numberOfItems","dashboardItems","length","combineReducers","action","isLoading","showDescription","sGetSelectedRoot","selected","sGetSelectedId","sGetSelectedIsLoading","sGetSelectedShowDescription","DEFAULT_DIMENSIONS","getDimensionById","DIMENSION_ID_PERIOD","DIMENSION_ID_ORGUNIT","sGetDimensions","dimensions","DEFAULT_STATE_ITEM_FILTERS","sGetItemFiltersRoot","itemFilters","sGetFiltersKeys","keys","sGetNamedItemFilters","createSelector","filters","arr","push","find","dimension","acRemoveItemFilter","sGetMessagesRoot","messages","tGetMessages","async","getInstance","then","get","catch","error","console","log","getMessages","messageConversations","dispatch","err","DEFAULT_STATE_SNACKBAR","message","duration","open","acCloseSnackbar","DEFAULT_STATE_VISUALIZATIONS","isEmpty","p","sGetVisualization","visualizations","sGetVisualizationsRoot","acAddVisualization","onError","getDashboardItemsFields","withFavorite","arrayClean","getListItemFields","getFavoritesFields","withDimensions","getDashboardFields","withItems","getIdNameFields","rename","apiFetchDashboard","models","fields","hasNamespace","currentUser","dataStore","has","getNamespace","create","apiPostUserDataStoreValue","key","set","apiGetUserDataStoreValue","namespace","k","loadingDashboardMsg","SnackbarMessageContent","style","fontWeight","connect","snackbar","sGetSnackbar","snackbarOpen","snackbarMessage","snackbarDuration","onCloseSnackbar","props","zIndex","autoHideDuration","onClose","acSetSelectedId","acSetSelectedIsLoading","acSetSelectedShowDescription","tSetSelectedDashboardById","getState","snackbarTimeout","setTimeout","dashboardName","onSuccess","acAppendDashboards","customDashboard","acSetDashboardItems","withShape","localStorage","setItem","forEach","extractFavorite","clearTimeout","tSetShowDescription","apiGetShowDescription","tUpdateShowDescription","apiPostShowDescription","tFetchDashboards","collection","list","paging","toArray","tStarDashboard","isStarred","post","delete","apiStarDashboard","acSetDashboardStarred","tDeleteDashboard","apiDeleteDashboard","Promise","resolve","userRows","sGetControlBarUserRows","controlBar","sGetControlBarRoot","acSetControlBarUserRows","rows","tSetControlBarRows","controlBarRows","apiGetControlBarRows","DEFAULT_SETTINGS","keyDateFormat","keyAnalysisRelativePeriod","keyAnalysisDigitGroupSeparator","displayNameProperty","rootOrganisationUnit","sGetSettings","settings","sGetSettingsDisplayNameProperty","tSetDimensions","displayNameProp","apiFetchDimensions","acSetDimensions","dim","dimensionType","dataDimensionType","ControlBar","React","Component","constructor","super","onStartDrag","this","setState","dragging","window","addEventListener","onDrag","onEndDrag","event","preventDefault","stopPropagation","newHeight","clientY","onChangeHeight","height","requestAnimationFrame","removeEventListener","renderDragHandle","className","classes","draghandle","onMouseDown","render","Math","max","rootStyle","assign","backgroundColor","editMode","colors","yellow050","white","paddingBottom","transition","root","content","children","defaultProps","StarIcon","xmlns","viewBox","fill","DashboardItemChip","label","chipProps","selectedState","unselected","icon","Star","link","to","onClick","debounce","eventType","apiPostDataStatistics","AddCircleIcon","width","teal600","ClearIcon","grey800","ClearButton","onClear","button","Clear","color","ownerData","DEFAULT_STATE_DASHBOARDS_FILTER_OWNER","order","sGetDashboardsFilterRoot","dashboardsFilter","sGetFilterName","styles","filterField","fontSize","top","searchIcon","grey700","Filter","setFilterValue","onChangeName","target","handleKeyUp","keyCode","onKeypressEnter","componentWillReceiveProps","nextProps","startAdornment","position","endAdornment","placeholder","onChange","onKeyUp","Function","prototype","withStyles","ShowMoreButton","isMaxHeight","disabled","textAlign","showMore","getRowsHeight","getControlBarHeight","FIRST_ROW_PADDING_HEIGHT","DashboardsBar","setInitialDashboardState","adjustedHeight","newRows","floor","newRowCount","min","apiPostControlBarRows","onToggleMaxHeight","onSelectDashboard","history","componentDidMount","selectedId","onChangeFilterName","rowCount","controlBarHeight","contentWrapperStyle","padding","overflowY","leftControls","display","textDecoration","marginRight","AddCircle","mapDispatchToProps","withRouter","stateProps","dispatchProps","ownProps","displayDashboards","arraySort","toLowerCase","marginTop","NoContentMessage","grey600","HeaderMenuItem","title","dense","LaunchIcon","LaunchLink","e","launchLink","rel","href","Launch","InsertButton","buttonInsert","ContentMenuItem","onInsert","visType","ItemIcon","renderedItemIcon","visTypeIcons","menuItem","DEFAULT_STATE_EDIT_DASHBOARD","NEW_DASHBOARD_STATE","printPreviewView","sGetEditDashboardRoot","editDashboard","sGetIsEditing","sGetIsPrintPreviewView","sGetEditDashboardItems","saveDashboard","w","h","save","msg","response","uid","acClearEditDashboard","acAddDashboardItem","itemPropName","generateUid","gridItemProperties","shape","yPos","getPageBreakItemShape","isStatic","getPrintTitlePageItemShape","NEW_ITEM_SHAPE","acUpdateDashboardItem","acRemoveDashboardItem","tSaveDashboard","dashboardToSave","postDashboard","singleItems","header","categorizedItems","listItemTypes","CategorizedMenuGroup","addItem","tAddListItemContent","newItem","toggleSeeMore","seeMore","onChangeItemsLimit","hasMore","itemUrl","context","showMoreButton","margin","contextTypes","PropTypes","isRequired","listItemType","dashboardItemIndex","findIndex","dashboardItem","category","addToDashboard","ItemSearchField","onFocus","ItemSelector","closeList","openList","_","fetchItems","anchorEl","currentTarget","setFilter","getCategorizedMenuGroups","itemCount","allItems","maxOptions","getSinglesMenuGroups","getMenuGroups","concat","add","Set","queryString","anchorOrigin","horizontal","vertical","transformOrigin","PaperProps","disableAutoFocus","disableEnforceFocus","disableRestoreFocus","maxWidth","EditTitleBar","onChangeTitle","onChangeDescription","section","titleDescription","itemSelector","selectedDashboard","ThreeDots","SpeechBubble","fillRule","transform","Warning","FilterDialog","onConfirm","renderDialogContent","selectedItems","dialogId","commonProps","onSelect","onDeselect","onReorder","selectedPeriods","ouItems","dimensionId","large","secondary","primary","DEFAULT_STATE_ACTIVE_MODAL_DIMENSION","sGetActiveModalDimension","activeModalDimension","acSetActiveModalDimension","initiallySelectedItems","selectedDimensions","clearActiveModalDimension","setActiveModalDimension","addItemFilter","removeItemFilter","showPopover","setShowPopover","useState","setFilters","ref","useRef","closePanel","onCloseDialog","onClickOutside","reference","arrow","placement","onDimensionClick","selectedIds","itemIdsToRemove","newList","itemIds","oldList","reorderedList","filterItems","SharingDialog","lazy","PeriodSelectorDialog","ViewTitleBar","moreOptionsIsOpen","setMoreOptionsIsOpen","sharingDialogIsOpen","setSharingDialogIsOpen","redirectUrl","setRedirectUrl","sharingDialogInitiated","setSharingDialogInitiated","onToggleStarredDashboard","onShowHideDescription","toggleSharingDialog","toggleMoreOptions","titleStyle","cursor","userSelect","StarBorder","showHideDescriptionLabel","toggleStarredDashboardLabel","buttonRef","createRef","titleBar","actions","titleBarIcon","strip","update","editLink","manage","marginLeft","paddingTop","fallback","onRequestClose","black","minWidth","TitleBar","edit","DefaultPlugin","pluginCredentials","shouldPluginReload","prevProps","reloadAllowed","filtersChanged","vis","visualization","prevVis","visChanged","activeType","reloadPlugin","pluginManager","currentVis","useActiveType","credentials","getActiveType","auth","defaultHeaders","Authorization","options","componentDidUpdate","getGridItemDomId","textDiv","FatalErrorBoundary","errorFound","componentDidCatch","info","container","ViewItemActions","actionButtons","itemActionsWrap","DeleteItemButton","deleteItemButton","red500","itemId","WarningIcon","PrintWarning","warning","Info","ItemHeader","forwardRef","dashboardMode","isShortened","rest","Actions","EditItemActions","PrintItemInfo","getItemActionsMap","itemHeaderWrap","itemTitle","iconFill","ItemHeaderButtons","setAnchorEl","onSelectActiveType","isTrackerType","onViewTable","handleClose","onViewChart","onViewMap","canViewAs","isSingleValue","isYearOverYear","VIS_TYPE_GAUGE","VIS_TYPE_PIE","interpretationMenuLabel","activeFooter","ViewAsMenuItems","pluginIsAvailable","small","Boolean","getLink","onToggleFooter","scrollContainer","line","border","grey100","ItemFooter","objectId","getId","LoadingMask","center","memoizeOne","fn","lastArgs","lastValue","args","every","arg","i","Item","showFooter","configLoaded","pluginIsLoaded","applyFilters","visRows","visColumns","columns","visFilters","dimensionFound","dimensionObjects","getUniqueKey","uniqueId","getPluginComponent","memoizedGetVisualizationConfig","calculatedHeight","originalHeight","headerRef","current","clientHeight","ITEM_CONTENT_PADDING_BOTTOM","memoizedGetContentStyle","contentRef","offsetHeight","memoizedApplyFilters","onLoadingComplete","forDashboard","mapViews","layer","hideTitle","onToggleItemExpanded","getContentStyle","measuredHeight","preferMeasured","onVisualizationLoaded","prevState","shortened","acSetActiveVisualizationType","grey200","Line","messageTypes","VALIDATION_RESULT","TICKET","SYSTEM","listStyleType","paddingLeft","seeAll","marginBottom","sender","lineHeight","snippet","maxHeight","overflow","MessagesItem","getMessageHref","msgIdentifier","messageType","getMessageSender","latestMsg","getMessageItems","modeClass","readClass","read","msgDate","document","location","messageCount","userSettings","string","MessagesContainer","NotSupportedItem","justifyContent","alignItems","align","grey500","DeleteIcon","getItemTitle","ListItem","tRemoveListItemContent","contentItems","index","el","getContentItems","contentItem","Description","itemicon","deleteButton","deletebutton","deleteicon","grey900","newContent","DEFAULT_STATE_PRINT_DASHBOARD","DEFAULT_DASHBOARD_ITEMS","NEW_PRINT_DASHBOARD_STATE","sGetPrintDashboardRoot","printDashboard","sGetIsPrinting","sGetPrintDashboardItems","whiteSpace","textField","fontStretch","onChangeText","updatedItem","viewItem","textDivStyle","editItem","onEdit","multiline","fullWidth","printItem","textItem","getIframeSrc","appDetails","iframeSrc","ouIds","ouPath","AppItem","appKey","system","installedApps","app","src","SpacerItem","PageBreakItem","PrintTitlePageItem","titlePage","filterTitle","listItems","filterListItem","val","filterList","getItemFilterList","GridItem","VisualizationItem","TextItem","getGridItem","ProgressiveLoadingContainer","shouldLoad","containerRef","shouldLoadHandler","checkShouldLoad","bufferPx","bufferFactor","innerHeight","rect","getBoundingClientRect","bottom","removeHandler","registerHandler","debounceMs","getElementsByClassName","componentWillUnmount","eventProps","pick","ItemGrid","expandedItems","clickedId","isExpanded","onLayoutChange","newLayout","acUpdateDashboardLayout","onResizeStop","layout","oldItem","onItemResize","pluginResize","adjustHeightForExpanded","expandedItem","getItemComponent","itemClassNames","getItemComponents","translucent","MARGIN","cols","getGridColumns","rowHeight","GRID_ROW_HEIGHT","innerWidth","compactType","GRID_COMPACT_TYPE","isDraggable","isResizable","draggableCancel","validItems","hasShape","badgeContainer","borderRadius","badge","badgeRemove","FilterBadge","onRemove","count","FilterBar","onBadgeRemove","onBadgeClick","bar","removeItemFIlter","DEFAULT_STATE_WINDOW_HEIGHT","sGetWindowHeight","windowHeight","acSetPrintDashboard","acClearPrintDashboard","acAddPrintDashboardItem","isOneItemPerPage","acUpdatePrintDashboardItem","dashboardIsEditing","dashboardIsPrinting","clearEditDashboard","clearPrintDashboard","useEffect","querySelector","scroll","ConfirmDeleteDialog","onDeleteConfirmed","onContinueEditing","destructive","buttonBarStyle","EditBar","translationDialogIsOpen","dashboardModel","confirmDeleteDialogOpen","onConfirmDelete","onSave","newId","onPrintPreview","isPrintPreviewView","clearPrintPreview","showPrintPreview","onDiscard","onDiscardChanges","onDelete","onTranslationsSaved","translations","dbLocale","translation","property","onTranslate","fetchDashboardModel","toggleTranslationDialog","confirmDeleteDialog","deleteAccess","translationDialog","objectToTranslate","fieldsToTranslate","onTranslationSaved","onTranslationError","renderActionButtons","printPreviewText","updateAccess","discardBtnText","rightControls","topMargin","sGetIsNewDashboard","acSetDashboardDisplayName","PrintInfo","isLayout","a4LandscapeWidthPx","infoHeader","infoWrapper","infoList","divider","LessHorizontalIcon","PrintActionsBar","inner","LessHorizontal","print","getTransformYPx","elStyle","transformY","match","parseInt","PrintLayoutItemGrid","updateDashboardLayout","isFirstPageBreak","pageBreaks","sortedPageBreaks","sortBy","y","cx","isEditing","hideExtraPageBreaks","sortedElements","elements","types","elementsWithBoundingRect","from","classList","bottomY","getDomGridItemsSortedByYPos","querySelectorAll","pageBreakBottom","lastItemBottom","foundNonPageBreak","thisItemBottom","gridElement","firstBreak","scrollArea","EDIT_BAR_HEIGHT","isLeapPage","n","x","getMultiple","factor","multiple","PrintLayoutDashboard","initialized","initPrintLayoutDashboard","setPrintDashboard","MAX_ITEM_GRID_HEIGHT","updateDashboardItem","addDashboardItem","yPosList","pageNum","addPageBreaks","getWrapperStyle","fromEdit","spacers","dp24","wrapper","pageOuter","EditDashboard","initEditDashboard","setEditDashboard","renderGrid","NewDashboard","setNewDashboard","PrintItemGrid","PrintDashboard","initPrintDashboard","sortedItems","spacerCount","removeDashboardItem","MAX_ITEM_GRID_WIDTH_OIPP","MAX_ITEM_GRID_HEIGHT_OIPP","dashboardMap","dashboardsIsEmpty","dashboardsLoaded","routeId","params","selectDashboard","dashboardToSelect","preferredId","getItem","dash","sGetDashboardsSortedByStarred","setWindowHeight","getElementsByTagName","remove","setHeaderbarVisibility","onResize","App","setCurrentUser","fetchDashboards","setControlBarRows","setShowDescription","setDimensions","getChildContext","exact","path","childContextTypes","objectClean","conversations","$merge","d2Object","keyUiLocale","authorities","newState","$splice","$unshift","idToRemove","stateItems","layoutHasChanged","newStateItems","stateItem","si","configureStore","middleware","thunk","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","createStore","reducer","applyMiddleware","addResources","arTranslations","ar_IQTranslations","daTranslations","enTranslations","esTranslations","frTranslations","idTranslations","kmTranslations","loTranslations","myTranslations","nbTranslations","prsTranslations","psTranslations","ptTranslations","pt_BRTranslations","ruTranslations","svTranslations","tetTranslations","tgTranslations","ukTranslations","urTranslations","viTranslations","zhTranslations","zh_CNTranslations","appConfig","schemas","authorization","process","REACT_APP_DHIS2_AUTHORIZATION","headers","AppWrapper","store","theme","createMuiTheme","dhis2theme","i18nRoot","isNonNegativeInteger","Number","isInteger","minH","GRID_COLUMNS","static","itemWithShape","Error","col","row","itemWidth","MAX_ITEM_GRID_WIDTH","itemHeight","getShape","round","getOriginalHeight","isFunction","setViewportSize","clientWidth","itemTypeToExternalPlugin","getPlugin","hasIntegratedPlugin","reportTable","chart","eventReport","eventChart","getName","load","config","plugin","loadingIndicator","loadPlugin","fetch","apiFetchFavorite","getMapFields","resize","unmount","getVisualizationConfig","originalType","extractedMapView","mv","VIS_TYPE_COLUMN","VIS_TYPE_PIVOT_TABLE","getDimensionFields","getAxesFields","getFavoriteFields","withOptions"],"mappings":"kHACAA,EAAOC,QAAU,CAAC,KAAO,yBAAyB,QAAU,4BAA4B,WAAa,iC,qBCArGD,EAAOC,QAAU,CAAC,KAAO,gCAAgC,KAAO,gCAAgC,SAAW,oCAAoC,WAAa,wC,qBCA5JD,EAAOC,QAAU,CAAC,OAAS,4BAA4B,KAAO,4B,qBCA9DD,EAAOC,QAAU,CAAC,SAAW,iCAAiC,SAAW,mC,qBCAzED,EAAOC,QAAU,CAAC,SAAW,kCAAkC,WAAa,oCAAoC,MAAQ,+BAA+B,aAAe,wC,qBCAtKD,EAAOC,QAAU,CAAC,eAAiB,+C,4CCAnCD,EAAOC,QAAU,CAAC,QAAU,8BAA8B,iBAAmB,uCAAuC,MAAQ,4BAA4B,YAAc,kCAAkC,aAAe,qC,qBCAvND,EAAOC,QAAU,CAAC,QAAU,8BAA8B,SAAW,+BAA+B,SAAW,+BAA+B,aAAe,mCAAmC,MAAQ,4BAA4B,SAAW,iC,4CCA/OD,EAAOC,QAAU,CAAC,UAAY,sCAAsC,KAAO,iCAAiC,QAAU,sC,qBCAtHD,EAAOC,QAAU,CAAC,iBAAmB,6C,qBCArCD,EAAOC,QAAU,CAAC,QAAU,iC,qBCA5BD,EAAOC,QAAU,CAAC,OAAS,8B,qBCA3BD,EAAOC,QAAU,CAAC,QAAU,wB,4CCA5BD,EAAOC,QAAU,CAAC,KAAO,mBAAmB,KAAO,mBAAmB,SAAW,uBAAuB,KAAO,mBAAmB,WAAa,yBAAyB,aAAe,6B,qBCAvLD,EAAOC,QAAU,CAAC,UAAY,wBAAwB,KAAO,mBAAmB,YAAc,0BAA0B,YAAc,0BAA0B,WAAa,yBAAyB,eAAiB,+B,qBCAvND,EAAOC,QAAU,CAAC,IAAM,yB,qBCAxBD,EAAOC,QAAU,CAAC,QAAU,uC,qBCA5BD,EAAOC,QAAU,CAAC,YAAc,+BAA+B,WAAa,8BAA8B,KAAO,wBAAwB,SAAW,4BAA4B,QAAU,6B,qBCA1LD,EAAOC,QAAU,CAAC,UAAY,mCAAmC,UAAY,mCAAmC,MAAQ,+BAA+B,KAAO,gC,qBCA9JD,EAAOC,QAAU,CAAC,QAAU,sCAAsC,UAAY,0C,4CCA9ED,EAAOC,QAAU,CAAC,QAAU,gCAAgC,UAAY,oC,26lFCIjE,SAASC,EAAQC,GACtB,OAAOC,MAAMC,QAAQF,GAASA,EAAQ,GAEjC,SAASG,EAASH,GACvB,OAAOI,IAASJ,GAASA,EAAQ,GAO5B,SAASK,EAAaC,GAC3B,OAAOA,EAAMC,OAAO,CAACC,EAAKC,KACxBD,EAAIC,EAAKC,IAAMD,EACRD,GACN,IAYE,MAAMG,EAAa,CAACC,EAAOC,KAChC,GAA2B,qBAAhBC,EAAOC,MAAwBA,KAAKC,eAAgB,CAC7D,MAAMC,EAASJ,GAAY,KAC3B,OAAO,IAAIE,KAAKC,eAAeC,EAAQ,CACrCC,KAAM,UACNC,MAAO,QACPC,IAAK,YACJC,OAAO,IAAIC,KAAKV,IAGrB,OAAOA,EAAMW,OAAO,EAAG,IAAIC,QAAQ,IAAK,MAoB7BC,EAAkB,CAACb,EAAOc,SAA2BC,IAAVf,GAAiC,OAAVA,EAAiBc,EAAed,EAClGgB,EAAaC,IACxB,MAAMC,EAAMD,EAAGE,IAAIC,SACbC,EAAMH,EAAII,QAAQC,QAAQ,QAChC,OAAOF,GAAO,EAAIH,EAAII,QAAQE,MAAM,EAAGH,GAAOH,EAAII,SAEvCG,EAAeC,GAAM,2BAAUA,GAAV,IAChC5B,QAAIiB,M,mDCrEN,igCAaO,MAAMY,EAAgB,gBAChBC,EAAe,eACfC,EAAQ,QACRC,EAAM,MACNC,EAAe,eACfC,EAAc,cACdC,EAAM,MACNC,EAAU,UACVC,EAAY,YACZC,EAAQ,QACRC,EAAW,WACXC,EAAO,OACPC,EAAS,SACTC,EAAY,YACZC,EAAmB,mBAInBC,EAAsB7C,KAAU8C,EAAY9C,EAAK+C,MAAMF,oBACvDG,EAAaC,GAJI,cAIQH,EAAYG,GAAUC,WAC/CC,EAAsBF,GAJP,YAImBH,EAAYG,GAAUC,WACxDE,EAAsBH,GAAYH,EAAYG,GAAUI,kBAAoB,EAC5EC,EAAaL,GAAYH,EAAYG,GAAUM,SAAW,GAE1DT,EAAc,CACzB,CAAChB,GAAgB,CACf7B,GAAI6B,EACJ0B,aAAc,iBACdC,SAAU,gBACVC,YAAaC,IAAKC,EAAE,kBACpBC,OAAQ5D,GAAE,qCAAkCA,GAC5CsD,QAAS,kBACTF,iBAAkB,IAEpB,CAACtB,GAAe,CACd9B,GAAI8B,EACJyB,aAAc,iBACdC,SAAU,gBACVC,YAAaC,IAAKC,EAAE,gBACpBV,WAxB0B,YAyB1BL,qBAAqB,EACrBgB,OAAQ5D,GAAE,qCAAkCA,GAC5CsD,QAAS,mBAEX,CAACvB,GAAQ,CACP/B,GAAI+B,EACJwB,aAAc,iBACdC,SAAU,gBACVC,YAAaC,IAAKC,EAAE,UACpBV,WAlC0B,YAmC1BL,qBAAqB,EACrBgB,OAAQ5D,GAAE,qCAAkCA,GAC5CsD,QAAS,mBAEX,CAACtB,GAAM,CACLhC,GAAIgC,EACJuB,aAAc,OACdC,SAAU,MACVC,YAAaC,IAAKC,EAAE,QACpBV,WA5C0B,YA6C1BL,qBAAqB,EACrBgB,OAAQ5D,GAAE,4BAAyBA,GACnCsD,QAAS,QAEX,CAACrB,GAAe,CACdjC,GAAIiC,EACJsB,aAAc,eACdC,SAAU,cACVC,YAAaC,IAAKC,EAAE,iBACpBV,WArDwB,UAsDxBL,qBAAqB,EACrBgB,OAAQ5D,GAAE,qCAAkCA,GAC5CsD,QAAS,iBAEX,CAACpB,GAAc,CACblC,GAAIkC,EACJqB,aAAc,cACdC,SAAU,aACVC,YAAaC,IAAKC,EAAE,gBACpBV,WA/DwB,UAgExBL,qBAAqB,EACrBgB,OAAQ5D,GAAE,wCAAqCA,GAC/CsD,QAAS,oBAEX,CAACnB,GAAM,CACLoB,aAAc,OACdC,SAAU,SACVC,YAAaC,IAAKC,EAAE,SAEtB,CAACvB,GAAU,CACTpC,GAAIoC,EACJmB,aAAc,UACdC,SAAU,UACVC,YAAaC,IAAKC,EAAE,WACpBC,OAAQ,CAAC5D,EAAI8C,KACX,OAAQA,GACN,IAAK,OACH,MAAM,2CAAN,OAAkD9C,GAEpD,IAAK,sBACL,IAAK,cACL,QACE,MAAM,eAAN,OAAsBA,EAAtB,wBAAuC,IAAIY,MAAOiD,cAI1D,CAACxB,GAAY,CACXrC,GAAIqC,EACJkB,aAAc,YACdC,SAAU,YACVC,YAAaC,IAAKC,EAAE,aACpBC,OAAQ5D,GAAE,wBAAqBA,EAArB,UAEZ,CAACsC,GAAQ,CACPtC,GAAIsC,EACJiB,aAAc,QACdC,SAAU,QACVC,YAAaC,IAAKC,EAAE,SACpBC,OAAQ5D,GAAE,2DAAwDA,IAEpE,CAACwC,GAAO,CACNxC,GAAIwC,EACJgB,SAAU,QAEZ,CAACjB,GAAW,CACViB,SAAU,YAEZ,CAACf,GAAS,CACRe,SAAU,QAEZ,CAACd,GAAY,CACXc,SAAU,QAEZ,CAACb,GAAmB,CAClBa,SAAU,SAGDM,EAAkBhB,GAAQD,EAAYC,GAAMS,aAC5CQ,EAAa,CAACjB,EAAM/C,EAAMoB,KACrC,IAAI6C,EAUJ,OARIlB,IAASX,IACX6B,EAAMjE,EAAKkE,WAGTpB,EAAYC,IAASD,EAAYC,GAAMc,SACzCI,EAAG,UAAM9C,YAAWC,GAAjB,YAAwB0B,EAAYC,GAAMc,OAAO7D,EAAKC,GAAID,EAAK+C,QAG7DkB,GAEIE,EAAcpB,IACzB,OAAQA,GACN,KAAKhB,EACL,KAAKG,EACL,KAAKG,EACH,OAAO+B,IAET,KAAKpC,EACL,KAAKG,EACH,OAAOkC,IAET,KAAKpC,EACH,OAAOqC,IAET,KAAKlC,EACH,OAAOmC,IAET,KAAKjC,EACH,OAAOkC,IAET,KAAKjC,EACH,OAAOkC,IAET,KAAKhC,EACH,OAAOiC,IAET,KAAKlC,EACH,OAAOmC,IAET,KAAKjC,EACH,OAAOkC,IAET,QACE,OAAOC,O,oKCrMN,MAAMC,EAAO,OACPC,EAAM,MAENC,EAAQ,QACRC,EAAe,eACfC,EAAaC,GAAQ,CAACL,EAAMC,GAAKK,SAASD,GAC1CE,EAAcF,GAAQ,CAACH,EAAOC,GAAcG,SAASD,GACrDG,EAAaH,GALN,SAKcA,ECNrBI,EAAqB,CAChCtF,GAAI,GACJuF,SAAU,GACVpF,SAAU,GACVqF,aAAa,GAwBR,MACMC,EAAmBC,GAASA,EAAMC,KAAKJ,S,2EC5B7C,MAAMK,EAAgB,+CAOvBC,EAAa9F,GAAQA,EAAK+C,OAASN,KAAQzC,EAAK+F,OAASF,EAElDG,EAA0BC,GAASA,EAAMC,IAAIlG,IACxD,IAAI+F,EAAO,KAQX,MAbqB/F,IAAQA,EAAK+C,OAASL,IAOvCyD,CAAenG,GACjB+F,EAAOF,EACEC,EAAW9F,KACpB+F,EAAO/F,EAAK+F,MAdoB,6BAiB3B,2BAAK/F,GACN+F,EAAO,CACTA,QACE,MAGKK,EAA0BH,GAASA,EAAMC,IAAIlG,IACxD,MAAM+C,EAtBoB/C,IAAQA,EAAK+C,OAASN,KAAQzC,EAAK+F,OAASF,EAsBzDQ,CAAoBrG,GAAQ0C,IAAS1C,EAAK+C,KACjDuD,EAAiBC,YAAsBvG,EAAKC,IAC5C8F,EAAOD,EAAW9F,GA1BU,8BA0BFA,EAAK+F,KAAgC,GAAK/F,EAAK+F,KAAO,KACtF,OAAO,uCAAK/F,GACG,OAAT+F,EAAgB,CAClBA,QACE,IAHN,IAIEhD,QACGuD,KCzBME,EAA2B,CACtCC,KAAM,KACNR,MAAO,IAGHS,EAAsB,EAC1Bf,QACAgB,cACAC,OACAzG,YAJ0B,CAM1BsG,KAAK,2BAAMd,EAAMc,MAAb,IACF,CAACE,GAAD,2BAAoBhB,EAAMc,KAAKE,IAA/B,IACE,CAACC,GAAOzG,MAGZ8F,MAAON,EAAMM,QA8DR,MAAMY,EAAqBlB,GAASA,EAAMmB,WAgBpCC,EAAoB,CAACpB,EAAO1F,IAAOP,YAASmH,EAAmBlB,GAAOc,MAAMxG,GAC5E+G,EAAwBrB,GACO,OAAnCkB,EAAmBlB,GAAOc,KAUtBQ,EAAoBtB,GAASjG,YAASmH,EAAmBlB,GAAOc,MAShES,EAAqBvB,GAASkB,EAAmBlB,GAAOM,MAExDkB,EAAwBxB,GAASyB,OAAOC,OAAOJ,EAAkBtB,IAAQ2B,OAAOC,IAAmC,IAAtBA,EAAUC,SACvGC,EAA0B9B,GAASyB,OAAOC,OAAOJ,EAAkBtB,IAAQ2B,OAAOC,IAAmC,IAAtBA,EAAUC,SAezGE,EAAsBC,GAAQC,IAAUD,GAAMzB,IAAI2B,IAAC,CAC9D5H,GAAI4H,EAAE5H,GACN6H,KAAMD,EAAEC,KACRC,YAAaF,EAAEE,YACfC,YAAaH,EAAEG,YACfC,mBAAoBJ,EAAEI,mBACtBT,QAASK,EAAEK,SACXC,MAAON,EAAEjC,KAAKkC,KACdM,QAASP,EAAEO,QAAQC,MAAM,KAAKC,KAAK,KAAKxH,OAAO,EAAG,IAClDyH,YAAaV,EAAEU,YAAYF,MAAM,KAAKC,KAAK,KAAKxH,OAAO,EAAG,IAC1D0H,OAAQX,EAAEW,OACVC,cAAenJ,YAAQuI,EAAEa,gBAAgBC,OACzCD,eAAgBtC,EAAwByB,EAAEa,mB,aC5G7BE,kBAAgB,CAC7B3I,GA/BS,CAAC0F,EAX6B,KAWMkD,KAC7C,OAAQA,EAAO9F,MACb,IAhB2B,kBAiBzB,OAAO/B,YAAgB6H,EAAO1I,MAdK,MAgBrC,QACE,OAAOwF,IA0BXmD,UAtBgB,CAACnD,GApB6B,EAoBakD,KAC3D,OAAQA,EAAO9F,MACb,IAzBkC,yBA0BhC,OAAO/B,YAAgB6H,EAAO1I,OAvBY,GAyB5C,QACE,OAAOwF,IAiBXoD,gBAbsB,CAACpD,GA7B6B,EA6BmBkD,KACvE,OAAQA,EAAO9F,MACb,IAlCwC,+BAmCtC,OAAO/B,YAAgB6H,EAAO1I,OAhCkB,GAkClD,QACE,OAAOwF,MAUN,MAAMqD,EAAmBrD,GAASA,EAAMsD,SAClCC,EAAiBvD,GAASqD,EAAiBrD,GAAO1F,GAClDkJ,EAAwBxD,GAASqD,EAAiBrD,GAAOmD,UACzDM,EAA8BzD,GAASqD,EAAiBrD,GAAOoD,gB,cCvDrE,MACMM,GAAqB,CAACC,aAAiBC,MAAsBD,aAAiBE,OAYpF,MAAMC,GAAiB9D,GAASA,EAAM+D,W,eCZtC,MAIMC,GAA6B,GAiCnC,MAAMC,GAAsBjE,GAASA,EAAMkE,YACrCC,GAAkBnE,GAASyB,OAAO2C,KAAKH,GAAoBjE,IAG3DqE,GAAuBC,aAAe,CAACL,GAAqBH,IAAiB,CAACS,EAASR,IAAetC,OAAO2C,KAAKG,GAASpK,OAAO,CAACqK,EAAKlK,KACnJkK,EAAIC,KAAK,CACPnK,GAAIA,EACJ6H,KAAM4B,EAAWW,KAAKC,GAAaA,EAAUrK,KAAOA,GAAI6H,KACxDT,OAAQ6C,EAAQjK,GAAIiG,IAAI/F,IAAK,CAC3BF,GAAIE,EAAMF,GACV6H,KAAM3H,EAAM4H,aAAe5H,EAAM2H,UAG9BqC,GACN,KC9CUI,GAAqBtK,IAAE,CAClC8C,KDHgC,qBCIhC9C,O,yBCUK,MAAMuK,GAAmB7E,GAASA,EAAM8E,S,cClBxC,MCWMC,GAAe,IAAMC,UAChC,IACE,MAAMF,ODbiB,MACzB,MACMxG,EAAG,uCADM,qHACN,gCACT,OAAO2G,yBAAcC,KAAKzJ,GAAMA,EAAGE,IAAIC,SAASuJ,IAAI7G,IAAM8G,MAAMC,GAASC,QAAQC,IAAI,SAAUF,KCUtEG,IACjB,qBACJC,GACEX,EACJ,OAAOY,EAV0B,CACnCtI,KFP+B,oBEQ/B5C,MAQmCiL,IACjC,MAAOE,GACP,OAjBazC,EAiBE,eAjBMmC,EAiBUM,EAhBjCL,QAAQC,IAAR,0BAA+BrC,EAA/B,aAA0CmC,IACnCA,EAFO,IAACnC,EAAQmC,GCDZO,GAAyB,CACpCC,QAAS,GACTC,SAAU,KACVC,MAAM,GAqBD,MCrBMC,GAAkB,MAC7B5I,KDL4B,mB,yBEGvB,MAEM6I,GAA+B,GAEtCC,GAAUC,QAAW5K,IAAN4K,GAAyB,OAANA,EA2BjC,MAEMC,GAAoB,CAACpG,EAAO1F,IAFH0F,IAASA,EAAMqG,eAG5CC,CAAuBtG,GAAO1F,GCrC1BiM,GAAqB/L,IAAK,CACrC4C,KDE+B,oBCD/B5C,U,mCCAK,MAAMgM,GAAUnB,GAASC,QAAQC,IAAI,UAAWF,GAE1CoB,GAA0B,EACrCC,gBACE,KAAOC,KAAW,CAAC,KAAM,OAAQ,QAAS,IAAK,IAAK,kBAAmB,mBAAoB,WAAY,OAAQ,SAA7F,UAA0GC,eAAoBjE,KAAK,MAAQ+D,EAAY,UAAMG,aAAmB,CACpMC,eAAgBJ,EAAaI,iBAC5BnE,KAAK,MAFqK,KAIhKoE,GAAqB,EAChCC,YACAN,gBACE,KAAOC,KAAW,CAAC,GAAD,OAAIM,eAAkBtE,KAAK,MAAQ,cAAe,qBAAsB,WAAxE,eAA4FsE,aAAgB,CAChIC,QAAQ,IACPvE,KAAK,KAFc,KAEL,UAAW,cAAe,SAAUqE,EAAS,yBAAqBP,GAAwB,CACzGC,iBACC/D,KAAK,KAFsD,UCPjDwE,GAAoB7M,GAAM2K,yBAAcC,KAAKzJ,GAAMA,EAAG2L,OAAOxF,UAAUuD,IAAI7K,EAAI,CAC1F+M,OAAQV,KAAWI,GAAmB,CACpCC,WAAW,EACXN,aAAc,CACZI,gBAAgB,MAEhBnE,KAAK,QACPyC,MAAMoB,ICdGc,GAAetC,eAAoBvJ,EAAG8L,YAAYC,UAAUC,IADhD,aAEZC,GAAe1C,MAAOvJ,EAAI6L,IAAiBA,QAAqB7L,EAAG8L,YAAYC,UAAUrC,IAF7E,mBAEoG1J,EAAG8L,YAAYC,UAAUG,OAF7H,aAGZC,GAA4B5C,MAAO6C,EAAKrN,KACnD,MAAMiB,QAAWwJ,gCACAyC,GAAajM,EAAI6L,KAC/BQ,IAAID,EAAKrN,IAEDuN,GAA2B/C,MAAO6C,EAAKvM,KAAkB,IAAD,EACnE,MAAMG,QAAWwJ,yBACX+C,QAAkBN,GAAajM,QAAU6L,GAAa7L,IAG5D,OAFY,OAAGuM,QAAH,IAAGA,GAAH,UAAGA,EAAW5D,YAAd,aAAG,EAAiBM,KAAKuD,GAAKA,IAAMJ,UAGjCG,EAAU7C,IAAI0C,UAErBD,GAA0BC,EAAKvM,GACrCgK,QAAQC,IAAI,mDACLjK,I,yBCbX,MACa4M,GAAsB,CACjC/F,KAAM,GACN/E,KAHwB,qBAMpB+K,GAAyB,EAC7BtC,aAEuB,kBAAZA,EAEF,yCACa,0BAAMuC,MAAO,CAC7BC,WAAY,MACVxC,EAAQ1D,MAAa,IAHpB,aAQF0D,EA4BMyC,mBAnBStI,IACtB,MAAM,QACJ6F,EADI,SAEJC,EAFI,KAGJC,GPZwB/F,IAASA,EAAMuI,UAAY3C,GOajD4C,CAAaxI,GACjB,MAAO,CACLyI,aAAc1C,EACd2C,gBAAiB7C,EACjB8C,iBAAkB7C,IAUkB,CACtC8C,gBAAiB5C,IADJsC,CAzBgBO,GACtB,kBAAC,KAAD,CAAUT,MAAO,CACtBU,OAAQ,OACP/C,KAAM8C,EAAMJ,aAAc5C,QAAS,kBAACsC,GAAD,CAAwBtC,QAASgD,EAAMH,kBAAqBK,iBAAkBF,EAAMF,iBAAkBK,QAASH,EAAMD,mB,UCdtJ,MAAMK,GAAkBzO,IAAK,CAClC4C,Kff6B,kBegB7B5C,UAEW0O,GAAyB1O,IAAK,CACzC4C,KflBoC,yBemBpC5C,UAEW2O,GAA+B3O,IAAK,CAC/C4C,KfrB0C,+BesB1C5C,UAGW4O,GAA4B9O,GAAM0K,MAAOU,EAAU2D,KAC9D3D,EAASwD,IAAuB,IAChC,MAAMI,EAAkBC,WAAW,KACjC,MAAMC,EAAgBzP,YAASqH,EAAkBiI,IAAY/O,IAAK8H,YAE9DoB,EAAsB6F,MAAeG,IACvCtB,GAAoB/F,KAAOqH,EAC3B9D,EPpCwC,CAC5CtI,KDFuC,4BCGvC5C,MOkCuC,CACjCqL,QAASqC,GACTnC,MAAM,OAGT,KAEG0D,EAAYnG,IAChBoC,EAASgE,GAAmBpG,IAC5B,MAAMqG,EAAkB5H,EAAoBuB,GAAU,GC7CjB,IAACzD,EAAUmB,ED2EhD,OA7BA0E,EAASkE,GAAoBC,YAAUF,EAAgB5G,kBC9CjBlD,ED+CZE,EAAiBsJ,KC/CKrI,ED+CQ1G,EC9C1DwP,aAAaC,QAAb,kCAAgDlK,GAAYmB,GD+C1D2I,EAAgB5G,eAAeiH,QAAQ3P,IACrC,OAAQA,EAAK+C,MACX,KAAKhB,IACL,KAAKC,IACL,KAAKC,IACL,KAAKC,IACL,KAAKC,IACHkJ,EAASa,GAAmB0D,aAAgB5P,KAC5C,MAEF,KAAKwC,IACH6I,EAASX,SAQXzK,IAAOiJ,EAAe8F,MACxB3D,EZ1D4B,CAChCtI,KDVgC,uBasE9BsI,EAASuD,GAAgB3O,IACzBoL,EAASwD,IAAuB,IAChCgB,aAAaZ,GACb5D,EPtE2B,CAC7BtI,KDL4B,mBQ2EnBkG,GAQT,IAEE,OAAOmG,QADiBtC,GAAkB7M,IAE1C,MAAOqL,GACP,OATcN,EASCM,EARfL,QAAQC,IAAI,UAAWF,GAChBA,EAFOA,OAYL8E,GAAsB,IAAMnF,UAUvC,IACE,MAAM5B,OEnG2B4B,gBAAkB+C,GAD1B,mBjBMyB,Ge8FpBqC,GAC9B,YAVA1E,EAASyD,GAUQ/F,IACjB,MAAOuC,GACP,OATcN,EASCM,EARfL,QAAQC,IAAI,kCAAmCF,GACxCA,EAFOA,OAYLgF,GAAyB7P,GAASwK,UAU7C,IAEE,YEpHkCA,gBAAuB4C,GAFhC,kBAEgFpN,GFmHnG8P,CAAuB9P,QAT7BkL,EAASyD,GAA6B3O,IAWtC,MAAOmL,GACP,OATcN,EASCM,EARfL,QAAQC,IAAI,kCAAmCF,GACxCA,EAFOA,OGpGLqE,GAAqBvI,IAAU,CAC1C/D,KnBR4B,iBmBS5B5C,MAAOP,YAAa8H,EAAoBZ,MAY7ByI,GAAsBpP,IAAK,CACtC4C,KnBnBiC,sBmBoBjC5C,UAGW+P,GAAmB,IAAMvF,UACpC,MAAMwF,QN7BgCvF,yBAAcC,KAAKzJ,GAAMA,EAAG2L,OAAOxF,UAAU6I,KAAK,CACxFpD,OAAQ,CAACN,KAAqBpE,KAAK,KAAM,sBAAsBA,KAAK,KACpE+H,OAAQ,WACNtF,MAAMoB,IMEqBrF,MAyB7BuE,GAzB6BvE,EAyBJqJ,EAAWG,UAzBG,CACvCvN,KnBL4B,iBmBM5B5C,MAAOP,YAAa8H,EAAoBZ,QAoD7ByJ,GAAiB,CAACtQ,EAAIuQ,IAAc7F,UAW/C,IAEE,YN1D4B,EAAC1K,EAAIuQ,KACnC,MAAMvM,EAAG,qBAAiBhE,EAAjB,aACT2K,yBAAcC,KAAKzJ,IACboP,EACFpP,EAAGE,IAAIC,SAASkP,KAAKxM,GAErB7C,EAAGE,IAAIC,SAASmP,OAAOzM,MMmDnB0M,CAAiB1Q,EAAIuQ,GAXXvQ,KAChBoL,EAhDiC,EAAC1E,EAAa6J,KAAd,CACnCzN,KnBXmC,wBmBYnC4D,YAAaA,EACbxG,MAAOqQ,IA6CII,CAAsB3Q,EAAIuQ,IAC5BvQ,GAUAmP,CAAUnP,GACjB,MAAOqL,GACP,OATcN,EASCM,EARfL,QAAQC,IAAI,6BAA8BF,GACnCA,EAFOA,OAYL6F,GAAmB5Q,GAAM0K,UACpC,IAGE,YNzD8B1K,IACzB2K,yBAAcC,KAAKzJ,GACjBA,EAAG2L,OAAOjG,WAAWgE,IAAI7K,GAAI4K,KAAKtD,GAAaA,EAAUmJ,WAC/D3F,MAAMoB,IMoDD2E,CAAmB7Q,SACnBoL,EAAS6E,MACRa,QAAQC,UACf,MAAO1F,GAEP,OADAL,QAAQC,IAAI,4BAA6BI,GAClCA,ICxEI1C,mBAAgB,CAC7BqI,SAXe,CAACtL,EAF2B,EAEYkD,KACvD,OAAQA,EAAO9F,MACb,IALoC,2BAMlC,OAAO/B,YAAgB6H,EAAO1I,MALS,GAOzC,QACE,OAAOwF,MAcN,MAEMuL,GAAyBvL,GAFJA,IAASA,EAAMwL,WAEFC,CAAmBzL,GAAOsL,SCzB5DI,GAA0BC,IAAI,CACzCvO,KDDsC,2BCEtC5C,MAAOmR,IAGIC,GAAqB,IAAM5G,UAUtC,IACE,MAAM6G,OChB0B7G,gBAAkB+C,GAD1B,iBFEiB,GCeZ+D,GAC7B,YAVApG,EAASgG,GAUQG,IACjB,MAAOlG,GACP,OATcN,EASCM,EARfL,QAAQC,IAAI,iCAAkCF,GACvCA,EAFOA,OEXL0G,GAAmB,CAC9BC,cAAe,aACfC,0BAA2B,iBAC3BC,+BAAgC,QAChCC,oBAAqB,cACrB1R,SAAU,KACV2R,qBAAsB,IAqBjB,MAAMC,GAAerM,GAASA,EAAMsM,SAC9BC,GAAkCvM,GAASqM,GAAarM,GAAOmM,oBCvB/DK,GAAiB/Q,GAAMuJ,MAAOU,EAAU2D,KAUnD,IACE,MAAMoD,EAAkBF,GAAgClD,KAClDtF,QAAmB2I,aAAmBjR,EAAIgR,GAGhD,MAdgB1I,KAChB2B,EAN2B3B,KAAU,CACvC3G,KtBH4B,iBsBI5B5C,MAAOuJ,IAII4I,CAAgB5I,KAalB0F,CADoB1F,EAAWpC,OAAOiL,GAA6B,aAAtBA,EAAIC,eAAsD,aAAtBD,EAAIC,eAA0D,cAA1BD,EAAIE,oBAEhI,MAAOnH,GACP,OAZcN,EAYCM,EAXfL,QAAQC,IAAI,+BAAgCF,GACrCA,EAFOA,O,oECNlB,MAAM0H,WAAmBC,IAAMC,UAC7BC,YAAYrE,GACVsE,MAAMtE,GADW,KAOnBuE,YAAc,KACZC,KAAKC,SAAS,CACZC,UAAU,IAEZC,OAAOC,iBAAiB,YAAaJ,KAAKK,QAC1CF,OAAOC,iBAAiB,UAAWJ,KAAKM,YAZvB,KAcnBD,OAASE,IACPA,EAAMC,iBACND,EAAME,kBACN,MAAMC,EAAYH,EAAMI,QAEpBX,KAAKxE,MAAMoF,gBAAkBF,IAAcV,KAAKxE,MAAMqF,QAAUH,EAAY,GAC9EI,sBAAsB,KACpBd,KAAKxE,MAAMoF,eAAeF,MArBb,KAyBnBJ,UAAY,KACVN,KAAKC,SAAS,CACZC,UAAU,IAEZC,OAAOY,oBAAoB,YAAaf,KAAKK,QAC7CF,OAAOY,oBAAoB,UAAWf,KAAKM,WAEvCN,KAAKxE,MAAM8E,WACbN,KAAKxE,MAAM8E,aA/BbN,KAAKrN,MAAQ,CACXuN,UAAU,GAkCdc,mBACE,MAA4C,oBAA9BhB,KAAKxE,MAAMoF,eAAgC,yBAAKK,UAAWC,KAAQC,WAAYpG,MAAO,CAClG8F,OA1C4B,GA2C3BO,YAAapB,KAAKD,cAAkB,KAGzCsB,SACE,MAAMR,EAASS,KAAKC,IAAIvB,KAAKxE,MAAMqF,OAAQ,GA/Cb,EAgDxBW,EAAYpN,OAAOqN,OAAO,CAC9BZ,SACAa,gBAAiB1B,KAAKxE,MAAMmG,SAAWC,IAAOC,UAAYD,IAAOE,MACjEC,cAnD4B,GAqD9B/B,KAAKrN,MAAMuN,SAAW,CACpB8B,WAAY,QACV,IACJ,OAAO,yBAAKjH,MAAOyG,EAAWP,UAAWC,KAAQe,MACrC,yBAAKhB,UAAWC,KAAQgB,SAAUlC,KAAKxE,MAAM2G,UAC5CnC,KAAKgB,qBAsCtBtB,GAAW0C,aAAe,CACxBxB,eAAgB,KAChBN,UAAW,MAEEZ,UC1FA2C,OAXE,EACfpB,eACI,yBAAKA,UAAWA,EAAWqB,MAAM,6BAA6BC,QAAQ,aACpE,0BAAM1N,EAAE,gBAAgB2N,KAAK,SAC7B,0BAAM3N,EAAE,6FACR,0BAAMA,EAAE,gBAAgB2N,KAAK,U,0BC0BtBC,OA1BkB,EAC/BjO,UACAyB,WACAyM,QACA/O,kBAEA,MAAMgP,EAAY,CAChB1M,YAGF,GAAIzB,EAAS,CACX,MAAMoO,EAAgB3M,EAAWiL,KAAQjL,SAAWiL,KAAQ2B,WAC5DF,EAAUG,KAAO,kBAACC,GAAD,CAAU9B,UAAS,UAAKC,KAAQ4B,KAAb,YAAqBF,KAG3D,OAAO,kBAAC,IAAD,CAAM3B,UAAWC,KAAQ8B,KAAMC,GAAE,WAAMtP,GAAeuP,QAASC,KAAS,ICtB5CxL,OAAOyL,EAAWnW,KACrD,MAAMmB,QAAWwJ,yBACX3G,EAAG,mCAA+BmS,EAA/B,qBAAqDnW,GAC9DmB,EAAGE,IAAIC,SAASkP,KAAKxM,IDmBgEoS,CAAsB,iBAAkB1P,GAAc,MACjI,kBAAC,IAASgP,EAAYD,KEjBnBY,OAJO,IAAM,yBAAKhB,MAAM,6BAA6BiB,MAAM,KAAK1C,OAAO,KAAK2B,KAAMZ,IAAO4B,QAASjB,QAAQ,aACjH,0BAAM1N,EAAE,0M,gECUD4O,OAVG,EAChBxC,eACI,yBAAKA,UAAWA,EAAWuB,KAAMZ,IAAO8B,QAASpB,MAAM,6BAA6BC,QAAQ,aAC1F,0BAAM1N,EAAE,0GACR,0BAAMA,EAAE,gBAAgB2N,KAAK,U,sBCMtBmB,OAVY,EACzBC,aACI,4BAAQ3C,UAAWC,KAAQ2C,OAAQX,QAASU,GAC1C,8BACI,kBAACE,GAAD,CAAW7C,UAAWC,KAAQ4B,KAAMiB,MAAM,aCN/C,MAGMC,GAAY,CAAC,CACxB/W,GAAI,MACJE,MAAO,aACN,CACDF,GAAI,KACJE,MAAO,iBACN,CACDF,GAAI,SACJE,MAAO,sBAsBI8W,GAAwCD,GAAU,GAAG/W,GAiCnD2I,mBAAgB,CAC7Bd,KA/BW,CAACnC,EAJsC,GAIQkD,KAC1D,OAAQA,EAAO9F,MACb,IAtCsC,6BAuCpC,OAAO/B,YAAgB6H,EAAO1I,MAPgB,IAShD,QACE,OAAOwF,IA0BXwC,MAtBY,CAACxC,EAAQsR,GAAuCpO,KAC5D,OAAQA,EAAO9F,MACb,IA/CuC,8BAgDrC,OAAO/B,YAAgB6H,EAAO1I,MAjBgB,IAmBhD,QACE,OAAOwF,IAiBXuR,MAbY,CAACvR,EA1CT,WA0CwDkD,KAC5D,OAAQA,EAAO9F,MACb,IAxDuC,8BAyDrC,OAAO/B,YAAgB6H,EAAO1I,MA7C9B,YA+CF,QACE,OAAOwF,MAUN,MAAMwR,GAA2BxR,GAASA,EAAMyR,iBAE1CC,GAAiB1R,GAASwR,GAAyBxR,GAAOmC,KClEjEwP,GAAS,CACbC,YAAa,CACXC,SAAU,OACVjB,MAAO,QACP1C,OAAQ,OACR4D,IAAK,QAEPC,WAAY,CACVX,MAAOnC,IAAO+C,QACdpB,MAAO,OACP1C,OAAQ,SAKL,MAAM+D,WAAehF,YAC1BC,YAAYrE,GACVsE,MAAMtE,GADW,KAanBqJ,eAAiBtE,IACfA,EAAMC,iBACNR,KAAKxE,MAAMsJ,aAAavE,EAAMwE,OAAO5X,QAfpB,KAiBnB6X,YAAczE,IACZ,OAAQA,EAAM0E,SACZ,KAtBuB,GAuBrBjF,KAAKxE,MAAM0J,kBACX,MAEF,KAzBwB,GA0BtBlF,KAAKxE,MAAMsJ,iBAtBf9E,KAAKrN,MAAQ,CACXxF,MDK8C,ICDlDgY,0BAA0BC,GACxBpF,KAAKC,SAAS,CACZ9S,MAAOiY,EAAUtQ,OAuBrBuM,SACE,MAAM,QACJH,EADI,KAEJpM,EAFI,aAGJgQ,GACE9E,KAAKxE,MACH6J,EAAiB,kBAAC,KAAD,CAAgBC,SAAS,SACpC,kBAAC,KAAD,CAAYrE,UAAWC,EAAQwD,cAErCa,EAAwB,KAATzQ,GAAwB,OAATA,EAAgB,kBAAC,KAAD,CAAgBwQ,SAAS,OAC7D,kBAAC,GAAD,CAAa1B,QAAS,IAAMkB,OACZ,KAChC,OAAO,kBAAC,KAAD,CAAY7D,UAAWC,EAAQqD,YAAaiB,YAAa7U,IAAKC,EAAE,0BAA2ByU,eAAgBA,EAAgBE,aAAcA,EAAcpY,MAAO6S,KAAKrN,MAAMxF,MAAOsY,SAAUzF,KAAK6E,eAAgBa,QAAS1F,KAAKgF,eAUxOJ,GAAOxC,aAAe,CACpBtN,KAAM,GACNgQ,aAAca,SAASC,WAEVC,4BAAWvB,GAAXuB,CAAmBjB,I,sBC7DnBkB,OAlBe,EAC5B5C,UACA6C,cACAC,cAEO,yBAAKjL,MAAO,CACjBkL,UAAW,WAEFD,EAAW,yBAAK/E,UAAWC,KAAQ8E,UAAWrV,IAAKC,EAAE,cAAsB,yBAAKqQ,UAAWC,KAAQgF,SAAUhD,QAASA,GAC9G6C,EAAcpV,IAAKC,EAAE,aAAeD,IAAKC,EAAE,eCbzD,MAMMuV,GAAgB7H,GANS,GAO7BA,EAKI8H,GAAsB9H,GAC1B6H,GAAc7H,GATe+H,G,yBCgB/B,MAAMC,WAAsB1G,YAAW,eAAD,oBAC3CjN,MAAQ,CACN2L,KDpByB,GCkBgB,KAI3CiI,yBAA2BjI,IACzB0B,KAAKC,SAAS,CACZ3B,OACAyH,YARuB,KAQVzH,KAP0B,KAmB3CsC,eAAiBF,IACf,MAAM8F,EAAiB9F,EAAY,GAE7B+F,EAAUnF,KAAKC,IDxCI,GAOOV,ECiC6B2F,EDhCxDlF,KAAKoF,OAAO7F,EANiBwF,IAJA,MASFxF,MCmChC,GAAI4F,IAAYzG,KAAKrN,MAAM2L,KAAM,CAC/B,MAAMqI,EAAcrF,KAAKsF,IAAIH,EA1BN,IA2BvBzG,KAAKxE,MAAMoF,eAAe+F,KA1Ba,KA6B3CrG,UAAY,Id9CuB3I,gBAAuB4C,GAFhC,iBAE+EpN,Gc+ChG0Z,CAAsB7G,KAAKrN,MAAM2L,MA9BC,KAgC3CwI,kBAAoB,KAClB,MAAMxI,EAlCmB,KAkCZ0B,KAAKrN,MAAM2L,KAAyB0B,KAAKxE,MAAMyC,SAlCnC,GAmCzB+B,KAAKC,SAAS,CACZ3B,OACAyH,aAAc/F,KAAKrN,MAAMoT,eApCc,KAuC3CgB,kBAAoB,KAClB/G,KAAKxE,MAAMwL,QAAQ5P,KAAnB,WAA4B4I,KAAKxE,MAAM1H,WAAW,GAAG7G,MA7BvDga,oBACEjH,KAAKuG,yBAAyBvG,KAAKxE,MAAMyC,UAG3CkH,0BAA0BC,GACxBpF,KAAKuG,yBAAyBnB,EAAUnH,UA2B1CoD,SACE,MAAM,WACJvN,EADI,KAEJgB,EAFI,WAGJoS,EAHI,mBAIJC,GACEnH,KAAKxE,MACH4L,EAAWpH,KAAKrN,MAAMoT,YAnDH,GAmDiC/F,KAAKrN,MAAM2L,KAC/D+I,EAAmBjB,GAAoBgB,GACvCE,EAAsB,CAC1BC,QAAQ,GAAD,ODxE2B,GCwE3B,gBACPC,UAAWxH,KAAKrN,MAAMoT,YAAc,OAAS,SAC7ClF,OAAQsF,GAAciB,GD1EY,IC4EpC,OAAO,kBAAC,GAAD,CAAYvG,OAAQwG,EAAkBzG,eAAgBZ,KAAKY,eAAgBN,UAAWN,KAAKM,UAAWqB,UAAU,GAC3G,yBAAK5G,MAAOuM,GACR,yBAAKrG,UAAWC,KAAQuG,cACpB,kBAAC,IAAD,CAAM1M,MAAO,CACzB2M,QAAS,eACTC,eAAgB,OAChBC,YAAa,GACbtC,SAAU,WACVb,IAAK,OACJxB,GAAI,QACW,kBAAC4E,GAAD,OAEJ,kBAAC,GAAD,CAAQ/S,KAAMA,EAAMgQ,aAAcqC,EAAoBjC,gBAAiBlF,KAAK+G,qBAE/Eza,YAAQwH,GAAYZ,IAAIqB,GAAa,kBAAC,GAAD,CAAMiG,IAAKjG,EAAUtH,GAAIyV,MAAOnO,EAAUQ,YAAaP,QAASD,EAAUC,QAASb,YAAaY,EAAUtH,GAAIgJ,SAAU1B,EAAUtH,KAAOia,MAEnL,kBAAC,GAAD,CAAgBhE,QAASlD,KAAK8G,kBAAmBf,YAAa/F,KAAKrN,MAAMoT,YAAaC,SA1EzE,KA0EmFhG,KAAKxE,MAAMyC,aAM3H,MAOM6J,GAAqB,CACzBlH,eAAgBvC,GAChB8I,mBC3G6Bha,IAAK,CAClC4C,KLDwC,6BKExC5C,WD+Ha4a,mBAAW9M,YA/BFtI,IAAK,CAC3BmB,WAAYG,EAAkBtB,GAC9BmC,KAAMuP,GAAe1R,GACrBsL,SAAUC,GAAuBvL,GACjCuU,WAAYhR,EAAevD,KA2BsBmV,GAnBhC,CAACE,EAAYC,EAAeC,KAC7C,MAAMpU,EAAaM,OAAOC,OAAO3H,YAASsb,EAAWlU,aAC/CqU,EAAoBC,IAAUtU,EAAWQ,OAAOO,GAAKA,EAAEE,YAAYsT,cAAcjW,SAAS4V,EAAWlT,KAAKuT,gBAAiB,MAAO,eACxI,OAAO,mDAAKL,GACPE,GACAD,GAFL,IAGEnU,WAAY,IAAIqU,EAAkB7T,OAAOO,GAAKA,EAAEL,YAAa2T,EAAkB7T,OAAOO,IAAMA,EAAEL,aAaxEyG,CAAyDqL,KE5GpErL,mBARStI,IAAK,CAC3BsL,SAAUC,GAAuBvL,KAOpBsI,CAhBiBO,IAC9B,MAAM8C,EAAO9C,EAAMmG,SHLQ,EGKmBnG,EAAMyC,SAC9CqK,EAAYlC,GAAoB9H,GbLN,EaMhC,OAAO,yBAAK2C,UAAU,4BAA4BlG,MAAO,CACvDuN,iBCMWC,OAdiB,EAC9BxV,UACI,yBAAKgI,MAAO,CAChBwM,QAAS,YACTtB,UAAW,SACXzB,SAAU,OACVxJ,WAAY,IACZ+I,MAAOnC,IAAO4G,UAEPzV,G,qBCIM0V,OAZQ,EACrBC,WACI,kBAAC,IAAD,CAAUC,OAAK,EAACnO,IAAKkO,EAAO1C,UAAQ,EAACtD,MAAO,0BAAM3H,MAAO,CAC7DgJ,MAAOnC,IAAO8B,QACd1I,WAAY,QAEG0N,KCIFE,OAVI,EACjB3H,eACI,yBAAKA,UAAWA,EAAWqB,MAAM,6BAA6BiB,MAAM,KAAK1C,OAAO,KAAK2B,KAAMZ,IAAO4G,QAASjG,QAAQ,aACjH,0BAAM1N,EAAE,gBAAgB2N,KAAK,SAC7B,0BAAM3N,EAAE,wI,sBCChB,MAAMgU,GAAa,EACjB5X,SACI,uBAAGiS,QAAS4F,GAAKA,EAAErI,kBAAmBQ,UAAWC,KAAQ6H,WAAYhE,OAAO,SAASiE,IAAI,sBAAsBC,KAAMhY,GACnH,kBAACiY,GAAD,OAOFC,GAAe,IAAM,4BAAQlI,UAAWC,KAAQkI,cAAezY,IAAKC,EAAE,WAkC7DyY,OAhCS,EACtBtZ,OACA+E,OACAwU,WACArY,MACAsY,cAEA,MAAMC,EAAWrY,YAAYpB,GACvB0Z,EAAmB1Z,IAASjB,IAAgB4a,KAAaH,GAAW,kBAACC,EAAD,CAAUzO,MAAO,CACzFyH,KAAMZ,IAAO4G,WAEf,OAAO,kBAAC,IAAD,CAAUG,OAAK,EAACzF,QAASoG,EAAU5G,MAAO,yBAAKzB,UAAWC,KAAQyI,UACvD,yBAAK1I,UAAWC,KAAQwB,OACpB,0BAAM3H,MAAO,CAC7B6M,YAAa,QAEQ6B,GAEL,8BAAO3U,GACN7D,EAAM,kBAAC4X,GAAD,CAAY5X,IAAKA,IAAU,MAEtC,kBAACkY,GAAD,UCtCb,MAWMS,GAA+B,GAC/BC,GAAsB,CACjC5c,GAAI,GACJ6H,KAAM,GACNU,OAAQ,GACRR,YAAa,GACbU,eAAgB,GAChBoU,kBAAkB,GA6Hb,MAAMC,GAAwBpX,GAASA,EAAMqX,cAEvCC,GAAgBtX,IAAUkG,KAAQlG,EAAMqX,eACxCE,GAAyBvX,GAASoX,GAAsBpX,GAAOmX,iBAM/DK,GAAyBxX,GAASjG,YAASqd,GAAsBpX,IAAQ+C,e,cC1JtF,MAAMyD,GAAUnB,GAASC,QAAQC,IAAI,UAAWF,GAE1CoS,GAAgB,CAAC7V,EAAWI,KAChC,MAAM,KACJG,EADI,YAEJE,EAFI,eAGJU,GACEf,EAOJ,OANAJ,EAAUO,KAAOA,EACjBP,EAAUS,YAAcA,EACxBT,EAAUmB,eAAiBA,EAAexC,IAAIlG,GAAQoH,OAAOqN,OAAO,GAAIzU,EAAM,CAC5EuW,MAAOvW,EAAKqd,EACZxJ,OAAQ7T,EAAKsd,KAER/V,EAAUgW,OAAO1S,KAAK2S,GAAOA,EAAIC,SAASC,MCYtCC,GAAuB,MAClC5a,KFxBkC,yBE4CvB6a,GAAqB5d,IAChC,MAAM+C,EAAO/C,EAAK+C,YACX/C,EAAK+C,KACZ,MAAM8a,EAAe/a,IAAYC,GAAMU,SACjCxD,EAAK6d,yBACLC,EAAqBxX,YAAsBtG,GACjD,IAAI+d,EAEJ,GAAIjb,IAASJ,IAAW,CACtB,MAAMsb,EAAOje,EAAKie,MAAQ,EAC1BD,EAAQE,YAAsBD,EAAMje,EAAKme,eAEzCH,EADSjb,IAASH,IACVwb,cAEAC,IAGV,MAAO,CACLtb,KF1D8B,qBE2D9B5C,MAAM,qCACJF,KACA8C,OACAuV,SAAUtY,EAAKsY,UAAY,KAC3B,CAACuF,GAAe7d,EAAKkV,SAClBmJ,KACAN,GACAC,KAIIM,GAAwBte,IAAI,CACvC+C,KFrEmC,wBEsEnC5C,MAAOH,IAEIue,GAAwBpe,IAAK,CACxC4C,KF1EmC,wBE2EnC5C,UAGWqe,GAAiB,IAAM7T,MAAOU,EAAU2D,KACnD,MAAMzH,EAAYwV,GAAsB/N,KAClCyP,EAAe,2BAAQlX,GAAR,IACnBmB,eAAgB1C,EAAwBuB,EAAUmB,gBAClDZ,KAAMP,EAAUO,MAAQnE,IAAKC,EAAE,wBAGjC,IACE,MAAM+C,EAAc8X,EAAgBxe,SD7ET0H,EC6EoC8W,ED5E1D7T,yBAAcC,KAAKzJ,GACjBA,EAAG2L,OAAOjG,WAAWgE,IAAInD,EAAK1H,IAAI4K,KAAKtD,GAAa6V,GAAc7V,EAAWI,KACnFoD,MAAMoB,UAEkBxE,IACpBiD,yBAAcC,KAAKzJ,IACxB,MAAMmG,EAAYnG,EAAG2L,OAAOjG,WAAWwG,SACvC,OAAO8P,GAAc7V,EAAWI,KCqEwD+W,CAAcD,GAGtG,OAFApT,EArEgC,CAClCtI,KFxBkC,+BE6F1BsI,EAAS0D,GAA0BpI,IAClCoK,QAAQC,QAAQrK,GACvB,MAAOqE,GA1FKA,KACdC,QAAQC,IAAI,6BAA8BF,IA0FxCmB,CAAQnB,GDlFmBrD,OEjBlBgX,GAAc,CAAC,CAC1B1e,GAAI,aACJ2e,OAAQjb,IAAKC,EAAE,oBACfqC,MAAO,CAAC,CACNlD,KAAMN,IACNqF,KAAMnE,IAAKC,EAAE,YACbsR,QAAS,IACR,CACDnS,KAAMP,IACNsF,KAAMnE,IAAKC,EAAE,YACbsR,QAAS,QACR,CACDnS,KAAML,IACNoF,KAAMnE,IAAKC,EAAE,UACbsR,QAAS,OAIA2J,GAAmB,CAAC/c,IAAeG,IAAKC,IAAcC,IAAaI,IAAOF,IAASC,IAAWF,KAE9F0c,GAAgB,CAACzc,IAASC,IAAWC,K,0BCTlD,MAAMwc,WAA6BnM,YACjCC,YAAYrE,GACVsE,MAAMtE,GADW,KAOnBwQ,QAAUhf,GAAQ,KAChB,MAAM,KACJ+C,EADI,mBAEJ6a,EAFI,oBAGJqB,GACEjM,KAAKxE,MAET,GAAIzL,IAASX,IACXwb,EAAmB,CACjB7a,OACAmS,QAASlV,EAAKwN,UAEX,CACL,MAAM0R,EAAU,CACdjf,GAAID,EAAKC,GACT6H,KAAM9H,EAAK+H,aAAe/H,EAAK8H,MAG7BgX,GAAc1Z,SAASrC,GACzBkc,EAAoBlc,EAAMmc,GAE1BtB,EAAmB,CACjB7a,OACAmS,QAASgK,MA9BE,KAmCnBC,cAAgB,KACdnM,KAAKC,SAAS,CACZmM,SAAUpM,KAAKrN,MAAMyZ,UAEvBpM,KAAKxE,MAAM6Q,mBAAmBrM,KAAKxE,MAAMzL,OArCzCiQ,KAAKrN,MAAQ,CACXyZ,SAAS,GAuCb/K,SACE,MAAM,MACJqH,EADI,KAEJ3Y,EAFI,MAGJkD,EAHI,QAIJqZ,GACEtM,KAAKxE,MACT,OAAO,oCACK,kBAAC,GAAD,CAAgBkN,MAAOA,IACtBzV,EAAMC,IAAIlG,IACnB,MAAMuf,EAAUvb,YAAWjB,EAAM/C,EAAMgT,KAAKwM,QAAQpe,IACpD,OAAO,kBAAC,GAAD,CAAiBoM,IAAKxN,EAAKC,IAAMD,EAAKwN,IAAKzK,KAAMA,EAAMwZ,QAASxZ,IAASjB,IAAgB9B,EAAK+C,KAAOA,EAAM+E,KAAM9H,EAAK+H,aAAe/H,EAAK8H,KAAMwU,SAAUtJ,KAAKgM,QAAQhf,GAAOiE,IAAKsb,MAEjLD,EAAU,kBAAC,IAAD,CAAU3D,OAAK,EAACnO,IAAG,kBAAakO,GAASxF,QAASlD,KAAKmM,cAAezJ,MAAO,4BAAQzB,UAAWC,KAAQuL,gBAClGzM,KAAKrN,MAAMyZ,QAAUzb,IAAKC,EAAE,cAAgBD,IAAKC,EAAE,gBACxC,KAC5B,kBAAC,IAAD,CAAS8b,OAAO,cAehCX,GAAqBY,aAAe,CAClCve,GAAIwe,IAAU/d,OAAOge,YAER5R,mBAAQ,KAAM,CAC3B2P,sBACAqB,oBCzFiC,CAAClc,EAAMmS,IAAY,CAAC7J,EAAU2D,KAC/D,MAAMrJ,EAAQqJ,IACR8Q,EAAehd,IAAYC,GAAMU,SACjCiF,EAAiBqU,GAAsBpX,GAAO+C,eAC9CqX,EAAqBrX,EAAesX,UAAUhgB,GAAQA,EAAK+C,OAASA,GAC1E,IAAIkd,EAEAF,GAAsB,GACxBE,EAAgBvX,EAAeqX,GAC/BE,EAAcH,GAAc1V,KAAK8K,GACjC7J,EAASiT,GAAsB2B,MAE/BA,EAAgB,CACdld,KAAMA,EACNmS,QAAS,CAACA,IAEZ7J,EAASuS,GAAmBqC,ODuEjBhS,CAGZ8Q,IEhEY9Q,mBAAQ,KAAM,CAC3B2P,uBADa3P,CAvBiB,EAC9B2P,qBACAsC,eAEA,MAAMC,EAAiB,EACrBpd,OACAmS,aACI,KACJ0I,EAAmB,CACjB7a,OACAmS,aAIJ,OAAO,oCACG,kBAAC,GAAD,CAAgBwG,MAAOwE,EAAStB,SAC/BsB,EAASja,MAAMC,IAAIlG,GAAQ,kBAAC,GAAD,CAAiBwN,IAAKxN,EAAK+C,KAAMA,KAAM/C,EAAK+C,KAAM+E,KAAM9H,EAAK8H,KAAMwU,SAAU6D,EAAengB,S,QCXpI,MAAMogB,GAAkB5R,GAAS,kBAAC,IAAD,CAAY1G,KAAK,wBAAwB4N,MAAO/R,IAAKC,EAAE,6CAA8Cb,KAAK,OAAO0V,SAAUjK,EAAMiK,SAAU4H,QAAS7R,EAAM6R,QAASlgB,MAAOqO,EAAMrO,QAEjN,MAAMmgB,WAAqB3N,IAAMC,UAC/BC,YAAYrE,GACVsE,MAAMtE,GADW,KAWnB+R,UAAY,KACVvN,KAAKC,SAAS,CACZvH,MAAM,EACNpE,OAAQ,MAdO,KAiBnBkZ,SAAW,CAACC,EAAGlN,KACbP,KAAK0N,aACL1N,KAAKC,SAAS,CACZ0N,SAAUpN,EAAMqN,cAChBlV,MAAM,KArBS,KAwBnBmV,UAAY,CAACJ,EAAGlN,KACdP,KAAKC,SAAS,CACZ3L,OAAQiM,EAAMwE,OAAO5X,OACpB6S,KAAK0N,aA3BS,KA6BnBI,yBAA2B,IAAMjC,GAAiBvX,OAAOvE,IACvD,MAAME,EAAWH,IAAYC,GAC7B,OAAOiQ,KAAKrN,MAAMM,OAAS+M,KAAKrN,MAAMM,MAAMhD,EAASO,gBACpD0C,IAAInD,IACL,MAAME,EAAWH,IAAYC,GACvBge,EAAY3d,YAAoBL,GAChCie,EAAWhO,KAAKrN,MAAMM,MAAMhD,EAASO,cACrC8b,EAAU0B,EAASrY,OAASoY,EAC5B9a,EAAQ+M,KAAKrN,MAAMsb,WAAW7T,IAAInK,EAAShD,IAAM+gB,EAAWA,EAASrf,MAAM,EAAGof,GACpF,OAAO,kBAAC,GAAD,CAAsBvT,IAAKzK,EAAMA,KAAMA,EAAM2Y,MAAOzY,EAASS,YAAauC,MAAOA,EAAOoZ,mBAAoBrM,KAAK0N,WAAYpB,QAASA,MAtC5H,KAwCnB4B,qBAAuB,IAAMvC,GAAYzY,IAAIga,GAAY,kBAAC,GAAD,CAAkB1S,IAAK0S,EAASjgB,GAAIigB,SAAUA,KAxCpF,KAyCnBiB,cAAgB,IAAMnO,KAAK8N,2BAA2BM,OAAOpO,KAAKkO,wBAzC/C,KA0CnBR,WAAa/V,UACX,GAAI5H,EAAM,CACR,MAAMke,EAAajO,KAAKrN,MAAMsb,WAE1BA,EAAW7T,IAAIrK,GACjBke,EAAWvQ,OAAO3N,GAElBke,EAAWI,IAAIte,GAGjBiQ,KAAKC,SAAS,CACZgO,oBAGFjO,KAAKC,SAAS,CACZgO,WAAY,IAAIK,MAIpB,IAAIC,EAAc,YAEd,IAAIvO,KAAKrN,MAAMsb,WAAW5Z,UAAUsB,SACtC4Y,GAAe,QAAU,IAAIvO,KAAKrN,MAAMsb,WAAW5Z,UAAUiB,KAAK,UAGpE,MAAMhB,EAAS0L,KAAKrN,MAAM2B,OAAX,WAAwB0L,KAAKrN,MAAM2B,QAAW,GAC7D0L,KAAKwM,QAAQpe,GAAGE,IAAIC,SAASuJ,IAA7B,sBAAgDxD,GAAhD,OAAyDia,IAAe1W,KAAK4S,GAAYzK,KAAKC,SAAS,CACrGhN,MAAOwX,KACL1S,MAAME,QAAQD,QApElBgI,KAAKrN,MAAQ,CACXgb,SAAU,KACVjV,MAAM,EACNuV,WAAY,IAAIK,IAChBrb,WAAO/E,EACPoG,OAAQ,IAkEZ+M,SACE,OAAO,oCACK,kBAAC+L,GAAD,CAAiBjgB,MAAO6S,KAAKrN,MAAM2B,OAAQmR,SAAUzF,KAAK6N,UAAWR,QAASrN,KAAKwN,WACnF,kBAAC,KAAD,CAASvM,UAAU,0BAA0BvI,KAAMsH,KAAKrN,MAAM+F,KAAMiD,QAASqE,KAAKuN,UAAWI,SAAU3N,KAAKrN,MAAMgb,SAAUa,aAAc,CAClJC,WAAY,OACZC,SAAU,UACTC,gBAAiB,CAClBF,WAAY,OACZC,SAAU,OACT3T,MAAO,CACR8F,OAAQ,QACP+N,WAAY,CACb7T,MAAO,CACLwI,MAAO,UAERsL,kBAAkB,EAAMC,qBAAqB,EAAMC,qBAAqB,GAC7D,kBAAC,IAAD,CAAMC,SAAU,SAAUhP,KAAKmO,oBAYnDb,GAAaX,aAAe,CAC1Bve,GAAIwe,IAAU/d,OAAOge,YAERS,U,sBC5GR,MAAM2B,GAAe,EAC1Bna,OACAE,cACAka,gBACAC,yBAUO,6BAASlO,UAAWC,KAAQkO,SACzB,yBAAKnO,UAAWC,KAAQmO,kBACpB,kBAAC,IAAD,CAAYpO,UAAWC,KAAQwH,MAAO5T,KAAK,wBAAwB4N,MAAO/R,IAAKC,EAAE,mBAAoBb,KAAK,OAAO0V,SAV3G,CAACgI,EAAG3E,KACtBoG,EAAcpG,EAAE/D,OAAO5X,QAS6HA,MAAO2H,EAAM0Q,YAAa7U,IAAKC,EAAE,wBACzK,kBAAC,IAAD,CAAeqQ,UAAWC,KAAQlM,YAAaF,KAAK,8BAA8B4N,MAAO/R,IAAKC,EAAE,yBAA0B6U,SAP9G,CAACgI,EAAG3E,KAC5BqG,EAAoBrG,EAAE/D,OAAO5X,QAMsIA,MAAO6H,KAElK,yBAAKiM,UAAWC,KAAQoO,cACpB,kBAAC,GAAD,QAUhBL,GAAa7M,aAAe,CAC1BtN,KAAM,GACNE,YAAa,IAGf,MAQM8S,GAAqB,CACzBoH,cNjBiC/hB,IAAK,CACtC4C,KF/B4B,iBEgC5B5C,UMgBAgiB,oBNduChiB,IAAK,CAC5C4C,KFlCkC,uBEmClC5C,WMca8N,mBAZStI,IACtB,MAAM4c,EAAoB7iB,YAASqd,GAAsBpX,IACzD,MAAO,CACLmC,KAAMya,EAAkBza,KACxBE,YAAaua,EAAkBva,cAQK8S,GAAzB7M,CAA6CgU,I,4CCvDrD,MAAMO,GAAY,IAAM,yBAAK3O,OAAO,KAAK0B,QAAQ,YAAYgB,MAAM,KAAKjB,MAAM,8BAC7E,0BAAMzN,EAAE,wOAAwO2N,KAAK,aAEhPiN,GAAe,IAAM,yBAAK5O,OAAO,KAAK0B,QAAQ,YAAYgB,MAAM,KAAKjB,MAAM,6BAA6BvH,MAAO,CAC1H2R,OAAQ,kBAGF,0BAAM7X,EAAE,kIAAkI2N,KAAK,UAAUkN,SAAS,UAAUC,UAAU,sBAEjLC,GAAU,IAAM,yBAAKtN,MAAM,6BAA6BzB,OAAO,KAAK0B,QAAQ,YAAYgB,MAAM,KAAKf,KAAMZ,IAAO4G,SACrH,0BAAM3T,EAAE,gBAAgB2N,KAAK,SAC7B,0BAAM3N,EAAE,wD,0BCPhB,MAAMgb,WAAqBjQ,YAAW,eAAD,oBACnCkQ,UAAY7iB,GAAM,IAAM+S,KAAKxE,MAAMsU,UAAU7iB,GAE7C8iB,sBACE,MAAM,oBACJjR,EADI,UAEJxH,EAFI,cAGJ0Y,GACEhQ,KAAKxE,MACHyU,EAAW3Y,EAAUrK,GACrBijB,EAAc,CAClB9hB,GAAI4R,KAAKwM,QAAQpe,GACjB+hB,SAAUnQ,KAAKxE,MAAM2U,SACrBC,WAAYpQ,KAAKxE,MAAM4U,WACvBC,UAAWrQ,KAAKxE,MAAM6U,WAGxB,OAAQJ,GACN,KAAK1Z,KAED,OAAO,kBAAC,KAAD,CAAiB+Z,gBAAiBN,EAAeG,SAAUD,EAAYC,WAGlF,KAAK3Z,KACH,OAAO,kBAAC,KAAD,eAAkBsI,oBAAqBA,EAAqByR,QAASP,GAAmBE,IAEjG,QACE,OAAO,kBAAC,KAAD,CAAkBF,cAAeA,EAAeQ,YAAaP,EAAUE,SAAUD,EAAYC,SAAU3D,QAAS0D,EAAY9hB,MAIzIiT,SACE,MAAM,UACJ/J,EADI,QAEJqE,GACEqE,KAAKxE,MACHyU,EAAW3Y,EAAUrK,GAC3B,OAAO,oCACMgjB,GAAY,kBAAC,IAAD,CAAOtU,QAASA,EAAS2J,SAAS,MAAMmL,OAAK,GAClD,kBAAC,IAAD,KAAanZ,EAAUxC,MACvB,kBAAC,IAAD,KACKkL,KAAK+P,uBAEV,kBAAC,IAAD,KACI,kBAAC,IAAD,KACI,kBAAC,IAAD,CAAQW,WAAS,EAACxN,QAASvH,GACtBhL,IAAKC,EAAE,WAEZ,kBAAC,IAAD,CAAQ+f,SAAO,EAACzN,QAASlD,KAAK8P,UAAUG,IACnCtf,IAAKC,EAAE,iBAoB5Cif,GAAalD,aAAe,CAC1Bve,GAAIwe,IAAU/d,QAEDghB,UC9ER,MAEMe,GAAuC,GAiB7C,MAAMC,GAA2Ble,GAASA,EAAMme,qBClB1CC,GAA4B5jB,IAAK,CAC5C4C,KDFwC,6BCGxC5C,UC8Ga8N,mBAnBStI,IAAK,CAC3BmM,oBAAqBI,GAAgCvM,GACrD2E,UAAWuZ,GAAyBle,GACpC+D,WAAYD,GAAe9D,GAC3Bqe,uBAAwBpa,GAAoBjE,GAC5Cse,mBAAoBna,GAAgBnE,KAcE,CACtCue,0BD7GyC,MACzCnhB,KDL0C,iCEkH1CohB,wBAAyBJ,GACzBK,cpDjH6B9c,IAAM,CACnCvE,KDA6B,kBCC7BuE,WoDgHA+c,iBAAkB9Z,IAJL0D,CAlGQO,IACrB,MAAO8V,EAAaC,GAAkBC,oBAAS,IACxCta,EAASua,GAAcD,mBAAShW,EAAMwV,wBACvCU,EAAMC,iBAAO,MAEbC,EAAa,IAAML,GAAe,GAElCM,EAAgB,KACpBD,IACApW,EAAM0V,6BAsDR,OAAO,oCACG,0BAAMQ,IAAKA,GACP,kBAAC,IAAD,CAAQxO,QAAS,IAAMqO,GAAe,IACjC5gB,IAAKC,EAAE,cACR,kBAAC,KAAD,QAGP0gB,GAAe,kBAAC,IAAD,CAASQ,eAAgBF,EAAYG,UAAWL,EAAKM,OAAO,EAAMC,UAAU,gBACpF,kBAAC,KAAD,CAAiBlX,MAAO,CACpCwI,MAAO,SACN7M,WAAY8E,EAAM9E,WAAYwb,iBA7DbjlB,IACtBuO,EAAM2V,wBAAwB3V,EAAM9E,WAAWW,KAAKC,GAAaA,EAAUrK,KAAOA,KA4DZklB,YAAa3W,EAAMyV,sBAEhFzV,EAAMlE,UAAY,kBAAC,GAAD,CAAcwH,oBAAqBtD,EAAMsD,oBAAqBxH,UAAWkE,EAAMlE,UAAW0Y,cAAe9Y,EAAQsE,EAAMlE,UAAUrK,KAAO,GAAIkjB,SA3DnJ,EACpBK,cACAvd,YAEAwe,EAAW,2BAAKva,GAAN,IACR,CAACsZ,GAAcvd,MAsD+Kmd,WAlD1K,EACtBI,cACA4B,sBAEA,MACMC,GADUnb,EAAQsZ,IAAgB,IAChBlc,OAAOtH,IAASolB,EAAgBhgB,SAASpF,EAAKC,KAChEmQ,EAAOiV,EAAQ1c,OAAS0c,EAAU,GACxCZ,EAAW,2BAAKva,GAAN,IACR,CAACsZ,GAAcpT,MA0C4MiT,UAtCxM,EACrBG,cACA8B,cAEA,MAAMC,EAAUrb,EAAQsZ,IAAgB,GAClCgC,EAAgBF,EAAQpf,IAAIjG,GAAMslB,EAAQlb,KAAKrK,GAAQA,EAAKC,KAAOA,IACzEwkB,EAAW,2BAAKva,GAAN,IACR,CAACsZ,GAAcgC,MA+BuO7W,QAASkW,EAAe/B,UA3B/P7iB,IACjB,MAAMwlB,EAAcvb,EAAQjK,GAExBwlB,GAAeA,EAAY9c,OAC7B6F,EAAM4V,cAAc,CAClBnkB,KACAE,MAAO,IAAIslB,KAGbjX,EAAM6V,iBAAiBpkB,GAGzB4kB,OAe4S,Q,sBCzEhT,MAAMa,GAAgB/S,IAAMgT,KAAK,IAAM,8CACjCC,GAAuBjT,IAAMgT,KAAK,IAAM,sCAExCE,GAAe,CAACrX,EAAOgR,KAC3B,MAAOsG,EAAmBC,GAAwBvB,oBAAS,IACpDwB,EAAqBC,GAA0BzB,oBAAS,IACxD0B,EAAaC,GAAkB3B,mBAAS,OACxC4B,EAAwBC,GAA6B7B,oBAAS,IAC/D,GACJvkB,EADI,KAEJ6H,EAFI,YAGJE,EAHI,OAIJQ,EAJI,MAKJuF,EALI,gBAMJhF,EANI,QAOJvB,EAPI,yBAQJ8e,EARI,sBASJC,GACE/X,EAEEgY,EAAsB,KAC1BH,GAA0B,GAC1BJ,GAAwBD,IAGpBS,EAAoB,IAAMV,GAAsBD,GAMhDY,EAAatf,OAAOqN,OAAO,GAAI1G,EAAM2N,MAAO,CAChDiL,OAAQ,UACRC,WAAY,OACZnP,IAAK,QAEDpC,EAAW7N,EAAUuO,KAAO8Q,KAElC,GAAIX,EACF,OAAO,kBAAC,IAAD,CAAUjQ,GAAIiQ,IAGvB,MAAMY,EAA2B/d,EAAkBpF,IAAKC,EAAE,oBAAsBD,IAAKC,EAAE,oBAOjFmjB,EAA8Bvf,EAAU7D,IAAKC,EAAE,oBAAsBD,IAAKC,EAAE,kBAO5EojB,EAAYC,sBAClB,OAAO,oCACG,yBAAKhT,UAAWC,KAAQgT,UACpB,0BAAMnZ,MAAO2Y,GAAa5e,GAC1B,yBAAKmM,UAAWC,KAAQiT,SACpB,yBAAKlT,UAAWC,KAAQkT,aAAclR,QAASoQ,GAC3C,kBAACjR,EAAD,CAAUtH,MAAO,CAC7ByH,KAAMZ,IAAO4G,YAGL,yBAAKvH,UAAWC,KAAQmT,OACnB7e,EAAO8e,OAAS,kBAAC,IAAD,CAAMrT,UAAWC,KAAQqT,SAAUtR,GAAE,WAAMhW,EAAN,UAC9C,kBAAC,IAAD,KAAS0D,IAAKC,EAAE,UACV,KACb4E,EAAOgf,OAAS,kBAAC,IAAD,CAAQtR,QAASsQ,GACzB7iB,IAAKC,EAAE,UACA,KAChB,kBAAC,GAAD,MACA,0BAAM8gB,IAAKsC,GACP,kBAAC,IAAD,CAAQ9Q,QAASuQ,GACb,kBAACjE,GAAD,MACA,0BAAMzU,MAAO,CAC7B0Z,WAAY,QAES9jB,IAAKC,EAAE,YAKvBkiB,GAAqB,kBAAC,IAAD,CAASf,UAAWiC,EAAW/B,UAAU,eAAeH,eAAgB2B,GACtF,kBAAC,IAAD,KACI,kBAAC,IAAD,CAAU9K,OAAK,EAACjG,MAAOqR,EAA6B7Q,QApCnD,KAC7BoQ,IACAG,OAmC4B,kBAAC,IAAD,CAAU9K,OAAK,EAACjG,MAAOoR,EAA0B5Q,QA5CnD,KAC1BqQ,IACAE,OA2C4B,kBAAC,IAAD,CAAU9K,OAAK,EAACjG,MAAO/R,IAAKC,EAAE,UAC1B,kBAAC,IAAD,CAAU+X,OAAK,EAACjG,MAAO/R,IAAKC,EAAE,oBAAqBsS,QA/DjE,IAAMiQ,EAAe,GAAD,OAAIlmB,EAAJ,mBAgEN,kBAAC,IAAD,CAAU0b,OAAK,EAACjG,MAAO/R,IAAKC,EAAE,qBAAsBsS,QA9DpE,IAAMiQ,EAAe,GAAD,OAAIlmB,EAAJ,sBAoE3B8I,EAAkB,yBAAKkL,UAAU,wBAAwBlG,MAAO3G,OAAOqN,OAAO,CACrFiT,WAAY,MACZ3S,cAAe,OACdhH,EAAM/F,YAAcA,EAEnB,GAFiC,CACnC+O,MAAO,UAEQ/O,GAAerE,IAAKC,EAAE,mBAClB,KACZ3D,GAAMmmB,EAAyB,kBAAC,WAAD,CAAUuB,SAAU,6CAC5C,kBAAC/B,GAAD,CAAsBla,KAAMsa,IAC5B,kBAACN,GAAD,CAAetkB,GAAIoe,EAAQpe,GAAInB,GAAIA,EAAI8C,KAAK,YAAY2I,KAAMsa,EAAqB4B,eAAgBpB,KACzF,OAe9BX,GAAazQ,aAAe,CAC1BtN,KAAM,GACNE,YAAa,GACbR,SAAS,EACTuB,iBAAiB,GAEnB8c,GAAalG,aAAe,CAC1Bve,GAAIwe,IAAU/d,QAiCDoM,mBA9BStI,IACtB,MAAM1F,EAAKiJ,EAAevD,GACpB4B,EAAY7H,YAASqH,EAAkBpB,EAAO1F,IACpD,MAAO,CACLA,KACA6H,KAAMP,EAAUQ,YAChBC,YAAaT,EAAUU,mBACvBS,eAAgBxB,EAAmBvB,GACnCoD,gBAAiBK,EAA4BzD,GAC7C6B,QAASD,EAAUC,QACnBgB,OAAQ9I,YAAS6H,EAAUiB,UAoBS,KAhBrB,CAACwS,EAAYC,EAAeC,KAC7C,MAAM,GACJjb,EADI,QAEJuH,EAFI,gBAGJuB,GACEiS,GACE,SACJ3P,GACE4P,EACJ,OAAO,uCAAKD,GACPE,GADL,IAEEoL,yBAA0B,IAAMjb,EAASkF,GAAetQ,GAAKuH,IAC7D+e,sBAAuB,IAAMlb,EAAS2E,IAAwBjH,OAInDkF,CAA2C4X,I,QC9K1D,MAAM9X,GAAQ,CACZ2N,MAAO,CACLpD,SAAU,WACVd,SAAU,GACVxJ,WAAY,IACZ+I,MAAOnC,IAAOiT,MACdC,SAAU,IAEZ9f,YAAa,CACXwP,SAAU,GACVT,MAAOnC,IAAO8B,UAiBHqR,OAbE,EACfC,UAEO,yBAAK/T,UAAU,mBAAmBlG,MAAO,CAC9CwM,QAAS,uBAEAyN,EAAO,kBAAC,GAAD,CAAcja,MAAOA,KAAY,kBAAC,GAAD,CAAcA,MAAOA,M,sDCZ1E,MAAMka,WAAsBrV,YAG1BC,YAAYrE,EAAOgR,GACjB1M,MAAMtE,GADoB,KAF5B0Z,kBAAoB,KAEQ,KAK5BC,mBAAqBC,IAMnB,MAAMC,EAAgBrV,KAAKxE,MAAMxO,OAASooB,EAAUpoB,KAC9CsoB,EAAiBF,EAAUve,cAAgBmJ,KAAKxE,MAAM3E,YACtD0e,EAAM7oB,YAASsT,KAAKxE,MAAMga,eAC1BC,EAAU/oB,YAAS0oB,EAAUI,eAC7BE,EAAaH,EAAItoB,KAAOwoB,EAAQxoB,IAAMsoB,EAAII,aAAeF,EAAQE,WACvE,OAAON,IAAkBK,GAAcJ,IAhBb,KAkB5BM,aAAeR,IACb,GAAIS,KAAgC7V,KAAKxE,MAAMxO,KAAMgT,KAAKxE,MAAMga,gBAAkBxV,KAAKmV,mBAAmBC,GAAY,CACpH,MAAMK,EAAU/oB,YAAS0oB,EAAUI,eAC7BM,EAAa9V,KAAKxE,MAAMga,cACxBO,EAAgBD,EAAWH,aAAeF,EAAQE,YAAcG,EAAWH,aAAe3V,KAAKxE,MAAMxO,KAAK+C,MAE5GgmB,GAAiB/V,KAAKxE,MAAM3E,cAAgBue,EAAUve,eACxDgf,KAAsB7V,KAAKxE,MAAMxO,KAAMyoB,EAAQE,YAAc3V,KAAKxE,MAAMxO,KAAK+C,MAC7E8lB,KAAmB7V,KAAKxE,MAAMxO,KAAMgT,KAAKxE,MAAMga,cAAe,CAC5DQ,YAAahW,KAAKkV,kBAClBS,WAAYI,EAAgBD,EAAWH,WAAa,UA5BhC,KAkD5BM,cAAgB,IAAMjW,KAAKxE,MAAMga,cAAcG,YAAc3V,KAAKxE,MAAMxO,KAAK+C,KAhD3EiQ,KAAK5R,GAAKoe,EAAQpe,GAgCpB6Y,oBA5CwB7Y,MA6CtB4R,KAAKkV,mBA7CiB9mB,EA6CqB4R,KAAK5R,GA5C3C,CACLK,QAASN,YAAWC,GACpB8nB,KAAM9nB,EAAGE,IAAIC,SAAS4nB,eAAeC,gBA4CjCP,KAAgC7V,KAAKxE,MAAMxO,KAAMgT,KAAKxE,MAAMga,gBAC9DK,KAAmB7V,KAAKxE,MAAMxO,KAAMgT,KAAKxE,MAAMga,cAAe,CAC5DQ,YAAahW,KAAKkV,kBAClBS,WAAY3V,KAAKxE,MAAMua,cAAgB/V,KAAKiW,gBAAkB,KAC9DI,QAASrW,KAAKxE,MAAM6a,UAK1BC,mBAAmBlB,GACjBpV,KAAK4V,aAAaR,GAKpB/T,SACE,MAAM,QACJH,EADI,KAEJlU,EAFI,cAGJwoB,EAHI,MAIJza,GACEiF,KAAKxE,MAET,OAD0Bqa,KAAgC7oB,EAAMwoB,GACrC,yBAAKvoB,GAAIspB,YAAiBvpB,EAAKC,IAAK8N,MAAOA,IAAY,yBAAKkG,UAAWC,EAAQsV,SAC7F7lB,IAAKC,EAAE,6CAMxBqkB,GAActI,aAAe,CAC3Bve,GAAIwe,IAAU/d,QAWhBomB,GAAc7S,aAAe,CAC3BrH,MAAO,GACP/N,KAAM,GACN6J,YAAa,GACbwf,QAAS,GACTb,cAAe,IAEFP,U,sBCjGf,MAAMwB,WAA2B9W,IAAMC,UACrCC,YAAYrE,GACVsE,MAAMtE,GACNwE,KAAKrN,MAAQ,CACX+jB,YAAY,GAIhBC,kBAAkB3e,EAAO4e,GACvB5W,KAAKC,SAAS,CACZyW,YAAY,IAEdze,QAAQC,IAAI,UAAWF,GACvBC,QAAQC,IAAI,SAAU0e,GAGxBvV,SACE,OAAIrB,KAAKrN,MAAM+jB,WACN,uBAAGzV,UAAWC,KAAQ2V,WACf,0BAAM5V,UAAWC,KAAQ4B,MACrB,kBAAC8M,GAAD,OAEJ,0BAAM3O,UAAWC,KAAQ1I,SACpB7H,IAAKC,EAAE,qDAKrBoP,KAAKxE,MAAM2G,UAQPsU,U,+BC7BAK,OATS,EACtBC,mBAEOA,EAAgB,yBAAK9V,UAAWC,KAAQ8V,iBAAkBD,GAAuB,K,4CCW3EE,OAXU,EACvB/T,aACI,4BAAQnT,KAAK,SAASkR,UAAWC,KAAQgW,iBAAkBhU,QAASA,EAASwF,MAAO/X,IAAKC,EAAL,gBAClF,kBAAC,KAAD,CAAYmK,MAAO,CACvByH,KAAMZ,IAAOuV,WCJjB,MAeMrP,GAAqB,CACzByD,0BAEatQ,mBAAQ,KAAM6M,GAAd7M,CAlBS,EACtBmc,SACA7L,2BAIO,yBAAKtK,UAAWC,KAAQ8V,iBACrB,kBAAC,GAAD,CAAkB9T,QAHH,IAAMqI,EAAsB6L,OCHxCC,OALK,IAAM,yBAAK/U,MAAM,6BAA6BzB,OAAO,KAAK0B,QAAQ,YAAYgB,MAAM,KAAKf,KAAMZ,IAAO4G,SAClH,0BAAM3T,EAAE,gBAAgB2N,KAAK,SAC7B,0BAAM3N,EAAE,sG,sBCODyiB,OANM,IAAM,yBAAKrW,UAAWC,KAAQqW,SAC3C,kBAAC,IAAD,CAASrV,QAASvR,IAAKC,EAAE,mDAAoDqhB,UAAU,UACnF,kBAACuF,GAAD,QCCZ,MAUMC,GAAa9X,IAAM+X,WAAW,CAAC,EAKlChG,KAAS,IALyB,cACnCiG,EADmC,MAEnCjP,EAFmC,YAGnCkP,GAES,EADNC,EACM,wDACT,MAAMC,EAhBkBF,KACjB,CACL,KAAQd,GACR,CAAChlB,GAAOimB,GACR,CAAC9lB,GAAe2lB,EAAcI,GAAgB,OAYhCC,CAAkBL,GAAaD,GAC/C,OAAO,yBAAK1W,UAAWC,KAAQgX,eAAgBxG,IAAKA,GACtC,uBAAGzQ,UAAWC,KAAQiX,WAAYzP,GACjCoP,EAAU,kBAACA,EAAYD,GAAW,QAGnDJ,GAAW1iB,YAAc,aAMVkG,mBAAQ,KAAM,KAAM,KAAM,CACvCyc,YAAY,GADCzc,CAEZwc,I,qFC1BH,MAAMW,GAAW,CACf5V,KAAMZ,IAAO4G,SAmFA6P,OAhFW7c,IACxB,MAAOmS,EAAU2K,GAAe9G,mBAAS,OACnC,KACJxkB,EADI,cAEJwoB,EAFI,mBAGJ+C,EAHI,GAIJnqB,EAJI,WAKJunB,GACEna,EACEgd,EAAgBroB,YAAoBnD,EAAK+C,MAEzC0oB,EAAc,KAClBC,IACAH,EAAmBC,EAAgBtpB,IAAeH,MAG9C4pB,EAAc,KAClBD,IACAH,EAAmBC,EAAgBrpB,IAAcH,MAG7C4pB,EAAY,KAChBF,IACAH,EAAmBtpB,MAefypB,EAAc,IAAMJ,EAAY,MAEhCvoB,EAAOylB,EAAczlB,MAAQ/C,EAAK+C,KAClC8oB,GAAaC,aAAc/oB,KAAUgpB,aAAehpB,IAASA,IAASipB,MAAkBjpB,IAASkpB,KACjGC,EAA0B1d,EAAM2d,aAAexoB,IAAKC,EAAL,oCAA6CD,IAAKC,EAAL,oCAE5FwoB,EAAkB,IAAM,oCACnBzD,IAAe3mB,KAAS2mB,IAAexmB,KAAe,kBAAC,IAAD,CAAUwZ,OAAK,EAACjG,MAAO/R,IAAKC,EAAE,iBAAkBsS,QAASyV,EAAa7V,KAAM,kBAAC,KAAD,CAAW/H,MAAOqd,OACpJzC,IAAe5mB,KAAgB4mB,IAAezmB,KAAgB,kBAAC,IAAD,CAAUyZ,OAAK,EAACjG,MAAO/R,IAAKC,EAAE,iBAAkBsS,QAASuV,EAAa3V,KAAM,kBAAC,KAAD,CAAW/H,MAAOqd,OApB1IpoB,YAAWhD,EAAK+C,OAqBd4lB,IAAe1mB,KAAO,kBAAC,IAAD,CAAU0Z,OAAK,EAACjG,MAAO/R,IAAKC,EAAE,eAAgBsS,QAAS0V,EAAW9V,KAAM,kBAAC,KAAD,CAAS/H,MAAOqd,QAG7I,OAAOiB,aAAkBrsB,EAAMwoB,GAAiB,oCACtC,kBAAC,IAAD,CAAQ8D,OAAK,EAAC5I,WAAS,EAACxN,QAvBV,CAACuK,EAAGlN,IAAU+X,EAAY/X,EAAMqN,gBAwB1C,kBAAC4B,GAAD,OAEH7B,GAAY,kBAAC,KAAD,CAASjV,KAAM6gB,QAAQ5L,GAAWhS,QAAS+c,EAAa/K,SAAUA,GACvE,kBAAC,IAAD,KACKkL,GAAa,oCACN,kBAACO,EAAD,MACA,kBAAC,IAAD,OAER,kBAAC,IAAD,CAAUzQ,OAAK,EAAC7F,KAAM,kBAAC,KAAD,CAAY/H,MAAO,CACvDyH,KAAM,aACDE,MAAO/R,IAAKC,EAAE,0BAA2B,CAC9CL,QAASD,YAAWtD,EAAK+C,QACvBkZ,KAAMuQ,aAAQxsB,EAAMoB,GAAK2W,OAAO,WACpB,kBAAC,IAAD,CAAU4D,OAAK,EAAC7F,KAAM,kBAAC2M,GAAD,MAAkB/M,MAAOwW,EAAyBhW,QAnC5D,KAChC1H,EAAMie,iBAEW,OAAb9L,GACF+K,UAkCQ,M,sBChFd,MAAM3d,GAAQ,CACZ2e,gBAAiB,CACflS,UAAW,OACX3G,OAAQ,SAEV8Y,KAAM,CACJjN,OAAQ,eACR7L,OAAQ,MACR+Y,OAAQ,OACRlY,gBAAiBE,IAAOiY,UAI5B,MAAMC,WAAmBla,YACvByB,SACE,MAAM0Y,EAAWC,aAAMha,KAAKxE,MAAMxO,MAClC,OAAO,yBAAKiU,UAAU,yBACV,wBAAIlG,MAAOA,GAAM4e,OACjB,yBAAK5e,MAAOA,GAAM2e,iBACd,kBAAC,KAAD,CAA0BtrB,GAAI4R,KAAKwM,QAAQpe,GAAIpB,KAAMgT,KAAKxE,MAAMxO,KAAM+C,KAAMiQ,KAAKxE,MAAMxO,KAAK+C,KAAKsY,cAAepb,GAAI8sB,EAAUxpB,QAAQ,iBAO1JupB,GAAWnN,aAAe,CACxBve,GAAIwe,IAAU/d,OAAOge,YAKRiN,U,sBC3BAG,OANK,IACX,yBAAKhZ,UAAWC,KAAQgZ,QACrB,kBAAC,IAAD,OCWGC,OAdIC,IACjB,IAAIC,OAAWnsB,EACXosB,OAAYpsB,EAChB,MAAO,IAAIqsB,KACLF,GAAYE,EAAK5kB,SAAW0kB,EAAS1kB,QAAU4kB,EAAKC,MAAM,CAACC,EAAKC,IAAMD,IAAQJ,EAASK,MAI3FL,EAAWE,EACXD,EAAYF,KAAMG,IAJTD,I,sBCaN,MAAMK,WAAa/a,YAOxBC,YAAYrE,EAAOgR,GACjB1M,MAAMtE,GADoB,KAN5B7I,MAAQ,CACNioB,YAAY,EACZC,cAAc,EACdC,gBAAgB,GAGU,KA0B5BC,aAAe,CAACvF,EAAete,KAC7B,IAAK9C,OAAO2C,KAAKG,GAASvB,OACxB,OAAO6f,EAIT,MAAMwF,EAAUxF,EAAclX,KAAKpL,IAAInG,GAAG,eAAUA,IAE9CkuB,EAAazF,EAAc0F,QAAQhoB,IAAInG,GAAG,eAAUA,IAEpDouB,EAAa3F,EAActe,QAAQhE,IAAInG,GAAG,eAAUA,IAkB1D,OAhBAqH,OAAO2C,KAAKG,GAASyF,QAAQ6T,IAC3B,GAAItZ,EAAQsZ,GAAc,CACxB,IAAI4K,GAAiB,EACrB,CAACJ,EAASC,EAAYE,GAAYxe,QAAQ0e,GAAoBA,EAAiB/mB,OAAOvH,GAAOA,EAAIuK,YAAckZ,GAAa7T,QAAQ5P,IAClIquB,GAAiB,EACjBruB,EAAIkG,MAAQiE,EAAQsZ,MAGjB4K,GACHD,EAAW/jB,KAAK,CACdE,UAAWkZ,EACXvd,MAAOiE,EAAQsZ,QAKhB,2BAAKgF,GAAZ,IACElX,KAAM0c,EACNE,QAASD,EACT/jB,QAASikB,KAzDe,KA4D5BG,aAAenB,GAAW,IAAMoB,QA5DJ,KA6D5BrG,kBAAoB,KA7DQ,KA8D5BsG,mBAAqB,KACnB,MAAM7F,EAAa3V,KAAKiW,gBAClBT,EAAgBxV,KAAKyb,+BAA+Bzb,KAAKxE,MAAMga,cAAexV,KAAKxE,MAAMxO,KAAK+C,KAAM4lB,GAE1G,IAAKH,EACH,OAAO,yBAAKvU,UAAWC,KAAQsV,SAChB7lB,IAAKC,EAAE,uBAIxB,MAAM8qB,EAAmB1b,KAAKxE,MAAMxO,KAAK2uB,eAAiB3b,KAAK4b,UAAUC,QAAQC,aLlFjD,GKkFuFC,GACjHvgB,EAAK,2BAAQwE,KAAKxE,OAAb,IACTua,eAAgB7jB,EAAW8N,KAAKxE,MAAMmc,eACtCnC,gBACAtU,aACAnG,MAAOiF,KAAKgc,wBAAwBN,EAAkB1b,KAAKic,WAAajc,KAAKic,WAAWC,aAAe,KAAMhqB,EAAW8N,KAAKxE,MAAMmc,gBAAkBtlB,EAAY2N,KAAKxE,MAAMmc,kBAG9K,OAAQhC,GACN,KAAK7mB,IACL,KAAKE,IACL,KAAKD,IAED,OAAO,qCACSiR,KAAKrN,MAAMmoB,gBAAkB,yBAAK/f,MAAOS,EAAMT,OACzC,kBAAC,GAAD,OAER,kBAAC,KAAD,CAAqB3M,GAAI4R,KAAK5R,GAAIonB,cAAexV,KAAKmc,qBAAqB3G,EAAeha,EAAM3E,aAAculB,kBAAmBpc,KAAKoc,kBAAmBC,cAAc,EAAMthB,MAAOS,EAAMT,SAI5M,KAAK9L,IAED,GAAIuM,EAAMxO,KAAK+C,OAASd,IAAK,CAG3B,MAAMqtB,EAAW9gB,EAAMga,cAAc8G,SAASppB,IAAInG,GAC5CA,EAAIwvB,MAAMnqB,SAAS,aAAerF,EAAIwvB,MAAMnqB,SAAS,SAChD4N,KAAKmc,qBAAqBpvB,EAAKyO,EAAM3E,aAGvC9J,GAETyO,EAAMga,cAAN,2BAA2Bha,EAAMga,eAAjC,IACE8G,kBAMF9gB,EAAMga,cAAgBxV,KAAKmc,qBAAqB3gB,EAAMga,cAAeha,EAAM3E,aAM7E,OAHA2E,EAAM6a,QAAN,2BAAqB7a,EAAM6a,SAA3B,IACEmG,WAAW,IAEN,kBAAC,GAAkBhhB,GAG9B,QAGI,OADAA,EAAMga,cAAgBxV,KAAKmc,qBAAqB3gB,EAAMga,cAAeha,EAAM3E,aACpE,kBAAC,GAAkB2E,KA5HN,KAgI5B4gB,kBAAoB,KAClBpc,KAAKC,SAAS,CACZ6a,gBAAgB,KAlIQ,KAqI5BrB,eAAiB,KACfzZ,KAAKC,SAAS,CACZ2a,YAAa5a,KAAKrN,MAAMioB,YACvB5a,KAAKxE,MAAMihB,qBAAqBzc,KAAKxE,MAAMxO,KAAKC,MAxIzB,KA0I5BsrB,mBAAqBxoB,IACfA,IAASiQ,KAAKiW,kBAIlBJ,KAAsB7V,KAAKxE,MAAMxO,KAAMgT,KAAKiW,iBAC5CjW,KAAKxE,MAAM+c,mBAAmBvY,KAAKxE,MAAMga,cAAcvoB,GAAI8C,KAhJjC,KAkJ5BkmB,cAAgB,IAAMjW,KAAKxE,MAAMga,cAAcG,YAAc3V,KAAKxE,MAAMxO,KAAK+C,KAlJjD,KAmJ5BspB,kBAAoB,IAAMxD,KAAgC7V,KAAKxE,MAAMxO,KAAMgT,KAAKxE,MAAMga,eAnJ1D,KAoJ5BkH,gBAAkB,CAAChB,EAAkBiB,EAAgBC,KAE5C,CACL/b,OAFa+b,GAAiBD,GAAqCjB,IAnJrE1b,KAAK5R,GAAKoe,EAAQpe,GAClB4R,KAAKic,WAAatc,IAAMsU,YACxBjU,KAAK4b,UAAYjc,IAAMsU,YACvBjU,KAAKmc,qBAAuBhC,GAAWna,KAAK+a,cAC5C/a,KAAKyb,+BAAiCtB,GAAWtE,MACjD7V,KAAKgc,wBAA0B7B,GAAWna,KAAK0c,iBAGjD,0BACE1c,KAAKxE,MAAMqhB,4BACLhH,KAAoB7V,KAAKxE,MAAMxO,OACrCgT,KAAKC,SAAS,CACZ4a,cAAc,IAIlBvE,mBAAmBlB,EAAW0H,IACxBA,EAAUhC,gBAAmB1F,EAAUI,gBAAkBxV,KAAKxE,MAAMga,eAAiBJ,EAAUve,cAAgBmJ,KAAKxE,MAAM3E,aAC5HmJ,KAAKC,SAAS,CACZ6a,gBAAgB,IAsItBzZ,SACE,MAAM,KACJrU,EADI,cAEJ2qB,EAFI,YAGJ9gB,GACEmJ,KAAKxE,OACH,WACJof,GACE5a,KAAKrN,MACHokB,EAAgB,kBAAC,GAAD,CAAmB/pB,KAAMA,EAAMwoB,cAAexV,KAAKxE,MAAMga,cAAe+C,mBAAoBvY,KAAKuY,mBAAoBkB,eAAgBzZ,KAAKyZ,eAAgBrrB,GAAI4R,KAAK5R,GAAIunB,WAAY3V,KAAKiW,gBAAiBkD,aAAcnZ,KAAKrN,MAAMioB,aACxP,OAAO,oCACK,kBAAC,GAAD,CAAYlS,MAAOmN,KAAsB7oB,GAAOoqB,OAAQpqB,EAAKC,GAAI8pB,cAAeA,EAAerF,IAAK1R,KAAK4b,UAAWjE,cAAeA,EAAeC,YAAa5qB,EAAK+vB,YACpK,kBAAC,GAAD,KACI,yBAAKviB,IAAKwF,KAAKsb,aAAazkB,GAAcoK,UAAU,yBAAyByQ,IAAKA,GAAO1R,KAAKic,WAAavK,GACtG1R,KAAKrN,MAAMkoB,cAAgB7a,KAAKwb,uBAGxClpB,EAAWqlB,IAAkBiD,EAAa,kBAAC,GAAD,CAAY5tB,KAAMA,IAAW,OAKxF2tB,GAAKhO,aAAe,CAClBve,GAAIwe,IAAU/d,QAWhB8rB,GAAKvY,aAAe,CAClBpV,KAAM,GACNyvB,qBAAsB9W,SAASC,UAC/B4P,cAAe,IAgBFva,mBAbS,CAACtI,EAAOuV,KAEvB,CACLrR,YAFmB3E,EAAWgW,EAASyP,eAA8ChhB,GAA7BC,GAAoBjE,GAG5E6iB,cAAezc,GAAkBpG,EAAOkjB,KAA8B3N,EAASlb,MAAMC,MAI9DoL,IAAQ,CACjCwkB,sBAAuBrH,GAAiBnd,EAASa,GAAmBsc,IACpE+C,mBAAoB,CAACtrB,EAAI8C,EAAM4lB,IAAetd,E5DpOJ,EAACpL,EAAI0oB,KAChC,CACb5lB,KDFyC,gCCGzC9C,KACA0oB,e4DgOqDqH,CAA6B/vB,EAAI8C,MAG3EkL,CAA6C0f,IC1O5D,MAAM5f,GAAQ,CACZ2G,gBAAiBE,IAAOqb,QACxBrD,OAAQ,OACR/Y,OAAQ,MACR6L,OAAQ,mBAKKwQ,OAFF,IAAM,wBAAIniB,MAAOA,K,QCE9B,MACMoiB,GAAe,CACnB,QAAW,UACXC,kBAAmB,aACnBC,OAAQ,SACRC,OAAQ,UAEJviB,GAAQ,CACZqC,KAAM,CACJmgB,cAAe,OACfC,YAAa,OAEfC,OAAQ,CACNxX,UAAW,SACXzB,SAAU,OACVkZ,aAAc,OAEhBC,OAAQ,CACNnZ,SAAU,OACVoZ,WAAY,OACZlR,OAAQ,EACR3I,MAAOnC,IAAO8B,SAEhBma,QAAS,CACP9Z,MAAOnC,IAAO8B,QACdc,SAAU,OACVoZ,WAAY,OACZE,UAAW,OACXC,SAAU,WAId,MAAMC,WAAqBpe,YAAW,eAAD,oBACnCjN,MAAQ,CACNvF,SAAU,IAFuB,KAYnC6wB,eAAiBzT,IACf,MAAM0T,EAAgB1T,EAAG,YAAQA,EAAI2T,YAAZ,YAA2B3T,EAAIvd,IAAO,GAC/D,MAAM,GAAN,OAAU+S,KAAKwM,QAAQ/d,QAAvB,+BAAqDyvB,IAdpB,KAgBnCE,iBAAmB5T,IACjB,MAAM6T,EAAY7T,EAAI/S,SAAS9I,OAAO,GAAG,GACzC,OAAO0vB,EAAUV,OAASU,EAAUV,OAAO5oB,YAAc,IAlBxB,KAoBnCupB,gBAAkB,KAChB,MAAMC,EAAYjsB,EAAW0N,KAAKxE,MAAMmc,eAAiB,OAAS,KAClE,OAAO3X,KAAKxE,MAAM/D,SAASvE,IAAIsX,IAC7B,MAMMmT,EA7DI,YA6DKnT,EAAI2T,YAA0Bne,KAAKoe,iBAAiB5T,GAAO2S,GAAa3S,EAAI2T,aACrFK,EAAahU,EAAIiU,KAAkB,KAAX,SACxBJ,EAAY7T,EAAI/S,SAAS9I,OAAO,GAAG,GACnC+vB,EAAUL,EAAU9oB,YAC1B,OAAO,wBAAI0L,UAAS,uBAAkBsd,GAAa/jB,IAAKgQ,EAAIvd,GAAIiW,QAV1C,KAChB5Q,EAAW0N,KAAKxE,MAAMmc,iBACxBgH,SAASC,SAAS3V,KAAOjJ,KAAKie,eAAezT,MASnC,uBAAGvJ,UAAS,wBAAmBud,IAC1BhU,EAAIzV,YADT,KACwByV,EAAIqU,aAD5B,KAGA,uBAAG9jB,MAAOA,GAAM4iB,QACXA,EADL,MACgBzwB,YAAWwxB,EAAS1e,KAAKrN,MAAMvF,WAE/C,uBAAG2N,MAAOA,GAAM8iB,SAAUQ,EAAUtrB,UAnCtD,0BACE,MAAM3F,QAAiB4S,KAAKwM,QAAQpe,GAAG8L,YAAY4kB,aAAahnB,IAAI,eACpEkI,KAAKC,SAAS,CACZ7S,aAqCJiU,SACE,OAAO,oCACK,kBAAC,GAAD,CAAYqH,MAAO/X,IAAKC,EAAE,YAAawmB,OAAQpX,KAAKxE,MAAMxO,KAAKC,GAAI0qB,cAAe3X,KAAKxE,MAAMmc,cAAeC,YAAa5X,KAAKxE,MAAMxO,KAAK+vB,YACzI,kBAAC,GAAD,MACC/c,KAAKxE,MAAM/D,SAAS9B,OAAS,GAAK,yBAAKsL,UAAU,0BAC1C,wBAAIlG,MAAOA,GAAMqC,MAAO4C,KAAKse,mBAC7B,yBAAKvjB,MAAOA,GAAM0iB,QACd,uBAAGxU,KAAMjJ,KAAKie,kBACTttB,IAAKC,EAAE,yBAcxCotB,GAAarR,aAAe,CAC1Bve,GAAIwe,IAAU/d,OACdJ,QAASme,IAAUmS,QAUNC,OADW/jB,YANFtI,IACf,CACL8E,SAAUrD,OAAOC,OAAOmD,GAAiB7E,MAIM,KAAzBsI,CAA+B+iB,I,qBC7F1CiB,OAtBUzjB,GAAS,oCAC1B,kBAAC,GAAD,CAAYkN,MAAO/X,IAAKC,EAAE,qCAAsC,CACpEb,KAAMyL,EAAMxO,KAAK+C,OACfqnB,OAAQ5b,EAAMxO,KAAKC,GAAI0qB,cAAenc,EAAMmc,cAAeC,YAAapc,EAAMxO,KAAK+vB,YACjF,yBAAKhiB,MAAO,CAChB2M,QAAS,OACTwX,eAAgB,SAChBC,WAAY,SACZte,OAAQ,QAEA,kBAAC,KAAD,CAAmB9F,MAAO,CAChCwI,MAAO,IACP1C,OAAQ,IACRue,MAAO,UACNrb,MAAM,eCNEvS,OAVS,EACtByP,eACI,yBAAKA,UAAWA,EAAWqB,MAAM,6BAA6BC,QAAQ,YAAYC,KAAMZ,IAAOyd,SAC7F,0BAAMxqB,EAAE,gBAAgB2N,KAAK,SAC7B,0BAAM3N,EAAE,oICMDyqB,OAVI,EACjBre,eACI,yBAAKA,UAAWA,EAAWqB,MAAM,6BAA6BiB,MAAM,KAAK1C,OAAO,KAAK0B,QAAQ,YAAYC,KAAMZ,IAAOuV,QACpH,0BAAMtiB,EAAE,kFACR,0BAAMA,EAAE,gBAAgB2N,KAAK,U,0BCMrC,MAAM+c,GAAevyB,GAAQ8C,IAAY9C,EAAK+C,MAAMW,YAI9C8uB,GAAW,CAAChkB,EAAOgR,KACvB,MAAM,KACJxf,EADI,cAEJ2qB,EAFI,uBAGJ8H,GACEjkB,EACEkkB,EARgB1yB,IAAQV,YAAQU,EAAK8C,IAAY9C,EAAK+C,MAAMU,WAAW6D,OAAO,CAACtH,EAAM2yB,EAAO9yB,IAAUA,EAAMmgB,UAAU4S,GAAMA,EAAG3yB,KAAOD,EAAKC,MAAQ0yB,GAQpIE,CAAgB7yB,GAgBrC,OAAO,oCACG,kBAAC,GAAD,CAAY0b,MAAO6W,GAAavyB,GAAOoqB,OAAQpqB,EAAKC,GAAI0qB,cAAeA,EAAeC,YAAa5qB,EAAK+vB,YACxG,kBAAC,GAAD,MACA,yBAAK9b,UAAU,0BACX,wBAAIA,UAAWC,KAAQ9D,MAClBsiB,EAAaxsB,IAAI4sB,GAAe,wBAAI7e,UAAWC,KAAQlU,KAAMwN,IAAKslB,EAAY7yB,IACvE,kBAAC8yB,GAAD,CAAiB9e,UAAWC,KAAQ8e,WApB9CF,KACd,MAAMG,EAAe,4BAAQhf,UAAWC,KAAQgf,aAAchd,QAAS,IAAMuc,EAAuBzyB,EAAM8yB,IAC9F,kBAAC,GAAD,CAAY7e,UAAWC,KAAQif,cAE3C,OAAO,oCACK,uBAAGlf,UAAWC,KAAQ8B,KAAMjI,MAAO,CAC3CgJ,MAAOnC,IAAOwe,SACbnX,KAAMjY,YAAWhE,EAAK+C,KAAM+vB,EAAatT,EAAQpe,KACrC0xB,EAAYhrB,MAEhB5C,EAAWylB,GAAiBsI,EAAe,OAW/BzG,CAAQsG,SAYrCN,GAAS7S,aAAe,CACtBve,GAAIwe,IAAU/d,QAEDoM,mBAAQ,KAAM,CAC3BwkB,uBC7DoC,CAACxS,EAAe/K,IAAY7J,IAChE,MAAMyU,EAAehd,IAAYmd,EAAcld,MAAMU,SAC/C4vB,EAAapT,EAAcH,GAAcxY,OAAOtH,GAAQA,EAAKC,KAAOiV,EAAQjV,IAE9EozB,EAAW1qB,QACbsX,EAAcH,GAAgBuT,EAC9BhoB,EAASiT,GAAsB2B,KAE/B5U,EAASkT,GAAsB0B,MDoDpBhS,CAEZukB,I,UE5DI,MAMMc,GAAgC,GACvCC,GAA0B,GACnBC,GAA4B,CACvCvzB,GAAI,GACJ6H,KAAM,GACNU,OAAQ,GACRR,YAAa,GACbU,eAAgB6qB,IAiGX,MAAME,GAAyB9tB,GAASA,EAAM+tB,eAExCC,GAAiBhuB,IAAUkG,KAAQlG,EAAM+tB,gBACzCE,GAA0BjuB,IAAU,IAAD,EAC9C,OAAO,UAAA8tB,GAAuB9tB,UAAvB,eAA+B+C,iBAAkB6qB,ICxGpDxlB,GAAQ,CACZyb,QAAS,CACPjP,QAAS,OACTsZ,WAAY,WACZjD,WAAY,QAEdkD,UAAW,CACTtc,SAAU,OACVuc,YAAa,SACbxd,MAAO,MACPmJ,OAAQ,SACRhF,QAAS,QACTkW,WAAY,QAEd/G,UAAW,CACT6G,aAAc,OACdpV,UAAW,SAqFArN,mBAxBS,CAACtI,EAAOuV,KAE9B,IAAIjV,EAGFA,EAJqB0tB,GAAehuB,GAI5BiuB,GAAwBjuB,GACvBT,EAAWgW,EAASyP,eACrBxN,GAAuBxX,GAEvBuB,EAAmBvB,GAG7B,MAAM3F,EAAOiG,EAAMoE,KAAKrK,GAAQA,EAAKC,KAAOib,EAASlb,KAAKC,IAC1D,MAAO,CACL8F,KAAM/F,EAAOA,EAAK+F,KAAO,KAUW,CACtCuY,0BADarQ,CAjFEO,IACf,MAAM,KACJxO,EADI,cAEJ2qB,EAFI,KAGJ5kB,EAHI,sBAIJuY,GACE9P,EAEEwlB,EAAezgB,IACnB,MAAM0gB,EAAW,2BAAQj0B,GAAR,IACf+F,KAAMwN,EAAMwE,OAAO5X,QAErBme,EAAsB2V,IAGlBC,EAAW,KACf,MAAMC,EAAe/sB,OAAOqN,OAAO,GAAI1G,GAAM+lB,UAAW/lB,GAAMyb,SAC9D,OAAO,yBAAKvV,UAAU,yBAAyBlG,MAAOA,GAAM8b,WAChD,kBAAC,UAAD,CAAgB9b,MAAOomB,GAAepuB,KAI9CquB,EAAW,IACR,oCACK,kBAAC,GAAD,CAAY1Y,MAAO/X,IAAKC,EAAE,aAAcwmB,OAAQpqB,EAAKC,GAAI0qB,cAAeA,IACxE,kBAAC,GAAD,MACA,yBAAK1W,UAAU,0BACX,kBAAC,UAAD,CAAgBogB,OAAQL,GACpB,kBAAC,KAAD,CAAO7zB,MAAO4F,EAAMuuB,WAAS,EAACC,WAAS,EAACxmB,MAAOA,GAAM+lB,UAAWtb,YAAa7U,IAAKC,EAAE,iBAAkB6U,SAAUub,OAMhIQ,EAAY,KAChB,MAAML,EAAe/sB,OAAOqN,OAAO,GAAI1G,GAAM+lB,UAAW/lB,GAAMyb,SAC9D,OAAO,oCACMhb,EAAMxO,KAAK+vB,UAAY,kBAAC/E,GAAD,MAAoB,KAC5C,yBAAK/W,UAAU,yBAAyBlG,MAAOA,GAAM8b,WACjD,kBAAC,UAAD,CAAgB9b,MAAOomB,GAAepuB,MAKxD,IAAI0uB,EAUJ,OAPEA,EADEvvB,EAAWylB,GACFyJ,EACFzJ,IAAkB1lB,EAChBuvB,EAEAN,EAGN,oCAAGO,OC9EZ,MAAMC,GAAe,CAACC,EAAY30B,EAAM6J,KACtC,IAAI+qB,EAAS,UAAMD,EAAWzwB,UAAjB,4BAA8ClE,EAAKC,IAEhE,GAAI4J,GAAeA,EAAW,IAAqBA,EAAW,GAAkBlB,OAAQ,CACtF,MAAMksB,EAAQhrB,EAAW,GAAkB3D,IAAI4uB,GAAUA,EAAOzsB,MAAM,KAAK1G,OAAO,GAAG,IACrFizB,GAAS,uBAAoBC,EAAMvsB,KAAK,MAG1C,OAAOssB,GAGHG,GAAU,EACdpK,gBACA3qB,OACA6J,eACC2V,KACD,IAAImV,EACJ,MAAMK,EAASh1B,EAAKg1B,OAMpB,OAJIA,IACFL,EAAanV,EAAQpe,GAAG6zB,OAAOC,cAAc7qB,KAAK8qB,GAAOA,EAAI3nB,MAAQwnB,IAGhEL,GAAcA,EAAW7sB,MAAQ6sB,EAAWzwB,UAAY,oCACrD,kBAAC,GAAD,CAAYwX,MAAOiZ,EAAW7sB,KAAMsiB,OAAQpqB,EAAKC,GAAI0qB,cAAeA,EAAeC,YAAa5qB,EAAK+vB,YACrG,kBAAC,GAAD,MACA,4BAAQrU,MAAOiZ,EAAW7sB,KAAMstB,IAAKV,GAAaC,EAAY30B,EAAM6J,GAAcoK,UAAU,yBAAyBlG,MAAO,CAClI6e,OAAQ,WAEA,oCACF,kBAAC,GAAD,CAAYlR,MAAK,UAAKsZ,EAAL,oBACjB,kBAAC,GAAD,MACA,yBAAK/gB,UAAU,yBAAyBlG,MAAO,CACrD2M,QAAS,OACTwX,eAAgB,SAChBC,WAAY,SACZte,OAAQ,QAEE,kBAAC,KAAD,CAAmBkD,MAAM,WAAWiC,UAAQ,EAACjL,MAAO,CAC5DwI,MAAO,IACP1C,OAAQ,IACRue,MAAO,eAWf2C,GAAQpV,aAAe,CACrBve,GAAIwe,IAAU/d,QAUDoM,mBAPS,CAACtI,EAAOuV,KAEvB,CACLrR,YAFmB3E,EAAWgW,EAASyP,eAA8ChhB,GAA7BC,GAAoBjE,KAMjEsI,CAAyB8mB,ICpExC,MAAMhnB,GAAQ,CACZ2R,OAAQ,YACRlI,SAAU,OACVoZ,WAAY,OACZ7Z,MAAOnC,IAAO4G,SAgBD6Z,OAbI7mB,GACV,oCACG,kBAAC,GAAD,CAAYkN,MAAO/X,IAAKC,EAAE,UAAWwmB,OAAQ5b,EAAMxO,KAAKC,GAAI0qB,cAAenc,EAAMmc,cAAeC,YAAapc,EAAMxO,KAAK+vB,YACxH,uBAAGhiB,MAAOA,IACLpK,IAAKC,EAAE,gFCZT0xB,OAFO,IAAM,8B,sBCQ5B,MAAMC,GAAqB,EACzBztB,OACAE,cACA6B,cACAd,qBAYO,yBAAKkL,UAAWC,KAAQshB,WACrB,uBAAGvhB,UAAWC,KAAQpM,MAAOA,GAC5BiB,GAAmBf,GAAe,uBAAGiM,UAAWC,KAAQlM,aAAcA,GACtE6B,EAAYlB,OAAS,GAAK,oCACnB,uBAAGsL,UAAWC,KAAQuhB,aACjB9xB,IAAKC,EAAE,oBAfJ,MACxB,MAAM8xB,EAAY7rB,EAAY3D,IAAI,EAChC4B,OACAT,YACI,wBAAI4M,UAAWC,KAAQyhB,eAAgBnoB,IAAK1F,GACrCA,EADP,KACeT,EAAOnB,IAAI0vB,GAAOA,EAAI9tB,MAAMQ,KAAK,QAEtD,OAAO,wBAAI2L,UAAWC,KAAQ2hB,YAAaH,IAU1BI,KAWrBP,GAAmBngB,aAAe,CAChCpN,YAAa,GACbF,KAAM,GACNiB,iBAAiB,GAcJkF,mBAXStI,IACtB,MAAM1F,EAAKiJ,EAAevD,GACpB4B,EAAY7H,YAASqH,EAAkBpB,EAAO1F,IACpD,MAAO,CACL6H,KAAMP,EAAUQ,YAChB8B,YAAaG,GAAqBrE,GAClCqC,YAAaT,EAAUU,mBACvBc,gBAAiBK,EAA4BzD,KAIlCsI,CAAyBsnB,IChDxC,MAsCa5H,GAAOnf,IAClB,MAAMunB,EAvCYhzB,KAClB,OAAQA,GACN,KAAKjB,IACL,KAAKC,IACL,KAAKC,IACL,KAAKC,IACL,KAAKE,IACL,KAAKD,IACH,OAAO8zB,GAET,KAAKxzB,IACH,OAAOwuB,GAET,KAAK3uB,IACL,KAAKC,IACL,KAAKC,IACH,OAAOiwB,GAET,KAAK/vB,IACH,OAAOwzB,GAET,KAAKvzB,IACH,OAAO2yB,GAET,KAAKjzB,IACH,OAAO2yB,GAET,KAAKpyB,IACH,OAAO2yB,GAET,KAAK1yB,IACH,OAAO2yB,GAET,QACE,OAAOtD,KAKMiE,CAAY1nB,EAAMxO,KAAK+C,MACxC,OAAO,kBAACgzB,EAAD,CAAU/1B,KAAMwO,EAAMxO,KAAM2qB,cAAenc,EAAMmc,cAAe8E,qBAAsBjhB,EAAMihB,wB,8CC9CrG,MAAM0G,WAAoCvjB,YAAW,eAAD,oBAYlDjN,MAAQ,CACNywB,YAAY,GAboC,KAelDC,aAAe,KAfmC,KAgBlDC,kBAAoB,KAEpBC,kBACE,MAAMC,EAAWxjB,KAAKxE,MAAMioB,aAAetjB,OAAOujB,YAElD,IAAK1jB,KAAKqjB,aACR,OAGF,MAAMM,EAAO3jB,KAAKqjB,aAAaO,wBAE3BD,EAAKE,QAAUL,GAAYG,EAAKlf,IAAMtE,OAAOujB,YAAcF,IAC7DxjB,KAAKC,SAAS,CACZmjB,YAAY,IAEdpjB,KAAK8jB,iBAITC,kBACE/jB,KAAKsjB,kBAAoBngB,KAAS,IAAMnD,KAAKujB,kBAAmBvjB,KAAKxE,MAAMwoB,YACxD,CAAC7jB,UACjBwe,SAASsF,uBAAuB,sBACxBtnB,QAAQka,IACjBA,EAAUzW,iBAAiB,SAAUJ,KAAKsjB,qBAI9CQ,gBACqB,CAAC3jB,UACjBwe,SAASsF,uBAAuB,sBACxBtnB,QAAQka,IACjBA,EAAU9V,oBAAoB,SAAUf,KAAKsjB,qBAIjDrc,oBACEjH,KAAK+jB,kBACL/jB,KAAKujB,kBAGPW,uBACElkB,KAAK8jB,gBAGPziB,SACE,MAAM,EAKFrB,KAAKxE,OALH,SACJ2G,EADI,UAEJlB,EAFI,MAGJlG,GAHF,EAIKS,EAJL,kDAMM,WACJ4nB,GACEpjB,KAAKrN,MACHwxB,EAAaC,KAAK5oB,EAAO,CAAC,cAAe,eAAgB,YAAa,eAC5E,OAAO,uCAAKkW,IAAKA,GAAO1R,KAAKqjB,aAAe3R,EAAK3W,MAAOA,EAAOkG,UAAWA,GAAekjB,GAC5Ef,GAAcjhB,IAzEzBghB,GAQG/gB,aAAe,CACpB4hB,WAZsB,IAatBP,aAZwB,KAiFbN,UChEf,MAEapH,GAA8B,EACpC,MAAMsI,WAAiBzkB,YAAW,eAAD,oBACtCjN,MAAQ,CACN2xB,cAAe,IAFqB,KAItC7H,qBAAuB8H,IACrB,MAAMC,EAA4D,mBAAxCxkB,KAAKrN,MAAM2xB,cAAcC,IAA2BvkB,KAAKrN,MAAM2xB,cAAcC,GACjGD,EAAa,eAAQtkB,KAAKrN,MAAM2xB,eAEtCA,EAAcC,IAAcC,EAC5BxkB,KAAKC,SAAS,CACZqkB,mBAVkC,KAsBtCG,eAAiBC,IACX1kB,KAAKxE,MAAMwZ,MACbhV,KAAKxE,MAAMmpB,wBAAwBD,IAxBD,KA2BtCE,aAAe,CAACC,EAAQC,EAAS5Y,KAC/B6Y,YAAa7Y,EAAQwO,GACrB,MAAMzN,EAAgBjN,KAAKxE,MAAM9F,eAAe2B,KAAKrK,GAAQA,EAAKC,KAAOif,EAAQwO,GAE7EzN,GAAiBpd,YAAoBod,IACvC+X,aAAa/X,IAhCqB,KAmCtCgY,wBAA0BhY,IACxB,MAAMiY,EAAellB,KAAKrN,MAAM2xB,cAAcrX,EAAchgB,IAE5D,OAAIi4B,IAAiC,IAAjBA,EACX9wB,OAAOqN,OAAO,GAAIwL,EAAe,CACtC3C,EAAG2C,EAAc3C,EA3CD,KA+Cb2C,GA5C6B,KA8CtCkY,iBAAmBn4B,IACjB,MAAMo4B,EAAiB,CAACp4B,EAAK+C,KAAMiQ,KAAKxE,MAAMwZ,KAAO,OAAS,QAAQ1f,KAAK,KAC3E,OAAO,kBAAC,GAAD,CAA6BkF,IAAKxN,EAAK0tB,EAAGzZ,UAAWmkB,GAChD,kBAAC,GAAD,CAAMp4B,KAAMA,EAAM2qB,cAAe3X,KAAKxE,MAAMwZ,KAAOljB,E1FxE/C,O0FwE4D2qB,qBAAsBzc,KAAKyc,yBAjDnE,KAoDtC4I,kBAAoBpyB,GAASA,EAAMC,IAAIlG,GAAQgT,KAAKmlB,iBAAiBn4B,IAtCrEmY,0BAA0BC,GACpBA,EAAU4P,MACZhV,KAAKC,SAAS,CACZqkB,cAAe,KAqCrBjjB,SACE,MAAM,KACJ2T,EADI,UAEJlf,EAFI,eAGJJ,GACEsK,KAAKxE,MAET,IAAK1F,IAAcJ,EAAeC,OAChC,OAAO,kBAAC,GAAD,CAAkB5C,KAAMpC,IAAKC,EAAE,0CAGxC,MAAMqC,EAAQ+hB,EAAOtf,EAAiBA,EAAexC,IAAI8M,KAAKilB,yBAC9D,OAAO,yBAAKhkB,UAAU,gBACTnL,EAAY,kBAAC,IAAD,CAAOwvB,aAAW,GACvB,kBAAC,IAAD,KACI,kBAAC,IAAD,QAEG,KACf,kBAAC,KAAD,CAAiBb,eAAgBzkB,KAAKykB,eAAgBG,aAAc5kB,KAAK4kB,aAAc3jB,UAAU,SAAS4jB,OAAQ5xB,EAAOyZ,OAAQ6Y,IAAQC,KAAMC,cAAkBC,UAAWC,IAAiBpiB,MAAOpD,OAAOylB,WAAYC,YAAaC,IAAmBC,YAAa/Q,EAAMgR,YAAahR,EAAMiR,gBAAgB,kBACxSjmB,KAAKqlB,kBAAkBpyB,MAY5CoxB,GAASjiB,aAAe,CACtB1M,eAAgB,IAGlB,MASMoS,GAAqB,CACzB6c,wB1C/EqCx3B,IAAK,CAC1C4C,KFlCuC,4BEmCvC5C,W0C0Fa8N,mBAvBS,CAACtI,EAAOuV,KAC9B,MAAMqH,EAAoBrH,EAAS8M,KAAOjL,GAAsBpX,GAASoB,EAAkBpB,EAAOuD,EAAevD,IAC3G+C,EAAiBwS,EAAS8M,KAAO7K,GAAuBxX,GAASuB,EAAmBvB,GAC1F,MAAO,CACLmD,UAAWK,EAAsBxD,KAAW4c,EAC5C7Z,mBAkBoCoS,GAVrB,CAACE,EAAYC,EAAeC,KAC7C,MAAMge,EAAa55B,YAAQ0b,EAAWtS,gBAAgBpB,OAAO6xB,KAC7D,OAAO,2BAAKle,GAAZ,IACE+M,KAAM9M,EAAS8M,KACflf,UAAWkS,EAAWlS,UACtBJ,eAAgBwwB,EAChBnB,oBAIW9pB,CAAyDopB,ICrIxE,MAAM/f,GAAS,CACb8hB,eAAgB,CACd1Z,OAAQ,MACRnF,QAAS,SACT8e,aAAc,MACdtiB,MAAOnC,IAAOE,MACdJ,gBAAiB,UACjBb,OAAQ,GACR6G,QAAS,OACTyX,WAAY,UAEdmH,MAAO,CACL9hB,SAAU,OACVmP,OAAQ,UACRkN,WAAY,UAEd0F,YAAa,CACX/hB,SAAU,OACVmD,eAAgB,YAChB8M,WAAY,OACZd,OAAQ,YAIZ,MAAM6S,WAAoB5mB,YAAW,eAAD,oBAClCsD,QAAUjW,GAAM,IAAM+S,KAAKxE,MAAM0H,QAAQjW,GADP,KAElCw5B,SAAWx5B,GAAM,IAAM+S,KAAKxE,MAAMirB,SAASx5B,GAE3CoU,SACE,MAAM,KACJ1M,GACEqL,KAAKxE,MACT,OAAO,yBAAKT,MAAOuJ,GAAO8hB,gBACd,0BAAMrrB,MAAOuJ,GAAOgiB,MAAOpjB,QAASlD,KAAKkD,QAAQvO,EAAK1H,KAAtD,UACQ0H,EAAKG,KADb,aACsBH,EAAKN,OAAOsB,OAAS,EAAIhF,IAAKC,EAAE,qBAAsB,CAClF81B,MAAO/xB,EAAKN,OAAOsB,SAChBhB,EAAKN,OAAO,GAAGS,OAEZ,0BAAMiG,MAAOuJ,GAAOiiB,YAAarjB,QAASlD,KAAKymB,SAAS9xB,EAAK1H,KACxD0D,IAAKC,EAAE,aAY5B41B,GAAYpkB,aAAe,CACzBc,QAASyC,SAASC,UAClB6gB,SAAU9gB,SAASC,WAEN4gB,U,sBCjDR,MAAMG,WAAkB/mB,YAAW,eAAD,oBACvCgnB,cAAgB35B,IACd+S,KAAKxE,MAAM6V,iBAAiBpkB,IAFS,KAIvC45B,aAAe55B,IACb+S,KAAKxE,MAAM2V,wBAAwB,CACjClkB,KACA6H,KAAMkL,KAAKxE,MAAMtE,QAAQG,KAAKrK,GAAQA,EAAKC,KAAOA,GAAI6H,QAI1DuM,SACE,MAAM,QACJnK,EADI,SAEJ+G,GACE+B,KAAKxE,MACHiJ,EAAM2B,GAAoBnI,GAAY,GAC5C,OAAO/G,EAAQvB,OAAS,yBAAKsL,UAAWC,KAAQ4lB,IAAK/rB,MAAO,CAC1D0J,QAEWvN,EAAQhE,IAAIoB,GAAU,kBAAC,GAAD,CAAakG,IAAKlG,EAAOrH,GAAI0H,KAAML,EAAQ4O,QAASlD,KAAK6mB,aAAcJ,SAAUzmB,KAAK4mB,kBACxG,MAUrBD,GAAUvkB,aAAe,CACvBlL,QAAS,GACT6vB,iBAAkBphB,SAASC,WAQd3K,mBALStI,IAAK,CAC3BuE,QAASF,GAAqBrE,GAC9BsL,SAAUC,GAAuBvL,KAGK,CACtCwe,wBAAyBJ,GACzBM,iBAAkB9Z,IAFL0D,CAGZ0rB,ICtDI,MACMK,GAA8B7mB,OAAOujB,YAY3C,MAAMuD,GAAmBt0B,GAASA,EAAMu0B,aCRlCC,GAAsB,CAAC5yB,EAAWtB,KAItC,CACLlD,KZN+B,sBYO/B5C,MALO,2BAAQoH,GAAR,IACPmB,eAAgBzC,MAOPm0B,GAAwB,MACnCr3B,KZVmC,0BYgBxBs3B,GAA0Br6B,IACrC,MAAM+C,EAAO/C,EAAK+C,YACX/C,EAAK+C,KACZ,MAAM8a,EAAe/a,IAAYC,GAAMU,SACjCxD,EAAK6d,yBACLC,EAAqBxX,YAAsBtG,GACjD,IAAI+d,EAEJ,GAAIjb,IAASJ,IAAW,CACtB,MAAMsb,EAAOje,EAAKie,MAAQ,EAC1BD,EAAQE,YAAsBD,EAAMje,EAAKme,eAEzCH,EAAQI,YAA2Bpe,EAAKs6B,kBAG1C,MAAO,CACLv3B,KZ/BoC,2BYgCpC5C,MAAM,qCACJF,KACA8C,OACAuV,SAAUtY,EAAKsY,UAAY,KAC3B,CAACuF,GAAe7d,EAAKkV,SAClBmJ,KACAN,GACAC,KAQIuc,GAA6Bv6B,IAAI,CAC5C+C,KZ7CyC,8BY8CzC5C,MAAOH,ICKMiO,mBAVStI,IACf,CACL60B,mBAAoBvd,GAActX,GAClC80B,oBAAqB9G,GAAehuB,GACpC6L,eAAgBN,GAAuBvL,GACvCuU,WAAYhR,EAAevD,GAC3Bu0B,aAAcD,GAAiBt0B,KAIK,CACtC+0B,mBAAoB/c,GACpBgd,oBAAqBP,IAFRnsB,CA5CcO,IAC3BosB,oBAAU,KACJpsB,EAAMgsB,mBACRhsB,EAAMksB,qBACGlsB,EAAMisB,qBACfjsB,EAAMmsB,uBAEP,CAACnsB,EAAMgsB,mBAAoBhsB,EAAMisB,sBACpCG,oBAAU,KAAO,IAAD,EACd,UAAAjJ,SAASkJ,cAAc,6BAAvB,SAA8CC,OAAO,EAAG,IACvD,CAACtsB,EAAM0L,aACV,MAAMrG,EAASrF,EAAM0rB,azDvBS,GyDuByB9gB,GAAoB5K,EAAMgD,gBACjF,OAAO,oCACG,kBAAC,GAAD,MACA,kBAAC,GAAD,MACA,yBAAKyC,UAAU,oBAAoBlG,MAAO,CAChD8F,WAEU,kBAAC,GAAD,CAAUmU,MAAM,IAChB,kBAAC,GAAD,MACA,kBAAC,GAAD,CAAUA,MAAM,Q,4CCAjB+S,OA/BoB,EACjC5rB,gBACA6rB,oBACAC,oBACAvvB,WAEA,MAAMyb,EAAU,CAAC,kBAAC,IAAD,CAAQ3Z,IAAI,SAASkW,WAAS,EAACxN,QAAS+kB,GAC9Ct3B,IAAKC,EAAE,WACD,kBAAC,IAAD,CAAQ4J,IAAI,SAAS0tB,aAAW,EAAChlB,QAAS8kB,GAChDr3B,IAAKC,EAAE,YAElB,OAAO8H,GAAQ,kBAAC,IAAD,CAAOiD,QAASssB,EAAmB3O,OAAK,EAAChU,SAAS,UACnD,kBAAC,IAAD,KAAa3U,IAAKC,EAAE,qBACpB,kBAAC,IAAD,KACI,0BAAMqQ,UAAWC,KAAQgB,SACpBvR,IAAKC,EAAE,mKAAoK,CAC1LuL,oBAIM,kBAAC,IAAD,KACI,kBAAC,IAAD,KAAcgY,MCTlC,MAAMgU,GAAiB,CACrBtnB,O3DjBoC,G2DkBpC6T,WAAY,OACZD,WAAY,OACZ7M,YAAa,QAER,MAAMwgB,WAAgBxoB,YAAW,eAAD,oBACrCjN,MAAQ,CACN01B,yBAAyB,EACzBC,oBAAgBp6B,EAChBq6B,yBAAyB,EACzBrV,iBAAahlB,GALsB,KAOrCs6B,gBAAkB,KAChBxoB,KAAKC,SAAS,CACZsoB,yBAAyB,KATQ,KAYrCE,OAAS,KACPzoB,KAAKxE,MAAMitB,SAAS5wB,KAAK6wB,IACvB1oB,KAAKC,SAAS,CACZiT,YAAY,IAAD,OAAMwV,QAfc,KAmBrCC,eAAiB,KACX3oB,KAAKxE,MAAMotB,oBACb5oB,KAAKxE,MAAMqtB,oBACX7oB,KAAKxE,MAAMmsB,uBAEX3nB,KAAKxE,MAAMstB,oBAxBsB,KA2BrCC,UAAY,KACV/oB,KAAKxE,MAAMwtB,mBACX,MAAM9V,EAAclT,KAAKxE,MAAM7H,YAAX,WAA6BqM,KAAKxE,MAAM7H,aAAgB,IAC5EqM,KAAKC,SAAS,CACZiT,iBA/BiC,KAkCrC+U,kBAAoB,KAClBjoB,KAAKC,SAAS,CACZsoB,yBAAyB,KApCQ,KAuCrCP,kBAAoB,KAClBhoB,KAAKC,SAAS,CACZsoB,yBAAyB,IAE3BvoB,KAAKxE,MAAMytB,SAASjpB,KAAKxE,MAAM7H,aAAakE,KAAK,KAC/CmI,KAAKC,SAAS,CACZiT,YAAa,SA7CkB,KAiDrCgW,oBAAsBvxB,UACpB,GAAIwxB,GAAgBA,EAAaxzB,OAAQ,CACvC,MAAMyzB,QAAiBppB,KAAKwM,QAAQpe,GAAG8L,YAAY4kB,aAAahnB,IAAI,eAC9DuxB,EAAcF,EAAa9xB,KAAKzG,GAAKA,EAAEpD,SAAW47B,GAA2B,SAAfx4B,EAAE04B,UAElED,GAAeA,EAAYl8B,OAC7B6S,KAAKxE,MAAM+tB,YAAYvpB,KAAKxE,MAAM7H,YAAa01B,EAAYl8B,SAvD5B,KA2DrCq8B,oBAAsB,KAChBxpB,KAAKxE,MAAM7H,cAAgBqM,KAAKrN,MAAM21B,gBACxCxuB,GAAkBkG,KAAKxE,MAAM7H,aAAakE,KAAKywB,GAAkBtoB,KAAKC,SAAS,CAC7EqoB,qBA9D+B,KA2ErCmB,wBAA0B,KACxBzpB,KAAKC,SAAS,CACZooB,yBAA0BroB,KAAKrN,MAAM01B,2BA7EJ,KAgFrCqB,oBAAsB,IAAM1pB,KAAKxE,MAAMmuB,cAAgB3pB,KAAKxE,MAAM7H,YAAc,kBAAC,GAAD,CAAqBwI,cAAe6D,KAAKxE,MAAMW,cAAe6rB,kBAAmBhoB,KAAKgoB,kBAAmBC,kBAAmBjoB,KAAKioB,kBAAmBvvB,KAAMsH,KAAKrN,MAAM41B,0BAA8B,KAhF9O,KAiFrCqB,kBAAoB,IAAM5pB,KAAKrN,MAAM21B,gBAAkBtoB,KAAKrN,MAAM21B,eAAer7B,GAAK,kBAAC,KAAD,CAAmBgU,UAAU,qBAAqB7S,GAAI4R,KAAKwM,QAAQpe,GAAIsK,KAAMsH,KAAKrN,MAAM01B,wBAAyBzT,eAAgB5U,KAAKypB,wBAAyBI,kBAAmB7pB,KAAKrN,MAAM21B,eAAgBwB,kBAAmB,CAAC,OAAQ,eAC/TC,mBAAoB/pB,KAAKkpB,oBAAqBc,mBAAoB1xB,GAAOL,QAAQC,IAAI,2BAA4BI,KAAW,KAlFvF,KAmFrC2xB,oBAAsB,KACpB,MAAMC,EAAmBlqB,KAAKxE,MAAMotB,mBAAqBj4B,IAAKC,EAAE,sBAAwBD,IAAKC,EAAE,iBAC/F,OAAO,yBAAKqQ,UAAWC,KAAQuG,cACnB,kBAAC,IAAD,KACI,kBAAC,IAAD,CAAQkJ,SAAO,EAACzN,QAASlD,KAAKyoB,QACzB93B,IAAKC,EAAE,iBAEZ,kBAAC,IAAD,CAAQsS,QAASlD,KAAK2oB,gBACjBuB,GAGJlqB,KAAKxE,MAAM7H,YAAc,kBAAC,IAAD,CAAQuP,QAASlD,KAAKypB,yBACvC94B,IAAKC,EAAE,cACA,KACfoP,KAAKxE,MAAM7H,aAAeqM,KAAKxE,MAAMmuB,aAAe,kBAAC,IAAD,CAAQzmB,QAASlD,KAAKwoB,iBAClE73B,IAAKC,EAAE,WACA,QAhClCqW,oBACEjH,KAAKwpB,sBAGPlT,qBACEtW,KAAKwpB,sBAgCPnoB,SACE,GAAIrB,KAAKrN,MAAMugB,YACb,OAAO,kBAAC,IAAD,CAAUjQ,GAAIjD,KAAKrN,MAAMugB,cAGlC,MAAM,aACJiX,GACEnqB,KAAKxE,MACH6L,EAAmBjB,G3DpIA,G2DqInBgkB,EAAiBD,EAAex5B,IAAKC,EAAE,uBAAyBD,IAAKC,EAAE,oBAC7E,OAAO,oCACK,kBAAC,GAAD,CAAYiQ,OAAQwG,EAAkB1F,UAAU,GAC5C,yBAAK5G,MAAOotB,IACPgC,EAAenqB,KAAKiqB,sBAAwB,KAE7C,yBAAKhpB,UAAWC,KAAQmpB,eACpB,kBAAC,IAAD,CAAQ3Z,WAAS,EAACxN,QAASlD,KAAK+oB,WAC3BqB,MAKjB,yBAAKnpB,UAAWC,KAAQopB,YACvBtqB,KAAK4pB,oBACL5pB,KAAK0pB,wBAmBtBtB,GAAQzb,aAAe,CACrBve,GAAIwe,IAAU/d,QAmCDoM,mBAhCStI,IACtB,MAAM4B,EAAYwV,GAAsBpX,GACxC,IAAIg3B,EACAQ,EAUJ,MnDpCgCx3B,KACxBkG,KAAQlG,EAAMqX,gBAAsD,KAApCD,GAAsBpX,GAAO1F,GmD2BjEs9B,CAAmB53B,IACrBg3B,GAAe,EACfQ,GAAe,IAEfA,IAAe51B,EAAUiB,QAASjB,EAAUiB,OAAO8e,OACnDqV,IAAep1B,EAAUiB,QAASjB,EAAUiB,OAAOkI,QAG9C,CACL/J,YAAaY,EAAUtH,GACvBkP,cAAe5H,EAAUO,KACzB60B,eACAf,mBAAoB1e,GAAuBvX,GAC3Cw3B,iBAIuB9xB,IAAQ,CACjCsvB,oBAAqB,IAAMtvB,EHvLQ,CACnCtI,KZVmC,0BeiMnC84B,kBAAmB,IAAMxwB,EjDpKY,CACrCtI,KFrBsC,6BmDyLtC04B,OAAQ,IAAMpwB,EAASmT,MAAkB3T,KAAK5K,GAAMA,GACpDg8B,SAAUh8B,GAAMoL,EAASwF,GAAiB5Q,IAC1C+7B,iBAAkB,IAAM3wB,EjD7KU,CAClCtI,KFxBkC,yBmDqMlCw5B,YAAa,CAACt8B,EAAIE,IAAUkL,E3EpLW,EAAC1E,EAAaxG,KAAd,CACvC4C,KnBfwC,6BmBgBxC4D,cACAxG,U2EiLqCq9B,CAA0Bv9B,EAAIE,IACnE27B,iBAAkB,IAAMzwB,EjD5KW,CACnCtI,KFnBoC,6BmDiMvBkL,CAA6CmtB,I,yCCtK7CqC,OAlCG,EAChBC,eAEA,MAAM1b,EAAW2b,IAAqBxqB,OAAOylB,WAAa+E,IAAqBxqB,OAAOylB,WAChFgF,EAAaF,EAAW/5B,IAAKC,EAAE,oBAAsBD,IAAKC,EAAE,qBAClE,OAAO,yBAAKqQ,UAAWC,KAAQ2pB,aACrB,uBAAG5pB,UAAWC,KAAQ0pB,YAAtB,UACQj6B,IAAKC,EAAE,iBADf,aACoCg6B,IAEpC,yBAAK7vB,MAAO,CAClBiU,aAEU,uBAAG/N,UAAWC,KAAQ0V,MAAtB,UACQjmB,IAAKC,EAAE,0BADf,MAGA,yBAAKqQ,UAAWC,KAAQ0V,MACpB,wBAAI3V,UAAWC,KAAQ4pB,UACnB,4BAAKn6B,IAAKC,EAAE,mCACZ,4BACKD,IAAKC,EAAE,yDAEZ,4BACKD,IAAKC,EAAE,2FAKxB,wBAAIqQ,UAAWC,KAAQ6pB,YC1BpBC,OAJY,IAAM,yBAAK1oB,MAAM,6BAA6BiB,MAAM,KAAK1C,OAAO,KAAK2B,KAAMZ,IAAO4G,QAASjG,QAAQ,aACtH,0BAAM1N,EAAE,ma,sBCgCDo2B,OAzBS,EACtBh+B,SAEA,MAAMsW,EAAQonB,IAAqBxqB,OAAOylB,WAAa+E,IAAqBxqB,OAAOylB,WACnF,OAAO,oCACG,yBAAK3kB,UAAWC,KAAQ2V,WACpB,yBAAK5V,UAAWC,KAAQgqB,MAAOnwB,MAAO,CAC9CwI,UAEY,kBAAC,IAAD,CAAMtC,UAAWC,KAAQ8B,KAAMC,GAAE,WAAMhW,IACnC,kBAAC,IAAD,KACI,kBAACk+B,GAAD,MACCx6B,IAAKC,EAAE,wBAGhB,kBAAC,IAAD,CAAQsS,QAAS/C,OAAOirB,OAAQz6B,IAAKC,EAAE,YAG/C,yBAAKqQ,UAAWC,KAAQopB,c,qBC1B7B,MAAMe,GAAkBC,IAAY,IAAD,EACxC,IAAKA,IAAYA,EAAQ3b,UACvB,OAAO,KAMT,MAAM4b,EAAU,UAAGD,EAAQ3b,UAAUta,MAAM,KAAK,UAAhC,aAAG,EAAiCm2B,MAAM,WAE1D,OAAID,EACKE,SAASF,EAAW,IAEpB,MCOJ,MAAMG,WAA4B9rB,YAAW,eAAD,oBACjD6kB,eAAiBC,IACf1kB,KAAKxE,MAAMmwB,sBAAsBjH,IAFc,KAIjDkH,iBAAmB5+B,IACjB,GAAIA,EAAK+C,OAASJ,IAChB,OAAO,EAGT,MAAMk8B,EAAa7rB,KAAKxE,MAAM9F,eAAepB,OAAOomB,GAAKA,EAAE3qB,OAASJ,KAC9Dm8B,EAAmBC,KAAOF,EAAY,CAAC,MAC7C,OAAO7+B,EAAKg/B,IAAMF,EAAiB,GAAGE,GAXS,KAajD7G,iBAAmBn4B,IAEjB,MAAMo4B,EAAiB6G,KAAG,QAAS,SAAV,UAAuBj/B,EAAK+C,MAAQ,CAC3D,mBAAoBiQ,KAAKxE,MAAM0wB,WAAalsB,KAAK4rB,iBAAiB5+B,GAClE+vB,YAAa/vB,EAAK+vB,YAEpB,OAAO,yBAAKviB,IAAKxN,EAAK0tB,EAAGzZ,UAAWmkB,GACxB,kBAAC,GAAD,CAAMp4B,KAAMA,EAAM2qB,cAAe1lB,MApBE,KAuBjDozB,kBAAoBpyB,GAASA,EAAMC,IAAIlG,GAAQgT,KAAKmlB,iBAAiBn4B,IAErEm/B,sBACE,MAAMC,ED9BiCC,KACzC,MAAMC,EAAQl4B,OAAO2C,KAAKjH,KACpBy8B,EAA2BjgC,YAAQ+/B,GAAUn5B,IAAI0sB,IACrD,MAAM7vB,EAAOvD,MAAMggC,KAAK5M,EAAG6M,WAAWp1B,KAAK4J,GAAaqrB,EAAM59B,QAAQuS,IAAc,GAC9E0iB,EAAO/D,EAAGgE,wBACVoI,EAAIX,GAAgBzL,EAAG7kB,QAAU0wB,SAAS9H,EAAKqI,GACrD,MAAO,CACLj8B,OACA08B,UAAW7M,EAAG6M,UACdC,QAASV,EAAIP,SAAS9H,EAAK9iB,QAC3B+e,QAGJ,OAAOmM,KAAOQ,EAA0B,CAAC,aCiBhBI,CAA4BngC,MAAMggC,KAAK7N,SAASiO,iBAAiB,sBACxF,IAAIC,EAAkB,EAClBC,EAAiB,EACjBC,GAAoB,EAExB,IAAK,IAAIrS,EAAI0R,EAAez2B,OAAS,EAAG+kB,GAAK,IAAKA,EAAG,CACnD,MAAM1tB,EAAOo/B,EAAe1R,GAE5B,GAAI1tB,EAAK+C,OAASJ,IAAW,CAC3B,GAAKo9B,EAEE,CACLF,EAAkB7/B,EAAK0/B,QACvB,MAHA1/B,EAAK4yB,GAAG6M,UAAUpe,IAAI,eAKnB,CACL0e,GAAoB,EACpB,MAAMC,EAAiBhgC,EAAK0/B,QAExBM,EAAiBF,IACnBA,EAAiBE,IAKvB,MACMC,EAActO,SAASkJ,cAAc,sBAGrC/J,EAAY+O,EAJC,IAUnB,GAJII,IACFA,EAAYlyB,MAAM8F,OAAlB,UAA8Bid,EAA9B,OAGE9d,KAAKxE,MAAM0wB,UAAW,CAExB,MAAMgB,EAAavO,SAASkJ,cAAc,qBAE1C,GAAIqF,GAAcA,EAAWnyB,OAASmyB,EAAWnyB,MAAM4U,UAAW,CAChE,MAAM1E,EAAOogB,GAAgB6B,EAAWnyB,OAClCoyB,EAAaxO,SAASkJ,cAAc,gBAC1CsF,GAAcA,EAAWrF,OAAO,EAAG7c,EAAO,MAKhDhE,oBACEjH,KAAKmsB,sBAGP7V,qBACEtW,KAAKmsB,sBAGP9qB,SACE,MAAM,UACJvL,EADI,eAEJJ,GACEsK,KAAKxE,MAET,IAAK1F,IAAcJ,EAAeC,OAChC,OAAO,kBAAC,GAAD,CAAkB5C,KAAMpC,IAAKC,EAAE,0CAGxC,MAAM2S,EAAQonB,IAAqBxqB,OAAOylB,WAAa+E,IAAqBxqB,OAAOylB,WACnF,OAAO,yBAAK3kB,UAAU,gBACTnL,EAAY,kBAAC,IAAD,CAAOwvB,aAAW,GACvB,kBAAC,IAAD,KACI,kBAAC,IAAD,QAEG,KACf,kBAAC,KAAD,CAAiBb,eAAgBzkB,KAAKykB,eAAgBxjB,UAAU,SAAS4jB,OAAQnvB,EAAgBgX,OAAQ6Y,IAAQC,KAAMC,cAAkBC,UAAWC,IAAiBpiB,MAAOA,EAAOsiB,YAAaC,IAAmBC,aAAa,EAAOC,aAAa,EAAOC,gBAAgB,kBACtQjmB,KAAKqlB,kBAAkB3vB,MAY5Cg2B,GAAoBtpB,aAAe,CACjC1M,eAAgB,IAYHuF,mBATStI,IACtB,MAAM4c,EAAoBkR,GAAuB9tB,GACjD,MAAO,CACLmD,UAAWK,EAAsBxD,KAAW4c,EAC5C7Z,eAAgBkrB,GAAwBjuB,GAAO2B,OAAO6xB,KACtD+F,UAAWjiB,GAActX,KAIW,CACtCg5B,sBRnI0Cx+B,IAAK,CAC/C4C,KZXwC,6BYYxC5C,WQgIa8N,CAEZywB,I,qCChIH,MAAM0B,GAAkBhnB,GAAoB,G3EjBV,E2EmB5BinB,GAAaC,IAEjB,IAAIC,EAAI,EACR,MAEMC,EAAcC,GAFF,EAEwB,EAAIA,EAE9C,IAAIC,EAAWF,EAAY,GACvBH,GAAa,EAEjB,KAAOK,EAAWJ,GAIhB,GAHAI,EAAWF,EAAYD,KACrBA,EAEEG,IAAaJ,EAAG,CAClBD,GAAa,EACb,MAIJ,OAAOA,GAkCF,MAAMM,WAA6B/tB,YAAW,eAAD,oBAClDjN,MAAQ,CACNi7B,aAAa,GAFmC,KAIlDC,yBAA2B,KACrB7tB,KAAKxE,MAAMjH,YACbyL,KAAKC,SAAS,CACZ2tB,aAAa,IAEf5tB,KAAKxE,MAAMsyB,kBAAkB9tB,KAAKxE,MAAMjH,UAAWyL,KAAKxE,MAAMvI,OAG9D+M,KAAKxE,MAAMvI,MAAM0J,QAAQ3P,IACnBA,EAAKsd,EAAIyjB,MACX/gC,EAAK+vB,WAAY,EACjB/c,KAAKxE,MAAMwyB,oBAAoB55B,OAAOqN,OAAO,GAAIzU,EAAM,CACrDsd,EAAGyjB,UA/CO,GACpB96B,QACAg7B,uBAMA,IAAIhjB,EAAO,EACX,MAAMijB,EAAW,GAEjB,IAAK,IAAIC,EAAU,EAAGA,GAAWl7B,EAAM0C,SAAUw4B,EAC/B,IAAZA,EACFljB,GAAQ,GACCoiB,GAAWc,GACpBljB,GAAQ,GAERA,GAAQ,GAGVijB,EAAS92B,KAAK6T,GAGhB,IAAK,IAAIyP,EAAI,EAAGA,EAAIznB,EAAM0C,SAAU+kB,EAClCuT,EAAiB,CACfl+B,KAAMJ,IACNsb,KAAMijB,EAASxT,MAyBf0T,CAAcpuB,KAAKxE,OACnBwE,KAAKxE,MAAMyyB,iBAAiB,CAC1Bl+B,KAAMH,IACN03B,kBAAkB,MAvB0B,KAsClD+G,gBAAkB,IACTruB,KAAKxE,MAAM8yB,SAAW,CAC3B5Z,WAAY6Z,IAAQC,KACpB3tB,OAAQb,KAAKxE,MAAM0rB,aAAekG,GjElHR,IiEmHxB,CACFvsB,OAAQb,KAAKxE,MAAM0rB,aH/Ge,IGgGtCjgB,oBACEjH,KAAK6tB,2BAGPvX,qBACOtW,KAAKrN,MAAMi7B,aACd5tB,KAAK6tB,2BAaTxsB,SACE,OAAO,qCACOrB,KAAKxE,MAAM8yB,UAAY,kBAAC,GAAD,CAAiBrhC,GAAI+S,KAAKxE,MAAMjH,UAAUtH,KACnE,yBAAKgU,UAAWgrB,KAAG/qB,KAAQutB,QAAS,eAAgB1zB,MAAOiF,KAAKquB,oBAC1DruB,KAAKxE,MAAM8yB,UAAY,kBAAC,GAAD,CAAW5D,UAAU,IAC9C,yBAAKzpB,UAAWC,KAAQwtB,UAAW3zB,MAAO,CACpDwI,MAAOonB,MAEO,kBAAC,GAAD,UAuCT1vB,mBAtBS,CAACtI,EAAOuV,KAC9B,MAAMjb,EAAKiJ,EAAevD,GAE1B,GAAIuV,EAASomB,SAAU,CAErB,MAAO,CACL/5B,UAFgBwV,GAAsBpX,GAGtC1F,KACAgG,MAAOkX,GAAuBxX,GAC9Bu0B,aAAcD,GAAiBt0B,IAKnC,MAAO,CACL4B,UAFgBtH,EAAK8G,EAAkBpB,EAAO1F,GAAM,KAGpDA,KACAgG,MAAOiB,EAAmBvB,GAC1Bu0B,aAAcD,GAAiBt0B,KAIK,CACtCm7B,kBAAmB3G,GACnB8G,iBAAkB5G,GAClB2G,oBAAqBzG,IAHRtsB,CAIZ0yB,IChKI,MAAMgB,WAAsB/uB,YAAW,eAAD,oBAC3CjN,MAAQ,CACNi7B,aAAa,GAF4B,KAI3CgB,kBAAoB,KACd5uB,KAAKxE,MAAMjH,YACbyL,KAAKC,SAAS,CACZ2tB,aAAa,IAEf5tB,KAAKxE,MAAMqzB,iBAAiB7uB,KAAKxE,MAAMjH,UAAWyL,KAAKxE,MAAMvI,SATtB,KAuB3C67B,WAAa,KACX,GAAI9uB,KAAKxE,MAAMotB,mBACb,OAAO,kBAAC,GAAD,CAAoB0F,UAAU,IAGvC,MAAMztB,EAASb,KAAKxE,MAAM0rB,alEvCE,GkEuCgC9gB,GAAoB,GAChF,OAAO,yBAAKnF,UAAU,oBAAoBlG,MAAO,CAC/C8F,WAEU,kBAAC,GAAD,CAAUmU,MAAM,IAChB,kBAAC,GAAD,CAAUA,MAAM,MApB9B/N,oBACEjH,KAAK4uB,oBAGPtY,qBACOtW,KAAKrN,MAAMi7B,aACd5tB,KAAK4uB,oBAkBTvtB,SACE,OAAO,oCACK,kBAAC,GAAD,MACCrB,KAAKxE,MAAM2uB,aAAenqB,KAAK8uB,aAAe,kBAAC,GAAD,CAAkB/7B,KAAMpC,IAAKC,EAAE,iBA2B/EqK,mBAbStI,IACtB,MAAM1F,EAAKiJ,EAAevD,GACpB4B,EAAYtH,EAAK8G,EAAkBpB,EAAO1F,GAAM,KAEtD,MAAO,CACLsH,YACA41B,gBAHmB51B,IAAaA,EAAUiB,SAASjB,EAAUiB,OAAO8e,OAIpErhB,MAAOiB,EAAmBvB,GAC1Bi2B,mBAAoB1e,GAAuBvX,GAC3Cu0B,aAAcD,GAAiBt0B,KAIK,CACtCk8B,iBxDnEgC,CAACt6B,EAAWtB,KAIrC,CACLlD,KFjBmC,0BEkBnC5C,MALO,2BAAQoH,GAAR,IACPmB,eAAgBzC,OwDgELgI,CAEZ0zB,ICxEH,MAAMI,WAAqBnvB,YACzBqH,oBACEjH,KAAKxE,MAAMwzB,kBAGb3tB,SACE,MAAMR,EAASb,KAAKxE,MAAM0rB,anEdE,GmEcgC9gB,GAAoB,GAChF,OAAO,oCACK,kBAAC,GAAD,MACCpG,KAAKxE,MAAMotB,mBAAqB,kBAAC,GAAD,CAAoB0F,UAAU,IAAW,yBAAKrtB,UAAU,oBAAoBlG,MAAO,CAC5H8F,WAEgB,kBAAC,GAAD,CAAUmU,MAAM,IAChB,kBAAC,GAAD,CAAUA,MAAM,OAkBzB/Z,mBALStI,IAAK,CAC3Bi2B,mBAAoB1e,GAAuBvX,GAC3Cu0B,aAAcD,GAAiBt0B,KAGO,CACtCq8B,gBzDnBmC,MACnCj/B,KFpBiC,yB2DqCpBkL,CAEZ8zB,IC7BI,MAAME,WAAsBrvB,YAAW,eAAD,oBAC3CulB,iBAAmBn4B,GAAQ,yBAAKwN,IAAKxN,EAAK0tB,EAAGzZ,UAAWgrB,KAAGj/B,EAAK+C,KAAM,QAAS,SACrE,kBAAC,GAAD,CAAM/C,KAAMA,EAAM2qB,cAAe3lB,KAFA,KAI3CqzB,kBAAoBpyB,GAASA,EAAMC,IAAIlG,GAAQgT,KAAKmlB,iBAAiBn4B,IAErEqU,SACE,MAAM,UACJvL,EADI,eAEJJ,GACEsK,KAAKxE,MAET,IAAK1F,IAAcJ,EAAeC,OAChC,OAAO,kBAAC,GAAD,CAAkB5C,KAAMpC,IAAKC,EAAE,0CAGxC,MAAM2S,EAAQonB,IAAqBxqB,OAAOylB,WAAa+E,IAAqBxqB,OAAOylB,WACnF,OAAO,oCACM9vB,EAAY,kBAAC,IAAD,CAAOwvB,aAAW,GACvB,kBAAC,IAAD,KACI,kBAAC,IAAD,QAEG,KACf,kBAAC,KAAD,CAAiBrkB,UAAU,eAAe4jB,OAAQnvB,EAAgBgX,OAAQ6Y,IAAQC,KAAMC,cAAkBC,UAAWC,IAAiBpiB,MAAOA,EAAOsiB,YAAaC,IAAmBC,aAAa,EAAOC,aAAa,EAAOC,gBAAgB,kBACvOjmB,KAAKqlB,kBAAkB3vB,MAU5Cu5B,GAAc7sB,aAAe,CAC3B1M,eAAgB,IAWHuF,mBARStI,IACtB,MAAM4c,EAAoBkR,GAAuB9tB,GACjD,MAAO,CACLmD,UAAWK,EAAsBxD,KAAW4c,EAC5C7Z,eAAgBpJ,YAAQs0B,GAAwBjuB,IAAQ2B,OAAO6xB,OAIpDlrB,CAAyBg0B,I,8BC7CjC,MAAMC,WAAuBtvB,YAAW,eAAD,oBAC5CjN,MAAQ,CACNi7B,aAAa,GAF6B,KAI5CuB,mBAAqB,KACnB,GAAInvB,KAAKxE,MAAMjH,UAAW,CACxByL,KAAKC,SAAS,CACZ2tB,aAAa,IAGf,MAAMwB,EAAcrD,KAAO/rB,KAAKxE,MAAMvI,MAAO,CAAC,IAAK,MACnD+M,KAAKxE,MAAMsyB,kBAAkB9tB,KAAKxE,MAAMjH,UAAW66B,GAEnD,IAAIC,EAAc,EAClBrvB,KAAKxE,MAAMvI,MAAM0J,QAAQ3P,IACnBA,EAAK+C,OAASL,MAChB2/B,GAAe,EACfrvB,KAAKxE,MAAM8zB,oBAAoBtiC,EAAKC,OAIxC+S,KAAKxE,MAAMvI,MAAM0J,QAAQ3P,IACvBgT,KAAKxE,MAAMwyB,oBAAoB55B,OAAOqN,OAAO,GAAIzU,EAAM,CACrDqd,EAAGklB,IACHjlB,EAAGklB,SAKP,IAAK,IAAI9U,EAAI,EAAGA,EAA8C,GAAzC1a,KAAKxE,MAAMvI,MAAM0C,OAAS05B,GAAkB3U,GAAK,EACpE1a,KAAKxE,MAAMyyB,iBAAiB,CAC1Bl+B,KAAMJ,IACN2V,SAAUoV,EACVvP,UAAU,IAIdnL,KAAKxE,MAAMyyB,iBAAiB,CAC1Bl+B,KAAMH,IACN03B,kBAAkB,MAKxBrgB,oBACEjH,KAAKmvB,qBAGP7Y,qBACOtW,KAAKrN,MAAMi7B,aACd5tB,KAAKmvB,qBAIT9tB,SACE,MAAMR,EAASb,KAAKxE,MAAM0rB,aP/DU,GOgEpC,OAAO,oCACK,kBAAC,GAAD,CAAiBj6B,GAAI+S,KAAKxE,MAAMjH,UAAUtH,KAC1C,yBAAKgU,UAAWC,KAAQutB,QAAS1zB,MAAO,CAChD8F,WAEY,kBAAC,GAAD,CAAW6pB,UAAU,IACrB,yBAAKzpB,UAAWC,KAAQwtB,UAAW3zB,MAAO,CACpDwI,MAAOonB,MAEO,kBAAC,GAAD,UA4BT1vB,mBAXStI,IACtB,MAAM1F,EAAKiJ,EAAevD,GAE1B,MAAO,CACL4B,UAFgBtH,EAAK8G,EAAkBpB,EAAO1F,GAAM,KAGpDA,KACAgG,MAAOiB,EAAmBvB,GAC1Bu0B,aAAcD,GAAiBt0B,KAIK,CACtCm7B,kBAAmB3G,GACnB8G,iBAAkB5G,GAClBiI,oBbhEwCniC,IAAK,CAC7C4C,KZ1CyC,8BY2CzC5C,Ua+DA6gC,oBAAqBzG,IAJRtsB,CAKZi0B,IClHI,MC8BDO,GAAe,CACnB,KAAQ,kBAAC,GAAD,MACR,CAAC39B,GAAO,kBAAC,GAAD,MACR,CAACC,GAAM,kBAAC,GAAD,MACP,CAACC,GAAQ,kBAAC,GAAD,MACT,CAACC,GAAe,kBAAC,GAAD,OA+EHgJ,mBAVS,CAACtI,EAAOuV,KAAc,IAAD,IAC3C,MAAMpU,EAAaG,EAAkBtB,GACrC,MAAO,CACL+8B,kBAAmB72B,KAAQ/E,GAC3B67B,kBAAmB37B,EAAsBrB,GACzC1F,GAAIiJ,EAAevD,GACnBi9B,SAAS,UAAA1nB,EAASsjB,aAAT,mBAAgBqE,cAAhB,eAAwBl8B,cAAe,OAIZ,CACtCm8B,gBvFhF8B7iC,GAAM0K,MAAOU,EAAU2D,KAMrD,IACE,MAAMrJ,EAAQqJ,IACd,IAAI+zB,EAAoB,KAExB,GAAI9iC,EACF8iC,EAAoBh8B,EAAkBpB,EAAO1F,IAAO,SAC/C,CACL,MAAM+iC,GFjD2Bx9B,EEiDWE,EAAiBC,GFjDhB8J,aAAawzB,QAAb,kCAAgDz9B,UAAetE,GEkDtGgiC,EAAOn8B,EAAkBpB,EAAOq9B,GACtCD,EAAoBC,GAAeE,EAAOA,EnBmFHv9B,IAAS,IAAIyV,IAAUjU,EAAsBxB,GAAQ,MAAO,kBAAmByV,IAAU3T,EAAwB9B,GAAQ,MAAO,gBmBnFtHw9B,CAA8Bx9B,GAAO,GAItF0F,EADE03B,EACOh0B,GAA0Bg0B,EAAkB9iC,IAE5C2O,GlBhD0B,MkBkDrC,MAAOtD,GACP,OAvBcN,EAuBCM,EAtBfL,QAAQC,IAAI,+BAAgCF,GACrCA,EAFOA,MFrCqBxF,GyFqHrC49B,gBDpH+BjjC,IAAK,CACpC4C,KfF+B,oBeG/B5C,WCgHa8N,CA7EU,EACvBhO,KACAkF,OACAw9B,mBACAD,oBACAE,UACAE,kBACAM,sBAEAxI,oBAAU,KA1BmBz1B,KAC7B,MAAMyZ,EAAS+S,SAAS0R,qBAAqB,UAAU,GAEnDh+B,EAAYF,GACdyZ,EAAO6gB,UAAUpe,IAAI,UAErBzC,EAAO6gB,UAAU6D,OAAO,WAqBxBC,CAAuBp+B,IACtB,CAACA,IACJy1B,oBAAU,KACJ+H,IAAqBD,GACvBI,EAAgBF,IAEjB,CAACD,EAAkBD,EAAmBE,IACzChI,oBAAU,KACR,MAAM4I,EAAWrtB,KAAS,IAAMitB,EAAgBjwB,OAAOujB,aAAc,KAErE,OADAvjB,OAAOC,iBAAiB,SAAUowB,GAC3B,KACLrwB,OAAOY,oBAAoB,SAAUyvB,KAEtC,IAEEb,GAA2B,OAAP1iC,EAQrBkF,IAASJ,EACJ09B,GAAat9B,GAGlBu9B,EACK,oCACK,kBAAC,GAAD,MACA,kBAAC,GAAD,MACA,kBAAC,GAAD,CAAkB38B,KAAMpC,IAAKC,EAAE,uEzGtEN,MyG0EnC3D,EACK,oCACK,kBAAC,GAAD,MACA,kBAAC,GAAD,MACA,kBAAC,GAAD,CAAkB8F,KAAMpC,IAAKC,EAAE,oCAItC6+B,GAAat9B,GA3BX,kBAAC,IAAD,CAAOmzB,aAAW,GACb,kBAAC,IAAD,KACI,kBAAC,IAAD,U,QCnDb,MAAMmL,WAAY7wB,YACvBqH,oBACEjH,KAAKxE,MAAMk1B,eAAe1wB,KAAKxE,MAAMpN,GAAG8L,aACxC8F,KAAKxE,MAAMm1B,kBACX3wB,KAAKxE,MAAMo1B,oBACX5wB,KAAKxE,MAAMq1B,qBACX7wB,KAAKxE,MAAMs1B,cAAc9wB,KAAKxE,MAAMpN,IAGtC2iC,kBACE,MAAO,CACLtiC,QAASuR,KAAKxE,MAAM/M,QACpBkC,SACAvC,GAAI4R,KAAKxE,MAAMpN,IAInBiT,SACE,OAAO,oCACK,kBAAC,IAAD,CAAcO,QAAM,EAAC2sB,SAAO,IAC5B,kBAAC,IAAD,KACI,kBAAC,IAAD,KACI,kBAAC,IAAD,CAAOyC,OAAK,EAACC,KAAK,IAAI5vB,OAAQ7F,GAAS,kBAAC,GAAD,iBAAeA,EAAf,CAAsBrJ,K9GnCjE,Y8GoCI,kBAAC,IAAD,CAAO6+B,OAAK,EAACC,KAAK,OAAO5vB,OAAQ7F,GAAS,kBAAC,GAAD,iBAAeA,EAAf,CAAsBrJ,KAAMJ,OACtE,kBAAC,IAAD,CAAOi/B,OAAK,EAACC,KAAK,gBAAgB5vB,OAAQ7F,GAAS,kBAAC,GAAD,iBAAeA,EAAf,CAAsBrJ,K9GrC7E,Y8GsCI,kBAAC,IAAD,CAAO6+B,OAAK,EAACC,KAAK,qBAAqB5vB,OAAQ7F,GAAS,kBAAC,GAAD,iBAAeA,EAAf,CAAsBrJ,KAAML,OACpF,kBAAC,IAAD,CAAOk/B,OAAK,EAACC,KAAK,0BAA0B5vB,OAAQ7F,GAAS,kBAAC,GAAD,iBAAeA,EAAf,CAAsBrJ,KAAMH,OACzF,kBAAC,IAAD,CAAOg/B,OAAK,EAACC,KAAK,4BAA4B5vB,OAAQ7F,GAAS,kBAAC,GAAD,iBAAeA,EAAf,CAAsBrJ,KAAMF,SAGnG,kBAAC,GAAD,QAchBw+B,GAAIS,kBAAoB,CACtBziC,QAASme,IAAUmS,OACnBpuB,KAAMic,IAAU/d,OAChBT,GAAIwe,IAAU/d,QAaDoM,mBAAQ,KAVI5C,IAClB,CACLs4B,gBAAiB,IAAMt4B,EAAS6E,MAChC0zB,kBAAmB,IAAMv4B,EAASkG,MAClCmyB,eAAgBx2B,GAAe7B,ECpEA,CACjCtI,K9GF2B,gB8GG3B5C,MDkEyD+M,IACvD42B,cAAe1iC,GAAMiK,EAAS8G,GAAe/Q,IAC7CyiC,mBAAoB,IAAMx4B,EAASyE,QAIxB7B,CAAkCw1B,I,qBEtDlC11B,OAVD,CAACpI,EARoB,OAQSkD,KAC1C,OAAQA,EAAO9F,MACb,IAXqB,YAYnB,OAAO/B,YAAgB6H,EAAO1I,MAXD,QAa/B,QACE,OAAOwF,ICGEiD,mBAAgB,CAC7B9B,W9GgBc,CAACnB,EAAQa,EAA0BqC,KACjD,OAAQA,EAAO9F,MACb,IAlC0B,iBAoCtB,MAAO,CACL0D,KAAMoC,EAAO1I,MACb8F,MAAO,IAIb,IAzC0B,iBA2CtB,OAAO,2BAAKN,GAAZ,IACEc,KAAK,2BAAMd,EAAMc,MACZoC,EAAO1I,SAKlB,IAjDiC,wBAmD7B,OAAOuG,EAAoB,CACzBf,QACAgB,YAAakC,EAAOlC,YACpBC,KAAM,UACNzG,MAAO0I,EAAO1I,QAIpB,IA1DsC,6BA4DlC,OAAOuG,EAAoB,CACzBf,QACAgB,YAAakC,EAAOlC,YACpBC,KAAM,cACNzG,MAAO0I,EAAO1I,QAIpB,IAnE+B,sBAqE3B,OAAO,2BAAKwF,GAAZ,IACEM,MAAO4C,EAAO1I,QAIpB,QACE,OAAOwF,I8G9DXsD,WACAmO,oBACAjG,cACAnF,epGfc,CAACrG,EAAQiG,GAA8B/C,KACrD,OAAQA,EAAO9F,MACb,IAR6B,oBAUzB,OAAO,2BAAK4C,GAAZ,IACE,CAACkD,EAAO1I,MAAMF,IAAKkkC,KAAY,2BAAKzkC,YAASiG,EAAMkD,EAAO1I,MAAMF,MAC3D4I,EAAO1I,OACT0L,MAIT,IAhByC,gCAkBrC,OAAO,2BAAKlG,GAAZ,IACE,CAACkD,EAAO5I,IAAKkkC,KAAY,2BAAKzkC,YAASiG,EAAMkD,EAAO5I,MAA5B,IACtB0oB,WAAY9f,EAAO8f,aAClB9c,MAIT,QACE,OAAOlG,IoGLX8E,SzGvBc,CAAC9E,EAAQ,GAAIkD,KAC3B,OAAQA,EAAO9F,MACb,IAH6B,oBAI3B,CACE,MAAMqhC,EAAgBxkC,YAAaiJ,EAAO1I,OAI1C,OAHiBmnB,KAAO3hB,EAAO,CAC7B0+B,OAAQD,IAKd,QACE,OAAOz+B,IyGYXC,KhHpBc,CAACD,EAAQJ,EAAoBsD,KAC3C,OAAQA,EAAO9F,MACb,IATyB,gBAWrB,MASC,CACL9C,IAFqBqkC,EARMz7B,EAAO1I,OAUrBF,GACbuF,SAAU8+B,EAAS9+B,SACnBpF,SAAUkkC,EAASryB,SAASsyB,YAC5B9+B,YAAa6+B,EAASE,YAAYp3B,IAAI,QAVtC,QACE,OAAOzH,EAIb,IAAyB2+B,GgHSvBtnB,cnEJc,CAACrX,EAAQiX,GAA8B/T,KACrD,OAAQA,EAAO9F,MACb,IAtBmC,0BAuBjC,CACE,MAAM0hC,EAAW,GAGjB,OAFAr9B,OAAO2C,KAAK8S,IAAqB3W,IAAI0H,GAAK62B,EAAS72B,GAAK/E,EAAO1I,MAAMyN,IACrE62B,EAAS3nB,kBAAmB,EACrB2nB,EAGX,IA7BgC,uBA8B9B,OAAO7nB,GAET,IAxBkC,yBAyBhC,OAAOxV,OAAOqN,OAAO,GAAI9O,EAAO,CAC9BmX,kBAAkB,IAGtB,IA5BoC,2BA6BlC,OAAO1V,OAAOqN,OAAO,GAAI9O,EAAO,CAC9BmX,kBAAkB,IAGtB,IAzC+B,sBA0C7B,OAAOD,GAET,IA3C0B,iBA6CtB,OAAOzV,OAAOqN,OAAO,GAAI9O,EAAO,CAC9BmC,KAAMe,EAAO1I,QAInB,IAjDgC,uBAmD5B,OAAOiH,OAAOqN,OAAO,GAAI9O,EAAO,CAC9BqC,YAAaa,EAAO1I,QAI1B,IAvD8B,qBAwD5B,OAAK0I,EAAO1I,MAAMmY,SAQXgP,KAAO3hB,EAAO,CACnB+C,eAAgB,CACdg8B,QAAS,CAAC,CAACjG,SAAS51B,EAAO1I,MAAMmY,UAAW,EAAGzP,EAAO1I,WATjDmnB,KAAO3hB,EAAO,CACnB+C,eAAgB,CACdi8B,SAAU,CAAC97B,EAAO1I,UAW1B,IArEiC,wBAsE/B,CACE,MAAMykC,EAAa/7B,EAAO1I,MACpB4f,EAAqBpa,EAAM+C,eAAesX,UAAUhgB,GAAQA,EAAKC,KAAO2kC,GAE9E,OAAI7kB,GAAsB,EACjBuH,KAAO3hB,EAAO,CACnB+C,eAAgB,CACdg8B,QAAS,CAAC,CAAC3kB,EAAoB,OAK9Bpa,EAGX,IAnFqC,4BAoFnC,CACE,MAAMk/B,EAAavlC,YAAQqG,EAAM+C,gBACjC,IAAIo8B,GAAmB,EACvB,MAAMC,EAAgBl8B,EAAO1I,MAAM+F,IAAI,EACrCq6B,IACAvB,IACA3hB,IACAC,IACAoQ,QAEA,MAAMsX,EAAYH,EAAWx6B,KAAK46B,GAAMA,EAAGhlC,KAAOytB,GAElD,OAAMsX,EAAUzE,IAAMA,GAAKyE,EAAUhG,IAAMA,GAAKgG,EAAU3nB,IAAMA,GAAK2nB,EAAU1nB,IAAMA,GACnFwnB,GAAmB,EACZ19B,OAAOqN,OAAO,GAAIuwB,EAAW,CAClC3nB,IACAC,IACAijB,IACAvB,OAIGgG,IAET,OAAOF,EAAgB,2BAAQn/B,GAAR,IACrB+C,eAAgBq8B,IACdp/B,EAGR,IAlHiC,wBAmH/B,CACE,MAAMsa,EAAgBpX,EAAO1I,MACvB4f,EAAqBpa,EAAM+C,eAAesX,UAAUhgB,GAAQA,EAAKC,KAAOggB,EAAchgB,IAE5F,GAAI8f,GAAsB,EAAG,CAM3B,OALiBuH,KAAO3hB,EAAO,CAC7B+C,eAAgB,CACdg8B,QAAS,CAAC,CAAC3kB,EAAoB,EAAG3Y,OAAOqN,OAAO,GAAIwL,QAM1D,OAAOta,EAGX,QACE,OAAOA,ImElHX+tB,e/BVc,CAAC/tB,EAAQ2tB,GAA+BzqB,KACtD,OAAQA,EAAO9F,MACb,IAjB+B,sBAkB7B,CACE,MAAM0hC,EAAW,GAEjB,OADAr9B,OAAO2C,KAAKypB,IAA2BttB,IAAI0H,GAAK62B,EAAS72B,GAAK/E,EAAO1I,MAAMyN,IACpE62B,EAGX,IAvBiC,wBAwB/B,OAAOnR,GAET,IAzBoC,2BA0BlC,OAAKzqB,EAAO1I,MAAMmY,SAQXgP,KAAO3hB,EAAO,CACnB+C,eAAgB,CACdg8B,QAAS,CAAC,CAACjG,SAAS51B,EAAO1I,MAAMmY,UAAW,EAAGzP,EAAO1I,WATjDmnB,KAAO3hB,EAAO,CACnB+C,eAAgB,CACdi8B,SAAU,CAAC97B,EAAO1I,UAW1B,IAtCuC,8BAuCrC,CACE,MAAMykC,EAAa/7B,EAAO1I,MACpB4f,EAAqBpa,EAAM+C,eAAesX,UAAUhgB,GAAQA,EAAKC,KAAO2kC,GAE9E,OAAI7kB,GAAsB,EACjBuH,KAAO3hB,EAAO,CACnB+C,eAAgB,CACdg8B,QAAS,CAAC,CAAC3kB,EAAoB,OAK9Bpa,EAGX,IArDuC,8BAsDrC,CACE,MAAMsa,EAAgBpX,EAAO1I,MACvB4f,EAAqBpa,EAAM+C,eAAesX,UAAUhgB,GAAQA,EAAKC,KAAOggB,EAAchgB,IAE5F,GAAI8f,GAAsB,EAAG,CAM3B,OALiBuH,KAAO3hB,EAAO,CAC7B+C,eAAgB,CACdg8B,QAAS,CAAC,CAAC3kB,EAAoB,EAAG3Y,OAAOqN,OAAO,GAAIwL,QAM1D,OAAOta,EAGX,IAxEsC,6BAyEpC,CACE,MAAMk/B,EAAavlC,YAAQqG,EAAM+C,gBACjC,IAAIo8B,GAAmB,EACvB,MAAMC,EAAgBl8B,EAAO1I,MAAM+F,IAAI,EACrCq6B,IACAvB,IACA3hB,IACAC,IACAoQ,QAEA,MAAMsX,EAAYH,EAAWx6B,KAAK46B,GAAMA,EAAGhlC,KAAOytB,GAElD,OAAMsX,EAAUzE,IAAMA,GAAKyE,EAAUhG,IAAMA,GAAKgG,EAAU3nB,IAAMA,GAAK2nB,EAAU1nB,IAAMA,GACnFwnB,GAAmB,EACZ19B,OAAOqN,OAAO,GAAIuwB,EAAW,CAClC3nB,IACAC,IACAijB,IACAvB,OAIGgG,IAET,OAAOF,EAAgB,2BAAQn/B,GAAR,IACrB+C,eAAgBq8B,IACdp/B,EAGR,QACE,OAAOA,I+BhFXkE,Y3GvBc,CAAClE,EAAQgE,GAA4Bd,KACnD,OAAQA,EAAO9F,MACb,IAL2B,kBAOvB,OAAO,2BAAK4C,GAAZ,IACE,CAACkD,EAAOvB,OAAOrH,IAAK4I,EAAOvB,OAAOnH,QAIxC,IAX8B,qBAY5B,CACE,MAAMskC,EAAQ,eAAQ9+B,GAGtB,cADO8+B,EAAS57B,EAAO5I,IAChBwkC,EAGX,IArB4B,mBAuBxB,OAAO57B,EAAOqB,QAGlB,IA3B8B,qBA6B1B,OAAOP,GAGX,QACE,OAAOhE,I2GJXoI,SACAG,StGzBc,CAACvI,EAAQ4F,GAAwB1C,KAC/C,OAAQA,EAAO9F,MACb,IATqC,4BAWjC,OAAO,2BAAK4C,GACPkD,EAAO1I,OAIhB,IAf0B,iBAiBtB,OAAOoL,GAGX,QACE,OAAO5F,IsGWX+D,W5G9Bc,CAAC/D,EAAQ0D,GAAoBR,KAC3C,OAAQA,EAAO9F,MACb,IAJ0B,iBAMtB,MAAO,IAAIsG,MAAuBR,EAAO1I,OAG7C,QACE,OAAOwF,I4GuBXsM,SvFxBc,CAACtM,EAAQ+L,GAAkB7I,KACzC,OAAQA,EAAO9F,MACb,IAZwB,eAcpB,OAAOqE,OAAOqN,OAAO,GAAI5L,EAAO1I,OAGpC,IAhBwB,eAkBpB,OAAO,2BAAKwF,GACPkD,EAAO1I,OAIhB,QACE,OAAOwF,IuFUXme,qBxDhCc,CAACne,EAAQie,GAAsC/a,KAC7D,OAAQA,EAAO9F,MACb,IALsC,6BAOlC,OAAO8F,EAAO1I,MAGlB,IATwC,+BAWpC,OAAOyjB,GAGX,QACE,OAAOje,IwDoBXu0B,apBlCc,CAACv0B,EAAQq0B,GAA6BnxB,KACpD,OAAQA,EAAO9F,MACb,IAJ6B,oBAMzB,OAAO8F,EAAO1I,MAGlB,QACE,OAAOwF,MqBOEu/B,OAZQ,KACrB,MAAMC,EAAa,CAACC,MAEdC,EAAmBlyB,OAAOmyB,sCAAwCC,IAMxE,OAJKpyB,OAAOmyB,qCAILE,YAAYC,GAASJ,EAAiBK,eAAmBP,M,kRCoBlExhC,IAAKgiC,aAAa,KADA,UACiBC,IACnCjiC,IAAKgiC,aAAa,QAFA,UAEoBE,IACtCliC,IAAKgiC,aAAa,KAHA,UAGiBG,IACnCniC,IAAKgiC,aAAa,KAJA,UAIiBI,IACnCpiC,IAAKgiC,aAAa,KALA,UAKiBK,IACnCriC,IAAKgiC,aAAa,KANA,UAMiBM,IACnCtiC,IAAKgiC,aAAa,KAPA,UAOiBO,IACnCviC,IAAKgiC,aAAa,KARA,UAQiBQ,IACnCxiC,IAAKgiC,aAAa,KATA,UASiBS,IACnCziC,IAAKgiC,aAAa,KAVA,UAUiBU,IACnC1iC,IAAKgiC,aAAa,KAXA,UAWiBW,IACnC3iC,IAAKgiC,aAAa,MAZA,UAYkBY,IACpC5iC,IAAKgiC,aAAa,KAbA,UAaiBa,IACnC7iC,IAAKgiC,aAAa,KAdA,UAciBc,IACnC9iC,IAAKgiC,aAAa,QAfA,UAeoBe,IACtC/iC,IAAKgiC,aAAa,KAhBA,UAgBiBgB,IACnChjC,IAAKgiC,aAAa,KAjBA,UAiBiBiB,IACnCjjC,IAAKgiC,aAAa,MAlBA,UAkBkBkB,IACpCljC,IAAKgiC,aAAa,KAnBA,UAmBiBmB,IACnCnjC,IAAKgiC,aAAa,KApBA,UAoBiBoB,IACnCpjC,IAAKgiC,aAAa,KArBA,UAqBiBqB,IACnCrjC,IAAKgiC,aAAa,KAtBA,UAsBiBsB,IACnCtjC,IAAKgiC,aAAa,KAvBA,UAuBiBuB,IACnCvjC,IAAKgiC,aAAa,QAxBA,UAwBoBwB,IACvBxjC,EAAf,EChDA,MAGMyjC,GAAY,CAChBC,QAFc,CAAC,QAAS,MAAO,SAAU,cAAe,aAAc,cAAe,YAAa,mBAAoB,cAIlHC,GAAgBC,uLAAYC,+BAAiC,KAG/DF,KACFF,GAAUK,QAAU,CAClBre,cAAeke,KAuBJI,UAnBI,IACV,kBAAC,IAAD,CAAeC,MAAOzC,MACnB,kBAAC,mBAAD,CAAkB0C,MAjBPC,yBAAeC,MAkBtB,kBAAC,IAAD,CAAQV,UAAWA,GAAWW,SAAS,UAClC,EACX3mC,QAEKA,EAKE,kBAAC,GAAD,CAAKA,GAAIA,IAHP,S,iCClCnB,+jBAGO,MAAM03B,EAAoB,WAEpBH,EAAkB,GAIlBJ,EAAS,CAAC,GAAI,IACdla,EAAiB,CAC5BkiB,EAAG,EACHvB,EAAG,EACH3hB,EAAG,GACHC,EAAG,IAMQyjB,EAAuB,GACvByB,EAA4B,GAC5BD,EAA2B,GAK3B5E,EAAqB,KACrBlF,EAAiB,IAVT,GAuBfuP,EAAuBzH,GAAK0H,OAAOC,UAAU3H,IAAMA,GAAK,EAGjDpH,EAAWn5B,GAAQgoC,EAAqBhoC,EAAKugC,IAAMyH,EAAqBhoC,EAAKg/B,IAAMgJ,EAAqBhoC,EAAKqd,IAAM2qB,EAAqBhoC,EAAKsd,GAmB7I/W,EAAwB6jB,IAC5B,CACLsD,EAAGtD,EACH+d,KAAM,IAIGjqB,EAAwB,CAACD,EAAME,GAAW,KAC9C,CACLoiB,EAAG,EACHvB,EAAG/gB,EACHZ,EAvDwB+qB,GAwDxB9qB,EAAG,EACH+qB,SAAUlqB,EACVgqB,KAAM,IAGG/pB,EAA6Bkc,IACjC,CACLiG,EAAG,EACHvB,EAAG,EACH3hB,EAAGid,EAAmBiI,EAjEE6F,GAkExB9qB,EAAGyjB,EACHsH,QAAQ,EACRF,KAAM,IAyBG34B,EAAYvJ,GAASA,EAAMC,IAAI,CAAClG,EAAM2yB,KACjD,MAAM2V,EAAgBnP,EAASn5B,GAAQA,EAAOoH,OAAOqN,OAAO,GAAIzU,EAlE1C0tB,KACtB,IAAKsa,EAAqBta,GACxB,MAAM,IAAI6a,MAAM,6BAGlB,MAAMC,EAAM9a,EAnCc,EAoCpB+a,EAAMn0B,KAAKoF,MAAMgU,EApCG,GAqCpBgb,EAAYp0B,KAAKoF,MAAMivB,MACvBC,EAA+B,EAAlBjQ,EACnB,MAAO,CACL4H,EAAGiI,EAAME,EACT1J,EAAGyJ,EAAMG,EACTvrB,EAAGqrB,EACHprB,EAAGsrB,IAqDiEC,CAASlW,IAC/E,OAAOvrB,OAAOqN,OAAO,GAAI6zB,EAhBMtoC,KAExB,CACL2uB,eAFqBra,KAAKw0B,MAAMnQ,EAAkB34B,EAAKsd,EAAIhJ,KAAKC,IAAI,EAAGvU,EAAKsd,EAAI,GAAKib,EAAO,MAetDwQ,CAAkBT,MAE/C/e,EAAmBtpB,GAAE,eAAYA,GACvC,SAAS83B,EAAa93B,GAC3B,MAAM2yB,EAAKlzB,YAASiyB,SAASkJ,cAAT,WAA2BtR,EAAiBtpB,MAC5D+oC,IAAWpW,EAAGqW,kBAAkB/5B,WAAW,IAAM0jB,EAAGqW,gBAAgBrW,EAAGsW,YAAc,EAAGtW,EAAG9D,aAAe,GAAI,M,6cChHpH,MAAMqa,EAA2B,CAC/B,CAAClnC,KAAM,YACP,CAACC,KAAe,oBAChB,CAACC,KAAc,oBAKXinC,EAAYrmC,IAChB,GAH0BA,IAAQ,CAACf,IAAOD,KAAcqD,SAASrC,GAG7DsmC,CAAoBtmC,GACtB,OAAO,EAIT,OAAO1C,EADY8oC,EAAyBpmC,KAKjCspB,EAAoB,CAACrsB,EAAO,GAAIwoB,EAAgB,MAC3D,MAAMzlB,EAAOylB,EAAcG,YAAc3oB,EAAK+C,KAC9C,QAASqmC,EAAUrmC,IAER6M,EAAkB5P,IAC7B,IAAKL,IAASK,GACZ,OAAO,KAIT,OAAOA,EADU8C,IAAY9C,EAAK+C,MAAMU,WACfzD,EAAKspC,aAAetpC,EAAKupC,OAASvpC,EAAKkG,KAAOlG,EAAKwpC,aAAexpC,EAAKypC,YAAc,IAkBnGzc,EAAQhtB,GAAQ4P,EAAgB5P,GAAMC,GACtCypC,EAAU1pC,GAAQ4P,EAAgB5P,GAAM8H,KAExC0kB,EAAU,CAACxsB,EAAMoB,KAC5B,MAAMK,EAAUN,YAAWC,GACrByC,EAASf,IAAY9C,EAAK+C,MAAMc,OAAOmpB,EAAMhtB,IACnD,MAAM,GAAN,OAAUyB,EAAV,YAAqBoC,IAEV8lC,EAAOh/B,MAAO3K,EAAMwoB,GAC/BQ,cACAL,aACAU,UAAU,OAEV,MAAMugB,EAAM,uCAAQphB,GACfa,GADO,IAEVuJ,GAAIrJ,YAAiBvpB,EAAKC,MAEtB8C,EAAO4lB,GAAc3oB,EAAK+C,KAhCR,EAAC8mC,EAAQD,EAAQ5gB,KACnC6gB,GAAUA,EAAOF,OAIvBE,EAAO5lC,IAAM+kB,EAAYvnB,QACzBooC,EAAOC,kBAAmB,EAC1BD,EAAOtiC,WAAY,EAEfyhB,EAAYE,OACd2gB,EAAO3gB,KAAOF,EAAYE,MAG5B2gB,EAAOF,KAAKC,KAqBZG,CADeX,EAAUrmC,GACN6mC,EAAQ5gB,IAEhBghB,EAAQr/B,eACWs/B,YAAiBjd,EAAMhtB,GAAOA,EAAK+C,KAAM,CACrEiK,OAAQhN,EAAK+C,OAASd,IAAMioC,cAAiB,OAIpCC,EAASnqC,IACpB,MAAM6pC,EAAST,EAAUppC,EAAK+C,MAE1B8mC,GAAUA,EAAOM,QACnBN,EAAOM,OAAO5gB,YAAiBvpB,EAAKC,MAG3BmqC,EAAU,CAACpqC,EAAM2oB,KAC5B,MAAMkhB,EAAST,EAAUzgB,GAErBkhB,GAAUA,EAAOO,SACnBP,EAAOO,QAAQ7gB,YAAiBvpB,EAAKC,MAG5BoqC,EAAyB,CAAC7hB,EAAe8hB,EAAc3hB,KAClE,GAAI2hB,IAAiBroC,KAAOqoC,IAAiB3hB,EAAY,CACvD,MAAM4hB,GA3DoBrkC,EA2DcsiB,GA3DH8G,UAAYppB,EAAIopB,SAASjlB,KAAKmgC,GAAMA,EAAGjb,MAAMnqB,SAbxD,aA0E1B,YAAyBlE,IAArBqpC,EACK,KAGF3oC,YAAa,uCAAK4mB,GACpB+hB,GADc,IAEjBjb,cAAUpuB,EACV6B,KAAM4lB,IAAe3mB,IAAQyoC,IAAkBC,OAE5C,OAAIJ,IAAiBvoC,KAAgB4mB,IAAe3mB,IAClDJ,YAAa,2BAAK4mB,GAAN,IACjBzlB,KAAM0nC,OAECH,IAAiBtoC,KAAS2mB,IAAe5mB,IAC3CH,YAAa,2BAAK4mB,GAAN,IACjBzlB,KAAM2nC,OAIH9oC,YAAa4mB,GAhFQtiB,S,sCCpC9B9G,EAAOC,QAAU,CAAC,SAAW,6BAA6B,eAAiB,mCAAmC,UAAY,8BAA8B,gBAAkB,sC,uDCD1K,kNAIO,MAAMuN,EAAkB,EAC7BC,UACE,KAAO,CAAC,KAAD,UAAUA,EAAS,2BAA6B,qBAI9C89B,EAAqB,EAChCh+B,eACIL,IAAW,CAAC,YAAa,gBAAiB,SAAU,eAAgBK,EAAS,gBAJhD,CAAC,2BAA4B,2BAA4B,qBAImBrE,KAAK,KAAjC,UAEtEsiC,EAAgB,EAC3Bj+B,eACI,CAAC,WAAD,OAAYg+B,EAAmB,CACnCh+B,cACCrE,KAAK,KAFF,oBAEmBqiC,EAAmB,CAC1Ch+B,cACCrE,KAAK,KAJF,uBAIsBqiC,EAAmB,CAC7Ch+B,cACCrE,KAAK,KANF,MAQOuiC,EAAoB,EAC/Bp+B,iBACAq+B,iBAEOx+B,IAAW,CAAC,GAAD,OAAIM,EAAgB,CACpCC,QAAQ,IACPvE,KAAK,MAAQ,yCAA0CmE,EAAc,UAAMm+B,EAAc,CAC1Fj+B,WAAW,IACVrE,KAAK,MAFgE,GAEnDwiC,EAAc,CAAC,IAAK,uBAAwB,mBAAoB,YAAa,sBAAuB,oCAAqC,oBAAqB,sBAAuB,yBAA0B,iCAAkC,oBAAqB,8BAA+B,iBAAkB,sCAAuC,0BAA2B,qBAAsB,8BAA+B,mBAAoB,gBAAiB,iBAAkB,UAAW,gBAAiB,wBAAyB,gCAAiC,sCAAsCxiC,KAAK,KAAO,KAEvnBkE,EAAqB,EAChCC,oBACI,CAAC,eAAD,OAAgBo+B,EAAkB,CACtCp+B,mBACCnE,KAAK,KAFF,qBAEoB,CAAC,UAAWuiC,EAAkB,CACtDp+B,oBACEnE,KAAK,KAJH,mBAImBuiC,EAAkB,CACzCp+B,mBACCnE,KAAK,KANF,2BAM0BuiC,EAAkB,CAChDp+B,mBACCnE,KAAK,KARF,0BAQyBuiC,EAAkB,CAC/Cp+B,mBACCnE,KAAK,KAVF,MAYOiE,EAAoB,IAAM,CAAC,WAAD,OAAY,CAAC,UAAWK,EAAgB,CAC7EC,QAAQ,KACNvE,KAAK,KAF8B,yBAERsE,EAAgB,CAC7CC,QAAQ,IACPvE,KAAK,KAJ+B,qBAIbsE,EAAgB,CACxCC,QAAQ,IACPvE,KAAK,KAN+B,MAQ1B4hC,EAAe,IAAM,CAAC,GAAD,OAAIt9B,EAAgB,CACpDC,QAAQ,IACPvE,KAAK,MAAQ,uCAFkB,mBAEkCuiC,EAAkB,CACpFp+B,gBAAgB,EAChBq+B,aAAa,IAJmB,MAQrBb,EAAmB,CAAChqC,EAAI8C,GACnCiK,YACIpC,wBAAcC,KAAKzJ,GAAMA,EAAGE,IAAIC,SAASuJ,IAAhB,UAAuB/G,YAAgBhB,GAAvC,YAAgD9C,GAAM,CACnF+M,OAAQA,GAAU69B,EAAkB,CAClCp+B,gBAAgB,EAChBq+B,aAAa,Q,oBCpEjB1rC,EAAOC,QAAU,CAAC,aAAe,oCAAoC,cAAgB,qCAAqC,UAAY,mC","file":"static/js/app.5e3b00cf.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"ControlBar_root__iikeX\",\"content\":\"ControlBar_content__26Z33\",\"draghandle\":\"ControlBar_draghandle__27zum\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"link\":\"DashboardItemChip_link__21drZ\",\"icon\":\"DashboardItemChip_icon__2hcIR\",\"selected\":\"DashboardItemChip_selected__r00uP\",\"unselected\":\"DashboardItemChip_unselected__2H9l2\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"ClearButton_button__33ZbK\",\"icon\":\"ClearButton_icon__vTJm3\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"showMore\":\"ShowMoreButton_showMore__3S3He\",\"disabled\":\"ShowMoreButton_disabled__2FQNA\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"menuItem\":\"ContentMenuItem_menuItem__vbKn3\",\"launchLink\":\"ContentMenuItem_launchLink__2Nql9\",\"label\":\"ContentMenuItem_label__ANfH1\",\"buttonInsert\":\"ContentMenuItem_buttonInsert__1joHg\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"showMoreButton\":\"CategorizedMenuGroup_showMoreButton__2RbRp\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"section\":\"EditTitleBar_section__LIaIC\",\"titleDescription\":\"EditTitleBar_titleDescription__1YsU6\",\"title\":\"EditTitleBar_title__3mUbt\",\"description\":\"EditTitleBar_description__24U5X\",\"itemSelector\":\"EditTitleBar_itemSelector__1cFEp\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"actions\":\"ViewTitleBar_actions__2UTRz\",\"editLink\":\"ViewTitleBar_editLink__d_HzW\",\"titleBar\":\"ViewTitleBar_titleBar__eiwJS\",\"titleBarIcon\":\"ViewTitleBar_titleBarIcon__2cBxv\",\"strip\":\"ViewTitleBar_strip__3xR4U\",\"backdrop\":\"ViewTitleBar_backdrop__2Cpm8\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"FatalErrorBoundary_container__3SViR\",\"icon\":\"FatalErrorBoundary_icon__2UbeP\",\"message\":\"FatalErrorBoundary_message__3FzrY\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"deleteItemButton\":\"DeleteItemButton_deleteItemButton__3TJm9\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"warning\":\"PrintItemInfo_warning__123PK\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"center\":\"LoadingMask_center__2SFwS\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"textDiv\":\"Item_textDiv__1U7zV\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"Item_list__1_nkQ\",\"item\":\"Item_item__3-6QE\",\"itemicon\":\"Item_itemicon__QlouX\",\"link\":\"Item_link___3c_q\",\"deleteicon\":\"Item_deleteicon__3usrl\",\"deletebutton\":\"Item_deletebutton__1DpBW\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"titlePage\":\"Item_titlePage__18CNQ\",\"name\":\"Item_name__3nuTV\",\"description\":\"Item_description__1gFQd\",\"filterTitle\":\"Item_filterTitle__2p7TQ\",\"filterList\":\"Item_filterList__qc_G3\",\"filterListItem\":\"Item_filterListItem__sPbBY\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"bar\":\"FilterBar_bar__1Ma3p\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"content\":\"ConfirmDeleteDialog_content__EqswE\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"infoWrapper\":\"PrintInfo_infoWrapper__3m2lt\",\"infoHeader\":\"PrintInfo_infoHeader__KyW8I\",\"info\":\"PrintInfo_info__13oXZ\",\"infoList\":\"PrintInfo_infoList__Iu9MC\",\"divider\":\"PrintInfo_divider__3wzx9\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"PrintActionsBar_container__2iQp7\",\"topMargin\":\"PrintActionsBar_topMargin__OpYDN\",\"inner\":\"PrintActionsBar_inner__uBqU7\",\"link\":\"PrintActionsBar_link__lFUmI\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"PrintLayoutDashboard_wrapper__1WDh4\",\"pageOuter\":\"PrintLayoutDashboard_pageOuter__22acI\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"PrintDashboard_wrapper__1O3s_\",\"pageOuter\":\"PrintDashboard_pageOuter__fl9tw\"};","import isObject from 'lodash/isObject'; // validation\n\nexport function orNull(param) {\n  return param === undefined ? null : param;\n}\nexport function orArray(param) {\n  return Array.isArray(param) ? param : [];\n}\nexport function orObject(param) {\n  return isObject(param) ? param : {};\n} // array\n\nexport function arrayGetById(array, id) {\n  return array.find(item => item.id === id);\n} // object\n\nexport function arrayToIdMap(array) {\n  return array.reduce((obj, item) => {\n    obj[item.id] = item;\n    return obj;\n  }, {});\n} // date\n\nexport function getDate() {\n  const y = Math.floor(Math.random() * 3) + 2015;\n  const M = Math.floor(Math.random() * 12) + 1;\n  const d = Math.floor(Math.random() * 28) + 1; // const h = Math.floor(Math.random() * 23) + 1;\n  // const m = Math.floor(Math.random() * 59) + 1;\n  // const s = Math.floor(Math.random() * 59) + 1;\n\n  return new Date(`${y}-${M}-${d}`).toJSON().replace('T', ' ').substr(0, 10);\n}\nexport const formatDate = (value, uiLocale) => {\n  if (typeof global.Intl !== 'undefined' && Intl.DateTimeFormat) {\n    const locale = uiLocale || 'en';\n    return new Intl.DateTimeFormat(locale, {\n      year: 'numeric',\n      month: 'short',\n      day: 'numeric'\n    }).format(new Date(value));\n  }\n\n  return value.substr(0, 19).replace('T', ' ');\n};\n/**\n * Sorts an array of objects based on provided date property\n *\n * @param {Array} items Array of objects\n * @param {String} dateProp Name of the date property to be used for sorting\n * @param {Boolean} ascending Whether to sort ascending or descending\n */\n\nexport const sortByDate = (items, dateProp, ascending = true) => {\n  const values = Object.values(items);\n  values.sort((a, b) => {\n    const aDate = new Date(a[dateProp]);\n    const bDate = new Date(b[dateProp]);\n    return ascending ? aDate - bDate : bDate - aDate;\n  });\n  return values;\n}; // reducer validator\n\nexport const validateReducer = (value, defaultValue) => value === undefined || value === null ? defaultValue : value;\nexport const getBaseUrl = d2 => {\n  const api = d2.Api.getApi();\n  const idx = api.baseUrl.indexOf('/api');\n  return idx > -1 ? api.baseUrl.slice(0, idx) : api.baseUrl;\n};\nexport const getWithoutId = object => ({ ...object,\n  id: undefined\n});","import i18n from '@dhis2/d2-i18n';\nimport TableIcon from '@material-ui/icons/ViewList';\nimport ChartIcon from '@material-ui/icons/InsertChart';\nimport MapIcon from '@material-ui/icons/Public';\nimport ExtensionIcon from '@material-ui/icons/Extension';\nimport DescriptionIcon from '@material-ui/icons/Description';\nimport PersonIcon from '@material-ui/icons/Person';\nimport FontDownloadIcon from '@material-ui/icons/FontDownload';\nimport EmailIcon from '@material-ui/icons/Email';\nimport CropFreeIcon from '@material-ui/icons/CropFree';\nimport NotInterestedIcon from '@material-ui/icons/NotInterested';\nimport { getBaseUrl } from './util'; // Item types\n\nexport const VISUALIZATION = 'VISUALIZATION';\nexport const REPORT_TABLE = 'REPORT_TABLE';\nexport const CHART = 'CHART';\nexport const MAP = 'MAP';\nexport const EVENT_REPORT = 'EVENT_REPORT';\nexport const EVENT_CHART = 'EVENT_CHART';\nexport const APP = 'APP';\nexport const REPORTS = 'REPORTS';\nexport const RESOURCES = 'RESOURCES';\nexport const USERS = 'USERS';\nexport const MESSAGES = 'MESSAGES';\nexport const TEXT = 'TEXT';\nexport const SPACER = 'SPACER';\nexport const PAGEBREAK = 'PAGEBREAK';\nexport const PRINT_TITLE_PAGE = 'PRINT_TITLE_PAGE';\nconst DOMAIN_TYPE_AGGREGATE = 'AGGREGATE';\nconst DOMAIN_TYPE_TRACKER = 'TRACKER'; // Dashboard helpers\n\nexport const isVisualizationType = item => !!itemTypeMap[item.type].isVisualizationType;\nexport const hasMapView = itemType => itemTypeMap[itemType].domainType === DOMAIN_TYPE_AGGREGATE;\nexport const isTrackerDomainType = itemType => itemTypeMap[itemType].domainType === DOMAIN_TYPE_TRACKER;\nexport const getDefaultItemCount = itemType => itemTypeMap[itemType].defaultItemCount || 5;\nexport const getAppName = itemType => itemTypeMap[itemType].appName || ''; // Item type map\n\nexport const itemTypeMap = {\n  [VISUALIZATION]: {\n    id: VISUALIZATION,\n    endPointName: 'visualizations',\n    propName: 'visualization',\n    pluralTitle: i18n.t('Visualizations'),\n    appUrl: id => `dhis-web-data-visualizer/#/${id}`,\n    appName: 'Data Visualizer',\n    defaultItemCount: 10\n  },\n  [REPORT_TABLE]: {\n    id: REPORT_TABLE,\n    endPointName: 'visualizations',\n    propName: 'visualization',\n    pluralTitle: i18n.t('Pivot tables'),\n    domainType: DOMAIN_TYPE_AGGREGATE,\n    isVisualizationType: true,\n    appUrl: id => `dhis-web-data-visualizer/#/${id}`,\n    appName: 'Data Visualizer'\n  },\n  [CHART]: {\n    id: CHART,\n    endPointName: 'visualizations',\n    propName: 'visualization',\n    pluralTitle: i18n.t('Charts'),\n    domainType: DOMAIN_TYPE_AGGREGATE,\n    isVisualizationType: true,\n    appUrl: id => `dhis-web-data-visualizer/#/${id}`,\n    appName: 'Data Visualizer'\n  },\n  [MAP]: {\n    id: MAP,\n    endPointName: 'maps',\n    propName: 'map',\n    pluralTitle: i18n.t('Maps'),\n    domainType: DOMAIN_TYPE_AGGREGATE,\n    isVisualizationType: true,\n    appUrl: id => `dhis-web-maps/?id=${id}`,\n    appName: 'Maps'\n  },\n  [EVENT_REPORT]: {\n    id: EVENT_REPORT,\n    endPointName: 'eventReports',\n    propName: 'eventReport',\n    pluralTitle: i18n.t('Event reports'),\n    domainType: DOMAIN_TYPE_TRACKER,\n    isVisualizationType: true,\n    appUrl: id => `dhis-web-event-reports/?id=${id}`,\n    appName: 'Event Reports'\n  },\n  [EVENT_CHART]: {\n    id: EVENT_CHART,\n    endPointName: 'eventCharts',\n    propName: 'eventChart',\n    pluralTitle: i18n.t('Event charts'),\n    domainType: DOMAIN_TYPE_TRACKER,\n    isVisualizationType: true,\n    appUrl: id => `dhis-web-event-visualizer/?id=${id}`,\n    appName: 'Event Visualizer'\n  },\n  [APP]: {\n    endPointName: 'apps',\n    propName: 'appKey',\n    pluralTitle: i18n.t('Apps')\n  },\n  [REPORTS]: {\n    id: REPORTS,\n    endPointName: 'reports',\n    propName: 'reports',\n    pluralTitle: i18n.t('Reports'),\n    appUrl: (id, type) => {\n      switch (type) {\n        case 'HTML':\n          return `dhis-web-reports/#/standard-report/view/${id}`;\n\n        case 'JASPER_REPORT_TABLE':\n        case 'JASPER_JDBC':\n        default:\n          return `api/reports/${id}/data.pdf?t=${new Date().getTime()}`;\n      }\n    }\n  },\n  [RESOURCES]: {\n    id: RESOURCES,\n    endPointName: 'resources',\n    propName: 'resources',\n    pluralTitle: i18n.t('Resources'),\n    appUrl: id => `api/documents/${id}/data`\n  },\n  [USERS]: {\n    id: USERS,\n    endPointName: 'users',\n    propName: 'users',\n    pluralTitle: i18n.t('Users'),\n    appUrl: id => `dhis-web-dashboard-integration/profile.action?id=${id}`\n  },\n  [TEXT]: {\n    id: TEXT,\n    propName: 'text'\n  },\n  [MESSAGES]: {\n    propName: 'messages'\n  },\n  [SPACER]: {\n    propName: 'text'\n  },\n  [PAGEBREAK]: {\n    propName: 'text'\n  },\n  [PRINT_TITLE_PAGE]: {\n    propName: 'text'\n  }\n};\nexport const getEndPointName = type => itemTypeMap[type].endPointName;\nexport const getItemUrl = (type, item, d2) => {\n  let url;\n\n  if (type === APP) {\n    url = item.launchUrl;\n  }\n\n  if (itemTypeMap[type] && itemTypeMap[type].appUrl) {\n    url = `${getBaseUrl(d2)}/${itemTypeMap[type].appUrl(item.id, item.type)}`;\n  }\n\n  return url;\n};\nexport const getItemIcon = type => {\n  switch (type) {\n    case REPORT_TABLE:\n    case EVENT_REPORT:\n    case REPORTS:\n      return TableIcon;\n\n    case CHART:\n    case EVENT_CHART:\n      return ChartIcon;\n\n    case MAP:\n      return MapIcon;\n\n    case APP:\n      return ExtensionIcon;\n\n    case RESOURCES:\n      return DescriptionIcon;\n\n    case USERS:\n      return PersonIcon;\n\n    case TEXT:\n      return FontDownloadIcon;\n\n    case MESSAGES:\n      return EmailIcon;\n\n    case SPACER:\n      return CropFreeIcon;\n\n    default:\n      return NotInterestedIcon;\n  }\n};","export const EDIT = 'edit';\nexport const NEW = 'new';\nexport const VIEW = 'view';\nexport const PRINT = 'print';\nexport const PRINT_LAYOUT = 'print-layout';\nexport const isEditMode = mode => [EDIT, NEW].includes(mode);\nexport const isPrintMode = mode => [PRINT, PRINT_LAYOUT].includes(mode);\nexport const isViewMode = mode => mode === VIEW;","export const RECEIVED_USER = 'RECEIVED_USER';\nexport const DEFAULT_STATE_USER = {\n  id: '',\n  username: '',\n  uiLocale: '',\n  isSuperuser: false\n};\nexport default ((state = DEFAULT_STATE_USER, action) => {\n  switch (action.type) {\n    case RECEIVED_USER:\n      {\n        return fromD2ToUserObj(action.value);\n      }\n\n    default:\n      return state;\n  }\n});\n\nfunction fromD2ToUserObj(d2Object) {\n  return {\n    id: d2Object.id,\n    username: d2Object.username,\n    uiLocale: d2Object.settings.keyUiLocale,\n    isSuperuser: d2Object.authorities.has('ALL')\n  };\n} // selectors\n\n\nexport const sGetUserId = state => state.user.id;\nexport const sGetUserUsername = state => state.user.username;\nexport const sGetIsSuperuser = state => state.user.isSuperuser;\nexport const sGetUiLocale = state => state.user.uiLocale;","import { TEXT, SPACER } from './itemTypes';\nimport { getGridItemProperties } from '../components/ItemGrid/gridUtil';\nexport const spacerContent = 'SPACER_ITEM_FOR_DASHBOARD_LAYOUT_CONVENIENCE';\nexport const emptyTextItemContent = 'TEXT_ITEM_WITH_NO_CONTENT';\n\nconst isBackendSpacerType = item => item.type === TEXT && item.text === spacerContent;\n\nconst isUiSpacerType = item => item.type === SPACER;\n\nconst isTextType = item => item.type === TEXT && item.text !== spacerContent;\n\nexport const convertUiItemsToBackend = items => items.map(item => {\n  let text = null;\n\n  if (isUiSpacerType(item)) {\n    text = spacerContent;\n  } else if (isTextType(item)) {\n    text = item.text || emptyTextItemContent;\n  }\n\n  return { ...item,\n    ...(text ? {\n      text\n    } : {})\n  };\n});\nexport const convertBackendItemsToUi = items => items.map(item => {\n  const type = isBackendSpacerType(item) ? SPACER : item.type;\n  const gridProperties = getGridItemProperties(item.id);\n  const text = isTextType(item) ? item.text === emptyTextItemContent ? '' : item.text : null;\n  return { ...item,\n    ...(text !== null ? {\n      text\n    } : {}),\n    type,\n    ...gridProperties\n  };\n});","/** @module reducers/dashboards */\nimport arrayFrom from 'd2-utilizr/lib/arrayFrom';\nimport arraySort from 'd2-utilizr/lib/arraySort';\nimport { orArray, orObject } from '../modules/util';\nimport { convertBackendItemsToUi } from '../modules/uiBackendItemConverter';\nexport const SET_DASHBOARDS = 'SET_DASHBOARDS';\nexport const ADD_DASHBOARDS = 'ADD_DASHBOARDS';\nexport const SET_DASHBOARD_STARRED = 'SET_DASHBOARD_STARRED';\nexport const SET_DASHBOARD_DISPLAY_NAME = 'SET_DASHBOARD_DISPLAY_NAME';\nexport const SET_DASHBOARD_ITEMS = 'SET_DASHBOARD_ITEMS';\nexport const DEFAULT_STATE_DASHBOARDS = {\n  byId: null,\n  items: []\n}; // reducer helper functions\n\nconst updateDashboardProp = ({\n  state,\n  dashboardId,\n  prop,\n  value\n}) => ({\n  byId: { ...state.byId,\n    [dashboardId]: { ...state.byId[dashboardId],\n      [prop]: value\n    }\n  },\n  items: state.items\n});\n/**\n * Reducer that computes and returns the new state based on the given action\n * @function\n * @param {Object} state The current state\n * @param {Object} action The action to be evaluated\n * @returns {Object}\n */\n\n\nexport default ((state = DEFAULT_STATE_DASHBOARDS, action) => {\n  switch (action.type) {\n    case SET_DASHBOARDS:\n      {\n        return {\n          byId: action.value,\n          items: []\n        };\n      }\n\n    case ADD_DASHBOARDS:\n      {\n        return { ...state,\n          byId: { ...state.byId,\n            ...action.value\n          }\n        };\n      }\n\n    case SET_DASHBOARD_STARRED:\n      {\n        return updateDashboardProp({\n          state,\n          dashboardId: action.dashboardId,\n          prop: 'starred',\n          value: action.value\n        });\n      }\n\n    case SET_DASHBOARD_DISPLAY_NAME:\n      {\n        return updateDashboardProp({\n          state,\n          dashboardId: action.dashboardId,\n          prop: 'displayName',\n          value: action.value\n        });\n      }\n\n    case SET_DASHBOARD_ITEMS:\n      {\n        return { ...state,\n          items: action.value\n        };\n      }\n\n    default:\n      return state;\n  }\n}); // root selector\n\nexport const sGetDashboardsRoot = state => state.dashboards; // selector level 1\n\n/**\n * Selector which returns a dashboard by id from the state object\n * If no matching dashboard is found it returns undefined\n * If dashboards.byId is null, then the dashboards api request\n * has not yet completed. If dashboards.byId is an empty object\n * then the dashboards api request is complete, but no dashboards\n * were returned\n *\n * @function\n * @param {Object} state The current state\n * @param {Number} id The id of the dashboard\n * @returns {Object | undefined}\n */\n\nexport const sGetDashboardById = (state, id) => orObject(sGetDashboardsRoot(state).byId)[id];\nexport const sDashboardsIsFetching = state => {\n  return sGetDashboardsRoot(state).byId === null;\n};\n/**\n * Selector which returns all dashboards (the byId object)\n *\n * @function\n * @param {Object} state The current state\n * @returns {Object | undefined}\n */\n\nexport const sGetAllDashboards = state => orObject(sGetDashboardsRoot(state).byId);\n/**\n * Selector which returns the current dashboard items\n *\n * @function\n * @param {Object} state The current state\n * @returns {Array}\n */\n\nexport const sGetDashboardItems = state => sGetDashboardsRoot(state).items; // selector level 2\n\nexport const sGetStarredDashboards = state => Object.values(sGetAllDashboards(state)).filter(dashboard => dashboard.starred === true);\nexport const sGetUnstarredDashboards = state => Object.values(sGetAllDashboards(state)).filter(dashboard => dashboard.starred === false); // selector level 3\n\nexport const sGetStarredDashboardIds = state => {\n  return sGetStarredDashboards(state).map(dashboard => dashboard.id);\n};\nexport const sGetUnstarredDashboardIds = state => sGetUnstarredDashboards(state).map(dashboard => dashboard.id);\nexport const sGetDashboardsSortedByStarred = state => [...arraySort(sGetStarredDashboards(state), 'ASC', 'displayName'), ...arraySort(sGetUnstarredDashboards(state), 'ASC', 'displayName')]; // utils\n\n/**\n * Returns the array of dashboards, customized for ui\n * @function\n * @param {Array} data The original dashboard list\n * @returns {Array}\n */\n\nexport const getCustomDashboards = data => arrayFrom(data).map(d => ({\n  id: d.id,\n  name: d.name,\n  displayName: d.displayName,\n  description: d.description,\n  displayDescription: d.displayDescription,\n  starred: d.favorite,\n  owner: d.user.name,\n  created: d.created.split('T').join(' ').substr(0, 16),\n  lastUpdated: d.lastUpdated.split('T').join(' ').substr(0, 16),\n  access: d.access,\n  numberOfItems: orArray(d.dashboardItems).length,\n  dashboardItems: convertBackendItemsToUi(d.dashboardItems)\n}));","/** @module reducers/selected */\nimport { combineReducers } from 'redux';\nimport { validateReducer } from '../modules/util';\nexport const SET_SELECTED_ID = 'SET_SELECTED_ID';\nexport const SET_SELECTED_ISLOADING = 'SET_SELECTED_ISLOADING';\nexport const SET_SELECTED_SHOWDESCRIPTION = 'SET_SELECTED_SHOWDESCRIPTION';\nexport const DEFAULT_STATE_SELECTED_ID = null;\nexport const DEFAULT_STATE_SELECTED_ISLOADING = false;\nexport const DEFAULT_STATE_SELECTED_SHOWDESCRIPTION = false;\nexport const NON_EXISTING_DASHBOARD_ID = '0';\n/**\n * Reducer functions that computes and returns the new state based on the given action\n * @function\n * @param {Object} state The current state\n * @param {Object} action The action to be evaluated\n */\n\nconst id = (state = DEFAULT_STATE_SELECTED_ID, action) => {\n  switch (action.type) {\n    case SET_SELECTED_ID:\n      return validateReducer(action.value, DEFAULT_STATE_SELECTED_ID);\n\n    default:\n      return state;\n  }\n};\n\nconst isLoading = (state = DEFAULT_STATE_SELECTED_ISLOADING, action) => {\n  switch (action.type) {\n    case SET_SELECTED_ISLOADING:\n      return validateReducer(action.value, DEFAULT_STATE_SELECTED_ISLOADING);\n\n    default:\n      return state;\n  }\n};\n\nconst showDescription = (state = DEFAULT_STATE_SELECTED_SHOWDESCRIPTION, action) => {\n  switch (action.type) {\n    case SET_SELECTED_SHOWDESCRIPTION:\n      return validateReducer(action.value, DEFAULT_STATE_SELECTED_SHOWDESCRIPTION);\n\n    default:\n      return state;\n  }\n};\n\nexport default combineReducers({\n  id,\n  isLoading,\n  showDescription\n}); // Selectors\n\nexport const sGetSelectedRoot = state => state.selected;\nexport const sGetSelectedId = state => sGetSelectedRoot(state).id;\nexport const sGetSelectedIsLoading = state => sGetSelectedRoot(state).isLoading;\nexport const sGetSelectedShowDescription = state => sGetSelectedRoot(state).showDescription;","import { getDimensionById, DIMENSION_ID_PERIOD, DIMENSION_ID_ORGUNIT } from '@dhis2/analytics';\nexport const SET_DIMENSIONS = 'SET_DIMENSIONS';\nexport const DEFAULT_DIMENSIONS = [getDimensionById(DIMENSION_ID_PERIOD), getDimensionById(DIMENSION_ID_ORGUNIT)];\nexport default ((state = DEFAULT_DIMENSIONS, action) => {\n  switch (action.type) {\n    case SET_DIMENSIONS:\n      {\n        return [...DEFAULT_DIMENSIONS, ...action.value];\n      }\n\n    default:\n      return state;\n  }\n});\nexport const sGetDimensions = state => state.dimensions;","import { sGetDimensions } from './dimensions';\nimport { createSelector } from 'reselect';\nexport const CLEAR_ITEM_FILTERS = 'CLEAR_ITEM_FILTERS';\nexport const SET_ITEM_FILTERS = 'SET_ITEM_FILTERS';\nexport const ADD_ITEM_FILTER = 'ADD_ITEM_FILTER';\nexport const REMOVE_ITEM_FILTER = 'REMOVE_ITEM_FILTER';\nexport const DEFAULT_STATE_ITEM_FILTERS = {};\nexport default ((state = DEFAULT_STATE_ITEM_FILTERS, action) => {\n  switch (action.type) {\n    case ADD_ITEM_FILTER:\n      {\n        return { ...state,\n          [action.filter.id]: action.filter.value\n        };\n      }\n\n    case REMOVE_ITEM_FILTER:\n      {\n        const newState = { ...state\n        };\n        delete newState[action.id];\n        return newState;\n      }\n\n    case SET_ITEM_FILTERS:\n      {\n        return action.filters;\n      }\n\n    case CLEAR_ITEM_FILTERS:\n      {\n        return DEFAULT_STATE_ITEM_FILTERS;\n      }\n\n    default:\n      return state;\n  }\n}); // selectors\n\nexport const sGetItemFiltersRoot = state => state.itemFilters;\nexport const sGetFiltersKeys = state => Object.keys(sGetItemFiltersRoot(state)); // simplify the filters structure to:\n// [{ id: 'pe', name: 'Period', values: [{ id: 2019: name: '2019' }, {id: 'LAST_MONTH', name: 'Last month' }]}, ...]\n\nexport const sGetNamedItemFilters = createSelector([sGetItemFiltersRoot, sGetDimensions], (filters, dimensions) => Object.keys(filters).reduce((arr, id) => {\n  arr.push({\n    id: id,\n    name: dimensions.find(dimension => dimension.id === id).name,\n    values: filters[id].map(value => ({\n      id: value.id,\n      name: value.displayName || value.name\n    }))\n  });\n  return arr;\n}, []));","import { ADD_ITEM_FILTER, REMOVE_ITEM_FILTER, SET_ITEM_FILTERS, CLEAR_ITEM_FILTERS } from '../reducers/itemFilters';\nexport const FILTER_ORG_UNIT = 'ou'; // actions\n\nexport const acAddItemFilter = filter => ({\n  type: ADD_ITEM_FILTER,\n  filter\n});\nexport const acRemoveItemFilter = id => ({\n  type: REMOVE_ITEM_FILTER,\n  id\n});\nexport const acClearItemFilters = () => ({\n  type: CLEAR_ITEM_FILTERS\n});\nexport const acSetItemFilters = filters => ({\n  type: SET_ITEM_FILTERS,\n  filters\n});","import update from 'immutability-helper';\nimport { arrayToIdMap } from '../modules/util';\nexport const RECEIVED_MESSAGES = 'RECEIVED_MESSAGES';\nexport default ((state = {}, action) => {\n  switch (action.type) {\n    case RECEIVED_MESSAGES:\n      {\n        const conversations = arrayToIdMap(action.value);\n        const newState = update(state, {\n          $merge: conversations\n        });\n        return newState;\n      }\n\n    default:\n      return state;\n  }\n}); // selectors\n\nexport const sGetMessagesRoot = state => state.messages;","import { getInstance } from 'd2';\nexport const getMessages = () => {\n  const fields = 'id,messageCount,lastUpdated,messageType,displayName,read,messages[id,read,sender[id,displayName],text,lastUpdated]';\n  const url = `/messageConversations?fields=${fields}&order=read:asc&pageSize=200`;\n  return getInstance().then(d2 => d2.Api.getApi().get(url)).catch(error => console.log('Error:', error));\n};","import { RECEIVED_MESSAGES } from '../../../reducers/messages';\nimport { getMessages } from '../../../api/messages';\n\nconst onError = (action, error) => {\n  console.log(`Error in action ${action}: ${error}`);\n  return error;\n};\n\nexport const receivedMessages = value => ({\n  type: RECEIVED_MESSAGES,\n  value\n});\nexport const tGetMessages = () => async dispatch => {\n  try {\n    const messages = await getMessages();\n    const {\n      messageConversations\n    } = messages;\n    return dispatch(receivedMessages(messageConversations));\n  } catch (err) {\n    return onError('Get Messages', err);\n  }\n};","export const RECEIVED_SNACKBAR_MESSAGE = 'RECEIVED_SNACKBAR_MESSAGE';\nexport const CLOSE_SNACKBAR = 'CLOSE_SNACKBAR';\nexport const DEFAULT_STATE_SNACKBAR = {\n  message: {},\n  duration: null,\n  open: false\n};\nexport default ((state = DEFAULT_STATE_SNACKBAR, action) => {\n  switch (action.type) {\n    case RECEIVED_SNACKBAR_MESSAGE:\n      {\n        return { ...state,\n          ...action.value\n        };\n      }\n\n    case CLOSE_SNACKBAR:\n      {\n        return DEFAULT_STATE_SNACKBAR;\n      }\n\n    default:\n      return state;\n  }\n}); // selectors\n\nexport const sGetSnackbar = state => state.snackbar || DEFAULT_STATE_SNACKBAR;","import { RECEIVED_SNACKBAR_MESSAGE, CLOSE_SNACKBAR } from '../reducers/snackbar';\nexport const acReceivedSnackbarMessage = value => ({\n  type: RECEIVED_SNACKBAR_MESSAGE,\n  value\n});\nexport const acCloseSnackbar = () => ({\n  type: CLOSE_SNACKBAR\n});","import { orObject } from '../modules/util';\nimport objectClean from 'd2-utilizr/lib/objectClean';\n/** @module reducers/visualizations */\n\nexport const ADD_VISUALIZATION = 'ADD_VISUALIZATION';\nexport const SET_ACTIVE_VISUALIZATION_TYPE = 'SET_ACTIVE_VISUALIZATION_TYPE';\nexport const DEFAULT_STATE_VISUALIZATIONS = {};\n\nconst isEmpty = p => p === undefined || p === null;\n\nexport default ((state = DEFAULT_STATE_VISUALIZATIONS, action) => {\n  switch (action.type) {\n    case ADD_VISUALIZATION:\n      {\n        return { ...state,\n          [action.value.id]: objectClean({ ...orObject(state[action.value.id]),\n            ...action.value\n          }, isEmpty)\n        };\n      }\n\n    case SET_ACTIVE_VISUALIZATION_TYPE:\n      {\n        return { ...state,\n          [action.id]: objectClean({ ...orObject(state[action.id]),\n            activeType: action.activeType\n          }, isEmpty)\n        };\n      }\n\n    default:\n      return state;\n  }\n}); // root selector\n\nexport const sGetVisualizationsRoot = state => state.visualizations; // selectors level 1\n\nexport const sGetVisualization = (state, id) => {\n  return sGetVisualizationsRoot(state)[id];\n};","import { ADD_VISUALIZATION, SET_ACTIVE_VISUALIZATION_TYPE } from '../reducers/visualizations';\nexport const acAddVisualization = value => ({\n  type: ADD_VISUALIZATION,\n  value\n});\nexport const acSetActiveVisualizationType = (id, activeType) => {\n  const action = {\n    type: SET_ACTIVE_VISUALIZATION_TYPE,\n    id,\n    activeType\n  };\n  return action;\n};","import arrayClean from 'd2-utilizr/lib/arrayClean';\nimport { getListItemFields, getFavoritesFields, getIdNameFields } from './metadata'; // Helper functions\n\nexport const onError = error => console.log('Error: ', error); // Dashboard item\n\nexport const getDashboardItemsFields = ({\n  withFavorite\n} = {}) => arrayClean(['id', 'type', 'shape', 'x', 'y', 'width~rename(w)', 'height~rename(h)', 'messages', 'text', 'appKey', `${getListItemFields().join(',')}`, withFavorite ? `${getFavoritesFields({\n  withDimensions: withFavorite.withDimensions\n}).join(',')}` : ``]); // Dashboard\n\nexport const getDashboardFields = ({\n  withItems,\n  withFavorite\n} = {}) => arrayClean([`${getIdNameFields().join(',')}`, 'description', 'displayDescription', 'favorite', `user[${getIdNameFields({\n  rename: true\n}).join(',')}]`, 'created', 'lastUpdated', 'access', withItems ? `dashboardItems[${getDashboardItemsFields({\n  withFavorite\n}).join(',')}]` : ``]);","import { getInstance } from 'd2';\nimport arrayClean from 'd2-utilizr/lib/arrayClean';\nimport { onError, getDashboardFields } from './index'; // Get \"all\" dashboards on startup\n\nexport const apiFetchDashboards = () => getInstance().then(d2 => d2.models.dashboard.list({\n  fields: [getDashboardFields().join(','), 'dashboardItems[id]'].join(','),\n  paging: 'false'\n})).catch(onError); // Get more info about selected dashboard\n\nexport const apiFetchDashboard = id => getInstance().then(d2 => d2.models.dashboard.get(id, {\n  fields: arrayClean(getDashboardFields({\n    withItems: true,\n    withFavorite: {\n      withDimensions: false\n    }\n  })).join(',')\n})).catch(onError); // Star dashboard\n\nexport const apiStarDashboard = (id, isStarred) => {\n  const url = `dashboards/${id}/favorite`;\n  getInstance().then(d2 => {\n    if (isStarred) {\n      d2.Api.getApi().post(url);\n    } else {\n      d2.Api.getApi().delete(url);\n    }\n  });\n};\nexport const apiDeleteDashboard = id => {\n  return getInstance().then(d2 => {\n    return d2.models.dashboards.get(id).then(dashboard => dashboard.delete());\n  }).catch(onError);\n};","import { getInstance } from 'd2';\nexport const NAMESPACE = 'dashboard';\nexport const hasNamespace = async (d2) => await d2.currentUser.dataStore.has(NAMESPACE);\nexport const getNamespace = async (d2, hasNamespace) => hasNamespace ? await d2.currentUser.dataStore.get(NAMESPACE) : await d2.currentUser.dataStore.create(NAMESPACE);\nexport const apiPostUserDataStoreValue = async (key, value) => {\n  const d2 = await getInstance();\n  const ns = await getNamespace(d2, hasNamespace);\n  ns.set(key, value);\n};\nexport const apiGetUserDataStoreValue = async (key, defaultValue) => {\n  const d2 = await getInstance();\n  const namespace = await getNamespace(d2, await hasNamespace(d2));\n  const hasKey = namespace?.keys?.find(k => k === key);\n\n  if (hasKey) {\n    return await namespace.get(key);\n  } else {\n    await apiPostUserDataStoreValue(key, defaultValue, namespace);\n    console.log('(These errors to /userDataStore can be ignored)');\n    return defaultValue;\n  }\n};","import React from 'react';\nimport { connect } from 'react-redux';\nimport Snackbar from '@material-ui/core/Snackbar';\nimport PropTypes from 'prop-types';\nimport { sGetSnackbar } from '../../reducers/snackbar';\nimport { acCloseSnackbar } from '../../actions/snackbar';\nconst LOADING_DASHBOARD = 'LOADING_DASHBOARD';\nexport const loadingDashboardMsg = {\n  name: '',\n  type: LOADING_DASHBOARD\n};\n\nconst SnackbarMessageContent = ({\n  message\n}) => {\n  if (typeof message === 'object') {\n    //future message types:  switch(message.type)\n    return <span>\n                Loading <span style={{\n        fontWeight: 800\n      }}>{message.name}</span>{' '}\n                dashboard\n            </span>;\n  }\n\n  return message;\n};\n\nexport const SnackbarMessage = props => {\n  return <Snackbar style={{\n    zIndex: 10001\n  }} open={props.snackbarOpen} message={<SnackbarMessageContent message={props.snackbarMessage} />} autoHideDuration={props.snackbarDuration} onClose={props.onCloseSnackbar} />;\n};\n\nconst mapStateToProps = state => {\n  const {\n    message,\n    duration,\n    open\n  } = sGetSnackbar(state);\n  return {\n    snackbarOpen: open,\n    snackbarMessage: message,\n    snackbarDuration: duration\n  };\n};\n\nSnackbarMessage.propTypes = {\n  snackbarDuration: PropTypes.string,\n  snackbarMessage: PropTypes.object,\n  snackbarOpen: PropTypes.bool,\n  onCloseSnackbar: PropTypes.func\n};\nexport default connect(mapStateToProps, {\n  onCloseSnackbar: acCloseSnackbar\n})(SnackbarMessage);","import { getCustomDashboards, sGetDashboardById } from '../reducers/dashboards';\nimport { SET_SELECTED_ID, SET_SELECTED_ISLOADING, SET_SELECTED_SHOWDESCRIPTION, sGetSelectedIsLoading, sGetSelectedId } from '../reducers/selected';\nimport { sGetUserUsername } from '../reducers/user';\nimport { acSetDashboardItems, acAppendDashboards } from './dashboards';\nimport { acClearItemFilters } from './itemFilters';\nimport { tGetMessages } from '../components/Item/MessagesItem/actions';\nimport { acReceivedSnackbarMessage, acCloseSnackbar } from './snackbar';\nimport { acAddVisualization } from './visualizations';\nimport { apiFetchDashboard } from '../api/dashboards';\nimport { storePreferredDashboardId } from '../api/localStorage';\nimport { apiGetShowDescription, apiPostShowDescription } from '../api/description';\nimport { withShape } from '../components/ItemGrid/gridUtil';\nimport { loadingDashboardMsg } from '../components/SnackbarMessage/SnackbarMessage';\nimport { extractFavorite } from '../components/Item/VisualizationItem/plugin';\nimport { REPORT_TABLE, CHART, MAP, EVENT_REPORT, EVENT_CHART, MESSAGES } from '../modules/itemTypes';\nimport { orObject } from '../modules/util'; // actions\n\nexport const acSetSelectedId = value => ({\n  type: SET_SELECTED_ID,\n  value\n});\nexport const acSetSelectedIsLoading = value => ({\n  type: SET_SELECTED_ISLOADING,\n  value\n});\nexport const acSetSelectedShowDescription = value => ({\n  type: SET_SELECTED_SHOWDESCRIPTION,\n  value\n}); // thunks\n\nexport const tSetSelectedDashboardById = id => async (dispatch, getState) => {\n  dispatch(acSetSelectedIsLoading(true));\n  const snackbarTimeout = setTimeout(() => {\n    const dashboardName = orObject(sGetDashboardById(getState(), id)).displayName;\n\n    if (sGetSelectedIsLoading(getState()) && dashboardName) {\n      loadingDashboardMsg.name = dashboardName;\n      dispatch(acReceivedSnackbarMessage({\n        message: loadingDashboardMsg,\n        open: true\n      }));\n    }\n  }, 500);\n\n  const onSuccess = selected => {\n    dispatch(acAppendDashboards(selected));\n    const customDashboard = getCustomDashboards(selected)[0];\n    dispatch(acSetDashboardItems(withShape(customDashboard.dashboardItems)));\n    storePreferredDashboardId(sGetUserUsername(getState()), id);\n    customDashboard.dashboardItems.forEach(item => {\n      switch (item.type) {\n        case REPORT_TABLE:\n        case CHART:\n        case MAP:\n        case EVENT_REPORT:\n        case EVENT_CHART:\n          dispatch(acAddVisualization(extractFavorite(item)));\n          break;\n\n        case MESSAGES:\n          dispatch(tGetMessages(id));\n          break;\n\n        default:\n          break;\n      }\n    });\n\n    if (id !== sGetSelectedId(getState())) {\n      dispatch(acClearItemFilters());\n    }\n\n    dispatch(acSetSelectedId(id));\n    dispatch(acSetSelectedIsLoading(false));\n    clearTimeout(snackbarTimeout);\n    dispatch(acCloseSnackbar());\n    return selected;\n  };\n\n  const onError = error => {\n    console.log('Error: ', error);\n    return error;\n  };\n\n  try {\n    const dashboard = await apiFetchDashboard(id);\n    return onSuccess(dashboard);\n  } catch (err) {\n    return onError(err);\n  }\n};\nexport const tSetShowDescription = () => async dispatch => {\n  const onSuccess = value => {\n    dispatch(acSetSelectedShowDescription(value));\n  };\n\n  const onError = error => {\n    console.log('Error (apiGetShowDescription): ', error);\n    return error;\n  };\n\n  try {\n    const showDescription = await apiGetShowDescription();\n    return onSuccess(showDescription);\n  } catch (err) {\n    return onError(err);\n  }\n};\nexport const tUpdateShowDescription = value => async dispatch => {\n  const onSuccess = () => {\n    dispatch(acSetSelectedShowDescription(value));\n  };\n\n  const onError = error => {\n    console.log('Error (apiGetShowDescription): ', error);\n    return error;\n  };\n\n  try {\n    await apiPostShowDescription(value);\n    return onSuccess();\n  } catch (err) {\n    return onError(err);\n  }\n};","export const getPreferredDashboardId = username => localStorage.getItem(`dhis2.dashboard.current.${username}`) || undefined;\nexport const storePreferredDashboardId = (username, dashboardId) => {\n  localStorage.setItem(`dhis2.dashboard.current.${username}`, dashboardId);\n};","import { apiGetUserDataStoreValue, apiPostUserDataStoreValue } from './userDataStore';\nimport { DEFAULT_STATE_SELECTED_SHOWDESCRIPTION } from '../reducers/selected';\nconst KEY_SHOW_DESCRIPTION = 'showDescription';\nexport const apiGetShowDescription = async () => await apiGetUserDataStoreValue(KEY_SHOW_DESCRIPTION, DEFAULT_STATE_SELECTED_SHOWDESCRIPTION);\nexport const apiPostShowDescription = async (value) => await apiPostUserDataStoreValue(KEY_SHOW_DESCRIPTION, value);","import { SET_DASHBOARDS, ADD_DASHBOARDS, SET_DASHBOARD_STARRED, SET_DASHBOARD_DISPLAY_NAME, SET_DASHBOARD_ITEMS } from '../reducers/dashboards';\nimport { getCustomDashboards, sGetDashboardById, sGetDashboardsSortedByStarred } from '../reducers/dashboards';\nimport { NON_EXISTING_DASHBOARD_ID } from '../reducers/selected';\nimport { sGetUserUsername } from '../reducers/user';\nimport { tSetSelectedDashboardById, acSetSelectedId } from './selected';\nimport { apiFetchDashboards, apiStarDashboard, apiDeleteDashboard } from '../api/dashboards';\nimport { getPreferredDashboardId } from '../api/localStorage';\nimport { arrayToIdMap } from '../modules/util'; // actions\n\nexport const acSetDashboards = dashboards => ({\n  type: SET_DASHBOARDS,\n  value: arrayToIdMap(getCustomDashboards(dashboards))\n});\nexport const acAppendDashboards = dashboards => ({\n  type: ADD_DASHBOARDS,\n  value: arrayToIdMap(getCustomDashboards(dashboards))\n});\nexport const acSetDashboardStarred = (dashboardId, isStarred) => ({\n  type: SET_DASHBOARD_STARRED,\n  dashboardId: dashboardId,\n  value: isStarred\n});\nexport const acSetDashboardDisplayName = (dashboardId, value) => ({\n  type: SET_DASHBOARD_DISPLAY_NAME,\n  dashboardId,\n  value\n});\nexport const acSetDashboardItems = value => ({\n  type: SET_DASHBOARD_ITEMS,\n  value\n}); // thunks\n\nexport const tFetchDashboards = () => async dispatch => {\n  const collection = await apiFetchDashboards();\n  dispatch(acSetDashboards(collection.toArray()));\n};\nexport const tSelectDashboard = id => async (dispatch, getState) => {\n  const onError = error => {\n    console.log('Error (apiFetchDashboards): ', error);\n    return error;\n  };\n\n  try {\n    const state = getState();\n    let dashboardToSelect = null;\n\n    if (id) {\n      dashboardToSelect = sGetDashboardById(state, id) || null;\n    } else {\n      const preferredId = getPreferredDashboardId(sGetUserUsername(state));\n      const dash = sGetDashboardById(state, preferredId);\n      dashboardToSelect = preferredId && dash ? dash : sGetDashboardsSortedByStarred(state)[0];\n    }\n\n    if (dashboardToSelect) {\n      dispatch(tSetSelectedDashboardById(dashboardToSelect.id));\n    } else {\n      dispatch(acSetSelectedId(NON_EXISTING_DASHBOARD_ID));\n    }\n  } catch (err) {\n    return onError(err);\n  }\n};\nexport const tStarDashboard = (id, isStarred) => async dispatch => {\n  const onSuccess = id => {\n    dispatch(acSetDashboardStarred(id, isStarred));\n    return id;\n  };\n\n  const onError = error => {\n    console.log('Error (apiStarDashboard): ', error);\n    return error;\n  };\n\n  try {\n    await apiStarDashboard(id, isStarred);\n    return onSuccess(id);\n  } catch (err) {\n    return onError(err);\n  }\n};\nexport const tDeleteDashboard = id => async dispatch => {\n  try {\n    await apiDeleteDashboard(id);\n    await dispatch(tFetchDashboards());\n    return Promise.resolve();\n  } catch (err) {\n    console.log('Error (deleteDashboard): ', err);\n    return err;\n  }\n};","/** @module reducers/controlBar */\nimport { combineReducers } from 'redux';\nimport { validateReducer } from '../modules/util';\nexport const SET_CONTROLBAR_USER_ROWS = 'SET_CONTROLBAR_USER_ROWS';\nexport const DEFAULT_STATE_CONTROLBAR_ROWS = 1;\n\nconst userRows = (state = DEFAULT_STATE_CONTROLBAR_ROWS, action) => {\n  switch (action.type) {\n    case SET_CONTROLBAR_USER_ROWS:\n      return validateReducer(action.value, DEFAULT_STATE_CONTROLBAR_ROWS);\n\n    default:\n      return state;\n  }\n};\n\nexport default combineReducers({\n  userRows\n});\n/**\n * Selectors that point to specific props in the state object\n * @function\n * @param {Object} state\n * @returns {Object}\n */\n\nexport const sGetControlBarRoot = state => state.controlBar; // Selector dependency level 2\n\nexport const sGetControlBarUserRows = state => sGetControlBarRoot(state).userRows;","import { SET_CONTROLBAR_USER_ROWS } from '../reducers/controlBar';\nimport { apiGetControlBarRows } from '../api/controlBar'; // actions\n\nexport const acSetControlBarUserRows = rows => ({\n  type: SET_CONTROLBAR_USER_ROWS,\n  value: rows\n}); // thunks\n\nexport const tSetControlBarRows = () => async dispatch => {\n  const onSuccess = rows => {\n    dispatch(acSetControlBarUserRows(rows));\n  };\n\n  const onError = error => {\n    console.log('Error (apiGetControlBarRows): ', error);\n    return error;\n  };\n\n  try {\n    const controlBarRows = await apiGetControlBarRows();\n    return onSuccess(controlBarRows);\n  } catch (err) {\n    return onError(err);\n  }\n};","import { apiGetUserDataStoreValue, apiPostUserDataStoreValue } from './userDataStore';\nimport { DEFAULT_STATE_CONTROLBAR_ROWS } from '../reducers/controlBar';\nconst KEY_CONTROLBAR_ROWS = 'controlBarRows';\nexport const apiGetControlBarRows = async () => await apiGetUserDataStoreValue(KEY_CONTROLBAR_ROWS, DEFAULT_STATE_CONTROLBAR_ROWS);\nexport const apiPostControlBarRows = async (value) => await apiPostUserDataStoreValue(KEY_CONTROLBAR_ROWS, value);","export const SET_SETTINGS = 'SET_SETTINGS';\nexport const ADD_SETTINGS = 'ADD_SETTINGS';\nexport const DEFAULT_SETTINGS = {\n  keyDateFormat: 'yyyy-MM-dd',\n  keyAnalysisRelativePeriod: 'LAST_12_MONTHS',\n  keyAnalysisDigitGroupSeparator: 'SPACE',\n  displayNameProperty: 'displayName',\n  uiLocale: 'en',\n  rootOrganisationUnit: {}\n};\nexport default ((state = DEFAULT_SETTINGS, action) => {\n  switch (action.type) {\n    case SET_SETTINGS:\n      {\n        return Object.assign({}, action.value);\n      }\n\n    case ADD_SETTINGS:\n      {\n        return { ...state,\n          ...action.value\n        };\n      }\n\n    default:\n      return state;\n  }\n}); // Selectors\n\nexport const sGetSettings = state => state.settings;\nexport const sGetSettingsDisplayNameProperty = state => sGetSettings(state).displayNameProperty;\nexport const sGetRootOrgUnit = state => sGetSettings(state).rootOrganisationUnit;\nexport const sGetRelativePeriod = state => sGetSettings(state).keyAnalysisRelativePeriod;\nexport const sGetUiLocale = state => sGetSettings(state).uiLocale;","import { SET_DIMENSIONS } from '../reducers/dimensions';\nimport { apiFetchDimensions } from '@dhis2/analytics';\nimport { sGetSettingsDisplayNameProperty } from '../reducers/settings';\nexport const acSetDimensions = dimensions => ({\n  type: SET_DIMENSIONS,\n  value: dimensions\n});\nexport const tSetDimensions = d2 => async (dispatch, getState) => {\n  const onSuccess = dimensions => {\n    dispatch(acSetDimensions(dimensions));\n  };\n\n  const onError = error => {\n    console.log('Error (apiFetchDimensions): ', error);\n    return error;\n  };\n\n  try {\n    const displayNameProp = sGetSettingsDisplayNameProperty(getState());\n    const dimensions = await apiFetchDimensions(d2, displayNameProp); // filter out CATEGORY that are not of type ATTRIBUTE\n\n    const filteredDimensions = dimensions.filter(dim => dim.dimensionType !== 'CATEGORY' || dim.dimensionType === 'CATEGORY' && dim.dataDimensionType === 'ATTRIBUTE');\n    return onSuccess(filteredDimensions);\n  } catch (err) {\n    return onError(err);\n  }\n};","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { colors } from '@dhis2/ui';\nimport classes from './styles/ControlBar.module.css';\nexport const DRAG_HANDLE_HEIGHT = 7;\n\nclass ControlBar extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      dragging: false\n    };\n  }\n\n  onStartDrag = () => {\n    this.setState({\n      dragging: true\n    });\n    window.addEventListener('mousemove', this.onDrag);\n    window.addEventListener('mouseup', this.onEndDrag);\n  };\n  onDrag = event => {\n    event.preventDefault();\n    event.stopPropagation();\n    const newHeight = event.clientY;\n\n    if (this.props.onChangeHeight && newHeight !== this.props.height && newHeight > 0) {\n      requestAnimationFrame(() => {\n        this.props.onChangeHeight(newHeight);\n      });\n    }\n  };\n  onEndDrag = () => {\n    this.setState({\n      dragging: false\n    });\n    window.removeEventListener('mousemove', this.onDrag);\n    window.removeEventListener('mouseup', this.onEndDrag);\n\n    if (this.props.onEndDrag) {\n      this.props.onEndDrag();\n    }\n  };\n\n  renderDragHandle() {\n    return typeof this.props.onChangeHeight === 'function' ? <div className={classes.draghandle} style={{\n      height: DRAG_HANDLE_HEIGHT\n    }} onMouseDown={this.onStartDrag} /> : null;\n  }\n\n  render() {\n    const height = Math.max(this.props.height, 0) + DRAG_HANDLE_HEIGHT;\n    const rootStyle = Object.assign({\n      height,\n      backgroundColor: this.props.editMode ? colors.yellow050 : colors.white,\n      paddingBottom: DRAG_HANDLE_HEIGHT\n    }, // Disable animations while dragging\n    this.state.dragging ? {\n      transition: 'none'\n    } : {});\n    return <div style={rootStyle} className={classes.root}>\n                <div className={classes.content}>{this.props.children}</div>\n                {this.renderDragHandle()}\n            </div>;\n  }\n\n}\n\nControlBar.propTypes = {\n  /**\n   * The height of the control bar in number of lines. Must be a positive integer.\n   */\n  children: PropTypes.node.isRequired,\n\n  /**\n   * If true, the background color of the control bar changes to indicate that edit mode is active.\n   */\n  editMode: PropTypes.bool.isRequired,\n\n  /**\n   * Callback function that is called when the control bar is resized.\n   * The callback receives one argument: The new height in pixels.\n   *\n   * If no callback is specified the control bar will not have a drag handle.\n   */\n  height: PropTypes.number.isRequired,\n\n  /**\n   * Callback function that is called when the control bar is dropped after being dragged.\n   * The callback receives one argument: The new height in pixels.\n   *\n   * Ignored if no \"onChangeHeight\" function is provided.\n   */\n  onChangeHeight: PropTypes.func,\n\n  /**\n   * The contents of the control bar.\n   */\n  onEndDrag: PropTypes.func\n};\nControlBar.defaultProps = {\n  onChangeHeight: null,\n  onEndDrag: null\n};\nexport default ControlBar;","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst StarIcon = ({\n  className\n}) => <svg className={className} xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\">\n        <path d=\"M0 0h24v24H0z\" fill=\"none\" />\n        <path d=\"M12 17.27L18.18 21l-1.64-7.03L22 9.24l-7.19-.61L12 2 9.19 8.63 2 9.24l5.46 4.73L5.82 21z\" />\n        <path d=\"M0 0h24v24H0z\" fill=\"none\" />\n    </svg>;\n\nStarIcon.propTypes = {\n  className: PropTypes.string\n};\nexport default StarIcon;","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Chip } from '@dhis2/ui';\nimport { Link } from 'react-router-dom';\nimport debounce from 'lodash/debounce';\nimport StarIcon from '../../icons/Star';\nimport { apiPostDataStatistics } from '../../api/dataStatistics';\nimport classes from './styles/DashboardItemChip.module.css';\nexport const DashboardItemChip = ({\n  starred,\n  selected,\n  label,\n  dashboardId\n}) => {\n  const chipProps = {\n    selected\n  };\n\n  if (starred) {\n    const selectedState = selected ? classes.selected : classes.unselected;\n    chipProps.icon = <StarIcon className={`${classes.icon} ${selectedState}`} />;\n  }\n\n  return <Link className={classes.link} to={`/${dashboardId}`} onClick={debounce(() => apiPostDataStatistics('DASHBOARD_VIEW', dashboardId), 500)}>\n            <Chip {...chipProps}>{label}</Chip>\n        </Link>;\n};\nDashboardItemChip.propTypes = {\n  dashboardId: PropTypes.string.isRequired,\n  label: PropTypes.string.isRequired,\n  selected: PropTypes.bool.isRequired,\n  starred: PropTypes.bool.isRequired,\n  classes: PropTypes.object\n};\nexport default DashboardItemChip;","import { getInstance } from 'd2';\nexport const apiPostDataStatistics = async (eventType, id) => {\n  const d2 = await getInstance();\n  const url = `dataStatistics?eventType=${eventType}&favorite=${id}`;\n  d2.Api.getApi().post(url);\n};","import React from 'react';\nimport { colors } from '@dhis2/ui';\n\nconst AddCircleIcon = () => <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"32\" height=\"32\" fill={colors.teal600} viewBox=\"0 0 24 24\">\n        <path d=\"M12 2C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2zm4 11h-3v3c0 .55-.45 1-1 1s-1-.45-1-1v-3H8c-.55 0-1-.45-1-1s.45-1 1-1h3V8c0-.55.45-1 1-1s1 .45 1 1v3h3c.55 0 1 .45 1 1s-.45 1-1 1z\" />\n    </svg>;\n\nexport default AddCircleIcon;","import React from 'react';\nimport { colors } from '@dhis2/ui';\nimport PropTypes from 'prop-types';\n\nconst ClearIcon = ({\n  className\n}) => <svg className={className} fill={colors.grey800} xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\">\n        <path d=\"M19 6.41L17.59 5 12 10.59 6.41 5 5 6.41 10.59 12 5 17.59 6.41 19 12 13.41 17.59 19 19 17.59 13.41 12z\" />\n        <path d=\"M0 0h24v24H0z\" fill=\"none\" />\n    </svg>;\n\nClearIcon.propTypes = {\n  className: PropTypes.string\n};\nexport default ClearIcon;","import React from 'react';\nimport PropTypes from 'prop-types';\nimport ClearIcon from '../../icons/Clear';\nimport classes from './styles/ClearButton.module.css';\nexport const ClearButton = ({\n  onClear\n}) => <button className={classes.button} onClick={onClear}>\n        <span>\n            <ClearIcon className={classes.icon} color=\"action\" />\n        </span>\n    </button>;\nClearButton.propTypes = {\n  onClear: PropTypes.func.isRequired\n};\nexport default ClearButton;","import { combineReducers } from 'redux';\nimport { validateReducer } from '../modules/util';\nexport const SET_DASHBOARDS_FILTER_NAME = 'SET_DASHBOARDS_FILTER_NAME';\nexport const SET_DASHBOARDS_FILTER_OWNER = 'SET_DASHBOARDS_FILTER_OWNER';\nexport const SET_DASHBOARDS_FILTER_ORDER = 'SET_DASHBOARDS_FILTER_ORDER';\nexport const ownerData = [{\n  id: 'ALL',\n  value: 'All users'\n}, {\n  id: 'ME',\n  value: 'Created by me'\n}, {\n  id: 'OTHERS',\n  value: 'Created by others'\n}];\nexport const orderData = [{\n  id: 'NAME:ASC',\n  value: 'Name (asc)'\n}, {\n  id: 'NAME:ASC',\n  value: 'Name (desc)'\n}, {\n  id: 'ITEMS:ASC',\n  value: 'Number of items (asc)'\n}, {\n  id: 'ITEMS:ASC',\n  value: 'Number of items (desc)'\n}, {\n  id: 'CREATED:ASC',\n  value: 'Created date (asc)'\n}, {\n  id: 'CREATED:ASC',\n  value: 'Created date (desc)'\n}];\nexport const DEFAULT_STATE_DASHBOARDS_FILTER_NAME = '';\nexport const DEFAULT_STATE_DASHBOARDS_FILTER_OWNER = ownerData[0].id;\nexport const DEFAULT_STATE_DASHBOARDS_FILTER_ORDER = orderData[0].id;\n\nconst name = (state = DEFAULT_STATE_DASHBOARDS_FILTER_NAME, action) => {\n  switch (action.type) {\n    case SET_DASHBOARDS_FILTER_NAME:\n      return validateReducer(action.value, DEFAULT_STATE_DASHBOARDS_FILTER_NAME);\n\n    default:\n      return state;\n  }\n};\n\nconst owner = (state = DEFAULT_STATE_DASHBOARDS_FILTER_OWNER, action) => {\n  switch (action.type) {\n    case SET_DASHBOARDS_FILTER_OWNER:\n      return validateReducer(action.value, DEFAULT_STATE_DASHBOARDS_FILTER_NAME);\n\n    default:\n      return state;\n  }\n};\n\nconst order = (state = DEFAULT_STATE_DASHBOARDS_FILTER_ORDER, action) => {\n  switch (action.type) {\n    case SET_DASHBOARDS_FILTER_ORDER:\n      return validateReducer(action.value, DEFAULT_STATE_DASHBOARDS_FILTER_ORDER);\n\n    default:\n      return state;\n  }\n};\n\nexport default combineReducers({\n  name,\n  owner,\n  order\n}); // selectors\n\nexport const sGetDashboardsFilterRoot = state => state.dashboardsFilter; // selector dependency level 2\n\nexport const sGetFilterName = state => sGetDashboardsFilterRoot(state).name;\nexport const sGetFilterOwner = state => sGetDashboardsFilterRoot(state).owner;\nexport const sGetFilterOrder = state => sGetDashboardsFilterRoot(state).order;","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport i18n from '@dhis2/d2-i18n';\nimport { withStyles } from '@material-ui/core/styles';\nimport InputField from '@material-ui/core/Input';\nimport InputAdornment from '@material-ui/core/InputAdornment';\nimport SearchIcon from '@material-ui/icons/Search';\nimport { colors } from '@dhis2/ui';\nimport ClearButton from './ClearButton';\nimport { DEFAULT_STATE_DASHBOARDS_FILTER_NAME } from '../../reducers/dashboardsFilter';\nconst styles = {\n  filterField: {\n    fontSize: '14px',\n    width: '200px',\n    height: '30px',\n    top: '-4px'\n  },\n  searchIcon: {\n    color: colors.grey700,\n    width: '20px',\n    height: '20px'\n  }\n};\nexport const KEYCODE_ENTER = 13;\nexport const KEYCODE_ESCAPE = 27;\nexport class Filter extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      value: DEFAULT_STATE_DASHBOARDS_FILTER_NAME\n    };\n  }\n\n  componentWillReceiveProps(nextProps) {\n    this.setState({\n      value: nextProps.name\n    });\n  }\n\n  setFilterValue = event => {\n    event.preventDefault();\n    this.props.onChangeName(event.target.value);\n  };\n  handleKeyUp = event => {\n    switch (event.keyCode) {\n      case KEYCODE_ENTER:\n        this.props.onKeypressEnter();\n        break;\n\n      case KEYCODE_ESCAPE:\n        this.props.onChangeName();\n        break;\n\n      default:\n        break;\n    }\n  };\n\n  render() {\n    const {\n      classes,\n      name,\n      onChangeName\n    } = this.props;\n    const startAdornment = <InputAdornment position=\"start\">\n                <SearchIcon className={classes.searchIcon} />\n            </InputAdornment>;\n    const endAdornment = name !== '' && name !== null ? <InputAdornment position=\"end\">\n                    <ClearButton onClear={() => onChangeName()} />\n                </InputAdornment> : null;\n    return <InputField className={classes.filterField} placeholder={i18n.t('Search for a dashboard')} startAdornment={startAdornment} endAdornment={endAdornment} value={this.state.value} onChange={this.setFilterValue} onKeyUp={this.handleKeyUp} />;\n  }\n\n}\nFilter.propTypes = {\n  classes: PropTypes.object,\n  name: PropTypes.string,\n  onChangeName: PropTypes.func,\n  onKeypressEnter: PropTypes.func\n};\nFilter.defaultProps = {\n  name: '',\n  onChangeName: Function.prototype\n};\nexport default withStyles(styles)(Filter);","import React from 'react';\nimport PropTypes from 'prop-types';\nimport i18n from '@dhis2/d2-i18n';\nimport classes from './styles/ShowMoreButton.module.css';\nexport const SHOWMORE_BAR_HEIGHT = 16;\nexport const ShowMoreButton = ({\n  onClick,\n  isMaxHeight,\n  disabled\n}) => {\n  return <div style={{\n    textAlign: 'center'\n  }}>\n            {disabled ? <div className={classes.disabled}>{i18n.t('Show more')}</div> : <div className={classes.showMore} onClick={onClick}>\n                    {isMaxHeight ? i18n.t('Show less') : i18n.t('Show more')}\n                </div>}\n        </div>;\n};\nShowMoreButton.propTypes = {\n  disabled: PropTypes.bool,\n  isMaxHeight: PropTypes.bool,\n  onClick: PropTypes.func\n};\nexport default ShowMoreButton;","import { SHOWMORE_BAR_HEIGHT } from './ShowMoreButton';\nexport const CONTROL_BAR_ROW_HEIGHT = 40;\nexport const FIRST_ROW_PADDING_HEIGHT = 10;\nexport const MIN_ROW_COUNT = 1;\nexport const HEADERBAR_HEIGHT = 48;\nconst CONTROL_BAR_OUTER_HEIGHT_DIFF = FIRST_ROW_PADDING_HEIGHT + SHOWMORE_BAR_HEIGHT - 2; // 2 pixel \"adjustment\"\n\nexport const getRowsHeight = rows => {\n  return rows * CONTROL_BAR_ROW_HEIGHT;\n};\nexport const getNumRowsFromHeight = height => {\n  return Math.floor((height - CONTROL_BAR_OUTER_HEIGHT_DIFF) / CONTROL_BAR_ROW_HEIGHT);\n};\nexport const getControlBarHeight = rows => {\n  return getRowsHeight(rows) + CONTROL_BAR_OUTER_HEIGHT_DIFF;\n};","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { Link, withRouter } from 'react-router-dom';\nimport ControlBar from './ControlBar';\nimport arraySort from 'd2-utilizr/lib/arraySort';\nimport PropTypes from 'prop-types';\nimport Chip from './DashboardItemChip';\nimport AddCircleIcon from '../../icons/AddCircle';\nimport Filter from './Filter';\nimport ShowMoreButton from './ShowMoreButton';\nimport { FIRST_ROW_PADDING_HEIGHT, MIN_ROW_COUNT, getRowsHeight, getControlBarHeight, getNumRowsFromHeight } from './controlBarDimensions';\nimport { sGetControlBarUserRows } from '../../reducers/controlBar';\nimport { sGetAllDashboards } from '../../reducers/dashboards';\nimport { sGetFilterName } from '../../reducers/dashboardsFilter';\nimport { sGetSelectedId } from '../../reducers/selected';\nimport { acSetControlBarUserRows } from '../../actions/controlBar';\nimport { acSetFilterName } from '../../actions/dashboardsFilter';\nimport { orObject, orArray } from '../../modules/util';\nimport { apiPostControlBarRows } from '../../api/controlBar';\nimport classes from './styles/DashboardsBar.module.css';\nexport const MAX_ROW_COUNT = 10;\nexport class DashboardsBar extends Component {\n  state = {\n    rows: MIN_ROW_COUNT\n  };\n  setInitialDashboardState = rows => {\n    this.setState({\n      rows,\n      isMaxHeight: rows === MAX_ROW_COUNT\n    });\n  };\n\n  componentDidMount() {\n    this.setInitialDashboardState(this.props.userRows);\n  }\n\n  componentWillReceiveProps(nextProps) {\n    this.setInitialDashboardState(nextProps.userRows);\n  }\n\n  onChangeHeight = newHeight => {\n    const adjustedHeight = newHeight - 52; // don't rush the transition to a bigger row count\n\n    const newRows = Math.max(MIN_ROW_COUNT, getNumRowsFromHeight(adjustedHeight));\n\n    if (newRows !== this.state.rows) {\n      const newRowCount = Math.min(newRows, MAX_ROW_COUNT);\n      this.props.onChangeHeight(newRowCount);\n    }\n  };\n  onEndDrag = () => {\n    return apiPostControlBarRows(this.state.rows);\n  };\n  onToggleMaxHeight = () => {\n    const rows = this.state.rows === MAX_ROW_COUNT ? this.props.userRows : MAX_ROW_COUNT;\n    this.setState({\n      rows,\n      isMaxHeight: !this.state.isMaxHeight\n    });\n  };\n  onSelectDashboard = () => {\n    this.props.history.push(`/${this.props.dashboards[0].id}`);\n  };\n\n  render() {\n    const {\n      dashboards,\n      name,\n      selectedId,\n      onChangeFilterName\n    } = this.props;\n    const rowCount = this.state.isMaxHeight ? MAX_ROW_COUNT : this.state.rows;\n    const controlBarHeight = getControlBarHeight(rowCount);\n    const contentWrapperStyle = {\n      padding: `${FIRST_ROW_PADDING_HEIGHT}px 6px 0 6px`,\n      overflowY: this.state.isMaxHeight ? 'auto' : 'hidden',\n      height: getRowsHeight(rowCount) + FIRST_ROW_PADDING_HEIGHT\n    };\n    return <ControlBar height={controlBarHeight} onChangeHeight={this.onChangeHeight} onEndDrag={this.onEndDrag} editMode={false}>\n                <div style={contentWrapperStyle}>\n                    <div className={classes.leftControls}>\n                        <Link style={{\n            display: 'inline-block',\n            textDecoration: 'none',\n            marginRight: 10,\n            position: 'relative',\n            top: '2px'\n          }} to={'/new'}>\n                            <AddCircleIcon />\n                        </Link>\n                        <Filter name={name} onChangeName={onChangeFilterName} onKeypressEnter={this.onSelectDashboard} />\n                    </div>\n                    {orArray(dashboards).map(dashboard => <Chip key={dashboard.id} label={dashboard.displayName} starred={dashboard.starred} dashboardId={dashboard.id} selected={dashboard.id === selectedId} />)}\n                </div>\n                <ShowMoreButton onClick={this.onToggleMaxHeight} isMaxHeight={this.state.isMaxHeight} disabled={this.props.userRows === MAX_ROW_COUNT} />\n            </ControlBar>;\n  }\n\n}\n\nconst mapStateToProps = state => ({\n  dashboards: sGetAllDashboards(state),\n  name: sGetFilterName(state),\n  userRows: sGetControlBarUserRows(state),\n  selectedId: sGetSelectedId(state)\n});\n\nconst mapDispatchToProps = {\n  onChangeHeight: acSetControlBarUserRows,\n  onChangeFilterName: acSetFilterName\n};\n\nconst mergeProps = (stateProps, dispatchProps, ownProps) => {\n  const dashboards = Object.values(orObject(stateProps.dashboards));\n  const displayDashboards = arraySort(dashboards.filter(d => d.displayName.toLowerCase().includes(stateProps.name.toLowerCase())), 'ASC', 'displayName');\n  return { ...stateProps,\n    ...ownProps,\n    ...dispatchProps,\n    dashboards: [...displayDashboards.filter(d => d.starred), ...displayDashboards.filter(d => !d.starred)]\n  };\n};\n\nDashboardsBar.propTypes = {\n  dashboards: PropTypes.array,\n  history: PropTypes.object,\n  name: PropTypes.string,\n  selectedId: PropTypes.string,\n  userRows: PropTypes.number,\n  onChangeFilterName: PropTypes.func,\n  onChangeHeight: PropTypes.func\n};\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps, mergeProps)(DashboardsBar));","import { SET_DASHBOARDS_FILTER_NAME, SET_DASHBOARDS_FILTER_OWNER, SET_DASHBOARDS_FILTER_ORDER } from '../reducers/dashboardsFilter'; // actions\n\nexport const acSetFilterName = value => ({\n  type: SET_DASHBOARDS_FILTER_NAME,\n  value\n});\nexport const acSetFilterOwner = value => ({\n  type: SET_DASHBOARDS_FILTER_OWNER,\n  value\n});\nexport const acSetFilterOrder = value => ({\n  type: SET_DASHBOARDS_FILTER_ORDER,\n  value\n});","import React from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { getControlBarHeight, MIN_ROW_COUNT } from '../ControlBar/controlBarDimensions';\nimport { sGetControlBarUserRows } from '../../reducers/controlBar';\nimport { DRAG_HANDLE_HEIGHT } from '../ControlBar/ControlBar';\n\nconst DashboardVerticalOffset = props => {\n  const rows = props.editMode ? MIN_ROW_COUNT : props.userRows;\n  const marginTop = getControlBarHeight(rows) + DRAG_HANDLE_HEIGHT;\n  return <div className=\"page-container-top-margin\" style={{\n    marginTop\n  }} />;\n};\n\nconst mapStateToProps = state => ({\n  userRows: sGetControlBarUserRows(state)\n});\n\nDashboardVerticalOffset.propTypes = {\n  editMode: PropTypes.bool,\n  userRows: PropTypes.number\n};\nexport default connect(mapStateToProps)(DashboardVerticalOffset);","import React from 'react';\nimport { colors } from '@dhis2/ui';\nimport PropTypes from 'prop-types';\nexport const NoContentMessage = ({\n  text\n}) => <div style={{\n  padding: '50px 10px',\n  textAlign: 'center',\n  fontSize: '15px',\n  fontWeight: 500,\n  color: colors.grey600\n}}>\n        {text}\n    </div>;\nNoContentMessage.propTypes = {\n  text: PropTypes.string\n};\nexport default NoContentMessage;","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { MenuItem, colors } from '@dhis2/ui';\n\nconst HeaderMenuItem = ({\n  title\n}) => <MenuItem dense key={title} disabled label={<span style={{\n  color: colors.grey800,\n  fontWeight: '600'\n}}>\n                {title}\n            </span>} />;\n\nHeaderMenuItem.propTypes = {\n  title: PropTypes.string.isRequired\n};\nexport default HeaderMenuItem;","import React from 'react';\nimport { colors } from '@dhis2/ui';\nimport PropTypes from 'prop-types';\n\nconst LaunchIcon = ({\n  className\n}) => <svg className={className} xmlns=\"http://www.w3.org/2000/svg\" width=\"12\" height=\"12\" fill={colors.grey600} viewBox=\"0 0 24 24\">\n        <path d=\"M0 0h24v24H0z\" fill=\"none\" />\n        <path d=\"M19 19H5V5h7V3H5c-1.11 0-2 .9-2 2v14c0 1.1.89 2 2 2h14c1.1 0 2-.9 2-2v-7h-2v7zM14 3v2h3.59l-9.83 9.83 1.41 1.41L19 6.41V10h2V3h-7z\" />\n    </svg>;\n\nLaunchIcon.propTypes = {\n  className: PropTypes.string\n};\nexport default LaunchIcon;","import React from 'react';\nimport { MenuItem, colors } from '@dhis2/ui';\nimport i18n from '@dhis2/d2-i18n';\nimport PropTypes from 'prop-types';\nimport { visTypeIcons } from '@dhis2/analytics';\nimport { getItemIcon, VISUALIZATION } from '../../modules/itemTypes';\nimport LaunchIcon from '../../icons/Launch';\nimport classes from './styles/ContentMenuItem.module.css';\n\nconst LaunchLink = ({\n  url\n}) => <a onClick={e => e.stopPropagation()} className={classes.launchLink} target=\"_blank\" rel=\"noopener noreferrer\" href={url}>\n        <LaunchIcon />\n    </a>;\n\nLaunchLink.propTypes = {\n  url: PropTypes.string\n};\n\nconst InsertButton = () => <button className={classes.buttonInsert}>{i18n.t('Insert')}</button>;\n\nconst ContentMenuItem = ({\n  type,\n  name,\n  onInsert,\n  url,\n  visType\n}) => {\n  const ItemIcon = getItemIcon(type);\n  const renderedItemIcon = type === VISUALIZATION ? visTypeIcons[visType] : <ItemIcon style={{\n    fill: colors.grey600\n  }} />;\n  return <MenuItem dense onClick={onInsert} label={<div className={classes.menuItem}>\n                    <div className={classes.label}>\n                        <span style={{\n        marginRight: '6px'\n      }}>\n                            {renderedItemIcon}\n                        </span>\n                        <span>{name}</span>\n                        {url ? <LaunchLink url={url} /> : null}\n                    </div>\n                    <InsertButton />\n                </div>} />;\n};\n\nContentMenuItem.propTypes = {\n  name: PropTypes.string,\n  type: PropTypes.string,\n  url: PropTypes.string,\n  visType: PropTypes.string,\n  onInsert: PropTypes.func\n};\nexport default ContentMenuItem;","/** @module reducers/editDashboard */\nimport update from 'immutability-helper';\nimport isEmpty from 'lodash/isEmpty';\nimport { orArray, orObject } from '../modules/util';\nexport const RECEIVED_EDIT_DASHBOARD = 'RECEIVED_EDIT_DASHBOARD';\nexport const RECEIVED_NOT_EDITING = 'RECEIVED_NOT_EDITING';\nexport const START_NEW_DASHBOARD = 'START_NEW_DASHBOARD';\nexport const RECEIVED_TITLE = 'RECEIVED_TITLE';\nexport const RECEIVED_DESCRIPTION = 'RECEIVED_DESCRIPTION';\nexport const ADD_DASHBOARD_ITEM = 'ADD_DASHBOARD_ITEM';\nexport const REMOVE_DASHBOARD_ITEM = 'REMOVE_DASHBOARD_ITEM';\nexport const UPDATE_DASHBOARD_ITEM = 'UPDATE_DASHBOARD_ITEM';\nexport const RECEIVED_DASHBOARD_LAYOUT = 'RECEIVED_DASHBOARD_LAYOUT';\nexport const SET_PRINT_PREVIEW_VIEW = 'SET_PRINT_PREVIEW_VIEW';\nexport const CLEAR_PRINT_PREVIEW_VIEW = 'CLEAR_PRINT_PREVIEW_VIEW';\nexport const DEFAULT_STATE_EDIT_DASHBOARD = {};\nexport const NEW_DASHBOARD_STATE = {\n  id: '',\n  name: '',\n  access: {},\n  description: '',\n  dashboardItems: [],\n  printPreviewView: false\n};\nexport default ((state = DEFAULT_STATE_EDIT_DASHBOARD, action) => {\n  switch (action.type) {\n    case RECEIVED_EDIT_DASHBOARD:\n      {\n        const newState = {};\n        Object.keys(NEW_DASHBOARD_STATE).map(k => newState[k] = action.value[k]);\n        newState.printPreviewView = false;\n        return newState;\n      }\n\n    case RECEIVED_NOT_EDITING:\n      return DEFAULT_STATE_EDIT_DASHBOARD;\n\n    case SET_PRINT_PREVIEW_VIEW:\n      return Object.assign({}, state, {\n        printPreviewView: true\n      });\n\n    case CLEAR_PRINT_PREVIEW_VIEW:\n      return Object.assign({}, state, {\n        printPreviewView: false\n      });\n\n    case START_NEW_DASHBOARD:\n      return NEW_DASHBOARD_STATE;\n\n    case RECEIVED_TITLE:\n      {\n        return Object.assign({}, state, {\n          name: action.value\n        });\n      }\n\n    case RECEIVED_DESCRIPTION:\n      {\n        return Object.assign({}, state, {\n          description: action.value\n        });\n      }\n\n    case ADD_DASHBOARD_ITEM:\n      if (!action.value.position) {\n        return update(state, {\n          dashboardItems: {\n            $unshift: [action.value]\n          }\n        });\n      }\n\n      return update(state, {\n        dashboardItems: {\n          $splice: [[parseInt(action.value.position), 0, action.value]]\n        }\n      });\n\n    case REMOVE_DASHBOARD_ITEM:\n      {\n        const idToRemove = action.value;\n        const dashboardItemIndex = state.dashboardItems.findIndex(item => item.id === idToRemove);\n\n        if (dashboardItemIndex > -1) {\n          return update(state, {\n            dashboardItems: {\n              $splice: [[dashboardItemIndex, 1]]\n            }\n          });\n        }\n\n        return state;\n      }\n\n    case RECEIVED_DASHBOARD_LAYOUT:\n      {\n        const stateItems = orArray(state.dashboardItems);\n        let layoutHasChanged = false;\n        const newStateItems = action.value.map(({\n          x,\n          y,\n          w,\n          h,\n          i\n        }) => {\n          const stateItem = stateItems.find(si => si.id === i);\n\n          if (!(stateItem.x === x && stateItem.y === y && stateItem.w === w && stateItem.h === h)) {\n            layoutHasChanged = true;\n            return Object.assign({}, stateItem, {\n              w,\n              h,\n              x,\n              y\n            });\n          }\n\n          return stateItem;\n        });\n        return layoutHasChanged ? { ...state,\n          dashboardItems: newStateItems\n        } : state;\n      }\n\n    case UPDATE_DASHBOARD_ITEM:\n      {\n        const dashboardItem = action.value;\n        const dashboardItemIndex = state.dashboardItems.findIndex(item => item.id === dashboardItem.id);\n\n        if (dashboardItemIndex > -1) {\n          const newState = update(state, {\n            dashboardItems: {\n              $splice: [[dashboardItemIndex, 1, Object.assign({}, dashboardItem)]]\n            }\n          });\n          return newState;\n        }\n\n        return state;\n      }\n\n    default:\n      return state;\n  }\n}); // root selector\n\nexport const sGetEditDashboardRoot = state => state.editDashboard; // selectors\n\nexport const sGetIsEditing = state => !isEmpty(state.editDashboard);\nexport const sGetIsPrintPreviewView = state => sGetEditDashboardRoot(state).printPreviewView;\nexport const sGetIsNewDashboard = state => {\n  return !isEmpty(state.editDashboard) && sGetEditDashboardRoot(state).id === '';\n};\nexport const sGetEditDashboardName = state => sGetEditDashboardRoot(state).name;\nexport const sGetEditDashboardDescription = state => sGetEditDashboardRoot(state).description;\nexport const sGetEditDashboardItems = state => orObject(sGetEditDashboardRoot(state)).dashboardItems;","import { getInstance } from 'd2';\n\nconst onError = error => console.log('Error: ', error);\n\nconst saveDashboard = (dashboard, data) => {\n  const {\n    name,\n    description,\n    dashboardItems\n  } = data;\n  dashboard.name = name;\n  dashboard.description = description;\n  dashboard.dashboardItems = dashboardItems.map(item => Object.assign({}, item, {\n    width: item.w,\n    height: item.h\n  }));\n  return dashboard.save().then(msg => msg.response.uid);\n};\n\nexport const updateDashboard = data => {\n  return getInstance().then(d2 => {\n    return d2.models.dashboards.get(data.id).then(dashboard => saveDashboard(dashboard, data));\n  }).catch(onError);\n};\nexport const postDashboard = data => {\n  return getInstance().then(d2 => {\n    const dashboard = d2.models.dashboards.create();\n    return saveDashboard(dashboard, data);\n  });\n};","import { generateUid } from 'd2/uid';\nimport i18n from '@dhis2/d2-i18n';\nimport { RECEIVED_EDIT_DASHBOARD, START_NEW_DASHBOARD, RECEIVED_NOT_EDITING, RECEIVED_TITLE, RECEIVED_DESCRIPTION, RECEIVED_DASHBOARD_LAYOUT, ADD_DASHBOARD_ITEM, UPDATE_DASHBOARD_ITEM, REMOVE_DASHBOARD_ITEM, SET_PRINT_PREVIEW_VIEW, CLEAR_PRINT_PREVIEW_VIEW } from '../reducers/editDashboard';\nimport { sGetEditDashboardRoot } from '../reducers/editDashboard';\nimport { updateDashboard, postDashboard } from '../api/editDashboard';\nimport { tSetSelectedDashboardById } from '../actions/selected';\nimport { NEW_ITEM_SHAPE, getGridItemProperties, getPageBreakItemShape, getPrintTitlePageItemShape } from '../components/ItemGrid/gridUtil';\nimport { itemTypeMap, PAGEBREAK, PRINT_TITLE_PAGE } from '../modules/itemTypes';\nimport { convertUiItemsToBackend } from '../modules/uiBackendItemConverter';\n\nconst onError = error => {\n  console.log('Error (Saving Dashboard): ', error);\n  return error;\n}; // actions\n\n\nexport const acSetEditDashboard = (dashboard, items) => {\n  const val = { ...dashboard,\n    dashboardItems: items\n  };\n  return {\n    type: RECEIVED_EDIT_DASHBOARD,\n    value: val\n  };\n};\nexport const acSetEditNewDashboard = () => ({\n  type: START_NEW_DASHBOARD\n});\nexport const acClearEditDashboard = () => ({\n  type: RECEIVED_NOT_EDITING\n});\nexport const acSetPrintPreviewView = () => ({\n  type: SET_PRINT_PREVIEW_VIEW\n});\nexport const acClearPrintPreviewView = () => ({\n  type: CLEAR_PRINT_PREVIEW_VIEW\n});\nexport const acSetDashboardTitle = value => ({\n  type: RECEIVED_TITLE,\n  value\n});\nexport const acSetDashboardDescription = value => ({\n  type: RECEIVED_DESCRIPTION,\n  value\n});\nexport const acUpdateDashboardLayout = value => ({\n  type: RECEIVED_DASHBOARD_LAYOUT,\n  value\n});\nexport const acAddDashboardItem = item => {\n  const type = item.type;\n  delete item.type;\n  const itemPropName = itemTypeMap[type].propName;\n  const id = generateUid();\n  const gridItemProperties = getGridItemProperties(id);\n  let shape;\n\n  if (type === PAGEBREAK) {\n    const yPos = item.yPos || 0;\n    shape = getPageBreakItemShape(yPos, item.isStatic);\n  } else if (type === PRINT_TITLE_PAGE) {\n    shape = getPrintTitlePageItemShape();\n  } else {\n    shape = NEW_ITEM_SHAPE;\n  }\n\n  return {\n    type: ADD_DASHBOARD_ITEM,\n    value: {\n      id,\n      type,\n      position: item.position || null,\n      [itemPropName]: item.content,\n      ...NEW_ITEM_SHAPE,\n      ...gridItemProperties,\n      ...shape\n    }\n  };\n};\nexport const acUpdateDashboardItem = item => ({\n  type: UPDATE_DASHBOARD_ITEM,\n  value: item\n});\nexport const acRemoveDashboardItem = value => ({\n  type: REMOVE_DASHBOARD_ITEM,\n  value\n}); // thunks\n\nexport const tSaveDashboard = () => async (dispatch, getState) => {\n  const dashboard = sGetEditDashboardRoot(getState());\n  const dashboardToSave = { ...dashboard,\n    dashboardItems: convertUiItemsToBackend(dashboard.dashboardItems),\n    name: dashboard.name || i18n.t('Untitled dashboard')\n  };\n\n  try {\n    const dashboardId = dashboardToSave.id ? await updateDashboard(dashboardToSave) : await postDashboard(dashboardToSave);\n    dispatch(acClearEditDashboard());\n    await dispatch(tSetSelectedDashboardById(dashboardId));\n    return Promise.resolve(dashboardId);\n  } catch (error) {\n    onError(error);\n  }\n};","import i18n from '@dhis2/d2-i18n';\nimport { VISUALIZATION, MAP, EVENT_CHART, EVENT_REPORT, USERS, REPORTS, RESOURCES, APP, MESSAGES, TEXT, SPACER } from '../../modules/itemTypes';\nexport const singleItems = [{\n  id: 'additional',\n  header: i18n.t('Additional items'),\n  items: [{\n    type: TEXT,\n    name: i18n.t('Text box'),\n    content: ''\n  }, {\n    type: MESSAGES,\n    name: i18n.t('Messages'),\n    content: 'true'\n  }, {\n    type: SPACER,\n    name: i18n.t('Spacer'),\n    content: ''\n  }]\n}]; // categorizedItems are grouped in the item selector menu\n\nexport const categorizedItems = [VISUALIZATION, MAP, EVENT_REPORT, EVENT_CHART, USERS, REPORTS, RESOURCES, APP]; // listItemTypes are included in a single dashboard item\n\nexport const listItemTypes = [REPORTS, RESOURCES, USERS];","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport i18n from '@dhis2/d2-i18n';\nimport { MenuItem, Divider } from '@dhis2/ui';\nimport HeaderMenuItem from './HeaderMenuItem';\nimport ContentMenuItem from './ContentMenuItem';\nimport { tAddListItemContent } from './actions';\nimport { acAddDashboardItem } from '../../actions/editDashboard';\nimport { getItemUrl, APP, VISUALIZATION } from '../../modules/itemTypes';\nimport { categorizedItems, listItemTypes } from './selectableItems';\nimport classes from './styles/CategorizedMenuGroup.module.css';\n\nclass CategorizedMenuGroup extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      seeMore: false\n    };\n  }\n\n  addItem = item => () => {\n    const {\n      type,\n      acAddDashboardItem,\n      tAddListItemContent\n    } = this.props;\n\n    if (type === APP) {\n      acAddDashboardItem({\n        type,\n        content: item.key\n      });\n    } else {\n      const newItem = {\n        id: item.id,\n        name: item.displayName || item.name\n      };\n\n      if (listItemTypes.includes(type)) {\n        tAddListItemContent(type, newItem);\n      } else {\n        acAddDashboardItem({\n          type,\n          content: newItem\n        });\n      }\n    }\n  };\n  toggleSeeMore = () => {\n    this.setState({\n      seeMore: !this.state.seeMore\n    });\n    this.props.onChangeItemsLimit(this.props.type);\n  };\n\n  render() {\n    const {\n      title,\n      type,\n      items,\n      hasMore\n    } = this.props;\n    return <>\n                <HeaderMenuItem title={title} />\n                {items.map(item => {\n        const itemUrl = getItemUrl(type, item, this.context.d2);\n        return <ContentMenuItem key={item.id || item.key} type={type} visType={type === VISUALIZATION ? item.type : type} name={item.displayName || item.name} onInsert={this.addItem(item)} url={itemUrl} />;\n      })}\n                {hasMore ? <MenuItem dense key={`showmore${title}`} onClick={this.toggleSeeMore} label={<button className={classes.showMoreButton}>\n                                {this.state.seeMore ? i18n.t('Show fewer') : i18n.t('Show more')}\n                            </button>} /> : null}\n                <Divider margin=\"8px 0px\" />\n            </>;\n  }\n\n}\n\nCategorizedMenuGroup.propTypes = {\n  items: PropTypes.array.isRequired,\n  title: PropTypes.string.isRequired,\n  type: PropTypes.oneOf(categorizedItems).isRequired,\n  onChangeItemsLimit: PropTypes.func.isRequired,\n  acAddDashboardItem: PropTypes.func,\n  hasMore: PropTypes.bool,\n  tAddListItemContent: PropTypes.func\n};\nCategorizedMenuGroup.contextTypes = {\n  d2: PropTypes.object.isRequired\n};\nexport default connect(null, {\n  acAddDashboardItem,\n  tAddListItemContent\n})(CategorizedMenuGroup);","import { sGetEditDashboardRoot } from '../../reducers/editDashboard';\nimport { itemTypeMap } from '../../modules/itemTypes';\nimport { acAddDashboardItem, acUpdateDashboardItem } from '../../actions/editDashboard';\nexport const tAddListItemContent = (type, content) => (dispatch, getState) => {\n  const state = getState();\n  const listItemType = itemTypeMap[type].propName;\n  const dashboardItems = sGetEditDashboardRoot(state).dashboardItems;\n  const dashboardItemIndex = dashboardItems.findIndex(item => item.type === type);\n  let dashboardItem; // Reports/Resources/Users dashboard item type already present in dashboard\n\n  if (dashboardItemIndex > -1) {\n    dashboardItem = dashboardItems[dashboardItemIndex];\n    dashboardItem[listItemType].push(content);\n    dispatch(acUpdateDashboardItem(dashboardItem));\n  } else {\n    dashboardItem = {\n      type: type,\n      content: [content]\n    };\n    dispatch(acAddDashboardItem(dashboardItem));\n  }\n};","import React from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport HeaderMenuItem from './HeaderMenuItem';\nimport ContentMenuItem from './ContentMenuItem';\nimport { acAddDashboardItem } from '../../actions/editDashboard';\nexport const SinglesMenuGroup = ({\n  acAddDashboardItem,\n  category\n}) => {\n  const addToDashboard = ({\n    type,\n    content\n  }) => () => {\n    acAddDashboardItem({\n      type,\n      content\n    });\n  };\n\n  return <>\n            <HeaderMenuItem title={category.header} />\n            {category.items.map(item => <ContentMenuItem key={item.type} type={item.type} name={item.name} onInsert={addToDashboard(item)} />)}\n        </>;\n};\nSinglesMenuGroup.propTypes = {\n  acAddDashboardItem: PropTypes.func,\n  category: PropTypes.object\n};\nexport default connect(null, {\n  acAddDashboardItem\n})(SinglesMenuGroup);","import React from 'react';\nimport PropTypes from 'prop-types';\nimport i18n from '@dhis2/d2-i18n';\nimport Popover from '@material-ui/core/Popover';\nimport { InputField, Menu } from '@dhis2/ui';\nimport CategorizedMenuGroup from './CategorizedMenuGroup';\nimport SinglesMenuGroup from './SinglesMenuGroup';\nimport { singleItems, categorizedItems } from './selectableItems';\nimport { itemTypeMap, getDefaultItemCount } from '../../modules/itemTypes';\nimport './styles/ItemSelector.css';\n\nconst ItemSearchField = props => <InputField name=\"Dashboard item search\" label={i18n.t('Search for items to add to this dashboard')} type=\"text\" onChange={props.onChange} onFocus={props.onFocus} value={props.value} />;\n\nclass ItemSelector extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      anchorEl: null,\n      open: false,\n      maxOptions: new Set(),\n      items: undefined,\n      filter: ''\n    };\n  }\n\n  closeList = () => {\n    this.setState({\n      open: false,\n      filter: ''\n    });\n  };\n  openList = (_, event) => {\n    this.fetchItems();\n    this.setState({\n      anchorEl: event.currentTarget,\n      open: true\n    });\n  };\n  setFilter = (_, event) => {\n    this.setState({\n      filter: event.target.value\n    }, this.fetchItems);\n  };\n  getCategorizedMenuGroups = () => categorizedItems.filter(type => {\n    const itemType = itemTypeMap[type];\n    return this.state.items && this.state.items[itemType.endPointName];\n  }).map(type => {\n    const itemType = itemTypeMap[type];\n    const itemCount = getDefaultItemCount(type);\n    const allItems = this.state.items[itemType.endPointName];\n    const hasMore = allItems.length > itemCount;\n    const items = this.state.maxOptions.has(itemType.id) ? allItems : allItems.slice(0, itemCount);\n    return <CategorizedMenuGroup key={type} type={type} title={itemType.pluralTitle} items={items} onChangeItemsLimit={this.fetchItems} hasMore={hasMore} />;\n  });\n  getSinglesMenuGroups = () => singleItems.map(category => <SinglesMenuGroup key={category.id} category={category} />);\n  getMenuGroups = () => this.getCategorizedMenuGroups().concat(this.getSinglesMenuGroups());\n  fetchItems = async type => {\n    if (type) {\n      const maxOptions = this.state.maxOptions;\n\n      if (maxOptions.has(type)) {\n        maxOptions.delete(type);\n      } else {\n        maxOptions.add(type);\n      }\n\n      this.setState({\n        maxOptions\n      });\n    } else {\n      this.setState({\n        maxOptions: new Set()\n      });\n    }\n\n    let queryString = '?count=11';\n\n    if ([...this.state.maxOptions.values()].length) {\n      queryString += '&max=' + [...this.state.maxOptions.values()].join('&max=');\n    }\n\n    const filter = this.state.filter ? `/${this.state.filter}` : '';\n    this.context.d2.Api.getApi().get(`dashboards/q${filter}${queryString}`).then(response => this.setState({\n      items: response\n    })).catch(console.error);\n  };\n\n  render() {\n    return <>\n                <ItemSearchField value={this.state.filter} onChange={this.setFilter} onFocus={this.openList} />\n                <Popover className=\"dashboard-item-selector\" open={this.state.open} onClose={this.closeList} anchorEl={this.state.anchorEl} anchorOrigin={{\n        horizontal: 'left',\n        vertical: 'bottom'\n      }} transformOrigin={{\n        horizontal: 'left',\n        vertical: 'top'\n      }} style={{\n        height: '70vh'\n      }} PaperProps={{\n        style: {\n          width: '700px'\n        }\n      }} disableAutoFocus={true} disableEnforceFocus={true} disableRestoreFocus={true}>\n                    <Menu maxWidth={'700px'}>{this.getMenuGroups()}</Menu>\n                </Popover>\n            </>;\n  }\n\n}\n\nItemSearchField.propTypes = {\n  value: PropTypes.string,\n  onChange: PropTypes.func,\n  onFocus: PropTypes.func\n};\nItemSelector.contextTypes = {\n  d2: PropTypes.object.isRequired\n};\nexport default ItemSelector;","import React from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport i18n from '@dhis2/d2-i18n';\nimport { InputField, TextAreaField } from '@dhis2/ui';\nimport ItemSelector from '../ItemSelector/ItemSelector';\nimport { acSetDashboardTitle, acSetDashboardDescription } from '../../actions/editDashboard';\nimport { orObject } from '../../modules/util';\nimport { sGetEditDashboardRoot } from '../../reducers/editDashboard';\nimport classes from './styles/EditTitleBar.module.css';\nexport const EditTitleBar = ({\n  name,\n  description,\n  onChangeTitle,\n  onChangeDescription\n}) => {\n  const updateTitle = (_, e) => {\n    onChangeTitle(e.target.value);\n  };\n\n  const updateDescription = (_, e) => {\n    onChangeDescription(e.target.value);\n  };\n\n  return <section className={classes.section}>\n            <div className={classes.titleDescription}>\n                <InputField className={classes.title} name=\"Dashboard title input\" label={i18n.t('Dashboard title')} type=\"text\" onChange={updateTitle} value={name} placeholder={i18n.t('Untitled dashboard')} />\n                <TextAreaField className={classes.description} name=\"Dashboard description input\" label={i18n.t('Dashboard description')} onChange={updateDescription} value={description} />\n            </div>\n            <div className={classes.itemSelector}>\n                <ItemSelector />\n            </div>\n        </section>;\n};\nEditTitleBar.propTypes = {\n  onChangeDescription: PropTypes.func.isRequired,\n  onChangeTitle: PropTypes.func.isRequired,\n  description: PropTypes.string,\n  name: PropTypes.string\n};\nEditTitleBar.defaultProps = {\n  name: '',\n  description: ''\n};\n\nconst mapStateToProps = state => {\n  const selectedDashboard = orObject(sGetEditDashboardRoot(state));\n  return {\n    name: selectedDashboard.name,\n    description: selectedDashboard.description\n  };\n};\n\nconst mapDispatchToProps = {\n  onChangeTitle: acSetDashboardTitle,\n  onChangeDescription: acSetDashboardDescription\n};\nexport default connect(mapStateToProps, mapDispatchToProps)(EditTitleBar);","import React from 'react';\nimport { colors } from '@dhis2/ui';\nexport const ThreeDots = () => <svg height=\"18\" viewBox=\"0 0 18 18\" width=\"18\" xmlns=\"http://www.w3.org/2000/svg\">\n        <path d=\"m4 7.5c-.83 0-1.5.67-1.5 1.5s.67 1.5 1.5 1.5 1.5-.67 1.5-1.5-.67-1.5-1.5-1.5zm10 0c-.83 0-1.5.67-1.5 1.5s.67 1.5 1.5 1.5 1.5-.67 1.5-1.5-.67-1.5-1.5-1.5zm-5 0c-.83 0-1.5.67-1.5 1.5s.67 1.5 1.5 1.5 1.5-.67 1.5-1.5-.67-1.5-1.5-1.5z\" fill=\"#6e7a8a\" />\n    </svg>;\nexport const SpeechBubble = () => <svg height=\"20\" viewBox=\"0 0 20 20\" width=\"20\" xmlns=\"http://www.w3.org/2000/svg\" style={{\n  margin: '3px 2px 0 2px'\n}} // Temporary fix for the misaligned icon, should be removed once the icon is replaced\n>\n        <path d=\"m20 2h-16c-1.1 0-1.99.9-1.99 2l-.01 18 4-4h14c1.1 0 2-.9 2-2v-12c0-1.1-.9-2-2-2zm-2 12h-12v-2h12zm0-3h-12v-2h12zm0-3h-12v-2h12z\" fill=\"#6e7a8a\" fillRule=\"evenodd\" transform=\"translate(-2 -2)\" />\n    </svg>;\nexport const Warning = () => <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24\" viewBox=\"0 0 24 24\" width=\"24\" fill={colors.grey600}>\n        <path d=\"M0 0h24v24H0z\" fill=\"none\" />\n        <path d=\"M1 21h22L12 2 1 21zm12-3h-2v-2h2v2zm0-4h-2v-4h2v4z\" />\n    </svg>;","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { Button, Modal, ModalTitle, ModalContent, ModalActions, ButtonStrip } from '@dhis2/ui';\nimport i18n from '@dhis2/d2-i18n';\nimport { PeriodDimension, DynamicDimension, OrgUnitDimension, DIMENSION_ID_PERIOD, DIMENSION_ID_ORGUNIT } from '@dhis2/analytics';\n\nclass FilterDialog extends Component {\n  onConfirm = id => () => this.props.onConfirm(id);\n\n  renderDialogContent() {\n    const {\n      displayNameProperty,\n      dimension,\n      selectedItems\n    } = this.props;\n    const dialogId = dimension.id;\n    const commonProps = {\n      d2: this.context.d2,\n      onSelect: this.props.onSelect,\n      onDeselect: this.props.onDeselect,\n      onReorder: this.props.onReorder\n    };\n\n    switch (dialogId) {\n      case DIMENSION_ID_PERIOD:\n        {\n          return <PeriodDimension selectedPeriods={selectedItems} onSelect={commonProps.onSelect} />;\n        }\n\n      case DIMENSION_ID_ORGUNIT:\n        return <OrgUnitDimension displayNameProperty={displayNameProperty} ouItems={selectedItems} {...commonProps} />;\n\n      default:\n        return <DynamicDimension selectedItems={selectedItems} dimensionId={dialogId} onSelect={commonProps.onSelect} context={commonProps.d2} />;\n    }\n  }\n\n  render() {\n    const {\n      dimension,\n      onClose\n    } = this.props;\n    const dialogId = dimension.id;\n    return <>\n                {dialogId && <Modal onClose={onClose} position=\"top\" large>\n                        <ModalTitle>{dimension.name}</ModalTitle>\n                        <ModalContent>\n                            {this.renderDialogContent()}\n                        </ModalContent>\n                        <ModalActions>\n                            <ButtonStrip>\n                                <Button secondary onClick={onClose}>\n                                    {i18n.t('Cancel')}\n                                </Button>\n                                <Button primary onClick={this.onConfirm(dialogId)}>\n                                    {i18n.t('Confirm')}\n                                </Button>\n                            </ButtonStrip>\n                        </ModalActions>\n                    </Modal>}\n            </>;\n  }\n\n}\n\nFilterDialog.propTypes = {\n  dimension: PropTypes.object,\n  displayNameProperty: PropTypes.string,\n  selectedItems: PropTypes.array,\n  onClose: PropTypes.func,\n  onConfirm: PropTypes.func,\n  onDeselect: PropTypes.func,\n  onReorder: PropTypes.func,\n  onSelect: PropTypes.func\n};\nFilterDialog.contextTypes = {\n  d2: PropTypes.object\n};\nexport default FilterDialog;","export const SET_ACTIVE_MODAL_DIMENSION = 'SET_ACTIVE_MODAL_DIMENSION';\nexport const CLEAR_ACTIVE_MODAL_DIMENSION = 'CLEAR_ACTIVE_MODAL_DIMENSION';\nexport const DEFAULT_STATE_ACTIVE_MODAL_DIMENSION = {};\nexport default ((state = DEFAULT_STATE_ACTIVE_MODAL_DIMENSION, action) => {\n  switch (action.type) {\n    case SET_ACTIVE_MODAL_DIMENSION:\n      {\n        return action.value;\n      }\n\n    case CLEAR_ACTIVE_MODAL_DIMENSION:\n      {\n        return DEFAULT_STATE_ACTIVE_MODAL_DIMENSION;\n      }\n\n    default:\n      return state;\n  }\n});\nexport const sGetActiveModalDimension = state => state.activeModalDimension;","import { SET_ACTIVE_MODAL_DIMENSION, CLEAR_ACTIVE_MODAL_DIMENSION } from '../reducers/activeModalDimension';\nexport const acSetActiveModalDimension = value => ({\n  type: SET_ACTIVE_MODAL_DIMENSION,\n  value\n});\nexport const acClearActiveModalDimension = () => ({\n  type: CLEAR_ACTIVE_MODAL_DIMENSION\n});","import React, { useState, useRef } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport ArrowDropDownIcon from '@material-ui/icons/ArrowDropDown';\nimport i18n from '@dhis2/d2-i18n';\nimport { DimensionsPanel } from '@dhis2/analytics';\nimport { Button, Popover } from '@dhis2/ui';\nimport FilterDialog from './FilterDialog';\nimport { sGetSettingsDisplayNameProperty } from '../../reducers/settings';\nimport { sGetActiveModalDimension } from '../../reducers/activeModalDimension';\nimport { sGetDimensions } from '../../reducers/dimensions';\nimport { sGetItemFiltersRoot, sGetFiltersKeys } from '../../reducers/itemFilters';\nimport { acAddItemFilter, acRemoveItemFilter } from '../../actions/itemFilters';\nimport { acClearActiveModalDimension, acSetActiveModalDimension } from '../../actions/activeModalDimension';\n\nconst FilterSelector = props => {\n  const [showPopover, setShowPopover] = useState(false);\n  const [filters, setFilters] = useState(props.initiallySelectedItems);\n  const ref = useRef(null);\n\n  const closePanel = () => setShowPopover(false);\n\n  const onCloseDialog = () => {\n    closePanel();\n    props.clearActiveModalDimension();\n  };\n\n  const selectDimension = id => {\n    props.setActiveModalDimension(props.dimensions.find(dimension => dimension.id === id));\n  };\n\n  const onSelectItems = ({\n    dimensionId,\n    items\n  }) => {\n    setFilters({ ...filters,\n      [dimensionId]: items\n    });\n  };\n\n  const onDeselectItems = ({\n    dimensionId,\n    itemIdsToRemove\n  }) => {\n    const oldList = filters[dimensionId] || [];\n    const newList = oldList.filter(item => !itemIdsToRemove.includes(item.id));\n    const list = newList.length ? newList : [];\n    setFilters({ ...filters,\n      [dimensionId]: list\n    });\n  };\n\n  const onReorderItems = ({\n    dimensionId,\n    itemIds\n  }) => {\n    const oldList = filters[dimensionId] || [];\n    const reorderedList = itemIds.map(id => oldList.find(item => item.id === id));\n    setFilters({ ...filters,\n      [dimensionId]: reorderedList\n    });\n  };\n\n  const saveFilter = id => {\n    const filterItems = filters[id];\n\n    if (filterItems && filterItems.length) {\n      props.addItemFilter({\n        id,\n        value: [...filterItems]\n      });\n    } else {\n      props.removeItemFilter(id);\n    }\n\n    onCloseDialog();\n  };\n\n  return <>\n            <span ref={ref}>\n                <Button onClick={() => setShowPopover(true)}>\n                    {i18n.t('Add filter')}\n                    <ArrowDropDownIcon />\n                </Button>\n            </span>\n            {showPopover && <Popover onClickOutside={closePanel} reference={ref} arrow={true} placement=\"bottom-start\">\n                    <DimensionsPanel style={{\n        width: '320px'\n      }} dimensions={props.dimensions} onDimensionClick={selectDimension} selectedIds={props.selectedDimensions} />\n                </Popover>}\n            {props.dimension ? <FilterDialog displayNameProperty={props.displayNameProperty} dimension={props.dimension} selectedItems={filters[props.dimension.id] || []} onSelect={onSelectItems} onDeselect={onDeselectItems} onReorder={onReorderItems} onClose={onCloseDialog} onConfirm={saveFilter} /> : null}\n        </>;\n};\n\nconst mapStateToProps = state => ({\n  displayNameProperty: sGetSettingsDisplayNameProperty(state),\n  dimension: sGetActiveModalDimension(state),\n  dimensions: sGetDimensions(state),\n  initiallySelectedItems: sGetItemFiltersRoot(state),\n  selectedDimensions: sGetFiltersKeys(state)\n});\n\nFilterSelector.propTypes = {\n  addItemFilter: PropTypes.func,\n  clearActiveModalDimension: PropTypes.func,\n  dimension: PropTypes.object,\n  dimensions: PropTypes.array,\n  displayNameProperty: PropTypes.string,\n  initiallySelectedItems: PropTypes.object,\n  removeItemFilter: PropTypes.func,\n  selectedDimensions: PropTypes.array,\n  setActiveModalDimension: PropTypes.func\n};\nexport default connect(mapStateToProps, {\n  clearActiveModalDimension: acClearActiveModalDimension,\n  setActiveModalDimension: acSetActiveModalDimension,\n  addItemFilter: acAddItemFilter,\n  removeItemFilter: acRemoveItemFilter\n})(FilterSelector);","import React, { Suspense, useState, createRef } from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { Link } from 'react-router-dom';\nimport i18n from '@dhis2/d2-i18n';\nimport { Redirect } from 'react-router-dom';\nimport Star from '@material-ui/icons/Star';\nimport StarBorder from '@material-ui/icons/StarBorder';\nimport { Button, FlyoutMenu, Popover, MenuItem, colors } from '@dhis2/ui';\nimport { ThreeDots } from '../Item/VisualizationItem/assets/icons';\nimport { orObject } from '../../modules/util';\nimport { tStarDashboard } from '../../actions/dashboards';\nimport { tUpdateShowDescription } from '../../actions/selected';\nimport FilterSelector from '../ItemFilter/FilterSelector';\nimport { sGetSelectedId, sGetSelectedShowDescription } from '../../reducers/selected';\nimport { sGetDashboardById, sGetDashboardItems } from '../../reducers/dashboards';\nimport classes from './styles/ViewTitleBar.module.css';\nconst SharingDialog = React.lazy(() => import('@dhis2/d2-ui-sharing-dialog'));\nconst PeriodSelectorDialog = React.lazy(() => import('@dhis2/d2-ui-period-selector-dialog'));\n\nconst ViewTitleBar = (props, context) => {\n  const [moreOptionsIsOpen, setMoreOptionsIsOpen] = useState(false);\n  const [sharingDialogIsOpen, setSharingDialogIsOpen] = useState(false);\n  const [redirectUrl, setRedirectUrl] = useState(null);\n  const [sharingDialogInitiated, setSharingDialogInitiated] = useState(false);\n  const {\n    id,\n    name,\n    description,\n    access,\n    style,\n    showDescription,\n    starred,\n    onToggleStarredDashboard,\n    onShowHideDescription\n  } = props;\n\n  const toggleSharingDialog = () => {\n    setSharingDialogInitiated(true);\n    setSharingDialogIsOpen(!sharingDialogIsOpen);\n  };\n\n  const toggleMoreOptions = () => setMoreOptionsIsOpen(!moreOptionsIsOpen);\n\n  const printLayout = () => setRedirectUrl(`${id}/printlayout`);\n\n  const printOipp = () => setRedirectUrl(`${id}/printoipp`);\n\n  const titleStyle = Object.assign({}, style.title, {\n    cursor: 'default',\n    userSelect: 'text',\n    top: '7px'\n  });\n  const StarIcon = starred ? Star : StarBorder;\n\n  if (redirectUrl) {\n    return <Redirect to={redirectUrl} />;\n  }\n\n  const showHideDescriptionLabel = showDescription ? i18n.t('Hide description') : i18n.t('Show description');\n\n  const showHideDescription = () => {\n    onShowHideDescription();\n    toggleMoreOptions();\n  };\n\n  const toggleStarredDashboardLabel = starred ? i18n.t('Unstar dashboard') : i18n.t('Star dashboard');\n\n  const toggleStarredDashboard = () => {\n    onToggleStarredDashboard();\n    toggleMoreOptions();\n  };\n\n  const buttonRef = createRef();\n  return <>\n            <div className={classes.titleBar}>\n                <span style={titleStyle}>{name}</span>\n                <div className={classes.actions}>\n                    <div className={classes.titleBarIcon} onClick={onToggleStarredDashboard}>\n                        <StarIcon style={{\n            fill: colors.grey600\n          }} />\n                    </div>\n                    <div className={classes.strip}>\n                        {access.update ? <Link className={classes.editLink} to={`/${id}/edit`}>\n                                <Button>{i18n.t('Edit')}</Button>\n                            </Link> : null}\n                        {access.manage ? <Button onClick={toggleSharingDialog}>\n                                {i18n.t('Share')}\n                            </Button> : null}\n                        <FilterSelector />\n                        <span ref={buttonRef}>\n                            <Button onClick={toggleMoreOptions}>\n                                <ThreeDots />\n                                <span style={{\n                marginLeft: '5px'\n              }}>\n                                    {i18n.t('More')}\n                                </span>\n                            </Button>\n                        </span>\n                    </div>\n                    {moreOptionsIsOpen && <Popover reference={buttonRef} placement=\"bottom-start\" onClickOutside={toggleMoreOptions}>\n                            <FlyoutMenu>\n                                <MenuItem dense label={toggleStarredDashboardLabel} onClick={toggleStarredDashboard} />\n                                <MenuItem dense label={showHideDescriptionLabel} onClick={showHideDescription} />\n                                <MenuItem dense label={i18n.t('Print')}>\n                                    <MenuItem dense label={i18n.t('Dashboard layout')} onClick={printLayout} />\n                                    <MenuItem dense label={i18n.t('One item per page')} onClick={printOipp} />\n                                </MenuItem>\n                            </FlyoutMenu>\n                        </Popover>}\n                </div>\n            </div>\n            {showDescription ? <div className=\"dashboard-description\" style={Object.assign({\n      paddingTop: '5px',\n      paddingBottom: '5px'\n    }, style.description, !description ? {\n      color: '#888'\n    } : {})}>\n                    {description || i18n.t('No description')}\n                </div> : null}\n            {id && sharingDialogInitiated ? <Suspense fallback={<div>loading ...</div>}>\n                    <PeriodSelectorDialog open={sharingDialogIsOpen} />\n                    <SharingDialog d2={context.d2} id={id} type=\"dashboard\" open={sharingDialogIsOpen} onRequestClose={toggleSharingDialog} />\n                </Suspense> : null}\n        </>;\n};\n\nViewTitleBar.propTypes = {\n  access: PropTypes.object,\n  description: PropTypes.string,\n  id: PropTypes.string,\n  name: PropTypes.string,\n  showDescription: PropTypes.bool,\n  starred: PropTypes.bool,\n  style: PropTypes.object,\n  onShowHideDescription: PropTypes.func,\n  onToggleStarredDashboard: PropTypes.func\n};\nViewTitleBar.defaultProps = {\n  name: '',\n  description: '',\n  starred: false,\n  showDescription: false\n};\nViewTitleBar.contextTypes = {\n  d2: PropTypes.object\n};\n\nconst mapStateToProps = state => {\n  const id = sGetSelectedId(state);\n  const dashboard = orObject(sGetDashboardById(state, id));\n  return {\n    id,\n    name: dashboard.displayName,\n    description: dashboard.displayDescription,\n    dashboardItems: sGetDashboardItems(state),\n    showDescription: sGetSelectedShowDescription(state),\n    starred: dashboard.starred,\n    access: orObject(dashboard.access)\n  };\n};\n\nconst mergeProps = (stateProps, dispatchProps, ownProps) => {\n  const {\n    id,\n    starred,\n    showDescription\n  } = stateProps;\n  const {\n    dispatch\n  } = dispatchProps;\n  return { ...stateProps,\n    ...ownProps,\n    onToggleStarredDashboard: () => dispatch(tStarDashboard(id, !starred)),\n    onShowHideDescription: () => dispatch(tUpdateShowDescription(!showDescription))\n  };\n};\n\nexport default connect(mapStateToProps, null, mergeProps)(ViewTitleBar);","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { colors } from '@dhis2/ui';\nimport EditTitleBar from './EditTitleBar';\nimport ViewTitleBar from './ViewTitleBar';\nimport './TitleBar.css';\nconst style = {\n  title: {\n    position: 'relative',\n    fontSize: 21,\n    fontWeight: 500,\n    color: colors.black,\n    minWidth: 50\n  },\n  description: {\n    fontSize: 14,\n    color: colors.grey800\n  }\n};\n\nconst TitleBar = ({\n  edit\n}) => {\n  return <div className=\"titlebar-wrapper\" style={{\n    padding: '13px 15px 5px 10px'\n  }}>\n            {edit ? <EditTitleBar style={style} /> : <ViewTitleBar style={style} />}\n        </div>;\n};\n\nTitleBar.propTypes = {\n  edit: PropTypes.bool\n};\nexport default TitleBar;","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport i18n from '@dhis2/d2-i18n';\nimport * as pluginManager from './plugin';\nimport { getBaseUrl, orObject } from '../../../modules/util';\nimport { getGridItemDomId } from '../../ItemGrid/gridUtil';\n\nconst pluginCredentials = d2 => {\n  return {\n    baseUrl: getBaseUrl(d2),\n    auth: d2.Api.getApi().defaultHeaders.Authorization\n  };\n};\n\nclass DefaultPlugin extends Component {\n  pluginCredentials = null;\n\n  constructor(props, context) {\n    super(props);\n    this.d2 = context.d2;\n  }\n\n  shouldPluginReload = prevProps => {\n    // TODO - fix this hack, to handle bug with multiple\n    // rerendering while switching between dashboards.\n    //\n    // To determine if the rendering is happening because of a\n    // dashboard switch, check if the item reference has changed.\n    const reloadAllowed = this.props.item === prevProps.item;\n    const filtersChanged = prevProps.itemFilters !== this.props.itemFilters;\n    const vis = orObject(this.props.visualization);\n    const prevVis = orObject(prevProps.visualization);\n    const visChanged = vis.id !== prevVis.id || vis.activeType !== prevVis.activeType;\n    return reloadAllowed && (visChanged || filtersChanged);\n  };\n  reloadPlugin = prevProps => {\n    if (pluginManager.pluginIsAvailable(this.props.item, this.props.visualization) && this.shouldPluginReload(prevProps)) {\n      const prevVis = orObject(prevProps.visualization);\n      const currentVis = this.props.visualization;\n      const useActiveType = currentVis.activeType !== prevVis.activeType || currentVis.activeType !== this.props.item.type;\n\n      if (useActiveType || this.props.itemFilters !== prevProps.itemFilters) {\n        pluginManager.unmount(this.props.item, prevVis.activeType || this.props.item.type);\n        pluginManager.load(this.props.item, this.props.visualization, {\n          credentials: this.pluginCredentials,\n          activeType: useActiveType ? currentVis.activeType : null\n        });\n      }\n    }\n  };\n\n  componentDidMount() {\n    this.pluginCredentials = pluginCredentials(this.d2);\n\n    if (pluginManager.pluginIsAvailable(this.props.item, this.props.visualization)) {\n      pluginManager.load(this.props.item, this.props.visualization, {\n        credentials: this.pluginCredentials,\n        activeType: this.props.useActiveType ? this.getActiveType() : null,\n        options: this.props.options\n      });\n    }\n  }\n\n  componentDidUpdate(prevProps) {\n    this.reloadPlugin(prevProps);\n  }\n\n  getActiveType = () => this.props.visualization.activeType || this.props.item.type;\n\n  render() {\n    const {\n      classes,\n      item,\n      visualization,\n      style\n    } = this.props;\n    const pluginIsAvailable = pluginManager.pluginIsAvailable(item, visualization);\n    return pluginIsAvailable ? <div id={getGridItemDomId(item.id)} style={style} /> : <div className={classes.textDiv}>\n                {i18n.t('Unable to load the plugin for this item')}\n            </div>;\n  }\n\n}\n\nDefaultPlugin.contextTypes = {\n  d2: PropTypes.object\n};\nDefaultPlugin.propTypes = {\n  classes: PropTypes.object,\n  useActiveType: PropTypes.bool,\n  item: PropTypes.object,\n  itemFilters: PropTypes.object,\n  options: PropTypes.object,\n  style: PropTypes.object,\n  visualization: PropTypes.object\n};\nDefaultPlugin.defaultProps = {\n  style: {},\n  item: {},\n  itemFilters: {},\n  options: {},\n  visualization: {}\n};\nexport default DefaultPlugin;","import React from 'react';\nimport PropTypes from 'prop-types';\nimport i18n from '@dhis2/d2-i18n';\nimport { Warning } from './assets/icons';\nimport classes from './styles/FatalErrorBoundary.module.css';\n\nclass FatalErrorBoundary extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      errorFound: false\n    };\n  }\n\n  componentDidCatch(error, info) {\n    this.setState({\n      errorFound: true\n    });\n    console.log('error: ', error);\n    console.log('info: ', info);\n  }\n\n  render() {\n    if (this.state.errorFound) {\n      return <p className={classes.container}>\n                    <span className={classes.icon}>\n                        <Warning />\n                    </span>\n                    <span className={classes.message}>\n                        {i18n.t('There was a problem loading this dashboard item')}\n                    </span>\n                </p>;\n    }\n\n    return this.props.children;\n  }\n\n}\n\nFatalErrorBoundary.propTypes = {\n  children: PropTypes.node\n};\nexport default FatalErrorBoundary;","import React from 'react';\nimport PropTypes from 'prop-types';\nimport classes from './styles/ItemHeader.module.css';\n\nconst ViewItemActions = ({\n  actionButtons\n}) => {\n  return actionButtons ? <div className={classes.itemActionsWrap}>{actionButtons}</div> : null;\n};\n\nViewItemActions.propTypes = {\n  actionButtons: PropTypes.node\n};\nexport default ViewItemActions;","import React from 'react';\nimport PropTypes from 'prop-types';\nimport i18n from '@dhis2/d2-i18n';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport { colors } from '@dhis2/ui';\nimport classes from './styles/DeleteItemButton.module.css';\n\nconst DeleteItemButton = ({\n  onClick\n}) => <button type=\"button\" className={classes.deleteItemButton} onClick={onClick} title={i18n.t(`Delete item`)}>\n        <DeleteIcon style={{\n    fill: colors.red500\n  }} />\n    </button>;\n\nDeleteItemButton.propTypes = {\n  onClick: PropTypes.func\n};\nexport default DeleteItemButton;","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport DeleteItemButton from './DeleteItemButton';\nimport { acRemoveDashboardItem } from '../../../actions/editDashboard';\nimport classes from './styles/ItemHeader.module.css';\n\nconst EditItemActions = ({\n  itemId,\n  acRemoveDashboardItem\n}) => {\n  const handleDeleteItem = () => acRemoveDashboardItem(itemId);\n\n  return <div className={classes.itemActionsWrap}>\n            <DeleteItemButton onClick={handleDeleteItem} />\n        </div>;\n};\n\nEditItemActions.propTypes = {\n  acRemoveDashboardItem: PropTypes.func,\n  itemId: PropTypes.string\n};\nconst mapDispatchToProps = {\n  acRemoveDashboardItem\n};\nexport default connect(null, mapDispatchToProps)(EditItemActions);","import React from 'react';\nimport { colors } from '@dhis2/ui';\n\nconst WarningIcon = () => <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24\" viewBox=\"0 0 24 24\" width=\"24\" fill={colors.grey600}>\n        <path d=\"M0 0h24v24H0z\" fill=\"none\" />\n        <path d=\"M12 2C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2zm1 15h-2v-6h2v6zm0-8h-2V7h2v2z\" />\n    </svg>;\n\nexport default WarningIcon;","import React from 'react';\nimport { Tooltip } from '@dhis2/ui';\nimport i18n from '@dhis2/d2-i18n';\nimport InfoIcon from '../../../icons/Info';\nimport classes from './styles/PrintItemInfo.module.css';\n\nconst PrintWarning = () => <div className={classes.warning}>\n        <Tooltip content={i18n.t('This item has been shortened to fit on one page')} placement=\"bottom\">\n            <InfoIcon />\n        </Tooltip>\n    </div>;\n\nexport default PrintWarning;","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport ViewItemActions from './ViewItemActions';\nimport EditItemActions from './EditItemActions';\nimport PrintItemInfo from './PrintItemInfo';\nimport { VIEW, EDIT, PRINT_LAYOUT } from '../../Dashboard/dashboardModes';\nimport classes from './styles/ItemHeader.module.css';\n\nconst getItemActionsMap = isShortened => {\n  return {\n    [VIEW]: ViewItemActions,\n    [EDIT]: EditItemActions,\n    [PRINT_LAYOUT]: isShortened ? PrintItemInfo : null\n  };\n}; // This is the margin-top + margin-bottom defined in the css file\n\n\nexport const HEADER_MARGIN_HEIGHT = 12;\nconst ItemHeader = React.forwardRef(({\n  dashboardMode,\n  title,\n  isShortened,\n  ...rest\n}, ref) => {\n  const Actions = getItemActionsMap(isShortened)[dashboardMode];\n  return <div className={classes.itemHeaderWrap} ref={ref}>\n                <p className={classes.itemTitle}>{title}</p>\n                {Actions ? <Actions {...rest} /> : null}\n            </div>;\n});\nItemHeader.displayName = 'ItemHeader';\nItemHeader.propTypes = {\n  dashboardMode: PropTypes.string,\n  isShortened: PropTypes.bool,\n  title: PropTypes.string\n};\nexport default connect(null, null, null, {\n  forwardRef: true\n})(ItemHeader);","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { isSingleValue, isYearOverYear, VIS_TYPE_GAUGE, VIS_TYPE_PIE } from '@dhis2/analytics';\nimport { Button, Menu, MenuItem, Divider, colors } from '@dhis2/ui';\nimport i18n from '@dhis2/d2-i18n';\nimport Popover from '@material-ui/core/Popover';\nimport TableIcon from '@material-ui/icons/ViewList';\nimport ChartIcon from '@material-ui/icons/InsertChart';\nimport MapIcon from '@material-ui/icons/Public';\nimport LaunchIcon from '@material-ui/icons/Launch';\nimport { ThreeDots, SpeechBubble } from './assets/icons';\nimport { pluginIsAvailable, getLink } from './plugin';\nimport { CHART, MAP, REPORT_TABLE, EVENT_CHART, EVENT_REPORT, isTrackerDomainType, hasMapView, getAppName } from '../../../modules/itemTypes';\nconst iconFill = {\n  fill: colors.grey600\n};\n\nconst ItemHeaderButtons = props => {\n  const [anchorEl, setAnchorEl] = useState(null);\n  const {\n    item,\n    visualization,\n    onSelectActiveType,\n    d2,\n    activeType\n  } = props;\n  const isTrackerType = isTrackerDomainType(item.type);\n\n  const onViewTable = () => {\n    handleClose();\n    onSelectActiveType(isTrackerType ? EVENT_REPORT : REPORT_TABLE);\n  };\n\n  const onViewChart = () => {\n    handleClose();\n    onSelectActiveType(isTrackerType ? EVENT_CHART : CHART);\n  };\n\n  const onViewMap = () => {\n    handleClose();\n    onSelectActiveType(MAP);\n  };\n\n  const itemHasMapView = () => hasMapView(item.type);\n\n  const handleMenuClick = (_, event) => setAnchorEl(event.currentTarget);\n\n  const handleInterpretationClick = () => {\n    props.onToggleFooter();\n\n    if (anchorEl !== null) {\n      handleClose();\n    }\n  };\n\n  const handleClose = () => setAnchorEl(null);\n\n  const type = visualization.type || item.type;\n  const canViewAs = !isSingleValue(type) && !isYearOverYear(type) && type !== VIS_TYPE_GAUGE && type !== VIS_TYPE_PIE;\n  const interpretationMenuLabel = props.activeFooter ? i18n.t(`Hide interpretations and details`) : i18n.t(`Show interpretations and details`);\n\n  const ViewAsMenuItems = () => <>\n            {activeType !== CHART && activeType !== EVENT_CHART && <MenuItem dense label={i18n.t('View as Chart')} onClick={onViewChart} icon={<ChartIcon style={iconFill} />} />}\n            {activeType !== REPORT_TABLE && activeType !== EVENT_REPORT && <MenuItem dense label={i18n.t('View as Table')} onClick={onViewTable} icon={<TableIcon style={iconFill} />} />}\n            {itemHasMapView() && activeType !== MAP && <MenuItem dense label={i18n.t('View as Map')} onClick={onViewMap} icon={<MapIcon style={iconFill} />} />}\n        </>;\n\n  return pluginIsAvailable(item, visualization) ? <>\n            <Button small secondary onClick={handleMenuClick}>\n                <ThreeDots />\n            </Button>\n            {anchorEl && <Popover open={Boolean(anchorEl)} onClose={handleClose} anchorEl={anchorEl}>\n                    <Menu>\n                        {canViewAs && <>\n                                <ViewAsMenuItems />\n                                <Divider />\n                            </>}\n                        <MenuItem dense icon={<LaunchIcon style={{\n          fill: '#6e7a8a'\n        }} />} label={i18n.t('Open in {{appName}} app', {\n          appName: getAppName(item.type)\n        })} href={getLink(item, d2)} target=\"_blank\" />\n                        <MenuItem dense icon={<SpeechBubble />} label={interpretationMenuLabel} onClick={handleInterpretationClick} />\n                    </Menu>\n                </Popover>}\n        </> : null;\n};\n\nItemHeaderButtons.propTypes = {\n  activeFooter: PropTypes.bool,\n  activeType: PropTypes.string,\n  d2: PropTypes.object,\n  item: PropTypes.object,\n  visualization: PropTypes.object,\n  onSelectActiveType: PropTypes.func,\n  onToggleFooter: PropTypes.func\n};\nexport default ItemHeaderButtons;","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { colors } from '@dhis2/ui';\nimport { getId } from './plugin';\nimport InterpretationsComponent from '@dhis2/d2-ui-interpretations';\nconst style = {\n  scrollContainer: {\n    overflowY: 'auto',\n    height: '340px'\n  },\n  line: {\n    margin: '-1px 0px 0px',\n    height: '1px',\n    border: 'none',\n    backgroundColor: colors.grey100\n  }\n};\n\nclass ItemFooter extends Component {\n  render() {\n    const objectId = getId(this.props.item);\n    return <div className=\"dashboard-item-footer\">\n                <hr style={style.line} />\n                <div style={style.scrollContainer}>\n                    <InterpretationsComponent d2={this.context.d2} item={this.props.item} type={this.props.item.type.toLowerCase()} id={objectId} appName=\"dashboard\" />\n                </div>\n            </div>;\n  }\n\n}\n\nItemFooter.contextTypes = {\n  d2: PropTypes.object.isRequired\n};\nItemFooter.propTypes = {\n  item: PropTypes.object.isRequired\n};\nexport default ItemFooter;","import React from 'react';\nimport { CircularLoader } from '@dhis2/ui';\nimport classes from './styles/LoadingMask.module.css';\n\nconst LoadingMask = () => {\n  return <div className={classes.center}>\n            <CircularLoader />\n        </div>;\n};\n\nexport default LoadingMask;","// Note that this ignores discrepancies in 'this', so shouldn't be used with bound functions\n// This is useful instead of lodash/memoize when we only need to memoize a single value\n// Inspiration: https://github.com/alexreardon/memoize-one\nconst memoizeOne = fn => {\n  let lastArgs = undefined;\n  let lastValue = undefined;\n  return (...args) => {\n    if (lastArgs && args.length === lastArgs.length && args.every((arg, i) => arg === lastArgs[i])) {\n      return lastValue;\n    }\n\n    lastArgs = args;\n    lastValue = fn(...args);\n    return lastValue;\n  };\n};\n\nexport default memoizeOne;","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport uniqueId from 'lodash/uniqueId';\nimport VisualizationPlugin from '@dhis2/data-visualizer-plugin';\nimport i18n from '@dhis2/d2-i18n';\nimport DefaultPlugin from './DefaultPlugin';\nimport FatalErrorBoundary from './FatalErrorBoundary';\nimport ItemHeader, { HEADER_MARGIN_HEIGHT } from '../ItemHeader/ItemHeader';\nimport ItemHeaderButtons from './ItemHeaderButtons';\nimport ItemFooter from './ItemFooter';\nimport LoadingMask from './LoadingMask';\nimport * as pluginManager from './plugin';\nimport { sGetVisualization } from '../../../reducers/visualizations';\nimport { sGetItemFiltersRoot, DEFAULT_STATE_ITEM_FILTERS } from '../../../reducers/itemFilters';\nimport { acAddVisualization, acSetActiveVisualizationType } from '../../../actions/visualizations';\nimport { VISUALIZATION, MAP, CHART, REPORT_TABLE } from '../../../modules/itemTypes';\nimport memoizeOne from '../../../modules/memoizeOne';\nimport { isEditMode, isPrintMode, isViewMode } from '../../Dashboard/dashboardModes';\nimport { ITEM_CONTENT_PADDING_BOTTOM } from '../../ItemGrid/ItemGrid';\nimport classes from './styles/Item.module.css';\nexport class Item extends Component {\n  state = {\n    showFooter: false,\n    configLoaded: false,\n    pluginIsLoaded: false\n  };\n\n  constructor(props, context) {\n    super(props);\n    this.d2 = context.d2;\n    this.contentRef = React.createRef();\n    this.headerRef = React.createRef();\n    this.memoizedApplyFilters = memoizeOne(this.applyFilters);\n    this.memoizedGetVisualizationConfig = memoizeOne(pluginManager.getVisualizationConfig);\n    this.memoizedGetContentStyle = memoizeOne(this.getContentStyle);\n  }\n\n  async componentDidMount() {\n    this.props.onVisualizationLoaded( // TODO do not call fetch on the pluginManager, do it here as the manager will eventually be removed...\n    await pluginManager.fetch(this.props.item));\n    this.setState({\n      configLoaded: true\n    });\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    if (prevState.pluginIsLoaded && (prevProps.visualization !== this.props.visualization || prevProps.itemFilters !== this.props.itemFilters)) {\n      this.setState({\n        pluginIsLoaded: false\n      });\n    }\n  }\n\n  applyFilters = (visualization, filters) => {\n    if (!Object.keys(filters).length) {\n      return visualization;\n    } // deep clone objects in filters to avoid changing the visualization in the Redux store\n\n\n    const visRows = visualization.rows.map(obj => ({ ...obj\n    }));\n    const visColumns = visualization.columns.map(obj => ({ ...obj\n    }));\n    const visFilters = visualization.filters.map(obj => ({ ...obj\n    }));\n    Object.keys(filters).forEach(dimensionId => {\n      if (filters[dimensionId]) {\n        let dimensionFound = false;\n        [visRows, visColumns, visFilters].forEach(dimensionObjects => dimensionObjects.filter(obj => obj.dimension === dimensionId).forEach(obj => {\n          dimensionFound = true;\n          obj.items = filters[dimensionId];\n        })); // add dimension to filters if not already present elsewhere\n\n        if (!dimensionFound) {\n          visFilters.push({\n            dimension: dimensionId,\n            items: filters[dimensionId]\n          });\n        }\n      }\n    });\n    return { ...visualization,\n      rows: visRows,\n      columns: visColumns,\n      filters: visFilters\n    };\n  };\n  getUniqueKey = memoizeOne(() => uniqueId());\n  pluginCredentials = null;\n  getPluginComponent = () => {\n    const activeType = this.getActiveType();\n    const visualization = this.memoizedGetVisualizationConfig(this.props.visualization, this.props.item.type, activeType);\n\n    if (!visualization) {\n      return <div className={classes.textDiv}>\n                    {i18n.t('No data to display')}\n                </div>;\n    }\n\n    const calculatedHeight = this.props.item.originalHeight - this.headerRef.current.clientHeight - HEADER_MARGIN_HEIGHT - ITEM_CONTENT_PADDING_BOTTOM;\n    const props = { ...this.props,\n      useActiveType: !isEditMode(this.props.dashboardMode),\n      visualization,\n      classes,\n      style: this.memoizedGetContentStyle(calculatedHeight, this.contentRef ? this.contentRef.offsetHeight : null, isEditMode(this.props.dashboardMode) || isPrintMode(this.props.dashboardMode))\n    };\n\n    switch (activeType) {\n      case VISUALIZATION:\n      case CHART:\n      case REPORT_TABLE:\n        {\n          return <>\n                        {!this.state.pluginIsLoaded && <div style={props.style}>\n                                <LoadingMask />\n                            </div>}\n                        <VisualizationPlugin d2={this.d2} visualization={this.memoizedApplyFilters(visualization, props.itemFilters)} onLoadingComplete={this.onLoadingComplete} forDashboard={true} style={props.style} />\n                    </>;\n        }\n\n      case MAP:\n        {\n          if (props.item.type === MAP) {\n            // apply filters only to thematic and event layers\n            // for maps AO\n            const mapViews = props.visualization.mapViews.map(obj => {\n              if (obj.layer.includes('thematic') || obj.layer.includes('event')) {\n                return this.memoizedApplyFilters(obj, props.itemFilters);\n              }\n\n              return obj;\n            });\n            props.visualization = { ...props.visualization,\n              mapViews\n            };\n          } else {\n            // this is the case of a non map AO passed to the maps plugin\n            // due to a visualization type switch in dashboard item\n            // maps plugin takes care of converting the AO to a suitable format\n            props.visualization = this.memoizedApplyFilters(props.visualization, props.itemFilters);\n          }\n\n          props.options = { ...props.options,\n            hideTitle: true\n          };\n          return <DefaultPlugin {...props} />;\n        }\n\n      default:\n        {\n          props.visualization = this.memoizedApplyFilters(props.visualization, props.itemFilters);\n          return <DefaultPlugin {...props} />;\n        }\n    }\n  };\n  onLoadingComplete = () => {\n    this.setState({\n      pluginIsLoaded: true\n    });\n  };\n  onToggleFooter = () => {\n    this.setState({\n      showFooter: !this.state.showFooter\n    }, this.props.onToggleItemExpanded(this.props.item.id));\n  };\n  onSelectActiveType = type => {\n    if (type === this.getActiveType()) {\n      return;\n    }\n\n    pluginManager.unmount(this.props.item, this.getActiveType());\n    this.props.onSelectActiveType(this.props.visualization.id, type);\n  };\n  getActiveType = () => this.props.visualization.activeType || this.props.item.type;\n  pluginIsAvailable = () => pluginManager.pluginIsAvailable(this.props.item, this.props.visualization);\n  getContentStyle = (calculatedHeight, measuredHeight, preferMeasured) => {\n    const height = preferMeasured ? measuredHeight || calculatedHeight : calculatedHeight;\n    return {\n      height\n    };\n  };\n\n  render() {\n    const {\n      item,\n      dashboardMode,\n      itemFilters\n    } = this.props;\n    const {\n      showFooter\n    } = this.state;\n    const actionButtons = <ItemHeaderButtons item={item} visualization={this.props.visualization} onSelectActiveType={this.onSelectActiveType} onToggleFooter={this.onToggleFooter} d2={this.d2} activeType={this.getActiveType()} activeFooter={this.state.showFooter} />;\n    return <>\n                <ItemHeader title={pluginManager.getName(item)} itemId={item.id} actionButtons={actionButtons} ref={this.headerRef} dashboardMode={dashboardMode} isShortened={item.shortened} />\n                <FatalErrorBoundary>\n                    <div key={this.getUniqueKey(itemFilters)} className=\"dashboard-item-content\" ref={ref => this.contentRef = ref}>\n                        {this.state.configLoaded && this.getPluginComponent()}\n                    </div>\n                </FatalErrorBoundary>\n                {isViewMode(dashboardMode) && showFooter ? <ItemFooter item={item} /> : null}\n            </>;\n  }\n\n}\nItem.contextTypes = {\n  d2: PropTypes.object\n};\nItem.propTypes = {\n  dashboardMode: PropTypes.string,\n  item: PropTypes.object,\n  itemFilters: PropTypes.object,\n  visualization: PropTypes.object,\n  onSelectActiveType: PropTypes.func,\n  onToggleItemExpanded: PropTypes.func,\n  onVisualizationLoaded: PropTypes.func\n};\nItem.defaultProps = {\n  item: {},\n  onToggleItemExpanded: Function.prototype,\n  visualization: {}\n};\n\nconst mapStateToProps = (state, ownProps) => {\n  const itemFilters = !isEditMode(ownProps.dashboardMode) ? sGetItemFiltersRoot(state) : DEFAULT_STATE_ITEM_FILTERS;\n  return {\n    itemFilters,\n    visualization: sGetVisualization(state, pluginManager.extractFavorite(ownProps.item).id)\n  };\n};\n\nconst mapDispatchToProps = dispatch => ({\n  onVisualizationLoaded: visualization => dispatch(acAddVisualization(visualization)),\n  onSelectActiveType: (id, type, activeType) => dispatch(acSetActiveVisualizationType(id, type, activeType))\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Item);","import React from 'react';\nimport { colors } from '@dhis2/ui';\nconst style = {\n  backgroundColor: colors.grey200,\n  border: 'none',\n  height: '1px',\n  margin: '0px 0px 5px 0px'\n};\n\nconst Line = () => <hr style={style} />;\n\nexport default Line;","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport i18n from '@dhis2/d2-i18n';\nimport { colors } from '@dhis2/ui';\nimport ItemHeader from '../ItemHeader/ItemHeader';\nimport Line from '../../../widgets/Line';\nimport { sGetMessagesRoot } from '../../../reducers/messages';\nimport { formatDate } from '../../../modules/util';\nimport { isViewMode } from '../../Dashboard/dashboardModes';\nimport './MessagesItem.css';\nconst PRIVATE = 'PRIVATE';\nconst messageTypes = {\n  [PRIVATE]: 'Private',\n  VALIDATION_RESULT: 'Validation',\n  TICKET: 'Ticket',\n  SYSTEM: 'System'\n};\nconst style = {\n  list: {\n    listStyleType: 'none',\n    paddingLeft: '0px'\n  },\n  seeAll: {\n    textAlign: 'center',\n    fontSize: '13px',\n    marginBottom: '5px'\n  },\n  sender: {\n    fontSize: '13px',\n    lineHeight: '15px',\n    margin: 0,\n    color: colors.grey800\n  },\n  snippet: {\n    color: colors.grey800,\n    fontSize: '13px',\n    lineHeight: '15px',\n    maxHeight: '30px',\n    overflow: 'hidden'\n  }\n};\n\nclass MessagesItem extends Component {\n  state = {\n    uiLocale: ''\n  };\n\n  async componentDidMount() {\n    const uiLocale = await this.context.d2.currentUser.userSettings.get('keyUiLocale');\n    this.setState({\n      uiLocale\n    });\n  }\n\n  getMessageHref = msg => {\n    const msgIdentifier = msg ? `#/${msg.messageType}/${msg.id}` : '';\n    return `${this.context.baseUrl}/dhis-web-messaging/${msgIdentifier}`;\n  };\n  getMessageSender = msg => {\n    const latestMsg = msg.messages.slice(-1)[0];\n    return latestMsg.sender ? latestMsg.sender.displayName : '';\n  };\n  getMessageItems = () => {\n    const modeClass = isViewMode(this.props.dashboardMode) ? 'view' : null;\n    return this.props.messages.map(msg => {\n      const redirectToMsg = () => {\n        if (isViewMode(this.props.dashboardMode)) {\n          document.location.href = this.getMessageHref(msg);\n        }\n      };\n\n      const sender = msg.messageType === PRIVATE ? this.getMessageSender(msg) : messageTypes[msg.messageType];\n      const readClass = !msg.read ? 'unread' : null;\n      const latestMsg = msg.messages.slice(-1)[0];\n      const msgDate = latestMsg.lastUpdated;\n      return <li className={`message-item ${modeClass}`} key={msg.id} onClick={redirectToMsg}>\n                    <p className={`message-title ${readClass}`}>\n                        {msg.displayName} ({msg.messageCount})\n                    </p>\n                    <p style={style.sender}>\n                        {sender} - {formatDate(msgDate, this.state.uiLocale)}\n                    </p>\n                    <p style={style.snippet}>{latestMsg.text}</p>\n                </li>;\n    });\n  };\n\n  render() {\n    return <>\n                <ItemHeader title={i18n.t('Messages')} itemId={this.props.item.id} dashboardMode={this.props.dashboardMode} isShortened={this.props.item.shortened} />\n                <Line />\n                {this.props.messages.length > 0 && <div className=\"dashboard-item-content\">\n                        <ul style={style.list}>{this.getMessageItems()}</ul>\n                        <div style={style.seeAll}>\n                            <a href={this.getMessageHref()}>\n                                {i18n.t('See all messages')}\n                            </a>\n                        </div>\n                    </div>}\n            </>;\n  }\n\n}\n\nMessagesItem.propTypes = {\n  dashboardMode: PropTypes.string,\n  item: PropTypes.object,\n  messages: PropTypes.array\n};\nMessagesItem.contextTypes = {\n  d2: PropTypes.object,\n  baseUrl: PropTypes.string\n};\n\nconst mapStateToProps = state => {\n  return {\n    messages: Object.values(sGetMessagesRoot(state))\n  };\n};\n\nconst MessagesContainer = connect(mapStateToProps, null)(MessagesItem);\nexport default MessagesContainer;","import React from 'react';\nimport PropTypes from 'prop-types';\nimport i18n from '@dhis2/d2-i18n';\nimport ItemHeader from '../ItemHeader/ItemHeader';\nimport NotInterestedIcon from '@material-ui/icons/NotInterested';\n\nconst NotSupportedItem = props => <>\n        <ItemHeader title={i18n.t('Item type \"{{type}}\" not supported', {\n    type: props.item.type\n  })} itemId={props.item.id} dashboardMode={props.dashboardMode} isShortened={props.item.shortened} />\n        <div style={{\n    display: 'flex',\n    justifyContent: 'center',\n    alignItems: 'center',\n    height: '90%'\n  }}>\n            <NotInterestedIcon style={{\n      width: 100,\n      height: 100,\n      align: 'center'\n    }} color=\"disabled\" />\n        </div>\n    </>;\n\nNotSupportedItem.propTypes = {\n  dashboardMode: PropTypes.string,\n  item: PropTypes.object\n};\nexport default NotSupportedItem;","import React from 'react';\nimport { colors } from '@dhis2/ui';\nimport PropTypes from 'prop-types';\n\nconst DescriptionIcon = ({\n  className\n}) => <svg className={className} xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\" fill={colors.grey500}>\n        <path d=\"M0 0h24v24H0z\" fill=\"none\" />\n        <path d=\"M14 2H6c-1.1 0-1.99.9-1.99 2L4 20c0 1.1.89 2 1.99 2H18c1.1 0 2-.9 2-2V8l-6-6zm2 16H8v-2h8v2zm0-4H8v-2h8v2zm-3-5V3.5L18.5 9H13z\" />\n    </svg>;\n\nDescriptionIcon.propTypes = {\n  className: PropTypes.string\n};\nexport default DescriptionIcon;","import React from 'react';\nimport { colors } from '@dhis2/ui';\nimport PropTypes from 'prop-types';\n\nconst DeleteIcon = ({\n  className\n}) => <svg className={className} xmlns=\"http://www.w3.org/2000/svg\" width=\"18\" height=\"18\" viewBox=\"0 0 24 24\" fill={colors.red500}>\n        <path d=\"M6 19c0 1.1.9 2 2 2h8c1.1 0 2-.9 2-2V7H6v12zM19 4h-3.5l-1-1h-5l-1 1H5v2h14V4z\" />\n        <path d=\"M0 0h24v24H0z\" fill=\"none\" />\n    </svg>;\n\nDeleteIcon.propTypes = {\n  className: PropTypes.string\n};\nexport default DeleteIcon;","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { colors } from '@dhis2/ui';\nimport DescriptionIcon from '../../../icons/Description';\nimport DeleteIcon from '../../../icons/Delete';\nimport Line from '../../../widgets/Line';\nimport { itemTypeMap, getItemUrl } from '../../../modules/itemTypes';\nimport { orArray } from '../../../modules/util';\nimport { tRemoveListItemContent } from './actions';\nimport ItemHeader from '../ItemHeader/ItemHeader';\nimport { isEditMode } from '../../Dashboard/dashboardModes';\nimport classes from './Item.module.css';\n\nconst getItemTitle = item => itemTypeMap[item.type].pluralTitle;\n\nconst getContentItems = item => orArray(item[itemTypeMap[item.type].propName]).filter((item, index, array) => array.findIndex(el => el.id === item.id) === index);\n\nconst ListItem = (props, context) => {\n  const {\n    item,\n    dashboardMode,\n    tRemoveListItemContent\n  } = props;\n  const contentItems = getContentItems(item);\n\n  const getLink = contentItem => {\n    const deleteButton = <button className={classes.deletebutton} onClick={() => tRemoveListItemContent(item, contentItem)}>\n                <DeleteIcon className={classes.deleteicon} />\n            </button>;\n    return <>\n                <a className={classes.link} style={{\n        color: colors.grey900\n      }} href={getItemUrl(item.type, contentItem, context.d2)}>\n                    {contentItem.name}\n                </a>\n                {isEditMode(dashboardMode) ? deleteButton : null}\n            </>;\n  };\n\n  return <>\n            <ItemHeader title={getItemTitle(item)} itemId={item.id} dashboardMode={dashboardMode} isShortened={item.shortened} />\n            <Line />\n            <div className=\"dashboard-item-content\">\n                <ul className={classes.list}>\n                    {contentItems.map(contentItem => <li className={classes.item} key={contentItem.id}>\n                            <DescriptionIcon className={classes.itemicon} />\n                            {getLink(contentItem)}\n                        </li>)}\n                </ul>\n            </div>\n        </>;\n};\n\nListItem.propTypes = {\n  dashboardMode: PropTypes.string,\n  item: PropTypes.object,\n  tRemoveListItemContent: PropTypes.func\n};\nListItem.contextTypes = {\n  d2: PropTypes.object\n};\nexport default connect(null, {\n  tRemoveListItemContent\n})(ListItem);","import { acUpdateDashboardItem, acRemoveDashboardItem } from '../../../actions/editDashboard';\nimport { itemTypeMap } from '../../../modules/itemTypes';\nexport const tRemoveListItemContent = (dashboardItem, content) => dispatch => {\n  const listItemType = itemTypeMap[dashboardItem.type].propName;\n  const newContent = dashboardItem[listItemType].filter(item => item.id !== content.id);\n\n  if (newContent.length) {\n    dashboardItem[listItemType] = newContent;\n    dispatch(acUpdateDashboardItem(dashboardItem));\n  } else {\n    dispatch(acRemoveDashboardItem(dashboardItem));\n  }\n};","/** @module reducers/editDashboard */\nimport update from 'immutability-helper';\nimport isEmpty from 'lodash/isEmpty';\nimport { orArray } from '../modules/util';\nexport const SET_PRINT_DASHBOARD = 'SET_PRINT_DASHBOARD';\nexport const CLEAR_PRINT_DASHBOARD = 'CLEAR_PRINT_DASHBOARD';\nexport const ADD_PRINT_DASHBOARD_ITEM = 'ADD_PRINT_DASHBOARD_ITEM';\nexport const SET_PRINT_DASHBOARD_LAYOUT = 'SET_PRINT_DASHBOARD_LAYOUT';\nexport const REMOVE_PRINT_DASHBOARD_ITEM = 'REMOVE_PRINT_DASHBOARD_ITEM';\nexport const UPDATE_PRINT_DASHBOARD_ITEM = 'UPDATE_PRINT_DASHBOARD_ITEM';\nexport const DEFAULT_STATE_PRINT_DASHBOARD = {};\nconst DEFAULT_DASHBOARD_ITEMS = [];\nexport const NEW_PRINT_DASHBOARD_STATE = {\n  id: '',\n  name: '',\n  access: {},\n  description: '',\n  dashboardItems: DEFAULT_DASHBOARD_ITEMS\n};\nexport default ((state = DEFAULT_STATE_PRINT_DASHBOARD, action) => {\n  switch (action.type) {\n    case SET_PRINT_DASHBOARD:\n      {\n        const newState = {};\n        Object.keys(NEW_PRINT_DASHBOARD_STATE).map(k => newState[k] = action.value[k]);\n        return newState;\n      }\n\n    case CLEAR_PRINT_DASHBOARD:\n      return DEFAULT_STATE_PRINT_DASHBOARD;\n\n    case ADD_PRINT_DASHBOARD_ITEM:\n      if (!action.value.position) {\n        return update(state, {\n          dashboardItems: {\n            $unshift: [action.value]\n          }\n        });\n      }\n\n      return update(state, {\n        dashboardItems: {\n          $splice: [[parseInt(action.value.position), 0, action.value]]\n        }\n      });\n\n    case REMOVE_PRINT_DASHBOARD_ITEM:\n      {\n        const idToRemove = action.value;\n        const dashboardItemIndex = state.dashboardItems.findIndex(item => item.id === idToRemove);\n\n        if (dashboardItemIndex > -1) {\n          return update(state, {\n            dashboardItems: {\n              $splice: [[dashboardItemIndex, 1]]\n            }\n          });\n        }\n\n        return state;\n      }\n\n    case UPDATE_PRINT_DASHBOARD_ITEM:\n      {\n        const dashboardItem = action.value;\n        const dashboardItemIndex = state.dashboardItems.findIndex(item => item.id === dashboardItem.id);\n\n        if (dashboardItemIndex > -1) {\n          const newState = update(state, {\n            dashboardItems: {\n              $splice: [[dashboardItemIndex, 1, Object.assign({}, dashboardItem)]]\n            }\n          });\n          return newState;\n        }\n\n        return state;\n      }\n\n    case SET_PRINT_DASHBOARD_LAYOUT:\n      {\n        const stateItems = orArray(state.dashboardItems);\n        let layoutHasChanged = false;\n        const newStateItems = action.value.map(({\n          x,\n          y,\n          w,\n          h,\n          i\n        }) => {\n          const stateItem = stateItems.find(si => si.id === i);\n\n          if (!(stateItem.x === x && stateItem.y === y && stateItem.w === w && stateItem.h === h)) {\n            layoutHasChanged = true;\n            return Object.assign({}, stateItem, {\n              w,\n              h,\n              x,\n              y\n            });\n          }\n\n          return stateItem;\n        });\n        return layoutHasChanged ? { ...state,\n          dashboardItems: newStateItems\n        } : state;\n      }\n\n    default:\n      return state;\n  }\n}); // root selector\n\nexport const sGetPrintDashboardRoot = state => state.printDashboard; // selectors\n\nexport const sGetIsPrinting = state => !isEmpty(state.printDashboard);\nexport const sGetPrintDashboardItems = state => {\n  return sGetPrintDashboardRoot(state)?.dashboardItems || DEFAULT_DASHBOARD_ITEMS;\n};","import React from 'react';\nimport { connect } from 'react-redux';\nimport i18n from '@dhis2/d2-i18n';\nimport PropTypes from 'prop-types';\nimport Input from '@material-ui/core/Input';\nimport ItemHeader from '../ItemHeader/ItemHeader';\nimport PrintItemInfo from '../ItemHeader/PrintItemInfo';\nimport Line from '../../../widgets/Line';\nimport { Parser as RichTextParser, Editor as RichTextEditor } from '@dhis2/d2-ui-rich-text';\nimport { acUpdateDashboardItem } from '../../../actions/editDashboard';\nimport { sGetEditDashboardItems } from '../../../reducers/editDashboard';\nimport { sGetDashboardItems } from '../../../reducers/dashboards';\nimport { sGetIsPrinting, sGetPrintDashboardItems } from '../../../reducers/printDashboard';\nimport { isEditMode, PRINT_LAYOUT } from '../../Dashboard/dashboardModes';\nconst style = {\n  textDiv: {\n    padding: '10px',\n    whiteSpace: 'pre-line',\n    lineHeight: '20px'\n  },\n  textField: {\n    fontSize: '14px',\n    fontStretch: 'normal',\n    width: '90%',\n    margin: '0 auto',\n    display: 'block',\n    lineHeight: '24px'\n  },\n  container: {\n    marginBottom: '20px',\n    marginTop: '20px'\n  }\n};\n\nconst TextItem = props => {\n  const {\n    item,\n    dashboardMode,\n    text,\n    acUpdateDashboardItem\n  } = props;\n\n  const onChangeText = event => {\n    const updatedItem = { ...item,\n      text: event.target.value\n    };\n    acUpdateDashboardItem(updatedItem);\n  };\n\n  const viewItem = () => {\n    const textDivStyle = Object.assign({}, style.textField, style.textDiv);\n    return <div className=\"dashboard-item-content\" style={style.container}>\n                <RichTextParser style={textDivStyle}>{text}</RichTextParser>\n            </div>;\n  };\n\n  const editItem = () => {\n    return <>\n                <ItemHeader title={i18n.t('Text item')} itemId={item.id} dashboardMode={dashboardMode} />\n                <Line />\n                <div className=\"dashboard-item-content\">\n                    <RichTextEditor onEdit={onChangeText}>\n                        <Input value={text} multiline fullWidth style={style.textField} placeholder={i18n.t('Add text here')} onChange={onChangeText} />\n                    </RichTextEditor>\n                </div>\n            </>;\n  };\n\n  const printItem = () => {\n    const textDivStyle = Object.assign({}, style.textField, style.textDiv);\n    return <>\n                {props.item.shortened ? <PrintItemInfo /> : null}\n                <div className=\"dashboard-item-content\" style={style.container}>\n                    <RichTextParser style={textDivStyle}>{text}</RichTextParser>\n                </div>\n            </>;\n  };\n\n  let textItem;\n\n  if (isEditMode(dashboardMode)) {\n    textItem = editItem;\n  } else if (dashboardMode === PRINT_LAYOUT) {\n    textItem = printItem;\n  } else {\n    textItem = viewItem;\n  }\n\n  return <>{textItem()}</>;\n};\n\nconst mapStateToProps = (state, ownProps) => {\n  const isPrintPreview = sGetIsPrinting(state);\n  let items;\n\n  if (isPrintPreview) {\n    items = sGetPrintDashboardItems(state);\n  } else if (isEditMode(ownProps.dashboardMode)) {\n    items = sGetEditDashboardItems(state);\n  } else {\n    items = sGetDashboardItems(state);\n  }\n\n  const item = items.find(item => item.id === ownProps.item.id);\n  return {\n    text: item ? item.text : ''\n  };\n};\n\nTextItem.propTypes = {\n  acUpdateDashboardItem: PropTypes.func,\n  dashboardMode: PropTypes.string,\n  item: PropTypes.object,\n  text: PropTypes.string\n};\nexport default connect(mapStateToProps, {\n  acUpdateDashboardItem\n})(TextItem);","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport NotInterestedIcon from '@material-ui/icons/NotInterested';\nimport { FILTER_ORG_UNIT } from '../../../actions/itemFilters';\nimport { sGetItemFiltersRoot, DEFAULT_STATE_ITEM_FILTERS } from '../../../reducers/itemFilters';\nimport ItemHeader from '../ItemHeader/ItemHeader';\nimport Line from '../../../widgets/Line';\nimport { isEditMode } from '../../Dashboard/dashboardModes';\n\nconst getIframeSrc = (appDetails, item, itemFilters) => {\n  let iframeSrc = `${appDetails.launchUrl}?dashboardItemId=${item.id}`;\n\n  if (itemFilters && itemFilters[FILTER_ORG_UNIT] && itemFilters[FILTER_ORG_UNIT].length) {\n    const ouIds = itemFilters[FILTER_ORG_UNIT].map(ouPath => ouPath.split('/').slice(-1)[0]);\n    iframeSrc += `&userOrgUnit=${ouIds.join(',')}`;\n  }\n\n  return iframeSrc;\n};\n\nconst AppItem = ({\n  dashboardMode,\n  item,\n  itemFilters\n}, context) => {\n  let appDetails;\n  const appKey = item.appKey;\n\n  if (appKey) {\n    appDetails = context.d2.system.installedApps.find(app => app.key === appKey);\n  }\n\n  return appDetails && appDetails.name && appDetails.launchUrl ? <>\n            <ItemHeader title={appDetails.name} itemId={item.id} dashboardMode={dashboardMode} isShortened={item.shortened} />\n            <Line />\n            <iframe title={appDetails.name} src={getIframeSrc(appDetails, item, itemFilters)} className=\"dashboard-item-content\" style={{\n      border: 'none'\n    }} />\n        </> : <>\n            <ItemHeader title={`${appKey} app not found`} />\n            <Line />\n            <div className=\"dashboard-item-content\" style={{\n      display: 'flex',\n      justifyContent: 'center',\n      alignItems: 'center',\n      height: '90%'\n    }}>\n                <NotInterestedIcon color=\"disabled\" disabled style={{\n        width: 100,\n        height: 100,\n        align: 'center'\n      }} />\n            </div>\n        </>;\n};\n\nAppItem.propTypes = {\n  dashboardMode: PropTypes.string,\n  item: PropTypes.object,\n  itemFilters: PropTypes.object\n};\nAppItem.contextTypes = {\n  d2: PropTypes.object\n};\n\nconst mapStateToProps = (state, ownProps) => {\n  const itemFilters = !isEditMode(ownProps.dashboardMode) ? sGetItemFiltersRoot(state) : DEFAULT_STATE_ITEM_FILTERS;\n  return {\n    itemFilters\n  };\n};\n\nexport default connect(mapStateToProps)(AppItem);","import React from 'react';\nimport PropTypes from 'prop-types';\nimport i18n from '@dhis2/d2-i18n';\nimport { colors } from '@dhis2/ui';\nimport ItemHeader from '../ItemHeader/ItemHeader';\nconst style = {\n  margin: '21px 28px',\n  fontSize: '14px',\n  lineHeight: '18px',\n  color: colors.grey600\n};\n\nconst SpacerItem = props => {\n  return <>\n            <ItemHeader title={i18n.t('Spacer')} itemId={props.item.id} dashboardMode={props.dashboardMode} isShortened={props.item.shortened} />\n            <p style={style}>\n                {i18n.t('Use a spacer to create empty vertical space between other dashboard items.')}\n            </p>\n        </>;\n};\n\nSpacerItem.propTypes = {\n  dashboardMode: PropTypes.string,\n  item: PropTypes.object\n};\nexport default SpacerItem;","import React from 'react';\n\nconst PageBreakItem = () => <div />;\n\nexport default PageBreakItem;","import React from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport i18n from '@dhis2/d2-i18n';\nimport { orObject } from '../../../modules/util';\nimport { sGetSelectedId, sGetSelectedShowDescription } from '../../../reducers/selected';\nimport { sGetDashboardById } from '../../../reducers/dashboards';\nimport { sGetNamedItemFilters } from '../../../reducers/itemFilters';\nimport classes from './styles/Item.module.css';\n\nconst PrintTitlePageItem = ({\n  name,\n  description,\n  itemFilters,\n  showDescription\n}) => {\n  const getItemFilterList = () => {\n    const listItems = itemFilters.map(({\n      name,\n      values\n    }) => <li className={classes.filterListItem} key={name}>\n                {name}: {values.map(val => val.name).join(', ')}\n            </li>);\n    return <ul className={classes.filterList}>{listItems}</ul>;\n  };\n\n  return <div className={classes.titlePage}>\n            <p className={classes.name}>{name}</p>\n            {showDescription && description && <p className={classes.description}>{description}</p>}\n            {itemFilters.length > 0 && <>\n                    <p className={classes.filterTitle}>\n                        {i18n.t('Filters applied')}\n                    </p>\n                    {getItemFilterList()}\n                </>}\n        </div>;\n};\n\nPrintTitlePageItem.propTypes = {\n  description: PropTypes.string,\n  itemFilters: PropTypes.array,\n  name: PropTypes.string,\n  showDescription: PropTypes.bool\n};\nPrintTitlePageItem.defaultProps = {\n  description: '',\n  name: '',\n  showDescription: false\n};\n\nconst mapStateToProps = state => {\n  const id = sGetSelectedId(state);\n  const dashboard = orObject(sGetDashboardById(state, id));\n  return {\n    name: dashboard.displayName,\n    itemFilters: sGetNamedItemFilters(state),\n    description: dashboard.displayDescription,\n    showDescription: sGetSelectedShowDescription(state)\n  };\n};\n\nexport default connect(mapStateToProps)(PrintTitlePageItem);","import React from 'react';\nimport PropTypes from 'prop-types';\nimport VisualizationItem from './VisualizationItem/Item';\nimport MessagesItem from './MessagesItem/Item';\nimport NotSupportedItem from './NotSupportedItem/Item';\nimport ListItem from './ListItem/Item';\nimport TextItem from './TextItem/Item';\nimport AppItem from './AppItem/Item';\nimport SpacerItem from './SpacerItem/Item';\nimport PageBreakItem from './PageBreakItem/Item';\nimport PrintTitlePageItem from './PrintTitlePageItem/Item';\nimport { APP, VISUALIZATION, REPORT_TABLE, CHART, MAP, EVENT_CHART, EVENT_REPORT, MESSAGES, REPORTS, RESOURCES, USERS, TEXT, SPACER, PAGEBREAK, PRINT_TITLE_PAGE } from '../../modules/itemTypes';\n\nconst getGridItem = type => {\n  switch (type) {\n    case VISUALIZATION:\n    case REPORT_TABLE:\n    case CHART:\n    case MAP:\n    case EVENT_CHART:\n    case EVENT_REPORT:\n      return VisualizationItem;\n\n    case MESSAGES:\n      return MessagesItem;\n\n    case REPORTS:\n    case RESOURCES:\n    case USERS:\n      return ListItem;\n\n    case TEXT:\n      return TextItem;\n\n    case SPACER:\n      return SpacerItem;\n\n    case APP:\n      return AppItem;\n\n    case PAGEBREAK:\n      return PageBreakItem;\n\n    case PRINT_TITLE_PAGE:\n      return PrintTitlePageItem;\n\n    default:\n      return NotSupportedItem;\n  }\n};\n\nexport const Item = props => {\n  const GridItem = getGridItem(props.item.type);\n  return <GridItem item={props.item} dashboardMode={props.dashboardMode} onToggleItemExpanded={props.onToggleItemExpanded} />;\n};\nItem.propTypes = {\n  dashboardMode: PropTypes.string,\n  item: PropTypes.object,\n  onToggleItemExpanded: PropTypes.func\n};","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport debounce from 'lodash/debounce';\nimport pick from 'lodash/pick';\nconst defaultDebounceMs = 100;\nconst defaultBufferFactor = 0.25;\n\nclass ProgressiveLoadingContainer extends Component {\n  static propTypes = {\n    children: PropTypes.node.isRequired,\n    bufferFactor: PropTypes.number,\n    className: PropTypes.string,\n    debounceMs: PropTypes.number,\n    style: PropTypes.object\n  };\n  static defaultProps = {\n    debounceMs: defaultDebounceMs,\n    bufferFactor: defaultBufferFactor\n  };\n  state = {\n    shouldLoad: false\n  };\n  containerRef = null;\n  shouldLoadHandler = null;\n\n  checkShouldLoad() {\n    const bufferPx = this.props.bufferFactor * window.innerHeight;\n\n    if (!this.containerRef) {\n      return;\n    }\n\n    const rect = this.containerRef.getBoundingClientRect();\n\n    if (rect.bottom > -bufferPx && rect.top < window.innerHeight + bufferPx) {\n      this.setState({\n        shouldLoad: true\n      });\n      this.removeHandler();\n    }\n  }\n\n  registerHandler() {\n    this.shouldLoadHandler = debounce(() => this.checkShouldLoad(), this.props.debounceMs);\n    const containers = [window, // this is probably unnecessary\n    ...document.getElementsByClassName('dashboard-wrapper')];\n    containers.forEach(container => {\n      container.addEventListener('scroll', this.shouldLoadHandler);\n    });\n  }\n\n  removeHandler() {\n    const containers = [window, // this is probably unnecessary\n    ...document.getElementsByClassName('dashboard-wrapper')];\n    containers.forEach(container => {\n      container.removeEventListener('scroll', this.shouldLoadHandler);\n    });\n  }\n\n  componentDidMount() {\n    this.registerHandler();\n    this.checkShouldLoad();\n  }\n\n  componentWillUnmount() {\n    this.removeHandler();\n  }\n\n  render() {\n    const {\n      children,\n      className,\n      style,\n      ...props\n    } = this.props;\n    const {\n      shouldLoad\n    } = this.state;\n    const eventProps = pick(props, ['onMouseDown', 'onTouchStart', 'onMouseUp', 'onTouchEnd']);\n    return <div ref={ref => this.containerRef = ref} style={style} className={className} {...eventProps}>\n                {shouldLoad && children}\n            </div>;\n  }\n\n}\n\nexport default ProgressiveLoadingContainer;","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport i18n from '@dhis2/d2-i18n';\nimport ReactGridLayout from 'react-grid-layout';\nimport { Layer, CenteredContent, CircularLoader } from '@dhis2/ui';\nimport { acUpdateDashboardLayout } from '../../actions/editDashboard';\nimport { Item } from '../Item/Item';\nimport { resize as pluginResize } from '../Item/VisualizationItem/plugin';\nimport { isVisualizationType } from '../../modules/itemTypes';\nimport { GRID_ROW_HEIGHT, GRID_COMPACT_TYPE, MARGIN, getGridColumns, hasShape, onItemResize } from './gridUtil';\nimport { orArray } from '../../modules/util';\nimport NoContentMessage from '../../widgets/NoContentMessage';\nimport 'react-grid-layout/css/styles.css';\nimport 'react-resizable/css/styles.css';\nimport './ItemGrid.css';\nimport { sGetSelectedId, sGetSelectedIsLoading } from '../../reducers/selected';\nimport { sGetEditDashboardRoot, sGetEditDashboardItems } from '../../reducers/editDashboard';\nimport { sGetDashboardById, sGetDashboardItems } from '../../reducers/dashboards';\nimport ProgressiveLoadingContainer from '../Item/ProgressiveLoadingContainer';\nimport { VIEW, EDIT } from '../Dashboard/dashboardModes'; // Component\n\nconst EXPANDED_HEIGHT = 17; // this is set in the .dashboard-item-content css\n\nexport const ITEM_CONTENT_PADDING_BOTTOM = 4;\nexport class ItemGrid extends Component {\n  state = {\n    expandedItems: {}\n  };\n  onToggleItemExpanded = clickedId => {\n    const isExpanded = typeof this.state.expandedItems[clickedId] === 'boolean' ? this.state.expandedItems[clickedId] : false;\n    const expandedItems = { ...this.state.expandedItems\n    };\n    expandedItems[clickedId] = !isExpanded;\n    this.setState({\n      expandedItems\n    });\n  };\n\n  componentWillReceiveProps(nextProps) {\n    if (nextProps.edit) {\n      this.setState({\n        expandedItems: {}\n      });\n    }\n  }\n\n  onLayoutChange = newLayout => {\n    if (this.props.edit) {\n      this.props.acUpdateDashboardLayout(newLayout);\n    }\n  };\n  onResizeStop = (layout, oldItem, newItem) => {\n    onItemResize(newItem.i);\n    const dashboardItem = this.props.dashboardItems.find(item => item.id === newItem.i); // call resize on the item component if it's a plugin type\n\n    if (dashboardItem && isVisualizationType(dashboardItem)) {\n      pluginResize(dashboardItem);\n    }\n  };\n  adjustHeightForExpanded = dashboardItem => {\n    const expandedItem = this.state.expandedItems[dashboardItem.id];\n\n    if (expandedItem && expandedItem === true) {\n      return Object.assign({}, dashboardItem, {\n        h: dashboardItem.h + EXPANDED_HEIGHT\n      });\n    }\n\n    return dashboardItem;\n  };\n  getItemComponent = item => {\n    const itemClassNames = [item.type, this.props.edit ? 'edit' : 'view'].join(' ');\n    return <ProgressiveLoadingContainer key={item.i} className={itemClassNames}>\n                <Item item={item} dashboardMode={this.props.edit ? EDIT : VIEW} onToggleItemExpanded={this.onToggleItemExpanded} />\n            </ProgressiveLoadingContainer>;\n  };\n  getItemComponents = items => items.map(item => this.getItemComponent(item));\n\n  render() {\n    const {\n      edit,\n      isLoading,\n      dashboardItems\n    } = this.props;\n\n    if (!isLoading && !dashboardItems.length) {\n      return <NoContentMessage text={i18n.t('There are no items on this dashboard')} />;\n    }\n\n    const items = edit ? dashboardItems : dashboardItems.map(this.adjustHeightForExpanded);\n    return <div className=\"grid-wrapper\">\n                {isLoading ? <Layer translucent>\n                        <CenteredContent>\n                            <CircularLoader />\n                        </CenteredContent>\n                    </Layer> : null}\n                <ReactGridLayout onLayoutChange={this.onLayoutChange} onResizeStop={this.onResizeStop} className=\"layout\" layout={items} margin={MARGIN} cols={getGridColumns()} rowHeight={GRID_ROW_HEIGHT} width={window.innerWidth} compactType={GRID_COMPACT_TYPE} isDraggable={edit} isResizable={edit} draggableCancel=\"input,textarea\">\n                    {this.getItemComponents(items)}\n                </ReactGridLayout>\n            </div>;\n  }\n\n}\nItemGrid.propTypes = {\n  acUpdateDashboardLayout: PropTypes.func,\n  dashboardItems: PropTypes.array,\n  edit: PropTypes.bool,\n  isLoading: PropTypes.bool\n};\nItemGrid.defaultProps = {\n  dashboardItems: []\n}; // Container\n\nconst mapStateToProps = (state, ownProps) => {\n  const selectedDashboard = ownProps.edit ? sGetEditDashboardRoot(state) : sGetDashboardById(state, sGetSelectedId(state));\n  const dashboardItems = ownProps.edit ? sGetEditDashboardItems(state) : sGetDashboardItems(state);\n  return {\n    isLoading: sGetSelectedIsLoading(state) || !selectedDashboard,\n    dashboardItems\n  };\n};\n\nconst mapDispatchToProps = {\n  acUpdateDashboardLayout\n};\n\nconst mergeProps = (stateProps, dispatchProps, ownProps) => {\n  const validItems = orArray(stateProps.dashboardItems).filter(hasShape);\n  return { ...dispatchProps,\n    edit: ownProps.edit,\n    isLoading: stateProps.isLoading,\n    dashboardItems: validItems,\n    onItemResize\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps, mergeProps)(ItemGrid);","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport i18n from '@dhis2/d2-i18n';\nimport { colors } from '@dhis2/ui';\nconst styles = {\n  badgeContainer: {\n    margin: '2px',\n    padding: '0 16px',\n    borderRadius: '4px',\n    color: colors.white,\n    backgroundColor: '#212934',\n    height: 36,\n    display: 'flex',\n    alignItems: 'center'\n  },\n  badge: {\n    fontSize: '13px',\n    cursor: 'pointer',\n    whiteSpace: 'nowrap'\n  },\n  badgeRemove: {\n    fontSize: '12px',\n    textDecoration: 'underline',\n    marginLeft: '24px',\n    cursor: 'pointer'\n  }\n};\n\nclass FilterBadge extends Component {\n  onClick = id => () => this.props.onClick(id);\n  onRemove = id => () => this.props.onRemove(id);\n\n  render() {\n    const {\n      data\n    } = this.props;\n    return <div style={styles.badgeContainer}>\n                <span style={styles.badge} onClick={this.onClick(data.id)}>\n                    {`${data.name}: ${data.values.length > 1 ? i18n.t('{{count}} selected', {\n          count: data.values.length\n        }) : data.values[0].name}`}\n                </span>\n                <span style={styles.badgeRemove} onClick={this.onRemove(data.id)}>\n                    {i18n.t('Remove')}\n                </span>\n            </div>;\n  }\n\n}\n\nFilterBadge.propTypes = {\n  data: PropTypes.object.isRequired,\n  onClick: PropTypes.func.isRequired,\n  onRemove: PropTypes.func.isRequired\n};\nFilterBadge.defaultProps = {\n  onClick: Function.prototype,\n  onRemove: Function.prototype\n};\nexport default FilterBadge;","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport FilterBadge from './FilterBadge';\nimport { sGetNamedItemFilters } from '../../reducers/itemFilters';\nimport { sGetControlBarUserRows } from '../../reducers/controlBar';\nimport { getControlBarHeight } from '../ControlBar/controlBarDimensions';\nimport { acRemoveItemFilter } from '../../actions/itemFilters';\nimport { acSetActiveModalDimension } from '../../actions/activeModalDimension';\nimport classes from './styles/FilterBar.module.css';\nexport class FilterBar extends Component {\n  onBadgeRemove = id => {\n    this.props.removeItemFilter(id);\n  };\n  onBadgeClick = id => {\n    this.props.setActiveModalDimension({\n      id,\n      name: this.props.filters.find(item => item.id === id).name\n    });\n  };\n\n  render() {\n    const {\n      filters,\n      userRows\n    } = this.props;\n    const top = getControlBarHeight(userRows) + 10;\n    return filters.length ? <div className={classes.bar} style={{\n      top\n    }}>\n                {filters.map(filter => <FilterBadge key={filter.id} data={filter} onClick={this.onBadgeClick} onRemove={this.onBadgeRemove} />)}\n            </div> : null;\n  }\n\n}\nFilterBar.propTypes = {\n  filters: PropTypes.array.isRequired,\n  removeItemFilter: PropTypes.func.isRequired,\n  setActiveModalDimension: PropTypes.func,\n  userRows: PropTypes.number\n};\nFilterBar.defaultProps = {\n  filters: [],\n  removeItemFIlter: Function.prototype\n};\n\nconst mapStateToProps = state => ({\n  filters: sGetNamedItemFilters(state),\n  userRows: sGetControlBarUserRows(state)\n});\n\nexport default connect(mapStateToProps, {\n  setActiveModalDimension: acSetActiveModalDimension,\n  removeItemFilter: acRemoveItemFilter\n})(FilterBar);","export const SET_WINDOW_HEIGHT = 'SET_WINDOW_HEIGHT';\nexport const DEFAULT_STATE_WINDOW_HEIGHT = window.innerHeight;\nexport default ((state = DEFAULT_STATE_WINDOW_HEIGHT, action) => {\n  switch (action.type) {\n    case SET_WINDOW_HEIGHT:\n      {\n        return action.value;\n      }\n\n    default:\n      return state;\n  }\n});\nexport const sGetWindowHeight = state => state.windowHeight;","import { generateUid } from 'd2/uid';\nimport { SET_PRINT_DASHBOARD, CLEAR_PRINT_DASHBOARD, SET_PRINT_DASHBOARD_LAYOUT, ADD_PRINT_DASHBOARD_ITEM, REMOVE_PRINT_DASHBOARD_ITEM, UPDATE_PRINT_DASHBOARD_ITEM } from '../reducers/printDashboard';\nimport { NEW_ITEM_SHAPE, getGridItemProperties, getPageBreakItemShape, getPrintTitlePageItemShape } from '../components/ItemGrid/gridUtil';\nimport { itemTypeMap, PAGEBREAK } from '../modules/itemTypes'; // actions\n\nexport const acSetPrintDashboard = (dashboard, items) => {\n  const val = { ...dashboard,\n    dashboardItems: items\n  };\n  return {\n    type: SET_PRINT_DASHBOARD,\n    value: val\n  };\n};\nexport const acClearPrintDashboard = () => ({\n  type: CLEAR_PRINT_DASHBOARD\n});\nexport const acUpdatePrintDashboardLayout = value => ({\n  type: SET_PRINT_DASHBOARD_LAYOUT,\n  value\n});\nexport const acAddPrintDashboardItem = item => {\n  const type = item.type;\n  delete item.type;\n  const itemPropName = itemTypeMap[type].propName;\n  const id = generateUid();\n  const gridItemProperties = getGridItemProperties(id);\n  let shape;\n\n  if (type === PAGEBREAK) {\n    const yPos = item.yPos || 0;\n    shape = getPageBreakItemShape(yPos, item.isStatic);\n  } else {\n    shape = getPrintTitlePageItemShape(item.isOneItemPerPage);\n  }\n\n  return {\n    type: ADD_PRINT_DASHBOARD_ITEM,\n    value: {\n      id,\n      type,\n      position: item.position || null,\n      [itemPropName]: item.content,\n      ...NEW_ITEM_SHAPE,\n      ...gridItemProperties,\n      ...shape\n    }\n  };\n};\nexport const acRemovePrintDashboardItem = value => ({\n  type: REMOVE_PRINT_DASHBOARD_ITEM,\n  value\n});\nexport const acUpdatePrintDashboardItem = item => ({\n  type: UPDATE_PRINT_DASHBOARD_ITEM,\n  value: item\n});","import React, { useEffect } from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport TitleBar from '../TitleBar/TitleBar';\nimport ItemGrid from '../ItemGrid/ItemGrid';\nimport FilterBar from '../FilterBar/FilterBar';\nimport DashboardsBar from '../ControlBar/DashboardsBar';\nimport DashboardVerticalOffset from './DashboardVerticalOffset';\nimport { sGetIsEditing } from '../../reducers/editDashboard';\nimport { sGetIsPrinting } from '../../reducers/printDashboard';\nimport { sGetSelectedId } from '../../reducers/selected';\nimport { sGetWindowHeight } from '../../reducers/windowHeight';\nimport { sGetControlBarUserRows } from '../../reducers/controlBar';\nimport { acClearEditDashboard } from '../../actions/editDashboard';\nimport { acClearPrintDashboard } from '../../actions/printDashboard';\nimport { getControlBarHeight, HEADERBAR_HEIGHT } from '../ControlBar/controlBarDimensions';\nexport const ViewDashboard = props => {\n  useEffect(() => {\n    if (props.dashboardIsEditing) {\n      props.clearEditDashboard();\n    } else if (props.dashboardIsPrinting) {\n      props.clearPrintDashboard();\n    }\n  }, [props.dashboardIsEditing, props.dashboardIsPrinting]);\n  useEffect(() => {\n    document.querySelector('.dashboard-wrapper')?.scroll(0, 0);\n  }, [props.selectedId]);\n  const height = props.windowHeight - HEADERBAR_HEIGHT - getControlBarHeight(props.controlBarRows);\n  return <>\n            <DashboardsBar />\n            <DashboardVerticalOffset />\n            <div className=\"dashboard-wrapper\" style={{\n      height\n    }}>\n                <TitleBar edit={false} />\n                <FilterBar />\n                <ItemGrid edit={false} />\n            </div>\n        </>;\n};\nViewDashboard.propTypes = {\n  clearEditDashboard: PropTypes.func,\n  clearPrintDashboard: PropTypes.func,\n  controlBarRows: PropTypes.number,\n  dashboardIsEditing: PropTypes.bool,\n  dashboardIsPrinting: PropTypes.bool,\n  selectedId: PropTypes.string,\n  windowHeight: PropTypes.number\n};\n\nconst mapStateToProps = state => {\n  return {\n    dashboardIsEditing: sGetIsEditing(state),\n    dashboardIsPrinting: sGetIsPrinting(state),\n    controlBarRows: sGetControlBarUserRows(state),\n    selectedId: sGetSelectedId(state),\n    windowHeight: sGetWindowHeight(state)\n  };\n};\n\nexport default connect(mapStateToProps, {\n  clearEditDashboard: acClearEditDashboard,\n  clearPrintDashboard: acClearPrintDashboard\n})(ViewDashboard);","import React from 'react';\nimport PropTypes from 'prop-types';\nimport i18n from '@dhis2/d2-i18n';\nimport { Button, Modal, ModalContent, ModalActions, ButtonStrip, ModalTitle } from '@dhis2/ui';\nimport classes from './styles/ConfirmDeleteDialog.module.css';\nexport const ConfirmDeleteDialog = ({\n  dashboardName,\n  onDeleteConfirmed,\n  onContinueEditing,\n  open\n}) => {\n  const actions = [<Button key=\"cancel\" secondary onClick={onContinueEditing}>\n            {i18n.t('Cancel')}\n        </Button>, <Button key=\"delete\" destructive onClick={onDeleteConfirmed}>\n            {i18n.t('Delete')}\n        </Button>];\n  return open && <Modal onClose={onContinueEditing} small position=\"middle\">\n                <ModalTitle>{i18n.t('Delete dashboard')}</ModalTitle>\n                <ModalContent>\n                    <span className={classes.content}>\n                        {i18n.t('Deleting dashboard \"{{ dashboardName }}\" will remove it for all users. This action cannot be undone. Are you sure you want to permanently delete this dashboard?', {\n          dashboardName\n        })}\n                    </span>\n                </ModalContent>\n                <ModalActions>\n                    <ButtonStrip>{actions}</ButtonStrip>\n                </ModalActions>\n            </Modal>;\n};\nConfirmDeleteDialog.propTypes = {\n  dashboardName: PropTypes.string,\n  open: PropTypes.bool,\n  onContinueEditing: PropTypes.func,\n  onDeleteConfirmed: PropTypes.func\n};\nexport default ConfirmDeleteDialog;","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { Redirect } from 'react-router-dom';\nimport i18n from '@dhis2/d2-i18n';\nimport ControlBar from './ControlBar';\nimport TranslationDialog from '@dhis2/d2-ui-translation-dialog';\nimport { Button, ButtonStrip } from '@dhis2/ui';\nimport ConfirmDeleteDialog from './ConfirmDeleteDialog';\nimport { tSaveDashboard, acClearEditDashboard } from '../../actions/editDashboard';\nimport { acClearPrintDashboard } from '../../actions/printDashboard';\nimport { tDeleteDashboard, acSetDashboardDisplayName } from '../../actions/dashboards';\nimport { sGetEditDashboardRoot, sGetIsNewDashboard, sGetIsPrintPreviewView } from '../../reducers/editDashboard';\nimport { acSetPrintPreviewView, acClearPrintPreviewView } from '../../actions/editDashboard';\nimport { CONTROL_BAR_ROW_HEIGHT, MIN_ROW_COUNT, getControlBarHeight } from './controlBarDimensions';\nimport { apiFetchDashboard } from '../../api/dashboards';\nimport classes from './styles/DashboardsBar.module.css';\nconst buttonBarStyle = {\n  height: CONTROL_BAR_ROW_HEIGHT,\n  paddingTop: '15px',\n  marginLeft: '15px',\n  marginRight: '15px'\n};\nexport class EditBar extends Component {\n  state = {\n    translationDialogIsOpen: false,\n    dashboardModel: undefined,\n    confirmDeleteDialogOpen: false,\n    redirectUrl: undefined\n  };\n  onConfirmDelete = () => {\n    this.setState({\n      confirmDeleteDialogOpen: true\n    });\n  };\n  onSave = () => {\n    this.props.onSave().then(newId => {\n      this.setState({\n        redirectUrl: `/${newId}`\n      });\n    });\n  };\n  onPrintPreview = () => {\n    if (this.props.isPrintPreviewView) {\n      this.props.clearPrintPreview();\n      this.props.clearPrintDashboard();\n    } else {\n      this.props.showPrintPreview();\n    }\n  };\n  onDiscard = () => {\n    this.props.onDiscardChanges();\n    const redirectUrl = this.props.dashboardId ? `/${this.props.dashboardId}` : '/';\n    this.setState({\n      redirectUrl\n    });\n  };\n  onContinueEditing = () => {\n    this.setState({\n      confirmDeleteDialogOpen: false\n    });\n  };\n  onDeleteConfirmed = () => {\n    this.setState({\n      confirmDeleteDialogOpen: false\n    });\n    this.props.onDelete(this.props.dashboardId).then(() => {\n      this.setState({\n        redirectUrl: '/'\n      });\n    });\n  };\n  onTranslationsSaved = async translations => {\n    if (translations && translations.length) {\n      const dbLocale = await this.context.d2.currentUser.userSettings.get('keyDbLocale');\n      const translation = translations.find(t => t.locale === dbLocale && t.property === 'NAME');\n\n      if (translation && translation.value) {\n        this.props.onTranslate(this.props.dashboardId, translation.value);\n      }\n    }\n  };\n  fetchDashboardModel = () => {\n    if (this.props.dashboardId && !this.state.dashboardModel) {\n      apiFetchDashboard(this.props.dashboardId).then(dashboardModel => this.setState({\n        dashboardModel\n      }));\n    }\n  };\n\n  componentDidMount() {\n    this.fetchDashboardModel();\n  }\n\n  componentDidUpdate() {\n    this.fetchDashboardModel();\n  }\n\n  toggleTranslationDialog = () => {\n    this.setState({\n      translationDialogIsOpen: !this.state.translationDialogIsOpen\n    });\n  };\n  confirmDeleteDialog = () => this.props.deleteAccess && this.props.dashboardId ? <ConfirmDeleteDialog dashboardName={this.props.dashboardName} onDeleteConfirmed={this.onDeleteConfirmed} onContinueEditing={this.onContinueEditing} open={this.state.confirmDeleteDialogOpen} /> : null;\n  translationDialog = () => this.state.dashboardModel && this.state.dashboardModel.id ? <TranslationDialog className=\"translation-dialog\" d2={this.context.d2} open={this.state.translationDialogIsOpen} onRequestClose={this.toggleTranslationDialog} objectToTranslate={this.state.dashboardModel} fieldsToTranslate={['name', 'description']} // TODO handle messages in snackbar\n  onTranslationSaved={this.onTranslationsSaved} onTranslationError={err => console.log('translation update error', err)} /> : null;\n  renderActionButtons = () => {\n    const printPreviewText = this.props.isPrintPreviewView ? i18n.t('Exit Print preview') : i18n.t('Print preview');\n    return <div className={classes.leftControls}>\n                <ButtonStrip>\n                    <Button primary onClick={this.onSave}>\n                        {i18n.t('Save changes')}\n                    </Button>\n                    <Button onClick={this.onPrintPreview}>\n                        {printPreviewText}\n                    </Button>\n\n                    {this.props.dashboardId ? <Button onClick={this.toggleTranslationDialog}>\n                            {i18n.t('Translate')}\n                        </Button> : null}\n                    {this.props.dashboardId && this.props.deleteAccess ? <Button onClick={this.onConfirmDelete}>\n                            {i18n.t('Delete')}\n                        </Button> : null}\n                </ButtonStrip>\n            </div>;\n  };\n\n  render() {\n    if (this.state.redirectUrl) {\n      return <Redirect to={this.state.redirectUrl} />;\n    }\n\n    const {\n      updateAccess\n    } = this.props;\n    const controlBarHeight = getControlBarHeight(MIN_ROW_COUNT);\n    const discardBtnText = updateAccess ? i18n.t('Exit without saving') : i18n.t('Go to dashboards');\n    return <>\n                <ControlBar height={controlBarHeight} editMode={true}>\n                    <div style={buttonBarStyle}>\n                        {updateAccess ? this.renderActionButtons() : null}\n\n                        <div className={classes.rightControls}>\n                            <Button secondary onClick={this.onDiscard}>\n                                {discardBtnText}\n                            </Button>\n                        </div>\n                    </div>\n                </ControlBar>\n                <div className={classes.topMargin} />\n                {this.translationDialog()}\n                {this.confirmDeleteDialog()}\n            </>;\n  }\n\n}\nEditBar.propTypes = {\n  clearPrintDashboard: PropTypes.func,\n  clearPrintPreview: PropTypes.func,\n  dashboardId: PropTypes.string,\n  dashboardName: PropTypes.string,\n  deleteAccess: PropTypes.bool,\n  isPrintPreviewView: PropTypes.bool,\n  showPrintPreview: PropTypes.func,\n  updateAccess: PropTypes.bool,\n  onDelete: PropTypes.func,\n  onDiscardChanges: PropTypes.func,\n  onSave: PropTypes.func,\n  onTranslate: PropTypes.func\n};\nEditBar.contextTypes = {\n  d2: PropTypes.object\n};\n\nconst mapStateToProps = state => {\n  const dashboard = sGetEditDashboardRoot(state);\n  let deleteAccess;\n  let updateAccess;\n\n  if (sGetIsNewDashboard(state)) {\n    deleteAccess = true;\n    updateAccess = true;\n  } else {\n    updateAccess = dashboard.access ? dashboard.access.update : false;\n    deleteAccess = dashboard.access ? dashboard.access.delete : false;\n  }\n\n  return {\n    dashboardId: dashboard.id,\n    dashboardName: dashboard.name,\n    deleteAccess,\n    isPrintPreviewView: sGetIsPrintPreviewView(state),\n    updateAccess\n  };\n};\n\nconst mapDispatchToProps = dispatch => ({\n  clearPrintDashboard: () => dispatch(acClearPrintDashboard()),\n  clearPrintPreview: () => dispatch(acClearPrintPreviewView()),\n  onSave: () => dispatch(tSaveDashboard()).then(id => id),\n  onDelete: id => dispatch(tDeleteDashboard(id)),\n  onDiscardChanges: () => dispatch(acClearEditDashboard()),\n  onTranslate: (id, value) => dispatch(acSetDashboardDisplayName(id, value)),\n  showPrintPreview: () => dispatch(acSetPrintPreviewView())\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(EditBar);","import React from 'react';\nimport PropTypes from 'prop-types';\nimport i18n from '@dhis2/d2-i18n';\nimport { a4LandscapeWidthPx } from '../ItemGrid/gridUtil';\nimport classes from './styles/PrintInfo.module.css';\n\nconst PrintInfo = ({\n  isLayout\n}) => {\n  const maxWidth = a4LandscapeWidthPx < window.innerWidth ? a4LandscapeWidthPx : window.innerWidth;\n  const infoHeader = isLayout ? i18n.t('dashboard layout') : i18n.t('one item per page');\n  return <div className={classes.infoWrapper}>\n            <p className={classes.infoHeader}>\n                {`${i18n.t('Print Preview')}: ${infoHeader}`}\n            </p>\n            <div style={{\n      maxWidth\n    }}>\n                <p className={classes.info}>\n                    {`${i18n.t('For best print results')}:`}\n                </p>\n                <div className={classes.info}>\n                    <ul className={classes.infoList}>\n                        <li>{i18n.t('Use Chrome or Edge web browser')}</li>\n                        <li>\n                            {i18n.t('Wait for all dashboard items to load before printing')}\n                        </li>\n                        <li>\n                            {i18n.t('Use A4 landscape paper size and default margin settings in the browser print dialog')}\n                        </li>\n                    </ul>\n                </div>\n            </div>\n            <hr className={classes.divider} />\n        </div>;\n};\n\nPrintInfo.propTypes = {\n  isLayout: PropTypes.bool\n};\nexport default PrintInfo;","import React from 'react';\nimport { colors } from '@dhis2/ui';\n\nconst LessHorizontalIcon = () => <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" fill={colors.grey600} viewBox=\"0 0 24 24\">\n        <path d=\"m13.2928932 6.29289322c.3905243-.39052429 1.0236893-.39052429 1.4142136 0 .3604839.36048396.3882135.92771502.0831886 1.32000622l-.0831886.09420734-4.2921068 4.29289322 4.2921068 4.2928932c.3604839.360484.3882135.927715.0831886 1.3200062l-.0831886.0942074c-.360484.3604839-.927715.3882135-1.3200062.0831886l-.0942074-.0831886-4.99999998-5c-.36048396-.360484-.3882135-.927715-.08318861-1.3200062l.08318861-.0942074z\" />\n    </svg>;\n\nexport default LessHorizontalIcon;","import React from 'react';\nimport PropTypes from 'prop-types';\nimport i18n from '@dhis2/d2-i18n';\nimport { Button } from '@dhis2/ui';\nimport { Link } from 'react-router-dom';\nimport LessHorizontalIcon from '../../icons/LessHorizontal';\nimport { a4LandscapeWidthPx } from '../ItemGrid/gridUtil';\nimport classes from './styles/PrintActionsBar.module.css'; // 42px set in the module css file\n\nexport const PRINT_ACTIONS_BAR_HEIGHT = 42;\n\nconst PrintActionsBar = ({\n  id\n}) => {\n  const width = a4LandscapeWidthPx < window.innerWidth ? a4LandscapeWidthPx : window.innerWidth;\n  return <>\n            <div className={classes.container}>\n                <div className={classes.inner} style={{\n        width\n      }}>\n                    <Link className={classes.link} to={`/${id}`}>\n                        <Button>\n                            <LessHorizontalIcon />\n                            {i18n.t('Exit print preview')}\n                        </Button>\n                    </Link>\n                    <Button onClick={window.print}>{i18n.t('Print')}</Button>\n                </div>\n            </div>\n            <div className={classes.topMargin} />\n        </>;\n};\n\nPrintActionsBar.propTypes = {\n  id: PropTypes.string\n};\nexport default PrintActionsBar;","import sortBy from 'lodash/sortBy';\nimport { orArray } from './util';\nimport { itemTypeMap } from './itemTypes';\nexport const getTransformYPx = elStyle => {\n  if (!elStyle || !elStyle.transform) {\n    return null;\n  } // find valid transforms - those with y pixels\n  // the code is expecting the transform prop to\n  // look like:  translate(10px, 300px)\n\n\n  const transformY = elStyle.transform.split(' ')[1]?.match(/(\\d+)px/);\n\n  if (transformY) {\n    return parseInt(transformY[1]);\n  } else {\n    return null;\n  }\n};\nexport const getDomGridItemsSortedByYPos = elements => {\n  const types = Object.keys(itemTypeMap);\n  const elementsWithBoundingRect = orArray(elements).map(el => {\n    const type = Array.from(el.classList).find(className => types.indexOf(className) > -1);\n    const rect = el.getBoundingClientRect();\n    const y = getTransformYPx(el.style) || parseInt(rect.y);\n    return {\n      type,\n      classList: el.classList,\n      bottomY: y + parseInt(rect.height),\n      el\n    };\n  });\n  return sortBy(elementsWithBoundingRect, ['bottomY']);\n};","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport i18n from '@dhis2/d2-i18n';\nimport sortBy from 'lodash/sortBy';\nimport ReactGridLayout from 'react-grid-layout';\nimport { Layer, CenteredContent, CircularLoader } from '@dhis2/ui';\nimport cx from 'classnames';\nimport { Item } from '../Item/Item';\nimport NoContentMessage from '../../widgets/NoContentMessage';\nimport { acUpdatePrintDashboardLayout } from '../../actions/printDashboard';\nimport { sGetSelectedIsLoading } from '../../reducers/selected';\nimport { sGetPrintDashboardRoot, sGetPrintDashboardItems } from '../../reducers/printDashboard';\nimport { sGetIsEditing } from '../../reducers/editDashboard';\nimport { GRID_ROW_HEIGHT, GRID_COMPACT_TYPE, MARGIN, getGridColumns, hasShape, a4LandscapeWidthPx } from './gridUtil';\nimport { getDomGridItemsSortedByYPos, getTransformYPx } from '../../modules/printUtils';\nimport { PRINT_LAYOUT } from '../Dashboard/dashboardModes';\nimport { PAGEBREAK } from '../../modules/itemTypes';\nimport 'react-grid-layout/css/styles.css';\nimport 'react-resizable/css/styles.css';\nimport './ItemGrid.css'; // this is set in the .dashboard-item-content css\n\nexport const ITEM_CONTENT_PADDING_BOTTOM = 4;\nexport class PrintLayoutItemGrid extends Component {\n  onLayoutChange = newLayout => {\n    this.props.updateDashboardLayout(newLayout);\n  };\n  isFirstPageBreak = item => {\n    if (item.type !== PAGEBREAK) {\n      return false;\n    }\n\n    const pageBreaks = this.props.dashboardItems.filter(i => i.type === PAGEBREAK);\n    const sortedPageBreaks = sortBy(pageBreaks, ['y']);\n    return item.y === sortedPageBreaks[0].y;\n  };\n  getItemComponent = item => {\n    // the first-page-break class is used in Edit print preview\n    const itemClassNames = cx('print', 'layout', `${item.type}`, {\n      'first-page-break': this.props.isEditing && this.isFirstPageBreak(item),\n      shortened: !!item.shortened\n    });\n    return <div key={item.i} className={itemClassNames}>\n                <Item item={item} dashboardMode={PRINT_LAYOUT} />\n            </div>;\n  };\n  getItemComponents = items => items.map(item => this.getItemComponent(item));\n\n  hideExtraPageBreaks() {\n    const sortedElements = getDomGridItemsSortedByYPos(Array.from(document.querySelectorAll('.react-grid-item')));\n    let pageBreakBottom = 0;\n    let lastItemBottom = 0;\n    let foundNonPageBreak = false;\n\n    for (let i = sortedElements.length - 1; i >= 0; --i) {\n      const item = sortedElements[i];\n\n      if (item.type === PAGEBREAK) {\n        if (!foundNonPageBreak) {\n          item.el.classList.add('removed');\n        } else {\n          pageBreakBottom = item.bottomY;\n          break;\n        }\n      } else {\n        foundNonPageBreak = true;\n        const thisItemBottom = item.bottomY;\n\n        if (thisItemBottom > lastItemBottom) {\n          lastItemBottom = thisItemBottom;\n        }\n      }\n    }\n\n    const pageHeight = 720;\n    const gridElement = document.querySelector('.react-grid-layout'); // the last page break is before the last item(s) so\n    // maxHeight is one page beyond the last page break\n\n    const maxHeight = pageBreakBottom + pageHeight;\n\n    if (gridElement) {\n      gridElement.style.height = `${maxHeight}px`;\n    }\n\n    if (this.props.isEditing) {\n      //scroll to below the title page - which is middle of the first pagebreak\n      const firstBreak = document.querySelector('.first-page-break');\n\n      if (firstBreak && firstBreak.style && firstBreak.style.transform) {\n        const yPos = getTransformYPx(firstBreak.style);\n        const scrollArea = document.querySelector('.scroll-area');\n        scrollArea && scrollArea.scroll(0, yPos + 50);\n      }\n    }\n  }\n\n  componentDidMount() {\n    this.hideExtraPageBreaks();\n  }\n\n  componentDidUpdate() {\n    this.hideExtraPageBreaks();\n  }\n\n  render() {\n    const {\n      isLoading,\n      dashboardItems\n    } = this.props;\n\n    if (!isLoading && !dashboardItems.length) {\n      return <NoContentMessage text={i18n.t('There are no items on this dashboard')} />;\n    }\n\n    const width = a4LandscapeWidthPx < window.innerWidth ? a4LandscapeWidthPx : window.innerWidth;\n    return <div className=\"grid-wrapper\">\n                {isLoading ? <Layer translucent>\n                        <CenteredContent>\n                            <CircularLoader />\n                        </CenteredContent>\n                    </Layer> : null}\n                <ReactGridLayout onLayoutChange={this.onLayoutChange} className=\"layout\" layout={dashboardItems} margin={MARGIN} cols={getGridColumns()} rowHeight={GRID_ROW_HEIGHT} width={width} compactType={GRID_COMPACT_TYPE} isDraggable={false} isResizable={false} draggableCancel=\"input,textarea\">\n                    {this.getItemComponents(dashboardItems)}\n                </ReactGridLayout>\n            </div>;\n  }\n\n}\nPrintLayoutItemGrid.propTypes = {\n  dashboardItems: PropTypes.array,\n  isEditing: PropTypes.bool,\n  isLoading: PropTypes.bool,\n  updateDashboardLayout: PropTypes.func\n};\nPrintLayoutItemGrid.defaultProps = {\n  dashboardItems: []\n};\n\nconst mapStateToProps = state => {\n  const selectedDashboard = sGetPrintDashboardRoot(state);\n  return {\n    isLoading: sGetSelectedIsLoading(state) || !selectedDashboard,\n    dashboardItems: sGetPrintDashboardItems(state).filter(hasShape),\n    isEditing: sGetIsEditing(state)\n  };\n};\n\nexport default connect(mapStateToProps, {\n  updateDashboardLayout: acUpdatePrintDashboardLayout\n})(PrintLayoutItemGrid);","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { spacers } from '@dhis2/ui';\nimport cx from 'classnames';\nimport PrintInfo from './PrintInfo';\nimport PrintActionsBar from './PrintActionsBar';\nimport PrintLayoutItemGrid from '../ItemGrid/PrintLayoutItemGrid';\nimport { acSetPrintDashboard, acAddPrintDashboardItem, acUpdatePrintDashboardItem } from '../../actions/printDashboard';\nimport { sGetSelectedId } from '../../reducers/selected';\nimport { sGetWindowHeight } from '../../reducers/windowHeight';\nimport { sGetEditDashboardRoot, sGetEditDashboardItems } from '../../reducers/editDashboard';\nimport { sGetDashboardById, sGetDashboardItems } from '../../reducers/dashboards';\nimport { PAGEBREAK, PRINT_TITLE_PAGE } from '../../modules/itemTypes';\nimport { a4LandscapeWidthPx, MAX_ITEM_GRID_HEIGHT } from '../ItemGrid/gridUtil';\nimport { getControlBarHeight, HEADERBAR_HEIGHT } from '../ControlBar/controlBarDimensions';\nimport { PRINT_ACTIONS_BAR_HEIGHT } from './PrintActionsBar';\nimport { DRAG_HANDLE_HEIGHT } from '../ControlBar/ControlBar';\nimport classes from './styles/PrintLayoutDashboard.module.css';\nimport './styles/print.css';\nimport './styles/print-layout.css';\nconst EDIT_BAR_HEIGHT = getControlBarHeight(1) + DRAG_HANDLE_HEIGHT;\n\nconst isLeapPage = n => {\n  // pages 5,9,13,17,21,25,29... are leap pages\n  let x = 0;\n  const startPage = 1;\n\n  const getMultiple = factor => startPage + 4 * factor;\n\n  let multiple = getMultiple(0);\n  let isLeapPage = false;\n\n  while (multiple < n) {\n    multiple = getMultiple(x);\n    ++x;\n\n    if (multiple === n) {\n      isLeapPage = true;\n      break;\n    }\n  }\n\n  return isLeapPage;\n};\n\nconst addPageBreaks = ({\n  items,\n  addDashboardItem\n}) => {\n  // add enough page breaks so that each item could\n  // be put on its own page. Due to the react-grid-layout\n  // unit system, we have to estimate roughly the size of each\n  // page. At regular intervals add a unit, like a leap year\n  let yPos = 0;\n  const yPosList = [];\n\n  for (let pageNum = 1; pageNum <= items.length; ++pageNum) {\n    if (pageNum === 1) {\n      yPos += 35;\n    } else if (isLeapPage(pageNum)) {\n      yPos += 40;\n    } else {\n      yPos += 39;\n    }\n\n    yPosList.push(yPos);\n  }\n\n  for (let i = 0; i < items.length; ++i) {\n    addDashboardItem({\n      type: PAGEBREAK,\n      yPos: yPosList[i]\n    });\n  }\n};\n\nexport class PrintLayoutDashboard extends Component {\n  state = {\n    initialized: false\n  };\n  initPrintLayoutDashboard = () => {\n    if (this.props.dashboard) {\n      this.setState({\n        initialized: true\n      });\n      this.props.setPrintDashboard(this.props.dashboard, this.props.items); // If any items are taller than one page, reduce it to one\n      // page (react-grid-layout units)\n\n      this.props.items.forEach(item => {\n        if (item.h > MAX_ITEM_GRID_HEIGHT) {\n          item.shortened = true;\n          this.props.updateDashboardItem(Object.assign({}, item, {\n            h: MAX_ITEM_GRID_HEIGHT\n          }));\n        }\n      });\n      addPageBreaks(this.props);\n      this.props.addDashboardItem({\n        type: PRINT_TITLE_PAGE,\n        isOneItemPerPage: false\n      });\n    }\n  };\n\n  componentDidMount() {\n    this.initPrintLayoutDashboard();\n  }\n\n  componentDidUpdate() {\n    if (!this.state.initialized) {\n      this.initPrintLayoutDashboard();\n    }\n  }\n\n  getWrapperStyle = () => {\n    return this.props.fromEdit ? {\n      paddingTop: spacers.dp24,\n      height: this.props.windowHeight - EDIT_BAR_HEIGHT - HEADERBAR_HEIGHT\n    } : {\n      height: this.props.windowHeight - PRINT_ACTIONS_BAR_HEIGHT\n    };\n  };\n\n  render() {\n    return <>\n                {!this.props.fromEdit && <PrintActionsBar id={this.props.dashboard.id} />}\n                <div className={cx(classes.wrapper, 'scroll-area')} style={this.getWrapperStyle()}>\n                    {!this.props.fromEdit && <PrintInfo isLayout={true} />}\n                    <div className={classes.pageOuter} style={{\n          width: a4LandscapeWidthPx\n        }}>\n                        <PrintLayoutItemGrid />\n                    </div>\n                </div>\n            </>;\n  }\n\n}\nPrintLayoutDashboard.propTypes = {\n  addDashboardItem: PropTypes.func,\n  dashboard: PropTypes.object,\n  fromEdit: PropTypes.bool,\n  items: PropTypes.array,\n  setPrintDashboard: PropTypes.func,\n  updateDashboardItem: PropTypes.func,\n  windowHeight: PropTypes.number\n};\n\nconst mapStateToProps = (state, ownProps) => {\n  const id = sGetSelectedId(state);\n\n  if (ownProps.fromEdit) {\n    const dashboard = sGetEditDashboardRoot(state);\n    return {\n      dashboard,\n      id,\n      items: sGetEditDashboardItems(state),\n      windowHeight: sGetWindowHeight(state)\n    };\n  }\n\n  const dashboard = id ? sGetDashboardById(state, id) : null;\n  return {\n    dashboard,\n    id,\n    items: sGetDashboardItems(state),\n    windowHeight: sGetWindowHeight(state)\n  };\n};\n\nexport default connect(mapStateToProps, {\n  setPrintDashboard: acSetPrintDashboard,\n  addDashboardItem: acAddPrintDashboardItem,\n  updateDashboardItem: acUpdatePrintDashboardItem\n})(PrintLayoutDashboard);","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport i18n from '@dhis2/d2-i18n';\nimport PropTypes from 'prop-types';\nimport TitleBar from '../TitleBar/TitleBar';\nimport ItemGrid from '../ItemGrid/ItemGrid';\nimport EditBar from '../ControlBar/EditBar';\nimport LayoutPrintPreview from './PrintLayoutDashboard';\nimport NoContentMessage from '../../widgets/NoContentMessage';\nimport { acSetEditDashboard } from '../../actions/editDashboard';\nimport { sGetWindowHeight } from '../../reducers/windowHeight';\nimport { sGetSelectedId } from '../../reducers/selected';\nimport { sGetDashboardById, sGetDashboardItems } from '../../reducers/dashboards';\nimport { sGetIsPrintPreviewView } from '../../reducers/editDashboard';\nimport { getControlBarHeight, HEADERBAR_HEIGHT } from '../ControlBar/controlBarDimensions';\nexport class EditDashboard extends Component {\n  state = {\n    initialized: false\n  };\n  initEditDashboard = () => {\n    if (this.props.dashboard) {\n      this.setState({\n        initialized: true\n      });\n      this.props.setEditDashboard(this.props.dashboard, this.props.items);\n    }\n  };\n\n  componentDidMount() {\n    this.initEditDashboard();\n  }\n\n  componentDidUpdate() {\n    if (!this.state.initialized) {\n      this.initEditDashboard();\n    }\n  }\n\n  renderGrid = () => {\n    if (this.props.isPrintPreviewView) {\n      return <LayoutPrintPreview fromEdit={true} />;\n    }\n\n    const height = this.props.windowHeight - HEADERBAR_HEIGHT - getControlBarHeight(1);\n    return <div className=\"dashboard-wrapper\" style={{\n      height\n    }}>\n                <TitleBar edit={true} />\n                <ItemGrid edit={true} />\n            </div>;\n  };\n\n  render() {\n    return <>\n                <EditBar />\n                {this.props.updateAccess ? this.renderGrid() : <NoContentMessage text={i18n.t('No access')} />}\n            </>;\n  }\n\n}\nEditDashboard.propTypes = {\n  dashboard: PropTypes.object,\n  isPrintPreviewView: PropTypes.bool,\n  items: PropTypes.array,\n  setEditDashboard: PropTypes.func,\n  updateAccess: PropTypes.bool,\n  windowHeight: PropTypes.number\n};\n\nconst mapStateToProps = state => {\n  const id = sGetSelectedId(state);\n  const dashboard = id ? sGetDashboardById(state, id) : null;\n  const updateAccess = dashboard && dashboard.access ? dashboard.access.update : false;\n  return {\n    dashboard,\n    updateAccess,\n    items: sGetDashboardItems(state),\n    isPrintPreviewView: sGetIsPrintPreviewView(state),\n    windowHeight: sGetWindowHeight(state)\n  };\n};\n\nexport default connect(mapStateToProps, {\n  setEditDashboard: acSetEditDashboard\n})(EditDashboard);","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport EditBar from '../ControlBar/EditBar';\nimport TitleBar from '../TitleBar/TitleBar';\nimport ItemGrid from '../ItemGrid/ItemGrid';\nimport LayoutPrintPreview from './PrintLayoutDashboard';\nimport { acSetEditNewDashboard } from '../../actions/editDashboard';\nimport { sGetIsPrintPreviewView } from '../../reducers/editDashboard';\nimport { sGetWindowHeight } from '../../reducers/windowHeight';\nimport { getControlBarHeight, HEADERBAR_HEIGHT } from '../ControlBar/controlBarDimensions';\n\nclass NewDashboard extends Component {\n  componentDidMount() {\n    this.props.setNewDashboard();\n  }\n\n  render() {\n    const height = this.props.windowHeight - HEADERBAR_HEIGHT - getControlBarHeight(1);\n    return <>\n                <EditBar />\n                {this.props.isPrintPreviewView ? <LayoutPrintPreview fromEdit={true} /> : <div className=\"dashboard-wrapper\" style={{\n        height\n      }}>\n                        <TitleBar edit={true} />\n                        <ItemGrid edit={true} />\n                    </div>}\n            </>;\n  }\n\n}\n\nNewDashboard.propTypes = {\n  isPrintPreviewView: PropTypes.bool,\n  setNewDashboard: PropTypes.func,\n  windowHeight: PropTypes.number\n};\n\nconst mapStateToProps = state => ({\n  isPrintPreviewView: sGetIsPrintPreviewView(state),\n  windowHeight: sGetWindowHeight(state)\n});\n\nexport default connect(mapStateToProps, {\n  setNewDashboard: acSetEditNewDashboard\n})(NewDashboard);","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport i18n from '@dhis2/d2-i18n';\nimport ReactGridLayout from 'react-grid-layout';\nimport { Layer, CenteredContent, CircularLoader } from '@dhis2/ui';\nimport cx from 'classnames';\nimport { Item } from '../Item/Item';\nimport NoContentMessage from '../../widgets/NoContentMessage';\nimport { PRINT } from '../Dashboard/dashboardModes';\nimport { sGetSelectedIsLoading } from '../../reducers/selected';\nimport { sGetPrintDashboardRoot, sGetPrintDashboardItems } from '../../reducers/printDashboard';\nimport { GRID_ROW_HEIGHT, GRID_COMPACT_TYPE, MARGIN, getGridColumns, hasShape, a4LandscapeWidthPx } from './gridUtil';\nimport { orArray } from '../../modules/util';\nimport 'react-grid-layout/css/styles.css';\nimport './ItemGrid.css';\nexport class PrintItemGrid extends Component {\n  getItemComponent = item => <div key={item.i} className={cx(item.type, 'print', 'oipp')}>\n            <Item item={item} dashboardMode={PRINT} />\n        </div>;\n  getItemComponents = items => items.map(item => this.getItemComponent(item));\n\n  render() {\n    const {\n      isLoading,\n      dashboardItems\n    } = this.props;\n\n    if (!isLoading && !dashboardItems.length) {\n      return <NoContentMessage text={i18n.t('There are no items on this dashboard')} />;\n    }\n\n    const width = a4LandscapeWidthPx < window.innerWidth ? a4LandscapeWidthPx : window.innerWidth;\n    return <>\n                {isLoading ? <Layer translucent>\n                        <CenteredContent>\n                            <CircularLoader />\n                        </CenteredContent>\n                    </Layer> : null}\n                <ReactGridLayout className=\"layout print\" layout={dashboardItems} margin={MARGIN} cols={getGridColumns()} rowHeight={GRID_ROW_HEIGHT} width={width} compactType={GRID_COMPACT_TYPE} isDraggable={false} isResizable={false} draggableCancel=\"input,textarea\">\n                    {this.getItemComponents(dashboardItems)}\n                </ReactGridLayout>\n            </>;\n  }\n\n}\nPrintItemGrid.propTypes = {\n  dashboardItems: PropTypes.array,\n  isLoading: PropTypes.bool\n};\nPrintItemGrid.defaultProps = {\n  dashboardItems: []\n};\n\nconst mapStateToProps = state => {\n  const selectedDashboard = sGetPrintDashboardRoot(state);\n  return {\n    isLoading: sGetSelectedIsLoading(state) || !selectedDashboard,\n    dashboardItems: orArray(sGetPrintDashboardItems(state)).filter(hasShape)\n  };\n};\n\nexport default connect(mapStateToProps)(PrintItemGrid);","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport sortBy from 'lodash/sortBy';\nimport PrintInfo from './PrintInfo';\nimport PrintActionsBar from './PrintActionsBar';\nimport PrintItemGrid from '../ItemGrid/PrintItemGrid';\nimport { acSetPrintDashboard, acAddPrintDashboardItem, acRemovePrintDashboardItem, acUpdatePrintDashboardItem } from '../../actions/printDashboard';\nimport { sGetSelectedId } from '../../reducers/selected';\nimport { sGetWindowHeight } from '../../reducers/windowHeight';\nimport { sGetDashboardById, sGetDashboardItems } from '../../reducers/dashboards';\nimport { PAGEBREAK, PRINT_TITLE_PAGE, SPACER } from '../../modules/itemTypes';\nimport { a4LandscapeWidthPx, MAX_ITEM_GRID_HEIGHT_OIPP, MAX_ITEM_GRID_WIDTH_OIPP } from '../ItemGrid/gridUtil';\nimport { PRINT_ACTIONS_BAR_HEIGHT } from './PrintActionsBar';\nimport classes from './styles/PrintDashboard.module.css';\nimport './styles/print.css';\nimport './styles/print-oipp.css';\nexport class PrintDashboard extends Component {\n  state = {\n    initialized: false\n  };\n  initPrintDashboard = () => {\n    if (this.props.dashboard) {\n      this.setState({\n        initialized: true\n      }); //sort the items by Y pos so they print in order of top to bottom\n\n      const sortedItems = sortBy(this.props.items, ['y', 'x']);\n      this.props.setPrintDashboard(this.props.dashboard, sortedItems); // remove spacers - don't want empty pages\n\n      let spacerCount = 0;\n      this.props.items.forEach(item => {\n        if (item.type === SPACER) {\n          spacerCount += 1;\n          this.props.removeDashboardItem(item.id);\n        }\n      }); // Resize the items to the full page size\n\n      this.props.items.forEach(item => {\n        this.props.updateDashboardItem(Object.assign({}, item, {\n          w: MAX_ITEM_GRID_WIDTH_OIPP,\n          h: MAX_ITEM_GRID_HEIGHT_OIPP\n        }));\n      }); // insert page breaks into the document flow to create the \"pages\"\n      // when previewing the print\n\n      for (let i = 0; i < (this.props.items.length - spacerCount) * 2; i += 2) {\n        this.props.addDashboardItem({\n          type: PAGEBREAK,\n          position: i,\n          isStatic: false\n        });\n      }\n\n      this.props.addDashboardItem({\n        type: PRINT_TITLE_PAGE,\n        isOneItemPerPage: true\n      });\n    }\n  };\n\n  componentDidMount() {\n    this.initPrintDashboard();\n  }\n\n  componentDidUpdate() {\n    if (!this.state.initialized) {\n      this.initPrintDashboard();\n    }\n  }\n\n  render() {\n    const height = this.props.windowHeight - PRINT_ACTIONS_BAR_HEIGHT;\n    return <>\n                <PrintActionsBar id={this.props.dashboard.id} />\n                <div className={classes.wrapper} style={{\n        height\n      }}>\n                    <PrintInfo isLayout={false} />\n                    <div className={classes.pageOuter} style={{\n          width: a4LandscapeWidthPx\n        }}>\n                        <PrintItemGrid />\n                    </div>\n                </div>\n            </>;\n  }\n\n}\nPrintDashboard.propTypes = {\n  addDashboardItem: PropTypes.func,\n  dashboard: PropTypes.object,\n  items: PropTypes.array,\n  removeDashboardItem: PropTypes.func,\n  setPrintDashboard: PropTypes.func,\n  updateDashboardItem: PropTypes.func,\n  windowHeight: PropTypes.number\n};\n\nconst mapStateToProps = state => {\n  const id = sGetSelectedId(state);\n  const dashboard = id ? sGetDashboardById(state, id) : null;\n  return {\n    dashboard,\n    id,\n    items: sGetDashboardItems(state),\n    windowHeight: sGetWindowHeight(state)\n  };\n};\n\nexport default connect(mapStateToProps, {\n  setPrintDashboard: acSetPrintDashboard,\n  addDashboardItem: acAddPrintDashboardItem,\n  removeDashboardItem: acRemovePrintDashboardItem,\n  updateDashboardItem: acUpdatePrintDashboardItem\n})(PrintDashboard);","import { SET_WINDOW_HEIGHT } from '../reducers/windowHeight';\nexport const acSetWindowHeight = value => ({\n  type: SET_WINDOW_HEIGHT,\n  value\n});","import React, { useEffect } from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport isEmpty from 'lodash/isEmpty';\nimport i18n from '@dhis2/d2-i18n';\nimport { Layer, CenteredContent, CircularLoader } from '@dhis2/ui';\nimport debounce from 'lodash/debounce';\nimport DashboardsBar from '../ControlBar/DashboardsBar';\nimport DashboardVerticalOffset from './DashboardVerticalOffset';\nimport NoContentMessage from '../../widgets/NoContentMessage';\nimport ViewDashboard from './ViewDashboard';\nimport EditDashboard from './EditDashboard';\nimport NewDashboard from './NewDashboard';\nimport PrintDashboard from './PrintDashboard';\nimport PrintLayoutDashboard from './PrintLayoutDashboard';\nimport { tSelectDashboard } from '../../actions/dashboards';\nimport { acSetWindowHeight } from '../../actions/windowHeight';\nimport { sDashboardsIsFetching, sGetAllDashboards } from '../../reducers/dashboards';\nimport { sGetSelectedId, NON_EXISTING_DASHBOARD_ID } from '../../reducers/selected';\nimport { EDIT, NEW, VIEW, PRINT, PRINT_LAYOUT, isPrintMode } from './dashboardModes';\n\nconst setHeaderbarVisibility = mode => {\n  const header = document.getElementsByTagName('header')[0];\n\n  if (isPrintMode(mode)) {\n    header.classList.add('hidden');\n  } else {\n    header.classList.remove('hidden');\n  }\n};\n\nconst dashboardMap = {\n  [VIEW]: <ViewDashboard />,\n  [EDIT]: <EditDashboard />,\n  [NEW]: <NewDashboard />,\n  [PRINT]: <PrintDashboard />,\n  [PRINT_LAYOUT]: <PrintLayoutDashboard />\n};\nexport const Dashboard = ({\n  id,\n  mode,\n  dashboardsLoaded,\n  dashboardsIsEmpty,\n  routeId,\n  selectDashboard,\n  setWindowHeight\n}) => {\n  useEffect(() => {\n    setHeaderbarVisibility(mode);\n  }, [mode]);\n  useEffect(() => {\n    if (dashboardsLoaded && !dashboardsIsEmpty) {\n      selectDashboard(routeId);\n    }\n  }, [dashboardsLoaded, dashboardsIsEmpty, routeId]);\n  useEffect(() => {\n    const onResize = debounce(() => setWindowHeight(window.innerHeight), 300);\n    window.addEventListener('resize', onResize);\n    return () => {\n      window.removeEventListener('resize', onResize);\n    };\n  }, []);\n\n  if (!dashboardsLoaded || id === null) {\n    return <Layer translucent>\n                <CenteredContent>\n                    <CircularLoader />\n                </CenteredContent>\n            </Layer>;\n  }\n\n  if (mode === NEW) {\n    return dashboardMap[mode];\n  }\n\n  if (dashboardsIsEmpty) {\n    return <>\n                <DashboardsBar />\n                <DashboardVerticalOffset />\n                <NoContentMessage text={i18n.t('No dashboards found. Use the + button to create a new dashboard.')} />\n            </>;\n  }\n\n  if (id === NON_EXISTING_DASHBOARD_ID) {\n    return <>\n                <DashboardsBar />\n                <DashboardVerticalOffset />\n                <NoContentMessage text={i18n.t('Requested dashboard not found')} />\n            </>;\n  }\n\n  return dashboardMap[mode];\n};\nDashboard.propTypes = {\n  dashboardsIsEmpty: PropTypes.bool,\n  dashboardsLoaded: PropTypes.bool,\n  id: PropTypes.string,\n  match: PropTypes.object,\n  // provided by the react-router-dom\n  mode: PropTypes.string,\n  routeId: PropTypes.string,\n  selectDashboard: PropTypes.func,\n  setWindowHeight: PropTypes.func\n};\n\nconst mapStateToProps = (state, ownProps) => {\n  const dashboards = sGetAllDashboards(state);\n  return {\n    dashboardsIsEmpty: isEmpty(dashboards),\n    dashboardsLoaded: !sDashboardsIsFetching(state),\n    id: sGetSelectedId(state),\n    routeId: ownProps.match?.params?.dashboardId || null\n  };\n};\n\nexport default connect(mapStateToProps, {\n  selectDashboard: tSelectDashboard,\n  setWindowHeight: acSetWindowHeight\n})(Dashboard);","import React, { Component } from 'react';\nimport { HashRouter as Router, Route, Switch } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport i18n from '@dhis2/d2-i18n';\nimport { CssVariables } from '@dhis2/ui';\nimport { EDIT, VIEW, NEW, PRINT, PRINT_LAYOUT } from './Dashboard/dashboardModes';\nimport { acReceivedUser } from '../actions/user';\nimport { tFetchDashboards } from '../actions/dashboards';\nimport { tSetControlBarRows } from '../actions/controlBar';\nimport { tSetShowDescription } from '../actions/selected';\nimport { tSetDimensions } from '../actions/dimensions';\nimport Dashboard from './Dashboard/Dashboard';\nimport SnackbarMessage from './SnackbarMessage/SnackbarMessage';\nimport './App.css';\nexport class App extends Component {\n  componentDidMount() {\n    this.props.setCurrentUser(this.props.d2.currentUser);\n    this.props.fetchDashboards();\n    this.props.setControlBarRows();\n    this.props.setShowDescription();\n    this.props.setDimensions(this.props.d2);\n  }\n\n  getChildContext() {\n    return {\n      baseUrl: this.props.baseUrl,\n      i18n,\n      d2: this.props.d2\n    };\n  }\n\n  render() {\n    return <>\n                <CssVariables colors spacers />\n                <Router>\n                    <Switch>\n                        <Route exact path=\"/\" render={props => <Dashboard {...props} mode={VIEW} />} />\n                        <Route exact path=\"/new\" render={props => <Dashboard {...props} mode={NEW} />} />\n                        <Route exact path=\"/:dashboardId\" render={props => <Dashboard {...props} mode={VIEW} />} />\n                        <Route exact path=\"/:dashboardId/edit\" render={props => <Dashboard {...props} mode={EDIT} />} />\n                        <Route exact path=\"/:dashboardId/printoipp\" render={props => <Dashboard {...props} mode={PRINT} />} />\n                        <Route exact path=\"/:dashboardId/printlayout\" render={props => <Dashboard {...props} mode={PRINT_LAYOUT} />} />\n                    </Switch>\n                </Router>\n                <SnackbarMessage />\n            </>;\n  }\n\n}\nApp.propTypes = {\n  fetchDashboards: PropTypes.func.isRequired,\n  setControlBarRows: PropTypes.func.isRequired,\n  setCurrentUser: PropTypes.func.isRequired,\n  setDimensions: PropTypes.func.isRequired,\n  setShowDescription: PropTypes.func.isRequired,\n  baseUrl: PropTypes.string,\n  d2: PropTypes.object\n};\nApp.childContextTypes = {\n  baseUrl: PropTypes.string,\n  i18n: PropTypes.object,\n  d2: PropTypes.object\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    fetchDashboards: () => dispatch(tFetchDashboards()),\n    setControlBarRows: () => dispatch(tSetControlBarRows()),\n    setCurrentUser: currentUser => dispatch(acReceivedUser(currentUser)),\n    setDimensions: d2 => dispatch(tSetDimensions(d2)),\n    setShowDescription: () => dispatch(tSetShowDescription())\n  };\n};\n\nexport default connect(null, mapDispatchToProps)(App);","import { RECEIVED_USER } from '../reducers/user';\nexport const acReceivedUser = value => ({\n  type: RECEIVED_USER,\n  value\n});","/** @module reducers/selected */\nimport { validateReducer } from '../modules/util';\nexport const SET_STYLE = 'SET_STYLE';\nexport const DEFAULT_STATE_STYLE = 'LIST';\n/**\n * Reducer functions that computes and returns the new state based on the given action\n * @function\n * @param {Object} state The current state\n * @param {Object} action The action to be evaluated\n */\n\nconst style = (state = DEFAULT_STATE_STYLE, action) => {\n  switch (action.type) {\n    case SET_STYLE:\n      return validateReducer(action.value, DEFAULT_STATE_STYLE);\n\n    default:\n      return state;\n  }\n};\n\nexport default style;\n/**\n * Selectors that point to specific props in the state object\n * @function\n * @param {Object} state\n * @returns {Object}\n */\n\nexport const sGetStyleRoot = state => state.style;","import { combineReducers } from 'redux';\nimport arraySort from 'd2-utilizr/lib/arraySort';\nimport dashboards, { sGetDashboardsRoot } from './dashboards';\nimport selected from './selected';\nimport dashboardsFilter, { ownerData, sGetFilterName, sGetFilterOrder, sGetFilterOwner } from './dashboardsFilter';\nimport controlBar from './controlBar';\nimport visualizations from './visualizations';\nimport editDashboard from './editDashboard';\nimport printDashboard from './printDashboard';\nimport messages from './messages';\nimport user from './user';\nimport snackbar from './snackbar';\nimport itemFilters from './itemFilters';\nimport style from './style';\nimport dimensions from './dimensions';\nimport settings from './settings';\nimport activeModalDimension from './activeModalDimension';\nimport windowHeight from './windowHeight';\nconst USER = 'system'; // Reducers\n\nexport default combineReducers({\n  dashboards,\n  selected,\n  dashboardsFilter,\n  controlBar,\n  visualizations,\n  messages,\n  user,\n  editDashboard,\n  printDashboard,\n  itemFilters,\n  style,\n  snackbar,\n  dimensions,\n  settings,\n  activeModalDimension,\n  windowHeight\n}); // Map constants to data\n\nconst mapConstToData = {\n  NAME: 'name',\n  ITEMS: 'numberOfItems',\n  CREATED: 'created',\n  OWNER: 'owner'\n}; // Selectors\n// Filter dashboards by name\n\nexport const sFilterDashboardsByName = (dashboards, filter) => dashboards.filter(d => d.displayName.toLowerCase().includes(filter.toLowerCase())); // Filter dashboards by owner, TODO FIXME\n\nexport const sFilterDashboardsByOwner = (dashboards, filter) => {\n  const ME = ownerData[1]; // TODO\n\n  const OTHERS = ownerData[2]; // TODO\n\n  switch (filter) {\n    case ME:\n      return dashboards.filter(d => d.owner === USER);\n\n    case OTHERS:\n      return dashboards.filter(d => d.owner !== USER);\n\n    default:\n      return dashboards;\n  }\n}; // Filter dashboards by order\n\nexport const sFilterDashboardsByOrder = (dashboards, filter) => {\n  const filterValues = filter.split(':');\n  const key = filterValues[0];\n  const direction = filterValues[1];\n  return arraySort(dashboards, direction, mapConstToData[key]);\n}; // Selectors dependency level 2\n// Get filtered dashboards\n\nexport const sGetFilteredDashboards = state => {\n  const dashboards = sGetDashboardsRoot(state);\n  const nameFilter = sGetFilterName(state);\n  const ownerFilter = sGetFilterOwner(state);\n  const orderFilter = sGetFilterOrder(state);\n  return sFilterDashboardsByOrder(sFilterDashboardsByName(sFilterDashboardsByOwner(dashboards, ownerFilter), nameFilter), orderFilter);\n};","import { createStore, applyMiddleware, compose } from 'redux';\nimport { createLogger } from 'redux-logger';\nimport thunk from 'redux-thunk';\nimport reducer from './reducers';\n\nconst configureStore = () => {\n  const middleware = [thunk]; // Enable Redux devtools if extension is installed instead of redux-logger\n\n  const composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\n\n  if (!window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ && process.env.NODE_ENV !== 'production') {\n    middleware.push(createLogger());\n  }\n\n  return createStore(reducer, composeEnhancers(applyMiddleware(...middleware)));\n};\n\nexport default configureStore;","//------------------------------------------------------------------------------\n// <auto-generated>\n// This code was generated by d2-i18n-generate.\n//\n// Changes to this file may cause incorrect behavior and will be lost if\n// the code is regenerated.\n// </auto-generated>\n//------------------------------------------------------------------------------\nimport i18n from '@dhis2/d2-i18n';\nimport arTranslations from './ar/translations.json';\nimport ar_IQTranslations from './ar_IQ/translations.json';\nimport daTranslations from './da/translations.json';\nimport enTranslations from './en/translations.json';\nimport esTranslations from './es/translations.json';\nimport frTranslations from './fr/translations.json';\nimport idTranslations from './id/translations.json';\nimport kmTranslations from './km/translations.json';\nimport loTranslations from './lo/translations.json';\nimport myTranslations from './my/translations.json';\nimport nbTranslations from './nb/translations.json';\nimport prsTranslations from './prs/translations.json';\nimport psTranslations from './ps/translations.json';\nimport ptTranslations from './pt/translations.json';\nimport pt_BRTranslations from './pt_BR/translations.json';\nimport ruTranslations from './ru/translations.json';\nimport svTranslations from './sv/translations.json';\nimport tetTranslations from './tet/translations.json';\nimport tgTranslations from './tg/translations.json';\nimport ukTranslations from './uk/translations.json';\nimport urTranslations from './ur/translations.json';\nimport viTranslations from './vi/translations.json';\nimport zhTranslations from './zh/translations.json';\nimport zh_CNTranslations from './zh_CN/translations.json';\nconst namespace = 'default';\ni18n.addResources('ar', namespace, arTranslations);\ni18n.addResources('ar_IQ', namespace, ar_IQTranslations);\ni18n.addResources('da', namespace, daTranslations);\ni18n.addResources('en', namespace, enTranslations);\ni18n.addResources('es', namespace, esTranslations);\ni18n.addResources('fr', namespace, frTranslations);\ni18n.addResources('id', namespace, idTranslations);\ni18n.addResources('km', namespace, kmTranslations);\ni18n.addResources('lo', namespace, loTranslations);\ni18n.addResources('my', namespace, myTranslations);\ni18n.addResources('nb', namespace, nbTranslations);\ni18n.addResources('prs', namespace, prsTranslations);\ni18n.addResources('ps', namespace, psTranslations);\ni18n.addResources('pt', namespace, ptTranslations);\ni18n.addResources('pt_BR', namespace, pt_BRTranslations);\ni18n.addResources('ru', namespace, ruTranslations);\ni18n.addResources('sv', namespace, svTranslations);\ni18n.addResources('tet', namespace, tetTranslations);\ni18n.addResources('tg', namespace, tgTranslations);\ni18n.addResources('uk', namespace, ukTranslations);\ni18n.addResources('ur', namespace, urTranslations);\ni18n.addResources('vi', namespace, viTranslations);\ni18n.addResources('zh', namespace, zhTranslations);\ni18n.addResources('zh_CN', namespace, zh_CNTranslations);\nexport default i18n;","import React from 'react';\nimport { MuiThemeProvider, createMuiTheme } from '@material-ui/core/styles';\nimport dhis2theme from '@dhis2/d2-ui-core/theme/mui3.theme';\nimport { Provider as ReduxProvider } from 'react-redux';\nimport { D2Shim } from '@dhis2/app-runtime-adapter-d2';\nimport App from './components/App';\nimport configureStore from './configureStore';\nimport './AppWrapper.css';\nimport './locales';\n\nconst muiTheme = () => createMuiTheme(dhis2theme);\n\nconst schemas = ['chart', 'map', 'report', 'reportTable', 'eventChart', 'eventReport', 'dashboard', 'organisationUnit', 'userGroup'];\nconst appConfig = {\n  schemas\n};\nconst authorization = process.env.REACT_APP_DHIS2_AUTHORIZATION || null; // TODO: ER and EV plugins require the auth header in development mode.\n// Remove this when these plugins are rewritten\n\nif (authorization) {\n  appConfig.headers = {\n    Authorization: authorization\n  };\n}\n\nconst AppWrapper = () => {\n  return <ReduxProvider store={configureStore()}>\n            <MuiThemeProvider theme={muiTheme()}>\n                <D2Shim appConfig={appConfig} i18nRoot=\"./i18n\">\n                    {({\n          d2\n        }) => {\n          if (!d2) {\n            // TODO: Handle errors in d2 initialization\n            return null;\n          }\n\n          return <App d2={d2} />;\n        }}\n                </D2Shim>\n            </MuiThemeProvider>\n        </ReduxProvider>;\n};\n\nexport default AppWrapper;","import isFunction from 'd2-utilizr/lib/isFunction';\nimport { orObject } from '../../modules/util'; // Dimensions for the react-grid-layout\n\nexport const GRID_COMPACT_TYPE = 'vertical'; // vertical | horizonal | null\n\nexport const GRID_ROW_HEIGHT = 10;\nconst GRID_COLUMN_WIDTH_PX = 20;\nconst GRID_LAYOUT = 'FLEXIBLE'; // FIXED | FLEXIBLE\n\nexport const MARGIN = [10, 10];\nexport const NEW_ITEM_SHAPE = {\n  x: 0,\n  y: 0,\n  w: 20,\n  h: 29\n}; // Dimensions for getShape\n\nconst NUMBER_OF_ITEM_COLS = 2;\nconst GRID_COLUMNS = 60;\nconst MAX_ITEM_GRID_WIDTH = GRID_COLUMNS - 1;\nexport const MAX_ITEM_GRID_HEIGHT = 34;\nexport const MAX_ITEM_GRID_HEIGHT_OIPP = 35;\nexport const MAX_ITEM_GRID_WIDTH_OIPP = 56; // for A4 landscape (297x210mm)\n// 794 px = (21cm / 2.54) * 96 pixels/inch\n// 1122 px = 29.7 /2.54 * 96 pixels/inch\n// const a4LandscapeHeightPx = 794\n\nexport const a4LandscapeWidthPx = 1102;\nexport const getGridColumns = () => {\n  switch (GRID_LAYOUT) {\n    case 'FLEXIBLE':\n      return GRID_COLUMNS;\n\n    case 'FIXED':\n      return Math.floor((window.innerWidth - 20) / GRID_COLUMN_WIDTH_PX);\n\n    default:\n      return GRID_COLUMNS;\n  }\n}; // isNonNegativeInteger\n\nconst isNonNegativeInteger = x => Number.isInteger(x) && x >= 0; // Does the item have all the shape properties?\n\n\nexport const hasShape = item => isNonNegativeInteger(item.x) && isNonNegativeInteger(item.y) && isNonNegativeInteger(item.w) && isNonNegativeInteger(item.h); // returns a rectangular grid block dimensioned with x, y, w, h in grid units.\n// based on a grid with 3 items across\n\nexport const getShape = i => {\n  if (!isNonNegativeInteger(i)) {\n    throw new Error('Invalid grid block number');\n  }\n\n  const col = i % NUMBER_OF_ITEM_COLS;\n  const row = Math.floor(i / NUMBER_OF_ITEM_COLS);\n  const itemWidth = Math.floor(MAX_ITEM_GRID_WIDTH / NUMBER_OF_ITEM_COLS);\n  const itemHeight = GRID_ROW_HEIGHT * 2;\n  return {\n    x: col * itemWidth,\n    y: row * itemHeight,\n    w: itemWidth,\n    h: itemHeight\n  };\n};\nexport const getGridItemProperties = itemId => {\n  return {\n    i: itemId,\n    minH: 4 // minimum height for item\n\n  };\n};\nexport const getPageBreakItemShape = (yPos, isStatic = true) => {\n  return {\n    x: 0,\n    y: yPos,\n    w: MAX_ITEM_GRID_WIDTH,\n    h: 5,\n    static: !!isStatic,\n    minH: 1\n  };\n};\nexport const getPrintTitlePageItemShape = isOneItemPerPage => {\n  return {\n    x: 0,\n    y: 0,\n    w: isOneItemPerPage ? MAX_ITEM_GRID_WIDTH_OIPP : MAX_ITEM_GRID_WIDTH,\n    h: MAX_ITEM_GRID_HEIGHT,\n    static: true,\n    minH: 1\n  };\n};\n/**\n * Calculates the grid item's original height in pixels based\n * on the height in grid units. This calculation\n * is copied directly from react-grid-layout GridItem.js (calcPosition)\n *\n * @param {Object} item item containing shape (x, y, w, h)\n */\n\nexport const getOriginalHeight = item => {\n  const originalHeight = Math.round(GRID_ROW_HEIGHT * item.h + Math.max(0, item.h - 1) * MARGIN[1]);\n  return {\n    originalHeight\n  };\n};\n/**\n * Returns an array of items containing the x, y, w, h dimensions\n * and the item's originalheight in pixels\n * @function\n * @param {Array} items\n * @returns {Array}\n */\n\nexport const withShape = items => items.map((item, index) => {\n  const itemWithShape = hasShape(item) ? item : Object.assign({}, item, getShape(index));\n  return Object.assign({}, itemWithShape, getOriginalHeight(itemWithShape));\n});\nexport const getGridItemDomId = id => `item-${id}`;\nexport function onItemResize(id) {\n  const el = orObject(document.querySelector(`#${getGridItemDomId(id)}`));\n  if (isFunction(el.setViewportSize)) setTimeout(() => el.setViewportSize(el.clientWidth - 5, el.clientHeight - 5), 10);\n}","import isObject from 'lodash/isObject';\nimport { VIS_TYPE_COLUMN, VIS_TYPE_PIVOT_TABLE } from '@dhis2/analytics';\nimport { apiFetchFavorite, getMapFields } from '../../../api/metadata';\nimport { REPORT_TABLE, CHART, MAP, EVENT_REPORT, EVENT_CHART, itemTypeMap } from '../../../modules/itemTypes';\nimport { getBaseUrl, getWithoutId } from '../../../modules/util';\nimport { getGridItemDomId } from '../../ItemGrid/gridUtil'; //external plugins\n\nconst itemTypeToExternalPlugin = {\n  [MAP]: 'mapPlugin',\n  [EVENT_REPORT]: 'eventReportPlugin',\n  [EVENT_CHART]: 'eventChartPlugin'\n};\n\nconst hasIntegratedPlugin = type => [CHART, REPORT_TABLE].includes(type);\n\nconst getPlugin = type => {\n  if (hasIntegratedPlugin(type)) {\n    return true;\n  }\n\n  const pluginName = itemTypeToExternalPlugin[type];\n  return global[pluginName];\n};\n\nexport const THEMATIC_LAYER = 'thematic';\nexport const pluginIsAvailable = (item = {}, visualization = {}) => {\n  const type = visualization.activeType || item.type;\n  return !!getPlugin(type);\n};\nexport const extractFavorite = item => {\n  if (!isObject(item)) {\n    return null;\n  }\n\n  const propName = itemTypeMap[item.type].propName;\n  return item[propName] || item.reportTable || item.chart || item.map || item.eventReport || item.eventChart || {};\n};\nexport const extractMapView = map => map.mapViews && map.mapViews.find(mv => mv.layer.includes(THEMATIC_LAYER));\nexport const loadPlugin = (plugin, config, credentials) => {\n  if (!(plugin && plugin.load)) {\n    return;\n  }\n\n  plugin.url = credentials.baseUrl;\n  plugin.loadingIndicator = true;\n  plugin.dashboard = true;\n\n  if (credentials.auth) {\n    plugin.auth = credentials.auth;\n  }\n\n  plugin.load(config);\n};\nexport const getId = item => extractFavorite(item).id;\nexport const getName = item => extractFavorite(item).name;\nexport const getDescription = item => extractFavorite(item).description;\nexport const getLink = (item, d2) => {\n  const baseUrl = getBaseUrl(d2);\n  const appUrl = itemTypeMap[item.type].appUrl(getId(item));\n  return `${baseUrl}/${appUrl}`;\n};\nexport const load = async (item, visualization, {\n  credentials,\n  activeType,\n  options = {}\n}) => {\n  const config = { ...visualization,\n    ...options,\n    el: getGridItemDomId(item.id)\n  };\n  const type = activeType || item.type;\n  const plugin = getPlugin(type);\n  loadPlugin(plugin, config, credentials);\n};\nexport const fetch = async item => {\n  const fetchedFavorite = await apiFetchFavorite(getId(item), item.type, {\n    fields: item.type === MAP ? getMapFields() : null\n  });\n  return fetchedFavorite;\n};\nexport const resize = item => {\n  const plugin = getPlugin(item.type);\n\n  if (plugin && plugin.resize) {\n    plugin.resize(getGridItemDomId(item.id));\n  }\n};\nexport const unmount = (item, activeType) => {\n  const plugin = getPlugin(activeType);\n\n  if (plugin && plugin.unmount) {\n    plugin.unmount(getGridItemDomId(item.id));\n  }\n};\nexport const getVisualizationConfig = (visualization, originalType, activeType) => {\n  if (originalType === MAP && originalType !== activeType) {\n    const extractedMapView = extractMapView(visualization);\n\n    if (extractedMapView === undefined) {\n      return null;\n    }\n\n    return getWithoutId({ ...visualization,\n      ...extractedMapView,\n      mapViews: undefined,\n      type: activeType === CHART ? VIS_TYPE_COLUMN : VIS_TYPE_PIVOT_TABLE\n    });\n  } else if (originalType === REPORT_TABLE && activeType === CHART) {\n    return getWithoutId({ ...visualization,\n      type: VIS_TYPE_COLUMN\n    });\n  } else if (originalType === CHART && activeType === REPORT_TABLE) {\n    return getWithoutId({ ...visualization,\n      type: VIS_TYPE_PIVOT_TABLE\n    });\n  }\n\n  return getWithoutId(visualization);\n};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"itemWrap\":\"ItemHeader_itemWrap__1SbYo\",\"itemHeaderWrap\":\"ItemHeader_itemHeaderWrap__JcBP7\",\"itemTitle\":\"ItemHeader_itemTitle__34rHa\",\"itemActionsWrap\":\"ItemHeader_itemActionsWrap__Gx3D9\"};","import { getInstance } from 'd2';\nimport arrayClean from 'd2-utilizr/lib/arrayClean';\nimport { getEndPointName } from '../modules/itemTypes'; // Id, name\n\nexport const getIdNameFields = ({\n  rename\n} = {}) => ['id', `${rename ? 'displayName~rename(name)' : 'name,displayName'}`]; // Item\n\nexport const getItemFields = () => ['dimensionItem~rename(id)', 'displayName~rename(name)', 'dimensionItemType']; // Dimension\n\nexport const getDimensionFields = ({\n  withItems\n}) => arrayClean(['dimension', 'legendSet[id]', 'filter', 'programStage', withItems ? `items[${getItemFields().join(',')}]` : ``]); // Axis\n\nexport const getAxesFields = ({\n  withItems\n}) => [`columns[${getDimensionFields({\n  withItems\n}).join(',')}]`, `rows[${getDimensionFields({\n  withItems\n}).join(',')}]`, `filters[${getDimensionFields({\n  withItems\n}).join(',')}]`]; // Favorite\n\nexport const getFavoriteFields = ({\n  withDimensions,\n  withOptions\n}) => {\n  return arrayClean([`${getIdNameFields({\n    rename: true\n  }).join(',')}`, 'displayDescription~rename(description)', withDimensions ? `${getAxesFields({\n    withItems: true\n  }).join(',')}` : ``, withOptions ? ['*', '!attributeDimensions', '!attributeValues', '!category', '!categoryDimensions', '!categoryOptionGroupSetDimensions', '!columnDimensions', '!dataDimensionItems', '!dataElementDimensions', '!dataElementGroupSetDimensions', '!filterDimensions', '!itemOrganisationUnitGroups', '!lastUpdatedBy', '!organisationUnitGroupSetDimensions', '!organisationUnitLevels', '!organisationUnits', '!programIndicatorDimensions', '!relativePeriods', '!reportParams', '!rowDimensions', '!series', '!translations', '!userOrganisationUnit', '!userOrganisationUnitChildren', '!userOrganisationUnitGrandChildren'].join(',') : '']);\n};\nexport const getFavoritesFields = ({\n  withDimensions\n}) => [`reportTable[${getFavoriteFields({\n  withDimensions\n}).join(',')}]`, `chart[${['type', ...getFavoriteFields({\n  withDimensions\n})].join(',')}]`, `map[${getFavoriteFields({\n  withDimensions\n}).join(',')}]`, `eventReport[${getFavoriteFields({\n  withDimensions\n}).join(',')}]`, `eventChart[${getFavoriteFields({\n  withDimensions\n}).join(',')}]`]; // List item\n\nexport const getListItemFields = () => [`reports[${['type', ...getIdNameFields({\n  rename: true\n})].join(',')}]`, `resources[${getIdNameFields({\n  rename: true\n}).join(',')}]`, `users[${getIdNameFields({\n  rename: true\n}).join(',')}]`]; // Map\n\nexport const getMapFields = () => [`${getIdNameFields({\n  rename: true\n}).join(',')}`, 'user,longitude,latitude,zoom,basemap', `mapViews[${getFavoriteFields({\n  withDimensions: true,\n  withOptions: true\n})}]`]; // Api\n// Get more info about the favorite of a dashboard item\n\nexport const apiFetchFavorite = (id, type, {\n  fields\n}) => getInstance().then(d2 => d2.Api.getApi().get(`${getEndPointName(type)}/${id}`, {\n  fields: fields || getFavoriteFields({\n    withDimensions: true,\n    withOptions: true\n  })\n}));","// extracted by mini-css-extract-plugin\nmodule.exports = {\"leftControls\":\"DashboardsBar_leftControls__k-Y57\",\"rightControls\":\"DashboardsBar_rightControls__1cyr1\",\"topMargin\":\"DashboardsBar_topMargin__FKGgr\"};"],"sourceRoot":""}
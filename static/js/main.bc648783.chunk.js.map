{"version":3,"sources":["components/Item/ListItem/Item.module.css","modules/itemTypes.js","reducers/user.js","reducers/dashboards.js","reducers/selected.js","reducers/visualizations.js","api/metadata.js","api/index.js","api/dashboards.js","components/ItemGrid/gridUtil.js","reducers/messages.js","api/messages.js","reducers/snackbar.js","actions/snackbar.js","components/SnackbarMessage/SnackbarMessage.js","components/Item/VisualizationItem/plugin.js","actions/selected.js","api/localStorage.js","components/Item/MessagesItem/actions.js","reducers/editDashboard.js","reducers/editItemFilters.js","reducers/itemFilters.js","actions/itemFilters.js","actions/editItemFilters.js","api/editDashboard.js","actions/editDashboard.js","actions/dashboards.js","reducers/controlBar.js","api/controlBar.js","actions/controlBar.js","reducers/dimensions.js","reducers/settings.js","actions/dimensions.js","components/ControlBar/ShowMoreButton.js","components/ControlBar/controlBarDimensions.js","components/ControlBar/ControlBar.js","icons/Star.js","api/dataStatistics.js","components/ControlBar/DashboardItemChip.js","icons/AddCircle.js","icons/Clear.js","components/ControlBar/ClearButton.js","reducers/dashboardsFilter.js","components/ControlBar/Filter.js","components/ControlBar/DashboardsBar.js","actions/dashboardsFilter.js","components/Dashboard/DashboardVerticalOffset.js","components/ItemSelector/HeaderMenuItem.js","icons/Launch.js","components/ItemSelector/ContentMenuItem.js","components/ItemSelector/selectableItems.js","components/ItemSelector/CategorizedMenuGroup.js","components/ItemSelector/actions.js","components/ItemSelector/SinglesMenuGroup.js","components/ItemSelector/ItemSelector.js","components/TitleBar/EditTitleBar.js","components/ItemFilter/FilterDialog.js","reducers/activeModalDimension.js","actions/activeModalDimension.js","components/ItemFilter/FilterSelector.js","components/TitleBar/Info.js","components/TitleBar/ViewTitleBar.js","components/TitleBar/TitleBar.js","components/Item/VisualizationItem/DefaultPlugin.js","components/Item/ItemHeader.js","components/Item/VisualizationItem/ItemFooter.js","components/Item/ItemHeaderButton.js","components/Item/VisualizationItem/ItemHeaderButtons.js","modules/memoizeOne.js","components/Item/VisualizationItem/Item.js","widgets/Line.js","components/Item/MessagesItem/Item.js","components/Item/NotSupportedItem/Item.js","icons/Description.js","icons/Delete.js","components/Item/ListItem/Item.js","components/Item/ListItem/actions.js","components/Item/TextItem/Item.js","components/Item/AppItem/Item.js","components/Item/SpacerItem/Item.js","components/Item/Item.js","components/ItemGrid/DeleteItemButton.js","widgets/NoContentMessage.js","components/Item/ProgressiveLoadingContainer.js","components/ItemGrid/ItemGrid.js","components/FilterBar/FilterBadge.js","components/FilterBar/FilterBar.js","components/Dashboard/DashboardContent.js","components/Dashboard/ViewDashboard.js","components/ControlBar/ConfirmDeleteDialog.js","components/ControlBar/EditBar.js","components/Dashboard/EditDashboard.js","components/Dashboard/NewDashboard.js","components/Dashboard/Dashboard.js","components/Dashboard/dashboardModes.js","components/App.js","actions/user.js","locales/index.js","reducers/style.js","reducers/index.js","configureStore.js","index.js","modules/util.js","components/ControlBar/styles/DashboardsBar.module.css","components/ItemSelector/styles/ContentMenuItem.module.css","components/ControlBar/styles/ControlBar.module.css","components/ControlBar/styles/ClearButton.module.css","components/ItemSelector/styles/CategorizedMenuGroup.module.css"],"names":["module","exports","list","item","itemicon","link","deleteicon","deletebutton","REPORT_TABLE","CHART","MAP","EVENT_REPORT","EVENT_CHART","APP","REPORTS","RESOURCES","USERS","MESSAGES","TEXT","SPACER","DOMAIN_TYPE_AGGREGATE","VISUALIZATION_TYPE_TABLE","VISUALIZATION_TYPE_CHART","VISUALIZATION_TYPE_MAP","CHART_TYPE_SINGLE_VALUE","spacerContent","emptyTextItemContent","isSpacerType","type","text","isTextType","isPluginType","itemTypeMap","hasOwnProperty","getPlugin","pluginName","plugin","global","_itemTypeMap","Object","_home_travis_build_dhis2_dashboards_app_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_defineProperty__WEBPACK_IMPORTED_MODULE_0__","id","endPointName","propName","pluralTitle","i18n","t","domainType","visualizationType","appUrl","concat","appName","getEndPointName","getItemUrl","d2","url","launchUrl","getBaseUrl","getItemIcon","TableIcon","ChartIcon","MapIcon","ExtensionIcon","DescriptionIcon","PersonIcon","FontDownloadIcon","EmailIcon","CropFreeIcon","NotInterestedIcon","DEFAULT_STATE_USER","username","uiLocale","isSuperuser","sGetUserUsername","state","user","DEFAULT_STATE_DASHBOARDS","byId","items","updateDashboardProp","dashboardId","prop","value","objectSpread","defineProperty","sGetDashboardsRoot","dashboards","sGetDashboardById","orObject","sDashboardsIsFetching","sGetAllDashboards","sGetDashboardItems","sGetStarredDashboards","values","filter","dashboard","starred","sGetUnstarredDashboards","sGetDashboardsSortedByStarred","toConsumableArray","arraySort","getCustomDashboards","data","arrayFrom","map","d","index","name","displayName","description","displayDescription","favorite","owner","created","split","join","substr","lastUpdated","access","numberOfItems","orArray","dashboardItems","length","combineReducers","arguments","undefined","action","validateReducer","isLoading","showDescription","sGetSelectedRoot","selected","sGetSelectedId","sGetSelectedIsLoading","sGetSelectedShowDescription","DEFAULT_STATE_VISUALIZATIONS","isEmpty","p","sGetVisualization","visualizations","sGetVisualizationsRoot","getIdNameFields","rename","getDimensionFields","_ref2","withItems","arrayClean","getAxesFields","_ref3","getFavoriteFields","_ref4","withDimensions","withOptions","getFavoritesFields","_ref5","apiFetchFavorite","_ref6","fields","getInstance","then","Api","getApi","get","onError","error","console","log","getDashboardItemsFields","withFavorite","getDashboardFields","apiFetchDashboard","models","catch","apiStarDashboard","isStarred","post","delete","apiDeleteDashboard","MARGIN","NEW_ITEM_SHAPE","x","y","w","h","isNonNegativeInteger","Number","isInteger","hasShape","withShape","itemWithShape","assign","i","Error","col","row","Math","floor","itemWidth","GRID_ROW_HEIGHT","getShape","originalHeight","round","max","getOriginalHeight","getGridItemDomId","onItemResize","el","document","querySelector","isFunction","setViewportSize","setTimeout","clientWidth","clientHeight","sGetMessagesRoot","messages","getMessages","DEFAULT_STATE_SNACKBAR","message","duration","open","acCloseSnackbar","loadingDashboardMsg","SnackbarMessageContent","_ref","react_default","a","createElement","style","fontWeight","connect","_sGetSnackbar","snackbar","sGetSnackbar","snackbarOpen","snackbarMessage","snackbarDuration","onCloseSnackbar","props","Snackbar_default","zIndex","SnackbarMessage_SnackbarMessageContent","autoHideDuration","onClose","pluginIsAvailable","activeType","extractFavorite","isObject","reportTable","chart","eventReport","eventChart","loadPlugin","config","credentials","load","baseUrl","loadingIndicator","auth","getId","getName","getLink","asyncToGenerator","regenerator_default","mark","_callee","visualization","_args","wrap","_context","prev","next","stop","_x","_x2","_x3","_x4","apply","this","fetch","_callee2","fetchedFavorite","_context2","sent","abrupt","_x5","resize","unmount","getVisualizationConfig","originalType","extractedMapView","mapViews","find","mv","layer","includes","getWithoutId","acSetSelectedId","acSetSelectedIsLoading","acReceivedVisualization","tLoadDashboard","dispatch","getState","dash","acAppendDashboards","Promise","resolve","t0","tSetSelectedDashboardById","snackbarTimeout","onSuccess","dashboardName","customDashboard","acSetDashboardItems","localStorage","setItem","forEach","messageConversations","clearTimeout","DEFAULT_STATE_EDIT_DASHBOARD","NEW_DASHBOARD_STATE","sGetEditDashboardRoot","editDashboard","sGetIsEditing","sGetEditDashboardItems","DEFAULT_STATE_EDIT_ITEM_FILTERS","sGetEditItemFiltersRoot","editItemFilters","DEFAULT_STATE_ITEM_FILTERS","sGetItemFiltersRoot","itemFilters","sGetFiltersKeys","keys","acRemoveItemFilter","acRemoveEditItemFilter","saveDashboard","width","height","save","msg","response","uid","updateDashboard","postDashboard","create","acAddDashboardItem","itemPropName","generateUid","content","acUpdateDashboardItem","acRemoveDashboardItem","arrayToIdMap","acSetDashboardStarred","tFetchDashboards","collection","paging","toArray","userRows","sGetControlBarUserRows","controlBar","sGetControlBarRoot","KEY","hasNamespace","currentUser","dataStore","has","getNamespace","apiGetControlBarRows","_callee3","namespace","_context3","t1","t2","key","apiPostControlBarRows","_callee4","rows","_context4","set","acSetControlBarUserRows","DEFAULT_DIMENSIONS","pe","FIXED_DIMENSIONS","ou","sGetDimensions","dimensions","DEFAULT_SETTINGS","keyDateFormat","keyAnalysisRelativePeriod","keyAnalysisDigitGroupSeparator","displayNameProperty","rootOrganisationUnit","sGetSettings","settings","sGetSettingsDisplayNameProperty","acSetDimensions","keyBy","sortBy","toLowerCase","styles","showMore","color","colors","grey700","cursor","fontSize","paddingTop","&:hover","textDecoration","disabled","grey500","withStyles","onClick","isMaxHeight","classes","textAlign","className","MIN_ROW_COUNT","getRowsHeight","getNumRowsFromHeight","FIRST_ROW_PADDING_HEIGHT","getTopOffset","getControlBarHeight","ControlBar","_this","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","onStartDrag","setState","dragging","window","addEventListener","onDrag","onEndDrag","event","preventDefault","stopPropagation","newHeight","clientY","onChangeHeight","requestAnimationFrame","removeEventListener","draghandle","onMouseDown","rootStyle","top","backgroundColor","editMode","yellow050","white","paddingBottom","transition","root","children","renderDragHandle","React","Component","defaultProps","StarIcon","xmlns","viewBox","fill","apiPostDataStatistics","eventType","chip","margin","grey600","display","verticalAlign","icon","marginTop","unselected","label","chipProps","selectedState","Star","Link","to","debounce","Chip","AddCircleIcon","teal600","ClearIcon","grey800","ClearButton","onClear","button","Clear","ownerData","DEFAULT_STATE_DASHBOARDS_FILTER_NAME","DEFAULT_STATE_DASHBOARDS_FILTER_OWNER","order","sGetDashboardsFilterRoot","dashboardsFilter","sGetFilterName","KEYCODE_ENTER","KEYCODE_ESCAPE","filterField","searchIcon","Filter","_Component","setFilterValue","onChangeName","target","handleKeyUp","keyCode","onKeypressEnter","inherits","createClass","nextProps","_this$props","startAdornment","InputAdornment_default","position","Search_default","endAdornment","ControlBar_ClearButton","Input_default","placeholder","onChange","onKeyUp","Function","prototype","MAX_ROW_COUNT","DashboardsBar","_getPrototypeOf2","_len","args","Array","_key","setInitialDashboardState","adjustedHeight","newRows","newRowCount","min","onToggleMaxHeight","onSelectDashboard","history","push","selectedId","onChangeFilterName","rowCount","controlBarHeight","contentWrapperStyle","padding","overflowY","components_ControlBar_ControlBar","leftControls","marginRight","AddCircle","ControlBar_Filter","ControlBar_DashboardItemChip","ControlBar_ShowMoreButton","mapDispatchToProps","withRouter","stateProps","dispatchProps","ownProps","displayDashboards","HeaderMenuItem","title","MenuItem","dense","LaunchIcon","LaunchLink","e","launchLink","rel","href","Launch","InsertButton","buttonInsert","ContentMenuItem","onInsert","ItemIcon","menuItem","ContentMenuItem_LaunchLink","ContentMenuItem_InsertButton","singleItems","header","categorizedItems","listItemTypes","CategorizedMenuGroup","addItem","tAddListItemContent","newItem","toggleSeeMore","seeMore","onChangeItemsLimit","_this2","_this$props2","hasMore","react","ItemSelector_HeaderMenuItem","itemUrl","context","ItemSelector_ContentMenuItem","showMoreButton","Divider","contextTypes","PropTypes","object","isRequired","dashboardItem","listItemType","dashboardItemIndex","findIndex","category","addToDashboard","ItemSearchField","InputField","filled","onFocus","ItemSelector","closeList","openList","fetchItems","anchorEl","currentTarget","setFilter","getCategorizedMenuGroups","itemType","allItems","maxOptions","slice","ItemSelector_CategorizedMenuGroup","getSinglesMenuGroups","ItemSelector_SinglesMenuGroup","getMenuGroups","queryString","add","Set","ItemSelector_ItemSearchField","Popover_default","anchorOrigin","horizontal","vertical","transformOrigin","PaperProps","disableAutoFocus","disableRestoreFocus","Menu","EditTitleBar","onChangeTitle","onChangeDescription","section","titleDescription","TextField_default","variant","multiline","InputProps","input","underline","itemSelector","components_ItemSelector_ItemSelector","selectedDashboard","justifyContent","flex","clear","&::before","borderBottom","&:hover::before","borderRadius","peId","ouId","FilterDialog","onConfirm","dimension","selectedItems","dialogId","commonProps","onSelect","onDeselect","onReorder","build","selectedPeriods","ouItems","dialogTitle","Dialog_default","maxWidth","disableEnforceFocus","dialogContent","DialogActions_default","Button","kind","DEFAULT_STATE_ACTIVE_MODAL_DIMENSION","sGetActiveModalDimension","activeModalDimension","acSetActiveModalDimension","FilterSelector","openPanel","closePanel","closeDialog","clearActiveModalDimension","selectDimension","setActiveModalDimension","onSelectItems","dimensionId","setEditItemFilters","onDeselectItems","itemIdsToRemove","newList","removeEditItemFilter","onReorderItems","itemIds","oldList","reorderedList","saveFilter","filterItems","addItemFilter","removeItemFilter","theme","selectedDimensions","ArrowDropDown_default","Boolean","fontFamily","typography","onDimensionClick","selectedIds","ItemFilter_FilterDialog","filters","withTheme","Info","show","toggle","InfoOutlined_default","NO_DESCRIPTION","actions","alignItems","marginLeft","starIcon","textButton","minWidth","editLink","titleBar","titleBarIcon","ViewTitleBar","toggleSharingDialog","sharingDialogIsOpen","onStarClick","onInfoClick","titleStyle","userSelect","StarBorder","TitleBar_Info","update","manage","ItemFilter_FilterSelector","d2_ui_sharing_dialog_default","onRequestClose","tStarDashboard","black","TitleBar","edit","TitleBar_EditTitleBar","TitleBar_ViewTitleBar","DefaultPlugin","pluginCredentials","shouldPluginReload","prevProps","reloadAllowed","filtersChanged","vis","prevVis","visChanged","reloadPlugin","pluginManager","currentVis","useActiveType","getActiveType","defaultHeaders","Authorization","textDiv","HEADER_HEIGHT","ItemHeader","actionButtons","scrollContainer","line","border","grey100","ItemFooter","objectId","d2_ui_interpretations_default","ItemHeaderButton","iconBase","buttonBase","buttonDisabled","opacity","toggleFooterPadding","grey200","baseStyle","container","disabledStyle","activeStyle","primary800","primary100","inactiveStyle","getItemTypeId","VisualizationItemHeaderButtons","activeFooter","onToggleFooter","toggleFooterBase","toggleFooter","components_Item_ItemHeaderButton","Message_default","chartType","onSelectVisualization","match","tableButtonStyle","tableBtnStyle","chartButtonStyle","chartBtnStyle","mapButtonStyle","mapBtnStyle","ViewList_default","InsertChart_default","Public_default","renderInterpretationButton","renderVisualizationButtons","memoizeOne","fn","lastArgs","lastValue","every","arg","overflow","textOverflow","whiteSpace","fontStretch","lineHeight","applyFilters","visRows","obj","visColumns","columns","visFilters","dimensionFound","dimensionObjects","Item","showFooter","configLoaded","getUniqueKey","uniqueId","getPluginComponent","getContentStyle","data_visualizer_plugin_build","forDashboard","VisualizationItem_DefaultPlugin","onToggleItemExpanded","getTitle","itemName","Launch_default","getActionButtons","ItemHeaderButtons","contentRef","offsetHeight","createRef","_componentDidMount","onVisualizationLoaded","_this$props3","Item_ItemHeader","ref","VisualizationItem_ItemFooter","acReceivedActiveVisualization","Line","PRIVATE","messageTypes","_messageTypes","listStyleType","paddingLeft","seeAll","marginBottom","sender","snippet","maxHeight","MessagesItem","getMessageHref","msgIdentifier","messageType","getMessageSender","latestMsg","getMessageItems","editClass","readClass","read","msgDate","location","messageCount","formatDate","userSettings","widgets_Line","string","MessagesContainer","NotSupportedItem","NotInterested_default","align","DeleteIcon","red500","getItemTitle","removeContent","handler","contentToRemove","ListItem","tRemoveListItemContent","contentItems","array","getContentItems","contentItem","Description","deleteButton","Delete","grey900","newContent","textField","onChangeText","updatedItem","d2_ui_rich_text","onEdit","fullWidth","textDivStyle","viewItem","getIframeSrc","appDetails","iframeSrc","ouIds","ouPath","AppItem","appKey","system","installedApps","app","src","SpacerItem","GridItem","VisualizationItem","TextItem","getGridItem","right","DeleteItemHeaderButton","Delete_default","NoContentMessage","ProgressiveLoadingContainer","shouldLoad","containerRef","shouldLoadHandler","bufferPx","bufferFactor","innerHeight","rect","getBoundingClientRect","bottom","removeHandler","checkShouldLoad","debounceMs","registerHandler","_this3","objectWithoutProperties","ItemGrid","expandedItems","clickedId","isExpanded","onRemoveItem","onLayoutChange","newLayout","acUpdateDashboardLayout","onResizeStop","layout","oldItem","pluginResize","onRemoveItemWrapper","widgets_NoContentMessage","expandedItem","hProp","minH","ScreenCover","CircularProgress","react_grid_layout_default","cols","rowHeight","innerWidth","compactType","isDraggable","isResizable","draggableCancel","itemClassNames","Item_ProgressiveLoadingContainer","DeleteItemButton","Item_Item_Item","validItems","badgeContainer","badge","badgeRemove","FilterBadge","onRemove","count","FilterBar","onBadgeRemove","onBadgeClick","bar","FilterBar_FilterBadge","removeItemFIlter","filtersSelector","createSelector","reduce","arr","flexWrap","DashboardContent","components_TitleBar_TitleBar","components_FilterBar_FilterBar","components_ItemGrid_ItemGrid","Content","hasDashboardContent","dashboardsIsEmpty","Dashboard_DashboardContent","dashboardsLoaded","contentNotReady","ControlBar_DashboardsBar","Dashboard_DashboardVerticalOffset","ViewDashboard_Content","ConfirmDeleteDialog","onDeleteConfirmed","onContinueEditing","secondary","destructive","DialogTitle_default","DialogContent_default","DialogContentText_default","buttonBarStyle","EditBar","translationDialogIsOpen","dashboardModel","confirmDeleteDialogOpen","redirectUrl","onConfirmDelete","onSave","newId","onDiscard","onDiscardChanges","onDelete","onTranslationsSaved","translations","dbLocale","translation","locale","property","onTranslate","fetchDashboardModel","toggleTranslationDialog","confirmDeleteDialog","deleteAccess","ControlBar_ConfirmDeleteDialog","translationDialog","d2_ui_translation_dialog_default","objectToTranslate","fieldsToTranslate","onTranslationSaved","onTranslationError","err","Redirect","updateAccess","discardBtnText","primary","rightControls","sGetIsNewDashboard","dashboardToSave","_x6","_x7","tDeleteDashboard","acSetDashboardDisplayName","EditDashboard","initialized","initEditDashboard","setEditDashboard","getDashboardContent","EditDashboard_Content","ControlBar_EditBar","NewDashboard","setNewDashboard","Dashboard","setDashboard","params","selectDashboard","scrollToTop","scrollTo","mode","Dashboard_EditDashboard","Dashboard_NewDashboard","Dashboard_ViewDashboard","dashboardToSelect","preferredId","getItem","App","setCurrentUser","fetchDashboards","setControlBarRows","setDimensions","HeaderBar_default","HashRouter","Switch","Route","exact","path","render","components_Dashboard_Dashboard","components_SnackbarMessage_SnackbarMessage","childContextTypes","controlBarRows","displayNameProp","filteredDimensions","apiFetchDimensions","dim","dimensionType","dataDimensionType","tSetDimensions","moment","addResources","enTranslations","loTranslations","ruTranslations","svTranslations","urTranslations","viTranslations","setDefaultNamespace","changeLanguage","objectClean","conversations","$merge","d2Object","keyUiLocale","authorities","newState","k","$unshift","idToRemove","$splice","stateItems","newStateItems","stateItem","si","$set","configureStore","middleware","thunk","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","createStore","reducer","applyMiddleware","dhis2theme","palette","dark","configI18n","sources","manifest","isProd","getManifest","info","version","manifest_generated_at","process","activities","dhis","dhis2","apiVersion","headers","schemas","getUserSettings","d2Init","initializedD2","ReactDOM","es","store","createMuiTheme","src_components_App","getElementById","init","param","isArray","Intl","DateTimeFormat","year","month","day","format","Date","replace","defaultValue","api","idx","indexOf","_home_travis_build_dhis2_dashboards_app_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectSpread__WEBPACK_IMPORTED_MODULE_0__"],"mappings":"2HACAA,EAAAC,QAAA,CAAkBC,KAAA,mBAAAC,KAAA,mBAAAC,SAAA,uBAAAC,KAAA,mBAAAC,WAAA,yBAAAC,aAAA,qoCCcLC,EAAe,eACfC,EAAQ,QACRC,EAAM,MACNC,EAAe,eACfC,EAAc,cACdC,EAAM,MACNC,EAAU,UACVC,EAAY,YACZC,EAAQ,QACRC,EAAW,WACXC,EAAO,OACPC,EAAS,SAGTC,EAAwB,YAIxBC,EAA2B,QAC3BC,EAA2B,QAC3BC,EAAyB,MAGzBC,EAA0B,eAG1BC,EAAgB,+CAChBC,EAAuB,4BACvBC,EAAe,SAAAxB,GAAI,OAC5BA,EAAKyB,OAASV,GAAQf,EAAK0B,OAASJ,GAC3BK,EAAa,SAAA3B,GAAI,OAC1BA,EAAKyB,OAASV,GAAQf,EAAK0B,OAASJ,GAC3BM,EAAe,SAAA5B,GAAI,OAC5B6B,EAAY7B,EAAKyB,MAAMK,eAAe,WAE7BC,EAAY,SAAAN,GACrB,IAAMO,EAAaH,EAAYJ,GAAMQ,OAErC,OAAIR,IAASnB,GAIN4B,EAAOF,IAILH,GAAWM,EAAA,GAAAC,OAAAC,EAAA,EAAAD,CAAAD,EACnB9B,EAAe,CACZiC,GAAIjC,EACJkC,aAAc,eACdC,SAAU,cACVC,YAAaC,IAAKC,EAAE,gBACpBV,OAAQ,oBACRW,WAAY3B,EACZ4B,kBAAmB3B,EACnB4B,OAAQ,SAAAR,GAAE,4BAAAS,OAA0BT,IACpCU,QAASN,IAAKC,EAAE,kBAVAP,OAAAC,EAAA,EAAAD,CAAAD,EAYnB7B,EAAQ,CACLgC,GAAIhC,EACJiC,aAAc,SACdC,SAAU,QACVC,YAAaC,IAAKC,EAAE,UACpBV,OAAQ,cACRW,WAAY3B,EACZ4B,kBAAmB1B,EACnB2B,OAAQ,SAAAR,GAAE,oCAAAS,OAAkCT,IAC5CU,QAASN,IAAKC,EAAE,gBArBAP,OAAAC,EAAA,EAAAD,CAAAD,EAuBnB5B,EAAM,CACH+B,GAAI/B,EACJgC,aAAc,OACdC,SAAU,MACVC,YAAaC,IAAKC,EAAE,QACpBV,OAAQ,YACRW,WAAY3B,EACZ4B,kBAAmBzB,EACnB0B,OAAQ,SAAAR,GAAE,2BAAAS,OAAyBT,IACnCU,QAASN,IAAKC,EAAE,UAhCAP,OAAAC,EAAA,EAAAD,CAAAD,EAkCnB3B,EAAe,CACZ8B,GAAI9B,EACJ+B,aAAc,eACdC,SAAU,cACVC,YAAaC,IAAKC,EAAE,iBACpBV,OAAQ,oBACRW,WAvE2B,UAwE3BC,kBAAmB3B,EACnB4B,OAAQ,SAAAR,GAAE,oCAAAS,OAAkCT,IAC5CU,QAASN,IAAKC,EAAE,mBA3CAP,OAAAC,EAAA,EAAAD,CAAAD,EA6CnB1B,EAAc,CACX6B,GAAI7B,EACJ8B,aAAc,cACdC,SAAU,aACVC,YAAaC,IAAKC,EAAE,gBACpBV,OAAQ,mBACRW,WAlF2B,UAmF3BC,kBAAmB1B,EACnB2B,OAAQ,SAAAR,GAAE,uCAAAS,OAAqCT,IAC/CU,QAASN,IAAKC,EAAE,sBAtDAP,OAAAC,EAAA,EAAAD,CAAAD,EAwDnBzB,EAAM,CACH6B,aAAc,OACdC,SAAU,SACVC,YAAaC,IAAKC,EAAE,UA3DJP,OAAAC,EAAA,EAAAD,CAAAD,EA6DnBxB,EAAU,CACP2B,GAAI3B,EACJ4B,aAAc,UACdC,SAAU,UACVC,YAAaC,IAAKC,EAAE,WACpBG,OAAQ,SAAAR,GAAE,mEAAAS,OACuDT,MAnEjDF,OAAAC,EAAA,EAAAD,CAAAD,EAqEnBvB,EAAY,CACT0B,GAAI1B,EACJ2B,aAAc,YACdC,SAAU,YACVC,YAAaC,IAAKC,EAAE,aACpBG,OAAQ,SAAAR,GAAE,uBAAAS,OAAqBT,EAArB,YA1EMF,OAAAC,EAAA,EAAAD,CAAAD,EA4EnBtB,EAAQ,CACLyB,GAAIzB,EACJ0B,aAAc,QACdC,SAAU,QACVC,YAAaC,IAAKC,EAAE,SACpBG,OAAQ,SAAAR,GAAE,0DAAAS,OAAwDT,MAjFlDF,OAAAC,EAAA,EAAAD,CAAAD,EAmFnBpB,EAAO,CACJuB,GAAIvB,EACJyB,SAAU,SArFMJ,OAAAC,EAAA,EAAAD,CAAAD,EAuFnBrB,EAAW,CACR0B,SAAU,aAxFMJ,OAAAC,EAAA,EAAAD,CAAAD,EA0FnBnB,EAAS,CACNwB,SAAU,SA3FML,GA+FXc,EAAkB,SAAAxB,GAAI,OAAII,EAAYJ,GAAMc,cAE5CW,EAAa,SAACzB,EAAMzB,EAAMmD,GACnC,IAAIC,EAUJ,OARI3B,IAASf,IACT0C,EAAMpD,EAAKqD,WAGXxB,EAAYJ,IAASI,EAAYJ,GAAMqB,SACvCM,EAAG,GAAAL,OAAMO,YAAWH,GAAjB,KAAAJ,OAAwBlB,EAAYJ,GAAMqB,OAAO9C,EAAKsC,MAGtDc,GAGEG,GAAc,SAAA9B,GACvB,OAAQA,GACJ,KAAKpB,EACL,KAAKG,EACL,KAAKG,EACD,OAAO6C,IACX,KAAKlD,EACL,KAAKG,EACD,OAAOgD,IACX,KAAKlD,EACD,OAAOmD,IACX,KAAKhD,EACD,OAAOiD,IACX,KAAK/C,EACD,OAAOgD,IACX,KAAK/C,EACD,OAAOgD,IACX,KAAK9C,EACD,OAAO+C,IACX,KAAKhD,EACD,OAAOiD,IACX,KAAK/C,EACD,OAAOgD,IACX,QACI,OAAOC,4aClMNC,EAAqB,CAC9B5B,GAAI,GACJ6B,SAAU,GACVC,SAAU,GACVC,aAAa,GAwBV,IACMC,EAAmB,SAAAC,GAAK,OAAIA,EAAMC,KAAKL,qFCZvCM,EAA2B,CACpCC,KAAM,KACNC,MAAO,IAKLC,EAAsB,SAACL,EAAOM,EAAaC,EAAMC,GAA3B,MAAsC,CAC9DL,KAAKtC,OAAA4C,EAAA,EAAA5C,CAAA,GACEmC,EAAMG,KADTtC,OAAA6C,EAAA,EAAA7C,CAAA,GAECyC,EAFDzC,OAAA4C,EAAA,EAAA5C,CAAA,GAGOmC,EAAMG,KAAKG,GAHlBzC,OAAA6C,EAAA,EAAA7C,CAAA,GAIK0C,EAAOC,MAGhBJ,MAAOJ,EAAMI,QAwDJO,EAAqB,SAAAX,GAAK,OAAIA,EAAMY,YAiBpCC,EAAoB,SAACb,EAAOjC,GAAR,OAC7B+C,YAASH,EAAmBX,GAAOG,MAAMpC,IAEhCgD,EAAwB,SAAAf,GACjC,OAA0C,OAAnCW,EAAmBX,GAAOG,MAUxBa,EAAoB,SAAAhB,GAAK,OAClCc,YAASH,EAAmBX,GAAOG,OAS1Bc,EAAqB,SAAAjB,GAAK,OAAIW,EAAmBX,GAAOI,OAIxDc,EAAwB,SAAAlB,GAAK,OACtCnC,OAAOsD,OAAOH,EAAkBhB,IAAQoB,OACpC,SAAAC,GAAS,OAA0B,IAAtBA,EAAUC,WAGlBC,EAA0B,SAAAvB,GAAK,OACxCnC,OAAOsD,OAAOH,EAAkBhB,IAAQoB,OACpC,SAAAC,GAAS,OAA0B,IAAtBA,EAAUC,WAYlBE,EAAgC,SAAAxB,GAAK,SAAAxB,OAAAX,OAAA4D,EAAA,EAAA5D,CAC3C6D,IAAUR,EAAsBlB,GAAQ,MAAO,gBADJnC,OAAA4D,EAAA,EAAA5D,CAE3C6D,IAAUH,EAAwBvB,GAAQ,MAAO,kBAW3C2B,EAAsB,SAAAC,GAiB/B,OAAOC,IAAUD,GAAME,IAAI,SAACC,EAAGC,GAAJ,MAAe,CACtCjE,GAAIgE,EAAEhE,GACNkE,KAAMF,EAAEE,KACRC,YAAaH,EAAEG,YACfC,YAAaJ,EAAEI,YACfC,mBAAoBL,EAAEK,mBACtBd,QAASS,EAAEM,SACXC,MAAOP,EAAE9B,KAAKgC,KACdM,QAASR,EAAEQ,QACNC,MAAM,KACNC,KAAK,KACLC,OAAO,EAAG,IACfC,YAAaZ,EAAEY,YACVH,MAAM,KACNC,KAAK,KACLC,OAAO,EAAG,IACfE,OAAQb,EAAEa,OACVC,cAAeC,YAAQf,EAAEgB,gBAAgBC,OACzCD,gBAlCY3C,EAkCY2B,EAAEgB,eAjC1B3C,EAAM0B,IAAI,SAAArG,GACN,IAAMyB,EAAOD,YAAaxB,GAAQgB,IAAShB,EAAKyB,KAC1CC,EAAOC,YAAW3B,GAClBA,EAAK0B,OAASH,IACV,GACAvB,EAAK0B,KACT,KAEN,OAAOU,OAAA4C,EAAA,EAAA5C,CAAA,GACApC,EACU,OAAT0B,EAAgB,CAAEA,QAAS,GAFnC,CAGID,aAZI,IAAAkD,aCjHL6C,cAAgB,CAC3BlF,GArCO,WAA+C,IAA9CiC,EAA8CkD,UAAAF,OAAA,QAAAG,IAAAD,UAAA,GAAAA,UAAA,GAVjB,KAUME,EAAWF,UAAAF,OAAA,EAAAE,UAAA,QAAAC,EACtD,OAAQC,EAAOlG,MACX,IAhBuB,kBAiBnB,OAAOmG,YAAgBD,EAAO5C,MAbD,MAcjC,QACI,OAAOR,IAiCfsD,UA7Bc,WAAsD,IAArDtD,EAAqDkD,UAAAF,OAAA,QAAAG,IAAAD,UAAA,IAAAA,UAAA,GAAXE,EAAWF,UAAAF,OAAA,EAAAE,UAAA,QAAAC,EACpE,OAAQC,EAAOlG,MACX,IAxB8B,yBAyB1B,OAAOmG,YACHD,EAAO5C,OAtByB,GAyBxC,QACI,OAAOR,IAsBfuD,gBAlBoB,WAGnB,IAFDvD,EAECkD,UAAAF,OAAA,QAAAG,IAAAD,UAAA,IAAAA,UAAA,GADDE,EACCF,UAAAF,OAAA,EAAAE,UAAA,QAAAC,EACD,OAAQC,EAAOlG,MACX,IAtCoC,+BAuChC,OAAOmG,YACHD,EAAO5C,OApC+B,GAuC9C,QACI,OAAOR,MAYNwD,GAAmB,SAAAxD,GAAK,OAAIA,EAAMyD,UAElCC,GAAiB,SAAA1D,GAAK,OAAIwD,GAAiBxD,GAAOjC,IAElD4F,GAAwB,SAAA3D,GAAK,OAAIwD,GAAiBxD,GAAOsD,WAEzDM,GAA8B,SAAA5D,GAAK,OAC5CwD,GAAiBxD,GAAOuD,qCC9DfM,GAA+B,GAEtCC,GAAU,SAAAC,GAAC,YAAUZ,IAANY,GAAyB,OAANA,GAqC3BC,GAAoB,SAAChE,EAAOjC,GACrC,OAJkC,SAAAiC,GAAK,OAAIA,EAAMiE,eAI1CC,CAAuBlE,GAAOjC,yBC1C5BoG,GAAkB,eAAGC,GAAHlB,UAAAF,OAAA,QAAAG,IAAAD,UAAA,GAAAA,UAAA,GAAc,IAAXkB,OAAH,MAAqB,CAChD,KADgD,GAAA5F,OAE7C4F,EAAS,2BAA6B,sBAWhCC,GAAqB,SAAAC,GAAA,IAAGC,EAAHD,EAAGC,UAAH,OAC9BC,KAAW,CACP,YACA,gBACA,SACAD,EAAS,SAAA/F,OAZkB,CAC/B,2BACA,2BACA,qBASyCiE,KAAK,KAAjC,WAIJgC,GAAgB,SAAAC,GAAA,IAAGH,EAAHG,EAAGH,UAAH,MAAmB,YAAA/F,OACjC6F,GAAmB,CAAEE,cAAa9B,KAAK,KADN,aAAAjE,OAEpC6F,GAAmB,CAAEE,cAAa9B,KAAK,KAFH,gBAAAjE,OAGjC6F,GAAmB,CAAEE,cAAa9B,KAAK,KAHN,OAOnCkC,GAAoB,SAAAC,GAAqC,IAAlCC,EAAkCD,EAAlCC,eAAgBC,EAAkBF,EAAlBE,YAChD,OAAON,KAAW,IAAAhG,OACX2F,GAAgB,CAAEC,QAAQ,IAAQ3B,KAAK,MAC1C,yCACAoC,EAAc,GAAArG,OAAMiG,GAAc,CAAEF,WAAW,IAAQ9B,KAAK,MAA9C,GACdqC,EACM,CACI,IACA,uBACA,mBACA,YACA,sBACA,oCACA,oBACA,sBACA,yBACA,iCACA,oBACA,8BACA,iBACA,sCACA,0BACA,qBACA,8BACA,mBACA,gBACA,iBACA,UACA,gBACA,wBACA,gCACA,sCACFrC,KAAK,KACP,MAIDsC,GAAqB,SAAAC,GAAA,IAAGH,EAAHG,EAAGH,eAAHG,EAAmBF,YAAnB,MAAqC,gBAAAtG,OACpDmG,GAAkB,CAAEE,mBAAkBpC,KAAK,KADS,cAAAjE,OAE1D,CAAC,QAADA,OAAAX,OAAA4D,EAAA,EAAA5D,CAAY8G,GAAkB,CAAEE,qBAAmBpC,KAAK,KAFE,YAAAjE,OAG5DmG,GAAkB,CAAEE,mBAAkBpC,KAAK,KAHiB,oBAAAjE,OAIpDmG,GAAkB,CAAEE,mBAAkBpC,KAAK,KAJS,mBAAAjE,OAKrDmG,GAAkB,CAAEE,mBAAkBpC,KAAK,KALU,OA4B1DwC,GAAmB,SAAClH,EAAIb,EAALgI,GAAA,IAAaC,EAAbD,EAAaC,OAAb,OAC5BC,wBAAcC,KAAK,SAAAzG,GAAE,OACjBA,EAAG0G,IAAIC,SAASC,IAAhB,GAAAhH,OAAuBE,YAAgBxB,GAAvC,KAAAsB,OAAgDT,GAAM,CAClDoH,OACIA,GACAR,GAAkB,CACdE,gBAAgB,EAChBC,aAAa,SClGpBW,GAAU,SAAAC,GAAK,OAAIC,QAAQC,IAAI,UAAWF,IAG1CG,GAA0B,eAAGC,GAAH5C,UAAAF,OAAA,QAAAG,IAAAD,UAAA,GAAAA,UAAA,GAAoB,IAAjB4C,aAAH,OACnCtB,KAAW,CACP,KACA,OACA,QACA,IACA,IACA,kBACA,mBACA,WACA,OACA,SAVO,GAAAhG,ODoEwB,YAAAA,OACxB2F,GAAgB,CAAEC,QAAQ,IAAQ3B,KAAK,KADf,kBAAAjE,OAEtB2F,GAAgB,CAAEC,QAAQ,IAAQ3B,KAAK,KAFjB,cAAAjE,OAG1B2F,GAAgB,CAAEC,QAAQ,IAAQ3B,KAAK,KAHb,MCzDRA,KAAK,MAC5BqD,EAAY,GAAAtH,OACHuG,GAAmB,CAClBF,eAAgBiB,EAAajB,iBAC9BpC,KAAK,MAHF,MAQPsD,GAAqB,eAAAzB,EAAApB,UAAAF,OAAA,QAAAG,IAAAD,UAAA,GAAAA,UAAA,GAA+B,GAA5BqB,EAAHD,EAAGC,UAAWuB,EAAdxB,EAAcwB,aAAd,OAC9BtB,KAAW,IAAAhG,OACJ2F,KAAkB1B,KAAK,MAC1B,cACA,qBACA,WAJO,QAAAjE,OAKC2F,GAAgB,CAAEC,QAAQ,IAAQ3B,KAAK,KALxC,KAMP,UACA,cACA,SACA8B,EAAS,kBAAA/F,OACeqH,GAAwB,CACtCC,iBACDrD,KAAK,KAHL,WCxBJuD,GAAoB,SAAAjI,GAAE,OAC/BqH,wBACKC,KAAK,SAAAzG,GAAE,OACJA,EAAGqH,OAAO5E,UAAUmE,IAAIzH,EAAI,CACxBoH,OAAQX,KACJuB,GAAmB,CACfxB,WAAW,EACXuB,aAAc,CAAEjB,gBAAgB,MAEtCpC,KAAK,SAGdyD,MAAMT,KAGFU,GAAmB,SAACpI,EAAIqI,GACjC,IAAMvH,EAAG,cAAAL,OAAiBT,EAAjB,aAETqH,wBAAcC,KAAK,SAAAzG,GACXwH,EACAxH,EAAG0G,IAAIC,SAASc,KAAKxH,GAErBD,EAAG0G,IAAIC,SAASe,OAAOzH,MAKtB0H,GAAqB,SAAAxI,GAC9B,OAAOqH,wBACFC,KAAK,SAAAzG,GACF,OAAOA,EAAGqH,OAAOrF,WACZ4E,IAAIzH,GACJsH,KAAK,SAAAhE,GAAS,OAAIA,EAAUiF,aAEpCJ,MAAMT,0BC3CFe,GAAS,CAAC,GAAI,IAEdC,GAAiB,CAAEC,EAAG,EAAGC,EAAG,EAAGC,EAAG,GAAIC,EAAG,IAqBhDC,GAAuB,SAAAJ,GAAC,OAAIK,OAAOC,UAAUN,IAAMA,GAAK,GAIjDO,GAAW,SAAAxL,GAAI,OACxBqL,GAAqBrL,EAAKiL,IAC1BI,GAAqBrL,EAAKkL,IAC1BG,GAAqBrL,EAAKmL,IAC1BE,GAAqBrL,EAAKoL,IA6CjBK,GAAY,SAAA9G,GAAK,OAC1BA,EAAM0B,IAAI,SAACrG,EAAMuG,GACb,IAAMmF,EAAgBF,GAASxL,GACzBA,EACAoC,OAAOuJ,OAAO,GAAI3L,EA7CR,SAAA4L,GACpB,IAAKP,GAAqBO,GACtB,MAAM,IAAIC,MAAM,6BAGpB,IAAMC,EAAMF,EAjCY,EAkClBG,EAAMC,KAAKC,MAAML,EAlCC,GAmClBM,EAAYF,KAAKC,MAAM,MAG7B,MAAO,CACHhB,EAAGa,EAAMI,EACThB,EAJeiB,GAIZJ,EACHZ,EAAGe,EACHd,EANee,IAqCeC,CAAS7F,IAEvC,OAAOnE,OAAOuJ,OACV,GACAD,EAxBc,SAAA1L,GAKtB,MAAO,CAAEqM,eAJcL,KAAKM,MAhED,GAiELtM,EAAKoL,EAAIY,KAAKO,IAAI,EAAGvM,EAAKoL,EAAI,GAAKL,GAAO,KAuBxDyB,CAAkBd,OAIjBe,GAAmB,SAAAnK,GAAE,cAAAS,OAAYT,IAEvC,SAASoK,GAAapK,GACzB,IAAMqK,EAAKtH,YAASuH,SAASC,cAAT,IAAA9J,OAA2B0J,GAAiBnK,MAC5DwK,KAAWH,EAAGI,kBACdC,WACI,kBAAML,EAAGI,gBAAgBJ,EAAGM,YAAc,EAAGN,EAAGO,aAAe,IAC/D,6BCrFCC,GAAmB,SAAA5I,GAAK,OAAIA,EAAM6I,UCnBlCC,GAAc,WACvB,IAEMjK,EAAG,gCAAAL,OADL,qHACK,gCACT,OAAO4G,wBACFC,KAAK,SAAAzG,GAAE,OAAIA,EAAG0G,IAAIC,SAASC,IAAI3G,KAC/BqH,MAAM,SAAAR,GAAK,OAAIC,QAAQC,IAAI,SAAUF,MCLjCqD,GAAyB,CAClCC,QAAS,GACTC,SAAU,KACVC,MAAM,GCIGC,GAAkB,iBAAO,CAClCjM,KDV0B,wCEOjBkM,GAAsB,CAAEnH,KAAM,GAAI/E,KADrB,qBAGpBmM,GAAyB,SAAAC,GAAiB,IAAdN,EAAcM,EAAdN,QAC9B,MAAuB,kBAAZA,EAGHO,EAAAC,EAAAC,cAAA,uBACYF,EAAAC,EAAAC,cAAA,QAAMC,MAAO,CAAEC,WAAY,MAAQX,EAAQ/G,MAAa,IADpE,aAMD+G,GAwBIY,eATS,SAAA5J,GAAS,IAAA6J,EFXL,SAAA7J,GAAK,OAAIA,EAAM8J,UAAYf,GEYfgB,CAAa/J,GAAzCgJ,EADqBa,EACrBb,QAASC,EADYY,EACZZ,SACjB,MAAO,CACHe,aAHyBH,EACFX,KAGvBe,gBAAiBjB,EACjBkB,iBAAkBjB,IAMtB,CACIkB,gBAAiBhB,IAHVS,CArBgB,SAAAQ,GAC3B,OACIb,EAAAC,EAAAC,cAACY,GAAAb,EAAD,CACIE,MAAO,CAAEY,OAAQ,OACjBpB,KAAMkB,EAAMJ,aACZhB,QAASO,EAAAC,EAAAC,cAACc,GAAD,CAAwBvB,QAASoB,EAAMH,kBAChDO,iBAAkBJ,EAAMF,iBACxBO,QAASL,EAAMD,wCCddO,GAAoB,WAAmC,IAAlCjP,EAAkCyH,UAAAF,OAAA,QAAAG,IAAAD,UAAA,GAAAA,UAAA,GAA3B,GAC/BhG,GAD0DgG,UAAAF,OAAA,QAAAG,IAAAD,UAAA,GAAAA,UAAA,GAAP,IAC9ByH,YAAclP,EAAKyB,KAE9C,QAASM,YAAUN,IAGV0N,GAAkB,SAAAnP,GAC3B,IAAKoP,KAASpP,GACV,OAAO,KAGX,OAAQA,EAAKyB,MACT,KAAKpB,IACD,OAAOL,EAAKqP,YAChB,KAAK/O,IACD,OAAON,EAAKsP,MAChB,KAAK/O,IACD,OAAOP,EAAKqG,IAChB,KAAK7F,IACD,OAAOR,EAAKuP,YAChB,KAAK9O,IACD,OAAOT,EAAKwP,WAChB,QACI,OACIxP,EAAKqP,aACLrP,EAAKsP,OACLtP,EAAKqG,KACLrG,EAAKuP,aACLvP,EAAKwP,YACL,KAQHC,GAAa,SAACxN,EAAQyN,EAAQC,GACjC1N,GAAUA,EAAO2N,OAIvB3N,EAAOmB,IAAMuM,EAAYE,QACzB5N,EAAO6N,kBAAmB,EAC1B7N,EAAO2D,WAAY,EACf+J,EAAYI,OACZ9N,EAAO8N,KAAOJ,EAAYI,MAE9B9N,EAAO2N,KAAKF,KAGHM,GAAQ,SAAAhQ,GAAI,OAAImP,GAAgBnP,GAAMsC,IACtC2N,GAAU,SAAAjQ,GAAI,OAAImP,GAAgBnP,GAAMwG,MAExC0J,GAAU,SAAClQ,EAAMmD,GAC1B,IAAM0M,EAAUvM,YAAWH,GACrBL,EAASjB,IAAY7B,EAAKyB,MAAMqB,OAAOkN,GAAMhQ,IAEnD,SAAA+C,OAAU8M,EAAV,KAAA9M,OAAqBD,IAGZ8M,GAAI,eAAA/B,EAAAzL,OAAA+N,EAAA,EAAA/N,CAAAgO,EAAArC,EAAAsC,KAAG,SAAAC,EAChBtQ,EACAuQ,EACAZ,EACAT,GAJgB,IAAAQ,EAAAjO,EAAAQ,EAAAuO,EAAA/I,UAAA,OAAA2I,EAAArC,EAAA0C,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,OAAAJ,EAAAjJ,OAAA,QAAAG,IAAA8I,EAAA,GAAAA,EAAA,GAKP,GAEHd,EAPUtN,OAAA4C,EAAA,EAAA5C,CAAA,GAQTmO,EARS,CASZ5D,GAAIF,GAAiBzM,EAAKsC,MAGxBb,EAAOyN,GAAclP,EAAKyB,KAC1BQ,EAASF,YAAUN,GAEzBgO,GAAWxN,EAAQyN,EAAQC,GAfX,wBAAAe,EAAAG,SAAAP,MAAH,gBAAAQ,EAAAC,EAAAC,EAAAC,GAAA,OAAApD,EAAAqD,MAAAC,KAAA1J,YAAA,GAkBJ2J,GAAK,eAAAvI,EAAAzG,OAAA+N,EAAA,EAAA/N,CAAAgO,EAAArC,EAAAsC,KAAG,SAAAgB,EAAMrR,GAAN,IAAAsR,EAAA,OAAAlB,EAAArC,EAAA0C,KAAA,SAAAc,GAAA,cAAAA,EAAAZ,KAAAY,EAAAX,MAAA,cAAAW,EAAAX,KAAA,EACapH,GAAiBwG,GAAMhQ,GAAOA,EAAKyB,KAAM,CACnEiI,OAAQ1J,EAAKyB,OAASlB,ITTI,IAAAwC,OAC3B2F,GAAgB,CAAEC,QAAQ,IAAQ3B,KAAK,MAC1C,uCAF8B,YAAAjE,OAGlBmG,GAAkB,CAC1BE,gBAAgB,EAChBC,aAAa,IALa,MSSmB,OAFhC,cACXiI,EADWC,EAAAC,KAAAD,EAAAE,OAAA,SAKVH,GALU,wBAAAC,EAAAV,SAAAQ,MAAH,gBAAAK,GAAA,OAAA7I,EAAAqI,MAAAC,KAAA1J,YAAA,GAQLkK,GAAS,SAAA3R,GAClB,IAAMiC,EAASF,YAAU/B,EAAKyB,MAE1BQ,GAAUA,EAAO0P,QACjB1P,EAAO0P,OAAOlF,GAAiBzM,EAAKsC,MAI/BsP,GAAU,SAAC5R,EAAMkP,GAC1B,IAAMjN,EAASF,YAAUmN,GAErBjN,GAAUA,EAAO2P,SACjB3P,EAAO2P,QAAQnF,GAAiBzM,EAAKsC,MAIhCuP,GAAyB,SAClCtB,EACAuB,EACA5C,GAEA,GAAI4C,IAAiBvR,KAAOuR,IAAiB5C,EAAY,CACrD,IAAM6C,GA3EgB1L,EA2EkBkK,GA1ExCyB,UAAY3L,EAAI2L,SAASC,KAAK,SAAAC,GAAE,OAAIA,EAAGC,MAAMC,SArCvB,cAiHtB,YAAyB1K,IAArBqK,EACO,KAGJM,YAAajQ,OAAA4C,EAAA,EAAA5C,CAAA,GACbmO,EACAwB,EAFY,CAGfC,cAAUtK,KApFQ,IAAArB,EAwF1B,OAAOgM,YAAa9B,IC1GX+B,GAAkB,SAAAvN,GAAK,MAAK,CACrCtD,KZ5B2B,kBY6B3BsD,UAGSwN,GAAyB,SAAAxN,GAAK,MAAK,CAC5CtD,KZhCkC,yBYiClCsD,UAQSyN,GAA0B,SAAAzN,GAAK,MAAK,CAC7CtD,KX3CkC,yBW4ClCsD,UAgBS0N,GAAiB,SAAAnQ,GAAE,sBAAAuL,EAAAzL,OAAA+N,EAAA,EAAA/N,CAAAgO,EAAArC,EAAAsC,KAAI,SAAAC,EAAOoC,EAAUC,GAAjB,IAAAC,EAAA,OAAAxC,EAAArC,EAAA0C,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAF,EAAAC,KAAA,EAAAD,EAAAE,KAAA,EAETrG,GAAkBjI,GAFT,cAEtBsQ,EAFsBlC,EAAAc,KAG5BkB,EAASG,GAAmBD,IAHAlC,EAAAe,OAAA,SAKrBqB,QAAQC,QAAQH,IALK,cAAAlC,EAAAC,KAAA,EAAAD,EAAAsC,GAAAtC,EAAA,SAO5BxG,QAAQC,IAAI,UAAZuG,EAAAsC,IAP4BtC,EAAAe,OAAA,SAAAf,EAAAsC,IAAA,yBAAAtC,EAAAG,SAAAP,EAAA,iBAAJ,gBAAAQ,EAAAC,GAAA,OAAAlD,EAAAqD,MAAAC,KAAA1J,YAAA,IAanBwL,GAA4B,SAAA3Q,GAAE,sBAAAuG,EAAAzG,OAAA+N,EAAA,EAAA/N,CAAAgO,EAAArC,EAAAsC,KAAI,SAAAgB,EAAOqB,EAAUC,GAAjB,IAAAO,EAAAC,EAAAnJ,EAAAhC,EAAA,OAAAoI,EAAArC,EAAA0C,KAAA,SAAAc,GAAA,cAAAA,EAAAZ,KAAAY,EAAAX,MAAA,cAC3C8B,EAASH,IAAuB,IAE1BW,EAAkBlG,WAAW,WAC/B,IAAMoG,EAAgB/N,YAASD,EAAkBuN,IAAYrQ,IACxDmE,YACDyB,GAAsByK,MAAeS,IACrCzF,GAAoBnH,KAAO4M,EAE3BV,EHlFuC,CAC/CjR,KDNqC,4BCOrCsD,MGiFsC,CACtBwI,QAASI,GACTF,MAAM,OAInB,KAEG0F,EAAY,SAAAnL,GACd,IC9FkC7D,EAAUU,ED8FtCwO,EAAkBnN,EAAoB8B,GAAU,GAkCtD,OAhCA0K,EACIY,GAAoB7H,GAAU4H,EAAgB/L,kBCjGhBnD,EDoGRG,EAAiBqO,KCpGC9N,EDoGYvC,ECnG5DiR,aAAaC,QAAb,2BAAAzQ,OAAgDoB,GAAYU,GDsGxDwO,EAAgB/L,eAAemM,QAAQ,SAAAzT,GACnC,OAAQA,EAAKyB,MACT,KAAKpB,IACL,KAAKC,IACL,KAAKC,IACL,KAAKC,IACL,KAAKC,IACDiS,EAASF,GAAwBrD,GAAgBnP,KACjD,MACJ,KAAKc,IACD4R,EEvGuB,eAAA7E,EAAAzL,OAAA+N,EAAA,EAAA/N,CAAAgO,EAAArC,EAAAsC,KAAI,SAAAC,EAAMoC,GAAN,IAAAtF,EAAAsG,EAAA,OAAAtD,EAAArC,EAAA0C,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAF,EAAAC,KAAA,EAAAD,EAAAE,KAAA,EAEhBvD,KAFgB,cAEjCD,EAFiCsD,EAAAc,KAG/BkC,EAAyBtG,EAAzBsG,qBAH+BhD,EAAAe,OAAA,SAKhCiB,EAV2B,CACtCjR,KRN6B,oBQO7BsD,MAQqC2O,KALM,cAAAhD,EAAAC,KAAA,EAAAD,EAAAsC,GAAAtC,EAAA,SAAAA,EAAAe,OAAA,UAV9B9J,EAiBM,eAjBEsC,EAiBHyG,EAAAsC,GAhBlB9I,QAAQC,IAAR,mBAAApH,OAA+B4E,EAA/B,MAAA5E,OAA0CkH,IACnCA,IAQoC,yBAAAyG,EAAAG,OAV/B,IAAClJ,EAAQsC,GAUsBqG,EAAA,iBAAJ,gBAAAQ,GAAA,OAAAjD,EAAAqD,MAAAC,KAAA1J,YAAA,OF8GnCiL,EAASJ,GAAgBhQ,IAEzBoQ,EAASH,IAAuB,IAEhCoB,aAAaT,GAEbR,EHvH8B,CAClCjR,KDV0B,mBIkIfuG,GAGLgC,EAAU,SAAAC,GAEZ,OADAC,QAAQC,IAAI,UAAWF,GAChBA,GA1DgCsH,EAAAZ,KAAA,EAAAY,EAAAX,KAAA,EA8DhB8B,EAASD,GAAenQ,IA9DR,cA8DjC0F,EA9DiCuJ,EAAAC,KAAAD,EAAAE,OAAA,SAgEhC0B,EAAUnL,IAhEsB,eAAAuJ,EAAAZ,KAAA,GAAAY,EAAAyB,GAAAzB,EAAA,SAAAA,EAAAE,OAAA,SAkEhCzH,EAAOuH,EAAAyB,KAlEyB,yBAAAzB,EAAAV,SAAAQ,EAAA,kBAAJ,gBAAAL,EAAAC,GAAA,OAAApI,EAAAqI,MAAAC,KAAA1J,YAAA,yBG/D9BmM,GAA+B,GAC/BC,GAAsB,CAC/BvR,GAAI,GACJkE,KAAM,GACNW,OAAQ,GACRT,YAAa,GACbY,eAAgB,IAmFPwM,GAAwB,SAAAvP,GAAK,OAAIA,EAAMwP,eAIvCC,GAAgB,SAAAzP,GAAK,OAAK8D,KAAQ9D,EAAMwP,gBAQxCE,GAAyB,SAAA1P,GAAK,OACvCc,YAASyO,GAAsBvP,IAAQ+C,gBCjH9B4M,GAAkC,GAwBlCC,GAA0B,SAAA5P,GAAK,OAAIA,EAAM6P,iBCvBzCC,GAA6B,GA8B7BC,GAAsB,SAAA/P,GAAK,OAAIA,EAAMgQ,aAErCC,GAAkB,SAAAjQ,GAAK,OAAInC,OAAOqS,KAAKH,GAAoB/P,KCrB3DmQ,GAAqB,SAAApS,GAAE,MAAK,CACrCb,KDd8B,qBCe9Ba,OCVSqS,GAAyB,SAAArS,GAAE,MAAK,CACzCb,KHRmC,0BGSnCa,iBCRE0H,GAAU,SAAAC,GAAK,OAAIC,QAAQC,IAAI,UAAWF,IAE1C2K,GAAgB,SAAChP,EAAWO,GAAS,IAC/BK,EAAsCL,EAAtCK,KAAME,EAAgCP,EAAhCO,YAAaY,EAAmBnB,EAAnBmB,eAQ3B,OANA1B,EAAUY,KAAOA,EACjBZ,EAAUc,YAAcA,EACxBd,EAAU0B,eAAiBA,EAAejB,IAAI,SAAArG,GAAI,OAC9CoC,OAAOuJ,OAAO,GAAI3L,EAAM,CAAE6U,MAAO7U,EAAKmL,EAAG2J,OAAQ9U,EAAKoL,MAGnDxF,EAAUmP,OAAOnL,KAAK,SAAAoL,GAAG,OAAIA,EAAIC,SAASC,OAGxCC,GAAkB,SAAAhP,GAC3B,OAAOwD,wBACFC,KAAK,SAAAzG,GACF,OAAOA,EAAGqH,OAAOrF,WACZ4E,IAAI5D,EAAK7D,IACTsH,KAAK,SAAAhE,GAAS,OAAIgP,GAAchP,EAAWO,OAEnDsE,MAAMT,KAGFoL,GAAgB,SAAAjP,GACzB,OAAOwD,wBAAcC,KAAK,SAAAzG,GACtB,IAAMyC,EAAYzC,EAAGqH,OAAOrF,WAAWkQ,SAEvC,OAAOT,GAAchP,EAAWO,MCqC3BmP,GAAqB,SAAAtV,GAC9B,IAAMyB,EAAOzB,EAAKyB,YACXzB,EAAKyB,KACZ,IAAM8T,EAAe1T,IAAYJ,GAAMe,SAEvC,MAAO,CACHf,KN/D0B,qBMgE1BsD,MAAM3C,OAAA4C,EAAA,EAAA5C,QAAA6C,EAAA,EAAA7C,CAAA,CACFE,GAAIkT,yBACJ/T,QACC8T,EAAevV,EAAKyV,SAClBzK,MAKF0K,GAAwB,SAAA1V,GAAI,MAAK,CAC1CyB,KNxEiC,wBMyEjCsD,MAAO/E,IAGE2V,GAAwB,SAAA5Q,GAAK,MAAK,CAC3CtD,KN9EiC,wBM+EjCsD,UCvDS8N,GAAqB,SAAA1N,GAAU,MAAK,CAC7C1D,KvBtB0B,iBuBuB1BsD,MAAO6Q,YAAa1P,EAAoBf,MAG/B0Q,GAAwB,SAAChR,EAAa8F,GAAd,MAA6B,CAC9DlJ,KvB1BiC,wBuB2BjCoD,YAAaA,EACbE,MAAO4F,IASE2I,GAAsB,SAAAvO,GAAK,MAAK,CACzCtD,KvBpC+B,sBuBqC/BsD,UAKS+Q,GAAmB,iCAAAjI,EAAAzL,OAAA+N,EAAA,EAAA/N,CAAAgO,EAAArC,EAAAsC,KAAM,SAAAC,EAAMoC,GAAN,IAAAqD,EAAA,OAAA3F,EAAArC,EAAA0C,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAF,EAAAE,KAAA,ElBrDlCjH,wBACKC,KAAK,SAAAzG,GAAE,OACJA,EAAGqH,OAAO5E,UAAU7F,KAAK,CACrB2J,OAAQ,CACJY,KAAqBtD,KAAK,KAC1B,sBACFA,KAAK,KACPgP,OAAQ,YAGfvL,MAAMT,IkB2CuB,OAC5B+L,EAD4BrF,EAAAc,KAElCkB,GA/B2BvN,EA+BF4Q,EAAWE,UA/BM,CAC1CxU,KvBlB0B,iBuBmB1BsD,MAAO6Q,YAAa1P,EAAoBf,OA2BN,wBAAAuL,EAAAG,OA7BP,IAAA1L,GA6BOmL,MAAN,gBAAAQ,GAAA,OAAAjD,EAAAqD,MAAAC,KAAA1J,YAAA,IC1CjBD,eAAgB,CAC3B0O,SAVa,WAAmD,IAAlD3R,EAAkDkD,UAAAF,OAAA,QAAAG,IAAAD,UAAA,GAAAA,UAAA,GAFvB,EAEYE,EAAWF,UAAAF,OAAA,EAAAE,UAAA,QAAAC,EAChE,OAAQC,EAAOlG,MACX,IANgC,2BAO5B,OAAOmG,YAAgBD,EAAO5C,MALG,GAMrC,QACI,OAAOR,MAkBN4R,GAAyB,SAAA5R,GAAK,OAJT,SAAAA,GAAK,OAAIA,EAAM6R,WAK7CC,CAAmB9R,GAAO2R,UC5BxBI,GAAM,iBAENC,GAAY,eAAA1I,EAAAzL,OAAA+N,EAAA,EAAA/N,CAAAgO,EAAArC,EAAAsC,KAAG,SAAAC,EAAMnN,GAAN,OAAAiN,EAAArC,EAAA0C,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAF,EAAAE,KAAA,EAAkBzN,EAAGqT,YAAYC,UAAUC,IAH9C,aAGG,cAAAhG,EAAAe,OAAA,SAAAf,EAAAc,MAAA,wBAAAd,EAAAG,SAAAP,MAAH,gBAAAQ,GAAA,OAAAjD,EAAAqD,MAAAC,KAAA1J,YAAA,GAEZkP,GAAY,eAAA9N,EAAAzG,OAAA+N,EAAA,EAAA/N,CAAAgO,EAAArC,EAAAsC,KAAG,SAAAgB,EAAOlO,EAAIoT,GAAX,OAAAnG,EAAArC,EAAA0C,KAAA,SAAAc,GAAA,cAAAA,EAAAZ,KAAAY,EAAAX,MAAA,WACjB2F,EADiB,CAAAhF,EAAAX,KAAA,eAAAW,EAAAX,KAAA,EAELzN,EAAGqT,YAAYC,UAAU1M,IAPvB,aAKG,OAAAwH,EAAAyB,GAAAzB,EAAAC,KAAAD,EAAAX,KAAA,sBAAAW,EAAAX,KAAA,EAGLzN,EAAGqT,YAAYC,UAAUpB,OARvB,aAKG,OAAA9D,EAAAyB,GAAAzB,EAAAC,KAAA,cAAAD,EAAAE,OAAA,SAAAF,EAAAyB,IAAA,yBAAAzB,EAAAV,SAAAQ,MAAH,gBAAAN,EAAAC,GAAA,OAAAnI,EAAAqI,MAAAC,KAAA1J,YAAA,GAKLmP,GAAoB,eAAA3N,EAAA7G,OAAA+N,EAAA,EAAA/N,CAAAgO,EAAArC,EAAAsC,KAAG,SAAAwG,IAAA,IAAA1T,EAAA2T,EAAA,OAAA1G,EAAArC,EAAA0C,KAAA,SAAAsG,GAAA,cAAAA,EAAApG,KAAAoG,EAAAnG,MAAA,cAAAmG,EAAAnG,KAAA,EACfjH,wBADe,cAC1BxG,EAD0B4T,EAAAvF,KAAAuF,EAAA/D,GAER2D,GAFQI,EAAAC,GAEK7T,EAFL4T,EAAAnG,KAAA,EAEe2F,GAAapT,GAF5B,cAAA4T,EAAAE,GAAAF,EAAAvF,KAAAuF,EAAAnG,KAAA,MAAAmG,EAAA/D,IAAA+D,EAAAC,GAAAD,EAAAE,IAAA,WAE1BH,EAF0BC,EAAAvF,OAGjBsF,EAAUrC,MAAQqC,EAAUrC,KAAKxC,KAAK,SAAAiF,GAAG,OAAIA,IAAQZ,MAHpC,CAAAS,EAAAnG,KAAA,gBAAAmG,EAAAnG,KAAA,GAMfkG,EAAU/M,IAAIuM,IANC,eAAAS,EAAAtF,OAAA,SAAAsF,EAAAvF,MAAA,eAAAuF,EAAAnG,KAAA,GAQtBuG,GDf+B,ECesBL,GAR/B,eAS5B5M,QAAQC,IACJ,6DAVwB4M,EAAAtF,OAAA,SDPS,GCOT,yBAAAsF,EAAAlG,SAAAgG,MAAH,yBAAA5N,EAAAiI,MAAAC,KAAA1J,YAAA,GAgBpB0P,GAAqB,eAAAhO,EAAA/G,OAAA+N,EAAA,EAAA/N,CAAAgO,EAAArC,EAAAsC,KAAG,SAAA+G,EAAOC,EAAMP,GAAb,IAAA3T,EAAA,OAAAiN,EAAArC,EAAA0C,KAAA,SAAA6G,GAAA,cAAAA,EAAA3G,KAAA2G,EAAA1G,MAAA,cAAA0G,EAAA1G,KAAA,EAChBjH,wBADgB,UAC3BxG,EAD2BmU,EAAA9F,KAAA8F,EAAAtE,GAEtB8D,EAFsBQ,EAAAtE,GAAA,CAAAsE,EAAA1G,KAAA,eAAA0G,EAAA1G,KAAA,EAEF+F,GAAaxT,EAAIoT,IAFf,OAAAe,EAAAtE,GAAAsE,EAAA9F,KAAA,OAAA8F,EAAAtE,GAI9BuE,IAAIjB,GAAKe,GAJqB,yBAAAC,EAAAzG,SAAAuG,MAAH,gBAAAnG,EAAAS,GAAA,OAAAvI,EAAA+H,MAAAC,KAAA1J,YAAA,GCxBrB+P,GAA0B,SAAAH,GAAI,MAAK,CAC5C5V,KFFoC,2BEGpCsD,MAAOsS,uDCJEI,GAAqB,CAC9BC,GAAIC,oBAAiBD,GACrBE,GAAID,oBAAiBC,IAgBZC,GAAiB,SAAAtT,GAAK,OAAIA,EAAMuT,YClBhCC,GAAmB,CAC5BC,cAAe,aACfC,0BAA2B,iBAC3BC,+BAAgC,QAChCC,oBAAqB,cACrB/T,SAAU,KACVgU,qBAAsB,IAqBbC,GAAe,SAAA9T,GAAK,OAAIA,EAAM+T,UAE9BC,GAAkC,SAAAhU,GAAK,OAChD8T,GAAa9T,GAAO4T,qBC3BXK,GAAkB,SAAAV,GAAU,MAAK,CAC1CrW,KFL0B,iBEM1BsD,MAAO0T,KAAMC,KAAOZ,EAAY,CAAC,SAAAxR,GAAC,OAAIA,EAAEE,KAAKmS,iBAAiB,8BCD5DC,GAAS,CACXC,SAAU,CACNC,MAAOC,IAAOC,QACdC,OAAQ,UACRC,SAAU,GACVC,WAAY,EACZC,UAAW,CACPC,eAAgB,cAGxBC,SAAU,CACNH,WAAY,EACZL,MAAOC,IAAOQ,QACdL,SAAU,GACVD,OAAQ,gBAkBDO,wBAAWZ,GAAXY,CAde,SAAA3L,GAAiD,IAA9C4L,EAA8C5L,EAA9C4L,QAASC,EAAqC7L,EAArC6L,YAAaC,EAAwB9L,EAAxB8L,QAASL,EAAezL,EAAfyL,SAC5D,OACIxL,EAAAC,EAAAC,cAAA,OAAKC,MAAO,CAAE2L,UAAW,WACpBN,EACGxL,EAAAC,EAAAC,cAAA,OAAK6L,UAAWF,EAAQL,UAAW5W,IAAKC,EAAE,cAE1CmL,EAAAC,EAAAC,cAAA,OAAK6L,UAAWF,EAAQd,SAAUY,QAASA,GACtCC,EAAchX,IAAKC,EAAE,aAAeD,IAAKC,EAAE,iBC5BnDmX,GAAgB,EAOhBC,GAAgB,SAAA1C,GACzB,OAVkC,GAU3BA,GAGE2C,GAAuB,SAAAlF,GAChC,OAAO9I,KAAKC,OACP6I,EARLmF,IAPkC,KAmBzBC,GAAe,SAAA7C,GACxB,OAhB4B,GAgBF8C,GAAoB9C,GAAM,IAG3C8C,GAAsB,SAAA9C,GAC/B,OAAO0C,GAAc1C,GAjBrB4C,yBCAEG,eACF,SAAAA,EAAYzL,GAAO,IAAA0L,EAAA,OAAAjY,OAAAkY,EAAA,EAAAlY,CAAA+O,KAAAiJ,IACfC,EAAAjY,OAAAmY,EAAA,EAAAnY,CAAA+O,KAAA/O,OAAAoY,EAAA,EAAApY,CAAAgY,GAAAK,KAAAtJ,KAAMxC,KAOV+L,YAAc,WACVL,EAAKM,SAAS,CAAEC,UAAU,IAC1BC,OAAOC,iBAAiB,YAAaT,EAAKU,QAC1CF,OAAOC,iBAAiB,UAAWT,EAAKW,YAXzBX,EAcnBU,OAAS,SAAAE,GACLA,EAAMC,iBACND,EAAME,kBAEN,IAAMC,EAAYH,EAAMI,QAGpBhB,EAAK1L,MAAM2M,gBACXF,IAAcf,EAAK1L,MAAMmG,QACzBsG,EAAY,GAEZG,sBAAsB,WAClBlB,EAAK1L,MAAM2M,eAAeF,MA1BnBf,EA+BnBW,UAAY,WACRX,EAAKM,SAAS,CAAEC,UAAU,IAC1BC,OAAOW,oBAAoB,YAAanB,EAAKU,QAC7CF,OAAOW,oBAAoB,UAAWnB,EAAKW,WAEvCX,EAAK1L,MAAMqM,WACXX,EAAK1L,MAAMqM,aAlCfX,EAAK9V,MAAQ,CACTqW,UAAU,GAJCP,kFA0Cf,MAA4C,oBAA9BlJ,KAAKxC,MAAM2M,eACrBxN,EAAAC,EAAAC,cAAA,OACI6L,UAAWF,KAAQ8B,WACnBxN,MAAO,CAAE6G,OAhDE,GAiDX4G,YAAavK,KAAKuJ,cAEtB,sCAIJ,IAAM5F,EAAS9I,KAAKO,IAAI4E,KAAKxC,MAAMmG,OAAQ,GAvDxB,EAyDb6G,EAAYvZ,OAAOuJ,OACrB,CACImJ,SACA8G,ID7DgB,GC8DhBC,gBAAiB1K,KAAKxC,MAAMmN,SACtB/C,IAAOgD,UACPhD,IAAOiD,MACbC,cAhEW,GAmEf9K,KAAK5M,MAAMqW,SAAW,CAAEsB,WAAY,QAAW,IAGnD,OACIpO,EAAAC,EAAAC,cAAA,OAAKC,MAAO0N,EAAW9B,UAAWF,KAAQwC,MACtCrO,EAAAC,EAAAC,cAAA,OAAK6L,UAAWF,KAAQlE,SAAUtE,KAAKxC,MAAMyN,UAC5CjL,KAAKkL,2BAvEGC,IAAMC,WA8G/BnC,GAAWoC,aAAe,CACtBlB,eAAgB,KAChBN,UAAW,MAGAZ,0CC9GAqC,GAZE,SAAA5O,GAAA,IAAGgM,EAAHhM,EAAGgM,UAAH,OACb/L,EAAAC,EAAAC,cAAA,OACI6L,UAAWA,EACX6C,MAAM,6BACNC,QAAQ,aAER7O,EAAAC,EAAAC,cAAA,QAAM1H,EAAE,gBAAgBsW,KAAK,SAC7B9O,EAAAC,EAAAC,cAAA,QAAM1H,EAAE,6FACRwH,EAAAC,EAAAC,cAAA,QAAM1H,EAAE,gBAAgBsW,KAAK,WCRxBC,GAAqB,eAAAhP,EAAAzL,OAAA+N,EAAA,EAAA/N,CAAAgO,EAAArC,EAAAsC,KAAG,SAAAC,EAAOwM,EAAWxa,GAAlB,IAAAa,EAAAC,EAAA,OAAAgN,EAAArC,EAAA0C,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAF,EAAAE,KAAA,EAChBjH,wBADgB,OAC3BxG,EAD2BuN,EAAAc,KAE3BpO,EAF2B,4BAAAL,OAEO+Z,EAFP,cAAA/Z,OAE6BT,GAE9Da,EAAG0G,IAAIC,SAASc,KAAKxH,GAJY,wBAAAsN,EAAAG,SAAAP,MAAH,gBAAAQ,EAAAC,GAAA,OAAAlD,EAAAqD,MAAAC,KAAA1J,YAAA,GCQ5BmR,GAAS,CACXmE,KAAM,CACFC,OAAQ,OAEZ9c,KAAM,CACF4Y,MAAOC,IAAOkE,QACdC,QAAS,eACT7D,eAAgB,OAChB8D,cAAe,OAEnBC,KAAM,CACFtI,OAAQ,OACRuI,UAAW,MACXxI,MAAO,QAEX7M,SAAU,CACN4U,KAAM7D,IAAOiD,OAEjBsB,WAAY,CACRV,KAAM7D,IAAOC,UA4CNQ,wBAAWZ,GAAXY,CAxCkB,SAAA3L,GAM3B,IALFhI,EAKEgI,EALFhI,QACAmC,EAIE6F,EAJF7F,SACAuV,EAGE1P,EAHF0P,MACA1Y,EAEEgJ,EAFFhJ,YACA8U,EACE9L,EADF8L,QAEM6D,EAAY,CACdxV,WACA6R,UAAWF,EAAQoD,MAGvB,GAAIlX,EAAS,CACT,IAAM4X,EAAgBzV,EAAW2R,EAAQ3R,SAAW2R,EAAQ2D,WAC5DE,EAAUJ,KACNtP,EAAAC,EAAAC,cAAC0P,GAAD,CAAU7D,UAAS,GAAA9W,OAAK4W,EAAQyD,KAAb,KAAAra,OAAqB0a,KAIhD,OACI3P,EAAAC,EAAAC,cAAC2P,GAAA,EAAD,CACI9D,UAAWF,EAAQzZ,KACnB0d,GAAE,IAAA7a,OAAM8B,GACR4U,QAASoE,KACL,kBAAMhB,GAAsB,iBAAkBhY,IAC9C,MAGJiJ,EAAAC,EAAAC,cAAC8P,GAAA,EAASN,EAAYD,MC9CnBQ,GAZO,kBAClBjQ,EAAAC,EAAAC,cAAA,OACI0O,MAAM,6BACN7H,MAAM,KACNC,OAAO,KACP8H,KAAM7D,IAAOiF,QACbrB,QAAQ,aAER7O,EAAAC,EAAAC,cAAA,QAAM1H,EAAE,0QCID2X,GAZG,SAAApQ,GAAA,IAAGgM,EAAHhM,EAAGgM,UAAH,OACd/L,EAAAC,EAAAC,cAAA,OACI6L,UAAWA,EACX+C,KAAM7D,IAAOmF,QACbxB,MAAM,6BACNC,QAAQ,aAER7O,EAAAC,EAAAC,cAAA,QAAM1H,EAAE,0GACRwH,EAAAC,EAAAC,cAAA,QAAM1H,EAAE,gBAAgBsW,KAAK,gCCKtBuB,GAVY,SAAAtQ,GAAA,IAAGuQ,EAAHvQ,EAAGuQ,QAAH,OACvBtQ,EAAAC,EAAAC,cAAA,UAAQ6L,UAAWF,KAAQ0E,OAAQ5E,QAAS2E,GACxCtQ,EAAAC,EAAAC,cAACsQ,GAAD,CAAWzE,UAAWF,KAAQyD,KAAMtE,MAAM,aCDrCyF,GAAY,CACrB,CAAEjc,GAAI,MAAOyC,MAAO,aACpB,CAAEzC,GAAI,KAAMyC,MAAO,iBACnB,CAAEzC,GAAI,SAAUyC,MAAO,sBAYdyZ,GAAuC,GACvCC,GAAwCF,GAAU,GAAGjc,GAuCnDkF,eAAgB,CAC3BhB,KArCS,WAA0D,IAAzDjC,EAAyDkD,UAAAF,OAAA,QAAAG,IAAAD,UAAA,GAAAA,UAAA,GAAjD+W,GAAsC7W,EAAWF,UAAAF,OAAA,EAAAE,UAAA,QAAAC,EACnE,OAAQC,EAAOlG,MACX,IAzBkC,6BA0B9B,OAAOmG,YACHD,EAAO5C,MACPyZ,IAER,QACI,OAAOja,IA8BfsC,MA1BU,WAA2D,IAA1DtC,EAA0DkD,UAAAF,OAAA,QAAAG,IAAAD,UAAA,GAAAA,UAAA,GAAlDgX,GAAuC9W,EAAWF,UAAAF,OAAA,EAAAE,UAAA,QAAAC,EACrE,OAAQC,EAAOlG,MACX,IApCmC,8BAqC/B,OAAOmG,YACHD,EAAO5C,MACPyZ,IAER,QACI,OAAOja,IAmBfma,MAfU,WAA2D,IAA1Dna,EAA0DkD,UAAAF,OAAA,QAAAG,IAAAD,UAAA,GAAAA,UAAA,GApC/D,WAoCoDE,EAAWF,UAAAF,OAAA,EAAAE,UAAA,QAAAC,EACrE,OAAQC,EAAOlG,MACX,IA/CmC,8BAgD/B,OAAOmG,YACHD,EAAO5C,MAxCb,YA2CF,QACI,OAAOR,MAYNoa,GAA2B,SAAApa,GAAK,OAAIA,EAAMqa,kBAI1CC,GAAiB,SAAAta,GAAK,OAAIoa,GAAyBpa,GAAOiC,MC9D1DsY,GAAgB,GAChBC,GAAiB,GAExBnG,GAAS,CACXoG,YAAa,CACT9F,SAAU,OACVrE,MAAO,QACPC,OAAQ,OACR8G,IAAK,QAETqD,WAAY,CACRnG,MAAOC,IAAOC,QACdnE,MAAO,OACPC,OAAQ,SAIHoK,GAAb,SAAAC,GACI,SAAAD,EAAYvQ,GAAO,IAAA0L,EAAA,OAAAjY,OAAAkY,EAAA,EAAAlY,CAAA+O,KAAA+N,IACf7E,EAAAjY,OAAAmY,EAAA,EAAAnY,CAAA+O,KAAA/O,OAAAoY,EAAA,EAAApY,CAAA8c,GAAAzE,KAAAtJ,KAAMxC,KAaVyQ,eAAiB,SAAAnE,GACbA,EAAMC,iBAENb,EAAK1L,MAAM0Q,aAAapE,EAAMqE,OAAOva,QAjBtBsV,EAoBnBkF,YAAc,SAAAtE,GACV,OAAQA,EAAMuE,SACV,KAAKV,GACDzE,EAAK1L,MAAM8Q,kBACX,MACJ,KAAKV,GACD1E,EAAK1L,MAAM0Q,iBAvBnBhF,EAAK9V,MAAQ,CACTQ,MAAOyZ,IAJInE,EADvB,OAAAjY,OAAAsd,EAAA,EAAAtd,CAAA8c,EAAAC,GAAA/c,OAAAud,EAAA,EAAAvd,CAAA8c,EAAA,EAAAhI,IAAA,4BAAAnS,MAAA,SAS8B6a,GACtBzO,KAAKwJ,SAAS,CACV5V,MAAO6a,EAAUpZ,SAX7B,CAAA0Q,IAAA,SAAAnS,MAAA,WAkCa,IAAA8a,EACmC1O,KAAKxC,MAArCgL,EADHkG,EACGlG,QAASnT,EADZqZ,EACYrZ,KAAM6Y,EADlBQ,EACkBR,aAEjBS,EACFhS,EAAAC,EAAAC,cAAC+R,GAAAhS,EAAD,CAAgBiS,SAAS,SACrBlS,EAAAC,EAAAC,cAACiS,GAAAlS,EAAD,CAAY8L,UAAWF,EAAQsF,cAIjCiB,EACO,KAAT1Z,GAAwB,OAATA,EACXsH,EAAAC,EAAAC,cAAC+R,GAAAhS,EAAD,CAAgBiS,SAAS,OACrBlS,EAAAC,EAAAC,cAACmS,GAAD,CAAa/B,QAAS,kBAAMiB,QAEhC,KAER,OACIvR,EAAAC,EAAAC,cAACoS,GAAArS,EAAD,CACI8L,UAAWF,EAAQqF,YACnBqB,YAAa3d,IAAKC,EAAE,0BACpBmd,eAAgBA,EAChBI,aAAcA,EACdnb,MAAOoM,KAAK5M,MAAMQ,MAClBub,SAAUnP,KAAKiO,eACfmB,QAASpP,KAAKoO,kBA1D9BL,EAAA,CAA4B3C,aAqE5B2C,GAAO1C,aAAe,CAClBhW,KAAM,GACN6Y,aAAcmB,SAASC,WAGZjH,4BAAWZ,GAAXY,CAAmB0F,yBC3ErBwB,GAAgB,GAEhBC,GAAb,SAAAxB,GAAA,SAAAwB,IAAA,IAAAC,EAAAvG,EAAAjY,OAAAkY,EAAA,EAAAlY,CAAA+O,KAAAwP,GAAA,QAAAE,EAAApZ,UAAAF,OAAAuZ,EAAA,IAAAC,MAAAF,GAAAG,EAAA,EAAAA,EAAAH,EAAAG,IAAAF,EAAAE,GAAAvZ,UAAAuZ,GAAA,OAAA3G,EAAAjY,OAAAmY,EAAA,EAAAnY,CAAA+O,MAAAyP,EAAAxe,OAAAoY,EAAA,EAAApY,CAAAue,IAAAlG,KAAAvJ,MAAA0P,EAAA,CAAAzP,MAAApO,OAAA+d,MACIvc,MAAQ,CACJ8S,KAAMyC,IAFdO,EAKI4G,yBAA2B,SAAA5J,GACvBgD,EAAKM,SAAS,CAAEtD,OAAMqC,YAAarC,IAASqJ,MANpDrG,EAiBIiB,eAAiB,SAAAF,GACb,IAAM8F,EAAiB9F,EAAY,GAC7B+F,EAAUnV,KAAKO,IACjBuN,GACAE,GAAqBkH,IAGzB,GAAIC,IAAY9G,EAAK9V,MAAM8S,KAAM,CAC7B,IAAM+J,EAAcpV,KAAKqV,IAAIF,EAAST,IAEtCrG,EAAK1L,MAAM2M,eAAe8F,KA3BtC/G,EA+BIW,UAAY,WACR,OAAO7D,GAAsBkD,EAAK9V,MAAM8S,OAhChDgD,EAmCIiH,kBAAoB,WAChB,IAAMjK,EACFgD,EAAK9V,MAAM8S,OAASqJ,GACdrG,EAAK1L,MAAMuH,SACXwK,GAEVrG,EAAKM,SAAS,CAAEtD,OAAMqC,aAAcW,EAAK9V,MAAMmV,eAzCvDW,EA4CIkH,kBAAoB,WAChBlH,EAAK1L,MAAM6S,QAAQC,KAAnB,IAAA1e,OAA4BsX,EAAK1L,MAAMxJ,WAAW,GAAG7C,MA7C7D+X,EAAA,OAAAjY,OAAAsd,EAAA,EAAAtd,CAAAue,EAAAxB,GAAA/c,OAAAud,EAAA,EAAAvd,CAAAue,EAAA,EAAAzJ,IAAA,oBAAAnS,MAAA,WAUQoM,KAAK8P,yBAAyB9P,KAAKxC,MAAMuH,YAVjD,CAAAgB,IAAA,4BAAAnS,MAAA,SAa8B6a,GACtBzO,KAAK8P,yBAAyBrB,EAAU1J,YAdhD,CAAAgB,IAAA,SAAAnS,MAAA,WAgDa,IAAA8a,EACwD1O,KAAKxC,MAA1DxJ,EADH0a,EACG1a,WAAYqB,EADfqZ,EACerZ,KAAMkb,EADrB7B,EACqB6B,WAAYC,EADjC9B,EACiC8B,mBAEhCC,EAAWzQ,KAAK5M,MAAMmV,YACtBgH,GACAvP,KAAK5M,MAAM8S,KACXwK,EAAmB1H,GAAoByH,GACvCE,EAAsB,CACxBC,QAAO,GAAAhf,OVnFqB,GUmFrB,gBACPif,UAAW7Q,KAAK5M,MAAMmV,YAAc,OAAS,SAC7C5E,OAAQiF,GAAc6H,GVrFM,IUwFhC,OACI9T,EAAAC,EAAAC,cAACiU,GAAD,CACInN,OAAQ+M,EACRvG,eAAgBnK,KAAKmK,eACrBN,UAAW7J,KAAK6J,UAChBc,UAAU,GAEVhO,EAAAC,EAAAC,cAAA,OAAKC,MAAO6T,GACRhU,EAAAC,EAAAC,cAAA,OAAK6L,UAAWF,KAAQuI,cACpBpU,EAAAC,EAAAC,cAAC2P,GAAA,EAAD,CACI1P,MAAO,CACHiP,QAAS,eACT7D,eAAgB,OAChB8I,YAAa,IAEjBvE,GAAI,QAEJ9P,EAAAC,EAAAC,cAACoU,GAAD,OAEJtU,EAAAC,EAAAC,cAACqU,GAAD,CACI7b,KAAMA,EACN6Y,aAAcsC,EACdlC,gBAAiBtO,KAAKoQ,qBAG7Bla,YAAQlC,GAAYkB,IAAI,SAAAT,GAAS,OAC9BkI,EAAAC,EAAAC,cAACsU,GAAD,CACIpL,IAAKtR,EAAUtD,GACfib,MAAO3X,EAAUa,YACjBZ,QAASD,EAAUC,QACnBhB,YAAae,EAAUtD,GACvB0F,SAAUpC,EAAUtD,KAAOof,OAIvC5T,EAAAC,EAAAC,cAACuU,GAAD,CACI9I,QAAStI,KAAKmQ,kBACd5H,YAAavI,KAAK5M,MAAMmV,YACxBJ,SAAUnI,KAAKxC,MAAMuH,WAAawK,UAnGtDC,EAAA,CAAmCpE,aAiH7BiG,GAAqB,CACvBlH,eAAgB9D,GAChBmK,mBCzI2B,SAAA5c,GAAK,MAAK,CACrCtD,KHNsC,6BGOtCsD,WD8JW0d,gBACXtU,YAjCoB,SAAA5J,GAAK,MAAK,CAC9BY,WAAYI,EAAkBhB,GAC9BiC,KAAMqY,GAAeta,GACrB2R,SAAUC,GAAuB5R,GACjCmd,WAAYzZ,GAAe1D,KA+BvBie,GAxBW,SAACE,EAAYC,EAAeC,GAC3C,IAAMzd,EAAa/C,OAAOsD,OAAOL,YAASqd,EAAWvd,aAC/C0d,EAAoB5c,IACtBd,EAAWQ,OAAO,SAAAW,GAAC,OACfA,EAAEG,YAAYkS,cAAcvG,SAASsQ,EAAWlc,KAAKmS,iBAEzD,MACA,eAGJ,OAAOvW,OAAA4C,EAAA,EAAA5C,CAAA,GACAsgB,EACAE,EACAD,EAHP,CAIIxd,WAAU,GAAApC,OAAAX,OAAA4D,EAAA,EAAA5D,CACHygB,EAAkBld,OAAO,SAAAW,GAAC,OAAIA,EAAET,WAD7BzD,OAAA4D,EAAA,EAAA5D,CAEHygB,EAAkBld,OAAO,SAAAW,GAAC,OAAKA,EAAET,eAM5CsI,CAIEwS,KEzJSxS,eAJS,SAAA5J,GAAK,MAAK,CAC9B2R,SAAUC,GAAuB5R,KAGtB4J,CAXiB,SAAAQ,GAC5B,IAAM0I,EAAO1I,EAAMmN,SAAWhC,GAAgBnL,EAAMuH,SAC9CmH,EAAYnD,GAAa7C,GAE/B,OAAOvJ,EAAAC,EAAAC,cAAA,OAAK6L,UAAU,4BAA4B5L,MAAO,CAAEoP,uGCMhDyF,GAfQ,SAAAjV,GAAA,IAAGkV,EAAHlV,EAAGkV,MAAH,OACnBjV,EAAAC,EAAAC,cAACgV,GAAA,EAAD,CACIC,OAAK,EACL/L,IAAK6L,EACLzJ,UAAQ,EACRiE,MACIzP,EAAAC,EAAAC,cAAA,KAAGC,MAAO,CAAE6K,MAAOC,IAAOmF,QAAShQ,WAAY,QAAU6U,MCOtDG,GAdI,SAAArV,GAAA,IAAGgM,EAAHhM,EAAGgM,UAAH,OACf/L,EAAAC,EAAAC,cAAA,OACI6L,UAAWA,EACX6C,MAAM,6BACN7H,MAAM,KACNC,OAAO,KACP8H,KAAM7D,IAAOkE,QACbN,QAAQ,aAER7O,EAAAC,EAAAC,cAAA,QAAM1H,EAAE,gBAAgBsW,KAAK,SAC7B9O,EAAAC,EAAAC,cAAA,QAAM1H,EAAE,8JCJV6c,GAAa,SAAAtV,GAAA,IAAGzK,EAAHyK,EAAGzK,IAAH,OACf0K,EAAAC,EAAAC,cAAA,KACIyL,QAAS,SAAA2J,GAAC,OAAIA,EAAEjI,mBAChBtB,UAAWF,KAAQ0J,WACnB/D,OAAO,SACPgE,IAAI,sBACJC,KAAMngB,GAEN0K,EAAAC,EAAAC,cAACwV,GAAD,QAIFC,GAAe,kBACjB3V,EAAAC,EAAAC,cAAA,UAAQ6L,UAAWF,KAAQ+J,cAAehhB,IAAKC,EAAE,YA0BtCghB,GAvBS,SAAA9a,GAAmC,IAAhCpH,EAAgCoH,EAAhCpH,KAAM+E,EAA0BqC,EAA1BrC,KAAMod,EAAoB/a,EAApB+a,SAAUxgB,EAAUyF,EAAVzF,IACvCygB,EAAWtgB,YAAY9B,GAE7B,OACIqM,EAAAC,EAAAC,cAACgV,GAAA,EAAD,CACIC,OAAK,EACLxJ,QAASmK,EACTrG,MACIzP,EAAAC,EAAAC,cAAA,OAAK6L,UAAWF,KAAQmK,UACpBhW,EAAAC,EAAAC,cAAA,OAAK6L,UAAWF,KAAQ4D,OACpBzP,EAAAC,EAAAC,cAAC6V,EAAD,CACI5V,MAAO,CAAE+O,OAAQ,MAAOJ,KAAM7D,IAAOkE,WAEzCnP,EAAAC,EAAAC,cAAA,YAAOxH,GACNpD,EAAM0K,EAAAC,EAAAC,cAAC+V,GAAD,CAAY3gB,IAAKA,IAAU,MAEtC0K,EAAAC,EAAAC,cAACgW,GAAD,UCxBPC,GAAc,CACvB,CACI3hB,GAAI,aACJ4hB,OAAQxhB,IAAKC,EAAE,oBACfgC,MAAO,CACH,CACIlD,KAAMV,IACNyF,KAAM9D,IAAKC,EAAE,YACb8S,QAAS,IAEb,CACIhU,KAAMX,IACN0F,KAAM9D,IAAKC,EAAE,YACb8S,QAAS,QAEb,CACIhU,KAAMT,IACNwF,KAAM9D,IAAKC,EAAE,UACb8S,QAASnU,QAOZ6iB,GAAmB,CAC5B9jB,IACAC,IACAC,IACAC,IACAC,IACAI,IACAF,IACAC,IACAF,KAIS0jB,GAAgB,CAACzjB,IAASC,IAAWC,0BCvC5CwjB,eACF,SAAAA,EAAY1V,GAAO,IAAA0L,EAAA,OAAAjY,OAAAkY,EAAA,EAAAlY,CAAA+O,KAAAkT,IACfhK,EAAAjY,OAAAmY,EAAA,EAAAnY,CAAA+O,KAAA/O,OAAAoY,EAAA,EAAApY,CAAAiiB,GAAA5J,KAAAtJ,KAAMxC,KAOV2V,QAAU,SAAAtkB,GAAI,OAAI,WAAM,IAAA6f,EACsCxF,EAAK1L,MAAvDlN,EADYoe,EACZpe,KAAM6T,EADMuK,EACNvK,mBAAoBiP,EADd1E,EACc0E,oBAElC,GAAI9iB,IAASf,IACT4U,EAAmB,CAAE7T,OAAMgU,QAASzV,EAAKkX,UACtC,CACH,IAAMsN,EAAU,CACZliB,GAAItC,EAAKsC,GACTkE,KAAMxG,EAAKyG,aAAezG,EAAKwG,MAG/B4d,GAAchS,SAAS3Q,GACvB8iB,EAAoB9iB,EAAM+iB,GAE1BlP,EAAmB,CAAE7T,OAAMgU,QAAS+O,OAtB7BnK,EA2BnBoK,cAAgB,WACZpK,EAAKM,SAAS,CAAE+J,SAAUrK,EAAK9V,MAAMmgB,UAErCrK,EAAK1L,MAAMgW,mBAAmBtK,EAAK1L,MAAMlN,OA3BzC4Y,EAAK9V,MAAQ,CACTmgB,SAAS,GAJErK,wEAiCV,IAAAuK,EAAAzT,KAAA0T,EACmC1T,KAAKxC,MAArCoU,EADH8B,EACG9B,MAAOthB,EADVojB,EACUpjB,KAAMkD,EADhBkgB,EACgBlgB,MAAOmgB,EADvBD,EACuBC,QAC5B,OACIhX,EAAAC,EAAAC,cAAC+W,EAAA,SAAD,KACIjX,EAAAC,EAAAC,cAACgX,GAAD,CAAgBjC,MAAOA,IACtBpe,EAAM0B,IAAI,SAAArG,GACP,IAAMilB,EAAU/hB,YAAWzB,EAAMzB,EAAM4kB,EAAKM,QAAQ/hB,IACpD,OACI2K,EAAAC,EAAAC,cAACmX,GAAD,CACIjO,IAAKlX,EAAKsC,IAAMtC,EAAKkX,IACrBzV,KAAMA,EACN+E,KAAMxG,EAAKyG,aAAezG,EAAKwG,KAC/Bod,SAAUgB,EAAKN,QAAQtkB,GACvBoD,IAAK6hB,MAIhBH,EACGhX,EAAAC,EAAAC,cAACgV,GAAA,EAAD,CACIC,OAAK,EACL/L,IAAG,WAAAnU,OAAaggB,GAChBtJ,QAAStI,KAAKsT,cACdlH,MACIzP,EAAAC,EAAAC,cAAA,UAAQ6L,UAAWF,KAAQyL,gBACtBjU,KAAK5M,MAAMmgB,QACNhiB,IAAKC,EAAE,cACPD,IAAKC,EAAE,gBAIzB,KACJmL,EAAAC,EAAAC,cAACqX,GAAA,EAAD,CAASrI,OAAO,oBAjEGT,aA8EnC8H,GAAqBiB,aAAe,CAChCniB,GAAIoiB,IAAUC,OAAOC,YAGVtX,mBACX,KACA,CACImH,sBACAiP,oBC/F2B,SAAC9iB,EAAMgU,GAAP,OAAmB,SAAC/C,EAAUC,GAC7D,IAMI+S,EANEnhB,EAAQoO,IACRgT,EAAe9jB,IAAYJ,GAAMe,SACjC8E,EAAiBwM,GAAsBvP,GAAO+C,eAC9Cse,EAAqBte,EAAeue,UACtC,SAAA7lB,GAAI,OAAIA,EAAKyB,OAASA,IAKtBmkB,GAAsB,IACtBF,EAAgBpe,EAAese,IACjBD,GAAclE,KAAKhM,GAEjC/C,EAASgD,GAAsBgQ,KAO/BhT,EAAS4C,GALToQ,EAAgB,CACZjkB,KAAMA,EACNgU,QAAS,CAACA,SDyEPtH,CAMbkW,IE7EalW,eACX,KACA,CAAEmH,uBAFSnH,CApBiB,SAAAN,GAAsC,IAAnCyH,EAAmCzH,EAAnCyH,mBAAoBwQ,EAAejY,EAAfiY,SAC7CC,EAAiB,SAAAld,GAAA,IAAGpH,EAAHoH,EAAGpH,KAAMgU,EAAT5M,EAAS4M,QAAT,OAAuB,WAC1CH,EAAmB,CAAE7T,OAAMgU,cAG/B,OACI3H,EAAAC,EAAAC,cAAC+W,EAAA,SAAD,KACIjX,EAAAC,EAAAC,cAACgX,GAAD,CAAgBjC,MAAO+C,EAAS5B,SAC/B4B,EAASnhB,MAAM0B,IAAI,SAAArG,GAAI,OACpB8N,EAAAC,EAAAC,cAACmX,GAAD,CACIjO,IAAKlX,EAAKyB,KACVA,KAAMzB,EAAKyB,KACX+E,KAAMxG,EAAKwG,KACXod,SAAUmC,EAAe/lB,UCPvCgmB,YAAkB,SAAArX,GAAK,OACzBb,EAAAC,EAAAC,cAACiY,GAAA,EAAD,CACIC,QAAM,EACN1f,KAAK,wBACL+W,MAAO7a,IAAKC,EAAE,6CACdlB,KAAK,OACL6e,SAAU3R,EAAM2R,SAChB6F,QAASxX,EAAMwX,QACfphB,MAAO4J,EAAM5J,UAIfqhB,eACF,SAAAA,EAAYzX,GAAO,IAAA0L,EAAA,OAAAjY,OAAAkY,EAAA,EAAAlY,CAAA+O,KAAAiV,IACf/L,EAAAjY,OAAAmY,EAAA,EAAAnY,CAAA+O,KAAA/O,OAAAoY,EAAA,EAAApY,CAAAgkB,GAAA3L,KAAAtJ,KAAMxC,KAWV0X,UAAY,WACRhM,EAAKM,SAAS,CAAElN,MAAM,EAAO9H,OAAQ,MAbtB0U,EAgBnBiM,SAAW,SAAArL,GACPZ,EAAKkM,aAELlM,EAAKM,SAAS,CACV6L,SAAUvL,EAAMwL,cAChBhZ,MAAM,KArBK4M,EAyBnBqM,UAAY,SAAAzL,GACRZ,EAAKM,SAAS,CAAEhV,OAAQsV,EAAMqE,OAAOva,OAASsV,EAAKkM,aA1BpClM,EA6BnBsM,yBAA2B,kBACvBxC,GACKxe,OAAO,SAAAlE,GACJ,IAAMmlB,EAAW/kB,IAAYJ,GAC7B,OACI4Y,EAAK9V,MAAMI,OAAS0V,EAAK9V,MAAMI,MAAMiiB,EAASrkB,gBAGrD8D,IAAI,SAAA5E,GACD,IAAMmlB,EAAW/kB,IAAYJ,GACvBolB,EAAWxM,EAAK9V,MAAMI,MAAMiiB,EAASrkB,cACrCuiB,EAAU+B,EAAStf,OAAS,EAC5B5C,EAAQ0V,EAAK9V,MAAMuiB,WAAWpQ,IAAIkQ,EAAStkB,IAC3CukB,EACAA,EAASE,MAAM,EAAG,GAExB,OACIjZ,EAAAC,EAAAC,cAACgZ,GAAD,CACI9P,IAAKzV,EACLA,KAAMA,EACNshB,MAAO6D,EAASnkB,YAChBkC,MAAOA,EACPggB,mBAAoBtK,EAAKkM,WACzBzB,QAASA,OApDVzK,EAyDnB4M,qBAAuB,kBACnBhD,GAAY5d,IAAI,SAAAyf,GAAQ,OACpBhY,EAAAC,EAAAC,cAACkZ,GAAD,CAAkBhQ,IAAK4O,EAASxjB,GAAIwjB,SAAUA,OA3DnCzL,EA8DnB8M,cAAgB,kBACZ9M,EAAKsM,2BAA2B5jB,OAAOsX,EAAK4M,yBA/D7B5M,EAiEnBkM,WAjEmB,eAAA1Y,EAAAzL,OAAA+N,EAAA,EAAA/N,CAAAgO,EAAArC,EAAAsC,KAiEN,SAAAC,EAAM7O,GAAN,IAAAqlB,EAAAM,EAAAzhB,EAAA,OAAAyK,EAAArC,EAAA0C,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,OACLnP,IACMqlB,EAAazM,EAAK9V,MAAMuiB,YAEfpQ,IAAIjV,GACfqlB,EAAWjc,OAAOpJ,GAElBqlB,EAAWO,IAAI5lB,GAGnB4Y,EAAKM,SAAS,CAAEmM,gBAEhBzM,EAAKM,SAAS,CACVmM,WAAY,IAAIQ,MAIpBF,EAAc,WACdhlB,OAAA4D,EAAA,EAAA5D,CAAIiY,EAAK9V,MAAMuiB,WAAWphB,UAAU6B,SACpC6f,GACI,QAAUhlB,OAAA4D,EAAA,EAAA5D,CAAIiY,EAAK9V,MAAMuiB,WAAWphB,UAAUsB,KAAK,UAGrDrB,EAAS0U,EAAK9V,MAAMoB,OAAX,IAAA5C,OAAwBsX,EAAK9V,MAAMoB,QAAW,GAE7D0U,EAAK6K,QAAQ/hB,GAAG0G,IAAIC,SACfC,IADL,eAAAhH,OACwB4C,GADxB5C,OACiCqkB,IAC5Bxd,KAAK,SAAAqL,GAAQ,OAAIoF,EAAKM,SAAS,CAAEhW,MAAOsQ,MACxCxK,MAAMP,QAAQD,OA5BV,wBAAAyG,EAAAG,SAAAP,MAjEM,gBAAAQ,GAAA,OAAAjD,EAAAqD,MAAAC,KAAA1J,YAAA,GAGf4S,EAAK9V,MAAQ,CACTiiB,SAAU,KACV/Y,MAAM,EACNqZ,WAAY,IAAIQ,IAChB3iB,WAAO+C,EACP/B,OAAQ,IARG0U,wEAiGf,OACIvM,EAAAC,EAAAC,cAAC+W,EAAA,SAAD,KACIjX,EAAAC,EAAAC,cAACuZ,GAAD,CACIxiB,MAAOoM,KAAK5M,MAAMoB,OAClB2a,SAAUnP,KAAKuV,UACfP,QAAShV,KAAKmV,WAElBxY,EAAAC,EAAAC,cAACwZ,GAAAzZ,EAAD,CACI8L,UAAU,0BACVpM,KAAM0D,KAAK5M,MAAMkJ,KACjBuB,QAASmC,KAAKkV,UACdG,SAAUrV,KAAK5M,MAAMiiB,SACrBiB,aAAc,CAAEC,WAAY,OAAQC,SAAU,UAC9CC,gBAAiB,CAAEF,WAAY,OAAQC,SAAU,OACjD1Z,MAAO,CAAE6G,OAAQ,QACjB+S,WAAY,CAAE5Z,MAAO,CAAE4G,MAAO,UAC9BiT,kBAAkB,EAClBC,qBAAqB,GAErBja,EAAAC,EAAAC,cAACga,GAAA,EAAD,KAAO7W,KAAKgW,0BArHL7K,IAAMC,WA4HjC6J,GAAad,aAAe,CACxBniB,GAAIoiB,IAAUC,OAAOC,YAGVW,UCpGF6B,GAAe,SAAApa,GAMtB,IALFrH,EAKEqH,EALFrH,KACAE,EAIEmH,EAJFnH,YACAwhB,EAGEra,EAHFqa,cACAC,EAEEta,EAFFsa,oBACAxO,EACE9L,EADF8L,QAUA,OACI7L,EAAAC,EAAAC,cAAA,WAAS6L,UAAWF,EAAQyO,SACxBta,EAAAC,EAAAC,cAAA,OAAK6L,UAAWF,EAAQ0O,kBACpBva,EAAAC,EAAAC,cAACiY,GAAA,EAAD,CACIpM,UAAWF,EAAQoJ,MACnBmD,QAAM,EACN1f,KAAK,wBACL+W,MAAO7a,IAAKC,EAAE,mBACdlB,KAAK,OACL6e,SAjBI,SAAA8C,GAChB8E,EAAc9E,EAAE9D,OAAOva,QAiBXA,MAAOyB,IAEXsH,EAAAC,EAAAC,cAACsa,GAAAva,EAAD,CACI8L,UAAWF,EAAQjT,YACnBF,KAAK,8BACL+W,MAAO7a,IAAKC,EAAE,yBACd2d,SApBU,SAAA8C,GACtB+E,EAAoB/E,EAAE9D,OAAOva,QAoBjBA,MAAO2B,EACP6hB,QAAQ,SACRC,WAAS,EACTC,WAAY,CACR9O,QAAS,CACLwC,KAAMxC,EAAQ+O,MACdC,UAAWhP,EAAQgP,eAKnC7a,EAAAC,EAAAC,cAAA,OAAK6L,UAAWF,EAAQiP,cACpB9a,EAAAC,EAAAC,cAAC6a,GAAD,SAeVrG,GAAqB,CACvB0F,c9B7D+B,SAAAnjB,GAAK,MAAK,CACzCtD,KN7C0B,iBM8C1BsD,U8B4DAojB,oB9BzDqC,SAAApjB,GAAK,MAAK,CAC/CtD,KNjDgC,uBMkDhCsD,W8B0DWoJ,eAdS,SAAA5J,GACpB,IAAMukB,EAAoBzjB,YAASyO,GAAsBvP,IAEzD,MAAO,CACHiC,KAAMsiB,EAAkBtiB,KACxBE,YAAaoiB,EAAkBpiB,cAWnC8b,GAFWrU,CAGbqL,qBAxGa,CACX4O,QAAS,CAAElL,QAAS,OAAQ6L,eAAgB,iBAC5CV,iBAAkB,CACdW,KAAM,IACN7G,YAAa,QAEjBY,MAAO,CACH7F,QAAS,QACT+L,MAAO,QAEXviB,YAAa,CACTwW,QAAS,QACT+L,MAAO,OACP5L,UAAW,QAEfsL,UAAW,CACPO,YAAa,CACTC,aAAY,QAEhBC,kBAAmB,CACfD,aAAY,mBAGpBT,MAAO,CACH7M,gBAAiB,uBACjBwN,aAAc,MACdxU,MAAO,OACPuE,UAAW,CACPyC,gBAAiB,yBAGzB+M,aAAc,CACVI,KAAM,IACNhJ,SAAU,aAuEhBxG,CAAmByO,KASrBA,GAAazL,aAAe,CACxBhW,KAAM,GACNE,YAAa,iJCnHX4iB,GAAO3R,oBAAiBD,GAAGpV,GAC3BinB,GAAO5R,oBAAiBC,GAAGtV,GAE3BknB,8MACFC,UAAY,SAAAnnB,GAAE,OAAI,kBAAM+X,EAAK1L,MAAM8a,UAAUnnB,oFAE7B,IAAAud,EAC8C1O,KAAKxC,MAAvDwJ,EADI0H,EACJ1H,oBAAqBuR,EADjB7J,EACiB6J,UAAWC,EAD5B9J,EAC4B8J,cAClCC,EAAWF,EAAUpnB,GAErBunB,EAAc,CAChB1mB,GAAIgO,KAAK+T,QAAQ/hB,GACjB2mB,SAAU3Y,KAAKxC,MAAMmb,SACrBC,WAAY5Y,KAAKxC,MAAMob,WACvBC,UAAW7Y,KAAKxC,MAAMqb,WAG1B,OAAQJ,GACJ,KAAKN,GACD,OACIxb,EAAAC,EAAAC,cAACic,GAAA,gBAAD7nB,OAAAuJ,OAAA,CACIue,gBAAiBP,GACbE,IAIhB,KAAKN,GACD,OACIzb,EAAAC,EAAAC,cAACic,GAAA,iBAAD7nB,OAAAuJ,OAAA,CACIwM,oBAAqBA,EACrBgS,QAASR,GACLE,IAGhB,QACI,OACI/b,EAAAC,EAAAC,cAACic,GAAA,iBAAD7nB,OAAAuJ,OAAA,CACIge,cAAeA,EACfC,SAAUA,EACVQ,YAAaV,EAAUljB,MACnBqjB,sCAMf,IAAAhF,EAC0B1T,KAAKxC,MAA5B+a,EADH7E,EACG6E,UAAW1a,EADd6V,EACc7V,QACb4a,EAAWF,EAAUpnB,GAE3B,OACIwL,EAAAC,EAAAC,cAACqc,GAAAtc,EAAD,CACIN,OAAQmc,EACRU,SAAS,KACTC,qBAAmB,EACnBvb,QAASA,GAER4a,GAAYzY,KAAKqZ,gBAClB1c,EAAAC,EAAAC,cAACyc,GAAA1c,EAAD,KACID,EAAAC,EAAAC,cAAC0c,GAAA,EAAD,CAAQC,KAAK,YAAYlR,QAASzK,GAC7BtM,IAAKC,EAAE,WAEZmL,EAAAC,EAAAC,cAAC0c,GAAA,EAAD,CAAQC,KAAK,UAAUlR,QAAStI,KAAKsY,UAAUG,IAC1ClnB,IAAKC,EAAE,qBA5DL4Z,aA+E3BiN,GAAalE,aAAe,CACxBniB,GAAIoiB,IAAUC,QAGHgE,UCnGFoB,GAAuC,GAevCC,GAA2B,SAAAtmB,GAAK,OAAIA,EAAMumB,sBCb1CC,GAA4B,SAAAhmB,GAAK,MAAK,CAC/CtD,KDNsC,6BCOtCsD,UCoBEimB,eACF,SAAAA,EAAYrc,GAAO,IAAA0L,EAAA,OAAAjY,OAAAkY,EAAA,EAAAlY,CAAA+O,KAAA6Z,IACf3Q,EAAAjY,OAAAmY,EAAA,EAAAnY,CAAA+O,KAAA/O,OAAAoY,EAAA,EAAApY,CAAA4oB,GAAAvQ,KAAAtJ,KAAMxC,KAOVsc,UAAY,SAAAhQ,GACRZ,EAAKM,SAAS,CAAE6L,SAAUvL,EAAMwL,iBATjBpM,EAYnB6Q,WAAa,WACT7Q,EAAKM,SAAS,CAAE6L,SAAU,QAbXnM,EAgBnB8Q,YAAc,WACV9Q,EAAKM,SAAS,CAAE6L,SAAU,OAE1BnM,EAAK1L,MAAMyc,6BAnBI/Q,EAsBnBgR,gBAAkB,SAAA/oB,GACd+X,EAAK1L,MAAM2c,wBAAwB,CAC/BhpB,KACAkE,KAAM6T,EAAK1L,MAAMmJ,WAAWxV,GAAIkE,QAzBrB6T,EA6BnBkR,cAAgB,SAAA1d,GAA4B,IAAzB2d,EAAyB3d,EAAzB2d,YAAa7mB,EAAYkJ,EAAZlJ,MAC5B0V,EAAK1L,MAAM8c,mBAAXrpB,OAAA4C,EAAA,EAAA5C,CAAA,GACOiY,EAAK1L,MAAMgb,cADlBvnB,OAAA6C,EAAA,EAAA7C,CAAA,GAEKopB,EAAc7mB,MAhCJ0V,EAoCnBqR,gBAAkB,SAAA7iB,GAAsC,IAAnC2iB,EAAmC3iB,EAAnC2iB,YAAaG,EAAsB9iB,EAAtB8iB,gBAExBC,GADUvR,EAAK1L,MAAMgb,cAAc6B,IAAgB,IACjC7lB,OACpB,SAAA3F,GAAI,OAAK2rB,EAAgBvZ,SAASpS,EAAKsC,MAGvCspB,EAAQrkB,OACR8S,EAAK1L,MAAM8c,mBAAXrpB,OAAA4C,EAAA,EAAA5C,CAAA,GACOiY,EAAK1L,MAAMgb,cADlBvnB,OAAA6C,EAAA,EAAA7C,CAAA,GAEKopB,EAAcI,KAGnBvR,EAAK1L,MAAMkd,qBAAqBL,IAhDrBnR,EAoDnByR,eAAiB,SAAA7iB,GAA8B,IAA3BuiB,EAA2BviB,EAA3BuiB,YAAaO,EAAc9iB,EAAd8iB,QACvBC,EAAU3R,EAAK1L,MAAMgb,cAAc6B,IAAgB,GACnDS,EAAgBF,EAAQ1lB,IAAI,SAAA/D,GAAE,OAChC0pB,EAAQ/Z,KAAK,SAAAjS,GAAI,OAAIA,EAAKsC,KAAOA,MAGrC+X,EAAK1L,MAAM8c,mBAAXrpB,OAAA4C,EAAA,EAAA5C,CAAA,GACOiY,EAAK1L,MAAMgb,cADlBvnB,OAAA6C,EAAA,EAAA7C,CAAA,GAEKopB,EAAcS,MA5DJ5R,EAgEnB6R,WAAa,SAAA5pB,GACT,IAAM6pB,EAAc9R,EAAK1L,MAAMgb,cAAcrnB,GAEzC6pB,GAAeA,EAAY5kB,OAC3B8S,EAAK1L,MAAMyd,cAAc,CACrB9pB,KACAyC,MAAM3C,OAAA4D,EAAA,EAAA5D,CAAK+pB,KAGf9R,EAAK1L,MAAM0d,iBAAiB/pB,GAGhC+X,EAAK8Q,eAzEL9Q,EAAK9V,MAAQ,CACTiiB,SAAU,MAJCnM,wEA+EV,IAAAwF,EAQD1O,KAAKxC,MANL2d,EAFCzM,EAEDyM,MACAnU,EAHC0H,EAGD1H,oBACAuR,EAJC7J,EAID6J,UACA5R,EALC+H,EAKD/H,WACAyU,EANC1M,EAMD0M,mBACA5C,EAPC9J,EAOD8J,cAGJ,OACI7b,EAAAC,EAAAC,cAAC+W,EAAA,SAAD,KACIjX,EAAAC,EAAAC,cAAC0c,GAAA,EAAD,CAAQjR,QAAStI,KAAK8Z,WACjBvoB,IAAKC,EAAE,cACRmL,EAAAC,EAAAC,cAACwe,GAAAze,EAAD,OAEJD,EAAAC,EAAAC,cAACwZ,GAAAzZ,EAAD,CACIN,KAAMgf,QAAQtb,KAAK5M,MAAMiiB,UACzBA,SAAUrV,KAAK5M,MAAMiiB,SACrBiB,aAAc,CAAEE,SAAU,SAAUD,WAAY,QAChD1Y,QAASmC,KAAK+Z,WACdjd,MAAO,CACH6G,OAAQ,OACR4X,WAAYJ,EAAMK,WAAWD,aAGjC5e,EAAAC,EAAAC,cAACic,GAAA,gBAAD,CACInS,WAAYA,EACZ8U,iBAAkBzb,KAAKka,gBACvBwB,YAAaN,KAGpB7C,EACG5b,EAAAC,EAAAC,cAAC8e,GAAD,CACI3U,oBAAqBA,EACrBuR,UAAWA,EACXC,cAAeA,EAAcD,EAAUpnB,KAAO,GAC9CwnB,SAAU3Y,KAAKoa,cACfxB,WAAY5Y,KAAKua,gBACjB1B,UAAW7Y,KAAK2a,eAChB9c,QAASmC,KAAKga,YACd1B,UAAWtY,KAAK+a,aAEpB,aA3HS3P,aAyIdpO,eARS,SAAA5J,GAAK,MAAK,CAC9B4T,oBAAqBI,GAAgChU,GACrDmlB,UAAWmB,GAAyBtmB,GACpCuT,WAAYD,GAAetT,GAC3BgoB,mBAAoB/X,GAAgBjQ,GACpColB,cAAexV,GAAwB5P,KAKvC,CACI6mB,0BD7JmC,iBAAO,CAC9C3pB,KDVwC,iCEuKpC6pB,wBAAyBP,GACzBqB,crC9JuB,SAAAzmB,GAAM,MAAK,CACtClE,KDV2B,kBCW3BkE,WqC6JI0mB,iBAAkB3X,GAClBmX,qBAAsBlX,GACtB8W,mBpC3J4B,SAAAsB,GAAO,MAAK,CAC5CtrB,KHhBiC,wBGiBjCsrB,aoCiJW5e,CAUb6e,sBAAYhC,0BCzJCiC,8MAhBXC,MAAO,0EAIH,OADA/b,KAAK+b,MAAQ/b,KAAK+b,KACX/b,KAAK+b,sCAGP,IAAAtI,EAAAzT,KACL,OACIrD,EAAAC,EAAAC,cAAA,OAAKyL,QAAS,kBAAMmL,EAAKjW,MAAM8K,QAAQmL,EAAKuI,YACxCrf,EAAAC,EAAAC,cAACof,GAAArf,EAAD,CAAiBE,MAAO,CAAE2O,KAAM7D,IAAOkE,mBAXpCV,aCsBb8Q,GAAiB3qB,IAAKC,EAAE,kBAExBiW,GAAS,CACX0U,QAAS,CACLpQ,QAAS,OACTqQ,WAAY,SACZC,WAAY,QAEhBC,SAAU,CACN7Q,KAAM7D,IAAOkE,SAEjByQ,WAAY,CACRC,SAAU,OACV/R,IAAK,OAETgS,SAAU,CACN1Q,QAAS,eACTC,cAAe,MACf9D,eAAgB,OAChB8I,YAAa,OAEjB0L,SAAU,CACN3Q,QAAS,OACTqQ,WAAY,cAEhBO,aAAc,CACVN,WAAY,EACZxN,SAAU,WACVpE,IAAK,EACL3C,OAAQ,YAIV8U,eACF,SAAAA,EAAYpf,GAAO,IAAA0L,EAAA,OAAAjY,OAAAkY,EAAA,EAAAlY,CAAA+O,KAAA4c,IACf1T,EAAAjY,OAAAmY,EAAA,EAAAnY,CAAA+O,KAAA/O,OAAAoY,EAAA,EAAApY,CAAA2rB,GAAAtT,KAAAtJ,KAAMxC,KAOVqf,oBAAsB,kBAClB3T,EAAKM,SAAS,CAAEsT,qBAAsB5T,EAAK9V,MAAM0pB,uBANjD5T,EAAK9V,MAAQ,CACT0pB,qBAAqB,GAJV5T,wEAWV,IAAAwF,EAYD1O,KAAKxC,MAVLrM,EAFCud,EAEDvd,GACAkE,EAHCqZ,EAGDrZ,KACAE,EAJCmZ,EAIDnZ,YACAS,EALC0Y,EAKD1Y,OACA8G,EANC4R,EAMD5R,MACAnG,EAPC+X,EAOD/X,gBACAjC,EARCga,EAQDha,QACAqoB,EATCrO,EASDqO,YACAC,EAVCtO,EAUDsO,YACAxU,EAXCkG,EAWDlG,QAGEyU,EAAahsB,OAAOuJ,OAAO,GAAIsC,EAAM8U,MAAO,CAC9C9J,OAAQ,UACRoV,WAAY,OACZzS,IAAK,QAGHa,EAAW5W,EAAU6X,KAAO4Q,KAElC,OACIxgB,EAAAC,EAAAC,cAAC+W,EAAA,SAAD,KACIjX,EAAAC,EAAAC,cAAA,OAAK6L,UAAWF,EAAQkU,UACpB/f,EAAAC,EAAAC,cAAA,QAAMC,MAAOmgB,GAAa5nB,GAC1BsH,EAAAC,EAAAC,cAAA,OAAK6L,UAAWF,EAAQ2T,SACpBxf,EAAAC,EAAAC,cAAA,OACI6L,UAAWF,EAAQmU,aACnBrU,QAASyU,GAETpgB,EAAAC,EAAAC,cAACyO,EAAD,CAAU5C,UAAWF,EAAQ8T,YAEjC3f,EAAAC,EAAAC,cAAA,OAAK6L,UAAWF,EAAQmU,cACpBhgB,EAAAC,EAAAC,cAACugB,GAAD,CAAM9U,QAAS0U,KAEnBrgB,EAAAC,EAAAC,cAAA,OAAKC,MAAO,CAAEuf,WAAY,SACrBrmB,EAAOqnB,OACJ1gB,EAAAC,EAAAC,cAAC2P,GAAA,EAAD,CACI9D,UAAWF,EAAQiU,SACnBhQ,GAAE,IAAA7a,OAAMT,EAAN,UAEFwL,EAAAC,EAAAC,cAAC0c,GAAA,EAAD,KAAShoB,IAAKC,EAAE,UAEpB,KACHwE,EAAOsnB,OACJ3gB,EAAAC,EAAAC,cAAA,QAAMC,MAAO,CAAEkU,YAAa,QACxBrU,EAAAC,EAAAC,cAAC0c,GAAA,EAAD,CAAQjR,QAAStI,KAAK6c,qBACjBtrB,IAAKC,EAAE,WAGhB,KACJmL,EAAAC,EAAAC,cAAA,QAAMC,MAAO,CAAEkU,YAAa,QACxBrU,EAAAC,EAAAC,cAAC0gB,GAAD,UAKf5mB,EACGgG,EAAAC,EAAAC,cAAA,OACI6L,UAAU,wBACV5L,MAAO7L,OAAOuJ,OACV,CAAEwN,WAAY,MAAO8C,cAAe,OACpChO,EAAMvH,YACLA,EAAkC,GAApB,CAAEoS,MAAO,UAG3BpS,GAAe2mB,IAEpB,KACH/qB,EACGwL,EAAAC,EAAAC,cAAC2gB,GAAA5gB,EAAD,CACI5K,GAAIgO,KAAK+T,QAAQ/hB,GACjBb,GAAIA,EACJb,KAAK,YACLgM,KAAM0D,KAAK5M,MAAM0pB,oBACjBW,eAAgBzd,KAAK6c,sBAEzB,aA1FOzR,aA4HZpO,eA5BS,SAAA5J,GACpB,IAAMjC,EAAK2F,GAAe1D,GACpBqB,EAAYP,YAASD,EAAkBb,EAAOjC,IAEpD,MAAO,CACHA,KACAkE,KAAMZ,EAAUa,YAChBC,YAAad,EAAUe,mBACvBW,eAAgB9B,EAAmBjB,GACnCuD,gBAAiBK,GAA4B5D,GAC7CsB,QAASD,EAAUC,QACnBsB,OAAQ9B,YAASO,EAAUuB,UAmB/B,KAfe,SAACub,EAAYC,EAAeC,GAAa,IAChDtgB,EAAiCogB,EAAjCpgB,GAAIuD,EAA6B6c,EAA7B7c,QAASiC,EAAoB4a,EAApB5a,gBACb4K,EAAaiQ,EAAbjQ,SAER,OAAOtQ,OAAA4C,EAAA,EAAA5C,CAAA,GACAsgB,EACAE,EAFP,CAGIsL,YAAa,kBAAMxb,EnClEG,SAACpQ,EAAIqI,GAAL,sBAAA1B,EAAA7G,OAAA+N,EAAA,EAAA/N,CAAAgO,EAAArC,EAAAsC,KAAmB,SAAAwG,EAAOnE,EAAUC,GAAjB,IAAAQ,EAAAnJ,EAAA,OAAAoG,EAAArC,EAAA0C,KAAA,SAAAsG,GAAA,cAAAA,EAAApG,KAAAoG,EAAAnG,MAAA,cACvCuC,EAAY,SAAA7Q,GAEd,OADAoQ,EAASmD,GAAsBvT,EAAIqI,IAC5BrI,GAGL0H,EAAU,SAAAC,GAEZ,OADAC,QAAQC,IAAI,6BAA8BF,GACnCA,GARkC8M,EAAApG,KAAA,EAAAoG,EAAAnG,KAAA,EAWnClG,GAAiBpI,EAAIqI,GAXc,cAAAoM,EAAAtF,OAAA,SAYlC0B,EAAU7Q,IAZwB,cAAAyU,EAAApG,KAAA,EAAAoG,EAAA/D,GAAA+D,EAAA,SAAAA,EAAAtF,OAAA,SAclCzH,EAAO+M,EAAA/D,KAd2B,yBAAA+D,EAAAlG,SAAAgG,EAAA,iBAAnB,gBAAA5F,EAAAS,GAAA,OAAAzI,EAAAiI,MAAAC,KAAA1J,YAAA,GmCkEMonB,CAAevsB,GAAKuD,KAChDsoB,YAAa,kBACTzb,E7CzI0C,CAClDjR,KZpCwC,+BYqCxCsD,O6CuI+C+C,QAIpCqG,CAIbqL,qBAAWZ,GAAXY,CAAmBuU,KAWrBA,GAAavR,aAAe,CACxBhW,KAAM,GACNE,YAAa,GACbb,SAAS,EACTiC,iBAAiB,EACjBqmB,YAAa,MAGjBJ,GAAazI,aAAe,CACxBniB,GAAIoiB,IAAUC,oBCvMZvX,GAAQ,CACV8U,MAAO,CACH/C,SAAU,WACV9G,SAAU,GACVhL,WAAY,IACZ4K,MAAOC,IAAO+V,MACdnB,SAAU,IAEdjnB,YAAa,CACTwS,SAAU,GACVJ,MAAOC,IAAOmF,UAqBP6Q,GAjBE,SAAAlhB,GAAc,IAAXmhB,EAAWnhB,EAAXmhB,KAChB,OACIlhB,EAAAC,EAAAC,cAAA,OACI6L,UAAU,mBACV5L,MAAO,CACH8T,QAAS,uBAGZiN,EACGlhB,EAAAC,EAAAC,cAACihB,GAAD,CAAchhB,MAAOA,KAErBH,EAAAC,EAAAC,cAACkhB,GAAD,CAAcjhB,MAAOA,sGCjB/BkhB,eAGF,SAAAA,EAAYxgB,EAAOuW,GAAS,IAAA7K,EAAA,OAAAjY,OAAAkY,EAAA,EAAAlY,CAAA+O,KAAAge,IACxB9U,EAAAjY,OAAAmY,EAAA,EAAAnY,CAAA+O,KAAA/O,OAAAoY,EAAA,EAAApY,CAAA+sB,GAAA1U,KAAAtJ,KAAMxC,KAHVygB,kBAAoB,KAEQ/U,EAM5BgV,mBAAqB,SAAAC,GAMjB,IAAMC,EAAgBlV,EAAK1L,MAAM3O,OAASsvB,EAAUtvB,KAE9CwvB,EAAiBF,EAAU/a,cAAgB8F,EAAK1L,MAAM4F,YACtDkb,EAAMpqB,YAASgV,EAAK1L,MAAM4B,eAC1Bmf,EAAUrqB,YAASiqB,EAAU/e,eAC7Bof,EACFF,EAAIntB,KAAOotB,EAAQptB,IAAMmtB,EAAIvgB,aAAewgB,EAAQxgB,WAExD,OAAOqgB,IAAkBI,GAAcH,IApBfnV,EAuB5BuV,aAAe,SAAAN,GACX,GACIO,GACIxV,EAAK1L,MAAM3O,KACXqa,EAAK1L,MAAM4B,gBAEf8J,EAAKgV,mBAAmBC,GAC1B,CACE,IAAMI,EAAUrqB,YAASiqB,EAAU/e,eAC7Buf,EAAazV,EAAK1L,MAAM4B,cAExBwf,EACFD,EAAW5gB,aAAewgB,EAAQxgB,YAClC4gB,EAAW5gB,aAAemL,EAAK1L,MAAM3O,KAAKyB,MAG1CsuB,GACA1V,EAAK1L,MAAM4F,cAAgB+a,EAAU/a,eAErCsb,GACIxV,EAAK1L,MAAM3O,KACX0vB,EAAQxgB,YAAcmL,EAAK1L,MAAM3O,KAAKyB,MAG1CouB,GACIxV,EAAK1L,MAAM3O,KACXqa,EAAK1L,MAAM4B,cACX8J,EAAK+U,kBACLW,EAAgBD,EAAW5gB,WAAa,SAnD5BmL,EA+E5B2V,cAAgB,kBACZ3V,EAAK1L,MAAM4B,cAAcrB,YAAcmL,EAAK1L,MAAM3O,KAAKyB,MA7EvD4Y,EAAKlX,GAAK+hB,EAAQ/hB,GAHMkX,mFAVN,IAAAlX,EAoElBgO,KAAKie,mBApEajsB,EAoEyBgO,KAAKhO,GAnE7C,CACH0M,QAASvM,YAAWH,GACpB4M,KAAM5M,EAAG0G,IAAIC,SAASmmB,eAAeC,gBAoEjCL,GACI1e,KAAKxC,MAAM3O,KACXmR,KAAKxC,MAAM4B,gBAGfsf,GACI1e,KAAKxC,MAAM3O,KACXmR,KAAKxC,MAAM4B,cACXY,KAAKie,kBACJje,KAAKxC,MAAMmN,SAAkC,KAAvB3K,KAAK6e,4DAKrBV,GACfne,KAAKye,aAAaN,oCAMb,IAAAzP,EAC2C1O,KAAKxC,MAA7CgL,EADHkG,EACGlG,QAAS3Z,EADZ6f,EACY7f,KAAMuQ,EADlBsP,EACkBtP,cAAetC,EADjC4R,EACiC5R,MAMtC,OAL0B4hB,GACtB7vB,EACAuQ,GAIAzC,EAAAC,EAAAC,cAAA,OAAK1L,GAAImK,GAAiBzM,EAAKsC,IAAK2L,MAAOA,IAE3CH,EAAAC,EAAAC,cAAA,OAAK6L,UAAWF,EAAQwW,SACnBztB,IAAKC,EAAE,mDAhGI4Z,aAsG5B4S,GAAc7J,aAAe,CACzBniB,GAAIoiB,IAAUC,QAUlB2J,GAAc3S,aAAe,CACzBvO,MAAO,GACPjO,KAAM,GACNuU,YAAa,GACbhE,cAAe,IAGJ4e,UCtIFiB,GAAgB,GAkBdC,GAhBI,SAAA1hB,GAAS,IAChBoU,EAAmCpU,EAAnCoU,MAAOuN,EAA4B3hB,EAA5B2hB,cAAexU,EAAanN,EAAbmN,SAE9B,OACIhO,EAAAC,EAAAC,cAAA,OAAK6L,UAAU,yBACX/L,EAAAC,EAAAC,cAAA,OACI6L,UAAU,8BACV5L,MAAO,CAAEogB,WAAYvS,EAAW,OAAS,SAExCiH,GAEJuN,yBCTPriB,GAAQ,CACVsiB,gBAAiB,CACbvO,UAAW,OACXlN,OAAQ,SAEZ0b,KAAM,CACFxT,OAAQ,eACRlI,OAAQ,MACR2b,OAAQ,OACR5U,gBAAiB9C,IAAO2X,UAI1BC,oLAEE,IAAMC,EAAW5gB,GAAMmB,KAAKxC,MAAM3O,MAElC,OACI8N,EAAAC,EAAAC,cAAA,OAAK6L,UAAU,yBACX/L,EAAAC,EAAAC,cAAA,MAAIC,MAAOA,GAAMuiB,OACjB1iB,EAAAC,EAAAC,cAAA,OAAKC,MAAOA,GAAMsiB,iBACdziB,EAAAC,EAAAC,cAAC6iB,GAAA9iB,EAAD,CACI5K,GAAIgO,KAAK+T,QAAQ/hB,GACjBnD,KAAMmR,KAAKxC,MAAM3O,KACjByB,KAAM0P,KAAKxC,MAAM3O,KAAKyB,KAAKkX,cAC3BrW,GAAIsuB,EACJ5tB,QAAQ,uBAbPuZ,aAqBzBoU,GAAWrL,aAAe,CACtBniB,GAAIoiB,IAAUC,OAAOC,YAOVkL,8FC9BAG,YAdU,SAAAjjB,GAA4C,IAAzCyL,EAAyCzL,EAAzCyL,SAAUG,EAA+B5L,EAA/B4L,QAAS2C,EAAsBvO,EAAtBuO,SAAUnO,EAAYJ,EAAZI,MACrD,OACIH,EAAAC,EAAAC,cAAA,UACIsL,SAAUA,EACV7X,KAAK,SACLoY,UAAU,qBACV5L,MAAOA,EACPwL,QAASA,GAER2C,KCUPnO,GAAQ,CACV8iB,SAAU,CACNlc,MAAO,OACPC,OAAQ,OACR8H,KAAM7D,IAAOQ,SAEjByX,WAAY,CACRjP,QAAS,mBAEbkP,eAAgB,CACZlP,QAAS,kBACTmP,QAAS,GACTjY,OAAQ,SAEZkY,oBAAqB,CACjBpP,QAAS,mBAEb0O,OAAQ,CACJpH,aAAc,MACdoH,OAAM,aAAA1tB,OAAegW,IAAOqY,WAI9BC,GAAY,CACdjU,KAAMnP,GAAM8iB,SACZO,UAAWrjB,GAAM+iB,YAGfO,GAAgB,CAClBnU,KAAMnP,GAAM8iB,SACZO,UAAWrjB,GAAMgjB,gBAGfO,GAAc,CAChBpU,KAAKhb,OAAA4C,EAAA,EAAA5C,CAAA,GAAM6L,GAAM8iB,SAAb,CAAuBnU,KAAM0P,IAAMmF,aACvCH,UAAUlvB,OAAA4C,EAAA,EAAA5C,CAAA,GACH6L,GAAM+iB,WADJ,CAELnV,gBAAiByQ,IAAMoF,cAIzBC,GAAgB,SAAArY,GAAQ,OAAKA,EAAWiY,GAAgBF,IAejDO,GAAgB,SAAC/vB,EAAagB,EAAmBD,GAM1D,OALaR,OAAOsD,OAAO7D,GAAaoQ,KACpC,SAAAjS,GAAI,OACAA,EAAK6C,oBAAsBA,GAC3B7C,EAAK4C,aAAeA,IAEhBN,IAsHDuvB,wMA7GkB,IAAAhS,EACgB1O,KAAKxC,MAAtCmjB,EADiBjS,EACjBiS,aAAcC,EADGlS,EACHkS,eAEhBC,EAAmBF,EAAeN,GAAcH,GAEhDY,EAAY7vB,OAAA4C,EAAA,EAAA5C,CAAA,GACX4vB,EADW,CAEdV,UAAUlvB,OAAA4C,EAAA,EAAA5C,CAAA,GACH4vB,EAAiBV,UACjBrjB,GAAMkjB,oBACNljB,GAAMwiB,UAIjB,OACI3iB,EAAAC,EAAAC,cAAC+W,EAAA,SAAD,KACIjX,EAAAC,EAAAC,cAACkkB,GAAD,CACIjkB,MAAOgkB,EAAaX,UACpB7X,QAASsY,GAETjkB,EAAAC,EAAAC,cAACmkB,GAAApkB,EAAD,CAAaE,MAAOgkB,EAAa7U,8DAMpB,IA/BVwJ,EAAUwL,EA+BAvN,EAMrB1T,KAAKxC,MAJL3O,EAFqB6kB,EAErB7kB,KACAuQ,EAHqBsU,EAGrBtU,cACA8hB,EAJqBxN,EAIrBwN,sBACAnjB,EALqB2V,EAKrB3V,WAGJ,GAvCe0X,EAuCG5mB,EAAKyB,KAvCE2wB,EAuCI7hB,EAAc9O,KAtC/CmlB,IAAazlB,KACbixB,IAAc/wB,IAsCN,OAAO,KAGX,IAAMuB,EAAaf,IAAY7B,EAAKyB,MAAMmB,WAkBtC0W,GAAW,EAEXtZ,EAAKyB,OAASN,KACVgO,GAAgBnP,GAAMyB,KAAK6wB,MAAM,qBACjChZ,GAAW,GAInB,IAAMiZ,EA5FQ,SAACrjB,EAAYoK,GAAb,MAClB,CAACjZ,IAAcG,KAAc4R,SAASlD,GAChCsiB,GACAG,GAAcrY,GAyFSkZ,CAActjB,EAAYoK,GAC7CmZ,EAxFQ,SAACvjB,EAAYoK,GAAb,MAClB,CAAChZ,IAAOG,KAAa2R,SAASlD,GACxBsiB,GACAG,GAAcrY,GAqFSoZ,CAAcxjB,EAAYoK,GAC7CqZ,EApFM,SAACzjB,EAAYoK,GAAb,MAChB,CAAC/Y,KAAK6R,SAASlD,GAAcsiB,GAAcG,GAAcrY,GAmF9BsZ,CAAY1jB,EAAYoK,GAE/C,OACIxL,EAAAC,EAAAC,cAAA,OAAKC,MAAO,CAAEuf,WAAY,KACtB1f,EAAAC,EAAAC,cAAA,OAAKC,MAAOA,GAAMwiB,QACd3iB,EAAAC,EAAAC,cAACkkB,GAAD,CACI5Y,SAAUA,EACVrL,MAAOskB,EAAiBjB,UACxB7X,QAlCI,kBAChB4Y,EACIT,GAAc/vB,IAAaX,IAA0B0B,MAkC7CkL,EAAAC,EAAAC,cAAC6kB,GAAA9kB,EAAD,CAAWE,MAAOskB,EAAiBnV,QAEvCtP,EAAAC,EAAAC,cAACkkB,GAAD,CACI5Y,SAAUA,EACVrL,MAAOwkB,EAAiBnB,UACxB7X,QApCI,kBAChB4Y,EACIT,GAAc/vB,IAAaV,IAA0ByB,MAoC7CkL,EAAAC,EAAAC,cAAC8kB,GAAA/kB,EAAD,CAAWE,MAAOwkB,EAAiBrV,QAEtCxa,IAAe3B,IACZ6M,EAAAC,EAAAC,cAACkkB,GAAD,CACI5Y,SAAUA,EACVrL,MAAO0kB,EAAerB,UACtB7X,QAvCF,kBACd4Y,EACIT,GAAc/vB,IAAaT,IAAwBwB,MAuCvCkL,EAAAC,EAAAC,cAAC+kB,GAAAhlB,EAAD,CAASE,MAAO0kB,EAAevV,QAEnC,wCAOhB,OACItP,EAAAC,EAAAC,cAAC+W,EAAA,SAAD,KACK5T,KAAK6hB,6BACL7hB,KAAK8hB,qCAxGuB1W,aCvE9B2W,GAlBI,SAAAC,GACf,IAAIC,OAAW1rB,EACX2rB,OAAY3rB,EAEhB,OAAO,WAAa,QAAAmZ,EAAApZ,UAAAF,OAATuZ,EAAS,IAAAC,MAAAF,GAAAG,EAAA,EAAAA,EAAAH,EAAAG,IAATF,EAASE,GAAAvZ,UAAAuZ,GAChB,OACIoS,GACAtS,EAAKvZ,SAAW6rB,EAAS7rB,QACzBuZ,EAAKwS,MAAM,SAACC,EAAK3nB,GAAN,OAAY2nB,IAAQH,EAASxnB,KAEjCynB,GAEXD,EAAWtS,EACXuS,EAAYF,EAAEjiB,WAAF,EAAM4P,MCSpBlI,GAAS,CACXwE,KAAM,CACFvI,MAAO,GACPC,OAAQ,GACR0Y,WAAY,EACZvU,OAAQ,UACR2D,KAAM7D,IAAOkE,SAEjB8F,MAAO,CACHyQ,SAAU,SACVlJ,SAAU,MACVmJ,aAAc,WACdC,WAAY,UAEhBvD,QAAS,CACLjX,SAAU,OACVya,YAAa,SACb5R,QAAS,OACT6R,WAAY,SAIdC,GAAe,SAACtjB,EAAewc,GACjC,IAAK3qB,OAAOqS,KAAKsY,GAASxlB,OACtB,OAAOgJ,EAIX,IAAMujB,EAAUvjB,EAAc8G,KAAKhR,IAAI,SAAA0tB,GAAG,OAAA3xB,OAAA4C,EAAA,EAAA5C,CAAA,GAAU2xB,KAC9CC,EAAazjB,EAAc0jB,QAAQ5tB,IAAI,SAAA0tB,GAAG,OAAA3xB,OAAA4C,EAAA,EAAA5C,CAAA,GAAU2xB,KACpDG,EAAa3jB,EAAcwc,QAAQ1mB,IAAI,SAAA0tB,GAAG,OAAA3xB,OAAA4C,EAAA,EAAA5C,CAAA,GAAU2xB,KAyB1D,OAvBA3xB,OAAOqS,KAAKsY,GAAStZ,QAAQ,SAAA+X,GACzB,GAAIuB,EAAQvB,GAAc,CACtB,IAAI2I,GAAiB,EAErB,CAACL,EAASE,EAAYE,GAAYzgB,QAAQ,SAAA2gB,GAAgB,OACtDA,EACKzuB,OAAO,SAAAouB,GAAG,OAAIA,EAAIrK,YAAc8B,IAChC/X,QAAQ,SAAAsgB,GACLI,GAAiB,EACjBJ,EAAIpvB,MAAQooB,EAAQvB,OAK3B2I,GACDD,EAAWzS,KAAK,CACZiI,UAAW8B,EACX7mB,MAAOooB,EAAQvB,QAMxBppB,OAAA4C,EAAA,EAAA5C,CAAA,GACAmO,EADP,CAEI8G,KAAMyc,EACNG,QAASD,EACTjH,QAASmH,KAIJG,GAAb,SAAAlV,GAMI,SAAAkV,EAAY1lB,EAAOuW,GAAS,IAAA7K,EAAA,OAAAjY,OAAAkY,EAAA,EAAAlY,CAAA+O,KAAAkjB,IACxBha,EAAAjY,OAAAmY,EAAA,EAAAnY,CAAA+O,KAAA/O,OAAAoY,EAAA,EAAApY,CAAAiyB,GAAA5Z,KAAAtJ,KAAMxC,KANVpK,MAAQ,CACJ+vB,YAAY,EACZC,cAAc,GAGUla,EAmB5Bma,aAAetB,GAAW,kBAAMuB,SAnBJpa,EAqB5B+U,kBAAoB,KArBQ/U,EAuB5Bqa,mBAAqB,WACjB,IAAMnkB,EAAgBsB,GAClBwI,EAAK1L,MAAM4B,cACX8J,EAAK1L,MAAM3O,KAAKyB,KAChB4Y,EAAK2V,iBAGT,IAAKzf,EACD,OACIzC,EAAAC,EAAAC,cAAA,OAAK6L,UAAWQ,EAAK1L,MAAMgL,QAAQwW,SAC9BztB,IAAKC,EAAE,uBAKpB,IAAMgM,EAAKvM,OAAA4C,EAAA,EAAA5C,CAAA,GACJiY,EAAK1L,MADD,CAEP4B,gBACAtC,MAAOoM,EAAKsa,oBAGhB,OAAQta,EAAK2V,iBACT,KAAK1vB,IACD,OACIwN,EAAAC,EAAAC,cAAC4mB,GAAA,EAAD,CACIzxB,GAAIkX,EAAKlX,GACTuM,OAAQmkB,GACJllB,EAAM4B,cACN5B,EAAM4F,aAEVsgB,cAAc,EACd5mB,MAAOU,EAAMV,QAIzB,KAAK1N,IACD,GAAIoO,EAAM3O,KAAKyB,OAASlB,IAAK,CAGzB,IAAMyR,EAAWrD,EAAM4B,cAAcyB,SAAS3L,IAAI,SAAA0tB,GAC9C,OACIA,EAAI5hB,MAAMC,SAAS,aACnB2hB,EAAI5hB,MAAMC,SAAS,SAEZyhB,GAAaE,EAAKplB,EAAM4F,aAG5Bwf,IAGXplB,EAAM4B,cAANnO,OAAA4C,EAAA,EAAA5C,CAAA,GACOuM,EAAM4B,cADb,CAEIyB,kBAMJrD,EAAM4B,cAAgBsjB,GAClBllB,EAAM4B,cACN5B,EAAM4F,aAId,OAAOzG,EAAAC,EAAAC,cAAC8mB,GAAkBnmB,GAE9B,QAMI,OALAA,EAAM4B,cAAgBsjB,GAClBllB,EAAM4B,cACN5B,EAAM4F,aAGHzG,EAAAC,EAAAC,cAAC8mB,GAAkBnmB,KA/FV0L,EAoG5B0X,eAAiB,WACb1X,EAAKM,SACD,CAAE2Z,YAAaja,EAAK9V,MAAM+vB,YAC1Bja,EAAK1L,MAAMomB,qBAAqB1a,EAAK1L,MAAM3O,KAAKsC,MAvG5B+X,EA2G5BgY,sBAAwB,SAAAnjB,GAEhBA,IAAemL,EAAK2V,kBAIxBH,GAAsBxV,EAAK1L,MAAM3O,KAAMqa,EAAK2V,iBAE5C3V,EAAK1L,MAAM0jB,sBACPhY,EAAK1L,MAAM4B,cAAcjO,GACzB+X,EAAK1L,MAAM3O,KAAKyB,KAChByN,KAtHoBmL,EA0H5B2V,cAAgB,kBACZ3V,EAAK1L,MAAM4B,cAAcrB,YAAcmL,EAAK1L,MAAM3O,KAAKyB,MA3H/B4Y,EA6H5BpL,kBAAoB,kBAChB4gB,GACIxV,EAAK1L,MAAM3O,KACXqa,EAAK1L,MAAM4B,gBAhIS8J,EAmI5B2a,SAAW,WAAM,IAAAnV,EACuBxF,EAAK1L,MAAjC3O,EADK6f,EACL7f,KAAM8b,EADD+D,EACC/D,SAAUnC,EADXkG,EACWlG,QAClBsb,EAAWpF,GAAsB7vB,GAEvC,OACI8N,EAAAC,EAAAC,cAAA,OAAKC,MAAO,CAAEiP,QAAS,SACnBpP,EAAAC,EAAAC,cAAA,QAAM6L,UAAWF,EAAQoJ,MAAOA,MAAOkS,GAClCA,IAEHnZ,GAAYzB,EAAKpL,oBACfnB,EAAAC,EAAAC,cAAA,KACIuV,KAAMsM,GAAsBxV,EAAK1L,MAAM3O,KAAMqa,EAAKlX,IAClD8K,MAAO,CAAE6G,OAAQ,IACjBiO,MAAK,WAAAhgB,OACDlB,IAAYwY,EAAK1L,MAAM3O,KAAKyB,MAAMuB,QADjC,SAIL8K,EAAAC,EAAAC,cAACknB,GAAAnnB,EAAD,CAAY8L,UAAWF,EAAQyD,QAEnC,OAtJY/C,EA2J5B8a,iBAAmB,kBACftF,GACIxV,EAAK1L,MAAM3O,KACXqa,EAAK1L,MAAM4B,iBACT8J,EAAK1L,MAAMmN,SACbhO,EAAAC,EAAAC,cAAConB,GAAD,CACIp1B,KAAMqa,EAAK1L,MAAM3O,KACjBuQ,cAAe8J,EAAK1L,MAAM4B,cAC1BuhB,aAAczX,EAAK9V,MAAM+vB,WACzBplB,WAAYmL,EAAK2V,gBACjBqC,sBAAuBhY,EAAKgY,sBAC5BN,eAAgB1X,EAAK0X,iBAEzB,MAxKoB1X,EA0K5Bsa,gBAAkB,WAAM,IAAA9P,EACOxK,EAAK1L,MAAxB3O,EADY6kB,EACZ7kB,KAGR,OAJoB6kB,EACN/I,SAOR,CAAEhH,OAAQuF,EAAKgb,WAAWC,cAH1B,CACIxgB,OAAQ9U,EAAKqM,eAAiB+jB,GAJjB,IAzKvB/V,EAAKlX,GAAK+hB,EAAQ/hB,GAElBkX,EAAKgb,WAAa/Y,IAAMiZ,YALAlb,EANhC,OAAAjY,OAAAsd,EAAA,EAAAtd,CAAAiyB,EAAAlV,GAAA/c,OAAAud,EAAA,EAAAvd,CAAAiyB,EAAA,EAAAnd,IAAA,oBAAAnS,MAAA,eAAAywB,EAAApzB,OAAA+N,EAAA,EAAA/N,CAAAgO,EAAArC,EAAAsC,KAAA,SAAAC,IAAA,OAAAF,EAAArC,EAAA0C,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAF,EAAAsC,GAeQ7B,KAAKxC,MAfb+B,EAAAE,KAAA,EAiBkBif,GAAoB1e,KAAKxC,MAAM3O,MAjBjD,OAAA0Q,EAAAsG,GAAAtG,EAAAc,KAAAd,EAAAsC,GAemByiB,sBAfnBhb,KAAA/J,EAAAsC,GAAAtC,EAAAsG,IAoBQ7F,KAAKwJ,SAAS,CACV4Z,cAAc,IArB1B,wBAAA7jB,EAAAG,SAAAP,EAAAa,SAAA,yBAAAqkB,EAAAtkB,MAAAC,KAAA1J,YAAA,KAAAyP,IAAA,SAAAnS,MAAA,WA2La,IAAA6f,EAAAzT,KAAAukB,EACmCvkB,KAAKxC,MAArC3O,EADH01B,EACG11B,KAAM8b,EADT4Z,EACS5Z,SAAUvH,EADnBmhB,EACmBnhB,YAChB+f,EAAenjB,KAAK5M,MAApB+vB,WAER,OACIxmB,EAAAC,EAAAC,cAAC+W,EAAA,SAAD,KACIjX,EAAAC,EAAAC,cAAC2nB,GAAD,CACI5S,MAAO5R,KAAK6jB,WACZ1E,cAAenf,KAAKgkB,mBACpBrZ,SAAUA,IAEdhO,EAAAC,EAAAC,cAAA,OACIkJ,IAAK/F,KAAKqjB,aAAajgB,GACvBsF,UAAU,yBACV+b,IAAK,SAAAA,GAAG,OAAKhR,EAAKyQ,WAAaO,IAE9BzkB,KAAK5M,MAAMgwB,cAAgBpjB,KAAKujB,uBAEnC5Y,GAAYwY,EAAaxmB,EAAAC,EAAAC,cAAC6nB,GAAD,CAAY71B,KAAMA,IAAW,UA7MxEq0B,EAAA,CAA0B9X,aAmN1B8X,GAAK/O,aAAe,CAChBniB,GAAIoiB,IAAUC,QAWlB6O,GAAK7X,aAAe,CAChBxc,KAAM,GACN8b,UAAU,EACViZ,qBAAsBvU,SAASC,UAC/BlM,YAAa,GACbhE,cAAe,IAGnB,OAeepC,eAfS,SAAC5J,EAAOqe,GAAR,MAAsB,CAC1CrO,YAAaD,GAAoB/P,GACjCgM,cAAehI,GACXhE,EACAsrB,GAA8BjN,EAAS5iB,MAAMsC,MAI1B,SAAAoQ,GAAQ,MAAK,CACpC+iB,sBAAuB,SAAAllB,GAAa,OAChCmC,EAASF,GAAwBjC,KACrC8hB,sBAAuB,SAAC/vB,EAAIb,EAAMyN,GAAX,OACnBwD,ErDxRqC,SAACpQ,EAAIb,EAAMyN,GACpD,IAAMvH,EAAS,CACXlG,KXhDqC,gCWiDrCa,MAOJ,OAJI4M,IAAezN,IACfkG,EAAOuH,WAAaA,GAGjBvH,EqD8QMmuB,CAA8BxzB,EAAIb,EAAMyN,OAG1Cf,CAGbqL,qBAAWZ,GAAXY,CAAmB6a,KC/UfpmB,GAAQ,CACV4N,gBAAiB9C,IAAOqY,QACxBX,OAAQ,OACR3b,OAAQ,MACRkI,OAAQ,mBAKG+Y,GAFF,SAAApnB,GAAK,OAAIb,EAAAC,EAAAC,cAAA,MAAIC,MAAOA,MCG3B+nB,YAAU,WAEVC,IAAYC,GAAA,GAAA9zB,OAAA6C,EAAA,EAAA7C,CAAA8zB,GACbF,GAAU,WADG5zB,OAAA6C,EAAA,EAAA7C,CAAA8zB,GAAA,oBAEK,cAFL9zB,OAAA6C,EAAA,EAAA7C,CAAA8zB,GAAA,SAGN,UAHM9zB,OAAA6C,EAAA,EAAA7C,CAAA8zB,GAAA,SAIN,UAJMA,IAOZjoB,GAAQ,CACVlO,KAAM,CACFo2B,cAAe,OACfC,YAAa,OAEjBC,OAAQ,CACJzc,UAAW,SACXV,SAAU,OACVod,aAAc,OAElBC,OAAQ,CACJrd,SAAU,OACV0a,WAAY,OACZ5W,OAAQ,EACRlE,MAAOC,IAAOmF,SAElBsY,QAAS,CACL1d,MAAOC,IAAOmF,QACdhF,SAAU,OACV0a,WAAY,OACZ6C,UAAW,OACXjD,SAAU,WAIZkD,8MACFnyB,MAAQ,CACJH,SAAU,MAWduyB,eAAiB,SAAA3hB,GACb,IAAM4hB,EAAgB5hB,EAAG,KAAAjS,OAAQiS,EAAI6hB,YAAZ,KAAA9zB,OAA2BiS,EAAI1S,IAAO,GAC/D,SAAAS,OAAUsX,EAAK6K,QAAQrV,QAAvB,wBAAA9M,OAAqD6zB,MAGzDE,iBAAmB,SAAA9hB,GACf,IAAM+hB,EAAY/hB,EAAI5H,SAAS2Z,OAAO,GAAG,GACzC,OAAOgQ,EAAUR,OAASQ,EAAUR,OAAO9vB,YAAc,MAG7DuwB,gBAAkB,WACd,IAAMC,EAAa5c,EAAK1L,MAAMmN,SAAoB,KAAT,OAEzC,OAAOzB,EAAK1L,MAAMvB,SAAS/G,IAAI,SAAA2O,GAC3B,IAMMuhB,EACFvhB,EAAI6hB,cAAgBb,GACd3b,EAAKyc,iBAAiB9hB,GACtBihB,GAAajhB,EAAI6hB,aAErBK,EAAaliB,EAAImiB,KAAkB,KAAX,SACxBJ,EAAY/hB,EAAI5H,SAAS2Z,OAAO,GAAG,GACnCqQ,EAAUL,EAAU7vB,YAE1B,OACI4G,EAAAC,EAAAC,cAAA,MACI6L,UAAS,gBAAA9W,OAAkBk0B,GAC3B/f,IAAKlC,EAAI1S,GACTmX,QAnBc,WACbY,EAAK1L,MAAMmN,WACZlP,SAASyqB,SAAS9T,KAAOlJ,EAAKsc,eAAe3hB,MAmB7ClH,EAAAC,EAAAC,cAAA,KAAG6L,UAAS,iBAAA9W,OAAmBm0B,IAC1BliB,EAAIvO,YADT,KACwBuO,EAAIsiB,aAD5B,KAGAxpB,EAAAC,EAAAC,cAAA,KAAGC,MAAOA,GAAMsoB,QACXA,EADL,MACgBgB,YAAWH,EAAS/c,EAAK9V,MAAMH,WAE/C0J,EAAAC,EAAAC,cAAA,KAAGC,MAAOA,GAAMuoB,SAAUO,EAAUr1B,2NAhDzByP,KAAK+T,QAAQ/hB,GAAGqT,YAAYghB,aAAaztB,IAC5D,sBADE3F,SAIN+M,KAAKwJ,SAAS,CAAEvW,gJAmDhB,OACI0J,EAAAC,EAAAC,cAAC+W,EAAA,SAAD,KACIjX,EAAAC,EAAAC,cAAC2nB,GAAD,CAAY5S,MAAOrgB,IAAKC,EAAE,cAC1BmL,EAAAC,EAAAC,cAACypB,GAAD,MACCtmB,KAAKxC,MAAMvB,SAAS7F,OAAS,GAC1BuG,EAAAC,EAAAC,cAAA,OAAK6L,UAAU,0BACX/L,EAAAC,EAAAC,cAAA,MAAIC,MAAOA,GAAMlO,MAAOoR,KAAK6lB,mBAC7BlpB,EAAAC,EAAAC,cAAA,OAAKC,MAAOA,GAAMooB,QACdvoB,EAAAC,EAAAC,cAAA,KAAGuV,KAAMpS,KAAKwlB,kBACTj0B,IAAKC,EAAE,+BAtEb4Z,aAgF3Bma,GAAapR,aAAe,CACxBniB,GAAIoiB,IAAUC,OACd3V,QAAS0V,IAAUmS,QAGvB,IAWeC,GALWxpB,YANF,SAAA5J,GACpB,MAAO,CACH6I,SAAUhL,OAAOsD,OAAOyH,GAAiB5I,MAM7C,KAFsB4J,CAGxBuoB,yBCtHakB,GAnBU,SAAAjpB,GAAK,OAC1Bb,EAAAC,EAAAC,cAAC+W,EAAA,SAAD,KACIjX,EAAAC,EAAAC,cAAC2nB,GAAD,CAAY5S,MAAK,4BAAAhgB,OAA8B4L,EAAM3O,KAAKyB,QAC1DqM,EAAAC,EAAAC,cAAA,OACIC,MAAO,CACHiP,QAAS,OACT6L,eAAgB,SAChBwE,WAAY,SACZzY,OAAQ,QAGZhH,EAAAC,EAAAC,cAAC6pB,GAAA9pB,EAAD,CACIE,MAAO,CAAE4G,MAAO,IAAKC,OAAQ,IAAKgjB,MAAO,UACzChf,MAAM,gBCFPlV,GAZS,SAAAiK,GAAA,IAAGgM,EAAHhM,EAAGgM,UAAH,OACpB/L,EAAAC,EAAAC,cAAA,OACI6L,UAAWA,EACX6C,MAAM,6BACNC,QAAQ,YACRC,KAAM7D,IAAOQ,SAEbzL,EAAAC,EAAAC,cAAA,QAAM1H,EAAE,gBAAgBsW,KAAK,SAC7B9O,EAAAC,EAAAC,cAAA,QAAM1H,EAAE,qICMDyxB,GAdI,SAAAlqB,GAAA,IAAGgM,EAAHhM,EAAGgM,UAAH,OACf/L,EAAAC,EAAAC,cAAA,OACI6L,UAAWA,EACX6C,MAAM,6BACN7H,MAAM,KACNC,OAAO,KACP6H,QAAQ,YACRC,KAAM7D,IAAOif,QAEblqB,EAAAC,EAAAC,cAAA,QAAM1H,EAAE,kFACRwH,EAAAC,EAAAC,cAAA,QAAM1H,EAAE,gBAAgBsW,KAAK,gCCC/Bqb,GAAe,SAAAj4B,GAAI,OAAI6B,IAAY7B,EAAKyB,MAAMgB,aAQ9Cy1B,GAAgB,SAACC,EAASn4B,EAAMo4B,GAAhB,OAAoC,WACtDD,EAAQn4B,EAAMo4B,KAGZC,GAAW,SAAC1pB,EAAOuW,GAAY,IACzBllB,EAA2C2O,EAA3C3O,KAAM8b,EAAqCnN,EAArCmN,SAAUwc,EAA2B3pB,EAA3B2pB,uBAClBC,EAZc,SAAAv4B,GAAI,OACxBqH,YAAQrH,EAAK6B,IAAY7B,EAAKyB,MAAMe,WAAWmD,OAC3C,SAAC3F,EAAMuG,EAAOiyB,GAAd,OACIA,EAAM3S,UAAU,SAAAlZ,GAAE,OAAIA,EAAGrK,KAAOtC,EAAKsC,OAAQiE,IAShCkyB,CAAgBz4B,GA8BrC,OACI8N,EAAAC,EAAAC,cAAC+W,EAAA,SAAD,KACIjX,EAAAC,EAAAC,cAAC2nB,GAAD,CAAY5S,MAAOkV,GAAaj4B,KAChC8N,EAAAC,EAAAC,cAACypB,GAAD,MACA3pB,EAAAC,EAAAC,cAAA,OAAK6L,UAAU,0BACX/L,EAAAC,EAAAC,cAAA,MAAI6L,UAAWF,KAAQ5Z,MAClBw4B,EAAalyB,IAAI,SAAAqyB,GAAW,OACzB5qB,EAAAC,EAAAC,cAAA,MAAI6L,UAAWF,KAAQ3Z,KAAMkX,IAAKwhB,EAAYp2B,IAC1CwL,EAAAC,EAAAC,cAAC2qB,GAAD,CAAiB9e,UAAWF,KAAQ1Z,WApC5C,SAAAy4B,GACZ,IAAME,EACF9qB,EAAAC,EAAAC,cAAA,UACI6L,UAAWF,KAAQvZ,aACnBqZ,QAASye,GACLI,EACAt4B,EACA04B,IAGJ5qB,EAAAC,EAAAC,cAAC6qB,GAAD,CAAYhf,UAAWF,KAAQxZ,cAIvC,OACI2N,EAAAC,EAAAC,cAAC+W,EAAA,SAAD,KACIjX,EAAAC,EAAAC,cAAA,KACI6L,UAAWF,KAAQzZ,KACnB+N,MAAO,CAAE6K,MAAOC,IAAO+f,SACvBvV,KAAMrgB,YAAWlD,EAAKyB,KAAMi3B,EAAaxT,EAAQ/hB,KAEhDu1B,EAAYlyB,MAEhBsV,EAAW8c,EAAe,MAcd1oB,CAAQwoB,UASrCL,GAAS/S,aAAe,CACpBniB,GAAIoiB,IAAUC,QAGHrX,mBACX,KACA,CACImqB,uBC7E8B,SAAC5S,EAAejQ,GAAhB,OAA4B,SAAA/C,GAC9D,IAAMiT,EAAe9jB,IAAY6jB,EAAcjkB,MAAMe,SAE/Cu2B,EAAarT,EAAcC,GAAchgB,OAC3C,SAAA3F,GAAI,OAAIA,EAAKsC,KAAOmT,EAAQnT,KAG5By2B,EAAWxxB,QACXme,EAAcC,GAAgBoT,EAC9BrmB,EAASgD,GAAsBgQ,KAE/BhT,EAASiD,GAAsB+P,OD+DxBvX,CAKbkqB,cEtEIpqB,GAAQ,CACVkiB,QAAS,CACLpO,QAAS,OACT2R,WAAY,WACZE,WAAY,QAEhBoF,UAAW,CACP9f,SAAU,OACVya,YAAa,SACb9e,MAAO,MACPmI,OAAQ,SACRE,QAAS,QACT0W,WAAY,QAEhBtC,UAAW,CACPgF,aAAc,OACdjZ,UAAW,SA6DJlP,eAZS,SAAC5J,EAAOqe,GAC5B,IAIM5iB,GAJQ4iB,EAAS9G,SACjB7H,GAAuB1P,GACvBiB,EAAmBjB,IAEN0N,KAAK,SAAAjS,GAAI,OAAIA,EAAKsC,KAAOsgB,EAAS5iB,KAAKsC,KAE1D,MAAO,CACHZ,KAAM1B,EAAOA,EAAK0B,KAAO,KAM7B,CACIgU,0BAHOvH,CAzDE,SAAAQ,GAAS,IACd3O,EAAgD2O,EAAhD3O,KAAM8b,EAA0CnN,EAA1CmN,SAAUpa,EAAgCiN,EAAhCjN,KAAMgU,EAA0B/G,EAA1B+G,sBAExBujB,EAAe,SAAAhe,GACjB,IAAMie,EAAW92B,OAAA4C,EAAA,EAAA5C,CAAA,GACVpC,EADU,CAEb0B,KAAMuZ,EAAMqE,OAAOva,QAGvB2Q,EAAsBwjB,IAiC1B,OAAOprB,EAAAC,EAAAC,cAAC+W,EAAA,SAAD,KAAWjJ,EAnBVhO,EAAAC,EAAAC,cAAC+W,EAAA,SAAD,KACIjX,EAAAC,EAAAC,cAAC2nB,GAAD,CAAY5S,MAAOrgB,IAAKC,EAAE,eAC1BmL,EAAAC,EAAAC,cAACypB,GAAD,MACA3pB,EAAAC,EAAAC,cAAA,OAAK6L,UAAU,0BACX/L,EAAAC,EAAAC,cAACmrB,GAAA,OAAD,CAAgBC,OAAQH,GACpBnrB,EAAAC,EAAAC,cAACoS,GAAArS,EAAD,CACIhJ,MAAOrD,EACP8mB,WAAS,EACT6Q,WAAS,EACTprB,MAAOA,GAAM+qB,UACb3Y,YAAa3d,IAAKC,EAAE,iBACpB2d,SAAU2Y,OAtBjB,WACb,IAAMK,EAAel3B,OAAOuJ,OAAO,GAAIsC,GAAM+qB,UAAW/qB,GAAMkiB,SAC9D,OACIriB,EAAAC,EAAAC,cAAA,OAAK6L,UAAU,yBAAyB5L,MAAOA,GAAMqjB,WACjDxjB,EAAAC,EAAAC,cAACmrB,GAAA,OAAD,CAAgBlrB,MAAOqrB,GAAe53B,IA0BR63B,MCnExCC,GAAe,SAACC,EAAYz5B,EAAMuU,GACpC,IAAImlB,EAAS,GAAA32B,OAAM02B,EAAWp2B,UAAjB,qBAAAN,OAA8C/C,EAAKsC,IAEhE,GACIiS,GACAA,EAAW,IACXA,EAAW,GAAkBhN,OAC/B,CACE,IAAMoyB,EAAQplB,EAAW,GAAkBlO,IACvC,SAAAuzB,GAAM,OAAIA,EAAO7yB,MAAM,KAAKggB,OAAO,GAAG,KAG1C2S,GAAS,gBAAA32B,OAAoB42B,EAAM3yB,KAAK,MAG5C,OAAO0yB,GAGLG,GAAU,SAAAhsB,EAAwBqX,GAAY,IAC5CuU,EADWz5B,EAAiC6N,EAAjC7N,KAAMuU,EAA2B1G,EAA3B0G,YAGfulB,EAAS95B,EAAK85B,OAQpB,OANIA,IACAL,EAAavU,EAAQ/hB,GAAG42B,OAAOC,cAAc/nB,KACzC,SAAAgoB,GAAG,OAAIA,EAAI/iB,MAAQ4iB,KAIpBL,GAAcA,EAAWjzB,MAAQizB,EAAWp2B,UAC/CyK,EAAAC,EAAAC,cAAC+W,EAAA,SAAD,KACIjX,EAAAC,EAAAC,cAAC2nB,GAAD,CAAY5S,MAAO0W,EAAWjzB,OAC9BsH,EAAAC,EAAAC,cAACypB,GAAD,MACA3pB,EAAAC,EAAAC,cAAA,UACI+U,MAAO0W,EAAWjzB,KAClB0zB,IAAKV,GAAaC,EAAYz5B,EAAMuU,GACpCsF,UAAU,yBACV5L,MAAO,CAAEwiB,OAAQ,WAIzB3iB,EAAAC,EAAAC,cAAC+W,EAAA,SAAD,KACIjX,EAAAC,EAAAC,cAAC2nB,GAAD,CAAY5S,MAAK,GAAAhgB,OAAK+2B,EAAL,oBACjBhsB,EAAAC,EAAAC,cAACypB,GAAD,MACA3pB,EAAAC,EAAAC,cAAA,OACI6L,UAAU,yBACV5L,MAAO,CACHiP,QAAS,OACT6L,eAAgB,SAChBwE,WAAY,SACZzY,OAAQ,QAGZhH,EAAAC,EAAAC,cAAC6pB,GAAA9pB,EAAD,CACI+K,MAAM,WACNQ,UAAQ,EACRrL,MAAO,CAAE4G,MAAO,IAAKC,OAAQ,IAAKgjB,MAAO,eAO7D+B,GAAQvU,aAAe,CACnBniB,GAAIoiB,IAAUC,QAGlB,IAIerX,eAJS,SAAA5J,GAAK,MAAK,CAC9BgQ,YAAaD,GAAoB/P,KAGtB4J,CAAyB0rB,IC3ElC5rB,GAAQ,CACV+O,OAAQ,YACR9D,SAAU,OACV0a,WAAY,OACZ9a,MAAOC,IAAOkE,SAgBHkd,GAbI,WACf,OACIrsB,EAAAC,EAAAC,cAAC+W,EAAA,SAAD,KACIjX,EAAAC,EAAAC,cAAC2nB,GAAD,CAAY5S,MAAOrgB,IAAKC,EAAE,YAC1BmL,EAAAC,EAAAC,cAAA,KAAGC,MAAOA,IACLvL,IAAKC,EACF,iFC+BP0xB,GAAO,SAAA1lB,GAChB,IAAMyrB,EA1BU,SAAA34B,GAChB,OAAQA,GACJ,KAAKpB,IACL,KAAKC,IACL,KAAKC,IACL,KAAKE,IACL,KAAKD,IACD,OAAO65B,GACX,KAAKv5B,IACD,OAAO41B,GACX,KAAK/1B,IACL,KAAKC,IACL,KAAKC,IACD,OAAOw3B,GACX,KAAKt3B,IACD,OAAOu5B,GACX,KAAKt5B,IACD,OAAOm5B,GACX,KAAKz5B,IACD,OAAOm5B,GACX,QACI,OAAOjC,IAKE2C,CAAY5rB,EAAM3O,KAAKyB,MAExC,OACIqM,EAAAC,EAAAC,cAACosB,EAAD,CACIp6B,KAAM2O,EAAM3O,KACZ8b,SAAUnN,EAAMmN,SAChBvH,YACI5F,EAAMmN,SAAWzH,GAA6B1F,EAAM4F,YAExDwgB,qBAAsBpmB,EAAMomB,6CCvDlC9mB,GAAQ,CACVoQ,OAAQ,CACJ2B,SAAU,WACVpE,IAAK,MACL4e,MAAO,MACP3rB,OAAQ,QAEZuO,KAAM,CACFR,KAAM7D,IAAOif,SAUNyC,GANgB,SAAA5sB,GAAA,IAAG4L,EAAH5L,EAAG4L,QAAH,OAC3B3L,EAAAC,EAAAC,cAACkkB,GAAD,CAAkBzY,QAASA,EAASxL,MAAOA,GAAMoQ,QAC7CvQ,EAAAC,EAAAC,cAAC0sB,GAAA3sB,EAAD,CAAYE,MAAOA,GAAMmP,SCFlBud,GAdiB,SAAA9sB,GAAA,IAAGnM,EAAHmM,EAAGnM,KAAH,OAC5BoM,EAAAC,EAAAC,cAAA,OACIC,MAAO,CACH8T,QAAS,YACTnI,UAAW,SACXV,SAAU,OACVhL,WAAY,IACZ4K,MAAOC,IAAOkE,UAGjBvb,wCCNHk5B,8MAWFr2B,MAAQ,CACJs2B,YAAY,KAEhBC,aAAe,OACfC,kBAAoB,sFAGhB,IAAMC,EAAW7pB,KAAKxC,MAAMssB,aAAepgB,OAAOqgB,YAElD,GAAK/pB,KAAK2pB,aAAV,CAIA,IAAMK,EAAOhqB,KAAK2pB,aAAaM,wBAE3BD,EAAKE,QAAUL,GACfG,EAAKvf,IAAMf,OAAOqgB,YAAcF,IAEhC7pB,KAAKwJ,SAAS,CACVkgB,YAAY,IAGhB1pB,KAAKmqB,4DAIK,IAAA1W,EAAAzT,KACdA,KAAK4pB,kBAAoBld,KACrB,kBAAM+G,EAAK2W,mBACXpqB,KAAKxC,MAAM6sB,YAGf3gB,OAAOC,iBAAiB,SAAU3J,KAAK4pB,2DAGvClgB,OAAOW,oBAAoB,SAAUrK,KAAK4pB,+DAI1C5pB,KAAKsqB,kBACLtqB,KAAKoqB,iEAILpqB,KAAKmqB,iDAGA,IAAAI,EAAAvqB,KAAA0O,EACoD1O,KAAKxC,MAAtDyN,EADHyD,EACGzD,SAAuCzN,GAD1CkR,EACa2b,WADb3b,EACyBob,aADzB74B,OAAAu5B,GAAA,EAAAv5B,CAAAyd,EAAA,2CAEGgb,EAAe1pB,KAAK5M,MAApBs2B,WAER,OACI/sB,EAAAC,EAAAC,cAAA,MAAA5L,OAAAuJ,OAAA,CAAKiqB,IAAK,SAAAA,GAAG,OAAK8F,EAAKZ,aAAelF,IAAUjnB,GAC3CksB,GAAcze,UAhEWG,aAApCqe,GAMKpe,aAAe,CAClBgf,WAVkB,IAWlBP,aAVoB,KAwEbL,UC/BFgB,GAAb,SAAAzc,GAAA,SAAAyc,IAAA,IAAAhb,EAAAvG,EAAAjY,OAAAkY,EAAA,EAAAlY,CAAA+O,KAAAyqB,GAAA,QAAA/a,EAAApZ,UAAAF,OAAAuZ,EAAA,IAAAC,MAAAF,GAAAG,EAAA,EAAAA,EAAAH,EAAAG,IAAAF,EAAAE,GAAAvZ,UAAAuZ,GAAA,OAAA3G,EAAAjY,OAAAmY,EAAA,EAAAnY,CAAA+O,MAAAyP,EAAAxe,OAAAoY,EAAA,EAAApY,CAAAw5B,IAAAnhB,KAAAvJ,MAAA0P,EAAA,CAAAzP,MAAApO,OAAA+d,MACIvc,MAAQ,CACJs3B,cAAe,IAFvBxhB,EAKI0a,qBAAuB,SAAA+G,GACnB,IAAMC,EAC6C,mBAAxC1hB,EAAK9V,MAAMs3B,cAAcC,IAC1BzhB,EAAK9V,MAAMs3B,cAAcC,GAG7BD,EAAaz5B,OAAA4C,EAAA,EAAA5C,CAAA,GAAQiY,EAAK9V,MAAMs3B,eACtCA,EAAcC,IAAcC,EAC5B1hB,EAAKM,SAAS,CAAEkhB,mBAbxBxhB,EAgBI2hB,aAAe,SAAAF,GACXzhB,EAAK1L,MAAMgH,sBAAsBmmB,IAjBzCzhB,EA0BI4hB,eAAiB,SAAAC,GACT7hB,EAAK1L,MAAMqgB,MACX3U,EAAK1L,MAAMwtB,wBAAwBD,IA5B/C7hB,EAgCI+hB,aAAe,SAACC,EAAQC,EAAS9X,GAC7B9X,GAAa8X,EAAQ5Y,GAErB,IAAM8Z,EAAgBrL,EAAK1L,MAAMrH,eAAe2K,KAC5C,SAAAjS,GAAI,OAAIA,EAAKsC,KAAOkiB,EAAQ5Y,IAI5B8Z,GAAiB9jB,YAAa8jB,IAC9B6W,GAAa7W,IAzCzBrL,EA6CImiB,oBAAsB,SAAAl6B,GAAE,OAAI,kBAAM+X,EAAK2hB,aAAa15B,KA7CxD+X,EAAA,OAAAjY,OAAAsd,EAAA,EAAAtd,CAAAw5B,EAAAzc,GAAA/c,OAAAud,EAAA,EAAAvd,CAAAw5B,EAAA,EAAA1kB,IAAA,4BAAAnS,MAAA,SAoB8B6a,GAClBA,EAAUoP,MACV7d,KAAKwJ,SAAS,CAAEkhB,cAAe,OAtB3C,CAAA3kB,IAAA,SAAAnS,MAAA,WA+Ca,IAAA6f,EAAAzT,KAAA0O,EACuC1O,KAAKxC,MAAzCqgB,EADHnP,EACGmP,KAAMnnB,EADTgY,EACShY,UAAWP,EADpBuY,EACoBvY,eAEzB,IAAKO,IAAcP,EAAeC,OAC9B,OACIuG,EAAAC,EAAAC,cAACyuB,GAAD,CACI/6B,KAAMgB,IAAKC,EAAE,0CAKzB,IAAMgC,EAAQ2C,EAAejB,IAAI,SAAArG,GAC7B,IAAM08B,EAAe9X,EAAKrgB,MAAMs3B,cAAc77B,EAAKsC,IAC/Cq6B,EAAQ,CAAEvxB,EAAGpL,EAAKoL,GAMtB,OAJIsxB,IAAiC,IAAjBA,IAChBC,EAAMvxB,EAAIpL,EAAKoL,EAjEP,IAoELhJ,OAAOuJ,OAAO,GAAI3L,EAAM28B,EAAO,CAClC/wB,EAAG5L,EAAKsC,GACRs6B,K3ErGe,M2EyGvB,OACI9uB,EAAAC,EAAAC,cAAA,OAAK6L,UAAU,gBACVhS,EACGiG,EAAAC,EAAAC,cAAC6uB,GAAA,EAAD,KACI/uB,EAAAC,EAAAC,cAAC8uB,GAAA,EAAD,OAEJ,KACJhvB,EAAAC,EAAAC,cAAC+uB,GAAAhvB,EAAD,CACIkuB,eAAgB9qB,KAAK8qB,eACrBG,aAAcjrB,KAAKirB,aACnBviB,UAAU,SACVwiB,OAAQ13B,EACRqY,OAAQjS,GACRiyB,K3EjHC,G2EkHDC,U3E7HW,G2E8HXpoB,MAAOgG,OAAOqiB,WACdC,Y3EhIa,W2EiIbC,YAAapO,EACbqO,YAAarO,EACbsO,gBAAgB,kBAEf34B,EAAM0B,IAAI,SAAArG,GACP,IAAMu9B,EAAiB,CACnBv9B,EAAKyB,KACLutB,EAAO,OAAS,QAClBhoB,KAAK,KAEP,OACI8G,EAAAC,EAAAC,cAACwvB,GAAD,CACItmB,IAAKlX,EAAK4L,EACViO,UAAW0jB,GAEVvO,EACGlhB,EAAAC,EAAAC,cAACyvB,GAAD,CACIhkB,QAASmL,EAAK4X,oBACVx8B,EAAKsC,MAGb,KACJwL,EAAAC,EAAAC,cAAC0vB,GAAD,CACI19B,KAAMA,EACN8b,SAAUkT,EACV+F,qBACInQ,EAAKmQ,gCAnH7C6G,EAAA,CAA8Brf,aAmI9Bqf,GAASpf,aAAe,CACpBlV,eAAgB,IAKpB,IAeMkb,GAAqB,CACvB2Z,wB3DzImC,SAAAp3B,GAAK,MAAK,CAC7CtD,KNlDqC,4BMmDrCsD,U2DwIA4Q,0BAeWxH,eAhCS,SAAC5J,EAAOqe,GAC5B,IAAMkG,EAAoBlG,EAASoM,KAC7Blb,GAAsBvP,GACtBa,EAAkBb,EAAO0D,GAAe1D,IAExC+C,EAAiBsb,EAASoM,KAC1B/a,GAAuB1P,GACvBiB,EAAmBjB,GAEzB,MAAO,CACHsD,UAAWK,GAAsB3D,KAAWukB,EAC5CxhB,mBAuBJkb,GAde,SAACE,EAAYC,EAAeC,GAC3C,IAAM+a,EAAat2B,YAAQqb,EAAWpb,gBAAgB3B,OAAO6F,IAE7D,OAAOpJ,OAAA4C,EAAA,EAAA5C,CAAA,GACAugB,EADP,CAEIqM,KAAMpM,EAASoM,KACfnnB,UAAW6a,EAAW7a,UACtBP,eAAgBq2B,EAChBjxB,mBAIOyB,CAIbytB,cCpNIhjB,GAAS,CACXglB,eAAgB,CACZ5gB,OAAQ,MACR+E,QAAS,SACTsH,aAAc,MACdvQ,MAAOC,IAAOiD,MACdH,gBAAiB,UACjB/G,OAAQ,GACRoI,QAAS,OACTqQ,WAAY,UAEhBsQ,MAAO,CACH3kB,SAAU,OACVD,OAAQ,UACRya,WAAY,UAEhBoK,YAAa,CACT5kB,SAAU,OACVG,eAAgB,YAChBmU,WAAY,OACZvU,OAAQ,YAIV8kB,8MACFtkB,QAAU,SAAAnX,GAAE,OAAI,kBAAM+X,EAAK1L,MAAM8K,QAAQnX,OACzC07B,SAAW,SAAA17B,GAAE,OAAI,kBAAM+X,EAAK1L,MAAMqvB,SAAS17B,6EAElC,IACG6D,EAASgL,KAAKxC,MAAdxI,KAER,OACI2H,EAAAC,EAAAC,cAAA,OAAKC,MAAO2K,GAAOglB,gBACf9vB,EAAAC,EAAAC,cAAA,QAAMC,MAAO2K,GAAOilB,MAAOpkB,QAAStI,KAAKsI,QAAQtT,EAAK7D,KAAtD,GAAAS,OACQoD,EAAKK,KADb,MAAAzD,OAEQoD,EAAKT,OAAO6B,OAAS,EACf7E,IAAKC,EAAE,qBAAsB,CACzBs7B,MAAO93B,EAAKT,OAAO6B,SAEvBpB,EAAKT,OAAO,GAAGc,OAG7BsH,EAAAC,EAAAC,cAAA,QACIC,MAAO2K,GAAOklB,YACdrkB,QAAStI,KAAK6sB,SAAS73B,EAAK7D,KAE3BI,IAAKC,EAAE,mBAtBF4Z,aAmC1BwhB,GAAYvhB,aAAe,CACvB/C,QAAS+G,SAASC,UAClBud,SAAUxd,SAASC,WAGRsd,UC5CFG,GAAb,SAAA/e,GAAA,SAAA+e,IAAA,IAAAtd,EAAAvG,EAAAjY,OAAAkY,EAAA,EAAAlY,CAAA+O,KAAA+sB,GAAA,QAAArd,EAAApZ,UAAAF,OAAAuZ,EAAA,IAAAC,MAAAF,GAAAG,EAAA,EAAAA,EAAAH,EAAAG,IAAAF,EAAAE,GAAAvZ,UAAAuZ,GAAA,OAAA3G,EAAAjY,OAAAmY,EAAA,EAAAnY,CAAA+O,MAAAyP,EAAAxe,OAAAoY,EAAA,EAAApY,CAAA87B,IAAAzjB,KAAAvJ,MAAA0P,EAAA,CAAAzP,MAAApO,OAAA+d,MACIqd,cAAgB,SAAA77B,GACZ+X,EAAK1L,MAAM0d,iBAAiB/pB,GAC5B+X,EAAK1L,MAAMkd,qBAAqBvpB,IAHxC+X,EAMI+jB,aAAe,SAAA97B,GACX+X,EAAK1L,MAAM2c,wBAAwB,CAC/BhpB,KACAkE,KAAM6T,EAAK1L,MAAMoe,QAAQ9a,KAAK,SAAAjS,GAAI,OAAIA,EAAKsC,KAAOA,IAAIkE,QATlE6T,EAAA,OAAAjY,OAAAsd,EAAA,EAAAtd,CAAA87B,EAAA/e,GAAA/c,OAAAud,EAAA,EAAAvd,CAAA87B,EAAA,EAAAhnB,IAAA,SAAAnS,MAAA,WAaa,IAAA6f,EAAAzT,KAAA0O,EACkC1O,KAAKxC,MAApCoe,EADHlN,EACGkN,QAAS7W,EADZ2J,EACY3J,SAAUyD,EADtBkG,EACsBlG,QACrBiC,EAAM1B,GAAahE,GAAY,GAErC,OAAO6W,EAAQxlB,OACXuG,EAAAC,EAAAC,cAAA,OAAK6L,UAAWF,EAAQ0kB,IAAKpwB,MAAO,CAAE2N,QACjCmR,EAAQ1mB,IAAI,SAAAV,GAAM,OACfmI,EAAAC,EAAAC,cAACswB,GAAD,CACIpnB,IAAKvR,EAAOrD,GACZ6D,KAAMR,EACN8T,QAASmL,EAAKwZ,aACdJ,SAAUpZ,EAAKuZ,mBAI3B,SA5BZD,EAAA,CAA+B3hB,aAsC/B2hB,GAAU1hB,aAAe,CACrBuQ,QAAS,GACTwR,iBAAkB/d,SAASC,UAC3BoL,qBAAsBrL,SAASC,WAKnC,IAAM+d,GAAkBC,aACpB,CAACnqB,GAAqBuD,IACtB,SAACkV,EAASjV,GAAV,OACI1V,OAAOqS,KAAKsY,GAAS2R,OAAO,SAACC,EAAKr8B,GAU9B,OATAq8B,EAAIld,KAAK,CACLnf,GAAIA,EACJkE,KAAMsR,EAAWxV,GAAIkE,KACrBd,OAAQqnB,EAAQzqB,GAAI+D,IAAI,SAAAtB,GAAK,MAAK,CAC9BzC,GAAIyC,EAAMzC,GACVkE,KAAMzB,EAAM0B,aAAe1B,EAAMyB,UAIlCm4B,GACR,MAQIxwB,eALS,SAAA5J,GAAK,MAAK,CAC9BwoB,QAASyR,GAAgBj6B,GACzB2R,SAAUC,GAAuB5R,KAKjC,CACI+mB,wBAAyBP,GACzBsB,iBAAkB3X,GAClBmX,qBAAsBlX,IALfxG,CAObqL,qBAtFa,CACX6kB,IAAK,CACDre,SAAU,SACVnR,OAAQ,EACRkT,QAAS,QACT7E,QAAS,OACT6L,eAAgB,SAChB6V,SAAU,SA+EhBplB,CAAmB0kB,KCzFNW,GARiB,SAAAlwB,GAAK,OACjCb,EAAAC,EAAAC,cAAC+W,EAAA,SAAD,KACIjX,EAAAC,EAAAC,cAAC8wB,GAAD,CAAU9P,KAAMrgB,EAAMmN,WACtBhO,EAAAC,EAAAC,cAAC+wB,GAAD,MACAjxB,EAAAC,EAAAC,cAACgxB,GAAD,CAAUhQ,KAAMrgB,EAAMmN,aCMjBmjB,GAAU,SAAApxB,GAAgD,IAA7CqxB,EAA6CrxB,EAA7CqxB,oBAChBlqB,EAD6DnH,EAAxBsxB,kBAErCz8B,IAAKC,EACD,oEAEJD,IAAKC,EAAE,iCAEb,OAAOu8B,EACHpxB,EAAAC,EAAAC,cAACoxB,GAAD,CAAkBtjB,UAAU,IAE5BhO,EAAAC,EAAAC,cAACyuB,GAAD,CAAkB/6B,KAAMsT,KAkCjB7G,eAVS,SAAA5J,GACpB,IAAMY,EAAaI,EAAkBhB,GAErC,MAAO,CACHjC,GAAI2F,GAAe1D,GACnB46B,kBAAmB92B,KAAQlD,GAC3Bk6B,kBAAmB/5B,EAAsBf,KAIlC4J,CA9Bc,SAAAtF,GAAiD,IAA9CvG,EAA8CuG,EAA9CvG,GAAI68B,EAA0Ct2B,EAA1Cs2B,kBAC1BD,EAAsB58B,IAAO68B,EAC7BG,GAFoEz2B,EAAvBw2B,kBAEC,OAAP/8B,EAE7C,OACIwL,EAAAC,EAAAC,cAAC+W,EAAA,SAAD,KACIjX,EAAAC,EAAAC,cAACuxB,GAAD,MACAzxB,EAAAC,EAAAC,cAACwxB,GAAD,MACA1xB,EAAAC,EAAAC,cAAA,OAAK6L,UAAU,qBACVylB,EAAkB,KACfxxB,EAAAC,EAAAC,cAACyxB,GAAD,CACIP,oBAAqBA,EACrBC,kBAAmBA,qGCC5BO,GAjCoB,SAAA7xB,GAK7B,IAJFuF,EAIEvF,EAJFuF,cACAusB,EAGE9xB,EAHF8xB,kBACAC,EAEE/xB,EAFF+xB,kBACAnyB,EACEI,EADFJ,KAEM6f,EAAU,CACZxf,EAAAC,EAAAC,cAAC0c,GAAA,EAAD,CAAQxT,IAAI,SAAS2oB,WAAS,EAACpmB,QAASmmB,GACnCl9B,IAAKC,EAAE,WAEZmL,EAAAC,EAAAC,cAAC0c,GAAA,EAAD,CAAQxT,IAAI,SAAS4oB,aAAW,EAACrmB,QAASkmB,GACrCj9B,IAAKC,EAAE,YAIhB,OACImL,EAAAC,EAAAC,cAACqc,GAAAtc,EAAD,CAAQN,KAAMA,EAAMuB,QAAS4wB,GACzB9xB,EAAAC,EAAAC,cAAC+xB,GAAAhyB,EAAD,CAAaE,MAAO,CAAEiL,SAAU,UAAWhL,WAAY,QAClDxL,IAAKC,EAAE,qBAEZmL,EAAAC,EAAAC,cAACgyB,GAAAjyB,EAAD,KACID,EAAAC,EAAAC,cAACiyB,GAAAlyB,EAAD,CAAmBE,MAAO,CAAEiL,SAAU,aACjCxW,IAAKC,EACF,mKACA,CAAEyQ,oBAIdtF,EAAAC,EAAAC,cAACyc,GAAA1c,EAAD,KAAgBuf,KCNtB4S,GAAiB,CACnBprB,OxD9BkC,GwD+BlCqE,WAAY,OACZqU,WAAY,OACZrL,YAAa,QAGJge,GAAb,SAAAhhB,GAAA,SAAAghB,IAAA,IAAAvf,EAAAvG,EAAAjY,OAAAkY,EAAA,EAAAlY,CAAA+O,KAAAgvB,GAAA,QAAAtf,EAAApZ,UAAAF,OAAAuZ,EAAA,IAAAC,MAAAF,GAAAG,EAAA,EAAAA,EAAAH,EAAAG,IAAAF,EAAAE,GAAAvZ,UAAAuZ,GAAA,OAAA3G,EAAAjY,OAAAmY,EAAA,EAAAnY,CAAA+O,MAAAyP,EAAAxe,OAAAoY,EAAA,EAAApY,CAAA+9B,IAAA1lB,KAAAvJ,MAAA0P,EAAA,CAAAzP,MAAApO,OAAA+d,MACIvc,MAAQ,CACJ67B,yBAAyB,EACzBC,oBAAgB34B,EAChB44B,yBAAyB,EACzBC,iBAAa74B,GALrB2S,EAQImmB,gBAAkB,WACdnmB,EAAKM,SAAS,CAAE2lB,yBAAyB,KATjDjmB,EAYIomB,OAAS,WACLpmB,EAAK1L,MAAM8xB,SAAS72B,KAAK,SAAA82B,GACrBrmB,EAAKM,SAAS,CAAE4lB,YAAW,IAAAx9B,OAAM29B,QAd7CrmB,EAkBIsmB,UAAY,WACRtmB,EAAK1L,MAAMiyB,mBACX,IAAML,EAAclmB,EAAK1L,MAAM9J,YAAX,IAAA9B,OACVsX,EAAK1L,MAAM9J,aACf,IACNwV,EAAKM,SAAS,CAAE4lB,iBAvBxBlmB,EA0BIulB,kBAAoB,WAChBvlB,EAAKM,SAAS,CAAE2lB,yBAAyB,KA3BjDjmB,EA8BIslB,kBAAoB,WAChBtlB,EAAKM,SAAS,CAAE2lB,yBAAyB,IACzCjmB,EAAK1L,MAAMkyB,SAASxmB,EAAK1L,MAAM9J,aAAa+E,KAAK,WAC7CyQ,EAAKM,SAAS,CAAE4lB,YAAa,SAjCzClmB,EAqCIymB,oBArCJ,eAAAjzB,EAAAzL,OAAA+N,EAAA,EAAA/N,CAAAgO,EAAArC,EAAAsC,KAqC0B,SAAAC,EAAMywB,GAAN,IAAAC,EAAAC,EAAA,OAAA7wB,EAAArC,EAAA0C,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,WACdmwB,IAAgBA,EAAax5B,OADf,CAAAmJ,EAAAE,KAAA,eAAAF,EAAAE,KAAA,EAESyJ,EAAK6K,QAAQ/hB,GAAGqT,YAAYghB,aAAaztB,IAC5D,eAHU,OAERi3B,EAFQtwB,EAAAc,MAMRyvB,EAAcF,EAAa9uB,KAC7B,SAAAtP,GAAC,OAAIA,EAAEu+B,SAAWF,GAA2B,SAAfr+B,EAAEw+B,aAGjBF,EAAYl8B,OAC3BsV,EAAK1L,MAAMyyB,YACP/mB,EAAK1L,MAAM9J,YACXo8B,EAAYl8B,OAbN,wBAAA2L,EAAAG,SAAAP,MArC1B,gBAAAQ,GAAA,OAAAjD,EAAAqD,MAAAC,KAAA1J,YAAA,GAAA4S,EAwDIgnB,oBAAsB,WACdhnB,EAAK1L,MAAM9J,cAAgBwV,EAAK9V,MAAM87B,gBACtC91B,GAAkB8P,EAAK1L,MAAM9J,aAAa+E,KAAK,SAAAy2B,GAAc,OACzDhmB,EAAKM,SAAS,CAAE0lB,sBA3DhChmB,EAwEIinB,wBAA0B,WACtBjnB,EAAKM,SAAS,CACVylB,yBAA0B/lB,EAAK9V,MAAM67B,2BA1EjD/lB,EA8EIknB,oBAAsB,kBAClBlnB,EAAK1L,MAAM6yB,cAAgBnnB,EAAK1L,MAAM9J,YAClCiJ,EAAAC,EAAAC,cAACyzB,GAAD,CACIruB,cAAeiH,EAAK1L,MAAMyE,cAC1BusB,kBAAmBtlB,EAAKslB,kBACxBC,kBAAmBvlB,EAAKulB,kBACxBnyB,KAAM4M,EAAK9V,MAAM+7B,0BAErB,MAtFZjmB,EAwFIqnB,kBAAoB,kBAChBrnB,EAAK9V,MAAM87B,gBAAkBhmB,EAAK9V,MAAM87B,eAAe/9B,GACnDwL,EAAAC,EAAAC,cAAC2zB,GAAA5zB,EAAD,CACI8L,UAAU,qBACV1W,GAAIkX,EAAK6K,QAAQ/hB,GACjBsK,KAAM4M,EAAK9V,MAAM67B,wBACjBxR,eAAgBvU,EAAKinB,wBACrBM,kBAAmBvnB,EAAK9V,MAAM87B,eAC9BwB,kBAAmB,CAAC,OAAQ,eAE5BC,mBAAoBznB,EAAKymB,oBACzBiB,mBAAoB,SAAAC,GAAG,OACnB93B,QAAQC,IAAI,2BAA4B63B,MAGhD,MAvGZ3nB,EAAA,OAAAjY,OAAAsd,EAAA,EAAAtd,CAAA+9B,EAAAhhB,GAAA/c,OAAAud,EAAA,EAAAvd,CAAA+9B,EAAA,EAAAjpB,IAAA,oBAAAnS,MAAA,WAiEQoM,KAAKkwB,wBAjEb,CAAAnqB,IAAA,qBAAAnS,MAAA,WAqEQoM,KAAKkwB,wBArEb,CAAAnqB,IAAA,SAAAnS,MAAA,WA0GQ,GAAIoM,KAAK5M,MAAMg8B,YACX,OAAOzyB,EAAAC,EAAAC,cAACi0B,GAAA,EAAD,CAAUrkB,GAAIzM,KAAK5M,MAAMg8B,cAF/B,IAAA1gB,EAK+C1O,KAAKxC,MAAjD9J,EALHgb,EAKGhb,YAAa28B,EALhB3hB,EAKgB2hB,aAAcU,EAL9BriB,EAK8BqiB,aAC7BrgB,EAAmB1H,GAAoBL,IAEvCqoB,EAAiBD,EACjBx/B,IAAKC,EAAE,uBACPD,IAAKC,EAAE,oBAEb,OACImL,EAAAC,EAAAC,cAAC+W,EAAA,SAAD,KACIjX,EAAAC,EAAAC,cAACiU,GAAD,CAAYnN,OAAQ+M,EAAkB/F,UAAU,GAC5ChO,EAAAC,EAAAC,cAAA,OAAKC,MAAOiyB,IACPgC,EACGp0B,EAAAC,EAAAC,cAAA,OAAK6L,UAAWF,KAAQuI,cACpBpU,EAAAC,EAAAC,cAAA,QAAMC,MAAO,CAAEkU,YAAa,SACxBrU,EAAAC,EAAAC,cAAC0c,GAAA,EAAD,CAAQ0X,SAAO,EAAC3oB,QAAStI,KAAKsvB,QACzB/9B,IAAKC,EAAE,kBAIfkC,EACGiJ,EAAAC,EAAAC,cAAA,QAAMC,MAAO,CAAEkU,YAAa,SACxBrU,EAAAC,EAAAC,cAAC0c,GAAA,EAAD,CACIjR,QACItI,KAAKmwB,yBAGR5+B,IAAKC,EAAE,eAGhB,KACHkC,GAAe28B,EACZ1zB,EAAAC,EAAAC,cAAC0c,GAAA,EAAD,CAAQjR,QAAStI,KAAKqvB,iBACjB99B,IAAKC,EAAE,WAEZ,MAER,KAEJmL,EAAAC,EAAAC,cAAA,OAAK6L,UAAWF,KAAQ0oB,eACpBv0B,EAAAC,EAAAC,cAAC0c,GAAA,EAAD,CAAQmV,WAAS,EAACpmB,QAAStI,KAAKwvB,WAC3BwB,MAKhBhxB,KAAKuwB,oBACLvwB,KAAKowB,2BA5JtBpB,EAAA,CAA6B5jB,aAkK7B4jB,GAAQ7a,aAAe,CACnBniB,GAAIoiB,IAAUC,QAGlB,IA4BerX,eA5BS,SAAA5J,GACpB,IAEIi9B,EACAU,EAHEt8B,EAAYkO,GAAsBvP,GAYxC,OvE3G8B,SAAAA,GAC9B,OACK8D,KAAQ9D,EAAMwP,gBAAsD,KAApCD,GAAsBvP,GAAOjC,GuEiG9DggC,CAAmB/9B,IACnBi9B,GAAe,EACfU,GAAe,IAEfA,IAAet8B,EAAUuB,QAASvB,EAAUuB,OAAOqnB,OACnDgT,IAAe57B,EAAUuB,QAASvB,EAAUuB,OAAO0D,QAGhD,CACHhG,YAAae,EAAUtD,GACvB8Q,cAAexN,EAAUY,KACzBg7B,eACAU,iBAImB,SAAAxvB,GAAQ,MAAK,CACpC+tB,OAAQ,kBAAM/tB,EjEnIY,eAAA7E,EAAAzL,OAAA+N,EAAA,EAAA/N,CAAAgO,EAAArC,EAAAsC,KAAM,SAAAC,EAAOoC,EAAUC,GAAjB,IAAA/M,EAAA0B,EAAAi7B,EAAA19B,EAAA,OAAAuL,EAAArC,EAAA0C,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,UAC1BhL,EAAYkO,GAAsBnB,KAElCrL,EAAiB1B,EAAU0B,eAAejB,IAAI,SAAArG,GAChD,IAAM0B,EAAOC,YAAW3B,GAClBA,EAAK0B,MAAQH,IACb,KAEAE,EAAOD,YAAaxB,GAAQe,IAAOf,EAAKyB,KAE9C,OAAOW,OAAA4C,EAAA,EAAA5C,CAAA,GACApC,EACC0B,EAAO,CAAEA,QAAS,GAF1B,CAGID,WAIF8gC,EAjB0BngC,OAAA4C,EAAA,EAAA5C,CAAA,GAkBzBwD,EAlByB,CAmB5B0B,mBAnB4BoJ,EAAAC,KAAA,GAuBR4xB,EAAgBjgC,GAvBR,CAAAoO,EAAAE,KAAA,gBAAAF,EAAAE,KAAA,EAwBhBuE,GAAgBotB,GAxBA,OAAA7xB,EAAAsC,GAAAtC,EAAAc,KAAAd,EAAAE,KAAA,wBAAAF,EAAAE,KAAA,GAyBhBwE,GAAcmtB,GAzBE,QAAA7xB,EAAAsC,GAAAtC,EAAAc,KAAA,eAuBtB3M,EAvBsB6L,EAAAsC,GA2B5BN,EA1EmC,CACvCjR,KN3CgC,yBMyFAiP,EAAAE,KAAA,GA4BtB8B,EAASO,GAA0BpO,IA5Bb,eAAA6L,EAAAe,OAAA,SA8BrBqB,QAAQC,QAAQlO,IA9BK,QAAA6L,EAAAC,KAAA,GAAAD,EAAAsG,GAAAtG,EAAA,SAtEpBzG,EAsGDyG,EAAAsG,GArGX9M,QAAQC,IAAI,6BAA8BF,GAqEV,yBAAAyG,EAAAG,OAtEpB,IAAA5G,GAsEoBqG,EAAA,kBAAN,gBAAAQ,EAAAC,GAAA,OAAAlD,EAAAqD,MAAAC,KAAA1J,YAAA,IiEmIemC,KAAK,SAAAtH,GAAE,OAAIA,KACpDu+B,SAAU,SAAAv+B,GAAE,OAAIoQ,EhElGY,SAAApQ,GAAE,sBAAA6G,EAAA/G,OAAA+N,EAAA,EAAA/N,CAAAgO,EAAArC,EAAAsC,KAAI,SAAA+G,EAAO1E,EAAUC,GAAjB,OAAAvC,EAAArC,EAAA0C,KAAA,SAAA6G,GAAA,cAAAA,EAAA3G,KAAA2G,EAAA1G,MAAA,cAAA0G,EAAA3G,KAAA,EAAA2G,EAAA1G,KAAA,EAExB9F,GAAmBxI,GAFK,cAG9BoQ,EDpFmC,CACvCjR,KN3CgC,yBO+H5BiR,EAASJ,MACTI,EAASY,GAAoB,KALCgE,EAAA1G,KAAA,EAOxB8B,EAASoD,MAPe,cAAAwB,EAAA7F,OAAA,SASvBqB,QAAQC,WATe,eAAAuE,EAAA3G,KAAA,GAAA2G,EAAAtE,GAAAsE,EAAA,SAW9BpN,QAAQC,IAAI,4BAAZmN,EAAAtE,IAX8BsE,EAAA7F,OAAA,SAAA6F,EAAAtE,IAAA,yBAAAsE,EAAAzG,SAAAuG,EAAA,kBAAJ,gBAAAorB,EAAAC,GAAA,OAAAt5B,EAAA+H,MAAAC,KAAA1J,YAAA,GgEkGLi7B,CAAiBpgC,KAC1Cs+B,iBAAkB,kBAAMluB,EjEpLe,CACvCjR,KN3CgC,0BuE+NhC2/B,YAAa,SAAC9+B,EAAIyC,GAAL,OAAe2N,EhEvLS,SAAC7N,EAAaE,GAAd,MAAyB,CAC9DtD,KvB/BsC,6BuBgCtCoD,cACAE,SgEoLqC49B,CAA0BrgC,EAAIyC,OAGxDoJ,CAGbgyB,IC3NWlB,GAAU,SAAApxB,GACnB,OADyCA,EAAnBq0B,aAElBp0B,EAAAC,EAAAC,cAACoxB,GAAD,CAAkBtjB,UAAU,IAE5BhO,EAAAC,EAAAC,cAACyuB,GAAD,CAAkB/6B,KAAMgB,IAAKC,EAAE,gBAG1BigC,GAAb,SAAAzjB,GAAA,SAAAyjB,IAAA,IAAAhiB,EAAAvG,EAAAjY,OAAAkY,EAAA,EAAAlY,CAAA+O,KAAAyxB,GAAA,QAAA/hB,EAAApZ,UAAAF,OAAAuZ,EAAA,IAAAC,MAAAF,GAAAG,EAAA,EAAAA,EAAAH,EAAAG,IAAAF,EAAAE,GAAAvZ,UAAAuZ,GAAA,OAAA3G,EAAAjY,OAAAmY,EAAA,EAAAnY,CAAA+O,MAAAyP,EAAAxe,OAAAoY,EAAA,EAAApY,CAAAwgC,IAAAnoB,KAAAvJ,MAAA0P,EAAA,CAAAzP,MAAApO,OAAA+d,MACIvc,MAAQ,CACJs+B,aAAa,GAFrBxoB,EAKIyoB,kBAAoB,WACZzoB,EAAK1L,MAAM/I,YACXyU,EAAKM,SAAS,CAAEkoB,aAAa,IAC7BxoB,EAAK1L,MAAMo0B,iBAAiB1oB,EAAK1L,MAAM/I,UAAWyU,EAAK1L,MAAMhK,SARzE0V,EAsBI2oB,oBAAsB,WAClB,IAAM1D,GACDjlB,EAAK1L,MAAM0wB,kBAAsC,OAAlBhlB,EAAK1L,MAAMrM,GAE/C,OACIwL,EAAAC,EAAAC,cAAA,OAAK6L,UAAU,qBACVylB,EAAkB,KACfxxB,EAAAC,EAAAC,cAACi1B,GAAD,CAASf,aAAc7nB,EAAK1L,MAAMuzB,iBA7BtD7nB,EAAA,OAAAjY,OAAAsd,EAAA,EAAAtd,CAAAwgC,EAAAzjB,GAAA/c,OAAAud,EAAA,EAAAvd,CAAAwgC,EAAA,EAAA1rB,IAAA,oBAAAnS,MAAA,WAaQoM,KAAK2xB,sBAbb,CAAA5rB,IAAA,qBAAAnS,MAAA,WAiBaoM,KAAK5M,MAAMs+B,aACZ1xB,KAAK2xB,sBAlBjB,CAAA5rB,IAAA,SAAAnS,MAAA,WAoCQ,OACI+I,EAAAC,EAAAC,cAAC+W,EAAA,SAAD,KACIjX,EAAAC,EAAAC,cAACk1B,GAAD,MACAp1B,EAAAC,EAAAC,cAACwxB,GAAD,CAAyB1jB,UAAU,IAClC3K,KAAK6xB,2BAxCtBJ,EAAA,CAAmCrmB,aA8DpBpO,eAhBS,SAAA5J,GACpB,IAAMjC,EAAK2F,GAAe1D,GACpBqB,EAAYtD,EAAK8C,EAAkBb,EAAOjC,GAAM,KAKtD,MAAO,CACHsD,YACAtD,KACA4/B,gBALAt8B,IAAaA,EAAUuB,SAASvB,EAAUuB,OAAOqnB,OAMjD7pB,MAAOa,EAAmBjB,GAC1B86B,kBAAmB/5B,EAAsBf,KAM7C,CACIw+B,iBlExD0B,SAACn9B,EAAWjB,GAM1C,MAAO,CACHlD,KNlC+B,0BMmC/BsD,MAPK3C,OAAA4C,EAAA,EAAA5C,CAAA,GACFwD,EADE,CAEL0B,eAAgB3C,OkEkDTwJ,CAKby0B,IClFIO,+LAEEhyB,KAAKxC,MAAMy0B,mDAIX,OACIt1B,EAAAC,EAAAC,cAAC+W,EAAA,SAAD,KACIjX,EAAAC,EAAAC,cAACk1B,GAAD,MACAp1B,EAAAC,EAAAC,cAACwxB,GAAD,CAAyB1jB,UAAU,IACnChO,EAAAC,EAAAC,cAAA,OAAK6L,UAAU,qBACX/L,EAAAC,EAAAC,cAACoxB,GAAD,CAAkBtjB,UAAU,aAXrBS,aAkBZpO,eACX,KACA,CACIi1B,gBnEe6B,iBAAO,CACxC3hC,KNtC+B,yByEmBpB0M,CAKbg1B,ICrBIE,8MACFC,aAAe,WACX,GAAIjpB,EAAK1L,MAAM0wB,iBAAkB,CAC7B,IAAM/8B,EAAK+X,EAAK1L,MAAM2jB,MAAMiR,OAAO1+B,aAAe,KAElDwV,EAAK1L,MAAM60B,gBAAgBlhC,GAE3B+X,EAAKopB,kBAIbA,YAAc,WACV5oB,OAAO6oB,SAAS,EAAG,uFAInBvyB,KAAKmyB,4DAILnyB,KAAKmyB,gDAIL,OAAQnyB,KAAKxC,MAAMg1B,MACf,ICnCQ,ODoCJ,OAAO71B,EAAAC,EAAAC,cAAC41B,GAAD,MACX,ICpCO,MDqCH,OAAO91B,EAAAC,EAAAC,cAAC61B,GAAD,MACX,QACI,OAAO/1B,EAAAC,EAAAC,cAAC81B,GAAD,cA9BCvnB,aAuCTpO,eAJS,SAAA5J,GACpB,MAAO,CAAE86B,kBAAmB/5B,EAAsBf,KAKlD,CACIi/B,gBnEYwB,SAAAlhC,GAAE,sBAAAuG,EAAAzG,OAAA+N,EAAA,EAAA/N,CAAAgO,EAAArC,EAAAsC,KAAI,SAAAgB,EAAOqB,EAAUC,GAAjB,IAAA3I,EAAAzF,EAAAw/B,EAAAC,EAAApxB,EAAA,OAAAxC,EAAArC,EAAA0C,KAAA,SAAAc,GAAA,cAAAA,EAAAZ,KAAAY,EAAAX,MAAA,OAC5B5G,EAAU,SAAAC,GAEZ,OADAC,QAAQC,IAAI,+BAAgCF,GACrCA,GAHuBsH,EAAAZ,KAAA,EAOxBpM,EAAQoO,IAEVoxB,EAAoB,KACpBzhC,EACAyhC,EAAoB3+B,EAAkBb,EAAOjC,IAAO,MT3EzB6B,ES8EvBG,EAAiBC,GADfy/B,ET5EdzwB,aAAa0wB,QAAb,2BAAAlhC,OAAgDoB,UAAeuD,ES+EjDkL,EAAOxN,EAAkBb,EAAOy/B,GACtCD,EACIC,GAAepxB,EACTA,EACA7M,EAA8BxB,GAAO,IAG/Cw/B,GACArxB,EAASO,GAA0B8wB,EAAkBzhC,KAEjDyhC,EAAkBzhC,KAAO2F,GAAe1D,GACpCyP,GAAczP,GAEdmO,EJxEqB,CACrCjR,KDtB8B,uBKgGdiR,EJvEwB,CACxCjR,KDzB4B,mBC0B5BsrB,QIqE0C5Y,GAAwB5P,MAItDmO,EHvF6B,CACzCjR,KHdmC,4BMqGvBiR,EJhFyB,CACrCjR,KDtB8B,yBKwGtBiR,EAASJ,IAAgB,IAxCCf,EAAAX,KAAA,uBAAAW,EAAAZ,KAAA,EAAAY,EAAAyB,GAAAzB,EAAA,SAAAA,EAAAE,OAAA,SA2CvBzH,EAAOuH,EAAAyB,KA3CgB,yBAAAzB,EAAAV,OJvCN,ILzBO1M,GSgEDkN,EAAA,iBAAJ,gBAAAN,EAAAC,GAAA,OAAAnI,EAAAqI,MAAAC,KAAA1J,YAAA,KmEfnB0G,CAKbk1B,IEpCWa,oBAAb,SAAA/kB,GAAA,SAAA+kB,IAAA,OAAA9hC,OAAAkY,EAAA,EAAAlY,CAAA+O,KAAA+yB,GAAA9hC,OAAAmY,EAAA,EAAAnY,CAAA+O,KAAA/O,OAAAoY,EAAA,EAAApY,CAAA8hC,GAAAhzB,MAAAC,KAAA1J,YAAA,OAAArF,OAAAsd,EAAA,EAAAtd,CAAA8hC,EAAA/kB,GAAA/c,OAAAud,EAAA,EAAAvd,CAAA8hC,EAAA,EAAAhtB,IAAA,oBAAAnS,MAAA,WAEQoM,KAAKxC,MAAMw1B,eAAehzB,KAAKxC,MAAMxL,GAAGqT,aACxCrF,KAAKxC,MAAMy1B,kBACXjzB,KAAKxC,MAAM01B,oBACXlzB,KAAKxC,MAAM21B,cAAcnzB,KAAKxC,MAAMxL,MAL5C,CAAA+T,IAAA,kBAAAnS,MAAA,WASQ,MAAO,CAAE8K,QAASsB,KAAKxC,MAAMkB,QAASnN,SAAMS,GAAIgO,KAAKxC,MAAMxL,MATnE,CAAA+T,IAAA,SAAAnS,MAAA,WAaQ,OACI+I,EAAAC,EAAAC,cAAA,OAAK6L,UAAU,eACX/L,EAAAC,EAAAC,cAAA,OAAK6L,UAAU,wBACX/L,EAAAC,EAAAC,cAACu2B,EAAAx2B,EAAD,CAAW/K,QAASN,IAAKC,EAAE,gBAE/BmL,EAAAC,EAAAC,cAACw2B,EAAA,EAAD,KACI12B,EAAAC,EAAAC,cAACy2B,EAAA,EAAD,KACI32B,EAAAC,EAAAC,cAAC02B,EAAA,EAAD,CACIC,OAAK,EACLC,KAAK,IACLC,OAAQ,SAAAl2B,GAAK,OACTb,EAAAC,EAAAC,cAAC82B,GAAD1iC,OAAAuJ,OAAA,GAAegD,EAAf,CAAsBg1B,KDxClC,aC2CI71B,EAAAC,EAAAC,cAAC02B,EAAA,EAAD,CACIC,OAAK,EACLC,KAAK,OACLC,OAAQ,SAAAl2B,GAAK,OACTb,EAAAC,EAAAC,cAAC82B,GAAD1iC,OAAAuJ,OAAA,GAAegD,EAAf,CAAsBg1B,KDhDnC,YCmDK71B,EAAAC,EAAAC,cAAC02B,EAAA,EAAD,CACIC,OAAK,EACLC,KAAK,gBACLC,OAAQ,SAAAl2B,GAAK,OACTb,EAAAC,EAAAC,cAAC82B,GAAD1iC,OAAAuJ,OAAA,GAAegD,EAAf,CAAsBg1B,KDtDlC,aCyDI71B,EAAAC,EAAAC,cAAC02B,EAAA,EAAD,CACIC,OAAK,EACLC,KAAK,qBACLC,OAAQ,SAAAl2B,GAAK,OACTb,EAAAC,EAAAC,cAAC82B,GAAD1iC,OAAAuJ,OAAA,GAAegD,EAAf,CAAsBg1B,KD/DlC,eCoEJ71B,EAAAC,EAAAC,cAAC+2B,GAAD,WAlDhBb,EAAA,CAAyB3nB,cAwDzB2nB,GAAIc,kBAAoB,CACpBn1B,QAAS0V,IAAUmS,OACnBh1B,KAAM6iB,IAAUC,OAChBriB,GAAIoiB,IAAUC,QAGlB,IASerX,eACX,KAVuB,SAAAuE,GACvB,MAAO,CACHyxB,eAAgB,SAAA3tB,GAAW,OAAI9D,EChFC,CACpCjR,K9FHyB,gB8FIzBsD,MD8E2DyR,KACvD4tB,gBAAiB,kBAAM1xB,EAASoD,OAChCuuB,kBAAmB,kBAAM3xB,ElExEC,eAAA7E,EAAAzL,OAAA+N,EAAA,EAAA/N,CAAAgO,EAAArC,EAAAsC,KAAM,SAAAC,EAAOoC,EAAUC,GAAjB,IAAAQ,EAAAnJ,EAAAi7B,EAAA,OAAA70B,EAAArC,EAAA0C,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAC9BuC,EAAY,SAAAkE,GACd3E,EAAS8E,GAAwBH,KAG/BrN,EAAU,SAAAC,GAEZ,OADAC,QAAQC,IAAI,iCAAkCF,GACvCA,GAPyByG,EAAAC,KAAA,EAAAD,EAAAE,KAAA,EAWHgG,KAXG,cAW1BquB,EAX0Bv0B,EAAAc,KAAAd,EAAAe,OAAA,SAYzB0B,EAAU8xB,IAZe,cAAAv0B,EAAAC,KAAA,EAAAD,EAAAsC,GAAAtC,EAAA,SAAAA,EAAAe,OAAA,SAczBzH,EAAO0G,EAAAsC,KAdkB,yBAAAtC,EAAAG,SAAAP,EAAA,iBAAN,gBAAAQ,EAAAC,GAAA,OAAAlD,EAAAqD,MAAAC,KAAA1J,YAAA,KkEyE1B68B,cAAe,SAAAnhC,GAAE,OAAIuP,E/D1EC,SAAAvP,GAAE,sBAAA0K,EAAAzL,OAAA+N,EAAA,EAAA/N,CAAAgO,EAAArC,EAAAsC,KAAI,SAAAC,EAAOoC,EAAUC,GAAjB,IAAAQ,EAAAnJ,EAAAk7B,EAAAptB,EAAAqtB,EAAA,OAAA/0B,EAAArC,EAAA0C,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAC1BuC,EAAY,SAAA2E,GACdpF,EAAS8F,GAAgBV,KAGvB9N,EAAU,SAAAC,GAEZ,OADAC,QAAQC,IAAI,+BAAgCF,GACrCA,GAPqByG,EAAAC,KAAA,EAWtBu0B,EAAkB3sB,GAAgC5F,KAX5BjC,EAAAE,KAAA,EAYHw0B,8BAAmBjiC,EAAI+hC,GAZpB,cAYtBptB,EAZsBpH,EAAAc,KAetB2zB,EAAqBrtB,EAAWnS,OAClC,SAAA0/B,GAAG,MACuB,aAAtBA,EAAIC,eACmB,aAAtBD,EAAIC,eACyB,cAA1BD,EAAIE,oBAnBY70B,EAAAe,OAAA,SAqBrB0B,EAAUgyB,IArBW,eAAAz0B,EAAAC,KAAA,GAAAD,EAAAsC,GAAAtC,EAAA,SAAAA,EAAAe,OAAA,SAuBrBzH,EAAO0G,EAAAsC,KAvBc,yBAAAtC,EAAAG,SAAAP,EAAA,kBAAJ,gBAAAQ,EAAAC,GAAA,OAAAlD,EAAAqD,MAAAC,KAAA1J,YAAA,G+D0EM+9B,CAAeriC,OAItCgL,CAGb+1B,wIEpEFuB,KAAOvE,OAAO,MAEdx+B,IAAKgjC,aAAa,KAHA,iBAGiBC,IACnCjjC,IAAKgjC,aAAa,KAJA,iBAIiBE,IACnCljC,IAAKgjC,aAAa,KALA,iBAKiBG,IACnCnjC,IAAKgjC,aAAa,KANA,iBAMiBI,IACnCpjC,IAAKgjC,aAAa,KAPA,iBAOiBK,IACnCrjC,IAAKgjC,aAAa,KARA,iBAQiBM,IAEnCtjC,IAAKujC,oBAVa,kBAWlBvjC,IAAKwjC,eAAe,MAELxjC,SAAf,qBCdeuL,GATD,WAAyC,IAAxC1J,EAAwCkD,UAAAF,OAAA,QAAAG,IAAAD,UAAA,GAAAA,UAAA,GARpB,OAQSE,EAAWF,UAAAF,OAAA,EAAAE,UAAA,QAAAC,EACnD,OAAQC,EAAOlG,MACX,IAZiB,YAab,OAAOmG,YAAgBD,EAAO5C,MAXP,QAY3B,QACI,OAAOR,ICUJiD,eAAgB,CAC3BrC,WhGeW,WAA8C,IAA7CZ,EAA6CkD,UAAAF,OAAA,QAAAG,IAAAD,UAAA,GAAAA,UAAA,GAArChD,EAA0BkD,EAAWF,UAAAF,OAAA,EAAAE,UAAA,QAAAC,EACzD,OAAQC,EAAOlG,MACX,IAjCsB,iBAkClB,MAAO,CACHiD,KAAMiD,EAAO5C,MACbJ,MAAO,IAGf,IAtCsB,iBAuClB,OAAOvC,OAAA4C,EAAA,EAAA5C,CAAA,GACAmC,EADP,CAEIG,KAAKtC,OAAA4C,EAAA,EAAA5C,CAAA,GACEmC,EAAMG,KACNiD,EAAO5C,SAItB,IA9C6B,wBA+CzB,OAAOH,EACHL,EACAoD,EAAO9C,YACP,UACA8C,EAAO5C,OAGf,IArDkC,6BAsD9B,OAAOH,EACHL,EACAoD,EAAO9C,YACP,cACA8C,EAAO5C,OAGf,IA5D2B,sBA6DvB,OAAO3C,OAAA4C,EAAA,EAAA5C,CAAA,GACAmC,EADP,CAEII,MAAOgD,EAAO5C,QAGtB,QACI,OAAOR,IgGtDfyD,WACA4W,oBACAxI,cACA5N,e9FrBW,WAAkD,IAAjDjE,EAAiDkD,UAAAF,OAAA,QAAAG,IAAAD,UAAA,GAAAA,UAAA,GAAzCW,GAA8BT,EAAWF,UAAAF,OAAA,EAAAE,UAAA,QAAAC,EAC7D,OAAQC,EAAOlG,MACX,IAT8B,yBAU1B,OAAOW,OAAA4C,EAAA,EAAA5C,CAAA,GACAmC,EADPnC,OAAA6C,EAAA,EAAA7C,CAAA,GAEKuF,EAAO5C,MAAMzC,GAAK6jC,KAAY/jC,OAAA4C,EAAA,EAAA5C,CAAA,GAEpBiD,YAASd,EAAMoD,EAAO5C,MAAMzC,KAC5BqF,EAAO5C,OAEdsD,MAIZ,IApBqC,gCAqBjC,OAAOjG,OAAA4C,EAAA,EAAA5C,CAAA,GACAmC,EADPnC,OAAA6C,EAAA,EAAA7C,CAAA,GAEKuF,EAAOrF,GAAK6jC,KAAY/jC,OAAA4C,EAAA,EAAA5C,CAAA,GAEdiD,YAASd,EAAMoD,EAAOrF,KAFT,CAGhB4M,WAAYvH,EAAOuH,aAEvB7G,MAIZ,QACI,OAAO9D,I8FLf6I,SzF7BW,WAAwB,IAAvB7I,EAAuBkD,UAAAF,OAAA,QAAAG,IAAAD,UAAA,GAAAA,UAAA,GAAf,GAAIE,EAAWF,UAAAF,OAAA,EAAAE,UAAA,QAAAC,EACnC,OAAQC,EAAOlG,MACX,IAJyB,oBAKrB,IAAM2kC,EAAgBxwB,YAAajO,EAAO5C,OAI1C,OAFiBypB,KAAOjqB,EAAO,CAAE8hC,OAAQD,IAI7C,QACI,OAAO7hC,IyFoBfC,KjG1BW,WAAwC,IAU9B8hC,EAVT/hC,EAAuCkD,UAAAF,OAAA,QAAAG,IAAAD,UAAA,GAAAA,UAAA,GAA/BvD,EAAoByD,EAAWF,UAAAF,OAAA,EAAAE,UAAA,QAAAC,EACnD,OAAQC,EAAOlG,MACX,IAXqB,gBAYjB,MAQD,CACHa,IAFiBgkC,EAPU3+B,EAAO5C,OASrBzC,GACb6B,SAAUmiC,EAASniC,SACnBC,SAAUkiC,EAAShuB,SAASiuB,YAC5BliC,YAAaiiC,EAASE,YAAY9vB,IAAI,QAVtC,QACI,OAAOnS,IiGqBfwP,chFZW,WAAkD,IAAjDxP,EAAiDkD,UAAAF,OAAA,QAAAG,IAAAD,UAAA,GAAAA,UAAA,GAAzCmM,GAA8BjM,EAAWF,UAAAF,OAAA,EAAAE,UAAA,QAAAC,EAC7D,OAAQC,EAAOlG,MACX,IArB+B,0BAsB3B,IAAMglC,EAAW,GAIjB,OAHArkC,OAAOqS,KAAKZ,IAAqBxN,IAC7B,SAAAqgC,GAAC,OAAKD,EAASC,GAAK/+B,EAAO5C,MAAM2hC,KAE9BD,EACX,IA1B4B,uBA2BxB,OAAO7yB,GACX,IA3B2B,sBA4BvB,OAAOC,GACX,IA5BsB,iBA6BlB,OAAOzR,OAAOuJ,OAAO,GAAIpH,EAAO,CAAEiC,KAAMmB,EAAO5C,QAEnD,IA9B4B,uBA+BxB,OAAO3C,OAAOuJ,OAAO,GAAIpH,EAAO,CAC5BmC,YAAaiB,EAAO5C,QAG5B,IAlC0B,qBAmCtB,OAAOypB,KAAOjqB,EAAO,CACjB+C,eAAgB,CAAEq/B,SAAU,CAACh/B,EAAO5C,UAE5C,IArC6B,wBAsCzB,IAAM6hC,EAAaj/B,EAAO5C,MAEpB6gB,EAAqBrhB,EAAM+C,eAAeue,UAC5C,SAAA7lB,GAAI,OAAIA,EAAKsC,KAAOskC,IAGxB,OAAIhhB,GAAsB,EACf4I,KAAOjqB,EAAO,CACjB+C,eAAgB,CACZu/B,QAAS,CAAC,CAACjhB,EAAoB,OAKpCrhB,EAEX,IApDiC,4BAqD7B,IAAMuiC,EAAaz/B,YAAQ9C,EAAM+C,gBAE3By/B,EAAgBp/B,EAAO5C,MAAMsB,IAAI,SAAAwH,GAAuB,IAApB5C,EAAoB4C,EAApB5C,EAAGC,EAAiB2C,EAAjB3C,EAAGC,EAAc0C,EAAd1C,EAAGC,EAAWyC,EAAXzC,EAAGQ,EAAQiC,EAARjC,EAC5Co7B,EAAYF,EAAW70B,KAAK,SAAAg1B,GAAE,OAAIA,EAAG3kC,KAAOsJ,IAElD,OAAOxJ,OAAOuJ,OAAO,GAAIq7B,EAAW,CAAE77B,IAAGC,IAAGH,IAAGC,QAGnD,OAAOsjB,KAAOjqB,EAAO,CACjB+C,eAAgB,CAAE4/B,KAAMH,KAGhC,IAlE6B,wBAmEzB,IAAMrhB,EAAgB/d,EAAO5C,MAEvB6gB,EAAqBrhB,EAAM+C,eAAeue,UAC5C,SAAA7lB,GAAI,OAAIA,EAAKsC,KAAOojB,EAAcpjB,KAGtC,OAAIsjB,GAAsB,EACL4I,KAAOjqB,EAAO,CAC3B+C,eAAgB,CACZu/B,QAAS,CAAC,CAACjhB,EAAoB,EAAGF,OAOvCnhB,EAEX,QACI,OAAOA,IgF7DfgQ,Y9E9BW,WAAgD,IAA/ChQ,EAA+CkD,UAAAF,OAAA,QAAAG,IAAAD,UAAA,GAAAA,UAAA,GAAvC4M,GAA4B1M,EAAWF,UAAAF,OAAA,EAAAE,UAAA,QAAAC,EAC3D,OAAQC,EAAOlG,MACX,IAPuB,kBAQnB,OAAOW,OAAA4C,EAAA,EAAA5C,CAAA,GACAmC,EADPnC,OAAA6C,EAAA,EAAA7C,CAAA,GAEKuF,EAAOhC,OAAOrD,GAAKqF,EAAOhC,OAAOZ,QAG1C,IAZ0B,qBAatB,IAAM0hC,EAAQrkC,OAAA4C,EAAA,EAAA5C,CAAA,GAAQmC,GAItB,cAFOkiC,EAAS9+B,EAAOrF,IAEhBmkC,EAEX,IArBwB,mBAsBpB,OAAO9+B,EAAOolB,QAElB,IAzB0B,qBA0BtB,OAAO1Y,GAEX,QACI,OAAO9P,I8ESf6P,gB/EhCW,WAAqD,IAApD7P,EAAoDkD,UAAAF,OAAA,QAAAG,IAAAD,UAAA,GAAAA,UAAA,GAA5CyM,GAAiCvM,EAAWF,UAAAF,OAAA,EAAAE,UAAA,QAAAC,EAChE,OAAQC,EAAOlG,MACX,IAP+B,0BAQ3B,IAAMglC,EAAQrkC,OAAA4C,EAAA,EAAA5C,CAAA,GAAQmC,GAItB,cAFOkiC,EAAS9+B,EAAOrF,IAEhBmkC,EAEX,IAb6B,wBAczB,OAAO9+B,EAAOolB,QAElB,IAlB+B,0BAmB3B,OAAO7Y,GAEX,QACI,OAAO3P,I+EiBf0J,SACAI,SvF/BW,WAA4C,IAA3C9J,EAA2CkD,UAAAF,OAAA,QAAAG,IAAAD,UAAA,GAAAA,UAAA,GAAnC6F,GAAwB3F,EAAWF,UAAAF,OAAA,EAAAE,UAAA,QAAAC,EACvD,OAAQC,EAAOlG,MACX,IAXiC,4BAY7B,OAAOW,OAAA4C,EAAA,EAAA5C,CAAA,GAAKmC,EAAUoD,EAAO5C,OAEjC,IAbsB,iBAclB,OAAOuI,GAEX,QACI,OAAO/I,IuFuBfuT,WrEjCW,WAAwC,IAAvCvT,EAAuCkD,UAAAF,OAAA,QAAAG,IAAAD,UAAA,GAAAA,UAAA,GAA/BgQ,GAAoB9P,EAAWF,UAAAF,OAAA,EAAAE,UAAA,QAAAC,EACnD,OAAQC,EAAOlG,MACX,IARsB,iBASlB,OAAOW,OAAA4C,EAAA,EAAA5C,CAAA,GACAqV,GACA9P,EAAO5C,OAGlB,QACI,OAAOR,IqEyBf+T,SpE9BW,WAAsC,IAArC/T,EAAqCkD,UAAAF,OAAA,QAAAG,IAAAD,UAAA,GAAAA,UAAA,GAA7BsQ,GAAkBpQ,EAAWF,UAAAF,OAAA,EAAAE,UAAA,QAAAC,EACjD,OAAQC,EAAOlG,MACX,IAdoB,eAehB,OAAOW,OAAOuJ,OAAO,GAAIhE,EAAO5C,OAEpC,IAhBoB,eAiBhB,OAAO3C,OAAA4C,EAAA,EAAA5C,CAAA,GACAmC,EACAoD,EAAO5C,OAGlB,QACI,OAAOR,IoEmBfumB,qB1CtCW,WAA0D,IAAzDvmB,EAAyDkD,UAAAF,OAAA,QAAAG,IAAAD,UAAA,GAAAA,UAAA,GAAjDmjB,GAAsCjjB,EAAWF,UAAAF,OAAA,EAAAE,UAAA,QAAAC,EACrE,OAAQC,EAAOlG,MACX,IAPkC,6BAQ9B,OAAOkG,EAAO5C,MAElB,IAToC,+BAUhC,OAAO6lB,GAEX,QACI,OAAOrmB,M2CUJ4iC,GAnBQ,WACnB,IAAMC,EAAa,CAACC,MAGdC,EACFzsB,OAAO0sB,sCAAwCC,IAQnD,OANK3sB,OAAO0sB,qCAMLE,YACHC,GACAJ,EAAiBK,IAAez2B,WAAf,EAAmBk2B,MCF5CQ,IAAWC,QAAQzF,QAAQ0F,KAAO/uB,IAAOiF,QAEzC,IAEM+pB,GAAa,SAAAvQ,GACf,IAAMpzB,EAAWozB,EAAa+O,YAE1BniC,GAAyB,OAAbA,GACZsL,SAAOhN,KAAKslC,QAAQ3gB,IAApB,sBAAAtkB,OAA8CqB,EAA9C,gBAGJsL,SAAOhN,KAAKslC,QAAQ3gB,IAAI,oCACxB3kB,GAAKwjC,eAAe9hC,KAGd,eAAAyJ,EAAAzL,OAAA+N,EAAA,EAAA/N,CAAAgO,EAAArC,EAAAsC,KAAG,SAAAC,IAAA,IAAA23B,EAAAC,EAAAr4B,EAAA,OAAAO,EAAArC,EAAA0C,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAF,EAAAE,KAAA,EACcu3B,sBAAY,qBAD1B,OACHF,EADGv3B,EAAAc,KAITtH,QAAQk+B,KAAR,oBAAArlC,OACwBklC,EAASI,QADjC,MAAAtlC,OAEQklC,EAASK,wBAIXJ,GAASK,EAVN73B,EAAAE,KAAA,eAuBHf,EAAUq4B,EACVD,EAASO,WAAWC,KAAKllB,KACzBglB,KACgBA,SAEtB74B,SAAOG,QAAP,GAAA9M,OAAoB8M,EAApB,SAAA9M,OAAmCklC,EAASS,MAAMC,YAClDj5B,SAAOk5B,QAAUV,EAAS,KAAO,CAAEhY,cAHbqY,UAItB74B,SAAOm5B,QAAU,CACb,QACA,MACA,SACA,cACA,aACA,cACA,YACA,mBACA,aAGJC,4BACKl/B,KAAKm+B,IACLn+B,KAAK,kBAAMm/B,eAAOr5B,YAClB9F,KAAK,SAAAo/B,GACFC,IAASpE,OACL/2B,EAAAC,EAAAC,cAACk7B,EAAA,EAAD,CAAUC,MAAOhC,MACbr5B,EAAAC,EAAAC,cAAC4K,EAAA,iBAAD,CAAkB0T,MA7Df8c,yBAAexB,MA8Dd95B,EAAAC,EAAAC,cAACq7B,GAAD,CAAKx5B,QAASA,EAAS1M,GAAI6lC,MAGnCp8B,SAAS08B,eAAe,WApD3B,yBAAA54B,EAAAG,SAAAP,MAAH,yBAAAzC,EAAAqD,MAAAC,KAAA1J,aAAA,EAyDV8hC,8SCnFO,SAASliC,EAAQmiC,GACpB,OAAOzoB,MAAM0oB,QAAQD,GAASA,EAAQ,GAGnC,SAASnkC,EAASmkC,GACrB,OAAOp6B,IAASo6B,GAASA,EAAQ,GAS9B,SAAS5zB,EAAa4iB,GACzB,OAAOA,EAAMkG,OAAO,SAAC3K,EAAK/zB,GAEtB,OADA+zB,EAAI/zB,EAAKsC,IAAMtC,EACR+zB,GACR,IAkBA,IAAMwD,EAAa,SAACxyB,EAAOX,GAC9B,GAA2B,qBAAhBlC,EAAOwnC,MAAwBA,KAAKC,eAAgB,CAC3D,IAAMzI,EAAS98B,GAAY,KAC3B,OAAO,IAAIslC,KAAKC,eAAezI,EAAQ,CACnC0I,KAAM,UACNC,MAAO,QACPC,IAAK,YACNC,OAAO,IAAIC,KAAKjlC,IAGvB,OAAOA,EAAMkC,OAAO,EAAG,IAAIgjC,QAAQ,IAAK,MAwB/BriC,EAAkB,SAAC7C,EAAOmlC,GAAR,YACjBxiC,IAAV3C,GAAiC,OAAVA,EAAiBmlC,EAAenlC,GAE9CzB,EAAa,SAAAH,GACtB,IAAMgnC,EAAMhnC,EAAG0G,IAAIC,SACbsgC,EAAMD,EAAIt6B,QAAQw6B,QAAQ,QAChC,OAAOD,GAAO,EAAID,EAAIt6B,QAAQkX,MAAM,EAAGqjB,GAAOD,EAAIt6B,SAGzCwC,EAAe,SAAAmT,GAAM,OAAApjB,OAAAkoC,EAAA,EAAAloC,CAAA,GAC3BojB,EAD2B,CAE9BljB,QAAIoF,6CCvFR7H,EAAAC,QAAA,CAAkBoiB,aAAA,oCAAAmgB,cAAA,2DCAlBxiC,EAAAC,QAAA,CAAkBgkB,SAAA,kCAAAT,WAAA,oCAAA9F,MAAA,+BAAAmG,aAAA,4DCAlB7jB,EAAAC,QAAA,CAAkBqc,KAAA,yBAAA1G,QAAA,4BAAAgG,WAAA,qDCAlB5b,EAAAC,QAAA,CAAkBue,OAAA,4BAAAjB,KAAA,gDCAlBvd,EAAAC,QAAA,CAAkBslB,eAAA","file":"static/js/main.bc648783.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"Item_list__2oHc1\",\"item\":\"Item_item__lO40M\",\"itemicon\":\"Item_itemicon__dv5ah\",\"link\":\"Item_link__2gULT\",\"deleteicon\":\"Item_deleteicon__3c7bl\",\"deletebutton\":\"Item_deletebutton__1DfY5\"};","import i18n from '@dhis2/d2-i18n';\nimport TableIcon from '@material-ui/icons/ViewList';\nimport ChartIcon from '@material-ui/icons/InsertChart';\nimport MapIcon from '@material-ui/icons/Public';\nimport ExtensionIcon from '@material-ui/icons/Extension';\nimport DescriptionIcon from '@material-ui/icons/Description';\nimport PersonIcon from '@material-ui/icons/Person';\nimport FontDownloadIcon from '@material-ui/icons/FontDownload';\nimport EmailIcon from '@material-ui/icons/Email';\nimport CropFreeIcon from '@material-ui/icons/CropFree';\nimport NotInterestedIcon from '@material-ui/icons/NotInterested';\n\nimport { getBaseUrl } from './util';\n\n// Item types\nexport const REPORT_TABLE = 'REPORT_TABLE';\nexport const CHART = 'CHART';\nexport const MAP = 'MAP';\nexport const EVENT_REPORT = 'EVENT_REPORT';\nexport const EVENT_CHART = 'EVENT_CHART';\nexport const APP = 'APP';\nexport const REPORTS = 'REPORTS';\nexport const RESOURCES = 'RESOURCES';\nexport const USERS = 'USERS';\nexport const MESSAGES = 'MESSAGES';\nexport const TEXT = 'TEXT';\nexport const SPACER = 'SPACER';\n\n// Domain types\nexport const DOMAIN_TYPE_AGGREGATE = 'AGGREGATE';\nexport const DOMAIN_TYPE_TRACKER = 'TRACKER';\n\n// Visualization types\nexport const VISUALIZATION_TYPE_TABLE = 'TABLE';\nexport const VISUALIZATION_TYPE_CHART = 'CHART';\nexport const VISUALIZATION_TYPE_MAP = 'MAP';\n\n// TODO: Import this from @dhis2/analytics when available\nexport const CHART_TYPE_SINGLE_VALUE = 'SINGLE_VALUE';\n\n// Dashboard helpers\nexport const spacerContent = 'SPACER_ITEM_FOR_DASHBOARD_LAYOUT_CONVENIENCE';\nexport const emptyTextItemContent = 'TEXT_ITEM_WITH_NO_CONTENT';\nexport const isSpacerType = item =>\n    item.type === TEXT && item.text === spacerContent;\nexport const isTextType = item =>\n    item.type === TEXT && item.text !== spacerContent;\nexport const isPluginType = item =>\n    itemTypeMap[item.type].hasOwnProperty('plugin');\n\nexport const getPlugin = type => {\n    const pluginName = itemTypeMap[type].plugin;\n\n    if (type === CHART) {\n        return true;\n    }\n\n    return global[pluginName];\n};\n\n// Item type map\nexport const itemTypeMap = {\n    [REPORT_TABLE]: {\n        id: REPORT_TABLE,\n        endPointName: 'reportTables',\n        propName: 'reportTable',\n        pluralTitle: i18n.t('Pivot tables'),\n        plugin: 'reportTablePlugin',\n        domainType: DOMAIN_TYPE_AGGREGATE,\n        visualizationType: VISUALIZATION_TYPE_TABLE,\n        appUrl: id => `dhis-web-pivot/?id=${id}`,\n        appName: i18n.t('Pivot Tables'),\n    },\n    [CHART]: {\n        id: CHART,\n        endPointName: 'charts',\n        propName: 'chart',\n        pluralTitle: i18n.t('Charts'),\n        plugin: 'chartPlugin',\n        domainType: DOMAIN_TYPE_AGGREGATE,\n        visualizationType: VISUALIZATION_TYPE_CHART,\n        appUrl: id => `dhis-web-data-visualizer/#/${id}`,\n        appName: i18n.t('Visualizer'),\n    },\n    [MAP]: {\n        id: MAP,\n        endPointName: 'maps',\n        propName: 'map',\n        pluralTitle: i18n.t('Maps'),\n        plugin: 'mapPlugin',\n        domainType: DOMAIN_TYPE_AGGREGATE,\n        visualizationType: VISUALIZATION_TYPE_MAP,\n        appUrl: id => `dhis-web-maps/?id=${id}`,\n        appName: i18n.t('Maps'),\n    },\n    [EVENT_REPORT]: {\n        id: EVENT_REPORT,\n        endPointName: 'eventReports',\n        propName: 'eventReport',\n        pluralTitle: i18n.t('Event reports'),\n        plugin: 'eventReportPlugin',\n        domainType: DOMAIN_TYPE_TRACKER,\n        visualizationType: VISUALIZATION_TYPE_TABLE,\n        appUrl: id => `dhis-web-event-reports/?id=${id}`,\n        appName: i18n.t('Event Reports'),\n    },\n    [EVENT_CHART]: {\n        id: EVENT_CHART,\n        endPointName: 'eventCharts',\n        propName: 'eventChart',\n        pluralTitle: i18n.t('Event charts'),\n        plugin: 'eventChartPlugin',\n        domainType: DOMAIN_TYPE_TRACKER,\n        visualizationType: VISUALIZATION_TYPE_CHART,\n        appUrl: id => `dhis-web-event-visualizer/?id=${id}`,\n        appName: i18n.t('Event Visualizer'),\n    },\n    [APP]: {\n        endPointName: 'apps',\n        propName: 'appKey',\n        pluralTitle: i18n.t('Apps'),\n    },\n    [REPORTS]: {\n        id: REPORTS,\n        endPointName: 'reports',\n        propName: 'reports',\n        pluralTitle: i18n.t('Reports'),\n        appUrl: id =>\n            `dhis-web-reporting/getReportParams.action?mode=report&uid=${id}`,\n    },\n    [RESOURCES]: {\n        id: RESOURCES,\n        endPointName: 'resources',\n        propName: 'resources',\n        pluralTitle: i18n.t('Resources'),\n        appUrl: id => `api/documents/${id}/data`,\n    },\n    [USERS]: {\n        id: USERS,\n        endPointName: 'users',\n        propName: 'users',\n        pluralTitle: i18n.t('Users'),\n        appUrl: id => `dhis-web-dashboard-integration/profile.action?id=${id}`,\n    },\n    [TEXT]: {\n        id: TEXT,\n        propName: 'text',\n    },\n    [MESSAGES]: {\n        propName: 'messages',\n    },\n    [SPACER]: {\n        propName: 'text',\n    },\n};\n\nexport const getEndPointName = type => itemTypeMap[type].endPointName;\n\nexport const getItemUrl = (type, item, d2) => {\n    let url;\n\n    if (type === APP) {\n        url = item.launchUrl;\n    }\n\n    if (itemTypeMap[type] && itemTypeMap[type].appUrl) {\n        url = `${getBaseUrl(d2)}/${itemTypeMap[type].appUrl(item.id)}`;\n    }\n\n    return url;\n};\n\nexport const getItemIcon = type => {\n    switch (type) {\n        case REPORT_TABLE:\n        case EVENT_REPORT:\n        case REPORTS:\n            return TableIcon;\n        case CHART:\n        case EVENT_CHART:\n            return ChartIcon;\n        case MAP:\n            return MapIcon;\n        case APP:\n            return ExtensionIcon;\n        case RESOURCES:\n            return DescriptionIcon;\n        case USERS:\n            return PersonIcon;\n        case TEXT:\n            return FontDownloadIcon;\n        case MESSAGES:\n            return EmailIcon;\n        case SPACER:\n            return CropFreeIcon;\n        default:\n            return NotInterestedIcon;\n    }\n};\n","export const RECEIVED_USER = 'RECEIVED_USER';\n\nexport const DEFAULT_STATE_USER = {\n    id: '',\n    username: '',\n    uiLocale: '',\n    isSuperuser: false,\n};\n\nexport default (state = DEFAULT_STATE_USER, action) => {\n    switch (action.type) {\n        case RECEIVED_USER: {\n            return fromD2ToUserObj(action.value);\n        }\n        default:\n            return state;\n    }\n};\n\nfunction fromD2ToUserObj(d2Object) {\n    return {\n        id: d2Object.id,\n        username: d2Object.username,\n        uiLocale: d2Object.settings.keyUiLocale,\n        isSuperuser: d2Object.authorities.has('ALL'),\n    };\n}\n\n// selectors\n\nexport const sGetUserId = state => state.user.id;\nexport const sGetUserUsername = state => state.user.username;\nexport const sGetIsSuperuser = state => state.user.isSuperuser;\nexport const sGetUiLocale = state => state.user.uiLocale;\n","/** @module reducers/dashboards */\n\nimport arrayFrom from 'd2-utilizr/lib/arrayFrom';\nimport arraySort from 'd2-utilizr/lib/arraySort';\n\nimport { orArray, orObject } from '../modules/util';\nimport {\n    SPACER,\n    isSpacerType,\n    isTextType,\n    emptyTextItemContent,\n} from '../modules/itemTypes';\n\nexport const SET_DASHBOARDS = 'SET_DASHBOARDS';\nexport const ADD_DASHBOARDS = 'ADD_DASHBOARDS';\nexport const SET_DASHBOARD_STARRED = 'SET_DASHBOARD_STARRED';\nexport const SET_DASHBOARD_DISPLAY_NAME = 'SET_DASHBOARD_DISPLAY_NAME';\nexport const SET_DASHBOARD_ITEMS = 'SET_DASHBOARD_ITEMS';\n\nexport const DEFAULT_STATE_DASHBOARDS = {\n    byId: null,\n    items: [],\n};\n\n// reducer helper functions\n\nconst updateDashboardProp = (state, dashboardId, prop, value) => ({\n    byId: {\n        ...state.byId,\n        [dashboardId]: {\n            ...state.byId[dashboardId],\n            [prop]: value,\n        },\n    },\n    items: state.items,\n});\n\n/**\n * Reducer that computes and returns the new state based on the given action\n * @function\n * @param {Object} state The current state\n * @param {Object} action The action to be evaluated\n * @returns {Object}\n */\nexport default (state = DEFAULT_STATE_DASHBOARDS, action) => {\n    switch (action.type) {\n        case SET_DASHBOARDS: {\n            return {\n                byId: action.value,\n                items: [],\n            };\n        }\n        case ADD_DASHBOARDS: {\n            return {\n                ...state,\n                byId: {\n                    ...state.byId,\n                    ...action.value,\n                },\n            };\n        }\n        case SET_DASHBOARD_STARRED: {\n            return updateDashboardProp(\n                state,\n                action.dashboardId,\n                'starred',\n                action.value\n            );\n        }\n        case SET_DASHBOARD_DISPLAY_NAME: {\n            return updateDashboardProp(\n                state,\n                action.dashboardId,\n                'displayName',\n                action.value\n            );\n        }\n        case SET_DASHBOARD_ITEMS: {\n            return {\n                ...state,\n                items: action.value,\n            };\n        }\n        default:\n            return state;\n    }\n};\n\n// root selector\n\nexport const sGetDashboardsRoot = state => state.dashboards;\n\n// selector level 1\n\n/**\n * Selector which returns a dashboard by id from the state object\n * If no matching dashboard is found it returns undefined\n * If dashboards.byId is null, then the dashboards api request\n * has not yet completed. If dashboards.byId is an empty object\n * then the dashboards api request is complete, but no dashboards\n * were returned\n *\n * @function\n * @param {Object} state The current state\n * @param {Number} id The id of the dashboard\n * @returns {Object | undefined}\n */\nexport const sGetDashboardById = (state, id) =>\n    orObject(sGetDashboardsRoot(state).byId)[id];\n\nexport const sDashboardsIsFetching = state => {\n    return sGetDashboardsRoot(state).byId === null;\n};\n\n/**\n * Selector which returns all dashboards (the byId object)\n *\n * @function\n * @param {Object} state The current state\n * @returns {Object | undefined}\n */\nexport const sGetAllDashboards = state =>\n    orObject(sGetDashboardsRoot(state).byId);\n\n/**\n * Selector which returns the current dashboard items\n *\n * @function\n * @param {Object} state The current state\n * @returns {Array}\n */\nexport const sGetDashboardItems = state => sGetDashboardsRoot(state).items;\n\n// selector level 2\n\nexport const sGetStarredDashboards = state =>\n    Object.values(sGetAllDashboards(state)).filter(\n        dashboard => dashboard.starred === true\n    );\n\nexport const sGetUnstarredDashboards = state =>\n    Object.values(sGetAllDashboards(state)).filter(\n        dashboard => dashboard.starred === false\n    );\n\n// selector level 3\n\nexport const sGetStarredDashboardIds = state => {\n    return sGetStarredDashboards(state).map(dashboard => dashboard.id);\n};\n\nexport const sGetUnstarredDashboardIds = state =>\n    sGetUnstarredDashboards(state).map(dashboard => dashboard.id);\n\nexport const sGetDashboardsSortedByStarred = state => [\n    ...arraySort(sGetStarredDashboards(state), 'ASC', 'displayName'),\n    ...arraySort(sGetUnstarredDashboards(state), 'ASC', 'displayName'),\n];\n\n// utils\n\n/**\n * Returns the array of dashboards, customized for ui\n * @function\n * @param {Array} data The original dashboard list\n * @returns {Array}\n */\nexport const getCustomDashboards = data => {\n    const uiItems = items =>\n        items.map(item => {\n            const type = isSpacerType(item) ? SPACER : item.type;\n            const text = isTextType(item)\n                ? item.text === emptyTextItemContent\n                    ? ''\n                    : item.text\n                : null;\n\n            return {\n                ...item,\n                ...(text !== null ? { text } : {}),\n                type,\n            };\n        });\n\n    return arrayFrom(data).map((d, index) => ({\n        id: d.id,\n        name: d.name,\n        displayName: d.displayName,\n        description: d.description,\n        displayDescription: d.displayDescription,\n        starred: d.favorite,\n        owner: d.user.name,\n        created: d.created\n            .split('T')\n            .join(' ')\n            .substr(0, 16),\n        lastUpdated: d.lastUpdated\n            .split('T')\n            .join(' ')\n            .substr(0, 16),\n        access: d.access,\n        numberOfItems: orArray(d.dashboardItems).length,\n        dashboardItems: uiItems(d.dashboardItems),\n    }));\n};\n","/** @module reducers/selected */\nimport { combineReducers } from 'redux';\n\nimport { validateReducer } from '../modules/util';\n\nexport const SET_SELECTED_ID = 'SET_SELECTED_ID';\nexport const SET_SELECTED_ISLOADING = 'SET_SELECTED_ISLOADING';\nexport const SET_SELECTED_SHOWDESCRIPTION = 'SET_SELECTED_SHOWDESCRIPTION';\n\nexport const DEFAULT_STATE_SELECTED_ID = null;\nexport const DEFAULT_STATE_SELECTED_ISLOADING = false;\nexport const DEFAULT_STATE_SELECTED_SHOWDESCRIPTION = false;\n\n/**\n * Reducer functions that computes and returns the new state based on the given action\n * @function\n * @param {Object} state The current state\n * @param {Object} action The action to be evaluated\n */\nconst id = (state = DEFAULT_STATE_SELECTED_ID, action) => {\n    switch (action.type) {\n        case SET_SELECTED_ID:\n            return validateReducer(action.value, DEFAULT_STATE_SELECTED_ID);\n        default:\n            return state;\n    }\n};\n\nconst isLoading = (state = DEFAULT_STATE_SELECTED_ISLOADING, action) => {\n    switch (action.type) {\n        case SET_SELECTED_ISLOADING:\n            return validateReducer(\n                action.value,\n                DEFAULT_STATE_SELECTED_ISLOADING\n            );\n        default:\n            return state;\n    }\n};\n\nconst showDescription = (\n    state = DEFAULT_STATE_SELECTED_SHOWDESCRIPTION,\n    action\n) => {\n    switch (action.type) {\n        case SET_SELECTED_SHOWDESCRIPTION:\n            return validateReducer(\n                action.value,\n                DEFAULT_STATE_SELECTED_SHOWDESCRIPTION\n            );\n        default:\n            return state;\n    }\n};\n\nexport default combineReducers({\n    id,\n    isLoading,\n    showDescription,\n});\n\n// Selectors\n\nexport const sGetSelectedRoot = state => state.selected;\n\nexport const sGetSelectedId = state => sGetSelectedRoot(state).id;\n\nexport const sGetSelectedIsLoading = state => sGetSelectedRoot(state).isLoading;\n\nexport const sGetSelectedShowDescription = state =>\n    sGetSelectedRoot(state).showDescription;\n","import { orObject } from '../modules/util';\nimport objectClean from 'd2-utilizr/lib/objectClean';\n\n/** @module reducers/visualizations */\n\nexport const RECEIVED_VISUALIZATION = 'RECEIVED_VISUALIZATION';\nexport const RECEIVED_ACTIVE_VISUALIZATION = 'RECEIVED_ACTIVE_VISUALIZATION';\n\nexport const DEFAULT_STATE_VISUALIZATIONS = {};\n\nconst isEmpty = p => p === undefined || p === null;\n\nexport default (state = DEFAULT_STATE_VISUALIZATIONS, action) => {\n    switch (action.type) {\n        case RECEIVED_VISUALIZATION: {\n            return {\n                ...state,\n                [action.value.id]: objectClean(\n                    {\n                        ...orObject(state[action.value.id]),\n                        ...action.value,\n                    },\n                    isEmpty\n                ),\n            };\n        }\n        case RECEIVED_ACTIVE_VISUALIZATION: {\n            return {\n                ...state,\n                [action.id]: objectClean(\n                    {\n                        ...orObject(state[action.id]),\n                        activeType: action.activeType,\n                    },\n                    isEmpty\n                ),\n            };\n        }\n        default:\n            return state;\n    }\n};\n\n// root selector\nexport const sGetVisualizationsRoot = state => state.visualizations;\n\n// selectors level 1\nexport const sGetVisualization = (state, id) => {\n    return sGetVisualizationsRoot(state)[id];\n};\n","import { getInstance } from 'd2';\nimport arrayClean from 'd2-utilizr/lib/arrayClean';\n\nimport { getEndPointName } from '../modules/itemTypes';\n\n// Id, name\nexport const getIdNameFields = ({ rename } = {}) => [\n    'id',\n    `${rename ? 'displayName~rename(name)' : 'name,displayName'}`,\n];\n\n// Item\nexport const getItemFields = () => [\n    'dimensionItem~rename(id)',\n    'displayName~rename(name)',\n    'dimensionItemType',\n];\n\n// Dimension\nexport const getDimensionFields = ({ withItems }) =>\n    arrayClean([\n        'dimension',\n        'legendSet[id]',\n        'filter',\n        withItems ? `items[${getItemFields().join(',')}]` : ``,\n    ]);\n\n// Axis\nexport const getAxesFields = ({ withItems }) => [\n    `columns[${getDimensionFields({ withItems }).join(',')}]`,\n    `rows[${getDimensionFields({ withItems }).join(',')}]`,\n    `filters[${getDimensionFields({ withItems }).join(',')}]`,\n];\n\n// Favorite\nexport const getFavoriteFields = ({ withDimensions, withOptions }) => {\n    return arrayClean([\n        `${getIdNameFields({ rename: true }).join(',')}`,\n        'displayDescription~rename(description)',\n        withDimensions ? `${getAxesFields({ withItems: true }).join(',')}` : ``,\n        withOptions\n            ? [\n                  '*',\n                  '!attributeDimensions',\n                  '!attributeValues',\n                  '!category',\n                  '!categoryDimensions',\n                  '!categoryOptionGroupSetDimensions',\n                  '!columnDimensions',\n                  '!dataDimensionItems',\n                  '!dataElementDimensions',\n                  '!dataElementGroupSetDimensions',\n                  '!filterDimensions',\n                  '!itemOrganisationUnitGroups',\n                  '!lastUpdatedBy',\n                  '!organisationUnitGroupSetDimensions',\n                  '!organisationUnitLevels',\n                  '!organisationUnits',\n                  '!programIndicatorDimensions',\n                  '!relativePeriods',\n                  '!reportParams',\n                  '!rowDimensions',\n                  '!series',\n                  '!translations',\n                  '!userOrganisationUnit',\n                  '!userOrganisationUnitChildren',\n                  '!userOrganisationUnitGrandChildren',\n              ].join(',')\n            : '',\n    ]);\n};\n\nexport const getFavoritesFields = ({ withDimensions, withOptions }) => [\n    `reportTable[${getFavoriteFields({ withDimensions }).join(',')}]`,\n    `chart[${['type', ...getFavoriteFields({ withDimensions })].join(',')}]`,\n    `map[${getFavoriteFields({ withDimensions }).join(',')}]`,\n    `eventReport[${getFavoriteFields({ withDimensions }).join(',')}]`,\n    `eventChart[${getFavoriteFields({ withDimensions }).join(',')}]`,\n];\n\n// List item\nexport const getListItemFields = () => [\n    `reports[${getIdNameFields({ rename: true }).join(',')}]`,\n    `resources[${getIdNameFields({ rename: true }).join(',')}]`,\n    `users[${getIdNameFields({ rename: true }).join(',')}]`,\n];\n\n// Map\nexport const getMapFields = () => [\n    `${getIdNameFields({ rename: true }).join(',')}`,\n    'user,longitude,latitude,zoom,basemap',\n    `mapViews[${getFavoriteFields({\n        withDimensions: true,\n        withOptions: true,\n    })}]`,\n];\n\n// Api\n\n// Get more info about the favorite of a dashboard item\nexport const apiFetchFavorite = (id, type, { fields }) =>\n    getInstance().then(d2 =>\n        d2.Api.getApi().get(`${getEndPointName(type)}/${id}`, {\n            fields:\n                fields ||\n                getFavoriteFields({\n                    withDimensions: true,\n                    withOptions: true,\n                }),\n        })\n    );\n","import arrayClean from 'd2-utilizr/lib/arrayClean';\nimport {\n    getListItemFields,\n    getFavoritesFields,\n    getIdNameFields,\n} from './metadata';\n\n// Helper functions\n\nexport const onError = error => console.log('Error: ', error);\n\n// Dashboard item\nexport const getDashboardItemsFields = ({ withFavorite } = {}) =>\n    arrayClean([\n        'id',\n        'type',\n        'shape',\n        'x',\n        'y',\n        'width~rename(w)',\n        'height~rename(h)',\n        'messages',\n        'text',\n        'appKey',\n        `${getListItemFields().join(',')}`,\n        withFavorite\n            ? `${getFavoritesFields({\n                  withDimensions: withFavorite.withDimensions,\n              }).join(',')}`\n            : ``,\n    ]);\n\n// Dashboard\nexport const getDashboardFields = ({ withItems, withFavorite } = {}) =>\n    arrayClean([\n        `${getIdNameFields().join(',')}`,\n        'description',\n        'displayDescription',\n        'favorite',\n        `user[${getIdNameFields({ rename: true }).join(',')}]`,\n        'created',\n        'lastUpdated',\n        'access',\n        withItems\n            ? `dashboardItems[${getDashboardItemsFields({\n                  withFavorite,\n              }).join(',')}]`\n            : ``,\n    ]);\n","import { getInstance } from 'd2';\nimport arrayClean from 'd2-utilizr/lib/arrayClean';\nimport { onError, getDashboardFields } from './index';\n\n// Get \"all\" dashboards on startup\nexport const apiFetchDashboards = () =>\n    getInstance()\n        .then(d2 =>\n            d2.models.dashboard.list({\n                fields: [\n                    getDashboardFields().join(','),\n                    'dashboardItems[id]',\n                ].join(','),\n                paging: 'false',\n            })\n        )\n        .catch(onError);\n\n// Get more info about selected dashboard\nexport const apiFetchDashboard = id =>\n    getInstance()\n        .then(d2 =>\n            d2.models.dashboard.get(id, {\n                fields: arrayClean(\n                    getDashboardFields({\n                        withItems: true,\n                        withFavorite: { withDimensions: false },\n                    })\n                ).join(','),\n            })\n        )\n        .catch(onError);\n\n// Star dashboard\nexport const apiStarDashboard = (id, isStarred) => {\n    const url = `dashboards/${id}/favorite`;\n\n    getInstance().then(d2 => {\n        if (isStarred) {\n            d2.Api.getApi().post(url);\n        } else {\n            d2.Api.getApi().delete(url);\n        }\n    });\n};\n\nexport const apiDeleteDashboard = id => {\n    return getInstance()\n        .then(d2 => {\n            return d2.models.dashboards\n                .get(id)\n                .then(dashboard => dashboard.delete());\n        })\n        .catch(onError);\n};\n","import isFunction from 'd2-utilizr/lib/isFunction';\n\nimport { orObject } from '../../modules/util';\n\n// Dimensions for the react-grid-layout\n\nexport const GRID_COMPACT_TYPE = 'vertical'; // vertical | horizonal | null\nexport const GRID_ROW_HEIGHT = 10;\nconst GRID_COLUMN_WIDTH_PX = 20;\nconst GRID_LAYOUT = 'FLEXIBLE'; // FIXED | FLEXIBLE\nexport const MARGIN = [10, 10];\n\nexport const NEW_ITEM_SHAPE = { x: 0, y: 0, w: 20, h: 29 };\nexport const ITEM_MIN_HEIGHT = 4;\n\n// Dimensions for getShape\n\nconst NUMBER_OF_ITEM_COLS = 2;\nconst GRID_COLUMNS = 60;\n\nexport const getGridColumns = () => {\n    switch (GRID_LAYOUT) {\n        case 'FLEXIBLE':\n            return GRID_COLUMNS;\n        case 'FIXED':\n            return Math.floor((window.innerWidth - 20) / GRID_COLUMN_WIDTH_PX);\n        default:\n            return GRID_COLUMNS;\n    }\n};\n\n// isNonNegativeInteger\n\nconst isNonNegativeInteger = x => Number.isInteger(x) && x >= 0;\n\n// Does the item have all the shape properties?\n\nexport const hasShape = item =>\n    isNonNegativeInteger(item.x) &&\n    isNonNegativeInteger(item.y) &&\n    isNonNegativeInteger(item.w) &&\n    isNonNegativeInteger(item.h);\n\n// returns a rectangular grid block dimensioned with x, y, w, h in grid units.\n// based on a grid with 3 items across\nexport const getShape = i => {\n    if (!isNonNegativeInteger(i)) {\n        throw new Error('Invalid grid block number');\n    }\n\n    const col = i % NUMBER_OF_ITEM_COLS;\n    const row = Math.floor(i / NUMBER_OF_ITEM_COLS);\n    const itemWidth = Math.floor((GRID_COLUMNS - 1) / NUMBER_OF_ITEM_COLS);\n    const itemHeight = GRID_ROW_HEIGHT * 2;\n\n    return {\n        x: col * itemWidth,\n        y: row * itemHeight,\n        w: itemWidth,\n        h: itemHeight,\n    };\n};\n\n/**\n * Calculates the grid item's original height in pixels based\n * on the height in grid units. This calculation\n * is copied directly from react-grid-layout GridItem.js (calcPosition)\n *\n * @param {Object} item item containing shape (x, y, w, h)\n */\nconst getOriginalHeight = item => {\n    const originalHeight = Math.round(\n        GRID_ROW_HEIGHT * item.h + Math.max(0, item.h - 1) * MARGIN[1]\n    );\n\n    return { originalHeight };\n};\n\n/**\n * Returns an array of items containing the x, y, w, h dimensions\n * and the item's originalheight in pixels\n * @function\n * @param {Array} items\n * @returns {Array}\n */\n\nexport const withShape = items =>\n    items.map((item, index) => {\n        const itemWithShape = hasShape(item)\n            ? item\n            : Object.assign({}, item, getShape(index));\n\n        return Object.assign(\n            {},\n            itemWithShape,\n            getOriginalHeight(itemWithShape)\n        );\n    });\n\nexport const getGridItemDomId = id => `item-${id}`;\n\nexport function onItemResize(id) {\n    const el = orObject(document.querySelector(`#${getGridItemDomId(id)}`));\n    if (isFunction(el.setViewportSize))\n        setTimeout(\n            () => el.setViewportSize(el.clientWidth - 5, el.clientHeight - 5),\n            10\n        );\n}\n","import update from 'immutability-helper';\nimport { arrayToIdMap } from '../modules/util';\n\nexport const RECEIVED_MESSAGES = 'RECEIVED_MESSAGES';\n\nexport default (state = {}, action) => {\n    switch (action.type) {\n        case RECEIVED_MESSAGES: {\n            const conversations = arrayToIdMap(action.value);\n\n            const newState = update(state, { $merge: conversations });\n\n            return newState;\n        }\n        default:\n            return state;\n    }\n};\n\n// selectors\n\nexport const sGetMessagesRoot = state => state.messages;\n","import { getInstance } from 'd2';\n\nexport const getMessages = () => {\n    const fields =\n        'id,messageCount,lastUpdated,messageType,displayName,read,messages[id,read,sender[id,displayName],text,lastUpdated]';\n    const url = `/messageConversations?fields=${fields}&order=read:asc&pageSize=200`;\n    return getInstance()\n        .then(d2 => d2.Api.getApi().get(url))\n        .catch(error => console.log('Error:', error));\n};\n","export const RECEIVED_SNACKBAR_MESSAGE = 'RECEIVED_SNACKBAR_MESSAGE';\nexport const CLOSE_SNACKBAR = 'CLOSE_SNACKBAR';\n\nexport const DEFAULT_STATE_SNACKBAR = {\n    message: {},\n    duration: null,\n    open: false,\n};\n\nexport default (state = DEFAULT_STATE_SNACKBAR, action) => {\n    switch (action.type) {\n        case RECEIVED_SNACKBAR_MESSAGE: {\n            return { ...state, ...action.value };\n        }\n        case CLOSE_SNACKBAR: {\n            return DEFAULT_STATE_SNACKBAR;\n        }\n        default:\n            return state;\n    }\n};\n\n// selectors\n\nexport const sGetSnackbar = state => state.snackbar || DEFAULT_STATE_SNACKBAR;\n","import {\n    RECEIVED_SNACKBAR_MESSAGE,\n    CLOSE_SNACKBAR,\n} from '../reducers/snackbar';\n\nexport const acReceivedSnackbarMessage = value => ({\n    type: RECEIVED_SNACKBAR_MESSAGE,\n    value,\n});\n\nexport const acCloseSnackbar = () => ({\n    type: CLOSE_SNACKBAR,\n});\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport Snackbar from '@material-ui/core/Snackbar';\n\nimport { sGetSnackbar } from '../../reducers/snackbar';\nimport { acCloseSnackbar } from '../../actions/snackbar';\n\nconst LOADING_DASHBOARD = 'LOADING_DASHBOARD';\nexport const loadingDashboardMsg = { name: '', type: LOADING_DASHBOARD };\n\nconst SnackbarMessageContent = ({ message }) => {\n    if (typeof message === 'object') {\n        //future message types:  switch(message.type)\n        return (\n            <span>\n                Loading <span style={{ fontWeight: 800 }}>{message.name}</span>{' '}\n                dashboard\n            </span>\n        );\n    }\n    return message;\n};\n\nexport const SnackbarMessage = props => {\n    return (\n        <Snackbar\n            style={{ zIndex: 10001 }}\n            open={props.snackbarOpen}\n            message={<SnackbarMessageContent message={props.snackbarMessage} />}\n            autoHideDuration={props.snackbarDuration}\n            onClose={props.onCloseSnackbar}\n        />\n    );\n};\n\nconst mapStateToProps = state => {\n    const { message, duration, open } = sGetSnackbar(state);\n    return {\n        snackbarOpen: open,\n        snackbarMessage: message,\n        snackbarDuration: duration,\n    };\n};\n\nexport default connect(\n    mapStateToProps,\n    {\n        onCloseSnackbar: acCloseSnackbar,\n    }\n)(SnackbarMessage);\n","import isObject from 'lodash/isObject';\nimport { apiFetchFavorite, getMapFields } from '../../../api/metadata';\nimport {\n    REPORT_TABLE,\n    CHART,\n    MAP,\n    EVENT_REPORT,\n    EVENT_CHART,\n    itemTypeMap,\n    getPlugin,\n} from '../../../modules/itemTypes';\nimport { getBaseUrl, getWithoutId } from '../../../modules/util';\nimport { getGridItemDomId } from '../../ItemGrid/gridUtil';\n\nexport const THEMATIC_LAYER = 'thematic';\n\nexport const pluginIsAvailable = (item = {}, visualization = {}) => {\n    const type = visualization.activeType || item.type;\n\n    return !!getPlugin(type);\n};\n\nexport const extractFavorite = item => {\n    if (!isObject(item)) {\n        return null;\n    }\n\n    switch (item.type) {\n        case REPORT_TABLE:\n            return item.reportTable;\n        case CHART:\n            return item.chart;\n        case MAP:\n            return item.map;\n        case EVENT_REPORT:\n            return item.eventReport;\n        case EVENT_CHART:\n            return item.eventChart;\n        default:\n            return (\n                item.reportTable ||\n                item.chart ||\n                item.map ||\n                item.eventReport ||\n                item.eventChart ||\n                {}\n            );\n    }\n};\n\nexport const extractMapView = map =>\n    map.mapViews && map.mapViews.find(mv => mv.layer.includes(THEMATIC_LAYER));\n\nexport const loadPlugin = (plugin, config, credentials) => {\n    if (!(plugin && plugin.load)) {\n        return;\n    }\n\n    plugin.url = credentials.baseUrl;\n    plugin.loadingIndicator = true;\n    plugin.dashboard = true;\n    if (credentials.auth) {\n        plugin.auth = credentials.auth;\n    }\n    plugin.load(config);\n};\n\nexport const getId = item => extractFavorite(item).id;\nexport const getName = item => extractFavorite(item).name;\nexport const getDescription = item => extractFavorite(item).description;\nexport const getLink = (item, d2) => {\n    const baseUrl = getBaseUrl(d2);\n    const appUrl = itemTypeMap[item.type].appUrl(getId(item));\n\n    return `${baseUrl}/${appUrl}`;\n};\n\nexport const load = async (\n    item,\n    visualization,\n    credentials,\n    activeType,\n    filter = {}\n) => {\n    const config = {\n        ...visualization,\n        el: getGridItemDomId(item.id),\n    };\n\n    const type = activeType || item.type;\n    const plugin = getPlugin(type);\n\n    loadPlugin(plugin, config, credentials);\n};\n\nexport const fetch = async item => {\n    const fetchedFavorite = await apiFetchFavorite(getId(item), item.type, {\n        fields: item.type === MAP ? getMapFields() : null,\n    });\n\n    return fetchedFavorite;\n};\n\nexport const resize = item => {\n    const plugin = getPlugin(item.type);\n\n    if (plugin && plugin.resize) {\n        plugin.resize(getGridItemDomId(item.id));\n    }\n};\n\nexport const unmount = (item, activeType) => {\n    const plugin = getPlugin(activeType);\n\n    if (plugin && plugin.unmount) {\n        plugin.unmount(getGridItemDomId(item.id));\n    }\n};\n\nexport const getVisualizationConfig = (\n    visualization,\n    originalType,\n    activeType\n) => {\n    if (originalType === MAP && originalType !== activeType) {\n        const extractedMapView = extractMapView(visualization);\n\n        if (extractedMapView === undefined) {\n            return null;\n        }\n\n        return getWithoutId({\n            ...visualization,\n            ...extractedMapView,\n            mapViews: undefined,\n        });\n    }\n\n    return getWithoutId(visualization);\n};\n","import {\n    SET_SELECTED_ID,\n    SET_SELECTED_ISLOADING,\n    SET_SELECTED_SHOWDESCRIPTION,\n} from '../reducers/selected';\nimport {\n    RECEIVED_VISUALIZATION,\n    RECEIVED_ACTIVE_VISUALIZATION,\n} from '../reducers/visualizations';\nimport { sGetSelectedIsLoading } from '../reducers/selected';\nimport { sGetUserUsername } from '../reducers/user';\nimport { getCustomDashboards, sGetDashboardById } from '../reducers/dashboards';\nimport { apiFetchDashboard } from '../api/dashboards';\nimport { acSetDashboardItems, acAppendDashboards } from './dashboards';\nimport { withShape } from '../components/ItemGrid/gridUtil';\nimport { tGetMessages } from '../components/Item/MessagesItem/actions';\nimport { acReceivedSnackbarMessage, acCloseSnackbar } from './snackbar';\nimport { storePreferredDashboardId } from '../api/localStorage';\nimport { loadingDashboardMsg } from '../components/SnackbarMessage/SnackbarMessage';\nimport {\n    REPORT_TABLE,\n    CHART,\n    MAP,\n    EVENT_REPORT,\n    EVENT_CHART,\n    MESSAGES,\n} from '../modules/itemTypes';\nimport { extractFavorite } from '../components/Item/VisualizationItem/plugin';\nimport { orObject } from '../modules/util';\n\n// actions\n\nexport const acSetSelectedId = value => ({\n    type: SET_SELECTED_ID,\n    value,\n});\n\nexport const acSetSelectedIsLoading = value => ({\n    type: SET_SELECTED_ISLOADING,\n    value,\n});\n\nexport const acSetSelectedShowDescription = value => ({\n    type: SET_SELECTED_SHOWDESCRIPTION,\n    value,\n});\n\nexport const acReceivedVisualization = value => ({\n    type: RECEIVED_VISUALIZATION,\n    value,\n});\n\nexport const acReceivedActiveVisualization = (id, type, activeType) => {\n    const action = {\n        type: RECEIVED_ACTIVE_VISUALIZATION,\n        id,\n    };\n\n    if (activeType !== type) {\n        action.activeType = activeType;\n    }\n\n    return action;\n};\n\nexport const tLoadDashboard = id => async (dispatch, getState) => {\n    try {\n        const dash = await apiFetchDashboard(id);\n        dispatch(acAppendDashboards(dash));\n\n        return Promise.resolve(dash);\n    } catch (err) {\n        console.log('Error: ', err);\n        return err;\n    }\n};\n\n// thunks\nexport const tSetSelectedDashboardById = id => async (dispatch, getState) => {\n    dispatch(acSetSelectedIsLoading(true));\n\n    const snackbarTimeout = setTimeout(() => {\n        const dashboardName = orObject(sGetDashboardById(getState(), id))\n            .displayName;\n        if (sGetSelectedIsLoading(getState()) && dashboardName) {\n            loadingDashboardMsg.name = dashboardName;\n\n            dispatch(\n                acReceivedSnackbarMessage({\n                    message: loadingDashboardMsg,\n                    open: true,\n                })\n            );\n        }\n    }, 500);\n\n    const onSuccess = selected => {\n        const customDashboard = getCustomDashboards(selected)[0];\n\n        dispatch(\n            acSetDashboardItems(withShape(customDashboard.dashboardItems))\n        );\n\n        storePreferredDashboardId(sGetUserUsername(getState()), id);\n\n        // add visualizations to store\n        customDashboard.dashboardItems.forEach(item => {\n            switch (item.type) {\n                case REPORT_TABLE:\n                case CHART:\n                case MAP:\n                case EVENT_REPORT:\n                case EVENT_CHART:\n                    dispatch(acReceivedVisualization(extractFavorite(item)));\n                    break;\n                case MESSAGES:\n                    dispatch(tGetMessages(id));\n                    break;\n                default:\n                    break;\n            }\n        });\n\n        dispatch(acSetSelectedId(id));\n\n        dispatch(acSetSelectedIsLoading(false));\n\n        clearTimeout(snackbarTimeout);\n\n        dispatch(acCloseSnackbar());\n\n        return selected;\n    };\n\n    const onError = error => {\n        console.log('Error: ', error);\n        return error;\n    };\n\n    try {\n        const selected = await dispatch(tLoadDashboard(id));\n\n        return onSuccess(selected);\n    } catch (err) {\n        return onError(err);\n    }\n};\n","export const getPreferredDashboardId = username =>\n    localStorage.getItem(`dhis2.dashboard.current.${username}`) || undefined;\n\nexport const storePreferredDashboardId = (username, dashboardId) => {\n    localStorage.setItem(`dhis2.dashboard.current.${username}`, dashboardId);\n};\n","import { RECEIVED_MESSAGES } from '../../../reducers/messages';\nimport { getMessages } from '../../../api/messages';\n\nconst onError = (action, error) => {\n    console.log(`Error in action ${action}: ${error}`);\n    return error;\n};\n\nexport const receivedMessages = value => ({\n    type: RECEIVED_MESSAGES,\n    value,\n});\n\nexport const tGetMessages = dashboardItemId => async dispatch => {\n    try {\n        const messages = await getMessages();\n        const { messageConversations } = messages;\n\n        return dispatch(receivedMessages(messageConversations));\n    } catch (err) {\n        return onError('Get Messages', err);\n    }\n};\n","/** @module reducers/editDashboard */\nimport update from 'immutability-helper';\nimport isEmpty from 'lodash/isEmpty';\nimport { orArray, orObject } from '../modules/util';\n\nexport const RECEIVED_EDIT_DASHBOARD = 'RECEIVED_EDIT_DASHBOARD';\nexport const RECEIVED_NOT_EDITING = 'RECEIVED_NOT_EDITING';\nexport const START_NEW_DASHBOARD = 'START_NEW_DASHBOARD';\nexport const RECEIVED_TITLE = 'RECEIVED_TITLE';\nexport const RECEIVED_DESCRIPTION = 'RECEIVED_DESCRIPTION';\nexport const ADD_DASHBOARD_ITEM = 'ADD_DASHBOARD_ITEM';\nexport const REMOVE_DASHBOARD_ITEM = 'REMOVE_DASHBOARD_ITEM';\nexport const UPDATE_DASHBOARD_ITEM = 'UPDATE_DASHBOARD_ITEM';\nexport const RECEIVED_DASHBOARD_LAYOUT = 'RECEIVED_DASHBOARD_LAYOUT';\n\nexport const DEFAULT_STATE_EDIT_DASHBOARD = {};\nexport const NEW_DASHBOARD_STATE = {\n    id: '',\n    name: '',\n    access: {},\n    description: '',\n    dashboardItems: [],\n};\n\nexport default (state = DEFAULT_STATE_EDIT_DASHBOARD, action) => {\n    switch (action.type) {\n        case RECEIVED_EDIT_DASHBOARD:\n            const newState = {};\n            Object.keys(NEW_DASHBOARD_STATE).map(\n                k => (newState[k] = action.value[k])\n            );\n            return newState;\n        case RECEIVED_NOT_EDITING:\n            return DEFAULT_STATE_EDIT_DASHBOARD;\n        case START_NEW_DASHBOARD:\n            return NEW_DASHBOARD_STATE;\n        case RECEIVED_TITLE: {\n            return Object.assign({}, state, { name: action.value });\n        }\n        case RECEIVED_DESCRIPTION: {\n            return Object.assign({}, state, {\n                description: action.value,\n            });\n        }\n        case ADD_DASHBOARD_ITEM:\n            return update(state, {\n                dashboardItems: { $unshift: [action.value] },\n            });\n        case REMOVE_DASHBOARD_ITEM: {\n            const idToRemove = action.value;\n\n            const dashboardItemIndex = state.dashboardItems.findIndex(\n                item => item.id === idToRemove\n            );\n\n            if (dashboardItemIndex > -1) {\n                return update(state, {\n                    dashboardItems: {\n                        $splice: [[dashboardItemIndex, 1]],\n                    },\n                });\n            }\n\n            return state;\n        }\n        case RECEIVED_DASHBOARD_LAYOUT: {\n            const stateItems = orArray(state.dashboardItems);\n\n            const newStateItems = action.value.map(({ x, y, w, h, i }) => {\n                const stateItem = stateItems.find(si => si.id === i);\n\n                return Object.assign({}, stateItem, { w, h, x, y });\n            });\n\n            return update(state, {\n                dashboardItems: { $set: newStateItems },\n            });\n        }\n        case UPDATE_DASHBOARD_ITEM: {\n            const dashboardItem = action.value;\n\n            const dashboardItemIndex = state.dashboardItems.findIndex(\n                item => item.id === dashboardItem.id\n            );\n\n            if (dashboardItemIndex > -1) {\n                const newState = update(state, {\n                    dashboardItems: {\n                        $splice: [[dashboardItemIndex, 1, dashboardItem]],\n                    },\n                });\n\n                return newState;\n            }\n\n            return state;\n        }\n        default:\n            return state;\n    }\n};\n\n// root selector\n\nexport const sGetEditDashboardRoot = state => state.editDashboard;\n\n// selectors\n\nexport const sGetIsEditing = state => !isEmpty(state.editDashboard);\n\nexport const sGetIsNewDashboard = state => {\n    return (\n        !isEmpty(state.editDashboard) && sGetEditDashboardRoot(state).id === ''\n    );\n};\n\nexport const sGetEditDashboardItems = state =>\n    orObject(sGetEditDashboardRoot(state)).dashboardItems;\n","export const CLEAR_EDIT_ITEM_FILTERS = 'CLEAR_EDIT_ITEM_FILTERS';\nexport const REMOVE_EDIT_ITEM_FILTER = 'REMOVE_EDIT_ITEM_FILTER';\nexport const SET_EDIT_ITEM_FILTERS = 'SET_EDIT_ITEM_FILTERS';\n\nexport const DEFAULT_STATE_EDIT_ITEM_FILTERS = {};\n\nexport default (state = DEFAULT_STATE_EDIT_ITEM_FILTERS, action) => {\n    switch (action.type) {\n        case REMOVE_EDIT_ITEM_FILTER: {\n            const newState = { ...state };\n\n            delete newState[action.id];\n\n            return newState;\n        }\n        case SET_EDIT_ITEM_FILTERS: {\n            return action.filters;\n        }\n        case CLEAR_EDIT_ITEM_FILTERS: {\n            return DEFAULT_STATE_EDIT_ITEM_FILTERS;\n        }\n        default:\n            return state;\n    }\n};\n\n// selectors\n\nexport const sGetEditItemFiltersRoot = state => state.editItemFilters;\n\nexport const sGetEditFiltersKeys = state =>\n    Object.keys(sGetEditItemFiltersRoot(state));\n","export const CLEAR_ITEM_FILTERS = 'CLEAR_ITEM_FILTERS';\nexport const SET_ITEM_FILTERS = 'SET_ITEM_FILTERS';\nexport const ADD_ITEM_FILTER = 'ADD_ITEM_FILTER';\nexport const REMOVE_ITEM_FILTER = 'REMOVE_ITEM_FILTER';\n\nexport const DEFAULT_STATE_ITEM_FILTERS = {};\n\nexport default (state = DEFAULT_STATE_ITEM_FILTERS, action) => {\n    switch (action.type) {\n        case ADD_ITEM_FILTER: {\n            return {\n                ...state,\n                [action.filter.id]: action.filter.value,\n            };\n        }\n        case REMOVE_ITEM_FILTER: {\n            const newState = { ...state };\n\n            delete newState[action.id];\n\n            return newState;\n        }\n        case SET_ITEM_FILTERS: {\n            return action.filters;\n        }\n        case CLEAR_ITEM_FILTERS: {\n            return DEFAULT_STATE_ITEM_FILTERS;\n        }\n        default:\n            return state;\n    }\n};\n\n// selectors\n\nexport const sGetItemFiltersRoot = state => state.itemFilters;\n\nexport const sGetFiltersKeys = state => Object.keys(sGetItemFiltersRoot(state));\n","import {\n    ADD_ITEM_FILTER,\n    REMOVE_ITEM_FILTER,\n    SET_ITEM_FILTERS,\n    CLEAR_ITEM_FILTERS,\n} from '../reducers/itemFilters';\n\nexport const FILTER_ORG_UNIT = 'ou';\n\n// actions\n\nexport const acAddItemFilter = filter => ({\n    type: ADD_ITEM_FILTER,\n    filter,\n});\n\nexport const acRemoveItemFilter = id => ({\n    type: REMOVE_ITEM_FILTER,\n    id,\n});\n\nexport const acClearItemFilters = () => ({\n    type: CLEAR_ITEM_FILTERS,\n});\n\nexport const acSetItemFilters = filters => ({\n    type: SET_ITEM_FILTERS,\n    filters,\n});\n","import {\n    REMOVE_EDIT_ITEM_FILTER,\n    SET_EDIT_ITEM_FILTERS,\n    CLEAR_EDIT_ITEM_FILTERS,\n} from '../reducers/editItemFilters';\n\n// actions\n\nexport const acRemoveEditItemFilter = id => ({\n    type: REMOVE_EDIT_ITEM_FILTER,\n    id,\n});\n\nexport const acClearEditItemFilters = () => ({\n    type: CLEAR_EDIT_ITEM_FILTERS,\n});\n\nexport const acSetEditItemFilters = filters => ({\n    type: SET_EDIT_ITEM_FILTERS,\n    filters,\n});\n","import { getInstance } from 'd2';\n\nconst onError = error => console.log('Error: ', error);\n\nconst saveDashboard = (dashboard, data) => {\n    const { name, description, dashboardItems } = data;\n\n    dashboard.name = name;\n    dashboard.description = description;\n    dashboard.dashboardItems = dashboardItems.map(item =>\n        Object.assign({}, item, { width: item.w, height: item.h })\n    );\n\n    return dashboard.save().then(msg => msg.response.uid);\n};\n\nexport const updateDashboard = data => {\n    return getInstance()\n        .then(d2 => {\n            return d2.models.dashboards\n                .get(data.id)\n                .then(dashboard => saveDashboard(dashboard, data));\n        })\n        .catch(onError);\n};\n\nexport const postDashboard = data => {\n    return getInstance().then(d2 => {\n        const dashboard = d2.models.dashboards.create();\n\n        return saveDashboard(dashboard, data);\n    });\n};\n","import { generateUid } from 'd2/uid';\n\nimport {\n    RECEIVED_EDIT_DASHBOARD,\n    START_NEW_DASHBOARD,\n    RECEIVED_NOT_EDITING,\n    RECEIVED_TITLE,\n    RECEIVED_DESCRIPTION,\n    RECEIVED_DASHBOARD_LAYOUT,\n    ADD_DASHBOARD_ITEM,\n    UPDATE_DASHBOARD_ITEM,\n    REMOVE_DASHBOARD_ITEM,\n} from '../reducers/editDashboard';\nimport { sGetEditDashboardRoot } from '../reducers/editDashboard';\nimport { updateDashboard, postDashboard } from '../api/editDashboard';\nimport { tSetSelectedDashboardById } from '../actions/selected';\nimport { NEW_ITEM_SHAPE } from '../components/ItemGrid/gridUtil';\nimport {\n    itemTypeMap,\n    isSpacerType,\n    TEXT,\n    emptyTextItemContent,\n    isTextType,\n} from '../modules/itemTypes';\n\nconst onError = error => {\n    console.log('Error (Saving Dashboard): ', error);\n    return error;\n};\n\n// actions\n\nexport const acSetEditDashboard = (dashboard, items) => {\n    const val = {\n        ...dashboard,\n        dashboardItems: items,\n    };\n\n    return {\n        type: RECEIVED_EDIT_DASHBOARD,\n        value: val,\n    };\n};\n\nexport const acSetEditNewDashboard = () => ({\n    type: START_NEW_DASHBOARD,\n});\n\nexport const acClearEditDashboard = () => ({\n    type: RECEIVED_NOT_EDITING,\n});\n\nexport const acSetDashboardTitle = value => ({\n    type: RECEIVED_TITLE,\n    value,\n});\n\nexport const acSetDashboardDescription = value => ({\n    type: RECEIVED_DESCRIPTION,\n    value,\n});\n\nexport const acUpdateDashboardLayout = value => ({\n    type: RECEIVED_DASHBOARD_LAYOUT,\n    value,\n});\n\nexport const acAddDashboardItem = item => {\n    const type = item.type;\n    delete item.type;\n    const itemPropName = itemTypeMap[type].propName;\n\n    return {\n        type: ADD_DASHBOARD_ITEM,\n        value: {\n            id: generateUid(),\n            type,\n            [itemPropName]: item.content,\n            ...NEW_ITEM_SHAPE,\n        },\n    };\n};\n\nexport const acUpdateDashboardItem = item => ({\n    type: UPDATE_DASHBOARD_ITEM,\n    value: item,\n});\n\nexport const acRemoveDashboardItem = value => ({\n    type: REMOVE_DASHBOARD_ITEM,\n    value,\n});\n\n// thunks\n\nexport const tSaveDashboard = () => async (dispatch, getState) => {\n    const dashboard = sGetEditDashboardRoot(getState());\n\n    const dashboardItems = dashboard.dashboardItems.map(item => {\n        const text = isTextType(item)\n            ? item.text || emptyTextItemContent\n            : null;\n\n        const type = isSpacerType(item) ? TEXT : item.type;\n\n        return {\n            ...item,\n            ...(text ? { text } : {}),\n            type,\n        };\n    });\n\n    const dashboardToSave = {\n        ...dashboard,\n        dashboardItems,\n    };\n\n    try {\n        const dashboardId = dashboardToSave.id\n            ? await updateDashboard(dashboardToSave)\n            : await postDashboard(dashboardToSave);\n\n        dispatch(acClearEditDashboard());\n        await dispatch(tSetSelectedDashboardById(dashboardId));\n\n        return Promise.resolve(dashboardId);\n    } catch (error) {\n        onError(error);\n    }\n};\n","import {\n    SET_DASHBOARDS,\n    ADD_DASHBOARDS,\n    SET_DASHBOARD_STARRED,\n    SET_DASHBOARD_DISPLAY_NAME,\n    SET_DASHBOARD_ITEMS,\n} from '../reducers/dashboards';\nimport {\n    getCustomDashboards,\n    sGetDashboardById,\n    sGetDashboardsSortedByStarred,\n} from '../reducers/dashboards';\nimport { sGetUserUsername } from '../reducers/user';\nimport { tSetSelectedDashboardById, acSetSelectedId } from './selected';\nimport { sGetSelectedId } from '../reducers/selected';\nimport { sGetIsEditing } from '../reducers/editDashboard';\nimport { sGetEditItemFiltersRoot } from '../reducers/editItemFilters';\nimport { acSetItemFilters, acClearItemFilters } from './itemFilters';\nimport { acClearEditItemFilters } from './editItemFilters';\nimport { acClearEditDashboard } from './editDashboard';\nimport {\n    apiFetchDashboards,\n    apiStarDashboard,\n    apiDeleteDashboard,\n} from '../api/dashboards';\nimport { getPreferredDashboardId } from '../api/localStorage';\nimport { arrayToIdMap } from '../modules/util';\n\n// actions\n\nexport const acSetDashboards = dashboards => ({\n    type: SET_DASHBOARDS,\n    value: arrayToIdMap(getCustomDashboards(dashboards)),\n});\n\nexport const acAppendDashboards = dashboards => ({\n    type: ADD_DASHBOARDS,\n    value: arrayToIdMap(getCustomDashboards(dashboards)),\n});\n\nexport const acSetDashboardStarred = (dashboardId, isStarred) => ({\n    type: SET_DASHBOARD_STARRED,\n    dashboardId: dashboardId,\n    value: isStarred,\n});\n\nexport const acSetDashboardDisplayName = (dashboardId, value) => ({\n    type: SET_DASHBOARD_DISPLAY_NAME,\n    dashboardId,\n    value,\n});\n\nexport const acSetDashboardItems = value => ({\n    type: SET_DASHBOARD_ITEMS,\n    value,\n});\n\n// thunks\n\nexport const tFetchDashboards = () => async dispatch => {\n    const collection = await apiFetchDashboards();\n    dispatch(acSetDashboards(collection.toArray()));\n};\n\nexport const tSelectDashboard = id => async (dispatch, getState) => {\n    const onError = error => {\n        console.log('Error (apiFetchDashboards): ', error);\n        return error;\n    };\n\n    try {\n        const state = getState();\n\n        let dashboardToSelect = null;\n        if (id) {\n            dashboardToSelect = sGetDashboardById(state, id) || null;\n        } else {\n            const preferredId = getPreferredDashboardId(\n                sGetUserUsername(state)\n            );\n            const dash = sGetDashboardById(state, preferredId);\n            dashboardToSelect =\n                preferredId && dash\n                    ? dash\n                    : sGetDashboardsSortedByStarred(state)[0];\n        }\n\n        if (dashboardToSelect) {\n            dispatch(tSetSelectedDashboardById(dashboardToSelect.id));\n\n            if (dashboardToSelect.id === sGetSelectedId(state)) {\n                if (sGetIsEditing(state)) {\n                    // disable filters when switching to edit mode\n                    dispatch(acClearItemFilters());\n                } else {\n                    // enable filters when switching to view mode\n                    dispatch(acSetItemFilters(sGetEditItemFiltersRoot(state)));\n                }\n            } else {\n                // clear filters when switching dashboard\n                dispatch(acClearEditItemFilters());\n                dispatch(acClearItemFilters());\n            }\n        } else {\n            dispatch(acSetSelectedId(false));\n        }\n    } catch (err) {\n        return onError(err);\n    }\n};\n\nexport const tStarDashboard = (id, isStarred) => async (dispatch, getState) => {\n    const onSuccess = id => {\n        dispatch(acSetDashboardStarred(id, isStarred));\n        return id;\n    };\n\n    const onError = error => {\n        console.log('Error (apiStarDashboard): ', error);\n        return error;\n    };\n    try {\n        await apiStarDashboard(id, isStarred);\n        return onSuccess(id);\n    } catch (err) {\n        return onError(err);\n    }\n};\n\nexport const tDeleteDashboard = id => async (dispatch, getState) => {\n    try {\n        await apiDeleteDashboard(id);\n        dispatch(acClearEditDashboard());\n        dispatch(acSetSelectedId());\n        dispatch(acSetDashboardItems([]));\n\n        await dispatch(tFetchDashboards());\n\n        return Promise.resolve();\n    } catch (err) {\n        console.log('Error (deleteDashboard): ', err);\n        return err;\n    }\n};\n","/** @module reducers/controlBar */\nimport { combineReducers } from 'redux';\nimport { validateReducer } from '../modules/util';\n\nexport const SET_CONTROLBAR_USER_ROWS = 'SET_CONTROLBAR_USER_ROWS';\n\nexport const DEFAULT_STATE_CONTROLBAR_ROWS = 1;\n\nconst userRows = (state = DEFAULT_STATE_CONTROLBAR_ROWS, action) => {\n    switch (action.type) {\n        case SET_CONTROLBAR_USER_ROWS:\n            return validateReducer(action.value, DEFAULT_STATE_CONTROLBAR_ROWS);\n        default:\n            return state;\n    }\n};\n\nexport default combineReducers({\n    userRows,\n});\n\n/**\n * Selectors that point to specific props in the state object\n * @function\n * @param {Object} state\n * @returns {Object}\n */\nexport const sGetControlBarRoot = state => state.controlBar;\n\n// Selector dependency level 2\n\nexport const sGetControlBarUserRows = state =>\n    sGetControlBarRoot(state).userRows;\n","import { getInstance } from 'd2';\nimport { DEFAULT_STATE_CONTROLBAR_ROWS } from '../reducers/controlBar';\n\nconst NAMESPACE = 'dashboard';\nconst KEY = 'controlBarRows';\n\nconst hasNamespace = async d2 => await d2.currentUser.dataStore.has(NAMESPACE);\n\nconst getNamespace = async (d2, hasNamespace) =>\n    hasNamespace\n        ? await d2.currentUser.dataStore.get(NAMESPACE)\n        : await d2.currentUser.dataStore.create(NAMESPACE);\n\nexport const apiGetControlBarRows = async () => {\n    const d2 = await getInstance();\n    const namespace = await getNamespace(d2, await hasNamespace(d2));\n    const hasKey = namespace.keys && namespace.keys.find(key => key === KEY);\n\n    if (hasKey) {\n        return await namespace.get(KEY);\n    } else {\n        await apiPostControlBarRows(DEFAULT_STATE_CONTROLBAR_ROWS, namespace);\n        console.log(\n            '(These errors to /userDataStore/dashboard can be ignored)'\n        );\n        return DEFAULT_STATE_CONTROLBAR_ROWS;\n    }\n};\n\nexport const apiPostControlBarRows = async (rows, namespace) => {\n    const d2 = await getInstance();\n    const ns = namespace || (await getNamespace(d2, hasNamespace));\n\n    ns.set(KEY, rows);\n};\n","import { SET_CONTROLBAR_USER_ROWS } from '../reducers/controlBar';\nimport { apiGetControlBarRows } from '../api/controlBar';\n\n// actions\n\nexport const acSetControlBarUserRows = rows => ({\n    type: SET_CONTROLBAR_USER_ROWS,\n    value: rows,\n});\n\n// thunks\n\nexport const tSetControlBarRows = () => async (dispatch, getState) => {\n    const onSuccess = rows => {\n        dispatch(acSetControlBarUserRows(rows));\n    };\n\n    const onError = error => {\n        console.log('Error (apiGetControlBarRows): ', error);\n        return error;\n    };\n\n    try {\n        const controlBarRows = await apiGetControlBarRows();\n        return onSuccess(controlBarRows);\n    } catch (err) {\n        return onError(err);\n    }\n};\n","import { FIXED_DIMENSIONS } from '@dhis2/analytics';\n\nexport const SET_DIMENSIONS = 'SET_DIMENSIONS';\nexport const DEFAULT_DIMENSIONS = {\n    pe: FIXED_DIMENSIONS.pe,\n    ou: FIXED_DIMENSIONS.ou,\n};\n\nexport default (state = DEFAULT_DIMENSIONS, action) => {\n    switch (action.type) {\n        case SET_DIMENSIONS: {\n            return {\n                ...DEFAULT_DIMENSIONS,\n                ...action.value,\n            };\n        }\n        default:\n            return state;\n    }\n};\n\nexport const sGetDimensions = state => state.dimensions;\n","export const SET_SETTINGS = 'SET_SETTINGS';\nexport const ADD_SETTINGS = 'ADD_SETTINGS';\n\nexport const DEFAULT_SETTINGS = {\n    keyDateFormat: 'yyyy-MM-dd',\n    keyAnalysisRelativePeriod: 'LAST_12_MONTHS',\n    keyAnalysisDigitGroupSeparator: 'SPACE',\n    displayNameProperty: 'displayName',\n    uiLocale: 'en',\n    rootOrganisationUnit: {},\n};\n\nexport default (state = DEFAULT_SETTINGS, action) => {\n    switch (action.type) {\n        case SET_SETTINGS: {\n            return Object.assign({}, action.value);\n        }\n        case ADD_SETTINGS: {\n            return {\n                ...state,\n                ...action.value,\n            };\n        }\n        default:\n            return state;\n    }\n};\n\n// Selectors\n\nexport const sGetSettings = state => state.settings;\n\nexport const sGetSettingsDisplayNameProperty = state =>\n    sGetSettings(state).displayNameProperty;\n\nexport const sGetRootOrgUnit = state =>\n    sGetSettings(state).rootOrganisationUnit;\n\nexport const sGetRelativePeriod = state =>\n    sGetSettings(state).keyAnalysisRelativePeriod;\n\nexport const sGetUiLocale = state => sGetSettings(state).uiLocale;\n","import keyBy from 'lodash/keyBy';\nimport sortBy from 'lodash/sortBy';\nimport { SET_DIMENSIONS } from '../reducers/dimensions';\nimport { apiFetchDimensions } from '@dhis2/analytics';\nimport { sGetSettingsDisplayNameProperty } from '../reducers/settings';\n\nexport const acSetDimensions = dimensions => ({\n    type: SET_DIMENSIONS,\n    value: keyBy(sortBy(dimensions, [d => d.name.toLowerCase()]), 'id'),\n});\n\nexport const tSetDimensions = d2 => async (dispatch, getState) => {\n    const onSuccess = dimensions => {\n        dispatch(acSetDimensions(dimensions));\n    };\n\n    const onError = error => {\n        console.log('Error (apiFetchDimensions): ', error);\n        return error;\n    };\n\n    try {\n        const displayNameProp = sGetSettingsDisplayNameProperty(getState());\n        const dimensions = await apiFetchDimensions(d2, displayNameProp);\n\n        // filter out CATEGORY that are not of type ATTRIBUTE\n        const filteredDimensions = dimensions.filter(\n            dim =>\n                dim.dimensionType !== 'CATEGORY' ||\n                (dim.dimensionType === 'CATEGORY' &&\n                    dim.dataDimensionType === 'ATTRIBUTE')\n        );\n        return onSuccess(filteredDimensions);\n    } catch (err) {\n        return onError(err);\n    }\n};\n","import React from 'react';\nimport i18n from '@dhis2/d2-i18n';\nimport { colors } from '@dhis2/ui-core';\nimport { withStyles } from '@material-ui/core/styles';\n\nexport const SHOWMORE_BAR_HEIGHT = 16;\n\nconst styles = {\n    showMore: {\n        color: colors.grey700,\n        cursor: 'pointer',\n        fontSize: 11,\n        paddingTop: 5,\n        '&:hover': {\n            textDecoration: 'underline',\n        },\n    },\n    disabled: {\n        paddingTop: 5,\n        color: colors.grey500,\n        fontSize: 11,\n        cursor: 'not-allowed',\n    },\n};\n\nexport const ShowMoreButton = ({ onClick, isMaxHeight, classes, disabled }) => {\n    return (\n        <div style={{ textAlign: 'center' }}>\n            {disabled ? (\n                <div className={classes.disabled}>{i18n.t('Show more')}</div>\n            ) : (\n                <div className={classes.showMore} onClick={onClick}>\n                    {isMaxHeight ? i18n.t('Show less') : i18n.t('Show more')}\n                </div>\n            )}\n        </div>\n    );\n};\n\nexport default withStyles(styles)(ShowMoreButton);\n","import { SHOWMORE_BAR_HEIGHT } from './ShowMoreButton';\n\nexport const CONTROL_BAR_ROW_HEIGHT = 40;\nexport const FIRST_ROW_PADDING_HEIGHT = 10;\nexport const MIN_ROW_COUNT = 1;\n\nexport const HEADERBAR_HEIGHT = 48;\n\nconst CONTROL_BAR_OUTER_HEIGHT_DIFF =\n    FIRST_ROW_PADDING_HEIGHT + SHOWMORE_BAR_HEIGHT - 2; // 2 pixel \"adjustment\"\n\nexport const getRowsHeight = rows => {\n    return rows * CONTROL_BAR_ROW_HEIGHT;\n};\n\nexport const getNumRowsFromHeight = height => {\n    return Math.floor(\n        (height - CONTROL_BAR_OUTER_HEIGHT_DIFF) / CONTROL_BAR_ROW_HEIGHT\n    );\n};\n\nexport const getTopOffset = rows => {\n    return HEADERBAR_HEIGHT + getControlBarHeight(rows, false);\n};\n\nexport const getControlBarHeight = rows => {\n    return getRowsHeight(rows) + CONTROL_BAR_OUTER_HEIGHT_DIFF;\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { colors } from '@dhis2/ui-core';\nimport { HEADERBAR_HEIGHT } from './controlBarDimensions';\n\nimport classes from './styles/ControlBar.module.css';\n\nconst DRAG_HANDLE_HEIGHT = 7;\n\nclass ControlBar extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            dragging: false,\n        };\n    }\n\n    onStartDrag = () => {\n        this.setState({ dragging: true });\n        window.addEventListener('mousemove', this.onDrag);\n        window.addEventListener('mouseup', this.onEndDrag);\n    };\n\n    onDrag = event => {\n        event.preventDefault();\n        event.stopPropagation();\n\n        const newHeight = event.clientY;\n\n        if (\n            this.props.onChangeHeight &&\n            newHeight !== this.props.height &&\n            newHeight > 0\n        ) {\n            requestAnimationFrame(() => {\n                this.props.onChangeHeight(newHeight);\n            });\n        }\n    };\n\n    onEndDrag = () => {\n        this.setState({ dragging: false });\n        window.removeEventListener('mousemove', this.onDrag);\n        window.removeEventListener('mouseup', this.onEndDrag);\n\n        if (this.props.onEndDrag) {\n            this.props.onEndDrag();\n        }\n    };\n\n    renderDragHandle() {\n        return typeof this.props.onChangeHeight === 'function' ? (\n            <div\n                className={classes.draghandle}\n                style={{ height: DRAG_HANDLE_HEIGHT }}\n                onMouseDown={this.onStartDrag}\n            />\n        ) : null;\n    }\n\n    render() {\n        const height = Math.max(this.props.height, 0) + DRAG_HANDLE_HEIGHT;\n\n        const rootStyle = Object.assign(\n            {\n                height,\n                top: HEADERBAR_HEIGHT,\n                backgroundColor: this.props.editMode\n                    ? colors.yellow050\n                    : colors.white,\n                paddingBottom: DRAG_HANDLE_HEIGHT,\n            },\n            // Disable animations while dragging\n            this.state.dragging ? { transition: 'none' } : {}\n        );\n\n        return (\n            <div style={rootStyle} className={classes.root}>\n                <div className={classes.content}>{this.props.children}</div>\n                {this.renderDragHandle()}\n            </div>\n        );\n    }\n}\n\nControlBar.propTypes = {\n    /**\n     * The height of the control bar in number of lines. Must be a positive integer.\n     */\n    height: PropTypes.number.isRequired,\n\n    /**\n     * If true, the background color of the control bar changes to indicate that edit mode is active.\n     */\n    editMode: PropTypes.bool.isRequired,\n\n    /**\n     * Callback function that is called when the control bar is resized.\n     * The callback receives one argument: The new height in pixels.\n     *\n     * If no callback is specified the control bar will not have a drag handle.\n     */\n    onChangeHeight: PropTypes.func,\n\n    /**\n     * Callback function that is called when the control bar is dropped after being dragged.\n     * The callback receives one argument: The new height in pixels.\n     *\n     * Ignored if no \"onChangeHeight\" function is provided.\n     */\n    onEndDrag: PropTypes.func,\n\n    /**\n     * The contents of the control bar.\n     */\n    children: PropTypes.node.isRequired,\n};\n\nControlBar.defaultProps = {\n    onChangeHeight: null,\n    onEndDrag: null,\n};\n\nexport default ControlBar;\n","import React from 'react';\n\nconst StarIcon = ({ className }) => (\n    <svg\n        className={className}\n        xmlns=\"http://www.w3.org/2000/svg\"\n        viewBox=\"0 0 24 24\"\n    >\n        <path d=\"M0 0h24v24H0z\" fill=\"none\" />\n        <path d=\"M12 17.27L18.18 21l-1.64-7.03L22 9.24l-7.19-.61L12 2 9.19 8.63 2 9.24l5.46 4.73L5.82 21z\" />\n        <path d=\"M0 0h24v24H0z\" fill=\"none\" />\n    </svg>\n);\n\nexport default StarIcon;\n","import { getInstance } from 'd2';\n\nexport const apiPostDataStatistics = async (eventType, id) => {\n    const d2 = await getInstance();\n    const url = `dataStatistics?eventType=${eventType}&favorite=${id}`;\n\n    d2.Api.getApi().post(url);\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport { Chip, colors } from '@dhis2/ui-core';\nimport { Link } from 'react-router-dom';\nimport debounce from 'lodash/debounce';\n\nimport StarIcon from '../../icons/Star';\nimport { apiPostDataStatistics } from '../../api/dataStatistics';\n\nconst styles = {\n    chip: {\n        margin: '3px',\n    },\n    link: {\n        color: colors.grey600,\n        display: 'inline-block',\n        textDecoration: 'none',\n        verticalAlign: 'top',\n    },\n    icon: {\n        height: '20px',\n        marginTop: '2px',\n        width: '20px',\n    },\n    selected: {\n        fill: colors.white,\n    },\n    unselected: {\n        fill: colors.grey700,\n    },\n};\n\nexport const DashboardItemChip = ({\n    starred,\n    selected,\n    label,\n    dashboardId,\n    classes,\n}) => {\n    const chipProps = {\n        selected,\n        className: classes.chip,\n    };\n\n    if (starred) {\n        const selectedState = selected ? classes.selected : classes.unselected;\n        chipProps.icon = (\n            <StarIcon className={`${classes.icon} ${selectedState}`} />\n        );\n    }\n\n    return (\n        <Link\n            className={classes.link}\n            to={`/${dashboardId}`}\n            onClick={debounce(\n                () => apiPostDataStatistics('DASHBOARD_VIEW', dashboardId),\n                500\n            )}\n        >\n            <Chip {...chipProps}>{label}</Chip>\n        </Link>\n    );\n};\n\nDashboardItemChip.propTypes = {\n    starred: PropTypes.bool.isRequired,\n    selected: PropTypes.bool.isRequired,\n    label: PropTypes.string.isRequired,\n    dashboardId: PropTypes.string.isRequired,\n};\n\nexport default withStyles(styles)(DashboardItemChip);\n","import React from 'react';\nimport { colors } from '@dhis2/ui-core';\n\nconst AddCircleIcon = () => (\n    <svg\n        xmlns=\"http://www.w3.org/2000/svg\"\n        width=\"32\"\n        height=\"32\"\n        fill={colors.teal600}\n        viewBox=\"0 0 24 24\"\n    >\n        <path d=\"M12 2C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2zm4 11h-3v3c0 .55-.45 1-1 1s-1-.45-1-1v-3H8c-.55 0-1-.45-1-1s.45-1 1-1h3V8c0-.55.45-1 1-1s1 .45 1 1v3h3c.55 0 1 .45 1 1s-.45 1-1 1z\" />\n    </svg>\n);\n\nexport default AddCircleIcon;\n","import React from 'react';\nimport { colors } from '@dhis2/ui-core';\n\nconst ClearIcon = ({ className }) => (\n    <svg\n        className={className}\n        fill={colors.grey800}\n        xmlns=\"http://www.w3.org/2000/svg\"\n        viewBox=\"0 0 24 24\"\n    >\n        <path d=\"M19 6.41L17.59 5 12 10.59 6.41 5 5 6.41 10.59 12 5 17.59 6.41 19 12 13.41 17.59 19 19 17.59 13.41 12z\" />\n        <path d=\"M0 0h24v24H0z\" fill=\"none\" />\n    </svg>\n);\n\nexport default ClearIcon;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport ClearIcon from '../../icons/Clear';\n\nimport classes from './styles/ClearButton.module.css';\n\nexport const ClearButton = ({ onClear }) => (\n    <button className={classes.button} onClick={onClear}>\n        <ClearIcon className={classes.icon} color=\"action\" />\n    </button>\n);\n\nClearButton.propTypes = {\n    onClear: PropTypes.func.isRequired,\n};\n\nexport default ClearButton;\n","import { combineReducers } from 'redux';\nimport { validateReducer } from '../modules/util';\n\nexport const SET_DASHBOARDS_FILTER_NAME = 'SET_DASHBOARDS_FILTER_NAME';\nexport const SET_DASHBOARDS_FILTER_OWNER = 'SET_DASHBOARDS_FILTER_OWNER';\nexport const SET_DASHBOARDS_FILTER_ORDER = 'SET_DASHBOARDS_FILTER_ORDER';\n\nexport const ownerData = [\n    { id: 'ALL', value: 'All users' },\n    { id: 'ME', value: 'Created by me' },\n    { id: 'OTHERS', value: 'Created by others' },\n];\n\nexport const orderData = [\n    { id: 'NAME:ASC', value: 'Name (asc)' },\n    { id: 'NAME:ASC', value: 'Name (desc)' },\n    { id: 'ITEMS:ASC', value: 'Number of items (asc)' },\n    { id: 'ITEMS:ASC', value: 'Number of items (desc)' },\n    { id: 'CREATED:ASC', value: 'Created date (asc)' },\n    { id: 'CREATED:ASC', value: 'Created date (desc)' },\n];\n\nexport const DEFAULT_STATE_DASHBOARDS_FILTER_NAME = '';\nexport const DEFAULT_STATE_DASHBOARDS_FILTER_OWNER = ownerData[0].id;\nexport const DEFAULT_STATE_DASHBOARDS_FILTER_ORDER = orderData[0].id;\n\nconst name = (state = DEFAULT_STATE_DASHBOARDS_FILTER_NAME, action) => {\n    switch (action.type) {\n        case SET_DASHBOARDS_FILTER_NAME:\n            return validateReducer(\n                action.value,\n                DEFAULT_STATE_DASHBOARDS_FILTER_NAME\n            );\n        default:\n            return state;\n    }\n};\n\nconst owner = (state = DEFAULT_STATE_DASHBOARDS_FILTER_OWNER, action) => {\n    switch (action.type) {\n        case SET_DASHBOARDS_FILTER_OWNER:\n            return validateReducer(\n                action.value,\n                DEFAULT_STATE_DASHBOARDS_FILTER_NAME\n            );\n        default:\n            return state;\n    }\n};\n\nconst order = (state = DEFAULT_STATE_DASHBOARDS_FILTER_ORDER, action) => {\n    switch (action.type) {\n        case SET_DASHBOARDS_FILTER_ORDER:\n            return validateReducer(\n                action.value,\n                DEFAULT_STATE_DASHBOARDS_FILTER_ORDER\n            );\n        default:\n            return state;\n    }\n};\n\nexport default combineReducers({\n    name,\n    owner,\n    order,\n});\n\n// selectors\n\nexport const sGetDashboardsFilterRoot = state => state.dashboardsFilter;\n\n// selector dependency level 2\n\nexport const sGetFilterName = state => sGetDashboardsFilterRoot(state).name;\nexport const sGetFilterOwner = state => sGetDashboardsFilterRoot(state).owner;\nexport const sGetFilterOrder = state => sGetDashboardsFilterRoot(state).order;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport i18n from '@dhis2/d2-i18n';\nimport InputField from '@material-ui/core/Input';\nimport InputAdornment from '@material-ui/core/InputAdornment';\nimport SearchIcon from '@material-ui/icons/Search';\nimport { colors } from '@dhis2/ui-core';\n\nimport ClearButton from './ClearButton';\nimport { DEFAULT_STATE_DASHBOARDS_FILTER_NAME } from '../../reducers/dashboardsFilter';\n\nexport const KEYCODE_ENTER = 13;\nexport const KEYCODE_ESCAPE = 27;\n\nconst styles = {\n    filterField: {\n        fontSize: '14px',\n        width: '200px',\n        height: '30px',\n        top: '-4px',\n    },\n    searchIcon: {\n        color: colors.grey700,\n        width: '20px',\n        height: '20px',\n    },\n};\n\nexport class Filter extends Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            value: DEFAULT_STATE_DASHBOARDS_FILTER_NAME,\n        };\n    }\n\n    componentWillReceiveProps(nextProps) {\n        this.setState({\n            value: nextProps.name,\n        });\n    }\n\n    setFilterValue = event => {\n        event.preventDefault();\n\n        this.props.onChangeName(event.target.value);\n    };\n\n    handleKeyUp = event => {\n        switch (event.keyCode) {\n            case KEYCODE_ENTER:\n                this.props.onKeypressEnter();\n                break;\n            case KEYCODE_ESCAPE:\n                this.props.onChangeName();\n                break;\n            default:\n                break;\n        }\n    };\n\n    render() {\n        const { classes, name, onChangeName } = this.props;\n\n        const startAdornment = (\n            <InputAdornment position=\"start\">\n                <SearchIcon className={classes.searchIcon} />\n            </InputAdornment>\n        );\n\n        const endAdornment =\n            name !== '' && name !== null ? (\n                <InputAdornment position=\"end\">\n                    <ClearButton onClear={() => onChangeName()} />\n                </InputAdornment>\n            ) : null;\n\n        return (\n            <InputField\n                className={classes.filterField}\n                placeholder={i18n.t('Search for a dashboard')}\n                startAdornment={startAdornment}\n                endAdornment={endAdornment}\n                value={this.state.value}\n                onChange={this.setFilterValue}\n                onKeyUp={this.handleKeyUp}\n            />\n        );\n    }\n}\n\nFilter.propTypes = {\n    name: PropTypes.string,\n    onChangeName: PropTypes.func,\n};\n\nFilter.defaultProps = {\n    name: '',\n    onChangeName: Function.prototype,\n};\n\nexport default withStyles(styles)(Filter);\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { Link, withRouter } from 'react-router-dom';\nimport ControlBar from './ControlBar';\nimport arraySort from 'd2-utilizr/lib/arraySort';\n\nimport Chip from './DashboardItemChip';\nimport AddCircleIcon from '../../icons/AddCircle';\nimport Filter from './Filter';\nimport ShowMoreButton from './ShowMoreButton';\nimport {\n    FIRST_ROW_PADDING_HEIGHT,\n    MIN_ROW_COUNT,\n    getRowsHeight,\n    getControlBarHeight,\n    getNumRowsFromHeight,\n} from './controlBarDimensions';\nimport { sGetControlBarUserRows } from '../../reducers/controlBar';\nimport { sGetAllDashboards } from '../../reducers/dashboards';\nimport { sGetFilterName } from '../../reducers/dashboardsFilter';\nimport { sGetSelectedId } from '../../reducers/selected';\nimport { acSetControlBarUserRows } from '../../actions/controlBar';\nimport { acSetFilterName } from '../../actions/dashboardsFilter';\nimport { orObject, orArray } from '../../modules/util';\nimport { apiPostControlBarRows } from '../../api/controlBar';\n\nimport classes from './styles/DashboardsBar.module.css';\n\nexport const MAX_ROW_COUNT = 10;\n\nexport class DashboardsBar extends Component {\n    state = {\n        rows: MIN_ROW_COUNT,\n    };\n\n    setInitialDashboardState = rows => {\n        this.setState({ rows, isMaxHeight: rows === MAX_ROW_COUNT });\n    };\n\n    componentDidMount() {\n        this.setInitialDashboardState(this.props.userRows);\n    }\n\n    componentWillReceiveProps(nextProps) {\n        this.setInitialDashboardState(nextProps.userRows);\n    }\n\n    onChangeHeight = newHeight => {\n        const adjustedHeight = newHeight - 52; // don't rush the transition to a bigger row count\n        const newRows = Math.max(\n            MIN_ROW_COUNT,\n            getNumRowsFromHeight(adjustedHeight)\n        );\n\n        if (newRows !== this.state.rows) {\n            const newRowCount = Math.min(newRows, MAX_ROW_COUNT);\n\n            this.props.onChangeHeight(newRowCount);\n        }\n    };\n\n    onEndDrag = () => {\n        return apiPostControlBarRows(this.state.rows);\n    };\n\n    onToggleMaxHeight = () => {\n        const rows =\n            this.state.rows === MAX_ROW_COUNT\n                ? this.props.userRows\n                : MAX_ROW_COUNT;\n\n        this.setState({ rows, isMaxHeight: !this.state.isMaxHeight });\n    };\n\n    onSelectDashboard = () => {\n        this.props.history.push(`/${this.props.dashboards[0].id}`);\n    };\n\n    render() {\n        const { dashboards, name, selectedId, onChangeFilterName } = this.props;\n\n        const rowCount = this.state.isMaxHeight\n            ? MAX_ROW_COUNT\n            : this.state.rows;\n        const controlBarHeight = getControlBarHeight(rowCount);\n        const contentWrapperStyle = {\n            padding: `${FIRST_ROW_PADDING_HEIGHT}px 6px 0 6px`,\n            overflowY: this.state.isMaxHeight ? 'auto' : 'hidden',\n            height: getRowsHeight(rowCount) + FIRST_ROW_PADDING_HEIGHT,\n        };\n\n        return (\n            <ControlBar\n                height={controlBarHeight}\n                onChangeHeight={this.onChangeHeight}\n                onEndDrag={this.onEndDrag}\n                editMode={false}\n            >\n                <div style={contentWrapperStyle}>\n                    <div className={classes.leftControls}>\n                        <Link\n                            style={{\n                                display: 'inline-block',\n                                textDecoration: 'none',\n                                marginRight: 10,\n                            }}\n                            to={'/new'}\n                        >\n                            <AddCircleIcon />\n                        </Link>\n                        <Filter\n                            name={name}\n                            onChangeName={onChangeFilterName}\n                            onKeypressEnter={this.onSelectDashboard}\n                        />\n                    </div>\n                    {orArray(dashboards).map(dashboard => (\n                        <Chip\n                            key={dashboard.id}\n                            label={dashboard.displayName}\n                            starred={dashboard.starred}\n                            dashboardId={dashboard.id}\n                            selected={dashboard.id === selectedId}\n                        />\n                    ))}\n                </div>\n                <ShowMoreButton\n                    onClick={this.onToggleMaxHeight}\n                    isMaxHeight={this.state.isMaxHeight}\n                    disabled={this.props.userRows === MAX_ROW_COUNT}\n                />\n            </ControlBar>\n        );\n    }\n}\n\nconst mapStateToProps = state => ({\n    dashboards: sGetAllDashboards(state),\n    name: sGetFilterName(state),\n    userRows: sGetControlBarUserRows(state),\n    selectedId: sGetSelectedId(state),\n});\n\nconst mapDispatchToProps = {\n    onChangeHeight: acSetControlBarUserRows,\n    onChangeFilterName: acSetFilterName,\n};\nconst mergeProps = (stateProps, dispatchProps, ownProps) => {\n    const dashboards = Object.values(orObject(stateProps.dashboards));\n    const displayDashboards = arraySort(\n        dashboards.filter(d =>\n            d.displayName.toLowerCase().includes(stateProps.name.toLowerCase())\n        ),\n        'ASC',\n        'displayName'\n    );\n\n    return {\n        ...stateProps,\n        ...ownProps,\n        ...dispatchProps,\n        dashboards: [\n            ...displayDashboards.filter(d => d.starred),\n            ...displayDashboards.filter(d => !d.starred),\n        ],\n    };\n};\n\nexport default withRouter(\n    connect(\n        mapStateToProps,\n        mapDispatchToProps,\n        mergeProps\n    )(DashboardsBar)\n);\n","import {\n    SET_DASHBOARDS_FILTER_NAME,\n    SET_DASHBOARDS_FILTER_OWNER,\n    SET_DASHBOARDS_FILTER_ORDER,\n} from '../reducers/dashboardsFilter';\n\n// actions\n\nexport const acSetFilterName = value => ({\n    type: SET_DASHBOARDS_FILTER_NAME,\n    value,\n});\n\nexport const acSetFilterOwner = value => ({\n    type: SET_DASHBOARDS_FILTER_OWNER,\n    value,\n});\n\nexport const acSetFilterOrder = value => ({\n    type: SET_DASHBOARDS_FILTER_ORDER,\n    value,\n});\n","import React from 'react';\nimport { connect } from 'react-redux';\n\nimport {\n    getTopOffset,\n    MIN_ROW_COUNT,\n} from '../ControlBar/controlBarDimensions';\nimport { sGetControlBarUserRows } from '../../reducers/controlBar';\n\nconst DashboardVerticalOffset = props => {\n    const rows = props.editMode ? MIN_ROW_COUNT : props.userRows;\n    const marginTop = getTopOffset(rows);\n\n    return <div className=\"page-container-top-margin\" style={{ marginTop }} />;\n};\n\nconst mapStateToProps = state => ({\n    userRows: sGetControlBarUserRows(state),\n});\n\nexport default connect(mapStateToProps)(DashboardVerticalOffset);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { MenuItem, colors } from '@dhis2/ui-core';\n\nconst HeaderMenuItem = ({ title }) => (\n    <MenuItem\n        dense\n        key={title}\n        disabled\n        label={\n            <p style={{ color: colors.grey800, fontWeight: '600' }}>{title}</p>\n        }\n    />\n);\n\nHeaderMenuItem.propTypes = {\n    title: PropTypes.string.isRequired,\n};\n\nexport default HeaderMenuItem;\n","import React from 'react';\nimport { colors } from '@dhis2/ui-core';\n\nconst LaunchIcon = ({ className }) => (\n    <svg\n        className={className}\n        xmlns=\"http://www.w3.org/2000/svg\"\n        width=\"12\"\n        height=\"12\"\n        fill={colors.grey600}\n        viewBox=\"0 0 24 24\"\n    >\n        <path d=\"M0 0h24v24H0z\" fill=\"none\" />\n        <path d=\"M19 19H5V5h7V3H5c-1.11 0-2 .9-2 2v14c0 1.1.89 2 2 2h14c1.1 0 2-.9 2-2v-7h-2v7zM14 3v2h3.59l-9.83 9.83 1.41 1.41L19 6.41V10h2V3h-7z\" />\n    </svg>\n);\n\nexport default LaunchIcon;\n","import React from 'react';\nimport { MenuItem, colors } from '@dhis2/ui-core';\nimport i18n from '@dhis2/d2-i18n';\n\nimport { getItemIcon } from '../../modules/itemTypes';\nimport LaunchIcon from '../../icons/Launch';\n\nimport classes from './styles/ContentMenuItem.module.css';\n\nconst LaunchLink = ({ url }) => (\n    <a\n        onClick={e => e.stopPropagation()}\n        className={classes.launchLink}\n        target=\"_blank\"\n        rel=\"noopener noreferrer\"\n        href={url}\n    >\n        <LaunchIcon />\n    </a>\n);\n\nconst InsertButton = () => (\n    <button className={classes.buttonInsert}>{i18n.t('Insert')}</button>\n);\n\nconst ContentMenuItem = ({ type, name, onInsert, url }) => {\n    const ItemIcon = getItemIcon(type);\n\n    return (\n        <MenuItem\n            dense\n            onClick={onInsert}\n            label={\n                <div className={classes.menuItem}>\n                    <div className={classes.label}>\n                        <ItemIcon\n                            style={{ margin: '6px', fill: colors.grey600 }}\n                        />\n                        <span>{name}</span>\n                        {url ? <LaunchLink url={url} /> : null}\n                    </div>\n                    <InsertButton />\n                </div>\n            }\n        />\n    );\n};\n\nexport default ContentMenuItem;\n","import i18n from '@dhis2/d2-i18n';\nimport {\n    spacerContent,\n    REPORT_TABLE,\n    CHART,\n    MAP,\n    EVENT_CHART,\n    EVENT_REPORT,\n    USERS,\n    REPORTS,\n    RESOURCES,\n    APP,\n    MESSAGES,\n    TEXT,\n    SPACER,\n} from '../../modules/itemTypes';\n\nexport const singleItems = [\n    {\n        id: 'additional',\n        header: i18n.t('Additional items'),\n        items: [\n            {\n                type: TEXT,\n                name: i18n.t('Text box'),\n                content: '',\n            },\n            {\n                type: MESSAGES,\n                name: i18n.t('Messages'),\n                content: 'true',\n            },\n            {\n                type: SPACER,\n                name: i18n.t('Spacer'),\n                content: spacerContent,\n            },\n        ],\n    },\n];\n\n// categorizedItems are grouped in the item selector menu\nexport const categorizedItems = [\n    REPORT_TABLE,\n    CHART,\n    MAP,\n    EVENT_REPORT,\n    EVENT_CHART,\n    USERS,\n    REPORTS,\n    RESOURCES,\n    APP,\n];\n\n// listItemTypes are included in a single dashboard item\nexport const listItemTypes = [REPORTS, RESOURCES, USERS];\n","import React, { Component, Fragment } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport i18n from '@dhis2/d2-i18n';\nimport { MenuItem, Divider } from '@dhis2/ui-core';\n\nimport HeaderMenuItem from './HeaderMenuItem';\nimport ContentMenuItem from './ContentMenuItem';\n\nimport { tAddListItemContent } from './actions';\nimport { acAddDashboardItem } from '../../actions/editDashboard';\nimport { getItemUrl, APP } from '../../modules/itemTypes';\nimport { categorizedItems, listItemTypes } from './selectableItems';\n\nimport classes from './styles/CategorizedMenuGroup.module.css';\n\nclass CategorizedMenuGroup extends Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            seeMore: false,\n        };\n    }\n\n    addItem = item => () => {\n        const { type, acAddDashboardItem, tAddListItemContent } = this.props;\n\n        if (type === APP) {\n            acAddDashboardItem({ type, content: item.key });\n        } else {\n            const newItem = {\n                id: item.id,\n                name: item.displayName || item.name,\n            };\n\n            if (listItemTypes.includes(type)) {\n                tAddListItemContent(type, newItem);\n            } else {\n                acAddDashboardItem({ type, content: newItem });\n            }\n        }\n    };\n\n    toggleSeeMore = () => {\n        this.setState({ seeMore: !this.state.seeMore });\n\n        this.props.onChangeItemsLimit(this.props.type);\n    };\n\n    render() {\n        const { title, type, items, hasMore } = this.props;\n        return (\n            <Fragment>\n                <HeaderMenuItem title={title} />\n                {items.map(item => {\n                    const itemUrl = getItemUrl(type, item, this.context.d2);\n                    return (\n                        <ContentMenuItem\n                            key={item.id || item.key}\n                            type={type}\n                            name={item.displayName || item.name}\n                            onInsert={this.addItem(item)}\n                            url={itemUrl}\n                        />\n                    );\n                })}\n                {hasMore ? (\n                    <MenuItem\n                        dense\n                        key={`showmore${title}`}\n                        onClick={this.toggleSeeMore}\n                        label={\n                            <button className={classes.showMoreButton}>\n                                {this.state.seeMore\n                                    ? i18n.t('Show fewer')\n                                    : i18n.t('Show more')}\n                            </button>\n                        }\n                    />\n                ) : null}\n                <Divider margin=\"8px 0px\" />\n            </Fragment>\n        );\n    }\n}\n\nCategorizedMenuGroup.propTypes = {\n    type: PropTypes.oneOf(categorizedItems).isRequired,\n    title: PropTypes.string.isRequired,\n    items: PropTypes.array.isRequired,\n    onChangeItemsLimit: PropTypes.func.isRequired,\n};\n\nCategorizedMenuGroup.contextTypes = {\n    d2: PropTypes.object.isRequired,\n};\n\nexport default connect(\n    null,\n    {\n        acAddDashboardItem,\n        tAddListItemContent,\n    }\n)(CategorizedMenuGroup);\n","import { sGetEditDashboardRoot } from '../../reducers/editDashboard';\nimport { itemTypeMap } from '../../modules/itemTypes';\nimport {\n    acAddDashboardItem,\n    acUpdateDashboardItem,\n} from '../../actions/editDashboard';\n\nexport const tAddListItemContent = (type, content) => (dispatch, getState) => {\n    const state = getState();\n    const listItemType = itemTypeMap[type].propName;\n    const dashboardItems = sGetEditDashboardRoot(state).dashboardItems;\n    const dashboardItemIndex = dashboardItems.findIndex(\n        item => item.type === type\n    );\n    let dashboardItem;\n\n    // Reports/Resources/Users dashboard item type already present in dashboard\n    if (dashboardItemIndex > -1) {\n        dashboardItem = dashboardItems[dashboardItemIndex];\n        dashboardItem[listItemType].push(content);\n\n        dispatch(acUpdateDashboardItem(dashboardItem));\n    } else {\n        dashboardItem = {\n            type: type,\n            content: [content],\n        };\n\n        dispatch(acAddDashboardItem(dashboardItem));\n    }\n};\n","import React, { Fragment } from 'react';\nimport { connect } from 'react-redux';\n\nimport HeaderMenuItem from './HeaderMenuItem';\nimport ContentMenuItem from './ContentMenuItem';\nimport { acAddDashboardItem } from '../../actions/editDashboard';\n\nexport const SinglesMenuGroup = ({ acAddDashboardItem, category }) => {\n    const addToDashboard = ({ type, content }) => () => {\n        acAddDashboardItem({ type, content });\n    };\n\n    return (\n        <Fragment>\n            <HeaderMenuItem title={category.header} />\n            {category.items.map(item => (\n                <ContentMenuItem\n                    key={item.type}\n                    type={item.type}\n                    name={item.name}\n                    onInsert={addToDashboard(item)}\n                />\n            ))}\n        </Fragment>\n    );\n};\n\nexport default connect(\n    null,\n    { acAddDashboardItem }\n)(SinglesMenuGroup);\n","import React, { Fragment } from 'react';\nimport PropTypes from 'prop-types';\nimport i18n from '@dhis2/d2-i18n';\nimport Popover from '@material-ui/core/Popover';\nimport { InputField, Menu } from '@dhis2/ui-core';\n\nimport CategorizedMenuGroup from './CategorizedMenuGroup';\nimport SinglesMenuGroup from './SinglesMenuGroup';\nimport { singleItems, categorizedItems } from './selectableItems';\nimport { itemTypeMap } from '../../modules/itemTypes';\n\nimport './styles/ItemSelector.css';\n\nconst ItemSearchField = props => (\n    <InputField\n        filled\n        name=\"Dashboard item search\"\n        label={i18n.t('Search for items to add to this dashboard')}\n        type=\"text\"\n        onChange={props.onChange}\n        onFocus={props.onFocus}\n        value={props.value}\n    />\n);\n\nclass ItemSelector extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            anchorEl: null,\n            open: false,\n            maxOptions: new Set(),\n            items: undefined,\n            filter: '',\n        };\n    }\n\n    closeList = () => {\n        this.setState({ open: false, filter: '' });\n    };\n\n    openList = event => {\n        this.fetchItems();\n\n        this.setState({\n            anchorEl: event.currentTarget,\n            open: true,\n        });\n    };\n\n    setFilter = event => {\n        this.setState({ filter: event.target.value }, this.fetchItems);\n    };\n\n    getCategorizedMenuGroups = () =>\n        categorizedItems\n            .filter(type => {\n                const itemType = itemTypeMap[type];\n                return (\n                    this.state.items && this.state.items[itemType.endPointName]\n                );\n            })\n            .map(type => {\n                const itemType = itemTypeMap[type];\n                const allItems = this.state.items[itemType.endPointName];\n                const hasMore = allItems.length > 5;\n                const items = this.state.maxOptions.has(itemType.id)\n                    ? allItems\n                    : allItems.slice(0, 5);\n\n                return (\n                    <CategorizedMenuGroup\n                        key={type}\n                        type={type}\n                        title={itemType.pluralTitle}\n                        items={items}\n                        onChangeItemsLimit={this.fetchItems}\n                        hasMore={hasMore}\n                    />\n                );\n            });\n\n    getSinglesMenuGroups = () =>\n        singleItems.map(category => (\n            <SinglesMenuGroup key={category.id} category={category} />\n        ));\n\n    getMenuGroups = () =>\n        this.getCategorizedMenuGroups().concat(this.getSinglesMenuGroups());\n\n    fetchItems = async type => {\n        if (type) {\n            const maxOptions = this.state.maxOptions;\n\n            if (maxOptions.has(type)) {\n                maxOptions.delete(type);\n            } else {\n                maxOptions.add(type);\n            }\n\n            this.setState({ maxOptions });\n        } else {\n            this.setState({\n                maxOptions: new Set(),\n            });\n        }\n\n        let queryString = '?count=6';\n        if ([...this.state.maxOptions.values()].length) {\n            queryString +=\n                '&max=' + [...this.state.maxOptions.values()].join('&max=');\n        }\n\n        const filter = this.state.filter ? `/${this.state.filter}` : '';\n\n        this.context.d2.Api.getApi()\n            .get(`dashboards/q${filter}${queryString}`)\n            .then(response => this.setState({ items: response }))\n            .catch(console.error);\n    };\n\n    render() {\n        return (\n            <Fragment>\n                <ItemSearchField\n                    value={this.state.filter}\n                    onChange={this.setFilter}\n                    onFocus={this.openList}\n                />\n                <Popover\n                    className=\"dashboard-item-selector\"\n                    open={this.state.open}\n                    onClose={this.closeList}\n                    anchorEl={this.state.anchorEl}\n                    anchorOrigin={{ horizontal: 'left', vertical: 'bottom' }}\n                    transformOrigin={{ horizontal: 'left', vertical: 'top' }}\n                    style={{ height: '70vh' }}\n                    PaperProps={{ style: { width: '700px' } }}\n                    disableAutoFocus={true}\n                    disableRestoreFocus={true}\n                >\n                    <Menu>{this.getMenuGroups()}</Menu>\n                </Popover>\n            </Fragment>\n        );\n    }\n}\n\nItemSelector.contextTypes = {\n    d2: PropTypes.object.isRequired,\n};\n\nexport default ItemSelector;\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport i18n from '@dhis2/d2-i18n';\nimport MuiInputField from '@material-ui/core/TextField';\nimport { InputField } from '@dhis2/ui-core';\n\nimport ItemSelector from '../ItemSelector/ItemSelector';\nimport {\n    acSetDashboardTitle,\n    acSetDashboardDescription,\n} from '../../actions/editDashboard';\nimport { orObject } from '../../modules/util';\nimport { sGetEditDashboardRoot } from '../../reducers/editDashboard';\n\nconst styles = {\n    section: { display: 'flex', justifyContent: 'space-between' },\n    titleDescription: {\n        flex: '3',\n        marginRight: '50px',\n    },\n    title: {\n        display: 'block',\n        clear: 'both',\n    },\n    description: {\n        display: 'block',\n        clear: 'both',\n        marginTop: '15px',\n    },\n    underline: {\n        '&::before': {\n            borderBottom: `none`,\n        },\n        '&:hover::before': {\n            borderBottom: `none!important`,\n        },\n    },\n    input: {\n        backgroundColor: 'rgba(0, 0, 10, 0.05)',\n        borderRadius: '4px',\n        width: '100%',\n        '&:hover': {\n            backgroundColor: 'rgba(0, 0, 10, 0.08)',\n        },\n    },\n    itemSelector: {\n        flex: '2',\n        position: 'relative',\n    },\n};\n\nexport const EditTitleBar = ({\n    name,\n    description,\n    onChangeTitle,\n    onChangeDescription,\n    classes,\n}) => {\n    const updateTitle = e => {\n        onChangeTitle(e.target.value);\n    };\n\n    const updateDescription = e => {\n        onChangeDescription(e.target.value);\n    };\n\n    return (\n        <section className={classes.section}>\n            <div className={classes.titleDescription}>\n                <InputField\n                    className={classes.title}\n                    filled\n                    name=\"Dashboard title input\"\n                    label={i18n.t('Dashboard title')}\n                    type=\"text\"\n                    onChange={updateTitle}\n                    value={name}\n                />\n                <MuiInputField\n                    className={classes.description}\n                    name=\"Dashboard description input\"\n                    label={i18n.t('Dashboard description')}\n                    onChange={updateDescription}\n                    value={description}\n                    variant=\"filled\"\n                    multiline\n                    InputProps={{\n                        classes: {\n                            root: classes.input,\n                            underline: classes.underline,\n                        },\n                    }}\n                />\n            </div>\n            <div className={classes.itemSelector}>\n                <ItemSelector />\n            </div>\n        </section>\n    );\n};\n\nconst mapStateToProps = state => {\n    const selectedDashboard = orObject(sGetEditDashboardRoot(state));\n\n    return {\n        name: selectedDashboard.name,\n        description: selectedDashboard.description,\n    };\n};\n\nconst mapDispatchToProps = {\n    onChangeTitle: acSetDashboardTitle,\n    onChangeDescription: acSetDashboardDescription,\n};\n\nexport default connect(\n    mapStateToProps,\n    mapDispatchToProps\n)(withStyles(styles)(EditTitleBar));\n\nEditTitleBar.propTypes = {\n    name: PropTypes.string,\n    description: PropTypes.string,\n    onChangeTitle: PropTypes.func.isRequired,\n    onChangeDescription: PropTypes.func.isRequired,\n};\n\nEditTitleBar.defaultProps = {\n    name: '',\n    description: '',\n};\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nimport { Button } from '@dhis2/ui-core';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\n\nimport i18n from '@dhis2/d2-i18n';\n\nimport {\n    PeriodDimension,\n    DynamicDimension,\n    OrgUnitDimension,\n    FIXED_DIMENSIONS,\n} from '@dhis2/analytics';\n\nconst peId = FIXED_DIMENSIONS.pe.id;\nconst ouId = FIXED_DIMENSIONS.ou.id;\n\nclass FilterDialog extends Component {\n    onConfirm = id => () => this.props.onConfirm(id);\n\n    dialogContent() {\n        const { displayNameProperty, dimension, selectedItems } = this.props;\n        const dialogId = dimension.id;\n\n        const commonProps = {\n            d2: this.context.d2,\n            onSelect: this.props.onSelect,\n            onDeselect: this.props.onDeselect,\n            onReorder: this.props.onReorder,\n        };\n\n        switch (dialogId) {\n            case peId: {\n                return (\n                    <PeriodDimension\n                        selectedPeriods={selectedItems}\n                        {...commonProps}\n                    />\n                );\n            }\n            case ouId:\n                return (\n                    <OrgUnitDimension\n                        displayNameProperty={displayNameProperty}\n                        ouItems={selectedItems}\n                        {...commonProps}\n                    />\n                );\n            default:\n                return (\n                    <DynamicDimension\n                        selectedItems={selectedItems}\n                        dialogId={dialogId}\n                        dialogTitle={dimension.name}\n                        {...commonProps}\n                    />\n                );\n        }\n    }\n\n    render() {\n        const { dimension, onClose } = this.props;\n        const dialogId = dimension.id;\n\n        return (\n            <Dialog\n                open={!!dialogId}\n                maxWidth=\"lg\"\n                disableEnforceFocus\n                onClose={onClose}\n            >\n                {dialogId && this.dialogContent()}\n                <DialogActions>\n                    <Button kind=\"secondary\" onClick={onClose}>\n                        {i18n.t('Cancel')}\n                    </Button>\n                    <Button kind=\"primary\" onClick={this.onConfirm(dialogId)}>\n                        {i18n.t('Confirm')}\n                    </Button>\n                </DialogActions>\n            </Dialog>\n        );\n    }\n}\n\nFilterDialog.propTypes = {\n    displayNameProperty: PropTypes.string,\n    dimension: PropTypes.object,\n    selectedItems: PropTypes.array,\n    onSelect: PropTypes.func,\n    onDeselect: PropTypes.func,\n    onReorder: PropTypes.func,\n    onClose: PropTypes.func,\n    onConfirm: PropTypes.func,\n};\n\nFilterDialog.contextTypes = {\n    d2: PropTypes.object,\n};\n\nexport default FilterDialog;\n","export const SET_ACTIVE_MODAL_DIMENSION = 'SET_ACTIVE_MODAL_DIMENSION';\nexport const CLEAR_ACTIVE_MODAL_DIMENSION = 'CLEAR_ACTIVE_MODAL_DIMENSION';\n\nexport const DEFAULT_STATE_ACTIVE_MODAL_DIMENSION = {};\n\nexport default (state = DEFAULT_STATE_ACTIVE_MODAL_DIMENSION, action) => {\n    switch (action.type) {\n        case SET_ACTIVE_MODAL_DIMENSION: {\n            return action.value;\n        }\n        case CLEAR_ACTIVE_MODAL_DIMENSION: {\n            return DEFAULT_STATE_ACTIVE_MODAL_DIMENSION;\n        }\n        default:\n            return state;\n    }\n};\n\nexport const sGetActiveModalDimension = state => state.activeModalDimension;\n","import {\n    SET_ACTIVE_MODAL_DIMENSION,\n    CLEAR_ACTIVE_MODAL_DIMENSION,\n} from '../reducers/activeModalDimension';\n\nexport const acSetActiveModalDimension = value => ({\n    type: SET_ACTIVE_MODAL_DIMENSION,\n    value,\n});\n\nexport const acClearActiveModalDimension = () => ({\n    type: CLEAR_ACTIVE_MODAL_DIMENSION,\n});\n","import React, { Component, Fragment } from 'react';\nimport { connect } from 'react-redux';\nimport Popover from '@material-ui/core/Popover';\nimport ArrowDropDownIcon from '@material-ui/icons/ArrowDropDown';\nimport { withTheme } from '@material-ui/core/styles';\n\nimport i18n from '@dhis2/d2-i18n';\nimport { DimensionsPanel } from '@dhis2/analytics';\n\nimport { Button } from '@dhis2/ui-core';\nimport FilterDialog from './FilterDialog';\n\nimport { sGetSettingsDisplayNameProperty } from '../../reducers/settings';\nimport { sGetActiveModalDimension } from '../../reducers/activeModalDimension';\nimport { sGetDimensions } from '../../reducers/dimensions';\nimport { sGetFiltersKeys } from '../../reducers/itemFilters';\nimport { sGetEditItemFiltersRoot } from '../../reducers/editItemFilters';\nimport { acAddItemFilter, acRemoveItemFilter } from '../../actions/itemFilters';\nimport {\n    acRemoveEditItemFilter,\n    acSetEditItemFilters,\n} from '../../actions/editItemFilters';\nimport {\n    acClearActiveModalDimension,\n    acSetActiveModalDimension,\n} from '../../actions/activeModalDimension';\n\nclass FilterSelector extends Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            anchorEl: null,\n        };\n    }\n\n    openPanel = event => {\n        this.setState({ anchorEl: event.currentTarget });\n    };\n\n    closePanel = () => {\n        this.setState({ anchorEl: null });\n    };\n\n    closeDialog = () => {\n        this.setState({ anchorEl: null });\n\n        this.props.clearActiveModalDimension();\n    };\n\n    selectDimension = id => {\n        this.props.setActiveModalDimension({\n            id,\n            name: this.props.dimensions[id].name,\n        });\n    };\n\n    onSelectItems = ({ dimensionId, items }) => {\n        this.props.setEditItemFilters({\n            ...this.props.selectedItems,\n            [dimensionId]: items,\n        });\n    };\n\n    onDeselectItems = ({ dimensionId, itemIdsToRemove }) => {\n        const oldList = this.props.selectedItems[dimensionId] || [];\n        const newList = oldList.filter(\n            item => !itemIdsToRemove.includes(item.id)\n        );\n\n        if (newList.length) {\n            this.props.setEditItemFilters({\n                ...this.props.selectedItems,\n                [dimensionId]: newList,\n            });\n        } else {\n            this.props.removeEditItemFilter(dimensionId);\n        }\n    };\n\n    onReorderItems = ({ dimensionId, itemIds }) => {\n        const oldList = this.props.selectedItems[dimensionId] || [];\n        const reorderedList = itemIds.map(id =>\n            oldList.find(item => item.id === id)\n        );\n\n        this.props.setEditItemFilters({\n            ...this.props.selectedItems,\n            [dimensionId]: reorderedList,\n        });\n    };\n\n    saveFilter = id => {\n        const filterItems = this.props.selectedItems[id];\n\n        if (filterItems && filterItems.length) {\n            this.props.addItemFilter({\n                id,\n                value: [...filterItems],\n            });\n        } else {\n            this.props.removeItemFilter(id);\n        }\n\n        this.closeDialog();\n    };\n\n    render() {\n        const {\n            theme,\n            displayNameProperty,\n            dimension,\n            dimensions,\n            selectedDimensions,\n            selectedItems,\n        } = this.props;\n\n        return (\n            <Fragment>\n                <Button onClick={this.openPanel}>\n                    {i18n.t('Add filter')}\n                    <ArrowDropDownIcon />\n                </Button>\n                <Popover\n                    open={Boolean(this.state.anchorEl)}\n                    anchorEl={this.state.anchorEl}\n                    anchorOrigin={{ vertical: 'bottom', horizontal: 'left' }}\n                    onClose={this.closePanel}\n                    style={{\n                        height: '100%',\n                        fontFamily: theme.typography.fontFamily,\n                    }}\n                >\n                    <DimensionsPanel\n                        dimensions={dimensions}\n                        onDimensionClick={this.selectDimension}\n                        selectedIds={selectedDimensions}\n                    />\n                </Popover>\n                {dimension ? (\n                    <FilterDialog\n                        displayNameProperty={displayNameProperty}\n                        dimension={dimension}\n                        selectedItems={selectedItems[dimension.id] || []}\n                        onSelect={this.onSelectItems}\n                        onDeselect={this.onDeselectItems}\n                        onReorder={this.onReorderItems}\n                        onClose={this.closeDialog}\n                        onConfirm={this.saveFilter}\n                    />\n                ) : null}\n            </Fragment>\n        );\n    }\n}\n\nconst mapStateToProps = state => ({\n    displayNameProperty: sGetSettingsDisplayNameProperty(state),\n    dimension: sGetActiveModalDimension(state),\n    dimensions: sGetDimensions(state),\n    selectedDimensions: sGetFiltersKeys(state),\n    selectedItems: sGetEditItemFiltersRoot(state),\n});\n\nexport default connect(\n    mapStateToProps,\n    {\n        clearActiveModalDimension: acClearActiveModalDimension,\n        setActiveModalDimension: acSetActiveModalDimension,\n        addItemFilter: acAddItemFilter,\n        removeItemFilter: acRemoveItemFilter,\n        removeEditItemFilter: acRemoveEditItemFilter,\n        setEditItemFilters: acSetEditItemFilters,\n    }\n)(withTheme()(FilterSelector));\n","import React, { Component } from 'react';\nimport InfoOutlineIcon from '@material-ui/icons/InfoOutlined';\nimport { colors } from '@dhis2/ui-core';\n\nclass Info extends Component {\n    show = false;\n\n    toggle() {\n        this.show = !this.show;\n        return this.show;\n    }\n\n    render() {\n        return (\n            <div onClick={() => this.props.onClick(this.toggle())}>\n                <InfoOutlineIcon style={{ fill: colors.grey600 }} />\n            </div>\n        );\n    }\n}\n\nexport default Info;\n","import React, { Component, Fragment } from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport { Link } from 'react-router-dom';\nimport i18n from '@dhis2/d2-i18n';\nimport SharingDialog from '@dhis2/d2-ui-sharing-dialog';\nimport Star from '@material-ui/icons/Star';\nimport StarBorder from '@material-ui/icons/StarBorder';\n\nimport { orObject } from '../../modules/util';\nimport { tStarDashboard } from '../../actions/dashboards';\nimport { acSetSelectedShowDescription } from '../../actions/selected';\nimport FilterSelector from '../ItemFilter/FilterSelector';\nimport { Button } from '@dhis2/ui-core';\nimport Info from './Info';\nimport {\n    sGetSelectedId,\n    sGetSelectedShowDescription,\n} from '../../reducers/selected';\nimport {\n    sGetDashboardById,\n    sGetDashboardItems,\n} from '../../reducers/dashboards';\nimport { colors } from '@dhis2/ui-core';\n\nconst NO_DESCRIPTION = i18n.t('No description');\n\nconst styles = {\n    actions: {\n        display: 'flex',\n        alignItems: 'center',\n        marginLeft: '20px',\n    },\n    starIcon: {\n        fill: colors.grey600,\n    },\n    textButton: {\n        minWidth: '30px',\n        top: '1px',\n    },\n    editLink: {\n        display: 'inline-block',\n        verticalAlign: 'top',\n        textDecoration: 'none',\n        marginRight: '4px',\n    },\n    titleBar: {\n        display: 'flex',\n        alignItems: 'flex-start',\n    },\n    titleBarIcon: {\n        marginLeft: 5,\n        position: 'relative',\n        top: 1,\n        cursor: 'pointer',\n    },\n};\n\nclass ViewTitleBar extends Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            sharingDialogIsOpen: false,\n        };\n    }\n\n    toggleSharingDialog = () =>\n        this.setState({ sharingDialogIsOpen: !this.state.sharingDialogIsOpen });\n\n    render() {\n        const {\n            id,\n            name,\n            description,\n            access,\n            style,\n            showDescription,\n            starred,\n            onStarClick,\n            onInfoClick,\n            classes,\n        } = this.props;\n\n        const titleStyle = Object.assign({}, style.title, {\n            cursor: 'default',\n            userSelect: 'text',\n            top: '7px',\n        });\n\n        const StarIcon = starred ? Star : StarBorder;\n\n        return (\n            <Fragment>\n                <div className={classes.titleBar}>\n                    <span style={titleStyle}>{name}</span>\n                    <div className={classes.actions}>\n                        <div\n                            className={classes.titleBarIcon}\n                            onClick={onStarClick}\n                        >\n                            <StarIcon className={classes.starIcon} />\n                        </div>\n                        <div className={classes.titleBarIcon}>\n                            <Info onClick={onInfoClick} />\n                        </div>\n                        <div style={{ marginLeft: '10px' }}>\n                            {access.update ? (\n                                <Link\n                                    className={classes.editLink}\n                                    to={`/${id}/edit`}\n                                >\n                                    <Button>{i18n.t('Edit')}</Button>\n                                </Link>\n                            ) : null}\n                            {access.manage ? (\n                                <span style={{ marginRight: '4px' }}>\n                                    <Button onClick={this.toggleSharingDialog}>\n                                        {i18n.t('Share')}\n                                    </Button>\n                                </span>\n                            ) : null}\n                            <span style={{ marginRight: '4px' }}>\n                                <FilterSelector />\n                            </span>\n                        </div>\n                    </div>\n                </div>\n                {showDescription ? (\n                    <div\n                        className=\"dashboard-description\"\n                        style={Object.assign(\n                            { paddingTop: '5px', paddingBottom: '5px' },\n                            style.description,\n                            !description ? { color: '#888' } : {}\n                        )}\n                    >\n                        {description || NO_DESCRIPTION}\n                    </div>\n                ) : null}\n                {id ? (\n                    <SharingDialog\n                        d2={this.context.d2}\n                        id={id}\n                        type=\"dashboard\"\n                        open={this.state.sharingDialogIsOpen}\n                        onRequestClose={this.toggleSharingDialog}\n                    />\n                ) : null}\n            </Fragment>\n        );\n    }\n}\n\nconst mapStateToProps = state => {\n    const id = sGetSelectedId(state);\n    const dashboard = orObject(sGetDashboardById(state, id));\n\n    return {\n        id,\n        name: dashboard.displayName,\n        description: dashboard.displayDescription,\n        dashboardItems: sGetDashboardItems(state),\n        showDescription: sGetSelectedShowDescription(state),\n        starred: dashboard.starred,\n        access: orObject(dashboard.access),\n    };\n};\n\nconst mergeProps = (stateProps, dispatchProps, ownProps) => {\n    const { id, starred, showDescription } = stateProps;\n    const { dispatch } = dispatchProps;\n\n    return {\n        ...stateProps,\n        ...ownProps,\n        onStarClick: () => dispatch(tStarDashboard(id, !starred)),\n        onInfoClick: () =>\n            dispatch(acSetSelectedShowDescription(!showDescription)),\n    };\n};\n\nexport default connect(\n    mapStateToProps,\n    null,\n    mergeProps\n)(withStyles(styles)(ViewTitleBar));\n\nViewTitleBar.propTypes = {\n    id: PropTypes.string,\n    name: PropTypes.string,\n    description: PropTypes.string,\n    starred: PropTypes.bool,\n    showDescription: PropTypes.bool,\n    onInfoClick: PropTypes.func,\n};\n\nViewTitleBar.defaultProps = {\n    name: '',\n    description: '',\n    starred: false,\n    showDescription: false,\n    onInfoClick: null,\n};\n\nViewTitleBar.contextTypes = {\n    d2: PropTypes.object,\n};\n","import React from 'react';\n\nimport { colors } from '@dhis2/ui-core';\nimport EditTitleBar from './EditTitleBar';\nimport ViewTitleBar from './ViewTitleBar';\n\nimport './TitleBar.css';\n\nconst style = {\n    title: {\n        position: 'relative',\n        fontSize: 21,\n        fontWeight: 500,\n        color: colors.black,\n        minWidth: 50,\n    },\n    description: {\n        fontSize: 14,\n        color: colors.grey800,\n    },\n};\n\nconst TitleBar = ({ edit }) => {\n    return (\n        <div\n            className=\"titlebar-wrapper\"\n            style={{\n                padding: '20px 15px 5px 10px',\n            }}\n        >\n            {edit ? (\n                <EditTitleBar style={style} />\n            ) : (\n                <ViewTitleBar style={style} />\n            )}\n        </div>\n    );\n};\n\nexport default TitleBar;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nimport i18n from '@dhis2/d2-i18n';\n\nimport * as pluginManager from './plugin';\nimport { getBaseUrl, orObject } from '../../../modules/util';\nimport { getGridItemDomId } from '../../ItemGrid/gridUtil';\n\nconst pluginCredentials = d2 => {\n    return {\n        baseUrl: getBaseUrl(d2),\n        auth: d2.Api.getApi().defaultHeaders.Authorization,\n    };\n};\n\nclass DefaultPlugin extends Component {\n    pluginCredentials = null;\n\n    constructor(props, context) {\n        super(props);\n\n        this.d2 = context.d2;\n    }\n\n    shouldPluginReload = prevProps => {\n        // TODO - fix this hack, to handle bug with multiple\n        // rerendering while switching between dashboards.\n        //\n        // To determine if the rendering is happening because of a\n        // dashboard switch, check if the item reference has changed.\n        const reloadAllowed = this.props.item === prevProps.item;\n\n        const filtersChanged = prevProps.itemFilters !== this.props.itemFilters;\n        const vis = orObject(this.props.visualization);\n        const prevVis = orObject(prevProps.visualization);\n        const visChanged =\n            vis.id !== prevVis.id || vis.activeType !== prevVis.activeType;\n\n        return reloadAllowed && (visChanged || filtersChanged);\n    };\n\n    reloadPlugin = prevProps => {\n        if (\n            pluginManager.pluginIsAvailable(\n                this.props.item,\n                this.props.visualization\n            ) &&\n            this.shouldPluginReload(prevProps)\n        ) {\n            const prevVis = orObject(prevProps.visualization);\n            const currentVis = this.props.visualization;\n\n            const useActiveType =\n                currentVis.activeType !== prevVis.activeType ||\n                currentVis.activeType !== this.props.item.type;\n\n            if (\n                useActiveType ||\n                this.props.itemFilters !== prevProps.itemFilters\n            ) {\n                pluginManager.unmount(\n                    this.props.item,\n                    prevVis.activeType || this.props.item.type\n                );\n\n                pluginManager.load(\n                    this.props.item,\n                    this.props.visualization,\n                    this.pluginCredentials,\n                    useActiveType ? currentVis.activeType : null\n                );\n            }\n        }\n    };\n\n    componentDidMount() {\n        this.pluginCredentials = pluginCredentials(this.d2);\n\n        if (\n            pluginManager.pluginIsAvailable(\n                this.props.item,\n                this.props.visualization\n            )\n        ) {\n            pluginManager.load(\n                this.props.item,\n                this.props.visualization,\n                this.pluginCredentials,\n                !this.props.editMode ? this.getActiveType() : null\n            );\n        }\n    }\n\n    componentDidUpdate(prevProps) {\n        this.reloadPlugin(prevProps);\n    }\n\n    getActiveType = () =>\n        this.props.visualization.activeType || this.props.item.type;\n\n    render() {\n        const { classes, item, visualization, style } = this.props;\n        const pluginIsAvailable = pluginManager.pluginIsAvailable(\n            item,\n            visualization\n        );\n\n        return pluginIsAvailable ? (\n            <div id={getGridItemDomId(item.id)} style={style} />\n        ) : (\n            <div className={classes.textDiv}>\n                {i18n.t('Unable to load the plugin for this item')}\n            </div>\n        );\n    }\n}\n\nDefaultPlugin.contextTypes = {\n    d2: PropTypes.object,\n};\n\nDefaultPlugin.propTypes = {\n    style: PropTypes.object,\n    item: PropTypes.object,\n    itemFilters: PropTypes.object,\n    visualization: PropTypes.object,\n};\n\nDefaultPlugin.defaultProps = {\n    style: {},\n    item: {},\n    itemFilters: {},\n    visualization: {},\n};\n\nexport default DefaultPlugin;\n","import React from 'react';\n\nexport const HEADER_HEIGHT = 45;\n\nconst ItemHeader = props => {\n    const { title, actionButtons, editMode } = props;\n\n    return (\n        <div className=\"dashboard-item-header\">\n            <div\n                className=\"dashboard-item-header-title\"\n                style={{ userSelect: editMode ? 'none' : 'text' }}\n            >\n                {title}\n            </div>\n            {actionButtons}\n        </div>\n    );\n};\n\nexport default ItemHeader;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { colors } from '@dhis2/ui-core';\nimport { getId } from './plugin';\nimport InterpretationsComponent from '@dhis2/d2-ui-interpretations';\n\nconst style = {\n    scrollContainer: {\n        overflowY: 'auto',\n        height: '340px',\n    },\n    line: {\n        margin: '-1px 0px 0px',\n        height: '1px',\n        border: 'none',\n        backgroundColor: colors.grey100,\n    },\n};\n\nclass ItemFooter extends Component {\n    render() {\n        const objectId = getId(this.props.item);\n\n        return (\n            <div className=\"dashboard-item-footer\">\n                <hr style={style.line} />\n                <div style={style.scrollContainer}>\n                    <InterpretationsComponent\n                        d2={this.context.d2}\n                        item={this.props.item}\n                        type={this.props.item.type.toLowerCase()}\n                        id={objectId}\n                        appName=\"dashboard\"\n                    />\n                </div>\n            </div>\n        );\n    }\n}\n\nItemFooter.contextTypes = {\n    d2: PropTypes.object.isRequired,\n};\n\nItemFooter.propTypes = {\n    item: PropTypes.object.isRequired,\n};\n\nexport default ItemFooter;\n","import React from 'react';\n\nimport './ItemHeaderButton.css';\n\nconst ItemHeaderButton = ({ disabled, onClick, children, style }) => {\n    return (\n        <button\n            disabled={disabled}\n            type=\"button\"\n            className=\"item-action-button\"\n            style={style}\n            onClick={onClick}\n        >\n            {children}\n        </button>\n    );\n};\n\nexport default ItemHeaderButton;\n","import React, { Component, Fragment } from 'react';\nimport MessageIcon from '@material-ui/icons/Message';\nimport TableIcon from '@material-ui/icons/ViewList';\nimport ChartIcon from '@material-ui/icons/InsertChart';\nimport MapIcon from '@material-ui/icons/Public';\n\nimport { extractFavorite } from './plugin';\nimport ItemHeaderButton from '../ItemHeaderButton';\nimport {\n    VISUALIZATION_TYPE_TABLE,\n    VISUALIZATION_TYPE_CHART,\n    VISUALIZATION_TYPE_MAP,\n    itemTypeMap,\n    CHART,\n    MAP,\n    REPORT_TABLE,\n    EVENT_CHART,\n    EVENT_REPORT,\n    DOMAIN_TYPE_AGGREGATE,\n    CHART_TYPE_SINGLE_VALUE,\n} from '../../../modules/itemTypes';\nimport { colors, theme } from '@dhis2/ui-core';\n\nconst style = {\n    iconBase: {\n        width: '24px',\n        height: '24px',\n        fill: colors.grey500,\n    },\n    buttonBase: {\n        padding: '5px 6px 3px 6px',\n    },\n    buttonDisabled: {\n        padding: '5px 6px 3px 6px',\n        opacity: 0.5,\n        cursor: 'unset',\n    },\n    toggleFooterPadding: {\n        padding: '7px 6px 1px 6px',\n    },\n    border: {\n        borderRadius: '2px',\n        border: `1px solid ${colors.grey200}`,\n    },\n};\n\nconst baseStyle = {\n    icon: style.iconBase,\n    container: style.buttonBase,\n};\n\nconst disabledStyle = {\n    icon: style.iconBase,\n    container: style.buttonDisabled,\n};\n\nconst activeStyle = {\n    icon: { ...style.iconBase, fill: theme.primary800 },\n    container: {\n        ...style.buttonBase,\n        backgroundColor: theme.primary100,\n    },\n};\n\nconst inactiveStyle = disabled => (disabled ? disabledStyle : baseStyle);\n\nconst tableBtnStyle = (activeType, disabled) =>\n    [REPORT_TABLE, EVENT_REPORT].includes(activeType)\n        ? activeStyle\n        : inactiveStyle(disabled);\n\nconst chartBtnStyle = (activeType, disabled) =>\n    [CHART, EVENT_CHART].includes(activeType)\n        ? activeStyle\n        : inactiveStyle(disabled);\n\nconst mapBtnStyle = (activeType, disabled) =>\n    [MAP].includes(activeType) ? activeStyle : inactiveStyle(disabled);\n\nexport const getItemTypeId = (itemTypeMap, visualizationType, domainType) => {\n    const item = Object.values(itemTypeMap).find(\n        item =>\n            item.visualizationType === visualizationType &&\n            item.domainType === domainType\n    );\n    return item.id;\n};\n\n// TODO: Import this from @dhis2/analytics when available\nconst isSingleValue = (itemType, chartType) =>\n    itemType === VISUALIZATION_TYPE_CHART &&\n    chartType === CHART_TYPE_SINGLE_VALUE;\n\nclass VisualizationItemHeaderButtons extends Component {\n    renderInterpretationButton() {\n        const { activeFooter, onToggleFooter } = this.props;\n\n        const toggleFooterBase = activeFooter ? activeStyle : baseStyle;\n\n        const toggleFooter = {\n            ...toggleFooterBase,\n            container: {\n                ...toggleFooterBase.container,\n                ...style.toggleFooterPadding,\n                ...style.border,\n            },\n        };\n\n        return (\n            <Fragment>\n                <ItemHeaderButton\n                    style={toggleFooter.container}\n                    onClick={onToggleFooter}\n                >\n                    <MessageIcon style={toggleFooter.icon} />\n                </ItemHeaderButton>\n            </Fragment>\n        );\n    }\n\n    renderVisualizationButtons() {\n        const {\n            item,\n            visualization,\n            onSelectVisualization,\n            activeType,\n        } = this.props;\n\n        if (isSingleValue(item.type, visualization.type)) {\n            return null;\n        }\n\n        const domainType = itemTypeMap[item.type].domainType;\n\n        const onViewTable = () =>\n            onSelectVisualization(\n                getItemTypeId(itemTypeMap, VISUALIZATION_TYPE_TABLE, domainType)\n            );\n\n        const onViewChart = () =>\n            onSelectVisualization(\n                getItemTypeId(itemTypeMap, VISUALIZATION_TYPE_CHART, domainType)\n            );\n\n        const onViewMap = () =>\n            onSelectVisualization(\n                getItemTypeId(itemTypeMap, VISUALIZATION_TYPE_MAP, domainType)\n            );\n\n        // disable toggle buttons\n        let disabled = false;\n\n        if (item.type === VISUALIZATION_TYPE_CHART) {\n            if (extractFavorite(item).type.match(/^YEAR_OVER_YEAR/)) {\n                disabled = true;\n            }\n        }\n\n        const tableButtonStyle = tableBtnStyle(activeType, disabled);\n        const chartButtonStyle = chartBtnStyle(activeType, disabled);\n        const mapButtonStyle = mapBtnStyle(activeType, disabled);\n\n        return (\n            <div style={{ marginLeft: 10 }}>\n                <div style={style.border}>\n                    <ItemHeaderButton\n                        disabled={disabled}\n                        style={tableButtonStyle.container}\n                        onClick={onViewTable}\n                    >\n                        <TableIcon style={tableButtonStyle.icon} />\n                    </ItemHeaderButton>\n                    <ItemHeaderButton\n                        disabled={disabled}\n                        style={chartButtonStyle.container}\n                        onClick={onViewChart}\n                    >\n                        <ChartIcon style={chartButtonStyle.icon} />\n                    </ItemHeaderButton>\n                    {domainType === DOMAIN_TYPE_AGGREGATE ? (\n                        <ItemHeaderButton\n                            disabled={disabled}\n                            style={mapButtonStyle.container}\n                            onClick={onViewMap}\n                        >\n                            <MapIcon style={mapButtonStyle.icon} />\n                        </ItemHeaderButton>\n                    ) : null}\n                </div>\n            </div>\n        );\n    }\n\n    render() {\n        return (\n            <Fragment>\n                {this.renderInterpretationButton()}\n                {this.renderVisualizationButtons()}\n            </Fragment>\n        );\n    }\n}\n\nexport default VisualizationItemHeaderButtons;\n","// Note that this ignores discrepancies in 'this', so shouldn't be used with bound functions\n// This is useful instead of lodash/memoize when we only need to memoize a single value\n// Inspiration: https://github.com/alexreardon/memoize-one\n\nconst memoizeOne = fn => {\n    let lastArgs = undefined;\n    let lastValue = undefined;\n\n    return (...args) => {\n        if (\n            lastArgs &&\n            args.length === lastArgs.length &&\n            args.every((arg, i) => arg === lastArgs[i])\n        ) {\n            return lastValue;\n        }\n        lastArgs = args;\n        lastValue = fn(...args);\n        return lastValue;\n    };\n};\n\nexport default memoizeOne;\n","import React, { Component, Fragment } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { withStyles } from '@material-ui/core/styles';\nimport LaunchIcon from '@material-ui/icons/Launch';\nimport ChartPlugin from '@dhis2/data-visualizer-plugin';\n\nimport i18n from '@dhis2/d2-i18n';\nimport uniqueId from 'lodash/uniqueId';\n\nimport DefaultPlugin from './DefaultPlugin';\nimport ItemHeader, { HEADER_HEIGHT } from '../ItemHeader';\nimport ItemFooter from './ItemFooter';\nimport VisualizationItemHeaderButtons from './ItemHeaderButtons';\nimport * as pluginManager from './plugin';\nimport { sGetVisualization } from '../../../reducers/visualizations';\nimport { sGetItemFiltersRoot } from '../../../reducers/itemFilters';\nimport {\n    acReceivedVisualization,\n    acReceivedActiveVisualization,\n} from '../../../actions/selected';\nimport { CHART, MAP, itemTypeMap } from '../../../modules/itemTypes';\nimport { colors } from '@dhis2/ui-core';\nimport memoizeOne from '../../../modules/memoizeOne';\nimport { getVisualizationConfig } from './plugin';\n\nconst styles = {\n    icon: {\n        width: 16,\n        height: 16,\n        marginLeft: 3,\n        cursor: 'pointer',\n        fill: colors.grey600,\n    },\n    title: {\n        overflow: 'hidden',\n        maxWidth: '85%',\n        textOverflow: 'ellipsis',\n        whiteSpace: 'nowrap',\n    },\n    textDiv: {\n        fontSize: '14px',\n        fontStretch: 'normal',\n        padding: '10px',\n        lineHeight: '20px',\n    },\n};\n\nconst applyFilters = (visualization, filters) => {\n    if (!Object.keys(filters).length) {\n        return visualization;\n    }\n\n    // deep clone objects in filters to avoid changing the visualization in the Redux store\n    const visRows = visualization.rows.map(obj => ({ ...obj }));\n    const visColumns = visualization.columns.map(obj => ({ ...obj }));\n    const visFilters = visualization.filters.map(obj => ({ ...obj }));\n\n    Object.keys(filters).forEach(dimensionId => {\n        if (filters[dimensionId]) {\n            let dimensionFound = false;\n\n            [visRows, visColumns, visFilters].forEach(dimensionObjects =>\n                dimensionObjects\n                    .filter(obj => obj.dimension === dimensionId)\n                    .forEach(obj => {\n                        dimensionFound = true;\n                        obj.items = filters[dimensionId];\n                    })\n            );\n\n            // add dimension to filters if not already present elsewhere\n            if (!dimensionFound) {\n                visFilters.push({\n                    dimension: dimensionId,\n                    items: filters[dimensionId],\n                });\n            }\n        }\n    });\n\n    return {\n        ...visualization,\n        rows: visRows,\n        columns: visColumns,\n        filters: visFilters,\n    };\n};\n\nexport class Item extends Component {\n    state = {\n        showFooter: false,\n        configLoaded: false,\n    };\n\n    constructor(props, context) {\n        super(props);\n\n        this.d2 = context.d2;\n\n        this.contentRef = React.createRef();\n    }\n\n    async componentDidMount() {\n        this.props.onVisualizationLoaded(\n            // TODO do not call fetch on the pluginManager, do it here as the manager will eventually be removed...\n            await pluginManager.fetch(this.props.item)\n        );\n\n        this.setState({\n            configLoaded: true,\n        });\n    }\n\n    getUniqueKey = memoizeOne(() => uniqueId());\n\n    pluginCredentials = null;\n\n    getPluginComponent = () => {\n        const visualization = getVisualizationConfig(\n            this.props.visualization,\n            this.props.item.type,\n            this.getActiveType()\n        );\n\n        if (!visualization) {\n            return (\n                <div className={this.props.classes.textDiv}>\n                    {i18n.t('No data to display')}\n                </div>\n            );\n        }\n\n        const props = {\n            ...this.props,\n            visualization,\n            style: this.getContentStyle(),\n        };\n\n        switch (this.getActiveType()) {\n            case CHART: {\n                return (\n                    <ChartPlugin\n                        d2={this.d2}\n                        config={applyFilters(\n                            props.visualization,\n                            props.itemFilters\n                        )}\n                        forDashboard={true}\n                        style={props.style}\n                    />\n                );\n            }\n            case MAP: {\n                if (props.item.type === MAP) {\n                    // apply filters only to thematic and event layers\n                    // for maps AO\n                    const mapViews = props.visualization.mapViews.map(obj => {\n                        if (\n                            obj.layer.includes('thematic') ||\n                            obj.layer.includes('event')\n                        ) {\n                            return applyFilters(obj, props.itemFilters);\n                        }\n\n                        return obj;\n                    });\n\n                    props.visualization = {\n                        ...props.visualization,\n                        mapViews,\n                    };\n                } else {\n                    // this is the case of a non map AO passed to the maps plugin\n                    // due to a visualization type switch in dashboard item\n                    // maps plugin takes care of converting the AO to a suitable format\n                    props.visualization = applyFilters(\n                        props.visualization,\n                        props.itemFilters\n                    );\n                }\n\n                return <DefaultPlugin {...props} />;\n            }\n            default: {\n                props.visualization = applyFilters(\n                    props.visualization,\n                    props.itemFilters\n                );\n\n                return <DefaultPlugin {...props} />;\n            }\n        }\n    };\n\n    onToggleFooter = () => {\n        this.setState(\n            { showFooter: !this.state.showFooter },\n            this.props.onToggleItemExpanded(this.props.item.id)\n        );\n    };\n\n    onSelectVisualization = activeType => {\n        // Cancel request if type is already active\n        if (activeType === this.getActiveType()) {\n            return;\n        }\n\n        pluginManager.unmount(this.props.item, this.getActiveType());\n\n        this.props.onSelectVisualization(\n            this.props.visualization.id,\n            this.props.item.type,\n            activeType\n        );\n    };\n\n    getActiveType = () =>\n        this.props.visualization.activeType || this.props.item.type;\n\n    pluginIsAvailable = () =>\n        pluginManager.pluginIsAvailable(\n            this.props.item,\n            this.props.visualization\n        );\n\n    getTitle = () => {\n        const { item, editMode, classes } = this.props;\n        const itemName = pluginManager.getName(item);\n\n        return (\n            <div style={{ display: 'flex' }}>\n                <span className={classes.title} title={itemName}>\n                    {itemName}\n                </span>\n                {!editMode && this.pluginIsAvailable() ? (\n                    <a\n                        href={pluginManager.getLink(this.props.item, this.d2)}\n                        style={{ height: 16 }}\n                        title={`View in ${\n                            itemTypeMap[this.props.item.type].appName\n                        } app`}\n                    >\n                        <LaunchIcon className={classes.icon} />\n                    </a>\n                ) : null}\n            </div>\n        );\n    };\n\n    getActionButtons = () =>\n        pluginManager.pluginIsAvailable(\n            this.props.item,\n            this.props.visualization\n        ) && !this.props.editMode ? (\n            <VisualizationItemHeaderButtons\n                item={this.props.item}\n                visualization={this.props.visualization}\n                activeFooter={this.state.showFooter}\n                activeType={this.getActiveType()}\n                onSelectVisualization={this.onSelectVisualization}\n                onToggleFooter={this.onToggleFooter}\n            />\n        ) : null;\n\n    getContentStyle = () => {\n        const { item, editMode } = this.props;\n        const PADDING_BOTTOM = 4;\n\n        return !editMode\n            ? {\n                  height: item.originalHeight - HEADER_HEIGHT - PADDING_BOTTOM,\n              }\n            : { height: this.contentRef.offsetHeight };\n    };\n\n    render() {\n        const { item, editMode, itemFilters } = this.props;\n        const { showFooter } = this.state;\n\n        return (\n            <Fragment>\n                <ItemHeader\n                    title={this.getTitle()}\n                    actionButtons={this.getActionButtons()}\n                    editMode={editMode}\n                />\n                <div\n                    key={this.getUniqueKey(itemFilters)}\n                    className=\"dashboard-item-content\"\n                    ref={ref => (this.contentRef = ref)}\n                >\n                    {this.state.configLoaded && this.getPluginComponent()}\n                </div>\n                {!editMode && showFooter ? <ItemFooter item={item} /> : null}\n            </Fragment>\n        );\n    }\n}\n\nItem.contextTypes = {\n    d2: PropTypes.object,\n};\n\nItem.propTypes = {\n    item: PropTypes.object,\n    editMode: PropTypes.bool,\n    onToggleItemExpanded: PropTypes.func,\n    itemFilters: PropTypes.object,\n    visualization: PropTypes.object,\n};\n\nItem.defaultProps = {\n    item: {},\n    editMode: false,\n    onToggleItemExpanded: Function.prototype,\n    itemFilters: {},\n    visualization: {},\n};\n\nconst mapStateToProps = (state, ownProps) => ({\n    itemFilters: sGetItemFiltersRoot(state),\n    visualization: sGetVisualization(\n        state,\n        pluginManager.extractFavorite(ownProps.item).id\n    ),\n});\n\nconst mapDispatchToProps = dispatch => ({\n    onVisualizationLoaded: visualization =>\n        dispatch(acReceivedVisualization(visualization)),\n    onSelectVisualization: (id, type, activeType) =>\n        dispatch(acReceivedActiveVisualization(id, type, activeType)),\n});\n\nexport default connect(\n    mapStateToProps,\n    mapDispatchToProps\n)(withStyles(styles)(Item));\n","import React from 'react';\nimport { colors } from '@dhis2/ui-core';\n\nconst style = {\n    backgroundColor: colors.grey200,\n    border: 'none',\n    height: '1px',\n    margin: '0px 0px 5px 0px',\n};\n\nconst Line = props => <hr style={style} />;\n\nexport default Line;\n","import React, { Component, Fragment } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport i18n from '@dhis2/d2-i18n';\n\nimport { sGetMessagesRoot } from '../../../reducers/messages';\nimport { formatDate } from '../../../modules/util';\nimport { colors } from '@dhis2/ui-core';\nimport ItemHeader from '../ItemHeader';\nimport Line from '../../../widgets/Line';\n\nimport './MessagesItem.css';\n\nconst PRIVATE = 'PRIVATE';\n\nconst messageTypes = {\n    [PRIVATE]: 'Private',\n    VALIDATION_RESULT: 'Validation',\n    TICKET: 'Ticket',\n    SYSTEM: 'System',\n};\n\nconst style = {\n    list: {\n        listStyleType: 'none',\n        paddingLeft: '0px',\n    },\n    seeAll: {\n        textAlign: 'center',\n        fontSize: '13px',\n        marginBottom: '5px',\n    },\n    sender: {\n        fontSize: '13px',\n        lineHeight: '15px',\n        margin: 0,\n        color: colors.grey800,\n    },\n    snippet: {\n        color: colors.grey800,\n        fontSize: '13px',\n        lineHeight: '15px',\n        maxHeight: '30px',\n        overflow: 'hidden',\n    },\n};\n\nclass MessagesItem extends Component {\n    state = {\n        uiLocale: '',\n    };\n\n    async componentDidMount() {\n        const uiLocale = await this.context.d2.currentUser.userSettings.get(\n            'keyUiLocale'\n        );\n\n        this.setState({ uiLocale });\n    }\n\n    getMessageHref = msg => {\n        const msgIdentifier = msg ? `#/${msg.messageType}/${msg.id}` : '';\n        return `${this.context.baseUrl}/dhis-web-messaging/${msgIdentifier}`;\n    };\n\n    getMessageSender = msg => {\n        const latestMsg = msg.messages.slice(-1)[0];\n        return latestMsg.sender ? latestMsg.sender.displayName : '';\n    };\n\n    getMessageItems = () => {\n        const editClass = !this.props.editMode ? 'view' : null;\n\n        return this.props.messages.map(msg => {\n            const redirectToMsg = () => {\n                if (!this.props.editMode) {\n                    document.location.href = this.getMessageHref(msg);\n                }\n            };\n\n            const sender =\n                msg.messageType === PRIVATE\n                    ? this.getMessageSender(msg)\n                    : messageTypes[msg.messageType];\n\n            const readClass = !msg.read ? 'unread' : null;\n            const latestMsg = msg.messages.slice(-1)[0];\n            const msgDate = latestMsg.lastUpdated;\n\n            return (\n                <li\n                    className={`message-item ${editClass}`}\n                    key={msg.id}\n                    onClick={redirectToMsg}\n                >\n                    <p className={`message-title ${readClass}`}>\n                        {msg.displayName} ({msg.messageCount})\n                    </p>\n                    <p style={style.sender}>\n                        {sender} - {formatDate(msgDate, this.state.uiLocale)}\n                    </p>\n                    <p style={style.snippet}>{latestMsg.text}</p>\n                </li>\n            );\n        });\n    };\n\n    render() {\n        return (\n            <Fragment>\n                <ItemHeader title={i18n.t('Messages')} />\n                <Line />\n                {this.props.messages.length > 0 && (\n                    <div className=\"dashboard-item-content\">\n                        <ul style={style.list}>{this.getMessageItems()}</ul>\n                        <div style={style.seeAll}>\n                            <a href={this.getMessageHref()}>\n                                {i18n.t('See all messages')}\n                            </a>\n                        </div>\n                    </div>\n                )}\n            </Fragment>\n        );\n    }\n}\n\nMessagesItem.contextTypes = {\n    d2: PropTypes.object,\n    baseUrl: PropTypes.string,\n};\n\nconst mapStateToProps = state => {\n    return {\n        messages: Object.values(sGetMessagesRoot(state)),\n    };\n};\n\nconst MessagesContainer = connect(\n    mapStateToProps,\n    null\n)(MessagesItem);\n\nexport default MessagesContainer;\n","import React, { Fragment } from 'react';\nimport ItemHeader from '../ItemHeader';\nimport NotInterestedIcon from '@material-ui/icons/NotInterested';\n\nconst NotSupportedItem = props => (\n    <Fragment>\n        <ItemHeader title={`Item type not supported: ${props.item.type}`} />\n        <div\n            style={{\n                display: 'flex',\n                justifyContent: 'center',\n                alignItems: 'center',\n                height: '90%',\n            }}\n        >\n            <NotInterestedIcon\n                style={{ width: 100, height: 100, align: 'center' }}\n                color=\"disabled\"\n            />\n        </div>\n    </Fragment>\n);\n\nexport default NotSupportedItem;\n","import React from 'react';\nimport { colors } from '@dhis2/ui-core';\n\nconst DescriptionIcon = ({ className }) => (\n    <svg\n        className={className}\n        xmlns=\"http://www.w3.org/2000/svg\"\n        viewBox=\"0 0 24 24\"\n        fill={colors.grey500}\n    >\n        <path d=\"M0 0h24v24H0z\" fill=\"none\" />\n        <path d=\"M14 2H6c-1.1 0-1.99.9-1.99 2L4 20c0 1.1.89 2 1.99 2H18c1.1 0 2-.9 2-2V8l-6-6zm2 16H8v-2h8v2zm0-4H8v-2h8v2zm-3-5V3.5L18.5 9H13z\" />\n    </svg>\n);\n\nexport default DescriptionIcon;\n","import React from 'react';\nimport { colors } from '@dhis2/ui-core';\n\nconst DeleteIcon = ({ className }) => (\n    <svg\n        className={className}\n        xmlns=\"http://www.w3.org/2000/svg\"\n        width=\"18\"\n        height=\"18\"\n        viewBox=\"0 0 24 24\"\n        fill={colors.red500}\n    >\n        <path d=\"M6 19c0 1.1.9 2 2 2h8c1.1 0 2-.9 2-2V7H6v12zM19 4h-3.5l-1-1h-5l-1 1H5v2h14V4z\" />\n        <path d=\"M0 0h24v24H0z\" fill=\"none\" />\n    </svg>\n);\n\nexport default DeleteIcon;\n","import React, { Fragment } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { colors } from '@dhis2/ui-core';\nimport DescriptionIcon from '../../../icons/Description';\n\nimport DeleteIcon from '../../../icons/Delete';\nimport Line from '../../../widgets/Line';\nimport { itemTypeMap, getItemUrl } from '../../../modules/itemTypes';\nimport { orArray } from '../../../modules/util';\nimport { tRemoveListItemContent } from './actions';\nimport ItemHeader from '../ItemHeader';\nimport classes from './Item.module.css';\n\nconst getItemTitle = item => itemTypeMap[item.type].pluralTitle;\n\nconst getContentItems = item =>\n    orArray(item[itemTypeMap[item.type].propName]).filter(\n        (item, index, array) =>\n            array.findIndex(el => el.id === item.id) === index\n    );\n\nconst removeContent = (handler, item, contentToRemove) => () => {\n    handler(item, contentToRemove);\n};\n\nconst ListItem = (props, context) => {\n    const { item, editMode, tRemoveListItemContent } = props;\n    const contentItems = getContentItems(item);\n\n    const getLink = contentItem => {\n        const deleteButton = (\n            <button\n                className={classes.deletebutton}\n                onClick={removeContent(\n                    tRemoveListItemContent,\n                    item,\n                    contentItem\n                )}\n            >\n                <DeleteIcon className={classes.deleteicon} />\n            </button>\n        );\n\n        return (\n            <Fragment>\n                <a\n                    className={classes.link}\n                    style={{ color: colors.grey900 }}\n                    href={getItemUrl(item.type, contentItem, context.d2)}\n                >\n                    {contentItem.name}\n                </a>\n                {editMode ? deleteButton : null}\n            </Fragment>\n        );\n    };\n\n    return (\n        <Fragment>\n            <ItemHeader title={getItemTitle(item)} />\n            <Line />\n            <div className=\"dashboard-item-content\">\n                <ul className={classes.list}>\n                    {contentItems.map(contentItem => (\n                        <li className={classes.item} key={contentItem.id}>\n                            <DescriptionIcon className={classes.itemicon} />\n                            {getLink(contentItem)}\n                        </li>\n                    ))}\n                </ul>\n            </div>\n        </Fragment>\n    );\n};\n\nListItem.contextTypes = {\n    d2: PropTypes.object,\n};\n\nexport default connect(\n    null,\n    {\n        tRemoveListItemContent,\n    }\n)(ListItem);\n","import {\n    acUpdateDashboardItem,\n    acRemoveDashboardItem,\n} from '../../../actions/editDashboard';\nimport { itemTypeMap } from '../../../modules/itemTypes';\n\nexport const tRemoveListItemContent = (dashboardItem, content) => dispatch => {\n    const listItemType = itemTypeMap[dashboardItem.type].propName;\n\n    const newContent = dashboardItem[listItemType].filter(\n        item => item.id !== content.id\n    );\n\n    if (newContent.length) {\n        dashboardItem[listItemType] = newContent;\n        dispatch(acUpdateDashboardItem(dashboardItem));\n    } else {\n        dispatch(acRemoveDashboardItem(dashboardItem));\n    }\n};\n","import React, { Fragment } from 'react';\nimport { connect } from 'react-redux';\nimport i18n from '@dhis2/d2-i18n';\nimport Input from '@material-ui/core/Input';\nimport {\n    Parser as RichTextParser,\n    Editor as RichTextEditor,\n} from '@dhis2/d2-ui-rich-text';\n\nimport { acUpdateDashboardItem } from '../../../actions/editDashboard';\nimport { sGetEditDashboardItems } from '../../../reducers/editDashboard';\nimport { sGetDashboardItems } from '../../../reducers/dashboards';\nimport ItemHeader from '../ItemHeader';\nimport Line from '../../../widgets/Line';\n\nconst style = {\n    textDiv: {\n        padding: '10px',\n        whiteSpace: 'pre-line',\n        lineHeight: '20px',\n    },\n    textField: {\n        fontSize: '14px',\n        fontStretch: 'normal',\n        width: '90%',\n        margin: '0 auto',\n        display: 'block',\n        lineHeight: '24px',\n    },\n    container: {\n        marginBottom: '20px',\n        marginTop: '20px',\n    },\n};\n\nconst TextItem = props => {\n    const { item, editMode, text, acUpdateDashboardItem } = props;\n\n    const onChangeText = event => {\n        const updatedItem = {\n            ...item,\n            text: event.target.value,\n        };\n\n        acUpdateDashboardItem(updatedItem);\n    };\n\n    const viewItem = () => {\n        const textDivStyle = Object.assign({}, style.textField, style.textDiv);\n        return (\n            <div className=\"dashboard-item-content\" style={style.container}>\n                <RichTextParser style={textDivStyle}>{text}</RichTextParser>\n            </div>\n        );\n    };\n\n    const editItem = () => {\n        return (\n            <Fragment>\n                <ItemHeader title={i18n.t('Text item')} />\n                <Line />\n                <div className=\"dashboard-item-content\">\n                    <RichTextEditor onEdit={onChangeText}>\n                        <Input\n                            value={text}\n                            multiline\n                            fullWidth\n                            style={style.textField}\n                            placeholder={i18n.t('Add text here')}\n                            onChange={onChangeText}\n                        />\n                    </RichTextEditor>\n                </div>\n            </Fragment>\n        );\n    };\n\n    return <Fragment>{editMode ? editItem() : viewItem()}</Fragment>;\n};\n\nconst mapStateToProps = (state, ownProps) => {\n    const items = ownProps.editMode\n        ? sGetEditDashboardItems(state)\n        : sGetDashboardItems(state);\n\n    const item = items.find(item => item.id === ownProps.item.id);\n\n    return {\n        text: item ? item.text : '',\n    };\n};\n\nexport default connect(\n    mapStateToProps,\n    {\n        acUpdateDashboardItem,\n    }\n)(TextItem);\n","import React, { Fragment } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport NotInterestedIcon from '@material-ui/icons/NotInterested';\n\nimport { FILTER_ORG_UNIT } from '../../../actions/itemFilters';\nimport { sGetItemFiltersRoot } from '../../../reducers/itemFilters';\nimport ItemHeader from '../ItemHeader';\nimport Line from '../../../widgets/Line';\n\nconst getIframeSrc = (appDetails, item, itemFilters) => {\n    let iframeSrc = `${appDetails.launchUrl}?dashboardItemId=${item.id}`;\n\n    if (\n        itemFilters &&\n        itemFilters[FILTER_ORG_UNIT] &&\n        itemFilters[FILTER_ORG_UNIT].length\n    ) {\n        const ouIds = itemFilters[FILTER_ORG_UNIT].map(\n            ouPath => ouPath.split('/').slice(-1)[0]\n        );\n\n        iframeSrc += `&userOrgUnit=${ouIds.join(',')}`;\n    }\n\n    return iframeSrc;\n};\n\nconst AppItem = ({ item, itemFilters }, context) => {\n    let appDetails;\n\n    const appKey = item.appKey;\n\n    if (appKey) {\n        appDetails = context.d2.system.installedApps.find(\n            app => app.key === appKey\n        );\n    }\n\n    return appDetails && appDetails.name && appDetails.launchUrl ? (\n        <Fragment>\n            <ItemHeader title={appDetails.name} />\n            <Line />\n            <iframe\n                title={appDetails.name}\n                src={getIframeSrc(appDetails, item, itemFilters)}\n                className=\"dashboard-item-content\"\n                style={{ border: 'none' }}\n            />\n        </Fragment>\n    ) : (\n        <Fragment>\n            <ItemHeader title={`${appKey} app not found`} />\n            <Line />\n            <div\n                className=\"dashboard-item-content\"\n                style={{\n                    display: 'flex',\n                    justifyContent: 'center',\n                    alignItems: 'center',\n                    height: '90%',\n                }}\n            >\n                <NotInterestedIcon\n                    color=\"disabled\"\n                    disabled\n                    style={{ width: 100, height: 100, align: 'center' }}\n                />\n            </div>\n        </Fragment>\n    );\n};\n\nAppItem.contextTypes = {\n    d2: PropTypes.object,\n};\n\nconst mapStateToProps = state => ({\n    itemFilters: sGetItemFiltersRoot(state),\n});\n\nexport default connect(mapStateToProps)(AppItem);\n","import React, { Fragment } from 'react';\nimport i18n from '@dhis2/d2-i18n';\n\nimport { colors } from '@dhis2/ui-core';\nimport ItemHeader from '../ItemHeader';\n\nconst style = {\n    margin: '21px 28px',\n    fontSize: '14px',\n    lineHeight: '18px',\n    color: colors.grey600,\n};\n\nconst SpacerItem = () => {\n    return (\n        <Fragment>\n            <ItemHeader title={i18n.t('Spacer')} />\n            <p style={style}>\n                {i18n.t(\n                    'Use a spacer to create empty vertical space between other dashboard items.'\n                )}\n            </p>\n        </Fragment>\n    );\n};\n\nexport default SpacerItem;\n","import React from 'react';\n\nimport VisualizationItem from './VisualizationItem/Item';\nimport MessagesItem from './MessagesItem/Item';\nimport NotSupportedItem from './NotSupportedItem/Item';\nimport ListItem from './ListItem/Item';\nimport TextItem from './TextItem/Item';\nimport AppItem from './AppItem/Item';\nimport SpacerItem from './SpacerItem/Item';\nimport {\n    APP,\n    REPORT_TABLE,\n    CHART,\n    MAP,\n    EVENT_CHART,\n    EVENT_REPORT,\n    MESSAGES,\n    REPORTS,\n    RESOURCES,\n    USERS,\n    TEXT,\n    SPACER,\n} from '../../modules/itemTypes';\nimport { DEFAULT_STATE_ITEM_FILTERS } from '../../reducers/itemFilters';\n\nconst getGridItem = type => {\n    switch (type) {\n        case REPORT_TABLE:\n        case CHART:\n        case MAP:\n        case EVENT_CHART:\n        case EVENT_REPORT:\n            return VisualizationItem;\n        case MESSAGES:\n            return MessagesItem;\n        case REPORTS:\n        case RESOURCES:\n        case USERS:\n            return ListItem;\n        case TEXT:\n            return TextItem;\n        case SPACER:\n            return SpacerItem;\n        case APP:\n            return AppItem;\n        default:\n            return NotSupportedItem;\n    }\n};\n\nexport const Item = props => {\n    const GridItem = getGridItem(props.item.type);\n\n    return (\n        <GridItem\n            item={props.item}\n            editMode={props.editMode}\n            itemFilters={\n                props.editMode ? DEFAULT_STATE_ITEM_FILTERS : props.itemFilters\n            }\n            onToggleItemExpanded={props.onToggleItemExpanded}\n        />\n    );\n};\n","import React from 'react';\nimport ItemHeaderButton from '../Item/ItemHeaderButton';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport { colors } from '@dhis2/ui-core';\n\nconst style = {\n    button: {\n        position: 'absolute',\n        top: '7px',\n        right: '7px',\n        zIndex: '1000',\n    },\n    icon: {\n        fill: colors.red500,\n    },\n};\n\nconst DeleteItemHeaderButton = ({ onClick }) => (\n    <ItemHeaderButton onClick={onClick} style={style.button}>\n        <DeleteIcon style={style.icon} />\n    </ItemHeaderButton>\n);\n\nexport default DeleteItemHeaderButton;\n","import React from 'react';\nimport { colors } from '@dhis2/ui-core';\n\nexport const NoContentMessage = ({ text }) => (\n    <div\n        style={{\n            padding: '50px 10px',\n            textAlign: 'center',\n            fontSize: '15px',\n            fontWeight: 500,\n            color: colors.grey600,\n        }}\n    >\n        {text}\n    </div>\n);\n\nexport default NoContentMessage;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport debounce from 'lodash/debounce';\n\nconst defaultDebounceMs = 100;\nconst defaultBufferFactor = 0.25;\n\nclass ProgressiveLoadingContainer extends Component {\n    static propTypes = {\n        children: PropTypes.node.isRequired,\n        debounceMs: PropTypes.number,\n        bufferFactor: PropTypes.number,\n    };\n    static defaultProps = {\n        debounceMs: defaultDebounceMs,\n        bufferFactor: defaultBufferFactor,\n    };\n\n    state = {\n        shouldLoad: false,\n    };\n    containerRef = null;\n    shouldLoadHandler = null;\n\n    checkShouldLoad() {\n        const bufferPx = this.props.bufferFactor * window.innerHeight;\n\n        if (!this.containerRef) {\n            return;\n        }\n\n        const rect = this.containerRef.getBoundingClientRect();\n        if (\n            rect.bottom > -bufferPx &&\n            rect.top < window.innerHeight + bufferPx\n        ) {\n            this.setState({\n                shouldLoad: true,\n            });\n\n            this.removeHandler();\n        }\n    }\n\n    registerHandler() {\n        this.shouldLoadHandler = debounce(\n            () => this.checkShouldLoad(),\n            this.props.debounceMs\n        );\n\n        window.addEventListener('scroll', this.shouldLoadHandler);\n    }\n    removeHandler() {\n        window.removeEventListener('scroll', this.shouldLoadHandler);\n    }\n\n    componentDidMount() {\n        this.registerHandler();\n        this.checkShouldLoad();\n    }\n\n    componentWillUnmount() {\n        this.removeHandler();\n    }\n\n    render() {\n        const { children, debounceMs, bufferFactor, ...props } = this.props;\n        const { shouldLoad } = this.state;\n\n        return (\n            <div ref={ref => (this.containerRef = ref)} {...props}>\n                {shouldLoad && children}\n            </div>\n        );\n    }\n}\n\nexport default ProgressiveLoadingContainer;\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport i18n from '@dhis2/d2-i18n';\nimport ReactGridLayout from 'react-grid-layout';\nimport { CircularProgress, ScreenCover } from '@dhis2/ui-core';\n\nimport {\n    acUpdateDashboardLayout,\n    acRemoveDashboardItem,\n} from '../../actions/editDashboard';\nimport { Item } from '../Item/Item';\nimport { resize as pluginResize } from '../Item/VisualizationItem/plugin';\nimport { isPluginType } from '../../modules/itemTypes';\nimport {\n    GRID_ROW_HEIGHT,\n    GRID_COMPACT_TYPE,\n    ITEM_MIN_HEIGHT,\n    MARGIN,\n    getGridColumns,\n    hasShape,\n    onItemResize,\n} from './gridUtil';\nimport { orArray } from '../../modules/util';\nimport DeleteItemButton from './DeleteItemButton';\nimport NoContentMessage from '../../widgets/NoContentMessage';\n\nimport 'react-grid-layout/css/styles.css';\nimport 'react-resizable/css/styles.css';\n\nimport './ItemGrid.css';\nimport { sGetSelectedId, sGetSelectedIsLoading } from '../../reducers/selected';\nimport {\n    sGetEditDashboardRoot,\n    sGetEditDashboardItems,\n} from '../../reducers/editDashboard';\nimport {\n    sGetDashboardById,\n    sGetDashboardItems,\n} from '../../reducers/dashboards';\nimport ProgressiveLoadingContainer from '../Item/ProgressiveLoadingContainer';\n\n// Component\n\nconst EXPANDED_HEIGHT = 17;\n\nexport class ItemGrid extends Component {\n    state = {\n        expandedItems: {},\n    };\n\n    onToggleItemExpanded = clickedId => {\n        const isExpanded =\n            typeof this.state.expandedItems[clickedId] === 'boolean'\n                ? this.state.expandedItems[clickedId]\n                : false;\n\n        const expandedItems = { ...this.state.expandedItems };\n        expandedItems[clickedId] = !isExpanded;\n        this.setState({ expandedItems });\n    };\n\n    onRemoveItem = clickedId => {\n        this.props.acRemoveDashboardItem(clickedId);\n    };\n\n    componentWillReceiveProps(nextProps) {\n        if (nextProps.edit) {\n            this.setState({ expandedItems: {} });\n        }\n    }\n\n    onLayoutChange = newLayout => {\n        if (this.props.edit) {\n            this.props.acUpdateDashboardLayout(newLayout);\n        }\n    };\n\n    onResizeStop = (layout, oldItem, newItem) => {\n        onItemResize(newItem.i);\n\n        const dashboardItem = this.props.dashboardItems.find(\n            item => item.id === newItem.i\n        );\n\n        // call resize on the item component if it's a plugin type\n        if (dashboardItem && isPluginType(dashboardItem)) {\n            pluginResize(dashboardItem);\n        }\n    };\n\n    onRemoveItemWrapper = id => () => this.onRemoveItem(id);\n\n    render() {\n        const { edit, isLoading, dashboardItems } = this.props;\n\n        if (!isLoading && !dashboardItems.length) {\n            return (\n                <NoContentMessage\n                    text={i18n.t('There are no items on this dashboard')}\n                />\n            );\n        }\n\n        const items = dashboardItems.map(item => {\n            const expandedItem = this.state.expandedItems[item.id];\n            let hProp = { h: item.h };\n\n            if (expandedItem && expandedItem === true) {\n                hProp.h = item.h + EXPANDED_HEIGHT;\n            }\n\n            return Object.assign({}, item, hProp, {\n                i: item.id,\n                minH: ITEM_MIN_HEIGHT,\n            });\n        });\n\n        return (\n            <div className=\"grid-wrapper\">\n                {isLoading ? (\n                    <ScreenCover>\n                        <CircularProgress />\n                    </ScreenCover>\n                ) : null}\n                <ReactGridLayout\n                    onLayoutChange={this.onLayoutChange}\n                    onResizeStop={this.onResizeStop}\n                    className=\"layout\"\n                    layout={items}\n                    margin={MARGIN}\n                    cols={getGridColumns()}\n                    rowHeight={GRID_ROW_HEIGHT}\n                    width={window.innerWidth}\n                    compactType={GRID_COMPACT_TYPE}\n                    isDraggable={edit}\n                    isResizable={edit}\n                    draggableCancel=\"input,textarea\"\n                >\n                    {items.map(item => {\n                        const itemClassNames = [\n                            item.type,\n                            edit ? 'edit' : 'view',\n                        ].join(' ');\n\n                        return (\n                            <ProgressiveLoadingContainer\n                                key={item.i}\n                                className={itemClassNames}\n                            >\n                                {edit ? (\n                                    <DeleteItemButton\n                                        onClick={this.onRemoveItemWrapper(\n                                            item.id\n                                        )}\n                                    />\n                                ) : null}\n                                <Item\n                                    item={item}\n                                    editMode={edit}\n                                    onToggleItemExpanded={\n                                        this.onToggleItemExpanded\n                                    }\n                                />\n                            </ProgressiveLoadingContainer>\n                        );\n                    })}\n                </ReactGridLayout>\n            </div>\n        );\n    }\n}\n\nItemGrid.propTypes = {\n    dashboardItems: PropTypes.array,\n};\n\nItemGrid.defaultProps = {\n    dashboardItems: [],\n};\n\n// Container\n\nconst mapStateToProps = (state, ownProps) => {\n    const selectedDashboard = ownProps.edit\n        ? sGetEditDashboardRoot(state)\n        : sGetDashboardById(state, sGetSelectedId(state));\n\n    const dashboardItems = ownProps.edit\n        ? sGetEditDashboardItems(state)\n        : sGetDashboardItems(state);\n\n    return {\n        isLoading: sGetSelectedIsLoading(state) || !selectedDashboard,\n        dashboardItems,\n    };\n};\n\nconst mapDispatchToProps = {\n    acUpdateDashboardLayout,\n    acRemoveDashboardItem,\n};\n\nconst mergeProps = (stateProps, dispatchProps, ownProps) => {\n    const validItems = orArray(stateProps.dashboardItems).filter(hasShape);\n\n    return {\n        ...dispatchProps,\n        edit: ownProps.edit,\n        isLoading: stateProps.isLoading,\n        dashboardItems: validItems,\n        onItemResize,\n    };\n};\n\nexport default connect(\n    mapStateToProps,\n    mapDispatchToProps,\n    mergeProps\n)(ItemGrid);\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nimport i18n from '@dhis2/d2-i18n';\n\nimport { colors } from '@dhis2/ui-core';\n\nconst styles = {\n    badgeContainer: {\n        margin: '2px',\n        padding: '0 16px',\n        borderRadius: '4px',\n        color: colors.white,\n        backgroundColor: '#212934',\n        height: 36,\n        display: 'flex',\n        alignItems: 'center',\n    },\n    badge: {\n        fontSize: '13px',\n        cursor: 'pointer',\n        whiteSpace: 'nowrap',\n    },\n    badgeRemove: {\n        fontSize: '12px',\n        textDecoration: 'underline',\n        marginLeft: '24px',\n        cursor: 'pointer',\n    },\n};\n\nclass FilterBadge extends Component {\n    onClick = id => () => this.props.onClick(id);\n    onRemove = id => () => this.props.onRemove(id);\n\n    render() {\n        const { data } = this.props;\n\n        return (\n            <div style={styles.badgeContainer}>\n                <span style={styles.badge} onClick={this.onClick(data.id)}>\n                    {`${data.name}: ${\n                        data.values.length > 1\n                            ? i18n.t('{{count}} selected', {\n                                  count: data.values.length,\n                              })\n                            : data.values[0].name\n                    }`}\n                </span>\n                <span\n                    style={styles.badgeRemove}\n                    onClick={this.onRemove(data.id)}\n                >\n                    {i18n.t('Remove')}\n                </span>\n            </div>\n        );\n    }\n}\n\nFilterBadge.propTypes = {\n    data: PropTypes.object.isRequired,\n    onClick: PropTypes.func.isRequired,\n    onRemove: PropTypes.func.isRequired,\n};\n\nFilterBadge.defaultProps = {\n    onClick: Function.prototype,\n    onRemove: Function.prototype,\n};\n\nexport default FilterBadge;\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { createSelector } from 'reselect';\nimport { withStyles } from '@material-ui/core/styles';\n\nimport { sGetDimensions } from '../../reducers/dimensions';\nimport { sGetItemFiltersRoot } from '../../reducers/itemFilters';\nimport { sGetControlBarUserRows } from '../../reducers/controlBar';\nimport { getTopOffset } from '../ControlBar/controlBarDimensions';\nimport { acRemoveItemFilter } from '../../actions/itemFilters';\nimport { acRemoveEditItemFilter } from '../../actions/editItemFilters';\nimport { acSetActiveModalDimension } from '../../actions/activeModalDimension';\n\nimport FilterBadge from './FilterBadge';\n\nconst styles = {\n    bar: {\n        position: 'sticky',\n        zIndex: 7,\n        padding: '8px 0',\n        display: 'flex',\n        justifyContent: 'center',\n        flexWrap: 'wrap',\n    },\n};\n\nexport class FilterBar extends Component {\n    onBadgeRemove = id => {\n        this.props.removeItemFilter(id);\n        this.props.removeEditItemFilter(id);\n    };\n\n    onBadgeClick = id => {\n        this.props.setActiveModalDimension({\n            id,\n            name: this.props.filters.find(item => item.id === id).name,\n        });\n    };\n\n    render() {\n        const { filters, userRows, classes } = this.props;\n        const top = getTopOffset(userRows) + 10;\n\n        return filters.length ? (\n            <div className={classes.bar} style={{ top }}>\n                {filters.map(filter => (\n                    <FilterBadge\n                        key={filter.id}\n                        data={filter}\n                        onClick={this.onBadgeClick}\n                        onRemove={this.onBadgeRemove}\n                    />\n                ))}\n            </div>\n        ) : null;\n    }\n}\n\nFilterBar.propTypes = {\n    filters: PropTypes.array.isRequired,\n    removeItemFilter: PropTypes.func.isRequired,\n    removeEditItemFilter: PropTypes.func.isRequired,\n};\n\nFilterBar.defaultProps = {\n    filters: [],\n    removeItemFIlter: Function.prototype,\n    removeEditItemFilter: Function.prototype,\n};\n\n// simplify the filters structure to:\n// [{ id: 'pe', name: 'Period', values: [{ id: 2019: name: '2019' }, {id: 'LAST_MONTH', name: 'Last month' }]}, ...]\nconst filtersSelector = createSelector(\n    [sGetItemFiltersRoot, sGetDimensions],\n    (filters, dimensions) =>\n        Object.keys(filters).reduce((arr, id) => {\n            arr.push({\n                id: id,\n                name: dimensions[id].name,\n                values: filters[id].map(value => ({\n                    id: value.id,\n                    name: value.displayName || value.name,\n                })),\n            });\n\n            return arr;\n        }, [])\n);\n\nconst mapStateToProps = state => ({\n    filters: filtersSelector(state),\n    userRows: sGetControlBarUserRows(state),\n});\n\nexport default connect(\n    mapStateToProps,\n    {\n        setActiveModalDimension: acSetActiveModalDimension,\n        removeItemFilter: acRemoveItemFilter,\n        removeEditItemFilter: acRemoveEditItemFilter,\n    }\n)(withStyles(styles)(FilterBar));\n","import React, { Fragment } from 'react';\nimport TitleBar from '../TitleBar/TitleBar';\nimport ItemGrid from '../ItemGrid/ItemGrid';\nimport FilterBar from '../FilterBar/FilterBar';\n\nexport const DashboardContent = props => (\n    <Fragment>\n        <TitleBar edit={props.editMode} />\n        <FilterBar />\n        <ItemGrid edit={props.editMode} />\n    </Fragment>\n);\n\nexport default DashboardContent;\n","import React, { Fragment } from 'react';\nimport { connect } from 'react-redux';\nimport isEmpty from 'lodash/isEmpty';\nimport i18n from '@dhis2/d2-i18n';\n\nimport {\n    sGetAllDashboards,\n    sDashboardsIsFetching,\n} from '../../reducers/dashboards';\nimport { sGetSelectedId } from '../../reducers/selected';\nimport DashboardsBar from '../ControlBar/DashboardsBar';\nimport DashboardVerticalOffset from './DashboardVerticalOffset';\nimport DashboardContent from './DashboardContent';\nimport NoContentMessage from '../../widgets/NoContentMessage';\n\nexport const Content = ({ hasDashboardContent, dashboardsIsEmpty }) => {\n    const msg = dashboardsIsEmpty\n        ? i18n.t(\n              'No dashboards found. Use the + button to create a new dashboard.'\n          )\n        : i18n.t('Requested dashboard not found');\n\n    return hasDashboardContent ? (\n        <DashboardContent editMode={false} />\n    ) : (\n        <NoContentMessage text={msg} />\n    );\n};\n\nexport const ViewDashboard = ({ id, dashboardsIsEmpty, dashboardsLoaded }) => {\n    const hasDashboardContent = id && !dashboardsIsEmpty;\n    const contentNotReady = !dashboardsLoaded || id === null;\n\n    return (\n        <Fragment>\n            <DashboardsBar />\n            <DashboardVerticalOffset />\n            <div className=\"dashboard-wrapper\">\n                {contentNotReady ? null : (\n                    <Content\n                        hasDashboardContent={hasDashboardContent}\n                        dashboardsIsEmpty={dashboardsIsEmpty}\n                    />\n                )}\n            </div>\n        </Fragment>\n    );\n};\n\nconst mapStateToProps = state => {\n    const dashboards = sGetAllDashboards(state);\n\n    return {\n        id: sGetSelectedId(state),\n        dashboardsIsEmpty: isEmpty(dashboards),\n        dashboardsLoaded: !sDashboardsIsFetching(state),\n    };\n};\n\nexport default connect(mapStateToProps)(ViewDashboard);\n","import React from 'react';\nimport i18n from '@dhis2/d2-i18n';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport { Button } from '@dhis2/ui-core';\n\nexport const ConfirmDeleteDialog = ({\n    dashboardName,\n    onDeleteConfirmed,\n    onContinueEditing,\n    open,\n}) => {\n    const actions = [\n        <Button key=\"cancel\" secondary onClick={onContinueEditing}>\n            {i18n.t('Cancel')}\n        </Button>,\n        <Button key=\"delete\" destructive onClick={onDeleteConfirmed}>\n            {i18n.t('Delete')}\n        </Button>,\n    ];\n\n    return (\n        <Dialog open={open} onClose={onContinueEditing}>\n            <DialogTitle style={{ fontSize: '1.25rem', fontWeight: '450' }}>\n                {i18n.t('Delete dashboard')}\n            </DialogTitle>\n            <DialogContent>\n                <DialogContentText style={{ fontSize: '0.875rem' }}>\n                    {i18n.t(\n                        'Deleting dashboard \"{{ dashboardName }}\" will remove it for all users. This action cannot be undone. Are you sure you want to permanently delete this dashboard?',\n                        { dashboardName }\n                    )}\n                </DialogContentText>\n            </DialogContent>\n            <DialogActions>{actions}</DialogActions>\n        </Dialog>\n    );\n};\n\nexport default ConfirmDeleteDialog;\n","import React, { Component, Fragment } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { Redirect } from 'react-router-dom';\nimport i18n from '@dhis2/d2-i18n';\nimport ControlBar from './ControlBar';\nimport TranslationDialog from '@dhis2/d2-ui-translation-dialog';\nimport { Button } from '@dhis2/ui-core';\n\nimport ConfirmDeleteDialog from './ConfirmDeleteDialog';\nimport {\n    tSaveDashboard,\n    acClearEditDashboard,\n} from '../../actions/editDashboard';\nimport {\n    tDeleteDashboard,\n    acSetDashboardDisplayName,\n} from '../../actions/dashboards';\nimport {\n    sGetEditDashboardRoot,\n    sGetIsNewDashboard,\n} from '../../reducers/editDashboard';\nimport {\n    CONTROL_BAR_ROW_HEIGHT,\n    MIN_ROW_COUNT,\n    getControlBarHeight,\n} from './controlBarDimensions';\nimport { apiFetchDashboard } from '../../api/dashboards';\n\nimport classes from './styles/DashboardsBar.module.css';\n\nconst buttonBarStyle = {\n    height: CONTROL_BAR_ROW_HEIGHT,\n    paddingTop: '15px',\n    marginLeft: '15px',\n    marginRight: '15px',\n};\n\nexport class EditBar extends Component {\n    state = {\n        translationDialogIsOpen: false,\n        dashboardModel: undefined,\n        confirmDeleteDialogOpen: false,\n        redirectUrl: undefined,\n    };\n\n    onConfirmDelete = () => {\n        this.setState({ confirmDeleteDialogOpen: true });\n    };\n\n    onSave = () => {\n        this.props.onSave().then(newId => {\n            this.setState({ redirectUrl: `/${newId}` });\n        });\n    };\n\n    onDiscard = () => {\n        this.props.onDiscardChanges();\n        const redirectUrl = this.props.dashboardId\n            ? `/${this.props.dashboardId}`\n            : '/';\n        this.setState({ redirectUrl });\n    };\n\n    onContinueEditing = () => {\n        this.setState({ confirmDeleteDialogOpen: false });\n    };\n\n    onDeleteConfirmed = () => {\n        this.setState({ confirmDeleteDialogOpen: false });\n        this.props.onDelete(this.props.dashboardId).then(() => {\n            this.setState({ redirectUrl: '/' });\n        });\n    };\n\n    onTranslationsSaved = async translations => {\n        if (translations && translations.length) {\n            const dbLocale = await this.context.d2.currentUser.userSettings.get(\n                'keyDbLocale'\n            );\n\n            const translation = translations.find(\n                t => t.locale === dbLocale && t.property === 'NAME'\n            );\n\n            if (translation && translation.value) {\n                this.props.onTranslate(\n                    this.props.dashboardId,\n                    translation.value\n                );\n            }\n        }\n    };\n\n    fetchDashboardModel = () => {\n        if (this.props.dashboardId && !this.state.dashboardModel) {\n            apiFetchDashboard(this.props.dashboardId).then(dashboardModel =>\n                this.setState({ dashboardModel })\n            );\n        }\n    };\n\n    componentDidMount() {\n        this.fetchDashboardModel();\n    }\n\n    componentDidUpdate() {\n        this.fetchDashboardModel();\n    }\n\n    toggleTranslationDialog = () => {\n        this.setState({\n            translationDialogIsOpen: !this.state.translationDialogIsOpen,\n        });\n    };\n\n    confirmDeleteDialog = () =>\n        this.props.deleteAccess && this.props.dashboardId ? (\n            <ConfirmDeleteDialog\n                dashboardName={this.props.dashboardName}\n                onDeleteConfirmed={this.onDeleteConfirmed}\n                onContinueEditing={this.onContinueEditing}\n                open={this.state.confirmDeleteDialogOpen}\n            />\n        ) : null;\n\n    translationDialog = () =>\n        this.state.dashboardModel && this.state.dashboardModel.id ? (\n            <TranslationDialog\n                className=\"translation-dialog\"\n                d2={this.context.d2}\n                open={this.state.translationDialogIsOpen}\n                onRequestClose={this.toggleTranslationDialog}\n                objectToTranslate={this.state.dashboardModel}\n                fieldsToTranslate={['name', 'description']}\n                // TODO handle messages in snackbar\n                onTranslationSaved={this.onTranslationsSaved}\n                onTranslationError={err =>\n                    console.log('translation update error', err)\n                }\n            />\n        ) : null;\n\n    render() {\n        if (this.state.redirectUrl) {\n            return <Redirect to={this.state.redirectUrl} />;\n        }\n\n        const { dashboardId, deleteAccess, updateAccess } = this.props;\n        const controlBarHeight = getControlBarHeight(MIN_ROW_COUNT);\n\n        const discardBtnText = updateAccess\n            ? i18n.t('Exit without saving')\n            : i18n.t('Go to dashboards');\n\n        return (\n            <Fragment>\n                <ControlBar height={controlBarHeight} editMode={true}>\n                    <div style={buttonBarStyle}>\n                        {updateAccess ? (\n                            <div className={classes.leftControls}>\n                                <span style={{ marginRight: '15px' }}>\n                                    <Button primary onClick={this.onSave}>\n                                        {i18n.t('Save changes')}\n                                    </Button>\n                                </span>\n\n                                {dashboardId ? (\n                                    <span style={{ marginRight: '15px' }}>\n                                        <Button\n                                            onClick={\n                                                this.toggleTranslationDialog\n                                            }\n                                        >\n                                            {i18n.t('Translate')}\n                                        </Button>\n                                    </span>\n                                ) : null}\n                                {dashboardId && deleteAccess ? (\n                                    <Button onClick={this.onConfirmDelete}>\n                                        {i18n.t('Delete')}\n                                    </Button>\n                                ) : null}\n                            </div>\n                        ) : null}\n\n                        <div className={classes.rightControls}>\n                            <Button secondary onClick={this.onDiscard}>\n                                {discardBtnText}\n                            </Button>\n                        </div>\n                    </div>\n                </ControlBar>\n                {this.translationDialog()}\n                {this.confirmDeleteDialog()}\n            </Fragment>\n        );\n    }\n}\n\nEditBar.contextTypes = {\n    d2: PropTypes.object,\n};\n\nconst mapStateToProps = state => {\n    const dashboard = sGetEditDashboardRoot(state);\n\n    let deleteAccess;\n    let updateAccess;\n    if (sGetIsNewDashboard(state)) {\n        deleteAccess = true;\n        updateAccess = true;\n    } else {\n        updateAccess = dashboard.access ? dashboard.access.update : false;\n        deleteAccess = dashboard.access ? dashboard.access.delete : false;\n    }\n\n    return {\n        dashboardId: dashboard.id,\n        dashboardName: dashboard.name,\n        deleteAccess,\n        updateAccess,\n    };\n};\n\nconst mapDispatchToProps = dispatch => ({\n    onSave: () => dispatch(tSaveDashboard()).then(id => id),\n    onDelete: id => dispatch(tDeleteDashboard(id)),\n    onDiscardChanges: () => dispatch(acClearEditDashboard()),\n    onTranslate: (id, value) => dispatch(acSetDashboardDisplayName(id, value)),\n});\n\nexport default connect(\n    mapStateToProps,\n    mapDispatchToProps\n)(EditBar);\n","import React, { Fragment, Component } from 'react';\nimport { connect } from 'react-redux';\nimport i18n from '@dhis2/d2-i18n';\n\nimport { acSetEditDashboard } from '../../actions/editDashboard';\nimport { sGetSelectedId } from '../../reducers/selected';\nimport {\n    sGetDashboardById,\n    sGetDashboardItems,\n    sDashboardsIsFetching,\n} from '../../reducers/dashboards';\nimport DashboardVerticalOffset from './DashboardVerticalOffset';\nimport DashboardContent from './DashboardContent';\nimport EditBar from '../ControlBar/EditBar';\nimport NoContentMessage from '../../widgets/NoContentMessage';\n\nexport const Content = ({ updateAccess }) => {\n    return updateAccess ? (\n        <DashboardContent editMode={true} />\n    ) : (\n        <NoContentMessage text={i18n.t('No access')} />\n    );\n};\nexport class EditDashboard extends Component {\n    state = {\n        initialized: false,\n    };\n\n    initEditDashboard = () => {\n        if (this.props.dashboard) {\n            this.setState({ initialized: true });\n            this.props.setEditDashboard(this.props.dashboard, this.props.items);\n        }\n    };\n\n    componentDidMount() {\n        this.initEditDashboard();\n    }\n\n    componentDidUpdate() {\n        if (!this.state.initialized) {\n            this.initEditDashboard();\n        }\n    }\n\n    getDashboardContent = () => {\n        const contentNotReady =\n            !this.props.dashboardsLoaded || this.props.id === null;\n\n        return (\n            <div className=\"dashboard-wrapper\">\n                {contentNotReady ? null : (\n                    <Content updateAccess={this.props.updateAccess} />\n                )}\n            </div>\n        );\n    };\n\n    render() {\n        return (\n            <Fragment>\n                <EditBar />\n                <DashboardVerticalOffset editMode={true} />\n                {this.getDashboardContent()}\n            </Fragment>\n        );\n    }\n}\n\nconst mapStateToProps = state => {\n    const id = sGetSelectedId(state);\n    const dashboard = id ? sGetDashboardById(state, id) : null;\n\n    const updateAccess =\n        dashboard && dashboard.access ? dashboard.access.update : false;\n\n    return {\n        dashboard,\n        id,\n        updateAccess,\n        items: sGetDashboardItems(state),\n        dashboardsLoaded: !sDashboardsIsFetching(state),\n    };\n};\n\nexport default connect(\n    mapStateToProps,\n    {\n        setEditDashboard: acSetEditDashboard,\n    }\n)(EditDashboard);\n","import React, { Component, Fragment } from 'react';\nimport { connect } from 'react-redux';\n\nimport { acSetEditNewDashboard } from '../../actions/editDashboard';\nimport DashboardVerticalOffset from './DashboardVerticalOffset';\nimport EditBar from '../ControlBar/EditBar';\nimport DashboardContent from './DashboardContent';\n\nclass NewDashboard extends Component {\n    componentDidMount() {\n        this.props.setNewDashboard();\n    }\n\n    render() {\n        return (\n            <Fragment>\n                <EditBar />\n                <DashboardVerticalOffset editMode={true} />\n                <div className=\"dashboard-wrapper\">\n                    <DashboardContent editMode={true} />\n                </div>\n            </Fragment>\n        );\n    }\n}\n\nexport default connect(\n    null,\n    {\n        setNewDashboard: acSetEditNewDashboard,\n    }\n)(NewDashboard);\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\n\nimport { tSelectDashboard } from '../../actions/dashboards';\nimport { sDashboardsIsFetching } from '../../reducers/dashboards';\nimport { EDIT, NEW } from './dashboardModes';\nimport ViewDashboard from './ViewDashboard';\nimport EditDashboard from './EditDashboard';\nimport NewDashboard from './NewDashboard';\n\nclass Dashboard extends Component {\n    setDashboard = () => {\n        if (this.props.dashboardsLoaded) {\n            const id = this.props.match.params.dashboardId || null;\n\n            this.props.selectDashboard(id);\n\n            this.scrollToTop();\n        }\n    };\n\n    scrollToTop = () => {\n        window.scrollTo(0, 0);\n    };\n\n    componentDidMount() {\n        this.setDashboard();\n    }\n\n    componentDidUpdate() {\n        this.setDashboard();\n    }\n\n    render() {\n        switch (this.props.mode) {\n            case EDIT:\n                return <EditDashboard />;\n            case NEW:\n                return <NewDashboard />;\n            default:\n                return <ViewDashboard />;\n        }\n    }\n}\n\nconst mapStateToProps = state => {\n    return { dashboardsLoaded: !sDashboardsIsFetching(state) };\n};\n\nexport default connect(\n    mapStateToProps,\n    {\n        selectDashboard: tSelectDashboard,\n    }\n)(Dashboard);\n","export const EDIT = 'edit';\nexport const NEW = 'new';\nexport const VIEW = 'view';\n","import React, { Component } from 'react';\nimport { HashRouter as Router, Route, Switch } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport i18n from '@dhis2/d2-i18n';\nimport HeaderBar from '@dhis2/ui/widgets/HeaderBar';\n\nimport { EDIT, VIEW, NEW } from './Dashboard/dashboardModes';\nimport { acReceivedUser } from '../actions/user';\nimport { tFetchDashboards } from '../actions/dashboards';\nimport { tSetControlBarRows } from '../actions/controlBar';\nimport { tSetDimensions } from '../actions/dimensions';\nimport Dashboard from './Dashboard/Dashboard';\nimport SnackbarMessage from './SnackbarMessage/SnackbarMessage';\n\nimport 'typeface-roboto';\nimport './App.css';\n\nexport class App extends Component {\n    componentDidMount() {\n        this.props.setCurrentUser(this.props.d2.currentUser);\n        this.props.fetchDashboards();\n        this.props.setControlBarRows();\n        this.props.setDimensions(this.props.d2);\n    }\n\n    getChildContext() {\n        return { baseUrl: this.props.baseUrl, i18n, d2: this.props.d2 };\n    }\n\n    render() {\n        return (\n            <div className=\"app-wrapper\">\n                <div className=\"dashboard-header-bar\">\n                    <HeaderBar appName={i18n.t('Dashboard')} />\n                </div>\n                <Router>\n                    <Switch>\n                        <Route\n                            exact\n                            path=\"/\"\n                            render={props => (\n                                <Dashboard {...props} mode={VIEW} />\n                            )}\n                        />\n                        <Route\n                            exact\n                            path=\"/new\"\n                            render={props => (\n                                <Dashboard {...props} mode={NEW} />\n                            )}\n                        />\n                        <Route\n                            exact\n                            path=\"/:dashboardId\"\n                            render={props => (\n                                <Dashboard {...props} mode={VIEW} />\n                            )}\n                        />\n                        <Route\n                            exact\n                            path=\"/:dashboardId/edit\"\n                            render={props => (\n                                <Dashboard {...props} mode={EDIT} />\n                            )}\n                        />\n                    </Switch>\n                </Router>\n                <SnackbarMessage />\n            </div>\n        );\n    }\n}\n\nApp.childContextTypes = {\n    baseUrl: PropTypes.string,\n    i18n: PropTypes.object,\n    d2: PropTypes.object,\n};\n\nconst mapDispatchToProps = dispatch => {\n    return {\n        setCurrentUser: currentUser => dispatch(acReceivedUser(currentUser)),\n        fetchDashboards: () => dispatch(tFetchDashboards()),\n        setControlBarRows: () => dispatch(tSetControlBarRows()),\n        setDimensions: d2 => dispatch(tSetDimensions(d2)),\n    };\n};\n\nexport default connect(\n    null,\n    mapDispatchToProps\n)(App);\n","import { RECEIVED_USER } from '../reducers/user';\n\nexport const acReceivedUser = value => ({\n    type: RECEIVED_USER,\n    value,\n});\n","//------------------------------------------------------------------------------\n// <auto-generated>\n// This code was generated by d2-i18n-generate.\n//\n// Changes to this file may cause incorrect behavior and will be lost if\n// the code is regenerated.\n// </auto-generated>\n//------------------------------------------------------------------------------\nimport i18n from '@dhis2/d2-i18n';\nimport moment from 'moment';\nimport 'moment/locale/lo';\nimport 'moment/locale/ru';\nimport 'moment/locale/sv';\nimport 'moment/locale/ur';\nimport 'moment/locale/vi';\n\nimport enTranslations from './en/translations.json';\nimport loTranslations from './lo/translations.json';\nimport ruTranslations from './ru/translations.json';\nimport svTranslations from './sv/translations.json';\nimport urTranslations from './ur/translations.json';\nimport viTranslations from './vi/translations.json';\n\nconst namespace = 'dashboards-app';\nmoment.locale('en');\n\ni18n.addResources('en', namespace, enTranslations);\ni18n.addResources('lo', namespace, loTranslations);\ni18n.addResources('ru', namespace, ruTranslations);\ni18n.addResources('sv', namespace, svTranslations);\ni18n.addResources('ur', namespace, urTranslations);\ni18n.addResources('vi', namespace, viTranslations);\n\ni18n.setDefaultNamespace(namespace);\ni18n.changeLanguage('en');\n\nexport default i18n;\n","/** @module reducers/selected */\nimport { validateReducer } from '../modules/util';\n\nexport const SET_STYLE = 'SET_STYLE';\n\nexport const DEFAULT_STATE_STYLE = 'LIST';\n\n/**\n * Reducer functions that computes and returns the new state based on the given action\n * @function\n * @param {Object} state The current state\n * @param {Object} action The action to be evaluated\n */\nconst style = (state = DEFAULT_STATE_STYLE, action) => {\n    switch (action.type) {\n        case SET_STYLE:\n            return validateReducer(action.value, DEFAULT_STATE_STYLE);\n        default:\n            return state;\n    }\n};\n\nexport default style;\n\n/**\n * Selectors that point to specific props in the state object\n * @function\n * @param {Object} state\n * @returns {Object}\n */\nexport const sGetStyleRoot = state => state.style;\n","import { combineReducers } from 'redux';\nimport arraySort from 'd2-utilizr/lib/arraySort';\n\nimport dashboards, { sGetDashboardsRoot } from './dashboards';\nimport selected from './selected';\nimport dashboardsFilter, {\n    ownerData,\n    sGetFilterName,\n    sGetFilterOrder,\n    sGetFilterOwner,\n} from './dashboardsFilter';\nimport controlBar from './controlBar';\nimport visualizations from './visualizations';\nimport editDashboard from './editDashboard';\nimport messages from './messages';\nimport user from './user';\nimport snackbar from './snackbar';\nimport itemFilters from './itemFilters';\nimport editItemFilters from './editItemFilters';\nimport style from './style';\nimport dimensions from './dimensions';\nimport settings from './settings';\nimport activeModalDimension from './activeModalDimension';\n\nconst USER = 'system';\n\n// Reducers\n\nexport default combineReducers({\n    dashboards,\n    selected,\n    dashboardsFilter,\n    controlBar,\n    visualizations,\n    messages,\n    user,\n    editDashboard,\n    itemFilters,\n    editItemFilters,\n    style,\n    snackbar,\n    dimensions,\n    settings,\n    activeModalDimension,\n});\n\n// Map constants to data\nconst mapConstToData = {\n    NAME: 'name',\n    ITEMS: 'numberOfItems',\n    CREATED: 'created',\n    OWNER: 'owner',\n};\n\n// Selectors\n\n// Filter dashboards by name\nexport const sFilterDashboardsByName = (dashboards, filter) =>\n    dashboards.filter(d =>\n        d.displayName.toLowerCase().includes(filter.toLowerCase())\n    );\n\n// Filter dashboards by owner, TODO FIXME\nexport const sFilterDashboardsByOwner = (dashboards, filter) => {\n    const ME = ownerData[1]; // TODO\n    const OTHERS = ownerData[2]; // TODO\n\n    switch (filter) {\n        case ME:\n            return dashboards.filter(d => d.owner === USER);\n        case OTHERS:\n            return dashboards.filter(d => d.owner !== USER);\n        default:\n            return dashboards;\n    }\n};\n\n// Filter dashboards by order\nexport const sFilterDashboardsByOrder = (dashboards, filter) => {\n    const filterValues = filter.split(':');\n\n    const key = filterValues[0];\n    const direction = filterValues[1];\n\n    return arraySort(dashboards, direction, mapConstToData[key]);\n};\n\n// Selectors dependency level 2\n\n// Get filtered dashboards\nexport const sGetFilteredDashboards = state => {\n    const dashboards = sGetDashboardsRoot(state);\n\n    const nameFilter = sGetFilterName(state);\n    const ownerFilter = sGetFilterOwner(state);\n    const orderFilter = sGetFilterOrder(state);\n\n    return sFilterDashboardsByOrder(\n        sFilterDashboardsByName(\n            sFilterDashboardsByOwner(dashboards, ownerFilter),\n            nameFilter\n        ),\n        orderFilter\n    );\n};\n","import { createStore, applyMiddleware, compose } from 'redux';\nimport { createLogger } from 'redux-logger';\nimport thunk from 'redux-thunk';\nimport reducer from './reducers';\n\nconst configureStore = () => {\n    const middleware = [thunk];\n\n    // Enable Redux devtools if extension is installed instead of redux-logger\n    const composeEnhancers =\n        window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\n    if (\n        !window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ &&\n        process.env.NODE_ENV !== 'production'\n    ) {\n        middleware.push(createLogger());\n    }\n\n    return createStore(\n        reducer,\n        composeEnhancers(applyMiddleware(...middleware))\n    );\n};\n\nexport default configureStore;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport { MuiThemeProvider, createMuiTheme } from '@material-ui/core/styles';\nimport { init as d2Init, config, getManifest, getUserSettings } from 'd2';\nimport dhis2theme from '@dhis2/d2-ui-core/theme/mui3.theme';\nimport { colors } from '@dhis2/ui-core';\n\n// temporary workaround until new ui headerbar is ready\nimport 'material-design-icons/iconfont/material-icons.css';\nimport './reset.css';\n\nimport App from './components/App';\nimport './index.css';\nimport i18n from './locales';\nimport configureStore from './configureStore';\n\n// small workaround until ui-core textarea is ready\ndhis2theme.palette.primary.dark = colors.teal600;\n\nconst muiTheme = () => createMuiTheme(dhis2theme);\n\nconst configI18n = userSettings => {\n    const uiLocale = userSettings.keyUiLocale;\n\n    if (uiLocale && uiLocale !== 'en') {\n        config.i18n.sources.add(`./i18n/i18n_module_${uiLocale}.properties`);\n    }\n\n    config.i18n.sources.add('./i18n/i18n_module_en.properties');\n    i18n.changeLanguage(uiLocale);\n};\n\nconst init = async () => {\n    const manifest = await getManifest('./manifest.webapp');\n\n    // log app info\n    console.info(\n        `Dashboards app, v${manifest.version}, ${\n            manifest.manifest_generated_at\n        }`\n    );\n\n    const isProd = process.env.NODE_ENV === 'production';\n\n    if (\n        !isProd &&\n        (!process.env.REACT_APP_DHIS2_BASE_URL ||\n            !process.env.REACT_APP_DHIS2_AUTHORIZATION)\n    ) {\n        throw new Error(\n            'Missing env variables REACT_APP_DHIS2_BASE_URL and REACT_APP_DHIS2_AUTHORIZATION'\n        );\n    }\n\n    // api config\n    const baseUrl = isProd\n        ? manifest.activities.dhis.href\n        : process.env.REACT_APP_DHIS2_BASE_URL;\n    const authorization = process.env.REACT_APP_DHIS2_AUTHORIZATION;\n\n    config.baseUrl = `${baseUrl}/api/${manifest.dhis2.apiVersion}`;\n    config.headers = isProd ? null : { Authorization: authorization };\n    config.schemas = [\n        'chart',\n        'map',\n        'report',\n        'reportTable',\n        'eventChart',\n        'eventReport',\n        'dashboard',\n        'organisationUnit',\n        'userGroup',\n    ];\n\n    getUserSettings()\n        .then(configI18n)\n        .then(() => d2Init(config))\n        .then(initializedD2 => {\n            ReactDOM.render(\n                <Provider store={configureStore()}>\n                    <MuiThemeProvider theme={muiTheme()}>\n                        <App baseUrl={baseUrl} d2={initializedD2} />\n                    </MuiThemeProvider>\n                </Provider>,\n                document.getElementById('root')\n            );\n        });\n};\n\ninit();\n","import isObject from 'lodash/isObject';\n\n// validation\nexport function orNull(param) {\n    return param === undefined ? null : param;\n}\n\nexport function orArray(param) {\n    return Array.isArray(param) ? param : [];\n}\n\nexport function orObject(param) {\n    return isObject(param) ? param : {};\n}\n\n// array\nexport function arrayGetById(array, id) {\n    return array.find(item => item.id === id);\n}\n\n// object\nexport function arrayToIdMap(array) {\n    return array.reduce((obj, item) => {\n        obj[item.id] = item;\n        return obj;\n    }, {});\n}\n\n// date\nexport function getDate() {\n    const y = Math.floor(Math.random() * 3) + 2015;\n    const M = Math.floor(Math.random() * 12) + 1;\n    const d = Math.floor(Math.random() * 28) + 1;\n    // const h = Math.floor(Math.random() * 23) + 1;\n    // const m = Math.floor(Math.random() * 59) + 1;\n    // const s = Math.floor(Math.random() * 59) + 1;\n\n    return new Date(`${y}-${M}-${d}`)\n        .toJSON()\n        .replace('T', ' ')\n        .substr(0, 10);\n}\n\nexport const formatDate = (value, uiLocale) => {\n    if (typeof global.Intl !== 'undefined' && Intl.DateTimeFormat) {\n        const locale = uiLocale || 'en';\n        return new Intl.DateTimeFormat(locale, {\n            year: 'numeric',\n            month: 'short',\n            day: 'numeric',\n        }).format(new Date(value));\n    }\n\n    return value.substr(0, 19).replace('T', ' ');\n};\n\n/**\n * Sorts an array of objects based on provided date property\n *\n * @param {Array} items Array of objects\n * @param {String} dateProp Name of the date property to be used for sorting\n * @param {Boolean} ascending Whether to sort ascending or descending\n */\nexport const sortByDate = (items, dateProp, ascending = true) => {\n    const values = Object.values(items);\n\n    values.sort((a, b) => {\n        const aDate = new Date(a[dateProp]);\n        const bDate = new Date(b[dateProp]);\n\n        return ascending ? aDate - bDate : bDate - aDate;\n    });\n\n    return values;\n};\n\n// reducer validator\nexport const validateReducer = (value, defaultValue) =>\n    value === undefined || value === null ? defaultValue : value;\n\nexport const getBaseUrl = d2 => {\n    const api = d2.Api.getApi();\n    const idx = api.baseUrl.indexOf('/api');\n    return idx > -1 ? api.baseUrl.slice(0, idx) : api.baseUrl;\n};\n\nexport const getWithoutId = object => ({\n    ...object,\n    id: undefined,\n});\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"leftControls\":\"DashboardsBar_leftControls__2kr14\",\"rightControls\":\"DashboardsBar_rightControls__2l1lT\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"menuItem\":\"ContentMenuItem_menuItem__2DIcB\",\"launchLink\":\"ContentMenuItem_launchLink__MRANR\",\"label\":\"ContentMenuItem_label__2pIfq\",\"buttonInsert\":\"ContentMenuItem_buttonInsert__1GlZy\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"ControlBar_root__3LaTt\",\"content\":\"ControlBar_content__1r98-\",\"draghandle\":\"ControlBar_draghandle__1VWa0\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"ClearButton_button__2yjcV\",\"icon\":\"ClearButton_icon__1fqj8\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"showMoreButton\":\"CategorizedMenuGroup_showMoreButton__3-0Wa\"};"],"sourceRoot":""}
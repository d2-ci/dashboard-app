{"version":3,"sources":["components/Item/ListItem/Item.module.css","modules/util.js","reducers/user.js","reducers/dashboards.js","reducers/selected.js","reducers/visualizations.js","api/metadata.js","api/index.js","api/dashboards.js","components/ItemGrid/gridUtil.js","reducers/messages.js","api/messages.js","reducers/snackbar.js","actions/snackbar.js","components/SnackbarMessage/SnackbarMessage.js","components/Item/VisualizationItem/plugin.js","actions/selected.js","api/localStorage.js","components/Item/MessagesItem/actions.js","reducers/editDashboard.js","reducers/editItemFilters.js","reducers/itemFilters.js","actions/itemFilters.js","actions/editItemFilters.js","api/editDashboard.js","actions/editDashboard.js","actions/dashboards.js","reducers/controlBar.js","api/controlBar.js","actions/controlBar.js","reducers/dimensions.js","reducers/settings.js","actions/dimensions.js","components/ControlBar/ShowMoreButton.js","components/ControlBar/controlBarDimensions.js","components/ControlBar/ControlBar.js","icons/Star.js","api/dataStatistics.js","components/ControlBar/DashboardItemChip.js","icons/AddCircle.js","icons/Clear.js","components/ControlBar/ClearButton.js","reducers/dashboardsFilter.js","components/ControlBar/Filter.js","components/ControlBar/DashboardsBar.js","actions/dashboardsFilter.js","components/Dashboard/DashboardVerticalOffset.js","modules/colors.js","components/ItemSelector/HeaderMenuItem.js","icons/Launch.js","components/ItemSelector/ContentMenuItem.js","components/ItemSelector/selectableItems.js","components/ItemSelector/CategorizedMenuGroup.js","components/ItemSelector/actions.js","components/ItemSelector/SinglesMenuGroup.js","components/ItemSelector/ItemSelector.js","components/TitleBar/EditTitleBar.js","components/ItemFilter/FilterDialog.js","reducers/activeModalDimension.js","actions/activeModalDimension.js","components/ItemFilter/FilterSelector.js","components/TitleBar/Info.js","components/TitleBar/ViewTitleBar.js","components/TitleBar/TitleBar.js","components/Item/VisualizationItem/DefaultPlugin.js","components/Item/ItemHeader.js","components/Item/VisualizationItem/ItemFooter.js","components/Item/ItemHeaderButton.js","components/Item/VisualizationItem/ItemHeaderButtons.js","modules/memoizeOne.js","components/Item/VisualizationItem/Item.js","widgets/Line.js","components/Item/MessagesItem/Item.js","components/Item/NotSupportedItem/Item.js","icons/Description.js","icons/Delete.js","components/Item/ListItem/Item.js","components/Item/ListItem/actions.js","components/Item/TextItem/Item.js","components/Item/AppItem/Item.js","components/Item/SpacerItem/Item.js","components/Item/Item.js","components/ItemGrid/DeleteItemButton.js","widgets/NoContentMessage.js","components/Item/ProgressiveLoadingContainer.js","components/ItemGrid/ItemGrid.js","components/FilterBar/FilterBadge.js","components/FilterBar/FilterBar.js","components/Dashboard/DashboardContent.js","components/Dashboard/ViewDashboard.js","components/ControlBar/ConfirmDeleteDialog.js","components/ControlBar/EditBar.js","components/Dashboard/EditDashboard.js","components/Dashboard/NewDashboard.js","components/Dashboard/Dashboard.js","components/Dashboard/dashboardModes.js","components/App.js","actions/user.js","locales/index.js","reducers/style.js","reducers/index.js","configureStore.js","index.js","components/ControlBar/styles/DashboardsBar.module.css","components/ItemSelector/styles/ContentMenuItem.module.css","components/ControlBar/styles/ControlBar.module.css","components/ControlBar/styles/ClearButton.module.css","modules/itemTypes.js","components/ItemSelector/styles/CategorizedMenuGroup.module.css"],"names":["module","exports","list","item","itemicon","link","deleteicon","deletebutton","orArray","param","Array","isArray","orObject","isObject","arrayToIdMap","array","reduce","obj","id","formatDate","value","uiLocale","global","Intl","DateTimeFormat","locale","year","month","day","format","Date","substr","replace","validateReducer","defaultValue","undefined","getBaseUrl","d2","api","Api","getApi","idx","baseUrl","indexOf","slice","getWithoutId","object","Object","_home_travis_build_dhis2_dashboards_app_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectSpread__WEBPACK_IMPORTED_MODULE_0__","DEFAULT_STATE_USER","username","isSuperuser","sGetUserUsername","state","user","DEFAULT_STATE_DASHBOARDS","byId","items","updateDashboardProp","dashboardId","prop","objectSpread","defineProperty","sGetDashboardsRoot","dashboards","sGetDashboardById","sDashboardsIsFetching","sGetAllDashboards","sGetDashboardItems","sGetStarredDashboards","values","filter","dashboard","starred","sGetUnstarredDashboards","sGetDashboardsSortedByStarred","concat","toConsumableArray","arraySort","getCustomDashboards","data","arrayFrom","map","d","index","name","displayName","description","displayDescription","favorite","owner","created","split","join","lastUpdated","access","numberOfItems","dashboardItems","length","type","isSpacerType","SPACER","text","isTextType","emptyTextItemContent","combineReducers","arguments","action","isLoading","showDescription","sGetSelectedRoot","selected","sGetSelectedId","sGetSelectedIsLoading","sGetSelectedShowDescription","DEFAULT_STATE_VISUALIZATIONS","isEmpty","p","sGetVisualization","visualizations","sGetVisualizationsRoot","getIdNameFields","rename","getDimensionFields","_ref2","withItems","arrayClean","getAxesFields","_ref3","getFavoriteFields","_ref4","withDimensions","withOptions","getFavoritesFields","_ref5","apiFetchFavorite","_ref6","fields","getInstance","then","get","getEndPointName","onError","error","console","log","getDashboardItemsFields","withFavorite","getDashboardFields","apiFetchDashboard","models","catch","apiStarDashboard","isStarred","url","post","delete","apiDeleteDashboard","MARGIN","NEW_ITEM_SHAPE","x","y","w","h","isNonNegativeInteger","Number","isInteger","hasShape","withShape","itemWithShape","assign","i","Error","col","row","Math","floor","itemWidth","GRID_ROW_HEIGHT","getShape","originalHeight","round","max","getOriginalHeight","getGridItemDomId","onItemResize","el","document","querySelector","isFunction","setViewportSize","setTimeout","clientWidth","clientHeight","sGetMessagesRoot","messages","getMessages","DEFAULT_STATE_SNACKBAR","message","duration","open","acCloseSnackbar","loadingDashboardMsg","SnackbarMessageContent","_ref","react_default","a","createElement","style","fontWeight","connect","_sGetSnackbar","snackbar","sGetSnackbar","snackbarOpen","snackbarMessage","snackbarDuration","onCloseSnackbar","props","Snackbar_default","zIndex","SnackbarMessage_SnackbarMessageContent","autoHideDuration","onClose","pluginIsAvailable","activeType","getPlugin","extractFavorite","REPORT_TABLE","reportTable","CHART","chart","MAP","EVENT_REPORT","eventReport","EVENT_CHART","eventChart","loadPlugin","plugin","config","credentials","load","loadingIndicator","auth","getId","getName","getLink","appUrl","itemTypeMap","asyncToGenerator","regenerator_default","mark","_callee","visualization","_args","wrap","_context","prev","next","stop","_x","_x2","_x3","_x4","apply","this","fetch","_callee2","fetchedFavorite","_context2","sent","abrupt","_x5","resize","unmount","getVisualizationConfig","originalType","extractedMapView","mapViews","find","mv","layer","includes","acSetSelectedId","acSetSelectedIsLoading","acReceivedVisualization","tLoadDashboard","dispatch","getState","dash","acAppendDashboards","Promise","resolve","t0","tSetSelectedDashboardById","snackbarTimeout","onSuccess","dashboardName","customDashboard","acSetDashboardItems","localStorage","setItem","forEach","MESSAGES","messageConversations","clearTimeout","DEFAULT_STATE_EDIT_DASHBOARD","NEW_DASHBOARD_STATE","sGetEditDashboardRoot","editDashboard","sGetIsEditing","sGetEditDashboardItems","DEFAULT_STATE_EDIT_ITEM_FILTERS","sGetEditItemFiltersRoot","editItemFilters","DEFAULT_STATE_ITEM_FILTERS","sGetItemFiltersRoot","itemFilters","sGetFiltersKeys","keys","acRemoveItemFilter","acRemoveEditItemFilter","saveDashboard","width","height","save","msg","response","uid","updateDashboard","postDashboard","create","acAddDashboardItem","itemPropName","propName","generateUid","content","acUpdateDashboardItem","acRemoveDashboardItem","acSetDashboardStarred","tFetchDashboards","collection","paging","toArray","userRows","sGetControlBarUserRows","controlBar","sGetControlBarRoot","KEY","hasNamespace","currentUser","dataStore","has","getNamespace","apiGetControlBarRows","_callee3","namespace","_context3","t1","t2","key","apiPostControlBarRows","_callee4","rows","_context4","set","acSetControlBarUserRows","DEFAULT_DIMENSIONS","pe","FIXED_DIMENSIONS","ou","sGetDimensions","dimensions","DEFAULT_SETTINGS","keyDateFormat","keyAnalysisRelativePeriod","keyAnalysisDigitGroupSeparator","displayNameProperty","rootOrganisationUnit","sGetSettings","settings","sGetSettingsDisplayNameProperty","acSetDimensions","keyBy","sortBy","toLowerCase","styles","showMore","color","colors","grey700","cursor","fontSize","paddingTop","&:hover","textDecoration","disabled","grey500","withStyles","onClick","isMaxHeight","classes","textAlign","className","i18n","t","MIN_ROW_COUNT","getRowsHeight","getNumRowsFromHeight","FIRST_ROW_PADDING_HEIGHT","getTopOffset","getControlBarHeight","ControlBar","_this","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","onStartDrag","setState","dragging","window","addEventListener","onDrag","onEndDrag","event","preventDefault","stopPropagation","newHeight","clientY","onChangeHeight","requestAnimationFrame","removeEventListener","draghandle","onMouseDown","rootStyle","top","backgroundColor","editMode","yellow050","white","paddingBottom","transition","root","children","renderDragHandle","React","Component","defaultProps","StarIcon","xmlns","viewBox","fill","apiPostDataStatistics","eventType","chip","margin","grey600","display","verticalAlign","icon","marginTop","unselected","label","chipProps","selectedState","Star","Link","to","debounce","Chip","AddCircleIcon","teal600","ClearIcon","grey800","ClearButton","onClear","button","Clear","ownerData","DEFAULT_STATE_DASHBOARDS_FILTER_NAME","DEFAULT_STATE_DASHBOARDS_FILTER_OWNER","order","sGetDashboardsFilterRoot","dashboardsFilter","sGetFilterName","KEYCODE_ENTER","KEYCODE_ESCAPE","filterField","searchIcon","Filter","_Component","setFilterValue","onChangeName","target","handleKeyUp","keyCode","onKeypressEnter","inherits","createClass","nextProps","_this$props","startAdornment","InputAdornment_default","position","Search_default","endAdornment","ControlBar_ClearButton","Input_default","placeholder","onChange","onKeyUp","Function","prototype","MAX_ROW_COUNT","DashboardsBar","_getPrototypeOf2","_len","args","_key","setInitialDashboardState","adjustedHeight","newRows","newRowCount","min","onToggleMaxHeight","onSelectDashboard","history","push","selectedId","onChangeFilterName","rowCount","controlBarHeight","contentWrapperStyle","padding","overflowY","components_ControlBar_ControlBar","leftControls","marginRight","AddCircle","ControlBar_Filter","ControlBar_DashboardItemChip","ControlBar_ShowMoreButton","mapDispatchToProps","withRouter","stateProps","dispatchProps","ownProps","displayDashboards","HeaderMenuItem","title","MenuItem","dense","LaunchIcon","LaunchLink","e","launchLink","rel","href","Launch","InsertButton","buttonInsert","ContentMenuItem","onInsert","ItemIcon","getItemIcon","menuItem","ContentMenuItem_LaunchLink","ContentMenuItem_InsertButton","singleItems","header","TEXT","spacerContent","categorizedItems","USERS","REPORTS","RESOURCES","APP","listItemTypes","CategorizedMenuGroup","addItem","tAddListItemContent","newItem","toggleSeeMore","seeMore","onChangeItemsLimit","_this2","_this$props2","hasMore","react","ItemSelector_HeaderMenuItem","itemUrl","getItemUrl","context","ItemSelector_ContentMenuItem","showMoreButton","Divider","contextTypes","PropTypes","isRequired","dashboardItem","listItemType","dashboardItemIndex","findIndex","category","addToDashboard","ItemSearchField","InputField","filled","onFocus","ItemSelector","closeList","openList","fetchItems","anchorEl","currentTarget","setFilter","getCategorizedMenuGroups","itemType","endPointName","allItems","maxOptions","ItemSelector_CategorizedMenuGroup","pluralTitle","getSinglesMenuGroups","ItemSelector_SinglesMenuGroup","getMenuGroups","queryString","add","Set","ItemSelector_ItemSearchField","Popover_default","anchorOrigin","horizontal","vertical","transformOrigin","PaperProps","disableAutoFocus","disableRestoreFocus","Menu","EditTitleBar","onChangeTitle","onChangeDescription","section","titleDescription","TextField_default","variant","multiline","InputProps","input","underline","itemSelector","components_ItemSelector_ItemSelector","selectedDashboard","justifyContent","flex","clear","&::before","borderBottom","&:hover::before","borderRadius","peId","ouId","FilterDialog","onConfirm","dimension","selectedItems","dialogId","commonProps","onSelect","onDeselect","onReorder","build","selectedPeriods","ouItems","dialogTitle","Dialog_default","maxWidth","disableEnforceFocus","dialogContent","DialogActions_default","Button","kind","DEFAULT_STATE_ACTIVE_MODAL_DIMENSION","sGetActiveModalDimension","activeModalDimension","acSetActiveModalDimension","FilterSelector","openPanel","closePanel","closeDialog","clearActiveModalDimension","selectDimension","setActiveModalDimension","onSelectItems","dimensionId","setEditItemFilters","onDeselectItems","itemIdsToRemove","newList","removeEditItemFilter","onReorderItems","itemIds","oldList","reorderedList","saveFilter","filterItems","addItemFilter","removeItemFilter","theme","selectedDimensions","ArrowDropDown_default","Boolean","fontFamily","typography","onDimensionClick","selectedIds","ItemFilter_FilterDialog","filters","withTheme","Info","show","toggle","InfoOutlined_default","NO_DESCRIPTION","actions","alignItems","marginLeft","starIcon","textButton","minWidth","editLink","titleBar","titleBarIcon","ViewTitleBar","toggleSharingDialog","sharingDialogIsOpen","onStarClick","onInfoClick","titleStyle","userSelect","StarBorder","TitleBar_Info","update","manage","ItemFilter_FilterSelector","d2_ui_sharing_dialog_default","onRequestClose","tStarDashboard","TitleBar","edit","TitleBar_EditTitleBar","TitleBar_ViewTitleBar","DefaultPlugin","pluginCredentials","shouldPluginReload","prevProps","reloadAllowed","filtersChanged","vis","prevVis","visChanged","reloadPlugin","pluginManager","currentVis","useActiveType","getActiveType","defaultHeaders","Authorization","textDiv","HEADER_HEIGHT","ItemHeader","actionButtons","scrollContainer","line","border","ItemFooter","objectId","d2_ui_interpretations_default","appName","ItemHeaderButton","iconBase","buttonBase","buttonDisabled","opacity","toggleFooterPadding","baseStyle","container","disabledStyle","activeStyle","inactiveStyle","getItemTypeId","visualizationType","domainType","VisualizationItemHeaderButtons","onSelectVisualization","activeFooter","onToggleFooter","toggleFooterBase","toggleFooter","VISUALIZATION_TYPE_CHART","match","tableButtonStyle","tableBtnStyle","chartButtonStyle","chartBtnStyle","mapButtonStyle","mapBtnStyle","components_Item_ItemHeaderButton","Message_default","VISUALIZATION_TYPE_TABLE","ViewList_default","InsertChart_default","DOMAIN_TYPE_AGGREGATE","VISUALIZATION_TYPE_MAP","Public_default","memoizeOne","fn","lastArgs","lastValue","every","arg","overflow","textOverflow","whiteSpace","fontStretch","lineHeight","applyFilters","visRows","visColumns","columns","visFilters","dimensionFound","dimensionObjects","Item","showFooter","configLoaded","getUniqueKey","uniqueId","getPluginComponent","getContentStyle","data_visualizer_plugin_build","forDashboard","VisualizationItem_DefaultPlugin","onToggleItemExpanded","getTitle","itemName","Launch_default","getActionButtons","ItemHeaderButtons","contentRef","offsetHeight","createRef","_componentDidMount","onVisualizationLoaded","_this$props3","Item_ItemHeader","ref","VisualizationItem_ItemFooter","acReceivedActiveVisualization","Line","PRIVATE","messageTypes","_messageTypes","listStyleType","paddingLeft","seeAll","marginBottom","sender","snippet","maxHeight","MessagesItem","getMessageHref","msgIdentifier","messageType","getMessageSender","latestMsg","getMessageItems","editClass","readClass","read","msgDate","location","messageCount","userSettings","widgets_Line","string","MessagesContainer","NotSupportedItem","NotInterested_default","align","DescriptionIcon","DeleteIcon","red500","getItemTitle","removeContent","handler","contentToRemove","ListItem","tRemoveListItemContent","contentItems","getContentItems","contentItem","Description","deleteButton","Delete","grey900","newContent","textField","onChangeText","updatedItem","d2_ui_rich_text","onEdit","fullWidth","textDivStyle","viewItem","getIframeSrc","appDetails","iframeSrc","launchUrl","ouIds","ouPath","AppItem","appKey","system","installedApps","app","src","SpacerItem","GridItem","VisualizationItem","TextItem","getGridItem","right","DeleteItemHeaderButton","Delete_default","NoContentMessage","ProgressiveLoadingContainer","shouldLoad","containerRef","shouldLoadHandler","bufferPx","bufferFactor","innerHeight","rect","getBoundingClientRect","bottom","removeHandler","checkShouldLoad","debounceMs","registerHandler","_this3","objectWithoutProperties","ItemGrid","expandedItems","clickedId","isExpanded","onRemoveItem","onLayoutChange","newLayout","acUpdateDashboardLayout","onResizeStop","layout","oldItem","isPluginType","pluginResize","onRemoveItemWrapper","widgets_NoContentMessage","expandedItem","hProp","minH","ScreenCover","CircularProgress","react_grid_layout_default","cols","rowHeight","innerWidth","compactType","isDraggable","isResizable","draggableCancel","itemClassNames","Item_ProgressiveLoadingContainer","DeleteItemButton","Item_Item_Item","validItems","badgeContainer","badge","badgeRemove","FilterBadge","onRemove","count","FilterBar","onBadgeRemove","onBadgeClick","bar","FilterBar_FilterBadge","removeItemFIlter","filtersSelector","createSelector","arr","flexWrap","DashboardContent","components_TitleBar_TitleBar","components_FilterBar_FilterBar","components_ItemGrid_ItemGrid","Content","hasDashboardContent","dashboardsIsEmpty","Dashboard_DashboardContent","dashboardsLoaded","contentNotReady","ControlBar_DashboardsBar","Dashboard_DashboardVerticalOffset","ViewDashboard_Content","ConfirmDeleteDialog","onDeleteConfirmed","onContinueEditing","secondary","destructive","DialogTitle_default","DialogContent_default","DialogContentText_default","buttonBarStyle","EditBar","translationDialogIsOpen","dashboardModel","confirmDeleteDialogOpen","redirectUrl","onConfirmDelete","onSave","newId","onDiscard","onDiscardChanges","onDelete","onTranslationsSaved","translations","dbLocale","translation","property","onTranslate","fetchDashboardModel","toggleTranslationDialog","confirmDeleteDialog","deleteAccess","ControlBar_ConfirmDeleteDialog","translationDialog","d2_ui_translation_dialog_default","objectToTranslate","fieldsToTranslate","onTranslationSaved","onTranslationError","err","Redirect","updateAccess","discardBtnText","primary","rightControls","sGetIsNewDashboard","dashboardToSave","_x6","_x7","tDeleteDashboard","acSetDashboardDisplayName","EditDashboard","initialized","initEditDashboard","setEditDashboard","getDashboardContent","EditDashboard_Content","ControlBar_EditBar","NewDashboard","setNewDashboard","Dashboard","setDashboard","params","selectDashboard","scrollToTop","scrollTo","mode","Dashboard_EditDashboard","Dashboard_NewDashboard","Dashboard_ViewDashboard","dashboardToSelect","preferredId","getItem","App","setCurrentUser","fetchDashboards","setControlBarRows","setDimensions","HeaderBar_default","HashRouter","Switch","Route","exact","path","render","components_Dashboard_Dashboard","components_SnackbarMessage_SnackbarMessage","childContextTypes","controlBarRows","displayNameProp","filteredDimensions","apiFetchDimensions","dim","dimensionType","dataDimensionType","tSetDimensions","moment","addResources","enTranslations","loTranslations","svTranslations","urTranslations","viTranslations","setDefaultNamespace","changeLanguage","objectClean","conversations","$merge","d2Object","keyUiLocale","authorities","newState","k","$unshift","idToRemove","$splice","stateItems","newStateItems","stateItem","si","$set","configureStore","middleware","thunk","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","createStore","reducer","applyMiddleware","dhis2theme","palette","dark","configI18n","sources","manifest","isProd","getManifest","info","version","manifest_generated_at","process","activities","dhis","dhis2","apiVersion","headers","schemas","getUserSettings","d2Init","initializedD2","ReactDOM","es","store","createMuiTheme","src_components_App","getElementById","init","hasOwnProperty","pluginName","_itemTypeMap","_home_travis_build_dhis2_dashboards_app_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_defineProperty__WEBPACK_IMPORTED_MODULE_0__","TableIcon","ChartIcon","MapIcon","ExtensionIcon","PersonIcon","FontDownloadIcon","EmailIcon","CropFreeIcon","NotInterestedIcon"],"mappings":"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","file":"static/js/main.67eed475.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"Item_list__2oHc1\",\"item\":\"Item_item__lO40M\",\"itemicon\":\"Item_itemicon__dv5ah\",\"link\":\"Item_link__2gULT\",\"deleteicon\":\"Item_deleteicon__3c7bl\",\"deletebutton\":\"Item_deletebutton__1DfY5\"};","import isObject from 'lodash/isObject';\n\n// validation\nexport function orNull(param) {\n    return param === undefined ? null : param;\n}\n\nexport function orArray(param) {\n    return Array.isArray(param) ? param : [];\n}\n\nexport function orObject(param) {\n    return isObject(param) ? param : {};\n}\n\n// array\nexport function arrayGetById(array, id) {\n    return array.find(item => item.id === id);\n}\n\n// object\nexport function arrayToIdMap(array) {\n    return array.reduce((obj, item) => {\n        obj[item.id] = item;\n        return obj;\n    }, {});\n}\n\n// date\nexport function getDate() {\n    const y = Math.floor(Math.random() * 3) + 2015;\n    const M = Math.floor(Math.random() * 12) + 1;\n    const d = Math.floor(Math.random() * 28) + 1;\n    // const h = Math.floor(Math.random() * 23) + 1;\n    // const m = Math.floor(Math.random() * 59) + 1;\n    // const s = Math.floor(Math.random() * 59) + 1;\n\n    return new Date(`${y}-${M}-${d}`)\n        .toJSON()\n        .replace('T', ' ')\n        .substr(0, 10);\n}\n\nexport const formatDate = (value, uiLocale) => {\n    if (typeof global.Intl !== 'undefined' && Intl.DateTimeFormat) {\n        const locale = uiLocale || 'en';\n        return new Intl.DateTimeFormat(locale, {\n            year: 'numeric',\n            month: 'short',\n            day: 'numeric',\n        }).format(new Date(value));\n    }\n\n    return value.substr(0, 19).replace('T', ' ');\n};\n\n/**\n * Sorts an array of objects based on provided date property\n *\n * @param {Array} items Array of objects\n * @param {String} dateProp Name of the date property to be used for sorting\n * @param {Boolean} ascending Whether to sort ascending or descending\n */\nexport const sortByDate = (items, dateProp, ascending = true) => {\n    const values = Object.values(items);\n\n    values.sort((a, b) => {\n        const aDate = new Date(a[dateProp]);\n        const bDate = new Date(b[dateProp]);\n\n        return ascending ? aDate - bDate : bDate - aDate;\n    });\n\n    return values;\n};\n\n// reducer validator\nexport const validateReducer = (value, defaultValue) =>\n    value === undefined || value === null ? defaultValue : value;\n\nexport const getBaseUrl = d2 => {\n    const api = d2.Api.getApi();\n    const idx = api.baseUrl.indexOf('/api');\n    return idx > -1 ? api.baseUrl.slice(0, idx) : api.baseUrl;\n};\n\nexport const getWithoutId = object => ({\n    ...object,\n    id: undefined,\n});\n","export const RECEIVED_USER = 'RECEIVED_USER';\n\nexport const DEFAULT_STATE_USER = {\n    id: '',\n    username: '',\n    uiLocale: '',\n    isSuperuser: false,\n};\n\nexport default (state = DEFAULT_STATE_USER, action) => {\n    switch (action.type) {\n        case RECEIVED_USER: {\n            return fromD2ToUserObj(action.value);\n        }\n        default:\n            return state;\n    }\n};\n\nfunction fromD2ToUserObj(d2Object) {\n    return {\n        id: d2Object.id,\n        username: d2Object.username,\n        uiLocale: d2Object.settings.keyUiLocale,\n        isSuperuser: d2Object.authorities.has('ALL'),\n    };\n}\n\n// selectors\n\nexport const sGetUserId = state => state.user.id;\nexport const sGetUserUsername = state => state.user.username;\nexport const sGetIsSuperuser = state => state.user.isSuperuser;\nexport const sGetUiLocale = state => state.user.uiLocale;\n","/** @module reducers/dashboards */\n\nimport arrayFrom from 'd2-utilizr/lib/arrayFrom';\nimport arraySort from 'd2-utilizr/lib/arraySort';\n\nimport { orArray, orObject } from '../modules/util';\nimport {\n    SPACER,\n    isSpacerType,\n    isTextType,\n    emptyTextItemContent,\n} from '../modules/itemTypes';\n\nexport const SET_DASHBOARDS = 'SET_DASHBOARDS';\nexport const ADD_DASHBOARDS = 'ADD_DASHBOARDS';\nexport const SET_DASHBOARD_STARRED = 'SET_DASHBOARD_STARRED';\nexport const SET_DASHBOARD_DISPLAY_NAME = 'SET_DASHBOARD_DISPLAY_NAME';\nexport const SET_DASHBOARD_ITEMS = 'SET_DASHBOARD_ITEMS';\n\nexport const DEFAULT_STATE_DASHBOARDS = {\n    byId: null,\n    items: [],\n};\n\n// reducer helper functions\n\nconst updateDashboardProp = (state, dashboardId, prop, value) => ({\n    byId: {\n        ...state.byId,\n        [dashboardId]: {\n            ...state.byId[dashboardId],\n            [prop]: value,\n        },\n    },\n    items: state.items,\n});\n\n/**\n * Reducer that computes and returns the new state based on the given action\n * @function\n * @param {Object} state The current state\n * @param {Object} action The action to be evaluated\n * @returns {Object}\n */\nexport default (state = DEFAULT_STATE_DASHBOARDS, action) => {\n    switch (action.type) {\n        case SET_DASHBOARDS: {\n            return {\n                byId: action.value,\n                items: [],\n            };\n        }\n        case ADD_DASHBOARDS: {\n            return {\n                ...state,\n                byId: {\n                    ...state.byId,\n                    ...action.value,\n                },\n            };\n        }\n        case SET_DASHBOARD_STARRED: {\n            return updateDashboardProp(\n                state,\n                action.dashboardId,\n                'starred',\n                action.value\n            );\n        }\n        case SET_DASHBOARD_DISPLAY_NAME: {\n            return updateDashboardProp(\n                state,\n                action.dashboardId,\n                'displayName',\n                action.value\n            );\n        }\n        case SET_DASHBOARD_ITEMS: {\n            return {\n                ...state,\n                items: action.value,\n            };\n        }\n        default:\n            return state;\n    }\n};\n\n// root selector\n\nexport const sGetDashboardsRoot = state => state.dashboards;\n\n// selector level 1\n\n/**\n * Selector which returns a dashboard by id from the state object\n * If no matching dashboard is found it returns undefined\n * If dashboards.byId is null, then the dashboards api request\n * has not yet completed. If dashboards.byId is an empty object\n * then the dashboards api request is complete, but no dashboards\n * were returned\n *\n * @function\n * @param {Object} state The current state\n * @param {Number} id The id of the dashboard\n * @returns {Object | undefined}\n */\nexport const sGetDashboardById = (state, id) =>\n    orObject(sGetDashboardsRoot(state).byId)[id];\n\nexport const sDashboardsIsFetching = state => {\n    return sGetDashboardsRoot(state).byId === null;\n};\n\n/**\n * Selector which returns all dashboards (the byId object)\n *\n * @function\n * @param {Object} state The current state\n * @returns {Object | undefined}\n */\nexport const sGetAllDashboards = state =>\n    orObject(sGetDashboardsRoot(state).byId);\n\n/**\n * Selector which returns the current dashboard items\n *\n * @function\n * @param {Object} state The current state\n * @returns {Array}\n */\nexport const sGetDashboardItems = state => sGetDashboardsRoot(state).items;\n\n// selector level 2\n\nexport const sGetStarredDashboards = state =>\n    Object.values(sGetAllDashboards(state)).filter(\n        dashboard => dashboard.starred === true\n    );\n\nexport const sGetUnstarredDashboards = state =>\n    Object.values(sGetAllDashboards(state)).filter(\n        dashboard => dashboard.starred === false\n    );\n\n// selector level 3\n\nexport const sGetStarredDashboardIds = state => {\n    return sGetStarredDashboards(state).map(dashboard => dashboard.id);\n};\n\nexport const sGetUnstarredDashboardIds = state =>\n    sGetUnstarredDashboards(state).map(dashboard => dashboard.id);\n\nexport const sGetDashboardsSortedByStarred = state => [\n    ...arraySort(sGetStarredDashboards(state), 'ASC', 'displayName'),\n    ...arraySort(sGetUnstarredDashboards(state), 'ASC', 'displayName'),\n];\n\n// utils\n\n/**\n * Returns the array of dashboards, customized for ui\n * @function\n * @param {Array} data The original dashboard list\n * @returns {Array}\n */\nexport const getCustomDashboards = data => {\n    const uiItems = items =>\n        items.map(item => {\n            const type = isSpacerType(item) ? SPACER : item.type;\n            const text = isTextType(item)\n                ? item.text === emptyTextItemContent\n                    ? ''\n                    : item.text\n                : null;\n\n            return {\n                ...item,\n                ...(text !== null ? { text } : {}),\n                type,\n            };\n        });\n\n    return arrayFrom(data).map((d, index) => ({\n        id: d.id,\n        name: d.name,\n        displayName: d.displayName,\n        description: d.description,\n        displayDescription: d.displayDescription,\n        starred: d.favorite,\n        owner: d.user.name,\n        created: d.created\n            .split('T')\n            .join(' ')\n            .substr(0, 16),\n        lastUpdated: d.lastUpdated\n            .split('T')\n            .join(' ')\n            .substr(0, 16),\n        access: d.access,\n        numberOfItems: orArray(d.dashboardItems).length,\n        dashboardItems: uiItems(d.dashboardItems),\n    }));\n};\n","/** @module reducers/selected */\nimport { combineReducers } from 'redux';\n\nimport { validateReducer } from '../modules/util';\n\nexport const SET_SELECTED_ID = 'SET_SELECTED_ID';\nexport const SET_SELECTED_ISLOADING = 'SET_SELECTED_ISLOADING';\nexport const SET_SELECTED_SHOWDESCRIPTION = 'SET_SELECTED_SHOWDESCRIPTION';\n\nexport const DEFAULT_STATE_SELECTED_ID = null;\nexport const DEFAULT_STATE_SELECTED_ISLOADING = false;\nexport const DEFAULT_STATE_SELECTED_SHOWDESCRIPTION = false;\n\n/**\n * Reducer functions that computes and returns the new state based on the given action\n * @function\n * @param {Object} state The current state\n * @param {Object} action The action to be evaluated\n */\nconst id = (state = DEFAULT_STATE_SELECTED_ID, action) => {\n    switch (action.type) {\n        case SET_SELECTED_ID:\n            return validateReducer(action.value, DEFAULT_STATE_SELECTED_ID);\n        default:\n            return state;\n    }\n};\n\nconst isLoading = (state = DEFAULT_STATE_SELECTED_ISLOADING, action) => {\n    switch (action.type) {\n        case SET_SELECTED_ISLOADING:\n            return validateReducer(\n                action.value,\n                DEFAULT_STATE_SELECTED_ISLOADING\n            );\n        default:\n            return state;\n    }\n};\n\nconst showDescription = (\n    state = DEFAULT_STATE_SELECTED_SHOWDESCRIPTION,\n    action\n) => {\n    switch (action.type) {\n        case SET_SELECTED_SHOWDESCRIPTION:\n            return validateReducer(\n                action.value,\n                DEFAULT_STATE_SELECTED_SHOWDESCRIPTION\n            );\n        default:\n            return state;\n    }\n};\n\nexport default combineReducers({\n    id,\n    isLoading,\n    showDescription,\n});\n\n// Selectors\n\nexport const sGetSelectedRoot = state => state.selected;\n\nexport const sGetSelectedId = state => sGetSelectedRoot(state).id;\n\nexport const sGetSelectedIsLoading = state => sGetSelectedRoot(state).isLoading;\n\nexport const sGetSelectedShowDescription = state =>\n    sGetSelectedRoot(state).showDescription;\n","import { orObject } from '../modules/util';\nimport objectClean from 'd2-utilizr/lib/objectClean';\n\n/** @module reducers/visualizations */\n\nexport const RECEIVED_VISUALIZATION = 'RECEIVED_VISUALIZATION';\nexport const RECEIVED_ACTIVE_VISUALIZATION = 'RECEIVED_ACTIVE_VISUALIZATION';\n\nexport const DEFAULT_STATE_VISUALIZATIONS = {};\n\nconst isEmpty = p => p === undefined || p === null;\n\nexport default (state = DEFAULT_STATE_VISUALIZATIONS, action) => {\n    switch (action.type) {\n        case RECEIVED_VISUALIZATION: {\n            return {\n                ...state,\n                [action.value.id]: objectClean(\n                    {\n                        ...orObject(state[action.value.id]),\n                        ...action.value,\n                    },\n                    isEmpty\n                ),\n            };\n        }\n        case RECEIVED_ACTIVE_VISUALIZATION: {\n            return {\n                ...state,\n                [action.id]: objectClean(\n                    {\n                        ...orObject(state[action.id]),\n                        activeType: action.activeType,\n                    },\n                    isEmpty\n                ),\n            };\n        }\n        default:\n            return state;\n    }\n};\n\n// root selector\nexport const sGetVisualizationsRoot = state => state.visualizations;\n\n// selectors level 1\nexport const sGetVisualization = (state, id) => {\n    return sGetVisualizationsRoot(state)[id];\n};\n","import { getInstance } from 'd2';\nimport arrayClean from 'd2-utilizr/lib/arrayClean';\n\nimport { getEndPointName } from '../modules/itemTypes';\n\n// Id, name\nexport const getIdNameFields = ({ rename } = {}) => [\n    'id',\n    `${rename ? 'displayName~rename(name)' : 'name,displayName'}`,\n];\n\n// Item\nexport const getItemFields = () => [\n    'dimensionItem~rename(id)',\n    'displayName~rename(name)',\n    'dimensionItemType',\n];\n\n// Dimension\nexport const getDimensionFields = ({ withItems }) =>\n    arrayClean([\n        'dimension',\n        'legendSet[id]',\n        'filter',\n        withItems ? `items[${getItemFields().join(',')}]` : ``,\n    ]);\n\n// Axis\nexport const getAxesFields = ({ withItems }) => [\n    `columns[${getDimensionFields({ withItems }).join(',')}]`,\n    `rows[${getDimensionFields({ withItems }).join(',')}]`,\n    `filters[${getDimensionFields({ withItems }).join(',')}]`,\n];\n\n// Favorite\nexport const getFavoriteFields = ({ withDimensions, withOptions }) => {\n    return arrayClean([\n        `${getIdNameFields({ rename: true }).join(',')}`,\n        'displayDescription~rename(description)',\n        withDimensions ? `${getAxesFields({ withItems: true }).join(',')}` : ``,\n        withOptions\n            ? [\n                  '*',\n                  '!attributeDimensions',\n                  '!attributeValues',\n                  '!category',\n                  '!categoryDimensions',\n                  '!categoryOptionGroupSetDimensions',\n                  '!columnDimensions',\n                  '!dataDimensionItems',\n                  '!dataElementDimensions',\n                  '!dataElementGroupSetDimensions',\n                  '!filterDimensions',\n                  '!itemOrganisationUnitGroups',\n                  '!lastUpdatedBy',\n                  '!organisationUnitGroupSetDimensions',\n                  '!organisationUnitLevels',\n                  '!organisationUnits',\n                  '!programIndicatorDimensions',\n                  '!relativePeriods',\n                  '!reportParams',\n                  '!rowDimensions',\n                  '!series',\n                  '!translations',\n                  '!userOrganisationUnit',\n                  '!userOrganisationUnitChildren',\n                  '!userOrganisationUnitGrandChildren',\n              ].join(',')\n            : '',\n    ]);\n};\n\nexport const getFavoritesFields = ({ withDimensions, withOptions }) => [\n    `reportTable[${getFavoriteFields({ withDimensions }).join(',')}]`,\n    `chart[${['type', ...getFavoriteFields({ withDimensions })].join(',')}]`,\n    `map[${getFavoriteFields({ withDimensions }).join(',')}]`,\n    `eventReport[${getFavoriteFields({ withDimensions }).join(',')}]`,\n    `eventChart[${getFavoriteFields({ withDimensions }).join(',')}]`,\n];\n\n// List item\nexport const getListItemFields = () => [\n    `reports[${getIdNameFields({ rename: true }).join(',')}]`,\n    `resources[${getIdNameFields({ rename: true }).join(',')}]`,\n    `users[${getIdNameFields({ rename: true }).join(',')}]`,\n];\n\n// Map\nexport const getMapFields = () => [\n    `${getIdNameFields({ rename: true }).join(',')}`,\n    'user,longitude,latitude,zoom,basemap',\n    `mapViews[${getFavoriteFields({\n        withDimensions: true,\n        withOptions: true,\n    })}]`,\n];\n\n// Api\n\n// Get more info about the favorite of a dashboard item\nexport const apiFetchFavorite = (id, type, { fields }) =>\n    getInstance().then(d2 =>\n        d2.Api.getApi().get(`${getEndPointName(type)}/${id}`, {\n            fields:\n                fields ||\n                getFavoriteFields({\n                    withDimensions: true,\n                    withOptions: true,\n                }),\n        })\n    );\n","import arrayClean from 'd2-utilizr/lib/arrayClean';\nimport {\n    getListItemFields,\n    getFavoritesFields,\n    getIdNameFields,\n} from './metadata';\n\n// Helper functions\n\nexport const onError = error => console.log('Error: ', error);\n\n// Dashboard item\nexport const getDashboardItemsFields = ({ withFavorite } = {}) =>\n    arrayClean([\n        'id',\n        'type',\n        'shape',\n        'x',\n        'y',\n        'width~rename(w)',\n        'height~rename(h)',\n        'messages',\n        'text',\n        'appKey',\n        `${getListItemFields().join(',')}`,\n        withFavorite\n            ? `${getFavoritesFields({\n                  withDimensions: withFavorite.withDimensions,\n              }).join(',')}`\n            : ``,\n    ]);\n\n// Dashboard\nexport const getDashboardFields = ({ withItems, withFavorite } = {}) =>\n    arrayClean([\n        `${getIdNameFields().join(',')}`,\n        'description',\n        'displayDescription',\n        'favorite',\n        `user[${getIdNameFields({ rename: true }).join(',')}]`,\n        'created',\n        'lastUpdated',\n        'access',\n        withItems\n            ? `dashboardItems[${getDashboardItemsFields({\n                  withFavorite,\n              }).join(',')}]`\n            : ``,\n    ]);\n","import { getInstance } from 'd2';\nimport arrayClean from 'd2-utilizr/lib/arrayClean';\nimport { onError, getDashboardFields } from './index';\n\n// Get \"all\" dashboards on startup\nexport const apiFetchDashboards = () =>\n    getInstance()\n        .then(d2 =>\n            d2.models.dashboard.list({\n                fields: [\n                    getDashboardFields().join(','),\n                    'dashboardItems[id]',\n                ].join(','),\n                paging: 'false',\n            })\n        )\n        .catch(onError);\n\n// Get more info about selected dashboard\nexport const apiFetchDashboard = id =>\n    getInstance()\n        .then(d2 =>\n            d2.models.dashboard.get(id, {\n                fields: arrayClean(\n                    getDashboardFields({\n                        withItems: true,\n                        withFavorite: { withDimensions: false },\n                    })\n                ).join(','),\n            })\n        )\n        .catch(onError);\n\n// Star dashboard\nexport const apiStarDashboard = (id, isStarred) => {\n    const url = `dashboards/${id}/favorite`;\n\n    getInstance().then(d2 => {\n        if (isStarred) {\n            d2.Api.getApi().post(url);\n        } else {\n            d2.Api.getApi().delete(url);\n        }\n    });\n};\n\nexport const apiDeleteDashboard = id => {\n    return getInstance()\n        .then(d2 => {\n            return d2.models.dashboards\n                .get(id)\n                .then(dashboard => dashboard.delete());\n        })\n        .catch(onError);\n};\n","import isFunction from 'd2-utilizr/lib/isFunction';\n\nimport { orObject } from '../../modules/util';\n\n// Dimensions for the react-grid-layout\n\nexport const GRID_COMPACT_TYPE = 'vertical'; // vertical | horizonal | null\nexport const GRID_ROW_HEIGHT = 10;\nconst GRID_COLUMN_WIDTH_PX = 20;\nconst GRID_LAYOUT = 'FLEXIBLE'; // FIXED | FLEXIBLE\nexport const MARGIN = [10, 10];\n\nexport const NEW_ITEM_SHAPE = { x: 0, y: 0, w: 20, h: 29 };\nexport const ITEM_MIN_HEIGHT = 4;\n\n// Dimensions for getShape\n\nconst NUMBER_OF_ITEM_COLS = 2;\nconst GRID_COLUMNS = 60;\n\nexport const getGridColumns = () => {\n    switch (GRID_LAYOUT) {\n        case 'FLEXIBLE':\n            return GRID_COLUMNS;\n        case 'FIXED':\n            return Math.floor((window.innerWidth - 20) / GRID_COLUMN_WIDTH_PX);\n        default:\n            return GRID_COLUMNS;\n    }\n};\n\n// isNonNegativeInteger\n\nconst isNonNegativeInteger = x => Number.isInteger(x) && x >= 0;\n\n// Does the item have all the shape properties?\n\nexport const hasShape = item =>\n    isNonNegativeInteger(item.x) &&\n    isNonNegativeInteger(item.y) &&\n    isNonNegativeInteger(item.w) &&\n    isNonNegativeInteger(item.h);\n\n// returns a rectangular grid block dimensioned with x, y, w, h in grid units.\n// based on a grid with 3 items across\nexport const getShape = i => {\n    if (!isNonNegativeInteger(i)) {\n        throw new Error('Invalid grid block number');\n    }\n\n    const col = i % NUMBER_OF_ITEM_COLS;\n    const row = Math.floor(i / NUMBER_OF_ITEM_COLS);\n    const itemWidth = Math.floor((GRID_COLUMNS - 1) / NUMBER_OF_ITEM_COLS);\n    const itemHeight = GRID_ROW_HEIGHT * 2;\n\n    return {\n        x: col * itemWidth,\n        y: row * itemHeight,\n        w: itemWidth,\n        h: itemHeight,\n    };\n};\n\n/**\n * Calculates the grid item's original height in pixels based\n * on the height in grid units. This calculation\n * is copied directly from react-grid-layout GridItem.js (calcPosition)\n *\n * @param {Object} item item containing shape (x, y, w, h)\n */\nconst getOriginalHeight = item => {\n    const originalHeight = Math.round(\n        GRID_ROW_HEIGHT * item.h + Math.max(0, item.h - 1) * MARGIN[1]\n    );\n\n    return { originalHeight };\n};\n\n/**\n * Returns an array of items containing the x, y, w, h dimensions\n * and the item's originalheight in pixels\n * @function\n * @param {Array} items\n * @returns {Array}\n */\n\nexport const withShape = items =>\n    items.map((item, index) => {\n        const itemWithShape = hasShape(item)\n            ? item\n            : Object.assign({}, item, getShape(index));\n\n        return Object.assign(\n            {},\n            itemWithShape,\n            getOriginalHeight(itemWithShape)\n        );\n    });\n\nexport const getGridItemDomId = id => `item-${id}`;\n\nexport function onItemResize(id) {\n    const el = orObject(document.querySelector(`#${getGridItemDomId(id)}`));\n    if (isFunction(el.setViewportSize))\n        setTimeout(\n            () => el.setViewportSize(el.clientWidth - 5, el.clientHeight - 5),\n            10\n        );\n}\n","import update from 'immutability-helper';\nimport { arrayToIdMap } from '../modules/util';\n\nexport const RECEIVED_MESSAGES = 'RECEIVED_MESSAGES';\n\nexport default (state = {}, action) => {\n    switch (action.type) {\n        case RECEIVED_MESSAGES: {\n            const conversations = arrayToIdMap(action.value);\n\n            const newState = update(state, { $merge: conversations });\n\n            return newState;\n        }\n        default:\n            return state;\n    }\n};\n\n// selectors\n\nexport const sGetMessagesRoot = state => state.messages;\n","import { getInstance } from 'd2';\n\nexport const getMessages = () => {\n    const fields =\n        'id,messageCount,lastUpdated,messageType,displayName,read,messages[id,read,sender[id,displayName],text,lastUpdated]';\n    const url = `/messageConversations?fields=${fields}&order=read:asc&pageSize=200`;\n    return getInstance()\n        .then(d2 => d2.Api.getApi().get(url))\n        .catch(error => console.log('Error:', error));\n};\n","export const RECEIVED_SNACKBAR_MESSAGE = 'RECEIVED_SNACKBAR_MESSAGE';\nexport const CLOSE_SNACKBAR = 'CLOSE_SNACKBAR';\n\nexport const DEFAULT_STATE_SNACKBAR = {\n    message: {},\n    duration: null,\n    open: false,\n};\n\nexport default (state = DEFAULT_STATE_SNACKBAR, action) => {\n    switch (action.type) {\n        case RECEIVED_SNACKBAR_MESSAGE: {\n            return { ...state, ...action.value };\n        }\n        case CLOSE_SNACKBAR: {\n            return DEFAULT_STATE_SNACKBAR;\n        }\n        default:\n            return state;\n    }\n};\n\n// selectors\n\nexport const sGetSnackbar = state => state.snackbar || DEFAULT_STATE_SNACKBAR;\n","import {\n    RECEIVED_SNACKBAR_MESSAGE,\n    CLOSE_SNACKBAR,\n} from '../reducers/snackbar';\n\nexport const acReceivedSnackbarMessage = value => ({\n    type: RECEIVED_SNACKBAR_MESSAGE,\n    value,\n});\n\nexport const acCloseSnackbar = () => ({\n    type: CLOSE_SNACKBAR,\n});\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport Snackbar from '@material-ui/core/Snackbar';\n\nimport { sGetSnackbar } from '../../reducers/snackbar';\nimport { acCloseSnackbar } from '../../actions/snackbar';\n\nconst LOADING_DASHBOARD = 'LOADING_DASHBOARD';\nexport const loadingDashboardMsg = { name: '', type: LOADING_DASHBOARD };\n\nconst SnackbarMessageContent = ({ message }) => {\n    if (typeof message === 'object') {\n        //future message types:  switch(message.type)\n        return (\n            <span>\n                Loading <span style={{ fontWeight: 800 }}>{message.name}</span>{' '}\n                dashboard\n            </span>\n        );\n    }\n    return message;\n};\n\nexport const SnackbarMessage = props => {\n    return (\n        <Snackbar\n            style={{ zIndex: 10001 }}\n            open={props.snackbarOpen}\n            message={<SnackbarMessageContent message={props.snackbarMessage} />}\n            autoHideDuration={props.snackbarDuration}\n            onClose={props.onCloseSnackbar}\n        />\n    );\n};\n\nconst mapStateToProps = state => {\n    const { message, duration, open } = sGetSnackbar(state);\n    return {\n        snackbarOpen: open,\n        snackbarMessage: message,\n        snackbarDuration: duration,\n    };\n};\n\nexport default connect(\n    mapStateToProps,\n    {\n        onCloseSnackbar: acCloseSnackbar,\n    }\n)(SnackbarMessage);\n","import isObject from 'lodash/isObject';\nimport { apiFetchFavorite, getMapFields } from '../../../api/metadata';\nimport {\n    REPORT_TABLE,\n    CHART,\n    MAP,\n    EVENT_REPORT,\n    EVENT_CHART,\n    itemTypeMap,\n    getPlugin,\n} from '../../../modules/itemTypes';\nimport { getBaseUrl, getWithoutId } from '../../../modules/util';\nimport { getGridItemDomId } from '../../ItemGrid/gridUtil';\n\nexport const THEMATIC_LAYER = 'thematic';\n\nexport const pluginIsAvailable = (item = {}, visualization = {}) => {\n    const type = visualization.activeType || item.type;\n\n    return !!getPlugin(type);\n};\n\nexport const extractFavorite = item => {\n    if (!isObject(item)) {\n        return null;\n    }\n\n    switch (item.type) {\n        case REPORT_TABLE:\n            return item.reportTable;\n        case CHART:\n            return item.chart;\n        case MAP:\n            return item.map;\n        case EVENT_REPORT:\n            return item.eventReport;\n        case EVENT_CHART:\n            return item.eventChart;\n        default:\n            return (\n                item.reportTable ||\n                item.chart ||\n                item.map ||\n                item.eventReport ||\n                item.eventChart ||\n                {}\n            );\n    }\n};\n\nexport const extractMapView = map =>\n    map.mapViews && map.mapViews.find(mv => mv.layer.includes(THEMATIC_LAYER));\n\nexport const loadPlugin = (plugin, config, credentials) => {\n    if (!(plugin && plugin.load)) {\n        return;\n    }\n\n    plugin.url = credentials.baseUrl;\n    plugin.loadingIndicator = true;\n    plugin.dashboard = true;\n    if (credentials.auth) {\n        plugin.auth = credentials.auth;\n    }\n    plugin.load(config);\n};\n\nexport const getId = item => extractFavorite(item).id;\nexport const getName = item => extractFavorite(item).name;\nexport const getDescription = item => extractFavorite(item).description;\nexport const getLink = (item, d2) => {\n    const baseUrl = getBaseUrl(d2);\n    const appUrl = itemTypeMap[item.type].appUrl(getId(item));\n\n    return `${baseUrl}/${appUrl}`;\n};\n\nexport const load = async (\n    item,\n    visualization,\n    credentials,\n    activeType,\n    filter = {}\n) => {\n    const config = {\n        ...visualization,\n        el: getGridItemDomId(item.id),\n    };\n\n    const type = activeType || item.type;\n    const plugin = getPlugin(type);\n\n    loadPlugin(plugin, config, credentials);\n};\n\nexport const fetch = async item => {\n    const fetchedFavorite = await apiFetchFavorite(getId(item), item.type, {\n        fields: item.type === MAP ? getMapFields() : null,\n    });\n\n    return fetchedFavorite;\n};\n\nexport const resize = item => {\n    const plugin = getPlugin(item.type);\n\n    if (plugin && plugin.resize) {\n        plugin.resize(getGridItemDomId(item.id));\n    }\n};\n\nexport const unmount = (item, activeType) => {\n    const plugin = getPlugin(activeType);\n\n    if (plugin && plugin.unmount) {\n        plugin.unmount(getGridItemDomId(item.id));\n    }\n};\n\nexport const getVisualizationConfig = (\n    visualization,\n    originalType,\n    activeType\n) => {\n    if (originalType === MAP && originalType !== activeType) {\n        const extractedMapView = extractMapView(visualization);\n\n        if (extractedMapView === undefined) {\n            return null;\n        }\n\n        return getWithoutId({\n            ...visualization,\n            ...extractedMapView,\n            mapViews: undefined,\n        });\n    }\n\n    return getWithoutId(visualization);\n};\n","import {\n    SET_SELECTED_ID,\n    SET_SELECTED_ISLOADING,\n    SET_SELECTED_SHOWDESCRIPTION,\n} from '../reducers/selected';\nimport {\n    RECEIVED_VISUALIZATION,\n    RECEIVED_ACTIVE_VISUALIZATION,\n} from '../reducers/visualizations';\nimport { sGetSelectedIsLoading } from '../reducers/selected';\nimport { sGetUserUsername } from '../reducers/user';\nimport { getCustomDashboards, sGetDashboardById } from '../reducers/dashboards';\nimport { apiFetchDashboard } from '../api/dashboards';\nimport { acSetDashboardItems, acAppendDashboards } from './dashboards';\nimport { withShape } from '../components/ItemGrid/gridUtil';\nimport { tGetMessages } from '../components/Item/MessagesItem/actions';\nimport { acReceivedSnackbarMessage, acCloseSnackbar } from './snackbar';\nimport { storePreferredDashboardId } from '../api/localStorage';\nimport { loadingDashboardMsg } from '../components/SnackbarMessage/SnackbarMessage';\nimport {\n    REPORT_TABLE,\n    CHART,\n    MAP,\n    EVENT_REPORT,\n    EVENT_CHART,\n    MESSAGES,\n} from '../modules/itemTypes';\nimport { extractFavorite } from '../components/Item/VisualizationItem/plugin';\nimport { orObject } from '../modules/util';\n\n// actions\n\nexport const acSetSelectedId = value => ({\n    type: SET_SELECTED_ID,\n    value,\n});\n\nexport const acSetSelectedIsLoading = value => ({\n    type: SET_SELECTED_ISLOADING,\n    value,\n});\n\nexport const acSetSelectedShowDescription = value => ({\n    type: SET_SELECTED_SHOWDESCRIPTION,\n    value,\n});\n\nexport const acReceivedVisualization = value => ({\n    type: RECEIVED_VISUALIZATION,\n    value,\n});\n\nexport const acReceivedActiveVisualization = (id, type, activeType) => {\n    const action = {\n        type: RECEIVED_ACTIVE_VISUALIZATION,\n        id,\n    };\n\n    if (activeType !== type) {\n        action.activeType = activeType;\n    }\n\n    return action;\n};\n\nexport const tLoadDashboard = id => async (dispatch, getState) => {\n    try {\n        const dash = await apiFetchDashboard(id);\n        dispatch(acAppendDashboards(dash));\n\n        return Promise.resolve(dash);\n    } catch (err) {\n        console.log('Error: ', err);\n        return err;\n    }\n};\n\n// thunks\nexport const tSetSelectedDashboardById = id => async (dispatch, getState) => {\n    dispatch(acSetSelectedIsLoading(true));\n\n    const snackbarTimeout = setTimeout(() => {\n        const dashboardName = orObject(sGetDashboardById(getState(), id))\n            .displayName;\n        if (sGetSelectedIsLoading(getState()) && dashboardName) {\n            loadingDashboardMsg.name = dashboardName;\n\n            dispatch(\n                acReceivedSnackbarMessage({\n                    message: loadingDashboardMsg,\n                    open: true,\n                })\n            );\n        }\n    }, 500);\n\n    const onSuccess = selected => {\n        const customDashboard = getCustomDashboards(selected)[0];\n\n        dispatch(\n            acSetDashboardItems(withShape(customDashboard.dashboardItems))\n        );\n\n        storePreferredDashboardId(sGetUserUsername(getState()), id);\n\n        // add visualizations to store\n        customDashboard.dashboardItems.forEach(item => {\n            switch (item.type) {\n                case REPORT_TABLE:\n                case CHART:\n                case MAP:\n                case EVENT_REPORT:\n                case EVENT_CHART:\n                    dispatch(acReceivedVisualization(extractFavorite(item)));\n                    break;\n                case MESSAGES:\n                    dispatch(tGetMessages(id));\n                    break;\n                default:\n                    break;\n            }\n        });\n\n        dispatch(acSetSelectedId(id));\n\n        dispatch(acSetSelectedIsLoading(false));\n\n        clearTimeout(snackbarTimeout);\n\n        dispatch(acCloseSnackbar());\n\n        return selected;\n    };\n\n    const onError = error => {\n        console.log('Error: ', error);\n        return error;\n    };\n\n    try {\n        const selected = await dispatch(tLoadDashboard(id));\n\n        return onSuccess(selected);\n    } catch (err) {\n        return onError(err);\n    }\n};\n","export const getPreferredDashboardId = username =>\n    localStorage.getItem(`dhis2.dashboard.current.${username}`) || undefined;\n\nexport const storePreferredDashboardId = (username, dashboardId) => {\n    localStorage.setItem(`dhis2.dashboard.current.${username}`, dashboardId);\n};\n","import { RECEIVED_MESSAGES } from '../../../reducers/messages';\nimport { getMessages } from '../../../api/messages';\n\nconst onError = (action, error) => {\n    console.log(`Error in action ${action}: ${error}`);\n    return error;\n};\n\nexport const receivedMessages = value => ({\n    type: RECEIVED_MESSAGES,\n    value,\n});\n\nexport const tGetMessages = dashboardItemId => async dispatch => {\n    try {\n        const messages = await getMessages();\n        const { messageConversations } = messages;\n\n        return dispatch(receivedMessages(messageConversations));\n    } catch (err) {\n        return onError('Get Messages', err);\n    }\n};\n","/** @module reducers/editDashboard */\nimport update from 'immutability-helper';\nimport isEmpty from 'lodash/isEmpty';\nimport { orArray, orObject } from '../modules/util';\n\nexport const RECEIVED_EDIT_DASHBOARD = 'RECEIVED_EDIT_DASHBOARD';\nexport const RECEIVED_NOT_EDITING = 'RECEIVED_NOT_EDITING';\nexport const START_NEW_DASHBOARD = 'START_NEW_DASHBOARD';\nexport const RECEIVED_TITLE = 'RECEIVED_TITLE';\nexport const RECEIVED_DESCRIPTION = 'RECEIVED_DESCRIPTION';\nexport const ADD_DASHBOARD_ITEM = 'ADD_DASHBOARD_ITEM';\nexport const REMOVE_DASHBOARD_ITEM = 'REMOVE_DASHBOARD_ITEM';\nexport const UPDATE_DASHBOARD_ITEM = 'UPDATE_DASHBOARD_ITEM';\nexport const RECEIVED_DASHBOARD_LAYOUT = 'RECEIVED_DASHBOARD_LAYOUT';\n\nexport const DEFAULT_STATE_EDIT_DASHBOARD = {};\nexport const NEW_DASHBOARD_STATE = {\n    id: '',\n    name: '',\n    access: {},\n    description: '',\n    dashboardItems: [],\n};\n\nexport default (state = DEFAULT_STATE_EDIT_DASHBOARD, action) => {\n    switch (action.type) {\n        case RECEIVED_EDIT_DASHBOARD:\n            const newState = {};\n            Object.keys(NEW_DASHBOARD_STATE).map(\n                k => (newState[k] = action.value[k])\n            );\n            return newState;\n        case RECEIVED_NOT_EDITING:\n            return DEFAULT_STATE_EDIT_DASHBOARD;\n        case START_NEW_DASHBOARD:\n            return NEW_DASHBOARD_STATE;\n        case RECEIVED_TITLE: {\n            return Object.assign({}, state, { name: action.value });\n        }\n        case RECEIVED_DESCRIPTION: {\n            return Object.assign({}, state, {\n                description: action.value,\n            });\n        }\n        case ADD_DASHBOARD_ITEM:\n            return update(state, {\n                dashboardItems: { $unshift: [action.value] },\n            });\n        case REMOVE_DASHBOARD_ITEM: {\n            const idToRemove = action.value;\n\n            const dashboardItemIndex = state.dashboardItems.findIndex(\n                item => item.id === idToRemove\n            );\n\n            if (dashboardItemIndex > -1) {\n                return update(state, {\n                    dashboardItems: {\n                        $splice: [[dashboardItemIndex, 1]],\n                    },\n                });\n            }\n\n            return state;\n        }\n        case RECEIVED_DASHBOARD_LAYOUT: {\n            const stateItems = orArray(state.dashboardItems);\n\n            const newStateItems = action.value.map(({ x, y, w, h, i }) => {\n                const stateItem = stateItems.find(si => si.id === i);\n\n                return Object.assign({}, stateItem, { w, h, x, y });\n            });\n\n            return update(state, {\n                dashboardItems: { $set: newStateItems },\n            });\n        }\n        case UPDATE_DASHBOARD_ITEM: {\n            const dashboardItem = action.value;\n\n            const dashboardItemIndex = state.dashboardItems.findIndex(\n                item => item.id === dashboardItem.id\n            );\n\n            if (dashboardItemIndex > -1) {\n                const newState = update(state, {\n                    dashboardItems: {\n                        $splice: [[dashboardItemIndex, 1, dashboardItem]],\n                    },\n                });\n\n                return newState;\n            }\n\n            return state;\n        }\n        default:\n            return state;\n    }\n};\n\n// root selector\n\nexport const sGetEditDashboardRoot = state => state.editDashboard;\n\n// selectors\n\nexport const sGetIsEditing = state => !isEmpty(state.editDashboard);\n\nexport const sGetIsNewDashboard = state => {\n    return (\n        !isEmpty(state.editDashboard) && sGetEditDashboardRoot(state).id === ''\n    );\n};\n\nexport const sGetEditDashboardItems = state =>\n    orObject(sGetEditDashboardRoot(state)).dashboardItems;\n","export const CLEAR_EDIT_ITEM_FILTERS = 'CLEAR_EDIT_ITEM_FILTERS';\nexport const REMOVE_EDIT_ITEM_FILTER = 'REMOVE_EDIT_ITEM_FILTER';\nexport const SET_EDIT_ITEM_FILTERS = 'SET_EDIT_ITEM_FILTERS';\n\nexport const DEFAULT_STATE_EDIT_ITEM_FILTERS = {};\n\nexport default (state = DEFAULT_STATE_EDIT_ITEM_FILTERS, action) => {\n    switch (action.type) {\n        case REMOVE_EDIT_ITEM_FILTER: {\n            const newState = { ...state };\n\n            delete newState[action.id];\n\n            return newState;\n        }\n        case SET_EDIT_ITEM_FILTERS: {\n            return action.filters;\n        }\n        case CLEAR_EDIT_ITEM_FILTERS: {\n            return DEFAULT_STATE_EDIT_ITEM_FILTERS;\n        }\n        default:\n            return state;\n    }\n};\n\n// selectors\n\nexport const sGetEditItemFiltersRoot = state => state.editItemFilters;\n\nexport const sGetEditFiltersKeys = state =>\n    Object.keys(sGetEditItemFiltersRoot(state));\n","export const CLEAR_ITEM_FILTERS = 'CLEAR_ITEM_FILTERS';\nexport const SET_ITEM_FILTERS = 'SET_ITEM_FILTERS';\nexport const ADD_ITEM_FILTER = 'ADD_ITEM_FILTER';\nexport const REMOVE_ITEM_FILTER = 'REMOVE_ITEM_FILTER';\n\nexport const DEFAULT_STATE_ITEM_FILTERS = {};\n\nexport default (state = DEFAULT_STATE_ITEM_FILTERS, action) => {\n    switch (action.type) {\n        case ADD_ITEM_FILTER: {\n            return {\n                ...state,\n                [action.filter.id]: action.filter.value,\n            };\n        }\n        case REMOVE_ITEM_FILTER: {\n            const newState = { ...state };\n\n            delete newState[action.id];\n\n            return newState;\n        }\n        case SET_ITEM_FILTERS: {\n            return action.filters;\n        }\n        case CLEAR_ITEM_FILTERS: {\n            return DEFAULT_STATE_ITEM_FILTERS;\n        }\n        default:\n            return state;\n    }\n};\n\n// selectors\n\nexport const sGetItemFiltersRoot = state => state.itemFilters;\n\nexport const sGetFiltersKeys = state => Object.keys(sGetItemFiltersRoot(state));\n","import {\n    ADD_ITEM_FILTER,\n    REMOVE_ITEM_FILTER,\n    SET_ITEM_FILTERS,\n    CLEAR_ITEM_FILTERS,\n} from '../reducers/itemFilters';\n\nexport const FILTER_ORG_UNIT = 'ou';\n\n// actions\n\nexport const acAddItemFilter = filter => ({\n    type: ADD_ITEM_FILTER,\n    filter,\n});\n\nexport const acRemoveItemFilter = id => ({\n    type: REMOVE_ITEM_FILTER,\n    id,\n});\n\nexport const acClearItemFilters = () => ({\n    type: CLEAR_ITEM_FILTERS,\n});\n\nexport const acSetItemFilters = filters => ({\n    type: SET_ITEM_FILTERS,\n    filters,\n});\n","import {\n    REMOVE_EDIT_ITEM_FILTER,\n    SET_EDIT_ITEM_FILTERS,\n    CLEAR_EDIT_ITEM_FILTERS,\n} from '../reducers/editItemFilters';\n\n// actions\n\nexport const acRemoveEditItemFilter = id => ({\n    type: REMOVE_EDIT_ITEM_FILTER,\n    id,\n});\n\nexport const acClearEditItemFilters = () => ({\n    type: CLEAR_EDIT_ITEM_FILTERS,\n});\n\nexport const acSetEditItemFilters = filters => ({\n    type: SET_EDIT_ITEM_FILTERS,\n    filters,\n});\n","import { getInstance } from 'd2';\n\nconst onError = error => console.log('Error: ', error);\n\nconst saveDashboard = (dashboard, data) => {\n    const { name, description, dashboardItems } = data;\n\n    dashboard.name = name;\n    dashboard.description = description;\n    dashboard.dashboardItems = dashboardItems.map(item =>\n        Object.assign({}, item, { width: item.w, height: item.h })\n    );\n\n    return dashboard.save().then(msg => msg.response.uid);\n};\n\nexport const updateDashboard = data => {\n    return getInstance()\n        .then(d2 => {\n            return d2.models.dashboards\n                .get(data.id)\n                .then(dashboard => saveDashboard(dashboard, data));\n        })\n        .catch(onError);\n};\n\nexport const postDashboard = data => {\n    return getInstance().then(d2 => {\n        const dashboard = d2.models.dashboards.create();\n\n        return saveDashboard(dashboard, data);\n    });\n};\n","import { generateUid } from 'd2/uid';\n\nimport {\n    RECEIVED_EDIT_DASHBOARD,\n    START_NEW_DASHBOARD,\n    RECEIVED_NOT_EDITING,\n    RECEIVED_TITLE,\n    RECEIVED_DESCRIPTION,\n    RECEIVED_DASHBOARD_LAYOUT,\n    ADD_DASHBOARD_ITEM,\n    UPDATE_DASHBOARD_ITEM,\n    REMOVE_DASHBOARD_ITEM,\n} from '../reducers/editDashboard';\nimport { sGetEditDashboardRoot } from '../reducers/editDashboard';\nimport { updateDashboard, postDashboard } from '../api/editDashboard';\nimport { tSetSelectedDashboardById } from '../actions/selected';\nimport { NEW_ITEM_SHAPE } from '../components/ItemGrid/gridUtil';\nimport {\n    itemTypeMap,\n    isSpacerType,\n    TEXT,\n    emptyTextItemContent,\n    isTextType,\n} from '../modules/itemTypes';\n\nconst onError = error => {\n    console.log('Error (Saving Dashboard): ', error);\n    return error;\n};\n\n// actions\n\nexport const acSetEditDashboard = (dashboard, items) => {\n    const val = {\n        ...dashboard,\n        dashboardItems: items,\n    };\n\n    return {\n        type: RECEIVED_EDIT_DASHBOARD,\n        value: val,\n    };\n};\n\nexport const acSetEditNewDashboard = () => ({\n    type: START_NEW_DASHBOARD,\n});\n\nexport const acClearEditDashboard = () => ({\n    type: RECEIVED_NOT_EDITING,\n});\n\nexport const acSetDashboardTitle = value => ({\n    type: RECEIVED_TITLE,\n    value,\n});\n\nexport const acSetDashboardDescription = value => ({\n    type: RECEIVED_DESCRIPTION,\n    value,\n});\n\nexport const acUpdateDashboardLayout = value => ({\n    type: RECEIVED_DASHBOARD_LAYOUT,\n    value,\n});\n\nexport const acAddDashboardItem = item => {\n    const type = item.type;\n    delete item.type;\n    const itemPropName = itemTypeMap[type].propName;\n\n    return {\n        type: ADD_DASHBOARD_ITEM,\n        value: {\n            id: generateUid(),\n            type,\n            [itemPropName]: item.content,\n            ...NEW_ITEM_SHAPE,\n        },\n    };\n};\n\nexport const acUpdateDashboardItem = item => ({\n    type: UPDATE_DASHBOARD_ITEM,\n    value: item,\n});\n\nexport const acRemoveDashboardItem = value => ({\n    type: REMOVE_DASHBOARD_ITEM,\n    value,\n});\n\n// thunks\n\nexport const tSaveDashboard = () => async (dispatch, getState) => {\n    const dashboard = sGetEditDashboardRoot(getState());\n\n    const dashboardItems = dashboard.dashboardItems.map(item => {\n        const text = isTextType(item)\n            ? item.text || emptyTextItemContent\n            : null;\n\n        const type = isSpacerType(item) ? TEXT : item.type;\n\n        return {\n            ...item,\n            ...(text ? { text } : {}),\n            type,\n        };\n    });\n\n    const dashboardToSave = {\n        ...dashboard,\n        dashboardItems,\n    };\n\n    try {\n        const dashboardId = dashboardToSave.id\n            ? await updateDashboard(dashboardToSave)\n            : await postDashboard(dashboardToSave);\n\n        dispatch(acClearEditDashboard());\n        await dispatch(tSetSelectedDashboardById(dashboardId));\n\n        return Promise.resolve(dashboardId);\n    } catch (error) {\n        onError(error);\n    }\n};\n","import {\n    SET_DASHBOARDS,\n    ADD_DASHBOARDS,\n    SET_DASHBOARD_STARRED,\n    SET_DASHBOARD_DISPLAY_NAME,\n    SET_DASHBOARD_ITEMS,\n} from '../reducers/dashboards';\nimport {\n    getCustomDashboards,\n    sGetDashboardById,\n    sGetDashboardsSortedByStarred,\n} from '../reducers/dashboards';\nimport { sGetUserUsername } from '../reducers/user';\nimport { tSetSelectedDashboardById, acSetSelectedId } from './selected';\nimport { sGetSelectedId } from '../reducers/selected';\nimport { sGetIsEditing } from '../reducers/editDashboard';\nimport { sGetEditItemFiltersRoot } from '../reducers/editItemFilters';\nimport { acSetItemFilters, acClearItemFilters } from './itemFilters';\nimport { acClearEditItemFilters } from './editItemFilters';\nimport { acClearEditDashboard } from './editDashboard';\nimport {\n    apiFetchDashboards,\n    apiStarDashboard,\n    apiDeleteDashboard,\n} from '../api/dashboards';\nimport { getPreferredDashboardId } from '../api/localStorage';\nimport { arrayToIdMap } from '../modules/util';\n\n// actions\n\nexport const acSetDashboards = dashboards => ({\n    type: SET_DASHBOARDS,\n    value: arrayToIdMap(getCustomDashboards(dashboards)),\n});\n\nexport const acAppendDashboards = dashboards => ({\n    type: ADD_DASHBOARDS,\n    value: arrayToIdMap(getCustomDashboards(dashboards)),\n});\n\nexport const acSetDashboardStarred = (dashboardId, isStarred) => ({\n    type: SET_DASHBOARD_STARRED,\n    dashboardId: dashboardId,\n    value: isStarred,\n});\n\nexport const acSetDashboardDisplayName = (dashboardId, value) => ({\n    type: SET_DASHBOARD_DISPLAY_NAME,\n    dashboardId,\n    value,\n});\n\nexport const acSetDashboardItems = value => ({\n    type: SET_DASHBOARD_ITEMS,\n    value,\n});\n\n// thunks\n\nexport const tFetchDashboards = () => async dispatch => {\n    const collection = await apiFetchDashboards();\n    dispatch(acSetDashboards(collection.toArray()));\n};\n\nexport const tSelectDashboard = id => async (dispatch, getState) => {\n    const onError = error => {\n        console.log('Error (apiFetchDashboards): ', error);\n        return error;\n    };\n\n    try {\n        const state = getState();\n\n        let dashboardToSelect = null;\n        if (id) {\n            dashboardToSelect = sGetDashboardById(state, id) || null;\n        } else {\n            const preferredId = getPreferredDashboardId(\n                sGetUserUsername(state)\n            );\n            const dash = sGetDashboardById(state, preferredId);\n            dashboardToSelect =\n                preferredId && dash\n                    ? dash\n                    : sGetDashboardsSortedByStarred(state)[0];\n        }\n\n        if (dashboardToSelect) {\n            dispatch(tSetSelectedDashboardById(dashboardToSelect.id));\n\n            if (dashboardToSelect.id === sGetSelectedId(state)) {\n                if (sGetIsEditing(state)) {\n                    // disable filters when switching to edit mode\n                    dispatch(acClearItemFilters());\n                } else {\n                    // enable filters when switching to view mode\n                    dispatch(acSetItemFilters(sGetEditItemFiltersRoot(state)));\n                }\n            } else {\n                // clear filters when switching dashboard\n                dispatch(acClearEditItemFilters());\n                dispatch(acClearItemFilters());\n            }\n        } else {\n            dispatch(acSetSelectedId(false));\n        }\n    } catch (err) {\n        return onError(err);\n    }\n};\n\nexport const tStarDashboard = (id, isStarred) => async (dispatch, getState) => {\n    const onSuccess = id => {\n        dispatch(acSetDashboardStarred(id, isStarred));\n        return id;\n    };\n\n    const onError = error => {\n        console.log('Error (apiStarDashboard): ', error);\n        return error;\n    };\n    try {\n        await apiStarDashboard(id, isStarred);\n        return onSuccess(id);\n    } catch (err) {\n        return onError(err);\n    }\n};\n\nexport const tDeleteDashboard = id => async (dispatch, getState) => {\n    try {\n        await apiDeleteDashboard(id);\n        dispatch(acClearEditDashboard());\n        dispatch(acSetSelectedId());\n        dispatch(acSetDashboardItems([]));\n\n        await dispatch(tFetchDashboards());\n\n        return Promise.resolve();\n    } catch (err) {\n        console.log('Error (deleteDashboard): ', err);\n        return err;\n    }\n};\n","/** @module reducers/controlBar */\nimport { combineReducers } from 'redux';\nimport { validateReducer } from '../modules/util';\n\nexport const SET_CONTROLBAR_USER_ROWS = 'SET_CONTROLBAR_USER_ROWS';\n\nexport const DEFAULT_STATE_CONTROLBAR_ROWS = 1;\n\nconst userRows = (state = DEFAULT_STATE_CONTROLBAR_ROWS, action) => {\n    switch (action.type) {\n        case SET_CONTROLBAR_USER_ROWS:\n            return validateReducer(action.value, DEFAULT_STATE_CONTROLBAR_ROWS);\n        default:\n            return state;\n    }\n};\n\nexport default combineReducers({\n    userRows,\n});\n\n/**\n * Selectors that point to specific props in the state object\n * @function\n * @param {Object} state\n * @returns {Object}\n */\nexport const sGetControlBarRoot = state => state.controlBar;\n\n// Selector dependency level 2\n\nexport const sGetControlBarUserRows = state =>\n    sGetControlBarRoot(state).userRows;\n","import { getInstance } from 'd2';\nimport { DEFAULT_STATE_CONTROLBAR_ROWS } from '../reducers/controlBar';\n\nconst NAMESPACE = 'dashboard';\nconst KEY = 'controlBarRows';\n\nconst hasNamespace = async d2 => await d2.currentUser.dataStore.has(NAMESPACE);\n\nconst getNamespace = async (d2, hasNamespace) =>\n    hasNamespace\n        ? await d2.currentUser.dataStore.get(NAMESPACE)\n        : await d2.currentUser.dataStore.create(NAMESPACE);\n\nexport const apiGetControlBarRows = async () => {\n    const d2 = await getInstance();\n    const namespace = await getNamespace(d2, await hasNamespace(d2));\n    const hasKey = namespace.keys && namespace.keys.find(key => key === KEY);\n\n    if (hasKey) {\n        return await namespace.get(KEY);\n    } else {\n        await apiPostControlBarRows(DEFAULT_STATE_CONTROLBAR_ROWS, namespace);\n        console.log(\n            '(These errors to /userDataStore/dashboard can be ignored)'\n        );\n        return DEFAULT_STATE_CONTROLBAR_ROWS;\n    }\n};\n\nexport const apiPostControlBarRows = async (rows, namespace) => {\n    const d2 = await getInstance();\n    const ns = namespace || (await getNamespace(d2, hasNamespace));\n\n    ns.set(KEY, rows);\n};\n","import { SET_CONTROLBAR_USER_ROWS } from '../reducers/controlBar';\nimport { apiGetControlBarRows } from '../api/controlBar';\n\n// actions\n\nexport const acSetControlBarUserRows = rows => ({\n    type: SET_CONTROLBAR_USER_ROWS,\n    value: rows,\n});\n\n// thunks\n\nexport const tSetControlBarRows = () => async (dispatch, getState) => {\n    const onSuccess = rows => {\n        dispatch(acSetControlBarUserRows(rows));\n    };\n\n    const onError = error => {\n        console.log('Error (apiGetControlBarRows): ', error);\n        return error;\n    };\n\n    try {\n        const controlBarRows = await apiGetControlBarRows();\n        return onSuccess(controlBarRows);\n    } catch (err) {\n        return onError(err);\n    }\n};\n","import { FIXED_DIMENSIONS } from '@dhis2/d2-ui-analytics';\n\nexport const SET_DIMENSIONS = 'SET_DIMENSIONS';\nexport const DEFAULT_DIMENSIONS = {\n    pe: FIXED_DIMENSIONS.pe,\n    ou: FIXED_DIMENSIONS.ou,\n};\n\nexport default (state = DEFAULT_DIMENSIONS, action) => {\n    switch (action.type) {\n        case SET_DIMENSIONS: {\n            return {\n                ...DEFAULT_DIMENSIONS,\n                ...action.value,\n            };\n        }\n        default:\n            return state;\n    }\n};\n\nexport const sGetDimensions = state => state.dimensions;\n","export const SET_SETTINGS = 'SET_SETTINGS';\nexport const ADD_SETTINGS = 'ADD_SETTINGS';\n\nexport const DEFAULT_SETTINGS = {\n    keyDateFormat: 'yyyy-MM-dd',\n    keyAnalysisRelativePeriod: 'LAST_12_MONTHS',\n    keyAnalysisDigitGroupSeparator: 'SPACE',\n    displayNameProperty: 'displayName',\n    uiLocale: 'en',\n    rootOrganisationUnit: {},\n};\n\nexport default (state = DEFAULT_SETTINGS, action) => {\n    switch (action.type) {\n        case SET_SETTINGS: {\n            return Object.assign({}, action.value);\n        }\n        case ADD_SETTINGS: {\n            return {\n                ...state,\n                ...action.value,\n            };\n        }\n        default:\n            return state;\n    }\n};\n\n// Selectors\n\nexport const sGetSettings = state => state.settings;\n\nexport const sGetSettingsDisplayNameProperty = state =>\n    sGetSettings(state).displayNameProperty;\n\nexport const sGetRootOrgUnit = state =>\n    sGetSettings(state).rootOrganisationUnit;\n\nexport const sGetRelativePeriod = state =>\n    sGetSettings(state).keyAnalysisRelativePeriod;\n\nexport const sGetUiLocale = state => sGetSettings(state).uiLocale;\n","import keyBy from 'lodash/keyBy';\nimport sortBy from 'lodash/sortBy';\nimport { SET_DIMENSIONS } from '../reducers/dimensions';\nimport { apiFetchDimensions } from '@dhis2/d2-ui-analytics';\nimport { sGetSettingsDisplayNameProperty } from '../reducers/settings';\n\nexport const acSetDimensions = dimensions => ({\n    type: SET_DIMENSIONS,\n    value: keyBy(sortBy(dimensions, [d => d.name.toLowerCase()]), 'id'),\n});\n\nexport const tSetDimensions = d2 => async (dispatch, getState) => {\n    const onSuccess = dimensions => {\n        dispatch(acSetDimensions(dimensions));\n    };\n\n    const onError = error => {\n        console.log('Error (apiFetchDimensions): ', error);\n        return error;\n    };\n\n    try {\n        const displayNameProp = sGetSettingsDisplayNameProperty(getState());\n        const dimensions = await apiFetchDimensions(d2, displayNameProp);\n\n        // filter out CATEGORY that are not of type ATTRIBUTE\n        const filteredDimensions = dimensions.filter(\n            dim =>\n                dim.dimensionType !== 'CATEGORY' ||\n                (dim.dimensionType === 'CATEGORY' &&\n                    dim.dataDimensionType === 'ATTRIBUTE')\n        );\n        return onSuccess(filteredDimensions);\n    } catch (err) {\n        return onError(err);\n    }\n};\n","import React from 'react';\nimport i18n from '@dhis2/d2-i18n';\nimport { colors } from '@dhis2/ui-core';\nimport { withStyles } from '@material-ui/core/styles';\n\nexport const SHOWMORE_BAR_HEIGHT = 16;\n\nconst styles = {\n    showMore: {\n        color: colors.grey700,\n        cursor: 'pointer',\n        fontSize: 11,\n        paddingTop: 5,\n        '&:hover': {\n            textDecoration: 'underline',\n        },\n    },\n    disabled: {\n        paddingTop: 5,\n        color: colors.grey500,\n        fontSize: 11,\n        cursor: 'not-allowed',\n    },\n};\n\nexport const ShowMoreButton = ({ onClick, isMaxHeight, classes, disabled }) => {\n    return (\n        <div style={{ textAlign: 'center' }}>\n            {disabled ? (\n                <div className={classes.disabled}>{i18n.t('Show more')}</div>\n            ) : (\n                <div className={classes.showMore} onClick={onClick}>\n                    {isMaxHeight ? i18n.t('Show less') : i18n.t('Show more')}\n                </div>\n            )}\n        </div>\n    );\n};\n\nexport default withStyles(styles)(ShowMoreButton);\n","import { SHOWMORE_BAR_HEIGHT } from './ShowMoreButton';\n\nexport const CONTROL_BAR_ROW_HEIGHT = 40;\nexport const FIRST_ROW_PADDING_HEIGHT = 10;\nexport const MIN_ROW_COUNT = 1;\n\nexport const HEADERBAR_HEIGHT = 48;\n\nconst CONTROL_BAR_OUTER_HEIGHT_DIFF =\n    FIRST_ROW_PADDING_HEIGHT + SHOWMORE_BAR_HEIGHT - 2; // 2 pixel \"adjustment\"\n\nexport const getRowsHeight = rows => {\n    return rows * CONTROL_BAR_ROW_HEIGHT;\n};\n\nexport const getNumRowsFromHeight = height => {\n    return Math.floor(\n        (height - CONTROL_BAR_OUTER_HEIGHT_DIFF) / CONTROL_BAR_ROW_HEIGHT\n    );\n};\n\nexport const getTopOffset = rows => {\n    return HEADERBAR_HEIGHT + getControlBarHeight(rows, false);\n};\n\nexport const getControlBarHeight = rows => {\n    return getRowsHeight(rows) + CONTROL_BAR_OUTER_HEIGHT_DIFF;\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { colors } from '@dhis2/ui-core';\nimport { HEADERBAR_HEIGHT } from './controlBarDimensions';\n\nimport classes from './styles/ControlBar.module.css';\n\nconst DRAG_HANDLE_HEIGHT = 7;\n\nclass ControlBar extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            dragging: false,\n        };\n    }\n\n    onStartDrag = () => {\n        this.setState({ dragging: true });\n        window.addEventListener('mousemove', this.onDrag);\n        window.addEventListener('mouseup', this.onEndDrag);\n    };\n\n    onDrag = event => {\n        event.preventDefault();\n        event.stopPropagation();\n\n        const newHeight = event.clientY;\n\n        if (\n            this.props.onChangeHeight &&\n            newHeight !== this.props.height &&\n            newHeight > 0\n        ) {\n            requestAnimationFrame(() => {\n                this.props.onChangeHeight(newHeight);\n            });\n        }\n    };\n\n    onEndDrag = () => {\n        this.setState({ dragging: false });\n        window.removeEventListener('mousemove', this.onDrag);\n        window.removeEventListener('mouseup', this.onEndDrag);\n\n        if (this.props.onEndDrag) {\n            this.props.onEndDrag();\n        }\n    };\n\n    renderDragHandle() {\n        return typeof this.props.onChangeHeight === 'function' ? (\n            <div\n                className={classes.draghandle}\n                style={{ height: DRAG_HANDLE_HEIGHT }}\n                onMouseDown={this.onStartDrag}\n            />\n        ) : null;\n    }\n\n    render() {\n        const height = Math.max(this.props.height, 0) + DRAG_HANDLE_HEIGHT;\n\n        const rootStyle = Object.assign(\n            {\n                height,\n                top: HEADERBAR_HEIGHT,\n                backgroundColor: this.props.editMode\n                    ? colors.yellow050\n                    : colors.white,\n                paddingBottom: DRAG_HANDLE_HEIGHT,\n            },\n            // Disable animations while dragging\n            this.state.dragging ? { transition: 'none' } : {}\n        );\n\n        return (\n            <div style={rootStyle} className={classes.root}>\n                <div className={classes.content}>{this.props.children}</div>\n                {this.renderDragHandle()}\n            </div>\n        );\n    }\n}\n\nControlBar.propTypes = {\n    /**\n     * The height of the control bar in number of lines. Must be a positive integer.\n     */\n    height: PropTypes.number.isRequired,\n\n    /**\n     * If true, the background color of the control bar changes to indicate that edit mode is active.\n     */\n    editMode: PropTypes.bool.isRequired,\n\n    /**\n     * Callback function that is called when the control bar is resized.\n     * The callback receives one argument: The new height in pixels.\n     *\n     * If no callback is specified the control bar will not have a drag handle.\n     */\n    onChangeHeight: PropTypes.func,\n\n    /**\n     * Callback function that is called when the control bar is dropped after being dragged.\n     * The callback receives one argument: The new height in pixels.\n     *\n     * Ignored if no \"onChangeHeight\" function is provided.\n     */\n    onEndDrag: PropTypes.func,\n\n    /**\n     * The contents of the control bar.\n     */\n    children: PropTypes.node.isRequired,\n};\n\nControlBar.defaultProps = {\n    onChangeHeight: null,\n    onEndDrag: null,\n};\n\nexport default ControlBar;\n","import React from 'react';\n\nconst StarIcon = ({ className }) => (\n    <svg\n        className={className}\n        xmlns=\"http://www.w3.org/2000/svg\"\n        viewBox=\"0 0 24 24\"\n    >\n        <path d=\"M0 0h24v24H0z\" fill=\"none\" />\n        <path d=\"M12 17.27L18.18 21l-1.64-7.03L22 9.24l-7.19-.61L12 2 9.19 8.63 2 9.24l5.46 4.73L5.82 21z\" />\n        <path d=\"M0 0h24v24H0z\" fill=\"none\" />\n    </svg>\n);\n\nexport default StarIcon;\n","import { getInstance } from 'd2';\n\nexport const apiPostDataStatistics = async (eventType, id) => {\n    const d2 = await getInstance();\n    const url = `dataStatistics?eventType=${eventType}&favorite=${id}`;\n\n    d2.Api.getApi().post(url);\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport { Chip, colors } from '@dhis2/ui-core';\nimport { Link } from 'react-router-dom';\nimport debounce from 'lodash/debounce';\n\nimport StarIcon from '../../icons/Star';\nimport { apiPostDataStatistics } from '../../api/dataStatistics';\n\nconst styles = {\n    chip: {\n        margin: '3px',\n    },\n    link: {\n        color: colors.grey600,\n        display: 'inline-block',\n        textDecoration: 'none',\n        verticalAlign: 'top',\n    },\n    icon: {\n        height: '20px',\n        marginTop: '2px',\n        width: '20px',\n    },\n    selected: {\n        fill: colors.white,\n    },\n    unselected: {\n        fill: colors.grey700,\n    },\n};\n\nexport const DashboardItemChip = ({\n    starred,\n    selected,\n    label,\n    dashboardId,\n    classes,\n}) => {\n    const chipProps = {\n        selected,\n        className: classes.chip,\n    };\n\n    if (starred) {\n        const selectedState = selected ? classes.selected : classes.unselected;\n        chipProps.icon = (\n            <StarIcon className={`${classes.icon} ${selectedState}`} />\n        );\n    }\n\n    return (\n        <Link\n            className={classes.link}\n            to={`/${dashboardId}`}\n            onClick={debounce(\n                () => apiPostDataStatistics('DASHBOARD_VIEW', dashboardId),\n                500\n            )}\n        >\n            <Chip {...chipProps}>{label}</Chip>\n        </Link>\n    );\n};\n\nDashboardItemChip.propTypes = {\n    starred: PropTypes.bool.isRequired,\n    selected: PropTypes.bool.isRequired,\n    label: PropTypes.string.isRequired,\n    dashboardId: PropTypes.string.isRequired,\n};\n\nexport default withStyles(styles)(DashboardItemChip);\n","import React from 'react';\nimport { colors } from '@dhis2/ui-core';\n\nconst AddCircleIcon = () => (\n    <svg\n        xmlns=\"http://www.w3.org/2000/svg\"\n        width=\"32\"\n        height=\"32\"\n        fill={colors.teal600}\n        viewBox=\"0 0 24 24\"\n    >\n        <path d=\"M12 2C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2zm4 11h-3v3c0 .55-.45 1-1 1s-1-.45-1-1v-3H8c-.55 0-1-.45-1-1s.45-1 1-1h3V8c0-.55.45-1 1-1s1 .45 1 1v3h3c.55 0 1 .45 1 1s-.45 1-1 1z\" />\n    </svg>\n);\n\nexport default AddCircleIcon;\n","import React from 'react';\nimport { colors } from '@dhis2/ui-core';\n\nconst ClearIcon = ({ className }) => (\n    <svg\n        className={className}\n        fill={colors.grey800}\n        xmlns=\"http://www.w3.org/2000/svg\"\n        viewBox=\"0 0 24 24\"\n    >\n        <path d=\"M19 6.41L17.59 5 12 10.59 6.41 5 5 6.41 10.59 12 5 17.59 6.41 19 12 13.41 17.59 19 19 17.59 13.41 12z\" />\n        <path d=\"M0 0h24v24H0z\" fill=\"none\" />\n    </svg>\n);\n\nexport default ClearIcon;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport ClearIcon from '../../icons/Clear';\n\nimport classes from './styles/ClearButton.module.css';\n\nexport const ClearButton = ({ onClear }) => (\n    <button className={classes.button} onClick={onClear}>\n        <ClearIcon className={classes.icon} color=\"action\" />\n    </button>\n);\n\nClearButton.propTypes = {\n    onClear: PropTypes.func.isRequired,\n};\n\nexport default ClearButton;\n","import { combineReducers } from 'redux';\nimport { validateReducer } from '../modules/util';\n\nexport const SET_DASHBOARDS_FILTER_NAME = 'SET_DASHBOARDS_FILTER_NAME';\nexport const SET_DASHBOARDS_FILTER_OWNER = 'SET_DASHBOARDS_FILTER_OWNER';\nexport const SET_DASHBOARDS_FILTER_ORDER = 'SET_DASHBOARDS_FILTER_ORDER';\n\nexport const ownerData = [\n    { id: 'ALL', value: 'All users' },\n    { id: 'ME', value: 'Created by me' },\n    { id: 'OTHERS', value: 'Created by others' },\n];\n\nexport const orderData = [\n    { id: 'NAME:ASC', value: 'Name (asc)' },\n    { id: 'NAME:ASC', value: 'Name (desc)' },\n    { id: 'ITEMS:ASC', value: 'Number of items (asc)' },\n    { id: 'ITEMS:ASC', value: 'Number of items (desc)' },\n    { id: 'CREATED:ASC', value: 'Created date (asc)' },\n    { id: 'CREATED:ASC', value: 'Created date (desc)' },\n];\n\nexport const DEFAULT_STATE_DASHBOARDS_FILTER_NAME = '';\nexport const DEFAULT_STATE_DASHBOARDS_FILTER_OWNER = ownerData[0].id;\nexport const DEFAULT_STATE_DASHBOARDS_FILTER_ORDER = orderData[0].id;\n\nconst name = (state = DEFAULT_STATE_DASHBOARDS_FILTER_NAME, action) => {\n    switch (action.type) {\n        case SET_DASHBOARDS_FILTER_NAME:\n            return validateReducer(\n                action.value,\n                DEFAULT_STATE_DASHBOARDS_FILTER_NAME\n            );\n        default:\n            return state;\n    }\n};\n\nconst owner = (state = DEFAULT_STATE_DASHBOARDS_FILTER_OWNER, action) => {\n    switch (action.type) {\n        case SET_DASHBOARDS_FILTER_OWNER:\n            return validateReducer(\n                action.value,\n                DEFAULT_STATE_DASHBOARDS_FILTER_NAME\n            );\n        default:\n            return state;\n    }\n};\n\nconst order = (state = DEFAULT_STATE_DASHBOARDS_FILTER_ORDER, action) => {\n    switch (action.type) {\n        case SET_DASHBOARDS_FILTER_ORDER:\n            return validateReducer(\n                action.value,\n                DEFAULT_STATE_DASHBOARDS_FILTER_ORDER\n            );\n        default:\n            return state;\n    }\n};\n\nexport default combineReducers({\n    name,\n    owner,\n    order,\n});\n\n// selectors\n\nexport const sGetDashboardsFilterRoot = state => state.dashboardsFilter;\n\n// selector dependency level 2\n\nexport const sGetFilterName = state => sGetDashboardsFilterRoot(state).name;\nexport const sGetFilterOwner = state => sGetDashboardsFilterRoot(state).owner;\nexport const sGetFilterOrder = state => sGetDashboardsFilterRoot(state).order;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport i18n from '@dhis2/d2-i18n';\nimport InputField from '@material-ui/core/Input';\nimport InputAdornment from '@material-ui/core/InputAdornment';\nimport SearchIcon from '@material-ui/icons/Search';\nimport { colors } from '@dhis2/ui-core';\n\nimport ClearButton from './ClearButton';\nimport { DEFAULT_STATE_DASHBOARDS_FILTER_NAME } from '../../reducers/dashboardsFilter';\n\nexport const KEYCODE_ENTER = 13;\nexport const KEYCODE_ESCAPE = 27;\n\nconst styles = {\n    filterField: {\n        fontSize: '14px',\n        width: '200px',\n        height: '30px',\n        top: '-4px',\n    },\n    searchIcon: {\n        color: colors.grey700,\n        width: '20px',\n        height: '20px',\n    },\n};\n\nexport class Filter extends Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            value: DEFAULT_STATE_DASHBOARDS_FILTER_NAME,\n        };\n    }\n\n    componentWillReceiveProps(nextProps) {\n        this.setState({\n            value: nextProps.name,\n        });\n    }\n\n    setFilterValue = event => {\n        event.preventDefault();\n\n        this.props.onChangeName(event.target.value);\n    };\n\n    handleKeyUp = event => {\n        switch (event.keyCode) {\n            case KEYCODE_ENTER:\n                this.props.onKeypressEnter();\n                break;\n            case KEYCODE_ESCAPE:\n                this.props.onChangeName();\n                break;\n            default:\n                break;\n        }\n    };\n\n    render() {\n        const { classes, name, onChangeName } = this.props;\n\n        const startAdornment = (\n            <InputAdornment position=\"start\">\n                <SearchIcon className={classes.searchIcon} />\n            </InputAdornment>\n        );\n\n        const endAdornment =\n            name !== '' && name !== null ? (\n                <InputAdornment position=\"end\">\n                    <ClearButton onClear={() => onChangeName()} />\n                </InputAdornment>\n            ) : null;\n\n        return (\n            <InputField\n                className={classes.filterField}\n                placeholder={i18n.t('Search for a dashboard')}\n                startAdornment={startAdornment}\n                endAdornment={endAdornment}\n                value={this.state.value}\n                onChange={this.setFilterValue}\n                onKeyUp={this.handleKeyUp}\n            />\n        );\n    }\n}\n\nFilter.propTypes = {\n    name: PropTypes.string,\n    onChangeName: PropTypes.func,\n};\n\nFilter.defaultProps = {\n    name: '',\n    onChangeName: Function.prototype,\n};\n\nexport default withStyles(styles)(Filter);\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { Link, withRouter } from 'react-router-dom';\nimport ControlBar from './ControlBar';\nimport arraySort from 'd2-utilizr/lib/arraySort';\n\nimport Chip from './DashboardItemChip';\nimport AddCircleIcon from '../../icons/AddCircle';\nimport Filter from './Filter';\nimport ShowMoreButton from './ShowMoreButton';\nimport {\n    FIRST_ROW_PADDING_HEIGHT,\n    MIN_ROW_COUNT,\n    getRowsHeight,\n    getControlBarHeight,\n    getNumRowsFromHeight,\n} from './controlBarDimensions';\nimport { sGetControlBarUserRows } from '../../reducers/controlBar';\nimport { sGetAllDashboards } from '../../reducers/dashboards';\nimport { sGetFilterName } from '../../reducers/dashboardsFilter';\nimport { sGetSelectedId } from '../../reducers/selected';\nimport { acSetControlBarUserRows } from '../../actions/controlBar';\nimport { acSetFilterName } from '../../actions/dashboardsFilter';\nimport { orObject, orArray } from '../../modules/util';\nimport { apiPostControlBarRows } from '../../api/controlBar';\n\nimport classes from './styles/DashboardsBar.module.css';\n\nexport const MAX_ROW_COUNT = 10;\n\nexport class DashboardsBar extends Component {\n    state = {\n        rows: MIN_ROW_COUNT,\n    };\n\n    setInitialDashboardState = rows => {\n        this.setState({ rows, isMaxHeight: rows === MAX_ROW_COUNT });\n    };\n\n    componentDidMount() {\n        this.setInitialDashboardState(this.props.userRows);\n    }\n\n    componentWillReceiveProps(nextProps) {\n        this.setInitialDashboardState(nextProps.userRows);\n    }\n\n    onChangeHeight = newHeight => {\n        const adjustedHeight = newHeight - 52; // don't rush the transition to a bigger row count\n        const newRows = Math.max(\n            MIN_ROW_COUNT,\n            getNumRowsFromHeight(adjustedHeight)\n        );\n\n        if (newRows !== this.state.rows) {\n            const newRowCount = Math.min(newRows, MAX_ROW_COUNT);\n\n            this.props.onChangeHeight(newRowCount);\n        }\n    };\n\n    onEndDrag = () => {\n        return apiPostControlBarRows(this.state.rows);\n    };\n\n    onToggleMaxHeight = () => {\n        const rows =\n            this.state.rows === MAX_ROW_COUNT\n                ? this.props.userRows\n                : MAX_ROW_COUNT;\n\n        this.setState({ rows, isMaxHeight: !this.state.isMaxHeight });\n    };\n\n    onSelectDashboard = () => {\n        this.props.history.push(`/${this.props.dashboards[0].id}`);\n    };\n\n    render() {\n        const { dashboards, name, selectedId, onChangeFilterName } = this.props;\n\n        const rowCount = this.state.isMaxHeight\n            ? MAX_ROW_COUNT\n            : this.state.rows;\n        const controlBarHeight = getControlBarHeight(rowCount);\n        const contentWrapperStyle = {\n            padding: `${FIRST_ROW_PADDING_HEIGHT}px 6px 0 6px`,\n            overflowY: this.state.isMaxHeight ? 'auto' : 'hidden',\n            height: getRowsHeight(rowCount) + FIRST_ROW_PADDING_HEIGHT,\n        };\n\n        return (\n            <ControlBar\n                height={controlBarHeight}\n                onChangeHeight={this.onChangeHeight}\n                onEndDrag={this.onEndDrag}\n                editMode={false}\n            >\n                <div style={contentWrapperStyle}>\n                    <div className={classes.leftControls}>\n                        <Link\n                            style={{\n                                display: 'inline-block',\n                                textDecoration: 'none',\n                                marginRight: 10,\n                            }}\n                            to={'/new'}\n                        >\n                            <AddCircleIcon />\n                        </Link>\n                        <Filter\n                            name={name}\n                            onChangeName={onChangeFilterName}\n                            onKeypressEnter={this.onSelectDashboard}\n                        />\n                    </div>\n                    {orArray(dashboards).map(dashboard => (\n                        <Chip\n                            key={dashboard.id}\n                            label={dashboard.displayName}\n                            starred={dashboard.starred}\n                            dashboardId={dashboard.id}\n                            selected={dashboard.id === selectedId}\n                        />\n                    ))}\n                </div>\n                <ShowMoreButton\n                    onClick={this.onToggleMaxHeight}\n                    isMaxHeight={this.state.isMaxHeight}\n                    disabled={this.props.userRows === MAX_ROW_COUNT}\n                />\n            </ControlBar>\n        );\n    }\n}\n\nconst mapStateToProps = state => ({\n    dashboards: sGetAllDashboards(state),\n    name: sGetFilterName(state),\n    userRows: sGetControlBarUserRows(state),\n    selectedId: sGetSelectedId(state),\n});\n\nconst mapDispatchToProps = {\n    onChangeHeight: acSetControlBarUserRows,\n    onChangeFilterName: acSetFilterName,\n};\nconst mergeProps = (stateProps, dispatchProps, ownProps) => {\n    const dashboards = Object.values(orObject(stateProps.dashboards));\n    const displayDashboards = arraySort(\n        dashboards.filter(d =>\n            d.displayName.toLowerCase().includes(stateProps.name.toLowerCase())\n        ),\n        'ASC',\n        'displayName'\n    );\n\n    return {\n        ...stateProps,\n        ...ownProps,\n        ...dispatchProps,\n        dashboards: [\n            ...displayDashboards.filter(d => d.starred),\n            ...displayDashboards.filter(d => !d.starred),\n        ],\n    };\n};\n\nexport default withRouter(\n    connect(\n        mapStateToProps,\n        mapDispatchToProps,\n        mergeProps\n    )(DashboardsBar)\n);\n","import {\n    SET_DASHBOARDS_FILTER_NAME,\n    SET_DASHBOARDS_FILTER_OWNER,\n    SET_DASHBOARDS_FILTER_ORDER,\n} from '../reducers/dashboardsFilter';\n\n// actions\n\nexport const acSetFilterName = value => ({\n    type: SET_DASHBOARDS_FILTER_NAME,\n    value,\n});\n\nexport const acSetFilterOwner = value => ({\n    type: SET_DASHBOARDS_FILTER_OWNER,\n    value,\n});\n\nexport const acSetFilterOrder = value => ({\n    type: SET_DASHBOARDS_FILTER_ORDER,\n    value,\n});\n","import React from 'react';\nimport { connect } from 'react-redux';\n\nimport {\n    getTopOffset,\n    MIN_ROW_COUNT,\n} from '../ControlBar/controlBarDimensions';\nimport { sGetControlBarUserRows } from '../../reducers/controlBar';\n\nconst DashboardVerticalOffset = props => {\n    const rows = props.editMode ? MIN_ROW_COUNT : props.userRows;\n    const marginTop = getTopOffset(rows);\n\n    return <div className=\"page-container-top-margin\" style={{ marginTop }} />;\n};\n\nconst mapStateToProps = state => ({\n    userRows: sGetControlBarUserRows(state),\n});\n\nexport default connect(mapStateToProps)(DashboardVerticalOffset);\n","const lightGrey = '#ECEFF1';\nconst lightMediumGrey = '#9E9E9E';\nconst mediumGrey = '#393939';\nconst charcoalGrey = '#8C8C8C';\nconst darkGrey = '#494949';\nconst muiDefaultGrey = '#757575';\n\nconst red = '#E53935';\n\nconst paleBlue = '#E3F2FD';\nconst lightBlue = '#EAF4FF'; //'#63A4FF'\nconst royalBlue = '#004BA0';\n\nconst mint = '#B2DFDB';\nconst lightGreen = '#48A999';\nconst mediumGreen = '#00796B';\nconst darkGreen = '#004C40';\n\nconst paleYellow = '#FFF8E1';\n\nconst white = '#FFFFFF';\nconst black = 'rgba(0,0,0,0.87)';\n\nexport const colors = {\n    lightGrey,\n    lightMediumGrey,\n    mediumGrey,\n    charcoalGrey,\n    darkGrey,\n    muiDefaultGrey,\n    red,\n    paleBlue,\n    lightBlue,\n    royalBlue,\n    mint,\n    lightGreen,\n    mediumGreen,\n    darkGreen,\n    paleYellow,\n    white,\n    black,\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { MenuItem, colors } from '@dhis2/ui-core';\n\nconst HeaderMenuItem = ({ title }) => (\n    <MenuItem\n        dense\n        key={title}\n        disabled\n        label={\n            <p style={{ color: colors.grey800, fontWeight: '600' }}>{title}</p>\n        }\n    />\n);\n\nHeaderMenuItem.propTypes = {\n    title: PropTypes.string.isRequired,\n};\n\nexport default HeaderMenuItem;\n","import React from 'react';\nimport { colors } from '@dhis2/ui-core';\n\nconst LaunchIcon = ({ className }) => (\n    <svg\n        className={className}\n        xmlns=\"http://www.w3.org/2000/svg\"\n        width=\"12\"\n        height=\"12\"\n        fill={colors.grey600}\n        viewBox=\"0 0 24 24\"\n    >\n        <path d=\"M0 0h24v24H0z\" fill=\"none\" />\n        <path d=\"M19 19H5V5h7V3H5c-1.11 0-2 .9-2 2v14c0 1.1.89 2 2 2h14c1.1 0 2-.9 2-2v-7h-2v7zM14 3v2h3.59l-9.83 9.83 1.41 1.41L19 6.41V10h2V3h-7z\" />\n    </svg>\n);\n\nexport default LaunchIcon;\n","import React from 'react';\nimport { MenuItem, colors } from '@dhis2/ui-core';\nimport i18n from '@dhis2/d2-i18n';\n\nimport { getItemIcon } from '../../modules/itemTypes';\nimport LaunchIcon from '../../icons/Launch';\n\nimport classes from './styles/ContentMenuItem.module.css';\n\nconst LaunchLink = ({ url }) => (\n    <a\n        onClick={e => e.stopPropagation()}\n        className={classes.launchLink}\n        target=\"_blank\"\n        rel=\"noopener noreferrer\"\n        href={url}\n    >\n        <LaunchIcon />\n    </a>\n);\n\nconst InsertButton = () => (\n    <button className={classes.buttonInsert}>{i18n.t('Insert')}</button>\n);\n\nconst ContentMenuItem = ({ type, name, onInsert, url }) => {\n    const ItemIcon = getItemIcon(type);\n\n    return (\n        <MenuItem\n            dense\n            onClick={onInsert}\n            label={\n                <div className={classes.menuItem}>\n                    <div className={classes.label}>\n                        <ItemIcon\n                            style={{ margin: '6px', fill: colors.grey600 }}\n                        />\n                        <span>{name}</span>\n                        {url ? <LaunchLink url={url} /> : null}\n                    </div>\n                    <InsertButton />\n                </div>\n            }\n        />\n    );\n};\n\nexport default ContentMenuItem;\n","import i18n from '@dhis2/d2-i18n';\nimport {\n    spacerContent,\n    REPORT_TABLE,\n    CHART,\n    MAP,\n    EVENT_CHART,\n    EVENT_REPORT,\n    USERS,\n    REPORTS,\n    RESOURCES,\n    APP,\n    MESSAGES,\n    TEXT,\n    SPACER,\n} from '../../modules/itemTypes';\n\nexport const singleItems = [\n    {\n        id: 'additional',\n        header: i18n.t('Additional items'),\n        items: [\n            {\n                type: TEXT,\n                name: i18n.t('Text box'),\n                content: '',\n            },\n            {\n                type: MESSAGES,\n                name: i18n.t('Messages'),\n                content: 'true',\n            },\n            {\n                type: SPACER,\n                name: i18n.t('Spacer'),\n                content: spacerContent,\n            },\n        ],\n    },\n];\n\n// categorizedItems are grouped in the item selector menu\nexport const categorizedItems = [\n    REPORT_TABLE,\n    CHART,\n    MAP,\n    EVENT_REPORT,\n    EVENT_CHART,\n    USERS,\n    REPORTS,\n    RESOURCES,\n    APP,\n];\n\n// listItemTypes are included in a single dashboard item\nexport const listItemTypes = [REPORTS, RESOURCES, USERS];\n","import React, { Component, Fragment } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport i18n from '@dhis2/d2-i18n';\nimport { MenuItem, Divider } from '@dhis2/ui-core';\n\nimport HeaderMenuItem from './HeaderMenuItem';\nimport ContentMenuItem from './ContentMenuItem';\n\nimport { tAddListItemContent } from './actions';\nimport { acAddDashboardItem } from '../../actions/editDashboard';\nimport { getItemUrl, APP } from '../../modules/itemTypes';\nimport { categorizedItems, listItemTypes } from './selectableItems';\n\nimport classes from './styles/CategorizedMenuGroup.module.css';\n\nclass CategorizedMenuGroup extends Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            seeMore: false,\n        };\n    }\n\n    addItem = item => () => {\n        const { type, acAddDashboardItem, tAddListItemContent } = this.props;\n\n        if (type === APP) {\n            acAddDashboardItem({ type, content: item.key });\n        } else {\n            const newItem = {\n                id: item.id,\n                name: item.displayName || item.name,\n            };\n\n            if (listItemTypes.includes(type)) {\n                tAddListItemContent(type, newItem);\n            } else {\n                acAddDashboardItem({ type, content: newItem });\n            }\n        }\n    };\n\n    toggleSeeMore = () => {\n        this.setState({ seeMore: !this.state.seeMore });\n\n        this.props.onChangeItemsLimit(this.props.type);\n    };\n\n    render() {\n        const { title, type, items, hasMore } = this.props;\n        return (\n            <Fragment>\n                <HeaderMenuItem title={title} />\n                {items.map(item => {\n                    const itemUrl = getItemUrl(type, item, this.context.d2);\n                    return (\n                        <ContentMenuItem\n                            key={item.id || item.key}\n                            type={type}\n                            name={item.displayName || item.name}\n                            onInsert={this.addItem(item)}\n                            url={itemUrl}\n                        />\n                    );\n                })}\n                {hasMore ? (\n                    <MenuItem\n                        dense\n                        key={`showmore${title}`}\n                        onClick={this.toggleSeeMore}\n                        label={\n                            <button className={classes.showMoreButton}>\n                                {this.state.seeMore\n                                    ? i18n.t('Show fewer')\n                                    : i18n.t('Show more')}\n                            </button>\n                        }\n                    />\n                ) : null}\n                <Divider margin=\"8px 0px\" />\n            </Fragment>\n        );\n    }\n}\n\nCategorizedMenuGroup.propTypes = {\n    type: PropTypes.oneOf(categorizedItems).isRequired,\n    title: PropTypes.string.isRequired,\n    items: PropTypes.array.isRequired,\n    onChangeItemsLimit: PropTypes.func.isRequired,\n};\n\nCategorizedMenuGroup.contextTypes = {\n    d2: PropTypes.object.isRequired,\n};\n\nexport default connect(\n    null,\n    {\n        acAddDashboardItem,\n        tAddListItemContent,\n    }\n)(CategorizedMenuGroup);\n","import { sGetEditDashboardRoot } from '../../reducers/editDashboard';\nimport { itemTypeMap } from '../../modules/itemTypes';\nimport {\n    acAddDashboardItem,\n    acUpdateDashboardItem,\n} from '../../actions/editDashboard';\n\nexport const tAddListItemContent = (type, content) => (dispatch, getState) => {\n    const state = getState();\n    const listItemType = itemTypeMap[type].propName;\n    const dashboardItems = sGetEditDashboardRoot(state).dashboardItems;\n    const dashboardItemIndex = dashboardItems.findIndex(\n        item => item.type === type\n    );\n    let dashboardItem;\n\n    // Reports/Resources/Users dashboard item type already present in dashboard\n    if (dashboardItemIndex > -1) {\n        dashboardItem = dashboardItems[dashboardItemIndex];\n        dashboardItem[listItemType].push(content);\n\n        dispatch(acUpdateDashboardItem(dashboardItem));\n    } else {\n        dashboardItem = {\n            type: type,\n            content: [content],\n        };\n\n        dispatch(acAddDashboardItem(dashboardItem));\n    }\n};\n","import React, { Fragment } from 'react';\nimport { connect } from 'react-redux';\n\nimport HeaderMenuItem from './HeaderMenuItem';\nimport ContentMenuItem from './ContentMenuItem';\nimport { acAddDashboardItem } from '../../actions/editDashboard';\n\nexport const SinglesMenuGroup = ({ acAddDashboardItem, category }) => {\n    const addToDashboard = ({ type, content }) => () => {\n        acAddDashboardItem({ type, content });\n    };\n\n    return (\n        <Fragment>\n            <HeaderMenuItem title={category.header} />\n            {category.items.map(item => (\n                <ContentMenuItem\n                    key={item.type}\n                    type={item.type}\n                    name={item.name}\n                    onInsert={addToDashboard(item)}\n                />\n            ))}\n        </Fragment>\n    );\n};\n\nexport default connect(\n    null,\n    { acAddDashboardItem }\n)(SinglesMenuGroup);\n","import React, { Fragment } from 'react';\nimport PropTypes from 'prop-types';\nimport i18n from '@dhis2/d2-i18n';\nimport Popover from '@material-ui/core/Popover';\nimport { InputField, Menu } from '@dhis2/ui-core';\n\nimport CategorizedMenuGroup from './CategorizedMenuGroup';\nimport SinglesMenuGroup from './SinglesMenuGroup';\nimport { singleItems, categorizedItems } from './selectableItems';\nimport { itemTypeMap } from '../../modules/itemTypes';\n\nimport './styles/ItemSelector.css';\n\nconst ItemSearchField = props => (\n    <InputField\n        filled\n        name=\"Dashboard item search\"\n        label={i18n.t('Search for items to add to this dashboard')}\n        type=\"text\"\n        onChange={props.onChange}\n        onFocus={props.onFocus}\n        value={props.value}\n    />\n);\n\nclass ItemSelector extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            anchorEl: null,\n            open: false,\n            maxOptions: new Set(),\n            items: undefined,\n            filter: '',\n        };\n    }\n\n    closeList = () => {\n        this.setState({ open: false, filter: '' });\n    };\n\n    openList = event => {\n        this.fetchItems();\n\n        this.setState({\n            anchorEl: event.currentTarget,\n            open: true,\n        });\n    };\n\n    setFilter = event => {\n        this.setState({ filter: event.target.value }, this.fetchItems);\n    };\n\n    getCategorizedMenuGroups = () =>\n        categorizedItems.map(type => {\n            const itemType = itemTypeMap[type];\n\n            if (this.state.items && this.state.items[itemType.endPointName]) {\n                const allItems = this.state.items[itemType.endPointName];\n                const hasMore = allItems.length > 5;\n                const items = this.state.maxOptions.has(type)\n                    ? allItems\n                    : allItems.slice(0, 5);\n\n                return (\n                    <CategorizedMenuGroup\n                        key={type}\n                        type={type}\n                        title={itemType.pluralTitle}\n                        items={items}\n                        onChangeItemsLimit={this.fetchItems}\n                        hasMore={hasMore}\n                    />\n                );\n            }\n            return null;\n        });\n\n    getSinglesMenuGroups = () =>\n        singleItems.map(category => (\n            <SinglesMenuGroup key={category.id} category={category} />\n        ));\n\n    getMenuGroups = () =>\n        this.getCategorizedMenuGroups().concat(this.getSinglesMenuGroups());\n\n    fetchItems = async type => {\n        if (type) {\n            const maxOptions = this.state.maxOptions;\n\n            if (maxOptions.has(type)) {\n                maxOptions.delete(type);\n            } else {\n                maxOptions.add(type);\n            }\n\n            this.setState({ maxOptions });\n        } else {\n            this.setState({\n                maxOptions: new Set(),\n            });\n        }\n\n        let queryString = '?count=6';\n        if ([...this.state.maxOptions.values()].length) {\n            queryString +=\n                '&max=' + [...this.state.maxOptions.values()].join('&max=');\n        }\n\n        const filter = this.state.filter ? `/${this.state.filter}` : '';\n\n        this.context.d2.Api.getApi()\n            .get(`dashboards/q${filter}${queryString}`)\n            .then(response => this.setState({ items: response }))\n            .catch(console.error);\n    };\n\n    render() {\n        return (\n            <Fragment>\n                <ItemSearchField\n                    value={this.state.filter}\n                    onChange={this.setFilter}\n                    onFocus={this.openList}\n                />\n                <Popover\n                    className=\"dashboard-item-selector\"\n                    open={this.state.open}\n                    onClose={this.closeList}\n                    anchorEl={this.state.anchorEl}\n                    anchorOrigin={{ horizontal: 'left', vertical: 'bottom' }}\n                    transformOrigin={{ horizontal: 'left', vertical: 'top' }}\n                    style={{ height: '70vh' }}\n                    PaperProps={{ style: { width: '700px' } }}\n                    disableAutoFocus={true}\n                    disableRestoreFocus={true}\n                >\n                    <Menu>{this.getMenuGroups()}</Menu>\n                </Popover>\n            </Fragment>\n        );\n    }\n}\n\nItemSelector.contextTypes = {\n    d2: PropTypes.object.isRequired,\n};\n\nexport default ItemSelector;\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport i18n from '@dhis2/d2-i18n';\nimport MuiInputField from '@material-ui/core/TextField';\nimport { InputField } from '@dhis2/ui-core';\n\nimport ItemSelector from '../ItemSelector/ItemSelector';\nimport {\n    acSetDashboardTitle,\n    acSetDashboardDescription,\n} from '../../actions/editDashboard';\nimport { orObject } from '../../modules/util';\nimport { sGetEditDashboardRoot } from '../../reducers/editDashboard';\n\nconst styles = {\n    section: { display: 'flex', justifyContent: 'space-between' },\n    titleDescription: {\n        flex: '3',\n        marginRight: '50px',\n    },\n    title: {\n        display: 'block',\n        clear: 'both',\n    },\n    description: {\n        display: 'block',\n        clear: 'both',\n        marginTop: '15px',\n    },\n    underline: {\n        '&::before': {\n            borderBottom: `none`,\n        },\n        '&:hover::before': {\n            borderBottom: `none!important`,\n        },\n    },\n    input: {\n        backgroundColor: 'rgba(0, 0, 10, 0.05)',\n        borderRadius: '4px',\n        width: '100%',\n        '&:hover': {\n            backgroundColor: 'rgba(0, 0, 10, 0.08)',\n        },\n    },\n    itemSelector: {\n        flex: '2',\n        position: 'relative',\n    },\n};\n\nexport const EditTitleBar = ({\n    name,\n    description,\n    onChangeTitle,\n    onChangeDescription,\n    classes,\n}) => {\n    const updateTitle = e => {\n        onChangeTitle(e.target.value);\n    };\n\n    const updateDescription = e => {\n        onChangeDescription(e.target.value);\n    };\n\n    return (\n        <section className={classes.section}>\n            <div className={classes.titleDescription}>\n                <InputField\n                    className={classes.title}\n                    filled\n                    name=\"Dashboard title input\"\n                    label={i18n.t('Dashboard title')}\n                    type=\"text\"\n                    onChange={updateTitle}\n                    value={name}\n                />\n                <MuiInputField\n                    className={classes.description}\n                    name=\"Dashboard description input\"\n                    label={i18n.t('Dashboard description')}\n                    onChange={updateDescription}\n                    value={description}\n                    variant=\"filled\"\n                    multiline\n                    InputProps={{\n                        classes: {\n                            root: classes.input,\n                            underline: classes.underline,\n                        },\n                    }}\n                />\n            </div>\n            <div className={classes.itemSelector}>\n                <ItemSelector />\n            </div>\n        </section>\n    );\n};\n\nconst mapStateToProps = state => {\n    const selectedDashboard = orObject(sGetEditDashboardRoot(state));\n\n    return {\n        name: selectedDashboard.name,\n        description: selectedDashboard.description,\n    };\n};\n\nconst mapDispatchToProps = {\n    onChangeTitle: acSetDashboardTitle,\n    onChangeDescription: acSetDashboardDescription,\n};\n\nexport default connect(\n    mapStateToProps,\n    mapDispatchToProps\n)(withStyles(styles)(EditTitleBar));\n\nEditTitleBar.propTypes = {\n    name: PropTypes.string,\n    description: PropTypes.string,\n    onChangeTitle: PropTypes.func.isRequired,\n    onChangeDescription: PropTypes.func.isRequired,\n};\n\nEditTitleBar.defaultProps = {\n    name: '',\n    description: '',\n};\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nimport { Button } from '@dhis2/ui-core';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\n\nimport i18n from '@dhis2/d2-i18n';\n\nimport {\n    PeriodDimension,\n    DynamicDimension,\n    OrgUnitDimension,\n    FIXED_DIMENSIONS,\n} from '@dhis2/d2-ui-analytics';\n\nconst peId = FIXED_DIMENSIONS.pe.id;\nconst ouId = FIXED_DIMENSIONS.ou.id;\n\nclass FilterDialog extends Component {\n    onConfirm = id => () => this.props.onConfirm(id);\n\n    dialogContent() {\n        const { displayNameProperty, dimension, selectedItems } = this.props;\n        const dialogId = dimension.id;\n\n        const commonProps = {\n            d2: this.context.d2,\n            onSelect: this.props.onSelect,\n            onDeselect: this.props.onDeselect,\n            onReorder: this.props.onReorder,\n        };\n\n        switch (dialogId) {\n            case peId: {\n                return (\n                    <PeriodDimension\n                        selectedPeriods={selectedItems}\n                        {...commonProps}\n                    />\n                );\n            }\n            case ouId:\n                return (\n                    <OrgUnitDimension\n                        displayNameProperty={displayNameProperty}\n                        ouItems={selectedItems}\n                        {...commonProps}\n                    />\n                );\n            default:\n                return (\n                    <DynamicDimension\n                        selectedItems={selectedItems}\n                        dialogId={dialogId}\n                        dialogTitle={dimension.name}\n                        {...commonProps}\n                    />\n                );\n        }\n    }\n\n    render() {\n        const { dimension, onClose } = this.props;\n        const dialogId = dimension.id;\n\n        return (\n            <Dialog\n                open={!!dialogId}\n                maxWidth=\"lg\"\n                disableEnforceFocus\n                onClose={onClose}\n            >\n                {dialogId && this.dialogContent()}\n                <DialogActions>\n                    <Button kind=\"secondary\" onClick={onClose}>\n                        {i18n.t('Cancel')}\n                    </Button>\n                    <Button kind=\"primary\" onClick={this.onConfirm(dialogId)}>\n                        {i18n.t('Confirm')}\n                    </Button>\n                </DialogActions>\n            </Dialog>\n        );\n    }\n}\n\nFilterDialog.propTypes = {\n    displayNameProperty: PropTypes.string,\n    dimension: PropTypes.object,\n    selectedItems: PropTypes.array,\n    onSelect: PropTypes.func,\n    onDeselect: PropTypes.func,\n    onReorder: PropTypes.func,\n    onClose: PropTypes.func,\n    onConfirm: PropTypes.func,\n};\n\nFilterDialog.contextTypes = {\n    d2: PropTypes.object,\n};\n\nexport default FilterDialog;\n","export const SET_ACTIVE_MODAL_DIMENSION = 'SET_ACTIVE_MODAL_DIMENSION';\nexport const CLEAR_ACTIVE_MODAL_DIMENSION = 'CLEAR_ACTIVE_MODAL_DIMENSION';\n\nexport const DEFAULT_STATE_ACTIVE_MODAL_DIMENSION = {};\n\nexport default (state = DEFAULT_STATE_ACTIVE_MODAL_DIMENSION, action) => {\n    switch (action.type) {\n        case SET_ACTIVE_MODAL_DIMENSION: {\n            return action.value;\n        }\n        case CLEAR_ACTIVE_MODAL_DIMENSION: {\n            return DEFAULT_STATE_ACTIVE_MODAL_DIMENSION;\n        }\n        default:\n            return state;\n    }\n};\n\nexport const sGetActiveModalDimension = state => state.activeModalDimension;\n","import {\n    SET_ACTIVE_MODAL_DIMENSION,\n    CLEAR_ACTIVE_MODAL_DIMENSION,\n} from '../reducers/activeModalDimension';\n\nexport const acSetActiveModalDimension = value => ({\n    type: SET_ACTIVE_MODAL_DIMENSION,\n    value,\n});\n\nexport const acClearActiveModalDimension = () => ({\n    type: CLEAR_ACTIVE_MODAL_DIMENSION,\n});\n","import React, { Component, Fragment } from 'react';\nimport { connect } from 'react-redux';\nimport Popover from '@material-ui/core/Popover';\nimport ArrowDropDownIcon from '@material-ui/icons/ArrowDropDown';\nimport { withTheme } from '@material-ui/core/styles';\n\nimport i18n from '@dhis2/d2-i18n';\nimport { DimensionsPanel } from '@dhis2/d2-ui-analytics';\n\nimport { Button } from '@dhis2/ui-core';\nimport FilterDialog from './FilterDialog';\n\nimport { sGetSettingsDisplayNameProperty } from '../../reducers/settings';\nimport { sGetActiveModalDimension } from '../../reducers/activeModalDimension';\nimport { sGetDimensions } from '../../reducers/dimensions';\nimport { sGetFiltersKeys } from '../../reducers/itemFilters';\nimport { sGetEditItemFiltersRoot } from '../../reducers/editItemFilters';\nimport { acAddItemFilter, acRemoveItemFilter } from '../../actions/itemFilters';\nimport {\n    acRemoveEditItemFilter,\n    acSetEditItemFilters,\n} from '../../actions/editItemFilters';\nimport {\n    acClearActiveModalDimension,\n    acSetActiveModalDimension,\n} from '../../actions/activeModalDimension';\n\nclass FilterSelector extends Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            anchorEl: null,\n        };\n    }\n\n    openPanel = event => {\n        this.setState({ anchorEl: event.currentTarget });\n    };\n\n    closePanel = () => {\n        this.setState({ anchorEl: null });\n    };\n\n    closeDialog = () => {\n        this.setState({ anchorEl: null });\n\n        this.props.clearActiveModalDimension();\n    };\n\n    selectDimension = id => {\n        this.props.setActiveModalDimension({\n            id,\n            name: this.props.dimensions[id].name,\n        });\n    };\n\n    onSelectItems = ({ dimensionId, items }) => {\n        this.props.setEditItemFilters({\n            ...this.props.selectedItems,\n            [dimensionId]: items,\n        });\n    };\n\n    onDeselectItems = ({ dimensionId, itemIdsToRemove }) => {\n        const oldList = this.props.selectedItems[dimensionId] || [];\n        const newList = oldList.filter(\n            item => !itemIdsToRemove.includes(item.id)\n        );\n\n        if (newList.length) {\n            this.props.setEditItemFilters({\n                ...this.props.selectedItems,\n                [dimensionId]: newList,\n            });\n        } else {\n            this.props.removeEditItemFilter(dimensionId);\n        }\n    };\n\n    onReorderItems = ({ dimensionId, itemIds }) => {\n        const oldList = this.props.selectedItems[dimensionId] || [];\n        const reorderedList = itemIds.map(id =>\n            oldList.find(item => item.id === id)\n        );\n\n        this.props.setEditItemFilters({\n            ...this.props.selectedItems,\n            [dimensionId]: reorderedList,\n        });\n    };\n\n    saveFilter = id => {\n        const filterItems = this.props.selectedItems[id];\n\n        if (filterItems && filterItems.length) {\n            this.props.addItemFilter({\n                id,\n                value: [...filterItems],\n            });\n        } else {\n            this.props.removeItemFilter(id);\n        }\n\n        this.closeDialog();\n    };\n\n    render() {\n        const {\n            theme,\n            displayNameProperty,\n            dimension,\n            dimensions,\n            selectedDimensions,\n            selectedItems,\n        } = this.props;\n\n        return (\n            <Fragment>\n                <Button onClick={this.openPanel}>\n                    {i18n.t('Add filter')}\n                    <ArrowDropDownIcon />\n                </Button>\n                <Popover\n                    open={Boolean(this.state.anchorEl)}\n                    anchorEl={this.state.anchorEl}\n                    anchorOrigin={{ vertical: 'bottom', horizontal: 'left' }}\n                    onClose={this.closePanel}\n                    style={{\n                        height: '100%',\n                        fontFamily: theme.typography.fontFamily,\n                    }}\n                >\n                    <DimensionsPanel\n                        dimensions={dimensions}\n                        onDimensionClick={this.selectDimension}\n                        selectedIds={selectedDimensions}\n                    />\n                </Popover>\n                {dimension ? (\n                    <FilterDialog\n                        displayNameProperty={displayNameProperty}\n                        dimension={dimension}\n                        selectedItems={selectedItems[dimension.id] || []}\n                        onSelect={this.onSelectItems}\n                        onDeselect={this.onDeselectItems}\n                        onReorder={this.onReorderItems}\n                        onClose={this.closeDialog}\n                        onConfirm={this.saveFilter}\n                    />\n                ) : null}\n            </Fragment>\n        );\n    }\n}\n\nconst mapStateToProps = state => ({\n    displayNameProperty: sGetSettingsDisplayNameProperty(state),\n    dimension: sGetActiveModalDimension(state),\n    dimensions: sGetDimensions(state),\n    selectedDimensions: sGetFiltersKeys(state),\n    selectedItems: sGetEditItemFiltersRoot(state),\n});\n\nexport default connect(\n    mapStateToProps,\n    {\n        clearActiveModalDimension: acClearActiveModalDimension,\n        setActiveModalDimension: acSetActiveModalDimension,\n        addItemFilter: acAddItemFilter,\n        removeItemFilter: acRemoveItemFilter,\n        removeEditItemFilter: acRemoveEditItemFilter,\n        setEditItemFilters: acSetEditItemFilters,\n    }\n)(withTheme()(FilterSelector));\n","import React, { Component } from 'react';\nimport InfoOutlineIcon from '@material-ui/icons/InfoOutlined';\nimport { colors } from '../../modules/colors';\n\nclass Info extends Component {\n    show = false;\n\n    toggle() {\n        this.show = !this.show;\n        return this.show;\n    }\n\n    render() {\n        return (\n            <div onClick={() => this.props.onClick(this.toggle())}>\n                <InfoOutlineIcon style={{ fill: colors.muiDefaultGrey }} />\n            </div>\n        );\n    }\n}\n\nexport default Info;\n","import React, { Component, Fragment } from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport { Link } from 'react-router-dom';\nimport i18n from '@dhis2/d2-i18n';\nimport SharingDialog from '@dhis2/d2-ui-sharing-dialog';\nimport Star from '@material-ui/icons/Star';\nimport StarBorder from '@material-ui/icons/StarBorder';\n\nimport { orObject } from '../../modules/util';\nimport { tStarDashboard } from '../../actions/dashboards';\nimport { acSetSelectedShowDescription } from '../../actions/selected';\nimport FilterSelector from '../ItemFilter/FilterSelector';\nimport { Button } from '@dhis2/ui-core';\nimport Info from './Info';\nimport {\n    sGetSelectedId,\n    sGetSelectedShowDescription,\n} from '../../reducers/selected';\nimport {\n    sGetDashboardById,\n    sGetDashboardItems,\n} from '../../reducers/dashboards';\nimport { colors } from '../../modules/colors';\n\nconst NO_DESCRIPTION = i18n.t('No description');\n\nconst styles = {\n    actions: {\n        display: 'flex',\n        alignItems: 'center',\n        marginLeft: '20px',\n    },\n    starIcon: {\n        fill: colors.muiDefaultGrey,\n    },\n    textButton: {\n        minWidth: '30px',\n        top: '1px',\n    },\n    editLink: {\n        display: 'inline-block',\n        verticalAlign: 'top',\n        textDecoration: 'none',\n        marginRight: '4px',\n    },\n    titleBar: {\n        display: 'flex',\n        alignItems: 'flex-start',\n    },\n    titleBarIcon: {\n        marginLeft: 5,\n        position: 'relative',\n        top: 1,\n        cursor: 'pointer',\n    },\n};\n\nclass ViewTitleBar extends Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            sharingDialogIsOpen: false,\n        };\n    }\n\n    toggleSharingDialog = () =>\n        this.setState({ sharingDialogIsOpen: !this.state.sharingDialogIsOpen });\n\n    render() {\n        const {\n            id,\n            name,\n            description,\n            access,\n            style,\n            showDescription,\n            starred,\n            onStarClick,\n            onInfoClick,\n            classes,\n        } = this.props;\n\n        const titleStyle = Object.assign({}, style.title, {\n            cursor: 'default',\n            userSelect: 'text',\n            top: '7px',\n        });\n\n        const StarIcon = starred ? Star : StarBorder;\n\n        return (\n            <Fragment>\n                <div className={classes.titleBar}>\n                    <span style={titleStyle}>{name}</span>\n                    <div className={classes.actions}>\n                        <div\n                            className={classes.titleBarIcon}\n                            onClick={onStarClick}\n                        >\n                            <StarIcon className={classes.starIcon} />\n                        </div>\n                        <div className={classes.titleBarIcon}>\n                            <Info onClick={onInfoClick} />\n                        </div>\n                        <div style={{ marginLeft: '10px' }}>\n                            {access.update ? (\n                                <Link\n                                    className={classes.editLink}\n                                    to={`/${id}/edit`}\n                                >\n                                    <Button>{i18n.t('Edit')}</Button>\n                                </Link>\n                            ) : null}\n                            {access.manage ? (\n                                <span style={{ marginRight: '4px' }}>\n                                    <Button onClick={this.toggleSharingDialog}>\n                                        {i18n.t('Share')}\n                                    </Button>\n                                </span>\n                            ) : null}\n                            <span style={{ marginRight: '4px' }}>\n                                <FilterSelector />\n                            </span>\n                        </div>\n                    </div>\n                </div>\n                {showDescription ? (\n                    <div\n                        className=\"dashboard-description\"\n                        style={Object.assign(\n                            { paddingTop: '5px', paddingBottom: '5px' },\n                            style.description,\n                            !description ? { color: '#888' } : {}\n                        )}\n                    >\n                        {description || NO_DESCRIPTION}\n                    </div>\n                ) : null}\n                {id ? (\n                    <SharingDialog\n                        d2={this.context.d2}\n                        id={id}\n                        type=\"dashboard\"\n                        open={this.state.sharingDialogIsOpen}\n                        onRequestClose={this.toggleSharingDialog}\n                    />\n                ) : null}\n            </Fragment>\n        );\n    }\n}\n\nconst mapStateToProps = state => {\n    const id = sGetSelectedId(state);\n    const dashboard = orObject(sGetDashboardById(state, id));\n\n    return {\n        id,\n        name: dashboard.displayName,\n        description: dashboard.displayDescription,\n        dashboardItems: sGetDashboardItems(state),\n        showDescription: sGetSelectedShowDescription(state),\n        starred: dashboard.starred,\n        access: orObject(dashboard.access),\n    };\n};\n\nconst mergeProps = (stateProps, dispatchProps, ownProps) => {\n    const { id, starred, showDescription } = stateProps;\n    const { dispatch } = dispatchProps;\n\n    return {\n        ...stateProps,\n        ...ownProps,\n        onStarClick: () => dispatch(tStarDashboard(id, !starred)),\n        onInfoClick: () =>\n            dispatch(acSetSelectedShowDescription(!showDescription)),\n    };\n};\n\nexport default connect(\n    mapStateToProps,\n    null,\n    mergeProps\n)(withStyles(styles)(ViewTitleBar));\n\nViewTitleBar.propTypes = {\n    id: PropTypes.string,\n    name: PropTypes.string,\n    description: PropTypes.string,\n    starred: PropTypes.bool,\n    showDescription: PropTypes.bool,\n    onInfoClick: PropTypes.func,\n};\n\nViewTitleBar.defaultProps = {\n    name: '',\n    description: '',\n    starred: false,\n    showDescription: false,\n    onInfoClick: null,\n};\n\nViewTitleBar.contextTypes = {\n    d2: PropTypes.object,\n};\n","import React from 'react';\n\nimport { colors } from '../../modules/colors';\nimport EditTitleBar from './EditTitleBar';\nimport ViewTitleBar from './ViewTitleBar';\n\nimport './TitleBar.css';\n\nconst style = {\n    title: {\n        position: 'relative',\n        fontSize: 21,\n        fontWeight: 500,\n        color: colors.black,\n        minWidth: 50,\n    },\n    description: {\n        fontSize: 14,\n        color: colors.darkGrey,\n    },\n};\n\nconst TitleBar = ({ edit }) => {\n    return (\n        <div\n            className=\"titlebar-wrapper\"\n            style={{\n                padding: '20px 15px 5px 10px',\n            }}\n        >\n            {edit ? (\n                <EditTitleBar style={style} />\n            ) : (\n                <ViewTitleBar style={style} />\n            )}\n        </div>\n    );\n};\n\nexport default TitleBar;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nimport i18n from '@dhis2/d2-i18n';\n\nimport * as pluginManager from './plugin';\nimport { getBaseUrl, orObject } from '../../../modules/util';\nimport { getGridItemDomId } from '../../ItemGrid/gridUtil';\n\nconst pluginCredentials = d2 => {\n    return {\n        baseUrl: getBaseUrl(d2),\n        auth: d2.Api.getApi().defaultHeaders.Authorization,\n    };\n};\n\nclass DefaultPlugin extends Component {\n    pluginCredentials = null;\n\n    constructor(props, context) {\n        super(props);\n\n        this.d2 = context.d2;\n    }\n\n    shouldPluginReload = prevProps => {\n        // TODO - fix this hack, to handle bug with multiple\n        // rerendering while switching between dashboards.\n        //\n        // To determine if the rendering is happening because of a\n        // dashboard switch, check if the item reference has changed.\n        const reloadAllowed = this.props.item === prevProps.item;\n\n        const filtersChanged = prevProps.itemFilters !== this.props.itemFilters;\n        const vis = orObject(this.props.visualization);\n        const prevVis = orObject(prevProps.visualization);\n        const visChanged =\n            vis.id !== prevVis.id || vis.activeType !== prevVis.activeType;\n\n        return reloadAllowed && (visChanged || filtersChanged);\n    };\n\n    reloadPlugin = prevProps => {\n        if (\n            pluginManager.pluginIsAvailable(\n                this.props.item,\n                this.props.visualization\n            ) &&\n            this.shouldPluginReload(prevProps)\n        ) {\n            const prevVis = orObject(prevProps.visualization);\n            const currentVis = this.props.visualization;\n\n            const useActiveType =\n                currentVis.activeType !== prevVis.activeType ||\n                currentVis.activeType !== this.props.item.type;\n\n            if (\n                useActiveType ||\n                this.props.itemFilters !== prevProps.itemFilters\n            ) {\n                pluginManager.unmount(\n                    this.props.item,\n                    prevVis.activeType || this.props.item.type\n                );\n\n                pluginManager.load(\n                    this.props.item,\n                    this.props.visualization,\n                    this.pluginCredentials,\n                    useActiveType ? currentVis.activeType : null\n                );\n            }\n        }\n    };\n\n    componentDidMount() {\n        this.pluginCredentials = pluginCredentials(this.d2);\n\n        if (\n            pluginManager.pluginIsAvailable(\n                this.props.item,\n                this.props.visualization\n            )\n        ) {\n            pluginManager.load(\n                this.props.item,\n                this.props.visualization,\n                this.pluginCredentials,\n                !this.props.editMode ? this.getActiveType() : null\n            );\n        }\n    }\n\n    componentDidUpdate(prevProps) {\n        this.reloadPlugin(prevProps);\n    }\n\n    getActiveType = () =>\n        this.props.visualization.activeType || this.props.item.type;\n\n    render() {\n        const { classes, item, visualization, style } = this.props;\n        const pluginIsAvailable = pluginManager.pluginIsAvailable(\n            item,\n            visualization\n        );\n\n        return pluginIsAvailable ? (\n            <div id={getGridItemDomId(item.id)} style={style} />\n        ) : (\n            <div className={classes.textDiv}>\n                {i18n.t('Unable to load the plugin for this item')}\n            </div>\n        );\n    }\n}\n\nDefaultPlugin.contextTypes = {\n    d2: PropTypes.object,\n};\n\nDefaultPlugin.propTypes = {\n    style: PropTypes.object,\n    item: PropTypes.object,\n    itemFilters: PropTypes.object,\n    visualization: PropTypes.object,\n};\n\nDefaultPlugin.defaultProps = {\n    style: {},\n    item: {},\n    itemFilters: {},\n    visualization: {},\n};\n\nexport default DefaultPlugin;\n","import React from 'react';\n\nexport const HEADER_HEIGHT = 45;\n\nconst ItemHeader = props => {\n    const { title, actionButtons, editMode } = props;\n\n    return (\n        <div className=\"dashboard-item-header\">\n            <div\n                className=\"dashboard-item-header-title\"\n                style={{ userSelect: editMode ? 'none' : 'text' }}\n            >\n                {title}\n            </div>\n            {actionButtons}\n        </div>\n    );\n};\n\nexport default ItemHeader;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { colors } from '../../../modules/colors';\nimport { getId } from './plugin';\nimport InterpretationsComponent from '@dhis2/d2-ui-interpretations';\n\nconst style = {\n    scrollContainer: {\n        overflowY: 'auto',\n        height: '340px',\n    },\n    line: {\n        margin: '-1px 0px 0px',\n        height: '1px',\n        border: 'none',\n        backgroundColor: colors.lightGrey,\n    },\n};\n\nclass ItemFooter extends Component {\n    render() {\n        const objectId = getId(this.props.item);\n\n        return (\n            <div className=\"dashboard-item-footer\">\n                <hr style={style.line} />\n                <div style={style.scrollContainer}>\n                    <InterpretationsComponent\n                        d2={this.context.d2}\n                        item={this.props.item}\n                        type={this.props.item.type.toLowerCase()}\n                        id={objectId}\n                        appName=\"dashboard\"\n                    />\n                </div>\n            </div>\n        );\n    }\n}\n\nItemFooter.contextTypes = {\n    d2: PropTypes.object.isRequired,\n};\n\nItemFooter.propTypes = {\n    item: PropTypes.object.isRequired,\n};\n\nexport default ItemFooter;\n","import React from 'react';\n\nimport './ItemHeaderButton.css';\n\nconst ItemHeaderButton = ({ disabled, onClick, children, style }) => {\n    return (\n        <button\n            disabled={disabled}\n            type=\"button\"\n            className=\"item-action-button\"\n            style={style}\n            onClick={onClick}\n        >\n            {children}\n        </button>\n    );\n};\n\nexport default ItemHeaderButton;\n","import React, { Component, Fragment } from 'react';\nimport MessageIcon from '@material-ui/icons/Message';\nimport TableIcon from '@material-ui/icons/ViewList';\nimport ChartIcon from '@material-ui/icons/InsertChart';\nimport MapIcon from '@material-ui/icons/Public';\n\nimport { extractFavorite } from './plugin';\nimport ItemHeaderButton from '../ItemHeaderButton';\nimport {\n    VISUALIZATION_TYPE_TABLE,\n    VISUALIZATION_TYPE_CHART,\n    VISUALIZATION_TYPE_MAP,\n    itemTypeMap,\n    CHART,\n    MAP,\n    REPORT_TABLE,\n    EVENT_CHART,\n    EVENT_REPORT,\n    DOMAIN_TYPE_AGGREGATE,\n} from '../../../modules/itemTypes';\nimport { colors } from '../../../modules/colors';\n\nconst style = {\n    iconBase: {\n        width: '24px',\n        height: '24px',\n        fill: colors.lightMediumGrey,\n    },\n    buttonBase: {\n        padding: '5px 6px 3px 6px',\n    },\n    buttonDisabled: {\n        padding: '5px 6px 3px 6px',\n        opacity: 0.5,\n        cursor: 'unset',\n    },\n    toggleFooterPadding: {\n        padding: '7px 6px 1px 6px',\n    },\n    border: {\n        borderRadius: '2px',\n        border: `1px solid ${colors.lightGrey}`,\n    },\n};\n\nconst baseStyle = {\n    icon: style.iconBase,\n    container: style.buttonBase,\n};\n\nconst disabledStyle = {\n    icon: style.iconBase,\n    container: style.buttonDisabled,\n};\n\nconst activeStyle = {\n    icon: { ...style.iconBase, fill: colors.royalBlue },\n    container: {\n        ...style.buttonBase,\n        backgroundColor: colors.lightBlue,\n    },\n};\n\nconst inactiveStyle = disabled => (disabled ? disabledStyle : baseStyle);\n\nconst tableBtnStyle = (activeType, disabled) =>\n    [REPORT_TABLE, EVENT_REPORT].includes(activeType)\n        ? activeStyle\n        : inactiveStyle(disabled);\n\nconst chartBtnStyle = (activeType, disabled) =>\n    [CHART, EVENT_CHART].includes(activeType)\n        ? activeStyle\n        : inactiveStyle(disabled);\n\nconst mapBtnStyle = (activeType, disabled) =>\n    [MAP].includes(activeType) ? activeStyle : inactiveStyle(disabled);\n\nexport const getItemTypeId = (itemTypeMap, visualizationType, domainType) => {\n    const item = Object.values(itemTypeMap).find(\n        item =>\n            item.visualizationType === visualizationType &&\n            item.domainType === domainType\n    );\n    return item.id;\n};\n\nclass VisualizationItemHeaderButtons extends Component {\n    render() {\n        const {\n            item,\n            onSelectVisualization,\n            activeFooter,\n            activeType,\n            onToggleFooter,\n        } = this.props;\n\n        const domainType = itemTypeMap[item.type].domainType;\n\n        const onViewTable = () =>\n            onSelectVisualization(\n                getItemTypeId(itemTypeMap, VISUALIZATION_TYPE_TABLE, domainType)\n            );\n\n        const onViewChart = () =>\n            onSelectVisualization(\n                getItemTypeId(itemTypeMap, VISUALIZATION_TYPE_CHART, domainType)\n            );\n\n        const onViewMap = () =>\n            onSelectVisualization(\n                getItemTypeId(itemTypeMap, VISUALIZATION_TYPE_MAP, domainType)\n            );\n\n        const toggleFooterBase = activeFooter ? activeStyle : baseStyle;\n\n        const toggleFooter = {\n            ...toggleFooterBase,\n            container: {\n                ...toggleFooterBase.container,\n                ...style.toggleFooterPadding,\n                ...style.border,\n            },\n        };\n\n        // disable toggle buttons\n        let disabled = false;\n\n        if (item.type === VISUALIZATION_TYPE_CHART) {\n            if (extractFavorite(item).type.match(/^YEAR_OVER_YEAR/)) {\n                disabled = true;\n            }\n        }\n\n        const tableButtonStyle = tableBtnStyle(activeType, disabled);\n        const chartButtonStyle = chartBtnStyle(activeType, disabled);\n        const mapButtonStyle = mapBtnStyle(activeType, disabled);\n\n        return (\n            <Fragment>\n                <div style={{ marginRight: 10 }}>\n                    <ItemHeaderButton\n                        style={toggleFooter.container}\n                        onClick={onToggleFooter}\n                    >\n                        <MessageIcon style={toggleFooter.icon} />\n                    </ItemHeaderButton>\n                </div>\n                <div style={style.border}>\n                    <ItemHeaderButton\n                        disabled={disabled}\n                        style={tableButtonStyle.container}\n                        onClick={onViewTable}\n                    >\n                        <TableIcon style={tableButtonStyle.icon} />\n                    </ItemHeaderButton>\n                    <ItemHeaderButton\n                        disabled={disabled}\n                        style={chartButtonStyle.container}\n                        onClick={onViewChart}\n                    >\n                        <ChartIcon style={chartButtonStyle.icon} />\n                    </ItemHeaderButton>\n                    {domainType === DOMAIN_TYPE_AGGREGATE ? (\n                        <ItemHeaderButton\n                            disabled={disabled}\n                            style={mapButtonStyle.container}\n                            onClick={onViewMap}\n                        >\n                            <MapIcon style={mapButtonStyle.icon} />\n                        </ItemHeaderButton>\n                    ) : null}\n                </div>\n            </Fragment>\n        );\n    }\n}\n\nexport default VisualizationItemHeaderButtons;\n","// Note that this ignores discrepancies in 'this', so shouldn't be used with bound functions\n// This is useful instead of lodash/memoize when we only need to memoize a single value\n// Inspiration: https://github.com/alexreardon/memoize-one\n\nconst memoizeOne = fn => {\n    let lastArgs = undefined;\n    let lastValue = undefined;\n\n    return (...args) => {\n        if (\n            lastArgs &&\n            args.length === lastArgs.length &&\n            args.every((arg, i) => arg === lastArgs[i])\n        ) {\n            return lastValue;\n        }\n        lastArgs = args;\n        lastValue = fn(...args);\n        return lastValue;\n    };\n};\n\nexport default memoizeOne;\n","import React, { Component, Fragment } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { withStyles } from '@material-ui/core/styles';\nimport LaunchIcon from '@material-ui/icons/Launch';\nimport ChartPlugin from '@dhis2/data-visualizer-plugin';\n\nimport i18n from '@dhis2/d2-i18n';\nimport uniqueId from 'lodash/uniqueId';\n\nimport DefaultPlugin from './DefaultPlugin';\nimport ItemHeader, { HEADER_HEIGHT } from '../ItemHeader';\nimport ItemFooter from './ItemFooter';\nimport VisualizationItemHeaderButtons from './ItemHeaderButtons';\nimport * as pluginManager from './plugin';\nimport { sGetVisualization } from '../../../reducers/visualizations';\nimport { sGetItemFiltersRoot } from '../../../reducers/itemFilters';\nimport {\n    acReceivedVisualization,\n    acReceivedActiveVisualization,\n} from '../../../actions/selected';\nimport { CHART, MAP, itemTypeMap } from '../../../modules/itemTypes';\nimport { colors } from '../../../modules/colors';\nimport memoizeOne from '../../../modules/memoizeOne';\nimport { getVisualizationConfig } from './plugin';\n\nconst styles = {\n    icon: {\n        width: 16,\n        height: 16,\n        marginLeft: 3,\n        cursor: 'pointer',\n        fill: colors.muiDefaultGrey,\n    },\n    title: {\n        overflow: 'hidden',\n        maxWidth: '85%',\n        textOverflow: 'ellipsis',\n        whiteSpace: 'nowrap',\n    },\n    textDiv: {\n        fontSize: '14px',\n        fontStretch: 'normal',\n        padding: '10px',\n        lineHeight: '20px',\n    },\n};\n\nconst applyFilters = (visualization, filters) => {\n    if (!Object.keys(filters).length) {\n        return visualization;\n    }\n\n    // deep clone objects in filters to avoid changing the visualization in the Redux store\n    const visRows = visualization.rows.map(obj => ({ ...obj }));\n    const visColumns = visualization.columns.map(obj => ({ ...obj }));\n    const visFilters = visualization.filters.map(obj => ({ ...obj }));\n\n    Object.keys(filters).forEach(dimensionId => {\n        if (filters[dimensionId]) {\n            let dimensionFound = false;\n\n            [visRows, visColumns, visFilters].forEach(dimensionObjects =>\n                dimensionObjects\n                    .filter(obj => obj.dimension === dimensionId)\n                    .forEach(obj => {\n                        dimensionFound = true;\n                        obj.items = filters[dimensionId];\n                    })\n            );\n\n            // add dimension to filters if not already present elsewhere\n            if (!dimensionFound) {\n                visFilters.push({\n                    dimension: dimensionId,\n                    items: filters[dimensionId],\n                });\n            }\n        }\n    });\n\n    return {\n        ...visualization,\n        rows: visRows,\n        columns: visColumns,\n        filters: visFilters,\n    };\n};\n\nexport class Item extends Component {\n    state = {\n        showFooter: false,\n        configLoaded: false,\n    };\n\n    constructor(props, context) {\n        super(props);\n\n        this.d2 = context.d2;\n\n        this.contentRef = React.createRef();\n    }\n\n    async componentDidMount() {\n        this.props.onVisualizationLoaded(\n            // TODO do not call fetch on the pluginManager, do it here as the manager will eventually be removed...\n            await pluginManager.fetch(this.props.item)\n        );\n\n        this.setState({\n            configLoaded: true,\n        });\n    }\n\n    getUniqueKey = memoizeOne(() => uniqueId());\n\n    pluginCredentials = null;\n\n    getPluginComponent = () => {\n        const visualization = getVisualizationConfig(\n            this.props.visualization,\n            this.props.item.type,\n            this.getActiveType()\n        );\n\n        if (!visualization) {\n            return (\n                <div className={this.props.classes.textDiv}>\n                    {i18n.t('No data to display')}\n                </div>\n            );\n        }\n\n        const props = {\n            ...this.props,\n            visualization,\n            style: this.getContentStyle(),\n        };\n\n        switch (this.getActiveType()) {\n            case CHART: {\n                return (\n                    <ChartPlugin\n                        d2={this.d2}\n                        config={applyFilters(\n                            props.visualization,\n                            props.itemFilters\n                        )}\n                        forDashboard={true}\n                        style={props.style}\n                    />\n                );\n            }\n            case MAP: {\n                if (props.item.type === MAP) {\n                    // apply filters only to thematic and event layers\n                    // for maps AO\n                    const mapViews = props.visualization.mapViews.map(obj => {\n                        if (\n                            obj.layer.includes('thematic') ||\n                            obj.layer.includes('event')\n                        ) {\n                            return applyFilters(obj, props.itemFilters);\n                        }\n\n                        return obj;\n                    });\n\n                    props.visualization = {\n                        ...props.visualization,\n                        mapViews,\n                    };\n                } else {\n                    // this is the case of a non map AO passed to the maps plugin\n                    // due to a visualization type switch in dashboard item\n                    // maps plugin takes care of converting the AO to a suitable format\n                    props.visualization = applyFilters(\n                        props.visualization,\n                        props.itemFilters\n                    );\n                }\n\n                return <DefaultPlugin {...props} />;\n            }\n            default: {\n                props.visualization = applyFilters(\n                    props.visualization,\n                    props.itemFilters\n                );\n\n                return <DefaultPlugin {...props} />;\n            }\n        }\n    };\n\n    onToggleFooter = () => {\n        this.setState(\n            { showFooter: !this.state.showFooter },\n            this.props.onToggleItemExpanded(this.props.item.id)\n        );\n    };\n\n    onSelectVisualization = activeType => {\n        // Cancel request if type is already active\n        if (activeType === this.getActiveType()) {\n            return;\n        }\n\n        pluginManager.unmount(this.props.item, this.getActiveType());\n\n        this.props.onSelectVisualization(\n            this.props.visualization.id,\n            this.props.item.type,\n            activeType\n        );\n    };\n\n    getActiveType = () =>\n        this.props.visualization.activeType || this.props.item.type;\n\n    pluginIsAvailable = () =>\n        pluginManager.pluginIsAvailable(\n            this.props.item,\n            this.props.visualization\n        );\n\n    getTitle = () => {\n        const { item, editMode, classes } = this.props;\n        const itemName = pluginManager.getName(item);\n\n        return (\n            <div style={{ display: 'flex', alignItems: 'center' }}>\n                <span className={classes.title} title={itemName}>\n                    {itemName}\n                </span>\n                {!editMode && this.pluginIsAvailable() ? (\n                    <a\n                        href={pluginManager.getLink(this.props.item, this.d2)}\n                        style={{ height: 16 }}\n                        title={`View in ${\n                            itemTypeMap[this.props.item.type].appName\n                        } app`}\n                    >\n                        <LaunchIcon className={classes.icon} />\n                    </a>\n                ) : null}\n            </div>\n        );\n    };\n\n    getActionButtons = () =>\n        pluginManager.pluginIsAvailable(\n            this.props.item,\n            this.props.visualization\n        ) && !this.props.editMode ? (\n            <VisualizationItemHeaderButtons\n                item={this.props.item}\n                activeFooter={this.state.showFooter}\n                activeType={this.getActiveType()}\n                onSelectVisualization={this.onSelectVisualization}\n                onToggleFooter={this.onToggleFooter}\n            />\n        ) : null;\n\n    getContentStyle = () => {\n        const { item, editMode } = this.props;\n        const PADDING_BOTTOM = 4;\n\n        return !editMode\n            ? {\n                  height: item.originalHeight - HEADER_HEIGHT - PADDING_BOTTOM,\n              }\n            : { height: this.contentRef.offsetHeight };\n    };\n\n    render() {\n        const { item, editMode, itemFilters } = this.props;\n        const { showFooter } = this.state;\n\n        return (\n            <Fragment>\n                <ItemHeader\n                    title={this.getTitle()}\n                    actionButtons={this.getActionButtons()}\n                    editMode={editMode}\n                />\n                <div\n                    key={this.getUniqueKey(itemFilters)}\n                    className=\"dashboard-item-content\"\n                    ref={ref => (this.contentRef = ref)}\n                >\n                    {this.state.configLoaded && this.getPluginComponent()}\n                </div>\n                {!editMode && showFooter ? <ItemFooter item={item} /> : null}\n            </Fragment>\n        );\n    }\n}\n\nItem.contextTypes = {\n    d2: PropTypes.object,\n};\n\nItem.propTypes = {\n    item: PropTypes.object,\n    editMode: PropTypes.bool,\n    onToggleItemExpanded: PropTypes.func,\n    itemFilters: PropTypes.object,\n    visualization: PropTypes.object,\n};\n\nItem.defaultProps = {\n    item: {},\n    editMode: false,\n    onToggleItemExpanded: Function.prototype,\n    itemFilters: {},\n    visualization: {},\n};\n\nconst mapStateToProps = (state, ownProps) => ({\n    itemFilters: sGetItemFiltersRoot(state),\n    visualization: sGetVisualization(\n        state,\n        pluginManager.extractFavorite(ownProps.item).id\n    ),\n});\n\nconst mapDispatchToProps = dispatch => ({\n    onVisualizationLoaded: visualization =>\n        dispatch(acReceivedVisualization(visualization)),\n    onSelectVisualization: (id, type, activeType) =>\n        dispatch(acReceivedActiveVisualization(id, type, activeType)),\n});\n\nexport default connect(\n    mapStateToProps,\n    mapDispatchToProps\n)(withStyles(styles)(Item));\n","import React from 'react';\nimport { colors } from '../modules/colors';\n\nconst style = {\n    backgroundColor: colors.lightGrey,\n    border: 'none',\n    height: '1px',\n    margin: '0px 0px 5px 0px',\n};\n\nconst Line = props => <hr style={style} />;\n\nexport default Line;\n","import React, { Component, Fragment } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport i18n from '@dhis2/d2-i18n';\n\nimport { sGetMessagesRoot } from '../../../reducers/messages';\nimport { formatDate } from '../../../modules/util';\nimport { colors } from '../../../modules/colors';\nimport ItemHeader from '../ItemHeader';\nimport Line from '../../../widgets/Line';\n\nimport './MessagesItem.css';\n\nconst PRIVATE = 'PRIVATE';\n\nconst messageTypes = {\n    [PRIVATE]: 'Private',\n    VALIDATION_RESULT: 'Validation',\n    TICKET: 'Ticket',\n    SYSTEM: 'System',\n};\n\nconst style = {\n    list: {\n        listStyleType: 'none',\n        paddingLeft: '0px',\n    },\n    seeAll: {\n        textAlign: 'center',\n        fontSize: '13px',\n        marginBottom: '5px',\n    },\n    sender: {\n        fontSize: '13px',\n        lineHeight: '15px',\n        margin: 0,\n        color: colors.darkGrey,\n    },\n    snippet: {\n        color: colors.darkGrey,\n        fontSize: '13px',\n        lineHeight: '15px',\n        maxHeight: '30px',\n        overflow: 'hidden',\n    },\n};\n\nclass MessagesItem extends Component {\n    state = {\n        uiLocale: '',\n    };\n\n    async componentDidMount() {\n        const uiLocale = await this.context.d2.currentUser.userSettings.get(\n            'keyUiLocale'\n        );\n\n        this.setState({ uiLocale });\n    }\n\n    getMessageHref = msg => {\n        const msgIdentifier = msg ? `#/${msg.messageType}/${msg.id}` : '';\n        return `${this.context.baseUrl}/dhis-web-messaging/${msgIdentifier}`;\n    };\n\n    getMessageSender = msg => {\n        const latestMsg = msg.messages.slice(-1)[0];\n        return latestMsg.sender ? latestMsg.sender.displayName : '';\n    };\n\n    getMessageItems = () => {\n        const editClass = !this.props.editMode ? 'view' : null;\n\n        return this.props.messages.map(msg => {\n            const redirectToMsg = () => {\n                if (!this.props.editMode) {\n                    document.location.href = this.getMessageHref(msg);\n                }\n            };\n\n            const sender =\n                msg.messageType === PRIVATE\n                    ? this.getMessageSender(msg)\n                    : messageTypes[msg.messageType];\n\n            const readClass = !msg.read ? 'unread' : null;\n            const latestMsg = msg.messages.slice(-1)[0];\n            const msgDate = latestMsg.lastUpdated;\n\n            return (\n                <li\n                    className={`message-item ${editClass}`}\n                    key={msg.id}\n                    onClick={redirectToMsg}\n                >\n                    <p className={`message-title ${readClass}`}>\n                        {msg.displayName} ({msg.messageCount})\n                    </p>\n                    <p style={style.sender}>\n                        {sender} - {formatDate(msgDate, this.state.uiLocale)}\n                    </p>\n                    <p style={style.snippet}>{latestMsg.text}</p>\n                </li>\n            );\n        });\n    };\n\n    render() {\n        return (\n            <Fragment>\n                <ItemHeader title={i18n.t('Messages')} />\n                <Line />\n                {this.props.messages.length > 0 && (\n                    <div className=\"dashboard-item-content\">\n                        <ul style={style.list}>{this.getMessageItems()}</ul>\n                        <div style={style.seeAll}>\n                            <a href={this.getMessageHref()}>\n                                {i18n.t('See all messages')}\n                            </a>\n                        </div>\n                    </div>\n                )}\n            </Fragment>\n        );\n    }\n}\n\nMessagesItem.contextTypes = {\n    d2: PropTypes.object,\n    baseUrl: PropTypes.string,\n};\n\nconst mapStateToProps = state => {\n    return {\n        messages: Object.values(sGetMessagesRoot(state)),\n    };\n};\n\nconst MessagesContainer = connect(\n    mapStateToProps,\n    null\n)(MessagesItem);\n\nexport default MessagesContainer;\n","import React, { Fragment } from 'react';\nimport ItemHeader from '../ItemHeader';\nimport NotInterestedIcon from '@material-ui/icons/NotInterested';\n\nconst NotSupportedItem = props => (\n    <Fragment>\n        <ItemHeader title={`Item type not supported: ${props.item.type}`} />\n        <div\n            style={{\n                display: 'flex',\n                justifyContent: 'center',\n                alignItems: 'center',\n                height: '90%',\n            }}\n        >\n            <NotInterestedIcon\n                style={{ width: 100, height: 100, align: 'center' }}\n                color=\"disabled\"\n            />\n        </div>\n    </Fragment>\n);\n\nexport default NotSupportedItem;\n","import React from 'react';\nimport { colors } from '@dhis2/ui-core';\n\nconst DescriptionIcon = ({ className }) => (\n    <svg\n        className={className}\n        xmlns=\"http://www.w3.org/2000/svg\"\n        viewBox=\"0 0 24 24\"\n        fill={colors.grey500}\n    >\n        <path d=\"M0 0h24v24H0z\" fill=\"none\" />\n        <path d=\"M14 2H6c-1.1 0-1.99.9-1.99 2L4 20c0 1.1.89 2 1.99 2H18c1.1 0 2-.9 2-2V8l-6-6zm2 16H8v-2h8v2zm0-4H8v-2h8v2zm-3-5V3.5L18.5 9H13z\" />\n    </svg>\n);\n\nexport default DescriptionIcon;\n","import React from 'react';\nimport { colors } from '@dhis2/ui-core';\n\nconst DeleteIcon = ({ className }) => (\n    <svg\n        className={className}\n        xmlns=\"http://www.w3.org/2000/svg\"\n        width=\"18\"\n        height=\"18\"\n        viewBox=\"0 0 24 24\"\n        fill={colors.red500}\n    >\n        <path d=\"M6 19c0 1.1.9 2 2 2h8c1.1 0 2-.9 2-2V7H6v12zM19 4h-3.5l-1-1h-5l-1 1H5v2h14V4z\" />\n        <path d=\"M0 0h24v24H0z\" fill=\"none\" />\n    </svg>\n);\n\nexport default DeleteIcon;\n","import React, { Fragment } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { colors } from '@dhis2/ui-core';\nimport DescriptionIcon from '../../../icons/Description';\n\nimport DeleteIcon from '../../../icons/Delete';\nimport Line from '../../../widgets/Line';\nimport { itemTypeMap, getItemUrl } from '../../../modules/itemTypes';\nimport { orArray } from '../../../modules/util';\nimport { tRemoveListItemContent } from './actions';\nimport ItemHeader from '../ItemHeader';\nimport classes from './Item.module.css';\n\nconst getItemTitle = item => itemTypeMap[item.type].pluralTitle;\n\nconst getContentItems = item =>\n    orArray(item[itemTypeMap[item.type].propName]).filter(\n        (item, index, array) =>\n            array.findIndex(el => el.id === item.id) === index\n    );\n\nconst removeContent = (handler, item, contentToRemove) => () => {\n    handler(item, contentToRemove);\n};\n\nconst ListItem = (props, context) => {\n    const { item, editMode, tRemoveListItemContent } = props;\n    const contentItems = getContentItems(item);\n\n    const getLink = contentItem => {\n        const deleteButton = (\n            <button\n                className={classes.deletebutton}\n                onClick={removeContent(\n                    tRemoveListItemContent,\n                    item,\n                    contentItem\n                )}\n            >\n                <DeleteIcon className={classes.deleteicon} />\n            </button>\n        );\n\n        return (\n            <Fragment>\n                <a\n                    className={classes.link}\n                    style={{ color: colors.grey900 }}\n                    href={getItemUrl(item.type, contentItem, context.d2)}\n                >\n                    {contentItem.name}\n                </a>\n                {editMode ? deleteButton : null}\n            </Fragment>\n        );\n    };\n\n    return (\n        <Fragment>\n            <ItemHeader title={getItemTitle(item)} />\n            <Line />\n            <div className=\"dashboard-item-content\">\n                <ul className={classes.list}>\n                    {contentItems.map(contentItem => (\n                        <li className={classes.item} key={contentItem.id}>\n                            <DescriptionIcon className={classes.itemicon} />\n                            {getLink(contentItem)}\n                        </li>\n                    ))}\n                </ul>\n            </div>\n        </Fragment>\n    );\n};\n\nListItem.contextTypes = {\n    d2: PropTypes.object,\n};\n\nexport default connect(\n    null,\n    {\n        tRemoveListItemContent,\n    }\n)(ListItem);\n","import {\n    acUpdateDashboardItem,\n    acRemoveDashboardItem,\n} from '../../../actions/editDashboard';\nimport { itemTypeMap } from '../../../modules/itemTypes';\n\nexport const tRemoveListItemContent = (dashboardItem, content) => dispatch => {\n    const listItemType = itemTypeMap[dashboardItem.type].propName;\n\n    const newContent = dashboardItem[listItemType].filter(\n        item => item.id !== content.id\n    );\n\n    if (newContent.length) {\n        dashboardItem[listItemType] = newContent;\n        dispatch(acUpdateDashboardItem(dashboardItem));\n    } else {\n        dispatch(acRemoveDashboardItem(dashboardItem));\n    }\n};\n","import React, { Fragment } from 'react';\nimport { connect } from 'react-redux';\nimport i18n from '@dhis2/d2-i18n';\nimport Input from '@material-ui/core/Input';\nimport {\n    Parser as RichTextParser,\n    Editor as RichTextEditor,\n} from '@dhis2/d2-ui-rich-text';\n\nimport { acUpdateDashboardItem } from '../../../actions/editDashboard';\nimport { sGetEditDashboardItems } from '../../../reducers/editDashboard';\nimport { sGetDashboardItems } from '../../../reducers/dashboards';\nimport ItemHeader from '../ItemHeader';\nimport Line from '../../../widgets/Line';\n\nconst style = {\n    textDiv: {\n        padding: '10px',\n        whiteSpace: 'pre-line',\n        lineHeight: '20px',\n    },\n    textField: {\n        fontSize: '14px',\n        fontStretch: 'normal',\n        width: '90%',\n        margin: '0 auto',\n        display: 'block',\n        lineHeight: '24px',\n    },\n    container: {\n        marginBottom: '20px',\n        marginTop: '20px',\n    },\n};\n\nconst TextItem = props => {\n    const { item, editMode, text, acUpdateDashboardItem } = props;\n\n    const onChangeText = event => {\n        const updatedItem = {\n            ...item,\n            text: event.target.value,\n        };\n\n        acUpdateDashboardItem(updatedItem);\n    };\n\n    const viewItem = () => {\n        const textDivStyle = Object.assign({}, style.textField, style.textDiv);\n        return (\n            <div className=\"dashboard-item-content\" style={style.container}>\n                <RichTextParser style={textDivStyle}>{text}</RichTextParser>\n            </div>\n        );\n    };\n\n    const editItem = () => {\n        return (\n            <Fragment>\n                <ItemHeader title={i18n.t('Text item')} />\n                <Line />\n                <div className=\"dashboard-item-content\">\n                    <RichTextEditor onEdit={onChangeText}>\n                        <Input\n                            value={text}\n                            multiline\n                            fullWidth\n                            style={style.textField}\n                            placeholder={i18n.t('Add text here')}\n                            onChange={onChangeText}\n                        />\n                    </RichTextEditor>\n                </div>\n            </Fragment>\n        );\n    };\n\n    return <Fragment>{editMode ? editItem() : viewItem()}</Fragment>;\n};\n\nconst mapStateToProps = (state, ownProps) => {\n    const items = ownProps.editMode\n        ? sGetEditDashboardItems(state)\n        : sGetDashboardItems(state);\n\n    const item = items.find(item => item.id === ownProps.item.id);\n\n    return {\n        text: item ? item.text : '',\n    };\n};\n\nexport default connect(\n    mapStateToProps,\n    {\n        acUpdateDashboardItem,\n    }\n)(TextItem);\n","import React, { Fragment } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport NotInterestedIcon from '@material-ui/icons/NotInterested';\n\nimport { FILTER_ORG_UNIT } from '../../../actions/itemFilters';\nimport { sGetItemFiltersRoot } from '../../../reducers/itemFilters';\nimport ItemHeader from '../ItemHeader';\nimport Line from '../../../widgets/Line';\n\nconst getIframeSrc = (appDetails, item, itemFilters) => {\n    let iframeSrc = `${appDetails.launchUrl}?dashboardItemId=${item.id}`;\n\n    if (\n        itemFilters &&\n        itemFilters[FILTER_ORG_UNIT] &&\n        itemFilters[FILTER_ORG_UNIT].length\n    ) {\n        const ouIds = itemFilters[FILTER_ORG_UNIT].map(\n            ouPath => ouPath.split('/').slice(-1)[0]\n        );\n\n        iframeSrc += `&userOrgUnit=${ouIds.join(',')}`;\n    }\n\n    return iframeSrc;\n};\n\nconst AppItem = ({ item, itemFilters }, context) => {\n    let appDetails;\n\n    const appKey = item.appKey;\n\n    if (appKey) {\n        appDetails = context.d2.system.installedApps.find(\n            app => app.key === appKey\n        );\n    }\n\n    return appDetails && appDetails.name && appDetails.launchUrl ? (\n        <Fragment>\n            <ItemHeader title={appDetails.name} />\n            <Line />\n            <iframe\n                title={appDetails.name}\n                src={getIframeSrc(appDetails, item, itemFilters)}\n                className=\"dashboard-item-content\"\n                style={{ border: 'none' }}\n            />\n        </Fragment>\n    ) : (\n        <Fragment>\n            <ItemHeader title={`${appKey} app not found`} />\n            <Line />\n            <div\n                className=\"dashboard-item-content\"\n                style={{\n                    display: 'flex',\n                    justifyContent: 'center',\n                    alignItems: 'center',\n                    height: '90%',\n                }}\n            >\n                <NotInterestedIcon\n                    color=\"disabled\"\n                    disabled\n                    style={{ width: 100, height: 100, align: 'center' }}\n                />\n            </div>\n        </Fragment>\n    );\n};\n\nAppItem.contextTypes = {\n    d2: PropTypes.object,\n};\n\nconst mapStateToProps = state => ({\n    itemFilters: sGetItemFiltersRoot(state),\n});\n\nexport default connect(mapStateToProps)(AppItem);\n","import React, { Fragment } from 'react';\nimport i18n from '@dhis2/d2-i18n';\n\nimport { colors } from '../../../modules/colors';\nimport ItemHeader from '../ItemHeader';\n\nconst style = {\n    margin: '21px 28px',\n    fontSize: '14px',\n    lineHeight: '18px',\n    color: colors.charcoalGrey,\n};\n\nconst SpacerItem = () => {\n    return (\n        <Fragment>\n            <ItemHeader title={i18n.t('Spacer')} />\n            <p style={style}>\n                {i18n.t(\n                    'Use a spacer to create empty vertical space between other dashboard items.'\n                )}\n            </p>\n        </Fragment>\n    );\n};\n\nexport default SpacerItem;\n","import React from 'react';\n\nimport VisualizationItem from './VisualizationItem/Item';\nimport MessagesItem from './MessagesItem/Item';\nimport NotSupportedItem from './NotSupportedItem/Item';\nimport ListItem from './ListItem/Item';\nimport TextItem from './TextItem/Item';\nimport AppItem from './AppItem/Item';\nimport SpacerItem from './SpacerItem/Item';\nimport {\n    APP,\n    REPORT_TABLE,\n    CHART,\n    MAP,\n    EVENT_CHART,\n    EVENT_REPORT,\n    MESSAGES,\n    REPORTS,\n    RESOURCES,\n    USERS,\n    TEXT,\n    SPACER,\n} from '../../modules/itemTypes';\nimport { DEFAULT_STATE_ITEM_FILTERS } from '../../reducers/itemFilters';\n\nconst getGridItem = type => {\n    switch (type) {\n        case REPORT_TABLE:\n        case CHART:\n        case MAP:\n        case EVENT_CHART:\n        case EVENT_REPORT:\n            return VisualizationItem;\n        case MESSAGES:\n            return MessagesItem;\n        case REPORTS:\n        case RESOURCES:\n        case USERS:\n            return ListItem;\n        case TEXT:\n            return TextItem;\n        case SPACER:\n            return SpacerItem;\n        case APP:\n            return AppItem;\n        default:\n            return NotSupportedItem;\n    }\n};\n\nexport const Item = props => {\n    const GridItem = getGridItem(props.item.type);\n\n    return (\n        <GridItem\n            item={props.item}\n            editMode={props.editMode}\n            itemFilters={\n                props.editMode ? DEFAULT_STATE_ITEM_FILTERS : props.itemFilters\n            }\n            onToggleItemExpanded={props.onToggleItemExpanded}\n        />\n    );\n};\n","import React from 'react';\nimport ItemHeaderButton from '../Item/ItemHeaderButton';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport { colors } from '../../modules/colors';\n\nconst style = {\n    button: {\n        position: 'absolute',\n        top: '7px',\n        right: '7px',\n        zIndex: '1000',\n    },\n    icon: {\n        fill: colors.red,\n    },\n};\n\nconst DeleteItemHeaderButton = ({ onClick }) => (\n    <ItemHeaderButton onClick={onClick} style={style.button}>\n        <DeleteIcon style={style.icon} />\n    </ItemHeaderButton>\n);\n\nexport default DeleteItemHeaderButton;\n","import React from 'react';\nimport { colors } from '../modules/colors';\n\nexport const NoContentMessage = ({ text }) => (\n    <div\n        style={{\n            padding: '50px 10px',\n            textAlign: 'center',\n            fontSize: '15px',\n            fontWeight: 500,\n            color: colors.charcoalGrey,\n        }}\n    >\n        {text}\n    </div>\n);\n\nexport default NoContentMessage;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport debounce from 'lodash/debounce';\n\nconst defaultDebounceMs = 100;\nconst defaultBufferFactor = 0.25;\n\nclass ProgressiveLoadingContainer extends Component {\n    static propTypes = {\n        children: PropTypes.node.isRequired,\n        debounceMs: PropTypes.number,\n        bufferFactor: PropTypes.number,\n    };\n    static defaultProps = {\n        debounceMs: defaultDebounceMs,\n        bufferFactor: defaultBufferFactor,\n    };\n\n    state = {\n        shouldLoad: false,\n    };\n    containerRef = null;\n    shouldLoadHandler = null;\n\n    checkShouldLoad() {\n        const bufferPx = this.props.bufferFactor * window.innerHeight;\n\n        if (!this.containerRef) {\n            return;\n        }\n\n        const rect = this.containerRef.getBoundingClientRect();\n        if (\n            rect.bottom > -bufferPx &&\n            rect.top < window.innerHeight + bufferPx\n        ) {\n            this.setState({\n                shouldLoad: true,\n            });\n\n            this.removeHandler();\n        }\n    }\n\n    registerHandler() {\n        this.shouldLoadHandler = debounce(\n            () => this.checkShouldLoad(),\n            this.props.debounceMs\n        );\n\n        window.addEventListener('scroll', this.shouldLoadHandler);\n    }\n    removeHandler() {\n        window.removeEventListener('scroll', this.shouldLoadHandler);\n    }\n\n    componentDidMount() {\n        this.registerHandler();\n        this.checkShouldLoad();\n    }\n\n    componentWillUnmount() {\n        this.removeHandler();\n    }\n\n    render() {\n        const { children, debounceMs, bufferFactor, ...props } = this.props;\n        const { shouldLoad } = this.state;\n\n        return (\n            <div ref={ref => (this.containerRef = ref)} {...props}>\n                {shouldLoad && children}\n            </div>\n        );\n    }\n}\n\nexport default ProgressiveLoadingContainer;\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport i18n from '@dhis2/d2-i18n';\nimport ReactGridLayout from 'react-grid-layout';\nimport { CircularProgress, ScreenCover } from '@dhis2/ui-core';\n\nimport {\n    acUpdateDashboardLayout,\n    acRemoveDashboardItem,\n} from '../../actions/editDashboard';\nimport { Item } from '../Item/Item';\nimport { resize as pluginResize } from '../Item/VisualizationItem/plugin';\nimport { isPluginType } from '../../modules/itemTypes';\nimport {\n    GRID_ROW_HEIGHT,\n    GRID_COMPACT_TYPE,\n    ITEM_MIN_HEIGHT,\n    MARGIN,\n    getGridColumns,\n    hasShape,\n    onItemResize,\n} from './gridUtil';\nimport { orArray } from '../../modules/util';\nimport DeleteItemButton from './DeleteItemButton';\nimport NoContentMessage from '../../widgets/NoContentMessage';\n\nimport 'react-grid-layout/css/styles.css';\nimport 'react-resizable/css/styles.css';\n\nimport './ItemGrid.css';\nimport { sGetSelectedId, sGetSelectedIsLoading } from '../../reducers/selected';\nimport {\n    sGetEditDashboardRoot,\n    sGetEditDashboardItems,\n} from '../../reducers/editDashboard';\nimport {\n    sGetDashboardById,\n    sGetDashboardItems,\n} from '../../reducers/dashboards';\nimport ProgressiveLoadingContainer from '../Item/ProgressiveLoadingContainer';\n\n// Component\n\nconst EXPANDED_HEIGHT = 17;\n\nexport class ItemGrid extends Component {\n    state = {\n        expandedItems: {},\n    };\n\n    onToggleItemExpanded = clickedId => {\n        const isExpanded =\n            typeof this.state.expandedItems[clickedId] === 'boolean'\n                ? this.state.expandedItems[clickedId]\n                : false;\n\n        const expandedItems = { ...this.state.expandedItems };\n        expandedItems[clickedId] = !isExpanded;\n        this.setState({ expandedItems });\n    };\n\n    onRemoveItem = clickedId => {\n        this.props.acRemoveDashboardItem(clickedId);\n    };\n\n    componentWillReceiveProps(nextProps) {\n        if (nextProps.edit) {\n            this.setState({ expandedItems: {} });\n        }\n    }\n\n    onLayoutChange = newLayout => {\n        if (this.props.edit) {\n            this.props.acUpdateDashboardLayout(newLayout);\n        }\n    };\n\n    onResizeStop = (layout, oldItem, newItem) => {\n        onItemResize(newItem.i);\n\n        const dashboardItem = this.props.dashboardItems.find(\n            item => item.id === newItem.i\n        );\n\n        // call resize on the item component if it's a plugin type\n        if (dashboardItem && isPluginType(dashboardItem)) {\n            pluginResize(dashboardItem);\n        }\n    };\n\n    onRemoveItemWrapper = id => () => this.onRemoveItem(id);\n\n    render() {\n        const { edit, isLoading, dashboardItems } = this.props;\n\n        if (!isLoading && !dashboardItems.length) {\n            return (\n                <NoContentMessage\n                    text={i18n.t('There are no items on this dashboard')}\n                />\n            );\n        }\n\n        const items = dashboardItems.map(item => {\n            const expandedItem = this.state.expandedItems[item.id];\n            let hProp = { h: item.h };\n\n            if (expandedItem && expandedItem === true) {\n                hProp.h = item.h + EXPANDED_HEIGHT;\n            }\n\n            return Object.assign({}, item, hProp, {\n                i: item.id,\n                minH: ITEM_MIN_HEIGHT,\n            });\n        });\n\n        return (\n            <div className=\"grid-wrapper\">\n                {isLoading ? (\n                    <ScreenCover>\n                        <CircularProgress />\n                    </ScreenCover>\n                ) : null}\n                <ReactGridLayout\n                    onLayoutChange={this.onLayoutChange}\n                    onResizeStop={this.onResizeStop}\n                    className=\"layout\"\n                    layout={items}\n                    margin={MARGIN}\n                    cols={getGridColumns()}\n                    rowHeight={GRID_ROW_HEIGHT}\n                    width={window.innerWidth}\n                    compactType={GRID_COMPACT_TYPE}\n                    isDraggable={edit}\n                    isResizable={edit}\n                    draggableCancel=\"input,textarea\"\n                >\n                    {items.map(item => {\n                        const itemClassNames = [\n                            item.type,\n                            edit ? 'edit' : 'view',\n                        ].join(' ');\n\n                        return (\n                            <ProgressiveLoadingContainer\n                                key={item.i}\n                                className={itemClassNames}\n                            >\n                                {edit ? (\n                                    <DeleteItemButton\n                                        onClick={this.onRemoveItemWrapper(\n                                            item.id\n                                        )}\n                                    />\n                                ) : null}\n                                <Item\n                                    item={item}\n                                    editMode={edit}\n                                    onToggleItemExpanded={\n                                        this.onToggleItemExpanded\n                                    }\n                                />\n                            </ProgressiveLoadingContainer>\n                        );\n                    })}\n                </ReactGridLayout>\n            </div>\n        );\n    }\n}\n\nItemGrid.propTypes = {\n    dashboardItems: PropTypes.array,\n};\n\nItemGrid.defaultProps = {\n    dashboardItems: [],\n};\n\n// Container\n\nconst mapStateToProps = (state, ownProps) => {\n    const selectedDashboard = ownProps.edit\n        ? sGetEditDashboardRoot(state)\n        : sGetDashboardById(state, sGetSelectedId(state));\n\n    const dashboardItems = ownProps.edit\n        ? sGetEditDashboardItems(state)\n        : sGetDashboardItems(state);\n\n    return {\n        isLoading: sGetSelectedIsLoading(state) || !selectedDashboard,\n        dashboardItems,\n    };\n};\n\nconst mapDispatchToProps = {\n    acUpdateDashboardLayout,\n    acRemoveDashboardItem,\n};\n\nconst mergeProps = (stateProps, dispatchProps, ownProps) => {\n    const validItems = orArray(stateProps.dashboardItems).filter(hasShape);\n\n    return {\n        ...dispatchProps,\n        edit: ownProps.edit,\n        isLoading: stateProps.isLoading,\n        dashboardItems: validItems,\n        onItemResize,\n    };\n};\n\nexport default connect(\n    mapStateToProps,\n    mapDispatchToProps,\n    mergeProps\n)(ItemGrid);\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nimport i18n from '@dhis2/d2-i18n';\n\nimport { colors } from '../../modules/colors';\n\nconst styles = {\n    badgeContainer: {\n        margin: '2px',\n        padding: '0 16px',\n        borderRadius: '4px',\n        color: colors.white,\n        backgroundColor: '#212934',\n        height: 36,\n        display: 'flex',\n        alignItems: 'center',\n    },\n    badge: {\n        fontSize: '13px',\n        cursor: 'pointer',\n        whiteSpace: 'nowrap',\n    },\n    badgeRemove: {\n        fontSize: '12px',\n        textDecoration: 'underline',\n        marginLeft: '24px',\n        cursor: 'pointer',\n    },\n};\n\nclass FilterBadge extends Component {\n    onClick = id => () => this.props.onClick(id);\n    onRemove = id => () => this.props.onRemove(id);\n\n    render() {\n        const { data } = this.props;\n\n        return (\n            <div style={styles.badgeContainer}>\n                <span style={styles.badge} onClick={this.onClick(data.id)}>\n                    {`${data.name}: ${\n                        data.values.length > 1\n                            ? i18n.t('{{count}} selected', {\n                                  count: data.values.length,\n                              })\n                            : data.values[0].name\n                    }`}\n                </span>\n                <span\n                    style={styles.badgeRemove}\n                    onClick={this.onRemove(data.id)}\n                >\n                    {i18n.t('Remove')}\n                </span>\n            </div>\n        );\n    }\n}\n\nFilterBadge.propTypes = {\n    data: PropTypes.object.isRequired,\n    onClick: PropTypes.func.isRequired,\n    onRemove: PropTypes.func.isRequired,\n};\n\nFilterBadge.defaultProps = {\n    onClick: Function.prototype,\n    onRemove: Function.prototype,\n};\n\nexport default FilterBadge;\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { createSelector } from 'reselect';\nimport { withStyles } from '@material-ui/core/styles';\n\nimport { sGetDimensions } from '../../reducers/dimensions';\nimport { sGetItemFiltersRoot } from '../../reducers/itemFilters';\nimport { sGetControlBarUserRows } from '../../reducers/controlBar';\nimport { getTopOffset } from '../ControlBar/controlBarDimensions';\nimport { acRemoveItemFilter } from '../../actions/itemFilters';\nimport { acRemoveEditItemFilter } from '../../actions/editItemFilters';\nimport { acSetActiveModalDimension } from '../../actions/activeModalDimension';\n\nimport FilterBadge from './FilterBadge';\n\nconst styles = {\n    bar: {\n        position: 'sticky',\n        zIndex: 7,\n        padding: '8px 0',\n        display: 'flex',\n        justifyContent: 'center',\n        flexWrap: 'wrap',\n    },\n};\n\nexport class FilterBar extends Component {\n    onBadgeRemove = id => {\n        this.props.removeItemFilter(id);\n        this.props.removeEditItemFilter(id);\n    };\n\n    onBadgeClick = id => {\n        this.props.setActiveModalDimension({\n            id,\n            name: this.props.filters.find(item => item.id === id).name,\n        });\n    };\n\n    render() {\n        const { filters, userRows, classes } = this.props;\n        const top = getTopOffset(userRows) + 10;\n\n        return filters.length ? (\n            <div className={classes.bar} style={{ top }}>\n                {filters.map(filter => (\n                    <FilterBadge\n                        key={filter.id}\n                        data={filter}\n                        onClick={this.onBadgeClick}\n                        onRemove={this.onBadgeRemove}\n                    />\n                ))}\n            </div>\n        ) : null;\n    }\n}\n\nFilterBar.propTypes = {\n    filters: PropTypes.array.isRequired,\n    removeItemFilter: PropTypes.func.isRequired,\n    removeEditItemFilter: PropTypes.func.isRequired,\n};\n\nFilterBar.defaultProps = {\n    filters: [],\n    removeItemFIlter: Function.prototype,\n    removeEditItemFilter: Function.prototype,\n};\n\n// simplify the filters structure to:\n// [{ id: 'pe', name: 'Period', values: [{ id: 2019: name: '2019' }, {id: 'LAST_MONTH', name: 'Last month' }]}, ...]\nconst filtersSelector = createSelector(\n    [sGetItemFiltersRoot, sGetDimensions],\n    (filters, dimensions) =>\n        Object.keys(filters).reduce((arr, id) => {\n            arr.push({\n                id: id,\n                name: dimensions[id].name,\n                values: filters[id].map(value => ({\n                    id: value.id,\n                    name: value.displayName || value.name,\n                })),\n            });\n\n            return arr;\n        }, [])\n);\n\nconst mapStateToProps = state => ({\n    filters: filtersSelector(state),\n    userRows: sGetControlBarUserRows(state),\n});\n\nexport default connect(\n    mapStateToProps,\n    {\n        setActiveModalDimension: acSetActiveModalDimension,\n        removeItemFilter: acRemoveItemFilter,\n        removeEditItemFilter: acRemoveEditItemFilter,\n    }\n)(withStyles(styles)(FilterBar));\n","import React, { Fragment } from 'react';\nimport TitleBar from '../TitleBar/TitleBar';\nimport ItemGrid from '../ItemGrid/ItemGrid';\nimport FilterBar from '../FilterBar/FilterBar';\n\nexport const DashboardContent = props => (\n    <Fragment>\n        <TitleBar edit={props.editMode} />\n        <FilterBar />\n        <ItemGrid edit={props.editMode} />\n    </Fragment>\n);\n\nexport default DashboardContent;\n","import React, { Fragment } from 'react';\nimport { connect } from 'react-redux';\nimport isEmpty from 'lodash/isEmpty';\nimport i18n from '@dhis2/d2-i18n';\n\nimport {\n    sGetAllDashboards,\n    sDashboardsIsFetching,\n} from '../../reducers/dashboards';\nimport { sGetSelectedId } from '../../reducers/selected';\nimport DashboardsBar from '../ControlBar/DashboardsBar';\nimport DashboardVerticalOffset from './DashboardVerticalOffset';\nimport DashboardContent from './DashboardContent';\nimport NoContentMessage from '../../widgets/NoContentMessage';\n\nexport const Content = ({ hasDashboardContent, dashboardsIsEmpty }) => {\n    const msg = dashboardsIsEmpty\n        ? i18n.t(\n              'No dashboards found. Use the + button to create a new dashboard.'\n          )\n        : i18n.t('Requested dashboard not found');\n\n    return hasDashboardContent ? (\n        <DashboardContent editMode={false} />\n    ) : (\n        <NoContentMessage text={msg} />\n    );\n};\n\nexport const ViewDashboard = ({ id, dashboardsIsEmpty, dashboardsLoaded }) => {\n    const hasDashboardContent = id && !dashboardsIsEmpty;\n    const contentNotReady = !dashboardsLoaded || id === null;\n\n    return (\n        <Fragment>\n            <DashboardsBar />\n            <DashboardVerticalOffset />\n            <div className=\"dashboard-wrapper\">\n                {contentNotReady ? null : (\n                    <Content\n                        hasDashboardContent={hasDashboardContent}\n                        dashboardsIsEmpty={dashboardsIsEmpty}\n                    />\n                )}\n            </div>\n        </Fragment>\n    );\n};\n\nconst mapStateToProps = state => {\n    const dashboards = sGetAllDashboards(state);\n\n    return {\n        id: sGetSelectedId(state),\n        dashboardsIsEmpty: isEmpty(dashboards),\n        dashboardsLoaded: !sDashboardsIsFetching(state),\n    };\n};\n\nexport default connect(mapStateToProps)(ViewDashboard);\n","import React from 'react';\nimport i18n from '@dhis2/d2-i18n';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport { Button } from '@dhis2/ui-core';\n\nexport const ConfirmDeleteDialog = ({\n    dashboardName,\n    onDeleteConfirmed,\n    onContinueEditing,\n    open,\n}) => {\n    const actions = [\n        <Button key=\"cancel\" secondary onClick={onContinueEditing}>\n            {i18n.t('Cancel')}\n        </Button>,\n        <Button key=\"delete\" destructive onClick={onDeleteConfirmed}>\n            {i18n.t('Delete')}\n        </Button>,\n    ];\n\n    return (\n        <Dialog open={open} onClose={onContinueEditing}>\n            <DialogTitle style={{ fontSize: '1.25rem', fontWeight: '450' }}>\n                {i18n.t('Delete dashboard')}\n            </DialogTitle>\n            <DialogContent>\n                <DialogContentText style={{ fontSize: '0.875rem' }}>\n                    {i18n.t(\n                        'Deleting dashboard \"{{ dashboardName }}\" will remove it for all users. This action cannot be undone. Are you sure you want to permanently delete this dashboard?',\n                        { dashboardName }\n                    )}\n                </DialogContentText>\n            </DialogContent>\n            <DialogActions>{actions}</DialogActions>\n        </Dialog>\n    );\n};\n\nexport default ConfirmDeleteDialog;\n","import React, { Component, Fragment } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { Redirect } from 'react-router-dom';\nimport i18n from '@dhis2/d2-i18n';\nimport ControlBar from './ControlBar';\nimport TranslationDialog from '@dhis2/d2-ui-translation-dialog';\nimport { Button } from '@dhis2/ui-core';\n\nimport ConfirmDeleteDialog from './ConfirmDeleteDialog';\nimport {\n    tSaveDashboard,\n    acClearEditDashboard,\n} from '../../actions/editDashboard';\nimport {\n    tDeleteDashboard,\n    acSetDashboardDisplayName,\n} from '../../actions/dashboards';\nimport {\n    sGetEditDashboardRoot,\n    sGetIsNewDashboard,\n} from '../../reducers/editDashboard';\nimport {\n    CONTROL_BAR_ROW_HEIGHT,\n    MIN_ROW_COUNT,\n    getControlBarHeight,\n} from './controlBarDimensions';\nimport { apiFetchDashboard } from '../../api/dashboards';\n\nimport classes from './styles/DashboardsBar.module.css';\n\nconst buttonBarStyle = {\n    height: CONTROL_BAR_ROW_HEIGHT,\n    paddingTop: '15px',\n    marginLeft: '15px',\n    marginRight: '15px',\n};\n\nexport class EditBar extends Component {\n    state = {\n        translationDialogIsOpen: false,\n        dashboardModel: undefined,\n        confirmDeleteDialogOpen: false,\n        redirectUrl: undefined,\n    };\n\n    onConfirmDelete = () => {\n        this.setState({ confirmDeleteDialogOpen: true });\n    };\n\n    onSave = () => {\n        this.props.onSave().then(newId => {\n            this.setState({ redirectUrl: `/${newId}` });\n        });\n    };\n\n    onDiscard = () => {\n        this.props.onDiscardChanges();\n        const redirectUrl = this.props.dashboardId\n            ? `/${this.props.dashboardId}`\n            : '/';\n        this.setState({ redirectUrl });\n    };\n\n    onContinueEditing = () => {\n        this.setState({ confirmDeleteDialogOpen: false });\n    };\n\n    onDeleteConfirmed = () => {\n        this.setState({ confirmDeleteDialogOpen: false });\n        this.props.onDelete(this.props.dashboardId).then(() => {\n            this.setState({ redirectUrl: '/' });\n        });\n    };\n\n    onTranslationsSaved = async translations => {\n        if (translations && translations.length) {\n            const dbLocale = await this.context.d2.currentUser.userSettings.get(\n                'keyDbLocale'\n            );\n\n            const translation = translations.find(\n                t => t.locale === dbLocale && t.property === 'NAME'\n            );\n\n            if (translation && translation.value) {\n                this.props.onTranslate(\n                    this.props.dashboardId,\n                    translation.value\n                );\n            }\n        }\n    };\n\n    fetchDashboardModel = () => {\n        if (this.props.dashboardId && !this.state.dashboardModel) {\n            apiFetchDashboard(this.props.dashboardId).then(dashboardModel =>\n                this.setState({ dashboardModel })\n            );\n        }\n    };\n\n    componentDidMount() {\n        this.fetchDashboardModel();\n    }\n\n    componentDidUpdate() {\n        this.fetchDashboardModel();\n    }\n\n    toggleTranslationDialog = () => {\n        this.setState({\n            translationDialogIsOpen: !this.state.translationDialogIsOpen,\n        });\n    };\n\n    confirmDeleteDialog = () =>\n        this.props.deleteAccess && this.props.dashboardId ? (\n            <ConfirmDeleteDialog\n                dashboardName={this.props.dashboardName}\n                onDeleteConfirmed={this.onDeleteConfirmed}\n                onContinueEditing={this.onContinueEditing}\n                open={this.state.confirmDeleteDialogOpen}\n            />\n        ) : null;\n\n    translationDialog = () =>\n        this.state.dashboardModel && this.state.dashboardModel.id ? (\n            <TranslationDialog\n                className=\"translation-dialog\"\n                d2={this.context.d2}\n                open={this.state.translationDialogIsOpen}\n                onRequestClose={this.toggleTranslationDialog}\n                objectToTranslate={this.state.dashboardModel}\n                fieldsToTranslate={['name', 'description']}\n                // TODO handle messages in snackbar\n                onTranslationSaved={this.onTranslationsSaved}\n                onTranslationError={err =>\n                    console.log('translation update error', err)\n                }\n            />\n        ) : null;\n\n    render() {\n        if (this.state.redirectUrl) {\n            return <Redirect to={this.state.redirectUrl} />;\n        }\n\n        const { dashboardId, deleteAccess, updateAccess } = this.props;\n        const controlBarHeight = getControlBarHeight(MIN_ROW_COUNT);\n\n        const discardBtnText = updateAccess\n            ? i18n.t('Exit without saving')\n            : i18n.t('Go to dashboards');\n\n        return (\n            <Fragment>\n                <ControlBar height={controlBarHeight} editMode={true}>\n                    <div style={buttonBarStyle}>\n                        {updateAccess ? (\n                            <div className={classes.leftControls}>\n                                <span style={{ marginRight: '15px' }}>\n                                    <Button primary onClick={this.onSave}>\n                                        {i18n.t('Save changes')}\n                                    </Button>\n                                </span>\n\n                                {dashboardId ? (\n                                    <span style={{ marginRight: '15px' }}>\n                                        <Button\n                                            onClick={\n                                                this.toggleTranslationDialog\n                                            }\n                                        >\n                                            {i18n.t('Translate')}\n                                        </Button>\n                                    </span>\n                                ) : null}\n                                {dashboardId && deleteAccess ? (\n                                    <Button onClick={this.onConfirmDelete}>\n                                        {i18n.t('Delete')}\n                                    </Button>\n                                ) : null}\n                            </div>\n                        ) : null}\n\n                        <div className={classes.rightControls}>\n                            <Button secondary onClick={this.onDiscard}>\n                                {discardBtnText}\n                            </Button>\n                        </div>\n                    </div>\n                </ControlBar>\n                {this.translationDialog()}\n                {this.confirmDeleteDialog()}\n            </Fragment>\n        );\n    }\n}\n\nEditBar.contextTypes = {\n    d2: PropTypes.object,\n};\n\nconst mapStateToProps = state => {\n    const dashboard = sGetEditDashboardRoot(state);\n\n    let deleteAccess;\n    let updateAccess;\n    if (sGetIsNewDashboard(state)) {\n        deleteAccess = true;\n        updateAccess = true;\n    } else {\n        updateAccess = dashboard.access ? dashboard.access.update : false;\n        deleteAccess = dashboard.access ? dashboard.access.delete : false;\n    }\n\n    return {\n        dashboardId: dashboard.id,\n        dashboardName: dashboard.name,\n        deleteAccess,\n        updateAccess,\n    };\n};\n\nconst mapDispatchToProps = dispatch => ({\n    onSave: () => dispatch(tSaveDashboard()).then(id => id),\n    onDelete: id => dispatch(tDeleteDashboard(id)),\n    onDiscardChanges: () => dispatch(acClearEditDashboard()),\n    onTranslate: (id, value) => dispatch(acSetDashboardDisplayName(id, value)),\n});\n\nexport default connect(\n    mapStateToProps,\n    mapDispatchToProps\n)(EditBar);\n","import React, { Fragment, Component } from 'react';\nimport { connect } from 'react-redux';\nimport i18n from '@dhis2/d2-i18n';\n\nimport { acSetEditDashboard } from '../../actions/editDashboard';\nimport { sGetSelectedId } from '../../reducers/selected';\nimport {\n    sGetDashboardById,\n    sGetDashboardItems,\n    sDashboardsIsFetching,\n} from '../../reducers/dashboards';\nimport DashboardVerticalOffset from './DashboardVerticalOffset';\nimport DashboardContent from './DashboardContent';\nimport EditBar from '../ControlBar/EditBar';\nimport NoContentMessage from '../../widgets/NoContentMessage';\n\nexport const Content = ({ updateAccess }) => {\n    return updateAccess ? (\n        <DashboardContent editMode={true} />\n    ) : (\n        <NoContentMessage text={i18n.t('No access')} />\n    );\n};\nexport class EditDashboard extends Component {\n    state = {\n        initialized: false,\n    };\n\n    initEditDashboard = () => {\n        if (this.props.dashboard) {\n            this.setState({ initialized: true });\n            this.props.setEditDashboard(this.props.dashboard, this.props.items);\n        }\n    };\n\n    componentDidMount() {\n        this.initEditDashboard();\n    }\n\n    componentDidUpdate() {\n        if (!this.state.initialized) {\n            this.initEditDashboard();\n        }\n    }\n\n    getDashboardContent = () => {\n        const contentNotReady =\n            !this.props.dashboardsLoaded || this.props.id === null;\n\n        return (\n            <div className=\"dashboard-wrapper\">\n                {contentNotReady ? null : (\n                    <Content updateAccess={this.props.updateAccess} />\n                )}\n            </div>\n        );\n    };\n\n    render() {\n        return (\n            <Fragment>\n                <EditBar />\n                <DashboardVerticalOffset editMode={true} />\n                {this.getDashboardContent()}\n            </Fragment>\n        );\n    }\n}\n\nconst mapStateToProps = state => {\n    const id = sGetSelectedId(state);\n    const dashboard = id ? sGetDashboardById(state, id) : null;\n\n    const updateAccess =\n        dashboard && dashboard.access ? dashboard.access.update : false;\n\n    return {\n        dashboard,\n        id,\n        updateAccess,\n        items: sGetDashboardItems(state),\n        dashboardsLoaded: !sDashboardsIsFetching(state),\n    };\n};\n\nexport default connect(\n    mapStateToProps,\n    {\n        setEditDashboard: acSetEditDashboard,\n    }\n)(EditDashboard);\n","import React, { Component, Fragment } from 'react';\nimport { connect } from 'react-redux';\n\nimport { acSetEditNewDashboard } from '../../actions/editDashboard';\nimport DashboardVerticalOffset from './DashboardVerticalOffset';\nimport EditBar from '../ControlBar/EditBar';\nimport DashboardContent from './DashboardContent';\n\nclass NewDashboard extends Component {\n    componentDidMount() {\n        this.props.setNewDashboard();\n    }\n\n    render() {\n        return (\n            <Fragment>\n                <EditBar />\n                <DashboardVerticalOffset editMode={true} />\n                <div className=\"dashboard-wrapper\">\n                    <DashboardContent editMode={true} />\n                </div>\n            </Fragment>\n        );\n    }\n}\n\nexport default connect(\n    null,\n    {\n        setNewDashboard: acSetEditNewDashboard,\n    }\n)(NewDashboard);\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\n\nimport { tSelectDashboard } from '../../actions/dashboards';\nimport { sDashboardsIsFetching } from '../../reducers/dashboards';\nimport { EDIT, NEW } from './dashboardModes';\nimport ViewDashboard from './ViewDashboard';\nimport EditDashboard from './EditDashboard';\nimport NewDashboard from './NewDashboard';\n\nclass Dashboard extends Component {\n    setDashboard = () => {\n        if (this.props.dashboardsLoaded) {\n            const id = this.props.match.params.dashboardId || null;\n\n            this.props.selectDashboard(id);\n\n            this.scrollToTop();\n        }\n    };\n\n    scrollToTop = () => {\n        window.scrollTo(0, 0);\n    };\n\n    componentDidMount() {\n        this.setDashboard();\n    }\n\n    componentDidUpdate() {\n        this.setDashboard();\n    }\n\n    render() {\n        switch (this.props.mode) {\n            case EDIT:\n                return <EditDashboard />;\n            case NEW:\n                return <NewDashboard />;\n            default:\n                return <ViewDashboard />;\n        }\n    }\n}\n\nconst mapStateToProps = state => {\n    return { dashboardsLoaded: !sDashboardsIsFetching(state) };\n};\n\nexport default connect(\n    mapStateToProps,\n    {\n        selectDashboard: tSelectDashboard,\n    }\n)(Dashboard);\n","export const EDIT = 'edit';\nexport const NEW = 'new';\nexport const VIEW = 'view';\n","import React, { Component } from 'react';\nimport { HashRouter as Router, Route, Switch } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport i18n from '@dhis2/d2-i18n';\nimport HeaderBar from '@dhis2/ui/widgets/HeaderBar';\n\nimport { EDIT, VIEW, NEW } from './Dashboard/dashboardModes';\nimport { acReceivedUser } from '../actions/user';\nimport { tFetchDashboards } from '../actions/dashboards';\nimport { tSetControlBarRows } from '../actions/controlBar';\nimport { tSetDimensions } from '../actions/dimensions';\nimport Dashboard from './Dashboard/Dashboard';\nimport SnackbarMessage from './SnackbarMessage/SnackbarMessage';\n\nimport 'typeface-roboto';\nimport './App.css';\n\nexport class App extends Component {\n    componentDidMount() {\n        this.props.setCurrentUser(this.props.d2.currentUser);\n        this.props.fetchDashboards();\n        this.props.setControlBarRows();\n        this.props.setDimensions(this.props.d2);\n    }\n\n    getChildContext() {\n        return { baseUrl: this.props.baseUrl, i18n, d2: this.props.d2 };\n    }\n\n    render() {\n        return (\n            <div className=\"app-wrapper\">\n                <div className=\"dashboard-header-bar\">\n                    <HeaderBar appName={i18n.t('Dashboard')} />\n                </div>\n                <Router>\n                    <Switch>\n                        <Route\n                            exact\n                            path=\"/\"\n                            render={props => (\n                                <Dashboard {...props} mode={VIEW} />\n                            )}\n                        />\n                        <Route\n                            exact\n                            path=\"/new\"\n                            render={props => (\n                                <Dashboard {...props} mode={NEW} />\n                            )}\n                        />\n                        <Route\n                            exact\n                            path=\"/:dashboardId\"\n                            render={props => (\n                                <Dashboard {...props} mode={VIEW} />\n                            )}\n                        />\n                        <Route\n                            exact\n                            path=\"/:dashboardId/edit\"\n                            render={props => (\n                                <Dashboard {...props} mode={EDIT} />\n                            )}\n                        />\n                    </Switch>\n                </Router>\n                <SnackbarMessage />\n            </div>\n        );\n    }\n}\n\nApp.childContextTypes = {\n    baseUrl: PropTypes.string,\n    i18n: PropTypes.object,\n    d2: PropTypes.object,\n};\n\nconst mapDispatchToProps = dispatch => {\n    return {\n        setCurrentUser: currentUser => dispatch(acReceivedUser(currentUser)),\n        fetchDashboards: () => dispatch(tFetchDashboards()),\n        setControlBarRows: () => dispatch(tSetControlBarRows()),\n        setDimensions: d2 => dispatch(tSetDimensions(d2)),\n    };\n};\n\nexport default connect(\n    null,\n    mapDispatchToProps\n)(App);\n","import { RECEIVED_USER } from '../reducers/user';\n\nexport const acReceivedUser = value => ({\n    type: RECEIVED_USER,\n    value,\n});\n","//------------------------------------------------------------------------------\n// <auto-generated>\n// This code was generated by d2-i18n-generate.\n//\n// Changes to this file may cause incorrect behavior and will be lost if\n// the code is regenerated.\n// </auto-generated>\n//------------------------------------------------------------------------------\nimport i18n from '@dhis2/d2-i18n';\nimport moment from 'moment';\nimport 'moment/locale/lo';\nimport 'moment/locale/sv';\nimport 'moment/locale/ur';\nimport 'moment/locale/vi';\n\nimport enTranslations from './en/translations.json';\nimport loTranslations from './lo/translations.json';\nimport svTranslations from './sv/translations.json';\nimport urTranslations from './ur/translations.json';\nimport viTranslations from './vi/translations.json';\n\nconst namespace = 'dashboards-app';\nmoment.locale('en');\n\ni18n.addResources('en', namespace, enTranslations);\ni18n.addResources('lo', namespace, loTranslations);\ni18n.addResources('sv', namespace, svTranslations);\ni18n.addResources('ur', namespace, urTranslations);\ni18n.addResources('vi', namespace, viTranslations);\n\ni18n.setDefaultNamespace(namespace);\ni18n.changeLanguage('en');\n\nexport default i18n;\n","/** @module reducers/selected */\nimport { validateReducer } from '../modules/util';\n\nexport const SET_STYLE = 'SET_STYLE';\n\nexport const DEFAULT_STATE_STYLE = 'LIST';\n\n/**\n * Reducer functions that computes and returns the new state based on the given action\n * @function\n * @param {Object} state The current state\n * @param {Object} action The action to be evaluated\n */\nconst style = (state = DEFAULT_STATE_STYLE, action) => {\n    switch (action.type) {\n        case SET_STYLE:\n            return validateReducer(action.value, DEFAULT_STATE_STYLE);\n        default:\n            return state;\n    }\n};\n\nexport default style;\n\n/**\n * Selectors that point to specific props in the state object\n * @function\n * @param {Object} state\n * @returns {Object}\n */\nexport const sGetStyleRoot = state => state.style;\n","import { combineReducers } from 'redux';\nimport arraySort from 'd2-utilizr/lib/arraySort';\n\nimport dashboards, { sGetDashboardsRoot } from './dashboards';\nimport selected from './selected';\nimport dashboardsFilter, {\n    ownerData,\n    sGetFilterName,\n    sGetFilterOrder,\n    sGetFilterOwner,\n} from './dashboardsFilter';\nimport controlBar from './controlBar';\nimport visualizations from './visualizations';\nimport editDashboard from './editDashboard';\nimport messages from './messages';\nimport user from './user';\nimport snackbar from './snackbar';\nimport itemFilters from './itemFilters';\nimport editItemFilters from './editItemFilters';\nimport style from './style';\nimport dimensions from './dimensions';\nimport settings from './settings';\nimport activeModalDimension from './activeModalDimension';\n\nconst USER = 'system';\n\n// Reducers\n\nexport default combineReducers({\n    dashboards,\n    selected,\n    dashboardsFilter,\n    controlBar,\n    visualizations,\n    messages,\n    user,\n    editDashboard,\n    itemFilters,\n    editItemFilters,\n    style,\n    snackbar,\n    dimensions,\n    settings,\n    activeModalDimension,\n});\n\n// Map constants to data\nconst mapConstToData = {\n    NAME: 'name',\n    ITEMS: 'numberOfItems',\n    CREATED: 'created',\n    OWNER: 'owner',\n};\n\n// Selectors\n\n// Filter dashboards by name\nexport const sFilterDashboardsByName = (dashboards, filter) =>\n    dashboards.filter(d =>\n        d.displayName.toLowerCase().includes(filter.toLowerCase())\n    );\n\n// Filter dashboards by owner, TODO FIXME\nexport const sFilterDashboardsByOwner = (dashboards, filter) => {\n    const ME = ownerData[1]; // TODO\n    const OTHERS = ownerData[2]; // TODO\n\n    switch (filter) {\n        case ME:\n            return dashboards.filter(d => d.owner === USER);\n        case OTHERS:\n            return dashboards.filter(d => d.owner !== USER);\n        default:\n            return dashboards;\n    }\n};\n\n// Filter dashboards by order\nexport const sFilterDashboardsByOrder = (dashboards, filter) => {\n    const filterValues = filter.split(':');\n\n    const key = filterValues[0];\n    const direction = filterValues[1];\n\n    return arraySort(dashboards, direction, mapConstToData[key]);\n};\n\n// Selectors dependency level 2\n\n// Get filtered dashboards\nexport const sGetFilteredDashboards = state => {\n    const dashboards = sGetDashboardsRoot(state);\n\n    const nameFilter = sGetFilterName(state);\n    const ownerFilter = sGetFilterOwner(state);\n    const orderFilter = sGetFilterOrder(state);\n\n    return sFilterDashboardsByOrder(\n        sFilterDashboardsByName(\n            sFilterDashboardsByOwner(dashboards, ownerFilter),\n            nameFilter\n        ),\n        orderFilter\n    );\n};\n","import { createStore, applyMiddleware, compose } from 'redux';\nimport { createLogger } from 'redux-logger';\nimport thunk from 'redux-thunk';\nimport reducer from './reducers';\n\nconst configureStore = () => {\n    const middleware = [thunk];\n\n    // Enable Redux devtools if extension is installed instead of redux-logger\n    const composeEnhancers =\n        window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\n    if (\n        !window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ &&\n        process.env.NODE_ENV !== 'production'\n    ) {\n        middleware.push(createLogger());\n    }\n\n    return createStore(\n        reducer,\n        composeEnhancers(applyMiddleware(...middleware))\n    );\n};\n\nexport default configureStore;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport { MuiThemeProvider, createMuiTheme } from '@material-ui/core/styles';\nimport { init as d2Init, config, getManifest, getUserSettings } from 'd2';\nimport dhis2theme from '@dhis2/d2-ui-core/theme/mui3.theme';\nimport { colors } from '@dhis2/ui-core';\n\n// temporary workaround until new ui headerbar is ready\nimport 'material-design-icons/iconfont/material-icons.css';\nimport './reset.css';\n\nimport App from './components/App';\nimport './index.css';\nimport i18n from './locales';\nimport configureStore from './configureStore';\n\n// small workaround until ui-core textarea is ready\ndhis2theme.palette.primary.dark = colors.teal600;\n\nconst muiTheme = () => createMuiTheme(dhis2theme);\n\nconst configI18n = userSettings => {\n    const uiLocale = userSettings.keyUiLocale;\n\n    if (uiLocale && uiLocale !== 'en') {\n        config.i18n.sources.add(`./i18n/i18n_module_${uiLocale}.properties`);\n    }\n\n    config.i18n.sources.add('./i18n/i18n_module_en.properties');\n    i18n.changeLanguage(uiLocale);\n};\n\nconst init = async () => {\n    const manifest = await getManifest('./manifest.webapp');\n\n    // log app info\n    console.info(\n        `Dashboards app, v${manifest.version}, ${\n            manifest.manifest_generated_at\n        }`\n    );\n\n    const isProd = process.env.NODE_ENV === 'production';\n\n    if (\n        !isProd &&\n        (!process.env.REACT_APP_DHIS2_BASE_URL ||\n            !process.env.REACT_APP_DHIS2_AUTHORIZATION)\n    ) {\n        throw new Error(\n            'Missing env variables REACT_APP_DHIS2_BASE_URL and REACT_APP_DHIS2_AUTHORIZATION'\n        );\n    }\n\n    // api config\n    const baseUrl = isProd\n        ? manifest.activities.dhis.href\n        : process.env.REACT_APP_DHIS2_BASE_URL;\n    const authorization = process.env.REACT_APP_DHIS2_AUTHORIZATION;\n\n    config.baseUrl = `${baseUrl}/api/${manifest.dhis2.apiVersion}`;\n    config.headers = isProd ? null : { Authorization: authorization };\n    config.schemas = [\n        'chart',\n        'map',\n        'report',\n        'reportTable',\n        'eventChart',\n        'eventReport',\n        'dashboard',\n        'organisationUnit',\n        'userGroup',\n    ];\n\n    getUserSettings()\n        .then(configI18n)\n        .then(() => d2Init(config))\n        .then(initializedD2 => {\n            ReactDOM.render(\n                <Provider store={configureStore()}>\n                    <MuiThemeProvider theme={muiTheme()}>\n                        <App baseUrl={baseUrl} d2={initializedD2} />\n                    </MuiThemeProvider>\n                </Provider>,\n                document.getElementById('root')\n            );\n        });\n};\n\ninit();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"leftControls\":\"DashboardsBar_leftControls__2kr14\",\"rightControls\":\"DashboardsBar_rightControls__2l1lT\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"menuItem\":\"ContentMenuItem_menuItem__2DIcB\",\"launchLink\":\"ContentMenuItem_launchLink__MRANR\",\"label\":\"ContentMenuItem_label__2pIfq\",\"buttonInsert\":\"ContentMenuItem_buttonInsert__1GlZy\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"ControlBar_root__3LaTt\",\"content\":\"ControlBar_content__1r98-\",\"draghandle\":\"ControlBar_draghandle__1VWa0\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"ClearButton_button__2yjcV\",\"icon\":\"ClearButton_icon__1fqj8\"};","import i18n from '@dhis2/d2-i18n';\nimport TableIcon from '@material-ui/icons/ViewList';\nimport ChartIcon from '@material-ui/icons/InsertChart';\nimport MapIcon from '@material-ui/icons/Public';\nimport ExtensionIcon from '@material-ui/icons/Extension';\nimport DescriptionIcon from '@material-ui/icons/Description';\nimport PersonIcon from '@material-ui/icons/Person';\nimport FontDownloadIcon from '@material-ui/icons/FontDownload';\nimport EmailIcon from '@material-ui/icons/Email';\nimport CropFreeIcon from '@material-ui/icons/CropFree';\nimport NotInterestedIcon from '@material-ui/icons/NotInterested';\n\nimport { getBaseUrl } from './util';\n\n// Item types\nexport const REPORT_TABLE = 'REPORT_TABLE';\nexport const CHART = 'CHART';\nexport const MAP = 'MAP';\nexport const EVENT_REPORT = 'EVENT_REPORT';\nexport const EVENT_CHART = 'EVENT_CHART';\nexport const APP = 'APP';\nexport const REPORTS = 'REPORTS';\nexport const RESOURCES = 'RESOURCES';\nexport const USERS = 'USERS';\nexport const MESSAGES = 'MESSAGES';\nexport const TEXT = 'TEXT';\nexport const SPACER = 'SPACER';\n\n// Domain types\nexport const DOMAIN_TYPE_AGGREGATE = 'AGGREGATE';\nexport const DOMAIN_TYPE_TRACKER = 'TRACKER';\n\n// Visualization types\nexport const VISUALIZATION_TYPE_TABLE = 'TABLE';\nexport const VISUALIZATION_TYPE_CHART = 'CHART';\nexport const VISUALIZATION_TYPE_MAP = 'MAP';\n\nexport const spacerContent = 'SPACER_ITEM_FOR_DASHBOARD_LAYOUT_CONVENIENCE';\nexport const emptyTextItemContent = 'TEXT_ITEM_WITH_NO_CONTENT';\nexport const isSpacerType = item =>\n    item.type === TEXT && item.text === spacerContent;\nexport const isTextType = item =>\n    item.type === TEXT && item.text !== spacerContent;\nexport const isPluginType = item =>\n    itemTypeMap[item.type].hasOwnProperty('plugin');\n\nexport const getPlugin = type => {\n    const pluginName = itemTypeMap[type].plugin;\n\n    if (type === CHART) {\n        return true;\n    }\n\n    return global[pluginName];\n};\n\n// Item type map\nexport const itemTypeMap = {\n    [REPORT_TABLE]: {\n        id: REPORT_TABLE,\n        endPointName: 'reportTables',\n        propName: 'reportTable',\n        pluralTitle: i18n.t('Pivot tables'),\n        plugin: 'reportTablePlugin',\n        domainType: DOMAIN_TYPE_AGGREGATE,\n        visualizationType: VISUALIZATION_TYPE_TABLE,\n        appUrl: id => `dhis-web-pivot/?id=${id}`,\n        appName: i18n.t('Pivot Tables'),\n    },\n    [CHART]: {\n        id: CHART,\n        endPointName: 'charts',\n        propName: 'chart',\n        pluralTitle: i18n.t('Charts'),\n        plugin: 'chartPlugin',\n        domainType: DOMAIN_TYPE_AGGREGATE,\n        visualizationType: VISUALIZATION_TYPE_CHART,\n        appUrl: id => `dhis-web-data-visualizer/#/${id}`,\n        appName: i18n.t('Visualizer'),\n    },\n    [MAP]: {\n        id: MAP,\n        endPointName: 'maps',\n        propName: 'map',\n        pluralTitle: i18n.t('Maps'),\n        plugin: 'mapPlugin',\n        domainType: DOMAIN_TYPE_AGGREGATE,\n        visualizationType: VISUALIZATION_TYPE_MAP,\n        appUrl: id => `dhis-web-maps/?id=${id}`,\n        appName: i18n.t('Maps'),\n    },\n    [EVENT_REPORT]: {\n        id: EVENT_REPORT,\n        endPointName: 'eventReports',\n        propName: 'eventReport',\n        pluralTitle: i18n.t('Event reports'),\n        plugin: 'eventReportPlugin',\n        domainType: DOMAIN_TYPE_TRACKER,\n        visualizationType: VISUALIZATION_TYPE_TABLE,\n        appUrl: id => `dhis-web-event-reports/?id=${id}`,\n        appName: i18n.t('Event Reports'),\n    },\n    [EVENT_CHART]: {\n        id: EVENT_CHART,\n        endPointName: 'eventCharts',\n        propName: 'eventChart',\n        pluralTitle: i18n.t('Event charts'),\n        plugin: 'eventChartPlugin',\n        domainType: DOMAIN_TYPE_TRACKER,\n        visualizationType: VISUALIZATION_TYPE_CHART,\n        appUrl: id => `dhis-web-event-visualizer/?id=${id}`,\n        appName: i18n.t('Event Visualizer'),\n    },\n    [APP]: {\n        endPointName: 'apps',\n        propName: 'appKey',\n        pluralTitle: i18n.t('Apps'),\n    },\n    [REPORTS]: {\n        id: REPORTS,\n        endPointName: 'reports',\n        propName: 'reports',\n        pluralTitle: i18n.t('Reports'),\n        appUrl: id =>\n            `dhis-web-reporting/getReportParams.action?mode=report&uid=${id}`,\n    },\n    [RESOURCES]: {\n        id: RESOURCES,\n        endPointName: 'resources',\n        propName: 'resources',\n        pluralTitle: i18n.t('Resources'),\n        appUrl: id => `api/documents/${id}/data`,\n    },\n    [USERS]: {\n        id: USERS,\n        endPointName: 'users',\n        propName: 'users',\n        pluralTitle: i18n.t('Users'),\n        appUrl: id => `dhis-web-dashboard-integration/profile.action?id=${id}`,\n    },\n    [TEXT]: {\n        id: TEXT,\n        propName: 'text',\n    },\n    [MESSAGES]: {\n        propName: 'messages',\n    },\n    [SPACER]: {\n        propName: 'text',\n    },\n};\n\nexport const getEndPointName = type => itemTypeMap[type].endPointName;\n\nexport const getItemUrl = (type, item, d2) => {\n    let url;\n\n    if (type === APP) {\n        url = item.launchUrl;\n    }\n\n    if (itemTypeMap[type] && itemTypeMap[type].appUrl) {\n        url = `${getBaseUrl(d2)}/${itemTypeMap[type].appUrl(item.id)}`;\n    }\n\n    return url;\n};\n\nexport const getItemIcon = type => {\n    switch (type) {\n        case REPORT_TABLE:\n        case EVENT_REPORT:\n        case REPORTS:\n            return TableIcon;\n        case CHART:\n        case EVENT_CHART:\n            return ChartIcon;\n        case MAP:\n            return MapIcon;\n        case APP:\n            return ExtensionIcon;\n        case RESOURCES:\n            return DescriptionIcon;\n        case USERS:\n            return PersonIcon;\n        case TEXT:\n            return FontDownloadIcon;\n        case MESSAGES:\n            return EmailIcon;\n        case SPACER:\n            return CropFreeIcon;\n        default:\n            return NotInterestedIcon;\n    }\n};\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"showMoreButton\":\"CategorizedMenuGroup_showMoreButton__3-0Wa\"};"],"sourceRoot":""}
{"version":3,"sources":["components/Item/ListItem/Item.module.css","modules/util.js","reducers/user.js","reducers/dashboards.js","reducers/selected.js","reducers/visualizations.js","api/metadata.js","api/index.js","api/dashboards.js","components/ItemGrid/gridUtil.js","reducers/messages.js","api/messages.js","reducers/snackbar.js","actions/snackbar.js","components/SnackbarMessage/SnackbarMessage.js","components/Item/VisualizationItem/plugin.js","actions/selected.js","api/localStorage.js","components/Item/MessagesItem/actions.js","reducers/editDashboard.js","reducers/editItemFilters.js","reducers/itemFilters.js","actions/itemFilters.js","actions/editItemFilters.js","api/editDashboard.js","actions/editDashboard.js","actions/dashboards.js","reducers/controlBar.js","api/controlBar.js","actions/controlBar.js","reducers/dimensions.js","reducers/settings.js","actions/dimensions.js","components/ControlBar/ShowMoreButton.js","components/ControlBar/controlBarDimensions.js","components/ControlBar/ControlBar.js","icons/Star.js","api/dataStatistics.js","components/ControlBar/DashboardItemChip.js","icons/AddCircle.js","icons/Clear.js","components/ControlBar/ClearButton.js","reducers/dashboardsFilter.js","components/ControlBar/Filter.js","components/ControlBar/DashboardsBar.js","actions/dashboardsFilter.js","components/Dashboard/DashboardVerticalOffset.js","modules/colors.js","components/ItemSelector/HeaderMenuItem.js","icons/Launch.js","components/ItemSelector/ContentMenuItem.js","components/ItemSelector/selectableItems.js","components/ItemSelector/CategorizedMenuGroup.js","components/ItemSelector/actions.js","components/ItemSelector/SinglesMenuGroup.js","components/ItemSelector/ItemSelector.js","components/TitleBar/EditTitleBar.js","components/ItemFilter/FilterDialog.js","reducers/activeModalDimension.js","actions/activeModalDimension.js","components/ItemFilter/FilterSelector.js","components/TitleBar/Info.js","components/TitleBar/ViewTitleBar.js","components/TitleBar/TitleBar.js","components/Item/VisualizationItem/DefaultPlugin.js","components/Item/ItemHeader.js","components/Item/VisualizationItem/ItemFooter.js","components/Item/ItemHeaderButton.js","components/Item/VisualizationItem/ItemHeaderButtons.js","modules/memoizeOne.js","components/Item/VisualizationItem/Item.js","widgets/Line.js","components/Item/MessagesItem/Item.js","components/Item/NotSupportedItem/Item.js","icons/Description.js","icons/Delete.js","components/Item/ListItem/Item.js","components/Item/ListItem/actions.js","components/Item/TextItem/Item.js","components/Item/AppItem/Item.js","components/Item/SpacerItem/Item.js","components/Item/Item.js","components/ItemGrid/DeleteItemButton.js","widgets/NoContentMessage.js","components/Item/ProgressiveLoadingContainer.js","components/ItemGrid/ItemGrid.js","components/FilterBar/FilterBadge.js","components/FilterBar/FilterBar.js","components/Dashboard/DashboardContent.js","components/Dashboard/ViewDashboard.js","components/ControlBar/ConfirmDeleteDialog.js","components/ControlBar/EditBar.js","components/Dashboard/EditDashboard.js","components/Dashboard/NewDashboard.js","components/Dashboard/Dashboard.js","components/Dashboard/dashboardModes.js","components/App.js","actions/user.js","locales/index.js","reducers/style.js","reducers/index.js","configureStore.js","index.js","components/ControlBar/styles/DashboardsBar.module.css","components/ItemSelector/styles/ContentMenuItem.module.css","components/ControlBar/styles/ControlBar.module.css","components/ControlBar/styles/ClearButton.module.css","modules/itemTypes.js","components/ItemSelector/styles/CategorizedMenuGroup.module.css"],"names":["module","exports","list","item","itemicon","link","deleteicon","deletebutton","orArray","param","Array","isArray","orObject","isObject","arrayToIdMap","array","reduce","obj","id","formatDate","value","uiLocale","global","Intl","DateTimeFormat","locale","year","month","day","format","Date","substr","replace","validateReducer","defaultValue","undefined","getBaseUrl","d2","api","Api","getApi","idx","baseUrl","indexOf","slice","getWithoutId","object","Object","_home_travis_build_dhis2_dashboards_app_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectSpread__WEBPACK_IMPORTED_MODULE_0__","DEFAULT_STATE_USER","username","isSuperuser","sGetUserUsername","state","user","DEFAULT_STATE_DASHBOARDS","byId","items","updateDashboardProp","dashboardId","prop","objectSpread","defineProperty","sGetDashboardsRoot","dashboards","sGetDashboardById","sDashboardsIsFetching","sGetAllDashboards","sGetDashboardItems","sGetStarredDashboards","values","filter","dashboard","starred","sGetUnstarredDashboards","sGetDashboardsSortedByStarred","concat","toConsumableArray","arraySort","getCustomDashboards","data","arrayFrom","map","d","index","name","displayName","description","displayDescription","favorite","owner","created","split","join","lastUpdated","access","numberOfItems","dashboardItems","length","type","isSpacerType","SPACER","text","isTextType","emptyTextItemContent","combineReducers","arguments","action","isLoading","showDescription","sGetSelectedRoot","selected","sGetSelectedId","sGetSelectedIsLoading","sGetSelectedShowDescription","DEFAULT_STATE_VISUALIZATIONS","isEmpty","p","sGetVisualization","visualizations","sGetVisualizationsRoot","getIdNameFields","rename","getDimensionFields","_ref2","withItems","arrayClean","getAxesFields","_ref3","getFavoriteFields","_ref4","withDimensions","withOptions","getFavoritesFields","_ref5","apiFetchFavorite","_ref6","fields","getInstance","then","get","getEndPointName","onError","error","console","log","itemTypeMap","endPointName","getDashboardItemsFields","withFavorite","getDashboardFields","apiFetchDashboard","models","catch","apiStarDashboard","isStarred","url","post","delete","apiDeleteDashboard","MARGIN","NEW_ITEM_SHAPE","x","y","w","h","isNonNegativeInteger","Number","isInteger","hasShape","withShape","itemWithShape","assign","i","Error","col","row","Math","floor","itemWidth","GRID_ROW_HEIGHT","getShape","originalHeight","round","max","getOriginalHeight","getGridItemDomId","onItemResize","el","document","querySelector","isFunction","setViewportSize","setTimeout","clientWidth","clientHeight","sGetMessagesRoot","messages","getMessages","DEFAULT_STATE_SNACKBAR","message","duration","open","acCloseSnackbar","loadingDashboardMsg","SnackbarMessageContent","_ref","react_default","a","createElement","style","fontWeight","connect","_sGetSnackbar","snackbar","sGetSnackbar","snackbarOpen","snackbarMessage","snackbarDuration","onCloseSnackbar","props","Snackbar_default","zIndex","SnackbarMessage_SnackbarMessageContent","autoHideDuration","onClose","pluginIsAvailable","activeType","getPlugin","extractFavorite","REPORT_TABLE","reportTable","CHART","chart","MAP","EVENT_REPORT","eventReport","EVENT_CHART","eventChart","loadPlugin","plugin","config","credentials","load","loadingIndicator","auth","getId","getName","getLink","appUrl","asyncToGenerator","regenerator_default","mark","_callee","visualization","_args","wrap","_context","prev","next","stop","_x","_x2","_x3","_x4","apply","this","fetch","_callee2","fetchedFavorite","_context2","sent","abrupt","_x5","resize","unmount","getVisualizationConfig","originalType","extractedMapView","mapViews","find","mv","layer","includes","acSetSelectedId","acSetSelectedIsLoading","acReceivedVisualization","tLoadDashboard","dispatch","getState","dash","acAppendDashboards","Promise","resolve","t0","tSetSelectedDashboardById","snackbarTimeout","onSuccess","dashboardName","customDashboard","acSetDashboardItems","localStorage","setItem","forEach","MESSAGES","messageConversations","clearTimeout","DEFAULT_STATE_EDIT_DASHBOARD","NEW_DASHBOARD_STATE","sGetEditDashboardRoot","editDashboard","sGetIsEditing","sGetEditDashboardItems","DEFAULT_STATE_EDIT_ITEM_FILTERS","sGetEditItemFiltersRoot","editItemFilters","DEFAULT_STATE_ITEM_FILTERS","sGetItemFiltersRoot","itemFilters","sGetFiltersKeys","keys","acRemoveItemFilter","acRemoveEditItemFilter","saveDashboard","width","height","save","msg","response","uid","updateDashboard","postDashboard","create","acAddDashboardItem","itemPropName","propName","generateUid","content","acUpdateDashboardItem","acRemoveDashboardItem","acSetDashboardStarred","tFetchDashboards","collection","paging","toArray","userRows","sGetControlBarUserRows","controlBar","sGetControlBarRoot","KEY","hasNamespace","currentUser","dataStore","has","getNamespace","apiGetControlBarRows","_callee3","namespace","_context3","t1","t2","key","apiPostControlBarRows","_callee4","rows","_context4","set","acSetControlBarUserRows","DEFAULT_DIMENSIONS","pe","FIXED_DIMENSIONS","ou","sGetDimensions","dimensions","DEFAULT_SETTINGS","keyDateFormat","keyAnalysisRelativePeriod","keyAnalysisDigitGroupSeparator","displayNameProperty","rootOrganisationUnit","sGetSettings","settings","sGetSettingsDisplayNameProperty","acSetDimensions","keyBy","sortBy","toLowerCase","styles","showMore","color","colors","grey700","cursor","fontSize","paddingTop","&:hover","textDecoration","disabled","grey500","withStyles","onClick","isMaxHeight","classes","textAlign","className","i18n","t","MIN_ROW_COUNT","getRowsHeight","getNumRowsFromHeight","FIRST_ROW_PADDING_HEIGHT","getTopOffset","getControlBarHeight","ControlBar","_this","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","onStartDrag","setState","dragging","window","addEventListener","onDrag","onEndDrag","event","preventDefault","stopPropagation","newHeight","clientY","onChangeHeight","requestAnimationFrame","removeEventListener","draghandle","onMouseDown","rootStyle","top","backgroundColor","editMode","yellow050","white","paddingBottom","transition","root","children","renderDragHandle","React","Component","defaultProps","StarIcon","xmlns","viewBox","fill","apiPostDataStatistics","eventType","chip","margin","grey600","display","verticalAlign","icon","marginTop","unselected","label","chipProps","selectedState","Star","Link","to","debounce","Chip","AddCircleIcon","teal600","ClearIcon","grey800","ClearButton","onClear","button","Clear","ownerData","DEFAULT_STATE_DASHBOARDS_FILTER_NAME","DEFAULT_STATE_DASHBOARDS_FILTER_OWNER","order","sGetDashboardsFilterRoot","dashboardsFilter","sGetFilterName","KEYCODE_ENTER","KEYCODE_ESCAPE","filterField","searchIcon","Filter","_Component","setFilterValue","onChangeName","target","handleKeyUp","keyCode","onKeypressEnter","inherits","createClass","nextProps","_this$props","startAdornment","InputAdornment_default","position","Search_default","endAdornment","ControlBar_ClearButton","Input_default","placeholder","onChange","onKeyUp","Function","prototype","MAX_ROW_COUNT","DashboardsBar","_getPrototypeOf2","_len","args","_key","setInitialDashboardState","adjustedHeight","newRows","newRowCount","min","onToggleMaxHeight","onSelectDashboard","history","push","selectedId","onChangeFilterName","rowCount","controlBarHeight","contentWrapperStyle","padding","overflowY","components_ControlBar_ControlBar","leftControls","marginRight","AddCircle","ControlBar_Filter","ControlBar_DashboardItemChip","ControlBar_ShowMoreButton","mapDispatchToProps","withRouter","stateProps","dispatchProps","ownProps","displayDashboards","HeaderMenuItem","title","MenuItem","dense","LaunchIcon","LaunchLink","e","launchLink","rel","href","Launch","InsertButton","buttonInsert","ContentMenuItem","onInsert","ItemIcon","getItemIcon","menuItem","ContentMenuItem_LaunchLink","ContentMenuItem_InsertButton","singleItems","header","TEXT","spacerContent","categorizedItems","pluralTitle","USERS","REPORTS","RESOURCES","APP","listItemTypes","CategorizedMenuGroup","addItem","tAddListItemContent","newItem","toggleSeeMore","seeMore","onChangeItemsLimit","_this2","_this$props2","react","ItemSelector_HeaderMenuItem","itemUrl","getItemUrl","context","ItemSelector_ContentMenuItem","showMoreButton","Divider","contextTypes","PropTypes","isRequired","dashboardItem","listItemType","dashboardItemIndex","findIndex","category","addToDashboard","ItemSearchField","InputField","filled","onFocus","ItemSelector","closeList","openList","fetchItems","anchorEl","currentTarget","setFilter","getCategorizedMenuGroups","itemType","countName","ItemSelector_CategorizedMenuGroup","getSinglesMenuGroups","ItemSelector_SinglesMenuGroup","getMenuGroups","maxOptions","queryString","add","Set","ItemSelector_ItemSearchField","Popover_default","anchorOrigin","horizontal","vertical","transformOrigin","PaperProps","disableAutoFocus","disableRestoreFocus","Menu","EditTitleBar","onChangeTitle","onChangeDescription","section","titleDescription","TextField_default","variant","multiline","InputProps","input","underline","itemSelector","components_ItemSelector_ItemSelector","selectedDashboard","justifyContent","flex","clear","&::before","borderBottom","&:hover::before","borderRadius","peId","ouId","FilterDialog","onConfirm","dimension","selectedItems","dialogId","commonProps","onSelect","onDeselect","onReorder","build","selectedPeriods","ouItems","dialogTitle","Dialog_default","maxWidth","disableEnforceFocus","dialogContent","DialogActions_default","Button","kind","DEFAULT_STATE_ACTIVE_MODAL_DIMENSION","sGetActiveModalDimension","activeModalDimension","acSetActiveModalDimension","FilterSelector","openPanel","closePanel","closeDialog","clearActiveModalDimension","selectDimension","setActiveModalDimension","onSelectItems","dimensionId","setEditItemFilters","onDeselectItems","itemIdsToRemove","newList","removeEditItemFilter","onReorderItems","itemIds","oldList","reorderedList","saveFilter","filterItems","addItemFilter","removeItemFilter","theme","selectedDimensions","ArrowDropDown_default","Boolean","fontFamily","typography","onDimensionClick","selectedIds","ItemFilter_FilterDialog","filters","withTheme","Info","show","toggle","InfoOutlined_default","NO_DESCRIPTION","actions","alignItems","marginLeft","starIcon","textButton","minWidth","editLink","titleBar","titleBarIcon","ViewTitleBar","toggleSharingDialog","sharingDialogIsOpen","onStarClick","onInfoClick","titleStyle","userSelect","StarBorder","TitleBar_Info","update","manage","ItemFilter_FilterSelector","d2_ui_sharing_dialog_default","onRequestClose","tStarDashboard","TitleBar","edit","TitleBar_EditTitleBar","TitleBar_ViewTitleBar","DefaultPlugin","pluginCredentials","shouldPluginReload","prevProps","reloadAllowed","filtersChanged","vis","prevVis","visChanged","reloadPlugin","pluginManager","currentVis","useActiveType","getActiveType","defaultHeaders","Authorization","textDiv","HEADER_HEIGHT","ItemHeader","actionButtons","scrollContainer","line","border","ItemFooter","objectId","d2_ui_interpretations_default","appName","ItemHeaderButton","iconBase","buttonBase","buttonDisabled","opacity","toggleFooterPadding","baseStyle","container","disabledStyle","activeStyle","inactiveStyle","getItemTypeId","visualizationType","domainType","VisualizationItemHeaderButtons","onSelectVisualization","activeFooter","onToggleFooter","toggleFooterBase","toggleFooter","VISUALIZATION_TYPE_CHART","match","tableButtonStyle","tableBtnStyle","chartButtonStyle","chartBtnStyle","mapButtonStyle","mapBtnStyle","components_Item_ItemHeaderButton","Message_default","VISUALIZATION_TYPE_TABLE","ViewList_default","InsertChart_default","DOMAIN_TYPE_AGGREGATE","VISUALIZATION_TYPE_MAP","Public_default","memoizeOne","fn","lastArgs","lastValue","every","arg","overflow","textOverflow","whiteSpace","fontStretch","lineHeight","applyFilters","visRows","visColumns","columns","visFilters","dimensionFound","dimensionObjects","Item","showFooter","configLoaded","getUniqueKey","uniqueId","getPluginComponent","getContentStyle","data_visualizer_plugin_build","forDashboard","VisualizationItem_DefaultPlugin","onToggleItemExpanded","getTitle","itemName","Launch_default","getActionButtons","ItemHeaderButtons","contentRef","offsetHeight","createRef","_componentDidMount","onVisualizationLoaded","_this$props3","Item_ItemHeader","ref","VisualizationItem_ItemFooter","acReceivedActiveVisualization","Line","PRIVATE","messageTypes","_messageTypes","listStyleType","paddingLeft","seeAll","marginBottom","sender","snippet","maxHeight","MessagesItem","getMessageHref","msgIdentifier","messageType","getMessageSender","latestMsg","getMessageItems","editClass","readClass","read","msgDate","location","messageCount","userSettings","widgets_Line","string","MessagesContainer","NotSupportedItem","NotInterested_default","align","DescriptionIcon","DeleteIcon","red500","getItemTitle","removeContent","handler","contentToRemove","ListItem","tRemoveListItemContent","contentItems","getContentItems","contentItem","Description","deleteButton","Delete","grey900","newContent","textField","onChangeText","updatedItem","d2_ui_rich_text","onEdit","fullWidth","textDivStyle","viewItem","getIframeSrc","appDetails","iframeSrc","launchUrl","ouIds","ouPath","AppItem","appKey","system","installedApps","app","src","SpacerItem","GridItem","VisualizationItem","TextItem","getGridItem","right","DeleteItemHeaderButton","Delete_default","NoContentMessage","ProgressiveLoadingContainer","shouldLoad","containerRef","shouldLoadHandler","bufferPx","bufferFactor","innerHeight","rect","getBoundingClientRect","bottom","removeHandler","checkShouldLoad","debounceMs","registerHandler","_this3","objectWithoutProperties","ItemGrid","expandedItems","clickedId","isExpanded","onRemoveItem","onLayoutChange","newLayout","acUpdateDashboardLayout","onResizeStop","layout","oldItem","isPluginType","pluginResize","onRemoveItemWrapper","widgets_NoContentMessage","expandedItem","hProp","minH","ScreenCover","CircularProgress","react_grid_layout_default","cols","rowHeight","innerWidth","compactType","isDraggable","isResizable","draggableCancel","itemClassNames","Item_ProgressiveLoadingContainer","DeleteItemButton","Item_Item_Item","validItems","badgeContainer","badge","badgeRemove","FilterBadge","onRemove","count","FilterBar","onBadgeRemove","onBadgeClick","bar","FilterBar_FilterBadge","removeItemFIlter","filtersSelector","createSelector","arr","flexWrap","DashboardContent","components_TitleBar_TitleBar","components_FilterBar_FilterBar","components_ItemGrid_ItemGrid","Content","hasDashboardContent","dashboardsIsEmpty","Dashboard_DashboardContent","dashboardsLoaded","contentNotReady","ControlBar_DashboardsBar","Dashboard_DashboardVerticalOffset","ViewDashboard_Content","ConfirmDeleteDialog","onDeleteConfirmed","onContinueEditing","secondary","destructive","DialogTitle_default","DialogContent_default","DialogContentText_default","buttonBarStyle","EditBar","translationDialogIsOpen","dashboardModel","confirmDeleteDialogOpen","redirectUrl","onConfirmDelete","onSave","newId","onDiscard","onDiscardChanges","onDelete","onTranslationsSaved","translations","dbLocale","translation","property","onTranslate","fetchDashboardModel","toggleTranslationDialog","confirmDeleteDialog","deleteAccess","ControlBar_ConfirmDeleteDialog","translationDialog","d2_ui_translation_dialog_default","objectToTranslate","fieldsToTranslate","onTranslationSaved","onTranslationError","err","Redirect","updateAccess","discardBtnText","primary","rightControls","sGetIsNewDashboard","dashboardToSave","_x6","_x7","tDeleteDashboard","acSetDashboardDisplayName","EditDashboard","initialized","initEditDashboard","setEditDashboard","getDashboardContent","EditDashboard_Content","ControlBar_EditBar","NewDashboard","setNewDashboard","Dashboard","setDashboard","params","selectDashboard","scrollToTop","scrollTo","mode","Dashboard_EditDashboard","Dashboard_NewDashboard","Dashboard_ViewDashboard","dashboardToSelect","preferredId","getItem","App","setCurrentUser","fetchDashboards","setControlBarRows","setDimensions","HeaderBar_default","HashRouter","Switch","Route","exact","path","render","components_Dashboard_Dashboard","components_SnackbarMessage_SnackbarMessage","childContextTypes","controlBarRows","displayNameProp","filteredDimensions","apiFetchDimensions","dim","dimensionType","dataDimensionType","tSetDimensions","moment","addResources","enTranslations","loTranslations","svTranslations","urTranslations","viTranslations","setDefaultNamespace","changeLanguage","objectClean","conversations","$merge","d2Object","keyUiLocale","authorities","newState","k","$unshift","idToRemove","$splice","stateItems","newStateItems","stateItem","si","$set","configureStore","middleware","thunk","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","createStore","reducer","applyMiddleware","dhis2theme","palette","dark","configI18n","sources","manifest","isProd","getManifest","info","version","manifest_generated_at","process","activities","dhis","dhis2","apiVersion","headers","schemas","getUserSettings","d2Init","initializedD2","ReactDOM","es","store","createMuiTheme","src_components_App","getElementById","init","hasOwnProperty","pluginName","_itemTypeMap","_home_travis_build_dhis2_dashboards_app_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_defineProperty__WEBPACK_IMPORTED_MODULE_0__","TableIcon","ChartIcon","MapIcon","ExtensionIcon","PersonIcon","FontDownloadIcon","EmailIcon","CropFreeIcon","NotInterestedIcon"],"mappings":"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","file":"static/js/main.1e83b146.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"Item_list__2oHc1\",\"item\":\"Item_item__lO40M\",\"itemicon\":\"Item_itemicon__dv5ah\",\"link\":\"Item_link__2gULT\",\"deleteicon\":\"Item_deleteicon__3c7bl\",\"deletebutton\":\"Item_deletebutton__1DfY5\"};","import isObject from 'lodash/isObject';\n\n// validation\nexport function orNull(param) {\n    return param === undefined ? null : param;\n}\n\nexport function orArray(param) {\n    return Array.isArray(param) ? param : [];\n}\n\nexport function orObject(param) {\n    return isObject(param) ? param : {};\n}\n\n// array\nexport function arrayGetById(array, id) {\n    return array.find(item => item.id === id);\n}\n\n// object\nexport function arrayToIdMap(array) {\n    return array.reduce((obj, item) => {\n        obj[item.id] = item;\n        return obj;\n    }, {});\n}\n\n// date\nexport function getDate() {\n    const y = Math.floor(Math.random() * 3) + 2015;\n    const M = Math.floor(Math.random() * 12) + 1;\n    const d = Math.floor(Math.random() * 28) + 1;\n    // const h = Math.floor(Math.random() * 23) + 1;\n    // const m = Math.floor(Math.random() * 59) + 1;\n    // const s = Math.floor(Math.random() * 59) + 1;\n\n    return new Date(`${y}-${M}-${d}`)\n        .toJSON()\n        .replace('T', ' ')\n        .substr(0, 10);\n}\n\nexport const formatDate = (value, uiLocale) => {\n    if (typeof global.Intl !== 'undefined' && Intl.DateTimeFormat) {\n        const locale = uiLocale || 'en';\n        return new Intl.DateTimeFormat(locale, {\n            year: 'numeric',\n            month: 'short',\n            day: 'numeric',\n        }).format(new Date(value));\n    }\n\n    return value.substr(0, 19).replace('T', ' ');\n};\n\n/**\n * Sorts an array of objects based on provided date property\n *\n * @param {Array} items Array of objects\n * @param {String} dateProp Name of the date property to be used for sorting\n * @param {Boolean} ascending Whether to sort ascending or descending\n */\nexport const sortByDate = (items, dateProp, ascending = true) => {\n    const values = Object.values(items);\n\n    values.sort((a, b) => {\n        const aDate = new Date(a[dateProp]);\n        const bDate = new Date(b[dateProp]);\n\n        return ascending ? aDate - bDate : bDate - aDate;\n    });\n\n    return values;\n};\n\n// reducer validator\nexport const validateReducer = (value, defaultValue) =>\n    value === undefined || value === null ? defaultValue : value;\n\nexport const getBaseUrl = d2 => {\n    const api = d2.Api.getApi();\n    const idx = api.baseUrl.indexOf('/api');\n    return idx > -1 ? api.baseUrl.slice(0, idx) : api.baseUrl;\n};\n\nexport const getWithoutId = object => ({\n    ...object,\n    id: undefined,\n});\n","export const RECEIVED_USER = 'RECEIVED_USER';\n\nexport const DEFAULT_STATE_USER = {\n    id: '',\n    username: '',\n    uiLocale: '',\n    isSuperuser: false,\n};\n\nexport default (state = DEFAULT_STATE_USER, action) => {\n    switch (action.type) {\n        case RECEIVED_USER: {\n            return fromD2ToUserObj(action.value);\n        }\n        default:\n            return state;\n    }\n};\n\nfunction fromD2ToUserObj(d2Object) {\n    return {\n        id: d2Object.id,\n        username: d2Object.username,\n        uiLocale: d2Object.settings.keyUiLocale,\n        isSuperuser: d2Object.authorities.has('ALL'),\n    };\n}\n\n// selectors\n\nexport const sGetUserId = state => state.user.id;\nexport const sGetUserUsername = state => state.user.username;\nexport const sGetIsSuperuser = state => state.user.isSuperuser;\nexport const sGetUiLocale = state => state.user.uiLocale;\n","/** @module reducers/dashboards */\n\nimport arrayFrom from 'd2-utilizr/lib/arrayFrom';\nimport arraySort from 'd2-utilizr/lib/arraySort';\n\nimport { orArray, orObject } from '../modules/util';\nimport {\n    SPACER,\n    isSpacerType,\n    isTextType,\n    emptyTextItemContent,\n} from '../modules/itemTypes';\n\nexport const SET_DASHBOARDS = 'SET_DASHBOARDS';\nexport const ADD_DASHBOARDS = 'ADD_DASHBOARDS';\nexport const SET_DASHBOARD_STARRED = 'SET_DASHBOARD_STARRED';\nexport const SET_DASHBOARD_DISPLAY_NAME = 'SET_DASHBOARD_DISPLAY_NAME';\nexport const SET_DASHBOARD_ITEMS = 'SET_DASHBOARD_ITEMS';\n\nexport const DEFAULT_STATE_DASHBOARDS = {\n    byId: null,\n    items: [],\n};\n\n// reducer helper functions\n\nconst updateDashboardProp = (state, dashboardId, prop, value) => ({\n    byId: {\n        ...state.byId,\n        [dashboardId]: {\n            ...state.byId[dashboardId],\n            [prop]: value,\n        },\n    },\n    items: state.items,\n});\n\n/**\n * Reducer that computes and returns the new state based on the given action\n * @function\n * @param {Object} state The current state\n * @param {Object} action The action to be evaluated\n * @returns {Object}\n */\nexport default (state = DEFAULT_STATE_DASHBOARDS, action) => {\n    switch (action.type) {\n        case SET_DASHBOARDS: {\n            return {\n                byId: action.value,\n                items: [],\n            };\n        }\n        case ADD_DASHBOARDS: {\n            return {\n                ...state,\n                byId: {\n                    ...state.byId,\n                    ...action.value,\n                },\n            };\n        }\n        case SET_DASHBOARD_STARRED: {\n            return updateDashboardProp(\n                state,\n                action.dashboardId,\n                'starred',\n                action.value\n            );\n        }\n        case SET_DASHBOARD_DISPLAY_NAME: {\n            return updateDashboardProp(\n                state,\n                action.dashboardId,\n                'displayName',\n                action.value\n            );\n        }\n        case SET_DASHBOARD_ITEMS: {\n            return {\n                ...state,\n                items: action.value,\n            };\n        }\n        default:\n            return state;\n    }\n};\n\n// root selector\n\nexport const sGetDashboardsRoot = state => state.dashboards;\n\n// selector level 1\n\n/**\n * Selector which returns a dashboard by id from the state object\n * If no matching dashboard is found it returns undefined\n * If dashboards.byId is null, then the dashboards api request\n * has not yet completed. If dashboards.byId is an empty object\n * then the dashboards api request is complete, but no dashboards\n * were returned\n *\n * @function\n * @param {Object} state The current state\n * @param {Number} id The id of the dashboard\n * @returns {Object | undefined}\n */\nexport const sGetDashboardById = (state, id) =>\n    orObject(sGetDashboardsRoot(state).byId)[id];\n\nexport const sDashboardsIsFetching = state => {\n    return sGetDashboardsRoot(state).byId === null;\n};\n\n/**\n * Selector which returns all dashboards (the byId object)\n *\n * @function\n * @param {Object} state The current state\n * @returns {Object | undefined}\n */\nexport const sGetAllDashboards = state =>\n    orObject(sGetDashboardsRoot(state).byId);\n\n/**\n * Selector which returns the current dashboard items\n *\n * @function\n * @param {Object} state The current state\n * @returns {Array}\n */\nexport const sGetDashboardItems = state => sGetDashboardsRoot(state).items;\n\n// selector level 2\n\nexport const sGetStarredDashboards = state =>\n    Object.values(sGetAllDashboards(state)).filter(\n        dashboard => dashboard.starred === true\n    );\n\nexport const sGetUnstarredDashboards = state =>\n    Object.values(sGetAllDashboards(state)).filter(\n        dashboard => dashboard.starred === false\n    );\n\n// selector level 3\n\nexport const sGetStarredDashboardIds = state => {\n    return sGetStarredDashboards(state).map(dashboard => dashboard.id);\n};\n\nexport const sGetUnstarredDashboardIds = state =>\n    sGetUnstarredDashboards(state).map(dashboard => dashboard.id);\n\nexport const sGetDashboardsSortedByStarred = state => [\n    ...arraySort(sGetStarredDashboards(state), 'ASC', 'displayName'),\n    ...arraySort(sGetUnstarredDashboards(state), 'ASC', 'displayName'),\n];\n\n// utils\n\n/**\n * Returns the array of dashboards, customized for ui\n * @function\n * @param {Array} data The original dashboard list\n * @returns {Array}\n */\nexport const getCustomDashboards = data => {\n    const uiItems = items =>\n        items.map(item => {\n            const type = isSpacerType(item) ? SPACER : item.type;\n            const text = isTextType(item)\n                ? item.text === emptyTextItemContent\n                    ? ''\n                    : item.text\n                : null;\n\n            return {\n                ...item,\n                ...(text !== null ? { text } : {}),\n                type,\n            };\n        });\n\n    return arrayFrom(data).map((d, index) => ({\n        id: d.id,\n        name: d.name,\n        displayName: d.displayName,\n        description: d.description,\n        displayDescription: d.displayDescription,\n        starred: d.favorite,\n        owner: d.user.name,\n        created: d.created\n            .split('T')\n            .join(' ')\n            .substr(0, 16),\n        lastUpdated: d.lastUpdated\n            .split('T')\n            .join(' ')\n            .substr(0, 16),\n        access: d.access,\n        numberOfItems: orArray(d.dashboardItems).length,\n        dashboardItems: uiItems(d.dashboardItems),\n    }));\n};\n","/** @module reducers/selected */\nimport { combineReducers } from 'redux';\n\nimport { validateReducer } from '../modules/util';\n\nexport const SET_SELECTED_ID = 'SET_SELECTED_ID';\nexport const SET_SELECTED_ISLOADING = 'SET_SELECTED_ISLOADING';\nexport const SET_SELECTED_SHOWDESCRIPTION = 'SET_SELECTED_SHOWDESCRIPTION';\n\nexport const DEFAULT_STATE_SELECTED_ID = null;\nexport const DEFAULT_STATE_SELECTED_ISLOADING = false;\nexport const DEFAULT_STATE_SELECTED_SHOWDESCRIPTION = false;\n\n/**\n * Reducer functions that computes and returns the new state based on the given action\n * @function\n * @param {Object} state The current state\n * @param {Object} action The action to be evaluated\n */\nconst id = (state = DEFAULT_STATE_SELECTED_ID, action) => {\n    switch (action.type) {\n        case SET_SELECTED_ID:\n            return validateReducer(action.value, DEFAULT_STATE_SELECTED_ID);\n        default:\n            return state;\n    }\n};\n\nconst isLoading = (state = DEFAULT_STATE_SELECTED_ISLOADING, action) => {\n    switch (action.type) {\n        case SET_SELECTED_ISLOADING:\n            return validateReducer(\n                action.value,\n                DEFAULT_STATE_SELECTED_ISLOADING\n            );\n        default:\n            return state;\n    }\n};\n\nconst showDescription = (\n    state = DEFAULT_STATE_SELECTED_SHOWDESCRIPTION,\n    action\n) => {\n    switch (action.type) {\n        case SET_SELECTED_SHOWDESCRIPTION:\n            return validateReducer(\n                action.value,\n                DEFAULT_STATE_SELECTED_SHOWDESCRIPTION\n            );\n        default:\n            return state;\n    }\n};\n\nexport default combineReducers({\n    id,\n    isLoading,\n    showDescription,\n});\n\n// Selectors\n\nexport const sGetSelectedRoot = state => state.selected;\n\nexport const sGetSelectedId = state => sGetSelectedRoot(state).id;\n\nexport const sGetSelectedIsLoading = state => sGetSelectedRoot(state).isLoading;\n\nexport const sGetSelectedShowDescription = state =>\n    sGetSelectedRoot(state).showDescription;\n","import { orObject } from '../modules/util';\nimport objectClean from 'd2-utilizr/lib/objectClean';\n\n/** @module reducers/visualizations */\n\nexport const RECEIVED_VISUALIZATION = 'RECEIVED_VISUALIZATION';\nexport const RECEIVED_ACTIVE_VISUALIZATION = 'RECEIVED_ACTIVE_VISUALIZATION';\n\nexport const DEFAULT_STATE_VISUALIZATIONS = {};\n\nconst isEmpty = p => p === undefined || p === null;\n\nexport default (state = DEFAULT_STATE_VISUALIZATIONS, action) => {\n    switch (action.type) {\n        case RECEIVED_VISUALIZATION: {\n            return {\n                ...state,\n                [action.value.id]: objectClean(\n                    {\n                        ...orObject(state[action.value.id]),\n                        ...action.value,\n                    },\n                    isEmpty\n                ),\n            };\n        }\n        case RECEIVED_ACTIVE_VISUALIZATION: {\n            return {\n                ...state,\n                [action.id]: objectClean(\n                    {\n                        ...orObject(state[action.id]),\n                        activeType: action.activeType,\n                    },\n                    isEmpty\n                ),\n            };\n        }\n        default:\n            return state;\n    }\n};\n\n// root selector\nexport const sGetVisualizationsRoot = state => state.visualizations;\n\n// selectors level 1\nexport const sGetVisualization = (state, id) => {\n    return sGetVisualizationsRoot(state)[id];\n};\n","import { getInstance } from 'd2';\nimport arrayClean from 'd2-utilizr/lib/arrayClean';\n\nimport { getEndPointName } from './index';\n\n// Id, name\nexport const getIdNameFields = ({ rename } = {}) => [\n    'id',\n    `${rename ? 'displayName~rename(name)' : 'name,displayName'}`,\n];\n\n// Item\nexport const getItemFields = () => [\n    'dimensionItem~rename(id)',\n    'displayName~rename(name)',\n    'dimensionItemType',\n];\n\n// Dimension\nexport const getDimensionFields = ({ withItems }) =>\n    arrayClean([\n        'dimension',\n        'legendSet[id]',\n        'filter',\n        withItems ? `items[${getItemFields().join(',')}]` : ``,\n    ]);\n\n// Axis\nexport const getAxesFields = ({ withItems }) => [\n    `columns[${getDimensionFields({ withItems }).join(',')}]`,\n    `rows[${getDimensionFields({ withItems }).join(',')}]`,\n    `filters[${getDimensionFields({ withItems }).join(',')}]`,\n];\n\n// Favorite\nexport const getFavoriteFields = ({ withDimensions, withOptions }) => {\n    return arrayClean([\n        `${getIdNameFields({ rename: true }).join(',')}`,\n        'displayDescription~rename(description)',\n        withDimensions ? `${getAxesFields({ withItems: true }).join(',')}` : ``,\n        withOptions\n            ? [\n                  '*',\n                  '!attributeDimensions',\n                  '!attributeValues',\n                  '!category',\n                  '!categoryDimensions',\n                  '!categoryOptionGroupSetDimensions',\n                  '!columnDimensions',\n                  '!dataDimensionItems',\n                  '!dataElementDimensions',\n                  '!dataElementGroupSetDimensions',\n                  '!filterDimensions',\n                  '!itemOrganisationUnitGroups',\n                  '!lastUpdatedBy',\n                  '!organisationUnitGroupSetDimensions',\n                  '!organisationUnitLevels',\n                  '!organisationUnits',\n                  '!programIndicatorDimensions',\n                  '!relativePeriods',\n                  '!reportParams',\n                  '!rowDimensions',\n                  '!series',\n                  '!translations',\n                  '!userOrganisationUnit',\n                  '!userOrganisationUnitChildren',\n                  '!userOrganisationUnitGrandChildren',\n              ].join(',')\n            : '',\n    ]);\n};\n\nexport const getFavoritesFields = ({ withDimensions, withOptions }) => [\n    `reportTable[${getFavoriteFields({ withDimensions }).join(',')}]`,\n    `chart[${['type', ...getFavoriteFields({ withDimensions })].join(',')}]`,\n    `map[${getFavoriteFields({ withDimensions }).join(',')}]`,\n    `eventReport[${getFavoriteFields({ withDimensions }).join(',')}]`,\n    `eventChart[${getFavoriteFields({ withDimensions }).join(',')}]`,\n];\n\n// List item\nexport const getListItemFields = () => [\n    `reports[${getIdNameFields({ rename: true }).join(',')}]`,\n    `resources[${getIdNameFields({ rename: true }).join(',')}]`,\n    `users[${getIdNameFields({ rename: true }).join(',')}]`,\n];\n\n// Map\nexport const getMapFields = () => [\n    `${getIdNameFields({ rename: true }).join(',')}`,\n    'user,longitude,latitude,zoom,basemap',\n    `mapViews[${getFavoriteFields({\n        withDimensions: true,\n        withOptions: true,\n    })}]`,\n];\n\n// Api\n\n// Get more info about the favorite of a dashboard item\nexport const apiFetchFavorite = (id, type, { fields }) =>\n    getInstance().then(d2 =>\n        d2.Api.getApi().get(`${getEndPointName(type)}/${id}`, {\n            fields:\n                fields ||\n                getFavoriteFields({\n                    withDimensions: true,\n                    withOptions: true,\n                }),\n        })\n    );\n","import arrayClean from 'd2-utilizr/lib/arrayClean';\nimport { itemTypeMap } from '../modules/itemTypes';\nimport {\n    getListItemFields,\n    getFavoritesFields,\n    getIdNameFields,\n} from './metadata';\n\n// Helper functions\n\nexport const onError = error => console.log('Error: ', error);\n\nexport const getEndPointName = type => itemTypeMap[type].endPointName;\n\n// Dashboard item\nexport const getDashboardItemsFields = ({ withFavorite } = {}) =>\n    arrayClean([\n        'id',\n        'type',\n        'shape',\n        'x',\n        'y',\n        'width~rename(w)',\n        'height~rename(h)',\n        'messages',\n        'text',\n        'appKey',\n        `${getListItemFields().join(',')}`,\n        withFavorite\n            ? `${getFavoritesFields({\n                  withDimensions: withFavorite.withDimensions,\n              }).join(',')}`\n            : ``,\n    ]);\n\n// Dashboard\nexport const getDashboardFields = ({ withItems, withFavorite } = {}) =>\n    arrayClean([\n        `${getIdNameFields().join(',')}`,\n        'description',\n        'displayDescription',\n        'favorite',\n        `user[${getIdNameFields({ rename: true }).join(',')}]`,\n        'created',\n        'lastUpdated',\n        'access',\n        withItems\n            ? `dashboardItems[${getDashboardItemsFields({\n                  withFavorite,\n              }).join(',')}]`\n            : ``,\n    ]);\n","import { getInstance } from 'd2';\nimport arrayClean from 'd2-utilizr/lib/arrayClean';\nimport { onError, getDashboardFields } from './index';\n\n// Get \"all\" dashboards on startup\nexport const apiFetchDashboards = () =>\n    getInstance()\n        .then(d2 =>\n            d2.models.dashboard.list({\n                fields: [\n                    getDashboardFields().join(','),\n                    'dashboardItems[id]',\n                ].join(','),\n                paging: 'false',\n            })\n        )\n        .catch(onError);\n\n// Get more info about selected dashboard\nexport const apiFetchDashboard = id =>\n    getInstance()\n        .then(d2 =>\n            d2.models.dashboard.get(id, {\n                fields: arrayClean(\n                    getDashboardFields({\n                        withItems: true,\n                        withFavorite: { withDimensions: false },\n                    })\n                ).join(','),\n            })\n        )\n        .catch(onError);\n\n// Star dashboard\nexport const apiStarDashboard = (id, isStarred) => {\n    const url = `dashboards/${id}/favorite`;\n\n    getInstance().then(d2 => {\n        if (isStarred) {\n            d2.Api.getApi().post(url);\n        } else {\n            d2.Api.getApi().delete(url);\n        }\n    });\n};\n\nexport const apiDeleteDashboard = id => {\n    return getInstance()\n        .then(d2 => {\n            return d2.models.dashboards\n                .get(id)\n                .then(dashboard => dashboard.delete());\n        })\n        .catch(onError);\n};\n","import isFunction from 'd2-utilizr/lib/isFunction';\n\nimport { orObject } from '../../modules/util';\n\n// Dimensions for the react-grid-layout\n\nexport const GRID_COMPACT_TYPE = 'vertical'; // vertical | horizonal | null\nexport const GRID_ROW_HEIGHT = 10;\nconst GRID_COLUMN_WIDTH_PX = 20;\nconst GRID_LAYOUT = 'FLEXIBLE'; // FIXED | FLEXIBLE\nexport const MARGIN = [10, 10];\n\nexport const NEW_ITEM_SHAPE = { x: 0, y: 0, w: 20, h: 29 };\nexport const ITEM_MIN_HEIGHT = 4;\n\n// Dimensions for getShape\n\nconst NUMBER_OF_ITEM_COLS = 2;\nconst GRID_COLUMNS = 60;\n\nexport const getGridColumns = () => {\n    switch (GRID_LAYOUT) {\n        case 'FLEXIBLE':\n            return GRID_COLUMNS;\n        case 'FIXED':\n            return Math.floor((window.innerWidth - 20) / GRID_COLUMN_WIDTH_PX);\n        default:\n            return GRID_COLUMNS;\n    }\n};\n\n// isNonNegativeInteger\n\nconst isNonNegativeInteger = x => Number.isInteger(x) && x >= 0;\n\n// Does the item have all the shape properties?\n\nexport const hasShape = item =>\n    isNonNegativeInteger(item.x) &&\n    isNonNegativeInteger(item.y) &&\n    isNonNegativeInteger(item.w) &&\n    isNonNegativeInteger(item.h);\n\n// returns a rectangular grid block dimensioned with x, y, w, h in grid units.\n// based on a grid with 3 items across\nexport const getShape = i => {\n    if (!isNonNegativeInteger(i)) {\n        throw new Error('Invalid grid block number');\n    }\n\n    const col = i % NUMBER_OF_ITEM_COLS;\n    const row = Math.floor(i / NUMBER_OF_ITEM_COLS);\n    const itemWidth = Math.floor((GRID_COLUMNS - 1) / NUMBER_OF_ITEM_COLS);\n    const itemHeight = GRID_ROW_HEIGHT * 2;\n\n    return {\n        x: col * itemWidth,\n        y: row * itemHeight,\n        w: itemWidth,\n        h: itemHeight,\n    };\n};\n\n/**\n * Calculates the grid item's original height in pixels based\n * on the height in grid units. This calculation\n * is copied directly from react-grid-layout GridItem.js (calcPosition)\n *\n * @param {Object} item item containing shape (x, y, w, h)\n */\nconst getOriginalHeight = item => {\n    const originalHeight = Math.round(\n        GRID_ROW_HEIGHT * item.h + Math.max(0, item.h - 1) * MARGIN[1]\n    );\n\n    return { originalHeight };\n};\n\n/**\n * Returns an array of items containing the x, y, w, h dimensions\n * and the item's originalheight in pixels\n * @function\n * @param {Array} items\n * @returns {Array}\n */\n\nexport const withShape = items =>\n    items.map((item, index) => {\n        const itemWithShape = hasShape(item)\n            ? item\n            : Object.assign({}, item, getShape(index));\n\n        return Object.assign(\n            {},\n            itemWithShape,\n            getOriginalHeight(itemWithShape)\n        );\n    });\n\nexport const getGridItemDomId = id => `item-${id}`;\n\nexport function onItemResize(id) {\n    const el = orObject(document.querySelector(`#${getGridItemDomId(id)}`));\n    if (isFunction(el.setViewportSize))\n        setTimeout(\n            () => el.setViewportSize(el.clientWidth - 5, el.clientHeight - 5),\n            10\n        );\n}\n","import update from 'immutability-helper';\nimport { arrayToIdMap } from '../modules/util';\n\nexport const RECEIVED_MESSAGES = 'RECEIVED_MESSAGES';\n\nexport default (state = {}, action) => {\n    switch (action.type) {\n        case RECEIVED_MESSAGES: {\n            const conversations = arrayToIdMap(action.value);\n\n            const newState = update(state, { $merge: conversations });\n\n            return newState;\n        }\n        default:\n            return state;\n    }\n};\n\n// selectors\n\nexport const sGetMessagesRoot = state => state.messages;\n","import { getInstance } from 'd2';\n\nexport const getMessages = () => {\n    const fields =\n        'id,messageCount,lastUpdated,messageType,displayName,read,messages[id,read,sender[id,displayName],text,lastUpdated]';\n    const url = `/messageConversations?fields=${fields}&order=read:asc&pageSize=200`;\n    return getInstance()\n        .then(d2 => d2.Api.getApi().get(url))\n        .catch(error => console.log('Error:', error));\n};\n","export const RECEIVED_SNACKBAR_MESSAGE = 'RECEIVED_SNACKBAR_MESSAGE';\nexport const CLOSE_SNACKBAR = 'CLOSE_SNACKBAR';\n\nexport const DEFAULT_STATE_SNACKBAR = {\n    message: {},\n    duration: null,\n    open: false,\n};\n\nexport default (state = DEFAULT_STATE_SNACKBAR, action) => {\n    switch (action.type) {\n        case RECEIVED_SNACKBAR_MESSAGE: {\n            return { ...state, ...action.value };\n        }\n        case CLOSE_SNACKBAR: {\n            return DEFAULT_STATE_SNACKBAR;\n        }\n        default:\n            return state;\n    }\n};\n\n// selectors\n\nexport const sGetSnackbar = state => state.snackbar || DEFAULT_STATE_SNACKBAR;\n","import {\n    RECEIVED_SNACKBAR_MESSAGE,\n    CLOSE_SNACKBAR,\n} from '../reducers/snackbar';\n\nexport const acReceivedSnackbarMessage = value => ({\n    type: RECEIVED_SNACKBAR_MESSAGE,\n    value,\n});\n\nexport const acCloseSnackbar = () => ({\n    type: CLOSE_SNACKBAR,\n});\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport Snackbar from '@material-ui/core/Snackbar';\n\nimport { sGetSnackbar } from '../../reducers/snackbar';\nimport { acCloseSnackbar } from '../../actions/snackbar';\n\nconst LOADING_DASHBOARD = 'LOADING_DASHBOARD';\nexport const loadingDashboardMsg = { name: '', type: LOADING_DASHBOARD };\n\nconst SnackbarMessageContent = ({ message }) => {\n    if (typeof message === 'object') {\n        //future message types:  switch(message.type)\n        return (\n            <span>\n                Loading <span style={{ fontWeight: 800 }}>{message.name}</span>{' '}\n                dashboard\n            </span>\n        );\n    }\n    return message;\n};\n\nexport const SnackbarMessage = props => {\n    return (\n        <Snackbar\n            style={{ zIndex: 10001 }}\n            open={props.snackbarOpen}\n            message={<SnackbarMessageContent message={props.snackbarMessage} />}\n            autoHideDuration={props.snackbarDuration}\n            onClose={props.onCloseSnackbar}\n        />\n    );\n};\n\nconst mapStateToProps = state => {\n    const { message, duration, open } = sGetSnackbar(state);\n    return {\n        snackbarOpen: open,\n        snackbarMessage: message,\n        snackbarDuration: duration,\n    };\n};\n\nexport default connect(\n    mapStateToProps,\n    {\n        onCloseSnackbar: acCloseSnackbar,\n    }\n)(SnackbarMessage);\n","import isObject from 'lodash/isObject';\nimport { apiFetchFavorite, getMapFields } from '../../../api/metadata';\nimport {\n    REPORT_TABLE,\n    CHART,\n    MAP,\n    EVENT_REPORT,\n    EVENT_CHART,\n    itemTypeMap,\n    getPlugin,\n} from '../../../modules/itemTypes';\nimport { getBaseUrl, getWithoutId } from '../../../modules/util';\nimport { getGridItemDomId } from '../../ItemGrid/gridUtil';\n\nexport const THEMATIC_LAYER = 'thematic';\n\nexport const pluginIsAvailable = (item = {}, visualization = {}) => {\n    const type = visualization.activeType || item.type;\n\n    return !!getPlugin(type);\n};\n\nexport const extractFavorite = item => {\n    if (!isObject(item)) {\n        return null;\n    }\n\n    switch (item.type) {\n        case REPORT_TABLE:\n            return item.reportTable;\n        case CHART:\n            return item.chart;\n        case MAP:\n            return item.map;\n        case EVENT_REPORT:\n            return item.eventReport;\n        case EVENT_CHART:\n            return item.eventChart;\n        default:\n            return (\n                item.reportTable ||\n                item.chart ||\n                item.map ||\n                item.eventReport ||\n                item.eventChart ||\n                {}\n            );\n    }\n};\n\nexport const extractMapView = map =>\n    map.mapViews && map.mapViews.find(mv => mv.layer.includes(THEMATIC_LAYER));\n\nexport const loadPlugin = (plugin, config, credentials) => {\n    if (!(plugin && plugin.load)) {\n        return;\n    }\n\n    plugin.url = credentials.baseUrl;\n    plugin.loadingIndicator = true;\n    plugin.dashboard = true;\n    if (credentials.auth) {\n        plugin.auth = credentials.auth;\n    }\n    plugin.load(config);\n};\n\nexport const getId = item => extractFavorite(item).id;\nexport const getName = item => extractFavorite(item).name;\nexport const getDescription = item => extractFavorite(item).description;\nexport const getLink = (item, d2) => {\n    const baseUrl = getBaseUrl(d2);\n    const appUrl = itemTypeMap[item.type].appUrl(getId(item));\n\n    return `${baseUrl}/${appUrl}`;\n};\n\nexport const load = async (\n    item,\n    visualization,\n    credentials,\n    activeType,\n    filter = {}\n) => {\n    const config = {\n        ...visualization,\n        el: getGridItemDomId(item.id),\n    };\n\n    const type = activeType || item.type;\n    const plugin = getPlugin(type);\n\n    loadPlugin(plugin, config, credentials);\n};\n\nexport const fetch = async item => {\n    const fetchedFavorite = await apiFetchFavorite(getId(item), item.type, {\n        fields: item.type === MAP ? getMapFields() : null,\n    });\n\n    return fetchedFavorite;\n};\n\nexport const resize = item => {\n    const plugin = getPlugin(item.type);\n\n    if (plugin && plugin.resize) {\n        plugin.resize(getGridItemDomId(item.id));\n    }\n};\n\nexport const unmount = (item, activeType) => {\n    const plugin = getPlugin(activeType);\n\n    if (plugin && plugin.unmount) {\n        plugin.unmount(getGridItemDomId(item.id));\n    }\n};\n\nexport const getVisualizationConfig = (\n    visualization,\n    originalType,\n    activeType\n) => {\n    if (originalType === MAP && originalType !== activeType) {\n        const extractedMapView = extractMapView(visualization);\n\n        if (extractedMapView === undefined) {\n            return null;\n        }\n\n        return getWithoutId({\n            ...visualization,\n            ...extractedMapView,\n            mapViews: undefined,\n        });\n    }\n\n    return getWithoutId(visualization);\n};\n","import {\n    SET_SELECTED_ID,\n    SET_SELECTED_ISLOADING,\n    SET_SELECTED_SHOWDESCRIPTION,\n} from '../reducers/selected';\nimport {\n    RECEIVED_VISUALIZATION,\n    RECEIVED_ACTIVE_VISUALIZATION,\n} from '../reducers/visualizations';\nimport { sGetSelectedIsLoading } from '../reducers/selected';\nimport { sGetUserUsername } from '../reducers/user';\nimport { getCustomDashboards, sGetDashboardById } from '../reducers/dashboards';\nimport { apiFetchDashboard } from '../api/dashboards';\nimport { acSetDashboardItems, acAppendDashboards } from './dashboards';\nimport { withShape } from '../components/ItemGrid/gridUtil';\nimport { tGetMessages } from '../components/Item/MessagesItem/actions';\nimport { acReceivedSnackbarMessage, acCloseSnackbar } from './snackbar';\nimport { storePreferredDashboardId } from '../api/localStorage';\nimport { loadingDashboardMsg } from '../components/SnackbarMessage/SnackbarMessage';\nimport {\n    REPORT_TABLE,\n    CHART,\n    MAP,\n    EVENT_REPORT,\n    EVENT_CHART,\n    MESSAGES,\n} from '../modules/itemTypes';\nimport { extractFavorite } from '../components/Item/VisualizationItem/plugin';\nimport { orObject } from '../modules/util';\n\n// actions\n\nexport const acSetSelectedId = value => ({\n    type: SET_SELECTED_ID,\n    value,\n});\n\nexport const acSetSelectedIsLoading = value => ({\n    type: SET_SELECTED_ISLOADING,\n    value,\n});\n\nexport const acSetSelectedShowDescription = value => ({\n    type: SET_SELECTED_SHOWDESCRIPTION,\n    value,\n});\n\nexport const acReceivedVisualization = value => ({\n    type: RECEIVED_VISUALIZATION,\n    value,\n});\n\nexport const acReceivedActiveVisualization = (id, type, activeType) => {\n    const action = {\n        type: RECEIVED_ACTIVE_VISUALIZATION,\n        id,\n    };\n\n    if (activeType !== type) {\n        action.activeType = activeType;\n    }\n\n    return action;\n};\n\nexport const tLoadDashboard = id => async (dispatch, getState) => {\n    try {\n        const dash = await apiFetchDashboard(id);\n        dispatch(acAppendDashboards(dash));\n\n        return Promise.resolve(dash);\n    } catch (err) {\n        console.log('Error: ', err);\n        return err;\n    }\n};\n\n// thunks\nexport const tSetSelectedDashboardById = id => async (dispatch, getState) => {\n    dispatch(acSetSelectedIsLoading(true));\n\n    const snackbarTimeout = setTimeout(() => {\n        const dashboardName = orObject(sGetDashboardById(getState(), id))\n            .displayName;\n        if (sGetSelectedIsLoading(getState()) && dashboardName) {\n            loadingDashboardMsg.name = dashboardName;\n\n            dispatch(\n                acReceivedSnackbarMessage({\n                    message: loadingDashboardMsg,\n                    open: true,\n                })\n            );\n        }\n    }, 500);\n\n    const onSuccess = selected => {\n        const customDashboard = getCustomDashboards(selected)[0];\n\n        dispatch(\n            acSetDashboardItems(withShape(customDashboard.dashboardItems))\n        );\n\n        storePreferredDashboardId(sGetUserUsername(getState()), id);\n\n        // add visualizations to store\n        customDashboard.dashboardItems.forEach(item => {\n            switch (item.type) {\n                case REPORT_TABLE:\n                case CHART:\n                case MAP:\n                case EVENT_REPORT:\n                case EVENT_CHART:\n                    dispatch(acReceivedVisualization(extractFavorite(item)));\n                    break;\n                case MESSAGES:\n                    dispatch(tGetMessages(id));\n                    break;\n                default:\n                    break;\n            }\n        });\n\n        dispatch(acSetSelectedId(id));\n\n        dispatch(acSetSelectedIsLoading(false));\n\n        clearTimeout(snackbarTimeout);\n\n        dispatch(acCloseSnackbar());\n\n        return selected;\n    };\n\n    const onError = error => {\n        console.log('Error: ', error);\n        return error;\n    };\n\n    try {\n        const selected = await dispatch(tLoadDashboard(id));\n\n        return onSuccess(selected);\n    } catch (err) {\n        return onError(err);\n    }\n};\n","export const getPreferredDashboardId = username =>\n    localStorage.getItem(`dhis2.dashboard.current.${username}`) || undefined;\n\nexport const storePreferredDashboardId = (username, dashboardId) => {\n    localStorage.setItem(`dhis2.dashboard.current.${username}`, dashboardId);\n};\n","import { RECEIVED_MESSAGES } from '../../../reducers/messages';\nimport { getMessages } from '../../../api/messages';\n\nconst onError = (action, error) => {\n    console.log(`Error in action ${action}: ${error}`);\n    return error;\n};\n\nexport const receivedMessages = value => ({\n    type: RECEIVED_MESSAGES,\n    value,\n});\n\nexport const tGetMessages = dashboardItemId => async dispatch => {\n    try {\n        const messages = await getMessages();\n        const { messageConversations } = messages;\n\n        return dispatch(receivedMessages(messageConversations));\n    } catch (err) {\n        return onError('Get Messages', err);\n    }\n};\n","/** @module reducers/editDashboard */\nimport update from 'immutability-helper';\nimport isEmpty from 'lodash/isEmpty';\nimport { orArray, orObject } from '../modules/util';\n\nexport const RECEIVED_EDIT_DASHBOARD = 'RECEIVED_EDIT_DASHBOARD';\nexport const RECEIVED_NOT_EDITING = 'RECEIVED_NOT_EDITING';\nexport const START_NEW_DASHBOARD = 'START_NEW_DASHBOARD';\nexport const RECEIVED_TITLE = 'RECEIVED_TITLE';\nexport const RECEIVED_DESCRIPTION = 'RECEIVED_DESCRIPTION';\nexport const ADD_DASHBOARD_ITEM = 'ADD_DASHBOARD_ITEM';\nexport const REMOVE_DASHBOARD_ITEM = 'REMOVE_DASHBOARD_ITEM';\nexport const UPDATE_DASHBOARD_ITEM = 'UPDATE_DASHBOARD_ITEM';\nexport const RECEIVED_DASHBOARD_LAYOUT = 'RECEIVED_DASHBOARD_LAYOUT';\n\nexport const DEFAULT_STATE_EDIT_DASHBOARD = {};\nexport const NEW_DASHBOARD_STATE = {\n    id: '',\n    name: '',\n    access: {},\n    description: '',\n    dashboardItems: [],\n};\n\nexport default (state = DEFAULT_STATE_EDIT_DASHBOARD, action) => {\n    switch (action.type) {\n        case RECEIVED_EDIT_DASHBOARD:\n            const newState = {};\n            Object.keys(NEW_DASHBOARD_STATE).map(\n                k => (newState[k] = action.value[k])\n            );\n            return newState;\n        case RECEIVED_NOT_EDITING:\n            return DEFAULT_STATE_EDIT_DASHBOARD;\n        case START_NEW_DASHBOARD:\n            return NEW_DASHBOARD_STATE;\n        case RECEIVED_TITLE: {\n            return Object.assign({}, state, { name: action.value });\n        }\n        case RECEIVED_DESCRIPTION: {\n            return Object.assign({}, state, {\n                description: action.value,\n            });\n        }\n        case ADD_DASHBOARD_ITEM:\n            return update(state, {\n                dashboardItems: { $unshift: [action.value] },\n            });\n        case REMOVE_DASHBOARD_ITEM: {\n            const idToRemove = action.value;\n\n            const dashboardItemIndex = state.dashboardItems.findIndex(\n                item => item.id === idToRemove\n            );\n\n            if (dashboardItemIndex > -1) {\n                return update(state, {\n                    dashboardItems: {\n                        $splice: [[dashboardItemIndex, 1]],\n                    },\n                });\n            }\n\n            return state;\n        }\n        case RECEIVED_DASHBOARD_LAYOUT: {\n            const stateItems = orArray(state.dashboardItems);\n\n            const newStateItems = action.value.map(({ x, y, w, h, i }) => {\n                const stateItem = stateItems.find(si => si.id === i);\n\n                return Object.assign({}, stateItem, { w, h, x, y });\n            });\n\n            return update(state, {\n                dashboardItems: { $set: newStateItems },\n            });\n        }\n        case UPDATE_DASHBOARD_ITEM: {\n            const dashboardItem = action.value;\n\n            const dashboardItemIndex = state.dashboardItems.findIndex(\n                item => item.id === dashboardItem.id\n            );\n\n            if (dashboardItemIndex > -1) {\n                const newState = update(state, {\n                    dashboardItems: {\n                        $splice: [[dashboardItemIndex, 1, dashboardItem]],\n                    },\n                });\n\n                return newState;\n            }\n\n            return state;\n        }\n        default:\n            return state;\n    }\n};\n\n// root selector\n\nexport const sGetEditDashboardRoot = state => state.editDashboard;\n\n// selectors\n\nexport const sGetIsEditing = state => !isEmpty(state.editDashboard);\n\nexport const sGetIsNewDashboard = state => {\n    return (\n        !isEmpty(state.editDashboard) && sGetEditDashboardRoot(state).id === ''\n    );\n};\n\nexport const sGetEditDashboardItems = state =>\n    orObject(sGetEditDashboardRoot(state)).dashboardItems;\n","export const CLEAR_EDIT_ITEM_FILTERS = 'CLEAR_EDIT_ITEM_FILTERS';\nexport const REMOVE_EDIT_ITEM_FILTER = 'REMOVE_EDIT_ITEM_FILTER';\nexport const SET_EDIT_ITEM_FILTERS = 'SET_EDIT_ITEM_FILTERS';\n\nexport const DEFAULT_STATE_EDIT_ITEM_FILTERS = {};\n\nexport default (state = DEFAULT_STATE_EDIT_ITEM_FILTERS, action) => {\n    switch (action.type) {\n        case REMOVE_EDIT_ITEM_FILTER: {\n            const newState = { ...state };\n\n            delete newState[action.id];\n\n            return newState;\n        }\n        case SET_EDIT_ITEM_FILTERS: {\n            return action.filters;\n        }\n        case CLEAR_EDIT_ITEM_FILTERS: {\n            return DEFAULT_STATE_EDIT_ITEM_FILTERS;\n        }\n        default:\n            return state;\n    }\n};\n\n// selectors\n\nexport const sGetEditItemFiltersRoot = state => state.editItemFilters;\n\nexport const sGetEditFiltersKeys = state =>\n    Object.keys(sGetEditItemFiltersRoot(state));\n","export const CLEAR_ITEM_FILTERS = 'CLEAR_ITEM_FILTERS';\nexport const SET_ITEM_FILTERS = 'SET_ITEM_FILTERS';\nexport const ADD_ITEM_FILTER = 'ADD_ITEM_FILTER';\nexport const REMOVE_ITEM_FILTER = 'REMOVE_ITEM_FILTER';\n\nexport const DEFAULT_STATE_ITEM_FILTERS = {};\n\nexport default (state = DEFAULT_STATE_ITEM_FILTERS, action) => {\n    switch (action.type) {\n        case ADD_ITEM_FILTER: {\n            return {\n                ...state,\n                [action.filter.id]: action.filter.value,\n            };\n        }\n        case REMOVE_ITEM_FILTER: {\n            const newState = { ...state };\n\n            delete newState[action.id];\n\n            return newState;\n        }\n        case SET_ITEM_FILTERS: {\n            return action.filters;\n        }\n        case CLEAR_ITEM_FILTERS: {\n            return DEFAULT_STATE_ITEM_FILTERS;\n        }\n        default:\n            return state;\n    }\n};\n\n// selectors\n\nexport const sGetItemFiltersRoot = state => state.itemFilters;\n\nexport const sGetFiltersKeys = state => Object.keys(sGetItemFiltersRoot(state));\n","import {\n    ADD_ITEM_FILTER,\n    REMOVE_ITEM_FILTER,\n    SET_ITEM_FILTERS,\n    CLEAR_ITEM_FILTERS,\n} from '../reducers/itemFilters';\n\nexport const FILTER_ORG_UNIT = 'ou';\n\n// actions\n\nexport const acAddItemFilter = filter => ({\n    type: ADD_ITEM_FILTER,\n    filter,\n});\n\nexport const acRemoveItemFilter = id => ({\n    type: REMOVE_ITEM_FILTER,\n    id,\n});\n\nexport const acClearItemFilters = () => ({\n    type: CLEAR_ITEM_FILTERS,\n});\n\nexport const acSetItemFilters = filters => ({\n    type: SET_ITEM_FILTERS,\n    filters,\n});\n","import {\n    REMOVE_EDIT_ITEM_FILTER,\n    SET_EDIT_ITEM_FILTERS,\n    CLEAR_EDIT_ITEM_FILTERS,\n} from '../reducers/editItemFilters';\n\n// actions\n\nexport const acRemoveEditItemFilter = id => ({\n    type: REMOVE_EDIT_ITEM_FILTER,\n    id,\n});\n\nexport const acClearEditItemFilters = () => ({\n    type: CLEAR_EDIT_ITEM_FILTERS,\n});\n\nexport const acSetEditItemFilters = filters => ({\n    type: SET_EDIT_ITEM_FILTERS,\n    filters,\n});\n","import { getInstance } from 'd2';\n\nconst onError = error => console.log('Error: ', error);\n\nconst saveDashboard = (dashboard, data) => {\n    const { name, description, dashboardItems } = data;\n\n    dashboard.name = name;\n    dashboard.description = description;\n    dashboard.dashboardItems = dashboardItems.map(item =>\n        Object.assign({}, item, { width: item.w, height: item.h })\n    );\n\n    return dashboard.save().then(msg => msg.response.uid);\n};\n\nexport const updateDashboard = data => {\n    return getInstance()\n        .then(d2 => {\n            return d2.models.dashboards\n                .get(data.id)\n                .then(dashboard => saveDashboard(dashboard, data));\n        })\n        .catch(onError);\n};\n\nexport const postDashboard = data => {\n    return getInstance().then(d2 => {\n        const dashboard = d2.models.dashboards.create();\n\n        return saveDashboard(dashboard, data);\n    });\n};\n","import { generateUid } from 'd2/uid';\n\nimport {\n    RECEIVED_EDIT_DASHBOARD,\n    START_NEW_DASHBOARD,\n    RECEIVED_NOT_EDITING,\n    RECEIVED_TITLE,\n    RECEIVED_DESCRIPTION,\n    RECEIVED_DASHBOARD_LAYOUT,\n    ADD_DASHBOARD_ITEM,\n    UPDATE_DASHBOARD_ITEM,\n    REMOVE_DASHBOARD_ITEM,\n} from '../reducers/editDashboard';\nimport { sGetEditDashboardRoot } from '../reducers/editDashboard';\nimport { updateDashboard, postDashboard } from '../api/editDashboard';\nimport { tSetSelectedDashboardById } from '../actions/selected';\nimport { NEW_ITEM_SHAPE } from '../components/ItemGrid/gridUtil';\nimport {\n    itemTypeMap,\n    isSpacerType,\n    TEXT,\n    emptyTextItemContent,\n    isTextType,\n} from '../modules/itemTypes';\n\nconst onError = error => {\n    console.log('Error (Saving Dashboard): ', error);\n    return error;\n};\n\n// actions\n\nexport const acSetEditDashboard = (dashboard, items) => {\n    const val = {\n        ...dashboard,\n        dashboardItems: items,\n    };\n\n    return {\n        type: RECEIVED_EDIT_DASHBOARD,\n        value: val,\n    };\n};\n\nexport const acSetEditNewDashboard = () => ({\n    type: START_NEW_DASHBOARD,\n});\n\nexport const acClearEditDashboard = () => ({\n    type: RECEIVED_NOT_EDITING,\n});\n\nexport const acSetDashboardTitle = value => ({\n    type: RECEIVED_TITLE,\n    value,\n});\n\nexport const acSetDashboardDescription = value => ({\n    type: RECEIVED_DESCRIPTION,\n    value,\n});\n\nexport const acUpdateDashboardLayout = value => ({\n    type: RECEIVED_DASHBOARD_LAYOUT,\n    value,\n});\n\nexport const acAddDashboardItem = item => {\n    const type = item.type;\n    delete item.type;\n    const itemPropName = itemTypeMap[type].propName;\n\n    return {\n        type: ADD_DASHBOARD_ITEM,\n        value: {\n            id: generateUid(),\n            type,\n            [itemPropName]: item.content,\n            ...NEW_ITEM_SHAPE,\n        },\n    };\n};\n\nexport const acUpdateDashboardItem = item => ({\n    type: UPDATE_DASHBOARD_ITEM,\n    value: item,\n});\n\nexport const acRemoveDashboardItem = value => ({\n    type: REMOVE_DASHBOARD_ITEM,\n    value,\n});\n\n// thunks\n\nexport const tSaveDashboard = () => async (dispatch, getState) => {\n    const dashboard = sGetEditDashboardRoot(getState());\n\n    const dashboardItems = dashboard.dashboardItems.map(item => {\n        const text = isTextType(item)\n            ? item.text || emptyTextItemContent\n            : null;\n\n        const type = isSpacerType(item) ? TEXT : item.type;\n\n        return {\n            ...item,\n            ...(text ? { text } : {}),\n            type,\n        };\n    });\n\n    const dashboardToSave = {\n        ...dashboard,\n        dashboardItems,\n    };\n\n    try {\n        const dashboardId = dashboardToSave.id\n            ? await updateDashboard(dashboardToSave)\n            : await postDashboard(dashboardToSave);\n\n        dispatch(acClearEditDashboard());\n        await dispatch(tSetSelectedDashboardById(dashboardId));\n\n        return Promise.resolve(dashboardId);\n    } catch (error) {\n        onError(error);\n    }\n};\n","import {\n    SET_DASHBOARDS,\n    ADD_DASHBOARDS,\n    SET_DASHBOARD_STARRED,\n    SET_DASHBOARD_DISPLAY_NAME,\n    SET_DASHBOARD_ITEMS,\n} from '../reducers/dashboards';\nimport {\n    getCustomDashboards,\n    sGetDashboardById,\n    sGetDashboardsSortedByStarred,\n} from '../reducers/dashboards';\nimport { sGetUserUsername } from '../reducers/user';\nimport { tSetSelectedDashboardById, acSetSelectedId } from './selected';\nimport { sGetSelectedId } from '../reducers/selected';\nimport { sGetIsEditing } from '../reducers/editDashboard';\nimport { sGetEditItemFiltersRoot } from '../reducers/editItemFilters';\nimport { acSetItemFilters, acClearItemFilters } from './itemFilters';\nimport { acClearEditItemFilters } from './editItemFilters';\nimport { acClearEditDashboard } from './editDashboard';\nimport {\n    apiFetchDashboards,\n    apiStarDashboard,\n    apiDeleteDashboard,\n} from '../api/dashboards';\nimport { getPreferredDashboardId } from '../api/localStorage';\nimport { arrayToIdMap } from '../modules/util';\n\n// actions\n\nexport const acSetDashboards = dashboards => ({\n    type: SET_DASHBOARDS,\n    value: arrayToIdMap(getCustomDashboards(dashboards)),\n});\n\nexport const acAppendDashboards = dashboards => ({\n    type: ADD_DASHBOARDS,\n    value: arrayToIdMap(getCustomDashboards(dashboards)),\n});\n\nexport const acSetDashboardStarred = (dashboardId, isStarred) => ({\n    type: SET_DASHBOARD_STARRED,\n    dashboardId: dashboardId,\n    value: isStarred,\n});\n\nexport const acSetDashboardDisplayName = (dashboardId, value) => ({\n    type: SET_DASHBOARD_DISPLAY_NAME,\n    dashboardId,\n    value,\n});\n\nexport const acSetDashboardItems = value => ({\n    type: SET_DASHBOARD_ITEMS,\n    value,\n});\n\n// thunks\n\nexport const tFetchDashboards = () => async dispatch => {\n    const collection = await apiFetchDashboards();\n    dispatch(acSetDashboards(collection.toArray()));\n};\n\nexport const tSelectDashboard = id => async (dispatch, getState) => {\n    const onError = error => {\n        console.log('Error (apiFetchDashboards): ', error);\n        return error;\n    };\n\n    try {\n        const state = getState();\n\n        let dashboardToSelect = null;\n        if (id) {\n            dashboardToSelect = sGetDashboardById(state, id) || null;\n        } else {\n            const preferredId = getPreferredDashboardId(\n                sGetUserUsername(state)\n            );\n            const dash = sGetDashboardById(state, preferredId);\n            dashboardToSelect =\n                preferredId && dash\n                    ? dash\n                    : sGetDashboardsSortedByStarred(state)[0];\n        }\n\n        if (dashboardToSelect) {\n            dispatch(tSetSelectedDashboardById(dashboardToSelect.id));\n\n            if (dashboardToSelect.id === sGetSelectedId(state)) {\n                if (sGetIsEditing(state)) {\n                    // disable filters when switching to edit mode\n                    dispatch(acClearItemFilters());\n                } else {\n                    // enable filters when switching to view mode\n                    dispatch(acSetItemFilters(sGetEditItemFiltersRoot(state)));\n                }\n            } else {\n                // clear filters when switching dashboard\n                dispatch(acClearEditItemFilters());\n                dispatch(acClearItemFilters());\n            }\n        } else {\n            dispatch(acSetSelectedId(false));\n        }\n    } catch (err) {\n        return onError(err);\n    }\n};\n\nexport const tStarDashboard = (id, isStarred) => async (dispatch, getState) => {\n    const onSuccess = id => {\n        dispatch(acSetDashboardStarred(id, isStarred));\n        return id;\n    };\n\n    const onError = error => {\n        console.log('Error (apiStarDashboard): ', error);\n        return error;\n    };\n    try {\n        await apiStarDashboard(id, isStarred);\n        return onSuccess(id);\n    } catch (err) {\n        return onError(err);\n    }\n};\n\nexport const tDeleteDashboard = id => async (dispatch, getState) => {\n    try {\n        await apiDeleteDashboard(id);\n        dispatch(acClearEditDashboard());\n        dispatch(acSetSelectedId());\n        dispatch(acSetDashboardItems([]));\n\n        await dispatch(tFetchDashboards());\n\n        return Promise.resolve();\n    } catch (err) {\n        console.log('Error (deleteDashboard): ', err);\n        return err;\n    }\n};\n","/** @module reducers/controlBar */\nimport { combineReducers } from 'redux';\nimport { validateReducer } from '../modules/util';\n\nexport const SET_CONTROLBAR_USER_ROWS = 'SET_CONTROLBAR_USER_ROWS';\n\nexport const DEFAULT_STATE_CONTROLBAR_ROWS = 1;\n\nconst userRows = (state = DEFAULT_STATE_CONTROLBAR_ROWS, action) => {\n    switch (action.type) {\n        case SET_CONTROLBAR_USER_ROWS:\n            return validateReducer(action.value, DEFAULT_STATE_CONTROLBAR_ROWS);\n        default:\n            return state;\n    }\n};\n\nexport default combineReducers({\n    userRows,\n});\n\n/**\n * Selectors that point to specific props in the state object\n * @function\n * @param {Object} state\n * @returns {Object}\n */\nexport const sGetControlBarRoot = state => state.controlBar;\n\n// Selector dependency level 2\n\nexport const sGetControlBarUserRows = state =>\n    sGetControlBarRoot(state).userRows;\n","import { getInstance } from 'd2';\nimport { DEFAULT_STATE_CONTROLBAR_ROWS } from '../reducers/controlBar';\n\nconst NAMESPACE = 'dashboard';\nconst KEY = 'controlBarRows';\n\nconst hasNamespace = async d2 => await d2.currentUser.dataStore.has(NAMESPACE);\n\nconst getNamespace = async (d2, hasNamespace) =>\n    hasNamespace\n        ? await d2.currentUser.dataStore.get(NAMESPACE)\n        : await d2.currentUser.dataStore.create(NAMESPACE);\n\nexport const apiGetControlBarRows = async () => {\n    const d2 = await getInstance();\n    const namespace = await getNamespace(d2, await hasNamespace(d2));\n    const hasKey = namespace.keys && namespace.keys.find(key => key === KEY);\n\n    if (hasKey) {\n        return await namespace.get(KEY);\n    } else {\n        await apiPostControlBarRows(DEFAULT_STATE_CONTROLBAR_ROWS, namespace);\n        console.log(\n            '(These errors to /userDataStore/dashboard can be ignored)'\n        );\n        return DEFAULT_STATE_CONTROLBAR_ROWS;\n    }\n};\n\nexport const apiPostControlBarRows = async (rows, namespace) => {\n    const d2 = await getInstance();\n    const ns = namespace || (await getNamespace(d2, hasNamespace));\n\n    ns.set(KEY, rows);\n};\n","import { SET_CONTROLBAR_USER_ROWS } from '../reducers/controlBar';\nimport { apiGetControlBarRows } from '../api/controlBar';\n\n// actions\n\nexport const acSetControlBarUserRows = rows => ({\n    type: SET_CONTROLBAR_USER_ROWS,\n    value: rows,\n});\n\n// thunks\n\nexport const tSetControlBarRows = () => async (dispatch, getState) => {\n    const onSuccess = rows => {\n        dispatch(acSetControlBarUserRows(rows));\n    };\n\n    const onError = error => {\n        console.log('Error (apiGetControlBarRows): ', error);\n        return error;\n    };\n\n    try {\n        const controlBarRows = await apiGetControlBarRows();\n        return onSuccess(controlBarRows);\n    } catch (err) {\n        return onError(err);\n    }\n};\n","import { FIXED_DIMENSIONS } from '@dhis2/d2-ui-analytics';\n\nexport const SET_DIMENSIONS = 'SET_DIMENSIONS';\nexport const DEFAULT_DIMENSIONS = {\n    pe: FIXED_DIMENSIONS.pe,\n    ou: FIXED_DIMENSIONS.ou,\n};\n\nexport default (state = DEFAULT_DIMENSIONS, action) => {\n    switch (action.type) {\n        case SET_DIMENSIONS: {\n            return {\n                ...DEFAULT_DIMENSIONS,\n                ...action.value,\n            };\n        }\n        default:\n            return state;\n    }\n};\n\nexport const sGetDimensions = state => state.dimensions;\n","export const SET_SETTINGS = 'SET_SETTINGS';\nexport const ADD_SETTINGS = 'ADD_SETTINGS';\n\nexport const DEFAULT_SETTINGS = {\n    keyDateFormat: 'yyyy-MM-dd',\n    keyAnalysisRelativePeriod: 'LAST_12_MONTHS',\n    keyAnalysisDigitGroupSeparator: 'SPACE',\n    displayNameProperty: 'displayName',\n    uiLocale: 'en',\n    rootOrganisationUnit: {},\n};\n\nexport default (state = DEFAULT_SETTINGS, action) => {\n    switch (action.type) {\n        case SET_SETTINGS: {\n            return Object.assign({}, action.value);\n        }\n        case ADD_SETTINGS: {\n            return {\n                ...state,\n                ...action.value,\n            };\n        }\n        default:\n            return state;\n    }\n};\n\n// Selectors\n\nexport const sGetSettings = state => state.settings;\n\nexport const sGetSettingsDisplayNameProperty = state =>\n    sGetSettings(state).displayNameProperty;\n\nexport const sGetRootOrgUnit = state =>\n    sGetSettings(state).rootOrganisationUnit;\n\nexport const sGetRelativePeriod = state =>\n    sGetSettings(state).keyAnalysisRelativePeriod;\n\nexport const sGetUiLocale = state => sGetSettings(state).uiLocale;\n","import keyBy from 'lodash/keyBy';\nimport sortBy from 'lodash/sortBy';\nimport { SET_DIMENSIONS } from '../reducers/dimensions';\nimport { apiFetchDimensions } from '@dhis2/d2-ui-analytics';\nimport { sGetSettingsDisplayNameProperty } from '../reducers/settings';\n\nexport const acSetDimensions = dimensions => ({\n    type: SET_DIMENSIONS,\n    value: keyBy(sortBy(dimensions, [d => d.name.toLowerCase()]), 'id'),\n});\n\nexport const tSetDimensions = d2 => async (dispatch, getState) => {\n    const onSuccess = dimensions => {\n        dispatch(acSetDimensions(dimensions));\n    };\n\n    const onError = error => {\n        console.log('Error (apiFetchDimensions): ', error);\n        return error;\n    };\n\n    try {\n        const displayNameProp = sGetSettingsDisplayNameProperty(getState());\n        const dimensions = await apiFetchDimensions(d2, displayNameProp);\n\n        // filter out CATEGORY that are not of type ATTRIBUTE\n        const filteredDimensions = dimensions.filter(\n            dim =>\n                dim.dimensionType !== 'CATEGORY' ||\n                (dim.dimensionType === 'CATEGORY' &&\n                    dim.dataDimensionType === 'ATTRIBUTE')\n        );\n        return onSuccess(filteredDimensions);\n    } catch (err) {\n        return onError(err);\n    }\n};\n","import React from 'react';\nimport i18n from '@dhis2/d2-i18n';\nimport { colors } from '@dhis2/ui-core';\nimport { withStyles } from '@material-ui/core/styles';\n\nexport const SHOWMORE_BAR_HEIGHT = 16;\n\nconst styles = {\n    showMore: {\n        color: colors.grey700,\n        cursor: 'pointer',\n        fontSize: 11,\n        paddingTop: 5,\n        '&:hover': {\n            textDecoration: 'underline',\n        },\n    },\n    disabled: {\n        paddingTop: 5,\n        color: colors.grey500,\n        fontSize: 11,\n        cursor: 'not-allowed',\n    },\n};\n\nexport const ShowMoreButton = ({ onClick, isMaxHeight, classes, disabled }) => {\n    return (\n        <div style={{ textAlign: 'center' }}>\n            {disabled ? (\n                <div className={classes.disabled}>{i18n.t('Show more')}</div>\n            ) : (\n                <div className={classes.showMore} onClick={onClick}>\n                    {isMaxHeight ? i18n.t('Show less') : i18n.t('Show more')}\n                </div>\n            )}\n        </div>\n    );\n};\n\nexport default withStyles(styles)(ShowMoreButton);\n","import { SHOWMORE_BAR_HEIGHT } from './ShowMoreButton';\n\nexport const CONTROL_BAR_ROW_HEIGHT = 40;\nexport const FIRST_ROW_PADDING_HEIGHT = 10;\nexport const MIN_ROW_COUNT = 1;\n\nexport const HEADERBAR_HEIGHT = 48;\n\nconst CONTROL_BAR_OUTER_HEIGHT_DIFF =\n    FIRST_ROW_PADDING_HEIGHT + SHOWMORE_BAR_HEIGHT - 2; // 2 pixel \"adjustment\"\n\nexport const getRowsHeight = rows => {\n    return rows * CONTROL_BAR_ROW_HEIGHT;\n};\n\nexport const getNumRowsFromHeight = height => {\n    return Math.floor(\n        (height - CONTROL_BAR_OUTER_HEIGHT_DIFF) / CONTROL_BAR_ROW_HEIGHT\n    );\n};\n\nexport const getTopOffset = rows => {\n    return HEADERBAR_HEIGHT + getControlBarHeight(rows, false);\n};\n\nexport const getControlBarHeight = rows => {\n    return getRowsHeight(rows) + CONTROL_BAR_OUTER_HEIGHT_DIFF;\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { colors } from '@dhis2/ui-core';\nimport { HEADERBAR_HEIGHT } from './controlBarDimensions';\n\nimport classes from './styles/ControlBar.module.css';\n\nconst DRAG_HANDLE_HEIGHT = 7;\n\nclass ControlBar extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            dragging: false,\n        };\n    }\n\n    onStartDrag = () => {\n        this.setState({ dragging: true });\n        window.addEventListener('mousemove', this.onDrag);\n        window.addEventListener('mouseup', this.onEndDrag);\n    };\n\n    onDrag = event => {\n        event.preventDefault();\n        event.stopPropagation();\n\n        const newHeight = event.clientY;\n\n        if (\n            this.props.onChangeHeight &&\n            newHeight !== this.props.height &&\n            newHeight > 0\n        ) {\n            requestAnimationFrame(() => {\n                this.props.onChangeHeight(newHeight);\n            });\n        }\n    };\n\n    onEndDrag = () => {\n        this.setState({ dragging: false });\n        window.removeEventListener('mousemove', this.onDrag);\n        window.removeEventListener('mouseup', this.onEndDrag);\n\n        if (this.props.onEndDrag) {\n            this.props.onEndDrag();\n        }\n    };\n\n    renderDragHandle() {\n        return typeof this.props.onChangeHeight === 'function' ? (\n            <div\n                className={classes.draghandle}\n                style={{ height: DRAG_HANDLE_HEIGHT }}\n                onMouseDown={this.onStartDrag}\n            />\n        ) : null;\n    }\n\n    render() {\n        const height = Math.max(this.props.height, 0) + DRAG_HANDLE_HEIGHT;\n\n        const rootStyle = Object.assign(\n            {\n                height,\n                top: HEADERBAR_HEIGHT,\n                backgroundColor: this.props.editMode\n                    ? colors.yellow050\n                    : colors.white,\n                paddingBottom: DRAG_HANDLE_HEIGHT,\n            },\n            // Disable animations while dragging\n            this.state.dragging ? { transition: 'none' } : {}\n        );\n\n        return (\n            <div style={rootStyle} className={classes.root}>\n                <div className={classes.content}>{this.props.children}</div>\n                {this.renderDragHandle()}\n            </div>\n        );\n    }\n}\n\nControlBar.propTypes = {\n    /**\n     * The height of the control bar in number of lines. Must be a positive integer.\n     */\n    height: PropTypes.number.isRequired,\n\n    /**\n     * If true, the background color of the control bar changes to indicate that edit mode is active.\n     */\n    editMode: PropTypes.bool.isRequired,\n\n    /**\n     * Callback function that is called when the control bar is resized.\n     * The callback receives one argument: The new height in pixels.\n     *\n     * If no callback is specified the control bar will not have a drag handle.\n     */\n    onChangeHeight: PropTypes.func,\n\n    /**\n     * Callback function that is called when the control bar is dropped after being dragged.\n     * The callback receives one argument: The new height in pixels.\n     *\n     * Ignored if no \"onChangeHeight\" function is provided.\n     */\n    onEndDrag: PropTypes.func,\n\n    /**\n     * The contents of the control bar.\n     */\n    children: PropTypes.node.isRequired,\n};\n\nControlBar.defaultProps = {\n    onChangeHeight: null,\n    onEndDrag: null,\n};\n\nexport default ControlBar;\n","import React from 'react';\n\nconst StarIcon = ({ className }) => (\n    <svg\n        className={className}\n        xmlns=\"http://www.w3.org/2000/svg\"\n        viewBox=\"0 0 24 24\"\n    >\n        <path d=\"M0 0h24v24H0z\" fill=\"none\" />\n        <path d=\"M12 17.27L18.18 21l-1.64-7.03L22 9.24l-7.19-.61L12 2 9.19 8.63 2 9.24l5.46 4.73L5.82 21z\" />\n        <path d=\"M0 0h24v24H0z\" fill=\"none\" />\n    </svg>\n);\n\nexport default StarIcon;\n","import { getInstance } from 'd2';\n\nexport const apiPostDataStatistics = async (eventType, id) => {\n    const d2 = await getInstance();\n    const url = `dataStatistics?eventType=${eventType}&favorite=${id}`;\n\n    d2.Api.getApi().post(url);\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport { Chip, colors } from '@dhis2/ui-core';\nimport { Link } from 'react-router-dom';\nimport debounce from 'lodash/debounce';\n\nimport StarIcon from '../../icons/Star';\nimport { apiPostDataStatistics } from '../../api/dataStatistics';\n\nconst styles = {\n    chip: {\n        margin: '3px',\n    },\n    link: {\n        color: colors.grey600,\n        display: 'inline-block',\n        textDecoration: 'none',\n        verticalAlign: 'top',\n    },\n    icon: {\n        height: '20px',\n        marginTop: '2px',\n        width: '20px',\n    },\n    selected: {\n        fill: colors.white,\n    },\n    unselected: {\n        fill: colors.grey700,\n    },\n};\n\nexport const DashboardItemChip = ({\n    starred,\n    selected,\n    label,\n    dashboardId,\n    classes,\n}) => {\n    const chipProps = {\n        selected,\n        className: classes.chip,\n    };\n\n    if (starred) {\n        const selectedState = selected ? classes.selected : classes.unselected;\n        chipProps.icon = (\n            <StarIcon className={`${classes.icon} ${selectedState}`} />\n        );\n    }\n\n    return (\n        <Link\n            className={classes.link}\n            to={`/${dashboardId}`}\n            onClick={debounce(\n                () => apiPostDataStatistics('DASHBOARD_VIEW', dashboardId),\n                500\n            )}\n        >\n            <Chip {...chipProps}>{label}</Chip>\n        </Link>\n    );\n};\n\nDashboardItemChip.propTypes = {\n    starred: PropTypes.bool.isRequired,\n    selected: PropTypes.bool.isRequired,\n    label: PropTypes.string.isRequired,\n    dashboardId: PropTypes.string.isRequired,\n};\n\nexport default withStyles(styles)(DashboardItemChip);\n","import React from 'react';\nimport { colors } from '@dhis2/ui-core';\n\nconst AddCircleIcon = () => (\n    <svg\n        xmlns=\"http://www.w3.org/2000/svg\"\n        width=\"32\"\n        height=\"32\"\n        fill={colors.teal600}\n        viewBox=\"0 0 24 24\"\n    >\n        <path d=\"M12 2C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2zm4 11h-3v3c0 .55-.45 1-1 1s-1-.45-1-1v-3H8c-.55 0-1-.45-1-1s.45-1 1-1h3V8c0-.55.45-1 1-1s1 .45 1 1v3h3c.55 0 1 .45 1 1s-.45 1-1 1z\" />\n    </svg>\n);\n\nexport default AddCircleIcon;\n","import React from 'react';\nimport { colors } from '@dhis2/ui-core';\n\nconst ClearIcon = ({ className }) => (\n    <svg\n        className={className}\n        fill={colors.grey800}\n        xmlns=\"http://www.w3.org/2000/svg\"\n        viewBox=\"0 0 24 24\"\n    >\n        <path d=\"M19 6.41L17.59 5 12 10.59 6.41 5 5 6.41 10.59 12 5 17.59 6.41 19 12 13.41 17.59 19 19 17.59 13.41 12z\" />\n        <path d=\"M0 0h24v24H0z\" fill=\"none\" />\n    </svg>\n);\n\nexport default ClearIcon;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport ClearIcon from '../../icons/Clear';\n\nimport classes from './styles/ClearButton.module.css';\n\nexport const ClearButton = ({ onClear }) => (\n    <button className={classes.button} onClick={onClear}>\n        <ClearIcon className={classes.icon} color=\"action\" />\n    </button>\n);\n\nClearButton.propTypes = {\n    onClear: PropTypes.func.isRequired,\n};\n\nexport default ClearButton;\n","import { combineReducers } from 'redux';\nimport { validateReducer } from '../modules/util';\n\nexport const SET_DASHBOARDS_FILTER_NAME = 'SET_DASHBOARDS_FILTER_NAME';\nexport const SET_DASHBOARDS_FILTER_OWNER = 'SET_DASHBOARDS_FILTER_OWNER';\nexport const SET_DASHBOARDS_FILTER_ORDER = 'SET_DASHBOARDS_FILTER_ORDER';\n\nexport const ownerData = [\n    { id: 'ALL', value: 'All users' },\n    { id: 'ME', value: 'Created by me' },\n    { id: 'OTHERS', value: 'Created by others' },\n];\n\nexport const orderData = [\n    { id: 'NAME:ASC', value: 'Name (asc)' },\n    { id: 'NAME:ASC', value: 'Name (desc)' },\n    { id: 'ITEMS:ASC', value: 'Number of items (asc)' },\n    { id: 'ITEMS:ASC', value: 'Number of items (desc)' },\n    { id: 'CREATED:ASC', value: 'Created date (asc)' },\n    { id: 'CREATED:ASC', value: 'Created date (desc)' },\n];\n\nexport const DEFAULT_STATE_DASHBOARDS_FILTER_NAME = '';\nexport const DEFAULT_STATE_DASHBOARDS_FILTER_OWNER = ownerData[0].id;\nexport const DEFAULT_STATE_DASHBOARDS_FILTER_ORDER = orderData[0].id;\n\nconst name = (state = DEFAULT_STATE_DASHBOARDS_FILTER_NAME, action) => {\n    switch (action.type) {\n        case SET_DASHBOARDS_FILTER_NAME:\n            return validateReducer(\n                action.value,\n                DEFAULT_STATE_DASHBOARDS_FILTER_NAME\n            );\n        default:\n            return state;\n    }\n};\n\nconst owner = (state = DEFAULT_STATE_DASHBOARDS_FILTER_OWNER, action) => {\n    switch (action.type) {\n        case SET_DASHBOARDS_FILTER_OWNER:\n            return validateReducer(\n                action.value,\n                DEFAULT_STATE_DASHBOARDS_FILTER_NAME\n            );\n        default:\n            return state;\n    }\n};\n\nconst order = (state = DEFAULT_STATE_DASHBOARDS_FILTER_ORDER, action) => {\n    switch (action.type) {\n        case SET_DASHBOARDS_FILTER_ORDER:\n            return validateReducer(\n                action.value,\n                DEFAULT_STATE_DASHBOARDS_FILTER_ORDER\n            );\n        default:\n            return state;\n    }\n};\n\nexport default combineReducers({\n    name,\n    owner,\n    order,\n});\n\n// selectors\n\nexport const sGetDashboardsFilterRoot = state => state.dashboardsFilter;\n\n// selector dependency level 2\n\nexport const sGetFilterName = state => sGetDashboardsFilterRoot(state).name;\nexport const sGetFilterOwner = state => sGetDashboardsFilterRoot(state).owner;\nexport const sGetFilterOrder = state => sGetDashboardsFilterRoot(state).order;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport i18n from '@dhis2/d2-i18n';\nimport InputField from '@material-ui/core/Input';\nimport InputAdornment from '@material-ui/core/InputAdornment';\nimport SearchIcon from '@material-ui/icons/Search';\nimport { colors } from '@dhis2/ui-core';\n\nimport ClearButton from './ClearButton';\nimport { DEFAULT_STATE_DASHBOARDS_FILTER_NAME } from '../../reducers/dashboardsFilter';\n\nexport const KEYCODE_ENTER = 13;\nexport const KEYCODE_ESCAPE = 27;\n\nconst styles = {\n    filterField: {\n        fontSize: '14px',\n        width: '200px',\n        height: '30px',\n        top: '-4px',\n    },\n    searchIcon: {\n        color: colors.grey700,\n        width: '20px',\n        height: '20px',\n    },\n};\n\nexport class Filter extends Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            value: DEFAULT_STATE_DASHBOARDS_FILTER_NAME,\n        };\n    }\n\n    componentWillReceiveProps(nextProps) {\n        this.setState({\n            value: nextProps.name,\n        });\n    }\n\n    setFilterValue = event => {\n        event.preventDefault();\n\n        this.props.onChangeName(event.target.value);\n    };\n\n    handleKeyUp = event => {\n        switch (event.keyCode) {\n            case KEYCODE_ENTER:\n                this.props.onKeypressEnter();\n                break;\n            case KEYCODE_ESCAPE:\n                this.props.onChangeName();\n                break;\n            default:\n                break;\n        }\n    };\n\n    render() {\n        const { classes, name, onChangeName } = this.props;\n\n        const startAdornment = (\n            <InputAdornment position=\"start\">\n                <SearchIcon className={classes.searchIcon} />\n            </InputAdornment>\n        );\n\n        const endAdornment =\n            name !== '' && name !== null ? (\n                <InputAdornment position=\"end\">\n                    <ClearButton onClear={() => onChangeName()} />\n                </InputAdornment>\n            ) : null;\n\n        return (\n            <InputField\n                className={classes.filterField}\n                placeholder={i18n.t('Search for a dashboard')}\n                startAdornment={startAdornment}\n                endAdornment={endAdornment}\n                value={this.state.value}\n                onChange={this.setFilterValue}\n                onKeyUp={this.handleKeyUp}\n            />\n        );\n    }\n}\n\nFilter.propTypes = {\n    name: PropTypes.string,\n    onChangeName: PropTypes.func,\n};\n\nFilter.defaultProps = {\n    name: '',\n    onChangeName: Function.prototype,\n};\n\nexport default withStyles(styles)(Filter);\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { Link, withRouter } from 'react-router-dom';\nimport ControlBar from './ControlBar';\nimport arraySort from 'd2-utilizr/lib/arraySort';\n\nimport Chip from './DashboardItemChip';\nimport AddCircleIcon from '../../icons/AddCircle';\nimport Filter from './Filter';\nimport ShowMoreButton from './ShowMoreButton';\nimport {\n    FIRST_ROW_PADDING_HEIGHT,\n    MIN_ROW_COUNT,\n    getRowsHeight,\n    getControlBarHeight,\n    getNumRowsFromHeight,\n} from './controlBarDimensions';\nimport { sGetControlBarUserRows } from '../../reducers/controlBar';\nimport { sGetAllDashboards } from '../../reducers/dashboards';\nimport { sGetFilterName } from '../../reducers/dashboardsFilter';\nimport { sGetSelectedId } from '../../reducers/selected';\nimport { acSetControlBarUserRows } from '../../actions/controlBar';\nimport { acSetFilterName } from '../../actions/dashboardsFilter';\nimport { orObject, orArray } from '../../modules/util';\nimport { apiPostControlBarRows } from '../../api/controlBar';\n\nimport classes from './styles/DashboardsBar.module.css';\n\nexport const MAX_ROW_COUNT = 10;\n\nexport class DashboardsBar extends Component {\n    state = {\n        rows: MIN_ROW_COUNT,\n    };\n\n    setInitialDashboardState = rows => {\n        this.setState({ rows, isMaxHeight: rows === MAX_ROW_COUNT });\n    };\n\n    componentDidMount() {\n        this.setInitialDashboardState(this.props.userRows);\n    }\n\n    componentWillReceiveProps(nextProps) {\n        this.setInitialDashboardState(nextProps.userRows);\n    }\n\n    onChangeHeight = newHeight => {\n        const adjustedHeight = newHeight - 52; // don't rush the transition to a bigger row count\n        const newRows = Math.max(\n            MIN_ROW_COUNT,\n            getNumRowsFromHeight(adjustedHeight)\n        );\n\n        if (newRows !== this.state.rows) {\n            const newRowCount = Math.min(newRows, MAX_ROW_COUNT);\n\n            this.props.onChangeHeight(newRowCount);\n        }\n    };\n\n    onEndDrag = () => {\n        return apiPostControlBarRows(this.state.rows);\n    };\n\n    onToggleMaxHeight = () => {\n        const rows =\n            this.state.rows === MAX_ROW_COUNT\n                ? this.props.userRows\n                : MAX_ROW_COUNT;\n\n        this.setState({ rows, isMaxHeight: !this.state.isMaxHeight });\n    };\n\n    onSelectDashboard = () => {\n        this.props.history.push(`/${this.props.dashboards[0].id}`);\n    };\n\n    render() {\n        const { dashboards, name, selectedId, onChangeFilterName } = this.props;\n\n        const rowCount = this.state.isMaxHeight\n            ? MAX_ROW_COUNT\n            : this.state.rows;\n        const controlBarHeight = getControlBarHeight(rowCount);\n        const contentWrapperStyle = {\n            padding: `${FIRST_ROW_PADDING_HEIGHT}px 6px 0 6px`,\n            overflowY: this.state.isMaxHeight ? 'auto' : 'hidden',\n            height: getRowsHeight(rowCount) + FIRST_ROW_PADDING_HEIGHT,\n        };\n\n        return (\n            <ControlBar\n                height={controlBarHeight}\n                onChangeHeight={this.onChangeHeight}\n                onEndDrag={this.onEndDrag}\n                editMode={false}\n            >\n                <div style={contentWrapperStyle}>\n                    <div className={classes.leftControls}>\n                        <Link\n                            style={{\n                                display: 'inline-block',\n                                textDecoration: 'none',\n                                marginRight: 10,\n                            }}\n                            to={'/new'}\n                        >\n                            <AddCircleIcon />\n                        </Link>\n                        <Filter\n                            name={name}\n                            onChangeName={onChangeFilterName}\n                            onKeypressEnter={this.onSelectDashboard}\n                        />\n                    </div>\n                    {orArray(dashboards).map(dashboard => (\n                        <Chip\n                            key={dashboard.id}\n                            label={dashboard.displayName}\n                            starred={dashboard.starred}\n                            dashboardId={dashboard.id}\n                            selected={dashboard.id === selectedId}\n                        />\n                    ))}\n                </div>\n                <ShowMoreButton\n                    onClick={this.onToggleMaxHeight}\n                    isMaxHeight={this.state.isMaxHeight}\n                    disabled={this.props.userRows === MAX_ROW_COUNT}\n                />\n            </ControlBar>\n        );\n    }\n}\n\nconst mapStateToProps = state => ({\n    dashboards: sGetAllDashboards(state),\n    name: sGetFilterName(state),\n    userRows: sGetControlBarUserRows(state),\n    selectedId: sGetSelectedId(state),\n});\n\nconst mapDispatchToProps = {\n    onChangeHeight: acSetControlBarUserRows,\n    onChangeFilterName: acSetFilterName,\n};\nconst mergeProps = (stateProps, dispatchProps, ownProps) => {\n    const dashboards = Object.values(orObject(stateProps.dashboards));\n    const displayDashboards = arraySort(\n        dashboards.filter(d =>\n            d.displayName.toLowerCase().includes(stateProps.name.toLowerCase())\n        ),\n        'ASC',\n        'displayName'\n    );\n\n    return {\n        ...stateProps,\n        ...ownProps,\n        ...dispatchProps,\n        dashboards: [\n            ...displayDashboards.filter(d => d.starred),\n            ...displayDashboards.filter(d => !d.starred),\n        ],\n    };\n};\n\nexport default withRouter(\n    connect(\n        mapStateToProps,\n        mapDispatchToProps,\n        mergeProps\n    )(DashboardsBar)\n);\n","import {\n    SET_DASHBOARDS_FILTER_NAME,\n    SET_DASHBOARDS_FILTER_OWNER,\n    SET_DASHBOARDS_FILTER_ORDER,\n} from '../reducers/dashboardsFilter';\n\n// actions\n\nexport const acSetFilterName = value => ({\n    type: SET_DASHBOARDS_FILTER_NAME,\n    value,\n});\n\nexport const acSetFilterOwner = value => ({\n    type: SET_DASHBOARDS_FILTER_OWNER,\n    value,\n});\n\nexport const acSetFilterOrder = value => ({\n    type: SET_DASHBOARDS_FILTER_ORDER,\n    value,\n});\n","import React from 'react';\nimport { connect } from 'react-redux';\n\nimport {\n    getTopOffset,\n    MIN_ROW_COUNT,\n} from '../ControlBar/controlBarDimensions';\nimport { sGetControlBarUserRows } from '../../reducers/controlBar';\n\nconst DashboardVerticalOffset = props => {\n    const rows = props.editMode ? MIN_ROW_COUNT : props.userRows;\n    const marginTop = getTopOffset(rows);\n\n    return <div className=\"page-container-top-margin\" style={{ marginTop }} />;\n};\n\nconst mapStateToProps = state => ({\n    userRows: sGetControlBarUserRows(state),\n});\n\nexport default connect(mapStateToProps)(DashboardVerticalOffset);\n","const lightGrey = '#ECEFF1';\nconst lightMediumGrey = '#9E9E9E';\nconst mediumGrey = '#393939';\nconst charcoalGrey = '#8C8C8C';\nconst darkGrey = '#494949';\nconst muiDefaultGrey = '#757575';\n\nconst red = '#E53935';\n\nconst paleBlue = '#E3F2FD';\nconst lightBlue = '#EAF4FF'; //'#63A4FF'\nconst royalBlue = '#004BA0';\n\nconst mint = '#B2DFDB';\nconst lightGreen = '#48A999';\nconst mediumGreen = '#00796B';\nconst darkGreen = '#004C40';\n\nconst paleYellow = '#FFF8E1';\n\nconst white = '#FFFFFF';\nconst black = 'rgba(0,0,0,0.87)';\n\nexport const colors = {\n    lightGrey,\n    lightMediumGrey,\n    mediumGrey,\n    charcoalGrey,\n    darkGrey,\n    muiDefaultGrey,\n    red,\n    paleBlue,\n    lightBlue,\n    royalBlue,\n    mint,\n    lightGreen,\n    mediumGreen,\n    darkGreen,\n    paleYellow,\n    white,\n    black,\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { MenuItem, colors } from '@dhis2/ui-core';\n\nconst HeaderMenuItem = ({ title }) => (\n    <MenuItem\n        dense\n        key={title}\n        disabled\n        label={\n            <p style={{ color: colors.grey800, fontWeight: '600' }}>{title}</p>\n        }\n    />\n);\n\nHeaderMenuItem.propTypes = {\n    title: PropTypes.string.isRequired,\n};\n\nexport default HeaderMenuItem;\n","import React from 'react';\nimport { colors } from '@dhis2/ui-core';\n\nconst LaunchIcon = ({ className }) => (\n    <svg\n        className={className}\n        xmlns=\"http://www.w3.org/2000/svg\"\n        width=\"12\"\n        height=\"12\"\n        fill={colors.grey600}\n        viewBox=\"0 0 24 24\"\n    >\n        <path d=\"M0 0h24v24H0z\" fill=\"none\" />\n        <path d=\"M19 19H5V5h7V3H5c-1.11 0-2 .9-2 2v14c0 1.1.89 2 2 2h14c1.1 0 2-.9 2-2v-7h-2v7zM14 3v2h3.59l-9.83 9.83 1.41 1.41L19 6.41V10h2V3h-7z\" />\n    </svg>\n);\n\nexport default LaunchIcon;\n","import React from 'react';\nimport { MenuItem, colors } from '@dhis2/ui-core';\nimport i18n from '@dhis2/d2-i18n';\n\nimport { getItemIcon } from '../../modules/itemTypes';\nimport LaunchIcon from '../../icons/Launch';\n\nimport classes from './styles/ContentMenuItem.module.css';\n\nconst LaunchLink = ({ url }) => (\n    <a\n        onClick={e => e.stopPropagation()}\n        className={classes.launchLink}\n        target=\"_blank\"\n        rel=\"noopener noreferrer\"\n        href={url}\n    >\n        <LaunchIcon />\n    </a>\n);\n\nconst InsertButton = () => (\n    <button className={classes.buttonInsert}>{i18n.t('Insert')}</button>\n);\n\nconst ContentMenuItem = ({ type, name, onInsert, url }) => {\n    const ItemIcon = getItemIcon(type);\n\n    return (\n        <MenuItem\n            dense\n            onClick={onInsert}\n            label={\n                <div className={classes.menuItem}>\n                    <div className={classes.label}>\n                        <ItemIcon\n                            style={{ margin: '6px', fill: colors.grey600 }}\n                        />\n                        <span>{name}</span>\n                        {url ? <LaunchLink url={url} /> : null}\n                    </div>\n                    <InsertButton />\n                </div>\n            }\n        />\n    );\n};\n\nexport default ContentMenuItem;\n","import i18n from '@dhis2/d2-i18n';\nimport {\n    itemTypeMap,\n    spacerContent,\n    REPORT_TABLE,\n    CHART,\n    MAP,\n    EVENT_CHART,\n    EVENT_REPORT,\n    USERS,\n    REPORTS,\n    RESOURCES,\n    APP,\n    MESSAGES,\n    TEXT,\n    SPACER,\n} from '../../modules/itemTypes';\n\nexport const singleItems = [\n    {\n        id: 'additional',\n        header: i18n.t('Additional items'),\n        items: [\n            {\n                type: TEXT,\n                name: i18n.t('Text box'),\n                content: '',\n            },\n            {\n                type: MESSAGES,\n                name: i18n.t('Messages'),\n                content: 'true',\n            },\n            {\n                type: SPACER,\n                name: i18n.t('Spacer'),\n                content: spacerContent,\n            },\n        ],\n    },\n];\n\n// categorizedItems are grouped in the item selector menu\nexport const categorizedItems = [\n    {\n        id: REPORT_TABLE,\n        title: itemTypeMap[REPORT_TABLE].pluralTitle,\n    },\n    {\n        id: CHART,\n        title: itemTypeMap[CHART].pluralTitle,\n    },\n    { id: MAP, title: itemTypeMap[MAP].pluralTitle },\n    {\n        id: EVENT_REPORT,\n        title: itemTypeMap[EVENT_REPORT].pluralTitle,\n    },\n    {\n        id: EVENT_CHART,\n        title: itemTypeMap[EVENT_CHART].pluralTitle,\n    },\n    {\n        id: USERS,\n        title: itemTypeMap[USERS].pluralTitle,\n    },\n    {\n        id: REPORTS,\n        title: itemTypeMap[REPORTS].pluralTitle,\n    },\n    {\n        id: RESOURCES,\n        title: itemTypeMap[RESOURCES].pluralTitle,\n    },\n    { id: APP, title: itemTypeMap[APP].pluralTitle },\n];\n\n// listItemTypes are included in a single dashboard item\nexport const listItemTypes = [REPORTS, RESOURCES, USERS];\n","import React, { Component, Fragment } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport i18n from '@dhis2/d2-i18n';\nimport { MenuItem, Divider } from '@dhis2/ui-core';\n\nimport HeaderMenuItem from './HeaderMenuItem';\nimport ContentMenuItem from './ContentMenuItem';\n\nimport { tAddListItemContent } from './actions';\nimport { acAddDashboardItem } from '../../actions/editDashboard';\nimport { getItemUrl, APP } from '../../modules/itemTypes';\nimport { categorizedItems, listItemTypes } from './selectableItems';\n\nimport classes from './styles/CategorizedMenuGroup.module.css';\n\nclass CategorizedMenuGroup extends Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            seeMore: false,\n        };\n    }\n\n    addItem = item => () => {\n        const { type, acAddDashboardItem, tAddListItemContent } = this.props;\n\n        if (type === APP) {\n            acAddDashboardItem({ type, content: item.key });\n        } else {\n            const newItem = {\n                id: item.id,\n                name: item.displayName || item.name,\n            };\n\n            if (listItemTypes.includes(type)) {\n                tAddListItemContent(type, newItem);\n            } else {\n                acAddDashboardItem({ type, content: newItem });\n            }\n        }\n    };\n\n    toggleSeeMore = () => {\n        this.setState({ seeMore: !this.state.seeMore });\n\n        this.props.onChangeItemsLimit(this.props.type);\n    };\n\n    render() {\n        const { title, type, items } = this.props;\n        return (\n            <Fragment>\n                <HeaderMenuItem title={title} />\n                {items.map(item => {\n                    const itemUrl = getItemUrl(type, item, this.context.d2);\n                    return (\n                        <ContentMenuItem\n                            key={item.id || item.key}\n                            type={type}\n                            name={item.displayName || item.name}\n                            onInsert={this.addItem(item)}\n                            url={itemUrl}\n                        />\n                    );\n                })}\n                <MenuItem\n                    dense\n                    key={`showmore${title}`}\n                    onClick={this.toggleSeeMore}\n                    label={\n                        <button className={classes.showMoreButton}>\n                            {this.state.seeMore\n                                ? i18n.t('Show fewer')\n                                : i18n.t('Show more')}\n                        </button>\n                    }\n                />\n                <Divider margin=\"8px 0px\" />\n            </Fragment>\n        );\n    }\n}\n\nCategorizedMenuGroup.propTypes = {\n    type: PropTypes.oneOf(categorizedItems.map(i => i.id)).isRequired,\n    title: PropTypes.string.isRequired,\n    items: PropTypes.array.isRequired,\n    onChangeItemsLimit: PropTypes.func.isRequired,\n};\n\nCategorizedMenuGroup.contextTypes = {\n    d2: PropTypes.object.isRequired,\n};\n\nexport default connect(\n    null,\n    {\n        acAddDashboardItem,\n        tAddListItemContent,\n    }\n)(CategorizedMenuGroup);\n","import { sGetEditDashboardRoot } from '../../reducers/editDashboard';\nimport { itemTypeMap } from '../../modules/itemTypes';\nimport {\n    acAddDashboardItem,\n    acUpdateDashboardItem,\n} from '../../actions/editDashboard';\n\nexport const tAddListItemContent = (type, content) => (dispatch, getState) => {\n    const state = getState();\n    const listItemType = itemTypeMap[type].propName;\n    const dashboardItems = sGetEditDashboardRoot(state).dashboardItems;\n    const dashboardItemIndex = dashboardItems.findIndex(\n        item => item.type === type\n    );\n    let dashboardItem;\n\n    // Reports/Resources/Users dashboard item type already present in dashboard\n    if (dashboardItemIndex > -1) {\n        dashboardItem = dashboardItems[dashboardItemIndex];\n        dashboardItem[listItemType].push(content);\n\n        dispatch(acUpdateDashboardItem(dashboardItem));\n    } else {\n        dashboardItem = {\n            type: type,\n            content: [content],\n        };\n\n        dispatch(acAddDashboardItem(dashboardItem));\n    }\n};\n","import React, { Fragment } from 'react';\nimport { connect } from 'react-redux';\n\nimport HeaderMenuItem from './HeaderMenuItem';\nimport ContentMenuItem from './ContentMenuItem';\nimport { acAddDashboardItem } from '../../actions/editDashboard';\n\nexport const SinglesMenuGroup = ({ acAddDashboardItem, category }) => {\n    const addToDashboard = ({ type, content }) => () => {\n        acAddDashboardItem({ type, content });\n    };\n\n    return (\n        <Fragment>\n            <HeaderMenuItem title={category.header} />\n            {category.items.map(item => (\n                <ContentMenuItem\n                    key={item.type}\n                    type={item.type}\n                    name={item.name}\n                    onInsert={addToDashboard(item)}\n                />\n            ))}\n        </Fragment>\n    );\n};\n\nexport default connect(\n    null,\n    { acAddDashboardItem }\n)(SinglesMenuGroup);\n","import React, { Fragment } from 'react';\nimport PropTypes from 'prop-types';\nimport i18n from '@dhis2/d2-i18n';\nimport Popover from '@material-ui/core/Popover';\nimport { InputField, Menu } from '@dhis2/ui-core';\n\nimport CategorizedMenuGroup from './CategorizedMenuGroup';\nimport SinglesMenuGroup from './SinglesMenuGroup';\nimport { singleItems, categorizedItems } from './selectableItems';\nimport { itemTypeMap } from '../../modules/itemTypes';\n\nimport './styles/ItemSelector.css';\n\nconst ItemSearchField = props => (\n    <InputField\n        filled\n        name=\"Dashboard item search\"\n        label={i18n.t('Search for items to add to this dashboard')}\n        type=\"text\"\n        onChange={props.onChange}\n        onFocus={props.onFocus}\n        value={props.value}\n    />\n);\n\nclass ItemSelector extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            anchorEl: null,\n            open: false,\n            maxOptions: new Set(),\n            items: undefined,\n            filter: '',\n        };\n    }\n\n    closeList = () => {\n        this.setState({ open: false, filter: '' });\n    };\n\n    openList = event => {\n        this.fetchItems();\n\n        this.setState({\n            anchorEl: event.currentTarget,\n            open: true,\n        });\n    };\n\n    setFilter = event => {\n        this.setState({ filter: event.target.value }, this.fetchItems);\n    };\n\n    getCategorizedMenuGroups = items =>\n        categorizedItems.map(type => {\n            const itemType = itemTypeMap[type.id];\n\n            return items && items[itemType.countName] > 0 ? (\n                <CategorizedMenuGroup\n                    key={type.id}\n                    type={type.id}\n                    title={type.title}\n                    items={items[itemType.endPointName]}\n                    onChangeItemsLimit={this.fetchItems}\n                />\n            ) : null;\n        });\n\n    getSinglesMenuGroups = items =>\n        items.map(category => (\n            <SinglesMenuGroup key={category.id} category={category} />\n        ));\n\n    getMenuGroups = items =>\n        this.getCategorizedMenuGroups(items).concat(\n            this.getSinglesMenuGroups(singleItems)\n        );\n\n    fetchItems = async type => {\n        if (type) {\n            const maxOptions = this.state.maxOptions;\n\n            if (maxOptions.has(type)) {\n                maxOptions.delete(type);\n            } else {\n                maxOptions.add(type);\n            }\n\n            this.setState({ maxOptions });\n        } else {\n            this.setState({\n                maxOptions: new Set(),\n            });\n        }\n\n        let queryString = '';\n        if ([...this.state.maxOptions.values()].length) {\n            queryString =\n                '?max=' + [...this.state.maxOptions.values()].join('&max=');\n        }\n\n        const filter = this.state.filter ? `/${this.state.filter}` : '';\n\n        this.context.d2.Api.getApi()\n            .get(`dashboards/q${filter}${queryString}`)\n            .then(response => {\n                this.setState({ items: response });\n            })\n            .catch(console.error);\n    };\n\n    render() {\n        return (\n            <Fragment>\n                <ItemSearchField\n                    value={this.state.filter}\n                    onChange={this.setFilter}\n                    onFocus={this.openList}\n                />\n                <Popover\n                    className=\"dashboard-item-selector\"\n                    open={this.state.open}\n                    onClose={this.closeList}\n                    anchorEl={this.state.anchorEl}\n                    anchorOrigin={{ horizontal: 'left', vertical: 'bottom' }}\n                    transformOrigin={{ horizontal: 'left', vertical: 'top' }}\n                    style={{ height: '70vh' }}\n                    PaperProps={{ style: { width: '700px' } }}\n                    disableAutoFocus={true}\n                    disableRestoreFocus={true}\n                >\n                    <Menu>{this.getMenuGroups(this.state.items)}</Menu>\n                </Popover>\n            </Fragment>\n        );\n    }\n}\n\nItemSelector.contextTypes = {\n    d2: PropTypes.object.isRequired,\n};\n\nexport default ItemSelector;\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport i18n from '@dhis2/d2-i18n';\nimport MuiInputField from '@material-ui/core/TextField';\nimport { InputField } from '@dhis2/ui-core';\n\nimport ItemSelector from '../ItemSelector/ItemSelector';\nimport {\n    acSetDashboardTitle,\n    acSetDashboardDescription,\n} from '../../actions/editDashboard';\nimport { orObject } from '../../modules/util';\nimport { sGetEditDashboardRoot } from '../../reducers/editDashboard';\n\nconst styles = {\n    section: { display: 'flex', justifyContent: 'space-between' },\n    titleDescription: {\n        flex: '3',\n        marginRight: '50px',\n    },\n    title: {\n        display: 'block',\n        clear: 'both',\n    },\n    description: {\n        display: 'block',\n        clear: 'both',\n        marginTop: '15px',\n    },\n    underline: {\n        '&::before': {\n            borderBottom: `none`,\n        },\n        '&:hover::before': {\n            borderBottom: `none!important`,\n        },\n    },\n    input: {\n        backgroundColor: 'rgba(0, 0, 10, 0.05)',\n        borderRadius: '4px',\n        width: '100%',\n        '&:hover': {\n            backgroundColor: 'rgba(0, 0, 10, 0.08)',\n        },\n    },\n    itemSelector: {\n        flex: '2',\n        position: 'relative',\n    },\n};\n\nexport const EditTitleBar = ({\n    name,\n    description,\n    onChangeTitle,\n    onChangeDescription,\n    classes,\n}) => {\n    const updateTitle = e => {\n        onChangeTitle(e.target.value);\n    };\n\n    const updateDescription = e => {\n        onChangeDescription(e.target.value);\n    };\n\n    return (\n        <section className={classes.section}>\n            <div className={classes.titleDescription}>\n                <InputField\n                    className={classes.title}\n                    filled\n                    name=\"Dashboard title input\"\n                    label={i18n.t('Dashboard title')}\n                    type=\"text\"\n                    onChange={updateTitle}\n                    value={name}\n                />\n                <MuiInputField\n                    className={classes.description}\n                    name=\"Dashboard description input\"\n                    label={i18n.t('Dashboard description')}\n                    onChange={updateDescription}\n                    value={description}\n                    variant=\"filled\"\n                    multiline\n                    InputProps={{\n                        classes: {\n                            root: classes.input,\n                            underline: classes.underline,\n                        },\n                    }}\n                />\n            </div>\n            <div className={classes.itemSelector}>\n                <ItemSelector />\n            </div>\n        </section>\n    );\n};\n\nconst mapStateToProps = state => {\n    const selectedDashboard = orObject(sGetEditDashboardRoot(state));\n\n    return {\n        name: selectedDashboard.name,\n        description: selectedDashboard.description,\n    };\n};\n\nconst mapDispatchToProps = {\n    onChangeTitle: acSetDashboardTitle,\n    onChangeDescription: acSetDashboardDescription,\n};\n\nexport default connect(\n    mapStateToProps,\n    mapDispatchToProps\n)(withStyles(styles)(EditTitleBar));\n\nEditTitleBar.propTypes = {\n    name: PropTypes.string,\n    description: PropTypes.string,\n    onChangeTitle: PropTypes.func.isRequired,\n    onChangeDescription: PropTypes.func.isRequired,\n};\n\nEditTitleBar.defaultProps = {\n    name: '',\n    description: '',\n};\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nimport { Button } from '@dhis2/ui-core';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\n\nimport i18n from '@dhis2/d2-i18n';\n\nimport {\n    PeriodDimension,\n    DynamicDimension,\n    OrgUnitDimension,\n    FIXED_DIMENSIONS,\n} from '@dhis2/d2-ui-analytics';\n\nconst peId = FIXED_DIMENSIONS.pe.id;\nconst ouId = FIXED_DIMENSIONS.ou.id;\n\nclass FilterDialog extends Component {\n    onConfirm = id => () => this.props.onConfirm(id);\n\n    dialogContent() {\n        const { displayNameProperty, dimension, selectedItems } = this.props;\n        const dialogId = dimension.id;\n\n        const commonProps = {\n            d2: this.context.d2,\n            onSelect: this.props.onSelect,\n            onDeselect: this.props.onDeselect,\n            onReorder: this.props.onReorder,\n        };\n\n        switch (dialogId) {\n            case peId: {\n                return (\n                    <PeriodDimension\n                        selectedPeriods={selectedItems}\n                        {...commonProps}\n                    />\n                );\n            }\n            case ouId:\n                return (\n                    <OrgUnitDimension\n                        displayNameProperty={displayNameProperty}\n                        ouItems={selectedItems}\n                        {...commonProps}\n                    />\n                );\n            default:\n                return (\n                    <DynamicDimension\n                        selectedItems={selectedItems}\n                        dialogId={dialogId}\n                        dialogTitle={dimension.name}\n                        {...commonProps}\n                    />\n                );\n        }\n    }\n\n    render() {\n        const { dimension, onClose } = this.props;\n        const dialogId = dimension.id;\n\n        return (\n            <Dialog\n                open={!!dialogId}\n                maxWidth=\"lg\"\n                disableEnforceFocus\n                onClose={onClose}\n            >\n                {dialogId && this.dialogContent()}\n                <DialogActions>\n                    <Button kind=\"secondary\" onClick={onClose}>\n                        {i18n.t('Cancel')}\n                    </Button>\n                    <Button kind=\"primary\" onClick={this.onConfirm(dialogId)}>\n                        {i18n.t('Confirm')}\n                    </Button>\n                </DialogActions>\n            </Dialog>\n        );\n    }\n}\n\nFilterDialog.propTypes = {\n    displayNameProperty: PropTypes.string,\n    dimension: PropTypes.object,\n    selectedItems: PropTypes.array,\n    onSelect: PropTypes.func,\n    onDeselect: PropTypes.func,\n    onReorder: PropTypes.func,\n    onClose: PropTypes.func,\n    onConfirm: PropTypes.func,\n};\n\nFilterDialog.contextTypes = {\n    d2: PropTypes.object,\n};\n\nexport default FilterDialog;\n","export const SET_ACTIVE_MODAL_DIMENSION = 'SET_ACTIVE_MODAL_DIMENSION';\nexport const CLEAR_ACTIVE_MODAL_DIMENSION = 'CLEAR_ACTIVE_MODAL_DIMENSION';\n\nexport const DEFAULT_STATE_ACTIVE_MODAL_DIMENSION = {};\n\nexport default (state = DEFAULT_STATE_ACTIVE_MODAL_DIMENSION, action) => {\n    switch (action.type) {\n        case SET_ACTIVE_MODAL_DIMENSION: {\n            return action.value;\n        }\n        case CLEAR_ACTIVE_MODAL_DIMENSION: {\n            return DEFAULT_STATE_ACTIVE_MODAL_DIMENSION;\n        }\n        default:\n            return state;\n    }\n};\n\nexport const sGetActiveModalDimension = state => state.activeModalDimension;\n","import {\n    SET_ACTIVE_MODAL_DIMENSION,\n    CLEAR_ACTIVE_MODAL_DIMENSION,\n} from '../reducers/activeModalDimension';\n\nexport const acSetActiveModalDimension = value => ({\n    type: SET_ACTIVE_MODAL_DIMENSION,\n    value,\n});\n\nexport const acClearActiveModalDimension = () => ({\n    type: CLEAR_ACTIVE_MODAL_DIMENSION,\n});\n","import React, { Component, Fragment } from 'react';\nimport { connect } from 'react-redux';\nimport Popover from '@material-ui/core/Popover';\nimport ArrowDropDownIcon from '@material-ui/icons/ArrowDropDown';\nimport { withTheme } from '@material-ui/core/styles';\n\nimport i18n from '@dhis2/d2-i18n';\nimport { DimensionsPanel } from '@dhis2/d2-ui-analytics';\n\nimport { Button } from '@dhis2/ui-core';\nimport FilterDialog from './FilterDialog';\n\nimport { sGetSettingsDisplayNameProperty } from '../../reducers/settings';\nimport { sGetActiveModalDimension } from '../../reducers/activeModalDimension';\nimport { sGetDimensions } from '../../reducers/dimensions';\nimport { sGetFiltersKeys } from '../../reducers/itemFilters';\nimport { sGetEditItemFiltersRoot } from '../../reducers/editItemFilters';\nimport { acAddItemFilter, acRemoveItemFilter } from '../../actions/itemFilters';\nimport {\n    acRemoveEditItemFilter,\n    acSetEditItemFilters,\n} from '../../actions/editItemFilters';\nimport {\n    acClearActiveModalDimension,\n    acSetActiveModalDimension,\n} from '../../actions/activeModalDimension';\n\nclass FilterSelector extends Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            anchorEl: null,\n        };\n    }\n\n    openPanel = event => {\n        this.setState({ anchorEl: event.currentTarget });\n    };\n\n    closePanel = () => {\n        this.setState({ anchorEl: null });\n    };\n\n    closeDialog = () => {\n        this.setState({ anchorEl: null });\n\n        this.props.clearActiveModalDimension();\n    };\n\n    selectDimension = id => {\n        this.props.setActiveModalDimension({\n            id,\n            name: this.props.dimensions[id].name,\n        });\n    };\n\n    onSelectItems = ({ dimensionId, items }) => {\n        this.props.setEditItemFilters({\n            ...this.props.selectedItems,\n            [dimensionId]: items,\n        });\n    };\n\n    onDeselectItems = ({ dimensionId, itemIdsToRemove }) => {\n        const oldList = this.props.selectedItems[dimensionId] || [];\n        const newList = oldList.filter(\n            item => !itemIdsToRemove.includes(item.id)\n        );\n\n        if (newList.length) {\n            this.props.setEditItemFilters({\n                ...this.props.selectedItems,\n                [dimensionId]: newList,\n            });\n        } else {\n            this.props.removeEditItemFilter(dimensionId);\n        }\n    };\n\n    onReorderItems = ({ dimensionId, itemIds }) => {\n        const oldList = this.props.selectedItems[dimensionId] || [];\n        const reorderedList = itemIds.map(id =>\n            oldList.find(item => item.id === id)\n        );\n\n        this.props.setEditItemFilters({\n            ...this.props.selectedItems,\n            [dimensionId]: reorderedList,\n        });\n    };\n\n    saveFilter = id => {\n        const filterItems = this.props.selectedItems[id];\n\n        if (filterItems && filterItems.length) {\n            this.props.addItemFilter({\n                id,\n                value: [...filterItems],\n            });\n        } else {\n            this.props.removeItemFilter(id);\n        }\n\n        this.closeDialog();\n    };\n\n    render() {\n        const {\n            theme,\n            displayNameProperty,\n            dimension,\n            dimensions,\n            selectedDimensions,\n            selectedItems,\n        } = this.props;\n\n        return (\n            <Fragment>\n                <Button onClick={this.openPanel}>\n                    {i18n.t('Add filter')}\n                    <ArrowDropDownIcon />\n                </Button>\n                <Popover\n                    open={Boolean(this.state.anchorEl)}\n                    anchorEl={this.state.anchorEl}\n                    anchorOrigin={{ vertical: 'bottom', horizontal: 'left' }}\n                    onClose={this.closePanel}\n                    style={{\n                        height: '100%',\n                        fontFamily: theme.typography.fontFamily,\n                    }}\n                >\n                    <DimensionsPanel\n                        dimensions={dimensions}\n                        onDimensionClick={this.selectDimension}\n                        selectedIds={selectedDimensions}\n                    />\n                </Popover>\n                {dimension ? (\n                    <FilterDialog\n                        displayNameProperty={displayNameProperty}\n                        dimension={dimension}\n                        selectedItems={selectedItems[dimension.id] || []}\n                        onSelect={this.onSelectItems}\n                        onDeselect={this.onDeselectItems}\n                        onReorder={this.onReorderItems}\n                        onClose={this.closeDialog}\n                        onConfirm={this.saveFilter}\n                    />\n                ) : null}\n            </Fragment>\n        );\n    }\n}\n\nconst mapStateToProps = state => ({\n    displayNameProperty: sGetSettingsDisplayNameProperty(state),\n    dimension: sGetActiveModalDimension(state),\n    dimensions: sGetDimensions(state),\n    selectedDimensions: sGetFiltersKeys(state),\n    selectedItems: sGetEditItemFiltersRoot(state),\n});\n\nexport default connect(\n    mapStateToProps,\n    {\n        clearActiveModalDimension: acClearActiveModalDimension,\n        setActiveModalDimension: acSetActiveModalDimension,\n        addItemFilter: acAddItemFilter,\n        removeItemFilter: acRemoveItemFilter,\n        removeEditItemFilter: acRemoveEditItemFilter,\n        setEditItemFilters: acSetEditItemFilters,\n    }\n)(withTheme()(FilterSelector));\n","import React, { Component } from 'react';\nimport InfoOutlineIcon from '@material-ui/icons/InfoOutlined';\nimport { colors } from '../../modules/colors';\n\nclass Info extends Component {\n    show = false;\n\n    toggle() {\n        this.show = !this.show;\n        return this.show;\n    }\n\n    render() {\n        return (\n            <div onClick={() => this.props.onClick(this.toggle())}>\n                <InfoOutlineIcon style={{ fill: colors.muiDefaultGrey }} />\n            </div>\n        );\n    }\n}\n\nexport default Info;\n","import React, { Component, Fragment } from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport { Link } from 'react-router-dom';\nimport i18n from '@dhis2/d2-i18n';\nimport SharingDialog from '@dhis2/d2-ui-sharing-dialog';\nimport Star from '@material-ui/icons/Star';\nimport StarBorder from '@material-ui/icons/StarBorder';\n\nimport { orObject } from '../../modules/util';\nimport { tStarDashboard } from '../../actions/dashboards';\nimport { acSetSelectedShowDescription } from '../../actions/selected';\nimport FilterSelector from '../ItemFilter/FilterSelector';\nimport { Button } from '@dhis2/ui-core';\nimport Info from './Info';\nimport {\n    sGetSelectedId,\n    sGetSelectedShowDescription,\n} from '../../reducers/selected';\nimport {\n    sGetDashboardById,\n    sGetDashboardItems,\n} from '../../reducers/dashboards';\nimport { colors } from '../../modules/colors';\n\nconst NO_DESCRIPTION = i18n.t('No description');\n\nconst styles = {\n    actions: {\n        display: 'flex',\n        alignItems: 'center',\n        marginLeft: '20px',\n    },\n    starIcon: {\n        fill: colors.muiDefaultGrey,\n    },\n    textButton: {\n        minWidth: '30px',\n        top: '1px',\n    },\n    editLink: {\n        display: 'inline-block',\n        verticalAlign: 'top',\n        textDecoration: 'none',\n        marginRight: '4px',\n    },\n    titleBar: {\n        display: 'flex',\n        alignItems: 'flex-start',\n    },\n    titleBarIcon: {\n        marginLeft: 5,\n        position: 'relative',\n        top: 1,\n        cursor: 'pointer',\n    },\n};\n\nclass ViewTitleBar extends Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            sharingDialogIsOpen: false,\n        };\n    }\n\n    toggleSharingDialog = () =>\n        this.setState({ sharingDialogIsOpen: !this.state.sharingDialogIsOpen });\n\n    render() {\n        const {\n            id,\n            name,\n            description,\n            access,\n            style,\n            showDescription,\n            starred,\n            onStarClick,\n            onInfoClick,\n            classes,\n        } = this.props;\n\n        const titleStyle = Object.assign({}, style.title, {\n            cursor: 'default',\n            userSelect: 'text',\n            top: '7px',\n        });\n\n        const StarIcon = starred ? Star : StarBorder;\n\n        return (\n            <Fragment>\n                <div className={classes.titleBar}>\n                    <span style={titleStyle}>{name}</span>\n                    <div className={classes.actions}>\n                        <div\n                            className={classes.titleBarIcon}\n                            onClick={onStarClick}\n                        >\n                            <StarIcon className={classes.starIcon} />\n                        </div>\n                        <div className={classes.titleBarIcon}>\n                            <Info onClick={onInfoClick} />\n                        </div>\n                        <div style={{ marginLeft: '10px' }}>\n                            {access.update ? (\n                                <Link\n                                    className={classes.editLink}\n                                    to={`/${id}/edit`}\n                                >\n                                    <Button>{i18n.t('Edit')}</Button>\n                                </Link>\n                            ) : null}\n                            {access.manage ? (\n                                <span style={{ marginRight: '4px' }}>\n                                    <Button onClick={this.toggleSharingDialog}>\n                                        {i18n.t('Share')}\n                                    </Button>\n                                </span>\n                            ) : null}\n                            <span style={{ marginRight: '4px' }}>\n                                <FilterSelector />\n                            </span>\n                        </div>\n                    </div>\n                </div>\n                {showDescription ? (\n                    <div\n                        className=\"dashboard-description\"\n                        style={Object.assign(\n                            { paddingTop: '5px', paddingBottom: '5px' },\n                            style.description,\n                            !description ? { color: '#888' } : {}\n                        )}\n                    >\n                        {description || NO_DESCRIPTION}\n                    </div>\n                ) : null}\n                {id ? (\n                    <SharingDialog\n                        d2={this.context.d2}\n                        id={id}\n                        type=\"dashboard\"\n                        open={this.state.sharingDialogIsOpen}\n                        onRequestClose={this.toggleSharingDialog}\n                    />\n                ) : null}\n            </Fragment>\n        );\n    }\n}\n\nconst mapStateToProps = state => {\n    const id = sGetSelectedId(state);\n    const dashboard = orObject(sGetDashboardById(state, id));\n\n    return {\n        id,\n        name: dashboard.displayName,\n        description: dashboard.displayDescription,\n        dashboardItems: sGetDashboardItems(state),\n        showDescription: sGetSelectedShowDescription(state),\n        starred: dashboard.starred,\n        access: orObject(dashboard.access),\n    };\n};\n\nconst mergeProps = (stateProps, dispatchProps, ownProps) => {\n    const { id, starred, showDescription } = stateProps;\n    const { dispatch } = dispatchProps;\n\n    return {\n        ...stateProps,\n        ...ownProps,\n        onStarClick: () => dispatch(tStarDashboard(id, !starred)),\n        onInfoClick: () =>\n            dispatch(acSetSelectedShowDescription(!showDescription)),\n    };\n};\n\nexport default connect(\n    mapStateToProps,\n    null,\n    mergeProps\n)(withStyles(styles)(ViewTitleBar));\n\nViewTitleBar.propTypes = {\n    id: PropTypes.string,\n    name: PropTypes.string,\n    description: PropTypes.string,\n    starred: PropTypes.bool,\n    showDescription: PropTypes.bool,\n    onInfoClick: PropTypes.func,\n};\n\nViewTitleBar.defaultProps = {\n    name: '',\n    description: '',\n    starred: false,\n    showDescription: false,\n    onInfoClick: null,\n};\n\nViewTitleBar.contextTypes = {\n    d2: PropTypes.object,\n};\n","import React from 'react';\n\nimport { colors } from '../../modules/colors';\nimport EditTitleBar from './EditTitleBar';\nimport ViewTitleBar from './ViewTitleBar';\n\nimport './TitleBar.css';\n\nconst style = {\n    title: {\n        position: 'relative',\n        fontSize: 21,\n        fontWeight: 500,\n        color: colors.black,\n        minWidth: 50,\n    },\n    description: {\n        fontSize: 14,\n        color: colors.darkGrey,\n    },\n};\n\nconst TitleBar = ({ edit }) => {\n    return (\n        <div\n            className=\"titlebar-wrapper\"\n            style={{\n                padding: '20px 15px 5px 10px',\n            }}\n        >\n            {edit ? (\n                <EditTitleBar style={style} />\n            ) : (\n                <ViewTitleBar style={style} />\n            )}\n        </div>\n    );\n};\n\nexport default TitleBar;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nimport i18n from '@dhis2/d2-i18n';\n\nimport * as pluginManager from './plugin';\nimport { getBaseUrl, orObject } from '../../../modules/util';\nimport { getGridItemDomId } from '../../ItemGrid/gridUtil';\n\nconst pluginCredentials = d2 => {\n    return {\n        baseUrl: getBaseUrl(d2),\n        auth: d2.Api.getApi().defaultHeaders.Authorization,\n    };\n};\n\nclass DefaultPlugin extends Component {\n    pluginCredentials = null;\n\n    constructor(props, context) {\n        super(props);\n\n        this.d2 = context.d2;\n    }\n\n    shouldPluginReload = prevProps => {\n        // TODO - fix this hack, to handle bug with multiple\n        // rerendering while switching between dashboards.\n        //\n        // To determine if the rendering is happening because of a\n        // dashboard switch, check if the item reference has changed.\n        const reloadAllowed = this.props.item === prevProps.item;\n\n        const filtersChanged = prevProps.itemFilters !== this.props.itemFilters;\n        const vis = orObject(this.props.visualization);\n        const prevVis = orObject(prevProps.visualization);\n        const visChanged =\n            vis.id !== prevVis.id || vis.activeType !== prevVis.activeType;\n\n        return reloadAllowed && (visChanged || filtersChanged);\n    };\n\n    reloadPlugin = prevProps => {\n        if (\n            pluginManager.pluginIsAvailable(\n                this.props.item,\n                this.props.visualization\n            ) &&\n            this.shouldPluginReload(prevProps)\n        ) {\n            const prevVis = orObject(prevProps.visualization);\n            const currentVis = this.props.visualization;\n\n            const useActiveType =\n                currentVis.activeType !== prevVis.activeType ||\n                currentVis.activeType !== this.props.item.type;\n\n            if (\n                useActiveType ||\n                this.props.itemFilters !== prevProps.itemFilters\n            ) {\n                pluginManager.unmount(\n                    this.props.item,\n                    prevVis.activeType || this.props.item.type\n                );\n\n                pluginManager.load(\n                    this.props.item,\n                    this.props.visualization,\n                    this.pluginCredentials,\n                    useActiveType ? currentVis.activeType : null\n                );\n            }\n        }\n    };\n\n    componentDidMount() {\n        this.pluginCredentials = pluginCredentials(this.d2);\n\n        if (\n            pluginManager.pluginIsAvailable(\n                this.props.item,\n                this.props.visualization\n            )\n        ) {\n            pluginManager.load(\n                this.props.item,\n                this.props.visualization,\n                this.pluginCredentials,\n                !this.props.editMode ? this.getActiveType() : null\n            );\n        }\n    }\n\n    componentDidUpdate(prevProps) {\n        this.reloadPlugin(prevProps);\n    }\n\n    getActiveType = () =>\n        this.props.visualization.activeType || this.props.item.type;\n\n    render() {\n        const { classes, item, visualization, style } = this.props;\n        const pluginIsAvailable = pluginManager.pluginIsAvailable(\n            item,\n            visualization\n        );\n\n        return pluginIsAvailable ? (\n            <div id={getGridItemDomId(item.id)} style={style} />\n        ) : (\n            <div className={classes.textDiv}>\n                {i18n.t('Unable to load the plugin for this item')}\n            </div>\n        );\n    }\n}\n\nDefaultPlugin.contextTypes = {\n    d2: PropTypes.object,\n};\n\nDefaultPlugin.propTypes = {\n    style: PropTypes.object,\n    item: PropTypes.object,\n    itemFilters: PropTypes.object,\n    visualization: PropTypes.object,\n};\n\nDefaultPlugin.defaultProps = {\n    style: {},\n    item: {},\n    itemFilters: {},\n    visualization: {},\n};\n\nexport default DefaultPlugin;\n","import React from 'react';\n\nexport const HEADER_HEIGHT = 45;\n\nconst ItemHeader = props => {\n    const { title, actionButtons, editMode } = props;\n\n    return (\n        <div className=\"dashboard-item-header\">\n            <div\n                className=\"dashboard-item-header-title\"\n                style={{ userSelect: editMode ? 'none' : 'text' }}\n            >\n                {title}\n            </div>\n            {actionButtons}\n        </div>\n    );\n};\n\nexport default ItemHeader;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { colors } from '../../../modules/colors';\nimport { getId } from './plugin';\nimport InterpretationsComponent from '@dhis2/d2-ui-interpretations';\n\nconst style = {\n    scrollContainer: {\n        overflowY: 'auto',\n        height: '340px',\n    },\n    line: {\n        margin: '-1px 0px 0px',\n        height: '1px',\n        border: 'none',\n        backgroundColor: colors.lightGrey,\n    },\n};\n\nclass ItemFooter extends Component {\n    render() {\n        const objectId = getId(this.props.item);\n\n        return (\n            <div className=\"dashboard-item-footer\">\n                <hr style={style.line} />\n                <div style={style.scrollContainer}>\n                    <InterpretationsComponent\n                        d2={this.context.d2}\n                        item={this.props.item}\n                        type={this.props.item.type.toLowerCase()}\n                        id={objectId}\n                        appName=\"dashboard\"\n                    />\n                </div>\n            </div>\n        );\n    }\n}\n\nItemFooter.contextTypes = {\n    d2: PropTypes.object.isRequired,\n};\n\nItemFooter.propTypes = {\n    item: PropTypes.object.isRequired,\n};\n\nexport default ItemFooter;\n","import React from 'react';\n\nimport './ItemHeaderButton.css';\n\nconst ItemHeaderButton = ({ disabled, onClick, children, style }) => {\n    return (\n        <button\n            disabled={disabled}\n            type=\"button\"\n            className=\"item-action-button\"\n            style={style}\n            onClick={onClick}\n        >\n            {children}\n        </button>\n    );\n};\n\nexport default ItemHeaderButton;\n","import React, { Component, Fragment } from 'react';\nimport MessageIcon from '@material-ui/icons/Message';\nimport TableIcon from '@material-ui/icons/ViewList';\nimport ChartIcon from '@material-ui/icons/InsertChart';\nimport MapIcon from '@material-ui/icons/Public';\n\nimport { extractFavorite } from './plugin';\nimport ItemHeaderButton from '../ItemHeaderButton';\nimport {\n    VISUALIZATION_TYPE_TABLE,\n    VISUALIZATION_TYPE_CHART,\n    VISUALIZATION_TYPE_MAP,\n    itemTypeMap,\n    CHART,\n    MAP,\n    REPORT_TABLE,\n    EVENT_CHART,\n    EVENT_REPORT,\n    DOMAIN_TYPE_AGGREGATE,\n} from '../../../modules/itemTypes';\nimport { colors } from '../../../modules/colors';\n\nconst style = {\n    iconBase: {\n        width: '24px',\n        height: '24px',\n        fill: colors.lightMediumGrey,\n    },\n    buttonBase: {\n        padding: '5px 6px 3px 6px',\n    },\n    buttonDisabled: {\n        padding: '5px 6px 3px 6px',\n        opacity: 0.5,\n        cursor: 'unset',\n    },\n    toggleFooterPadding: {\n        padding: '7px 6px 1px 6px',\n    },\n    border: {\n        borderRadius: '2px',\n        border: `1px solid ${colors.lightGrey}`,\n    },\n};\n\nconst baseStyle = {\n    icon: style.iconBase,\n    container: style.buttonBase,\n};\n\nconst disabledStyle = {\n    icon: style.iconBase,\n    container: style.buttonDisabled,\n};\n\nconst activeStyle = {\n    icon: { ...style.iconBase, fill: colors.royalBlue },\n    container: {\n        ...style.buttonBase,\n        backgroundColor: colors.lightBlue,\n    },\n};\n\nconst inactiveStyle = disabled => (disabled ? disabledStyle : baseStyle);\n\nconst tableBtnStyle = (activeType, disabled) =>\n    [REPORT_TABLE, EVENT_REPORT].includes(activeType)\n        ? activeStyle\n        : inactiveStyle(disabled);\n\nconst chartBtnStyle = (activeType, disabled) =>\n    [CHART, EVENT_CHART].includes(activeType)\n        ? activeStyle\n        : inactiveStyle(disabled);\n\nconst mapBtnStyle = (activeType, disabled) =>\n    [MAP].includes(activeType) ? activeStyle : inactiveStyle(disabled);\n\nexport const getItemTypeId = (itemTypeMap, visualizationType, domainType) => {\n    const item = Object.values(itemTypeMap).find(\n        item =>\n            item.visualizationType === visualizationType &&\n            item.domainType === domainType\n    );\n    return item.id;\n};\n\nclass VisualizationItemHeaderButtons extends Component {\n    render() {\n        const {\n            item,\n            onSelectVisualization,\n            activeFooter,\n            activeType,\n            onToggleFooter,\n        } = this.props;\n\n        const domainType = itemTypeMap[item.type].domainType;\n\n        const onViewTable = () =>\n            onSelectVisualization(\n                getItemTypeId(itemTypeMap, VISUALIZATION_TYPE_TABLE, domainType)\n            );\n\n        const onViewChart = () =>\n            onSelectVisualization(\n                getItemTypeId(itemTypeMap, VISUALIZATION_TYPE_CHART, domainType)\n            );\n\n        const onViewMap = () =>\n            onSelectVisualization(\n                getItemTypeId(itemTypeMap, VISUALIZATION_TYPE_MAP, domainType)\n            );\n\n        const toggleFooterBase = activeFooter ? activeStyle : baseStyle;\n\n        const toggleFooter = {\n            ...toggleFooterBase,\n            container: {\n                ...toggleFooterBase.container,\n                ...style.toggleFooterPadding,\n                ...style.border,\n            },\n        };\n\n        // disable toggle buttons\n        let disabled = false;\n\n        if (item.type === VISUALIZATION_TYPE_CHART) {\n            if (extractFavorite(item).type.match(/^YEAR_OVER_YEAR/)) {\n                disabled = true;\n            }\n        }\n\n        const tableButtonStyle = tableBtnStyle(activeType, disabled);\n        const chartButtonStyle = chartBtnStyle(activeType, disabled);\n        const mapButtonStyle = mapBtnStyle(activeType, disabled);\n\n        return (\n            <Fragment>\n                <div style={{ marginRight: 10 }}>\n                    <ItemHeaderButton\n                        style={toggleFooter.container}\n                        onClick={onToggleFooter}\n                    >\n                        <MessageIcon style={toggleFooter.icon} />\n                    </ItemHeaderButton>\n                </div>\n                <div style={style.border}>\n                    <ItemHeaderButton\n                        disabled={disabled}\n                        style={tableButtonStyle.container}\n                        onClick={onViewTable}\n                    >\n                        <TableIcon style={tableButtonStyle.icon} />\n                    </ItemHeaderButton>\n                    <ItemHeaderButton\n                        disabled={disabled}\n                        style={chartButtonStyle.container}\n                        onClick={onViewChart}\n                    >\n                        <ChartIcon style={chartButtonStyle.icon} />\n                    </ItemHeaderButton>\n                    {domainType === DOMAIN_TYPE_AGGREGATE ? (\n                        <ItemHeaderButton\n                            disabled={disabled}\n                            style={mapButtonStyle.container}\n                            onClick={onViewMap}\n                        >\n                            <MapIcon style={mapButtonStyle.icon} />\n                        </ItemHeaderButton>\n                    ) : null}\n                </div>\n            </Fragment>\n        );\n    }\n}\n\nexport default VisualizationItemHeaderButtons;\n","// Note that this ignores discrepancies in 'this', so shouldn't be used with bound functions\n// This is useful instead of lodash/memoize when we only need to memoize a single value\n// Inspiration: https://github.com/alexreardon/memoize-one\n\nconst memoizeOne = fn => {\n    let lastArgs = undefined;\n    let lastValue = undefined;\n\n    return (...args) => {\n        if (\n            lastArgs &&\n            args.length === lastArgs.length &&\n            args.every((arg, i) => arg === lastArgs[i])\n        ) {\n            return lastValue;\n        }\n        lastArgs = args;\n        lastValue = fn(...args);\n        return lastValue;\n    };\n};\n\nexport default memoizeOne;\n","import React, { Component, Fragment } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { withStyles } from '@material-ui/core/styles';\nimport LaunchIcon from '@material-ui/icons/Launch';\nimport ChartPlugin from '@dhis2/data-visualizer-plugin';\n\nimport i18n from '@dhis2/d2-i18n';\nimport uniqueId from 'lodash/uniqueId';\n\nimport DefaultPlugin from './DefaultPlugin';\nimport ItemHeader, { HEADER_HEIGHT } from '../ItemHeader';\nimport ItemFooter from './ItemFooter';\nimport VisualizationItemHeaderButtons from './ItemHeaderButtons';\nimport * as pluginManager from './plugin';\nimport { sGetVisualization } from '../../../reducers/visualizations';\nimport { sGetItemFiltersRoot } from '../../../reducers/itemFilters';\nimport {\n    acReceivedVisualization,\n    acReceivedActiveVisualization,\n} from '../../../actions/selected';\nimport { CHART, MAP, itemTypeMap } from '../../../modules/itemTypes';\nimport { colors } from '../../../modules/colors';\nimport memoizeOne from '../../../modules/memoizeOne';\nimport { getVisualizationConfig } from './plugin';\n\nconst styles = {\n    icon: {\n        width: 16,\n        height: 16,\n        marginLeft: 3,\n        cursor: 'pointer',\n        fill: colors.muiDefaultGrey,\n    },\n    title: {\n        overflow: 'hidden',\n        maxWidth: '85%',\n        textOverflow: 'ellipsis',\n        whiteSpace: 'nowrap',\n    },\n    textDiv: {\n        fontSize: '14px',\n        fontStretch: 'normal',\n        padding: '10px',\n        lineHeight: '20px',\n    },\n};\n\nconst applyFilters = (visualization, filters) => {\n    if (!Object.keys(filters).length) {\n        return visualization;\n    }\n\n    // deep clone objects in filters to avoid changing the visualization in the Redux store\n    const visRows = visualization.rows.map(obj => ({ ...obj }));\n    const visColumns = visualization.columns.map(obj => ({ ...obj }));\n    const visFilters = visualization.filters.map(obj => ({ ...obj }));\n\n    Object.keys(filters).forEach(dimensionId => {\n        if (filters[dimensionId]) {\n            let dimensionFound = false;\n\n            [visRows, visColumns, visFilters].forEach(dimensionObjects =>\n                dimensionObjects\n                    .filter(obj => obj.dimension === dimensionId)\n                    .forEach(obj => {\n                        dimensionFound = true;\n                        obj.items = filters[dimensionId];\n                    })\n            );\n\n            // add dimension to filters if not already present elsewhere\n            if (!dimensionFound) {\n                visFilters.push({\n                    dimension: dimensionId,\n                    items: filters[dimensionId],\n                });\n            }\n        }\n    });\n\n    return {\n        ...visualization,\n        rows: visRows,\n        columns: visColumns,\n        filters: visFilters,\n    };\n};\n\nexport class Item extends Component {\n    state = {\n        showFooter: false,\n        configLoaded: false,\n    };\n\n    constructor(props, context) {\n        super(props);\n\n        this.d2 = context.d2;\n\n        this.contentRef = React.createRef();\n    }\n\n    async componentDidMount() {\n        this.props.onVisualizationLoaded(\n            // TODO do not call fetch on the pluginManager, do it here as the manager will eventually be removed...\n            await pluginManager.fetch(this.props.item)\n        );\n\n        this.setState({\n            configLoaded: true,\n        });\n    }\n\n    getUniqueKey = memoizeOne(() => uniqueId());\n\n    pluginCredentials = null;\n\n    getPluginComponent = () => {\n        const visualization = getVisualizationConfig(\n            this.props.visualization,\n            this.props.item.type,\n            this.getActiveType()\n        );\n\n        if (!visualization) {\n            return (\n                <div className={this.props.classes.textDiv}>\n                    {i18n.t('No data to display')}\n                </div>\n            );\n        }\n\n        const props = {\n            ...this.props,\n            visualization,\n            style: this.getContentStyle(),\n        };\n\n        switch (this.getActiveType()) {\n            case CHART: {\n                return (\n                    <ChartPlugin\n                        d2={this.d2}\n                        config={applyFilters(\n                            props.visualization,\n                            props.itemFilters\n                        )}\n                        forDashboard={true}\n                        style={props.style}\n                    />\n                );\n            }\n            case MAP: {\n                if (props.item.type === MAP) {\n                    // apply filters only to thematic and event layers\n                    // for maps AO\n                    const mapViews = props.visualization.mapViews.map(obj => {\n                        if (\n                            obj.layer.includes('thematic') ||\n                            obj.layer.includes('event')\n                        ) {\n                            return applyFilters(obj, props.itemFilters);\n                        }\n\n                        return obj;\n                    });\n\n                    props.visualization = {\n                        ...props.visualization,\n                        mapViews,\n                    };\n                } else {\n                    // this is the case of a non map AO passed to the maps plugin\n                    // due to a visualization type switch in dashboard item\n                    // maps plugin takes care of converting the AO to a suitable format\n                    props.visualization = applyFilters(\n                        props.visualization,\n                        props.itemFilters\n                    );\n                }\n\n                return <DefaultPlugin {...props} />;\n            }\n            default: {\n                props.visualization = applyFilters(\n                    props.visualization,\n                    props.itemFilters\n                );\n\n                return <DefaultPlugin {...props} />;\n            }\n        }\n    };\n\n    onToggleFooter = () => {\n        this.setState(\n            { showFooter: !this.state.showFooter },\n            this.props.onToggleItemExpanded(this.props.item.id)\n        );\n    };\n\n    onSelectVisualization = activeType => {\n        // Cancel request if type is already active\n        if (activeType === this.getActiveType()) {\n            return;\n        }\n\n        pluginManager.unmount(this.props.item, this.getActiveType());\n\n        this.props.onSelectVisualization(\n            this.props.visualization.id,\n            this.props.item.type,\n            activeType\n        );\n    };\n\n    getActiveType = () =>\n        this.props.visualization.activeType || this.props.item.type;\n\n    pluginIsAvailable = () =>\n        pluginManager.pluginIsAvailable(\n            this.props.item,\n            this.props.visualization\n        );\n\n    getTitle = () => {\n        const { item, editMode, classes } = this.props;\n        const itemName = pluginManager.getName(item);\n\n        return (\n            <div style={{ display: 'flex', alignItems: 'center' }}>\n                <span className={classes.title} title={itemName}>\n                    {itemName}\n                </span>\n                {!editMode && this.pluginIsAvailable() ? (\n                    <a\n                        href={pluginManager.getLink(this.props.item, this.d2)}\n                        style={{ height: 16 }}\n                        title={`View in ${\n                            itemTypeMap[this.props.item.type].appName\n                        } app`}\n                    >\n                        <LaunchIcon className={classes.icon} />\n                    </a>\n                ) : null}\n            </div>\n        );\n    };\n\n    getActionButtons = () =>\n        pluginManager.pluginIsAvailable(\n            this.props.item,\n            this.props.visualization\n        ) && !this.props.editMode ? (\n            <VisualizationItemHeaderButtons\n                item={this.props.item}\n                activeFooter={this.state.showFooter}\n                activeType={this.getActiveType()}\n                onSelectVisualization={this.onSelectVisualization}\n                onToggleFooter={this.onToggleFooter}\n            />\n        ) : null;\n\n    getContentStyle = () => {\n        const { item, editMode } = this.props;\n        const PADDING_BOTTOM = 4;\n\n        return !editMode\n            ? {\n                  height: item.originalHeight - HEADER_HEIGHT - PADDING_BOTTOM,\n              }\n            : { height: this.contentRef.offsetHeight };\n    };\n\n    render() {\n        const { item, editMode, itemFilters } = this.props;\n        const { showFooter } = this.state;\n\n        return (\n            <Fragment>\n                <ItemHeader\n                    title={this.getTitle()}\n                    actionButtons={this.getActionButtons()}\n                    editMode={editMode}\n                />\n                <div\n                    key={this.getUniqueKey(itemFilters)}\n                    className=\"dashboard-item-content\"\n                    ref={ref => (this.contentRef = ref)}\n                >\n                    {this.state.configLoaded && this.getPluginComponent()}\n                </div>\n                {!editMode && showFooter ? <ItemFooter item={item} /> : null}\n            </Fragment>\n        );\n    }\n}\n\nItem.contextTypes = {\n    d2: PropTypes.object,\n};\n\nItem.propTypes = {\n    item: PropTypes.object,\n    editMode: PropTypes.bool,\n    onToggleItemExpanded: PropTypes.func,\n    itemFilters: PropTypes.object,\n    visualization: PropTypes.object,\n};\n\nItem.defaultProps = {\n    item: {},\n    editMode: false,\n    onToggleItemExpanded: Function.prototype,\n    itemFilters: {},\n    visualization: {},\n};\n\nconst mapStateToProps = (state, ownProps) => ({\n    itemFilters: sGetItemFiltersRoot(state),\n    visualization: sGetVisualization(\n        state,\n        pluginManager.extractFavorite(ownProps.item).id\n    ),\n});\n\nconst mapDispatchToProps = dispatch => ({\n    onVisualizationLoaded: visualization =>\n        dispatch(acReceivedVisualization(visualization)),\n    onSelectVisualization: (id, type, activeType) =>\n        dispatch(acReceivedActiveVisualization(id, type, activeType)),\n});\n\nexport default connect(\n    mapStateToProps,\n    mapDispatchToProps\n)(withStyles(styles)(Item));\n","import React from 'react';\nimport { colors } from '../modules/colors';\n\nconst style = {\n    backgroundColor: colors.lightGrey,\n    border: 'none',\n    height: '1px',\n    margin: '0px 0px 5px 0px',\n};\n\nconst Line = props => <hr style={style} />;\n\nexport default Line;\n","import React, { Component, Fragment } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport i18n from '@dhis2/d2-i18n';\n\nimport { sGetMessagesRoot } from '../../../reducers/messages';\nimport { formatDate } from '../../../modules/util';\nimport { colors } from '../../../modules/colors';\nimport ItemHeader from '../ItemHeader';\nimport Line from '../../../widgets/Line';\n\nimport './MessagesItem.css';\n\nconst PRIVATE = 'PRIVATE';\n\nconst messageTypes = {\n    [PRIVATE]: 'Private',\n    VALIDATION_RESULT: 'Validation',\n    TICKET: 'Ticket',\n    SYSTEM: 'System',\n};\n\nconst style = {\n    list: {\n        listStyleType: 'none',\n        paddingLeft: '0px',\n    },\n    seeAll: {\n        textAlign: 'center',\n        fontSize: '13px',\n        marginBottom: '5px',\n    },\n    sender: {\n        fontSize: '13px',\n        lineHeight: '15px',\n        margin: 0,\n        color: colors.darkGrey,\n    },\n    snippet: {\n        color: colors.darkGrey,\n        fontSize: '13px',\n        lineHeight: '15px',\n        maxHeight: '30px',\n        overflow: 'hidden',\n    },\n};\n\nclass MessagesItem extends Component {\n    state = {\n        uiLocale: '',\n    };\n\n    async componentDidMount() {\n        const uiLocale = await this.context.d2.currentUser.userSettings.get(\n            'keyUiLocale'\n        );\n\n        this.setState({ uiLocale });\n    }\n\n    getMessageHref = msg => {\n        const msgIdentifier = msg ? `#/${msg.messageType}/${msg.id}` : '';\n        return `${this.context.baseUrl}/dhis-web-messaging/${msgIdentifier}`;\n    };\n\n    getMessageSender = msg => {\n        const latestMsg = msg.messages.slice(-1)[0];\n        return latestMsg.sender ? latestMsg.sender.displayName : '';\n    };\n\n    getMessageItems = () => {\n        const editClass = !this.props.editMode ? 'view' : null;\n\n        return this.props.messages.map(msg => {\n            const redirectToMsg = () => {\n                if (!this.props.editMode) {\n                    document.location.href = this.getMessageHref(msg);\n                }\n            };\n\n            const sender =\n                msg.messageType === PRIVATE\n                    ? this.getMessageSender(msg)\n                    : messageTypes[msg.messageType];\n\n            const readClass = !msg.read ? 'unread' : null;\n            const latestMsg = msg.messages.slice(-1)[0];\n            const msgDate = latestMsg.lastUpdated;\n\n            return (\n                <li\n                    className={`message-item ${editClass}`}\n                    key={msg.id}\n                    onClick={redirectToMsg}\n                >\n                    <p className={`message-title ${readClass}`}>\n                        {msg.displayName} ({msg.messageCount})\n                    </p>\n                    <p style={style.sender}>\n                        {sender} - {formatDate(msgDate, this.state.uiLocale)}\n                    </p>\n                    <p style={style.snippet}>{latestMsg.text}</p>\n                </li>\n            );\n        });\n    };\n\n    render() {\n        return (\n            <Fragment>\n                <ItemHeader title={i18n.t('Messages')} />\n                <Line />\n                {this.props.messages.length > 0 && (\n                    <div className=\"dashboard-item-content\">\n                        <ul style={style.list}>{this.getMessageItems()}</ul>\n                        <div style={style.seeAll}>\n                            <a href={this.getMessageHref()}>\n                                {i18n.t('See all messages')}\n                            </a>\n                        </div>\n                    </div>\n                )}\n            </Fragment>\n        );\n    }\n}\n\nMessagesItem.contextTypes = {\n    d2: PropTypes.object,\n    baseUrl: PropTypes.string,\n};\n\nconst mapStateToProps = state => {\n    return {\n        messages: Object.values(sGetMessagesRoot(state)),\n    };\n};\n\nconst MessagesContainer = connect(\n    mapStateToProps,\n    null\n)(MessagesItem);\n\nexport default MessagesContainer;\n","import React, { Fragment } from 'react';\nimport ItemHeader from '../ItemHeader';\nimport NotInterestedIcon from '@material-ui/icons/NotInterested';\n\nconst NotSupportedItem = props => (\n    <Fragment>\n        <ItemHeader title={`Item type not supported: ${props.item.type}`} />\n        <div\n            style={{\n                display: 'flex',\n                justifyContent: 'center',\n                alignItems: 'center',\n                height: '90%',\n            }}\n        >\n            <NotInterestedIcon\n                style={{ width: 100, height: 100, align: 'center' }}\n                color=\"disabled\"\n            />\n        </div>\n    </Fragment>\n);\n\nexport default NotSupportedItem;\n","import React from 'react';\nimport { colors } from '@dhis2/ui-core';\n\nconst DescriptionIcon = ({ className }) => (\n    <svg\n        className={className}\n        xmlns=\"http://www.w3.org/2000/svg\"\n        viewBox=\"0 0 24 24\"\n        fill={colors.grey500}\n    >\n        <path d=\"M0 0h24v24H0z\" fill=\"none\" />\n        <path d=\"M14 2H6c-1.1 0-1.99.9-1.99 2L4 20c0 1.1.89 2 1.99 2H18c1.1 0 2-.9 2-2V8l-6-6zm2 16H8v-2h8v2zm0-4H8v-2h8v2zm-3-5V3.5L18.5 9H13z\" />\n    </svg>\n);\n\nexport default DescriptionIcon;\n","import React from 'react';\nimport { colors } from '@dhis2/ui-core';\n\nconst DeleteIcon = ({ className }) => (\n    <svg\n        className={className}\n        xmlns=\"http://www.w3.org/2000/svg\"\n        width=\"18\"\n        height=\"18\"\n        viewBox=\"0 0 24 24\"\n        fill={colors.red500}\n    >\n        <path d=\"M6 19c0 1.1.9 2 2 2h8c1.1 0 2-.9 2-2V7H6v12zM19 4h-3.5l-1-1h-5l-1 1H5v2h14V4z\" />\n        <path d=\"M0 0h24v24H0z\" fill=\"none\" />\n    </svg>\n);\n\nexport default DeleteIcon;\n","import React, { Fragment } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { colors } from '@dhis2/ui-core';\nimport DescriptionIcon from '../../../icons/Description';\n\nimport DeleteIcon from '../../../icons/Delete';\nimport Line from '../../../widgets/Line';\nimport { itemTypeMap, getItemUrl } from '../../../modules/itemTypes';\nimport { orArray } from '../../../modules/util';\nimport { tRemoveListItemContent } from './actions';\nimport ItemHeader from '../ItemHeader';\nimport classes from './Item.module.css';\n\nconst getItemTitle = item => itemTypeMap[item.type].pluralTitle;\n\nconst getContentItems = item =>\n    orArray(item[itemTypeMap[item.type].propName]).filter(\n        (item, index, array) =>\n            array.findIndex(el => el.id === item.id) === index\n    );\n\nconst removeContent = (handler, item, contentToRemove) => () => {\n    handler(item, contentToRemove);\n};\n\nconst ListItem = (props, context) => {\n    const { item, editMode, tRemoveListItemContent } = props;\n    const contentItems = getContentItems(item);\n\n    const getLink = contentItem => {\n        const deleteButton = (\n            <button\n                className={classes.deletebutton}\n                onClick={removeContent(\n                    tRemoveListItemContent,\n                    item,\n                    contentItem\n                )}\n            >\n                <DeleteIcon className={classes.deleteicon} />\n            </button>\n        );\n\n        return (\n            <Fragment>\n                <a\n                    className={classes.link}\n                    style={{ color: colors.grey900 }}\n                    href={getItemUrl(item.type, contentItem, context.d2)}\n                >\n                    {contentItem.name}\n                </a>\n                {editMode ? deleteButton : null}\n            </Fragment>\n        );\n    };\n\n    return (\n        <Fragment>\n            <ItemHeader title={getItemTitle(item)} />\n            <Line />\n            <div className=\"dashboard-item-content\">\n                <ul className={classes.list}>\n                    {contentItems.map(contentItem => (\n                        <li className={classes.item} key={contentItem.id}>\n                            <DescriptionIcon className={classes.itemicon} />\n                            {getLink(contentItem)}\n                        </li>\n                    ))}\n                </ul>\n            </div>\n        </Fragment>\n    );\n};\n\nListItem.contextTypes = {\n    d2: PropTypes.object,\n};\n\nexport default connect(\n    null,\n    {\n        tRemoveListItemContent,\n    }\n)(ListItem);\n","import {\n    acUpdateDashboardItem,\n    acRemoveDashboardItem,\n} from '../../../actions/editDashboard';\nimport { itemTypeMap } from '../../../modules/itemTypes';\n\nexport const tRemoveListItemContent = (dashboardItem, content) => dispatch => {\n    const listItemType = itemTypeMap[dashboardItem.type].propName;\n\n    const newContent = dashboardItem[listItemType].filter(\n        item => item.id !== content.id\n    );\n\n    if (newContent.length) {\n        dashboardItem[listItemType] = newContent;\n        dispatch(acUpdateDashboardItem(dashboardItem));\n    } else {\n        dispatch(acRemoveDashboardItem(dashboardItem));\n    }\n};\n","import React, { Fragment } from 'react';\nimport { connect } from 'react-redux';\nimport i18n from '@dhis2/d2-i18n';\nimport Input from '@material-ui/core/Input';\nimport {\n    Parser as RichTextParser,\n    Editor as RichTextEditor,\n} from '@dhis2/d2-ui-rich-text';\n\nimport { acUpdateDashboardItem } from '../../../actions/editDashboard';\nimport { sGetEditDashboardItems } from '../../../reducers/editDashboard';\nimport { sGetDashboardItems } from '../../../reducers/dashboards';\nimport ItemHeader from '../ItemHeader';\nimport Line from '../../../widgets/Line';\n\nconst style = {\n    textDiv: {\n        padding: '10px',\n        whiteSpace: 'pre-line',\n        lineHeight: '20px',\n    },\n    textField: {\n        fontSize: '14px',\n        fontStretch: 'normal',\n        width: '90%',\n        margin: '0 auto',\n        display: 'block',\n        lineHeight: '24px',\n    },\n    container: {\n        marginBottom: '20px',\n        marginTop: '20px',\n    },\n};\n\nconst TextItem = props => {\n    const { item, editMode, text, acUpdateDashboardItem } = props;\n\n    const onChangeText = event => {\n        const updatedItem = {\n            ...item,\n            text: event.target.value,\n        };\n\n        acUpdateDashboardItem(updatedItem);\n    };\n\n    const viewItem = () => {\n        const textDivStyle = Object.assign({}, style.textField, style.textDiv);\n        return (\n            <div className=\"dashboard-item-content\" style={style.container}>\n                <RichTextParser style={textDivStyle}>{text}</RichTextParser>\n            </div>\n        );\n    };\n\n    const editItem = () => {\n        return (\n            <Fragment>\n                <ItemHeader title={i18n.t('Text item')} />\n                <Line />\n                <div className=\"dashboard-item-content\">\n                    <RichTextEditor onEdit={onChangeText}>\n                        <Input\n                            value={text}\n                            multiline\n                            fullWidth\n                            style={style.textField}\n                            placeholder={i18n.t('Add text here')}\n                            onChange={onChangeText}\n                        />\n                    </RichTextEditor>\n                </div>\n            </Fragment>\n        );\n    };\n\n    return <Fragment>{editMode ? editItem() : viewItem()}</Fragment>;\n};\n\nconst mapStateToProps = (state, ownProps) => {\n    const items = ownProps.editMode\n        ? sGetEditDashboardItems(state)\n        : sGetDashboardItems(state);\n\n    const item = items.find(item => item.id === ownProps.item.id);\n\n    return {\n        text: item ? item.text : '',\n    };\n};\n\nexport default connect(\n    mapStateToProps,\n    {\n        acUpdateDashboardItem,\n    }\n)(TextItem);\n","import React, { Fragment } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport NotInterestedIcon from '@material-ui/icons/NotInterested';\n\nimport { FILTER_ORG_UNIT } from '../../../actions/itemFilters';\nimport { sGetItemFiltersRoot } from '../../../reducers/itemFilters';\nimport ItemHeader from '../ItemHeader';\nimport Line from '../../../widgets/Line';\n\nconst getIframeSrc = (appDetails, item, itemFilters) => {\n    let iframeSrc = `${appDetails.launchUrl}?dashboardItemId=${item.id}`;\n\n    if (\n        itemFilters &&\n        itemFilters[FILTER_ORG_UNIT] &&\n        itemFilters[FILTER_ORG_UNIT].length\n    ) {\n        const ouIds = itemFilters[FILTER_ORG_UNIT].map(\n            ouPath => ouPath.split('/').slice(-1)[0]\n        );\n\n        iframeSrc += `&userOrgUnit=${ouIds.join(',')}`;\n    }\n\n    return iframeSrc;\n};\n\nconst AppItem = ({ item, itemFilters }, context) => {\n    let appDetails;\n\n    const appKey = item.appKey;\n\n    if (appKey) {\n        appDetails = context.d2.system.installedApps.find(\n            app => app.key === appKey\n        );\n    }\n\n    return appDetails && appDetails.name && appDetails.launchUrl ? (\n        <Fragment>\n            <ItemHeader title={appDetails.name} />\n            <Line />\n            <iframe\n                title={appDetails.name}\n                src={getIframeSrc(appDetails, item, itemFilters)}\n                className=\"dashboard-item-content\"\n                style={{ border: 'none' }}\n            />\n        </Fragment>\n    ) : (\n        <Fragment>\n            <ItemHeader title={`${appKey} app not found`} />\n            <Line />\n            <div\n                className=\"dashboard-item-content\"\n                style={{\n                    display: 'flex',\n                    justifyContent: 'center',\n                    alignItems: 'center',\n                    height: '90%',\n                }}\n            >\n                <NotInterestedIcon\n                    color=\"disabled\"\n                    disabled\n                    style={{ width: 100, height: 100, align: 'center' }}\n                />\n            </div>\n        </Fragment>\n    );\n};\n\nAppItem.contextTypes = {\n    d2: PropTypes.object,\n};\n\nconst mapStateToProps = state => ({\n    itemFilters: sGetItemFiltersRoot(state),\n});\n\nexport default connect(mapStateToProps)(AppItem);\n","import React, { Fragment } from 'react';\nimport i18n from '@dhis2/d2-i18n';\n\nimport { colors } from '../../../modules/colors';\nimport ItemHeader from '../ItemHeader';\n\nconst style = {\n    margin: '21px 28px',\n    fontSize: '14px',\n    lineHeight: '18px',\n    color: colors.charcoalGrey,\n};\n\nconst SpacerItem = () => {\n    return (\n        <Fragment>\n            <ItemHeader title={i18n.t('Spacer')} />\n            <p style={style}>\n                {i18n.t(\n                    'Use a spacer to create empty vertical space between other dashboard items.'\n                )}\n            </p>\n        </Fragment>\n    );\n};\n\nexport default SpacerItem;\n","import React from 'react';\n\nimport VisualizationItem from './VisualizationItem/Item';\nimport MessagesItem from './MessagesItem/Item';\nimport NotSupportedItem from './NotSupportedItem/Item';\nimport ListItem from './ListItem/Item';\nimport TextItem from './TextItem/Item';\nimport AppItem from './AppItem/Item';\nimport SpacerItem from './SpacerItem/Item';\nimport {\n    APP,\n    REPORT_TABLE,\n    CHART,\n    MAP,\n    EVENT_CHART,\n    EVENT_REPORT,\n    MESSAGES,\n    REPORTS,\n    RESOURCES,\n    USERS,\n    TEXT,\n    SPACER,\n} from '../../modules/itemTypes';\nimport { DEFAULT_STATE_ITEM_FILTERS } from '../../reducers/itemFilters';\n\nconst getGridItem = type => {\n    switch (type) {\n        case REPORT_TABLE:\n        case CHART:\n        case MAP:\n        case EVENT_CHART:\n        case EVENT_REPORT:\n            return VisualizationItem;\n        case MESSAGES:\n            return MessagesItem;\n        case REPORTS:\n        case RESOURCES:\n        case USERS:\n            return ListItem;\n        case TEXT:\n            return TextItem;\n        case SPACER:\n            return SpacerItem;\n        case APP:\n            return AppItem;\n        default:\n            return NotSupportedItem;\n    }\n};\n\nexport const Item = props => {\n    const GridItem = getGridItem(props.item.type);\n\n    return (\n        <GridItem\n            item={props.item}\n            editMode={props.editMode}\n            itemFilters={\n                props.editMode ? DEFAULT_STATE_ITEM_FILTERS : props.itemFilters\n            }\n            onToggleItemExpanded={props.onToggleItemExpanded}\n        />\n    );\n};\n","import React from 'react';\nimport ItemHeaderButton from '../Item/ItemHeaderButton';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport { colors } from '../../modules/colors';\n\nconst style = {\n    button: {\n        position: 'absolute',\n        top: '7px',\n        right: '7px',\n        zIndex: '1000',\n    },\n    icon: {\n        fill: colors.red,\n    },\n};\n\nconst DeleteItemHeaderButton = ({ onClick }) => (\n    <ItemHeaderButton onClick={onClick} style={style.button}>\n        <DeleteIcon style={style.icon} />\n    </ItemHeaderButton>\n);\n\nexport default DeleteItemHeaderButton;\n","import React from 'react';\nimport { colors } from '../modules/colors';\n\nexport const NoContentMessage = ({ text }) => (\n    <div\n        style={{\n            padding: '50px 10px',\n            textAlign: 'center',\n            fontSize: '15px',\n            fontWeight: 500,\n            color: colors.charcoalGrey,\n        }}\n    >\n        {text}\n    </div>\n);\n\nexport default NoContentMessage;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport debounce from 'lodash/debounce';\n\nconst defaultDebounceMs = 100;\nconst defaultBufferFactor = 0.25;\n\nclass ProgressiveLoadingContainer extends Component {\n    static propTypes = {\n        children: PropTypes.node.isRequired,\n        debounceMs: PropTypes.number,\n        bufferFactor: PropTypes.number,\n    };\n    static defaultProps = {\n        debounceMs: defaultDebounceMs,\n        bufferFactor: defaultBufferFactor,\n    };\n\n    state = {\n        shouldLoad: false,\n    };\n    containerRef = null;\n    shouldLoadHandler = null;\n\n    checkShouldLoad() {\n        const bufferPx = this.props.bufferFactor * window.innerHeight;\n\n        if (!this.containerRef) {\n            return;\n        }\n\n        const rect = this.containerRef.getBoundingClientRect();\n        if (\n            rect.bottom > -bufferPx &&\n            rect.top < window.innerHeight + bufferPx\n        ) {\n            this.setState({\n                shouldLoad: true,\n            });\n\n            this.removeHandler();\n        }\n    }\n\n    registerHandler() {\n        this.shouldLoadHandler = debounce(\n            () => this.checkShouldLoad(),\n            this.props.debounceMs\n        );\n\n        window.addEventListener('scroll', this.shouldLoadHandler);\n    }\n    removeHandler() {\n        window.removeEventListener('scroll', this.shouldLoadHandler);\n    }\n\n    componentDidMount() {\n        this.registerHandler();\n        this.checkShouldLoad();\n    }\n\n    componentWillUnmount() {\n        this.removeHandler();\n    }\n\n    render() {\n        const { children, debounceMs, bufferFactor, ...props } = this.props;\n        const { shouldLoad } = this.state;\n\n        return (\n            <div ref={ref => (this.containerRef = ref)} {...props}>\n                {shouldLoad && children}\n            </div>\n        );\n    }\n}\n\nexport default ProgressiveLoadingContainer;\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport i18n from '@dhis2/d2-i18n';\nimport ReactGridLayout from 'react-grid-layout';\nimport { CircularProgress, ScreenCover } from '@dhis2/ui-core';\n\nimport {\n    acUpdateDashboardLayout,\n    acRemoveDashboardItem,\n} from '../../actions/editDashboard';\nimport { Item } from '../Item/Item';\nimport { resize as pluginResize } from '../Item/VisualizationItem/plugin';\nimport { isPluginType } from '../../modules/itemTypes';\nimport {\n    GRID_ROW_HEIGHT,\n    GRID_COMPACT_TYPE,\n    ITEM_MIN_HEIGHT,\n    MARGIN,\n    getGridColumns,\n    hasShape,\n    onItemResize,\n} from './gridUtil';\nimport { orArray } from '../../modules/util';\nimport DeleteItemButton from './DeleteItemButton';\nimport NoContentMessage from '../../widgets/NoContentMessage';\n\nimport 'react-grid-layout/css/styles.css';\nimport 'react-resizable/css/styles.css';\n\nimport './ItemGrid.css';\nimport { sGetSelectedId, sGetSelectedIsLoading } from '../../reducers/selected';\nimport {\n    sGetEditDashboardRoot,\n    sGetEditDashboardItems,\n} from '../../reducers/editDashboard';\nimport {\n    sGetDashboardById,\n    sGetDashboardItems,\n} from '../../reducers/dashboards';\nimport ProgressiveLoadingContainer from '../Item/ProgressiveLoadingContainer';\n\n// Component\n\nconst EXPANDED_HEIGHT = 17;\n\nexport class ItemGrid extends Component {\n    state = {\n        expandedItems: {},\n    };\n\n    onToggleItemExpanded = clickedId => {\n        const isExpanded =\n            typeof this.state.expandedItems[clickedId] === 'boolean'\n                ? this.state.expandedItems[clickedId]\n                : false;\n\n        const expandedItems = { ...this.state.expandedItems };\n        expandedItems[clickedId] = !isExpanded;\n        this.setState({ expandedItems });\n    };\n\n    onRemoveItem = clickedId => {\n        this.props.acRemoveDashboardItem(clickedId);\n    };\n\n    componentWillReceiveProps(nextProps) {\n        if (nextProps.edit) {\n            this.setState({ expandedItems: {} });\n        }\n    }\n\n    onLayoutChange = newLayout => {\n        if (this.props.edit) {\n            this.props.acUpdateDashboardLayout(newLayout);\n        }\n    };\n\n    onResizeStop = (layout, oldItem, newItem) => {\n        onItemResize(newItem.i);\n\n        const dashboardItem = this.props.dashboardItems.find(\n            item => item.id === newItem.i\n        );\n\n        // call resize on the item component if it's a plugin type\n        if (dashboardItem && isPluginType(dashboardItem)) {\n            pluginResize(dashboardItem);\n        }\n    };\n\n    onRemoveItemWrapper = id => () => this.onRemoveItem(id);\n\n    render() {\n        const { edit, isLoading, dashboardItems } = this.props;\n\n        if (!isLoading && !dashboardItems.length) {\n            return (\n                <NoContentMessage\n                    text={i18n.t('There are no items on this dashboard')}\n                />\n            );\n        }\n\n        const items = dashboardItems.map(item => {\n            const expandedItem = this.state.expandedItems[item.id];\n            let hProp = { h: item.h };\n\n            if (expandedItem && expandedItem === true) {\n                hProp.h = item.h + EXPANDED_HEIGHT;\n            }\n\n            return Object.assign({}, item, hProp, {\n                i: item.id,\n                minH: ITEM_MIN_HEIGHT,\n            });\n        });\n\n        return (\n            <div className=\"grid-wrapper\">\n                {isLoading ? (\n                    <ScreenCover>\n                        <CircularProgress />\n                    </ScreenCover>\n                ) : null}\n                <ReactGridLayout\n                    onLayoutChange={this.onLayoutChange}\n                    onResizeStop={this.onResizeStop}\n                    className=\"layout\"\n                    layout={items}\n                    margin={MARGIN}\n                    cols={getGridColumns()}\n                    rowHeight={GRID_ROW_HEIGHT}\n                    width={window.innerWidth}\n                    compactType={GRID_COMPACT_TYPE}\n                    isDraggable={edit}\n                    isResizable={edit}\n                    draggableCancel=\"input,textarea\"\n                >\n                    {items.map(item => {\n                        const itemClassNames = [\n                            item.type,\n                            edit ? 'edit' : 'view',\n                        ].join(' ');\n\n                        return (\n                            <ProgressiveLoadingContainer\n                                key={item.i}\n                                className={itemClassNames}\n                            >\n                                {edit ? (\n                                    <DeleteItemButton\n                                        onClick={this.onRemoveItemWrapper(\n                                            item.id\n                                        )}\n                                    />\n                                ) : null}\n                                <Item\n                                    item={item}\n                                    editMode={edit}\n                                    onToggleItemExpanded={\n                                        this.onToggleItemExpanded\n                                    }\n                                />\n                            </ProgressiveLoadingContainer>\n                        );\n                    })}\n                </ReactGridLayout>\n            </div>\n        );\n    }\n}\n\nItemGrid.propTypes = {\n    dashboardItems: PropTypes.array,\n};\n\nItemGrid.defaultProps = {\n    dashboardItems: [],\n};\n\n// Container\n\nconst mapStateToProps = (state, ownProps) => {\n    const selectedDashboard = ownProps.edit\n        ? sGetEditDashboardRoot(state)\n        : sGetDashboardById(state, sGetSelectedId(state));\n\n    const dashboardItems = ownProps.edit\n        ? sGetEditDashboardItems(state)\n        : sGetDashboardItems(state);\n\n    return {\n        isLoading: sGetSelectedIsLoading(state) || !selectedDashboard,\n        dashboardItems,\n    };\n};\n\nconst mapDispatchToProps = {\n    acUpdateDashboardLayout,\n    acRemoveDashboardItem,\n};\n\nconst mergeProps = (stateProps, dispatchProps, ownProps) => {\n    const validItems = orArray(stateProps.dashboardItems).filter(hasShape);\n\n    return {\n        ...dispatchProps,\n        edit: ownProps.edit,\n        isLoading: stateProps.isLoading,\n        dashboardItems: validItems,\n        onItemResize,\n    };\n};\n\nexport default connect(\n    mapStateToProps,\n    mapDispatchToProps,\n    mergeProps\n)(ItemGrid);\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nimport i18n from '@dhis2/d2-i18n';\n\nimport { colors } from '../../modules/colors';\n\nconst styles = {\n    badgeContainer: {\n        margin: '2px',\n        padding: '0 16px',\n        borderRadius: '4px',\n        color: colors.white,\n        backgroundColor: '#212934',\n        height: 36,\n        display: 'flex',\n        alignItems: 'center',\n    },\n    badge: {\n        fontSize: '13px',\n        cursor: 'pointer',\n        whiteSpace: 'nowrap',\n    },\n    badgeRemove: {\n        fontSize: '12px',\n        textDecoration: 'underline',\n        marginLeft: '24px',\n        cursor: 'pointer',\n    },\n};\n\nclass FilterBadge extends Component {\n    onClick = id => () => this.props.onClick(id);\n    onRemove = id => () => this.props.onRemove(id);\n\n    render() {\n        const { data } = this.props;\n\n        return (\n            <div style={styles.badgeContainer}>\n                <span style={styles.badge} onClick={this.onClick(data.id)}>\n                    {`${data.name}: ${\n                        data.values.length > 1\n                            ? i18n.t('{{count}} selected', {\n                                  count: data.values.length,\n                              })\n                            : data.values[0].name\n                    }`}\n                </span>\n                <span\n                    style={styles.badgeRemove}\n                    onClick={this.onRemove(data.id)}\n                >\n                    {i18n.t('Remove')}\n                </span>\n            </div>\n        );\n    }\n}\n\nFilterBadge.propTypes = {\n    data: PropTypes.object.isRequired,\n    onClick: PropTypes.func.isRequired,\n    onRemove: PropTypes.func.isRequired,\n};\n\nFilterBadge.defaultProps = {\n    onClick: Function.prototype,\n    onRemove: Function.prototype,\n};\n\nexport default FilterBadge;\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { createSelector } from 'reselect';\nimport { withStyles } from '@material-ui/core/styles';\n\nimport { sGetDimensions } from '../../reducers/dimensions';\nimport { sGetItemFiltersRoot } from '../../reducers/itemFilters';\nimport { sGetControlBarUserRows } from '../../reducers/controlBar';\nimport { getTopOffset } from '../ControlBar/controlBarDimensions';\nimport { acRemoveItemFilter } from '../../actions/itemFilters';\nimport { acRemoveEditItemFilter } from '../../actions/editItemFilters';\nimport { acSetActiveModalDimension } from '../../actions/activeModalDimension';\n\nimport FilterBadge from './FilterBadge';\n\nconst styles = {\n    bar: {\n        position: 'sticky',\n        zIndex: 7,\n        padding: '8px 0',\n        display: 'flex',\n        justifyContent: 'center',\n        flexWrap: 'wrap',\n    },\n};\n\nexport class FilterBar extends Component {\n    onBadgeRemove = id => {\n        this.props.removeItemFilter(id);\n        this.props.removeEditItemFilter(id);\n    };\n\n    onBadgeClick = id => {\n        this.props.setActiveModalDimension({\n            id,\n            name: this.props.filters.find(item => item.id === id).name,\n        });\n    };\n\n    render() {\n        const { filters, userRows, classes } = this.props;\n        const top = getTopOffset(userRows) + 10;\n\n        return filters.length ? (\n            <div className={classes.bar} style={{ top }}>\n                {filters.map(filter => (\n                    <FilterBadge\n                        key={filter.id}\n                        data={filter}\n                        onClick={this.onBadgeClick}\n                        onRemove={this.onBadgeRemove}\n                    />\n                ))}\n            </div>\n        ) : null;\n    }\n}\n\nFilterBar.propTypes = {\n    filters: PropTypes.array.isRequired,\n    removeItemFilter: PropTypes.func.isRequired,\n    removeEditItemFilter: PropTypes.func.isRequired,\n};\n\nFilterBar.defaultProps = {\n    filters: [],\n    removeItemFIlter: Function.prototype,\n    removeEditItemFilter: Function.prototype,\n};\n\n// simplify the filters structure to:\n// [{ id: 'pe', name: 'Period', values: [{ id: 2019: name: '2019' }, {id: 'LAST_MONTH', name: 'Last month' }]}, ...]\nconst filtersSelector = createSelector(\n    [sGetItemFiltersRoot, sGetDimensions],\n    (filters, dimensions) =>\n        Object.keys(filters).reduce((arr, id) => {\n            arr.push({\n                id: id,\n                name: dimensions[id].name,\n                values: filters[id].map(value => ({\n                    id: value.id,\n                    name: value.displayName || value.name,\n                })),\n            });\n\n            return arr;\n        }, [])\n);\n\nconst mapStateToProps = state => ({\n    filters: filtersSelector(state),\n    userRows: sGetControlBarUserRows(state),\n});\n\nexport default connect(\n    mapStateToProps,\n    {\n        setActiveModalDimension: acSetActiveModalDimension,\n        removeItemFilter: acRemoveItemFilter,\n        removeEditItemFilter: acRemoveEditItemFilter,\n    }\n)(withStyles(styles)(FilterBar));\n","import React, { Fragment } from 'react';\nimport TitleBar from '../TitleBar/TitleBar';\nimport ItemGrid from '../ItemGrid/ItemGrid';\nimport FilterBar from '../FilterBar/FilterBar';\n\nexport const DashboardContent = props => (\n    <Fragment>\n        <TitleBar edit={props.editMode} />\n        <FilterBar />\n        <ItemGrid edit={props.editMode} />\n    </Fragment>\n);\n\nexport default DashboardContent;\n","import React, { Fragment } from 'react';\nimport { connect } from 'react-redux';\nimport isEmpty from 'lodash/isEmpty';\nimport i18n from '@dhis2/d2-i18n';\n\nimport {\n    sGetAllDashboards,\n    sDashboardsIsFetching,\n} from '../../reducers/dashboards';\nimport { sGetSelectedId } from '../../reducers/selected';\nimport DashboardsBar from '../ControlBar/DashboardsBar';\nimport DashboardVerticalOffset from './DashboardVerticalOffset';\nimport DashboardContent from './DashboardContent';\nimport NoContentMessage from '../../widgets/NoContentMessage';\n\nexport const Content = ({ hasDashboardContent, dashboardsIsEmpty }) => {\n    const msg = dashboardsIsEmpty\n        ? i18n.t(\n              'No dashboards found. Use the + button to create a new dashboard.'\n          )\n        : i18n.t('Requested dashboard not found');\n\n    return hasDashboardContent ? (\n        <DashboardContent editMode={false} />\n    ) : (\n        <NoContentMessage text={msg} />\n    );\n};\n\nexport const ViewDashboard = ({ id, dashboardsIsEmpty, dashboardsLoaded }) => {\n    const hasDashboardContent = id && !dashboardsIsEmpty;\n    const contentNotReady = !dashboardsLoaded || id === null;\n\n    return (\n        <Fragment>\n            <DashboardsBar />\n            <DashboardVerticalOffset />\n            <div className=\"dashboard-wrapper\">\n                {contentNotReady ? null : (\n                    <Content\n                        hasDashboardContent={hasDashboardContent}\n                        dashboardsIsEmpty={dashboardsIsEmpty}\n                    />\n                )}\n            </div>\n        </Fragment>\n    );\n};\n\nconst mapStateToProps = state => {\n    const dashboards = sGetAllDashboards(state);\n\n    return {\n        id: sGetSelectedId(state),\n        dashboardsIsEmpty: isEmpty(dashboards),\n        dashboardsLoaded: !sDashboardsIsFetching(state),\n    };\n};\n\nexport default connect(mapStateToProps)(ViewDashboard);\n","import React from 'react';\nimport i18n from '@dhis2/d2-i18n';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport { Button } from '@dhis2/ui-core';\n\nexport const ConfirmDeleteDialog = ({\n    dashboardName,\n    onDeleteConfirmed,\n    onContinueEditing,\n    open,\n}) => {\n    const actions = [\n        <Button key=\"cancel\" secondary onClick={onContinueEditing}>\n            {i18n.t('Cancel')}\n        </Button>,\n        <Button key=\"delete\" destructive onClick={onDeleteConfirmed}>\n            {i18n.t('Delete')}\n        </Button>,\n    ];\n\n    return (\n        <Dialog open={open} onClose={onContinueEditing}>\n            <DialogTitle style={{ fontSize: '1.25rem', fontWeight: '450' }}>\n                {i18n.t('Delete dashboard')}\n            </DialogTitle>\n            <DialogContent>\n                <DialogContentText style={{ fontSize: '0.875rem' }}>\n                    {i18n.t(\n                        'Deleting dashboard \"{{ dashboardName }}\" will remove it for all users. This action cannot be undone. Are you sure you want to permanently delete this dashboard?',\n                        { dashboardName }\n                    )}\n                </DialogContentText>\n            </DialogContent>\n            <DialogActions>{actions}</DialogActions>\n        </Dialog>\n    );\n};\n\nexport default ConfirmDeleteDialog;\n","import React, { Component, Fragment } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { Redirect } from 'react-router-dom';\nimport i18n from '@dhis2/d2-i18n';\nimport ControlBar from './ControlBar';\nimport TranslationDialog from '@dhis2/d2-ui-translation-dialog';\nimport { Button } from '@dhis2/ui-core';\n\nimport ConfirmDeleteDialog from './ConfirmDeleteDialog';\nimport {\n    tSaveDashboard,\n    acClearEditDashboard,\n} from '../../actions/editDashboard';\nimport {\n    tDeleteDashboard,\n    acSetDashboardDisplayName,\n} from '../../actions/dashboards';\nimport {\n    sGetEditDashboardRoot,\n    sGetIsNewDashboard,\n} from '../../reducers/editDashboard';\nimport {\n    CONTROL_BAR_ROW_HEIGHT,\n    MIN_ROW_COUNT,\n    getControlBarHeight,\n} from './controlBarDimensions';\nimport { apiFetchDashboard } from '../../api/dashboards';\n\nimport classes from './styles/DashboardsBar.module.css';\n\nconst buttonBarStyle = {\n    height: CONTROL_BAR_ROW_HEIGHT,\n    paddingTop: '15px',\n    marginLeft: '15px',\n    marginRight: '15px',\n};\n\nexport class EditBar extends Component {\n    state = {\n        translationDialogIsOpen: false,\n        dashboardModel: undefined,\n        confirmDeleteDialogOpen: false,\n        redirectUrl: undefined,\n    };\n\n    onConfirmDelete = () => {\n        this.setState({ confirmDeleteDialogOpen: true });\n    };\n\n    onSave = () => {\n        this.props.onSave().then(newId => {\n            this.setState({ redirectUrl: `/${newId}` });\n        });\n    };\n\n    onDiscard = () => {\n        this.props.onDiscardChanges();\n        const redirectUrl = this.props.dashboardId\n            ? `/${this.props.dashboardId}`\n            : '/';\n        this.setState({ redirectUrl });\n    };\n\n    onContinueEditing = () => {\n        this.setState({ confirmDeleteDialogOpen: false });\n    };\n\n    onDeleteConfirmed = () => {\n        this.setState({ confirmDeleteDialogOpen: false });\n        this.props.onDelete(this.props.dashboardId).then(() => {\n            this.setState({ redirectUrl: '/' });\n        });\n    };\n\n    onTranslationsSaved = async translations => {\n        if (translations && translations.length) {\n            const dbLocale = await this.context.d2.currentUser.userSettings.get(\n                'keyDbLocale'\n            );\n\n            const translation = translations.find(\n                t => t.locale === dbLocale && t.property === 'NAME'\n            );\n\n            if (translation && translation.value) {\n                this.props.onTranslate(\n                    this.props.dashboardId,\n                    translation.value\n                );\n            }\n        }\n    };\n\n    fetchDashboardModel = () => {\n        if (this.props.dashboardId && !this.state.dashboardModel) {\n            apiFetchDashboard(this.props.dashboardId).then(dashboardModel =>\n                this.setState({ dashboardModel })\n            );\n        }\n    };\n\n    componentDidMount() {\n        this.fetchDashboardModel();\n    }\n\n    componentDidUpdate() {\n        this.fetchDashboardModel();\n    }\n\n    toggleTranslationDialog = () => {\n        this.setState({\n            translationDialogIsOpen: !this.state.translationDialogIsOpen,\n        });\n    };\n\n    confirmDeleteDialog = () =>\n        this.props.deleteAccess && this.props.dashboardId ? (\n            <ConfirmDeleteDialog\n                dashboardName={this.props.dashboardName}\n                onDeleteConfirmed={this.onDeleteConfirmed}\n                onContinueEditing={this.onContinueEditing}\n                open={this.state.confirmDeleteDialogOpen}\n            />\n        ) : null;\n\n    translationDialog = () =>\n        this.state.dashboardModel && this.state.dashboardModel.id ? (\n            <TranslationDialog\n                className=\"translation-dialog\"\n                d2={this.context.d2}\n                open={this.state.translationDialogIsOpen}\n                onRequestClose={this.toggleTranslationDialog}\n                objectToTranslate={this.state.dashboardModel}\n                fieldsToTranslate={['name', 'description']}\n                // TODO handle messages in snackbar\n                onTranslationSaved={this.onTranslationsSaved}\n                onTranslationError={err =>\n                    console.log('translation update error', err)\n                }\n            />\n        ) : null;\n\n    render() {\n        if (this.state.redirectUrl) {\n            return <Redirect to={this.state.redirectUrl} />;\n        }\n\n        const { dashboardId, deleteAccess, updateAccess } = this.props;\n        const controlBarHeight = getControlBarHeight(MIN_ROW_COUNT);\n\n        const discardBtnText = updateAccess\n            ? i18n.t('Exit without saving')\n            : i18n.t('Go to dashboards');\n\n        return (\n            <Fragment>\n                <ControlBar height={controlBarHeight} editMode={true}>\n                    <div style={buttonBarStyle}>\n                        {updateAccess ? (\n                            <div className={classes.leftControls}>\n                                <span style={{ marginRight: '15px' }}>\n                                    <Button primary onClick={this.onSave}>\n                                        {i18n.t('Save changes')}\n                                    </Button>\n                                </span>\n\n                                {dashboardId ? (\n                                    <span style={{ marginRight: '15px' }}>\n                                        <Button\n                                            onClick={\n                                                this.toggleTranslationDialog\n                                            }\n                                        >\n                                            {i18n.t('Translate')}\n                                        </Button>\n                                    </span>\n                                ) : null}\n                                {dashboardId && deleteAccess ? (\n                                    <Button onClick={this.onConfirmDelete}>\n                                        {i18n.t('Delete')}\n                                    </Button>\n                                ) : null}\n                            </div>\n                        ) : null}\n\n                        <div className={classes.rightControls}>\n                            <Button secondary onClick={this.onDiscard}>\n                                {discardBtnText}\n                            </Button>\n                        </div>\n                    </div>\n                </ControlBar>\n                {this.translationDialog()}\n                {this.confirmDeleteDialog()}\n            </Fragment>\n        );\n    }\n}\n\nEditBar.contextTypes = {\n    d2: PropTypes.object,\n};\n\nconst mapStateToProps = state => {\n    const dashboard = sGetEditDashboardRoot(state);\n\n    let deleteAccess;\n    let updateAccess;\n    if (sGetIsNewDashboard(state)) {\n        deleteAccess = true;\n        updateAccess = true;\n    } else {\n        updateAccess = dashboard.access ? dashboard.access.update : false;\n        deleteAccess = dashboard.access ? dashboard.access.delete : false;\n    }\n\n    return {\n        dashboardId: dashboard.id,\n        dashboardName: dashboard.name,\n        deleteAccess,\n        updateAccess,\n    };\n};\n\nconst mapDispatchToProps = dispatch => ({\n    onSave: () => dispatch(tSaveDashboard()).then(id => id),\n    onDelete: id => dispatch(tDeleteDashboard(id)),\n    onDiscardChanges: () => dispatch(acClearEditDashboard()),\n    onTranslate: (id, value) => dispatch(acSetDashboardDisplayName(id, value)),\n});\n\nexport default connect(\n    mapStateToProps,\n    mapDispatchToProps\n)(EditBar);\n","import React, { Fragment, Component } from 'react';\nimport { connect } from 'react-redux';\nimport i18n from '@dhis2/d2-i18n';\n\nimport { acSetEditDashboard } from '../../actions/editDashboard';\nimport { sGetSelectedId } from '../../reducers/selected';\nimport {\n    sGetDashboardById,\n    sGetDashboardItems,\n    sDashboardsIsFetching,\n} from '../../reducers/dashboards';\nimport DashboardVerticalOffset from './DashboardVerticalOffset';\nimport DashboardContent from './DashboardContent';\nimport EditBar from '../ControlBar/EditBar';\nimport NoContentMessage from '../../widgets/NoContentMessage';\n\nexport const Content = ({ updateAccess }) => {\n    return updateAccess ? (\n        <DashboardContent editMode={true} />\n    ) : (\n        <NoContentMessage text={i18n.t('No access')} />\n    );\n};\nexport class EditDashboard extends Component {\n    state = {\n        initialized: false,\n    };\n\n    initEditDashboard = () => {\n        if (this.props.dashboard) {\n            this.setState({ initialized: true });\n            this.props.setEditDashboard(this.props.dashboard, this.props.items);\n        }\n    };\n\n    componentDidMount() {\n        this.initEditDashboard();\n    }\n\n    componentDidUpdate() {\n        if (!this.state.initialized) {\n            this.initEditDashboard();\n        }\n    }\n\n    getDashboardContent = () => {\n        const contentNotReady =\n            !this.props.dashboardsLoaded || this.props.id === null;\n\n        return (\n            <div className=\"dashboard-wrapper\">\n                {contentNotReady ? null : (\n                    <Content updateAccess={this.props.updateAccess} />\n                )}\n            </div>\n        );\n    };\n\n    render() {\n        return (\n            <Fragment>\n                <EditBar />\n                <DashboardVerticalOffset editMode={true} />\n                {this.getDashboardContent()}\n            </Fragment>\n        );\n    }\n}\n\nconst mapStateToProps = state => {\n    const id = sGetSelectedId(state);\n    const dashboard = id ? sGetDashboardById(state, id) : null;\n\n    const updateAccess =\n        dashboard && dashboard.access ? dashboard.access.update : false;\n\n    return {\n        dashboard,\n        id,\n        updateAccess,\n        items: sGetDashboardItems(state),\n        dashboardsLoaded: !sDashboardsIsFetching(state),\n    };\n};\n\nexport default connect(\n    mapStateToProps,\n    {\n        setEditDashboard: acSetEditDashboard,\n    }\n)(EditDashboard);\n","import React, { Component, Fragment } from 'react';\nimport { connect } from 'react-redux';\n\nimport { acSetEditNewDashboard } from '../../actions/editDashboard';\nimport DashboardVerticalOffset from './DashboardVerticalOffset';\nimport EditBar from '../ControlBar/EditBar';\nimport DashboardContent from './DashboardContent';\n\nclass NewDashboard extends Component {\n    componentDidMount() {\n        this.props.setNewDashboard();\n    }\n\n    render() {\n        return (\n            <Fragment>\n                <EditBar />\n                <DashboardVerticalOffset editMode={true} />\n                <div className=\"dashboard-wrapper\">\n                    <DashboardContent editMode={true} />\n                </div>\n            </Fragment>\n        );\n    }\n}\n\nexport default connect(\n    null,\n    {\n        setNewDashboard: acSetEditNewDashboard,\n    }\n)(NewDashboard);\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\n\nimport { tSelectDashboard } from '../../actions/dashboards';\nimport { sDashboardsIsFetching } from '../../reducers/dashboards';\nimport { EDIT, NEW } from './dashboardModes';\nimport ViewDashboard from './ViewDashboard';\nimport EditDashboard from './EditDashboard';\nimport NewDashboard from './NewDashboard';\n\nclass Dashboard extends Component {\n    setDashboard = () => {\n        if (this.props.dashboardsLoaded) {\n            const id = this.props.match.params.dashboardId || null;\n\n            this.props.selectDashboard(id);\n\n            this.scrollToTop();\n        }\n    };\n\n    scrollToTop = () => {\n        window.scrollTo(0, 0);\n    };\n\n    componentDidMount() {\n        this.setDashboard();\n    }\n\n    componentDidUpdate() {\n        this.setDashboard();\n    }\n\n    render() {\n        switch (this.props.mode) {\n            case EDIT:\n                return <EditDashboard />;\n            case NEW:\n                return <NewDashboard />;\n            default:\n                return <ViewDashboard />;\n        }\n    }\n}\n\nconst mapStateToProps = state => {\n    return { dashboardsLoaded: !sDashboardsIsFetching(state) };\n};\n\nexport default connect(\n    mapStateToProps,\n    {\n        selectDashboard: tSelectDashboard,\n    }\n)(Dashboard);\n","export const EDIT = 'edit';\nexport const NEW = 'new';\nexport const VIEW = 'view';\n","import React, { Component } from 'react';\nimport { HashRouter as Router, Route, Switch } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport i18n from '@dhis2/d2-i18n';\nimport HeaderBar from '@dhis2/ui/widgets/HeaderBar';\n\nimport { EDIT, VIEW, NEW } from './Dashboard/dashboardModes';\nimport { acReceivedUser } from '../actions/user';\nimport { tFetchDashboards } from '../actions/dashboards';\nimport { tSetControlBarRows } from '../actions/controlBar';\nimport { tSetDimensions } from '../actions/dimensions';\nimport Dashboard from './Dashboard/Dashboard';\nimport SnackbarMessage from './SnackbarMessage/SnackbarMessage';\n\nimport 'typeface-roboto';\nimport './App.css';\n\nexport class App extends Component {\n    componentDidMount() {\n        this.props.setCurrentUser(this.props.d2.currentUser);\n        this.props.fetchDashboards();\n        this.props.setControlBarRows();\n        this.props.setDimensions(this.props.d2);\n    }\n\n    getChildContext() {\n        return { baseUrl: this.props.baseUrl, i18n, d2: this.props.d2 };\n    }\n\n    render() {\n        return (\n            <div className=\"app-wrapper\">\n                <div className=\"dashboard-header-bar\">\n                    <HeaderBar appName={i18n.t('Dashboard')} />\n                </div>\n                <Router>\n                    <Switch>\n                        <Route\n                            exact\n                            path=\"/\"\n                            render={props => (\n                                <Dashboard {...props} mode={VIEW} />\n                            )}\n                        />\n                        <Route\n                            exact\n                            path=\"/new\"\n                            render={props => (\n                                <Dashboard {...props} mode={NEW} />\n                            )}\n                        />\n                        <Route\n                            exact\n                            path=\"/:dashboardId\"\n                            render={props => (\n                                <Dashboard {...props} mode={VIEW} />\n                            )}\n                        />\n                        <Route\n                            exact\n                            path=\"/:dashboardId/edit\"\n                            render={props => (\n                                <Dashboard {...props} mode={EDIT} />\n                            )}\n                        />\n                    </Switch>\n                </Router>\n                <SnackbarMessage />\n            </div>\n        );\n    }\n}\n\nApp.childContextTypes = {\n    baseUrl: PropTypes.string,\n    i18n: PropTypes.object,\n    d2: PropTypes.object,\n};\n\nconst mapDispatchToProps = dispatch => {\n    return {\n        setCurrentUser: currentUser => dispatch(acReceivedUser(currentUser)),\n        fetchDashboards: () => dispatch(tFetchDashboards()),\n        setControlBarRows: () => dispatch(tSetControlBarRows()),\n        setDimensions: d2 => dispatch(tSetDimensions(d2)),\n    };\n};\n\nexport default connect(\n    null,\n    mapDispatchToProps\n)(App);\n","import { RECEIVED_USER } from '../reducers/user';\n\nexport const acReceivedUser = value => ({\n    type: RECEIVED_USER,\n    value,\n});\n","//------------------------------------------------------------------------------\n// <auto-generated>\n// This code was generated by d2-i18n-generate.\n//\n// Changes to this file may cause incorrect behavior and will be lost if\n// the code is regenerated.\n// </auto-generated>\n//------------------------------------------------------------------------------\nimport i18n from '@dhis2/d2-i18n';\nimport moment from 'moment';\nimport 'moment/locale/lo';\nimport 'moment/locale/sv';\nimport 'moment/locale/ur';\nimport 'moment/locale/vi';\n\nimport enTranslations from './en/translations.json';\nimport loTranslations from './lo/translations.json';\nimport svTranslations from './sv/translations.json';\nimport urTranslations from './ur/translations.json';\nimport viTranslations from './vi/translations.json';\n\nconst namespace = 'dashboards-app';\nmoment.locale('en');\n\ni18n.addResources('en', namespace, enTranslations);\ni18n.addResources('lo', namespace, loTranslations);\ni18n.addResources('sv', namespace, svTranslations);\ni18n.addResources('ur', namespace, urTranslations);\ni18n.addResources('vi', namespace, viTranslations);\n\ni18n.setDefaultNamespace(namespace);\ni18n.changeLanguage('en');\n\nexport default i18n;\n","/** @module reducers/selected */\nimport { validateReducer } from '../modules/util';\n\nexport const SET_STYLE = 'SET_STYLE';\n\nexport const DEFAULT_STATE_STYLE = 'LIST';\n\n/**\n * Reducer functions that computes and returns the new state based on the given action\n * @function\n * @param {Object} state The current state\n * @param {Object} action The action to be evaluated\n */\nconst style = (state = DEFAULT_STATE_STYLE, action) => {\n    switch (action.type) {\n        case SET_STYLE:\n            return validateReducer(action.value, DEFAULT_STATE_STYLE);\n        default:\n            return state;\n    }\n};\n\nexport default style;\n\n/**\n * Selectors that point to specific props in the state object\n * @function\n * @param {Object} state\n * @returns {Object}\n */\nexport const sGetStyleRoot = state => state.style;\n","import { combineReducers } from 'redux';\nimport arraySort from 'd2-utilizr/lib/arraySort';\n\nimport dashboards, { sGetDashboardsRoot } from './dashboards';\nimport selected from './selected';\nimport dashboardsFilter, {\n    ownerData,\n    sGetFilterName,\n    sGetFilterOrder,\n    sGetFilterOwner,\n} from './dashboardsFilter';\nimport controlBar from './controlBar';\nimport visualizations from './visualizations';\nimport editDashboard from './editDashboard';\nimport messages from './messages';\nimport user from './user';\nimport snackbar from './snackbar';\nimport itemFilters from './itemFilters';\nimport editItemFilters from './editItemFilters';\nimport style from './style';\nimport dimensions from './dimensions';\nimport settings from './settings';\nimport activeModalDimension from './activeModalDimension';\n\nconst USER = 'system';\n\n// Reducers\n\nexport default combineReducers({\n    dashboards,\n    selected,\n    dashboardsFilter,\n    controlBar,\n    visualizations,\n    messages,\n    user,\n    editDashboard,\n    itemFilters,\n    editItemFilters,\n    style,\n    snackbar,\n    dimensions,\n    settings,\n    activeModalDimension,\n});\n\n// Map constants to data\nconst mapConstToData = {\n    NAME: 'name',\n    ITEMS: 'numberOfItems',\n    CREATED: 'created',\n    OWNER: 'owner',\n};\n\n// Selectors\n\n// Filter dashboards by name\nexport const sFilterDashboardsByName = (dashboards, filter) =>\n    dashboards.filter(d =>\n        d.displayName.toLowerCase().includes(filter.toLowerCase())\n    );\n\n// Filter dashboards by owner, TODO FIXME\nexport const sFilterDashboardsByOwner = (dashboards, filter) => {\n    const ME = ownerData[1]; // TODO\n    const OTHERS = ownerData[2]; // TODO\n\n    switch (filter) {\n        case ME:\n            return dashboards.filter(d => d.owner === USER);\n        case OTHERS:\n            return dashboards.filter(d => d.owner !== USER);\n        default:\n            return dashboards;\n    }\n};\n\n// Filter dashboards by order\nexport const sFilterDashboardsByOrder = (dashboards, filter) => {\n    const filterValues = filter.split(':');\n\n    const key = filterValues[0];\n    const direction = filterValues[1];\n\n    return arraySort(dashboards, direction, mapConstToData[key]);\n};\n\n// Selectors dependency level 2\n\n// Get filtered dashboards\nexport const sGetFilteredDashboards = state => {\n    const dashboards = sGetDashboardsRoot(state);\n\n    const nameFilter = sGetFilterName(state);\n    const ownerFilter = sGetFilterOwner(state);\n    const orderFilter = sGetFilterOrder(state);\n\n    return sFilterDashboardsByOrder(\n        sFilterDashboardsByName(\n            sFilterDashboardsByOwner(dashboards, ownerFilter),\n            nameFilter\n        ),\n        orderFilter\n    );\n};\n","import { createStore, applyMiddleware, compose } from 'redux';\nimport { createLogger } from 'redux-logger';\nimport thunk from 'redux-thunk';\nimport reducer from './reducers';\n\nconst configureStore = () => {\n    const middleware = [thunk];\n\n    // Enable Redux devtools if extension is installed instead of redux-logger\n    const composeEnhancers =\n        window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\n    if (\n        !window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ &&\n        process.env.NODE_ENV !== 'production'\n    ) {\n        middleware.push(createLogger());\n    }\n\n    return createStore(\n        reducer,\n        composeEnhancers(applyMiddleware(...middleware))\n    );\n};\n\nexport default configureStore;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport { MuiThemeProvider, createMuiTheme } from '@material-ui/core/styles';\nimport { init as d2Init, config, getManifest, getUserSettings } from 'd2';\nimport dhis2theme from '@dhis2/d2-ui-core/theme/mui3.theme';\nimport { colors } from '@dhis2/ui-core';\n\n// temporary workaround until new ui headerbar is ready\nimport 'material-design-icons/iconfont/material-icons.css';\nimport './reset.css';\n\nimport App from './components/App';\nimport './index.css';\nimport i18n from './locales';\nimport configureStore from './configureStore';\n\n// small workaround until ui-core textarea is ready\ndhis2theme.palette.primary.dark = colors.teal600;\n\nconst muiTheme = () => createMuiTheme(dhis2theme);\n\nconst configI18n = userSettings => {\n    const uiLocale = userSettings.keyUiLocale;\n\n    if (uiLocale && uiLocale !== 'en') {\n        config.i18n.sources.add(`./i18n/i18n_module_${uiLocale}.properties`);\n    }\n\n    config.i18n.sources.add('./i18n/i18n_module_en.properties');\n    i18n.changeLanguage(uiLocale);\n};\n\nconst init = async () => {\n    const manifest = await getManifest('./manifest.webapp');\n\n    // log app info\n    console.info(\n        `Dashboards app, v${manifest.version}, ${\n            manifest.manifest_generated_at\n        }`\n    );\n\n    const isProd = process.env.NODE_ENV === 'production';\n\n    if (\n        !isProd &&\n        (!process.env.REACT_APP_DHIS2_BASE_URL ||\n            !process.env.REACT_APP_DHIS2_AUTHORIZATION)\n    ) {\n        throw new Error(\n            'Missing env variables REACT_APP_DHIS2_BASE_URL and REACT_APP_DHIS2_AUTHORIZATION'\n        );\n    }\n\n    // api config\n    const baseUrl = isProd\n        ? manifest.activities.dhis.href\n        : process.env.REACT_APP_DHIS2_BASE_URL;\n    const authorization = process.env.REACT_APP_DHIS2_AUTHORIZATION;\n\n    config.baseUrl = `${baseUrl}/api/${manifest.dhis2.apiVersion}`;\n    config.headers = isProd ? null : { Authorization: authorization };\n    config.schemas = [\n        'chart',\n        'map',\n        'report',\n        'reportTable',\n        'eventChart',\n        'eventReport',\n        'dashboard',\n        'organisationUnit',\n        'userGroup',\n    ];\n\n    getUserSettings()\n        .then(configI18n)\n        .then(() => d2Init(config))\n        .then(initializedD2 => {\n            ReactDOM.render(\n                <Provider store={configureStore()}>\n                    <MuiThemeProvider theme={muiTheme()}>\n                        <App baseUrl={baseUrl} d2={initializedD2} />\n                    </MuiThemeProvider>\n                </Provider>,\n                document.getElementById('root')\n            );\n        });\n};\n\ninit();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"leftControls\":\"DashboardsBar_leftControls__2kr14\",\"rightControls\":\"DashboardsBar_rightControls__2l1lT\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"menuItem\":\"ContentMenuItem_menuItem__2DIcB\",\"launchLink\":\"ContentMenuItem_launchLink__MRANR\",\"label\":\"ContentMenuItem_label__2pIfq\",\"buttonInsert\":\"ContentMenuItem_buttonInsert__1GlZy\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"ControlBar_root__3LaTt\",\"content\":\"ControlBar_content__1r98-\",\"draghandle\":\"ControlBar_draghandle__1VWa0\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"ClearButton_button__2yjcV\",\"icon\":\"ClearButton_icon__1fqj8\"};","import i18n from '@dhis2/d2-i18n';\nimport TableIcon from '@material-ui/icons/ViewList';\nimport ChartIcon from '@material-ui/icons/InsertChart';\nimport MapIcon from '@material-ui/icons/Public';\nimport ExtensionIcon from '@material-ui/icons/Extension';\nimport DescriptionIcon from '@material-ui/icons/Description';\nimport PersonIcon from '@material-ui/icons/Person';\nimport FontDownloadIcon from '@material-ui/icons/FontDownload';\nimport EmailIcon from '@material-ui/icons/Email';\nimport CropFreeIcon from '@material-ui/icons/CropFree';\nimport NotInterestedIcon from '@material-ui/icons/NotInterested';\n\nimport { getBaseUrl } from './util';\n\n// Item types\nexport const REPORT_TABLE = 'REPORT_TABLE';\nexport const CHART = 'CHART';\nexport const MAP = 'MAP';\nexport const EVENT_REPORT = 'EVENT_REPORT';\nexport const EVENT_CHART = 'EVENT_CHART';\nexport const APP = 'APP';\nexport const REPORTS = 'REPORTS';\nexport const RESOURCES = 'RESOURCES';\nexport const USERS = 'USERS';\nexport const MESSAGES = 'MESSAGES';\nexport const TEXT = 'TEXT';\nexport const SPACER = 'SPACER';\n\n// Domain types\nexport const DOMAIN_TYPE_AGGREGATE = 'AGGREGATE';\nexport const DOMAIN_TYPE_TRACKER = 'TRACKER';\n\n// Visualization types\nexport const VISUALIZATION_TYPE_TABLE = 'TABLE';\nexport const VISUALIZATION_TYPE_CHART = 'CHART';\nexport const VISUALIZATION_TYPE_MAP = 'MAP';\n\nexport const spacerContent = 'SPACER_ITEM_FOR_DASHBOARD_LAYOUT_CONVENIENCE';\nexport const emptyTextItemContent = 'TEXT_ITEM_WITH_NO_CONTENT';\nexport const isSpacerType = item =>\n    item.type === TEXT && item.text === spacerContent;\nexport const isTextType = item =>\n    item.type === TEXT && item.text !== spacerContent;\nexport const isPluginType = item =>\n    itemTypeMap[item.type].hasOwnProperty('plugin');\n\nexport const getPlugin = type => {\n    const pluginName = itemTypeMap[type].plugin;\n\n    if (type === CHART) {\n        return true;\n    }\n\n    return global[pluginName];\n};\n\n// Item type map\nexport const itemTypeMap = {\n    [REPORT_TABLE]: {\n        id: REPORT_TABLE,\n        endPointName: 'reportTables',\n        propName: 'reportTable',\n        countName: 'reportTableCount',\n        pluralTitle: i18n.t('Pivot tables'),\n        plugin: 'reportTablePlugin',\n        domainType: DOMAIN_TYPE_AGGREGATE,\n        visualizationType: VISUALIZATION_TYPE_TABLE,\n        appUrl: id => `dhis-web-pivot/?id=${id}`,\n        appName: i18n.t('Pivot Tables'),\n    },\n    [CHART]: {\n        id: CHART,\n        endPointName: 'charts',\n        propName: 'chart',\n        countName: 'chartCount',\n        pluralTitle: i18n.t('Charts'),\n        plugin: 'chartPlugin',\n        domainType: DOMAIN_TYPE_AGGREGATE,\n        visualizationType: VISUALIZATION_TYPE_CHART,\n        appUrl: id => `dhis-web-data-visualizer/#/${id}`,\n        appName: i18n.t('Visualizer'),\n    },\n    [MAP]: {\n        id: MAP,\n        endPointName: 'maps',\n        propName: 'map',\n        countName: 'mapCount',\n        pluralTitle: i18n.t('Maps'),\n        plugin: 'mapPlugin',\n        domainType: DOMAIN_TYPE_AGGREGATE,\n        visualizationType: VISUALIZATION_TYPE_MAP,\n        appUrl: id => `dhis-web-maps/?id=${id}`,\n        appName: i18n.t('Maps'),\n    },\n    [EVENT_REPORT]: {\n        id: EVENT_REPORT,\n        endPointName: 'eventReports',\n        propName: 'eventReport',\n        countName: 'eventReportCount',\n        pluralTitle: i18n.t('Event reports'),\n        plugin: 'eventReportPlugin',\n        domainType: DOMAIN_TYPE_TRACKER,\n        visualizationType: VISUALIZATION_TYPE_TABLE,\n        appUrl: id => `dhis-web-event-reports/?id=${id}`,\n        appName: i18n.t('Event Reports'),\n    },\n    [EVENT_CHART]: {\n        id: EVENT_CHART,\n        endPointName: 'eventCharts',\n        propName: 'eventChart',\n        countName: 'eventChartCount',\n        pluralTitle: i18n.t('Event charts'),\n        plugin: 'eventChartPlugin',\n        domainType: DOMAIN_TYPE_TRACKER,\n        visualizationType: VISUALIZATION_TYPE_CHART,\n        appUrl: id => `dhis-web-event-visualizer/?id=${id}`,\n        appName: i18n.t('Event Visualizer'),\n    },\n    [APP]: {\n        endPointName: 'apps',\n        propName: 'appKey',\n        countName: 'appCount',\n        pluralTitle: 'Apps',\n    },\n    [REPORTS]: {\n        id: REPORTS,\n        endPointName: 'reports',\n        propName: 'reports',\n        countName: 'reportCount',\n        pluralTitle: i18n.t('Reports'),\n        appUrl: id =>\n            `dhis-web-reporting/getReportParams.action?mode=report&uid=${id}`,\n    },\n    [RESOURCES]: {\n        id: RESOURCES,\n        endPointName: 'resources',\n        propName: 'resources',\n        countName: 'resourceCount',\n        pluralTitle: i18n.t('Resources'),\n        appUrl: id => `api/documents/${id}/data`,\n    },\n    [USERS]: {\n        id: USERS,\n        endPointName: 'users',\n        propName: 'users',\n        countName: 'userCount',\n        pluralTitle: i18n.t('Users'),\n        appUrl: id => `dhis-web-dashboard-integration/profile.action?id=${id}`,\n    },\n    [TEXT]: {\n        id: TEXT,\n        propName: 'text',\n    },\n    [MESSAGES]: {\n        propName: 'messages',\n    },\n    [SPACER]: {\n        propName: 'text',\n    },\n};\n\nexport const getItemUrl = (type, item, d2) => {\n    let url;\n\n    if (type === APP) {\n        url = item.launchUrl;\n    }\n\n    if (itemTypeMap[type] && itemTypeMap[type].appUrl) {\n        url = `${getBaseUrl(d2)}/${itemTypeMap[type].appUrl(item.id)}`;\n    }\n\n    return url;\n};\n\nexport const getItemIcon = type => {\n    switch (type) {\n        case REPORT_TABLE:\n        case EVENT_REPORT:\n        case REPORTS:\n            return TableIcon;\n        case CHART:\n        case EVENT_CHART:\n            return ChartIcon;\n        case MAP:\n            return MapIcon;\n        case APP:\n            return ExtensionIcon;\n        case RESOURCES:\n            return DescriptionIcon;\n        case USERS:\n            return PersonIcon;\n        case TEXT:\n            return FontDownloadIcon;\n        case MESSAGES:\n            return EmailIcon;\n        case SPACER:\n            return CropFreeIcon;\n        default:\n            return NotInterestedIcon;\n    }\n};\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"showMoreButton\":\"CategorizedMenuGroup_showMoreButton__3-0Wa\"};"],"sourceRoot":""}
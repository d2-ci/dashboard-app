{"version":3,"sources":["D2App/components/ItemFilter/styles/FilterSelector.module.css","D2App/components/TitleBar/styles/ViewTitleBar.module.css","D2App/components/Item/VisualizationItem/Visualization/styles/NoVisualizationMessage.module.css","D2App/components/Item/VisualizationItem/Visualization/styles/LoadingMask.module.css","D2App/components/Item/VisualizationItem/styles/FatalErrorBoundary.module.css","D2App/components/Item/ItemHeader/styles/DeleteItemButton.module.css","D2App/components/Item/ItemHeader/styles/PrintItemInfo.module.css","D2App/components/Item/VisualizationItem/styles/ItemFooter.module.css","D2App/components/Item/ListItem/Item.module.css","D2App/components/Item/PrintTitlePageItem/styles/Item.module.css","D2App/components/FilterBar/styles/FilterBar.module.css","D2App/components/ItemSelector/styles/HeaderMenuItem.module.css","D2App/components/ItemSelector/styles/ContentMenuItem.module.css","D2App/components/ItemSelector/styles/CategorizedMenuGroup.module.css","D2App/components/ItemSelector/styles/ItemSelector.module.css","D2App/components/TitleBar/styles/EditTitleBar.module.css","D2App/components/ControlBar/styles/ConfirmDeleteDialog.module.css","D2App/components/ControlBar/styles/EditBar.module.css","D2App/components/Dashboard/styles/NotSupportedNotice.module.css","D2App/components/Dashboard/styles/PrintInfo.module.css","D2App/components/Dashboard/styles/PrintActionsBar.module.css","D2App/components/Dashboard/styles/PrintLayoutDashboard.module.css","D2App/components/Dashboard/styles/PrintDashboard.module.css","D2App/components/WindowDimensionsProvider.js","D2App/components/ControlBar/ControlBar.js","D2App/icons/Star.js","D2App/api/dataStatistics.js","D2App/components/ControlBar/DashboardItemChip.js","D2App/icons/AddCircle.js","D2App/icons/Search.js","D2App/icons/Clear.js","D2App/components/ControlBar/ClearButton.js","D2App/reducers/dashboardsFilter.js","D2App/modules/isSmallScreen.js","D2App/components/ControlBar/Filter.js","D2App/actions/dashboardsFilter.js","D2App/components/ControlBar/assets/icons.js","D2App/components/ControlBar/ShowMoreButton.js","D2App/components/ControlBar/controlBarDimensions.js","D2App/reducers/controlBar.js","D2App/modules/uiBackendItemConverter.js","D2App/reducers/dashboards.js","D2App/reducers/selected.js","D2App/api/userDataStore.js","D2App/api/controlBar.js","D2App/actions/controlBar.js","D2App/components/ControlBar/DashboardsBar.js","D2App/widgets/NoContentMessage.js","D2App/components/Item/VisualizationItem/assets/icons.js","D2App/reducers/user.js","D2App/reducers/dimensions.js","D2App/reducers/itemFilters.js","D2App/actions/itemFilters.js","D2App/reducers/messages.js","D2App/api/messages.js","D2App/components/Item/MessagesItem/actions.js","D2App/reducers/alert.js","D2App/actions/alert.js","D2App/reducers/visualizations.js","D2App/actions/visualizations.js","D2App/api/metadata.js","D2App/api/index.js","D2App/api/dashboards.js","D2App/api/description.js","D2App/actions/selected.js","D2App/api/localStorage.js","D2App/actions/dashboards.js","D2App/components/ItemFilter/FilterDialog.js","D2App/reducers/settings.js","D2App/reducers/activeModalDimension.js","D2App/actions/activeModalDimension.js","D2App/components/ItemFilter/FilterSelector.js","D2App/components/TitleBar/ViewTitleBar.js","D2App/reducers/editDashboard.js","D2App/api/editDashboard.js","D2App/actions/editDashboard.js","D2App/components/Item/VisualizationItem/Visualization/NoVisualizationMessage.js","D2App/components/Item/VisualizationItem/Visualization/DefaultPlugin.js","D2App/components/Item/VisualizationItem/Visualization/MapPlugin.js","D2App/components/Item/VisualizationItem/Visualization/LoadingMask.js","D2App/components/Item/VisualizationItem/Visualization/getFilteredVisualization.js","D2App/components/Item/VisualizationItem/Visualization/getVisualizationConfig.js","D2App/modules/memoizeOne.js","D2App/components/Item/VisualizationItem/Visualization/Visualization.js","D2App/components/Item/VisualizationItem/FatalErrorBoundary.js","D2App/components/Item/ItemHeader/ViewItemActions.js","D2App/components/Item/ItemHeader/DeleteItemButton.js","D2App/components/Item/ItemHeader/EditItemActions.js","D2App/icons/Info.js","D2App/components/Item/ItemHeader/PrintItemInfo.js","D2App/components/Dashboard/dashboardModes.js","D2App/components/Item/ItemHeader/ItemHeader.js","D2App/components/Item/VisualizationItem/ItemHeaderButtons.js","D2App/components/Item/VisualizationItem/ItemFooter.js","D2App/components/Item/VisualizationItem/Item.js","D2App/widgets/Line.js","D2App/components/Item/MessagesItem/Item.js","D2App/components/Item/NotSupportedItem/Item.js","D2App/icons/Description.js","D2App/icons/Delete.js","D2App/components/Item/ListItem/Item.js","D2App/components/Item/ListItem/actions.js","D2App/reducers/printDashboard.js","D2App/components/Item/TextItem/Item.js","D2App/components/Item/AppItem/Item.js","D2App/components/Item/SpacerItem/Item.js","D2App/components/Item/PageBreakItem/Item.js","D2App/components/Item/PrintTitlePageItem/Item.js","D2App/components/Item/Item.js","D2App/components/Item/ProgressiveLoadingContainer.js","D2App/components/ItemGrid/ItemGrid.js","D2App/components/FilterBar/FilterBadge.js","D2App/components/FilterBar/FilterBar.js","D2App/reducers/windowHeight.js","D2App/actions/printDashboard.js","D2App/components/Dashboard/ViewDashboard.js","D2App/components/ItemSelector/ItemSearchField.js","D2App/components/ItemSelector/HeaderMenuItem.js","D2App/icons/Launch.js","D2App/components/ItemSelector/ContentMenuItem.js","D2App/components/ItemSelector/actions.js","D2App/components/ItemSelector/selectableItems.js","D2App/components/ItemSelector/CategorizedMenuGroup.js","D2App/components/ItemSelector/SinglesMenuGroup.js","D2App/components/ItemSelector/ItemSelector.js","D2App/components/TitleBar/EditTitleBar.js","D2App/components/ControlBar/ConfirmDeleteDialog.js","D2App/components/ControlBar/EditBar.js","D2App/components/Dashboard/NotSupportedNotice.js","D2App/components/Dashboard/PrintInfo.js","D2App/icons/LessHorizontal.js","D2App/components/Dashboard/PrintActionsBar.js","D2App/modules/printUtils.js","D2App/components/ItemGrid/PrintLayoutItemGrid.js","D2App/components/Dashboard/PrintLayoutDashboard.js","D2App/components/Dashboard/EditDashboard.js","D2App/components/Dashboard/NewDashboard.js","D2App/components/ItemGrid/PrintItemGrid.js","D2App/components/Dashboard/PrintDashboard.js","D2App/actions/windowHeight.js","D2App/components/Dashboard/Dashboard.js","D2App/components/AlertBar/AlertBar.js","D2App/actions/user.js","D2App/actions/dimensions.js","D2App/api/settings.js","D2App/actions/settings.js","D2App/components/App.js","D2App/reducers/style.js","D2App/reducers/index.js","D2App/configureStore.js","D2App/locales/index.js","D2App/AppWrapper.js","D2App/modules/itemTypes.js","D2App/modules/util.js","D2App/components/ItemGrid/gridUtil.js","D2App/modules/item.js","D2App/components/Item/VisualizationItem/Visualization/plugin.js","D2App/components/Item/ItemHeader/styles/ItemHeader.module.css","D2App/components/ControlBar/styles/ControlBar.module.css","D2App/components/ControlBar/styles/DashboardItemChip.module.css","D2App/components/ControlBar/styles/ClearButton.module.css","D2App/components/ControlBar/styles/Filter.module.css","D2App/components/ControlBar/styles/ShowMoreButton.module.css","D2App/components/ControlBar/styles/DashboardsBar.module.css"],"names":["module","exports","WindowDimensionsCtx","createContext","windowDims","height","window","innerHeight","width","innerWidth","WindowDimensionsProvider","children","dimensions","setDimensions","useState","useEffect","handleResize","debounce","addEventListener","removeEventListener","Provider","value","useWindowDimensions","useContext","ControlBar","React","Component","constructor","props","super","onStartDrag","this","setState","dragging","onDrag","onEndDrag","event","preventDefault","stopPropagation","newHeight","clientY","onChangeHeight","requestAnimationFrame","renderDragHandle","data-testid","className","classes","draghandle","style","onMouseDown","state","render","Math","max","rootClass","cx","root","content","defaultProps","StarIcon","xmlns","viewBox","d","fill","apiPostDataStatistics","async","eventType","id","d2","getInstance","url","Api","getApi","post","DashboardItemChip","starred","selected","label","dashboardId","onClick","chipProps","selectedState","unselected","icon","Star","debouncedPostStatistics","link","to","data-test","AddCircleIcon","colors","teal600","SearchIcon","ClearIcon","grey800","ClearButton","onClear","button","Clear","color","SET_DASHBOARDS_FILTER","CLEAR_DASHBOARDS_FILTER","sGetDashboardsFilter","dashboardsFilter","isSmallScreen","mapDispatchToProps","setDashboardsFilter","type","clearDashboardsFilter","connect","filterText","isMaxHeight","onKeypressEnter","onToggleMaxHeight","focusedClassName","setFocusedClassName","searchButton","Search","searchIcon","container","onFocus","focused","onBlur","input","placeholder","i18n","t","onChange","target","onKeyUp","keyCode","ChevronDown","ChevronUp","ShowMoreButton","disabled","buttonLabel","placement","showMore","aria-label","getRowsHeight","rows","getControlBarHeight","FIRST_ROW_PADDING_HEIGHT","SET_CONTROLBAR_USER_ROWS","combineReducers","userRows","action","validateReducer","sGetControlBarUserRows","controlBar","sGetControlBarRoot","spacerContent","emptyTextItemContent","isTextType","item","TEXT","text","convertUiItemsToBackend","items","map","SPACER","isUiSpacerType","convertBackendItemsToUi","isBackendSpacerType","gridProperties","getGridItemProperties","SET_DASHBOARDS","ADD_DASHBOARDS","SET_DASHBOARD_STARRED","SET_DASHBOARD_DISPLAY_NAME","SET_DASHBOARD_ITEMS","DEFAULT_STATE_DASHBOARDS","byId","EMPTY_DASHBOARD","updateDashboardProp","prop","sGetDashboardsRoot","dashboards","sGetDashboardById","orObject","sDashboardsIsFetching","sGetAllDashboards","sGetDashboardItems","sGetStarredDashboards","Object","values","filter","dashboard","sGetUnstarredDashboards","getCustomDashboards","data","arrayFrom","name","displayName","description","displayDescription","favorite","owner","user","created","split","join","substr","lastUpdated","access","numberOfItems","orArray","dashboardItems","length","SET_SELECTED_ID","SET_SELECTED_ISLOADING","SET_SELECTED_SHOWDESCRIPTION","SET_SELECTED_ITEM_ACTIVE_TYPE","CLEAR_SELECTED_ITEM_ACTIVE_TYPES","DEFAULT_STATE_SELECTED_SHOWDESCRIPTION","DEFAULT_STATE_SELECTED_ITEM_ACTIVE_TYPES","isLoading","showDescription","itemActiveTypes","activeType","sGetSelectedRoot","sGetSelectedId","sGetSelectedIsLoading","sGetSelectedShowDescription","sGetSelectedItemActiveType","NAMESPACE","hasNamespace","currentUser","dataStore","has","getNamespace","get","create","apiPostUserDataStoreValue","key","set","apiGetUserDataStoreValue","defaultValue","namespace","keys","find","k","console","log","KEY_CONTROLBAR_ROWS","acSetControlBarUserRows","tSetControlBarRows","controlBarRows","apiGetControlBarRows","dispatch","err","error","withRouter","selectedId","history","setRows","ref","createRef","scrollToTop","current","scroll","toggleMaxHeight","newRows","cancelMaxHeight","getFilteredDashboards","filteredDashboards","arraySort","toLowerCase","includes","containerClass","expanded","collapsed","viewableRows","rowHeightProp","floor","min","apiPostControlBarRows","controls","newLink","AddCircle","Filter","push","chips","chipContainerClasses","chipContainer","getDashboardChips","marginTop","NoContentMessage","padding","textAlign","fontSize","fontWeight","grey600","ThreeDots","SpeechBubble","margin","fillRule","transform","Warning","Fullscreen","ExitFullscreen","RECEIVED_USER","DEFAULT_STATE_USER","username","uiLocale","isSuperuser","sGetUserUsername","SET_DIMENSIONS","DEFAULT_DIMENSIONS","getDimensionById","DIMENSION_ID_PERIOD","DIMENSION_ID_ORGUNIT","sGetDimensions","CLEAR_ITEM_FILTERS","SET_ITEM_FILTERS","ADD_ITEM_FILTER","REMOVE_ITEM_FILTER","DEFAULT_STATE_ITEM_FILTERS","sGetItemFiltersRoot","itemFilters","sGetNamedItemFilters","createSelector","filters","reduce","arr","dimension","acRemoveItemFilter","RECEIVED_MESSAGES","sGetMessagesRoot","messages","messageConversationsQuery","resource","params","fields","order","pageSize","tGetMessages","dataEngine","messageConversations","query","getMessages","SET_ALERT_MESSAGE","CLEAR_ALERT_MESSAGE","sGetAlertMessage","alert","acClearAlertMessage","ADD_VISUALIZATION","CLEAR_VISUALIZATIONS","DEFAULT_STATE_VISUALIZATIONS","isEmpty","p","undefined","sGetVisualization","visualizations","sGetVisualizationsRoot","acAddVisualization","getIdNameFields","rename","getDimensionFields","withItems","arrayClean","getAxesFields","getFavoriteFields","withDimensions","withOptions","getFavoritesFields","apiFetchVisualization","getVisualizationId","MAP","getEndPointName","onError","getDashboardItemsFields","withFavorite","getDashboardFields","dashboardsQuery","paging","dashboardQuery","starDashboardMutation","unstarDashboardMutation","deleteDashboardMutation","apiFetchDashboard","variables","KEY_SHOW_DESCRIPTION","acSetSelectedId","acSetSelectedIsLoading","acSetSelectedShowDescription","tSetSelectedDashboardById","getState","alertTimeout","setTimeout","onSuccess","acAppendDashboards","customDashboard","acSetDashboardItems","withShape","localStorage","setItem","forEach","REPORT_TABLE","CHART","EVENT_REPORT","EVENT_CHART","getVisualizationFromItem","MESSAGES","clearTimeout","tSetShowDescription","apiGetShowDescription","tUpdateShowDescription","apiPostShowDescription","arrayToIdMap","tFetchDashboards","acSetDashboards","apiFetchDashboards","tStarDashboard","isStarred","acSetDashboardStarred","mutate","apiStarDashboard","tDeleteDashboard","apiDeleteDashboard","Promise","resolve","FilterDialog","displayNameProperty","initiallySelectedItems","addItemFilter","removeItemFilter","onClose","context","setFilters","onSelectItems","dimensionId","onDeselectItems","itemIdsToRemove","newList","onReorderItems","itemIds","oldList","reorderedList","dataTest","position","large","commonProps","onSelect","onDeselect","onReorder","selectedItems","selectedPeriods","ouItems","renderDialogContent","secondary","primary","filterItems","contextTypes","PropTypes","object","ADD_SETTINGS","DEFAULT_SETTINGS","keyDateFormat","keyAnalysisRelativePeriod","keyAnalysisDigitGroupSeparator","rootOrganisationUnit","keyGatherAnalyticalObjectStatisticsInDashboardViews","sGetSettings","settings","sGetSettingsDisplayNameProperty","sGatherAnalyticalObjectStatisticsInDashboardViews","SET_ACTIVE_MODAL_DIMENSION","CLEAR_ACTIVE_MODAL_DIMENSION","DEFAULT_STATE_ACTIVE_MODAL_DIMENSION","sGetActiveModalDimension","activeModalDimension","acSetActiveModalDimension","clearActiveModalDimension","setActiveModalDimension","showPopover","setShowPopover","useRef","onCloseDialog","buttonContainer","onClickOutside","reference","arrow","onDimensionClick","selectedIds","ViewTitleBar","moreOptionsIsOpen","setMoreOptionsIsOpen","sharingDialogIsOpen","setSharingDialogIsOpen","redirectUrl","setRedirectUrl","onToggleStarredDashboard","onShowHideDescription","toggleSharingDialog","toggleMoreOptions","StarBorder","showHideDescriptionLabel","toggleStarredDashboardLabel","buttonRef","userAccess","descriptionClasses","descContainer","desc","noDesc","titleBar","title","actions","titleBarIcon","strip","update","editLink","manage","shareButton","small","moreButton","dense","open","onRequestClose","stateProps","dispatchProps","ownProps","RECEIVED_EDIT_DASHBOARD","RECEIVED_NOT_EDITING","START_NEW_DASHBOARD","RECEIVED_TITLE","RECEIVED_DESCRIPTION","ADD_DASHBOARD_ITEM","REMOVE_DASHBOARD_ITEM","UPDATE_DASHBOARD_ITEM","RECEIVED_DASHBOARD_LAYOUT","SET_PRINT_PREVIEW_VIEW","CLEAR_PRINT_PREVIEW_VIEW","DEFAULT_STATE_EDIT_DASHBOARD","NEW_DASHBOARD_STATE","printPreviewView","sGetEditDashboardRoot","editDashboard","sGetIsEditing","sGetIsPrintPreviewView","sGetEditDashboardItems","createDashboardMutation","updateDashboardMutation","generatePayload","w","h","acClearEditDashboard","acAddDashboardItem","itemPropName","itemTypeMap","propName","generateUid","gridItemProperties","shape","PAGEBREAK","yPos","getPageBreakItemShape","isStatic","PRINT_TITLE_PAGE","getPrintTitlePageItemShape","NEW_ITEM_SHAPE","acUpdateDashboardItem","acRemoveDashboardItem","tSaveDashboard","dashboardToSave","response","uid","updateDashboard","postDashboard","NoVisualizationMessage","message","DefaultPlugin","pluginCredentials","pluginIsAvailable","pluginManager","shouldPluginReload","prevProps","reloadAllowed","filtersChanged","vis","visualization","prevVis","visChanged","reloadPlugin","credentials","componentDidMount","baseUrl","getBaseUrl","auth","defaultHeaders","Authorization","options","componentDidUpdate","componentWillUnmount","getGridItemDomId","MapPlugin","applyFilters","mapViews","mapView","layer","hideTitle","LoadingMask","center","getFilteredVisualization","visRows","obj","visColumns","columns","visFilters","dimensionFound","dimensionObjects","getWithoutId","getVisualizationConfig","originalType","extractedMapView","mv","VIS_TYPE_COLUMN","VIS_TYPE_PIVOT_TABLE","layout","getAdaptedUiLayoutByType","memoizeOne","fn","lastArgs","lastValue","args","every","arg","i","Visualization","pluginLoaded","onLoadingComplete","memoizedGetFilteredVisualization","memoizedGetVisualizationConfig","availableHeight","pluginProps","VISUALIZATION","forDashboard","FatalErrorBoundary","errorFound","componentDidCatch","info","ViewItemActions","actionButtons","itemActionsWrap","DeleteItemButton","deleteItemButton","red500","itemId","WarningIcon","PrintWarning","warning","Info","EDIT","NEW","VIEW","PRINT","PRINT_LAYOUT","isEditMode","mode","isPrintMode","isViewMode","ItemHeader","forwardRef","dashboardMode","isShortened","rest","Actions","EditItemActions","PrintItemInfo","getItemActionsMap","itemHeaderWrap","itemTitle","iconFill","ItemHeaderButtons","menuIsOpen","setMenuIsOpen","useConfig","onSelectActiveType","isTrackerType","isTrackerDomainType","onViewTable","closeMenu","onViewChart","onViewMap","canViewAs","isSingleValue","isYearOverYear","VIS_TYPE_GAUGE","VIS_TYPE_PIE","interpretationMenuLabel","activeFooter","ViewAsMenuItems","hasMapView","isFullscreen","onToggleFullscreen","appName","getAppName","href","getLink","onToggleFooter","fullscreenSupported","ItemFooter","line","scrollContainer","isRequired","Item","showFooter","configLoaded","isFullscreenSupported","el","document","querySelector","itemDomElSelector","requestFullscreen","webkitRequestFullscreen","handleFullscreenChange","fullscreenElement","webkitFullscreenElement","exitFullscreen","webkitExitFullscreen","getUniqueKey","uniqueId","onToggleItemExpanded","setActiveType","getActiveType","isEditing","getAvailableHeight","calculatedHeight","originalHeight","headerRef","clientHeight","ITEM_CONTENT_PADDING_BOTTOM","memoizedGetContentHeight","contentRef","offsetHeight","measuredHeight","preferMeasured","updateVisualization","gatherDataStatistics","getDataStatisticsName","e","onfullscreenchange","onwebkitfullscreenchange","getVisualizationName","shortened","Function","prototype","backgroundColor","grey200","border","Line","PRIVATE","messageTypes","VALIDATION_RESULT","TICKET","SYSTEM","list","listStyleType","paddingLeft","seeAll","marginBottom","sender","lineHeight","snippet","maxHeight","overflow","MessagesItem","getMessageHref","msg","msgIdentifier","messageType","getMessageSender","latestMsg","slice","getMessageItems","modeClass","readClass","read","msgDate","location","messageCount","formatDate","userSettings","string","MessagesContainer","NotSupportedItem","display","justifyContent","alignItems","align","DescriptionIcon","grey500","DeleteIcon","getItemTitle","pluralTitle","ListItem","tRemoveListItemContent","contentItems","index","array","findIndex","getContentItems","contentItem","deleteButton","deletebutton","deleteicon","grey900","getItemUrl","Description","itemicon","dashboardItem","listItemType","newContent","SET_PRINT_DASHBOARD","CLEAR_PRINT_DASHBOARD","ADD_PRINT_DASHBOARD_ITEM","SET_PRINT_DASHBOARD_LAYOUT","REMOVE_PRINT_DASHBOARD_ITEM","UPDATE_PRINT_DASHBOARD_ITEM","DEFAULT_STATE_PRINT_DASHBOARD","DEFAULT_DASHBOARD_ITEMS","NEW_PRINT_DASHBOARD_STATE","sGetPrintDashboardRoot","printDashboard","sGetIsPrinting","sGetPrintDashboardItems","textDiv","whiteSpace","textField","fontStretch","onChangeText","updatedItem","viewItem","textDivStyle","assign","editItem","onEdit","multiline","fullWidth","printItem","textItem","getIframeSrc","appDetails","iframeSrc","launchUrl","ouIds","ouFilter","path","AppItem","appKey","system","installedApps","app","dashboardWidget","src","SpacerItem","PageBreakItem","PrintTitlePageItem","titlePage","filterTitle","listItems","filterListItem","val","filterList","getItemFilterList","viewDashboard","sGetPrintDashboardName","sGetPrintDashboardDescription","GridItem","VisualizationItem","REPORTS","RESOURCES","USERS","TextItem","APP","getGridItem","ProgressiveLoadingContainer","shouldLoad","containerRef","shouldLoadHandler","handlerOptions","passive","checkShouldLoad","bufferPx","bufferFactor","rect","getBoundingClientRect","bottom","top","removeHandler","registerHandler","debounceMs","getElementsByClassName","eventProps","pick","ItemGrid","expandedItems","clickedId","isExpanded","onLayoutChange","newLayout","edit","acUpdateDashboardLayout","onResizeStop","oldItem","newItem","onItemResize","isVisualizationType","pluginResize","adjustHeightForExpanded","expandedItem","getItemComponent","itemClassNames","getItemComponents","UNSAFE_componentWillReceiveProps","nextProps","translucent","MARGIN","cols","getGridColumns","rowHeight","GRID_ROW_HEIGHT","compactType","GRID_COMPACT_TYPE","isDraggable","isResizable","draggableCancel","selectedDashboard","validItems","hasShape","styles","badgeContainer","borderRadius","white","badge","cursor","badgeRemove","textDecoration","marginLeft","FilterBadge","onRemove","count","FilterBar","onBadgeRemove","onBadgeClick","bar","removeItemFIlter","SET_WINDOW_HEIGHT","DEFAULT_STATE_WINDOW_HEIGHT","sGetWindowHeight","windowHeight","acSetPrintDashboard","acClearPrintDashboard","acAddPrintDashboardItem","isOneItemPerPage","acUpdatePrintDashboardItem","dashboardIsEditing","dashboardIsPrinting","clearEditDashboard","clearPrintDashboard","ItemSearchField","HeaderMenuItem","LaunchIcon","LaunchLink","launchLink","rel","InsertButton","buttonInsert","ContentMenuItem","onInsert","visType","ItemIcon","getItemIcon","renderedItemIcon","visTypeIcons","menuItem","marginRight","singleItems","header","categorizedItems","listItemTypes","CategorizedMenuGroup","addItem","tAddListItemContent","toggleSeeMore","seeMore","onChangeItemsLimit","hasMore","itemUrl","showMoreButton","dashboardItemIndex","category","addToDashboard","ItemSelector","isOpen","setIsOpen","setFilter","setItems","maxOptions","setMaxOptions","Set","queryString","filterStr","then","catch","updateMaxOptions","delete","add","inputRef","maxWidth","menu","itemType","endPointName","itemCount","getDefaultItemCount","allItems","displayItems","concat","EditTitleBar","onChangeTitle","onChangeDescription","section","titleDescription","_","itemSelector","ConfirmDeleteDialog","dashboardName","onDeleteConfirmed","onContinueEditing","destructive","EditBar","translationDialogIsOpen","dashboardModel","confirmDeleteDialogOpen","onConfirmDelete","onSave","newId","onPrintPreview","isPrintPreviewView","clearPrintPreview","showPrintPreview","onDiscard","onDiscardChanges","onDelete","onTranslationsSaved","translations","dbLocale","translation","locale","property","onTranslate","fetchDashboardModel","toggleTranslationDialog","confirmDeleteDialog","deleteAccess","translationDialog","objectToTranslate","modelDefinition","fieldsToTranslate","onTranslationSaved","onTranslationError","renderActionButtons","updateAccess","discardBtnText","editBar","sGetIsNewDashboard","acSetDashboardDisplayName","NotSupportedNotice","noticeContainer","PrintInfo","isLayout","a4LandscapeWidthPx","infoHeader","infoWrapper","infoList","divider","LessHorizontalIcon","PrintActionsBar","inner","LessHorizontal","print","topMargin","getTransformYPx","elStyle","transformY","match","parseInt","PrintLayoutItemGrid","updateDashboardLayout","isFirstPageBreak","pageBreaks","sortedPageBreaks","sortBy","y","hideExtraPageBreaks","sortedElements","elements","types","elementsWithBoundingRect","Array","from","classList","indexOf","bottomY","getDomGridItemsSortedByYPos","querySelectorAll","pageBreakBottom","lastItemBottom","foundNonPageBreak","thisItemBottom","gridElement","firstBreak","scrollArea","EDIT_BAR_HEIGHT","isLeapPage","n","x","getMultiple","factor","multiple","PrintLayoutDashboard","initialized","initPrintLayoutDashboard","setPrintDashboard","MAX_ITEM_GRID_HEIGHT","updateDashboardItem","addDashboardItem","yPosList","pageNum","addPageBreaks","getWrapperStyle","fromEdit","paddingTop","spacers","dp24","wrapper","pageOuter","setEditDashboard","renderGrid","setNewDashboard","PrintItemGrid","PrintDashboard","initPrintDashboard","sortedItems","spacerCount","removeDashboardItem","MAX_ITEM_GRID_WIDTH_OIPP","MAX_ITEM_GRID_HEIGHT_OIPP","dashboardMap","dashboardsIsEmpty","dashboardsLoaded","routeId","selectDashboard","dashboardToSelect","preferredId","getItem","dash","sGetDashboardsSortedByStarred","setWindowHeight","getElementsByTagName","remove","setHeaderbarVisibility","onResize","onHidden","permanent","tSetDimensions","acSetDimensions","displayNameProp","apiFetchDimensions","dim","dimensionType","dataDimensionType","SYSTEM_SETTINGS","tAddSettings","extraSettings","fetchedSettings","s","apiFetchSystemSettings","App","setCurrentUser","fetchDashboards","setControlBarRows","setShowDescription","addSettings","getChildContext","exact","AlertBar","childContextTypes","DEFAULT_STATE_STYLE","objectClean","conversations","$merge","d2Object","keyUiLocale","authorities","newState","$splice","$unshift","idToRemove","stateItems","layoutHasChanged","newStateItems","stateItem","si","configureStore","middleware","thunk","withExtraArgument","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","createStore","reducer","applyMiddleware","addResources","arTranslations","ar_IQTranslations","ckbTranslations","csTranslations","daTranslations","enTranslations","esTranslations","frTranslations","idTranslations","kmTranslations","loTranslations","myTranslations","nbTranslations","prsTranslations","psTranslations","ptTranslations","pt_BRTranslations","ruTranslations","svTranslations","tetTranslations","tgTranslations","ukTranslations","urTranslations","uzTranslations","uz_CyrlTranslations","viTranslations","zhTranslations","zh_CNTranslations","d2Config","schemas","authorization","process","REACT_APP_DHIS2_AUTHORIZATION","headers","AppWrapper","useDataEngine","store","theme","createMuiTheme","dhis2theme","i18nRoot","DOMAIN_TYPE_AGGREGATE","DOMAIN_TYPE_TRACKER","domainType","defaultItemCount","appUrl","dataStatisticsName","Date","getTime","TableIcon","ChartIcon","MapIcon","ExtensionIcon","PersonIcon","FontDownloadIcon","EmailIcon","CropFreeIcon","NotInterestedIcon","param","isArray","isObject","global","Intl","DateTimeFormat","year","month","day","format","replace","api","idx","isNonNegativeInteger","Number","isInteger","minH","GRID_COLUMNS","static","itemWithShape","Error","col","row","itemWidth","MAX_ITEM_GRID_WIDTH","itemHeight","getShape","round","getOriginalHeight","isFunction","setViewportSize","clientWidth","reportTable","chart","eventReport","eventChart","itemTypeToExternalPlugin","getPlugin","hasIntegratedPlugin","load","config","plugin","loadingIndicator","loadPlugin","resize","unmount"],"mappings":"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","file":"static/js/app.1b05dbf1.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"buttonContainer\":\"FilterSelector_buttonContainer__O_amY\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"ViewTitleBar_container__VivO0\",\"actions\":\"ViewTitleBar_actions__2UTRz\",\"editLink\":\"ViewTitleBar_editLink__d_HzW\",\"titleBar\":\"ViewTitleBar_titleBar__eiwJS\",\"titleBarIcon\":\"ViewTitleBar_titleBarIcon__2cBxv\",\"strip\":\"ViewTitleBar_strip__3xR4U\",\"title\":\"ViewTitleBar_title__2GhTR\",\"descContainer\":\"ViewTitleBar_descContainer__3rF10\",\"desc\":\"ViewTitleBar_desc__3QW6Z\",\"noDesc\":\"ViewTitleBar_noDesc__Jettc\",\"moreButton\":\"ViewTitleBar_moreButton__1HduK\",\"shareButton\":\"ViewTitleBar_shareButton__3yEKR\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"message\":\"NoVisualizationMessage_message__22IPi\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"center\":\"LoadingMask_center__KHIYy\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"FatalErrorBoundary_container__3SViR\",\"icon\":\"FatalErrorBoundary_icon__2UbeP\",\"message\":\"FatalErrorBoundary_message__3FzrY\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"deleteItemButton\":\"DeleteItemButton_deleteItemButton__3TJm9\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"warning\":\"PrintItemInfo_warning__123PK\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"line\":\"ItemFooter_line__3Ko0R\",\"scrollContainer\":\"ItemFooter_scrollContainer__tuq4P\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"Item_list__1_nkQ\",\"item\":\"Item_item__3-6QE\",\"itemicon\":\"Item_itemicon__QlouX\",\"link\":\"Item_link___3c_q\",\"deleteicon\":\"Item_deleteicon__3usrl\",\"deletebutton\":\"Item_deletebutton__1DpBW\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"titlePage\":\"Item_titlePage__18CNQ\",\"name\":\"Item_name__3nuTV\",\"description\":\"Item_description__1gFQd\",\"filterTitle\":\"Item_filterTitle__2p7TQ\",\"filterList\":\"Item_filterList__qc_G3\",\"filterListItem\":\"Item_filterListItem__sPbBY\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"bar\":\"FilterBar_bar__1Ma3p\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"HeaderMenuItem_item__313hC\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"menuItem\":\"ContentMenuItem_menuItem__vbKn3\",\"launchLink\":\"ContentMenuItem_launchLink__2Nql9\",\"label\":\"ContentMenuItem_label__ANfH1\",\"buttonInsert\":\"ContentMenuItem_buttonInsert__1joHg\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"showMoreButton\":\"CategorizedMenuGroup_showMoreButton__2RbRp\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"menu\":\"ItemSelector_menu__2VYae\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"section\":\"EditTitleBar_section__LIaIC\",\"titleDescription\":\"EditTitleBar_titleDescription__1YsU6\",\"title\":\"EditTitleBar_title__3mUbt\",\"description\":\"EditTitleBar_description__24U5X\",\"itemSelector\":\"EditTitleBar_itemSelector__1cFEp\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"content\":\"ConfirmDeleteDialog_content__EqswE\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"editBar\":\"EditBar_editBar__1d1xM\",\"controls\":\"EditBar_controls__1t0nO\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"noticeContainer\":\"NotSupportedNotice_noticeContainer__3z9Up\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"infoWrapper\":\"PrintInfo_infoWrapper__3m2lt\",\"infoHeader\":\"PrintInfo_infoHeader__KyW8I\",\"info\":\"PrintInfo_info__13oXZ\",\"infoList\":\"PrintInfo_infoList__Iu9MC\",\"divider\":\"PrintInfo_divider__3wzx9\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"PrintActionsBar_container__2iQp7\",\"topMargin\":\"PrintActionsBar_topMargin__OpYDN\",\"inner\":\"PrintActionsBar_inner__uBqU7\",\"link\":\"PrintActionsBar_link__lFUmI\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"PrintLayoutDashboard_wrapper__1WDh4\",\"pageOuter\":\"PrintLayoutDashboard_pageOuter__22acI\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"PrintDashboard_wrapper__1O3s_\",\"pageOuter\":\"PrintDashboard_pageOuter__fl9tw\"};","import React, { createContext, useContext, useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport debounce from 'lodash/debounce';\nexport const WindowDimensionsCtx = createContext(null);\n\nconst windowDims = () => ({\n  height: window.innerHeight,\n  width: window.innerWidth\n});\n\nconst WindowDimensionsProvider = ({\n  children\n}) => {\n  const [dimensions, setDimensions] = useState(windowDims());\n  useEffect(() => {\n    const handleResize = debounce(() => {\n      setDimensions(windowDims());\n    }, 200);\n    window.addEventListener('resize', handleResize);\n    return () => {\n      window.removeEventListener('resize', handleResize);\n    };\n  }, []);\n  return <WindowDimensionsCtx.Provider value={dimensions}>\n            {children}\n        </WindowDimensionsCtx.Provider>;\n};\n\nWindowDimensionsProvider.propTypes = {\n  children: PropTypes.node.isRequired\n};\nexport default WindowDimensionsProvider;\nexport const useWindowDimensions = () => {\n  return useContext(WindowDimensionsCtx);\n};","import React from 'react';\nimport PropTypes from 'prop-types';\nimport cx from 'classnames';\nimport classes from './styles/ControlBar.module.css';\nexport const DRAG_HANDLE_HEIGHT = 7;\n\nclass ControlBar extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      dragging: false\n    };\n  }\n\n  onStartDrag = () => {\n    this.setState({\n      dragging: true\n    });\n    window.addEventListener('mousemove', this.onDrag);\n    window.addEventListener('mouseup', this.onEndDrag);\n  };\n  onDrag = event => {\n    event.preventDefault();\n    event.stopPropagation();\n    const newHeight = event.clientY;\n\n    if (this.props.onChangeHeight && newHeight !== this.props.height && newHeight > 0) {\n      requestAnimationFrame(() => {\n        this.props.onChangeHeight(newHeight);\n      });\n    }\n  };\n  onEndDrag = () => {\n    this.setState({\n      dragging: false\n    });\n    window.removeEventListener('mousemove', this.onDrag);\n    window.removeEventListener('mouseup', this.onEndDrag);\n\n    if (this.props.onEndDrag) {\n      this.props.onEndDrag();\n    }\n  };\n  renderDragHandle = () => typeof this.props.onChangeHeight === 'function' && <div data-testid=\"controlbar-drag-handle\" className={classes.draghandle} style={{\n    height: DRAG_HANDLE_HEIGHT\n  }} onMouseDown={this.onStartDrag} />;\n\n  render() {\n    const height = Math.max(this.props.height, 0) + DRAG_HANDLE_HEIGHT;\n    const rootClass = cx(classes.root, this.state.dragging && classes.dragging);\n    return <div style={{\n      height\n    }} className={rootClass}>\n                <div className={classes.content}>{this.props.children}</div>\n                {this.renderDragHandle()}\n            </div>;\n  }\n\n}\n\nControlBar.propTypes = {\n  /**\n   * The height of the control bar in number of lines. Must be a positive integer.\n   */\n  children: PropTypes.node.isRequired,\n\n  /**\n   * Callback function that is called when the control bar is resized.\n   * The callback receives one argument: The new height in pixels.\n   *\n   * If no callback is specified the control bar will not have a drag handle.\n   */\n  height: PropTypes.number.isRequired,\n\n  /**\n   * Callback function that is called when the control bar is dropped after being dragged.\n   * The callback receives one argument: The new height in pixels.\n   *\n   * Ignored if no \"onChangeHeight\" function is provided.\n   */\n  onChangeHeight: PropTypes.func,\n\n  /**\n   * The contents of the control bar.\n   */\n  onEndDrag: PropTypes.func\n};\nControlBar.defaultProps = {\n  onChangeHeight: null,\n  onEndDrag: null\n};\nexport default ControlBar;","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst StarIcon = ({\n  className\n}) => <svg className={className} xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\">\n        <path d=\"M0 0h24v24H0z\" fill=\"none\" />\n        <path d=\"M12 17.27L18.18 21l-1.64-7.03L22 9.24l-7.19-.61L12 2 9.19 8.63 2 9.24l5.46 4.73L5.82 21z\" />\n        <path d=\"M0 0h24v24H0z\" fill=\"none\" />\n    </svg>;\n\nStarIcon.propTypes = {\n  className: PropTypes.string\n};\nexport default StarIcon;","import { getInstance } from 'd2';\nexport const apiPostDataStatistics = async (eventType, id) => {\n  const d2 = await getInstance();\n  const url = `dataStatistics?eventType=${eventType}&favorite=${id}`;\n  d2.Api.getApi().post(url);\n};","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Chip } from '@dhis2/ui';\nimport { Link } from 'react-router-dom';\nimport debounce from 'lodash/debounce';\nimport StarIcon from '../../icons/Star';\nimport { apiPostDataStatistics } from '../../api/dataStatistics';\nimport classes from './styles/DashboardItemChip.module.css';\nexport const DashboardItemChip = ({\n  starred,\n  selected,\n  label,\n  dashboardId,\n  onClick\n}) => {\n  const chipProps = {\n    selected\n  };\n\n  if (starred) {\n    const selectedState = selected ? classes.selected : classes.unselected;\n    chipProps.icon = <StarIcon className={`${classes.icon} ${selectedState}`} />;\n  }\n\n  const debouncedPostStatistics = debounce(() => apiPostDataStatistics('DASHBOARD_VIEW', dashboardId), 500);\n\n  const handleClick = () => {\n    debouncedPostStatistics();\n    onClick();\n  };\n\n  return <Link className={classes.link} to={`/${dashboardId}`} onClick={handleClick} data-test=\"dashboard-chip\">\n            <Chip {...chipProps}>{label}</Chip>\n        </Link>;\n};\nDashboardItemChip.propTypes = {\n  dashboardId: PropTypes.string.isRequired,\n  label: PropTypes.string.isRequired,\n  selected: PropTypes.bool.isRequired,\n  starred: PropTypes.bool.isRequired,\n  onClick: PropTypes.func.isRequired,\n  classes: PropTypes.object\n};\nexport default DashboardItemChip;","import React from 'react';\nimport { colors } from '@dhis2/ui';\n\nconst AddCircleIcon = () => <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"32\" height=\"32\" fill={colors.teal600} viewBox=\"0 0 24 24\">\n        <path d=\"M12 2C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2zm4 11h-3v3c0 .55-.45 1-1 1s-1-.45-1-1v-3H8c-.55 0-1-.45-1-1s.45-1 1-1h3V8c0-.55.45-1 1-1s1 .45 1 1v3h3c.55 0 1 .45 1 1s-.45 1-1 1z\" />\n    </svg>;\n\nexport default AddCircleIcon;","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst SearchIcon = ({\n  className\n}) => <svg className={className} xmlns=\"http://www.w3.org/2000/svg\" height=\"24\" viewBox=\"0 0 24 24\" width=\"24\">\n        <path d=\"M0 0h24v24H0z\" fill=\"none\" />\n        <path d=\"M15.5 14h-.79l-.28-.27C15.41 12.59 16 11.11 16 9.5 16 5.91 13.09 3 9.5 3S3 5.91 3 9.5 5.91 16 9.5 16c1.61 0 3.09-.59 4.23-1.57l.27.28v.79l5 4.99L20.49 19l-4.99-5zm-6 0C7.01 14 5 11.99 5 9.5S7.01 5 9.5 5 14 7.01 14 9.5 11.99 14 9.5 14z\" />\n    </svg>;\n\nSearchIcon.propTypes = {\n  className: PropTypes.string\n};\nexport default SearchIcon;","import React from 'react';\nimport { colors } from '@dhis2/ui';\nimport PropTypes from 'prop-types';\n\nconst ClearIcon = ({\n  className\n}) => <svg className={className} fill={colors.grey800} xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\">\n        <path d=\"M19 6.41L17.59 5 12 10.59 6.41 5 5 6.41 10.59 12 5 17.59 6.41 19 12 13.41 17.59 19 19 17.59 13.41 12z\" />\n        <path d=\"M0 0h24v24H0z\" fill=\"none\" />\n    </svg>;\n\nClearIcon.propTypes = {\n  className: PropTypes.string\n};\nexport default ClearIcon;","import React from 'react';\nimport PropTypes from 'prop-types';\nimport ClearIcon from '../../icons/Clear';\nimport classes from './styles/ClearButton.module.css';\nexport const ClearButton = ({\n  onClear\n}) => <button className={classes.button} onClick={onClear}>\n        <span>\n            <ClearIcon className={classes.icon} color=\"action\" />\n        </span>\n    </button>;\nClearButton.propTypes = {\n  onClear: PropTypes.func.isRequired\n};\nexport default ClearButton;","import { validateReducer } from '../modules/util';\nexport const SET_DASHBOARDS_FILTER = 'SET_DASHBOARDS_FILTER';\nexport const CLEAR_DASHBOARDS_FILTER = 'CLEAR_DASHBOARDS_FILTER';\nexport const DEFAULT_STATE_DASHBOARDS_FILTER = '';\nexport default ((state = DEFAULT_STATE_DASHBOARDS_FILTER, action) => {\n  switch (action.type) {\n    case SET_DASHBOARDS_FILTER:\n      {\n        return validateReducer(action.value, DEFAULT_STATE_DASHBOARDS_FILTER);\n      }\n\n    case CLEAR_DASHBOARDS_FILTER:\n      {\n        return DEFAULT_STATE_DASHBOARDS_FILTER;\n      }\n\n    default:\n      return state;\n  }\n}); // selectors\n\nexport const sGetDashboardsFilter = state => state.dashboardsFilter;","const SMALL_SCREEN_BREAKPOINT = 480;\n\nconst isSmallScreen = width => width <= SMALL_SCREEN_BREAKPOINT;\n\nexport default isSmallScreen;","import React, { useState } from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport i18n from '@dhis2/d2-i18n';\nimport cx from 'classnames';\nimport SearchIcon from '../../icons/Search';\nimport ClearButton from './ClearButton';\nimport { useWindowDimensions } from '../WindowDimensionsProvider';\nimport { acSetDashboardsFilter, acClearDashboardsFilter } from '../../actions/dashboardsFilter';\nimport { sGetDashboardsFilter } from '../../reducers/dashboardsFilter';\nimport isSmallScreen from '../../modules/isSmallScreen';\nimport classes from './styles/Filter.module.css';\nexport const KEYCODE_ENTER = 13;\nexport const KEYCODE_ESCAPE = 27;\nexport const FilterUnconnected = ({\n  clearDashboardsFilter,\n  filterText,\n  isMaxHeight,\n  setDashboardsFilter,\n  onKeypressEnter,\n  onToggleMaxHeight\n}) => {\n  const [focusedClassName, setFocusedClassName] = useState('');\n  const {\n    width\n  } = useWindowDimensions();\n\n  const setFilterValue = event => {\n    event.preventDefault();\n    setDashboardsFilter(event.target.value);\n  };\n\n  const onKeyUp = event => {\n    switch (event.keyCode) {\n      case KEYCODE_ENTER:\n        onKeypressEnter();\n        clearDashboardsFilter();\n        break;\n\n      case KEYCODE_ESCAPE:\n        clearDashboardsFilter();\n        break;\n\n      default:\n        break;\n    }\n  };\n\n  const onFocus = event => {\n    event.preventDefault();\n    setFocusedClassName(classes.focused);\n  };\n\n  const onBlur = event => {\n    event.preventDefault();\n    setFocusedClassName('');\n  };\n\n  return isSmallScreen(width) && !isMaxHeight ? <button className={classes.searchButton} onClick={onToggleMaxHeight}>\n            <SearchIcon className={classes.searchIcon} />\n        </button> : <div className={cx(classes.container, `${focusedClassName}`)} onFocus={onFocus} onBlur={onBlur}>\n            <SearchIcon className={classes.searchIcon} />\n            <input className={classes.input} type=\"text\" placeholder={i18n.t('Search for a dashboard')} onChange={setFilterValue} onKeyUp={onKeyUp} value={filterText} data-test=\"search-dashboard-input\" />\n            {filterText && <ClearButton onClear={clearDashboardsFilter} />}\n        </div>;\n};\nFilterUnconnected.propTypes = {\n  clearDashboardsFilter: PropTypes.func,\n  filterText: PropTypes.string,\n  isMaxHeight: PropTypes.bool,\n  setDashboardsFilter: PropTypes.func,\n  onKeypressEnter: PropTypes.func,\n  onToggleMaxHeight: PropTypes.func\n};\n\nconst mapStateToProps = state => ({\n  filterText: sGetDashboardsFilter(state)\n});\n\nconst mapDispatchToProps = {\n  setDashboardsFilter: acSetDashboardsFilter,\n  clearDashboardsFilter: acClearDashboardsFilter\n};\nexport default connect(mapStateToProps, mapDispatchToProps)(FilterUnconnected);","import { SET_DASHBOARDS_FILTER, CLEAR_DASHBOARDS_FILTER } from '../reducers/dashboardsFilter'; // actions\n\nexport const acSetDashboardsFilter = value => ({\n  type: SET_DASHBOARDS_FILTER,\n  value\n});\nexport const acClearDashboardsFilter = () => ({\n  type: CLEAR_DASHBOARDS_FILTER\n});","import React from 'react';\nexport const ChevronDown = () => <svg height=\"24\" viewBox=\"0 0 24 24\" width=\"24\" xmlns=\"http://www.w3.org/2000/svg\">\n        <path d=\"m11.29289 15.7071c.39053.3905 1.02369.3905 1.41422 0l4.99999-4.99999c.3905-.39053.3905-1.02369 0-1.41422-.3905-.39052-1.0237-.39052-1.4142 0l-4.2929 4.2929-4.29289-4.2929c-.39053-.39052-1.02369-.39052-1.41422 0-.39052.39053-.39052 1.02369 0 1.41422z\" fill=\"#a0adba\" />\n    </svg>;\nexport const ChevronUp = () => <svg height=\"24\" viewBox=\"0 0 24 24\" width=\"24\" xmlns=\"http://www.w3.org/2000/svg\">\n        <path d=\"m11.2928932 8.29289322c.360484-.36048396.927715-.3882135 1.3200062-.08318861l.0942074.08318861 5 4.99999998c.3905243.3905243.3905243 1.0236893 0 1.4142136-.360484.3604839-.927715.3882135-1.3200062.0831886l-.0942074-.0831886-4.2928932-4.2921068-4.29289322 4.2921068c-.36048396.3604839-.92771502.3882135-1.32000622.0831886l-.09420734-.0831886c-.36048396-.360484-.3882135-.927715-.08318861-1.3200062l.08318861-.0942074z\" fill=\"#a0adba\" />\n    </svg>;","import React from 'react';\nimport PropTypes from 'prop-types';\nimport i18n from '@dhis2/d2-i18n';\nimport { Tooltip } from '@dhis2/ui';\nimport { ChevronDown, ChevronUp } from './assets/icons';\nimport classes from './styles/ShowMoreButton.module.css';\nexport const SHOWMORE_BAR_HEIGHT = 16;\n\nconst ShowMoreButton = ({\n  onClick,\n  isMaxHeight,\n  disabled\n}) => {\n  const buttonLabel = isMaxHeight ? i18n.t('Show fewer dashboards') : i18n.t('Show more dashboards');\n  return <div className={classes.container}>\n            {disabled ? <div className={classes.disabled}>\n                    <ChevronDown />\n                </div> : <Tooltip content={buttonLabel} placement=\"bottom\">\n                    <button className={classes.showMore} onClick={onClick} data-test=\"showmore-button\" aria-label={buttonLabel}>\n                        {isMaxHeight ? <ChevronUp /> : <ChevronDown />}\n                    </button>\n                </Tooltip>}\n        </div>;\n};\n\nShowMoreButton.propTypes = {\n  disabled: PropTypes.bool,\n  isMaxHeight: PropTypes.bool,\n  onClick: PropTypes.func\n};\nexport default ShowMoreButton;","import { SHOWMORE_BAR_HEIGHT } from './ShowMoreButton';\nexport const CONTROL_BAR_ROW_HEIGHT = 40;\nexport const FIRST_ROW_PADDING_HEIGHT = 10;\nexport const MIN_ROW_COUNT = 1;\nexport const HEADERBAR_HEIGHT = 48;\nconst CONTROL_BAR_OUTER_HEIGHT_DIFF = FIRST_ROW_PADDING_HEIGHT + SHOWMORE_BAR_HEIGHT - 2; // 2 pixel \"adjustment\"\n\nexport const getRowsHeight = rows => {\n  return rows * CONTROL_BAR_ROW_HEIGHT;\n};\nexport const getNumRowsFromHeight = height => {\n  return Math.floor((height - CONTROL_BAR_OUTER_HEIGHT_DIFF) / CONTROL_BAR_ROW_HEIGHT);\n};\nexport const getControlBarHeight = rows => {\n  return getRowsHeight(rows) + CONTROL_BAR_OUTER_HEIGHT_DIFF;\n};","/** @module reducers/controlBar */\nimport { combineReducers } from 'redux';\nimport { validateReducer } from '../modules/util';\nexport const SET_CONTROLBAR_USER_ROWS = 'SET_CONTROLBAR_USER_ROWS';\nexport const DEFAULT_STATE_CONTROLBAR_ROWS = 1;\n\nconst userRows = (state = DEFAULT_STATE_CONTROLBAR_ROWS, action) => {\n  switch (action.type) {\n    case SET_CONTROLBAR_USER_ROWS:\n      return validateReducer(action.value, DEFAULT_STATE_CONTROLBAR_ROWS);\n\n    default:\n      return state;\n  }\n};\n\nexport default combineReducers({\n  userRows\n});\n/**\n * Selectors that point to specific props in the state object\n * @function\n * @param {Object} state\n * @returns {Object}\n */\n\nexport const sGetControlBarRoot = state => state.controlBar; // Selector dependency level 2\n\nexport const sGetControlBarUserRows = state => sGetControlBarRoot(state).userRows;","import { TEXT, SPACER } from './itemTypes';\nimport { getGridItemProperties } from '../components/ItemGrid/gridUtil';\nexport const spacerContent = 'SPACER_ITEM_FOR_DASHBOARD_LAYOUT_CONVENIENCE';\nexport const emptyTextItemContent = 'TEXT_ITEM_WITH_NO_CONTENT';\n\nconst isBackendSpacerType = item => item.type === TEXT && item.text === spacerContent;\n\nconst isUiSpacerType = item => item.type === SPACER;\n\nconst isTextType = item => item.type === TEXT && item.text !== spacerContent;\n\nexport const convertUiItemsToBackend = items => items.map(item => {\n  let text = null;\n\n  if (isUiSpacerType(item)) {\n    text = spacerContent;\n  } else if (isTextType(item)) {\n    text = item.text || emptyTextItemContent;\n  }\n\n  return { ...item,\n    ...(text ? {\n      text\n    } : {})\n  };\n});\nexport const convertBackendItemsToUi = items => items.map(item => {\n  const type = isBackendSpacerType(item) ? SPACER : item.type;\n  const gridProperties = getGridItemProperties(item.id);\n  const text = isTextType(item) ? item.text === emptyTextItemContent ? '' : item.text : null;\n  return { ...item,\n    ...(text !== null ? {\n      text\n    } : {}),\n    type,\n    ...gridProperties\n  };\n});","/** @module reducers/dashboards */\nimport arrayFrom from 'd2-utilizr/lib/arrayFrom';\nimport arraySort from 'd2-utilizr/lib/arraySort';\nimport { orArray, orObject } from '../modules/util';\nimport { convertBackendItemsToUi } from '../modules/uiBackendItemConverter';\nexport const SET_DASHBOARDS = 'SET_DASHBOARDS';\nexport const ADD_DASHBOARDS = 'ADD_DASHBOARDS';\nexport const SET_DASHBOARD_STARRED = 'SET_DASHBOARD_STARRED';\nexport const SET_DASHBOARD_DISPLAY_NAME = 'SET_DASHBOARD_DISPLAY_NAME';\nexport const SET_DASHBOARD_ITEMS = 'SET_DASHBOARD_ITEMS';\nexport const DEFAULT_STATE_DASHBOARDS = {\n  byId: null,\n  items: []\n};\nexport const EMPTY_DASHBOARD = {}; // reducer helper functions\n\nconst updateDashboardProp = ({\n  state,\n  dashboardId,\n  prop,\n  value\n}) => ({\n  byId: { ...state.byId,\n    [dashboardId]: { ...state.byId[dashboardId],\n      [prop]: value\n    }\n  },\n  items: state.items\n});\n/**\n * Reducer that computes and returns the new state based on the given action\n * @function\n * @param {Object} state The current state\n * @param {Object} action The action to be evaluated\n * @returns {Object}\n */\n\n\nexport default ((state = DEFAULT_STATE_DASHBOARDS, action) => {\n  switch (action.type) {\n    case SET_DASHBOARDS:\n      {\n        return {\n          byId: action.value,\n          items: []\n        };\n      }\n\n    case ADD_DASHBOARDS:\n      {\n        return { ...state,\n          byId: { ...state.byId,\n            ...action.value\n          }\n        };\n      }\n\n    case SET_DASHBOARD_STARRED:\n      {\n        return updateDashboardProp({\n          state,\n          dashboardId: action.dashboardId,\n          prop: 'starred',\n          value: action.value\n        });\n      }\n\n    case SET_DASHBOARD_DISPLAY_NAME:\n      {\n        return updateDashboardProp({\n          state,\n          dashboardId: action.dashboardId,\n          prop: 'displayName',\n          value: action.value\n        });\n      }\n\n    case SET_DASHBOARD_ITEMS:\n      {\n        return { ...state,\n          items: action.value\n        };\n      }\n\n    default:\n      return state;\n  }\n}); // root selector\n\nexport const sGetDashboardsRoot = state => state.dashboards; // selector level 1\n\n/**\n * Selector which returns a dashboard by id from the state object\n * If no matching dashboard is found it returns undefined\n * If dashboards.byId is null, then the dashboards api request\n * has not yet completed. If dashboards.byId is an empty object\n * then the dashboards api request is complete, but no dashboards\n * were returned\n *\n * @function\n * @param {Object} state The current state\n * @param {Number} id The id of the dashboard\n * @returns {Object | undefined}\n */\n\nexport const sGetDashboardById = (state, id) => orObject(sGetDashboardsRoot(state).byId)[id];\nexport const sDashboardsIsFetching = state => {\n  return sGetDashboardsRoot(state).byId === null;\n};\n/**\n * Selector which returns all dashboards (the byId object)\n *\n * @function\n * @param {Object} state The current state\n * @returns {Object | undefined}\n */\n\nexport const sGetAllDashboards = state => orObject(sGetDashboardsRoot(state).byId);\n/**\n * Selector which returns the current dashboard items\n *\n * @function\n * @param {Object} state The current state\n * @returns {Array}\n */\n\nexport const sGetDashboardItems = state => sGetDashboardsRoot(state).items; // selector level 2\n\nexport const sGetStarredDashboards = state => Object.values(sGetAllDashboards(state)).filter(dashboard => dashboard.starred === true);\nexport const sGetUnstarredDashboards = state => Object.values(sGetAllDashboards(state)).filter(dashboard => dashboard.starred === false); // selector level 3\n\nexport const sGetStarredDashboardIds = state => {\n  return sGetStarredDashboards(state).map(dashboard => dashboard.id);\n};\nexport const sGetUnstarredDashboardIds = state => sGetUnstarredDashboards(state).map(dashboard => dashboard.id);\nexport const sGetDashboardsSortedByStarred = state => [...arraySort(sGetStarredDashboards(state), 'ASC', 'displayName'), ...arraySort(sGetUnstarredDashboards(state), 'ASC', 'displayName')]; // utils\n\n/**\n * Returns the array of dashboards, customized for ui\n * @function\n * @param {Array} data The original dashboard list\n * @returns {Array}\n */\n\nexport const getCustomDashboards = data => arrayFrom(data).map(d => ({\n  id: d.id,\n  name: d.name,\n  displayName: d.displayName,\n  description: d.description,\n  displayDescription: d.displayDescription,\n  starred: d.favorite,\n  owner: d.user.name,\n  created: d.created.split('T').join(' ').substr(0, 16),\n  lastUpdated: d.lastUpdated.split('T').join(' ').substr(0, 16),\n  access: d.access,\n  numberOfItems: orArray(d.dashboardItems).length,\n  dashboardItems: convertBackendItemsToUi(d.dashboardItems)\n}));","/** @module reducers/selected */\nimport { combineReducers } from 'redux';\nimport { validateReducer } from '../modules/util';\nexport const SET_SELECTED_ID = 'SET_SELECTED_ID';\nexport const SET_SELECTED_ISLOADING = 'SET_SELECTED_ISLOADING';\nexport const SET_SELECTED_SHOWDESCRIPTION = 'SET_SELECTED_SHOWDESCRIPTION';\nexport const SET_SELECTED_ITEM_ACTIVE_TYPE = 'SET_SELECTED_ITEM_ACTIVE_TYPE';\nexport const CLEAR_SELECTED_ITEM_ACTIVE_TYPES = 'CLEAR_SELECTED_ITEM_ACTIVE_TYPES';\nexport const DEFAULT_STATE_SELECTED_ID = null;\nexport const DEFAULT_STATE_SELECTED_ISLOADING = false;\nexport const DEFAULT_STATE_SELECTED_SHOWDESCRIPTION = false;\nexport const DEFAULT_STATE_SELECTED_ITEM_ACTIVE_TYPES = {};\nexport const NON_EXISTING_DASHBOARD_ID = '0';\n/**\n * Reducer functions that computes and returns the new state based on the given action\n * @function\n * @param {Object} state The current state\n * @param {Object} action The action to be evaluated\n */\n\nconst id = (state = DEFAULT_STATE_SELECTED_ID, action) => {\n  switch (action.type) {\n    case SET_SELECTED_ID:\n      return validateReducer(action.value, DEFAULT_STATE_SELECTED_ID);\n\n    default:\n      return state;\n  }\n};\n\nconst isLoading = (state = DEFAULT_STATE_SELECTED_ISLOADING, action) => {\n  switch (action.type) {\n    case SET_SELECTED_ISLOADING:\n      return validateReducer(action.value, DEFAULT_STATE_SELECTED_ISLOADING);\n\n    default:\n      return state;\n  }\n};\n\nconst showDescription = (state = DEFAULT_STATE_SELECTED_SHOWDESCRIPTION, action) => {\n  switch (action.type) {\n    case SET_SELECTED_SHOWDESCRIPTION:\n      return validateReducer(action.value, DEFAULT_STATE_SELECTED_SHOWDESCRIPTION);\n\n    default:\n      return state;\n  }\n};\n\nconst itemActiveTypes = (state = DEFAULT_STATE_SELECTED_ITEM_ACTIVE_TYPES, action) => {\n  switch (action.type) {\n    case SET_SELECTED_ITEM_ACTIVE_TYPE:\n      {\n        return { ...state,\n          [action.id]: action.activeType\n        };\n      }\n\n    case CLEAR_SELECTED_ITEM_ACTIVE_TYPES:\n      {\n        return DEFAULT_STATE_SELECTED_ITEM_ACTIVE_TYPES;\n      }\n\n    default:\n      return state;\n  }\n};\n\nexport default combineReducers({\n  id,\n  isLoading,\n  showDescription,\n  itemActiveTypes\n}); // Selectors\n\nexport const sGetSelectedRoot = state => state.selected;\nexport const sGetSelectedId = state => sGetSelectedRoot(state).id;\nexport const sGetSelectedIsLoading = state => sGetSelectedRoot(state).isLoading;\nexport const sGetSelectedShowDescription = state => sGetSelectedRoot(state).showDescription;\nexport const sGetSelectedItemActiveType = (state, id) => sGetSelectedRoot(state).itemActiveTypes[id];","import { getInstance } from 'd2';\nexport const NAMESPACE = 'dashboard';\nexport const hasNamespace = async (d2) => await d2.currentUser.dataStore.has(NAMESPACE);\nexport const getNamespace = async (d2, hasNamespace) => hasNamespace ? await d2.currentUser.dataStore.get(NAMESPACE) : await d2.currentUser.dataStore.create(NAMESPACE);\nexport const apiPostUserDataStoreValue = async (key, value) => {\n  const d2 = await getInstance();\n  const ns = await getNamespace(d2, hasNamespace);\n  ns.set(key, value);\n};\nexport const apiGetUserDataStoreValue = async (key, defaultValue) => {\n  const d2 = await getInstance();\n  const namespace = await getNamespace(d2, await hasNamespace(d2));\n  const hasKey = namespace?.keys?.find(k => k === key);\n\n  if (hasKey) {\n    return await namespace.get(key);\n  } else {\n    await apiPostUserDataStoreValue(key, defaultValue, namespace);\n    console.log('(These errors to /userDataStore can be ignored)');\n    return defaultValue;\n  }\n};","import { apiGetUserDataStoreValue, apiPostUserDataStoreValue } from './userDataStore';\nimport { DEFAULT_STATE_CONTROLBAR_ROWS } from '../reducers/controlBar';\nconst KEY_CONTROLBAR_ROWS = 'controlBarRows';\nexport const apiGetControlBarRows = async () => await apiGetUserDataStoreValue(KEY_CONTROLBAR_ROWS, DEFAULT_STATE_CONTROLBAR_ROWS);\nexport const apiPostControlBarRows = async (value) => await apiPostUserDataStoreValue(KEY_CONTROLBAR_ROWS, value);","import { SET_CONTROLBAR_USER_ROWS } from '../reducers/controlBar';\nimport { apiGetControlBarRows } from '../api/controlBar'; // actions\n\nexport const acSetControlBarUserRows = rows => ({\n  type: SET_CONTROLBAR_USER_ROWS,\n  value: rows\n}); // thunks\n\nexport const tSetControlBarRows = () => async dispatch => {\n  const onSuccess = rows => {\n    dispatch(acSetControlBarUserRows(rows));\n  };\n\n  const onError = error => {\n    console.log('Error (apiGetControlBarRows): ', error);\n    return error;\n  };\n\n  try {\n    const controlBarRows = await apiGetControlBarRows();\n    return onSuccess(controlBarRows);\n  } catch (err) {\n    return onError(err);\n  }\n};","import React, { useState, useEffect, createRef } from 'react';\nimport { connect } from 'react-redux';\nimport { Link, withRouter } from 'react-router-dom';\nimport cx from 'classnames';\nimport arraySort from 'd2-utilizr/lib/arraySort';\nimport PropTypes from 'prop-types';\nimport ControlBar, { DRAG_HANDLE_HEIGHT } from './ControlBar';\nimport Chip from './DashboardItemChip';\nimport AddCircleIcon from '../../icons/AddCircle';\nimport Filter from './Filter';\nimport ShowMoreButton from './ShowMoreButton';\nimport { FIRST_ROW_PADDING_HEIGHT, MIN_ROW_COUNT, getRowsHeight, getControlBarHeight, getNumRowsFromHeight } from './controlBarDimensions';\nimport { useWindowDimensions } from '../WindowDimensionsProvider';\nimport { sGetDashboardsFilter } from '../../reducers/dashboardsFilter';\nimport { sGetControlBarUserRows } from '../../reducers/controlBar';\nimport { sGetAllDashboards } from '../../reducers/dashboards';\nimport { sGetSelectedId } from '../../reducers/selected';\nimport { acSetControlBarUserRows } from '../../actions/controlBar';\nimport { apiPostControlBarRows } from '../../api/controlBar';\nimport isSmallScreen from '../../modules/isSmallScreen';\nimport classes from './styles/DashboardsBar.module.css';\nexport const MAX_ROW_COUNT = 10;\n\nconst DashboardsBar = ({\n  userRows,\n  onChangeHeight,\n  history,\n  dashboards,\n  selectedId,\n  filterText\n}) => {\n  const [rows, setRows] = useState(userRows);\n  const {\n    width\n  } = useWindowDimensions();\n  const ref = createRef();\n  useEffect(() => {\n    setRows(userRows);\n  }, [userRows]);\n\n  const isMaxHeight = () => rows === MAX_ROW_COUNT;\n\n  const adjustHeight = newHeight => {\n    const newRows = Math.max(MIN_ROW_COUNT, getNumRowsFromHeight(newHeight - 52) // don't rush the transition to a bigger row count\n    );\n\n    if (newRows !== rows) {\n      onChangeHeight(Math.min(newRows, MAX_ROW_COUNT));\n    }\n  };\n\n  const onEndDrag = () => apiPostControlBarRows(rows);\n\n  const scrollToTop = () => {\n    if (isMaxHeight()) {\n      ref.current.scroll(0, 0);\n    }\n  };\n\n  const toggleMaxHeight = () => {\n    const newRows = isMaxHeight() ? userRows : MAX_ROW_COUNT;\n    scrollToTop();\n    setRows(newRows);\n  };\n\n  const cancelMaxHeight = () => {\n    scrollToTop();\n    setRows(userRows);\n  };\n\n  const onSelectDashboard = () => {\n    const id = getFilteredDashboards()[0]?.id;\n\n    if (id) {\n      history.push(id);\n    }\n  };\n\n  const getFilteredDashboards = () => {\n    const filteredDashboards = arraySort(Object.values(dashboards).filter(d => d.displayName.toLowerCase().includes(filterText.toLowerCase())), 'ASC', 'displayName');\n    return [...filteredDashboards.filter(d => d.starred), ...filteredDashboards.filter(d => !d.starred)];\n  };\n\n  const containerClass = cx(classes.container, isMaxHeight() ? classes.expanded : classes.collapsed);\n  const viewableRows = isSmallScreen(width) && !isMaxHeight() ? MIN_ROW_COUNT : rows;\n  const rowHeightProp = {\n    height: getRowsHeight(viewableRows) + FIRST_ROW_PADDING_HEIGHT\n  };\n\n  const getDashboardChips = () => {\n    const chips = getFilteredDashboards().map(dashboard => <Chip key={dashboard.id} label={dashboard.displayName} starred={dashboard.starred} dashboardId={dashboard.id} selected={dashboard.id === selectedId} onClick={cancelMaxHeight} />);\n\n    if (isSmallScreen(width)) {\n      const chipContainerClasses = cx(classes.chipContainer, isMaxHeight() ? classes.expanded : classes.collapsed);\n      return <div className={chipContainerClasses} style={rowHeightProp}>\n                    {chips}\n                </div>;\n    } else {\n      return chips;\n    }\n  };\n\n  return <>\n            <ControlBar height={getControlBarHeight(viewableRows)} onChangeHeight={!isSmallScreen(width) ? adjustHeight : null} onEndDrag={onEndDrag}>\n                <div className={containerClass} ref={ref} style={rowHeightProp}>\n                    <div className={classes.controls}>\n                        <Link className={classes.newLink} to={'/new'} data-test=\"link-new-dashboard\">\n                            <AddCircleIcon />\n                        </Link>\n                        <Filter onKeypressEnter={onSelectDashboard} onToggleMaxHeight={toggleMaxHeight} isMaxHeight={isMaxHeight()} />\n                    </div>\n                    {getDashboardChips()}\n                </div>\n                <ShowMoreButton onClick={toggleMaxHeight} isMaxHeight={isMaxHeight()} disabled={userRows === MAX_ROW_COUNT} />\n            </ControlBar>\n            <div style={{\n      marginTop: getControlBarHeight(isSmallScreen(width) && !isMaxHeight() ? MIN_ROW_COUNT : userRows) + DRAG_HANDLE_HEIGHT\n    }} />\n        </>;\n};\n\nDashboardsBar.propTypes = {\n  dashboards: PropTypes.object,\n  filterText: PropTypes.string,\n  history: PropTypes.object,\n  selectedId: PropTypes.string,\n  userRows: PropTypes.number,\n  onChangeHeight: PropTypes.func\n};\n\nconst mapStateToProps = state => ({\n  dashboards: sGetAllDashboards(state),\n  filterText: sGetDashboardsFilter(state),\n  selectedId: sGetSelectedId(state),\n  userRows: sGetControlBarUserRows(state)\n});\n\nconst mapDispatchToProps = {\n  onChangeHeight: acSetControlBarUserRows\n};\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(DashboardsBar));","import React from 'react';\nimport { colors } from '@dhis2/ui';\nimport PropTypes from 'prop-types';\n\nconst NoContentMessage = ({\n  text\n}) => <div style={{\n  padding: '50px 10px',\n  textAlign: 'center',\n  fontSize: '15px',\n  fontWeight: 500,\n  color: colors.grey600\n}}>\n        {text}\n    </div>;\n\nNoContentMessage.propTypes = {\n  text: PropTypes.string\n};\nexport default NoContentMessage;","import React from 'react';\nimport { colors } from '@dhis2/ui';\nexport const ThreeDots = () => <svg height=\"18\" viewBox=\"0 0 18 18\" width=\"18\" xmlns=\"http://www.w3.org/2000/svg\">\n        <path d=\"m4 7.5c-.83 0-1.5.67-1.5 1.5s.67 1.5 1.5 1.5 1.5-.67 1.5-1.5-.67-1.5-1.5-1.5zm10 0c-.83 0-1.5.67-1.5 1.5s.67 1.5 1.5 1.5 1.5-.67 1.5-1.5-.67-1.5-1.5-1.5zm-5 0c-.83 0-1.5.67-1.5 1.5s.67 1.5 1.5 1.5 1.5-.67 1.5-1.5-.67-1.5-1.5-1.5z\" fill=\"#6e7a8a\" />\n    </svg>;\nexport const SpeechBubble = () => <svg height=\"20\" viewBox=\"0 0 20 20\" width=\"20\" xmlns=\"http://www.w3.org/2000/svg\" style={{\n  margin: '3px 2px 0 2px'\n}} // Temporary fix for the misaligned icon, should be removed once the icon is replaced\n>\n        <path d=\"m20 2h-16c-1.1 0-1.99.9-1.99 2l-.01 18 4-4h14c1.1 0 2-.9 2-2v-12c0-1.1-.9-2-2-2zm-2 12h-12v-2h12zm0-3h-12v-2h12zm0-3h-12v-2h12z\" fill=\"#6e7a8a\" fillRule=\"evenodd\" transform=\"translate(-2 -2)\" />\n    </svg>;\nexport const Warning = () => <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24\" viewBox=\"0 0 24 24\" width=\"24\" fill={colors.grey600}>\n        <path d=\"M0 0h24v24H0z\" fill=\"none\" />\n        <path d=\"M1 21h22L12 2 1 21zm12-3h-2v-2h2v2zm0-4h-2v-4h2v4z\" />\n    </svg>;\nexport const Fullscreen = () => <svg height=\"16\" viewBox=\"0 0 16 16\" width=\"16\" xmlns=\"http://www.w3.org/2000/svg\">\n        <path d=\"m6.85355339 9.14644661c.17356635.17356635.1928515.44299075.05785545.63785889l-.05785545.06924789-4.14755339 4.14644661h2.794c.24545989 0 .44960837.1768752.49194433.4101244l.00805567.0898756c0 .2454599-.17687516.4496084-.41012437.4919443l-.08987563.0080557h-4c-.24545989 0-.44960837-.1768752-.49194433-.4101244l-.00805567-.0898756v-4c0-.2761424.22385763-.5.5-.5.24545989 0 .44960837.1768752.49194433.4101244l.00805567.0898756v2.792l4.14644661-4.14555339c.19526215-.19526215.51184463-.19526215.70710678 0zm6.14644661-2.14644661v6h-6v-1h5v-5zm-4-4v1h-5v5h-1v-6zm5.5-2c.2454599 0 .4496084.17687516.4919443.41012437l.0080557.08987563v4c0 .27614237-.2238576.5-.5.5-.2454599 0-.4496084-.17687516-.4919443-.41012437l-.0080557-.08987563v-2.794l-4.14644661 4.14755339c-.19526215.19526215-.51184463.19526215-.70710678 0-.17356635-.17356635-.1928515-.44299075-.05785545-.63785889l.05785545-.06924789 4.14655339-4.14744661-2.793.001c-.2454599 0-.4496084-.17687516-.4919443-.41012437l-.0080557-.08987563c0-.24545989.1768752-.44960837.4101244-.49194433l.0898756-.00805567z\" fill=\"inherit\" />\n    </svg>;\nexport const ExitFullscreen = () => <svg height=\"16\" viewBox=\"0 0 16 16\" width=\"16\" xmlns=\"http://www.w3.org/2000/svg\">\n        <path d=\"m6.5 9c.24545989 0 .44960837.17687516.49194433.41012437l.00805567.08987563v4c0 .2761424-.22385763.5-.5.5-.24545989 0-.44960837-.1768752-.49194433-.4101244l-.00805567-.0898756v-2.794l-3.64644661 3.6475534c-.19526215.1952621-.51184463.1952621-.70710678 0-.17356635-.1735664-.1928515-.4429908-.05785545-.6378589l.05785545-.0692479 3.64555339-3.6464466h-2.792c-.24545989 0-.44960837-.17687516-.49194433-.41012437l-.00805567-.08987563c0-.24545989.17687516-.44960837.41012437-.49194433l.08987563-.00805567zm7.5-.5v5.5h-5.5v-1h4.5v-4.5zm-6.5-6.5v1h-4.5v4.5h-1v-5.5zm6.8535534-.35355339c.1735663.17356635.1928515.44299075.0578554.63785889l-.0578554.06924789-3.6475534 3.64644661h2.794c.2454599 0 .4496084.17687516.4919443.41012437l.0080557.08987563c0 .24545989-.1768752.44960837-.4101244.49194433l-.0898756.00805567h-4c-.24545989 0-.44960837-.17687516-.49194433-.41012437l-.00805567-.08987563v-4c0-.27614237.22385763-.5.5-.5.24545989 0 .44960837.17687516.49194433.41012437l.00805567.08987563v2.792l3.6464466-3.64555339c.1952622-.19526215.5118446-.19526215.7071068 0z\" fill=\"inherit\" />\n    </svg>;","export const RECEIVED_USER = 'RECEIVED_USER';\nexport const DEFAULT_STATE_USER = {\n  id: '',\n  username: '',\n  uiLocale: '',\n  isSuperuser: false\n};\nexport default ((state = DEFAULT_STATE_USER, action) => {\n  switch (action.type) {\n    case RECEIVED_USER:\n      {\n        return fromD2ToUserObj(action.value);\n      }\n\n    default:\n      return state;\n  }\n});\n\nfunction fromD2ToUserObj(d2Object) {\n  return {\n    id: d2Object.id,\n    username: d2Object.username,\n    uiLocale: d2Object.settings.keyUiLocale,\n    isSuperuser: d2Object.authorities.has('ALL')\n  };\n} // selectors\n\n\nexport const sGetUserId = state => state.user.id;\nexport const sGetUserUsername = state => state.user.username;\nexport const sGetIsSuperuser = state => state.user.isSuperuser;\nexport const sGetUiLocale = state => state.user.uiLocale;","import { getDimensionById, DIMENSION_ID_PERIOD, DIMENSION_ID_ORGUNIT } from '@dhis2/analytics';\nexport const SET_DIMENSIONS = 'SET_DIMENSIONS';\nexport const DEFAULT_DIMENSIONS = [getDimensionById(DIMENSION_ID_PERIOD), getDimensionById(DIMENSION_ID_ORGUNIT)];\nexport default ((state = DEFAULT_DIMENSIONS, action) => {\n  switch (action.type) {\n    case SET_DIMENSIONS:\n      {\n        return [...DEFAULT_DIMENSIONS, ...action.value];\n      }\n\n    default:\n      return state;\n  }\n});\nexport const sGetDimensions = state => state.dimensions;","import { sGetDimensions } from './dimensions';\nimport { createSelector } from 'reselect';\nexport const CLEAR_ITEM_FILTERS = 'CLEAR_ITEM_FILTERS';\nexport const SET_ITEM_FILTERS = 'SET_ITEM_FILTERS';\nexport const ADD_ITEM_FILTER = 'ADD_ITEM_FILTER';\nexport const REMOVE_ITEM_FILTER = 'REMOVE_ITEM_FILTER';\nexport const DEFAULT_STATE_ITEM_FILTERS = {};\nexport default ((state = DEFAULT_STATE_ITEM_FILTERS, action) => {\n  switch (action.type) {\n    case ADD_ITEM_FILTER:\n      {\n        return { ...state,\n          [action.filter.id]: action.filter.value\n        };\n      }\n\n    case REMOVE_ITEM_FILTER:\n      {\n        const newState = { ...state\n        };\n        delete newState[action.id];\n        return newState;\n      }\n\n    case SET_ITEM_FILTERS:\n      {\n        return action.filters;\n      }\n\n    case CLEAR_ITEM_FILTERS:\n      {\n        return DEFAULT_STATE_ITEM_FILTERS;\n      }\n\n    default:\n      return state;\n  }\n}); // selectors\n\nexport const sGetItemFiltersRoot = state => state.itemFilters; // simplify the filters structure to:\n// [{ id: 'pe', name: 'Period', values: [{ id: 2019: name: '2019' }, {id: 'LAST_MONTH', name: 'Last month' }]}, ...]\n\nexport const sGetNamedItemFilters = createSelector([sGetItemFiltersRoot, sGetDimensions], (filters, dimensions) => Object.keys(filters).reduce((arr, id) => {\n  arr.push({\n    id: id,\n    name: dimensions.find(dimension => dimension.id === id).name,\n    values: filters[id].map(value => ({\n      id: value.id,\n      name: value.displayName || value.name\n    }))\n  });\n  return arr;\n}, []));","import { ADD_ITEM_FILTER, REMOVE_ITEM_FILTER, SET_ITEM_FILTERS, CLEAR_ITEM_FILTERS } from '../reducers/itemFilters';\nexport const FILTER_ORG_UNIT = 'ou'; // actions\n\nexport const acAddItemFilter = filter => ({\n  type: ADD_ITEM_FILTER,\n  filter\n});\nexport const acRemoveItemFilter = id => ({\n  type: REMOVE_ITEM_FILTER,\n  id\n});\nexport const acClearItemFilters = () => ({\n  type: CLEAR_ITEM_FILTERS\n});\nexport const acSetItemFilters = filters => ({\n  type: SET_ITEM_FILTERS,\n  filters\n});","import update from 'immutability-helper';\nimport { arrayToIdMap } from '../modules/util';\nexport const RECEIVED_MESSAGES = 'RECEIVED_MESSAGES';\nexport default ((state = {}, action) => {\n  switch (action.type) {\n    case RECEIVED_MESSAGES:\n      {\n        const conversations = arrayToIdMap(action.value);\n        const newState = update(state, {\n          $merge: conversations\n        });\n        return newState;\n      }\n\n    default:\n      return state;\n  }\n}); // selectors\n\nexport const sGetMessagesRoot = state => state.messages;","export const messageConversationsQuery = {\n  resource: 'messageConversations',\n  params: {\n    fields: 'id,messageCount,lastUpdated,messageType,displayName,read,messages[id,read,sender[id,displayName],text,lastUpdated]',\n    order: 'read:asc',\n    pageSize: 200\n  }\n};\nexport const getMessages = async dataEngine => {\n  try {\n    const {\n      messageConversations\n    } = await dataEngine.query({\n      messageConversations: messageConversationsQuery\n    });\n    return messageConversations.messageConversations;\n  } catch (error) {\n    console.log('Error:', error);\n  }\n};","import { RECEIVED_MESSAGES } from '../../../reducers/messages';\nimport { getMessages } from '../../../api/messages';\n\nconst onError = (action, error) => {\n  console.log(`Error in action ${action}: ${error}`);\n  return error;\n};\n\nexport const receivedMessages = value => ({\n  type: RECEIVED_MESSAGES,\n  value\n});\nexport const tGetMessages = dataEngine => async dispatch => {\n  try {\n    const messageConversations = await getMessages(dataEngine);\n    return dispatch(receivedMessages(messageConversations));\n  } catch (err) {\n    return onError('Get Messages', err);\n  }\n};","export const SET_ALERT_MESSAGE = 'SET_ALERT_MESSAGE';\nexport const CLEAR_ALERT_MESSAGE = 'CLEAR_ALERT_MESSAGE';\nexport const DEFAULT_STATE_ALERT = null;\nexport default ((state = DEFAULT_STATE_ALERT, action) => {\n  switch (action.type) {\n    case SET_ALERT_MESSAGE:\n      {\n        return action.value;\n      }\n\n    case CLEAR_ALERT_MESSAGE:\n      {\n        return DEFAULT_STATE_ALERT;\n      }\n\n    default:\n      return state;\n  }\n}); // selectors\n\nexport const sGetAlertMessage = state => state.alert;","import { SET_ALERT_MESSAGE, CLEAR_ALERT_MESSAGE } from '../reducers/alert';\nexport const acSetAlertMessage = value => ({\n  type: SET_ALERT_MESSAGE,\n  value\n});\nexport const acClearAlertMessage = () => ({\n  type: CLEAR_ALERT_MESSAGE\n});","import { orObject } from '../modules/util';\nimport objectClean from 'd2-utilizr/lib/objectClean';\n/** @module reducers/visualizations */\n\nexport const ADD_VISUALIZATION = 'ADD_VISUALIZATION';\nexport const SET_ACTIVE_VISUALIZATION_TYPE = 'SET_ACTIVE_VISUALIZATION_TYPE';\nexport const CLEAR_VISUALIZATIONS = 'CLEAR_VISUALIZATIONS';\nexport const DEFAULT_STATE_VISUALIZATIONS = {};\n\nconst isEmpty = p => p === undefined || p === null;\n\nexport default ((state = DEFAULT_STATE_VISUALIZATIONS, action) => {\n  switch (action.type) {\n    case ADD_VISUALIZATION:\n      {\n        return { ...state,\n          [action.value.id]: objectClean({ ...orObject(state[action.value.id]),\n            ...action.value\n          }, isEmpty)\n        };\n      }\n\n    case CLEAR_VISUALIZATIONS:\n      {\n        return DEFAULT_STATE_VISUALIZATIONS;\n      }\n\n    default:\n      return state;\n  }\n}); // root selector\n\nexport const sGetVisualizationsRoot = state => state.visualizations; // selectors level 1\n\nexport const sGetVisualization = (state, id) => {\n  return sGetVisualizationsRoot(state)[id];\n};","import { ADD_VISUALIZATION, CLEAR_VISUALIZATIONS } from '../reducers/visualizations';\nexport const acAddVisualization = value => ({\n  type: ADD_VISUALIZATION,\n  value\n});\nexport const acClearVisualizations = () => ({\n  type: CLEAR_VISUALIZATIONS\n});","import { getInstance } from 'd2';\nimport arrayClean from 'd2-utilizr/lib/arrayClean';\nimport { getEndPointName, MAP } from '../modules/itemTypes';\nimport { getVisualizationId } from '../modules/item'; // Id, name\n\nexport const getIdNameFields = ({\n  rename\n} = {}) => ['id', `${rename ? 'displayName~rename(name)' : 'name,displayName'}`]; // Item\n\nexport const getItemFields = () => ['dimensionItem~rename(id)', 'displayName~rename(name)', 'dimensionItemType']; // Dimension\n\nexport const getDimensionFields = ({\n  withItems\n}) => arrayClean(['dimension', 'legendSet[id]', 'filter', 'programStage', withItems ? `items[${getItemFields().join(',')}]` : ``]); // Axis\n\nexport const getAxesFields = ({\n  withItems\n}) => [`columns[${getDimensionFields({\n  withItems\n}).join(',')}]`, `rows[${getDimensionFields({\n  withItems\n}).join(',')}]`, `filters[${getDimensionFields({\n  withItems\n}).join(',')}]`]; // Favorite\n\nexport const getFavoriteFields = ({\n  withDimensions,\n  withOptions\n}) => {\n  return arrayClean([`${getIdNameFields({\n    rename: true\n  }).join(',')}`, 'displayDescription~rename(description)', withDimensions ? `${getAxesFields({\n    withItems: true\n  }).join(',')}` : ``, withOptions ? ['*', '!attributeDimensions', '!attributeValues', '!category', '!categoryDimensions', '!categoryOptionGroupSetDimensions', '!columnDimensions', '!dataDimensionItems', '!dataElementDimensions', '!dataElementGroupSetDimensions', '!filterDimensions', '!itemOrganisationUnitGroups', '!lastUpdatedBy', '!organisationUnitGroupSetDimensions', '!organisationUnitLevels', '!organisationUnits', '!programIndicatorDimensions', '!relativePeriods', '!reportParams', '!rowDimensions', '!translations', '!userOrganisationUnit', '!userOrganisationUnitChildren', '!userOrganisationUnitGrandChildren'].join(',') : '']);\n};\nexport const getFavoritesFields = ({\n  withDimensions\n}) => [`reportTable[${getFavoriteFields({\n  withDimensions\n}).join(',')}]`, `chart[${['type', ...getFavoriteFields({\n  withDimensions\n})].join(',')}]`, `map[${getFavoriteFields({\n  withDimensions\n}).join(',')}]`, `eventReport[${getFavoriteFields({\n  withDimensions\n}).join(',')}]`, `eventChart[${getFavoriteFields({\n  withDimensions\n}).join(',')}]`]; // List item\n\nexport const getListItemFields = () => [`reports[${['type', ...getIdNameFields({\n  rename: true\n})].join(',')}]`, `resources[${getIdNameFields({\n  rename: true\n}).join(',')}]`, `users[${getIdNameFields({\n  rename: true\n}).join(',')}]`]; // Map\n\nexport const getMapFields = () => [`${getIdNameFields({\n  rename: true\n}).join(',')}`, 'user,longitude,latitude,zoom,basemap', `mapViews[${getFavoriteFields({\n  withDimensions: true,\n  withOptions: true\n})}]`]; // Api\n\nexport const apiFetchVisualization = async item => {\n  const id = getVisualizationId(item);\n  const fields = item.type === MAP ? getMapFields() : getFavoriteFields({\n    withDimensions: true,\n    withOptions: true\n  });\n  const d2 = await getInstance();\n  return await d2.Api.getApi().get(`${getEndPointName(item.type)}/${id}`, {\n    fields\n  });\n};","import arrayClean from 'd2-utilizr/lib/arrayClean';\nimport { getListItemFields, getFavoritesFields, getIdNameFields } from './metadata'; // Helper functions\n\nexport const onError = error => console.log('Error: ', error); // Dashboard item\n\nexport const getDashboardItemsFields = ({\n  withFavorite\n} = {}) => arrayClean(['id', 'type', 'shape', 'x', 'y', 'width~rename(w)', 'height~rename(h)', 'messages', 'text', 'appKey', `${getListItemFields().join(',')}`, withFavorite ? `${getFavoritesFields({\n  withDimensions: withFavorite.withDimensions\n}).join(',')}` : ``]); // Dashboard\n\nexport const getDashboardFields = ({\n  withItems,\n  withFavorite\n} = {}) => arrayClean([`${getIdNameFields().join(',')}`, 'description', 'displayDescription', 'favorite', `user[${getIdNameFields({\n  rename: true\n}).join(',')}]`, 'created', 'lastUpdated', 'access', 'href', // needed for d2-ui-translations-dialog, since we don't pass a d2 Model anymore\nwithItems ? `dashboardItems[${getDashboardItemsFields({\n  withFavorite\n}).join(',')}]` : ``]);","import arrayClean from 'd2-utilizr/lib/arrayClean';\nimport { onError, getDashboardFields } from './index';\nexport const dashboardsQuery = {\n  resource: 'dashboards',\n  params: {\n    fields: [getDashboardFields(), 'dashboardItems[id]'].join(','),\n    paging: false\n  }\n};\nexport const dashboardQuery = {\n  resource: 'dashboards',\n  id: ({\n    id\n  }) => id,\n  params: {\n    fields: arrayClean(getDashboardFields({\n      withItems: true,\n      withFavorite: {\n        withDimensions: false\n      }\n    })).join(',')\n  }\n};\nexport const starDashboardMutation = {\n  type: 'create',\n  resource: 'dashboards',\n  // TODO create mutation does not accept the id function\n  // we must use a workaround until dataEngine supports dynamic resource/path\n  id: ({\n    id\n  }) => `${id}/favorite`\n};\nexport const unstarDashboardMutation = {\n  type: 'delete',\n  resource: 'dashboards',\n  id: ({\n    id\n  }) => `${id}/favorite`\n};\nexport const deleteDashboardMutation = {\n  type: 'delete',\n  resource: 'dashboards',\n  id: ({\n    id\n  }) => id\n}; // Get \"all\" dashboards on startup\n\nexport const apiFetchDashboards = async dataEngine => {\n  try {\n    const dashboardsData = await dataEngine.query({\n      dashboards: dashboardsQuery\n    });\n    return dashboardsData.dashboards.dashboards;\n  } catch (error) {\n    onError(error);\n  }\n}; // Get more info about selected dashboard\n\nexport const apiFetchDashboard = async (dataEngine, id) => {\n  try {\n    const dashboardData = await dataEngine.query({\n      dashboard: dashboardQuery\n    }, {\n      variables: {\n        id\n      }\n    });\n    return dashboardData.dashboard;\n  } catch (error) {\n    onError(error);\n  }\n}; // Star dashboard\n\nexport const apiStarDashboard = async (dataEngine, id, isStarred) => {\n  try {\n    if (isStarred) {\n      await dataEngine.mutate(starDashboardMutation, {\n        variables: {\n          id\n        }\n      });\n    } else {\n      await dataEngine.mutate(unstarDashboardMutation, {\n        variables: {\n          id\n        }\n      });\n    }\n  } catch (error) {\n    onError(error);\n  }\n};\nexport const apiDeleteDashboard = async (dataEngine, id) => {\n  try {\n    await dataEngine.mutate(deleteDashboardMutation, {\n      variables: {\n        id\n      }\n    });\n  } catch (error) {\n    onError(error);\n  }\n};","import { apiGetUserDataStoreValue, apiPostUserDataStoreValue } from './userDataStore';\nimport { DEFAULT_STATE_SELECTED_SHOWDESCRIPTION } from '../reducers/selected';\nconst KEY_SHOW_DESCRIPTION = 'showDescription';\nexport const apiGetShowDescription = async () => await apiGetUserDataStoreValue(KEY_SHOW_DESCRIPTION, DEFAULT_STATE_SELECTED_SHOWDESCRIPTION);\nexport const apiPostShowDescription = async (value) => await apiPostUserDataStoreValue(KEY_SHOW_DESCRIPTION, value);","import i18n from '@dhis2/d2-i18n';\nimport { getCustomDashboards, sGetDashboardById } from '../reducers/dashboards';\nimport { SET_SELECTED_ID, SET_SELECTED_ISLOADING, SET_SELECTED_SHOWDESCRIPTION, SET_SELECTED_ITEM_ACTIVE_TYPE, CLEAR_SELECTED_ITEM_ACTIVE_TYPES, sGetSelectedIsLoading, sGetSelectedId } from '../reducers/selected';\nimport { sGetUserUsername } from '../reducers/user';\nimport { acSetDashboardItems, acAppendDashboards } from './dashboards';\nimport { acClearItemFilters } from './itemFilters';\nimport { tGetMessages } from '../components/Item/MessagesItem/actions';\nimport { acSetAlertMessage, acClearAlertMessage } from './alert';\nimport { acAddVisualization, acClearVisualizations } from './visualizations';\nimport { apiFetchDashboard } from '../api/dashboards';\nimport { storePreferredDashboardId } from '../api/localStorage';\nimport { apiGetShowDescription, apiPostShowDescription } from '../api/description';\nimport { withShape } from '../components/ItemGrid/gridUtil';\nimport { getVisualizationFromItem } from '../modules/item';\nimport { REPORT_TABLE, CHART, MAP, EVENT_REPORT, EVENT_CHART, MESSAGES } from '../modules/itemTypes'; // actions\n\nexport const acSetSelectedId = value => ({\n  type: SET_SELECTED_ID,\n  value\n});\nexport const acSetSelectedIsLoading = value => ({\n  type: SET_SELECTED_ISLOADING,\n  value\n});\nexport const acSetSelectedShowDescription = value => ({\n  type: SET_SELECTED_SHOWDESCRIPTION,\n  value\n});\nexport const acSetSelectedItemActiveType = (id, activeType) => {\n  const action = {\n    type: SET_SELECTED_ITEM_ACTIVE_TYPE,\n    id,\n    activeType\n  };\n  return action;\n};\nexport const acClearSelectedItemActiveTypes = () => ({\n  type: CLEAR_SELECTED_ITEM_ACTIVE_TYPES\n}); // thunks\n\nexport const tSetSelectedDashboardById = id => async (dispatch, getState, dataEngine) => {\n  dispatch(acSetSelectedIsLoading(true));\n  const alertTimeout = setTimeout(() => {\n    const name = sGetDashboardById(getState(), id)?.displayName;\n\n    if (sGetSelectedIsLoading(getState()) && name) {\n      dispatch(acSetAlertMessage(i18n.t('Loading dashboard – {{name}}', {\n        name\n      })));\n    }\n  }, 500);\n\n  const onSuccess = selected => {\n    dispatch(acAppendDashboards(selected));\n    const customDashboard = getCustomDashboards(selected)[0];\n    dispatch(acSetDashboardItems(withShape(customDashboard.dashboardItems)));\n    storePreferredDashboardId(sGetUserUsername(getState()), id);\n\n    if (id !== sGetSelectedId(getState())) {\n      dispatch(acClearItemFilters());\n      dispatch(acClearVisualizations());\n      dispatch(acClearSelectedItemActiveTypes());\n    }\n\n    customDashboard.dashboardItems.forEach(item => {\n      switch (item.type) {\n        case REPORT_TABLE:\n        case CHART:\n        case MAP:\n        case EVENT_REPORT:\n        case EVENT_CHART:\n          dispatch(acAddVisualization(getVisualizationFromItem(item)));\n          break;\n\n        case MESSAGES:\n          dispatch(tGetMessages(dataEngine));\n          break;\n\n        default:\n          break;\n      }\n    });\n    dispatch(acSetSelectedId(id));\n    dispatch(acSetSelectedIsLoading(false));\n    clearTimeout(alertTimeout);\n    dispatch(acClearAlertMessage());\n    return selected;\n  };\n\n  const onError = error => {\n    console.log('Error: ', error);\n    return error;\n  };\n\n  try {\n    const dashboard = await apiFetchDashboard(dataEngine, id);\n    return onSuccess(dashboard);\n  } catch (err) {\n    return onError(err);\n  }\n};\nexport const tSetShowDescription = () => async dispatch => {\n  const onSuccess = value => {\n    dispatch(acSetSelectedShowDescription(value));\n  };\n\n  const onError = error => {\n    console.log('Error (apiGetShowDescription): ', error);\n    return error;\n  };\n\n  try {\n    const showDescription = await apiGetShowDescription();\n    return onSuccess(showDescription);\n  } catch (err) {\n    return onError(err);\n  }\n};\nexport const tUpdateShowDescription = value => async dispatch => {\n  const onSuccess = () => {\n    dispatch(acSetSelectedShowDescription(value));\n  };\n\n  const onError = error => {\n    console.log('Error (apiGetShowDescription): ', error);\n    return error;\n  };\n\n  try {\n    await apiPostShowDescription(value);\n    return onSuccess();\n  } catch (err) {\n    return onError(err);\n  }\n};","export const getPreferredDashboardId = username => localStorage.getItem(`dhis2.dashboard.current.${username}`) || undefined;\nexport const storePreferredDashboardId = (username, dashboardId) => {\n  localStorage.setItem(`dhis2.dashboard.current.${username}`, dashboardId);\n};","import { SET_DASHBOARDS, ADD_DASHBOARDS, SET_DASHBOARD_STARRED, SET_DASHBOARD_DISPLAY_NAME, SET_DASHBOARD_ITEMS } from '../reducers/dashboards';\nimport { getCustomDashboards, sGetDashboardById, sGetDashboardsSortedByStarred } from '../reducers/dashboards';\nimport { NON_EXISTING_DASHBOARD_ID } from '../reducers/selected';\nimport { sGetUserUsername } from '../reducers/user';\nimport { tSetSelectedDashboardById, acSetSelectedId } from './selected';\nimport { apiFetchDashboards, apiStarDashboard, apiDeleteDashboard } from '../api/dashboards';\nimport { getPreferredDashboardId } from '../api/localStorage';\nimport { arrayToIdMap } from '../modules/util'; // actions\n\nexport const acSetDashboards = dashboards => ({\n  type: SET_DASHBOARDS,\n  value: arrayToIdMap(getCustomDashboards(dashboards))\n});\nexport const acAppendDashboards = dashboards => ({\n  type: ADD_DASHBOARDS,\n  value: arrayToIdMap(getCustomDashboards(dashboards))\n});\nexport const acSetDashboardStarred = (dashboardId, isStarred) => ({\n  type: SET_DASHBOARD_STARRED,\n  dashboardId: dashboardId,\n  value: isStarred\n});\nexport const acSetDashboardDisplayName = (dashboardId, value) => ({\n  type: SET_DASHBOARD_DISPLAY_NAME,\n  dashboardId,\n  value\n});\nexport const acSetDashboardItems = value => ({\n  type: SET_DASHBOARD_ITEMS,\n  value\n}); // thunks\n\nexport const tFetchDashboards = () => async (dispatch, getState, dataEngine) => {\n  const dashboards = await apiFetchDashboards(dataEngine);\n  dispatch(acSetDashboards(dashboards));\n};\nexport const tSelectDashboard = id => async (dispatch, getState) => {\n  const onError = error => {\n    console.log('Error (apiFetchDashboards): ', error);\n    return error;\n  };\n\n  try {\n    const state = getState();\n    let dashboardToSelect = null;\n\n    if (id) {\n      dashboardToSelect = sGetDashboardById(state, id) || null;\n    } else {\n      const preferredId = getPreferredDashboardId(sGetUserUsername(state));\n      const dash = sGetDashboardById(state, preferredId);\n      dashboardToSelect = preferredId && dash ? dash : sGetDashboardsSortedByStarred(state)[0];\n    }\n\n    if (dashboardToSelect) {\n      dispatch(tSetSelectedDashboardById(dashboardToSelect.id));\n    } else {\n      dispatch(acSetSelectedId(NON_EXISTING_DASHBOARD_ID));\n    }\n  } catch (err) {\n    return onError(err);\n  }\n};\nexport const tStarDashboard = (id, isStarred) => async (dispatch, getState, dataEngine) => {\n  const onSuccess = id => {\n    dispatch(acSetDashboardStarred(id, isStarred));\n    return id;\n  };\n\n  const onError = error => {\n    console.log('Error (apiStarDashboard): ', error);\n    return error;\n  };\n\n  try {\n    await apiStarDashboard(dataEngine, id, isStarred);\n    return onSuccess(id);\n  } catch (err) {\n    return onError(err);\n  }\n};\nexport const tDeleteDashboard = id => async (dispatch, getState, dataEngine) => {\n  try {\n    await apiDeleteDashboard(dataEngine, id);\n    await dispatch(tFetchDashboards());\n    return Promise.resolve();\n  } catch (err) {\n    console.log('Error (deleteDashboard): ', err);\n    return err;\n  }\n};","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport i18n from '@dhis2/d2-i18n';\nimport { Button, Modal, ModalTitle, ModalContent, ModalActions, ButtonStrip } from '@dhis2/ui';\nimport { PeriodDimension, DynamicDimension, OrgUnitDimension, DIMENSION_ID_PERIOD, DIMENSION_ID_ORGUNIT } from '@dhis2/analytics';\nimport { acAddItemFilter, acRemoveItemFilter } from '../../actions/itemFilters';\nimport { sGetItemFiltersRoot } from '../../reducers/itemFilters';\n\nconst FilterDialog = ({\n  displayNameProperty,\n  dimension,\n  initiallySelectedItems,\n  addItemFilter,\n  removeItemFilter,\n  onClose\n}, context) => {\n  const [filters, setFilters] = useState(initiallySelectedItems);\n\n  const onSelectItems = ({\n    dimensionId,\n    items\n  }) => {\n    setFilters({\n      [dimensionId]: items\n    });\n  };\n\n  const onDeselectItems = ({\n    dimensionId,\n    itemIdsToRemove\n  }) => {\n    const oldList = filters[dimensionId] || [];\n    const newList = oldList.filter(item => !itemIdsToRemove.includes(item.id));\n    setFilters({ ...filters,\n      [dimensionId]: newList\n    });\n  };\n\n  const onReorderItems = ({\n    dimensionId,\n    itemIds\n  }) => {\n    const oldList = filters[dimensionId] || [];\n    const reorderedList = itemIds.map(id => oldList.find(item => item.id === id));\n    setFilters({ ...filters,\n      [dimensionId]: reorderedList\n    });\n  };\n\n  const saveFilter = () => {\n    const id = dimension.id;\n    const filterItems = filters[id];\n\n    if (filterItems && filterItems.length) {\n      addItemFilter({\n        id,\n        value: [...filterItems]\n      });\n    } else {\n      removeItemFilter(id);\n    }\n\n    onClose(id);\n  };\n\n  const renderDialogContent = () => {\n    const commonProps = {\n      d2: context.d2,\n      onSelect: onSelectItems,\n      onDeselect: onDeselectItems,\n      onReorder: onReorderItems\n    };\n    const selectedItems = filters[dimension.id] || [];\n\n    switch (dimension.id) {\n      case DIMENSION_ID_PERIOD:\n        {\n          return <PeriodDimension selectedPeriods={selectedItems} onSelect={commonProps.onSelect} />;\n        }\n\n      case DIMENSION_ID_ORGUNIT:\n        return <OrgUnitDimension displayNameProperty={displayNameProperty} ouItems={selectedItems} {...commonProps} />;\n\n      default:\n        return <DynamicDimension selectedItems={selectedItems} dimensionId={dimension.id} onSelect={commonProps.onSelect} />;\n    }\n  };\n\n  return <>\n            {dimension.id && <Modal dataTest={`${dimension.id}-dimension-modal`} onClose={onClose} position=\"top\" large>\n                    <ModalTitle>{dimension.name}</ModalTitle>\n                    <ModalContent>{renderDialogContent()}</ModalContent>\n                    <ModalActions>\n                        <ButtonStrip>\n                            <Button secondary onClick={onClose}>\n                                {i18n.t('Cancel')}\n                            </Button>\n                            <Button primary onClick={saveFilter}>\n                                {i18n.t('Confirm')}\n                            </Button>\n                        </ButtonStrip>\n                    </ModalActions>\n                </Modal>}\n        </>;\n};\n\nFilterDialog.propTypes = {\n  addItemFilter: PropTypes.func,\n  dimension: PropTypes.object,\n  displayNameProperty: PropTypes.string,\n  initiallySelectedItems: PropTypes.object,\n  removeItemFilter: PropTypes.func,\n  onClose: PropTypes.func\n};\nFilterDialog.contextTypes = {\n  d2: PropTypes.object\n};\n\nconst mapStateToProps = state => ({\n  initiallySelectedItems: sGetItemFiltersRoot(state)\n});\n\nexport default connect(mapStateToProps, {\n  addItemFilter: acAddItemFilter,\n  removeItemFilter: acRemoveItemFilter\n})(FilterDialog);","export const SET_SETTINGS = 'SET_SETTINGS';\nexport const ADD_SETTINGS = 'ADD_SETTINGS';\nexport const DEFAULT_SETTINGS = {\n  keyDateFormat: 'yyyy-MM-dd',\n  keyAnalysisRelativePeriod: 'LAST_12_MONTHS',\n  keyAnalysisDigitGroupSeparator: 'SPACE',\n  displayNameProperty: 'displayName',\n  uiLocale: 'en',\n  rootOrganisationUnit: {},\n  keyGatherAnalyticalObjectStatisticsInDashboardViews: false\n};\nexport default ((state = DEFAULT_SETTINGS, action) => {\n  switch (action.type) {\n    case SET_SETTINGS:\n      {\n        return Object.assign({}, action.value);\n      }\n\n    case ADD_SETTINGS:\n      {\n        return { ...state,\n          ...action.value\n        };\n      }\n\n    default:\n      return state;\n  }\n}); // Selectors\n\nexport const sGetSettings = state => state.settings;\nexport const sGetSettingsDisplayNameProperty = state => sGetSettings(state).displayNameProperty;\nexport const sGetRootOrgUnit = state => sGetSettings(state).rootOrganisationUnit;\nexport const sGetRelativePeriod = state => sGetSettings(state).keyAnalysisRelativePeriod;\nexport const sGetUiLocale = state => sGetSettings(state).uiLocale;\nexport const sGatherAnalyticalObjectStatisticsInDashboardViews = state => sGetSettings(state).keyGatherAnalyticalObjectStatisticsInDashboardViews;","export const SET_ACTIVE_MODAL_DIMENSION = 'SET_ACTIVE_MODAL_DIMENSION';\nexport const CLEAR_ACTIVE_MODAL_DIMENSION = 'CLEAR_ACTIVE_MODAL_DIMENSION';\nexport const DEFAULT_STATE_ACTIVE_MODAL_DIMENSION = {};\nexport default ((state = DEFAULT_STATE_ACTIVE_MODAL_DIMENSION, action) => {\n  switch (action.type) {\n    case SET_ACTIVE_MODAL_DIMENSION:\n      {\n        return action.value;\n      }\n\n    case CLEAR_ACTIVE_MODAL_DIMENSION:\n      {\n        return DEFAULT_STATE_ACTIVE_MODAL_DIMENSION;\n      }\n\n    default:\n      return state;\n  }\n});\nexport const sGetActiveModalDimension = state => state.activeModalDimension;","import { SET_ACTIVE_MODAL_DIMENSION, CLEAR_ACTIVE_MODAL_DIMENSION } from '../reducers/activeModalDimension';\nexport const acSetActiveModalDimension = value => ({\n  type: SET_ACTIVE_MODAL_DIMENSION,\n  value\n});\nexport const acClearActiveModalDimension = () => ({\n  type: CLEAR_ACTIVE_MODAL_DIMENSION\n});","import React, { useState, useRef } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport ArrowDropDownIcon from '@material-ui/icons/ArrowDropDown';\nimport isEmpty from 'lodash/isEmpty';\nimport i18n from '@dhis2/d2-i18n';\nimport { DimensionsPanel } from '@dhis2/analytics';\nimport { Button, Popover } from '@dhis2/ui';\nimport FilterDialog from './FilterDialog';\nimport { sGetSettingsDisplayNameProperty } from '../../reducers/settings';\nimport { sGetActiveModalDimension } from '../../reducers/activeModalDimension';\nimport { sGetDimensions } from '../../reducers/dimensions';\nimport { sGetItemFiltersRoot } from '../../reducers/itemFilters';\nimport { acClearActiveModalDimension, acSetActiveModalDimension } from '../../actions/activeModalDimension';\nimport classes from './styles/FilterSelector.module.css';\n\nconst FilterSelector = props => {\n  const [showPopover, setShowPopover] = useState(false);\n  const ref = useRef(null);\n\n  const onCloseDialog = () => {\n    setShowPopover(false);\n    props.clearActiveModalDimension();\n  };\n\n  const selectDimension = id => {\n    props.setActiveModalDimension(props.dimensions.find(dimension => dimension.id === id));\n  };\n\n  return <>\n            <span className={classes.buttonContainer} ref={ref}>\n                <Button onClick={() => setShowPopover(true)}>\n                    {i18n.t('Add filter')}\n                    <ArrowDropDownIcon />\n                </Button>\n            </span>\n            {showPopover && <Popover onClickOutside={onCloseDialog} reference={ref} arrow={true} placement=\"bottom-start\" dataTest=\"dashboard-filter-popover\">\n                    <DimensionsPanel style={{\n        width: '320px'\n      }} dimensions={props.dimensions} onDimensionClick={selectDimension} selectedIds={Object.keys(props.initiallySelectedItems)} />\n                </Popover>}\n            {!isEmpty(props.dimension) ? <FilterDialog displayNameProperty={props.displayNameProperty} dimension={props.dimension} onClose={onCloseDialog} /> : null}\n        </>;\n};\n\nconst mapStateToProps = state => ({\n  displayNameProperty: sGetSettingsDisplayNameProperty(state),\n  dimension: sGetActiveModalDimension(state),\n  dimensions: sGetDimensions(state),\n  initiallySelectedItems: sGetItemFiltersRoot(state)\n});\n\nFilterSelector.propTypes = {\n  clearActiveModalDimension: PropTypes.func,\n  dimension: PropTypes.object,\n  dimensions: PropTypes.array,\n  displayNameProperty: PropTypes.string,\n  initiallySelectedItems: PropTypes.object,\n  setActiveModalDimension: PropTypes.func\n};\nexport default connect(mapStateToProps, {\n  clearActiveModalDimension: acClearActiveModalDimension,\n  setActiveModalDimension: acSetActiveModalDimension\n})(FilterSelector);","import React, { useState, createRef } from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport cx from 'classnames';\nimport { Link, Redirect } from 'react-router-dom';\nimport i18n from '@dhis2/d2-i18n';\nimport SharingDialog from '@dhis2/d2-ui-sharing-dialog';\nimport Star from '@material-ui/icons/Star';\nimport StarBorder from '@material-ui/icons/StarBorder';\nimport { Button, FlyoutMenu, Popover, MenuItem, colors } from '@dhis2/ui';\nimport { useWindowDimensions } from '../WindowDimensionsProvider';\nimport { ThreeDots } from '../Item/VisualizationItem/assets/icons';\nimport { orObject } from '../../modules/util';\nimport { tStarDashboard } from '../../actions/dashboards';\nimport { tUpdateShowDescription } from '../../actions/selected';\nimport FilterSelector from '../ItemFilter/FilterSelector';\nimport { sGetSelectedId, sGetSelectedShowDescription } from '../../reducers/selected';\nimport { sGetDashboardById, sGetDashboardItems, EMPTY_DASHBOARD } from '../../reducers/dashboards';\nimport isSmallScreen from '../../modules/isSmallScreen';\nimport classes from './styles/ViewTitleBar.module.css';\n\nconst ViewTitleBar = (props, context) => {\n  const [moreOptionsIsOpen, setMoreOptionsIsOpen] = useState(false);\n  const [sharingDialogIsOpen, setSharingDialogIsOpen] = useState(false);\n  const [redirectUrl, setRedirectUrl] = useState(null);\n  const {\n    width\n  } = useWindowDimensions();\n  const {\n    id,\n    name,\n    description,\n    access,\n    showDescription,\n    starred,\n    onToggleStarredDashboard,\n    onShowHideDescription\n  } = props;\n\n  const toggleSharingDialog = () => setSharingDialogIsOpen(!sharingDialogIsOpen);\n\n  const toggleMoreOptions = () => setMoreOptionsIsOpen(!moreOptionsIsOpen);\n\n  const printLayout = () => setRedirectUrl(`${id}/printlayout`);\n\n  const printOipp = () => setRedirectUrl(`${id}/printoipp`);\n\n  const StarIcon = starred ? Star : StarBorder;\n\n  if (redirectUrl) {\n    return <Redirect to={redirectUrl} />;\n  }\n\n  const showHideDescriptionLabel = showDescription ? i18n.t('Hide description') : i18n.t('Show description');\n\n  const showHideDescription = () => {\n    onShowHideDescription();\n    toggleMoreOptions();\n  };\n\n  const toggleStarredDashboardLabel = starred ? i18n.t('Unstar dashboard') : i18n.t('Star dashboard');\n\n  const toggleStarredDashboard = () => {\n    // TODO use dataQuery directly here with create/delete mutations ?!\n    onToggleStarredDashboard();\n    toggleMoreOptions();\n  };\n\n  const buttonRef = createRef();\n  const userAccess = orObject(access);\n  const descriptionClasses = cx(classes.descContainer, description ? classes.desc : classes.noDesc);\n  return <div className={classes.container}>\n            <div className={classes.titleBar}>\n                <span className={classes.title} data-test=\"view-dashboard-title\">\n                    {name}\n                </span>\n                <div className={classes.actions}>\n                    <div className={classes.titleBarIcon} onClick={onToggleStarredDashboard}>\n                        <StarIcon style={{\n            fill: colors.grey600\n          }} />\n                    </div>\n                    <div className={classes.strip}>\n                        {userAccess.update ? <Link className={classes.editLink} to={`/${id}/edit`} data-test=\"link-edit-dashboard\">\n                                <Button>{i18n.t('Edit')}</Button>\n                            </Link> : null}\n                        {userAccess.manage ? <Button className={classes.shareButton} onClick={toggleSharingDialog}>\n                                {i18n.t('Share')}\n                            </Button> : null}\n                        <FilterSelector />\n                        <span ref={buttonRef}>\n                            <Button small={isSmallScreen(width)} dataTest=\"more-button\" onClick={toggleMoreOptions}>\n                                <ThreeDots />\n                                <span className={classes.moreButton}>\n                                    {i18n.t('More')}\n                                </span>\n                            </Button>\n                        </span>\n                    </div>\n                    {moreOptionsIsOpen && <Popover reference={buttonRef} placement=\"bottom-start\" onClickOutside={toggleMoreOptions}>\n                            <FlyoutMenu>\n                                <MenuItem dense label={toggleStarredDashboardLabel} onClick={toggleStarredDashboard} />\n                                <MenuItem dense label={showHideDescriptionLabel} onClick={showHideDescription} />\n                                <MenuItem dense label={i18n.t('Print')} dataTest=\"print-menu-item\">\n                                    <MenuItem dense label={i18n.t('Dashboard layout')} onClick={printLayout} dataTest=\"print-layout-menu-item\" />\n                                    <MenuItem dense label={i18n.t('One item per page')} onClick={printOipp} dataTest=\"print-oipp-menu-item\" />\n                                </MenuItem>\n                            </FlyoutMenu>\n                        </Popover>}\n                </div>\n            </div>\n            {showDescription && <div className={descriptionClasses}>\n                    {description || i18n.t('No description')}\n                </div>}\n            {id && <SharingDialog d2={context.d2} id={id} type=\"dashboard\" open={sharingDialogIsOpen} onRequestClose={toggleSharingDialog} />}\n        </div>;\n};\n\nViewTitleBar.propTypes = {\n  access: PropTypes.object,\n  description: PropTypes.string,\n  id: PropTypes.string,\n  name: PropTypes.string,\n  showDescription: PropTypes.bool,\n  starred: PropTypes.bool,\n  onShowHideDescription: PropTypes.func,\n  onToggleStarredDashboard: PropTypes.func\n};\nViewTitleBar.defaultProps = {\n  name: '',\n  description: '',\n  starred: false,\n  showDescription: false\n};\nViewTitleBar.contextTypes = {\n  d2: PropTypes.object\n};\n\nconst mapStateToProps = state => {\n  const id = sGetSelectedId(state);\n  const dashboard = sGetDashboardById(state, id) || EMPTY_DASHBOARD;\n  return {\n    id,\n    name: dashboard.displayName,\n    description: dashboard.displayDescription,\n    dashboardItems: sGetDashboardItems(state),\n    showDescription: sGetSelectedShowDescription(state),\n    starred: dashboard.starred,\n    access: dashboard.access\n  };\n};\n\nconst mergeProps = (stateProps, dispatchProps, ownProps) => {\n  const {\n    id,\n    starred,\n    showDescription\n  } = stateProps;\n  const {\n    dispatch\n  } = dispatchProps;\n  return { ...stateProps,\n    ...ownProps,\n    onToggleStarredDashboard: () => dispatch(tStarDashboard(id, !starred)),\n    onShowHideDescription: () => dispatch(tUpdateShowDescription(!showDescription))\n  };\n};\n\nexport default connect(mapStateToProps, null, mergeProps)(ViewTitleBar);","/** @module reducers/editDashboard */\nimport update from 'immutability-helper';\nimport isEmpty from 'lodash/isEmpty';\nimport { orArray, orObject } from '../modules/util';\nexport const RECEIVED_EDIT_DASHBOARD = 'RECEIVED_EDIT_DASHBOARD';\nexport const RECEIVED_NOT_EDITING = 'RECEIVED_NOT_EDITING';\nexport const START_NEW_DASHBOARD = 'START_NEW_DASHBOARD';\nexport const RECEIVED_TITLE = 'RECEIVED_TITLE';\nexport const RECEIVED_DESCRIPTION = 'RECEIVED_DESCRIPTION';\nexport const ADD_DASHBOARD_ITEM = 'ADD_DASHBOARD_ITEM';\nexport const REMOVE_DASHBOARD_ITEM = 'REMOVE_DASHBOARD_ITEM';\nexport const UPDATE_DASHBOARD_ITEM = 'UPDATE_DASHBOARD_ITEM';\nexport const RECEIVED_DASHBOARD_LAYOUT = 'RECEIVED_DASHBOARD_LAYOUT';\nexport const SET_PRINT_PREVIEW_VIEW = 'SET_PRINT_PREVIEW_VIEW';\nexport const CLEAR_PRINT_PREVIEW_VIEW = 'CLEAR_PRINT_PREVIEW_VIEW';\nexport const DEFAULT_STATE_EDIT_DASHBOARD = {};\nexport const NEW_DASHBOARD_STATE = {\n  id: '',\n  name: '',\n  access: {},\n  description: '',\n  dashboardItems: [],\n  printPreviewView: false\n};\nexport default ((state = DEFAULT_STATE_EDIT_DASHBOARD, action) => {\n  switch (action.type) {\n    case RECEIVED_EDIT_DASHBOARD:\n      {\n        const newState = {};\n        Object.keys(NEW_DASHBOARD_STATE).map(k => newState[k] = action.value[k]);\n        newState.printPreviewView = false;\n        return newState;\n      }\n\n    case RECEIVED_NOT_EDITING:\n      return DEFAULT_STATE_EDIT_DASHBOARD;\n\n    case SET_PRINT_PREVIEW_VIEW:\n      return Object.assign({}, state, {\n        printPreviewView: true\n      });\n\n    case CLEAR_PRINT_PREVIEW_VIEW:\n      return Object.assign({}, state, {\n        printPreviewView: false\n      });\n\n    case START_NEW_DASHBOARD:\n      return NEW_DASHBOARD_STATE;\n\n    case RECEIVED_TITLE:\n      {\n        return Object.assign({}, state, {\n          name: action.value\n        });\n      }\n\n    case RECEIVED_DESCRIPTION:\n      {\n        return Object.assign({}, state, {\n          description: action.value\n        });\n      }\n\n    case ADD_DASHBOARD_ITEM:\n      if (!action.value.position) {\n        return update(state, {\n          dashboardItems: {\n            $unshift: [action.value]\n          }\n        });\n      }\n\n      return update(state, {\n        dashboardItems: {\n          $splice: [[parseInt(action.value.position), 0, action.value]]\n        }\n      });\n\n    case REMOVE_DASHBOARD_ITEM:\n      {\n        const idToRemove = action.value;\n        const dashboardItemIndex = state.dashboardItems.findIndex(item => item.id === idToRemove);\n\n        if (dashboardItemIndex > -1) {\n          return update(state, {\n            dashboardItems: {\n              $splice: [[dashboardItemIndex, 1]]\n            }\n          });\n        }\n\n        return state;\n      }\n\n    case RECEIVED_DASHBOARD_LAYOUT:\n      {\n        const stateItems = orArray(state.dashboardItems);\n        let layoutHasChanged = false;\n        const newStateItems = action.value.map(({\n          x,\n          y,\n          w,\n          h,\n          i\n        }) => {\n          const stateItem = stateItems.find(si => si.id === i);\n\n          if (!(stateItem.x === x && stateItem.y === y && stateItem.w === w && stateItem.h === h)) {\n            layoutHasChanged = true;\n            return Object.assign({}, stateItem, {\n              w,\n              h,\n              x,\n              y\n            });\n          }\n\n          return stateItem;\n        });\n        return layoutHasChanged ? { ...state,\n          dashboardItems: newStateItems\n        } : state;\n      }\n\n    case UPDATE_DASHBOARD_ITEM:\n      {\n        const dashboardItem = action.value;\n        const dashboardItemIndex = state.dashboardItems.findIndex(item => item.id === dashboardItem.id);\n\n        if (dashboardItemIndex > -1) {\n          const newState = update(state, {\n            dashboardItems: {\n              $splice: [[dashboardItemIndex, 1, Object.assign({}, dashboardItem)]]\n            }\n          });\n          return newState;\n        }\n\n        return state;\n      }\n\n    default:\n      return state;\n  }\n}); // root selector\n\nexport const sGetEditDashboardRoot = state => state.editDashboard; // selectors\n\nexport const sGetIsEditing = state => !isEmpty(state.editDashboard);\nexport const sGetIsPrintPreviewView = state => sGetEditDashboardRoot(state).printPreviewView;\nexport const sGetIsNewDashboard = state => {\n  return !isEmpty(state.editDashboard) && sGetEditDashboardRoot(state).id === '';\n};\nexport const sGetEditDashboardName = state => sGetEditDashboardRoot(state).name;\nexport const sGetEditDashboardDescription = state => sGetEditDashboardRoot(state).description;\nexport const sGetEditDashboardItems = state => orObject(sGetEditDashboardRoot(state)).dashboardItems;","import { apiFetchDashboard } from './dashboards';\n\nconst onError = error => console.log('Error: ', error);\n\nexport const createDashboardMutation = {\n  resource: 'dashboards',\n  type: 'create',\n  data: ({\n    data\n  }) => data\n};\nexport const updateDashboardMutation = {\n  resource: 'dashboards',\n  type: 'update',\n  id: ({\n    id\n  }) => id,\n  data: ({\n    data\n  }) => data\n};\n\nconst generatePayload = (dashboard = {}, data) => {\n  return { ...dashboard,\n    name: data.name,\n    description: data.description,\n    dashboardItems: data.dashboardItems.map(item => ({ ...item,\n      width: item.w,\n      height: item.h\n    }))\n  };\n};\n\nexport const updateDashboard = async (dataEngine, data) => {\n  try {\n    const dashboard = await apiFetchDashboard(dataEngine, data.id);\n    const {\n      response\n    } = await dataEngine.mutate(updateDashboardMutation, {\n      variables: {\n        id: data.id,\n        data: generatePayload(dashboard, data)\n      }\n    });\n    return response.uid;\n  } catch (error) {\n    onError(error);\n  }\n};\nexport const postDashboard = async (dataEngine, data) => {\n  try {\n    const {\n      response\n    } = await dataEngine.mutate(createDashboardMutation, {\n      variables: {\n        data: generatePayload({}, data)\n      }\n    });\n    return response.uid;\n  } catch (error) {\n    onError(error);\n  }\n};","import { generateUid } from 'd2/uid';\nimport i18n from '@dhis2/d2-i18n';\nimport { RECEIVED_EDIT_DASHBOARD, START_NEW_DASHBOARD, RECEIVED_NOT_EDITING, RECEIVED_TITLE, RECEIVED_DESCRIPTION, RECEIVED_DASHBOARD_LAYOUT, ADD_DASHBOARD_ITEM, UPDATE_DASHBOARD_ITEM, REMOVE_DASHBOARD_ITEM, SET_PRINT_PREVIEW_VIEW, CLEAR_PRINT_PREVIEW_VIEW } from '../reducers/editDashboard';\nimport { sGetEditDashboardRoot } from '../reducers/editDashboard';\nimport { updateDashboard, postDashboard } from '../api/editDashboard';\nimport { tSetSelectedDashboardById } from '../actions/selected';\nimport { NEW_ITEM_SHAPE, getGridItemProperties, getPageBreakItemShape, getPrintTitlePageItemShape } from '../components/ItemGrid/gridUtil';\nimport { itemTypeMap, PAGEBREAK, PRINT_TITLE_PAGE } from '../modules/itemTypes';\nimport { convertUiItemsToBackend } from '../modules/uiBackendItemConverter';\n\nconst onError = error => {\n  console.log('Error (Saving Dashboard): ', error);\n  return error;\n}; // actions\n\n\nexport const acSetEditDashboard = (dashboard, items) => {\n  const val = { ...dashboard,\n    dashboardItems: items\n  };\n  return {\n    type: RECEIVED_EDIT_DASHBOARD,\n    value: val\n  };\n};\nexport const acSetEditNewDashboard = () => ({\n  type: START_NEW_DASHBOARD\n});\nexport const acClearEditDashboard = () => ({\n  type: RECEIVED_NOT_EDITING\n});\nexport const acSetPrintPreviewView = () => ({\n  type: SET_PRINT_PREVIEW_VIEW\n});\nexport const acClearPrintPreviewView = () => ({\n  type: CLEAR_PRINT_PREVIEW_VIEW\n});\nexport const acSetDashboardTitle = value => ({\n  type: RECEIVED_TITLE,\n  value\n});\nexport const acSetDashboardDescription = value => ({\n  type: RECEIVED_DESCRIPTION,\n  value\n});\nexport const acUpdateDashboardLayout = value => ({\n  type: RECEIVED_DASHBOARD_LAYOUT,\n  value\n});\nexport const acAddDashboardItem = item => {\n  const type = item.type;\n  delete item.type;\n  const itemPropName = itemTypeMap[type].propName;\n  const id = generateUid();\n  const gridItemProperties = getGridItemProperties(id);\n  let shape;\n\n  if (type === PAGEBREAK) {\n    const yPos = item.yPos || 0;\n    shape = getPageBreakItemShape(yPos, item.isStatic);\n  } else if (type === PRINT_TITLE_PAGE) {\n    shape = getPrintTitlePageItemShape();\n  } else {\n    shape = NEW_ITEM_SHAPE;\n  }\n\n  return {\n    type: ADD_DASHBOARD_ITEM,\n    value: {\n      id,\n      type,\n      position: item.position || null,\n      [itemPropName]: item.content,\n      ...NEW_ITEM_SHAPE,\n      ...gridItemProperties,\n      ...shape\n    }\n  };\n};\nexport const acUpdateDashboardItem = item => ({\n  type: UPDATE_DASHBOARD_ITEM,\n  value: item\n});\nexport const acRemoveDashboardItem = value => ({\n  type: REMOVE_DASHBOARD_ITEM,\n  value\n}); // thunks\n\nexport const tSaveDashboard = () => async (dispatch, getState, dataEngine) => {\n  const dashboard = sGetEditDashboardRoot(getState());\n  const dashboardToSave = { ...dashboard,\n    dashboardItems: convertUiItemsToBackend(dashboard.dashboardItems),\n    name: dashboard.name || i18n.t('Untitled dashboard')\n  };\n\n  try {\n    const dashboardId = dashboardToSave.id ? await updateDashboard(dataEngine, dashboardToSave) : await postDashboard(dataEngine, dashboardToSave);\n    dispatch(acClearEditDashboard());\n    await dispatch(tSetSelectedDashboardById(dashboardId));\n    return Promise.resolve(dashboardId);\n  } catch (error) {\n    onError(error);\n  }\n};","import React from 'react';\nimport PropTypes from 'prop-types';\nimport classes from './styles/NoVisualizationMessage.module.css';\n\nconst NoVisualizationMessage = ({\n  message\n}) => {\n  return <div className={classes.message}>{message}</div>;\n};\n\nNoVisualizationMessage.propTypes = {\n  message: PropTypes.string\n};\nexport default NoVisualizationMessage;","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport i18n from '@dhis2/d2-i18n';\nimport NoVisualizationMessage from './NoVisualizationMessage';\nimport * as pluginManager from './plugin';\nimport { getBaseUrl, orObject } from '../../../../modules/util';\nimport { getGridItemDomId } from '../../../ItemGrid/gridUtil';\n\nconst pluginCredentials = d2 => {\n  return {\n    baseUrl: getBaseUrl(d2),\n    auth: d2.Api.getApi().defaultHeaders.Authorization\n  };\n};\n\nclass DefaultPlugin extends Component {\n  pluginCredentials = null;\n\n  constructor(props, context) {\n    super(props);\n    this.d2 = context.d2;\n  }\n\n  pluginIsAvailable = () => pluginManager.pluginIsAvailable(this.props.activeType || this.props.item.type);\n  shouldPluginReload = prevProps => {\n    // TODO - fix this hack, to handle bug with multiple\n    // rerendering while switching between dashboards.\n    //\n    // To determine if the rendering is happening because of a\n    // dashboard switch, check if the item reference has changed.\n    const reloadAllowed = this.props.item === prevProps.item;\n    const filtersChanged = prevProps.itemFilters !== this.props.itemFilters;\n    const vis = orObject(this.props.visualization);\n    const prevVis = orObject(prevProps.visualization);\n    const visChanged = vis.id !== prevVis.id || prevProps.activeType !== this.props.activeType;\n    return reloadAllowed && (visChanged || filtersChanged);\n  };\n  reloadPlugin = prevProps => {\n    if (this.pluginIsAvailable() && this.shouldPluginReload(prevProps)) {\n      if (this.props.activeType !== prevProps.activeType || this.props.itemFilters !== prevProps.itemFilters) {\n        pluginManager.unmount(this.props.item, prevProps.activeType);\n        pluginManager.load(this.props.item, this.props.visualization, {\n          credentials: this.pluginCredentials,\n          activeType: this.props.activeType\n        });\n      }\n    }\n  };\n\n  componentDidMount() {\n    this.pluginCredentials = pluginCredentials(this.d2);\n\n    if (this.pluginIsAvailable()) {\n      pluginManager.load(this.props.item, this.props.visualization, {\n        credentials: this.pluginCredentials,\n        activeType: this.props.activeType,\n        options: this.props.options\n      });\n    }\n  }\n\n  componentDidUpdate(prevProps) {\n    this.reloadPlugin(prevProps);\n  }\n\n  componentWillUnmount() {\n    if (this.pluginIsAvailable()) {\n      pluginManager.unmount(this.props.item, this.props.activeType);\n    }\n  }\n\n  render() {\n    const {\n      item,\n      style\n    } = this.props;\n    return this.pluginIsAvailable() ? <div id={getGridItemDomId(item.id)} style={style} /> : <NoVisualizationMessage message={i18n.t('Unable to load the plugin for this item')} />;\n  }\n\n}\n\nDefaultPlugin.contextTypes = {\n  d2: PropTypes.object\n};\nDefaultPlugin.propTypes = {\n  activeType: PropTypes.string,\n  item: PropTypes.object,\n  itemFilters: PropTypes.object,\n  options: PropTypes.object,\n  style: PropTypes.object,\n  visualization: PropTypes.object\n};\nDefaultPlugin.defaultProps = {\n  style: {},\n  item: {},\n  itemFilters: {},\n  options: {},\n  visualization: {}\n};\nexport default DefaultPlugin;","import React from 'react';\nimport PropTypes from 'prop-types';\nimport DefaultPlugin from './DefaultPlugin';\nimport { MAP } from '../../../../modules/itemTypes';\n\nconst MapPlugin = ({\n  applyFilters,\n  ...props\n}) => {\n  if (props.item.type === MAP) {\n    // apply filters only to thematic and event layers\n    // for maps AO\n    const mapViews = props.visualization.mapViews.map(mapView => {\n      if (mapView.layer.includes('thematic') || mapView.layer.includes('event')) {\n        return applyFilters(mapView, props.itemFilters);\n      }\n\n      return mapView;\n    });\n    props.visualization = { ...props.visualization,\n      mapViews\n    };\n  } else {\n    // this is the case of a non map AO passed to the maps plugin\n    // due to a visualization type switch in dashboard item\n    // maps plugin takes care of converting the AO to a suitable format\n    props.visualization = applyFilters(props.visualization, props.itemFilters);\n  }\n\n  return <DefaultPlugin options={{\n    hideTitle: true\n  }} {...props} />;\n};\n\nMapPlugin.propTypes = {\n  applyFilters: PropTypes.func,\n  item: PropTypes.object,\n  itemFilters: PropTypes.object,\n  visualization: PropTypes.object\n};\nexport default MapPlugin;","import React from 'react';\nimport { CircularLoader } from '@dhis2/ui';\nimport classes from './styles/LoadingMask.module.css';\n\nconst LoadingMask = () => {\n  return <div className={classes.center}>\n            <CircularLoader />\n        </div>;\n};\n\nexport default LoadingMask;","const getFilteredVisualization = (visualization, filters) => {\n  if (!Object.keys(filters).length) {\n    return visualization;\n  } // deep clone objects in filters to avoid changing the visualization in the Redux store\n\n\n  const visRows = visualization.rows.map(obj => ({ ...obj\n  }));\n  const visColumns = visualization.columns.map(obj => ({ ...obj\n  }));\n  const visFilters = visualization.filters.map(obj => ({ ...obj\n  }));\n  Object.keys(filters).forEach(dimensionId => {\n    if (filters[dimensionId]) {\n      let dimensionFound = false;\n      [visRows, visColumns, visFilters].forEach(dimensionObjects => dimensionObjects.filter(obj => obj.dimension === dimensionId).forEach(obj => {\n        dimensionFound = true;\n        obj.items = filters[dimensionId];\n      })); // add dimension to filters if not already present elsewhere\n\n      if (!dimensionFound) {\n        visFilters.push({\n          dimension: dimensionId,\n          items: filters[dimensionId]\n        });\n      }\n    }\n  });\n  return { ...visualization,\n    rows: visRows,\n    columns: visColumns,\n    filters: visFilters\n  };\n};\n\nexport default getFilteredVisualization;","import { VIS_TYPE_COLUMN, VIS_TYPE_PIVOT_TABLE, getAdaptedUiLayoutByType } from '@dhis2/analytics';\nimport { REPORT_TABLE, CHART, MAP } from '../../../../modules/itemTypes';\nexport const THEMATIC_LAYER = 'thematic';\n\nconst extractMapView = map => map.mapViews && map.mapViews.find(mv => mv.layer.includes(THEMATIC_LAYER));\n\nconst getWithoutId = object => ({ ...object,\n  id: undefined\n});\n\nconst getVisualizationConfig = (visualization, originalType, activeType) => {\n  if (originalType === MAP && originalType !== activeType) {\n    const extractedMapView = extractMapView(visualization);\n\n    if (extractedMapView === undefined) {\n      return null;\n    }\n\n    return getWithoutId({ ...visualization,\n      ...extractedMapView,\n      mapViews: undefined,\n      type: activeType === CHART ? VIS_TYPE_COLUMN : VIS_TYPE_PIVOT_TABLE\n    });\n  } else if (originalType === REPORT_TABLE && activeType === CHART) {\n    const layout = getAdaptedUiLayoutByType(visualization, VIS_TYPE_COLUMN);\n    return getWithoutId({ ...visualization,\n      ...layout,\n      type: VIS_TYPE_COLUMN\n    });\n  } else if (originalType === CHART && activeType === REPORT_TABLE) {\n    const layout = getAdaptedUiLayoutByType(visualization, VIS_TYPE_PIVOT_TABLE);\n    return getWithoutId({ ...visualization,\n      ...layout,\n      type: VIS_TYPE_PIVOT_TABLE\n    });\n  }\n\n  return getWithoutId(visualization);\n};\n\nexport default getVisualizationConfig;","// Note that this ignores discrepancies in 'this', so shouldn't be used with bound functions\n// This is useful instead of lodash/memoize when we only need to memoize a single value\n// Inspiration: https://github.com/alexreardon/memoize-one\nconst memoizeOne = fn => {\n  let lastArgs = undefined;\n  let lastValue = undefined;\n  return (...args) => {\n    if (lastArgs && args.length === lastArgs.length && args.every((arg, i) => arg === lastArgs[i])) {\n      return lastValue;\n    }\n\n    lastArgs = args;\n    lastValue = fn(...args);\n    return lastValue;\n  };\n};\n\nexport default memoizeOne;","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport VisualizationPlugin from '@dhis2/data-visualizer-plugin';\nimport i18n from '@dhis2/d2-i18n';\nimport DefaultPlugin from './DefaultPlugin';\nimport MapPlugin from './MapPlugin';\nimport LoadingMask from './LoadingMask';\nimport NoVisualizationMessage from './NoVisualizationMessage';\nimport getFilteredVisualization from './getFilteredVisualization';\nimport getVisualizationConfig from './getVisualizationConfig';\nimport { VISUALIZATION, MAP, CHART, REPORT_TABLE } from '../../../../modules/itemTypes';\nimport { getVisualizationId } from '../../../../modules/item';\nimport memoizeOne from '../../../../modules/memoizeOne';\nimport { sGetVisualization } from '../../../../reducers/visualizations';\n\nclass Visualization extends React.Component {\n  state = {\n    pluginLoaded: false\n  };\n\n  constructor(props) {\n    super(props);\n    this.memoizedGetFilteredVisualization = memoizeOne(getFilteredVisualization);\n    this.memoizedGetVisualizationConfig = memoizeOne(getVisualizationConfig);\n  }\n\n  onLoadingComplete = () => {\n    this.setState({\n      pluginLoaded: true\n    });\n  };\n\n  render() {\n    const {\n      visualization,\n      activeType,\n      item,\n      itemFilters,\n      availableHeight\n    } = this.props;\n\n    if (!visualization) {\n      return <NoVisualizationMessage message={i18n.t('No data to display')} />;\n    }\n\n    const pluginProps = {\n      item,\n      itemFilters,\n      activeType,\n      style: {\n        height: availableHeight\n      },\n      visualization: this.memoizedGetVisualizationConfig(visualization, item.type, activeType)\n    };\n\n    switch (activeType) {\n      case VISUALIZATION:\n      case CHART:\n      case REPORT_TABLE:\n        {\n          return <>\n                        {!this.state.pluginLoaded && <div style={pluginProps.style}>\n                                <LoadingMask />\n                            </div>}\n                        <VisualizationPlugin d2={this.context.d2} visualization={this.memoizedGetFilteredVisualization(pluginProps.visualization, pluginProps.itemFilters)} onLoadingComplete={this.onLoadingComplete} forDashboard={true} style={pluginProps.style} />\n                    </>;\n        }\n\n      case MAP:\n        {\n          return <MapPlugin applyFilters={this.memoizedGetFilteredVisualization} {...pluginProps} />;\n        }\n\n      default:\n        {\n          pluginProps.visualization = this.memoizedGetFilteredVisualization(pluginProps.visualization, pluginProps.itemFilters);\n          return <DefaultPlugin {...pluginProps} />;\n        }\n    }\n  }\n\n}\n\nVisualization.propTypes = {\n  activeType: PropTypes.string,\n  availableHeight: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n  item: PropTypes.object,\n  itemFilters: PropTypes.object,\n  visualization: PropTypes.object\n};\nVisualization.contextTypes = {\n  d2: PropTypes.object\n};\n\nconst mapStateToProps = (state, ownProps) => {\n  return {\n    visualization: sGetVisualization(state, getVisualizationId(ownProps.item))\n  };\n};\n\nexport default connect(mapStateToProps)(Visualization);","import React from 'react';\nimport PropTypes from 'prop-types';\nimport i18n from '@dhis2/d2-i18n';\nimport { Warning } from './assets/icons';\nimport classes from './styles/FatalErrorBoundary.module.css';\n\nclass FatalErrorBoundary extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      errorFound: false\n    };\n  }\n\n  componentDidCatch(error, info) {\n    this.setState({\n      errorFound: true\n    });\n    console.log('error: ', error);\n    console.log('info: ', info);\n  }\n\n  render() {\n    if (this.state.errorFound) {\n      return <p className={classes.container}>\n                    <span className={classes.icon}>\n                        <Warning />\n                    </span>\n                    <span className={classes.message}>\n                        {i18n.t('There was a problem loading this dashboard item')}\n                    </span>\n                </p>;\n    }\n\n    return this.props.children;\n  }\n\n}\n\nFatalErrorBoundary.propTypes = {\n  children: PropTypes.node\n};\nexport default FatalErrorBoundary;","import React from 'react';\nimport PropTypes from 'prop-types';\nimport classes from './styles/ItemHeader.module.css';\n\nconst ViewItemActions = ({\n  actionButtons\n}) => {\n  return actionButtons ? <div className={classes.itemActionsWrap}>{actionButtons}</div> : null;\n};\n\nViewItemActions.propTypes = {\n  actionButtons: PropTypes.node\n};\nexport default ViewItemActions;","import React from 'react';\nimport PropTypes from 'prop-types';\nimport i18n from '@dhis2/d2-i18n';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport { colors } from '@dhis2/ui';\nimport classes from './styles/DeleteItemButton.module.css';\n\nconst DeleteItemButton = ({\n  onClick\n}) => <button type=\"button\" className={classes.deleteItemButton} onClick={onClick} title={i18n.t(`Delete item`)}>\n        <DeleteIcon style={{\n    fill: colors.red500\n  }} />\n    </button>;\n\nDeleteItemButton.propTypes = {\n  onClick: PropTypes.func\n};\nexport default DeleteItemButton;","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport DeleteItemButton from './DeleteItemButton';\nimport { acRemoveDashboardItem } from '../../../actions/editDashboard';\nimport classes from './styles/ItemHeader.module.css';\n\nconst EditItemActions = ({\n  itemId,\n  acRemoveDashboardItem\n}) => {\n  const handleDeleteItem = () => acRemoveDashboardItem(itemId);\n\n  return <div className={classes.itemActionsWrap}>\n            <DeleteItemButton onClick={handleDeleteItem} />\n        </div>;\n};\n\nEditItemActions.propTypes = {\n  acRemoveDashboardItem: PropTypes.func,\n  itemId: PropTypes.string\n};\nconst mapDispatchToProps = {\n  acRemoveDashboardItem\n};\nexport default connect(null, mapDispatchToProps)(EditItemActions);","import React from 'react';\nimport { colors } from '@dhis2/ui';\n\nconst WarningIcon = () => <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24\" viewBox=\"0 0 24 24\" width=\"24\" fill={colors.grey600}>\n        <path d=\"M0 0h24v24H0z\" fill=\"none\" />\n        <path d=\"M12 2C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2zm1 15h-2v-6h2v6zm0-8h-2V7h2v2z\" />\n    </svg>;\n\nexport default WarningIcon;","import React from 'react';\nimport { Tooltip } from '@dhis2/ui';\nimport i18n from '@dhis2/d2-i18n';\nimport InfoIcon from '../../../icons/Info';\nimport classes from './styles/PrintItemInfo.module.css';\n\nconst PrintWarning = () => <div className={classes.warning}>\n        <Tooltip content={i18n.t('This item has been shortened to fit on one page')} placement=\"bottom\">\n            <InfoIcon />\n        </Tooltip>\n    </div>;\n\nexport default PrintWarning;","export const EDIT = 'edit';\nexport const NEW = 'new';\nexport const VIEW = 'view';\nexport const PRINT = 'print';\nexport const PRINT_LAYOUT = 'print-layout';\nexport const isEditMode = mode => [EDIT, NEW].includes(mode);\nexport const isPrintMode = mode => [PRINT, PRINT_LAYOUT].includes(mode);\nexport const isViewMode = mode => mode === VIEW;","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport ViewItemActions from './ViewItemActions';\nimport EditItemActions from './EditItemActions';\nimport PrintItemInfo from './PrintItemInfo';\nimport { VIEW, EDIT, PRINT_LAYOUT } from '../../Dashboard/dashboardModes';\nimport classes from './styles/ItemHeader.module.css';\n\nconst getItemActionsMap = isShortened => {\n  return {\n    [VIEW]: ViewItemActions,\n    [EDIT]: EditItemActions,\n    [PRINT_LAYOUT]: isShortened ? PrintItemInfo : null\n  };\n}; // This is the margin-top + margin-bottom defined in the css file\n\n\nexport const HEADER_MARGIN_HEIGHT = 12;\nconst ItemHeader = React.forwardRef(({\n  dashboardMode,\n  title,\n  isShortened,\n  ...rest\n}, ref) => {\n  const Actions = getItemActionsMap(isShortened)[dashboardMode];\n  return <div className={classes.itemHeaderWrap} ref={ref}>\n                <p className={classes.itemTitle}>{title}</p>\n                {Actions ? <Actions {...rest} /> : null}\n            </div>;\n});\nItemHeader.displayName = 'ItemHeader';\nItemHeader.propTypes = {\n  dashboardMode: PropTypes.string,\n  isShortened: PropTypes.bool,\n  title: PropTypes.string\n};\nexport default connect(null, null, null, {\n  forwardRef: true\n})(ItemHeader);","import React, { useState, createRef } from 'react';\nimport PropTypes from 'prop-types';\nimport { useConfig } from '@dhis2/app-runtime';\nimport { isSingleValue, isYearOverYear, VIS_TYPE_GAUGE, VIS_TYPE_PIE } from '@dhis2/analytics';\nimport { Button, Menu, Popover, MenuItem, Divider, colors } from '@dhis2/ui';\nimport i18n from '@dhis2/d2-i18n';\nimport TableIcon from '@material-ui/icons/ViewList';\nimport ChartIcon from '@material-ui/icons/InsertChart';\nimport MapIcon from '@material-ui/icons/Public';\nimport LaunchIcon from '@material-ui/icons/Launch';\nimport { ThreeDots, SpeechBubble, Fullscreen, ExitFullscreen } from './assets/icons';\nimport { getLink } from './Visualization/plugin';\nimport { CHART, MAP, REPORT_TABLE, EVENT_CHART, EVENT_REPORT, isTrackerDomainType, hasMapView, getAppName } from '../../../modules/itemTypes';\nconst iconFill = {\n  fill: colors.grey600\n};\n\nconst ItemHeaderButtons = props => {\n  const [menuIsOpen, setMenuIsOpen] = useState(null);\n  const {\n    baseUrl\n  } = useConfig();\n  const {\n    item,\n    visualization,\n    onSelectActiveType,\n    activeType\n  } = props;\n  const isTrackerType = isTrackerDomainType(item.type);\n\n  const onViewTable = () => {\n    closeMenu();\n    onSelectActiveType(isTrackerType ? EVENT_REPORT : REPORT_TABLE);\n  };\n\n  const onViewChart = () => {\n    closeMenu();\n    onSelectActiveType(isTrackerType ? EVENT_CHART : CHART);\n  };\n\n  const onViewMap = () => {\n    closeMenu();\n    onSelectActiveType(MAP);\n  };\n\n  const itemHasMapView = () => hasMapView(item.type);\n\n  const handleInterpretationClick = () => {\n    props.onToggleFooter();\n\n    if (menuIsOpen) {\n      closeMenu();\n    }\n  };\n\n  const handleToggleFullscreenClick = () => {\n    props.onToggleFullscreen();\n    closeMenu();\n  };\n\n  const openMenu = () => setMenuIsOpen(true);\n\n  const closeMenu = () => setMenuIsOpen(false);\n\n  const type = visualization.type || item.type;\n  const canViewAs = !isSingleValue(type) && !isYearOverYear(type) && type !== VIS_TYPE_GAUGE && type !== VIS_TYPE_PIE;\n  const interpretationMenuLabel = props.activeFooter ? i18n.t(`Hide interpretations and details`) : i18n.t(`Show interpretations and details`);\n\n  const ViewAsMenuItems = () => <>\n            {activeType !== CHART && activeType !== EVENT_CHART && <MenuItem dense label={i18n.t('View as Chart')} onClick={onViewChart} icon={<ChartIcon style={iconFill} />} />}\n            {activeType !== REPORT_TABLE && activeType !== EVENT_REPORT && <MenuItem dense label={i18n.t('View as Table')} onClick={onViewTable} icon={<TableIcon style={iconFill} />} />}\n            {itemHasMapView() && activeType !== MAP && <MenuItem dense label={i18n.t('View as Map')} onClick={onViewMap} icon={<MapIcon style={iconFill} />} />}\n        </>;\n\n  const buttonRef = createRef();\n  return props.isFullscreen ? <Button small secondary onClick={props.onToggleFullscreen}>\n            <ExitFullscreen />\n        </Button> : <>\n            <div ref={buttonRef}>\n                <Button small secondary onClick={openMenu} dataTest=\"dashboarditem-menu-button\">\n                    <ThreeDots />\n                </Button>\n            </div>\n            {menuIsOpen && <Popover reference={buttonRef} placement=\"auto-start\" arrow={false} onClickOutside={closeMenu}>\n                    <Menu>\n                        {canViewAs && <>\n                                <ViewAsMenuItems />\n                                <Divider />\n                            </>}\n                        <MenuItem dense icon={<LaunchIcon style={{\n          fill: '#6e7a8a'\n        }} />} label={i18n.t('Open in {{appName}} app', {\n          appName: getAppName(item.type)\n        })} href={getLink(item, baseUrl)} target=\"_blank\" />\n                        <MenuItem dense icon={<SpeechBubble />} label={interpretationMenuLabel} onClick={handleInterpretationClick} />\n                        {props.fullscreenSupported && <MenuItem dense icon={<Fullscreen />} label={i18n.t('View fullscreen')} onClick={handleToggleFullscreenClick} />}\n                    </Menu>\n                </Popover>}\n        </>;\n};\n\nItemHeaderButtons.propTypes = {\n  activeFooter: PropTypes.bool,\n  activeType: PropTypes.string,\n  fullscreenSupported: PropTypes.bool,\n  isFullscreen: PropTypes.bool,\n  item: PropTypes.object,\n  visualization: PropTypes.object,\n  onSelectActiveType: PropTypes.func,\n  onToggleFooter: PropTypes.func,\n  onToggleFullscreen: PropTypes.func\n};\nexport default ItemHeaderButtons;","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { getVisualizationId } from '../../../modules/item';\nimport InterpretationsComponent from '@dhis2/d2-ui-interpretations';\nimport classes from './styles/ItemFooter.module.css';\n\nconst ItemFooter = (props, context) => <div data-test=\"dashboarditem-footer\">\n        <hr className={classes.line} />\n        <div className={classes.scrollContainer}>\n            <InterpretationsComponent d2={context.d2} item={props.item} type={props.item.type.toLowerCase()} id={getVisualizationId(props.item)} appName=\"dashboard\" />\n        </div>\n    </div>;\n\nItemFooter.contextTypes = {\n  d2: PropTypes.object.isRequired\n};\nItemFooter.propTypes = {\n  item: PropTypes.object.isRequired\n};\nexport default ItemFooter;","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport uniqueId from 'lodash/uniqueId';\nimport Visualization from './Visualization/Visualization';\nimport FatalErrorBoundary from './FatalErrorBoundary';\nimport ItemHeader, { HEADER_MARGIN_HEIGHT } from '../ItemHeader/ItemHeader';\nimport ItemHeaderButtons from './ItemHeaderButtons';\nimport ItemFooter from './ItemFooter';\nimport { apiPostDataStatistics } from '../../../api/dataStatistics';\nimport { apiFetchVisualization } from '../../../api/metadata';\nimport { sGetVisualization } from '../../../reducers/visualizations';\nimport { sGetSelectedItemActiveType } from '../../../reducers/selected';\nimport { sGetIsEditing } from '../../../reducers/editDashboard';\nimport { sGetItemFiltersRoot, DEFAULT_STATE_ITEM_FILTERS } from '../../../reducers/itemFilters';\nimport { sGatherAnalyticalObjectStatisticsInDashboardViews } from '../../../reducers/settings';\nimport { acAddVisualization } from '../../../actions/visualizations';\nimport { acSetSelectedItemActiveType } from '../../../actions/selected';\nimport { pluginIsAvailable } from './Visualization/plugin';\nimport { getDataStatisticsName } from '../../../modules/itemTypes';\nimport { getVisualizationId, getVisualizationName } from '../../../modules/item';\nimport memoizeOne from '../../../modules/memoizeOne';\nimport { isEditMode, isPrintMode, isViewMode } from '../../Dashboard/dashboardModes';\nimport { ITEM_CONTENT_PADDING_BOTTOM } from '../../ItemGrid/ItemGrid';\nexport class Item extends Component {\n  state = {\n    showFooter: false,\n    configLoaded: false,\n    isFullscreen: false\n  };\n\n  constructor(props, context) {\n    super(props);\n    this.d2 = context.d2;\n    this.contentRef = React.createRef();\n    this.headerRef = React.createRef();\n    this.itemDomElSelector = `.reactgriditem-${this.props.item.id}`;\n    this.memoizedGetContentHeight = memoizeOne((calculatedHeight, measuredHeight, preferMeasured) => preferMeasured ? measuredHeight || calculatedHeight : calculatedHeight);\n  }\n\n  async componentDidMount() {\n    this.props.updateVisualization(await apiFetchVisualization(this.props.item));\n\n    try {\n      if (this.props.gatherDataStatistics && isViewMode(this.props.dashboardMode)) {\n        await apiPostDataStatistics(getDataStatisticsName(this.props.item.type), getVisualizationId(this.props.item));\n      }\n    } catch (e) {\n      console.log(e);\n    }\n\n    this.setState({\n      configLoaded: true\n    });\n    const el = document.querySelector(this.itemDomElSelector);\n\n    if (el?.requestFullscreen) {\n      el.onfullscreenchange = this.handleFullscreenChange;\n    } else if (el?.webkitRequestFullscreen) {\n      el.onwebkitfullscreenchange = this.handleFullscreenChange;\n    }\n  }\n\n  componentWillUnmount() {\n    const el = document.querySelector(this.itemDomElSelector);\n\n    if (el?.onfullscreenchange) {\n      el.removeEventListener('onfullscreenchange', this.handleFullscreenChange);\n    } else if (el?.onwebkitfullscreenchange) {\n      el.removeEventListener('onwebkitfullscreenchange', this.handleFullscreenChange);\n    }\n  }\n\n  isFullscreenSupported = () => {\n    const el = document.querySelector(this.itemDomElSelector);\n    return !!(el?.requestFullscreen || el?.webkitRequestFullscreen);\n  };\n  handleFullscreenChange = () => {\n    this.setState({\n      isFullscreen: !!document.fullscreenElement || !!document.webkitFullscreenElement\n    });\n  };\n  onToggleFullscreen = () => {\n    if (!this.state.isFullscreen) {\n      const el = document.querySelector(this.itemDomElSelector);\n\n      if (el?.requestFullscreen) {\n        el.requestFullscreen();\n      } else if (el?.webkitRequestFullscreen) {\n        el.webkitRequestFullscreen();\n      }\n    } else {\n      document.exitFullscreen ? document.exitFullscreen() : document.webkitExitFullscreen();\n    }\n  };\n  getUniqueKey = memoizeOne(() => uniqueId());\n  onToggleFooter = () => {\n    this.setState({\n      showFooter: !this.state.showFooter\n    }, this.props.onToggleItemExpanded(this.props.item.id));\n  };\n  setActiveType = type => {\n    type !== this.getActiveType() && this.props.setActiveType(this.props.item.id, type);\n  };\n  getActiveType = () => {\n    if (this.props.isEditing) {\n      return this.props.item.type;\n    }\n\n    return this.props.activeType || this.props.item.type;\n  };\n  getAvailableHeight = () => {\n    if (this.state.isFullscreen) {\n      return '95vh';\n    }\n\n    const calculatedHeight = this.props.item.originalHeight - this.headerRef.current.clientHeight - HEADER_MARGIN_HEIGHT - ITEM_CONTENT_PADDING_BOTTOM;\n    return this.memoizedGetContentHeight(calculatedHeight, this.contentRef ? this.contentRef.offsetHeight : null, isEditMode(this.props.dashboardMode) || isPrintMode(this.props.dashboardMode));\n  };\n\n  render() {\n    const {\n      item,\n      dashboardMode,\n      itemFilters\n    } = this.props;\n    const {\n      showFooter\n    } = this.state;\n    const activeType = this.getActiveType();\n    const actionButtons = pluginIsAvailable(activeType || item.type) ? <ItemHeaderButtons item={item} visualization={this.props.visualization} onSelectActiveType={this.setActiveType} onToggleFooter={this.onToggleFooter} onToggleFullscreen={this.onToggleFullscreen} activeType={activeType} activeFooter={showFooter} isFullscreen={this.state.isFullscreen} fullscreenSupported={this.isFullscreenSupported()} /> : null;\n    return <>\n                <ItemHeader title={getVisualizationName(item)} itemId={item.id} actionButtons={actionButtons} ref={this.headerRef} dashboardMode={dashboardMode} isShortened={item.shortened} />\n                <FatalErrorBoundary>\n                    <div key={this.getUniqueKey(itemFilters)} className=\"dashboard-item-content\" ref={ref => this.contentRef = ref}>\n                        {this.state.configLoaded && <Visualization item={item} activeType={activeType} itemFilters={itemFilters} availableHeight={this.getAvailableHeight()} />}\n                    </div>\n                </FatalErrorBoundary>\n                {isViewMode(dashboardMode) && showFooter ? <ItemFooter item={item} /> : null}\n            </>;\n  }\n\n}\nItem.contextTypes = {\n  d2: PropTypes.object\n};\nItem.propTypes = {\n  activeType: PropTypes.string,\n  dashboardMode: PropTypes.string,\n  gatherDataStatistics: PropTypes.bool,\n  isEditing: PropTypes.bool,\n  item: PropTypes.object,\n  itemFilters: PropTypes.object,\n  setActiveType: PropTypes.func,\n  updateVisualization: PropTypes.func,\n  visualization: PropTypes.object,\n  onToggleItemExpanded: PropTypes.func\n};\nItem.defaultProps = {\n  item: {},\n  onToggleItemExpanded: Function.prototype,\n  visualization: {}\n};\n\nconst mapStateToProps = (state, ownProps) => {\n  const itemFilters = !isEditMode(ownProps.dashboardMode) ? sGetItemFiltersRoot(state) : DEFAULT_STATE_ITEM_FILTERS;\n  return {\n    activeType: sGetSelectedItemActiveType(state, ownProps.item?.id),\n    isEditing: sGetIsEditing(state),\n    itemFilters,\n    visualization: sGetVisualization(state, getVisualizationId(ownProps.item)),\n    gatherDataStatistics: sGatherAnalyticalObjectStatisticsInDashboardViews(state)\n  };\n};\n\nconst mapDispatchToProps = {\n  setActiveType: acSetSelectedItemActiveType,\n  updateVisualization: acAddVisualization\n};\nexport default connect(mapStateToProps, mapDispatchToProps)(Item);","import React from 'react';\nimport { colors } from '@dhis2/ui';\nconst style = {\n  backgroundColor: colors.grey200,\n  border: 'none',\n  height: '1px',\n  margin: '0px 0px 5px 0px'\n};\n\nconst Line = () => <hr style={style} />;\n\nexport default Line;","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport i18n from '@dhis2/d2-i18n';\nimport { colors } from '@dhis2/ui';\nimport ItemHeader from '../ItemHeader/ItemHeader';\nimport Line from '../../../widgets/Line';\nimport { sGetMessagesRoot } from '../../../reducers/messages';\nimport { formatDate } from '../../../modules/util';\nimport { isViewMode } from '../../Dashboard/dashboardModes';\nimport './MessagesItem.css';\nconst PRIVATE = 'PRIVATE';\nconst messageTypes = {\n  [PRIVATE]: 'Private',\n  VALIDATION_RESULT: 'Validation',\n  TICKET: 'Ticket',\n  SYSTEM: 'System'\n};\nconst style = {\n  list: {\n    listStyleType: 'none',\n    paddingLeft: '0px'\n  },\n  seeAll: {\n    textAlign: 'center',\n    fontSize: '13px',\n    marginBottom: '5px'\n  },\n  sender: {\n    fontSize: '13px',\n    lineHeight: '15px',\n    margin: 0,\n    color: colors.grey800\n  },\n  snippet: {\n    color: colors.grey800,\n    fontSize: '13px',\n    lineHeight: '15px',\n    maxHeight: '30px',\n    overflow: 'hidden'\n  }\n};\n\nclass MessagesItem extends Component {\n  state = {\n    uiLocale: ''\n  };\n\n  async componentDidMount() {\n    const uiLocale = await this.context.d2.currentUser.userSettings.get('keyUiLocale');\n    this.setState({\n      uiLocale\n    });\n  }\n\n  getMessageHref = msg => {\n    const msgIdentifier = msg ? `#/${msg.messageType}/${msg.id}` : '';\n    return `${this.context.baseUrl}/dhis-web-messaging/${msgIdentifier}`;\n  };\n  getMessageSender = msg => {\n    const latestMsg = msg.messages.slice(-1)[0];\n    return latestMsg.sender ? latestMsg.sender.displayName : '';\n  };\n  getMessageItems = () => {\n    const modeClass = isViewMode(this.props.dashboardMode) ? 'view' : null;\n    return this.props.messages.map(msg => {\n      const redirectToMsg = () => {\n        if (isViewMode(this.props.dashboardMode)) {\n          document.location.href = this.getMessageHref(msg);\n        }\n      };\n\n      const sender = msg.messageType === PRIVATE ? this.getMessageSender(msg) : messageTypes[msg.messageType];\n      const readClass = !msg.read ? 'unread' : null;\n      const latestMsg = msg.messages.slice(-1)[0];\n      const msgDate = latestMsg.lastUpdated;\n      return <li className={`message-item ${modeClass}`} key={msg.id} onClick={redirectToMsg}>\n                    <p className={`message-title ${readClass}`}>\n                        {msg.displayName} ({msg.messageCount})\n                    </p>\n                    <p style={style.sender}>\n                        {sender} - {formatDate(msgDate, this.state.uiLocale)}\n                    </p>\n                    <p style={style.snippet}>{latestMsg.text}</p>\n                </li>;\n    });\n  };\n\n  render() {\n    return <>\n                <ItemHeader title={i18n.t('Messages')} itemId={this.props.item.id} dashboardMode={this.props.dashboardMode} isShortened={this.props.item.shortened} />\n                <Line />\n                {this.props.messages.length > 0 && <div className=\"dashboard-item-content\">\n                        <ul style={style.list}>{this.getMessageItems()}</ul>\n                        <div style={style.seeAll}>\n                            <a href={this.getMessageHref()}>\n                                {i18n.t('See all messages')}\n                            </a>\n                        </div>\n                    </div>}\n            </>;\n  }\n\n}\n\nMessagesItem.propTypes = {\n  dashboardMode: PropTypes.string,\n  item: PropTypes.object,\n  messages: PropTypes.array\n};\nMessagesItem.contextTypes = {\n  d2: PropTypes.object,\n  baseUrl: PropTypes.string\n};\n\nconst mapStateToProps = state => {\n  return {\n    messages: Object.values(sGetMessagesRoot(state))\n  };\n};\n\nconst MessagesContainer = connect(mapStateToProps, null)(MessagesItem);\nexport default MessagesContainer;","import React from 'react';\nimport PropTypes from 'prop-types';\nimport i18n from '@dhis2/d2-i18n';\nimport ItemHeader from '../ItemHeader/ItemHeader';\nimport NotInterestedIcon from '@material-ui/icons/NotInterested';\n\nconst NotSupportedItem = props => <>\n        <ItemHeader title={i18n.t('Item type \"{{type}}\" not supported', {\n    type: props.item.type\n  })} itemId={props.item.id} dashboardMode={props.dashboardMode} isShortened={props.item.shortened} />\n        <div style={{\n    display: 'flex',\n    justifyContent: 'center',\n    alignItems: 'center',\n    height: '90%'\n  }}>\n            <NotInterestedIcon style={{\n      width: 100,\n      height: 100,\n      align: 'center'\n    }} color=\"disabled\" />\n        </div>\n    </>;\n\nNotSupportedItem.propTypes = {\n  dashboardMode: PropTypes.string,\n  item: PropTypes.object\n};\nexport default NotSupportedItem;","import React from 'react';\nimport { colors } from '@dhis2/ui';\nimport PropTypes from 'prop-types';\n\nconst DescriptionIcon = ({\n  className\n}) => <svg className={className} xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\" fill={colors.grey500}>\n        <path d=\"M0 0h24v24H0z\" fill=\"none\" />\n        <path d=\"M14 2H6c-1.1 0-1.99.9-1.99 2L4 20c0 1.1.89 2 1.99 2H18c1.1 0 2-.9 2-2V8l-6-6zm2 16H8v-2h8v2zm0-4H8v-2h8v2zm-3-5V3.5L18.5 9H13z\" />\n    </svg>;\n\nDescriptionIcon.propTypes = {\n  className: PropTypes.string\n};\nexport default DescriptionIcon;","import React from 'react';\nimport { colors } from '@dhis2/ui';\nimport PropTypes from 'prop-types';\n\nconst DeleteIcon = ({\n  className\n}) => <svg className={className} xmlns=\"http://www.w3.org/2000/svg\" width=\"18\" height=\"18\" viewBox=\"0 0 24 24\" fill={colors.red500}>\n        <path d=\"M6 19c0 1.1.9 2 2 2h8c1.1 0 2-.9 2-2V7H6v12zM19 4h-3.5l-1-1h-5l-1 1H5v2h14V4z\" />\n        <path d=\"M0 0h24v24H0z\" fill=\"none\" />\n    </svg>;\n\nDeleteIcon.propTypes = {\n  className: PropTypes.string\n};\nexport default DeleteIcon;","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { colors } from '@dhis2/ui';\nimport DescriptionIcon from '../../../icons/Description';\nimport DeleteIcon from '../../../icons/Delete';\nimport Line from '../../../widgets/Line';\nimport { itemTypeMap, getItemUrl } from '../../../modules/itemTypes';\nimport { orArray } from '../../../modules/util';\nimport { tRemoveListItemContent } from './actions';\nimport ItemHeader from '../ItemHeader/ItemHeader';\nimport { isEditMode } from '../../Dashboard/dashboardModes';\nimport classes from './Item.module.css';\n\nconst getItemTitle = item => itemTypeMap[item.type].pluralTitle;\n\nconst getContentItems = item => orArray(item[itemTypeMap[item.type].propName]).filter((item, index, array) => array.findIndex(el => el.id === item.id) === index);\n\nconst ListItem = (props, context) => {\n  const {\n    item,\n    dashboardMode,\n    tRemoveListItemContent\n  } = props;\n  const contentItems = getContentItems(item);\n\n  const getLink = contentItem => {\n    const deleteButton = <button className={classes.deletebutton} onClick={() => tRemoveListItemContent(item, contentItem)}>\n                <DeleteIcon className={classes.deleteicon} />\n            </button>;\n    return <>\n                <a className={classes.link} style={{\n        color: colors.grey900\n      }} href={getItemUrl(item.type, contentItem, context.d2)}>\n                    {contentItem.name}\n                </a>\n                {isEditMode(dashboardMode) ? deleteButton : null}\n            </>;\n  };\n\n  return <>\n            <ItemHeader title={getItemTitle(item)} itemId={item.id} dashboardMode={dashboardMode} isShortened={item.shortened} />\n            <Line />\n            <div className=\"dashboard-item-content\">\n                <ul className={classes.list}>\n                    {contentItems.map(contentItem => <li className={classes.item} key={contentItem.id}>\n                            <DescriptionIcon className={classes.itemicon} />\n                            {getLink(contentItem)}\n                        </li>)}\n                </ul>\n            </div>\n        </>;\n};\n\nListItem.propTypes = {\n  dashboardMode: PropTypes.string,\n  item: PropTypes.object,\n  tRemoveListItemContent: PropTypes.func\n};\nListItem.contextTypes = {\n  d2: PropTypes.object\n};\nexport default connect(null, {\n  tRemoveListItemContent\n})(ListItem);","import { acUpdateDashboardItem, acRemoveDashboardItem } from '../../../actions/editDashboard';\nimport { itemTypeMap } from '../../../modules/itemTypes';\nexport const tRemoveListItemContent = (dashboardItem, content) => dispatch => {\n  const listItemType = itemTypeMap[dashboardItem.type].propName;\n  const newContent = dashboardItem[listItemType].filter(item => item.id !== content.id);\n\n  if (newContent.length) {\n    dashboardItem[listItemType] = newContent;\n    dispatch(acUpdateDashboardItem(dashboardItem));\n  } else {\n    dispatch(acRemoveDashboardItem(dashboardItem));\n  }\n};","/** @module reducers/editDashboard */\nimport update from 'immutability-helper';\nimport isEmpty from 'lodash/isEmpty';\nimport { orArray } from '../modules/util';\nexport const SET_PRINT_DASHBOARD = 'SET_PRINT_DASHBOARD';\nexport const CLEAR_PRINT_DASHBOARD = 'CLEAR_PRINT_DASHBOARD';\nexport const ADD_PRINT_DASHBOARD_ITEM = 'ADD_PRINT_DASHBOARD_ITEM';\nexport const SET_PRINT_DASHBOARD_LAYOUT = 'SET_PRINT_DASHBOARD_LAYOUT';\nexport const REMOVE_PRINT_DASHBOARD_ITEM = 'REMOVE_PRINT_DASHBOARD_ITEM';\nexport const UPDATE_PRINT_DASHBOARD_ITEM = 'UPDATE_PRINT_DASHBOARD_ITEM';\nexport const DEFAULT_STATE_PRINT_DASHBOARD = {};\nconst DEFAULT_DASHBOARD_ITEMS = [];\nexport const NEW_PRINT_DASHBOARD_STATE = {\n  id: '',\n  name: '',\n  access: {},\n  description: '',\n  dashboardItems: DEFAULT_DASHBOARD_ITEMS\n};\nexport default ((state = DEFAULT_STATE_PRINT_DASHBOARD, action) => {\n  switch (action.type) {\n    case SET_PRINT_DASHBOARD:\n      {\n        const newState = {};\n        Object.keys(NEW_PRINT_DASHBOARD_STATE).map(k => newState[k] = action.value[k]);\n        return newState;\n      }\n\n    case CLEAR_PRINT_DASHBOARD:\n      return DEFAULT_STATE_PRINT_DASHBOARD;\n\n    case ADD_PRINT_DASHBOARD_ITEM:\n      if (!action.value.position) {\n        return update(state, {\n          dashboardItems: {\n            $unshift: [action.value]\n          }\n        });\n      }\n\n      return update(state, {\n        dashboardItems: {\n          $splice: [[parseInt(action.value.position), 0, action.value]]\n        }\n      });\n\n    case REMOVE_PRINT_DASHBOARD_ITEM:\n      {\n        const idToRemove = action.value;\n        const dashboardItemIndex = state.dashboardItems.findIndex(item => item.id === idToRemove);\n\n        if (dashboardItemIndex > -1) {\n          return update(state, {\n            dashboardItems: {\n              $splice: [[dashboardItemIndex, 1]]\n            }\n          });\n        }\n\n        return state;\n      }\n\n    case UPDATE_PRINT_DASHBOARD_ITEM:\n      {\n        const dashboardItem = action.value;\n        const dashboardItemIndex = state.dashboardItems.findIndex(item => item.id === dashboardItem.id);\n\n        if (dashboardItemIndex > -1) {\n          const newState = update(state, {\n            dashboardItems: {\n              $splice: [[dashboardItemIndex, 1, Object.assign({}, dashboardItem)]]\n            }\n          });\n          return newState;\n        }\n\n        return state;\n      }\n\n    case SET_PRINT_DASHBOARD_LAYOUT:\n      {\n        const stateItems = orArray(state.dashboardItems);\n        let layoutHasChanged = false;\n        const newStateItems = action.value.map(({\n          x,\n          y,\n          w,\n          h,\n          i\n        }) => {\n          const stateItem = stateItems.find(si => si.id === i);\n\n          if (!(stateItem.x === x && stateItem.y === y && stateItem.w === w && stateItem.h === h)) {\n            layoutHasChanged = true;\n            return Object.assign({}, stateItem, {\n              w,\n              h,\n              x,\n              y\n            });\n          }\n\n          return stateItem;\n        });\n        return layoutHasChanged ? { ...state,\n          dashboardItems: newStateItems\n        } : state;\n      }\n\n    default:\n      return state;\n  }\n}); // root selector\n\nexport const sGetPrintDashboardRoot = state => state.printDashboard; // selectors\n\nexport const sGetIsPrinting = state => !isEmpty(state.printDashboard);\nexport const sGetPrintDashboardName = state => sGetPrintDashboardRoot(state).name;\nexport const sGetPrintDashboardDescription = state => sGetPrintDashboardRoot(state).description;\nexport const sGetPrintDashboardItems = state => {\n  return sGetPrintDashboardRoot(state)?.dashboardItems || DEFAULT_DASHBOARD_ITEMS;\n};","import React from 'react';\nimport { connect } from 'react-redux';\nimport i18n from '@dhis2/d2-i18n';\nimport PropTypes from 'prop-types';\nimport Input from '@material-ui/core/Input';\nimport ItemHeader from '../ItemHeader/ItemHeader';\nimport PrintItemInfo from '../ItemHeader/PrintItemInfo';\nimport Line from '../../../widgets/Line';\nimport { Parser as RichTextParser, Editor as RichTextEditor } from '@dhis2/d2-ui-rich-text';\nimport { acUpdateDashboardItem } from '../../../actions/editDashboard';\nimport { sGetEditDashboardItems } from '../../../reducers/editDashboard';\nimport { sGetDashboardItems } from '../../../reducers/dashboards';\nimport { sGetIsPrinting, sGetPrintDashboardItems } from '../../../reducers/printDashboard';\nimport { isEditMode, PRINT_LAYOUT } from '../../Dashboard/dashboardModes';\nconst style = {\n  textDiv: {\n    padding: '10px',\n    whiteSpace: 'pre-line',\n    lineHeight: '20px'\n  },\n  textField: {\n    fontSize: '14px',\n    fontStretch: 'normal',\n    width: '90%',\n    margin: '0 auto',\n    display: 'block',\n    lineHeight: '24px'\n  },\n  container: {\n    marginBottom: '20px',\n    marginTop: '20px'\n  }\n};\n\nconst TextItem = props => {\n  const {\n    item,\n    dashboardMode,\n    text,\n    acUpdateDashboardItem\n  } = props;\n\n  const onChangeText = event => {\n    const updatedItem = { ...item,\n      text: event.target.value\n    };\n    acUpdateDashboardItem(updatedItem);\n  };\n\n  const viewItem = () => {\n    const textDivStyle = Object.assign({}, style.textField, style.textDiv);\n    return <div className=\"dashboard-item-content\" style={style.container}>\n                <RichTextParser style={textDivStyle}>{text}</RichTextParser>\n            </div>;\n  };\n\n  const editItem = () => {\n    return <>\n                <ItemHeader title={i18n.t('Text item')} itemId={item.id} dashboardMode={dashboardMode} />\n                <Line />\n                <div className=\"dashboard-item-content\">\n                    <RichTextEditor onEdit={onChangeText}>\n                        <Input value={text} multiline fullWidth style={style.textField} placeholder={i18n.t('Add text here')} onChange={onChangeText} />\n                    </RichTextEditor>\n                </div>\n            </>;\n  };\n\n  const printItem = () => {\n    const textDivStyle = Object.assign({}, style.textField, style.textDiv);\n    return <>\n                {props.item.shortened ? <PrintItemInfo /> : null}\n                <div className=\"dashboard-item-content\" style={style.container}>\n                    <RichTextParser style={textDivStyle}>{text}</RichTextParser>\n                </div>\n            </>;\n  };\n\n  let textItem;\n\n  if (isEditMode(dashboardMode)) {\n    textItem = editItem;\n  } else if (dashboardMode === PRINT_LAYOUT) {\n    textItem = printItem;\n  } else {\n    textItem = viewItem;\n  }\n\n  return <>{textItem()}</>;\n};\n\nconst mapStateToProps = (state, ownProps) => {\n  const isPrintPreview = sGetIsPrinting(state);\n  let items;\n\n  if (isPrintPreview) {\n    items = sGetPrintDashboardItems(state);\n  } else if (isEditMode(ownProps.dashboardMode)) {\n    items = sGetEditDashboardItems(state);\n  } else {\n    items = sGetDashboardItems(state);\n  }\n\n  const item = items.find(item => item.id === ownProps.item.id);\n  return {\n    text: item ? item.text : ''\n  };\n};\n\nTextItem.propTypes = {\n  acUpdateDashboardItem: PropTypes.func,\n  dashboardMode: PropTypes.string,\n  item: PropTypes.object,\n  text: PropTypes.string\n};\nexport default connect(mapStateToProps, {\n  acUpdateDashboardItem\n})(TextItem);","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport NotInterestedIcon from '@material-ui/icons/NotInterested';\nimport ItemHeader from '../ItemHeader/ItemHeader';\nimport Line from '../../../widgets/Line';\nimport { FILTER_ORG_UNIT } from '../../../actions/itemFilters';\nimport { sGetItemFiltersRoot, DEFAULT_STATE_ITEM_FILTERS } from '../../../reducers/itemFilters';\nimport { EDIT, isEditMode } from '../../Dashboard/dashboardModes';\n\nconst getIframeSrc = (appDetails, item, itemFilters) => {\n  let iframeSrc = `${appDetails.launchUrl}?dashboardItemId=${item.id}`;\n\n  if (itemFilters[FILTER_ORG_UNIT] && itemFilters[FILTER_ORG_UNIT].length) {\n    const ouIds = itemFilters[FILTER_ORG_UNIT].map(ouFilter => ouFilter.path.split('/').slice(-1)[0]);\n    iframeSrc += `&userOrgUnit=${ouIds.join(',')}`;\n  }\n\n  return iframeSrc;\n};\n\nconst AppItem = ({\n  dashboardMode,\n  item,\n  itemFilters\n}, context) => {\n  let appDetails;\n  const appKey = item.appKey;\n\n  if (appKey) {\n    appDetails = context.d2.system.installedApps.find(app => app.key === appKey);\n  }\n\n  const hideTitle = appDetails?.settings?.dashboardWidget?.hideTitle && dashboardMode !== EDIT;\n  return appDetails && appDetails.name && appDetails.launchUrl ? <>\n            {!hideTitle && <>\n                    <ItemHeader title={appDetails.name} itemId={item.id} dashboardMode={dashboardMode} isShortened={item.shortened} />\n                    <Line />\n                </>}\n            <iframe title={appDetails.name} src={getIframeSrc(appDetails, item, itemFilters)} className={!hideTitle ? 'dashboard-item-content' : 'dashboard-item-content-hidden-title'} style={{\n      border: 'none'\n    }} />\n        </> : <>\n            <ItemHeader title={`${appKey} app not found`} />\n            <Line />\n            <div className=\"dashboard-item-content\" style={{\n      display: 'flex',\n      justifyContent: 'center',\n      alignItems: 'center',\n      height: '90%'\n    }}>\n                <NotInterestedIcon color=\"disabled\" disabled style={{\n        width: 100,\n        height: 100,\n        align: 'center'\n      }} />\n            </div>\n        </>;\n};\n\nAppItem.propTypes = {\n  dashboardMode: PropTypes.string,\n  item: PropTypes.object,\n  itemFilters: PropTypes.object\n};\nAppItem.contextTypes = {\n  d2: PropTypes.object\n};\n\nconst mapStateToProps = (state, ownProps) => {\n  const itemFilters = !isEditMode(ownProps.dashboardMode) ? sGetItemFiltersRoot(state) : DEFAULT_STATE_ITEM_FILTERS;\n  return {\n    itemFilters\n  };\n};\n\nexport default connect(mapStateToProps)(AppItem);","import React from 'react';\nimport PropTypes from 'prop-types';\nimport i18n from '@dhis2/d2-i18n';\nimport { colors } from '@dhis2/ui';\nimport ItemHeader from '../ItemHeader/ItemHeader';\nconst style = {\n  margin: '21px 28px',\n  fontSize: '14px',\n  lineHeight: '18px',\n  color: colors.grey600\n};\n\nconst SpacerItem = props => {\n  return <>\n            <ItemHeader title={i18n.t('Spacer')} itemId={props.item.id} dashboardMode={props.dashboardMode} isShortened={props.item.shortened} />\n            <p style={style}>\n                {i18n.t('Use a spacer to create empty vertical space between other dashboard items.')}\n            </p>\n        </>;\n};\n\nSpacerItem.propTypes = {\n  dashboardMode: PropTypes.string,\n  item: PropTypes.object\n};\nexport default SpacerItem;","import React from 'react';\n\nconst PageBreakItem = () => <div />;\n\nexport default PageBreakItem;","import React from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport i18n from '@dhis2/d2-i18n';\nimport { sGetSelectedId, sGetSelectedShowDescription } from '../../../reducers/selected';\nimport { sGetDashboardById, EMPTY_DASHBOARD } from '../../../reducers/dashboards';\nimport { sGetNamedItemFilters } from '../../../reducers/itemFilters';\nimport { sGetIsEditing } from '../../../reducers/editDashboard';\nimport { sGetPrintDashboardName, sGetPrintDashboardDescription } from '../../../reducers/printDashboard';\nimport classes from './styles/Item.module.css';\n\nconst PrintTitlePageItem = ({\n  name,\n  description,\n  itemFilters,\n  showDescription\n}) => {\n  const getItemFilterList = () => {\n    const listItems = itemFilters.map(({\n      name,\n      values\n    }) => <li className={classes.filterListItem} key={name}>\n                {name}: {values.map(val => val.name).join(', ')}\n            </li>);\n    return <ul className={classes.filterList}>{listItems}</ul>;\n  };\n\n  return <div className={classes.titlePage}>\n            <p className={classes.name}>{name}</p>\n            {showDescription && description && <p className={classes.description}>{description}</p>}\n            {itemFilters.length > 0 && <>\n                    <p className={classes.filterTitle}>\n                        {i18n.t('Filters applied')}\n                    </p>\n                    {getItemFilterList()}\n                </>}\n        </div>;\n};\n\nPrintTitlePageItem.propTypes = {\n  description: PropTypes.string,\n  itemFilters: PropTypes.array,\n  name: PropTypes.string,\n  showDescription: PropTypes.bool\n};\nPrintTitlePageItem.defaultProps = {\n  description: '',\n  name: '',\n  showDescription: false\n};\n\nconst mapStateToProps = state => {\n  const id = sGetSelectedId(state);\n  const isEditMode = sGetIsEditing(state);\n  const viewDashboard = sGetDashboardById(state, id) || EMPTY_DASHBOARD;\n  const name = isEditMode ? sGetPrintDashboardName(state) || i18n.t('Untitled dashboard') : viewDashboard.displayName;\n  const description = isEditMode ? sGetPrintDashboardDescription(state) : viewDashboard.displayDescription;\n  return {\n    name,\n    description,\n    itemFilters: sGetNamedItemFilters(state),\n    showDescription: sGetSelectedShowDescription(state)\n  };\n};\n\nexport default connect(mapStateToProps)(PrintTitlePageItem);","import React from 'react';\nimport PropTypes from 'prop-types';\nimport VisualizationItem from './VisualizationItem/Item';\nimport MessagesItem from './MessagesItem/Item';\nimport NotSupportedItem from './NotSupportedItem/Item';\nimport ListItem from './ListItem/Item';\nimport TextItem from './TextItem/Item';\nimport AppItem from './AppItem/Item';\nimport SpacerItem from './SpacerItem/Item';\nimport PageBreakItem from './PageBreakItem/Item';\nimport PrintTitlePageItem from './PrintTitlePageItem/Item';\nimport { APP, VISUALIZATION, REPORT_TABLE, CHART, MAP, EVENT_CHART, EVENT_REPORT, MESSAGES, REPORTS, RESOURCES, USERS, TEXT, SPACER, PAGEBREAK, PRINT_TITLE_PAGE } from '../../modules/itemTypes';\n\nconst getGridItem = type => {\n  switch (type) {\n    case VISUALIZATION:\n    case REPORT_TABLE:\n    case CHART:\n    case MAP:\n    case EVENT_CHART:\n    case EVENT_REPORT:\n      return VisualizationItem;\n\n    case MESSAGES:\n      return MessagesItem;\n\n    case REPORTS:\n    case RESOURCES:\n    case USERS:\n      return ListItem;\n\n    case TEXT:\n      return TextItem;\n\n    case SPACER:\n      return SpacerItem;\n\n    case APP:\n      return AppItem;\n\n    case PAGEBREAK:\n      return PageBreakItem;\n\n    case PRINT_TITLE_PAGE:\n      return PrintTitlePageItem;\n\n    default:\n      return NotSupportedItem;\n  }\n};\n\nexport const Item = props => {\n  const GridItem = getGridItem(props.item.type);\n  return <GridItem item={props.item} dashboardMode={props.dashboardMode} onToggleItemExpanded={props.onToggleItemExpanded} />;\n};\nItem.propTypes = {\n  dashboardMode: PropTypes.string,\n  item: PropTypes.object,\n  onToggleItemExpanded: PropTypes.func\n};","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport debounce from 'lodash/debounce';\nimport pick from 'lodash/pick';\nconst defaultDebounceMs = 100;\nconst defaultBufferFactor = 0.25;\n\nclass ProgressiveLoadingContainer extends Component {\n  static propTypes = {\n    children: PropTypes.node.isRequired,\n    bufferFactor: PropTypes.number,\n    className: PropTypes.string,\n    debounceMs: PropTypes.number,\n    style: PropTypes.object\n  };\n  static defaultProps = {\n    debounceMs: defaultDebounceMs,\n    bufferFactor: defaultBufferFactor\n  };\n  state = {\n    shouldLoad: false\n  };\n  containerRef = null;\n  shouldLoadHandler = null;\n  handlerOptions = {\n    passive: true\n  };\n\n  checkShouldLoad() {\n    if (!this.containerRef) {\n      return;\n    }\n\n    const bufferPx = this.props.bufferFactor * window.innerHeight;\n    const rect = this.containerRef.getBoundingClientRect();\n\n    if (rect.bottom > -bufferPx && rect.top < window.innerHeight + bufferPx) {\n      this.setState({\n        shouldLoad: true\n      });\n      this.removeHandler();\n    }\n  }\n\n  registerHandler() {\n    this.shouldLoadHandler = debounce(() => this.checkShouldLoad(), this.props.debounceMs);\n    document.getElementsByClassName('dashboard-wrapper')[0]?.addEventListener('scroll', this.shouldLoadHandler, this.handlerOptions);\n  }\n\n  removeHandler() {\n    document.getElementsByClassName('dashboard-wrapper')[0]?.removeEventListener('scroll', this.shouldLoadHandler, this.handlerOptions);\n  }\n\n  componentDidMount() {\n    this.registerHandler();\n    this.checkShouldLoad();\n  }\n\n  componentWillUnmount() {\n    this.removeHandler();\n  }\n\n  render() {\n    const {\n      children,\n      className,\n      style,\n      ...props\n    } = this.props;\n    const {\n      shouldLoad\n    } = this.state;\n    const eventProps = pick(props, ['onMouseDown', 'onTouchStart', 'onMouseUp', 'onTouchEnd']);\n    return <div ref={ref => this.containerRef = ref} style={style} className={className} data-test={`dashboarditem-${props.itemId}`} {...eventProps}>\n                {shouldLoad && children}\n            </div>;\n  }\n\n}\n\nexport default ProgressiveLoadingContainer;","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport i18n from '@dhis2/d2-i18n';\nimport ReactGridLayout from 'react-grid-layout';\nimport { Layer, CenteredContent, CircularLoader } from '@dhis2/ui';\nimport { acUpdateDashboardLayout } from '../../actions/editDashboard';\nimport { Item } from '../Item/Item';\nimport { resize as pluginResize } from '../Item/VisualizationItem/Visualization/plugin';\nimport { isVisualizationType } from '../../modules/itemTypes';\nimport { GRID_ROW_HEIGHT, GRID_COMPACT_TYPE, MARGIN, getGridColumns, hasShape, onItemResize } from './gridUtil';\nimport { orArray } from '../../modules/util';\nimport NoContentMessage from '../../widgets/NoContentMessage';\nimport 'react-grid-layout/css/styles.css';\nimport 'react-resizable/css/styles.css';\nimport './ItemGrid.css';\nimport { sGetSelectedId, sGetSelectedIsLoading } from '../../reducers/selected';\nimport { sGetEditDashboardRoot, sGetEditDashboardItems } from '../../reducers/editDashboard';\nimport { sGetDashboardById, sGetDashboardItems } from '../../reducers/dashboards';\nimport ProgressiveLoadingContainer from '../Item/ProgressiveLoadingContainer';\nimport { VIEW, EDIT } from '../Dashboard/dashboardModes'; // Component\n\nconst EXPANDED_HEIGHT = 17; // this is set in the .dashboard-item-content css\n\nexport const ITEM_CONTENT_PADDING_BOTTOM = 4;\nexport class ItemGrid extends Component {\n  state = {\n    expandedItems: {}\n  };\n  onToggleItemExpanded = clickedId => {\n    const isExpanded = typeof this.state.expandedItems[clickedId] === 'boolean' ? this.state.expandedItems[clickedId] : false;\n    const expandedItems = { ...this.state.expandedItems\n    };\n    expandedItems[clickedId] = !isExpanded;\n    this.setState({\n      expandedItems\n    });\n  };\n\n  UNSAFE_componentWillReceiveProps(nextProps) {\n    if (nextProps.edit) {\n      this.setState({\n        expandedItems: {}\n      });\n    }\n  }\n\n  onLayoutChange = newLayout => {\n    if (this.props.edit) {\n      this.props.acUpdateDashboardLayout(newLayout);\n    }\n  };\n  onResizeStop = (layout, oldItem, newItem) => {\n    onItemResize(newItem.i);\n    const dashboardItem = this.props.dashboardItems.find(item => item.id === newItem.i); // call resize on the item component if it's a plugin type\n\n    if (dashboardItem && isVisualizationType(dashboardItem)) {\n      pluginResize(dashboardItem);\n    }\n  };\n  adjustHeightForExpanded = dashboardItem => {\n    const expandedItem = this.state.expandedItems[dashboardItem.id];\n\n    if (expandedItem && expandedItem === true) {\n      return Object.assign({}, dashboardItem, {\n        h: dashboardItem.h + EXPANDED_HEIGHT\n      });\n    }\n\n    return dashboardItem;\n  };\n  getItemComponent = item => {\n    const itemClassNames = [item.type, this.props.edit ? 'edit' : 'view', `reactgriditem-${item.id}`].join(' ');\n    return <ProgressiveLoadingContainer key={item.i} className={itemClassNames} itemId={item.id}>\n                <Item item={item} dashboardMode={this.props.edit ? EDIT : VIEW} onToggleItemExpanded={this.onToggleItemExpanded} />\n            </ProgressiveLoadingContainer>;\n  };\n  getItemComponents = items => items.map(item => this.getItemComponent(item));\n\n  render() {\n    const {\n      edit,\n      isLoading,\n      dashboardItems\n    } = this.props;\n\n    if (!isLoading && !dashboardItems.length) {\n      return <NoContentMessage text={i18n.t('There are no items on this dashboard')} />;\n    }\n\n    const items = edit ? dashboardItems : dashboardItems.map(this.adjustHeightForExpanded);\n    return <div className=\"grid-wrapper\">\n                {isLoading ? <Layer translucent>\n                        <CenteredContent>\n                            <CircularLoader />\n                        </CenteredContent>\n                    </Layer> : null}\n                <ReactGridLayout onLayoutChange={this.onLayoutChange} onResizeStop={this.onResizeStop} className=\"layout\" layout={items} margin={MARGIN} cols={getGridColumns()} rowHeight={GRID_ROW_HEIGHT} width={window.innerWidth} compactType={GRID_COMPACT_TYPE} isDraggable={edit} isResizable={edit} draggableCancel=\"input,textarea\">\n                    {this.getItemComponents(items)}\n                </ReactGridLayout>\n            </div>;\n  }\n\n}\nItemGrid.propTypes = {\n  acUpdateDashboardLayout: PropTypes.func,\n  dashboardItems: PropTypes.array,\n  edit: PropTypes.bool,\n  isLoading: PropTypes.bool\n};\nItemGrid.defaultProps = {\n  dashboardItems: []\n}; // Container\n\nconst mapStateToProps = (state, ownProps) => {\n  const selectedDashboard = ownProps.edit ? sGetEditDashboardRoot(state) : sGetDashboardById(state, sGetSelectedId(state));\n  const dashboardItems = ownProps.edit ? sGetEditDashboardItems(state) : sGetDashboardItems(state);\n  return {\n    isLoading: sGetSelectedIsLoading(state) || !selectedDashboard,\n    dashboardItems\n  };\n};\n\nconst mapDispatchToProps = {\n  acUpdateDashboardLayout\n};\n\nconst mergeProps = (stateProps, dispatchProps, ownProps) => {\n  const validItems = orArray(stateProps.dashboardItems).filter(hasShape);\n  return { ...dispatchProps,\n    edit: ownProps.edit,\n    isLoading: stateProps.isLoading,\n    dashboardItems: validItems,\n    onItemResize\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps, mergeProps)(ItemGrid);","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport i18n from '@dhis2/d2-i18n';\nimport { colors } from '@dhis2/ui';\nconst styles = {\n  badgeContainer: {\n    margin: '2px',\n    padding: '0 16px',\n    borderRadius: '4px',\n    color: colors.white,\n    backgroundColor: '#212934',\n    height: 36,\n    display: 'flex',\n    alignItems: 'center'\n  },\n  badge: {\n    fontSize: '13px',\n    cursor: 'pointer',\n    whiteSpace: 'nowrap'\n  },\n  badgeRemove: {\n    fontSize: '12px',\n    textDecoration: 'underline',\n    marginLeft: '24px',\n    cursor: 'pointer'\n  }\n};\n\nclass FilterBadge extends Component {\n  onClick = id => () => this.props.onClick(id);\n  onRemove = id => () => this.props.onRemove(id);\n\n  render() {\n    const {\n      data\n    } = this.props;\n    return <div style={styles.badgeContainer} data-test=\"dashboard-filter-badge\">\n                <span style={styles.badge} onClick={this.onClick(data.id)}>\n                    {`${data.name}: ${data.values.length > 1 ? i18n.t('{{count}} selected', {\n          count: data.values.length\n        }) : data.values[0].name}`}\n                </span>\n                <span style={styles.badgeRemove} onClick={this.onRemove(data.id)}>\n                    {i18n.t('Remove')}\n                </span>\n            </div>;\n  }\n\n}\n\nFilterBadge.propTypes = {\n  data: PropTypes.object.isRequired,\n  onClick: PropTypes.func.isRequired,\n  onRemove: PropTypes.func.isRequired\n};\nFilterBadge.defaultProps = {\n  onClick: Function.prototype,\n  onRemove: Function.prototype\n};\nexport default FilterBadge;","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport FilterBadge from './FilterBadge';\nimport { sGetNamedItemFilters } from '../../reducers/itemFilters';\nimport { acRemoveItemFilter } from '../../actions/itemFilters';\nimport { acSetActiveModalDimension } from '../../actions/activeModalDimension';\nimport classes from './styles/FilterBar.module.css';\nexport class FilterBar extends Component {\n  onBadgeRemove = id => {\n    this.props.removeItemFilter(id);\n  };\n  onBadgeClick = id => {\n    this.props.setActiveModalDimension({\n      id,\n      name: this.props.filters.find(item => item.id === id).name\n    });\n  };\n\n  render() {\n    const {\n      filters\n    } = this.props;\n    return filters.length ? // the 3 is calculated so that the FilterBar has the same vertical position as the TitleBar in relation to the ControlBar\n    <div className={classes.bar} style={{\n      top: 3\n    }}>\n                {filters.map(filter => <FilterBadge key={filter.id} data={filter} onClick={this.onBadgeClick} onRemove={this.onBadgeRemove} />)}\n            </div> : null;\n  }\n\n}\nFilterBar.propTypes = {\n  filters: PropTypes.array.isRequired,\n  removeItemFilter: PropTypes.func.isRequired,\n  setActiveModalDimension: PropTypes.func\n};\nFilterBar.defaultProps = {\n  filters: [],\n  removeItemFIlter: Function.prototype\n};\n\nconst mapStateToProps = state => ({\n  filters: sGetNamedItemFilters(state)\n});\n\nexport default connect(mapStateToProps, {\n  setActiveModalDimension: acSetActiveModalDimension,\n  removeItemFilter: acRemoveItemFilter\n})(FilterBar);","export const SET_WINDOW_HEIGHT = 'SET_WINDOW_HEIGHT';\nexport const DEFAULT_STATE_WINDOW_HEIGHT = window.innerHeight;\nexport default ((state = DEFAULT_STATE_WINDOW_HEIGHT, action) => {\n  switch (action.type) {\n    case SET_WINDOW_HEIGHT:\n      {\n        return action.value;\n      }\n\n    default:\n      return state;\n  }\n});\nexport const sGetWindowHeight = state => state.windowHeight;","import { generateUid } from 'd2/uid';\nimport { SET_PRINT_DASHBOARD, CLEAR_PRINT_DASHBOARD, SET_PRINT_DASHBOARD_LAYOUT, ADD_PRINT_DASHBOARD_ITEM, REMOVE_PRINT_DASHBOARD_ITEM, UPDATE_PRINT_DASHBOARD_ITEM } from '../reducers/printDashboard';\nimport { NEW_ITEM_SHAPE, getGridItemProperties, getPageBreakItemShape, getPrintTitlePageItemShape } from '../components/ItemGrid/gridUtil';\nimport { itemTypeMap, PAGEBREAK } from '../modules/itemTypes'; // actions\n\nexport const acSetPrintDashboard = (dashboard, items) => {\n  const val = { ...dashboard,\n    dashboardItems: items\n  };\n  return {\n    type: SET_PRINT_DASHBOARD,\n    value: val\n  };\n};\nexport const acClearPrintDashboard = () => ({\n  type: CLEAR_PRINT_DASHBOARD\n});\nexport const acUpdatePrintDashboardLayout = value => ({\n  type: SET_PRINT_DASHBOARD_LAYOUT,\n  value\n});\nexport const acAddPrintDashboardItem = item => {\n  const type = item.type;\n  delete item.type;\n  const itemPropName = itemTypeMap[type].propName;\n  const id = generateUid();\n  const gridItemProperties = getGridItemProperties(id);\n  let shape;\n\n  if (type === PAGEBREAK) {\n    const yPos = item.yPos || 0;\n    shape = getPageBreakItemShape(yPos, item.isStatic);\n  } else {\n    shape = getPrintTitlePageItemShape(item.isOneItemPerPage);\n  }\n\n  return {\n    type: ADD_PRINT_DASHBOARD_ITEM,\n    value: {\n      id,\n      type,\n      position: item.position || null,\n      [itemPropName]: item.content,\n      ...NEW_ITEM_SHAPE,\n      ...gridItemProperties,\n      ...shape\n    }\n  };\n};\nexport const acRemovePrintDashboardItem = value => ({\n  type: REMOVE_PRINT_DASHBOARD_ITEM,\n  value\n});\nexport const acUpdatePrintDashboardItem = item => ({\n  type: UPDATE_PRINT_DASHBOARD_ITEM,\n  value: item\n});","import React, { useEffect } from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport ViewTitleBar from '../TitleBar/ViewTitleBar';\nimport ItemGrid from '../ItemGrid/ItemGrid';\nimport FilterBar from '../FilterBar/FilterBar';\nimport DashboardsBar from '../ControlBar/DashboardsBar';\nimport { sGetIsEditing } from '../../reducers/editDashboard';\nimport { sGetIsPrinting } from '../../reducers/printDashboard';\nimport { sGetSelectedId } from '../../reducers/selected';\nimport { sGetWindowHeight } from '../../reducers/windowHeight';\nimport { sGetControlBarUserRows } from '../../reducers/controlBar';\nimport { acClearEditDashboard } from '../../actions/editDashboard';\nimport { acClearPrintDashboard } from '../../actions/printDashboard';\nimport { getControlBarHeight, HEADERBAR_HEIGHT } from '../ControlBar/controlBarDimensions';\nexport const ViewDashboard = props => {\n  useEffect(() => {\n    if (props.dashboardIsEditing) {\n      props.clearEditDashboard();\n    } else if (props.dashboardIsPrinting) {\n      props.clearPrintDashboard();\n    }\n  }, [props.dashboardIsEditing, props.dashboardIsPrinting]);\n  useEffect(() => {\n    document.querySelector('.dashboard-wrapper')?.scroll(0, 0);\n  }, [props.selectedId]);\n  const height = props.windowHeight - HEADERBAR_HEIGHT - getControlBarHeight(props.controlBarRows);\n  return <>\n            <DashboardsBar />\n            <div className=\"dashboard-wrapper\" style={{\n      height\n    }}>\n                <ViewTitleBar />\n                <FilterBar />\n                <ItemGrid edit={false} />\n            </div>\n        </>;\n};\nViewDashboard.propTypes = {\n  clearEditDashboard: PropTypes.func,\n  clearPrintDashboard: PropTypes.func,\n  controlBarRows: PropTypes.number,\n  dashboardIsEditing: PropTypes.bool,\n  dashboardIsPrinting: PropTypes.bool,\n  selectedId: PropTypes.string,\n  windowHeight: PropTypes.number\n};\n\nconst mapStateToProps = state => {\n  return {\n    dashboardIsEditing: sGetIsEditing(state),\n    dashboardIsPrinting: sGetIsPrinting(state),\n    controlBarRows: sGetControlBarUserRows(state),\n    selectedId: sGetSelectedId(state),\n    windowHeight: sGetWindowHeight(state)\n  };\n};\n\nexport default connect(mapStateToProps, {\n  clearEditDashboard: acClearEditDashboard,\n  clearPrintDashboard: acClearPrintDashboard\n})(ViewDashboard);","import React from 'react';\nimport PropTypes from 'prop-types';\nimport i18n from '@dhis2/d2-i18n';\nimport { InputField } from '@dhis2/ui';\n\nconst ItemSearchField = props => <InputField name=\"Dashboard item search\" label={i18n.t('Search for items to add to this dashboard')} type=\"text\" onChange={props.onChange} onFocus={props.onFocus} value={props.value} dataTest=\"item-search\" />;\n\nItemSearchField.propTypes = {\n  value: PropTypes.string,\n  onChange: PropTypes.func,\n  onFocus: PropTypes.func\n};\nexport default ItemSearchField;","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { MenuItem, colors } from '@dhis2/ui';\nimport classes from './styles/HeaderMenuItem.module.css';\n\nconst HeaderMenuItem = ({\n  title\n}) => <MenuItem className={classes.item} dense key={title} disabled label={<span style={{\n  color: colors.grey800,\n  fontWeight: '600'\n}}>\n                {title}\n            </span>} />;\n\nHeaderMenuItem.propTypes = {\n  title: PropTypes.string.isRequired\n};\nexport default HeaderMenuItem;","import React from 'react';\nimport { colors } from '@dhis2/ui';\nimport PropTypes from 'prop-types';\n\nconst LaunchIcon = ({\n  className\n}) => <svg className={className} xmlns=\"http://www.w3.org/2000/svg\" width=\"12\" height=\"12\" fill={colors.grey600} viewBox=\"0 0 24 24\">\n        <path d=\"M0 0h24v24H0z\" fill=\"none\" />\n        <path d=\"M19 19H5V5h7V3H5c-1.11 0-2 .9-2 2v14c0 1.1.89 2 2 2h14c1.1 0 2-.9 2-2v-7h-2v7zM14 3v2h3.59l-9.83 9.83 1.41 1.41L19 6.41V10h2V3h-7z\" />\n    </svg>;\n\nLaunchIcon.propTypes = {\n  className: PropTypes.string\n};\nexport default LaunchIcon;","import React from 'react';\nimport { MenuItem, colors } from '@dhis2/ui';\nimport i18n from '@dhis2/d2-i18n';\nimport PropTypes from 'prop-types';\nimport { visTypeIcons } from '@dhis2/analytics';\nimport { getItemIcon, VISUALIZATION } from '../../modules/itemTypes';\nimport LaunchIcon from '../../icons/Launch';\nimport classes from './styles/ContentMenuItem.module.css';\n\nconst LaunchLink = ({\n  url\n}) => <a onClick={e => e.stopPropagation()} className={classes.launchLink} target=\"_blank\" rel=\"noopener noreferrer\" href={url}>\n        <LaunchIcon />\n    </a>;\n\nLaunchLink.propTypes = {\n  url: PropTypes.string\n};\n\nconst InsertButton = () => <button className={classes.buttonInsert}>{i18n.t('Insert')}</button>;\n\nconst ContentMenuItem = ({\n  type,\n  name,\n  onInsert,\n  url,\n  visType\n}) => {\n  const ItemIcon = getItemIcon(type);\n  const renderedItemIcon = type === VISUALIZATION ? visTypeIcons[visType] : <ItemIcon style={{\n    fill: colors.grey600\n  }} />;\n  return <MenuItem dense onClick={onInsert} label={<div className={classes.menuItem}>\n                    <div className={classes.label}>\n                        <span style={{\n        marginRight: '6px'\n      }}>\n                            {renderedItemIcon}\n                        </span>\n                        <span>{name}</span>\n                        {url ? <LaunchLink url={url} /> : null}\n                    </div>\n                    <InsertButton />\n                </div>} dataTest={`menu-item-${name}`} />;\n};\n\nContentMenuItem.propTypes = {\n  name: PropTypes.string,\n  type: PropTypes.string,\n  url: PropTypes.string,\n  visType: PropTypes.string,\n  onInsert: PropTypes.func\n};\nexport default ContentMenuItem;","import { sGetEditDashboardRoot } from '../../reducers/editDashboard';\nimport { itemTypeMap } from '../../modules/itemTypes';\nimport { acAddDashboardItem, acUpdateDashboardItem } from '../../actions/editDashboard';\nexport const tAddListItemContent = (type, content) => (dispatch, getState) => {\n  const state = getState();\n  const listItemType = itemTypeMap[type].propName;\n  const dashboardItems = sGetEditDashboardRoot(state).dashboardItems;\n  const dashboardItemIndex = dashboardItems.findIndex(item => item.type === type);\n  let dashboardItem; // Reports/Resources/Users dashboard item type already present in dashboard\n\n  if (dashboardItemIndex > -1) {\n    dashboardItem = dashboardItems[dashboardItemIndex];\n    dashboardItem[listItemType].push(content);\n    dispatch(acUpdateDashboardItem(dashboardItem));\n  } else {\n    dashboardItem = {\n      type: type,\n      content: [content]\n    };\n    dispatch(acAddDashboardItem(dashboardItem));\n  }\n};","import i18n from '@dhis2/d2-i18n';\nimport { VISUALIZATION, MAP, EVENT_CHART, EVENT_REPORT, USERS, REPORTS, RESOURCES, APP, MESSAGES, TEXT, SPACER } from '../../modules/itemTypes';\nexport const singleItems = [{\n  id: 'additional',\n  header: i18n.t('Additional items'),\n  items: [{\n    type: TEXT,\n    name: i18n.t('Text box'),\n    content: ''\n  }, {\n    type: MESSAGES,\n    name: i18n.t('Messages'),\n    content: 'true'\n  }, {\n    type: SPACER,\n    name: i18n.t('Spacer'),\n    content: ''\n  }]\n}]; // categorizedItems are grouped in the item selector menu\n\nexport const categorizedItems = [VISUALIZATION, MAP, EVENT_REPORT, EVENT_CHART, USERS, REPORTS, RESOURCES, APP]; // listItemTypes are included in a single dashboard item\n\nexport const listItemTypes = [REPORTS, RESOURCES, USERS];","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport i18n from '@dhis2/d2-i18n';\nimport { MenuItem, Divider } from '@dhis2/ui';\nimport HeaderMenuItem from './HeaderMenuItem';\nimport ContentMenuItem from './ContentMenuItem';\nimport { tAddListItemContent } from './actions';\nimport { acAddDashboardItem } from '../../actions/editDashboard';\nimport { getItemUrl, APP, VISUALIZATION } from '../../modules/itemTypes';\nimport { categorizedItems, listItemTypes } from './selectableItems';\nimport classes from './styles/CategorizedMenuGroup.module.css';\n\nclass CategorizedMenuGroup extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      seeMore: false\n    };\n  }\n\n  addItem = item => () => {\n    const {\n      type,\n      acAddDashboardItem,\n      tAddListItemContent\n    } = this.props;\n\n    if (type === APP) {\n      acAddDashboardItem({\n        type,\n        content: item.key\n      });\n    } else {\n      const newItem = {\n        id: item.id,\n        name: item.displayName || item.name\n      };\n\n      if (listItemTypes.includes(type)) {\n        tAddListItemContent(type, newItem);\n      } else {\n        acAddDashboardItem({\n          type,\n          content: newItem\n        });\n      }\n    }\n  };\n  toggleSeeMore = () => {\n    this.setState({\n      seeMore: !this.state.seeMore\n    });\n    this.props.onChangeItemsLimit(this.props.type);\n  };\n\n  render() {\n    const {\n      title,\n      type,\n      items,\n      hasMore\n    } = this.props;\n    return <>\n                <HeaderMenuItem title={title} />\n                {items.map(item => {\n        const itemUrl = getItemUrl(type, item, this.context.d2);\n        return <ContentMenuItem key={item.id || item.key} type={type} visType={type === VISUALIZATION ? item.type : type} name={item.displayName || item.name} onInsert={this.addItem(item)} url={itemUrl} />;\n      })}\n                {hasMore ? <MenuItem dense key={`showmore${title}`} onClick={this.toggleSeeMore} label={<button className={classes.showMoreButton}>\n                                {this.state.seeMore ? i18n.t('Show fewer') : i18n.t('Show more')}\n                            </button>} /> : null}\n                <Divider margin=\"8px 0px\" />\n            </>;\n  }\n\n}\n\nCategorizedMenuGroup.propTypes = {\n  items: PropTypes.array.isRequired,\n  title: PropTypes.string.isRequired,\n  type: PropTypes.oneOf(categorizedItems).isRequired,\n  onChangeItemsLimit: PropTypes.func.isRequired,\n  acAddDashboardItem: PropTypes.func,\n  hasMore: PropTypes.bool,\n  tAddListItemContent: PropTypes.func\n};\nCategorizedMenuGroup.contextTypes = {\n  d2: PropTypes.object.isRequired\n};\nexport default connect(null, {\n  acAddDashboardItem,\n  tAddListItemContent\n})(CategorizedMenuGroup);","import React from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport HeaderMenuItem from './HeaderMenuItem';\nimport ContentMenuItem from './ContentMenuItem';\nimport { acAddDashboardItem } from '../../actions/editDashboard';\nexport const SinglesMenuGroup = ({\n  acAddDashboardItem,\n  category\n}) => {\n  const addToDashboard = ({\n    type,\n    content\n  }) => () => {\n    acAddDashboardItem({\n      type,\n      content\n    });\n  };\n\n  return <>\n            <HeaderMenuItem title={category.header} />\n            {category.items.map(item => <ContentMenuItem key={item.type} type={item.type} name={item.name} onInsert={addToDashboard(item)} />)}\n        </>;\n};\nSinglesMenuGroup.propTypes = {\n  acAddDashboardItem: PropTypes.func,\n  category: PropTypes.object\n};\nexport default connect(null, {\n  acAddDashboardItem\n})(SinglesMenuGroup);","import React, { useState, useEffect, createRef } from 'react';\nimport PropTypes from 'prop-types';\nimport { Popover, FlyoutMenu } from '@dhis2/ui';\nimport ItemSearchField from './ItemSearchField';\nimport CategorizedMenuGroup from './CategorizedMenuGroup';\nimport SinglesMenuGroup from './SinglesMenuGroup';\nimport { singleItems, categorizedItems } from './selectableItems';\nimport { itemTypeMap, getDefaultItemCount } from '../../modules/itemTypes';\nimport classes from './styles/ItemSelector.module.css'; // eslint-disable-next-line no-empty-pattern\n\nconst ItemSelector = ({}, context) => {\n  const [isOpen, setIsOpen] = useState(false);\n  const [filter, setFilter] = useState('');\n  const [items, setItems] = useState(null);\n  const [maxOptions, setMaxOptions] = useState(new Set());\n  useEffect(() => {\n    let queryString = '?count=11';\n\n    if ([...maxOptions.values()].length) {\n      queryString += '&max=' + [...maxOptions.values()].join('&max=');\n    }\n\n    const filterStr = filter ? `/${filter}` : '';\n    context.d2.Api.getApi().get(`dashboards/q${filterStr}${queryString}`).then(response => setItems(response)).catch(console.error);\n  }, [filter, maxOptions]);\n\n  const closeMenu = () => {\n    setIsOpen(false);\n    setFilter('');\n    setMaxOptions(new Set());\n  };\n\n  const openMenu = () => setIsOpen(true);\n\n  const getCategorizedMenuGroups = () => {\n    return categorizedItems.filter(type => {\n      const itemType = itemTypeMap[type];\n      return items && items[itemType.endPointName];\n    }).map(type => {\n      const itemType = itemTypeMap[type];\n      const itemCount = getDefaultItemCount(type);\n      const allItems = items[itemType.endPointName];\n      const hasMore = allItems.length > itemCount;\n      const displayItems = maxOptions.has(itemType.id) ? allItems : allItems.slice(0, itemCount);\n      return <CategorizedMenuGroup key={type} type={type} title={itemType.pluralTitle} items={displayItems} onChangeItemsLimit={updateMaxOptions} hasMore={hasMore} />;\n    });\n  };\n\n  const getSinglesMenuGroups = () => singleItems.map(category => <SinglesMenuGroup key={category.id} category={category} />);\n\n  const getMenuGroups = () => getCategorizedMenuGroups().concat(getSinglesMenuGroups());\n\n  const updateMaxOptions = type => {\n    if (type) {\n      const options = new Set(maxOptions);\n      options.has(type) ? options.delete(type) : options.add(type);\n      setMaxOptions(options);\n    } else {\n      setMaxOptions(new Set());\n    }\n  };\n\n  const updateFilter = ({\n    value\n  }) => setFilter(value);\n\n  const inputRef = createRef();\n  return <>\n            <span ref={inputRef}>\n                <ItemSearchField value={filter} onChange={updateFilter} onFocus={openMenu} />\n            </span>\n            {isOpen && <Popover reference={inputRef} placement=\"bottom-start\" onClickOutside={closeMenu} arrow={false} maxWidth={700}>\n                    <FlyoutMenu className={classes.menu} dataTest=\"item-menu\" maxWidth=\"700px\">\n                        {getMenuGroups()}\n                    </FlyoutMenu>\n                </Popover>}\n        </>;\n};\n\nItemSelector.contextTypes = {\n  d2: PropTypes.object.isRequired\n};\nexport default ItemSelector;","import React from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport i18n from '@dhis2/d2-i18n';\nimport { InputField, TextAreaField } from '@dhis2/ui';\nimport ItemSelector from '../ItemSelector/ItemSelector';\nimport { acSetDashboardTitle, acSetDashboardDescription } from '../../actions/editDashboard';\nimport { orObject } from '../../modules/util';\nimport { sGetEditDashboardRoot } from '../../reducers/editDashboard';\nimport classes from './styles/EditTitleBar.module.css';\nexport const EditTitleBar = ({\n  name,\n  description,\n  onChangeTitle,\n  onChangeDescription\n}) => {\n  const updateTitle = (_, e) => {\n    onChangeTitle(e.target.value);\n  };\n\n  const updateDescription = (_, e) => {\n    onChangeDescription(e.target.value);\n  };\n\n  return <section className={classes.section}>\n            <div className={classes.titleDescription}>\n                <InputField className={classes.title} name=\"Dashboard title input\" label={i18n.t('Dashboard title')} type=\"text\" onChange={updateTitle} value={name} placeholder={i18n.t('Untitled dashboard')} dataTest=\"dashboard-title-input\" />\n                <TextAreaField className={classes.description} name=\"Dashboard description input\" label={i18n.t('Dashboard description')} onChange={updateDescription} value={description} dataTest=\"dashboard-description-input\" />\n            </div>\n            <div className={classes.itemSelector}>\n                <ItemSelector />\n            </div>\n        </section>;\n};\nEditTitleBar.propTypes = {\n  onChangeDescription: PropTypes.func.isRequired,\n  onChangeTitle: PropTypes.func.isRequired,\n  description: PropTypes.string,\n  name: PropTypes.string\n};\nEditTitleBar.defaultProps = {\n  name: '',\n  description: ''\n};\n\nconst mapStateToProps = state => {\n  const selectedDashboard = orObject(sGetEditDashboardRoot(state));\n  return {\n    name: selectedDashboard.name,\n    description: selectedDashboard.description\n  };\n};\n\nconst mapDispatchToProps = {\n  onChangeTitle: acSetDashboardTitle,\n  onChangeDescription: acSetDashboardDescription\n};\nexport default connect(mapStateToProps, mapDispatchToProps)(EditTitleBar);","import React from 'react';\nimport PropTypes from 'prop-types';\nimport i18n from '@dhis2/d2-i18n';\nimport { Button, Modal, ModalContent, ModalActions, ButtonStrip, ModalTitle } from '@dhis2/ui';\nimport classes from './styles/ConfirmDeleteDialog.module.css';\nexport const ConfirmDeleteDialog = ({\n  dashboardName,\n  onDeleteConfirmed,\n  onContinueEditing,\n  open\n}) => {\n  const actions = [<Button key=\"cancel\" secondary onClick={onContinueEditing} dataTest=\"cancel-delete-dashboard\">\n            {i18n.t('Cancel')}\n        </Button>, <Button key=\"delete\" destructive onClick={onDeleteConfirmed} dataTest=\"confirm-delete-dashboard\">\n            {i18n.t('Delete')}\n        </Button>];\n  return open && <Modal onClose={onContinueEditing} small position=\"middle\">\n                <ModalTitle>{i18n.t('Delete dashboard')}</ModalTitle>\n                <ModalContent>\n                    <span className={classes.content}>\n                        {i18n.t('Deleting dashboard \"{{ dashboardName }}\" will remove it for all users. This action cannot be undone. Are you sure you want to permanently delete this dashboard?', {\n          dashboardName\n        })}\n                    </span>\n                </ModalContent>\n                <ModalActions>\n                    <ButtonStrip>{actions}</ButtonStrip>\n                </ModalActions>\n            </Modal>;\n};\nConfirmDeleteDialog.propTypes = {\n  dashboardName: PropTypes.string,\n  open: PropTypes.bool,\n  onContinueEditing: PropTypes.func,\n  onDeleteConfirmed: PropTypes.func\n};\nexport default ConfirmDeleteDialog;","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { Redirect } from 'react-router-dom';\nimport i18n from '@dhis2/d2-i18n';\nimport TranslationDialog from '@dhis2/d2-ui-translation-dialog';\nimport { Button, ButtonStrip } from '@dhis2/ui';\nimport ConfirmDeleteDialog from './ConfirmDeleteDialog';\nimport { tSaveDashboard, acClearEditDashboard, acSetPrintPreviewView, acClearPrintPreviewView } from '../../actions/editDashboard';\nimport { acClearPrintDashboard } from '../../actions/printDashboard';\nimport { tDeleteDashboard, acSetDashboardDisplayName } from '../../actions/dashboards';\nimport { sGetEditDashboardRoot, sGetIsNewDashboard, sGetIsPrintPreviewView } from '../../reducers/editDashboard';\nimport { apiFetchDashboard } from '../../api/dashboards';\nimport classes from './styles/EditBar.module.css';\nexport class EditBar extends Component {\n  state = {\n    translationDialogIsOpen: false,\n    dashboardModel: undefined,\n    dashboard: undefined,\n    confirmDeleteDialogOpen: false,\n    redirectUrl: undefined\n  };\n  onConfirmDelete = () => {\n    this.setState({\n      confirmDeleteDialogOpen: true\n    });\n  };\n  onSave = () => {\n    this.props.onSave().then(newId => {\n      this.setState({\n        redirectUrl: `/${newId}`\n      });\n    });\n  };\n  onPrintPreview = () => {\n    if (this.props.isPrintPreviewView) {\n      this.props.clearPrintPreview();\n      this.props.clearPrintDashboard();\n    } else {\n      this.props.showPrintPreview();\n    }\n  };\n  onDiscard = () => {\n    this.props.onDiscardChanges();\n    const redirectUrl = this.props.dashboardId ? `/${this.props.dashboardId}` : '/';\n    this.setState({\n      redirectUrl\n    });\n  };\n  onContinueEditing = () => {\n    this.setState({\n      confirmDeleteDialogOpen: false\n    });\n  };\n  onDeleteConfirmed = () => {\n    this.setState({\n      confirmDeleteDialogOpen: false\n    });\n    this.props.onDelete(this.props.dashboardId).then(() => {\n      this.setState({\n        redirectUrl: '/'\n      });\n    });\n  };\n  onTranslationsSaved = async translations => {\n    if (translations && translations.length) {\n      const dbLocale = await this.context.d2.currentUser.userSettings.get('keyDbLocale');\n      const translation = translations.find(t => t.locale === dbLocale && t.property === 'NAME');\n\n      if (translation && translation.value) {\n        this.props.onTranslate(this.props.dashboardId, translation.value);\n      }\n    }\n  };\n  fetchDashboardModel = () => {\n    if (this.props.dashboardId && !this.state.dashboard) {\n      apiFetchDashboard(this.context.dataEngine, this.props.dashboardId).then(dashboard => this.setState({\n        dashboard\n      }));\n    }\n  };\n\n  componentDidMount() {\n    this.fetchDashboardModel();\n  }\n\n  componentDidUpdate() {\n    this.fetchDashboardModel();\n  }\n\n  toggleTranslationDialog = () => {\n    this.setState({\n      translationDialogIsOpen: !this.state.translationDialogIsOpen\n    });\n  };\n  confirmDeleteDialog = () => this.props.deleteAccess && this.props.dashboardId ? <ConfirmDeleteDialog dashboardName={this.props.dashboardName} onDeleteConfirmed={this.onDeleteConfirmed} onContinueEditing={this.onContinueEditing} open={this.state.confirmDeleteDialogOpen} /> : null;\n  translationDialog = () => this.state.dashboard && this.state.dashboard.id ? <TranslationDialog className=\"translation-dialog\" d2={this.context.d2} open={this.state.translationDialogIsOpen} onRequestClose={this.toggleTranslationDialog} objectToTranslate={{ ...this.state.dashboard,\n    modelDefinition: {\n      name: 'dashboard'\n    }\n  }} fieldsToTranslate={['name', 'description']} onTranslationSaved={this.onTranslationsSaved} onTranslationError={err => console.log('translation update error', err)} /> : null;\n  renderActionButtons = () => <ButtonStrip>\n            <Button primary onClick={this.onSave} dataTest=\"save-dashboard-button\">\n                {i18n.t('Save changes')}\n            </Button>\n            <Button onClick={this.onPrintPreview}>\n                {this.props.isPrintPreviewView ? i18n.t('Exit Print preview') : i18n.t('Print preview')}\n            </Button>\n\n            {this.props.dashboardId && <Button onClick={this.toggleTranslationDialog}>\n                    {i18n.t('Translate')}\n                </Button>}\n            {this.props.dashboardId && this.props.deleteAccess && <Button onClick={this.onConfirmDelete} dataTest=\"delete-dashboard-button\">\n                    {i18n.t('Delete')}\n                </Button>}\n        </ButtonStrip>;\n\n  render() {\n    if (this.state.redirectUrl) {\n      return <Redirect to={this.state.redirectUrl} />;\n    }\n\n    const {\n      updateAccess\n    } = this.props;\n    const discardBtnText = updateAccess ? i18n.t('Exit without saving') : i18n.t('Go to dashboards');\n    return <>\n                <div className={classes.editBar}>\n                    <div className={classes.controls}>\n                        {updateAccess ? this.renderActionButtons() : null}\n                        <Button secondary onClick={this.onDiscard}>\n                            {discardBtnText}\n                        </Button>\n                    </div>\n                </div>\n                {this.translationDialog()}\n                {this.confirmDeleteDialog()}\n            </>;\n  }\n\n}\nEditBar.propTypes = {\n  clearPrintDashboard: PropTypes.func,\n  clearPrintPreview: PropTypes.func,\n  dashboardId: PropTypes.string,\n  dashboardName: PropTypes.string,\n  deleteAccess: PropTypes.bool,\n  isPrintPreviewView: PropTypes.bool,\n  showPrintPreview: PropTypes.func,\n  updateAccess: PropTypes.bool,\n  onDelete: PropTypes.func,\n  onDiscardChanges: PropTypes.func,\n  onSave: PropTypes.func,\n  onTranslate: PropTypes.func\n};\nEditBar.contextTypes = {\n  dataEngine: PropTypes.object,\n  d2: PropTypes.object\n};\n\nconst mapStateToProps = state => {\n  const dashboard = sGetEditDashboardRoot(state);\n  let deleteAccess;\n  let updateAccess;\n\n  if (sGetIsNewDashboard(state)) {\n    deleteAccess = true;\n    updateAccess = true;\n  } else {\n    updateAccess = dashboard.access ? dashboard.access.update : false;\n    deleteAccess = dashboard.access ? dashboard.access.delete : false;\n  }\n\n  return {\n    dashboardId: dashboard.id,\n    dashboardName: dashboard.name,\n    deleteAccess,\n    isPrintPreviewView: sGetIsPrintPreviewView(state),\n    updateAccess\n  };\n};\n\nconst mapDispatchToProps = dispatch => ({\n  clearPrintDashboard: () => dispatch(acClearPrintDashboard()),\n  clearPrintPreview: () => dispatch(acClearPrintPreviewView()),\n  onSave: () => dispatch(tSaveDashboard()).then(id => id),\n  onDelete: id => dispatch(tDeleteDashboard(id)),\n  onDiscardChanges: () => dispatch(acClearEditDashboard()),\n  onTranslate: (id, value) => dispatch(acSetDashboardDisplayName(id, value)),\n  showPrintPreview: () => dispatch(acSetPrintPreviewView())\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(EditBar);","import React from 'react';\nimport PropTypes from 'prop-types';\nimport i18n from '@dhis2/d2-i18n';\nimport { NoticeBox, CenteredContent } from '@dhis2/ui';\nimport classes from './styles/NotSupportedNotice.module.css';\n\nconst NotSupportedNotice = ({\n  message\n}) => <CenteredContent position=\"top\">\n        <div className={classes.noticeContainer}>\n            <NoticeBox title={i18n.t('Not supported')} warning>\n                {message}\n            </NoticeBox>\n        </div>\n    </CenteredContent>;\n\nNotSupportedNotice.propTypes = {\n  message: PropTypes.string\n};\nexport default NotSupportedNotice;","import React from 'react';\nimport PropTypes from 'prop-types';\nimport i18n from '@dhis2/d2-i18n';\nimport { a4LandscapeWidthPx } from '../ItemGrid/gridUtil';\nimport classes from './styles/PrintInfo.module.css';\n\nconst PrintInfo = ({\n  isLayout\n}) => {\n  const maxWidth = a4LandscapeWidthPx < window.innerWidth ? a4LandscapeWidthPx : window.innerWidth;\n  const infoHeader = isLayout ? i18n.t('dashboard layout') : i18n.t('one item per page');\n  return <div className={classes.infoWrapper}>\n            <p className={classes.infoHeader}>\n                {`${i18n.t('Print Preview')}: ${infoHeader}`}\n            </p>\n            <div style={{\n      maxWidth\n    }}>\n                <p className={classes.info}>\n                    {`${i18n.t('For best print results')}:`}\n                </p>\n                <div className={classes.info}>\n                    <ul className={classes.infoList}>\n                        <li>{i18n.t('Use Chrome or Edge web browser')}</li>\n                        <li>\n                            {i18n.t('Wait for all dashboard items to load before printing')}\n                        </li>\n                        <li>\n                            {i18n.t('Use A4 landscape paper size and default margin settings in the browser print dialog')}\n                        </li>\n                    </ul>\n                </div>\n            </div>\n            <hr className={classes.divider} />\n        </div>;\n};\n\nPrintInfo.propTypes = {\n  isLayout: PropTypes.bool\n};\nexport default PrintInfo;","import React from 'react';\nimport { colors } from '@dhis2/ui';\n\nconst LessHorizontalIcon = () => <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" fill={colors.grey600} viewBox=\"0 0 24 24\">\n        <path d=\"m13.2928932 6.29289322c.3905243-.39052429 1.0236893-.39052429 1.4142136 0 .3604839.36048396.3882135.92771502.0831886 1.32000622l-.0831886.09420734-4.2921068 4.29289322 4.2921068 4.2928932c.3604839.360484.3882135.927715.0831886 1.3200062l-.0831886.0942074c-.360484.3604839-.927715.3882135-1.3200062.0831886l-.0942074-.0831886-4.99999998-5c-.36048396-.360484-.3882135-.927715-.08318861-1.3200062l.08318861-.0942074z\" />\n    </svg>;\n\nexport default LessHorizontalIcon;","import React from 'react';\nimport PropTypes from 'prop-types';\nimport i18n from '@dhis2/d2-i18n';\nimport { Button } from '@dhis2/ui';\nimport { Link } from 'react-router-dom';\nimport LessHorizontalIcon from '../../icons/LessHorizontal';\nimport { a4LandscapeWidthPx } from '../ItemGrid/gridUtil';\nimport classes from './styles/PrintActionsBar.module.css'; // 42px set in the module css file\n\nexport const PRINT_ACTIONS_BAR_HEIGHT = 42;\n\nconst PrintActionsBar = ({\n  id\n}) => {\n  const width = a4LandscapeWidthPx < window.innerWidth ? a4LandscapeWidthPx : window.innerWidth;\n  return <>\n            <div className={classes.container}>\n                <div className={classes.inner} style={{\n        width\n      }}>\n                    <Link className={classes.link} to={`/${id}`}>\n                        <Button dataTest=\"exit-print-preview\">\n                            <LessHorizontalIcon />\n                            {i18n.t('Exit print preview')}\n                        </Button>\n                    </Link>\n                    <Button onClick={window.print}>{i18n.t('Print')}</Button>\n                </div>\n            </div>\n            <div className={classes.topMargin} />\n        </>;\n};\n\nPrintActionsBar.propTypes = {\n  id: PropTypes.string\n};\nexport default PrintActionsBar;","import sortBy from 'lodash/sortBy';\nimport { orArray } from './util';\nimport { itemTypeMap } from './itemTypes';\nexport const getTransformYPx = elStyle => {\n  if (!elStyle || !elStyle.transform) {\n    return null;\n  } // find valid transforms - those with y pixels\n  // the code is expecting the transform prop to\n  // look like:  translate(10px, 300px)\n\n\n  const transformY = elStyle.transform.split(' ')[1]?.match(/(\\d+)px/);\n\n  if (transformY) {\n    return parseInt(transformY[1]);\n  } else {\n    return null;\n  }\n};\nexport const getDomGridItemsSortedByYPos = elements => {\n  const types = Object.keys(itemTypeMap);\n  const elementsWithBoundingRect = orArray(elements).map(el => {\n    const type = Array.from(el.classList).find(className => types.indexOf(className) > -1);\n    const rect = el.getBoundingClientRect();\n    const y = getTransformYPx(el.style) || parseInt(rect.y);\n    return {\n      type,\n      classList: el.classList,\n      bottomY: y + parseInt(rect.height),\n      el\n    };\n  });\n  return sortBy(elementsWithBoundingRect, ['bottomY']);\n};","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport i18n from '@dhis2/d2-i18n';\nimport sortBy from 'lodash/sortBy';\nimport ReactGridLayout from 'react-grid-layout';\nimport { Layer, CenteredContent, CircularLoader } from '@dhis2/ui';\nimport cx from 'classnames';\nimport { Item } from '../Item/Item';\nimport NoContentMessage from '../../widgets/NoContentMessage';\nimport { acUpdatePrintDashboardLayout } from '../../actions/printDashboard';\nimport { sGetSelectedIsLoading } from '../../reducers/selected';\nimport { sGetPrintDashboardRoot, sGetPrintDashboardItems } from '../../reducers/printDashboard';\nimport { sGetIsEditing } from '../../reducers/editDashboard';\nimport { GRID_ROW_HEIGHT, GRID_COMPACT_TYPE, MARGIN, getGridColumns, hasShape, a4LandscapeWidthPx } from './gridUtil';\nimport { getDomGridItemsSortedByYPos, getTransformYPx } from '../../modules/printUtils';\nimport { PRINT_LAYOUT } from '../Dashboard/dashboardModes';\nimport { PAGEBREAK } from '../../modules/itemTypes';\nimport 'react-grid-layout/css/styles.css';\nimport 'react-resizable/css/styles.css';\nimport './ItemGrid.css'; // this is set in the .dashboard-item-content css\n\nexport const ITEM_CONTENT_PADDING_BOTTOM = 4;\nexport class PrintLayoutItemGrid extends Component {\n  onLayoutChange = newLayout => {\n    this.props.updateDashboardLayout(newLayout);\n  };\n  isFirstPageBreak = item => {\n    if (item.type !== PAGEBREAK) {\n      return false;\n    }\n\n    const pageBreaks = this.props.dashboardItems.filter(i => i.type === PAGEBREAK);\n    const sortedPageBreaks = sortBy(pageBreaks, ['y']);\n    return item.y === sortedPageBreaks[0].y;\n  };\n  getItemComponent = item => {\n    // the first-page-break class is used in Edit print preview\n    const itemClassNames = cx('print', 'layout', `${item.type}`, {\n      'first-page-break': this.props.isEditing && this.isFirstPageBreak(item),\n      shortened: !!item.shortened\n    });\n    return <div key={item.i} className={itemClassNames}>\n                <Item item={item} dashboardMode={PRINT_LAYOUT} />\n            </div>;\n  };\n  getItemComponents = items => items.map(item => this.getItemComponent(item));\n\n  hideExtraPageBreaks() {\n    const sortedElements = getDomGridItemsSortedByYPos(Array.from(document.querySelectorAll('.react-grid-item')));\n    let pageBreakBottom = 0;\n    let lastItemBottom = 0;\n    let foundNonPageBreak = false;\n\n    for (let i = sortedElements.length - 1; i >= 0; --i) {\n      const item = sortedElements[i];\n\n      if (item.type === PAGEBREAK) {\n        if (!foundNonPageBreak) {\n          item.el.classList.add('removed');\n        } else {\n          pageBreakBottom = item.bottomY;\n          break;\n        }\n      } else {\n        foundNonPageBreak = true;\n        const thisItemBottom = item.bottomY;\n\n        if (thisItemBottom > lastItemBottom) {\n          lastItemBottom = thisItemBottom;\n        }\n      }\n    }\n\n    const pageHeight = 720;\n    const gridElement = document.querySelector('.react-grid-layout'); // the last page break is before the last item(s) so\n    // maxHeight is one page beyond the last page break\n\n    const maxHeight = pageBreakBottom + pageHeight;\n\n    if (gridElement) {\n      gridElement.style.height = `${maxHeight}px`;\n    }\n\n    if (this.props.isEditing) {\n      //scroll to below the title page - which is middle of the first pagebreak\n      const firstBreak = document.querySelector('.first-page-break');\n\n      if (firstBreak && firstBreak.style && firstBreak.style.transform) {\n        const yPos = getTransformYPx(firstBreak.style);\n        const scrollArea = document.querySelector('.scroll-area');\n        scrollArea && scrollArea.scroll(0, yPos + 50);\n      }\n    }\n  }\n\n  componentDidMount() {\n    this.hideExtraPageBreaks();\n  }\n\n  componentDidUpdate() {\n    this.hideExtraPageBreaks();\n  }\n\n  render() {\n    const {\n      isLoading,\n      dashboardItems\n    } = this.props;\n\n    if (!isLoading && !dashboardItems.length) {\n      return <NoContentMessage text={i18n.t('There are no items on this dashboard')} />;\n    }\n\n    const width = a4LandscapeWidthPx < window.innerWidth ? a4LandscapeWidthPx : window.innerWidth;\n    return <div className=\"grid-wrapper\">\n                {isLoading ? <Layer translucent>\n                        <CenteredContent>\n                            <CircularLoader />\n                        </CenteredContent>\n                    </Layer> : null}\n                <ReactGridLayout onLayoutChange={this.onLayoutChange} className=\"layout\" layout={dashboardItems} margin={MARGIN} cols={getGridColumns()} rowHeight={GRID_ROW_HEIGHT} width={width} compactType={GRID_COMPACT_TYPE} isDraggable={false} isResizable={false} draggableCancel=\"input,textarea\">\n                    {this.getItemComponents(dashboardItems)}\n                </ReactGridLayout>\n            </div>;\n  }\n\n}\nPrintLayoutItemGrid.propTypes = {\n  dashboardItems: PropTypes.array,\n  isEditing: PropTypes.bool,\n  isLoading: PropTypes.bool,\n  updateDashboardLayout: PropTypes.func\n};\nPrintLayoutItemGrid.defaultProps = {\n  dashboardItems: []\n};\n\nconst mapStateToProps = state => {\n  const selectedDashboard = sGetPrintDashboardRoot(state);\n  return {\n    isLoading: sGetSelectedIsLoading(state) || !selectedDashboard,\n    dashboardItems: sGetPrintDashboardItems(state).filter(hasShape),\n    isEditing: sGetIsEditing(state)\n  };\n};\n\nexport default connect(mapStateToProps, {\n  updateDashboardLayout: acUpdatePrintDashboardLayout\n})(PrintLayoutItemGrid);","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { spacers } from '@dhis2/ui';\nimport cx from 'classnames';\nimport PrintInfo from './PrintInfo';\nimport PrintActionsBar from './PrintActionsBar';\nimport PrintLayoutItemGrid from '../ItemGrid/PrintLayoutItemGrid';\nimport { acSetPrintDashboard, acAddPrintDashboardItem, acUpdatePrintDashboardItem } from '../../actions/printDashboard';\nimport { sGetSelectedId } from '../../reducers/selected';\nimport { sGetWindowHeight } from '../../reducers/windowHeight';\nimport { sGetEditDashboardRoot, sGetEditDashboardItems } from '../../reducers/editDashboard';\nimport { sGetDashboardById, sGetDashboardItems } from '../../reducers/dashboards';\nimport { PAGEBREAK, PRINT_TITLE_PAGE } from '../../modules/itemTypes';\nimport { a4LandscapeWidthPx, MAX_ITEM_GRID_HEIGHT } from '../ItemGrid/gridUtil';\nimport { getControlBarHeight, HEADERBAR_HEIGHT } from '../ControlBar/controlBarDimensions';\nimport { PRINT_ACTIONS_BAR_HEIGHT } from './PrintActionsBar';\nimport { DRAG_HANDLE_HEIGHT } from '../ControlBar/ControlBar';\nimport classes from './styles/PrintLayoutDashboard.module.css';\nimport './styles/print.css';\nimport './styles/print-layout.css';\nconst EDIT_BAR_HEIGHT = getControlBarHeight(1) + DRAG_HANDLE_HEIGHT;\n\nconst isLeapPage = n => {\n  // pages 5,9,13,17,21,25,29... are leap pages\n  let x = 0;\n  const startPage = 1;\n\n  const getMultiple = factor => startPage + 4 * factor;\n\n  let multiple = getMultiple(0);\n  let isLeapPage = false;\n\n  while (multiple < n) {\n    multiple = getMultiple(x);\n    ++x;\n\n    if (multiple === n) {\n      isLeapPage = true;\n      break;\n    }\n  }\n\n  return isLeapPage;\n};\n\nconst addPageBreaks = ({\n  items,\n  addDashboardItem\n}) => {\n  // add enough page breaks so that each item could\n  // be put on its own page. Due to the react-grid-layout\n  // unit system, we have to estimate roughly the size of each\n  // page. At regular intervals add a unit, like a leap year\n  let yPos = 0;\n  const yPosList = [];\n\n  for (let pageNum = 1; pageNum <= items.length; ++pageNum) {\n    if (pageNum === 1) {\n      yPos += 35;\n    } else if (isLeapPage(pageNum)) {\n      yPos += 40;\n    } else {\n      yPos += 39;\n    }\n\n    yPosList.push(yPos);\n  }\n\n  for (let i = 0; i < items.length; ++i) {\n    addDashboardItem({\n      type: PAGEBREAK,\n      yPos: yPosList[i]\n    });\n  }\n};\n\nexport class PrintLayoutDashboard extends Component {\n  state = {\n    initialized: false\n  };\n  initPrintLayoutDashboard = () => {\n    if (this.props.dashboard) {\n      this.setState({\n        initialized: true\n      });\n      this.props.setPrintDashboard(this.props.dashboard, this.props.items); // If any items are taller than one page, reduce it to one\n      // page (react-grid-layout units)\n\n      this.props.items.forEach(item => {\n        if (item.h > MAX_ITEM_GRID_HEIGHT) {\n          item.shortened = true;\n          this.props.updateDashboardItem(Object.assign({}, item, {\n            h: MAX_ITEM_GRID_HEIGHT\n          }));\n        }\n      });\n      addPageBreaks(this.props);\n      this.props.addDashboardItem({\n        type: PRINT_TITLE_PAGE,\n        isOneItemPerPage: false\n      });\n    }\n  };\n\n  componentDidMount() {\n    this.initPrintLayoutDashboard();\n  }\n\n  componentDidUpdate() {\n    if (!this.state.initialized) {\n      this.initPrintLayoutDashboard();\n    }\n  }\n\n  getWrapperStyle = () => {\n    return this.props.fromEdit ? {\n      paddingTop: spacers.dp24,\n      height: this.props.windowHeight - EDIT_BAR_HEIGHT - HEADERBAR_HEIGHT\n    } : {\n      height: this.props.windowHeight - PRINT_ACTIONS_BAR_HEIGHT\n    };\n  };\n\n  render() {\n    return <>\n                {!this.props.fromEdit && <PrintActionsBar id={this.props.dashboard.id} />}\n                <div className={cx(classes.wrapper, 'scroll-area')} style={this.getWrapperStyle()}>\n                    {!this.props.fromEdit && <PrintInfo isLayout={true} />}\n                    <div className={classes.pageOuter} style={{\n          width: a4LandscapeWidthPx\n        }} data-test=\"print-layout-page\">\n                        <PrintLayoutItemGrid />\n                    </div>\n                </div>\n            </>;\n  }\n\n}\nPrintLayoutDashboard.propTypes = {\n  addDashboardItem: PropTypes.func,\n  dashboard: PropTypes.object,\n  fromEdit: PropTypes.bool,\n  items: PropTypes.array,\n  setPrintDashboard: PropTypes.func,\n  updateDashboardItem: PropTypes.func,\n  windowHeight: PropTypes.number\n};\n\nconst mapStateToProps = (state, ownProps) => {\n  const id = sGetSelectedId(state);\n\n  if (ownProps.fromEdit) {\n    const dashboard = sGetEditDashboardRoot(state);\n    return {\n      dashboard,\n      id,\n      items: sGetEditDashboardItems(state),\n      windowHeight: sGetWindowHeight(state)\n    };\n  }\n\n  const dashboard = id ? sGetDashboardById(state, id) : null;\n  return {\n    dashboard,\n    id,\n    items: sGetDashboardItems(state),\n    windowHeight: sGetWindowHeight(state)\n  };\n};\n\nexport default connect(mapStateToProps, {\n  setPrintDashboard: acSetPrintDashboard,\n  addDashboardItem: acAddPrintDashboardItem,\n  updateDashboardItem: acUpdatePrintDashboardItem\n})(PrintLayoutDashboard);","import React, { useEffect } from 'react';\nimport { connect } from 'react-redux';\nimport i18n from '@dhis2/d2-i18n';\nimport PropTypes from 'prop-types';\nimport EditTitleBar from '../TitleBar/EditTitleBar';\nimport ItemGrid from '../ItemGrid/ItemGrid';\nimport EditBar from '../ControlBar/EditBar';\nimport NotSupportedNotice from './NotSupportedNotice';\nimport { useWindowDimensions } from '../WindowDimensionsProvider';\nimport LayoutPrintPreview from './PrintLayoutDashboard';\nimport NoContentMessage from '../../widgets/NoContentMessage';\nimport { acSetEditDashboard } from '../../actions/editDashboard';\nimport { sGetWindowHeight } from '../../reducers/windowHeight';\nimport { sGetSelectedId } from '../../reducers/selected';\nimport { sGetDashboardById, sGetDashboardItems } from '../../reducers/dashboards';\nimport { sGetIsPrintPreviewView } from '../../reducers/editDashboard';\nimport { getControlBarHeight, HEADERBAR_HEIGHT } from '../ControlBar/controlBarDimensions';\nimport isSmallScreen from '../../modules/isSmallScreen';\n\nconst EditDashboard = props => {\n  const {\n    width\n  } = useWindowDimensions();\n  useEffect(() => {\n    if (props.dashboard) {\n      props.setEditDashboard(props.dashboard, props.items);\n    }\n  }, [props.dashboard]);\n\n  const renderGrid = () => {\n    if (props.isPrintPreviewView) {\n      return <LayoutPrintPreview fromEdit={true} />;\n    }\n\n    const height = props.windowHeight - HEADERBAR_HEIGHT - getControlBarHeight(1);\n    return <div className=\"dashboard-wrapper\" style={{\n      height\n    }}>\n                <EditTitleBar />\n                <ItemGrid edit={true} />\n            </div>;\n  };\n\n  const renderEditView = () => <>\n            <EditBar />\n            {props.updateAccess ? renderGrid() : <NoContentMessage text={i18n.t('No access')} />}\n        </>;\n\n  return <>\n            {isSmallScreen(width) ? <NotSupportedNotice message={i18n.t('Editing dashboards on small screens is not supported.')} /> : renderEditView()}\n        </>;\n};\n\nEditDashboard.propTypes = {\n  dashboard: PropTypes.object,\n  isPrintPreviewView: PropTypes.bool,\n  items: PropTypes.array,\n  setEditDashboard: PropTypes.func,\n  updateAccess: PropTypes.bool,\n  windowHeight: PropTypes.number\n};\n\nconst mapStateToProps = state => {\n  const id = sGetSelectedId(state);\n  const dashboard = id ? sGetDashboardById(state, id) : null;\n  const updateAccess = dashboard && dashboard.access ? dashboard.access.update : false;\n  return {\n    dashboard,\n    updateAccess,\n    items: sGetDashboardItems(state),\n    isPrintPreviewView: sGetIsPrintPreviewView(state),\n    windowHeight: sGetWindowHeight(state)\n  };\n};\n\nexport default connect(mapStateToProps, {\n  setEditDashboard: acSetEditDashboard\n})(EditDashboard);","import React, { useEffect } from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport i18n from '@dhis2/d2-i18n';\nimport EditBar from '../ControlBar/EditBar';\nimport EditTitleBar from '../TitleBar/EditTitleBar';\nimport ItemGrid from '../ItemGrid/ItemGrid';\nimport LayoutPrintPreview from './PrintLayoutDashboard';\nimport NotSupportedNotice from './NotSupportedNotice';\nimport { acSetEditNewDashboard } from '../../actions/editDashboard';\nimport { sGetIsPrintPreviewView } from '../../reducers/editDashboard';\nimport { sGetWindowHeight } from '../../reducers/windowHeight';\nimport { getControlBarHeight, HEADERBAR_HEIGHT } from '../ControlBar/controlBarDimensions';\nimport { useWindowDimensions } from '../WindowDimensionsProvider';\nimport isSmallScreen from '../../modules/isSmallScreen';\n\nconst NewDashboard = props => {\n  const {\n    width\n  } = useWindowDimensions();\n  useEffect(() => {\n    props.setNewDashboard();\n  }, []);\n  const height = props.windowHeight - HEADERBAR_HEIGHT - getControlBarHeight(1);\n\n  const renderNewView = () => <>\n            <EditBar />\n            {props.isPrintPreviewView ? <LayoutPrintPreview fromEdit={true} /> : <div className=\"dashboard-wrapper\" style={{\n      height\n    }}>\n                    <EditTitleBar />\n                    <ItemGrid edit={true} />\n                </div>}\n        </>;\n\n  return <>\n            {isSmallScreen(width) ? <NotSupportedNotice message={i18n.t('Creating dashboards on small screens is not supported.')} /> : renderNewView()}\n        </>;\n};\n\nNewDashboard.propTypes = {\n  isPrintPreviewView: PropTypes.bool,\n  setNewDashboard: PropTypes.func,\n  windowHeight: PropTypes.number\n};\n\nconst mapStateToProps = state => ({\n  isPrintPreviewView: sGetIsPrintPreviewView(state),\n  windowHeight: sGetWindowHeight(state)\n});\n\nexport default connect(mapStateToProps, {\n  setNewDashboard: acSetEditNewDashboard\n})(NewDashboard);","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport i18n from '@dhis2/d2-i18n';\nimport ReactGridLayout from 'react-grid-layout';\nimport { Layer, CenteredContent, CircularLoader } from '@dhis2/ui';\nimport cx from 'classnames';\nimport { Item } from '../Item/Item';\nimport NoContentMessage from '../../widgets/NoContentMessage';\nimport { PRINT } from '../Dashboard/dashboardModes';\nimport { sGetSelectedIsLoading } from '../../reducers/selected';\nimport { sGetPrintDashboardRoot, sGetPrintDashboardItems } from '../../reducers/printDashboard';\nimport { GRID_ROW_HEIGHT, GRID_COMPACT_TYPE, MARGIN, getGridColumns, hasShape, a4LandscapeWidthPx } from './gridUtil';\nimport { orArray } from '../../modules/util';\nimport 'react-grid-layout/css/styles.css';\nimport './ItemGrid.css';\nexport class PrintItemGrid extends Component {\n  getItemComponent = item => <div key={item.i} className={cx(item.type, 'print', 'oipp')}>\n            <Item item={item} dashboardMode={PRINT} />\n        </div>;\n  getItemComponents = items => items.map(item => this.getItemComponent(item));\n\n  render() {\n    const {\n      isLoading,\n      dashboardItems\n    } = this.props;\n\n    if (!isLoading && !dashboardItems.length) {\n      return <NoContentMessage text={i18n.t('There are no items on this dashboard')} />;\n    }\n\n    const width = a4LandscapeWidthPx < window.innerWidth ? a4LandscapeWidthPx : window.innerWidth;\n    return <>\n                {isLoading ? <Layer translucent>\n                        <CenteredContent>\n                            <CircularLoader />\n                        </CenteredContent>\n                    </Layer> : null}\n                <ReactGridLayout className=\"layout print\" layout={dashboardItems} margin={MARGIN} cols={getGridColumns()} rowHeight={GRID_ROW_HEIGHT} width={width} compactType={GRID_COMPACT_TYPE} isDraggable={false} isResizable={false} draggableCancel=\"input,textarea\">\n                    {this.getItemComponents(dashboardItems)}\n                </ReactGridLayout>\n            </>;\n  }\n\n}\nPrintItemGrid.propTypes = {\n  dashboardItems: PropTypes.array,\n  isLoading: PropTypes.bool\n};\nPrintItemGrid.defaultProps = {\n  dashboardItems: []\n};\n\nconst mapStateToProps = state => {\n  const selectedDashboard = sGetPrintDashboardRoot(state);\n  return {\n    isLoading: sGetSelectedIsLoading(state) || !selectedDashboard,\n    dashboardItems: orArray(sGetPrintDashboardItems(state)).filter(hasShape)\n  };\n};\n\nexport default connect(mapStateToProps)(PrintItemGrid);","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport sortBy from 'lodash/sortBy';\nimport PrintInfo from './PrintInfo';\nimport PrintActionsBar from './PrintActionsBar';\nimport PrintItemGrid from '../ItemGrid/PrintItemGrid';\nimport { acSetPrintDashboard, acAddPrintDashboardItem, acRemovePrintDashboardItem, acUpdatePrintDashboardItem } from '../../actions/printDashboard';\nimport { sGetSelectedId } from '../../reducers/selected';\nimport { sGetWindowHeight } from '../../reducers/windowHeight';\nimport { sGetDashboardById, sGetDashboardItems } from '../../reducers/dashboards';\nimport { PAGEBREAK, PRINT_TITLE_PAGE, SPACER } from '../../modules/itemTypes';\nimport { a4LandscapeWidthPx, MAX_ITEM_GRID_HEIGHT_OIPP, MAX_ITEM_GRID_WIDTH_OIPP } from '../ItemGrid/gridUtil';\nimport { PRINT_ACTIONS_BAR_HEIGHT } from './PrintActionsBar';\nimport classes from './styles/PrintDashboard.module.css';\nimport './styles/print.css';\nimport './styles/print-oipp.css';\nexport class PrintDashboard extends Component {\n  state = {\n    initialized: false\n  };\n  initPrintDashboard = () => {\n    if (this.props.dashboard) {\n      this.setState({\n        initialized: true\n      }); //sort the items by Y pos so they print in order of top to bottom\n\n      const sortedItems = sortBy(this.props.items, ['y', 'x']);\n      this.props.setPrintDashboard(this.props.dashboard, sortedItems); // remove spacers - don't want empty pages\n\n      let spacerCount = 0;\n      this.props.items.forEach(item => {\n        if (item.type === SPACER) {\n          spacerCount += 1;\n          this.props.removeDashboardItem(item.id);\n        }\n      }); // Resize the items to the full page size\n\n      this.props.items.forEach(item => {\n        this.props.updateDashboardItem(Object.assign({}, item, {\n          w: MAX_ITEM_GRID_WIDTH_OIPP,\n          h: MAX_ITEM_GRID_HEIGHT_OIPP\n        }));\n      }); // insert page breaks into the document flow to create the \"pages\"\n      // when previewing the print\n\n      for (let i = 0; i < (this.props.items.length - spacerCount) * 2; i += 2) {\n        this.props.addDashboardItem({\n          type: PAGEBREAK,\n          position: i,\n          isStatic: false\n        });\n      }\n\n      this.props.addDashboardItem({\n        type: PRINT_TITLE_PAGE,\n        isOneItemPerPage: true\n      });\n    }\n  };\n\n  componentDidMount() {\n    this.initPrintDashboard();\n  }\n\n  componentDidUpdate() {\n    if (!this.state.initialized) {\n      this.initPrintDashboard();\n    }\n  }\n\n  render() {\n    const height = this.props.windowHeight - PRINT_ACTIONS_BAR_HEIGHT;\n    return <>\n                <PrintActionsBar id={this.props.dashboard.id} />\n                <div className={classes.wrapper} style={{\n        height\n      }}>\n                    <PrintInfo isLayout={false} />\n                    <div className={classes.pageOuter} style={{\n          width: a4LandscapeWidthPx\n        }} data-test=\"print-oipp-page\">\n                        <PrintItemGrid />\n                    </div>\n                </div>\n            </>;\n  }\n\n}\nPrintDashboard.propTypes = {\n  addDashboardItem: PropTypes.func,\n  dashboard: PropTypes.object,\n  items: PropTypes.array,\n  removeDashboardItem: PropTypes.func,\n  setPrintDashboard: PropTypes.func,\n  updateDashboardItem: PropTypes.func,\n  windowHeight: PropTypes.number\n};\n\nconst mapStateToProps = state => {\n  const id = sGetSelectedId(state);\n  const dashboard = id ? sGetDashboardById(state, id) : null;\n  return {\n    dashboard,\n    id,\n    items: sGetDashboardItems(state),\n    windowHeight: sGetWindowHeight(state)\n  };\n};\n\nexport default connect(mapStateToProps, {\n  setPrintDashboard: acSetPrintDashboard,\n  addDashboardItem: acAddPrintDashboardItem,\n  removeDashboardItem: acRemovePrintDashboardItem,\n  updateDashboardItem: acUpdatePrintDashboardItem\n})(PrintDashboard);","import { SET_WINDOW_HEIGHT } from '../reducers/windowHeight';\nexport const acSetWindowHeight = value => ({\n  type: SET_WINDOW_HEIGHT,\n  value\n});","import React, { useEffect } from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport isEmpty from 'lodash/isEmpty';\nimport i18n from '@dhis2/d2-i18n';\nimport { Layer, CenteredContent, CircularLoader } from '@dhis2/ui';\nimport debounce from 'lodash/debounce';\nimport DashboardsBar from '../ControlBar/DashboardsBar';\nimport NoContentMessage from '../../widgets/NoContentMessage';\nimport ViewDashboard from './ViewDashboard';\nimport EditDashboard from './EditDashboard';\nimport NewDashboard from './NewDashboard';\nimport PrintDashboard from './PrintDashboard';\nimport PrintLayoutDashboard from './PrintLayoutDashboard';\nimport { tSelectDashboard } from '../../actions/dashboards';\nimport { acSetWindowHeight } from '../../actions/windowHeight';\nimport { sDashboardsIsFetching, sGetAllDashboards } from '../../reducers/dashboards';\nimport { sGetSelectedId, NON_EXISTING_DASHBOARD_ID } from '../../reducers/selected';\nimport { EDIT, NEW, VIEW, PRINT, PRINT_LAYOUT, isPrintMode } from './dashboardModes';\n\nconst setHeaderbarVisibility = mode => {\n  const header = document.getElementsByTagName('header')[0];\n\n  if (isPrintMode(mode)) {\n    header.classList.add('hidden');\n  } else {\n    header.classList.remove('hidden');\n  }\n};\n\nconst dashboardMap = {\n  [VIEW]: <ViewDashboard />,\n  [EDIT]: <EditDashboard />,\n  [NEW]: <NewDashboard />,\n  [PRINT]: <PrintDashboard />,\n  [PRINT_LAYOUT]: <PrintLayoutDashboard />\n};\nexport const Dashboard = ({\n  id,\n  mode,\n  dashboardsLoaded,\n  dashboardsIsEmpty,\n  routeId,\n  selectDashboard,\n  setWindowHeight\n}) => {\n  useEffect(() => {\n    setHeaderbarVisibility(mode);\n  }, [mode]);\n  useEffect(() => {\n    if (dashboardsLoaded && !dashboardsIsEmpty) {\n      selectDashboard(routeId);\n    }\n  }, [dashboardsLoaded, dashboardsIsEmpty, routeId]);\n  useEffect(() => {\n    const onResize = debounce(() => setWindowHeight(window.innerHeight), 300);\n    window.addEventListener('resize', onResize);\n    return () => {\n      window.removeEventListener('resize', onResize);\n    };\n  }, []);\n\n  if (!dashboardsLoaded) {\n    return <Layer translucent>\n                <CenteredContent>\n                    <CircularLoader />\n                </CenteredContent>\n            </Layer>;\n  }\n\n  if (mode === NEW) {\n    return dashboardMap[mode];\n  }\n\n  if (dashboardsIsEmpty) {\n    return <>\n                <DashboardsBar />\n                <NoContentMessage text={i18n.t('No dashboards found. Use the + button to create a new dashboard.')} />\n            </>;\n  }\n\n  if (id === NON_EXISTING_DASHBOARD_ID) {\n    return <>\n                <DashboardsBar />\n                <NoContentMessage text={i18n.t('Requested dashboard not found')} />\n            </>;\n  }\n\n  if (id === null) {\n    return <Layer translucent>\n                <CenteredContent>\n                    <CircularLoader />\n                </CenteredContent>\n            </Layer>;\n  }\n\n  return dashboardMap[mode];\n};\nDashboard.propTypes = {\n  dashboardsIsEmpty: PropTypes.bool,\n  dashboardsLoaded: PropTypes.bool,\n  id: PropTypes.string,\n  match: PropTypes.object,\n  // provided by the react-router-dom\n  mode: PropTypes.string,\n  routeId: PropTypes.string,\n  selectDashboard: PropTypes.func,\n  setWindowHeight: PropTypes.func\n};\n\nconst mapStateToProps = (state, ownProps) => {\n  const dashboards = sGetAllDashboards(state);\n  return {\n    dashboardsIsEmpty: isEmpty(dashboards),\n    dashboardsLoaded: !sDashboardsIsFetching(state),\n    id: sGetSelectedId(state),\n    routeId: ownProps.match?.params?.dashboardId || null\n  };\n};\n\nexport default connect(mapStateToProps, {\n  selectDashboard: tSelectDashboard,\n  setWindowHeight: acSetWindowHeight\n})(Dashboard);","import React from 'react';\nimport { connect } from 'react-redux';\nimport { AlertBar, AlertStack } from '@dhis2/ui';\nimport PropTypes from 'prop-types';\nimport { sGetAlertMessage } from '../../reducers/alert';\nimport { acClearAlertMessage } from '../../actions/alert';\nexport const Alert = ({\n  message,\n  onClose\n}) => message ? <AlertStack>\n            <AlertBar onHidden={onClose} permanent>\n                {message}\n            </AlertBar>\n        </AlertStack> : null;\nAlert.propTypes = {\n  message: PropTypes.string,\n  onClose: PropTypes.func\n};\n\nconst mapStateToProps = state => ({\n  message: sGetAlertMessage(state)\n});\n\nexport default connect(mapStateToProps, {\n  onClose: acClearAlertMessage\n})(Alert);","import { RECEIVED_USER } from '../reducers/user';\nexport const acReceivedUser = value => ({\n  type: RECEIVED_USER,\n  value\n});","import { SET_DIMENSIONS } from '../reducers/dimensions';\nimport { apiFetchDimensions } from '@dhis2/analytics';\nimport { sGetSettingsDisplayNameProperty } from '../reducers/settings';\nexport const acSetDimensions = dimensions => ({\n  type: SET_DIMENSIONS,\n  value: dimensions\n});\nexport const tSetDimensions = () => async (dispatch, getState, dataEngine) => {\n  const onSuccess = dimensions => {\n    dispatch(acSetDimensions(dimensions));\n  };\n\n  const onError = error => {\n    console.log('Error (apiFetchDimensions): ', error);\n    return error;\n  };\n\n  try {\n    const displayNameProp = sGetSettingsDisplayNameProperty(getState());\n    const dimensions = await apiFetchDimensions(dataEngine, displayNameProp); // filter out CATEGORY that are not of type ATTRIBUTE\n\n    const filteredDimensions = dimensions.filter(dim => dim.dimensionType !== 'CATEGORY' || dim.dimensionType === 'CATEGORY' && dim.dataDimensionType === 'ATTRIBUTE');\n    return onSuccess(filteredDimensions);\n  } catch (err) {\n    return onError(err);\n  }\n};","import { getInstance } from 'd2';\nimport { onError } from './index';\nconst SYSTEM_SETTINGS = ['keyGatherAnalyticalObjectStatisticsInDashboardViews'];\nexport const apiFetchSystemSettings = () => {\n  const endPoint = '/systemSettings';\n  const url = `${endPoint}?${SYSTEM_SETTINGS.map(s => `key=${s}`).join('&')}`;\n  return getInstance().then(d2 => d2.Api.getApi().get(url)).catch(onError);\n};","import { ADD_SETTINGS } from '../reducers/settings';\nimport { apiFetchSystemSettings } from '../api/settings';\nexport const acAddSettings = value => ({\n  type: ADD_SETTINGS,\n  value\n});\nexport const tAddSettings = (...extraSettings) => async dispatch => {\n  const onSuccess = fetchedSettings => {\n    dispatch(acAddSettings(Object.assign({}, fetchedSettings, ...extraSettings)));\n  };\n\n  const onError = error => {\n    console.log('Error (apiFetchSystemSettings): ', error);\n    return error;\n  };\n\n  try {\n    const systemSettings = await apiFetchSystemSettings();\n    return onSuccess({ ...systemSettings\n    });\n  } catch (err) {\n    return onError(err);\n  }\n};","import React, { Component } from 'react';\nimport { HashRouter as Router, Route, Switch } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport i18n from '@dhis2/d2-i18n';\nimport { CssVariables } from '@dhis2/ui';\nimport Dashboard from './Dashboard/Dashboard';\nimport AlertBar from './AlertBar/AlertBar';\nimport { acReceivedUser } from '../actions/user';\nimport { tFetchDashboards } from '../actions/dashboards';\nimport { tSetControlBarRows } from '../actions/controlBar';\nimport { tSetShowDescription } from '../actions/selected';\nimport { tSetDimensions } from '../actions/dimensions';\nimport { tAddSettings } from '../actions/settings';\nimport { EDIT, VIEW, NEW, PRINT, PRINT_LAYOUT } from './Dashboard/dashboardModes';\nimport './App.css';\nexport class App extends Component {\n  componentDidMount() {\n    this.props.setCurrentUser(this.props.d2.currentUser);\n    this.props.fetchDashboards();\n    this.props.setControlBarRows();\n    this.props.setShowDescription();\n    this.props.setDimensions();\n    this.props.addSettings();\n  }\n\n  getChildContext() {\n    return {\n      baseUrl: this.props.baseUrl,\n      i18n,\n      d2: this.props.d2,\n      dataEngine: this.props.dataEngine\n    };\n  }\n\n  render() {\n    return <>\n                <CssVariables colors spacers />\n                <Router>\n                    <Switch>\n                        <Route exact path=\"/\" render={props => <Dashboard {...props} mode={VIEW} />} />\n                        <Route exact path=\"/new\" render={props => <Dashboard {...props} mode={NEW} />} />\n                        <Route exact path=\"/:dashboardId\" render={props => <Dashboard {...props} mode={VIEW} />} />\n                        <Route exact path=\"/:dashboardId/edit\" render={props => <Dashboard {...props} mode={EDIT} />} />\n                        <Route exact path=\"/:dashboardId/printoipp\" render={props => <Dashboard {...props} mode={PRINT} />} />\n                        <Route exact path=\"/:dashboardId/printlayout\" render={props => <Dashboard {...props} mode={PRINT_LAYOUT} />} />\n                    </Switch>\n                </Router>\n                <AlertBar />\n            </>;\n  }\n\n}\nApp.propTypes = {\n  addSettings: PropTypes.func.isRequired,\n  fetchDashboards: PropTypes.func.isRequired,\n  setControlBarRows: PropTypes.func.isRequired,\n  setCurrentUser: PropTypes.func.isRequired,\n  setDimensions: PropTypes.func.isRequired,\n  setShowDescription: PropTypes.func.isRequired,\n  baseUrl: PropTypes.string,\n  d2: PropTypes.object,\n  dataEngine: PropTypes.object\n};\nApp.childContextTypes = {\n  baseUrl: PropTypes.string,\n  i18n: PropTypes.object,\n  d2: PropTypes.object,\n  dataEngine: PropTypes.object\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    fetchDashboards: () => dispatch(tFetchDashboards()),\n    setControlBarRows: () => dispatch(tSetControlBarRows()),\n    setCurrentUser: currentUser => dispatch(acReceivedUser(currentUser)),\n    setDimensions: () => dispatch(tSetDimensions()),\n    setShowDescription: () => dispatch(tSetShowDescription()),\n    addSettings: () => dispatch(tAddSettings())\n  };\n};\n\nexport default connect(null, mapDispatchToProps)(App);","/** @module reducers/selected */\nimport { validateReducer } from '../modules/util';\nexport const SET_STYLE = 'SET_STYLE';\nexport const DEFAULT_STATE_STYLE = 'LIST';\n/**\n * Reducer functions that computes and returns the new state based on the given action\n * @function\n * @param {Object} state The current state\n * @param {Object} action The action to be evaluated\n */\n\nconst style = (state = DEFAULT_STATE_STYLE, action) => {\n  switch (action.type) {\n    case SET_STYLE:\n      return validateReducer(action.value, DEFAULT_STATE_STYLE);\n\n    default:\n      return state;\n  }\n};\n\nexport default style;\n/**\n * Selectors that point to specific props in the state object\n * @function\n * @param {Object} state\n * @returns {Object}\n */\n\nexport const sGetStyleRoot = state => state.style;","import { combineReducers } from 'redux';\nimport dashboards from './dashboards';\nimport selected from './selected';\nimport dashboardsFilter from './dashboardsFilter';\nimport controlBar from './controlBar';\nimport visualizations from './visualizations';\nimport editDashboard from './editDashboard';\nimport printDashboard from './printDashboard';\nimport messages from './messages';\nimport user from './user';\nimport alert from './alert';\nimport itemFilters from './itemFilters';\nimport style from './style';\nimport dimensions from './dimensions';\nimport settings from './settings';\nimport activeModalDimension from './activeModalDimension';\nimport windowHeight from './windowHeight';\nexport default combineReducers({\n  dashboards,\n  selected,\n  dashboardsFilter,\n  controlBar,\n  visualizations,\n  messages,\n  user,\n  editDashboard,\n  printDashboard,\n  itemFilters,\n  style,\n  alert,\n  dimensions,\n  settings,\n  activeModalDimension,\n  windowHeight\n});","import { createStore, applyMiddleware, compose } from 'redux';\nimport { createLogger } from 'redux-logger';\nimport thunk from 'redux-thunk';\nimport reducer from './reducers';\n\nconst configureStore = dataEngine => {\n  const middleware = [thunk.withExtraArgument(dataEngine)]; // Enable Redux devtools if extension is installed instead of redux-logger\n\n  const composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\n\n  if (!window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ && process.env.NODE_ENV !== 'production') {\n    middleware.push(createLogger());\n  }\n\n  return createStore(reducer, composeEnhancers(applyMiddleware(...middleware)));\n};\n\nexport default configureStore;","//------------------------------------------------------------------------------\n// <auto-generated>\n// This code was generated by d2-i18n-generate.\n//\n// Changes to this file may cause incorrect behavior and will be lost if\n// the code is regenerated.\n// </auto-generated>\n//------------------------------------------------------------------------------\nimport i18n from '@dhis2/d2-i18n';\nimport arTranslations from './ar/translations.json';\nimport ar_IQTranslations from './ar_IQ/translations.json';\nimport ckbTranslations from './ckb/translations.json';\nimport csTranslations from './cs/translations.json';\nimport daTranslations from './da/translations.json';\nimport enTranslations from './en/translations.json';\nimport esTranslations from './es/translations.json';\nimport frTranslations from './fr/translations.json';\nimport idTranslations from './id/translations.json';\nimport kmTranslations from './km/translations.json';\nimport loTranslations from './lo/translations.json';\nimport myTranslations from './my/translations.json';\nimport nbTranslations from './nb/translations.json';\nimport prsTranslations from './prs/translations.json';\nimport psTranslations from './ps/translations.json';\nimport ptTranslations from './pt/translations.json';\nimport pt_BRTranslations from './pt_BR/translations.json';\nimport ruTranslations from './ru/translations.json';\nimport svTranslations from './sv/translations.json';\nimport tetTranslations from './tet/translations.json';\nimport tgTranslations from './tg/translations.json';\nimport ukTranslations from './uk/translations.json';\nimport urTranslations from './ur/translations.json';\nimport uzTranslations from './uz/translations.json';\nimport uz_CyrlTranslations from './uz_Cyrl/translations.json';\nimport viTranslations from './vi/translations.json';\nimport zhTranslations from './zh/translations.json';\nimport zh_CNTranslations from './zh_CN/translations.json';\nconst namespace = 'default';\ni18n.addResources('ar', namespace, arTranslations);\ni18n.addResources('ar_IQ', namespace, ar_IQTranslations);\ni18n.addResources('ckb', namespace, ckbTranslations);\ni18n.addResources('cs', namespace, csTranslations);\ni18n.addResources('da', namespace, daTranslations);\ni18n.addResources('en', namespace, enTranslations);\ni18n.addResources('es', namespace, esTranslations);\ni18n.addResources('fr', namespace, frTranslations);\ni18n.addResources('id', namespace, idTranslations);\ni18n.addResources('km', namespace, kmTranslations);\ni18n.addResources('lo', namespace, loTranslations);\ni18n.addResources('my', namespace, myTranslations);\ni18n.addResources('nb', namespace, nbTranslations);\ni18n.addResources('prs', namespace, prsTranslations);\ni18n.addResources('ps', namespace, psTranslations);\ni18n.addResources('pt', namespace, ptTranslations);\ni18n.addResources('pt_BR', namespace, pt_BRTranslations);\ni18n.addResources('ru', namespace, ruTranslations);\ni18n.addResources('sv', namespace, svTranslations);\ni18n.addResources('tet', namespace, tetTranslations);\ni18n.addResources('tg', namespace, tgTranslations);\ni18n.addResources('uk', namespace, ukTranslations);\ni18n.addResources('ur', namespace, urTranslations);\ni18n.addResources('uz', namespace, uzTranslations);\ni18n.addResources('uz_Cyrl', namespace, uz_CyrlTranslations);\ni18n.addResources('vi', namespace, viTranslations);\ni18n.addResources('zh', namespace, zhTranslations);\ni18n.addResources('zh_CN', namespace, zh_CNTranslations);\nexport default i18n;","import React from 'react';\nimport { MuiThemeProvider, createMuiTheme } from '@material-ui/core/styles';\nimport dhis2theme from '@dhis2/d2-ui-core/theme/mui3.theme';\nimport { Provider as ReduxProvider } from 'react-redux';\nimport { D2Shim } from '@dhis2/app-runtime-adapter-d2';\nimport { useDataEngine } from '@dhis2/app-runtime';\nimport WindowDimensionsProvider from './components/WindowDimensionsProvider';\nimport App from './components/App';\nimport configureStore from './configureStore';\nimport './AppWrapper.css';\nimport './locales';\n\nconst muiTheme = () => createMuiTheme(dhis2theme);\n\nconst d2Config = {\n  schemas: ['chart', 'map', 'report', 'reportTable', 'eventChart', 'eventReport', 'dashboard', 'organisationUnit', 'userGroup']\n}; // TODO: ER and EV plugins require the auth header in development mode.\n// Remove this when these plugins are rewritten\n\nconst authorization = process.env.REACT_APP_DHIS2_AUTHORIZATION || null;\n\nif (authorization) {\n  d2Config.headers = {\n    Authorization: authorization\n  };\n}\n\nconst AppWrapper = () => {\n  const dataEngine = useDataEngine();\n  return <ReduxProvider store={configureStore(dataEngine)}>\n            <MuiThemeProvider theme={muiTheme()}>\n                <D2Shim d2Config={d2Config} i18nRoot=\"./i18n\">\n                    {({\n          d2\n        }) => {\n          if (!d2) {\n            // TODO: Handle errors in d2 initialization\n            return null;\n          }\n\n          return <WindowDimensionsProvider>\n                                <App d2={d2} dataEngine={dataEngine} />\n                            </WindowDimensionsProvider>;\n        }}\n                </D2Shim>\n            </MuiThemeProvider>\n        </ReduxProvider>;\n};\n\nexport default AppWrapper;","import i18n from '@dhis2/d2-i18n';\nimport TableIcon from '@material-ui/icons/ViewList';\nimport ChartIcon from '@material-ui/icons/InsertChart';\nimport MapIcon from '@material-ui/icons/Public';\nimport ExtensionIcon from '@material-ui/icons/Extension';\nimport DescriptionIcon from '@material-ui/icons/Description';\nimport PersonIcon from '@material-ui/icons/Person';\nimport FontDownloadIcon from '@material-ui/icons/FontDownload';\nimport EmailIcon from '@material-ui/icons/Email';\nimport CropFreeIcon from '@material-ui/icons/CropFree';\nimport NotInterestedIcon from '@material-ui/icons/NotInterested';\nimport { getBaseUrl } from './util'; // Item types\n\nexport const VISUALIZATION = 'VISUALIZATION';\nexport const REPORT_TABLE = 'REPORT_TABLE';\nexport const CHART = 'CHART';\nexport const MAP = 'MAP';\nexport const EVENT_REPORT = 'EVENT_REPORT';\nexport const EVENT_CHART = 'EVENT_CHART';\nexport const APP = 'APP';\nexport const REPORTS = 'REPORTS';\nexport const RESOURCES = 'RESOURCES';\nexport const USERS = 'USERS';\nexport const MESSAGES = 'MESSAGES';\nexport const TEXT = 'TEXT';\nexport const SPACER = 'SPACER';\nexport const PAGEBREAK = 'PAGEBREAK';\nexport const PRINT_TITLE_PAGE = 'PRINT_TITLE_PAGE';\nconst DOMAIN_TYPE_AGGREGATE = 'AGGREGATE';\nconst DOMAIN_TYPE_TRACKER = 'TRACKER'; // Dashboard helpers\n\nexport const isVisualizationType = item => !!itemTypeMap[item.type].isVisualizationType;\nexport const hasMapView = itemType => itemTypeMap[itemType].domainType === DOMAIN_TYPE_AGGREGATE;\nexport const isTrackerDomainType = itemType => itemTypeMap[itemType].domainType === DOMAIN_TYPE_TRACKER;\nexport const getDefaultItemCount = itemType => itemTypeMap[itemType].defaultItemCount || 5;\nexport const getAppName = itemType => itemTypeMap[itemType].appName || ''; // Item type map\n\nexport const itemTypeMap = {\n  [VISUALIZATION]: {\n    id: VISUALIZATION,\n    endPointName: 'visualizations',\n    propName: 'visualization',\n    pluralTitle: i18n.t('Visualizations'),\n    appUrl: id => `dhis-web-data-visualizer/#/${id}`,\n    appName: 'Data Visualizer',\n    defaultItemCount: 10\n  },\n  [REPORT_TABLE]: {\n    id: REPORT_TABLE,\n    endPointName: 'visualizations',\n    dataStatisticsName: 'REPORT_TABLE_VIEW',\n    propName: 'visualization',\n    pluralTitle: i18n.t('Pivot tables'),\n    domainType: DOMAIN_TYPE_AGGREGATE,\n    isVisualizationType: true,\n    appUrl: id => `dhis-web-data-visualizer/#/${id}`,\n    appName: 'Data Visualizer'\n  },\n  [CHART]: {\n    id: CHART,\n    endPointName: 'visualizations',\n    propName: 'visualization',\n    dataStatisticsName: 'CHART_VIEW',\n    pluralTitle: i18n.t('Charts'),\n    domainType: DOMAIN_TYPE_AGGREGATE,\n    isVisualizationType: true,\n    appUrl: id => `dhis-web-data-visualizer/#/${id}`,\n    appName: 'Data Visualizer'\n  },\n  [MAP]: {\n    id: MAP,\n    endPointName: 'maps',\n    dataStatisticsName: 'MAP_VIEW',\n    propName: 'map',\n    pluralTitle: i18n.t('Maps'),\n    domainType: DOMAIN_TYPE_AGGREGATE,\n    isVisualizationType: true,\n    appUrl: id => `dhis-web-maps/?id=${id}`,\n    appName: 'Maps'\n  },\n  [EVENT_REPORT]: {\n    id: EVENT_REPORT,\n    endPointName: 'eventReports',\n    propName: 'eventReport',\n    pluralTitle: i18n.t('Event reports'),\n    domainType: DOMAIN_TYPE_TRACKER,\n    isVisualizationType: true,\n    appUrl: id => `dhis-web-event-reports/?id=${id}`,\n    appName: 'Event Reports'\n  },\n  [EVENT_CHART]: {\n    id: EVENT_CHART,\n    endPointName: 'eventCharts',\n    propName: 'eventChart',\n    pluralTitle: i18n.t('Event charts'),\n    domainType: DOMAIN_TYPE_TRACKER,\n    isVisualizationType: true,\n    appUrl: id => `dhis-web-event-visualizer/?id=${id}`,\n    appName: 'Event Visualizer'\n  },\n  [APP]: {\n    endPointName: 'apps',\n    propName: 'appKey',\n    pluralTitle: i18n.t('Apps')\n  },\n  [REPORTS]: {\n    id: REPORTS,\n    endPointName: 'reports',\n    propName: 'reports',\n    pluralTitle: i18n.t('Reports'),\n    appUrl: (id, type) => {\n      switch (type) {\n        case 'HTML':\n          return `dhis-web-reports/#/standard-report/view/${id}`;\n\n        case 'JASPER_REPORT_TABLE':\n        case 'JASPER_JDBC':\n        default:\n          return `api/reports/${id}/data.pdf?t=${new Date().getTime()}`;\n      }\n    }\n  },\n  [RESOURCES]: {\n    id: RESOURCES,\n    endPointName: 'resources',\n    propName: 'resources',\n    pluralTitle: i18n.t('Resources'),\n    appUrl: id => `api/documents/${id}/data`\n  },\n  [USERS]: {\n    id: USERS,\n    endPointName: 'users',\n    propName: 'users',\n    pluralTitle: i18n.t('Users'),\n    appUrl: id => `dhis-web-dashboard-integration/profile.action?id=${id}`\n  },\n  [TEXT]: {\n    id: TEXT,\n    propName: 'text'\n  },\n  [MESSAGES]: {\n    propName: 'messages'\n  },\n  [SPACER]: {\n    propName: 'text'\n  },\n  [PAGEBREAK]: {\n    propName: 'text'\n  },\n  [PRINT_TITLE_PAGE]: {\n    propName: 'text'\n  }\n};\nexport const getEndPointName = type => itemTypeMap[type].endPointName;\nexport const getDataStatisticsName = type => itemTypeMap[type].dataStatisticsName || null;\nexport const getItemUrl = (type, item, d2) => {\n  let url;\n\n  if (type === APP) {\n    url = item.launchUrl;\n  }\n\n  if (itemTypeMap[type] && itemTypeMap[type].appUrl) {\n    url = `${getBaseUrl(d2)}/${itemTypeMap[type].appUrl(item.id, item.type)}`;\n  }\n\n  return url;\n};\nexport const getItemIcon = type => {\n  switch (type) {\n    case REPORT_TABLE:\n    case EVENT_REPORT:\n    case REPORTS:\n      return TableIcon;\n\n    case CHART:\n    case EVENT_CHART:\n      return ChartIcon;\n\n    case MAP:\n      return MapIcon;\n\n    case APP:\n      return ExtensionIcon;\n\n    case RESOURCES:\n      return DescriptionIcon;\n\n    case USERS:\n      return PersonIcon;\n\n    case TEXT:\n      return FontDownloadIcon;\n\n    case MESSAGES:\n      return EmailIcon;\n\n    case SPACER:\n      return CropFreeIcon;\n\n    default:\n      return NotInterestedIcon;\n  }\n};","import isObject from 'lodash/isObject'; // validation\n\nexport function orNull(param) {\n  return param === undefined ? null : param;\n}\nexport function orArray(param) {\n  return Array.isArray(param) ? param : [];\n}\nexport function orObject(param) {\n  return isObject(param) ? param : {};\n} // array\n\nexport function arrayGetById(array, id) {\n  return array.find(item => item.id === id);\n} // object\n\nexport function arrayToIdMap(array) {\n  return array.reduce((obj, item) => {\n    obj[item.id] = item;\n    return obj;\n  }, {});\n} // date\n\nexport function getDate() {\n  const y = Math.floor(Math.random() * 3) + 2015;\n  const M = Math.floor(Math.random() * 12) + 1;\n  const d = Math.floor(Math.random() * 28) + 1; // const h = Math.floor(Math.random() * 23) + 1;\n  // const m = Math.floor(Math.random() * 59) + 1;\n  // const s = Math.floor(Math.random() * 59) + 1;\n\n  return new Date(`${y}-${M}-${d}`).toJSON().replace('T', ' ').substr(0, 10);\n}\nexport const formatDate = (value, uiLocale) => {\n  if (typeof global.Intl !== 'undefined' && Intl.DateTimeFormat) {\n    const locale = uiLocale || 'en';\n    return new Intl.DateTimeFormat(locale, {\n      year: 'numeric',\n      month: 'short',\n      day: 'numeric'\n    }).format(new Date(value));\n  }\n\n  return value.substr(0, 19).replace('T', ' ');\n};\n/**\n * Sorts an array of objects based on provided date property\n *\n * @param {Array} items Array of objects\n * @param {String} dateProp Name of the date property to be used for sorting\n * @param {Boolean} ascending Whether to sort ascending or descending\n */\n\nexport const sortByDate = (items, dateProp, ascending = true) => {\n  const values = Object.values(items);\n  values.sort((a, b) => {\n    const aDate = new Date(a[dateProp]);\n    const bDate = new Date(b[dateProp]);\n    return ascending ? aDate - bDate : bDate - aDate;\n  });\n  return values;\n}; // reducer validator\n\nexport const validateReducer = (value, defaultValue) => value === undefined || value === null ? defaultValue : value;\nexport const getBaseUrl = d2 => {\n  const api = d2.Api.getApi();\n  const idx = api.baseUrl.indexOf('/api');\n  return idx > -1 ? api.baseUrl.slice(0, idx) : api.baseUrl;\n};","import isFunction from 'd2-utilizr/lib/isFunction';\nimport { orObject } from '../../modules/util'; // Dimensions for the react-grid-layout\n\nexport const GRID_COMPACT_TYPE = 'vertical'; // vertical | horizonal | null\n\nexport const GRID_ROW_HEIGHT = 10;\nconst GRID_COLUMN_WIDTH_PX = 20;\nconst GRID_LAYOUT = 'FLEXIBLE'; // FIXED | FLEXIBLE\n\nexport const MARGIN = [10, 10];\nexport const NEW_ITEM_SHAPE = {\n  x: 0,\n  y: 0,\n  w: 20,\n  h: 29\n}; // Dimensions for getShape\n\nconst NUMBER_OF_ITEM_COLS = 2;\nconst GRID_COLUMNS = 60;\nconst MAX_ITEM_GRID_WIDTH = GRID_COLUMNS - 1;\nexport const MAX_ITEM_GRID_HEIGHT = 34;\nexport const MAX_ITEM_GRID_HEIGHT_OIPP = 35;\nexport const MAX_ITEM_GRID_WIDTH_OIPP = 56; // for A4 landscape (297x210mm)\n// 794 px = (21cm / 2.54) * 96 pixels/inch\n// 1122 px = 29.7 /2.54 * 96 pixels/inch\n// const a4LandscapeHeightPx = 794\n\nexport const a4LandscapeWidthPx = 1102;\nexport const getGridColumns = () => {\n  switch (GRID_LAYOUT) {\n    case 'FLEXIBLE':\n      return GRID_COLUMNS;\n\n    case 'FIXED':\n      return Math.floor((window.innerWidth - 20) / GRID_COLUMN_WIDTH_PX);\n\n    default:\n      return GRID_COLUMNS;\n  }\n}; // isNonNegativeInteger\n\nconst isNonNegativeInteger = x => Number.isInteger(x) && x >= 0; // Does the item have all the shape properties?\n\n\nexport const hasShape = item => isNonNegativeInteger(item.x) && isNonNegativeInteger(item.y) && isNonNegativeInteger(item.w) && isNonNegativeInteger(item.h); // returns a rectangular grid block dimensioned with x, y, w, h in grid units.\n// based on a grid with 3 items across\n\nexport const getShape = i => {\n  if (!isNonNegativeInteger(i)) {\n    throw new Error('Invalid grid block number');\n  }\n\n  const col = i % NUMBER_OF_ITEM_COLS;\n  const row = Math.floor(i / NUMBER_OF_ITEM_COLS);\n  const itemWidth = Math.floor(MAX_ITEM_GRID_WIDTH / NUMBER_OF_ITEM_COLS);\n  const itemHeight = GRID_ROW_HEIGHT * 2;\n  return {\n    x: col * itemWidth,\n    y: row * itemHeight,\n    w: itemWidth,\n    h: itemHeight\n  };\n};\nexport const getGridItemProperties = itemId => {\n  return {\n    i: itemId,\n    minH: 4 // minimum height for item\n\n  };\n};\nexport const getPageBreakItemShape = (yPos, isStatic = true) => {\n  return {\n    x: 0,\n    y: yPos,\n    w: MAX_ITEM_GRID_WIDTH,\n    h: 5,\n    static: !!isStatic,\n    minH: 1\n  };\n};\nexport const getPrintTitlePageItemShape = isOneItemPerPage => {\n  return {\n    x: 0,\n    y: 0,\n    w: isOneItemPerPage ? MAX_ITEM_GRID_WIDTH_OIPP : MAX_ITEM_GRID_WIDTH,\n    h: MAX_ITEM_GRID_HEIGHT,\n    static: true,\n    minH: 1\n  };\n};\n/**\n * Calculates the grid item's original height in pixels based\n * on the height in grid units. This calculation\n * is copied directly from react-grid-layout GridItem.js (calcPosition)\n *\n * @param {Object} item item containing shape (x, y, w, h)\n */\n\nexport const getOriginalHeight = item => {\n  const originalHeight = Math.round(GRID_ROW_HEIGHT * item.h + Math.max(0, item.h - 1) * MARGIN[1]);\n  return {\n    originalHeight\n  };\n};\n/**\n * Returns an array of items containing the x, y, w, h dimensions\n * and the item's originalheight in pixels\n * @function\n * @param {Array} items\n * @returns {Array}\n */\n\nexport const withShape = items => items.map((item, index) => {\n  const itemWithShape = hasShape(item) ? item : Object.assign({}, item, getShape(index));\n  return Object.assign({}, itemWithShape, getOriginalHeight(itemWithShape));\n});\nexport const getGridItemDomId = id => `item-${id}`;\nexport function onItemResize(id) {\n  const el = orObject(document.querySelector(`#${getGridItemDomId(id)}`));\n  if (isFunction(el.setViewportSize)) setTimeout(() => el.setViewportSize(el.clientWidth - 5, el.clientHeight - 5), 10);\n}","import isObject from 'lodash/isObject';\nimport { itemTypeMap } from './itemTypes';\nexport const getVisualizationFromItem = item => {\n  if (!isObject(item)) {\n    return null;\n  }\n\n  const propName = itemTypeMap[item.type]?.propName;\n  return item[propName] || item.reportTable || item.chart || item.map || item.eventReport || item.eventChart || {};\n};\nexport const getVisualizationId = item => getVisualizationFromItem(item).id;\nexport const getVisualizationName = item => getVisualizationFromItem(item).name;","import { REPORT_TABLE, CHART, MAP, EVENT_REPORT, EVENT_CHART, itemTypeMap } from '../../../../modules/itemTypes';\nimport { getVisualizationId } from '../../../../modules/item';\nimport { getGridItemDomId } from '../../../ItemGrid/gridUtil'; //external plugins\n\nconst itemTypeToExternalPlugin = {\n  [MAP]: 'mapPlugin',\n  [EVENT_REPORT]: 'eventReportPlugin',\n  [EVENT_CHART]: 'eventChartPlugin'\n};\n\nconst hasIntegratedPlugin = type => [CHART, REPORT_TABLE].includes(type);\n\nconst getPlugin = type => {\n  if (hasIntegratedPlugin(type)) {\n    return true;\n  }\n\n  const pluginName = itemTypeToExternalPlugin[type];\n  return global[pluginName];\n};\n\nexport const pluginIsAvailable = type => !!getPlugin(type);\nexport const loadPlugin = (plugin, config, credentials) => {\n  if (!(plugin && plugin.load)) {\n    return;\n  }\n\n  plugin.url = credentials.baseUrl;\n  plugin.loadingIndicator = true;\n  plugin.dashboard = true;\n\n  if (credentials.auth) {\n    plugin.auth = credentials.auth;\n  }\n\n  plugin.load(config);\n};\nexport const getLink = (item, baseUrl) => {\n  const appUrl = itemTypeMap[item.type].appUrl(getVisualizationId(item));\n  return `${baseUrl}/${appUrl}`;\n};\nexport const load = async (item, visualization, {\n  credentials,\n  activeType,\n  options = {}\n}) => {\n  const config = { ...visualization,\n    ...options,\n    el: getGridItemDomId(item.id)\n  };\n  const type = activeType || item.type;\n  const plugin = getPlugin(type);\n  loadPlugin(plugin, config, credentials);\n};\nexport const resize = item => {\n  const plugin = getPlugin(item.type);\n\n  if (plugin && plugin.resize) {\n    plugin.resize(getGridItemDomId(item.id));\n  }\n};\nexport const unmount = (item, activeType) => {\n  const plugin = getPlugin(activeType);\n\n  if (plugin && plugin.unmount) {\n    plugin.unmount(getGridItemDomId(item.id));\n  }\n};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"itemHeaderWrap\":\"ItemHeader_itemHeaderWrap__JcBP7\",\"itemTitle\":\"ItemHeader_itemTitle__34rHa\",\"itemActionsWrap\":\"ItemHeader_itemActionsWrap__Gx3D9\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"ControlBar_root__iikeX\",\"dragging\":\"ControlBar_dragging__3lq79\",\"content\":\"ControlBar_content__26Z33\",\"draghandle\":\"ControlBar_draghandle__27zum\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"link\":\"DashboardItemChip_link__21drZ\",\"icon\":\"DashboardItemChip_icon__2hcIR\",\"selected\":\"DashboardItemChip_selected__r00uP\",\"unselected\":\"DashboardItemChip_unselected__2H9l2\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"ClearButton_button__33ZbK\",\"icon\":\"ClearButton_icon__vTJm3\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Filter_container__1Vxdh\",\"input\":\"Filter_input__14lhU\",\"focused\":\"Filter_focused__Lvyz3\",\"searchIcon\":\"Filter_searchIcon__2ojUp\",\"searchButton\":\"Filter_searchButton__1tMTB\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"ShowMoreButton_container__riJz_\",\"showMore\":\"ShowMoreButton_showMore__3S3He\",\"disabled\":\"ShowMoreButton_disabled__2FQNA\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"DashboardsBar_container__1xuCo\",\"expanded\":\"DashboardsBar_expanded__3lVl8\",\"controls\":\"DashboardsBar_controls__3PhmY\",\"newLink\":\"DashboardsBar_newLink__2PkLQ\",\"collapsed\":\"DashboardsBar_collapsed__3CY9n\",\"chipContainer\":\"DashboardsBar_chipContainer__IRxuN\"};"],"sourceRoot":""}
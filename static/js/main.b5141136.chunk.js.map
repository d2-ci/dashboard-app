{"version":3,"sources":["api/metadata.js","components/Item/ListItem/Item.module.css","modules/itemTypes.js","components/TitleBar/styles/EditTitleBar.module.css","components/TitleBar/styles/ViewTitleBar.module.css","modules/util.js","components/ControlBar/styles/DashboardsBar.module.css","components/ControlBar/styles/DashboardItemChip.module.css","components/ItemSelector/styles/ContentMenuItem.module.css","components/Item/styles/ItemHeader.module.css","reducers/user.js","modules/uiBackendItemConverter.js","reducers/dashboards.js","reducers/editDashboard.js","reducers/editItemFilters.js","reducers/selected.js","actions/editItemFilters.js","reducers/itemFilters.js","actions/itemFilters.js","reducers/messages.js","api/messages.js","reducers/snackbar.js","actions/snackbar.js","reducers/visualizations.js","actions/visualizations.js","api/index.js","api/dashboards.js","components/SnackbarMessage/SnackbarMessage.js","actions/selected.js","api/localStorage.js","components/Item/MessagesItem/actions.js","api/editDashboard.js","actions/editDashboard.js","actions/dashboards.js","reducers/controlBar.js","api/controlBar.js","actions/controlBar.js","reducers/dimensions.js","reducers/settings.js","actions/dimensions.js","components/ControlBar/ShowMoreButton.js","components/ControlBar/controlBarDimensions.js","components/ControlBar/ControlBar.js","icons/Star.js","api/dataStatistics.js","components/ControlBar/DashboardItemChip.js","icons/AddCircle.js","icons/Clear.js","components/ControlBar/ClearButton.js","reducers/dashboardsFilter.js","components/ControlBar/Filter.js","components/ControlBar/DashboardsBar.js","actions/dashboardsFilter.js","components/Dashboard/DashboardVerticalOffset.js","components/ItemSelector/HeaderMenuItem.js","icons/Launch.js","components/ItemSelector/ContentMenuItem.js","components/ItemSelector/selectableItems.js","components/ItemSelector/CategorizedMenuGroup.js","components/ItemSelector/actions.js","components/ItemSelector/SinglesMenuGroup.js","components/ItemSelector/ItemSelector.js","components/TitleBar/EditTitleBar.js","components/ItemFilter/FilterDialog.js","reducers/activeModalDimension.js","actions/activeModalDimension.js","components/ItemFilter/FilterSelector.js","components/TitleBar/Info.js","components/TitleBar/ViewTitleBar.js","components/TitleBar/TitleBar.js","components/Item/VisualizationItem/DefaultPlugin.js","components/Item/VisualizationItem/assets/icons.js","components/Item/VisualizationItem/FatalErrorBoundary.js","components/Item/DeleteItemButton.js","components/Item/ItemHeader.js","components/Item/VisualizationItem/ItemHeaderButtons.js","components/Item/VisualizationItem/ItemFooter.js","modules/memoizeOne.js","components/Item/VisualizationItem/LoadingMask.js","components/Item/VisualizationItem/Item.js","widgets/Line.js","components/Item/MessagesItem/Item.js","components/Item/NotSupportedItem/Item.js","icons/Description.js","icons/Delete.js","components/Item/ListItem/Item.js","components/Item/ListItem/actions.js","components/Item/TextItem/Item.js","components/Item/AppItem/Item.js","components/Item/SpacerItem/Item.js","components/Item/Item.js","widgets/NoContentMessage.js","components/Item/ProgressiveLoadingContainer.js","components/ItemGrid/ItemGrid.js","components/FilterBar/FilterBadge.js","components/FilterBar/FilterBar.js","components/Dashboard/DashboardContent.js","components/Dashboard/ViewDashboard.js","components/ControlBar/ConfirmDeleteDialog.js","components/ControlBar/EditBar.js","components/Dashboard/EditDashboard.js","components/Dashboard/NewDashboard.js","components/Dashboard/Dashboard.js","components/Dashboard/dashboardModes.js","components/App.js","actions/user.js","locales/index.js","reducers/style.js","reducers/index.js","configureStore.js","index.js","components/ControlBar/styles/ControlBar.module.css","components/Item/VisualizationItem/styles/FatalErrorBoundary.module.css","components/ControlBar/styles/ShowMoreButton.module.css","components/ControlBar/styles/ClearButton.module.css","components/Item/VisualizationItem/styles/Item.module.css","components/Item/VisualizationItem/plugin.js","components/ItemGrid/gridUtil.js","components/ItemSelector/styles/CategorizedMenuGroup.module.css","components/Item/styles/DeleteItemButton.module.css","components/Item/VisualizationItem/styles/LoadingMask.module.css","components/FilterBar/styles/FilterBar.module.css","components/ControlBar/styles/ConfirmDeleteDialog.module.css"],"names":["getIdNameFields","rename","arguments","length","undefined","concat","getDimensionFields","_ref2","withItems","arrayClean","join","getAxesFields","_ref3","getFavoriteFields","_ref4","withDimensions","withOptions","getFavoritesFields","_ref5","Object","_home_travis_build_dhis2_dashboards_app_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_toConsumableArray__WEBPACK_IMPORTED_MODULE_0__","getListItemFields","getMapFields","apiFetchFavorite","id","type","_ref6","fields","getInstance","then","d2","Api","getApi","get","getEndPointName","module","exports","list","item","itemicon","link","deleteicon","deletebutton","VISUALIZATION","REPORT_TABLE","CHART","MAP","EVENT_REPORT","EVENT_CHART","APP","REPORTS","RESOURCES","USERS","MESSAGES","TEXT","SPACER","isVisualizationType","itemTypeMap","hasMapView","itemType","domainType","isTrackerDomainType","getDefaultItemCount","defaultItemCount","getAppName","appName","_itemTypeMap","_home_travis_build_dhis2_dashboards_app_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_defineProperty__WEBPACK_IMPORTED_MODULE_0__","endPointName","propName","pluralTitle","i18n","t","appUrl","Date","getTime","getItemUrl","url","launchUrl","getBaseUrl","getItemIcon","TableIcon","ChartIcon","MapIcon","ExtensionIcon","DescriptionIcon","PersonIcon","FontDownloadIcon","EmailIcon","CropFreeIcon","NotInterestedIcon","section","titleDescription","title","description","itemSelector","actions","editLink","titleBar","titleBarIcon","orArray","param","Array","isArray","orObject","isObject","arrayToIdMap","array","reduce","obj","formatDate","value","uiLocale","global","Intl","DateTimeFormat","locale","year","month","day","format","substr","replace","validateReducer","defaultValue","api","idx","baseUrl","indexOf","slice","getWithoutId","object","_home_travis_build_dhis2_dashboards_app_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectSpread__WEBPACK_IMPORTED_MODULE_0__","leftControls","rightControls","icon","selected","unselected","menuItem","launchLink","label","buttonInsert","itemWrap","itemHeaderWrap","itemTitle","itemActionsWrap","DEFAULT_STATE_USER","username","isSuperuser","sGetUserUsername","state","user","spacerContent","isTextType","text","convertUiItemsToBackend","items","map","isUiSpacerType","objectSpread","convertBackendItemsToUi","isBackendSpacerType","gridProperties","getGridItemProperties","DEFAULT_STATE_DASHBOARDS","byId","updateDashboardProp","_ref","dashboardId","prop","defineProperty","sGetDashboardsRoot","dashboards","sGetDashboardById","sDashboardsIsFetching","sGetAllDashboards","sGetDashboardItems","sGetStarredDashboards","values","filter","dashboard","starred","sGetUnstarredDashboards","sGetDashboardsSortedByStarred","toConsumableArray","arraySort","getCustomDashboards","data","arrayFrom","d","name","displayName","displayDescription","favorite","owner","created","split","lastUpdated","access","numberOfItems","dashboardItems","DEFAULT_STATE_EDIT_DASHBOARD","NEW_DASHBOARD_STATE","sGetEditDashboardRoot","editDashboard","sGetIsEditing","isEmpty","sGetEditDashboardItems","DEFAULT_STATE_EDIT_ITEM_FILTERS","sGetEditItemFiltersRoot","editItemFilters","combineReducers","action","isLoading","showDescription","sGetSelectedRoot","sGetSelectedId","sGetSelectedIsLoading","sGetSelectedShowDescription","acRemoveEditItemFilter","DEFAULT_STATE_ITEM_FILTERS","sGetItemFiltersRoot","itemFilters","sGetFiltersKeys","keys","acRemoveItemFilter","sGetMessagesRoot","messages","getMessages","catch","error","console","log","DEFAULT_STATE_SNACKBAR","message","duration","open","acCloseSnackbar","DEFAULT_STATE_VISUALIZATIONS","p","sGetVisualization","visualizations","sGetVisualizationsRoot","acAddVisualization","onError","getDashboardItemsFields","withFavorite","getDashboardFields","apiFetchDashboard","models","apiStarDashboard","isStarred","post","delete","apiDeleteDashboard","loadingDashboardMsg","SnackbarMessageContent","react_default","a","createElement","style","fontWeight","connect","_sGetSnackbar","snackbar","sGetSnackbar","snackbarOpen","snackbarMessage","snackbarDuration","onCloseSnackbar","props","Snackbar_default","zIndex","SnackbarMessage_SnackbarMessageContent","autoHideDuration","onClose","acSetSelectedId","acSetSelectedIsLoading","tLoadDashboard","asyncToGenerator","regenerator_default","mark","_callee","dispatch","dash","wrap","_context","prev","next","sent","acAppendDashboards","abrupt","Promise","resolve","t0","stop","_x","apply","this","tSetSelectedDashboardById","_callee2","getState","snackbarTimeout","onSuccess","_context2","setTimeout","dashboardName","customDashboard","acSetDashboardItems","withShape","localStorage","setItem","forEach","extractFavorite","messageConversations","filters","clearTimeout","_x2","_x3","saveDashboard","assign","width","w","height","h","save","msg","response","uid","updateDashboard","postDashboard","create","acAddDashboardItem","itemPropName","generateUid","gridItemProperties","content","NEW_ITEM_SHAPE","acUpdateDashboardItem","acRemoveDashboardItem","acSetDashboardStarred","tFetchDashboards","collection","paging","toArray","userRows","sGetControlBarUserRows","controlBar","sGetControlBarRoot","KEY","hasNamespace","currentUser","dataStore","has","getNamespace","apiGetControlBarRows","_callee3","namespace","_context3","t1","t2","find","key","apiPostControlBarRows","_callee4","rows","_context4","set","_x4","_x5","acSetControlBarUserRows","DEFAULT_DIMENSIONS","getDimensionById","DIMENSION_ID_PERIOD","DIMENSION_ID_ORGUNIT","sGetDimensions","dimensions","DEFAULT_SETTINGS","keyDateFormat","keyAnalysisRelativePeriod","keyAnalysisDigitGroupSeparator","displayNameProperty","rootOrganisationUnit","sGetSettings","settings","sGetSettingsDisplayNameProperty","acSetDimensions","ShowMoreButton","onClick","isMaxHeight","disabled","textAlign","className","classes","showMore","MIN_ROW_COUNT","getRowsHeight","getNumRowsFromHeight","Math","floor","FIRST_ROW_PADDING_HEIGHT","getTopOffset","getControlBarHeight","ControlBar","_this","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","onStartDrag","setState","dragging","window","addEventListener","onDrag","onEndDrag","event","preventDefault","stopPropagation","newHeight","clientY","onChangeHeight","requestAnimationFrame","removeEventListener","draghandle","onMouseDown","max","rootStyle","top","backgroundColor","editMode","colors","yellow050","white","paddingBottom","transition","root","children","renderDragHandle","React","Component","defaultProps","StarIcon","xmlns","viewBox","fill","apiPostDataStatistics","eventType","DashboardItemChip","chipProps","selectedState","Star","react_router_dom","to","debounce","es_lib","AddCircleIcon","teal600","ClearIcon","grey800","ClearButton","onClear","button","Clear","color","ownerData","DEFAULT_STATE_DASHBOARDS_FILTER_NAME","DEFAULT_STATE_DASHBOARDS_FILTER_OWNER","order","sGetDashboardsFilterRoot","dashboardsFilter","sGetFilterName","styles","filterField","fontSize","searchIcon","grey700","KEYCODE_ENTER","KEYCODE_ESCAPE","Filter","_Component","setFilterValue","onChangeName","target","handleKeyUp","keyCode","onKeypressEnter","inherits","createClass","nextProps","_this$props","startAdornment","InputAdornment_default","position","Search_default","endAdornment","ControlBar_ClearButton","Input_default","placeholder","onChange","onKeyUp","Function","prototype","withStyles","MAX_ROW_COUNT","DashboardsBar","_getPrototypeOf2","_len","args","_key","setInitialDashboardState","adjustedHeight","newRows","newRowCount","min","onToggleMaxHeight","onSelectDashboard","history","push","selectedId","onChangeFilterName","rowCount","controlBarHeight","contentWrapperStyle","padding","overflowY","components_ControlBar_ControlBar","display","textDecoration","marginRight","AddCircle","ControlBar_Filter","ControlBar_DashboardItemChip","ControlBar_ShowMoreButton","mapDispatchToProps","withRouter","stateProps","dispatchProps","ownProps","displayDashboards","toLowerCase","includes","marginTop","HeaderMenuItem","dense","LaunchIcon","grey600","LaunchLink","e","rel","href","Launch","InsertButton","ContentMenuItem","onInsert","visType","ItemIcon","renderedItemIcon","visTypeIcons","ContentMenuItem_LaunchLink","ContentMenuItem_InsertButton","singleItems","header","categorizedItems","listItemTypes","CategorizedMenuGroup","addItem","tAddListItemContent","newItem","toggleSeeMore","seeMore","onChangeItemsLimit","_this2","_this$props2","hasMore","Fragment","ItemSelector_HeaderMenuItem","itemUrl","context","ItemSelector_ContentMenuItem","showMoreButton","margin","contextTypes","PropTypes","isRequired","dashboardItem","listItemType","dashboardItemIndex","findIndex","category","addToDashboard","ItemSearchField","onFocus","ItemSelector","closeList","openList","_","fetchItems","anchorEl","currentTarget","setFilter","getCategorizedMenuGroups","itemCount","allItems","maxOptions","ItemSelector_CategorizedMenuGroup","getSinglesMenuGroups","ItemSelector_SinglesMenuGroup","getMenuGroups","queryString","add","Set","ItemSelector_ItemSearchField","Popover_default","anchorOrigin","horizontal","vertical","transformOrigin","PaperProps","disableAutoFocus","disableEnforceFocus","disableRestoreFocus","maxWidth","EditTitleBar","onChangeTitle","onChangeDescription","components_ItemSelector_ItemSelector","selectedDashboard","peId","ouId","FilterDialog","onConfirm","dimension","selectedItems","dialogId","commonProps","onSelect","onDeselect","onReorder","build","selectedPeriods","ouItems","dialogTitle","Dialog_default","dialogContent","DialogActions_default","kind","DEFAULT_STATE_ACTIVE_MODAL_DIMENSION","sGetActiveModalDimension","activeModalDimension","acSetActiveModalDimension","FilterSelector","openPanel","closePanel","closeDialog","clearActiveModalDimension","selectDimension","setActiveModalDimension","onSelectItems","dimensionId","setEditItemFilters","onDeselectItems","itemIdsToRemove","newList","removeEditItemFilter","onReorderItems","itemIds","oldList","reorderedList","saveFilter","filterItems","addItemFilter","removeItemFilter","selectedDimensions","ArrowDropDown_default","Boolean","onDimensionClick","selectedIds","ItemFilter_FilterDialog","Info","show","toggle","InfoOutlined_default","NO_DESCRIPTION","ViewTitleBar","toggleSharingDialog","sharingDialogIsOpen","onStarClick","onInfoClick","titleStyle","cursor","userSelect","StarBorder","TitleBar_Info","marginLeft","update","manage","ItemFilter_FilterSelector","paddingTop","d2_ui_sharing_dialog_default","onRequestClose","tStarDashboard","black","minWidth","TitleBar","edit","TitleBar_EditTitleBar","TitleBar_ViewTitleBar","DefaultPlugin","pluginCredentials","shouldPluginReload","prevProps","reloadAllowed","filtersChanged","vis","visualization","prevVis","visChanged","activeType","reloadPlugin","pluginManager","currentVis","useActiveType","credentials","getActiveType","auth","defaultHeaders","Authorization","options","getGridItemDomId","textDiv","ThreeDots","SpeechBubble","fillRule","transform","Warning","FatalErrorBoundary","errorFound","info","container","icons_Warning","DeleteItemButton","deleteItemButton","Delete_default","red500","HEADER_MARGIN_HEIGHT","ItemHeader","forwardRef","ref","itemId","actionButtons","Item_DeleteItemButton","iconFill","ItemHeaderButtons","_useState","useState","_useState2","slicedToArray","setAnchorEl","onSelectActiveType","isTrackerType","onViewTable","handleClose","onViewChart","onViewMap","canViewAs","isSingleValue","isYearOverYear","VIS_TYPE_GAUGE","VIS_TYPE_PIE","interpretationMenuLabel","activeFooter","pluginIsAvailable","small","secondary","icons_ThreeDots","InsertChart_default","ViewList_default","Public_default","Launch_default","getLink","icons_SpeechBubble","onToggleFooter","scrollContainer","line","border","grey100","ItemFooter","objectId","getId","d2_ui_interpretations_default","memoizeOne","fn","lastArgs","lastValue","every","arg","i","LoadingMask","center","Item","showFooter","configLoaded","pluginIsLoaded","applyFilters","visRows","visColumns","columns","visFilters","dimensionFound","dimensionObjects","getUniqueKey","uniqueId","getPluginComponent","memoizedGetVisualizationConfig","calculatedHeight","originalHeight","headerRef","current","clientHeight","ITEM_CONTENT_PADDING_BOTTOM","memoizedGetContentStyle","contentRef","offsetHeight","VisualizationItem_LoadingMask","data_visualizer_plugin_build_es_lib","memoizedApplyFilters","onLoadingComplete","forDashboard","mapViews","layer","hideTitle","VisualizationItem_DefaultPlugin","onToggleItemExpanded","getContentStyle","measuredHeight","createRef","getVisualizationConfig","_componentDidMount","onVisualizationLoaded","prevState","VisualizationItem_ItemHeaderButtons","Item_ItemHeader","VisualizationItem_FatalErrorBoundary","VisualizationItem_ItemFooter","acSetActiveVisualizationType","grey200","Line","PRIVATE","messageTypes","_messageTypes","listStyleType","paddingLeft","seeAll","marginBottom","sender","lineHeight","snippet","maxHeight","overflow","MessagesItem","getMessageHref","msgIdentifier","messageType","getMessageSender","latestMsg","getMessageItems","editClass","readClass","read","msgDate","document","location","messageCount","userSettings","widgets_Line","string","MessagesContainer","NotSupportedItem","justifyContent","alignItems","NotInterested_default","align","grey500","DeleteIcon","getItemTitle","ListItem","tRemoveListItemContent","contentItems","index","el","getContentItems","contentItem","Description","deleteButton","icons_Delete","grey900","newContent","whiteSpace","textField","fontStretch","onChangeText","updatedItem","d2_ui_rich_text","onEdit","multiline","fullWidth","textDivStyle","viewItem","getIframeSrc","appDetails","iframeSrc","ouIds","ouPath","AppItem","appKey","system","installedApps","app","src","SpacerItem","GridItem","VisualizationItem","TextItem","getGridItem","NoContentMessage","ProgressiveLoadingContainer","shouldLoad","containerRef","shouldLoadHandler","bufferPx","bufferFactor","innerHeight","rect","getBoundingClientRect","bottom","removeHandler","checkShouldLoad","debounceMs","registerHandler","_this3","objectWithoutProperties","eventProps","pick","EXPANDED_HEIGHT","ItemGrid","expandedItems","clickedId","isExpanded","onRemoveItem","onLayoutChange","newLayout","acUpdateDashboardLayout","onResizeStop","layout","oldItem","onItemResize","pluginResize","onRemoveItemWrapper","adjustHeightForExpanded","expandedItem","getItemComponent","itemClassNames","Item_ProgressiveLoadingContainer","Item_Item_Item","getItemComponents","widgets_NoContentMessage","react_grid_layout_default","MARGIN","cols","getGridColumns","rowHeight","GRID_ROW_HEIGHT","innerWidth","compactType","GRID_COMPACT_TYPE","isDraggable","isResizable","draggableCancel","validItems","hasShape","badgeContainer","borderRadius","badge","badgeRemove","FilterBadge","onRemove","count","FilterBar","onBadgeRemove","onBadgeClick","bar","FilterBar_FilterBadge","removeItemFIlter","filtersSelector","createSelector","arr","DashboardContent","components_TitleBar_TitleBar","components_FilterBar_FilterBar","components_ItemGrid_ItemGrid","Content","hasDashboardContent","dashboardsIsEmpty","Dashboard_DashboardContent","dashboardsLoaded","contentNotReady","ControlBar_DashboardsBar","Dashboard_DashboardVerticalOffset","ViewDashboard_Content","ConfirmDeleteDialog","onDeleteConfirmed","onContinueEditing","destructive","buttonBarStyle","EditBar","translationDialogIsOpen","dashboardModel","confirmDeleteDialogOpen","redirectUrl","onConfirmDelete","onSave","newId","onDiscard","onDiscardChanges","onDelete","onTranslationsSaved","translations","dbLocale","translation","property","onTranslate","fetchDashboardModel","toggleTranslationDialog","confirmDeleteDialog","deleteAccess","ControlBar_ConfirmDeleteDialog","translationDialog","d2_ui_translation_dialog_default","objectToTranslate","fieldsToTranslate","onTranslationSaved","onTranslationError","err","react_router","updateAccess","discardBtnText","primary","sGetIsNewDashboard","dashboardToSave","tDeleteDashboard","acSetDashboardDisplayName","EditDashboard","initialized","initEditDashboard","setEditDashboard","getDashboardContent","EditDashboard_Content","ControlBar_EditBar","NewDashboard","setNewDashboard","Dashboard","setDashboard","match","params","selectDashboard","scrollToTop","scrollTo","mode","Dashboard_EditDashboard","Dashboard_NewDashboard","Dashboard_ViewDashboard","dashboardToSelect","preferredId","getItem","App","setCurrentUser","fetchDashboards","setControlBarRows","setDimensions","spacers","build_es_lib","exact","path","render","components_Dashboard_Dashboard","components_SnackbarMessage_SnackbarMessage","childContextTypes","controlBarRows","displayNameProp","filteredDimensions","apiFetchDimensions","dim","dimensionType","dataDimensionType","tSetDimensions","moment","addResources","arTranslations","ar_IQTranslations","daTranslations","enTranslations","esTranslations","frTranslations","idTranslations","kmTranslations","loTranslations","myTranslations","nbTranslations","prsTranslations","psTranslations","ptTranslations","pt_BRTranslations","ruTranslations","svTranslations","tetTranslations","tgTranslations","ukTranslations","urTranslations","viTranslations","zhTranslations","zh_CNTranslations","setDefaultNamespace","changeLanguage","objectClean","conversations","$merge","d2Object","keyUiLocale","authorities","newState","k","$unshift","idToRemove","$splice","stateItems","layoutHasChanged","newStateItems","x","y","stateItem","si","configureStore","middleware","thunk","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","createStore","reducer","applyMiddleware","configI18n","config","sources","manifest","isProd","getManifest","version","manifest_generated_at","process","activities","dhis","dhis2","apiVersion","headers","schemas","getUserSettings","d2Init","initializedD2","ReactDOM","lib","es","store","theme","createMuiTheme","dhis2theme","src_components_App","getElementById","init","itemTypeToExternalPlugin","_itemTypeToExternalPl","_home_travis_build_dhis2_dashboards_app_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_defineProperty__WEBPACK_IMPORTED_MODULE_3__","getPlugin","hasIntegratedPlugin","reportTable","chart","eventReport","eventChart","loadPlugin","plugin","load","loadingIndicator","getName","_home_travis_build_dhis2_dashboards_app_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_asyncToGenerator__WEBPACK_IMPORTED_MODULE_2__","_home_travis_build_dhis2_dashboards_app_node_modules_babel_preset_react_app_node_modules_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default","_ref$options","_home_travis_build_dhis2_dashboards_app_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectSpread__WEBPACK_IMPORTED_MODULE_1__","fetch","fetchedFavorite","resize","unmount","originalType","extractedMapView","mv","VIS_TYPE_COLUMN","VIS_TYPE_PIVOT_TABLE","__webpack_require__","__webpack_exports__","d2_utilizr_lib_isFunction__WEBPACK_IMPORTED_MODULE_0__","d2_utilizr_lib_isFunction__WEBPACK_IMPORTED_MODULE_0___default","n","_modules_util__WEBPACK_IMPORTED_MODULE_1__","isNonNegativeInteger","Number","isInteger","minH","itemWithShape","Error","col","row","itemWidth","itemHeight","getShape","round","getOriginalHeight","querySelector","isFunction","setViewportSize","clientWidth"],"mappings":"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","file":"static/js/main.b5141136.chunk.js","sourcesContent":["import { getInstance } from 'd2';\nimport arrayClean from 'd2-utilizr/lib/arrayClean';\n\nimport { getEndPointName } from '../modules/itemTypes';\n\n// Id, name\nexport const getIdNameFields = ({ rename } = {}) => [\n    'id',\n    `${rename ? 'displayName~rename(name)' : 'name,displayName'}`,\n];\n\n// Item\nexport const getItemFields = () => [\n    'dimensionItem~rename(id)',\n    'displayName~rename(name)',\n    'dimensionItemType',\n];\n\n// Dimension\nexport const getDimensionFields = ({ withItems }) =>\n    arrayClean([\n        'dimension',\n        'legendSet[id]',\n        'filter',\n        'programStage',\n        withItems ? `items[${getItemFields().join(',')}]` : ``,\n    ]);\n\n// Axis\nexport const getAxesFields = ({ withItems }) => [\n    `columns[${getDimensionFields({ withItems }).join(',')}]`,\n    `rows[${getDimensionFields({ withItems }).join(',')}]`,\n    `filters[${getDimensionFields({ withItems }).join(',')}]`,\n];\n\n// Favorite\nexport const getFavoriteFields = ({ withDimensions, withOptions }) => {\n    return arrayClean([\n        `${getIdNameFields({ rename: true }).join(',')}`,\n        'displayDescription~rename(description)',\n        withDimensions ? `${getAxesFields({ withItems: true }).join(',')}` : ``,\n        withOptions\n            ? [\n                  '*',\n                  '!attributeDimensions',\n                  '!attributeValues',\n                  '!category',\n                  '!categoryDimensions',\n                  '!categoryOptionGroupSetDimensions',\n                  '!columnDimensions',\n                  '!dataDimensionItems',\n                  '!dataElementDimensions',\n                  '!dataElementGroupSetDimensions',\n                  '!filterDimensions',\n                  '!itemOrganisationUnitGroups',\n                  '!lastUpdatedBy',\n                  '!organisationUnitGroupSetDimensions',\n                  '!organisationUnitLevels',\n                  '!organisationUnits',\n                  '!programIndicatorDimensions',\n                  '!relativePeriods',\n                  '!reportParams',\n                  '!rowDimensions',\n                  '!series',\n                  '!translations',\n                  '!userOrganisationUnit',\n                  '!userOrganisationUnitChildren',\n                  '!userOrganisationUnitGrandChildren',\n              ].join(',')\n            : '',\n    ]);\n};\n\nexport const getFavoritesFields = ({ withDimensions }) => [\n    `reportTable[${getFavoriteFields({ withDimensions }).join(',')}]`,\n    `chart[${['type', ...getFavoriteFields({ withDimensions })].join(',')}]`,\n    `map[${getFavoriteFields({ withDimensions }).join(',')}]`,\n    `eventReport[${getFavoriteFields({ withDimensions }).join(',')}]`,\n    `eventChart[${getFavoriteFields({ withDimensions }).join(',')}]`,\n];\n\n// List item\nexport const getListItemFields = () => [\n    `reports[${['type', ...getIdNameFields({ rename: true })].join(',')}]`,\n    `resources[${getIdNameFields({ rename: true }).join(',')}]`,\n    `users[${getIdNameFields({ rename: true }).join(',')}]`,\n];\n\n// Map\nexport const getMapFields = () => [\n    `${getIdNameFields({ rename: true }).join(',')}`,\n    'user,longitude,latitude,zoom,basemap',\n    `mapViews[${getFavoriteFields({\n        withDimensions: true,\n        withOptions: true,\n    })}]`,\n];\n\n// Api\n\n// Get more info about the favorite of a dashboard item\nexport const apiFetchFavorite = (id, type, { fields }) =>\n    getInstance().then(d2 =>\n        d2.Api.getApi().get(`${getEndPointName(type)}/${id}`, {\n            fields:\n                fields ||\n                getFavoriteFields({\n                    withDimensions: true,\n                    withOptions: true,\n                }),\n        })\n    );\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"Item_list__2oHc1\",\"item\":\"Item_item__lO40M\",\"itemicon\":\"Item_itemicon__dv5ah\",\"link\":\"Item_link__2gULT\",\"deleteicon\":\"Item_deleteicon__3c7bl\",\"deletebutton\":\"Item_deletebutton__1DfY5\"};","import i18n from '@dhis2/d2-i18n';\nimport TableIcon from '@material-ui/icons/ViewList';\nimport ChartIcon from '@material-ui/icons/InsertChart';\nimport MapIcon from '@material-ui/icons/Public';\nimport ExtensionIcon from '@material-ui/icons/Extension';\nimport DescriptionIcon from '@material-ui/icons/Description';\nimport PersonIcon from '@material-ui/icons/Person';\nimport FontDownloadIcon from '@material-ui/icons/FontDownload';\nimport EmailIcon from '@material-ui/icons/Email';\nimport CropFreeIcon from '@material-ui/icons/CropFree';\nimport NotInterestedIcon from '@material-ui/icons/NotInterested';\n\nimport { getBaseUrl } from './util';\n\n// Item types\nexport const VISUALIZATION = 'VISUALIZATION';\nexport const REPORT_TABLE = 'REPORT_TABLE';\nexport const CHART = 'CHART';\nexport const MAP = 'MAP';\nexport const EVENT_REPORT = 'EVENT_REPORT';\nexport const EVENT_CHART = 'EVENT_CHART';\nexport const APP = 'APP';\nexport const REPORTS = 'REPORTS';\nexport const RESOURCES = 'RESOURCES';\nexport const USERS = 'USERS';\nexport const MESSAGES = 'MESSAGES';\nexport const TEXT = 'TEXT';\nexport const SPACER = 'SPACER';\n\nconst DOMAIN_TYPE_AGGREGATE = 'AGGREGATE';\nconst DOMAIN_TYPE_TRACKER = 'TRACKER';\n\n// Dashboard helpers\nexport const isVisualizationType = item =>\n    !!itemTypeMap[item.type].isVisualizationType;\nexport const hasMapView = itemType =>\n    itemTypeMap[itemType].domainType === DOMAIN_TYPE_AGGREGATE;\nexport const isTrackerDomainType = itemType =>\n    itemTypeMap[itemType].domainType === DOMAIN_TYPE_TRACKER;\nexport const getDefaultItemCount = itemType =>\n    itemTypeMap[itemType].defaultItemCount || 5;\nexport const getAppName = itemType => itemTypeMap[itemType].appName || '';\n\n// Item type map\nexport const itemTypeMap = {\n    [VISUALIZATION]: {\n        id: VISUALIZATION,\n        endPointName: 'visualizations',\n        propName: 'visualization',\n        pluralTitle: i18n.t('Visualizations'),\n        appUrl: id => `dhis-web-data-visualizer/#/${id}`,\n        appName: 'Data Visualizer',\n        defaultItemCount: 10,\n    },\n    [REPORT_TABLE]: {\n        id: REPORT_TABLE,\n        endPointName: 'visualizations',\n        propName: 'visualization',\n        pluralTitle: i18n.t('Pivot tables'),\n        domainType: DOMAIN_TYPE_AGGREGATE,\n        isVisualizationType: true,\n        appUrl: id => `dhis-web-data-visualizer/#/${id}`,\n        appName: 'Data Visualizer',\n    },\n    [CHART]: {\n        id: CHART,\n        endPointName: 'visualizations',\n        propName: 'visualization',\n        pluralTitle: i18n.t('Charts'),\n        domainType: DOMAIN_TYPE_AGGREGATE,\n        isVisualizationType: true,\n        appUrl: id => `dhis-web-data-visualizer/#/${id}`,\n        appName: 'Data Visualizer',\n    },\n    [MAP]: {\n        id: MAP,\n        endPointName: 'maps',\n        propName: 'map',\n        pluralTitle: i18n.t('Maps'),\n        domainType: DOMAIN_TYPE_AGGREGATE,\n        isVisualizationType: true,\n        appUrl: id => `dhis-web-maps/?id=${id}`,\n        appName: 'Maps',\n    },\n    [EVENT_REPORT]: {\n        id: EVENT_REPORT,\n        endPointName: 'eventReports',\n        propName: 'eventReport',\n        pluralTitle: i18n.t('Event reports'),\n        domainType: DOMAIN_TYPE_TRACKER,\n        isVisualizationType: true,\n        appUrl: id => `dhis-web-event-reports/?id=${id}`,\n        appName: 'Event Reports',\n    },\n    [EVENT_CHART]: {\n        id: EVENT_CHART,\n        endPointName: 'eventCharts',\n        propName: 'eventChart',\n        pluralTitle: i18n.t('Event charts'),\n        domainType: DOMAIN_TYPE_TRACKER,\n        isVisualizationType: true,\n        appUrl: id => `dhis-web-event-visualizer/?id=${id}`,\n        appName: 'Event Visualizer',\n    },\n    [APP]: {\n        endPointName: 'apps',\n        propName: 'appKey',\n        pluralTitle: i18n.t('Apps'),\n    },\n    [REPORTS]: {\n        id: REPORTS,\n        endPointName: 'reports',\n        propName: 'reports',\n        pluralTitle: i18n.t('Reports'),\n        appUrl: (id, type) => {\n            switch(type) {\n                case 'HTML':\n                    return `dhis-web-reports/#/standard-report/view/${id}`;\n\n                case 'JASPER_REPORT_TABLE':\n                case 'JASPER_JDBC':\n                default:\n                    return `api/reports/${id}/data.pdf?t=${(new Date()).getTime()}`;\n            }\n        },\n    },\n    [RESOURCES]: {\n        id: RESOURCES,\n        endPointName: 'resources',\n        propName: 'resources',\n        pluralTitle: i18n.t('Resources'),\n        appUrl: id => `api/documents/${id}/data`,\n    },\n    [USERS]: {\n        id: USERS,\n        endPointName: 'users',\n        propName: 'users',\n        pluralTitle: i18n.t('Users'),\n        appUrl: id => `dhis-web-dashboard-integration/profile.action?id=${id}`,\n    },\n    [TEXT]: {\n        id: TEXT,\n        propName: 'text',\n    },\n    [MESSAGES]: {\n        propName: 'messages',\n    },\n    [SPACER]: {\n        propName: 'text',\n    },\n};\n\nexport const getEndPointName = type => itemTypeMap[type].endPointName;\n\nexport const getItemUrl = (type, item, d2) => {\n    let url;\n\n    if (type === APP) {\n        url = item.launchUrl;\n    }\n\n    if (itemTypeMap[type] && itemTypeMap[type].appUrl) {\n        url = `${getBaseUrl(d2)}/${itemTypeMap[type].appUrl(item.id, item.type)}`;\n    }\n\n    return url;\n};\n\nexport const getItemIcon = type => {\n    switch (type) {\n        case REPORT_TABLE:\n        case EVENT_REPORT:\n        case REPORTS:\n            return TableIcon;\n        case CHART:\n        case EVENT_CHART:\n            return ChartIcon;\n        case MAP:\n            return MapIcon;\n        case APP:\n            return ExtensionIcon;\n        case RESOURCES:\n            return DescriptionIcon;\n        case USERS:\n            return PersonIcon;\n        case TEXT:\n            return FontDownloadIcon;\n        case MESSAGES:\n            return EmailIcon;\n        case SPACER:\n            return CropFreeIcon;\n        default:\n            return NotInterestedIcon;\n    }\n};\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"section\":\"EditTitleBar_section__2sBzn\",\"titleDescription\":\"EditTitleBar_titleDescription__1-pfK\",\"title\":\"EditTitleBar_title__2fOQP\",\"description\":\"EditTitleBar_description__fKEX6\",\"itemSelector\":\"EditTitleBar_itemSelector__PWJdH\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"actions\":\"ViewTitleBar_actions__1kGtw\",\"editLink\":\"ViewTitleBar_editLink__1HKr0\",\"titleBar\":\"ViewTitleBar_titleBar__1K-pW\",\"titleBarIcon\":\"ViewTitleBar_titleBarIcon__2spKM\"};","import isObject from 'lodash/isObject';\n\n// validation\nexport function orNull(param) {\n    return param === undefined ? null : param;\n}\n\nexport function orArray(param) {\n    return Array.isArray(param) ? param : [];\n}\n\nexport function orObject(param) {\n    return isObject(param) ? param : {};\n}\n\n// array\nexport function arrayGetById(array, id) {\n    return array.find(item => item.id === id);\n}\n\n// object\nexport function arrayToIdMap(array) {\n    return array.reduce((obj, item) => {\n        obj[item.id] = item;\n        return obj;\n    }, {});\n}\n\n// date\nexport function getDate() {\n    const y = Math.floor(Math.random() * 3) + 2015;\n    const M = Math.floor(Math.random() * 12) + 1;\n    const d = Math.floor(Math.random() * 28) + 1;\n    // const h = Math.floor(Math.random() * 23) + 1;\n    // const m = Math.floor(Math.random() * 59) + 1;\n    // const s = Math.floor(Math.random() * 59) + 1;\n\n    return new Date(`${y}-${M}-${d}`)\n        .toJSON()\n        .replace('T', ' ')\n        .substr(0, 10);\n}\n\nexport const formatDate = (value, uiLocale) => {\n    if (typeof global.Intl !== 'undefined' && Intl.DateTimeFormat) {\n        const locale = uiLocale || 'en';\n        return new Intl.DateTimeFormat(locale, {\n            year: 'numeric',\n            month: 'short',\n            day: 'numeric',\n        }).format(new Date(value));\n    }\n\n    return value.substr(0, 19).replace('T', ' ');\n};\n\n/**\n * Sorts an array of objects based on provided date property\n *\n * @param {Array} items Array of objects\n * @param {String} dateProp Name of the date property to be used for sorting\n * @param {Boolean} ascending Whether to sort ascending or descending\n */\nexport const sortByDate = (items, dateProp, ascending = true) => {\n    const values = Object.values(items);\n\n    values.sort((a, b) => {\n        const aDate = new Date(a[dateProp]);\n        const bDate = new Date(b[dateProp]);\n\n        return ascending ? aDate - bDate : bDate - aDate;\n    });\n\n    return values;\n};\n\n// reducer validator\nexport const validateReducer = (value, defaultValue) =>\n    value === undefined || value === null ? defaultValue : value;\n\nexport const getBaseUrl = d2 => {\n    const api = d2.Api.getApi();\n    const idx = api.baseUrl.indexOf('/api');\n    return idx > -1 ? api.baseUrl.slice(0, idx) : api.baseUrl;\n};\n\nexport const getWithoutId = object => ({\n    ...object,\n    id: undefined,\n});\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"leftControls\":\"DashboardsBar_leftControls__2kr14\",\"rightControls\":\"DashboardsBar_rightControls__2l1lT\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"link\":\"DashboardItemChip_link__1b7Z_\",\"icon\":\"DashboardItemChip_icon__1zOaG\",\"selected\":\"DashboardItemChip_selected__36Qak\",\"unselected\":\"DashboardItemChip_unselected__3dm-X\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"menuItem\":\"ContentMenuItem_menuItem__2DIcB\",\"launchLink\":\"ContentMenuItem_launchLink__MRANR\",\"label\":\"ContentMenuItem_label__2pIfq\",\"buttonInsert\":\"ContentMenuItem_buttonInsert__1GlZy\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"itemWrap\":\"ItemHeader_itemWrap__3gJiQ\",\"itemHeaderWrap\":\"ItemHeader_itemHeaderWrap__xEKwZ\",\"itemTitle\":\"ItemHeader_itemTitle__3LmXp\",\"itemActionsWrap\":\"ItemHeader_itemActionsWrap__1U5Ex\"};","export const RECEIVED_USER = 'RECEIVED_USER';\n\nexport const DEFAULT_STATE_USER = {\n    id: '',\n    username: '',\n    uiLocale: '',\n    isSuperuser: false,\n};\n\nexport default (state = DEFAULT_STATE_USER, action) => {\n    switch (action.type) {\n        case RECEIVED_USER: {\n            return fromD2ToUserObj(action.value);\n        }\n        default:\n            return state;\n    }\n};\n\nfunction fromD2ToUserObj(d2Object) {\n    return {\n        id: d2Object.id,\n        username: d2Object.username,\n        uiLocale: d2Object.settings.keyUiLocale,\n        isSuperuser: d2Object.authorities.has('ALL'),\n    };\n}\n\n// selectors\n\nexport const sGetUserId = state => state.user.id;\nexport const sGetUserUsername = state => state.user.username;\nexport const sGetIsSuperuser = state => state.user.isSuperuser;\nexport const sGetUiLocale = state => state.user.uiLocale;\n","import { TEXT, SPACER } from './itemTypes';\nimport { getGridItemProperties } from '../components/ItemGrid/gridUtil';\n\nexport const spacerContent = 'SPACER_ITEM_FOR_DASHBOARD_LAYOUT_CONVENIENCE';\nexport const emptyTextItemContent = 'TEXT_ITEM_WITH_NO_CONTENT';\n\nconst isBackendSpacerType = item =>\n    item.type === TEXT && item.text === spacerContent;\nconst isUiSpacerType = item => item.type === SPACER;\nconst isTextType = item => item.type === TEXT && item.text !== spacerContent;\n\nexport const convertUiItemsToBackend = items =>\n    items.map(item => {\n        let text = null;\n        if (isUiSpacerType(item)) {\n            text = spacerContent;\n        } else if (isTextType(item)) {\n            text = item.text || emptyTextItemContent;\n        }\n\n        return {\n            ...item,\n            ...(text ? { text } : {}),\n        };\n    });\n\nexport const convertBackendItemsToUi = items =>\n    items.map(item => {\n        const type = isBackendSpacerType(item) ? SPACER : item.type;\n        const gridProperties = getGridItemProperties(item.id);\n\n        const text = isTextType(item)\n            ? item.text === emptyTextItemContent\n                ? ''\n                : item.text\n            : null;\n\n        return {\n            ...item,\n            ...(text !== null ? { text } : {}),\n            type,\n            ...gridProperties,\n        };\n    });\n","/** @module reducers/dashboards */\n\nimport arrayFrom from 'd2-utilizr/lib/arrayFrom';\nimport arraySort from 'd2-utilizr/lib/arraySort';\n\nimport { orArray, orObject } from '../modules/util';\nimport { convertBackendItemsToUi } from '../modules/uiBackendItemConverter';\n\nexport const SET_DASHBOARDS = 'SET_DASHBOARDS';\nexport const ADD_DASHBOARDS = 'ADD_DASHBOARDS';\nexport const SET_DASHBOARD_STARRED = 'SET_DASHBOARD_STARRED';\nexport const SET_DASHBOARD_DISPLAY_NAME = 'SET_DASHBOARD_DISPLAY_NAME';\nexport const SET_DASHBOARD_ITEMS = 'SET_DASHBOARD_ITEMS';\n\nexport const DEFAULT_STATE_DASHBOARDS = {\n    byId: null,\n    items: [],\n};\n\n// reducer helper functions\n\nconst updateDashboardProp = ({ state, dashboardId, prop, value }) => ({\n    byId: {\n        ...state.byId,\n        [dashboardId]: {\n            ...state.byId[dashboardId],\n            [prop]: value,\n        },\n    },\n    items: state.items,\n});\n\n/**\n * Reducer that computes and returns the new state based on the given action\n * @function\n * @param {Object} state The current state\n * @param {Object} action The action to be evaluated\n * @returns {Object}\n */\nexport default (state = DEFAULT_STATE_DASHBOARDS, action) => {\n    switch (action.type) {\n        case SET_DASHBOARDS: {\n            return {\n                byId: action.value,\n                items: [],\n            };\n        }\n        case ADD_DASHBOARDS: {\n            return {\n                ...state,\n                byId: {\n                    ...state.byId,\n                    ...action.value,\n                },\n            };\n        }\n        case SET_DASHBOARD_STARRED: {\n            return updateDashboardProp({\n                state,\n                dashboardId: action.dashboardId,\n                prop: 'starred',\n                value: action.value,\n            });\n        }\n        case SET_DASHBOARD_DISPLAY_NAME: {\n            return updateDashboardProp({\n                state,\n                dashboardId: action.dashboardId,\n                prop: 'displayName',\n                value: action.value,\n            });\n        }\n        case SET_DASHBOARD_ITEMS: {\n            return {\n                ...state,\n                items: action.value,\n            };\n        }\n        default:\n            return state;\n    }\n};\n\n// root selector\n\nexport const sGetDashboardsRoot = state => state.dashboards;\n\n// selector level 1\n\n/**\n * Selector which returns a dashboard by id from the state object\n * If no matching dashboard is found it returns undefined\n * If dashboards.byId is null, then the dashboards api request\n * has not yet completed. If dashboards.byId is an empty object\n * then the dashboards api request is complete, but no dashboards\n * were returned\n *\n * @function\n * @param {Object} state The current state\n * @param {Number} id The id of the dashboard\n * @returns {Object | undefined}\n */\nexport const sGetDashboardById = (state, id) =>\n    orObject(sGetDashboardsRoot(state).byId)[id];\n\nexport const sDashboardsIsFetching = state => {\n    return sGetDashboardsRoot(state).byId === null;\n};\n\n/**\n * Selector which returns all dashboards (the byId object)\n *\n * @function\n * @param {Object} state The current state\n * @returns {Object | undefined}\n */\nexport const sGetAllDashboards = state =>\n    orObject(sGetDashboardsRoot(state).byId);\n\n/**\n * Selector which returns the current dashboard items\n *\n * @function\n * @param {Object} state The current state\n * @returns {Array}\n */\nexport const sGetDashboardItems = state => sGetDashboardsRoot(state).items;\n\n// selector level 2\n\nexport const sGetStarredDashboards = state =>\n    Object.values(sGetAllDashboards(state)).filter(\n        dashboard => dashboard.starred === true\n    );\n\nexport const sGetUnstarredDashboards = state =>\n    Object.values(sGetAllDashboards(state)).filter(\n        dashboard => dashboard.starred === false\n    );\n\n// selector level 3\n\nexport const sGetStarredDashboardIds = state => {\n    return sGetStarredDashboards(state).map(dashboard => dashboard.id);\n};\n\nexport const sGetUnstarredDashboardIds = state =>\n    sGetUnstarredDashboards(state).map(dashboard => dashboard.id);\n\nexport const sGetDashboardsSortedByStarred = state => [\n    ...arraySort(sGetStarredDashboards(state), 'ASC', 'displayName'),\n    ...arraySort(sGetUnstarredDashboards(state), 'ASC', 'displayName'),\n];\n\n// utils\n\n/**\n * Returns the array of dashboards, customized for ui\n * @function\n * @param {Array} data The original dashboard list\n * @returns {Array}\n */\nexport const getCustomDashboards = data =>\n    arrayFrom(data).map(d => ({\n        id: d.id,\n        name: d.name,\n        displayName: d.displayName,\n        description: d.description,\n        displayDescription: d.displayDescription,\n        starred: d.favorite,\n        owner: d.user.name,\n        created: d.created\n            .split('T')\n            .join(' ')\n            .substr(0, 16),\n        lastUpdated: d.lastUpdated\n            .split('T')\n            .join(' ')\n            .substr(0, 16),\n        access: d.access,\n        numberOfItems: orArray(d.dashboardItems).length,\n        dashboardItems: convertBackendItemsToUi(d.dashboardItems),\n    }));\n","/** @module reducers/editDashboard */\nimport update from 'immutability-helper';\nimport isEmpty from 'lodash/isEmpty';\nimport { orArray, orObject } from '../modules/util';\n\nexport const RECEIVED_EDIT_DASHBOARD = 'RECEIVED_EDIT_DASHBOARD';\nexport const RECEIVED_NOT_EDITING = 'RECEIVED_NOT_EDITING';\nexport const START_NEW_DASHBOARD = 'START_NEW_DASHBOARD';\nexport const RECEIVED_TITLE = 'RECEIVED_TITLE';\nexport const RECEIVED_DESCRIPTION = 'RECEIVED_DESCRIPTION';\nexport const ADD_DASHBOARD_ITEM = 'ADD_DASHBOARD_ITEM';\nexport const REMOVE_DASHBOARD_ITEM = 'REMOVE_DASHBOARD_ITEM';\nexport const UPDATE_DASHBOARD_ITEM = 'UPDATE_DASHBOARD_ITEM';\nexport const RECEIVED_DASHBOARD_LAYOUT = 'RECEIVED_DASHBOARD_LAYOUT';\n\nexport const DEFAULT_STATE_EDIT_DASHBOARD = {};\nexport const NEW_DASHBOARD_STATE = {\n    id: '',\n    name: '',\n    access: {},\n    description: '',\n    dashboardItems: [],\n};\n\nexport default (state = DEFAULT_STATE_EDIT_DASHBOARD, action) => {\n    switch (action.type) {\n        case RECEIVED_EDIT_DASHBOARD: {\n            const newState = {};\n            Object.keys(NEW_DASHBOARD_STATE).map(\n                k => (newState[k] = action.value[k])\n            );\n            return newState;\n        }\n        case RECEIVED_NOT_EDITING:\n            return DEFAULT_STATE_EDIT_DASHBOARD;\n        case START_NEW_DASHBOARD:\n            return NEW_DASHBOARD_STATE;\n        case RECEIVED_TITLE: {\n            return Object.assign({}, state, { name: action.value });\n        }\n        case RECEIVED_DESCRIPTION: {\n            return Object.assign({}, state, {\n                description: action.value,\n            });\n        }\n        case ADD_DASHBOARD_ITEM:\n            return update(state, {\n                dashboardItems: { $unshift: [action.value] },\n            });\n        case REMOVE_DASHBOARD_ITEM: {\n            const idToRemove = action.value;\n\n            const dashboardItemIndex = state.dashboardItems.findIndex(\n                item => item.id === idToRemove\n            );\n\n            if (dashboardItemIndex > -1) {\n                return update(state, {\n                    dashboardItems: {\n                        $splice: [[dashboardItemIndex, 1]],\n                    },\n                });\n            }\n\n            return state;\n        }\n        case RECEIVED_DASHBOARD_LAYOUT: {\n            const stateItems = orArray(state.dashboardItems);\n            let layoutHasChanged = false;\n\n            const newStateItems = action.value.map(({ x, y, w, h, i }) => {\n                const stateItem = stateItems.find(si => si.id === i);\n\n                if (\n                    !(\n                        stateItem.x === x &&\n                        stateItem.y === y &&\n                        stateItem.w === w &&\n                        stateItem.h === h\n                    )\n                ) {\n                    layoutHasChanged = true;\n                    return Object.assign({}, stateItem, { w, h, x, y });\n                }\n\n                return stateItem;\n            });\n\n            return layoutHasChanged\n                ? {\n                      ...state,\n                      dashboardItems: newStateItems,\n                  }\n                : state;\n        }\n        case UPDATE_DASHBOARD_ITEM: {\n            const dashboardItem = action.value;\n\n            const dashboardItemIndex = state.dashboardItems.findIndex(\n                item => item.id === dashboardItem.id\n            );\n\n            if (dashboardItemIndex > -1) {\n                const newState = update(state, {\n                    dashboardItems: {\n                        $splice: [\n                            [\n                                dashboardItemIndex,\n                                1,\n                                Object.assign({}, dashboardItem),\n                            ],\n                        ],\n                    },\n                });\n\n                return newState;\n            }\n\n            return state;\n        }\n        default:\n            return state;\n    }\n};\n\n// root selector\n\nexport const sGetEditDashboardRoot = state => state.editDashboard;\n\n// selectors\n\nexport const sGetIsEditing = state => !isEmpty(state.editDashboard);\n\nexport const sGetIsNewDashboard = state => {\n    return (\n        !isEmpty(state.editDashboard) && sGetEditDashboardRoot(state).id === ''\n    );\n};\n\nexport const sGetEditDashboardItems = state =>\n    orObject(sGetEditDashboardRoot(state)).dashboardItems;\n","export const CLEAR_EDIT_ITEM_FILTERS = 'CLEAR_EDIT_ITEM_FILTERS';\nexport const REMOVE_EDIT_ITEM_FILTER = 'REMOVE_EDIT_ITEM_FILTER';\nexport const SET_EDIT_ITEM_FILTERS = 'SET_EDIT_ITEM_FILTERS';\n\nexport const DEFAULT_STATE_EDIT_ITEM_FILTERS = {};\n\nexport default (state = DEFAULT_STATE_EDIT_ITEM_FILTERS, action) => {\n    switch (action.type) {\n        case REMOVE_EDIT_ITEM_FILTER: {\n            const newState = { ...state };\n\n            delete newState[action.id];\n\n            return newState;\n        }\n        case SET_EDIT_ITEM_FILTERS: {\n            return action.filters;\n        }\n        case CLEAR_EDIT_ITEM_FILTERS: {\n            return DEFAULT_STATE_EDIT_ITEM_FILTERS;\n        }\n        default:\n            return state;\n    }\n};\n\n// selectors\n\nexport const sGetEditItemFiltersRoot = state => state.editItemFilters;\n\nexport const sGetEditFiltersKeys = state =>\n    Object.keys(sGetEditItemFiltersRoot(state));\n","/** @module reducers/selected */\nimport { combineReducers } from 'redux';\n\nimport { validateReducer } from '../modules/util';\n\nexport const SET_SELECTED_ID = 'SET_SELECTED_ID';\nexport const SET_SELECTED_ISLOADING = 'SET_SELECTED_ISLOADING';\nexport const SET_SELECTED_SHOWDESCRIPTION = 'SET_SELECTED_SHOWDESCRIPTION';\n\nexport const DEFAULT_STATE_SELECTED_ID = null;\nexport const DEFAULT_STATE_SELECTED_ISLOADING = false;\nexport const DEFAULT_STATE_SELECTED_SHOWDESCRIPTION = false;\n\n/**\n * Reducer functions that computes and returns the new state based on the given action\n * @function\n * @param {Object} state The current state\n * @param {Object} action The action to be evaluated\n */\nconst id = (state = DEFAULT_STATE_SELECTED_ID, action) => {\n    switch (action.type) {\n        case SET_SELECTED_ID:\n            return validateReducer(action.value, DEFAULT_STATE_SELECTED_ID);\n        default:\n            return state;\n    }\n};\n\nconst isLoading = (state = DEFAULT_STATE_SELECTED_ISLOADING, action) => {\n    switch (action.type) {\n        case SET_SELECTED_ISLOADING:\n            return validateReducer(\n                action.value,\n                DEFAULT_STATE_SELECTED_ISLOADING\n            );\n        default:\n            return state;\n    }\n};\n\nconst showDescription = (\n    state = DEFAULT_STATE_SELECTED_SHOWDESCRIPTION,\n    action\n) => {\n    switch (action.type) {\n        case SET_SELECTED_SHOWDESCRIPTION:\n            return validateReducer(\n                action.value,\n                DEFAULT_STATE_SELECTED_SHOWDESCRIPTION\n            );\n        default:\n            return state;\n    }\n};\n\nexport default combineReducers({\n    id,\n    isLoading,\n    showDescription,\n});\n\n// Selectors\n\nexport const sGetSelectedRoot = state => state.selected;\n\nexport const sGetSelectedId = state => sGetSelectedRoot(state).id;\n\nexport const sGetSelectedIsLoading = state => sGetSelectedRoot(state).isLoading;\n\nexport const sGetSelectedShowDescription = state =>\n    sGetSelectedRoot(state).showDescription;\n","import {\n    REMOVE_EDIT_ITEM_FILTER,\n    SET_EDIT_ITEM_FILTERS,\n    CLEAR_EDIT_ITEM_FILTERS,\n} from '../reducers/editItemFilters';\n\n// actions\n\nexport const acRemoveEditItemFilter = id => ({\n    type: REMOVE_EDIT_ITEM_FILTER,\n    id,\n});\n\nexport const acClearEditItemFilters = () => ({\n    type: CLEAR_EDIT_ITEM_FILTERS,\n});\n\nexport const acSetEditItemFilters = filters => ({\n    type: SET_EDIT_ITEM_FILTERS,\n    filters,\n});\n","export const CLEAR_ITEM_FILTERS = 'CLEAR_ITEM_FILTERS';\nexport const SET_ITEM_FILTERS = 'SET_ITEM_FILTERS';\nexport const ADD_ITEM_FILTER = 'ADD_ITEM_FILTER';\nexport const REMOVE_ITEM_FILTER = 'REMOVE_ITEM_FILTER';\n\nexport const DEFAULT_STATE_ITEM_FILTERS = {};\n\nexport default (state = DEFAULT_STATE_ITEM_FILTERS, action) => {\n    switch (action.type) {\n        case ADD_ITEM_FILTER: {\n            return {\n                ...state,\n                [action.filter.id]: action.filter.value,\n            };\n        }\n        case REMOVE_ITEM_FILTER: {\n            const newState = { ...state };\n\n            delete newState[action.id];\n\n            return newState;\n        }\n        case SET_ITEM_FILTERS: {\n            return action.filters;\n        }\n        case CLEAR_ITEM_FILTERS: {\n            return DEFAULT_STATE_ITEM_FILTERS;\n        }\n        default:\n            return state;\n    }\n};\n\n// selectors\n\nexport const sGetItemFiltersRoot = state => state.itemFilters;\n\nexport const sGetFiltersKeys = state => Object.keys(sGetItemFiltersRoot(state));\n","import {\n    ADD_ITEM_FILTER,\n    REMOVE_ITEM_FILTER,\n    SET_ITEM_FILTERS,\n    CLEAR_ITEM_FILTERS,\n} from '../reducers/itemFilters';\n\nexport const FILTER_ORG_UNIT = 'ou';\n\n// actions\n\nexport const acAddItemFilter = filter => ({\n    type: ADD_ITEM_FILTER,\n    filter,\n});\n\nexport const acRemoveItemFilter = id => ({\n    type: REMOVE_ITEM_FILTER,\n    id,\n});\n\nexport const acClearItemFilters = () => ({\n    type: CLEAR_ITEM_FILTERS,\n});\n\nexport const acSetItemFilters = filters => ({\n    type: SET_ITEM_FILTERS,\n    filters,\n});\n","import update from 'immutability-helper';\nimport { arrayToIdMap } from '../modules/util';\n\nexport const RECEIVED_MESSAGES = 'RECEIVED_MESSAGES';\n\nexport default (state = {}, action) => {\n    switch (action.type) {\n        case RECEIVED_MESSAGES: {\n            const conversations = arrayToIdMap(action.value);\n\n            const newState = update(state, { $merge: conversations });\n\n            return newState;\n        }\n        default:\n            return state;\n    }\n};\n\n// selectors\n\nexport const sGetMessagesRoot = state => state.messages;\n","import { getInstance } from 'd2';\n\nexport const getMessages = () => {\n    const fields =\n        'id,messageCount,lastUpdated,messageType,displayName,read,messages[id,read,sender[id,displayName],text,lastUpdated]';\n    const url = `/messageConversations?fields=${fields}&order=read:asc&pageSize=200`;\n    return getInstance()\n        .then(d2 => d2.Api.getApi().get(url))\n        .catch(error => console.log('Error:', error));\n};\n","export const RECEIVED_SNACKBAR_MESSAGE = 'RECEIVED_SNACKBAR_MESSAGE';\nexport const CLOSE_SNACKBAR = 'CLOSE_SNACKBAR';\n\nexport const DEFAULT_STATE_SNACKBAR = {\n    message: {},\n    duration: null,\n    open: false,\n};\n\nexport default (state = DEFAULT_STATE_SNACKBAR, action) => {\n    switch (action.type) {\n        case RECEIVED_SNACKBAR_MESSAGE: {\n            return { ...state, ...action.value };\n        }\n        case CLOSE_SNACKBAR: {\n            return DEFAULT_STATE_SNACKBAR;\n        }\n        default:\n            return state;\n    }\n};\n\n// selectors\n\nexport const sGetSnackbar = state => state.snackbar || DEFAULT_STATE_SNACKBAR;\n","import {\n    RECEIVED_SNACKBAR_MESSAGE,\n    CLOSE_SNACKBAR,\n} from '../reducers/snackbar';\n\nexport const acReceivedSnackbarMessage = value => ({\n    type: RECEIVED_SNACKBAR_MESSAGE,\n    value,\n});\n\nexport const acCloseSnackbar = () => ({\n    type: CLOSE_SNACKBAR,\n});\n","import { orObject } from '../modules/util';\nimport objectClean from 'd2-utilizr/lib/objectClean';\n\n/** @module reducers/visualizations */\n\nexport const ADD_VISUALIZATION = 'ADD_VISUALIZATION';\nexport const SET_ACTIVE_VISUALIZATION_TYPE = 'SET_ACTIVE_VISUALIZATION_TYPE';\n\nexport const DEFAULT_STATE_VISUALIZATIONS = {};\n\nconst isEmpty = p => p === undefined || p === null;\n\nexport default (state = DEFAULT_STATE_VISUALIZATIONS, action) => {\n    switch (action.type) {\n        case ADD_VISUALIZATION: {\n            return {\n                ...state,\n                [action.value.id]: objectClean(\n                    {\n                        ...orObject(state[action.value.id]),\n                        ...action.value,\n                    },\n                    isEmpty\n                ),\n            };\n        }\n        case SET_ACTIVE_VISUALIZATION_TYPE: {\n            return {\n                ...state,\n                [action.id]: objectClean(\n                    {\n                        ...orObject(state[action.id]),\n                        activeType: action.activeType,\n                    },\n                    isEmpty\n                ),\n            };\n        }\n        default:\n            return state;\n    }\n};\n\n// root selector\nexport const sGetVisualizationsRoot = state => state.visualizations;\n\n// selectors level 1\nexport const sGetVisualization = (state, id) => {\n    return sGetVisualizationsRoot(state)[id];\n};\n","import {\n    ADD_VISUALIZATION,\n    SET_ACTIVE_VISUALIZATION_TYPE,\n} from '../reducers/visualizations';\n\nexport const acAddVisualization = value => ({\n    type: ADD_VISUALIZATION,\n    value,\n});\n\nexport const acSetActiveVisualizationType = (id, activeType) => {\n    const action = {\n        type: SET_ACTIVE_VISUALIZATION_TYPE,\n        id,\n        activeType,\n    };\n\n    return action;\n};\n","import arrayClean from 'd2-utilizr/lib/arrayClean';\nimport {\n    getListItemFields,\n    getFavoritesFields,\n    getIdNameFields,\n} from './metadata';\n\n// Helper functions\n\nexport const onError = error => console.log('Error: ', error);\n\n// Dashboard item\nexport const getDashboardItemsFields = ({ withFavorite } = {}) =>\n    arrayClean([\n        'id',\n        'type',\n        'shape',\n        'x',\n        'y',\n        'width~rename(w)',\n        'height~rename(h)',\n        'messages',\n        'text',\n        'appKey',\n        `${getListItemFields().join(',')}`,\n        withFavorite\n            ? `${getFavoritesFields({\n                  withDimensions: withFavorite.withDimensions,\n              }).join(',')}`\n            : ``,\n    ]);\n\n// Dashboard\nexport const getDashboardFields = ({ withItems, withFavorite } = {}) =>\n    arrayClean([\n        `${getIdNameFields().join(',')}`,\n        'description',\n        'displayDescription',\n        'favorite',\n        `user[${getIdNameFields({ rename: true }).join(',')}]`,\n        'created',\n        'lastUpdated',\n        'access',\n        withItems\n            ? `dashboardItems[${getDashboardItemsFields({\n                  withFavorite,\n              }).join(',')}]`\n            : ``,\n    ]);\n","import { getInstance } from 'd2';\nimport arrayClean from 'd2-utilizr/lib/arrayClean';\nimport { onError, getDashboardFields } from './index';\n\n// Get \"all\" dashboards on startup\nexport const apiFetchDashboards = () =>\n    getInstance()\n        .then(d2 =>\n            d2.models.dashboard.list({\n                fields: [\n                    getDashboardFields().join(','),\n                    'dashboardItems[id]',\n                ].join(','),\n                paging: 'false',\n            })\n        )\n        .catch(onError);\n\n// Get more info about selected dashboard\nexport const apiFetchDashboard = id =>\n    getInstance()\n        .then(d2 =>\n            d2.models.dashboard.get(id, {\n                fields: arrayClean(\n                    getDashboardFields({\n                        withItems: true,\n                        withFavorite: { withDimensions: false },\n                    })\n                ).join(','),\n            })\n        )\n        .catch(onError);\n\n// Star dashboard\nexport const apiStarDashboard = (id, isStarred) => {\n    const url = `dashboards/${id}/favorite`;\n\n    getInstance().then(d2 => {\n        if (isStarred) {\n            d2.Api.getApi().post(url);\n        } else {\n            d2.Api.getApi().delete(url);\n        }\n    });\n};\n\nexport const apiDeleteDashboard = id => {\n    return getInstance()\n        .then(d2 => {\n            return d2.models.dashboards\n                .get(id)\n                .then(dashboard => dashboard.delete());\n        })\n        .catch(onError);\n};\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport Snackbar from '@material-ui/core/Snackbar';\nimport PropTypes from 'prop-types';\n\nimport { sGetSnackbar } from '../../reducers/snackbar';\nimport { acCloseSnackbar } from '../../actions/snackbar';\n\nconst LOADING_DASHBOARD = 'LOADING_DASHBOARD';\nexport const loadingDashboardMsg = { name: '', type: LOADING_DASHBOARD };\n\nconst SnackbarMessageContent = ({ message }) => {\n    if (typeof message === 'object') {\n        //future message types:  switch(message.type)\n        return (\n            <span>\n                Loading <span style={{ fontWeight: 800 }}>{message.name}</span>{' '}\n                dashboard\n            </span>\n        );\n    }\n    return message;\n};\n\nexport const SnackbarMessage = props => {\n    return (\n        <Snackbar\n            style={{ zIndex: 10001 }}\n            open={props.snackbarOpen}\n            message={<SnackbarMessageContent message={props.snackbarMessage} />}\n            autoHideDuration={props.snackbarDuration}\n            onClose={props.onCloseSnackbar}\n        />\n    );\n};\n\nconst mapStateToProps = state => {\n    const { message, duration, open } = sGetSnackbar(state);\n    return {\n        snackbarOpen: open,\n        snackbarMessage: message,\n        snackbarDuration: duration,\n    };\n};\n\nSnackbarMessage.propTypes = {\n    snackbarDuration: PropTypes.string,\n    snackbarMessage: PropTypes.object,\n    snackbarOpen: PropTypes.bool,\n    onCloseSnackbar: PropTypes.func,\n};\n\nexport default connect(\n    mapStateToProps,\n    {\n        onCloseSnackbar: acCloseSnackbar,\n    }\n)(SnackbarMessage);\n","import { getCustomDashboards, sGetDashboardById } from '../reducers/dashboards';\nimport { sGetIsEditing } from '../reducers/editDashboard';\nimport { sGetEditItemFiltersRoot } from '../reducers/editItemFilters';\nimport {\n    SET_SELECTED_ID,\n    SET_SELECTED_ISLOADING,\n    SET_SELECTED_SHOWDESCRIPTION,\n    sGetSelectedIsLoading,\n    sGetSelectedId,\n} from '../reducers/selected';\nimport { sGetUserUsername } from '../reducers/user';\n\nimport { acSetDashboardItems, acAppendDashboards } from './dashboards';\nimport { acClearEditItemFilters } from './editItemFilters';\nimport { acClearItemFilters, acSetItemFilters } from './itemFilters';\nimport { tGetMessages } from '../components/Item/MessagesItem/actions';\nimport { acReceivedSnackbarMessage, acCloseSnackbar } from './snackbar';\nimport { acAddVisualization } from './visualizations';\n\nimport { apiFetchDashboard } from '../api/dashboards';\nimport { storePreferredDashboardId } from '../api/localStorage';\n\nimport { withShape } from '../components/ItemGrid/gridUtil';\nimport { loadingDashboardMsg } from '../components/SnackbarMessage/SnackbarMessage';\nimport { extractFavorite } from '../components/Item/VisualizationItem/plugin';\n\nimport {\n    REPORT_TABLE,\n    CHART,\n    MAP,\n    EVENT_REPORT,\n    EVENT_CHART,\n    MESSAGES,\n} from '../modules/itemTypes';\nimport { orObject } from '../modules/util';\n\n// actions\n\nexport const acSetSelectedId = value => ({\n    type: SET_SELECTED_ID,\n    value,\n});\n\nexport const acSetSelectedIsLoading = value => ({\n    type: SET_SELECTED_ISLOADING,\n    value,\n});\n\nexport const acSetSelectedShowDescription = value => ({\n    type: SET_SELECTED_SHOWDESCRIPTION,\n    value,\n});\n\nexport const tLoadDashboard = id => async dispatch => {\n    try {\n        const dash = await apiFetchDashboard(id);\n\n        dispatch(acAppendDashboards(dash));\n\n        return Promise.resolve(dash);\n    } catch (err) {\n        console.log('Error: ', err);\n        return err;\n    }\n};\n\n// thunks\nexport const tSetSelectedDashboardById = id => async (dispatch, getState) => {\n    dispatch(acSetSelectedIsLoading(true));\n\n    const snackbarTimeout = setTimeout(() => {\n        const dashboardName = orObject(sGetDashboardById(getState(), id))\n            .displayName;\n        if (sGetSelectedIsLoading(getState()) && dashboardName) {\n            loadingDashboardMsg.name = dashboardName;\n\n            dispatch(\n                acReceivedSnackbarMessage({\n                    message: loadingDashboardMsg,\n                    open: true,\n                })\n            );\n        }\n    }, 500);\n\n    const onSuccess = selected => {\n        const customDashboard = getCustomDashboards(selected)[0];\n\n        dispatch(\n            acSetDashboardItems(withShape(customDashboard.dashboardItems))\n        );\n\n        storePreferredDashboardId(sGetUserUsername(getState()), id);\n\n        // add visualizations to store\n        customDashboard.dashboardItems.forEach(item => {\n            switch (item.type) {\n                case REPORT_TABLE:\n                case CHART:\n                case MAP:\n                case EVENT_REPORT:\n                case EVENT_CHART:\n                    dispatch(acAddVisualization(extractFavorite(item)));\n                    break;\n                case MESSAGES:\n                    dispatch(tGetMessages(id));\n                    break;\n                default:\n                    break;\n            }\n        });\n\n        const state = getState();\n        if (id === sGetSelectedId(state)) {\n            if (sGetIsEditing(state)) {\n                // disable filters when switching to edit mode\n                dispatch(acClearItemFilters());\n            } else {\n                // enable filters when switching to view mode\n                dispatch(acSetItemFilters(sGetEditItemFiltersRoot(state)));\n            }\n        } else {\n            // clear filters when switching dashboard\n            dispatch(acClearEditItemFilters());\n            dispatch(acClearItemFilters());\n        }\n\n        dispatch(acSetSelectedId(id));\n\n        dispatch(acSetSelectedIsLoading(false));\n\n        clearTimeout(snackbarTimeout);\n\n        dispatch(acCloseSnackbar());\n\n        return selected;\n    };\n\n    const onError = error => {\n        console.log('Error: ', error);\n        return error;\n    };\n\n    try {\n        const selected = await dispatch(tLoadDashboard(id));\n\n        return onSuccess(selected);\n    } catch (err) {\n        return onError(err);\n    }\n};\n","export const getPreferredDashboardId = username =>\n    localStorage.getItem(`dhis2.dashboard.current.${username}`) || undefined;\n\nexport const storePreferredDashboardId = (username, dashboardId) => {\n    localStorage.setItem(`dhis2.dashboard.current.${username}`, dashboardId);\n};\n","import { RECEIVED_MESSAGES } from '../../../reducers/messages';\nimport { getMessages } from '../../../api/messages';\n\nconst onError = (action, error) => {\n    console.log(`Error in action ${action}: ${error}`);\n    return error;\n};\n\nexport const receivedMessages = value => ({\n    type: RECEIVED_MESSAGES,\n    value,\n});\n\nexport const tGetMessages = () => async dispatch => {\n    try {\n        const messages = await getMessages();\n        const { messageConversations } = messages;\n\n        return dispatch(receivedMessages(messageConversations));\n    } catch (err) {\n        return onError('Get Messages', err);\n    }\n};\n","import { getInstance } from 'd2';\n\nconst onError = error => console.log('Error: ', error);\n\nconst saveDashboard = (dashboard, data) => {\n    const { name, description, dashboardItems } = data;\n\n    dashboard.name = name;\n    dashboard.description = description;\n    dashboard.dashboardItems = dashboardItems.map(item =>\n        Object.assign({}, item, { width: item.w, height: item.h })\n    );\n\n    return dashboard.save().then(msg => msg.response.uid);\n};\n\nexport const updateDashboard = data => {\n    return getInstance()\n        .then(d2 => {\n            return d2.models.dashboards\n                .get(data.id)\n                .then(dashboard => saveDashboard(dashboard, data));\n        })\n        .catch(onError);\n};\n\nexport const postDashboard = data => {\n    return getInstance().then(d2 => {\n        const dashboard = d2.models.dashboards.create();\n\n        return saveDashboard(dashboard, data);\n    });\n};\n","import { generateUid } from 'd2/uid';\n\nimport {\n    RECEIVED_EDIT_DASHBOARD,\n    START_NEW_DASHBOARD,\n    RECEIVED_NOT_EDITING,\n    RECEIVED_TITLE,\n    RECEIVED_DESCRIPTION,\n    RECEIVED_DASHBOARD_LAYOUT,\n    ADD_DASHBOARD_ITEM,\n    UPDATE_DASHBOARD_ITEM,\n    REMOVE_DASHBOARD_ITEM,\n} from '../reducers/editDashboard';\nimport { sGetEditDashboardRoot } from '../reducers/editDashboard';\nimport { updateDashboard, postDashboard } from '../api/editDashboard';\nimport { tSetSelectedDashboardById } from '../actions/selected';\nimport {\n    NEW_ITEM_SHAPE,\n    getGridItemProperties,\n} from '../components/ItemGrid/gridUtil';\nimport { itemTypeMap } from '../modules/itemTypes';\nimport { convertUiItemsToBackend } from '../modules/uiBackendItemConverter';\n\nconst onError = error => {\n    console.log('Error (Saving Dashboard): ', error);\n    return error;\n};\n\n// actions\n\nexport const acSetEditDashboard = (dashboard, items) => {\n    const val = {\n        ...dashboard,\n        dashboardItems: items,\n    };\n\n    return {\n        type: RECEIVED_EDIT_DASHBOARD,\n        value: val,\n    };\n};\n\nexport const acSetEditNewDashboard = () => ({\n    type: START_NEW_DASHBOARD,\n});\n\nexport const acClearEditDashboard = () => ({\n    type: RECEIVED_NOT_EDITING,\n});\n\nexport const acSetDashboardTitle = value => ({\n    type: RECEIVED_TITLE,\n    value,\n});\n\nexport const acSetDashboardDescription = value => ({\n    type: RECEIVED_DESCRIPTION,\n    value,\n});\n\nexport const acUpdateDashboardLayout = value => ({\n    type: RECEIVED_DASHBOARD_LAYOUT,\n    value,\n});\n\nexport const acAddDashboardItem = item => {\n    const type = item.type;\n    delete item.type;\n    const itemPropName = itemTypeMap[type].propName;\n\n    const id = generateUid();\n    const gridItemProperties = getGridItemProperties(id);\n\n    return {\n        type: ADD_DASHBOARD_ITEM,\n        value: {\n            id,\n            type,\n            [itemPropName]: item.content,\n            ...NEW_ITEM_SHAPE,\n            ...gridItemProperties,\n        },\n    };\n};\n\nexport const acUpdateDashboardItem = item => ({\n    type: UPDATE_DASHBOARD_ITEM,\n    value: item,\n});\n\nexport const acRemoveDashboardItem = value => ({\n    type: REMOVE_DASHBOARD_ITEM,\n    value,\n});\n\n// thunks\n\nexport const tSaveDashboard = () => async (dispatch, getState) => {\n    const dashboard = sGetEditDashboardRoot(getState());\n\n    const dashboardToSave = {\n        ...dashboard,\n        dashboardItems: convertUiItemsToBackend(dashboard.dashboardItems),\n    };\n\n    try {\n        const dashboardId = dashboardToSave.id\n            ? await updateDashboard(dashboardToSave)\n            : await postDashboard(dashboardToSave);\n\n        dispatch(acClearEditDashboard());\n        await dispatch(tSetSelectedDashboardById(dashboardId));\n\n        return Promise.resolve(dashboardId);\n    } catch (error) {\n        onError(error);\n    }\n};\n","import {\n    SET_DASHBOARDS,\n    ADD_DASHBOARDS,\n    SET_DASHBOARD_STARRED,\n    SET_DASHBOARD_DISPLAY_NAME,\n    SET_DASHBOARD_ITEMS,\n} from '../reducers/dashboards';\nimport {\n    getCustomDashboards,\n    sGetDashboardById,\n    sGetDashboardsSortedByStarred,\n} from '../reducers/dashboards';\nimport { sGetUserUsername } from '../reducers/user';\nimport { tSetSelectedDashboardById, acSetSelectedId } from './selected';\nimport { acClearEditDashboard } from './editDashboard';\nimport {\n    apiFetchDashboards,\n    apiStarDashboard,\n    apiDeleteDashboard,\n} from '../api/dashboards';\nimport { getPreferredDashboardId } from '../api/localStorage';\nimport { arrayToIdMap } from '../modules/util';\n\n// actions\n\nexport const acSetDashboards = dashboards => ({\n    type: SET_DASHBOARDS,\n    value: arrayToIdMap(getCustomDashboards(dashboards)),\n});\n\nexport const acAppendDashboards = dashboards => ({\n    type: ADD_DASHBOARDS,\n    value: arrayToIdMap(getCustomDashboards(dashboards)),\n});\n\nexport const acSetDashboardStarred = (dashboardId, isStarred) => ({\n    type: SET_DASHBOARD_STARRED,\n    dashboardId: dashboardId,\n    value: isStarred,\n});\n\nexport const acSetDashboardDisplayName = (dashboardId, value) => ({\n    type: SET_DASHBOARD_DISPLAY_NAME,\n    dashboardId,\n    value,\n});\n\nexport const acSetDashboardItems = value => ({\n    type: SET_DASHBOARD_ITEMS,\n    value,\n});\n\n// thunks\n\nexport const tFetchDashboards = () => async dispatch => {\n    const collection = await apiFetchDashboards();\n    dispatch(acSetDashboards(collection.toArray()));\n};\n\nexport const tSelectDashboard = id => async (dispatch, getState) => {\n    const onError = error => {\n        console.log('Error (apiFetchDashboards): ', error);\n        return error;\n    };\n\n    try {\n        const state = getState();\n\n        let dashboardToSelect = null;\n        if (id) {\n            dashboardToSelect = sGetDashboardById(state, id) || null;\n        } else {\n            const preferredId = getPreferredDashboardId(\n                sGetUserUsername(state)\n            );\n            const dash = sGetDashboardById(state, preferredId);\n            dashboardToSelect =\n                preferredId && dash\n                    ? dash\n                    : sGetDashboardsSortedByStarred(state)[0];\n        }\n\n        if (dashboardToSelect) {\n            dispatch(tSetSelectedDashboardById(dashboardToSelect.id));\n        } else {\n            dispatch(acSetSelectedId());\n        }\n    } catch (err) {\n        return onError(err);\n    }\n};\n\nexport const tStarDashboard = (id, isStarred) => async dispatch => {\n    const onSuccess = id => {\n        dispatch(acSetDashboardStarred(id, isStarred));\n        return id;\n    };\n\n    const onError = error => {\n        console.log('Error (apiStarDashboard): ', error);\n        return error;\n    };\n    try {\n        await apiStarDashboard(id, isStarred);\n        return onSuccess(id);\n    } catch (err) {\n        return onError(err);\n    }\n};\n\nexport const tDeleteDashboard = id => async dispatch => {\n    try {\n        await apiDeleteDashboard(id);\n        dispatch(acClearEditDashboard());\n        dispatch(acSetSelectedId());\n        dispatch(acSetDashboardItems([]));\n\n        await dispatch(tFetchDashboards());\n\n        return Promise.resolve();\n    } catch (err) {\n        console.log('Error (deleteDashboard): ', err);\n        return err;\n    }\n};\n","/** @module reducers/controlBar */\nimport { combineReducers } from 'redux';\nimport { validateReducer } from '../modules/util';\n\nexport const SET_CONTROLBAR_USER_ROWS = 'SET_CONTROLBAR_USER_ROWS';\n\nexport const DEFAULT_STATE_CONTROLBAR_ROWS = 1;\n\nconst userRows = (state = DEFAULT_STATE_CONTROLBAR_ROWS, action) => {\n    switch (action.type) {\n        case SET_CONTROLBAR_USER_ROWS:\n            return validateReducer(action.value, DEFAULT_STATE_CONTROLBAR_ROWS);\n        default:\n            return state;\n    }\n};\n\nexport default combineReducers({\n    userRows,\n});\n\n/**\n * Selectors that point to specific props in the state object\n * @function\n * @param {Object} state\n * @returns {Object}\n */\nexport const sGetControlBarRoot = state => state.controlBar;\n\n// Selector dependency level 2\n\nexport const sGetControlBarUserRows = state =>\n    sGetControlBarRoot(state).userRows;\n","import { getInstance } from 'd2';\nimport { DEFAULT_STATE_CONTROLBAR_ROWS } from '../reducers/controlBar';\n\nconst NAMESPACE = 'dashboard';\nconst KEY = 'controlBarRows';\n\nconst hasNamespace = async d2 => await d2.currentUser.dataStore.has(NAMESPACE);\n\nconst getNamespace = async (d2, hasNamespace) =>\n    hasNamespace\n        ? await d2.currentUser.dataStore.get(NAMESPACE)\n        : await d2.currentUser.dataStore.create(NAMESPACE);\n\nexport const apiGetControlBarRows = async () => {\n    const d2 = await getInstance();\n    const namespace = await getNamespace(d2, await hasNamespace(d2));\n    const hasKey = namespace.keys && namespace.keys.find(key => key === KEY);\n\n    if (hasKey) {\n        return await namespace.get(KEY);\n    } else {\n        await apiPostControlBarRows(DEFAULT_STATE_CONTROLBAR_ROWS, namespace);\n        console.log(\n            '(These errors to /userDataStore/dashboard can be ignored)'\n        );\n        return DEFAULT_STATE_CONTROLBAR_ROWS;\n    }\n};\n\nexport const apiPostControlBarRows = async (rows, namespace) => {\n    const d2 = await getInstance();\n    const ns = namespace || (await getNamespace(d2, hasNamespace));\n\n    ns.set(KEY, rows);\n};\n","import { SET_CONTROLBAR_USER_ROWS } from '../reducers/controlBar';\nimport { apiGetControlBarRows } from '../api/controlBar';\n\n// actions\n\nexport const acSetControlBarUserRows = rows => ({\n    type: SET_CONTROLBAR_USER_ROWS,\n    value: rows,\n});\n\n// thunks\n\nexport const tSetControlBarRows = () => async dispatch => {\n    const onSuccess = rows => {\n        dispatch(acSetControlBarUserRows(rows));\n    };\n\n    const onError = error => {\n        console.log('Error (apiGetControlBarRows): ', error);\n        return error;\n    };\n\n    try {\n        const controlBarRows = await apiGetControlBarRows();\n        return onSuccess(controlBarRows);\n    } catch (err) {\n        return onError(err);\n    }\n};\n","import {\n    getDimensionById,\n    DIMENSION_ID_PERIOD,\n    DIMENSION_ID_ORGUNIT,\n} from '@dhis2/analytics';\n\nexport const SET_DIMENSIONS = 'SET_DIMENSIONS';\nexport const DEFAULT_DIMENSIONS = [\n    getDimensionById(DIMENSION_ID_PERIOD),\n    getDimensionById(DIMENSION_ID_ORGUNIT),\n];\n\nexport default (state = DEFAULT_DIMENSIONS, action) => {\n    switch (action.type) {\n        case SET_DIMENSIONS: {\n            return [...DEFAULT_DIMENSIONS, ...action.value];\n        }\n        default:\n            return state;\n    }\n};\n\nexport const sGetDimensions = state => state.dimensions;\n","export const SET_SETTINGS = 'SET_SETTINGS';\nexport const ADD_SETTINGS = 'ADD_SETTINGS';\n\nexport const DEFAULT_SETTINGS = {\n    keyDateFormat: 'yyyy-MM-dd',\n    keyAnalysisRelativePeriod: 'LAST_12_MONTHS',\n    keyAnalysisDigitGroupSeparator: 'SPACE',\n    displayNameProperty: 'displayName',\n    uiLocale: 'en',\n    rootOrganisationUnit: {},\n};\n\nexport default (state = DEFAULT_SETTINGS, action) => {\n    switch (action.type) {\n        case SET_SETTINGS: {\n            return Object.assign({}, action.value);\n        }\n        case ADD_SETTINGS: {\n            return {\n                ...state,\n                ...action.value,\n            };\n        }\n        default:\n            return state;\n    }\n};\n\n// Selectors\n\nexport const sGetSettings = state => state.settings;\n\nexport const sGetSettingsDisplayNameProperty = state =>\n    sGetSettings(state).displayNameProperty;\n\nexport const sGetRootOrgUnit = state =>\n    sGetSettings(state).rootOrganisationUnit;\n\nexport const sGetRelativePeriod = state =>\n    sGetSettings(state).keyAnalysisRelativePeriod;\n\nexport const sGetUiLocale = state => sGetSettings(state).uiLocale;\n","import { SET_DIMENSIONS } from '../reducers/dimensions';\nimport { apiFetchDimensions } from '@dhis2/analytics';\nimport { sGetSettingsDisplayNameProperty } from '../reducers/settings';\n\nexport const acSetDimensions = dimensions => ({\n    type: SET_DIMENSIONS,\n    value: dimensions,\n});\n\nexport const tSetDimensions = d2 => async (dispatch, getState) => {\n    const onSuccess = dimensions => {\n        dispatch(acSetDimensions(dimensions));\n    };\n\n    const onError = error => {\n        console.log('Error (apiFetchDimensions): ', error);\n        return error;\n    };\n\n    try {\n        const displayNameProp = sGetSettingsDisplayNameProperty(getState());\n        const dimensions = await apiFetchDimensions(d2, displayNameProp);\n\n        // filter out CATEGORY that are not of type ATTRIBUTE\n        const filteredDimensions = dimensions.filter(\n            dim =>\n                dim.dimensionType !== 'CATEGORY' ||\n                (dim.dimensionType === 'CATEGORY' &&\n                    dim.dataDimensionType === 'ATTRIBUTE')\n        );\n        return onSuccess(filteredDimensions);\n    } catch (err) {\n        return onError(err);\n    }\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport i18n from '@dhis2/d2-i18n';\n\nimport classes from './styles/ShowMoreButton.module.css';\n\nexport const SHOWMORE_BAR_HEIGHT = 16;\n\nexport const ShowMoreButton = ({ onClick, isMaxHeight, disabled }) => {\n    return (\n        <div style={{ textAlign: 'center' }}>\n            {disabled ? (\n                <div className={classes.disabled}>{i18n.t('Show more')}</div>\n            ) : (\n                <div className={classes.showMore} onClick={onClick}>\n                    {isMaxHeight ? i18n.t('Show less') : i18n.t('Show more')}\n                </div>\n            )}\n        </div>\n    );\n};\n\nShowMoreButton.propTypes = {\n    disabled: PropTypes.bool,\n    isMaxHeight: PropTypes.bool,\n    onClick: PropTypes.func,\n};\n\nexport default ShowMoreButton;\n","import { SHOWMORE_BAR_HEIGHT } from './ShowMoreButton';\n\nexport const CONTROL_BAR_ROW_HEIGHT = 40;\nexport const FIRST_ROW_PADDING_HEIGHT = 10;\nexport const MIN_ROW_COUNT = 1;\n\nexport const HEADERBAR_HEIGHT = 48;\n\nconst CONTROL_BAR_OUTER_HEIGHT_DIFF =\n    FIRST_ROW_PADDING_HEIGHT + SHOWMORE_BAR_HEIGHT - 2; // 2 pixel \"adjustment\"\n\nexport const getRowsHeight = rows => {\n    return rows * CONTROL_BAR_ROW_HEIGHT;\n};\n\nexport const getNumRowsFromHeight = height => {\n    return Math.floor(\n        (height - CONTROL_BAR_OUTER_HEIGHT_DIFF) / CONTROL_BAR_ROW_HEIGHT\n    );\n};\n\nexport const getTopOffset = rows => {\n    return HEADERBAR_HEIGHT + getControlBarHeight(rows, false);\n};\n\nexport const getControlBarHeight = rows => {\n    return getRowsHeight(rows) + CONTROL_BAR_OUTER_HEIGHT_DIFF;\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { colors } from '@dhis2/ui-core';\nimport { HEADERBAR_HEIGHT } from './controlBarDimensions';\n\nimport classes from './styles/ControlBar.module.css';\n\nconst DRAG_HANDLE_HEIGHT = 7;\n\nclass ControlBar extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            dragging: false,\n        };\n    }\n\n    onStartDrag = () => {\n        this.setState({ dragging: true });\n        window.addEventListener('mousemove', this.onDrag);\n        window.addEventListener('mouseup', this.onEndDrag);\n    };\n\n    onDrag = event => {\n        event.preventDefault();\n        event.stopPropagation();\n\n        const newHeight = event.clientY;\n\n        if (\n            this.props.onChangeHeight &&\n            newHeight !== this.props.height &&\n            newHeight > 0\n        ) {\n            requestAnimationFrame(() => {\n                this.props.onChangeHeight(newHeight);\n            });\n        }\n    };\n\n    onEndDrag = () => {\n        this.setState({ dragging: false });\n        window.removeEventListener('mousemove', this.onDrag);\n        window.removeEventListener('mouseup', this.onEndDrag);\n\n        if (this.props.onEndDrag) {\n            this.props.onEndDrag();\n        }\n    };\n\n    renderDragHandle() {\n        return typeof this.props.onChangeHeight === 'function' ? (\n            <div\n                className={classes.draghandle}\n                style={{ height: DRAG_HANDLE_HEIGHT }}\n                onMouseDown={this.onStartDrag}\n            />\n        ) : null;\n    }\n\n    render() {\n        const height = Math.max(this.props.height, 0) + DRAG_HANDLE_HEIGHT;\n\n        const rootStyle = Object.assign(\n            {\n                height,\n                top: HEADERBAR_HEIGHT,\n                backgroundColor: this.props.editMode\n                    ? colors.yellow050\n                    : colors.white,\n                paddingBottom: DRAG_HANDLE_HEIGHT,\n            },\n            // Disable animations while dragging\n            this.state.dragging ? { transition: 'none' } : {}\n        );\n\n        return (\n            <div style={rootStyle} className={classes.root}>\n                <div className={classes.content}>{this.props.children}</div>\n                {this.renderDragHandle()}\n            </div>\n        );\n    }\n}\n\nControlBar.propTypes = {\n    /**\n     * The height of the control bar in number of lines. Must be a positive integer.\n     */\n    children: PropTypes.node.isRequired,\n\n    /**\n     * If true, the background color of the control bar changes to indicate that edit mode is active.\n     */\n    editMode: PropTypes.bool.isRequired,\n\n    /**\n     * Callback function that is called when the control bar is resized.\n     * The callback receives one argument: The new height in pixels.\n     *\n     * If no callback is specified the control bar will not have a drag handle.\n     */\n    height: PropTypes.number.isRequired,\n\n    /**\n     * Callback function that is called when the control bar is dropped after being dragged.\n     * The callback receives one argument: The new height in pixels.\n     *\n     * Ignored if no \"onChangeHeight\" function is provided.\n     */\n    onChangeHeight: PropTypes.func,\n\n    /**\n     * The contents of the control bar.\n     */\n    onEndDrag: PropTypes.func,\n};\n\nControlBar.defaultProps = {\n    onChangeHeight: null,\n    onEndDrag: null,\n};\n\nexport default ControlBar;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst StarIcon = ({ className }) => (\n    <svg\n        className={className}\n        xmlns=\"http://www.w3.org/2000/svg\"\n        viewBox=\"0 0 24 24\"\n    >\n        <path d=\"M0 0h24v24H0z\" fill=\"none\" />\n        <path d=\"M12 17.27L18.18 21l-1.64-7.03L22 9.24l-7.19-.61L12 2 9.19 8.63 2 9.24l5.46 4.73L5.82 21z\" />\n        <path d=\"M0 0h24v24H0z\" fill=\"none\" />\n    </svg>\n);\n\nStarIcon.propTypes = {\n    className: PropTypes.string,\n};\n\nexport default StarIcon;\n","import { getInstance } from 'd2';\n\nexport const apiPostDataStatistics = async (eventType, id) => {\n    const d2 = await getInstance();\n    const url = `dataStatistics?eventType=${eventType}&favorite=${id}`;\n\n    d2.Api.getApi().post(url);\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Chip } from '@dhis2/ui-core';\nimport { Link } from 'react-router-dom';\nimport debounce from 'lodash/debounce';\n\nimport StarIcon from '../../icons/Star';\nimport { apiPostDataStatistics } from '../../api/dataStatistics';\n\nimport classes from './styles/DashboardItemChip.module.css';\n\nexport const DashboardItemChip = ({\n    starred,\n    selected,\n    label,\n    dashboardId,\n}) => {\n    const chipProps = {\n        selected,\n    };\n\n    if (starred) {\n        const selectedState = selected ? classes.selected : classes.unselected;\n        chipProps.icon = (\n            <StarIcon className={`${classes.icon} ${selectedState}`} />\n        );\n    }\n\n    return (\n        <Link\n            className={classes.link}\n            to={`/${dashboardId}`}\n            onClick={debounce(\n                () => apiPostDataStatistics('DASHBOARD_VIEW', dashboardId),\n                500\n            )}\n        >\n            <Chip {...chipProps}>{label}</Chip>\n        </Link>\n    );\n};\n\nDashboardItemChip.propTypes = {\n    dashboardId: PropTypes.string.isRequired,\n    label: PropTypes.string.isRequired,\n    selected: PropTypes.bool.isRequired,\n    starred: PropTypes.bool.isRequired,\n    classes: PropTypes.object,\n};\n\nexport default DashboardItemChip;\n","import React from 'react';\nimport { colors } from '@dhis2/ui-core';\n\nconst AddCircleIcon = () => (\n    <svg\n        xmlns=\"http://www.w3.org/2000/svg\"\n        width=\"32\"\n        height=\"32\"\n        fill={colors.teal600}\n        viewBox=\"0 0 24 24\"\n    >\n        <path d=\"M12 2C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2zm4 11h-3v3c0 .55-.45 1-1 1s-1-.45-1-1v-3H8c-.55 0-1-.45-1-1s.45-1 1-1h3V8c0-.55.45-1 1-1s1 .45 1 1v3h3c.55 0 1 .45 1 1s-.45 1-1 1z\" />\n    </svg>\n);\n\nexport default AddCircleIcon;\n","import React from 'react';\nimport { colors } from '@dhis2/ui-core';\nimport PropTypes from 'prop-types';\n\nconst ClearIcon = ({ className }) => (\n    <svg\n        className={className}\n        fill={colors.grey800}\n        xmlns=\"http://www.w3.org/2000/svg\"\n        viewBox=\"0 0 24 24\"\n    >\n        <path d=\"M19 6.41L17.59 5 12 10.59 6.41 5 5 6.41 10.59 12 5 17.59 6.41 19 12 13.41 17.59 19 19 17.59 13.41 12z\" />\n        <path d=\"M0 0h24v24H0z\" fill=\"none\" />\n    </svg>\n);\n\nClearIcon.propTypes = {\n    className: PropTypes.string,\n};\n\nexport default ClearIcon;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport ClearIcon from '../../icons/Clear';\n\nimport classes from './styles/ClearButton.module.css';\n\nexport const ClearButton = ({ onClear }) => (\n    <button className={classes.button} onClick={onClear}>\n        <span>\n            <ClearIcon className={classes.icon} color=\"action\" />\n        </span>\n    </button>\n);\n\nClearButton.propTypes = {\n    onClear: PropTypes.func.isRequired,\n};\n\nexport default ClearButton;\n","import { combineReducers } from 'redux';\nimport { validateReducer } from '../modules/util';\n\nexport const SET_DASHBOARDS_FILTER_NAME = 'SET_DASHBOARDS_FILTER_NAME';\nexport const SET_DASHBOARDS_FILTER_OWNER = 'SET_DASHBOARDS_FILTER_OWNER';\nexport const SET_DASHBOARDS_FILTER_ORDER = 'SET_DASHBOARDS_FILTER_ORDER';\n\nexport const ownerData = [\n    { id: 'ALL', value: 'All users' },\n    { id: 'ME', value: 'Created by me' },\n    { id: 'OTHERS', value: 'Created by others' },\n];\n\nexport const orderData = [\n    { id: 'NAME:ASC', value: 'Name (asc)' },\n    { id: 'NAME:ASC', value: 'Name (desc)' },\n    { id: 'ITEMS:ASC', value: 'Number of items (asc)' },\n    { id: 'ITEMS:ASC', value: 'Number of items (desc)' },\n    { id: 'CREATED:ASC', value: 'Created date (asc)' },\n    { id: 'CREATED:ASC', value: 'Created date (desc)' },\n];\n\nexport const DEFAULT_STATE_DASHBOARDS_FILTER_NAME = '';\nexport const DEFAULT_STATE_DASHBOARDS_FILTER_OWNER = ownerData[0].id;\nexport const DEFAULT_STATE_DASHBOARDS_FILTER_ORDER = orderData[0].id;\n\nconst name = (state = DEFAULT_STATE_DASHBOARDS_FILTER_NAME, action) => {\n    switch (action.type) {\n        case SET_DASHBOARDS_FILTER_NAME:\n            return validateReducer(\n                action.value,\n                DEFAULT_STATE_DASHBOARDS_FILTER_NAME\n            );\n        default:\n            return state;\n    }\n};\n\nconst owner = (state = DEFAULT_STATE_DASHBOARDS_FILTER_OWNER, action) => {\n    switch (action.type) {\n        case SET_DASHBOARDS_FILTER_OWNER:\n            return validateReducer(\n                action.value,\n                DEFAULT_STATE_DASHBOARDS_FILTER_NAME\n            );\n        default:\n            return state;\n    }\n};\n\nconst order = (state = DEFAULT_STATE_DASHBOARDS_FILTER_ORDER, action) => {\n    switch (action.type) {\n        case SET_DASHBOARDS_FILTER_ORDER:\n            return validateReducer(\n                action.value,\n                DEFAULT_STATE_DASHBOARDS_FILTER_ORDER\n            );\n        default:\n            return state;\n    }\n};\n\nexport default combineReducers({\n    name,\n    owner,\n    order,\n});\n\n// selectors\n\nexport const sGetDashboardsFilterRoot = state => state.dashboardsFilter;\n\n// selector dependency level 2\n\nexport const sGetFilterName = state => sGetDashboardsFilterRoot(state).name;\nexport const sGetFilterOwner = state => sGetDashboardsFilterRoot(state).owner;\nexport const sGetFilterOrder = state => sGetDashboardsFilterRoot(state).order;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport i18n from '@dhis2/d2-i18n';\nimport { withStyles } from '@material-ui/core/styles';\nimport InputField from '@material-ui/core/Input';\nimport InputAdornment from '@material-ui/core/InputAdornment';\nimport SearchIcon from '@material-ui/icons/Search';\nimport { colors } from '@dhis2/ui-core';\n\nimport ClearButton from './ClearButton';\nimport { DEFAULT_STATE_DASHBOARDS_FILTER_NAME } from '../../reducers/dashboardsFilter';\n\nconst styles = {\n    filterField: {\n        fontSize: '14px',\n        width: '200px',\n        height: '30px',\n        top: '-4px',\n    },\n    searchIcon: {\n        color: colors.grey700,\n        width: '20px',\n        height: '20px',\n    },\n};\n\nexport const KEYCODE_ENTER = 13;\nexport const KEYCODE_ESCAPE = 27;\n\nexport class Filter extends Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            value: DEFAULT_STATE_DASHBOARDS_FILTER_NAME,\n        };\n    }\n\n    componentWillReceiveProps(nextProps) {\n        this.setState({\n            value: nextProps.name,\n        });\n    }\n\n    setFilterValue = event => {\n        event.preventDefault();\n\n        this.props.onChangeName(event.target.value);\n    };\n\n    handleKeyUp = event => {\n        switch (event.keyCode) {\n            case KEYCODE_ENTER:\n                this.props.onKeypressEnter();\n                break;\n            case KEYCODE_ESCAPE:\n                this.props.onChangeName();\n                break;\n            default:\n                break;\n        }\n    };\n\n    render() {\n        const { classes, name, onChangeName } = this.props;\n\n        const startAdornment = (\n            <InputAdornment position=\"start\">\n                <SearchIcon className={classes.searchIcon} />\n            </InputAdornment>\n        );\n\n        const endAdornment =\n            name !== '' && name !== null ? (\n                <InputAdornment position=\"end\">\n                    <ClearButton onClear={() => onChangeName()} />\n                </InputAdornment>\n            ) : null;\n\n        return (\n            <InputField\n                className={classes.filterField}\n                placeholder={i18n.t('Search for a dashboard')}\n                startAdornment={startAdornment}\n                endAdornment={endAdornment}\n                value={this.state.value}\n                onChange={this.setFilterValue}\n                onKeyUp={this.handleKeyUp}\n            />\n        );\n    }\n}\n\nFilter.propTypes = {\n    classes: PropTypes.object,\n    name: PropTypes.string,\n    onChangeName: PropTypes.func,\n    onKeypressEnter: PropTypes.func,\n};\n\nFilter.defaultProps = {\n    name: '',\n    onChangeName: Function.prototype,\n};\n\nexport default withStyles(styles)(Filter);\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { Link, withRouter } from 'react-router-dom';\nimport ControlBar from './ControlBar';\nimport arraySort from 'd2-utilizr/lib/arraySort';\nimport PropTypes from 'prop-types';\n\nimport Chip from './DashboardItemChip';\nimport AddCircleIcon from '../../icons/AddCircle';\nimport Filter from './Filter';\nimport ShowMoreButton from './ShowMoreButton';\nimport {\n    FIRST_ROW_PADDING_HEIGHT,\n    MIN_ROW_COUNT,\n    getRowsHeight,\n    getControlBarHeight,\n    getNumRowsFromHeight,\n} from './controlBarDimensions';\nimport { sGetControlBarUserRows } from '../../reducers/controlBar';\nimport { sGetAllDashboards } from '../../reducers/dashboards';\nimport { sGetFilterName } from '../../reducers/dashboardsFilter';\nimport { sGetSelectedId } from '../../reducers/selected';\nimport { acSetControlBarUserRows } from '../../actions/controlBar';\nimport { acSetFilterName } from '../../actions/dashboardsFilter';\nimport { orObject, orArray } from '../../modules/util';\nimport { apiPostControlBarRows } from '../../api/controlBar';\n\nimport classes from './styles/DashboardsBar.module.css';\n\nexport const MAX_ROW_COUNT = 10;\n\nexport class DashboardsBar extends Component {\n    state = {\n        rows: MIN_ROW_COUNT,\n    };\n\n    setInitialDashboardState = rows => {\n        this.setState({ rows, isMaxHeight: rows === MAX_ROW_COUNT });\n    };\n\n    componentDidMount() {\n        this.setInitialDashboardState(this.props.userRows);\n    }\n\n    componentWillReceiveProps(nextProps) {\n        this.setInitialDashboardState(nextProps.userRows);\n    }\n\n    onChangeHeight = newHeight => {\n        const adjustedHeight = newHeight - 52; // don't rush the transition to a bigger row count\n        const newRows = Math.max(\n            MIN_ROW_COUNT,\n            getNumRowsFromHeight(adjustedHeight)\n        );\n\n        if (newRows !== this.state.rows) {\n            const newRowCount = Math.min(newRows, MAX_ROW_COUNT);\n\n            this.props.onChangeHeight(newRowCount);\n        }\n    };\n\n    onEndDrag = () => {\n        return apiPostControlBarRows(this.state.rows);\n    };\n\n    onToggleMaxHeight = () => {\n        const rows =\n            this.state.rows === MAX_ROW_COUNT\n                ? this.props.userRows\n                : MAX_ROW_COUNT;\n\n        this.setState({ rows, isMaxHeight: !this.state.isMaxHeight });\n    };\n\n    onSelectDashboard = () => {\n        this.props.history.push(`/${this.props.dashboards[0].id}`);\n    };\n\n    render() {\n        const { dashboards, name, selectedId, onChangeFilterName } = this.props;\n\n        const rowCount = this.state.isMaxHeight\n            ? MAX_ROW_COUNT\n            : this.state.rows;\n        const controlBarHeight = getControlBarHeight(rowCount);\n        const contentWrapperStyle = {\n            padding: `${FIRST_ROW_PADDING_HEIGHT}px 6px 0 6px`,\n            overflowY: this.state.isMaxHeight ? 'auto' : 'hidden',\n            height: getRowsHeight(rowCount) + FIRST_ROW_PADDING_HEIGHT,\n        };\n\n        return (\n            <ControlBar\n                height={controlBarHeight}\n                onChangeHeight={this.onChangeHeight}\n                onEndDrag={this.onEndDrag}\n                editMode={false}\n            >\n                <div style={contentWrapperStyle}>\n                    <div className={classes.leftControls}>\n                        <Link\n                            style={{\n                                display: 'inline-block',\n                                textDecoration: 'none',\n                                marginRight: 10,\n                                position: 'relative',\n                                top: '2px',\n                            }}\n                            to={'/new'}\n                        >\n                            <AddCircleIcon />\n                        </Link>\n                        <Filter\n                            name={name}\n                            onChangeName={onChangeFilterName}\n                            onKeypressEnter={this.onSelectDashboard}\n                        />\n                    </div>\n                    {orArray(dashboards).map(dashboard => (\n                        <Chip\n                            key={dashboard.id}\n                            label={dashboard.displayName}\n                            starred={dashboard.starred}\n                            dashboardId={dashboard.id}\n                            selected={dashboard.id === selectedId}\n                        />\n                    ))}\n                </div>\n                <ShowMoreButton\n                    onClick={this.onToggleMaxHeight}\n                    isMaxHeight={this.state.isMaxHeight}\n                    disabled={this.props.userRows === MAX_ROW_COUNT}\n                />\n            </ControlBar>\n        );\n    }\n}\n\nconst mapStateToProps = state => ({\n    dashboards: sGetAllDashboards(state),\n    name: sGetFilterName(state),\n    userRows: sGetControlBarUserRows(state),\n    selectedId: sGetSelectedId(state),\n});\n\nconst mapDispatchToProps = {\n    onChangeHeight: acSetControlBarUserRows,\n    onChangeFilterName: acSetFilterName,\n};\nconst mergeProps = (stateProps, dispatchProps, ownProps) => {\n    const dashboards = Object.values(orObject(stateProps.dashboards));\n    const displayDashboards = arraySort(\n        dashboards.filter(d =>\n            d.displayName.toLowerCase().includes(stateProps.name.toLowerCase())\n        ),\n        'ASC',\n        'displayName'\n    );\n\n    return {\n        ...stateProps,\n        ...ownProps,\n        ...dispatchProps,\n        dashboards: [\n            ...displayDashboards.filter(d => d.starred),\n            ...displayDashboards.filter(d => !d.starred),\n        ],\n    };\n};\n\nDashboardsBar.propTypes = {\n    dashboards: PropTypes.array,\n    history: PropTypes.object,\n    name: PropTypes.string,\n    selectedId: PropTypes.string,\n    userRows: PropTypes.number,\n    onChangeFilterName: PropTypes.func,\n    onChangeHeight: PropTypes.func,\n};\n\nexport default withRouter(\n    connect(\n        mapStateToProps,\n        mapDispatchToProps,\n        mergeProps\n    )(DashboardsBar)\n);\n","import {\n    SET_DASHBOARDS_FILTER_NAME,\n    SET_DASHBOARDS_FILTER_OWNER,\n    SET_DASHBOARDS_FILTER_ORDER,\n} from '../reducers/dashboardsFilter';\n\n// actions\n\nexport const acSetFilterName = value => ({\n    type: SET_DASHBOARDS_FILTER_NAME,\n    value,\n});\n\nexport const acSetFilterOwner = value => ({\n    type: SET_DASHBOARDS_FILTER_OWNER,\n    value,\n});\n\nexport const acSetFilterOrder = value => ({\n    type: SET_DASHBOARDS_FILTER_ORDER,\n    value,\n});\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\n\nimport {\n    getTopOffset,\n    MIN_ROW_COUNT,\n} from '../ControlBar/controlBarDimensions';\nimport { sGetControlBarUserRows } from '../../reducers/controlBar';\n\nconst DashboardVerticalOffset = props => {\n    const rows = props.editMode ? MIN_ROW_COUNT : props.userRows;\n    const marginTop = getTopOffset(rows);\n\n    return <div className=\"page-container-top-margin\" style={{ marginTop }} />;\n};\n\nconst mapStateToProps = state => ({\n    userRows: sGetControlBarUserRows(state),\n});\n\nDashboardVerticalOffset.propTypes = {\n    editMode: PropTypes.bool,\n    userRows: PropTypes.number,\n};\n\nexport default connect(mapStateToProps)(DashboardVerticalOffset);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { MenuItem, colors } from '@dhis2/ui-core';\n\nconst HeaderMenuItem = ({ title }) => (\n    <MenuItem\n        dense\n        key={title}\n        disabled\n        label={\n            <span style={{ color: colors.grey800, fontWeight: '600' }}>\n                {title}\n            </span>\n        }\n    />\n);\n\nHeaderMenuItem.propTypes = {\n    title: PropTypes.string.isRequired,\n};\n\nexport default HeaderMenuItem;\n","import React from 'react';\nimport { colors } from '@dhis2/ui-core';\nimport PropTypes from 'prop-types';\n\nconst LaunchIcon = ({ className }) => (\n    <svg\n        className={className}\n        xmlns=\"http://www.w3.org/2000/svg\"\n        width=\"12\"\n        height=\"12\"\n        fill={colors.grey600}\n        viewBox=\"0 0 24 24\"\n    >\n        <path d=\"M0 0h24v24H0z\" fill=\"none\" />\n        <path d=\"M19 19H5V5h7V3H5c-1.11 0-2 .9-2 2v14c0 1.1.89 2 2 2h14c1.1 0 2-.9 2-2v-7h-2v7zM14 3v2h3.59l-9.83 9.83 1.41 1.41L19 6.41V10h2V3h-7z\" />\n    </svg>\n);\n\nLaunchIcon.propTypes = {\n    className: PropTypes.string,\n};\n\nexport default LaunchIcon;\n","import React from 'react';\nimport { MenuItem, colors } from '@dhis2/ui-core';\nimport i18n from '@dhis2/d2-i18n';\nimport PropTypes from 'prop-types';\nimport { visTypeIcons } from '@dhis2/analytics';\n\nimport { getItemIcon, VISUALIZATION } from '../../modules/itemTypes';\nimport LaunchIcon from '../../icons/Launch';\n\nimport classes from './styles/ContentMenuItem.module.css';\n\nconst LaunchLink = ({ url }) => (\n    <a\n        onClick={e => e.stopPropagation()}\n        className={classes.launchLink}\n        target=\"_blank\"\n        rel=\"noopener noreferrer\"\n        href={url}\n    >\n        <LaunchIcon />\n    </a>\n);\n\nLaunchLink.propTypes = {\n    url: PropTypes.string,\n};\n\nconst InsertButton = () => (\n    <button className={classes.buttonInsert}>{i18n.t('Insert')}</button>\n);\n\nconst ContentMenuItem = ({ type, name, onInsert, url, visType }) => {\n    const ItemIcon = getItemIcon(type);\n\n    const renderedItemIcon =\n        type === VISUALIZATION ? (\n            visTypeIcons[visType]\n        ) : (\n            <ItemIcon style={{ fill: colors.grey600 }} />\n        );\n\n    return (\n        <MenuItem\n            dense\n            onClick={onInsert}\n            label={\n                <div className={classes.menuItem}>\n                    <div className={classes.label}>\n                        <span style={{ marginRight: '6px' }}>\n                            {renderedItemIcon}\n                        </span>\n                        <span>{name}</span>\n                        {url ? <LaunchLink url={url} /> : null}\n                    </div>\n                    <InsertButton />\n                </div>\n            }\n        />\n    );\n};\n\nContentMenuItem.propTypes = {\n    name: PropTypes.string,\n    type: PropTypes.string,\n    url: PropTypes.string,\n    visType: PropTypes.string,\n    onInsert: PropTypes.func,\n};\n\nexport default ContentMenuItem;\n","import i18n from '@dhis2/d2-i18n';\nimport {\n    VISUALIZATION,\n    MAP,\n    EVENT_CHART,\n    EVENT_REPORT,\n    USERS,\n    REPORTS,\n    RESOURCES,\n    APP,\n    MESSAGES,\n    TEXT,\n    SPACER,\n} from '../../modules/itemTypes';\n\nexport const singleItems = [\n    {\n        id: 'additional',\n        header: i18n.t('Additional items'),\n        items: [\n            {\n                type: TEXT,\n                name: i18n.t('Text box'),\n                content: '',\n            },\n            {\n                type: MESSAGES,\n                name: i18n.t('Messages'),\n                content: 'true',\n            },\n            {\n                type: SPACER,\n                name: i18n.t('Spacer'),\n                content: '',\n            },\n        ],\n    },\n];\n\n// categorizedItems are grouped in the item selector menu\nexport const categorizedItems = [\n    VISUALIZATION,\n    MAP,\n    EVENT_REPORT,\n    EVENT_CHART,\n    USERS,\n    REPORTS,\n    RESOURCES,\n    APP,\n];\n\n// listItemTypes are included in a single dashboard item\nexport const listItemTypes = [REPORTS, RESOURCES, USERS];\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport i18n from '@dhis2/d2-i18n';\nimport { MenuItem, Divider } from '@dhis2/ui-core';\n\nimport HeaderMenuItem from './HeaderMenuItem';\nimport ContentMenuItem from './ContentMenuItem';\n\nimport { tAddListItemContent } from './actions';\nimport { acAddDashboardItem } from '../../actions/editDashboard';\nimport { getItemUrl, APP, VISUALIZATION } from '../../modules/itemTypes';\nimport { categorizedItems, listItemTypes } from './selectableItems';\n\nimport classes from './styles/CategorizedMenuGroup.module.css';\n\nclass CategorizedMenuGroup extends Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            seeMore: false,\n        };\n    }\n\n    addItem = item => () => {\n        const { type, acAddDashboardItem, tAddListItemContent } = this.props;\n\n        if (type === APP) {\n            acAddDashboardItem({ type, content: item.key });\n        } else {\n            const newItem = {\n                id: item.id,\n                name: item.displayName || item.name,\n            };\n\n            if (listItemTypes.includes(type)) {\n                tAddListItemContent(type, newItem);\n            } else {\n                acAddDashboardItem({ type, content: newItem });\n            }\n        }\n    };\n\n    toggleSeeMore = () => {\n        this.setState({ seeMore: !this.state.seeMore });\n\n        this.props.onChangeItemsLimit(this.props.type);\n    };\n\n    render() {\n        const { title, type, items, hasMore } = this.props;\n        return (\n            <>\n                <HeaderMenuItem title={title} />\n                {items.map(item => {\n                    const itemUrl = getItemUrl(type, item, this.context.d2);\n                    return (\n                        <ContentMenuItem\n                            key={item.id || item.key}\n                            type={type}\n                            visType={type === VISUALIZATION ? item.type : type}\n                            name={item.displayName || item.name}\n                            onInsert={this.addItem(item)}\n                            url={itemUrl}\n                        />\n                    );\n                })}\n                {hasMore ? (\n                    <MenuItem\n                        dense\n                        key={`showmore${title}`}\n                        onClick={this.toggleSeeMore}\n                        label={\n                            <button className={classes.showMoreButton}>\n                                {this.state.seeMore\n                                    ? i18n.t('Show fewer')\n                                    : i18n.t('Show more')}\n                            </button>\n                        }\n                    />\n                ) : null}\n                <Divider margin=\"8px 0px\" />\n            </>\n        );\n    }\n}\n\nCategorizedMenuGroup.propTypes = {\n    items: PropTypes.array.isRequired,\n    title: PropTypes.string.isRequired,\n    type: PropTypes.oneOf(categorizedItems).isRequired,\n    onChangeItemsLimit: PropTypes.func.isRequired,\n    acAddDashboardItem: PropTypes.func,\n    hasMore: PropTypes.bool,\n    tAddListItemContent: PropTypes.func,\n};\n\nCategorizedMenuGroup.contextTypes = {\n    d2: PropTypes.object.isRequired,\n};\n\nexport default connect(\n    null,\n    {\n        acAddDashboardItem,\n        tAddListItemContent,\n    }\n)(CategorizedMenuGroup);\n","import { sGetEditDashboardRoot } from '../../reducers/editDashboard';\nimport { itemTypeMap } from '../../modules/itemTypes';\nimport {\n    acAddDashboardItem,\n    acUpdateDashboardItem,\n} from '../../actions/editDashboard';\n\nexport const tAddListItemContent = (type, content) => (dispatch, getState) => {\n    const state = getState();\n    const listItemType = itemTypeMap[type].propName;\n    const dashboardItems = sGetEditDashboardRoot(state).dashboardItems;\n    const dashboardItemIndex = dashboardItems.findIndex(\n        item => item.type === type\n    );\n    let dashboardItem;\n\n    // Reports/Resources/Users dashboard item type already present in dashboard\n    if (dashboardItemIndex > -1) {\n        dashboardItem = dashboardItems[dashboardItemIndex];\n        dashboardItem[listItemType].push(content);\n\n        dispatch(acUpdateDashboardItem(dashboardItem));\n    } else {\n        dashboardItem = {\n            type: type,\n            content: [content],\n        };\n\n        dispatch(acAddDashboardItem(dashboardItem));\n    }\n};\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\n\nimport HeaderMenuItem from './HeaderMenuItem';\nimport ContentMenuItem from './ContentMenuItem';\nimport { acAddDashboardItem } from '../../actions/editDashboard';\n\nexport const SinglesMenuGroup = ({ acAddDashboardItem, category }) => {\n    const addToDashboard = ({ type, content }) => () => {\n        acAddDashboardItem({ type, content });\n    };\n\n    return (\n        <>\n            <HeaderMenuItem title={category.header} />\n            {category.items.map(item => (\n                <ContentMenuItem\n                    key={item.type}\n                    type={item.type}\n                    name={item.name}\n                    onInsert={addToDashboard(item)}\n                />\n            ))}\n        </>\n    );\n};\n\nSinglesMenuGroup.propTypes = {\n    acAddDashboardItem: PropTypes.func,\n    category: PropTypes.object,\n};\n\nexport default connect(\n    null,\n    { acAddDashboardItem }\n)(SinglesMenuGroup);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport i18n from '@dhis2/d2-i18n';\nimport Popover from '@material-ui/core/Popover';\nimport { InputField, Menu } from '@dhis2/ui-core';\n\nimport CategorizedMenuGroup from './CategorizedMenuGroup';\nimport SinglesMenuGroup from './SinglesMenuGroup';\nimport { singleItems, categorizedItems } from './selectableItems';\nimport { itemTypeMap, getDefaultItemCount } from '../../modules/itemTypes';\n\nimport './styles/ItemSelector.css';\n\nconst ItemSearchField = props => (\n    <InputField\n        name=\"Dashboard item search\"\n        label={i18n.t('Search for items to add to this dashboard')}\n        type=\"text\"\n        onChange={props.onChange}\n        onFocus={props.onFocus}\n        value={props.value}\n    />\n);\n\nclass ItemSelector extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            anchorEl: null,\n            open: false,\n            maxOptions: new Set(),\n            items: undefined,\n            filter: '',\n        };\n    }\n\n    closeList = () => {\n        this.setState({ open: false, filter: '' });\n    };\n\n    openList = (_, event) => {\n        this.fetchItems();\n\n        this.setState({\n            anchorEl: event.currentTarget,\n            open: true,\n        });\n    };\n\n    setFilter = (_, event) => {\n        this.setState({ filter: event.target.value }, this.fetchItems);\n    };\n\n    getCategorizedMenuGroups = () =>\n        categorizedItems\n            .filter(type => {\n                const itemType = itemTypeMap[type];\n                return (\n                    this.state.items && this.state.items[itemType.endPointName]\n                );\n            })\n            .map(type => {\n                const itemType = itemTypeMap[type];\n                const itemCount = getDefaultItemCount(type);\n                const allItems = this.state.items[itemType.endPointName];\n                const hasMore = allItems.length > itemCount;\n                const items = this.state.maxOptions.has(itemType.id)\n                    ? allItems\n                    : allItems.slice(0, itemCount);\n\n                return (\n                    <CategorizedMenuGroup\n                        key={type}\n                        type={type}\n                        title={itemType.pluralTitle}\n                        items={items}\n                        onChangeItemsLimit={this.fetchItems}\n                        hasMore={hasMore}\n                    />\n                );\n            });\n\n    getSinglesMenuGroups = () =>\n        singleItems.map(category => (\n            <SinglesMenuGroup key={category.id} category={category} />\n        ));\n\n    getMenuGroups = () =>\n        this.getCategorizedMenuGroups().concat(this.getSinglesMenuGroups());\n\n    fetchItems = async type => {\n        if (type) {\n            const maxOptions = this.state.maxOptions;\n\n            if (maxOptions.has(type)) {\n                maxOptions.delete(type);\n            } else {\n                maxOptions.add(type);\n            }\n\n            this.setState({ maxOptions });\n        } else {\n            this.setState({\n                maxOptions: new Set(),\n            });\n        }\n\n        let queryString = '?count=11';\n        if ([...this.state.maxOptions.values()].length) {\n            queryString +=\n                '&max=' + [...this.state.maxOptions.values()].join('&max=');\n        }\n\n        const filter = this.state.filter ? `/${this.state.filter}` : '';\n\n        this.context.d2.Api.getApi()\n            .get(`dashboards/q${filter}${queryString}`)\n            .then(response => this.setState({ items: response }))\n            .catch(console.error);\n    };\n\n    render() {\n        return (\n            <>\n                <ItemSearchField\n                    value={this.state.filter}\n                    onChange={this.setFilter}\n                    onFocus={this.openList}\n                />\n                <Popover\n                    className=\"dashboard-item-selector\"\n                    open={this.state.open}\n                    onClose={this.closeList}\n                    anchorEl={this.state.anchorEl}\n                    anchorOrigin={{ horizontal: 'left', vertical: 'bottom' }}\n                    transformOrigin={{ horizontal: 'left', vertical: 'top' }}\n                    style={{ height: '70vh' }}\n                    PaperProps={{ style: { width: '700px' } }}\n                    disableAutoFocus={true}\n                    disableEnforceFocus={true}\n                    disableRestoreFocus={true}\n                >\n                    <Menu maxWidth={'700px'}>{this.getMenuGroups()}</Menu>\n                </Popover>\n            </>\n        );\n    }\n}\n\nItemSearchField.propTypes = {\n    value: PropTypes.string,\n    onChange: PropTypes.func,\n    onFocus: PropTypes.func,\n};\n\nItemSelector.contextTypes = {\n    d2: PropTypes.object.isRequired,\n};\n\nexport default ItemSelector;\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport i18n from '@dhis2/d2-i18n';\nimport { InputField, TextAreaField } from '@dhis2/ui-core';\n\nimport ItemSelector from '../ItemSelector/ItemSelector';\nimport {\n    acSetDashboardTitle,\n    acSetDashboardDescription,\n} from '../../actions/editDashboard';\nimport { orObject } from '../../modules/util';\nimport { sGetEditDashboardRoot } from '../../reducers/editDashboard';\n\nimport classes from './styles/EditTitleBar.module.css';\n\nexport const EditTitleBar = ({\n    name,\n    description,\n    onChangeTitle,\n    onChangeDescription,\n}) => {\n    const updateTitle = (_, e) => {\n        onChangeTitle(e.target.value);\n    };\n\n    const updateDescription = (_, e) => {\n        onChangeDescription(e.target.value);\n    };\n\n    return (\n        <section className={classes.section}>\n            <div className={classes.titleDescription}>\n                <InputField\n                    className={classes.title}\n                    name=\"Dashboard title input\"\n                    label={i18n.t('Dashboard title')}\n                    type=\"text\"\n                    onChange={updateTitle}\n                    value={name}\n                />\n                <TextAreaField\n                    className={classes.description}\n                    name=\"Dashboard description input\"\n                    label={i18n.t('Dashboard description')}\n                    onChange={updateDescription}\n                    value={description}\n                />\n            </div>\n            <div className={classes.itemSelector}>\n                <ItemSelector />\n            </div>\n        </section>\n    );\n};\n\nEditTitleBar.propTypes = {\n    onChangeDescription: PropTypes.func.isRequired,\n    onChangeTitle: PropTypes.func.isRequired,\n    description: PropTypes.string,\n    name: PropTypes.string,\n};\n\nEditTitleBar.defaultProps = {\n    name: '',\n    description: '',\n};\n\nconst mapStateToProps = state => {\n    const selectedDashboard = orObject(sGetEditDashboardRoot(state));\n\n    return {\n        name: selectedDashboard.name,\n        description: selectedDashboard.description,\n    };\n};\n\nconst mapDispatchToProps = {\n    onChangeTitle: acSetDashboardTitle,\n    onChangeDescription: acSetDashboardDescription,\n};\n\nexport default connect(\n    mapStateToProps,\n    mapDispatchToProps\n)(EditTitleBar);\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nimport { Button } from '@dhis2/ui-core';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\n\nimport i18n from '@dhis2/d2-i18n';\n\nimport {\n    PeriodDimension,\n    DynamicDimension,\n    OrgUnitDimension,\n    DIMENSION_ID_PERIOD,\n    DIMENSION_ID_ORGUNIT,\n} from '@dhis2/analytics';\n\nconst peId = DIMENSION_ID_PERIOD;\nconst ouId = DIMENSION_ID_ORGUNIT;\n\nclass FilterDialog extends Component {\n    onConfirm = id => () => this.props.onConfirm(id);\n\n    dialogContent() {\n        const { displayNameProperty, dimension, selectedItems } = this.props;\n        const dialogId = dimension.id;\n\n        const commonProps = {\n            d2: this.context.d2,\n            onSelect: this.props.onSelect,\n            onDeselect: this.props.onDeselect,\n            onReorder: this.props.onReorder,\n        };\n\n        switch (dialogId) {\n            case peId: {\n                return (\n                    <PeriodDimension\n                        selectedPeriods={selectedItems}\n                        {...commonProps}\n                    />\n                );\n            }\n            case ouId:\n                return (\n                    <OrgUnitDimension\n                        displayNameProperty={displayNameProperty}\n                        ouItems={selectedItems}\n                        {...commonProps}\n                    />\n                );\n            default:\n                return (\n                    <DynamicDimension\n                        selectedItems={selectedItems}\n                        dialogId={dialogId}\n                        dialogTitle={dimension.name}\n                        {...commonProps}\n                    />\n                );\n        }\n    }\n\n    render() {\n        const { dimension, onClose } = this.props;\n        const dialogId = dimension.id;\n\n        return (\n            <Dialog\n                open={!!dialogId}\n                maxWidth=\"lg\"\n                disableEnforceFocus\n                onClose={onClose}\n            >\n                {dialogId && this.dialogContent()}\n                <DialogActions>\n                    <Button kind=\"secondary\" onClick={onClose}>\n                        {i18n.t('Cancel')}\n                    </Button>\n                    <Button kind=\"primary\" onClick={this.onConfirm(dialogId)}>\n                        {i18n.t('Confirm')}\n                    </Button>\n                </DialogActions>\n            </Dialog>\n        );\n    }\n}\n\nFilterDialog.propTypes = {\n    dimension: PropTypes.object,\n    displayNameProperty: PropTypes.string,\n    selectedItems: PropTypes.array,\n    onClose: PropTypes.func,\n    onConfirm: PropTypes.func,\n    onDeselect: PropTypes.func,\n    onReorder: PropTypes.func,\n    onSelect: PropTypes.func,\n};\n\nFilterDialog.contextTypes = {\n    d2: PropTypes.object,\n};\n\nexport default FilterDialog;\n","export const SET_ACTIVE_MODAL_DIMENSION = 'SET_ACTIVE_MODAL_DIMENSION';\nexport const CLEAR_ACTIVE_MODAL_DIMENSION = 'CLEAR_ACTIVE_MODAL_DIMENSION';\n\nexport const DEFAULT_STATE_ACTIVE_MODAL_DIMENSION = {};\n\nexport default (state = DEFAULT_STATE_ACTIVE_MODAL_DIMENSION, action) => {\n    switch (action.type) {\n        case SET_ACTIVE_MODAL_DIMENSION: {\n            return action.value;\n        }\n        case CLEAR_ACTIVE_MODAL_DIMENSION: {\n            return DEFAULT_STATE_ACTIVE_MODAL_DIMENSION;\n        }\n        default:\n            return state;\n    }\n};\n\nexport const sGetActiveModalDimension = state => state.activeModalDimension;\n","import {\n    SET_ACTIVE_MODAL_DIMENSION,\n    CLEAR_ACTIVE_MODAL_DIMENSION,\n} from '../reducers/activeModalDimension';\n\nexport const acSetActiveModalDimension = value => ({\n    type: SET_ACTIVE_MODAL_DIMENSION,\n    value,\n});\n\nexport const acClearActiveModalDimension = () => ({\n    type: CLEAR_ACTIVE_MODAL_DIMENSION,\n});\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport Popover from '@material-ui/core/Popover';\nimport ArrowDropDownIcon from '@material-ui/icons/ArrowDropDown';\n\nimport i18n from '@dhis2/d2-i18n';\nimport { DimensionsPanel } from '@dhis2/analytics';\n\nimport { Button } from '@dhis2/ui-core';\nimport FilterDialog from './FilterDialog';\n\nimport { sGetSettingsDisplayNameProperty } from '../../reducers/settings';\nimport { sGetActiveModalDimension } from '../../reducers/activeModalDimension';\nimport { sGetDimensions } from '../../reducers/dimensions';\nimport { sGetFiltersKeys } from '../../reducers/itemFilters';\nimport { sGetEditItemFiltersRoot } from '../../reducers/editItemFilters';\nimport { acAddItemFilter, acRemoveItemFilter } from '../../actions/itemFilters';\nimport {\n    acRemoveEditItemFilter,\n    acSetEditItemFilters,\n} from '../../actions/editItemFilters';\nimport {\n    acClearActiveModalDimension,\n    acSetActiveModalDimension,\n} from '../../actions/activeModalDimension';\n\nclass FilterSelector extends Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            anchorEl: null,\n        };\n    }\n\n    openPanel = (_, event) => {\n        this.setState({ anchorEl: event.currentTarget });\n    };\n\n    closePanel = () => {\n        this.setState({ anchorEl: null });\n    };\n\n    closeDialog = () => {\n        this.setState({ anchorEl: null });\n\n        this.props.clearActiveModalDimension();\n    };\n\n    selectDimension = id => {\n        this.props.setActiveModalDimension(\n            this.props.dimensions.find(dimension => dimension.id === id)\n        );\n    };\n\n    onSelectItems = ({ dimensionId, items }) => {\n        this.props.setEditItemFilters({\n            ...this.props.selectedItems,\n            [dimensionId]: items,\n        });\n    };\n\n    onDeselectItems = ({ dimensionId, itemIdsToRemove }) => {\n        const oldList = this.props.selectedItems[dimensionId] || [];\n        const newList = oldList.filter(\n            item => !itemIdsToRemove.includes(item.id)\n        );\n\n        if (newList.length) {\n            this.props.setEditItemFilters({\n                ...this.props.selectedItems,\n                [dimensionId]: newList,\n            });\n        } else {\n            this.props.removeEditItemFilter(dimensionId);\n        }\n    };\n\n    onReorderItems = ({ dimensionId, itemIds }) => {\n        const oldList = this.props.selectedItems[dimensionId] || [];\n        const reorderedList = itemIds.map(id =>\n            oldList.find(item => item.id === id)\n        );\n\n        this.props.setEditItemFilters({\n            ...this.props.selectedItems,\n            [dimensionId]: reorderedList,\n        });\n    };\n\n    saveFilter = id => {\n        const filterItems = this.props.selectedItems[id];\n\n        if (filterItems && filterItems.length) {\n            this.props.addItemFilter({\n                id,\n                value: [...filterItems],\n            });\n        } else {\n            this.props.removeItemFilter(id);\n        }\n\n        this.closeDialog();\n    };\n\n    render() {\n        const {\n            displayNameProperty,\n            dimension,\n            dimensions,\n            selectedDimensions,\n            selectedItems,\n        } = this.props;\n\n        return (\n            <>\n                <Button onClick={this.openPanel}>\n                    {i18n.t('Add filter')}\n                    <ArrowDropDownIcon />\n                </Button>\n                <Popover\n                    open={Boolean(this.state.anchorEl)}\n                    anchorEl={this.state.anchorEl}\n                    anchorOrigin={{ vertical: 'bottom', horizontal: 'left' }}\n                    onClose={this.closePanel}\n                    style={{ height: '100%' }}\n                >\n                    <DimensionsPanel\n                        style={{ width: '320px' }}\n                        dimensions={dimensions}\n                        onDimensionClick={this.selectDimension}\n                        selectedIds={selectedDimensions}\n                    />\n                </Popover>\n                {dimension ? (\n                    <FilterDialog\n                        displayNameProperty={displayNameProperty}\n                        dimension={dimension}\n                        selectedItems={selectedItems[dimension.id] || []}\n                        onSelect={this.onSelectItems}\n                        onDeselect={this.onDeselectItems}\n                        onReorder={this.onReorderItems}\n                        onClose={this.closeDialog}\n                        onConfirm={this.saveFilter}\n                    />\n                ) : null}\n            </>\n        );\n    }\n}\n\nconst mapStateToProps = state => ({\n    displayNameProperty: sGetSettingsDisplayNameProperty(state),\n    dimension: sGetActiveModalDimension(state),\n    dimensions: sGetDimensions(state),\n    selectedDimensions: sGetFiltersKeys(state),\n    selectedItems: sGetEditItemFiltersRoot(state),\n});\n\nFilterSelector.propTypes = {\n    addItemFilter: PropTypes.func,\n    clearActiveModalDimension: PropTypes.func,\n    dimension: PropTypes.object,\n    dimensions: PropTypes.array,\n    displayNameProperty: PropTypes.string,\n    removeEditItemFilter: PropTypes.func,\n    removeItemFilter: PropTypes.func,\n    selectedDimensions: PropTypes.array,\n    selectedItems: PropTypes.object,\n    setActiveModalDimension: PropTypes.func,\n    setEditItemFilters: PropTypes.func,\n};\n\nexport default connect(\n    mapStateToProps,\n    {\n        clearActiveModalDimension: acClearActiveModalDimension,\n        setActiveModalDimension: acSetActiveModalDimension,\n        addItemFilter: acAddItemFilter,\n        removeItemFilter: acRemoveItemFilter,\n        removeEditItemFilter: acRemoveEditItemFilter,\n        setEditItemFilters: acSetEditItemFilters,\n    }\n)(FilterSelector);\n","import React, { Component } from 'react';\nimport InfoOutlineIcon from '@material-ui/icons/InfoOutlined';\nimport { colors } from '@dhis2/ui-core';\nimport PropTypes from 'prop-types';\n\nclass Info extends Component {\n    show = false;\n\n    toggle() {\n        this.show = !this.show;\n        return this.show;\n    }\n\n    render() {\n        return (\n            <div onClick={() => this.props.onClick(this.toggle())}>\n                <InfoOutlineIcon style={{ fill: colors.grey600 }} />\n            </div>\n        );\n    }\n}\n\nInfo.propTypes = {\n    onClick: PropTypes.func,\n};\n\nexport default Info;\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { Link } from 'react-router-dom';\nimport i18n from '@dhis2/d2-i18n';\nimport SharingDialog from '@dhis2/d2-ui-sharing-dialog';\nimport Star from '@material-ui/icons/Star';\nimport StarBorder from '@material-ui/icons/StarBorder';\n\nimport { orObject } from '../../modules/util';\nimport { tStarDashboard } from '../../actions/dashboards';\nimport { acSetSelectedShowDescription } from '../../actions/selected';\nimport FilterSelector from '../ItemFilter/FilterSelector';\nimport { Button, colors } from '@dhis2/ui-core';\nimport Info from './Info';\nimport {\n    sGetSelectedId,\n    sGetSelectedShowDescription,\n} from '../../reducers/selected';\nimport {\n    sGetDashboardById,\n    sGetDashboardItems,\n} from '../../reducers/dashboards';\n\nimport classes from './styles/ViewTitleBar.module.css';\n\nconst NO_DESCRIPTION = i18n.t('No description');\n\nclass ViewTitleBar extends Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            sharingDialogIsOpen: false,\n        };\n    }\n\n    toggleSharingDialog = () =>\n        this.setState({ sharingDialogIsOpen: !this.state.sharingDialogIsOpen });\n\n    render() {\n        const {\n            id,\n            name,\n            description,\n            access,\n            style,\n            showDescription,\n            starred,\n            onStarClick,\n            onInfoClick,\n        } = this.props;\n\n        const titleStyle = Object.assign({}, style.title, {\n            cursor: 'default',\n            userSelect: 'text',\n            top: '7px',\n        });\n\n        const StarIcon = starred ? Star : StarBorder;\n\n        return (\n            <>\n                <div className={classes.titleBar}>\n                    <span style={titleStyle}>{name}</span>\n                    <div className={classes.actions}>\n                        <div\n                            className={classes.titleBarIcon}\n                            onClick={onStarClick}\n                        >\n                            <StarIcon style={{ fill: colors.grey600 }} />\n                        </div>\n                        <div className={classes.titleBarIcon}>\n                            <Info onClick={onInfoClick} />\n                        </div>\n                        <div style={{ marginLeft: '10px' }}>\n                            {access.update ? (\n                                <Link\n                                    className={classes.editLink}\n                                    to={`/${id}/edit`}\n                                >\n                                    <Button>{i18n.t('Edit')}</Button>\n                                </Link>\n                            ) : null}\n                            {access.manage ? (\n                                <span style={{ marginRight: '4px' }}>\n                                    <Button onClick={this.toggleSharingDialog}>\n                                        {i18n.t('Share')}\n                                    </Button>\n                                </span>\n                            ) : null}\n                            <span style={{ marginRight: '4px' }}>\n                                <FilterSelector />\n                            </span>\n                        </div>\n                    </div>\n                </div>\n                {showDescription ? (\n                    <div\n                        className=\"dashboard-description\"\n                        style={Object.assign(\n                            { paddingTop: '5px', paddingBottom: '5px' },\n                            style.description,\n                            !description ? { color: '#888' } : {}\n                        )}\n                    >\n                        {description || NO_DESCRIPTION}\n                    </div>\n                ) : null}\n                {id ? (\n                    <SharingDialog\n                        d2={this.context.d2}\n                        id={id}\n                        type=\"dashboard\"\n                        open={this.state.sharingDialogIsOpen}\n                        onRequestClose={this.toggleSharingDialog}\n                    />\n                ) : null}\n            </>\n        );\n    }\n}\n\nViewTitleBar.propTypes = {\n    access: PropTypes.object,\n    description: PropTypes.string,\n    id: PropTypes.string,\n    name: PropTypes.string,\n    showDescription: PropTypes.bool,\n    starred: PropTypes.bool,\n    style: PropTypes.object,\n    onInfoClick: PropTypes.func,\n    onStarClick: PropTypes.func,\n};\n\nViewTitleBar.defaultProps = {\n    name: '',\n    description: '',\n    starred: false,\n    showDescription: false,\n    onInfoClick: null,\n};\n\nViewTitleBar.contextTypes = {\n    d2: PropTypes.object,\n};\n\nconst mapStateToProps = state => {\n    const id = sGetSelectedId(state);\n    const dashboard = orObject(sGetDashboardById(state, id));\n\n    return {\n        id,\n        name: dashboard.displayName,\n        description: dashboard.displayDescription,\n        dashboardItems: sGetDashboardItems(state),\n        showDescription: sGetSelectedShowDescription(state),\n        starred: dashboard.starred,\n        access: orObject(dashboard.access),\n    };\n};\n\nconst mergeProps = (stateProps, dispatchProps, ownProps) => {\n    const { id, starred, showDescription } = stateProps;\n    const { dispatch } = dispatchProps;\n\n    return {\n        ...stateProps,\n        ...ownProps,\n        onStarClick: () => dispatch(tStarDashboard(id, !starred)),\n        onInfoClick: () =>\n            dispatch(acSetSelectedShowDescription(!showDescription)),\n    };\n};\n\nexport default connect(\n    mapStateToProps,\n    null,\n    mergeProps\n)(ViewTitleBar);\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport { colors } from '@dhis2/ui-core';\nimport EditTitleBar from './EditTitleBar';\nimport ViewTitleBar from './ViewTitleBar';\n\nimport './TitleBar.css';\n\nconst style = {\n    title: {\n        position: 'relative',\n        fontSize: 21,\n        fontWeight: 500,\n        color: colors.black,\n        minWidth: 50,\n    },\n    description: {\n        fontSize: 14,\n        color: colors.grey800,\n    },\n};\n\nconst TitleBar = ({ edit }) => {\n    return (\n        <div\n            className=\"titlebar-wrapper\"\n            style={{\n                padding: '20px 15px 5px 10px',\n            }}\n        >\n            {edit ? (\n                <EditTitleBar style={style} />\n            ) : (\n                <ViewTitleBar style={style} />\n            )}\n        </div>\n    );\n};\n\nTitleBar.propTypes = {\n    edit: PropTypes.bool,\n};\n\nexport default TitleBar;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nimport i18n from '@dhis2/d2-i18n';\n\nimport * as pluginManager from './plugin';\nimport { getBaseUrl, orObject } from '../../../modules/util';\nimport { getGridItemDomId } from '../../ItemGrid/gridUtil';\n\nconst pluginCredentials = d2 => {\n    return {\n        baseUrl: getBaseUrl(d2),\n        auth: d2.Api.getApi().defaultHeaders.Authorization,\n    };\n};\n\nclass DefaultPlugin extends Component {\n    pluginCredentials = null;\n\n    constructor(props, context) {\n        super(props);\n\n        this.d2 = context.d2;\n    }\n\n    shouldPluginReload = prevProps => {\n        // TODO - fix this hack, to handle bug with multiple\n        // rerendering while switching between dashboards.\n        //\n        // To determine if the rendering is happening because of a\n        // dashboard switch, check if the item reference has changed.\n        const reloadAllowed = this.props.item === prevProps.item;\n\n        const filtersChanged = prevProps.itemFilters !== this.props.itemFilters;\n        const vis = orObject(this.props.visualization);\n        const prevVis = orObject(prevProps.visualization);\n        const visChanged =\n            vis.id !== prevVis.id || vis.activeType !== prevVis.activeType;\n\n        return reloadAllowed && (visChanged || filtersChanged);\n    };\n\n    reloadPlugin = prevProps => {\n        if (\n            pluginManager.pluginIsAvailable(\n                this.props.item,\n                this.props.visualization\n            ) &&\n            this.shouldPluginReload(prevProps)\n        ) {\n            const prevVis = orObject(prevProps.visualization);\n            const currentVis = this.props.visualization;\n\n            const useActiveType =\n                currentVis.activeType !== prevVis.activeType ||\n                currentVis.activeType !== this.props.item.type;\n\n            if (\n                useActiveType ||\n                this.props.itemFilters !== prevProps.itemFilters\n            ) {\n                pluginManager.unmount(\n                    this.props.item,\n                    prevVis.activeType || this.props.item.type\n                );\n\n                pluginManager.load(this.props.item, this.props.visualization, {\n                    credentials: this.pluginCredentials,\n                    activeType: useActiveType ? currentVis.activeType : null,\n                });\n            }\n        }\n    };\n\n    componentDidMount() {\n        this.pluginCredentials = pluginCredentials(this.d2);\n\n        if (\n            pluginManager.pluginIsAvailable(\n                this.props.item,\n                this.props.visualization\n            )\n        ) {\n            pluginManager.load(this.props.item, this.props.visualization, {\n                credentials: this.pluginCredentials,\n                activeType: !this.props.editMode ? this.getActiveType() : null,\n                options: this.props.options,\n            });\n        }\n    }\n\n    componentDidUpdate(prevProps) {\n        this.reloadPlugin(prevProps);\n    }\n\n    getActiveType = () =>\n        this.props.visualization.activeType || this.props.item.type;\n\n    render() {\n        const { classes, item, visualization, style } = this.props;\n        const pluginIsAvailable = pluginManager.pluginIsAvailable(\n            item,\n            visualization\n        );\n\n        return pluginIsAvailable ? (\n            <div id={getGridItemDomId(item.id)} style={style} />\n        ) : (\n            <div className={classes.textDiv}>\n                {i18n.t('Unable to load the plugin for this item')}\n            </div>\n        );\n    }\n}\n\nDefaultPlugin.contextTypes = {\n    d2: PropTypes.object,\n};\n\nDefaultPlugin.propTypes = {\n    classes: PropTypes.object,\n    editMode: PropTypes.bool,\n    item: PropTypes.object,\n    itemFilters: PropTypes.object,\n    options: PropTypes.object,\n    style: PropTypes.object,\n    visualization: PropTypes.object,\n};\n\nDefaultPlugin.defaultProps = {\n    style: {},\n    item: {},\n    itemFilters: {},\n    options: {},\n    visualization: {},\n};\n\nexport default DefaultPlugin;\n","import React from 'react';\nimport { colors } from '@dhis2/ui-core';\n\nexport const ThreeDots = () => (\n    <svg\n        height=\"18\"\n        viewBox=\"0 0 18 18\"\n        width=\"18\"\n        xmlns=\"http://www.w3.org/2000/svg\"\n    >\n        <path\n            d=\"m4 7.5c-.83 0-1.5.67-1.5 1.5s.67 1.5 1.5 1.5 1.5-.67 1.5-1.5-.67-1.5-1.5-1.5zm10 0c-.83 0-1.5.67-1.5 1.5s.67 1.5 1.5 1.5 1.5-.67 1.5-1.5-.67-1.5-1.5-1.5zm-5 0c-.83 0-1.5.67-1.5 1.5s.67 1.5 1.5 1.5 1.5-.67 1.5-1.5-.67-1.5-1.5-1.5z\"\n            fill=\"#6e7a8a\"\n        />\n    </svg>\n);\n\nexport const SpeechBubble = () => (\n    <svg\n        height=\"20\"\n        viewBox=\"0 0 20 20\"\n        width=\"20\"\n        xmlns=\"http://www.w3.org/2000/svg\"\n        style={{ margin: '3px 2px 0 2px' }} // Temporary fix for the misaligned icon, should be removed once the icon is replaced\n    >\n        <path\n            d=\"m20 2h-16c-1.1 0-1.99.9-1.99 2l-.01 18 4-4h14c1.1 0 2-.9 2-2v-12c0-1.1-.9-2-2-2zm-2 12h-12v-2h12zm0-3h-12v-2h12zm0-3h-12v-2h12z\"\n            fill=\"#6e7a8a\"\n            fillRule=\"evenodd\"\n            transform=\"translate(-2 -2)\"\n        />\n    </svg>\n);\n\nexport const Warning = () => (\n    <svg\n        xmlns=\"http://www.w3.org/2000/svg\"\n        height=\"24\"\n        viewBox=\"0 0 24 24\"\n        width=\"24\"\n        fill={colors.grey600}\n    >\n        <path d=\"M0 0h24v24H0z\" fill=\"none\" />\n        <path d=\"M1 21h22L12 2 1 21zm12-3h-2v-2h2v2zm0-4h-2v-4h2v4z\" />\n    </svg>\n);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport i18n from '@dhis2/d2-i18n';\nimport { Warning } from './assets/icons';\n\nimport classes from './styles/FatalErrorBoundary.module.css';\n\nclass FatalErrorBoundary extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            errorFound: false,\n        };\n    }\n    componentDidCatch(error, info) {\n        this.setState({\n            errorFound: true,\n        });\n        console.log('error: ', error);\n        console.log('info: ', info);\n    }\n    render() {\n        if (this.state.errorFound) {\n            return (\n                <p className={classes.container}>\n                    <span className={classes.icon}>\n                        <Warning />\n                    </span>\n                    <span className={classes.message}>\n                        {i18n.t(\n                            'There was a problem loading this dashboard item'\n                        )}\n                    </span>\n                </p>\n            );\n        }\n        return this.props.children;\n    }\n}\n\nFatalErrorBoundary.propTypes = {\n    children: PropTypes.node,\n};\n\nexport default FatalErrorBoundary;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport i18n from '@dhis2/d2-i18n';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport { colors } from '@dhis2/ui-core';\n\nimport classes from './styles/DeleteItemButton.module.css';\n\nconst DeleteItemButton = ({ onClick }) => (\n    <button\n        type=\"button\"\n        className={classes.deleteItemButton}\n        onClick={onClick}\n        title={i18n.t(`Delete item`)}\n    >\n        <DeleteIcon style={{ fill: colors.red500 }} />\n    </button>\n);\n\nDeleteItemButton.propTypes = {\n    onClick: PropTypes.func,\n};\n\nexport default DeleteItemButton;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\n\nimport { sGetIsEditing } from '../../reducers/editDashboard';\nimport { acRemoveDashboardItem } from '../../actions/editDashboard';\nimport DeleteItemButton from './DeleteItemButton';\n\nimport classes from './styles/ItemHeader.module.css';\n\n// This is the margin-top + margin-bottom defined in the css file\nexport const HEADER_MARGIN_HEIGHT = 12;\n\nconst ItemHeader = React.forwardRef(\n    (\n        { itemId, acRemoveDashboardItem, actionButtons, title, editMode },\n        ref\n    ) => {\n        const handleDeleteItem = () => acRemoveDashboardItem(itemId);\n\n        return (\n            <div className={classes.itemHeaderWrap} ref={ref}>\n                <p className={classes.itemTitle}>{title}</p>\n                {editMode ? (\n                    <div className={classes.itemActionsWrap}>\n                        <DeleteItemButton onClick={handleDeleteItem} />\n                    </div>\n                ) : (\n                    actionButtons && (\n                        <div className={classes.itemActionsWrap}>\n                            {actionButtons}\n                        </div>\n                    )\n                )}\n            </div>\n        );\n    }\n);\n\nItemHeader.propTypes = {\n    acRemoveDashboardItem: PropTypes.func,\n    actionButtons: PropTypes.node,\n    editMode: PropTypes.bool,\n    itemId: PropTypes.string,\n    title: PropTypes.string,\n};\n\nconst mapStateToProps = state => ({\n    editMode: sGetIsEditing(state),\n});\n\nconst mapDispatchToProps = {\n    acRemoveDashboardItem,\n};\n\nexport default connect(\n    mapStateToProps,\n    mapDispatchToProps,\n    null,\n    { forwardRef: true }\n)(ItemHeader);\n","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\n\nimport {\n    isSingleValue,\n    isYearOverYear,\n    VIS_TYPE_GAUGE,\n    VIS_TYPE_PIE,\n} from '@dhis2/analytics';\nimport { Button, Menu, MenuItem, Divider, colors } from '@dhis2/ui-core';\nimport i18n from '@dhis2/d2-i18n';\nimport Popover from '@material-ui/core/Popover';\nimport TableIcon from '@material-ui/icons/ViewList';\nimport ChartIcon from '@material-ui/icons/InsertChart';\nimport MapIcon from '@material-ui/icons/Public';\nimport LaunchIcon from '@material-ui/icons/Launch';\n\nimport { ThreeDots, SpeechBubble } from './assets/icons';\nimport { pluginIsAvailable, getLink } from './plugin';\nimport {\n    CHART,\n    MAP,\n    REPORT_TABLE,\n    EVENT_CHART,\n    EVENT_REPORT,\n    isTrackerDomainType,\n    hasMapView,\n    getAppName,\n} from '../../../modules/itemTypes';\n\nconst iconFill = { fill: colors.grey600 };\n\nconst ItemHeaderButtons = props => {\n    const [anchorEl, setAnchorEl] = useState(null);\n\n    const { item, visualization, onSelectActiveType, d2, activeType } = props;\n\n    const isTrackerType = isTrackerDomainType(item.type);\n\n    const onViewTable = () => {\n        handleClose();\n        onSelectActiveType(isTrackerType ? EVENT_REPORT : REPORT_TABLE);\n    };\n\n    const onViewChart = () => {\n        handleClose();\n        onSelectActiveType(isTrackerType ? EVENT_CHART : CHART);\n    };\n\n    const onViewMap = () => {\n        handleClose();\n        onSelectActiveType(MAP);\n    };\n\n    const itemHasMapView = () => hasMapView(item.type);\n\n    const handleMenuClick = (_, event) => setAnchorEl(event.currentTarget);\n\n    const handleInterpretationClick = () => {\n        props.onToggleFooter();\n        if (anchorEl !== null) {\n            handleClose();\n        }\n    };\n\n    const handleClose = () => setAnchorEl(null);\n\n    const type = visualization.type || item.type;\n    const canViewAs =\n        !isSingleValue(type) &&\n        !isYearOverYear(type) &&\n        type !== VIS_TYPE_GAUGE &&\n        type !== VIS_TYPE_PIE;\n\n    const interpretationMenuLabel = props.activeFooter\n        ? i18n.t(`Hide interpretations and details`)\n        : i18n.t(`Show interpretations and details`);\n\n    const ViewAsMenuItems = () => (\n        <>\n            {activeType !== CHART && activeType !== EVENT_CHART && (\n                <MenuItem\n                    dense\n                    label={i18n.t('View as Chart')}\n                    onClick={onViewChart}\n                    icon={<ChartIcon style={iconFill} />}\n                />\n            )}\n            {activeType !== REPORT_TABLE && activeType !== EVENT_REPORT && (\n                <MenuItem\n                    dense\n                    label={i18n.t('View as Table')}\n                    onClick={onViewTable}\n                    icon={<TableIcon style={iconFill} />}\n                />\n            )}\n            {itemHasMapView() && activeType !== MAP && (\n                <MenuItem\n                    dense\n                    label={i18n.t('View as Map')}\n                    onClick={onViewMap}\n                    icon={<MapIcon style={iconFill} />}\n                />\n            )}\n        </>\n    );\n\n    return pluginIsAvailable(item, visualization) ? (\n        <>\n            <Button small secondary onClick={handleMenuClick}>\n                <ThreeDots />\n            </Button>\n            {anchorEl && (\n                <Popover\n                    open={Boolean(anchorEl)}\n                    onClose={handleClose}\n                    anchorEl={anchorEl}\n                >\n                    <Menu>\n                        {canViewAs && (\n                            <>\n                                <ViewAsMenuItems />\n                                <Divider />\n                            </>\n                        )}\n                        <MenuItem\n                            dense\n                            icon={<LaunchIcon style={{ fill: '#6e7a8a' }} />}\n                            label={i18n.t('Open in {{appName}} app', {\n                                appName: getAppName(item.type),\n                            })}\n                            href={getLink(item, d2)}\n                            target=\"_blank\"\n                        />\n                        <MenuItem\n                            dense\n                            icon={<SpeechBubble />}\n                            label={interpretationMenuLabel}\n                            onClick={handleInterpretationClick}\n                        />\n                    </Menu>\n                </Popover>\n            )}\n        </>\n    ) : null;\n};\n\nItemHeaderButtons.propTypes = {\n    activeFooter: PropTypes.bool,\n    activeType: PropTypes.string,\n    d2: PropTypes.object,\n    item: PropTypes.object,\n    visualization: PropTypes.object,\n    onSelectActiveType: PropTypes.func,\n    onToggleFooter: PropTypes.func,\n};\n\nexport default ItemHeaderButtons;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { colors } from '@dhis2/ui-core';\nimport { getId } from './plugin';\nimport InterpretationsComponent from '@dhis2/d2-ui-interpretations';\n\nconst style = {\n    scrollContainer: {\n        overflowY: 'auto',\n        height: '340px',\n    },\n    line: {\n        margin: '-1px 0px 0px',\n        height: '1px',\n        border: 'none',\n        backgroundColor: colors.grey100,\n    },\n};\n\nclass ItemFooter extends Component {\n    render() {\n        const objectId = getId(this.props.item);\n\n        return (\n            <div className=\"dashboard-item-footer\">\n                <hr style={style.line} />\n                <div style={style.scrollContainer}>\n                    <InterpretationsComponent\n                        d2={this.context.d2}\n                        item={this.props.item}\n                        type={this.props.item.type.toLowerCase()}\n                        id={objectId}\n                        appName=\"dashboard\"\n                    />\n                </div>\n            </div>\n        );\n    }\n}\n\nItemFooter.contextTypes = {\n    d2: PropTypes.object.isRequired,\n};\n\nItemFooter.propTypes = {\n    item: PropTypes.object.isRequired,\n};\n\nexport default ItemFooter;\n","// Note that this ignores discrepancies in 'this', so shouldn't be used with bound functions\n// This is useful instead of lodash/memoize when we only need to memoize a single value\n// Inspiration: https://github.com/alexreardon/memoize-one\n\nconst memoizeOne = fn => {\n    let lastArgs = undefined;\n    let lastValue = undefined;\n\n    return (...args) => {\n        if (\n            lastArgs &&\n            args.length === lastArgs.length &&\n            args.every((arg, i) => arg === lastArgs[i])\n        ) {\n            return lastValue;\n        }\n        lastArgs = args;\n        lastValue = fn(...args);\n        return lastValue;\n    };\n};\n\nexport default memoizeOne;\n","import React from 'react';\nimport { CircularLoader } from '@dhis2/ui-core';\n\nimport classes from './styles/LoadingMask.module.css';\n\nconst LoadingMask = () => {\n    return (\n        <div className={classes.center}>\n            <CircularLoader />\n        </div>\n    );\n};\n\nexport default LoadingMask;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport uniqueId from 'lodash/uniqueId';\nimport VisualizationPlugin from '@dhis2/data-visualizer-plugin';\nimport i18n from '@dhis2/d2-i18n';\n\nimport DefaultPlugin from './DefaultPlugin';\nimport FatalErrorBoundary from './FatalErrorBoundary';\nimport ItemHeader, { HEADER_MARGIN_HEIGHT } from '../ItemHeader';\nimport ItemHeaderButtons from './ItemHeaderButtons';\nimport ItemFooter from './ItemFooter';\nimport * as pluginManager from './plugin';\nimport { sGetVisualization } from '../../../reducers/visualizations';\nimport { sGetItemFiltersRoot } from '../../../reducers/itemFilters';\nimport {\n    acAddVisualization,\n    acSetActiveVisualizationType,\n} from '../../../actions/visualizations';\nimport {\n    VISUALIZATION,\n    MAP,\n    CHART,\n    REPORT_TABLE,\n} from '../../../modules/itemTypes';\nimport memoizeOne from '../../../modules/memoizeOne';\n\nimport { getVisualizationConfig } from './plugin';\nimport LoadingMask from './LoadingMask';\nimport { ITEM_CONTENT_PADDING_BOTTOM } from '../../ItemGrid/ItemGrid';\n\nimport classes from './styles/Item.module.css';\n\nexport class Item extends Component {\n    state = {\n        showFooter: false,\n        configLoaded: false,\n        pluginIsLoaded: false,\n    };\n\n    constructor(props, context) {\n        super(props);\n\n        this.d2 = context.d2;\n\n        this.contentRef = React.createRef();\n        this.headerRef = React.createRef();\n\n        this.memoizedApplyFilters = memoizeOne(this.applyFilters);\n\n        this.memoizedGetVisualizationConfig = memoizeOne(\n            getVisualizationConfig\n        );\n\n        this.memoizedGetContentStyle = memoizeOne(this.getContentStyle);\n    }\n\n    async componentDidMount() {\n        this.props.onVisualizationLoaded(\n            // TODO do not call fetch on the pluginManager, do it here as the manager will eventually be removed...\n            await pluginManager.fetch(this.props.item)\n        );\n\n        this.setState({\n            configLoaded: true,\n        });\n    }\n\n    componentDidUpdate(prevProps, prevState) {\n        if (\n            prevState.pluginIsLoaded &&\n            (prevProps.visualization !== this.props.visualization ||\n                prevProps.itemFilters !== this.props.itemFilters)\n        ) {\n            this.setState({\n                pluginIsLoaded: false,\n            });\n        }\n    }\n\n    applyFilters = (visualization, filters) => {\n        if (!Object.keys(filters).length) {\n            return visualization;\n        }\n\n        // deep clone objects in filters to avoid changing the visualization in the Redux store\n        const visRows = visualization.rows.map(obj => ({ ...obj }));\n        const visColumns = visualization.columns.map(obj => ({ ...obj }));\n        const visFilters = visualization.filters.map(obj => ({ ...obj }));\n\n        Object.keys(filters).forEach(dimensionId => {\n            if (filters[dimensionId]) {\n                let dimensionFound = false;\n\n                [visRows, visColumns, visFilters].forEach(dimensionObjects =>\n                    dimensionObjects\n                        .filter(obj => obj.dimension === dimensionId)\n                        .forEach(obj => {\n                            dimensionFound = true;\n                            obj.items = filters[dimensionId];\n                        })\n                );\n\n                // add dimension to filters if not already present elsewhere\n                if (!dimensionFound) {\n                    visFilters.push({\n                        dimension: dimensionId,\n                        items: filters[dimensionId],\n                    });\n                }\n            }\n        });\n\n        return {\n            ...visualization,\n            rows: visRows,\n            columns: visColumns,\n            filters: visFilters,\n        };\n    };\n\n    getUniqueKey = memoizeOne(() => uniqueId());\n\n    pluginCredentials = null;\n\n    getPluginComponent = () => {\n        const activeType = this.getActiveType();\n        const visualization = this.memoizedGetVisualizationConfig(\n            this.props.visualization,\n            this.props.item.type,\n            activeType\n        );\n\n        if (!visualization) {\n            return (\n                <div className={classes.textDiv}>\n                    {i18n.t('No data to display')}\n                </div>\n            );\n        }\n\n        const calculatedHeight =\n            this.props.item.originalHeight -\n            this.headerRef.current.clientHeight -\n            HEADER_MARGIN_HEIGHT -\n            ITEM_CONTENT_PADDING_BOTTOM;\n\n        const props = {\n            ...this.props,\n            visualization,\n            classes,\n            style: this.memoizedGetContentStyle(\n                calculatedHeight,\n                this.contentRef ? this.contentRef.offsetHeight : null,\n                this.props.editMode\n            ),\n        };\n\n        switch (activeType) {\n            case VISUALIZATION:\n            case CHART:\n            case REPORT_TABLE: {\n                return (\n                    <>\n                        {!this.state.pluginIsLoaded && (\n                            <div style={props.style}>\n                                <LoadingMask />\n                            </div>\n                        )}\n                        <VisualizationPlugin\n                            d2={this.d2}\n                            visualization={this.memoizedApplyFilters(\n                                visualization,\n                                props.itemFilters\n                            )}\n                            onLoadingComplete={this.onLoadingComplete}\n                            forDashboard={true}\n                            style={props.style}\n                        />\n                    </>\n                );\n            }\n            case MAP: {\n                if (props.item.type === MAP) {\n                    // apply filters only to thematic and event layers\n                    // for maps AO\n                    const mapViews = props.visualization.mapViews.map(obj => {\n                        if (\n                            obj.layer.includes('thematic') ||\n                            obj.layer.includes('event')\n                        ) {\n                            return this.memoizedApplyFilters(\n                                obj,\n                                props.itemFilters\n                            );\n                        }\n\n                        return obj;\n                    });\n\n                    props.visualization = {\n                        ...props.visualization,\n                        mapViews,\n                    };\n                } else {\n                    // this is the case of a non map AO passed to the maps plugin\n                    // due to a visualization type switch in dashboard item\n                    // maps plugin takes care of converting the AO to a suitable format\n                    props.visualization = this.memoizedApplyFilters(\n                        props.visualization,\n                        props.itemFilters\n                    );\n                }\n\n                props.options = {\n                    ...props.options,\n                    hideTitle: true,\n                };\n\n                return <DefaultPlugin {...props} />;\n            }\n            default: {\n                props.visualization = this.memoizedApplyFilters(\n                    props.visualization,\n                    props.itemFilters\n                );\n\n                return <DefaultPlugin {...props} />;\n            }\n        }\n    };\n\n    onLoadingComplete = () => {\n        this.setState({\n            pluginIsLoaded: true,\n        });\n    };\n\n    onToggleFooter = () => {\n        this.setState(\n            { showFooter: !this.state.showFooter },\n            this.props.onToggleItemExpanded(this.props.item.id)\n        );\n    };\n\n    onSelectActiveType = type => {\n        if (type === this.getActiveType()) {\n            return;\n        }\n\n        pluginManager.unmount(this.props.item, this.getActiveType());\n\n        this.props.onSelectActiveType(this.props.visualization.id, type);\n    };\n\n    getActiveType = () =>\n        this.props.visualization.activeType || this.props.item.type;\n\n    pluginIsAvailable = () =>\n        pluginManager.pluginIsAvailable(\n            this.props.item,\n            this.props.visualization\n        );\n\n    getContentStyle = (calculatedHeight, measuredHeight, editMode) => {\n        const height = editMode\n            ? measuredHeight || calculatedHeight\n            : calculatedHeight;\n\n        return { height };\n    };\n\n    render() {\n        const { item, editMode, itemFilters } = this.props;\n        const { showFooter } = this.state;\n\n        const actionButtons = (\n            <ItemHeaderButtons\n                item={item}\n                visualization={this.props.visualization}\n                onSelectActiveType={this.onSelectActiveType}\n                onToggleFooter={this.onToggleFooter}\n                d2={this.d2}\n                activeType={this.getActiveType()}\n                activeFooter={this.state.showFooter}\n            />\n        );\n\n        return (\n            <>\n                <ItemHeader\n                    title={pluginManager.getName(item)}\n                    itemId={item.id}\n                    actionButtons={actionButtons}\n                    ref={this.headerRef}\n                />\n                <FatalErrorBoundary>\n                    <div\n                        key={this.getUniqueKey(itemFilters)}\n                        className=\"dashboard-item-content\"\n                        ref={ref => (this.contentRef = ref)}\n                    >\n                        {this.state.configLoaded && this.getPluginComponent()}\n                    </div>\n                </FatalErrorBoundary>\n                {!editMode && showFooter ? <ItemFooter item={item} /> : null}\n            </>\n        );\n    }\n}\n\nItem.contextTypes = {\n    d2: PropTypes.object,\n};\n\nItem.propTypes = {\n    editMode: PropTypes.bool,\n    item: PropTypes.object,\n    itemFilters: PropTypes.object,\n    visualization: PropTypes.object,\n    onSelectActiveType: PropTypes.func,\n    onToggleItemExpanded: PropTypes.func,\n    onVisualizationLoaded: PropTypes.func,\n};\n\nItem.defaultProps = {\n    item: {},\n    editMode: false,\n    onToggleItemExpanded: Function.prototype,\n    itemFilters: {},\n    visualization: {},\n};\n\nconst mapStateToProps = (state, ownProps) => ({\n    itemFilters: sGetItemFiltersRoot(state),\n    visualization: sGetVisualization(\n        state,\n        pluginManager.extractFavorite(ownProps.item).id\n    ),\n});\n\nconst mapDispatchToProps = dispatch => ({\n    onVisualizationLoaded: visualization =>\n        dispatch(acAddVisualization(visualization)),\n    onSelectActiveType: (id, type, activeType) =>\n        dispatch(acSetActiveVisualizationType(id, type, activeType)),\n});\n\nexport default connect(\n    mapStateToProps,\n    mapDispatchToProps\n)(Item);\n","import React from 'react';\nimport { colors } from '@dhis2/ui-core';\n\nconst style = {\n    backgroundColor: colors.grey200,\n    border: 'none',\n    height: '1px',\n    margin: '0px 0px 5px 0px',\n};\n\nconst Line = () => <hr style={style} />;\n\nexport default Line;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport i18n from '@dhis2/d2-i18n';\n\nimport { sGetMessagesRoot } from '../../../reducers/messages';\nimport { formatDate } from '../../../modules/util';\nimport { colors } from '@dhis2/ui-core';\nimport ItemHeader from '../ItemHeader';\nimport Line from '../../../widgets/Line';\n\nimport './MessagesItem.css';\n\nconst PRIVATE = 'PRIVATE';\n\nconst messageTypes = {\n    [PRIVATE]: 'Private',\n    VALIDATION_RESULT: 'Validation',\n    TICKET: 'Ticket',\n    SYSTEM: 'System',\n};\n\nconst style = {\n    list: {\n        listStyleType: 'none',\n        paddingLeft: '0px',\n    },\n    seeAll: {\n        textAlign: 'center',\n        fontSize: '13px',\n        marginBottom: '5px',\n    },\n    sender: {\n        fontSize: '13px',\n        lineHeight: '15px',\n        margin: 0,\n        color: colors.grey800,\n    },\n    snippet: {\n        color: colors.grey800,\n        fontSize: '13px',\n        lineHeight: '15px',\n        maxHeight: '30px',\n        overflow: 'hidden',\n    },\n};\n\nclass MessagesItem extends Component {\n    state = {\n        uiLocale: '',\n    };\n\n    async componentDidMount() {\n        const uiLocale = await this.context.d2.currentUser.userSettings.get(\n            'keyUiLocale'\n        );\n\n        this.setState({ uiLocale });\n    }\n\n    getMessageHref = msg => {\n        const msgIdentifier = msg ? `#/${msg.messageType}/${msg.id}` : '';\n        return `${this.context.baseUrl}/dhis-web-messaging/${msgIdentifier}`;\n    };\n\n    getMessageSender = msg => {\n        const latestMsg = msg.messages.slice(-1)[0];\n        return latestMsg.sender ? latestMsg.sender.displayName : '';\n    };\n\n    getMessageItems = () => {\n        const editClass = !this.props.editMode ? 'view' : null;\n\n        return this.props.messages.map(msg => {\n            const redirectToMsg = () => {\n                if (!this.props.editMode) {\n                    document.location.href = this.getMessageHref(msg);\n                }\n            };\n\n            const sender =\n                msg.messageType === PRIVATE\n                    ? this.getMessageSender(msg)\n                    : messageTypes[msg.messageType];\n\n            const readClass = !msg.read ? 'unread' : null;\n            const latestMsg = msg.messages.slice(-1)[0];\n            const msgDate = latestMsg.lastUpdated;\n\n            return (\n                <li\n                    className={`message-item ${editClass}`}\n                    key={msg.id}\n                    onClick={redirectToMsg}\n                >\n                    <p className={`message-title ${readClass}`}>\n                        {msg.displayName} ({msg.messageCount})\n                    </p>\n                    <p style={style.sender}>\n                        {sender} - {formatDate(msgDate, this.state.uiLocale)}\n                    </p>\n                    <p style={style.snippet}>{latestMsg.text}</p>\n                </li>\n            );\n        });\n    };\n\n    render() {\n        return (\n            <>\n                <ItemHeader\n                    title={i18n.t('Messages')}\n                    itemId={this.props.item.id}\n                />\n                <Line />\n                {this.props.messages.length > 0 && (\n                    <div className=\"dashboard-item-content\">\n                        <ul style={style.list}>{this.getMessageItems()}</ul>\n                        <div style={style.seeAll}>\n                            <a href={this.getMessageHref()}>\n                                {i18n.t('See all messages')}\n                            </a>\n                        </div>\n                    </div>\n                )}\n            </>\n        );\n    }\n}\n\nMessagesItem.propTypes = {\n    editMode: PropTypes.bool,\n    item: PropTypes.object,\n    messages: PropTypes.array,\n};\n\nMessagesItem.contextTypes = {\n    d2: PropTypes.object,\n    baseUrl: PropTypes.string,\n};\n\nconst mapStateToProps = state => {\n    return {\n        messages: Object.values(sGetMessagesRoot(state)),\n    };\n};\n\nconst MessagesContainer = connect(\n    mapStateToProps,\n    null\n)(MessagesItem);\n\nexport default MessagesContainer;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport i18n from '@dhis2/d2-i18n';\nimport ItemHeader from '../ItemHeader';\nimport NotInterestedIcon from '@material-ui/icons/NotInterested';\n\nconst NotSupportedItem = props => (\n    <>\n        <ItemHeader\n            title={i18n.t('Item type \"{{type}}\" not supported', {\n                type: props.item.type,\n            })}\n            itemId={props.item.id}\n        />\n        <div\n            style={{\n                display: 'flex',\n                justifyContent: 'center',\n                alignItems: 'center',\n                height: '90%',\n            }}\n        >\n            <NotInterestedIcon\n                style={{ width: 100, height: 100, align: 'center' }}\n                color=\"disabled\"\n            />\n        </div>\n    </>\n);\n\nNotSupportedItem.propTypes = {\n    item: PropTypes.object,\n};\n\nexport default NotSupportedItem;\n","import React from 'react';\nimport { colors } from '@dhis2/ui-core';\nimport PropTypes from 'prop-types';\n\nconst DescriptionIcon = ({ className }) => (\n    <svg\n        className={className}\n        xmlns=\"http://www.w3.org/2000/svg\"\n        viewBox=\"0 0 24 24\"\n        fill={colors.grey500}\n    >\n        <path d=\"M0 0h24v24H0z\" fill=\"none\" />\n        <path d=\"M14 2H6c-1.1 0-1.99.9-1.99 2L4 20c0 1.1.89 2 1.99 2H18c1.1 0 2-.9 2-2V8l-6-6zm2 16H8v-2h8v2zm0-4H8v-2h8v2zm-3-5V3.5L18.5 9H13z\" />\n    </svg>\n);\n\nDescriptionIcon.propTypes = {\n    className: PropTypes.string,\n};\n\nexport default DescriptionIcon;\n","import React from 'react';\nimport { colors } from '@dhis2/ui-core';\nimport PropTypes from 'prop-types';\n\nconst DeleteIcon = ({ className }) => (\n    <svg\n        className={className}\n        xmlns=\"http://www.w3.org/2000/svg\"\n        width=\"18\"\n        height=\"18\"\n        viewBox=\"0 0 24 24\"\n        fill={colors.red500}\n    >\n        <path d=\"M6 19c0 1.1.9 2 2 2h8c1.1 0 2-.9 2-2V7H6v12zM19 4h-3.5l-1-1h-5l-1 1H5v2h14V4z\" />\n        <path d=\"M0 0h24v24H0z\" fill=\"none\" />\n    </svg>\n);\n\nDeleteIcon.propTypes = {\n    className: PropTypes.string,\n};\n\nexport default DeleteIcon;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { colors } from '@dhis2/ui-core';\nimport DescriptionIcon from '../../../icons/Description';\n\nimport DeleteIcon from '../../../icons/Delete';\nimport Line from '../../../widgets/Line';\nimport { itemTypeMap, getItemUrl } from '../../../modules/itemTypes';\nimport { orArray } from '../../../modules/util';\nimport { tRemoveListItemContent } from './actions';\nimport ItemHeader from '../ItemHeader';\nimport classes from './Item.module.css';\n\nconst getItemTitle = item => itemTypeMap[item.type].pluralTitle;\n\nconst getContentItems = item =>\n    orArray(item[itemTypeMap[item.type].propName]).filter(\n        (item, index, array) =>\n            array.findIndex(el => el.id === item.id) === index\n    );\n\nconst ListItem = (props, context) => {\n    const { item, editMode, tRemoveListItemContent } = props;\n    const contentItems = getContentItems(item);\n\n    const getLink = contentItem => {\n        const deleteButton = (\n            <button\n                className={classes.deletebutton}\n                onClick={() => tRemoveListItemContent(item, contentItem)}\n            >\n                <DeleteIcon className={classes.deleteicon} />\n            </button>\n        );\n\n        return (\n            <>\n                <a\n                    className={classes.link}\n                    style={{ color: colors.grey900 }}\n                    href={getItemUrl(item.type, contentItem, context.d2)}\n                >\n                    {contentItem.name}\n                </a>\n                {editMode ? deleteButton : null}\n            </>\n        );\n    };\n\n    return (\n        <>\n            <ItemHeader title={getItemTitle(item)} itemId={item.id} />\n            <Line />\n            <div className=\"dashboard-item-content\">\n                <ul className={classes.list}>\n                    {contentItems.map(contentItem => (\n                        <li className={classes.item} key={contentItem.id}>\n                            <DescriptionIcon className={classes.itemicon} />\n                            {getLink(contentItem)}\n                        </li>\n                    ))}\n                </ul>\n            </div>\n        </>\n    );\n};\n\nListItem.propTypes = {\n    editMode: PropTypes.bool,\n    item: PropTypes.object,\n    tRemoveListItemContent: PropTypes.func,\n};\n\nListItem.contextTypes = {\n    d2: PropTypes.object,\n};\n\nexport default connect(\n    null,\n    {\n        tRemoveListItemContent,\n    }\n)(ListItem);\n","import {\n    acUpdateDashboardItem,\n    acRemoveDashboardItem,\n} from '../../../actions/editDashboard';\nimport { itemTypeMap } from '../../../modules/itemTypes';\n\nexport const tRemoveListItemContent = (dashboardItem, content) => dispatch => {\n    const listItemType = itemTypeMap[dashboardItem.type].propName;\n\n    const newContent = dashboardItem[listItemType].filter(\n        item => item.id !== content.id\n    );\n\n    if (newContent.length) {\n        dashboardItem[listItemType] = newContent;\n        dispatch(acUpdateDashboardItem(dashboardItem));\n    } else {\n        dispatch(acRemoveDashboardItem(dashboardItem));\n    }\n};\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport i18n from '@dhis2/d2-i18n';\nimport PropTypes from 'prop-types';\n\nimport Input from '@material-ui/core/Input';\nimport {\n    Parser as RichTextParser,\n    Editor as RichTextEditor,\n} from '@dhis2/d2-ui-rich-text';\n\nimport { acUpdateDashboardItem } from '../../../actions/editDashboard';\nimport { sGetEditDashboardItems } from '../../../reducers/editDashboard';\nimport { sGetDashboardItems } from '../../../reducers/dashboards';\nimport ItemHeader from '../ItemHeader';\nimport Line from '../../../widgets/Line';\n\nconst style = {\n    textDiv: {\n        padding: '10px',\n        whiteSpace: 'pre-line',\n        lineHeight: '20px',\n    },\n    textField: {\n        fontSize: '14px',\n        fontStretch: 'normal',\n        width: '90%',\n        margin: '0 auto',\n        display: 'block',\n        lineHeight: '24px',\n    },\n    container: {\n        marginBottom: '20px',\n        marginTop: '20px',\n    },\n};\n\nconst TextItem = props => {\n    const { item, editMode, text, acUpdateDashboardItem } = props;\n\n    const onChangeText = event => {\n        const updatedItem = {\n            ...item,\n            text: event.target.value,\n        };\n\n        acUpdateDashboardItem(updatedItem);\n    };\n\n    const viewItem = () => {\n        const textDivStyle = Object.assign({}, style.textField, style.textDiv);\n        return (\n            <div className=\"dashboard-item-content\" style={style.container}>\n                <RichTextParser style={textDivStyle}>{text}</RichTextParser>\n            </div>\n        );\n    };\n\n    const editItem = () => {\n        return (\n            <>\n                <ItemHeader title={i18n.t('Text item')} itemId={item.id} />\n                <Line />\n                <div className=\"dashboard-item-content\">\n                    <RichTextEditor onEdit={onChangeText}>\n                        <Input\n                            value={text}\n                            multiline\n                            fullWidth\n                            style={style.textField}\n                            placeholder={i18n.t('Add text here')}\n                            onChange={onChangeText}\n                        />\n                    </RichTextEditor>\n                </div>\n            </>\n        );\n    };\n\n    return <>{editMode ? editItem() : viewItem()}</>;\n};\n\nconst mapStateToProps = (state, ownProps) => {\n    const items = ownProps.editMode\n        ? sGetEditDashboardItems(state)\n        : sGetDashboardItems(state);\n\n    const item = items.find(item => item.id === ownProps.item.id);\n\n    return {\n        text: item ? item.text : '',\n    };\n};\n\nTextItem.propTypes = {\n    acUpdateDashboardItem: PropTypes.func,\n    editMode: PropTypes.bool,\n    item: PropTypes.object,\n    text: PropTypes.string,\n};\n\nexport default connect(\n    mapStateToProps,\n    {\n        acUpdateDashboardItem,\n    }\n)(TextItem);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport NotInterestedIcon from '@material-ui/icons/NotInterested';\n\nimport { FILTER_ORG_UNIT } from '../../../actions/itemFilters';\nimport { sGetItemFiltersRoot } from '../../../reducers/itemFilters';\nimport ItemHeader from '../ItemHeader';\nimport Line from '../../../widgets/Line';\n\nconst getIframeSrc = (appDetails, item, itemFilters) => {\n    let iframeSrc = `${appDetails.launchUrl}?dashboardItemId=${item.id}`;\n\n    if (\n        itemFilters &&\n        itemFilters[FILTER_ORG_UNIT] &&\n        itemFilters[FILTER_ORG_UNIT].length\n    ) {\n        const ouIds = itemFilters[FILTER_ORG_UNIT].map(\n            ouPath => ouPath.split('/').slice(-1)[0]\n        );\n\n        iframeSrc += `&userOrgUnit=${ouIds.join(',')}`;\n    }\n\n    return iframeSrc;\n};\n\nconst AppItem = ({ item, itemFilters }, context) => {\n    let appDetails;\n\n    const appKey = item.appKey;\n\n    if (appKey) {\n        appDetails = context.d2.system.installedApps.find(\n            app => app.key === appKey\n        );\n    }\n\n    return appDetails && appDetails.name && appDetails.launchUrl ? (\n        <>\n            <ItemHeader title={appDetails.name} itemId={item.id} />\n            <Line />\n            <iframe\n                title={appDetails.name}\n                src={getIframeSrc(appDetails, item, itemFilters)}\n                className=\"dashboard-item-content\"\n                style={{ border: 'none' }}\n            />\n        </>\n    ) : (\n        <>\n            <ItemHeader title={`${appKey} app not found`} />\n            <Line />\n            <div\n                className=\"dashboard-item-content\"\n                style={{\n                    display: 'flex',\n                    justifyContent: 'center',\n                    alignItems: 'center',\n                    height: '90%',\n                }}\n            >\n                <NotInterestedIcon\n                    color=\"disabled\"\n                    disabled\n                    style={{ width: 100, height: 100, align: 'center' }}\n                />\n            </div>\n        </>\n    );\n};\n\nAppItem.propTypes = {\n    item: PropTypes.object,\n    itemFilters: PropTypes.object,\n};\n\nAppItem.contextTypes = {\n    d2: PropTypes.object,\n};\n\nconst mapStateToProps = state => ({\n    itemFilters: sGetItemFiltersRoot(state),\n});\n\nexport default connect(mapStateToProps)(AppItem);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport i18n from '@dhis2/d2-i18n';\n\nimport { colors } from '@dhis2/ui-core';\nimport ItemHeader from '../ItemHeader';\n\nconst style = {\n    margin: '21px 28px',\n    fontSize: '14px',\n    lineHeight: '18px',\n    color: colors.grey600,\n};\n\nconst SpacerItem = props => {\n    return (\n        <>\n            <ItemHeader title={i18n.t('Spacer')} itemId={props.item.id} />\n            <p style={style}>\n                {i18n.t(\n                    'Use a spacer to create empty vertical space between other dashboard items.'\n                )}\n            </p>\n        </>\n    );\n};\n\nSpacerItem.propTypes = {\n    item: PropTypes.object,\n};\n\nexport default SpacerItem;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport VisualizationItem from './VisualizationItem/Item';\nimport MessagesItem from './MessagesItem/Item';\nimport NotSupportedItem from './NotSupportedItem/Item';\nimport ListItem from './ListItem/Item';\nimport TextItem from './TextItem/Item';\nimport AppItem from './AppItem/Item';\nimport SpacerItem from './SpacerItem/Item';\nimport {\n    APP,\n    VISUALIZATION,\n    REPORT_TABLE,\n    CHART,\n    MAP,\n    EVENT_CHART,\n    EVENT_REPORT,\n    MESSAGES,\n    REPORTS,\n    RESOURCES,\n    USERS,\n    TEXT,\n    SPACER,\n} from '../../modules/itemTypes';\nimport { DEFAULT_STATE_ITEM_FILTERS } from '../../reducers/itemFilters';\n\nconst getGridItem = type => {\n    switch (type) {\n        case VISUALIZATION:\n        case REPORT_TABLE:\n        case CHART:\n        case MAP:\n        case EVENT_CHART:\n        case EVENT_REPORT:\n            return VisualizationItem;\n        case MESSAGES:\n            return MessagesItem;\n        case REPORTS:\n        case RESOURCES:\n        case USERS:\n            return ListItem;\n        case TEXT:\n            return TextItem;\n        case SPACER:\n            return SpacerItem;\n        case APP:\n            return AppItem;\n        default:\n            return NotSupportedItem;\n    }\n};\n\nexport const Item = props => {\n    const GridItem = getGridItem(props.item.type);\n\n    return (\n        <GridItem\n            item={props.item}\n            editMode={props.editMode}\n            itemFilters={\n                props.editMode ? DEFAULT_STATE_ITEM_FILTERS : props.itemFilters\n            }\n            onToggleItemExpanded={props.onToggleItemExpanded}\n        />\n    );\n};\n\nItem.propTypes = {\n    editMode: PropTypes.bool,\n    item: PropTypes.object,\n    itemFilters: PropTypes.object,\n    onToggleItemExpanded: PropTypes.func,\n};\n","import React from 'react';\nimport { colors } from '@dhis2/ui-core';\nimport PropTypes from 'prop-types';\n\nexport const NoContentMessage = ({ text }) => (\n    <div\n        style={{\n            padding: '50px 10px',\n            textAlign: 'center',\n            fontSize: '15px',\n            fontWeight: 500,\n            color: colors.grey600,\n        }}\n    >\n        {text}\n    </div>\n);\n\nNoContentMessage.propTypes = {\n    text: PropTypes.string,\n};\n\nexport default NoContentMessage;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport debounce from 'lodash/debounce';\nimport pick from 'lodash/pick';\n\nconst defaultDebounceMs = 100;\nconst defaultBufferFactor = 0.25;\n\nclass ProgressiveLoadingContainer extends Component {\n    static propTypes = {\n        children: PropTypes.node.isRequired,\n        bufferFactor: PropTypes.number,\n        className: PropTypes.string,\n        debounceMs: PropTypes.number,\n        style: PropTypes.object,\n    };\n    static defaultProps = {\n        debounceMs: defaultDebounceMs,\n        bufferFactor: defaultBufferFactor,\n    };\n\n    state = {\n        shouldLoad: false,\n    };\n    containerRef = null;\n    shouldLoadHandler = null;\n\n    checkShouldLoad() {\n        const bufferPx = this.props.bufferFactor * window.innerHeight;\n\n        if (!this.containerRef) {\n            return;\n        }\n\n        const rect = this.containerRef.getBoundingClientRect();\n        if (\n            rect.bottom > -bufferPx &&\n            rect.top < window.innerHeight + bufferPx\n        ) {\n            this.setState({\n                shouldLoad: true,\n            });\n\n            this.removeHandler();\n        }\n    }\n\n    registerHandler() {\n        this.shouldLoadHandler = debounce(\n            () => this.checkShouldLoad(),\n            this.props.debounceMs\n        );\n\n        window.addEventListener('scroll', this.shouldLoadHandler);\n    }\n    removeHandler() {\n        window.removeEventListener('scroll', this.shouldLoadHandler);\n    }\n\n    componentDidMount() {\n        this.registerHandler();\n        this.checkShouldLoad();\n    }\n\n    componentWillUnmount() {\n        this.removeHandler();\n    }\n\n    render() {\n        const { children, className, style, ...props } = this.props;\n        const { shouldLoad } = this.state;\n\n        const eventProps = pick(props, [\n            'onMouseDown',\n            'onTouchStart',\n            'onMouseUp',\n            'onTouchEnd',\n        ]);\n\n        return (\n            <div\n                ref={ref => (this.containerRef = ref)}\n                style={style}\n                className={className}\n                {...eventProps}\n            >\n                {shouldLoad && children}\n            </div>\n        );\n    }\n}\n\nexport default ProgressiveLoadingContainer;\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport i18n from '@dhis2/d2-i18n';\nimport ReactGridLayout from 'react-grid-layout';\nimport { CircularLoader, ScreenCover } from '@dhis2/ui-core';\n\nimport {\n    acUpdateDashboardLayout,\n    acRemoveDashboardItem,\n} from '../../actions/editDashboard';\nimport { Item } from '../Item/Item';\nimport { resize as pluginResize } from '../Item/VisualizationItem/plugin';\nimport { isVisualizationType } from '../../modules/itemTypes';\nimport {\n    GRID_ROW_HEIGHT,\n    GRID_COMPACT_TYPE,\n    MARGIN,\n    getGridColumns,\n    hasShape,\n    onItemResize,\n} from './gridUtil';\nimport { orArray } from '../../modules/util';\n\nimport NoContentMessage from '../../widgets/NoContentMessage';\n\nimport 'react-grid-layout/css/styles.css';\nimport 'react-resizable/css/styles.css';\n\nimport './ItemGrid.css';\nimport { sGetSelectedId, sGetSelectedIsLoading } from '../../reducers/selected';\nimport {\n    sGetEditDashboardRoot,\n    sGetEditDashboardItems,\n} from '../../reducers/editDashboard';\nimport {\n    sGetDashboardById,\n    sGetDashboardItems,\n} from '../../reducers/dashboards';\nimport ProgressiveLoadingContainer from '../Item/ProgressiveLoadingContainer';\n\n// Component\n\nconst EXPANDED_HEIGHT = 17;\n// this is set in the .dashboard-item-content css\nexport const ITEM_CONTENT_PADDING_BOTTOM = 4;\n\nexport class ItemGrid extends Component {\n    state = {\n        expandedItems: {},\n    };\n\n    onToggleItemExpanded = clickedId => {\n        const isExpanded =\n            typeof this.state.expandedItems[clickedId] === 'boolean'\n                ? this.state.expandedItems[clickedId]\n                : false;\n\n        const expandedItems = { ...this.state.expandedItems };\n        expandedItems[clickedId] = !isExpanded;\n        this.setState({ expandedItems });\n    };\n\n    onRemoveItem = clickedId => {\n        this.props.acRemoveDashboardItem(clickedId);\n    };\n\n    componentWillReceiveProps(nextProps) {\n        if (nextProps.edit) {\n            this.setState({ expandedItems: {} });\n        }\n    }\n\n    onLayoutChange = newLayout => {\n        if (this.props.edit) {\n            this.props.acUpdateDashboardLayout(newLayout);\n        }\n    };\n\n    onResizeStop = (layout, oldItem, newItem) => {\n        onItemResize(newItem.i);\n\n        const dashboardItem = this.props.dashboardItems.find(\n            item => item.id === newItem.i\n        );\n\n        // call resize on the item component if it's a plugin type\n        if (dashboardItem && isVisualizationType(dashboardItem)) {\n            pluginResize(dashboardItem);\n        }\n    };\n\n    onRemoveItemWrapper = id => () => this.onRemoveItem(id);\n\n    adjustHeightForExpanded = dashboardItem => {\n        const expandedItem = this.state.expandedItems[dashboardItem.id];\n\n        if (expandedItem && expandedItem === true) {\n            return Object.assign({}, dashboardItem, {\n                h: dashboardItem.h + EXPANDED_HEIGHT,\n            });\n        }\n\n        return dashboardItem;\n    };\n\n    getItemComponent = item => {\n        const itemClassNames = [\n            item.type,\n            this.props.edit ? 'edit' : 'view',\n        ].join(' ');\n\n        return (\n            <ProgressiveLoadingContainer\n                key={item.i}\n                className={itemClassNames}\n            >\n                <Item\n                    item={item}\n                    editMode={this.props.edit}\n                    onToggleItemExpanded={this.onToggleItemExpanded}\n                />\n            </ProgressiveLoadingContainer>\n        );\n    };\n\n    getItemComponents = items => items.map(item => this.getItemComponent(item));\n\n    render() {\n        const { edit, isLoading, dashboardItems } = this.props;\n\n        if (!isLoading && !dashboardItems.length) {\n            return (\n                <NoContentMessage\n                    text={i18n.t('There are no items on this dashboard')}\n                />\n            );\n        }\n\n        const items = edit\n            ? dashboardItems\n            : dashboardItems.map(this.adjustHeightForExpanded);\n\n        return (\n            <div className=\"grid-wrapper\">\n                {isLoading ? (\n                    <ScreenCover>\n                        <CircularLoader />\n                    </ScreenCover>\n                ) : null}\n                <ReactGridLayout\n                    onLayoutChange={this.onLayoutChange}\n                    onResizeStop={this.onResizeStop}\n                    className=\"layout\"\n                    layout={items}\n                    margin={MARGIN}\n                    cols={getGridColumns()}\n                    rowHeight={GRID_ROW_HEIGHT}\n                    width={window.innerWidth}\n                    compactType={GRID_COMPACT_TYPE}\n                    isDraggable={edit}\n                    isResizable={edit}\n                    draggableCancel=\"input,textarea\"\n                >\n                    {this.getItemComponents(items)}\n                </ReactGridLayout>\n            </div>\n        );\n    }\n}\n\nItemGrid.propTypes = {\n    acRemoveDashboardItem: PropTypes.func,\n    acUpdateDashboardLayout: PropTypes.func,\n    dashboardItems: PropTypes.array,\n    edit: PropTypes.bool,\n    isLoading: PropTypes.bool,\n};\n\nItemGrid.defaultProps = {\n    dashboardItems: [],\n};\n\n// Container\n\nconst mapStateToProps = (state, ownProps) => {\n    const selectedDashboard = ownProps.edit\n        ? sGetEditDashboardRoot(state)\n        : sGetDashboardById(state, sGetSelectedId(state));\n\n    const dashboardItems = ownProps.edit\n        ? sGetEditDashboardItems(state)\n        : sGetDashboardItems(state);\n\n    return {\n        isLoading: sGetSelectedIsLoading(state) || !selectedDashboard,\n        dashboardItems,\n    };\n};\n\nconst mapDispatchToProps = {\n    acUpdateDashboardLayout,\n    acRemoveDashboardItem,\n};\n\nconst mergeProps = (stateProps, dispatchProps, ownProps) => {\n    const validItems = orArray(stateProps.dashboardItems).filter(hasShape);\n\n    return {\n        ...dispatchProps,\n        edit: ownProps.edit,\n        isLoading: stateProps.isLoading,\n        dashboardItems: validItems,\n        onItemResize,\n    };\n};\n\nexport default connect(\n    mapStateToProps,\n    mapDispatchToProps,\n    mergeProps\n)(ItemGrid);\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nimport i18n from '@dhis2/d2-i18n';\n\nimport { colors } from '@dhis2/ui-core';\n\nconst styles = {\n    badgeContainer: {\n        margin: '2px',\n        padding: '0 16px',\n        borderRadius: '4px',\n        color: colors.white,\n        backgroundColor: '#212934',\n        height: 36,\n        display: 'flex',\n        alignItems: 'center',\n    },\n    badge: {\n        fontSize: '13px',\n        cursor: 'pointer',\n        whiteSpace: 'nowrap',\n    },\n    badgeRemove: {\n        fontSize: '12px',\n        textDecoration: 'underline',\n        marginLeft: '24px',\n        cursor: 'pointer',\n    },\n};\n\nclass FilterBadge extends Component {\n    onClick = id => () => this.props.onClick(id);\n    onRemove = id => () => this.props.onRemove(id);\n\n    render() {\n        const { data } = this.props;\n\n        return (\n            <div style={styles.badgeContainer}>\n                <span style={styles.badge} onClick={this.onClick(data.id)}>\n                    {`${data.name}: ${\n                        data.values.length > 1\n                            ? i18n.t('{{count}} selected', {\n                                  count: data.values.length,\n                              })\n                            : data.values[0].name\n                    }`}\n                </span>\n                <span\n                    style={styles.badgeRemove}\n                    onClick={this.onRemove(data.id)}\n                >\n                    {i18n.t('Remove')}\n                </span>\n            </div>\n        );\n    }\n}\n\nFilterBadge.propTypes = {\n    data: PropTypes.object.isRequired,\n    onClick: PropTypes.func.isRequired,\n    onRemove: PropTypes.func.isRequired,\n};\n\nFilterBadge.defaultProps = {\n    onClick: Function.prototype,\n    onRemove: Function.prototype,\n};\n\nexport default FilterBadge;\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { createSelector } from 'reselect';\n\nimport { sGetDimensions } from '../../reducers/dimensions';\nimport { sGetItemFiltersRoot } from '../../reducers/itemFilters';\nimport { sGetControlBarUserRows } from '../../reducers/controlBar';\nimport { getTopOffset } from '../ControlBar/controlBarDimensions';\nimport { acRemoveItemFilter } from '../../actions/itemFilters';\nimport { acRemoveEditItemFilter } from '../../actions/editItemFilters';\nimport { acSetActiveModalDimension } from '../../actions/activeModalDimension';\n\nimport FilterBadge from './FilterBadge';\n\nimport classes from './styles/FilterBar.module.css';\n\nexport class FilterBar extends Component {\n    onBadgeRemove = id => {\n        this.props.removeItemFilter(id);\n        this.props.removeEditItemFilter(id);\n    };\n\n    onBadgeClick = id => {\n        this.props.setActiveModalDimension({\n            id,\n            name: this.props.filters.find(item => item.id === id).name,\n        });\n    };\n\n    render() {\n        const { filters, userRows } = this.props;\n        const top = getTopOffset(userRows) + 10;\n\n        return filters.length ? (\n            <div className={classes.bar} style={{ top }}>\n                {filters.map(filter => (\n                    <FilterBadge\n                        key={filter.id}\n                        data={filter}\n                        onClick={this.onBadgeClick}\n                        onRemove={this.onBadgeRemove}\n                    />\n                ))}\n            </div>\n        ) : null;\n    }\n}\n\nFilterBar.propTypes = {\n    filters: PropTypes.array.isRequired,\n    removeEditItemFilter: PropTypes.func.isRequired,\n    removeItemFilter: PropTypes.func.isRequired,\n    setActiveModalDimension: PropTypes.func,\n    userRows: PropTypes.number,\n};\n\nFilterBar.defaultProps = {\n    filters: [],\n    removeItemFIlter: Function.prototype,\n    removeEditItemFilter: Function.prototype,\n};\n\n// simplify the filters structure to:\n// [{ id: 'pe', name: 'Period', values: [{ id: 2019: name: '2019' }, {id: 'LAST_MONTH', name: 'Last month' }]}, ...]\nconst filtersSelector = createSelector(\n    [sGetItemFiltersRoot, sGetDimensions],\n    (filters, dimensions) =>\n        Object.keys(filters).reduce((arr, id) => {\n            arr.push({\n                id: id,\n                name: dimensions.find(dimension => dimension.id === id).name,\n                values: filters[id].map(value => ({\n                    id: value.id,\n                    name: value.displayName || value.name,\n                })),\n            });\n\n            return arr;\n        }, [])\n);\n\nconst mapStateToProps = state => ({\n    filters: filtersSelector(state),\n    userRows: sGetControlBarUserRows(state),\n});\n\nexport default connect(\n    mapStateToProps,\n    {\n        setActiveModalDimension: acSetActiveModalDimension,\n        removeItemFilter: acRemoveItemFilter,\n        removeEditItemFilter: acRemoveEditItemFilter,\n    }\n)(FilterBar);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport TitleBar from '../TitleBar/TitleBar';\nimport ItemGrid from '../ItemGrid/ItemGrid';\nimport FilterBar from '../FilterBar/FilterBar';\n\nexport const DashboardContent = props => (\n    <>\n        <TitleBar edit={props.editMode} />\n        <FilterBar />\n        <ItemGrid edit={props.editMode} />\n    </>\n);\n\nDashboardContent.propTypes = {\n    editMode: PropTypes.bool,\n};\n\nexport default DashboardContent;\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport isEmpty from 'lodash/isEmpty';\nimport i18n from '@dhis2/d2-i18n';\nimport PropTypes from 'prop-types';\n\nimport {\n    sGetAllDashboards,\n    sDashboardsIsFetching,\n} from '../../reducers/dashboards';\nimport { sGetSelectedId } from '../../reducers/selected';\nimport DashboardsBar from '../ControlBar/DashboardsBar';\nimport DashboardVerticalOffset from './DashboardVerticalOffset';\nimport DashboardContent from './DashboardContent';\nimport NoContentMessage from '../../widgets/NoContentMessage';\n\nexport const Content = ({ hasDashboardContent, dashboardsIsEmpty }) => {\n    const msg = dashboardsIsEmpty\n        ? i18n.t(\n              'No dashboards found. Use the + button to create a new dashboard.'\n          )\n        : i18n.t('Requested dashboard not found');\n\n    return hasDashboardContent ? (\n        <DashboardContent editMode={false} />\n    ) : (\n        <NoContentMessage text={msg} />\n    );\n};\n\nContent.propTypes = {\n    dashboardsIsEmpty: PropTypes.bool,\n    hasDashboardContent: PropTypes.bool,\n};\n\nexport const ViewDashboard = ({ id, dashboardsIsEmpty, dashboardsLoaded }) => {\n    const hasDashboardContent = id && !dashboardsIsEmpty;\n    const contentNotReady = !dashboardsLoaded || id === null;\n\n    return (\n        <>\n            <DashboardsBar />\n            <DashboardVerticalOffset />\n            <div className=\"dashboard-wrapper\">\n                {contentNotReady ? null : (\n                    <Content\n                        hasDashboardContent={hasDashboardContent}\n                        dashboardsIsEmpty={dashboardsIsEmpty}\n                    />\n                )}\n            </div>\n        </>\n    );\n};\n\nViewDashboard.propTypes = {\n    dashboardsIsEmpty: PropTypes.bool,\n    dashboardsLoaded: PropTypes.bool,\n    id: PropTypes.string,\n};\n\nconst mapStateToProps = state => {\n    const dashboards = sGetAllDashboards(state);\n\n    return {\n        id: sGetSelectedId(state),\n        dashboardsIsEmpty: isEmpty(dashboards),\n        dashboardsLoaded: !sDashboardsIsFetching(state),\n    };\n};\n\nexport default connect(mapStateToProps)(ViewDashboard);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport i18n from '@dhis2/d2-i18n';\nimport {\n    Button,\n    Modal,\n    ModalContent,\n    ModalActions,\n    ButtonStrip,\n    ModalTitle,\n} from '@dhis2/ui-core';\n\nimport classes from './styles/ConfirmDeleteDialog.module.css';\n\nexport const ConfirmDeleteDialog = ({\n    dashboardName,\n    onDeleteConfirmed,\n    onContinueEditing,\n    open,\n}) => {\n    const actions = [\n        <Button key=\"cancel\" secondary onClick={onContinueEditing}>\n            {i18n.t('Cancel')}\n        </Button>,\n        <Button key=\"delete\" destructive onClick={onDeleteConfirmed}>\n            {i18n.t('Delete')}\n        </Button>,\n    ];\n\n    return (\n        open && (\n            <Modal onClose={onContinueEditing} small position=\"middle\">\n                <ModalTitle>{i18n.t('Delete dashboard')}</ModalTitle>\n                <ModalContent>\n                    <span className={classes.content}>\n                        {i18n.t(\n                            'Deleting dashboard \"{{ dashboardName }}\" will remove it for all users. This action cannot be undone. Are you sure you want to permanently delete this dashboard?',\n                            { dashboardName }\n                        )}\n                    </span>\n                </ModalContent>\n                <ModalActions>\n                    <ButtonStrip>{actions}</ButtonStrip>\n                </ModalActions>\n            </Modal>\n        )\n    );\n};\n\nConfirmDeleteDialog.propTypes = {\n    dashboardName: PropTypes.string,\n    open: PropTypes.bool,\n    onContinueEditing: PropTypes.func,\n    onDeleteConfirmed: PropTypes.func,\n};\n\nexport default ConfirmDeleteDialog;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { Redirect } from 'react-router-dom';\nimport i18n from '@dhis2/d2-i18n';\nimport ControlBar from './ControlBar';\nimport TranslationDialog from '@dhis2/d2-ui-translation-dialog';\nimport { Button } from '@dhis2/ui-core';\n\nimport ConfirmDeleteDialog from './ConfirmDeleteDialog';\nimport {\n    tSaveDashboard,\n    acClearEditDashboard,\n} from '../../actions/editDashboard';\nimport {\n    tDeleteDashboard,\n    acSetDashboardDisplayName,\n} from '../../actions/dashboards';\nimport {\n    sGetEditDashboardRoot,\n    sGetIsNewDashboard,\n} from '../../reducers/editDashboard';\nimport {\n    CONTROL_BAR_ROW_HEIGHT,\n    MIN_ROW_COUNT,\n    getControlBarHeight,\n} from './controlBarDimensions';\nimport { apiFetchDashboard } from '../../api/dashboards';\n\nimport classes from './styles/DashboardsBar.module.css';\n\nconst buttonBarStyle = {\n    height: CONTROL_BAR_ROW_HEIGHT,\n    paddingTop: '15px',\n    marginLeft: '15px',\n    marginRight: '15px',\n};\n\nexport class EditBar extends Component {\n    state = {\n        translationDialogIsOpen: false,\n        dashboardModel: undefined,\n        confirmDeleteDialogOpen: false,\n        redirectUrl: undefined,\n    };\n\n    onConfirmDelete = () => {\n        this.setState({ confirmDeleteDialogOpen: true });\n    };\n\n    onSave = () => {\n        this.props.onSave().then(newId => {\n            this.setState({ redirectUrl: `/${newId}` });\n        });\n    };\n\n    onDiscard = () => {\n        this.props.onDiscardChanges();\n        const redirectUrl = this.props.dashboardId\n            ? `/${this.props.dashboardId}`\n            : '/';\n        this.setState({ redirectUrl });\n    };\n\n    onContinueEditing = () => {\n        this.setState({ confirmDeleteDialogOpen: false });\n    };\n\n    onDeleteConfirmed = () => {\n        this.setState({ confirmDeleteDialogOpen: false });\n        this.props.onDelete(this.props.dashboardId).then(() => {\n            this.setState({ redirectUrl: '/' });\n        });\n    };\n\n    onTranslationsSaved = async translations => {\n        if (translations && translations.length) {\n            const dbLocale = await this.context.d2.currentUser.userSettings.get(\n                'keyDbLocale'\n            );\n\n            const translation = translations.find(\n                t => t.locale === dbLocale && t.property === 'NAME'\n            );\n\n            if (translation && translation.value) {\n                this.props.onTranslate(\n                    this.props.dashboardId,\n                    translation.value\n                );\n            }\n        }\n    };\n\n    fetchDashboardModel = () => {\n        if (this.props.dashboardId && !this.state.dashboardModel) {\n            apiFetchDashboard(this.props.dashboardId).then(dashboardModel =>\n                this.setState({ dashboardModel })\n            );\n        }\n    };\n\n    componentDidMount() {\n        this.fetchDashboardModel();\n    }\n\n    componentDidUpdate() {\n        this.fetchDashboardModel();\n    }\n\n    toggleTranslationDialog = () => {\n        this.setState({\n            translationDialogIsOpen: !this.state.translationDialogIsOpen,\n        });\n    };\n\n    confirmDeleteDialog = () =>\n        this.props.deleteAccess && this.props.dashboardId ? (\n            <ConfirmDeleteDialog\n                dashboardName={this.props.dashboardName}\n                onDeleteConfirmed={this.onDeleteConfirmed}\n                onContinueEditing={this.onContinueEditing}\n                open={this.state.confirmDeleteDialogOpen}\n            />\n        ) : null;\n\n    translationDialog = () =>\n        this.state.dashboardModel && this.state.dashboardModel.id ? (\n            <TranslationDialog\n                className=\"translation-dialog\"\n                d2={this.context.d2}\n                open={this.state.translationDialogIsOpen}\n                onRequestClose={this.toggleTranslationDialog}\n                objectToTranslate={this.state.dashboardModel}\n                fieldsToTranslate={['name', 'description']}\n                // TODO handle messages in snackbar\n                onTranslationSaved={this.onTranslationsSaved}\n                onTranslationError={err =>\n                    console.log('translation update error', err)\n                }\n            />\n        ) : null;\n\n    render() {\n        if (this.state.redirectUrl) {\n            return <Redirect to={this.state.redirectUrl} />;\n        }\n\n        const { dashboardId, deleteAccess, updateAccess } = this.props;\n        const controlBarHeight = getControlBarHeight(MIN_ROW_COUNT);\n\n        const discardBtnText = updateAccess\n            ? i18n.t('Exit without saving')\n            : i18n.t('Go to dashboards');\n\n        return (\n            <>\n                <ControlBar height={controlBarHeight} editMode={true}>\n                    <div style={buttonBarStyle}>\n                        {updateAccess ? (\n                            <div className={classes.leftControls}>\n                                <span style={{ marginRight: '15px' }}>\n                                    <Button primary onClick={this.onSave}>\n                                        {i18n.t('Save changes')}\n                                    </Button>\n                                </span>\n\n                                {dashboardId ? (\n                                    <span style={{ marginRight: '15px' }}>\n                                        <Button\n                                            onClick={\n                                                this.toggleTranslationDialog\n                                            }\n                                        >\n                                            {i18n.t('Translate')}\n                                        </Button>\n                                    </span>\n                                ) : null}\n                                {dashboardId && deleteAccess ? (\n                                    <Button onClick={this.onConfirmDelete}>\n                                        {i18n.t('Delete')}\n                                    </Button>\n                                ) : null}\n                            </div>\n                        ) : null}\n\n                        <div className={classes.rightControls}>\n                            <Button secondary onClick={this.onDiscard}>\n                                {discardBtnText}\n                            </Button>\n                        </div>\n                    </div>\n                </ControlBar>\n                {this.translationDialog()}\n                {this.confirmDeleteDialog()}\n            </>\n        );\n    }\n}\n\nEditBar.propTypes = {\n    dashboardId: PropTypes.string,\n    dashboardName: PropTypes.string,\n    deleteAccess: PropTypes.bool,\n    updateAccess: PropTypes.bool,\n    onDelete: PropTypes.func,\n    onDiscardChanges: PropTypes.func,\n    onSave: PropTypes.func,\n    onTranslate: PropTypes.func,\n};\n\nEditBar.contextTypes = {\n    d2: PropTypes.object,\n};\n\nconst mapStateToProps = state => {\n    const dashboard = sGetEditDashboardRoot(state);\n\n    let deleteAccess;\n    let updateAccess;\n    if (sGetIsNewDashboard(state)) {\n        deleteAccess = true;\n        updateAccess = true;\n    } else {\n        updateAccess = dashboard.access ? dashboard.access.update : false;\n        deleteAccess = dashboard.access ? dashboard.access.delete : false;\n    }\n\n    return {\n        dashboardId: dashboard.id,\n        dashboardName: dashboard.name,\n        deleteAccess,\n        updateAccess,\n    };\n};\n\nconst mapDispatchToProps = dispatch => ({\n    onSave: () => dispatch(tSaveDashboard()).then(id => id),\n    onDelete: id => dispatch(tDeleteDashboard(id)),\n    onDiscardChanges: () => dispatch(acClearEditDashboard()),\n    onTranslate: (id, value) => dispatch(acSetDashboardDisplayName(id, value)),\n});\n\nexport default connect(\n    mapStateToProps,\n    mapDispatchToProps\n)(EditBar);\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport i18n from '@dhis2/d2-i18n';\nimport PropTypes from 'prop-types';\n\nimport { acSetEditDashboard } from '../../actions/editDashboard';\nimport { sGetSelectedId } from '../../reducers/selected';\nimport {\n    sGetDashboardById,\n    sGetDashboardItems,\n    sDashboardsIsFetching,\n} from '../../reducers/dashboards';\nimport DashboardVerticalOffset from './DashboardVerticalOffset';\nimport DashboardContent from './DashboardContent';\nimport EditBar from '../ControlBar/EditBar';\nimport NoContentMessage from '../../widgets/NoContentMessage';\n\nexport const Content = ({ updateAccess }) => {\n    return updateAccess ? (\n        <DashboardContent editMode={true} />\n    ) : (\n        <NoContentMessage text={i18n.t('No access')} />\n    );\n};\n\nContent.propTypes = {\n    updateAccess: PropTypes.bool,\n};\nexport class EditDashboard extends Component {\n    state = {\n        initialized: false,\n    };\n\n    initEditDashboard = () => {\n        if (this.props.dashboard) {\n            this.setState({ initialized: true });\n            this.props.setEditDashboard(this.props.dashboard, this.props.items);\n        }\n    };\n\n    componentDidMount() {\n        this.initEditDashboard();\n    }\n\n    componentDidUpdate() {\n        if (!this.state.initialized) {\n            this.initEditDashboard();\n        }\n    }\n\n    getDashboardContent = () => {\n        const contentNotReady =\n            !this.props.dashboardsLoaded || this.props.id === null;\n\n        return (\n            <div className=\"dashboard-wrapper\">\n                {contentNotReady ? null : (\n                    <Content updateAccess={this.props.updateAccess} />\n                )}\n            </div>\n        );\n    };\n\n    render() {\n        return (\n            <>\n                <EditBar />\n                <DashboardVerticalOffset editMode={true} />\n                {this.getDashboardContent()}\n            </>\n        );\n    }\n}\n\nEditDashboard.propTypes = {\n    dashboard: PropTypes.object,\n    dashboardsLoaded: PropTypes.bool,\n    id: PropTypes.string,\n    items: PropTypes.array,\n    setEditDashboard: PropTypes.func,\n    updateAccess: PropTypes.bool,\n};\n\nconst mapStateToProps = state => {\n    const id = sGetSelectedId(state);\n    const dashboard = id ? sGetDashboardById(state, id) : null;\n\n    const updateAccess =\n        dashboard && dashboard.access ? dashboard.access.update : false;\n\n    return {\n        dashboard,\n        id,\n        updateAccess,\n        items: sGetDashboardItems(state),\n        dashboardsLoaded: !sDashboardsIsFetching(state),\n    };\n};\n\nexport default connect(\n    mapStateToProps,\n    {\n        setEditDashboard: acSetEditDashboard,\n    }\n)(EditDashboard);\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\n\nimport { acSetEditNewDashboard } from '../../actions/editDashboard';\nimport DashboardVerticalOffset from './DashboardVerticalOffset';\nimport EditBar from '../ControlBar/EditBar';\nimport DashboardContent from './DashboardContent';\n\nclass NewDashboard extends Component {\n    componentDidMount() {\n        this.props.setNewDashboard();\n    }\n\n    render() {\n        return (\n            <>\n                <EditBar />\n                <DashboardVerticalOffset editMode={true} />\n                <div className=\"dashboard-wrapper\">\n                    <DashboardContent editMode={true} />\n                </div>\n            </>\n        );\n    }\n}\n\nNewDashboard.propTypes = {\n    setNewDashboard: PropTypes.func,\n};\n\nexport default connect(\n    null,\n    {\n        setNewDashboard: acSetEditNewDashboard,\n    }\n)(NewDashboard);\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\n\nimport { tSelectDashboard } from '../../actions/dashboards';\nimport { sDashboardsIsFetching } from '../../reducers/dashboards';\nimport { EDIT, NEW } from './dashboardModes';\nimport ViewDashboard from './ViewDashboard';\nimport EditDashboard from './EditDashboard';\nimport NewDashboard from './NewDashboard';\n\nclass Dashboard extends Component {\n    setDashboard = () => {\n        if (this.props.dashboardsLoaded) {\n            const id = this.props.match.params.dashboardId || null;\n\n            this.props.selectDashboard(id);\n\n            this.scrollToTop();\n        }\n    };\n\n    scrollToTop = () => {\n        window.scrollTo(0, 0);\n    };\n\n    componentDidMount() {\n        this.setDashboard();\n    }\n\n    componentDidUpdate() {\n        this.setDashboard();\n    }\n\n    render() {\n        switch (this.props.mode) {\n            case EDIT:\n                return <EditDashboard />;\n            case NEW:\n                return <NewDashboard />;\n            default:\n                return <ViewDashboard />;\n        }\n    }\n}\n\nDashboard.propTypes = {\n    dashboardsLoaded: PropTypes.bool,\n    match: PropTypes.object,\n    mode: PropTypes.string,\n    selectDashboard: PropTypes.func,\n};\n\nconst mapStateToProps = state => {\n    return { dashboardsLoaded: !sDashboardsIsFetching(state) };\n};\n\nexport default connect(\n    mapStateToProps,\n    {\n        selectDashboard: tSelectDashboard,\n    }\n)(Dashboard);\n","export const EDIT = 'edit';\nexport const NEW = 'new';\nexport const VIEW = 'view';\n","import React, { Component } from 'react';\nimport { HashRouter as Router, Route, Switch } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport i18n from '@dhis2/d2-i18n';\nimport { HeaderBar } from '@dhis2/ui-widgets';\nimport { CssVariables } from '@dhis2/ui-core';\n\nimport { EDIT, VIEW, NEW } from './Dashboard/dashboardModes';\nimport { acReceivedUser } from '../actions/user';\nimport { tFetchDashboards } from '../actions/dashboards';\nimport { tSetControlBarRows } from '../actions/controlBar';\nimport { tSetDimensions } from '../actions/dimensions';\nimport Dashboard from './Dashboard/Dashboard';\nimport SnackbarMessage from './SnackbarMessage/SnackbarMessage';\n\nimport 'typeface-roboto';\nimport './App.css';\n\nexport class App extends Component {\n    componentDidMount() {\n        this.props.setCurrentUser(this.props.d2.currentUser);\n        this.props.fetchDashboards();\n        this.props.setControlBarRows();\n        this.props.setDimensions(this.props.d2);\n    }\n\n    getChildContext() {\n        return { baseUrl: this.props.baseUrl, i18n, d2: this.props.d2 };\n    }\n\n    render() {\n        return (\n            <>\n                <CssVariables colors spacers />\n                <div className=\"app-wrapper\">\n                    <div className=\"dashboard-header-bar\">\n                        <HeaderBar appName={i18n.t('Dashboard')} />\n                    </div>\n                    <Router>\n                        <Switch>\n                            <Route\n                                exact\n                                path=\"/\"\n                                render={props => (\n                                    <Dashboard {...props} mode={VIEW} />\n                                )}\n                            />\n                            <Route\n                                exact\n                                path=\"/new\"\n                                render={props => (\n                                    <Dashboard {...props} mode={NEW} />\n                                )}\n                            />\n                            <Route\n                                exact\n                                path=\"/:dashboardId\"\n                                render={props => (\n                                    <Dashboard {...props} mode={VIEW} />\n                                )}\n                            />\n                            <Route\n                                exact\n                                path=\"/:dashboardId/edit\"\n                                render={props => (\n                                    <Dashboard {...props} mode={EDIT} />\n                                )}\n                            />\n                        </Switch>\n                    </Router>\n                    <SnackbarMessage />\n                </div>\n            </>\n        );\n    }\n}\n\nApp.propTypes = {\n    fetchDashboards: PropTypes.func.isRequired,\n    setControlBarRows: PropTypes.func.isRequired,\n    setCurrentUser: PropTypes.func.isRequired,\n    setDimensions: PropTypes.func.isRequired,\n    baseUrl: PropTypes.string,\n    d2: PropTypes.object,\n};\n\nApp.childContextTypes = {\n    baseUrl: PropTypes.string,\n    i18n: PropTypes.object,\n    d2: PropTypes.object,\n};\n\nconst mapDispatchToProps = dispatch => {\n    return {\n        setCurrentUser: currentUser => dispatch(acReceivedUser(currentUser)),\n        fetchDashboards: () => dispatch(tFetchDashboards()),\n        setControlBarRows: () => dispatch(tSetControlBarRows()),\n        setDimensions: d2 => dispatch(tSetDimensions(d2)),\n    };\n};\n\nexport default connect(\n    null,\n    mapDispatchToProps\n)(App);\n","import { RECEIVED_USER } from '../reducers/user';\n\nexport const acReceivedUser = value => ({\n    type: RECEIVED_USER,\n    value,\n});\n","//------------------------------------------------------------------------------\n// <auto-generated>\n    // This code was generated by d2-i18n-generate.\n    //\n    // Changes to this file may cause incorrect behavior and will be lost if\n    // the code is regenerated.\n    // </auto-generated>\n//------------------------------------------------------------------------------\nimport i18n from '@dhis2/d2-i18n';\nimport moment from 'moment';\nimport 'moment/locale/ar';\nimport 'moment/locale/es';\nimport 'moment/locale/fr';\nimport 'moment/locale/lo';\nimport 'moment/locale/nb';\nimport 'moment/locale/pt';\nimport 'moment/locale/ru';\nimport 'moment/locale/sv';\nimport 'moment/locale/tg';\nimport 'moment/locale/uk';\nimport 'moment/locale/ur';\nimport 'moment/locale/vi';\nimport 'moment/locale/zh-cn';\n\nimport arTranslations from './ar/translations.json';\nimport ar_IQTranslations from './ar_IQ/translations.json';\nimport daTranslations from './da/translations.json';\nimport enTranslations from './en/translations.json';\nimport esTranslations from './es/translations.json';\nimport frTranslations from './fr/translations.json';\nimport idTranslations from './id/translations.json';\nimport kmTranslations from './km/translations.json';\nimport loTranslations from './lo/translations.json';\nimport myTranslations from './my/translations.json';\nimport nbTranslations from './nb/translations.json';\nimport prsTranslations from './prs/translations.json';\nimport psTranslations from './ps/translations.json';\nimport ptTranslations from './pt/translations.json';\nimport pt_BRTranslations from './pt_BR/translations.json';\nimport ruTranslations from './ru/translations.json';\nimport svTranslations from './sv/translations.json';\nimport tetTranslations from './tet/translations.json';\nimport tgTranslations from './tg/translations.json';\nimport ukTranslations from './uk/translations.json';\nimport urTranslations from './ur/translations.json';\nimport viTranslations from './vi/translations.json';\nimport zhTranslations from './zh/translations.json';\nimport zh_CNTranslations from './zh_CN/translations.json';\n\nconst namespace = 'dashboards-app';\nmoment.locale('en');\n\ni18n.addResources('ar', namespace, arTranslations);\ni18n.addResources('ar_IQ', namespace, ar_IQTranslations);\ni18n.addResources('da', namespace, daTranslations);\ni18n.addResources('en', namespace, enTranslations);\ni18n.addResources('es', namespace, esTranslations);\ni18n.addResources('fr', namespace, frTranslations);\ni18n.addResources('id', namespace, idTranslations);\ni18n.addResources('km', namespace, kmTranslations);\ni18n.addResources('lo', namespace, loTranslations);\ni18n.addResources('my', namespace, myTranslations);\ni18n.addResources('nb', namespace, nbTranslations);\ni18n.addResources('prs', namespace, prsTranslations);\ni18n.addResources('ps', namespace, psTranslations);\ni18n.addResources('pt', namespace, ptTranslations);\ni18n.addResources('pt_BR', namespace, pt_BRTranslations);\ni18n.addResources('ru', namespace, ruTranslations);\ni18n.addResources('sv', namespace, svTranslations);\ni18n.addResources('tet', namespace, tetTranslations);\ni18n.addResources('tg', namespace, tgTranslations);\ni18n.addResources('uk', namespace, ukTranslations);\ni18n.addResources('ur', namespace, urTranslations);\ni18n.addResources('vi', namespace, viTranslations);\ni18n.addResources('zh', namespace, zhTranslations);\ni18n.addResources('zh_CN', namespace, zh_CNTranslations);\n\ni18n.setDefaultNamespace(namespace);\ni18n.changeLanguage('en');\n\nexport default i18n;\n","/** @module reducers/selected */\nimport { validateReducer } from '../modules/util';\n\nexport const SET_STYLE = 'SET_STYLE';\n\nexport const DEFAULT_STATE_STYLE = 'LIST';\n\n/**\n * Reducer functions that computes and returns the new state based on the given action\n * @function\n * @param {Object} state The current state\n * @param {Object} action The action to be evaluated\n */\nconst style = (state = DEFAULT_STATE_STYLE, action) => {\n    switch (action.type) {\n        case SET_STYLE:\n            return validateReducer(action.value, DEFAULT_STATE_STYLE);\n        default:\n            return state;\n    }\n};\n\nexport default style;\n\n/**\n * Selectors that point to specific props in the state object\n * @function\n * @param {Object} state\n * @returns {Object}\n */\nexport const sGetStyleRoot = state => state.style;\n","import { combineReducers } from 'redux';\nimport arraySort from 'd2-utilizr/lib/arraySort';\n\nimport dashboards, { sGetDashboardsRoot } from './dashboards';\nimport selected from './selected';\nimport dashboardsFilter, {\n    ownerData,\n    sGetFilterName,\n    sGetFilterOrder,\n    sGetFilterOwner,\n} from './dashboardsFilter';\nimport controlBar from './controlBar';\nimport visualizations from './visualizations';\nimport editDashboard from './editDashboard';\nimport messages from './messages';\nimport user from './user';\nimport snackbar from './snackbar';\nimport itemFilters from './itemFilters';\nimport editItemFilters from './editItemFilters';\nimport style from './style';\nimport dimensions from './dimensions';\nimport settings from './settings';\nimport activeModalDimension from './activeModalDimension';\n\nconst USER = 'system';\n\n// Reducers\n\nexport default combineReducers({\n    dashboards,\n    selected,\n    dashboardsFilter,\n    controlBar,\n    visualizations,\n    messages,\n    user,\n    editDashboard,\n    itemFilters,\n    editItemFilters,\n    style,\n    snackbar,\n    dimensions,\n    settings,\n    activeModalDimension,\n});\n\n// Map constants to data\nconst mapConstToData = {\n    NAME: 'name',\n    ITEMS: 'numberOfItems',\n    CREATED: 'created',\n    OWNER: 'owner',\n};\n\n// Selectors\n\n// Filter dashboards by name\nexport const sFilterDashboardsByName = (dashboards, filter) =>\n    dashboards.filter(d =>\n        d.displayName.toLowerCase().includes(filter.toLowerCase())\n    );\n\n// Filter dashboards by owner, TODO FIXME\nexport const sFilterDashboardsByOwner = (dashboards, filter) => {\n    const ME = ownerData[1]; // TODO\n    const OTHERS = ownerData[2]; // TODO\n\n    switch (filter) {\n        case ME:\n            return dashboards.filter(d => d.owner === USER);\n        case OTHERS:\n            return dashboards.filter(d => d.owner !== USER);\n        default:\n            return dashboards;\n    }\n};\n\n// Filter dashboards by order\nexport const sFilterDashboardsByOrder = (dashboards, filter) => {\n    const filterValues = filter.split(':');\n\n    const key = filterValues[0];\n    const direction = filterValues[1];\n\n    return arraySort(dashboards, direction, mapConstToData[key]);\n};\n\n// Selectors dependency level 2\n\n// Get filtered dashboards\nexport const sGetFilteredDashboards = state => {\n    const dashboards = sGetDashboardsRoot(state);\n\n    const nameFilter = sGetFilterName(state);\n    const ownerFilter = sGetFilterOwner(state);\n    const orderFilter = sGetFilterOrder(state);\n\n    return sFilterDashboardsByOrder(\n        sFilterDashboardsByName(\n            sFilterDashboardsByOwner(dashboards, ownerFilter),\n            nameFilter\n        ),\n        orderFilter\n    );\n};\n","import { createStore, applyMiddleware, compose } from 'redux';\nimport { createLogger } from 'redux-logger';\nimport thunk from 'redux-thunk';\nimport reducer from './reducers';\n\nconst configureStore = () => {\n    const middleware = [thunk];\n\n    // Enable Redux devtools if extension is installed instead of redux-logger\n    const composeEnhancers =\n        window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\n    if (\n        !window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ &&\n        process.env.NODE_ENV !== 'production'\n    ) {\n        middleware.push(createLogger());\n    }\n\n    return createStore(\n        reducer,\n        composeEnhancers(applyMiddleware(...middleware))\n    );\n};\n\nexport default configureStore;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport { MuiThemeProvider, createMuiTheme } from '@material-ui/core/styles';\nimport { init as d2Init, config, getManifest, getUserSettings } from 'd2';\nimport dhis2theme from '@dhis2/d2-ui-core/theme/mui3.theme';\n\nimport { Provider as RuntimeProvider } from '@dhis2/app-runtime';\nimport { CssReset } from '@dhis2/ui-core';\n\nimport App from './components/App';\nimport './index.css';\nimport i18n from './locales';\nimport configureStore from './configureStore';\n\nconst muiTheme = () => createMuiTheme(dhis2theme);\n\nconst configI18n = userSettings => {\n    const uiLocale = userSettings.keyUiLocale;\n\n    if (uiLocale && uiLocale !== 'en') {\n        config.i18n.sources.add(`./i18n/i18n_module_${uiLocale}.properties`);\n    }\n\n    config.i18n.sources.add('./i18n/i18n_module_en.properties');\n    i18n.changeLanguage(uiLocale);\n};\n\nconst init = async () => {\n    const manifest = await getManifest('./manifest.webapp');\n\n    // log app info\n    console.info(\n        `Dashboards app, v${manifest.version}, ${\n            manifest.manifest_generated_at\n        }`\n    );\n\n    const isProd = process.env.NODE_ENV === 'production';\n\n    if (\n        !isProd &&\n        (!process.env.REACT_APP_DHIS2_BASE_URL ||\n            !process.env.REACT_APP_DHIS2_AUTHORIZATION)\n    ) {\n        throw new Error(\n            'Missing env variables REACT_APP_DHIS2_BASE_URL and REACT_APP_DHIS2_AUTHORIZATION'\n        );\n    }\n\n    // api config\n    const baseUrl = isProd\n        ? manifest.activities.dhis.href\n        : process.env.REACT_APP_DHIS2_BASE_URL;\n    const authorization = process.env.REACT_APP_DHIS2_AUTHORIZATION;\n\n    config.baseUrl = `${baseUrl}/api/${manifest.dhis2.apiVersion}`;\n    config.headers = isProd ? null : { Authorization: authorization };\n    config.schemas = [\n        'chart',\n        'map',\n        'report',\n        'reportTable',\n        'eventChart',\n        'eventReport',\n        'dashboard',\n        'organisationUnit',\n        'userGroup',\n    ];\n\n    getUserSettings()\n        .then(configI18n)\n        .then(() => d2Init(config))\n        .then(initializedD2 => {\n            ReactDOM.render(\n                <RuntimeProvider\n                    config={{\n                        baseUrl: baseUrl,\n                        apiVersion: manifest.dhis2.apiVersion,\n                    }}\n                >\n                    <CssReset />\n                    <Provider store={configureStore()}>\n                        <MuiThemeProvider theme={muiTheme()}>\n                            <App baseUrl={baseUrl} d2={initializedD2} />\n                        </MuiThemeProvider>\n                    </Provider>\n                </RuntimeProvider>,\n                document.getElementById('root')\n            );\n        });\n};\n\ninit();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"ControlBar_root__3LaTt\",\"content\":\"ControlBar_content__1r98-\",\"draghandle\":\"ControlBar_draghandle__1VWa0\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"FatalErrorBoundary_container__x6zhd\",\"icon\":\"FatalErrorBoundary_icon__2XjC2\",\"message\":\"FatalErrorBoundary_message__2p9y8\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"showMore\":\"ShowMoreButton_showMore__rWqw9\",\"disabled\":\"ShowMoreButton_disabled__2oX7G\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"ClearButton_button__2yjcV\",\"icon\":\"ClearButton_icon__1fqj8\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"textDiv\":\"Item_textDiv__2b-T5\"};","import isObject from 'lodash/isObject';\nimport { VIS_TYPE_COLUMN, VIS_TYPE_PIVOT_TABLE } from '@dhis2/analytics';\nimport { apiFetchFavorite, getMapFields } from '../../../api/metadata';\nimport {\n    REPORT_TABLE,\n    CHART,\n    MAP,\n    EVENT_REPORT,\n    EVENT_CHART,\n    itemTypeMap,\n} from '../../../modules/itemTypes';\nimport { getBaseUrl, getWithoutId } from '../../../modules/util';\nimport { getGridItemDomId } from '../../ItemGrid/gridUtil';\n\n//external plugins\nconst itemTypeToExternalPlugin = {\n    [MAP]: 'mapPlugin',\n    [EVENT_REPORT]: 'eventReportPlugin',\n    [EVENT_CHART]: 'eventChartPlugin',\n};\nconst hasIntegratedPlugin = type => [CHART, REPORT_TABLE].includes(type);\n\nconst getPlugin = type => {\n    if (hasIntegratedPlugin(type)) {\n        return true;\n    }\n    const pluginName = itemTypeToExternalPlugin[type];\n\n    return global[pluginName];\n};\n\nexport const THEMATIC_LAYER = 'thematic';\n\nexport const pluginIsAvailable = (item = {}, visualization = {}) => {\n    const type = visualization.activeType || item.type;\n\n    return !!getPlugin(type);\n};\n\nexport const extractFavorite = item => {\n    if (!isObject(item)) {\n        return null;\n    }\n\n    const propName = itemTypeMap[item.type].propName;\n\n    return (\n        item[propName] ||\n        (item.reportTable ||\n            item.chart ||\n            item.map ||\n            item.eventReport ||\n            item.eventChart ||\n            {})\n    );\n};\n\nexport const extractMapView = map =>\n    map.mapViews && map.mapViews.find(mv => mv.layer.includes(THEMATIC_LAYER));\n\nexport const loadPlugin = (plugin, config, credentials) => {\n    if (!(plugin && plugin.load)) {\n        return;\n    }\n\n    plugin.url = credentials.baseUrl;\n    plugin.loadingIndicator = true;\n    plugin.dashboard = true;\n    if (credentials.auth) {\n        plugin.auth = credentials.auth;\n    }\n    plugin.load(config);\n};\n\nexport const getId = item => extractFavorite(item).id;\nexport const getName = item => extractFavorite(item).name;\nexport const getDescription = item => extractFavorite(item).description;\nexport const getLink = (item, d2) => {\n    const baseUrl = getBaseUrl(d2);\n    const appUrl = itemTypeMap[item.type].appUrl(getId(item));\n\n    return `${baseUrl}/${appUrl}`;\n};\n\nexport const load = async (\n    item,\n    visualization,\n    { credentials, activeType, options = {} }\n) => {\n    const config = {\n        ...visualization,\n        ...options,\n        el: getGridItemDomId(item.id),\n    };\n\n    const type = activeType || item.type;\n    const plugin = getPlugin(type);\n\n    loadPlugin(plugin, config, credentials);\n};\n\nexport const fetch = async item => {\n    const fetchedFavorite = await apiFetchFavorite(getId(item), item.type, {\n        fields: item.type === MAP ? getMapFields() : null,\n    });\n\n    return fetchedFavorite;\n};\n\nexport const resize = item => {\n    const plugin = getPlugin(item.type);\n\n    if (plugin && plugin.resize) {\n        plugin.resize(getGridItemDomId(item.id));\n    }\n};\n\nexport const unmount = (item, activeType) => {\n    const plugin = getPlugin(activeType);\n\n    if (plugin && plugin.unmount) {\n        plugin.unmount(getGridItemDomId(item.id));\n    }\n};\n\nexport const getVisualizationConfig = (\n    visualization,\n    originalType,\n    activeType\n) => {\n    if (originalType === MAP && originalType !== activeType) {\n        const extractedMapView = extractMapView(visualization);\n\n        if (extractedMapView === undefined) {\n            return null;\n        }\n\n        return getWithoutId({\n            ...visualization,\n            ...extractedMapView,\n            mapViews: undefined,\n            type: activeType === CHART ? VIS_TYPE_COLUMN : VIS_TYPE_PIVOT_TABLE,\n        });\n    } else if (originalType === REPORT_TABLE && activeType === CHART) {\n        return getWithoutId({ ...visualization, type: VIS_TYPE_COLUMN });\n    } else if (originalType === CHART && activeType === REPORT_TABLE) {\n        return getWithoutId({\n            ...visualization,\n            type: VIS_TYPE_PIVOT_TABLE,\n        });\n    }\n\n    return getWithoutId(visualization);\n};\n","import isFunction from 'd2-utilizr/lib/isFunction';\n\nimport { orObject } from '../../modules/util';\n\n// Dimensions for the react-grid-layout\n\nexport const GRID_COMPACT_TYPE = 'vertical'; // vertical | horizonal | null\nexport const GRID_ROW_HEIGHT = 10;\nconst GRID_COLUMN_WIDTH_PX = 20;\nconst GRID_LAYOUT = 'FLEXIBLE'; // FIXED | FLEXIBLE\nexport const MARGIN = [10, 10];\n\nexport const NEW_ITEM_SHAPE = { x: 0, y: 0, w: 20, h: 29 };\n\n// Dimensions for getShape\n\nconst NUMBER_OF_ITEM_COLS = 2;\nconst GRID_COLUMNS = 60;\n\nexport const getGridColumns = () => {\n    switch (GRID_LAYOUT) {\n        case 'FLEXIBLE':\n            return GRID_COLUMNS;\n        case 'FIXED':\n            return Math.floor((window.innerWidth - 20) / GRID_COLUMN_WIDTH_PX);\n        default:\n            return GRID_COLUMNS;\n    }\n};\n\n// isNonNegativeInteger\n\nconst isNonNegativeInteger = x => Number.isInteger(x) && x >= 0;\n\n// Does the item have all the shape properties?\n\nexport const hasShape = item =>\n    isNonNegativeInteger(item.x) &&\n    isNonNegativeInteger(item.y) &&\n    isNonNegativeInteger(item.w) &&\n    isNonNegativeInteger(item.h);\n\n// returns a rectangular grid block dimensioned with x, y, w, h in grid units.\n// based on a grid with 3 items across\nexport const getShape = i => {\n    if (!isNonNegativeInteger(i)) {\n        throw new Error('Invalid grid block number');\n    }\n\n    const col = i % NUMBER_OF_ITEM_COLS;\n    const row = Math.floor(i / NUMBER_OF_ITEM_COLS);\n    const itemWidth = Math.floor((GRID_COLUMNS - 1) / NUMBER_OF_ITEM_COLS);\n    const itemHeight = GRID_ROW_HEIGHT * 2;\n\n    return {\n        x: col * itemWidth,\n        y: row * itemHeight,\n        w: itemWidth,\n        h: itemHeight,\n    };\n};\n\nexport const getGridItemProperties = itemId => {\n    return {\n        i: itemId,\n        minH: 4, // minimum height for item\n    };\n};\n\n/**\n * Calculates the grid item's original height in pixels based\n * on the height in grid units. This calculation\n * is copied directly from react-grid-layout GridItem.js (calcPosition)\n *\n * @param {Object} item item containing shape (x, y, w, h)\n */\nconst getOriginalHeight = item => {\n    const originalHeight = Math.round(\n        GRID_ROW_HEIGHT * item.h + Math.max(0, item.h - 1) * MARGIN[1]\n    );\n\n    return { originalHeight };\n};\n\n/**\n * Returns an array of items containing the x, y, w, h dimensions\n * and the item's originalheight in pixels\n * @function\n * @param {Array} items\n * @returns {Array}\n */\n\nexport const withShape = items =>\n    items.map((item, index) => {\n        const itemWithShape = hasShape(item)\n            ? item\n            : Object.assign({}, item, getShape(index));\n\n        return Object.assign(\n            {},\n            itemWithShape,\n            getOriginalHeight(itemWithShape)\n        );\n    });\n\nexport const getGridItemDomId = id => `item-${id}`;\n\nexport function onItemResize(id) {\n    const el = orObject(document.querySelector(`#${getGridItemDomId(id)}`));\n    if (isFunction(el.setViewportSize))\n        setTimeout(\n            () => el.setViewportSize(el.clientWidth - 5, el.clientHeight - 5),\n            10\n        );\n}\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"showMoreButton\":\"CategorizedMenuGroup_showMoreButton__3-0Wa\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"deleteItemButton\":\"DeleteItemButton_deleteItemButton__4YLrM\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"center\":\"LoadingMask_center__GnxG9\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"bar\":\"FilterBar_bar__2mF3Z\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"content\":\"ConfirmDeleteDialog_content__1IFNx\"};"],"sourceRoot":""}
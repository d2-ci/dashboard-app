{"version":3,"sources":["api/metadata.js","components/Item/ListItem/Item.module.css","modules/itemTypes.js","components/TitleBar/styles/EditTitleBar.module.css","components/TitleBar/styles/ViewTitleBar.module.css","components/ControlBar/styles/DashboardsBar.module.css","components/ControlBar/styles/DashboardItemChip.module.css","components/ItemSelector/styles/ContentMenuItem.module.css","components/Item/styles/ItemHeader.module.css","reducers/user.js","modules/uiBackendItemConverter.js","reducers/dashboards.js","reducers/editDashboard.js","reducers/editItemFilters.js","reducers/selected.js","actions/editItemFilters.js","reducers/itemFilters.js","actions/itemFilters.js","reducers/messages.js","api/messages.js","reducers/snackbar.js","actions/snackbar.js","reducers/visualizations.js","actions/visualizations.js","api/index.js","api/dashboards.js","components/SnackbarMessage/SnackbarMessage.js","actions/selected.js","api/localStorage.js","components/Item/MessagesItem/actions.js","api/editDashboard.js","actions/editDashboard.js","actions/dashboards.js","reducers/controlBar.js","api/controlBar.js","actions/controlBar.js","reducers/dimensions.js","reducers/settings.js","actions/dimensions.js","components/ControlBar/ShowMoreButton.js","components/ControlBar/controlBarDimensions.js","components/ControlBar/ControlBar.js","icons/Star.js","api/dataStatistics.js","components/ControlBar/DashboardItemChip.js","icons/AddCircle.js","icons/Clear.js","components/ControlBar/ClearButton.js","reducers/dashboardsFilter.js","components/ControlBar/Filter.js","components/ControlBar/DashboardsBar.js","actions/dashboardsFilter.js","components/Dashboard/DashboardVerticalOffset.js","components/ItemSelector/HeaderMenuItem.js","icons/Launch.js","components/ItemSelector/ContentMenuItem.js","components/ItemSelector/selectableItems.js","components/ItemSelector/CategorizedMenuGroup.js","components/ItemSelector/actions.js","components/ItemSelector/SinglesMenuGroup.js","components/ItemSelector/ItemSelector.js","components/TitleBar/EditTitleBar.js","components/ItemFilter/FilterDialog.js","reducers/activeModalDimension.js","actions/activeModalDimension.js","components/ItemFilter/FilterSelector.js","components/TitleBar/Info.js","components/TitleBar/ViewTitleBar.js","components/TitleBar/TitleBar.js","components/Item/VisualizationItem/DefaultPlugin.js","components/Item/VisualizationItem/assets/icons.js","components/Item/VisualizationItem/FatalErrorBoundary.js","components/Item/DeleteItemButton.js","components/Item/ItemHeader.js","components/Item/VisualizationItem/ItemHeaderButtons.js","components/Item/VisualizationItem/ItemFooter.js","modules/memoizeOne.js","components/Item/VisualizationItem/LoadingMask.js","components/Item/VisualizationItem/Item.js","widgets/Line.js","components/Item/MessagesItem/Item.js","components/Item/NotSupportedItem/Item.js","icons/Description.js","icons/Delete.js","components/Item/ListItem/Item.js","components/Item/ListItem/actions.js","components/Item/TextItem/Item.js","components/Item/AppItem/Item.js","components/Item/SpacerItem/Item.js","components/Item/Item.js","widgets/NoContentMessage.js","components/Item/ProgressiveLoadingContainer.js","components/ItemGrid/ItemGrid.js","components/FilterBar/FilterBadge.js","components/FilterBar/FilterBar.js","components/Dashboard/DashboardContent.js","components/Dashboard/ViewDashboard.js","components/ControlBar/ConfirmDeleteDialog.js","components/ControlBar/EditBar.js","components/Dashboard/EditDashboard.js","components/Dashboard/NewDashboard.js","components/Dashboard/Dashboard.js","components/Dashboard/dashboardModes.js","components/App.js","actions/user.js","locales/index.js","reducers/style.js","reducers/index.js","configureStore.js","index.js","modules/util.js","components/ControlBar/styles/ControlBar.module.css","components/Item/VisualizationItem/styles/FatalErrorBoundary.module.css","components/ControlBar/styles/ShowMoreButton.module.css","components/ControlBar/styles/ClearButton.module.css","components/Item/VisualizationItem/styles/Item.module.css","components/Item/VisualizationItem/plugin.js","components/ItemGrid/gridUtil.js","components/ItemSelector/styles/CategorizedMenuGroup.module.css","components/Item/styles/DeleteItemButton.module.css","components/Item/VisualizationItem/styles/LoadingMask.module.css","components/FilterBar/styles/FilterBar.module.css","components/ControlBar/styles/ConfirmDeleteDialog.module.css"],"names":["getIdNameFields","rename","arguments","length","undefined","concat","getDimensionFields","_ref2","withItems","arrayClean","join","getAxesFields","_ref3","getFavoriteFields","_ref4","withDimensions","withOptions","getFavoritesFields","_ref5","Object","_home_travis_build_dhis2_dashboards_app_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_toConsumableArray__WEBPACK_IMPORTED_MODULE_0__","getListItemFields","getMapFields","apiFetchFavorite","id","type","_ref6","fields","getInstance","then","d2","Api","getApi","get","getEndPointName","module","exports","list","item","itemicon","link","deleteicon","deletebutton","VISUALIZATION","REPORT_TABLE","CHART","MAP","EVENT_REPORT","EVENT_CHART","APP","REPORTS","RESOURCES","USERS","MESSAGES","TEXT","SPACER","isVisualizationType","itemTypeMap","hasMapView","itemType","domainType","isTrackerDomainType","getDefaultItemCount","defaultItemCount","getAppName","appName","_itemTypeMap","_home_travis_build_dhis2_dashboards_app_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_defineProperty__WEBPACK_IMPORTED_MODULE_0__","endPointName","propName","pluralTitle","i18n","t","appUrl","Date","getTime","getItemUrl","url","launchUrl","getBaseUrl","getItemIcon","TableIcon","ChartIcon","MapIcon","ExtensionIcon","DescriptionIcon","PersonIcon","FontDownloadIcon","EmailIcon","CropFreeIcon","NotInterestedIcon","section","titleDescription","title","description","itemSelector","actions","editLink","titleBar","titleBarIcon","leftControls","rightControls","icon","selected","unselected","menuItem","launchLink","label","buttonInsert","itemWrap","itemHeaderWrap","itemTitle","itemActionsWrap","DEFAULT_STATE_USER","username","uiLocale","isSuperuser","sGetUserUsername","state","user","spacerContent","isTextType","text","convertUiItemsToBackend","items","map","isUiSpacerType","objectSpread","convertBackendItemsToUi","isBackendSpacerType","gridProperties","getGridItemProperties","DEFAULT_STATE_DASHBOARDS","byId","updateDashboardProp","_ref","dashboardId","prop","value","defineProperty","sGetDashboardsRoot","dashboards","sGetDashboardById","orObject","sDashboardsIsFetching","sGetAllDashboards","sGetDashboardItems","sGetStarredDashboards","values","filter","dashboard","starred","sGetUnstarredDashboards","sGetDashboardsSortedByStarred","toConsumableArray","arraySort","getCustomDashboards","data","arrayFrom","d","name","displayName","displayDescription","favorite","owner","created","split","substr","lastUpdated","access","numberOfItems","orArray","dashboardItems","DEFAULT_STATE_EDIT_DASHBOARD","NEW_DASHBOARD_STATE","sGetEditDashboardRoot","editDashboard","sGetIsEditing","isEmpty","sGetEditDashboardItems","DEFAULT_STATE_EDIT_ITEM_FILTERS","sGetEditItemFiltersRoot","editItemFilters","combineReducers","action","validateReducer","isLoading","showDescription","sGetSelectedRoot","sGetSelectedId","sGetSelectedIsLoading","sGetSelectedShowDescription","acRemoveEditItemFilter","DEFAULT_STATE_ITEM_FILTERS","sGetItemFiltersRoot","itemFilters","sGetFiltersKeys","keys","acRemoveItemFilter","sGetMessagesRoot","messages","getMessages","catch","error","console","log","DEFAULT_STATE_SNACKBAR","message","duration","open","acCloseSnackbar","DEFAULT_STATE_VISUALIZATIONS","p","sGetVisualization","visualizations","sGetVisualizationsRoot","acAddVisualization","onError","getDashboardItemsFields","withFavorite","getDashboardFields","apiFetchDashboard","models","apiStarDashboard","isStarred","post","delete","apiDeleteDashboard","loadingDashboardMsg","SnackbarMessageContent","react_default","a","createElement","style","fontWeight","connect","_sGetSnackbar","snackbar","sGetSnackbar","snackbarOpen","snackbarMessage","snackbarDuration","onCloseSnackbar","props","Snackbar_default","zIndex","SnackbarMessage_SnackbarMessageContent","autoHideDuration","onClose","acSetSelectedId","acSetSelectedIsLoading","tLoadDashboard","asyncToGenerator","regenerator_default","mark","_callee","dispatch","dash","wrap","_context","prev","next","sent","acAppendDashboards","abrupt","Promise","resolve","t0","stop","_x","apply","this","tSetSelectedDashboardById","_callee2","getState","snackbarTimeout","onSuccess","_context2","setTimeout","dashboardName","customDashboard","acSetDashboardItems","withShape","localStorage","setItem","forEach","extractFavorite","messageConversations","filters","clearTimeout","_x2","_x3","saveDashboard","assign","width","w","height","h","save","msg","response","uid","updateDashboard","postDashboard","create","acAddDashboardItem","itemPropName","generateUid","gridItemProperties","content","NEW_ITEM_SHAPE","acUpdateDashboardItem","acRemoveDashboardItem","arrayToIdMap","acSetDashboardStarred","tFetchDashboards","collection","paging","toArray","userRows","sGetControlBarUserRows","controlBar","sGetControlBarRoot","KEY","hasNamespace","currentUser","dataStore","has","getNamespace","apiGetControlBarRows","_callee3","namespace","_context3","t1","t2","find","key","apiPostControlBarRows","_callee4","rows","_context4","set","_x4","_x5","acSetControlBarUserRows","DEFAULT_DIMENSIONS","getDimensionById","DIMENSION_ID_PERIOD","DIMENSION_ID_ORGUNIT","sGetDimensions","dimensions","DEFAULT_SETTINGS","keyDateFormat","keyAnalysisRelativePeriod","keyAnalysisDigitGroupSeparator","displayNameProperty","rootOrganisationUnit","sGetSettings","settings","sGetSettingsDisplayNameProperty","acSetDimensions","ShowMoreButton","onClick","isMaxHeight","disabled","textAlign","className","classes","showMore","MIN_ROW_COUNT","getRowsHeight","getNumRowsFromHeight","Math","floor","FIRST_ROW_PADDING_HEIGHT","getTopOffset","getControlBarHeight","ControlBar","_this","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","onStartDrag","setState","dragging","window","addEventListener","onDrag","onEndDrag","event","preventDefault","stopPropagation","newHeight","clientY","onChangeHeight","requestAnimationFrame","removeEventListener","draghandle","onMouseDown","max","rootStyle","top","backgroundColor","editMode","colors","yellow050","white","paddingBottom","transition","root","children","renderDragHandle","React","Component","defaultProps","StarIcon","xmlns","viewBox","fill","apiPostDataStatistics","eventType","DashboardItemChip","chipProps","selectedState","Star","react_router_dom","to","debounce","es_lib","AddCircleIcon","teal600","ClearIcon","grey800","ClearButton","onClear","button","Clear","color","ownerData","DEFAULT_STATE_DASHBOARDS_FILTER_NAME","DEFAULT_STATE_DASHBOARDS_FILTER_OWNER","order","sGetDashboardsFilterRoot","dashboardsFilter","sGetFilterName","styles","filterField","fontSize","searchIcon","grey700","KEYCODE_ENTER","KEYCODE_ESCAPE","Filter","_Component","setFilterValue","onChangeName","target","handleKeyUp","keyCode","onKeypressEnter","inherits","createClass","nextProps","_this$props","startAdornment","InputAdornment_default","position","Search_default","endAdornment","ControlBar_ClearButton","Input_default","placeholder","onChange","onKeyUp","Function","prototype","withStyles","MAX_ROW_COUNT","DashboardsBar","_getPrototypeOf2","_len","args","Array","_key","setInitialDashboardState","adjustedHeight","newRows","newRowCount","min","onToggleMaxHeight","onSelectDashboard","history","push","selectedId","onChangeFilterName","rowCount","controlBarHeight","contentWrapperStyle","padding","overflowY","components_ControlBar_ControlBar","display","textDecoration","marginRight","AddCircle","ControlBar_Filter","ControlBar_DashboardItemChip","ControlBar_ShowMoreButton","mapDispatchToProps","withRouter","stateProps","dispatchProps","ownProps","displayDashboards","toLowerCase","includes","marginTop","HeaderMenuItem","dense","LaunchIcon","grey600","LaunchLink","e","rel","href","Launch","InsertButton","ContentMenuItem","onInsert","visType","ItemIcon","renderedItemIcon","visTypeIcons","ContentMenuItem_LaunchLink","ContentMenuItem_InsertButton","singleItems","header","categorizedItems","listItemTypes","CategorizedMenuGroup","addItem","tAddListItemContent","newItem","toggleSeeMore","seeMore","onChangeItemsLimit","_this2","_this$props2","hasMore","Fragment","ItemSelector_HeaderMenuItem","itemUrl","context","ItemSelector_ContentMenuItem","showMoreButton","margin","contextTypes","PropTypes","object","isRequired","dashboardItem","listItemType","dashboardItemIndex","findIndex","category","addToDashboard","ItemSearchField","onFocus","ItemSelector","closeList","openList","_","fetchItems","anchorEl","currentTarget","setFilter","getCategorizedMenuGroups","itemCount","allItems","maxOptions","slice","ItemSelector_CategorizedMenuGroup","getSinglesMenuGroups","ItemSelector_SinglesMenuGroup","getMenuGroups","queryString","add","Set","ItemSelector_ItemSearchField","Popover_default","anchorOrigin","horizontal","vertical","transformOrigin","PaperProps","disableAutoFocus","disableEnforceFocus","disableRestoreFocus","maxWidth","EditTitleBar","onChangeTitle","onChangeDescription","components_ItemSelector_ItemSelector","selectedDashboard","peId","ouId","FilterDialog","onConfirm","dimension","selectedItems","dialogId","commonProps","onSelect","onDeselect","onReorder","build","selectedPeriods","ouItems","dialogTitle","Dialog_default","dialogContent","DialogActions_default","kind","DEFAULT_STATE_ACTIVE_MODAL_DIMENSION","sGetActiveModalDimension","activeModalDimension","acSetActiveModalDimension","FilterSelector","openPanel","closePanel","closeDialog","clearActiveModalDimension","selectDimension","setActiveModalDimension","onSelectItems","dimensionId","setEditItemFilters","onDeselectItems","itemIdsToRemove","newList","removeEditItemFilter","onReorderItems","itemIds","oldList","reorderedList","saveFilter","filterItems","addItemFilter","removeItemFilter","selectedDimensions","ArrowDropDown_default","Boolean","onDimensionClick","selectedIds","ItemFilter_FilterDialog","Info","show","toggle","InfoOutlined_default","NO_DESCRIPTION","ViewTitleBar","toggleSharingDialog","sharingDialogIsOpen","onStarClick","onInfoClick","titleStyle","cursor","userSelect","StarBorder","TitleBar_Info","marginLeft","update","manage","ItemFilter_FilterSelector","paddingTop","d2_ui_sharing_dialog_default","onRequestClose","tStarDashboard","black","minWidth","TitleBar","edit","TitleBar_EditTitleBar","TitleBar_ViewTitleBar","DefaultPlugin","pluginCredentials","shouldPluginReload","prevProps","reloadAllowed","filtersChanged","vis","visualization","prevVis","visChanged","activeType","reloadPlugin","pluginManager","currentVis","useActiveType","credentials","getActiveType","baseUrl","auth","defaultHeaders","Authorization","options","getGridItemDomId","textDiv","ThreeDots","SpeechBubble","fillRule","transform","Warning","FatalErrorBoundary","errorFound","info","container","icons_Warning","DeleteItemButton","deleteItemButton","Delete_default","red500","HEADER_MARGIN_HEIGHT","ItemHeader","forwardRef","ref","itemId","actionButtons","Item_DeleteItemButton","iconFill","ItemHeaderButtons","_useState","useState","_useState2","slicedToArray","setAnchorEl","onSelectActiveType","isTrackerType","onViewTable","handleClose","onViewChart","onViewMap","canViewAs","isSingleValue","isYearOverYear","VIS_TYPE_GAUGE","VIS_TYPE_PIE","interpretationMenuLabel","activeFooter","pluginIsAvailable","small","secondary","icons_ThreeDots","InsertChart_default","ViewList_default","Public_default","Launch_default","getLink","icons_SpeechBubble","onToggleFooter","scrollContainer","line","border","grey100","ItemFooter","objectId","getId","d2_ui_interpretations_default","memoizeOne","fn","lastArgs","lastValue","every","arg","i","LoadingMask","center","Item","showFooter","configLoaded","pluginIsLoaded","applyFilters","visRows","obj","visColumns","columns","visFilters","dimensionFound","dimensionObjects","getUniqueKey","uniqueId","getPluginComponent","memoizedGetVisualizationConfig","calculatedHeight","originalHeight","headerRef","current","clientHeight","ITEM_CONTENT_PADDING_BOTTOM","memoizedGetContentStyle","contentRef","offsetHeight","VisualizationItem_LoadingMask","data_visualizer_plugin_build_es_lib","memoizedApplyFilters","onLoadingComplete","forDashboard","mapViews","layer","hideTitle","VisualizationItem_DefaultPlugin","onToggleItemExpanded","getContentStyle","measuredHeight","createRef","getVisualizationConfig","_componentDidMount","onVisualizationLoaded","prevState","VisualizationItem_ItemHeaderButtons","Item_ItemHeader","VisualizationItem_FatalErrorBoundary","VisualizationItem_ItemFooter","acSetActiveVisualizationType","grey200","Line","PRIVATE","messageTypes","_messageTypes","listStyleType","paddingLeft","seeAll","marginBottom","sender","lineHeight","snippet","maxHeight","overflow","MessagesItem","getMessageHref","msgIdentifier","messageType","getMessageSender","latestMsg","getMessageItems","editClass","readClass","read","msgDate","document","location","messageCount","formatDate","userSettings","widgets_Line","string","MessagesContainer","NotSupportedItem","justifyContent","alignItems","NotInterested_default","align","grey500","DeleteIcon","getItemTitle","ListItem","tRemoveListItemContent","contentItems","index","array","el","getContentItems","contentItem","Description","deleteButton","icons_Delete","grey900","newContent","whiteSpace","textField","fontStretch","onChangeText","updatedItem","d2_ui_rich_text","onEdit","multiline","fullWidth","textDivStyle","viewItem","getIframeSrc","appDetails","iframeSrc","ouIds","ouPath","AppItem","appKey","system","installedApps","app","src","SpacerItem","GridItem","VisualizationItem","TextItem","getGridItem","NoContentMessage","ProgressiveLoadingContainer","shouldLoad","containerRef","shouldLoadHandler","bufferPx","bufferFactor","innerHeight","rect","getBoundingClientRect","bottom","removeHandler","checkShouldLoad","debounceMs","registerHandler","_this3","objectWithoutProperties","eventProps","pick","EXPANDED_HEIGHT","ItemGrid","expandedItems","clickedId","isExpanded","onRemoveItem","onLayoutChange","newLayout","acUpdateDashboardLayout","onResizeStop","layout","oldItem","onItemResize","pluginResize","onRemoveItemWrapper","adjustHeightForExpanded","expandedItem","getItemComponent","itemClassNames","Item_ProgressiveLoadingContainer","Item_Item_Item","getItemComponents","widgets_NoContentMessage","react_grid_layout_default","MARGIN","cols","getGridColumns","rowHeight","GRID_ROW_HEIGHT","innerWidth","compactType","GRID_COMPACT_TYPE","isDraggable","isResizable","draggableCancel","validItems","hasShape","badgeContainer","borderRadius","badge","badgeRemove","FilterBadge","onRemove","count","FilterBar","onBadgeRemove","onBadgeClick","bar","FilterBar_FilterBadge","removeItemFIlter","filtersSelector","createSelector","reduce","arr","DashboardContent","components_TitleBar_TitleBar","components_FilterBar_FilterBar","components_ItemGrid_ItemGrid","Content","hasDashboardContent","dashboardsIsEmpty","Dashboard_DashboardContent","dashboardsLoaded","contentNotReady","ControlBar_DashboardsBar","Dashboard_DashboardVerticalOffset","ViewDashboard_Content","ConfirmDeleteDialog","onDeleteConfirmed","onContinueEditing","destructive","buttonBarStyle","EditBar","translationDialogIsOpen","dashboardModel","confirmDeleteDialogOpen","redirectUrl","onConfirmDelete","onSave","newId","onDiscard","onDiscardChanges","onDelete","onTranslationsSaved","translations","dbLocale","translation","locale","property","onTranslate","fetchDashboardModel","toggleTranslationDialog","confirmDeleteDialog","deleteAccess","ControlBar_ConfirmDeleteDialog","translationDialog","d2_ui_translation_dialog_default","objectToTranslate","fieldsToTranslate","onTranslationSaved","onTranslationError","err","react_router","updateAccess","discardBtnText","primary","sGetIsNewDashboard","dashboardToSave","tDeleteDashboard","acSetDashboardDisplayName","EditDashboard","initialized","initEditDashboard","setEditDashboard","getDashboardContent","EditDashboard_Content","ControlBar_EditBar","NewDashboard","setNewDashboard","Dashboard","setDashboard","match","params","selectDashboard","scrollToTop","scrollTo","mode","Dashboard_EditDashboard","Dashboard_NewDashboard","Dashboard_ViewDashboard","dashboardToSelect","preferredId","getItem","App","setCurrentUser","fetchDashboards","setControlBarRows","setDimensions","spacers","build_es_lib","exact","path","render","components_Dashboard_Dashboard","components_SnackbarMessage_SnackbarMessage","childContextTypes","controlBarRows","displayNameProp","filteredDimensions","apiFetchDimensions","dim","dimensionType","dataDimensionType","tSetDimensions","moment","addResources","arTranslations","ar_IQTranslations","daTranslations","enTranslations","esTranslations","frTranslations","idTranslations","kmTranslations","loTranslations","myTranslations","nbTranslations","prsTranslations","psTranslations","ptTranslations","pt_BRTranslations","ruTranslations","svTranslations","tetTranslations","tgTranslations","ukTranslations","urTranslations","viTranslations","zhTranslations","zh_CNTranslations","setDefaultNamespace","changeLanguage","objectClean","conversations","$merge","d2Object","keyUiLocale","authorities","newState","k","$unshift","idToRemove","$splice","stateItems","layoutHasChanged","newStateItems","x","y","stateItem","si","configureStore","middleware","thunk","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","createStore","reducer","applyMiddleware","configI18n","config","sources","manifest","isProd","getManifest","version","manifest_generated_at","process","activities","dhis","dhis2","apiVersion","headers","schemas","getUserSettings","d2Init","initializedD2","ReactDOM","lib","es","store","theme","createMuiTheme","dhis2theme","src_components_App","getElementById","init","param","isArray","isObject","global","Intl","DateTimeFormat","year","month","day","format","replace","defaultValue","api","idx","indexOf","getWithoutId","_home_travis_build_dhis2_dashboards_app_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectSpread__WEBPACK_IMPORTED_MODULE_0__","itemTypeToExternalPlugin","_itemTypeToExternalPl","_home_travis_build_dhis2_dashboards_app_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_defineProperty__WEBPACK_IMPORTED_MODULE_3__","getPlugin","hasIntegratedPlugin","reportTable","chart","eventReport","eventChart","loadPlugin","plugin","load","loadingIndicator","getName","_home_travis_build_dhis2_dashboards_app_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_asyncToGenerator__WEBPACK_IMPORTED_MODULE_2__","_home_travis_build_dhis2_dashboards_app_node_modules_babel_preset_react_app_node_modules_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default","_ref$options","_home_travis_build_dhis2_dashboards_app_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectSpread__WEBPACK_IMPORTED_MODULE_1__","fetch","fetchedFavorite","resize","unmount","originalType","extractedMapView","mv","VIS_TYPE_COLUMN","VIS_TYPE_PIVOT_TABLE","__webpack_require__","__webpack_exports__","d2_utilizr_lib_isFunction__WEBPACK_IMPORTED_MODULE_0__","d2_utilizr_lib_isFunction__WEBPACK_IMPORTED_MODULE_0___default","n","_modules_util__WEBPACK_IMPORTED_MODULE_1__","isNonNegativeInteger","Number","isInteger","minH","itemWithShape","Error","col","row","itemWidth","itemHeight","getShape","round","getOriginalHeight","querySelector","isFunction","setViewportSize","clientWidth"],"mappings":"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","file":"static/js/main.c2d4f778.chunk.js","sourcesContent":["import { getInstance } from 'd2';\nimport arrayClean from 'd2-utilizr/lib/arrayClean';\n\nimport { getEndPointName } from '../modules/itemTypes';\n\n// Id, name\nexport const getIdNameFields = ({ rename } = {}) => [\n    'id',\n    `${rename ? 'displayName~rename(name)' : 'name,displayName'}`,\n];\n\n// Item\nexport const getItemFields = () => [\n    'dimensionItem~rename(id)',\n    'displayName~rename(name)',\n    'dimensionItemType',\n];\n\n// Dimension\nexport const getDimensionFields = ({ withItems }) =>\n    arrayClean([\n        'dimension',\n        'legendSet[id]',\n        'filter',\n        'programStage',\n        withItems ? `items[${getItemFields().join(',')}]` : ``,\n    ]);\n\n// Axis\nexport const getAxesFields = ({ withItems }) => [\n    `columns[${getDimensionFields({ withItems }).join(',')}]`,\n    `rows[${getDimensionFields({ withItems }).join(',')}]`,\n    `filters[${getDimensionFields({ withItems }).join(',')}]`,\n];\n\n// Favorite\nexport const getFavoriteFields = ({ withDimensions, withOptions }) => {\n    return arrayClean([\n        `${getIdNameFields({ rename: true }).join(',')}`,\n        'displayDescription~rename(description)',\n        withDimensions ? `${getAxesFields({ withItems: true }).join(',')}` : ``,\n        withOptions\n            ? [\n                  '*',\n                  '!attributeDimensions',\n                  '!attributeValues',\n                  '!category',\n                  '!categoryDimensions',\n                  '!categoryOptionGroupSetDimensions',\n                  '!columnDimensions',\n                  '!dataDimensionItems',\n                  '!dataElementDimensions',\n                  '!dataElementGroupSetDimensions',\n                  '!filterDimensions',\n                  '!itemOrganisationUnitGroups',\n                  '!lastUpdatedBy',\n                  '!organisationUnitGroupSetDimensions',\n                  '!organisationUnitLevels',\n                  '!organisationUnits',\n                  '!programIndicatorDimensions',\n                  '!relativePeriods',\n                  '!reportParams',\n                  '!rowDimensions',\n                  '!series',\n                  '!translations',\n                  '!userOrganisationUnit',\n                  '!userOrganisationUnitChildren',\n                  '!userOrganisationUnitGrandChildren',\n              ].join(',')\n            : '',\n    ]);\n};\n\nexport const getFavoritesFields = ({ withDimensions }) => [\n    `reportTable[${getFavoriteFields({ withDimensions }).join(',')}]`,\n    `chart[${['type', ...getFavoriteFields({ withDimensions })].join(',')}]`,\n    `map[${getFavoriteFields({ withDimensions }).join(',')}]`,\n    `eventReport[${getFavoriteFields({ withDimensions }).join(',')}]`,\n    `eventChart[${getFavoriteFields({ withDimensions }).join(',')}]`,\n];\n\n// List item\nexport const getListItemFields = () => [\n    `reports[${['type', ...getIdNameFields({ rename: true })].join(',')}]`,\n    `resources[${getIdNameFields({ rename: true }).join(',')}]`,\n    `users[${getIdNameFields({ rename: true }).join(',')}]`,\n];\n\n// Map\nexport const getMapFields = () => [\n    `${getIdNameFields({ rename: true }).join(',')}`,\n    'user,longitude,latitude,zoom,basemap',\n    `mapViews[${getFavoriteFields({\n        withDimensions: true,\n        withOptions: true,\n    })}]`,\n];\n\n// Api\n\n// Get more info about the favorite of a dashboard item\nexport const apiFetchFavorite = (id, type, { fields }) =>\n    getInstance().then(d2 =>\n        d2.Api.getApi().get(`${getEndPointName(type)}/${id}`, {\n            fields:\n                fields ||\n                getFavoriteFields({\n                    withDimensions: true,\n                    withOptions: true,\n                }),\n        })\n    );\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"Item_list__2oHc1\",\"item\":\"Item_item__lO40M\",\"itemicon\":\"Item_itemicon__dv5ah\",\"link\":\"Item_link__2gULT\",\"deleteicon\":\"Item_deleteicon__3c7bl\",\"deletebutton\":\"Item_deletebutton__1DfY5\"};","import i18n from '@dhis2/d2-i18n';\nimport TableIcon from '@material-ui/icons/ViewList';\nimport ChartIcon from '@material-ui/icons/InsertChart';\nimport MapIcon from '@material-ui/icons/Public';\nimport ExtensionIcon from '@material-ui/icons/Extension';\nimport DescriptionIcon from '@material-ui/icons/Description';\nimport PersonIcon from '@material-ui/icons/Person';\nimport FontDownloadIcon from '@material-ui/icons/FontDownload';\nimport EmailIcon from '@material-ui/icons/Email';\nimport CropFreeIcon from '@material-ui/icons/CropFree';\nimport NotInterestedIcon from '@material-ui/icons/NotInterested';\n\nimport { getBaseUrl } from './util';\n\n// Item types\nexport const VISUALIZATION = 'VISUALIZATION';\nexport const REPORT_TABLE = 'REPORT_TABLE';\nexport const CHART = 'CHART';\nexport const MAP = 'MAP';\nexport const EVENT_REPORT = 'EVENT_REPORT';\nexport const EVENT_CHART = 'EVENT_CHART';\nexport const APP = 'APP';\nexport const REPORTS = 'REPORTS';\nexport const RESOURCES = 'RESOURCES';\nexport const USERS = 'USERS';\nexport const MESSAGES = 'MESSAGES';\nexport const TEXT = 'TEXT';\nexport const SPACER = 'SPACER';\n\nconst DOMAIN_TYPE_AGGREGATE = 'AGGREGATE';\nconst DOMAIN_TYPE_TRACKER = 'TRACKER';\n\n// Dashboard helpers\nexport const isVisualizationType = item =>\n    !!itemTypeMap[item.type].isVisualizationType;\nexport const hasMapView = itemType =>\n    itemTypeMap[itemType].domainType === DOMAIN_TYPE_AGGREGATE;\nexport const isTrackerDomainType = itemType =>\n    itemTypeMap[itemType].domainType === DOMAIN_TYPE_TRACKER;\nexport const getDefaultItemCount = itemType =>\n    itemTypeMap[itemType].defaultItemCount || 5;\nexport const getAppName = itemType => itemTypeMap[itemType].appName || '';\n\n// Item type map\nexport const itemTypeMap = {\n    [VISUALIZATION]: {\n        id: VISUALIZATION,\n        endPointName: 'visualizations',\n        propName: 'visualization',\n        pluralTitle: i18n.t('Visualizations'),\n        appUrl: id => `dhis-web-data-visualizer/#/${id}`,\n        appName: 'Data Visualizer',\n        defaultItemCount: 10,\n    },\n    [REPORT_TABLE]: {\n        id: REPORT_TABLE,\n        endPointName: 'visualizations',\n        propName: 'visualization',\n        pluralTitle: i18n.t('Pivot tables'),\n        domainType: DOMAIN_TYPE_AGGREGATE,\n        isVisualizationType: true,\n        appUrl: id => `dhis-web-data-visualizer/#/${id}`,\n        appName: 'Data Visualizer',\n    },\n    [CHART]: {\n        id: CHART,\n        endPointName: 'visualizations',\n        propName: 'visualization',\n        pluralTitle: i18n.t('Charts'),\n        domainType: DOMAIN_TYPE_AGGREGATE,\n        isVisualizationType: true,\n        appUrl: id => `dhis-web-data-visualizer/#/${id}`,\n        appName: 'Data Visualizer',\n    },\n    [MAP]: {\n        id: MAP,\n        endPointName: 'maps',\n        propName: 'map',\n        pluralTitle: i18n.t('Maps'),\n        domainType: DOMAIN_TYPE_AGGREGATE,\n        isVisualizationType: true,\n        appUrl: id => `dhis-web-maps/?id=${id}`,\n        appName: 'Maps',\n    },\n    [EVENT_REPORT]: {\n        id: EVENT_REPORT,\n        endPointName: 'eventReports',\n        propName: 'eventReport',\n        pluralTitle: i18n.t('Event reports'),\n        domainType: DOMAIN_TYPE_TRACKER,\n        isVisualizationType: true,\n        appUrl: id => `dhis-web-event-reports/?id=${id}`,\n        appName: 'Event Reports',\n    },\n    [EVENT_CHART]: {\n        id: EVENT_CHART,\n        endPointName: 'eventCharts',\n        propName: 'eventChart',\n        pluralTitle: i18n.t('Event charts'),\n        domainType: DOMAIN_TYPE_TRACKER,\n        isVisualizationType: true,\n        appUrl: id => `dhis-web-event-visualizer/?id=${id}`,\n        appName: 'Event Visualizer',\n    },\n    [APP]: {\n        endPointName: 'apps',\n        propName: 'appKey',\n        pluralTitle: i18n.t('Apps'),\n    },\n    [REPORTS]: {\n        id: REPORTS,\n        endPointName: 'reports',\n        propName: 'reports',\n        pluralTitle: i18n.t('Reports'),\n        appUrl: (id, type) => {\n            switch(type) {\n                case 'HTML':\n                    return `dhis-web-reports/#/standard-report/view/${id}`;\n\n                case 'JASPER_REPORT_TABLE':\n                case 'JASPER_JDBC':\n                default:\n                    return `api/reports/${id}/data.pdf?t=${(new Date()).getTime()}`;\n            }\n        },\n    },\n    [RESOURCES]: {\n        id: RESOURCES,\n        endPointName: 'resources',\n        propName: 'resources',\n        pluralTitle: i18n.t('Resources'),\n        appUrl: id => `api/documents/${id}/data`,\n    },\n    [USERS]: {\n        id: USERS,\n        endPointName: 'users',\n        propName: 'users',\n        pluralTitle: i18n.t('Users'),\n        appUrl: id => `dhis-web-dashboard-integration/profile.action?id=${id}`,\n    },\n    [TEXT]: {\n        id: TEXT,\n        propName: 'text',\n    },\n    [MESSAGES]: {\n        propName: 'messages',\n    },\n    [SPACER]: {\n        propName: 'text',\n    },\n};\n\nexport const getEndPointName = type => itemTypeMap[type].endPointName;\n\nexport const getItemUrl = (type, item, d2) => {\n    let url;\n\n    if (type === APP) {\n        url = item.launchUrl;\n    }\n\n    if (itemTypeMap[type] && itemTypeMap[type].appUrl) {\n        url = `${getBaseUrl(d2)}/${itemTypeMap[type].appUrl(item.id, item.type)}`;\n    }\n\n    return url;\n};\n\nexport const getItemIcon = type => {\n    switch (type) {\n        case REPORT_TABLE:\n        case EVENT_REPORT:\n        case REPORTS:\n            return TableIcon;\n        case CHART:\n        case EVENT_CHART:\n            return ChartIcon;\n        case MAP:\n            return MapIcon;\n        case APP:\n            return ExtensionIcon;\n        case RESOURCES:\n            return DescriptionIcon;\n        case USERS:\n            return PersonIcon;\n        case TEXT:\n            return FontDownloadIcon;\n        case MESSAGES:\n            return EmailIcon;\n        case SPACER:\n            return CropFreeIcon;\n        default:\n            return NotInterestedIcon;\n    }\n};\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"section\":\"EditTitleBar_section__2sBzn\",\"titleDescription\":\"EditTitleBar_titleDescription__1-pfK\",\"title\":\"EditTitleBar_title__2fOQP\",\"description\":\"EditTitleBar_description__fKEX6\",\"itemSelector\":\"EditTitleBar_itemSelector__PWJdH\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"actions\":\"ViewTitleBar_actions__1kGtw\",\"editLink\":\"ViewTitleBar_editLink__1HKr0\",\"titleBar\":\"ViewTitleBar_titleBar__1K-pW\",\"titleBarIcon\":\"ViewTitleBar_titleBarIcon__2spKM\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"leftControls\":\"DashboardsBar_leftControls__2kr14\",\"rightControls\":\"DashboardsBar_rightControls__2l1lT\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"link\":\"DashboardItemChip_link__1b7Z_\",\"icon\":\"DashboardItemChip_icon__1zOaG\",\"selected\":\"DashboardItemChip_selected__36Qak\",\"unselected\":\"DashboardItemChip_unselected__3dm-X\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"menuItem\":\"ContentMenuItem_menuItem__2DIcB\",\"launchLink\":\"ContentMenuItem_launchLink__MRANR\",\"label\":\"ContentMenuItem_label__2pIfq\",\"buttonInsert\":\"ContentMenuItem_buttonInsert__1GlZy\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"itemWrap\":\"ItemHeader_itemWrap__3gJiQ\",\"itemHeaderWrap\":\"ItemHeader_itemHeaderWrap__xEKwZ\",\"itemTitle\":\"ItemHeader_itemTitle__3LmXp\",\"itemActionsWrap\":\"ItemHeader_itemActionsWrap__1U5Ex\"};","export const RECEIVED_USER = 'RECEIVED_USER';\n\nexport const DEFAULT_STATE_USER = {\n    id: '',\n    username: '',\n    uiLocale: '',\n    isSuperuser: false,\n};\n\nexport default (state = DEFAULT_STATE_USER, action) => {\n    switch (action.type) {\n        case RECEIVED_USER: {\n            return fromD2ToUserObj(action.value);\n        }\n        default:\n            return state;\n    }\n};\n\nfunction fromD2ToUserObj(d2Object) {\n    return {\n        id: d2Object.id,\n        username: d2Object.username,\n        uiLocale: d2Object.settings.keyUiLocale,\n        isSuperuser: d2Object.authorities.has('ALL'),\n    };\n}\n\n// selectors\n\nexport const sGetUserId = state => state.user.id;\nexport const sGetUserUsername = state => state.user.username;\nexport const sGetIsSuperuser = state => state.user.isSuperuser;\nexport const sGetUiLocale = state => state.user.uiLocale;\n","import { TEXT, SPACER } from './itemTypes';\nimport { getGridItemProperties } from '../components/ItemGrid/gridUtil';\n\nexport const spacerContent = 'SPACER_ITEM_FOR_DASHBOARD_LAYOUT_CONVENIENCE';\nexport const emptyTextItemContent = 'TEXT_ITEM_WITH_NO_CONTENT';\n\nconst isBackendSpacerType = item =>\n    item.type === TEXT && item.text === spacerContent;\nconst isUiSpacerType = item => item.type === SPACER;\nconst isTextType = item => item.type === TEXT && item.text !== spacerContent;\n\nexport const convertUiItemsToBackend = items =>\n    items.map(item => {\n        let text = null;\n        if (isUiSpacerType(item)) {\n            text = spacerContent;\n        } else if (isTextType(item)) {\n            text = item.text || emptyTextItemContent;\n        }\n\n        return {\n            ...item,\n            ...(text ? { text } : {}),\n        };\n    });\n\nexport const convertBackendItemsToUi = items =>\n    items.map(item => {\n        const type = isBackendSpacerType(item) ? SPACER : item.type;\n        const gridProperties = getGridItemProperties(item.id);\n\n        const text = isTextType(item)\n            ? item.text === emptyTextItemContent\n                ? ''\n                : item.text\n            : null;\n\n        return {\n            ...item,\n            ...(text !== null ? { text } : {}),\n            type,\n            ...gridProperties,\n        };\n    });\n","/** @module reducers/dashboards */\n\nimport arrayFrom from 'd2-utilizr/lib/arrayFrom';\nimport arraySort from 'd2-utilizr/lib/arraySort';\n\nimport { orArray, orObject } from '../modules/util';\nimport { convertBackendItemsToUi } from '../modules/uiBackendItemConverter';\n\nexport const SET_DASHBOARDS = 'SET_DASHBOARDS';\nexport const ADD_DASHBOARDS = 'ADD_DASHBOARDS';\nexport const SET_DASHBOARD_STARRED = 'SET_DASHBOARD_STARRED';\nexport const SET_DASHBOARD_DISPLAY_NAME = 'SET_DASHBOARD_DISPLAY_NAME';\nexport const SET_DASHBOARD_ITEMS = 'SET_DASHBOARD_ITEMS';\n\nexport const DEFAULT_STATE_DASHBOARDS = {\n    byId: null,\n    items: [],\n};\n\n// reducer helper functions\n\nconst updateDashboardProp = ({ state, dashboardId, prop, value }) => ({\n    byId: {\n        ...state.byId,\n        [dashboardId]: {\n            ...state.byId[dashboardId],\n            [prop]: value,\n        },\n    },\n    items: state.items,\n});\n\n/**\n * Reducer that computes and returns the new state based on the given action\n * @function\n * @param {Object} state The current state\n * @param {Object} action The action to be evaluated\n * @returns {Object}\n */\nexport default (state = DEFAULT_STATE_DASHBOARDS, action) => {\n    switch (action.type) {\n        case SET_DASHBOARDS: {\n            return {\n                byId: action.value,\n                items: [],\n            };\n        }\n        case ADD_DASHBOARDS: {\n            return {\n                ...state,\n                byId: {\n                    ...state.byId,\n                    ...action.value,\n                },\n            };\n        }\n        case SET_DASHBOARD_STARRED: {\n            return updateDashboardProp({\n                state,\n                dashboardId: action.dashboardId,\n                prop: 'starred',\n                value: action.value,\n            });\n        }\n        case SET_DASHBOARD_DISPLAY_NAME: {\n            return updateDashboardProp({\n                state,\n                dashboardId: action.dashboardId,\n                prop: 'displayName',\n                value: action.value,\n            });\n        }\n        case SET_DASHBOARD_ITEMS: {\n            return {\n                ...state,\n                items: action.value,\n            };\n        }\n        default:\n            return state;\n    }\n};\n\n// root selector\n\nexport const sGetDashboardsRoot = state => state.dashboards;\n\n// selector level 1\n\n/**\n * Selector which returns a dashboard by id from the state object\n * If no matching dashboard is found it returns undefined\n * If dashboards.byId is null, then the dashboards api request\n * has not yet completed. If dashboards.byId is an empty object\n * then the dashboards api request is complete, but no dashboards\n * were returned\n *\n * @function\n * @param {Object} state The current state\n * @param {Number} id The id of the dashboard\n * @returns {Object | undefined}\n */\nexport const sGetDashboardById = (state, id) =>\n    orObject(sGetDashboardsRoot(state).byId)[id];\n\nexport const sDashboardsIsFetching = state => {\n    return sGetDashboardsRoot(state).byId === null;\n};\n\n/**\n * Selector which returns all dashboards (the byId object)\n *\n * @function\n * @param {Object} state The current state\n * @returns {Object | undefined}\n */\nexport const sGetAllDashboards = state =>\n    orObject(sGetDashboardsRoot(state).byId);\n\n/**\n * Selector which returns the current dashboard items\n *\n * @function\n * @param {Object} state The current state\n * @returns {Array}\n */\nexport const sGetDashboardItems = state => sGetDashboardsRoot(state).items;\n\n// selector level 2\n\nexport const sGetStarredDashboards = state =>\n    Object.values(sGetAllDashboards(state)).filter(\n        dashboard => dashboard.starred === true\n    );\n\nexport const sGetUnstarredDashboards = state =>\n    Object.values(sGetAllDashboards(state)).filter(\n        dashboard => dashboard.starred === false\n    );\n\n// selector level 3\n\nexport const sGetStarredDashboardIds = state => {\n    return sGetStarredDashboards(state).map(dashboard => dashboard.id);\n};\n\nexport const sGetUnstarredDashboardIds = state =>\n    sGetUnstarredDashboards(state).map(dashboard => dashboard.id);\n\nexport const sGetDashboardsSortedByStarred = state => [\n    ...arraySort(sGetStarredDashboards(state), 'ASC', 'displayName'),\n    ...arraySort(sGetUnstarredDashboards(state), 'ASC', 'displayName'),\n];\n\n// utils\n\n/**\n * Returns the array of dashboards, customized for ui\n * @function\n * @param {Array} data The original dashboard list\n * @returns {Array}\n */\nexport const getCustomDashboards = data =>\n    arrayFrom(data).map(d => ({\n        id: d.id,\n        name: d.name,\n        displayName: d.displayName,\n        description: d.description,\n        displayDescription: d.displayDescription,\n        starred: d.favorite,\n        owner: d.user.name,\n        created: d.created\n            .split('T')\n            .join(' ')\n            .substr(0, 16),\n        lastUpdated: d.lastUpdated\n            .split('T')\n            .join(' ')\n            .substr(0, 16),\n        access: d.access,\n        numberOfItems: orArray(d.dashboardItems).length,\n        dashboardItems: convertBackendItemsToUi(d.dashboardItems),\n    }));\n","/** @module reducers/editDashboard */\nimport update from 'immutability-helper';\nimport isEmpty from 'lodash/isEmpty';\nimport { orArray, orObject } from '../modules/util';\n\nexport const RECEIVED_EDIT_DASHBOARD = 'RECEIVED_EDIT_DASHBOARD';\nexport const RECEIVED_NOT_EDITING = 'RECEIVED_NOT_EDITING';\nexport const START_NEW_DASHBOARD = 'START_NEW_DASHBOARD';\nexport const RECEIVED_TITLE = 'RECEIVED_TITLE';\nexport const RECEIVED_DESCRIPTION = 'RECEIVED_DESCRIPTION';\nexport const ADD_DASHBOARD_ITEM = 'ADD_DASHBOARD_ITEM';\nexport const REMOVE_DASHBOARD_ITEM = 'REMOVE_DASHBOARD_ITEM';\nexport const UPDATE_DASHBOARD_ITEM = 'UPDATE_DASHBOARD_ITEM';\nexport const RECEIVED_DASHBOARD_LAYOUT = 'RECEIVED_DASHBOARD_LAYOUT';\n\nexport const DEFAULT_STATE_EDIT_DASHBOARD = {};\nexport const NEW_DASHBOARD_STATE = {\n    id: '',\n    name: '',\n    access: {},\n    description: '',\n    dashboardItems: [],\n};\n\nexport default (state = DEFAULT_STATE_EDIT_DASHBOARD, action) => {\n    switch (action.type) {\n        case RECEIVED_EDIT_DASHBOARD: {\n            const newState = {};\n            Object.keys(NEW_DASHBOARD_STATE).map(\n                k => (newState[k] = action.value[k])\n            );\n            return newState;\n        }\n        case RECEIVED_NOT_EDITING:\n            return DEFAULT_STATE_EDIT_DASHBOARD;\n        case START_NEW_DASHBOARD:\n            return NEW_DASHBOARD_STATE;\n        case RECEIVED_TITLE: {\n            return Object.assign({}, state, { name: action.value });\n        }\n        case RECEIVED_DESCRIPTION: {\n            return Object.assign({}, state, {\n                description: action.value,\n            });\n        }\n        case ADD_DASHBOARD_ITEM:\n            return update(state, {\n                dashboardItems: { $unshift: [action.value] },\n            });\n        case REMOVE_DASHBOARD_ITEM: {\n            const idToRemove = action.value;\n\n            const dashboardItemIndex = state.dashboardItems.findIndex(\n                item => item.id === idToRemove\n            );\n\n            if (dashboardItemIndex > -1) {\n                return update(state, {\n                    dashboardItems: {\n                        $splice: [[dashboardItemIndex, 1]],\n                    },\n                });\n            }\n\n            return state;\n        }\n        case RECEIVED_DASHBOARD_LAYOUT: {\n            const stateItems = orArray(state.dashboardItems);\n            let layoutHasChanged = false;\n\n            const newStateItems = action.value.map(({ x, y, w, h, i }) => {\n                const stateItem = stateItems.find(si => si.id === i);\n\n                if (\n                    !(\n                        stateItem.x === x &&\n                        stateItem.y === y &&\n                        stateItem.w === w &&\n                        stateItem.h === h\n                    )\n                ) {\n                    layoutHasChanged = true;\n                    return Object.assign({}, stateItem, { w, h, x, y });\n                }\n\n                return stateItem;\n            });\n\n            return layoutHasChanged\n                ? {\n                      ...state,\n                      dashboardItems: newStateItems,\n                  }\n                : state;\n        }\n        case UPDATE_DASHBOARD_ITEM: {\n            const dashboardItem = action.value;\n\n            const dashboardItemIndex = state.dashboardItems.findIndex(\n                item => item.id === dashboardItem.id\n            );\n\n            if (dashboardItemIndex > -1) {\n                const newState = update(state, {\n                    dashboardItems: {\n                        $splice: [\n                            [\n                                dashboardItemIndex,\n                                1,\n                                Object.assign({}, dashboardItem),\n                            ],\n                        ],\n                    },\n                });\n\n                return newState;\n            }\n\n            return state;\n        }\n        default:\n            return state;\n    }\n};\n\n// root selector\n\nexport const sGetEditDashboardRoot = state => state.editDashboard;\n\n// selectors\n\nexport const sGetIsEditing = state => !isEmpty(state.editDashboard);\n\nexport const sGetIsNewDashboard = state => {\n    return (\n        !isEmpty(state.editDashboard) && sGetEditDashboardRoot(state).id === ''\n    );\n};\n\nexport const sGetEditDashboardItems = state =>\n    orObject(sGetEditDashboardRoot(state)).dashboardItems;\n","export const CLEAR_EDIT_ITEM_FILTERS = 'CLEAR_EDIT_ITEM_FILTERS';\nexport const REMOVE_EDIT_ITEM_FILTER = 'REMOVE_EDIT_ITEM_FILTER';\nexport const SET_EDIT_ITEM_FILTERS = 'SET_EDIT_ITEM_FILTERS';\n\nexport const DEFAULT_STATE_EDIT_ITEM_FILTERS = {};\n\nexport default (state = DEFAULT_STATE_EDIT_ITEM_FILTERS, action) => {\n    switch (action.type) {\n        case REMOVE_EDIT_ITEM_FILTER: {\n            const newState = { ...state };\n\n            delete newState[action.id];\n\n            return newState;\n        }\n        case SET_EDIT_ITEM_FILTERS: {\n            return action.filters;\n        }\n        case CLEAR_EDIT_ITEM_FILTERS: {\n            return DEFAULT_STATE_EDIT_ITEM_FILTERS;\n        }\n        default:\n            return state;\n    }\n};\n\n// selectors\n\nexport const sGetEditItemFiltersRoot = state => state.editItemFilters;\n\nexport const sGetEditFiltersKeys = state =>\n    Object.keys(sGetEditItemFiltersRoot(state));\n","/** @module reducers/selected */\nimport { combineReducers } from 'redux';\n\nimport { validateReducer } from '../modules/util';\n\nexport const SET_SELECTED_ID = 'SET_SELECTED_ID';\nexport const SET_SELECTED_ISLOADING = 'SET_SELECTED_ISLOADING';\nexport const SET_SELECTED_SHOWDESCRIPTION = 'SET_SELECTED_SHOWDESCRIPTION';\n\nexport const DEFAULT_STATE_SELECTED_ID = null;\nexport const DEFAULT_STATE_SELECTED_ISLOADING = false;\nexport const DEFAULT_STATE_SELECTED_SHOWDESCRIPTION = false;\n\n/**\n * Reducer functions that computes and returns the new state based on the given action\n * @function\n * @param {Object} state The current state\n * @param {Object} action The action to be evaluated\n */\nconst id = (state = DEFAULT_STATE_SELECTED_ID, action) => {\n    switch (action.type) {\n        case SET_SELECTED_ID:\n            return validateReducer(action.value, DEFAULT_STATE_SELECTED_ID);\n        default:\n            return state;\n    }\n};\n\nconst isLoading = (state = DEFAULT_STATE_SELECTED_ISLOADING, action) => {\n    switch (action.type) {\n        case SET_SELECTED_ISLOADING:\n            return validateReducer(\n                action.value,\n                DEFAULT_STATE_SELECTED_ISLOADING\n            );\n        default:\n            return state;\n    }\n};\n\nconst showDescription = (\n    state = DEFAULT_STATE_SELECTED_SHOWDESCRIPTION,\n    action\n) => {\n    switch (action.type) {\n        case SET_SELECTED_SHOWDESCRIPTION:\n            return validateReducer(\n                action.value,\n                DEFAULT_STATE_SELECTED_SHOWDESCRIPTION\n            );\n        default:\n            return state;\n    }\n};\n\nexport default combineReducers({\n    id,\n    isLoading,\n    showDescription,\n});\n\n// Selectors\n\nexport const sGetSelectedRoot = state => state.selected;\n\nexport const sGetSelectedId = state => sGetSelectedRoot(state).id;\n\nexport const sGetSelectedIsLoading = state => sGetSelectedRoot(state).isLoading;\n\nexport const sGetSelectedShowDescription = state =>\n    sGetSelectedRoot(state).showDescription;\n","import {\n    REMOVE_EDIT_ITEM_FILTER,\n    SET_EDIT_ITEM_FILTERS,\n    CLEAR_EDIT_ITEM_FILTERS,\n} from '../reducers/editItemFilters';\n\n// actions\n\nexport const acRemoveEditItemFilter = id => ({\n    type: REMOVE_EDIT_ITEM_FILTER,\n    id,\n});\n\nexport const acClearEditItemFilters = () => ({\n    type: CLEAR_EDIT_ITEM_FILTERS,\n});\n\nexport const acSetEditItemFilters = filters => ({\n    type: SET_EDIT_ITEM_FILTERS,\n    filters,\n});\n","export const CLEAR_ITEM_FILTERS = 'CLEAR_ITEM_FILTERS';\nexport const SET_ITEM_FILTERS = 'SET_ITEM_FILTERS';\nexport const ADD_ITEM_FILTER = 'ADD_ITEM_FILTER';\nexport const REMOVE_ITEM_FILTER = 'REMOVE_ITEM_FILTER';\n\nexport const DEFAULT_STATE_ITEM_FILTERS = {};\n\nexport default (state = DEFAULT_STATE_ITEM_FILTERS, action) => {\n    switch (action.type) {\n        case ADD_ITEM_FILTER: {\n            return {\n                ...state,\n                [action.filter.id]: action.filter.value,\n            };\n        }\n        case REMOVE_ITEM_FILTER: {\n            const newState = { ...state };\n\n            delete newState[action.id];\n\n            return newState;\n        }\n        case SET_ITEM_FILTERS: {\n            return action.filters;\n        }\n        case CLEAR_ITEM_FILTERS: {\n            return DEFAULT_STATE_ITEM_FILTERS;\n        }\n        default:\n            return state;\n    }\n};\n\n// selectors\n\nexport const sGetItemFiltersRoot = state => state.itemFilters;\n\nexport const sGetFiltersKeys = state => Object.keys(sGetItemFiltersRoot(state));\n","import {\n    ADD_ITEM_FILTER,\n    REMOVE_ITEM_FILTER,\n    SET_ITEM_FILTERS,\n    CLEAR_ITEM_FILTERS,\n} from '../reducers/itemFilters';\n\nexport const FILTER_ORG_UNIT = 'ou';\n\n// actions\n\nexport const acAddItemFilter = filter => ({\n    type: ADD_ITEM_FILTER,\n    filter,\n});\n\nexport const acRemoveItemFilter = id => ({\n    type: REMOVE_ITEM_FILTER,\n    id,\n});\n\nexport const acClearItemFilters = () => ({\n    type: CLEAR_ITEM_FILTERS,\n});\n\nexport const acSetItemFilters = filters => ({\n    type: SET_ITEM_FILTERS,\n    filters,\n});\n","import update from 'immutability-helper';\nimport { arrayToIdMap } from '../modules/util';\n\nexport const RECEIVED_MESSAGES = 'RECEIVED_MESSAGES';\n\nexport default (state = {}, action) => {\n    switch (action.type) {\n        case RECEIVED_MESSAGES: {\n            const conversations = arrayToIdMap(action.value);\n\n            const newState = update(state, { $merge: conversations });\n\n            return newState;\n        }\n        default:\n            return state;\n    }\n};\n\n// selectors\n\nexport const sGetMessagesRoot = state => state.messages;\n","import { getInstance } from 'd2';\n\nexport const getMessages = () => {\n    const fields =\n        'id,messageCount,lastUpdated,messageType,displayName,read,messages[id,read,sender[id,displayName],text,lastUpdated]';\n    const url = `/messageConversations?fields=${fields}&order=read:asc&pageSize=200`;\n    return getInstance()\n        .then(d2 => d2.Api.getApi().get(url))\n        .catch(error => console.log('Error:', error));\n};\n","export const RECEIVED_SNACKBAR_MESSAGE = 'RECEIVED_SNACKBAR_MESSAGE';\nexport const CLOSE_SNACKBAR = 'CLOSE_SNACKBAR';\n\nexport const DEFAULT_STATE_SNACKBAR = {\n    message: {},\n    duration: null,\n    open: false,\n};\n\nexport default (state = DEFAULT_STATE_SNACKBAR, action) => {\n    switch (action.type) {\n        case RECEIVED_SNACKBAR_MESSAGE: {\n            return { ...state, ...action.value };\n        }\n        case CLOSE_SNACKBAR: {\n            return DEFAULT_STATE_SNACKBAR;\n        }\n        default:\n            return state;\n    }\n};\n\n// selectors\n\nexport const sGetSnackbar = state => state.snackbar || DEFAULT_STATE_SNACKBAR;\n","import {\n    RECEIVED_SNACKBAR_MESSAGE,\n    CLOSE_SNACKBAR,\n} from '../reducers/snackbar';\n\nexport const acReceivedSnackbarMessage = value => ({\n    type: RECEIVED_SNACKBAR_MESSAGE,\n    value,\n});\n\nexport const acCloseSnackbar = () => ({\n    type: CLOSE_SNACKBAR,\n});\n","import { orObject } from '../modules/util';\nimport objectClean from 'd2-utilizr/lib/objectClean';\n\n/** @module reducers/visualizations */\n\nexport const ADD_VISUALIZATION = 'ADD_VISUALIZATION';\nexport const SET_ACTIVE_VISUALIZATION_TYPE = 'SET_ACTIVE_VISUALIZATION_TYPE';\n\nexport const DEFAULT_STATE_VISUALIZATIONS = {};\n\nconst isEmpty = p => p === undefined || p === null;\n\nexport default (state = DEFAULT_STATE_VISUALIZATIONS, action) => {\n    switch (action.type) {\n        case ADD_VISUALIZATION: {\n            return {\n                ...state,\n                [action.value.id]: objectClean(\n                    {\n                        ...orObject(state[action.value.id]),\n                        ...action.value,\n                    },\n                    isEmpty\n                ),\n            };\n        }\n        case SET_ACTIVE_VISUALIZATION_TYPE: {\n            return {\n                ...state,\n                [action.id]: objectClean(\n                    {\n                        ...orObject(state[action.id]),\n                        activeType: action.activeType,\n                    },\n                    isEmpty\n                ),\n            };\n        }\n        default:\n            return state;\n    }\n};\n\n// root selector\nexport const sGetVisualizationsRoot = state => state.visualizations;\n\n// selectors level 1\nexport const sGetVisualization = (state, id) => {\n    return sGetVisualizationsRoot(state)[id];\n};\n","import {\n    ADD_VISUALIZATION,\n    SET_ACTIVE_VISUALIZATION_TYPE,\n} from '../reducers/visualizations';\n\nexport const acAddVisualization = value => ({\n    type: ADD_VISUALIZATION,\n    value,\n});\n\nexport const acSetActiveVisualizationType = (id, activeType) => {\n    const action = {\n        type: SET_ACTIVE_VISUALIZATION_TYPE,\n        id,\n        activeType,\n    };\n\n    return action;\n};\n","import arrayClean from 'd2-utilizr/lib/arrayClean';\nimport {\n    getListItemFields,\n    getFavoritesFields,\n    getIdNameFields,\n} from './metadata';\n\n// Helper functions\n\nexport const onError = error => console.log('Error: ', error);\n\n// Dashboard item\nexport const getDashboardItemsFields = ({ withFavorite } = {}) =>\n    arrayClean([\n        'id',\n        'type',\n        'shape',\n        'x',\n        'y',\n        'width~rename(w)',\n        'height~rename(h)',\n        'messages',\n        'text',\n        'appKey',\n        `${getListItemFields().join(',')}`,\n        withFavorite\n            ? `${getFavoritesFields({\n                  withDimensions: withFavorite.withDimensions,\n              }).join(',')}`\n            : ``,\n    ]);\n\n// Dashboard\nexport const getDashboardFields = ({ withItems, withFavorite } = {}) =>\n    arrayClean([\n        `${getIdNameFields().join(',')}`,\n        'description',\n        'displayDescription',\n        'favorite',\n        `user[${getIdNameFields({ rename: true }).join(',')}]`,\n        'created',\n        'lastUpdated',\n        'access',\n        withItems\n            ? `dashboardItems[${getDashboardItemsFields({\n                  withFavorite,\n              }).join(',')}]`\n            : ``,\n    ]);\n","import { getInstance } from 'd2';\nimport arrayClean from 'd2-utilizr/lib/arrayClean';\nimport { onError, getDashboardFields } from './index';\n\n// Get \"all\" dashboards on startup\nexport const apiFetchDashboards = () =>\n    getInstance()\n        .then(d2 =>\n            d2.models.dashboard.list({\n                fields: [\n                    getDashboardFields().join(','),\n                    'dashboardItems[id]',\n                ].join(','),\n                paging: 'false',\n            })\n        )\n        .catch(onError);\n\n// Get more info about selected dashboard\nexport const apiFetchDashboard = id =>\n    getInstance()\n        .then(d2 =>\n            d2.models.dashboard.get(id, {\n                fields: arrayClean(\n                    getDashboardFields({\n                        withItems: true,\n                        withFavorite: { withDimensions: false },\n                    })\n                ).join(','),\n            })\n        )\n        .catch(onError);\n\n// Star dashboard\nexport const apiStarDashboard = (id, isStarred) => {\n    const url = `dashboards/${id}/favorite`;\n\n    getInstance().then(d2 => {\n        if (isStarred) {\n            d2.Api.getApi().post(url);\n        } else {\n            d2.Api.getApi().delete(url);\n        }\n    });\n};\n\nexport const apiDeleteDashboard = id => {\n    return getInstance()\n        .then(d2 => {\n            return d2.models.dashboards\n                .get(id)\n                .then(dashboard => dashboard.delete());\n        })\n        .catch(onError);\n};\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport Snackbar from '@material-ui/core/Snackbar';\nimport PropTypes from 'prop-types';\n\nimport { sGetSnackbar } from '../../reducers/snackbar';\nimport { acCloseSnackbar } from '../../actions/snackbar';\n\nconst LOADING_DASHBOARD = 'LOADING_DASHBOARD';\nexport const loadingDashboardMsg = { name: '', type: LOADING_DASHBOARD };\n\nconst SnackbarMessageContent = ({ message }) => {\n    if (typeof message === 'object') {\n        //future message types:  switch(message.type)\n        return (\n            <span>\n                Loading <span style={{ fontWeight: 800 }}>{message.name}</span>{' '}\n                dashboard\n            </span>\n        );\n    }\n    return message;\n};\n\nexport const SnackbarMessage = props => {\n    return (\n        <Snackbar\n            style={{ zIndex: 10001 }}\n            open={props.snackbarOpen}\n            message={<SnackbarMessageContent message={props.snackbarMessage} />}\n            autoHideDuration={props.snackbarDuration}\n            onClose={props.onCloseSnackbar}\n        />\n    );\n};\n\nconst mapStateToProps = state => {\n    const { message, duration, open } = sGetSnackbar(state);\n    return {\n        snackbarOpen: open,\n        snackbarMessage: message,\n        snackbarDuration: duration,\n    };\n};\n\nSnackbarMessage.propTypes = {\n    snackbarDuration: PropTypes.string,\n    snackbarMessage: PropTypes.object,\n    snackbarOpen: PropTypes.bool,\n    onCloseSnackbar: PropTypes.func,\n};\n\nexport default connect(\n    mapStateToProps,\n    {\n        onCloseSnackbar: acCloseSnackbar,\n    }\n)(SnackbarMessage);\n","import { getCustomDashboards, sGetDashboardById } from '../reducers/dashboards';\nimport { sGetIsEditing } from '../reducers/editDashboard';\nimport { sGetEditItemFiltersRoot } from '../reducers/editItemFilters';\nimport {\n    SET_SELECTED_ID,\n    SET_SELECTED_ISLOADING,\n    SET_SELECTED_SHOWDESCRIPTION,\n    sGetSelectedIsLoading,\n    sGetSelectedId,\n} from '../reducers/selected';\nimport { sGetUserUsername } from '../reducers/user';\n\nimport { acSetDashboardItems, acAppendDashboards } from './dashboards';\nimport { acClearEditItemFilters } from './editItemFilters';\nimport { acClearItemFilters, acSetItemFilters } from './itemFilters';\nimport { tGetMessages } from '../components/Item/MessagesItem/actions';\nimport { acReceivedSnackbarMessage, acCloseSnackbar } from './snackbar';\nimport { acAddVisualization } from './visualizations';\n\nimport { apiFetchDashboard } from '../api/dashboards';\nimport { storePreferredDashboardId } from '../api/localStorage';\n\nimport { withShape } from '../components/ItemGrid/gridUtil';\nimport { loadingDashboardMsg } from '../components/SnackbarMessage/SnackbarMessage';\nimport { extractFavorite } from '../components/Item/VisualizationItem/plugin';\n\nimport {\n    REPORT_TABLE,\n    CHART,\n    MAP,\n    EVENT_REPORT,\n    EVENT_CHART,\n    MESSAGES,\n} from '../modules/itemTypes';\nimport { orObject } from '../modules/util';\n\n// actions\n\nexport const acSetSelectedId = value => ({\n    type: SET_SELECTED_ID,\n    value,\n});\n\nexport const acSetSelectedIsLoading = value => ({\n    type: SET_SELECTED_ISLOADING,\n    value,\n});\n\nexport const acSetSelectedShowDescription = value => ({\n    type: SET_SELECTED_SHOWDESCRIPTION,\n    value,\n});\n\nexport const tLoadDashboard = id => async dispatch => {\n    try {\n        const dash = await apiFetchDashboard(id);\n\n        dispatch(acAppendDashboards(dash));\n\n        return Promise.resolve(dash);\n    } catch (err) {\n        console.log('Error: ', err);\n        return err;\n    }\n};\n\n// thunks\nexport const tSetSelectedDashboardById = id => async (dispatch, getState) => {\n    dispatch(acSetSelectedIsLoading(true));\n\n    const snackbarTimeout = setTimeout(() => {\n        const dashboardName = orObject(sGetDashboardById(getState(), id))\n            .displayName;\n        if (sGetSelectedIsLoading(getState()) && dashboardName) {\n            loadingDashboardMsg.name = dashboardName;\n\n            dispatch(\n                acReceivedSnackbarMessage({\n                    message: loadingDashboardMsg,\n                    open: true,\n                })\n            );\n        }\n    }, 500);\n\n    const onSuccess = selected => {\n        const customDashboard = getCustomDashboards(selected)[0];\n\n        dispatch(\n            acSetDashboardItems(withShape(customDashboard.dashboardItems))\n        );\n\n        storePreferredDashboardId(sGetUserUsername(getState()), id);\n\n        // add visualizations to store\n        customDashboard.dashboardItems.forEach(item => {\n            switch (item.type) {\n                case REPORT_TABLE:\n                case CHART:\n                case MAP:\n                case EVENT_REPORT:\n                case EVENT_CHART:\n                    dispatch(acAddVisualization(extractFavorite(item)));\n                    break;\n                case MESSAGES:\n                    dispatch(tGetMessages(id));\n                    break;\n                default:\n                    break;\n            }\n        });\n\n        const state = getState();\n        if (id === sGetSelectedId(state)) {\n            if (sGetIsEditing(state)) {\n                // disable filters when switching to edit mode\n                dispatch(acClearItemFilters());\n            } else {\n                // enable filters when switching to view mode\n                dispatch(acSetItemFilters(sGetEditItemFiltersRoot(state)));\n            }\n        } else {\n            // clear filters when switching dashboard\n            dispatch(acClearEditItemFilters());\n            dispatch(acClearItemFilters());\n        }\n\n        dispatch(acSetSelectedId(id));\n\n        dispatch(acSetSelectedIsLoading(false));\n\n        clearTimeout(snackbarTimeout);\n\n        dispatch(acCloseSnackbar());\n\n        return selected;\n    };\n\n    const onError = error => {\n        console.log('Error: ', error);\n        return error;\n    };\n\n    try {\n        const selected = await dispatch(tLoadDashboard(id));\n\n        return onSuccess(selected);\n    } catch (err) {\n        return onError(err);\n    }\n};\n","export const getPreferredDashboardId = username =>\n    localStorage.getItem(`dhis2.dashboard.current.${username}`) || undefined;\n\nexport const storePreferredDashboardId = (username, dashboardId) => {\n    localStorage.setItem(`dhis2.dashboard.current.${username}`, dashboardId);\n};\n","import { RECEIVED_MESSAGES } from '../../../reducers/messages';\nimport { getMessages } from '../../../api/messages';\n\nconst onError = (action, error) => {\n    console.log(`Error in action ${action}: ${error}`);\n    return error;\n};\n\nexport const receivedMessages = value => ({\n    type: RECEIVED_MESSAGES,\n    value,\n});\n\nexport const tGetMessages = () => async dispatch => {\n    try {\n        const messages = await getMessages();\n        const { messageConversations } = messages;\n\n        return dispatch(receivedMessages(messageConversations));\n    } catch (err) {\n        return onError('Get Messages', err);\n    }\n};\n","import { getInstance } from 'd2';\n\nconst onError = error => console.log('Error: ', error);\n\nconst saveDashboard = (dashboard, data) => {\n    const { name, description, dashboardItems } = data;\n\n    dashboard.name = name;\n    dashboard.description = description;\n    dashboard.dashboardItems = dashboardItems.map(item =>\n        Object.assign({}, item, { width: item.w, height: item.h })\n    );\n\n    return dashboard.save().then(msg => msg.response.uid);\n};\n\nexport const updateDashboard = data => {\n    return getInstance()\n        .then(d2 => {\n            return d2.models.dashboards\n                .get(data.id)\n                .then(dashboard => saveDashboard(dashboard, data));\n        })\n        .catch(onError);\n};\n\nexport const postDashboard = data => {\n    return getInstance().then(d2 => {\n        const dashboard = d2.models.dashboards.create();\n\n        return saveDashboard(dashboard, data);\n    });\n};\n","import { generateUid } from 'd2/uid';\n\nimport {\n    RECEIVED_EDIT_DASHBOARD,\n    START_NEW_DASHBOARD,\n    RECEIVED_NOT_EDITING,\n    RECEIVED_TITLE,\n    RECEIVED_DESCRIPTION,\n    RECEIVED_DASHBOARD_LAYOUT,\n    ADD_DASHBOARD_ITEM,\n    UPDATE_DASHBOARD_ITEM,\n    REMOVE_DASHBOARD_ITEM,\n} from '../reducers/editDashboard';\nimport { sGetEditDashboardRoot } from '../reducers/editDashboard';\nimport { updateDashboard, postDashboard } from '../api/editDashboard';\nimport { tSetSelectedDashboardById } from '../actions/selected';\nimport {\n    NEW_ITEM_SHAPE,\n    getGridItemProperties,\n} from '../components/ItemGrid/gridUtil';\nimport { itemTypeMap } from '../modules/itemTypes';\nimport { convertUiItemsToBackend } from '../modules/uiBackendItemConverter';\n\nconst onError = error => {\n    console.log('Error (Saving Dashboard): ', error);\n    return error;\n};\n\n// actions\n\nexport const acSetEditDashboard = (dashboard, items) => {\n    const val = {\n        ...dashboard,\n        dashboardItems: items,\n    };\n\n    return {\n        type: RECEIVED_EDIT_DASHBOARD,\n        value: val,\n    };\n};\n\nexport const acSetEditNewDashboard = () => ({\n    type: START_NEW_DASHBOARD,\n});\n\nexport const acClearEditDashboard = () => ({\n    type: RECEIVED_NOT_EDITING,\n});\n\nexport const acSetDashboardTitle = value => ({\n    type: RECEIVED_TITLE,\n    value,\n});\n\nexport const acSetDashboardDescription = value => ({\n    type: RECEIVED_DESCRIPTION,\n    value,\n});\n\nexport const acUpdateDashboardLayout = value => ({\n    type: RECEIVED_DASHBOARD_LAYOUT,\n    value,\n});\n\nexport const acAddDashboardItem = item => {\n    const type = item.type;\n    delete item.type;\n    const itemPropName = itemTypeMap[type].propName;\n\n    const id = generateUid();\n    const gridItemProperties = getGridItemProperties(id);\n\n    return {\n        type: ADD_DASHBOARD_ITEM,\n        value: {\n            id,\n            type,\n            [itemPropName]: item.content,\n            ...NEW_ITEM_SHAPE,\n            ...gridItemProperties,\n        },\n    };\n};\n\nexport const acUpdateDashboardItem = item => ({\n    type: UPDATE_DASHBOARD_ITEM,\n    value: item,\n});\n\nexport const acRemoveDashboardItem = value => ({\n    type: REMOVE_DASHBOARD_ITEM,\n    value,\n});\n\n// thunks\n\nexport const tSaveDashboard = () => async (dispatch, getState) => {\n    const dashboard = sGetEditDashboardRoot(getState());\n\n    const dashboardToSave = {\n        ...dashboard,\n        dashboardItems: convertUiItemsToBackend(dashboard.dashboardItems),\n    };\n\n    try {\n        const dashboardId = dashboardToSave.id\n            ? await updateDashboard(dashboardToSave)\n            : await postDashboard(dashboardToSave);\n\n        dispatch(acClearEditDashboard());\n        await dispatch(tSetSelectedDashboardById(dashboardId));\n\n        return Promise.resolve(dashboardId);\n    } catch (error) {\n        onError(error);\n    }\n};\n","import {\n    SET_DASHBOARDS,\n    ADD_DASHBOARDS,\n    SET_DASHBOARD_STARRED,\n    SET_DASHBOARD_DISPLAY_NAME,\n    SET_DASHBOARD_ITEMS,\n} from '../reducers/dashboards';\nimport {\n    getCustomDashboards,\n    sGetDashboardById,\n    sGetDashboardsSortedByStarred,\n} from '../reducers/dashboards';\nimport { sGetUserUsername } from '../reducers/user';\nimport { tSetSelectedDashboardById, acSetSelectedId } from './selected';\nimport { acClearEditDashboard } from './editDashboard';\nimport {\n    apiFetchDashboards,\n    apiStarDashboard,\n    apiDeleteDashboard,\n} from '../api/dashboards';\nimport { getPreferredDashboardId } from '../api/localStorage';\nimport { arrayToIdMap } from '../modules/util';\n\n// actions\n\nexport const acSetDashboards = dashboards => ({\n    type: SET_DASHBOARDS,\n    value: arrayToIdMap(getCustomDashboards(dashboards)),\n});\n\nexport const acAppendDashboards = dashboards => ({\n    type: ADD_DASHBOARDS,\n    value: arrayToIdMap(getCustomDashboards(dashboards)),\n});\n\nexport const acSetDashboardStarred = (dashboardId, isStarred) => ({\n    type: SET_DASHBOARD_STARRED,\n    dashboardId: dashboardId,\n    value: isStarred,\n});\n\nexport const acSetDashboardDisplayName = (dashboardId, value) => ({\n    type: SET_DASHBOARD_DISPLAY_NAME,\n    dashboardId,\n    value,\n});\n\nexport const acSetDashboardItems = value => ({\n    type: SET_DASHBOARD_ITEMS,\n    value,\n});\n\n// thunks\n\nexport const tFetchDashboards = () => async dispatch => {\n    const collection = await apiFetchDashboards();\n    dispatch(acSetDashboards(collection.toArray()));\n};\n\nexport const tSelectDashboard = id => async (dispatch, getState) => {\n    const onError = error => {\n        console.log('Error (apiFetchDashboards): ', error);\n        return error;\n    };\n\n    try {\n        const state = getState();\n\n        let dashboardToSelect = null;\n        if (id) {\n            dashboardToSelect = sGetDashboardById(state, id) || null;\n        } else {\n            const preferredId = getPreferredDashboardId(\n                sGetUserUsername(state)\n            );\n            const dash = sGetDashboardById(state, preferredId);\n            dashboardToSelect =\n                preferredId && dash\n                    ? dash\n                    : sGetDashboardsSortedByStarred(state)[0];\n        }\n\n        if (dashboardToSelect) {\n            dispatch(tSetSelectedDashboardById(dashboardToSelect.id));\n        } else {\n            dispatch(acSetSelectedId());\n        }\n    } catch (err) {\n        return onError(err);\n    }\n};\n\nexport const tStarDashboard = (id, isStarred) => async dispatch => {\n    const onSuccess = id => {\n        dispatch(acSetDashboardStarred(id, isStarred));\n        return id;\n    };\n\n    const onError = error => {\n        console.log('Error (apiStarDashboard): ', error);\n        return error;\n    };\n    try {\n        await apiStarDashboard(id, isStarred);\n        return onSuccess(id);\n    } catch (err) {\n        return onError(err);\n    }\n};\n\nexport const tDeleteDashboard = id => async dispatch => {\n    try {\n        await apiDeleteDashboard(id);\n        dispatch(acClearEditDashboard());\n        dispatch(acSetSelectedId());\n        dispatch(acSetDashboardItems([]));\n\n        await dispatch(tFetchDashboards());\n\n        return Promise.resolve();\n    } catch (err) {\n        console.log('Error (deleteDashboard): ', err);\n        return err;\n    }\n};\n","/** @module reducers/controlBar */\nimport { combineReducers } from 'redux';\nimport { validateReducer } from '../modules/util';\n\nexport const SET_CONTROLBAR_USER_ROWS = 'SET_CONTROLBAR_USER_ROWS';\n\nexport const DEFAULT_STATE_CONTROLBAR_ROWS = 1;\n\nconst userRows = (state = DEFAULT_STATE_CONTROLBAR_ROWS, action) => {\n    switch (action.type) {\n        case SET_CONTROLBAR_USER_ROWS:\n            return validateReducer(action.value, DEFAULT_STATE_CONTROLBAR_ROWS);\n        default:\n            return state;\n    }\n};\n\nexport default combineReducers({\n    userRows,\n});\n\n/**\n * Selectors that point to specific props in the state object\n * @function\n * @param {Object} state\n * @returns {Object}\n */\nexport const sGetControlBarRoot = state => state.controlBar;\n\n// Selector dependency level 2\n\nexport const sGetControlBarUserRows = state =>\n    sGetControlBarRoot(state).userRows;\n","import { getInstance } from 'd2';\nimport { DEFAULT_STATE_CONTROLBAR_ROWS } from '../reducers/controlBar';\n\nconst NAMESPACE = 'dashboard';\nconst KEY = 'controlBarRows';\n\nconst hasNamespace = async d2 => await d2.currentUser.dataStore.has(NAMESPACE);\n\nconst getNamespace = async (d2, hasNamespace) =>\n    hasNamespace\n        ? await d2.currentUser.dataStore.get(NAMESPACE)\n        : await d2.currentUser.dataStore.create(NAMESPACE);\n\nexport const apiGetControlBarRows = async () => {\n    const d2 = await getInstance();\n    const namespace = await getNamespace(d2, await hasNamespace(d2));\n    const hasKey = namespace.keys && namespace.keys.find(key => key === KEY);\n\n    if (hasKey) {\n        return await namespace.get(KEY);\n    } else {\n        await apiPostControlBarRows(DEFAULT_STATE_CONTROLBAR_ROWS, namespace);\n        console.log(\n            '(These errors to /userDataStore/dashboard can be ignored)'\n        );\n        return DEFAULT_STATE_CONTROLBAR_ROWS;\n    }\n};\n\nexport const apiPostControlBarRows = async (rows, namespace) => {\n    const d2 = await getInstance();\n    const ns = namespace || (await getNamespace(d2, hasNamespace));\n\n    ns.set(KEY, rows);\n};\n","import { SET_CONTROLBAR_USER_ROWS } from '../reducers/controlBar';\nimport { apiGetControlBarRows } from '../api/controlBar';\n\n// actions\n\nexport const acSetControlBarUserRows = rows => ({\n    type: SET_CONTROLBAR_USER_ROWS,\n    value: rows,\n});\n\n// thunks\n\nexport const tSetControlBarRows = () => async dispatch => {\n    const onSuccess = rows => {\n        dispatch(acSetControlBarUserRows(rows));\n    };\n\n    const onError = error => {\n        console.log('Error (apiGetControlBarRows): ', error);\n        return error;\n    };\n\n    try {\n        const controlBarRows = await apiGetControlBarRows();\n        return onSuccess(controlBarRows);\n    } catch (err) {\n        return onError(err);\n    }\n};\n","import {\n    getDimensionById,\n    DIMENSION_ID_PERIOD,\n    DIMENSION_ID_ORGUNIT,\n} from '@dhis2/analytics';\n\nexport const SET_DIMENSIONS = 'SET_DIMENSIONS';\nexport const DEFAULT_DIMENSIONS = [\n    getDimensionById(DIMENSION_ID_PERIOD),\n    getDimensionById(DIMENSION_ID_ORGUNIT),\n];\n\nexport default (state = DEFAULT_DIMENSIONS, action) => {\n    switch (action.type) {\n        case SET_DIMENSIONS: {\n            return [...DEFAULT_DIMENSIONS, ...action.value];\n        }\n        default:\n            return state;\n    }\n};\n\nexport const sGetDimensions = state => state.dimensions;\n","export const SET_SETTINGS = 'SET_SETTINGS';\nexport const ADD_SETTINGS = 'ADD_SETTINGS';\n\nexport const DEFAULT_SETTINGS = {\n    keyDateFormat: 'yyyy-MM-dd',\n    keyAnalysisRelativePeriod: 'LAST_12_MONTHS',\n    keyAnalysisDigitGroupSeparator: 'SPACE',\n    displayNameProperty: 'displayName',\n    uiLocale: 'en',\n    rootOrganisationUnit: {},\n};\n\nexport default (state = DEFAULT_SETTINGS, action) => {\n    switch (action.type) {\n        case SET_SETTINGS: {\n            return Object.assign({}, action.value);\n        }\n        case ADD_SETTINGS: {\n            return {\n                ...state,\n                ...action.value,\n            };\n        }\n        default:\n            return state;\n    }\n};\n\n// Selectors\n\nexport const sGetSettings = state => state.settings;\n\nexport const sGetSettingsDisplayNameProperty = state =>\n    sGetSettings(state).displayNameProperty;\n\nexport const sGetRootOrgUnit = state =>\n    sGetSettings(state).rootOrganisationUnit;\n\nexport const sGetRelativePeriod = state =>\n    sGetSettings(state).keyAnalysisRelativePeriod;\n\nexport const sGetUiLocale = state => sGetSettings(state).uiLocale;\n","import { SET_DIMENSIONS } from '../reducers/dimensions';\nimport { apiFetchDimensions } from '@dhis2/analytics';\nimport { sGetSettingsDisplayNameProperty } from '../reducers/settings';\n\nexport const acSetDimensions = dimensions => ({\n    type: SET_DIMENSIONS,\n    value: dimensions,\n});\n\nexport const tSetDimensions = d2 => async (dispatch, getState) => {\n    const onSuccess = dimensions => {\n        dispatch(acSetDimensions(dimensions));\n    };\n\n    const onError = error => {\n        console.log('Error (apiFetchDimensions): ', error);\n        return error;\n    };\n\n    try {\n        const displayNameProp = sGetSettingsDisplayNameProperty(getState());\n        const dimensions = await apiFetchDimensions(d2, displayNameProp);\n\n        // filter out CATEGORY that are not of type ATTRIBUTE\n        const filteredDimensions = dimensions.filter(\n            dim =>\n                dim.dimensionType !== 'CATEGORY' ||\n                (dim.dimensionType === 'CATEGORY' &&\n                    dim.dataDimensionType === 'ATTRIBUTE')\n        );\n        return onSuccess(filteredDimensions);\n    } catch (err) {\n        return onError(err);\n    }\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport i18n from '@dhis2/d2-i18n';\n\nimport classes from './styles/ShowMoreButton.module.css';\n\nexport const SHOWMORE_BAR_HEIGHT = 16;\n\nexport const ShowMoreButton = ({ onClick, isMaxHeight, disabled }) => {\n    return (\n        <div style={{ textAlign: 'center' }}>\n            {disabled ? (\n                <div className={classes.disabled}>{i18n.t('Show more')}</div>\n            ) : (\n                <div className={classes.showMore} onClick={onClick}>\n                    {isMaxHeight ? i18n.t('Show less') : i18n.t('Show more')}\n                </div>\n            )}\n        </div>\n    );\n};\n\nShowMoreButton.propTypes = {\n    disabled: PropTypes.bool,\n    isMaxHeight: PropTypes.bool,\n    onClick: PropTypes.func,\n};\n\nexport default ShowMoreButton;\n","import { SHOWMORE_BAR_HEIGHT } from './ShowMoreButton';\n\nexport const CONTROL_BAR_ROW_HEIGHT = 40;\nexport const FIRST_ROW_PADDING_HEIGHT = 10;\nexport const MIN_ROW_COUNT = 1;\n\nexport const HEADERBAR_HEIGHT = 48;\n\nconst CONTROL_BAR_OUTER_HEIGHT_DIFF =\n    FIRST_ROW_PADDING_HEIGHT + SHOWMORE_BAR_HEIGHT - 2; // 2 pixel \"adjustment\"\n\nexport const getRowsHeight = rows => {\n    return rows * CONTROL_BAR_ROW_HEIGHT;\n};\n\nexport const getNumRowsFromHeight = height => {\n    return Math.floor(\n        (height - CONTROL_BAR_OUTER_HEIGHT_DIFF) / CONTROL_BAR_ROW_HEIGHT\n    );\n};\n\nexport const getTopOffset = rows => {\n    return HEADERBAR_HEIGHT + getControlBarHeight(rows, false);\n};\n\nexport const getControlBarHeight = rows => {\n    return getRowsHeight(rows) + CONTROL_BAR_OUTER_HEIGHT_DIFF;\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { colors } from '@dhis2/ui-core';\nimport { HEADERBAR_HEIGHT } from './controlBarDimensions';\n\nimport classes from './styles/ControlBar.module.css';\n\nconst DRAG_HANDLE_HEIGHT = 7;\n\nclass ControlBar extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            dragging: false,\n        };\n    }\n\n    onStartDrag = () => {\n        this.setState({ dragging: true });\n        window.addEventListener('mousemove', this.onDrag);\n        window.addEventListener('mouseup', this.onEndDrag);\n    };\n\n    onDrag = event => {\n        event.preventDefault();\n        event.stopPropagation();\n\n        const newHeight = event.clientY;\n\n        if (\n            this.props.onChangeHeight &&\n            newHeight !== this.props.height &&\n            newHeight > 0\n        ) {\n            requestAnimationFrame(() => {\n                this.props.onChangeHeight(newHeight);\n            });\n        }\n    };\n\n    onEndDrag = () => {\n        this.setState({ dragging: false });\n        window.removeEventListener('mousemove', this.onDrag);\n        window.removeEventListener('mouseup', this.onEndDrag);\n\n        if (this.props.onEndDrag) {\n            this.props.onEndDrag();\n        }\n    };\n\n    renderDragHandle() {\n        return typeof this.props.onChangeHeight === 'function' ? (\n            <div\n                className={classes.draghandle}\n                style={{ height: DRAG_HANDLE_HEIGHT }}\n                onMouseDown={this.onStartDrag}\n            />\n        ) : null;\n    }\n\n    render() {\n        const height = Math.max(this.props.height, 0) + DRAG_HANDLE_HEIGHT;\n\n        const rootStyle = Object.assign(\n            {\n                height,\n                top: HEADERBAR_HEIGHT,\n                backgroundColor: this.props.editMode\n                    ? colors.yellow050\n                    : colors.white,\n                paddingBottom: DRAG_HANDLE_HEIGHT,\n            },\n            // Disable animations while dragging\n            this.state.dragging ? { transition: 'none' } : {}\n        );\n\n        return (\n            <div style={rootStyle} className={classes.root}>\n                <div className={classes.content}>{this.props.children}</div>\n                {this.renderDragHandle()}\n            </div>\n        );\n    }\n}\n\nControlBar.propTypes = {\n    /**\n     * The height of the control bar in number of lines. Must be a positive integer.\n     */\n    children: PropTypes.node.isRequired,\n\n    /**\n     * If true, the background color of the control bar changes to indicate that edit mode is active.\n     */\n    editMode: PropTypes.bool.isRequired,\n\n    /**\n     * Callback function that is called when the control bar is resized.\n     * The callback receives one argument: The new height in pixels.\n     *\n     * If no callback is specified the control bar will not have a drag handle.\n     */\n    height: PropTypes.number.isRequired,\n\n    /**\n     * Callback function that is called when the control bar is dropped after being dragged.\n     * The callback receives one argument: The new height in pixels.\n     *\n     * Ignored if no \"onChangeHeight\" function is provided.\n     */\n    onChangeHeight: PropTypes.func,\n\n    /**\n     * The contents of the control bar.\n     */\n    onEndDrag: PropTypes.func,\n};\n\nControlBar.defaultProps = {\n    onChangeHeight: null,\n    onEndDrag: null,\n};\n\nexport default ControlBar;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst StarIcon = ({ className }) => (\n    <svg\n        className={className}\n        xmlns=\"http://www.w3.org/2000/svg\"\n        viewBox=\"0 0 24 24\"\n    >\n        <path d=\"M0 0h24v24H0z\" fill=\"none\" />\n        <path d=\"M12 17.27L18.18 21l-1.64-7.03L22 9.24l-7.19-.61L12 2 9.19 8.63 2 9.24l5.46 4.73L5.82 21z\" />\n        <path d=\"M0 0h24v24H0z\" fill=\"none\" />\n    </svg>\n);\n\nStarIcon.propTypes = {\n    className: PropTypes.string,\n};\n\nexport default StarIcon;\n","import { getInstance } from 'd2';\n\nexport const apiPostDataStatistics = async (eventType, id) => {\n    const d2 = await getInstance();\n    const url = `dataStatistics?eventType=${eventType}&favorite=${id}`;\n\n    d2.Api.getApi().post(url);\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Chip } from '@dhis2/ui-core';\nimport { Link } from 'react-router-dom';\nimport debounce from 'lodash/debounce';\n\nimport StarIcon from '../../icons/Star';\nimport { apiPostDataStatistics } from '../../api/dataStatistics';\n\nimport classes from './styles/DashboardItemChip.module.css';\n\nexport const DashboardItemChip = ({\n    starred,\n    selected,\n    label,\n    dashboardId,\n}) => {\n    const chipProps = {\n        selected,\n    };\n\n    if (starred) {\n        const selectedState = selected ? classes.selected : classes.unselected;\n        chipProps.icon = (\n            <StarIcon className={`${classes.icon} ${selectedState}`} />\n        );\n    }\n\n    return (\n        <Link\n            className={classes.link}\n            to={`/${dashboardId}`}\n            onClick={debounce(\n                () => apiPostDataStatistics('DASHBOARD_VIEW', dashboardId),\n                500\n            )}\n        >\n            <Chip {...chipProps}>{label}</Chip>\n        </Link>\n    );\n};\n\nDashboardItemChip.propTypes = {\n    dashboardId: PropTypes.string.isRequired,\n    label: PropTypes.string.isRequired,\n    selected: PropTypes.bool.isRequired,\n    starred: PropTypes.bool.isRequired,\n    classes: PropTypes.object,\n};\n\nexport default DashboardItemChip;\n","import React from 'react';\nimport { colors } from '@dhis2/ui-core';\n\nconst AddCircleIcon = () => (\n    <svg\n        xmlns=\"http://www.w3.org/2000/svg\"\n        width=\"32\"\n        height=\"32\"\n        fill={colors.teal600}\n        viewBox=\"0 0 24 24\"\n    >\n        <path d=\"M12 2C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2zm4 11h-3v3c0 .55-.45 1-1 1s-1-.45-1-1v-3H8c-.55 0-1-.45-1-1s.45-1 1-1h3V8c0-.55.45-1 1-1s1 .45 1 1v3h3c.55 0 1 .45 1 1s-.45 1-1 1z\" />\n    </svg>\n);\n\nexport default AddCircleIcon;\n","import React from 'react';\nimport { colors } from '@dhis2/ui-core';\nimport PropTypes from 'prop-types';\n\nconst ClearIcon = ({ className }) => (\n    <svg\n        className={className}\n        fill={colors.grey800}\n        xmlns=\"http://www.w3.org/2000/svg\"\n        viewBox=\"0 0 24 24\"\n    >\n        <path d=\"M19 6.41L17.59 5 12 10.59 6.41 5 5 6.41 10.59 12 5 17.59 6.41 19 12 13.41 17.59 19 19 17.59 13.41 12z\" />\n        <path d=\"M0 0h24v24H0z\" fill=\"none\" />\n    </svg>\n);\n\nClearIcon.propTypes = {\n    className: PropTypes.string,\n};\n\nexport default ClearIcon;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport ClearIcon from '../../icons/Clear';\n\nimport classes from './styles/ClearButton.module.css';\n\nexport const ClearButton = ({ onClear }) => (\n    <button className={classes.button} onClick={onClear}>\n        <span>\n            <ClearIcon className={classes.icon} color=\"action\" />\n        </span>\n    </button>\n);\n\nClearButton.propTypes = {\n    onClear: PropTypes.func.isRequired,\n};\n\nexport default ClearButton;\n","import { combineReducers } from 'redux';\nimport { validateReducer } from '../modules/util';\n\nexport const SET_DASHBOARDS_FILTER_NAME = 'SET_DASHBOARDS_FILTER_NAME';\nexport const SET_DASHBOARDS_FILTER_OWNER = 'SET_DASHBOARDS_FILTER_OWNER';\nexport const SET_DASHBOARDS_FILTER_ORDER = 'SET_DASHBOARDS_FILTER_ORDER';\n\nexport const ownerData = [\n    { id: 'ALL', value: 'All users' },\n    { id: 'ME', value: 'Created by me' },\n    { id: 'OTHERS', value: 'Created by others' },\n];\n\nexport const orderData = [\n    { id: 'NAME:ASC', value: 'Name (asc)' },\n    { id: 'NAME:ASC', value: 'Name (desc)' },\n    { id: 'ITEMS:ASC', value: 'Number of items (asc)' },\n    { id: 'ITEMS:ASC', value: 'Number of items (desc)' },\n    { id: 'CREATED:ASC', value: 'Created date (asc)' },\n    { id: 'CREATED:ASC', value: 'Created date (desc)' },\n];\n\nexport const DEFAULT_STATE_DASHBOARDS_FILTER_NAME = '';\nexport const DEFAULT_STATE_DASHBOARDS_FILTER_OWNER = ownerData[0].id;\nexport const DEFAULT_STATE_DASHBOARDS_FILTER_ORDER = orderData[0].id;\n\nconst name = (state = DEFAULT_STATE_DASHBOARDS_FILTER_NAME, action) => {\n    switch (action.type) {\n        case SET_DASHBOARDS_FILTER_NAME:\n            return validateReducer(\n                action.value,\n                DEFAULT_STATE_DASHBOARDS_FILTER_NAME\n            );\n        default:\n            return state;\n    }\n};\n\nconst owner = (state = DEFAULT_STATE_DASHBOARDS_FILTER_OWNER, action) => {\n    switch (action.type) {\n        case SET_DASHBOARDS_FILTER_OWNER:\n            return validateReducer(\n                action.value,\n                DEFAULT_STATE_DASHBOARDS_FILTER_NAME\n            );\n        default:\n            return state;\n    }\n};\n\nconst order = (state = DEFAULT_STATE_DASHBOARDS_FILTER_ORDER, action) => {\n    switch (action.type) {\n        case SET_DASHBOARDS_FILTER_ORDER:\n            return validateReducer(\n                action.value,\n                DEFAULT_STATE_DASHBOARDS_FILTER_ORDER\n            );\n        default:\n            return state;\n    }\n};\n\nexport default combineReducers({\n    name,\n    owner,\n    order,\n});\n\n// selectors\n\nexport const sGetDashboardsFilterRoot = state => state.dashboardsFilter;\n\n// selector dependency level 2\n\nexport const sGetFilterName = state => sGetDashboardsFilterRoot(state).name;\nexport const sGetFilterOwner = state => sGetDashboardsFilterRoot(state).owner;\nexport const sGetFilterOrder = state => sGetDashboardsFilterRoot(state).order;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport i18n from '@dhis2/d2-i18n';\nimport { withStyles } from '@material-ui/core/styles';\nimport InputField from '@material-ui/core/Input';\nimport InputAdornment from '@material-ui/core/InputAdornment';\nimport SearchIcon from '@material-ui/icons/Search';\nimport { colors } from '@dhis2/ui-core';\n\nimport ClearButton from './ClearButton';\nimport { DEFAULT_STATE_DASHBOARDS_FILTER_NAME } from '../../reducers/dashboardsFilter';\n\nconst styles = {\n    filterField: {\n        fontSize: '14px',\n        width: '200px',\n        height: '30px',\n        top: '-4px',\n    },\n    searchIcon: {\n        color: colors.grey700,\n        width: '20px',\n        height: '20px',\n    },\n};\n\nexport const KEYCODE_ENTER = 13;\nexport const KEYCODE_ESCAPE = 27;\n\nexport class Filter extends Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            value: DEFAULT_STATE_DASHBOARDS_FILTER_NAME,\n        };\n    }\n\n    componentWillReceiveProps(nextProps) {\n        this.setState({\n            value: nextProps.name,\n        });\n    }\n\n    setFilterValue = event => {\n        event.preventDefault();\n\n        this.props.onChangeName(event.target.value);\n    };\n\n    handleKeyUp = event => {\n        switch (event.keyCode) {\n            case KEYCODE_ENTER:\n                this.props.onKeypressEnter();\n                break;\n            case KEYCODE_ESCAPE:\n                this.props.onChangeName();\n                break;\n            default:\n                break;\n        }\n    };\n\n    render() {\n        const { classes, name, onChangeName } = this.props;\n\n        const startAdornment = (\n            <InputAdornment position=\"start\">\n                <SearchIcon className={classes.searchIcon} />\n            </InputAdornment>\n        );\n\n        const endAdornment =\n            name !== '' && name !== null ? (\n                <InputAdornment position=\"end\">\n                    <ClearButton onClear={() => onChangeName()} />\n                </InputAdornment>\n            ) : null;\n\n        return (\n            <InputField\n                className={classes.filterField}\n                placeholder={i18n.t('Search for a dashboard')}\n                startAdornment={startAdornment}\n                endAdornment={endAdornment}\n                value={this.state.value}\n                onChange={this.setFilterValue}\n                onKeyUp={this.handleKeyUp}\n            />\n        );\n    }\n}\n\nFilter.propTypes = {\n    classes: PropTypes.object,\n    name: PropTypes.string,\n    onChangeName: PropTypes.func,\n    onKeypressEnter: PropTypes.func,\n};\n\nFilter.defaultProps = {\n    name: '',\n    onChangeName: Function.prototype,\n};\n\nexport default withStyles(styles)(Filter);\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { Link, withRouter } from 'react-router-dom';\nimport ControlBar from './ControlBar';\nimport arraySort from 'd2-utilizr/lib/arraySort';\nimport PropTypes from 'prop-types';\n\nimport Chip from './DashboardItemChip';\nimport AddCircleIcon from '../../icons/AddCircle';\nimport Filter from './Filter';\nimport ShowMoreButton from './ShowMoreButton';\nimport {\n    FIRST_ROW_PADDING_HEIGHT,\n    MIN_ROW_COUNT,\n    getRowsHeight,\n    getControlBarHeight,\n    getNumRowsFromHeight,\n} from './controlBarDimensions';\nimport { sGetControlBarUserRows } from '../../reducers/controlBar';\nimport { sGetAllDashboards } from '../../reducers/dashboards';\nimport { sGetFilterName } from '../../reducers/dashboardsFilter';\nimport { sGetSelectedId } from '../../reducers/selected';\nimport { acSetControlBarUserRows } from '../../actions/controlBar';\nimport { acSetFilterName } from '../../actions/dashboardsFilter';\nimport { orObject, orArray } from '../../modules/util';\nimport { apiPostControlBarRows } from '../../api/controlBar';\n\nimport classes from './styles/DashboardsBar.module.css';\n\nexport const MAX_ROW_COUNT = 10;\n\nexport class DashboardsBar extends Component {\n    state = {\n        rows: MIN_ROW_COUNT,\n    };\n\n    setInitialDashboardState = rows => {\n        this.setState({ rows, isMaxHeight: rows === MAX_ROW_COUNT });\n    };\n\n    componentDidMount() {\n        this.setInitialDashboardState(this.props.userRows);\n    }\n\n    componentWillReceiveProps(nextProps) {\n        this.setInitialDashboardState(nextProps.userRows);\n    }\n\n    onChangeHeight = newHeight => {\n        const adjustedHeight = newHeight - 52; // don't rush the transition to a bigger row count\n        const newRows = Math.max(\n            MIN_ROW_COUNT,\n            getNumRowsFromHeight(adjustedHeight)\n        );\n\n        if (newRows !== this.state.rows) {\n            const newRowCount = Math.min(newRows, MAX_ROW_COUNT);\n\n            this.props.onChangeHeight(newRowCount);\n        }\n    };\n\n    onEndDrag = () => {\n        return apiPostControlBarRows(this.state.rows);\n    };\n\n    onToggleMaxHeight = () => {\n        const rows =\n            this.state.rows === MAX_ROW_COUNT\n                ? this.props.userRows\n                : MAX_ROW_COUNT;\n\n        this.setState({ rows, isMaxHeight: !this.state.isMaxHeight });\n    };\n\n    onSelectDashboard = () => {\n        this.props.history.push(`/${this.props.dashboards[0].id}`);\n    };\n\n    render() {\n        const { dashboards, name, selectedId, onChangeFilterName } = this.props;\n\n        const rowCount = this.state.isMaxHeight\n            ? MAX_ROW_COUNT\n            : this.state.rows;\n        const controlBarHeight = getControlBarHeight(rowCount);\n        const contentWrapperStyle = {\n            padding: `${FIRST_ROW_PADDING_HEIGHT}px 6px 0 6px`,\n            overflowY: this.state.isMaxHeight ? 'auto' : 'hidden',\n            height: getRowsHeight(rowCount) + FIRST_ROW_PADDING_HEIGHT,\n        };\n\n        return (\n            <ControlBar\n                height={controlBarHeight}\n                onChangeHeight={this.onChangeHeight}\n                onEndDrag={this.onEndDrag}\n                editMode={false}\n            >\n                <div style={contentWrapperStyle}>\n                    <div className={classes.leftControls}>\n                        <Link\n                            style={{\n                                display: 'inline-block',\n                                textDecoration: 'none',\n                                marginRight: 10,\n                                position: 'relative',\n                                top: '2px',\n                            }}\n                            to={'/new'}\n                        >\n                            <AddCircleIcon />\n                        </Link>\n                        <Filter\n                            name={name}\n                            onChangeName={onChangeFilterName}\n                            onKeypressEnter={this.onSelectDashboard}\n                        />\n                    </div>\n                    {orArray(dashboards).map(dashboard => (\n                        <Chip\n                            key={dashboard.id}\n                            label={dashboard.displayName}\n                            starred={dashboard.starred}\n                            dashboardId={dashboard.id}\n                            selected={dashboard.id === selectedId}\n                        />\n                    ))}\n                </div>\n                <ShowMoreButton\n                    onClick={this.onToggleMaxHeight}\n                    isMaxHeight={this.state.isMaxHeight}\n                    disabled={this.props.userRows === MAX_ROW_COUNT}\n                />\n            </ControlBar>\n        );\n    }\n}\n\nconst mapStateToProps = state => ({\n    dashboards: sGetAllDashboards(state),\n    name: sGetFilterName(state),\n    userRows: sGetControlBarUserRows(state),\n    selectedId: sGetSelectedId(state),\n});\n\nconst mapDispatchToProps = {\n    onChangeHeight: acSetControlBarUserRows,\n    onChangeFilterName: acSetFilterName,\n};\nconst mergeProps = (stateProps, dispatchProps, ownProps) => {\n    const dashboards = Object.values(orObject(stateProps.dashboards));\n    const displayDashboards = arraySort(\n        dashboards.filter(d =>\n            d.displayName.toLowerCase().includes(stateProps.name.toLowerCase())\n        ),\n        'ASC',\n        'displayName'\n    );\n\n    return {\n        ...stateProps,\n        ...ownProps,\n        ...dispatchProps,\n        dashboards: [\n            ...displayDashboards.filter(d => d.starred),\n            ...displayDashboards.filter(d => !d.starred),\n        ],\n    };\n};\n\nDashboardsBar.propTypes = {\n    dashboards: PropTypes.array,\n    history: PropTypes.object,\n    name: PropTypes.string,\n    selectedId: PropTypes.string,\n    userRows: PropTypes.number,\n    onChangeFilterName: PropTypes.func,\n    onChangeHeight: PropTypes.func,\n};\n\nexport default withRouter(\n    connect(\n        mapStateToProps,\n        mapDispatchToProps,\n        mergeProps\n    )(DashboardsBar)\n);\n","import {\n    SET_DASHBOARDS_FILTER_NAME,\n    SET_DASHBOARDS_FILTER_OWNER,\n    SET_DASHBOARDS_FILTER_ORDER,\n} from '../reducers/dashboardsFilter';\n\n// actions\n\nexport const acSetFilterName = value => ({\n    type: SET_DASHBOARDS_FILTER_NAME,\n    value,\n});\n\nexport const acSetFilterOwner = value => ({\n    type: SET_DASHBOARDS_FILTER_OWNER,\n    value,\n});\n\nexport const acSetFilterOrder = value => ({\n    type: SET_DASHBOARDS_FILTER_ORDER,\n    value,\n});\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\n\nimport {\n    getTopOffset,\n    MIN_ROW_COUNT,\n} from '../ControlBar/controlBarDimensions';\nimport { sGetControlBarUserRows } from '../../reducers/controlBar';\n\nconst DashboardVerticalOffset = props => {\n    const rows = props.editMode ? MIN_ROW_COUNT : props.userRows;\n    const marginTop = getTopOffset(rows);\n\n    return <div className=\"page-container-top-margin\" style={{ marginTop }} />;\n};\n\nconst mapStateToProps = state => ({\n    userRows: sGetControlBarUserRows(state),\n});\n\nDashboardVerticalOffset.propTypes = {\n    editMode: PropTypes.bool,\n    userRows: PropTypes.number,\n};\n\nexport default connect(mapStateToProps)(DashboardVerticalOffset);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { MenuItem, colors } from '@dhis2/ui-core';\n\nconst HeaderMenuItem = ({ title }) => (\n    <MenuItem\n        dense\n        key={title}\n        disabled\n        label={\n            <span style={{ color: colors.grey800, fontWeight: '600' }}>\n                {title}\n            </span>\n        }\n    />\n);\n\nHeaderMenuItem.propTypes = {\n    title: PropTypes.string.isRequired,\n};\n\nexport default HeaderMenuItem;\n","import React from 'react';\nimport { colors } from '@dhis2/ui-core';\nimport PropTypes from 'prop-types';\n\nconst LaunchIcon = ({ className }) => (\n    <svg\n        className={className}\n        xmlns=\"http://www.w3.org/2000/svg\"\n        width=\"12\"\n        height=\"12\"\n        fill={colors.grey600}\n        viewBox=\"0 0 24 24\"\n    >\n        <path d=\"M0 0h24v24H0z\" fill=\"none\" />\n        <path d=\"M19 19H5V5h7V3H5c-1.11 0-2 .9-2 2v14c0 1.1.89 2 2 2h14c1.1 0 2-.9 2-2v-7h-2v7zM14 3v2h3.59l-9.83 9.83 1.41 1.41L19 6.41V10h2V3h-7z\" />\n    </svg>\n);\n\nLaunchIcon.propTypes = {\n    className: PropTypes.string,\n};\n\nexport default LaunchIcon;\n","import React from 'react';\nimport { MenuItem, colors } from '@dhis2/ui-core';\nimport i18n from '@dhis2/d2-i18n';\nimport PropTypes from 'prop-types';\nimport { visTypeIcons } from '@dhis2/analytics';\n\nimport { getItemIcon, VISUALIZATION } from '../../modules/itemTypes';\nimport LaunchIcon from '../../icons/Launch';\n\nimport classes from './styles/ContentMenuItem.module.css';\n\nconst LaunchLink = ({ url }) => (\n    <a\n        onClick={e => e.stopPropagation()}\n        className={classes.launchLink}\n        target=\"_blank\"\n        rel=\"noopener noreferrer\"\n        href={url}\n    >\n        <LaunchIcon />\n    </a>\n);\n\nLaunchLink.propTypes = {\n    url: PropTypes.string,\n};\n\nconst InsertButton = () => (\n    <button className={classes.buttonInsert}>{i18n.t('Insert')}</button>\n);\n\nconst ContentMenuItem = ({ type, name, onInsert, url, visType }) => {\n    const ItemIcon = getItemIcon(type);\n\n    const renderedItemIcon =\n        type === VISUALIZATION ? (\n            visTypeIcons[visType]\n        ) : (\n            <ItemIcon style={{ fill: colors.grey600 }} />\n        );\n\n    return (\n        <MenuItem\n            dense\n            onClick={onInsert}\n            label={\n                <div className={classes.menuItem}>\n                    <div className={classes.label}>\n                        <span style={{ marginRight: '6px' }}>\n                            {renderedItemIcon}\n                        </span>\n                        <span>{name}</span>\n                        {url ? <LaunchLink url={url} /> : null}\n                    </div>\n                    <InsertButton />\n                </div>\n            }\n        />\n    );\n};\n\nContentMenuItem.propTypes = {\n    name: PropTypes.string,\n    type: PropTypes.string,\n    url: PropTypes.string,\n    visType: PropTypes.string,\n    onInsert: PropTypes.func,\n};\n\nexport default ContentMenuItem;\n","import i18n from '@dhis2/d2-i18n';\nimport {\n    VISUALIZATION,\n    MAP,\n    EVENT_CHART,\n    EVENT_REPORT,\n    USERS,\n    REPORTS,\n    RESOURCES,\n    APP,\n    MESSAGES,\n    TEXT,\n    SPACER,\n} from '../../modules/itemTypes';\n\nexport const singleItems = [\n    {\n        id: 'additional',\n        header: i18n.t('Additional items'),\n        items: [\n            {\n                type: TEXT,\n                name: i18n.t('Text box'),\n                content: '',\n            },\n            {\n                type: MESSAGES,\n                name: i18n.t('Messages'),\n                content: 'true',\n            },\n            {\n                type: SPACER,\n                name: i18n.t('Spacer'),\n                content: '',\n            },\n        ],\n    },\n];\n\n// categorizedItems are grouped in the item selector menu\nexport const categorizedItems = [\n    VISUALIZATION,\n    MAP,\n    EVENT_REPORT,\n    EVENT_CHART,\n    USERS,\n    REPORTS,\n    RESOURCES,\n    APP,\n];\n\n// listItemTypes are included in a single dashboard item\nexport const listItemTypes = [REPORTS, RESOURCES, USERS];\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport i18n from '@dhis2/d2-i18n';\nimport { MenuItem, Divider } from '@dhis2/ui-core';\n\nimport HeaderMenuItem from './HeaderMenuItem';\nimport ContentMenuItem from './ContentMenuItem';\n\nimport { tAddListItemContent } from './actions';\nimport { acAddDashboardItem } from '../../actions/editDashboard';\nimport { getItemUrl, APP, VISUALIZATION } from '../../modules/itemTypes';\nimport { categorizedItems, listItemTypes } from './selectableItems';\n\nimport classes from './styles/CategorizedMenuGroup.module.css';\n\nclass CategorizedMenuGroup extends Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            seeMore: false,\n        };\n    }\n\n    addItem = item => () => {\n        const { type, acAddDashboardItem, tAddListItemContent } = this.props;\n\n        if (type === APP) {\n            acAddDashboardItem({ type, content: item.key });\n        } else {\n            const newItem = {\n                id: item.id,\n                name: item.displayName || item.name,\n            };\n\n            if (listItemTypes.includes(type)) {\n                tAddListItemContent(type, newItem);\n            } else {\n                acAddDashboardItem({ type, content: newItem });\n            }\n        }\n    };\n\n    toggleSeeMore = () => {\n        this.setState({ seeMore: !this.state.seeMore });\n\n        this.props.onChangeItemsLimit(this.props.type);\n    };\n\n    render() {\n        const { title, type, items, hasMore } = this.props;\n        return (\n            <>\n                <HeaderMenuItem title={title} />\n                {items.map(item => {\n                    const itemUrl = getItemUrl(type, item, this.context.d2);\n                    return (\n                        <ContentMenuItem\n                            key={item.id || item.key}\n                            type={type}\n                            visType={type === VISUALIZATION ? item.type : type}\n                            name={item.displayName || item.name}\n                            onInsert={this.addItem(item)}\n                            url={itemUrl}\n                        />\n                    );\n                })}\n                {hasMore ? (\n                    <MenuItem\n                        dense\n                        key={`showmore${title}`}\n                        onClick={this.toggleSeeMore}\n                        label={\n                            <button className={classes.showMoreButton}>\n                                {this.state.seeMore\n                                    ? i18n.t('Show fewer')\n                                    : i18n.t('Show more')}\n                            </button>\n                        }\n                    />\n                ) : null}\n                <Divider margin=\"8px 0px\" />\n            </>\n        );\n    }\n}\n\nCategorizedMenuGroup.propTypes = {\n    items: PropTypes.array.isRequired,\n    title: PropTypes.string.isRequired,\n    type: PropTypes.oneOf(categorizedItems).isRequired,\n    onChangeItemsLimit: PropTypes.func.isRequired,\n    acAddDashboardItem: PropTypes.func,\n    hasMore: PropTypes.bool,\n    tAddListItemContent: PropTypes.func,\n};\n\nCategorizedMenuGroup.contextTypes = {\n    d2: PropTypes.object.isRequired,\n};\n\nexport default connect(\n    null,\n    {\n        acAddDashboardItem,\n        tAddListItemContent,\n    }\n)(CategorizedMenuGroup);\n","import { sGetEditDashboardRoot } from '../../reducers/editDashboard';\nimport { itemTypeMap } from '../../modules/itemTypes';\nimport {\n    acAddDashboardItem,\n    acUpdateDashboardItem,\n} from '../../actions/editDashboard';\n\nexport const tAddListItemContent = (type, content) => (dispatch, getState) => {\n    const state = getState();\n    const listItemType = itemTypeMap[type].propName;\n    const dashboardItems = sGetEditDashboardRoot(state).dashboardItems;\n    const dashboardItemIndex = dashboardItems.findIndex(\n        item => item.type === type\n    );\n    let dashboardItem;\n\n    // Reports/Resources/Users dashboard item type already present in dashboard\n    if (dashboardItemIndex > -1) {\n        dashboardItem = dashboardItems[dashboardItemIndex];\n        dashboardItem[listItemType].push(content);\n\n        dispatch(acUpdateDashboardItem(dashboardItem));\n    } else {\n        dashboardItem = {\n            type: type,\n            content: [content],\n        };\n\n        dispatch(acAddDashboardItem(dashboardItem));\n    }\n};\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\n\nimport HeaderMenuItem from './HeaderMenuItem';\nimport ContentMenuItem from './ContentMenuItem';\nimport { acAddDashboardItem } from '../../actions/editDashboard';\n\nexport const SinglesMenuGroup = ({ acAddDashboardItem, category }) => {\n    const addToDashboard = ({ type, content }) => () => {\n        acAddDashboardItem({ type, content });\n    };\n\n    return (\n        <>\n            <HeaderMenuItem title={category.header} />\n            {category.items.map(item => (\n                <ContentMenuItem\n                    key={item.type}\n                    type={item.type}\n                    name={item.name}\n                    onInsert={addToDashboard(item)}\n                />\n            ))}\n        </>\n    );\n};\n\nSinglesMenuGroup.propTypes = {\n    acAddDashboardItem: PropTypes.func,\n    category: PropTypes.object,\n};\n\nexport default connect(\n    null,\n    { acAddDashboardItem }\n)(SinglesMenuGroup);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport i18n from '@dhis2/d2-i18n';\nimport Popover from '@material-ui/core/Popover';\nimport { InputField, Menu } from '@dhis2/ui-core';\n\nimport CategorizedMenuGroup from './CategorizedMenuGroup';\nimport SinglesMenuGroup from './SinglesMenuGroup';\nimport { singleItems, categorizedItems } from './selectableItems';\nimport { itemTypeMap, getDefaultItemCount } from '../../modules/itemTypes';\n\nimport './styles/ItemSelector.css';\n\nconst ItemSearchField = props => (\n    <InputField\n        name=\"Dashboard item search\"\n        label={i18n.t('Search for items to add to this dashboard')}\n        type=\"text\"\n        onChange={props.onChange}\n        onFocus={props.onFocus}\n        value={props.value}\n    />\n);\n\nclass ItemSelector extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            anchorEl: null,\n            open: false,\n            maxOptions: new Set(),\n            items: undefined,\n            filter: '',\n        };\n    }\n\n    closeList = () => {\n        this.setState({ open: false, filter: '' });\n    };\n\n    openList = (_, event) => {\n        this.fetchItems();\n\n        this.setState({\n            anchorEl: event.currentTarget,\n            open: true,\n        });\n    };\n\n    setFilter = (_, event) => {\n        this.setState({ filter: event.target.value }, this.fetchItems);\n    };\n\n    getCategorizedMenuGroups = () =>\n        categorizedItems\n            .filter(type => {\n                const itemType = itemTypeMap[type];\n                return (\n                    this.state.items && this.state.items[itemType.endPointName]\n                );\n            })\n            .map(type => {\n                const itemType = itemTypeMap[type];\n                const itemCount = getDefaultItemCount(type);\n                const allItems = this.state.items[itemType.endPointName];\n                const hasMore = allItems.length > itemCount;\n                const items = this.state.maxOptions.has(itemType.id)\n                    ? allItems\n                    : allItems.slice(0, itemCount);\n\n                return (\n                    <CategorizedMenuGroup\n                        key={type}\n                        type={type}\n                        title={itemType.pluralTitle}\n                        items={items}\n                        onChangeItemsLimit={this.fetchItems}\n                        hasMore={hasMore}\n                    />\n                );\n            });\n\n    getSinglesMenuGroups = () =>\n        singleItems.map(category => (\n            <SinglesMenuGroup key={category.id} category={category} />\n        ));\n\n    getMenuGroups = () =>\n        this.getCategorizedMenuGroups().concat(this.getSinglesMenuGroups());\n\n    fetchItems = async type => {\n        if (type) {\n            const maxOptions = this.state.maxOptions;\n\n            if (maxOptions.has(type)) {\n                maxOptions.delete(type);\n            } else {\n                maxOptions.add(type);\n            }\n\n            this.setState({ maxOptions });\n        } else {\n            this.setState({\n                maxOptions: new Set(),\n            });\n        }\n\n        let queryString = '?count=11';\n        if ([...this.state.maxOptions.values()].length) {\n            queryString +=\n                '&max=' + [...this.state.maxOptions.values()].join('&max=');\n        }\n\n        const filter = this.state.filter ? `/${this.state.filter}` : '';\n\n        this.context.d2.Api.getApi()\n            .get(`dashboards/q${filter}${queryString}`)\n            .then(response => this.setState({ items: response }))\n            .catch(console.error);\n    };\n\n    render() {\n        return (\n            <>\n                <ItemSearchField\n                    value={this.state.filter}\n                    onChange={this.setFilter}\n                    onFocus={this.openList}\n                />\n                <Popover\n                    className=\"dashboard-item-selector\"\n                    open={this.state.open}\n                    onClose={this.closeList}\n                    anchorEl={this.state.anchorEl}\n                    anchorOrigin={{ horizontal: 'left', vertical: 'bottom' }}\n                    transformOrigin={{ horizontal: 'left', vertical: 'top' }}\n                    style={{ height: '70vh' }}\n                    PaperProps={{ style: { width: '700px' } }}\n                    disableAutoFocus={true}\n                    disableEnforceFocus={true}\n                    disableRestoreFocus={true}\n                >\n                    <Menu maxWidth={'700px'}>{this.getMenuGroups()}</Menu>\n                </Popover>\n            </>\n        );\n    }\n}\n\nItemSearchField.propTypes = {\n    value: PropTypes.string,\n    onChange: PropTypes.func,\n    onFocus: PropTypes.func,\n};\n\nItemSelector.contextTypes = {\n    d2: PropTypes.object.isRequired,\n};\n\nexport default ItemSelector;\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport i18n from '@dhis2/d2-i18n';\nimport { InputField, TextAreaField } from '@dhis2/ui-core';\n\nimport ItemSelector from '../ItemSelector/ItemSelector';\nimport {\n    acSetDashboardTitle,\n    acSetDashboardDescription,\n} from '../../actions/editDashboard';\nimport { orObject } from '../../modules/util';\nimport { sGetEditDashboardRoot } from '../../reducers/editDashboard';\n\nimport classes from './styles/EditTitleBar.module.css';\n\nexport const EditTitleBar = ({\n    name,\n    description,\n    onChangeTitle,\n    onChangeDescription,\n}) => {\n    const updateTitle = (_, e) => {\n        onChangeTitle(e.target.value);\n    };\n\n    const updateDescription = (_, e) => {\n        onChangeDescription(e.target.value);\n    };\n\n    return (\n        <section className={classes.section}>\n            <div className={classes.titleDescription}>\n                <InputField\n                    className={classes.title}\n                    name=\"Dashboard title input\"\n                    label={i18n.t('Dashboard title')}\n                    type=\"text\"\n                    onChange={updateTitle}\n                    value={name}\n                />\n                <TextAreaField\n                    className={classes.description}\n                    name=\"Dashboard description input\"\n                    label={i18n.t('Dashboard description')}\n                    onChange={updateDescription}\n                    value={description}\n                />\n            </div>\n            <div className={classes.itemSelector}>\n                <ItemSelector />\n            </div>\n        </section>\n    );\n};\n\nEditTitleBar.propTypes = {\n    onChangeDescription: PropTypes.func.isRequired,\n    onChangeTitle: PropTypes.func.isRequired,\n    description: PropTypes.string,\n    name: PropTypes.string,\n};\n\nEditTitleBar.defaultProps = {\n    name: '',\n    description: '',\n};\n\nconst mapStateToProps = state => {\n    const selectedDashboard = orObject(sGetEditDashboardRoot(state));\n\n    return {\n        name: selectedDashboard.name,\n        description: selectedDashboard.description,\n    };\n};\n\nconst mapDispatchToProps = {\n    onChangeTitle: acSetDashboardTitle,\n    onChangeDescription: acSetDashboardDescription,\n};\n\nexport default connect(\n    mapStateToProps,\n    mapDispatchToProps\n)(EditTitleBar);\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nimport { Button } from '@dhis2/ui-core';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\n\nimport i18n from '@dhis2/d2-i18n';\n\nimport {\n    PeriodDimension,\n    DynamicDimension,\n    OrgUnitDimension,\n    DIMENSION_ID_PERIOD,\n    DIMENSION_ID_ORGUNIT,\n} from '@dhis2/analytics';\n\nconst peId = DIMENSION_ID_PERIOD;\nconst ouId = DIMENSION_ID_ORGUNIT;\n\nclass FilterDialog extends Component {\n    onConfirm = id => () => this.props.onConfirm(id);\n\n    dialogContent() {\n        const { displayNameProperty, dimension, selectedItems } = this.props;\n        const dialogId = dimension.id;\n\n        const commonProps = {\n            d2: this.context.d2,\n            onSelect: this.props.onSelect,\n            onDeselect: this.props.onDeselect,\n            onReorder: this.props.onReorder,\n        };\n\n        switch (dialogId) {\n            case peId: {\n                return (\n                    <PeriodDimension\n                        selectedPeriods={selectedItems}\n                        {...commonProps}\n                    />\n                );\n            }\n            case ouId:\n                return (\n                    <OrgUnitDimension\n                        displayNameProperty={displayNameProperty}\n                        ouItems={selectedItems}\n                        {...commonProps}\n                    />\n                );\n            default:\n                return (\n                    <DynamicDimension\n                        selectedItems={selectedItems}\n                        dialogId={dialogId}\n                        dialogTitle={dimension.name}\n                        {...commonProps}\n                    />\n                );\n        }\n    }\n\n    render() {\n        const { dimension, onClose } = this.props;\n        const dialogId = dimension.id;\n\n        return (\n            <Dialog\n                open={!!dialogId}\n                maxWidth=\"lg\"\n                disableEnforceFocus\n                onClose={onClose}\n            >\n                {dialogId && this.dialogContent()}\n                <DialogActions>\n                    <Button kind=\"secondary\" onClick={onClose}>\n                        {i18n.t('Cancel')}\n                    </Button>\n                    <Button kind=\"primary\" onClick={this.onConfirm(dialogId)}>\n                        {i18n.t('Confirm')}\n                    </Button>\n                </DialogActions>\n            </Dialog>\n        );\n    }\n}\n\nFilterDialog.propTypes = {\n    dimension: PropTypes.object,\n    displayNameProperty: PropTypes.string,\n    selectedItems: PropTypes.array,\n    onClose: PropTypes.func,\n    onConfirm: PropTypes.func,\n    onDeselect: PropTypes.func,\n    onReorder: PropTypes.func,\n    onSelect: PropTypes.func,\n};\n\nFilterDialog.contextTypes = {\n    d2: PropTypes.object,\n};\n\nexport default FilterDialog;\n","export const SET_ACTIVE_MODAL_DIMENSION = 'SET_ACTIVE_MODAL_DIMENSION';\nexport const CLEAR_ACTIVE_MODAL_DIMENSION = 'CLEAR_ACTIVE_MODAL_DIMENSION';\n\nexport const DEFAULT_STATE_ACTIVE_MODAL_DIMENSION = {};\n\nexport default (state = DEFAULT_STATE_ACTIVE_MODAL_DIMENSION, action) => {\n    switch (action.type) {\n        case SET_ACTIVE_MODAL_DIMENSION: {\n            return action.value;\n        }\n        case CLEAR_ACTIVE_MODAL_DIMENSION: {\n            return DEFAULT_STATE_ACTIVE_MODAL_DIMENSION;\n        }\n        default:\n            return state;\n    }\n};\n\nexport const sGetActiveModalDimension = state => state.activeModalDimension;\n","import {\n    SET_ACTIVE_MODAL_DIMENSION,\n    CLEAR_ACTIVE_MODAL_DIMENSION,\n} from '../reducers/activeModalDimension';\n\nexport const acSetActiveModalDimension = value => ({\n    type: SET_ACTIVE_MODAL_DIMENSION,\n    value,\n});\n\nexport const acClearActiveModalDimension = () => ({\n    type: CLEAR_ACTIVE_MODAL_DIMENSION,\n});\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport Popover from '@material-ui/core/Popover';\nimport ArrowDropDownIcon from '@material-ui/icons/ArrowDropDown';\n\nimport i18n from '@dhis2/d2-i18n';\nimport { DimensionsPanel } from '@dhis2/analytics';\n\nimport { Button } from '@dhis2/ui-core';\nimport FilterDialog from './FilterDialog';\n\nimport { sGetSettingsDisplayNameProperty } from '../../reducers/settings';\nimport { sGetActiveModalDimension } from '../../reducers/activeModalDimension';\nimport { sGetDimensions } from '../../reducers/dimensions';\nimport { sGetFiltersKeys } from '../../reducers/itemFilters';\nimport { sGetEditItemFiltersRoot } from '../../reducers/editItemFilters';\nimport { acAddItemFilter, acRemoveItemFilter } from '../../actions/itemFilters';\nimport {\n    acRemoveEditItemFilter,\n    acSetEditItemFilters,\n} from '../../actions/editItemFilters';\nimport {\n    acClearActiveModalDimension,\n    acSetActiveModalDimension,\n} from '../../actions/activeModalDimension';\n\nclass FilterSelector extends Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            anchorEl: null,\n        };\n    }\n\n    openPanel = (_, event) => {\n        this.setState({ anchorEl: event.currentTarget });\n    };\n\n    closePanel = () => {\n        this.setState({ anchorEl: null });\n    };\n\n    closeDialog = () => {\n        this.setState({ anchorEl: null });\n\n        this.props.clearActiveModalDimension();\n    };\n\n    selectDimension = id => {\n        this.props.setActiveModalDimension(\n            this.props.dimensions.find(dimension => dimension.id === id)\n        );\n    };\n\n    onSelectItems = ({ dimensionId, items }) => {\n        this.props.setEditItemFilters({\n            ...this.props.selectedItems,\n            [dimensionId]: items,\n        });\n    };\n\n    onDeselectItems = ({ dimensionId, itemIdsToRemove }) => {\n        const oldList = this.props.selectedItems[dimensionId] || [];\n        const newList = oldList.filter(\n            item => !itemIdsToRemove.includes(item.id)\n        );\n\n        if (newList.length) {\n            this.props.setEditItemFilters({\n                ...this.props.selectedItems,\n                [dimensionId]: newList,\n            });\n        } else {\n            this.props.removeEditItemFilter(dimensionId);\n        }\n    };\n\n    onReorderItems = ({ dimensionId, itemIds }) => {\n        const oldList = this.props.selectedItems[dimensionId] || [];\n        const reorderedList = itemIds.map(id =>\n            oldList.find(item => item.id === id)\n        );\n\n        this.props.setEditItemFilters({\n            ...this.props.selectedItems,\n            [dimensionId]: reorderedList,\n        });\n    };\n\n    saveFilter = id => {\n        const filterItems = this.props.selectedItems[id];\n\n        if (filterItems && filterItems.length) {\n            this.props.addItemFilter({\n                id,\n                value: [...filterItems],\n            });\n        } else {\n            this.props.removeItemFilter(id);\n        }\n\n        this.closeDialog();\n    };\n\n    render() {\n        const {\n            displayNameProperty,\n            dimension,\n            dimensions,\n            selectedDimensions,\n            selectedItems,\n        } = this.props;\n\n        return (\n            <>\n                <Button onClick={this.openPanel}>\n                    {i18n.t('Add filter')}\n                    <ArrowDropDownIcon />\n                </Button>\n                <Popover\n                    open={Boolean(this.state.anchorEl)}\n                    anchorEl={this.state.anchorEl}\n                    anchorOrigin={{ vertical: 'bottom', horizontal: 'left' }}\n                    onClose={this.closePanel}\n                    style={{ height: '100%' }}\n                >\n                    <DimensionsPanel\n                        style={{ width: '320px' }}\n                        dimensions={dimensions}\n                        onDimensionClick={this.selectDimension}\n                        selectedIds={selectedDimensions}\n                    />\n                </Popover>\n                {dimension ? (\n                    <FilterDialog\n                        displayNameProperty={displayNameProperty}\n                        dimension={dimension}\n                        selectedItems={selectedItems[dimension.id] || []}\n                        onSelect={this.onSelectItems}\n                        onDeselect={this.onDeselectItems}\n                        onReorder={this.onReorderItems}\n                        onClose={this.closeDialog}\n                        onConfirm={this.saveFilter}\n                    />\n                ) : null}\n            </>\n        );\n    }\n}\n\nconst mapStateToProps = state => ({\n    displayNameProperty: sGetSettingsDisplayNameProperty(state),\n    dimension: sGetActiveModalDimension(state),\n    dimensions: sGetDimensions(state),\n    selectedDimensions: sGetFiltersKeys(state),\n    selectedItems: sGetEditItemFiltersRoot(state),\n});\n\nFilterSelector.propTypes = {\n    addItemFilter: PropTypes.func,\n    clearActiveModalDimension: PropTypes.func,\n    dimension: PropTypes.object,\n    dimensions: PropTypes.array,\n    displayNameProperty: PropTypes.string,\n    removeEditItemFilter: PropTypes.func,\n    removeItemFilter: PropTypes.func,\n    selectedDimensions: PropTypes.array,\n    selectedItems: PropTypes.object,\n    setActiveModalDimension: PropTypes.func,\n    setEditItemFilters: PropTypes.func,\n};\n\nexport default connect(\n    mapStateToProps,\n    {\n        clearActiveModalDimension: acClearActiveModalDimension,\n        setActiveModalDimension: acSetActiveModalDimension,\n        addItemFilter: acAddItemFilter,\n        removeItemFilter: acRemoveItemFilter,\n        removeEditItemFilter: acRemoveEditItemFilter,\n        setEditItemFilters: acSetEditItemFilters,\n    }\n)(FilterSelector);\n","import React, { Component } from 'react';\nimport InfoOutlineIcon from '@material-ui/icons/InfoOutlined';\nimport { colors } from '@dhis2/ui-core';\nimport PropTypes from 'prop-types';\n\nclass Info extends Component {\n    show = false;\n\n    toggle() {\n        this.show = !this.show;\n        return this.show;\n    }\n\n    render() {\n        return (\n            <div onClick={() => this.props.onClick(this.toggle())}>\n                <InfoOutlineIcon style={{ fill: colors.grey600 }} />\n            </div>\n        );\n    }\n}\n\nInfo.propTypes = {\n    onClick: PropTypes.func,\n};\n\nexport default Info;\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { Link } from 'react-router-dom';\nimport i18n from '@dhis2/d2-i18n';\nimport SharingDialog from '@dhis2/d2-ui-sharing-dialog';\nimport Star from '@material-ui/icons/Star';\nimport StarBorder from '@material-ui/icons/StarBorder';\n\nimport { orObject } from '../../modules/util';\nimport { tStarDashboard } from '../../actions/dashboards';\nimport { acSetSelectedShowDescription } from '../../actions/selected';\nimport FilterSelector from '../ItemFilter/FilterSelector';\nimport { Button, colors } from '@dhis2/ui-core';\nimport Info from './Info';\nimport {\n    sGetSelectedId,\n    sGetSelectedShowDescription,\n} from '../../reducers/selected';\nimport {\n    sGetDashboardById,\n    sGetDashboardItems,\n} from '../../reducers/dashboards';\n\nimport classes from './styles/ViewTitleBar.module.css';\n\nconst NO_DESCRIPTION = i18n.t('No description');\n\nclass ViewTitleBar extends Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            sharingDialogIsOpen: false,\n        };\n    }\n\n    toggleSharingDialog = () =>\n        this.setState({ sharingDialogIsOpen: !this.state.sharingDialogIsOpen });\n\n    render() {\n        const {\n            id,\n            name,\n            description,\n            access,\n            style,\n            showDescription,\n            starred,\n            onStarClick,\n            onInfoClick,\n        } = this.props;\n\n        const titleStyle = Object.assign({}, style.title, {\n            cursor: 'default',\n            userSelect: 'text',\n            top: '7px',\n        });\n\n        const StarIcon = starred ? Star : StarBorder;\n\n        return (\n            <>\n                <div className={classes.titleBar}>\n                    <span style={titleStyle}>{name}</span>\n                    <div className={classes.actions}>\n                        <div\n                            className={classes.titleBarIcon}\n                            onClick={onStarClick}\n                        >\n                            <StarIcon style={{ fill: colors.grey600 }} />\n                        </div>\n                        <div className={classes.titleBarIcon}>\n                            <Info onClick={onInfoClick} />\n                        </div>\n                        <div style={{ marginLeft: '10px' }}>\n                            {access.update ? (\n                                <Link\n                                    className={classes.editLink}\n                                    to={`/${id}/edit`}\n                                >\n                                    <Button>{i18n.t('Edit')}</Button>\n                                </Link>\n                            ) : null}\n                            {access.manage ? (\n                                <span style={{ marginRight: '4px' }}>\n                                    <Button onClick={this.toggleSharingDialog}>\n                                        {i18n.t('Share')}\n                                    </Button>\n                                </span>\n                            ) : null}\n                            <span style={{ marginRight: '4px' }}>\n                                <FilterSelector />\n                            </span>\n                        </div>\n                    </div>\n                </div>\n                {showDescription ? (\n                    <div\n                        className=\"dashboard-description\"\n                        style={Object.assign(\n                            { paddingTop: '5px', paddingBottom: '5px' },\n                            style.description,\n                            !description ? { color: '#888' } : {}\n                        )}\n                    >\n                        {description || NO_DESCRIPTION}\n                    </div>\n                ) : null}\n                {id ? (\n                    <SharingDialog\n                        d2={this.context.d2}\n                        id={id}\n                        type=\"dashboard\"\n                        open={this.state.sharingDialogIsOpen}\n                        onRequestClose={this.toggleSharingDialog}\n                    />\n                ) : null}\n            </>\n        );\n    }\n}\n\nViewTitleBar.propTypes = {\n    access: PropTypes.object,\n    description: PropTypes.string,\n    id: PropTypes.string,\n    name: PropTypes.string,\n    showDescription: PropTypes.bool,\n    starred: PropTypes.bool,\n    style: PropTypes.object,\n    onInfoClick: PropTypes.func,\n    onStarClick: PropTypes.func,\n};\n\nViewTitleBar.defaultProps = {\n    name: '',\n    description: '',\n    starred: false,\n    showDescription: false,\n    onInfoClick: null,\n};\n\nViewTitleBar.contextTypes = {\n    d2: PropTypes.object,\n};\n\nconst mapStateToProps = state => {\n    const id = sGetSelectedId(state);\n    const dashboard = orObject(sGetDashboardById(state, id));\n\n    return {\n        id,\n        name: dashboard.displayName,\n        description: dashboard.displayDescription,\n        dashboardItems: sGetDashboardItems(state),\n        showDescription: sGetSelectedShowDescription(state),\n        starred: dashboard.starred,\n        access: orObject(dashboard.access),\n    };\n};\n\nconst mergeProps = (stateProps, dispatchProps, ownProps) => {\n    const { id, starred, showDescription } = stateProps;\n    const { dispatch } = dispatchProps;\n\n    return {\n        ...stateProps,\n        ...ownProps,\n        onStarClick: () => dispatch(tStarDashboard(id, !starred)),\n        onInfoClick: () =>\n            dispatch(acSetSelectedShowDescription(!showDescription)),\n    };\n};\n\nexport default connect(\n    mapStateToProps,\n    null,\n    mergeProps\n)(ViewTitleBar);\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport { colors } from '@dhis2/ui-core';\nimport EditTitleBar from './EditTitleBar';\nimport ViewTitleBar from './ViewTitleBar';\n\nimport './TitleBar.css';\n\nconst style = {\n    title: {\n        position: 'relative',\n        fontSize: 21,\n        fontWeight: 500,\n        color: colors.black,\n        minWidth: 50,\n    },\n    description: {\n        fontSize: 14,\n        color: colors.grey800,\n    },\n};\n\nconst TitleBar = ({ edit }) => {\n    return (\n        <div\n            className=\"titlebar-wrapper\"\n            style={{\n                padding: '20px 15px 5px 10px',\n            }}\n        >\n            {edit ? (\n                <EditTitleBar style={style} />\n            ) : (\n                <ViewTitleBar style={style} />\n            )}\n        </div>\n    );\n};\n\nTitleBar.propTypes = {\n    edit: PropTypes.bool,\n};\n\nexport default TitleBar;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nimport i18n from '@dhis2/d2-i18n';\n\nimport * as pluginManager from './plugin';\nimport { getBaseUrl, orObject } from '../../../modules/util';\nimport { getGridItemDomId } from '../../ItemGrid/gridUtil';\n\nconst pluginCredentials = d2 => {\n    return {\n        baseUrl: getBaseUrl(d2),\n        auth: d2.Api.getApi().defaultHeaders.Authorization,\n    };\n};\n\nclass DefaultPlugin extends Component {\n    pluginCredentials = null;\n\n    constructor(props, context) {\n        super(props);\n\n        this.d2 = context.d2;\n    }\n\n    shouldPluginReload = prevProps => {\n        // TODO - fix this hack, to handle bug with multiple\n        // rerendering while switching between dashboards.\n        //\n        // To determine if the rendering is happening because of a\n        // dashboard switch, check if the item reference has changed.\n        const reloadAllowed = this.props.item === prevProps.item;\n\n        const filtersChanged = prevProps.itemFilters !== this.props.itemFilters;\n        const vis = orObject(this.props.visualization);\n        const prevVis = orObject(prevProps.visualization);\n        const visChanged =\n            vis.id !== prevVis.id || vis.activeType !== prevVis.activeType;\n\n        return reloadAllowed && (visChanged || filtersChanged);\n    };\n\n    reloadPlugin = prevProps => {\n        if (\n            pluginManager.pluginIsAvailable(\n                this.props.item,\n                this.props.visualization\n            ) &&\n            this.shouldPluginReload(prevProps)\n        ) {\n            const prevVis = orObject(prevProps.visualization);\n            const currentVis = this.props.visualization;\n\n            const useActiveType =\n                currentVis.activeType !== prevVis.activeType ||\n                currentVis.activeType !== this.props.item.type;\n\n            if (\n                useActiveType ||\n                this.props.itemFilters !== prevProps.itemFilters\n            ) {\n                pluginManager.unmount(\n                    this.props.item,\n                    prevVis.activeType || this.props.item.type\n                );\n\n                pluginManager.load(this.props.item, this.props.visualization, {\n                    credentials: this.pluginCredentials,\n                    activeType: useActiveType ? currentVis.activeType : null,\n                });\n            }\n        }\n    };\n\n    componentDidMount() {\n        this.pluginCredentials = pluginCredentials(this.d2);\n\n        if (\n            pluginManager.pluginIsAvailable(\n                this.props.item,\n                this.props.visualization\n            )\n        ) {\n            pluginManager.load(this.props.item, this.props.visualization, {\n                credentials: this.pluginCredentials,\n                activeType: !this.props.editMode ? this.getActiveType() : null,\n                options: this.props.options,\n            });\n        }\n    }\n\n    componentDidUpdate(prevProps) {\n        this.reloadPlugin(prevProps);\n    }\n\n    getActiveType = () =>\n        this.props.visualization.activeType || this.props.item.type;\n\n    render() {\n        const { classes, item, visualization, style } = this.props;\n        const pluginIsAvailable = pluginManager.pluginIsAvailable(\n            item,\n            visualization\n        );\n\n        return pluginIsAvailable ? (\n            <div id={getGridItemDomId(item.id)} style={style} />\n        ) : (\n            <div className={classes.textDiv}>\n                {i18n.t('Unable to load the plugin for this item')}\n            </div>\n        );\n    }\n}\n\nDefaultPlugin.contextTypes = {\n    d2: PropTypes.object,\n};\n\nDefaultPlugin.propTypes = {\n    classes: PropTypes.object,\n    editMode: PropTypes.bool,\n    item: PropTypes.object,\n    itemFilters: PropTypes.object,\n    options: PropTypes.object,\n    style: PropTypes.object,\n    visualization: PropTypes.object,\n};\n\nDefaultPlugin.defaultProps = {\n    style: {},\n    item: {},\n    itemFilters: {},\n    options: {},\n    visualization: {},\n};\n\nexport default DefaultPlugin;\n","import React from 'react';\nimport { colors } from '@dhis2/ui-core';\n\nexport const ThreeDots = () => (\n    <svg\n        height=\"18\"\n        viewBox=\"0 0 18 18\"\n        width=\"18\"\n        xmlns=\"http://www.w3.org/2000/svg\"\n    >\n        <path\n            d=\"m4 7.5c-.83 0-1.5.67-1.5 1.5s.67 1.5 1.5 1.5 1.5-.67 1.5-1.5-.67-1.5-1.5-1.5zm10 0c-.83 0-1.5.67-1.5 1.5s.67 1.5 1.5 1.5 1.5-.67 1.5-1.5-.67-1.5-1.5-1.5zm-5 0c-.83 0-1.5.67-1.5 1.5s.67 1.5 1.5 1.5 1.5-.67 1.5-1.5-.67-1.5-1.5-1.5z\"\n            fill=\"#6e7a8a\"\n        />\n    </svg>\n);\n\nexport const SpeechBubble = () => (\n    <svg\n        height=\"20\"\n        viewBox=\"0 0 20 20\"\n        width=\"20\"\n        xmlns=\"http://www.w3.org/2000/svg\"\n        style={{ margin: '3px 2px 0 2px' }} // Temporary fix for the misaligned icon, should be removed once the icon is replaced\n    >\n        <path\n            d=\"m20 2h-16c-1.1 0-1.99.9-1.99 2l-.01 18 4-4h14c1.1 0 2-.9 2-2v-12c0-1.1-.9-2-2-2zm-2 12h-12v-2h12zm0-3h-12v-2h12zm0-3h-12v-2h12z\"\n            fill=\"#6e7a8a\"\n            fillRule=\"evenodd\"\n            transform=\"translate(-2 -2)\"\n        />\n    </svg>\n);\n\nexport const Warning = () => (\n    <svg\n        xmlns=\"http://www.w3.org/2000/svg\"\n        height=\"24\"\n        viewBox=\"0 0 24 24\"\n        width=\"24\"\n        fill={colors.grey600}\n    >\n        <path d=\"M0 0h24v24H0z\" fill=\"none\" />\n        <path d=\"M1 21h22L12 2 1 21zm12-3h-2v-2h2v2zm0-4h-2v-4h2v4z\" />\n    </svg>\n);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport i18n from '@dhis2/d2-i18n';\nimport { Warning } from './assets/icons';\n\nimport classes from './styles/FatalErrorBoundary.module.css';\n\nclass FatalErrorBoundary extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            errorFound: false,\n        };\n    }\n    componentDidCatch(error, info) {\n        this.setState({\n            errorFound: true,\n        });\n        console.log('error: ', error);\n        console.log('info: ', info);\n    }\n    render() {\n        if (this.state.errorFound) {\n            return (\n                <p className={classes.container}>\n                    <span className={classes.icon}>\n                        <Warning />\n                    </span>\n                    <span className={classes.message}>\n                        {i18n.t(\n                            'There was a problem loading this dashboard item'\n                        )}\n                    </span>\n                </p>\n            );\n        }\n        return this.props.children;\n    }\n}\n\nFatalErrorBoundary.propTypes = {\n    children: PropTypes.node,\n};\n\nexport default FatalErrorBoundary;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport i18n from '@dhis2/d2-i18n';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport { colors } from '@dhis2/ui-core';\n\nimport classes from './styles/DeleteItemButton.module.css';\n\nconst DeleteItemButton = ({ onClick }) => (\n    <button\n        type=\"button\"\n        className={classes.deleteItemButton}\n        onClick={onClick}\n        title={i18n.t(`Delete item`)}\n    >\n        <DeleteIcon style={{ fill: colors.red500 }} />\n    </button>\n);\n\nDeleteItemButton.propTypes = {\n    onClick: PropTypes.func,\n};\n\nexport default DeleteItemButton;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\n\nimport { sGetIsEditing } from '../../reducers/editDashboard';\nimport { acRemoveDashboardItem } from '../../actions/editDashboard';\nimport DeleteItemButton from './DeleteItemButton';\n\nimport classes from './styles/ItemHeader.module.css';\n\n// This is the margin-top + margin-bottom defined in the css file\nexport const HEADER_MARGIN_HEIGHT = 12;\n\nconst ItemHeader = React.forwardRef(\n    (\n        { itemId, acRemoveDashboardItem, actionButtons, title, editMode },\n        ref\n    ) => {\n        const handleDeleteItem = () => acRemoveDashboardItem(itemId);\n\n        return (\n            <div className={classes.itemHeaderWrap} ref={ref}>\n                <p className={classes.itemTitle}>{title}</p>\n                {editMode ? (\n                    <div className={classes.itemActionsWrap}>\n                        <DeleteItemButton onClick={handleDeleteItem} />\n                    </div>\n                ) : (\n                    actionButtons && (\n                        <div className={classes.itemActionsWrap}>\n                            {actionButtons}\n                        </div>\n                    )\n                )}\n            </div>\n        );\n    }\n);\n\nItemHeader.propTypes = {\n    acRemoveDashboardItem: PropTypes.func,\n    actionButtons: PropTypes.node,\n    editMode: PropTypes.bool,\n    itemId: PropTypes.string,\n    title: PropTypes.string,\n};\n\nconst mapStateToProps = state => ({\n    editMode: sGetIsEditing(state),\n});\n\nconst mapDispatchToProps = {\n    acRemoveDashboardItem,\n};\n\nexport default connect(\n    mapStateToProps,\n    mapDispatchToProps,\n    null,\n    { forwardRef: true }\n)(ItemHeader);\n","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\n\nimport {\n    isSingleValue,\n    isYearOverYear,\n    VIS_TYPE_GAUGE,\n    VIS_TYPE_PIE,\n} from '@dhis2/analytics';\nimport { Button, Menu, MenuItem, Divider, colors } from '@dhis2/ui-core';\nimport i18n from '@dhis2/d2-i18n';\nimport Popover from '@material-ui/core/Popover';\nimport TableIcon from '@material-ui/icons/ViewList';\nimport ChartIcon from '@material-ui/icons/InsertChart';\nimport MapIcon from '@material-ui/icons/Public';\nimport LaunchIcon from '@material-ui/icons/Launch';\n\nimport { ThreeDots, SpeechBubble } from './assets/icons';\nimport { pluginIsAvailable, getLink } from './plugin';\nimport {\n    CHART,\n    MAP,\n    REPORT_TABLE,\n    EVENT_CHART,\n    EVENT_REPORT,\n    isTrackerDomainType,\n    hasMapView,\n    getAppName,\n} from '../../../modules/itemTypes';\n\nconst iconFill = { fill: colors.grey600 };\n\nconst ItemHeaderButtons = props => {\n    const [anchorEl, setAnchorEl] = useState(null);\n\n    const { item, visualization, onSelectActiveType, d2, activeType } = props;\n\n    const isTrackerType = isTrackerDomainType(item.type);\n\n    const onViewTable = () => {\n        handleClose();\n        onSelectActiveType(isTrackerType ? EVENT_REPORT : REPORT_TABLE);\n    };\n\n    const onViewChart = () => {\n        handleClose();\n        onSelectActiveType(isTrackerType ? EVENT_CHART : CHART);\n    };\n\n    const onViewMap = () => {\n        handleClose();\n        onSelectActiveType(MAP);\n    };\n\n    const itemHasMapView = () => hasMapView(item.type);\n\n    const handleMenuClick = (_, event) => setAnchorEl(event.currentTarget);\n\n    const handleInterpretationClick = () => {\n        props.onToggleFooter();\n        if (anchorEl !== null) {\n            handleClose();\n        }\n    };\n\n    const handleClose = () => setAnchorEl(null);\n\n    const type = visualization.type || item.type;\n    const canViewAs =\n        !isSingleValue(type) &&\n        !isYearOverYear(type) &&\n        type !== VIS_TYPE_GAUGE &&\n        type !== VIS_TYPE_PIE;\n\n    const interpretationMenuLabel = props.activeFooter\n        ? i18n.t(`Hide interpretations and details`)\n        : i18n.t(`Show interpretations and details`);\n\n    const ViewAsMenuItems = () => (\n        <>\n            {activeType !== CHART && activeType !== EVENT_CHART && (\n                <MenuItem\n                    dense\n                    label={i18n.t('View as Chart')}\n                    onClick={onViewChart}\n                    icon={<ChartIcon style={iconFill} />}\n                />\n            )}\n            {activeType !== REPORT_TABLE && activeType !== EVENT_REPORT && (\n                <MenuItem\n                    dense\n                    label={i18n.t('View as Table')}\n                    onClick={onViewTable}\n                    icon={<TableIcon style={iconFill} />}\n                />\n            )}\n            {itemHasMapView() && activeType !== MAP && (\n                <MenuItem\n                    dense\n                    label={i18n.t('View as Map')}\n                    onClick={onViewMap}\n                    icon={<MapIcon style={iconFill} />}\n                />\n            )}\n        </>\n    );\n\n    return pluginIsAvailable(item, visualization) ? (\n        <>\n            <Button small secondary onClick={handleMenuClick}>\n                <ThreeDots />\n            </Button>\n            {anchorEl && (\n                <Popover\n                    open={Boolean(anchorEl)}\n                    onClose={handleClose}\n                    anchorEl={anchorEl}\n                >\n                    <Menu>\n                        {canViewAs && (\n                            <>\n                                <ViewAsMenuItems />\n                                <Divider />\n                            </>\n                        )}\n                        <MenuItem\n                            dense\n                            icon={<LaunchIcon style={{ fill: '#6e7a8a' }} />}\n                            label={i18n.t('Open in {{appName}} app', {\n                                appName: getAppName(item.type),\n                            })}\n                            href={getLink(item, d2)}\n                            target=\"_blank\"\n                        />\n                        <MenuItem\n                            dense\n                            icon={<SpeechBubble />}\n                            label={interpretationMenuLabel}\n                            onClick={handleInterpretationClick}\n                        />\n                    </Menu>\n                </Popover>\n            )}\n        </>\n    ) : null;\n};\n\nItemHeaderButtons.propTypes = {\n    activeFooter: PropTypes.bool,\n    activeType: PropTypes.string,\n    d2: PropTypes.object,\n    item: PropTypes.object,\n    visualization: PropTypes.object,\n    onSelectActiveType: PropTypes.func,\n    onToggleFooter: PropTypes.func,\n};\n\nexport default ItemHeaderButtons;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { colors } from '@dhis2/ui-core';\nimport { getId } from './plugin';\nimport InterpretationsComponent from '@dhis2/d2-ui-interpretations';\n\nconst style = {\n    scrollContainer: {\n        overflowY: 'auto',\n        height: '340px',\n    },\n    line: {\n        margin: '-1px 0px 0px',\n        height: '1px',\n        border: 'none',\n        backgroundColor: colors.grey100,\n    },\n};\n\nclass ItemFooter extends Component {\n    render() {\n        const objectId = getId(this.props.item);\n\n        return (\n            <div className=\"dashboard-item-footer\">\n                <hr style={style.line} />\n                <div style={style.scrollContainer}>\n                    <InterpretationsComponent\n                        d2={this.context.d2}\n                        item={this.props.item}\n                        type={this.props.item.type.toLowerCase()}\n                        id={objectId}\n                        appName=\"dashboard\"\n                    />\n                </div>\n            </div>\n        );\n    }\n}\n\nItemFooter.contextTypes = {\n    d2: PropTypes.object.isRequired,\n};\n\nItemFooter.propTypes = {\n    item: PropTypes.object.isRequired,\n};\n\nexport default ItemFooter;\n","// Note that this ignores discrepancies in 'this', so shouldn't be used with bound functions\n// This is useful instead of lodash/memoize when we only need to memoize a single value\n// Inspiration: https://github.com/alexreardon/memoize-one\n\nconst memoizeOne = fn => {\n    let lastArgs = undefined;\n    let lastValue = undefined;\n\n    return (...args) => {\n        if (\n            lastArgs &&\n            args.length === lastArgs.length &&\n            args.every((arg, i) => arg === lastArgs[i])\n        ) {\n            return lastValue;\n        }\n        lastArgs = args;\n        lastValue = fn(...args);\n        return lastValue;\n    };\n};\n\nexport default memoizeOne;\n","import React from 'react';\nimport { CircularLoader } from '@dhis2/ui-core';\n\nimport classes from './styles/LoadingMask.module.css';\n\nconst LoadingMask = () => {\n    return (\n        <div className={classes.center}>\n            <CircularLoader />\n        </div>\n    );\n};\n\nexport default LoadingMask;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport uniqueId from 'lodash/uniqueId';\nimport VisualizationPlugin from '@dhis2/data-visualizer-plugin';\nimport i18n from '@dhis2/d2-i18n';\n\nimport DefaultPlugin from './DefaultPlugin';\nimport FatalErrorBoundary from './FatalErrorBoundary';\nimport ItemHeader, { HEADER_MARGIN_HEIGHT } from '../ItemHeader';\nimport ItemHeaderButtons from './ItemHeaderButtons';\nimport ItemFooter from './ItemFooter';\nimport * as pluginManager from './plugin';\nimport { sGetVisualization } from '../../../reducers/visualizations';\nimport { sGetItemFiltersRoot } from '../../../reducers/itemFilters';\nimport {\n    acAddVisualization,\n    acSetActiveVisualizationType,\n} from '../../../actions/visualizations';\nimport {\n    VISUALIZATION,\n    MAP,\n    CHART,\n    REPORT_TABLE,\n} from '../../../modules/itemTypes';\nimport memoizeOne from '../../../modules/memoizeOne';\n\nimport { getVisualizationConfig } from './plugin';\nimport LoadingMask from './LoadingMask';\nimport { ITEM_CONTENT_PADDING_BOTTOM } from '../../ItemGrid/ItemGrid';\n\nimport classes from './styles/Item.module.css';\n\nexport class Item extends Component {\n    state = {\n        showFooter: false,\n        configLoaded: false,\n        pluginIsLoaded: false,\n    };\n\n    constructor(props, context) {\n        super(props);\n\n        this.d2 = context.d2;\n\n        this.contentRef = React.createRef();\n        this.headerRef = React.createRef();\n\n        this.memoizedApplyFilters = memoizeOne(this.applyFilters);\n\n        this.memoizedGetVisualizationConfig = memoizeOne(\n            getVisualizationConfig\n        );\n\n        this.memoizedGetContentStyle = memoizeOne(this.getContentStyle);\n    }\n\n    async componentDidMount() {\n        this.props.onVisualizationLoaded(\n            // TODO do not call fetch on the pluginManager, do it here as the manager will eventually be removed...\n            await pluginManager.fetch(this.props.item)\n        );\n\n        this.setState({\n            configLoaded: true,\n        });\n    }\n\n    componentDidUpdate(prevProps, prevState) {\n        if (\n            prevState.pluginIsLoaded &&\n            (prevProps.visualization !== this.props.visualization ||\n                prevProps.itemFilters !== this.props.itemFilters)\n        ) {\n            this.setState({\n                pluginIsLoaded: false,\n            });\n        }\n    }\n\n    applyFilters = (visualization, filters) => {\n        if (!Object.keys(filters).length) {\n            return visualization;\n        }\n\n        // deep clone objects in filters to avoid changing the visualization in the Redux store\n        const visRows = visualization.rows.map(obj => ({ ...obj }));\n        const visColumns = visualization.columns.map(obj => ({ ...obj }));\n        const visFilters = visualization.filters.map(obj => ({ ...obj }));\n\n        Object.keys(filters).forEach(dimensionId => {\n            if (filters[dimensionId]) {\n                let dimensionFound = false;\n\n                [visRows, visColumns, visFilters].forEach(dimensionObjects =>\n                    dimensionObjects\n                        .filter(obj => obj.dimension === dimensionId)\n                        .forEach(obj => {\n                            dimensionFound = true;\n                            obj.items = filters[dimensionId];\n                        })\n                );\n\n                // add dimension to filters if not already present elsewhere\n                if (!dimensionFound) {\n                    visFilters.push({\n                        dimension: dimensionId,\n                        items: filters[dimensionId],\n                    });\n                }\n            }\n        });\n\n        return {\n            ...visualization,\n            rows: visRows,\n            columns: visColumns,\n            filters: visFilters,\n        };\n    };\n\n    getUniqueKey = memoizeOne(() => uniqueId());\n\n    pluginCredentials = null;\n\n    getPluginComponent = () => {\n        const activeType = this.getActiveType();\n        const visualization = this.memoizedGetVisualizationConfig(\n            this.props.visualization,\n            this.props.item.type,\n            activeType\n        );\n\n        if (!visualization) {\n            return (\n                <div className={classes.textDiv}>\n                    {i18n.t('No data to display')}\n                </div>\n            );\n        }\n\n        const calculatedHeight =\n            this.props.item.originalHeight -\n            this.headerRef.current.clientHeight -\n            HEADER_MARGIN_HEIGHT -\n            ITEM_CONTENT_PADDING_BOTTOM;\n\n        const props = {\n            ...this.props,\n            visualization,\n            classes,\n            style: this.memoizedGetContentStyle(\n                calculatedHeight,\n                this.contentRef ? this.contentRef.offsetHeight : null,\n                this.props.editMode\n            ),\n        };\n\n        switch (activeType) {\n            case VISUALIZATION:\n            case CHART:\n            case REPORT_TABLE: {\n                return (\n                    <>\n                        {!this.state.pluginIsLoaded && (\n                            <div style={props.style}>\n                                <LoadingMask />\n                            </div>\n                        )}\n                        <VisualizationPlugin\n                            d2={this.d2}\n                            visualization={this.memoizedApplyFilters(\n                                visualization,\n                                props.itemFilters\n                            )}\n                            onLoadingComplete={this.onLoadingComplete}\n                            forDashboard={true}\n                            style={props.style}\n                        />\n                    </>\n                );\n            }\n            case MAP: {\n                if (props.item.type === MAP) {\n                    // apply filters only to thematic and event layers\n                    // for maps AO\n                    const mapViews = props.visualization.mapViews.map(obj => {\n                        if (\n                            obj.layer.includes('thematic') ||\n                            obj.layer.includes('event')\n                        ) {\n                            return this.memoizedApplyFilters(\n                                obj,\n                                props.itemFilters\n                            );\n                        }\n\n                        return obj;\n                    });\n\n                    props.visualization = {\n                        ...props.visualization,\n                        mapViews,\n                    };\n                } else {\n                    // this is the case of a non map AO passed to the maps plugin\n                    // due to a visualization type switch in dashboard item\n                    // maps plugin takes care of converting the AO to a suitable format\n                    props.visualization = this.memoizedApplyFilters(\n                        props.visualization,\n                        props.itemFilters\n                    );\n                }\n\n                props.options = {\n                    ...props.options,\n                    hideTitle: true,\n                };\n\n                return <DefaultPlugin {...props} />;\n            }\n            default: {\n                props.visualization = this.memoizedApplyFilters(\n                    props.visualization,\n                    props.itemFilters\n                );\n\n                return <DefaultPlugin {...props} />;\n            }\n        }\n    };\n\n    onLoadingComplete = () => {\n        this.setState({\n            pluginIsLoaded: true,\n        });\n    };\n\n    onToggleFooter = () => {\n        this.setState(\n            { showFooter: !this.state.showFooter },\n            this.props.onToggleItemExpanded(this.props.item.id)\n        );\n    };\n\n    onSelectActiveType = type => {\n        if (type === this.getActiveType()) {\n            return;\n        }\n\n        pluginManager.unmount(this.props.item, this.getActiveType());\n\n        this.props.onSelectActiveType(this.props.visualization.id, type);\n    };\n\n    getActiveType = () =>\n        this.props.visualization.activeType || this.props.item.type;\n\n    pluginIsAvailable = () =>\n        pluginManager.pluginIsAvailable(\n            this.props.item,\n            this.props.visualization\n        );\n\n    getContentStyle = (calculatedHeight, measuredHeight, editMode) => {\n        const height = editMode\n            ? measuredHeight || calculatedHeight\n            : calculatedHeight;\n\n        return { height };\n    };\n\n    render() {\n        const { item, editMode, itemFilters } = this.props;\n        const { showFooter } = this.state;\n\n        const actionButtons = (\n            <ItemHeaderButtons\n                item={item}\n                visualization={this.props.visualization}\n                onSelectActiveType={this.onSelectActiveType}\n                onToggleFooter={this.onToggleFooter}\n                d2={this.d2}\n                activeType={this.getActiveType()}\n                activeFooter={this.state.showFooter}\n            />\n        );\n\n        return (\n            <>\n                <ItemHeader\n                    title={pluginManager.getName(item)}\n                    itemId={item.id}\n                    actionButtons={actionButtons}\n                    ref={this.headerRef}\n                />\n                <FatalErrorBoundary>\n                    <div\n                        key={this.getUniqueKey(itemFilters)}\n                        className=\"dashboard-item-content\"\n                        ref={ref => (this.contentRef = ref)}\n                    >\n                        {this.state.configLoaded && this.getPluginComponent()}\n                    </div>\n                </FatalErrorBoundary>\n                {!editMode && showFooter ? <ItemFooter item={item} /> : null}\n            </>\n        );\n    }\n}\n\nItem.contextTypes = {\n    d2: PropTypes.object,\n};\n\nItem.propTypes = {\n    editMode: PropTypes.bool,\n    item: PropTypes.object,\n    itemFilters: PropTypes.object,\n    visualization: PropTypes.object,\n    onSelectActiveType: PropTypes.func,\n    onToggleItemExpanded: PropTypes.func,\n    onVisualizationLoaded: PropTypes.func,\n};\n\nItem.defaultProps = {\n    item: {},\n    editMode: false,\n    onToggleItemExpanded: Function.prototype,\n    itemFilters: {},\n    visualization: {},\n};\n\nconst mapStateToProps = (state, ownProps) => ({\n    itemFilters: sGetItemFiltersRoot(state),\n    visualization: sGetVisualization(\n        state,\n        pluginManager.extractFavorite(ownProps.item).id\n    ),\n});\n\nconst mapDispatchToProps = dispatch => ({\n    onVisualizationLoaded: visualization =>\n        dispatch(acAddVisualization(visualization)),\n    onSelectActiveType: (id, type, activeType) =>\n        dispatch(acSetActiveVisualizationType(id, type, activeType)),\n});\n\nexport default connect(\n    mapStateToProps,\n    mapDispatchToProps\n)(Item);\n","import React from 'react';\nimport { colors } from '@dhis2/ui-core';\n\nconst style = {\n    backgroundColor: colors.grey200,\n    border: 'none',\n    height: '1px',\n    margin: '0px 0px 5px 0px',\n};\n\nconst Line = () => <hr style={style} />;\n\nexport default Line;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport i18n from '@dhis2/d2-i18n';\n\nimport { sGetMessagesRoot } from '../../../reducers/messages';\nimport { formatDate } from '../../../modules/util';\nimport { colors } from '@dhis2/ui-core';\nimport ItemHeader from '../ItemHeader';\nimport Line from '../../../widgets/Line';\n\nimport './MessagesItem.css';\n\nconst PRIVATE = 'PRIVATE';\n\nconst messageTypes = {\n    [PRIVATE]: 'Private',\n    VALIDATION_RESULT: 'Validation',\n    TICKET: 'Ticket',\n    SYSTEM: 'System',\n};\n\nconst style = {\n    list: {\n        listStyleType: 'none',\n        paddingLeft: '0px',\n    },\n    seeAll: {\n        textAlign: 'center',\n        fontSize: '13px',\n        marginBottom: '5px',\n    },\n    sender: {\n        fontSize: '13px',\n        lineHeight: '15px',\n        margin: 0,\n        color: colors.grey800,\n    },\n    snippet: {\n        color: colors.grey800,\n        fontSize: '13px',\n        lineHeight: '15px',\n        maxHeight: '30px',\n        overflow: 'hidden',\n    },\n};\n\nclass MessagesItem extends Component {\n    state = {\n        uiLocale: '',\n    };\n\n    async componentDidMount() {\n        const uiLocale = await this.context.d2.currentUser.userSettings.get(\n            'keyUiLocale'\n        );\n\n        this.setState({ uiLocale });\n    }\n\n    getMessageHref = msg => {\n        const msgIdentifier = msg ? `#/${msg.messageType}/${msg.id}` : '';\n        return `${this.context.baseUrl}/dhis-web-messaging/${msgIdentifier}`;\n    };\n\n    getMessageSender = msg => {\n        const latestMsg = msg.messages.slice(-1)[0];\n        return latestMsg.sender ? latestMsg.sender.displayName : '';\n    };\n\n    getMessageItems = () => {\n        const editClass = !this.props.editMode ? 'view' : null;\n\n        return this.props.messages.map(msg => {\n            const redirectToMsg = () => {\n                if (!this.props.editMode) {\n                    document.location.href = this.getMessageHref(msg);\n                }\n            };\n\n            const sender =\n                msg.messageType === PRIVATE\n                    ? this.getMessageSender(msg)\n                    : messageTypes[msg.messageType];\n\n            const readClass = !msg.read ? 'unread' : null;\n            const latestMsg = msg.messages.slice(-1)[0];\n            const msgDate = latestMsg.lastUpdated;\n\n            return (\n                <li\n                    className={`message-item ${editClass}`}\n                    key={msg.id}\n                    onClick={redirectToMsg}\n                >\n                    <p className={`message-title ${readClass}`}>\n                        {msg.displayName} ({msg.messageCount})\n                    </p>\n                    <p style={style.sender}>\n                        {sender} - {formatDate(msgDate, this.state.uiLocale)}\n                    </p>\n                    <p style={style.snippet}>{latestMsg.text}</p>\n                </li>\n            );\n        });\n    };\n\n    render() {\n        return (\n            <>\n                <ItemHeader\n                    title={i18n.t('Messages')}\n                    itemId={this.props.item.id}\n                />\n                <Line />\n                {this.props.messages.length > 0 && (\n                    <div className=\"dashboard-item-content\">\n                        <ul style={style.list}>{this.getMessageItems()}</ul>\n                        <div style={style.seeAll}>\n                            <a href={this.getMessageHref()}>\n                                {i18n.t('See all messages')}\n                            </a>\n                        </div>\n                    </div>\n                )}\n            </>\n        );\n    }\n}\n\nMessagesItem.propTypes = {\n    editMode: PropTypes.bool,\n    item: PropTypes.object,\n    messages: PropTypes.array,\n};\n\nMessagesItem.contextTypes = {\n    d2: PropTypes.object,\n    baseUrl: PropTypes.string,\n};\n\nconst mapStateToProps = state => {\n    return {\n        messages: Object.values(sGetMessagesRoot(state)),\n    };\n};\n\nconst MessagesContainer = connect(\n    mapStateToProps,\n    null\n)(MessagesItem);\n\nexport default MessagesContainer;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport i18n from '@dhis2/d2-i18n';\nimport ItemHeader from '../ItemHeader';\nimport NotInterestedIcon from '@material-ui/icons/NotInterested';\n\nconst NotSupportedItem = props => (\n    <>\n        <ItemHeader\n            title={i18n.t('Item type \"{{type}}\" not supported', {\n                type: props.item.type,\n            })}\n            itemId={props.item.id}\n        />\n        <div\n            style={{\n                display: 'flex',\n                justifyContent: 'center',\n                alignItems: 'center',\n                height: '90%',\n            }}\n        >\n            <NotInterestedIcon\n                style={{ width: 100, height: 100, align: 'center' }}\n                color=\"disabled\"\n            />\n        </div>\n    </>\n);\n\nNotSupportedItem.propTypes = {\n    item: PropTypes.object,\n};\n\nexport default NotSupportedItem;\n","import React from 'react';\nimport { colors } from '@dhis2/ui-core';\nimport PropTypes from 'prop-types';\n\nconst DescriptionIcon = ({ className }) => (\n    <svg\n        className={className}\n        xmlns=\"http://www.w3.org/2000/svg\"\n        viewBox=\"0 0 24 24\"\n        fill={colors.grey500}\n    >\n        <path d=\"M0 0h24v24H0z\" fill=\"none\" />\n        <path d=\"M14 2H6c-1.1 0-1.99.9-1.99 2L4 20c0 1.1.89 2 1.99 2H18c1.1 0 2-.9 2-2V8l-6-6zm2 16H8v-2h8v2zm0-4H8v-2h8v2zm-3-5V3.5L18.5 9H13z\" />\n    </svg>\n);\n\nDescriptionIcon.propTypes = {\n    className: PropTypes.string,\n};\n\nexport default DescriptionIcon;\n","import React from 'react';\nimport { colors } from '@dhis2/ui-core';\nimport PropTypes from 'prop-types';\n\nconst DeleteIcon = ({ className }) => (\n    <svg\n        className={className}\n        xmlns=\"http://www.w3.org/2000/svg\"\n        width=\"18\"\n        height=\"18\"\n        viewBox=\"0 0 24 24\"\n        fill={colors.red500}\n    >\n        <path d=\"M6 19c0 1.1.9 2 2 2h8c1.1 0 2-.9 2-2V7H6v12zM19 4h-3.5l-1-1h-5l-1 1H5v2h14V4z\" />\n        <path d=\"M0 0h24v24H0z\" fill=\"none\" />\n    </svg>\n);\n\nDeleteIcon.propTypes = {\n    className: PropTypes.string,\n};\n\nexport default DeleteIcon;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { colors } from '@dhis2/ui-core';\nimport DescriptionIcon from '../../../icons/Description';\n\nimport DeleteIcon from '../../../icons/Delete';\nimport Line from '../../../widgets/Line';\nimport { itemTypeMap, getItemUrl } from '../../../modules/itemTypes';\nimport { orArray } from '../../../modules/util';\nimport { tRemoveListItemContent } from './actions';\nimport ItemHeader from '../ItemHeader';\nimport classes from './Item.module.css';\n\nconst getItemTitle = item => itemTypeMap[item.type].pluralTitle;\n\nconst getContentItems = item =>\n    orArray(item[itemTypeMap[item.type].propName]).filter(\n        (item, index, array) =>\n            array.findIndex(el => el.id === item.id) === index\n    );\n\nconst ListItem = (props, context) => {\n    const { item, editMode, tRemoveListItemContent } = props;\n    const contentItems = getContentItems(item);\n\n    const getLink = contentItem => {\n        const deleteButton = (\n            <button\n                className={classes.deletebutton}\n                onClick={() => tRemoveListItemContent(item, contentItem)}\n            >\n                <DeleteIcon className={classes.deleteicon} />\n            </button>\n        );\n\n        return (\n            <>\n                <a\n                    className={classes.link}\n                    style={{ color: colors.grey900 }}\n                    href={getItemUrl(item.type, contentItem, context.d2)}\n                >\n                    {contentItem.name}\n                </a>\n                {editMode ? deleteButton : null}\n            </>\n        );\n    };\n\n    return (\n        <>\n            <ItemHeader title={getItemTitle(item)} itemId={item.id} />\n            <Line />\n            <div className=\"dashboard-item-content\">\n                <ul className={classes.list}>\n                    {contentItems.map(contentItem => (\n                        <li className={classes.item} key={contentItem.id}>\n                            <DescriptionIcon className={classes.itemicon} />\n                            {getLink(contentItem)}\n                        </li>\n                    ))}\n                </ul>\n            </div>\n        </>\n    );\n};\n\nListItem.propTypes = {\n    editMode: PropTypes.bool,\n    item: PropTypes.object,\n    tRemoveListItemContent: PropTypes.func,\n};\n\nListItem.contextTypes = {\n    d2: PropTypes.object,\n};\n\nexport default connect(\n    null,\n    {\n        tRemoveListItemContent,\n    }\n)(ListItem);\n","import {\n    acUpdateDashboardItem,\n    acRemoveDashboardItem,\n} from '../../../actions/editDashboard';\nimport { itemTypeMap } from '../../../modules/itemTypes';\n\nexport const tRemoveListItemContent = (dashboardItem, content) => dispatch => {\n    const listItemType = itemTypeMap[dashboardItem.type].propName;\n\n    const newContent = dashboardItem[listItemType].filter(\n        item => item.id !== content.id\n    );\n\n    if (newContent.length) {\n        dashboardItem[listItemType] = newContent;\n        dispatch(acUpdateDashboardItem(dashboardItem));\n    } else {\n        dispatch(acRemoveDashboardItem(dashboardItem));\n    }\n};\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport i18n from '@dhis2/d2-i18n';\nimport PropTypes from 'prop-types';\n\nimport Input from '@material-ui/core/Input';\nimport {\n    Parser as RichTextParser,\n    Editor as RichTextEditor,\n} from '@dhis2/d2-ui-rich-text';\n\nimport { acUpdateDashboardItem } from '../../../actions/editDashboard';\nimport { sGetEditDashboardItems } from '../../../reducers/editDashboard';\nimport { sGetDashboardItems } from '../../../reducers/dashboards';\nimport ItemHeader from '../ItemHeader';\nimport Line from '../../../widgets/Line';\n\nconst style = {\n    textDiv: {\n        padding: '10px',\n        whiteSpace: 'pre-line',\n        lineHeight: '20px',\n    },\n    textField: {\n        fontSize: '14px',\n        fontStretch: 'normal',\n        width: '90%',\n        margin: '0 auto',\n        display: 'block',\n        lineHeight: '24px',\n    },\n    container: {\n        marginBottom: '20px',\n        marginTop: '20px',\n    },\n};\n\nconst TextItem = props => {\n    const { item, editMode, text, acUpdateDashboardItem } = props;\n\n    const onChangeText = event => {\n        const updatedItem = {\n            ...item,\n            text: event.target.value,\n        };\n\n        acUpdateDashboardItem(updatedItem);\n    };\n\n    const viewItem = () => {\n        const textDivStyle = Object.assign({}, style.textField, style.textDiv);\n        return (\n            <div className=\"dashboard-item-content\" style={style.container}>\n                <RichTextParser style={textDivStyle}>{text}</RichTextParser>\n            </div>\n        );\n    };\n\n    const editItem = () => {\n        return (\n            <>\n                <ItemHeader title={i18n.t('Text item')} itemId={item.id} />\n                <Line />\n                <div className=\"dashboard-item-content\">\n                    <RichTextEditor onEdit={onChangeText}>\n                        <Input\n                            value={text}\n                            multiline\n                            fullWidth\n                            style={style.textField}\n                            placeholder={i18n.t('Add text here')}\n                            onChange={onChangeText}\n                        />\n                    </RichTextEditor>\n                </div>\n            </>\n        );\n    };\n\n    return <>{editMode ? editItem() : viewItem()}</>;\n};\n\nconst mapStateToProps = (state, ownProps) => {\n    const items = ownProps.editMode\n        ? sGetEditDashboardItems(state)\n        : sGetDashboardItems(state);\n\n    const item = items.find(item => item.id === ownProps.item.id);\n\n    return {\n        text: item ? item.text : '',\n    };\n};\n\nTextItem.propTypes = {\n    acUpdateDashboardItem: PropTypes.func,\n    editMode: PropTypes.bool,\n    item: PropTypes.object,\n    text: PropTypes.string,\n};\n\nexport default connect(\n    mapStateToProps,\n    {\n        acUpdateDashboardItem,\n    }\n)(TextItem);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport NotInterestedIcon from '@material-ui/icons/NotInterested';\n\nimport { FILTER_ORG_UNIT } from '../../../actions/itemFilters';\nimport { sGetItemFiltersRoot } from '../../../reducers/itemFilters';\nimport ItemHeader from '../ItemHeader';\nimport Line from '../../../widgets/Line';\n\nconst getIframeSrc = (appDetails, item, itemFilters) => {\n    let iframeSrc = `${appDetails.launchUrl}?dashboardItemId=${item.id}`;\n\n    if (\n        itemFilters &&\n        itemFilters[FILTER_ORG_UNIT] &&\n        itemFilters[FILTER_ORG_UNIT].length\n    ) {\n        const ouIds = itemFilters[FILTER_ORG_UNIT].map(\n            ouPath => ouPath.split('/').slice(-1)[0]\n        );\n\n        iframeSrc += `&userOrgUnit=${ouIds.join(',')}`;\n    }\n\n    return iframeSrc;\n};\n\nconst AppItem = ({ item, itemFilters }, context) => {\n    let appDetails;\n\n    const appKey = item.appKey;\n\n    if (appKey) {\n        appDetails = context.d2.system.installedApps.find(\n            app => app.key === appKey\n        );\n    }\n\n    return appDetails && appDetails.name && appDetails.launchUrl ? (\n        <>\n            <ItemHeader title={appDetails.name} itemId={item.id} />\n            <Line />\n            <iframe\n                title={appDetails.name}\n                src={getIframeSrc(appDetails, item, itemFilters)}\n                className=\"dashboard-item-content\"\n                style={{ border: 'none' }}\n            />\n        </>\n    ) : (\n        <>\n            <ItemHeader title={`${appKey} app not found`} />\n            <Line />\n            <div\n                className=\"dashboard-item-content\"\n                style={{\n                    display: 'flex',\n                    justifyContent: 'center',\n                    alignItems: 'center',\n                    height: '90%',\n                }}\n            >\n                <NotInterestedIcon\n                    color=\"disabled\"\n                    disabled\n                    style={{ width: 100, height: 100, align: 'center' }}\n                />\n            </div>\n        </>\n    );\n};\n\nAppItem.propTypes = {\n    item: PropTypes.object,\n    itemFilters: PropTypes.object,\n};\n\nAppItem.contextTypes = {\n    d2: PropTypes.object,\n};\n\nconst mapStateToProps = state => ({\n    itemFilters: sGetItemFiltersRoot(state),\n});\n\nexport default connect(mapStateToProps)(AppItem);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport i18n from '@dhis2/d2-i18n';\n\nimport { colors } from '@dhis2/ui-core';\nimport ItemHeader from '../ItemHeader';\n\nconst style = {\n    margin: '21px 28px',\n    fontSize: '14px',\n    lineHeight: '18px',\n    color: colors.grey600,\n};\n\nconst SpacerItem = props => {\n    return (\n        <>\n            <ItemHeader title={i18n.t('Spacer')} itemId={props.item.id} />\n            <p style={style}>\n                {i18n.t(\n                    'Use a spacer to create empty vertical space between other dashboard items.'\n                )}\n            </p>\n        </>\n    );\n};\n\nSpacerItem.propTypes = {\n    item: PropTypes.object,\n};\n\nexport default SpacerItem;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport VisualizationItem from './VisualizationItem/Item';\nimport MessagesItem from './MessagesItem/Item';\nimport NotSupportedItem from './NotSupportedItem/Item';\nimport ListItem from './ListItem/Item';\nimport TextItem from './TextItem/Item';\nimport AppItem from './AppItem/Item';\nimport SpacerItem from './SpacerItem/Item';\nimport {\n    APP,\n    VISUALIZATION,\n    REPORT_TABLE,\n    CHART,\n    MAP,\n    EVENT_CHART,\n    EVENT_REPORT,\n    MESSAGES,\n    REPORTS,\n    RESOURCES,\n    USERS,\n    TEXT,\n    SPACER,\n} from '../../modules/itemTypes';\nimport { DEFAULT_STATE_ITEM_FILTERS } from '../../reducers/itemFilters';\n\nconst getGridItem = type => {\n    switch (type) {\n        case VISUALIZATION:\n        case REPORT_TABLE:\n        case CHART:\n        case MAP:\n        case EVENT_CHART:\n        case EVENT_REPORT:\n            return VisualizationItem;\n        case MESSAGES:\n            return MessagesItem;\n        case REPORTS:\n        case RESOURCES:\n        case USERS:\n            return ListItem;\n        case TEXT:\n            return TextItem;\n        case SPACER:\n            return SpacerItem;\n        case APP:\n            return AppItem;\n        default:\n            return NotSupportedItem;\n    }\n};\n\nexport const Item = props => {\n    const GridItem = getGridItem(props.item.type);\n\n    return (\n        <GridItem\n            item={props.item}\n            editMode={props.editMode}\n            itemFilters={\n                props.editMode ? DEFAULT_STATE_ITEM_FILTERS : props.itemFilters\n            }\n            onToggleItemExpanded={props.onToggleItemExpanded}\n        />\n    );\n};\n\nItem.propTypes = {\n    editMode: PropTypes.bool,\n    item: PropTypes.object,\n    itemFilters: PropTypes.object,\n    onToggleItemExpanded: PropTypes.func,\n};\n","import React from 'react';\nimport { colors } from '@dhis2/ui-core';\nimport PropTypes from 'prop-types';\n\nexport const NoContentMessage = ({ text }) => (\n    <div\n        style={{\n            padding: '50px 10px',\n            textAlign: 'center',\n            fontSize: '15px',\n            fontWeight: 500,\n            color: colors.grey600,\n        }}\n    >\n        {text}\n    </div>\n);\n\nNoContentMessage.propTypes = {\n    text: PropTypes.string,\n};\n\nexport default NoContentMessage;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport debounce from 'lodash/debounce';\nimport pick from 'lodash/pick';\n\nconst defaultDebounceMs = 100;\nconst defaultBufferFactor = 0.25;\n\nclass ProgressiveLoadingContainer extends Component {\n    static propTypes = {\n        children: PropTypes.node.isRequired,\n        bufferFactor: PropTypes.number,\n        className: PropTypes.string,\n        debounceMs: PropTypes.number,\n        style: PropTypes.object,\n    };\n    static defaultProps = {\n        debounceMs: defaultDebounceMs,\n        bufferFactor: defaultBufferFactor,\n    };\n\n    state = {\n        shouldLoad: false,\n    };\n    containerRef = null;\n    shouldLoadHandler = null;\n\n    checkShouldLoad() {\n        const bufferPx = this.props.bufferFactor * window.innerHeight;\n\n        if (!this.containerRef) {\n            return;\n        }\n\n        const rect = this.containerRef.getBoundingClientRect();\n        if (\n            rect.bottom > -bufferPx &&\n            rect.top < window.innerHeight + bufferPx\n        ) {\n            this.setState({\n                shouldLoad: true,\n            });\n\n            this.removeHandler();\n        }\n    }\n\n    registerHandler() {\n        this.shouldLoadHandler = debounce(\n            () => this.checkShouldLoad(),\n            this.props.debounceMs\n        );\n\n        window.addEventListener('scroll', this.shouldLoadHandler);\n    }\n    removeHandler() {\n        window.removeEventListener('scroll', this.shouldLoadHandler);\n    }\n\n    componentDidMount() {\n        this.registerHandler();\n        this.checkShouldLoad();\n    }\n\n    componentWillUnmount() {\n        this.removeHandler();\n    }\n\n    render() {\n        const { children, className, style, ...props } = this.props;\n        const { shouldLoad } = this.state;\n\n        const eventProps = pick(props, [\n            'onMouseDown',\n            'onTouchStart',\n            'onMouseUp',\n            'onTouchEnd',\n        ]);\n\n        return (\n            <div\n                ref={ref => (this.containerRef = ref)}\n                style={style}\n                className={className}\n                {...eventProps}\n            >\n                {shouldLoad && children}\n            </div>\n        );\n    }\n}\n\nexport default ProgressiveLoadingContainer;\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport i18n from '@dhis2/d2-i18n';\nimport ReactGridLayout from 'react-grid-layout';\nimport { CircularLoader, ScreenCover } from '@dhis2/ui-core';\n\nimport {\n    acUpdateDashboardLayout,\n    acRemoveDashboardItem,\n} from '../../actions/editDashboard';\nimport { Item } from '../Item/Item';\nimport { resize as pluginResize } from '../Item/VisualizationItem/plugin';\nimport { isVisualizationType } from '../../modules/itemTypes';\nimport {\n    GRID_ROW_HEIGHT,\n    GRID_COMPACT_TYPE,\n    MARGIN,\n    getGridColumns,\n    hasShape,\n    onItemResize,\n} from './gridUtil';\nimport { orArray } from '../../modules/util';\n\nimport NoContentMessage from '../../widgets/NoContentMessage';\n\nimport 'react-grid-layout/css/styles.css';\nimport 'react-resizable/css/styles.css';\n\nimport './ItemGrid.css';\nimport { sGetSelectedId, sGetSelectedIsLoading } from '../../reducers/selected';\nimport {\n    sGetEditDashboardRoot,\n    sGetEditDashboardItems,\n} from '../../reducers/editDashboard';\nimport {\n    sGetDashboardById,\n    sGetDashboardItems,\n} from '../../reducers/dashboards';\nimport ProgressiveLoadingContainer from '../Item/ProgressiveLoadingContainer';\n\n// Component\n\nconst EXPANDED_HEIGHT = 17;\n// this is set in the .dashboard-item-content css\nexport const ITEM_CONTENT_PADDING_BOTTOM = 4;\n\nexport class ItemGrid extends Component {\n    state = {\n        expandedItems: {},\n    };\n\n    onToggleItemExpanded = clickedId => {\n        const isExpanded =\n            typeof this.state.expandedItems[clickedId] === 'boolean'\n                ? this.state.expandedItems[clickedId]\n                : false;\n\n        const expandedItems = { ...this.state.expandedItems };\n        expandedItems[clickedId] = !isExpanded;\n        this.setState({ expandedItems });\n    };\n\n    onRemoveItem = clickedId => {\n        this.props.acRemoveDashboardItem(clickedId);\n    };\n\n    componentWillReceiveProps(nextProps) {\n        if (nextProps.edit) {\n            this.setState({ expandedItems: {} });\n        }\n    }\n\n    onLayoutChange = newLayout => {\n        if (this.props.edit) {\n            this.props.acUpdateDashboardLayout(newLayout);\n        }\n    };\n\n    onResizeStop = (layout, oldItem, newItem) => {\n        onItemResize(newItem.i);\n\n        const dashboardItem = this.props.dashboardItems.find(\n            item => item.id === newItem.i\n        );\n\n        // call resize on the item component if it's a plugin type\n        if (dashboardItem && isVisualizationType(dashboardItem)) {\n            pluginResize(dashboardItem);\n        }\n    };\n\n    onRemoveItemWrapper = id => () => this.onRemoveItem(id);\n\n    adjustHeightForExpanded = dashboardItem => {\n        const expandedItem = this.state.expandedItems[dashboardItem.id];\n\n        if (expandedItem && expandedItem === true) {\n            return Object.assign({}, dashboardItem, {\n                h: dashboardItem.h + EXPANDED_HEIGHT,\n            });\n        }\n\n        return dashboardItem;\n    };\n\n    getItemComponent = item => {\n        const itemClassNames = [\n            item.type,\n            this.props.edit ? 'edit' : 'view',\n        ].join(' ');\n\n        return (\n            <ProgressiveLoadingContainer\n                key={item.i}\n                className={itemClassNames}\n            >\n                <Item\n                    item={item}\n                    editMode={this.props.edit}\n                    onToggleItemExpanded={this.onToggleItemExpanded}\n                />\n            </ProgressiveLoadingContainer>\n        );\n    };\n\n    getItemComponents = items => items.map(item => this.getItemComponent(item));\n\n    render() {\n        const { edit, isLoading, dashboardItems } = this.props;\n\n        if (!isLoading && !dashboardItems.length) {\n            return (\n                <NoContentMessage\n                    text={i18n.t('There are no items on this dashboard')}\n                />\n            );\n        }\n\n        const items = edit\n            ? dashboardItems\n            : dashboardItems.map(this.adjustHeightForExpanded);\n\n        return (\n            <div className=\"grid-wrapper\">\n                {isLoading ? (\n                    <ScreenCover>\n                        <CircularLoader />\n                    </ScreenCover>\n                ) : null}\n                <ReactGridLayout\n                    onLayoutChange={this.onLayoutChange}\n                    onResizeStop={this.onResizeStop}\n                    className=\"layout\"\n                    layout={items}\n                    margin={MARGIN}\n                    cols={getGridColumns()}\n                    rowHeight={GRID_ROW_HEIGHT}\n                    width={window.innerWidth}\n                    compactType={GRID_COMPACT_TYPE}\n                    isDraggable={edit}\n                    isResizable={edit}\n                    draggableCancel=\"input,textarea\"\n                >\n                    {this.getItemComponents(items)}\n                </ReactGridLayout>\n            </div>\n        );\n    }\n}\n\nItemGrid.propTypes = {\n    acRemoveDashboardItem: PropTypes.func,\n    acUpdateDashboardLayout: PropTypes.func,\n    dashboardItems: PropTypes.array,\n    edit: PropTypes.bool,\n    isLoading: PropTypes.bool,\n};\n\nItemGrid.defaultProps = {\n    dashboardItems: [],\n};\n\n// Container\n\nconst mapStateToProps = (state, ownProps) => {\n    const selectedDashboard = ownProps.edit\n        ? sGetEditDashboardRoot(state)\n        : sGetDashboardById(state, sGetSelectedId(state));\n\n    const dashboardItems = ownProps.edit\n        ? sGetEditDashboardItems(state)\n        : sGetDashboardItems(state);\n\n    return {\n        isLoading: sGetSelectedIsLoading(state) || !selectedDashboard,\n        dashboardItems,\n    };\n};\n\nconst mapDispatchToProps = {\n    acUpdateDashboardLayout,\n    acRemoveDashboardItem,\n};\n\nconst mergeProps = (stateProps, dispatchProps, ownProps) => {\n    const validItems = orArray(stateProps.dashboardItems).filter(hasShape);\n\n    return {\n        ...dispatchProps,\n        edit: ownProps.edit,\n        isLoading: stateProps.isLoading,\n        dashboardItems: validItems,\n        onItemResize,\n    };\n};\n\nexport default connect(\n    mapStateToProps,\n    mapDispatchToProps,\n    mergeProps\n)(ItemGrid);\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nimport i18n from '@dhis2/d2-i18n';\n\nimport { colors } from '@dhis2/ui-core';\n\nconst styles = {\n    badgeContainer: {\n        margin: '2px',\n        padding: '0 16px',\n        borderRadius: '4px',\n        color: colors.white,\n        backgroundColor: '#212934',\n        height: 36,\n        display: 'flex',\n        alignItems: 'center',\n    },\n    badge: {\n        fontSize: '13px',\n        cursor: 'pointer',\n        whiteSpace: 'nowrap',\n    },\n    badgeRemove: {\n        fontSize: '12px',\n        textDecoration: 'underline',\n        marginLeft: '24px',\n        cursor: 'pointer',\n    },\n};\n\nclass FilterBadge extends Component {\n    onClick = id => () => this.props.onClick(id);\n    onRemove = id => () => this.props.onRemove(id);\n\n    render() {\n        const { data } = this.props;\n\n        return (\n            <div style={styles.badgeContainer}>\n                <span style={styles.badge} onClick={this.onClick(data.id)}>\n                    {`${data.name}: ${\n                        data.values.length > 1\n                            ? i18n.t('{{count}} selected', {\n                                  count: data.values.length,\n                              })\n                            : data.values[0].name\n                    }`}\n                </span>\n                <span\n                    style={styles.badgeRemove}\n                    onClick={this.onRemove(data.id)}\n                >\n                    {i18n.t('Remove')}\n                </span>\n            </div>\n        );\n    }\n}\n\nFilterBadge.propTypes = {\n    data: PropTypes.object.isRequired,\n    onClick: PropTypes.func.isRequired,\n    onRemove: PropTypes.func.isRequired,\n};\n\nFilterBadge.defaultProps = {\n    onClick: Function.prototype,\n    onRemove: Function.prototype,\n};\n\nexport default FilterBadge;\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { createSelector } from 'reselect';\n\nimport { sGetDimensions } from '../../reducers/dimensions';\nimport { sGetItemFiltersRoot } from '../../reducers/itemFilters';\nimport { sGetControlBarUserRows } from '../../reducers/controlBar';\nimport { getTopOffset } from '../ControlBar/controlBarDimensions';\nimport { acRemoveItemFilter } from '../../actions/itemFilters';\nimport { acRemoveEditItemFilter } from '../../actions/editItemFilters';\nimport { acSetActiveModalDimension } from '../../actions/activeModalDimension';\n\nimport FilterBadge from './FilterBadge';\n\nimport classes from './styles/FilterBar.module.css';\n\nexport class FilterBar extends Component {\n    onBadgeRemove = id => {\n        this.props.removeItemFilter(id);\n        this.props.removeEditItemFilter(id);\n    };\n\n    onBadgeClick = id => {\n        this.props.setActiveModalDimension({\n            id,\n            name: this.props.filters.find(item => item.id === id).name,\n        });\n    };\n\n    render() {\n        const { filters, userRows } = this.props;\n        const top = getTopOffset(userRows) + 10;\n\n        return filters.length ? (\n            <div className={classes.bar} style={{ top }}>\n                {filters.map(filter => (\n                    <FilterBadge\n                        key={filter.id}\n                        data={filter}\n                        onClick={this.onBadgeClick}\n                        onRemove={this.onBadgeRemove}\n                    />\n                ))}\n            </div>\n        ) : null;\n    }\n}\n\nFilterBar.propTypes = {\n    filters: PropTypes.array.isRequired,\n    removeEditItemFilter: PropTypes.func.isRequired,\n    removeItemFilter: PropTypes.func.isRequired,\n    setActiveModalDimension: PropTypes.func,\n    userRows: PropTypes.number,\n};\n\nFilterBar.defaultProps = {\n    filters: [],\n    removeItemFIlter: Function.prototype,\n    removeEditItemFilter: Function.prototype,\n};\n\n// simplify the filters structure to:\n// [{ id: 'pe', name: 'Period', values: [{ id: 2019: name: '2019' }, {id: 'LAST_MONTH', name: 'Last month' }]}, ...]\nconst filtersSelector = createSelector(\n    [sGetItemFiltersRoot, sGetDimensions],\n    (filters, dimensions) =>\n        Object.keys(filters).reduce((arr, id) => {\n            arr.push({\n                id: id,\n                name: dimensions.find(dimension => dimension.id === id).name,\n                values: filters[id].map(value => ({\n                    id: value.id,\n                    name: value.displayName || value.name,\n                })),\n            });\n\n            return arr;\n        }, [])\n);\n\nconst mapStateToProps = state => ({\n    filters: filtersSelector(state),\n    userRows: sGetControlBarUserRows(state),\n});\n\nexport default connect(\n    mapStateToProps,\n    {\n        setActiveModalDimension: acSetActiveModalDimension,\n        removeItemFilter: acRemoveItemFilter,\n        removeEditItemFilter: acRemoveEditItemFilter,\n    }\n)(FilterBar);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport TitleBar from '../TitleBar/TitleBar';\nimport ItemGrid from '../ItemGrid/ItemGrid';\nimport FilterBar from '../FilterBar/FilterBar';\n\nexport const DashboardContent = props => (\n    <>\n        <TitleBar edit={props.editMode} />\n        <FilterBar />\n        <ItemGrid edit={props.editMode} />\n    </>\n);\n\nDashboardContent.propTypes = {\n    editMode: PropTypes.bool,\n};\n\nexport default DashboardContent;\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport isEmpty from 'lodash/isEmpty';\nimport i18n from '@dhis2/d2-i18n';\nimport PropTypes from 'prop-types';\n\nimport {\n    sGetAllDashboards,\n    sDashboardsIsFetching,\n} from '../../reducers/dashboards';\nimport { sGetSelectedId } from '../../reducers/selected';\nimport DashboardsBar from '../ControlBar/DashboardsBar';\nimport DashboardVerticalOffset from './DashboardVerticalOffset';\nimport DashboardContent from './DashboardContent';\nimport NoContentMessage from '../../widgets/NoContentMessage';\n\nexport const Content = ({ hasDashboardContent, dashboardsIsEmpty }) => {\n    const msg = dashboardsIsEmpty\n        ? i18n.t(\n              'No dashboards found. Use the + button to create a new dashboard.'\n          )\n        : i18n.t('Requested dashboard not found');\n\n    return hasDashboardContent ? (\n        <DashboardContent editMode={false} />\n    ) : (\n        <NoContentMessage text={msg} />\n    );\n};\n\nContent.propTypes = {\n    dashboardsIsEmpty: PropTypes.bool,\n    hasDashboardContent: PropTypes.bool,\n};\n\nexport const ViewDashboard = ({ id, dashboardsIsEmpty, dashboardsLoaded }) => {\n    const hasDashboardContent = id && !dashboardsIsEmpty;\n    const contentNotReady = !dashboardsLoaded || id === null;\n\n    return (\n        <>\n            <DashboardsBar />\n            <DashboardVerticalOffset />\n            <div className=\"dashboard-wrapper\">\n                {contentNotReady ? null : (\n                    <Content\n                        hasDashboardContent={hasDashboardContent}\n                        dashboardsIsEmpty={dashboardsIsEmpty}\n                    />\n                )}\n            </div>\n        </>\n    );\n};\n\nViewDashboard.propTypes = {\n    dashboardsIsEmpty: PropTypes.bool,\n    dashboardsLoaded: PropTypes.bool,\n    id: PropTypes.string,\n};\n\nconst mapStateToProps = state => {\n    const dashboards = sGetAllDashboards(state);\n\n    return {\n        id: sGetSelectedId(state),\n        dashboardsIsEmpty: isEmpty(dashboards),\n        dashboardsLoaded: !sDashboardsIsFetching(state),\n    };\n};\n\nexport default connect(mapStateToProps)(ViewDashboard);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport i18n from '@dhis2/d2-i18n';\nimport {\n    Button,\n    Modal,\n    ModalContent,\n    ModalActions,\n    ButtonStrip,\n    ModalTitle,\n} from '@dhis2/ui-core';\n\nimport classes from './styles/ConfirmDeleteDialog.module.css';\n\nexport const ConfirmDeleteDialog = ({\n    dashboardName,\n    onDeleteConfirmed,\n    onContinueEditing,\n    open,\n}) => {\n    const actions = [\n        <Button key=\"cancel\" secondary onClick={onContinueEditing}>\n            {i18n.t('Cancel')}\n        </Button>,\n        <Button key=\"delete\" destructive onClick={onDeleteConfirmed}>\n            {i18n.t('Delete')}\n        </Button>,\n    ];\n\n    return (\n        open && (\n            <Modal onClose={onContinueEditing} small position=\"middle\">\n                <ModalTitle>{i18n.t('Delete dashboard')}</ModalTitle>\n                <ModalContent>\n                    <span className={classes.content}>\n                        {i18n.t(\n                            'Deleting dashboard \"{{ dashboardName }}\" will remove it for all users. This action cannot be undone. Are you sure you want to permanently delete this dashboard?',\n                            { dashboardName }\n                        )}\n                    </span>\n                </ModalContent>\n                <ModalActions>\n                    <ButtonStrip>{actions}</ButtonStrip>\n                </ModalActions>\n            </Modal>\n        )\n    );\n};\n\nConfirmDeleteDialog.propTypes = {\n    dashboardName: PropTypes.string,\n    open: PropTypes.bool,\n    onContinueEditing: PropTypes.func,\n    onDeleteConfirmed: PropTypes.func,\n};\n\nexport default ConfirmDeleteDialog;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { Redirect } from 'react-router-dom';\nimport i18n from '@dhis2/d2-i18n';\nimport ControlBar from './ControlBar';\nimport TranslationDialog from '@dhis2/d2-ui-translation-dialog';\nimport { Button } from '@dhis2/ui-core';\n\nimport ConfirmDeleteDialog from './ConfirmDeleteDialog';\nimport {\n    tSaveDashboard,\n    acClearEditDashboard,\n} from '../../actions/editDashboard';\nimport {\n    tDeleteDashboard,\n    acSetDashboardDisplayName,\n} from '../../actions/dashboards';\nimport {\n    sGetEditDashboardRoot,\n    sGetIsNewDashboard,\n} from '../../reducers/editDashboard';\nimport {\n    CONTROL_BAR_ROW_HEIGHT,\n    MIN_ROW_COUNT,\n    getControlBarHeight,\n} from './controlBarDimensions';\nimport { apiFetchDashboard } from '../../api/dashboards';\n\nimport classes from './styles/DashboardsBar.module.css';\n\nconst buttonBarStyle = {\n    height: CONTROL_BAR_ROW_HEIGHT,\n    paddingTop: '15px',\n    marginLeft: '15px',\n    marginRight: '15px',\n};\n\nexport class EditBar extends Component {\n    state = {\n        translationDialogIsOpen: false,\n        dashboardModel: undefined,\n        confirmDeleteDialogOpen: false,\n        redirectUrl: undefined,\n    };\n\n    onConfirmDelete = () => {\n        this.setState({ confirmDeleteDialogOpen: true });\n    };\n\n    onSave = () => {\n        this.props.onSave().then(newId => {\n            this.setState({ redirectUrl: `/${newId}` });\n        });\n    };\n\n    onDiscard = () => {\n        this.props.onDiscardChanges();\n        const redirectUrl = this.props.dashboardId\n            ? `/${this.props.dashboardId}`\n            : '/';\n        this.setState({ redirectUrl });\n    };\n\n    onContinueEditing = () => {\n        this.setState({ confirmDeleteDialogOpen: false });\n    };\n\n    onDeleteConfirmed = () => {\n        this.setState({ confirmDeleteDialogOpen: false });\n        this.props.onDelete(this.props.dashboardId).then(() => {\n            this.setState({ redirectUrl: '/' });\n        });\n    };\n\n    onTranslationsSaved = async translations => {\n        if (translations && translations.length) {\n            const dbLocale = await this.context.d2.currentUser.userSettings.get(\n                'keyDbLocale'\n            );\n\n            const translation = translations.find(\n                t => t.locale === dbLocale && t.property === 'NAME'\n            );\n\n            if (translation && translation.value) {\n                this.props.onTranslate(\n                    this.props.dashboardId,\n                    translation.value\n                );\n            }\n        }\n    };\n\n    fetchDashboardModel = () => {\n        if (this.props.dashboardId && !this.state.dashboardModel) {\n            apiFetchDashboard(this.props.dashboardId).then(dashboardModel =>\n                this.setState({ dashboardModel })\n            );\n        }\n    };\n\n    componentDidMount() {\n        this.fetchDashboardModel();\n    }\n\n    componentDidUpdate() {\n        this.fetchDashboardModel();\n    }\n\n    toggleTranslationDialog = () => {\n        this.setState({\n            translationDialogIsOpen: !this.state.translationDialogIsOpen,\n        });\n    };\n\n    confirmDeleteDialog = () =>\n        this.props.deleteAccess && this.props.dashboardId ? (\n            <ConfirmDeleteDialog\n                dashboardName={this.props.dashboardName}\n                onDeleteConfirmed={this.onDeleteConfirmed}\n                onContinueEditing={this.onContinueEditing}\n                open={this.state.confirmDeleteDialogOpen}\n            />\n        ) : null;\n\n    translationDialog = () =>\n        this.state.dashboardModel && this.state.dashboardModel.id ? (\n            <TranslationDialog\n                className=\"translation-dialog\"\n                d2={this.context.d2}\n                open={this.state.translationDialogIsOpen}\n                onRequestClose={this.toggleTranslationDialog}\n                objectToTranslate={this.state.dashboardModel}\n                fieldsToTranslate={['name', 'description']}\n                // TODO handle messages in snackbar\n                onTranslationSaved={this.onTranslationsSaved}\n                onTranslationError={err =>\n                    console.log('translation update error', err)\n                }\n            />\n        ) : null;\n\n    render() {\n        if (this.state.redirectUrl) {\n            return <Redirect to={this.state.redirectUrl} />;\n        }\n\n        const { dashboardId, deleteAccess, updateAccess } = this.props;\n        const controlBarHeight = getControlBarHeight(MIN_ROW_COUNT);\n\n        const discardBtnText = updateAccess\n            ? i18n.t('Exit without saving')\n            : i18n.t('Go to dashboards');\n\n        return (\n            <>\n                <ControlBar height={controlBarHeight} editMode={true}>\n                    <div style={buttonBarStyle}>\n                        {updateAccess ? (\n                            <div className={classes.leftControls}>\n                                <span style={{ marginRight: '15px' }}>\n                                    <Button primary onClick={this.onSave}>\n                                        {i18n.t('Save changes')}\n                                    </Button>\n                                </span>\n\n                                {dashboardId ? (\n                                    <span style={{ marginRight: '15px' }}>\n                                        <Button\n                                            onClick={\n                                                this.toggleTranslationDialog\n                                            }\n                                        >\n                                            {i18n.t('Translate')}\n                                        </Button>\n                                    </span>\n                                ) : null}\n                                {dashboardId && deleteAccess ? (\n                                    <Button onClick={this.onConfirmDelete}>\n                                        {i18n.t('Delete')}\n                                    </Button>\n                                ) : null}\n                            </div>\n                        ) : null}\n\n                        <div className={classes.rightControls}>\n                            <Button secondary onClick={this.onDiscard}>\n                                {discardBtnText}\n                            </Button>\n                        </div>\n                    </div>\n                </ControlBar>\n                {this.translationDialog()}\n                {this.confirmDeleteDialog()}\n            </>\n        );\n    }\n}\n\nEditBar.propTypes = {\n    dashboardId: PropTypes.string,\n    dashboardName: PropTypes.string,\n    deleteAccess: PropTypes.bool,\n    updateAccess: PropTypes.bool,\n    onDelete: PropTypes.func,\n    onDiscardChanges: PropTypes.func,\n    onSave: PropTypes.func,\n    onTranslate: PropTypes.func,\n};\n\nEditBar.contextTypes = {\n    d2: PropTypes.object,\n};\n\nconst mapStateToProps = state => {\n    const dashboard = sGetEditDashboardRoot(state);\n\n    let deleteAccess;\n    let updateAccess;\n    if (sGetIsNewDashboard(state)) {\n        deleteAccess = true;\n        updateAccess = true;\n    } else {\n        updateAccess = dashboard.access ? dashboard.access.update : false;\n        deleteAccess = dashboard.access ? dashboard.access.delete : false;\n    }\n\n    return {\n        dashboardId: dashboard.id,\n        dashboardName: dashboard.name,\n        deleteAccess,\n        updateAccess,\n    };\n};\n\nconst mapDispatchToProps = dispatch => ({\n    onSave: () => dispatch(tSaveDashboard()).then(id => id),\n    onDelete: id => dispatch(tDeleteDashboard(id)),\n    onDiscardChanges: () => dispatch(acClearEditDashboard()),\n    onTranslate: (id, value) => dispatch(acSetDashboardDisplayName(id, value)),\n});\n\nexport default connect(\n    mapStateToProps,\n    mapDispatchToProps\n)(EditBar);\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport i18n from '@dhis2/d2-i18n';\nimport PropTypes from 'prop-types';\n\nimport { acSetEditDashboard } from '../../actions/editDashboard';\nimport { sGetSelectedId } from '../../reducers/selected';\nimport {\n    sGetDashboardById,\n    sGetDashboardItems,\n    sDashboardsIsFetching,\n} from '../../reducers/dashboards';\nimport DashboardVerticalOffset from './DashboardVerticalOffset';\nimport DashboardContent from './DashboardContent';\nimport EditBar from '../ControlBar/EditBar';\nimport NoContentMessage from '../../widgets/NoContentMessage';\n\nexport const Content = ({ updateAccess }) => {\n    return updateAccess ? (\n        <DashboardContent editMode={true} />\n    ) : (\n        <NoContentMessage text={i18n.t('No access')} />\n    );\n};\n\nContent.propTypes = {\n    updateAccess: PropTypes.bool,\n};\nexport class EditDashboard extends Component {\n    state = {\n        initialized: false,\n    };\n\n    initEditDashboard = () => {\n        if (this.props.dashboard) {\n            this.setState({ initialized: true });\n            this.props.setEditDashboard(this.props.dashboard, this.props.items);\n        }\n    };\n\n    componentDidMount() {\n        this.initEditDashboard();\n    }\n\n    componentDidUpdate() {\n        if (!this.state.initialized) {\n            this.initEditDashboard();\n        }\n    }\n\n    getDashboardContent = () => {\n        const contentNotReady =\n            !this.props.dashboardsLoaded || this.props.id === null;\n\n        return (\n            <div className=\"dashboard-wrapper\">\n                {contentNotReady ? null : (\n                    <Content updateAccess={this.props.updateAccess} />\n                )}\n            </div>\n        );\n    };\n\n    render() {\n        return (\n            <>\n                <EditBar />\n                <DashboardVerticalOffset editMode={true} />\n                {this.getDashboardContent()}\n            </>\n        );\n    }\n}\n\nEditDashboard.propTypes = {\n    dashboard: PropTypes.object,\n    dashboardsLoaded: PropTypes.bool,\n    id: PropTypes.string,\n    items: PropTypes.array,\n    setEditDashboard: PropTypes.func,\n    updateAccess: PropTypes.bool,\n};\n\nconst mapStateToProps = state => {\n    const id = sGetSelectedId(state);\n    const dashboard = id ? sGetDashboardById(state, id) : null;\n\n    const updateAccess =\n        dashboard && dashboard.access ? dashboard.access.update : false;\n\n    return {\n        dashboard,\n        id,\n        updateAccess,\n        items: sGetDashboardItems(state),\n        dashboardsLoaded: !sDashboardsIsFetching(state),\n    };\n};\n\nexport default connect(\n    mapStateToProps,\n    {\n        setEditDashboard: acSetEditDashboard,\n    }\n)(EditDashboard);\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\n\nimport { acSetEditNewDashboard } from '../../actions/editDashboard';\nimport DashboardVerticalOffset from './DashboardVerticalOffset';\nimport EditBar from '../ControlBar/EditBar';\nimport DashboardContent from './DashboardContent';\n\nclass NewDashboard extends Component {\n    componentDidMount() {\n        this.props.setNewDashboard();\n    }\n\n    render() {\n        return (\n            <>\n                <EditBar />\n                <DashboardVerticalOffset editMode={true} />\n                <div className=\"dashboard-wrapper\">\n                    <DashboardContent editMode={true} />\n                </div>\n            </>\n        );\n    }\n}\n\nNewDashboard.propTypes = {\n    setNewDashboard: PropTypes.func,\n};\n\nexport default connect(\n    null,\n    {\n        setNewDashboard: acSetEditNewDashboard,\n    }\n)(NewDashboard);\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\n\nimport { tSelectDashboard } from '../../actions/dashboards';\nimport { sDashboardsIsFetching } from '../../reducers/dashboards';\nimport { EDIT, NEW } from './dashboardModes';\nimport ViewDashboard from './ViewDashboard';\nimport EditDashboard from './EditDashboard';\nimport NewDashboard from './NewDashboard';\n\nclass Dashboard extends Component {\n    setDashboard = () => {\n        if (this.props.dashboardsLoaded) {\n            const id = this.props.match.params.dashboardId || null;\n\n            this.props.selectDashboard(id);\n\n            this.scrollToTop();\n        }\n    };\n\n    scrollToTop = () => {\n        window.scrollTo(0, 0);\n    };\n\n    componentDidMount() {\n        this.setDashboard();\n    }\n\n    componentDidUpdate() {\n        this.setDashboard();\n    }\n\n    render() {\n        switch (this.props.mode) {\n            case EDIT:\n                return <EditDashboard />;\n            case NEW:\n                return <NewDashboard />;\n            default:\n                return <ViewDashboard />;\n        }\n    }\n}\n\nDashboard.propTypes = {\n    dashboardsLoaded: PropTypes.bool,\n    match: PropTypes.object,\n    mode: PropTypes.string,\n    selectDashboard: PropTypes.func,\n};\n\nconst mapStateToProps = state => {\n    return { dashboardsLoaded: !sDashboardsIsFetching(state) };\n};\n\nexport default connect(\n    mapStateToProps,\n    {\n        selectDashboard: tSelectDashboard,\n    }\n)(Dashboard);\n","export const EDIT = 'edit';\nexport const NEW = 'new';\nexport const VIEW = 'view';\n","import React, { Component } from 'react';\nimport { HashRouter as Router, Route, Switch } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport i18n from '@dhis2/d2-i18n';\nimport { HeaderBar } from '@dhis2/ui-widgets';\nimport { CssVariables } from '@dhis2/ui-core';\n\nimport { EDIT, VIEW, NEW } from './Dashboard/dashboardModes';\nimport { acReceivedUser } from '../actions/user';\nimport { tFetchDashboards } from '../actions/dashboards';\nimport { tSetControlBarRows } from '../actions/controlBar';\nimport { tSetDimensions } from '../actions/dimensions';\nimport Dashboard from './Dashboard/Dashboard';\nimport SnackbarMessage from './SnackbarMessage/SnackbarMessage';\n\nimport 'typeface-roboto';\nimport './App.css';\n\nexport class App extends Component {\n    componentDidMount() {\n        this.props.setCurrentUser(this.props.d2.currentUser);\n        this.props.fetchDashboards();\n        this.props.setControlBarRows();\n        this.props.setDimensions(this.props.d2);\n    }\n\n    getChildContext() {\n        return { baseUrl: this.props.baseUrl, i18n, d2: this.props.d2 };\n    }\n\n    render() {\n        return (\n            <>\n                <CssVariables colors spacers />\n                <div className=\"app-wrapper\">\n                    <div className=\"dashboard-header-bar\">\n                        <HeaderBar appName={i18n.t('Dashboard')} />\n                    </div>\n                    <Router>\n                        <Switch>\n                            <Route\n                                exact\n                                path=\"/\"\n                                render={props => (\n                                    <Dashboard {...props} mode={VIEW} />\n                                )}\n                            />\n                            <Route\n                                exact\n                                path=\"/new\"\n                                render={props => (\n                                    <Dashboard {...props} mode={NEW} />\n                                )}\n                            />\n                            <Route\n                                exact\n                                path=\"/:dashboardId\"\n                                render={props => (\n                                    <Dashboard {...props} mode={VIEW} />\n                                )}\n                            />\n                            <Route\n                                exact\n                                path=\"/:dashboardId/edit\"\n                                render={props => (\n                                    <Dashboard {...props} mode={EDIT} />\n                                )}\n                            />\n                        </Switch>\n                    </Router>\n                    <SnackbarMessage />\n                </div>\n            </>\n        );\n    }\n}\n\nApp.propTypes = {\n    fetchDashboards: PropTypes.func.isRequired,\n    setControlBarRows: PropTypes.func.isRequired,\n    setCurrentUser: PropTypes.func.isRequired,\n    setDimensions: PropTypes.func.isRequired,\n    baseUrl: PropTypes.string,\n    d2: PropTypes.object,\n};\n\nApp.childContextTypes = {\n    baseUrl: PropTypes.string,\n    i18n: PropTypes.object,\n    d2: PropTypes.object,\n};\n\nconst mapDispatchToProps = dispatch => {\n    return {\n        setCurrentUser: currentUser => dispatch(acReceivedUser(currentUser)),\n        fetchDashboards: () => dispatch(tFetchDashboards()),\n        setControlBarRows: () => dispatch(tSetControlBarRows()),\n        setDimensions: d2 => dispatch(tSetDimensions(d2)),\n    };\n};\n\nexport default connect(\n    null,\n    mapDispatchToProps\n)(App);\n","import { RECEIVED_USER } from '../reducers/user';\n\nexport const acReceivedUser = value => ({\n    type: RECEIVED_USER,\n    value,\n});\n","//------------------------------------------------------------------------------\n// <auto-generated>\n    // This code was generated by d2-i18n-generate.\n    //\n    // Changes to this file may cause incorrect behavior and will be lost if\n    // the code is regenerated.\n    // </auto-generated>\n//------------------------------------------------------------------------------\nimport i18n from '@dhis2/d2-i18n';\nimport moment from 'moment';\nimport 'moment/locale/ar';\nimport 'moment/locale/es';\nimport 'moment/locale/fr';\nimport 'moment/locale/lo';\nimport 'moment/locale/nb';\nimport 'moment/locale/pt';\nimport 'moment/locale/ru';\nimport 'moment/locale/sv';\nimport 'moment/locale/tg';\nimport 'moment/locale/uk';\nimport 'moment/locale/ur';\nimport 'moment/locale/vi';\nimport 'moment/locale/zh-cn';\n\nimport arTranslations from './ar/translations.json';\nimport ar_IQTranslations from './ar_IQ/translations.json';\nimport daTranslations from './da/translations.json';\nimport enTranslations from './en/translations.json';\nimport esTranslations from './es/translations.json';\nimport frTranslations from './fr/translations.json';\nimport idTranslations from './id/translations.json';\nimport kmTranslations from './km/translations.json';\nimport loTranslations from './lo/translations.json';\nimport myTranslations from './my/translations.json';\nimport nbTranslations from './nb/translations.json';\nimport prsTranslations from './prs/translations.json';\nimport psTranslations from './ps/translations.json';\nimport ptTranslations from './pt/translations.json';\nimport pt_BRTranslations from './pt_BR/translations.json';\nimport ruTranslations from './ru/translations.json';\nimport svTranslations from './sv/translations.json';\nimport tetTranslations from './tet/translations.json';\nimport tgTranslations from './tg/translations.json';\nimport ukTranslations from './uk/translations.json';\nimport urTranslations from './ur/translations.json';\nimport viTranslations from './vi/translations.json';\nimport zhTranslations from './zh/translations.json';\nimport zh_CNTranslations from './zh_CN/translations.json';\n\nconst namespace = 'dashboards-app';\nmoment.locale('en');\n\ni18n.addResources('ar', namespace, arTranslations);\ni18n.addResources('ar_IQ', namespace, ar_IQTranslations);\ni18n.addResources('da', namespace, daTranslations);\ni18n.addResources('en', namespace, enTranslations);\ni18n.addResources('es', namespace, esTranslations);\ni18n.addResources('fr', namespace, frTranslations);\ni18n.addResources('id', namespace, idTranslations);\ni18n.addResources('km', namespace, kmTranslations);\ni18n.addResources('lo', namespace, loTranslations);\ni18n.addResources('my', namespace, myTranslations);\ni18n.addResources('nb', namespace, nbTranslations);\ni18n.addResources('prs', namespace, prsTranslations);\ni18n.addResources('ps', namespace, psTranslations);\ni18n.addResources('pt', namespace, ptTranslations);\ni18n.addResources('pt_BR', namespace, pt_BRTranslations);\ni18n.addResources('ru', namespace, ruTranslations);\ni18n.addResources('sv', namespace, svTranslations);\ni18n.addResources('tet', namespace, tetTranslations);\ni18n.addResources('tg', namespace, tgTranslations);\ni18n.addResources('uk', namespace, ukTranslations);\ni18n.addResources('ur', namespace, urTranslations);\ni18n.addResources('vi', namespace, viTranslations);\ni18n.addResources('zh', namespace, zhTranslations);\ni18n.addResources('zh_CN', namespace, zh_CNTranslations);\n\ni18n.setDefaultNamespace(namespace);\ni18n.changeLanguage('en');\n\nexport default i18n;\n","/** @module reducers/selected */\nimport { validateReducer } from '../modules/util';\n\nexport const SET_STYLE = 'SET_STYLE';\n\nexport const DEFAULT_STATE_STYLE = 'LIST';\n\n/**\n * Reducer functions that computes and returns the new state based on the given action\n * @function\n * @param {Object} state The current state\n * @param {Object} action The action to be evaluated\n */\nconst style = (state = DEFAULT_STATE_STYLE, action) => {\n    switch (action.type) {\n        case SET_STYLE:\n            return validateReducer(action.value, DEFAULT_STATE_STYLE);\n        default:\n            return state;\n    }\n};\n\nexport default style;\n\n/**\n * Selectors that point to specific props in the state object\n * @function\n * @param {Object} state\n * @returns {Object}\n */\nexport const sGetStyleRoot = state => state.style;\n","import { combineReducers } from 'redux';\nimport arraySort from 'd2-utilizr/lib/arraySort';\n\nimport dashboards, { sGetDashboardsRoot } from './dashboards';\nimport selected from './selected';\nimport dashboardsFilter, {\n    ownerData,\n    sGetFilterName,\n    sGetFilterOrder,\n    sGetFilterOwner,\n} from './dashboardsFilter';\nimport controlBar from './controlBar';\nimport visualizations from './visualizations';\nimport editDashboard from './editDashboard';\nimport messages from './messages';\nimport user from './user';\nimport snackbar from './snackbar';\nimport itemFilters from './itemFilters';\nimport editItemFilters from './editItemFilters';\nimport style from './style';\nimport dimensions from './dimensions';\nimport settings from './settings';\nimport activeModalDimension from './activeModalDimension';\n\nconst USER = 'system';\n\n// Reducers\n\nexport default combineReducers({\n    dashboards,\n    selected,\n    dashboardsFilter,\n    controlBar,\n    visualizations,\n    messages,\n    user,\n    editDashboard,\n    itemFilters,\n    editItemFilters,\n    style,\n    snackbar,\n    dimensions,\n    settings,\n    activeModalDimension,\n});\n\n// Map constants to data\nconst mapConstToData = {\n    NAME: 'name',\n    ITEMS: 'numberOfItems',\n    CREATED: 'created',\n    OWNER: 'owner',\n};\n\n// Selectors\n\n// Filter dashboards by name\nexport const sFilterDashboardsByName = (dashboards, filter) =>\n    dashboards.filter(d =>\n        d.displayName.toLowerCase().includes(filter.toLowerCase())\n    );\n\n// Filter dashboards by owner, TODO FIXME\nexport const sFilterDashboardsByOwner = (dashboards, filter) => {\n    const ME = ownerData[1]; // TODO\n    const OTHERS = ownerData[2]; // TODO\n\n    switch (filter) {\n        case ME:\n            return dashboards.filter(d => d.owner === USER);\n        case OTHERS:\n            return dashboards.filter(d => d.owner !== USER);\n        default:\n            return dashboards;\n    }\n};\n\n// Filter dashboards by order\nexport const sFilterDashboardsByOrder = (dashboards, filter) => {\n    const filterValues = filter.split(':');\n\n    const key = filterValues[0];\n    const direction = filterValues[1];\n\n    return arraySort(dashboards, direction, mapConstToData[key]);\n};\n\n// Selectors dependency level 2\n\n// Get filtered dashboards\nexport const sGetFilteredDashboards = state => {\n    const dashboards = sGetDashboardsRoot(state);\n\n    const nameFilter = sGetFilterName(state);\n    const ownerFilter = sGetFilterOwner(state);\n    const orderFilter = sGetFilterOrder(state);\n\n    return sFilterDashboardsByOrder(\n        sFilterDashboardsByName(\n            sFilterDashboardsByOwner(dashboards, ownerFilter),\n            nameFilter\n        ),\n        orderFilter\n    );\n};\n","import { createStore, applyMiddleware, compose } from 'redux';\nimport { createLogger } from 'redux-logger';\nimport thunk from 'redux-thunk';\nimport reducer from './reducers';\n\nconst configureStore = () => {\n    const middleware = [thunk];\n\n    // Enable Redux devtools if extension is installed instead of redux-logger\n    const composeEnhancers =\n        window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\n    if (\n        !window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ &&\n        process.env.NODE_ENV !== 'production'\n    ) {\n        middleware.push(createLogger());\n    }\n\n    return createStore(\n        reducer,\n        composeEnhancers(applyMiddleware(...middleware))\n    );\n};\n\nexport default configureStore;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport { MuiThemeProvider, createMuiTheme } from '@material-ui/core/styles';\nimport { init as d2Init, config, getManifest, getUserSettings } from 'd2';\nimport dhis2theme from '@dhis2/d2-ui-core/theme/mui3.theme';\n\nimport { Provider as RuntimeProvider } from '@dhis2/app-runtime';\nimport { CssReset } from '@dhis2/ui-core';\n\nimport App from './components/App';\nimport './index.css';\nimport i18n from './locales';\nimport configureStore from './configureStore';\n\nconst muiTheme = () => createMuiTheme(dhis2theme);\n\nconst configI18n = userSettings => {\n    const uiLocale = userSettings.keyUiLocale;\n\n    if (uiLocale && uiLocale !== 'en') {\n        config.i18n.sources.add(`./i18n/i18n_module_${uiLocale}.properties`);\n    }\n\n    config.i18n.sources.add('./i18n/i18n_module_en.properties');\n    i18n.changeLanguage(uiLocale);\n};\n\nconst init = async () => {\n    const manifest = await getManifest('./manifest.webapp');\n\n    // log app info\n    console.info(\n        `Dashboards app, v${manifest.version}, ${\n            manifest.manifest_generated_at\n        }`\n    );\n\n    const isProd = process.env.NODE_ENV === 'production';\n\n    if (\n        !isProd &&\n        (!process.env.REACT_APP_DHIS2_BASE_URL ||\n            !process.env.REACT_APP_DHIS2_AUTHORIZATION)\n    ) {\n        throw new Error(\n            'Missing env variables REACT_APP_DHIS2_BASE_URL and REACT_APP_DHIS2_AUTHORIZATION'\n        );\n    }\n\n    // api config\n    const baseUrl = isProd\n        ? manifest.activities.dhis.href\n        : process.env.REACT_APP_DHIS2_BASE_URL;\n    const authorization = process.env.REACT_APP_DHIS2_AUTHORIZATION;\n\n    config.baseUrl = `${baseUrl}/api/${manifest.dhis2.apiVersion}`;\n    config.headers = isProd ? null : { Authorization: authorization };\n    config.schemas = [\n        'chart',\n        'map',\n        'report',\n        'reportTable',\n        'eventChart',\n        'eventReport',\n        'dashboard',\n        'organisationUnit',\n        'userGroup',\n    ];\n\n    getUserSettings()\n        .then(configI18n)\n        .then(() => d2Init(config))\n        .then(initializedD2 => {\n            ReactDOM.render(\n                <RuntimeProvider\n                    config={{\n                        baseUrl: baseUrl,\n                        apiVersion: manifest.dhis2.apiVersion,\n                    }}\n                >\n                    <CssReset />\n                    <Provider store={configureStore()}>\n                        <MuiThemeProvider theme={muiTheme()}>\n                            <App baseUrl={baseUrl} d2={initializedD2} />\n                        </MuiThemeProvider>\n                    </Provider>\n                </RuntimeProvider>,\n                document.getElementById('root')\n            );\n        });\n};\n\ninit();\n","import isObject from 'lodash/isObject';\n\n// validation\nexport function orNull(param) {\n    return param === undefined ? null : param;\n}\n\nexport function orArray(param) {\n    return Array.isArray(param) ? param : [];\n}\n\nexport function orObject(param) {\n    return isObject(param) ? param : {};\n}\n\n// array\nexport function arrayGetById(array, id) {\n    return array.find(item => item.id === id);\n}\n\n// object\nexport function arrayToIdMap(array) {\n    return array.reduce((obj, item) => {\n        obj[item.id] = item;\n        return obj;\n    }, {});\n}\n\n// date\nexport function getDate() {\n    const y = Math.floor(Math.random() * 3) + 2015;\n    const M = Math.floor(Math.random() * 12) + 1;\n    const d = Math.floor(Math.random() * 28) + 1;\n    // const h = Math.floor(Math.random() * 23) + 1;\n    // const m = Math.floor(Math.random() * 59) + 1;\n    // const s = Math.floor(Math.random() * 59) + 1;\n\n    return new Date(`${y}-${M}-${d}`)\n        .toJSON()\n        .replace('T', ' ')\n        .substr(0, 10);\n}\n\nexport const formatDate = (value, uiLocale) => {\n    if (typeof global.Intl !== 'undefined' && Intl.DateTimeFormat) {\n        const locale = uiLocale || 'en';\n        return new Intl.DateTimeFormat(locale, {\n            year: 'numeric',\n            month: 'short',\n            day: 'numeric',\n        }).format(new Date(value));\n    }\n\n    return value.substr(0, 19).replace('T', ' ');\n};\n\n/**\n * Sorts an array of objects based on provided date property\n *\n * @param {Array} items Array of objects\n * @param {String} dateProp Name of the date property to be used for sorting\n * @param {Boolean} ascending Whether to sort ascending or descending\n */\nexport const sortByDate = (items, dateProp, ascending = true) => {\n    const values = Object.values(items);\n\n    values.sort((a, b) => {\n        const aDate = new Date(a[dateProp]);\n        const bDate = new Date(b[dateProp]);\n\n        return ascending ? aDate - bDate : bDate - aDate;\n    });\n\n    return values;\n};\n\n// reducer validator\nexport const validateReducer = (value, defaultValue) =>\n    value === undefined || value === null ? defaultValue : value;\n\nexport const getBaseUrl = d2 => {\n    const api = d2.Api.getApi();\n    const idx = api.baseUrl.indexOf('/api');\n    return idx > -1 ? api.baseUrl.slice(0, idx) : api.baseUrl;\n};\n\nexport const getWithoutId = object => ({\n    ...object,\n    id: undefined,\n});\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"ControlBar_root__3LaTt\",\"content\":\"ControlBar_content__1r98-\",\"draghandle\":\"ControlBar_draghandle__1VWa0\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"FatalErrorBoundary_container__x6zhd\",\"icon\":\"FatalErrorBoundary_icon__2XjC2\",\"message\":\"FatalErrorBoundary_message__2p9y8\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"showMore\":\"ShowMoreButton_showMore__rWqw9\",\"disabled\":\"ShowMoreButton_disabled__2oX7G\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"ClearButton_button__2yjcV\",\"icon\":\"ClearButton_icon__1fqj8\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"textDiv\":\"Item_textDiv__2b-T5\"};","import isObject from 'lodash/isObject';\nimport { VIS_TYPE_COLUMN, VIS_TYPE_PIVOT_TABLE } from '@dhis2/analytics';\nimport { apiFetchFavorite, getMapFields } from '../../../api/metadata';\nimport {\n    REPORT_TABLE,\n    CHART,\n    MAP,\n    EVENT_REPORT,\n    EVENT_CHART,\n    itemTypeMap,\n} from '../../../modules/itemTypes';\nimport { getBaseUrl, getWithoutId } from '../../../modules/util';\nimport { getGridItemDomId } from '../../ItemGrid/gridUtil';\n\n//external plugins\nconst itemTypeToExternalPlugin = {\n    [MAP]: 'mapPlugin',\n    [EVENT_REPORT]: 'eventReportPlugin',\n    [EVENT_CHART]: 'eventChartPlugin',\n};\nconst hasIntegratedPlugin = type => [CHART, REPORT_TABLE].includes(type);\n\nconst getPlugin = type => {\n    if (hasIntegratedPlugin(type)) {\n        return true;\n    }\n    const pluginName = itemTypeToExternalPlugin[type];\n\n    return global[pluginName];\n};\n\nexport const THEMATIC_LAYER = 'thematic';\n\nexport const pluginIsAvailable = (item = {}, visualization = {}) => {\n    const type = visualization.activeType || item.type;\n\n    return !!getPlugin(type);\n};\n\nexport const extractFavorite = item => {\n    if (!isObject(item)) {\n        return null;\n    }\n\n    const propName = itemTypeMap[item.type].propName;\n\n    return (\n        item[propName] ||\n        (item.reportTable ||\n            item.chart ||\n            item.map ||\n            item.eventReport ||\n            item.eventChart ||\n            {})\n    );\n};\n\nexport const extractMapView = map =>\n    map.mapViews && map.mapViews.find(mv => mv.layer.includes(THEMATIC_LAYER));\n\nexport const loadPlugin = (plugin, config, credentials) => {\n    if (!(plugin && plugin.load)) {\n        return;\n    }\n\n    plugin.url = credentials.baseUrl;\n    plugin.loadingIndicator = true;\n    plugin.dashboard = true;\n    if (credentials.auth) {\n        plugin.auth = credentials.auth;\n    }\n    plugin.load(config);\n};\n\nexport const getId = item => extractFavorite(item).id;\nexport const getName = item => extractFavorite(item).name;\nexport const getDescription = item => extractFavorite(item).description;\nexport const getLink = (item, d2) => {\n    const baseUrl = getBaseUrl(d2);\n    const appUrl = itemTypeMap[item.type].appUrl(getId(item));\n\n    return `${baseUrl}/${appUrl}`;\n};\n\nexport const load = async (\n    item,\n    visualization,\n    { credentials, activeType, options = {} }\n) => {\n    const config = {\n        ...visualization,\n        ...options,\n        el: getGridItemDomId(item.id),\n    };\n\n    const type = activeType || item.type;\n    const plugin = getPlugin(type);\n\n    loadPlugin(plugin, config, credentials);\n};\n\nexport const fetch = async item => {\n    const fetchedFavorite = await apiFetchFavorite(getId(item), item.type, {\n        fields: item.type === MAP ? getMapFields() : null,\n    });\n\n    return fetchedFavorite;\n};\n\nexport const resize = item => {\n    const plugin = getPlugin(item.type);\n\n    if (plugin && plugin.resize) {\n        plugin.resize(getGridItemDomId(item.id));\n    }\n};\n\nexport const unmount = (item, activeType) => {\n    const plugin = getPlugin(activeType);\n\n    if (plugin && plugin.unmount) {\n        plugin.unmount(getGridItemDomId(item.id));\n    }\n};\n\nexport const getVisualizationConfig = (\n    visualization,\n    originalType,\n    activeType\n) => {\n    if (originalType === MAP && originalType !== activeType) {\n        const extractedMapView = extractMapView(visualization);\n\n        if (extractedMapView === undefined) {\n            return null;\n        }\n\n        return getWithoutId({\n            ...visualization,\n            ...extractedMapView,\n            mapViews: undefined,\n            type: activeType === CHART ? VIS_TYPE_COLUMN : VIS_TYPE_PIVOT_TABLE,\n        });\n    } else if (originalType === REPORT_TABLE && activeType === CHART) {\n        return getWithoutId({ ...visualization, type: VIS_TYPE_COLUMN });\n    } else if (originalType === CHART && activeType === REPORT_TABLE) {\n        return getWithoutId({\n            ...visualization,\n            type: VIS_TYPE_PIVOT_TABLE,\n        });\n    }\n\n    return getWithoutId(visualization);\n};\n","import isFunction from 'd2-utilizr/lib/isFunction';\n\nimport { orObject } from '../../modules/util';\n\n// Dimensions for the react-grid-layout\n\nexport const GRID_COMPACT_TYPE = 'vertical'; // vertical | horizonal | null\nexport const GRID_ROW_HEIGHT = 10;\nconst GRID_COLUMN_WIDTH_PX = 20;\nconst GRID_LAYOUT = 'FLEXIBLE'; // FIXED | FLEXIBLE\nexport const MARGIN = [10, 10];\n\nexport const NEW_ITEM_SHAPE = { x: 0, y: 0, w: 20, h: 29 };\n\n// Dimensions for getShape\n\nconst NUMBER_OF_ITEM_COLS = 2;\nconst GRID_COLUMNS = 60;\n\nexport const getGridColumns = () => {\n    switch (GRID_LAYOUT) {\n        case 'FLEXIBLE':\n            return GRID_COLUMNS;\n        case 'FIXED':\n            return Math.floor((window.innerWidth - 20) / GRID_COLUMN_WIDTH_PX);\n        default:\n            return GRID_COLUMNS;\n    }\n};\n\n// isNonNegativeInteger\n\nconst isNonNegativeInteger = x => Number.isInteger(x) && x >= 0;\n\n// Does the item have all the shape properties?\n\nexport const hasShape = item =>\n    isNonNegativeInteger(item.x) &&\n    isNonNegativeInteger(item.y) &&\n    isNonNegativeInteger(item.w) &&\n    isNonNegativeInteger(item.h);\n\n// returns a rectangular grid block dimensioned with x, y, w, h in grid units.\n// based on a grid with 3 items across\nexport const getShape = i => {\n    if (!isNonNegativeInteger(i)) {\n        throw new Error('Invalid grid block number');\n    }\n\n    const col = i % NUMBER_OF_ITEM_COLS;\n    const row = Math.floor(i / NUMBER_OF_ITEM_COLS);\n    const itemWidth = Math.floor((GRID_COLUMNS - 1) / NUMBER_OF_ITEM_COLS);\n    const itemHeight = GRID_ROW_HEIGHT * 2;\n\n    return {\n        x: col * itemWidth,\n        y: row * itemHeight,\n        w: itemWidth,\n        h: itemHeight,\n    };\n};\n\nexport const getGridItemProperties = itemId => {\n    return {\n        i: itemId,\n        minH: 4, // minimum height for item\n    };\n};\n\n/**\n * Calculates the grid item's original height in pixels based\n * on the height in grid units. This calculation\n * is copied directly from react-grid-layout GridItem.js (calcPosition)\n *\n * @param {Object} item item containing shape (x, y, w, h)\n */\nconst getOriginalHeight = item => {\n    const originalHeight = Math.round(\n        GRID_ROW_HEIGHT * item.h + Math.max(0, item.h - 1) * MARGIN[1]\n    );\n\n    return { originalHeight };\n};\n\n/**\n * Returns an array of items containing the x, y, w, h dimensions\n * and the item's originalheight in pixels\n * @function\n * @param {Array} items\n * @returns {Array}\n */\n\nexport const withShape = items =>\n    items.map((item, index) => {\n        const itemWithShape = hasShape(item)\n            ? item\n            : Object.assign({}, item, getShape(index));\n\n        return Object.assign(\n            {},\n            itemWithShape,\n            getOriginalHeight(itemWithShape)\n        );\n    });\n\nexport const getGridItemDomId = id => `item-${id}`;\n\nexport function onItemResize(id) {\n    const el = orObject(document.querySelector(`#${getGridItemDomId(id)}`));\n    if (isFunction(el.setViewportSize))\n        setTimeout(\n            () => el.setViewportSize(el.clientWidth - 5, el.clientHeight - 5),\n            10\n        );\n}\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"showMoreButton\":\"CategorizedMenuGroup_showMoreButton__3-0Wa\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"deleteItemButton\":\"DeleteItemButton_deleteItemButton__4YLrM\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"center\":\"LoadingMask_center__GnxG9\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"bar\":\"FilterBar_bar__2mF3Z\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"content\":\"ConfirmDeleteDialog_content__1IFNx\"};"],"sourceRoot":""}
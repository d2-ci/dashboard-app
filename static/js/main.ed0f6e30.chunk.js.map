{"version":3,"sources":["components/ItemSelector/styles/CategorizedMenuGroup.module.css","modules/itemTypes.js","api/metadata.js","components/Item/ListItem/Item.module.css","components/ControlBar/styles/DashboardsBar.module.css","components/ItemSelector/styles/ContentMenuItem.module.css","reducers/user.js","reducers/dashboards.js","reducers/selected.js","reducers/visualizations.js","actions/visualizations.js","api/index.js","api/dashboards.js","reducers/messages.js","api/messages.js","reducers/snackbar.js","actions/snackbar.js","components/SnackbarMessage/SnackbarMessage.js","actions/selected.js","api/localStorage.js","components/Item/MessagesItem/actions.js","reducers/editDashboard.js","reducers/editItemFilters.js","reducers/itemFilters.js","actions/itemFilters.js","actions/editItemFilters.js","api/editDashboard.js","actions/editDashboard.js","actions/dashboards.js","reducers/controlBar.js","api/controlBar.js","actions/controlBar.js","reducers/dimensions.js","reducers/settings.js","actions/dimensions.js","components/ControlBar/ShowMoreButton.js","components/ControlBar/controlBarDimensions.js","components/ControlBar/ControlBar.js","icons/Star.js","api/dataStatistics.js","components/ControlBar/DashboardItemChip.js","icons/AddCircle.js","icons/Clear.js","components/ControlBar/ClearButton.js","reducers/dashboardsFilter.js","components/ControlBar/Filter.js","components/ControlBar/DashboardsBar.js","actions/dashboardsFilter.js","components/Dashboard/DashboardVerticalOffset.js","components/ItemSelector/HeaderMenuItem.js","icons/Launch.js","components/ItemSelector/ContentMenuItem.js","components/ItemSelector/selectableItems.js","components/ItemSelector/CategorizedMenuGroup.js","components/ItemSelector/actions.js","components/ItemSelector/SinglesMenuGroup.js","components/ItemSelector/ItemSelector.js","components/TitleBar/EditTitleBar.js","components/ItemFilter/FilterDialog.js","reducers/activeModalDimension.js","actions/activeModalDimension.js","components/ItemFilter/FilterSelector.js","components/TitleBar/Info.js","components/TitleBar/ViewTitleBar.js","components/TitleBar/TitleBar.js","components/Item/VisualizationItem/DefaultPlugin.js","components/Item/ItemHeader.js","components/Item/VisualizationItem/ItemFooter.js","components/Item/ItemHeaderButton.js","components/Item/VisualizationItem/ItemHeaderButtons.js","modules/memoizeOne.js","components/Item/VisualizationItem/Item.js","widgets/Line.js","components/Item/MessagesItem/Item.js","components/Item/NotSupportedItem/Item.js","icons/Description.js","icons/Delete.js","components/Item/ListItem/Item.js","components/Item/ListItem/actions.js","components/Item/TextItem/Item.js","components/Item/AppItem/Item.js","components/Item/SpacerItem/Item.js","components/Item/Item.js","components/ItemGrid/DeleteItemButton.js","widgets/NoContentMessage.js","components/Item/ProgressiveLoadingContainer.js","components/ItemGrid/ItemGrid.js","components/FilterBar/FilterBadge.js","components/FilterBar/FilterBar.js","components/Dashboard/DashboardContent.js","components/Dashboard/ViewDashboard.js","components/ControlBar/ConfirmDeleteDialog.js","components/ControlBar/EditBar.js","components/Dashboard/EditDashboard.js","components/Dashboard/NewDashboard.js","components/Dashboard/Dashboard.js","components/Dashboard/dashboardModes.js","components/App.js","actions/user.js","locales/index.js","reducers/style.js","reducers/index.js","configureStore.js","index.js","modules/util.js","components/ControlBar/styles/ControlBar.module.css","components/ControlBar/styles/ClearButton.module.css","components/Item/VisualizationItem/plugin.js","components/ItemGrid/gridUtil.js"],"names":["module","exports","showMoreButton","VISUALIZATION","REPORT_TABLE","CHART","MAP","EVENT_REPORT","EVENT_CHART","APP","REPORTS","RESOURCES","USERS","MESSAGES","TEXT","SPACER","spacerContent","emptyTextItemContent","isSpacerType","item","type","text","isTextType","isVisualizationType","itemTypeMap","hasMapView","itemType","domainType","isTrackerDomainType","_itemTypeMap","Object","_home_travis_build_dhis2_dashboards_app_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_defineProperty__WEBPACK_IMPORTED_MODULE_0__","id","endPointName","propName","pluralTitle","i18n","t","appUrl","concat","appName","getEndPointName","getItemUrl","d2","url","launchUrl","getBaseUrl","getItemIcon","TableIcon","ChartIcon","MapIcon","ExtensionIcon","DescriptionIcon","PersonIcon","FontDownloadIcon","EmailIcon","CropFreeIcon","NotInterestedIcon","getIdNameFields","rename","arguments","length","undefined","getDimensionFields","_ref2","withItems","arrayClean","join","getAxesFields","_ref3","getFavoriteFields","_ref4","withDimensions","withOptions","getFavoritesFields","_ref5","_home_travis_build_dhis2_dashboards_app_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_toConsumableArray__WEBPACK_IMPORTED_MODULE_0__","getListItemFields","getMapFields","apiFetchFavorite","_ref6","fields","getInstance","then","Api","getApi","get","list","itemicon","link","deleteicon","deletebutton","leftControls","rightControls","menuItem","launchLink","label","buttonInsert","DEFAULT_STATE_USER","username","uiLocale","isSuperuser","sGetUserUsername","state","user","DEFAULT_STATE_DASHBOARDS","byId","items","updateDashboardProp","_ref","dashboardId","prop","value","objectSpread","defineProperty","sGetDashboardsRoot","dashboards","sGetDashboardById","orObject","sDashboardsIsFetching","sGetAllDashboards","sGetDashboardItems","sGetStarredDashboards","values","filter","dashboard","starred","sGetUnstarredDashboards","sGetDashboardsSortedByStarred","toConsumableArray","arraySort","getCustomDashboards","data","arrayFrom","map","d","name","displayName","description","displayDescription","favorite","owner","created","split","substr","lastUpdated","access","numberOfItems","orArray","dashboardItems","reportTable","chart","combineReducers","action","validateReducer","isLoading","showDescription","sGetSelectedRoot","selected","sGetSelectedId","sGetSelectedIsLoading","sGetSelectedShowDescription","DEFAULT_STATE_VISUALIZATIONS","isEmpty","p","sGetVisualization","visualizations","sGetVisualizationsRoot","acAddVisualization","onError","error","console","log","getDashboardItemsFields","withFavorite","getDashboardFields","apiFetchDashboard","models","catch","apiStarDashboard","isStarred","post","delete","apiDeleteDashboard","sGetMessagesRoot","messages","getMessages","DEFAULT_STATE_SNACKBAR","message","duration","open","acCloseSnackbar","loadingDashboardMsg","SnackbarMessageContent","react_default","a","createElement","style","fontWeight","connect","_sGetSnackbar","snackbar","sGetSnackbar","snackbarOpen","snackbarMessage","snackbarDuration","onCloseSnackbar","props","Snackbar_default","zIndex","SnackbarMessage_SnackbarMessageContent","autoHideDuration","onClose","acSetSelectedId","acSetSelectedIsLoading","tLoadDashboard","asyncToGenerator","regenerator_default","mark","_callee","dispatch","dash","wrap","_context","prev","next","sent","acAppendDashboards","abrupt","Promise","resolve","t0","stop","_x","apply","this","tSetSelectedDashboardById","_callee2","getState","snackbarTimeout","onSuccess","_context2","setTimeout","dashboardName","customDashboard","acSetDashboardItems","withShape","localStorage","setItem","forEach","extractFavorite","messageConversations","clearTimeout","_x2","_x3","DEFAULT_STATE_EDIT_DASHBOARD","NEW_DASHBOARD_STATE","sGetEditDashboardRoot","editDashboard","sGetIsEditing","sGetEditDashboardItems","DEFAULT_STATE_EDIT_ITEM_FILTERS","sGetEditItemFiltersRoot","editItemFilters","DEFAULT_STATE_ITEM_FILTERS","sGetItemFiltersRoot","itemFilters","sGetFiltersKeys","keys","acRemoveItemFilter","acRemoveEditItemFilter","saveDashboard","assign","width","w","height","h","save","msg","response","uid","updateDashboard","postDashboard","create","acAddDashboardItem","itemPropName","generateUid","content","NEW_ITEM_SHAPE","acUpdateDashboardItem","acRemoveDashboardItem","arrayToIdMap","acSetDashboardStarred","tFetchDashboards","collection","paging","toArray","userRows","sGetControlBarUserRows","controlBar","sGetControlBarRoot","KEY","hasNamespace","currentUser","dataStore","has","getNamespace","apiGetControlBarRows","_callee3","namespace","_context3","t1","t2","find","key","apiPostControlBarRows","_callee4","rows","_context4","set","_x4","_x5","acSetControlBarUserRows","DEFAULT_DIMENSIONS","getDimensionById","DIMENSION_ID_PERIOD","DIMENSION_ID_ORGUNIT","sGetDimensions","dimensions","DEFAULT_SETTINGS","keyDateFormat","keyAnalysisRelativePeriod","keyAnalysisDigitGroupSeparator","displayNameProperty","rootOrganisationUnit","sGetSettings","settings","sGetSettingsDisplayNameProperty","acSetDimensions","styles","showMore","color","colors","grey700","cursor","fontSize","paddingTop","&:hover","textDecoration","disabled","grey500","withStyles","onClick","isMaxHeight","classes","textAlign","className","MIN_ROW_COUNT","getRowsHeight","getNumRowsFromHeight","Math","floor","FIRST_ROW_PADDING_HEIGHT","getTopOffset","getControlBarHeight","ControlBar","_this","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","onStartDrag","setState","dragging","window","addEventListener","onDrag","onEndDrag","event","preventDefault","stopPropagation","newHeight","clientY","onChangeHeight","requestAnimationFrame","removeEventListener","draghandle","onMouseDown","max","rootStyle","top","backgroundColor","editMode","yellow050","white","paddingBottom","transition","root","children","renderDragHandle","React","Component","defaultProps","StarIcon","xmlns","viewBox","fill","apiPostDataStatistics","eventType","chip","margin","grey600","display","verticalAlign","icon","marginTop","unselected","chipProps","selectedState","Star","Link","to","debounce","lib","AddCircleIcon","teal600","ClearIcon","grey800","ClearButton","onClear","button","Clear","ownerData","DEFAULT_STATE_DASHBOARDS_FILTER_NAME","DEFAULT_STATE_DASHBOARDS_FILTER_OWNER","order","sGetDashboardsFilterRoot","dashboardsFilter","sGetFilterName","KEYCODE_ENTER","KEYCODE_ESCAPE","filterField","searchIcon","Filter","_Component","setFilterValue","onChangeName","target","handleKeyUp","keyCode","onKeypressEnter","inherits","createClass","nextProps","_this$props","startAdornment","InputAdornment_default","position","Search_default","endAdornment","ControlBar_ClearButton","Input_default","placeholder","onChange","onKeyUp","Function","prototype","MAX_ROW_COUNT","DashboardsBar","_getPrototypeOf2","_len","args","Array","_key","setInitialDashboardState","adjustedHeight","newRows","newRowCount","min","onToggleMaxHeight","onSelectDashboard","history","push","selectedId","onChangeFilterName","rowCount","controlBarHeight","contentWrapperStyle","padding","overflowY","components_ControlBar_ControlBar","marginRight","AddCircle","ControlBar_Filter","ControlBar_DashboardItemChip","ControlBar_ShowMoreButton","mapDispatchToProps","withRouter","stateProps","dispatchProps","ownProps","displayDashboards","toLowerCase","includes","HeaderMenuItem","title","dense","LaunchIcon","LaunchLink","e","rel","href","Launch","InsertButton","ContentMenuItem","onInsert","ItemIcon","ContentMenuItem_LaunchLink","ContentMenuItem_InsertButton","singleItems","header","categorizedItems","listItemTypes","CategorizedMenuGroup","addItem","tAddListItemContent","newItem","toggleSeeMore","seeMore","onChangeItemsLimit","_this2","_this$props2","hasMore","react","ItemSelector_HeaderMenuItem","itemUrl","context","ItemSelector_ContentMenuItem","contextTypes","PropTypes","object","isRequired","dashboardItem","listItemType","dashboardItemIndex","findIndex","category","addToDashboard","ItemSearchField","onFocus","ItemSelector","closeList","openList","_","fetchItems","anchorEl","currentTarget","setFilter","getCategorizedMenuGroups","allItems","maxOptions","slice","ItemSelector_CategorizedMenuGroup","getSinglesMenuGroups","ItemSelector_SinglesMenuGroup","getMenuGroups","queryString","add","Set","ItemSelector_ItemSearchField","Popover_default","anchorOrigin","horizontal","vertical","transformOrigin","PaperProps","disableAutoFocus","disableRestoreFocus","EditTitleBar","onChangeTitle","onChangeDescription","section","titleDescription","itemSelector","components_ItemSelector_ItemSelector","selectedDashboard","justifyContent","flex","clear","underline","&::before","borderBottom","&:hover::before","input","borderRadius","peId","ouId","FilterDialog","onConfirm","dimension","selectedItems","dialogId","commonProps","onSelect","onDeselect","onReorder","build","selectedPeriods","ouItems","dialogTitle","Dialog_default","maxWidth","disableEnforceFocus","dialogContent","DialogActions_default","kind","DEFAULT_STATE_ACTIVE_MODAL_DIMENSION","sGetActiveModalDimension","activeModalDimension","acSetActiveModalDimension","FilterSelector","openPanel","closePanel","closeDialog","clearActiveModalDimension","selectDimension","setActiveModalDimension","onSelectItems","dimensionId","setEditItemFilters","onDeselectItems","itemIdsToRemove","newList","removeEditItemFilter","onReorderItems","itemIds","oldList","reorderedList","saveFilter","filterItems","addItemFilter","removeItemFilter","theme","selectedDimensions","ArrowDropDown_default","Boolean","fontFamily","typography","onDimensionClick","selectedIds","ItemFilter_FilterDialog","filters","withTheme","Info","show","toggle","InfoOutlined_default","NO_DESCRIPTION","actions","alignItems","marginLeft","starIcon","textButton","minWidth","editLink","titleBar","titleBarIcon","ViewTitleBar","toggleSharingDialog","sharingDialogIsOpen","onStarClick","onInfoClick","titleStyle","userSelect","StarBorder","TitleBar_Info","update","manage","ItemFilter_FilterSelector","d2_ui_sharing_dialog_default","onRequestClose","tStarDashboard","black","TitleBar","edit","TitleBar_EditTitleBar","TitleBar_ViewTitleBar","DefaultPlugin","pluginCredentials","shouldPluginReload","prevProps","reloadAllowed","filtersChanged","vis","visualization","prevVis","visChanged","activeType","reloadPlugin","pluginManager","currentVis","useActiveType","credentials","getActiveType","baseUrl","auth","defaultHeaders","Authorization","getGridItemDomId","textDiv","HEADER_HEIGHT","ItemHeader","actionButtons","scrollContainer","line","border","grey100","ItemFooter","objectId","getId","d2_ui_interpretations_default","ItemHeaderButton","iconBase","buttonBase","buttonDisabled","opacity","toggleFooterPadding","grey200","baseStyle","container","disabledStyle","activeStyle","primary800","primary100","inactiveStyle","VisualizationItemHeaderButtons","activeFooter","onToggleFooter","toggleFooterBase","toggleFooter","components_Item_ItemHeaderButton","Message_default","onSelectActiveType","isSingleValue","match","tableButtonStyle","tableBtnStyle","chartButtonStyle","chartBtnStyle","mapButtonStyle","mapBtnStyle","ViewList_default","InsertChart_default","Public_default","renderInterpretationButton","renderVisualizationButtons","memoizeOne","fn","lastArgs","lastValue","every","arg","i","overflow","textOverflow","whiteSpace","fontStretch","lineHeight","applyFilters","visRows","obj","visColumns","columns","visFilters","dimensionFound","dimensionObjects","Item","showFooter","configLoaded","getUniqueKey","uniqueId","getPluginComponent","getVisualizationConfig","getContentStyle","es_lib","forDashboard","mapViews","layer","VisualizationItem_DefaultPlugin","onToggleItemExpanded","pluginIsAvailable","getTitle","itemName","Launch_default","getActionButtons","ItemHeaderButtons","contentRef","offsetHeight","originalHeight","createRef","_componentDidMount","onVisualizationLoaded","_this$props3","Item_ItemHeader","ref","VisualizationItem_ItemFooter","acSetActiveVisualizationType","Line","PRIVATE","messageTypes","_messageTypes","listStyleType","paddingLeft","seeAll","marginBottom","sender","snippet","maxHeight","MessagesItem","getMessageHref","msgIdentifier","messageType","getMessageSender","latestMsg","getMessageItems","editClass","readClass","read","msgDate","document","location","messageCount","formatDate","userSettings","widgets_Line","string","MessagesContainer","NotSupportedItem","NotInterested_default","align","DeleteIcon","red500","getItemTitle","ListItem","tRemoveListItemContent","contentItems","index","array","el","getContentItems","contentItem","Description","deleteButton","Delete","grey900","getLink","newContent","textField","onChangeText","updatedItem","d2_ui_rich_text","onEdit","multiline","fullWidth","textDivStyle","viewItem","getIframeSrc","appDetails","iframeSrc","ouIds","ouPath","AppItem","appKey","system","installedApps","app","src","SpacerItem","GridItem","VisualizationItem","TextItem","getGridItem","right","DeleteItemHeaderButton","Delete_default","NoContentMessage","ProgressiveLoadingContainer","shouldLoad","containerRef","shouldLoadHandler","bufferPx","bufferFactor","innerHeight","rect","getBoundingClientRect","bottom","removeHandler","checkShouldLoad","debounceMs","registerHandler","_this3","objectWithoutProperties","eventProps","pick","ItemGrid","expandedItems","clickedId","isExpanded","onRemoveItem","onLayoutChange","newLayout","acUpdateDashboardLayout","onResizeStop","layout","oldItem","onItemResize","pluginResize","onRemoveItemWrapper","widgets_NoContentMessage","expandedItem","hProp","minH","ITEM_MIN_HEIGHT","react_grid_layout_default","MARGIN","cols","getGridColumns","rowHeight","GRID_ROW_HEIGHT","innerWidth","compactType","GRID_COMPACT_TYPE","isDraggable","isResizable","draggableCancel","itemClassNames","Item_ProgressiveLoadingContainer","DeleteItemButton","Item_Item_Item","validItems","hasShape","badgeContainer","badge","badgeRemove","FilterBadge","onRemove","count","FilterBar","onBadgeRemove","onBadgeClick","bar","FilterBar_FilterBadge","removeItemFIlter","filtersSelector","createSelector","reduce","arr","flexWrap","DashboardContent","components_TitleBar_TitleBar","components_FilterBar_FilterBar","components_ItemGrid_ItemGrid","Content","hasDashboardContent","dashboardsIsEmpty","Dashboard_DashboardContent","dashboardsLoaded","contentNotReady","ControlBar_DashboardsBar","Dashboard_DashboardVerticalOffset","ViewDashboard_Content","ConfirmDeleteDialog","onDeleteConfirmed","onContinueEditing","secondary","destructive","DialogTitle_default","DialogContent_default","DialogContentText_default","buttonBarStyle","EditBar","translationDialogIsOpen","dashboardModel","confirmDeleteDialogOpen","redirectUrl","onConfirmDelete","onSave","newId","onDiscard","onDiscardChanges","onDelete","onTranslationsSaved","translations","dbLocale","translation","locale","property","onTranslate","fetchDashboardModel","toggleTranslationDialog","confirmDeleteDialog","deleteAccess","ControlBar_ConfirmDeleteDialog","translationDialog","d2_ui_translation_dialog_default","objectToTranslate","fieldsToTranslate","onTranslationSaved","onTranslationError","err","Redirect","updateAccess","discardBtnText","primary","sGetIsNewDashboard","dashboardToSave","tDeleteDashboard","acSetDashboardDisplayName","EditDashboard","initialized","initEditDashboard","setEditDashboard","getDashboardContent","EditDashboard_Content","ControlBar_EditBar","NewDashboard","setNewDashboard","Dashboard","setDashboard","params","selectDashboard","scrollToTop","scrollTo","mode","Dashboard_EditDashboard","Dashboard_NewDashboard","Dashboard_ViewDashboard","dashboardToSelect","preferredId","getItem","App","setCurrentUser","fetchDashboards","setControlBarRows","setDimensions","HeaderBar","HashRouter","Switch","Route","exact","path","render","components_Dashboard_Dashboard","components_SnackbarMessage_SnackbarMessage","childContextTypes","controlBarRows","displayNameProp","filteredDimensions","apiFetchDimensions","dim","dimensionType","dataDimensionType","tSetDimensions","moment","addResources","arTranslations","daTranslations","enTranslations","esTranslations","frTranslations","idTranslations","kmTranslations","loTranslations","myTranslations","prsTranslations","psTranslations","ptTranslations","pt_BRTranslations","ruTranslations","svTranslations","tetTranslations","tgTranslations","ukTranslations","urTranslations","viTranslations","zhTranslations","zh_CNTranslations","setDefaultNamespace","changeLanguage","objectClean","conversations","$merge","d2Object","keyUiLocale","authorities","newState","k","$unshift","idToRemove","$splice","stateItems","newStateItems","x","y","stateItem","si","$set","configureStore","middleware","thunk","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","createStore","reducer","applyMiddleware","configI18n","config","sources","manifest","isProd","getManifest","info","version","manifest_generated_at","process","activities","dhis","dhis2","apiVersion","headers","schemas","getUserSettings","d2Init","initializedD2","ReactDOM","build_es","es","store","createMuiTheme","dhis2theme","src_components_App","getElementById","init","param","isArray","isObject","global","Intl","DateTimeFormat","year","month","day","format","Date","replace","defaultValue","api","idx","indexOf","getWithoutId","_home_travis_build_dhis2_dashboards_app_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectSpread__WEBPACK_IMPORTED_MODULE_0__","itemTypeToExternalPlugin","_itemTypeToExternalPl","_home_travis_build_dhis2_dashboards_app_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_defineProperty__WEBPACK_IMPORTED_MODULE_3__","getPlugin","hasIntegratedPlugin","eventReport","eventChart","loadPlugin","plugin","load","loadingIndicator","getName","_home_travis_build_dhis2_dashboards_app_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_asyncToGenerator__WEBPACK_IMPORTED_MODULE_2__","_home_travis_build_dhis2_dashboards_app_node_modules_babel_preset_react_app_node_modules_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default","_home_travis_build_dhis2_dashboards_app_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectSpread__WEBPACK_IMPORTED_MODULE_1__","fetch","fetchedFavorite","resize","unmount","originalType","extractedMapView","mv","VIS_TYPE_COLUMN","VIS_TYPE_PIVOT_TABLE","__webpack_require__","__webpack_exports__","d2_utilizr_lib_isFunction__WEBPACK_IMPORTED_MODULE_0__","d2_utilizr_lib_isFunction__WEBPACK_IMPORTED_MODULE_0___default","n","_modules_util__WEBPACK_IMPORTED_MODULE_1__","isNonNegativeInteger","Number","isInteger","itemWithShape","Error","col","row","itemWidth","itemHeight","getShape","round","getOriginalHeight","querySelector","isFunction","setViewportSize","clientWidth","clientHeight"],"mappings":"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","file":"static/js/main.ed0f6e30.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"showMoreButton\":\"CategorizedMenuGroup_showMoreButton__3-0Wa\"};","import i18n from '@dhis2/d2-i18n';\nimport TableIcon from '@material-ui/icons/ViewList';\nimport ChartIcon from '@material-ui/icons/InsertChart';\nimport MapIcon from '@material-ui/icons/Public';\nimport ExtensionIcon from '@material-ui/icons/Extension';\nimport DescriptionIcon from '@material-ui/icons/Description';\nimport PersonIcon from '@material-ui/icons/Person';\nimport FontDownloadIcon from '@material-ui/icons/FontDownload';\nimport EmailIcon from '@material-ui/icons/Email';\nimport CropFreeIcon from '@material-ui/icons/CropFree';\nimport NotInterestedIcon from '@material-ui/icons/NotInterested';\n\nimport { getBaseUrl } from './util';\n\n// Item types\nexport const VISUALIZATION = 'VISUALIZATION';\nexport const REPORT_TABLE = 'REPORT_TABLE';\nexport const CHART = 'CHART';\nexport const MAP = 'MAP';\nexport const EVENT_REPORT = 'EVENT_REPORT';\nexport const EVENT_CHART = 'EVENT_CHART';\nexport const APP = 'APP';\nexport const REPORTS = 'REPORTS';\nexport const RESOURCES = 'RESOURCES';\nexport const USERS = 'USERS';\nexport const MESSAGES = 'MESSAGES';\nexport const TEXT = 'TEXT';\nexport const SPACER = 'SPACER';\n\nconst DOMAIN_TYPE_AGGREGATE = 'AGGREGATE';\nconst DOMAIN_TYPE_TRACKER = 'TRACKER';\n\n// Dashboard helpers\nexport const spacerContent = 'SPACER_ITEM_FOR_DASHBOARD_LAYOUT_CONVENIENCE';\nexport const emptyTextItemContent = 'TEXT_ITEM_WITH_NO_CONTENT';\nexport const isSpacerType = item =>\n    item.type === TEXT && item.text === spacerContent;\nexport const isTextType = item =>\n    item.type === TEXT && item.text !== spacerContent;\nexport const isVisualizationType = item =>\n    !!itemTypeMap[item.type].isVisualizationType;\n\nexport const hasMapView = itemType =>\n    itemTypeMap[itemType].domainType === DOMAIN_TYPE_AGGREGATE;\n\nexport const isTrackerDomainType = itemType =>\n    itemTypeMap[itemType].domainType === DOMAIN_TYPE_TRACKER;\n\n// Item type map\nexport const itemTypeMap = {\n    [REPORT_TABLE]: {\n        id: REPORT_TABLE,\n        endPointName: 'reportTables',\n        propName: 'reportTable',\n        pluralTitle: i18n.t('Pivot tables'),\n        domainType: DOMAIN_TYPE_AGGREGATE,\n        isVisualizationType: true,\n        appUrl: id => `dhis-web-data-visualizer/#/${id}`,\n        appName: i18n.t('Visualizer'),\n    },\n    [CHART]: {\n        id: CHART,\n        endPointName: 'charts',\n        propName: 'chart',\n        pluralTitle: i18n.t('Charts'),\n        domainType: DOMAIN_TYPE_AGGREGATE,\n        isVisualizationType: true,\n        appUrl: id => `dhis-web-data-visualizer/#/${id}`,\n        appName: i18n.t('Visualizer'),\n    },\n    [MAP]: {\n        id: MAP,\n        endPointName: 'maps',\n        propName: 'map',\n        pluralTitle: i18n.t('Maps'),\n        domainType: DOMAIN_TYPE_AGGREGATE,\n        isVisualizationType: true,\n        appUrl: id => `dhis-web-maps/?id=${id}`,\n        appName: i18n.t('Maps'),\n    },\n    [EVENT_REPORT]: {\n        id: EVENT_REPORT,\n        endPointName: 'eventReports',\n        propName: 'eventReport',\n        pluralTitle: i18n.t('Event reports'),\n        domainType: DOMAIN_TYPE_TRACKER,\n        isVisualizationType: true,\n        appUrl: id => `dhis-web-event-reports/?id=${id}`,\n        appName: i18n.t('Event Reports'),\n    },\n    [EVENT_CHART]: {\n        id: EVENT_CHART,\n        endPointName: 'eventCharts',\n        propName: 'eventChart',\n        pluralTitle: i18n.t('Event charts'),\n        domainType: DOMAIN_TYPE_TRACKER,\n        isVisualizationType: true,\n        appUrl: id => `dhis-web-event-visualizer/?id=${id}`,\n        appName: i18n.t('Event Visualizer'),\n    },\n    [APP]: {\n        endPointName: 'apps',\n        propName: 'appKey',\n        pluralTitle: i18n.t('Apps'),\n    },\n    [REPORTS]: {\n        id: REPORTS,\n        endPointName: 'reports',\n        propName: 'reports',\n        pluralTitle: i18n.t('Reports'),\n        appUrl: id =>\n            `dhis-web-reporting/getReportParams.action?mode=report&uid=${id}`,\n    },\n    [RESOURCES]: {\n        id: RESOURCES,\n        endPointName: 'resources',\n        propName: 'resources',\n        pluralTitle: i18n.t('Resources'),\n        appUrl: id => `api/documents/${id}/data`,\n    },\n    [USERS]: {\n        id: USERS,\n        endPointName: 'users',\n        propName: 'users',\n        pluralTitle: i18n.t('Users'),\n        appUrl: id => `dhis-web-dashboard-integration/profile.action?id=${id}`,\n    },\n    [TEXT]: {\n        id: TEXT,\n        propName: 'text',\n    },\n    [MESSAGES]: {\n        propName: 'messages',\n    },\n    [SPACER]: {\n        propName: 'text',\n    },\n};\n\nexport const getEndPointName = type => itemTypeMap[type].endPointName;\n\nexport const getItemUrl = (type, item, d2) => {\n    let url;\n\n    if (type === APP) {\n        url = item.launchUrl;\n    }\n\n    if (itemTypeMap[type] && itemTypeMap[type].appUrl) {\n        url = `${getBaseUrl(d2)}/${itemTypeMap[type].appUrl(item.id)}`;\n    }\n\n    return url;\n};\n\nexport const getItemIcon = type => {\n    switch (type) {\n        case REPORT_TABLE:\n        case EVENT_REPORT:\n        case REPORTS:\n            return TableIcon;\n        case CHART:\n        case EVENT_CHART:\n            return ChartIcon;\n        case MAP:\n            return MapIcon;\n        case APP:\n            return ExtensionIcon;\n        case RESOURCES:\n            return DescriptionIcon;\n        case USERS:\n            return PersonIcon;\n        case TEXT:\n            return FontDownloadIcon;\n        case MESSAGES:\n            return EmailIcon;\n        case SPACER:\n            return CropFreeIcon;\n        default:\n            return NotInterestedIcon;\n    }\n};\n","import { getInstance } from 'd2';\nimport arrayClean from 'd2-utilizr/lib/arrayClean';\n\nimport { getEndPointName } from '../modules/itemTypes';\n\n// Id, name\nexport const getIdNameFields = ({ rename } = {}) => [\n    'id',\n    `${rename ? 'displayName~rename(name)' : 'name,displayName'}`,\n];\n\n// Item\nexport const getItemFields = () => [\n    'dimensionItem~rename(id)',\n    'displayName~rename(name)',\n    'dimensionItemType',\n];\n\n// Dimension\nexport const getDimensionFields = ({ withItems }) =>\n    arrayClean([\n        'dimension',\n        'legendSet[id]',\n        'filter',\n        'programStage',\n        withItems ? `items[${getItemFields().join(',')}]` : ``,\n    ]);\n\n// Axis\nexport const getAxesFields = ({ withItems }) => [\n    `columns[${getDimensionFields({ withItems }).join(',')}]`,\n    `rows[${getDimensionFields({ withItems }).join(',')}]`,\n    `filters[${getDimensionFields({ withItems }).join(',')}]`,\n];\n\n// Favorite\nexport const getFavoriteFields = ({ withDimensions, withOptions }) => {\n    return arrayClean([\n        `${getIdNameFields({ rename: true }).join(',')}`,\n        'displayDescription~rename(description)',\n        withDimensions ? `${getAxesFields({ withItems: true }).join(',')}` : ``,\n        withOptions\n            ? [\n                  '*',\n                  '!attributeDimensions',\n                  '!attributeValues',\n                  '!category',\n                  '!categoryDimensions',\n                  '!categoryOptionGroupSetDimensions',\n                  '!columnDimensions',\n                  '!dataDimensionItems',\n                  '!dataElementDimensions',\n                  '!dataElementGroupSetDimensions',\n                  '!filterDimensions',\n                  '!itemOrganisationUnitGroups',\n                  '!lastUpdatedBy',\n                  '!organisationUnitGroupSetDimensions',\n                  '!organisationUnitLevels',\n                  '!organisationUnits',\n                  '!programIndicatorDimensions',\n                  '!relativePeriods',\n                  '!reportParams',\n                  '!rowDimensions',\n                  '!series',\n                  '!translations',\n                  '!userOrganisationUnit',\n                  '!userOrganisationUnitChildren',\n                  '!userOrganisationUnitGrandChildren',\n              ].join(',')\n            : '',\n    ]);\n};\n\nexport const getFavoritesFields = ({ withDimensions }) => [\n    `reportTable[${getFavoriteFields({ withDimensions }).join(',')}]`,\n    `chart[${['type', ...getFavoriteFields({ withDimensions })].join(',')}]`,\n    `map[${getFavoriteFields({ withDimensions }).join(',')}]`,\n    `eventReport[${getFavoriteFields({ withDimensions }).join(',')}]`,\n    `eventChart[${getFavoriteFields({ withDimensions }).join(',')}]`,\n];\n\n// List item\nexport const getListItemFields = () => [\n    `reports[${getIdNameFields({ rename: true }).join(',')}]`,\n    `resources[${getIdNameFields({ rename: true }).join(',')}]`,\n    `users[${getIdNameFields({ rename: true }).join(',')}]`,\n];\n\n// Map\nexport const getMapFields = () => [\n    `${getIdNameFields({ rename: true }).join(',')}`,\n    'user,longitude,latitude,zoom,basemap',\n    `mapViews[${getFavoriteFields({\n        withDimensions: true,\n        withOptions: true,\n    })}]`,\n];\n\n// Api\n\n// Get more info about the favorite of a dashboard item\nexport const apiFetchFavorite = (id, type, { fields }) =>\n    getInstance().then(d2 =>\n        d2.Api.getApi().get(`${getEndPointName(type)}/${id}`, {\n            fields:\n                fields ||\n                getFavoriteFields({\n                    withDimensions: true,\n                    withOptions: true,\n                }),\n        })\n    );\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"Item_list__2oHc1\",\"item\":\"Item_item__lO40M\",\"itemicon\":\"Item_itemicon__dv5ah\",\"link\":\"Item_link__2gULT\",\"deleteicon\":\"Item_deleteicon__3c7bl\",\"deletebutton\":\"Item_deletebutton__1DfY5\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"leftControls\":\"DashboardsBar_leftControls__2kr14\",\"rightControls\":\"DashboardsBar_rightControls__2l1lT\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"menuItem\":\"ContentMenuItem_menuItem__2DIcB\",\"launchLink\":\"ContentMenuItem_launchLink__MRANR\",\"label\":\"ContentMenuItem_label__2pIfq\",\"buttonInsert\":\"ContentMenuItem_buttonInsert__1GlZy\"};","export const RECEIVED_USER = 'RECEIVED_USER';\n\nexport const DEFAULT_STATE_USER = {\n    id: '',\n    username: '',\n    uiLocale: '',\n    isSuperuser: false,\n};\n\nexport default (state = DEFAULT_STATE_USER, action) => {\n    switch (action.type) {\n        case RECEIVED_USER: {\n            return fromD2ToUserObj(action.value);\n        }\n        default:\n            return state;\n    }\n};\n\nfunction fromD2ToUserObj(d2Object) {\n    return {\n        id: d2Object.id,\n        username: d2Object.username,\n        uiLocale: d2Object.settings.keyUiLocale,\n        isSuperuser: d2Object.authorities.has('ALL'),\n    };\n}\n\n// selectors\n\nexport const sGetUserId = state => state.user.id;\nexport const sGetUserUsername = state => state.user.username;\nexport const sGetIsSuperuser = state => state.user.isSuperuser;\nexport const sGetUiLocale = state => state.user.uiLocale;\n","/** @module reducers/dashboards */\n\nimport arrayFrom from 'd2-utilizr/lib/arrayFrom';\nimport arraySort from 'd2-utilizr/lib/arraySort';\n\nimport { orArray, orObject } from '../modules/util';\nimport {\n    SPACER,\n    isSpacerType,\n    isTextType,\n    emptyTextItemContent,\n    REPORT_TABLE,\n    CHART,\n    VISUALIZATION,\n} from '../modules/itemTypes';\n\nexport const SET_DASHBOARDS = 'SET_DASHBOARDS';\nexport const ADD_DASHBOARDS = 'ADD_DASHBOARDS';\nexport const SET_DASHBOARD_STARRED = 'SET_DASHBOARD_STARRED';\nexport const SET_DASHBOARD_DISPLAY_NAME = 'SET_DASHBOARD_DISPLAY_NAME';\nexport const SET_DASHBOARD_ITEMS = 'SET_DASHBOARD_ITEMS';\n\nexport const DEFAULT_STATE_DASHBOARDS = {\n    byId: null,\n    items: [],\n};\n\n// reducer helper functions\n\nconst updateDashboardProp = ({ state, dashboardId, prop, value }) => ({\n    byId: {\n        ...state.byId,\n        [dashboardId]: {\n            ...state.byId[dashboardId],\n            [prop]: value,\n        },\n    },\n    items: state.items,\n});\n\n/**\n * Reducer that computes and returns the new state based on the given action\n * @function\n * @param {Object} state The current state\n * @param {Object} action The action to be evaluated\n * @returns {Object}\n */\nexport default (state = DEFAULT_STATE_DASHBOARDS, action) => {\n    switch (action.type) {\n        case SET_DASHBOARDS: {\n            return {\n                byId: action.value,\n                items: [],\n            };\n        }\n        case ADD_DASHBOARDS: {\n            return {\n                ...state,\n                byId: {\n                    ...state.byId,\n                    ...action.value,\n                },\n            };\n        }\n        case SET_DASHBOARD_STARRED: {\n            return updateDashboardProp({\n                state,\n                dashboardId: action.dashboardId,\n                prop: 'starred',\n                value: action.value,\n            });\n        }\n        case SET_DASHBOARD_DISPLAY_NAME: {\n            return updateDashboardProp({\n                state,\n                dashboardId: action.dashboardId,\n                prop: 'displayName',\n                value: action.value,\n            });\n        }\n        case SET_DASHBOARD_ITEMS: {\n            return {\n                ...state,\n                items: action.value,\n            };\n        }\n        default:\n            return state;\n    }\n};\n\n// root selector\n\nexport const sGetDashboardsRoot = state => state.dashboards;\n\n// selector level 1\n\n/**\n * Selector which returns a dashboard by id from the state object\n * If no matching dashboard is found it returns undefined\n * If dashboards.byId is null, then the dashboards api request\n * has not yet completed. If dashboards.byId is an empty object\n * then the dashboards api request is complete, but no dashboards\n * were returned\n *\n * @function\n * @param {Object} state The current state\n * @param {Number} id The id of the dashboard\n * @returns {Object | undefined}\n */\nexport const sGetDashboardById = (state, id) =>\n    orObject(sGetDashboardsRoot(state).byId)[id];\n\nexport const sDashboardsIsFetching = state => {\n    return sGetDashboardsRoot(state).byId === null;\n};\n\n/**\n * Selector which returns all dashboards (the byId object)\n *\n * @function\n * @param {Object} state The current state\n * @returns {Object | undefined}\n */\nexport const sGetAllDashboards = state =>\n    orObject(sGetDashboardsRoot(state).byId);\n\n/**\n * Selector which returns the current dashboard items\n *\n * @function\n * @param {Object} state The current state\n * @returns {Array}\n */\nexport const sGetDashboardItems = state => sGetDashboardsRoot(state).items;\n\n// selector level 2\n\nexport const sGetStarredDashboards = state =>\n    Object.values(sGetAllDashboards(state)).filter(\n        dashboard => dashboard.starred === true\n    );\n\nexport const sGetUnstarredDashboards = state =>\n    Object.values(sGetAllDashboards(state)).filter(\n        dashboard => dashboard.starred === false\n    );\n\n// selector level 3\n\nexport const sGetStarredDashboardIds = state => {\n    return sGetStarredDashboards(state).map(dashboard => dashboard.id);\n};\n\nexport const sGetUnstarredDashboardIds = state =>\n    sGetUnstarredDashboards(state).map(dashboard => dashboard.id);\n\nexport const sGetDashboardsSortedByStarred = state => [\n    ...arraySort(sGetStarredDashboards(state), 'ASC', 'displayName'),\n    ...arraySort(sGetUnstarredDashboards(state), 'ASC', 'displayName'),\n];\n\n// utils\n\n/**\n * Returns the array of dashboards, customized for ui\n * @function\n * @param {Array} data The original dashboard list\n * @returns {Array}\n */\nexport const getCustomDashboards = data => {\n    const uiItems = items =>\n        items.map(item => {\n            let type = isSpacerType(item) ? SPACER : item.type;\n\n            // TODO: temporary fix before 2.34 epic branch is merged\n            // if \"VISUALIZATION\", reset to \"REPORT_TABLE\" or \"CHART\"\n            if (type === VISUALIZATION) {\n                type = item.reportTable\n                    ? REPORT_TABLE\n                    : item.chart\n                    ? CHART\n                    : type;\n            }\n\n            const text = isTextType(item)\n                ? item.text === emptyTextItemContent\n                    ? ''\n                    : item.text\n                : null;\n\n            return {\n                ...item,\n                ...(text !== null ? { text } : {}),\n                type,\n            };\n        });\n\n    return arrayFrom(data).map(d => ({\n        id: d.id,\n        name: d.name,\n        displayName: d.displayName,\n        description: d.description,\n        displayDescription: d.displayDescription,\n        starred: d.favorite,\n        owner: d.user.name,\n        created: d.created\n            .split('T')\n            .join(' ')\n            .substr(0, 16),\n        lastUpdated: d.lastUpdated\n            .split('T')\n            .join(' ')\n            .substr(0, 16),\n        access: d.access,\n        numberOfItems: orArray(d.dashboardItems).length,\n        dashboardItems: uiItems(d.dashboardItems),\n    }));\n};\n","/** @module reducers/selected */\nimport { combineReducers } from 'redux';\n\nimport { validateReducer } from '../modules/util';\n\nexport const SET_SELECTED_ID = 'SET_SELECTED_ID';\nexport const SET_SELECTED_ISLOADING = 'SET_SELECTED_ISLOADING';\nexport const SET_SELECTED_SHOWDESCRIPTION = 'SET_SELECTED_SHOWDESCRIPTION';\n\nexport const DEFAULT_STATE_SELECTED_ID = null;\nexport const DEFAULT_STATE_SELECTED_ISLOADING = false;\nexport const DEFAULT_STATE_SELECTED_SHOWDESCRIPTION = false;\n\n/**\n * Reducer functions that computes and returns the new state based on the given action\n * @function\n * @param {Object} state The current state\n * @param {Object} action The action to be evaluated\n */\nconst id = (state = DEFAULT_STATE_SELECTED_ID, action) => {\n    switch (action.type) {\n        case SET_SELECTED_ID:\n            return validateReducer(action.value, DEFAULT_STATE_SELECTED_ID);\n        default:\n            return state;\n    }\n};\n\nconst isLoading = (state = DEFAULT_STATE_SELECTED_ISLOADING, action) => {\n    switch (action.type) {\n        case SET_SELECTED_ISLOADING:\n            return validateReducer(\n                action.value,\n                DEFAULT_STATE_SELECTED_ISLOADING\n            );\n        default:\n            return state;\n    }\n};\n\nconst showDescription = (\n    state = DEFAULT_STATE_SELECTED_SHOWDESCRIPTION,\n    action\n) => {\n    switch (action.type) {\n        case SET_SELECTED_SHOWDESCRIPTION:\n            return validateReducer(\n                action.value,\n                DEFAULT_STATE_SELECTED_SHOWDESCRIPTION\n            );\n        default:\n            return state;\n    }\n};\n\nexport default combineReducers({\n    id,\n    isLoading,\n    showDescription,\n});\n\n// Selectors\n\nexport const sGetSelectedRoot = state => state.selected;\n\nexport const sGetSelectedId = state => sGetSelectedRoot(state).id;\n\nexport const sGetSelectedIsLoading = state => sGetSelectedRoot(state).isLoading;\n\nexport const sGetSelectedShowDescription = state =>\n    sGetSelectedRoot(state).showDescription;\n","import { orObject } from '../modules/util';\nimport objectClean from 'd2-utilizr/lib/objectClean';\n\n/** @module reducers/visualizations */\n\nexport const ADD_VISUALIZATION = 'ADD_VISUALIZATION';\nexport const SET_ACTIVE_VISUALIZATION_TYPE = 'SET_ACTIVE_VISUALIZATION_TYPE';\n\nexport const DEFAULT_STATE_VISUALIZATIONS = {};\n\nconst isEmpty = p => p === undefined || p === null;\n\nexport default (state = DEFAULT_STATE_VISUALIZATIONS, action) => {\n    switch (action.type) {\n        case ADD_VISUALIZATION: {\n            return {\n                ...state,\n                [action.value.id]: objectClean(\n                    {\n                        ...orObject(state[action.value.id]),\n                        ...action.value,\n                    },\n                    isEmpty\n                ),\n            };\n        }\n        case SET_ACTIVE_VISUALIZATION_TYPE: {\n            return {\n                ...state,\n                [action.id]: objectClean(\n                    {\n                        ...orObject(state[action.id]),\n                        activeType: action.activeType,\n                    },\n                    isEmpty\n                ),\n            };\n        }\n        default:\n            return state;\n    }\n};\n\n// root selector\nexport const sGetVisualizationsRoot = state => state.visualizations;\n\n// selectors level 1\nexport const sGetVisualization = (state, id) => {\n    return sGetVisualizationsRoot(state)[id];\n};\n","import {\n    ADD_VISUALIZATION,\n    SET_ACTIVE_VISUALIZATION_TYPE,\n} from '../reducers/visualizations';\n\nexport const acAddVisualization = value => ({\n    type: ADD_VISUALIZATION,\n    value,\n});\n\nexport const acSetActiveVisualizationType = (id, activeType) => {\n    const action = {\n        type: SET_ACTIVE_VISUALIZATION_TYPE,\n        id,\n        activeType,\n    };\n\n    return action;\n};\n","import arrayClean from 'd2-utilizr/lib/arrayClean';\nimport {\n    getListItemFields,\n    getFavoritesFields,\n    getIdNameFields,\n} from './metadata';\n\n// Helper functions\n\nexport const onError = error => console.log('Error: ', error);\n\n// Dashboard item\nexport const getDashboardItemsFields = ({ withFavorite } = {}) =>\n    arrayClean([\n        'id',\n        'type',\n        'shape',\n        'x',\n        'y',\n        'width~rename(w)',\n        'height~rename(h)',\n        'messages',\n        'text',\n        'appKey',\n        `${getListItemFields().join(',')}`,\n        withFavorite\n            ? `${getFavoritesFields({\n                  withDimensions: withFavorite.withDimensions,\n              }).join(',')}`\n            : ``,\n    ]);\n\n// Dashboard\nexport const getDashboardFields = ({ withItems, withFavorite } = {}) =>\n    arrayClean([\n        `${getIdNameFields().join(',')}`,\n        'description',\n        'displayDescription',\n        'favorite',\n        `user[${getIdNameFields({ rename: true }).join(',')}]`,\n        'created',\n        'lastUpdated',\n        'access',\n        withItems\n            ? `dashboardItems[${getDashboardItemsFields({\n                  withFavorite,\n              }).join(',')}]`\n            : ``,\n    ]);\n","import { getInstance } from 'd2';\nimport arrayClean from 'd2-utilizr/lib/arrayClean';\nimport { onError, getDashboardFields } from './index';\n\n// Get \"all\" dashboards on startup\nexport const apiFetchDashboards = () =>\n    getInstance()\n        .then(d2 =>\n            d2.models.dashboard.list({\n                fields: [\n                    getDashboardFields().join(','),\n                    'dashboardItems[id]',\n                ].join(','),\n                paging: 'false',\n            })\n        )\n        .catch(onError);\n\n// Get more info about selected dashboard\nexport const apiFetchDashboard = id =>\n    getInstance()\n        .then(d2 =>\n            d2.models.dashboard.get(id, {\n                fields: arrayClean(\n                    getDashboardFields({\n                        withItems: true,\n                        withFavorite: { withDimensions: false },\n                    })\n                ).join(','),\n            })\n        )\n        .catch(onError);\n\n// Star dashboard\nexport const apiStarDashboard = (id, isStarred) => {\n    const url = `dashboards/${id}/favorite`;\n\n    getInstance().then(d2 => {\n        if (isStarred) {\n            d2.Api.getApi().post(url);\n        } else {\n            d2.Api.getApi().delete(url);\n        }\n    });\n};\n\nexport const apiDeleteDashboard = id => {\n    return getInstance()\n        .then(d2 => {\n            return d2.models.dashboards\n                .get(id)\n                .then(dashboard => dashboard.delete());\n        })\n        .catch(onError);\n};\n","import update from 'immutability-helper';\nimport { arrayToIdMap } from '../modules/util';\n\nexport const RECEIVED_MESSAGES = 'RECEIVED_MESSAGES';\n\nexport default (state = {}, action) => {\n    switch (action.type) {\n        case RECEIVED_MESSAGES: {\n            const conversations = arrayToIdMap(action.value);\n\n            const newState = update(state, { $merge: conversations });\n\n            return newState;\n        }\n        default:\n            return state;\n    }\n};\n\n// selectors\n\nexport const sGetMessagesRoot = state => state.messages;\n","import { getInstance } from 'd2';\n\nexport const getMessages = () => {\n    const fields =\n        'id,messageCount,lastUpdated,messageType,displayName,read,messages[id,read,sender[id,displayName],text,lastUpdated]';\n    const url = `/messageConversations?fields=${fields}&order=read:asc&pageSize=200`;\n    return getInstance()\n        .then(d2 => d2.Api.getApi().get(url))\n        .catch(error => console.log('Error:', error));\n};\n","export const RECEIVED_SNACKBAR_MESSAGE = 'RECEIVED_SNACKBAR_MESSAGE';\nexport const CLOSE_SNACKBAR = 'CLOSE_SNACKBAR';\n\nexport const DEFAULT_STATE_SNACKBAR = {\n    message: {},\n    duration: null,\n    open: false,\n};\n\nexport default (state = DEFAULT_STATE_SNACKBAR, action) => {\n    switch (action.type) {\n        case RECEIVED_SNACKBAR_MESSAGE: {\n            return { ...state, ...action.value };\n        }\n        case CLOSE_SNACKBAR: {\n            return DEFAULT_STATE_SNACKBAR;\n        }\n        default:\n            return state;\n    }\n};\n\n// selectors\n\nexport const sGetSnackbar = state => state.snackbar || DEFAULT_STATE_SNACKBAR;\n","import {\n    RECEIVED_SNACKBAR_MESSAGE,\n    CLOSE_SNACKBAR,\n} from '../reducers/snackbar';\n\nexport const acReceivedSnackbarMessage = value => ({\n    type: RECEIVED_SNACKBAR_MESSAGE,\n    value,\n});\n\nexport const acCloseSnackbar = () => ({\n    type: CLOSE_SNACKBAR,\n});\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport Snackbar from '@material-ui/core/Snackbar';\nimport PropTypes from 'prop-types';\n\nimport { sGetSnackbar } from '../../reducers/snackbar';\nimport { acCloseSnackbar } from '../../actions/snackbar';\n\nconst LOADING_DASHBOARD = 'LOADING_DASHBOARD';\nexport const loadingDashboardMsg = { name: '', type: LOADING_DASHBOARD };\n\nconst SnackbarMessageContent = ({ message }) => {\n    if (typeof message === 'object') {\n        //future message types:  switch(message.type)\n        return (\n            <span>\n                Loading <span style={{ fontWeight: 800 }}>{message.name}</span>{' '}\n                dashboard\n            </span>\n        );\n    }\n    return message;\n};\n\nexport const SnackbarMessage = props => {\n    return (\n        <Snackbar\n            style={{ zIndex: 10001 }}\n            open={props.snackbarOpen}\n            message={<SnackbarMessageContent message={props.snackbarMessage} />}\n            autoHideDuration={props.snackbarDuration}\n            onClose={props.onCloseSnackbar}\n        />\n    );\n};\n\nconst mapStateToProps = state => {\n    const { message, duration, open } = sGetSnackbar(state);\n    return {\n        snackbarOpen: open,\n        snackbarMessage: message,\n        snackbarDuration: duration,\n    };\n};\n\nSnackbarMessage.propTypes = {\n    snackbarDuration: PropTypes.string,\n    snackbarMessage: PropTypes.object,\n    snackbarOpen: PropTypes.bool,\n    onCloseSnackbar: PropTypes.func,\n};\n\nexport default connect(\n    mapStateToProps,\n    {\n        onCloseSnackbar: acCloseSnackbar,\n    }\n)(SnackbarMessage);\n","import {\n    SET_SELECTED_ID,\n    SET_SELECTED_ISLOADING,\n    SET_SELECTED_SHOWDESCRIPTION,\n} from '../reducers/selected';\nimport { acAddVisualization } from '../actions/visualizations';\nimport { sGetSelectedIsLoading } from '../reducers/selected';\nimport { sGetUserUsername } from '../reducers/user';\nimport { getCustomDashboards, sGetDashboardById } from '../reducers/dashboards';\nimport { apiFetchDashboard } from '../api/dashboards';\nimport { acSetDashboardItems, acAppendDashboards } from './dashboards';\nimport { withShape } from '../components/ItemGrid/gridUtil';\nimport { tGetMessages } from '../components/Item/MessagesItem/actions';\nimport { acReceivedSnackbarMessage, acCloseSnackbar } from './snackbar';\nimport { storePreferredDashboardId } from '../api/localStorage';\nimport { loadingDashboardMsg } from '../components/SnackbarMessage/SnackbarMessage';\nimport {\n    REPORT_TABLE,\n    CHART,\n    MAP,\n    EVENT_REPORT,\n    EVENT_CHART,\n    MESSAGES,\n} from '../modules/itemTypes';\nimport { extractFavorite } from '../components/Item/VisualizationItem/plugin';\nimport { orObject } from '../modules/util';\n\n// actions\n\nexport const acSetSelectedId = value => ({\n    type: SET_SELECTED_ID,\n    value,\n});\n\nexport const acSetSelectedIsLoading = value => ({\n    type: SET_SELECTED_ISLOADING,\n    value,\n});\n\nexport const acSetSelectedShowDescription = value => ({\n    type: SET_SELECTED_SHOWDESCRIPTION,\n    value,\n});\n\nexport const tLoadDashboard = id => async dispatch => {\n    try {\n        const dash = await apiFetchDashboard(id);\n        dispatch(acAppendDashboards(dash));\n\n        return Promise.resolve(dash);\n    } catch (err) {\n        console.log('Error: ', err);\n        return err;\n    }\n};\n\n// thunks\nexport const tSetSelectedDashboardById = id => async (dispatch, getState) => {\n    dispatch(acSetSelectedIsLoading(true));\n\n    const snackbarTimeout = setTimeout(() => {\n        const dashboardName = orObject(sGetDashboardById(getState(), id))\n            .displayName;\n        if (sGetSelectedIsLoading(getState()) && dashboardName) {\n            loadingDashboardMsg.name = dashboardName;\n\n            dispatch(\n                acReceivedSnackbarMessage({\n                    message: loadingDashboardMsg,\n                    open: true,\n                })\n            );\n        }\n    }, 500);\n\n    const onSuccess = selected => {\n        const customDashboard = getCustomDashboards(selected)[0];\n\n        dispatch(\n            acSetDashboardItems(withShape(customDashboard.dashboardItems))\n        );\n\n        storePreferredDashboardId(sGetUserUsername(getState()), id);\n\n        // add visualizations to store\n        customDashboard.dashboardItems.forEach(item => {\n            switch (item.type) {\n                case REPORT_TABLE:\n                case CHART:\n                case MAP:\n                case EVENT_REPORT:\n                case EVENT_CHART:\n                    dispatch(acAddVisualization(extractFavorite(item)));\n                    break;\n                case MESSAGES:\n                    dispatch(tGetMessages(id));\n                    break;\n                default:\n                    break;\n            }\n        });\n\n        dispatch(acSetSelectedId(id));\n\n        dispatch(acSetSelectedIsLoading(false));\n\n        clearTimeout(snackbarTimeout);\n\n        dispatch(acCloseSnackbar());\n\n        return selected;\n    };\n\n    const onError = error => {\n        console.log('Error: ', error);\n        return error;\n    };\n\n    try {\n        const selected = await dispatch(tLoadDashboard(id));\n\n        return onSuccess(selected);\n    } catch (err) {\n        return onError(err);\n    }\n};\n","export const getPreferredDashboardId = username =>\n    localStorage.getItem(`dhis2.dashboard.current.${username}`) || undefined;\n\nexport const storePreferredDashboardId = (username, dashboardId) => {\n    localStorage.setItem(`dhis2.dashboard.current.${username}`, dashboardId);\n};\n","import { RECEIVED_MESSAGES } from '../../../reducers/messages';\nimport { getMessages } from '../../../api/messages';\n\nconst onError = (action, error) => {\n    console.log(`Error in action ${action}: ${error}`);\n    return error;\n};\n\nexport const receivedMessages = value => ({\n    type: RECEIVED_MESSAGES,\n    value,\n});\n\nexport const tGetMessages = () => async dispatch => {\n    try {\n        const messages = await getMessages();\n        const { messageConversations } = messages;\n\n        return dispatch(receivedMessages(messageConversations));\n    } catch (err) {\n        return onError('Get Messages', err);\n    }\n};\n","/** @module reducers/editDashboard */\nimport update from 'immutability-helper';\nimport isEmpty from 'lodash/isEmpty';\nimport { orArray, orObject } from '../modules/util';\n\nexport const RECEIVED_EDIT_DASHBOARD = 'RECEIVED_EDIT_DASHBOARD';\nexport const RECEIVED_NOT_EDITING = 'RECEIVED_NOT_EDITING';\nexport const START_NEW_DASHBOARD = 'START_NEW_DASHBOARD';\nexport const RECEIVED_TITLE = 'RECEIVED_TITLE';\nexport const RECEIVED_DESCRIPTION = 'RECEIVED_DESCRIPTION';\nexport const ADD_DASHBOARD_ITEM = 'ADD_DASHBOARD_ITEM';\nexport const REMOVE_DASHBOARD_ITEM = 'REMOVE_DASHBOARD_ITEM';\nexport const UPDATE_DASHBOARD_ITEM = 'UPDATE_DASHBOARD_ITEM';\nexport const RECEIVED_DASHBOARD_LAYOUT = 'RECEIVED_DASHBOARD_LAYOUT';\n\nexport const DEFAULT_STATE_EDIT_DASHBOARD = {};\nexport const NEW_DASHBOARD_STATE = {\n    id: '',\n    name: '',\n    access: {},\n    description: '',\n    dashboardItems: [],\n};\n\nexport default (state = DEFAULT_STATE_EDIT_DASHBOARD, action) => {\n    switch (action.type) {\n        case RECEIVED_EDIT_DASHBOARD: {\n            const newState = {};\n            Object.keys(NEW_DASHBOARD_STATE).map(\n                k => (newState[k] = action.value[k])\n            );\n            return newState;\n        }\n        case RECEIVED_NOT_EDITING:\n            return DEFAULT_STATE_EDIT_DASHBOARD;\n        case START_NEW_DASHBOARD:\n            return NEW_DASHBOARD_STATE;\n        case RECEIVED_TITLE: {\n            return Object.assign({}, state, { name: action.value });\n        }\n        case RECEIVED_DESCRIPTION: {\n            return Object.assign({}, state, {\n                description: action.value,\n            });\n        }\n        case ADD_DASHBOARD_ITEM:\n            return update(state, {\n                dashboardItems: { $unshift: [action.value] },\n            });\n        case REMOVE_DASHBOARD_ITEM: {\n            const idToRemove = action.value;\n\n            const dashboardItemIndex = state.dashboardItems.findIndex(\n                item => item.id === idToRemove\n            );\n\n            if (dashboardItemIndex > -1) {\n                return update(state, {\n                    dashboardItems: {\n                        $splice: [[dashboardItemIndex, 1]],\n                    },\n                });\n            }\n\n            return state;\n        }\n        case RECEIVED_DASHBOARD_LAYOUT: {\n            const stateItems = orArray(state.dashboardItems);\n\n            const newStateItems = action.value.map(({ x, y, w, h, i }) => {\n                const stateItem = stateItems.find(si => si.id === i);\n\n                return Object.assign({}, stateItem, { w, h, x, y });\n            });\n\n            return update(state, {\n                dashboardItems: { $set: newStateItems },\n            });\n        }\n        case UPDATE_DASHBOARD_ITEM: {\n            const dashboardItem = action.value;\n\n            const dashboardItemIndex = state.dashboardItems.findIndex(\n                item => item.id === dashboardItem.id\n            );\n\n            if (dashboardItemIndex > -1) {\n                const newState = update(state, {\n                    dashboardItems: {\n                        $splice: [[dashboardItemIndex, 1, dashboardItem]],\n                    },\n                });\n\n                return newState;\n            }\n\n            return state;\n        }\n        default:\n            return state;\n    }\n};\n\n// root selector\n\nexport const sGetEditDashboardRoot = state => state.editDashboard;\n\n// selectors\n\nexport const sGetIsEditing = state => !isEmpty(state.editDashboard);\n\nexport const sGetIsNewDashboard = state => {\n    return (\n        !isEmpty(state.editDashboard) && sGetEditDashboardRoot(state).id === ''\n    );\n};\n\nexport const sGetEditDashboardItems = state =>\n    orObject(sGetEditDashboardRoot(state)).dashboardItems;\n","export const CLEAR_EDIT_ITEM_FILTERS = 'CLEAR_EDIT_ITEM_FILTERS';\nexport const REMOVE_EDIT_ITEM_FILTER = 'REMOVE_EDIT_ITEM_FILTER';\nexport const SET_EDIT_ITEM_FILTERS = 'SET_EDIT_ITEM_FILTERS';\n\nexport const DEFAULT_STATE_EDIT_ITEM_FILTERS = {};\n\nexport default (state = DEFAULT_STATE_EDIT_ITEM_FILTERS, action) => {\n    switch (action.type) {\n        case REMOVE_EDIT_ITEM_FILTER: {\n            const newState = { ...state };\n\n            delete newState[action.id];\n\n            return newState;\n        }\n        case SET_EDIT_ITEM_FILTERS: {\n            return action.filters;\n        }\n        case CLEAR_EDIT_ITEM_FILTERS: {\n            return DEFAULT_STATE_EDIT_ITEM_FILTERS;\n        }\n        default:\n            return state;\n    }\n};\n\n// selectors\n\nexport const sGetEditItemFiltersRoot = state => state.editItemFilters;\n\nexport const sGetEditFiltersKeys = state =>\n    Object.keys(sGetEditItemFiltersRoot(state));\n","export const CLEAR_ITEM_FILTERS = 'CLEAR_ITEM_FILTERS';\nexport const SET_ITEM_FILTERS = 'SET_ITEM_FILTERS';\nexport const ADD_ITEM_FILTER = 'ADD_ITEM_FILTER';\nexport const REMOVE_ITEM_FILTER = 'REMOVE_ITEM_FILTER';\n\nexport const DEFAULT_STATE_ITEM_FILTERS = {};\n\nexport default (state = DEFAULT_STATE_ITEM_FILTERS, action) => {\n    switch (action.type) {\n        case ADD_ITEM_FILTER: {\n            return {\n                ...state,\n                [action.filter.id]: action.filter.value,\n            };\n        }\n        case REMOVE_ITEM_FILTER: {\n            const newState = { ...state };\n\n            delete newState[action.id];\n\n            return newState;\n        }\n        case SET_ITEM_FILTERS: {\n            return action.filters;\n        }\n        case CLEAR_ITEM_FILTERS: {\n            return DEFAULT_STATE_ITEM_FILTERS;\n        }\n        default:\n            return state;\n    }\n};\n\n// selectors\n\nexport const sGetItemFiltersRoot = state => state.itemFilters;\n\nexport const sGetFiltersKeys = state => Object.keys(sGetItemFiltersRoot(state));\n","import {\n    ADD_ITEM_FILTER,\n    REMOVE_ITEM_FILTER,\n    SET_ITEM_FILTERS,\n    CLEAR_ITEM_FILTERS,\n} from '../reducers/itemFilters';\n\nexport const FILTER_ORG_UNIT = 'ou';\n\n// actions\n\nexport const acAddItemFilter = filter => ({\n    type: ADD_ITEM_FILTER,\n    filter,\n});\n\nexport const acRemoveItemFilter = id => ({\n    type: REMOVE_ITEM_FILTER,\n    id,\n});\n\nexport const acClearItemFilters = () => ({\n    type: CLEAR_ITEM_FILTERS,\n});\n\nexport const acSetItemFilters = filters => ({\n    type: SET_ITEM_FILTERS,\n    filters,\n});\n","import {\n    REMOVE_EDIT_ITEM_FILTER,\n    SET_EDIT_ITEM_FILTERS,\n    CLEAR_EDIT_ITEM_FILTERS,\n} from '../reducers/editItemFilters';\n\n// actions\n\nexport const acRemoveEditItemFilter = id => ({\n    type: REMOVE_EDIT_ITEM_FILTER,\n    id,\n});\n\nexport const acClearEditItemFilters = () => ({\n    type: CLEAR_EDIT_ITEM_FILTERS,\n});\n\nexport const acSetEditItemFilters = filters => ({\n    type: SET_EDIT_ITEM_FILTERS,\n    filters,\n});\n","import { getInstance } from 'd2';\n\nconst onError = error => console.log('Error: ', error);\n\nconst saveDashboard = (dashboard, data) => {\n    const { name, description, dashboardItems } = data;\n\n    dashboard.name = name;\n    dashboard.description = description;\n    dashboard.dashboardItems = dashboardItems.map(item =>\n        Object.assign({}, item, { width: item.w, height: item.h })\n    );\n\n    return dashboard.save().then(msg => msg.response.uid);\n};\n\nexport const updateDashboard = data => {\n    return getInstance()\n        .then(d2 => {\n            return d2.models.dashboards\n                .get(data.id)\n                .then(dashboard => saveDashboard(dashboard, data));\n        })\n        .catch(onError);\n};\n\nexport const postDashboard = data => {\n    return getInstance().then(d2 => {\n        const dashboard = d2.models.dashboards.create();\n\n        return saveDashboard(dashboard, data);\n    });\n};\n","import { generateUid } from 'd2/uid';\n\nimport {\n    RECEIVED_EDIT_DASHBOARD,\n    START_NEW_DASHBOARD,\n    RECEIVED_NOT_EDITING,\n    RECEIVED_TITLE,\n    RECEIVED_DESCRIPTION,\n    RECEIVED_DASHBOARD_LAYOUT,\n    ADD_DASHBOARD_ITEM,\n    UPDATE_DASHBOARD_ITEM,\n    REMOVE_DASHBOARD_ITEM,\n} from '../reducers/editDashboard';\nimport { sGetEditDashboardRoot } from '../reducers/editDashboard';\nimport { updateDashboard, postDashboard } from '../api/editDashboard';\nimport { tSetSelectedDashboardById } from '../actions/selected';\nimport { NEW_ITEM_SHAPE } from '../components/ItemGrid/gridUtil';\nimport {\n    itemTypeMap,\n    isSpacerType,\n    TEXT,\n    emptyTextItemContent,\n    isTextType,\n} from '../modules/itemTypes';\n\nconst onError = error => {\n    console.log('Error (Saving Dashboard): ', error);\n    return error;\n};\n\n// actions\n\nexport const acSetEditDashboard = (dashboard, items) => {\n    const val = {\n        ...dashboard,\n        dashboardItems: items,\n    };\n\n    return {\n        type: RECEIVED_EDIT_DASHBOARD,\n        value: val,\n    };\n};\n\nexport const acSetEditNewDashboard = () => ({\n    type: START_NEW_DASHBOARD,\n});\n\nexport const acClearEditDashboard = () => ({\n    type: RECEIVED_NOT_EDITING,\n});\n\nexport const acSetDashboardTitle = value => ({\n    type: RECEIVED_TITLE,\n    value,\n});\n\nexport const acSetDashboardDescription = value => ({\n    type: RECEIVED_DESCRIPTION,\n    value,\n});\n\nexport const acUpdateDashboardLayout = value => ({\n    type: RECEIVED_DASHBOARD_LAYOUT,\n    value,\n});\n\nexport const acAddDashboardItem = item => {\n    const type = item.type;\n    delete item.type;\n    const itemPropName = itemTypeMap[type].propName;\n\n    return {\n        type: ADD_DASHBOARD_ITEM,\n        value: {\n            id: generateUid(),\n            type,\n            [itemPropName]: item.content,\n            ...NEW_ITEM_SHAPE,\n        },\n    };\n};\n\nexport const acUpdateDashboardItem = item => ({\n    type: UPDATE_DASHBOARD_ITEM,\n    value: item,\n});\n\nexport const acRemoveDashboardItem = value => ({\n    type: REMOVE_DASHBOARD_ITEM,\n    value,\n});\n\n// thunks\n\nexport const tSaveDashboard = () => async (dispatch, getState) => {\n    const dashboard = sGetEditDashboardRoot(getState());\n\n    const dashboardItems = dashboard.dashboardItems.map(item => {\n        const text = isTextType(item)\n            ? item.text || emptyTextItemContent\n            : null;\n\n        const type = isSpacerType(item) ? TEXT : item.type;\n\n        return {\n            ...item,\n            ...(text ? { text } : {}),\n            type,\n        };\n    });\n\n    const dashboardToSave = {\n        ...dashboard,\n        dashboardItems,\n    };\n\n    try {\n        const dashboardId = dashboardToSave.id\n            ? await updateDashboard(dashboardToSave)\n            : await postDashboard(dashboardToSave);\n\n        dispatch(acClearEditDashboard());\n        await dispatch(tSetSelectedDashboardById(dashboardId));\n\n        return Promise.resolve(dashboardId);\n    } catch (error) {\n        onError(error);\n    }\n};\n","import {\n    SET_DASHBOARDS,\n    ADD_DASHBOARDS,\n    SET_DASHBOARD_STARRED,\n    SET_DASHBOARD_DISPLAY_NAME,\n    SET_DASHBOARD_ITEMS,\n} from '../reducers/dashboards';\nimport {\n    getCustomDashboards,\n    sGetDashboardById,\n    sGetDashboardsSortedByStarred,\n} from '../reducers/dashboards';\nimport { sGetUserUsername } from '../reducers/user';\nimport { tSetSelectedDashboardById, acSetSelectedId } from './selected';\nimport { sGetSelectedId } from '../reducers/selected';\nimport { sGetIsEditing } from '../reducers/editDashboard';\nimport { sGetEditItemFiltersRoot } from '../reducers/editItemFilters';\nimport { acSetItemFilters, acClearItemFilters } from './itemFilters';\nimport { acClearEditItemFilters } from './editItemFilters';\nimport { acClearEditDashboard } from './editDashboard';\nimport {\n    apiFetchDashboards,\n    apiStarDashboard,\n    apiDeleteDashboard,\n} from '../api/dashboards';\nimport { getPreferredDashboardId } from '../api/localStorage';\nimport { arrayToIdMap } from '../modules/util';\n\n// actions\n\nexport const acSetDashboards = dashboards => ({\n    type: SET_DASHBOARDS,\n    value: arrayToIdMap(getCustomDashboards(dashboards)),\n});\n\nexport const acAppendDashboards = dashboards => ({\n    type: ADD_DASHBOARDS,\n    value: arrayToIdMap(getCustomDashboards(dashboards)),\n});\n\nexport const acSetDashboardStarred = (dashboardId, isStarred) => ({\n    type: SET_DASHBOARD_STARRED,\n    dashboardId: dashboardId,\n    value: isStarred,\n});\n\nexport const acSetDashboardDisplayName = (dashboardId, value) => ({\n    type: SET_DASHBOARD_DISPLAY_NAME,\n    dashboardId,\n    value,\n});\n\nexport const acSetDashboardItems = value => ({\n    type: SET_DASHBOARD_ITEMS,\n    value,\n});\n\n// thunks\n\nexport const tFetchDashboards = () => async dispatch => {\n    const collection = await apiFetchDashboards();\n    dispatch(acSetDashboards(collection.toArray()));\n};\n\nexport const tSelectDashboard = id => async (dispatch, getState) => {\n    const onError = error => {\n        console.log('Error (apiFetchDashboards): ', error);\n        return error;\n    };\n\n    try {\n        const state = getState();\n\n        let dashboardToSelect = null;\n        if (id) {\n            dashboardToSelect = sGetDashboardById(state, id) || null;\n        } else {\n            const preferredId = getPreferredDashboardId(\n                sGetUserUsername(state)\n            );\n            const dash = sGetDashboardById(state, preferredId);\n            dashboardToSelect =\n                preferredId && dash\n                    ? dash\n                    : sGetDashboardsSortedByStarred(state)[0];\n        }\n\n        if (dashboardToSelect) {\n            dispatch(tSetSelectedDashboardById(dashboardToSelect.id));\n\n            if (dashboardToSelect.id === sGetSelectedId(state)) {\n                if (sGetIsEditing(state)) {\n                    // disable filters when switching to edit mode\n                    dispatch(acClearItemFilters());\n                } else {\n                    // enable filters when switching to view mode\n                    dispatch(acSetItemFilters(sGetEditItemFiltersRoot(state)));\n                }\n            } else {\n                // clear filters when switching dashboard\n                dispatch(acClearEditItemFilters());\n                dispatch(acClearItemFilters());\n            }\n        } else {\n            dispatch(acSetSelectedId(false));\n        }\n    } catch (err) {\n        return onError(err);\n    }\n};\n\nexport const tStarDashboard = (id, isStarred) => async dispatch => {\n    const onSuccess = id => {\n        dispatch(acSetDashboardStarred(id, isStarred));\n        return id;\n    };\n\n    const onError = error => {\n        console.log('Error (apiStarDashboard): ', error);\n        return error;\n    };\n    try {\n        await apiStarDashboard(id, isStarred);\n        return onSuccess(id);\n    } catch (err) {\n        return onError(err);\n    }\n};\n\nexport const tDeleteDashboard = id => async dispatch => {\n    try {\n        await apiDeleteDashboard(id);\n        dispatch(acClearEditDashboard());\n        dispatch(acSetSelectedId());\n        dispatch(acSetDashboardItems([]));\n\n        await dispatch(tFetchDashboards());\n\n        return Promise.resolve();\n    } catch (err) {\n        console.log('Error (deleteDashboard): ', err);\n        return err;\n    }\n};\n","/** @module reducers/controlBar */\nimport { combineReducers } from 'redux';\nimport { validateReducer } from '../modules/util';\n\nexport const SET_CONTROLBAR_USER_ROWS = 'SET_CONTROLBAR_USER_ROWS';\n\nexport const DEFAULT_STATE_CONTROLBAR_ROWS = 1;\n\nconst userRows = (state = DEFAULT_STATE_CONTROLBAR_ROWS, action) => {\n    switch (action.type) {\n        case SET_CONTROLBAR_USER_ROWS:\n            return validateReducer(action.value, DEFAULT_STATE_CONTROLBAR_ROWS);\n        default:\n            return state;\n    }\n};\n\nexport default combineReducers({\n    userRows,\n});\n\n/**\n * Selectors that point to specific props in the state object\n * @function\n * @param {Object} state\n * @returns {Object}\n */\nexport const sGetControlBarRoot = state => state.controlBar;\n\n// Selector dependency level 2\n\nexport const sGetControlBarUserRows = state =>\n    sGetControlBarRoot(state).userRows;\n","import { getInstance } from 'd2';\nimport { DEFAULT_STATE_CONTROLBAR_ROWS } from '../reducers/controlBar';\n\nconst NAMESPACE = 'dashboard';\nconst KEY = 'controlBarRows';\n\nconst hasNamespace = async d2 => await d2.currentUser.dataStore.has(NAMESPACE);\n\nconst getNamespace = async (d2, hasNamespace) =>\n    hasNamespace\n        ? await d2.currentUser.dataStore.get(NAMESPACE)\n        : await d2.currentUser.dataStore.create(NAMESPACE);\n\nexport const apiGetControlBarRows = async () => {\n    const d2 = await getInstance();\n    const namespace = await getNamespace(d2, await hasNamespace(d2));\n    const hasKey = namespace.keys && namespace.keys.find(key => key === KEY);\n\n    if (hasKey) {\n        return await namespace.get(KEY);\n    } else {\n        await apiPostControlBarRows(DEFAULT_STATE_CONTROLBAR_ROWS, namespace);\n        console.log(\n            '(These errors to /userDataStore/dashboard can be ignored)'\n        );\n        return DEFAULT_STATE_CONTROLBAR_ROWS;\n    }\n};\n\nexport const apiPostControlBarRows = async (rows, namespace) => {\n    const d2 = await getInstance();\n    const ns = namespace || (await getNamespace(d2, hasNamespace));\n\n    ns.set(KEY, rows);\n};\n","import { SET_CONTROLBAR_USER_ROWS } from '../reducers/controlBar';\nimport { apiGetControlBarRows } from '../api/controlBar';\n\n// actions\n\nexport const acSetControlBarUserRows = rows => ({\n    type: SET_CONTROLBAR_USER_ROWS,\n    value: rows,\n});\n\n// thunks\n\nexport const tSetControlBarRows = () => async dispatch => {\n    const onSuccess = rows => {\n        dispatch(acSetControlBarUserRows(rows));\n    };\n\n    const onError = error => {\n        console.log('Error (apiGetControlBarRows): ', error);\n        return error;\n    };\n\n    try {\n        const controlBarRows = await apiGetControlBarRows();\n        return onSuccess(controlBarRows);\n    } catch (err) {\n        return onError(err);\n    }\n};\n","import {\n    getDimensionById,\n    DIMENSION_ID_PERIOD,\n    DIMENSION_ID_ORGUNIT,\n} from '@dhis2/analytics';\n\nexport const SET_DIMENSIONS = 'SET_DIMENSIONS';\nexport const DEFAULT_DIMENSIONS = [\n    getDimensionById(DIMENSION_ID_PERIOD),\n    getDimensionById(DIMENSION_ID_ORGUNIT),\n];\n\nexport default (state = DEFAULT_DIMENSIONS, action) => {\n    switch (action.type) {\n        case SET_DIMENSIONS: {\n            return [...DEFAULT_DIMENSIONS, ...action.value];\n        }\n        default:\n            return state;\n    }\n};\n\nexport const sGetDimensions = state => state.dimensions;\n","export const SET_SETTINGS = 'SET_SETTINGS';\nexport const ADD_SETTINGS = 'ADD_SETTINGS';\n\nexport const DEFAULT_SETTINGS = {\n    keyDateFormat: 'yyyy-MM-dd',\n    keyAnalysisRelativePeriod: 'LAST_12_MONTHS',\n    keyAnalysisDigitGroupSeparator: 'SPACE',\n    displayNameProperty: 'displayName',\n    uiLocale: 'en',\n    rootOrganisationUnit: {},\n};\n\nexport default (state = DEFAULT_SETTINGS, action) => {\n    switch (action.type) {\n        case SET_SETTINGS: {\n            return Object.assign({}, action.value);\n        }\n        case ADD_SETTINGS: {\n            return {\n                ...state,\n                ...action.value,\n            };\n        }\n        default:\n            return state;\n    }\n};\n\n// Selectors\n\nexport const sGetSettings = state => state.settings;\n\nexport const sGetSettingsDisplayNameProperty = state =>\n    sGetSettings(state).displayNameProperty;\n\nexport const sGetRootOrgUnit = state =>\n    sGetSettings(state).rootOrganisationUnit;\n\nexport const sGetRelativePeriod = state =>\n    sGetSettings(state).keyAnalysisRelativePeriod;\n\nexport const sGetUiLocale = state => sGetSettings(state).uiLocale;\n","import { SET_DIMENSIONS } from '../reducers/dimensions';\nimport { apiFetchDimensions } from '@dhis2/analytics';\nimport { sGetSettingsDisplayNameProperty } from '../reducers/settings';\n\nexport const acSetDimensions = dimensions => ({\n    type: SET_DIMENSIONS,\n    value: dimensions,\n});\n\nexport const tSetDimensions = d2 => async (dispatch, getState) => {\n    const onSuccess = dimensions => {\n        dispatch(acSetDimensions(dimensions));\n    };\n\n    const onError = error => {\n        console.log('Error (apiFetchDimensions): ', error);\n        return error;\n    };\n\n    try {\n        const displayNameProp = sGetSettingsDisplayNameProperty(getState());\n        const dimensions = await apiFetchDimensions(d2, displayNameProp);\n\n        // filter out CATEGORY that are not of type ATTRIBUTE\n        const filteredDimensions = dimensions.filter(\n            dim =>\n                dim.dimensionType !== 'CATEGORY' ||\n                (dim.dimensionType === 'CATEGORY' &&\n                    dim.dataDimensionType === 'ATTRIBUTE')\n        );\n        return onSuccess(filteredDimensions);\n    } catch (err) {\n        return onError(err);\n    }\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport i18n from '@dhis2/d2-i18n';\nimport { colors } from '@dhis2/ui-core';\nimport { withStyles } from '@material-ui/core/styles';\n\nexport const SHOWMORE_BAR_HEIGHT = 16;\n\nconst styles = {\n    showMore: {\n        color: colors.grey700,\n        cursor: 'pointer',\n        fontSize: 11,\n        paddingTop: 5,\n        '&:hover': {\n            textDecoration: 'underline',\n        },\n    },\n    disabled: {\n        paddingTop: 5,\n        color: colors.grey500,\n        fontSize: 11,\n        cursor: 'not-allowed',\n    },\n};\n\nexport const ShowMoreButton = ({ onClick, isMaxHeight, classes, disabled }) => {\n    return (\n        <div style={{ textAlign: 'center' }}>\n            {disabled ? (\n                <div className={classes.disabled}>{i18n.t('Show more')}</div>\n            ) : (\n                <div className={classes.showMore} onClick={onClick}>\n                    {isMaxHeight ? i18n.t('Show less') : i18n.t('Show more')}\n                </div>\n            )}\n        </div>\n    );\n};\n\nShowMoreButton.propTypes = {\n    classes: PropTypes.object,\n    disabled: PropTypes.bool,\n    isMaxHeight: PropTypes.bool,\n    onClick: PropTypes.func,\n};\n\nexport default withStyles(styles)(ShowMoreButton);\n","import { SHOWMORE_BAR_HEIGHT } from './ShowMoreButton';\n\nexport const CONTROL_BAR_ROW_HEIGHT = 40;\nexport const FIRST_ROW_PADDING_HEIGHT = 10;\nexport const MIN_ROW_COUNT = 1;\n\nexport const HEADERBAR_HEIGHT = 48;\n\nconst CONTROL_BAR_OUTER_HEIGHT_DIFF =\n    FIRST_ROW_PADDING_HEIGHT + SHOWMORE_BAR_HEIGHT - 2; // 2 pixel \"adjustment\"\n\nexport const getRowsHeight = rows => {\n    return rows * CONTROL_BAR_ROW_HEIGHT;\n};\n\nexport const getNumRowsFromHeight = height => {\n    return Math.floor(\n        (height - CONTROL_BAR_OUTER_HEIGHT_DIFF) / CONTROL_BAR_ROW_HEIGHT\n    );\n};\n\nexport const getTopOffset = rows => {\n    return HEADERBAR_HEIGHT + getControlBarHeight(rows, false);\n};\n\nexport const getControlBarHeight = rows => {\n    return getRowsHeight(rows) + CONTROL_BAR_OUTER_HEIGHT_DIFF;\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { colors } from '@dhis2/ui-core';\nimport { HEADERBAR_HEIGHT } from './controlBarDimensions';\n\nimport classes from './styles/ControlBar.module.css';\n\nconst DRAG_HANDLE_HEIGHT = 7;\n\nclass ControlBar extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            dragging: false,\n        };\n    }\n\n    onStartDrag = () => {\n        this.setState({ dragging: true });\n        window.addEventListener('mousemove', this.onDrag);\n        window.addEventListener('mouseup', this.onEndDrag);\n    };\n\n    onDrag = event => {\n        event.preventDefault();\n        event.stopPropagation();\n\n        const newHeight = event.clientY;\n\n        if (\n            this.props.onChangeHeight &&\n            newHeight !== this.props.height &&\n            newHeight > 0\n        ) {\n            requestAnimationFrame(() => {\n                this.props.onChangeHeight(newHeight);\n            });\n        }\n    };\n\n    onEndDrag = () => {\n        this.setState({ dragging: false });\n        window.removeEventListener('mousemove', this.onDrag);\n        window.removeEventListener('mouseup', this.onEndDrag);\n\n        if (this.props.onEndDrag) {\n            this.props.onEndDrag();\n        }\n    };\n\n    renderDragHandle() {\n        return typeof this.props.onChangeHeight === 'function' ? (\n            <div\n                className={classes.draghandle}\n                style={{ height: DRAG_HANDLE_HEIGHT }}\n                onMouseDown={this.onStartDrag}\n            />\n        ) : null;\n    }\n\n    render() {\n        const height = Math.max(this.props.height, 0) + DRAG_HANDLE_HEIGHT;\n\n        const rootStyle = Object.assign(\n            {\n                height,\n                top: HEADERBAR_HEIGHT,\n                backgroundColor: this.props.editMode\n                    ? colors.yellow050\n                    : colors.white,\n                paddingBottom: DRAG_HANDLE_HEIGHT,\n            },\n            // Disable animations while dragging\n            this.state.dragging ? { transition: 'none' } : {}\n        );\n\n        return (\n            <div style={rootStyle} className={classes.root}>\n                <div className={classes.content}>{this.props.children}</div>\n                {this.renderDragHandle()}\n            </div>\n        );\n    }\n}\n\nControlBar.propTypes = {\n    /**\n     * The height of the control bar in number of lines. Must be a positive integer.\n     */\n    children: PropTypes.node.isRequired,\n\n    /**\n     * If true, the background color of the control bar changes to indicate that edit mode is active.\n     */\n    editMode: PropTypes.bool.isRequired,\n\n    /**\n     * Callback function that is called when the control bar is resized.\n     * The callback receives one argument: The new height in pixels.\n     *\n     * If no callback is specified the control bar will not have a drag handle.\n     */\n    height: PropTypes.number.isRequired,\n\n    /**\n     * Callback function that is called when the control bar is dropped after being dragged.\n     * The callback receives one argument: The new height in pixels.\n     *\n     * Ignored if no \"onChangeHeight\" function is provided.\n     */\n    onChangeHeight: PropTypes.func,\n\n    /**\n     * The contents of the control bar.\n     */\n    onEndDrag: PropTypes.func,\n};\n\nControlBar.defaultProps = {\n    onChangeHeight: null,\n    onEndDrag: null,\n};\n\nexport default ControlBar;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst StarIcon = ({ className }) => (\n    <svg\n        className={className}\n        xmlns=\"http://www.w3.org/2000/svg\"\n        viewBox=\"0 0 24 24\"\n    >\n        <path d=\"M0 0h24v24H0z\" fill=\"none\" />\n        <path d=\"M12 17.27L18.18 21l-1.64-7.03L22 9.24l-7.19-.61L12 2 9.19 8.63 2 9.24l5.46 4.73L5.82 21z\" />\n        <path d=\"M0 0h24v24H0z\" fill=\"none\" />\n    </svg>\n);\n\nStarIcon.propTypes = {\n    className: PropTypes.string,\n};\n\nexport default StarIcon;\n","import { getInstance } from 'd2';\n\nexport const apiPostDataStatistics = async (eventType, id) => {\n    const d2 = await getInstance();\n    const url = `dataStatistics?eventType=${eventType}&favorite=${id}`;\n\n    d2.Api.getApi().post(url);\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport { Chip, colors } from '@dhis2/ui-core';\nimport { Link } from 'react-router-dom';\nimport debounce from 'lodash/debounce';\n\nimport StarIcon from '../../icons/Star';\nimport { apiPostDataStatistics } from '../../api/dataStatistics';\n\nconst styles = {\n    chip: {\n        margin: '3px',\n    },\n    link: {\n        color: colors.grey600,\n        display: 'inline-block',\n        textDecoration: 'none',\n        verticalAlign: 'top',\n    },\n    icon: {\n        height: '20px',\n        marginTop: '2px',\n        width: '20px',\n    },\n    selected: {\n        fill: colors.white,\n    },\n    unselected: {\n        fill: colors.grey700,\n    },\n};\n\nexport const DashboardItemChip = ({\n    starred,\n    selected,\n    label,\n    dashboardId,\n    classes,\n}) => {\n    const chipProps = {\n        selected,\n        className: classes.chip,\n    };\n\n    if (starred) {\n        const selectedState = selected ? classes.selected : classes.unselected;\n        chipProps.icon = (\n            <StarIcon className={`${classes.icon} ${selectedState}`} />\n        );\n    }\n\n    return (\n        <Link\n            className={classes.link}\n            to={`/${dashboardId}`}\n            onClick={debounce(\n                () => apiPostDataStatistics('DASHBOARD_VIEW', dashboardId),\n                500\n            )}\n        >\n            <Chip {...chipProps}>{label}</Chip>\n        </Link>\n    );\n};\n\nDashboardItemChip.propTypes = {\n    dashboardId: PropTypes.string.isRequired,\n    label: PropTypes.string.isRequired,\n    selected: PropTypes.bool.isRequired,\n    starred: PropTypes.bool.isRequired,\n    classes: PropTypes.object,\n};\n\nexport default withStyles(styles)(DashboardItemChip);\n","import React from 'react';\nimport { colors } from '@dhis2/ui-core';\n\nconst AddCircleIcon = () => (\n    <svg\n        xmlns=\"http://www.w3.org/2000/svg\"\n        width=\"32\"\n        height=\"32\"\n        fill={colors.teal600}\n        viewBox=\"0 0 24 24\"\n    >\n        <path d=\"M12 2C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2zm4 11h-3v3c0 .55-.45 1-1 1s-1-.45-1-1v-3H8c-.55 0-1-.45-1-1s.45-1 1-1h3V8c0-.55.45-1 1-1s1 .45 1 1v3h3c.55 0 1 .45 1 1s-.45 1-1 1z\" />\n    </svg>\n);\n\nexport default AddCircleIcon;\n","import React from 'react';\nimport { colors } from '@dhis2/ui-core';\nimport PropTypes from 'prop-types';\n\nconst ClearIcon = ({ className }) => (\n    <svg\n        className={className}\n        fill={colors.grey800}\n        xmlns=\"http://www.w3.org/2000/svg\"\n        viewBox=\"0 0 24 24\"\n    >\n        <path d=\"M19 6.41L17.59 5 12 10.59 6.41 5 5 6.41 10.59 12 5 17.59 6.41 19 12 13.41 17.59 19 19 17.59 13.41 12z\" />\n        <path d=\"M0 0h24v24H0z\" fill=\"none\" />\n    </svg>\n);\n\nClearIcon.propTypes = {\n    className: PropTypes.string,\n};\n\nexport default ClearIcon;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport ClearIcon from '../../icons/Clear';\n\nimport classes from './styles/ClearButton.module.css';\n\nexport const ClearButton = ({ onClear }) => (\n    <button className={classes.button} onClick={onClear}>\n        <span>\n            <ClearIcon className={classes.icon} color=\"action\" />\n        </span>\n    </button>\n);\n\nClearButton.propTypes = {\n    onClear: PropTypes.func.isRequired,\n};\n\nexport default ClearButton;\n","import { combineReducers } from 'redux';\nimport { validateReducer } from '../modules/util';\n\nexport const SET_DASHBOARDS_FILTER_NAME = 'SET_DASHBOARDS_FILTER_NAME';\nexport const SET_DASHBOARDS_FILTER_OWNER = 'SET_DASHBOARDS_FILTER_OWNER';\nexport const SET_DASHBOARDS_FILTER_ORDER = 'SET_DASHBOARDS_FILTER_ORDER';\n\nexport const ownerData = [\n    { id: 'ALL', value: 'All users' },\n    { id: 'ME', value: 'Created by me' },\n    { id: 'OTHERS', value: 'Created by others' },\n];\n\nexport const orderData = [\n    { id: 'NAME:ASC', value: 'Name (asc)' },\n    { id: 'NAME:ASC', value: 'Name (desc)' },\n    { id: 'ITEMS:ASC', value: 'Number of items (asc)' },\n    { id: 'ITEMS:ASC', value: 'Number of items (desc)' },\n    { id: 'CREATED:ASC', value: 'Created date (asc)' },\n    { id: 'CREATED:ASC', value: 'Created date (desc)' },\n];\n\nexport const DEFAULT_STATE_DASHBOARDS_FILTER_NAME = '';\nexport const DEFAULT_STATE_DASHBOARDS_FILTER_OWNER = ownerData[0].id;\nexport const DEFAULT_STATE_DASHBOARDS_FILTER_ORDER = orderData[0].id;\n\nconst name = (state = DEFAULT_STATE_DASHBOARDS_FILTER_NAME, action) => {\n    switch (action.type) {\n        case SET_DASHBOARDS_FILTER_NAME:\n            return validateReducer(\n                action.value,\n                DEFAULT_STATE_DASHBOARDS_FILTER_NAME\n            );\n        default:\n            return state;\n    }\n};\n\nconst owner = (state = DEFAULT_STATE_DASHBOARDS_FILTER_OWNER, action) => {\n    switch (action.type) {\n        case SET_DASHBOARDS_FILTER_OWNER:\n            return validateReducer(\n                action.value,\n                DEFAULT_STATE_DASHBOARDS_FILTER_NAME\n            );\n        default:\n            return state;\n    }\n};\n\nconst order = (state = DEFAULT_STATE_DASHBOARDS_FILTER_ORDER, action) => {\n    switch (action.type) {\n        case SET_DASHBOARDS_FILTER_ORDER:\n            return validateReducer(\n                action.value,\n                DEFAULT_STATE_DASHBOARDS_FILTER_ORDER\n            );\n        default:\n            return state;\n    }\n};\n\nexport default combineReducers({\n    name,\n    owner,\n    order,\n});\n\n// selectors\n\nexport const sGetDashboardsFilterRoot = state => state.dashboardsFilter;\n\n// selector dependency level 2\n\nexport const sGetFilterName = state => sGetDashboardsFilterRoot(state).name;\nexport const sGetFilterOwner = state => sGetDashboardsFilterRoot(state).owner;\nexport const sGetFilterOrder = state => sGetDashboardsFilterRoot(state).order;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport i18n from '@dhis2/d2-i18n';\nimport InputField from '@material-ui/core/Input';\nimport InputAdornment from '@material-ui/core/InputAdornment';\nimport SearchIcon from '@material-ui/icons/Search';\nimport { colors } from '@dhis2/ui-core';\n\nimport ClearButton from './ClearButton';\nimport { DEFAULT_STATE_DASHBOARDS_FILTER_NAME } from '../../reducers/dashboardsFilter';\n\nexport const KEYCODE_ENTER = 13;\nexport const KEYCODE_ESCAPE = 27;\n\nconst styles = {\n    filterField: {\n        fontSize: '14px',\n        width: '200px',\n        height: '30px',\n        top: '-4px',\n    },\n    searchIcon: {\n        color: colors.grey700,\n        width: '20px',\n        height: '20px',\n    },\n};\n\nexport class Filter extends Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            value: DEFAULT_STATE_DASHBOARDS_FILTER_NAME,\n        };\n    }\n\n    componentWillReceiveProps(nextProps) {\n        this.setState({\n            value: nextProps.name,\n        });\n    }\n\n    setFilterValue = event => {\n        event.preventDefault();\n\n        this.props.onChangeName(event.target.value);\n    };\n\n    handleKeyUp = event => {\n        switch (event.keyCode) {\n            case KEYCODE_ENTER:\n                this.props.onKeypressEnter();\n                break;\n            case KEYCODE_ESCAPE:\n                this.props.onChangeName();\n                break;\n            default:\n                break;\n        }\n    };\n\n    render() {\n        const { classes, name, onChangeName } = this.props;\n\n        const startAdornment = (\n            <InputAdornment position=\"start\">\n                <SearchIcon className={classes.searchIcon} />\n            </InputAdornment>\n        );\n\n        const endAdornment =\n            name !== '' && name !== null ? (\n                <InputAdornment position=\"end\">\n                    <ClearButton onClear={() => onChangeName()} />\n                </InputAdornment>\n            ) : null;\n\n        return (\n            <InputField\n                className={classes.filterField}\n                placeholder={i18n.t('Search for a dashboard')}\n                startAdornment={startAdornment}\n                endAdornment={endAdornment}\n                value={this.state.value}\n                onChange={this.setFilterValue}\n                onKeyUp={this.handleKeyUp}\n            />\n        );\n    }\n}\n\nFilter.propTypes = {\n    classes: PropTypes.object,\n    name: PropTypes.string,\n    onChangeName: PropTypes.func,\n    onKeypressEnter: PropTypes.func,\n};\n\nFilter.defaultProps = {\n    name: '',\n    onChangeName: Function.prototype,\n};\n\nexport default withStyles(styles)(Filter);\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { Link, withRouter } from 'react-router-dom';\nimport ControlBar from './ControlBar';\nimport arraySort from 'd2-utilizr/lib/arraySort';\nimport PropTypes from 'prop-types';\n\nimport Chip from './DashboardItemChip';\nimport AddCircleIcon from '../../icons/AddCircle';\nimport Filter from './Filter';\nimport ShowMoreButton from './ShowMoreButton';\nimport {\n    FIRST_ROW_PADDING_HEIGHT,\n    MIN_ROW_COUNT,\n    getRowsHeight,\n    getControlBarHeight,\n    getNumRowsFromHeight,\n} from './controlBarDimensions';\nimport { sGetControlBarUserRows } from '../../reducers/controlBar';\nimport { sGetAllDashboards } from '../../reducers/dashboards';\nimport { sGetFilterName } from '../../reducers/dashboardsFilter';\nimport { sGetSelectedId } from '../../reducers/selected';\nimport { acSetControlBarUserRows } from '../../actions/controlBar';\nimport { acSetFilterName } from '../../actions/dashboardsFilter';\nimport { orObject, orArray } from '../../modules/util';\nimport { apiPostControlBarRows } from '../../api/controlBar';\n\nimport classes from './styles/DashboardsBar.module.css';\n\nexport const MAX_ROW_COUNT = 10;\n\nexport class DashboardsBar extends Component {\n    state = {\n        rows: MIN_ROW_COUNT,\n    };\n\n    setInitialDashboardState = rows => {\n        this.setState({ rows, isMaxHeight: rows === MAX_ROW_COUNT });\n    };\n\n    componentDidMount() {\n        this.setInitialDashboardState(this.props.userRows);\n    }\n\n    componentWillReceiveProps(nextProps) {\n        this.setInitialDashboardState(nextProps.userRows);\n    }\n\n    onChangeHeight = newHeight => {\n        const adjustedHeight = newHeight - 52; // don't rush the transition to a bigger row count\n        const newRows = Math.max(\n            MIN_ROW_COUNT,\n            getNumRowsFromHeight(adjustedHeight)\n        );\n\n        if (newRows !== this.state.rows) {\n            const newRowCount = Math.min(newRows, MAX_ROW_COUNT);\n\n            this.props.onChangeHeight(newRowCount);\n        }\n    };\n\n    onEndDrag = () => {\n        return apiPostControlBarRows(this.state.rows);\n    };\n\n    onToggleMaxHeight = () => {\n        const rows =\n            this.state.rows === MAX_ROW_COUNT\n                ? this.props.userRows\n                : MAX_ROW_COUNT;\n\n        this.setState({ rows, isMaxHeight: !this.state.isMaxHeight });\n    };\n\n    onSelectDashboard = () => {\n        this.props.history.push(`/${this.props.dashboards[0].id}`);\n    };\n\n    render() {\n        const { dashboards, name, selectedId, onChangeFilterName } = this.props;\n\n        const rowCount = this.state.isMaxHeight\n            ? MAX_ROW_COUNT\n            : this.state.rows;\n        const controlBarHeight = getControlBarHeight(rowCount);\n        const contentWrapperStyle = {\n            padding: `${FIRST_ROW_PADDING_HEIGHT}px 6px 0 6px`,\n            overflowY: this.state.isMaxHeight ? 'auto' : 'hidden',\n            height: getRowsHeight(rowCount) + FIRST_ROW_PADDING_HEIGHT,\n        };\n\n        return (\n            <ControlBar\n                height={controlBarHeight}\n                onChangeHeight={this.onChangeHeight}\n                onEndDrag={this.onEndDrag}\n                editMode={false}\n            >\n                <div style={contentWrapperStyle}>\n                    <div className={classes.leftControls}>\n                        <Link\n                            style={{\n                                display: 'inline-block',\n                                textDecoration: 'none',\n                                marginRight: 10,\n                                position: 'relative',\n                                top: '2px',\n                            }}\n                            to={'/new'}\n                        >\n                            <AddCircleIcon />\n                        </Link>\n                        <Filter\n                            name={name}\n                            onChangeName={onChangeFilterName}\n                            onKeypressEnter={this.onSelectDashboard}\n                        />\n                    </div>\n                    {orArray(dashboards).map(dashboard => (\n                        <Chip\n                            key={dashboard.id}\n                            label={dashboard.displayName}\n                            starred={dashboard.starred}\n                            dashboardId={dashboard.id}\n                            selected={dashboard.id === selectedId}\n                        />\n                    ))}\n                </div>\n                <ShowMoreButton\n                    onClick={this.onToggleMaxHeight}\n                    isMaxHeight={this.state.isMaxHeight}\n                    disabled={this.props.userRows === MAX_ROW_COUNT}\n                />\n            </ControlBar>\n        );\n    }\n}\n\nconst mapStateToProps = state => ({\n    dashboards: sGetAllDashboards(state),\n    name: sGetFilterName(state),\n    userRows: sGetControlBarUserRows(state),\n    selectedId: sGetSelectedId(state),\n});\n\nconst mapDispatchToProps = {\n    onChangeHeight: acSetControlBarUserRows,\n    onChangeFilterName: acSetFilterName,\n};\nconst mergeProps = (stateProps, dispatchProps, ownProps) => {\n    const dashboards = Object.values(orObject(stateProps.dashboards));\n    const displayDashboards = arraySort(\n        dashboards.filter(d =>\n            d.displayName.toLowerCase().includes(stateProps.name.toLowerCase())\n        ),\n        'ASC',\n        'displayName'\n    );\n\n    return {\n        ...stateProps,\n        ...ownProps,\n        ...dispatchProps,\n        dashboards: [\n            ...displayDashboards.filter(d => d.starred),\n            ...displayDashboards.filter(d => !d.starred),\n        ],\n    };\n};\n\nDashboardsBar.propTypes = {\n    dashboards: PropTypes.array,\n    history: PropTypes.object,\n    name: PropTypes.string,\n    selectedId: PropTypes.string,\n    userRows: PropTypes.number,\n    onChangeFilterName: PropTypes.func,\n    onChangeHeight: PropTypes.func,\n};\n\nexport default withRouter(\n    connect(\n        mapStateToProps,\n        mapDispatchToProps,\n        mergeProps\n    )(DashboardsBar)\n);\n","import {\n    SET_DASHBOARDS_FILTER_NAME,\n    SET_DASHBOARDS_FILTER_OWNER,\n    SET_DASHBOARDS_FILTER_ORDER,\n} from '../reducers/dashboardsFilter';\n\n// actions\n\nexport const acSetFilterName = value => ({\n    type: SET_DASHBOARDS_FILTER_NAME,\n    value,\n});\n\nexport const acSetFilterOwner = value => ({\n    type: SET_DASHBOARDS_FILTER_OWNER,\n    value,\n});\n\nexport const acSetFilterOrder = value => ({\n    type: SET_DASHBOARDS_FILTER_ORDER,\n    value,\n});\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\n\nimport {\n    getTopOffset,\n    MIN_ROW_COUNT,\n} from '../ControlBar/controlBarDimensions';\nimport { sGetControlBarUserRows } from '../../reducers/controlBar';\n\nconst DashboardVerticalOffset = props => {\n    const rows = props.editMode ? MIN_ROW_COUNT : props.userRows;\n    const marginTop = getTopOffset(rows);\n\n    return <div className=\"page-container-top-margin\" style={{ marginTop }} />;\n};\n\nconst mapStateToProps = state => ({\n    userRows: sGetControlBarUserRows(state),\n});\n\nDashboardVerticalOffset.propTypes = {\n    editMode: PropTypes.bool,\n    userRows: PropTypes.number,\n};\n\nexport default connect(mapStateToProps)(DashboardVerticalOffset);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { MenuItem, colors } from '@dhis2/ui-core';\n\nconst HeaderMenuItem = ({ title }) => (\n    <MenuItem\n        dense\n        key={title}\n        disabled\n        label={\n            <p style={{ color: colors.grey800, fontWeight: '600' }}>{title}</p>\n        }\n    />\n);\n\nHeaderMenuItem.propTypes = {\n    title: PropTypes.string.isRequired,\n};\n\nexport default HeaderMenuItem;\n","import React from 'react';\nimport { colors } from '@dhis2/ui-core';\nimport PropTypes from 'prop-types';\n\nconst LaunchIcon = ({ className }) => (\n    <svg\n        className={className}\n        xmlns=\"http://www.w3.org/2000/svg\"\n        width=\"12\"\n        height=\"12\"\n        fill={colors.grey600}\n        viewBox=\"0 0 24 24\"\n    >\n        <path d=\"M0 0h24v24H0z\" fill=\"none\" />\n        <path d=\"M19 19H5V5h7V3H5c-1.11 0-2 .9-2 2v14c0 1.1.89 2 2 2h14c1.1 0 2-.9 2-2v-7h-2v7zM14 3v2h3.59l-9.83 9.83 1.41 1.41L19 6.41V10h2V3h-7z\" />\n    </svg>\n);\n\nLaunchIcon.propTypes = {\n    className: PropTypes.string,\n};\n\nexport default LaunchIcon;\n","import React from 'react';\nimport { MenuItem, colors } from '@dhis2/ui-core';\nimport i18n from '@dhis2/d2-i18n';\nimport PropTypes from 'prop-types';\n\nimport { getItemIcon } from '../../modules/itemTypes';\nimport LaunchIcon from '../../icons/Launch';\n\nimport classes from './styles/ContentMenuItem.module.css';\n\nconst LaunchLink = ({ url }) => (\n    <a\n        onClick={e => e.stopPropagation()}\n        className={classes.launchLink}\n        target=\"_blank\"\n        rel=\"noopener noreferrer\"\n        href={url}\n    >\n        <LaunchIcon />\n    </a>\n);\n\nLaunchLink.propTypes = {\n    url: PropTypes.string,\n};\n\nconst InsertButton = () => (\n    <button className={classes.buttonInsert}>{i18n.t('Insert')}</button>\n);\n\nconst ContentMenuItem = ({ type, name, onInsert, url }) => {\n    const ItemIcon = getItemIcon(type);\n\n    return (\n        <MenuItem\n            dense\n            onClick={onInsert}\n            label={\n                <div className={classes.menuItem}>\n                    <div className={classes.label}>\n                        <ItemIcon\n                            style={{ margin: '6px', fill: colors.grey600 }}\n                        />\n                        <span>{name}</span>\n                        {url ? <LaunchLink url={url} /> : null}\n                    </div>\n                    <InsertButton />\n                </div>\n            }\n        />\n    );\n};\n\nContentMenuItem.propTypes = {\n    name: PropTypes.string,\n    type: PropTypes.string,\n    url: PropTypes.string,\n    onInsert: PropTypes.func,\n};\n\nexport default ContentMenuItem;\n","import i18n from '@dhis2/d2-i18n';\nimport {\n    spacerContent,\n    REPORT_TABLE,\n    CHART,\n    MAP,\n    EVENT_CHART,\n    EVENT_REPORT,\n    USERS,\n    REPORTS,\n    RESOURCES,\n    APP,\n    MESSAGES,\n    TEXT,\n    SPACER,\n} from '../../modules/itemTypes';\n\nexport const singleItems = [\n    {\n        id: 'additional',\n        header: i18n.t('Additional items'),\n        items: [\n            {\n                type: TEXT,\n                name: i18n.t('Text box'),\n                content: '',\n            },\n            {\n                type: MESSAGES,\n                name: i18n.t('Messages'),\n                content: 'true',\n            },\n            {\n                type: SPACER,\n                name: i18n.t('Spacer'),\n                content: spacerContent,\n            },\n        ],\n    },\n];\n\n// categorizedItems are grouped in the item selector menu\nexport const categorizedItems = [\n    REPORT_TABLE,\n    CHART,\n    MAP,\n    EVENT_REPORT,\n    EVENT_CHART,\n    USERS,\n    REPORTS,\n    RESOURCES,\n    APP,\n];\n\n// listItemTypes are included in a single dashboard item\nexport const listItemTypes = [REPORTS, RESOURCES, USERS];\n","import React, { Component, Fragment } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport i18n from '@dhis2/d2-i18n';\nimport { MenuItem, Divider } from '@dhis2/ui-core';\n\nimport HeaderMenuItem from './HeaderMenuItem';\nimport ContentMenuItem from './ContentMenuItem';\n\nimport { tAddListItemContent } from './actions';\nimport { acAddDashboardItem } from '../../actions/editDashboard';\nimport { getItemUrl, APP } from '../../modules/itemTypes';\nimport { categorizedItems, listItemTypes } from './selectableItems';\n\nimport classes from './styles/CategorizedMenuGroup.module.css';\n\nclass CategorizedMenuGroup extends Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            seeMore: false,\n        };\n    }\n\n    addItem = item => () => {\n        const { type, acAddDashboardItem, tAddListItemContent } = this.props;\n\n        if (type === APP) {\n            acAddDashboardItem({ type, content: item.key });\n        } else {\n            const newItem = {\n                id: item.id,\n                name: item.displayName || item.name,\n            };\n\n            if (listItemTypes.includes(type)) {\n                tAddListItemContent(type, newItem);\n            } else {\n                acAddDashboardItem({ type, content: newItem });\n            }\n        }\n    };\n\n    toggleSeeMore = () => {\n        this.setState({ seeMore: !this.state.seeMore });\n\n        this.props.onChangeItemsLimit(this.props.type);\n    };\n\n    render() {\n        const { title, type, items, hasMore } = this.props;\n        return (\n            <Fragment>\n                <HeaderMenuItem title={title} />\n                {items.map(item => {\n                    const itemUrl = getItemUrl(type, item, this.context.d2);\n                    return (\n                        <ContentMenuItem\n                            key={item.id || item.key}\n                            type={type}\n                            name={item.displayName || item.name}\n                            onInsert={this.addItem(item)}\n                            url={itemUrl}\n                        />\n                    );\n                })}\n                {hasMore ? (\n                    <MenuItem\n                        dense\n                        key={`showmore${title}`}\n                        onClick={this.toggleSeeMore}\n                        label={\n                            <button className={classes.showMoreButton}>\n                                {this.state.seeMore\n                                    ? i18n.t('Show fewer')\n                                    : i18n.t('Show more')}\n                            </button>\n                        }\n                    />\n                ) : null}\n                <Divider margin=\"8px 0px\" />\n            </Fragment>\n        );\n    }\n}\n\nCategorizedMenuGroup.propTypes = {\n    items: PropTypes.array.isRequired,\n    title: PropTypes.string.isRequired,\n    type: PropTypes.oneOf(categorizedItems).isRequired,\n    onChangeItemsLimit: PropTypes.func.isRequired,\n    acAddDashboardItem: PropTypes.func,\n    hasMore: PropTypes.bool,\n    tAddListItemContent: PropTypes.func,\n};\n\nCategorizedMenuGroup.contextTypes = {\n    d2: PropTypes.object.isRequired,\n};\n\nexport default connect(\n    null,\n    {\n        acAddDashboardItem,\n        tAddListItemContent,\n    }\n)(CategorizedMenuGroup);\n","import { sGetEditDashboardRoot } from '../../reducers/editDashboard';\nimport { itemTypeMap } from '../../modules/itemTypes';\nimport {\n    acAddDashboardItem,\n    acUpdateDashboardItem,\n} from '../../actions/editDashboard';\n\nexport const tAddListItemContent = (type, content) => (dispatch, getState) => {\n    const state = getState();\n    const listItemType = itemTypeMap[type].propName;\n    const dashboardItems = sGetEditDashboardRoot(state).dashboardItems;\n    const dashboardItemIndex = dashboardItems.findIndex(\n        item => item.type === type\n    );\n    let dashboardItem;\n\n    // Reports/Resources/Users dashboard item type already present in dashboard\n    if (dashboardItemIndex > -1) {\n        dashboardItem = dashboardItems[dashboardItemIndex];\n        dashboardItem[listItemType].push(content);\n\n        dispatch(acUpdateDashboardItem(dashboardItem));\n    } else {\n        dashboardItem = {\n            type: type,\n            content: [content],\n        };\n\n        dispatch(acAddDashboardItem(dashboardItem));\n    }\n};\n","import React, { Fragment } from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\n\nimport HeaderMenuItem from './HeaderMenuItem';\nimport ContentMenuItem from './ContentMenuItem';\nimport { acAddDashboardItem } from '../../actions/editDashboard';\n\nexport const SinglesMenuGroup = ({ acAddDashboardItem, category }) => {\n    const addToDashboard = ({ type, content }) => () => {\n        acAddDashboardItem({ type, content });\n    };\n\n    return (\n        <Fragment>\n            <HeaderMenuItem title={category.header} />\n            {category.items.map(item => (\n                <ContentMenuItem\n                    key={item.type}\n                    type={item.type}\n                    name={item.name}\n                    onInsert={addToDashboard(item)}\n                />\n            ))}\n        </Fragment>\n    );\n};\n\nSinglesMenuGroup.propTypes = {\n    acAddDashboardItem: PropTypes.func,\n    category: PropTypes.object,\n};\n\nexport default connect(\n    null,\n    { acAddDashboardItem }\n)(SinglesMenuGroup);\n","import React, { Fragment } from 'react';\nimport PropTypes from 'prop-types';\nimport i18n from '@dhis2/d2-i18n';\nimport Popover from '@material-ui/core/Popover';\nimport { InputField, Menu } from '@dhis2/ui-core';\n\nimport CategorizedMenuGroup from './CategorizedMenuGroup';\nimport SinglesMenuGroup from './SinglesMenuGroup';\nimport { singleItems, categorizedItems } from './selectableItems';\nimport { itemTypeMap } from '../../modules/itemTypes';\n\nimport './styles/ItemSelector.css';\n\nconst ItemSearchField = props => (\n    <InputField\n        name=\"Dashboard item search\"\n        label={i18n.t('Search for items to add to this dashboard')}\n        type=\"text\"\n        onChange={props.onChange}\n        onFocus={props.onFocus}\n        value={props.value}\n    />\n);\n\nclass ItemSelector extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            anchorEl: null,\n            open: false,\n            maxOptions: new Set(),\n            items: undefined,\n            filter: '',\n        };\n    }\n\n    closeList = () => {\n        this.setState({ open: false, filter: '' });\n    };\n\n    openList = (_, event) => {\n        this.fetchItems();\n\n        this.setState({\n            anchorEl: event.currentTarget,\n            open: true,\n        });\n    };\n\n    setFilter = (_, event) => {\n        this.setState({ filter: event.target.value }, this.fetchItems);\n    };\n\n    getCategorizedMenuGroups = () =>\n        categorizedItems\n            .filter(type => {\n                const itemType = itemTypeMap[type];\n                return (\n                    this.state.items && this.state.items[itemType.endPointName]\n                );\n            })\n            .map(type => {\n                const itemType = itemTypeMap[type];\n                const allItems = this.state.items[itemType.endPointName];\n                const hasMore = allItems.length > 5;\n                const items = this.state.maxOptions.has(itemType.id)\n                    ? allItems\n                    : allItems.slice(0, 5);\n\n                return (\n                    <CategorizedMenuGroup\n                        key={type}\n                        type={type}\n                        title={itemType.pluralTitle}\n                        items={items}\n                        onChangeItemsLimit={this.fetchItems}\n                        hasMore={hasMore}\n                    />\n                );\n            });\n\n    getSinglesMenuGroups = () =>\n        singleItems.map(category => (\n            <SinglesMenuGroup key={category.id} category={category} />\n        ));\n\n    getMenuGroups = () =>\n        this.getCategorizedMenuGroups().concat(this.getSinglesMenuGroups());\n\n    fetchItems = async type => {\n        if (type) {\n            const maxOptions = this.state.maxOptions;\n\n            if (maxOptions.has(type)) {\n                maxOptions.delete(type);\n            } else {\n                maxOptions.add(type);\n            }\n\n            this.setState({ maxOptions });\n        } else {\n            this.setState({\n                maxOptions: new Set(),\n            });\n        }\n\n        let queryString = '?count=6';\n        if ([...this.state.maxOptions.values()].length) {\n            queryString +=\n                '&max=' + [...this.state.maxOptions.values()].join('&max=');\n        }\n\n        const filter = this.state.filter ? `/${this.state.filter}` : '';\n\n        this.context.d2.Api.getApi()\n            .get(`dashboards/q${filter}${queryString}`)\n            .then(response => this.setState({ items: response }))\n            .catch(console.error);\n    };\n\n    render() {\n        return (\n            <Fragment>\n                <ItemSearchField\n                    value={this.state.filter}\n                    onChange={this.setFilter}\n                    onFocus={this.openList}\n                />\n                <Popover\n                    className=\"dashboard-item-selector\"\n                    open={this.state.open}\n                    onClose={this.closeList}\n                    anchorEl={this.state.anchorEl}\n                    anchorOrigin={{ horizontal: 'left', vertical: 'bottom' }}\n                    transformOrigin={{ horizontal: 'left', vertical: 'top' }}\n                    style={{ height: '70vh' }}\n                    PaperProps={{ style: { width: '700px' } }}\n                    disableAutoFocus={true}\n                    disableRestoreFocus={true}\n                >\n                    <Menu>{this.getMenuGroups()}</Menu>\n                </Popover>\n            </Fragment>\n        );\n    }\n}\n\nItemSearchField.propTypes = {\n    value: PropTypes.string,\n    onChange: PropTypes.func,\n    onFocus: PropTypes.func,\n};\n\nItemSelector.contextTypes = {\n    d2: PropTypes.object.isRequired,\n};\n\nexport default ItemSelector;\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport i18n from '@dhis2/d2-i18n';\nimport { InputField, TextAreaField } from '@dhis2/ui-core';\n\nimport ItemSelector from '../ItemSelector/ItemSelector';\nimport {\n    acSetDashboardTitle,\n    acSetDashboardDescription,\n} from '../../actions/editDashboard';\nimport { orObject } from '../../modules/util';\nimport { sGetEditDashboardRoot } from '../../reducers/editDashboard';\n\nconst styles = {\n    section: { display: 'flex', justifyContent: 'space-between' },\n    titleDescription: {\n        flex: '3',\n        marginRight: '50px',\n    },\n    title: {\n        display: 'block',\n        clear: 'both',\n    },\n    description: {\n        display: 'block',\n        clear: 'both',\n        marginTop: '15px',\n    },\n    underline: {\n        '&::before': {\n            borderBottom: `none`,\n        },\n        '&:hover::before': {\n            borderBottom: `none!important`,\n        },\n    },\n    input: {\n        backgroundColor: 'rgba(0, 0, 10, 0.05)',\n        borderRadius: '4px',\n        width: '100%',\n        '&:hover': {\n            backgroundColor: 'rgba(0, 0, 10, 0.08)',\n        },\n    },\n    itemSelector: {\n        flex: '2',\n        position: 'relative',\n    },\n};\n\nexport const EditTitleBar = ({\n    name,\n    description,\n    onChangeTitle,\n    onChangeDescription,\n    classes,\n}) => {\n    const updateTitle = (_, e) => {\n        onChangeTitle(e.target.value);\n    };\n\n    const updateDescription = (_, e) => {\n        onChangeDescription(e.target.value);\n    };\n\n    return (\n        <section className={classes.section}>\n            <div className={classes.titleDescription}>\n                <InputField\n                    className={classes.title}\n                    name=\"Dashboard title input\"\n                    label={i18n.t('Dashboard title')}\n                    type=\"text\"\n                    onChange={updateTitle}\n                    value={name}\n                />\n                <TextAreaField\n                    className={classes.description}\n                    name=\"Dashboard description input\"\n                    label={i18n.t('Dashboard description')}\n                    onChange={updateDescription}\n                    value={description}\n                />\n            </div>\n            <div className={classes.itemSelector}>\n                <ItemSelector />\n            </div>\n        </section>\n    );\n};\n\nconst mapStateToProps = state => {\n    const selectedDashboard = orObject(sGetEditDashboardRoot(state));\n\n    return {\n        name: selectedDashboard.name,\n        description: selectedDashboard.description,\n    };\n};\n\nconst mapDispatchToProps = {\n    onChangeTitle: acSetDashboardTitle,\n    onChangeDescription: acSetDashboardDescription,\n};\n\nexport default connect(\n    mapStateToProps,\n    mapDispatchToProps\n)(withStyles(styles)(EditTitleBar));\n\nEditTitleBar.propTypes = {\n    onChangeDescription: PropTypes.func.isRequired,\n    onChangeTitle: PropTypes.func.isRequired,\n    classes: PropTypes.object,\n    description: PropTypes.string,\n    name: PropTypes.string,\n};\n\nEditTitleBar.defaultProps = {\n    name: '',\n    description: '',\n};\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nimport { Button } from '@dhis2/ui-core';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\n\nimport i18n from '@dhis2/d2-i18n';\n\nimport {\n    PeriodDimension,\n    DynamicDimension,\n    OrgUnitDimension,\n    DIMENSION_ID_PERIOD,\n    DIMENSION_ID_ORGUNIT,\n} from '@dhis2/analytics';\n\nconst peId = DIMENSION_ID_PERIOD;\nconst ouId = DIMENSION_ID_ORGUNIT;\n\nclass FilterDialog extends Component {\n    onConfirm = id => () => this.props.onConfirm(id);\n\n    dialogContent() {\n        const { displayNameProperty, dimension, selectedItems } = this.props;\n        const dialogId = dimension.id;\n\n        const commonProps = {\n            d2: this.context.d2,\n            onSelect: this.props.onSelect,\n            onDeselect: this.props.onDeselect,\n            onReorder: this.props.onReorder,\n        };\n\n        switch (dialogId) {\n            case peId: {\n                return (\n                    <PeriodDimension\n                        selectedPeriods={selectedItems}\n                        {...commonProps}\n                    />\n                );\n            }\n            case ouId:\n                return (\n                    <OrgUnitDimension\n                        displayNameProperty={displayNameProperty}\n                        ouItems={selectedItems}\n                        {...commonProps}\n                    />\n                );\n            default:\n                return (\n                    <DynamicDimension\n                        selectedItems={selectedItems}\n                        dialogId={dialogId}\n                        dialogTitle={dimension.name}\n                        {...commonProps}\n                    />\n                );\n        }\n    }\n\n    render() {\n        const { dimension, onClose } = this.props;\n        const dialogId = dimension.id;\n\n        return (\n            <Dialog\n                open={!!dialogId}\n                maxWidth=\"lg\"\n                disableEnforceFocus\n                onClose={onClose}\n            >\n                {dialogId && this.dialogContent()}\n                <DialogActions>\n                    <Button kind=\"secondary\" onClick={onClose}>\n                        {i18n.t('Cancel')}\n                    </Button>\n                    <Button kind=\"primary\" onClick={this.onConfirm(dialogId)}>\n                        {i18n.t('Confirm')}\n                    </Button>\n                </DialogActions>\n            </Dialog>\n        );\n    }\n}\n\nFilterDialog.propTypes = {\n    dimension: PropTypes.object,\n    displayNameProperty: PropTypes.string,\n    selectedItems: PropTypes.array,\n    onClose: PropTypes.func,\n    onConfirm: PropTypes.func,\n    onDeselect: PropTypes.func,\n    onReorder: PropTypes.func,\n    onSelect: PropTypes.func,\n};\n\nFilterDialog.contextTypes = {\n    d2: PropTypes.object,\n};\n\nexport default FilterDialog;\n","export const SET_ACTIVE_MODAL_DIMENSION = 'SET_ACTIVE_MODAL_DIMENSION';\nexport const CLEAR_ACTIVE_MODAL_DIMENSION = 'CLEAR_ACTIVE_MODAL_DIMENSION';\n\nexport const DEFAULT_STATE_ACTIVE_MODAL_DIMENSION = {};\n\nexport default (state = DEFAULT_STATE_ACTIVE_MODAL_DIMENSION, action) => {\n    switch (action.type) {\n        case SET_ACTIVE_MODAL_DIMENSION: {\n            return action.value;\n        }\n        case CLEAR_ACTIVE_MODAL_DIMENSION: {\n            return DEFAULT_STATE_ACTIVE_MODAL_DIMENSION;\n        }\n        default:\n            return state;\n    }\n};\n\nexport const sGetActiveModalDimension = state => state.activeModalDimension;\n","import {\n    SET_ACTIVE_MODAL_DIMENSION,\n    CLEAR_ACTIVE_MODAL_DIMENSION,\n} from '../reducers/activeModalDimension';\n\nexport const acSetActiveModalDimension = value => ({\n    type: SET_ACTIVE_MODAL_DIMENSION,\n    value,\n});\n\nexport const acClearActiveModalDimension = () => ({\n    type: CLEAR_ACTIVE_MODAL_DIMENSION,\n});\n","import React, { Component, Fragment } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport Popover from '@material-ui/core/Popover';\nimport ArrowDropDownIcon from '@material-ui/icons/ArrowDropDown';\nimport { withTheme } from '@material-ui/core/styles';\n\nimport i18n from '@dhis2/d2-i18n';\nimport { DimensionsPanel } from '@dhis2/analytics';\n\nimport { Button } from '@dhis2/ui-core';\nimport FilterDialog from './FilterDialog';\n\nimport { sGetSettingsDisplayNameProperty } from '../../reducers/settings';\nimport { sGetActiveModalDimension } from '../../reducers/activeModalDimension';\nimport { sGetDimensions } from '../../reducers/dimensions';\nimport { sGetFiltersKeys } from '../../reducers/itemFilters';\nimport { sGetEditItemFiltersRoot } from '../../reducers/editItemFilters';\nimport { acAddItemFilter, acRemoveItemFilter } from '../../actions/itemFilters';\nimport {\n    acRemoveEditItemFilter,\n    acSetEditItemFilters,\n} from '../../actions/editItemFilters';\nimport {\n    acClearActiveModalDimension,\n    acSetActiveModalDimension,\n} from '../../actions/activeModalDimension';\n\nclass FilterSelector extends Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            anchorEl: null,\n        };\n    }\n\n    openPanel = (_, event) => {\n        this.setState({ anchorEl: event.currentTarget });\n    };\n\n    closePanel = () => {\n        this.setState({ anchorEl: null });\n    };\n\n    closeDialog = () => {\n        this.setState({ anchorEl: null });\n\n        this.props.clearActiveModalDimension();\n    };\n\n    selectDimension = id => {\n        this.props.setActiveModalDimension(\n            this.props.dimensions.find(dimension => dimension.id === id)\n        );\n    };\n\n    onSelectItems = ({ dimensionId, items }) => {\n        this.props.setEditItemFilters({\n            ...this.props.selectedItems,\n            [dimensionId]: items,\n        });\n    };\n\n    onDeselectItems = ({ dimensionId, itemIdsToRemove }) => {\n        const oldList = this.props.selectedItems[dimensionId] || [];\n        const newList = oldList.filter(\n            item => !itemIdsToRemove.includes(item.id)\n        );\n\n        if (newList.length) {\n            this.props.setEditItemFilters({\n                ...this.props.selectedItems,\n                [dimensionId]: newList,\n            });\n        } else {\n            this.props.removeEditItemFilter(dimensionId);\n        }\n    };\n\n    onReorderItems = ({ dimensionId, itemIds }) => {\n        const oldList = this.props.selectedItems[dimensionId] || [];\n        const reorderedList = itemIds.map(id =>\n            oldList.find(item => item.id === id)\n        );\n\n        this.props.setEditItemFilters({\n            ...this.props.selectedItems,\n            [dimensionId]: reorderedList,\n        });\n    };\n\n    saveFilter = id => {\n        const filterItems = this.props.selectedItems[id];\n\n        if (filterItems && filterItems.length) {\n            this.props.addItemFilter({\n                id,\n                value: [...filterItems],\n            });\n        } else {\n            this.props.removeItemFilter(id);\n        }\n\n        this.closeDialog();\n    };\n\n    render() {\n        const {\n            theme,\n            displayNameProperty,\n            dimension,\n            dimensions,\n            selectedDimensions,\n            selectedItems,\n        } = this.props;\n\n        return (\n            <Fragment>\n                <Button onClick={this.openPanel}>\n                    {i18n.t('Add filter')}\n                    <ArrowDropDownIcon />\n                </Button>\n                <Popover\n                    open={Boolean(this.state.anchorEl)}\n                    anchorEl={this.state.anchorEl}\n                    anchorOrigin={{ vertical: 'bottom', horizontal: 'left' }}\n                    onClose={this.closePanel}\n                    style={{\n                        height: '100%',\n                        fontFamily: theme.typography.fontFamily,\n                    }}\n                >\n                    <DimensionsPanel\n                        dimensions={dimensions}\n                        onDimensionClick={this.selectDimension}\n                        selectedIds={selectedDimensions}\n                    />\n                </Popover>\n                {dimension ? (\n                    <FilterDialog\n                        displayNameProperty={displayNameProperty}\n                        dimension={dimension}\n                        selectedItems={selectedItems[dimension.id] || []}\n                        onSelect={this.onSelectItems}\n                        onDeselect={this.onDeselectItems}\n                        onReorder={this.onReorderItems}\n                        onClose={this.closeDialog}\n                        onConfirm={this.saveFilter}\n                    />\n                ) : null}\n            </Fragment>\n        );\n    }\n}\n\nconst mapStateToProps = state => ({\n    displayNameProperty: sGetSettingsDisplayNameProperty(state),\n    dimension: sGetActiveModalDimension(state),\n    dimensions: sGetDimensions(state),\n    selectedDimensions: sGetFiltersKeys(state),\n    selectedItems: sGetEditItemFiltersRoot(state),\n});\n\nFilterSelector.propTypes = {\n    addItemFilter: PropTypes.func,\n    clearActiveModalDimension: PropTypes.func,\n    dimension: PropTypes.object,\n    dimensions: PropTypes.object,\n    displayNameProperty: PropTypes.string,\n    removeEditItemFilter: PropTypes.func,\n    removeItemFilter: PropTypes.func,\n    selectedDimensions: PropTypes.array,\n    selectedItems: PropTypes.object,\n    setActiveModalDimension: PropTypes.func,\n    setEditItemFilters: PropTypes.func,\n    theme: PropTypes.object,\n};\n\nexport default connect(\n    mapStateToProps,\n    {\n        clearActiveModalDimension: acClearActiveModalDimension,\n        setActiveModalDimension: acSetActiveModalDimension,\n        addItemFilter: acAddItemFilter,\n        removeItemFilter: acRemoveItemFilter,\n        removeEditItemFilter: acRemoveEditItemFilter,\n        setEditItemFilters: acSetEditItemFilters,\n    }\n)(withTheme()(FilterSelector));\n","import React, { Component } from 'react';\nimport InfoOutlineIcon from '@material-ui/icons/InfoOutlined';\nimport { colors } from '@dhis2/ui-core';\nimport PropTypes from 'prop-types';\n\nclass Info extends Component {\n    show = false;\n\n    toggle() {\n        this.show = !this.show;\n        return this.show;\n    }\n\n    render() {\n        return (\n            <div onClick={() => this.props.onClick(this.toggle())}>\n                <InfoOutlineIcon style={{ fill: colors.grey600 }} />\n            </div>\n        );\n    }\n}\n\nInfo.propTypes = {\n    onClick: PropTypes.func,\n};\n\nexport default Info;\n","import React, { Component, Fragment } from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport { Link } from 'react-router-dom';\nimport i18n from '@dhis2/d2-i18n';\nimport SharingDialog from '@dhis2/d2-ui-sharing-dialog';\nimport Star from '@material-ui/icons/Star';\nimport StarBorder from '@material-ui/icons/StarBorder';\n\nimport { orObject } from '../../modules/util';\nimport { tStarDashboard } from '../../actions/dashboards';\nimport { acSetSelectedShowDescription } from '../../actions/selected';\nimport FilterSelector from '../ItemFilter/FilterSelector';\nimport { Button } from '@dhis2/ui-core';\nimport Info from './Info';\nimport {\n    sGetSelectedId,\n    sGetSelectedShowDescription,\n} from '../../reducers/selected';\nimport {\n    sGetDashboardById,\n    sGetDashboardItems,\n} from '../../reducers/dashboards';\nimport { colors } from '@dhis2/ui-core';\n\nconst NO_DESCRIPTION = i18n.t('No description');\n\nconst styles = {\n    actions: {\n        display: 'flex',\n        alignItems: 'center',\n        marginLeft: '20px',\n    },\n    starIcon: {\n        fill: colors.grey600,\n    },\n    textButton: {\n        minWidth: '30px',\n        top: '1px',\n    },\n    editLink: {\n        display: 'inline-block',\n        verticalAlign: 'top',\n        textDecoration: 'none',\n        marginRight: '4px',\n    },\n    titleBar: {\n        display: 'flex',\n        alignItems: 'flex-start',\n    },\n    titleBarIcon: {\n        marginLeft: 5,\n        position: 'relative',\n        top: 1,\n        cursor: 'pointer',\n    },\n};\n\nclass ViewTitleBar extends Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            sharingDialogIsOpen: false,\n        };\n    }\n\n    toggleSharingDialog = () =>\n        this.setState({ sharingDialogIsOpen: !this.state.sharingDialogIsOpen });\n\n    render() {\n        const {\n            id,\n            name,\n            description,\n            access,\n            style,\n            showDescription,\n            starred,\n            onStarClick,\n            onInfoClick,\n            classes,\n        } = this.props;\n\n        const titleStyle = Object.assign({}, style.title, {\n            cursor: 'default',\n            userSelect: 'text',\n            top: '7px',\n        });\n\n        const StarIcon = starred ? Star : StarBorder;\n\n        return (\n            <Fragment>\n                <div className={classes.titleBar}>\n                    <span style={titleStyle}>{name}</span>\n                    <div className={classes.actions}>\n                        <div\n                            className={classes.titleBarIcon}\n                            onClick={onStarClick}\n                        >\n                            <StarIcon className={classes.starIcon} />\n                        </div>\n                        <div className={classes.titleBarIcon}>\n                            <Info onClick={onInfoClick} />\n                        </div>\n                        <div style={{ marginLeft: '10px' }}>\n                            {access.update ? (\n                                <Link\n                                    className={classes.editLink}\n                                    to={`/${id}/edit`}\n                                >\n                                    <Button>{i18n.t('Edit')}</Button>\n                                </Link>\n                            ) : null}\n                            {access.manage ? (\n                                <span style={{ marginRight: '4px' }}>\n                                    <Button onClick={this.toggleSharingDialog}>\n                                        {i18n.t('Share')}\n                                    </Button>\n                                </span>\n                            ) : null}\n                            <span style={{ marginRight: '4px' }}>\n                                <FilterSelector />\n                            </span>\n                        </div>\n                    </div>\n                </div>\n                {showDescription ? (\n                    <div\n                        className=\"dashboard-description\"\n                        style={Object.assign(\n                            { paddingTop: '5px', paddingBottom: '5px' },\n                            style.description,\n                            !description ? { color: '#888' } : {}\n                        )}\n                    >\n                        {description || NO_DESCRIPTION}\n                    </div>\n                ) : null}\n                {id ? (\n                    <SharingDialog\n                        d2={this.context.d2}\n                        id={id}\n                        type=\"dashboard\"\n                        open={this.state.sharingDialogIsOpen}\n                        onRequestClose={this.toggleSharingDialog}\n                    />\n                ) : null}\n            </Fragment>\n        );\n    }\n}\n\nconst mapStateToProps = state => {\n    const id = sGetSelectedId(state);\n    const dashboard = orObject(sGetDashboardById(state, id));\n\n    return {\n        id,\n        name: dashboard.displayName,\n        description: dashboard.displayDescription,\n        dashboardItems: sGetDashboardItems(state),\n        showDescription: sGetSelectedShowDescription(state),\n        starred: dashboard.starred,\n        access: orObject(dashboard.access),\n    };\n};\n\nconst mergeProps = (stateProps, dispatchProps, ownProps) => {\n    const { id, starred, showDescription } = stateProps;\n    const { dispatch } = dispatchProps;\n\n    return {\n        ...stateProps,\n        ...ownProps,\n        onStarClick: () => dispatch(tStarDashboard(id, !starred)),\n        onInfoClick: () =>\n            dispatch(acSetSelectedShowDescription(!showDescription)),\n    };\n};\n\nexport default connect(\n    mapStateToProps,\n    null,\n    mergeProps\n)(withStyles(styles)(ViewTitleBar));\n\nViewTitleBar.propTypes = {\n    access: PropTypes.object,\n    classes: PropTypes.object,\n    description: PropTypes.string,\n    id: PropTypes.string,\n    name: PropTypes.string,\n    showDescription: PropTypes.bool,\n    starred: PropTypes.bool,\n    style: PropTypes.object,\n    onInfoClick: PropTypes.func,\n    onStarClick: PropTypes.func,\n};\n\nViewTitleBar.defaultProps = {\n    name: '',\n    description: '',\n    starred: false,\n    showDescription: false,\n    onInfoClick: null,\n};\n\nViewTitleBar.contextTypes = {\n    d2: PropTypes.object,\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport { colors } from '@dhis2/ui-core';\nimport EditTitleBar from './EditTitleBar';\nimport ViewTitleBar from './ViewTitleBar';\n\nimport './TitleBar.css';\n\nconst style = {\n    title: {\n        position: 'relative',\n        fontSize: 21,\n        fontWeight: 500,\n        color: colors.black,\n        minWidth: 50,\n    },\n    description: {\n        fontSize: 14,\n        color: colors.grey800,\n    },\n};\n\nconst TitleBar = ({ edit }) => {\n    return (\n        <div\n            className=\"titlebar-wrapper\"\n            style={{\n                padding: '20px 15px 5px 10px',\n            }}\n        >\n            {edit ? (\n                <EditTitleBar style={style} />\n            ) : (\n                <ViewTitleBar style={style} />\n            )}\n        </div>\n    );\n};\n\nTitleBar.propTypes = {\n    edit: PropTypes.bool,\n};\n\nexport default TitleBar;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nimport i18n from '@dhis2/d2-i18n';\n\nimport * as pluginManager from './plugin';\nimport { getBaseUrl, orObject } from '../../../modules/util';\nimport { getGridItemDomId } from '../../ItemGrid/gridUtil';\n\nconst pluginCredentials = d2 => {\n    return {\n        baseUrl: getBaseUrl(d2),\n        auth: d2.Api.getApi().defaultHeaders.Authorization,\n    };\n};\n\nclass DefaultPlugin extends Component {\n    pluginCredentials = null;\n\n    constructor(props, context) {\n        super(props);\n\n        this.d2 = context.d2;\n    }\n\n    shouldPluginReload = prevProps => {\n        // TODO - fix this hack, to handle bug with multiple\n        // rerendering while switching between dashboards.\n        //\n        // To determine if the rendering is happening because of a\n        // dashboard switch, check if the item reference has changed.\n        const reloadAllowed = this.props.item === prevProps.item;\n\n        const filtersChanged = prevProps.itemFilters !== this.props.itemFilters;\n        const vis = orObject(this.props.visualization);\n        const prevVis = orObject(prevProps.visualization);\n        const visChanged =\n            vis.id !== prevVis.id || vis.activeType !== prevVis.activeType;\n\n        return reloadAllowed && (visChanged || filtersChanged);\n    };\n\n    reloadPlugin = prevProps => {\n        if (\n            pluginManager.pluginIsAvailable(\n                this.props.item,\n                this.props.visualization\n            ) &&\n            this.shouldPluginReload(prevProps)\n        ) {\n            const prevVis = orObject(prevProps.visualization);\n            const currentVis = this.props.visualization;\n\n            const useActiveType =\n                currentVis.activeType !== prevVis.activeType ||\n                currentVis.activeType !== this.props.item.type;\n\n            if (\n                useActiveType ||\n                this.props.itemFilters !== prevProps.itemFilters\n            ) {\n                pluginManager.unmount(\n                    this.props.item,\n                    prevVis.activeType || this.props.item.type\n                );\n\n                pluginManager.load(this.props.item, this.props.visualization, {\n                    credentials: this.pluginCredentials,\n                    activeType: useActiveType ? currentVis.activeType : null,\n                });\n            }\n        }\n    };\n\n    componentDidMount() {\n        this.pluginCredentials = pluginCredentials(this.d2);\n\n        if (\n            pluginManager.pluginIsAvailable(\n                this.props.item,\n                this.props.visualization\n            )\n        ) {\n            pluginManager.load(this.props.item, this.props.visualization, {\n                credentials: this.pluginCredentials,\n                activeType: !this.props.editMode ? this.getActiveType() : null,\n            });\n        }\n    }\n\n    componentDidUpdate(prevProps) {\n        this.reloadPlugin(prevProps);\n    }\n\n    getActiveType = () =>\n        this.props.visualization.activeType || this.props.item.type;\n\n    render() {\n        const { classes, item, visualization, style } = this.props;\n        const pluginIsAvailable = pluginManager.pluginIsAvailable(\n            item,\n            visualization\n        );\n\n        return pluginIsAvailable ? (\n            <div id={getGridItemDomId(item.id)} style={style} />\n        ) : (\n            <div className={classes.textDiv}>\n                {i18n.t('Unable to load the plugin for this item')}\n            </div>\n        );\n    }\n}\n\nDefaultPlugin.contextTypes = {\n    d2: PropTypes.object,\n};\n\nDefaultPlugin.propTypes = {\n    classes: PropTypes.object,\n    editMode: PropTypes.bool,\n    item: PropTypes.object,\n    itemFilters: PropTypes.object,\n    style: PropTypes.object,\n    visualization: PropTypes.object,\n};\n\nDefaultPlugin.defaultProps = {\n    style: {},\n    item: {},\n    itemFilters: {},\n    visualization: {},\n};\n\nexport default DefaultPlugin;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nexport const HEADER_HEIGHT = 45;\n\nconst ItemHeader = props => {\n    const { title, actionButtons, editMode } = props;\n\n    return (\n        <div className=\"dashboard-item-header\">\n            <div\n                className=\"dashboard-item-header-title\"\n                style={{ userSelect: editMode ? 'none' : 'text' }}\n            >\n                {title}\n            </div>\n            {actionButtons}\n        </div>\n    );\n};\n\nItemHeader.propTypes = {\n    actionButtons: PropTypes.node,\n    editMode: PropTypes.bool,\n    title: PropTypes.oneOfType([PropTypes.object, PropTypes.string]),\n};\n\nexport default ItemHeader;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { colors } from '@dhis2/ui-core';\nimport { getId } from './plugin';\nimport InterpretationsComponent from '@dhis2/d2-ui-interpretations';\n\nconst style = {\n    scrollContainer: {\n        overflowY: 'auto',\n        height: '340px',\n    },\n    line: {\n        margin: '-1px 0px 0px',\n        height: '1px',\n        border: 'none',\n        backgroundColor: colors.grey100,\n    },\n};\n\nclass ItemFooter extends Component {\n    render() {\n        const objectId = getId(this.props.item);\n\n        return (\n            <div className=\"dashboard-item-footer\">\n                <hr style={style.line} />\n                <div style={style.scrollContainer}>\n                    <InterpretationsComponent\n                        d2={this.context.d2}\n                        item={this.props.item}\n                        type={this.props.item.type.toLowerCase()}\n                        id={objectId}\n                        appName=\"dashboard\"\n                    />\n                </div>\n            </div>\n        );\n    }\n}\n\nItemFooter.contextTypes = {\n    d2: PropTypes.object.isRequired,\n};\n\nItemFooter.propTypes = {\n    item: PropTypes.object.isRequired,\n};\n\nexport default ItemFooter;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport './ItemHeaderButton.css';\n\nconst ItemHeaderButton = ({ disabled, onClick, children, style }) => {\n    return (\n        <button\n            disabled={disabled}\n            type=\"button\"\n            className=\"item-action-button\"\n            style={style}\n            onClick={onClick}\n        >\n            {children}\n        </button>\n    );\n};\n\nItemHeaderButton.propTypes = {\n    children: PropTypes.node,\n    disabled: PropTypes.bool,\n    style: PropTypes.object,\n    onClick: PropTypes.func,\n};\n\nexport default ItemHeaderButton;\n","import React, { Component, Fragment } from 'react';\nimport PropTypes from 'prop-types';\nimport MessageIcon from '@material-ui/icons/Message';\nimport TableIcon from '@material-ui/icons/ViewList';\nimport ChartIcon from '@material-ui/icons/InsertChart';\nimport MapIcon from '@material-ui/icons/Public';\n\nimport { extractFavorite } from './plugin';\nimport ItemHeaderButton from '../ItemHeaderButton';\nimport {\n    CHART,\n    MAP,\n    REPORT_TABLE,\n    EVENT_CHART,\n    EVENT_REPORT,\n    isTrackerDomainType,\n    hasMapView,\n} from '../../../modules/itemTypes';\nimport { colors, theme } from '@dhis2/ui-core';\nimport { isSingleValue } from '@dhis2/analytics';\n\nconst style = {\n    iconBase: {\n        width: '24px',\n        height: '24px',\n        fill: colors.grey500,\n    },\n    buttonBase: {\n        padding: '5px 6px 3px 6px',\n    },\n    buttonDisabled: {\n        padding: '5px 6px 3px 6px',\n        opacity: 0.5,\n        cursor: 'unset',\n    },\n    toggleFooterPadding: {\n        padding: '7px 6px 1px 6px',\n    },\n    border: {\n        borderRadius: '2px',\n        border: `1px solid ${colors.grey200}`,\n    },\n};\n\nconst baseStyle = {\n    icon: style.iconBase,\n    container: style.buttonBase,\n};\n\nconst disabledStyle = {\n    icon: style.iconBase,\n    container: style.buttonDisabled,\n};\n\nconst activeStyle = {\n    icon: { ...style.iconBase, fill: theme.primary800 },\n    container: {\n        ...style.buttonBase,\n        backgroundColor: theme.primary100,\n    },\n};\n\nconst inactiveStyle = disabled => (disabled ? disabledStyle : baseStyle);\n\nconst tableBtnStyle = (activeType, disabled) =>\n    [REPORT_TABLE, EVENT_REPORT].includes(activeType)\n        ? activeStyle\n        : inactiveStyle(disabled);\n\nconst chartBtnStyle = (activeType, disabled) =>\n    [CHART, EVENT_CHART].includes(activeType)\n        ? activeStyle\n        : inactiveStyle(disabled);\n\nconst mapBtnStyle = (activeType, disabled) =>\n    [MAP].includes(activeType) ? activeStyle : inactiveStyle(disabled);\n\nclass VisualizationItemHeaderButtons extends Component {\n    renderInterpretationButton() {\n        const { activeFooter, onToggleFooter } = this.props;\n\n        const toggleFooterBase = activeFooter ? activeStyle : baseStyle;\n\n        const toggleFooter = {\n            ...toggleFooterBase,\n            container: {\n                ...toggleFooterBase.container,\n                ...style.toggleFooterPadding,\n                ...style.border,\n            },\n        };\n\n        return (\n            <Fragment>\n                <ItemHeaderButton\n                    style={toggleFooter.container}\n                    onClick={onToggleFooter}\n                >\n                    <MessageIcon style={toggleFooter.icon} />\n                </ItemHeaderButton>\n            </Fragment>\n        );\n    }\n\n    renderVisualizationButtons() {\n        const {\n            item,\n            visualization,\n            onSelectActiveType,\n            activeType,\n        } = this.props;\n\n        if (isSingleValue(visualization.type)) {\n            return null;\n        }\n\n        const onViewTable = () =>\n            onSelectActiveType(\n                isTrackerDomainType(item.type) ? EVENT_REPORT : REPORT_TABLE\n            );\n\n        const onViewChart = () =>\n            onSelectActiveType(\n                isTrackerDomainType(item.type) ? EVENT_CHART : CHART\n            );\n\n        const onViewMap = () => onSelectActiveType(MAP);\n\n        // disable toggle buttons\n        let disabled = false;\n\n        if (item.type === CHART) {\n            if (extractFavorite(item).type.match(/^YEAR_OVER_YEAR/)) {\n                disabled = true;\n            }\n        }\n\n        const tableButtonStyle = tableBtnStyle(activeType, disabled);\n        const chartButtonStyle = chartBtnStyle(activeType, disabled);\n        const mapButtonStyle = mapBtnStyle(activeType, disabled);\n\n        return (\n            <div style={{ marginLeft: 10 }}>\n                <div style={style.border}>\n                    <ItemHeaderButton\n                        disabled={disabled}\n                        style={tableButtonStyle.container}\n                        onClick={onViewTable}\n                    >\n                        <TableIcon style={tableButtonStyle.icon} />\n                    </ItemHeaderButton>\n                    <ItemHeaderButton\n                        disabled={disabled}\n                        style={chartButtonStyle.container}\n                        onClick={onViewChart}\n                    >\n                        <ChartIcon style={chartButtonStyle.icon} />\n                    </ItemHeaderButton>\n                    {hasMapView(item.type) ? (\n                        <ItemHeaderButton\n                            disabled={disabled}\n                            style={mapButtonStyle.container}\n                            onClick={onViewMap}\n                        >\n                            <MapIcon style={mapButtonStyle.icon} />\n                        </ItemHeaderButton>\n                    ) : null}\n                </div>\n            </div>\n        );\n    }\n\n    render() {\n        return (\n            <Fragment>\n                {this.renderInterpretationButton()}\n                {this.renderVisualizationButtons()}\n            </Fragment>\n        );\n    }\n}\n\nVisualizationItemHeaderButtons.propTypes = {\n    activeFooter: PropTypes.bool,\n    activeType: PropTypes.string,\n    item: PropTypes.object,\n    visualization: PropTypes.object,\n    onSelectActiveType: PropTypes.func,\n    onToggleFooter: PropTypes.func,\n};\n\nexport default VisualizationItemHeaderButtons;\n","// Note that this ignores discrepancies in 'this', so shouldn't be used with bound functions\n// This is useful instead of lodash/memoize when we only need to memoize a single value\n// Inspiration: https://github.com/alexreardon/memoize-one\n\nconst memoizeOne = fn => {\n    let lastArgs = undefined;\n    let lastValue = undefined;\n\n    return (...args) => {\n        if (\n            lastArgs &&\n            args.length === lastArgs.length &&\n            args.every((arg, i) => arg === lastArgs[i])\n        ) {\n            return lastValue;\n        }\n        lastArgs = args;\n        lastValue = fn(...args);\n        return lastValue;\n    };\n};\n\nexport default memoizeOne;\n","import React, { Component, Fragment } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { withStyles } from '@material-ui/core/styles';\nimport LaunchIcon from '@material-ui/icons/Launch';\nimport VisualizationPlugin from '@dhis2/data-visualizer-plugin';\n\nimport i18n from '@dhis2/d2-i18n';\nimport uniqueId from 'lodash/uniqueId';\n\nimport DefaultPlugin from './DefaultPlugin';\nimport ItemHeader, { HEADER_HEIGHT } from '../ItemHeader';\nimport ItemFooter from './ItemFooter';\nimport VisualizationItemHeaderButtons from './ItemHeaderButtons';\nimport * as pluginManager from './plugin';\nimport { sGetVisualization } from '../../../reducers/visualizations';\nimport { sGetItemFiltersRoot } from '../../../reducers/itemFilters';\nimport {\n    acAddVisualization,\n    acSetActiveVisualizationType,\n} from '../../../actions/visualizations';\nimport {\n    MAP,\n    CHART,\n    REPORT_TABLE,\n    itemTypeMap,\n} from '../../../modules/itemTypes';\n\nimport { colors } from '@dhis2/ui-core';\nimport memoizeOne from '../../../modules/memoizeOne';\nimport { getVisualizationConfig } from './plugin';\n\nconst styles = {\n    icon: {\n        width: 16,\n        height: 16,\n        marginLeft: 3,\n        cursor: 'pointer',\n        fill: colors.grey600,\n    },\n    title: {\n        overflow: 'hidden',\n        maxWidth: '85%',\n        textOverflow: 'ellipsis',\n        whiteSpace: 'nowrap',\n    },\n    textDiv: {\n        fontSize: '14px',\n        fontStretch: 'normal',\n        padding: '10px',\n        lineHeight: '20px',\n    },\n};\n\nconst applyFilters = (visualization, filters) => {\n    if (!Object.keys(filters).length) {\n        return visualization;\n    }\n\n    // deep clone objects in filters to avoid changing the visualization in the Redux store\n    const visRows = visualization.rows.map(obj => ({ ...obj }));\n    const visColumns = visualization.columns.map(obj => ({ ...obj }));\n    const visFilters = visualization.filters.map(obj => ({ ...obj }));\n\n    Object.keys(filters).forEach(dimensionId => {\n        if (filters[dimensionId]) {\n            let dimensionFound = false;\n\n            [visRows, visColumns, visFilters].forEach(dimensionObjects =>\n                dimensionObjects\n                    .filter(obj => obj.dimension === dimensionId)\n                    .forEach(obj => {\n                        dimensionFound = true;\n                        obj.items = filters[dimensionId];\n                    })\n            );\n\n            // add dimension to filters if not already present elsewhere\n            if (!dimensionFound) {\n                visFilters.push({\n                    dimension: dimensionId,\n                    items: filters[dimensionId],\n                });\n            }\n        }\n    });\n\n    return {\n        ...visualization,\n        rows: visRows,\n        columns: visColumns,\n        filters: visFilters,\n    };\n};\n\nexport class Item extends Component {\n    state = {\n        showFooter: false,\n        configLoaded: false,\n    };\n\n    constructor(props, context) {\n        super(props);\n\n        this.d2 = context.d2;\n\n        this.contentRef = React.createRef();\n    }\n\n    async componentDidMount() {\n        this.props.onVisualizationLoaded(\n            // TODO do not call fetch on the pluginManager, do it here as the manager will eventually be removed...\n            await pluginManager.fetch(this.props.item)\n        );\n\n        this.setState({\n            configLoaded: true,\n        });\n    }\n\n    getUniqueKey = memoizeOne(() => uniqueId());\n\n    pluginCredentials = null;\n\n    getPluginComponent = () => {\n        const activeType = this.getActiveType();\n        const visualization = getVisualizationConfig(\n            this.props.visualization,\n            this.props.item.type,\n            activeType\n        );\n\n        if (!visualization) {\n            return (\n                <div className={this.props.classes.textDiv}>\n                    {i18n.t('No data to display')}\n                </div>\n            );\n        }\n\n        const props = {\n            ...this.props,\n            visualization,\n            style: this.getContentStyle(),\n        };\n\n        switch (activeType) {\n            case CHART:\n            case REPORT_TABLE: {\n                return (\n                    <VisualizationPlugin\n                        d2={this.d2}\n                        visualization={applyFilters(\n                            visualization,\n                            props.itemFilters\n                        )}\n                        forDashboard={true}\n                        style={props.style}\n                    />\n                );\n            }\n            case MAP: {\n                if (props.item.type === MAP) {\n                    // apply filters only to thematic and event layers\n                    // for maps AO\n                    const mapViews = props.visualization.mapViews.map(obj => {\n                        if (\n                            obj.layer.includes('thematic') ||\n                            obj.layer.includes('event')\n                        ) {\n                            return applyFilters(obj, props.itemFilters);\n                        }\n\n                        return obj;\n                    });\n\n                    props.visualization = {\n                        ...props.visualization,\n                        mapViews,\n                    };\n                } else {\n                    // this is the case of a non map AO passed to the maps plugin\n                    // due to a visualization type switch in dashboard item\n                    // maps plugin takes care of converting the AO to a suitable format\n                    props.visualization = applyFilters(\n                        props.visualization,\n                        props.itemFilters\n                    );\n                }\n\n                return <DefaultPlugin {...props} />;\n            }\n            default: {\n                props.visualization = applyFilters(\n                    props.visualization,\n                    props.itemFilters\n                );\n\n                return <DefaultPlugin {...props} />;\n            }\n        }\n    };\n\n    onToggleFooter = () => {\n        this.setState(\n            { showFooter: !this.state.showFooter },\n            this.props.onToggleItemExpanded(this.props.item.id)\n        );\n    };\n\n    onSelectActiveType = type => {\n        if (type === this.getActiveType()) {\n            return;\n        }\n\n        pluginManager.unmount(this.props.item, this.getActiveType());\n\n        this.props.onSelectActiveType(this.props.visualization.id, type);\n    };\n\n    getActiveType = () =>\n        this.props.visualization.activeType || this.props.item.type;\n\n    pluginIsAvailable = () =>\n        pluginManager.pluginIsAvailable(\n            this.props.item,\n            this.props.visualization\n        );\n\n    getTitle = () => {\n        const { item, editMode, classes } = this.props;\n        const itemName = pluginManager.getName(item);\n\n        return (\n            <div style={{ display: 'flex' }}>\n                <span className={classes.title} title={itemName}>\n                    {itemName}\n                </span>\n                {!editMode && this.pluginIsAvailable() ? (\n                    <a\n                        href={pluginManager.getLink(this.props.item, this.d2)}\n                        style={{ height: 16 }}\n                        title={`View in ${\n                            itemTypeMap[this.props.item.type].appName\n                        } app`}\n                    >\n                        <LaunchIcon className={classes.icon} />\n                    </a>\n                ) : null}\n            </div>\n        );\n    };\n\n    getActionButtons = () =>\n        pluginManager.pluginIsAvailable(\n            this.props.item,\n            this.props.visualization\n        ) && !this.props.editMode ? (\n            <VisualizationItemHeaderButtons\n                item={this.props.item}\n                visualization={this.props.visualization}\n                activeFooter={this.state.showFooter}\n                activeType={this.getActiveType()}\n                onSelectActiveType={this.onSelectActiveType}\n                onToggleFooter={this.onToggleFooter}\n            />\n        ) : null;\n\n    getContentStyle = () => {\n        const { item, editMode } = this.props;\n        const PADDING_BOTTOM = 4;\n\n        return !editMode\n            ? {\n                  height: item.originalHeight - HEADER_HEIGHT - PADDING_BOTTOM,\n              }\n            : { height: this.contentRef.offsetHeight };\n    };\n\n    render() {\n        const { item, editMode, itemFilters } = this.props;\n        const { showFooter } = this.state;\n\n        return (\n            <Fragment>\n                <ItemHeader\n                    title={this.getTitle()}\n                    actionButtons={this.getActionButtons()}\n                    editMode={editMode}\n                />\n                <div\n                    key={this.getUniqueKey(itemFilters)}\n                    className=\"dashboard-item-content\"\n                    ref={ref => (this.contentRef = ref)}\n                >\n                    {this.state.configLoaded && this.getPluginComponent()}\n                </div>\n                {!editMode && showFooter ? <ItemFooter item={item} /> : null}\n            </Fragment>\n        );\n    }\n}\n\nItem.contextTypes = {\n    d2: PropTypes.object,\n};\n\nItem.propTypes = {\n    classes: PropTypes.object,\n    editMode: PropTypes.bool,\n    item: PropTypes.object,\n    itemFilters: PropTypes.object,\n    visualization: PropTypes.object,\n    onSelectActiveType: PropTypes.func,\n    onToggleItemExpanded: PropTypes.func,\n    onVisualizationLoaded: PropTypes.func,\n};\n\nItem.defaultProps = {\n    item: {},\n    editMode: false,\n    onToggleItemExpanded: Function.prototype,\n    itemFilters: {},\n    visualization: {},\n};\n\nconst mapStateToProps = (state, ownProps) => ({\n    itemFilters: sGetItemFiltersRoot(state),\n    visualization: sGetVisualization(\n        state,\n        pluginManager.extractFavorite(ownProps.item).id\n    ),\n});\n\nconst mapDispatchToProps = dispatch => ({\n    onVisualizationLoaded: visualization =>\n        dispatch(acAddVisualization(visualization)),\n    onSelectActiveType: (id, type, activeType) =>\n        dispatch(acSetActiveVisualizationType(id, type, activeType)),\n});\n\nexport default connect(\n    mapStateToProps,\n    mapDispatchToProps\n)(withStyles(styles)(Item));\n","import React from 'react';\nimport { colors } from '@dhis2/ui-core';\n\nconst style = {\n    backgroundColor: colors.grey200,\n    border: 'none',\n    height: '1px',\n    margin: '0px 0px 5px 0px',\n};\n\nconst Line = () => <hr style={style} />;\n\nexport default Line;\n","import React, { Component, Fragment } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport i18n from '@dhis2/d2-i18n';\n\nimport { sGetMessagesRoot } from '../../../reducers/messages';\nimport { formatDate } from '../../../modules/util';\nimport { colors } from '@dhis2/ui-core';\nimport ItemHeader from '../ItemHeader';\nimport Line from '../../../widgets/Line';\n\nimport './MessagesItem.css';\n\nconst PRIVATE = 'PRIVATE';\n\nconst messageTypes = {\n    [PRIVATE]: 'Private',\n    VALIDATION_RESULT: 'Validation',\n    TICKET: 'Ticket',\n    SYSTEM: 'System',\n};\n\nconst style = {\n    list: {\n        listStyleType: 'none',\n        paddingLeft: '0px',\n    },\n    seeAll: {\n        textAlign: 'center',\n        fontSize: '13px',\n        marginBottom: '5px',\n    },\n    sender: {\n        fontSize: '13px',\n        lineHeight: '15px',\n        margin: 0,\n        color: colors.grey800,\n    },\n    snippet: {\n        color: colors.grey800,\n        fontSize: '13px',\n        lineHeight: '15px',\n        maxHeight: '30px',\n        overflow: 'hidden',\n    },\n};\n\nclass MessagesItem extends Component {\n    state = {\n        uiLocale: '',\n    };\n\n    async componentDidMount() {\n        const uiLocale = await this.context.d2.currentUser.userSettings.get(\n            'keyUiLocale'\n        );\n\n        this.setState({ uiLocale });\n    }\n\n    getMessageHref = msg => {\n        const msgIdentifier = msg ? `#/${msg.messageType}/${msg.id}` : '';\n        return `${this.context.baseUrl}/dhis-web-messaging/${msgIdentifier}`;\n    };\n\n    getMessageSender = msg => {\n        const latestMsg = msg.messages.slice(-1)[0];\n        return latestMsg.sender ? latestMsg.sender.displayName : '';\n    };\n\n    getMessageItems = () => {\n        const editClass = !this.props.editMode ? 'view' : null;\n\n        return this.props.messages.map(msg => {\n            const redirectToMsg = () => {\n                if (!this.props.editMode) {\n                    document.location.href = this.getMessageHref(msg);\n                }\n            };\n\n            const sender =\n                msg.messageType === PRIVATE\n                    ? this.getMessageSender(msg)\n                    : messageTypes[msg.messageType];\n\n            const readClass = !msg.read ? 'unread' : null;\n            const latestMsg = msg.messages.slice(-1)[0];\n            const msgDate = latestMsg.lastUpdated;\n\n            return (\n                <li\n                    className={`message-item ${editClass}`}\n                    key={msg.id}\n                    onClick={redirectToMsg}\n                >\n                    <p className={`message-title ${readClass}`}>\n                        {msg.displayName} ({msg.messageCount})\n                    </p>\n                    <p style={style.sender}>\n                        {sender} - {formatDate(msgDate, this.state.uiLocale)}\n                    </p>\n                    <p style={style.snippet}>{latestMsg.text}</p>\n                </li>\n            );\n        });\n    };\n\n    render() {\n        return (\n            <Fragment>\n                <ItemHeader title={i18n.t('Messages')} />\n                <Line />\n                {this.props.messages.length > 0 && (\n                    <div className=\"dashboard-item-content\">\n                        <ul style={style.list}>{this.getMessageItems()}</ul>\n                        <div style={style.seeAll}>\n                            <a href={this.getMessageHref()}>\n                                {i18n.t('See all messages')}\n                            </a>\n                        </div>\n                    </div>\n                )}\n            </Fragment>\n        );\n    }\n}\n\nMessagesItem.propTypes = {\n    editMode: PropTypes.bool,\n    messages: PropTypes.array,\n};\n\nMessagesItem.contextTypes = {\n    d2: PropTypes.object,\n    baseUrl: PropTypes.string,\n};\n\nconst mapStateToProps = state => {\n    return {\n        messages: Object.values(sGetMessagesRoot(state)),\n    };\n};\n\nconst MessagesContainer = connect(\n    mapStateToProps,\n    null\n)(MessagesItem);\n\nexport default MessagesContainer;\n","import React, { Fragment } from 'react';\nimport PropTypes from 'prop-types';\nimport ItemHeader from '../ItemHeader';\nimport NotInterestedIcon from '@material-ui/icons/NotInterested';\n\nconst NotSupportedItem = props => (\n    <Fragment>\n        <ItemHeader title={`Item type not supported: ${props.item.type}`} />\n        <div\n            style={{\n                display: 'flex',\n                justifyContent: 'center',\n                alignItems: 'center',\n                height: '90%',\n            }}\n        >\n            <NotInterestedIcon\n                style={{ width: 100, height: 100, align: 'center' }}\n                color=\"disabled\"\n            />\n        </div>\n    </Fragment>\n);\n\nNotSupportedItem.propTypes = {\n    item: PropTypes.object,\n};\n\nexport default NotSupportedItem;\n","import React from 'react';\nimport { colors } from '@dhis2/ui-core';\nimport PropTypes from 'prop-types';\n\nconst DescriptionIcon = ({ className }) => (\n    <svg\n        className={className}\n        xmlns=\"http://www.w3.org/2000/svg\"\n        viewBox=\"0 0 24 24\"\n        fill={colors.grey500}\n    >\n        <path d=\"M0 0h24v24H0z\" fill=\"none\" />\n        <path d=\"M14 2H6c-1.1 0-1.99.9-1.99 2L4 20c0 1.1.89 2 1.99 2H18c1.1 0 2-.9 2-2V8l-6-6zm2 16H8v-2h8v2zm0-4H8v-2h8v2zm-3-5V3.5L18.5 9H13z\" />\n    </svg>\n);\n\nDescriptionIcon.propTypes = {\n    className: PropTypes.string,\n};\n\nexport default DescriptionIcon;\n","import React from 'react';\nimport { colors } from '@dhis2/ui-core';\nimport PropTypes from 'prop-types';\n\nconst DeleteIcon = ({ className }) => (\n    <svg\n        className={className}\n        xmlns=\"http://www.w3.org/2000/svg\"\n        width=\"18\"\n        height=\"18\"\n        viewBox=\"0 0 24 24\"\n        fill={colors.red500}\n    >\n        <path d=\"M6 19c0 1.1.9 2 2 2h8c1.1 0 2-.9 2-2V7H6v12zM19 4h-3.5l-1-1h-5l-1 1H5v2h14V4z\" />\n        <path d=\"M0 0h24v24H0z\" fill=\"none\" />\n    </svg>\n);\n\nDeleteIcon.propTypes = {\n    className: PropTypes.string,\n};\n\nexport default DeleteIcon;\n","import React, { Fragment } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { colors } from '@dhis2/ui-core';\nimport DescriptionIcon from '../../../icons/Description';\n\nimport DeleteIcon from '../../../icons/Delete';\nimport Line from '../../../widgets/Line';\nimport { itemTypeMap, getItemUrl } from '../../../modules/itemTypes';\nimport { orArray } from '../../../modules/util';\nimport { tRemoveListItemContent } from './actions';\nimport ItemHeader from '../ItemHeader';\nimport classes from './Item.module.css';\n\nconst getItemTitle = item => itemTypeMap[item.type].pluralTitle;\n\nconst getContentItems = item =>\n    orArray(item[itemTypeMap[item.type].propName]).filter(\n        (item, index, array) =>\n            array.findIndex(el => el.id === item.id) === index\n    );\n\nconst ListItem = (props, context) => {\n    const { item, editMode, tRemoveListItemContent } = props;\n    const contentItems = getContentItems(item);\n\n    const getLink = contentItem => {\n        const deleteButton = (\n            <button\n                className={classes.deletebutton}\n                onClick={() => tRemoveListItemContent(item, contentItem)}\n            >\n                <DeleteIcon className={classes.deleteicon} />\n            </button>\n        );\n\n        return (\n            <Fragment>\n                <a\n                    className={classes.link}\n                    style={{ color: colors.grey900 }}\n                    href={getItemUrl(item.type, contentItem, context.d2)}\n                >\n                    {contentItem.name}\n                </a>\n                {editMode ? deleteButton : null}\n            </Fragment>\n        );\n    };\n\n    return (\n        <Fragment>\n            <ItemHeader title={getItemTitle(item)} />\n            <Line />\n            <div className=\"dashboard-item-content\">\n                <ul className={classes.list}>\n                    {contentItems.map(contentItem => (\n                        <li className={classes.item} key={contentItem.id}>\n                            <DescriptionIcon className={classes.itemicon} />\n                            {getLink(contentItem)}\n                        </li>\n                    ))}\n                </ul>\n            </div>\n        </Fragment>\n    );\n};\n\nListItem.propTypes = {\n    editMode: PropTypes.bool,\n    item: PropTypes.object,\n    tRemoveListItemContent: PropTypes.func,\n};\n\nListItem.contextTypes = {\n    d2: PropTypes.object,\n};\n\nexport default connect(\n    null,\n    {\n        tRemoveListItemContent,\n    }\n)(ListItem);\n","import {\n    acUpdateDashboardItem,\n    acRemoveDashboardItem,\n} from '../../../actions/editDashboard';\nimport { itemTypeMap } from '../../../modules/itemTypes';\n\nexport const tRemoveListItemContent = (dashboardItem, content) => dispatch => {\n    const listItemType = itemTypeMap[dashboardItem.type].propName;\n\n    const newContent = dashboardItem[listItemType].filter(\n        item => item.id !== content.id\n    );\n\n    if (newContent.length) {\n        dashboardItem[listItemType] = newContent;\n        dispatch(acUpdateDashboardItem(dashboardItem));\n    } else {\n        dispatch(acRemoveDashboardItem(dashboardItem));\n    }\n};\n","import React, { Fragment } from 'react';\nimport { connect } from 'react-redux';\nimport i18n from '@dhis2/d2-i18n';\nimport PropTypes from 'prop-types';\n\nimport Input from '@material-ui/core/Input';\nimport {\n    Parser as RichTextParser,\n    Editor as RichTextEditor,\n} from '@dhis2/d2-ui-rich-text';\n\nimport { acUpdateDashboardItem } from '../../../actions/editDashboard';\nimport { sGetEditDashboardItems } from '../../../reducers/editDashboard';\nimport { sGetDashboardItems } from '../../../reducers/dashboards';\nimport ItemHeader from '../ItemHeader';\nimport Line from '../../../widgets/Line';\n\nconst style = {\n    textDiv: {\n        padding: '10px',\n        whiteSpace: 'pre-line',\n        lineHeight: '20px',\n    },\n    textField: {\n        fontSize: '14px',\n        fontStretch: 'normal',\n        width: '90%',\n        margin: '0 auto',\n        display: 'block',\n        lineHeight: '24px',\n    },\n    container: {\n        marginBottom: '20px',\n        marginTop: '20px',\n    },\n};\n\nconst TextItem = props => {\n    const { item, editMode, text, acUpdateDashboardItem } = props;\n\n    const onChangeText = event => {\n        const updatedItem = {\n            ...item,\n            text: event.target.value,\n        };\n\n        acUpdateDashboardItem(updatedItem);\n    };\n\n    const viewItem = () => {\n        const textDivStyle = Object.assign({}, style.textField, style.textDiv);\n        return (\n            <div className=\"dashboard-item-content\" style={style.container}>\n                <RichTextParser style={textDivStyle}>{text}</RichTextParser>\n            </div>\n        );\n    };\n\n    const editItem = () => {\n        return (\n            <Fragment>\n                <ItemHeader title={i18n.t('Text item')} />\n                <Line />\n                <div className=\"dashboard-item-content\">\n                    <RichTextEditor onEdit={onChangeText}>\n                        <Input\n                            value={text}\n                            multiline\n                            fullWidth\n                            style={style.textField}\n                            placeholder={i18n.t('Add text here')}\n                            onChange={onChangeText}\n                        />\n                    </RichTextEditor>\n                </div>\n            </Fragment>\n        );\n    };\n\n    return <Fragment>{editMode ? editItem() : viewItem()}</Fragment>;\n};\n\nconst mapStateToProps = (state, ownProps) => {\n    const items = ownProps.editMode\n        ? sGetEditDashboardItems(state)\n        : sGetDashboardItems(state);\n\n    const item = items.find(item => item.id === ownProps.item.id);\n\n    return {\n        text: item ? item.text : '',\n    };\n};\n\nTextItem.propTypes = {\n    acUpdateDashboardItem: PropTypes.func,\n    editMode: PropTypes.bool,\n    item: PropTypes.object,\n    text: PropTypes.string,\n};\n\nexport default connect(\n    mapStateToProps,\n    {\n        acUpdateDashboardItem,\n    }\n)(TextItem);\n","import React, { Fragment } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport NotInterestedIcon from '@material-ui/icons/NotInterested';\n\nimport { FILTER_ORG_UNIT } from '../../../actions/itemFilters';\nimport { sGetItemFiltersRoot } from '../../../reducers/itemFilters';\nimport ItemHeader from '../ItemHeader';\nimport Line from '../../../widgets/Line';\n\nconst getIframeSrc = (appDetails, item, itemFilters) => {\n    let iframeSrc = `${appDetails.launchUrl}?dashboardItemId=${item.id}`;\n\n    if (\n        itemFilters &&\n        itemFilters[FILTER_ORG_UNIT] &&\n        itemFilters[FILTER_ORG_UNIT].length\n    ) {\n        const ouIds = itemFilters[FILTER_ORG_UNIT].map(\n            ouPath => ouPath.split('/').slice(-1)[0]\n        );\n\n        iframeSrc += `&userOrgUnit=${ouIds.join(',')}`;\n    }\n\n    return iframeSrc;\n};\n\nconst AppItem = ({ item, itemFilters }, context) => {\n    let appDetails;\n\n    const appKey = item.appKey;\n\n    if (appKey) {\n        appDetails = context.d2.system.installedApps.find(\n            app => app.key === appKey\n        );\n    }\n\n    return appDetails && appDetails.name && appDetails.launchUrl ? (\n        <Fragment>\n            <ItemHeader title={appDetails.name} />\n            <Line />\n            <iframe\n                title={appDetails.name}\n                src={getIframeSrc(appDetails, item, itemFilters)}\n                className=\"dashboard-item-content\"\n                style={{ border: 'none' }}\n            />\n        </Fragment>\n    ) : (\n        <Fragment>\n            <ItemHeader title={`${appKey} app not found`} />\n            <Line />\n            <div\n                className=\"dashboard-item-content\"\n                style={{\n                    display: 'flex',\n                    justifyContent: 'center',\n                    alignItems: 'center',\n                    height: '90%',\n                }}\n            >\n                <NotInterestedIcon\n                    color=\"disabled\"\n                    disabled\n                    style={{ width: 100, height: 100, align: 'center' }}\n                />\n            </div>\n        </Fragment>\n    );\n};\n\nAppItem.propTypes = {\n    item: PropTypes.object,\n    itemFilters: PropTypes.object,\n};\n\nAppItem.contextTypes = {\n    d2: PropTypes.object,\n};\n\nconst mapStateToProps = state => ({\n    itemFilters: sGetItemFiltersRoot(state),\n});\n\nexport default connect(mapStateToProps)(AppItem);\n","import React, { Fragment } from 'react';\nimport i18n from '@dhis2/d2-i18n';\n\nimport { colors } from '@dhis2/ui-core';\nimport ItemHeader from '../ItemHeader';\n\nconst style = {\n    margin: '21px 28px',\n    fontSize: '14px',\n    lineHeight: '18px',\n    color: colors.grey600,\n};\n\nconst SpacerItem = () => {\n    return (\n        <Fragment>\n            <ItemHeader title={i18n.t('Spacer')} />\n            <p style={style}>\n                {i18n.t(\n                    'Use a spacer to create empty vertical space between other dashboard items.'\n                )}\n            </p>\n        </Fragment>\n    );\n};\n\nexport default SpacerItem;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport VisualizationItem from './VisualizationItem/Item';\nimport MessagesItem from './MessagesItem/Item';\nimport NotSupportedItem from './NotSupportedItem/Item';\nimport ListItem from './ListItem/Item';\nimport TextItem from './TextItem/Item';\nimport AppItem from './AppItem/Item';\nimport SpacerItem from './SpacerItem/Item';\nimport {\n    APP,\n    REPORT_TABLE,\n    CHART,\n    MAP,\n    EVENT_CHART,\n    EVENT_REPORT,\n    MESSAGES,\n    REPORTS,\n    RESOURCES,\n    USERS,\n    TEXT,\n    SPACER,\n} from '../../modules/itemTypes';\nimport { DEFAULT_STATE_ITEM_FILTERS } from '../../reducers/itemFilters';\n\nconst getGridItem = type => {\n    switch (type) {\n        case REPORT_TABLE:\n        case CHART:\n        case MAP:\n        case EVENT_CHART:\n        case EVENT_REPORT:\n            return VisualizationItem;\n        case MESSAGES:\n            return MessagesItem;\n        case REPORTS:\n        case RESOURCES:\n        case USERS:\n            return ListItem;\n        case TEXT:\n            return TextItem;\n        case SPACER:\n            return SpacerItem;\n        case APP:\n            return AppItem;\n        default:\n            return NotSupportedItem;\n    }\n};\n\nexport const Item = props => {\n    const GridItem = getGridItem(props.item.type);\n\n    return (\n        <GridItem\n            item={props.item}\n            editMode={props.editMode}\n            itemFilters={\n                props.editMode ? DEFAULT_STATE_ITEM_FILTERS : props.itemFilters\n            }\n            onToggleItemExpanded={props.onToggleItemExpanded}\n        />\n    );\n};\n\nItem.propTypes = {\n    editMode: PropTypes.bool,\n    item: PropTypes.object,\n    itemFilters: PropTypes.object,\n    onToggleItemExpanded: PropTypes.func,\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport ItemHeaderButton from '../Item/ItemHeaderButton';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport { colors } from '@dhis2/ui-core';\n\nconst style = {\n    button: {\n        position: 'absolute',\n        top: '7px',\n        right: '7px',\n        zIndex: '1000',\n    },\n    icon: {\n        fill: colors.red500,\n    },\n};\n\nconst DeleteItemHeaderButton = ({ onClick }) => (\n    <ItemHeaderButton onClick={onClick} style={style.button}>\n        <DeleteIcon style={style.icon} />\n    </ItemHeaderButton>\n);\n\nDeleteItemHeaderButton.propTypes = {\n    onClick: PropTypes.func,\n};\n\nexport default DeleteItemHeaderButton;\n","import React from 'react';\nimport { colors } from '@dhis2/ui-core';\nimport PropTypes from 'prop-types';\n\nexport const NoContentMessage = ({ text }) => (\n    <div\n        style={{\n            padding: '50px 10px',\n            textAlign: 'center',\n            fontSize: '15px',\n            fontWeight: 500,\n            color: colors.grey600,\n        }}\n    >\n        {text}\n    </div>\n);\n\nNoContentMessage.propTypes = {\n    text: PropTypes.string,\n};\n\nexport default NoContentMessage;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport debounce from 'lodash/debounce';\nimport pick from 'lodash/pick';\n\nconst defaultDebounceMs = 100;\nconst defaultBufferFactor = 0.25;\n\nclass ProgressiveLoadingContainer extends Component {\n    static propTypes = {\n        children: PropTypes.node.isRequired,\n        bufferFactor: PropTypes.number,\n        className: PropTypes.string,\n        debounceMs: PropTypes.number,\n        style: PropTypes.object,\n    };\n    static defaultProps = {\n        debounceMs: defaultDebounceMs,\n        bufferFactor: defaultBufferFactor,\n    };\n\n    state = {\n        shouldLoad: false,\n    };\n    containerRef = null;\n    shouldLoadHandler = null;\n\n    checkShouldLoad() {\n        const bufferPx = this.props.bufferFactor * window.innerHeight;\n\n        if (!this.containerRef) {\n            return;\n        }\n\n        const rect = this.containerRef.getBoundingClientRect();\n        if (\n            rect.bottom > -bufferPx &&\n            rect.top < window.innerHeight + bufferPx\n        ) {\n            this.setState({\n                shouldLoad: true,\n            });\n\n            this.removeHandler();\n        }\n    }\n\n    registerHandler() {\n        this.shouldLoadHandler = debounce(\n            () => this.checkShouldLoad(),\n            this.props.debounceMs\n        );\n\n        window.addEventListener('scroll', this.shouldLoadHandler);\n    }\n    removeHandler() {\n        window.removeEventListener('scroll', this.shouldLoadHandler);\n    }\n\n    componentDidMount() {\n        this.registerHandler();\n        this.checkShouldLoad();\n    }\n\n    componentWillUnmount() {\n        this.removeHandler();\n    }\n\n    render() {\n        const { children, className, style, ...props } = this.props;\n        const { shouldLoad } = this.state;\n\n        const eventProps = pick(props, [\n            'onMouseDown',\n            'onTouchStart',\n            'onMouseUp',\n            'onTouchEnd',\n        ]);\n\n        return (\n            <div\n                ref={ref => (this.containerRef = ref)}\n                style={style}\n                className={className}\n                {...eventProps}\n            >\n                {shouldLoad && children}\n            </div>\n        );\n    }\n}\n\nexport default ProgressiveLoadingContainer;\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport i18n from '@dhis2/d2-i18n';\nimport ReactGridLayout from 'react-grid-layout';\nimport { CircularLoader, ScreenCover } from '@dhis2/ui-core';\n\nimport {\n    acUpdateDashboardLayout,\n    acRemoveDashboardItem,\n} from '../../actions/editDashboard';\nimport { Item } from '../Item/Item';\nimport { resize as pluginResize } from '../Item/VisualizationItem/plugin';\nimport { isVisualizationType } from '../../modules/itemTypes';\nimport {\n    GRID_ROW_HEIGHT,\n    GRID_COMPACT_TYPE,\n    ITEM_MIN_HEIGHT,\n    MARGIN,\n    getGridColumns,\n    hasShape,\n    onItemResize,\n} from './gridUtil';\nimport { orArray } from '../../modules/util';\nimport DeleteItemButton from './DeleteItemButton';\nimport NoContentMessage from '../../widgets/NoContentMessage';\n\nimport 'react-grid-layout/css/styles.css';\nimport 'react-resizable/css/styles.css';\n\nimport './ItemGrid.css';\nimport { sGetSelectedId, sGetSelectedIsLoading } from '../../reducers/selected';\nimport {\n    sGetEditDashboardRoot,\n    sGetEditDashboardItems,\n} from '../../reducers/editDashboard';\nimport {\n    sGetDashboardById,\n    sGetDashboardItems,\n} from '../../reducers/dashboards';\nimport ProgressiveLoadingContainer from '../Item/ProgressiveLoadingContainer';\n\n// Component\n\nconst EXPANDED_HEIGHT = 17;\n\nexport class ItemGrid extends Component {\n    state = {\n        expandedItems: {},\n    };\n\n    onToggleItemExpanded = clickedId => {\n        const isExpanded =\n            typeof this.state.expandedItems[clickedId] === 'boolean'\n                ? this.state.expandedItems[clickedId]\n                : false;\n\n        const expandedItems = { ...this.state.expandedItems };\n        expandedItems[clickedId] = !isExpanded;\n        this.setState({ expandedItems });\n    };\n\n    onRemoveItem = clickedId => {\n        this.props.acRemoveDashboardItem(clickedId);\n    };\n\n    componentWillReceiveProps(nextProps) {\n        if (nextProps.edit) {\n            this.setState({ expandedItems: {} });\n        }\n    }\n\n    onLayoutChange = newLayout => {\n        if (this.props.edit) {\n            this.props.acUpdateDashboardLayout(newLayout);\n        }\n    };\n\n    onResizeStop = (layout, oldItem, newItem) => {\n        onItemResize(newItem.i);\n\n        const dashboardItem = this.props.dashboardItems.find(\n            item => item.id === newItem.i\n        );\n\n        // call resize on the item component if it's a plugin type\n        if (dashboardItem && isVisualizationType(dashboardItem)) {\n            pluginResize(dashboardItem);\n        }\n    };\n\n    onRemoveItemWrapper = id => () => this.onRemoveItem(id);\n\n    render() {\n        const { edit, isLoading, dashboardItems } = this.props;\n\n        if (!isLoading && !dashboardItems.length) {\n            return (\n                <NoContentMessage\n                    text={i18n.t('There are no items on this dashboard')}\n                />\n            );\n        }\n\n        const items = dashboardItems.map(item => {\n            const expandedItem = this.state.expandedItems[item.id];\n            const hProp = { h: item.h };\n\n            if (expandedItem && expandedItem === true) {\n                hProp.h = item.h + EXPANDED_HEIGHT;\n            }\n\n            return Object.assign({}, item, hProp, {\n                i: item.id,\n                minH: ITEM_MIN_HEIGHT,\n            });\n        });\n\n        return (\n            <div className=\"grid-wrapper\">\n                {isLoading ? (\n                    <ScreenCover>\n                        <CircularLoader />\n                    </ScreenCover>\n                ) : null}\n                <ReactGridLayout\n                    onLayoutChange={this.onLayoutChange}\n                    onResizeStop={this.onResizeStop}\n                    className=\"layout\"\n                    layout={items}\n                    margin={MARGIN}\n                    cols={getGridColumns()}\n                    rowHeight={GRID_ROW_HEIGHT}\n                    width={window.innerWidth}\n                    compactType={GRID_COMPACT_TYPE}\n                    isDraggable={edit}\n                    isResizable={edit}\n                    draggableCancel=\"input,textarea\"\n                >\n                    {items.map(item => {\n                        const itemClassNames = [\n                            item.type,\n                            edit ? 'edit' : 'view',\n                        ].join(' ');\n\n                        return (\n                            <ProgressiveLoadingContainer\n                                key={item.i}\n                                className={itemClassNames}\n                            >\n                                {edit ? (\n                                    <DeleteItemButton\n                                        onClick={this.onRemoveItemWrapper(\n                                            item.id\n                                        )}\n                                    />\n                                ) : null}\n                                <Item\n                                    item={item}\n                                    editMode={edit}\n                                    onToggleItemExpanded={\n                                        this.onToggleItemExpanded\n                                    }\n                                />\n                            </ProgressiveLoadingContainer>\n                        );\n                    })}\n                </ReactGridLayout>\n            </div>\n        );\n    }\n}\n\nItemGrid.propTypes = {\n    acRemoveDashboardItem: PropTypes.func,\n    acUpdateDashboardLayout: PropTypes.func,\n    dashboardItems: PropTypes.array,\n    edit: PropTypes.bool,\n    isLoading: PropTypes.bool,\n};\n\nItemGrid.defaultProps = {\n    dashboardItems: [],\n};\n\n// Container\n\nconst mapStateToProps = (state, ownProps) => {\n    const selectedDashboard = ownProps.edit\n        ? sGetEditDashboardRoot(state)\n        : sGetDashboardById(state, sGetSelectedId(state));\n\n    const dashboardItems = ownProps.edit\n        ? sGetEditDashboardItems(state)\n        : sGetDashboardItems(state);\n\n    return {\n        isLoading: sGetSelectedIsLoading(state) || !selectedDashboard,\n        dashboardItems,\n    };\n};\n\nconst mapDispatchToProps = {\n    acUpdateDashboardLayout,\n    acRemoveDashboardItem,\n};\n\nconst mergeProps = (stateProps, dispatchProps, ownProps) => {\n    const validItems = orArray(stateProps.dashboardItems).filter(hasShape);\n\n    return {\n        ...dispatchProps,\n        edit: ownProps.edit,\n        isLoading: stateProps.isLoading,\n        dashboardItems: validItems,\n        onItemResize,\n    };\n};\n\nexport default connect(\n    mapStateToProps,\n    mapDispatchToProps,\n    mergeProps\n)(ItemGrid);\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nimport i18n from '@dhis2/d2-i18n';\n\nimport { colors } from '@dhis2/ui-core';\n\nconst styles = {\n    badgeContainer: {\n        margin: '2px',\n        padding: '0 16px',\n        borderRadius: '4px',\n        color: colors.white,\n        backgroundColor: '#212934',\n        height: 36,\n        display: 'flex',\n        alignItems: 'center',\n    },\n    badge: {\n        fontSize: '13px',\n        cursor: 'pointer',\n        whiteSpace: 'nowrap',\n    },\n    badgeRemove: {\n        fontSize: '12px',\n        textDecoration: 'underline',\n        marginLeft: '24px',\n        cursor: 'pointer',\n    },\n};\n\nclass FilterBadge extends Component {\n    onClick = id => () => this.props.onClick(id);\n    onRemove = id => () => this.props.onRemove(id);\n\n    render() {\n        const { data } = this.props;\n\n        return (\n            <div style={styles.badgeContainer}>\n                <span style={styles.badge} onClick={this.onClick(data.id)}>\n                    {`${data.name}: ${\n                        data.values.length > 1\n                            ? i18n.t('{{count}} selected', {\n                                  count: data.values.length,\n                              })\n                            : data.values[0].name\n                    }`}\n                </span>\n                <span\n                    style={styles.badgeRemove}\n                    onClick={this.onRemove(data.id)}\n                >\n                    {i18n.t('Remove')}\n                </span>\n            </div>\n        );\n    }\n}\n\nFilterBadge.propTypes = {\n    data: PropTypes.object.isRequired,\n    onClick: PropTypes.func.isRequired,\n    onRemove: PropTypes.func.isRequired,\n};\n\nFilterBadge.defaultProps = {\n    onClick: Function.prototype,\n    onRemove: Function.prototype,\n};\n\nexport default FilterBadge;\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { createSelector } from 'reselect';\nimport { withStyles } from '@material-ui/core/styles';\n\nimport { sGetDimensions } from '../../reducers/dimensions';\nimport { sGetItemFiltersRoot } from '../../reducers/itemFilters';\nimport { sGetControlBarUserRows } from '../../reducers/controlBar';\nimport { getTopOffset } from '../ControlBar/controlBarDimensions';\nimport { acRemoveItemFilter } from '../../actions/itemFilters';\nimport { acRemoveEditItemFilter } from '../../actions/editItemFilters';\nimport { acSetActiveModalDimension } from '../../actions/activeModalDimension';\n\nimport FilterBadge from './FilterBadge';\n\nconst styles = {\n    bar: {\n        position: 'sticky',\n        zIndex: 7,\n        padding: '8px 0',\n        display: 'flex',\n        justifyContent: 'center',\n        flexWrap: 'wrap',\n    },\n};\n\nexport class FilterBar extends Component {\n    onBadgeRemove = id => {\n        this.props.removeItemFilter(id);\n        this.props.removeEditItemFilter(id);\n    };\n\n    onBadgeClick = id => {\n        this.props.setActiveModalDimension({\n            id,\n            name: this.props.filters.find(item => item.id === id).name,\n        });\n    };\n\n    render() {\n        const { filters, userRows, classes } = this.props;\n        const top = getTopOffset(userRows) + 10;\n\n        return filters.length ? (\n            <div className={classes.bar} style={{ top }}>\n                {filters.map(filter => (\n                    <FilterBadge\n                        key={filter.id}\n                        data={filter}\n                        onClick={this.onBadgeClick}\n                        onRemove={this.onBadgeRemove}\n                    />\n                ))}\n            </div>\n        ) : null;\n    }\n}\n\nFilterBar.propTypes = {\n    filters: PropTypes.array.isRequired,\n    removeEditItemFilter: PropTypes.func.isRequired,\n    removeItemFilter: PropTypes.func.isRequired,\n    classes: PropTypes.object,\n    setActiveModalDimension: PropTypes.func,\n    userRows: PropTypes.number,\n};\n\nFilterBar.defaultProps = {\n    filters: [],\n    removeItemFIlter: Function.prototype,\n    removeEditItemFilter: Function.prototype,\n};\n\n// simplify the filters structure to:\n// [{ id: 'pe', name: 'Period', values: [{ id: 2019: name: '2019' }, {id: 'LAST_MONTH', name: 'Last month' }]}, ...]\nconst filtersSelector = createSelector(\n    [sGetItemFiltersRoot, sGetDimensions],\n    (filters, dimensions) =>\n        Object.keys(filters).reduce((arr, id) => {\n            arr.push({\n                id: id,\n                name: dimensions.find(dimension => dimension.id === id).name,\n                values: filters[id].map(value => ({\n                    id: value.id,\n                    name: value.displayName || value.name,\n                })),\n            });\n\n            return arr;\n        }, [])\n);\n\nconst mapStateToProps = state => ({\n    filters: filtersSelector(state),\n    userRows: sGetControlBarUserRows(state),\n});\n\nexport default connect(\n    mapStateToProps,\n    {\n        setActiveModalDimension: acSetActiveModalDimension,\n        removeItemFilter: acRemoveItemFilter,\n        removeEditItemFilter: acRemoveEditItemFilter,\n    }\n)(withStyles(styles)(FilterBar));\n","import React, { Fragment } from 'react';\nimport PropTypes from 'prop-types';\nimport TitleBar from '../TitleBar/TitleBar';\nimport ItemGrid from '../ItemGrid/ItemGrid';\nimport FilterBar from '../FilterBar/FilterBar';\n\nexport const DashboardContent = props => (\n    <Fragment>\n        <TitleBar edit={props.editMode} />\n        <FilterBar />\n        <ItemGrid edit={props.editMode} />\n    </Fragment>\n);\n\nDashboardContent.propTypes = {\n    editMode: PropTypes.bool,\n};\n\nexport default DashboardContent;\n","import React, { Fragment } from 'react';\nimport { connect } from 'react-redux';\nimport isEmpty from 'lodash/isEmpty';\nimport i18n from '@dhis2/d2-i18n';\nimport PropTypes from 'prop-types';\n\nimport {\n    sGetAllDashboards,\n    sDashboardsIsFetching,\n} from '../../reducers/dashboards';\nimport { sGetSelectedId } from '../../reducers/selected';\nimport DashboardsBar from '../ControlBar/DashboardsBar';\nimport DashboardVerticalOffset from './DashboardVerticalOffset';\nimport DashboardContent from './DashboardContent';\nimport NoContentMessage from '../../widgets/NoContentMessage';\n\nexport const Content = ({ hasDashboardContent, dashboardsIsEmpty }) => {\n    const msg = dashboardsIsEmpty\n        ? i18n.t(\n              'No dashboards found. Use the + button to create a new dashboard.'\n          )\n        : i18n.t('Requested dashboard not found');\n\n    return hasDashboardContent ? (\n        <DashboardContent editMode={false} />\n    ) : (\n        <NoContentMessage text={msg} />\n    );\n};\n\nContent.propTypes = {\n    dashboardsIsEmpty: PropTypes.bool,\n    hasDashboardContent: PropTypes.bool,\n};\n\nexport const ViewDashboard = ({ id, dashboardsIsEmpty, dashboardsLoaded }) => {\n    const hasDashboardContent = id && !dashboardsIsEmpty;\n    const contentNotReady = !dashboardsLoaded || id === null;\n\n    return (\n        <Fragment>\n            <DashboardsBar />\n            <DashboardVerticalOffset />\n            <div className=\"dashboard-wrapper\">\n                {contentNotReady ? null : (\n                    <Content\n                        hasDashboardContent={hasDashboardContent}\n                        dashboardsIsEmpty={dashboardsIsEmpty}\n                    />\n                )}\n            </div>\n        </Fragment>\n    );\n};\n\nViewDashboard.propTypes = {\n    dashboardsIsEmpty: PropTypes.bool,\n    dashboardsLoaded: PropTypes.bool,\n    id: PropTypes.string,\n};\n\nconst mapStateToProps = state => {\n    const dashboards = sGetAllDashboards(state);\n\n    return {\n        id: sGetSelectedId(state),\n        dashboardsIsEmpty: isEmpty(dashboards),\n        dashboardsLoaded: !sDashboardsIsFetching(state),\n    };\n};\n\nexport default connect(mapStateToProps)(ViewDashboard);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport i18n from '@dhis2/d2-i18n';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport { Button } from '@dhis2/ui-core';\n\nexport const ConfirmDeleteDialog = ({\n    dashboardName,\n    onDeleteConfirmed,\n    onContinueEditing,\n    open,\n}) => {\n    const actions = [\n        <Button key=\"cancel\" secondary onClick={onContinueEditing}>\n            {i18n.t('Cancel')}\n        </Button>,\n        <Button key=\"delete\" destructive onClick={onDeleteConfirmed}>\n            {i18n.t('Delete')}\n        </Button>,\n    ];\n\n    return (\n        <Dialog open={open} onClose={onContinueEditing}>\n            <DialogTitle style={{ fontSize: '1.25rem', fontWeight: '450' }}>\n                {i18n.t('Delete dashboard')}\n            </DialogTitle>\n            <DialogContent>\n                <DialogContentText style={{ fontSize: '0.875rem' }}>\n                    {i18n.t(\n                        'Deleting dashboard \"{{ dashboardName }}\" will remove it for all users. This action cannot be undone. Are you sure you want to permanently delete this dashboard?',\n                        { dashboardName }\n                    )}\n                </DialogContentText>\n            </DialogContent>\n            <DialogActions>{actions}</DialogActions>\n        </Dialog>\n    );\n};\n\nConfirmDeleteDialog.propTypes = {\n    dashboardName: PropTypes.string,\n    open: PropTypes.bool,\n    onContinueEditing: PropTypes.func,\n    onDeleteConfirmed: PropTypes.func,\n};\n\nexport default ConfirmDeleteDialog;\n","import React, { Component, Fragment } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { Redirect } from 'react-router-dom';\nimport i18n from '@dhis2/d2-i18n';\nimport ControlBar from './ControlBar';\nimport TranslationDialog from '@dhis2/d2-ui-translation-dialog';\nimport { Button } from '@dhis2/ui-core';\n\nimport ConfirmDeleteDialog from './ConfirmDeleteDialog';\nimport {\n    tSaveDashboard,\n    acClearEditDashboard,\n} from '../../actions/editDashboard';\nimport {\n    tDeleteDashboard,\n    acSetDashboardDisplayName,\n} from '../../actions/dashboards';\nimport {\n    sGetEditDashboardRoot,\n    sGetIsNewDashboard,\n} from '../../reducers/editDashboard';\nimport {\n    CONTROL_BAR_ROW_HEIGHT,\n    MIN_ROW_COUNT,\n    getControlBarHeight,\n} from './controlBarDimensions';\nimport { apiFetchDashboard } from '../../api/dashboards';\n\nimport classes from './styles/DashboardsBar.module.css';\n\nconst buttonBarStyle = {\n    height: CONTROL_BAR_ROW_HEIGHT,\n    paddingTop: '15px',\n    marginLeft: '15px',\n    marginRight: '15px',\n};\n\nexport class EditBar extends Component {\n    state = {\n        translationDialogIsOpen: false,\n        dashboardModel: undefined,\n        confirmDeleteDialogOpen: false,\n        redirectUrl: undefined,\n    };\n\n    onConfirmDelete = () => {\n        this.setState({ confirmDeleteDialogOpen: true });\n    };\n\n    onSave = () => {\n        this.props.onSave().then(newId => {\n            this.setState({ redirectUrl: `/${newId}` });\n        });\n    };\n\n    onDiscard = () => {\n        this.props.onDiscardChanges();\n        const redirectUrl = this.props.dashboardId\n            ? `/${this.props.dashboardId}`\n            : '/';\n        this.setState({ redirectUrl });\n    };\n\n    onContinueEditing = () => {\n        this.setState({ confirmDeleteDialogOpen: false });\n    };\n\n    onDeleteConfirmed = () => {\n        this.setState({ confirmDeleteDialogOpen: false });\n        this.props.onDelete(this.props.dashboardId).then(() => {\n            this.setState({ redirectUrl: '/' });\n        });\n    };\n\n    onTranslationsSaved = async translations => {\n        if (translations && translations.length) {\n            const dbLocale = await this.context.d2.currentUser.userSettings.get(\n                'keyDbLocale'\n            );\n\n            const translation = translations.find(\n                t => t.locale === dbLocale && t.property === 'NAME'\n            );\n\n            if (translation && translation.value) {\n                this.props.onTranslate(\n                    this.props.dashboardId,\n                    translation.value\n                );\n            }\n        }\n    };\n\n    fetchDashboardModel = () => {\n        if (this.props.dashboardId && !this.state.dashboardModel) {\n            apiFetchDashboard(this.props.dashboardId).then(dashboardModel =>\n                this.setState({ dashboardModel })\n            );\n        }\n    };\n\n    componentDidMount() {\n        this.fetchDashboardModel();\n    }\n\n    componentDidUpdate() {\n        this.fetchDashboardModel();\n    }\n\n    toggleTranslationDialog = () => {\n        this.setState({\n            translationDialogIsOpen: !this.state.translationDialogIsOpen,\n        });\n    };\n\n    confirmDeleteDialog = () =>\n        this.props.deleteAccess && this.props.dashboardId ? (\n            <ConfirmDeleteDialog\n                dashboardName={this.props.dashboardName}\n                onDeleteConfirmed={this.onDeleteConfirmed}\n                onContinueEditing={this.onContinueEditing}\n                open={this.state.confirmDeleteDialogOpen}\n            />\n        ) : null;\n\n    translationDialog = () =>\n        this.state.dashboardModel && this.state.dashboardModel.id ? (\n            <TranslationDialog\n                className=\"translation-dialog\"\n                d2={this.context.d2}\n                open={this.state.translationDialogIsOpen}\n                onRequestClose={this.toggleTranslationDialog}\n                objectToTranslate={this.state.dashboardModel}\n                fieldsToTranslate={['name', 'description']}\n                // TODO handle messages in snackbar\n                onTranslationSaved={this.onTranslationsSaved}\n                onTranslationError={err =>\n                    console.log('translation update error', err)\n                }\n            />\n        ) : null;\n\n    render() {\n        if (this.state.redirectUrl) {\n            return <Redirect to={this.state.redirectUrl} />;\n        }\n\n        const { dashboardId, deleteAccess, updateAccess } = this.props;\n        const controlBarHeight = getControlBarHeight(MIN_ROW_COUNT);\n\n        const discardBtnText = updateAccess\n            ? i18n.t('Exit without saving')\n            : i18n.t('Go to dashboards');\n\n        return (\n            <Fragment>\n                <ControlBar height={controlBarHeight} editMode={true}>\n                    <div style={buttonBarStyle}>\n                        {updateAccess ? (\n                            <div className={classes.leftControls}>\n                                <span style={{ marginRight: '15px' }}>\n                                    <Button primary onClick={this.onSave}>\n                                        {i18n.t('Save changes')}\n                                    </Button>\n                                </span>\n\n                                {dashboardId ? (\n                                    <span style={{ marginRight: '15px' }}>\n                                        <Button\n                                            onClick={\n                                                this.toggleTranslationDialog\n                                            }\n                                        >\n                                            {i18n.t('Translate')}\n                                        </Button>\n                                    </span>\n                                ) : null}\n                                {dashboardId && deleteAccess ? (\n                                    <Button onClick={this.onConfirmDelete}>\n                                        {i18n.t('Delete')}\n                                    </Button>\n                                ) : null}\n                            </div>\n                        ) : null}\n\n                        <div className={classes.rightControls}>\n                            <Button secondary onClick={this.onDiscard}>\n                                {discardBtnText}\n                            </Button>\n                        </div>\n                    </div>\n                </ControlBar>\n                {this.translationDialog()}\n                {this.confirmDeleteDialog()}\n            </Fragment>\n        );\n    }\n}\n\nEditBar.propTypes = {\n    dashboardId: PropTypes.string,\n    dashboardName: PropTypes.string,\n    deleteAccess: PropTypes.bool,\n    updateAccess: PropTypes.bool,\n    onDelete: PropTypes.func,\n    onDiscardChanges: PropTypes.func,\n    onSave: PropTypes.func,\n    onTranslate: PropTypes.func,\n};\n\nEditBar.contextTypes = {\n    d2: PropTypes.object,\n};\n\nconst mapStateToProps = state => {\n    const dashboard = sGetEditDashboardRoot(state);\n\n    let deleteAccess;\n    let updateAccess;\n    if (sGetIsNewDashboard(state)) {\n        deleteAccess = true;\n        updateAccess = true;\n    } else {\n        updateAccess = dashboard.access ? dashboard.access.update : false;\n        deleteAccess = dashboard.access ? dashboard.access.delete : false;\n    }\n\n    return {\n        dashboardId: dashboard.id,\n        dashboardName: dashboard.name,\n        deleteAccess,\n        updateAccess,\n    };\n};\n\nconst mapDispatchToProps = dispatch => ({\n    onSave: () => dispatch(tSaveDashboard()).then(id => id),\n    onDelete: id => dispatch(tDeleteDashboard(id)),\n    onDiscardChanges: () => dispatch(acClearEditDashboard()),\n    onTranslate: (id, value) => dispatch(acSetDashboardDisplayName(id, value)),\n});\n\nexport default connect(\n    mapStateToProps,\n    mapDispatchToProps\n)(EditBar);\n","import React, { Fragment, Component } from 'react';\nimport { connect } from 'react-redux';\nimport i18n from '@dhis2/d2-i18n';\nimport PropTypes from 'prop-types';\n\nimport { acSetEditDashboard } from '../../actions/editDashboard';\nimport { sGetSelectedId } from '../../reducers/selected';\nimport {\n    sGetDashboardById,\n    sGetDashboardItems,\n    sDashboardsIsFetching,\n} from '../../reducers/dashboards';\nimport DashboardVerticalOffset from './DashboardVerticalOffset';\nimport DashboardContent from './DashboardContent';\nimport EditBar from '../ControlBar/EditBar';\nimport NoContentMessage from '../../widgets/NoContentMessage';\n\nexport const Content = ({ updateAccess }) => {\n    return updateAccess ? (\n        <DashboardContent editMode={true} />\n    ) : (\n        <NoContentMessage text={i18n.t('No access')} />\n    );\n};\n\nContent.propTypes = {\n    updateAccess: PropTypes.bool,\n};\nexport class EditDashboard extends Component {\n    state = {\n        initialized: false,\n    };\n\n    initEditDashboard = () => {\n        if (this.props.dashboard) {\n            this.setState({ initialized: true });\n            this.props.setEditDashboard(this.props.dashboard, this.props.items);\n        }\n    };\n\n    componentDidMount() {\n        this.initEditDashboard();\n    }\n\n    componentDidUpdate() {\n        if (!this.state.initialized) {\n            this.initEditDashboard();\n        }\n    }\n\n    getDashboardContent = () => {\n        const contentNotReady =\n            !this.props.dashboardsLoaded || this.props.id === null;\n\n        return (\n            <div className=\"dashboard-wrapper\">\n                {contentNotReady ? null : (\n                    <Content updateAccess={this.props.updateAccess} />\n                )}\n            </div>\n        );\n    };\n\n    render() {\n        return (\n            <Fragment>\n                <EditBar />\n                <DashboardVerticalOffset editMode={true} />\n                {this.getDashboardContent()}\n            </Fragment>\n        );\n    }\n}\n\nEditDashboard.propTypes = {\n    dashboard: PropTypes.object,\n    dashboardsLoaded: PropTypes.bool,\n    id: PropTypes.string,\n    items: PropTypes.array,\n    setEditDashboard: PropTypes.func,\n    updateAccess: PropTypes.bool,\n};\n\nconst mapStateToProps = state => {\n    const id = sGetSelectedId(state);\n    const dashboard = id ? sGetDashboardById(state, id) : null;\n\n    const updateAccess =\n        dashboard && dashboard.access ? dashboard.access.update : false;\n\n    return {\n        dashboard,\n        id,\n        updateAccess,\n        items: sGetDashboardItems(state),\n        dashboardsLoaded: !sDashboardsIsFetching(state),\n    };\n};\n\nexport default connect(\n    mapStateToProps,\n    {\n        setEditDashboard: acSetEditDashboard,\n    }\n)(EditDashboard);\n","import React, { Component, Fragment } from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\n\nimport { acSetEditNewDashboard } from '../../actions/editDashboard';\nimport DashboardVerticalOffset from './DashboardVerticalOffset';\nimport EditBar from '../ControlBar/EditBar';\nimport DashboardContent from './DashboardContent';\n\nclass NewDashboard extends Component {\n    componentDidMount() {\n        this.props.setNewDashboard();\n    }\n\n    render() {\n        return (\n            <Fragment>\n                <EditBar />\n                <DashboardVerticalOffset editMode={true} />\n                <div className=\"dashboard-wrapper\">\n                    <DashboardContent editMode={true} />\n                </div>\n            </Fragment>\n        );\n    }\n}\n\nNewDashboard.propTypes = {\n    setNewDashboard: PropTypes.func,\n};\n\nexport default connect(\n    null,\n    {\n        setNewDashboard: acSetEditNewDashboard,\n    }\n)(NewDashboard);\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\n\nimport { tSelectDashboard } from '../../actions/dashboards';\nimport { sDashboardsIsFetching } from '../../reducers/dashboards';\nimport { EDIT, NEW } from './dashboardModes';\nimport ViewDashboard from './ViewDashboard';\nimport EditDashboard from './EditDashboard';\nimport NewDashboard from './NewDashboard';\n\nclass Dashboard extends Component {\n    setDashboard = () => {\n        if (this.props.dashboardsLoaded) {\n            const id = this.props.match.params.dashboardId || null;\n\n            this.props.selectDashboard(id);\n\n            this.scrollToTop();\n        }\n    };\n\n    scrollToTop = () => {\n        window.scrollTo(0, 0);\n    };\n\n    componentDidMount() {\n        this.setDashboard();\n    }\n\n    componentDidUpdate() {\n        this.setDashboard();\n    }\n\n    render() {\n        switch (this.props.mode) {\n            case EDIT:\n                return <EditDashboard />;\n            case NEW:\n                return <NewDashboard />;\n            default:\n                return <ViewDashboard />;\n        }\n    }\n}\n\nDashboard.propTypes = {\n    dashboardsLoaded: PropTypes.bool,\n    match: PropTypes.object,\n    mode: PropTypes.string,\n    selectDashboard: PropTypes.func,\n};\n\nconst mapStateToProps = state => {\n    return { dashboardsLoaded: !sDashboardsIsFetching(state) };\n};\n\nexport default connect(\n    mapStateToProps,\n    {\n        selectDashboard: tSelectDashboard,\n    }\n)(Dashboard);\n","export const EDIT = 'edit';\nexport const NEW = 'new';\nexport const VIEW = 'view';\n","import React, { Component } from 'react';\nimport { HashRouter as Router, Route, Switch } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport i18n from '@dhis2/d2-i18n';\nimport { HeaderBar } from '@dhis2/ui-widgets';\n\nimport { EDIT, VIEW, NEW } from './Dashboard/dashboardModes';\nimport { acReceivedUser } from '../actions/user';\nimport { tFetchDashboards } from '../actions/dashboards';\nimport { tSetControlBarRows } from '../actions/controlBar';\nimport { tSetDimensions } from '../actions/dimensions';\nimport Dashboard from './Dashboard/Dashboard';\nimport SnackbarMessage from './SnackbarMessage/SnackbarMessage';\n\nimport 'typeface-roboto';\nimport './App.css';\n\nexport class App extends Component {\n    componentDidMount() {\n        this.props.setCurrentUser(this.props.d2.currentUser);\n        this.props.fetchDashboards();\n        this.props.setControlBarRows();\n        this.props.setDimensions(this.props.d2);\n    }\n\n    getChildContext() {\n        return { baseUrl: this.props.baseUrl, i18n, d2: this.props.d2 };\n    }\n\n    render() {\n        return (\n            <div className=\"app-wrapper\">\n                <div className=\"dashboard-header-bar\">\n                    <HeaderBar appName={i18n.t('Dashboard')} />\n                </div>\n                <Router>\n                    <Switch>\n                        <Route\n                            exact\n                            path=\"/\"\n                            render={props => (\n                                <Dashboard {...props} mode={VIEW} />\n                            )}\n                        />\n                        <Route\n                            exact\n                            path=\"/new\"\n                            render={props => (\n                                <Dashboard {...props} mode={NEW} />\n                            )}\n                        />\n                        <Route\n                            exact\n                            path=\"/:dashboardId\"\n                            render={props => (\n                                <Dashboard {...props} mode={VIEW} />\n                            )}\n                        />\n                        <Route\n                            exact\n                            path=\"/:dashboardId/edit\"\n                            render={props => (\n                                <Dashboard {...props} mode={EDIT} />\n                            )}\n                        />\n                    </Switch>\n                </Router>\n                <SnackbarMessage />\n            </div>\n        );\n    }\n}\n\nApp.propTypes = {\n    fetchDashboards: PropTypes.func.isRequired,\n    setControlBarRows: PropTypes.func.isRequired,\n    setCurrentUser: PropTypes.func.isRequired,\n    setDimensions: PropTypes.func.isRequired,\n    baseUrl: PropTypes.string,\n    d2: PropTypes.object,\n};\n\nApp.childContextTypes = {\n    baseUrl: PropTypes.string,\n    i18n: PropTypes.object,\n    d2: PropTypes.object,\n};\n\nconst mapDispatchToProps = dispatch => {\n    return {\n        setCurrentUser: currentUser => dispatch(acReceivedUser(currentUser)),\n        fetchDashboards: () => dispatch(tFetchDashboards()),\n        setControlBarRows: () => dispatch(tSetControlBarRows()),\n        setDimensions: d2 => dispatch(tSetDimensions(d2)),\n    };\n};\n\nexport default connect(\n    null,\n    mapDispatchToProps\n)(App);\n","import { RECEIVED_USER } from '../reducers/user';\n\nexport const acReceivedUser = value => ({\n    type: RECEIVED_USER,\n    value,\n});\n","//------------------------------------------------------------------------------\n// <auto-generated>\n// This code was generated by d2-i18n-generate.\n//\n// Changes to this file may cause incorrect behavior and will be lost if\n// the code is regenerated.\n// </auto-generated>\n//------------------------------------------------------------------------------\nimport i18n from '@dhis2/d2-i18n';\nimport moment from 'moment';\nimport 'moment/locale/ar';\nimport 'moment/locale/es';\nimport 'moment/locale/fr';\nimport 'moment/locale/lo';\nimport 'moment/locale/pt';\nimport 'moment/locale/ru';\nimport 'moment/locale/sv';\nimport 'moment/locale/tg';\nimport 'moment/locale/uk';\nimport 'moment/locale/ur';\nimport 'moment/locale/vi';\nimport 'moment/locale/zh-cn';\n\nimport arTranslations from './ar/translations.json';\nimport daTranslations from './da/translations.json';\nimport enTranslations from './en/translations.json';\nimport esTranslations from './es/translations.json';\nimport frTranslations from './fr/translations.json';\nimport idTranslations from './id/translations.json';\nimport kmTranslations from './km/translations.json';\nimport loTranslations from './lo/translations.json';\nimport myTranslations from './my/translations.json';\nimport prsTranslations from './prs/translations.json';\nimport psTranslations from './ps/translations.json';\nimport ptTranslations from './pt/translations.json';\nimport pt_BRTranslations from './pt_BR/translations.json';\nimport ruTranslations from './ru/translations.json';\nimport svTranslations from './sv/translations.json';\nimport tetTranslations from './tet/translations.json';\nimport tgTranslations from './tg/translations.json';\nimport ukTranslations from './uk/translations.json';\nimport urTranslations from './ur/translations.json';\nimport viTranslations from './vi/translations.json';\nimport zhTranslations from './zh/translations.json';\nimport zh_CNTranslations from './zh_CN/translations.json';\n\nconst namespace = 'dashboards-app';\nmoment.locale('en');\n\ni18n.addResources('ar', namespace, arTranslations);\ni18n.addResources('da', namespace, daTranslations);\ni18n.addResources('en', namespace, enTranslations);\ni18n.addResources('es', namespace, esTranslations);\ni18n.addResources('fr', namespace, frTranslations);\ni18n.addResources('id', namespace, idTranslations);\ni18n.addResources('km', namespace, kmTranslations);\ni18n.addResources('lo', namespace, loTranslations);\ni18n.addResources('my', namespace, myTranslations);\ni18n.addResources('prs', namespace, prsTranslations);\ni18n.addResources('ps', namespace, psTranslations);\ni18n.addResources('pt', namespace, ptTranslations);\ni18n.addResources('pt_BR', namespace, pt_BRTranslations);\ni18n.addResources('ru', namespace, ruTranslations);\ni18n.addResources('sv', namespace, svTranslations);\ni18n.addResources('tet', namespace, tetTranslations);\ni18n.addResources('tg', namespace, tgTranslations);\ni18n.addResources('uk', namespace, ukTranslations);\ni18n.addResources('ur', namespace, urTranslations);\ni18n.addResources('vi', namespace, viTranslations);\ni18n.addResources('zh', namespace, zhTranslations);\ni18n.addResources('zh_CN', namespace, zh_CNTranslations);\n\ni18n.setDefaultNamespace(namespace);\ni18n.changeLanguage('en');\n\nexport default i18n;\n","/** @module reducers/selected */\nimport { validateReducer } from '../modules/util';\n\nexport const SET_STYLE = 'SET_STYLE';\n\nexport const DEFAULT_STATE_STYLE = 'LIST';\n\n/**\n * Reducer functions that computes and returns the new state based on the given action\n * @function\n * @param {Object} state The current state\n * @param {Object} action The action to be evaluated\n */\nconst style = (state = DEFAULT_STATE_STYLE, action) => {\n    switch (action.type) {\n        case SET_STYLE:\n            return validateReducer(action.value, DEFAULT_STATE_STYLE);\n        default:\n            return state;\n    }\n};\n\nexport default style;\n\n/**\n * Selectors that point to specific props in the state object\n * @function\n * @param {Object} state\n * @returns {Object}\n */\nexport const sGetStyleRoot = state => state.style;\n","import { combineReducers } from 'redux';\nimport arraySort from 'd2-utilizr/lib/arraySort';\n\nimport dashboards, { sGetDashboardsRoot } from './dashboards';\nimport selected from './selected';\nimport dashboardsFilter, {\n    ownerData,\n    sGetFilterName,\n    sGetFilterOrder,\n    sGetFilterOwner,\n} from './dashboardsFilter';\nimport controlBar from './controlBar';\nimport visualizations from './visualizations';\nimport editDashboard from './editDashboard';\nimport messages from './messages';\nimport user from './user';\nimport snackbar from './snackbar';\nimport itemFilters from './itemFilters';\nimport editItemFilters from './editItemFilters';\nimport style from './style';\nimport dimensions from './dimensions';\nimport settings from './settings';\nimport activeModalDimension from './activeModalDimension';\n\nconst USER = 'system';\n\n// Reducers\n\nexport default combineReducers({\n    dashboards,\n    selected,\n    dashboardsFilter,\n    controlBar,\n    visualizations,\n    messages,\n    user,\n    editDashboard,\n    itemFilters,\n    editItemFilters,\n    style,\n    snackbar,\n    dimensions,\n    settings,\n    activeModalDimension,\n});\n\n// Map constants to data\nconst mapConstToData = {\n    NAME: 'name',\n    ITEMS: 'numberOfItems',\n    CREATED: 'created',\n    OWNER: 'owner',\n};\n\n// Selectors\n\n// Filter dashboards by name\nexport const sFilterDashboardsByName = (dashboards, filter) =>\n    dashboards.filter(d =>\n        d.displayName.toLowerCase().includes(filter.toLowerCase())\n    );\n\n// Filter dashboards by owner, TODO FIXME\nexport const sFilterDashboardsByOwner = (dashboards, filter) => {\n    const ME = ownerData[1]; // TODO\n    const OTHERS = ownerData[2]; // TODO\n\n    switch (filter) {\n        case ME:\n            return dashboards.filter(d => d.owner === USER);\n        case OTHERS:\n            return dashboards.filter(d => d.owner !== USER);\n        default:\n            return dashboards;\n    }\n};\n\n// Filter dashboards by order\nexport const sFilterDashboardsByOrder = (dashboards, filter) => {\n    const filterValues = filter.split(':');\n\n    const key = filterValues[0];\n    const direction = filterValues[1];\n\n    return arraySort(dashboards, direction, mapConstToData[key]);\n};\n\n// Selectors dependency level 2\n\n// Get filtered dashboards\nexport const sGetFilteredDashboards = state => {\n    const dashboards = sGetDashboardsRoot(state);\n\n    const nameFilter = sGetFilterName(state);\n    const ownerFilter = sGetFilterOwner(state);\n    const orderFilter = sGetFilterOrder(state);\n\n    return sFilterDashboardsByOrder(\n        sFilterDashboardsByName(\n            sFilterDashboardsByOwner(dashboards, ownerFilter),\n            nameFilter\n        ),\n        orderFilter\n    );\n};\n","import { createStore, applyMiddleware, compose } from 'redux';\nimport { createLogger } from 'redux-logger';\nimport thunk from 'redux-thunk';\nimport reducer from './reducers';\n\nconst configureStore = () => {\n    const middleware = [thunk];\n\n    // Enable Redux devtools if extension is installed instead of redux-logger\n    const composeEnhancers =\n        window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\n    if (\n        !window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ &&\n        process.env.NODE_ENV !== 'production'\n    ) {\n        middleware.push(createLogger());\n    }\n\n    return createStore(\n        reducer,\n        composeEnhancers(applyMiddleware(...middleware))\n    );\n};\n\nexport default configureStore;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport { MuiThemeProvider, createMuiTheme } from '@material-ui/core/styles';\nimport { init as d2Init, config, getManifest, getUserSettings } from 'd2';\nimport dhis2theme from '@dhis2/d2-ui-core/theme/mui3.theme';\n\nimport { Provider as RuntimeProvider } from '@dhis2/app-runtime';\nimport { CssReset } from '@dhis2/ui-core';\n\nimport App from './components/App';\nimport './index.css';\nimport i18n from './locales';\nimport configureStore from './configureStore';\n\nconst muiTheme = () => createMuiTheme(dhis2theme);\n\nconst configI18n = userSettings => {\n    const uiLocale = userSettings.keyUiLocale;\n\n    if (uiLocale && uiLocale !== 'en') {\n        config.i18n.sources.add(`./i18n/i18n_module_${uiLocale}.properties`);\n    }\n\n    config.i18n.sources.add('./i18n/i18n_module_en.properties');\n    i18n.changeLanguage(uiLocale);\n};\n\nconst init = async () => {\n    const manifest = await getManifest('./manifest.webapp');\n\n    // log app info\n    console.info(\n        `Dashboards app, v${manifest.version}, ${\n            manifest.manifest_generated_at\n        }`\n    );\n\n    const isProd = process.env.NODE_ENV === 'production';\n\n    if (\n        !isProd &&\n        (!process.env.REACT_APP_DHIS2_BASE_URL ||\n            !process.env.REACT_APP_DHIS2_AUTHORIZATION)\n    ) {\n        throw new Error(\n            'Missing env variables REACT_APP_DHIS2_BASE_URL and REACT_APP_DHIS2_AUTHORIZATION'\n        );\n    }\n\n    // api config\n    const baseUrl = isProd\n        ? manifest.activities.dhis.href\n        : process.env.REACT_APP_DHIS2_BASE_URL;\n    const authorization = process.env.REACT_APP_DHIS2_AUTHORIZATION;\n\n    config.baseUrl = `${baseUrl}/api/${manifest.dhis2.apiVersion}`;\n    config.headers = isProd ? null : { Authorization: authorization };\n    config.schemas = [\n        'chart',\n        'map',\n        'report',\n        'reportTable',\n        'eventChart',\n        'eventReport',\n        'dashboard',\n        'organisationUnit',\n        'userGroup',\n    ];\n\n    getUserSettings()\n        .then(configI18n)\n        .then(() => d2Init(config))\n        .then(initializedD2 => {\n            ReactDOM.render(\n                <RuntimeProvider\n                    config={{\n                        baseUrl: baseUrl,\n                        apiVersion: manifest.dhis2.apiVersion,\n                    }}\n                >\n                    <CssReset />\n                    <Provider store={configureStore()}>\n                        <MuiThemeProvider theme={muiTheme()}>\n                            <App baseUrl={baseUrl} d2={initializedD2} />\n                        </MuiThemeProvider>\n                    </Provider>\n                </RuntimeProvider>,\n                document.getElementById('root')\n            );\n        });\n};\n\ninit();\n","import isObject from 'lodash/isObject';\n\n// validation\nexport function orNull(param) {\n    return param === undefined ? null : param;\n}\n\nexport function orArray(param) {\n    return Array.isArray(param) ? param : [];\n}\n\nexport function orObject(param) {\n    return isObject(param) ? param : {};\n}\n\n// array\nexport function arrayGetById(array, id) {\n    return array.find(item => item.id === id);\n}\n\n// object\nexport function arrayToIdMap(array) {\n    return array.reduce((obj, item) => {\n        obj[item.id] = item;\n        return obj;\n    }, {});\n}\n\n// date\nexport function getDate() {\n    const y = Math.floor(Math.random() * 3) + 2015;\n    const M = Math.floor(Math.random() * 12) + 1;\n    const d = Math.floor(Math.random() * 28) + 1;\n    // const h = Math.floor(Math.random() * 23) + 1;\n    // const m = Math.floor(Math.random() * 59) + 1;\n    // const s = Math.floor(Math.random() * 59) + 1;\n\n    return new Date(`${y}-${M}-${d}`)\n        .toJSON()\n        .replace('T', ' ')\n        .substr(0, 10);\n}\n\nexport const formatDate = (value, uiLocale) => {\n    if (typeof global.Intl !== 'undefined' && Intl.DateTimeFormat) {\n        const locale = uiLocale || 'en';\n        return new Intl.DateTimeFormat(locale, {\n            year: 'numeric',\n            month: 'short',\n            day: 'numeric',\n        }).format(new Date(value));\n    }\n\n    return value.substr(0, 19).replace('T', ' ');\n};\n\n/**\n * Sorts an array of objects based on provided date property\n *\n * @param {Array} items Array of objects\n * @param {String} dateProp Name of the date property to be used for sorting\n * @param {Boolean} ascending Whether to sort ascending or descending\n */\nexport const sortByDate = (items, dateProp, ascending = true) => {\n    const values = Object.values(items);\n\n    values.sort((a, b) => {\n        const aDate = new Date(a[dateProp]);\n        const bDate = new Date(b[dateProp]);\n\n        return ascending ? aDate - bDate : bDate - aDate;\n    });\n\n    return values;\n};\n\n// reducer validator\nexport const validateReducer = (value, defaultValue) =>\n    value === undefined || value === null ? defaultValue : value;\n\nexport const getBaseUrl = d2 => {\n    const api = d2.Api.getApi();\n    const idx = api.baseUrl.indexOf('/api');\n    return idx > -1 ? api.baseUrl.slice(0, idx) : api.baseUrl;\n};\n\nexport const getWithoutId = object => ({\n    ...object,\n    id: undefined,\n});\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"ControlBar_root__3LaTt\",\"content\":\"ControlBar_content__1r98-\",\"draghandle\":\"ControlBar_draghandle__1VWa0\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"ClearButton_button__2yjcV\",\"icon\":\"ClearButton_icon__1fqj8\"};","import isObject from 'lodash/isObject';\nimport { VIS_TYPE_COLUMN, VIS_TYPE_PIVOT_TABLE } from '@dhis2/analytics';\nimport { apiFetchFavorite, getMapFields } from '../../../api/metadata';\nimport {\n    REPORT_TABLE,\n    CHART,\n    MAP,\n    EVENT_REPORT,\n    EVENT_CHART,\n    itemTypeMap,\n} from '../../../modules/itemTypes';\nimport { getBaseUrl, getWithoutId } from '../../../modules/util';\nimport { getGridItemDomId } from '../../ItemGrid/gridUtil';\n\n//external plugins\nconst itemTypeToExternalPlugin = {\n    [MAP]: 'mapPlugin',\n    [EVENT_REPORT]: 'eventReportPlugin',\n    [EVENT_CHART]: 'eventChartPlugin',\n};\nconst hasIntegratedPlugin = type => [CHART, REPORT_TABLE].includes(type);\n\nconst getPlugin = type => {\n    if (hasIntegratedPlugin(type)) {\n        return true;\n    }\n    const pluginName = itemTypeToExternalPlugin[type];\n\n    return global[pluginName];\n};\n\nexport const THEMATIC_LAYER = 'thematic';\n\nexport const pluginIsAvailable = (item = {}, visualization = {}) => {\n    const type = visualization.activeType || item.type;\n\n    return !!getPlugin(type);\n};\n\nexport const extractFavorite = item => {\n    if (!isObject(item)) {\n        return null;\n    }\n\n    switch (item.type) {\n        case REPORT_TABLE:\n            return item.reportTable;\n        case CHART:\n            return item.chart;\n        case MAP:\n            return item.map;\n        case EVENT_REPORT:\n            return item.eventReport;\n        case EVENT_CHART:\n            return item.eventChart;\n        default:\n            return (\n                item.reportTable ||\n                item.chart ||\n                item.map ||\n                item.eventReport ||\n                item.eventChart ||\n                {}\n            );\n    }\n};\n\nexport const extractMapView = map =>\n    map.mapViews && map.mapViews.find(mv => mv.layer.includes(THEMATIC_LAYER));\n\nexport const loadPlugin = (plugin, config, credentials) => {\n    if (!(plugin && plugin.load)) {\n        return;\n    }\n\n    plugin.url = credentials.baseUrl;\n    plugin.loadingIndicator = true;\n    plugin.dashboard = true;\n    if (credentials.auth) {\n        plugin.auth = credentials.auth;\n    }\n    plugin.load(config);\n};\n\nexport const getId = item => extractFavorite(item).id;\nexport const getName = item => extractFavorite(item).name;\nexport const getDescription = item => extractFavorite(item).description;\nexport const getLink = (item, d2) => {\n    const baseUrl = getBaseUrl(d2);\n    const appUrl = itemTypeMap[item.type].appUrl(getId(item));\n\n    return `${baseUrl}/${appUrl}`;\n};\n\nexport const load = async (\n    item,\n    visualization,\n    { credentials, activeType }\n) => {\n    const config = {\n        ...visualization,\n        el: getGridItemDomId(item.id),\n    };\n\n    const type = activeType || item.type;\n    const plugin = getPlugin(type);\n\n    loadPlugin(plugin, config, credentials);\n};\n\nexport const fetch = async item => {\n    const fetchedFavorite = await apiFetchFavorite(getId(item), item.type, {\n        fields: item.type === MAP ? getMapFields() : null,\n    });\n\n    return fetchedFavorite;\n};\n\nexport const resize = item => {\n    const plugin = getPlugin(item.type);\n\n    if (plugin && plugin.resize) {\n        plugin.resize(getGridItemDomId(item.id));\n    }\n};\n\nexport const unmount = (item, activeType) => {\n    const plugin = getPlugin(activeType);\n\n    if (plugin && plugin.unmount) {\n        plugin.unmount(getGridItemDomId(item.id));\n    }\n};\n\nexport const getVisualizationConfig = (\n    visualization,\n    originalType,\n    activeType\n) => {\n    if (originalType === MAP && originalType !== activeType) {\n        const extractedMapView = extractMapView(visualization);\n\n        if (extractedMapView === undefined) {\n            return null;\n        }\n\n        return getWithoutId({\n            ...visualization,\n            ...extractedMapView,\n            mapViews: undefined,\n            type: activeType === CHART ? VIS_TYPE_COLUMN : VIS_TYPE_PIVOT_TABLE,\n        });\n    } else if (originalType === REPORT_TABLE && activeType === CHART) {\n        return getWithoutId({ ...visualization, type: VIS_TYPE_COLUMN });\n    } else if (originalType === CHART && activeType === REPORT_TABLE) {\n        return getWithoutId({\n            ...visualization,\n            type: VIS_TYPE_PIVOT_TABLE,\n        });\n    }\n\n    return getWithoutId(visualization);\n};\n","import isFunction from 'd2-utilizr/lib/isFunction';\n\nimport { orObject } from '../../modules/util';\n\n// Dimensions for the react-grid-layout\n\nexport const GRID_COMPACT_TYPE = 'vertical'; // vertical | horizonal | null\nexport const GRID_ROW_HEIGHT = 10;\nconst GRID_COLUMN_WIDTH_PX = 20;\nconst GRID_LAYOUT = 'FLEXIBLE'; // FIXED | FLEXIBLE\nexport const MARGIN = [10, 10];\n\nexport const NEW_ITEM_SHAPE = { x: 0, y: 0, w: 20, h: 29 };\nexport const ITEM_MIN_HEIGHT = 4;\n\n// Dimensions for getShape\n\nconst NUMBER_OF_ITEM_COLS = 2;\nconst GRID_COLUMNS = 60;\n\nexport const getGridColumns = () => {\n    switch (GRID_LAYOUT) {\n        case 'FLEXIBLE':\n            return GRID_COLUMNS;\n        case 'FIXED':\n            return Math.floor((window.innerWidth - 20) / GRID_COLUMN_WIDTH_PX);\n        default:\n            return GRID_COLUMNS;\n    }\n};\n\n// isNonNegativeInteger\n\nconst isNonNegativeInteger = x => Number.isInteger(x) && x >= 0;\n\n// Does the item have all the shape properties?\n\nexport const hasShape = item =>\n    isNonNegativeInteger(item.x) &&\n    isNonNegativeInteger(item.y) &&\n    isNonNegativeInteger(item.w) &&\n    isNonNegativeInteger(item.h);\n\n// returns a rectangular grid block dimensioned with x, y, w, h in grid units.\n// based on a grid with 3 items across\nexport const getShape = i => {\n    if (!isNonNegativeInteger(i)) {\n        throw new Error('Invalid grid block number');\n    }\n\n    const col = i % NUMBER_OF_ITEM_COLS;\n    const row = Math.floor(i / NUMBER_OF_ITEM_COLS);\n    const itemWidth = Math.floor((GRID_COLUMNS - 1) / NUMBER_OF_ITEM_COLS);\n    const itemHeight = GRID_ROW_HEIGHT * 2;\n\n    return {\n        x: col * itemWidth,\n        y: row * itemHeight,\n        w: itemWidth,\n        h: itemHeight,\n    };\n};\n\n/**\n * Calculates the grid item's original height in pixels based\n * on the height in grid units. This calculation\n * is copied directly from react-grid-layout GridItem.js (calcPosition)\n *\n * @param {Object} item item containing shape (x, y, w, h)\n */\nconst getOriginalHeight = item => {\n    const originalHeight = Math.round(\n        GRID_ROW_HEIGHT * item.h + Math.max(0, item.h - 1) * MARGIN[1]\n    );\n\n    return { originalHeight };\n};\n\n/**\n * Returns an array of items containing the x, y, w, h dimensions\n * and the item's originalheight in pixels\n * @function\n * @param {Array} items\n * @returns {Array}\n */\n\nexport const withShape = items =>\n    items.map((item, index) => {\n        const itemWithShape = hasShape(item)\n            ? item\n            : Object.assign({}, item, getShape(index));\n\n        return Object.assign(\n            {},\n            itemWithShape,\n            getOriginalHeight(itemWithShape)\n        );\n    });\n\nexport const getGridItemDomId = id => `item-${id}`;\n\nexport function onItemResize(id) {\n    const el = orObject(document.querySelector(`#${getGridItemDomId(id)}`));\n    if (isFunction(el.setViewportSize))\n        setTimeout(\n            () => el.setViewportSize(el.clientWidth - 5, el.clientHeight - 5),\n            10\n        );\n}\n"],"sourceRoot":""}
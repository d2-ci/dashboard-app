{"version":3,"sources":["api/metadata.js","components/Item/ListItem/Item.module.css","components/TitleBar/styles/EditTitleBar.module.css","components/TitleBar/styles/ViewTitleBar.module.css","reducers/user.js","modules/uiBackendItemConverter.js","reducers/dashboards.js","reducers/editDashboard.js","reducers/editItemFilters.js","reducers/selected.js","actions/editItemFilters.js","reducers/itemFilters.js","actions/itemFilters.js","reducers/messages.js","api/messages.js","reducers/snackbar.js","actions/snackbar.js","reducers/visualizations.js","actions/visualizations.js","api/index.js","api/dashboards.js","components/SnackbarMessage/SnackbarMessage.js","actions/selected.js","api/localStorage.js","components/Item/MessagesItem/actions.js","api/editDashboard.js","actions/editDashboard.js","actions/dashboards.js","reducers/controlBar.js","api/controlBar.js","actions/controlBar.js","reducers/dimensions.js","reducers/settings.js","actions/dimensions.js","components/ControlBar/ShowMoreButton.js","components/ControlBar/controlBarDimensions.js","components/ControlBar/ControlBar.js","icons/Star.js","api/dataStatistics.js","components/ControlBar/DashboardItemChip.js","icons/AddCircle.js","icons/Clear.js","components/ControlBar/ClearButton.js","reducers/dashboardsFilter.js","components/ControlBar/Filter.js","components/ControlBar/DashboardsBar.js","actions/dashboardsFilter.js","components/Dashboard/DashboardVerticalOffset.js","components/ItemSelector/HeaderMenuItem.js","icons/Launch.js","components/ItemSelector/ContentMenuItem.js","components/ItemSelector/selectableItems.js","components/ItemSelector/CategorizedMenuGroup.js","components/ItemSelector/actions.js","components/ItemSelector/SinglesMenuGroup.js","components/ItemSelector/ItemSelector.js","components/TitleBar/EditTitleBar.js","components/ItemFilter/FilterDialog.js","reducers/activeModalDimension.js","actions/activeModalDimension.js","components/ItemFilter/FilterSelector.js","components/TitleBar/Info.js","components/TitleBar/ViewTitleBar.js","components/TitleBar/TitleBar.js","components/Item/VisualizationItem/DefaultPlugin.js","components/Item/VisualizationItem/assets/icons.js","components/Item/VisualizationItem/FatalErrorBoundary.js","components/Item/DeleteItemButton.js","components/Item/ItemHeader.js","components/Item/VisualizationItem/ItemHeaderButtons.js","components/Item/VisualizationItem/ItemFooter.js","modules/memoizeOne.js","components/Item/VisualizationItem/LoadingMask.js","components/Item/VisualizationItem/Item.js","widgets/Line.js","components/Item/MessagesItem/Item.js","components/Item/NotSupportedItem/Item.js","icons/Description.js","icons/Delete.js","components/Item/ListItem/Item.js","components/Item/ListItem/actions.js","components/Item/TextItem/Item.js","components/Item/AppItem/Item.js","components/Item/SpacerItem/Item.js","components/Item/Item.js","widgets/NoContentMessage.js","components/Item/ProgressiveLoadingContainer.js","components/ItemGrid/ItemGrid.js","components/FilterBar/FilterBadge.js","components/FilterBar/FilterBar.js","components/Dashboard/DashboardContent.js","components/Dashboard/ViewDashboard.js","components/ControlBar/ConfirmDeleteDialog.js","components/ControlBar/EditBar.js","components/Dashboard/EditDashboard.js","components/Dashboard/NewDashboard.js","components/Dashboard/Dashboard.js","components/Dashboard/dashboardModes.js","components/App.js","actions/user.js","locales/index.js","reducers/style.js","reducers/index.js","configureStore.js","index.js","modules/itemTypes.js","components/ControlBar/styles/DashboardsBar.module.css","components/ControlBar/styles/DashboardItemChip.module.css","components/ItemSelector/styles/ContentMenuItem.module.css","components/Item/styles/ItemHeader.module.css","modules/util.js","components/ControlBar/styles/ControlBar.module.css","components/Item/VisualizationItem/styles/FatalErrorBoundary.module.css","components/ControlBar/styles/ShowMoreButton.module.css","components/ControlBar/styles/ClearButton.module.css","components/Item/VisualizationItem/styles/Item.module.css","components/Item/VisualizationItem/plugin.js","components/ItemGrid/gridUtil.js","components/ItemSelector/styles/CategorizedMenuGroup.module.css","components/Item/styles/DeleteItemButton.module.css","components/Item/VisualizationItem/styles/LoadingMask.module.css","components/FilterBar/styles/FilterBar.module.css","components/ControlBar/styles/ConfirmDeleteDialog.module.css"],"names":["getIdNameFields","rename","arguments","length","undefined","concat","getDimensionFields","_ref2","withItems","arrayClean","join","getAxesFields","_ref3","getFavoriteFields","_ref4","withDimensions","withOptions","getFavoritesFields","_ref5","Object","_home_travis_build_dhis2_dashboards_app_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_toConsumableArray__WEBPACK_IMPORTED_MODULE_0__","getListItemFields","getMapFields","apiFetchFavorite","id","type","_ref6","fields","getInstance","then","d2","Api","getApi","get","getEndPointName","module","exports","list","item","itemicon","link","deleteicon","deletebutton","section","titleDescription","title","description","itemSelector","actions","editLink","titleBar","titleBarIcon","DEFAULT_STATE_USER","username","uiLocale","isSuperuser","sGetUserUsername","state","user","spacerContent","isTextType","TEXT","text","convertUiItemsToBackend","items","map","SPACER","isUiSpacerType","objectSpread","convertBackendItemsToUi","isBackendSpacerType","gridProperties","getGridItemProperties","DEFAULT_STATE_DASHBOARDS","byId","updateDashboardProp","_ref","dashboardId","prop","value","defineProperty","sGetDashboardsRoot","dashboards","sGetDashboardById","orObject","sDashboardsIsFetching","sGetAllDashboards","sGetDashboardItems","sGetStarredDashboards","values","filter","dashboard","starred","sGetUnstarredDashboards","sGetDashboardsSortedByStarred","toConsumableArray","arraySort","getCustomDashboards","data","arrayFrom","d","name","displayName","displayDescription","favorite","owner","created","split","substr","lastUpdated","access","numberOfItems","orArray","dashboardItems","DEFAULT_STATE_EDIT_DASHBOARD","NEW_DASHBOARD_STATE","sGetEditDashboardRoot","editDashboard","sGetIsEditing","isEmpty","sGetEditDashboardItems","DEFAULT_STATE_EDIT_ITEM_FILTERS","sGetEditItemFiltersRoot","editItemFilters","combineReducers","action","validateReducer","isLoading","showDescription","sGetSelectedRoot","selected","sGetSelectedId","sGetSelectedIsLoading","sGetSelectedShowDescription","acRemoveEditItemFilter","DEFAULT_STATE_ITEM_FILTERS","sGetItemFiltersRoot","itemFilters","sGetFiltersKeys","keys","acRemoveItemFilter","sGetMessagesRoot","messages","getMessages","url","catch","error","console","log","DEFAULT_STATE_SNACKBAR","message","duration","open","acCloseSnackbar","DEFAULT_STATE_VISUALIZATIONS","p","sGetVisualization","visualizations","sGetVisualizationsRoot","acAddVisualization","onError","getDashboardItemsFields","withFavorite","getDashboardFields","apiFetchDashboard","models","apiStarDashboard","isStarred","post","delete","apiDeleteDashboard","loadingDashboardMsg","SnackbarMessageContent","react_default","a","createElement","style","fontWeight","connect","_sGetSnackbar","snackbar","sGetSnackbar","snackbarOpen","snackbarMessage","snackbarDuration","onCloseSnackbar","props","Snackbar_default","zIndex","SnackbarMessage_SnackbarMessageContent","autoHideDuration","onClose","acSetSelectedId","acSetSelectedIsLoading","tLoadDashboard","asyncToGenerator","regenerator_default","mark","_callee","dispatch","dash","wrap","_context","prev","next","sent","acAppendDashboards","abrupt","Promise","resolve","t0","stop","_x","apply","this","tSetSelectedDashboardById","_callee2","getState","snackbarTimeout","onSuccess","_context2","setTimeout","dashboardName","customDashboard","acSetDashboardItems","withShape","localStorage","setItem","forEach","REPORT_TABLE","CHART","MAP","EVENT_REPORT","EVENT_CHART","extractFavorite","MESSAGES","messageConversations","filters","clearTimeout","_x2","_x3","saveDashboard","assign","width","w","height","h","save","msg","response","uid","updateDashboard","postDashboard","create","acAddDashboardItem","itemPropName","itemTypeMap","propName","generateUid","gridItemProperties","content","NEW_ITEM_SHAPE","acUpdateDashboardItem","acRemoveDashboardItem","arrayToIdMap","acSetDashboardStarred","tFetchDashboards","collection","paging","toArray","userRows","sGetControlBarUserRows","controlBar","sGetControlBarRoot","KEY","hasNamespace","currentUser","dataStore","has","getNamespace","apiGetControlBarRows","_callee3","namespace","_context3","t1","t2","find","key","apiPostControlBarRows","_callee4","rows","_context4","set","_x4","_x5","acSetControlBarUserRows","DEFAULT_DIMENSIONS","getDimensionById","DIMENSION_ID_PERIOD","DIMENSION_ID_ORGUNIT","sGetDimensions","dimensions","DEFAULT_SETTINGS","keyDateFormat","keyAnalysisRelativePeriod","keyAnalysisDigitGroupSeparator","displayNameProperty","rootOrganisationUnit","sGetSettings","settings","sGetSettingsDisplayNameProperty","acSetDimensions","ShowMoreButton","onClick","isMaxHeight","disabled","textAlign","className","classes","i18n","t","showMore","MIN_ROW_COUNT","getRowsHeight","getNumRowsFromHeight","Math","floor","FIRST_ROW_PADDING_HEIGHT","getTopOffset","getControlBarHeight","ControlBar","_this","classCallCheck","_super","call","onStartDrag","setState","dragging","window","addEventListener","onDrag","onEndDrag","event","preventDefault","stopPropagation","newHeight","clientY","onChangeHeight","requestAnimationFrame","removeEventListener","draghandle","onMouseDown","max","rootStyle","top","backgroundColor","editMode","colors","yellow050","white","paddingBottom","transition","root","children","renderDragHandle","React","Component","defaultProps","StarIcon","xmlns","viewBox","fill","apiPostDataStatistics","eventType","DashboardItemChip","label","chipProps","selectedState","unselected","icon","Star","react_router_dom","to","debounce","es_lib","AddCircleIcon","teal600","ClearIcon","grey800","ClearButton","onClear","button","Clear","color","ownerData","DEFAULT_STATE_DASHBOARDS_FILTER_NAME","DEFAULT_STATE_DASHBOARDS_FILTER_OWNER","order","sGetDashboardsFilterRoot","dashboardsFilter","sGetFilterName","styles","filterField","fontSize","searchIcon","grey700","KEYCODE_ENTER","KEYCODE_ESCAPE","Filter","_Component","inherits","Filter_createSuper","setFilterValue","onChangeName","target","handleKeyUp","keyCode","onKeypressEnter","createClass","nextProps","_this$props","startAdornment","InputAdornment_default","position","Search_default","endAdornment","ControlBar_ClearButton","Input_default","placeholder","onChange","onKeyUp","Function","prototype","withStyles","MAX_ROW_COUNT","DashboardsBar","DashboardsBar_createSuper","_len","args","Array","_key","setInitialDashboardState","adjustedHeight","newRows","newRowCount","min","onToggleMaxHeight","onSelectDashboard","history","push","selectedId","onChangeFilterName","rowCount","controlBarHeight","contentWrapperStyle","padding","overflowY","components_ControlBar_ControlBar","leftControls","display","textDecoration","marginRight","AddCircle","ControlBar_Filter","ControlBar_DashboardItemChip","ControlBar_ShowMoreButton","mapDispatchToProps","withRouter","stateProps","dispatchProps","ownProps","displayDashboards","toLowerCase","includes","marginTop","HeaderMenuItem","dense","LaunchIcon","grey600","LaunchLink","e","launchLink","rel","href","Launch","InsertButton","buttonInsert","ContentMenuItem","onInsert","visType","ItemIcon","getItemIcon","renderedItemIcon","VISUALIZATION","visTypeIcons","menuItem","ContentMenuItem_LaunchLink","ContentMenuItem_InsertButton","singleItems","header","categorizedItems","USERS","REPORTS","RESOURCES","APP","listItemTypes","CategorizedMenuGroup","addItem","tAddListItemContent","newItem","toggleSeeMore","seeMore","onChangeItemsLimit","_this2","_this$props2","hasMore","Fragment","ItemSelector_HeaderMenuItem","itemUrl","getItemUrl","context","ItemSelector_ContentMenuItem","showMoreButton","margin","contextTypes","PropTypes","object","isRequired","dashboardItem","listItemType","dashboardItemIndex","findIndex","category","addToDashboard","ItemSearchField","onFocus","ItemSelector","closeList","openList","_","fetchItems","anchorEl","currentTarget","setFilter","getCategorizedMenuGroups","itemType","endPointName","itemCount","getDefaultItemCount","allItems","maxOptions","slice","ItemSelector_CategorizedMenuGroup","pluralTitle","getSinglesMenuGroups","ItemSelector_SinglesMenuGroup","getMenuGroups","queryString","add","Set","ItemSelector_ItemSearchField","Popover_default","anchorOrigin","horizontal","vertical","transformOrigin","PaperProps","disableAutoFocus","disableEnforceFocus","disableRestoreFocus","maxWidth","EditTitleBar","onChangeTitle","onChangeDescription","components_ItemSelector_ItemSelector","selectedDashboard","FilterDialog","onConfirm","dimension","selectedItems","dialogId","commonProps","onSelect","onDeselect","onReorder","build_es_lib","selectedPeriods","ouItems","dimensionId","large","renderDialogContent","secondary","primary","DEFAULT_STATE_ACTIVE_MODAL_DIMENSION","sGetActiveModalDimension","activeModalDimension","acSetActiveModalDimension","selectedDimensions","clearActiveModalDimension","setActiveModalDimension","addItemFilter","removeItemFilter","removeEditItemFilter","setEditItemFilters","_useState","useState","_useState2","slicedToArray","showPopover","setShowPopover","ref","useRef","closePanel","onCloseDialog","ArrowDropDown_default","onClickOutside","reference","arrow","placement","onDimensionClick","selectedIds","ItemFilter_FilterDialog","itemIdsToRemove","newList","itemIds","oldList","reorderedList","filterItems","Info","show","toggle","InfoOutlined_default","NO_DESCRIPTION","ViewTitleBar","toggleSharingDialog","sharingDialogIsOpen","onStarClick","onInfoClick","titleStyle","cursor","userSelect","StarBorder","TitleBar_Info","marginLeft","update","manage","ItemFilter_FilterSelector","paddingTop","d2_ui_sharing_dialog_default","onRequestClose","tStarDashboard","black","minWidth","TitleBar","edit","TitleBar_EditTitleBar","TitleBar_ViewTitleBar","DefaultPlugin","pluginCredentials","shouldPluginReload","prevProps","reloadAllowed","filtersChanged","vis","visualization","prevVis","visChanged","activeType","reloadPlugin","pluginManager","currentVis","useActiveType","credentials","getActiveType","baseUrl","getBaseUrl","auth","defaultHeaders","Authorization","options","getGridItemDomId","textDiv","ThreeDots","SpeechBubble","fillRule","transform","Warning","FatalErrorBoundary","errorFound","info","container","icons_Warning","DeleteItemButton","deleteItemButton","Delete_default","red500","HEADER_MARGIN_HEIGHT","ItemHeader","forwardRef","itemId","actionButtons","itemHeaderWrap","itemTitle","itemActionsWrap","Item_DeleteItemButton","iconFill","ItemHeaderButtons","setAnchorEl","onSelectActiveType","isTrackerType","isTrackerDomainType","onViewTable","handleClose","onViewChart","onViewMap","canViewAs","isSingleValue","isYearOverYear","VIS_TYPE_GAUGE","VIS_TYPE_PIE","interpretationMenuLabel","activeFooter","pluginIsAvailable","small","icons_ThreeDots","Boolean","InsertChart_default","ViewList_default","hasMapView","Public_default","Launch_default","appName","getAppName","getLink","icons_SpeechBubble","onToggleFooter","scrollContainer","line","border","grey100","ItemFooter","objectId","getId","d2_ui_interpretations_default","memoizeOne","fn","lastArgs","lastValue","every","arg","i","LoadingMask","center","Item","Item_createSuper","showFooter","configLoaded","pluginIsLoaded","applyFilters","visRows","obj","visColumns","columns","visFilters","dimensionFound","dimensionObjects","getUniqueKey","uniqueId","getPluginComponent","memoizedGetVisualizationConfig","calculatedHeight","originalHeight","headerRef","current","clientHeight","ITEM_CONTENT_PADDING_BOTTOM","memoizedGetContentStyle","contentRef","offsetHeight","VisualizationItem_LoadingMask","data_visualizer_plugin_build_es_lib","memoizedApplyFilters","onLoadingComplete","forDashboard","mapViews","layer","hideTitle","VisualizationItem_DefaultPlugin","onToggleItemExpanded","getContentStyle","measuredHeight","createRef","getVisualizationConfig","_componentDidMount","onVisualizationLoaded","prevState","VisualizationItem_ItemHeaderButtons","Item_ItemHeader","VisualizationItem_FatalErrorBoundary","VisualizationItem_ItemFooter","acSetActiveVisualizationType","grey200","Line","PRIVATE","messageTypes","_messageTypes","listStyleType","paddingLeft","seeAll","marginBottom","sender","lineHeight","snippet","maxHeight","overflow","MessagesItem","getMessageHref","msgIdentifier","messageType","getMessageSender","latestMsg","getMessageItems","editClass","readClass","read","msgDate","document","location","messageCount","formatDate","userSettings","widgets_Line","string","MessagesContainer","NotSupportedItem","justifyContent","alignItems","NotInterested_default","align","DescriptionIcon","grey500","DeleteIcon","getItemTitle","ListItem","tRemoveListItemContent","contentItems","index","array","el","getContentItems","contentItem","Description","deleteButton","icons_Delete","grey900","newContent","whiteSpace","textField","fontStretch","onChangeText","updatedItem","d2_ui_rich_text","onEdit","multiline","fullWidth","textDivStyle","viewItem","getIframeSrc","appDetails","iframeSrc","launchUrl","ouIds","ouPath","AppItem","appKey","system","installedApps","app","src","SpacerItem","GridItem","VisualizationItem","TextItem","getGridItem","NoContentMessage","ProgressiveLoadingContainer","shouldLoad","containerRef","shouldLoadHandler","bufferPx","bufferFactor","innerHeight","rect","getBoundingClientRect","bottom","removeHandler","checkShouldLoad","debounceMs","registerHandler","_this3","objectWithoutProperties","eventProps","pick","EXPANDED_HEIGHT","ItemGrid","ItemGrid_createSuper","expandedItems","clickedId","isExpanded","onRemoveItem","onLayoutChange","newLayout","acUpdateDashboardLayout","onResizeStop","layout","oldItem","onItemResize","isVisualizationType","pluginResize","onRemoveItemWrapper","adjustHeightForExpanded","expandedItem","getItemComponent","itemClassNames","Item_ProgressiveLoadingContainer","Item_Item_Item","getItemComponents","widgets_NoContentMessage","translucent","react_grid_layout_default","MARGIN","cols","getGridColumns","rowHeight","GRID_ROW_HEIGHT","innerWidth","compactType","GRID_COMPACT_TYPE","isDraggable","isResizable","draggableCancel","validItems","hasShape","badgeContainer","borderRadius","badge","badgeRemove","FilterBadge","onRemove","count","FilterBar","FilterBar_createSuper","onBadgeRemove","onBadgeClick","bar","FilterBar_FilterBadge","removeItemFIlter","filtersSelector","createSelector","reduce","arr","DashboardContent","components_TitleBar_TitleBar","components_FilterBar_FilterBar","components_ItemGrid_ItemGrid","Content","hasDashboardContent","dashboardsIsEmpty","Dashboard_DashboardContent","dashboardsLoaded","contentNotReady","ControlBar_DashboardsBar","Dashboard_DashboardVerticalOffset","ViewDashboard_Content","ConfirmDeleteDialog","onDeleteConfirmed","onContinueEditing","destructive","buttonBarStyle","EditBar","EditBar_createSuper","translationDialogIsOpen","dashboardModel","confirmDeleteDialogOpen","redirectUrl","onConfirmDelete","onSave","newId","onDiscard","onDiscardChanges","onDelete","onTranslationsSaved","translations","dbLocale","translation","locale","property","onTranslate","fetchDashboardModel","toggleTranslationDialog","confirmDeleteDialog","deleteAccess","ControlBar_ConfirmDeleteDialog","translationDialog","d2_ui_translation_dialog_default","objectToTranslate","fieldsToTranslate","onTranslationSaved","onTranslationError","err","react_router","updateAccess","discardBtnText","rightControls","sGetIsNewDashboard","dashboardToSave","tDeleteDashboard","acSetDashboardDisplayName","EditDashboard","EditDashboard_createSuper","initialized","initEditDashboard","setEditDashboard","getDashboardContent","EditDashboard_Content","ControlBar_EditBar","NewDashboard","setNewDashboard","Dashboard","setDashboard","match","params","selectDashboard","scrollToTop","scrollTo","mode","Dashboard_EditDashboard","Dashboard_NewDashboard","Dashboard_ViewDashboard","dashboardToSelect","preferredId","getItem","App","App_createSuper","setCurrentUser","fetchDashboards","setControlBarRows","setDimensions","spacers","exact","path","render","components_Dashboard_Dashboard","components_SnackbarMessage_SnackbarMessage","childContextTypes","controlBarRows","displayNameProp","filteredDimensions","apiFetchDimensions","dim","dimensionType","dataDimensionType","tSetDimensions","moment","addResources","arTranslations","ar_IQTranslations","daTranslations","enTranslations","esTranslations","frTranslations","idTranslations","kmTranslations","loTranslations","myTranslations","nbTranslations","prsTranslations","psTranslations","ptTranslations","pt_BRTranslations","ruTranslations","svTranslations","tetTranslations","tgTranslations","ukTranslations","urTranslations","viTranslations","zhTranslations","zh_CNTranslations","setDefaultNamespace","changeLanguage","objectClean","conversations","$merge","d2Object","keyUiLocale","authorities","newState","k","$unshift","idToRemove","$splice","stateItems","layoutHasChanged","newStateItems","x","y","stateItem","si","configureStore","middleware","thunk","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","createStore","reducer","applyMiddleware","configI18n","config","sources","manifest","isProd","getManifest","version","manifest_generated_at","process","activities","dhis","dhis2","apiVersion","headers","schemas","getUserSettings","d2Init","initializedD2","ReactDOM","lib","es","store","theme","createMuiTheme","dhis2theme","src_components_App","getElementById","init","domainType","defaultItemCount","_itemTypeMap","_home_travis_build_dhis2_dashboards_app_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_defineProperty__WEBPACK_IMPORTED_MODULE_0__","appUrl","Date","getTime","TableIcon","ChartIcon","MapIcon","ExtensionIcon","PersonIcon","FontDownloadIcon","EmailIcon","CropFreeIcon","NotInterestedIcon","itemWrap","param","isArray","isObject","global","Intl","DateTimeFormat","year","month","day","format","replace","defaultValue","api","idx","indexOf","getWithoutId","_home_travis_build_dhis2_dashboards_app_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectSpread__WEBPACK_IMPORTED_MODULE_0__","itemTypeToExternalPlugin","_itemTypeToExternalPl","_home_travis_build_dhis2_dashboards_app_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_defineProperty__WEBPACK_IMPORTED_MODULE_3__","getPlugin","hasIntegratedPlugin","reportTable","chart","eventReport","eventChart","loadPlugin","plugin","load","loadingIndicator","getName","_home_travis_build_dhis2_dashboards_app_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_asyncToGenerator__WEBPACK_IMPORTED_MODULE_2__","_home_travis_build_dhis2_dashboards_app_node_modules_babel_preset_react_app_node_modules_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default","_ref$options","_home_travis_build_dhis2_dashboards_app_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectSpread__WEBPACK_IMPORTED_MODULE_1__","fetch","fetchedFavorite","resize","unmount","originalType","extractedMapView","mv","VIS_TYPE_COLUMN","VIS_TYPE_PIVOT_TABLE","__webpack_require__","__webpack_exports__","d2_utilizr_lib_isFunction__WEBPACK_IMPORTED_MODULE_0__","d2_utilizr_lib_isFunction__WEBPACK_IMPORTED_MODULE_0___default","n","_modules_util__WEBPACK_IMPORTED_MODULE_1__","isNonNegativeInteger","Number","isInteger","minH","itemWithShape","Error","col","row","itemWidth","itemHeight","getShape","round","getOriginalHeight","querySelector","isFunction","setViewportSize","clientWidth"],"mappings":"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","file":"static/js/main.43282fc1.chunk.js","sourcesContent":["import { getInstance } from 'd2';\nimport arrayClean from 'd2-utilizr/lib/arrayClean';\n\nimport { getEndPointName } from '../modules/itemTypes';\n\n// Id, name\nexport const getIdNameFields = ({ rename } = {}) => [\n    'id',\n    `${rename ? 'displayName~rename(name)' : 'name,displayName'}`,\n];\n\n// Item\nexport const getItemFields = () => [\n    'dimensionItem~rename(id)',\n    'displayName~rename(name)',\n    'dimensionItemType',\n];\n\n// Dimension\nexport const getDimensionFields = ({ withItems }) =>\n    arrayClean([\n        'dimension',\n        'legendSet[id]',\n        'filter',\n        'programStage',\n        withItems ? `items[${getItemFields().join(',')}]` : ``,\n    ]);\n\n// Axis\nexport const getAxesFields = ({ withItems }) => [\n    `columns[${getDimensionFields({ withItems }).join(',')}]`,\n    `rows[${getDimensionFields({ withItems }).join(',')}]`,\n    `filters[${getDimensionFields({ withItems }).join(',')}]`,\n];\n\n// Favorite\nexport const getFavoriteFields = ({ withDimensions, withOptions }) => {\n    return arrayClean([\n        `${getIdNameFields({ rename: true }).join(',')}`,\n        'displayDescription~rename(description)',\n        withDimensions ? `${getAxesFields({ withItems: true }).join(',')}` : ``,\n        withOptions\n            ? [\n                  '*',\n                  '!attributeDimensions',\n                  '!attributeValues',\n                  '!category',\n                  '!categoryDimensions',\n                  '!categoryOptionGroupSetDimensions',\n                  '!columnDimensions',\n                  '!dataDimensionItems',\n                  '!dataElementDimensions',\n                  '!dataElementGroupSetDimensions',\n                  '!filterDimensions',\n                  '!itemOrganisationUnitGroups',\n                  '!lastUpdatedBy',\n                  '!organisationUnitGroupSetDimensions',\n                  '!organisationUnitLevels',\n                  '!organisationUnits',\n                  '!programIndicatorDimensions',\n                  '!relativePeriods',\n                  '!reportParams',\n                  '!rowDimensions',\n                  '!series',\n                  '!translations',\n                  '!userOrganisationUnit',\n                  '!userOrganisationUnitChildren',\n                  '!userOrganisationUnitGrandChildren',\n              ].join(',')\n            : '',\n    ]);\n};\n\nexport const getFavoritesFields = ({ withDimensions }) => [\n    `reportTable[${getFavoriteFields({ withDimensions }).join(',')}]`,\n    `chart[${['type', ...getFavoriteFields({ withDimensions })].join(',')}]`,\n    `map[${getFavoriteFields({ withDimensions }).join(',')}]`,\n    `eventReport[${getFavoriteFields({ withDimensions }).join(',')}]`,\n    `eventChart[${getFavoriteFields({ withDimensions }).join(',')}]`,\n];\n\n// List item\nexport const getListItemFields = () => [\n    `reports[${['type', ...getIdNameFields({ rename: true })].join(',')}]`,\n    `resources[${getIdNameFields({ rename: true }).join(',')}]`,\n    `users[${getIdNameFields({ rename: true }).join(',')}]`,\n];\n\n// Map\nexport const getMapFields = () => [\n    `${getIdNameFields({ rename: true }).join(',')}`,\n    'user,longitude,latitude,zoom,basemap',\n    `mapViews[${getFavoriteFields({\n        withDimensions: true,\n        withOptions: true,\n    })}]`,\n];\n\n// Api\n\n// Get more info about the favorite of a dashboard item\nexport const apiFetchFavorite = (id, type, { fields }) =>\n    getInstance().then(d2 =>\n        d2.Api.getApi().get(`${getEndPointName(type)}/${id}`, {\n            fields:\n                fields ||\n                getFavoriteFields({\n                    withDimensions: true,\n                    withOptions: true,\n                }),\n        })\n    );\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"Item_list__2oHc1\",\"item\":\"Item_item__lO40M\",\"itemicon\":\"Item_itemicon__dv5ah\",\"link\":\"Item_link__2gULT\",\"deleteicon\":\"Item_deleteicon__3c7bl\",\"deletebutton\":\"Item_deletebutton__1DfY5\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"section\":\"EditTitleBar_section__2sBzn\",\"titleDescription\":\"EditTitleBar_titleDescription__1-pfK\",\"title\":\"EditTitleBar_title__2fOQP\",\"description\":\"EditTitleBar_description__fKEX6\",\"itemSelector\":\"EditTitleBar_itemSelector__PWJdH\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"actions\":\"ViewTitleBar_actions__1kGtw\",\"editLink\":\"ViewTitleBar_editLink__1HKr0\",\"titleBar\":\"ViewTitleBar_titleBar__1K-pW\",\"titleBarIcon\":\"ViewTitleBar_titleBarIcon__2spKM\"};","export const RECEIVED_USER = 'RECEIVED_USER';\n\nexport const DEFAULT_STATE_USER = {\n    id: '',\n    username: '',\n    uiLocale: '',\n    isSuperuser: false,\n};\n\nexport default (state = DEFAULT_STATE_USER, action) => {\n    switch (action.type) {\n        case RECEIVED_USER: {\n            return fromD2ToUserObj(action.value);\n        }\n        default:\n            return state;\n    }\n};\n\nfunction fromD2ToUserObj(d2Object) {\n    return {\n        id: d2Object.id,\n        username: d2Object.username,\n        uiLocale: d2Object.settings.keyUiLocale,\n        isSuperuser: d2Object.authorities.has('ALL'),\n    };\n}\n\n// selectors\n\nexport const sGetUserId = state => state.user.id;\nexport const sGetUserUsername = state => state.user.username;\nexport const sGetIsSuperuser = state => state.user.isSuperuser;\nexport const sGetUiLocale = state => state.user.uiLocale;\n","import { TEXT, SPACER } from './itemTypes';\nimport { getGridItemProperties } from '../components/ItemGrid/gridUtil';\n\nexport const spacerContent = 'SPACER_ITEM_FOR_DASHBOARD_LAYOUT_CONVENIENCE';\nexport const emptyTextItemContent = 'TEXT_ITEM_WITH_NO_CONTENT';\n\nconst isBackendSpacerType = item =>\n    item.type === TEXT && item.text === spacerContent;\nconst isUiSpacerType = item => item.type === SPACER;\nconst isTextType = item => item.type === TEXT && item.text !== spacerContent;\n\nexport const convertUiItemsToBackend = items =>\n    items.map(item => {\n        let text = null;\n        if (isUiSpacerType(item)) {\n            text = spacerContent;\n        } else if (isTextType(item)) {\n            text = item.text || emptyTextItemContent;\n        }\n\n        return {\n            ...item,\n            ...(text ? { text } : {}),\n        };\n    });\n\nexport const convertBackendItemsToUi = items =>\n    items.map(item => {\n        const type = isBackendSpacerType(item) ? SPACER : item.type;\n        const gridProperties = getGridItemProperties(item.id);\n\n        const text = isTextType(item)\n            ? item.text === emptyTextItemContent\n                ? ''\n                : item.text\n            : null;\n\n        return {\n            ...item,\n            ...(text !== null ? { text } : {}),\n            type,\n            ...gridProperties,\n        };\n    });\n","/** @module reducers/dashboards */\n\nimport arrayFrom from 'd2-utilizr/lib/arrayFrom';\nimport arraySort from 'd2-utilizr/lib/arraySort';\n\nimport { orArray, orObject } from '../modules/util';\nimport { convertBackendItemsToUi } from '../modules/uiBackendItemConverter';\n\nexport const SET_DASHBOARDS = 'SET_DASHBOARDS';\nexport const ADD_DASHBOARDS = 'ADD_DASHBOARDS';\nexport const SET_DASHBOARD_STARRED = 'SET_DASHBOARD_STARRED';\nexport const SET_DASHBOARD_DISPLAY_NAME = 'SET_DASHBOARD_DISPLAY_NAME';\nexport const SET_DASHBOARD_ITEMS = 'SET_DASHBOARD_ITEMS';\n\nexport const DEFAULT_STATE_DASHBOARDS = {\n    byId: null,\n    items: [],\n};\n\n// reducer helper functions\n\nconst updateDashboardProp = ({ state, dashboardId, prop, value }) => ({\n    byId: {\n        ...state.byId,\n        [dashboardId]: {\n            ...state.byId[dashboardId],\n            [prop]: value,\n        },\n    },\n    items: state.items,\n});\n\n/**\n * Reducer that computes and returns the new state based on the given action\n * @function\n * @param {Object} state The current state\n * @param {Object} action The action to be evaluated\n * @returns {Object}\n */\nexport default (state = DEFAULT_STATE_DASHBOARDS, action) => {\n    switch (action.type) {\n        case SET_DASHBOARDS: {\n            return {\n                byId: action.value,\n                items: [],\n            };\n        }\n        case ADD_DASHBOARDS: {\n            return {\n                ...state,\n                byId: {\n                    ...state.byId,\n                    ...action.value,\n                },\n            };\n        }\n        case SET_DASHBOARD_STARRED: {\n            return updateDashboardProp({\n                state,\n                dashboardId: action.dashboardId,\n                prop: 'starred',\n                value: action.value,\n            });\n        }\n        case SET_DASHBOARD_DISPLAY_NAME: {\n            return updateDashboardProp({\n                state,\n                dashboardId: action.dashboardId,\n                prop: 'displayName',\n                value: action.value,\n            });\n        }\n        case SET_DASHBOARD_ITEMS: {\n            return {\n                ...state,\n                items: action.value,\n            };\n        }\n        default:\n            return state;\n    }\n};\n\n// root selector\n\nexport const sGetDashboardsRoot = state => state.dashboards;\n\n// selector level 1\n\n/**\n * Selector which returns a dashboard by id from the state object\n * If no matching dashboard is found it returns undefined\n * If dashboards.byId is null, then the dashboards api request\n * has not yet completed. If dashboards.byId is an empty object\n * then the dashboards api request is complete, but no dashboards\n * were returned\n *\n * @function\n * @param {Object} state The current state\n * @param {Number} id The id of the dashboard\n * @returns {Object | undefined}\n */\nexport const sGetDashboardById = (state, id) =>\n    orObject(sGetDashboardsRoot(state).byId)[id];\n\nexport const sDashboardsIsFetching = state => {\n    return sGetDashboardsRoot(state).byId === null;\n};\n\n/**\n * Selector which returns all dashboards (the byId object)\n *\n * @function\n * @param {Object} state The current state\n * @returns {Object | undefined}\n */\nexport const sGetAllDashboards = state =>\n    orObject(sGetDashboardsRoot(state).byId);\n\n/**\n * Selector which returns the current dashboard items\n *\n * @function\n * @param {Object} state The current state\n * @returns {Array}\n */\nexport const sGetDashboardItems = state => sGetDashboardsRoot(state).items;\n\n// selector level 2\n\nexport const sGetStarredDashboards = state =>\n    Object.values(sGetAllDashboards(state)).filter(\n        dashboard => dashboard.starred === true\n    );\n\nexport const sGetUnstarredDashboards = state =>\n    Object.values(sGetAllDashboards(state)).filter(\n        dashboard => dashboard.starred === false\n    );\n\n// selector level 3\n\nexport const sGetStarredDashboardIds = state => {\n    return sGetStarredDashboards(state).map(dashboard => dashboard.id);\n};\n\nexport const sGetUnstarredDashboardIds = state =>\n    sGetUnstarredDashboards(state).map(dashboard => dashboard.id);\n\nexport const sGetDashboardsSortedByStarred = state => [\n    ...arraySort(sGetStarredDashboards(state), 'ASC', 'displayName'),\n    ...arraySort(sGetUnstarredDashboards(state), 'ASC', 'displayName'),\n];\n\n// utils\n\n/**\n * Returns the array of dashboards, customized for ui\n * @function\n * @param {Array} data The original dashboard list\n * @returns {Array}\n */\nexport const getCustomDashboards = data =>\n    arrayFrom(data).map(d => ({\n        id: d.id,\n        name: d.name,\n        displayName: d.displayName,\n        description: d.description,\n        displayDescription: d.displayDescription,\n        starred: d.favorite,\n        owner: d.user.name,\n        created: d.created\n            .split('T')\n            .join(' ')\n            .substr(0, 16),\n        lastUpdated: d.lastUpdated\n            .split('T')\n            .join(' ')\n            .substr(0, 16),\n        access: d.access,\n        numberOfItems: orArray(d.dashboardItems).length,\n        dashboardItems: convertBackendItemsToUi(d.dashboardItems),\n    }));\n","/** @module reducers/editDashboard */\nimport update from 'immutability-helper';\nimport isEmpty from 'lodash/isEmpty';\nimport { orArray, orObject } from '../modules/util';\n\nexport const RECEIVED_EDIT_DASHBOARD = 'RECEIVED_EDIT_DASHBOARD';\nexport const RECEIVED_NOT_EDITING = 'RECEIVED_NOT_EDITING';\nexport const START_NEW_DASHBOARD = 'START_NEW_DASHBOARD';\nexport const RECEIVED_TITLE = 'RECEIVED_TITLE';\nexport const RECEIVED_DESCRIPTION = 'RECEIVED_DESCRIPTION';\nexport const ADD_DASHBOARD_ITEM = 'ADD_DASHBOARD_ITEM';\nexport const REMOVE_DASHBOARD_ITEM = 'REMOVE_DASHBOARD_ITEM';\nexport const UPDATE_DASHBOARD_ITEM = 'UPDATE_DASHBOARD_ITEM';\nexport const RECEIVED_DASHBOARD_LAYOUT = 'RECEIVED_DASHBOARD_LAYOUT';\n\nexport const DEFAULT_STATE_EDIT_DASHBOARD = {};\nexport const NEW_DASHBOARD_STATE = {\n    id: '',\n    name: '',\n    access: {},\n    description: '',\n    dashboardItems: [],\n};\n\nexport default (state = DEFAULT_STATE_EDIT_DASHBOARD, action) => {\n    switch (action.type) {\n        case RECEIVED_EDIT_DASHBOARD: {\n            const newState = {};\n            Object.keys(NEW_DASHBOARD_STATE).map(\n                k => (newState[k] = action.value[k])\n            );\n            return newState;\n        }\n        case RECEIVED_NOT_EDITING:\n            return DEFAULT_STATE_EDIT_DASHBOARD;\n        case START_NEW_DASHBOARD:\n            return NEW_DASHBOARD_STATE;\n        case RECEIVED_TITLE: {\n            return Object.assign({}, state, { name: action.value });\n        }\n        case RECEIVED_DESCRIPTION: {\n            return Object.assign({}, state, {\n                description: action.value,\n            });\n        }\n        case ADD_DASHBOARD_ITEM:\n            return update(state, {\n                dashboardItems: { $unshift: [action.value] },\n            });\n        case REMOVE_DASHBOARD_ITEM: {\n            const idToRemove = action.value;\n\n            const dashboardItemIndex = state.dashboardItems.findIndex(\n                item => item.id === idToRemove\n            );\n\n            if (dashboardItemIndex > -1) {\n                return update(state, {\n                    dashboardItems: {\n                        $splice: [[dashboardItemIndex, 1]],\n                    },\n                });\n            }\n\n            return state;\n        }\n        case RECEIVED_DASHBOARD_LAYOUT: {\n            const stateItems = orArray(state.dashboardItems);\n            let layoutHasChanged = false;\n\n            const newStateItems = action.value.map(({ x, y, w, h, i }) => {\n                const stateItem = stateItems.find(si => si.id === i);\n\n                if (\n                    !(\n                        stateItem.x === x &&\n                        stateItem.y === y &&\n                        stateItem.w === w &&\n                        stateItem.h === h\n                    )\n                ) {\n                    layoutHasChanged = true;\n                    return Object.assign({}, stateItem, { w, h, x, y });\n                }\n\n                return stateItem;\n            });\n\n            return layoutHasChanged\n                ? {\n                      ...state,\n                      dashboardItems: newStateItems,\n                  }\n                : state;\n        }\n        case UPDATE_DASHBOARD_ITEM: {\n            const dashboardItem = action.value;\n\n            const dashboardItemIndex = state.dashboardItems.findIndex(\n                item => item.id === dashboardItem.id\n            );\n\n            if (dashboardItemIndex > -1) {\n                const newState = update(state, {\n                    dashboardItems: {\n                        $splice: [\n                            [\n                                dashboardItemIndex,\n                                1,\n                                Object.assign({}, dashboardItem),\n                            ],\n                        ],\n                    },\n                });\n\n                return newState;\n            }\n\n            return state;\n        }\n        default:\n            return state;\n    }\n};\n\n// root selector\n\nexport const sGetEditDashboardRoot = state => state.editDashboard;\n\n// selectors\n\nexport const sGetIsEditing = state => !isEmpty(state.editDashboard);\n\nexport const sGetIsNewDashboard = state => {\n    return (\n        !isEmpty(state.editDashboard) && sGetEditDashboardRoot(state).id === ''\n    );\n};\n\nexport const sGetEditDashboardItems = state =>\n    orObject(sGetEditDashboardRoot(state)).dashboardItems;\n","export const CLEAR_EDIT_ITEM_FILTERS = 'CLEAR_EDIT_ITEM_FILTERS';\nexport const REMOVE_EDIT_ITEM_FILTER = 'REMOVE_EDIT_ITEM_FILTER';\nexport const SET_EDIT_ITEM_FILTERS = 'SET_EDIT_ITEM_FILTERS';\n\nexport const DEFAULT_STATE_EDIT_ITEM_FILTERS = {};\n\nexport default (state = DEFAULT_STATE_EDIT_ITEM_FILTERS, action) => {\n    switch (action.type) {\n        case REMOVE_EDIT_ITEM_FILTER: {\n            const newState = { ...state };\n\n            delete newState[action.id];\n\n            return newState;\n        }\n        case SET_EDIT_ITEM_FILTERS: {\n            return action.filters;\n        }\n        case CLEAR_EDIT_ITEM_FILTERS: {\n            return DEFAULT_STATE_EDIT_ITEM_FILTERS;\n        }\n        default:\n            return state;\n    }\n};\n\n// selectors\n\nexport const sGetEditItemFiltersRoot = state => state.editItemFilters;\n\nexport const sGetEditFiltersKeys = state =>\n    Object.keys(sGetEditItemFiltersRoot(state));\n","/** @module reducers/selected */\nimport { combineReducers } from 'redux';\n\nimport { validateReducer } from '../modules/util';\n\nexport const SET_SELECTED_ID = 'SET_SELECTED_ID';\nexport const SET_SELECTED_ISLOADING = 'SET_SELECTED_ISLOADING';\nexport const SET_SELECTED_SHOWDESCRIPTION = 'SET_SELECTED_SHOWDESCRIPTION';\n\nexport const DEFAULT_STATE_SELECTED_ID = null;\nexport const DEFAULT_STATE_SELECTED_ISLOADING = false;\nexport const DEFAULT_STATE_SELECTED_SHOWDESCRIPTION = false;\n\n/**\n * Reducer functions that computes and returns the new state based on the given action\n * @function\n * @param {Object} state The current state\n * @param {Object} action The action to be evaluated\n */\nconst id = (state = DEFAULT_STATE_SELECTED_ID, action) => {\n    switch (action.type) {\n        case SET_SELECTED_ID:\n            return validateReducer(action.value, DEFAULT_STATE_SELECTED_ID);\n        default:\n            return state;\n    }\n};\n\nconst isLoading = (state = DEFAULT_STATE_SELECTED_ISLOADING, action) => {\n    switch (action.type) {\n        case SET_SELECTED_ISLOADING:\n            return validateReducer(\n                action.value,\n                DEFAULT_STATE_SELECTED_ISLOADING\n            );\n        default:\n            return state;\n    }\n};\n\nconst showDescription = (\n    state = DEFAULT_STATE_SELECTED_SHOWDESCRIPTION,\n    action\n) => {\n    switch (action.type) {\n        case SET_SELECTED_SHOWDESCRIPTION:\n            return validateReducer(\n                action.value,\n                DEFAULT_STATE_SELECTED_SHOWDESCRIPTION\n            );\n        default:\n            return state;\n    }\n};\n\nexport default combineReducers({\n    id,\n    isLoading,\n    showDescription,\n});\n\n// Selectors\n\nexport const sGetSelectedRoot = state => state.selected;\n\nexport const sGetSelectedId = state => sGetSelectedRoot(state).id;\n\nexport const sGetSelectedIsLoading = state => sGetSelectedRoot(state).isLoading;\n\nexport const sGetSelectedShowDescription = state =>\n    sGetSelectedRoot(state).showDescription;\n","import {\n    REMOVE_EDIT_ITEM_FILTER,\n    SET_EDIT_ITEM_FILTERS,\n    CLEAR_EDIT_ITEM_FILTERS,\n} from '../reducers/editItemFilters';\n\n// actions\n\nexport const acRemoveEditItemFilter = id => ({\n    type: REMOVE_EDIT_ITEM_FILTER,\n    id,\n});\n\nexport const acClearEditItemFilters = () => ({\n    type: CLEAR_EDIT_ITEM_FILTERS,\n});\n\nexport const acSetEditItemFilters = filters => ({\n    type: SET_EDIT_ITEM_FILTERS,\n    filters,\n});\n","export const CLEAR_ITEM_FILTERS = 'CLEAR_ITEM_FILTERS';\nexport const SET_ITEM_FILTERS = 'SET_ITEM_FILTERS';\nexport const ADD_ITEM_FILTER = 'ADD_ITEM_FILTER';\nexport const REMOVE_ITEM_FILTER = 'REMOVE_ITEM_FILTER';\n\nexport const DEFAULT_STATE_ITEM_FILTERS = {};\n\nexport default (state = DEFAULT_STATE_ITEM_FILTERS, action) => {\n    switch (action.type) {\n        case ADD_ITEM_FILTER: {\n            return {\n                ...state,\n                [action.filter.id]: action.filter.value,\n            };\n        }\n        case REMOVE_ITEM_FILTER: {\n            const newState = { ...state };\n\n            delete newState[action.id];\n\n            return newState;\n        }\n        case SET_ITEM_FILTERS: {\n            return action.filters;\n        }\n        case CLEAR_ITEM_FILTERS: {\n            return DEFAULT_STATE_ITEM_FILTERS;\n        }\n        default:\n            return state;\n    }\n};\n\n// selectors\n\nexport const sGetItemFiltersRoot = state => state.itemFilters;\n\nexport const sGetFiltersKeys = state => Object.keys(sGetItemFiltersRoot(state));\n","import {\n    ADD_ITEM_FILTER,\n    REMOVE_ITEM_FILTER,\n    SET_ITEM_FILTERS,\n    CLEAR_ITEM_FILTERS,\n} from '../reducers/itemFilters';\n\nexport const FILTER_ORG_UNIT = 'ou';\n\n// actions\n\nexport const acAddItemFilter = filter => ({\n    type: ADD_ITEM_FILTER,\n    filter,\n});\n\nexport const acRemoveItemFilter = id => ({\n    type: REMOVE_ITEM_FILTER,\n    id,\n});\n\nexport const acClearItemFilters = () => ({\n    type: CLEAR_ITEM_FILTERS,\n});\n\nexport const acSetItemFilters = filters => ({\n    type: SET_ITEM_FILTERS,\n    filters,\n});\n","import update from 'immutability-helper';\nimport { arrayToIdMap } from '../modules/util';\n\nexport const RECEIVED_MESSAGES = 'RECEIVED_MESSAGES';\n\nexport default (state = {}, action) => {\n    switch (action.type) {\n        case RECEIVED_MESSAGES: {\n            const conversations = arrayToIdMap(action.value);\n\n            const newState = update(state, { $merge: conversations });\n\n            return newState;\n        }\n        default:\n            return state;\n    }\n};\n\n// selectors\n\nexport const sGetMessagesRoot = state => state.messages;\n","import { getInstance } from 'd2';\n\nexport const getMessages = () => {\n    const fields =\n        'id,messageCount,lastUpdated,messageType,displayName,read,messages[id,read,sender[id,displayName],text,lastUpdated]';\n    const url = `/messageConversations?fields=${fields}&order=read:asc&pageSize=200`;\n    return getInstance()\n        .then(d2 => d2.Api.getApi().get(url))\n        .catch(error => console.log('Error:', error));\n};\n","export const RECEIVED_SNACKBAR_MESSAGE = 'RECEIVED_SNACKBAR_MESSAGE';\nexport const CLOSE_SNACKBAR = 'CLOSE_SNACKBAR';\n\nexport const DEFAULT_STATE_SNACKBAR = {\n    message: {},\n    duration: null,\n    open: false,\n};\n\nexport default (state = DEFAULT_STATE_SNACKBAR, action) => {\n    switch (action.type) {\n        case RECEIVED_SNACKBAR_MESSAGE: {\n            return { ...state, ...action.value };\n        }\n        case CLOSE_SNACKBAR: {\n            return DEFAULT_STATE_SNACKBAR;\n        }\n        default:\n            return state;\n    }\n};\n\n// selectors\n\nexport const sGetSnackbar = state => state.snackbar || DEFAULT_STATE_SNACKBAR;\n","import {\n    RECEIVED_SNACKBAR_MESSAGE,\n    CLOSE_SNACKBAR,\n} from '../reducers/snackbar';\n\nexport const acReceivedSnackbarMessage = value => ({\n    type: RECEIVED_SNACKBAR_MESSAGE,\n    value,\n});\n\nexport const acCloseSnackbar = () => ({\n    type: CLOSE_SNACKBAR,\n});\n","import { orObject } from '../modules/util';\nimport objectClean from 'd2-utilizr/lib/objectClean';\n\n/** @module reducers/visualizations */\n\nexport const ADD_VISUALIZATION = 'ADD_VISUALIZATION';\nexport const SET_ACTIVE_VISUALIZATION_TYPE = 'SET_ACTIVE_VISUALIZATION_TYPE';\n\nexport const DEFAULT_STATE_VISUALIZATIONS = {};\n\nconst isEmpty = p => p === undefined || p === null;\n\nexport default (state = DEFAULT_STATE_VISUALIZATIONS, action) => {\n    switch (action.type) {\n        case ADD_VISUALIZATION: {\n            return {\n                ...state,\n                [action.value.id]: objectClean(\n                    {\n                        ...orObject(state[action.value.id]),\n                        ...action.value,\n                    },\n                    isEmpty\n                ),\n            };\n        }\n        case SET_ACTIVE_VISUALIZATION_TYPE: {\n            return {\n                ...state,\n                [action.id]: objectClean(\n                    {\n                        ...orObject(state[action.id]),\n                        activeType: action.activeType,\n                    },\n                    isEmpty\n                ),\n            };\n        }\n        default:\n            return state;\n    }\n};\n\n// root selector\nexport const sGetVisualizationsRoot = state => state.visualizations;\n\n// selectors level 1\nexport const sGetVisualization = (state, id) => {\n    return sGetVisualizationsRoot(state)[id];\n};\n","import {\n    ADD_VISUALIZATION,\n    SET_ACTIVE_VISUALIZATION_TYPE,\n} from '../reducers/visualizations';\n\nexport const acAddVisualization = value => ({\n    type: ADD_VISUALIZATION,\n    value,\n});\n\nexport const acSetActiveVisualizationType = (id, activeType) => {\n    const action = {\n        type: SET_ACTIVE_VISUALIZATION_TYPE,\n        id,\n        activeType,\n    };\n\n    return action;\n};\n","import arrayClean from 'd2-utilizr/lib/arrayClean';\nimport {\n    getListItemFields,\n    getFavoritesFields,\n    getIdNameFields,\n} from './metadata';\n\n// Helper functions\n\nexport const onError = error => console.log('Error: ', error);\n\n// Dashboard item\nexport const getDashboardItemsFields = ({ withFavorite } = {}) =>\n    arrayClean([\n        'id',\n        'type',\n        'shape',\n        'x',\n        'y',\n        'width~rename(w)',\n        'height~rename(h)',\n        'messages',\n        'text',\n        'appKey',\n        `${getListItemFields().join(',')}`,\n        withFavorite\n            ? `${getFavoritesFields({\n                  withDimensions: withFavorite.withDimensions,\n              }).join(',')}`\n            : ``,\n    ]);\n\n// Dashboard\nexport const getDashboardFields = ({ withItems, withFavorite } = {}) =>\n    arrayClean([\n        `${getIdNameFields().join(',')}`,\n        'description',\n        'displayDescription',\n        'favorite',\n        `user[${getIdNameFields({ rename: true }).join(',')}]`,\n        'created',\n        'lastUpdated',\n        'access',\n        withItems\n            ? `dashboardItems[${getDashboardItemsFields({\n                  withFavorite,\n              }).join(',')}]`\n            : ``,\n    ]);\n","import { getInstance } from 'd2';\nimport arrayClean from 'd2-utilizr/lib/arrayClean';\nimport { onError, getDashboardFields } from './index';\n\n// Get \"all\" dashboards on startup\nexport const apiFetchDashboards = () =>\n    getInstance()\n        .then(d2 =>\n            d2.models.dashboard.list({\n                fields: [\n                    getDashboardFields().join(','),\n                    'dashboardItems[id]',\n                ].join(','),\n                paging: 'false',\n            })\n        )\n        .catch(onError);\n\n// Get more info about selected dashboard\nexport const apiFetchDashboard = id =>\n    getInstance()\n        .then(d2 =>\n            d2.models.dashboard.get(id, {\n                fields: arrayClean(\n                    getDashboardFields({\n                        withItems: true,\n                        withFavorite: { withDimensions: false },\n                    })\n                ).join(','),\n            })\n        )\n        .catch(onError);\n\n// Star dashboard\nexport const apiStarDashboard = (id, isStarred) => {\n    const url = `dashboards/${id}/favorite`;\n\n    getInstance().then(d2 => {\n        if (isStarred) {\n            d2.Api.getApi().post(url);\n        } else {\n            d2.Api.getApi().delete(url);\n        }\n    });\n};\n\nexport const apiDeleteDashboard = id => {\n    return getInstance()\n        .then(d2 => {\n            return d2.models.dashboards\n                .get(id)\n                .then(dashboard => dashboard.delete());\n        })\n        .catch(onError);\n};\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport Snackbar from '@material-ui/core/Snackbar';\nimport PropTypes from 'prop-types';\n\nimport { sGetSnackbar } from '../../reducers/snackbar';\nimport { acCloseSnackbar } from '../../actions/snackbar';\n\nconst LOADING_DASHBOARD = 'LOADING_DASHBOARD';\nexport const loadingDashboardMsg = { name: '', type: LOADING_DASHBOARD };\n\nconst SnackbarMessageContent = ({ message }) => {\n    if (typeof message === 'object') {\n        //future message types:  switch(message.type)\n        return (\n            <span>\n                Loading <span style={{ fontWeight: 800 }}>{message.name}</span>{' '}\n                dashboard\n            </span>\n        );\n    }\n    return message;\n};\n\nexport const SnackbarMessage = props => {\n    return (\n        <Snackbar\n            style={{ zIndex: 10001 }}\n            open={props.snackbarOpen}\n            message={<SnackbarMessageContent message={props.snackbarMessage} />}\n            autoHideDuration={props.snackbarDuration}\n            onClose={props.onCloseSnackbar}\n        />\n    );\n};\n\nconst mapStateToProps = state => {\n    const { message, duration, open } = sGetSnackbar(state);\n    return {\n        snackbarOpen: open,\n        snackbarMessage: message,\n        snackbarDuration: duration,\n    };\n};\n\nSnackbarMessage.propTypes = {\n    snackbarDuration: PropTypes.string,\n    snackbarMessage: PropTypes.object,\n    snackbarOpen: PropTypes.bool,\n    onCloseSnackbar: PropTypes.func,\n};\n\nexport default connect(\n    mapStateToProps,\n    {\n        onCloseSnackbar: acCloseSnackbar,\n    }\n)(SnackbarMessage);\n","import { getCustomDashboards, sGetDashboardById } from '../reducers/dashboards';\nimport { sGetIsEditing } from '../reducers/editDashboard';\nimport { sGetEditItemFiltersRoot } from '../reducers/editItemFilters';\nimport {\n    SET_SELECTED_ID,\n    SET_SELECTED_ISLOADING,\n    SET_SELECTED_SHOWDESCRIPTION,\n    sGetSelectedIsLoading,\n    sGetSelectedId,\n} from '../reducers/selected';\nimport { sGetUserUsername } from '../reducers/user';\n\nimport { acSetDashboardItems, acAppendDashboards } from './dashboards';\nimport { acClearEditItemFilters } from './editItemFilters';\nimport { acClearItemFilters, acSetItemFilters } from './itemFilters';\nimport { tGetMessages } from '../components/Item/MessagesItem/actions';\nimport { acReceivedSnackbarMessage, acCloseSnackbar } from './snackbar';\nimport { acAddVisualization } from './visualizations';\n\nimport { apiFetchDashboard } from '../api/dashboards';\nimport { storePreferredDashboardId } from '../api/localStorage';\n\nimport { withShape } from '../components/ItemGrid/gridUtil';\nimport { loadingDashboardMsg } from '../components/SnackbarMessage/SnackbarMessage';\nimport { extractFavorite } from '../components/Item/VisualizationItem/plugin';\n\nimport {\n    REPORT_TABLE,\n    CHART,\n    MAP,\n    EVENT_REPORT,\n    EVENT_CHART,\n    MESSAGES,\n} from '../modules/itemTypes';\nimport { orObject } from '../modules/util';\n\n// actions\n\nexport const acSetSelectedId = value => ({\n    type: SET_SELECTED_ID,\n    value,\n});\n\nexport const acSetSelectedIsLoading = value => ({\n    type: SET_SELECTED_ISLOADING,\n    value,\n});\n\nexport const acSetSelectedShowDescription = value => ({\n    type: SET_SELECTED_SHOWDESCRIPTION,\n    value,\n});\n\nexport const tLoadDashboard = id => async dispatch => {\n    try {\n        const dash = await apiFetchDashboard(id);\n\n        dispatch(acAppendDashboards(dash));\n\n        return Promise.resolve(dash);\n    } catch (err) {\n        console.log('Error: ', err);\n        return err;\n    }\n};\n\n// thunks\nexport const tSetSelectedDashboardById = id => async (dispatch, getState) => {\n    dispatch(acSetSelectedIsLoading(true));\n\n    const snackbarTimeout = setTimeout(() => {\n        const dashboardName = orObject(sGetDashboardById(getState(), id))\n            .displayName;\n        if (sGetSelectedIsLoading(getState()) && dashboardName) {\n            loadingDashboardMsg.name = dashboardName;\n\n            dispatch(\n                acReceivedSnackbarMessage({\n                    message: loadingDashboardMsg,\n                    open: true,\n                })\n            );\n        }\n    }, 500);\n\n    const onSuccess = selected => {\n        const customDashboard = getCustomDashboards(selected)[0];\n\n        dispatch(\n            acSetDashboardItems(withShape(customDashboard.dashboardItems))\n        );\n\n        storePreferredDashboardId(sGetUserUsername(getState()), id);\n\n        // add visualizations to store\n        customDashboard.dashboardItems.forEach(item => {\n            switch (item.type) {\n                case REPORT_TABLE:\n                case CHART:\n                case MAP:\n                case EVENT_REPORT:\n                case EVENT_CHART:\n                    dispatch(acAddVisualization(extractFavorite(item)));\n                    break;\n                case MESSAGES:\n                    dispatch(tGetMessages(id));\n                    break;\n                default:\n                    break;\n            }\n        });\n\n        const state = getState();\n        if (id === sGetSelectedId(state)) {\n            if (sGetIsEditing(state)) {\n                // disable filters when switching to edit mode\n                dispatch(acClearItemFilters());\n            } else {\n                // enable filters when switching to view mode\n                dispatch(acSetItemFilters(sGetEditItemFiltersRoot(state)));\n            }\n        } else {\n            // clear filters when switching dashboard\n            dispatch(acClearEditItemFilters());\n            dispatch(acClearItemFilters());\n        }\n\n        dispatch(acSetSelectedId(id));\n\n        dispatch(acSetSelectedIsLoading(false));\n\n        clearTimeout(snackbarTimeout);\n\n        dispatch(acCloseSnackbar());\n\n        return selected;\n    };\n\n    const onError = error => {\n        console.log('Error: ', error);\n        return error;\n    };\n\n    try {\n        const selected = await dispatch(tLoadDashboard(id));\n\n        return onSuccess(selected);\n    } catch (err) {\n        return onError(err);\n    }\n};\n","export const getPreferredDashboardId = username =>\n    localStorage.getItem(`dhis2.dashboard.current.${username}`) || undefined;\n\nexport const storePreferredDashboardId = (username, dashboardId) => {\n    localStorage.setItem(`dhis2.dashboard.current.${username}`, dashboardId);\n};\n","import { RECEIVED_MESSAGES } from '../../../reducers/messages';\nimport { getMessages } from '../../../api/messages';\n\nconst onError = (action, error) => {\n    console.log(`Error in action ${action}: ${error}`);\n    return error;\n};\n\nexport const receivedMessages = value => ({\n    type: RECEIVED_MESSAGES,\n    value,\n});\n\nexport const tGetMessages = () => async dispatch => {\n    try {\n        const messages = await getMessages();\n        const { messageConversations } = messages;\n\n        return dispatch(receivedMessages(messageConversations));\n    } catch (err) {\n        return onError('Get Messages', err);\n    }\n};\n","import { getInstance } from 'd2';\n\nconst onError = error => console.log('Error: ', error);\n\nconst saveDashboard = (dashboard, data) => {\n    const { name, description, dashboardItems } = data;\n\n    dashboard.name = name;\n    dashboard.description = description;\n    dashboard.dashboardItems = dashboardItems.map(item =>\n        Object.assign({}, item, { width: item.w, height: item.h })\n    );\n\n    return dashboard.save().then(msg => msg.response.uid);\n};\n\nexport const updateDashboard = data => {\n    return getInstance()\n        .then(d2 => {\n            return d2.models.dashboards\n                .get(data.id)\n                .then(dashboard => saveDashboard(dashboard, data));\n        })\n        .catch(onError);\n};\n\nexport const postDashboard = data => {\n    return getInstance().then(d2 => {\n        const dashboard = d2.models.dashboards.create();\n\n        return saveDashboard(dashboard, data);\n    });\n};\n","import { generateUid } from 'd2/uid';\n\nimport {\n    RECEIVED_EDIT_DASHBOARD,\n    START_NEW_DASHBOARD,\n    RECEIVED_NOT_EDITING,\n    RECEIVED_TITLE,\n    RECEIVED_DESCRIPTION,\n    RECEIVED_DASHBOARD_LAYOUT,\n    ADD_DASHBOARD_ITEM,\n    UPDATE_DASHBOARD_ITEM,\n    REMOVE_DASHBOARD_ITEM,\n} from '../reducers/editDashboard';\nimport { sGetEditDashboardRoot } from '../reducers/editDashboard';\nimport { updateDashboard, postDashboard } from '../api/editDashboard';\nimport { tSetSelectedDashboardById } from '../actions/selected';\nimport {\n    NEW_ITEM_SHAPE,\n    getGridItemProperties,\n} from '../components/ItemGrid/gridUtil';\nimport { itemTypeMap } from '../modules/itemTypes';\nimport { convertUiItemsToBackend } from '../modules/uiBackendItemConverter';\n\nconst onError = error => {\n    console.log('Error (Saving Dashboard): ', error);\n    return error;\n};\n\n// actions\n\nexport const acSetEditDashboard = (dashboard, items) => {\n    const val = {\n        ...dashboard,\n        dashboardItems: items,\n    };\n\n    return {\n        type: RECEIVED_EDIT_DASHBOARD,\n        value: val,\n    };\n};\n\nexport const acSetEditNewDashboard = () => ({\n    type: START_NEW_DASHBOARD,\n});\n\nexport const acClearEditDashboard = () => ({\n    type: RECEIVED_NOT_EDITING,\n});\n\nexport const acSetDashboardTitle = value => ({\n    type: RECEIVED_TITLE,\n    value,\n});\n\nexport const acSetDashboardDescription = value => ({\n    type: RECEIVED_DESCRIPTION,\n    value,\n});\n\nexport const acUpdateDashboardLayout = value => ({\n    type: RECEIVED_DASHBOARD_LAYOUT,\n    value,\n});\n\nexport const acAddDashboardItem = item => {\n    const type = item.type;\n    delete item.type;\n    const itemPropName = itemTypeMap[type].propName;\n\n    const id = generateUid();\n    const gridItemProperties = getGridItemProperties(id);\n\n    return {\n        type: ADD_DASHBOARD_ITEM,\n        value: {\n            id,\n            type,\n            [itemPropName]: item.content,\n            ...NEW_ITEM_SHAPE,\n            ...gridItemProperties,\n        },\n    };\n};\n\nexport const acUpdateDashboardItem = item => ({\n    type: UPDATE_DASHBOARD_ITEM,\n    value: item,\n});\n\nexport const acRemoveDashboardItem = value => ({\n    type: REMOVE_DASHBOARD_ITEM,\n    value,\n});\n\n// thunks\n\nexport const tSaveDashboard = () => async (dispatch, getState) => {\n    const dashboard = sGetEditDashboardRoot(getState());\n\n    const dashboardToSave = {\n        ...dashboard,\n        dashboardItems: convertUiItemsToBackend(dashboard.dashboardItems),\n    };\n\n    try {\n        const dashboardId = dashboardToSave.id\n            ? await updateDashboard(dashboardToSave)\n            : await postDashboard(dashboardToSave);\n\n        dispatch(acClearEditDashboard());\n        await dispatch(tSetSelectedDashboardById(dashboardId));\n\n        return Promise.resolve(dashboardId);\n    } catch (error) {\n        onError(error);\n    }\n};\n","import {\n    SET_DASHBOARDS,\n    ADD_DASHBOARDS,\n    SET_DASHBOARD_STARRED,\n    SET_DASHBOARD_DISPLAY_NAME,\n    SET_DASHBOARD_ITEMS,\n} from '../reducers/dashboards';\nimport {\n    getCustomDashboards,\n    sGetDashboardById,\n    sGetDashboardsSortedByStarred,\n} from '../reducers/dashboards';\nimport { sGetUserUsername } from '../reducers/user';\nimport { tSetSelectedDashboardById, acSetSelectedId } from './selected';\nimport { acClearEditDashboard } from './editDashboard';\nimport {\n    apiFetchDashboards,\n    apiStarDashboard,\n    apiDeleteDashboard,\n} from '../api/dashboards';\nimport { getPreferredDashboardId } from '../api/localStorage';\nimport { arrayToIdMap } from '../modules/util';\n\n// actions\n\nexport const acSetDashboards = dashboards => ({\n    type: SET_DASHBOARDS,\n    value: arrayToIdMap(getCustomDashboards(dashboards)),\n});\n\nexport const acAppendDashboards = dashboards => ({\n    type: ADD_DASHBOARDS,\n    value: arrayToIdMap(getCustomDashboards(dashboards)),\n});\n\nexport const acSetDashboardStarred = (dashboardId, isStarred) => ({\n    type: SET_DASHBOARD_STARRED,\n    dashboardId: dashboardId,\n    value: isStarred,\n});\n\nexport const acSetDashboardDisplayName = (dashboardId, value) => ({\n    type: SET_DASHBOARD_DISPLAY_NAME,\n    dashboardId,\n    value,\n});\n\nexport const acSetDashboardItems = value => ({\n    type: SET_DASHBOARD_ITEMS,\n    value,\n});\n\n// thunks\n\nexport const tFetchDashboards = () => async dispatch => {\n    const collection = await apiFetchDashboards();\n    dispatch(acSetDashboards(collection.toArray()));\n};\n\nexport const tSelectDashboard = id => async (dispatch, getState) => {\n    const onError = error => {\n        console.log('Error (apiFetchDashboards): ', error);\n        return error;\n    };\n\n    try {\n        const state = getState();\n\n        let dashboardToSelect = null;\n        if (id) {\n            dashboardToSelect = sGetDashboardById(state, id) || null;\n        } else {\n            const preferredId = getPreferredDashboardId(\n                sGetUserUsername(state)\n            );\n            const dash = sGetDashboardById(state, preferredId);\n            dashboardToSelect =\n                preferredId && dash\n                    ? dash\n                    : sGetDashboardsSortedByStarred(state)[0];\n        }\n\n        if (dashboardToSelect) {\n            dispatch(tSetSelectedDashboardById(dashboardToSelect.id));\n        } else {\n            dispatch(acSetSelectedId());\n        }\n    } catch (err) {\n        return onError(err);\n    }\n};\n\nexport const tStarDashboard = (id, isStarred) => async dispatch => {\n    const onSuccess = id => {\n        dispatch(acSetDashboardStarred(id, isStarred));\n        return id;\n    };\n\n    const onError = error => {\n        console.log('Error (apiStarDashboard): ', error);\n        return error;\n    };\n    try {\n        await apiStarDashboard(id, isStarred);\n        return onSuccess(id);\n    } catch (err) {\n        return onError(err);\n    }\n};\n\nexport const tDeleteDashboard = id => async dispatch => {\n    try {\n        await apiDeleteDashboard(id);\n        dispatch(acClearEditDashboard());\n        dispatch(acSetSelectedId());\n        dispatch(acSetDashboardItems([]));\n\n        await dispatch(tFetchDashboards());\n\n        return Promise.resolve();\n    } catch (err) {\n        console.log('Error (deleteDashboard): ', err);\n        return err;\n    }\n};\n","/** @module reducers/controlBar */\nimport { combineReducers } from 'redux';\nimport { validateReducer } from '../modules/util';\n\nexport const SET_CONTROLBAR_USER_ROWS = 'SET_CONTROLBAR_USER_ROWS';\n\nexport const DEFAULT_STATE_CONTROLBAR_ROWS = 1;\n\nconst userRows = (state = DEFAULT_STATE_CONTROLBAR_ROWS, action) => {\n    switch (action.type) {\n        case SET_CONTROLBAR_USER_ROWS:\n            return validateReducer(action.value, DEFAULT_STATE_CONTROLBAR_ROWS);\n        default:\n            return state;\n    }\n};\n\nexport default combineReducers({\n    userRows,\n});\n\n/**\n * Selectors that point to specific props in the state object\n * @function\n * @param {Object} state\n * @returns {Object}\n */\nexport const sGetControlBarRoot = state => state.controlBar;\n\n// Selector dependency level 2\n\nexport const sGetControlBarUserRows = state =>\n    sGetControlBarRoot(state).userRows;\n","import { getInstance } from 'd2';\nimport { DEFAULT_STATE_CONTROLBAR_ROWS } from '../reducers/controlBar';\n\nconst NAMESPACE = 'dashboard';\nconst KEY = 'controlBarRows';\n\nconst hasNamespace = async d2 => await d2.currentUser.dataStore.has(NAMESPACE);\n\nconst getNamespace = async (d2, hasNamespace) =>\n    hasNamespace\n        ? await d2.currentUser.dataStore.get(NAMESPACE)\n        : await d2.currentUser.dataStore.create(NAMESPACE);\n\nexport const apiGetControlBarRows = async () => {\n    const d2 = await getInstance();\n    const namespace = await getNamespace(d2, await hasNamespace(d2));\n    const hasKey = namespace.keys && namespace.keys.find(key => key === KEY);\n\n    if (hasKey) {\n        return await namespace.get(KEY);\n    } else {\n        await apiPostControlBarRows(DEFAULT_STATE_CONTROLBAR_ROWS, namespace);\n        console.log(\n            '(These errors to /userDataStore/dashboard can be ignored)'\n        );\n        return DEFAULT_STATE_CONTROLBAR_ROWS;\n    }\n};\n\nexport const apiPostControlBarRows = async (rows, namespace) => {\n    const d2 = await getInstance();\n    const ns = namespace || (await getNamespace(d2, hasNamespace));\n\n    ns.set(KEY, rows);\n};\n","import { SET_CONTROLBAR_USER_ROWS } from '../reducers/controlBar';\nimport { apiGetControlBarRows } from '../api/controlBar';\n\n// actions\n\nexport const acSetControlBarUserRows = rows => ({\n    type: SET_CONTROLBAR_USER_ROWS,\n    value: rows,\n});\n\n// thunks\n\nexport const tSetControlBarRows = () => async dispatch => {\n    const onSuccess = rows => {\n        dispatch(acSetControlBarUserRows(rows));\n    };\n\n    const onError = error => {\n        console.log('Error (apiGetControlBarRows): ', error);\n        return error;\n    };\n\n    try {\n        const controlBarRows = await apiGetControlBarRows();\n        return onSuccess(controlBarRows);\n    } catch (err) {\n        return onError(err);\n    }\n};\n","import {\n    getDimensionById,\n    DIMENSION_ID_PERIOD,\n    DIMENSION_ID_ORGUNIT,\n} from '@dhis2/analytics';\n\nexport const SET_DIMENSIONS = 'SET_DIMENSIONS';\nexport const DEFAULT_DIMENSIONS = [\n    getDimensionById(DIMENSION_ID_PERIOD),\n    getDimensionById(DIMENSION_ID_ORGUNIT),\n];\n\nexport default (state = DEFAULT_DIMENSIONS, action) => {\n    switch (action.type) {\n        case SET_DIMENSIONS: {\n            return [...DEFAULT_DIMENSIONS, ...action.value];\n        }\n        default:\n            return state;\n    }\n};\n\nexport const sGetDimensions = state => state.dimensions;\n","export const SET_SETTINGS = 'SET_SETTINGS';\nexport const ADD_SETTINGS = 'ADD_SETTINGS';\n\nexport const DEFAULT_SETTINGS = {\n    keyDateFormat: 'yyyy-MM-dd',\n    keyAnalysisRelativePeriod: 'LAST_12_MONTHS',\n    keyAnalysisDigitGroupSeparator: 'SPACE',\n    displayNameProperty: 'displayName',\n    uiLocale: 'en',\n    rootOrganisationUnit: {},\n};\n\nexport default (state = DEFAULT_SETTINGS, action) => {\n    switch (action.type) {\n        case SET_SETTINGS: {\n            return Object.assign({}, action.value);\n        }\n        case ADD_SETTINGS: {\n            return {\n                ...state,\n                ...action.value,\n            };\n        }\n        default:\n            return state;\n    }\n};\n\n// Selectors\n\nexport const sGetSettings = state => state.settings;\n\nexport const sGetSettingsDisplayNameProperty = state =>\n    sGetSettings(state).displayNameProperty;\n\nexport const sGetRootOrgUnit = state =>\n    sGetSettings(state).rootOrganisationUnit;\n\nexport const sGetRelativePeriod = state =>\n    sGetSettings(state).keyAnalysisRelativePeriod;\n\nexport const sGetUiLocale = state => sGetSettings(state).uiLocale;\n","import { SET_DIMENSIONS } from '../reducers/dimensions';\nimport { apiFetchDimensions } from '@dhis2/analytics';\nimport { sGetSettingsDisplayNameProperty } from '../reducers/settings';\n\nexport const acSetDimensions = dimensions => ({\n    type: SET_DIMENSIONS,\n    value: dimensions,\n});\n\nexport const tSetDimensions = d2 => async (dispatch, getState) => {\n    const onSuccess = dimensions => {\n        dispatch(acSetDimensions(dimensions));\n    };\n\n    const onError = error => {\n        console.log('Error (apiFetchDimensions): ', error);\n        return error;\n    };\n\n    try {\n        const displayNameProp = sGetSettingsDisplayNameProperty(getState());\n        const dimensions = await apiFetchDimensions(d2, displayNameProp);\n\n        // filter out CATEGORY that are not of type ATTRIBUTE\n        const filteredDimensions = dimensions.filter(\n            dim =>\n                dim.dimensionType !== 'CATEGORY' ||\n                (dim.dimensionType === 'CATEGORY' &&\n                    dim.dataDimensionType === 'ATTRIBUTE')\n        );\n        return onSuccess(filteredDimensions);\n    } catch (err) {\n        return onError(err);\n    }\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport i18n from '@dhis2/d2-i18n';\n\nimport classes from './styles/ShowMoreButton.module.css';\n\nexport const SHOWMORE_BAR_HEIGHT = 16;\n\nexport const ShowMoreButton = ({ onClick, isMaxHeight, disabled }) => {\n    return (\n        <div style={{ textAlign: 'center' }}>\n            {disabled ? (\n                <div className={classes.disabled}>{i18n.t('Show more')}</div>\n            ) : (\n                <div className={classes.showMore} onClick={onClick}>\n                    {isMaxHeight ? i18n.t('Show less') : i18n.t('Show more')}\n                </div>\n            )}\n        </div>\n    );\n};\n\nShowMoreButton.propTypes = {\n    disabled: PropTypes.bool,\n    isMaxHeight: PropTypes.bool,\n    onClick: PropTypes.func,\n};\n\nexport default ShowMoreButton;\n","import { SHOWMORE_BAR_HEIGHT } from './ShowMoreButton';\n\nexport const CONTROL_BAR_ROW_HEIGHT = 40;\nexport const FIRST_ROW_PADDING_HEIGHT = 10;\nexport const MIN_ROW_COUNT = 1;\n\nexport const HEADERBAR_HEIGHT = 48;\n\nconst CONTROL_BAR_OUTER_HEIGHT_DIFF =\n    FIRST_ROW_PADDING_HEIGHT + SHOWMORE_BAR_HEIGHT - 2; // 2 pixel \"adjustment\"\n\nexport const getRowsHeight = rows => {\n    return rows * CONTROL_BAR_ROW_HEIGHT;\n};\n\nexport const getNumRowsFromHeight = height => {\n    return Math.floor(\n        (height - CONTROL_BAR_OUTER_HEIGHT_DIFF) / CONTROL_BAR_ROW_HEIGHT\n    );\n};\n\nexport const getTopOffset = rows => {\n    return HEADERBAR_HEIGHT + getControlBarHeight(rows, false);\n};\n\nexport const getControlBarHeight = rows => {\n    return getRowsHeight(rows) + CONTROL_BAR_OUTER_HEIGHT_DIFF;\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { colors } from '@dhis2/ui';\nimport { HEADERBAR_HEIGHT } from './controlBarDimensions';\n\nimport classes from './styles/ControlBar.module.css';\n\nconst DRAG_HANDLE_HEIGHT = 7;\n\nclass ControlBar extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            dragging: false,\n        };\n    }\n\n    onStartDrag = () => {\n        this.setState({ dragging: true });\n        window.addEventListener('mousemove', this.onDrag);\n        window.addEventListener('mouseup', this.onEndDrag);\n    };\n\n    onDrag = event => {\n        event.preventDefault();\n        event.stopPropagation();\n\n        const newHeight = event.clientY;\n\n        if (\n            this.props.onChangeHeight &&\n            newHeight !== this.props.height &&\n            newHeight > 0\n        ) {\n            requestAnimationFrame(() => {\n                this.props.onChangeHeight(newHeight);\n            });\n        }\n    };\n\n    onEndDrag = () => {\n        this.setState({ dragging: false });\n        window.removeEventListener('mousemove', this.onDrag);\n        window.removeEventListener('mouseup', this.onEndDrag);\n\n        if (this.props.onEndDrag) {\n            this.props.onEndDrag();\n        }\n    };\n\n    renderDragHandle() {\n        return typeof this.props.onChangeHeight === 'function' ? (\n            <div\n                className={classes.draghandle}\n                style={{ height: DRAG_HANDLE_HEIGHT }}\n                onMouseDown={this.onStartDrag}\n            />\n        ) : null;\n    }\n\n    render() {\n        const height = Math.max(this.props.height, 0) + DRAG_HANDLE_HEIGHT;\n\n        const rootStyle = Object.assign(\n            {\n                height,\n                top: HEADERBAR_HEIGHT,\n                backgroundColor: this.props.editMode\n                    ? colors.yellow050\n                    : colors.white,\n                paddingBottom: DRAG_HANDLE_HEIGHT,\n            },\n            // Disable animations while dragging\n            this.state.dragging ? { transition: 'none' } : {}\n        );\n\n        return (\n            <div style={rootStyle} className={classes.root}>\n                <div className={classes.content}>{this.props.children}</div>\n                {this.renderDragHandle()}\n            </div>\n        );\n    }\n}\n\nControlBar.propTypes = {\n    /**\n     * The height of the control bar in number of lines. Must be a positive integer.\n     */\n    children: PropTypes.node.isRequired,\n\n    /**\n     * If true, the background color of the control bar changes to indicate that edit mode is active.\n     */\n    editMode: PropTypes.bool.isRequired,\n\n    /**\n     * Callback function that is called when the control bar is resized.\n     * The callback receives one argument: The new height in pixels.\n     *\n     * If no callback is specified the control bar will not have a drag handle.\n     */\n    height: PropTypes.number.isRequired,\n\n    /**\n     * Callback function that is called when the control bar is dropped after being dragged.\n     * The callback receives one argument: The new height in pixels.\n     *\n     * Ignored if no \"onChangeHeight\" function is provided.\n     */\n    onChangeHeight: PropTypes.func,\n\n    /**\n     * The contents of the control bar.\n     */\n    onEndDrag: PropTypes.func,\n};\n\nControlBar.defaultProps = {\n    onChangeHeight: null,\n    onEndDrag: null,\n};\n\nexport default ControlBar;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst StarIcon = ({ className }) => (\n    <svg\n        className={className}\n        xmlns=\"http://www.w3.org/2000/svg\"\n        viewBox=\"0 0 24 24\"\n    >\n        <path d=\"M0 0h24v24H0z\" fill=\"none\" />\n        <path d=\"M12 17.27L18.18 21l-1.64-7.03L22 9.24l-7.19-.61L12 2 9.19 8.63 2 9.24l5.46 4.73L5.82 21z\" />\n        <path d=\"M0 0h24v24H0z\" fill=\"none\" />\n    </svg>\n);\n\nStarIcon.propTypes = {\n    className: PropTypes.string,\n};\n\nexport default StarIcon;\n","import { getInstance } from 'd2';\n\nexport const apiPostDataStatistics = async (eventType, id) => {\n    const d2 = await getInstance();\n    const url = `dataStatistics?eventType=${eventType}&favorite=${id}`;\n\n    d2.Api.getApi().post(url);\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Chip } from '@dhis2/ui';\nimport { Link } from 'react-router-dom';\nimport debounce from 'lodash/debounce';\n\nimport StarIcon from '../../icons/Star';\nimport { apiPostDataStatistics } from '../../api/dataStatistics';\n\nimport classes from './styles/DashboardItemChip.module.css';\n\nexport const DashboardItemChip = ({\n    starred,\n    selected,\n    label,\n    dashboardId,\n}) => {\n    const chipProps = {\n        selected,\n    };\n\n    if (starred) {\n        const selectedState = selected ? classes.selected : classes.unselected;\n        chipProps.icon = (\n            <StarIcon className={`${classes.icon} ${selectedState}`} />\n        );\n    }\n\n    return (\n        <Link\n            className={classes.link}\n            to={`/${dashboardId}`}\n            onClick={debounce(\n                () => apiPostDataStatistics('DASHBOARD_VIEW', dashboardId),\n                500\n            )}\n        >\n            <Chip {...chipProps}>{label}</Chip>\n        </Link>\n    );\n};\n\nDashboardItemChip.propTypes = {\n    dashboardId: PropTypes.string.isRequired,\n    label: PropTypes.string.isRequired,\n    selected: PropTypes.bool.isRequired,\n    starred: PropTypes.bool.isRequired,\n    classes: PropTypes.object,\n};\n\nexport default DashboardItemChip;\n","import React from 'react';\nimport { colors } from '@dhis2/ui';\n\nconst AddCircleIcon = () => (\n    <svg\n        xmlns=\"http://www.w3.org/2000/svg\"\n        width=\"32\"\n        height=\"32\"\n        fill={colors.teal600}\n        viewBox=\"0 0 24 24\"\n    >\n        <path d=\"M12 2C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2zm4 11h-3v3c0 .55-.45 1-1 1s-1-.45-1-1v-3H8c-.55 0-1-.45-1-1s.45-1 1-1h3V8c0-.55.45-1 1-1s1 .45 1 1v3h3c.55 0 1 .45 1 1s-.45 1-1 1z\" />\n    </svg>\n);\n\nexport default AddCircleIcon;\n","import React from 'react';\nimport { colors } from '@dhis2/ui';\nimport PropTypes from 'prop-types';\n\nconst ClearIcon = ({ className }) => (\n    <svg\n        className={className}\n        fill={colors.grey800}\n        xmlns=\"http://www.w3.org/2000/svg\"\n        viewBox=\"0 0 24 24\"\n    >\n        <path d=\"M19 6.41L17.59 5 12 10.59 6.41 5 5 6.41 10.59 12 5 17.59 6.41 19 12 13.41 17.59 19 19 17.59 13.41 12z\" />\n        <path d=\"M0 0h24v24H0z\" fill=\"none\" />\n    </svg>\n);\n\nClearIcon.propTypes = {\n    className: PropTypes.string,\n};\n\nexport default ClearIcon;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport ClearIcon from '../../icons/Clear';\n\nimport classes from './styles/ClearButton.module.css';\n\nexport const ClearButton = ({ onClear }) => (\n    <button className={classes.button} onClick={onClear}>\n        <span>\n            <ClearIcon className={classes.icon} color=\"action\" />\n        </span>\n    </button>\n);\n\nClearButton.propTypes = {\n    onClear: PropTypes.func.isRequired,\n};\n\nexport default ClearButton;\n","import { combineReducers } from 'redux';\nimport { validateReducer } from '../modules/util';\n\nexport const SET_DASHBOARDS_FILTER_NAME = 'SET_DASHBOARDS_FILTER_NAME';\nexport const SET_DASHBOARDS_FILTER_OWNER = 'SET_DASHBOARDS_FILTER_OWNER';\nexport const SET_DASHBOARDS_FILTER_ORDER = 'SET_DASHBOARDS_FILTER_ORDER';\n\nexport const ownerData = [\n    { id: 'ALL', value: 'All users' },\n    { id: 'ME', value: 'Created by me' },\n    { id: 'OTHERS', value: 'Created by others' },\n];\n\nexport const orderData = [\n    { id: 'NAME:ASC', value: 'Name (asc)' },\n    { id: 'NAME:ASC', value: 'Name (desc)' },\n    { id: 'ITEMS:ASC', value: 'Number of items (asc)' },\n    { id: 'ITEMS:ASC', value: 'Number of items (desc)' },\n    { id: 'CREATED:ASC', value: 'Created date (asc)' },\n    { id: 'CREATED:ASC', value: 'Created date (desc)' },\n];\n\nexport const DEFAULT_STATE_DASHBOARDS_FILTER_NAME = '';\nexport const DEFAULT_STATE_DASHBOARDS_FILTER_OWNER = ownerData[0].id;\nexport const DEFAULT_STATE_DASHBOARDS_FILTER_ORDER = orderData[0].id;\n\nconst name = (state = DEFAULT_STATE_DASHBOARDS_FILTER_NAME, action) => {\n    switch (action.type) {\n        case SET_DASHBOARDS_FILTER_NAME:\n            return validateReducer(\n                action.value,\n                DEFAULT_STATE_DASHBOARDS_FILTER_NAME\n            );\n        default:\n            return state;\n    }\n};\n\nconst owner = (state = DEFAULT_STATE_DASHBOARDS_FILTER_OWNER, action) => {\n    switch (action.type) {\n        case SET_DASHBOARDS_FILTER_OWNER:\n            return validateReducer(\n                action.value,\n                DEFAULT_STATE_DASHBOARDS_FILTER_NAME\n            );\n        default:\n            return state;\n    }\n};\n\nconst order = (state = DEFAULT_STATE_DASHBOARDS_FILTER_ORDER, action) => {\n    switch (action.type) {\n        case SET_DASHBOARDS_FILTER_ORDER:\n            return validateReducer(\n                action.value,\n                DEFAULT_STATE_DASHBOARDS_FILTER_ORDER\n            );\n        default:\n            return state;\n    }\n};\n\nexport default combineReducers({\n    name,\n    owner,\n    order,\n});\n\n// selectors\n\nexport const sGetDashboardsFilterRoot = state => state.dashboardsFilter;\n\n// selector dependency level 2\n\nexport const sGetFilterName = state => sGetDashboardsFilterRoot(state).name;\nexport const sGetFilterOwner = state => sGetDashboardsFilterRoot(state).owner;\nexport const sGetFilterOrder = state => sGetDashboardsFilterRoot(state).order;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport i18n from '@dhis2/d2-i18n';\nimport { withStyles } from '@material-ui/core/styles';\nimport InputField from '@material-ui/core/Input';\nimport InputAdornment from '@material-ui/core/InputAdornment';\nimport SearchIcon from '@material-ui/icons/Search';\nimport { colors } from '@dhis2/ui';\n\nimport ClearButton from './ClearButton';\nimport { DEFAULT_STATE_DASHBOARDS_FILTER_NAME } from '../../reducers/dashboardsFilter';\n\nconst styles = {\n    filterField: {\n        fontSize: '14px',\n        width: '200px',\n        height: '30px',\n        top: '-4px',\n    },\n    searchIcon: {\n        color: colors.grey700,\n        width: '20px',\n        height: '20px',\n    },\n};\n\nexport const KEYCODE_ENTER = 13;\nexport const KEYCODE_ESCAPE = 27;\n\nexport class Filter extends Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            value: DEFAULT_STATE_DASHBOARDS_FILTER_NAME,\n        };\n    }\n\n    componentWillReceiveProps(nextProps) {\n        this.setState({\n            value: nextProps.name,\n        });\n    }\n\n    setFilterValue = event => {\n        event.preventDefault();\n\n        this.props.onChangeName(event.target.value);\n    };\n\n    handleKeyUp = event => {\n        switch (event.keyCode) {\n            case KEYCODE_ENTER:\n                this.props.onKeypressEnter();\n                break;\n            case KEYCODE_ESCAPE:\n                this.props.onChangeName();\n                break;\n            default:\n                break;\n        }\n    };\n\n    render() {\n        const { classes, name, onChangeName } = this.props;\n\n        const startAdornment = (\n            <InputAdornment position=\"start\">\n                <SearchIcon className={classes.searchIcon} />\n            </InputAdornment>\n        );\n\n        const endAdornment =\n            name !== '' && name !== null ? (\n                <InputAdornment position=\"end\">\n                    <ClearButton onClear={() => onChangeName()} />\n                </InputAdornment>\n            ) : null;\n\n        return (\n            <InputField\n                className={classes.filterField}\n                placeholder={i18n.t('Search for a dashboard')}\n                startAdornment={startAdornment}\n                endAdornment={endAdornment}\n                value={this.state.value}\n                onChange={this.setFilterValue}\n                onKeyUp={this.handleKeyUp}\n            />\n        );\n    }\n}\n\nFilter.propTypes = {\n    classes: PropTypes.object,\n    name: PropTypes.string,\n    onChangeName: PropTypes.func,\n    onKeypressEnter: PropTypes.func,\n};\n\nFilter.defaultProps = {\n    name: '',\n    onChangeName: Function.prototype,\n};\n\nexport default withStyles(styles)(Filter);\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { Link, withRouter } from 'react-router-dom';\nimport ControlBar from './ControlBar';\nimport arraySort from 'd2-utilizr/lib/arraySort';\nimport PropTypes from 'prop-types';\n\nimport Chip from './DashboardItemChip';\nimport AddCircleIcon from '../../icons/AddCircle';\nimport Filter from './Filter';\nimport ShowMoreButton from './ShowMoreButton';\nimport {\n    FIRST_ROW_PADDING_HEIGHT,\n    MIN_ROW_COUNT,\n    getRowsHeight,\n    getControlBarHeight,\n    getNumRowsFromHeight,\n} from './controlBarDimensions';\nimport { sGetControlBarUserRows } from '../../reducers/controlBar';\nimport { sGetAllDashboards } from '../../reducers/dashboards';\nimport { sGetFilterName } from '../../reducers/dashboardsFilter';\nimport { sGetSelectedId } from '../../reducers/selected';\nimport { acSetControlBarUserRows } from '../../actions/controlBar';\nimport { acSetFilterName } from '../../actions/dashboardsFilter';\nimport { orObject, orArray } from '../../modules/util';\nimport { apiPostControlBarRows } from '../../api/controlBar';\n\nimport classes from './styles/DashboardsBar.module.css';\n\nexport const MAX_ROW_COUNT = 10;\n\nexport class DashboardsBar extends Component {\n    state = {\n        rows: MIN_ROW_COUNT,\n    };\n\n    setInitialDashboardState = rows => {\n        this.setState({ rows, isMaxHeight: rows === MAX_ROW_COUNT });\n    };\n\n    componentDidMount() {\n        this.setInitialDashboardState(this.props.userRows);\n    }\n\n    componentWillReceiveProps(nextProps) {\n        this.setInitialDashboardState(nextProps.userRows);\n    }\n\n    onChangeHeight = newHeight => {\n        const adjustedHeight = newHeight - 52; // don't rush the transition to a bigger row count\n        const newRows = Math.max(\n            MIN_ROW_COUNT,\n            getNumRowsFromHeight(adjustedHeight)\n        );\n\n        if (newRows !== this.state.rows) {\n            const newRowCount = Math.min(newRows, MAX_ROW_COUNT);\n\n            this.props.onChangeHeight(newRowCount);\n        }\n    };\n\n    onEndDrag = () => {\n        return apiPostControlBarRows(this.state.rows);\n    };\n\n    onToggleMaxHeight = () => {\n        const rows =\n            this.state.rows === MAX_ROW_COUNT\n                ? this.props.userRows\n                : MAX_ROW_COUNT;\n\n        this.setState({ rows, isMaxHeight: !this.state.isMaxHeight });\n    };\n\n    onSelectDashboard = () => {\n        this.props.history.push(`/${this.props.dashboards[0].id}`);\n    };\n\n    render() {\n        const { dashboards, name, selectedId, onChangeFilterName } = this.props;\n\n        const rowCount = this.state.isMaxHeight\n            ? MAX_ROW_COUNT\n            : this.state.rows;\n        const controlBarHeight = getControlBarHeight(rowCount);\n        const contentWrapperStyle = {\n            padding: `${FIRST_ROW_PADDING_HEIGHT}px 6px 0 6px`,\n            overflowY: this.state.isMaxHeight ? 'auto' : 'hidden',\n            height: getRowsHeight(rowCount) + FIRST_ROW_PADDING_HEIGHT,\n        };\n\n        return (\n            <ControlBar\n                height={controlBarHeight}\n                onChangeHeight={this.onChangeHeight}\n                onEndDrag={this.onEndDrag}\n                editMode={false}\n            >\n                <div style={contentWrapperStyle}>\n                    <div className={classes.leftControls}>\n                        <Link\n                            style={{\n                                display: 'inline-block',\n                                textDecoration: 'none',\n                                marginRight: 10,\n                                position: 'relative',\n                                top: '2px',\n                            }}\n                            to={'/new'}\n                        >\n                            <AddCircleIcon />\n                        </Link>\n                        <Filter\n                            name={name}\n                            onChangeName={onChangeFilterName}\n                            onKeypressEnter={this.onSelectDashboard}\n                        />\n                    </div>\n                    {orArray(dashboards).map(dashboard => (\n                        <Chip\n                            key={dashboard.id}\n                            label={dashboard.displayName}\n                            starred={dashboard.starred}\n                            dashboardId={dashboard.id}\n                            selected={dashboard.id === selectedId}\n                        />\n                    ))}\n                </div>\n                <ShowMoreButton\n                    onClick={this.onToggleMaxHeight}\n                    isMaxHeight={this.state.isMaxHeight}\n                    disabled={this.props.userRows === MAX_ROW_COUNT}\n                />\n            </ControlBar>\n        );\n    }\n}\n\nconst mapStateToProps = state => ({\n    dashboards: sGetAllDashboards(state),\n    name: sGetFilterName(state),\n    userRows: sGetControlBarUserRows(state),\n    selectedId: sGetSelectedId(state),\n});\n\nconst mapDispatchToProps = {\n    onChangeHeight: acSetControlBarUserRows,\n    onChangeFilterName: acSetFilterName,\n};\nconst mergeProps = (stateProps, dispatchProps, ownProps) => {\n    const dashboards = Object.values(orObject(stateProps.dashboards));\n    const displayDashboards = arraySort(\n        dashboards.filter(d =>\n            d.displayName.toLowerCase().includes(stateProps.name.toLowerCase())\n        ),\n        'ASC',\n        'displayName'\n    );\n\n    return {\n        ...stateProps,\n        ...ownProps,\n        ...dispatchProps,\n        dashboards: [\n            ...displayDashboards.filter(d => d.starred),\n            ...displayDashboards.filter(d => !d.starred),\n        ],\n    };\n};\n\nDashboardsBar.propTypes = {\n    dashboards: PropTypes.array,\n    history: PropTypes.object,\n    name: PropTypes.string,\n    selectedId: PropTypes.string,\n    userRows: PropTypes.number,\n    onChangeFilterName: PropTypes.func,\n    onChangeHeight: PropTypes.func,\n};\n\nexport default withRouter(\n    connect(\n        mapStateToProps,\n        mapDispatchToProps,\n        mergeProps\n    )(DashboardsBar)\n);\n","import {\n    SET_DASHBOARDS_FILTER_NAME,\n    SET_DASHBOARDS_FILTER_OWNER,\n    SET_DASHBOARDS_FILTER_ORDER,\n} from '../reducers/dashboardsFilter';\n\n// actions\n\nexport const acSetFilterName = value => ({\n    type: SET_DASHBOARDS_FILTER_NAME,\n    value,\n});\n\nexport const acSetFilterOwner = value => ({\n    type: SET_DASHBOARDS_FILTER_OWNER,\n    value,\n});\n\nexport const acSetFilterOrder = value => ({\n    type: SET_DASHBOARDS_FILTER_ORDER,\n    value,\n});\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\n\nimport {\n    getTopOffset,\n    MIN_ROW_COUNT,\n} from '../ControlBar/controlBarDimensions';\nimport { sGetControlBarUserRows } from '../../reducers/controlBar';\n\nconst DashboardVerticalOffset = props => {\n    const rows = props.editMode ? MIN_ROW_COUNT : props.userRows;\n    const marginTop = getTopOffset(rows);\n\n    return <div className=\"page-container-top-margin\" style={{ marginTop }} />;\n};\n\nconst mapStateToProps = state => ({\n    userRows: sGetControlBarUserRows(state),\n});\n\nDashboardVerticalOffset.propTypes = {\n    editMode: PropTypes.bool,\n    userRows: PropTypes.number,\n};\n\nexport default connect(mapStateToProps)(DashboardVerticalOffset);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { MenuItem, colors } from '@dhis2/ui';\n\nconst HeaderMenuItem = ({ title }) => (\n    <MenuItem\n        dense\n        key={title}\n        disabled\n        label={\n            <span style={{ color: colors.grey800, fontWeight: '600' }}>\n                {title}\n            </span>\n        }\n    />\n);\n\nHeaderMenuItem.propTypes = {\n    title: PropTypes.string.isRequired,\n};\n\nexport default HeaderMenuItem;\n","import React from 'react';\nimport { colors } from '@dhis2/ui';\nimport PropTypes from 'prop-types';\n\nconst LaunchIcon = ({ className }) => (\n    <svg\n        className={className}\n        xmlns=\"http://www.w3.org/2000/svg\"\n        width=\"12\"\n        height=\"12\"\n        fill={colors.grey600}\n        viewBox=\"0 0 24 24\"\n    >\n        <path d=\"M0 0h24v24H0z\" fill=\"none\" />\n        <path d=\"M19 19H5V5h7V3H5c-1.11 0-2 .9-2 2v14c0 1.1.89 2 2 2h14c1.1 0 2-.9 2-2v-7h-2v7zM14 3v2h3.59l-9.83 9.83 1.41 1.41L19 6.41V10h2V3h-7z\" />\n    </svg>\n);\n\nLaunchIcon.propTypes = {\n    className: PropTypes.string,\n};\n\nexport default LaunchIcon;\n","import React from 'react';\nimport { MenuItem, colors } from '@dhis2/ui';\nimport i18n from '@dhis2/d2-i18n';\nimport PropTypes from 'prop-types';\nimport { visTypeIcons } from '@dhis2/analytics';\n\nimport { getItemIcon, VISUALIZATION } from '../../modules/itemTypes';\nimport LaunchIcon from '../../icons/Launch';\n\nimport classes from './styles/ContentMenuItem.module.css';\n\nconst LaunchLink = ({ url }) => (\n    <a\n        onClick={e => e.stopPropagation()}\n        className={classes.launchLink}\n        target=\"_blank\"\n        rel=\"noopener noreferrer\"\n        href={url}\n    >\n        <LaunchIcon />\n    </a>\n);\n\nLaunchLink.propTypes = {\n    url: PropTypes.string,\n};\n\nconst InsertButton = () => (\n    <button className={classes.buttonInsert}>{i18n.t('Insert')}</button>\n);\n\nconst ContentMenuItem = ({ type, name, onInsert, url, visType }) => {\n    const ItemIcon = getItemIcon(type);\n\n    const renderedItemIcon =\n        type === VISUALIZATION ? (\n            visTypeIcons[visType]\n        ) : (\n            <ItemIcon style={{ fill: colors.grey600 }} />\n        );\n\n    return (\n        <MenuItem\n            dense\n            onClick={onInsert}\n            label={\n                <div className={classes.menuItem}>\n                    <div className={classes.label}>\n                        <span style={{ marginRight: '6px' }}>\n                            {renderedItemIcon}\n                        </span>\n                        <span>{name}</span>\n                        {url ? <LaunchLink url={url} /> : null}\n                    </div>\n                    <InsertButton />\n                </div>\n            }\n        />\n    );\n};\n\nContentMenuItem.propTypes = {\n    name: PropTypes.string,\n    type: PropTypes.string,\n    url: PropTypes.string,\n    visType: PropTypes.string,\n    onInsert: PropTypes.func,\n};\n\nexport default ContentMenuItem;\n","import i18n from '@dhis2/d2-i18n';\nimport {\n    VISUALIZATION,\n    MAP,\n    EVENT_CHART,\n    EVENT_REPORT,\n    USERS,\n    REPORTS,\n    RESOURCES,\n    APP,\n    MESSAGES,\n    TEXT,\n    SPACER,\n} from '../../modules/itemTypes';\n\nexport const singleItems = [\n    {\n        id: 'additional',\n        header: i18n.t('Additional items'),\n        items: [\n            {\n                type: TEXT,\n                name: i18n.t('Text box'),\n                content: '',\n            },\n            {\n                type: MESSAGES,\n                name: i18n.t('Messages'),\n                content: 'true',\n            },\n            {\n                type: SPACER,\n                name: i18n.t('Spacer'),\n                content: '',\n            },\n        ],\n    },\n];\n\n// categorizedItems are grouped in the item selector menu\nexport const categorizedItems = [\n    VISUALIZATION,\n    MAP,\n    EVENT_REPORT,\n    EVENT_CHART,\n    USERS,\n    REPORTS,\n    RESOURCES,\n    APP,\n];\n\n// listItemTypes are included in a single dashboard item\nexport const listItemTypes = [REPORTS, RESOURCES, USERS];\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport i18n from '@dhis2/d2-i18n';\nimport { MenuItem, Divider } from '@dhis2/ui';\n\nimport HeaderMenuItem from './HeaderMenuItem';\nimport ContentMenuItem from './ContentMenuItem';\n\nimport { tAddListItemContent } from './actions';\nimport { acAddDashboardItem } from '../../actions/editDashboard';\nimport { getItemUrl, APP, VISUALIZATION } from '../../modules/itemTypes';\nimport { categorizedItems, listItemTypes } from './selectableItems';\n\nimport classes from './styles/CategorizedMenuGroup.module.css';\n\nclass CategorizedMenuGroup extends Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            seeMore: false,\n        };\n    }\n\n    addItem = item => () => {\n        const { type, acAddDashboardItem, tAddListItemContent } = this.props;\n\n        if (type === APP) {\n            acAddDashboardItem({ type, content: item.key });\n        } else {\n            const newItem = {\n                id: item.id,\n                name: item.displayName || item.name,\n            };\n\n            if (listItemTypes.includes(type)) {\n                tAddListItemContent(type, newItem);\n            } else {\n                acAddDashboardItem({ type, content: newItem });\n            }\n        }\n    };\n\n    toggleSeeMore = () => {\n        this.setState({ seeMore: !this.state.seeMore });\n\n        this.props.onChangeItemsLimit(this.props.type);\n    };\n\n    render() {\n        const { title, type, items, hasMore } = this.props;\n        return (\n            <>\n                <HeaderMenuItem title={title} />\n                {items.map(item => {\n                    const itemUrl = getItemUrl(type, item, this.context.d2);\n                    return (\n                        <ContentMenuItem\n                            key={item.id || item.key}\n                            type={type}\n                            visType={type === VISUALIZATION ? item.type : type}\n                            name={item.displayName || item.name}\n                            onInsert={this.addItem(item)}\n                            url={itemUrl}\n                        />\n                    );\n                })}\n                {hasMore ? (\n                    <MenuItem\n                        dense\n                        key={`showmore${title}`}\n                        onClick={this.toggleSeeMore}\n                        label={\n                            <button className={classes.showMoreButton}>\n                                {this.state.seeMore\n                                    ? i18n.t('Show fewer')\n                                    : i18n.t('Show more')}\n                            </button>\n                        }\n                    />\n                ) : null}\n                <Divider margin=\"8px 0px\" />\n            </>\n        );\n    }\n}\n\nCategorizedMenuGroup.propTypes = {\n    items: PropTypes.array.isRequired,\n    title: PropTypes.string.isRequired,\n    type: PropTypes.oneOf(categorizedItems).isRequired,\n    onChangeItemsLimit: PropTypes.func.isRequired,\n    acAddDashboardItem: PropTypes.func,\n    hasMore: PropTypes.bool,\n    tAddListItemContent: PropTypes.func,\n};\n\nCategorizedMenuGroup.contextTypes = {\n    d2: PropTypes.object.isRequired,\n};\n\nexport default connect(null, {\n    acAddDashboardItem,\n    tAddListItemContent,\n})(CategorizedMenuGroup);\n","import { sGetEditDashboardRoot } from '../../reducers/editDashboard';\nimport { itemTypeMap } from '../../modules/itemTypes';\nimport {\n    acAddDashboardItem,\n    acUpdateDashboardItem,\n} from '../../actions/editDashboard';\n\nexport const tAddListItemContent = (type, content) => (dispatch, getState) => {\n    const state = getState();\n    const listItemType = itemTypeMap[type].propName;\n    const dashboardItems = sGetEditDashboardRoot(state).dashboardItems;\n    const dashboardItemIndex = dashboardItems.findIndex(\n        item => item.type === type\n    );\n    let dashboardItem;\n\n    // Reports/Resources/Users dashboard item type already present in dashboard\n    if (dashboardItemIndex > -1) {\n        dashboardItem = dashboardItems[dashboardItemIndex];\n        dashboardItem[listItemType].push(content);\n\n        dispatch(acUpdateDashboardItem(dashboardItem));\n    } else {\n        dashboardItem = {\n            type: type,\n            content: [content],\n        };\n\n        dispatch(acAddDashboardItem(dashboardItem));\n    }\n};\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\n\nimport HeaderMenuItem from './HeaderMenuItem';\nimport ContentMenuItem from './ContentMenuItem';\nimport { acAddDashboardItem } from '../../actions/editDashboard';\n\nexport const SinglesMenuGroup = ({ acAddDashboardItem, category }) => {\n    const addToDashboard = ({ type, content }) => () => {\n        acAddDashboardItem({ type, content });\n    };\n\n    return (\n        <>\n            <HeaderMenuItem title={category.header} />\n            {category.items.map(item => (\n                <ContentMenuItem\n                    key={item.type}\n                    type={item.type}\n                    name={item.name}\n                    onInsert={addToDashboard(item)}\n                />\n            ))}\n        </>\n    );\n};\n\nSinglesMenuGroup.propTypes = {\n    acAddDashboardItem: PropTypes.func,\n    category: PropTypes.object,\n};\n\nexport default connect(\n    null,\n    { acAddDashboardItem }\n)(SinglesMenuGroup);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport i18n from '@dhis2/d2-i18n';\nimport Popover from '@material-ui/core/Popover';\nimport { InputField, Menu } from '@dhis2/ui';\n\nimport CategorizedMenuGroup from './CategorizedMenuGroup';\nimport SinglesMenuGroup from './SinglesMenuGroup';\nimport { singleItems, categorizedItems } from './selectableItems';\nimport { itemTypeMap, getDefaultItemCount } from '../../modules/itemTypes';\n\nimport './styles/ItemSelector.css';\n\nconst ItemSearchField = props => (\n    <InputField\n        name=\"Dashboard item search\"\n        label={i18n.t('Search for items to add to this dashboard')}\n        type=\"text\"\n        onChange={props.onChange}\n        onFocus={props.onFocus}\n        value={props.value}\n    />\n);\n\nclass ItemSelector extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            anchorEl: null,\n            open: false,\n            maxOptions: new Set(),\n            items: undefined,\n            filter: '',\n        };\n    }\n\n    closeList = () => {\n        this.setState({ open: false, filter: '' });\n    };\n\n    openList = (_, event) => {\n        this.fetchItems();\n\n        this.setState({\n            anchorEl: event.currentTarget,\n            open: true,\n        });\n    };\n\n    setFilter = (_, event) => {\n        this.setState({ filter: event.target.value }, this.fetchItems);\n    };\n\n    getCategorizedMenuGroups = () =>\n        categorizedItems\n            .filter(type => {\n                const itemType = itemTypeMap[type];\n                return (\n                    this.state.items && this.state.items[itemType.endPointName]\n                );\n            })\n            .map(type => {\n                const itemType = itemTypeMap[type];\n                const itemCount = getDefaultItemCount(type);\n                const allItems = this.state.items[itemType.endPointName];\n                const hasMore = allItems.length > itemCount;\n                const items = this.state.maxOptions.has(itemType.id)\n                    ? allItems\n                    : allItems.slice(0, itemCount);\n\n                return (\n                    <CategorizedMenuGroup\n                        key={type}\n                        type={type}\n                        title={itemType.pluralTitle}\n                        items={items}\n                        onChangeItemsLimit={this.fetchItems}\n                        hasMore={hasMore}\n                    />\n                );\n            });\n\n    getSinglesMenuGroups = () =>\n        singleItems.map(category => (\n            <SinglesMenuGroup key={category.id} category={category} />\n        ));\n\n    getMenuGroups = () =>\n        this.getCategorizedMenuGroups().concat(this.getSinglesMenuGroups());\n\n    fetchItems = async type => {\n        if (type) {\n            const maxOptions = this.state.maxOptions;\n\n            if (maxOptions.has(type)) {\n                maxOptions.delete(type);\n            } else {\n                maxOptions.add(type);\n            }\n\n            this.setState({ maxOptions });\n        } else {\n            this.setState({\n                maxOptions: new Set(),\n            });\n        }\n\n        let queryString = '?count=11';\n        if ([...this.state.maxOptions.values()].length) {\n            queryString +=\n                '&max=' + [...this.state.maxOptions.values()].join('&max=');\n        }\n\n        const filter = this.state.filter ? `/${this.state.filter}` : '';\n\n        this.context.d2.Api.getApi()\n            .get(`dashboards/q${filter}${queryString}`)\n            .then(response => this.setState({ items: response }))\n            .catch(console.error);\n    };\n\n    render() {\n        return (\n            <>\n                <ItemSearchField\n                    value={this.state.filter}\n                    onChange={this.setFilter}\n                    onFocus={this.openList}\n                />\n                <Popover\n                    className=\"dashboard-item-selector\"\n                    open={this.state.open}\n                    onClose={this.closeList}\n                    anchorEl={this.state.anchorEl}\n                    anchorOrigin={{ horizontal: 'left', vertical: 'bottom' }}\n                    transformOrigin={{ horizontal: 'left', vertical: 'top' }}\n                    style={{ height: '70vh' }}\n                    PaperProps={{ style: { width: '700px' } }}\n                    disableAutoFocus={true}\n                    disableEnforceFocus={true}\n                    disableRestoreFocus={true}\n                >\n                    <Menu maxWidth={'700px'}>{this.getMenuGroups()}</Menu>\n                </Popover>\n            </>\n        );\n    }\n}\n\nItemSearchField.propTypes = {\n    value: PropTypes.string,\n    onChange: PropTypes.func,\n    onFocus: PropTypes.func,\n};\n\nItemSelector.contextTypes = {\n    d2: PropTypes.object.isRequired,\n};\n\nexport default ItemSelector;\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport i18n from '@dhis2/d2-i18n';\nimport { InputField, TextAreaField } from '@dhis2/ui';\n\nimport ItemSelector from '../ItemSelector/ItemSelector';\nimport {\n    acSetDashboardTitle,\n    acSetDashboardDescription,\n} from '../../actions/editDashboard';\nimport { orObject } from '../../modules/util';\nimport { sGetEditDashboardRoot } from '../../reducers/editDashboard';\n\nimport classes from './styles/EditTitleBar.module.css';\n\nexport const EditTitleBar = ({\n    name,\n    description,\n    onChangeTitle,\n    onChangeDescription,\n}) => {\n    const updateTitle = (_, e) => {\n        onChangeTitle(e.target.value);\n    };\n\n    const updateDescription = (_, e) => {\n        onChangeDescription(e.target.value);\n    };\n\n    return (\n        <section className={classes.section}>\n            <div className={classes.titleDescription}>\n                <InputField\n                    className={classes.title}\n                    name=\"Dashboard title input\"\n                    label={i18n.t('Dashboard title')}\n                    type=\"text\"\n                    onChange={updateTitle}\n                    value={name}\n                />\n                <TextAreaField\n                    className={classes.description}\n                    name=\"Dashboard description input\"\n                    label={i18n.t('Dashboard description')}\n                    onChange={updateDescription}\n                    value={description}\n                />\n            </div>\n            <div className={classes.itemSelector}>\n                <ItemSelector />\n            </div>\n        </section>\n    );\n};\n\nEditTitleBar.propTypes = {\n    onChangeDescription: PropTypes.func.isRequired,\n    onChangeTitle: PropTypes.func.isRequired,\n    description: PropTypes.string,\n    name: PropTypes.string,\n};\n\nEditTitleBar.defaultProps = {\n    name: '',\n    description: '',\n};\n\nconst mapStateToProps = state => {\n    const selectedDashboard = orObject(sGetEditDashboardRoot(state));\n\n    return {\n        name: selectedDashboard.name,\n        description: selectedDashboard.description,\n    };\n};\n\nconst mapDispatchToProps = {\n    onChangeTitle: acSetDashboardTitle,\n    onChangeDescription: acSetDashboardDescription,\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(EditTitleBar);\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nimport {\n    Button,\n    Modal,\n    ModalTitle,\n    ModalContent,\n    ModalActions,\n    ButtonStrip,\n} from '@dhis2/ui';\n\nimport i18n from '@dhis2/d2-i18n';\n\nimport {\n    PeriodDimension,\n    DynamicDimension,\n    OrgUnitDimension,\n    DIMENSION_ID_PERIOD,\n    DIMENSION_ID_ORGUNIT,\n} from '@dhis2/analytics';\n\nclass FilterDialog extends Component {\n    onConfirm = id => () => this.props.onConfirm(id);\n\n    renderDialogContent() {\n        const { displayNameProperty, dimension, selectedItems } = this.props;\n        const dialogId = dimension.id;\n\n        const commonProps = {\n            d2: this.context.d2,\n            onSelect: this.props.onSelect,\n            onDeselect: this.props.onDeselect,\n            onReorder: this.props.onReorder,\n        };\n\n        switch (dialogId) {\n            case DIMENSION_ID_PERIOD: {\n                return (\n                    <PeriodDimension\n                        selectedPeriods={selectedItems}\n                        onSelect={commonProps.onSelect}\n                    />\n                );\n            }\n            case DIMENSION_ID_ORGUNIT:\n                return (\n                    <OrgUnitDimension\n                        displayNameProperty={displayNameProperty}\n                        ouItems={selectedItems}\n                        {...commonProps}\n                    />\n                );\n            default:\n                return (\n                    <DynamicDimension\n                        selectedItems={selectedItems}\n                        dimensionId={dialogId}\n                        onSelect={commonProps.onSelect}\n                        context={commonProps.d2}\n                    />\n                );\n        }\n    }\n\n    render() {\n        const { dimension, onClose } = this.props;\n        const dialogId = dimension.id;\n\n        return (\n            <>\n                {dialogId && (\n                    <Modal onClose={onClose} position=\"top\" large>\n                        <ModalTitle>{dimension.name}</ModalTitle>\n                        <ModalContent>\n                            {this.renderDialogContent()}\n                        </ModalContent>\n                        <ModalActions>\n                            <ButtonStrip>\n                                <Button secondary onClick={onClose}>\n                                    {i18n.t('Cancel')}\n                                </Button>\n                                <Button\n                                    primary\n                                    onClick={this.onConfirm(dialogId)}\n                                >\n                                    {i18n.t('Confirm')}\n                                </Button>\n                            </ButtonStrip>\n                        </ModalActions>\n                    </Modal>\n                )}\n            </>\n        );\n    }\n}\n\nFilterDialog.propTypes = {\n    dimension: PropTypes.object,\n    displayNameProperty: PropTypes.string,\n    selectedItems: PropTypes.array,\n    onClose: PropTypes.func,\n    onConfirm: PropTypes.func,\n    onDeselect: PropTypes.func,\n    onReorder: PropTypes.func,\n    onSelect: PropTypes.func,\n};\n\nFilterDialog.contextTypes = {\n    d2: PropTypes.object,\n};\n\nexport default FilterDialog;\n","export const SET_ACTIVE_MODAL_DIMENSION = 'SET_ACTIVE_MODAL_DIMENSION';\nexport const CLEAR_ACTIVE_MODAL_DIMENSION = 'CLEAR_ACTIVE_MODAL_DIMENSION';\n\nexport const DEFAULT_STATE_ACTIVE_MODAL_DIMENSION = {};\n\nexport default (state = DEFAULT_STATE_ACTIVE_MODAL_DIMENSION, action) => {\n    switch (action.type) {\n        case SET_ACTIVE_MODAL_DIMENSION: {\n            return action.value;\n        }\n        case CLEAR_ACTIVE_MODAL_DIMENSION: {\n            return DEFAULT_STATE_ACTIVE_MODAL_DIMENSION;\n        }\n        default:\n            return state;\n    }\n};\n\nexport const sGetActiveModalDimension = state => state.activeModalDimension;\n","import {\n    SET_ACTIVE_MODAL_DIMENSION,\n    CLEAR_ACTIVE_MODAL_DIMENSION,\n} from '../reducers/activeModalDimension';\n\nexport const acSetActiveModalDimension = value => ({\n    type: SET_ACTIVE_MODAL_DIMENSION,\n    value,\n});\n\nexport const acClearActiveModalDimension = () => ({\n    type: CLEAR_ACTIVE_MODAL_DIMENSION,\n});\n","import React, { useState, useRef } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport ArrowDropDownIcon from '@material-ui/icons/ArrowDropDown';\n\nimport i18n from '@dhis2/d2-i18n';\nimport { DimensionsPanel } from '@dhis2/analytics';\n\nimport { Button, Popover } from '@dhis2/ui';\nimport FilterDialog from './FilterDialog';\n\nimport { sGetSettingsDisplayNameProperty } from '../../reducers/settings';\nimport { sGetActiveModalDimension } from '../../reducers/activeModalDimension';\nimport { sGetDimensions } from '../../reducers/dimensions';\nimport { sGetFiltersKeys } from '../../reducers/itemFilters';\nimport { sGetEditItemFiltersRoot } from '../../reducers/editItemFilters';\nimport { acAddItemFilter, acRemoveItemFilter } from '../../actions/itemFilters';\nimport {\n    acRemoveEditItemFilter,\n    acSetEditItemFilters,\n} from '../../actions/editItemFilters';\nimport {\n    acClearActiveModalDimension,\n    acSetActiveModalDimension,\n} from '../../actions/activeModalDimension';\n\nconst FilterSelector = props => {\n    const [showPopover, setShowPopover] = useState(false);\n    const ref = useRef(null);\n\n    const closePanel = () => setShowPopover(false);\n\n    const onCloseDialog = () => {\n        closePanel();\n\n        props.clearActiveModalDimension();\n    };\n\n    const selectDimension = id => {\n        props.setActiveModalDimension(\n            props.dimensions.find(dimension => dimension.id === id)\n        );\n    };\n\n    const onSelectItems = ({ dimensionId, items }) => {\n        props.setEditItemFilters({\n            ...props.selectedItems,\n            [dimensionId]: items,\n        });\n    };\n\n    const onDeselectItems = ({ dimensionId, itemIdsToRemove }) => {\n        const oldList = props.selectedItems[dimensionId] || [];\n        const newList = oldList.filter(\n            item => !itemIdsToRemove.includes(item.id)\n        );\n\n        if (newList.length) {\n            props.setEditItemFilters({\n                ...props.selectedItems,\n                [dimensionId]: newList,\n            });\n        } else {\n            props.removeEditItemFilter(dimensionId);\n        }\n    };\n\n    const onReorderItems = ({ dimensionId, itemIds }) => {\n        const oldList = props.selectedItems[dimensionId] || [];\n        const reorderedList = itemIds.map(id =>\n            oldList.find(item => item.id === id)\n        );\n\n        props.setEditItemFilters({\n            ...props.selectedItems,\n            [dimensionId]: reorderedList,\n        });\n    };\n\n    const saveFilter = id => {\n        const filterItems = props.selectedItems[id];\n\n        if (filterItems && filterItems.length) {\n            props.addItemFilter({\n                id,\n                value: [...filterItems],\n            });\n        } else {\n            props.removeItemFilter(id);\n        }\n\n        onCloseDialog();\n    };\n\n    return (\n        <>\n            <span ref={ref}>\n                <Button onClick={() => setShowPopover(true)}>\n                    {i18n.t('Add filter')}\n                    <ArrowDropDownIcon />\n                </Button>\n            </span>\n            {showPopover && (\n                <Popover\n                    onClickOutside={closePanel}\n                    reference={ref}\n                    arrow={true}\n                    placement=\"bottom-start\"\n                >\n                    <DimensionsPanel\n                        style={{ width: '320px' }}\n                        dimensions={props.dimensions}\n                        onDimensionClick={selectDimension}\n                        selectedIds={props.selectedDimensions}\n                    />\n                </Popover>\n            )}\n            {props.dimension ? (\n                <FilterDialog\n                    displayNameProperty={props.displayNameProperty}\n                    dimension={props.dimension}\n                    selectedItems={\n                        props.selectedItems[props.dimension.id] || []\n                    }\n                    onSelect={onSelectItems}\n                    onDeselect={onDeselectItems}\n                    onReorder={onReorderItems}\n                    onClose={onCloseDialog}\n                    onConfirm={saveFilter}\n                />\n            ) : null}\n        </>\n    );\n};\n\nconst mapStateToProps = state => ({\n    displayNameProperty: sGetSettingsDisplayNameProperty(state),\n    dimension: sGetActiveModalDimension(state),\n    dimensions: sGetDimensions(state),\n    selectedDimensions: sGetFiltersKeys(state),\n    selectedItems: sGetEditItemFiltersRoot(state),\n});\n\nFilterSelector.propTypes = {\n    addItemFilter: PropTypes.func,\n    clearActiveModalDimension: PropTypes.func,\n    dimension: PropTypes.object,\n    dimensions: PropTypes.array,\n    displayNameProperty: PropTypes.string,\n    removeEditItemFilter: PropTypes.func,\n    removeItemFilter: PropTypes.func,\n    selectedDimensions: PropTypes.array,\n    selectedItems: PropTypes.object,\n    setActiveModalDimension: PropTypes.func,\n    setEditItemFilters: PropTypes.func,\n};\n\nexport default connect(mapStateToProps, {\n    clearActiveModalDimension: acClearActiveModalDimension,\n    setActiveModalDimension: acSetActiveModalDimension,\n    addItemFilter: acAddItemFilter,\n    removeItemFilter: acRemoveItemFilter,\n    removeEditItemFilter: acRemoveEditItemFilter,\n    setEditItemFilters: acSetEditItemFilters,\n})(FilterSelector);\n","import React, { Component } from 'react';\nimport InfoOutlineIcon from '@material-ui/icons/InfoOutlined';\nimport { colors } from '@dhis2/ui';\nimport PropTypes from 'prop-types';\n\nclass Info extends Component {\n    show = false;\n\n    toggle() {\n        this.show = !this.show;\n        return this.show;\n    }\n\n    render() {\n        return (\n            <div onClick={() => this.props.onClick(this.toggle())}>\n                <InfoOutlineIcon style={{ fill: colors.grey600 }} />\n            </div>\n        );\n    }\n}\n\nInfo.propTypes = {\n    onClick: PropTypes.func,\n};\n\nexport default Info;\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { Link } from 'react-router-dom';\nimport i18n from '@dhis2/d2-i18n';\nimport SharingDialog from '@dhis2/d2-ui-sharing-dialog';\nimport Star from '@material-ui/icons/Star';\nimport StarBorder from '@material-ui/icons/StarBorder';\nimport { Button, colors } from '@dhis2/ui';\n\nimport { orObject } from '../../modules/util';\nimport { tStarDashboard } from '../../actions/dashboards';\nimport { acSetSelectedShowDescription } from '../../actions/selected';\nimport FilterSelector from '../ItemFilter/FilterSelector';\nimport Info from './Info';\nimport {\n    sGetSelectedId,\n    sGetSelectedShowDescription,\n} from '../../reducers/selected';\nimport {\n    sGetDashboardById,\n    sGetDashboardItems,\n} from '../../reducers/dashboards';\n\nimport classes from './styles/ViewTitleBar.module.css';\n\nconst NO_DESCRIPTION = i18n.t('No description');\n\nclass ViewTitleBar extends Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            sharingDialogIsOpen: false,\n        };\n    }\n\n    toggleSharingDialog = () =>\n        this.setState({ sharingDialogIsOpen: !this.state.sharingDialogIsOpen });\n\n    render() {\n        const {\n            id,\n            name,\n            description,\n            access,\n            style,\n            showDescription,\n            starred,\n            onStarClick,\n            onInfoClick,\n        } = this.props;\n\n        const titleStyle = Object.assign({}, style.title, {\n            cursor: 'default',\n            userSelect: 'text',\n            top: '7px',\n        });\n\n        const StarIcon = starred ? Star : StarBorder;\n\n        return (\n            <>\n                <div className={classes.titleBar}>\n                    <span style={titleStyle}>{name}</span>\n                    <div className={classes.actions}>\n                        <div\n                            className={classes.titleBarIcon}\n                            onClick={onStarClick}\n                        >\n                            <StarIcon style={{ fill: colors.grey600 }} />\n                        </div>\n                        <div className={classes.titleBarIcon}>\n                            <Info onClick={onInfoClick} />\n                        </div>\n                        <div style={{ marginLeft: '10px' }}>\n                            {access.update ? (\n                                <Link\n                                    className={classes.editLink}\n                                    to={`/${id}/edit`}\n                                >\n                                    <Button>{i18n.t('Edit')}</Button>\n                                </Link>\n                            ) : null}\n                            {access.manage ? (\n                                <span style={{ marginRight: '4px' }}>\n                                    <Button onClick={this.toggleSharingDialog}>\n                                        {i18n.t('Share')}\n                                    </Button>\n                                </span>\n                            ) : null}\n                            <span style={{ marginRight: '4px' }}>\n                                <FilterSelector />\n                            </span>\n                        </div>\n                    </div>\n                </div>\n                {showDescription ? (\n                    <div\n                        className=\"dashboard-description\"\n                        style={Object.assign(\n                            { paddingTop: '5px', paddingBottom: '5px' },\n                            style.description,\n                            !description ? { color: '#888' } : {}\n                        )}\n                    >\n                        {description || NO_DESCRIPTION}\n                    </div>\n                ) : null}\n                {id ? (\n                    <SharingDialog\n                        d2={this.context.d2}\n                        id={id}\n                        type=\"dashboard\"\n                        open={this.state.sharingDialogIsOpen}\n                        onRequestClose={this.toggleSharingDialog}\n                    />\n                ) : null}\n            </>\n        );\n    }\n}\n\nViewTitleBar.propTypes = {\n    access: PropTypes.object,\n    description: PropTypes.string,\n    id: PropTypes.string,\n    name: PropTypes.string,\n    showDescription: PropTypes.bool,\n    starred: PropTypes.bool,\n    style: PropTypes.object,\n    onInfoClick: PropTypes.func,\n    onStarClick: PropTypes.func,\n};\n\nViewTitleBar.defaultProps = {\n    name: '',\n    description: '',\n    starred: false,\n    showDescription: false,\n    onInfoClick: null,\n};\n\nViewTitleBar.contextTypes = {\n    d2: PropTypes.object,\n};\n\nconst mapStateToProps = state => {\n    const id = sGetSelectedId(state);\n    const dashboard = orObject(sGetDashboardById(state, id));\n\n    return {\n        id,\n        name: dashboard.displayName,\n        description: dashboard.displayDescription,\n        dashboardItems: sGetDashboardItems(state),\n        showDescription: sGetSelectedShowDescription(state),\n        starred: dashboard.starred,\n        access: orObject(dashboard.access),\n    };\n};\n\nconst mergeProps = (stateProps, dispatchProps, ownProps) => {\n    const { id, starred, showDescription } = stateProps;\n    const { dispatch } = dispatchProps;\n\n    return {\n        ...stateProps,\n        ...ownProps,\n        onStarClick: () => dispatch(tStarDashboard(id, !starred)),\n        onInfoClick: () =>\n            dispatch(acSetSelectedShowDescription(!showDescription)),\n    };\n};\n\nexport default connect(mapStateToProps, null, mergeProps)(ViewTitleBar);\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport { colors } from '@dhis2/ui';\nimport EditTitleBar from './EditTitleBar';\nimport ViewTitleBar from './ViewTitleBar';\n\nimport './TitleBar.css';\n\nconst style = {\n    title: {\n        position: 'relative',\n        fontSize: 21,\n        fontWeight: 500,\n        color: colors.black,\n        minWidth: 50,\n    },\n    description: {\n        fontSize: 14,\n        color: colors.grey800,\n    },\n};\n\nconst TitleBar = ({ edit }) => {\n    return (\n        <div\n            className=\"titlebar-wrapper\"\n            style={{\n                padding: '20px 15px 5px 10px',\n            }}\n        >\n            {edit ? (\n                <EditTitleBar style={style} />\n            ) : (\n                <ViewTitleBar style={style} />\n            )}\n        </div>\n    );\n};\n\nTitleBar.propTypes = {\n    edit: PropTypes.bool,\n};\n\nexport default TitleBar;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nimport i18n from '@dhis2/d2-i18n';\n\nimport * as pluginManager from './plugin';\nimport { getBaseUrl, orObject } from '../../../modules/util';\nimport { getGridItemDomId } from '../../ItemGrid/gridUtil';\n\nconst pluginCredentials = d2 => {\n    return {\n        baseUrl: getBaseUrl(d2),\n        auth: d2.Api.getApi().defaultHeaders.Authorization,\n    };\n};\n\nclass DefaultPlugin extends Component {\n    pluginCredentials = null;\n\n    constructor(props, context) {\n        super(props);\n\n        this.d2 = context.d2;\n    }\n\n    shouldPluginReload = prevProps => {\n        // TODO - fix this hack, to handle bug with multiple\n        // rerendering while switching between dashboards.\n        //\n        // To determine if the rendering is happening because of a\n        // dashboard switch, check if the item reference has changed.\n        const reloadAllowed = this.props.item === prevProps.item;\n\n        const filtersChanged = prevProps.itemFilters !== this.props.itemFilters;\n        const vis = orObject(this.props.visualization);\n        const prevVis = orObject(prevProps.visualization);\n        const visChanged =\n            vis.id !== prevVis.id || vis.activeType !== prevVis.activeType;\n\n        return reloadAllowed && (visChanged || filtersChanged);\n    };\n\n    reloadPlugin = prevProps => {\n        if (\n            pluginManager.pluginIsAvailable(\n                this.props.item,\n                this.props.visualization\n            ) &&\n            this.shouldPluginReload(prevProps)\n        ) {\n            const prevVis = orObject(prevProps.visualization);\n            const currentVis = this.props.visualization;\n\n            const useActiveType =\n                currentVis.activeType !== prevVis.activeType ||\n                currentVis.activeType !== this.props.item.type;\n\n            if (\n                useActiveType ||\n                this.props.itemFilters !== prevProps.itemFilters\n            ) {\n                pluginManager.unmount(\n                    this.props.item,\n                    prevVis.activeType || this.props.item.type\n                );\n\n                pluginManager.load(this.props.item, this.props.visualization, {\n                    credentials: this.pluginCredentials,\n                    activeType: useActiveType ? currentVis.activeType : null,\n                });\n            }\n        }\n    };\n\n    componentDidMount() {\n        this.pluginCredentials = pluginCredentials(this.d2);\n\n        if (\n            pluginManager.pluginIsAvailable(\n                this.props.item,\n                this.props.visualization\n            )\n        ) {\n            pluginManager.load(this.props.item, this.props.visualization, {\n                credentials: this.pluginCredentials,\n                activeType: !this.props.editMode ? this.getActiveType() : null,\n                options: this.props.options,\n            });\n        }\n    }\n\n    componentDidUpdate(prevProps) {\n        this.reloadPlugin(prevProps);\n    }\n\n    getActiveType = () =>\n        this.props.visualization.activeType || this.props.item.type;\n\n    render() {\n        const { classes, item, visualization, style } = this.props;\n        const pluginIsAvailable = pluginManager.pluginIsAvailable(\n            item,\n            visualization\n        );\n\n        return pluginIsAvailable ? (\n            <div id={getGridItemDomId(item.id)} style={style} />\n        ) : (\n            <div className={classes.textDiv}>\n                {i18n.t('Unable to load the plugin for this item')}\n            </div>\n        );\n    }\n}\n\nDefaultPlugin.contextTypes = {\n    d2: PropTypes.object,\n};\n\nDefaultPlugin.propTypes = {\n    classes: PropTypes.object,\n    editMode: PropTypes.bool,\n    item: PropTypes.object,\n    itemFilters: PropTypes.object,\n    options: PropTypes.object,\n    style: PropTypes.object,\n    visualization: PropTypes.object,\n};\n\nDefaultPlugin.defaultProps = {\n    style: {},\n    item: {},\n    itemFilters: {},\n    options: {},\n    visualization: {},\n};\n\nexport default DefaultPlugin;\n","import React from 'react';\nimport { colors } from '@dhis2/ui';\n\nexport const ThreeDots = () => (\n    <svg\n        height=\"18\"\n        viewBox=\"0 0 18 18\"\n        width=\"18\"\n        xmlns=\"http://www.w3.org/2000/svg\"\n    >\n        <path\n            d=\"m4 7.5c-.83 0-1.5.67-1.5 1.5s.67 1.5 1.5 1.5 1.5-.67 1.5-1.5-.67-1.5-1.5-1.5zm10 0c-.83 0-1.5.67-1.5 1.5s.67 1.5 1.5 1.5 1.5-.67 1.5-1.5-.67-1.5-1.5-1.5zm-5 0c-.83 0-1.5.67-1.5 1.5s.67 1.5 1.5 1.5 1.5-.67 1.5-1.5-.67-1.5-1.5-1.5z\"\n            fill=\"#6e7a8a\"\n        />\n    </svg>\n);\n\nexport const SpeechBubble = () => (\n    <svg\n        height=\"20\"\n        viewBox=\"0 0 20 20\"\n        width=\"20\"\n        xmlns=\"http://www.w3.org/2000/svg\"\n        style={{ margin: '3px 2px 0 2px' }} // Temporary fix for the misaligned icon, should be removed once the icon is replaced\n    >\n        <path\n            d=\"m20 2h-16c-1.1 0-1.99.9-1.99 2l-.01 18 4-4h14c1.1 0 2-.9 2-2v-12c0-1.1-.9-2-2-2zm-2 12h-12v-2h12zm0-3h-12v-2h12zm0-3h-12v-2h12z\"\n            fill=\"#6e7a8a\"\n            fillRule=\"evenodd\"\n            transform=\"translate(-2 -2)\"\n        />\n    </svg>\n);\n\nexport const Warning = () => (\n    <svg\n        xmlns=\"http://www.w3.org/2000/svg\"\n        height=\"24\"\n        viewBox=\"0 0 24 24\"\n        width=\"24\"\n        fill={colors.grey600}\n    >\n        <path d=\"M0 0h24v24H0z\" fill=\"none\" />\n        <path d=\"M1 21h22L12 2 1 21zm12-3h-2v-2h2v2zm0-4h-2v-4h2v4z\" />\n    </svg>\n);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport i18n from '@dhis2/d2-i18n';\nimport { Warning } from './assets/icons';\n\nimport classes from './styles/FatalErrorBoundary.module.css';\n\nclass FatalErrorBoundary extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            errorFound: false,\n        };\n    }\n    componentDidCatch(error, info) {\n        this.setState({\n            errorFound: true,\n        });\n        console.log('error: ', error);\n        console.log('info: ', info);\n    }\n    render() {\n        if (this.state.errorFound) {\n            return (\n                <p className={classes.container}>\n                    <span className={classes.icon}>\n                        <Warning />\n                    </span>\n                    <span className={classes.message}>\n                        {i18n.t(\n                            'There was a problem loading this dashboard item'\n                        )}\n                    </span>\n                </p>\n            );\n        }\n        return this.props.children;\n    }\n}\n\nFatalErrorBoundary.propTypes = {\n    children: PropTypes.node,\n};\n\nexport default FatalErrorBoundary;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport i18n from '@dhis2/d2-i18n';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport { colors } from '@dhis2/ui';\n\nimport classes from './styles/DeleteItemButton.module.css';\n\nconst DeleteItemButton = ({ onClick }) => (\n    <button\n        type=\"button\"\n        className={classes.deleteItemButton}\n        onClick={onClick}\n        title={i18n.t(`Delete item`)}\n    >\n        <DeleteIcon style={{ fill: colors.red500 }} />\n    </button>\n);\n\nDeleteItemButton.propTypes = {\n    onClick: PropTypes.func,\n};\n\nexport default DeleteItemButton;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\n\nimport { sGetIsEditing } from '../../reducers/editDashboard';\nimport { acRemoveDashboardItem } from '../../actions/editDashboard';\nimport DeleteItemButton from './DeleteItemButton';\n\nimport classes from './styles/ItemHeader.module.css';\n\n// This is the margin-top + margin-bottom defined in the css file\nexport const HEADER_MARGIN_HEIGHT = 12;\n\nconst ItemHeader = React.forwardRef(\n    (\n        { itemId, acRemoveDashboardItem, actionButtons, title, editMode },\n        ref\n    ) => {\n        const handleDeleteItem = () => acRemoveDashboardItem(itemId);\n\n        return (\n            <div className={classes.itemHeaderWrap} ref={ref}>\n                <p className={classes.itemTitle}>{title}</p>\n                {editMode ? (\n                    <div className={classes.itemActionsWrap}>\n                        <DeleteItemButton onClick={handleDeleteItem} />\n                    </div>\n                ) : (\n                    actionButtons && (\n                        <div className={classes.itemActionsWrap}>\n                            {actionButtons}\n                        </div>\n                    )\n                )}\n            </div>\n        );\n    }\n);\n\nItemHeader.propTypes = {\n    acRemoveDashboardItem: PropTypes.func,\n    actionButtons: PropTypes.node,\n    editMode: PropTypes.bool,\n    itemId: PropTypes.string,\n    title: PropTypes.string,\n};\n\nconst mapStateToProps = state => ({\n    editMode: sGetIsEditing(state),\n});\n\nconst mapDispatchToProps = {\n    acRemoveDashboardItem,\n};\n\nexport default connect(\n    mapStateToProps,\n    mapDispatchToProps,\n    null,\n    { forwardRef: true }\n)(ItemHeader);\n","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\n\nimport {\n    isSingleValue,\n    isYearOverYear,\n    VIS_TYPE_GAUGE,\n    VIS_TYPE_PIE,\n} from '@dhis2/analytics';\nimport { Button, Menu, MenuItem, Divider, colors } from '@dhis2/ui';\nimport i18n from '@dhis2/d2-i18n';\nimport Popover from '@material-ui/core/Popover';\nimport TableIcon from '@material-ui/icons/ViewList';\nimport ChartIcon from '@material-ui/icons/InsertChart';\nimport MapIcon from '@material-ui/icons/Public';\nimport LaunchIcon from '@material-ui/icons/Launch';\n\nimport { ThreeDots, SpeechBubble } from './assets/icons';\nimport { pluginIsAvailable, getLink } from './plugin';\nimport {\n    CHART,\n    MAP,\n    REPORT_TABLE,\n    EVENT_CHART,\n    EVENT_REPORT,\n    isTrackerDomainType,\n    hasMapView,\n    getAppName,\n} from '../../../modules/itemTypes';\n\nconst iconFill = { fill: colors.grey600 };\n\nconst ItemHeaderButtons = props => {\n    const [anchorEl, setAnchorEl] = useState(null);\n\n    const { item, visualization, onSelectActiveType, d2, activeType } = props;\n\n    const isTrackerType = isTrackerDomainType(item.type);\n\n    const onViewTable = () => {\n        handleClose();\n        onSelectActiveType(isTrackerType ? EVENT_REPORT : REPORT_TABLE);\n    };\n\n    const onViewChart = () => {\n        handleClose();\n        onSelectActiveType(isTrackerType ? EVENT_CHART : CHART);\n    };\n\n    const onViewMap = () => {\n        handleClose();\n        onSelectActiveType(MAP);\n    };\n\n    const itemHasMapView = () => hasMapView(item.type);\n\n    const handleMenuClick = (_, event) => setAnchorEl(event.currentTarget);\n\n    const handleInterpretationClick = () => {\n        props.onToggleFooter();\n        if (anchorEl !== null) {\n            handleClose();\n        }\n    };\n\n    const handleClose = () => setAnchorEl(null);\n\n    const type = visualization.type || item.type;\n    const canViewAs =\n        !isSingleValue(type) &&\n        !isYearOverYear(type) &&\n        type !== VIS_TYPE_GAUGE &&\n        type !== VIS_TYPE_PIE;\n\n    const interpretationMenuLabel = props.activeFooter\n        ? i18n.t(`Hide interpretations and details`)\n        : i18n.t(`Show interpretations and details`);\n\n    const ViewAsMenuItems = () => (\n        <>\n            {activeType !== CHART && activeType !== EVENT_CHART && (\n                <MenuItem\n                    dense\n                    label={i18n.t('View as Chart')}\n                    onClick={onViewChart}\n                    icon={<ChartIcon style={iconFill} />}\n                />\n            )}\n            {activeType !== REPORT_TABLE && activeType !== EVENT_REPORT && (\n                <MenuItem\n                    dense\n                    label={i18n.t('View as Table')}\n                    onClick={onViewTable}\n                    icon={<TableIcon style={iconFill} />}\n                />\n            )}\n            {itemHasMapView() && activeType !== MAP && (\n                <MenuItem\n                    dense\n                    label={i18n.t('View as Map')}\n                    onClick={onViewMap}\n                    icon={<MapIcon style={iconFill} />}\n                />\n            )}\n        </>\n    );\n\n    return pluginIsAvailable(item, visualization) ? (\n        <>\n            <Button small secondary onClick={handleMenuClick}>\n                <ThreeDots />\n            </Button>\n            {anchorEl && (\n                <Popover\n                    open={Boolean(anchorEl)}\n                    onClose={handleClose}\n                    anchorEl={anchorEl}\n                >\n                    <Menu>\n                        {canViewAs && (\n                            <>\n                                <ViewAsMenuItems />\n                                <Divider />\n                            </>\n                        )}\n                        <MenuItem\n                            dense\n                            icon={<LaunchIcon style={{ fill: '#6e7a8a' }} />}\n                            label={i18n.t('Open in {{appName}} app', {\n                                appName: getAppName(item.type),\n                            })}\n                            href={getLink(item, d2)}\n                            target=\"_blank\"\n                        />\n                        <MenuItem\n                            dense\n                            icon={<SpeechBubble />}\n                            label={interpretationMenuLabel}\n                            onClick={handleInterpretationClick}\n                        />\n                    </Menu>\n                </Popover>\n            )}\n        </>\n    ) : null;\n};\n\nItemHeaderButtons.propTypes = {\n    activeFooter: PropTypes.bool,\n    activeType: PropTypes.string,\n    d2: PropTypes.object,\n    item: PropTypes.object,\n    visualization: PropTypes.object,\n    onSelectActiveType: PropTypes.func,\n    onToggleFooter: PropTypes.func,\n};\n\nexport default ItemHeaderButtons;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { colors } from '@dhis2/ui';\nimport { getId } from './plugin';\nimport InterpretationsComponent from '@dhis2/d2-ui-interpretations';\n\nconst style = {\n    scrollContainer: {\n        overflowY: 'auto',\n        height: '340px',\n    },\n    line: {\n        margin: '-1px 0px 0px',\n        height: '1px',\n        border: 'none',\n        backgroundColor: colors.grey100,\n    },\n};\n\nclass ItemFooter extends Component {\n    render() {\n        const objectId = getId(this.props.item);\n\n        return (\n            <div className=\"dashboard-item-footer\">\n                <hr style={style.line} />\n                <div style={style.scrollContainer}>\n                    <InterpretationsComponent\n                        d2={this.context.d2}\n                        item={this.props.item}\n                        type={this.props.item.type.toLowerCase()}\n                        id={objectId}\n                        appName=\"dashboard\"\n                    />\n                </div>\n            </div>\n        );\n    }\n}\n\nItemFooter.contextTypes = {\n    d2: PropTypes.object.isRequired,\n};\n\nItemFooter.propTypes = {\n    item: PropTypes.object.isRequired,\n};\n\nexport default ItemFooter;\n","// Note that this ignores discrepancies in 'this', so shouldn't be used with bound functions\n// This is useful instead of lodash/memoize when we only need to memoize a single value\n// Inspiration: https://github.com/alexreardon/memoize-one\n\nconst memoizeOne = fn => {\n    let lastArgs = undefined;\n    let lastValue = undefined;\n\n    return (...args) => {\n        if (\n            lastArgs &&\n            args.length === lastArgs.length &&\n            args.every((arg, i) => arg === lastArgs[i])\n        ) {\n            return lastValue;\n        }\n        lastArgs = args;\n        lastValue = fn(...args);\n        return lastValue;\n    };\n};\n\nexport default memoizeOne;\n","import React from 'react';\nimport { CircularLoader } from '@dhis2/ui';\n\nimport classes from './styles/LoadingMask.module.css';\n\nconst LoadingMask = () => {\n    return (\n        <div className={classes.center}>\n            <CircularLoader />\n        </div>\n    );\n};\n\nexport default LoadingMask;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport uniqueId from 'lodash/uniqueId';\nimport VisualizationPlugin from '@dhis2/data-visualizer-plugin';\nimport i18n from '@dhis2/d2-i18n';\n\nimport DefaultPlugin from './DefaultPlugin';\nimport FatalErrorBoundary from './FatalErrorBoundary';\nimport ItemHeader, { HEADER_MARGIN_HEIGHT } from '../ItemHeader';\nimport ItemHeaderButtons from './ItemHeaderButtons';\nimport ItemFooter from './ItemFooter';\nimport * as pluginManager from './plugin';\nimport { sGetVisualization } from '../../../reducers/visualizations';\nimport { sGetItemFiltersRoot } from '../../../reducers/itemFilters';\nimport {\n    acAddVisualization,\n    acSetActiveVisualizationType,\n} from '../../../actions/visualizations';\nimport {\n    VISUALIZATION,\n    MAP,\n    CHART,\n    REPORT_TABLE,\n} from '../../../modules/itemTypes';\nimport memoizeOne from '../../../modules/memoizeOne';\n\nimport { getVisualizationConfig } from './plugin';\nimport LoadingMask from './LoadingMask';\nimport { ITEM_CONTENT_PADDING_BOTTOM } from '../../ItemGrid/ItemGrid';\n\nimport classes from './styles/Item.module.css';\n\nexport class Item extends Component {\n    state = {\n        showFooter: false,\n        configLoaded: false,\n        pluginIsLoaded: false,\n    };\n\n    constructor(props, context) {\n        super(props);\n\n        this.d2 = context.d2;\n\n        this.contentRef = React.createRef();\n        this.headerRef = React.createRef();\n\n        this.memoizedApplyFilters = memoizeOne(this.applyFilters);\n\n        this.memoizedGetVisualizationConfig = memoizeOne(\n            getVisualizationConfig\n        );\n\n        this.memoizedGetContentStyle = memoizeOne(this.getContentStyle);\n    }\n\n    async componentDidMount() {\n        this.props.onVisualizationLoaded(\n            // TODO do not call fetch on the pluginManager, do it here as the manager will eventually be removed...\n            await pluginManager.fetch(this.props.item)\n        );\n\n        this.setState({\n            configLoaded: true,\n        });\n    }\n\n    componentDidUpdate(prevProps, prevState) {\n        if (\n            prevState.pluginIsLoaded &&\n            (prevProps.visualization !== this.props.visualization ||\n                prevProps.itemFilters !== this.props.itemFilters)\n        ) {\n            this.setState({\n                pluginIsLoaded: false,\n            });\n        }\n    }\n\n    applyFilters = (visualization, filters) => {\n        if (!Object.keys(filters).length) {\n            return visualization;\n        }\n\n        // deep clone objects in filters to avoid changing the visualization in the Redux store\n        const visRows = visualization.rows.map(obj => ({ ...obj }));\n        const visColumns = visualization.columns.map(obj => ({ ...obj }));\n        const visFilters = visualization.filters.map(obj => ({ ...obj }));\n\n        Object.keys(filters).forEach(dimensionId => {\n            if (filters[dimensionId]) {\n                let dimensionFound = false;\n\n                [visRows, visColumns, visFilters].forEach(dimensionObjects =>\n                    dimensionObjects\n                        .filter(obj => obj.dimension === dimensionId)\n                        .forEach(obj => {\n                            dimensionFound = true;\n                            obj.items = filters[dimensionId];\n                        })\n                );\n\n                // add dimension to filters if not already present elsewhere\n                if (!dimensionFound) {\n                    visFilters.push({\n                        dimension: dimensionId,\n                        items: filters[dimensionId],\n                    });\n                }\n            }\n        });\n\n        return {\n            ...visualization,\n            rows: visRows,\n            columns: visColumns,\n            filters: visFilters,\n        };\n    };\n\n    getUniqueKey = memoizeOne(() => uniqueId());\n\n    pluginCredentials = null;\n\n    getPluginComponent = () => {\n        const activeType = this.getActiveType();\n        const visualization = this.memoizedGetVisualizationConfig(\n            this.props.visualization,\n            this.props.item.type,\n            activeType\n        );\n\n        if (!visualization) {\n            return (\n                <div className={classes.textDiv}>\n                    {i18n.t('No data to display')}\n                </div>\n            );\n        }\n\n        const calculatedHeight =\n            this.props.item.originalHeight -\n            this.headerRef.current.clientHeight -\n            HEADER_MARGIN_HEIGHT -\n            ITEM_CONTENT_PADDING_BOTTOM;\n\n        const props = {\n            ...this.props,\n            visualization,\n            classes,\n            style: this.memoizedGetContentStyle(\n                calculatedHeight,\n                this.contentRef ? this.contentRef.offsetHeight : null,\n                this.props.editMode\n            ),\n        };\n\n        switch (activeType) {\n            case VISUALIZATION:\n            case CHART:\n            case REPORT_TABLE: {\n                return (\n                    <>\n                        {!this.state.pluginIsLoaded && (\n                            <div style={props.style}>\n                                <LoadingMask />\n                            </div>\n                        )}\n                        <VisualizationPlugin\n                            d2={this.d2}\n                            visualization={this.memoizedApplyFilters(\n                                visualization,\n                                props.itemFilters\n                            )}\n                            onLoadingComplete={this.onLoadingComplete}\n                            forDashboard={true}\n                            style={props.style}\n                        />\n                    </>\n                );\n            }\n            case MAP: {\n                if (props.item.type === MAP) {\n                    // apply filters only to thematic and event layers\n                    // for maps AO\n                    const mapViews = props.visualization.mapViews.map(obj => {\n                        if (\n                            obj.layer.includes('thematic') ||\n                            obj.layer.includes('event')\n                        ) {\n                            return this.memoizedApplyFilters(\n                                obj,\n                                props.itemFilters\n                            );\n                        }\n\n                        return obj;\n                    });\n\n                    props.visualization = {\n                        ...props.visualization,\n                        mapViews,\n                    };\n                } else {\n                    // this is the case of a non map AO passed to the maps plugin\n                    // due to a visualization type switch in dashboard item\n                    // maps plugin takes care of converting the AO to a suitable format\n                    props.visualization = this.memoizedApplyFilters(\n                        props.visualization,\n                        props.itemFilters\n                    );\n                }\n\n                props.options = {\n                    ...props.options,\n                    hideTitle: true,\n                };\n\n                return <DefaultPlugin {...props} />;\n            }\n            default: {\n                props.visualization = this.memoizedApplyFilters(\n                    props.visualization,\n                    props.itemFilters\n                );\n\n                return <DefaultPlugin {...props} />;\n            }\n        }\n    };\n\n    onLoadingComplete = () => {\n        this.setState({\n            pluginIsLoaded: true,\n        });\n    };\n\n    onToggleFooter = () => {\n        this.setState(\n            { showFooter: !this.state.showFooter },\n            this.props.onToggleItemExpanded(this.props.item.id)\n        );\n    };\n\n    onSelectActiveType = type => {\n        if (type === this.getActiveType()) {\n            return;\n        }\n\n        pluginManager.unmount(this.props.item, this.getActiveType());\n\n        this.props.onSelectActiveType(this.props.visualization.id, type);\n    };\n\n    getActiveType = () =>\n        this.props.visualization.activeType || this.props.item.type;\n\n    pluginIsAvailable = () =>\n        pluginManager.pluginIsAvailable(\n            this.props.item,\n            this.props.visualization\n        );\n\n    getContentStyle = (calculatedHeight, measuredHeight, editMode) => {\n        const height = editMode\n            ? measuredHeight || calculatedHeight\n            : calculatedHeight;\n\n        return { height };\n    };\n\n    render() {\n        const { item, editMode, itemFilters } = this.props;\n        const { showFooter } = this.state;\n\n        const actionButtons = (\n            <ItemHeaderButtons\n                item={item}\n                visualization={this.props.visualization}\n                onSelectActiveType={this.onSelectActiveType}\n                onToggleFooter={this.onToggleFooter}\n                d2={this.d2}\n                activeType={this.getActiveType()}\n                activeFooter={this.state.showFooter}\n            />\n        );\n\n        return (\n            <>\n                <ItemHeader\n                    title={pluginManager.getName(item)}\n                    itemId={item.id}\n                    actionButtons={actionButtons}\n                    ref={this.headerRef}\n                />\n                <FatalErrorBoundary>\n                    <div\n                        key={this.getUniqueKey(itemFilters)}\n                        className=\"dashboard-item-content\"\n                        ref={ref => (this.contentRef = ref)}\n                    >\n                        {this.state.configLoaded && this.getPluginComponent()}\n                    </div>\n                </FatalErrorBoundary>\n                {!editMode && showFooter ? <ItemFooter item={item} /> : null}\n            </>\n        );\n    }\n}\n\nItem.contextTypes = {\n    d2: PropTypes.object,\n};\n\nItem.propTypes = {\n    editMode: PropTypes.bool,\n    item: PropTypes.object,\n    itemFilters: PropTypes.object,\n    visualization: PropTypes.object,\n    onSelectActiveType: PropTypes.func,\n    onToggleItemExpanded: PropTypes.func,\n    onVisualizationLoaded: PropTypes.func,\n};\n\nItem.defaultProps = {\n    item: {},\n    editMode: false,\n    onToggleItemExpanded: Function.prototype,\n    itemFilters: {},\n    visualization: {},\n};\n\nconst mapStateToProps = (state, ownProps) => ({\n    itemFilters: sGetItemFiltersRoot(state),\n    visualization: sGetVisualization(\n        state,\n        pluginManager.extractFavorite(ownProps.item).id\n    ),\n});\n\nconst mapDispatchToProps = dispatch => ({\n    onVisualizationLoaded: visualization =>\n        dispatch(acAddVisualization(visualization)),\n    onSelectActiveType: (id, type, activeType) =>\n        dispatch(acSetActiveVisualizationType(id, type, activeType)),\n});\n\nexport default connect(\n    mapStateToProps,\n    mapDispatchToProps\n)(Item);\n","import React from 'react';\nimport { colors } from '@dhis2/ui';\n\nconst style = {\n    backgroundColor: colors.grey200,\n    border: 'none',\n    height: '1px',\n    margin: '0px 0px 5px 0px',\n};\n\nconst Line = () => <hr style={style} />;\n\nexport default Line;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport i18n from '@dhis2/d2-i18n';\n\nimport { sGetMessagesRoot } from '../../../reducers/messages';\nimport { formatDate } from '../../../modules/util';\nimport { colors } from '@dhis2/ui';\nimport ItemHeader from '../ItemHeader';\nimport Line from '../../../widgets/Line';\n\nimport './MessagesItem.css';\n\nconst PRIVATE = 'PRIVATE';\n\nconst messageTypes = {\n    [PRIVATE]: 'Private',\n    VALIDATION_RESULT: 'Validation',\n    TICKET: 'Ticket',\n    SYSTEM: 'System',\n};\n\nconst style = {\n    list: {\n        listStyleType: 'none',\n        paddingLeft: '0px',\n    },\n    seeAll: {\n        textAlign: 'center',\n        fontSize: '13px',\n        marginBottom: '5px',\n    },\n    sender: {\n        fontSize: '13px',\n        lineHeight: '15px',\n        margin: 0,\n        color: colors.grey800,\n    },\n    snippet: {\n        color: colors.grey800,\n        fontSize: '13px',\n        lineHeight: '15px',\n        maxHeight: '30px',\n        overflow: 'hidden',\n    },\n};\n\nclass MessagesItem extends Component {\n    state = {\n        uiLocale: '',\n    };\n\n    async componentDidMount() {\n        const uiLocale = await this.context.d2.currentUser.userSettings.get(\n            'keyUiLocale'\n        );\n\n        this.setState({ uiLocale });\n    }\n\n    getMessageHref = msg => {\n        const msgIdentifier = msg ? `#/${msg.messageType}/${msg.id}` : '';\n        return `${this.context.baseUrl}/dhis-web-messaging/${msgIdentifier}`;\n    };\n\n    getMessageSender = msg => {\n        const latestMsg = msg.messages.slice(-1)[0];\n        return latestMsg.sender ? latestMsg.sender.displayName : '';\n    };\n\n    getMessageItems = () => {\n        const editClass = !this.props.editMode ? 'view' : null;\n\n        return this.props.messages.map(msg => {\n            const redirectToMsg = () => {\n                if (!this.props.editMode) {\n                    document.location.href = this.getMessageHref(msg);\n                }\n            };\n\n            const sender =\n                msg.messageType === PRIVATE\n                    ? this.getMessageSender(msg)\n                    : messageTypes[msg.messageType];\n\n            const readClass = !msg.read ? 'unread' : null;\n            const latestMsg = msg.messages.slice(-1)[0];\n            const msgDate = latestMsg.lastUpdated;\n\n            return (\n                <li\n                    className={`message-item ${editClass}`}\n                    key={msg.id}\n                    onClick={redirectToMsg}\n                >\n                    <p className={`message-title ${readClass}`}>\n                        {msg.displayName} ({msg.messageCount})\n                    </p>\n                    <p style={style.sender}>\n                        {sender} - {formatDate(msgDate, this.state.uiLocale)}\n                    </p>\n                    <p style={style.snippet}>{latestMsg.text}</p>\n                </li>\n            );\n        });\n    };\n\n    render() {\n        return (\n            <>\n                <ItemHeader\n                    title={i18n.t('Messages')}\n                    itemId={this.props.item.id}\n                />\n                <Line />\n                {this.props.messages.length > 0 && (\n                    <div className=\"dashboard-item-content\">\n                        <ul style={style.list}>{this.getMessageItems()}</ul>\n                        <div style={style.seeAll}>\n                            <a href={this.getMessageHref()}>\n                                {i18n.t('See all messages')}\n                            </a>\n                        </div>\n                    </div>\n                )}\n            </>\n        );\n    }\n}\n\nMessagesItem.propTypes = {\n    editMode: PropTypes.bool,\n    item: PropTypes.object,\n    messages: PropTypes.array,\n};\n\nMessagesItem.contextTypes = {\n    d2: PropTypes.object,\n    baseUrl: PropTypes.string,\n};\n\nconst mapStateToProps = state => {\n    return {\n        messages: Object.values(sGetMessagesRoot(state)),\n    };\n};\n\nconst MessagesContainer = connect(mapStateToProps, null)(MessagesItem);\n\nexport default MessagesContainer;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport i18n from '@dhis2/d2-i18n';\nimport ItemHeader from '../ItemHeader';\nimport NotInterestedIcon from '@material-ui/icons/NotInterested';\n\nconst NotSupportedItem = props => (\n    <>\n        <ItemHeader\n            title={i18n.t('Item type \"{{type}}\" not supported', {\n                type: props.item.type,\n            })}\n            itemId={props.item.id}\n        />\n        <div\n            style={{\n                display: 'flex',\n                justifyContent: 'center',\n                alignItems: 'center',\n                height: '90%',\n            }}\n        >\n            <NotInterestedIcon\n                style={{ width: 100, height: 100, align: 'center' }}\n                color=\"disabled\"\n            />\n        </div>\n    </>\n);\n\nNotSupportedItem.propTypes = {\n    item: PropTypes.object,\n};\n\nexport default NotSupportedItem;\n","import React from 'react';\nimport { colors } from '@dhis2/ui';\nimport PropTypes from 'prop-types';\n\nconst DescriptionIcon = ({ className }) => (\n    <svg\n        className={className}\n        xmlns=\"http://www.w3.org/2000/svg\"\n        viewBox=\"0 0 24 24\"\n        fill={colors.grey500}\n    >\n        <path d=\"M0 0h24v24H0z\" fill=\"none\" />\n        <path d=\"M14 2H6c-1.1 0-1.99.9-1.99 2L4 20c0 1.1.89 2 1.99 2H18c1.1 0 2-.9 2-2V8l-6-6zm2 16H8v-2h8v2zm0-4H8v-2h8v2zm-3-5V3.5L18.5 9H13z\" />\n    </svg>\n);\n\nDescriptionIcon.propTypes = {\n    className: PropTypes.string,\n};\n\nexport default DescriptionIcon;\n","import React from 'react';\nimport { colors } from '@dhis2/ui';\nimport PropTypes from 'prop-types';\n\nconst DeleteIcon = ({ className }) => (\n    <svg\n        className={className}\n        xmlns=\"http://www.w3.org/2000/svg\"\n        width=\"18\"\n        height=\"18\"\n        viewBox=\"0 0 24 24\"\n        fill={colors.red500}\n    >\n        <path d=\"M6 19c0 1.1.9 2 2 2h8c1.1 0 2-.9 2-2V7H6v12zM19 4h-3.5l-1-1h-5l-1 1H5v2h14V4z\" />\n        <path d=\"M0 0h24v24H0z\" fill=\"none\" />\n    </svg>\n);\n\nDeleteIcon.propTypes = {\n    className: PropTypes.string,\n};\n\nexport default DeleteIcon;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { colors } from '@dhis2/ui';\nimport DescriptionIcon from '../../../icons/Description';\n\nimport DeleteIcon from '../../../icons/Delete';\nimport Line from '../../../widgets/Line';\nimport { itemTypeMap, getItemUrl } from '../../../modules/itemTypes';\nimport { orArray } from '../../../modules/util';\nimport { tRemoveListItemContent } from './actions';\nimport ItemHeader from '../ItemHeader';\nimport classes from './Item.module.css';\n\nconst getItemTitle = item => itemTypeMap[item.type].pluralTitle;\n\nconst getContentItems = item =>\n    orArray(item[itemTypeMap[item.type].propName]).filter(\n        (item, index, array) =>\n            array.findIndex(el => el.id === item.id) === index\n    );\n\nconst ListItem = (props, context) => {\n    const { item, editMode, tRemoveListItemContent } = props;\n    const contentItems = getContentItems(item);\n\n    const getLink = contentItem => {\n        const deleteButton = (\n            <button\n                className={classes.deletebutton}\n                onClick={() => tRemoveListItemContent(item, contentItem)}\n            >\n                <DeleteIcon className={classes.deleteicon} />\n            </button>\n        );\n\n        return (\n            <>\n                <a\n                    className={classes.link}\n                    style={{ color: colors.grey900 }}\n                    href={getItemUrl(item.type, contentItem, context.d2)}\n                >\n                    {contentItem.name}\n                </a>\n                {editMode ? deleteButton : null}\n            </>\n        );\n    };\n\n    return (\n        <>\n            <ItemHeader title={getItemTitle(item)} itemId={item.id} />\n            <Line />\n            <div className=\"dashboard-item-content\">\n                <ul className={classes.list}>\n                    {contentItems.map(contentItem => (\n                        <li className={classes.item} key={contentItem.id}>\n                            <DescriptionIcon className={classes.itemicon} />\n                            {getLink(contentItem)}\n                        </li>\n                    ))}\n                </ul>\n            </div>\n        </>\n    );\n};\n\nListItem.propTypes = {\n    editMode: PropTypes.bool,\n    item: PropTypes.object,\n    tRemoveListItemContent: PropTypes.func,\n};\n\nListItem.contextTypes = {\n    d2: PropTypes.object,\n};\n\nexport default connect(null, {\n    tRemoveListItemContent,\n})(ListItem);\n","import {\n    acUpdateDashboardItem,\n    acRemoveDashboardItem,\n} from '../../../actions/editDashboard';\nimport { itemTypeMap } from '../../../modules/itemTypes';\n\nexport const tRemoveListItemContent = (dashboardItem, content) => dispatch => {\n    const listItemType = itemTypeMap[dashboardItem.type].propName;\n\n    const newContent = dashboardItem[listItemType].filter(\n        item => item.id !== content.id\n    );\n\n    if (newContent.length) {\n        dashboardItem[listItemType] = newContent;\n        dispatch(acUpdateDashboardItem(dashboardItem));\n    } else {\n        dispatch(acRemoveDashboardItem(dashboardItem));\n    }\n};\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport i18n from '@dhis2/d2-i18n';\nimport PropTypes from 'prop-types';\n\nimport Input from '@material-ui/core/Input';\nimport {\n    Parser as RichTextParser,\n    Editor as RichTextEditor,\n} from '@dhis2/d2-ui-rich-text';\n\nimport { acUpdateDashboardItem } from '../../../actions/editDashboard';\nimport { sGetEditDashboardItems } from '../../../reducers/editDashboard';\nimport { sGetDashboardItems } from '../../../reducers/dashboards';\nimport ItemHeader from '../ItemHeader';\nimport Line from '../../../widgets/Line';\n\nconst style = {\n    textDiv: {\n        padding: '10px',\n        whiteSpace: 'pre-line',\n        lineHeight: '20px',\n    },\n    textField: {\n        fontSize: '14px',\n        fontStretch: 'normal',\n        width: '90%',\n        margin: '0 auto',\n        display: 'block',\n        lineHeight: '24px',\n    },\n    container: {\n        marginBottom: '20px',\n        marginTop: '20px',\n    },\n};\n\nconst TextItem = props => {\n    const { item, editMode, text, acUpdateDashboardItem } = props;\n\n    const onChangeText = event => {\n        const updatedItem = {\n            ...item,\n            text: event.target.value,\n        };\n\n        acUpdateDashboardItem(updatedItem);\n    };\n\n    const viewItem = () => {\n        const textDivStyle = Object.assign({}, style.textField, style.textDiv);\n        return (\n            <div className=\"dashboard-item-content\" style={style.container}>\n                <RichTextParser style={textDivStyle}>{text}</RichTextParser>\n            </div>\n        );\n    };\n\n    const editItem = () => {\n        return (\n            <>\n                <ItemHeader title={i18n.t('Text item')} itemId={item.id} />\n                <Line />\n                <div className=\"dashboard-item-content\">\n                    <RichTextEditor onEdit={onChangeText}>\n                        <Input\n                            value={text}\n                            multiline\n                            fullWidth\n                            style={style.textField}\n                            placeholder={i18n.t('Add text here')}\n                            onChange={onChangeText}\n                        />\n                    </RichTextEditor>\n                </div>\n            </>\n        );\n    };\n\n    return <>{editMode ? editItem() : viewItem()}</>;\n};\n\nconst mapStateToProps = (state, ownProps) => {\n    const items = ownProps.editMode\n        ? sGetEditDashboardItems(state)\n        : sGetDashboardItems(state);\n\n    const item = items.find(item => item.id === ownProps.item.id);\n\n    return {\n        text: item ? item.text : '',\n    };\n};\n\nTextItem.propTypes = {\n    acUpdateDashboardItem: PropTypes.func,\n    editMode: PropTypes.bool,\n    item: PropTypes.object,\n    text: PropTypes.string,\n};\n\nexport default connect(\n    mapStateToProps,\n    {\n        acUpdateDashboardItem,\n    }\n)(TextItem);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport NotInterestedIcon from '@material-ui/icons/NotInterested';\n\nimport { FILTER_ORG_UNIT } from '../../../actions/itemFilters';\nimport { sGetItemFiltersRoot } from '../../../reducers/itemFilters';\nimport ItemHeader from '../ItemHeader';\nimport Line from '../../../widgets/Line';\n\nconst getIframeSrc = (appDetails, item, itemFilters) => {\n    let iframeSrc = `${appDetails.launchUrl}?dashboardItemId=${item.id}`;\n\n    if (\n        itemFilters &&\n        itemFilters[FILTER_ORG_UNIT] &&\n        itemFilters[FILTER_ORG_UNIT].length\n    ) {\n        const ouIds = itemFilters[FILTER_ORG_UNIT].map(\n            ouPath => ouPath.split('/').slice(-1)[0]\n        );\n\n        iframeSrc += `&userOrgUnit=${ouIds.join(',')}`;\n    }\n\n    return iframeSrc;\n};\n\nconst AppItem = ({ item, itemFilters }, context) => {\n    let appDetails;\n\n    const appKey = item.appKey;\n\n    if (appKey) {\n        appDetails = context.d2.system.installedApps.find(\n            app => app.key === appKey\n        );\n    }\n\n    return appDetails && appDetails.name && appDetails.launchUrl ? (\n        <>\n            <ItemHeader title={appDetails.name} itemId={item.id} />\n            <Line />\n            <iframe\n                title={appDetails.name}\n                src={getIframeSrc(appDetails, item, itemFilters)}\n                className=\"dashboard-item-content\"\n                style={{ border: 'none' }}\n            />\n        </>\n    ) : (\n        <>\n            <ItemHeader title={`${appKey} app not found`} />\n            <Line />\n            <div\n                className=\"dashboard-item-content\"\n                style={{\n                    display: 'flex',\n                    justifyContent: 'center',\n                    alignItems: 'center',\n                    height: '90%',\n                }}\n            >\n                <NotInterestedIcon\n                    color=\"disabled\"\n                    disabled\n                    style={{ width: 100, height: 100, align: 'center' }}\n                />\n            </div>\n        </>\n    );\n};\n\nAppItem.propTypes = {\n    item: PropTypes.object,\n    itemFilters: PropTypes.object,\n};\n\nAppItem.contextTypes = {\n    d2: PropTypes.object,\n};\n\nconst mapStateToProps = state => ({\n    itemFilters: sGetItemFiltersRoot(state),\n});\n\nexport default connect(mapStateToProps)(AppItem);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport i18n from '@dhis2/d2-i18n';\n\nimport { colors } from '@dhis2/ui';\nimport ItemHeader from '../ItemHeader';\n\nconst style = {\n    margin: '21px 28px',\n    fontSize: '14px',\n    lineHeight: '18px',\n    color: colors.grey600,\n};\n\nconst SpacerItem = props => {\n    return (\n        <>\n            <ItemHeader title={i18n.t('Spacer')} itemId={props.item.id} />\n            <p style={style}>\n                {i18n.t(\n                    'Use a spacer to create empty vertical space between other dashboard items.'\n                )}\n            </p>\n        </>\n    );\n};\n\nSpacerItem.propTypes = {\n    item: PropTypes.object,\n};\n\nexport default SpacerItem;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport VisualizationItem from './VisualizationItem/Item';\nimport MessagesItem from './MessagesItem/Item';\nimport NotSupportedItem from './NotSupportedItem/Item';\nimport ListItem from './ListItem/Item';\nimport TextItem from './TextItem/Item';\nimport AppItem from './AppItem/Item';\nimport SpacerItem from './SpacerItem/Item';\nimport {\n    APP,\n    VISUALIZATION,\n    REPORT_TABLE,\n    CHART,\n    MAP,\n    EVENT_CHART,\n    EVENT_REPORT,\n    MESSAGES,\n    REPORTS,\n    RESOURCES,\n    USERS,\n    TEXT,\n    SPACER,\n} from '../../modules/itemTypes';\nimport { DEFAULT_STATE_ITEM_FILTERS } from '../../reducers/itemFilters';\n\nconst getGridItem = type => {\n    switch (type) {\n        case VISUALIZATION:\n        case REPORT_TABLE:\n        case CHART:\n        case MAP:\n        case EVENT_CHART:\n        case EVENT_REPORT:\n            return VisualizationItem;\n        case MESSAGES:\n            return MessagesItem;\n        case REPORTS:\n        case RESOURCES:\n        case USERS:\n            return ListItem;\n        case TEXT:\n            return TextItem;\n        case SPACER:\n            return SpacerItem;\n        case APP:\n            return AppItem;\n        default:\n            return NotSupportedItem;\n    }\n};\n\nexport const Item = props => {\n    const GridItem = getGridItem(props.item.type);\n\n    return (\n        <GridItem\n            item={props.item}\n            editMode={props.editMode}\n            itemFilters={\n                props.editMode ? DEFAULT_STATE_ITEM_FILTERS : props.itemFilters\n            }\n            onToggleItemExpanded={props.onToggleItemExpanded}\n        />\n    );\n};\n\nItem.propTypes = {\n    editMode: PropTypes.bool,\n    item: PropTypes.object,\n    itemFilters: PropTypes.object,\n    onToggleItemExpanded: PropTypes.func,\n};\n","import React from 'react';\nimport { colors } from '@dhis2/ui';\nimport PropTypes from 'prop-types';\n\nexport const NoContentMessage = ({ text }) => (\n    <div\n        style={{\n            padding: '50px 10px',\n            textAlign: 'center',\n            fontSize: '15px',\n            fontWeight: 500,\n            color: colors.grey600,\n        }}\n    >\n        {text}\n    </div>\n);\n\nNoContentMessage.propTypes = {\n    text: PropTypes.string,\n};\n\nexport default NoContentMessage;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport debounce from 'lodash/debounce';\nimport pick from 'lodash/pick';\n\nconst defaultDebounceMs = 100;\nconst defaultBufferFactor = 0.25;\n\nclass ProgressiveLoadingContainer extends Component {\n    static propTypes = {\n        children: PropTypes.node.isRequired,\n        bufferFactor: PropTypes.number,\n        className: PropTypes.string,\n        debounceMs: PropTypes.number,\n        style: PropTypes.object,\n    };\n    static defaultProps = {\n        debounceMs: defaultDebounceMs,\n        bufferFactor: defaultBufferFactor,\n    };\n\n    state = {\n        shouldLoad: false,\n    };\n    containerRef = null;\n    shouldLoadHandler = null;\n\n    checkShouldLoad() {\n        const bufferPx = this.props.bufferFactor * window.innerHeight;\n\n        if (!this.containerRef) {\n            return;\n        }\n\n        const rect = this.containerRef.getBoundingClientRect();\n        if (\n            rect.bottom > -bufferPx &&\n            rect.top < window.innerHeight + bufferPx\n        ) {\n            this.setState({\n                shouldLoad: true,\n            });\n\n            this.removeHandler();\n        }\n    }\n\n    registerHandler() {\n        this.shouldLoadHandler = debounce(\n            () => this.checkShouldLoad(),\n            this.props.debounceMs\n        );\n\n        window.addEventListener('scroll', this.shouldLoadHandler);\n    }\n    removeHandler() {\n        window.removeEventListener('scroll', this.shouldLoadHandler);\n    }\n\n    componentDidMount() {\n        this.registerHandler();\n        this.checkShouldLoad();\n    }\n\n    componentWillUnmount() {\n        this.removeHandler();\n    }\n\n    render() {\n        const { children, className, style, ...props } = this.props;\n        const { shouldLoad } = this.state;\n\n        const eventProps = pick(props, [\n            'onMouseDown',\n            'onTouchStart',\n            'onMouseUp',\n            'onTouchEnd',\n        ]);\n\n        return (\n            <div\n                ref={ref => (this.containerRef = ref)}\n                style={style}\n                className={className}\n                {...eventProps}\n            >\n                {shouldLoad && children}\n            </div>\n        );\n    }\n}\n\nexport default ProgressiveLoadingContainer;\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport i18n from '@dhis2/d2-i18n';\nimport ReactGridLayout from 'react-grid-layout';\nimport { Layer, CenteredContent, CircularLoader } from '@dhis2/ui';\n\nimport {\n    acUpdateDashboardLayout,\n    acRemoveDashboardItem,\n} from '../../actions/editDashboard';\nimport { Item } from '../Item/Item';\nimport { resize as pluginResize } from '../Item/VisualizationItem/plugin';\nimport { isVisualizationType } from '../../modules/itemTypes';\nimport {\n    GRID_ROW_HEIGHT,\n    GRID_COMPACT_TYPE,\n    MARGIN,\n    getGridColumns,\n    hasShape,\n    onItemResize,\n} from './gridUtil';\nimport { orArray } from '../../modules/util';\n\nimport NoContentMessage from '../../widgets/NoContentMessage';\n\nimport 'react-grid-layout/css/styles.css';\nimport 'react-resizable/css/styles.css';\n\nimport './ItemGrid.css';\nimport { sGetSelectedId, sGetSelectedIsLoading } from '../../reducers/selected';\nimport {\n    sGetEditDashboardRoot,\n    sGetEditDashboardItems,\n} from '../../reducers/editDashboard';\nimport {\n    sGetDashboardById,\n    sGetDashboardItems,\n} from '../../reducers/dashboards';\nimport ProgressiveLoadingContainer from '../Item/ProgressiveLoadingContainer';\n\n// Component\n\nconst EXPANDED_HEIGHT = 17;\n// this is set in the .dashboard-item-content css\nexport const ITEM_CONTENT_PADDING_BOTTOM = 4;\n\nexport class ItemGrid extends Component {\n    state = {\n        expandedItems: {},\n    };\n\n    onToggleItemExpanded = clickedId => {\n        const isExpanded =\n            typeof this.state.expandedItems[clickedId] === 'boolean'\n                ? this.state.expandedItems[clickedId]\n                : false;\n\n        const expandedItems = { ...this.state.expandedItems };\n        expandedItems[clickedId] = !isExpanded;\n        this.setState({ expandedItems });\n    };\n\n    onRemoveItem = clickedId => {\n        this.props.acRemoveDashboardItem(clickedId);\n    };\n\n    componentWillReceiveProps(nextProps) {\n        if (nextProps.edit) {\n            this.setState({ expandedItems: {} });\n        }\n    }\n\n    onLayoutChange = newLayout => {\n        if (this.props.edit) {\n            this.props.acUpdateDashboardLayout(newLayout);\n        }\n    };\n\n    onResizeStop = (layout, oldItem, newItem) => {\n        onItemResize(newItem.i);\n\n        const dashboardItem = this.props.dashboardItems.find(\n            item => item.id === newItem.i\n        );\n\n        // call resize on the item component if it's a plugin type\n        if (dashboardItem && isVisualizationType(dashboardItem)) {\n            pluginResize(dashboardItem);\n        }\n    };\n\n    onRemoveItemWrapper = id => () => this.onRemoveItem(id);\n\n    adjustHeightForExpanded = dashboardItem => {\n        const expandedItem = this.state.expandedItems[dashboardItem.id];\n\n        if (expandedItem && expandedItem === true) {\n            return Object.assign({}, dashboardItem, {\n                h: dashboardItem.h + EXPANDED_HEIGHT,\n            });\n        }\n\n        return dashboardItem;\n    };\n\n    getItemComponent = item => {\n        const itemClassNames = [\n            item.type,\n            this.props.edit ? 'edit' : 'view',\n        ].join(' ');\n\n        return (\n            <ProgressiveLoadingContainer\n                key={item.i}\n                className={itemClassNames}\n            >\n                <Item\n                    item={item}\n                    editMode={this.props.edit}\n                    onToggleItemExpanded={this.onToggleItemExpanded}\n                />\n            </ProgressiveLoadingContainer>\n        );\n    };\n\n    getItemComponents = items => items.map(item => this.getItemComponent(item));\n\n    render() {\n        const { edit, isLoading, dashboardItems } = this.props;\n\n        if (!isLoading && !dashboardItems.length) {\n            return (\n                <NoContentMessage\n                    text={i18n.t('There are no items on this dashboard')}\n                />\n            );\n        }\n\n        const items = edit\n            ? dashboardItems\n            : dashboardItems.map(this.adjustHeightForExpanded);\n\n        return (\n            <div className=\"grid-wrapper\">\n                {isLoading ? (\n                    <Layer translucent>\n                        <CenteredContent>\n                            <CircularLoader />\n                        </CenteredContent>\n                    </Layer>\n                ) : null}\n                <ReactGridLayout\n                    onLayoutChange={this.onLayoutChange}\n                    onResizeStop={this.onResizeStop}\n                    className=\"layout\"\n                    layout={items}\n                    margin={MARGIN}\n                    cols={getGridColumns()}\n                    rowHeight={GRID_ROW_HEIGHT}\n                    width={window.innerWidth}\n                    compactType={GRID_COMPACT_TYPE}\n                    isDraggable={edit}\n                    isResizable={edit}\n                    draggableCancel=\"input,textarea\"\n                >\n                    {this.getItemComponents(items)}\n                </ReactGridLayout>\n            </div>\n        );\n    }\n}\n\nItemGrid.propTypes = {\n    acRemoveDashboardItem: PropTypes.func,\n    acUpdateDashboardLayout: PropTypes.func,\n    dashboardItems: PropTypes.array,\n    edit: PropTypes.bool,\n    isLoading: PropTypes.bool,\n};\n\nItemGrid.defaultProps = {\n    dashboardItems: [],\n};\n\n// Container\n\nconst mapStateToProps = (state, ownProps) => {\n    const selectedDashboard = ownProps.edit\n        ? sGetEditDashboardRoot(state)\n        : sGetDashboardById(state, sGetSelectedId(state));\n\n    const dashboardItems = ownProps.edit\n        ? sGetEditDashboardItems(state)\n        : sGetDashboardItems(state);\n\n    return {\n        isLoading: sGetSelectedIsLoading(state) || !selectedDashboard,\n        dashboardItems,\n    };\n};\n\nconst mapDispatchToProps = {\n    acUpdateDashboardLayout,\n    acRemoveDashboardItem,\n};\n\nconst mergeProps = (stateProps, dispatchProps, ownProps) => {\n    const validItems = orArray(stateProps.dashboardItems).filter(hasShape);\n\n    return {\n        ...dispatchProps,\n        edit: ownProps.edit,\n        isLoading: stateProps.isLoading,\n        dashboardItems: validItems,\n        onItemResize,\n    };\n};\n\nexport default connect(\n    mapStateToProps,\n    mapDispatchToProps,\n    mergeProps\n)(ItemGrid);\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nimport i18n from '@dhis2/d2-i18n';\n\nimport { colors } from '@dhis2/ui';\n\nconst styles = {\n    badgeContainer: {\n        margin: '2px',\n        padding: '0 16px',\n        borderRadius: '4px',\n        color: colors.white,\n        backgroundColor: '#212934',\n        height: 36,\n        display: 'flex',\n        alignItems: 'center',\n    },\n    badge: {\n        fontSize: '13px',\n        cursor: 'pointer',\n        whiteSpace: 'nowrap',\n    },\n    badgeRemove: {\n        fontSize: '12px',\n        textDecoration: 'underline',\n        marginLeft: '24px',\n        cursor: 'pointer',\n    },\n};\n\nclass FilterBadge extends Component {\n    onClick = id => () => this.props.onClick(id);\n    onRemove = id => () => this.props.onRemove(id);\n\n    render() {\n        const { data } = this.props;\n\n        return (\n            <div style={styles.badgeContainer}>\n                <span style={styles.badge} onClick={this.onClick(data.id)}>\n                    {`${data.name}: ${\n                        data.values.length > 1\n                            ? i18n.t('{{count}} selected', {\n                                  count: data.values.length,\n                              })\n                            : data.values[0].name\n                    }`}\n                </span>\n                <span\n                    style={styles.badgeRemove}\n                    onClick={this.onRemove(data.id)}\n                >\n                    {i18n.t('Remove')}\n                </span>\n            </div>\n        );\n    }\n}\n\nFilterBadge.propTypes = {\n    data: PropTypes.object.isRequired,\n    onClick: PropTypes.func.isRequired,\n    onRemove: PropTypes.func.isRequired,\n};\n\nFilterBadge.defaultProps = {\n    onClick: Function.prototype,\n    onRemove: Function.prototype,\n};\n\nexport default FilterBadge;\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { createSelector } from 'reselect';\n\nimport { sGetDimensions } from '../../reducers/dimensions';\nimport { sGetItemFiltersRoot } from '../../reducers/itemFilters';\nimport { sGetControlBarUserRows } from '../../reducers/controlBar';\nimport { getTopOffset } from '../ControlBar/controlBarDimensions';\nimport { acRemoveItemFilter } from '../../actions/itemFilters';\nimport { acRemoveEditItemFilter } from '../../actions/editItemFilters';\nimport { acSetActiveModalDimension } from '../../actions/activeModalDimension';\n\nimport FilterBadge from './FilterBadge';\n\nimport classes from './styles/FilterBar.module.css';\n\nexport class FilterBar extends Component {\n    onBadgeRemove = id => {\n        this.props.removeItemFilter(id);\n        this.props.removeEditItemFilter(id);\n    };\n\n    onBadgeClick = id => {\n        this.props.setActiveModalDimension({\n            id,\n            name: this.props.filters.find(item => item.id === id).name,\n        });\n    };\n\n    render() {\n        const { filters, userRows } = this.props;\n        const top = getTopOffset(userRows) + 10;\n\n        return filters.length ? (\n            <div className={classes.bar} style={{ top }}>\n                {filters.map(filter => (\n                    <FilterBadge\n                        key={filter.id}\n                        data={filter}\n                        onClick={this.onBadgeClick}\n                        onRemove={this.onBadgeRemove}\n                    />\n                ))}\n            </div>\n        ) : null;\n    }\n}\n\nFilterBar.propTypes = {\n    filters: PropTypes.array.isRequired,\n    removeEditItemFilter: PropTypes.func.isRequired,\n    removeItemFilter: PropTypes.func.isRequired,\n    setActiveModalDimension: PropTypes.func,\n    userRows: PropTypes.number,\n};\n\nFilterBar.defaultProps = {\n    filters: [],\n    removeItemFIlter: Function.prototype,\n    removeEditItemFilter: Function.prototype,\n};\n\n// simplify the filters structure to:\n// [{ id: 'pe', name: 'Period', values: [{ id: 2019: name: '2019' }, {id: 'LAST_MONTH', name: 'Last month' }]}, ...]\nconst filtersSelector = createSelector(\n    [sGetItemFiltersRoot, sGetDimensions],\n    (filters, dimensions) =>\n        Object.keys(filters).reduce((arr, id) => {\n            arr.push({\n                id: id,\n                name: dimensions.find(dimension => dimension.id === id).name,\n                values: filters[id].map(value => ({\n                    id: value.id,\n                    name: value.displayName || value.name,\n                })),\n            });\n\n            return arr;\n        }, [])\n);\n\nconst mapStateToProps = state => ({\n    filters: filtersSelector(state),\n    userRows: sGetControlBarUserRows(state),\n});\n\nexport default connect(\n    mapStateToProps,\n    {\n        setActiveModalDimension: acSetActiveModalDimension,\n        removeItemFilter: acRemoveItemFilter,\n        removeEditItemFilter: acRemoveEditItemFilter,\n    }\n)(FilterBar);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport TitleBar from '../TitleBar/TitleBar';\nimport ItemGrid from '../ItemGrid/ItemGrid';\nimport FilterBar from '../FilterBar/FilterBar';\n\nexport const DashboardContent = props => (\n    <>\n        <TitleBar edit={props.editMode} />\n        <FilterBar />\n        <ItemGrid edit={props.editMode} />\n    </>\n);\n\nDashboardContent.propTypes = {\n    editMode: PropTypes.bool,\n};\n\nexport default DashboardContent;\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport isEmpty from 'lodash/isEmpty';\nimport i18n from '@dhis2/d2-i18n';\nimport PropTypes from 'prop-types';\n\nimport {\n    sGetAllDashboards,\n    sDashboardsIsFetching,\n} from '../../reducers/dashboards';\nimport { sGetSelectedId } from '../../reducers/selected';\nimport DashboardsBar from '../ControlBar/DashboardsBar';\nimport DashboardVerticalOffset from './DashboardVerticalOffset';\nimport DashboardContent from './DashboardContent';\nimport NoContentMessage from '../../widgets/NoContentMessage';\n\nexport const Content = ({ hasDashboardContent, dashboardsIsEmpty }) => {\n    const msg = dashboardsIsEmpty\n        ? i18n.t(\n              'No dashboards found. Use the + button to create a new dashboard.'\n          )\n        : i18n.t('Requested dashboard not found');\n\n    return hasDashboardContent ? (\n        <DashboardContent editMode={false} />\n    ) : (\n        <NoContentMessage text={msg} />\n    );\n};\n\nContent.propTypes = {\n    dashboardsIsEmpty: PropTypes.bool,\n    hasDashboardContent: PropTypes.bool,\n};\n\nexport const ViewDashboard = ({ id, dashboardsIsEmpty, dashboardsLoaded }) => {\n    const hasDashboardContent = id && !dashboardsIsEmpty;\n    const contentNotReady = !dashboardsLoaded || id === null;\n\n    return (\n        <>\n            <DashboardsBar />\n            <DashboardVerticalOffset />\n            <div className=\"dashboard-wrapper\">\n                {contentNotReady ? null : (\n                    <Content\n                        hasDashboardContent={hasDashboardContent}\n                        dashboardsIsEmpty={dashboardsIsEmpty}\n                    />\n                )}\n            </div>\n        </>\n    );\n};\n\nViewDashboard.propTypes = {\n    dashboardsIsEmpty: PropTypes.bool,\n    dashboardsLoaded: PropTypes.bool,\n    id: PropTypes.string,\n};\n\nconst mapStateToProps = state => {\n    const dashboards = sGetAllDashboards(state);\n\n    return {\n        id: sGetSelectedId(state),\n        dashboardsIsEmpty: isEmpty(dashboards),\n        dashboardsLoaded: !sDashboardsIsFetching(state),\n    };\n};\n\nexport default connect(mapStateToProps)(ViewDashboard);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport i18n from '@dhis2/d2-i18n';\nimport {\n    Button,\n    Modal,\n    ModalContent,\n    ModalActions,\n    ButtonStrip,\n    ModalTitle,\n} from '@dhis2/ui';\n\nimport classes from './styles/ConfirmDeleteDialog.module.css';\n\nexport const ConfirmDeleteDialog = ({\n    dashboardName,\n    onDeleteConfirmed,\n    onContinueEditing,\n    open,\n}) => {\n    const actions = [\n        <Button key=\"cancel\" secondary onClick={onContinueEditing}>\n            {i18n.t('Cancel')}\n        </Button>,\n        <Button key=\"delete\" destructive onClick={onDeleteConfirmed}>\n            {i18n.t('Delete')}\n        </Button>,\n    ];\n\n    return (\n        open && (\n            <Modal onClose={onContinueEditing} small position=\"middle\">\n                <ModalTitle>{i18n.t('Delete dashboard')}</ModalTitle>\n                <ModalContent>\n                    <span className={classes.content}>\n                        {i18n.t(\n                            'Deleting dashboard \"{{ dashboardName }}\" will remove it for all users. This action cannot be undone. Are you sure you want to permanently delete this dashboard?',\n                            { dashboardName }\n                        )}\n                    </span>\n                </ModalContent>\n                <ModalActions>\n                    <ButtonStrip>{actions}</ButtonStrip>\n                </ModalActions>\n            </Modal>\n        )\n    );\n};\n\nConfirmDeleteDialog.propTypes = {\n    dashboardName: PropTypes.string,\n    open: PropTypes.bool,\n    onContinueEditing: PropTypes.func,\n    onDeleteConfirmed: PropTypes.func,\n};\n\nexport default ConfirmDeleteDialog;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { Redirect } from 'react-router-dom';\nimport i18n from '@dhis2/d2-i18n';\nimport ControlBar from './ControlBar';\nimport TranslationDialog from '@dhis2/d2-ui-translation-dialog';\nimport { Button } from '@dhis2/ui';\n\nimport ConfirmDeleteDialog from './ConfirmDeleteDialog';\nimport {\n    tSaveDashboard,\n    acClearEditDashboard,\n} from '../../actions/editDashboard';\nimport {\n    tDeleteDashboard,\n    acSetDashboardDisplayName,\n} from '../../actions/dashboards';\nimport {\n    sGetEditDashboardRoot,\n    sGetIsNewDashboard,\n} from '../../reducers/editDashboard';\nimport {\n    CONTROL_BAR_ROW_HEIGHT,\n    MIN_ROW_COUNT,\n    getControlBarHeight,\n} from './controlBarDimensions';\nimport { apiFetchDashboard } from '../../api/dashboards';\n\nimport classes from './styles/DashboardsBar.module.css';\n\nconst buttonBarStyle = {\n    height: CONTROL_BAR_ROW_HEIGHT,\n    paddingTop: '15px',\n    marginLeft: '15px',\n    marginRight: '15px',\n};\n\nexport class EditBar extends Component {\n    state = {\n        translationDialogIsOpen: false,\n        dashboardModel: undefined,\n        confirmDeleteDialogOpen: false,\n        redirectUrl: undefined,\n    };\n\n    onConfirmDelete = () => {\n        this.setState({ confirmDeleteDialogOpen: true });\n    };\n\n    onSave = () => {\n        this.props.onSave().then(newId => {\n            this.setState({ redirectUrl: `/${newId}` });\n        });\n    };\n\n    onDiscard = () => {\n        this.props.onDiscardChanges();\n        const redirectUrl = this.props.dashboardId\n            ? `/${this.props.dashboardId}`\n            : '/';\n        this.setState({ redirectUrl });\n    };\n\n    onContinueEditing = () => {\n        this.setState({ confirmDeleteDialogOpen: false });\n    };\n\n    onDeleteConfirmed = () => {\n        this.setState({ confirmDeleteDialogOpen: false });\n        this.props.onDelete(this.props.dashboardId).then(() => {\n            this.setState({ redirectUrl: '/' });\n        });\n    };\n\n    onTranslationsSaved = async translations => {\n        if (translations && translations.length) {\n            const dbLocale = await this.context.d2.currentUser.userSettings.get(\n                'keyDbLocale'\n            );\n\n            const translation = translations.find(\n                t => t.locale === dbLocale && t.property === 'NAME'\n            );\n\n            if (translation && translation.value) {\n                this.props.onTranslate(\n                    this.props.dashboardId,\n                    translation.value\n                );\n            }\n        }\n    };\n\n    fetchDashboardModel = () => {\n        if (this.props.dashboardId && !this.state.dashboardModel) {\n            apiFetchDashboard(this.props.dashboardId).then(dashboardModel =>\n                this.setState({ dashboardModel })\n            );\n        }\n    };\n\n    componentDidMount() {\n        this.fetchDashboardModel();\n    }\n\n    componentDidUpdate() {\n        this.fetchDashboardModel();\n    }\n\n    toggleTranslationDialog = () => {\n        this.setState({\n            translationDialogIsOpen: !this.state.translationDialogIsOpen,\n        });\n    };\n\n    confirmDeleteDialog = () =>\n        this.props.deleteAccess && this.props.dashboardId ? (\n            <ConfirmDeleteDialog\n                dashboardName={this.props.dashboardName}\n                onDeleteConfirmed={this.onDeleteConfirmed}\n                onContinueEditing={this.onContinueEditing}\n                open={this.state.confirmDeleteDialogOpen}\n            />\n        ) : null;\n\n    translationDialog = () =>\n        this.state.dashboardModel && this.state.dashboardModel.id ? (\n            <TranslationDialog\n                className=\"translation-dialog\"\n                d2={this.context.d2}\n                open={this.state.translationDialogIsOpen}\n                onRequestClose={this.toggleTranslationDialog}\n                objectToTranslate={this.state.dashboardModel}\n                fieldsToTranslate={['name', 'description']}\n                // TODO handle messages in snackbar\n                onTranslationSaved={this.onTranslationsSaved}\n                onTranslationError={err =>\n                    console.log('translation update error', err)\n                }\n            />\n        ) : null;\n\n    render() {\n        if (this.state.redirectUrl) {\n            return <Redirect to={this.state.redirectUrl} />;\n        }\n\n        const { dashboardId, deleteAccess, updateAccess } = this.props;\n        const controlBarHeight = getControlBarHeight(MIN_ROW_COUNT);\n\n        const discardBtnText = updateAccess\n            ? i18n.t('Exit without saving')\n            : i18n.t('Go to dashboards');\n\n        return (\n            <>\n                <ControlBar height={controlBarHeight} editMode={true}>\n                    <div style={buttonBarStyle}>\n                        {updateAccess ? (\n                            <div className={classes.leftControls}>\n                                <span style={{ marginRight: '15px' }}>\n                                    <Button primary onClick={this.onSave}>\n                                        {i18n.t('Save changes')}\n                                    </Button>\n                                </span>\n\n                                {dashboardId ? (\n                                    <span style={{ marginRight: '15px' }}>\n                                        <Button\n                                            onClick={\n                                                this.toggleTranslationDialog\n                                            }\n                                        >\n                                            {i18n.t('Translate')}\n                                        </Button>\n                                    </span>\n                                ) : null}\n                                {dashboardId && deleteAccess ? (\n                                    <Button onClick={this.onConfirmDelete}>\n                                        {i18n.t('Delete')}\n                                    </Button>\n                                ) : null}\n                            </div>\n                        ) : null}\n\n                        <div className={classes.rightControls}>\n                            <Button secondary onClick={this.onDiscard}>\n                                {discardBtnText}\n                            </Button>\n                        </div>\n                    </div>\n                </ControlBar>\n                {this.translationDialog()}\n                {this.confirmDeleteDialog()}\n            </>\n        );\n    }\n}\n\nEditBar.propTypes = {\n    dashboardId: PropTypes.string,\n    dashboardName: PropTypes.string,\n    deleteAccess: PropTypes.bool,\n    updateAccess: PropTypes.bool,\n    onDelete: PropTypes.func,\n    onDiscardChanges: PropTypes.func,\n    onSave: PropTypes.func,\n    onTranslate: PropTypes.func,\n};\n\nEditBar.contextTypes = {\n    d2: PropTypes.object,\n};\n\nconst mapStateToProps = state => {\n    const dashboard = sGetEditDashboardRoot(state);\n\n    let deleteAccess;\n    let updateAccess;\n    if (sGetIsNewDashboard(state)) {\n        deleteAccess = true;\n        updateAccess = true;\n    } else {\n        updateAccess = dashboard.access ? dashboard.access.update : false;\n        deleteAccess = dashboard.access ? dashboard.access.delete : false;\n    }\n\n    return {\n        dashboardId: dashboard.id,\n        dashboardName: dashboard.name,\n        deleteAccess,\n        updateAccess,\n    };\n};\n\nconst mapDispatchToProps = dispatch => ({\n    onSave: () => dispatch(tSaveDashboard()).then(id => id),\n    onDelete: id => dispatch(tDeleteDashboard(id)),\n    onDiscardChanges: () => dispatch(acClearEditDashboard()),\n    onTranslate: (id, value) => dispatch(acSetDashboardDisplayName(id, value)),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(EditBar);\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport i18n from '@dhis2/d2-i18n';\nimport PropTypes from 'prop-types';\n\nimport { acSetEditDashboard } from '../../actions/editDashboard';\nimport { sGetSelectedId } from '../../reducers/selected';\nimport {\n    sGetDashboardById,\n    sGetDashboardItems,\n    sDashboardsIsFetching,\n} from '../../reducers/dashboards';\nimport DashboardVerticalOffset from './DashboardVerticalOffset';\nimport DashboardContent from './DashboardContent';\nimport EditBar from '../ControlBar/EditBar';\nimport NoContentMessage from '../../widgets/NoContentMessage';\n\nexport const Content = ({ updateAccess }) => {\n    return updateAccess ? (\n        <DashboardContent editMode={true} />\n    ) : (\n        <NoContentMessage text={i18n.t('No access')} />\n    );\n};\n\nContent.propTypes = {\n    updateAccess: PropTypes.bool,\n};\nexport class EditDashboard extends Component {\n    state = {\n        initialized: false,\n    };\n\n    initEditDashboard = () => {\n        if (this.props.dashboard) {\n            this.setState({ initialized: true });\n            this.props.setEditDashboard(this.props.dashboard, this.props.items);\n        }\n    };\n\n    componentDidMount() {\n        this.initEditDashboard();\n    }\n\n    componentDidUpdate() {\n        if (!this.state.initialized) {\n            this.initEditDashboard();\n        }\n    }\n\n    getDashboardContent = () => {\n        const contentNotReady =\n            !this.props.dashboardsLoaded || this.props.id === null;\n\n        return (\n            <div className=\"dashboard-wrapper\">\n                {contentNotReady ? null : (\n                    <Content updateAccess={this.props.updateAccess} />\n                )}\n            </div>\n        );\n    };\n\n    render() {\n        return (\n            <>\n                <EditBar />\n                <DashboardVerticalOffset editMode={true} />\n                {this.getDashboardContent()}\n            </>\n        );\n    }\n}\n\nEditDashboard.propTypes = {\n    dashboard: PropTypes.object,\n    dashboardsLoaded: PropTypes.bool,\n    id: PropTypes.string,\n    items: PropTypes.array,\n    setEditDashboard: PropTypes.func,\n    updateAccess: PropTypes.bool,\n};\n\nconst mapStateToProps = state => {\n    const id = sGetSelectedId(state);\n    const dashboard = id ? sGetDashboardById(state, id) : null;\n\n    const updateAccess =\n        dashboard && dashboard.access ? dashboard.access.update : false;\n\n    return {\n        dashboard,\n        id,\n        updateAccess,\n        items: sGetDashboardItems(state),\n        dashboardsLoaded: !sDashboardsIsFetching(state),\n    };\n};\n\nexport default connect(\n    mapStateToProps,\n    {\n        setEditDashboard: acSetEditDashboard,\n    }\n)(EditDashboard);\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\n\nimport { acSetEditNewDashboard } from '../../actions/editDashboard';\nimport DashboardVerticalOffset from './DashboardVerticalOffset';\nimport EditBar from '../ControlBar/EditBar';\nimport DashboardContent from './DashboardContent';\n\nclass NewDashboard extends Component {\n    componentDidMount() {\n        this.props.setNewDashboard();\n    }\n\n    render() {\n        return (\n            <>\n                <EditBar />\n                <DashboardVerticalOffset editMode={true} />\n                <div className=\"dashboard-wrapper\">\n                    <DashboardContent editMode={true} />\n                </div>\n            </>\n        );\n    }\n}\n\nNewDashboard.propTypes = {\n    setNewDashboard: PropTypes.func,\n};\n\nexport default connect(\n    null,\n    {\n        setNewDashboard: acSetEditNewDashboard,\n    }\n)(NewDashboard);\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\n\nimport { tSelectDashboard } from '../../actions/dashboards';\nimport { sDashboardsIsFetching } from '../../reducers/dashboards';\nimport { EDIT, NEW } from './dashboardModes';\nimport ViewDashboard from './ViewDashboard';\nimport EditDashboard from './EditDashboard';\nimport NewDashboard from './NewDashboard';\n\nclass Dashboard extends Component {\n    setDashboard = () => {\n        if (this.props.dashboardsLoaded) {\n            const id = this.props.match.params.dashboardId || null;\n\n            this.props.selectDashboard(id);\n\n            this.scrollToTop();\n        }\n    };\n\n    scrollToTop = () => {\n        window.scrollTo(0, 0);\n    };\n\n    componentDidMount() {\n        this.setDashboard();\n    }\n\n    componentDidUpdate() {\n        this.setDashboard();\n    }\n\n    render() {\n        switch (this.props.mode) {\n            case EDIT:\n                return <EditDashboard />;\n            case NEW:\n                return <NewDashboard />;\n            default:\n                return <ViewDashboard />;\n        }\n    }\n}\n\nDashboard.propTypes = {\n    dashboardsLoaded: PropTypes.bool,\n    match: PropTypes.object,\n    mode: PropTypes.string,\n    selectDashboard: PropTypes.func,\n};\n\nconst mapStateToProps = state => {\n    return { dashboardsLoaded: !sDashboardsIsFetching(state) };\n};\n\nexport default connect(\n    mapStateToProps,\n    {\n        selectDashboard: tSelectDashboard,\n    }\n)(Dashboard);\n","export const EDIT = 'edit';\nexport const NEW = 'new';\nexport const VIEW = 'view';\n","import React, { Component } from 'react';\nimport { HashRouter as Router, Route, Switch } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport i18n from '@dhis2/d2-i18n';\nimport { HeaderBar, CssVariables } from '@dhis2/ui';\n\nimport { EDIT, VIEW, NEW } from './Dashboard/dashboardModes';\nimport { acReceivedUser } from '../actions/user';\nimport { tFetchDashboards } from '../actions/dashboards';\nimport { tSetControlBarRows } from '../actions/controlBar';\nimport { tSetDimensions } from '../actions/dimensions';\nimport Dashboard from './Dashboard/Dashboard';\nimport SnackbarMessage from './SnackbarMessage/SnackbarMessage';\n\nimport 'typeface-roboto';\nimport './App.css';\n\nexport class App extends Component {\n    componentDidMount() {\n        this.props.setCurrentUser(this.props.d2.currentUser);\n        this.props.fetchDashboards();\n        this.props.setControlBarRows();\n        this.props.setDimensions(this.props.d2);\n    }\n\n    getChildContext() {\n        return { baseUrl: this.props.baseUrl, i18n, d2: this.props.d2 };\n    }\n\n    render() {\n        return (\n            <>\n                <CssVariables colors spacers />\n                <div className=\"app-wrapper\">\n                    <div className=\"dashboard-header-bar\">\n                        <HeaderBar appName={i18n.t('Dashboard')} />\n                    </div>\n                    <Router>\n                        <Switch>\n                            <Route\n                                exact\n                                path=\"/\"\n                                render={props => (\n                                    <Dashboard {...props} mode={VIEW} />\n                                )}\n                            />\n                            <Route\n                                exact\n                                path=\"/new\"\n                                render={props => (\n                                    <Dashboard {...props} mode={NEW} />\n                                )}\n                            />\n                            <Route\n                                exact\n                                path=\"/:dashboardId\"\n                                render={props => (\n                                    <Dashboard {...props} mode={VIEW} />\n                                )}\n                            />\n                            <Route\n                                exact\n                                path=\"/:dashboardId/edit\"\n                                render={props => (\n                                    <Dashboard {...props} mode={EDIT} />\n                                )}\n                            />\n                        </Switch>\n                    </Router>\n                    <SnackbarMessage />\n                </div>\n            </>\n        );\n    }\n}\n\nApp.propTypes = {\n    fetchDashboards: PropTypes.func.isRequired,\n    setControlBarRows: PropTypes.func.isRequired,\n    setCurrentUser: PropTypes.func.isRequired,\n    setDimensions: PropTypes.func.isRequired,\n    baseUrl: PropTypes.string,\n    d2: PropTypes.object,\n};\n\nApp.childContextTypes = {\n    baseUrl: PropTypes.string,\n    i18n: PropTypes.object,\n    d2: PropTypes.object,\n};\n\nconst mapDispatchToProps = dispatch => {\n    return {\n        setCurrentUser: currentUser => dispatch(acReceivedUser(currentUser)),\n        fetchDashboards: () => dispatch(tFetchDashboards()),\n        setControlBarRows: () => dispatch(tSetControlBarRows()),\n        setDimensions: d2 => dispatch(tSetDimensions(d2)),\n    };\n};\n\nexport default connect(null, mapDispatchToProps)(App);\n","import { RECEIVED_USER } from '../reducers/user';\n\nexport const acReceivedUser = value => ({\n    type: RECEIVED_USER,\n    value,\n});\n","//------------------------------------------------------------------------------\n// <auto-generated>\n    // This code was generated by d2-i18n-generate.\n    //\n    // Changes to this file may cause incorrect behavior and will be lost if\n    // the code is regenerated.\n    // </auto-generated>\n//------------------------------------------------------------------------------\nimport i18n from '@dhis2/d2-i18n';\nimport moment from 'moment';\nimport 'moment/locale/ar';\nimport 'moment/locale/es';\nimport 'moment/locale/fr';\nimport 'moment/locale/lo';\nimport 'moment/locale/nb';\nimport 'moment/locale/pt';\nimport 'moment/locale/ru';\nimport 'moment/locale/sv';\nimport 'moment/locale/tg';\nimport 'moment/locale/uk';\nimport 'moment/locale/ur';\nimport 'moment/locale/vi';\nimport 'moment/locale/zh-cn';\n\nimport arTranslations from './ar/translations.json';\nimport ar_IQTranslations from './ar_IQ/translations.json';\nimport daTranslations from './da/translations.json';\nimport enTranslations from './en/translations.json';\nimport esTranslations from './es/translations.json';\nimport frTranslations from './fr/translations.json';\nimport idTranslations from './id/translations.json';\nimport kmTranslations from './km/translations.json';\nimport loTranslations from './lo/translations.json';\nimport myTranslations from './my/translations.json';\nimport nbTranslations from './nb/translations.json';\nimport prsTranslations from './prs/translations.json';\nimport psTranslations from './ps/translations.json';\nimport ptTranslations from './pt/translations.json';\nimport pt_BRTranslations from './pt_BR/translations.json';\nimport ruTranslations from './ru/translations.json';\nimport svTranslations from './sv/translations.json';\nimport tetTranslations from './tet/translations.json';\nimport tgTranslations from './tg/translations.json';\nimport ukTranslations from './uk/translations.json';\nimport urTranslations from './ur/translations.json';\nimport viTranslations from './vi/translations.json';\nimport zhTranslations from './zh/translations.json';\nimport zh_CNTranslations from './zh_CN/translations.json';\n\nconst namespace = 'dashboards-app';\nmoment.locale('en');\n\ni18n.addResources('ar', namespace, arTranslations);\ni18n.addResources('ar_IQ', namespace, ar_IQTranslations);\ni18n.addResources('da', namespace, daTranslations);\ni18n.addResources('en', namespace, enTranslations);\ni18n.addResources('es', namespace, esTranslations);\ni18n.addResources('fr', namespace, frTranslations);\ni18n.addResources('id', namespace, idTranslations);\ni18n.addResources('km', namespace, kmTranslations);\ni18n.addResources('lo', namespace, loTranslations);\ni18n.addResources('my', namespace, myTranslations);\ni18n.addResources('nb', namespace, nbTranslations);\ni18n.addResources('prs', namespace, prsTranslations);\ni18n.addResources('ps', namespace, psTranslations);\ni18n.addResources('pt', namespace, ptTranslations);\ni18n.addResources('pt_BR', namespace, pt_BRTranslations);\ni18n.addResources('ru', namespace, ruTranslations);\ni18n.addResources('sv', namespace, svTranslations);\ni18n.addResources('tet', namespace, tetTranslations);\ni18n.addResources('tg', namespace, tgTranslations);\ni18n.addResources('uk', namespace, ukTranslations);\ni18n.addResources('ur', namespace, urTranslations);\ni18n.addResources('vi', namespace, viTranslations);\ni18n.addResources('zh', namespace, zhTranslations);\ni18n.addResources('zh_CN', namespace, zh_CNTranslations);\n\ni18n.setDefaultNamespace(namespace);\ni18n.changeLanguage('en');\n\nexport default i18n;\n","/** @module reducers/selected */\nimport { validateReducer } from '../modules/util';\n\nexport const SET_STYLE = 'SET_STYLE';\n\nexport const DEFAULT_STATE_STYLE = 'LIST';\n\n/**\n * Reducer functions that computes and returns the new state based on the given action\n * @function\n * @param {Object} state The current state\n * @param {Object} action The action to be evaluated\n */\nconst style = (state = DEFAULT_STATE_STYLE, action) => {\n    switch (action.type) {\n        case SET_STYLE:\n            return validateReducer(action.value, DEFAULT_STATE_STYLE);\n        default:\n            return state;\n    }\n};\n\nexport default style;\n\n/**\n * Selectors that point to specific props in the state object\n * @function\n * @param {Object} state\n * @returns {Object}\n */\nexport const sGetStyleRoot = state => state.style;\n","import { combineReducers } from 'redux';\nimport arraySort from 'd2-utilizr/lib/arraySort';\n\nimport dashboards, { sGetDashboardsRoot } from './dashboards';\nimport selected from './selected';\nimport dashboardsFilter, {\n    ownerData,\n    sGetFilterName,\n    sGetFilterOrder,\n    sGetFilterOwner,\n} from './dashboardsFilter';\nimport controlBar from './controlBar';\nimport visualizations from './visualizations';\nimport editDashboard from './editDashboard';\nimport messages from './messages';\nimport user from './user';\nimport snackbar from './snackbar';\nimport itemFilters from './itemFilters';\nimport editItemFilters from './editItemFilters';\nimport style from './style';\nimport dimensions from './dimensions';\nimport settings from './settings';\nimport activeModalDimension from './activeModalDimension';\n\nconst USER = 'system';\n\n// Reducers\n\nexport default combineReducers({\n    dashboards,\n    selected,\n    dashboardsFilter,\n    controlBar,\n    visualizations,\n    messages,\n    user,\n    editDashboard,\n    itemFilters,\n    editItemFilters,\n    style,\n    snackbar,\n    dimensions,\n    settings,\n    activeModalDimension,\n});\n\n// Map constants to data\nconst mapConstToData = {\n    NAME: 'name',\n    ITEMS: 'numberOfItems',\n    CREATED: 'created',\n    OWNER: 'owner',\n};\n\n// Selectors\n\n// Filter dashboards by name\nexport const sFilterDashboardsByName = (dashboards, filter) =>\n    dashboards.filter(d =>\n        d.displayName.toLowerCase().includes(filter.toLowerCase())\n    );\n\n// Filter dashboards by owner, TODO FIXME\nexport const sFilterDashboardsByOwner = (dashboards, filter) => {\n    const ME = ownerData[1]; // TODO\n    const OTHERS = ownerData[2]; // TODO\n\n    switch (filter) {\n        case ME:\n            return dashboards.filter(d => d.owner === USER);\n        case OTHERS:\n            return dashboards.filter(d => d.owner !== USER);\n        default:\n            return dashboards;\n    }\n};\n\n// Filter dashboards by order\nexport const sFilterDashboardsByOrder = (dashboards, filter) => {\n    const filterValues = filter.split(':');\n\n    const key = filterValues[0];\n    const direction = filterValues[1];\n\n    return arraySort(dashboards, direction, mapConstToData[key]);\n};\n\n// Selectors dependency level 2\n\n// Get filtered dashboards\nexport const sGetFilteredDashboards = state => {\n    const dashboards = sGetDashboardsRoot(state);\n\n    const nameFilter = sGetFilterName(state);\n    const ownerFilter = sGetFilterOwner(state);\n    const orderFilter = sGetFilterOrder(state);\n\n    return sFilterDashboardsByOrder(\n        sFilterDashboardsByName(\n            sFilterDashboardsByOwner(dashboards, ownerFilter),\n            nameFilter\n        ),\n        orderFilter\n    );\n};\n","import { createStore, applyMiddleware, compose } from 'redux';\nimport { createLogger } from 'redux-logger';\nimport thunk from 'redux-thunk';\nimport reducer from './reducers';\n\nconst configureStore = () => {\n    const middleware = [thunk];\n\n    // Enable Redux devtools if extension is installed instead of redux-logger\n    const composeEnhancers =\n        window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\n    if (\n        !window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ &&\n        process.env.NODE_ENV !== 'production'\n    ) {\n        middleware.push(createLogger());\n    }\n\n    return createStore(\n        reducer,\n        composeEnhancers(applyMiddleware(...middleware))\n    );\n};\n\nexport default configureStore;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport { MuiThemeProvider, createMuiTheme } from '@material-ui/core/styles';\nimport { init as d2Init, config, getManifest, getUserSettings } from 'd2';\nimport dhis2theme from '@dhis2/d2-ui-core/theme/mui3.theme';\n\nimport { Provider as RuntimeProvider } from '@dhis2/app-runtime';\nimport { CssReset } from '@dhis2/ui';\n\nimport App from './components/App';\nimport './index.css';\nimport i18n from './locales';\nimport configureStore from './configureStore';\n\nconst muiTheme = () => createMuiTheme(dhis2theme);\n\nconst configI18n = userSettings => {\n    const uiLocale = userSettings.keyUiLocale;\n\n    if (uiLocale && uiLocale !== 'en') {\n        config.i18n.sources.add(`./i18n/i18n_module_${uiLocale}.properties`);\n    }\n\n    config.i18n.sources.add('./i18n/i18n_module_en.properties');\n    i18n.changeLanguage(uiLocale);\n};\n\nconst init = async () => {\n    const manifest = await getManifest('./manifest.webapp');\n\n    // log app info\n    console.info(\n        `Dashboards app, v${manifest.version}, ${manifest.manifest_generated_at}`\n    );\n\n    const isProd = process.env.NODE_ENV === 'production';\n\n    if (\n        !isProd &&\n        (!process.env.REACT_APP_DHIS2_BASE_URL ||\n            !process.env.REACT_APP_DHIS2_AUTHORIZATION)\n    ) {\n        throw new Error(\n            'Missing env variables REACT_APP_DHIS2_BASE_URL and REACT_APP_DHIS2_AUTHORIZATION'\n        );\n    }\n\n    // api config\n    const baseUrl = isProd\n        ? manifest.activities.dhis.href\n        : process.env.REACT_APP_DHIS2_BASE_URL;\n    const authorization = process.env.REACT_APP_DHIS2_AUTHORIZATION;\n\n    config.baseUrl = `${baseUrl}/api/${manifest.dhis2.apiVersion}`;\n    config.headers = isProd ? null : { Authorization: authorization };\n    config.schemas = [\n        'chart',\n        'map',\n        'report',\n        'reportTable',\n        'eventChart',\n        'eventReport',\n        'dashboard',\n        'organisationUnit',\n        'userGroup',\n    ];\n\n    getUserSettings()\n        .then(configI18n)\n        .then(() => d2Init(config))\n        .then(initializedD2 => {\n            ReactDOM.render(\n                <RuntimeProvider\n                    config={{\n                        baseUrl: baseUrl,\n                        apiVersion: manifest.dhis2.apiVersion,\n                    }}\n                >\n                    <CssReset />\n                    <Provider store={configureStore()}>\n                        <MuiThemeProvider theme={muiTheme()}>\n                            <App baseUrl={baseUrl} d2={initializedD2} />\n                        </MuiThemeProvider>\n                    </Provider>\n                </RuntimeProvider>,\n                document.getElementById('root')\n            );\n        });\n};\n\ninit();\n","import i18n from '@dhis2/d2-i18n';\nimport TableIcon from '@material-ui/icons/ViewList';\nimport ChartIcon from '@material-ui/icons/InsertChart';\nimport MapIcon from '@material-ui/icons/Public';\nimport ExtensionIcon from '@material-ui/icons/Extension';\nimport DescriptionIcon from '@material-ui/icons/Description';\nimport PersonIcon from '@material-ui/icons/Person';\nimport FontDownloadIcon from '@material-ui/icons/FontDownload';\nimport EmailIcon from '@material-ui/icons/Email';\nimport CropFreeIcon from '@material-ui/icons/CropFree';\nimport NotInterestedIcon from '@material-ui/icons/NotInterested';\n\nimport { getBaseUrl } from './util';\n\n// Item types\nexport const VISUALIZATION = 'VISUALIZATION';\nexport const REPORT_TABLE = 'REPORT_TABLE';\nexport const CHART = 'CHART';\nexport const MAP = 'MAP';\nexport const EVENT_REPORT = 'EVENT_REPORT';\nexport const EVENT_CHART = 'EVENT_CHART';\nexport const APP = 'APP';\nexport const REPORTS = 'REPORTS';\nexport const RESOURCES = 'RESOURCES';\nexport const USERS = 'USERS';\nexport const MESSAGES = 'MESSAGES';\nexport const TEXT = 'TEXT';\nexport const SPACER = 'SPACER';\n\nconst DOMAIN_TYPE_AGGREGATE = 'AGGREGATE';\nconst DOMAIN_TYPE_TRACKER = 'TRACKER';\n\n// Dashboard helpers\nexport const isVisualizationType = item =>\n    !!itemTypeMap[item.type].isVisualizationType;\nexport const hasMapView = itemType =>\n    itemTypeMap[itemType].domainType === DOMAIN_TYPE_AGGREGATE;\nexport const isTrackerDomainType = itemType =>\n    itemTypeMap[itemType].domainType === DOMAIN_TYPE_TRACKER;\nexport const getDefaultItemCount = itemType =>\n    itemTypeMap[itemType].defaultItemCount || 5;\nexport const getAppName = itemType => itemTypeMap[itemType].appName || '';\n\n// Item type map\nexport const itemTypeMap = {\n    [VISUALIZATION]: {\n        id: VISUALIZATION,\n        endPointName: 'visualizations',\n        propName: 'visualization',\n        pluralTitle: i18n.t('Visualizations'),\n        appUrl: id => `dhis-web-data-visualizer/#/${id}`,\n        appName: 'Data Visualizer',\n        defaultItemCount: 10,\n    },\n    [REPORT_TABLE]: {\n        id: REPORT_TABLE,\n        endPointName: 'visualizations',\n        propName: 'visualization',\n        pluralTitle: i18n.t('Pivot tables'),\n        domainType: DOMAIN_TYPE_AGGREGATE,\n        isVisualizationType: true,\n        appUrl: id => `dhis-web-data-visualizer/#/${id}`,\n        appName: 'Data Visualizer',\n    },\n    [CHART]: {\n        id: CHART,\n        endPointName: 'visualizations',\n        propName: 'visualization',\n        pluralTitle: i18n.t('Charts'),\n        domainType: DOMAIN_TYPE_AGGREGATE,\n        isVisualizationType: true,\n        appUrl: id => `dhis-web-data-visualizer/#/${id}`,\n        appName: 'Data Visualizer',\n    },\n    [MAP]: {\n        id: MAP,\n        endPointName: 'maps',\n        propName: 'map',\n        pluralTitle: i18n.t('Maps'),\n        domainType: DOMAIN_TYPE_AGGREGATE,\n        isVisualizationType: true,\n        appUrl: id => `dhis-web-maps/?id=${id}`,\n        appName: 'Maps',\n    },\n    [EVENT_REPORT]: {\n        id: EVENT_REPORT,\n        endPointName: 'eventReports',\n        propName: 'eventReport',\n        pluralTitle: i18n.t('Event reports'),\n        domainType: DOMAIN_TYPE_TRACKER,\n        isVisualizationType: true,\n        appUrl: id => `dhis-web-event-reports/?id=${id}`,\n        appName: 'Event Reports',\n    },\n    [EVENT_CHART]: {\n        id: EVENT_CHART,\n        endPointName: 'eventCharts',\n        propName: 'eventChart',\n        pluralTitle: i18n.t('Event charts'),\n        domainType: DOMAIN_TYPE_TRACKER,\n        isVisualizationType: true,\n        appUrl: id => `dhis-web-event-visualizer/?id=${id}`,\n        appName: 'Event Visualizer',\n    },\n    [APP]: {\n        endPointName: 'apps',\n        propName: 'appKey',\n        pluralTitle: i18n.t('Apps'),\n    },\n    [REPORTS]: {\n        id: REPORTS,\n        endPointName: 'reports',\n        propName: 'reports',\n        pluralTitle: i18n.t('Reports'),\n        appUrl: (id, type) => {\n            switch(type) {\n                case 'HTML':\n                    return `dhis-web-reports/#/standard-report/view/${id}`;\n\n                case 'JASPER_REPORT_TABLE':\n                case 'JASPER_JDBC':\n                default:\n                    return `api/reports/${id}/data.pdf?t=${(new Date()).getTime()}`;\n            }\n        },\n    },\n    [RESOURCES]: {\n        id: RESOURCES,\n        endPointName: 'resources',\n        propName: 'resources',\n        pluralTitle: i18n.t('Resources'),\n        appUrl: id => `api/documents/${id}/data`,\n    },\n    [USERS]: {\n        id: USERS,\n        endPointName: 'users',\n        propName: 'users',\n        pluralTitle: i18n.t('Users'),\n        appUrl: id => `dhis-web-dashboard-integration/profile.action?id=${id}`,\n    },\n    [TEXT]: {\n        id: TEXT,\n        propName: 'text',\n    },\n    [MESSAGES]: {\n        propName: 'messages',\n    },\n    [SPACER]: {\n        propName: 'text',\n    },\n};\n\nexport const getEndPointName = type => itemTypeMap[type].endPointName;\n\nexport const getItemUrl = (type, item, d2) => {\n    let url;\n\n    if (type === APP) {\n        url = item.launchUrl;\n    }\n\n    if (itemTypeMap[type] && itemTypeMap[type].appUrl) {\n        url = `${getBaseUrl(d2)}/${itemTypeMap[type].appUrl(item.id, item.type)}`;\n    }\n\n    return url;\n};\n\nexport const getItemIcon = type => {\n    switch (type) {\n        case REPORT_TABLE:\n        case EVENT_REPORT:\n        case REPORTS:\n            return TableIcon;\n        case CHART:\n        case EVENT_CHART:\n            return ChartIcon;\n        case MAP:\n            return MapIcon;\n        case APP:\n            return ExtensionIcon;\n        case RESOURCES:\n            return DescriptionIcon;\n        case USERS:\n            return PersonIcon;\n        case TEXT:\n            return FontDownloadIcon;\n        case MESSAGES:\n            return EmailIcon;\n        case SPACER:\n            return CropFreeIcon;\n        default:\n            return NotInterestedIcon;\n    }\n};\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"leftControls\":\"DashboardsBar_leftControls__2kr14\",\"rightControls\":\"DashboardsBar_rightControls__2l1lT\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"link\":\"DashboardItemChip_link__1b7Z_\",\"icon\":\"DashboardItemChip_icon__1zOaG\",\"selected\":\"DashboardItemChip_selected__36Qak\",\"unselected\":\"DashboardItemChip_unselected__3dm-X\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"menuItem\":\"ContentMenuItem_menuItem__2DIcB\",\"launchLink\":\"ContentMenuItem_launchLink__MRANR\",\"label\":\"ContentMenuItem_label__2pIfq\",\"buttonInsert\":\"ContentMenuItem_buttonInsert__1GlZy\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"itemWrap\":\"ItemHeader_itemWrap__3gJiQ\",\"itemHeaderWrap\":\"ItemHeader_itemHeaderWrap__xEKwZ\",\"itemTitle\":\"ItemHeader_itemTitle__3LmXp\",\"itemActionsWrap\":\"ItemHeader_itemActionsWrap__1U5Ex\"};","import isObject from 'lodash/isObject';\n\n// validation\nexport function orNull(param) {\n    return param === undefined ? null : param;\n}\n\nexport function orArray(param) {\n    return Array.isArray(param) ? param : [];\n}\n\nexport function orObject(param) {\n    return isObject(param) ? param : {};\n}\n\n// array\nexport function arrayGetById(array, id) {\n    return array.find(item => item.id === id);\n}\n\n// object\nexport function arrayToIdMap(array) {\n    return array.reduce((obj, item) => {\n        obj[item.id] = item;\n        return obj;\n    }, {});\n}\n\n// date\nexport function getDate() {\n    const y = Math.floor(Math.random() * 3) + 2015;\n    const M = Math.floor(Math.random() * 12) + 1;\n    const d = Math.floor(Math.random() * 28) + 1;\n    // const h = Math.floor(Math.random() * 23) + 1;\n    // const m = Math.floor(Math.random() * 59) + 1;\n    // const s = Math.floor(Math.random() * 59) + 1;\n\n    return new Date(`${y}-${M}-${d}`)\n        .toJSON()\n        .replace('T', ' ')\n        .substr(0, 10);\n}\n\nexport const formatDate = (value, uiLocale) => {\n    if (typeof global.Intl !== 'undefined' && Intl.DateTimeFormat) {\n        const locale = uiLocale || 'en';\n        return new Intl.DateTimeFormat(locale, {\n            year: 'numeric',\n            month: 'short',\n            day: 'numeric',\n        }).format(new Date(value));\n    }\n\n    return value.substr(0, 19).replace('T', ' ');\n};\n\n/**\n * Sorts an array of objects based on provided date property\n *\n * @param {Array} items Array of objects\n * @param {String} dateProp Name of the date property to be used for sorting\n * @param {Boolean} ascending Whether to sort ascending or descending\n */\nexport const sortByDate = (items, dateProp, ascending = true) => {\n    const values = Object.values(items);\n\n    values.sort((a, b) => {\n        const aDate = new Date(a[dateProp]);\n        const bDate = new Date(b[dateProp]);\n\n        return ascending ? aDate - bDate : bDate - aDate;\n    });\n\n    return values;\n};\n\n// reducer validator\nexport const validateReducer = (value, defaultValue) =>\n    value === undefined || value === null ? defaultValue : value;\n\nexport const getBaseUrl = d2 => {\n    const api = d2.Api.getApi();\n    const idx = api.baseUrl.indexOf('/api');\n    return idx > -1 ? api.baseUrl.slice(0, idx) : api.baseUrl;\n};\n\nexport const getWithoutId = object => ({\n    ...object,\n    id: undefined,\n});\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"ControlBar_root__3LaTt\",\"content\":\"ControlBar_content__1r98-\",\"draghandle\":\"ControlBar_draghandle__1VWa0\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"FatalErrorBoundary_container__x6zhd\",\"icon\":\"FatalErrorBoundary_icon__2XjC2\",\"message\":\"FatalErrorBoundary_message__2p9y8\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"showMore\":\"ShowMoreButton_showMore__rWqw9\",\"disabled\":\"ShowMoreButton_disabled__2oX7G\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"ClearButton_button__2yjcV\",\"icon\":\"ClearButton_icon__1fqj8\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"textDiv\":\"Item_textDiv__2b-T5\"};","import isObject from 'lodash/isObject';\nimport { VIS_TYPE_COLUMN, VIS_TYPE_PIVOT_TABLE } from '@dhis2/analytics';\nimport { apiFetchFavorite, getMapFields } from '../../../api/metadata';\nimport {\n    REPORT_TABLE,\n    CHART,\n    MAP,\n    EVENT_REPORT,\n    EVENT_CHART,\n    itemTypeMap,\n} from '../../../modules/itemTypes';\nimport { getBaseUrl, getWithoutId } from '../../../modules/util';\nimport { getGridItemDomId } from '../../ItemGrid/gridUtil';\n\n//external plugins\nconst itemTypeToExternalPlugin = {\n    [MAP]: 'mapPlugin',\n    [EVENT_REPORT]: 'eventReportPlugin',\n    [EVENT_CHART]: 'eventChartPlugin',\n};\nconst hasIntegratedPlugin = type => [CHART, REPORT_TABLE].includes(type);\n\nconst getPlugin = type => {\n    if (hasIntegratedPlugin(type)) {\n        return true;\n    }\n    const pluginName = itemTypeToExternalPlugin[type];\n\n    return global[pluginName];\n};\n\nexport const THEMATIC_LAYER = 'thematic';\n\nexport const pluginIsAvailable = (item = {}, visualization = {}) => {\n    const type = visualization.activeType || item.type;\n\n    return !!getPlugin(type);\n};\n\nexport const extractFavorite = item => {\n    if (!isObject(item)) {\n        return null;\n    }\n\n    const propName = itemTypeMap[item.type].propName;\n\n    return (\n        item[propName] ||\n        (item.reportTable ||\n            item.chart ||\n            item.map ||\n            item.eventReport ||\n            item.eventChart ||\n            {})\n    );\n};\n\nexport const extractMapView = map =>\n    map.mapViews && map.mapViews.find(mv => mv.layer.includes(THEMATIC_LAYER));\n\nexport const loadPlugin = (plugin, config, credentials) => {\n    if (!(plugin && plugin.load)) {\n        return;\n    }\n\n    plugin.url = credentials.baseUrl;\n    plugin.loadingIndicator = true;\n    plugin.dashboard = true;\n    if (credentials.auth) {\n        plugin.auth = credentials.auth;\n    }\n    plugin.load(config);\n};\n\nexport const getId = item => extractFavorite(item).id;\nexport const getName = item => extractFavorite(item).name;\nexport const getDescription = item => extractFavorite(item).description;\nexport const getLink = (item, d2) => {\n    const baseUrl = getBaseUrl(d2);\n    const appUrl = itemTypeMap[item.type].appUrl(getId(item));\n\n    return `${baseUrl}/${appUrl}`;\n};\n\nexport const load = async (\n    item,\n    visualization,\n    { credentials, activeType, options = {} }\n) => {\n    const config = {\n        ...visualization,\n        ...options,\n        el: getGridItemDomId(item.id),\n    };\n\n    const type = activeType || item.type;\n    const plugin = getPlugin(type);\n\n    loadPlugin(plugin, config, credentials);\n};\n\nexport const fetch = async item => {\n    const fetchedFavorite = await apiFetchFavorite(getId(item), item.type, {\n        fields: item.type === MAP ? getMapFields() : null,\n    });\n\n    return fetchedFavorite;\n};\n\nexport const resize = item => {\n    const plugin = getPlugin(item.type);\n\n    if (plugin && plugin.resize) {\n        plugin.resize(getGridItemDomId(item.id));\n    }\n};\n\nexport const unmount = (item, activeType) => {\n    const plugin = getPlugin(activeType);\n\n    if (plugin && plugin.unmount) {\n        plugin.unmount(getGridItemDomId(item.id));\n    }\n};\n\nexport const getVisualizationConfig = (\n    visualization,\n    originalType,\n    activeType\n) => {\n    if (originalType === MAP && originalType !== activeType) {\n        const extractedMapView = extractMapView(visualization);\n\n        if (extractedMapView === undefined) {\n            return null;\n        }\n\n        return getWithoutId({\n            ...visualization,\n            ...extractedMapView,\n            mapViews: undefined,\n            type: activeType === CHART ? VIS_TYPE_COLUMN : VIS_TYPE_PIVOT_TABLE,\n        });\n    } else if (originalType === REPORT_TABLE && activeType === CHART) {\n        return getWithoutId({ ...visualization, type: VIS_TYPE_COLUMN });\n    } else if (originalType === CHART && activeType === REPORT_TABLE) {\n        return getWithoutId({\n            ...visualization,\n            type: VIS_TYPE_PIVOT_TABLE,\n        });\n    }\n\n    return getWithoutId(visualization);\n};\n","import isFunction from 'd2-utilizr/lib/isFunction';\n\nimport { orObject } from '../../modules/util';\n\n// Dimensions for the react-grid-layout\n\nexport const GRID_COMPACT_TYPE = 'vertical'; // vertical | horizonal | null\nexport const GRID_ROW_HEIGHT = 10;\nconst GRID_COLUMN_WIDTH_PX = 20;\nconst GRID_LAYOUT = 'FLEXIBLE'; // FIXED | FLEXIBLE\nexport const MARGIN = [10, 10];\n\nexport const NEW_ITEM_SHAPE = { x: 0, y: 0, w: 20, h: 29 };\n\n// Dimensions for getShape\n\nconst NUMBER_OF_ITEM_COLS = 2;\nconst GRID_COLUMNS = 60;\n\nexport const getGridColumns = () => {\n    switch (GRID_LAYOUT) {\n        case 'FLEXIBLE':\n            return GRID_COLUMNS;\n        case 'FIXED':\n            return Math.floor((window.innerWidth - 20) / GRID_COLUMN_WIDTH_PX);\n        default:\n            return GRID_COLUMNS;\n    }\n};\n\n// isNonNegativeInteger\n\nconst isNonNegativeInteger = x => Number.isInteger(x) && x >= 0;\n\n// Does the item have all the shape properties?\n\nexport const hasShape = item =>\n    isNonNegativeInteger(item.x) &&\n    isNonNegativeInteger(item.y) &&\n    isNonNegativeInteger(item.w) &&\n    isNonNegativeInteger(item.h);\n\n// returns a rectangular grid block dimensioned with x, y, w, h in grid units.\n// based on a grid with 3 items across\nexport const getShape = i => {\n    if (!isNonNegativeInteger(i)) {\n        throw new Error('Invalid grid block number');\n    }\n\n    const col = i % NUMBER_OF_ITEM_COLS;\n    const row = Math.floor(i / NUMBER_OF_ITEM_COLS);\n    const itemWidth = Math.floor((GRID_COLUMNS - 1) / NUMBER_OF_ITEM_COLS);\n    const itemHeight = GRID_ROW_HEIGHT * 2;\n\n    return {\n        x: col * itemWidth,\n        y: row * itemHeight,\n        w: itemWidth,\n        h: itemHeight,\n    };\n};\n\nexport const getGridItemProperties = itemId => {\n    return {\n        i: itemId,\n        minH: 4, // minimum height for item\n    };\n};\n\n/**\n * Calculates the grid item's original height in pixels based\n * on the height in grid units. This calculation\n * is copied directly from react-grid-layout GridItem.js (calcPosition)\n *\n * @param {Object} item item containing shape (x, y, w, h)\n */\nconst getOriginalHeight = item => {\n    const originalHeight = Math.round(\n        GRID_ROW_HEIGHT * item.h + Math.max(0, item.h - 1) * MARGIN[1]\n    );\n\n    return { originalHeight };\n};\n\n/**\n * Returns an array of items containing the x, y, w, h dimensions\n * and the item's originalheight in pixels\n * @function\n * @param {Array} items\n * @returns {Array}\n */\n\nexport const withShape = items =>\n    items.map((item, index) => {\n        const itemWithShape = hasShape(item)\n            ? item\n            : Object.assign({}, item, getShape(index));\n\n        return Object.assign(\n            {},\n            itemWithShape,\n            getOriginalHeight(itemWithShape)\n        );\n    });\n\nexport const getGridItemDomId = id => `item-${id}`;\n\nexport function onItemResize(id) {\n    const el = orObject(document.querySelector(`#${getGridItemDomId(id)}`));\n    if (isFunction(el.setViewportSize))\n        setTimeout(\n            () => el.setViewportSize(el.clientWidth - 5, el.clientHeight - 5),\n            10\n        );\n}\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"showMoreButton\":\"CategorizedMenuGroup_showMoreButton__3-0Wa\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"deleteItemButton\":\"DeleteItemButton_deleteItemButton__4YLrM\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"center\":\"LoadingMask_center__GnxG9\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"bar\":\"FilterBar_bar__2mF3Z\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"content\":\"ConfirmDeleteDialog_content__1IFNx\"};"],"sourceRoot":""}
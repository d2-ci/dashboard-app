{"version":3,"sources":["modules/itemTypes.js","api/metadata.js","modules/util.js","components/Item/ListItem/Item.module.css","reducers/user.js","modules/uiBackendItemConverter.js","reducers/dashboards.js","reducers/editDashboard.js","reducers/editItemFilters.js","reducers/selected.js","actions/editItemFilters.js","reducers/itemFilters.js","actions/itemFilters.js","reducers/messages.js","api/messages.js","reducers/snackbar.js","actions/snackbar.js","reducers/visualizations.js","actions/visualizations.js","api/index.js","api/dashboards.js","components/SnackbarMessage/SnackbarMessage.js","actions/selected.js","api/localStorage.js","components/Item/MessagesItem/actions.js","api/editDashboard.js","actions/editDashboard.js","actions/dashboards.js","reducers/controlBar.js","api/controlBar.js","actions/controlBar.js","reducers/dimensions.js","reducers/settings.js","actions/dimensions.js","components/ControlBar/ShowMoreButton.js","components/ControlBar/controlBarDimensions.js","components/ControlBar/ControlBar.js","icons/Star.js","api/dataStatistics.js","components/ControlBar/DashboardItemChip.js","icons/AddCircle.js","icons/Clear.js","components/ControlBar/ClearButton.js","reducers/dashboardsFilter.js","components/ControlBar/Filter.js","components/ControlBar/DashboardsBar.js","actions/dashboardsFilter.js","components/Dashboard/DashboardVerticalOffset.js","components/ItemSelector/HeaderMenuItem.js","icons/Launch.js","components/ItemSelector/ContentMenuItem.js","components/ItemSelector/selectableItems.js","components/ItemSelector/CategorizedMenuGroup.js","components/ItemSelector/actions.js","components/ItemSelector/SinglesMenuGroup.js","components/ItemSelector/ItemSelector.js","components/TitleBar/EditTitleBar.js","components/ItemFilter/FilterDialog.js","reducers/activeModalDimension.js","actions/activeModalDimension.js","components/ItemFilter/FilterSelector.js","components/TitleBar/Info.js","components/TitleBar/ViewTitleBar.js","components/TitleBar/TitleBar.js","components/Item/VisualizationItem/DefaultPlugin.js","components/Item/VisualizationItem/assets/icons.js","components/Item/VisualizationItem/FatalErrorBoundary.js","components/Item/DeleteItemButton.js","components/Item/ItemHeader.js","components/Item/VisualizationItem/ItemHeaderButtons.js","components/Item/VisualizationItem/ItemFooter.js","modules/memoizeOne.js","components/Item/VisualizationItem/LoadingMask.js","components/Item/VisualizationItem/Item.js","widgets/Line.js","components/Item/MessagesItem/Item.js","components/Item/NotSupportedItem/Item.js","icons/Description.js","icons/Delete.js","components/Item/ListItem/Item.js","components/Item/ListItem/actions.js","components/Item/TextItem/Item.js","components/Item/AppItem/Item.js","components/Item/SpacerItem/Item.js","components/Item/Item.js","widgets/NoContentMessage.js","components/Item/ProgressiveLoadingContainer.js","components/ItemGrid/ItemGrid.js","components/FilterBar/FilterBadge.js","components/FilterBar/FilterBar.js","components/Dashboard/DashboardContent.js","components/Dashboard/ViewDashboard.js","components/ControlBar/ConfirmDeleteDialog.js","components/ControlBar/EditBar.js","components/Dashboard/EditDashboard.js","components/Dashboard/NewDashboard.js","components/Dashboard/Dashboard.js","components/Dashboard/dashboardModes.js","components/App.js","actions/user.js","locales/index.js","reducers/style.js","reducers/index.js","configureStore.js","index.js","components/ControlBar/styles/DashboardsBar.module.css","components/ItemSelector/styles/ContentMenuItem.module.css","components/Item/styles/ItemHeader.module.css","components/ControlBar/styles/ControlBar.module.css","components/Item/VisualizationItem/styles/FatalErrorBoundary.module.css","components/ControlBar/styles/ClearButton.module.css","components/Item/VisualizationItem/plugin.js","components/ItemGrid/gridUtil.js","components/ItemSelector/styles/CategorizedMenuGroup.module.css","components/Item/styles/DeleteItemButton.module.css"],"names":["VISUALIZATION","REPORT_TABLE","CHART","MAP","EVENT_REPORT","EVENT_CHART","APP","REPORTS","RESOURCES","USERS","MESSAGES","TEXT","SPACER","isVisualizationType","item","itemTypeMap","type","hasMapView","itemType","domainType","isTrackerDomainType","getDefaultItemCount","defaultItemCount","getAppName","appName","_itemTypeMap","Object","_home_travis_build_dhis2_dashboards_app_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_defineProperty__WEBPACK_IMPORTED_MODULE_0__","id","endPointName","propName","pluralTitle","i18n","t","appUrl","concat","getEndPointName","getItemUrl","d2","url","launchUrl","getBaseUrl","getItemIcon","TableIcon","ChartIcon","MapIcon","ExtensionIcon","DescriptionIcon","PersonIcon","FontDownloadIcon","EmailIcon","CropFreeIcon","NotInterestedIcon","getIdNameFields","rename","arguments","length","undefined","getDimensionFields","_ref2","withItems","arrayClean","join","getAxesFields","_ref3","getFavoriteFields","_ref4","withDimensions","withOptions","getFavoritesFields","_ref5","_home_travis_build_dhis2_dashboards_app_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_toConsumableArray__WEBPACK_IMPORTED_MODULE_0__","getListItemFields","getMapFields","apiFetchFavorite","_ref6","fields","getInstance","then","Api","getApi","get","orArray","param","Array","isArray","orObject","isObject","arrayToIdMap","array","reduce","obj","formatDate","value","uiLocale","global","Intl","DateTimeFormat","locale","year","month","day","format","Date","substr","replace","validateReducer","defaultValue","api","idx","baseUrl","indexOf","slice","getWithoutId","object","_home_travis_build_dhis2_dashboards_app_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectSpread__WEBPACK_IMPORTED_MODULE_0__","module","exports","list","itemicon","link","deleteicon","deletebutton","DEFAULT_STATE_USER","username","isSuperuser","sGetUserUsername","state","user","spacerContent","isTextType","text","convertUiItemsToBackend","items","map","isUiSpacerType","objectSpread","convertBackendItemsToUi","isBackendSpacerType","DEFAULT_STATE_DASHBOARDS","byId","updateDashboardProp","_ref","dashboardId","prop","defineProperty","sGetDashboardsRoot","dashboards","sGetDashboardById","sDashboardsIsFetching","sGetAllDashboards","sGetDashboardItems","sGetStarredDashboards","values","filter","dashboard","starred","sGetUnstarredDashboards","sGetDashboardsSortedByStarred","toConsumableArray","arraySort","getCustomDashboards","data","arrayFrom","d","name","displayName","description","displayDescription","favorite","owner","created","split","lastUpdated","access","numberOfItems","dashboardItems","DEFAULT_STATE_EDIT_DASHBOARD","NEW_DASHBOARD_STATE","sGetEditDashboardRoot","editDashboard","sGetIsEditing","isEmpty","sGetEditDashboardItems","DEFAULT_STATE_EDIT_ITEM_FILTERS","sGetEditItemFiltersRoot","editItemFilters","combineReducers","action","isLoading","showDescription","sGetSelectedRoot","selected","sGetSelectedId","sGetSelectedIsLoading","sGetSelectedShowDescription","acRemoveEditItemFilter","DEFAULT_STATE_ITEM_FILTERS","sGetItemFiltersRoot","itemFilters","sGetFiltersKeys","keys","acRemoveItemFilter","sGetMessagesRoot","messages","getMessages","catch","error","console","log","DEFAULT_STATE_SNACKBAR","message","duration","open","acCloseSnackbar","DEFAULT_STATE_VISUALIZATIONS","p","sGetVisualization","visualizations","sGetVisualizationsRoot","acAddVisualization","onError","getDashboardItemsFields","withFavorite","getDashboardFields","apiFetchDashboard","models","apiStarDashboard","isStarred","post","delete","apiDeleteDashboard","loadingDashboardMsg","SnackbarMessageContent","react_default","a","createElement","style","fontWeight","connect","_sGetSnackbar","snackbar","sGetSnackbar","snackbarOpen","snackbarMessage","snackbarDuration","onCloseSnackbar","props","Snackbar_default","zIndex","SnackbarMessage_SnackbarMessageContent","autoHideDuration","onClose","acSetSelectedId","acSetSelectedIsLoading","tLoadDashboard","asyncToGenerator","regenerator_default","mark","_callee","dispatch","dash","wrap","_context","prev","next","sent","acAppendDashboards","abrupt","Promise","resolve","t0","stop","_x","apply","this","tSetSelectedDashboardById","_callee2","getState","snackbarTimeout","onSuccess","_context2","setTimeout","dashboardName","customDashboard","acSetDashboardItems","withShape","localStorage","setItem","forEach","extractFavorite","messageConversations","filters","clearTimeout","_x2","_x3","saveDashboard","assign","width","w","height","h","save","msg","response","uid","updateDashboard","postDashboard","create","acAddDashboardItem","itemPropName","generateUid","content","NEW_ITEM_SHAPE","acUpdateDashboardItem","acRemoveDashboardItem","acSetDashboardStarred","tFetchDashboards","collection","paging","toArray","userRows","sGetControlBarUserRows","controlBar","sGetControlBarRoot","KEY","hasNamespace","currentUser","dataStore","has","getNamespace","apiGetControlBarRows","_callee3","namespace","_context3","t1","t2","find","key","apiPostControlBarRows","_callee4","rows","_context4","set","_x4","_x5","acSetControlBarUserRows","DEFAULT_DIMENSIONS","getDimensionById","DIMENSION_ID_PERIOD","DIMENSION_ID_ORGUNIT","sGetDimensions","dimensions","DEFAULT_SETTINGS","keyDateFormat","keyAnalysisRelativePeriod","keyAnalysisDigitGroupSeparator","displayNameProperty","rootOrganisationUnit","sGetSettings","settings","sGetSettingsDisplayNameProperty","acSetDimensions","styles","showMore","color","colors","grey700","cursor","fontSize","paddingTop","&:hover","textDecoration","disabled","grey500","withStyles","onClick","isMaxHeight","classes","textAlign","className","MIN_ROW_COUNT","getRowsHeight","getNumRowsFromHeight","Math","floor","FIRST_ROW_PADDING_HEIGHT","getTopOffset","getControlBarHeight","ControlBar","_this","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","onStartDrag","setState","dragging","window","addEventListener","onDrag","onEndDrag","event","preventDefault","stopPropagation","newHeight","clientY","onChangeHeight","requestAnimationFrame","removeEventListener","draghandle","onMouseDown","max","rootStyle","top","backgroundColor","editMode","yellow050","white","paddingBottom","transition","root","children","renderDragHandle","React","Component","defaultProps","StarIcon","xmlns","viewBox","fill","apiPostDataStatistics","eventType","chip","margin","grey600","display","verticalAlign","icon","marginTop","unselected","label","chipProps","selectedState","Star","Link","to","debounce","lib","AddCircleIcon","teal600","ClearIcon","grey800","ClearButton","onClear","button","Clear","ownerData","DEFAULT_STATE_DASHBOARDS_FILTER_NAME","DEFAULT_STATE_DASHBOARDS_FILTER_OWNER","order","sGetDashboardsFilterRoot","dashboardsFilter","sGetFilterName","KEYCODE_ENTER","KEYCODE_ESCAPE","filterField","searchIcon","Filter","_Component","setFilterValue","onChangeName","target","handleKeyUp","keyCode","onKeypressEnter","inherits","createClass","nextProps","_this$props","startAdornment","InputAdornment_default","position","Search_default","endAdornment","ControlBar_ClearButton","Input_default","placeholder","onChange","onKeyUp","Function","prototype","MAX_ROW_COUNT","DashboardsBar","_getPrototypeOf2","_len","args","_key","setInitialDashboardState","adjustedHeight","newRows","newRowCount","min","onToggleMaxHeight","onSelectDashboard","history","push","selectedId","onChangeFilterName","rowCount","controlBarHeight","contentWrapperStyle","padding","overflowY","components_ControlBar_ControlBar","leftControls","marginRight","AddCircle","ControlBar_Filter","ControlBar_DashboardItemChip","ControlBar_ShowMoreButton","mapDispatchToProps","withRouter","stateProps","dispatchProps","ownProps","displayDashboards","toLowerCase","includes","HeaderMenuItem","title","dense","LaunchIcon","LaunchLink","e","launchLink","rel","href","Launch","InsertButton","buttonInsert","ContentMenuItem","onInsert","visType","ItemIcon","renderedItemIcon","visTypeIcons","menuItem","ContentMenuItem_LaunchLink","ContentMenuItem_InsertButton","singleItems","header","categorizedItems","listItemTypes","CategorizedMenuGroup","addItem","tAddListItemContent","newItem","toggleSeeMore","seeMore","onChangeItemsLimit","_this2","_this$props2","hasMore","react","ItemSelector_HeaderMenuItem","itemUrl","context","ItemSelector_ContentMenuItem","showMoreButton","contextTypes","PropTypes","isRequired","dashboardItem","listItemType","dashboardItemIndex","findIndex","category","addToDashboard","ItemSearchField","onFocus","ItemSelector","closeList","openList","_","fetchItems","anchorEl","currentTarget","setFilter","getCategorizedMenuGroups","itemCount","allItems","maxOptions","ItemSelector_CategorizedMenuGroup","getSinglesMenuGroups","ItemSelector_SinglesMenuGroup","getMenuGroups","queryString","add","Set","ItemSelector_ItemSearchField","Popover_default","anchorOrigin","horizontal","vertical","transformOrigin","PaperProps","disableAutoFocus","disableRestoreFocus","EditTitleBar","onChangeTitle","onChangeDescription","section","titleDescription","itemSelector","components_ItemSelector_ItemSelector","selectedDashboard","justifyContent","flex","clear","underline","&::before","borderBottom","&:hover::before","input","borderRadius","peId","ouId","FilterDialog","onConfirm","dimension","selectedItems","dialogId","commonProps","onSelect","onDeselect","onReorder","build","selectedPeriods","ouItems","dialogTitle","Dialog_default","maxWidth","disableEnforceFocus","dialogContent","DialogActions_default","kind","DEFAULT_STATE_ACTIVE_MODAL_DIMENSION","sGetActiveModalDimension","activeModalDimension","acSetActiveModalDimension","FilterSelector","openPanel","closePanel","closeDialog","clearActiveModalDimension","selectDimension","setActiveModalDimension","onSelectItems","dimensionId","setEditItemFilters","onDeselectItems","itemIdsToRemove","newList","removeEditItemFilter","onReorderItems","itemIds","oldList","reorderedList","saveFilter","filterItems","addItemFilter","removeItemFilter","theme","selectedDimensions","ArrowDropDown_default","Boolean","fontFamily","typography","onDimensionClick","selectedIds","ItemFilter_FilterDialog","withTheme","Info","show","toggle","InfoOutlined_default","NO_DESCRIPTION","actions","alignItems","marginLeft","starIcon","textButton","minWidth","editLink","titleBar","titleBarIcon","ViewTitleBar","toggleSharingDialog","sharingDialogIsOpen","onStarClick","onInfoClick","titleStyle","userSelect","StarBorder","TitleBar_Info","update","manage","ItemFilter_FilterSelector","d2_ui_sharing_dialog_default","onRequestClose","tStarDashboard","black","TitleBar","edit","TitleBar_EditTitleBar","TitleBar_ViewTitleBar","DefaultPlugin","pluginCredentials","shouldPluginReload","prevProps","reloadAllowed","filtersChanged","vis","visualization","prevVis","visChanged","activeType","reloadPlugin","pluginManager","currentVis","useActiveType","credentials","getActiveType","auth","defaultHeaders","Authorization","getGridItemDomId","textDiv","ThreeDots","SpeechBubble","fillRule","transform","Warning","FatalErrorBoundary","errorFound","info","container","icons_Warning","DeleteItemButton","deleteItemButton","Delete_default","red500","HEADER_MARGIN_HEIGHT","ItemHeader","actionButtons","itemId","forwardedRef","itemHeaderWrap","ref","itemTitle","itemActionsWrap","Item_DeleteItemButton","ConnectedItemHeader","forwardRef","iconFill","ItemHeaderButtons","_useState","useState","_useState2","slicedToArray","setAnchorEl","onSelectActiveType","isTrackerType","onViewTable","handleClose","onViewChart","onViewMap","canViewAs","isSingleValue","isYearOverYear","VIS_TYPE_GAUGE","VIS_TYPE_PIE","interpretationMenuLabel","activeFooter","pluginIsAvailable","Fragment","small","secondary","icons_ThreeDots","InsertChart_default","ViewList_default","Public_default","Launch_default","getLink","icons_SpeechBubble","onToggleFooter","scrollContainer","line","border","grey100","ItemFooter","objectId","getId","d2_ui_interpretations_default","memoizeOne","fn","lastArgs","lastValue","every","arg","i","progress","spacing","unit","alignSelf","outer","CircularProgress_default","overflow","textOverflow","whiteSpace","fontStretch","lineHeight","loadingCover","left","background","Item","showFooter","configLoaded","pluginIsLoaded","applyFilters","visRows","visColumns","columns","visFilters","dimensionFound","dimensionObjects","getUniqueKey","uniqueId","getPluginComponent","memoizedGetVisualizationConfig","calculatedHeight","originalHeight","headerRef","current","clientHeight","ITEM_CONTENT_PADDING_BOTTOM","memoizedGetContentStyle","contentRef","offsetHeight","LoadingMask","es_lib","memoizedApplyFilters","onLoadingComplete","forDashboard","mapViews","layer","VisualizationItem_DefaultPlugin","onToggleItemExpanded","getContentStyle","measuredHeight","createRef","getVisualizationConfig","_componentDidMount","onVisualizationLoaded","prevState","VisualizationItem_ItemHeaderButtons","Item_ItemHeader","VisualizationItem_FatalErrorBoundary","VisualizationItem_ItemFooter","acSetActiveVisualizationType","grey200","Line","PRIVATE","messageTypes","_messageTypes","listStyleType","paddingLeft","seeAll","marginBottom","sender","snippet","maxHeight","MessagesItem","getMessageHref","msgIdentifier","messageType","getMessageSender","latestMsg","getMessageItems","editClass","readClass","read","msgDate","document","location","messageCount","userSettings","widgets_Line","string","MessagesContainer","NotSupportedItem","NotInterested_default","align","DeleteIcon","getItemTitle","ListItem","tRemoveListItemContent","contentItems","index","el","getContentItems","contentItem","Description","deleteButton","icons_Delete","grey900","newContent","textField","onChangeText","updatedItem","d2_ui_rich_text","onEdit","multiline","fullWidth","textDivStyle","viewItem","getIframeSrc","appDetails","iframeSrc","ouIds","ouPath","AppItem","appKey","system","installedApps","app","src","SpacerItem","GridItem","VisualizationItem","TextItem","getGridItem","NoContentMessage","ProgressiveLoadingContainer","shouldLoad","containerRef","shouldLoadHandler","bufferPx","bufferFactor","innerHeight","rect","getBoundingClientRect","bottom","removeHandler","checkShouldLoad","debounceMs","registerHandler","_this3","objectWithoutProperties","eventProps","pick","EXPANDED_HEIGHT","ItemGrid","expandedItems","clickedId","isExpanded","onRemoveItem","onLayoutChange","newLayout","acUpdateDashboardLayout","onResizeStop","layout","oldItem","onItemResize","pluginResize","onRemoveItemWrapper","getItem","expandedItem","hProp","minH","ITEM_MIN_HEIGHT","randomNumber","random","getItems","getMemoizedItem","getItemComponent","itemClassNames","Item_ProgressiveLoadingContainer","Item_Item_Item","getItemComponents","memoize","widgets_NoContentMessage","react_grid_layout_default","MARGIN","cols","getGridColumns","rowHeight","GRID_ROW_HEIGHT","innerWidth","compactType","GRID_COMPACT_TYPE","isDraggable","isResizable","draggableCancel","validItems","hasShape","badgeContainer","badge","badgeRemove","FilterBadge","onRemove","count","FilterBar","onBadgeRemove","onBadgeClick","bar","FilterBar_FilterBadge","removeItemFIlter","filtersSelector","createSelector","arr","flexWrap","DashboardContent","components_TitleBar_TitleBar","components_FilterBar_FilterBar","components_ItemGrid_ItemGrid","Content","hasDashboardContent","dashboardsIsEmpty","Dashboard_DashboardContent","dashboardsLoaded","contentNotReady","ControlBar_DashboardsBar","Dashboard_DashboardVerticalOffset","ViewDashboard_Content","ConfirmDeleteDialog","onDeleteConfirmed","onContinueEditing","destructive","DialogTitle_default","DialogContent_default","DialogContentText_default","buttonBarStyle","EditBar","translationDialogIsOpen","dashboardModel","confirmDeleteDialogOpen","redirectUrl","onConfirmDelete","onSave","newId","onDiscard","onDiscardChanges","onDelete","onTranslationsSaved","translations","dbLocale","translation","property","onTranslate","fetchDashboardModel","toggleTranslationDialog","confirmDeleteDialog","deleteAccess","ControlBar_ConfirmDeleteDialog","translationDialog","d2_ui_translation_dialog_default","objectToTranslate","fieldsToTranslate","onTranslationSaved","onTranslationError","err","Redirect","updateAccess","discardBtnText","primary","rightControls","sGetIsNewDashboard","dashboardToSave","tDeleteDashboard","acSetDashboardDisplayName","EditDashboard","initialized","initEditDashboard","setEditDashboard","getDashboardContent","EditDashboard_Content","ControlBar_EditBar","NewDashboard","setNewDashboard","Dashboard","setDashboard","match","params","selectDashboard","scrollToTop","scrollTo","mode","Dashboard_EditDashboard","Dashboard_NewDashboard","Dashboard_ViewDashboard","dashboardToSelect","preferredId","App","setCurrentUser","fetchDashboards","setControlBarRows","setDimensions","spacers","HeaderBar","HashRouter","Switch","Route","exact","path","render","components_Dashboard_Dashboard","components_SnackbarMessage_SnackbarMessage","childContextTypes","controlBarRows","displayNameProp","filteredDimensions","apiFetchDimensions","dim","dimensionType","dataDimensionType","tSetDimensions","moment","addResources","arTranslations","daTranslations","enTranslations","esTranslations","frTranslations","idTranslations","kmTranslations","loTranslations","myTranslations","prsTranslations","psTranslations","ptTranslations","pt_BRTranslations","ruTranslations","svTranslations","tetTranslations","tgTranslations","ukTranslations","urTranslations","viTranslations","zhTranslations","zh_CNTranslations","setDefaultNamespace","changeLanguage","objectClean","conversations","$merge","d2Object","keyUiLocale","authorities","newState","k","$unshift","idToRemove","$splice","stateItems","layoutHasChanged","newStateItems","x","y","stateItem","si","configureStore","middleware","thunk","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","createStore","reducer","applyMiddleware","configI18n","config","sources","manifest","isProd","getManifest","version","manifest_generated_at","process","activities","dhis","dhis2","apiVersion","headers","schemas","getUserSettings","d2Init","initializedD2","ReactDOM","build_es","es","store","createMuiTheme","dhis2theme","src_components_App","getElementById","init","itemWrap","itemTypeToExternalPlugin","_itemTypeToExternalPl","_home_travis_build_dhis2_dashboards_app_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_defineProperty__WEBPACK_IMPORTED_MODULE_3__","getPlugin","hasIntegratedPlugin","reportTable","chart","eventReport","eventChart","loadPlugin","plugin","load","loadingIndicator","getName","_home_travis_build_dhis2_dashboards_app_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_asyncToGenerator__WEBPACK_IMPORTED_MODULE_2__","_home_travis_build_dhis2_dashboards_app_node_modules_babel_preset_react_app_node_modules_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default","_home_travis_build_dhis2_dashboards_app_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectSpread__WEBPACK_IMPORTED_MODULE_1__","fetch","fetchedFavorite","resize","unmount","originalType","extractedMapView","mv","VIS_TYPE_COLUMN","VIS_TYPE_PIVOT_TABLE","__webpack_require__","__webpack_exports__","d2_utilizr_lib_isFunction__WEBPACK_IMPORTED_MODULE_0__","d2_utilizr_lib_isFunction__WEBPACK_IMPORTED_MODULE_0___default","n","_modules_util__WEBPACK_IMPORTED_MODULE_1__","isNonNegativeInteger","Number","isInteger","itemWithShape","Error","col","row","itemWidth","itemHeight","getShape","round","getOriginalHeight","querySelector","isFunction","setViewportSize","clientWidth"],"mappings":"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","file":"static/js/main.34099cec.chunk.js","sourcesContent":["import i18n from '@dhis2/d2-i18n';\nimport TableIcon from '@material-ui/icons/ViewList';\nimport ChartIcon from '@material-ui/icons/InsertChart';\nimport MapIcon from '@material-ui/icons/Public';\nimport ExtensionIcon from '@material-ui/icons/Extension';\nimport DescriptionIcon from '@material-ui/icons/Description';\nimport PersonIcon from '@material-ui/icons/Person';\nimport FontDownloadIcon from '@material-ui/icons/FontDownload';\nimport EmailIcon from '@material-ui/icons/Email';\nimport CropFreeIcon from '@material-ui/icons/CropFree';\nimport NotInterestedIcon from '@material-ui/icons/NotInterested';\n\nimport { getBaseUrl } from './util';\n\n// Item types\nexport const VISUALIZATION = 'VISUALIZATION';\nexport const REPORT_TABLE = 'REPORT_TABLE';\nexport const CHART = 'CHART';\nexport const MAP = 'MAP';\nexport const EVENT_REPORT = 'EVENT_REPORT';\nexport const EVENT_CHART = 'EVENT_CHART';\nexport const APP = 'APP';\nexport const REPORTS = 'REPORTS';\nexport const RESOURCES = 'RESOURCES';\nexport const USERS = 'USERS';\nexport const MESSAGES = 'MESSAGES';\nexport const TEXT = 'TEXT';\nexport const SPACER = 'SPACER';\n\nconst DOMAIN_TYPE_AGGREGATE = 'AGGREGATE';\nconst DOMAIN_TYPE_TRACKER = 'TRACKER';\n\n// Dashboard helpers\nexport const isVisualizationType = item =>\n    !!itemTypeMap[item.type].isVisualizationType;\nexport const hasMapView = itemType =>\n    itemTypeMap[itemType].domainType === DOMAIN_TYPE_AGGREGATE;\nexport const isTrackerDomainType = itemType =>\n    itemTypeMap[itemType].domainType === DOMAIN_TYPE_TRACKER;\nexport const getDefaultItemCount = itemType =>\n    itemTypeMap[itemType].defaultItemCount || 5;\nexport const getAppName = itemType => itemTypeMap[itemType].appName || '';\n\n// Item type map\nexport const itemTypeMap = {\n    [VISUALIZATION]: {\n        id: VISUALIZATION,\n        endPointName: 'visualizations',\n        propName: 'visualization',\n        pluralTitle: i18n.t('Visualizations'),\n        appUrl: id => `dhis-web-data-visualizer/#/${id}`,\n        appName: 'Data Visualizer',\n        defaultItemCount: 10,\n    },\n    [REPORT_TABLE]: {\n        id: REPORT_TABLE,\n        endPointName: 'visualizations',\n        propName: 'visualization',\n        pluralTitle: i18n.t('Pivot tables'),\n        domainType: DOMAIN_TYPE_AGGREGATE,\n        isVisualizationType: true,\n        appUrl: id => `dhis-web-data-visualizer/#/${id}`,\n        appName: 'Data Visualizer',\n    },\n    [CHART]: {\n        id: CHART,\n        endPointName: 'visualizations',\n        propName: 'visualization',\n        pluralTitle: i18n.t('Charts'),\n        domainType: DOMAIN_TYPE_AGGREGATE,\n        isVisualizationType: true,\n        appUrl: id => `dhis-web-data-visualizer/#/${id}`,\n        appName: 'Data Visualizer',\n    },\n    [MAP]: {\n        id: MAP,\n        endPointName: 'maps',\n        propName: 'map',\n        pluralTitle: i18n.t('Maps'),\n        domainType: DOMAIN_TYPE_AGGREGATE,\n        isVisualizationType: true,\n        appUrl: id => `dhis-web-maps/?id=${id}`,\n        appName: 'Maps',\n    },\n    [EVENT_REPORT]: {\n        id: EVENT_REPORT,\n        endPointName: 'eventReports',\n        propName: 'eventReport',\n        pluralTitle: i18n.t('Event reports'),\n        domainType: DOMAIN_TYPE_TRACKER,\n        isVisualizationType: true,\n        appUrl: id => `dhis-web-event-reports/?id=${id}`,\n        appName: 'Event Reports',\n    },\n    [EVENT_CHART]: {\n        id: EVENT_CHART,\n        endPointName: 'eventCharts',\n        propName: 'eventChart',\n        pluralTitle: i18n.t('Event charts'),\n        domainType: DOMAIN_TYPE_TRACKER,\n        isVisualizationType: true,\n        appUrl: id => `dhis-web-event-visualizer/?id=${id}`,\n        appName: 'Event Visualizer',\n    },\n    [APP]: {\n        endPointName: 'apps',\n        propName: 'appKey',\n        pluralTitle: i18n.t('Apps'),\n    },\n    [REPORTS]: {\n        id: REPORTS,\n        endPointName: 'reports',\n        propName: 'reports',\n        pluralTitle: i18n.t('Reports'),\n        appUrl: id =>\n            `dhis-web-reporting/getReportParams.action?mode=report&uid=${id}`,\n    },\n    [RESOURCES]: {\n        id: RESOURCES,\n        endPointName: 'resources',\n        propName: 'resources',\n        pluralTitle: i18n.t('Resources'),\n        appUrl: id => `api/documents/${id}/data`,\n    },\n    [USERS]: {\n        id: USERS,\n        endPointName: 'users',\n        propName: 'users',\n        pluralTitle: i18n.t('Users'),\n        appUrl: id => `dhis-web-dashboard-integration/profile.action?id=${id}`,\n    },\n    [TEXT]: {\n        id: TEXT,\n        propName: 'text',\n    },\n    [MESSAGES]: {\n        propName: 'messages',\n    },\n    [SPACER]: {\n        propName: 'text',\n    },\n};\n\nexport const getEndPointName = type => itemTypeMap[type].endPointName;\n\nexport const getItemUrl = (type, item, d2) => {\n    let url;\n\n    if (type === APP) {\n        url = item.launchUrl;\n    }\n\n    if (itemTypeMap[type] && itemTypeMap[type].appUrl) {\n        url = `${getBaseUrl(d2)}/${itemTypeMap[type].appUrl(item.id)}`;\n    }\n\n    return url;\n};\n\nexport const getItemIcon = type => {\n    switch (type) {\n        case REPORT_TABLE:\n        case EVENT_REPORT:\n        case REPORTS:\n            return TableIcon;\n        case CHART:\n        case EVENT_CHART:\n            return ChartIcon;\n        case MAP:\n            return MapIcon;\n        case APP:\n            return ExtensionIcon;\n        case RESOURCES:\n            return DescriptionIcon;\n        case USERS:\n            return PersonIcon;\n        case TEXT:\n            return FontDownloadIcon;\n        case MESSAGES:\n            return EmailIcon;\n        case SPACER:\n            return CropFreeIcon;\n        default:\n            return NotInterestedIcon;\n    }\n};\n","import { getInstance } from 'd2';\nimport arrayClean from 'd2-utilizr/lib/arrayClean';\n\nimport { getEndPointName } from '../modules/itemTypes';\n\n// Id, name\nexport const getIdNameFields = ({ rename } = {}) => [\n    'id',\n    `${rename ? 'displayName~rename(name)' : 'name,displayName'}`,\n];\n\n// Item\nexport const getItemFields = () => [\n    'dimensionItem~rename(id)',\n    'displayName~rename(name)',\n    'dimensionItemType',\n];\n\n// Dimension\nexport const getDimensionFields = ({ withItems }) =>\n    arrayClean([\n        'dimension',\n        'legendSet[id]',\n        'filter',\n        'programStage',\n        withItems ? `items[${getItemFields().join(',')}]` : ``,\n    ]);\n\n// Axis\nexport const getAxesFields = ({ withItems }) => [\n    `columns[${getDimensionFields({ withItems }).join(',')}]`,\n    `rows[${getDimensionFields({ withItems }).join(',')}]`,\n    `filters[${getDimensionFields({ withItems }).join(',')}]`,\n];\n\n// Favorite\nexport const getFavoriteFields = ({ withDimensions, withOptions }) => {\n    return arrayClean([\n        `${getIdNameFields({ rename: true }).join(',')}`,\n        'displayDescription~rename(description)',\n        withDimensions ? `${getAxesFields({ withItems: true }).join(',')}` : ``,\n        withOptions\n            ? [\n                  '*',\n                  '!attributeDimensions',\n                  '!attributeValues',\n                  '!category',\n                  '!categoryDimensions',\n                  '!categoryOptionGroupSetDimensions',\n                  '!columnDimensions',\n                  '!dataDimensionItems',\n                  '!dataElementDimensions',\n                  '!dataElementGroupSetDimensions',\n                  '!filterDimensions',\n                  '!itemOrganisationUnitGroups',\n                  '!lastUpdatedBy',\n                  '!organisationUnitGroupSetDimensions',\n                  '!organisationUnitLevels',\n                  '!organisationUnits',\n                  '!programIndicatorDimensions',\n                  '!relativePeriods',\n                  '!reportParams',\n                  '!rowDimensions',\n                  '!series',\n                  '!translations',\n                  '!userOrganisationUnit',\n                  '!userOrganisationUnitChildren',\n                  '!userOrganisationUnitGrandChildren',\n              ].join(',')\n            : '',\n    ]);\n};\n\nexport const getFavoritesFields = ({ withDimensions }) => [\n    `reportTable[${getFavoriteFields({ withDimensions }).join(',')}]`,\n    `chart[${['type', ...getFavoriteFields({ withDimensions })].join(',')}]`,\n    `map[${getFavoriteFields({ withDimensions }).join(',')}]`,\n    `eventReport[${getFavoriteFields({ withDimensions }).join(',')}]`,\n    `eventChart[${getFavoriteFields({ withDimensions }).join(',')}]`,\n];\n\n// List item\nexport const getListItemFields = () => [\n    `reports[${getIdNameFields({ rename: true }).join(',')}]`,\n    `resources[${getIdNameFields({ rename: true }).join(',')}]`,\n    `users[${getIdNameFields({ rename: true }).join(',')}]`,\n];\n\n// Map\nexport const getMapFields = () => [\n    `${getIdNameFields({ rename: true }).join(',')}`,\n    'user,longitude,latitude,zoom,basemap',\n    `mapViews[${getFavoriteFields({\n        withDimensions: true,\n        withOptions: true,\n    })}]`,\n];\n\n// Api\n\n// Get more info about the favorite of a dashboard item\nexport const apiFetchFavorite = (id, type, { fields }) =>\n    getInstance().then(d2 =>\n        d2.Api.getApi().get(`${getEndPointName(type)}/${id}`, {\n            fields:\n                fields ||\n                getFavoriteFields({\n                    withDimensions: true,\n                    withOptions: true,\n                }),\n        })\n    );\n","import isObject from 'lodash/isObject';\n\n// validation\nexport function orNull(param) {\n    return param === undefined ? null : param;\n}\n\nexport function orArray(param) {\n    return Array.isArray(param) ? param : [];\n}\n\nexport function orObject(param) {\n    return isObject(param) ? param : {};\n}\n\n// array\nexport function arrayGetById(array, id) {\n    return array.find(item => item.id === id);\n}\n\n// object\nexport function arrayToIdMap(array) {\n    return array.reduce((obj, item) => {\n        obj[item.id] = item;\n        return obj;\n    }, {});\n}\n\n// date\nexport function getDate() {\n    const y = Math.floor(Math.random() * 3) + 2015;\n    const M = Math.floor(Math.random() * 12) + 1;\n    const d = Math.floor(Math.random() * 28) + 1;\n    // const h = Math.floor(Math.random() * 23) + 1;\n    // const m = Math.floor(Math.random() * 59) + 1;\n    // const s = Math.floor(Math.random() * 59) + 1;\n\n    return new Date(`${y}-${M}-${d}`)\n        .toJSON()\n        .replace('T', ' ')\n        .substr(0, 10);\n}\n\nexport const formatDate = (value, uiLocale) => {\n    if (typeof global.Intl !== 'undefined' && Intl.DateTimeFormat) {\n        const locale = uiLocale || 'en';\n        return new Intl.DateTimeFormat(locale, {\n            year: 'numeric',\n            month: 'short',\n            day: 'numeric',\n        }).format(new Date(value));\n    }\n\n    return value.substr(0, 19).replace('T', ' ');\n};\n\n/**\n * Sorts an array of objects based on provided date property\n *\n * @param {Array} items Array of objects\n * @param {String} dateProp Name of the date property to be used for sorting\n * @param {Boolean} ascending Whether to sort ascending or descending\n */\nexport const sortByDate = (items, dateProp, ascending = true) => {\n    const values = Object.values(items);\n\n    values.sort((a, b) => {\n        const aDate = new Date(a[dateProp]);\n        const bDate = new Date(b[dateProp]);\n\n        return ascending ? aDate - bDate : bDate - aDate;\n    });\n\n    return values;\n};\n\n// reducer validator\nexport const validateReducer = (value, defaultValue) =>\n    value === undefined || value === null ? defaultValue : value;\n\nexport const getBaseUrl = d2 => {\n    const api = d2.Api.getApi();\n    const idx = api.baseUrl.indexOf('/api');\n    return idx > -1 ? api.baseUrl.slice(0, idx) : api.baseUrl;\n};\n\nexport const getWithoutId = object => ({\n    ...object,\n    id: undefined,\n});\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"Item_list__2oHc1\",\"item\":\"Item_item__lO40M\",\"itemicon\":\"Item_itemicon__dv5ah\",\"link\":\"Item_link__2gULT\",\"deleteicon\":\"Item_deleteicon__3c7bl\",\"deletebutton\":\"Item_deletebutton__1DfY5\"};","export const RECEIVED_USER = 'RECEIVED_USER';\n\nexport const DEFAULT_STATE_USER = {\n    id: '',\n    username: '',\n    uiLocale: '',\n    isSuperuser: false,\n};\n\nexport default (state = DEFAULT_STATE_USER, action) => {\n    switch (action.type) {\n        case RECEIVED_USER: {\n            return fromD2ToUserObj(action.value);\n        }\n        default:\n            return state;\n    }\n};\n\nfunction fromD2ToUserObj(d2Object) {\n    return {\n        id: d2Object.id,\n        username: d2Object.username,\n        uiLocale: d2Object.settings.keyUiLocale,\n        isSuperuser: d2Object.authorities.has('ALL'),\n    };\n}\n\n// selectors\n\nexport const sGetUserId = state => state.user.id;\nexport const sGetUserUsername = state => state.user.username;\nexport const sGetIsSuperuser = state => state.user.isSuperuser;\nexport const sGetUiLocale = state => state.user.uiLocale;\n","import { TEXT, SPACER } from './itemTypes';\n\nexport const spacerContent = 'SPACER_ITEM_FOR_DASHBOARD_LAYOUT_CONVENIENCE';\nexport const emptyTextItemContent = 'TEXT_ITEM_WITH_NO_CONTENT';\n\nconst isBackendSpacerType = item =>\n    item.type === TEXT && item.text === spacerContent;\nconst isUiSpacerType = item => item.type === SPACER;\nconst isTextType = item => item.type === TEXT && item.text !== spacerContent;\n\nexport const convertUiItemsToBackend = items => {\n    return items.map(item => {\n        let text = null;\n        if (isUiSpacerType(item)) {\n            text = spacerContent;\n        } else if (isTextType(item)) {\n            text = item.text || emptyTextItemContent;\n        }\n\n        return {\n            ...item,\n            ...(text ? { text } : {}),\n        };\n    });\n};\n\nexport const convertBackendItemsToUi = items => {\n    return items.map(item => {\n        const type = isBackendSpacerType(item) ? SPACER : item.type;\n\n        const text = isTextType(item)\n            ? item.text === emptyTextItemContent\n                ? ''\n                : item.text\n            : null;\n\n        return {\n            ...item,\n            ...(text !== null ? { text } : {}),\n            type,\n        };\n    });\n};\n","/** @module reducers/dashboards */\n\nimport arrayFrom from 'd2-utilizr/lib/arrayFrom';\nimport arraySort from 'd2-utilizr/lib/arraySort';\n\nimport { orArray, orObject } from '../modules/util';\nimport { convertBackendItemsToUi } from '../modules/uiBackendItemConverter';\n\nexport const SET_DASHBOARDS = 'SET_DASHBOARDS';\nexport const ADD_DASHBOARDS = 'ADD_DASHBOARDS';\nexport const SET_DASHBOARD_STARRED = 'SET_DASHBOARD_STARRED';\nexport const SET_DASHBOARD_DISPLAY_NAME = 'SET_DASHBOARD_DISPLAY_NAME';\nexport const SET_DASHBOARD_ITEMS = 'SET_DASHBOARD_ITEMS';\n\nexport const DEFAULT_STATE_DASHBOARDS = {\n    byId: null,\n    items: [],\n};\n\n// reducer helper functions\n\nconst updateDashboardProp = ({ state, dashboardId, prop, value }) => ({\n    byId: {\n        ...state.byId,\n        [dashboardId]: {\n            ...state.byId[dashboardId],\n            [prop]: value,\n        },\n    },\n    items: state.items,\n});\n\n/**\n * Reducer that computes and returns the new state based on the given action\n * @function\n * @param {Object} state The current state\n * @param {Object} action The action to be evaluated\n * @returns {Object}\n */\nexport default (state = DEFAULT_STATE_DASHBOARDS, action) => {\n    switch (action.type) {\n        case SET_DASHBOARDS: {\n            return {\n                byId: action.value,\n                items: [],\n            };\n        }\n        case ADD_DASHBOARDS: {\n            return {\n                ...state,\n                byId: {\n                    ...state.byId,\n                    ...action.value,\n                },\n            };\n        }\n        case SET_DASHBOARD_STARRED: {\n            return updateDashboardProp({\n                state,\n                dashboardId: action.dashboardId,\n                prop: 'starred',\n                value: action.value,\n            });\n        }\n        case SET_DASHBOARD_DISPLAY_NAME: {\n            return updateDashboardProp({\n                state,\n                dashboardId: action.dashboardId,\n                prop: 'displayName',\n                value: action.value,\n            });\n        }\n        case SET_DASHBOARD_ITEMS: {\n            return {\n                ...state,\n                items: action.value,\n            };\n        }\n        default:\n            return state;\n    }\n};\n\n// root selector\n\nexport const sGetDashboardsRoot = state => state.dashboards;\n\n// selector level 1\n\n/**\n * Selector which returns a dashboard by id from the state object\n * If no matching dashboard is found it returns undefined\n * If dashboards.byId is null, then the dashboards api request\n * has not yet completed. If dashboards.byId is an empty object\n * then the dashboards api request is complete, but no dashboards\n * were returned\n *\n * @function\n * @param {Object} state The current state\n * @param {Number} id The id of the dashboard\n * @returns {Object | undefined}\n */\nexport const sGetDashboardById = (state, id) =>\n    orObject(sGetDashboardsRoot(state).byId)[id];\n\nexport const sDashboardsIsFetching = state => {\n    return sGetDashboardsRoot(state).byId === null;\n};\n\n/**\n * Selector which returns all dashboards (the byId object)\n *\n * @function\n * @param {Object} state The current state\n * @returns {Object | undefined}\n */\nexport const sGetAllDashboards = state =>\n    orObject(sGetDashboardsRoot(state).byId);\n\n/**\n * Selector which returns the current dashboard items\n *\n * @function\n * @param {Object} state The current state\n * @returns {Array}\n */\nexport const sGetDashboardItems = state => sGetDashboardsRoot(state).items;\n\n// selector level 2\n\nexport const sGetStarredDashboards = state =>\n    Object.values(sGetAllDashboards(state)).filter(\n        dashboard => dashboard.starred === true\n    );\n\nexport const sGetUnstarredDashboards = state =>\n    Object.values(sGetAllDashboards(state)).filter(\n        dashboard => dashboard.starred === false\n    );\n\n// selector level 3\n\nexport const sGetStarredDashboardIds = state => {\n    return sGetStarredDashboards(state).map(dashboard => dashboard.id);\n};\n\nexport const sGetUnstarredDashboardIds = state =>\n    sGetUnstarredDashboards(state).map(dashboard => dashboard.id);\n\nexport const sGetDashboardsSortedByStarred = state => [\n    ...arraySort(sGetStarredDashboards(state), 'ASC', 'displayName'),\n    ...arraySort(sGetUnstarredDashboards(state), 'ASC', 'displayName'),\n];\n\n// utils\n\n/**\n * Returns the array of dashboards, customized for ui\n * @function\n * @param {Array} data The original dashboard list\n * @returns {Array}\n */\nexport const getCustomDashboards = data =>\n    arrayFrom(data).map(d => ({\n        id: d.id,\n        name: d.name,\n        displayName: d.displayName,\n        description: d.description,\n        displayDescription: d.displayDescription,\n        starred: d.favorite,\n        owner: d.user.name,\n        created: d.created\n            .split('T')\n            .join(' ')\n            .substr(0, 16),\n        lastUpdated: d.lastUpdated\n            .split('T')\n            .join(' ')\n            .substr(0, 16),\n        access: d.access,\n        numberOfItems: orArray(d.dashboardItems).length,\n        dashboardItems: convertBackendItemsToUi(d.dashboardItems),\n    }));\n","/** @module reducers/editDashboard */\nimport update from 'immutability-helper';\nimport isEmpty from 'lodash/isEmpty';\nimport { orArray, orObject } from '../modules/util';\n\nexport const RECEIVED_EDIT_DASHBOARD = 'RECEIVED_EDIT_DASHBOARD';\nexport const RECEIVED_NOT_EDITING = 'RECEIVED_NOT_EDITING';\nexport const START_NEW_DASHBOARD = 'START_NEW_DASHBOARD';\nexport const RECEIVED_TITLE = 'RECEIVED_TITLE';\nexport const RECEIVED_DESCRIPTION = 'RECEIVED_DESCRIPTION';\nexport const ADD_DASHBOARD_ITEM = 'ADD_DASHBOARD_ITEM';\nexport const REMOVE_DASHBOARD_ITEM = 'REMOVE_DASHBOARD_ITEM';\nexport const UPDATE_DASHBOARD_ITEM = 'UPDATE_DASHBOARD_ITEM';\nexport const RECEIVED_DASHBOARD_LAYOUT = 'RECEIVED_DASHBOARD_LAYOUT';\n\nexport const DEFAULT_STATE_EDIT_DASHBOARD = {};\nexport const NEW_DASHBOARD_STATE = {\n    id: '',\n    name: '',\n    access: {},\n    description: '',\n    dashboardItems: [],\n};\n\nexport default (state = DEFAULT_STATE_EDIT_DASHBOARD, action) => {\n    switch (action.type) {\n        case RECEIVED_EDIT_DASHBOARD: {\n            const newState = {};\n            Object.keys(NEW_DASHBOARD_STATE).map(\n                k => (newState[k] = action.value[k])\n            );\n            return newState;\n        }\n        case RECEIVED_NOT_EDITING:\n            return DEFAULT_STATE_EDIT_DASHBOARD;\n        case START_NEW_DASHBOARD:\n            return NEW_DASHBOARD_STATE;\n        case RECEIVED_TITLE: {\n            return Object.assign({}, state, { name: action.value });\n        }\n        case RECEIVED_DESCRIPTION: {\n            return Object.assign({}, state, {\n                description: action.value,\n            });\n        }\n        case ADD_DASHBOARD_ITEM:\n            return update(state, {\n                dashboardItems: { $unshift: [action.value] },\n            });\n        case REMOVE_DASHBOARD_ITEM: {\n            const idToRemove = action.value;\n\n            const dashboardItemIndex = state.dashboardItems.findIndex(\n                item => item.id === idToRemove\n            );\n\n            if (dashboardItemIndex > -1) {\n                return update(state, {\n                    dashboardItems: {\n                        $splice: [[dashboardItemIndex, 1]],\n                    },\n                });\n            }\n\n            return state;\n        }\n        case RECEIVED_DASHBOARD_LAYOUT: {\n            const stateItems = orArray(state.dashboardItems);\n            let layoutHasChanged = false;\n\n            const newStateItems = action.value.map(({ x, y, w, h, i }) => {\n                const stateItem = stateItems.find(si => si.id === i);\n\n                if (\n                    !(\n                        stateItem.x === x &&\n                        stateItem.y === y &&\n                        stateItem.w === w &&\n                        stateItem.h === h\n                    )\n                ) {\n                    layoutHasChanged = true;\n                    return Object.assign({}, stateItem, { w, h, x, y });\n                }\n\n                return stateItem;\n            });\n\n            return layoutHasChanged\n                ? {\n                      ...state,\n                      dashboardItems: newStateItems,\n                  }\n                : state;\n        }\n        case UPDATE_DASHBOARD_ITEM: {\n            const dashboardItem = action.value;\n\n            const dashboardItemIndex = state.dashboardItems.findIndex(\n                item => item.id === dashboardItem.id\n            );\n\n            if (dashboardItemIndex > -1) {\n                const newState = update(state, {\n                    dashboardItems: {\n                        $splice: [[dashboardItemIndex, 1, dashboardItem]],\n                    },\n                });\n\n                return newState;\n            }\n\n            return state;\n        }\n        default:\n            return state;\n    }\n};\n\n// root selector\n\nexport const sGetEditDashboardRoot = state => state.editDashboard;\n\n// selectors\n\nexport const sGetIsEditing = state => !isEmpty(state.editDashboard);\n\nexport const sGetIsNewDashboard = state => {\n    return (\n        !isEmpty(state.editDashboard) && sGetEditDashboardRoot(state).id === ''\n    );\n};\n\nexport const sGetEditDashboardItems = state =>\n    orObject(sGetEditDashboardRoot(state)).dashboardItems;\n","export const CLEAR_EDIT_ITEM_FILTERS = 'CLEAR_EDIT_ITEM_FILTERS';\nexport const REMOVE_EDIT_ITEM_FILTER = 'REMOVE_EDIT_ITEM_FILTER';\nexport const SET_EDIT_ITEM_FILTERS = 'SET_EDIT_ITEM_FILTERS';\n\nexport const DEFAULT_STATE_EDIT_ITEM_FILTERS = {};\n\nexport default (state = DEFAULT_STATE_EDIT_ITEM_FILTERS, action) => {\n    switch (action.type) {\n        case REMOVE_EDIT_ITEM_FILTER: {\n            const newState = { ...state };\n\n            delete newState[action.id];\n\n            return newState;\n        }\n        case SET_EDIT_ITEM_FILTERS: {\n            return action.filters;\n        }\n        case CLEAR_EDIT_ITEM_FILTERS: {\n            return DEFAULT_STATE_EDIT_ITEM_FILTERS;\n        }\n        default:\n            return state;\n    }\n};\n\n// selectors\n\nexport const sGetEditItemFiltersRoot = state => state.editItemFilters;\n\nexport const sGetEditFiltersKeys = state =>\n    Object.keys(sGetEditItemFiltersRoot(state));\n","/** @module reducers/selected */\nimport { combineReducers } from 'redux';\n\nimport { validateReducer } from '../modules/util';\n\nexport const SET_SELECTED_ID = 'SET_SELECTED_ID';\nexport const SET_SELECTED_ISLOADING = 'SET_SELECTED_ISLOADING';\nexport const SET_SELECTED_SHOWDESCRIPTION = 'SET_SELECTED_SHOWDESCRIPTION';\n\nexport const DEFAULT_STATE_SELECTED_ID = null;\nexport const DEFAULT_STATE_SELECTED_ISLOADING = false;\nexport const DEFAULT_STATE_SELECTED_SHOWDESCRIPTION = false;\n\n/**\n * Reducer functions that computes and returns the new state based on the given action\n * @function\n * @param {Object} state The current state\n * @param {Object} action The action to be evaluated\n */\nconst id = (state = DEFAULT_STATE_SELECTED_ID, action) => {\n    switch (action.type) {\n        case SET_SELECTED_ID:\n            return validateReducer(action.value, DEFAULT_STATE_SELECTED_ID);\n        default:\n            return state;\n    }\n};\n\nconst isLoading = (state = DEFAULT_STATE_SELECTED_ISLOADING, action) => {\n    switch (action.type) {\n        case SET_SELECTED_ISLOADING:\n            return validateReducer(\n                action.value,\n                DEFAULT_STATE_SELECTED_ISLOADING\n            );\n        default:\n            return state;\n    }\n};\n\nconst showDescription = (\n    state = DEFAULT_STATE_SELECTED_SHOWDESCRIPTION,\n    action\n) => {\n    switch (action.type) {\n        case SET_SELECTED_SHOWDESCRIPTION:\n            return validateReducer(\n                action.value,\n                DEFAULT_STATE_SELECTED_SHOWDESCRIPTION\n            );\n        default:\n            return state;\n    }\n};\n\nexport default combineReducers({\n    id,\n    isLoading,\n    showDescription,\n});\n\n// Selectors\n\nexport const sGetSelectedRoot = state => state.selected;\n\nexport const sGetSelectedId = state => sGetSelectedRoot(state).id;\n\nexport const sGetSelectedIsLoading = state => sGetSelectedRoot(state).isLoading;\n\nexport const sGetSelectedShowDescription = state =>\n    sGetSelectedRoot(state).showDescription;\n","import {\n    REMOVE_EDIT_ITEM_FILTER,\n    SET_EDIT_ITEM_FILTERS,\n    CLEAR_EDIT_ITEM_FILTERS,\n} from '../reducers/editItemFilters';\n\n// actions\n\nexport const acRemoveEditItemFilter = id => ({\n    type: REMOVE_EDIT_ITEM_FILTER,\n    id,\n});\n\nexport const acClearEditItemFilters = () => ({\n    type: CLEAR_EDIT_ITEM_FILTERS,\n});\n\nexport const acSetEditItemFilters = filters => ({\n    type: SET_EDIT_ITEM_FILTERS,\n    filters,\n});\n","export const CLEAR_ITEM_FILTERS = 'CLEAR_ITEM_FILTERS';\nexport const SET_ITEM_FILTERS = 'SET_ITEM_FILTERS';\nexport const ADD_ITEM_FILTER = 'ADD_ITEM_FILTER';\nexport const REMOVE_ITEM_FILTER = 'REMOVE_ITEM_FILTER';\n\nexport const DEFAULT_STATE_ITEM_FILTERS = {};\n\nexport default (state = DEFAULT_STATE_ITEM_FILTERS, action) => {\n    switch (action.type) {\n        case ADD_ITEM_FILTER: {\n            return {\n                ...state,\n                [action.filter.id]: action.filter.value,\n            };\n        }\n        case REMOVE_ITEM_FILTER: {\n            const newState = { ...state };\n\n            delete newState[action.id];\n\n            return newState;\n        }\n        case SET_ITEM_FILTERS: {\n            return action.filters;\n        }\n        case CLEAR_ITEM_FILTERS: {\n            return DEFAULT_STATE_ITEM_FILTERS;\n        }\n        default:\n            return state;\n    }\n};\n\n// selectors\n\nexport const sGetItemFiltersRoot = state => state.itemFilters;\n\nexport const sGetFiltersKeys = state => Object.keys(sGetItemFiltersRoot(state));\n","import {\n    ADD_ITEM_FILTER,\n    REMOVE_ITEM_FILTER,\n    SET_ITEM_FILTERS,\n    CLEAR_ITEM_FILTERS,\n} from '../reducers/itemFilters';\n\nexport const FILTER_ORG_UNIT = 'ou';\n\n// actions\n\nexport const acAddItemFilter = filter => ({\n    type: ADD_ITEM_FILTER,\n    filter,\n});\n\nexport const acRemoveItemFilter = id => ({\n    type: REMOVE_ITEM_FILTER,\n    id,\n});\n\nexport const acClearItemFilters = () => ({\n    type: CLEAR_ITEM_FILTERS,\n});\n\nexport const acSetItemFilters = filters => ({\n    type: SET_ITEM_FILTERS,\n    filters,\n});\n","import update from 'immutability-helper';\nimport { arrayToIdMap } from '../modules/util';\n\nexport const RECEIVED_MESSAGES = 'RECEIVED_MESSAGES';\n\nexport default (state = {}, action) => {\n    switch (action.type) {\n        case RECEIVED_MESSAGES: {\n            const conversations = arrayToIdMap(action.value);\n\n            const newState = update(state, { $merge: conversations });\n\n            return newState;\n        }\n        default:\n            return state;\n    }\n};\n\n// selectors\n\nexport const sGetMessagesRoot = state => state.messages;\n","import { getInstance } from 'd2';\n\nexport const getMessages = () => {\n    const fields =\n        'id,messageCount,lastUpdated,messageType,displayName,read,messages[id,read,sender[id,displayName],text,lastUpdated]';\n    const url = `/messageConversations?fields=${fields}&order=read:asc&pageSize=200`;\n    return getInstance()\n        .then(d2 => d2.Api.getApi().get(url))\n        .catch(error => console.log('Error:', error));\n};\n","export const RECEIVED_SNACKBAR_MESSAGE = 'RECEIVED_SNACKBAR_MESSAGE';\nexport const CLOSE_SNACKBAR = 'CLOSE_SNACKBAR';\n\nexport const DEFAULT_STATE_SNACKBAR = {\n    message: {},\n    duration: null,\n    open: false,\n};\n\nexport default (state = DEFAULT_STATE_SNACKBAR, action) => {\n    switch (action.type) {\n        case RECEIVED_SNACKBAR_MESSAGE: {\n            return { ...state, ...action.value };\n        }\n        case CLOSE_SNACKBAR: {\n            return DEFAULT_STATE_SNACKBAR;\n        }\n        default:\n            return state;\n    }\n};\n\n// selectors\n\nexport const sGetSnackbar = state => state.snackbar || DEFAULT_STATE_SNACKBAR;\n","import {\n    RECEIVED_SNACKBAR_MESSAGE,\n    CLOSE_SNACKBAR,\n} from '../reducers/snackbar';\n\nexport const acReceivedSnackbarMessage = value => ({\n    type: RECEIVED_SNACKBAR_MESSAGE,\n    value,\n});\n\nexport const acCloseSnackbar = () => ({\n    type: CLOSE_SNACKBAR,\n});\n","import { orObject } from '../modules/util';\nimport objectClean from 'd2-utilizr/lib/objectClean';\n\n/** @module reducers/visualizations */\n\nexport const ADD_VISUALIZATION = 'ADD_VISUALIZATION';\nexport const SET_ACTIVE_VISUALIZATION_TYPE = 'SET_ACTIVE_VISUALIZATION_TYPE';\n\nexport const DEFAULT_STATE_VISUALIZATIONS = {};\n\nconst isEmpty = p => p === undefined || p === null;\n\nexport default (state = DEFAULT_STATE_VISUALIZATIONS, action) => {\n    switch (action.type) {\n        case ADD_VISUALIZATION: {\n            return {\n                ...state,\n                [action.value.id]: objectClean(\n                    {\n                        ...orObject(state[action.value.id]),\n                        ...action.value,\n                    },\n                    isEmpty\n                ),\n            };\n        }\n        case SET_ACTIVE_VISUALIZATION_TYPE: {\n            return {\n                ...state,\n                [action.id]: objectClean(\n                    {\n                        ...orObject(state[action.id]),\n                        activeType: action.activeType,\n                    },\n                    isEmpty\n                ),\n            };\n        }\n        default:\n            return state;\n    }\n};\n\n// root selector\nexport const sGetVisualizationsRoot = state => state.visualizations;\n\n// selectors level 1\nexport const sGetVisualization = (state, id) => {\n    return sGetVisualizationsRoot(state)[id];\n};\n","import {\n    ADD_VISUALIZATION,\n    SET_ACTIVE_VISUALIZATION_TYPE,\n} from '../reducers/visualizations';\n\nexport const acAddVisualization = value => ({\n    type: ADD_VISUALIZATION,\n    value,\n});\n\nexport const acSetActiveVisualizationType = (id, activeType) => {\n    const action = {\n        type: SET_ACTIVE_VISUALIZATION_TYPE,\n        id,\n        activeType,\n    };\n\n    return action;\n};\n","import arrayClean from 'd2-utilizr/lib/arrayClean';\nimport {\n    getListItemFields,\n    getFavoritesFields,\n    getIdNameFields,\n} from './metadata';\n\n// Helper functions\n\nexport const onError = error => console.log('Error: ', error);\n\n// Dashboard item\nexport const getDashboardItemsFields = ({ withFavorite } = {}) =>\n    arrayClean([\n        'id',\n        'type',\n        'shape',\n        'x',\n        'y',\n        'width~rename(w)',\n        'height~rename(h)',\n        'messages',\n        'text',\n        'appKey',\n        `${getListItemFields().join(',')}`,\n        withFavorite\n            ? `${getFavoritesFields({\n                  withDimensions: withFavorite.withDimensions,\n              }).join(',')}`\n            : ``,\n    ]);\n\n// Dashboard\nexport const getDashboardFields = ({ withItems, withFavorite } = {}) =>\n    arrayClean([\n        `${getIdNameFields().join(',')}`,\n        'description',\n        'displayDescription',\n        'favorite',\n        `user[${getIdNameFields({ rename: true }).join(',')}]`,\n        'created',\n        'lastUpdated',\n        'access',\n        withItems\n            ? `dashboardItems[${getDashboardItemsFields({\n                  withFavorite,\n              }).join(',')}]`\n            : ``,\n    ]);\n","import { getInstance } from 'd2';\nimport arrayClean from 'd2-utilizr/lib/arrayClean';\nimport { onError, getDashboardFields } from './index';\n\n// Get \"all\" dashboards on startup\nexport const apiFetchDashboards = () =>\n    getInstance()\n        .then(d2 =>\n            d2.models.dashboard.list({\n                fields: [\n                    getDashboardFields().join(','),\n                    'dashboardItems[id]',\n                ].join(','),\n                paging: 'false',\n            })\n        )\n        .catch(onError);\n\n// Get more info about selected dashboard\nexport const apiFetchDashboard = id =>\n    getInstance()\n        .then(d2 =>\n            d2.models.dashboard.get(id, {\n                fields: arrayClean(\n                    getDashboardFields({\n                        withItems: true,\n                        withFavorite: { withDimensions: false },\n                    })\n                ).join(','),\n            })\n        )\n        .catch(onError);\n\n// Star dashboard\nexport const apiStarDashboard = (id, isStarred) => {\n    const url = `dashboards/${id}/favorite`;\n\n    getInstance().then(d2 => {\n        if (isStarred) {\n            d2.Api.getApi().post(url);\n        } else {\n            d2.Api.getApi().delete(url);\n        }\n    });\n};\n\nexport const apiDeleteDashboard = id => {\n    return getInstance()\n        .then(d2 => {\n            return d2.models.dashboards\n                .get(id)\n                .then(dashboard => dashboard.delete());\n        })\n        .catch(onError);\n};\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport Snackbar from '@material-ui/core/Snackbar';\nimport PropTypes from 'prop-types';\n\nimport { sGetSnackbar } from '../../reducers/snackbar';\nimport { acCloseSnackbar } from '../../actions/snackbar';\n\nconst LOADING_DASHBOARD = 'LOADING_DASHBOARD';\nexport const loadingDashboardMsg = { name: '', type: LOADING_DASHBOARD };\n\nconst SnackbarMessageContent = ({ message }) => {\n    if (typeof message === 'object') {\n        //future message types:  switch(message.type)\n        return (\n            <span>\n                Loading <span style={{ fontWeight: 800 }}>{message.name}</span>{' '}\n                dashboard\n            </span>\n        );\n    }\n    return message;\n};\n\nexport const SnackbarMessage = props => {\n    return (\n        <Snackbar\n            style={{ zIndex: 10001 }}\n            open={props.snackbarOpen}\n            message={<SnackbarMessageContent message={props.snackbarMessage} />}\n            autoHideDuration={props.snackbarDuration}\n            onClose={props.onCloseSnackbar}\n        />\n    );\n};\n\nconst mapStateToProps = state => {\n    const { message, duration, open } = sGetSnackbar(state);\n    return {\n        snackbarOpen: open,\n        snackbarMessage: message,\n        snackbarDuration: duration,\n    };\n};\n\nSnackbarMessage.propTypes = {\n    snackbarDuration: PropTypes.string,\n    snackbarMessage: PropTypes.object,\n    snackbarOpen: PropTypes.bool,\n    onCloseSnackbar: PropTypes.func,\n};\n\nexport default connect(\n    mapStateToProps,\n    {\n        onCloseSnackbar: acCloseSnackbar,\n    }\n)(SnackbarMessage);\n","import { getCustomDashboards, sGetDashboardById } from '../reducers/dashboards';\nimport { sGetIsEditing } from '../reducers/editDashboard';\nimport { sGetEditItemFiltersRoot } from '../reducers/editItemFilters';\nimport {\n    SET_SELECTED_ID,\n    SET_SELECTED_ISLOADING,\n    SET_SELECTED_SHOWDESCRIPTION,\n    sGetSelectedIsLoading,\n    sGetSelectedId,\n} from '../reducers/selected';\nimport { sGetUserUsername } from '../reducers/user';\n\nimport { acSetDashboardItems, acAppendDashboards } from './dashboards';\nimport { acClearEditItemFilters } from './editItemFilters';\nimport { acClearItemFilters, acSetItemFilters } from './itemFilters';\nimport { tGetMessages } from '../components/Item/MessagesItem/actions';\nimport { acReceivedSnackbarMessage, acCloseSnackbar } from './snackbar';\nimport { acAddVisualization } from './visualizations';\n\nimport { apiFetchDashboard } from '../api/dashboards';\nimport { storePreferredDashboardId } from '../api/localStorage';\n\nimport { withShape } from '../components/ItemGrid/gridUtil';\nimport { loadingDashboardMsg } from '../components/SnackbarMessage/SnackbarMessage';\nimport { extractFavorite } from '../components/Item/VisualizationItem/plugin';\n\nimport {\n    REPORT_TABLE,\n    CHART,\n    MAP,\n    EVENT_REPORT,\n    EVENT_CHART,\n    MESSAGES,\n} from '../modules/itemTypes';\nimport { orObject } from '../modules/util';\n\n// actions\n\nexport const acSetSelectedId = value => ({\n    type: SET_SELECTED_ID,\n    value,\n});\n\nexport const acSetSelectedIsLoading = value => ({\n    type: SET_SELECTED_ISLOADING,\n    value,\n});\n\nexport const acSetSelectedShowDescription = value => ({\n    type: SET_SELECTED_SHOWDESCRIPTION,\n    value,\n});\n\nexport const tLoadDashboard = id => async dispatch => {\n    try {\n        const dash = await apiFetchDashboard(id);\n\n        dispatch(acAppendDashboards(dash));\n\n        return Promise.resolve(dash);\n    } catch (err) {\n        console.log('Error: ', err);\n        return err;\n    }\n};\n\n// thunks\nexport const tSetSelectedDashboardById = id => async (dispatch, getState) => {\n    dispatch(acSetSelectedIsLoading(true));\n\n    const snackbarTimeout = setTimeout(() => {\n        const dashboardName = orObject(sGetDashboardById(getState(), id))\n            .displayName;\n        if (sGetSelectedIsLoading(getState()) && dashboardName) {\n            loadingDashboardMsg.name = dashboardName;\n\n            dispatch(\n                acReceivedSnackbarMessage({\n                    message: loadingDashboardMsg,\n                    open: true,\n                })\n            );\n        }\n    }, 500);\n\n    const onSuccess = selected => {\n        const customDashboard = getCustomDashboards(selected)[0];\n\n        dispatch(\n            acSetDashboardItems(withShape(customDashboard.dashboardItems))\n        );\n\n        storePreferredDashboardId(sGetUserUsername(getState()), id);\n\n        // add visualizations to store\n        customDashboard.dashboardItems.forEach(item => {\n            switch (item.type) {\n                case REPORT_TABLE:\n                case CHART:\n                case MAP:\n                case EVENT_REPORT:\n                case EVENT_CHART:\n                    dispatch(acAddVisualization(extractFavorite(item)));\n                    break;\n                case MESSAGES:\n                    dispatch(tGetMessages(id));\n                    break;\n                default:\n                    break;\n            }\n        });\n\n        const state = getState();\n        if (id === sGetSelectedId(state)) {\n            if (sGetIsEditing(state)) {\n                // disable filters when switching to edit mode\n                dispatch(acClearItemFilters());\n            } else {\n                // enable filters when switching to view mode\n                dispatch(acSetItemFilters(sGetEditItemFiltersRoot(state)));\n            }\n        } else {\n            // clear filters when switching dashboard\n            dispatch(acClearEditItemFilters());\n            dispatch(acClearItemFilters());\n        }\n\n        dispatch(acSetSelectedId(id));\n\n        dispatch(acSetSelectedIsLoading(false));\n\n        clearTimeout(snackbarTimeout);\n\n        dispatch(acCloseSnackbar());\n\n        return selected;\n    };\n\n    const onError = error => {\n        console.log('Error: ', error);\n        return error;\n    };\n\n    try {\n        const selected = await dispatch(tLoadDashboard(id));\n\n        return onSuccess(selected);\n    } catch (err) {\n        return onError(err);\n    }\n};\n","export const getPreferredDashboardId = username =>\n    localStorage.getItem(`dhis2.dashboard.current.${username}`) || undefined;\n\nexport const storePreferredDashboardId = (username, dashboardId) => {\n    localStorage.setItem(`dhis2.dashboard.current.${username}`, dashboardId);\n};\n","import { RECEIVED_MESSAGES } from '../../../reducers/messages';\nimport { getMessages } from '../../../api/messages';\n\nconst onError = (action, error) => {\n    console.log(`Error in action ${action}: ${error}`);\n    return error;\n};\n\nexport const receivedMessages = value => ({\n    type: RECEIVED_MESSAGES,\n    value,\n});\n\nexport const tGetMessages = () => async dispatch => {\n    try {\n        const messages = await getMessages();\n        const { messageConversations } = messages;\n\n        return dispatch(receivedMessages(messageConversations));\n    } catch (err) {\n        return onError('Get Messages', err);\n    }\n};\n","import { getInstance } from 'd2';\n\nconst onError = error => console.log('Error: ', error);\n\nconst saveDashboard = (dashboard, data) => {\n    const { name, description, dashboardItems } = data;\n\n    dashboard.name = name;\n    dashboard.description = description;\n    dashboard.dashboardItems = dashboardItems.map(item =>\n        Object.assign({}, item, { width: item.w, height: item.h })\n    );\n\n    return dashboard.save().then(msg => msg.response.uid);\n};\n\nexport const updateDashboard = data => {\n    return getInstance()\n        .then(d2 => {\n            return d2.models.dashboards\n                .get(data.id)\n                .then(dashboard => saveDashboard(dashboard, data));\n        })\n        .catch(onError);\n};\n\nexport const postDashboard = data => {\n    return getInstance().then(d2 => {\n        const dashboard = d2.models.dashboards.create();\n\n        return saveDashboard(dashboard, data);\n    });\n};\n","import { generateUid } from 'd2/uid';\n\nimport {\n    RECEIVED_EDIT_DASHBOARD,\n    START_NEW_DASHBOARD,\n    RECEIVED_NOT_EDITING,\n    RECEIVED_TITLE,\n    RECEIVED_DESCRIPTION,\n    RECEIVED_DASHBOARD_LAYOUT,\n    ADD_DASHBOARD_ITEM,\n    UPDATE_DASHBOARD_ITEM,\n    REMOVE_DASHBOARD_ITEM,\n} from '../reducers/editDashboard';\nimport { sGetEditDashboardRoot } from '../reducers/editDashboard';\nimport { updateDashboard, postDashboard } from '../api/editDashboard';\nimport { tSetSelectedDashboardById } from '../actions/selected';\nimport { NEW_ITEM_SHAPE } from '../components/ItemGrid/gridUtil';\nimport { itemTypeMap } from '../modules/itemTypes';\nimport { convertUiItemsToBackend } from '../modules/uiBackendItemConverter';\n\nconst onError = error => {\n    console.log('Error (Saving Dashboard): ', error);\n    return error;\n};\n\n// actions\n\nexport const acSetEditDashboard = (dashboard, items) => {\n    const val = {\n        ...dashboard,\n        dashboardItems: items,\n    };\n\n    return {\n        type: RECEIVED_EDIT_DASHBOARD,\n        value: val,\n    };\n};\n\nexport const acSetEditNewDashboard = () => ({\n    type: START_NEW_DASHBOARD,\n});\n\nexport const acClearEditDashboard = () => ({\n    type: RECEIVED_NOT_EDITING,\n});\n\nexport const acSetDashboardTitle = value => ({\n    type: RECEIVED_TITLE,\n    value,\n});\n\nexport const acSetDashboardDescription = value => ({\n    type: RECEIVED_DESCRIPTION,\n    value,\n});\n\nexport const acUpdateDashboardLayout = value => ({\n    type: RECEIVED_DASHBOARD_LAYOUT,\n    value,\n});\n\nexport const acAddDashboardItem = item => {\n    const type = item.type;\n    delete item.type;\n    const itemPropName = itemTypeMap[type].propName;\n\n    return {\n        type: ADD_DASHBOARD_ITEM,\n        value: {\n            id: generateUid(),\n            type,\n            [itemPropName]: item.content,\n            ...NEW_ITEM_SHAPE,\n        },\n    };\n};\n\nexport const acUpdateDashboardItem = item => ({\n    type: UPDATE_DASHBOARD_ITEM,\n    value: item,\n});\n\nexport const acRemoveDashboardItem = value => ({\n    type: REMOVE_DASHBOARD_ITEM,\n    value,\n});\n\n// thunks\n\nexport const tSaveDashboard = () => async (dispatch, getState) => {\n    const dashboard = sGetEditDashboardRoot(getState());\n\n    const dashboardToSave = {\n        ...dashboard,\n        dashboardItems: convertUiItemsToBackend(dashboard.dashboardItems),\n    };\n\n    try {\n        const dashboardId = dashboardToSave.id\n            ? await updateDashboard(dashboardToSave)\n            : await postDashboard(dashboardToSave);\n\n        dispatch(acClearEditDashboard());\n        await dispatch(tSetSelectedDashboardById(dashboardId));\n\n        return Promise.resolve(dashboardId);\n    } catch (error) {\n        onError(error);\n    }\n};\n","import {\n    SET_DASHBOARDS,\n    ADD_DASHBOARDS,\n    SET_DASHBOARD_STARRED,\n    SET_DASHBOARD_DISPLAY_NAME,\n    SET_DASHBOARD_ITEMS,\n} from '../reducers/dashboards';\nimport {\n    getCustomDashboards,\n    sGetDashboardById,\n    sGetDashboardsSortedByStarred,\n} from '../reducers/dashboards';\nimport { sGetUserUsername } from '../reducers/user';\nimport { tSetSelectedDashboardById, acSetSelectedId } from './selected';\nimport { acClearEditDashboard } from './editDashboard';\nimport {\n    apiFetchDashboards,\n    apiStarDashboard,\n    apiDeleteDashboard,\n} from '../api/dashboards';\nimport { getPreferredDashboardId } from '../api/localStorage';\nimport { arrayToIdMap } from '../modules/util';\n\n// actions\n\nexport const acSetDashboards = dashboards => ({\n    type: SET_DASHBOARDS,\n    value: arrayToIdMap(getCustomDashboards(dashboards)),\n});\n\nexport const acAppendDashboards = dashboards => ({\n    type: ADD_DASHBOARDS,\n    value: arrayToIdMap(getCustomDashboards(dashboards)),\n});\n\nexport const acSetDashboardStarred = (dashboardId, isStarred) => ({\n    type: SET_DASHBOARD_STARRED,\n    dashboardId: dashboardId,\n    value: isStarred,\n});\n\nexport const acSetDashboardDisplayName = (dashboardId, value) => ({\n    type: SET_DASHBOARD_DISPLAY_NAME,\n    dashboardId,\n    value,\n});\n\nexport const acSetDashboardItems = value => ({\n    type: SET_DASHBOARD_ITEMS,\n    value,\n});\n\n// thunks\n\nexport const tFetchDashboards = () => async dispatch => {\n    const collection = await apiFetchDashboards();\n    dispatch(acSetDashboards(collection.toArray()));\n};\n\nexport const tSelectDashboard = id => async (dispatch, getState) => {\n    const onError = error => {\n        console.log('Error (apiFetchDashboards): ', error);\n        return error;\n    };\n\n    try {\n        const state = getState();\n\n        let dashboardToSelect = null;\n        if (id) {\n            dashboardToSelect = sGetDashboardById(state, id) || null;\n        } else {\n            const preferredId = getPreferredDashboardId(\n                sGetUserUsername(state)\n            );\n            const dash = sGetDashboardById(state, preferredId);\n            dashboardToSelect =\n                preferredId && dash\n                    ? dash\n                    : sGetDashboardsSortedByStarred(state)[0];\n        }\n\n        if (dashboardToSelect) {\n            dispatch(tSetSelectedDashboardById(dashboardToSelect.id));\n        } else {\n            dispatch(acSetSelectedId());\n        }\n    } catch (err) {\n        return onError(err);\n    }\n};\n\nexport const tStarDashboard = (id, isStarred) => async dispatch => {\n    const onSuccess = id => {\n        dispatch(acSetDashboardStarred(id, isStarred));\n        return id;\n    };\n\n    const onError = error => {\n        console.log('Error (apiStarDashboard): ', error);\n        return error;\n    };\n    try {\n        await apiStarDashboard(id, isStarred);\n        return onSuccess(id);\n    } catch (err) {\n        return onError(err);\n    }\n};\n\nexport const tDeleteDashboard = id => async dispatch => {\n    try {\n        await apiDeleteDashboard(id);\n        dispatch(acClearEditDashboard());\n        dispatch(acSetSelectedId());\n        dispatch(acSetDashboardItems([]));\n\n        await dispatch(tFetchDashboards());\n\n        return Promise.resolve();\n    } catch (err) {\n        console.log('Error (deleteDashboard): ', err);\n        return err;\n    }\n};\n","/** @module reducers/controlBar */\nimport { combineReducers } from 'redux';\nimport { validateReducer } from '../modules/util';\n\nexport const SET_CONTROLBAR_USER_ROWS = 'SET_CONTROLBAR_USER_ROWS';\n\nexport const DEFAULT_STATE_CONTROLBAR_ROWS = 1;\n\nconst userRows = (state = DEFAULT_STATE_CONTROLBAR_ROWS, action) => {\n    switch (action.type) {\n        case SET_CONTROLBAR_USER_ROWS:\n            return validateReducer(action.value, DEFAULT_STATE_CONTROLBAR_ROWS);\n        default:\n            return state;\n    }\n};\n\nexport default combineReducers({\n    userRows,\n});\n\n/**\n * Selectors that point to specific props in the state object\n * @function\n * @param {Object} state\n * @returns {Object}\n */\nexport const sGetControlBarRoot = state => state.controlBar;\n\n// Selector dependency level 2\n\nexport const sGetControlBarUserRows = state =>\n    sGetControlBarRoot(state).userRows;\n","import { getInstance } from 'd2';\nimport { DEFAULT_STATE_CONTROLBAR_ROWS } from '../reducers/controlBar';\n\nconst NAMESPACE = 'dashboard';\nconst KEY = 'controlBarRows';\n\nconst hasNamespace = async d2 => await d2.currentUser.dataStore.has(NAMESPACE);\n\nconst getNamespace = async (d2, hasNamespace) =>\n    hasNamespace\n        ? await d2.currentUser.dataStore.get(NAMESPACE)\n        : await d2.currentUser.dataStore.create(NAMESPACE);\n\nexport const apiGetControlBarRows = async () => {\n    const d2 = await getInstance();\n    const namespace = await getNamespace(d2, await hasNamespace(d2));\n    const hasKey = namespace.keys && namespace.keys.find(key => key === KEY);\n\n    if (hasKey) {\n        return await namespace.get(KEY);\n    } else {\n        await apiPostControlBarRows(DEFAULT_STATE_CONTROLBAR_ROWS, namespace);\n        console.log(\n            '(These errors to /userDataStore/dashboard can be ignored)'\n        );\n        return DEFAULT_STATE_CONTROLBAR_ROWS;\n    }\n};\n\nexport const apiPostControlBarRows = async (rows, namespace) => {\n    const d2 = await getInstance();\n    const ns = namespace || (await getNamespace(d2, hasNamespace));\n\n    ns.set(KEY, rows);\n};\n","import { SET_CONTROLBAR_USER_ROWS } from '../reducers/controlBar';\nimport { apiGetControlBarRows } from '../api/controlBar';\n\n// actions\n\nexport const acSetControlBarUserRows = rows => ({\n    type: SET_CONTROLBAR_USER_ROWS,\n    value: rows,\n});\n\n// thunks\n\nexport const tSetControlBarRows = () => async dispatch => {\n    const onSuccess = rows => {\n        dispatch(acSetControlBarUserRows(rows));\n    };\n\n    const onError = error => {\n        console.log('Error (apiGetControlBarRows): ', error);\n        return error;\n    };\n\n    try {\n        const controlBarRows = await apiGetControlBarRows();\n        return onSuccess(controlBarRows);\n    } catch (err) {\n        return onError(err);\n    }\n};\n","import {\n    getDimensionById,\n    DIMENSION_ID_PERIOD,\n    DIMENSION_ID_ORGUNIT,\n} from '@dhis2/analytics';\n\nexport const SET_DIMENSIONS = 'SET_DIMENSIONS';\nexport const DEFAULT_DIMENSIONS = [\n    getDimensionById(DIMENSION_ID_PERIOD),\n    getDimensionById(DIMENSION_ID_ORGUNIT),\n];\n\nexport default (state = DEFAULT_DIMENSIONS, action) => {\n    switch (action.type) {\n        case SET_DIMENSIONS: {\n            return [...DEFAULT_DIMENSIONS, ...action.value];\n        }\n        default:\n            return state;\n    }\n};\n\nexport const sGetDimensions = state => state.dimensions;\n","export const SET_SETTINGS = 'SET_SETTINGS';\nexport const ADD_SETTINGS = 'ADD_SETTINGS';\n\nexport const DEFAULT_SETTINGS = {\n    keyDateFormat: 'yyyy-MM-dd',\n    keyAnalysisRelativePeriod: 'LAST_12_MONTHS',\n    keyAnalysisDigitGroupSeparator: 'SPACE',\n    displayNameProperty: 'displayName',\n    uiLocale: 'en',\n    rootOrganisationUnit: {},\n};\n\nexport default (state = DEFAULT_SETTINGS, action) => {\n    switch (action.type) {\n        case SET_SETTINGS: {\n            return Object.assign({}, action.value);\n        }\n        case ADD_SETTINGS: {\n            return {\n                ...state,\n                ...action.value,\n            };\n        }\n        default:\n            return state;\n    }\n};\n\n// Selectors\n\nexport const sGetSettings = state => state.settings;\n\nexport const sGetSettingsDisplayNameProperty = state =>\n    sGetSettings(state).displayNameProperty;\n\nexport const sGetRootOrgUnit = state =>\n    sGetSettings(state).rootOrganisationUnit;\n\nexport const sGetRelativePeriod = state =>\n    sGetSettings(state).keyAnalysisRelativePeriod;\n\nexport const sGetUiLocale = state => sGetSettings(state).uiLocale;\n","import { SET_DIMENSIONS } from '../reducers/dimensions';\nimport { apiFetchDimensions } from '@dhis2/analytics';\nimport { sGetSettingsDisplayNameProperty } from '../reducers/settings';\n\nexport const acSetDimensions = dimensions => ({\n    type: SET_DIMENSIONS,\n    value: dimensions,\n});\n\nexport const tSetDimensions = d2 => async (dispatch, getState) => {\n    const onSuccess = dimensions => {\n        dispatch(acSetDimensions(dimensions));\n    };\n\n    const onError = error => {\n        console.log('Error (apiFetchDimensions): ', error);\n        return error;\n    };\n\n    try {\n        const displayNameProp = sGetSettingsDisplayNameProperty(getState());\n        const dimensions = await apiFetchDimensions(d2, displayNameProp);\n\n        // filter out CATEGORY that are not of type ATTRIBUTE\n        const filteredDimensions = dimensions.filter(\n            dim =>\n                dim.dimensionType !== 'CATEGORY' ||\n                (dim.dimensionType === 'CATEGORY' &&\n                    dim.dataDimensionType === 'ATTRIBUTE')\n        );\n        return onSuccess(filteredDimensions);\n    } catch (err) {\n        return onError(err);\n    }\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport i18n from '@dhis2/d2-i18n';\nimport { colors } from '@dhis2/ui-core';\nimport { withStyles } from '@material-ui/core/styles';\n\nexport const SHOWMORE_BAR_HEIGHT = 16;\n\nconst styles = {\n    showMore: {\n        color: colors.grey700,\n        cursor: 'pointer',\n        fontSize: 11,\n        paddingTop: 5,\n        '&:hover': {\n            textDecoration: 'underline',\n        },\n    },\n    disabled: {\n        paddingTop: 5,\n        color: colors.grey500,\n        fontSize: 11,\n        cursor: 'not-allowed',\n    },\n};\n\nexport const ShowMoreButton = ({ onClick, isMaxHeight, classes, disabled }) => {\n    return (\n        <div style={{ textAlign: 'center' }}>\n            {disabled ? (\n                <div className={classes.disabled}>{i18n.t('Show more')}</div>\n            ) : (\n                <div className={classes.showMore} onClick={onClick}>\n                    {isMaxHeight ? i18n.t('Show less') : i18n.t('Show more')}\n                </div>\n            )}\n        </div>\n    );\n};\n\nShowMoreButton.propTypes = {\n    classes: PropTypes.object,\n    disabled: PropTypes.bool,\n    isMaxHeight: PropTypes.bool,\n    onClick: PropTypes.func,\n};\n\nexport default withStyles(styles)(ShowMoreButton);\n","import { SHOWMORE_BAR_HEIGHT } from './ShowMoreButton';\n\nexport const CONTROL_BAR_ROW_HEIGHT = 40;\nexport const FIRST_ROW_PADDING_HEIGHT = 10;\nexport const MIN_ROW_COUNT = 1;\n\nexport const HEADERBAR_HEIGHT = 48;\n\nconst CONTROL_BAR_OUTER_HEIGHT_DIFF =\n    FIRST_ROW_PADDING_HEIGHT + SHOWMORE_BAR_HEIGHT - 2; // 2 pixel \"adjustment\"\n\nexport const getRowsHeight = rows => {\n    return rows * CONTROL_BAR_ROW_HEIGHT;\n};\n\nexport const getNumRowsFromHeight = height => {\n    return Math.floor(\n        (height - CONTROL_BAR_OUTER_HEIGHT_DIFF) / CONTROL_BAR_ROW_HEIGHT\n    );\n};\n\nexport const getTopOffset = rows => {\n    return HEADERBAR_HEIGHT + getControlBarHeight(rows, false);\n};\n\nexport const getControlBarHeight = rows => {\n    return getRowsHeight(rows) + CONTROL_BAR_OUTER_HEIGHT_DIFF;\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { colors } from '@dhis2/ui-core';\nimport { HEADERBAR_HEIGHT } from './controlBarDimensions';\n\nimport classes from './styles/ControlBar.module.css';\n\nconst DRAG_HANDLE_HEIGHT = 7;\n\nclass ControlBar extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            dragging: false,\n        };\n    }\n\n    onStartDrag = () => {\n        this.setState({ dragging: true });\n        window.addEventListener('mousemove', this.onDrag);\n        window.addEventListener('mouseup', this.onEndDrag);\n    };\n\n    onDrag = event => {\n        event.preventDefault();\n        event.stopPropagation();\n\n        const newHeight = event.clientY;\n\n        if (\n            this.props.onChangeHeight &&\n            newHeight !== this.props.height &&\n            newHeight > 0\n        ) {\n            requestAnimationFrame(() => {\n                this.props.onChangeHeight(newHeight);\n            });\n        }\n    };\n\n    onEndDrag = () => {\n        this.setState({ dragging: false });\n        window.removeEventListener('mousemove', this.onDrag);\n        window.removeEventListener('mouseup', this.onEndDrag);\n\n        if (this.props.onEndDrag) {\n            this.props.onEndDrag();\n        }\n    };\n\n    renderDragHandle() {\n        return typeof this.props.onChangeHeight === 'function' ? (\n            <div\n                className={classes.draghandle}\n                style={{ height: DRAG_HANDLE_HEIGHT }}\n                onMouseDown={this.onStartDrag}\n            />\n        ) : null;\n    }\n\n    render() {\n        const height = Math.max(this.props.height, 0) + DRAG_HANDLE_HEIGHT;\n\n        const rootStyle = Object.assign(\n            {\n                height,\n                top: HEADERBAR_HEIGHT,\n                backgroundColor: this.props.editMode\n                    ? colors.yellow050\n                    : colors.white,\n                paddingBottom: DRAG_HANDLE_HEIGHT,\n            },\n            // Disable animations while dragging\n            this.state.dragging ? { transition: 'none' } : {}\n        );\n\n        return (\n            <div style={rootStyle} className={classes.root}>\n                <div className={classes.content}>{this.props.children}</div>\n                {this.renderDragHandle()}\n            </div>\n        );\n    }\n}\n\nControlBar.propTypes = {\n    /**\n     * The height of the control bar in number of lines. Must be a positive integer.\n     */\n    children: PropTypes.node.isRequired,\n\n    /**\n     * If true, the background color of the control bar changes to indicate that edit mode is active.\n     */\n    editMode: PropTypes.bool.isRequired,\n\n    /**\n     * Callback function that is called when the control bar is resized.\n     * The callback receives one argument: The new height in pixels.\n     *\n     * If no callback is specified the control bar will not have a drag handle.\n     */\n    height: PropTypes.number.isRequired,\n\n    /**\n     * Callback function that is called when the control bar is dropped after being dragged.\n     * The callback receives one argument: The new height in pixels.\n     *\n     * Ignored if no \"onChangeHeight\" function is provided.\n     */\n    onChangeHeight: PropTypes.func,\n\n    /**\n     * The contents of the control bar.\n     */\n    onEndDrag: PropTypes.func,\n};\n\nControlBar.defaultProps = {\n    onChangeHeight: null,\n    onEndDrag: null,\n};\n\nexport default ControlBar;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst StarIcon = ({ className }) => (\n    <svg\n        className={className}\n        xmlns=\"http://www.w3.org/2000/svg\"\n        viewBox=\"0 0 24 24\"\n    >\n        <path d=\"M0 0h24v24H0z\" fill=\"none\" />\n        <path d=\"M12 17.27L18.18 21l-1.64-7.03L22 9.24l-7.19-.61L12 2 9.19 8.63 2 9.24l5.46 4.73L5.82 21z\" />\n        <path d=\"M0 0h24v24H0z\" fill=\"none\" />\n    </svg>\n);\n\nStarIcon.propTypes = {\n    className: PropTypes.string,\n};\n\nexport default StarIcon;\n","import { getInstance } from 'd2';\n\nexport const apiPostDataStatistics = async (eventType, id) => {\n    const d2 = await getInstance();\n    const url = `dataStatistics?eventType=${eventType}&favorite=${id}`;\n\n    d2.Api.getApi().post(url);\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport { Chip, colors } from '@dhis2/ui-core';\nimport { Link } from 'react-router-dom';\nimport debounce from 'lodash/debounce';\n\nimport StarIcon from '../../icons/Star';\nimport { apiPostDataStatistics } from '../../api/dataStatistics';\n\nconst styles = {\n    chip: {\n        margin: '3px',\n    },\n    link: {\n        color: colors.grey600,\n        display: 'inline-block',\n        textDecoration: 'none',\n        verticalAlign: 'top',\n    },\n    icon: {\n        height: '20px',\n        marginTop: '2px',\n        width: '20px',\n    },\n    selected: {\n        fill: colors.white,\n    },\n    unselected: {\n        fill: colors.grey700,\n    },\n};\n\nexport const DashboardItemChip = ({\n    starred,\n    selected,\n    label,\n    dashboardId,\n    classes,\n}) => {\n    const chipProps = {\n        selected,\n        className: classes.chip,\n    };\n\n    if (starred) {\n        const selectedState = selected ? classes.selected : classes.unselected;\n        chipProps.icon = (\n            <StarIcon className={`${classes.icon} ${selectedState}`} />\n        );\n    }\n\n    return (\n        <Link\n            className={classes.link}\n            to={`/${dashboardId}`}\n            onClick={debounce(\n                () => apiPostDataStatistics('DASHBOARD_VIEW', dashboardId),\n                500\n            )}\n        >\n            <Chip {...chipProps}>{label}</Chip>\n        </Link>\n    );\n};\n\nDashboardItemChip.propTypes = {\n    dashboardId: PropTypes.string.isRequired,\n    label: PropTypes.string.isRequired,\n    selected: PropTypes.bool.isRequired,\n    starred: PropTypes.bool.isRequired,\n    classes: PropTypes.object,\n};\n\nexport default withStyles(styles)(DashboardItemChip);\n","import React from 'react';\nimport { colors } from '@dhis2/ui-core';\n\nconst AddCircleIcon = () => (\n    <svg\n        xmlns=\"http://www.w3.org/2000/svg\"\n        width=\"32\"\n        height=\"32\"\n        fill={colors.teal600}\n        viewBox=\"0 0 24 24\"\n    >\n        <path d=\"M12 2C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2zm4 11h-3v3c0 .55-.45 1-1 1s-1-.45-1-1v-3H8c-.55 0-1-.45-1-1s.45-1 1-1h3V8c0-.55.45-1 1-1s1 .45 1 1v3h3c.55 0 1 .45 1 1s-.45 1-1 1z\" />\n    </svg>\n);\n\nexport default AddCircleIcon;\n","import React from 'react';\nimport { colors } from '@dhis2/ui-core';\nimport PropTypes from 'prop-types';\n\nconst ClearIcon = ({ className }) => (\n    <svg\n        className={className}\n        fill={colors.grey800}\n        xmlns=\"http://www.w3.org/2000/svg\"\n        viewBox=\"0 0 24 24\"\n    >\n        <path d=\"M19 6.41L17.59 5 12 10.59 6.41 5 5 6.41 10.59 12 5 17.59 6.41 19 12 13.41 17.59 19 19 17.59 13.41 12z\" />\n        <path d=\"M0 0h24v24H0z\" fill=\"none\" />\n    </svg>\n);\n\nClearIcon.propTypes = {\n    className: PropTypes.string,\n};\n\nexport default ClearIcon;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport ClearIcon from '../../icons/Clear';\n\nimport classes from './styles/ClearButton.module.css';\n\nexport const ClearButton = ({ onClear }) => (\n    <button className={classes.button} onClick={onClear}>\n        <span>\n            <ClearIcon className={classes.icon} color=\"action\" />\n        </span>\n    </button>\n);\n\nClearButton.propTypes = {\n    onClear: PropTypes.func.isRequired,\n};\n\nexport default ClearButton;\n","import { combineReducers } from 'redux';\nimport { validateReducer } from '../modules/util';\n\nexport const SET_DASHBOARDS_FILTER_NAME = 'SET_DASHBOARDS_FILTER_NAME';\nexport const SET_DASHBOARDS_FILTER_OWNER = 'SET_DASHBOARDS_FILTER_OWNER';\nexport const SET_DASHBOARDS_FILTER_ORDER = 'SET_DASHBOARDS_FILTER_ORDER';\n\nexport const ownerData = [\n    { id: 'ALL', value: 'All users' },\n    { id: 'ME', value: 'Created by me' },\n    { id: 'OTHERS', value: 'Created by others' },\n];\n\nexport const orderData = [\n    { id: 'NAME:ASC', value: 'Name (asc)' },\n    { id: 'NAME:ASC', value: 'Name (desc)' },\n    { id: 'ITEMS:ASC', value: 'Number of items (asc)' },\n    { id: 'ITEMS:ASC', value: 'Number of items (desc)' },\n    { id: 'CREATED:ASC', value: 'Created date (asc)' },\n    { id: 'CREATED:ASC', value: 'Created date (desc)' },\n];\n\nexport const DEFAULT_STATE_DASHBOARDS_FILTER_NAME = '';\nexport const DEFAULT_STATE_DASHBOARDS_FILTER_OWNER = ownerData[0].id;\nexport const DEFAULT_STATE_DASHBOARDS_FILTER_ORDER = orderData[0].id;\n\nconst name = (state = DEFAULT_STATE_DASHBOARDS_FILTER_NAME, action) => {\n    switch (action.type) {\n        case SET_DASHBOARDS_FILTER_NAME:\n            return validateReducer(\n                action.value,\n                DEFAULT_STATE_DASHBOARDS_FILTER_NAME\n            );\n        default:\n            return state;\n    }\n};\n\nconst owner = (state = DEFAULT_STATE_DASHBOARDS_FILTER_OWNER, action) => {\n    switch (action.type) {\n        case SET_DASHBOARDS_FILTER_OWNER:\n            return validateReducer(\n                action.value,\n                DEFAULT_STATE_DASHBOARDS_FILTER_NAME\n            );\n        default:\n            return state;\n    }\n};\n\nconst order = (state = DEFAULT_STATE_DASHBOARDS_FILTER_ORDER, action) => {\n    switch (action.type) {\n        case SET_DASHBOARDS_FILTER_ORDER:\n            return validateReducer(\n                action.value,\n                DEFAULT_STATE_DASHBOARDS_FILTER_ORDER\n            );\n        default:\n            return state;\n    }\n};\n\nexport default combineReducers({\n    name,\n    owner,\n    order,\n});\n\n// selectors\n\nexport const sGetDashboardsFilterRoot = state => state.dashboardsFilter;\n\n// selector dependency level 2\n\nexport const sGetFilterName = state => sGetDashboardsFilterRoot(state).name;\nexport const sGetFilterOwner = state => sGetDashboardsFilterRoot(state).owner;\nexport const sGetFilterOrder = state => sGetDashboardsFilterRoot(state).order;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport i18n from '@dhis2/d2-i18n';\nimport InputField from '@material-ui/core/Input';\nimport InputAdornment from '@material-ui/core/InputAdornment';\nimport SearchIcon from '@material-ui/icons/Search';\nimport { colors } from '@dhis2/ui-core';\n\nimport ClearButton from './ClearButton';\nimport { DEFAULT_STATE_DASHBOARDS_FILTER_NAME } from '../../reducers/dashboardsFilter';\n\nexport const KEYCODE_ENTER = 13;\nexport const KEYCODE_ESCAPE = 27;\n\nconst styles = {\n    filterField: {\n        fontSize: '14px',\n        width: '200px',\n        height: '30px',\n        top: '-4px',\n    },\n    searchIcon: {\n        color: colors.grey700,\n        width: '20px',\n        height: '20px',\n    },\n};\n\nexport class Filter extends Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            value: DEFAULT_STATE_DASHBOARDS_FILTER_NAME,\n        };\n    }\n\n    componentWillReceiveProps(nextProps) {\n        this.setState({\n            value: nextProps.name,\n        });\n    }\n\n    setFilterValue = event => {\n        event.preventDefault();\n\n        this.props.onChangeName(event.target.value);\n    };\n\n    handleKeyUp = event => {\n        switch (event.keyCode) {\n            case KEYCODE_ENTER:\n                this.props.onKeypressEnter();\n                break;\n            case KEYCODE_ESCAPE:\n                this.props.onChangeName();\n                break;\n            default:\n                break;\n        }\n    };\n\n    render() {\n        const { classes, name, onChangeName } = this.props;\n\n        const startAdornment = (\n            <InputAdornment position=\"start\">\n                <SearchIcon className={classes.searchIcon} />\n            </InputAdornment>\n        );\n\n        const endAdornment =\n            name !== '' && name !== null ? (\n                <InputAdornment position=\"end\">\n                    <ClearButton onClear={() => onChangeName()} />\n                </InputAdornment>\n            ) : null;\n\n        return (\n            <InputField\n                className={classes.filterField}\n                placeholder={i18n.t('Search for a dashboard')}\n                startAdornment={startAdornment}\n                endAdornment={endAdornment}\n                value={this.state.value}\n                onChange={this.setFilterValue}\n                onKeyUp={this.handleKeyUp}\n            />\n        );\n    }\n}\n\nFilter.propTypes = {\n    classes: PropTypes.object,\n    name: PropTypes.string,\n    onChangeName: PropTypes.func,\n    onKeypressEnter: PropTypes.func,\n};\n\nFilter.defaultProps = {\n    name: '',\n    onChangeName: Function.prototype,\n};\n\nexport default withStyles(styles)(Filter);\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { Link, withRouter } from 'react-router-dom';\nimport ControlBar from './ControlBar';\nimport arraySort from 'd2-utilizr/lib/arraySort';\nimport PropTypes from 'prop-types';\n\nimport Chip from './DashboardItemChip';\nimport AddCircleIcon from '../../icons/AddCircle';\nimport Filter from './Filter';\nimport ShowMoreButton from './ShowMoreButton';\nimport {\n    FIRST_ROW_PADDING_HEIGHT,\n    MIN_ROW_COUNT,\n    getRowsHeight,\n    getControlBarHeight,\n    getNumRowsFromHeight,\n} from './controlBarDimensions';\nimport { sGetControlBarUserRows } from '../../reducers/controlBar';\nimport { sGetAllDashboards } from '../../reducers/dashboards';\nimport { sGetFilterName } from '../../reducers/dashboardsFilter';\nimport { sGetSelectedId } from '../../reducers/selected';\nimport { acSetControlBarUserRows } from '../../actions/controlBar';\nimport { acSetFilterName } from '../../actions/dashboardsFilter';\nimport { orObject, orArray } from '../../modules/util';\nimport { apiPostControlBarRows } from '../../api/controlBar';\n\nimport classes from './styles/DashboardsBar.module.css';\n\nexport const MAX_ROW_COUNT = 10;\n\nexport class DashboardsBar extends Component {\n    state = {\n        rows: MIN_ROW_COUNT,\n    };\n\n    setInitialDashboardState = rows => {\n        this.setState({ rows, isMaxHeight: rows === MAX_ROW_COUNT });\n    };\n\n    componentDidMount() {\n        this.setInitialDashboardState(this.props.userRows);\n    }\n\n    componentWillReceiveProps(nextProps) {\n        this.setInitialDashboardState(nextProps.userRows);\n    }\n\n    onChangeHeight = newHeight => {\n        const adjustedHeight = newHeight - 52; // don't rush the transition to a bigger row count\n        const newRows = Math.max(\n            MIN_ROW_COUNT,\n            getNumRowsFromHeight(adjustedHeight)\n        );\n\n        if (newRows !== this.state.rows) {\n            const newRowCount = Math.min(newRows, MAX_ROW_COUNT);\n\n            this.props.onChangeHeight(newRowCount);\n        }\n    };\n\n    onEndDrag = () => {\n        return apiPostControlBarRows(this.state.rows);\n    };\n\n    onToggleMaxHeight = () => {\n        const rows =\n            this.state.rows === MAX_ROW_COUNT\n                ? this.props.userRows\n                : MAX_ROW_COUNT;\n\n        this.setState({ rows, isMaxHeight: !this.state.isMaxHeight });\n    };\n\n    onSelectDashboard = () => {\n        this.props.history.push(`/${this.props.dashboards[0].id}`);\n    };\n\n    render() {\n        const { dashboards, name, selectedId, onChangeFilterName } = this.props;\n\n        const rowCount = this.state.isMaxHeight\n            ? MAX_ROW_COUNT\n            : this.state.rows;\n        const controlBarHeight = getControlBarHeight(rowCount);\n        const contentWrapperStyle = {\n            padding: `${FIRST_ROW_PADDING_HEIGHT}px 6px 0 6px`,\n            overflowY: this.state.isMaxHeight ? 'auto' : 'hidden',\n            height: getRowsHeight(rowCount) + FIRST_ROW_PADDING_HEIGHT,\n        };\n\n        return (\n            <ControlBar\n                height={controlBarHeight}\n                onChangeHeight={this.onChangeHeight}\n                onEndDrag={this.onEndDrag}\n                editMode={false}\n            >\n                <div style={contentWrapperStyle}>\n                    <div className={classes.leftControls}>\n                        <Link\n                            style={{\n                                display: 'inline-block',\n                                textDecoration: 'none',\n                                marginRight: 10,\n                                position: 'relative',\n                                top: '2px',\n                            }}\n                            to={'/new'}\n                        >\n                            <AddCircleIcon />\n                        </Link>\n                        <Filter\n                            name={name}\n                            onChangeName={onChangeFilterName}\n                            onKeypressEnter={this.onSelectDashboard}\n                        />\n                    </div>\n                    {orArray(dashboards).map(dashboard => (\n                        <Chip\n                            key={dashboard.id}\n                            label={dashboard.displayName}\n                            starred={dashboard.starred}\n                            dashboardId={dashboard.id}\n                            selected={dashboard.id === selectedId}\n                        />\n                    ))}\n                </div>\n                <ShowMoreButton\n                    onClick={this.onToggleMaxHeight}\n                    isMaxHeight={this.state.isMaxHeight}\n                    disabled={this.props.userRows === MAX_ROW_COUNT}\n                />\n            </ControlBar>\n        );\n    }\n}\n\nconst mapStateToProps = state => ({\n    dashboards: sGetAllDashboards(state),\n    name: sGetFilterName(state),\n    userRows: sGetControlBarUserRows(state),\n    selectedId: sGetSelectedId(state),\n});\n\nconst mapDispatchToProps = {\n    onChangeHeight: acSetControlBarUserRows,\n    onChangeFilterName: acSetFilterName,\n};\nconst mergeProps = (stateProps, dispatchProps, ownProps) => {\n    const dashboards = Object.values(orObject(stateProps.dashboards));\n    const displayDashboards = arraySort(\n        dashboards.filter(d =>\n            d.displayName.toLowerCase().includes(stateProps.name.toLowerCase())\n        ),\n        'ASC',\n        'displayName'\n    );\n\n    return {\n        ...stateProps,\n        ...ownProps,\n        ...dispatchProps,\n        dashboards: [\n            ...displayDashboards.filter(d => d.starred),\n            ...displayDashboards.filter(d => !d.starred),\n        ],\n    };\n};\n\nDashboardsBar.propTypes = {\n    dashboards: PropTypes.array,\n    history: PropTypes.object,\n    name: PropTypes.string,\n    selectedId: PropTypes.string,\n    userRows: PropTypes.number,\n    onChangeFilterName: PropTypes.func,\n    onChangeHeight: PropTypes.func,\n};\n\nexport default withRouter(\n    connect(\n        mapStateToProps,\n        mapDispatchToProps,\n        mergeProps\n    )(DashboardsBar)\n);\n","import {\n    SET_DASHBOARDS_FILTER_NAME,\n    SET_DASHBOARDS_FILTER_OWNER,\n    SET_DASHBOARDS_FILTER_ORDER,\n} from '../reducers/dashboardsFilter';\n\n// actions\n\nexport const acSetFilterName = value => ({\n    type: SET_DASHBOARDS_FILTER_NAME,\n    value,\n});\n\nexport const acSetFilterOwner = value => ({\n    type: SET_DASHBOARDS_FILTER_OWNER,\n    value,\n});\n\nexport const acSetFilterOrder = value => ({\n    type: SET_DASHBOARDS_FILTER_ORDER,\n    value,\n});\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\n\nimport {\n    getTopOffset,\n    MIN_ROW_COUNT,\n} from '../ControlBar/controlBarDimensions';\nimport { sGetControlBarUserRows } from '../../reducers/controlBar';\n\nconst DashboardVerticalOffset = props => {\n    const rows = props.editMode ? MIN_ROW_COUNT : props.userRows;\n    const marginTop = getTopOffset(rows);\n\n    return <div className=\"page-container-top-margin\" style={{ marginTop }} />;\n};\n\nconst mapStateToProps = state => ({\n    userRows: sGetControlBarUserRows(state),\n});\n\nDashboardVerticalOffset.propTypes = {\n    editMode: PropTypes.bool,\n    userRows: PropTypes.number,\n};\n\nexport default connect(mapStateToProps)(DashboardVerticalOffset);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { MenuItem, colors } from '@dhis2/ui-core';\n\nconst HeaderMenuItem = ({ title }) => (\n    <MenuItem\n        dense\n        key={title}\n        disabled\n        label={\n            <p style={{ color: colors.grey800, fontWeight: '600' }}>{title}</p>\n        }\n    />\n);\n\nHeaderMenuItem.propTypes = {\n    title: PropTypes.string.isRequired,\n};\n\nexport default HeaderMenuItem;\n","import React from 'react';\nimport { colors } from '@dhis2/ui-core';\nimport PropTypes from 'prop-types';\n\nconst LaunchIcon = ({ className }) => (\n    <svg\n        className={className}\n        xmlns=\"http://www.w3.org/2000/svg\"\n        width=\"12\"\n        height=\"12\"\n        fill={colors.grey600}\n        viewBox=\"0 0 24 24\"\n    >\n        <path d=\"M0 0h24v24H0z\" fill=\"none\" />\n        <path d=\"M19 19H5V5h7V3H5c-1.11 0-2 .9-2 2v14c0 1.1.89 2 2 2h14c1.1 0 2-.9 2-2v-7h-2v7zM14 3v2h3.59l-9.83 9.83 1.41 1.41L19 6.41V10h2V3h-7z\" />\n    </svg>\n);\n\nLaunchIcon.propTypes = {\n    className: PropTypes.string,\n};\n\nexport default LaunchIcon;\n","import React from 'react';\nimport { MenuItem, colors } from '@dhis2/ui-core';\nimport i18n from '@dhis2/d2-i18n';\nimport PropTypes from 'prop-types';\nimport { visTypeIcons } from '@dhis2/analytics';\n\nimport { getItemIcon, VISUALIZATION } from '../../modules/itemTypes';\nimport LaunchIcon from '../../icons/Launch';\n\nimport classes from './styles/ContentMenuItem.module.css';\n\nconst LaunchLink = ({ url }) => (\n    <a\n        onClick={e => e.stopPropagation()}\n        className={classes.launchLink}\n        target=\"_blank\"\n        rel=\"noopener noreferrer\"\n        href={url}\n    >\n        <LaunchIcon />\n    </a>\n);\n\nLaunchLink.propTypes = {\n    url: PropTypes.string,\n};\n\nconst InsertButton = () => (\n    <button className={classes.buttonInsert}>{i18n.t('Insert')}</button>\n);\n\nconst ContentMenuItem = ({ type, name, onInsert, url, visType }) => {\n    const ItemIcon = getItemIcon(type);\n\n    const renderedItemIcon =\n        type === VISUALIZATION ? (\n            visTypeIcons[visType]\n        ) : (\n            <ItemIcon style={{ fill: colors.grey600 }} />\n        );\n\n    return (\n        <MenuItem\n            dense\n            onClick={onInsert}\n            label={\n                <div className={classes.menuItem}>\n                    <div className={classes.label}>\n                        <span style={{ margin: '6px' }}>\n                            {renderedItemIcon}\n                        </span>\n                        <span>{name}</span>\n                        {url ? <LaunchLink url={url} /> : null}\n                    </div>\n                    <InsertButton />\n                </div>\n            }\n        />\n    );\n};\n\nContentMenuItem.propTypes = {\n    name: PropTypes.string,\n    type: PropTypes.string,\n    url: PropTypes.string,\n    visType: PropTypes.string,\n    onInsert: PropTypes.func,\n};\n\nexport default ContentMenuItem;\n","import i18n from '@dhis2/d2-i18n';\nimport {\n    VISUALIZATION,\n    MAP,\n    EVENT_CHART,\n    EVENT_REPORT,\n    USERS,\n    REPORTS,\n    RESOURCES,\n    APP,\n    MESSAGES,\n    TEXT,\n    SPACER,\n} from '../../modules/itemTypes';\n// import { spacerContent } from '../../modules/uiBackendItemConverter';\n\nexport const singleItems = [\n    {\n        id: 'additional',\n        header: i18n.t('Additional items'),\n        items: [\n            {\n                type: TEXT,\n                name: i18n.t('Text box'),\n                content: '',\n            },\n            {\n                type: MESSAGES,\n                name: i18n.t('Messages'),\n                content: 'true',\n            },\n            {\n                type: SPACER,\n                name: i18n.t('Spacer'),\n                content: '',\n            },\n        ],\n    },\n];\n\n// categorizedItems are grouped in the item selector menu\nexport const categorizedItems = [\n    VISUALIZATION,\n    MAP,\n    EVENT_REPORT,\n    EVENT_CHART,\n    USERS,\n    REPORTS,\n    RESOURCES,\n    APP,\n];\n\n// listItemTypes are included in a single dashboard item\nexport const listItemTypes = [REPORTS, RESOURCES, USERS];\n","import React, { Component, Fragment } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport i18n from '@dhis2/d2-i18n';\nimport { MenuItem, Divider } from '@dhis2/ui-core';\n\nimport HeaderMenuItem from './HeaderMenuItem';\nimport ContentMenuItem from './ContentMenuItem';\n\nimport { tAddListItemContent } from './actions';\nimport { acAddDashboardItem } from '../../actions/editDashboard';\nimport { getItemUrl, APP, VISUALIZATION } from '../../modules/itemTypes';\nimport { categorizedItems, listItemTypes } from './selectableItems';\n\nimport classes from './styles/CategorizedMenuGroup.module.css';\n\nclass CategorizedMenuGroup extends Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            seeMore: false,\n        };\n    }\n\n    addItem = item => () => {\n        const { type, acAddDashboardItem, tAddListItemContent } = this.props;\n\n        if (type === APP) {\n            acAddDashboardItem({ type, content: item.key });\n        } else {\n            const newItem = {\n                id: item.id,\n                name: item.displayName || item.name,\n            };\n\n            if (listItemTypes.includes(type)) {\n                tAddListItemContent(type, newItem);\n            } else {\n                acAddDashboardItem({ type, content: newItem });\n            }\n        }\n    };\n\n    toggleSeeMore = () => {\n        this.setState({ seeMore: !this.state.seeMore });\n\n        this.props.onChangeItemsLimit(this.props.type);\n    };\n\n    render() {\n        const { title, type, items, hasMore } = this.props;\n        return (\n            <Fragment>\n                <HeaderMenuItem title={title} />\n                {items.map(item => {\n                    const itemUrl = getItemUrl(type, item, this.context.d2);\n                    return (\n                        <ContentMenuItem\n                            key={item.id || item.key}\n                            type={type}\n                            visType={type === VISUALIZATION ? item.type : type}\n                            name={item.displayName || item.name}\n                            onInsert={this.addItem(item)}\n                            url={itemUrl}\n                        />\n                    );\n                })}\n                {hasMore ? (\n                    <MenuItem\n                        dense\n                        key={`showmore${title}`}\n                        onClick={this.toggleSeeMore}\n                        label={\n                            <button className={classes.showMoreButton}>\n                                {this.state.seeMore\n                                    ? i18n.t('Show fewer')\n                                    : i18n.t('Show more')}\n                            </button>\n                        }\n                    />\n                ) : null}\n                <Divider margin=\"8px 0px\" />\n            </Fragment>\n        );\n    }\n}\n\nCategorizedMenuGroup.propTypes = {\n    items: PropTypes.array.isRequired,\n    title: PropTypes.string.isRequired,\n    type: PropTypes.oneOf(categorizedItems).isRequired,\n    onChangeItemsLimit: PropTypes.func.isRequired,\n    acAddDashboardItem: PropTypes.func,\n    hasMore: PropTypes.bool,\n    tAddListItemContent: PropTypes.func,\n};\n\nCategorizedMenuGroup.contextTypes = {\n    d2: PropTypes.object.isRequired,\n};\n\nexport default connect(\n    null,\n    {\n        acAddDashboardItem,\n        tAddListItemContent,\n    }\n)(CategorizedMenuGroup);\n","import { sGetEditDashboardRoot } from '../../reducers/editDashboard';\nimport { itemTypeMap } from '../../modules/itemTypes';\nimport {\n    acAddDashboardItem,\n    acUpdateDashboardItem,\n} from '../../actions/editDashboard';\n\nexport const tAddListItemContent = (type, content) => (dispatch, getState) => {\n    const state = getState();\n    const listItemType = itemTypeMap[type].propName;\n    const dashboardItems = sGetEditDashboardRoot(state).dashboardItems;\n    const dashboardItemIndex = dashboardItems.findIndex(\n        item => item.type === type\n    );\n    let dashboardItem;\n\n    // Reports/Resources/Users dashboard item type already present in dashboard\n    if (dashboardItemIndex > -1) {\n        dashboardItem = dashboardItems[dashboardItemIndex];\n        dashboardItem[listItemType].push(content);\n\n        dispatch(acUpdateDashboardItem(dashboardItem));\n    } else {\n        dashboardItem = {\n            type: type,\n            content: [content],\n        };\n\n        dispatch(acAddDashboardItem(dashboardItem));\n    }\n};\n","import React, { Fragment } from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\n\nimport HeaderMenuItem from './HeaderMenuItem';\nimport ContentMenuItem from './ContentMenuItem';\nimport { acAddDashboardItem } from '../../actions/editDashboard';\n\nexport const SinglesMenuGroup = ({ acAddDashboardItem, category }) => {\n    const addToDashboard = ({ type, content }) => () => {\n        acAddDashboardItem({ type, content });\n    };\n\n    return (\n        <Fragment>\n            <HeaderMenuItem title={category.header} />\n            {category.items.map(item => (\n                <ContentMenuItem\n                    key={item.type}\n                    type={item.type}\n                    name={item.name}\n                    onInsert={addToDashboard(item)}\n                />\n            ))}\n        </Fragment>\n    );\n};\n\nSinglesMenuGroup.propTypes = {\n    acAddDashboardItem: PropTypes.func,\n    category: PropTypes.object,\n};\n\nexport default connect(\n    null,\n    { acAddDashboardItem }\n)(SinglesMenuGroup);\n","import React, { Fragment } from 'react';\nimport PropTypes from 'prop-types';\nimport i18n from '@dhis2/d2-i18n';\nimport Popover from '@material-ui/core/Popover';\nimport { InputField, Menu } from '@dhis2/ui-core';\n\nimport CategorizedMenuGroup from './CategorizedMenuGroup';\nimport SinglesMenuGroup from './SinglesMenuGroup';\nimport { singleItems, categorizedItems } from './selectableItems';\nimport { itemTypeMap, getDefaultItemCount } from '../../modules/itemTypes';\n\nimport './styles/ItemSelector.css';\n\nconst ItemSearchField = props => (\n    <InputField\n        name=\"Dashboard item search\"\n        label={i18n.t('Search for items to add to this dashboard')}\n        type=\"text\"\n        onChange={props.onChange}\n        onFocus={props.onFocus}\n        value={props.value}\n    />\n);\n\nclass ItemSelector extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            anchorEl: null,\n            open: false,\n            maxOptions: new Set(),\n            items: undefined,\n            filter: '',\n        };\n    }\n\n    closeList = () => {\n        this.setState({ open: false, filter: '' });\n    };\n\n    openList = (_, event) => {\n        this.fetchItems();\n\n        this.setState({\n            anchorEl: event.currentTarget,\n            open: true,\n        });\n    };\n\n    setFilter = (_, event) => {\n        this.setState({ filter: event.target.value }, this.fetchItems);\n    };\n\n    getCategorizedMenuGroups = () =>\n        categorizedItems\n            .filter(type => {\n                const itemType = itemTypeMap[type];\n                return (\n                    this.state.items && this.state.items[itemType.endPointName]\n                );\n            })\n            .map(type => {\n                const itemType = itemTypeMap[type];\n                const itemCount = getDefaultItemCount(type);\n                const allItems = this.state.items[itemType.endPointName];\n                const hasMore = allItems.length > itemCount;\n                const items = this.state.maxOptions.has(itemType.id)\n                    ? allItems\n                    : allItems.slice(0, itemCount);\n\n                return (\n                    <CategorizedMenuGroup\n                        key={type}\n                        type={type}\n                        title={itemType.pluralTitle}\n                        items={items}\n                        onChangeItemsLimit={this.fetchItems}\n                        hasMore={hasMore}\n                    />\n                );\n            });\n\n    getSinglesMenuGroups = () =>\n        singleItems.map(category => (\n            <SinglesMenuGroup key={category.id} category={category} />\n        ));\n\n    getMenuGroups = () =>\n        this.getCategorizedMenuGroups().concat(this.getSinglesMenuGroups());\n\n    fetchItems = async type => {\n        if (type) {\n            const maxOptions = this.state.maxOptions;\n\n            if (maxOptions.has(type)) {\n                maxOptions.delete(type);\n            } else {\n                maxOptions.add(type);\n            }\n\n            this.setState({ maxOptions });\n        } else {\n            this.setState({\n                maxOptions: new Set(),\n            });\n        }\n\n        let queryString = '?count=11';\n        if ([...this.state.maxOptions.values()].length) {\n            queryString +=\n                '&max=' + [...this.state.maxOptions.values()].join('&max=');\n        }\n\n        const filter = this.state.filter ? `/${this.state.filter}` : '';\n\n        this.context.d2.Api.getApi()\n            .get(`dashboards/q${filter}${queryString}`)\n            .then(response => this.setState({ items: response }))\n            .catch(console.error);\n    };\n\n    render() {\n        return (\n            <Fragment>\n                <ItemSearchField\n                    value={this.state.filter}\n                    onChange={this.setFilter}\n                    onFocus={this.openList}\n                />\n                <Popover\n                    className=\"dashboard-item-selector\"\n                    open={this.state.open}\n                    onClose={this.closeList}\n                    anchorEl={this.state.anchorEl}\n                    anchorOrigin={{ horizontal: 'left', vertical: 'bottom' }}\n                    transformOrigin={{ horizontal: 'left', vertical: 'top' }}\n                    style={{ height: '70vh' }}\n                    PaperProps={{ style: { width: '700px' } }}\n                    disableAutoFocus={true}\n                    disableRestoreFocus={true}\n                >\n                    <Menu>{this.getMenuGroups()}</Menu>\n                </Popover>\n            </Fragment>\n        );\n    }\n}\n\nItemSearchField.propTypes = {\n    value: PropTypes.string,\n    onChange: PropTypes.func,\n    onFocus: PropTypes.func,\n};\n\nItemSelector.contextTypes = {\n    d2: PropTypes.object.isRequired,\n};\n\nexport default ItemSelector;\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport i18n from '@dhis2/d2-i18n';\nimport { InputField, TextAreaField } from '@dhis2/ui-core';\n\nimport ItemSelector from '../ItemSelector/ItemSelector';\nimport {\n    acSetDashboardTitle,\n    acSetDashboardDescription,\n} from '../../actions/editDashboard';\nimport { orObject } from '../../modules/util';\nimport { sGetEditDashboardRoot } from '../../reducers/editDashboard';\n\nconst styles = {\n    section: { display: 'flex', justifyContent: 'space-between' },\n    titleDescription: {\n        flex: '3',\n        marginRight: '50px',\n    },\n    title: {\n        display: 'block',\n        clear: 'both',\n    },\n    description: {\n        display: 'block',\n        clear: 'both',\n        marginTop: '15px',\n    },\n    underline: {\n        '&::before': {\n            borderBottom: `none`,\n        },\n        '&:hover::before': {\n            borderBottom: `none!important`,\n        },\n    },\n    input: {\n        backgroundColor: 'rgba(0, 0, 10, 0.05)',\n        borderRadius: '4px',\n        width: '100%',\n        '&:hover': {\n            backgroundColor: 'rgba(0, 0, 10, 0.08)',\n        },\n    },\n    itemSelector: {\n        flex: '2',\n        position: 'relative',\n    },\n};\n\nexport const EditTitleBar = ({\n    name,\n    description,\n    onChangeTitle,\n    onChangeDescription,\n    classes,\n}) => {\n    const updateTitle = (_, e) => {\n        onChangeTitle(e.target.value);\n    };\n\n    const updateDescription = (_, e) => {\n        onChangeDescription(e.target.value);\n    };\n\n    return (\n        <section className={classes.section}>\n            <div className={classes.titleDescription}>\n                <InputField\n                    className={classes.title}\n                    name=\"Dashboard title input\"\n                    label={i18n.t('Dashboard title')}\n                    type=\"text\"\n                    onChange={updateTitle}\n                    value={name}\n                />\n                <TextAreaField\n                    className={classes.description}\n                    name=\"Dashboard description input\"\n                    label={i18n.t('Dashboard description')}\n                    onChange={updateDescription}\n                    value={description}\n                />\n            </div>\n            <div className={classes.itemSelector}>\n                <ItemSelector />\n            </div>\n        </section>\n    );\n};\n\nconst mapStateToProps = state => {\n    const selectedDashboard = orObject(sGetEditDashboardRoot(state));\n\n    return {\n        name: selectedDashboard.name,\n        description: selectedDashboard.description,\n    };\n};\n\nconst mapDispatchToProps = {\n    onChangeTitle: acSetDashboardTitle,\n    onChangeDescription: acSetDashboardDescription,\n};\n\nexport default connect(\n    mapStateToProps,\n    mapDispatchToProps\n)(withStyles(styles)(EditTitleBar));\n\nEditTitleBar.propTypes = {\n    onChangeDescription: PropTypes.func.isRequired,\n    onChangeTitle: PropTypes.func.isRequired,\n    classes: PropTypes.object,\n    description: PropTypes.string,\n    name: PropTypes.string,\n};\n\nEditTitleBar.defaultProps = {\n    name: '',\n    description: '',\n};\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nimport { Button } from '@dhis2/ui-core';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\n\nimport i18n from '@dhis2/d2-i18n';\n\nimport {\n    PeriodDimension,\n    DynamicDimension,\n    OrgUnitDimension,\n    DIMENSION_ID_PERIOD,\n    DIMENSION_ID_ORGUNIT,\n} from '@dhis2/analytics';\n\nconst peId = DIMENSION_ID_PERIOD;\nconst ouId = DIMENSION_ID_ORGUNIT;\n\nclass FilterDialog extends Component {\n    onConfirm = id => () => this.props.onConfirm(id);\n\n    dialogContent() {\n        const { displayNameProperty, dimension, selectedItems } = this.props;\n        const dialogId = dimension.id;\n\n        const commonProps = {\n            d2: this.context.d2,\n            onSelect: this.props.onSelect,\n            onDeselect: this.props.onDeselect,\n            onReorder: this.props.onReorder,\n        };\n\n        switch (dialogId) {\n            case peId: {\n                return (\n                    <PeriodDimension\n                        selectedPeriods={selectedItems}\n                        {...commonProps}\n                    />\n                );\n            }\n            case ouId:\n                return (\n                    <OrgUnitDimension\n                        displayNameProperty={displayNameProperty}\n                        ouItems={selectedItems}\n                        {...commonProps}\n                    />\n                );\n            default:\n                return (\n                    <DynamicDimension\n                        selectedItems={selectedItems}\n                        dialogId={dialogId}\n                        dialogTitle={dimension.name}\n                        {...commonProps}\n                    />\n                );\n        }\n    }\n\n    render() {\n        const { dimension, onClose } = this.props;\n        const dialogId = dimension.id;\n\n        return (\n            <Dialog\n                open={!!dialogId}\n                maxWidth=\"lg\"\n                disableEnforceFocus\n                onClose={onClose}\n            >\n                {dialogId && this.dialogContent()}\n                <DialogActions>\n                    <Button kind=\"secondary\" onClick={onClose}>\n                        {i18n.t('Cancel')}\n                    </Button>\n                    <Button kind=\"primary\" onClick={this.onConfirm(dialogId)}>\n                        {i18n.t('Confirm')}\n                    </Button>\n                </DialogActions>\n            </Dialog>\n        );\n    }\n}\n\nFilterDialog.propTypes = {\n    dimension: PropTypes.object,\n    displayNameProperty: PropTypes.string,\n    selectedItems: PropTypes.array,\n    onClose: PropTypes.func,\n    onConfirm: PropTypes.func,\n    onDeselect: PropTypes.func,\n    onReorder: PropTypes.func,\n    onSelect: PropTypes.func,\n};\n\nFilterDialog.contextTypes = {\n    d2: PropTypes.object,\n};\n\nexport default FilterDialog;\n","export const SET_ACTIVE_MODAL_DIMENSION = 'SET_ACTIVE_MODAL_DIMENSION';\nexport const CLEAR_ACTIVE_MODAL_DIMENSION = 'CLEAR_ACTIVE_MODAL_DIMENSION';\n\nexport const DEFAULT_STATE_ACTIVE_MODAL_DIMENSION = {};\n\nexport default (state = DEFAULT_STATE_ACTIVE_MODAL_DIMENSION, action) => {\n    switch (action.type) {\n        case SET_ACTIVE_MODAL_DIMENSION: {\n            return action.value;\n        }\n        case CLEAR_ACTIVE_MODAL_DIMENSION: {\n            return DEFAULT_STATE_ACTIVE_MODAL_DIMENSION;\n        }\n        default:\n            return state;\n    }\n};\n\nexport const sGetActiveModalDimension = state => state.activeModalDimension;\n","import {\n    SET_ACTIVE_MODAL_DIMENSION,\n    CLEAR_ACTIVE_MODAL_DIMENSION,\n} from '../reducers/activeModalDimension';\n\nexport const acSetActiveModalDimension = value => ({\n    type: SET_ACTIVE_MODAL_DIMENSION,\n    value,\n});\n\nexport const acClearActiveModalDimension = () => ({\n    type: CLEAR_ACTIVE_MODAL_DIMENSION,\n});\n","import React, { Component, Fragment } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport Popover from '@material-ui/core/Popover';\nimport ArrowDropDownIcon from '@material-ui/icons/ArrowDropDown';\nimport { withTheme } from '@material-ui/core/styles';\n\nimport i18n from '@dhis2/d2-i18n';\nimport { DimensionsPanel } from '@dhis2/analytics';\n\nimport { Button } from '@dhis2/ui-core';\nimport FilterDialog from './FilterDialog';\n\nimport { sGetSettingsDisplayNameProperty } from '../../reducers/settings';\nimport { sGetActiveModalDimension } from '../../reducers/activeModalDimension';\nimport { sGetDimensions } from '../../reducers/dimensions';\nimport { sGetFiltersKeys } from '../../reducers/itemFilters';\nimport { sGetEditItemFiltersRoot } from '../../reducers/editItemFilters';\nimport { acAddItemFilter, acRemoveItemFilter } from '../../actions/itemFilters';\nimport {\n    acRemoveEditItemFilter,\n    acSetEditItemFilters,\n} from '../../actions/editItemFilters';\nimport {\n    acClearActiveModalDimension,\n    acSetActiveModalDimension,\n} from '../../actions/activeModalDimension';\n\nclass FilterSelector extends Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            anchorEl: null,\n        };\n    }\n\n    openPanel = (_, event) => {\n        this.setState({ anchorEl: event.currentTarget });\n    };\n\n    closePanel = () => {\n        this.setState({ anchorEl: null });\n    };\n\n    closeDialog = () => {\n        this.setState({ anchorEl: null });\n\n        this.props.clearActiveModalDimension();\n    };\n\n    selectDimension = id => {\n        this.props.setActiveModalDimension(\n            this.props.dimensions.find(dimension => dimension.id === id)\n        );\n    };\n\n    onSelectItems = ({ dimensionId, items }) => {\n        this.props.setEditItemFilters({\n            ...this.props.selectedItems,\n            [dimensionId]: items,\n        });\n    };\n\n    onDeselectItems = ({ dimensionId, itemIdsToRemove }) => {\n        const oldList = this.props.selectedItems[dimensionId] || [];\n        const newList = oldList.filter(\n            item => !itemIdsToRemove.includes(item.id)\n        );\n\n        if (newList.length) {\n            this.props.setEditItemFilters({\n                ...this.props.selectedItems,\n                [dimensionId]: newList,\n            });\n        } else {\n            this.props.removeEditItemFilter(dimensionId);\n        }\n    };\n\n    onReorderItems = ({ dimensionId, itemIds }) => {\n        const oldList = this.props.selectedItems[dimensionId] || [];\n        const reorderedList = itemIds.map(id =>\n            oldList.find(item => item.id === id)\n        );\n\n        this.props.setEditItemFilters({\n            ...this.props.selectedItems,\n            [dimensionId]: reorderedList,\n        });\n    };\n\n    saveFilter = id => {\n        const filterItems = this.props.selectedItems[id];\n\n        if (filterItems && filterItems.length) {\n            this.props.addItemFilter({\n                id,\n                value: [...filterItems],\n            });\n        } else {\n            this.props.removeItemFilter(id);\n        }\n\n        this.closeDialog();\n    };\n\n    render() {\n        const {\n            theme,\n            displayNameProperty,\n            dimension,\n            dimensions,\n            selectedDimensions,\n            selectedItems,\n        } = this.props;\n\n        return (\n            <Fragment>\n                <Button onClick={this.openPanel}>\n                    {i18n.t('Add filter')}\n                    <ArrowDropDownIcon />\n                </Button>\n                <Popover\n                    open={Boolean(this.state.anchorEl)}\n                    anchorEl={this.state.anchorEl}\n                    anchorOrigin={{ vertical: 'bottom', horizontal: 'left' }}\n                    onClose={this.closePanel}\n                    style={{\n                        height: '100%',\n                        fontFamily: theme.typography.fontFamily,\n                    }}\n                >\n                    <DimensionsPanel\n                        style={{ width: '320px' }}\n                        dimensions={dimensions}\n                        onDimensionClick={this.selectDimension}\n                        selectedIds={selectedDimensions}\n                    />\n                </Popover>\n                {dimension ? (\n                    <FilterDialog\n                        displayNameProperty={displayNameProperty}\n                        dimension={dimension}\n                        selectedItems={selectedItems[dimension.id] || []}\n                        onSelect={this.onSelectItems}\n                        onDeselect={this.onDeselectItems}\n                        onReorder={this.onReorderItems}\n                        onClose={this.closeDialog}\n                        onConfirm={this.saveFilter}\n                    />\n                ) : null}\n            </Fragment>\n        );\n    }\n}\n\nconst mapStateToProps = state => ({\n    displayNameProperty: sGetSettingsDisplayNameProperty(state),\n    dimension: sGetActiveModalDimension(state),\n    dimensions: sGetDimensions(state),\n    selectedDimensions: sGetFiltersKeys(state),\n    selectedItems: sGetEditItemFiltersRoot(state),\n});\n\nFilterSelector.propTypes = {\n    addItemFilter: PropTypes.func,\n    clearActiveModalDimension: PropTypes.func,\n    dimension: PropTypes.object,\n    dimensions: PropTypes.array,\n    displayNameProperty: PropTypes.string,\n    removeEditItemFilter: PropTypes.func,\n    removeItemFilter: PropTypes.func,\n    selectedDimensions: PropTypes.array,\n    selectedItems: PropTypes.object,\n    setActiveModalDimension: PropTypes.func,\n    setEditItemFilters: PropTypes.func,\n    theme: PropTypes.object,\n};\n\nexport default connect(\n    mapStateToProps,\n    {\n        clearActiveModalDimension: acClearActiveModalDimension,\n        setActiveModalDimension: acSetActiveModalDimension,\n        addItemFilter: acAddItemFilter,\n        removeItemFilter: acRemoveItemFilter,\n        removeEditItemFilter: acRemoveEditItemFilter,\n        setEditItemFilters: acSetEditItemFilters,\n    }\n)(withTheme()(FilterSelector));\n","import React, { Component } from 'react';\nimport InfoOutlineIcon from '@material-ui/icons/InfoOutlined';\nimport { colors } from '@dhis2/ui-core';\nimport PropTypes from 'prop-types';\n\nclass Info extends Component {\n    show = false;\n\n    toggle() {\n        this.show = !this.show;\n        return this.show;\n    }\n\n    render() {\n        return (\n            <div onClick={() => this.props.onClick(this.toggle())}>\n                <InfoOutlineIcon style={{ fill: colors.grey600 }} />\n            </div>\n        );\n    }\n}\n\nInfo.propTypes = {\n    onClick: PropTypes.func,\n};\n\nexport default Info;\n","import React, { Component, Fragment } from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport { Link } from 'react-router-dom';\nimport i18n from '@dhis2/d2-i18n';\nimport SharingDialog from '@dhis2/d2-ui-sharing-dialog';\nimport Star from '@material-ui/icons/Star';\nimport StarBorder from '@material-ui/icons/StarBorder';\n\nimport { orObject } from '../../modules/util';\nimport { tStarDashboard } from '../../actions/dashboards';\nimport { acSetSelectedShowDescription } from '../../actions/selected';\nimport FilterSelector from '../ItemFilter/FilterSelector';\nimport { Button } from '@dhis2/ui-core';\nimport Info from './Info';\nimport {\n    sGetSelectedId,\n    sGetSelectedShowDescription,\n} from '../../reducers/selected';\nimport {\n    sGetDashboardById,\n    sGetDashboardItems,\n} from '../../reducers/dashboards';\nimport { colors } from '@dhis2/ui-core';\n\nconst NO_DESCRIPTION = i18n.t('No description');\n\nconst styles = {\n    actions: {\n        display: 'flex',\n        alignItems: 'center',\n        marginLeft: '20px',\n    },\n    starIcon: {\n        fill: colors.grey600,\n    },\n    textButton: {\n        minWidth: '30px',\n        top: '1px',\n    },\n    editLink: {\n        display: 'inline-block',\n        verticalAlign: 'top',\n        textDecoration: 'none',\n        marginRight: '4px',\n    },\n    titleBar: {\n        display: 'flex',\n        alignItems: 'flex-start',\n    },\n    titleBarIcon: {\n        marginLeft: 5,\n        position: 'relative',\n        top: 1,\n        cursor: 'pointer',\n    },\n};\n\nclass ViewTitleBar extends Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            sharingDialogIsOpen: false,\n        };\n    }\n\n    toggleSharingDialog = () =>\n        this.setState({ sharingDialogIsOpen: !this.state.sharingDialogIsOpen });\n\n    render() {\n        const {\n            id,\n            name,\n            description,\n            access,\n            style,\n            showDescription,\n            starred,\n            onStarClick,\n            onInfoClick,\n            classes,\n        } = this.props;\n\n        const titleStyle = Object.assign({}, style.title, {\n            cursor: 'default',\n            userSelect: 'text',\n            top: '7px',\n        });\n\n        const StarIcon = starred ? Star : StarBorder;\n\n        return (\n            <Fragment>\n                <div className={classes.titleBar}>\n                    <span style={titleStyle}>{name}</span>\n                    <div className={classes.actions}>\n                        <div\n                            className={classes.titleBarIcon}\n                            onClick={onStarClick}\n                        >\n                            <StarIcon className={classes.starIcon} />\n                        </div>\n                        <div className={classes.titleBarIcon}>\n                            <Info onClick={onInfoClick} />\n                        </div>\n                        <div style={{ marginLeft: '10px' }}>\n                            {access.update ? (\n                                <Link\n                                    className={classes.editLink}\n                                    to={`/${id}/edit`}\n                                >\n                                    <Button>{i18n.t('Edit')}</Button>\n                                </Link>\n                            ) : null}\n                            {access.manage ? (\n                                <span style={{ marginRight: '4px' }}>\n                                    <Button onClick={this.toggleSharingDialog}>\n                                        {i18n.t('Share')}\n                                    </Button>\n                                </span>\n                            ) : null}\n                            <span style={{ marginRight: '4px' }}>\n                                <FilterSelector />\n                            </span>\n                        </div>\n                    </div>\n                </div>\n                {showDescription ? (\n                    <div\n                        className=\"dashboard-description\"\n                        style={Object.assign(\n                            { paddingTop: '5px', paddingBottom: '5px' },\n                            style.description,\n                            !description ? { color: '#888' } : {}\n                        )}\n                    >\n                        {description || NO_DESCRIPTION}\n                    </div>\n                ) : null}\n                {id ? (\n                    <SharingDialog\n                        d2={this.context.d2}\n                        id={id}\n                        type=\"dashboard\"\n                        open={this.state.sharingDialogIsOpen}\n                        onRequestClose={this.toggleSharingDialog}\n                    />\n                ) : null}\n            </Fragment>\n        );\n    }\n}\n\nconst mapStateToProps = state => {\n    const id = sGetSelectedId(state);\n    const dashboard = orObject(sGetDashboardById(state, id));\n\n    return {\n        id,\n        name: dashboard.displayName,\n        description: dashboard.displayDescription,\n        dashboardItems: sGetDashboardItems(state),\n        showDescription: sGetSelectedShowDescription(state),\n        starred: dashboard.starred,\n        access: orObject(dashboard.access),\n    };\n};\n\nconst mergeProps = (stateProps, dispatchProps, ownProps) => {\n    const { id, starred, showDescription } = stateProps;\n    const { dispatch } = dispatchProps;\n\n    return {\n        ...stateProps,\n        ...ownProps,\n        onStarClick: () => dispatch(tStarDashboard(id, !starred)),\n        onInfoClick: () =>\n            dispatch(acSetSelectedShowDescription(!showDescription)),\n    };\n};\n\nexport default connect(\n    mapStateToProps,\n    null,\n    mergeProps\n)(withStyles(styles)(ViewTitleBar));\n\nViewTitleBar.propTypes = {\n    access: PropTypes.object,\n    classes: PropTypes.object,\n    description: PropTypes.string,\n    id: PropTypes.string,\n    name: PropTypes.string,\n    showDescription: PropTypes.bool,\n    starred: PropTypes.bool,\n    style: PropTypes.object,\n    onInfoClick: PropTypes.func,\n    onStarClick: PropTypes.func,\n};\n\nViewTitleBar.defaultProps = {\n    name: '',\n    description: '',\n    starred: false,\n    showDescription: false,\n    onInfoClick: null,\n};\n\nViewTitleBar.contextTypes = {\n    d2: PropTypes.object,\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport { colors } from '@dhis2/ui-core';\nimport EditTitleBar from './EditTitleBar';\nimport ViewTitleBar from './ViewTitleBar';\n\nimport './TitleBar.css';\n\nconst style = {\n    title: {\n        position: 'relative',\n        fontSize: 21,\n        fontWeight: 500,\n        color: colors.black,\n        minWidth: 50,\n    },\n    description: {\n        fontSize: 14,\n        color: colors.grey800,\n    },\n};\n\nconst TitleBar = ({ edit }) => {\n    return (\n        <div\n            className=\"titlebar-wrapper\"\n            style={{\n                padding: '20px 15px 5px 10px',\n            }}\n        >\n            {edit ? (\n                <EditTitleBar style={style} />\n            ) : (\n                <ViewTitleBar style={style} />\n            )}\n        </div>\n    );\n};\n\nTitleBar.propTypes = {\n    edit: PropTypes.bool,\n};\n\nexport default TitleBar;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nimport i18n from '@dhis2/d2-i18n';\n\nimport * as pluginManager from './plugin';\nimport { getBaseUrl, orObject } from '../../../modules/util';\nimport { getGridItemDomId } from '../../ItemGrid/gridUtil';\n\nconst pluginCredentials = d2 => {\n    return {\n        baseUrl: getBaseUrl(d2),\n        auth: d2.Api.getApi().defaultHeaders.Authorization,\n    };\n};\n\nclass DefaultPlugin extends Component {\n    pluginCredentials = null;\n\n    constructor(props, context) {\n        super(props);\n\n        this.d2 = context.d2;\n    }\n\n    shouldPluginReload = prevProps => {\n        // TODO - fix this hack, to handle bug with multiple\n        // rerendering while switching between dashboards.\n        //\n        // To determine if the rendering is happening because of a\n        // dashboard switch, check if the item reference has changed.\n        const reloadAllowed = this.props.item === prevProps.item;\n\n        const filtersChanged = prevProps.itemFilters !== this.props.itemFilters;\n        const vis = orObject(this.props.visualization);\n        const prevVis = orObject(prevProps.visualization);\n        const visChanged =\n            vis.id !== prevVis.id || vis.activeType !== prevVis.activeType;\n\n        return reloadAllowed && (visChanged || filtersChanged);\n    };\n\n    reloadPlugin = prevProps => {\n        if (\n            pluginManager.pluginIsAvailable(\n                this.props.item,\n                this.props.visualization\n            ) &&\n            this.shouldPluginReload(prevProps)\n        ) {\n            const prevVis = orObject(prevProps.visualization);\n            const currentVis = this.props.visualization;\n\n            const useActiveType =\n                currentVis.activeType !== prevVis.activeType ||\n                currentVis.activeType !== this.props.item.type;\n\n            if (\n                useActiveType ||\n                this.props.itemFilters !== prevProps.itemFilters\n            ) {\n                pluginManager.unmount(\n                    this.props.item,\n                    prevVis.activeType || this.props.item.type\n                );\n\n                pluginManager.load(this.props.item, this.props.visualization, {\n                    credentials: this.pluginCredentials,\n                    activeType: useActiveType ? currentVis.activeType : null,\n                });\n            }\n        }\n    };\n\n    componentDidMount() {\n        this.pluginCredentials = pluginCredentials(this.d2);\n\n        if (\n            pluginManager.pluginIsAvailable(\n                this.props.item,\n                this.props.visualization\n            )\n        ) {\n            pluginManager.load(this.props.item, this.props.visualization, {\n                credentials: this.pluginCredentials,\n                activeType: !this.props.editMode ? this.getActiveType() : null,\n            });\n        }\n    }\n\n    componentDidUpdate(prevProps) {\n        this.reloadPlugin(prevProps);\n    }\n\n    getActiveType = () =>\n        this.props.visualization.activeType || this.props.item.type;\n\n    render() {\n        const { classes, item, visualization, style } = this.props;\n        const pluginIsAvailable = pluginManager.pluginIsAvailable(\n            item,\n            visualization\n        );\n\n        return pluginIsAvailable ? (\n            <div id={getGridItemDomId(item.id)} style={style} />\n        ) : (\n            <div className={classes.textDiv}>\n                {i18n.t('Unable to load the plugin for this item')}\n            </div>\n        );\n    }\n}\n\nDefaultPlugin.contextTypes = {\n    d2: PropTypes.object,\n};\n\nDefaultPlugin.propTypes = {\n    classes: PropTypes.object,\n    editMode: PropTypes.bool,\n    item: PropTypes.object,\n    itemFilters: PropTypes.object,\n    style: PropTypes.object,\n    visualization: PropTypes.object,\n};\n\nDefaultPlugin.defaultProps = {\n    style: {},\n    item: {},\n    itemFilters: {},\n    visualization: {},\n};\n\nexport default DefaultPlugin;\n","import React from 'react';\nimport { colors } from '@dhis2/ui-core';\n\nexport const ThreeDots = () => (\n    <svg\n        height=\"18\"\n        viewBox=\"0 0 18 18\"\n        width=\"18\"\n        xmlns=\"http://www.w3.org/2000/svg\"\n    >\n        <path\n            d=\"m4 7.5c-.83 0-1.5.67-1.5 1.5s.67 1.5 1.5 1.5 1.5-.67 1.5-1.5-.67-1.5-1.5-1.5zm10 0c-.83 0-1.5.67-1.5 1.5s.67 1.5 1.5 1.5 1.5-.67 1.5-1.5-.67-1.5-1.5-1.5zm-5 0c-.83 0-1.5.67-1.5 1.5s.67 1.5 1.5 1.5 1.5-.67 1.5-1.5-.67-1.5-1.5-1.5z\"\n            fill=\"#6e7a8a\"\n        />\n    </svg>\n);\n\nexport const SpeechBubble = () => (\n    <svg\n        height=\"20\"\n        viewBox=\"0 0 20 20\"\n        width=\"20\"\n        xmlns=\"http://www.w3.org/2000/svg\"\n        style={{ margin: '3px 2px 0 2px' }} // Temporary fix for the misaligned icon, should be removed once the icon is replaced\n    >\n        <path\n            d=\"m20 2h-16c-1.1 0-1.99.9-1.99 2l-.01 18 4-4h14c1.1 0 2-.9 2-2v-12c0-1.1-.9-2-2-2zm-2 12h-12v-2h12zm0-3h-12v-2h12zm0-3h-12v-2h12z\"\n            fill=\"#6e7a8a\"\n            fillRule=\"evenodd\"\n            transform=\"translate(-2 -2)\"\n        />\n    </svg>\n);\n\nexport const Warning = () => (\n    <svg\n        xmlns=\"http://www.w3.org/2000/svg\"\n        height=\"24\"\n        viewBox=\"0 0 24 24\"\n        width=\"24\"\n        fill={colors.grey600}\n    >\n        <path d=\"M0 0h24v24H0z\" fill=\"none\" />\n        <path d=\"M1 21h22L12 2 1 21zm12-3h-2v-2h2v2zm0-4h-2v-4h2v4z\" />\n    </svg>\n);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport i18n from '@dhis2/d2-i18n';\nimport { Warning } from './assets/icons';\n\nimport classes from './styles/FatalErrorBoundary.module.css';\n\nclass FatalErrorBoundary extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            errorFound: false,\n        };\n    }\n    componentDidCatch(error, info) {\n        this.setState({\n            errorFound: true,\n        });\n        console.log('error: ', error);\n        console.log('info: ', info);\n    }\n    render() {\n        if (this.state.errorFound) {\n            return (\n                <p className={classes.container}>\n                    <span className={classes.icon}>\n                        <Warning />\n                    </span>\n                    <span className={classes.message}>\n                        {i18n.t(\n                            'There was a problem loading this dashboard item'\n                        )}\n                    </span>\n                </p>\n            );\n        }\n        return this.props.children;\n    }\n}\n\nFatalErrorBoundary.propTypes = {\n    children: PropTypes.node,\n};\n\nexport default FatalErrorBoundary;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport i18n from '@dhis2/d2-i18n';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport { colors } from '@dhis2/ui-core';\n\nimport classes from './styles/DeleteItemButton.module.css';\n\nconst DeleteItemButton = ({ onClick }) => (\n    <button\n        type=\"button\"\n        className={classes.deleteItemButton}\n        onClick={onClick}\n        title={i18n.t(`Delete item`)}\n    >\n        <DeleteIcon style={{ fill: colors.red500 }} />\n    </button>\n);\n\nDeleteItemButton.propTypes = {\n    onClick: PropTypes.func,\n};\n\nexport default DeleteItemButton;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\n\nimport { sGetIsEditing } from '../../reducers/editDashboard';\nimport { acRemoveDashboardItem } from '../../actions/editDashboard';\nimport DeleteItemButton from './DeleteItemButton';\n\nimport classes from './styles/ItemHeader.module.css';\n\n// This is the margin-top + margin-bottom defined in the css file\nexport const HEADER_MARGIN_HEIGHT = 12;\n\nconst ItemHeader = props => {\n    const {\n        title,\n        editMode,\n        actionButtons,\n        itemId,\n        acRemoveDashboardItem,\n        forwardedRef,\n    } = props;\n\n    const handleDeleteItem = () => acRemoveDashboardItem(itemId);\n\n    return (\n        <div className={classes.itemHeaderWrap} ref={forwardedRef}>\n            <p className={classes.itemTitle}>{title}</p>\n            {editMode ? (\n                <div className={classes.itemActionsWrap}>\n                    <DeleteItemButton onClick={handleDeleteItem} />\n                </div>\n            ) : (\n                actionButtons && (\n                    <div className={classes.itemActionsWrap}>\n                        {actionButtons}\n                    </div>\n                )\n            )}\n        </div>\n    );\n};\n\nItemHeader.propTypes = {\n    acRemoveDashboardItem: PropTypes.func,\n    actionButtons: PropTypes.node,\n    editMode: PropTypes.bool,\n    forwardedRef: PropTypes.object,\n    itemId: PropTypes.string,\n    title: PropTypes.string,\n};\n\nItemHeader.defaultProps = {\n    forwardedRef: {},\n};\n\nconst mapStateToProps = state => ({\n    editMode: sGetIsEditing(state),\n});\n\nconst mapDispatchToProps = {\n    acRemoveDashboardItem,\n};\n\nconst ConnectedItemHeader = connect(\n    mapStateToProps,\n    mapDispatchToProps\n)(ItemHeader);\n\n// TODO this is a false positive that is fixed in eslint-plugin-react v7.15\n// github.com/yannickcr/eslint-plugin-react/blob/master/CHANGELOG.md\n/* eslint-disable react/display-name */\nexport default React.forwardRef((props, ref) => (\n    <ConnectedItemHeader {...props} forwardedRef={ref} />\n));\n/* eslint-enable react/display-name */\n","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\n\nimport {\n    isSingleValue,\n    isYearOverYear,\n    VIS_TYPE_GAUGE,\n    VIS_TYPE_PIE,\n} from '@dhis2/analytics';\nimport { Button, Menu, MenuItem, Divider, colors } from '@dhis2/ui-core';\nimport i18n from '@dhis2/d2-i18n';\nimport Popover from '@material-ui/core/Popover';\nimport TableIcon from '@material-ui/icons/ViewList';\nimport ChartIcon from '@material-ui/icons/InsertChart';\nimport MapIcon from '@material-ui/icons/Public';\nimport LaunchIcon from '@material-ui/icons/Launch';\n\nimport { ThreeDots, SpeechBubble } from './assets/icons';\nimport { pluginIsAvailable, getLink } from './plugin';\nimport {\n    CHART,\n    MAP,\n    REPORT_TABLE,\n    EVENT_CHART,\n    EVENT_REPORT,\n    isTrackerDomainType,\n    hasMapView,\n    getAppName,\n} from '../../../modules/itemTypes';\n\nconst iconFill = { fill: colors.grey600 };\n\nconst ItemHeaderButtons = props => {\n    const [anchorEl, setAnchorEl] = useState(null);\n\n    const { item, visualization, onSelectActiveType, d2, activeType } = props;\n\n    const isTrackerType = isTrackerDomainType(item.type);\n\n    const onViewTable = () => {\n        handleClose();\n        onSelectActiveType(isTrackerType ? EVENT_REPORT : REPORT_TABLE);\n    };\n\n    const onViewChart = () => {\n        handleClose();\n        onSelectActiveType(isTrackerType ? EVENT_CHART : CHART);\n    };\n\n    const onViewMap = () => {\n        handleClose();\n        onSelectActiveType(MAP);\n    };\n\n    const itemHasMapView = () => hasMapView(item.type);\n\n    const handleMenuClick = (_, event) => setAnchorEl(event.currentTarget);\n\n    const handleInterpretationClick = () => {\n        props.onToggleFooter();\n        if (anchorEl !== null) {\n            handleClose();\n        }\n    };\n\n    const handleClose = () => setAnchorEl(null);\n\n    const type = visualization.type || item.type;\n    const canViewAs =\n        !isSingleValue(type) &&\n        !isYearOverYear(type) &&\n        type !== VIS_TYPE_GAUGE &&\n        type !== VIS_TYPE_PIE;\n\n    const interpretationMenuLabel = props.activeFooter\n        ? i18n.t(`Hide interpretations and details`)\n        : i18n.t(`Show interpretations and details`);\n\n    const ViewAsMenuItems = () => (\n        <>\n            {activeType !== CHART && activeType !== EVENT_CHART && (\n                <MenuItem\n                    dense\n                    label={i18n.t('View as Chart')}\n                    onClick={onViewChart}\n                    icon={<ChartIcon style={iconFill} />}\n                />\n            )}\n            {activeType !== REPORT_TABLE && activeType !== EVENT_REPORT && (\n                <MenuItem\n                    dense\n                    label={i18n.t('View as Table')}\n                    onClick={onViewTable}\n                    icon={<TableIcon style={iconFill} />}\n                />\n            )}\n            {itemHasMapView() && activeType !== MAP && (\n                <MenuItem\n                    dense\n                    label={i18n.t('View as Map')}\n                    onClick={onViewMap}\n                    icon={<MapIcon style={iconFill} />}\n                />\n            )}\n        </>\n    );\n\n    return pluginIsAvailable(item, visualization) ? (\n        <>\n            <Button small secondary onClick={handleMenuClick}>\n                <ThreeDots />\n            </Button>\n            {anchorEl && (\n                <Popover\n                    open={Boolean(anchorEl)}\n                    onClose={handleClose}\n                    anchorEl={anchorEl}\n                >\n                    <Menu>\n                        {canViewAs && (\n                            <>\n                                <ViewAsMenuItems />\n                                <Divider />\n                            </>\n                        )}\n                        <MenuItem\n                            dense\n                            icon={<LaunchIcon style={{ fill: '#6e7a8a' }} />}\n                            label={i18n.t('Open in {{appName}} app', {\n                                appName: getAppName(item.type),\n                            })}\n                            href={getLink(item, d2)}\n                            target=\"_blank\"\n                        />\n                        <MenuItem\n                            dense\n                            icon={<SpeechBubble />}\n                            label={interpretationMenuLabel}\n                            onClick={handleInterpretationClick}\n                        />\n                    </Menu>\n                </Popover>\n            )}\n        </>\n    ) : null;\n};\n\nItemHeaderButtons.propTypes = {\n    activeFooter: PropTypes.bool,\n    activeType: PropTypes.string,\n    d2: PropTypes.object,\n    item: PropTypes.object,\n    visualization: PropTypes.object,\n    onSelectActiveType: PropTypes.func,\n    onToggleFooter: PropTypes.func,\n};\n\nexport default ItemHeaderButtons;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { colors } from '@dhis2/ui-core';\nimport { getId } from './plugin';\nimport InterpretationsComponent from '@dhis2/d2-ui-interpretations';\n\nconst style = {\n    scrollContainer: {\n        overflowY: 'auto',\n        height: '340px',\n    },\n    line: {\n        margin: '-1px 0px 0px',\n        height: '1px',\n        border: 'none',\n        backgroundColor: colors.grey100,\n    },\n};\n\nclass ItemFooter extends Component {\n    render() {\n        const objectId = getId(this.props.item);\n\n        return (\n            <div className=\"dashboard-item-footer\">\n                <hr style={style.line} />\n                <div style={style.scrollContainer}>\n                    <InterpretationsComponent\n                        d2={this.context.d2}\n                        item={this.props.item}\n                        type={this.props.item.type.toLowerCase()}\n                        id={objectId}\n                        appName=\"dashboard\"\n                    />\n                </div>\n            </div>\n        );\n    }\n}\n\nItemFooter.contextTypes = {\n    d2: PropTypes.object.isRequired,\n};\n\nItemFooter.propTypes = {\n    item: PropTypes.object.isRequired,\n};\n\nexport default ItemFooter;\n","// Note that this ignores discrepancies in 'this', so shouldn't be used with bound functions\n// This is useful instead of lodash/memoize when we only need to memoize a single value\n// Inspiration: https://github.com/alexreardon/memoize-one\n\nconst memoizeOne = fn => {\n    let lastArgs = undefined;\n    let lastValue = undefined;\n\n    return (...args) => {\n        if (\n            lastArgs &&\n            args.length === lastArgs.length &&\n            args.every((arg, i) => arg === lastArgs[i])\n        ) {\n            return lastValue;\n        }\n        lastArgs = args;\n        lastValue = fn(...args);\n        return lastValue;\n    };\n};\n\nexport default memoizeOne;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport CircularProgress from '@material-ui/core/CircularProgress';\n\nconst styles = theme => ({\n    progress: {\n        margin: theme.spacing.unit * 2,\n        maxWidth: 200,\n        textAlign: 'center',\n        alignSelf: 'center',\n    },\n    outer: {\n        display: 'flex',\n        justifyContent: 'center',\n        height: '100%',\n    },\n});\n\nfunction CircularIndeterminate(props) {\n    const { classes } = props;\n    return (\n        <div className={classes.outer}>\n            <CircularProgress className={classes.progress} />\n        </div>\n    );\n}\n\nCircularIndeterminate.propTypes = {\n    classes: PropTypes.object.isRequired,\n};\n\nexport default withStyles(styles)(CircularIndeterminate);\n","import React, { Component, Fragment } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { withStyles } from '@material-ui/core/styles';\nimport uniqueId from 'lodash/uniqueId';\nimport VisualizationPlugin from '@dhis2/data-visualizer-plugin';\nimport i18n from '@dhis2/d2-i18n';\n\nimport DefaultPlugin from './DefaultPlugin';\nimport FatalErrorBoundary from './FatalErrorBoundary';\nimport ItemHeader, { HEADER_MARGIN_HEIGHT } from '../ItemHeader';\nimport ItemHeaderButtons from './ItemHeaderButtons';\nimport ItemFooter from './ItemFooter';\nimport * as pluginManager from './plugin';\nimport { sGetVisualization } from '../../../reducers/visualizations';\nimport { sGetItemFiltersRoot } from '../../../reducers/itemFilters';\nimport {\n    acAddVisualization,\n    acSetActiveVisualizationType,\n} from '../../../actions/visualizations';\nimport {\n    VISUALIZATION,\n    MAP,\n    CHART,\n    REPORT_TABLE,\n} from '../../../modules/itemTypes';\nimport memoizeOne from '../../../modules/memoizeOne';\n\nimport { colors } from '@dhis2/ui-core';\nimport { getVisualizationConfig } from './plugin';\nimport LoadingMask from './LoadingMask';\nimport { ITEM_CONTENT_PADDING_BOTTOM } from '../../ItemGrid/ItemGrid';\n\nconst styles = {\n    icon: {\n        width: 16,\n        height: 16,\n        marginLeft: 3,\n        cursor: 'pointer',\n        fill: colors.grey600,\n    },\n    title: {\n        overflow: 'hidden',\n        maxWidth: '85%',\n        textOverflow: 'ellipsis',\n        whiteSpace: 'nowrap',\n    },\n    textDiv: {\n        fontSize: '14px',\n        fontStretch: 'normal',\n        padding: '10px',\n        lineHeight: '20px',\n    },\n    loadingCover: {\n        position: 'absolute',\n        height: '100%',\n        width: '100%',\n        left: 0,\n        top: 0,\n        zIndex: 100,\n        background: '#ffffffab',\n    },\n};\n\nexport class Item extends Component {\n    state = {\n        showFooter: false,\n        configLoaded: false,\n        pluginIsLoaded: false,\n    };\n\n    constructor(props, context) {\n        super(props);\n\n        this.d2 = context.d2;\n\n        this.contentRef = React.createRef();\n        this.headerRef = React.createRef();\n\n        this.memoizedApplyFilters = memoizeOne(this.applyFilters);\n\n        this.memoizedGetVisualizationConfig = memoizeOne(\n            getVisualizationConfig\n        );\n\n        this.memoizedGetContentStyle = memoizeOne(this.getContentStyle);\n    }\n\n    async componentDidMount() {\n        this.props.onVisualizationLoaded(\n            // TODO do not call fetch on the pluginManager, do it here as the manager will eventually be removed...\n            await pluginManager.fetch(this.props.item)\n        );\n\n        this.setState({\n            configLoaded: true,\n        });\n    }\n\n    componentDidUpdate(prevProps, prevState) {\n        if (\n            prevState.pluginIsLoaded &&\n            (prevProps.visualization !== this.props.visualization ||\n                prevProps.itemFilters !== this.props.itemFilters)\n        ) {\n            this.setState({\n                pluginIsLoaded: false,\n            });\n        }\n    }\n\n    applyFilters = (visualization, filters) => {\n        if (!Object.keys(filters).length) {\n            return visualization;\n        }\n\n        // deep clone objects in filters to avoid changing the visualization in the Redux store\n        const visRows = visualization.rows.map(obj => ({ ...obj }));\n        const visColumns = visualization.columns.map(obj => ({ ...obj }));\n        const visFilters = visualization.filters.map(obj => ({ ...obj }));\n\n        Object.keys(filters).forEach(dimensionId => {\n            if (filters[dimensionId]) {\n                let dimensionFound = false;\n\n                [visRows, visColumns, visFilters].forEach(dimensionObjects =>\n                    dimensionObjects\n                        .filter(obj => obj.dimension === dimensionId)\n                        .forEach(obj => {\n                            dimensionFound = true;\n                            obj.items = filters[dimensionId];\n                        })\n                );\n\n                // add dimension to filters if not already present elsewhere\n                if (!dimensionFound) {\n                    visFilters.push({\n                        dimension: dimensionId,\n                        items: filters[dimensionId],\n                    });\n                }\n            }\n        });\n\n        return {\n            ...visualization,\n            rows: visRows,\n            columns: visColumns,\n            filters: visFilters,\n        };\n    };\n\n    getUniqueKey = memoizeOne(() => uniqueId());\n\n    pluginCredentials = null;\n\n    getPluginComponent = () => {\n        const activeType = this.getActiveType();\n        const visualization = this.memoizedGetVisualizationConfig(\n            this.props.visualization,\n            this.props.item.type,\n            activeType\n        );\n\n        if (!visualization) {\n            return (\n                <div className={this.props.classes.textDiv}>\n                    {i18n.t('No data to display')}\n                </div>\n            );\n        }\n\n        const calculatedHeight =\n            this.props.item.originalHeight -\n            this.headerRef.current.clientHeight -\n            HEADER_MARGIN_HEIGHT -\n            ITEM_CONTENT_PADDING_BOTTOM;\n\n        const props = {\n            ...this.props,\n            visualization,\n            style: this.memoizedGetContentStyle(\n                calculatedHeight,\n                this.contentRef ? this.contentRef.offsetHeight : null,\n                this.props.editMode\n            ),\n        };\n\n        switch (activeType) {\n            case VISUALIZATION:\n            case CHART:\n            case REPORT_TABLE: {\n                return (\n                    <Fragment>\n                        {!this.state.pluginIsLoaded ? (\n                            <div style={styles.loadingCover}>\n                                <LoadingMask />\n                            </div>\n                        ) : null}\n                        <VisualizationPlugin\n                            d2={this.d2}\n                            visualization={this.memoizedApplyFilters(\n                                visualization,\n                                props.itemFilters\n                            )}\n                            onLoadingComplete={this.onLoadingComplete}\n                            forDashboard={true}\n                            style={props.style}\n                        />\n                    </Fragment>\n                );\n            }\n            case MAP: {\n                if (props.item.type === MAP) {\n                    // apply filters only to thematic and event layers\n                    // for maps AO\n                    const mapViews = props.visualization.mapViews.map(obj => {\n                        if (\n                            obj.layer.includes('thematic') ||\n                            obj.layer.includes('event')\n                        ) {\n                            return this.memoizedApplyFilters(\n                                obj,\n                                props.itemFilters\n                            );\n                        }\n\n                        return obj;\n                    });\n\n                    props.visualization = {\n                        ...props.visualization,\n                        mapViews,\n                    };\n                } else {\n                    // this is the case of a non map AO passed to the maps plugin\n                    // due to a visualization type switch in dashboard item\n                    // maps plugin takes care of converting the AO to a suitable format\n                    props.visualization = this.memoizedApplyFilters(\n                        props.visualization,\n                        props.itemFilters\n                    );\n                }\n\n                return <DefaultPlugin {...props} />;\n            }\n            default: {\n                props.visualization = this.memoizedApplyFilters(\n                    props.visualization,\n                    props.itemFilters\n                );\n\n                return <DefaultPlugin {...props} />;\n            }\n        }\n    };\n\n    onLoadingComplete = () => {\n        this.setState({\n            pluginIsLoaded: true,\n        });\n    };\n\n    onToggleFooter = () => {\n        this.setState(\n            { showFooter: !this.state.showFooter },\n            this.props.onToggleItemExpanded(this.props.item.id)\n        );\n    };\n\n    onSelectActiveType = type => {\n        if (type === this.getActiveType()) {\n            return;\n        }\n\n        pluginManager.unmount(this.props.item, this.getActiveType());\n\n        this.props.onSelectActiveType(this.props.visualization.id, type);\n    };\n\n    getActiveType = () =>\n        this.props.visualization.activeType || this.props.item.type;\n\n    pluginIsAvailable = () =>\n        pluginManager.pluginIsAvailable(\n            this.props.item,\n            this.props.visualization\n        );\n\n    getContentStyle = (calculatedHeight, measuredHeight, editMode) => {\n        const height = editMode\n            ? measuredHeight || calculatedHeight\n            : calculatedHeight;\n\n        return { height };\n    };\n\n    render() {\n        const { item, editMode, itemFilters } = this.props;\n        const { showFooter } = this.state;\n\n        const actionButtons = (\n            <ItemHeaderButtons\n                item={item}\n                visualization={this.props.visualization}\n                onSelectActiveType={this.onSelectActiveType}\n                onToggleFooter={this.onToggleFooter}\n                d2={this.d2}\n                activeType={this.getActiveType()}\n                activeFooter={this.state.showFooter}\n            />\n        );\n\n        return (\n            <>\n                <ItemHeader\n                    title={pluginManager.getName(item)}\n                    itemId={item.id}\n                    actionButtons={actionButtons}\n                    ref={this.headerRef}\n                />\n                <FatalErrorBoundary>\n                    <div\n                        key={this.getUniqueKey(itemFilters)}\n                        className=\"dashboard-item-content\"\n                        ref={ref => (this.contentRef = ref)}\n                    >\n                        {this.state.configLoaded && this.getPluginComponent()}\n                    </div>\n                </FatalErrorBoundary>\n                {!editMode && showFooter ? <ItemFooter item={item} /> : null}\n            </>\n        );\n    }\n}\n\nItem.contextTypes = {\n    d2: PropTypes.object,\n};\n\nItem.propTypes = {\n    classes: PropTypes.object,\n    editMode: PropTypes.bool,\n    item: PropTypes.object,\n    itemFilters: PropTypes.object,\n    visualization: PropTypes.object,\n    onSelectActiveType: PropTypes.func,\n    onToggleItemExpanded: PropTypes.func,\n    onVisualizationLoaded: PropTypes.func,\n};\n\nItem.defaultProps = {\n    item: {},\n    editMode: false,\n    onToggleItemExpanded: Function.prototype,\n    itemFilters: {},\n    visualization: {},\n};\n\nconst mapStateToProps = (state, ownProps) => ({\n    itemFilters: sGetItemFiltersRoot(state),\n    visualization: sGetVisualization(\n        state,\n        pluginManager.extractFavorite(ownProps.item).id\n    ),\n});\n\nconst mapDispatchToProps = dispatch => ({\n    onVisualizationLoaded: visualization =>\n        dispatch(acAddVisualization(visualization)),\n    onSelectActiveType: (id, type, activeType) =>\n        dispatch(acSetActiveVisualizationType(id, type, activeType)),\n});\n\nexport default connect(\n    mapStateToProps,\n    mapDispatchToProps\n)(withStyles(styles)(Item));\n","import React from 'react';\nimport { colors } from '@dhis2/ui-core';\n\nconst style = {\n    backgroundColor: colors.grey200,\n    border: 'none',\n    height: '1px',\n    margin: '0px 0px 5px 0px',\n};\n\nconst Line = () => <hr style={style} />;\n\nexport default Line;\n","import React, { Component, Fragment } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport i18n from '@dhis2/d2-i18n';\n\nimport { sGetMessagesRoot } from '../../../reducers/messages';\nimport { formatDate } from '../../../modules/util';\nimport { colors } from '@dhis2/ui-core';\nimport ItemHeader from '../ItemHeader';\nimport Line from '../../../widgets/Line';\n\nimport './MessagesItem.css';\n\nconst PRIVATE = 'PRIVATE';\n\nconst messageTypes = {\n    [PRIVATE]: 'Private',\n    VALIDATION_RESULT: 'Validation',\n    TICKET: 'Ticket',\n    SYSTEM: 'System',\n};\n\nconst style = {\n    list: {\n        listStyleType: 'none',\n        paddingLeft: '0px',\n    },\n    seeAll: {\n        textAlign: 'center',\n        fontSize: '13px',\n        marginBottom: '5px',\n    },\n    sender: {\n        fontSize: '13px',\n        lineHeight: '15px',\n        margin: 0,\n        color: colors.grey800,\n    },\n    snippet: {\n        color: colors.grey800,\n        fontSize: '13px',\n        lineHeight: '15px',\n        maxHeight: '30px',\n        overflow: 'hidden',\n    },\n};\n\nclass MessagesItem extends Component {\n    state = {\n        uiLocale: '',\n    };\n\n    async componentDidMount() {\n        const uiLocale = await this.context.d2.currentUser.userSettings.get(\n            'keyUiLocale'\n        );\n\n        this.setState({ uiLocale });\n    }\n\n    getMessageHref = msg => {\n        const msgIdentifier = msg ? `#/${msg.messageType}/${msg.id}` : '';\n        return `${this.context.baseUrl}/dhis-web-messaging/${msgIdentifier}`;\n    };\n\n    getMessageSender = msg => {\n        const latestMsg = msg.messages.slice(-1)[0];\n        return latestMsg.sender ? latestMsg.sender.displayName : '';\n    };\n\n    getMessageItems = () => {\n        const editClass = !this.props.editMode ? 'view' : null;\n\n        return this.props.messages.map(msg => {\n            const redirectToMsg = () => {\n                if (!this.props.editMode) {\n                    document.location.href = this.getMessageHref(msg);\n                }\n            };\n\n            const sender =\n                msg.messageType === PRIVATE\n                    ? this.getMessageSender(msg)\n                    : messageTypes[msg.messageType];\n\n            const readClass = !msg.read ? 'unread' : null;\n            const latestMsg = msg.messages.slice(-1)[0];\n            const msgDate = latestMsg.lastUpdated;\n\n            return (\n                <li\n                    className={`message-item ${editClass}`}\n                    key={msg.id}\n                    onClick={redirectToMsg}\n                >\n                    <p className={`message-title ${readClass}`}>\n                        {msg.displayName} ({msg.messageCount})\n                    </p>\n                    <p style={style.sender}>\n                        {sender} - {formatDate(msgDate, this.state.uiLocale)}\n                    </p>\n                    <p style={style.snippet}>{latestMsg.text}</p>\n                </li>\n            );\n        });\n    };\n\n    render() {\n        return (\n            <Fragment>\n                <ItemHeader\n                    title={i18n.t('Messages')}\n                    itemId={this.props.item.id}\n                />\n                <Line />\n                {this.props.messages.length > 0 && (\n                    <div className=\"dashboard-item-content\">\n                        <ul style={style.list}>{this.getMessageItems()}</ul>\n                        <div style={style.seeAll}>\n                            <a href={this.getMessageHref()}>\n                                {i18n.t('See all messages')}\n                            </a>\n                        </div>\n                    </div>\n                )}\n            </Fragment>\n        );\n    }\n}\n\nMessagesItem.propTypes = {\n    editMode: PropTypes.bool,\n    item: PropTypes.object,\n    messages: PropTypes.array,\n};\n\nMessagesItem.contextTypes = {\n    d2: PropTypes.object,\n    baseUrl: PropTypes.string,\n};\n\nconst mapStateToProps = state => {\n    return {\n        messages: Object.values(sGetMessagesRoot(state)),\n    };\n};\n\nconst MessagesContainer = connect(\n    mapStateToProps,\n    null\n)(MessagesItem);\n\nexport default MessagesContainer;\n","import React, { Fragment } from 'react';\nimport PropTypes from 'prop-types';\nimport i18n from '@dhis2/d2-i18n';\nimport ItemHeader from '../ItemHeader';\nimport NotInterestedIcon from '@material-ui/icons/NotInterested';\n\nconst NotSupportedItem = props => (\n    <Fragment>\n        <ItemHeader\n            title={i18n.t('Item type \"{{type}}\" not supported', {\n                type: props.item.type,\n            })}\n            itemId={props.item.id}\n        />\n        <div\n            style={{\n                display: 'flex',\n                justifyContent: 'center',\n                alignItems: 'center',\n                height: '90%',\n            }}\n        >\n            <NotInterestedIcon\n                style={{ width: 100, height: 100, align: 'center' }}\n                color=\"disabled\"\n            />\n        </div>\n    </Fragment>\n);\n\nNotSupportedItem.propTypes = {\n    item: PropTypes.object,\n};\n\nexport default NotSupportedItem;\n","import React from 'react';\nimport { colors } from '@dhis2/ui-core';\nimport PropTypes from 'prop-types';\n\nconst DescriptionIcon = ({ className }) => (\n    <svg\n        className={className}\n        xmlns=\"http://www.w3.org/2000/svg\"\n        viewBox=\"0 0 24 24\"\n        fill={colors.grey500}\n    >\n        <path d=\"M0 0h24v24H0z\" fill=\"none\" />\n        <path d=\"M14 2H6c-1.1 0-1.99.9-1.99 2L4 20c0 1.1.89 2 1.99 2H18c1.1 0 2-.9 2-2V8l-6-6zm2 16H8v-2h8v2zm0-4H8v-2h8v2zm-3-5V3.5L18.5 9H13z\" />\n    </svg>\n);\n\nDescriptionIcon.propTypes = {\n    className: PropTypes.string,\n};\n\nexport default DescriptionIcon;\n","import React from 'react';\nimport { colors } from '@dhis2/ui-core';\nimport PropTypes from 'prop-types';\n\nconst DeleteIcon = ({ className }) => (\n    <svg\n        className={className}\n        xmlns=\"http://www.w3.org/2000/svg\"\n        width=\"18\"\n        height=\"18\"\n        viewBox=\"0 0 24 24\"\n        fill={colors.red500}\n    >\n        <path d=\"M6 19c0 1.1.9 2 2 2h8c1.1 0 2-.9 2-2V7H6v12zM19 4h-3.5l-1-1h-5l-1 1H5v2h14V4z\" />\n        <path d=\"M0 0h24v24H0z\" fill=\"none\" />\n    </svg>\n);\n\nDeleteIcon.propTypes = {\n    className: PropTypes.string,\n};\n\nexport default DeleteIcon;\n","import React, { Fragment } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { colors } from '@dhis2/ui-core';\nimport DescriptionIcon from '../../../icons/Description';\n\nimport DeleteIcon from '../../../icons/Delete';\nimport Line from '../../../widgets/Line';\nimport { itemTypeMap, getItemUrl } from '../../../modules/itemTypes';\nimport { orArray } from '../../../modules/util';\nimport { tRemoveListItemContent } from './actions';\nimport ItemHeader from '../ItemHeader';\nimport classes from './Item.module.css';\n\nconst getItemTitle = item => itemTypeMap[item.type].pluralTitle;\n\nconst getContentItems = item =>\n    orArray(item[itemTypeMap[item.type].propName]).filter(\n        (item, index, array) =>\n            array.findIndex(el => el.id === item.id) === index\n    );\n\nconst ListItem = (props, context) => {\n    const { item, editMode, tRemoveListItemContent } = props;\n    const contentItems = getContentItems(item);\n\n    const getLink = contentItem => {\n        const deleteButton = (\n            <button\n                className={classes.deletebutton}\n                onClick={() => tRemoveListItemContent(item, contentItem)}\n            >\n                <DeleteIcon className={classes.deleteicon} />\n            </button>\n        );\n\n        return (\n            <Fragment>\n                <a\n                    className={classes.link}\n                    style={{ color: colors.grey900 }}\n                    href={getItemUrl(item.type, contentItem, context.d2)}\n                >\n                    {contentItem.name}\n                </a>\n                {editMode ? deleteButton : null}\n            </Fragment>\n        );\n    };\n\n    return (\n        <Fragment>\n            <ItemHeader title={getItemTitle(item)} itemId={item.id} />\n            <Line />\n            <div className=\"dashboard-item-content\">\n                <ul className={classes.list}>\n                    {contentItems.map(contentItem => (\n                        <li className={classes.item} key={contentItem.id}>\n                            <DescriptionIcon className={classes.itemicon} />\n                            {getLink(contentItem)}\n                        </li>\n                    ))}\n                </ul>\n            </div>\n        </Fragment>\n    );\n};\n\nListItem.propTypes = {\n    editMode: PropTypes.bool,\n    item: PropTypes.object,\n    tRemoveListItemContent: PropTypes.func,\n};\n\nListItem.contextTypes = {\n    d2: PropTypes.object,\n};\n\nexport default connect(\n    null,\n    {\n        tRemoveListItemContent,\n    }\n)(ListItem);\n","import {\n    acUpdateDashboardItem,\n    acRemoveDashboardItem,\n} from '../../../actions/editDashboard';\nimport { itemTypeMap } from '../../../modules/itemTypes';\n\nexport const tRemoveListItemContent = (dashboardItem, content) => dispatch => {\n    const listItemType = itemTypeMap[dashboardItem.type].propName;\n\n    const newContent = dashboardItem[listItemType].filter(\n        item => item.id !== content.id\n    );\n\n    if (newContent.length) {\n        dashboardItem[listItemType] = newContent;\n        dispatch(acUpdateDashboardItem(dashboardItem));\n    } else {\n        dispatch(acRemoveDashboardItem(dashboardItem));\n    }\n};\n","import React, { Fragment } from 'react';\nimport { connect } from 'react-redux';\nimport i18n from '@dhis2/d2-i18n';\nimport PropTypes from 'prop-types';\n\nimport Input from '@material-ui/core/Input';\nimport {\n    Parser as RichTextParser,\n    Editor as RichTextEditor,\n} from '@dhis2/d2-ui-rich-text';\n\nimport { acUpdateDashboardItem } from '../../../actions/editDashboard';\nimport { sGetEditDashboardItems } from '../../../reducers/editDashboard';\nimport { sGetDashboardItems } from '../../../reducers/dashboards';\nimport ItemHeader from '../ItemHeader';\nimport Line from '../../../widgets/Line';\n\nconst style = {\n    textDiv: {\n        padding: '10px',\n        whiteSpace: 'pre-line',\n        lineHeight: '20px',\n    },\n    textField: {\n        fontSize: '14px',\n        fontStretch: 'normal',\n        width: '90%',\n        margin: '0 auto',\n        display: 'block',\n        lineHeight: '24px',\n    },\n    container: {\n        marginBottom: '20px',\n        marginTop: '20px',\n    },\n};\n\nconst TextItem = props => {\n    const { item, editMode, text, acUpdateDashboardItem } = props;\n\n    const onChangeText = event => {\n        const updatedItem = {\n            ...item,\n            text: event.target.value,\n        };\n\n        acUpdateDashboardItem(updatedItem);\n    };\n\n    const viewItem = () => {\n        const textDivStyle = Object.assign({}, style.textField, style.textDiv);\n        return (\n            <div className=\"dashboard-item-content\" style={style.container}>\n                <RichTextParser style={textDivStyle}>{text}</RichTextParser>\n            </div>\n        );\n    };\n\n    const editItem = () => {\n        return (\n            <Fragment>\n                <ItemHeader title={i18n.t('Text item')} itemId={item.id} />\n                <Line />\n                <div className=\"dashboard-item-content\">\n                    <RichTextEditor onEdit={onChangeText}>\n                        <Input\n                            value={text}\n                            multiline\n                            fullWidth\n                            style={style.textField}\n                            placeholder={i18n.t('Add text here')}\n                            onChange={onChangeText}\n                        />\n                    </RichTextEditor>\n                </div>\n            </Fragment>\n        );\n    };\n\n    return <Fragment>{editMode ? editItem() : viewItem()}</Fragment>;\n};\n\nconst mapStateToProps = (state, ownProps) => {\n    const items = ownProps.editMode\n        ? sGetEditDashboardItems(state)\n        : sGetDashboardItems(state);\n\n    const item = items.find(item => item.id === ownProps.item.id);\n\n    return {\n        text: item ? item.text : '',\n    };\n};\n\nTextItem.propTypes = {\n    acUpdateDashboardItem: PropTypes.func,\n    editMode: PropTypes.bool,\n    item: PropTypes.object,\n    text: PropTypes.string,\n};\n\nexport default connect(\n    mapStateToProps,\n    {\n        acUpdateDashboardItem,\n    }\n)(TextItem);\n","import React, { Fragment } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport NotInterestedIcon from '@material-ui/icons/NotInterested';\n\nimport { FILTER_ORG_UNIT } from '../../../actions/itemFilters';\nimport { sGetItemFiltersRoot } from '../../../reducers/itemFilters';\nimport ItemHeader from '../ItemHeader';\nimport Line from '../../../widgets/Line';\n\nconst getIframeSrc = (appDetails, item, itemFilters) => {\n    let iframeSrc = `${appDetails.launchUrl}?dashboardItemId=${item.id}`;\n\n    if (\n        itemFilters &&\n        itemFilters[FILTER_ORG_UNIT] &&\n        itemFilters[FILTER_ORG_UNIT].length\n    ) {\n        const ouIds = itemFilters[FILTER_ORG_UNIT].map(\n            ouPath => ouPath.split('/').slice(-1)[0]\n        );\n\n        iframeSrc += `&userOrgUnit=${ouIds.join(',')}`;\n    }\n\n    return iframeSrc;\n};\n\nconst AppItem = ({ item, itemFilters }, context) => {\n    let appDetails;\n\n    const appKey = item.appKey;\n\n    if (appKey) {\n        appDetails = context.d2.system.installedApps.find(\n            app => app.key === appKey\n        );\n    }\n\n    return appDetails && appDetails.name && appDetails.launchUrl ? (\n        <Fragment>\n            <ItemHeader title={appDetails.name} itemId={item.id} />\n            <Line />\n            <iframe\n                title={appDetails.name}\n                src={getIframeSrc(appDetails, item, itemFilters)}\n                className=\"dashboard-item-content\"\n                style={{ border: 'none' }}\n            />\n        </Fragment>\n    ) : (\n        <Fragment>\n            <ItemHeader title={`${appKey} app not found`} />\n            <Line />\n            <div\n                className=\"dashboard-item-content\"\n                style={{\n                    display: 'flex',\n                    justifyContent: 'center',\n                    alignItems: 'center',\n                    height: '90%',\n                }}\n            >\n                <NotInterestedIcon\n                    color=\"disabled\"\n                    disabled\n                    style={{ width: 100, height: 100, align: 'center' }}\n                />\n            </div>\n        </Fragment>\n    );\n};\n\nAppItem.propTypes = {\n    item: PropTypes.object,\n    itemFilters: PropTypes.object,\n};\n\nAppItem.contextTypes = {\n    d2: PropTypes.object,\n};\n\nconst mapStateToProps = state => ({\n    itemFilters: sGetItemFiltersRoot(state),\n});\n\nexport default connect(mapStateToProps)(AppItem);\n","import React, { Fragment } from 'react';\nimport PropTypes from 'prop-types';\nimport i18n from '@dhis2/d2-i18n';\n\nimport { colors } from '@dhis2/ui-core';\nimport ItemHeader from '../ItemHeader';\n\nconst style = {\n    margin: '21px 28px',\n    fontSize: '14px',\n    lineHeight: '18px',\n    color: colors.grey600,\n};\n\nconst SpacerItem = props => {\n    return (\n        <Fragment>\n            <ItemHeader title={i18n.t('Spacer')} itemId={props.item.id} />\n            <p style={style}>\n                {i18n.t(\n                    'Use a spacer to create empty vertical space between other dashboard items.'\n                )}\n            </p>\n        </Fragment>\n    );\n};\n\nSpacerItem.propTypes = {\n    item: PropTypes.object,\n};\n\nexport default SpacerItem;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport VisualizationItem from './VisualizationItem/Item';\nimport MessagesItem from './MessagesItem/Item';\nimport NotSupportedItem from './NotSupportedItem/Item';\nimport ListItem from './ListItem/Item';\nimport TextItem from './TextItem/Item';\nimport AppItem from './AppItem/Item';\nimport SpacerItem from './SpacerItem/Item';\nimport {\n    APP,\n    VISUALIZATION,\n    REPORT_TABLE,\n    CHART,\n    MAP,\n    EVENT_CHART,\n    EVENT_REPORT,\n    MESSAGES,\n    REPORTS,\n    RESOURCES,\n    USERS,\n    TEXT,\n    SPACER,\n} from '../../modules/itemTypes';\nimport { DEFAULT_STATE_ITEM_FILTERS } from '../../reducers/itemFilters';\n\nconst getGridItem = type => {\n    switch (type) {\n        case VISUALIZATION:\n        case REPORT_TABLE:\n        case CHART:\n        case MAP:\n        case EVENT_CHART:\n        case EVENT_REPORT:\n            return VisualizationItem;\n        case MESSAGES:\n            return MessagesItem;\n        case REPORTS:\n        case RESOURCES:\n        case USERS:\n            return ListItem;\n        case TEXT:\n            return TextItem;\n        case SPACER:\n            return SpacerItem;\n        case APP:\n            return AppItem;\n        default:\n            return NotSupportedItem;\n    }\n};\n\nexport const Item = props => {\n    const GridItem = getGridItem(props.item.type);\n\n    return (\n        <GridItem\n            item={props.item}\n            editMode={props.editMode}\n            itemFilters={\n                props.editMode ? DEFAULT_STATE_ITEM_FILTERS : props.itemFilters\n            }\n            onToggleItemExpanded={props.onToggleItemExpanded}\n        />\n    );\n};\n\nItem.propTypes = {\n    editMode: PropTypes.bool,\n    item: PropTypes.object,\n    itemFilters: PropTypes.object,\n    onToggleItemExpanded: PropTypes.func,\n};\n","import React from 'react';\nimport { colors } from '@dhis2/ui-core';\nimport PropTypes from 'prop-types';\n\nexport const NoContentMessage = ({ text }) => (\n    <div\n        style={{\n            padding: '50px 10px',\n            textAlign: 'center',\n            fontSize: '15px',\n            fontWeight: 500,\n            color: colors.grey600,\n        }}\n    >\n        {text}\n    </div>\n);\n\nNoContentMessage.propTypes = {\n    text: PropTypes.string,\n};\n\nexport default NoContentMessage;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport debounce from 'lodash/debounce';\nimport pick from 'lodash/pick';\n\nconst defaultDebounceMs = 100;\nconst defaultBufferFactor = 0.25;\n\nclass ProgressiveLoadingContainer extends Component {\n    static propTypes = {\n        children: PropTypes.node.isRequired,\n        bufferFactor: PropTypes.number,\n        className: PropTypes.string,\n        debounceMs: PropTypes.number,\n        style: PropTypes.object,\n    };\n    static defaultProps = {\n        debounceMs: defaultDebounceMs,\n        bufferFactor: defaultBufferFactor,\n    };\n\n    state = {\n        shouldLoad: false,\n    };\n    containerRef = null;\n    shouldLoadHandler = null;\n\n    checkShouldLoad() {\n        const bufferPx = this.props.bufferFactor * window.innerHeight;\n\n        if (!this.containerRef) {\n            return;\n        }\n\n        const rect = this.containerRef.getBoundingClientRect();\n        if (\n            rect.bottom > -bufferPx &&\n            rect.top < window.innerHeight + bufferPx\n        ) {\n            this.setState({\n                shouldLoad: true,\n            });\n\n            this.removeHandler();\n        }\n    }\n\n    registerHandler() {\n        this.shouldLoadHandler = debounce(\n            () => this.checkShouldLoad(),\n            this.props.debounceMs\n        );\n\n        window.addEventListener('scroll', this.shouldLoadHandler);\n    }\n    removeHandler() {\n        window.removeEventListener('scroll', this.shouldLoadHandler);\n    }\n\n    componentDidMount() {\n        this.registerHandler();\n        this.checkShouldLoad();\n    }\n\n    componentWillUnmount() {\n        this.removeHandler();\n    }\n\n    render() {\n        const { children, className, style, ...props } = this.props;\n        const { shouldLoad } = this.state;\n\n        const eventProps = pick(props, [\n            'onMouseDown',\n            'onTouchStart',\n            'onMouseUp',\n            'onTouchEnd',\n        ]);\n\n        return (\n            <div\n                ref={ref => (this.containerRef = ref)}\n                style={style}\n                className={className}\n                {...eventProps}\n            >\n                {shouldLoad && children}\n            </div>\n        );\n    }\n}\n\nexport default ProgressiveLoadingContainer;\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport memoize from 'lodash/memoize';\nimport i18n from '@dhis2/d2-i18n';\nimport ReactGridLayout from 'react-grid-layout';\nimport { CircularLoader, ScreenCover } from '@dhis2/ui-core';\n\nimport {\n    acUpdateDashboardLayout,\n    acRemoveDashboardItem,\n} from '../../actions/editDashboard';\nimport { Item } from '../Item/Item';\nimport { resize as pluginResize } from '../Item/VisualizationItem/plugin';\nimport { isVisualizationType } from '../../modules/itemTypes';\nimport {\n    GRID_ROW_HEIGHT,\n    GRID_COMPACT_TYPE,\n    ITEM_MIN_HEIGHT,\n    MARGIN,\n    getGridColumns,\n    hasShape,\n    onItemResize,\n} from './gridUtil';\nimport { orArray } from '../../modules/util';\n\nimport NoContentMessage from '../../widgets/NoContentMessage';\n\nimport 'react-grid-layout/css/styles.css';\nimport 'react-resizable/css/styles.css';\n\nimport './ItemGrid.css';\nimport { sGetSelectedId, sGetSelectedIsLoading } from '../../reducers/selected';\nimport {\n    sGetEditDashboardRoot,\n    sGetEditDashboardItems,\n} from '../../reducers/editDashboard';\nimport {\n    sGetDashboardById,\n    sGetDashboardItems,\n} from '../../reducers/dashboards';\nimport ProgressiveLoadingContainer from '../Item/ProgressiveLoadingContainer';\n\n// Component\n\nconst EXPANDED_HEIGHT = 17;\n// this is set in the .dashboard-item-content css\nexport const ITEM_CONTENT_PADDING_BOTTOM = 4;\n\nexport class ItemGrid extends Component {\n    state = {\n        expandedItems: {},\n    };\n\n    constructor(props) {\n        super(props);\n\n        this.getMemoizedItem = memoize(this.getItem);\n    }\n\n    onToggleItemExpanded = clickedId => {\n        const isExpanded =\n            typeof this.state.expandedItems[clickedId] === 'boolean'\n                ? this.state.expandedItems[clickedId]\n                : false;\n\n        const expandedItems = { ...this.state.expandedItems };\n        expandedItems[clickedId] = !isExpanded;\n        this.setState({ expandedItems });\n    };\n\n    onRemoveItem = clickedId => {\n        this.props.acRemoveDashboardItem(clickedId);\n    };\n\n    componentWillReceiveProps(nextProps) {\n        if (nextProps.edit) {\n            this.setState({ expandedItems: {} });\n        }\n    }\n\n    onLayoutChange = newLayout => {\n        if (this.props.edit) {\n            this.props.acUpdateDashboardLayout(newLayout);\n        }\n    };\n\n    onResizeStop = (layout, oldItem, newItem) => {\n        onItemResize(newItem.i);\n\n        const dashboardItem = this.props.dashboardItems.find(\n            item => item.id === newItem.i\n        );\n\n        // call resize on the item component if it's a plugin type\n        if (dashboardItem && isVisualizationType(dashboardItem)) {\n            pluginResize(dashboardItem);\n        }\n    };\n\n    onRemoveItemWrapper = id => () => this.onRemoveItem(id);\n\n    getItem = dashboardItem => {\n        const expandedItem = this.state.expandedItems[dashboardItem.id];\n        const hProp = { h: dashboardItem.h };\n\n        if (expandedItem && expandedItem === true) {\n            hProp.h = dashboardItem.h + EXPANDED_HEIGHT;\n        }\n\n        return Object.assign({}, dashboardItem, hProp, {\n            i: dashboardItem.id,\n            minH: ITEM_MIN_HEIGHT,\n            randomNumber: Math.random(),\n        });\n    };\n\n    getItems = dashboardItems =>\n        dashboardItems.map(item => this.getMemoizedItem(item));\n\n    getItemComponent = item => {\n        const itemClassNames = [\n            item.type,\n            this.props.edit ? 'edit' : 'view',\n        ].join(' ');\n\n        return (\n            <ProgressiveLoadingContainer\n                key={item.i}\n                className={itemClassNames}\n            >\n                <Item\n                    item={item}\n                    editMode={this.props.edit}\n                    onToggleItemExpanded={this.onToggleItemExpanded}\n                />\n            </ProgressiveLoadingContainer>\n        );\n    };\n\n    getItemComponents = items => items.map(item => this.getItemComponent(item));\n\n    render() {\n        const { edit, isLoading, dashboardItems } = this.props;\n\n        if (!isLoading && !dashboardItems.length) {\n            return (\n                <NoContentMessage\n                    text={i18n.t('There are no items on this dashboard')}\n                />\n            );\n        }\n\n        const items = edit\n            ? this.getItems(dashboardItems)\n            : dashboardItems.map(this.getItem);\n\n        return (\n            <div className=\"grid-wrapper\">\n                {isLoading ? (\n                    <ScreenCover>\n                        <CircularLoader />\n                    </ScreenCover>\n                ) : null}\n                <ReactGridLayout\n                    onLayoutChange={this.onLayoutChange}\n                    onResizeStop={this.onResizeStop}\n                    className=\"layout\"\n                    layout={items}\n                    margin={MARGIN}\n                    cols={getGridColumns()}\n                    rowHeight={GRID_ROW_HEIGHT}\n                    width={window.innerWidth}\n                    compactType={GRID_COMPACT_TYPE}\n                    isDraggable={edit}\n                    isResizable={edit}\n                    draggableCancel=\"input,textarea\"\n                >\n                    {this.getItemComponents(items)}\n                </ReactGridLayout>\n            </div>\n        );\n    }\n}\n\nItemGrid.propTypes = {\n    acRemoveDashboardItem: PropTypes.func,\n    acUpdateDashboardLayout: PropTypes.func,\n    dashboardItems: PropTypes.array,\n    edit: PropTypes.bool,\n    isLoading: PropTypes.bool,\n};\n\nItemGrid.defaultProps = {\n    dashboardItems: [],\n};\n\n// Container\n\nconst mapStateToProps = (state, ownProps) => {\n    const selectedDashboard = ownProps.edit\n        ? sGetEditDashboardRoot(state)\n        : sGetDashboardById(state, sGetSelectedId(state));\n\n    const dashboardItems = ownProps.edit\n        ? sGetEditDashboardItems(state)\n        : sGetDashboardItems(state);\n\n    return {\n        isLoading: sGetSelectedIsLoading(state) || !selectedDashboard,\n        dashboardItems,\n    };\n};\n\nconst mapDispatchToProps = {\n    acUpdateDashboardLayout,\n    acRemoveDashboardItem,\n};\n\nconst mergeProps = (stateProps, dispatchProps, ownProps) => {\n    const validItems = orArray(stateProps.dashboardItems).filter(hasShape);\n\n    return {\n        ...dispatchProps,\n        edit: ownProps.edit,\n        isLoading: stateProps.isLoading,\n        dashboardItems: validItems,\n        onItemResize,\n    };\n};\n\nexport default connect(\n    mapStateToProps,\n    mapDispatchToProps,\n    mergeProps\n)(ItemGrid);\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nimport i18n from '@dhis2/d2-i18n';\n\nimport { colors } from '@dhis2/ui-core';\n\nconst styles = {\n    badgeContainer: {\n        margin: '2px',\n        padding: '0 16px',\n        borderRadius: '4px',\n        color: colors.white,\n        backgroundColor: '#212934',\n        height: 36,\n        display: 'flex',\n        alignItems: 'center',\n    },\n    badge: {\n        fontSize: '13px',\n        cursor: 'pointer',\n        whiteSpace: 'nowrap',\n    },\n    badgeRemove: {\n        fontSize: '12px',\n        textDecoration: 'underline',\n        marginLeft: '24px',\n        cursor: 'pointer',\n    },\n};\n\nclass FilterBadge extends Component {\n    onClick = id => () => this.props.onClick(id);\n    onRemove = id => () => this.props.onRemove(id);\n\n    render() {\n        const { data } = this.props;\n\n        return (\n            <div style={styles.badgeContainer}>\n                <span style={styles.badge} onClick={this.onClick(data.id)}>\n                    {`${data.name}: ${\n                        data.values.length > 1\n                            ? i18n.t('{{count}} selected', {\n                                  count: data.values.length,\n                              })\n                            : data.values[0].name\n                    }`}\n                </span>\n                <span\n                    style={styles.badgeRemove}\n                    onClick={this.onRemove(data.id)}\n                >\n                    {i18n.t('Remove')}\n                </span>\n            </div>\n        );\n    }\n}\n\nFilterBadge.propTypes = {\n    data: PropTypes.object.isRequired,\n    onClick: PropTypes.func.isRequired,\n    onRemove: PropTypes.func.isRequired,\n};\n\nFilterBadge.defaultProps = {\n    onClick: Function.prototype,\n    onRemove: Function.prototype,\n};\n\nexport default FilterBadge;\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { createSelector } from 'reselect';\nimport { withStyles } from '@material-ui/core/styles';\n\nimport { sGetDimensions } from '../../reducers/dimensions';\nimport { sGetItemFiltersRoot } from '../../reducers/itemFilters';\nimport { sGetControlBarUserRows } from '../../reducers/controlBar';\nimport { getTopOffset } from '../ControlBar/controlBarDimensions';\nimport { acRemoveItemFilter } from '../../actions/itemFilters';\nimport { acRemoveEditItemFilter } from '../../actions/editItemFilters';\nimport { acSetActiveModalDimension } from '../../actions/activeModalDimension';\n\nimport FilterBadge from './FilterBadge';\n\nconst styles = {\n    bar: {\n        position: 'sticky',\n        zIndex: 7,\n        padding: '8px 0',\n        display: 'flex',\n        justifyContent: 'center',\n        flexWrap: 'wrap',\n    },\n};\n\nexport class FilterBar extends Component {\n    onBadgeRemove = id => {\n        this.props.removeItemFilter(id);\n        this.props.removeEditItemFilter(id);\n    };\n\n    onBadgeClick = id => {\n        this.props.setActiveModalDimension({\n            id,\n            name: this.props.filters.find(item => item.id === id).name,\n        });\n    };\n\n    render() {\n        const { filters, userRows, classes } = this.props;\n        const top = getTopOffset(userRows) + 10;\n\n        return filters.length ? (\n            <div className={classes.bar} style={{ top }}>\n                {filters.map(filter => (\n                    <FilterBadge\n                        key={filter.id}\n                        data={filter}\n                        onClick={this.onBadgeClick}\n                        onRemove={this.onBadgeRemove}\n                    />\n                ))}\n            </div>\n        ) : null;\n    }\n}\n\nFilterBar.propTypes = {\n    filters: PropTypes.array.isRequired,\n    removeEditItemFilter: PropTypes.func.isRequired,\n    removeItemFilter: PropTypes.func.isRequired,\n    classes: PropTypes.object,\n    setActiveModalDimension: PropTypes.func,\n    userRows: PropTypes.number,\n};\n\nFilterBar.defaultProps = {\n    filters: [],\n    removeItemFIlter: Function.prototype,\n    removeEditItemFilter: Function.prototype,\n};\n\n// simplify the filters structure to:\n// [{ id: 'pe', name: 'Period', values: [{ id: 2019: name: '2019' }, {id: 'LAST_MONTH', name: 'Last month' }]}, ...]\nconst filtersSelector = createSelector(\n    [sGetItemFiltersRoot, sGetDimensions],\n    (filters, dimensions) =>\n        Object.keys(filters).reduce((arr, id) => {\n            arr.push({\n                id: id,\n                name: dimensions.find(dimension => dimension.id === id).name,\n                values: filters[id].map(value => ({\n                    id: value.id,\n                    name: value.displayName || value.name,\n                })),\n            });\n\n            return arr;\n        }, [])\n);\n\nconst mapStateToProps = state => ({\n    filters: filtersSelector(state),\n    userRows: sGetControlBarUserRows(state),\n});\n\nexport default connect(\n    mapStateToProps,\n    {\n        setActiveModalDimension: acSetActiveModalDimension,\n        removeItemFilter: acRemoveItemFilter,\n        removeEditItemFilter: acRemoveEditItemFilter,\n    }\n)(withStyles(styles)(FilterBar));\n","import React, { Fragment } from 'react';\nimport PropTypes from 'prop-types';\nimport TitleBar from '../TitleBar/TitleBar';\nimport ItemGrid from '../ItemGrid/ItemGrid';\nimport FilterBar from '../FilterBar/FilterBar';\n\nexport const DashboardContent = props => (\n    <Fragment>\n        <TitleBar edit={props.editMode} />\n        <FilterBar />\n        <ItemGrid edit={props.editMode} />\n    </Fragment>\n);\n\nDashboardContent.propTypes = {\n    editMode: PropTypes.bool,\n};\n\nexport default DashboardContent;\n","import React, { Fragment } from 'react';\nimport { connect } from 'react-redux';\nimport isEmpty from 'lodash/isEmpty';\nimport i18n from '@dhis2/d2-i18n';\nimport PropTypes from 'prop-types';\n\nimport {\n    sGetAllDashboards,\n    sDashboardsIsFetching,\n} from '../../reducers/dashboards';\nimport { sGetSelectedId } from '../../reducers/selected';\nimport DashboardsBar from '../ControlBar/DashboardsBar';\nimport DashboardVerticalOffset from './DashboardVerticalOffset';\nimport DashboardContent from './DashboardContent';\nimport NoContentMessage from '../../widgets/NoContentMessage';\n\nexport const Content = ({ hasDashboardContent, dashboardsIsEmpty }) => {\n    const msg = dashboardsIsEmpty\n        ? i18n.t(\n              'No dashboards found. Use the + button to create a new dashboard.'\n          )\n        : i18n.t('Requested dashboard not found');\n\n    return hasDashboardContent ? (\n        <DashboardContent editMode={false} />\n    ) : (\n        <NoContentMessage text={msg} />\n    );\n};\n\nContent.propTypes = {\n    dashboardsIsEmpty: PropTypes.bool,\n    hasDashboardContent: PropTypes.bool,\n};\n\nexport const ViewDashboard = ({ id, dashboardsIsEmpty, dashboardsLoaded }) => {\n    const hasDashboardContent = id && !dashboardsIsEmpty;\n    const contentNotReady = !dashboardsLoaded || id === null;\n\n    return (\n        <Fragment>\n            <DashboardsBar />\n            <DashboardVerticalOffset />\n            <div className=\"dashboard-wrapper\">\n                {contentNotReady ? null : (\n                    <Content\n                        hasDashboardContent={hasDashboardContent}\n                        dashboardsIsEmpty={dashboardsIsEmpty}\n                    />\n                )}\n            </div>\n        </Fragment>\n    );\n};\n\nViewDashboard.propTypes = {\n    dashboardsIsEmpty: PropTypes.bool,\n    dashboardsLoaded: PropTypes.bool,\n    id: PropTypes.string,\n};\n\nconst mapStateToProps = state => {\n    const dashboards = sGetAllDashboards(state);\n\n    return {\n        id: sGetSelectedId(state),\n        dashboardsIsEmpty: isEmpty(dashboards),\n        dashboardsLoaded: !sDashboardsIsFetching(state),\n    };\n};\n\nexport default connect(mapStateToProps)(ViewDashboard);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport i18n from '@dhis2/d2-i18n';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport { Button } from '@dhis2/ui-core';\n\nexport const ConfirmDeleteDialog = ({\n    dashboardName,\n    onDeleteConfirmed,\n    onContinueEditing,\n    open,\n}) => {\n    const actions = [\n        <Button key=\"cancel\" secondary onClick={onContinueEditing}>\n            {i18n.t('Cancel')}\n        </Button>,\n        <Button key=\"delete\" destructive onClick={onDeleteConfirmed}>\n            {i18n.t('Delete')}\n        </Button>,\n    ];\n\n    return (\n        <Dialog open={open} onClose={onContinueEditing}>\n            <DialogTitle style={{ fontSize: '1.25rem', fontWeight: '450' }}>\n                {i18n.t('Delete dashboard')}\n            </DialogTitle>\n            <DialogContent>\n                <DialogContentText style={{ fontSize: '0.875rem' }}>\n                    {i18n.t(\n                        'Deleting dashboard \"{{ dashboardName }}\" will remove it for all users. This action cannot be undone. Are you sure you want to permanently delete this dashboard?',\n                        { dashboardName }\n                    )}\n                </DialogContentText>\n            </DialogContent>\n            <DialogActions>{actions}</DialogActions>\n        </Dialog>\n    );\n};\n\nConfirmDeleteDialog.propTypes = {\n    dashboardName: PropTypes.string,\n    open: PropTypes.bool,\n    onContinueEditing: PropTypes.func,\n    onDeleteConfirmed: PropTypes.func,\n};\n\nexport default ConfirmDeleteDialog;\n","import React, { Component, Fragment } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { Redirect } from 'react-router-dom';\nimport i18n from '@dhis2/d2-i18n';\nimport ControlBar from './ControlBar';\nimport TranslationDialog from '@dhis2/d2-ui-translation-dialog';\nimport { Button } from '@dhis2/ui-core';\n\nimport ConfirmDeleteDialog from './ConfirmDeleteDialog';\nimport {\n    tSaveDashboard,\n    acClearEditDashboard,\n} from '../../actions/editDashboard';\nimport {\n    tDeleteDashboard,\n    acSetDashboardDisplayName,\n} from '../../actions/dashboards';\nimport {\n    sGetEditDashboardRoot,\n    sGetIsNewDashboard,\n} from '../../reducers/editDashboard';\nimport {\n    CONTROL_BAR_ROW_HEIGHT,\n    MIN_ROW_COUNT,\n    getControlBarHeight,\n} from './controlBarDimensions';\nimport { apiFetchDashboard } from '../../api/dashboards';\n\nimport classes from './styles/DashboardsBar.module.css';\n\nconst buttonBarStyle = {\n    height: CONTROL_BAR_ROW_HEIGHT,\n    paddingTop: '15px',\n    marginLeft: '15px',\n    marginRight: '15px',\n};\n\nexport class EditBar extends Component {\n    state = {\n        translationDialogIsOpen: false,\n        dashboardModel: undefined,\n        confirmDeleteDialogOpen: false,\n        redirectUrl: undefined,\n    };\n\n    onConfirmDelete = () => {\n        this.setState({ confirmDeleteDialogOpen: true });\n    };\n\n    onSave = () => {\n        this.props.onSave().then(newId => {\n            this.setState({ redirectUrl: `/${newId}` });\n        });\n    };\n\n    onDiscard = () => {\n        this.props.onDiscardChanges();\n        const redirectUrl = this.props.dashboardId\n            ? `/${this.props.dashboardId}`\n            : '/';\n        this.setState({ redirectUrl });\n    };\n\n    onContinueEditing = () => {\n        this.setState({ confirmDeleteDialogOpen: false });\n    };\n\n    onDeleteConfirmed = () => {\n        this.setState({ confirmDeleteDialogOpen: false });\n        this.props.onDelete(this.props.dashboardId).then(() => {\n            this.setState({ redirectUrl: '/' });\n        });\n    };\n\n    onTranslationsSaved = async translations => {\n        if (translations && translations.length) {\n            const dbLocale = await this.context.d2.currentUser.userSettings.get(\n                'keyDbLocale'\n            );\n\n            const translation = translations.find(\n                t => t.locale === dbLocale && t.property === 'NAME'\n            );\n\n            if (translation && translation.value) {\n                this.props.onTranslate(\n                    this.props.dashboardId,\n                    translation.value\n                );\n            }\n        }\n    };\n\n    fetchDashboardModel = () => {\n        if (this.props.dashboardId && !this.state.dashboardModel) {\n            apiFetchDashboard(this.props.dashboardId).then(dashboardModel =>\n                this.setState({ dashboardModel })\n            );\n        }\n    };\n\n    componentDidMount() {\n        this.fetchDashboardModel();\n    }\n\n    componentDidUpdate() {\n        this.fetchDashboardModel();\n    }\n\n    toggleTranslationDialog = () => {\n        this.setState({\n            translationDialogIsOpen: !this.state.translationDialogIsOpen,\n        });\n    };\n\n    confirmDeleteDialog = () =>\n        this.props.deleteAccess && this.props.dashboardId ? (\n            <ConfirmDeleteDialog\n                dashboardName={this.props.dashboardName}\n                onDeleteConfirmed={this.onDeleteConfirmed}\n                onContinueEditing={this.onContinueEditing}\n                open={this.state.confirmDeleteDialogOpen}\n            />\n        ) : null;\n\n    translationDialog = () =>\n        this.state.dashboardModel && this.state.dashboardModel.id ? (\n            <TranslationDialog\n                className=\"translation-dialog\"\n                d2={this.context.d2}\n                open={this.state.translationDialogIsOpen}\n                onRequestClose={this.toggleTranslationDialog}\n                objectToTranslate={this.state.dashboardModel}\n                fieldsToTranslate={['name', 'description']}\n                // TODO handle messages in snackbar\n                onTranslationSaved={this.onTranslationsSaved}\n                onTranslationError={err =>\n                    console.log('translation update error', err)\n                }\n            />\n        ) : null;\n\n    render() {\n        if (this.state.redirectUrl) {\n            return <Redirect to={this.state.redirectUrl} />;\n        }\n\n        const { dashboardId, deleteAccess, updateAccess } = this.props;\n        const controlBarHeight = getControlBarHeight(MIN_ROW_COUNT);\n\n        const discardBtnText = updateAccess\n            ? i18n.t('Exit without saving')\n            : i18n.t('Go to dashboards');\n\n        return (\n            <Fragment>\n                <ControlBar height={controlBarHeight} editMode={true}>\n                    <div style={buttonBarStyle}>\n                        {updateAccess ? (\n                            <div className={classes.leftControls}>\n                                <span style={{ marginRight: '15px' }}>\n                                    <Button primary onClick={this.onSave}>\n                                        {i18n.t('Save changes')}\n                                    </Button>\n                                </span>\n\n                                {dashboardId ? (\n                                    <span style={{ marginRight: '15px' }}>\n                                        <Button\n                                            onClick={\n                                                this.toggleTranslationDialog\n                                            }\n                                        >\n                                            {i18n.t('Translate')}\n                                        </Button>\n                                    </span>\n                                ) : null}\n                                {dashboardId && deleteAccess ? (\n                                    <Button onClick={this.onConfirmDelete}>\n                                        {i18n.t('Delete')}\n                                    </Button>\n                                ) : null}\n                            </div>\n                        ) : null}\n\n                        <div className={classes.rightControls}>\n                            <Button secondary onClick={this.onDiscard}>\n                                {discardBtnText}\n                            </Button>\n                        </div>\n                    </div>\n                </ControlBar>\n                {this.translationDialog()}\n                {this.confirmDeleteDialog()}\n            </Fragment>\n        );\n    }\n}\n\nEditBar.propTypes = {\n    dashboardId: PropTypes.string,\n    dashboardName: PropTypes.string,\n    deleteAccess: PropTypes.bool,\n    updateAccess: PropTypes.bool,\n    onDelete: PropTypes.func,\n    onDiscardChanges: PropTypes.func,\n    onSave: PropTypes.func,\n    onTranslate: PropTypes.func,\n};\n\nEditBar.contextTypes = {\n    d2: PropTypes.object,\n};\n\nconst mapStateToProps = state => {\n    const dashboard = sGetEditDashboardRoot(state);\n\n    let deleteAccess;\n    let updateAccess;\n    if (sGetIsNewDashboard(state)) {\n        deleteAccess = true;\n        updateAccess = true;\n    } else {\n        updateAccess = dashboard.access ? dashboard.access.update : false;\n        deleteAccess = dashboard.access ? dashboard.access.delete : false;\n    }\n\n    return {\n        dashboardId: dashboard.id,\n        dashboardName: dashboard.name,\n        deleteAccess,\n        updateAccess,\n    };\n};\n\nconst mapDispatchToProps = dispatch => ({\n    onSave: () => dispatch(tSaveDashboard()).then(id => id),\n    onDelete: id => dispatch(tDeleteDashboard(id)),\n    onDiscardChanges: () => dispatch(acClearEditDashboard()),\n    onTranslate: (id, value) => dispatch(acSetDashboardDisplayName(id, value)),\n});\n\nexport default connect(\n    mapStateToProps,\n    mapDispatchToProps\n)(EditBar);\n","import React, { Fragment, Component } from 'react';\nimport { connect } from 'react-redux';\nimport i18n from '@dhis2/d2-i18n';\nimport PropTypes from 'prop-types';\n\nimport { acSetEditDashboard } from '../../actions/editDashboard';\nimport { sGetSelectedId } from '../../reducers/selected';\nimport {\n    sGetDashboardById,\n    sGetDashboardItems,\n    sDashboardsIsFetching,\n} from '../../reducers/dashboards';\nimport DashboardVerticalOffset from './DashboardVerticalOffset';\nimport DashboardContent from './DashboardContent';\nimport EditBar from '../ControlBar/EditBar';\nimport NoContentMessage from '../../widgets/NoContentMessage';\n\nexport const Content = ({ updateAccess }) => {\n    return updateAccess ? (\n        <DashboardContent editMode={true} />\n    ) : (\n        <NoContentMessage text={i18n.t('No access')} />\n    );\n};\n\nContent.propTypes = {\n    updateAccess: PropTypes.bool,\n};\nexport class EditDashboard extends Component {\n    state = {\n        initialized: false,\n    };\n\n    initEditDashboard = () => {\n        if (this.props.dashboard) {\n            this.setState({ initialized: true });\n            this.props.setEditDashboard(this.props.dashboard, this.props.items);\n        }\n    };\n\n    componentDidMount() {\n        this.initEditDashboard();\n    }\n\n    componentDidUpdate() {\n        if (!this.state.initialized) {\n            this.initEditDashboard();\n        }\n    }\n\n    getDashboardContent = () => {\n        const contentNotReady =\n            !this.props.dashboardsLoaded || this.props.id === null;\n\n        return (\n            <div className=\"dashboard-wrapper\">\n                {contentNotReady ? null : (\n                    <Content updateAccess={this.props.updateAccess} />\n                )}\n            </div>\n        );\n    };\n\n    render() {\n        return (\n            <Fragment>\n                <EditBar />\n                <DashboardVerticalOffset editMode={true} />\n                {this.getDashboardContent()}\n            </Fragment>\n        );\n    }\n}\n\nEditDashboard.propTypes = {\n    dashboard: PropTypes.object,\n    dashboardsLoaded: PropTypes.bool,\n    id: PropTypes.string,\n    items: PropTypes.array,\n    setEditDashboard: PropTypes.func,\n    updateAccess: PropTypes.bool,\n};\n\nconst mapStateToProps = state => {\n    const id = sGetSelectedId(state);\n    const dashboard = id ? sGetDashboardById(state, id) : null;\n\n    const updateAccess =\n        dashboard && dashboard.access ? dashboard.access.update : false;\n\n    return {\n        dashboard,\n        id,\n        updateAccess,\n        items: sGetDashboardItems(state),\n        dashboardsLoaded: !sDashboardsIsFetching(state),\n    };\n};\n\nexport default connect(\n    mapStateToProps,\n    {\n        setEditDashboard: acSetEditDashboard,\n    }\n)(EditDashboard);\n","import React, { Component, Fragment } from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\n\nimport { acSetEditNewDashboard } from '../../actions/editDashboard';\nimport DashboardVerticalOffset from './DashboardVerticalOffset';\nimport EditBar from '../ControlBar/EditBar';\nimport DashboardContent from './DashboardContent';\n\nclass NewDashboard extends Component {\n    componentDidMount() {\n        this.props.setNewDashboard();\n    }\n\n    render() {\n        return (\n            <Fragment>\n                <EditBar />\n                <DashboardVerticalOffset editMode={true} />\n                <div className=\"dashboard-wrapper\">\n                    <DashboardContent editMode={true} />\n                </div>\n            </Fragment>\n        );\n    }\n}\n\nNewDashboard.propTypes = {\n    setNewDashboard: PropTypes.func,\n};\n\nexport default connect(\n    null,\n    {\n        setNewDashboard: acSetEditNewDashboard,\n    }\n)(NewDashboard);\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\n\nimport { tSelectDashboard } from '../../actions/dashboards';\nimport { sDashboardsIsFetching } from '../../reducers/dashboards';\nimport { EDIT, NEW } from './dashboardModes';\nimport ViewDashboard from './ViewDashboard';\nimport EditDashboard from './EditDashboard';\nimport NewDashboard from './NewDashboard';\n\nclass Dashboard extends Component {\n    setDashboard = () => {\n        if (this.props.dashboardsLoaded) {\n            const id = this.props.match.params.dashboardId || null;\n\n            this.props.selectDashboard(id);\n\n            this.scrollToTop();\n        }\n    };\n\n    scrollToTop = () => {\n        window.scrollTo(0, 0);\n    };\n\n    componentDidMount() {\n        this.setDashboard();\n    }\n\n    componentDidUpdate() {\n        this.setDashboard();\n    }\n\n    render() {\n        switch (this.props.mode) {\n            case EDIT:\n                return <EditDashboard />;\n            case NEW:\n                return <NewDashboard />;\n            default:\n                return <ViewDashboard />;\n        }\n    }\n}\n\nDashboard.propTypes = {\n    dashboardsLoaded: PropTypes.bool,\n    match: PropTypes.object,\n    mode: PropTypes.string,\n    selectDashboard: PropTypes.func,\n};\n\nconst mapStateToProps = state => {\n    return { dashboardsLoaded: !sDashboardsIsFetching(state) };\n};\n\nexport default connect(\n    mapStateToProps,\n    {\n        selectDashboard: tSelectDashboard,\n    }\n)(Dashboard);\n","export const EDIT = 'edit';\nexport const NEW = 'new';\nexport const VIEW = 'view';\n","import React, { Component } from 'react';\nimport { HashRouter as Router, Route, Switch } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport i18n from '@dhis2/d2-i18n';\nimport { HeaderBar } from '@dhis2/ui-widgets';\nimport { CssVariables } from '@dhis2/ui-core';\n\nimport { EDIT, VIEW, NEW } from './Dashboard/dashboardModes';\nimport { acReceivedUser } from '../actions/user';\nimport { tFetchDashboards } from '../actions/dashboards';\nimport { tSetControlBarRows } from '../actions/controlBar';\nimport { tSetDimensions } from '../actions/dimensions';\nimport Dashboard from './Dashboard/Dashboard';\nimport SnackbarMessage from './SnackbarMessage/SnackbarMessage';\n\nimport 'typeface-roboto';\nimport './App.css';\n\nexport class App extends Component {\n    componentDidMount() {\n        this.props.setCurrentUser(this.props.d2.currentUser);\n        this.props.fetchDashboards();\n        this.props.setControlBarRows();\n        this.props.setDimensions(this.props.d2);\n    }\n\n    getChildContext() {\n        return { baseUrl: this.props.baseUrl, i18n, d2: this.props.d2 };\n    }\n\n    render() {\n        return (\n            <>\n                <CssVariables colors spacers />\n                <div className=\"app-wrapper\">\n                    <div className=\"dashboard-header-bar\">\n                        <HeaderBar appName={i18n.t('Dashboard')} />\n                    </div>\n                    <Router>\n                        <Switch>\n                            <Route\n                                exact\n                                path=\"/\"\n                                render={props => (\n                                    <Dashboard {...props} mode={VIEW} />\n                                )}\n                            />\n                            <Route\n                                exact\n                                path=\"/new\"\n                                render={props => (\n                                    <Dashboard {...props} mode={NEW} />\n                                )}\n                            />\n                            <Route\n                                exact\n                                path=\"/:dashboardId\"\n                                render={props => (\n                                    <Dashboard {...props} mode={VIEW} />\n                                )}\n                            />\n                            <Route\n                                exact\n                                path=\"/:dashboardId/edit\"\n                                render={props => (\n                                    <Dashboard {...props} mode={EDIT} />\n                                )}\n                            />\n                        </Switch>\n                    </Router>\n                    <SnackbarMessage />\n                </div>\n            </>\n        );\n    }\n}\n\nApp.propTypes = {\n    fetchDashboards: PropTypes.func.isRequired,\n    setControlBarRows: PropTypes.func.isRequired,\n    setCurrentUser: PropTypes.func.isRequired,\n    setDimensions: PropTypes.func.isRequired,\n    baseUrl: PropTypes.string,\n    d2: PropTypes.object,\n};\n\nApp.childContextTypes = {\n    baseUrl: PropTypes.string,\n    i18n: PropTypes.object,\n    d2: PropTypes.object,\n};\n\nconst mapDispatchToProps = dispatch => {\n    return {\n        setCurrentUser: currentUser => dispatch(acReceivedUser(currentUser)),\n        fetchDashboards: () => dispatch(tFetchDashboards()),\n        setControlBarRows: () => dispatch(tSetControlBarRows()),\n        setDimensions: d2 => dispatch(tSetDimensions(d2)),\n    };\n};\n\nexport default connect(\n    null,\n    mapDispatchToProps\n)(App);\n","import { RECEIVED_USER } from '../reducers/user';\n\nexport const acReceivedUser = value => ({\n    type: RECEIVED_USER,\n    value,\n});\n","//------------------------------------------------------------------------------\n// <auto-generated>\n// This code was generated by d2-i18n-generate.\n//\n// Changes to this file may cause incorrect behavior and will be lost if\n// the code is regenerated.\n// </auto-generated>\n//------------------------------------------------------------------------------\nimport i18n from '@dhis2/d2-i18n';\nimport moment from 'moment';\nimport 'moment/locale/ar';\nimport 'moment/locale/es';\nimport 'moment/locale/fr';\nimport 'moment/locale/lo';\nimport 'moment/locale/pt';\nimport 'moment/locale/ru';\nimport 'moment/locale/sv';\nimport 'moment/locale/tg';\nimport 'moment/locale/uk';\nimport 'moment/locale/ur';\nimport 'moment/locale/vi';\nimport 'moment/locale/zh-cn';\n\nimport arTranslations from './ar/translations.json';\nimport daTranslations from './da/translations.json';\nimport enTranslations from './en/translations.json';\nimport esTranslations from './es/translations.json';\nimport frTranslations from './fr/translations.json';\nimport idTranslations from './id/translations.json';\nimport kmTranslations from './km/translations.json';\nimport loTranslations from './lo/translations.json';\nimport myTranslations from './my/translations.json';\nimport prsTranslations from './prs/translations.json';\nimport psTranslations from './ps/translations.json';\nimport ptTranslations from './pt/translations.json';\nimport pt_BRTranslations from './pt_BR/translations.json';\nimport ruTranslations from './ru/translations.json';\nimport svTranslations from './sv/translations.json';\nimport tetTranslations from './tet/translations.json';\nimport tgTranslations from './tg/translations.json';\nimport ukTranslations from './uk/translations.json';\nimport urTranslations from './ur/translations.json';\nimport viTranslations from './vi/translations.json';\nimport zhTranslations from './zh/translations.json';\nimport zh_CNTranslations from './zh_CN/translations.json';\n\nconst namespace = 'dashboards-app';\nmoment.locale('en');\n\ni18n.addResources('ar', namespace, arTranslations);\ni18n.addResources('da', namespace, daTranslations);\ni18n.addResources('en', namespace, enTranslations);\ni18n.addResources('es', namespace, esTranslations);\ni18n.addResources('fr', namespace, frTranslations);\ni18n.addResources('id', namespace, idTranslations);\ni18n.addResources('km', namespace, kmTranslations);\ni18n.addResources('lo', namespace, loTranslations);\ni18n.addResources('my', namespace, myTranslations);\ni18n.addResources('prs', namespace, prsTranslations);\ni18n.addResources('ps', namespace, psTranslations);\ni18n.addResources('pt', namespace, ptTranslations);\ni18n.addResources('pt_BR', namespace, pt_BRTranslations);\ni18n.addResources('ru', namespace, ruTranslations);\ni18n.addResources('sv', namespace, svTranslations);\ni18n.addResources('tet', namespace, tetTranslations);\ni18n.addResources('tg', namespace, tgTranslations);\ni18n.addResources('uk', namespace, ukTranslations);\ni18n.addResources('ur', namespace, urTranslations);\ni18n.addResources('vi', namespace, viTranslations);\ni18n.addResources('zh', namespace, zhTranslations);\ni18n.addResources('zh_CN', namespace, zh_CNTranslations);\n\ni18n.setDefaultNamespace(namespace);\ni18n.changeLanguage('en');\n\nexport default i18n;\n","/** @module reducers/selected */\nimport { validateReducer } from '../modules/util';\n\nexport const SET_STYLE = 'SET_STYLE';\n\nexport const DEFAULT_STATE_STYLE = 'LIST';\n\n/**\n * Reducer functions that computes and returns the new state based on the given action\n * @function\n * @param {Object} state The current state\n * @param {Object} action The action to be evaluated\n */\nconst style = (state = DEFAULT_STATE_STYLE, action) => {\n    switch (action.type) {\n        case SET_STYLE:\n            return validateReducer(action.value, DEFAULT_STATE_STYLE);\n        default:\n            return state;\n    }\n};\n\nexport default style;\n\n/**\n * Selectors that point to specific props in the state object\n * @function\n * @param {Object} state\n * @returns {Object}\n */\nexport const sGetStyleRoot = state => state.style;\n","import { combineReducers } from 'redux';\nimport arraySort from 'd2-utilizr/lib/arraySort';\n\nimport dashboards, { sGetDashboardsRoot } from './dashboards';\nimport selected from './selected';\nimport dashboardsFilter, {\n    ownerData,\n    sGetFilterName,\n    sGetFilterOrder,\n    sGetFilterOwner,\n} from './dashboardsFilter';\nimport controlBar from './controlBar';\nimport visualizations from './visualizations';\nimport editDashboard from './editDashboard';\nimport messages from './messages';\nimport user from './user';\nimport snackbar from './snackbar';\nimport itemFilters from './itemFilters';\nimport editItemFilters from './editItemFilters';\nimport style from './style';\nimport dimensions from './dimensions';\nimport settings from './settings';\nimport activeModalDimension from './activeModalDimension';\n\nconst USER = 'system';\n\n// Reducers\n\nexport default combineReducers({\n    dashboards,\n    selected,\n    dashboardsFilter,\n    controlBar,\n    visualizations,\n    messages,\n    user,\n    editDashboard,\n    itemFilters,\n    editItemFilters,\n    style,\n    snackbar,\n    dimensions,\n    settings,\n    activeModalDimension,\n});\n\n// Map constants to data\nconst mapConstToData = {\n    NAME: 'name',\n    ITEMS: 'numberOfItems',\n    CREATED: 'created',\n    OWNER: 'owner',\n};\n\n// Selectors\n\n// Filter dashboards by name\nexport const sFilterDashboardsByName = (dashboards, filter) =>\n    dashboards.filter(d =>\n        d.displayName.toLowerCase().includes(filter.toLowerCase())\n    );\n\n// Filter dashboards by owner, TODO FIXME\nexport const sFilterDashboardsByOwner = (dashboards, filter) => {\n    const ME = ownerData[1]; // TODO\n    const OTHERS = ownerData[2]; // TODO\n\n    switch (filter) {\n        case ME:\n            return dashboards.filter(d => d.owner === USER);\n        case OTHERS:\n            return dashboards.filter(d => d.owner !== USER);\n        default:\n            return dashboards;\n    }\n};\n\n// Filter dashboards by order\nexport const sFilterDashboardsByOrder = (dashboards, filter) => {\n    const filterValues = filter.split(':');\n\n    const key = filterValues[0];\n    const direction = filterValues[1];\n\n    return arraySort(dashboards, direction, mapConstToData[key]);\n};\n\n// Selectors dependency level 2\n\n// Get filtered dashboards\nexport const sGetFilteredDashboards = state => {\n    const dashboards = sGetDashboardsRoot(state);\n\n    const nameFilter = sGetFilterName(state);\n    const ownerFilter = sGetFilterOwner(state);\n    const orderFilter = sGetFilterOrder(state);\n\n    return sFilterDashboardsByOrder(\n        sFilterDashboardsByName(\n            sFilterDashboardsByOwner(dashboards, ownerFilter),\n            nameFilter\n        ),\n        orderFilter\n    );\n};\n","import { createStore, applyMiddleware, compose } from 'redux';\nimport { createLogger } from 'redux-logger';\nimport thunk from 'redux-thunk';\nimport reducer from './reducers';\n\nconst configureStore = () => {\n    const middleware = [thunk];\n\n    // Enable Redux devtools if extension is installed instead of redux-logger\n    const composeEnhancers =\n        window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\n    if (\n        !window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ &&\n        process.env.NODE_ENV !== 'production'\n    ) {\n        middleware.push(createLogger());\n    }\n\n    return createStore(\n        reducer,\n        composeEnhancers(applyMiddleware(...middleware))\n    );\n};\n\nexport default configureStore;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport { MuiThemeProvider, createMuiTheme } from '@material-ui/core/styles';\nimport { init as d2Init, config, getManifest, getUserSettings } from 'd2';\nimport dhis2theme from '@dhis2/d2-ui-core/theme/mui3.theme';\n\nimport { Provider as RuntimeProvider } from '@dhis2/app-runtime';\nimport { CssReset } from '@dhis2/ui-core';\n\nimport App from './components/App';\nimport './index.css';\nimport i18n from './locales';\nimport configureStore from './configureStore';\n\nconst muiTheme = () => createMuiTheme(dhis2theme);\n\nconst configI18n = userSettings => {\n    const uiLocale = userSettings.keyUiLocale;\n\n    if (uiLocale && uiLocale !== 'en') {\n        config.i18n.sources.add(`./i18n/i18n_module_${uiLocale}.properties`);\n    }\n\n    config.i18n.sources.add('./i18n/i18n_module_en.properties');\n    i18n.changeLanguage(uiLocale);\n};\n\nconst init = async () => {\n    const manifest = await getManifest('./manifest.webapp');\n\n    // log app info\n    console.info(\n        `Dashboards app, v${manifest.version}, ${\n            manifest.manifest_generated_at\n        }`\n    );\n\n    const isProd = process.env.NODE_ENV === 'production';\n\n    if (\n        !isProd &&\n        (!process.env.REACT_APP_DHIS2_BASE_URL ||\n            !process.env.REACT_APP_DHIS2_AUTHORIZATION)\n    ) {\n        throw new Error(\n            'Missing env variables REACT_APP_DHIS2_BASE_URL and REACT_APP_DHIS2_AUTHORIZATION'\n        );\n    }\n\n    // api config\n    const baseUrl = isProd\n        ? manifest.activities.dhis.href\n        : process.env.REACT_APP_DHIS2_BASE_URL;\n    const authorization = process.env.REACT_APP_DHIS2_AUTHORIZATION;\n\n    config.baseUrl = `${baseUrl}/api/${manifest.dhis2.apiVersion}`;\n    config.headers = isProd ? null : { Authorization: authorization };\n    config.schemas = [\n        'chart',\n        'map',\n        'report',\n        'reportTable',\n        'eventChart',\n        'eventReport',\n        'dashboard',\n        'organisationUnit',\n        'userGroup',\n    ];\n\n    getUserSettings()\n        .then(configI18n)\n        .then(() => d2Init(config))\n        .then(initializedD2 => {\n            ReactDOM.render(\n                <RuntimeProvider\n                    config={{\n                        baseUrl: baseUrl,\n                        apiVersion: manifest.dhis2.apiVersion,\n                    }}\n                >\n                    <CssReset />\n                    <Provider store={configureStore()}>\n                        <MuiThemeProvider theme={muiTheme()}>\n                            <App baseUrl={baseUrl} d2={initializedD2} />\n                        </MuiThemeProvider>\n                    </Provider>\n                </RuntimeProvider>,\n                document.getElementById('root')\n            );\n        });\n};\n\ninit();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"leftControls\":\"DashboardsBar_leftControls__2kr14\",\"rightControls\":\"DashboardsBar_rightControls__2l1lT\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"menuItem\":\"ContentMenuItem_menuItem__2DIcB\",\"launchLink\":\"ContentMenuItem_launchLink__MRANR\",\"label\":\"ContentMenuItem_label__2pIfq\",\"buttonInsert\":\"ContentMenuItem_buttonInsert__1GlZy\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"itemWrap\":\"ItemHeader_itemWrap__3gJiQ\",\"itemHeaderWrap\":\"ItemHeader_itemHeaderWrap__xEKwZ\",\"itemTitle\":\"ItemHeader_itemTitle__3LmXp\",\"itemActionsWrap\":\"ItemHeader_itemActionsWrap__1U5Ex\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"ControlBar_root__3LaTt\",\"content\":\"ControlBar_content__1r98-\",\"draghandle\":\"ControlBar_draghandle__1VWa0\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"FatalErrorBoundary_container__x6zhd\",\"icon\":\"FatalErrorBoundary_icon__2XjC2\",\"message\":\"FatalErrorBoundary_message__2p9y8\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"ClearButton_button__2yjcV\",\"icon\":\"ClearButton_icon__1fqj8\"};","import isObject from 'lodash/isObject';\nimport { VIS_TYPE_COLUMN, VIS_TYPE_PIVOT_TABLE } from '@dhis2/analytics';\nimport { apiFetchFavorite, getMapFields } from '../../../api/metadata';\nimport {\n    REPORT_TABLE,\n    CHART,\n    MAP,\n    EVENT_REPORT,\n    EVENT_CHART,\n    itemTypeMap,\n} from '../../../modules/itemTypes';\nimport { getBaseUrl, getWithoutId } from '../../../modules/util';\nimport { getGridItemDomId } from '../../ItemGrid/gridUtil';\n\n//external plugins\nconst itemTypeToExternalPlugin = {\n    [MAP]: 'mapPlugin',\n    [EVENT_REPORT]: 'eventReportPlugin',\n    [EVENT_CHART]: 'eventChartPlugin',\n};\nconst hasIntegratedPlugin = type => [CHART, REPORT_TABLE].includes(type);\n\nconst getPlugin = type => {\n    if (hasIntegratedPlugin(type)) {\n        return true;\n    }\n    const pluginName = itemTypeToExternalPlugin[type];\n\n    return global[pluginName];\n};\n\nexport const THEMATIC_LAYER = 'thematic';\n\nexport const pluginIsAvailable = (item = {}, visualization = {}) => {\n    const type = visualization.activeType || item.type;\n\n    return !!getPlugin(type);\n};\n\nexport const extractFavorite = item => {\n    if (!isObject(item)) {\n        return null;\n    }\n\n    const propName = itemTypeMap[item.type].propName;\n\n    return (\n        item[propName] ||\n        (item.reportTable ||\n            item.chart ||\n            item.map ||\n            item.eventReport ||\n            item.eventChart ||\n            {})\n    );\n};\n\nexport const extractMapView = map =>\n    map.mapViews && map.mapViews.find(mv => mv.layer.includes(THEMATIC_LAYER));\n\nexport const loadPlugin = (plugin, config, credentials) => {\n    if (!(plugin && plugin.load)) {\n        return;\n    }\n\n    plugin.url = credentials.baseUrl;\n    plugin.loadingIndicator = true;\n    plugin.dashboard = true;\n    if (credentials.auth) {\n        plugin.auth = credentials.auth;\n    }\n    plugin.load(config);\n};\n\nexport const getId = item => extractFavorite(item).id;\nexport const getName = item => extractFavorite(item).name;\nexport const getDescription = item => extractFavorite(item).description;\nexport const getLink = (item, d2) => {\n    const baseUrl = getBaseUrl(d2);\n    const appUrl = itemTypeMap[item.type].appUrl(getId(item));\n\n    return `${baseUrl}/${appUrl}`;\n};\n\nexport const load = async (\n    item,\n    visualization,\n    { credentials, activeType }\n) => {\n    const config = {\n        ...visualization,\n        el: getGridItemDomId(item.id),\n    };\n\n    const type = activeType || item.type;\n    const plugin = getPlugin(type);\n\n    loadPlugin(plugin, config, credentials);\n};\n\nexport const fetch = async item => {\n    const fetchedFavorite = await apiFetchFavorite(getId(item), item.type, {\n        fields: item.type === MAP ? getMapFields() : null,\n    });\n\n    return fetchedFavorite;\n};\n\nexport const resize = item => {\n    const plugin = getPlugin(item.type);\n\n    if (plugin && plugin.resize) {\n        plugin.resize(getGridItemDomId(item.id));\n    }\n};\n\nexport const unmount = (item, activeType) => {\n    const plugin = getPlugin(activeType);\n\n    if (plugin && plugin.unmount) {\n        plugin.unmount(getGridItemDomId(item.id));\n    }\n};\n\nexport const getVisualizationConfig = (\n    visualization,\n    originalType,\n    activeType\n) => {\n    if (originalType === MAP && originalType !== activeType) {\n        const extractedMapView = extractMapView(visualization);\n\n        if (extractedMapView === undefined) {\n            return null;\n        }\n\n        return getWithoutId({\n            ...visualization,\n            ...extractedMapView,\n            mapViews: undefined,\n            type: activeType === CHART ? VIS_TYPE_COLUMN : VIS_TYPE_PIVOT_TABLE,\n        });\n    } else if (originalType === REPORT_TABLE && activeType === CHART) {\n        return getWithoutId({ ...visualization, type: VIS_TYPE_COLUMN });\n    } else if (originalType === CHART && activeType === REPORT_TABLE) {\n        return getWithoutId({\n            ...visualization,\n            type: VIS_TYPE_PIVOT_TABLE,\n        });\n    }\n\n    return getWithoutId(visualization);\n};\n","import isFunction from 'd2-utilizr/lib/isFunction';\n\nimport { orObject } from '../../modules/util';\n\n// Dimensions for the react-grid-layout\n\nexport const GRID_COMPACT_TYPE = 'vertical'; // vertical | horizonal | null\nexport const GRID_ROW_HEIGHT = 10;\nconst GRID_COLUMN_WIDTH_PX = 20;\nconst GRID_LAYOUT = 'FLEXIBLE'; // FIXED | FLEXIBLE\nexport const MARGIN = [10, 10];\n\nexport const NEW_ITEM_SHAPE = { x: 0, y: 0, w: 20, h: 29 };\nexport const ITEM_MIN_HEIGHT = 4;\n\n// Dimensions for getShape\n\nconst NUMBER_OF_ITEM_COLS = 2;\nconst GRID_COLUMNS = 60;\n\nexport const getGridColumns = () => {\n    switch (GRID_LAYOUT) {\n        case 'FLEXIBLE':\n            return GRID_COLUMNS;\n        case 'FIXED':\n            return Math.floor((window.innerWidth - 20) / GRID_COLUMN_WIDTH_PX);\n        default:\n            return GRID_COLUMNS;\n    }\n};\n\n// isNonNegativeInteger\n\nconst isNonNegativeInteger = x => Number.isInteger(x) && x >= 0;\n\n// Does the item have all the shape properties?\n\nexport const hasShape = item =>\n    isNonNegativeInteger(item.x) &&\n    isNonNegativeInteger(item.y) &&\n    isNonNegativeInteger(item.w) &&\n    isNonNegativeInteger(item.h);\n\n// returns a rectangular grid block dimensioned with x, y, w, h in grid units.\n// based on a grid with 3 items across\nexport const getShape = i => {\n    if (!isNonNegativeInteger(i)) {\n        throw new Error('Invalid grid block number');\n    }\n\n    const col = i % NUMBER_OF_ITEM_COLS;\n    const row = Math.floor(i / NUMBER_OF_ITEM_COLS);\n    const itemWidth = Math.floor((GRID_COLUMNS - 1) / NUMBER_OF_ITEM_COLS);\n    const itemHeight = GRID_ROW_HEIGHT * 2;\n\n    return {\n        x: col * itemWidth,\n        y: row * itemHeight,\n        w: itemWidth,\n        h: itemHeight,\n    };\n};\n\n/**\n * Calculates the grid item's original height in pixels based\n * on the height in grid units. This calculation\n * is copied directly from react-grid-layout GridItem.js (calcPosition)\n *\n * @param {Object} item item containing shape (x, y, w, h)\n */\nconst getOriginalHeight = item => {\n    const originalHeight = Math.round(\n        GRID_ROW_HEIGHT * item.h + Math.max(0, item.h - 1) * MARGIN[1]\n    );\n\n    return { originalHeight };\n};\n\n/**\n * Returns an array of items containing the x, y, w, h dimensions\n * and the item's originalheight in pixels\n * @function\n * @param {Array} items\n * @returns {Array}\n */\n\nexport const withShape = items =>\n    items.map((item, index) => {\n        const itemWithShape = hasShape(item)\n            ? item\n            : Object.assign({}, item, getShape(index));\n\n        return Object.assign(\n            {},\n            itemWithShape,\n            getOriginalHeight(itemWithShape)\n        );\n    });\n\nexport const getGridItemDomId = id => `item-${id}`;\n\nexport function onItemResize(id) {\n    const el = orObject(document.querySelector(`#${getGridItemDomId(id)}`));\n    if (isFunction(el.setViewportSize))\n        setTimeout(\n            () => el.setViewportSize(el.clientWidth - 5, el.clientHeight - 5),\n            10\n        );\n}\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"showMoreButton\":\"CategorizedMenuGroup_showMoreButton__3-0Wa\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"deleteItemButton\":\"DeleteItemButton_deleteItemButton__4YLrM\"};"],"sourceRoot":""}
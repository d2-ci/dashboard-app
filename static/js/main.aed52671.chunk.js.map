{"version":3,"sources":["components/Item/styles/DeleteItemButton.module.css","api/metadata.js","components/Item/ListItem/Item.module.css","modules/util.js","reducers/user.js","reducers/dashboards.js","reducers/selected.js","reducers/visualizations.js","actions/visualizations.js","api/index.js","api/dashboards.js","reducers/messages.js","api/messages.js","reducers/snackbar.js","actions/snackbar.js","components/SnackbarMessage/SnackbarMessage.js","actions/selected.js","api/localStorage.js","components/Item/MessagesItem/actions.js","reducers/editDashboard.js","reducers/editItemFilters.js","reducers/itemFilters.js","actions/itemFilters.js","actions/editItemFilters.js","api/editDashboard.js","actions/editDashboard.js","actions/dashboards.js","reducers/controlBar.js","api/controlBar.js","actions/controlBar.js","reducers/dimensions.js","reducers/settings.js","actions/dimensions.js","components/ControlBar/ShowMoreButton.js","components/ControlBar/controlBarDimensions.js","components/ControlBar/ControlBar.js","icons/Star.js","api/dataStatistics.js","components/ControlBar/DashboardItemChip.js","icons/AddCircle.js","icons/Clear.js","components/ControlBar/ClearButton.js","reducers/dashboardsFilter.js","components/ControlBar/Filter.js","components/ControlBar/DashboardsBar.js","actions/dashboardsFilter.js","components/Dashboard/DashboardVerticalOffset.js","components/ItemSelector/HeaderMenuItem.js","icons/Launch.js","components/ItemSelector/ContentMenuItem.js","components/ItemSelector/selectableItems.js","components/ItemSelector/CategorizedMenuGroup.js","components/ItemSelector/actions.js","components/ItemSelector/SinglesMenuGroup.js","components/ItemSelector/ItemSelector.js","components/TitleBar/EditTitleBar.js","components/ItemFilter/FilterDialog.js","reducers/activeModalDimension.js","actions/activeModalDimension.js","components/ItemFilter/FilterSelector.js","components/TitleBar/Info.js","components/TitleBar/ViewTitleBar.js","components/TitleBar/TitleBar.js","components/Item/VisualizationItem/DefaultPlugin.js","components/Item/DeleteItemButton.js","components/Item/ItemHeader.js","components/Item/VisualizationItem/assets/icons.js","components/Item/VisualizationItem/ItemHeaderButtons.js","components/Item/VisualizationItem/ItemFooter.js","modules/memoizeOne.js","components/Item/VisualizationItem/Item.js","widgets/Line.js","components/Item/MessagesItem/Item.js","components/Item/NotSupportedItem/Item.js","icons/Description.js","icons/Delete.js","components/Item/ListItem/Item.js","components/Item/ListItem/actions.js","components/Item/TextItem/Item.js","components/Item/AppItem/Item.js","components/Item/SpacerItem/Item.js","components/Item/Item.js","widgets/NoContentMessage.js","components/Item/ProgressiveLoadingContainer.js","components/ItemGrid/ItemGrid.js","components/FilterBar/FilterBadge.js","components/FilterBar/FilterBar.js","components/Dashboard/DashboardContent.js","components/Dashboard/ViewDashboard.js","components/ControlBar/ConfirmDeleteDialog.js","components/ControlBar/EditBar.js","components/Dashboard/EditDashboard.js","components/Dashboard/NewDashboard.js","components/Dashboard/Dashboard.js","components/Dashboard/dashboardModes.js","components/App.js","actions/user.js","locales/index.js","reducers/style.js","reducers/index.js","configureStore.js","index.js","components/ControlBar/styles/DashboardsBar.module.css","components/ItemSelector/styles/ContentMenuItem.module.css","components/Item/styles/ItemHeader.module.css","components/ControlBar/styles/ControlBar.module.css","components/ControlBar/styles/ClearButton.module.css","components/Item/VisualizationItem/plugin.js","components/ItemGrid/gridUtil.js","modules/itemTypes.js","components/ItemSelector/styles/CategorizedMenuGroup.module.css"],"names":["module","exports","deleteItemButton","getIdNameFields","rename","arguments","length","undefined","concat","getDimensionFields","_ref2","withItems","arrayClean","join","getAxesFields","_ref3","getFavoriteFields","_ref4","withDimensions","withOptions","getFavoritesFields","_ref5","Object","_home_travis_build_dhis2_dashboards_app_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_toConsumableArray__WEBPACK_IMPORTED_MODULE_0__","getListItemFields","getMapFields","apiFetchFavorite","id","type","_ref6","fields","getInstance","then","d2","Api","getApi","get","getEndPointName","list","item","itemicon","link","deleteicon","deletebutton","orArray","param","Array","isArray","orObject","isObject","arrayToIdMap","array","reduce","obj","formatDate","value","uiLocale","global","Intl","DateTimeFormat","locale","year","month","day","format","Date","substr","replace","validateReducer","defaultValue","getBaseUrl","api","idx","baseUrl","indexOf","slice","getWithoutId","object","_home_travis_build_dhis2_dashboards_app_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectSpread__WEBPACK_IMPORTED_MODULE_0__","DEFAULT_STATE_USER","username","isSuperuser","sGetUserUsername","state","user","DEFAULT_STATE_DASHBOARDS","byId","items","updateDashboardProp","_ref","dashboardId","prop","objectSpread","defineProperty","sGetDashboardsRoot","dashboards","sGetDashboardById","sDashboardsIsFetching","sGetAllDashboards","sGetDashboardItems","sGetStarredDashboards","values","filter","dashboard","starred","sGetUnstarredDashboards","sGetDashboardsSortedByStarred","toConsumableArray","arraySort","getCustomDashboards","data","arrayFrom","map","d","name","displayName","description","displayDescription","favorite","owner","created","split","lastUpdated","access","numberOfItems","dashboardItems","isSpacerType","SPACER","VISUALIZATION","reportTable","REPORT_TABLE","chart","CHART","text","isTextType","emptyTextItemContent","combineReducers","action","isLoading","showDescription","sGetSelectedRoot","selected","sGetSelectedId","sGetSelectedIsLoading","sGetSelectedShowDescription","DEFAULT_STATE_VISUALIZATIONS","isEmpty","p","sGetVisualization","visualizations","sGetVisualizationsRoot","acAddVisualization","onError","error","console","log","getDashboardItemsFields","withFavorite","getDashboardFields","apiFetchDashboard","models","catch","apiStarDashboard","isStarred","url","post","delete","apiDeleteDashboard","sGetMessagesRoot","messages","getMessages","DEFAULT_STATE_SNACKBAR","message","duration","open","acCloseSnackbar","loadingDashboardMsg","SnackbarMessageContent","react_default","a","createElement","style","fontWeight","connect","_sGetSnackbar","snackbar","sGetSnackbar","snackbarOpen","snackbarMessage","snackbarDuration","onCloseSnackbar","props","Snackbar_default","zIndex","SnackbarMessage_SnackbarMessageContent","autoHideDuration","onClose","acSetSelectedId","acSetSelectedIsLoading","tLoadDashboard","asyncToGenerator","regenerator_default","mark","_callee","dispatch","dash","wrap","_context","prev","next","sent","acAppendDashboards","abrupt","Promise","resolve","t0","stop","_x","apply","this","tSetSelectedDashboardById","_callee2","getState","snackbarTimeout","onSuccess","_context2","setTimeout","dashboardName","customDashboard","acSetDashboardItems","withShape","localStorage","setItem","forEach","MAP","EVENT_REPORT","EVENT_CHART","extractFavorite","MESSAGES","messageConversations","clearTimeout","_x2","_x3","DEFAULT_STATE_EDIT_DASHBOARD","NEW_DASHBOARD_STATE","sGetEditDashboardRoot","editDashboard","sGetIsEditing","sGetEditDashboardItems","DEFAULT_STATE_EDIT_ITEM_FILTERS","sGetEditItemFiltersRoot","editItemFilters","DEFAULT_STATE_ITEM_FILTERS","sGetItemFiltersRoot","itemFilters","sGetFiltersKeys","keys","acRemoveItemFilter","acRemoveEditItemFilter","saveDashboard","assign","width","w","height","h","save","msg","response","uid","updateDashboard","postDashboard","create","acAddDashboardItem","itemPropName","itemTypeMap","propName","generateUid","content","NEW_ITEM_SHAPE","acUpdateDashboardItem","acRemoveDashboardItem","acSetDashboardStarred","tFetchDashboards","collection","paging","toArray","userRows","sGetControlBarUserRows","controlBar","sGetControlBarRoot","KEY","hasNamespace","currentUser","dataStore","has","getNamespace","apiGetControlBarRows","_callee3","namespace","_context3","t1","t2","find","key","apiPostControlBarRows","_callee4","rows","_context4","set","_x4","_x5","acSetControlBarUserRows","DEFAULT_DIMENSIONS","getDimensionById","DIMENSION_ID_PERIOD","DIMENSION_ID_ORGUNIT","sGetDimensions","dimensions","DEFAULT_SETTINGS","keyDateFormat","keyAnalysisRelativePeriod","keyAnalysisDigitGroupSeparator","displayNameProperty","rootOrganisationUnit","sGetSettings","settings","sGetSettingsDisplayNameProperty","acSetDimensions","styles","showMore","color","colors","grey700","cursor","fontSize","paddingTop","&:hover","textDecoration","disabled","grey500","withStyles","onClick","isMaxHeight","classes","textAlign","className","i18n","t","MIN_ROW_COUNT","getRowsHeight","getNumRowsFromHeight","Math","floor","FIRST_ROW_PADDING_HEIGHT","getTopOffset","getControlBarHeight","ControlBar","_this","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","onStartDrag","setState","dragging","window","addEventListener","onDrag","onEndDrag","event","preventDefault","stopPropagation","newHeight","clientY","onChangeHeight","requestAnimationFrame","removeEventListener","draghandle","onMouseDown","max","rootStyle","top","backgroundColor","editMode","yellow050","white","paddingBottom","transition","root","children","renderDragHandle","React","Component","defaultProps","StarIcon","xmlns","viewBox","fill","apiPostDataStatistics","eventType","chip","margin","grey600","display","verticalAlign","icon","marginTop","unselected","label","chipProps","selectedState","Star","Link","to","debounce","lib","AddCircleIcon","teal600","ClearIcon","grey800","ClearButton","onClear","button","Clear","ownerData","DEFAULT_STATE_DASHBOARDS_FILTER_NAME","DEFAULT_STATE_DASHBOARDS_FILTER_OWNER","order","sGetDashboardsFilterRoot","dashboardsFilter","sGetFilterName","KEYCODE_ENTER","KEYCODE_ESCAPE","filterField","searchIcon","Filter","_Component","setFilterValue","onChangeName","target","handleKeyUp","keyCode","onKeypressEnter","inherits","createClass","nextProps","_this$props","startAdornment","InputAdornment_default","position","Search_default","endAdornment","ControlBar_ClearButton","Input_default","placeholder","onChange","onKeyUp","Function","prototype","MAX_ROW_COUNT","DashboardsBar","_getPrototypeOf2","_len","args","_key","setInitialDashboardState","adjustedHeight","newRows","newRowCount","min","onToggleMaxHeight","onSelectDashboard","history","push","selectedId","onChangeFilterName","rowCount","controlBarHeight","contentWrapperStyle","padding","overflowY","components_ControlBar_ControlBar","leftControls","marginRight","AddCircle","ControlBar_Filter","ControlBar_DashboardItemChip","ControlBar_ShowMoreButton","mapDispatchToProps","withRouter","stateProps","dispatchProps","ownProps","displayDashboards","toLowerCase","includes","HeaderMenuItem","title","dense","LaunchIcon","LaunchLink","e","launchLink","rel","href","Launch","InsertButton","buttonInsert","ContentMenuItem","onInsert","visType","ItemIcon","getItemIcon","renderedItemIcon","visTypeIcons","menuItem","ContentMenuItem_LaunchLink","ContentMenuItem_InsertButton","singleItems","header","TEXT","spacerContent","categorizedItems","USERS","REPORTS","RESOURCES","APP","listItemTypes","CategorizedMenuGroup","addItem","tAddListItemContent","newItem","toggleSeeMore","seeMore","onChangeItemsLimit","_this2","_this$props2","hasMore","react","ItemSelector_HeaderMenuItem","itemUrl","getItemUrl","context","ItemSelector_ContentMenuItem","showMoreButton","contextTypes","PropTypes","isRequired","dashboardItem","listItemType","dashboardItemIndex","findIndex","category","addToDashboard","ItemSearchField","onFocus","ItemSelector","closeList","openList","_","fetchItems","anchorEl","currentTarget","setFilter","getCategorizedMenuGroups","itemType","endPointName","itemCount","getDefaultItemCount","allItems","maxOptions","ItemSelector_CategorizedMenuGroup","pluralTitle","getSinglesMenuGroups","ItemSelector_SinglesMenuGroup","getMenuGroups","queryString","add","Set","ItemSelector_ItemSearchField","Popover_default","anchorOrigin","horizontal","vertical","transformOrigin","PaperProps","disableAutoFocus","disableRestoreFocus","EditTitleBar","onChangeTitle","onChangeDescription","section","titleDescription","itemSelector","components_ItemSelector_ItemSelector","selectedDashboard","justifyContent","flex","clear","underline","&::before","borderBottom","&:hover::before","input","borderRadius","peId","ouId","FilterDialog","onConfirm","dimension","selectedItems","dialogId","commonProps","onSelect","onDeselect","onReorder","build","selectedPeriods","ouItems","dialogTitle","Dialog_default","maxWidth","disableEnforceFocus","dialogContent","DialogActions_default","kind","DEFAULT_STATE_ACTIVE_MODAL_DIMENSION","sGetActiveModalDimension","activeModalDimension","acSetActiveModalDimension","FilterSelector","openPanel","closePanel","closeDialog","clearActiveModalDimension","selectDimension","setActiveModalDimension","onSelectItems","dimensionId","setEditItemFilters","onDeselectItems","itemIdsToRemove","newList","removeEditItemFilter","onReorderItems","itemIds","oldList","reorderedList","saveFilter","filterItems","addItemFilter","removeItemFilter","theme","selectedDimensions","ArrowDropDown_default","Boolean","fontFamily","typography","onDimensionClick","selectedIds","ItemFilter_FilterDialog","filters","withTheme","Info","show","toggle","InfoOutlined_default","NO_DESCRIPTION","actions","alignItems","marginLeft","starIcon","textButton","minWidth","editLink","titleBar","titleBarIcon","ViewTitleBar","toggleSharingDialog","sharingDialogIsOpen","onStarClick","onInfoClick","titleStyle","userSelect","StarBorder","TitleBar_Info","update","manage","ItemFilter_FilterSelector","d2_ui_sharing_dialog_default","onRequestClose","tStarDashboard","black","TitleBar","edit","TitleBar_EditTitleBar","TitleBar_ViewTitleBar","DefaultPlugin","pluginCredentials","shouldPluginReload","prevProps","reloadAllowed","filtersChanged","vis","visualization","prevVis","visChanged","activeType","reloadPlugin","pluginManager","currentVis","useActiveType","credentials","getActiveType","auth","defaultHeaders","Authorization","getGridItemDomId","textDiv","DeleteItemButton","Delete_default","red500","actionButtons","itemId","itemHeaderWrap","itemTitle","itemActionsWrap","Item_DeleteItemButton","ThreeDots","SpeechBubble","fillRule","transform","iconFill","ItemHeaderButtons","_useState","useState","_useState2","slicedToArray","setAnchorEl","onSelectActiveType","isTrackerType","isTrackerDomainType","onViewTable","handleClose","onViewChart","onViewMap","canViewAs","isSingleValue","isYearOverYear","interpretationMenuLabel","activeFooter","pluginIsAvailable","Fragment","small","secondary","icons_ThreeDots","active","InsertChart_default","ViewList_default","hasMapView","Public_default","Launch_default","appName","getAppName","getLink","icons_SpeechBubble","onToggleFooter","scrollContainer","line","border","grey100","ItemFooter","objectId","getId","d2_ui_interpretations_default","memoizeOne","fn","lastArgs","lastValue","every","arg","i","HEADER_HEIGHT","overflow","textOverflow","whiteSpace","fontStretch","lineHeight","applyFilters","visRows","visColumns","columns","visFilters","dimensionFound","dimensionObjects","Item","showFooter","configLoaded","getUniqueKey","uniqueId","getPluginComponent","getVisualizationConfig","getContentStyle","es_lib","forDashboard","mapViews","layer","VisualizationItem_DefaultPlugin","onToggleItemExpanded","contentRef","offsetHeight","originalHeight","createRef","_componentDidMount","onVisualizationLoaded","VisualizationItem_ItemHeaderButtons","Item_ItemHeader","ref","VisualizationItem_ItemFooter","acSetActiveVisualizationType","grey200","Line","PRIVATE","messageTypes","_messageTypes","listStyleType","paddingLeft","seeAll","marginBottom","sender","snippet","maxHeight","MessagesItem","getMessageHref","msgIdentifier","messageType","getMessageSender","latestMsg","getMessageItems","editClass","readClass","read","msgDate","document","location","messageCount","userSettings","widgets_Line","string","MessagesContainer","NotSupportedItem","NotInterested_default","align","DescriptionIcon","DeleteIcon","getItemTitle","ListItem","tRemoveListItemContent","contentItems","index","el","getContentItems","contentItem","Description","deleteButton","icons_Delete","grey900","newContent","textField","container","onChangeText","updatedItem","d2_ui_rich_text","onEdit","multiline","fullWidth","textDivStyle","viewItem","getIframeSrc","appDetails","iframeSrc","launchUrl","ouIds","ouPath","AppItem","appKey","system","installedApps","app","src","SpacerItem","GridItem","VisualizationItem","TextItem","getGridItem","NoContentMessage","ProgressiveLoadingContainer","shouldLoad","containerRef","shouldLoadHandler","bufferPx","bufferFactor","innerHeight","rect","getBoundingClientRect","bottom","removeHandler","checkShouldLoad","debounceMs","registerHandler","_this3","objectWithoutProperties","eventProps","pick","ItemGrid","expandedItems","clickedId","isExpanded","onRemoveItem","onLayoutChange","newLayout","acUpdateDashboardLayout","onResizeStop","layout","oldItem","onItemResize","isVisualizationType","pluginResize","onRemoveItemWrapper","widgets_NoContentMessage","expandedItem","hProp","minH","ITEM_MIN_HEIGHT","react_grid_layout_default","MARGIN","cols","getGridColumns","rowHeight","GRID_ROW_HEIGHT","innerWidth","compactType","GRID_COMPACT_TYPE","isDraggable","isResizable","draggableCancel","itemClassNames","Item_ProgressiveLoadingContainer","Item_Item_Item","validItems","hasShape","badgeContainer","badge","badgeRemove","FilterBadge","onRemove","count","FilterBar","onBadgeRemove","onBadgeClick","bar","FilterBar_FilterBadge","removeItemFIlter","filtersSelector","createSelector","arr","flexWrap","DashboardContent","components_TitleBar_TitleBar","components_FilterBar_FilterBar","components_ItemGrid_ItemGrid","Content","hasDashboardContent","dashboardsIsEmpty","Dashboard_DashboardContent","dashboardsLoaded","contentNotReady","ControlBar_DashboardsBar","Dashboard_DashboardVerticalOffset","ViewDashboard_Content","ConfirmDeleteDialog","onDeleteConfirmed","onContinueEditing","destructive","DialogTitle_default","DialogContent_default","DialogContentText_default","buttonBarStyle","EditBar","translationDialogIsOpen","dashboardModel","confirmDeleteDialogOpen","redirectUrl","onConfirmDelete","onSave","newId","onDiscard","onDiscardChanges","onDelete","onTranslationsSaved","translations","dbLocale","translation","property","onTranslate","fetchDashboardModel","toggleTranslationDialog","confirmDeleteDialog","deleteAccess","ControlBar_ConfirmDeleteDialog","translationDialog","d2_ui_translation_dialog_default","objectToTranslate","fieldsToTranslate","onTranslationSaved","onTranslationError","err","Redirect","updateAccess","discardBtnText","primary","rightControls","sGetIsNewDashboard","dashboardToSave","tDeleteDashboard","acSetDashboardDisplayName","EditDashboard","initialized","initEditDashboard","setEditDashboard","getDashboardContent","EditDashboard_Content","ControlBar_EditBar","NewDashboard","setNewDashboard","Dashboard","setDashboard","match","params","selectDashboard","scrollToTop","scrollTo","mode","Dashboard_EditDashboard","Dashboard_NewDashboard","Dashboard_ViewDashboard","dashboardToSelect","preferredId","getItem","App","setCurrentUser","fetchDashboards","setControlBarRows","setDimensions","spacers","HeaderBar","HashRouter","Switch","Route","exact","path","render","components_Dashboard_Dashboard","components_SnackbarMessage_SnackbarMessage","childContextTypes","controlBarRows","displayNameProp","filteredDimensions","apiFetchDimensions","dim","dimensionType","dataDimensionType","tSetDimensions","moment","addResources","arTranslations","daTranslations","enTranslations","esTranslations","frTranslations","idTranslations","kmTranslations","loTranslations","myTranslations","prsTranslations","psTranslations","ptTranslations","pt_BRTranslations","ruTranslations","svTranslations","tetTranslations","tgTranslations","ukTranslations","urTranslations","viTranslations","zhTranslations","zh_CNTranslations","setDefaultNamespace","changeLanguage","objectClean","conversations","$merge","d2Object","keyUiLocale","authorities","newState","k","$unshift","idToRemove","$splice","stateItems","newStateItems","x","y","stateItem","si","$set","configureStore","middleware","thunk","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","createStore","reducer","applyMiddleware","configI18n","config","sources","manifest","isProd","getManifest","info","version","manifest_generated_at","process","activities","dhis","dhis2","apiVersion","headers","schemas","getUserSettings","d2Init","initializedD2","ReactDOM","build_es","es","store","createMuiTheme","dhis2theme","src_components_App","getElementById","init","itemWrap","itemTypeToExternalPlugin","_itemTypeToExternalPl","_home_travis_build_dhis2_dashboards_app_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_defineProperty__WEBPACK_IMPORTED_MODULE_3__","getPlugin","hasIntegratedPlugin","eventReport","eventChart","loadPlugin","plugin","load","loadingIndicator","getName","appUrl","_home_travis_build_dhis2_dashboards_app_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_asyncToGenerator__WEBPACK_IMPORTED_MODULE_2__","_home_travis_build_dhis2_dashboards_app_node_modules_babel_preset_react_app_node_modules_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default","_home_travis_build_dhis2_dashboards_app_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectSpread__WEBPACK_IMPORTED_MODULE_1__","fetch","fetchedFavorite","resize","unmount","originalType","extractedMapView","mv","VIS_TYPE_COLUMN","VIS_TYPE_PIVOT_TABLE","__webpack_require__","__webpack_exports__","d2_utilizr_lib_isFunction__WEBPACK_IMPORTED_MODULE_0__","d2_utilizr_lib_isFunction__WEBPACK_IMPORTED_MODULE_0___default","n","_modules_util__WEBPACK_IMPORTED_MODULE_1__","isNonNegativeInteger","Number","isInteger","itemWithShape","Error","col","row","itemWidth","itemHeight","getShape","round","getOriginalHeight","querySelector","isFunction","setViewportSize","clientWidth","clientHeight","domainType","defaultItemCount","_itemTypeMap","_home_travis_build_dhis2_dashboards_app_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_defineProperty__WEBPACK_IMPORTED_MODULE_0__","TableIcon","ChartIcon","MapIcon","ExtensionIcon","PersonIcon","FontDownloadIcon","EmailIcon","CropFreeIcon","NotInterestedIcon"],"mappings":"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","file":"static/js/main.aed52671.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"deleteItemButton\":\"DeleteItemButton_deleteItemButton__4YLrM\"};","import { getInstance } from 'd2';\nimport arrayClean from 'd2-utilizr/lib/arrayClean';\n\nimport { getEndPointName } from '../modules/itemTypes';\n\n// Id, name\nexport const getIdNameFields = ({ rename } = {}) => [\n    'id',\n    `${rename ? 'displayName~rename(name)' : 'name,displayName'}`,\n];\n\n// Item\nexport const getItemFields = () => [\n    'dimensionItem~rename(id)',\n    'displayName~rename(name)',\n    'dimensionItemType',\n];\n\n// Dimension\nexport const getDimensionFields = ({ withItems }) =>\n    arrayClean([\n        'dimension',\n        'legendSet[id]',\n        'filter',\n        'programStage',\n        withItems ? `items[${getItemFields().join(',')}]` : ``,\n    ]);\n\n// Axis\nexport const getAxesFields = ({ withItems }) => [\n    `columns[${getDimensionFields({ withItems }).join(',')}]`,\n    `rows[${getDimensionFields({ withItems }).join(',')}]`,\n    `filters[${getDimensionFields({ withItems }).join(',')}]`,\n];\n\n// Favorite\nexport const getFavoriteFields = ({ withDimensions, withOptions }) => {\n    return arrayClean([\n        `${getIdNameFields({ rename: true }).join(',')}`,\n        'displayDescription~rename(description)',\n        withDimensions ? `${getAxesFields({ withItems: true }).join(',')}` : ``,\n        withOptions\n            ? [\n                  '*',\n                  '!attributeDimensions',\n                  '!attributeValues',\n                  '!category',\n                  '!categoryDimensions',\n                  '!categoryOptionGroupSetDimensions',\n                  '!columnDimensions',\n                  '!dataDimensionItems',\n                  '!dataElementDimensions',\n                  '!dataElementGroupSetDimensions',\n                  '!filterDimensions',\n                  '!itemOrganisationUnitGroups',\n                  '!lastUpdatedBy',\n                  '!organisationUnitGroupSetDimensions',\n                  '!organisationUnitLevels',\n                  '!organisationUnits',\n                  '!programIndicatorDimensions',\n                  '!relativePeriods',\n                  '!reportParams',\n                  '!rowDimensions',\n                  '!series',\n                  '!translations',\n                  '!userOrganisationUnit',\n                  '!userOrganisationUnitChildren',\n                  '!userOrganisationUnitGrandChildren',\n              ].join(',')\n            : '',\n    ]);\n};\n\nexport const getFavoritesFields = ({ withDimensions }) => [\n    `reportTable[${getFavoriteFields({ withDimensions }).join(',')}]`,\n    `chart[${['type', ...getFavoriteFields({ withDimensions })].join(',')}]`,\n    `map[${getFavoriteFields({ withDimensions }).join(',')}]`,\n    `eventReport[${getFavoriteFields({ withDimensions }).join(',')}]`,\n    `eventChart[${getFavoriteFields({ withDimensions }).join(',')}]`,\n];\n\n// List item\nexport const getListItemFields = () => [\n    `reports[${getIdNameFields({ rename: true }).join(',')}]`,\n    `resources[${getIdNameFields({ rename: true }).join(',')}]`,\n    `users[${getIdNameFields({ rename: true }).join(',')}]`,\n];\n\n// Map\nexport const getMapFields = () => [\n    `${getIdNameFields({ rename: true }).join(',')}`,\n    'user,longitude,latitude,zoom,basemap',\n    `mapViews[${getFavoriteFields({\n        withDimensions: true,\n        withOptions: true,\n    })}]`,\n];\n\n// Api\n\n// Get more info about the favorite of a dashboard item\nexport const apiFetchFavorite = (id, type, { fields }) =>\n    getInstance().then(d2 =>\n        d2.Api.getApi().get(`${getEndPointName(type)}/${id}`, {\n            fields:\n                fields ||\n                getFavoriteFields({\n                    withDimensions: true,\n                    withOptions: true,\n                }),\n        })\n    );\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"Item_list__2oHc1\",\"item\":\"Item_item__lO40M\",\"itemicon\":\"Item_itemicon__dv5ah\",\"link\":\"Item_link__2gULT\",\"deleteicon\":\"Item_deleteicon__3c7bl\",\"deletebutton\":\"Item_deletebutton__1DfY5\"};","import isObject from 'lodash/isObject';\n\n// validation\nexport function orNull(param) {\n    return param === undefined ? null : param;\n}\n\nexport function orArray(param) {\n    return Array.isArray(param) ? param : [];\n}\n\nexport function orObject(param) {\n    return isObject(param) ? param : {};\n}\n\n// array\nexport function arrayGetById(array, id) {\n    return array.find(item => item.id === id);\n}\n\n// object\nexport function arrayToIdMap(array) {\n    return array.reduce((obj, item) => {\n        obj[item.id] = item;\n        return obj;\n    }, {});\n}\n\n// date\nexport function getDate() {\n    const y = Math.floor(Math.random() * 3) + 2015;\n    const M = Math.floor(Math.random() * 12) + 1;\n    const d = Math.floor(Math.random() * 28) + 1;\n    // const h = Math.floor(Math.random() * 23) + 1;\n    // const m = Math.floor(Math.random() * 59) + 1;\n    // const s = Math.floor(Math.random() * 59) + 1;\n\n    return new Date(`${y}-${M}-${d}`)\n        .toJSON()\n        .replace('T', ' ')\n        .substr(0, 10);\n}\n\nexport const formatDate = (value, uiLocale) => {\n    if (typeof global.Intl !== 'undefined' && Intl.DateTimeFormat) {\n        const locale = uiLocale || 'en';\n        return new Intl.DateTimeFormat(locale, {\n            year: 'numeric',\n            month: 'short',\n            day: 'numeric',\n        }).format(new Date(value));\n    }\n\n    return value.substr(0, 19).replace('T', ' ');\n};\n\n/**\n * Sorts an array of objects based on provided date property\n *\n * @param {Array} items Array of objects\n * @param {String} dateProp Name of the date property to be used for sorting\n * @param {Boolean} ascending Whether to sort ascending or descending\n */\nexport const sortByDate = (items, dateProp, ascending = true) => {\n    const values = Object.values(items);\n\n    values.sort((a, b) => {\n        const aDate = new Date(a[dateProp]);\n        const bDate = new Date(b[dateProp]);\n\n        return ascending ? aDate - bDate : bDate - aDate;\n    });\n\n    return values;\n};\n\n// reducer validator\nexport const validateReducer = (value, defaultValue) =>\n    value === undefined || value === null ? defaultValue : value;\n\nexport const getBaseUrl = d2 => {\n    const api = d2.Api.getApi();\n    const idx = api.baseUrl.indexOf('/api');\n    return idx > -1 ? api.baseUrl.slice(0, idx) : api.baseUrl;\n};\n\nexport const getWithoutId = object => ({\n    ...object,\n    id: undefined,\n});\n","export const RECEIVED_USER = 'RECEIVED_USER';\n\nexport const DEFAULT_STATE_USER = {\n    id: '',\n    username: '',\n    uiLocale: '',\n    isSuperuser: false,\n};\n\nexport default (state = DEFAULT_STATE_USER, action) => {\n    switch (action.type) {\n        case RECEIVED_USER: {\n            return fromD2ToUserObj(action.value);\n        }\n        default:\n            return state;\n    }\n};\n\nfunction fromD2ToUserObj(d2Object) {\n    return {\n        id: d2Object.id,\n        username: d2Object.username,\n        uiLocale: d2Object.settings.keyUiLocale,\n        isSuperuser: d2Object.authorities.has('ALL'),\n    };\n}\n\n// selectors\n\nexport const sGetUserId = state => state.user.id;\nexport const sGetUserUsername = state => state.user.username;\nexport const sGetIsSuperuser = state => state.user.isSuperuser;\nexport const sGetUiLocale = state => state.user.uiLocale;\n","/** @module reducers/dashboards */\n\nimport arrayFrom from 'd2-utilizr/lib/arrayFrom';\nimport arraySort from 'd2-utilizr/lib/arraySort';\n\nimport { orArray, orObject } from '../modules/util';\nimport {\n    SPACER,\n    isSpacerType,\n    isTextType,\n    emptyTextItemContent,\n    REPORT_TABLE,\n    CHART,\n    VISUALIZATION,\n} from '../modules/itemTypes';\n\nexport const SET_DASHBOARDS = 'SET_DASHBOARDS';\nexport const ADD_DASHBOARDS = 'ADD_DASHBOARDS';\nexport const SET_DASHBOARD_STARRED = 'SET_DASHBOARD_STARRED';\nexport const SET_DASHBOARD_DISPLAY_NAME = 'SET_DASHBOARD_DISPLAY_NAME';\nexport const SET_DASHBOARD_ITEMS = 'SET_DASHBOARD_ITEMS';\n\nexport const DEFAULT_STATE_DASHBOARDS = {\n    byId: null,\n    items: [],\n};\n\n// reducer helper functions\n\nconst updateDashboardProp = ({ state, dashboardId, prop, value }) => ({\n    byId: {\n        ...state.byId,\n        [dashboardId]: {\n            ...state.byId[dashboardId],\n            [prop]: value,\n        },\n    },\n    items: state.items,\n});\n\n/**\n * Reducer that computes and returns the new state based on the given action\n * @function\n * @param {Object} state The current state\n * @param {Object} action The action to be evaluated\n * @returns {Object}\n */\nexport default (state = DEFAULT_STATE_DASHBOARDS, action) => {\n    switch (action.type) {\n        case SET_DASHBOARDS: {\n            return {\n                byId: action.value,\n                items: [],\n            };\n        }\n        case ADD_DASHBOARDS: {\n            return {\n                ...state,\n                byId: {\n                    ...state.byId,\n                    ...action.value,\n                },\n            };\n        }\n        case SET_DASHBOARD_STARRED: {\n            return updateDashboardProp({\n                state,\n                dashboardId: action.dashboardId,\n                prop: 'starred',\n                value: action.value,\n            });\n        }\n        case SET_DASHBOARD_DISPLAY_NAME: {\n            return updateDashboardProp({\n                state,\n                dashboardId: action.dashboardId,\n                prop: 'displayName',\n                value: action.value,\n            });\n        }\n        case SET_DASHBOARD_ITEMS: {\n            return {\n                ...state,\n                items: action.value,\n            };\n        }\n        default:\n            return state;\n    }\n};\n\n// root selector\n\nexport const sGetDashboardsRoot = state => state.dashboards;\n\n// selector level 1\n\n/**\n * Selector which returns a dashboard by id from the state object\n * If no matching dashboard is found it returns undefined\n * If dashboards.byId is null, then the dashboards api request\n * has not yet completed. If dashboards.byId is an empty object\n * then the dashboards api request is complete, but no dashboards\n * were returned\n *\n * @function\n * @param {Object} state The current state\n * @param {Number} id The id of the dashboard\n * @returns {Object | undefined}\n */\nexport const sGetDashboardById = (state, id) =>\n    orObject(sGetDashboardsRoot(state).byId)[id];\n\nexport const sDashboardsIsFetching = state => {\n    return sGetDashboardsRoot(state).byId === null;\n};\n\n/**\n * Selector which returns all dashboards (the byId object)\n *\n * @function\n * @param {Object} state The current state\n * @returns {Object | undefined}\n */\nexport const sGetAllDashboards = state =>\n    orObject(sGetDashboardsRoot(state).byId);\n\n/**\n * Selector which returns the current dashboard items\n *\n * @function\n * @param {Object} state The current state\n * @returns {Array}\n */\nexport const sGetDashboardItems = state => sGetDashboardsRoot(state).items;\n\n// selector level 2\n\nexport const sGetStarredDashboards = state =>\n    Object.values(sGetAllDashboards(state)).filter(\n        dashboard => dashboard.starred === true\n    );\n\nexport const sGetUnstarredDashboards = state =>\n    Object.values(sGetAllDashboards(state)).filter(\n        dashboard => dashboard.starred === false\n    );\n\n// selector level 3\n\nexport const sGetStarredDashboardIds = state => {\n    return sGetStarredDashboards(state).map(dashboard => dashboard.id);\n};\n\nexport const sGetUnstarredDashboardIds = state =>\n    sGetUnstarredDashboards(state).map(dashboard => dashboard.id);\n\nexport const sGetDashboardsSortedByStarred = state => [\n    ...arraySort(sGetStarredDashboards(state), 'ASC', 'displayName'),\n    ...arraySort(sGetUnstarredDashboards(state), 'ASC', 'displayName'),\n];\n\n// utils\n\n/**\n * Returns the array of dashboards, customized for ui\n * @function\n * @param {Array} data The original dashboard list\n * @returns {Array}\n */\nexport const getCustomDashboards = data => {\n    const uiItems = items =>\n        items.map(item => {\n            let type = isSpacerType(item) ? SPACER : item.type;\n\n            // TODO: temporary fix before 2.34 epic branch is merged\n            // if \"VISUALIZATION\", reset to \"REPORT_TABLE\" or \"CHART\"\n            if (type === VISUALIZATION) {\n                type = item.reportTable\n                    ? REPORT_TABLE\n                    : item.chart\n                    ? CHART\n                    : type;\n            }\n\n            const text = isTextType(item)\n                ? item.text === emptyTextItemContent\n                    ? ''\n                    : item.text\n                : null;\n\n            return {\n                ...item,\n                ...(text !== null ? { text } : {}),\n                type,\n            };\n        });\n\n    return arrayFrom(data).map(d => ({\n        id: d.id,\n        name: d.name,\n        displayName: d.displayName,\n        description: d.description,\n        displayDescription: d.displayDescription,\n        starred: d.favorite,\n        owner: d.user.name,\n        created: d.created\n            .split('T')\n            .join(' ')\n            .substr(0, 16),\n        lastUpdated: d.lastUpdated\n            .split('T')\n            .join(' ')\n            .substr(0, 16),\n        access: d.access,\n        numberOfItems: orArray(d.dashboardItems).length,\n        dashboardItems: uiItems(d.dashboardItems),\n    }));\n};\n","/** @module reducers/selected */\nimport { combineReducers } from 'redux';\n\nimport { validateReducer } from '../modules/util';\n\nexport const SET_SELECTED_ID = 'SET_SELECTED_ID';\nexport const SET_SELECTED_ISLOADING = 'SET_SELECTED_ISLOADING';\nexport const SET_SELECTED_SHOWDESCRIPTION = 'SET_SELECTED_SHOWDESCRIPTION';\n\nexport const DEFAULT_STATE_SELECTED_ID = null;\nexport const DEFAULT_STATE_SELECTED_ISLOADING = false;\nexport const DEFAULT_STATE_SELECTED_SHOWDESCRIPTION = false;\n\n/**\n * Reducer functions that computes and returns the new state based on the given action\n * @function\n * @param {Object} state The current state\n * @param {Object} action The action to be evaluated\n */\nconst id = (state = DEFAULT_STATE_SELECTED_ID, action) => {\n    switch (action.type) {\n        case SET_SELECTED_ID:\n            return validateReducer(action.value, DEFAULT_STATE_SELECTED_ID);\n        default:\n            return state;\n    }\n};\n\nconst isLoading = (state = DEFAULT_STATE_SELECTED_ISLOADING, action) => {\n    switch (action.type) {\n        case SET_SELECTED_ISLOADING:\n            return validateReducer(\n                action.value,\n                DEFAULT_STATE_SELECTED_ISLOADING\n            );\n        default:\n            return state;\n    }\n};\n\nconst showDescription = (\n    state = DEFAULT_STATE_SELECTED_SHOWDESCRIPTION,\n    action\n) => {\n    switch (action.type) {\n        case SET_SELECTED_SHOWDESCRIPTION:\n            return validateReducer(\n                action.value,\n                DEFAULT_STATE_SELECTED_SHOWDESCRIPTION\n            );\n        default:\n            return state;\n    }\n};\n\nexport default combineReducers({\n    id,\n    isLoading,\n    showDescription,\n});\n\n// Selectors\n\nexport const sGetSelectedRoot = state => state.selected;\n\nexport const sGetSelectedId = state => sGetSelectedRoot(state).id;\n\nexport const sGetSelectedIsLoading = state => sGetSelectedRoot(state).isLoading;\n\nexport const sGetSelectedShowDescription = state =>\n    sGetSelectedRoot(state).showDescription;\n","import { orObject } from '../modules/util';\nimport objectClean from 'd2-utilizr/lib/objectClean';\n\n/** @module reducers/visualizations */\n\nexport const ADD_VISUALIZATION = 'ADD_VISUALIZATION';\nexport const SET_ACTIVE_VISUALIZATION_TYPE = 'SET_ACTIVE_VISUALIZATION_TYPE';\n\nexport const DEFAULT_STATE_VISUALIZATIONS = {};\n\nconst isEmpty = p => p === undefined || p === null;\n\nexport default (state = DEFAULT_STATE_VISUALIZATIONS, action) => {\n    switch (action.type) {\n        case ADD_VISUALIZATION: {\n            return {\n                ...state,\n                [action.value.id]: objectClean(\n                    {\n                        ...orObject(state[action.value.id]),\n                        ...action.value,\n                    },\n                    isEmpty\n                ),\n            };\n        }\n        case SET_ACTIVE_VISUALIZATION_TYPE: {\n            return {\n                ...state,\n                [action.id]: objectClean(\n                    {\n                        ...orObject(state[action.id]),\n                        activeType: action.activeType,\n                    },\n                    isEmpty\n                ),\n            };\n        }\n        default:\n            return state;\n    }\n};\n\n// root selector\nexport const sGetVisualizationsRoot = state => state.visualizations;\n\n// selectors level 1\nexport const sGetVisualization = (state, id) => {\n    return sGetVisualizationsRoot(state)[id];\n};\n","import {\n    ADD_VISUALIZATION,\n    SET_ACTIVE_VISUALIZATION_TYPE,\n} from '../reducers/visualizations';\n\nexport const acAddVisualization = value => ({\n    type: ADD_VISUALIZATION,\n    value,\n});\n\nexport const acSetActiveVisualizationType = (id, activeType) => {\n    const action = {\n        type: SET_ACTIVE_VISUALIZATION_TYPE,\n        id,\n        activeType,\n    };\n\n    return action;\n};\n","import arrayClean from 'd2-utilizr/lib/arrayClean';\nimport {\n    getListItemFields,\n    getFavoritesFields,\n    getIdNameFields,\n} from './metadata';\n\n// Helper functions\n\nexport const onError = error => console.log('Error: ', error);\n\n// Dashboard item\nexport const getDashboardItemsFields = ({ withFavorite } = {}) =>\n    arrayClean([\n        'id',\n        'type',\n        'shape',\n        'x',\n        'y',\n        'width~rename(w)',\n        'height~rename(h)',\n        'messages',\n        'text',\n        'appKey',\n        `${getListItemFields().join(',')}`,\n        withFavorite\n            ? `${getFavoritesFields({\n                  withDimensions: withFavorite.withDimensions,\n              }).join(',')}`\n            : ``,\n    ]);\n\n// Dashboard\nexport const getDashboardFields = ({ withItems, withFavorite } = {}) =>\n    arrayClean([\n        `${getIdNameFields().join(',')}`,\n        'description',\n        'displayDescription',\n        'favorite',\n        `user[${getIdNameFields({ rename: true }).join(',')}]`,\n        'created',\n        'lastUpdated',\n        'access',\n        withItems\n            ? `dashboardItems[${getDashboardItemsFields({\n                  withFavorite,\n              }).join(',')}]`\n            : ``,\n    ]);\n","import { getInstance } from 'd2';\nimport arrayClean from 'd2-utilizr/lib/arrayClean';\nimport { onError, getDashboardFields } from './index';\n\n// Get \"all\" dashboards on startup\nexport const apiFetchDashboards = () =>\n    getInstance()\n        .then(d2 =>\n            d2.models.dashboard.list({\n                fields: [\n                    getDashboardFields().join(','),\n                    'dashboardItems[id]',\n                ].join(','),\n                paging: 'false',\n            })\n        )\n        .catch(onError);\n\n// Get more info about selected dashboard\nexport const apiFetchDashboard = id =>\n    getInstance()\n        .then(d2 =>\n            d2.models.dashboard.get(id, {\n                fields: arrayClean(\n                    getDashboardFields({\n                        withItems: true,\n                        withFavorite: { withDimensions: false },\n                    })\n                ).join(','),\n            })\n        )\n        .catch(onError);\n\n// Star dashboard\nexport const apiStarDashboard = (id, isStarred) => {\n    const url = `dashboards/${id}/favorite`;\n\n    getInstance().then(d2 => {\n        if (isStarred) {\n            d2.Api.getApi().post(url);\n        } else {\n            d2.Api.getApi().delete(url);\n        }\n    });\n};\n\nexport const apiDeleteDashboard = id => {\n    return getInstance()\n        .then(d2 => {\n            return d2.models.dashboards\n                .get(id)\n                .then(dashboard => dashboard.delete());\n        })\n        .catch(onError);\n};\n","import update from 'immutability-helper';\nimport { arrayToIdMap } from '../modules/util';\n\nexport const RECEIVED_MESSAGES = 'RECEIVED_MESSAGES';\n\nexport default (state = {}, action) => {\n    switch (action.type) {\n        case RECEIVED_MESSAGES: {\n            const conversations = arrayToIdMap(action.value);\n\n            const newState = update(state, { $merge: conversations });\n\n            return newState;\n        }\n        default:\n            return state;\n    }\n};\n\n// selectors\n\nexport const sGetMessagesRoot = state => state.messages;\n","import { getInstance } from 'd2';\n\nexport const getMessages = () => {\n    const fields =\n        'id,messageCount,lastUpdated,messageType,displayName,read,messages[id,read,sender[id,displayName],text,lastUpdated]';\n    const url = `/messageConversations?fields=${fields}&order=read:asc&pageSize=200`;\n    return getInstance()\n        .then(d2 => d2.Api.getApi().get(url))\n        .catch(error => console.log('Error:', error));\n};\n","export const RECEIVED_SNACKBAR_MESSAGE = 'RECEIVED_SNACKBAR_MESSAGE';\nexport const CLOSE_SNACKBAR = 'CLOSE_SNACKBAR';\n\nexport const DEFAULT_STATE_SNACKBAR = {\n    message: {},\n    duration: null,\n    open: false,\n};\n\nexport default (state = DEFAULT_STATE_SNACKBAR, action) => {\n    switch (action.type) {\n        case RECEIVED_SNACKBAR_MESSAGE: {\n            return { ...state, ...action.value };\n        }\n        case CLOSE_SNACKBAR: {\n            return DEFAULT_STATE_SNACKBAR;\n        }\n        default:\n            return state;\n    }\n};\n\n// selectors\n\nexport const sGetSnackbar = state => state.snackbar || DEFAULT_STATE_SNACKBAR;\n","import {\n    RECEIVED_SNACKBAR_MESSAGE,\n    CLOSE_SNACKBAR,\n} from '../reducers/snackbar';\n\nexport const acReceivedSnackbarMessage = value => ({\n    type: RECEIVED_SNACKBAR_MESSAGE,\n    value,\n});\n\nexport const acCloseSnackbar = () => ({\n    type: CLOSE_SNACKBAR,\n});\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport Snackbar from '@material-ui/core/Snackbar';\nimport PropTypes from 'prop-types';\n\nimport { sGetSnackbar } from '../../reducers/snackbar';\nimport { acCloseSnackbar } from '../../actions/snackbar';\n\nconst LOADING_DASHBOARD = 'LOADING_DASHBOARD';\nexport const loadingDashboardMsg = { name: '', type: LOADING_DASHBOARD };\n\nconst SnackbarMessageContent = ({ message }) => {\n    if (typeof message === 'object') {\n        //future message types:  switch(message.type)\n        return (\n            <span>\n                Loading <span style={{ fontWeight: 800 }}>{message.name}</span>{' '}\n                dashboard\n            </span>\n        );\n    }\n    return message;\n};\n\nexport const SnackbarMessage = props => {\n    return (\n        <Snackbar\n            style={{ zIndex: 10001 }}\n            open={props.snackbarOpen}\n            message={<SnackbarMessageContent message={props.snackbarMessage} />}\n            autoHideDuration={props.snackbarDuration}\n            onClose={props.onCloseSnackbar}\n        />\n    );\n};\n\nconst mapStateToProps = state => {\n    const { message, duration, open } = sGetSnackbar(state);\n    return {\n        snackbarOpen: open,\n        snackbarMessage: message,\n        snackbarDuration: duration,\n    };\n};\n\nSnackbarMessage.propTypes = {\n    snackbarDuration: PropTypes.string,\n    snackbarMessage: PropTypes.object,\n    snackbarOpen: PropTypes.bool,\n    onCloseSnackbar: PropTypes.func,\n};\n\nexport default connect(\n    mapStateToProps,\n    {\n        onCloseSnackbar: acCloseSnackbar,\n    }\n)(SnackbarMessage);\n","import {\n    SET_SELECTED_ID,\n    SET_SELECTED_ISLOADING,\n    SET_SELECTED_SHOWDESCRIPTION,\n} from '../reducers/selected';\nimport { acAddVisualization } from '../actions/visualizations';\nimport { sGetSelectedIsLoading } from '../reducers/selected';\nimport { sGetUserUsername } from '../reducers/user';\nimport { getCustomDashboards, sGetDashboardById } from '../reducers/dashboards';\nimport { apiFetchDashboard } from '../api/dashboards';\nimport { acSetDashboardItems, acAppendDashboards } from './dashboards';\nimport { withShape } from '../components/ItemGrid/gridUtil';\nimport { tGetMessages } from '../components/Item/MessagesItem/actions';\nimport { acReceivedSnackbarMessage, acCloseSnackbar } from './snackbar';\nimport { storePreferredDashboardId } from '../api/localStorage';\nimport { loadingDashboardMsg } from '../components/SnackbarMessage/SnackbarMessage';\nimport {\n    REPORT_TABLE,\n    CHART,\n    MAP,\n    EVENT_REPORT,\n    EVENT_CHART,\n    MESSAGES,\n} from '../modules/itemTypes';\nimport { extractFavorite } from '../components/Item/VisualizationItem/plugin';\nimport { orObject } from '../modules/util';\n\n// actions\n\nexport const acSetSelectedId = value => ({\n    type: SET_SELECTED_ID,\n    value,\n});\n\nexport const acSetSelectedIsLoading = value => ({\n    type: SET_SELECTED_ISLOADING,\n    value,\n});\n\nexport const acSetSelectedShowDescription = value => ({\n    type: SET_SELECTED_SHOWDESCRIPTION,\n    value,\n});\n\nexport const tLoadDashboard = id => async dispatch => {\n    try {\n        const dash = await apiFetchDashboard(id);\n        dispatch(acAppendDashboards(dash));\n\n        return Promise.resolve(dash);\n    } catch (err) {\n        console.log('Error: ', err);\n        return err;\n    }\n};\n\n// thunks\nexport const tSetSelectedDashboardById = id => async (dispatch, getState) => {\n    dispatch(acSetSelectedIsLoading(true));\n\n    const snackbarTimeout = setTimeout(() => {\n        const dashboardName = orObject(sGetDashboardById(getState(), id))\n            .displayName;\n        if (sGetSelectedIsLoading(getState()) && dashboardName) {\n            loadingDashboardMsg.name = dashboardName;\n\n            dispatch(\n                acReceivedSnackbarMessage({\n                    message: loadingDashboardMsg,\n                    open: true,\n                })\n            );\n        }\n    }, 500);\n\n    const onSuccess = selected => {\n        const customDashboard = getCustomDashboards(selected)[0];\n\n        dispatch(\n            acSetDashboardItems(withShape(customDashboard.dashboardItems))\n        );\n\n        storePreferredDashboardId(sGetUserUsername(getState()), id);\n\n        // add visualizations to store\n        customDashboard.dashboardItems.forEach(item => {\n            switch (item.type) {\n                case REPORT_TABLE:\n                case CHART:\n                case MAP:\n                case EVENT_REPORT:\n                case EVENT_CHART:\n                    dispatch(acAddVisualization(extractFavorite(item)));\n                    break;\n                case MESSAGES:\n                    dispatch(tGetMessages(id));\n                    break;\n                default:\n                    break;\n            }\n        });\n\n        dispatch(acSetSelectedId(id));\n\n        dispatch(acSetSelectedIsLoading(false));\n\n        clearTimeout(snackbarTimeout);\n\n        dispatch(acCloseSnackbar());\n\n        return selected;\n    };\n\n    const onError = error => {\n        console.log('Error: ', error);\n        return error;\n    };\n\n    try {\n        const selected = await dispatch(tLoadDashboard(id));\n\n        return onSuccess(selected);\n    } catch (err) {\n        return onError(err);\n    }\n};\n","export const getPreferredDashboardId = username =>\n    localStorage.getItem(`dhis2.dashboard.current.${username}`) || undefined;\n\nexport const storePreferredDashboardId = (username, dashboardId) => {\n    localStorage.setItem(`dhis2.dashboard.current.${username}`, dashboardId);\n};\n","import { RECEIVED_MESSAGES } from '../../../reducers/messages';\nimport { getMessages } from '../../../api/messages';\n\nconst onError = (action, error) => {\n    console.log(`Error in action ${action}: ${error}`);\n    return error;\n};\n\nexport const receivedMessages = value => ({\n    type: RECEIVED_MESSAGES,\n    value,\n});\n\nexport const tGetMessages = () => async dispatch => {\n    try {\n        const messages = await getMessages();\n        const { messageConversations } = messages;\n\n        return dispatch(receivedMessages(messageConversations));\n    } catch (err) {\n        return onError('Get Messages', err);\n    }\n};\n","/** @module reducers/editDashboard */\nimport update from 'immutability-helper';\nimport isEmpty from 'lodash/isEmpty';\nimport { orArray, orObject } from '../modules/util';\n\nexport const RECEIVED_EDIT_DASHBOARD = 'RECEIVED_EDIT_DASHBOARD';\nexport const RECEIVED_NOT_EDITING = 'RECEIVED_NOT_EDITING';\nexport const START_NEW_DASHBOARD = 'START_NEW_DASHBOARD';\nexport const RECEIVED_TITLE = 'RECEIVED_TITLE';\nexport const RECEIVED_DESCRIPTION = 'RECEIVED_DESCRIPTION';\nexport const ADD_DASHBOARD_ITEM = 'ADD_DASHBOARD_ITEM';\nexport const REMOVE_DASHBOARD_ITEM = 'REMOVE_DASHBOARD_ITEM';\nexport const UPDATE_DASHBOARD_ITEM = 'UPDATE_DASHBOARD_ITEM';\nexport const RECEIVED_DASHBOARD_LAYOUT = 'RECEIVED_DASHBOARD_LAYOUT';\n\nexport const DEFAULT_STATE_EDIT_DASHBOARD = {};\nexport const NEW_DASHBOARD_STATE = {\n    id: '',\n    name: '',\n    access: {},\n    description: '',\n    dashboardItems: [],\n};\n\nexport default (state = DEFAULT_STATE_EDIT_DASHBOARD, action) => {\n    switch (action.type) {\n        case RECEIVED_EDIT_DASHBOARD: {\n            const newState = {};\n            Object.keys(NEW_DASHBOARD_STATE).map(\n                k => (newState[k] = action.value[k])\n            );\n            return newState;\n        }\n        case RECEIVED_NOT_EDITING:\n            return DEFAULT_STATE_EDIT_DASHBOARD;\n        case START_NEW_DASHBOARD:\n            return NEW_DASHBOARD_STATE;\n        case RECEIVED_TITLE: {\n            return Object.assign({}, state, { name: action.value });\n        }\n        case RECEIVED_DESCRIPTION: {\n            return Object.assign({}, state, {\n                description: action.value,\n            });\n        }\n        case ADD_DASHBOARD_ITEM:\n            return update(state, {\n                dashboardItems: { $unshift: [action.value] },\n            });\n        case REMOVE_DASHBOARD_ITEM: {\n            const idToRemove = action.value;\n\n            const dashboardItemIndex = state.dashboardItems.findIndex(\n                item => item.id === idToRemove\n            );\n\n            if (dashboardItemIndex > -1) {\n                return update(state, {\n                    dashboardItems: {\n                        $splice: [[dashboardItemIndex, 1]],\n                    },\n                });\n            }\n\n            return state;\n        }\n        case RECEIVED_DASHBOARD_LAYOUT: {\n            const stateItems = orArray(state.dashboardItems);\n\n            const newStateItems = action.value.map(({ x, y, w, h, i }) => {\n                const stateItem = stateItems.find(si => si.id === i);\n\n                return Object.assign({}, stateItem, { w, h, x, y });\n            });\n\n            return update(state, {\n                dashboardItems: { $set: newStateItems },\n            });\n        }\n        case UPDATE_DASHBOARD_ITEM: {\n            const dashboardItem = action.value;\n\n            const dashboardItemIndex = state.dashboardItems.findIndex(\n                item => item.id === dashboardItem.id\n            );\n\n            if (dashboardItemIndex > -1) {\n                const newState = update(state, {\n                    dashboardItems: {\n                        $splice: [[dashboardItemIndex, 1, dashboardItem]],\n                    },\n                });\n\n                return newState;\n            }\n\n            return state;\n        }\n        default:\n            return state;\n    }\n};\n\n// root selector\n\nexport const sGetEditDashboardRoot = state => state.editDashboard;\n\n// selectors\n\nexport const sGetIsEditing = state => !isEmpty(state.editDashboard);\n\nexport const sGetIsNewDashboard = state => {\n    return (\n        !isEmpty(state.editDashboard) && sGetEditDashboardRoot(state).id === ''\n    );\n};\n\nexport const sGetEditDashboardItems = state =>\n    orObject(sGetEditDashboardRoot(state)).dashboardItems;\n","export const CLEAR_EDIT_ITEM_FILTERS = 'CLEAR_EDIT_ITEM_FILTERS';\nexport const REMOVE_EDIT_ITEM_FILTER = 'REMOVE_EDIT_ITEM_FILTER';\nexport const SET_EDIT_ITEM_FILTERS = 'SET_EDIT_ITEM_FILTERS';\n\nexport const DEFAULT_STATE_EDIT_ITEM_FILTERS = {};\n\nexport default (state = DEFAULT_STATE_EDIT_ITEM_FILTERS, action) => {\n    switch (action.type) {\n        case REMOVE_EDIT_ITEM_FILTER: {\n            const newState = { ...state };\n\n            delete newState[action.id];\n\n            return newState;\n        }\n        case SET_EDIT_ITEM_FILTERS: {\n            return action.filters;\n        }\n        case CLEAR_EDIT_ITEM_FILTERS: {\n            return DEFAULT_STATE_EDIT_ITEM_FILTERS;\n        }\n        default:\n            return state;\n    }\n};\n\n// selectors\n\nexport const sGetEditItemFiltersRoot = state => state.editItemFilters;\n\nexport const sGetEditFiltersKeys = state =>\n    Object.keys(sGetEditItemFiltersRoot(state));\n","export const CLEAR_ITEM_FILTERS = 'CLEAR_ITEM_FILTERS';\nexport const SET_ITEM_FILTERS = 'SET_ITEM_FILTERS';\nexport const ADD_ITEM_FILTER = 'ADD_ITEM_FILTER';\nexport const REMOVE_ITEM_FILTER = 'REMOVE_ITEM_FILTER';\n\nexport const DEFAULT_STATE_ITEM_FILTERS = {};\n\nexport default (state = DEFAULT_STATE_ITEM_FILTERS, action) => {\n    switch (action.type) {\n        case ADD_ITEM_FILTER: {\n            return {\n                ...state,\n                [action.filter.id]: action.filter.value,\n            };\n        }\n        case REMOVE_ITEM_FILTER: {\n            const newState = { ...state };\n\n            delete newState[action.id];\n\n            return newState;\n        }\n        case SET_ITEM_FILTERS: {\n            return action.filters;\n        }\n        case CLEAR_ITEM_FILTERS: {\n            return DEFAULT_STATE_ITEM_FILTERS;\n        }\n        default:\n            return state;\n    }\n};\n\n// selectors\n\nexport const sGetItemFiltersRoot = state => state.itemFilters;\n\nexport const sGetFiltersKeys = state => Object.keys(sGetItemFiltersRoot(state));\n","import {\n    ADD_ITEM_FILTER,\n    REMOVE_ITEM_FILTER,\n    SET_ITEM_FILTERS,\n    CLEAR_ITEM_FILTERS,\n} from '../reducers/itemFilters';\n\nexport const FILTER_ORG_UNIT = 'ou';\n\n// actions\n\nexport const acAddItemFilter = filter => ({\n    type: ADD_ITEM_FILTER,\n    filter,\n});\n\nexport const acRemoveItemFilter = id => ({\n    type: REMOVE_ITEM_FILTER,\n    id,\n});\n\nexport const acClearItemFilters = () => ({\n    type: CLEAR_ITEM_FILTERS,\n});\n\nexport const acSetItemFilters = filters => ({\n    type: SET_ITEM_FILTERS,\n    filters,\n});\n","import {\n    REMOVE_EDIT_ITEM_FILTER,\n    SET_EDIT_ITEM_FILTERS,\n    CLEAR_EDIT_ITEM_FILTERS,\n} from '../reducers/editItemFilters';\n\n// actions\n\nexport const acRemoveEditItemFilter = id => ({\n    type: REMOVE_EDIT_ITEM_FILTER,\n    id,\n});\n\nexport const acClearEditItemFilters = () => ({\n    type: CLEAR_EDIT_ITEM_FILTERS,\n});\n\nexport const acSetEditItemFilters = filters => ({\n    type: SET_EDIT_ITEM_FILTERS,\n    filters,\n});\n","import { getInstance } from 'd2';\n\nconst onError = error => console.log('Error: ', error);\n\nconst saveDashboard = (dashboard, data) => {\n    const { name, description, dashboardItems } = data;\n\n    dashboard.name = name;\n    dashboard.description = description;\n    dashboard.dashboardItems = dashboardItems.map(item =>\n        Object.assign({}, item, { width: item.w, height: item.h })\n    );\n\n    return dashboard.save().then(msg => msg.response.uid);\n};\n\nexport const updateDashboard = data => {\n    return getInstance()\n        .then(d2 => {\n            return d2.models.dashboards\n                .get(data.id)\n                .then(dashboard => saveDashboard(dashboard, data));\n        })\n        .catch(onError);\n};\n\nexport const postDashboard = data => {\n    return getInstance().then(d2 => {\n        const dashboard = d2.models.dashboards.create();\n\n        return saveDashboard(dashboard, data);\n    });\n};\n","import { generateUid } from 'd2/uid';\n\nimport {\n    RECEIVED_EDIT_DASHBOARD,\n    START_NEW_DASHBOARD,\n    RECEIVED_NOT_EDITING,\n    RECEIVED_TITLE,\n    RECEIVED_DESCRIPTION,\n    RECEIVED_DASHBOARD_LAYOUT,\n    ADD_DASHBOARD_ITEM,\n    UPDATE_DASHBOARD_ITEM,\n    REMOVE_DASHBOARD_ITEM,\n} from '../reducers/editDashboard';\nimport { sGetEditDashboardRoot } from '../reducers/editDashboard';\nimport { updateDashboard, postDashboard } from '../api/editDashboard';\nimport { tSetSelectedDashboardById } from '../actions/selected';\nimport { NEW_ITEM_SHAPE } from '../components/ItemGrid/gridUtil';\nimport {\n    itemTypeMap,\n    isSpacerType,\n    TEXT,\n    emptyTextItemContent,\n    isTextType,\n} from '../modules/itemTypes';\n\nconst onError = error => {\n    console.log('Error (Saving Dashboard): ', error);\n    return error;\n};\n\n// actions\n\nexport const acSetEditDashboard = (dashboard, items) => {\n    const val = {\n        ...dashboard,\n        dashboardItems: items,\n    };\n\n    return {\n        type: RECEIVED_EDIT_DASHBOARD,\n        value: val,\n    };\n};\n\nexport const acSetEditNewDashboard = () => ({\n    type: START_NEW_DASHBOARD,\n});\n\nexport const acClearEditDashboard = () => ({\n    type: RECEIVED_NOT_EDITING,\n});\n\nexport const acSetDashboardTitle = value => ({\n    type: RECEIVED_TITLE,\n    value,\n});\n\nexport const acSetDashboardDescription = value => ({\n    type: RECEIVED_DESCRIPTION,\n    value,\n});\n\nexport const acUpdateDashboardLayout = value => ({\n    type: RECEIVED_DASHBOARD_LAYOUT,\n    value,\n});\n\nexport const acAddDashboardItem = item => {\n    const type = item.type;\n    delete item.type;\n    const itemPropName = itemTypeMap[type].propName;\n\n    return {\n        type: ADD_DASHBOARD_ITEM,\n        value: {\n            id: generateUid(),\n            type,\n            [itemPropName]: item.content,\n            ...NEW_ITEM_SHAPE,\n        },\n    };\n};\n\nexport const acUpdateDashboardItem = item => ({\n    type: UPDATE_DASHBOARD_ITEM,\n    value: item,\n});\n\nexport const acRemoveDashboardItem = value => ({\n    type: REMOVE_DASHBOARD_ITEM,\n    value,\n});\n\n// thunks\n\nexport const tSaveDashboard = () => async (dispatch, getState) => {\n    const dashboard = sGetEditDashboardRoot(getState());\n\n    const dashboardItems = dashboard.dashboardItems.map(item => {\n        const text = isTextType(item)\n            ? item.text || emptyTextItemContent\n            : null;\n\n        const type = isSpacerType(item) ? TEXT : item.type;\n\n        return {\n            ...item,\n            ...(text ? { text } : {}),\n            type,\n        };\n    });\n\n    const dashboardToSave = {\n        ...dashboard,\n        dashboardItems,\n    };\n\n    try {\n        const dashboardId = dashboardToSave.id\n            ? await updateDashboard(dashboardToSave)\n            : await postDashboard(dashboardToSave);\n\n        dispatch(acClearEditDashboard());\n        await dispatch(tSetSelectedDashboardById(dashboardId));\n\n        return Promise.resolve(dashboardId);\n    } catch (error) {\n        onError(error);\n    }\n};\n","import {\n    SET_DASHBOARDS,\n    ADD_DASHBOARDS,\n    SET_DASHBOARD_STARRED,\n    SET_DASHBOARD_DISPLAY_NAME,\n    SET_DASHBOARD_ITEMS,\n} from '../reducers/dashboards';\nimport {\n    getCustomDashboards,\n    sGetDashboardById,\n    sGetDashboardsSortedByStarred,\n} from '../reducers/dashboards';\nimport { sGetUserUsername } from '../reducers/user';\nimport { tSetSelectedDashboardById, acSetSelectedId } from './selected';\nimport { sGetSelectedId } from '../reducers/selected';\nimport { sGetIsEditing } from '../reducers/editDashboard';\nimport { sGetEditItemFiltersRoot } from '../reducers/editItemFilters';\nimport { acSetItemFilters, acClearItemFilters } from './itemFilters';\nimport { acClearEditItemFilters } from './editItemFilters';\nimport { acClearEditDashboard } from './editDashboard';\nimport {\n    apiFetchDashboards,\n    apiStarDashboard,\n    apiDeleteDashboard,\n} from '../api/dashboards';\nimport { getPreferredDashboardId } from '../api/localStorage';\nimport { arrayToIdMap } from '../modules/util';\n\n// actions\n\nexport const acSetDashboards = dashboards => ({\n    type: SET_DASHBOARDS,\n    value: arrayToIdMap(getCustomDashboards(dashboards)),\n});\n\nexport const acAppendDashboards = dashboards => ({\n    type: ADD_DASHBOARDS,\n    value: arrayToIdMap(getCustomDashboards(dashboards)),\n});\n\nexport const acSetDashboardStarred = (dashboardId, isStarred) => ({\n    type: SET_DASHBOARD_STARRED,\n    dashboardId: dashboardId,\n    value: isStarred,\n});\n\nexport const acSetDashboardDisplayName = (dashboardId, value) => ({\n    type: SET_DASHBOARD_DISPLAY_NAME,\n    dashboardId,\n    value,\n});\n\nexport const acSetDashboardItems = value => ({\n    type: SET_DASHBOARD_ITEMS,\n    value,\n});\n\n// thunks\n\nexport const tFetchDashboards = () => async dispatch => {\n    const collection = await apiFetchDashboards();\n    dispatch(acSetDashboards(collection.toArray()));\n};\n\nexport const tSelectDashboard = id => async (dispatch, getState) => {\n    const onError = error => {\n        console.log('Error (apiFetchDashboards): ', error);\n        return error;\n    };\n\n    try {\n        const state = getState();\n\n        let dashboardToSelect = null;\n        if (id) {\n            dashboardToSelect = sGetDashboardById(state, id) || null;\n        } else {\n            const preferredId = getPreferredDashboardId(\n                sGetUserUsername(state)\n            );\n            const dash = sGetDashboardById(state, preferredId);\n            dashboardToSelect =\n                preferredId && dash\n                    ? dash\n                    : sGetDashboardsSortedByStarred(state)[0];\n        }\n\n        if (dashboardToSelect) {\n            dispatch(tSetSelectedDashboardById(dashboardToSelect.id));\n\n            if (dashboardToSelect.id === sGetSelectedId(state)) {\n                if (sGetIsEditing(state)) {\n                    // disable filters when switching to edit mode\n                    dispatch(acClearItemFilters());\n                } else {\n                    // enable filters when switching to view mode\n                    dispatch(acSetItemFilters(sGetEditItemFiltersRoot(state)));\n                }\n            } else {\n                // clear filters when switching dashboard\n                dispatch(acClearEditItemFilters());\n                dispatch(acClearItemFilters());\n            }\n        } else {\n            dispatch(acSetSelectedId(false));\n        }\n    } catch (err) {\n        return onError(err);\n    }\n};\n\nexport const tStarDashboard = (id, isStarred) => async dispatch => {\n    const onSuccess = id => {\n        dispatch(acSetDashboardStarred(id, isStarred));\n        return id;\n    };\n\n    const onError = error => {\n        console.log('Error (apiStarDashboard): ', error);\n        return error;\n    };\n    try {\n        await apiStarDashboard(id, isStarred);\n        return onSuccess(id);\n    } catch (err) {\n        return onError(err);\n    }\n};\n\nexport const tDeleteDashboard = id => async dispatch => {\n    try {\n        await apiDeleteDashboard(id);\n        dispatch(acClearEditDashboard());\n        dispatch(acSetSelectedId());\n        dispatch(acSetDashboardItems([]));\n\n        await dispatch(tFetchDashboards());\n\n        return Promise.resolve();\n    } catch (err) {\n        console.log('Error (deleteDashboard): ', err);\n        return err;\n    }\n};\n","/** @module reducers/controlBar */\nimport { combineReducers } from 'redux';\nimport { validateReducer } from '../modules/util';\n\nexport const SET_CONTROLBAR_USER_ROWS = 'SET_CONTROLBAR_USER_ROWS';\n\nexport const DEFAULT_STATE_CONTROLBAR_ROWS = 1;\n\nconst userRows = (state = DEFAULT_STATE_CONTROLBAR_ROWS, action) => {\n    switch (action.type) {\n        case SET_CONTROLBAR_USER_ROWS:\n            return validateReducer(action.value, DEFAULT_STATE_CONTROLBAR_ROWS);\n        default:\n            return state;\n    }\n};\n\nexport default combineReducers({\n    userRows,\n});\n\n/**\n * Selectors that point to specific props in the state object\n * @function\n * @param {Object} state\n * @returns {Object}\n */\nexport const sGetControlBarRoot = state => state.controlBar;\n\n// Selector dependency level 2\n\nexport const sGetControlBarUserRows = state =>\n    sGetControlBarRoot(state).userRows;\n","import { getInstance } from 'd2';\nimport { DEFAULT_STATE_CONTROLBAR_ROWS } from '../reducers/controlBar';\n\nconst NAMESPACE = 'dashboard';\nconst KEY = 'controlBarRows';\n\nconst hasNamespace = async d2 => await d2.currentUser.dataStore.has(NAMESPACE);\n\nconst getNamespace = async (d2, hasNamespace) =>\n    hasNamespace\n        ? await d2.currentUser.dataStore.get(NAMESPACE)\n        : await d2.currentUser.dataStore.create(NAMESPACE);\n\nexport const apiGetControlBarRows = async () => {\n    const d2 = await getInstance();\n    const namespace = await getNamespace(d2, await hasNamespace(d2));\n    const hasKey = namespace.keys && namespace.keys.find(key => key === KEY);\n\n    if (hasKey) {\n        return await namespace.get(KEY);\n    } else {\n        await apiPostControlBarRows(DEFAULT_STATE_CONTROLBAR_ROWS, namespace);\n        console.log(\n            '(These errors to /userDataStore/dashboard can be ignored)'\n        );\n        return DEFAULT_STATE_CONTROLBAR_ROWS;\n    }\n};\n\nexport const apiPostControlBarRows = async (rows, namespace) => {\n    const d2 = await getInstance();\n    const ns = namespace || (await getNamespace(d2, hasNamespace));\n\n    ns.set(KEY, rows);\n};\n","import { SET_CONTROLBAR_USER_ROWS } from '../reducers/controlBar';\nimport { apiGetControlBarRows } from '../api/controlBar';\n\n// actions\n\nexport const acSetControlBarUserRows = rows => ({\n    type: SET_CONTROLBAR_USER_ROWS,\n    value: rows,\n});\n\n// thunks\n\nexport const tSetControlBarRows = () => async dispatch => {\n    const onSuccess = rows => {\n        dispatch(acSetControlBarUserRows(rows));\n    };\n\n    const onError = error => {\n        console.log('Error (apiGetControlBarRows): ', error);\n        return error;\n    };\n\n    try {\n        const controlBarRows = await apiGetControlBarRows();\n        return onSuccess(controlBarRows);\n    } catch (err) {\n        return onError(err);\n    }\n};\n","import {\n    getDimensionById,\n    DIMENSION_ID_PERIOD,\n    DIMENSION_ID_ORGUNIT,\n} from '@dhis2/analytics';\n\nexport const SET_DIMENSIONS = 'SET_DIMENSIONS';\nexport const DEFAULT_DIMENSIONS = [\n    getDimensionById(DIMENSION_ID_PERIOD),\n    getDimensionById(DIMENSION_ID_ORGUNIT),\n];\n\nexport default (state = DEFAULT_DIMENSIONS, action) => {\n    switch (action.type) {\n        case SET_DIMENSIONS: {\n            return [...DEFAULT_DIMENSIONS, ...action.value];\n        }\n        default:\n            return state;\n    }\n};\n\nexport const sGetDimensions = state => state.dimensions;\n","export const SET_SETTINGS = 'SET_SETTINGS';\nexport const ADD_SETTINGS = 'ADD_SETTINGS';\n\nexport const DEFAULT_SETTINGS = {\n    keyDateFormat: 'yyyy-MM-dd',\n    keyAnalysisRelativePeriod: 'LAST_12_MONTHS',\n    keyAnalysisDigitGroupSeparator: 'SPACE',\n    displayNameProperty: 'displayName',\n    uiLocale: 'en',\n    rootOrganisationUnit: {},\n};\n\nexport default (state = DEFAULT_SETTINGS, action) => {\n    switch (action.type) {\n        case SET_SETTINGS: {\n            return Object.assign({}, action.value);\n        }\n        case ADD_SETTINGS: {\n            return {\n                ...state,\n                ...action.value,\n            };\n        }\n        default:\n            return state;\n    }\n};\n\n// Selectors\n\nexport const sGetSettings = state => state.settings;\n\nexport const sGetSettingsDisplayNameProperty = state =>\n    sGetSettings(state).displayNameProperty;\n\nexport const sGetRootOrgUnit = state =>\n    sGetSettings(state).rootOrganisationUnit;\n\nexport const sGetRelativePeriod = state =>\n    sGetSettings(state).keyAnalysisRelativePeriod;\n\nexport const sGetUiLocale = state => sGetSettings(state).uiLocale;\n","import { SET_DIMENSIONS } from '../reducers/dimensions';\nimport { apiFetchDimensions } from '@dhis2/analytics';\nimport { sGetSettingsDisplayNameProperty } from '../reducers/settings';\n\nexport const acSetDimensions = dimensions => ({\n    type: SET_DIMENSIONS,\n    value: dimensions,\n});\n\nexport const tSetDimensions = d2 => async (dispatch, getState) => {\n    const onSuccess = dimensions => {\n        dispatch(acSetDimensions(dimensions));\n    };\n\n    const onError = error => {\n        console.log('Error (apiFetchDimensions): ', error);\n        return error;\n    };\n\n    try {\n        const displayNameProp = sGetSettingsDisplayNameProperty(getState());\n        const dimensions = await apiFetchDimensions(d2, displayNameProp);\n\n        // filter out CATEGORY that are not of type ATTRIBUTE\n        const filteredDimensions = dimensions.filter(\n            dim =>\n                dim.dimensionType !== 'CATEGORY' ||\n                (dim.dimensionType === 'CATEGORY' &&\n                    dim.dataDimensionType === 'ATTRIBUTE')\n        );\n        return onSuccess(filteredDimensions);\n    } catch (err) {\n        return onError(err);\n    }\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport i18n from '@dhis2/d2-i18n';\nimport { colors } from '@dhis2/ui-core';\nimport { withStyles } from '@material-ui/core/styles';\n\nexport const SHOWMORE_BAR_HEIGHT = 16;\n\nconst styles = {\n    showMore: {\n        color: colors.grey700,\n        cursor: 'pointer',\n        fontSize: 11,\n        paddingTop: 5,\n        '&:hover': {\n            textDecoration: 'underline',\n        },\n    },\n    disabled: {\n        paddingTop: 5,\n        color: colors.grey500,\n        fontSize: 11,\n        cursor: 'not-allowed',\n    },\n};\n\nexport const ShowMoreButton = ({ onClick, isMaxHeight, classes, disabled }) => {\n    return (\n        <div style={{ textAlign: 'center' }}>\n            {disabled ? (\n                <div className={classes.disabled}>{i18n.t('Show more')}</div>\n            ) : (\n                <div className={classes.showMore} onClick={onClick}>\n                    {isMaxHeight ? i18n.t('Show less') : i18n.t('Show more')}\n                </div>\n            )}\n        </div>\n    );\n};\n\nShowMoreButton.propTypes = {\n    classes: PropTypes.object,\n    disabled: PropTypes.bool,\n    isMaxHeight: PropTypes.bool,\n    onClick: PropTypes.func,\n};\n\nexport default withStyles(styles)(ShowMoreButton);\n","import { SHOWMORE_BAR_HEIGHT } from './ShowMoreButton';\n\nexport const CONTROL_BAR_ROW_HEIGHT = 40;\nexport const FIRST_ROW_PADDING_HEIGHT = 10;\nexport const MIN_ROW_COUNT = 1;\n\nexport const HEADERBAR_HEIGHT = 48;\n\nconst CONTROL_BAR_OUTER_HEIGHT_DIFF =\n    FIRST_ROW_PADDING_HEIGHT + SHOWMORE_BAR_HEIGHT - 2; // 2 pixel \"adjustment\"\n\nexport const getRowsHeight = rows => {\n    return rows * CONTROL_BAR_ROW_HEIGHT;\n};\n\nexport const getNumRowsFromHeight = height => {\n    return Math.floor(\n        (height - CONTROL_BAR_OUTER_HEIGHT_DIFF) / CONTROL_BAR_ROW_HEIGHT\n    );\n};\n\nexport const getTopOffset = rows => {\n    return HEADERBAR_HEIGHT + getControlBarHeight(rows, false);\n};\n\nexport const getControlBarHeight = rows => {\n    return getRowsHeight(rows) + CONTROL_BAR_OUTER_HEIGHT_DIFF;\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { colors } from '@dhis2/ui-core';\nimport { HEADERBAR_HEIGHT } from './controlBarDimensions';\n\nimport classes from './styles/ControlBar.module.css';\n\nconst DRAG_HANDLE_HEIGHT = 7;\n\nclass ControlBar extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            dragging: false,\n        };\n    }\n\n    onStartDrag = () => {\n        this.setState({ dragging: true });\n        window.addEventListener('mousemove', this.onDrag);\n        window.addEventListener('mouseup', this.onEndDrag);\n    };\n\n    onDrag = event => {\n        event.preventDefault();\n        event.stopPropagation();\n\n        const newHeight = event.clientY;\n\n        if (\n            this.props.onChangeHeight &&\n            newHeight !== this.props.height &&\n            newHeight > 0\n        ) {\n            requestAnimationFrame(() => {\n                this.props.onChangeHeight(newHeight);\n            });\n        }\n    };\n\n    onEndDrag = () => {\n        this.setState({ dragging: false });\n        window.removeEventListener('mousemove', this.onDrag);\n        window.removeEventListener('mouseup', this.onEndDrag);\n\n        if (this.props.onEndDrag) {\n            this.props.onEndDrag();\n        }\n    };\n\n    renderDragHandle() {\n        return typeof this.props.onChangeHeight === 'function' ? (\n            <div\n                className={classes.draghandle}\n                style={{ height: DRAG_HANDLE_HEIGHT }}\n                onMouseDown={this.onStartDrag}\n            />\n        ) : null;\n    }\n\n    render() {\n        const height = Math.max(this.props.height, 0) + DRAG_HANDLE_HEIGHT;\n\n        const rootStyle = Object.assign(\n            {\n                height,\n                top: HEADERBAR_HEIGHT,\n                backgroundColor: this.props.editMode\n                    ? colors.yellow050\n                    : colors.white,\n                paddingBottom: DRAG_HANDLE_HEIGHT,\n            },\n            // Disable animations while dragging\n            this.state.dragging ? { transition: 'none' } : {}\n        );\n\n        return (\n            <div style={rootStyle} className={classes.root}>\n                <div className={classes.content}>{this.props.children}</div>\n                {this.renderDragHandle()}\n            </div>\n        );\n    }\n}\n\nControlBar.propTypes = {\n    /**\n     * The height of the control bar in number of lines. Must be a positive integer.\n     */\n    children: PropTypes.node.isRequired,\n\n    /**\n     * If true, the background color of the control bar changes to indicate that edit mode is active.\n     */\n    editMode: PropTypes.bool.isRequired,\n\n    /**\n     * Callback function that is called when the control bar is resized.\n     * The callback receives one argument: The new height in pixels.\n     *\n     * If no callback is specified the control bar will not have a drag handle.\n     */\n    height: PropTypes.number.isRequired,\n\n    /**\n     * Callback function that is called when the control bar is dropped after being dragged.\n     * The callback receives one argument: The new height in pixels.\n     *\n     * Ignored if no \"onChangeHeight\" function is provided.\n     */\n    onChangeHeight: PropTypes.func,\n\n    /**\n     * The contents of the control bar.\n     */\n    onEndDrag: PropTypes.func,\n};\n\nControlBar.defaultProps = {\n    onChangeHeight: null,\n    onEndDrag: null,\n};\n\nexport default ControlBar;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst StarIcon = ({ className }) => (\n    <svg\n        className={className}\n        xmlns=\"http://www.w3.org/2000/svg\"\n        viewBox=\"0 0 24 24\"\n    >\n        <path d=\"M0 0h24v24H0z\" fill=\"none\" />\n        <path d=\"M12 17.27L18.18 21l-1.64-7.03L22 9.24l-7.19-.61L12 2 9.19 8.63 2 9.24l5.46 4.73L5.82 21z\" />\n        <path d=\"M0 0h24v24H0z\" fill=\"none\" />\n    </svg>\n);\n\nStarIcon.propTypes = {\n    className: PropTypes.string,\n};\n\nexport default StarIcon;\n","import { getInstance } from 'd2';\n\nexport const apiPostDataStatistics = async (eventType, id) => {\n    const d2 = await getInstance();\n    const url = `dataStatistics?eventType=${eventType}&favorite=${id}`;\n\n    d2.Api.getApi().post(url);\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport { Chip, colors } from '@dhis2/ui-core';\nimport { Link } from 'react-router-dom';\nimport debounce from 'lodash/debounce';\n\nimport StarIcon from '../../icons/Star';\nimport { apiPostDataStatistics } from '../../api/dataStatistics';\n\nconst styles = {\n    chip: {\n        margin: '3px',\n    },\n    link: {\n        color: colors.grey600,\n        display: 'inline-block',\n        textDecoration: 'none',\n        verticalAlign: 'top',\n    },\n    icon: {\n        height: '20px',\n        marginTop: '2px',\n        width: '20px',\n    },\n    selected: {\n        fill: colors.white,\n    },\n    unselected: {\n        fill: colors.grey700,\n    },\n};\n\nexport const DashboardItemChip = ({\n    starred,\n    selected,\n    label,\n    dashboardId,\n    classes,\n}) => {\n    const chipProps = {\n        selected,\n        className: classes.chip,\n    };\n\n    if (starred) {\n        const selectedState = selected ? classes.selected : classes.unselected;\n        chipProps.icon = (\n            <StarIcon className={`${classes.icon} ${selectedState}`} />\n        );\n    }\n\n    return (\n        <Link\n            className={classes.link}\n            to={`/${dashboardId}`}\n            onClick={debounce(\n                () => apiPostDataStatistics('DASHBOARD_VIEW', dashboardId),\n                500\n            )}\n        >\n            <Chip {...chipProps}>{label}</Chip>\n        </Link>\n    );\n};\n\nDashboardItemChip.propTypes = {\n    dashboardId: PropTypes.string.isRequired,\n    label: PropTypes.string.isRequired,\n    selected: PropTypes.bool.isRequired,\n    starred: PropTypes.bool.isRequired,\n    classes: PropTypes.object,\n};\n\nexport default withStyles(styles)(DashboardItemChip);\n","import React from 'react';\nimport { colors } from '@dhis2/ui-core';\n\nconst AddCircleIcon = () => (\n    <svg\n        xmlns=\"http://www.w3.org/2000/svg\"\n        width=\"32\"\n        height=\"32\"\n        fill={colors.teal600}\n        viewBox=\"0 0 24 24\"\n    >\n        <path d=\"M12 2C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2zm4 11h-3v3c0 .55-.45 1-1 1s-1-.45-1-1v-3H8c-.55 0-1-.45-1-1s.45-1 1-1h3V8c0-.55.45-1 1-1s1 .45 1 1v3h3c.55 0 1 .45 1 1s-.45 1-1 1z\" />\n    </svg>\n);\n\nexport default AddCircleIcon;\n","import React from 'react';\nimport { colors } from '@dhis2/ui-core';\nimport PropTypes from 'prop-types';\n\nconst ClearIcon = ({ className }) => (\n    <svg\n        className={className}\n        fill={colors.grey800}\n        xmlns=\"http://www.w3.org/2000/svg\"\n        viewBox=\"0 0 24 24\"\n    >\n        <path d=\"M19 6.41L17.59 5 12 10.59 6.41 5 5 6.41 10.59 12 5 17.59 6.41 19 12 13.41 17.59 19 19 17.59 13.41 12z\" />\n        <path d=\"M0 0h24v24H0z\" fill=\"none\" />\n    </svg>\n);\n\nClearIcon.propTypes = {\n    className: PropTypes.string,\n};\n\nexport default ClearIcon;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport ClearIcon from '../../icons/Clear';\n\nimport classes from './styles/ClearButton.module.css';\n\nexport const ClearButton = ({ onClear }) => (\n    <button className={classes.button} onClick={onClear}>\n        <span>\n            <ClearIcon className={classes.icon} color=\"action\" />\n        </span>\n    </button>\n);\n\nClearButton.propTypes = {\n    onClear: PropTypes.func.isRequired,\n};\n\nexport default ClearButton;\n","import { combineReducers } from 'redux';\nimport { validateReducer } from '../modules/util';\n\nexport const SET_DASHBOARDS_FILTER_NAME = 'SET_DASHBOARDS_FILTER_NAME';\nexport const SET_DASHBOARDS_FILTER_OWNER = 'SET_DASHBOARDS_FILTER_OWNER';\nexport const SET_DASHBOARDS_FILTER_ORDER = 'SET_DASHBOARDS_FILTER_ORDER';\n\nexport const ownerData = [\n    { id: 'ALL', value: 'All users' },\n    { id: 'ME', value: 'Created by me' },\n    { id: 'OTHERS', value: 'Created by others' },\n];\n\nexport const orderData = [\n    { id: 'NAME:ASC', value: 'Name (asc)' },\n    { id: 'NAME:ASC', value: 'Name (desc)' },\n    { id: 'ITEMS:ASC', value: 'Number of items (asc)' },\n    { id: 'ITEMS:ASC', value: 'Number of items (desc)' },\n    { id: 'CREATED:ASC', value: 'Created date (asc)' },\n    { id: 'CREATED:ASC', value: 'Created date (desc)' },\n];\n\nexport const DEFAULT_STATE_DASHBOARDS_FILTER_NAME = '';\nexport const DEFAULT_STATE_DASHBOARDS_FILTER_OWNER = ownerData[0].id;\nexport const DEFAULT_STATE_DASHBOARDS_FILTER_ORDER = orderData[0].id;\n\nconst name = (state = DEFAULT_STATE_DASHBOARDS_FILTER_NAME, action) => {\n    switch (action.type) {\n        case SET_DASHBOARDS_FILTER_NAME:\n            return validateReducer(\n                action.value,\n                DEFAULT_STATE_DASHBOARDS_FILTER_NAME\n            );\n        default:\n            return state;\n    }\n};\n\nconst owner = (state = DEFAULT_STATE_DASHBOARDS_FILTER_OWNER, action) => {\n    switch (action.type) {\n        case SET_DASHBOARDS_FILTER_OWNER:\n            return validateReducer(\n                action.value,\n                DEFAULT_STATE_DASHBOARDS_FILTER_NAME\n            );\n        default:\n            return state;\n    }\n};\n\nconst order = (state = DEFAULT_STATE_DASHBOARDS_FILTER_ORDER, action) => {\n    switch (action.type) {\n        case SET_DASHBOARDS_FILTER_ORDER:\n            return validateReducer(\n                action.value,\n                DEFAULT_STATE_DASHBOARDS_FILTER_ORDER\n            );\n        default:\n            return state;\n    }\n};\n\nexport default combineReducers({\n    name,\n    owner,\n    order,\n});\n\n// selectors\n\nexport const sGetDashboardsFilterRoot = state => state.dashboardsFilter;\n\n// selector dependency level 2\n\nexport const sGetFilterName = state => sGetDashboardsFilterRoot(state).name;\nexport const sGetFilterOwner = state => sGetDashboardsFilterRoot(state).owner;\nexport const sGetFilterOrder = state => sGetDashboardsFilterRoot(state).order;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport i18n from '@dhis2/d2-i18n';\nimport InputField from '@material-ui/core/Input';\nimport InputAdornment from '@material-ui/core/InputAdornment';\nimport SearchIcon from '@material-ui/icons/Search';\nimport { colors } from '@dhis2/ui-core';\n\nimport ClearButton from './ClearButton';\nimport { DEFAULT_STATE_DASHBOARDS_FILTER_NAME } from '../../reducers/dashboardsFilter';\n\nexport const KEYCODE_ENTER = 13;\nexport const KEYCODE_ESCAPE = 27;\n\nconst styles = {\n    filterField: {\n        fontSize: '14px',\n        width: '200px',\n        height: '30px',\n        top: '-4px',\n    },\n    searchIcon: {\n        color: colors.grey700,\n        width: '20px',\n        height: '20px',\n    },\n};\n\nexport class Filter extends Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            value: DEFAULT_STATE_DASHBOARDS_FILTER_NAME,\n        };\n    }\n\n    componentWillReceiveProps(nextProps) {\n        this.setState({\n            value: nextProps.name,\n        });\n    }\n\n    setFilterValue = event => {\n        event.preventDefault();\n\n        this.props.onChangeName(event.target.value);\n    };\n\n    handleKeyUp = event => {\n        switch (event.keyCode) {\n            case KEYCODE_ENTER:\n                this.props.onKeypressEnter();\n                break;\n            case KEYCODE_ESCAPE:\n                this.props.onChangeName();\n                break;\n            default:\n                break;\n        }\n    };\n\n    render() {\n        const { classes, name, onChangeName } = this.props;\n\n        const startAdornment = (\n            <InputAdornment position=\"start\">\n                <SearchIcon className={classes.searchIcon} />\n            </InputAdornment>\n        );\n\n        const endAdornment =\n            name !== '' && name !== null ? (\n                <InputAdornment position=\"end\">\n                    <ClearButton onClear={() => onChangeName()} />\n                </InputAdornment>\n            ) : null;\n\n        return (\n            <InputField\n                className={classes.filterField}\n                placeholder={i18n.t('Search for a dashboard')}\n                startAdornment={startAdornment}\n                endAdornment={endAdornment}\n                value={this.state.value}\n                onChange={this.setFilterValue}\n                onKeyUp={this.handleKeyUp}\n            />\n        );\n    }\n}\n\nFilter.propTypes = {\n    classes: PropTypes.object,\n    name: PropTypes.string,\n    onChangeName: PropTypes.func,\n    onKeypressEnter: PropTypes.func,\n};\n\nFilter.defaultProps = {\n    name: '',\n    onChangeName: Function.prototype,\n};\n\nexport default withStyles(styles)(Filter);\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { Link, withRouter } from 'react-router-dom';\nimport ControlBar from './ControlBar';\nimport arraySort from 'd2-utilizr/lib/arraySort';\nimport PropTypes from 'prop-types';\n\nimport Chip from './DashboardItemChip';\nimport AddCircleIcon from '../../icons/AddCircle';\nimport Filter from './Filter';\nimport ShowMoreButton from './ShowMoreButton';\nimport {\n    FIRST_ROW_PADDING_HEIGHT,\n    MIN_ROW_COUNT,\n    getRowsHeight,\n    getControlBarHeight,\n    getNumRowsFromHeight,\n} from './controlBarDimensions';\nimport { sGetControlBarUserRows } from '../../reducers/controlBar';\nimport { sGetAllDashboards } from '../../reducers/dashboards';\nimport { sGetFilterName } from '../../reducers/dashboardsFilter';\nimport { sGetSelectedId } from '../../reducers/selected';\nimport { acSetControlBarUserRows } from '../../actions/controlBar';\nimport { acSetFilterName } from '../../actions/dashboardsFilter';\nimport { orObject, orArray } from '../../modules/util';\nimport { apiPostControlBarRows } from '../../api/controlBar';\n\nimport classes from './styles/DashboardsBar.module.css';\n\nexport const MAX_ROW_COUNT = 10;\n\nexport class DashboardsBar extends Component {\n    state = {\n        rows: MIN_ROW_COUNT,\n    };\n\n    setInitialDashboardState = rows => {\n        this.setState({ rows, isMaxHeight: rows === MAX_ROW_COUNT });\n    };\n\n    componentDidMount() {\n        this.setInitialDashboardState(this.props.userRows);\n    }\n\n    componentWillReceiveProps(nextProps) {\n        this.setInitialDashboardState(nextProps.userRows);\n    }\n\n    onChangeHeight = newHeight => {\n        const adjustedHeight = newHeight - 52; // don't rush the transition to a bigger row count\n        const newRows = Math.max(\n            MIN_ROW_COUNT,\n            getNumRowsFromHeight(adjustedHeight)\n        );\n\n        if (newRows !== this.state.rows) {\n            const newRowCount = Math.min(newRows, MAX_ROW_COUNT);\n\n            this.props.onChangeHeight(newRowCount);\n        }\n    };\n\n    onEndDrag = () => {\n        return apiPostControlBarRows(this.state.rows);\n    };\n\n    onToggleMaxHeight = () => {\n        const rows =\n            this.state.rows === MAX_ROW_COUNT\n                ? this.props.userRows\n                : MAX_ROW_COUNT;\n\n        this.setState({ rows, isMaxHeight: !this.state.isMaxHeight });\n    };\n\n    onSelectDashboard = () => {\n        this.props.history.push(`/${this.props.dashboards[0].id}`);\n    };\n\n    render() {\n        const { dashboards, name, selectedId, onChangeFilterName } = this.props;\n\n        const rowCount = this.state.isMaxHeight\n            ? MAX_ROW_COUNT\n            : this.state.rows;\n        const controlBarHeight = getControlBarHeight(rowCount);\n        const contentWrapperStyle = {\n            padding: `${FIRST_ROW_PADDING_HEIGHT}px 6px 0 6px`,\n            overflowY: this.state.isMaxHeight ? 'auto' : 'hidden',\n            height: getRowsHeight(rowCount) + FIRST_ROW_PADDING_HEIGHT,\n        };\n\n        return (\n            <ControlBar\n                height={controlBarHeight}\n                onChangeHeight={this.onChangeHeight}\n                onEndDrag={this.onEndDrag}\n                editMode={false}\n            >\n                <div style={contentWrapperStyle}>\n                    <div className={classes.leftControls}>\n                        <Link\n                            style={{\n                                display: 'inline-block',\n                                textDecoration: 'none',\n                                marginRight: 10,\n                                position: 'relative',\n                                top: '2px',\n                            }}\n                            to={'/new'}\n                        >\n                            <AddCircleIcon />\n                        </Link>\n                        <Filter\n                            name={name}\n                            onChangeName={onChangeFilterName}\n                            onKeypressEnter={this.onSelectDashboard}\n                        />\n                    </div>\n                    {orArray(dashboards).map(dashboard => (\n                        <Chip\n                            key={dashboard.id}\n                            label={dashboard.displayName}\n                            starred={dashboard.starred}\n                            dashboardId={dashboard.id}\n                            selected={dashboard.id === selectedId}\n                        />\n                    ))}\n                </div>\n                <ShowMoreButton\n                    onClick={this.onToggleMaxHeight}\n                    isMaxHeight={this.state.isMaxHeight}\n                    disabled={this.props.userRows === MAX_ROW_COUNT}\n                />\n            </ControlBar>\n        );\n    }\n}\n\nconst mapStateToProps = state => ({\n    dashboards: sGetAllDashboards(state),\n    name: sGetFilterName(state),\n    userRows: sGetControlBarUserRows(state),\n    selectedId: sGetSelectedId(state),\n});\n\nconst mapDispatchToProps = {\n    onChangeHeight: acSetControlBarUserRows,\n    onChangeFilterName: acSetFilterName,\n};\nconst mergeProps = (stateProps, dispatchProps, ownProps) => {\n    const dashboards = Object.values(orObject(stateProps.dashboards));\n    const displayDashboards = arraySort(\n        dashboards.filter(d =>\n            d.displayName.toLowerCase().includes(stateProps.name.toLowerCase())\n        ),\n        'ASC',\n        'displayName'\n    );\n\n    return {\n        ...stateProps,\n        ...ownProps,\n        ...dispatchProps,\n        dashboards: [\n            ...displayDashboards.filter(d => d.starred),\n            ...displayDashboards.filter(d => !d.starred),\n        ],\n    };\n};\n\nDashboardsBar.propTypes = {\n    dashboards: PropTypes.array,\n    history: PropTypes.object,\n    name: PropTypes.string,\n    selectedId: PropTypes.string,\n    userRows: PropTypes.number,\n    onChangeFilterName: PropTypes.func,\n    onChangeHeight: PropTypes.func,\n};\n\nexport default withRouter(\n    connect(\n        mapStateToProps,\n        mapDispatchToProps,\n        mergeProps\n    )(DashboardsBar)\n);\n","import {\n    SET_DASHBOARDS_FILTER_NAME,\n    SET_DASHBOARDS_FILTER_OWNER,\n    SET_DASHBOARDS_FILTER_ORDER,\n} from '../reducers/dashboardsFilter';\n\n// actions\n\nexport const acSetFilterName = value => ({\n    type: SET_DASHBOARDS_FILTER_NAME,\n    value,\n});\n\nexport const acSetFilterOwner = value => ({\n    type: SET_DASHBOARDS_FILTER_OWNER,\n    value,\n});\n\nexport const acSetFilterOrder = value => ({\n    type: SET_DASHBOARDS_FILTER_ORDER,\n    value,\n});\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\n\nimport {\n    getTopOffset,\n    MIN_ROW_COUNT,\n} from '../ControlBar/controlBarDimensions';\nimport { sGetControlBarUserRows } from '../../reducers/controlBar';\n\nconst DashboardVerticalOffset = props => {\n    const rows = props.editMode ? MIN_ROW_COUNT : props.userRows;\n    const marginTop = getTopOffset(rows);\n\n    return <div className=\"page-container-top-margin\" style={{ marginTop }} />;\n};\n\nconst mapStateToProps = state => ({\n    userRows: sGetControlBarUserRows(state),\n});\n\nDashboardVerticalOffset.propTypes = {\n    editMode: PropTypes.bool,\n    userRows: PropTypes.number,\n};\n\nexport default connect(mapStateToProps)(DashboardVerticalOffset);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { MenuItem, colors } from '@dhis2/ui-core';\n\nconst HeaderMenuItem = ({ title }) => (\n    <MenuItem\n        dense\n        key={title}\n        disabled\n        label={\n            <p style={{ color: colors.grey800, fontWeight: '600' }}>{title}</p>\n        }\n    />\n);\n\nHeaderMenuItem.propTypes = {\n    title: PropTypes.string.isRequired,\n};\n\nexport default HeaderMenuItem;\n","import React from 'react';\nimport { colors } from '@dhis2/ui-core';\nimport PropTypes from 'prop-types';\n\nconst LaunchIcon = ({ className }) => (\n    <svg\n        className={className}\n        xmlns=\"http://www.w3.org/2000/svg\"\n        width=\"12\"\n        height=\"12\"\n        fill={colors.grey600}\n        viewBox=\"0 0 24 24\"\n    >\n        <path d=\"M0 0h24v24H0z\" fill=\"none\" />\n        <path d=\"M19 19H5V5h7V3H5c-1.11 0-2 .9-2 2v14c0 1.1.89 2 2 2h14c1.1 0 2-.9 2-2v-7h-2v7zM14 3v2h3.59l-9.83 9.83 1.41 1.41L19 6.41V10h2V3h-7z\" />\n    </svg>\n);\n\nLaunchIcon.propTypes = {\n    className: PropTypes.string,\n};\n\nexport default LaunchIcon;\n","import React from 'react';\nimport { MenuItem, colors } from '@dhis2/ui-core';\nimport i18n from '@dhis2/d2-i18n';\nimport PropTypes from 'prop-types';\nimport { visTypeIcons } from '@dhis2/analytics';\n\nimport { getItemIcon, VISUALIZATION } from '../../modules/itemTypes';\nimport LaunchIcon from '../../icons/Launch';\n\nimport classes from './styles/ContentMenuItem.module.css';\n\nconst LaunchLink = ({ url }) => (\n    <a\n        onClick={e => e.stopPropagation()}\n        className={classes.launchLink}\n        target=\"_blank\"\n        rel=\"noopener noreferrer\"\n        href={url}\n    >\n        <LaunchIcon />\n    </a>\n);\n\nLaunchLink.propTypes = {\n    url: PropTypes.string,\n};\n\nconst InsertButton = () => (\n    <button className={classes.buttonInsert}>{i18n.t('Insert')}</button>\n);\n\nconst ContentMenuItem = ({ type, name, onInsert, url, visType }) => {\n    const ItemIcon = getItemIcon(type);\n\n    const renderedItemIcon =\n        type === VISUALIZATION ? (\n            visTypeIcons[visType]\n        ) : (\n            <ItemIcon style={{ fill: colors.grey600 }} />\n        );\n\n    return (\n        <MenuItem\n            dense\n            onClick={onInsert}\n            label={\n                <div className={classes.menuItem}>\n                    <div className={classes.label}>\n                        <span style={{ margin: '6px' }}>\n                            {renderedItemIcon}\n                        </span>\n                        <span>{name}</span>\n                        {url ? <LaunchLink url={url} /> : null}\n                    </div>\n                    <InsertButton />\n                </div>\n            }\n        />\n    );\n};\n\nContentMenuItem.propTypes = {\n    name: PropTypes.string,\n    type: PropTypes.string,\n    url: PropTypes.string,\n    visType: PropTypes.string,\n    onInsert: PropTypes.func,\n};\n\nexport default ContentMenuItem;\n","import i18n from '@dhis2/d2-i18n';\nimport {\n    spacerContent,\n    VISUALIZATION,\n    MAP,\n    EVENT_CHART,\n    EVENT_REPORT,\n    USERS,\n    REPORTS,\n    RESOURCES,\n    APP,\n    MESSAGES,\n    TEXT,\n    SPACER,\n} from '../../modules/itemTypes';\n\nexport const singleItems = [\n    {\n        id: 'additional',\n        header: i18n.t('Additional items'),\n        items: [\n            {\n                type: TEXT,\n                name: i18n.t('Text box'),\n                content: '',\n            },\n            {\n                type: MESSAGES,\n                name: i18n.t('Messages'),\n                content: 'true',\n            },\n            {\n                type: SPACER,\n                name: i18n.t('Spacer'),\n                content: spacerContent,\n            },\n        ],\n    },\n];\n\n// categorizedItems are grouped in the item selector menu\nexport const categorizedItems = [\n    VISUALIZATION,\n    MAP,\n    EVENT_REPORT,\n    EVENT_CHART,\n    USERS,\n    REPORTS,\n    RESOURCES,\n    APP,\n];\n\n// listItemTypes are included in a single dashboard item\nexport const listItemTypes = [REPORTS, RESOURCES, USERS];\n","import React, { Component, Fragment } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport i18n from '@dhis2/d2-i18n';\nimport { MenuItem, Divider } from '@dhis2/ui-core';\n\nimport HeaderMenuItem from './HeaderMenuItem';\nimport ContentMenuItem from './ContentMenuItem';\n\nimport { tAddListItemContent } from './actions';\nimport { acAddDashboardItem } from '../../actions/editDashboard';\nimport { getItemUrl, APP, VISUALIZATION } from '../../modules/itemTypes';\nimport { categorizedItems, listItemTypes } from './selectableItems';\n\nimport classes from './styles/CategorizedMenuGroup.module.css';\n\nclass CategorizedMenuGroup extends Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            seeMore: false,\n        };\n    }\n\n    addItem = item => () => {\n        const { type, acAddDashboardItem, tAddListItemContent } = this.props;\n\n        if (type === APP) {\n            acAddDashboardItem({ type, content: item.key });\n        } else {\n            const newItem = {\n                id: item.id,\n                name: item.displayName || item.name,\n            };\n\n            if (listItemTypes.includes(type)) {\n                tAddListItemContent(type, newItem);\n            } else {\n                acAddDashboardItem({ type, content: newItem });\n            }\n        }\n    };\n\n    toggleSeeMore = () => {\n        this.setState({ seeMore: !this.state.seeMore });\n\n        this.props.onChangeItemsLimit(this.props.type);\n    };\n\n    render() {\n        const { title, type, items, hasMore } = this.props;\n        return (\n            <Fragment>\n                <HeaderMenuItem title={title} />\n                {items.map(item => {\n                    const itemUrl = getItemUrl(type, item, this.context.d2);\n                    return (\n                        <ContentMenuItem\n                            key={item.id || item.key}\n                            type={type}\n                            visType={type === VISUALIZATION ? item.type : type}\n                            name={item.displayName || item.name}\n                            onInsert={this.addItem(item)}\n                            url={itemUrl}\n                        />\n                    );\n                })}\n                {hasMore ? (\n                    <MenuItem\n                        dense\n                        key={`showmore${title}`}\n                        onClick={this.toggleSeeMore}\n                        label={\n                            <button className={classes.showMoreButton}>\n                                {this.state.seeMore\n                                    ? i18n.t('Show fewer')\n                                    : i18n.t('Show more')}\n                            </button>\n                        }\n                    />\n                ) : null}\n                <Divider margin=\"8px 0px\" />\n            </Fragment>\n        );\n    }\n}\n\nCategorizedMenuGroup.propTypes = {\n    items: PropTypes.array.isRequired,\n    title: PropTypes.string.isRequired,\n    type: PropTypes.oneOf(categorizedItems).isRequired,\n    onChangeItemsLimit: PropTypes.func.isRequired,\n    acAddDashboardItem: PropTypes.func,\n    hasMore: PropTypes.bool,\n    tAddListItemContent: PropTypes.func,\n};\n\nCategorizedMenuGroup.contextTypes = {\n    d2: PropTypes.object.isRequired,\n};\n\nexport default connect(\n    null,\n    {\n        acAddDashboardItem,\n        tAddListItemContent,\n    }\n)(CategorizedMenuGroup);\n","import { sGetEditDashboardRoot } from '../../reducers/editDashboard';\nimport { itemTypeMap } from '../../modules/itemTypes';\nimport {\n    acAddDashboardItem,\n    acUpdateDashboardItem,\n} from '../../actions/editDashboard';\n\nexport const tAddListItemContent = (type, content) => (dispatch, getState) => {\n    const state = getState();\n    const listItemType = itemTypeMap[type].propName;\n    const dashboardItems = sGetEditDashboardRoot(state).dashboardItems;\n    const dashboardItemIndex = dashboardItems.findIndex(\n        item => item.type === type\n    );\n    let dashboardItem;\n\n    // Reports/Resources/Users dashboard item type already present in dashboard\n    if (dashboardItemIndex > -1) {\n        dashboardItem = dashboardItems[dashboardItemIndex];\n        dashboardItem[listItemType].push(content);\n\n        dispatch(acUpdateDashboardItem(dashboardItem));\n    } else {\n        dashboardItem = {\n            type: type,\n            content: [content],\n        };\n\n        dispatch(acAddDashboardItem(dashboardItem));\n    }\n};\n","import React, { Fragment } from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\n\nimport HeaderMenuItem from './HeaderMenuItem';\nimport ContentMenuItem from './ContentMenuItem';\nimport { acAddDashboardItem } from '../../actions/editDashboard';\n\nexport const SinglesMenuGroup = ({ acAddDashboardItem, category }) => {\n    const addToDashboard = ({ type, content }) => () => {\n        acAddDashboardItem({ type, content });\n    };\n\n    return (\n        <Fragment>\n            <HeaderMenuItem title={category.header} />\n            {category.items.map(item => (\n                <ContentMenuItem\n                    key={item.type}\n                    type={item.type}\n                    name={item.name}\n                    onInsert={addToDashboard(item)}\n                />\n            ))}\n        </Fragment>\n    );\n};\n\nSinglesMenuGroup.propTypes = {\n    acAddDashboardItem: PropTypes.func,\n    category: PropTypes.object,\n};\n\nexport default connect(\n    null,\n    { acAddDashboardItem }\n)(SinglesMenuGroup);\n","import React, { Fragment } from 'react';\nimport PropTypes from 'prop-types';\nimport i18n from '@dhis2/d2-i18n';\nimport Popover from '@material-ui/core/Popover';\nimport { InputField, Menu } from '@dhis2/ui-core';\n\nimport CategorizedMenuGroup from './CategorizedMenuGroup';\nimport SinglesMenuGroup from './SinglesMenuGroup';\nimport { singleItems, categorizedItems } from './selectableItems';\nimport { itemTypeMap, getDefaultItemCount } from '../../modules/itemTypes';\n\nimport './styles/ItemSelector.css';\n\nconst ItemSearchField = props => (\n    <InputField\n        name=\"Dashboard item search\"\n        label={i18n.t('Search for items to add to this dashboard')}\n        type=\"text\"\n        onChange={props.onChange}\n        onFocus={props.onFocus}\n        value={props.value}\n    />\n);\n\nclass ItemSelector extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            anchorEl: null,\n            open: false,\n            maxOptions: new Set(),\n            items: undefined,\n            filter: '',\n        };\n    }\n\n    closeList = () => {\n        this.setState({ open: false, filter: '' });\n    };\n\n    openList = (_, event) => {\n        this.fetchItems();\n\n        this.setState({\n            anchorEl: event.currentTarget,\n            open: true,\n        });\n    };\n\n    setFilter = (_, event) => {\n        this.setState({ filter: event.target.value }, this.fetchItems);\n    };\n\n    getCategorizedMenuGroups = () =>\n        categorizedItems\n            .filter(type => {\n                const itemType = itemTypeMap[type];\n                return (\n                    this.state.items && this.state.items[itemType.endPointName]\n                );\n            })\n            .map(type => {\n                const itemType = itemTypeMap[type];\n                const itemCount = getDefaultItemCount(type);\n                const allItems = this.state.items[itemType.endPointName];\n                const hasMore = allItems.length > itemCount;\n                const items = this.state.maxOptions.has(itemType.id)\n                    ? allItems\n                    : allItems.slice(0, itemCount);\n\n                return (\n                    <CategorizedMenuGroup\n                        key={type}\n                        type={type}\n                        title={itemType.pluralTitle}\n                        items={items}\n                        onChangeItemsLimit={this.fetchItems}\n                        hasMore={hasMore}\n                    />\n                );\n            });\n\n    getSinglesMenuGroups = () =>\n        singleItems.map(category => (\n            <SinglesMenuGroup key={category.id} category={category} />\n        ));\n\n    getMenuGroups = () =>\n        this.getCategorizedMenuGroups().concat(this.getSinglesMenuGroups());\n\n    fetchItems = async type => {\n        if (type) {\n            const maxOptions = this.state.maxOptions;\n\n            if (maxOptions.has(type)) {\n                maxOptions.delete(type);\n            } else {\n                maxOptions.add(type);\n            }\n\n            this.setState({ maxOptions });\n        } else {\n            this.setState({\n                maxOptions: new Set(),\n            });\n        }\n\n        let queryString = '?count=11';\n        if ([...this.state.maxOptions.values()].length) {\n            queryString +=\n                '&max=' + [...this.state.maxOptions.values()].join('&max=');\n        }\n\n        const filter = this.state.filter ? `/${this.state.filter}` : '';\n\n        this.context.d2.Api.getApi()\n            .get(`dashboards/q${filter}${queryString}`)\n            .then(response => this.setState({ items: response }))\n            .catch(console.error);\n    };\n\n    render() {\n        return (\n            <Fragment>\n                <ItemSearchField\n                    value={this.state.filter}\n                    onChange={this.setFilter}\n                    onFocus={this.openList}\n                />\n                <Popover\n                    className=\"dashboard-item-selector\"\n                    open={this.state.open}\n                    onClose={this.closeList}\n                    anchorEl={this.state.anchorEl}\n                    anchorOrigin={{ horizontal: 'left', vertical: 'bottom' }}\n                    transformOrigin={{ horizontal: 'left', vertical: 'top' }}\n                    style={{ height: '70vh' }}\n                    PaperProps={{ style: { width: '700px' } }}\n                    disableAutoFocus={true}\n                    disableRestoreFocus={true}\n                >\n                    <Menu>{this.getMenuGroups()}</Menu>\n                </Popover>\n            </Fragment>\n        );\n    }\n}\n\nItemSearchField.propTypes = {\n    value: PropTypes.string,\n    onChange: PropTypes.func,\n    onFocus: PropTypes.func,\n};\n\nItemSelector.contextTypes = {\n    d2: PropTypes.object.isRequired,\n};\n\nexport default ItemSelector;\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport i18n from '@dhis2/d2-i18n';\nimport { InputField, TextAreaField } from '@dhis2/ui-core';\n\nimport ItemSelector from '../ItemSelector/ItemSelector';\nimport {\n    acSetDashboardTitle,\n    acSetDashboardDescription,\n} from '../../actions/editDashboard';\nimport { orObject } from '../../modules/util';\nimport { sGetEditDashboardRoot } from '../../reducers/editDashboard';\n\nconst styles = {\n    section: { display: 'flex', justifyContent: 'space-between' },\n    titleDescription: {\n        flex: '3',\n        marginRight: '50px',\n    },\n    title: {\n        display: 'block',\n        clear: 'both',\n    },\n    description: {\n        display: 'block',\n        clear: 'both',\n        marginTop: '15px',\n    },\n    underline: {\n        '&::before': {\n            borderBottom: `none`,\n        },\n        '&:hover::before': {\n            borderBottom: `none!important`,\n        },\n    },\n    input: {\n        backgroundColor: 'rgba(0, 0, 10, 0.05)',\n        borderRadius: '4px',\n        width: '100%',\n        '&:hover': {\n            backgroundColor: 'rgba(0, 0, 10, 0.08)',\n        },\n    },\n    itemSelector: {\n        flex: '2',\n        position: 'relative',\n    },\n};\n\nexport const EditTitleBar = ({\n    name,\n    description,\n    onChangeTitle,\n    onChangeDescription,\n    classes,\n}) => {\n    const updateTitle = (_, e) => {\n        onChangeTitle(e.target.value);\n    };\n\n    const updateDescription = (_, e) => {\n        onChangeDescription(e.target.value);\n    };\n\n    return (\n        <section className={classes.section}>\n            <div className={classes.titleDescription}>\n                <InputField\n                    className={classes.title}\n                    name=\"Dashboard title input\"\n                    label={i18n.t('Dashboard title')}\n                    type=\"text\"\n                    onChange={updateTitle}\n                    value={name}\n                />\n                <TextAreaField\n                    className={classes.description}\n                    name=\"Dashboard description input\"\n                    label={i18n.t('Dashboard description')}\n                    onChange={updateDescription}\n                    value={description}\n                />\n            </div>\n            <div className={classes.itemSelector}>\n                <ItemSelector />\n            </div>\n        </section>\n    );\n};\n\nconst mapStateToProps = state => {\n    const selectedDashboard = orObject(sGetEditDashboardRoot(state));\n\n    return {\n        name: selectedDashboard.name,\n        description: selectedDashboard.description,\n    };\n};\n\nconst mapDispatchToProps = {\n    onChangeTitle: acSetDashboardTitle,\n    onChangeDescription: acSetDashboardDescription,\n};\n\nexport default connect(\n    mapStateToProps,\n    mapDispatchToProps\n)(withStyles(styles)(EditTitleBar));\n\nEditTitleBar.propTypes = {\n    onChangeDescription: PropTypes.func.isRequired,\n    onChangeTitle: PropTypes.func.isRequired,\n    classes: PropTypes.object,\n    description: PropTypes.string,\n    name: PropTypes.string,\n};\n\nEditTitleBar.defaultProps = {\n    name: '',\n    description: '',\n};\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nimport { Button } from '@dhis2/ui-core';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\n\nimport i18n from '@dhis2/d2-i18n';\n\nimport {\n    PeriodDimension,\n    DynamicDimension,\n    OrgUnitDimension,\n    DIMENSION_ID_PERIOD,\n    DIMENSION_ID_ORGUNIT,\n} from '@dhis2/analytics';\n\nconst peId = DIMENSION_ID_PERIOD;\nconst ouId = DIMENSION_ID_ORGUNIT;\n\nclass FilterDialog extends Component {\n    onConfirm = id => () => this.props.onConfirm(id);\n\n    dialogContent() {\n        const { displayNameProperty, dimension, selectedItems } = this.props;\n        const dialogId = dimension.id;\n\n        const commonProps = {\n            d2: this.context.d2,\n            onSelect: this.props.onSelect,\n            onDeselect: this.props.onDeselect,\n            onReorder: this.props.onReorder,\n        };\n\n        switch (dialogId) {\n            case peId: {\n                return (\n                    <PeriodDimension\n                        selectedPeriods={selectedItems}\n                        {...commonProps}\n                    />\n                );\n            }\n            case ouId:\n                return (\n                    <OrgUnitDimension\n                        displayNameProperty={displayNameProperty}\n                        ouItems={selectedItems}\n                        {...commonProps}\n                    />\n                );\n            default:\n                return (\n                    <DynamicDimension\n                        selectedItems={selectedItems}\n                        dialogId={dialogId}\n                        dialogTitle={dimension.name}\n                        {...commonProps}\n                    />\n                );\n        }\n    }\n\n    render() {\n        const { dimension, onClose } = this.props;\n        const dialogId = dimension.id;\n\n        return (\n            <Dialog\n                open={!!dialogId}\n                maxWidth=\"lg\"\n                disableEnforceFocus\n                onClose={onClose}\n            >\n                {dialogId && this.dialogContent()}\n                <DialogActions>\n                    <Button kind=\"secondary\" onClick={onClose}>\n                        {i18n.t('Cancel')}\n                    </Button>\n                    <Button kind=\"primary\" onClick={this.onConfirm(dialogId)}>\n                        {i18n.t('Confirm')}\n                    </Button>\n                </DialogActions>\n            </Dialog>\n        );\n    }\n}\n\nFilterDialog.propTypes = {\n    dimension: PropTypes.object,\n    displayNameProperty: PropTypes.string,\n    selectedItems: PropTypes.array,\n    onClose: PropTypes.func,\n    onConfirm: PropTypes.func,\n    onDeselect: PropTypes.func,\n    onReorder: PropTypes.func,\n    onSelect: PropTypes.func,\n};\n\nFilterDialog.contextTypes = {\n    d2: PropTypes.object,\n};\n\nexport default FilterDialog;\n","export const SET_ACTIVE_MODAL_DIMENSION = 'SET_ACTIVE_MODAL_DIMENSION';\nexport const CLEAR_ACTIVE_MODAL_DIMENSION = 'CLEAR_ACTIVE_MODAL_DIMENSION';\n\nexport const DEFAULT_STATE_ACTIVE_MODAL_DIMENSION = {};\n\nexport default (state = DEFAULT_STATE_ACTIVE_MODAL_DIMENSION, action) => {\n    switch (action.type) {\n        case SET_ACTIVE_MODAL_DIMENSION: {\n            return action.value;\n        }\n        case CLEAR_ACTIVE_MODAL_DIMENSION: {\n            return DEFAULT_STATE_ACTIVE_MODAL_DIMENSION;\n        }\n        default:\n            return state;\n    }\n};\n\nexport const sGetActiveModalDimension = state => state.activeModalDimension;\n","import {\n    SET_ACTIVE_MODAL_DIMENSION,\n    CLEAR_ACTIVE_MODAL_DIMENSION,\n} from '../reducers/activeModalDimension';\n\nexport const acSetActiveModalDimension = value => ({\n    type: SET_ACTIVE_MODAL_DIMENSION,\n    value,\n});\n\nexport const acClearActiveModalDimension = () => ({\n    type: CLEAR_ACTIVE_MODAL_DIMENSION,\n});\n","import React, { Component, Fragment } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport Popover from '@material-ui/core/Popover';\nimport ArrowDropDownIcon from '@material-ui/icons/ArrowDropDown';\nimport { withTheme } from '@material-ui/core/styles';\n\nimport i18n from '@dhis2/d2-i18n';\nimport { DimensionsPanel } from '@dhis2/analytics';\n\nimport { Button } from '@dhis2/ui-core';\nimport FilterDialog from './FilterDialog';\n\nimport { sGetSettingsDisplayNameProperty } from '../../reducers/settings';\nimport { sGetActiveModalDimension } from '../../reducers/activeModalDimension';\nimport { sGetDimensions } from '../../reducers/dimensions';\nimport { sGetFiltersKeys } from '../../reducers/itemFilters';\nimport { sGetEditItemFiltersRoot } from '../../reducers/editItemFilters';\nimport { acAddItemFilter, acRemoveItemFilter } from '../../actions/itemFilters';\nimport {\n    acRemoveEditItemFilter,\n    acSetEditItemFilters,\n} from '../../actions/editItemFilters';\nimport {\n    acClearActiveModalDimension,\n    acSetActiveModalDimension,\n} from '../../actions/activeModalDimension';\n\nclass FilterSelector extends Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            anchorEl: null,\n        };\n    }\n\n    openPanel = (_, event) => {\n        this.setState({ anchorEl: event.currentTarget });\n    };\n\n    closePanel = () => {\n        this.setState({ anchorEl: null });\n    };\n\n    closeDialog = () => {\n        this.setState({ anchorEl: null });\n\n        this.props.clearActiveModalDimension();\n    };\n\n    selectDimension = id => {\n        this.props.setActiveModalDimension(\n            this.props.dimensions.find(dimension => dimension.id === id)\n        );\n    };\n\n    onSelectItems = ({ dimensionId, items }) => {\n        this.props.setEditItemFilters({\n            ...this.props.selectedItems,\n            [dimensionId]: items,\n        });\n    };\n\n    onDeselectItems = ({ dimensionId, itemIdsToRemove }) => {\n        const oldList = this.props.selectedItems[dimensionId] || [];\n        const newList = oldList.filter(\n            item => !itemIdsToRemove.includes(item.id)\n        );\n\n        if (newList.length) {\n            this.props.setEditItemFilters({\n                ...this.props.selectedItems,\n                [dimensionId]: newList,\n            });\n        } else {\n            this.props.removeEditItemFilter(dimensionId);\n        }\n    };\n\n    onReorderItems = ({ dimensionId, itemIds }) => {\n        const oldList = this.props.selectedItems[dimensionId] || [];\n        const reorderedList = itemIds.map(id =>\n            oldList.find(item => item.id === id)\n        );\n\n        this.props.setEditItemFilters({\n            ...this.props.selectedItems,\n            [dimensionId]: reorderedList,\n        });\n    };\n\n    saveFilter = id => {\n        const filterItems = this.props.selectedItems[id];\n\n        if (filterItems && filterItems.length) {\n            this.props.addItemFilter({\n                id,\n                value: [...filterItems],\n            });\n        } else {\n            this.props.removeItemFilter(id);\n        }\n\n        this.closeDialog();\n    };\n\n    render() {\n        const {\n            theme,\n            displayNameProperty,\n            dimension,\n            dimensions,\n            selectedDimensions,\n            selectedItems,\n        } = this.props;\n\n        return (\n            <Fragment>\n                <Button onClick={this.openPanel}>\n                    {i18n.t('Add filter')}\n                    <ArrowDropDownIcon />\n                </Button>\n                <Popover\n                    open={Boolean(this.state.anchorEl)}\n                    anchorEl={this.state.anchorEl}\n                    anchorOrigin={{ vertical: 'bottom', horizontal: 'left' }}\n                    onClose={this.closePanel}\n                    style={{\n                        height: '100%',\n                        fontFamily: theme.typography.fontFamily,\n                    }}\n                >\n                    <DimensionsPanel\n                        dimensions={dimensions}\n                        onDimensionClick={this.selectDimension}\n                        selectedIds={selectedDimensions}\n                    />\n                </Popover>\n                {dimension ? (\n                    <FilterDialog\n                        displayNameProperty={displayNameProperty}\n                        dimension={dimension}\n                        selectedItems={selectedItems[dimension.id] || []}\n                        onSelect={this.onSelectItems}\n                        onDeselect={this.onDeselectItems}\n                        onReorder={this.onReorderItems}\n                        onClose={this.closeDialog}\n                        onConfirm={this.saveFilter}\n                    />\n                ) : null}\n            </Fragment>\n        );\n    }\n}\n\nconst mapStateToProps = state => ({\n    displayNameProperty: sGetSettingsDisplayNameProperty(state),\n    dimension: sGetActiveModalDimension(state),\n    dimensions: sGetDimensions(state),\n    selectedDimensions: sGetFiltersKeys(state),\n    selectedItems: sGetEditItemFiltersRoot(state),\n});\n\nFilterSelector.propTypes = {\n    addItemFilter: PropTypes.func,\n    clearActiveModalDimension: PropTypes.func,\n    dimension: PropTypes.object,\n    dimensions: PropTypes.object,\n    displayNameProperty: PropTypes.string,\n    removeEditItemFilter: PropTypes.func,\n    removeItemFilter: PropTypes.func,\n    selectedDimensions: PropTypes.array,\n    selectedItems: PropTypes.object,\n    setActiveModalDimension: PropTypes.func,\n    setEditItemFilters: PropTypes.func,\n    theme: PropTypes.object,\n};\n\nexport default connect(\n    mapStateToProps,\n    {\n        clearActiveModalDimension: acClearActiveModalDimension,\n        setActiveModalDimension: acSetActiveModalDimension,\n        addItemFilter: acAddItemFilter,\n        removeItemFilter: acRemoveItemFilter,\n        removeEditItemFilter: acRemoveEditItemFilter,\n        setEditItemFilters: acSetEditItemFilters,\n    }\n)(withTheme()(FilterSelector));\n","import React, { Component } from 'react';\nimport InfoOutlineIcon from '@material-ui/icons/InfoOutlined';\nimport { colors } from '@dhis2/ui-core';\nimport PropTypes from 'prop-types';\n\nclass Info extends Component {\n    show = false;\n\n    toggle() {\n        this.show = !this.show;\n        return this.show;\n    }\n\n    render() {\n        return (\n            <div onClick={() => this.props.onClick(this.toggle())}>\n                <InfoOutlineIcon style={{ fill: colors.grey600 }} />\n            </div>\n        );\n    }\n}\n\nInfo.propTypes = {\n    onClick: PropTypes.func,\n};\n\nexport default Info;\n","import React, { Component, Fragment } from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport { Link } from 'react-router-dom';\nimport i18n from '@dhis2/d2-i18n';\nimport SharingDialog from '@dhis2/d2-ui-sharing-dialog';\nimport Star from '@material-ui/icons/Star';\nimport StarBorder from '@material-ui/icons/StarBorder';\n\nimport { orObject } from '../../modules/util';\nimport { tStarDashboard } from '../../actions/dashboards';\nimport { acSetSelectedShowDescription } from '../../actions/selected';\nimport FilterSelector from '../ItemFilter/FilterSelector';\nimport { Button } from '@dhis2/ui-core';\nimport Info from './Info';\nimport {\n    sGetSelectedId,\n    sGetSelectedShowDescription,\n} from '../../reducers/selected';\nimport {\n    sGetDashboardById,\n    sGetDashboardItems,\n} from '../../reducers/dashboards';\nimport { colors } from '@dhis2/ui-core';\n\nconst NO_DESCRIPTION = i18n.t('No description');\n\nconst styles = {\n    actions: {\n        display: 'flex',\n        alignItems: 'center',\n        marginLeft: '20px',\n    },\n    starIcon: {\n        fill: colors.grey600,\n    },\n    textButton: {\n        minWidth: '30px',\n        top: '1px',\n    },\n    editLink: {\n        display: 'inline-block',\n        verticalAlign: 'top',\n        textDecoration: 'none',\n        marginRight: '4px',\n    },\n    titleBar: {\n        display: 'flex',\n        alignItems: 'flex-start',\n    },\n    titleBarIcon: {\n        marginLeft: 5,\n        position: 'relative',\n        top: 1,\n        cursor: 'pointer',\n    },\n};\n\nclass ViewTitleBar extends Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            sharingDialogIsOpen: false,\n        };\n    }\n\n    toggleSharingDialog = () =>\n        this.setState({ sharingDialogIsOpen: !this.state.sharingDialogIsOpen });\n\n    render() {\n        const {\n            id,\n            name,\n            description,\n            access,\n            style,\n            showDescription,\n            starred,\n            onStarClick,\n            onInfoClick,\n            classes,\n        } = this.props;\n\n        const titleStyle = Object.assign({}, style.title, {\n            cursor: 'default',\n            userSelect: 'text',\n            top: '7px',\n        });\n\n        const StarIcon = starred ? Star : StarBorder;\n\n        return (\n            <Fragment>\n                <div className={classes.titleBar}>\n                    <span style={titleStyle}>{name}</span>\n                    <div className={classes.actions}>\n                        <div\n                            className={classes.titleBarIcon}\n                            onClick={onStarClick}\n                        >\n                            <StarIcon className={classes.starIcon} />\n                        </div>\n                        <div className={classes.titleBarIcon}>\n                            <Info onClick={onInfoClick} />\n                        </div>\n                        <div style={{ marginLeft: '10px' }}>\n                            {access.update ? (\n                                <Link\n                                    className={classes.editLink}\n                                    to={`/${id}/edit`}\n                                >\n                                    <Button>{i18n.t('Edit')}</Button>\n                                </Link>\n                            ) : null}\n                            {access.manage ? (\n                                <span style={{ marginRight: '4px' }}>\n                                    <Button onClick={this.toggleSharingDialog}>\n                                        {i18n.t('Share')}\n                                    </Button>\n                                </span>\n                            ) : null}\n                            <span style={{ marginRight: '4px' }}>\n                                <FilterSelector />\n                            </span>\n                        </div>\n                    </div>\n                </div>\n                {showDescription ? (\n                    <div\n                        className=\"dashboard-description\"\n                        style={Object.assign(\n                            { paddingTop: '5px', paddingBottom: '5px' },\n                            style.description,\n                            !description ? { color: '#888' } : {}\n                        )}\n                    >\n                        {description || NO_DESCRIPTION}\n                    </div>\n                ) : null}\n                {id ? (\n                    <SharingDialog\n                        d2={this.context.d2}\n                        id={id}\n                        type=\"dashboard\"\n                        open={this.state.sharingDialogIsOpen}\n                        onRequestClose={this.toggleSharingDialog}\n                    />\n                ) : null}\n            </Fragment>\n        );\n    }\n}\n\nconst mapStateToProps = state => {\n    const id = sGetSelectedId(state);\n    const dashboard = orObject(sGetDashboardById(state, id));\n\n    return {\n        id,\n        name: dashboard.displayName,\n        description: dashboard.displayDescription,\n        dashboardItems: sGetDashboardItems(state),\n        showDescription: sGetSelectedShowDescription(state),\n        starred: dashboard.starred,\n        access: orObject(dashboard.access),\n    };\n};\n\nconst mergeProps = (stateProps, dispatchProps, ownProps) => {\n    const { id, starred, showDescription } = stateProps;\n    const { dispatch } = dispatchProps;\n\n    return {\n        ...stateProps,\n        ...ownProps,\n        onStarClick: () => dispatch(tStarDashboard(id, !starred)),\n        onInfoClick: () =>\n            dispatch(acSetSelectedShowDescription(!showDescription)),\n    };\n};\n\nexport default connect(\n    mapStateToProps,\n    null,\n    mergeProps\n)(withStyles(styles)(ViewTitleBar));\n\nViewTitleBar.propTypes = {\n    access: PropTypes.object,\n    classes: PropTypes.object,\n    description: PropTypes.string,\n    id: PropTypes.string,\n    name: PropTypes.string,\n    showDescription: PropTypes.bool,\n    starred: PropTypes.bool,\n    style: PropTypes.object,\n    onInfoClick: PropTypes.func,\n    onStarClick: PropTypes.func,\n};\n\nViewTitleBar.defaultProps = {\n    name: '',\n    description: '',\n    starred: false,\n    showDescription: false,\n    onInfoClick: null,\n};\n\nViewTitleBar.contextTypes = {\n    d2: PropTypes.object,\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport { colors } from '@dhis2/ui-core';\nimport EditTitleBar from './EditTitleBar';\nimport ViewTitleBar from './ViewTitleBar';\n\nimport './TitleBar.css';\n\nconst style = {\n    title: {\n        position: 'relative',\n        fontSize: 21,\n        fontWeight: 500,\n        color: colors.black,\n        minWidth: 50,\n    },\n    description: {\n        fontSize: 14,\n        color: colors.grey800,\n    },\n};\n\nconst TitleBar = ({ edit }) => {\n    return (\n        <div\n            className=\"titlebar-wrapper\"\n            style={{\n                padding: '20px 15px 5px 10px',\n            }}\n        >\n            {edit ? (\n                <EditTitleBar style={style} />\n            ) : (\n                <ViewTitleBar style={style} />\n            )}\n        </div>\n    );\n};\n\nTitleBar.propTypes = {\n    edit: PropTypes.bool,\n};\n\nexport default TitleBar;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nimport i18n from '@dhis2/d2-i18n';\n\nimport * as pluginManager from './plugin';\nimport { getBaseUrl, orObject } from '../../../modules/util';\nimport { getGridItemDomId } from '../../ItemGrid/gridUtil';\n\nconst pluginCredentials = d2 => {\n    return {\n        baseUrl: getBaseUrl(d2),\n        auth: d2.Api.getApi().defaultHeaders.Authorization,\n    };\n};\n\nclass DefaultPlugin extends Component {\n    pluginCredentials = null;\n\n    constructor(props, context) {\n        super(props);\n\n        this.d2 = context.d2;\n    }\n\n    shouldPluginReload = prevProps => {\n        // TODO - fix this hack, to handle bug with multiple\n        // rerendering while switching between dashboards.\n        //\n        // To determine if the rendering is happening because of a\n        // dashboard switch, check if the item reference has changed.\n        const reloadAllowed = this.props.item === prevProps.item;\n\n        const filtersChanged = prevProps.itemFilters !== this.props.itemFilters;\n        const vis = orObject(this.props.visualization);\n        const prevVis = orObject(prevProps.visualization);\n        const visChanged =\n            vis.id !== prevVis.id || vis.activeType !== prevVis.activeType;\n\n        return reloadAllowed && (visChanged || filtersChanged);\n    };\n\n    reloadPlugin = prevProps => {\n        if (\n            pluginManager.pluginIsAvailable(\n                this.props.item,\n                this.props.visualization\n            ) &&\n            this.shouldPluginReload(prevProps)\n        ) {\n            const prevVis = orObject(prevProps.visualization);\n            const currentVis = this.props.visualization;\n\n            const useActiveType =\n                currentVis.activeType !== prevVis.activeType ||\n                currentVis.activeType !== this.props.item.type;\n\n            if (\n                useActiveType ||\n                this.props.itemFilters !== prevProps.itemFilters\n            ) {\n                pluginManager.unmount(\n                    this.props.item,\n                    prevVis.activeType || this.props.item.type\n                );\n\n                pluginManager.load(this.props.item, this.props.visualization, {\n                    credentials: this.pluginCredentials,\n                    activeType: useActiveType ? currentVis.activeType : null,\n                });\n            }\n        }\n    };\n\n    componentDidMount() {\n        this.pluginCredentials = pluginCredentials(this.d2);\n\n        if (\n            pluginManager.pluginIsAvailable(\n                this.props.item,\n                this.props.visualization\n            )\n        ) {\n            pluginManager.load(this.props.item, this.props.visualization, {\n                credentials: this.pluginCredentials,\n                activeType: !this.props.editMode ? this.getActiveType() : null,\n            });\n        }\n    }\n\n    componentDidUpdate(prevProps) {\n        this.reloadPlugin(prevProps);\n    }\n\n    getActiveType = () =>\n        this.props.visualization.activeType || this.props.item.type;\n\n    render() {\n        const { classes, item, visualization, style } = this.props;\n        const pluginIsAvailable = pluginManager.pluginIsAvailable(\n            item,\n            visualization\n        );\n\n        return pluginIsAvailable ? (\n            <div id={getGridItemDomId(item.id)} style={style} />\n        ) : (\n            <div className={classes.textDiv}>\n                {i18n.t('Unable to load the plugin for this item')}\n            </div>\n        );\n    }\n}\n\nDefaultPlugin.contextTypes = {\n    d2: PropTypes.object,\n};\n\nDefaultPlugin.propTypes = {\n    classes: PropTypes.object,\n    editMode: PropTypes.bool,\n    item: PropTypes.object,\n    itemFilters: PropTypes.object,\n    style: PropTypes.object,\n    visualization: PropTypes.object,\n};\n\nDefaultPlugin.defaultProps = {\n    style: {},\n    item: {},\n    itemFilters: {},\n    visualization: {},\n};\n\nexport default DefaultPlugin;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport i18n from '@dhis2/d2-i18n';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport { colors } from '@dhis2/ui-core';\n\nimport classes from './styles/DeleteItemButton.module.css';\n\nconst DeleteItemButton = ({ onClick }) => (\n    <button\n        type=\"button\"\n        className={classes.deleteItemButton}\n        onClick={onClick}\n        title={i18n.t(`Delete item`)}\n    >\n        <DeleteIcon style={{ fill: colors.red500 }} />\n    </button>\n);\n\nDeleteItemButton.propTypes = {\n    onClick: PropTypes.func,\n};\n\nexport default DeleteItemButton;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\n\nimport { sGetIsEditing } from '../../reducers/editDashboard';\nimport { acRemoveDashboardItem } from '../../actions/editDashboard';\nimport DeleteItemButton from './DeleteItemButton';\n\nimport classes from './styles/ItemHeader.module.css';\n\nconst ItemHeader = props => {\n    const {\n        title,\n        editMode,\n        actionButtons,\n        itemId,\n        acRemoveDashboardItem,\n    } = props;\n\n    const handleDeleteItem = () => acRemoveDashboardItem(itemId);\n\n    return (\n        <div className={classes.itemHeaderWrap}>\n            <p className={classes.itemTitle}>{title}</p>\n            {editMode ? (\n                <div className={classes.itemActionsWrap}>\n                    <DeleteItemButton onClick={handleDeleteItem} />\n                </div>\n            ) : (\n                actionButtons && (\n                    <div className={classes.itemActionsWrap}>\n                        {actionButtons}\n                    </div>\n                )\n            )}\n        </div>\n    );\n};\n\nItemHeader.propTypes = {\n    acRemoveDashboardItem: PropTypes.func,\n    actionButtons: PropTypes.node,\n    editMode: PropTypes.bool,\n    itemId: PropTypes.string,\n    title: PropTypes.string,\n};\n\nconst mapStateToProps = state => ({\n    editMode: sGetIsEditing(state),\n});\n\nconst mapDispatchToProps = {\n    acRemoveDashboardItem,\n};\n\nexport default connect(\n    mapStateToProps,\n    mapDispatchToProps\n)(ItemHeader);\n","import React from 'react';\n\nexport const ThreeDots = () => (\n    <svg\n        height=\"18\"\n        viewBox=\"0 0 18 18\"\n        width=\"18\"\n        xmlns=\"http://www.w3.org/2000/svg\"\n    >\n        <path\n            d=\"m4 7.5c-.83 0-1.5.67-1.5 1.5s.67 1.5 1.5 1.5 1.5-.67 1.5-1.5-.67-1.5-1.5-1.5zm10 0c-.83 0-1.5.67-1.5 1.5s.67 1.5 1.5 1.5 1.5-.67 1.5-1.5-.67-1.5-1.5-1.5zm-5 0c-.83 0-1.5.67-1.5 1.5s.67 1.5 1.5 1.5 1.5-.67 1.5-1.5-.67-1.5-1.5-1.5z\"\n            fill=\"#6e7a8a\"\n        />\n    </svg>\n);\n\nexport const SpeechBubble = () => (\n    <svg\n        height=\"20\"\n        viewBox=\"0 0 20 20\"\n        width=\"20\"\n        xmlns=\"http://www.w3.org/2000/svg\"\n    >\n        <path\n            d=\"m20 2h-16c-1.1 0-1.99.9-1.99 2l-.01 18 4-4h14c1.1 0 2-.9 2-2v-12c0-1.1-.9-2-2-2zm-2 12h-12v-2h12zm0-3h-12v-2h12zm0-3h-12v-2h12z\"\n            fill=\"#6e7a8a\"\n            fillRule=\"evenodd\"\n            transform=\"translate(-2 -2)\"\n        />\n    </svg>\n);\n","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\n\nimport { isSingleValue, isYearOverYear } from '@dhis2/analytics';\nimport { Button, Menu, MenuItem, Divider, colors } from '@dhis2/ui-core';\nimport i18n from '@dhis2/d2-i18n';\nimport Popover from '@material-ui/core/Popover';\nimport TableIcon from '@material-ui/icons/ViewList';\nimport ChartIcon from '@material-ui/icons/InsertChart';\nimport MapIcon from '@material-ui/icons/Public';\nimport LaunchIcon from '@material-ui/icons/Launch';\n\nimport { ThreeDots, SpeechBubble } from './assets/icons';\nimport { pluginIsAvailable, getLink } from './plugin';\nimport {\n    CHART,\n    MAP,\n    REPORT_TABLE,\n    EVENT_CHART,\n    EVENT_REPORT,\n    isTrackerDomainType,\n    hasMapView,\n    getAppName,\n} from '../../../modules/itemTypes';\n\nconst iconFill = { fill: colors.grey600 };\n\nconst ItemHeaderButtons = props => {\n    const [anchorEl, setAnchorEl] = useState(null);\n\n    const { item, visualization, onSelectActiveType, d2, activeType } = props;\n\n    const isTrackerType = isTrackerDomainType(item.type);\n\n    const onViewTable = () => {\n        onSelectActiveType(isTrackerType ? EVENT_REPORT : REPORT_TABLE);\n        handleClose();\n    };\n\n    const onViewChart = () => {\n        onSelectActiveType(isTrackerType ? EVENT_CHART : CHART);\n        handleClose();\n    };\n\n    const onViewMap = () => {\n        onSelectActiveType(MAP);\n        handleClose();\n    };\n\n    const itemHasMapView = () => hasMapView(item.type);\n\n    const handleMenuClick = (_, event) => setAnchorEl(event.currentTarget);\n\n    const handleInterpretationClick = () => {\n        props.onToggleFooter();\n        if (anchorEl !== null) {\n            handleClose();\n        }\n    };\n\n    const handleClose = () => setAnchorEl(null);\n\n    const type = visualization.type || item.type;\n    const canViewAs = !isSingleValue(type) && !isYearOverYear(type);\n\n    const interpretationMenuLabel = props.activeFooter\n        ? i18n.t(`Hide interpretations and details`)\n        : i18n.t(`Show interpretations and details`);\n\n    const ViewAsMenuItems = () => (\n        <>\n            <MenuItem\n                dense\n                active={activeType === CHART}\n                label={i18n.t('View as Chart')}\n                onClick={onViewChart}\n                icon={<ChartIcon style={iconFill} />}\n            />\n            <MenuItem\n                dense\n                active={[REPORT_TABLE, EVENT_REPORT].includes(activeType)}\n                label={i18n.t('View as Table')}\n                onClick={onViewTable}\n                icon={<TableIcon style={iconFill} />}\n            />\n            {itemHasMapView() && (\n                <MenuItem\n                    dense\n                    active={activeType === MAP}\n                    label={i18n.t('View as Map')}\n                    onClick={onViewMap}\n                    icon={<MapIcon style={iconFill} />}\n                />\n            )}\n        </>\n    );\n\n    return pluginIsAvailable(item, visualization) ? (\n        <>\n            <Button small secondary onClick={handleMenuClick}>\n                <ThreeDots />\n            </Button>\n            <Popover\n                open={Boolean(anchorEl)}\n                onClose={handleClose}\n                anchorEl={anchorEl}\n            >\n                <Menu>\n                    {canViewAs && (\n                        <>\n                            <ViewAsMenuItems />\n                            <Divider />\n                        </>\n                    )}\n                    <MenuItem\n                        dense\n                        icon={<LaunchIcon style={{ fill: '#6e7a8a' }} />}\n                        label={i18n.t('Open in {{appName}} app', {\n                            appName: getAppName(item.type),\n                        })}\n                        href={getLink(item, d2)}\n                        target=\"_blank\"\n                    />\n                    <MenuItem\n                        dense\n                        icon={<SpeechBubble />}\n                        label={interpretationMenuLabel}\n                        onClick={handleInterpretationClick}\n                    />\n                </Menu>\n            </Popover>\n        </>\n    ) : null;\n};\n\nItemHeaderButtons.propTypes = {\n    activeFooter: PropTypes.bool,\n    activeType: PropTypes.string,\n    d2: PropTypes.object,\n    item: PropTypes.object,\n    visualization: PropTypes.object,\n    onSelectActiveType: PropTypes.func,\n    onToggleFooter: PropTypes.func,\n};\n\nexport default ItemHeaderButtons;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { colors } from '@dhis2/ui-core';\nimport { getId } from './plugin';\nimport InterpretationsComponent from '@dhis2/d2-ui-interpretations';\n\nconst style = {\n    scrollContainer: {\n        overflowY: 'auto',\n        height: '340px',\n    },\n    line: {\n        margin: '-1px 0px 0px',\n        height: '1px',\n        border: 'none',\n        backgroundColor: colors.grey100,\n    },\n};\n\nclass ItemFooter extends Component {\n    render() {\n        const objectId = getId(this.props.item);\n\n        return (\n            <div className=\"dashboard-item-footer\">\n                <hr style={style.line} />\n                <div style={style.scrollContainer}>\n                    <InterpretationsComponent\n                        d2={this.context.d2}\n                        item={this.props.item}\n                        type={this.props.item.type.toLowerCase()}\n                        id={objectId}\n                        appName=\"dashboard\"\n                    />\n                </div>\n            </div>\n        );\n    }\n}\n\nItemFooter.contextTypes = {\n    d2: PropTypes.object.isRequired,\n};\n\nItemFooter.propTypes = {\n    item: PropTypes.object.isRequired,\n};\n\nexport default ItemFooter;\n","// Note that this ignores discrepancies in 'this', so shouldn't be used with bound functions\n// This is useful instead of lodash/memoize when we only need to memoize a single value\n// Inspiration: https://github.com/alexreardon/memoize-one\n\nconst memoizeOne = fn => {\n    let lastArgs = undefined;\n    let lastValue = undefined;\n\n    return (...args) => {\n        if (\n            lastArgs &&\n            args.length === lastArgs.length &&\n            args.every((arg, i) => arg === lastArgs[i])\n        ) {\n            return lastValue;\n        }\n        lastArgs = args;\n        lastValue = fn(...args);\n        return lastValue;\n    };\n};\n\nexport default memoizeOne;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { withStyles } from '@material-ui/core/styles';\nimport VisualizationPlugin from '@dhis2/data-visualizer-plugin';\n\nimport i18n from '@dhis2/d2-i18n';\nimport uniqueId from 'lodash/uniqueId';\n\nimport DefaultPlugin from './DefaultPlugin';\nimport ItemHeader from '../ItemHeader';\nimport ItemHeaderButtons from './ItemHeaderButtons';\nimport ItemFooter from './ItemFooter';\nimport * as pluginManager from './plugin';\nimport { sGetVisualization } from '../../../reducers/visualizations';\nimport { sGetItemFiltersRoot } from '../../../reducers/itemFilters';\nimport {\n    acAddVisualization,\n    acSetActiveVisualizationType,\n} from '../../../actions/visualizations';\nimport { VISUALIZATION, MAP, CHART, REPORT_TABLE } from '../../../modules/itemTypes';\n\nimport { colors } from '@dhis2/ui-core';\nimport memoizeOne from '../../../modules/memoizeOne';\nimport { getVisualizationConfig } from './plugin';\n\nconst HEADER_HEIGHT = 45;\n\nconst styles = {\n    icon: {\n        width: 16,\n        height: 16,\n        marginLeft: 3,\n        cursor: 'pointer',\n        fill: colors.grey600,\n    },\n    title: {\n        overflow: 'hidden',\n        maxWidth: '85%',\n        textOverflow: 'ellipsis',\n        whiteSpace: 'nowrap',\n    },\n    textDiv: {\n        fontSize: '14px',\n        fontStretch: 'normal',\n        padding: '10px',\n        lineHeight: '20px',\n    },\n};\n\nconst applyFilters = (visualization, filters) => {\n    if (!Object.keys(filters).length) {\n        return visualization;\n    }\n\n    // deep clone objects in filters to avoid changing the visualization in the Redux store\n    const visRows = visualization.rows.map(obj => ({ ...obj }));\n    const visColumns = visualization.columns.map(obj => ({ ...obj }));\n    const visFilters = visualization.filters.map(obj => ({ ...obj }));\n\n    Object.keys(filters).forEach(dimensionId => {\n        if (filters[dimensionId]) {\n            let dimensionFound = false;\n\n            [visRows, visColumns, visFilters].forEach(dimensionObjects =>\n                dimensionObjects\n                    .filter(obj => obj.dimension === dimensionId)\n                    .forEach(obj => {\n                        dimensionFound = true;\n                        obj.items = filters[dimensionId];\n                    })\n            );\n\n            // add dimension to filters if not already present elsewhere\n            if (!dimensionFound) {\n                visFilters.push({\n                    dimension: dimensionId,\n                    items: filters[dimensionId],\n                });\n            }\n        }\n    });\n\n    return {\n        ...visualization,\n        rows: visRows,\n        columns: visColumns,\n        filters: visFilters,\n    };\n};\n\nexport class Item extends Component {\n    state = {\n        showFooter: false,\n        configLoaded: false,\n    };\n\n    constructor(props, context) {\n        super(props);\n\n        this.d2 = context.d2;\n\n        this.contentRef = React.createRef();\n    }\n\n    async componentDidMount() {\n        this.props.onVisualizationLoaded(\n            // TODO do not call fetch on the pluginManager, do it here as the manager will eventually be removed...\n            await pluginManager.fetch(this.props.item)\n        );\n\n        this.setState({\n            configLoaded: true,\n        });\n    }\n\n    getUniqueKey = memoizeOne(() => uniqueId());\n\n    pluginCredentials = null;\n\n    getPluginComponent = () => {\n        const activeType = this.getActiveType();\n        const visualization = getVisualizationConfig(\n            this.props.visualization,\n            this.props.item.type,\n            activeType\n        );\n\n        if (!visualization) {\n            return (\n                <div className={this.props.classes.textDiv}>\n                    {i18n.t('No data to display')}\n                </div>\n            );\n        }\n\n        const props = {\n            ...this.props,\n            visualization,\n            style: this.getContentStyle(),\n        };\n\n        switch (activeType) {\n            case VISUALIZATION:\n            case CHART:\n            case REPORT_TABLE: {\n                return (\n                    <VisualizationPlugin\n                        d2={this.d2}\n                        visualization={applyFilters(\n                            visualization,\n                            props.itemFilters\n                        )}\n                        forDashboard={true}\n                        style={props.style}\n                    />\n                );\n            }\n            case MAP: {\n                if (props.item.type === MAP) {\n                    // apply filters only to thematic and event layers\n                    // for maps AO\n                    const mapViews = props.visualization.mapViews.map(obj => {\n                        if (\n                            obj.layer.includes('thematic') ||\n                            obj.layer.includes('event')\n                        ) {\n                            return applyFilters(obj, props.itemFilters);\n                        }\n\n                        return obj;\n                    });\n\n                    props.visualization = {\n                        ...props.visualization,\n                        mapViews,\n                    };\n                } else {\n                    // this is the case of a non map AO passed to the maps plugin\n                    // due to a visualization type switch in dashboard item\n                    // maps plugin takes care of converting the AO to a suitable format\n                    props.visualization = applyFilters(\n                        props.visualization,\n                        props.itemFilters\n                    );\n                }\n\n                return <DefaultPlugin {...props} />;\n            }\n            default: {\n                props.visualization = applyFilters(\n                    props.visualization,\n                    props.itemFilters\n                );\n\n                return <DefaultPlugin {...props} />;\n            }\n        }\n    };\n\n    onToggleFooter = () => {\n        this.setState(\n            { showFooter: !this.state.showFooter },\n            this.props.onToggleItemExpanded(this.props.item.id)\n        );\n    };\n\n    onSelectActiveType = type => {\n        if (type === this.getActiveType()) {\n            return;\n        }\n\n        pluginManager.unmount(this.props.item, this.getActiveType());\n\n        this.props.onSelectActiveType(this.props.visualization.id, type);\n    };\n\n    getActiveType = () =>\n        this.props.visualization.activeType || this.props.item.type;\n\n    pluginIsAvailable = () =>\n        pluginManager.pluginIsAvailable(\n            this.props.item,\n            this.props.visualization\n        );\n\n    getContentStyle = () => {\n        const { item, editMode } = this.props;\n        const PADDING_BOTTOM = 4;\n\n        return !editMode\n            ? {\n                  height: item.originalHeight - HEADER_HEIGHT - PADDING_BOTTOM,\n              }\n            : { height: this.contentRef.offsetHeight };\n    };\n\n    render() {\n        const { item, editMode, itemFilters } = this.props;\n        const { showFooter } = this.state;\n\n        const actionButtons = (\n            <ItemHeaderButtons\n                item={item}\n                visualization={this.props.visualization}\n                onSelectActiveType={this.onSelectActiveType}\n                onToggleFooter={this.onToggleFooter}\n                d2={this.d2}\n                activeType={this.getActiveType()}\n                activeFooter={this.state.showFooter}\n            />\n        );\n\n        return (\n            <>\n                <ItemHeader\n                    title={pluginManager.getName(item)}\n                    itemId={item.id}\n                    actionButtons={actionButtons}\n                />\n                <div\n                    key={this.getUniqueKey(itemFilters)}\n                    className=\"dashboard-item-content\"\n                    ref={ref => (this.contentRef = ref)}\n                >\n                    {this.state.configLoaded && this.getPluginComponent()}\n                </div>\n                {!editMode && showFooter ? <ItemFooter item={item} /> : null}\n            </>\n        );\n    }\n}\n\nItem.contextTypes = {\n    d2: PropTypes.object,\n};\n\nItem.propTypes = {\n    classes: PropTypes.object,\n    editMode: PropTypes.bool,\n    item: PropTypes.object,\n    itemFilters: PropTypes.object,\n    visualization: PropTypes.object,\n    onSelectActiveType: PropTypes.func,\n    onToggleItemExpanded: PropTypes.func,\n    onVisualizationLoaded: PropTypes.func,\n};\n\nItem.defaultProps = {\n    item: {},\n    editMode: false,\n    onToggleItemExpanded: Function.prototype,\n    itemFilters: {},\n    visualization: {},\n};\n\nconst mapStateToProps = (state, ownProps) => ({\n    itemFilters: sGetItemFiltersRoot(state),\n    visualization: sGetVisualization(\n        state,\n        pluginManager.extractFavorite(ownProps.item).id\n    ),\n});\n\nconst mapDispatchToProps = dispatch => ({\n    onVisualizationLoaded: visualization =>\n        dispatch(acAddVisualization(visualization)),\n    onSelectActiveType: (id, type, activeType) =>\n        dispatch(acSetActiveVisualizationType(id, type, activeType)),\n});\n\nexport default connect(\n    mapStateToProps,\n    mapDispatchToProps\n)(withStyles(styles)(Item));\n","import React from 'react';\nimport { colors } from '@dhis2/ui-core';\n\nconst style = {\n    backgroundColor: colors.grey200,\n    border: 'none',\n    height: '1px',\n    margin: '0px 0px 5px 0px',\n};\n\nconst Line = () => <hr style={style} />;\n\nexport default Line;\n","import React, { Component, Fragment } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport i18n from '@dhis2/d2-i18n';\n\nimport { sGetMessagesRoot } from '../../../reducers/messages';\nimport { formatDate } from '../../../modules/util';\nimport { colors } from '@dhis2/ui-core';\nimport ItemHeader from '../ItemHeader';\nimport Line from '../../../widgets/Line';\n\nimport './MessagesItem.css';\n\nconst PRIVATE = 'PRIVATE';\n\nconst messageTypes = {\n    [PRIVATE]: 'Private',\n    VALIDATION_RESULT: 'Validation',\n    TICKET: 'Ticket',\n    SYSTEM: 'System',\n};\n\nconst style = {\n    list: {\n        listStyleType: 'none',\n        paddingLeft: '0px',\n    },\n    seeAll: {\n        textAlign: 'center',\n        fontSize: '13px',\n        marginBottom: '5px',\n    },\n    sender: {\n        fontSize: '13px',\n        lineHeight: '15px',\n        margin: 0,\n        color: colors.grey800,\n    },\n    snippet: {\n        color: colors.grey800,\n        fontSize: '13px',\n        lineHeight: '15px',\n        maxHeight: '30px',\n        overflow: 'hidden',\n    },\n};\n\nclass MessagesItem extends Component {\n    state = {\n        uiLocale: '',\n    };\n\n    async componentDidMount() {\n        const uiLocale = await this.context.d2.currentUser.userSettings.get(\n            'keyUiLocale'\n        );\n\n        this.setState({ uiLocale });\n    }\n\n    getMessageHref = msg => {\n        const msgIdentifier = msg ? `#/${msg.messageType}/${msg.id}` : '';\n        return `${this.context.baseUrl}/dhis-web-messaging/${msgIdentifier}`;\n    };\n\n    getMessageSender = msg => {\n        const latestMsg = msg.messages.slice(-1)[0];\n        return latestMsg.sender ? latestMsg.sender.displayName : '';\n    };\n\n    getMessageItems = () => {\n        const editClass = !this.props.editMode ? 'view' : null;\n\n        return this.props.messages.map(msg => {\n            const redirectToMsg = () => {\n                if (!this.props.editMode) {\n                    document.location.href = this.getMessageHref(msg);\n                }\n            };\n\n            const sender =\n                msg.messageType === PRIVATE\n                    ? this.getMessageSender(msg)\n                    : messageTypes[msg.messageType];\n\n            const readClass = !msg.read ? 'unread' : null;\n            const latestMsg = msg.messages.slice(-1)[0];\n            const msgDate = latestMsg.lastUpdated;\n\n            return (\n                <li\n                    className={`message-item ${editClass}`}\n                    key={msg.id}\n                    onClick={redirectToMsg}\n                >\n                    <p className={`message-title ${readClass}`}>\n                        {msg.displayName} ({msg.messageCount})\n                    </p>\n                    <p style={style.sender}>\n                        {sender} - {formatDate(msgDate, this.state.uiLocale)}\n                    </p>\n                    <p style={style.snippet}>{latestMsg.text}</p>\n                </li>\n            );\n        });\n    };\n\n    render() {\n        return (\n            <Fragment>\n                <ItemHeader\n                    title={i18n.t('Messages')}\n                    itemId={this.props.item.id}\n                />\n                <Line />\n                {this.props.messages.length > 0 && (\n                    <div className=\"dashboard-item-content\">\n                        <ul style={style.list}>{this.getMessageItems()}</ul>\n                        <div style={style.seeAll}>\n                            <a href={this.getMessageHref()}>\n                                {i18n.t('See all messages')}\n                            </a>\n                        </div>\n                    </div>\n                )}\n            </Fragment>\n        );\n    }\n}\n\nMessagesItem.propTypes = {\n    editMode: PropTypes.bool,\n    item: PropTypes.object,\n    messages: PropTypes.array,\n};\n\nMessagesItem.contextTypes = {\n    d2: PropTypes.object,\n    baseUrl: PropTypes.string,\n};\n\nconst mapStateToProps = state => {\n    return {\n        messages: Object.values(sGetMessagesRoot(state)),\n    };\n};\n\nconst MessagesContainer = connect(\n    mapStateToProps,\n    null\n)(MessagesItem);\n\nexport default MessagesContainer;\n","import React, { Fragment } from 'react';\nimport PropTypes from 'prop-types';\nimport i18n from '@dhis2/d2-i18n';\nimport ItemHeader from '../ItemHeader';\nimport NotInterestedIcon from '@material-ui/icons/NotInterested';\n\nconst NotSupportedItem = props => (\n    <Fragment>\n        <ItemHeader\n            title={i18n.t('Item type \"{{type}}\" not supported', {\n                type: props.item.type,\n            })}\n            itemId={props.item.id}\n        />\n        <div\n            style={{\n                display: 'flex',\n                justifyContent: 'center',\n                alignItems: 'center',\n                height: '90%',\n            }}\n        >\n            <NotInterestedIcon\n                style={{ width: 100, height: 100, align: 'center' }}\n                color=\"disabled\"\n            />\n        </div>\n    </Fragment>\n);\n\nNotSupportedItem.propTypes = {\n    item: PropTypes.object,\n};\n\nexport default NotSupportedItem;\n","import React from 'react';\nimport { colors } from '@dhis2/ui-core';\nimport PropTypes from 'prop-types';\n\nconst DescriptionIcon = ({ className }) => (\n    <svg\n        className={className}\n        xmlns=\"http://www.w3.org/2000/svg\"\n        viewBox=\"0 0 24 24\"\n        fill={colors.grey500}\n    >\n        <path d=\"M0 0h24v24H0z\" fill=\"none\" />\n        <path d=\"M14 2H6c-1.1 0-1.99.9-1.99 2L4 20c0 1.1.89 2 1.99 2H18c1.1 0 2-.9 2-2V8l-6-6zm2 16H8v-2h8v2zm0-4H8v-2h8v2zm-3-5V3.5L18.5 9H13z\" />\n    </svg>\n);\n\nDescriptionIcon.propTypes = {\n    className: PropTypes.string,\n};\n\nexport default DescriptionIcon;\n","import React from 'react';\nimport { colors } from '@dhis2/ui-core';\nimport PropTypes from 'prop-types';\n\nconst DeleteIcon = ({ className }) => (\n    <svg\n        className={className}\n        xmlns=\"http://www.w3.org/2000/svg\"\n        width=\"18\"\n        height=\"18\"\n        viewBox=\"0 0 24 24\"\n        fill={colors.red500}\n    >\n        <path d=\"M6 19c0 1.1.9 2 2 2h8c1.1 0 2-.9 2-2V7H6v12zM19 4h-3.5l-1-1h-5l-1 1H5v2h14V4z\" />\n        <path d=\"M0 0h24v24H0z\" fill=\"none\" />\n    </svg>\n);\n\nDeleteIcon.propTypes = {\n    className: PropTypes.string,\n};\n\nexport default DeleteIcon;\n","import React, { Fragment } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { colors } from '@dhis2/ui-core';\nimport DescriptionIcon from '../../../icons/Description';\n\nimport DeleteIcon from '../../../icons/Delete';\nimport Line from '../../../widgets/Line';\nimport { itemTypeMap, getItemUrl } from '../../../modules/itemTypes';\nimport { orArray } from '../../../modules/util';\nimport { tRemoveListItemContent } from './actions';\nimport ItemHeader from '../ItemHeader';\nimport classes from './Item.module.css';\n\nconst getItemTitle = item => itemTypeMap[item.type].pluralTitle;\n\nconst getContentItems = item =>\n    orArray(item[itemTypeMap[item.type].propName]).filter(\n        (item, index, array) =>\n            array.findIndex(el => el.id === item.id) === index\n    );\n\nconst ListItem = (props, context) => {\n    const { item, editMode, tRemoveListItemContent } = props;\n    const contentItems = getContentItems(item);\n\n    const getLink = contentItem => {\n        const deleteButton = (\n            <button\n                className={classes.deletebutton}\n                onClick={() => tRemoveListItemContent(item, contentItem)}\n            >\n                <DeleteIcon className={classes.deleteicon} />\n            </button>\n        );\n\n        return (\n            <Fragment>\n                <a\n                    className={classes.link}\n                    style={{ color: colors.grey900 }}\n                    href={getItemUrl(item.type, contentItem, context.d2)}\n                >\n                    {contentItem.name}\n                </a>\n                {editMode ? deleteButton : null}\n            </Fragment>\n        );\n    };\n\n    return (\n        <Fragment>\n            <ItemHeader title={getItemTitle(item)} itemId={item.id} />\n            <Line />\n            <div className=\"dashboard-item-content\">\n                <ul className={classes.list}>\n                    {contentItems.map(contentItem => (\n                        <li className={classes.item} key={contentItem.id}>\n                            <DescriptionIcon className={classes.itemicon} />\n                            {getLink(contentItem)}\n                        </li>\n                    ))}\n                </ul>\n            </div>\n        </Fragment>\n    );\n};\n\nListItem.propTypes = {\n    editMode: PropTypes.bool,\n    item: PropTypes.object,\n    tRemoveListItemContent: PropTypes.func,\n};\n\nListItem.contextTypes = {\n    d2: PropTypes.object,\n};\n\nexport default connect(\n    null,\n    {\n        tRemoveListItemContent,\n    }\n)(ListItem);\n","import {\n    acUpdateDashboardItem,\n    acRemoveDashboardItem,\n} from '../../../actions/editDashboard';\nimport { itemTypeMap } from '../../../modules/itemTypes';\n\nexport const tRemoveListItemContent = (dashboardItem, content) => dispatch => {\n    const listItemType = itemTypeMap[dashboardItem.type].propName;\n\n    const newContent = dashboardItem[listItemType].filter(\n        item => item.id !== content.id\n    );\n\n    if (newContent.length) {\n        dashboardItem[listItemType] = newContent;\n        dispatch(acUpdateDashboardItem(dashboardItem));\n    } else {\n        dispatch(acRemoveDashboardItem(dashboardItem));\n    }\n};\n","import React, { Fragment } from 'react';\nimport { connect } from 'react-redux';\nimport i18n from '@dhis2/d2-i18n';\nimport PropTypes from 'prop-types';\n\nimport Input from '@material-ui/core/Input';\nimport {\n    Parser as RichTextParser,\n    Editor as RichTextEditor,\n} from '@dhis2/d2-ui-rich-text';\n\nimport { acUpdateDashboardItem } from '../../../actions/editDashboard';\nimport { sGetEditDashboardItems } from '../../../reducers/editDashboard';\nimport { sGetDashboardItems } from '../../../reducers/dashboards';\nimport ItemHeader from '../ItemHeader';\nimport Line from '../../../widgets/Line';\n\nconst style = {\n    textDiv: {\n        padding: '10px',\n        whiteSpace: 'pre-line',\n        lineHeight: '20px',\n    },\n    textField: {\n        fontSize: '14px',\n        fontStretch: 'normal',\n        width: '90%',\n        margin: '0 auto',\n        display: 'block',\n        lineHeight: '24px',\n    },\n    container: {\n        marginBottom: '20px',\n        marginTop: '20px',\n    },\n};\n\nconst TextItem = props => {\n    const { item, editMode, text, acUpdateDashboardItem } = props;\n\n    const onChangeText = event => {\n        const updatedItem = {\n            ...item,\n            text: event.target.value,\n        };\n\n        acUpdateDashboardItem(updatedItem);\n    };\n\n    const viewItem = () => {\n        const textDivStyle = Object.assign({}, style.textField, style.textDiv);\n        return (\n            <div className=\"dashboard-item-content\" style={style.container}>\n                <RichTextParser style={textDivStyle}>{text}</RichTextParser>\n            </div>\n        );\n    };\n\n    const editItem = () => {\n        return (\n            <Fragment>\n                <ItemHeader title={i18n.t('Text item')} itemId={item.id} />\n                <Line />\n                <div className=\"dashboard-item-content\">\n                    <RichTextEditor onEdit={onChangeText}>\n                        <Input\n                            value={text}\n                            multiline\n                            fullWidth\n                            style={style.textField}\n                            placeholder={i18n.t('Add text here')}\n                            onChange={onChangeText}\n                        />\n                    </RichTextEditor>\n                </div>\n            </Fragment>\n        );\n    };\n\n    return <Fragment>{editMode ? editItem() : viewItem()}</Fragment>;\n};\n\nconst mapStateToProps = (state, ownProps) => {\n    const items = ownProps.editMode\n        ? sGetEditDashboardItems(state)\n        : sGetDashboardItems(state);\n\n    const item = items.find(item => item.id === ownProps.item.id);\n\n    return {\n        text: item ? item.text : '',\n    };\n};\n\nTextItem.propTypes = {\n    acUpdateDashboardItem: PropTypes.func,\n    editMode: PropTypes.bool,\n    item: PropTypes.object,\n    text: PropTypes.string,\n};\n\nexport default connect(\n    mapStateToProps,\n    {\n        acUpdateDashboardItem,\n    }\n)(TextItem);\n","import React, { Fragment } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport NotInterestedIcon from '@material-ui/icons/NotInterested';\n\nimport { FILTER_ORG_UNIT } from '../../../actions/itemFilters';\nimport { sGetItemFiltersRoot } from '../../../reducers/itemFilters';\nimport ItemHeader from '../ItemHeader';\nimport Line from '../../../widgets/Line';\n\nconst getIframeSrc = (appDetails, item, itemFilters) => {\n    let iframeSrc = `${appDetails.launchUrl}?dashboardItemId=${item.id}`;\n\n    if (\n        itemFilters &&\n        itemFilters[FILTER_ORG_UNIT] &&\n        itemFilters[FILTER_ORG_UNIT].length\n    ) {\n        const ouIds = itemFilters[FILTER_ORG_UNIT].map(\n            ouPath => ouPath.split('/').slice(-1)[0]\n        );\n\n        iframeSrc += `&userOrgUnit=${ouIds.join(',')}`;\n    }\n\n    return iframeSrc;\n};\n\nconst AppItem = ({ item, itemFilters }, context) => {\n    let appDetails;\n\n    const appKey = item.appKey;\n\n    if (appKey) {\n        appDetails = context.d2.system.installedApps.find(\n            app => app.key === appKey\n        );\n    }\n\n    return appDetails && appDetails.name && appDetails.launchUrl ? (\n        <Fragment>\n            <ItemHeader title={appDetails.name} itemId={item.id} />\n            <Line />\n            <iframe\n                title={appDetails.name}\n                src={getIframeSrc(appDetails, item, itemFilters)}\n                className=\"dashboard-item-content\"\n                style={{ border: 'none' }}\n            />\n        </Fragment>\n    ) : (\n        <Fragment>\n            <ItemHeader title={`${appKey} app not found`} />\n            <Line />\n            <div\n                className=\"dashboard-item-content\"\n                style={{\n                    display: 'flex',\n                    justifyContent: 'center',\n                    alignItems: 'center',\n                    height: '90%',\n                }}\n            >\n                <NotInterestedIcon\n                    color=\"disabled\"\n                    disabled\n                    style={{ width: 100, height: 100, align: 'center' }}\n                />\n            </div>\n        </Fragment>\n    );\n};\n\nAppItem.propTypes = {\n    item: PropTypes.object,\n    itemFilters: PropTypes.object,\n};\n\nAppItem.contextTypes = {\n    d2: PropTypes.object,\n};\n\nconst mapStateToProps = state => ({\n    itemFilters: sGetItemFiltersRoot(state),\n});\n\nexport default connect(mapStateToProps)(AppItem);\n","import React, { Fragment } from 'react';\nimport PropTypes from 'prop-types';\nimport i18n from '@dhis2/d2-i18n';\n\nimport { colors } from '@dhis2/ui-core';\nimport ItemHeader from '../ItemHeader';\n\nconst style = {\n    margin: '21px 28px',\n    fontSize: '14px',\n    lineHeight: '18px',\n    color: colors.grey600,\n};\n\nconst SpacerItem = props => {\n    return (\n        <Fragment>\n            <ItemHeader title={i18n.t('Spacer')} itemId={props.item.id} />\n            <p style={style}>\n                {i18n.t(\n                    'Use a spacer to create empty vertical space between other dashboard items.'\n                )}\n            </p>\n        </Fragment>\n    );\n};\n\nSpacerItem.propTypes = {\n    item: PropTypes.object,\n};\n\nexport default SpacerItem;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport VisualizationItem from './VisualizationItem/Item';\nimport MessagesItem from './MessagesItem/Item';\nimport NotSupportedItem from './NotSupportedItem/Item';\nimport ListItem from './ListItem/Item';\nimport TextItem from './TextItem/Item';\nimport AppItem from './AppItem/Item';\nimport SpacerItem from './SpacerItem/Item';\nimport {\n    APP,\n    VISUALIZATION,\n    REPORT_TABLE,\n    CHART,\n    MAP,\n    EVENT_CHART,\n    EVENT_REPORT,\n    MESSAGES,\n    REPORTS,\n    RESOURCES,\n    USERS,\n    TEXT,\n    SPACER,\n} from '../../modules/itemTypes';\nimport { DEFAULT_STATE_ITEM_FILTERS } from '../../reducers/itemFilters';\n\nconst getGridItem = type => {\n    switch (type) {\n        case VISUALIZATION:\n        case REPORT_TABLE:\n        case CHART:\n        case MAP:\n        case EVENT_CHART:\n        case EVENT_REPORT:\n            return VisualizationItem;\n        case MESSAGES:\n            return MessagesItem;\n        case REPORTS:\n        case RESOURCES:\n        case USERS:\n            return ListItem;\n        case TEXT:\n            return TextItem;\n        case SPACER:\n            return SpacerItem;\n        case APP:\n            return AppItem;\n        default:\n            return NotSupportedItem;\n    }\n};\n\nexport const Item = props => {\n    const GridItem = getGridItem(props.item.type);\n\n    return (\n        <GridItem\n            item={props.item}\n            editMode={props.editMode}\n            itemFilters={\n                props.editMode ? DEFAULT_STATE_ITEM_FILTERS : props.itemFilters\n            }\n            onToggleItemExpanded={props.onToggleItemExpanded}\n        />\n    );\n};\n\nItem.propTypes = {\n    editMode: PropTypes.bool,\n    item: PropTypes.object,\n    itemFilters: PropTypes.object,\n    onToggleItemExpanded: PropTypes.func,\n};\n","import React from 'react';\nimport { colors } from '@dhis2/ui-core';\nimport PropTypes from 'prop-types';\n\nexport const NoContentMessage = ({ text }) => (\n    <div\n        style={{\n            padding: '50px 10px',\n            textAlign: 'center',\n            fontSize: '15px',\n            fontWeight: 500,\n            color: colors.grey600,\n        }}\n    >\n        {text}\n    </div>\n);\n\nNoContentMessage.propTypes = {\n    text: PropTypes.string,\n};\n\nexport default NoContentMessage;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport debounce from 'lodash/debounce';\nimport pick from 'lodash/pick';\n\nconst defaultDebounceMs = 100;\nconst defaultBufferFactor = 0.25;\n\nclass ProgressiveLoadingContainer extends Component {\n    static propTypes = {\n        children: PropTypes.node.isRequired,\n        bufferFactor: PropTypes.number,\n        className: PropTypes.string,\n        debounceMs: PropTypes.number,\n        style: PropTypes.object,\n    };\n    static defaultProps = {\n        debounceMs: defaultDebounceMs,\n        bufferFactor: defaultBufferFactor,\n    };\n\n    state = {\n        shouldLoad: false,\n    };\n    containerRef = null;\n    shouldLoadHandler = null;\n\n    checkShouldLoad() {\n        const bufferPx = this.props.bufferFactor * window.innerHeight;\n\n        if (!this.containerRef) {\n            return;\n        }\n\n        const rect = this.containerRef.getBoundingClientRect();\n        if (\n            rect.bottom > -bufferPx &&\n            rect.top < window.innerHeight + bufferPx\n        ) {\n            this.setState({\n                shouldLoad: true,\n            });\n\n            this.removeHandler();\n        }\n    }\n\n    registerHandler() {\n        this.shouldLoadHandler = debounce(\n            () => this.checkShouldLoad(),\n            this.props.debounceMs\n        );\n\n        window.addEventListener('scroll', this.shouldLoadHandler);\n    }\n    removeHandler() {\n        window.removeEventListener('scroll', this.shouldLoadHandler);\n    }\n\n    componentDidMount() {\n        this.registerHandler();\n        this.checkShouldLoad();\n    }\n\n    componentWillUnmount() {\n        this.removeHandler();\n    }\n\n    render() {\n        const { children, className, style, ...props } = this.props;\n        const { shouldLoad } = this.state;\n\n        const eventProps = pick(props, [\n            'onMouseDown',\n            'onTouchStart',\n            'onMouseUp',\n            'onTouchEnd',\n        ]);\n\n        return (\n            <div\n                ref={ref => (this.containerRef = ref)}\n                style={style}\n                className={className}\n                {...eventProps}\n            >\n                {shouldLoad && children}\n            </div>\n        );\n    }\n}\n\nexport default ProgressiveLoadingContainer;\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport i18n from '@dhis2/d2-i18n';\nimport ReactGridLayout from 'react-grid-layout';\nimport { CircularLoader, ScreenCover } from '@dhis2/ui-core';\n\nimport {\n    acUpdateDashboardLayout,\n    acRemoveDashboardItem,\n} from '../../actions/editDashboard';\nimport { Item } from '../Item/Item';\nimport { resize as pluginResize } from '../Item/VisualizationItem/plugin';\nimport { isVisualizationType } from '../../modules/itemTypes';\nimport {\n    GRID_ROW_HEIGHT,\n    GRID_COMPACT_TYPE,\n    ITEM_MIN_HEIGHT,\n    MARGIN,\n    getGridColumns,\n    hasShape,\n    onItemResize,\n} from './gridUtil';\nimport { orArray } from '../../modules/util';\n\nimport NoContentMessage from '../../widgets/NoContentMessage';\n\nimport 'react-grid-layout/css/styles.css';\nimport 'react-resizable/css/styles.css';\n\nimport './ItemGrid.css';\nimport { sGetSelectedId, sGetSelectedIsLoading } from '../../reducers/selected';\nimport {\n    sGetEditDashboardRoot,\n    sGetEditDashboardItems,\n} from '../../reducers/editDashboard';\nimport {\n    sGetDashboardById,\n    sGetDashboardItems,\n} from '../../reducers/dashboards';\nimport ProgressiveLoadingContainer from '../Item/ProgressiveLoadingContainer';\n\n// Component\n\nconst EXPANDED_HEIGHT = 17;\n\nexport class ItemGrid extends Component {\n    state = {\n        expandedItems: {},\n    };\n\n    onToggleItemExpanded = clickedId => {\n        const isExpanded =\n            typeof this.state.expandedItems[clickedId] === 'boolean'\n                ? this.state.expandedItems[clickedId]\n                : false;\n\n        const expandedItems = { ...this.state.expandedItems };\n        expandedItems[clickedId] = !isExpanded;\n        this.setState({ expandedItems });\n    };\n\n    onRemoveItem = clickedId => {\n        this.props.acRemoveDashboardItem(clickedId);\n    };\n\n    componentWillReceiveProps(nextProps) {\n        if (nextProps.edit) {\n            this.setState({ expandedItems: {} });\n        }\n    }\n\n    onLayoutChange = newLayout => {\n        if (this.props.edit) {\n            this.props.acUpdateDashboardLayout(newLayout);\n        }\n    };\n\n    onResizeStop = (layout, oldItem, newItem) => {\n        onItemResize(newItem.i);\n\n        const dashboardItem = this.props.dashboardItems.find(\n            item => item.id === newItem.i\n        );\n\n        // call resize on the item component if it's a plugin type\n        if (dashboardItem && isVisualizationType(dashboardItem)) {\n            pluginResize(dashboardItem);\n        }\n    };\n\n    onRemoveItemWrapper = id => () => this.onRemoveItem(id);\n\n    render() {\n        const { edit, isLoading, dashboardItems } = this.props;\n\n        if (!isLoading && !dashboardItems.length) {\n            return (\n                <NoContentMessage\n                    text={i18n.t('There are no items on this dashboard')}\n                />\n            );\n        }\n\n        const items = dashboardItems.map(item => {\n            const expandedItem = this.state.expandedItems[item.id];\n            const hProp = { h: item.h };\n\n            if (expandedItem && expandedItem === true) {\n                hProp.h = item.h + EXPANDED_HEIGHT;\n            }\n\n            return Object.assign({}, item, hProp, {\n                i: item.id,\n                minH: ITEM_MIN_HEIGHT,\n            });\n        });\n\n        return (\n            <div className=\"grid-wrapper\">\n                {isLoading ? (\n                    <ScreenCover>\n                        <CircularLoader />\n                    </ScreenCover>\n                ) : null}\n                <ReactGridLayout\n                    onLayoutChange={this.onLayoutChange}\n                    onResizeStop={this.onResizeStop}\n                    className=\"layout\"\n                    layout={items}\n                    margin={MARGIN}\n                    cols={getGridColumns()}\n                    rowHeight={GRID_ROW_HEIGHT}\n                    width={window.innerWidth}\n                    compactType={GRID_COMPACT_TYPE}\n                    isDraggable={edit}\n                    isResizable={edit}\n                    draggableCancel=\"input,textarea\"\n                >\n                    {items.map(item => {\n                        const itemClassNames = [\n                            item.type,\n                            edit ? 'edit' : 'view',\n                        ].join(' ');\n\n                        return (\n                            <ProgressiveLoadingContainer\n                                key={item.i}\n                                className={itemClassNames}\n                            >\n                                <Item\n                                    item={item}\n                                    editMode={edit}\n                                    onToggleItemExpanded={\n                                        this.onToggleItemExpanded\n                                    }\n                                />\n                            </ProgressiveLoadingContainer>\n                        );\n                    })}\n                </ReactGridLayout>\n            </div>\n        );\n    }\n}\n\nItemGrid.propTypes = {\n    acRemoveDashboardItem: PropTypes.func,\n    acUpdateDashboardLayout: PropTypes.func,\n    dashboardItems: PropTypes.array,\n    edit: PropTypes.bool,\n    isLoading: PropTypes.bool,\n};\n\nItemGrid.defaultProps = {\n    dashboardItems: [],\n};\n\n// Container\n\nconst mapStateToProps = (state, ownProps) => {\n    const selectedDashboard = ownProps.edit\n        ? sGetEditDashboardRoot(state)\n        : sGetDashboardById(state, sGetSelectedId(state));\n\n    const dashboardItems = ownProps.edit\n        ? sGetEditDashboardItems(state)\n        : sGetDashboardItems(state);\n\n    return {\n        isLoading: sGetSelectedIsLoading(state) || !selectedDashboard,\n        dashboardItems,\n    };\n};\n\nconst mapDispatchToProps = {\n    acUpdateDashboardLayout,\n    acRemoveDashboardItem,\n};\n\nconst mergeProps = (stateProps, dispatchProps, ownProps) => {\n    const validItems = orArray(stateProps.dashboardItems).filter(hasShape);\n\n    return {\n        ...dispatchProps,\n        edit: ownProps.edit,\n        isLoading: stateProps.isLoading,\n        dashboardItems: validItems,\n        onItemResize,\n    };\n};\n\nexport default connect(\n    mapStateToProps,\n    mapDispatchToProps,\n    mergeProps\n)(ItemGrid);\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nimport i18n from '@dhis2/d2-i18n';\n\nimport { colors } from '@dhis2/ui-core';\n\nconst styles = {\n    badgeContainer: {\n        margin: '2px',\n        padding: '0 16px',\n        borderRadius: '4px',\n        color: colors.white,\n        backgroundColor: '#212934',\n        height: 36,\n        display: 'flex',\n        alignItems: 'center',\n    },\n    badge: {\n        fontSize: '13px',\n        cursor: 'pointer',\n        whiteSpace: 'nowrap',\n    },\n    badgeRemove: {\n        fontSize: '12px',\n        textDecoration: 'underline',\n        marginLeft: '24px',\n        cursor: 'pointer',\n    },\n};\n\nclass FilterBadge extends Component {\n    onClick = id => () => this.props.onClick(id);\n    onRemove = id => () => this.props.onRemove(id);\n\n    render() {\n        const { data } = this.props;\n\n        return (\n            <div style={styles.badgeContainer}>\n                <span style={styles.badge} onClick={this.onClick(data.id)}>\n                    {`${data.name}: ${\n                        data.values.length > 1\n                            ? i18n.t('{{count}} selected', {\n                                  count: data.values.length,\n                              })\n                            : data.values[0].name\n                    }`}\n                </span>\n                <span\n                    style={styles.badgeRemove}\n                    onClick={this.onRemove(data.id)}\n                >\n                    {i18n.t('Remove')}\n                </span>\n            </div>\n        );\n    }\n}\n\nFilterBadge.propTypes = {\n    data: PropTypes.object.isRequired,\n    onClick: PropTypes.func.isRequired,\n    onRemove: PropTypes.func.isRequired,\n};\n\nFilterBadge.defaultProps = {\n    onClick: Function.prototype,\n    onRemove: Function.prototype,\n};\n\nexport default FilterBadge;\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { createSelector } from 'reselect';\nimport { withStyles } from '@material-ui/core/styles';\n\nimport { sGetDimensions } from '../../reducers/dimensions';\nimport { sGetItemFiltersRoot } from '../../reducers/itemFilters';\nimport { sGetControlBarUserRows } from '../../reducers/controlBar';\nimport { getTopOffset } from '../ControlBar/controlBarDimensions';\nimport { acRemoveItemFilter } from '../../actions/itemFilters';\nimport { acRemoveEditItemFilter } from '../../actions/editItemFilters';\nimport { acSetActiveModalDimension } from '../../actions/activeModalDimension';\n\nimport FilterBadge from './FilterBadge';\n\nconst styles = {\n    bar: {\n        position: 'sticky',\n        zIndex: 7,\n        padding: '8px 0',\n        display: 'flex',\n        justifyContent: 'center',\n        flexWrap: 'wrap',\n    },\n};\n\nexport class FilterBar extends Component {\n    onBadgeRemove = id => {\n        this.props.removeItemFilter(id);\n        this.props.removeEditItemFilter(id);\n    };\n\n    onBadgeClick = id => {\n        this.props.setActiveModalDimension({\n            id,\n            name: this.props.filters.find(item => item.id === id).name,\n        });\n    };\n\n    render() {\n        const { filters, userRows, classes } = this.props;\n        const top = getTopOffset(userRows) + 10;\n\n        return filters.length ? (\n            <div className={classes.bar} style={{ top }}>\n                {filters.map(filter => (\n                    <FilterBadge\n                        key={filter.id}\n                        data={filter}\n                        onClick={this.onBadgeClick}\n                        onRemove={this.onBadgeRemove}\n                    />\n                ))}\n            </div>\n        ) : null;\n    }\n}\n\nFilterBar.propTypes = {\n    filters: PropTypes.array.isRequired,\n    removeEditItemFilter: PropTypes.func.isRequired,\n    removeItemFilter: PropTypes.func.isRequired,\n    classes: PropTypes.object,\n    setActiveModalDimension: PropTypes.func,\n    userRows: PropTypes.number,\n};\n\nFilterBar.defaultProps = {\n    filters: [],\n    removeItemFIlter: Function.prototype,\n    removeEditItemFilter: Function.prototype,\n};\n\n// simplify the filters structure to:\n// [{ id: 'pe', name: 'Period', values: [{ id: 2019: name: '2019' }, {id: 'LAST_MONTH', name: 'Last month' }]}, ...]\nconst filtersSelector = createSelector(\n    [sGetItemFiltersRoot, sGetDimensions],\n    (filters, dimensions) =>\n        Object.keys(filters).reduce((arr, id) => {\n            arr.push({\n                id: id,\n                name: dimensions.find(dimension => dimension.id === id).name,\n                values: filters[id].map(value => ({\n                    id: value.id,\n                    name: value.displayName || value.name,\n                })),\n            });\n\n            return arr;\n        }, [])\n);\n\nconst mapStateToProps = state => ({\n    filters: filtersSelector(state),\n    userRows: sGetControlBarUserRows(state),\n});\n\nexport default connect(\n    mapStateToProps,\n    {\n        setActiveModalDimension: acSetActiveModalDimension,\n        removeItemFilter: acRemoveItemFilter,\n        removeEditItemFilter: acRemoveEditItemFilter,\n    }\n)(withStyles(styles)(FilterBar));\n","import React, { Fragment } from 'react';\nimport PropTypes from 'prop-types';\nimport TitleBar from '../TitleBar/TitleBar';\nimport ItemGrid from '../ItemGrid/ItemGrid';\nimport FilterBar from '../FilterBar/FilterBar';\n\nexport const DashboardContent = props => (\n    <Fragment>\n        <TitleBar edit={props.editMode} />\n        <FilterBar />\n        <ItemGrid edit={props.editMode} />\n    </Fragment>\n);\n\nDashboardContent.propTypes = {\n    editMode: PropTypes.bool,\n};\n\nexport default DashboardContent;\n","import React, { Fragment } from 'react';\nimport { connect } from 'react-redux';\nimport isEmpty from 'lodash/isEmpty';\nimport i18n from '@dhis2/d2-i18n';\nimport PropTypes from 'prop-types';\n\nimport {\n    sGetAllDashboards,\n    sDashboardsIsFetching,\n} from '../../reducers/dashboards';\nimport { sGetSelectedId } from '../../reducers/selected';\nimport DashboardsBar from '../ControlBar/DashboardsBar';\nimport DashboardVerticalOffset from './DashboardVerticalOffset';\nimport DashboardContent from './DashboardContent';\nimport NoContentMessage from '../../widgets/NoContentMessage';\n\nexport const Content = ({ hasDashboardContent, dashboardsIsEmpty }) => {\n    const msg = dashboardsIsEmpty\n        ? i18n.t(\n              'No dashboards found. Use the + button to create a new dashboard.'\n          )\n        : i18n.t('Requested dashboard not found');\n\n    return hasDashboardContent ? (\n        <DashboardContent editMode={false} />\n    ) : (\n        <NoContentMessage text={msg} />\n    );\n};\n\nContent.propTypes = {\n    dashboardsIsEmpty: PropTypes.bool,\n    hasDashboardContent: PropTypes.bool,\n};\n\nexport const ViewDashboard = ({ id, dashboardsIsEmpty, dashboardsLoaded }) => {\n    const hasDashboardContent = id && !dashboardsIsEmpty;\n    const contentNotReady = !dashboardsLoaded || id === null;\n\n    return (\n        <Fragment>\n            <DashboardsBar />\n            <DashboardVerticalOffset />\n            <div className=\"dashboard-wrapper\">\n                {contentNotReady ? null : (\n                    <Content\n                        hasDashboardContent={hasDashboardContent}\n                        dashboardsIsEmpty={dashboardsIsEmpty}\n                    />\n                )}\n            </div>\n        </Fragment>\n    );\n};\n\nViewDashboard.propTypes = {\n    dashboardsIsEmpty: PropTypes.bool,\n    dashboardsLoaded: PropTypes.bool,\n    id: PropTypes.string,\n};\n\nconst mapStateToProps = state => {\n    const dashboards = sGetAllDashboards(state);\n\n    return {\n        id: sGetSelectedId(state),\n        dashboardsIsEmpty: isEmpty(dashboards),\n        dashboardsLoaded: !sDashboardsIsFetching(state),\n    };\n};\n\nexport default connect(mapStateToProps)(ViewDashboard);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport i18n from '@dhis2/d2-i18n';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport { Button } from '@dhis2/ui-core';\n\nexport const ConfirmDeleteDialog = ({\n    dashboardName,\n    onDeleteConfirmed,\n    onContinueEditing,\n    open,\n}) => {\n    const actions = [\n        <Button key=\"cancel\" secondary onClick={onContinueEditing}>\n            {i18n.t('Cancel')}\n        </Button>,\n        <Button key=\"delete\" destructive onClick={onDeleteConfirmed}>\n            {i18n.t('Delete')}\n        </Button>,\n    ];\n\n    return (\n        <Dialog open={open} onClose={onContinueEditing}>\n            <DialogTitle style={{ fontSize: '1.25rem', fontWeight: '450' }}>\n                {i18n.t('Delete dashboard')}\n            </DialogTitle>\n            <DialogContent>\n                <DialogContentText style={{ fontSize: '0.875rem' }}>\n                    {i18n.t(\n                        'Deleting dashboard \"{{ dashboardName }}\" will remove it for all users. This action cannot be undone. Are you sure you want to permanently delete this dashboard?',\n                        { dashboardName }\n                    )}\n                </DialogContentText>\n            </DialogContent>\n            <DialogActions>{actions}</DialogActions>\n        </Dialog>\n    );\n};\n\nConfirmDeleteDialog.propTypes = {\n    dashboardName: PropTypes.string,\n    open: PropTypes.bool,\n    onContinueEditing: PropTypes.func,\n    onDeleteConfirmed: PropTypes.func,\n};\n\nexport default ConfirmDeleteDialog;\n","import React, { Component, Fragment } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { Redirect } from 'react-router-dom';\nimport i18n from '@dhis2/d2-i18n';\nimport ControlBar from './ControlBar';\nimport TranslationDialog from '@dhis2/d2-ui-translation-dialog';\nimport { Button } from '@dhis2/ui-core';\n\nimport ConfirmDeleteDialog from './ConfirmDeleteDialog';\nimport {\n    tSaveDashboard,\n    acClearEditDashboard,\n} from '../../actions/editDashboard';\nimport {\n    tDeleteDashboard,\n    acSetDashboardDisplayName,\n} from '../../actions/dashboards';\nimport {\n    sGetEditDashboardRoot,\n    sGetIsNewDashboard,\n} from '../../reducers/editDashboard';\nimport {\n    CONTROL_BAR_ROW_HEIGHT,\n    MIN_ROW_COUNT,\n    getControlBarHeight,\n} from './controlBarDimensions';\nimport { apiFetchDashboard } from '../../api/dashboards';\n\nimport classes from './styles/DashboardsBar.module.css';\n\nconst buttonBarStyle = {\n    height: CONTROL_BAR_ROW_HEIGHT,\n    paddingTop: '15px',\n    marginLeft: '15px',\n    marginRight: '15px',\n};\n\nexport class EditBar extends Component {\n    state = {\n        translationDialogIsOpen: false,\n        dashboardModel: undefined,\n        confirmDeleteDialogOpen: false,\n        redirectUrl: undefined,\n    };\n\n    onConfirmDelete = () => {\n        this.setState({ confirmDeleteDialogOpen: true });\n    };\n\n    onSave = () => {\n        this.props.onSave().then(newId => {\n            this.setState({ redirectUrl: `/${newId}` });\n        });\n    };\n\n    onDiscard = () => {\n        this.props.onDiscardChanges();\n        const redirectUrl = this.props.dashboardId\n            ? `/${this.props.dashboardId}`\n            : '/';\n        this.setState({ redirectUrl });\n    };\n\n    onContinueEditing = () => {\n        this.setState({ confirmDeleteDialogOpen: false });\n    };\n\n    onDeleteConfirmed = () => {\n        this.setState({ confirmDeleteDialogOpen: false });\n        this.props.onDelete(this.props.dashboardId).then(() => {\n            this.setState({ redirectUrl: '/' });\n        });\n    };\n\n    onTranslationsSaved = async translations => {\n        if (translations && translations.length) {\n            const dbLocale = await this.context.d2.currentUser.userSettings.get(\n                'keyDbLocale'\n            );\n\n            const translation = translations.find(\n                t => t.locale === dbLocale && t.property === 'NAME'\n            );\n\n            if (translation && translation.value) {\n                this.props.onTranslate(\n                    this.props.dashboardId,\n                    translation.value\n                );\n            }\n        }\n    };\n\n    fetchDashboardModel = () => {\n        if (this.props.dashboardId && !this.state.dashboardModel) {\n            apiFetchDashboard(this.props.dashboardId).then(dashboardModel =>\n                this.setState({ dashboardModel })\n            );\n        }\n    };\n\n    componentDidMount() {\n        this.fetchDashboardModel();\n    }\n\n    componentDidUpdate() {\n        this.fetchDashboardModel();\n    }\n\n    toggleTranslationDialog = () => {\n        this.setState({\n            translationDialogIsOpen: !this.state.translationDialogIsOpen,\n        });\n    };\n\n    confirmDeleteDialog = () =>\n        this.props.deleteAccess && this.props.dashboardId ? (\n            <ConfirmDeleteDialog\n                dashboardName={this.props.dashboardName}\n                onDeleteConfirmed={this.onDeleteConfirmed}\n                onContinueEditing={this.onContinueEditing}\n                open={this.state.confirmDeleteDialogOpen}\n            />\n        ) : null;\n\n    translationDialog = () =>\n        this.state.dashboardModel && this.state.dashboardModel.id ? (\n            <TranslationDialog\n                className=\"translation-dialog\"\n                d2={this.context.d2}\n                open={this.state.translationDialogIsOpen}\n                onRequestClose={this.toggleTranslationDialog}\n                objectToTranslate={this.state.dashboardModel}\n                fieldsToTranslate={['name', 'description']}\n                // TODO handle messages in snackbar\n                onTranslationSaved={this.onTranslationsSaved}\n                onTranslationError={err =>\n                    console.log('translation update error', err)\n                }\n            />\n        ) : null;\n\n    render() {\n        if (this.state.redirectUrl) {\n            return <Redirect to={this.state.redirectUrl} />;\n        }\n\n        const { dashboardId, deleteAccess, updateAccess } = this.props;\n        const controlBarHeight = getControlBarHeight(MIN_ROW_COUNT);\n\n        const discardBtnText = updateAccess\n            ? i18n.t('Exit without saving')\n            : i18n.t('Go to dashboards');\n\n        return (\n            <Fragment>\n                <ControlBar height={controlBarHeight} editMode={true}>\n                    <div style={buttonBarStyle}>\n                        {updateAccess ? (\n                            <div className={classes.leftControls}>\n                                <span style={{ marginRight: '15px' }}>\n                                    <Button primary onClick={this.onSave}>\n                                        {i18n.t('Save changes')}\n                                    </Button>\n                                </span>\n\n                                {dashboardId ? (\n                                    <span style={{ marginRight: '15px' }}>\n                                        <Button\n                                            onClick={\n                                                this.toggleTranslationDialog\n                                            }\n                                        >\n                                            {i18n.t('Translate')}\n                                        </Button>\n                                    </span>\n                                ) : null}\n                                {dashboardId && deleteAccess ? (\n                                    <Button onClick={this.onConfirmDelete}>\n                                        {i18n.t('Delete')}\n                                    </Button>\n                                ) : null}\n                            </div>\n                        ) : null}\n\n                        <div className={classes.rightControls}>\n                            <Button secondary onClick={this.onDiscard}>\n                                {discardBtnText}\n                            </Button>\n                        </div>\n                    </div>\n                </ControlBar>\n                {this.translationDialog()}\n                {this.confirmDeleteDialog()}\n            </Fragment>\n        );\n    }\n}\n\nEditBar.propTypes = {\n    dashboardId: PropTypes.string,\n    dashboardName: PropTypes.string,\n    deleteAccess: PropTypes.bool,\n    updateAccess: PropTypes.bool,\n    onDelete: PropTypes.func,\n    onDiscardChanges: PropTypes.func,\n    onSave: PropTypes.func,\n    onTranslate: PropTypes.func,\n};\n\nEditBar.contextTypes = {\n    d2: PropTypes.object,\n};\n\nconst mapStateToProps = state => {\n    const dashboard = sGetEditDashboardRoot(state);\n\n    let deleteAccess;\n    let updateAccess;\n    if (sGetIsNewDashboard(state)) {\n        deleteAccess = true;\n        updateAccess = true;\n    } else {\n        updateAccess = dashboard.access ? dashboard.access.update : false;\n        deleteAccess = dashboard.access ? dashboard.access.delete : false;\n    }\n\n    return {\n        dashboardId: dashboard.id,\n        dashboardName: dashboard.name,\n        deleteAccess,\n        updateAccess,\n    };\n};\n\nconst mapDispatchToProps = dispatch => ({\n    onSave: () => dispatch(tSaveDashboard()).then(id => id),\n    onDelete: id => dispatch(tDeleteDashboard(id)),\n    onDiscardChanges: () => dispatch(acClearEditDashboard()),\n    onTranslate: (id, value) => dispatch(acSetDashboardDisplayName(id, value)),\n});\n\nexport default connect(\n    mapStateToProps,\n    mapDispatchToProps\n)(EditBar);\n","import React, { Fragment, Component } from 'react';\nimport { connect } from 'react-redux';\nimport i18n from '@dhis2/d2-i18n';\nimport PropTypes from 'prop-types';\n\nimport { acSetEditDashboard } from '../../actions/editDashboard';\nimport { sGetSelectedId } from '../../reducers/selected';\nimport {\n    sGetDashboardById,\n    sGetDashboardItems,\n    sDashboardsIsFetching,\n} from '../../reducers/dashboards';\nimport DashboardVerticalOffset from './DashboardVerticalOffset';\nimport DashboardContent from './DashboardContent';\nimport EditBar from '../ControlBar/EditBar';\nimport NoContentMessage from '../../widgets/NoContentMessage';\n\nexport const Content = ({ updateAccess }) => {\n    return updateAccess ? (\n        <DashboardContent editMode={true} />\n    ) : (\n        <NoContentMessage text={i18n.t('No access')} />\n    );\n};\n\nContent.propTypes = {\n    updateAccess: PropTypes.bool,\n};\nexport class EditDashboard extends Component {\n    state = {\n        initialized: false,\n    };\n\n    initEditDashboard = () => {\n        if (this.props.dashboard) {\n            this.setState({ initialized: true });\n            this.props.setEditDashboard(this.props.dashboard, this.props.items);\n        }\n    };\n\n    componentDidMount() {\n        this.initEditDashboard();\n    }\n\n    componentDidUpdate() {\n        if (!this.state.initialized) {\n            this.initEditDashboard();\n        }\n    }\n\n    getDashboardContent = () => {\n        const contentNotReady =\n            !this.props.dashboardsLoaded || this.props.id === null;\n\n        return (\n            <div className=\"dashboard-wrapper\">\n                {contentNotReady ? null : (\n                    <Content updateAccess={this.props.updateAccess} />\n                )}\n            </div>\n        );\n    };\n\n    render() {\n        return (\n            <Fragment>\n                <EditBar />\n                <DashboardVerticalOffset editMode={true} />\n                {this.getDashboardContent()}\n            </Fragment>\n        );\n    }\n}\n\nEditDashboard.propTypes = {\n    dashboard: PropTypes.object,\n    dashboardsLoaded: PropTypes.bool,\n    id: PropTypes.string,\n    items: PropTypes.array,\n    setEditDashboard: PropTypes.func,\n    updateAccess: PropTypes.bool,\n};\n\nconst mapStateToProps = state => {\n    const id = sGetSelectedId(state);\n    const dashboard = id ? sGetDashboardById(state, id) : null;\n\n    const updateAccess =\n        dashboard && dashboard.access ? dashboard.access.update : false;\n\n    return {\n        dashboard,\n        id,\n        updateAccess,\n        items: sGetDashboardItems(state),\n        dashboardsLoaded: !sDashboardsIsFetching(state),\n    };\n};\n\nexport default connect(\n    mapStateToProps,\n    {\n        setEditDashboard: acSetEditDashboard,\n    }\n)(EditDashboard);\n","import React, { Component, Fragment } from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\n\nimport { acSetEditNewDashboard } from '../../actions/editDashboard';\nimport DashboardVerticalOffset from './DashboardVerticalOffset';\nimport EditBar from '../ControlBar/EditBar';\nimport DashboardContent from './DashboardContent';\n\nclass NewDashboard extends Component {\n    componentDidMount() {\n        this.props.setNewDashboard();\n    }\n\n    render() {\n        return (\n            <Fragment>\n                <EditBar />\n                <DashboardVerticalOffset editMode={true} />\n                <div className=\"dashboard-wrapper\">\n                    <DashboardContent editMode={true} />\n                </div>\n            </Fragment>\n        );\n    }\n}\n\nNewDashboard.propTypes = {\n    setNewDashboard: PropTypes.func,\n};\n\nexport default connect(\n    null,\n    {\n        setNewDashboard: acSetEditNewDashboard,\n    }\n)(NewDashboard);\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\n\nimport { tSelectDashboard } from '../../actions/dashboards';\nimport { sDashboardsIsFetching } from '../../reducers/dashboards';\nimport { EDIT, NEW } from './dashboardModes';\nimport ViewDashboard from './ViewDashboard';\nimport EditDashboard from './EditDashboard';\nimport NewDashboard from './NewDashboard';\n\nclass Dashboard extends Component {\n    setDashboard = () => {\n        if (this.props.dashboardsLoaded) {\n            const id = this.props.match.params.dashboardId || null;\n\n            this.props.selectDashboard(id);\n\n            this.scrollToTop();\n        }\n    };\n\n    scrollToTop = () => {\n        window.scrollTo(0, 0);\n    };\n\n    componentDidMount() {\n        this.setDashboard();\n    }\n\n    componentDidUpdate() {\n        this.setDashboard();\n    }\n\n    render() {\n        switch (this.props.mode) {\n            case EDIT:\n                return <EditDashboard />;\n            case NEW:\n                return <NewDashboard />;\n            default:\n                return <ViewDashboard />;\n        }\n    }\n}\n\nDashboard.propTypes = {\n    dashboardsLoaded: PropTypes.bool,\n    match: PropTypes.object,\n    mode: PropTypes.string,\n    selectDashboard: PropTypes.func,\n};\n\nconst mapStateToProps = state => {\n    return { dashboardsLoaded: !sDashboardsIsFetching(state) };\n};\n\nexport default connect(\n    mapStateToProps,\n    {\n        selectDashboard: tSelectDashboard,\n    }\n)(Dashboard);\n","export const EDIT = 'edit';\nexport const NEW = 'new';\nexport const VIEW = 'view';\n","import React, { Component } from 'react';\nimport { HashRouter as Router, Route, Switch } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport i18n from '@dhis2/d2-i18n';\nimport { HeaderBar } from '@dhis2/ui-widgets';\nimport { CssVariables } from '@dhis2/ui-core';\n\nimport { EDIT, VIEW, NEW } from './Dashboard/dashboardModes';\nimport { acReceivedUser } from '../actions/user';\nimport { tFetchDashboards } from '../actions/dashboards';\nimport { tSetControlBarRows } from '../actions/controlBar';\nimport { tSetDimensions } from '../actions/dimensions';\nimport Dashboard from './Dashboard/Dashboard';\nimport SnackbarMessage from './SnackbarMessage/SnackbarMessage';\n\nimport 'typeface-roboto';\nimport './App.css';\n\nexport class App extends Component {\n    componentDidMount() {\n        this.props.setCurrentUser(this.props.d2.currentUser);\n        this.props.fetchDashboards();\n        this.props.setControlBarRows();\n        this.props.setDimensions(this.props.d2);\n    }\n\n    getChildContext() {\n        return { baseUrl: this.props.baseUrl, i18n, d2: this.props.d2 };\n    }\n\n    render() {\n        return (\n            <>\n                <CssVariables colors spacers />\n                <div className=\"app-wrapper\">\n                    <div className=\"dashboard-header-bar\">\n                        <HeaderBar appName={i18n.t('Dashboard')} />\n                    </div>\n                    <Router>\n                        <Switch>\n                            <Route\n                                exact\n                                path=\"/\"\n                                render={props => (\n                                    <Dashboard {...props} mode={VIEW} />\n                                )}\n                            />\n                            <Route\n                                exact\n                                path=\"/new\"\n                                render={props => (\n                                    <Dashboard {...props} mode={NEW} />\n                                )}\n                            />\n                            <Route\n                                exact\n                                path=\"/:dashboardId\"\n                                render={props => (\n                                    <Dashboard {...props} mode={VIEW} />\n                                )}\n                            />\n                            <Route\n                                exact\n                                path=\"/:dashboardId/edit\"\n                                render={props => (\n                                    <Dashboard {...props} mode={EDIT} />\n                                )}\n                            />\n                        </Switch>\n                    </Router>\n                    <SnackbarMessage />\n                </div>\n            </>\n        );\n    }\n}\n\nApp.propTypes = {\n    fetchDashboards: PropTypes.func.isRequired,\n    setControlBarRows: PropTypes.func.isRequired,\n    setCurrentUser: PropTypes.func.isRequired,\n    setDimensions: PropTypes.func.isRequired,\n    baseUrl: PropTypes.string,\n    d2: PropTypes.object,\n};\n\nApp.childContextTypes = {\n    baseUrl: PropTypes.string,\n    i18n: PropTypes.object,\n    d2: PropTypes.object,\n};\n\nconst mapDispatchToProps = dispatch => {\n    return {\n        setCurrentUser: currentUser => dispatch(acReceivedUser(currentUser)),\n        fetchDashboards: () => dispatch(tFetchDashboards()),\n        setControlBarRows: () => dispatch(tSetControlBarRows()),\n        setDimensions: d2 => dispatch(tSetDimensions(d2)),\n    };\n};\n\nexport default connect(\n    null,\n    mapDispatchToProps\n)(App);\n","import { RECEIVED_USER } from '../reducers/user';\n\nexport const acReceivedUser = value => ({\n    type: RECEIVED_USER,\n    value,\n});\n","//------------------------------------------------------------------------------\n// <auto-generated>\n// This code was generated by d2-i18n-generate.\n//\n// Changes to this file may cause incorrect behavior and will be lost if\n// the code is regenerated.\n// </auto-generated>\n//------------------------------------------------------------------------------\nimport i18n from '@dhis2/d2-i18n';\nimport moment from 'moment';\nimport 'moment/locale/ar';\nimport 'moment/locale/es';\nimport 'moment/locale/fr';\nimport 'moment/locale/lo';\nimport 'moment/locale/pt';\nimport 'moment/locale/ru';\nimport 'moment/locale/sv';\nimport 'moment/locale/tg';\nimport 'moment/locale/uk';\nimport 'moment/locale/ur';\nimport 'moment/locale/vi';\nimport 'moment/locale/zh-cn';\n\nimport arTranslations from './ar/translations.json';\nimport daTranslations from './da/translations.json';\nimport enTranslations from './en/translations.json';\nimport esTranslations from './es/translations.json';\nimport frTranslations from './fr/translations.json';\nimport idTranslations from './id/translations.json';\nimport kmTranslations from './km/translations.json';\nimport loTranslations from './lo/translations.json';\nimport myTranslations from './my/translations.json';\nimport prsTranslations from './prs/translations.json';\nimport psTranslations from './ps/translations.json';\nimport ptTranslations from './pt/translations.json';\nimport pt_BRTranslations from './pt_BR/translations.json';\nimport ruTranslations from './ru/translations.json';\nimport svTranslations from './sv/translations.json';\nimport tetTranslations from './tet/translations.json';\nimport tgTranslations from './tg/translations.json';\nimport ukTranslations from './uk/translations.json';\nimport urTranslations from './ur/translations.json';\nimport viTranslations from './vi/translations.json';\nimport zhTranslations from './zh/translations.json';\nimport zh_CNTranslations from './zh_CN/translations.json';\n\nconst namespace = 'dashboards-app';\nmoment.locale('en');\n\ni18n.addResources('ar', namespace, arTranslations);\ni18n.addResources('da', namespace, daTranslations);\ni18n.addResources('en', namespace, enTranslations);\ni18n.addResources('es', namespace, esTranslations);\ni18n.addResources('fr', namespace, frTranslations);\ni18n.addResources('id', namespace, idTranslations);\ni18n.addResources('km', namespace, kmTranslations);\ni18n.addResources('lo', namespace, loTranslations);\ni18n.addResources('my', namespace, myTranslations);\ni18n.addResources('prs', namespace, prsTranslations);\ni18n.addResources('ps', namespace, psTranslations);\ni18n.addResources('pt', namespace, ptTranslations);\ni18n.addResources('pt_BR', namespace, pt_BRTranslations);\ni18n.addResources('ru', namespace, ruTranslations);\ni18n.addResources('sv', namespace, svTranslations);\ni18n.addResources('tet', namespace, tetTranslations);\ni18n.addResources('tg', namespace, tgTranslations);\ni18n.addResources('uk', namespace, ukTranslations);\ni18n.addResources('ur', namespace, urTranslations);\ni18n.addResources('vi', namespace, viTranslations);\ni18n.addResources('zh', namespace, zhTranslations);\ni18n.addResources('zh_CN', namespace, zh_CNTranslations);\n\ni18n.setDefaultNamespace(namespace);\ni18n.changeLanguage('en');\n\nexport default i18n;\n","/** @module reducers/selected */\nimport { validateReducer } from '../modules/util';\n\nexport const SET_STYLE = 'SET_STYLE';\n\nexport const DEFAULT_STATE_STYLE = 'LIST';\n\n/**\n * Reducer functions that computes and returns the new state based on the given action\n * @function\n * @param {Object} state The current state\n * @param {Object} action The action to be evaluated\n */\nconst style = (state = DEFAULT_STATE_STYLE, action) => {\n    switch (action.type) {\n        case SET_STYLE:\n            return validateReducer(action.value, DEFAULT_STATE_STYLE);\n        default:\n            return state;\n    }\n};\n\nexport default style;\n\n/**\n * Selectors that point to specific props in the state object\n * @function\n * @param {Object} state\n * @returns {Object}\n */\nexport const sGetStyleRoot = state => state.style;\n","import { combineReducers } from 'redux';\nimport arraySort from 'd2-utilizr/lib/arraySort';\n\nimport dashboards, { sGetDashboardsRoot } from './dashboards';\nimport selected from './selected';\nimport dashboardsFilter, {\n    ownerData,\n    sGetFilterName,\n    sGetFilterOrder,\n    sGetFilterOwner,\n} from './dashboardsFilter';\nimport controlBar from './controlBar';\nimport visualizations from './visualizations';\nimport editDashboard from './editDashboard';\nimport messages from './messages';\nimport user from './user';\nimport snackbar from './snackbar';\nimport itemFilters from './itemFilters';\nimport editItemFilters from './editItemFilters';\nimport style from './style';\nimport dimensions from './dimensions';\nimport settings from './settings';\nimport activeModalDimension from './activeModalDimension';\n\nconst USER = 'system';\n\n// Reducers\n\nexport default combineReducers({\n    dashboards,\n    selected,\n    dashboardsFilter,\n    controlBar,\n    visualizations,\n    messages,\n    user,\n    editDashboard,\n    itemFilters,\n    editItemFilters,\n    style,\n    snackbar,\n    dimensions,\n    settings,\n    activeModalDimension,\n});\n\n// Map constants to data\nconst mapConstToData = {\n    NAME: 'name',\n    ITEMS: 'numberOfItems',\n    CREATED: 'created',\n    OWNER: 'owner',\n};\n\n// Selectors\n\n// Filter dashboards by name\nexport const sFilterDashboardsByName = (dashboards, filter) =>\n    dashboards.filter(d =>\n        d.displayName.toLowerCase().includes(filter.toLowerCase())\n    );\n\n// Filter dashboards by owner, TODO FIXME\nexport const sFilterDashboardsByOwner = (dashboards, filter) => {\n    const ME = ownerData[1]; // TODO\n    const OTHERS = ownerData[2]; // TODO\n\n    switch (filter) {\n        case ME:\n            return dashboards.filter(d => d.owner === USER);\n        case OTHERS:\n            return dashboards.filter(d => d.owner !== USER);\n        default:\n            return dashboards;\n    }\n};\n\n// Filter dashboards by order\nexport const sFilterDashboardsByOrder = (dashboards, filter) => {\n    const filterValues = filter.split(':');\n\n    const key = filterValues[0];\n    const direction = filterValues[1];\n\n    return arraySort(dashboards, direction, mapConstToData[key]);\n};\n\n// Selectors dependency level 2\n\n// Get filtered dashboards\nexport const sGetFilteredDashboards = state => {\n    const dashboards = sGetDashboardsRoot(state);\n\n    const nameFilter = sGetFilterName(state);\n    const ownerFilter = sGetFilterOwner(state);\n    const orderFilter = sGetFilterOrder(state);\n\n    return sFilterDashboardsByOrder(\n        sFilterDashboardsByName(\n            sFilterDashboardsByOwner(dashboards, ownerFilter),\n            nameFilter\n        ),\n        orderFilter\n    );\n};\n","import { createStore, applyMiddleware, compose } from 'redux';\nimport { createLogger } from 'redux-logger';\nimport thunk from 'redux-thunk';\nimport reducer from './reducers';\n\nconst configureStore = () => {\n    const middleware = [thunk];\n\n    // Enable Redux devtools if extension is installed instead of redux-logger\n    const composeEnhancers =\n        window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\n    if (\n        !window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ &&\n        process.env.NODE_ENV !== 'production'\n    ) {\n        middleware.push(createLogger());\n    }\n\n    return createStore(\n        reducer,\n        composeEnhancers(applyMiddleware(...middleware))\n    );\n};\n\nexport default configureStore;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport { MuiThemeProvider, createMuiTheme } from '@material-ui/core/styles';\nimport { init as d2Init, config, getManifest, getUserSettings } from 'd2';\nimport dhis2theme from '@dhis2/d2-ui-core/theme/mui3.theme';\n\nimport { Provider as RuntimeProvider } from '@dhis2/app-runtime';\nimport { CssReset } from '@dhis2/ui-core';\n\nimport App from './components/App';\nimport './index.css';\nimport i18n from './locales';\nimport configureStore from './configureStore';\n\nconst muiTheme = () => createMuiTheme(dhis2theme);\n\nconst configI18n = userSettings => {\n    const uiLocale = userSettings.keyUiLocale;\n\n    if (uiLocale && uiLocale !== 'en') {\n        config.i18n.sources.add(`./i18n/i18n_module_${uiLocale}.properties`);\n    }\n\n    config.i18n.sources.add('./i18n/i18n_module_en.properties');\n    i18n.changeLanguage(uiLocale);\n};\n\nconst init = async () => {\n    const manifest = await getManifest('./manifest.webapp');\n\n    // log app info\n    console.info(\n        `Dashboards app, v${manifest.version}, ${\n            manifest.manifest_generated_at\n        }`\n    );\n\n    const isProd = process.env.NODE_ENV === 'production';\n\n    if (\n        !isProd &&\n        (!process.env.REACT_APP_DHIS2_BASE_URL ||\n            !process.env.REACT_APP_DHIS2_AUTHORIZATION)\n    ) {\n        throw new Error(\n            'Missing env variables REACT_APP_DHIS2_BASE_URL and REACT_APP_DHIS2_AUTHORIZATION'\n        );\n    }\n\n    // api config\n    const baseUrl = isProd\n        ? manifest.activities.dhis.href\n        : process.env.REACT_APP_DHIS2_BASE_URL;\n    const authorization = process.env.REACT_APP_DHIS2_AUTHORIZATION;\n\n    config.baseUrl = `${baseUrl}/api/${manifest.dhis2.apiVersion}`;\n    config.headers = isProd ? null : { Authorization: authorization };\n    config.schemas = [\n        'chart',\n        'map',\n        'report',\n        'reportTable',\n        'eventChart',\n        'eventReport',\n        'dashboard',\n        'organisationUnit',\n        'userGroup',\n    ];\n\n    getUserSettings()\n        .then(configI18n)\n        .then(() => d2Init(config))\n        .then(initializedD2 => {\n            ReactDOM.render(\n                <RuntimeProvider\n                    config={{\n                        baseUrl: baseUrl,\n                        apiVersion: manifest.dhis2.apiVersion,\n                    }}\n                >\n                    <CssReset />\n                    <Provider store={configureStore()}>\n                        <MuiThemeProvider theme={muiTheme()}>\n                            <App baseUrl={baseUrl} d2={initializedD2} />\n                        </MuiThemeProvider>\n                    </Provider>\n                </RuntimeProvider>,\n                document.getElementById('root')\n            );\n        });\n};\n\ninit();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"leftControls\":\"DashboardsBar_leftControls__2kr14\",\"rightControls\":\"DashboardsBar_rightControls__2l1lT\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"menuItem\":\"ContentMenuItem_menuItem__2DIcB\",\"launchLink\":\"ContentMenuItem_launchLink__MRANR\",\"label\":\"ContentMenuItem_label__2pIfq\",\"buttonInsert\":\"ContentMenuItem_buttonInsert__1GlZy\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"itemWrap\":\"ItemHeader_itemWrap__3gJiQ\",\"itemHeaderWrap\":\"ItemHeader_itemHeaderWrap__xEKwZ\",\"itemTitle\":\"ItemHeader_itemTitle__3LmXp\",\"itemActionsWrap\":\"ItemHeader_itemActionsWrap__1U5Ex\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"ControlBar_root__3LaTt\",\"content\":\"ControlBar_content__1r98-\",\"draghandle\":\"ControlBar_draghandle__1VWa0\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"ClearButton_button__2yjcV\",\"icon\":\"ClearButton_icon__1fqj8\"};","import isObject from 'lodash/isObject';\nimport { VIS_TYPE_COLUMN, VIS_TYPE_PIVOT_TABLE } from '@dhis2/analytics';\nimport { apiFetchFavorite, getMapFields } from '../../../api/metadata';\nimport {\n    REPORT_TABLE,\n    CHART,\n    MAP,\n    EVENT_REPORT,\n    EVENT_CHART,\n    itemTypeMap,\n} from '../../../modules/itemTypes';\nimport { getBaseUrl, getWithoutId } from '../../../modules/util';\nimport { getGridItemDomId } from '../../ItemGrid/gridUtil';\n\n//external plugins\nconst itemTypeToExternalPlugin = {\n    [MAP]: 'mapPlugin',\n    [EVENT_REPORT]: 'eventReportPlugin',\n    [EVENT_CHART]: 'eventChartPlugin',\n};\nconst hasIntegratedPlugin = type => [CHART, REPORT_TABLE].includes(type);\n\nconst getPlugin = type => {\n    if (hasIntegratedPlugin(type)) {\n        return true;\n    }\n    const pluginName = itemTypeToExternalPlugin[type];\n\n    return global[pluginName];\n};\n\nexport const THEMATIC_LAYER = 'thematic';\n\nexport const pluginIsAvailable = (item = {}, visualization = {}) => {\n    const type = visualization.activeType || item.type;\n\n    return !!getPlugin(type);\n};\n\nexport const extractFavorite = item => {\n    if (!isObject(item)) {\n        return null;\n    }\n\n    const propName = itemTypeMap[item.type].propName;\n\n    return (\n        item[propName] ||\n        (item.reportTable ||\n            item.chart ||\n            item.map ||\n            item.eventReport ||\n            item.eventChart ||\n            {})\n    );\n};\n\nexport const extractMapView = map =>\n    map.mapViews && map.mapViews.find(mv => mv.layer.includes(THEMATIC_LAYER));\n\nexport const loadPlugin = (plugin, config, credentials) => {\n    if (!(plugin && plugin.load)) {\n        return;\n    }\n\n    plugin.url = credentials.baseUrl;\n    plugin.loadingIndicator = true;\n    plugin.dashboard = true;\n    if (credentials.auth) {\n        plugin.auth = credentials.auth;\n    }\n    plugin.load(config);\n};\n\nexport const getId = item => extractFavorite(item).id;\nexport const getName = item => extractFavorite(item).name;\nexport const getDescription = item => extractFavorite(item).description;\nexport const getLink = (item, d2) => {\n    const baseUrl = getBaseUrl(d2);\n    const appUrl = itemTypeMap[item.type].appUrl(getId(item));\n\n    return `${baseUrl}/${appUrl}`;\n};\n\nexport const load = async (\n    item,\n    visualization,\n    { credentials, activeType }\n) => {\n    const config = {\n        ...visualization,\n        el: getGridItemDomId(item.id),\n    };\n\n    const type = activeType || item.type;\n    const plugin = getPlugin(type);\n\n    loadPlugin(plugin, config, credentials);\n};\n\nexport const fetch = async item => {\n    const fetchedFavorite = await apiFetchFavorite(getId(item), item.type, {\n        fields: item.type === MAP ? getMapFields() : null,\n    });\n\n    return fetchedFavorite;\n};\n\nexport const resize = item => {\n    const plugin = getPlugin(item.type);\n\n    if (plugin && plugin.resize) {\n        plugin.resize(getGridItemDomId(item.id));\n    }\n};\n\nexport const unmount = (item, activeType) => {\n    const plugin = getPlugin(activeType);\n\n    if (plugin && plugin.unmount) {\n        plugin.unmount(getGridItemDomId(item.id));\n    }\n};\n\nexport const getVisualizationConfig = (\n    visualization,\n    originalType,\n    activeType\n) => {\n    if (originalType === MAP && originalType !== activeType) {\n        const extractedMapView = extractMapView(visualization);\n\n        if (extractedMapView === undefined) {\n            return null;\n        }\n\n        return getWithoutId({\n            ...visualization,\n            ...extractedMapView,\n            mapViews: undefined,\n            type: activeType === CHART ? VIS_TYPE_COLUMN : VIS_TYPE_PIVOT_TABLE,\n        });\n    } else if (originalType === REPORT_TABLE && activeType === CHART) {\n        return getWithoutId({ ...visualization, type: VIS_TYPE_COLUMN });\n    } else if (originalType === CHART && activeType === REPORT_TABLE) {\n        return getWithoutId({\n            ...visualization,\n            type: VIS_TYPE_PIVOT_TABLE,\n        });\n    }\n\n    return getWithoutId(visualization);\n};\n","import isFunction from 'd2-utilizr/lib/isFunction';\n\nimport { orObject } from '../../modules/util';\n\n// Dimensions for the react-grid-layout\n\nexport const GRID_COMPACT_TYPE = 'vertical'; // vertical | horizonal | null\nexport const GRID_ROW_HEIGHT = 10;\nconst GRID_COLUMN_WIDTH_PX = 20;\nconst GRID_LAYOUT = 'FLEXIBLE'; // FIXED | FLEXIBLE\nexport const MARGIN = [10, 10];\n\nexport const NEW_ITEM_SHAPE = { x: 0, y: 0, w: 20, h: 29 };\nexport const ITEM_MIN_HEIGHT = 4;\n\n// Dimensions for getShape\n\nconst NUMBER_OF_ITEM_COLS = 2;\nconst GRID_COLUMNS = 60;\n\nexport const getGridColumns = () => {\n    switch (GRID_LAYOUT) {\n        case 'FLEXIBLE':\n            return GRID_COLUMNS;\n        case 'FIXED':\n            return Math.floor((window.innerWidth - 20) / GRID_COLUMN_WIDTH_PX);\n        default:\n            return GRID_COLUMNS;\n    }\n};\n\n// isNonNegativeInteger\n\nconst isNonNegativeInteger = x => Number.isInteger(x) && x >= 0;\n\n// Does the item have all the shape properties?\n\nexport const hasShape = item =>\n    isNonNegativeInteger(item.x) &&\n    isNonNegativeInteger(item.y) &&\n    isNonNegativeInteger(item.w) &&\n    isNonNegativeInteger(item.h);\n\n// returns a rectangular grid block dimensioned with x, y, w, h in grid units.\n// based on a grid with 3 items across\nexport const getShape = i => {\n    if (!isNonNegativeInteger(i)) {\n        throw new Error('Invalid grid block number');\n    }\n\n    const col = i % NUMBER_OF_ITEM_COLS;\n    const row = Math.floor(i / NUMBER_OF_ITEM_COLS);\n    const itemWidth = Math.floor((GRID_COLUMNS - 1) / NUMBER_OF_ITEM_COLS);\n    const itemHeight = GRID_ROW_HEIGHT * 2;\n\n    return {\n        x: col * itemWidth,\n        y: row * itemHeight,\n        w: itemWidth,\n        h: itemHeight,\n    };\n};\n\n/**\n * Calculates the grid item's original height in pixels based\n * on the height in grid units. This calculation\n * is copied directly from react-grid-layout GridItem.js (calcPosition)\n *\n * @param {Object} item item containing shape (x, y, w, h)\n */\nconst getOriginalHeight = item => {\n    const originalHeight = Math.round(\n        GRID_ROW_HEIGHT * item.h + Math.max(0, item.h - 1) * MARGIN[1]\n    );\n\n    return { originalHeight };\n};\n\n/**\n * Returns an array of items containing the x, y, w, h dimensions\n * and the item's originalheight in pixels\n * @function\n * @param {Array} items\n * @returns {Array}\n */\n\nexport const withShape = items =>\n    items.map((item, index) => {\n        const itemWithShape = hasShape(item)\n            ? item\n            : Object.assign({}, item, getShape(index));\n\n        return Object.assign(\n            {},\n            itemWithShape,\n            getOriginalHeight(itemWithShape)\n        );\n    });\n\nexport const getGridItemDomId = id => `item-${id}`;\n\nexport function onItemResize(id) {\n    const el = orObject(document.querySelector(`#${getGridItemDomId(id)}`));\n    if (isFunction(el.setViewportSize))\n        setTimeout(\n            () => el.setViewportSize(el.clientWidth - 5, el.clientHeight - 5),\n            10\n        );\n}\n","import i18n from '@dhis2/d2-i18n';\nimport TableIcon from '@material-ui/icons/ViewList';\nimport ChartIcon from '@material-ui/icons/InsertChart';\nimport MapIcon from '@material-ui/icons/Public';\nimport ExtensionIcon from '@material-ui/icons/Extension';\nimport DescriptionIcon from '@material-ui/icons/Description';\nimport PersonIcon from '@material-ui/icons/Person';\nimport FontDownloadIcon from '@material-ui/icons/FontDownload';\nimport EmailIcon from '@material-ui/icons/Email';\nimport CropFreeIcon from '@material-ui/icons/CropFree';\nimport NotInterestedIcon from '@material-ui/icons/NotInterested';\n\nimport { getBaseUrl } from './util';\n\n// Item types\nexport const VISUALIZATION = 'VISUALIZATION';\nexport const REPORT_TABLE = 'REPORT_TABLE';\nexport const CHART = 'CHART';\nexport const MAP = 'MAP';\nexport const EVENT_REPORT = 'EVENT_REPORT';\nexport const EVENT_CHART = 'EVENT_CHART';\nexport const APP = 'APP';\nexport const REPORTS = 'REPORTS';\nexport const RESOURCES = 'RESOURCES';\nexport const USERS = 'USERS';\nexport const MESSAGES = 'MESSAGES';\nexport const TEXT = 'TEXT';\nexport const SPACER = 'SPACER';\n\nconst DOMAIN_TYPE_AGGREGATE = 'AGGREGATE';\nconst DOMAIN_TYPE_TRACKER = 'TRACKER';\n\n// Dashboard helpers\nexport const spacerContent = 'SPACER_ITEM_FOR_DASHBOARD_LAYOUT_CONVENIENCE';\nexport const emptyTextItemContent = 'TEXT_ITEM_WITH_NO_CONTENT';\nexport const isSpacerType = item =>\n    item.type === TEXT && item.text === spacerContent;\nexport const isTextType = item =>\n    item.type === TEXT && item.text !== spacerContent;\nexport const isVisualizationType = item =>\n    !!itemTypeMap[item.type].isVisualizationType;\nexport const hasMapView = itemType =>\n    itemTypeMap[itemType].domainType === DOMAIN_TYPE_AGGREGATE;\nexport const isTrackerDomainType = itemType =>\n    itemTypeMap[itemType].domainType === DOMAIN_TYPE_TRACKER;\nexport const getDefaultItemCount = itemType =>\n    itemTypeMap[itemType].defaultItemCount || 5;\nexport const getAppName = itemType => itemTypeMap[itemType].appName || '';\n\n// Item type map\nexport const itemTypeMap = {\n    [VISUALIZATION]: {\n        id: VISUALIZATION,\n        endPointName: 'visualizations',\n        propName: 'visualization',\n        pluralTitle: i18n.t('Visualizations'),\n        appUrl: id => `dhis-web-data-visualizer/#/${id}`,\n        appName: 'Data Visualizer',\n        defaultItemCount: 10,\n    },\n    [REPORT_TABLE]: {\n        id: REPORT_TABLE,\n        endPointName: 'reportTables',\n        propName: 'reportTable',\n        pluralTitle: i18n.t('Pivot tables'),\n        domainType: DOMAIN_TYPE_AGGREGATE,\n        isVisualizationType: true,\n        appUrl: id => `dhis-web-data-visualizer/#/${id}`,\n        appName: 'Data Visualizer',\n    },\n    [CHART]: {\n        id: CHART,\n        endPointName: 'charts',\n        propName: 'chart',\n        pluralTitle: i18n.t('Charts'),\n        domainType: DOMAIN_TYPE_AGGREGATE,\n        isVisualizationType: true,\n        appUrl: id => `dhis-web-data-visualizer/#/${id}`,\n        appName: 'Data Visualizer',\n    },\n    [MAP]: {\n        id: MAP,\n        endPointName: 'maps',\n        propName: 'map',\n        pluralTitle: i18n.t('Maps'),\n        domainType: DOMAIN_TYPE_AGGREGATE,\n        isVisualizationType: true,\n        appUrl: id => `dhis-web-maps/?id=${id}`,\n        appName: 'Maps',\n    },\n    [EVENT_REPORT]: {\n        id: EVENT_REPORT,\n        endPointName: 'eventReports',\n        propName: 'eventReport',\n        pluralTitle: i18n.t('Event reports'),\n        domainType: DOMAIN_TYPE_TRACKER,\n        isVisualizationType: true,\n        appUrl: id => `dhis-web-event-reports/?id=${id}`,\n        appName: 'Event Reports',\n    },\n    [EVENT_CHART]: {\n        id: EVENT_CHART,\n        endPointName: 'eventCharts',\n        propName: 'eventChart',\n        pluralTitle: i18n.t('Event charts'),\n        domainType: DOMAIN_TYPE_TRACKER,\n        isVisualizationType: true,\n        appUrl: id => `dhis-web-event-visualizer/?id=${id}`,\n        appName: 'Event Visualizer',\n    },\n    [APP]: {\n        endPointName: 'apps',\n        propName: 'appKey',\n        pluralTitle: i18n.t('Apps'),\n    },\n    [REPORTS]: {\n        id: REPORTS,\n        endPointName: 'reports',\n        propName: 'reports',\n        pluralTitle: i18n.t('Reports'),\n        appUrl: id =>\n            `dhis-web-reporting/getReportParams.action?mode=report&uid=${id}`,\n    },\n    [RESOURCES]: {\n        id: RESOURCES,\n        endPointName: 'resources',\n        propName: 'resources',\n        pluralTitle: i18n.t('Resources'),\n        appUrl: id => `api/documents/${id}/data`,\n    },\n    [USERS]: {\n        id: USERS,\n        endPointName: 'users',\n        propName: 'users',\n        pluralTitle: i18n.t('Users'),\n        appUrl: id => `dhis-web-dashboard-integration/profile.action?id=${id}`,\n    },\n    [TEXT]: {\n        id: TEXT,\n        propName: 'text',\n    },\n    [MESSAGES]: {\n        propName: 'messages',\n    },\n    [SPACER]: {\n        propName: 'text',\n    },\n};\n\nexport const getEndPointName = type => itemTypeMap[type].endPointName;\n\nexport const getItemUrl = (type, item, d2) => {\n    let url;\n\n    if (type === APP) {\n        url = item.launchUrl;\n    }\n\n    if (itemTypeMap[type] && itemTypeMap[type].appUrl) {\n        url = `${getBaseUrl(d2)}/${itemTypeMap[type].appUrl(item.id)}`;\n    }\n\n    return url;\n};\n\nexport const getItemIcon = type => {\n    switch (type) {\n        case REPORT_TABLE:\n        case EVENT_REPORT:\n        case REPORTS:\n            return TableIcon;\n        case CHART:\n        case EVENT_CHART:\n            return ChartIcon;\n        case MAP:\n            return MapIcon;\n        case APP:\n            return ExtensionIcon;\n        case RESOURCES:\n            return DescriptionIcon;\n        case USERS:\n            return PersonIcon;\n        case TEXT:\n            return FontDownloadIcon;\n        case MESSAGES:\n            return EmailIcon;\n        case SPACER:\n            return CropFreeIcon;\n        default:\n            return NotInterestedIcon;\n    }\n};\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"showMoreButton\":\"CategorizedMenuGroup_showMoreButton__3-0Wa\"};"],"sourceRoot":""}
{"version":3,"sources":["D2App/components/ControlBar/styles/ControlBar.module.css","D2App/components/ControlBar/styles/DashboardItemChip.module.css","D2App/components/ControlBar/styles/ClearButton.module.css","D2App/components/ControlBar/styles/Filter.module.css","D2App/components/ControlBar/styles/ShowMoreButton.module.css","D2App/components/ControlBar/styles/DashboardsBar.module.css","D2App/components/ItemFilter/styles/FilterSelector.module.css","D2App/components/TitleBar/styles/ViewTitleBar.module.css","D2App/components/Item/VisualizationItem/Visualization/styles/NoVisualizationMessage.module.css","D2App/components/Item/VisualizationItem/Visualization/styles/LoadingMask.module.css","D2App/components/Item/VisualizationItem/styles/FatalErrorBoundary.module.css","D2App/components/Item/ItemHeader/styles/DeleteItemButton.module.css","D2App/components/Item/ItemHeader/styles/PrintItemInfo.module.css","D2App/components/Item/VisualizationItem/styles/ItemFooter.module.css","D2App/components/Item/ListItem/Item.module.css","D2App/components/Item/PrintTitlePageItem/styles/Item.module.css","D2App/components/FilterBar/styles/FilterBar.module.css","D2App/components/ItemSelector/styles/HeaderMenuItem.module.css","D2App/components/ItemSelector/styles/ContentMenuItem.module.css","D2App/components/ItemSelector/styles/CategorizedMenuGroup.module.css","D2App/components/ItemSelector/styles/ItemSelector.module.css","D2App/components/TitleBar/styles/EditTitleBar.module.css","D2App/modules/itemTypes.js","D2App/modules/util.js","D2App/components/ItemGrid/gridUtil.js","D2App/components/ControlBar/styles/ConfirmDeleteDialog.module.css","D2App/components/ControlBar/styles/EditBar.module.css","D2App/components/Dashboard/styles/NotSupportedNotice.module.css","D2App/components/Dashboard/styles/PrintInfo.module.css","D2App/components/Dashboard/styles/PrintActionsBar.module.css","D2App/components/Dashboard/styles/PrintLayoutDashboard.module.css","D2App/components/Dashboard/styles/PrintDashboard.module.css","D2App/components/WindowDimensionsProvider.js","D2App/components/ControlBar/ControlBar.js","D2App/icons/Star.js","D2App/api/dataStatistics.js","D2App/components/ControlBar/DashboardItemChip.js","D2App/icons/AddCircle.js","D2App/icons/Search.js","D2App/icons/Clear.js","D2App/components/ControlBar/ClearButton.js","D2App/reducers/dashboardsFilter.js","D2App/modules/isSmallScreen.js","D2App/components/ControlBar/Filter.js","D2App/actions/dashboardsFilter.js","D2App/components/ControlBar/assets/icons.js","D2App/components/ControlBar/ShowMoreButton.js","D2App/components/ControlBar/controlBarDimensions.js","D2App/reducers/controlBar.js","D2App/modules/uiBackendItemConverter.js","D2App/reducers/dashboards.js","D2App/reducers/selected.js","D2App/api/userDataStore.js","D2App/api/controlBar.js","D2App/actions/controlBar.js","D2App/components/ControlBar/DashboardsBar.js","D2App/widgets/NoContentMessage.js","D2App/components/Item/VisualizationItem/assets/icons.js","D2App/reducers/user.js","D2App/reducers/dimensions.js","D2App/reducers/itemFilters.js","D2App/actions/itemFilters.js","D2App/reducers/messages.js","D2App/api/messages.js","D2App/components/Item/MessagesItem/actions.js","D2App/reducers/alert.js","D2App/actions/alert.js","D2App/reducers/visualizations.js","D2App/actions/visualizations.js","D2App/api/metadata.js","D2App/api/index.js","D2App/api/dashboards.js","D2App/api/description.js","D2App/actions/selected.js","D2App/api/localStorage.js","D2App/actions/dashboards.js","D2App/components/ItemFilter/FilterDialog.js","D2App/reducers/settings.js","D2App/reducers/activeModalDimension.js","D2App/actions/activeModalDimension.js","D2App/components/ItemFilter/FilterSelector.js","D2App/components/TitleBar/ViewTitleBar.js","D2App/reducers/editDashboard.js","D2App/api/editDashboard.js","D2App/actions/editDashboard.js","D2App/components/Item/VisualizationItem/Visualization/DefaultPlugin.js","D2App/components/Item/VisualizationItem/Visualization/NoVisualizationMessage.js","D2App/components/Item/VisualizationItem/Visualization/MapPlugin.js","D2App/components/Item/VisualizationItem/Visualization/LoadingMask.js","D2App/components/Item/VisualizationItem/Visualization/getFilteredVisualization.js","D2App/components/Item/VisualizationItem/Visualization/getVisualizationConfig.js","D2App/modules/memoizeOne.js","D2App/components/Item/VisualizationItem/Visualization/Visualization.js","D2App/components/Item/VisualizationItem/FatalErrorBoundary.js","D2App/components/Item/ItemHeader/ViewItemActions.js","D2App/components/Item/ItemHeader/DeleteItemButton.js","D2App/components/Item/ItemHeader/EditItemActions.js","D2App/icons/Info.js","D2App/components/Item/ItemHeader/PrintItemInfo.js","D2App/components/Dashboard/dashboardModes.js","D2App/components/Item/ItemHeader/ItemHeader.js","D2App/components/Item/VisualizationItem/ItemHeaderButtons.js","D2App/components/Item/VisualizationItem/ItemFooter.js","D2App/components/Item/VisualizationItem/Item.js","D2App/widgets/Line.js","D2App/components/Item/MessagesItem/Item.js","D2App/components/Item/NotSupportedItem/Item.js","D2App/icons/Description.js","D2App/icons/Delete.js","D2App/components/Item/ListItem/Item.js","D2App/components/Item/ListItem/actions.js","D2App/reducers/printDashboard.js","D2App/components/Item/TextItem/Item.js","D2App/components/Item/AppItem/Item.js","D2App/components/Item/SpacerItem/Item.js","D2App/components/Item/PageBreakItem/Item.js","D2App/components/Item/PrintTitlePageItem/Item.js","D2App/components/Item/Item.js","D2App/components/Item/ProgressiveLoadingContainer.js","D2App/components/ItemGrid/ItemGrid.js","D2App/components/FilterBar/FilterBadge.js","D2App/components/FilterBar/FilterBar.js","D2App/reducers/windowHeight.js","D2App/actions/printDashboard.js","D2App/components/Dashboard/ViewDashboard.js","D2App/components/ItemSelector/ItemSearchField.js","D2App/components/ItemSelector/HeaderMenuItem.js","D2App/icons/Launch.js","D2App/components/ItemSelector/ContentMenuItem.js","D2App/components/ItemSelector/actions.js","D2App/components/ItemSelector/selectableItems.js","D2App/components/ItemSelector/CategorizedMenuGroup.js","D2App/components/ItemSelector/SinglesMenuGroup.js","D2App/components/ItemSelector/ItemSelector.js","D2App/components/TitleBar/EditTitleBar.js","D2App/components/ControlBar/ConfirmDeleteDialog.js","D2App/components/ControlBar/EditBar.js","D2App/components/Dashboard/NotSupportedNotice.js","D2App/components/Dashboard/PrintInfo.js","D2App/icons/LessHorizontal.js","D2App/components/Dashboard/PrintActionsBar.js","D2App/modules/printUtils.js","D2App/components/ItemGrid/PrintLayoutItemGrid.js","D2App/components/Dashboard/PrintLayoutDashboard.js","D2App/components/Dashboard/EditDashboard.js","D2App/components/Dashboard/NewDashboard.js","D2App/components/ItemGrid/PrintItemGrid.js","D2App/components/Dashboard/PrintDashboard.js","D2App/actions/windowHeight.js","D2App/components/Dashboard/Dashboard.js","D2App/components/AlertBar/AlertBar.js","D2App/actions/user.js","D2App/api/settings.js","D2App/components/App.js","D2App/actions/dimensions.js","D2App/actions/settings.js","D2App/reducers/style.js","D2App/reducers/index.js","D2App/configureStore.js","D2App/locales/index.js","D2App/AppWrapper.js","D2App/modules/item.js","D2App/components/Item/VisualizationItem/Visualization/plugin.js","D2App/components/Item/ItemHeader/styles/ItemHeader.module.css"],"names":["module","exports","VISUALIZATION","REPORT_TABLE","CHART","MAP","EVENT_REPORT","EVENT_CHART","APP","REPORTS","RESOURCES","USERS","MESSAGES","TEXT","SPACER","PAGEBREAK","PRINT_TITLE_PAGE","DOMAIN_TYPE_AGGREGATE","DOMAIN_TYPE_TRACKER","isVisualizationType","item","itemTypeMap","type","hasMapView","itemType","domainType","isTrackerDomainType","getDefaultItemCount","defaultItemCount","getAppName","appName","id","endPointName","propName","pluralTitle","i18n","t","appUrl","dataStatisticsName","Date","getTime","getEndPointName","getDataStatisticsName","getItemUrl","baseUrl","url","launchUrl","getItemIcon","TableIcon","ChartIcon","MapIcon","ExtensionIcon","DescriptionIcon","PersonIcon","FontDownloadIcon","EmailIcon","CropFreeIcon","NotInterestedIcon","orArray","param","Array","isArray","orObject","isObject","arrayToIdMap","array","reduce","obj","formatDate","value","uiLocale","global","Intl","DateTimeFormat","locale","year","month","day","format","substr","replace","validateReducer","defaultValue","undefined","GRID_COMPACT_TYPE","GRID_ROW_HEIGHT","MARGIN","NEW_ITEM_SHAPE","x","y","w","h","MAX_ITEM_GRID_HEIGHT","MAX_ITEM_GRID_HEIGHT_OIPP","MAX_ITEM_GRID_WIDTH_OIPP","a4LandscapeWidthPx","getGridColumns","isNonNegativeInteger","Number","isInteger","hasShape","getGridItemProperties","itemId","i","minH","getPageBreakItemShape","yPos","isStatic","GRID_COLUMNS","static","getPrintTitlePageItemShape","isOneItemPerPage","withShape","items","map","index","itemWithShape","Object","assign","Error","col","row","Math","floor","itemWidth","MAX_ITEM_GRID_WIDTH","itemHeight","getShape","originalHeight","round","max","getOriginalHeight","getGridItemDomId","onItemResize","el","document","querySelector","isFunction","setViewportSize","setTimeout","clientWidth","clientHeight","WindowDimensionsCtx","createContext","windowDims","height","window","innerHeight","width","innerWidth","WindowDimensionsProvider","children","dimensions","setDimensions","useState","useEffect","handleResize","debounce","addEventListener","removeEventListener","Provider","useWindowDimensions","useContext","ControlBar","React","Component","constructor","props","super","onStartDrag","this","setState","dragging","onDrag","onEndDrag","event","preventDefault","stopPropagation","newHeight","clientY","onChangeHeight","requestAnimationFrame","renderDragHandle","data-testid","className","classes","draghandle","style","onMouseDown","state","render","rootClass","cx","root","content","defaultProps","StarIcon","xmlns","viewBox","d","fill","apiPostDataStatistics","async","eventType","d2","getInstance","Api","getApi","post","DashboardItemChip","starred","selected","label","dashboardId","onClick","chipProps","selectedState","unselected","icon","Star","debouncedPostStatistics","link","to","data-test","AddCircleIcon","colors","teal600","SearchIcon","ClearIcon","grey800","ClearButton","onClear","button","Clear","color","SET_DASHBOARDS_FILTER","CLEAR_DASHBOARDS_FILTER","sGetDashboardsFilter","dashboardsFilter","isSmallScreen","mapDispatchToProps","setDashboardsFilter","clearDashboardsFilter","connect","filterText","isMaxHeight","onKeypressEnter","onToggleMaxHeight","focusedClassName","setFocusedClassName","searchButton","Search","searchIcon","container","onFocus","focused","onBlur","input","placeholder","onChange","target","onKeyUp","keyCode","ChevronDown","ChevronUp","ShowMoreButton","disabled","buttonLabel","placement","showMore","aria-label","getRowsHeight","rows","getControlBarHeight","FIRST_ROW_PADDING_HEIGHT","SET_CONTROLBAR_USER_ROWS","combineReducers","userRows","action","sGetControlBarUserRows","controlBar","sGetControlBarRoot","spacerContent","emptyTextItemContent","isTextType","text","convertUiItemsToBackend","isUiSpacerType","convertBackendItemsToUi","isBackendSpacerType","gridProperties","SET_DASHBOARDS","ADD_DASHBOARDS","SET_DASHBOARD_STARRED","SET_DASHBOARD_DISPLAY_NAME","SET_DASHBOARD_ITEMS","DEFAULT_STATE_DASHBOARDS","byId","EMPTY_DASHBOARD","updateDashboardProp","prop","sGetDashboardsRoot","dashboards","sGetDashboardById","sDashboardsIsFetching","sGetAllDashboards","sGetDashboardItems","sGetStarredDashboards","values","filter","dashboard","sGetUnstarredDashboards","getCustomDashboards","data","arrayFrom","name","displayName","description","displayDescription","favorite","owner","user","created","split","join","lastUpdated","access","numberOfItems","dashboardItems","length","SET_SELECTED_ID","SET_SELECTED_ISLOADING","SET_SELECTED_SHOWDESCRIPTION","SET_SELECTED_ITEM_ACTIVE_TYPE","CLEAR_SELECTED_ITEM_ACTIVE_TYPES","DEFAULT_STATE_SELECTED_SHOWDESCRIPTION","DEFAULT_STATE_SELECTED_ITEM_ACTIVE_TYPES","isLoading","showDescription","itemActiveTypes","activeType","sGetSelectedRoot","sGetSelectedId","sGetSelectedIsLoading","sGetSelectedShowDescription","sGetSelectedItemActiveType","NAMESPACE","hasNamespace","currentUser","dataStore","has","getNamespace","get","create","apiPostUserDataStoreValue","key","set","apiGetUserDataStoreValue","namespace","keys","find","k","console","log","KEY_CONTROLBAR_ROWS","acSetControlBarUserRows","withRouter","selectedId","history","setRows","ref","createRef","scrollToTop","current","scroll","toggleMaxHeight","newRows","cancelMaxHeight","getFilteredDashboards","filteredDashboards","arraySort","toLowerCase","includes","containerClass","expanded","collapsed","viewableRows","rowHeightProp","min","apiPostControlBarRows","controls","newLink","AddCircle","Filter","push","chips","chipContainerClasses","chipContainer","getDashboardChips","marginTop","NoContentMessage","padding","textAlign","fontSize","fontWeight","grey600","ThreeDots","SpeechBubble","margin","fillRule","transform","Warning","Fullscreen","ExitFullscreen","RECEIVED_USER","DEFAULT_STATE_USER","username","isSuperuser","sGetUserUsername","SET_DIMENSIONS","DEFAULT_DIMENSIONS","getDimensionById","DIMENSION_ID_PERIOD","DIMENSION_ID_ORGUNIT","sGetDimensions","CLEAR_ITEM_FILTERS","SET_ITEM_FILTERS","ADD_ITEM_FILTER","REMOVE_ITEM_FILTER","DEFAULT_STATE_ITEM_FILTERS","sGetItemFiltersRoot","itemFilters","sGetNamedItemFilters","createSelector","filters","arr","dimension","acRemoveItemFilter","RECEIVED_MESSAGES","sGetMessagesRoot","messages","messageConversationsQuery","resource","params","fields","order","pageSize","tGetMessages","dataEngine","messageConversations","query","error","getMessages","dispatch","err","SET_ALERT_MESSAGE","CLEAR_ALERT_MESSAGE","sGetAlertMessage","alert","acClearAlertMessage","ADD_VISUALIZATION","CLEAR_VISUALIZATIONS","DEFAULT_STATE_VISUALIZATIONS","isEmpty","p","sGetVisualization","visualizations","sGetVisualizationsRoot","acAddVisualization","getIdNameFields","rename","getDimensionFields","withItems","arrayClean","getAxesFields","getFavoriteFields","withDimensions","withOptions","getFavoritesFields","apiFetchVisualization","getVisualizationId","onError","getDashboardItemsFields","withFavorite","getDashboardFields","dashboardsQuery","paging","dashboardQuery","starDashboardMutation","unstarDashboardMutation","deleteDashboardMutation","apiFetchDashboard","variables","KEY_SHOW_DESCRIPTION","acSetSelectedId","acSetSelectedIsLoading","acSetSelectedShowDescription","tSetSelectedDashboardById","getState","alertTimeout","onSuccess","acAppendDashboards","customDashboard","acSetDashboardItems","localStorage","setItem","forEach","getVisualizationFromItem","clearTimeout","tUpdateShowDescription","apiPostShowDescription","tFetchDashboards","acSetDashboards","apiFetchDashboards","tStarDashboard","isStarred","acSetDashboardStarred","mutate","apiStarDashboard","tDeleteDashboard","apiDeleteDashboard","Promise","resolve","initiallySelectedItems","addItemFilter","removeItemFilter","displayNameProperty","onClose","setFilters","useD2","onSelectItems","dimensionId","onDeselectItems","itemIdsToRemove","newList","onReorderItems","itemIds","oldList","reorderedList","dataTest","position","large","commonProps","onSelect","onDeselect","onReorder","selectedItems","selectedPeriods","ouItems","renderDialogContent","secondary","primary","filterItems","ADD_SETTINGS","DEFAULT_SETTINGS","keyDateFormat","keyAnalysisRelativePeriod","keyAnalysisDigitGroupSeparator","rootOrganisationUnit","keyGatherAnalyticalObjectStatisticsInDashboardViews","sGetSettings","settings","sGetSettingsDisplayNameProperty","sGatherAnalyticalObjectStatisticsInDashboardViews","SET_ACTIVE_MODAL_DIMENSION","CLEAR_ACTIVE_MODAL_DIMENSION","DEFAULT_STATE_ACTIVE_MODAL_DIMENSION","sGetActiveModalDimension","activeModalDimension","acSetActiveModalDimension","clearActiveModalDimension","setActiveModalDimension","showPopover","setShowPopover","useRef","onCloseDialog","buttonContainer","onClickOutside","reference","arrow","onDimensionClick","selectedIds","ViewTitleBar","moreOptionsIsOpen","setMoreOptionsIsOpen","sharingDialogIsOpen","setSharingDialogIsOpen","redirectUrl","setRedirectUrl","onToggleStarredDashboard","onShowHideDescription","toggleSharingDialog","toggleMoreOptions","StarBorder","showHideDescriptionLabel","toggleStarredDashboardLabel","buttonRef","userAccess","descriptionClasses","descContainer","desc","noDesc","titleBar","title","actions","titleBarIcon","strip","update","editLink","manage","shareButton","small","moreButton","dense","open","onRequestClose","stateProps","dispatchProps","ownProps","RECEIVED_EDIT_DASHBOARD","RECEIVED_NOT_EDITING","START_NEW_DASHBOARD","RECEIVED_TITLE","RECEIVED_DESCRIPTION","ADD_DASHBOARD_ITEM","REMOVE_DASHBOARD_ITEM","UPDATE_DASHBOARD_ITEM","RECEIVED_DASHBOARD_LAYOUT","SET_PRINT_PREVIEW_VIEW","CLEAR_PRINT_PREVIEW_VIEW","DEFAULT_STATE_EDIT_DASHBOARD","NEW_DASHBOARD_STATE","printPreviewView","sGetEditDashboardRoot","editDashboard","sGetIsEditing","sGetIsPrintPreviewView","sGetEditDashboardItems","createDashboardMutation","updateDashboardMutation","generatePayload","acClearEditDashboard","acAddDashboardItem","itemPropName","generateUid","gridItemProperties","shape","acUpdateDashboardItem","acRemoveDashboardItem","tSaveDashboard","dashboardToSave","response","uid","updateDashboard","postDashboard","DefaultPlugin","visualization","options","useConfig","credentials","auth","defaultHeaders","Authorization","prevItem","prevActiveType","load","unmount","shouldPluginReload","reloadAllowed","visChanged","NoVisualizationMessage","message","MapPlugin","applyFilters","mapViews","mapView","layer","pluginIsAvailable","hideTitle","LoadingMask","center","getFilteredVisualization","visRows","visColumns","columns","visFilters","dimensionFound","dimensionObjects","getWithoutId","object","getVisualizationConfig","originalType","extractedMapView","mv","VIS_TYPE_COLUMN","VIS_TYPE_PIVOT_TABLE","layout","getAdaptedUiLayoutByType","memoizeOne","fn","lastArgs","lastValue","args","every","arg","Visualization","pluginLoaded","onLoadingComplete","memoizedGetFilteredVisualization","memoizedGetVisualizationConfig","availableHeight","pluginProps","d2Config","forDashboard","FatalErrorBoundary","errorFound","componentDidCatch","info","ViewItemActions","actionButtons","itemActionsWrap","DeleteItemButton","deleteItemButton","red500","WarningIcon","PrintWarning","warning","Info","EDIT","NEW","VIEW","PRINT","PRINT_LAYOUT","isEditMode","mode","isPrintMode","isViewMode","ItemHeader","forwardRef","dashboardMode","isShortened","rest","Actions","EditItemActions","PrintItemInfo","getItemActionsMap","itemHeaderWrap","itemTitle","iconFill","ItemHeaderButtons","menuIsOpen","setMenuIsOpen","onSelectActiveType","isTrackerType","onViewTable","closeMenu","onViewChart","onViewMap","canViewAs","isSingleValue","isYearOverYear","VIS_TYPE_GAUGE","VIS_TYPE_PIE","interpretationMenuLabel","activeFooter","ViewAsMenuItems","isFullscreen","onToggleFullscreen","href","getLink","onToggleFooter","fullscreenSupported","ItemFooter","line","scrollContainer","Item","showFooter","configLoaded","isFullscreenSupported","itemDomElSelector","requestFullscreen","webkitRequestFullscreen","handleFullscreenChange","fullscreenElement","webkitFullscreenElement","exitFullscreen","webkitExitFullscreen","getUniqueKey","uniqueId","onToggleItemExpanded","setActiveType","getActiveType","isEditing","getAvailableHeight","calculatedHeight","headerRef","ITEM_CONTENT_PADDING_BOTTOM","memoizedGetContentHeight","contentRef","offsetHeight","measuredHeight","preferMeasured","updateVisualization","gatherDataStatistics","e","onfullscreenchange","onwebkitfullscreenchange","componentWillUnmount","getVisualizationName","shortened","Function","prototype","backgroundColor","grey200","border","Line","PRIVATE","messageTypes","VALIDATION_RESULT","TICKET","SYSTEM","list","listStyleType","paddingLeft","seeAll","marginBottom","sender","lineHeight","snippet","maxHeight","overflow","MessagesContainer","setUiLocale","userSettings","getUiLocale","getMessageHref","msg","msgIdentifier","messageType","modeClass","latestMsg","slice","getMessageSender","readClass","read","msgDate","location","messageCount","getMessageItems","NotSupportedItem","display","justifyContent","alignItems","align","grey500","DeleteIcon","getItemTitle","tRemoveListItemContent","dashboardItem","listItemType","newContent","contentItems","findIndex","getContentItems","contentItem","deleteButton","deletebutton","deleteicon","grey900","Description","itemicon","SET_PRINT_DASHBOARD","CLEAR_PRINT_DASHBOARD","ADD_PRINT_DASHBOARD_ITEM","SET_PRINT_DASHBOARD_LAYOUT","REMOVE_PRINT_DASHBOARD_ITEM","UPDATE_PRINT_DASHBOARD_ITEM","DEFAULT_STATE_PRINT_DASHBOARD","DEFAULT_DASHBOARD_ITEMS","NEW_PRINT_DASHBOARD_STATE","sGetPrintDashboardRoot","printDashboard","sGetIsPrinting","sGetPrintDashboardItems","textDiv","whiteSpace","textField","fontStretch","onChangeText","updatedItem","viewItem","textDivStyle","editItem","onEdit","multiline","fullWidth","printItem","textItem","getIframeSrc","appDetails","iframeSrc","ouIds","ouFilter","path","appKey","system","installedApps","app","dashboardWidget","src","SpacerItem","PageBreakItem","PrintTitlePageItem","titlePage","filterTitle","listItems","filterListItem","val","filterList","getItemFilterList","viewDashboard","sGetPrintDashboardName","sGetPrintDashboardDescription","GridItem","VisualizationItem","MessagesItem","ListItem","TextItem","AppItem","getGridItem","ProgressiveLoadingContainer","shouldLoad","containerRef","shouldLoadHandler","handlerOptions","passive","checkShouldLoad","bufferPx","bufferFactor","rect","getBoundingClientRect","bottom","top","removeHandler","registerHandler","debounceMs","getElementsByClassName","componentDidMount","eventProps","pick","ItemGrid","expandedItems","clickedId","isExpanded","onLayoutChange","newLayout","edit","acUpdateDashboardLayout","onResizeStop","oldItem","newItem","pluginResize","adjustHeightForExpanded","expandedItem","getItemComponent","itemClassNames","getItemComponents","UNSAFE_componentWillReceiveProps","nextProps","translucent","cols","rowHeight","compactType","isDraggable","isResizable","draggableCancel","selectedDashboard","validItems","styles","badgeContainer","borderRadius","white","badge","cursor","badgeRemove","textDecoration","marginLeft","FilterBadge","onRemove","count","FilterBar","onBadgeRemove","onBadgeClick","bar","removeItemFIlter","SET_WINDOW_HEIGHT","DEFAULT_STATE_WINDOW_HEIGHT","sGetWindowHeight","windowHeight","acSetPrintDashboard","acClearPrintDashboard","acAddPrintDashboardItem","acUpdatePrintDashboardItem","dashboardIsEditing","dashboardIsPrinting","controlBarRows","clearEditDashboard","clearPrintDashboard","ItemSearchField","HeaderMenuItem","LaunchIcon","LaunchLink","launchLink","rel","InsertButton","buttonInsert","ContentMenuItem","onInsert","visType","ItemIcon","renderedItemIcon","visTypeIcons","menuItem","marginRight","singleItems","header","categorizedItems","listItemTypes","tAddListItemContent","dashboardItemIndex","hasMore","onChangeItemsLimit","seeMore","setSeeMore","addItem","itemUrl","showMoreButton","category","addToDashboard","ItemSelector","isOpen","setIsOpen","setFilter","setItems","maxOptions","setMaxOptions","Set","queryString","filterStr","then","catch","updateMaxOptions","delete","add","inputRef","maxWidth","menu","itemCount","allItems","displayItems","concat","EditTitleBar","onChangeTitle","onChangeDescription","section","titleDescription","_","itemSelector","ConfirmDeleteDialog","dashboardName","onDeleteConfirmed","onContinueEditing","destructive","deleteAccess","updateAccess","sGetIsNewDashboard","isPrintPreviewView","clearPrintPreview","onSave","onDelete","onDiscardChanges","onTranslate","acSetDashboardDisplayName","showPrintPreview","useDataEngine","translationDlgIsOpen","setTranslationDlgIsOpen","setDashboard","confirmDeleteDlgIsOpen","setConfirmDeleteDlgIsOpen","dboard","onConfirmDelete","newId","onPrintPreview","onTranslationsSaved","translations","dbLocale","translation","property","toggleTranslationDialog","discardBtnText","editBar","objectToTranslate","modelDefinition","fieldsToTranslate","onTranslationSaved","onTranslationError","NotSupportedNotice","noticeContainer","PrintInfo","isLayout","infoHeader","infoWrapper","infoList","divider","LessHorizontalIcon","PrintActionsBar","inner","LessHorizontal","print","topMargin","getTransformYPx","elStyle","transformY","match","parseInt","PrintLayoutItemGrid","updateDashboardLayout","isFirstPageBreak","pageBreaks","sortedPageBreaks","sortBy","hideExtraPageBreaks","sortedElements","elements","types","elementsWithBoundingRect","from","classList","indexOf","bottomY","getDomGridItemsSortedByYPos","querySelectorAll","pageBreakBottom","lastItemBottom","foundNonPageBreak","thisItemBottom","gridElement","firstBreak","scrollArea","componentDidUpdate","EDIT_BAR_HEIGHT","isLeapPage","n","getMultiple","factor","multiple","PrintLayoutDashboard","initialized","initPrintLayoutDashboard","setPrintDashboard","updateDashboardItem","addDashboardItem","yPosList","pageNum","addPageBreaks","getWrapperStyle","fromEdit","paddingTop","spacers","dp24","wrapper","pageOuter","setEditDashboard","renderGrid","setNewDashboard","PrintItemGrid","PrintDashboard","initPrintDashboard","sortedItems","spacerCount","removeDashboardItem","dashboardMap","dashboardsIsEmpty","dashboardsLoaded","routeId","selectDashboard","dashboardToSelect","preferredId","getItem","dash","sGetDashboardsSortedByStarred","setWindowHeight","getElementsByTagName","remove","setHeaderbarVisibility","onResize","onHidden","permanent","SYSTEM_SETTINGS","fetchDashboards","setControlBarRows","apiGetControlBarRows","setCurrentUser","acSetDimensions","displayNameProp","apiFetchDimensions","dim","dimensionType","dataDimensionType","setShowDescription","apiGetShowDescription","addSettings","extraSettings","fetchedSettings","s","apiFetchSystemSettings","exact","AlertBar","DEFAULT_STATE_STYLE","objectClean","conversations","$merge","d2Object","keyUiLocale","authorities","newState","$splice","$unshift","idToRemove","stateItems","layoutHasChanged","newStateItems","stateItem","si","configureStore","middleware","thunk","withExtraArgument","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","createStore","reducer","applyMiddleware","addResources","arTranslations","ar_IQTranslations","ckbTranslations","csTranslations","daTranslations","enTranslations","esTranslations","frTranslations","idTranslations","kmTranslations","loTranslations","myTranslations","nbTranslations","prsTranslations","psTranslations","ptTranslations","pt_BRTranslations","ruTranslations","svTranslations","tetTranslations","tgTranslations","ukTranslations","urTranslations","uzTranslations","uz_CyrlTranslations","viTranslations","zhTranslations","zh_CNTranslations","schemas","authorization","process","REACT_APP_DHIS2_AUTHORIZATION","headers","AppWrapper","store","theme","createMuiTheme","dhis2theme","i18nRoot","reportTable","chart","eventReport","eventChart","itemTypeToExternalPlugin","getPlugin","hasIntegratedPlugin","config","plugin","loadingIndicator","loadPlugin","resize"],"mappings":"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","file":"static/js/app.a62e033a.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"ControlBar_root__iikeX\",\"dragging\":\"ControlBar_dragging__3lq79\",\"content\":\"ControlBar_content__26Z33\",\"draghandle\":\"ControlBar_draghandle__27zum\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"link\":\"DashboardItemChip_link__21drZ\",\"icon\":\"DashboardItemChip_icon__2hcIR\",\"selected\":\"DashboardItemChip_selected__r00uP\",\"unselected\":\"DashboardItemChip_unselected__2H9l2\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"ClearButton_button__33ZbK\",\"icon\":\"ClearButton_icon__vTJm3\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Filter_container__1Vxdh\",\"input\":\"Filter_input__14lhU\",\"focused\":\"Filter_focused__Lvyz3\",\"searchIcon\":\"Filter_searchIcon__2ojUp\",\"searchButton\":\"Filter_searchButton__1tMTB\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"ShowMoreButton_container__riJz_\",\"showMore\":\"ShowMoreButton_showMore__3S3He\",\"disabled\":\"ShowMoreButton_disabled__2FQNA\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"DashboardsBar_container__1xuCo\",\"expanded\":\"DashboardsBar_expanded__3lVl8\",\"controls\":\"DashboardsBar_controls__3PhmY\",\"newLink\":\"DashboardsBar_newLink__2PkLQ\",\"collapsed\":\"DashboardsBar_collapsed__3CY9n\",\"chipContainer\":\"DashboardsBar_chipContainer__IRxuN\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"buttonContainer\":\"FilterSelector_buttonContainer__O_amY\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"ViewTitleBar_container__VivO0\",\"actions\":\"ViewTitleBar_actions__2UTRz\",\"editLink\":\"ViewTitleBar_editLink__d_HzW\",\"titleBar\":\"ViewTitleBar_titleBar__eiwJS\",\"titleBarIcon\":\"ViewTitleBar_titleBarIcon__2cBxv\",\"strip\":\"ViewTitleBar_strip__3xR4U\",\"title\":\"ViewTitleBar_title__2GhTR\",\"descContainer\":\"ViewTitleBar_descContainer__3rF10\",\"desc\":\"ViewTitleBar_desc__3QW6Z\",\"noDesc\":\"ViewTitleBar_noDesc__Jettc\",\"moreButton\":\"ViewTitleBar_moreButton__1HduK\",\"shareButton\":\"ViewTitleBar_shareButton__3yEKR\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"message\":\"NoVisualizationMessage_message__22IPi\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"center\":\"LoadingMask_center__KHIYy\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"FatalErrorBoundary_container__3SViR\",\"icon\":\"FatalErrorBoundary_icon__2UbeP\",\"message\":\"FatalErrorBoundary_message__3FzrY\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"deleteItemButton\":\"DeleteItemButton_deleteItemButton__3TJm9\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"warning\":\"PrintItemInfo_warning__123PK\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"line\":\"ItemFooter_line__3Ko0R\",\"scrollContainer\":\"ItemFooter_scrollContainer__tuq4P\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"Item_list__1_nkQ\",\"item\":\"Item_item__3-6QE\",\"itemicon\":\"Item_itemicon__QlouX\",\"link\":\"Item_link___3c_q\",\"deleteicon\":\"Item_deleteicon__3usrl\",\"deletebutton\":\"Item_deletebutton__1DpBW\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"titlePage\":\"Item_titlePage__18CNQ\",\"name\":\"Item_name__3nuTV\",\"description\":\"Item_description__1gFQd\",\"filterTitle\":\"Item_filterTitle__2p7TQ\",\"filterList\":\"Item_filterList__qc_G3\",\"filterListItem\":\"Item_filterListItem__sPbBY\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"bar\":\"FilterBar_bar__1Ma3p\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"HeaderMenuItem_item__313hC\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"menuItem\":\"ContentMenuItem_menuItem__vbKn3\",\"launchLink\":\"ContentMenuItem_launchLink__2Nql9\",\"label\":\"ContentMenuItem_label__ANfH1\",\"buttonInsert\":\"ContentMenuItem_buttonInsert__1joHg\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"showMoreButton\":\"CategorizedMenuGroup_showMoreButton__2RbRp\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"menu\":\"ItemSelector_menu__2VYae\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"section\":\"EditTitleBar_section__LIaIC\",\"titleDescription\":\"EditTitleBar_titleDescription__1YsU6\",\"title\":\"EditTitleBar_title__3mUbt\",\"description\":\"EditTitleBar_description__24U5X\",\"itemSelector\":\"EditTitleBar_itemSelector__1cFEp\"};","import i18n from '@dhis2/d2-i18n';\nimport TableIcon from '@material-ui/icons/ViewList';\nimport ChartIcon from '@material-ui/icons/InsertChart';\nimport MapIcon from '@material-ui/icons/Public';\nimport ExtensionIcon from '@material-ui/icons/Extension';\nimport DescriptionIcon from '@material-ui/icons/Description';\nimport PersonIcon from '@material-ui/icons/Person';\nimport FontDownloadIcon from '@material-ui/icons/FontDownload';\nimport EmailIcon from '@material-ui/icons/Email';\nimport CropFreeIcon from '@material-ui/icons/CropFree';\nimport NotInterestedIcon from '@material-ui/icons/NotInterested'; // Item types\n\nexport const VISUALIZATION = 'VISUALIZATION';\nexport const REPORT_TABLE = 'REPORT_TABLE';\nexport const CHART = 'CHART';\nexport const MAP = 'MAP';\nexport const EVENT_REPORT = 'EVENT_REPORT';\nexport const EVENT_CHART = 'EVENT_CHART';\nexport const APP = 'APP';\nexport const REPORTS = 'REPORTS';\nexport const RESOURCES = 'RESOURCES';\nexport const USERS = 'USERS';\nexport const MESSAGES = 'MESSAGES';\nexport const TEXT = 'TEXT';\nexport const SPACER = 'SPACER';\nexport const PAGEBREAK = 'PAGEBREAK';\nexport const PRINT_TITLE_PAGE = 'PRINT_TITLE_PAGE';\nconst DOMAIN_TYPE_AGGREGATE = 'AGGREGATE';\nconst DOMAIN_TYPE_TRACKER = 'TRACKER'; // Dashboard helpers\n\nexport const isVisualizationType = item => !!itemTypeMap[item.type].isVisualizationType;\nexport const hasMapView = itemType => itemTypeMap[itemType].domainType === DOMAIN_TYPE_AGGREGATE;\nexport const isTrackerDomainType = itemType => itemTypeMap[itemType].domainType === DOMAIN_TYPE_TRACKER;\nexport const getDefaultItemCount = itemType => itemTypeMap[itemType].defaultItemCount || 5;\nexport const getAppName = itemType => itemTypeMap[itemType].appName || ''; // Item type map\n\nexport const itemTypeMap = {\n  [VISUALIZATION]: {\n    id: VISUALIZATION,\n    endPointName: 'visualizations',\n    propName: 'visualization',\n    pluralTitle: i18n.t('Visualizations'),\n    appUrl: id => `dhis-web-data-visualizer/#/${id}`,\n    appName: 'Data Visualizer',\n    defaultItemCount: 10\n  },\n  [REPORT_TABLE]: {\n    id: REPORT_TABLE,\n    endPointName: 'visualizations',\n    dataStatisticsName: 'REPORT_TABLE_VIEW',\n    propName: 'visualization',\n    pluralTitle: i18n.t('Pivot tables'),\n    domainType: DOMAIN_TYPE_AGGREGATE,\n    isVisualizationType: true,\n    appUrl: id => `dhis-web-data-visualizer/#/${id}`,\n    appName: 'Data Visualizer'\n  },\n  [CHART]: {\n    id: CHART,\n    endPointName: 'visualizations',\n    propName: 'visualization',\n    dataStatisticsName: 'CHART_VIEW',\n    pluralTitle: i18n.t('Charts'),\n    domainType: DOMAIN_TYPE_AGGREGATE,\n    isVisualizationType: true,\n    appUrl: id => `dhis-web-data-visualizer/#/${id}`,\n    appName: 'Data Visualizer'\n  },\n  [MAP]: {\n    id: MAP,\n    endPointName: 'maps',\n    dataStatisticsName: 'MAP_VIEW',\n    propName: 'map',\n    pluralTitle: i18n.t('Maps'),\n    domainType: DOMAIN_TYPE_AGGREGATE,\n    isVisualizationType: true,\n    appUrl: id => `dhis-web-maps/?id=${id}`,\n    appName: 'Maps'\n  },\n  [EVENT_REPORT]: {\n    id: EVENT_REPORT,\n    endPointName: 'eventReports',\n    propName: 'eventReport',\n    pluralTitle: i18n.t('Event reports'),\n    domainType: DOMAIN_TYPE_TRACKER,\n    isVisualizationType: true,\n    appUrl: id => `dhis-web-event-reports/?id=${id}`,\n    appName: 'Event Reports'\n  },\n  [EVENT_CHART]: {\n    id: EVENT_CHART,\n    endPointName: 'eventCharts',\n    propName: 'eventChart',\n    pluralTitle: i18n.t('Event charts'),\n    domainType: DOMAIN_TYPE_TRACKER,\n    isVisualizationType: true,\n    appUrl: id => `dhis-web-event-visualizer/?id=${id}`,\n    appName: 'Event Visualizer'\n  },\n  [APP]: {\n    endPointName: 'apps',\n    propName: 'appKey',\n    pluralTitle: i18n.t('Apps')\n  },\n  [REPORTS]: {\n    id: REPORTS,\n    endPointName: 'reports',\n    propName: 'reports',\n    pluralTitle: i18n.t('Reports'),\n    appUrl: (id, type) => {\n      switch (type) {\n        case 'HTML':\n          return `dhis-web-reports/#/standard-report/view/${id}`;\n\n        case 'JASPER_REPORT_TABLE':\n        case 'JASPER_JDBC':\n        default:\n          return `api/reports/${id}/data.pdf?t=${new Date().getTime()}`;\n      }\n    }\n  },\n  [RESOURCES]: {\n    id: RESOURCES,\n    endPointName: 'resources',\n    propName: 'resources',\n    pluralTitle: i18n.t('Resources'),\n    appUrl: id => `api/documents/${id}/data`\n  },\n  [USERS]: {\n    id: USERS,\n    endPointName: 'users',\n    propName: 'users',\n    pluralTitle: i18n.t('Users'),\n    appUrl: id => `dhis-web-dashboard-integration/profile.action?id=${id}`\n  },\n  [TEXT]: {\n    id: TEXT,\n    propName: 'text'\n  },\n  [MESSAGES]: {\n    propName: 'messages'\n  },\n  [SPACER]: {\n    propName: 'text'\n  },\n  [PAGEBREAK]: {\n    propName: 'text'\n  },\n  [PRINT_TITLE_PAGE]: {\n    propName: 'text'\n  }\n};\nexport const getEndPointName = type => itemTypeMap[type].endPointName;\nexport const getDataStatisticsName = type => itemTypeMap[type].dataStatisticsName || null;\nexport const getItemUrl = (type, item, baseUrl) => {\n  let url;\n\n  if (type === APP) {\n    url = item.launchUrl;\n  }\n\n  if (itemTypeMap[type] && itemTypeMap[type].appUrl) {\n    url = `${baseUrl}/${itemTypeMap[type].appUrl(item.id, item.type)}`;\n  }\n\n  return url;\n};\nexport const getItemIcon = type => {\n  switch (type) {\n    case REPORT_TABLE:\n    case EVENT_REPORT:\n    case REPORTS:\n      return TableIcon;\n\n    case CHART:\n    case EVENT_CHART:\n      return ChartIcon;\n\n    case MAP:\n      return MapIcon;\n\n    case APP:\n      return ExtensionIcon;\n\n    case RESOURCES:\n      return DescriptionIcon;\n\n    case USERS:\n      return PersonIcon;\n\n    case TEXT:\n      return FontDownloadIcon;\n\n    case MESSAGES:\n      return EmailIcon;\n\n    case SPACER:\n      return CropFreeIcon;\n\n    default:\n      return NotInterestedIcon;\n  }\n};","import isObject from 'lodash/isObject'; // validation\n\nexport function orNull(param) {\n  return param === undefined ? null : param;\n}\nexport function orArray(param) {\n  return Array.isArray(param) ? param : [];\n}\nexport function orObject(param) {\n  return isObject(param) ? param : {};\n} // array\n\nexport function arrayGetById(array, id) {\n  return array.find(item => item.id === id);\n} // object\n\nexport function arrayToIdMap(array) {\n  return array.reduce((obj, item) => {\n    obj[item.id] = item;\n    return obj;\n  }, {});\n} // date\n\nexport function getDate() {\n  const y = Math.floor(Math.random() * 3) + 2015;\n  const M = Math.floor(Math.random() * 12) + 1;\n  const d = Math.floor(Math.random() * 28) + 1; // const h = Math.floor(Math.random() * 23) + 1;\n  // const m = Math.floor(Math.random() * 59) + 1;\n  // const s = Math.floor(Math.random() * 59) + 1;\n\n  return new Date(`${y}-${M}-${d}`).toJSON().replace('T', ' ').substr(0, 10);\n}\nexport const formatDate = (value, uiLocale) => {\n  if (typeof global.Intl !== 'undefined' && Intl.DateTimeFormat) {\n    const locale = uiLocale || 'en';\n    return new Intl.DateTimeFormat(locale, {\n      year: 'numeric',\n      month: 'short',\n      day: 'numeric'\n    }).format(new Date(value));\n  }\n\n  return value.substr(0, 19).replace('T', ' ');\n};\n/**\n * Sorts an array of objects based on provided date property\n *\n * @param {Array} items Array of objects\n * @param {String} dateProp Name of the date property to be used for sorting\n * @param {Boolean} ascending Whether to sort ascending or descending\n */\n\nexport const sortByDate = (items, dateProp, ascending = true) => {\n  const values = Object.values(items);\n  values.sort((a, b) => {\n    const aDate = new Date(a[dateProp]);\n    const bDate = new Date(b[dateProp]);\n    return ascending ? aDate - bDate : bDate - aDate;\n  });\n  return values;\n}; // reducer validator\n\nexport const validateReducer = (value, defaultValue) => value === undefined || value === null ? defaultValue : value;","import isFunction from 'd2-utilizr/lib/isFunction';\nimport { orObject } from '../../modules/util'; // Dimensions for the react-grid-layout\n\nexport const GRID_COMPACT_TYPE = 'vertical'; // vertical | horizonal | null\n\nexport const GRID_ROW_HEIGHT = 10;\nconst GRID_COLUMN_WIDTH_PX = 20;\nconst GRID_LAYOUT = 'FLEXIBLE'; // FIXED | FLEXIBLE\n\nexport const MARGIN = [10, 10];\nexport const NEW_ITEM_SHAPE = {\n  x: 0,\n  y: 0,\n  w: 20,\n  h: 29\n}; // Dimensions for getShape\n\nconst NUMBER_OF_ITEM_COLS = 2;\nconst GRID_COLUMNS = 60;\nconst MAX_ITEM_GRID_WIDTH = GRID_COLUMNS - 1;\nexport const MAX_ITEM_GRID_HEIGHT = 34;\nexport const MAX_ITEM_GRID_HEIGHT_OIPP = 35;\nexport const MAX_ITEM_GRID_WIDTH_OIPP = 56; // for A4 landscape (297x210mm)\n// 794 px = (21cm / 2.54) * 96 pixels/inch\n// 1122 px = 29.7 /2.54 * 96 pixels/inch\n// const a4LandscapeHeightPx = 794\n\nexport const a4LandscapeWidthPx = 1102;\nexport const getGridColumns = () => {\n  switch (GRID_LAYOUT) {\n    case 'FLEXIBLE':\n      return GRID_COLUMNS;\n\n    case 'FIXED':\n      return Math.floor((window.innerWidth - 20) / GRID_COLUMN_WIDTH_PX);\n\n    default:\n      return GRID_COLUMNS;\n  }\n}; // isNonNegativeInteger\n\nconst isNonNegativeInteger = x => Number.isInteger(x) && x >= 0; // Does the item have all the shape properties?\n\n\nexport const hasShape = item => isNonNegativeInteger(item.x) && isNonNegativeInteger(item.y) && isNonNegativeInteger(item.w) && isNonNegativeInteger(item.h); // returns a rectangular grid block dimensioned with x, y, w, h in grid units.\n// based on a grid with 3 items across\n\nexport const getShape = i => {\n  if (!isNonNegativeInteger(i)) {\n    throw new Error('Invalid grid block number');\n  }\n\n  const col = i % NUMBER_OF_ITEM_COLS;\n  const row = Math.floor(i / NUMBER_OF_ITEM_COLS);\n  const itemWidth = Math.floor(MAX_ITEM_GRID_WIDTH / NUMBER_OF_ITEM_COLS);\n  const itemHeight = GRID_ROW_HEIGHT * 2;\n  return {\n    x: col * itemWidth,\n    y: row * itemHeight,\n    w: itemWidth,\n    h: itemHeight\n  };\n};\nexport const getGridItemProperties = itemId => {\n  return {\n    i: itemId,\n    minH: 4 // minimum height for item\n\n  };\n};\nexport const getPageBreakItemShape = (yPos, isStatic = true) => {\n  return {\n    x: 0,\n    y: yPos,\n    w: MAX_ITEM_GRID_WIDTH,\n    h: 5,\n    static: !!isStatic,\n    minH: 1\n  };\n};\nexport const getPrintTitlePageItemShape = isOneItemPerPage => {\n  return {\n    x: 0,\n    y: 0,\n    w: isOneItemPerPage ? MAX_ITEM_GRID_WIDTH_OIPP : MAX_ITEM_GRID_WIDTH,\n    h: MAX_ITEM_GRID_HEIGHT,\n    static: true,\n    minH: 1\n  };\n};\n/**\n * Calculates the grid item's original height in pixels based\n * on the height in grid units. This calculation\n * is copied directly from react-grid-layout GridItem.js (calcPosition)\n *\n * @param {Object} item item containing shape (x, y, w, h)\n */\n\nexport const getOriginalHeight = item => {\n  const originalHeight = Math.round(GRID_ROW_HEIGHT * item.h + Math.max(0, item.h - 1) * MARGIN[1]);\n  return {\n    originalHeight\n  };\n};\n/**\n * Returns an array of items containing the x, y, w, h dimensions\n * and the item's originalheight in pixels\n * @function\n * @param {Array} items\n * @returns {Array}\n */\n\nexport const withShape = items => items.map((item, index) => {\n  const itemWithShape = hasShape(item) ? item : Object.assign({}, item, getShape(index));\n  return Object.assign({}, itemWithShape, getOriginalHeight(itemWithShape));\n});\nexport const getGridItemDomId = id => `item-${id}`;\nexport function onItemResize(id) {\n  const el = orObject(document.querySelector(`#${getGridItemDomId(id)}`));\n  if (isFunction(el.setViewportSize)) setTimeout(() => el.setViewportSize(el.clientWidth - 5, el.clientHeight - 5), 10);\n}","// extracted by mini-css-extract-plugin\nmodule.exports = {\"content\":\"ConfirmDeleteDialog_content__EqswE\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"editBar\":\"EditBar_editBar__1d1xM\",\"controls\":\"EditBar_controls__1t0nO\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"noticeContainer\":\"NotSupportedNotice_noticeContainer__3z9Up\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"infoWrapper\":\"PrintInfo_infoWrapper__3m2lt\",\"infoHeader\":\"PrintInfo_infoHeader__KyW8I\",\"info\":\"PrintInfo_info__13oXZ\",\"infoList\":\"PrintInfo_infoList__Iu9MC\",\"divider\":\"PrintInfo_divider__3wzx9\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"PrintActionsBar_container__2iQp7\",\"topMargin\":\"PrintActionsBar_topMargin__OpYDN\",\"inner\":\"PrintActionsBar_inner__uBqU7\",\"link\":\"PrintActionsBar_link__lFUmI\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"PrintLayoutDashboard_wrapper__1WDh4\",\"pageOuter\":\"PrintLayoutDashboard_pageOuter__22acI\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"PrintDashboard_wrapper__1O3s_\",\"pageOuter\":\"PrintDashboard_pageOuter__fl9tw\"};","import React, { createContext, useContext, useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport debounce from 'lodash/debounce';\nexport const WindowDimensionsCtx = createContext(null);\n\nconst windowDims = () => ({\n  height: window.innerHeight,\n  width: window.innerWidth\n});\n\nconst WindowDimensionsProvider = ({\n  children\n}) => {\n  const [dimensions, setDimensions] = useState(windowDims());\n  useEffect(() => {\n    const handleResize = debounce(() => {\n      setDimensions(windowDims());\n    }, 200);\n    window.addEventListener('resize', handleResize);\n    return () => {\n      window.removeEventListener('resize', handleResize);\n    };\n  }, []);\n  return <WindowDimensionsCtx.Provider value={dimensions}>\n            {children}\n        </WindowDimensionsCtx.Provider>;\n};\n\nWindowDimensionsProvider.propTypes = {\n  children: PropTypes.node.isRequired\n};\nexport default WindowDimensionsProvider;\nexport const useWindowDimensions = () => {\n  return useContext(WindowDimensionsCtx);\n};","import React from 'react';\nimport PropTypes from 'prop-types';\nimport cx from 'classnames';\nimport classes from './styles/ControlBar.module.css';\nexport const DRAG_HANDLE_HEIGHT = 7;\n\nclass ControlBar extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      dragging: false\n    };\n  }\n\n  onStartDrag = () => {\n    this.setState({\n      dragging: true\n    });\n    window.addEventListener('mousemove', this.onDrag);\n    window.addEventListener('mouseup', this.onEndDrag);\n  };\n  onDrag = event => {\n    event.preventDefault();\n    event.stopPropagation();\n    const newHeight = event.clientY;\n\n    if (this.props.onChangeHeight && newHeight !== this.props.height && newHeight > 0) {\n      requestAnimationFrame(() => {\n        this.props.onChangeHeight(newHeight);\n      });\n    }\n  };\n  onEndDrag = () => {\n    this.setState({\n      dragging: false\n    });\n    window.removeEventListener('mousemove', this.onDrag);\n    window.removeEventListener('mouseup', this.onEndDrag);\n\n    if (this.props.onEndDrag) {\n      this.props.onEndDrag();\n    }\n  };\n  renderDragHandle = () => typeof this.props.onChangeHeight === 'function' && <div data-testid=\"controlbar-drag-handle\" className={classes.draghandle} style={{\n    height: DRAG_HANDLE_HEIGHT\n  }} onMouseDown={this.onStartDrag} />;\n\n  render() {\n    const height = Math.max(this.props.height, 0) + DRAG_HANDLE_HEIGHT;\n    const rootClass = cx(classes.root, this.state.dragging && classes.dragging);\n    return <div style={{\n      height\n    }} className={rootClass}>\n                <div className={classes.content}>{this.props.children}</div>\n                {this.renderDragHandle()}\n            </div>;\n  }\n\n}\n\nControlBar.propTypes = {\n  /**\n   * The height of the control bar in number of lines. Must be a positive integer.\n   */\n  children: PropTypes.node.isRequired,\n\n  /**\n   * Callback function that is called when the control bar is resized.\n   * The callback receives one argument: The new height in pixels.\n   *\n   * If no callback is specified the control bar will not have a drag handle.\n   */\n  height: PropTypes.number.isRequired,\n\n  /**\n   * Callback function that is called when the control bar is dropped after being dragged.\n   * The callback receives one argument: The new height in pixels.\n   *\n   * Ignored if no \"onChangeHeight\" function is provided.\n   */\n  onChangeHeight: PropTypes.func,\n\n  /**\n   * The contents of the control bar.\n   */\n  onEndDrag: PropTypes.func\n};\nControlBar.defaultProps = {\n  onChangeHeight: null,\n  onEndDrag: null\n};\nexport default ControlBar;","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst StarIcon = ({\n  className\n}) => <svg className={className} xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\">\n        <path d=\"M0 0h24v24H0z\" fill=\"none\" />\n        <path d=\"M12 17.27L18.18 21l-1.64-7.03L22 9.24l-7.19-.61L12 2 9.19 8.63 2 9.24l5.46 4.73L5.82 21z\" />\n        <path d=\"M0 0h24v24H0z\" fill=\"none\" />\n    </svg>;\n\nStarIcon.propTypes = {\n  className: PropTypes.string\n};\nexport default StarIcon;","import { getInstance } from 'd2';\nexport const apiPostDataStatistics = async (eventType, id) => {\n  const d2 = await getInstance();\n  const url = `dataStatistics?eventType=${eventType}&favorite=${id}`;\n  d2.Api.getApi().post(url);\n};","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Chip } from '@dhis2/ui';\nimport { Link } from 'react-router-dom';\nimport debounce from 'lodash/debounce';\nimport StarIcon from '../../icons/Star';\nimport { apiPostDataStatistics } from '../../api/dataStatistics';\nimport classes from './styles/DashboardItemChip.module.css';\nexport const DashboardItemChip = ({\n  starred,\n  selected,\n  label,\n  dashboardId,\n  onClick\n}) => {\n  const chipProps = {\n    selected\n  };\n\n  if (starred) {\n    const selectedState = selected ? classes.selected : classes.unselected;\n    chipProps.icon = <StarIcon className={`${classes.icon} ${selectedState}`} />;\n  }\n\n  const debouncedPostStatistics = debounce(() => apiPostDataStatistics('DASHBOARD_VIEW', dashboardId), 500);\n\n  const handleClick = () => {\n    debouncedPostStatistics();\n    onClick();\n  };\n\n  return <Link className={classes.link} to={`/${dashboardId}`} onClick={handleClick} data-test=\"dashboard-chip\">\n            <Chip {...chipProps}>{label}</Chip>\n        </Link>;\n};\nDashboardItemChip.propTypes = {\n  dashboardId: PropTypes.string.isRequired,\n  label: PropTypes.string.isRequired,\n  selected: PropTypes.bool.isRequired,\n  starred: PropTypes.bool.isRequired,\n  onClick: PropTypes.func.isRequired,\n  classes: PropTypes.object\n};\nexport default DashboardItemChip;","import React from 'react';\nimport { colors } from '@dhis2/ui';\n\nconst AddCircleIcon = () => <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"32\" height=\"32\" fill={colors.teal600} viewBox=\"0 0 24 24\">\n        <path d=\"M12 2C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2zm4 11h-3v3c0 .55-.45 1-1 1s-1-.45-1-1v-3H8c-.55 0-1-.45-1-1s.45-1 1-1h3V8c0-.55.45-1 1-1s1 .45 1 1v3h3c.55 0 1 .45 1 1s-.45 1-1 1z\" />\n    </svg>;\n\nexport default AddCircleIcon;","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst SearchIcon = ({\n  className\n}) => <svg className={className} xmlns=\"http://www.w3.org/2000/svg\" height=\"24\" viewBox=\"0 0 24 24\" width=\"24\">\n        <path d=\"M0 0h24v24H0z\" fill=\"none\" />\n        <path d=\"M15.5 14h-.79l-.28-.27C15.41 12.59 16 11.11 16 9.5 16 5.91 13.09 3 9.5 3S3 5.91 3 9.5 5.91 16 9.5 16c1.61 0 3.09-.59 4.23-1.57l.27.28v.79l5 4.99L20.49 19l-4.99-5zm-6 0C7.01 14 5 11.99 5 9.5S7.01 5 9.5 5 14 7.01 14 9.5 11.99 14 9.5 14z\" />\n    </svg>;\n\nSearchIcon.propTypes = {\n  className: PropTypes.string\n};\nexport default SearchIcon;","import React from 'react';\nimport { colors } from '@dhis2/ui';\nimport PropTypes from 'prop-types';\n\nconst ClearIcon = ({\n  className\n}) => <svg className={className} fill={colors.grey800} xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\">\n        <path d=\"M19 6.41L17.59 5 12 10.59 6.41 5 5 6.41 10.59 12 5 17.59 6.41 19 12 13.41 17.59 19 19 17.59 13.41 12z\" />\n        <path d=\"M0 0h24v24H0z\" fill=\"none\" />\n    </svg>;\n\nClearIcon.propTypes = {\n  className: PropTypes.string\n};\nexport default ClearIcon;","import React from 'react';\nimport PropTypes from 'prop-types';\nimport ClearIcon from '../../icons/Clear';\nimport classes from './styles/ClearButton.module.css';\nexport const ClearButton = ({\n  onClear\n}) => <button className={classes.button} onClick={onClear}>\n        <span>\n            <ClearIcon className={classes.icon} color=\"action\" />\n        </span>\n    </button>;\nClearButton.propTypes = {\n  onClear: PropTypes.func.isRequired\n};\nexport default ClearButton;","import { validateReducer } from '../modules/util';\nexport const SET_DASHBOARDS_FILTER = 'SET_DASHBOARDS_FILTER';\nexport const CLEAR_DASHBOARDS_FILTER = 'CLEAR_DASHBOARDS_FILTER';\nexport const DEFAULT_STATE_DASHBOARDS_FILTER = '';\nexport default ((state = DEFAULT_STATE_DASHBOARDS_FILTER, action) => {\n  switch (action.type) {\n    case SET_DASHBOARDS_FILTER:\n      {\n        return validateReducer(action.value, DEFAULT_STATE_DASHBOARDS_FILTER);\n      }\n\n    case CLEAR_DASHBOARDS_FILTER:\n      {\n        return DEFAULT_STATE_DASHBOARDS_FILTER;\n      }\n\n    default:\n      return state;\n  }\n}); // selectors\n\nexport const sGetDashboardsFilter = state => state.dashboardsFilter;","const SMALL_SCREEN_BREAKPOINT = 480;\n\nconst isSmallScreen = width => width <= SMALL_SCREEN_BREAKPOINT;\n\nexport default isSmallScreen;","import React, { useState } from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport i18n from '@dhis2/d2-i18n';\nimport cx from 'classnames';\nimport SearchIcon from '../../icons/Search';\nimport ClearButton from './ClearButton';\nimport { useWindowDimensions } from '../WindowDimensionsProvider';\nimport { acSetDashboardsFilter, acClearDashboardsFilter } from '../../actions/dashboardsFilter';\nimport { sGetDashboardsFilter } from '../../reducers/dashboardsFilter';\nimport isSmallScreen from '../../modules/isSmallScreen';\nimport classes from './styles/Filter.module.css';\nexport const KEYCODE_ENTER = 13;\nexport const KEYCODE_ESCAPE = 27;\nexport const FilterUnconnected = ({\n  clearDashboardsFilter,\n  filterText,\n  isMaxHeight,\n  setDashboardsFilter,\n  onKeypressEnter,\n  onToggleMaxHeight\n}) => {\n  const [focusedClassName, setFocusedClassName] = useState('');\n  const {\n    width\n  } = useWindowDimensions();\n\n  const setFilterValue = event => {\n    event.preventDefault();\n    setDashboardsFilter(event.target.value);\n  };\n\n  const onKeyUp = event => {\n    switch (event.keyCode) {\n      case KEYCODE_ENTER:\n        onKeypressEnter();\n        clearDashboardsFilter();\n        break;\n\n      case KEYCODE_ESCAPE:\n        clearDashboardsFilter();\n        break;\n\n      default:\n        break;\n    }\n  };\n\n  const onFocus = event => {\n    event.preventDefault();\n    setFocusedClassName(classes.focused);\n  };\n\n  const onBlur = event => {\n    event.preventDefault();\n    setFocusedClassName('');\n  };\n\n  return isSmallScreen(width) && !isMaxHeight ? <button className={classes.searchButton} onClick={onToggleMaxHeight}>\n            <SearchIcon className={classes.searchIcon} />\n        </button> : <div className={cx(classes.container, `${focusedClassName}`)} onFocus={onFocus} onBlur={onBlur}>\n            <SearchIcon className={classes.searchIcon} />\n            <input className={classes.input} type=\"text\" placeholder={i18n.t('Search for a dashboard')} onChange={setFilterValue} onKeyUp={onKeyUp} value={filterText} data-test=\"search-dashboard-input\" />\n            {filterText && <ClearButton onClear={clearDashboardsFilter} />}\n        </div>;\n};\nFilterUnconnected.propTypes = {\n  clearDashboardsFilter: PropTypes.func,\n  filterText: PropTypes.string,\n  isMaxHeight: PropTypes.bool,\n  setDashboardsFilter: PropTypes.func,\n  onKeypressEnter: PropTypes.func,\n  onToggleMaxHeight: PropTypes.func\n};\n\nconst mapStateToProps = state => ({\n  filterText: sGetDashboardsFilter(state)\n});\n\nconst mapDispatchToProps = {\n  setDashboardsFilter: acSetDashboardsFilter,\n  clearDashboardsFilter: acClearDashboardsFilter\n};\nexport default connect(mapStateToProps, mapDispatchToProps)(FilterUnconnected);","import { SET_DASHBOARDS_FILTER, CLEAR_DASHBOARDS_FILTER } from '../reducers/dashboardsFilter'; // actions\n\nexport const acSetDashboardsFilter = value => ({\n  type: SET_DASHBOARDS_FILTER,\n  value\n});\nexport const acClearDashboardsFilter = () => ({\n  type: CLEAR_DASHBOARDS_FILTER\n});","import React from 'react';\nexport const ChevronDown = () => <svg height=\"24\" viewBox=\"0 0 24 24\" width=\"24\" xmlns=\"http://www.w3.org/2000/svg\">\n        <path d=\"m11.29289 15.7071c.39053.3905 1.02369.3905 1.41422 0l4.99999-4.99999c.3905-.39053.3905-1.02369 0-1.41422-.3905-.39052-1.0237-.39052-1.4142 0l-4.2929 4.2929-4.29289-4.2929c-.39053-.39052-1.02369-.39052-1.41422 0-.39052.39053-.39052 1.02369 0 1.41422z\" fill=\"#a0adba\" />\n    </svg>;\nexport const ChevronUp = () => <svg height=\"24\" viewBox=\"0 0 24 24\" width=\"24\" xmlns=\"http://www.w3.org/2000/svg\">\n        <path d=\"m11.2928932 8.29289322c.360484-.36048396.927715-.3882135 1.3200062-.08318861l.0942074.08318861 5 4.99999998c.3905243.3905243.3905243 1.0236893 0 1.4142136-.360484.3604839-.927715.3882135-1.3200062.0831886l-.0942074-.0831886-4.2928932-4.2921068-4.29289322 4.2921068c-.36048396.3604839-.92771502.3882135-1.32000622.0831886l-.09420734-.0831886c-.36048396-.360484-.3882135-.927715-.08318861-1.3200062l.08318861-.0942074z\" fill=\"#a0adba\" />\n    </svg>;","import React from 'react';\nimport PropTypes from 'prop-types';\nimport i18n from '@dhis2/d2-i18n';\nimport { Tooltip } from '@dhis2/ui';\nimport { ChevronDown, ChevronUp } from './assets/icons';\nimport classes from './styles/ShowMoreButton.module.css';\nexport const SHOWMORE_BAR_HEIGHT = 16;\n\nconst ShowMoreButton = ({\n  onClick,\n  isMaxHeight,\n  disabled\n}) => {\n  const buttonLabel = isMaxHeight ? i18n.t('Show fewer dashboards') : i18n.t('Show more dashboards');\n  return <div className={classes.container}>\n            {disabled ? <div className={classes.disabled}>\n                    <ChevronDown />\n                </div> : <Tooltip content={buttonLabel} placement=\"bottom\">\n                    <button className={classes.showMore} onClick={onClick} data-test=\"showmore-button\" aria-label={buttonLabel}>\n                        {isMaxHeight ? <ChevronUp /> : <ChevronDown />}\n                    </button>\n                </Tooltip>}\n        </div>;\n};\n\nShowMoreButton.propTypes = {\n  disabled: PropTypes.bool,\n  isMaxHeight: PropTypes.bool,\n  onClick: PropTypes.func\n};\nexport default ShowMoreButton;","import { SHOWMORE_BAR_HEIGHT } from './ShowMoreButton';\nexport const CONTROL_BAR_ROW_HEIGHT = 40;\nexport const FIRST_ROW_PADDING_HEIGHT = 10;\nexport const MIN_ROW_COUNT = 1;\nexport const HEADERBAR_HEIGHT = 48;\nconst CONTROL_BAR_OUTER_HEIGHT_DIFF = FIRST_ROW_PADDING_HEIGHT + SHOWMORE_BAR_HEIGHT - 2; // 2 pixel \"adjustment\"\n\nexport const getRowsHeight = rows => {\n  return rows * CONTROL_BAR_ROW_HEIGHT;\n};\nexport const getNumRowsFromHeight = height => {\n  return Math.floor((height - CONTROL_BAR_OUTER_HEIGHT_DIFF) / CONTROL_BAR_ROW_HEIGHT);\n};\nexport const getControlBarHeight = rows => {\n  return getRowsHeight(rows) + CONTROL_BAR_OUTER_HEIGHT_DIFF;\n};","/** @module reducers/controlBar */\nimport { combineReducers } from 'redux';\nimport { validateReducer } from '../modules/util';\nexport const SET_CONTROLBAR_USER_ROWS = 'SET_CONTROLBAR_USER_ROWS';\nexport const DEFAULT_STATE_CONTROLBAR_ROWS = 1;\n\nconst userRows = (state = DEFAULT_STATE_CONTROLBAR_ROWS, action) => {\n  switch (action.type) {\n    case SET_CONTROLBAR_USER_ROWS:\n      return validateReducer(action.value, DEFAULT_STATE_CONTROLBAR_ROWS);\n\n    default:\n      return state;\n  }\n};\n\nexport default combineReducers({\n  userRows\n});\n/**\n * Selectors that point to specific props in the state object\n * @function\n * @param {Object} state\n * @returns {Object}\n */\n\nexport const sGetControlBarRoot = state => state.controlBar; // Selector dependency level 2\n\nexport const sGetControlBarUserRows = state => sGetControlBarRoot(state).userRows;","import { TEXT, SPACER } from './itemTypes';\nimport { getGridItemProperties } from '../components/ItemGrid/gridUtil';\nexport const spacerContent = 'SPACER_ITEM_FOR_DASHBOARD_LAYOUT_CONVENIENCE';\nexport const emptyTextItemContent = 'TEXT_ITEM_WITH_NO_CONTENT';\n\nconst isBackendSpacerType = item => item.type === TEXT && item.text === spacerContent;\n\nconst isUiSpacerType = item => item.type === SPACER;\n\nconst isTextType = item => item.type === TEXT && item.text !== spacerContent;\n\nexport const convertUiItemsToBackend = items => items.map(item => {\n  let text = null;\n\n  if (isUiSpacerType(item)) {\n    text = spacerContent;\n  } else if (isTextType(item)) {\n    text = item.text || emptyTextItemContent;\n  }\n\n  return { ...item,\n    ...(text ? {\n      text\n    } : {})\n  };\n});\nexport const convertBackendItemsToUi = items => items.map(item => {\n  const type = isBackendSpacerType(item) ? SPACER : item.type;\n  const gridProperties = getGridItemProperties(item.id);\n  const text = isTextType(item) ? item.text === emptyTextItemContent ? '' : item.text : null;\n  return { ...item,\n    ...(text !== null ? {\n      text\n    } : {}),\n    type,\n    ...gridProperties\n  };\n});","/** @module reducers/dashboards */\nimport arrayFrom from 'd2-utilizr/lib/arrayFrom';\nimport arraySort from 'd2-utilizr/lib/arraySort';\nimport { orArray, orObject } from '../modules/util';\nimport { convertBackendItemsToUi } from '../modules/uiBackendItemConverter';\nexport const SET_DASHBOARDS = 'SET_DASHBOARDS';\nexport const ADD_DASHBOARDS = 'ADD_DASHBOARDS';\nexport const SET_DASHBOARD_STARRED = 'SET_DASHBOARD_STARRED';\nexport const SET_DASHBOARD_DISPLAY_NAME = 'SET_DASHBOARD_DISPLAY_NAME';\nexport const SET_DASHBOARD_ITEMS = 'SET_DASHBOARD_ITEMS';\nexport const DEFAULT_STATE_DASHBOARDS = {\n  byId: null,\n  items: []\n};\nexport const EMPTY_DASHBOARD = {}; // reducer helper functions\n\nconst updateDashboardProp = ({\n  state,\n  dashboardId,\n  prop,\n  value\n}) => ({\n  byId: { ...state.byId,\n    [dashboardId]: { ...state.byId[dashboardId],\n      [prop]: value\n    }\n  },\n  items: state.items\n});\n/**\n * Reducer that computes and returns the new state based on the given action\n * @function\n * @param {Object} state The current state\n * @param {Object} action The action to be evaluated\n * @returns {Object}\n */\n\n\nexport default ((state = DEFAULT_STATE_DASHBOARDS, action) => {\n  switch (action.type) {\n    case SET_DASHBOARDS:\n      {\n        return {\n          byId: action.value,\n          items: []\n        };\n      }\n\n    case ADD_DASHBOARDS:\n      {\n        return { ...state,\n          byId: { ...state.byId,\n            ...action.value\n          }\n        };\n      }\n\n    case SET_DASHBOARD_STARRED:\n      {\n        return updateDashboardProp({\n          state,\n          dashboardId: action.dashboardId,\n          prop: 'starred',\n          value: action.value\n        });\n      }\n\n    case SET_DASHBOARD_DISPLAY_NAME:\n      {\n        return updateDashboardProp({\n          state,\n          dashboardId: action.dashboardId,\n          prop: 'displayName',\n          value: action.value\n        });\n      }\n\n    case SET_DASHBOARD_ITEMS:\n      {\n        return { ...state,\n          items: action.value\n        };\n      }\n\n    default:\n      return state;\n  }\n}); // root selector\n\nexport const sGetDashboardsRoot = state => state.dashboards; // selector level 1\n\n/**\n * Selector which returns a dashboard by id from the state object\n * If no matching dashboard is found it returns undefined\n * If dashboards.byId is null, then the dashboards api request\n * has not yet completed. If dashboards.byId is an empty object\n * then the dashboards api request is complete, but no dashboards\n * were returned\n *\n * @function\n * @param {Object} state The current state\n * @param {Number} id The id of the dashboard\n * @returns {Object | undefined}\n */\n\nexport const sGetDashboardById = (state, id) => orObject(sGetDashboardsRoot(state).byId)[id];\nexport const sDashboardsIsFetching = state => {\n  return sGetDashboardsRoot(state).byId === null;\n};\n/**\n * Selector which returns all dashboards (the byId object)\n *\n * @function\n * @param {Object} state The current state\n * @returns {Object | undefined}\n */\n\nexport const sGetAllDashboards = state => orObject(sGetDashboardsRoot(state).byId);\n/**\n * Selector which returns the current dashboard items\n *\n * @function\n * @param {Object} state The current state\n * @returns {Array}\n */\n\nexport const sGetDashboardItems = state => sGetDashboardsRoot(state).items; // selector level 2\n\nexport const sGetStarredDashboards = state => Object.values(sGetAllDashboards(state)).filter(dashboard => dashboard.starred === true);\nexport const sGetUnstarredDashboards = state => Object.values(sGetAllDashboards(state)).filter(dashboard => dashboard.starred === false); // selector level 3\n\nexport const sGetStarredDashboardIds = state => {\n  return sGetStarredDashboards(state).map(dashboard => dashboard.id);\n};\nexport const sGetUnstarredDashboardIds = state => sGetUnstarredDashboards(state).map(dashboard => dashboard.id);\nexport const sGetDashboardsSortedByStarred = state => [...arraySort(sGetStarredDashboards(state), 'ASC', 'displayName'), ...arraySort(sGetUnstarredDashboards(state), 'ASC', 'displayName')]; // utils\n\n/**\n * Returns the array of dashboards, customized for ui\n * @function\n * @param {Array} data The original dashboard list\n * @returns {Array}\n */\n\nexport const getCustomDashboards = data => arrayFrom(data).map(d => ({\n  id: d.id,\n  name: d.name,\n  displayName: d.displayName,\n  description: d.description,\n  displayDescription: d.displayDescription,\n  starred: d.favorite,\n  owner: d.user.name,\n  created: d.created.split('T').join(' ').substr(0, 16),\n  lastUpdated: d.lastUpdated.split('T').join(' ').substr(0, 16),\n  access: d.access,\n  numberOfItems: orArray(d.dashboardItems).length,\n  dashboardItems: convertBackendItemsToUi(d.dashboardItems)\n}));","/** @module reducers/selected */\nimport { combineReducers } from 'redux';\nimport { validateReducer } from '../modules/util';\nexport const SET_SELECTED_ID = 'SET_SELECTED_ID';\nexport const SET_SELECTED_ISLOADING = 'SET_SELECTED_ISLOADING';\nexport const SET_SELECTED_SHOWDESCRIPTION = 'SET_SELECTED_SHOWDESCRIPTION';\nexport const SET_SELECTED_ITEM_ACTIVE_TYPE = 'SET_SELECTED_ITEM_ACTIVE_TYPE';\nexport const CLEAR_SELECTED_ITEM_ACTIVE_TYPES = 'CLEAR_SELECTED_ITEM_ACTIVE_TYPES';\nexport const DEFAULT_STATE_SELECTED_ID = null;\nexport const DEFAULT_STATE_SELECTED_ISLOADING = false;\nexport const DEFAULT_STATE_SELECTED_SHOWDESCRIPTION = false;\nexport const DEFAULT_STATE_SELECTED_ITEM_ACTIVE_TYPES = {};\nexport const NON_EXISTING_DASHBOARD_ID = '0';\n/**\n * Reducer functions that computes and returns the new state based on the given action\n * @function\n * @param {Object} state The current state\n * @param {Object} action The action to be evaluated\n */\n\nconst id = (state = DEFAULT_STATE_SELECTED_ID, action) => {\n  switch (action.type) {\n    case SET_SELECTED_ID:\n      return validateReducer(action.value, DEFAULT_STATE_SELECTED_ID);\n\n    default:\n      return state;\n  }\n};\n\nconst isLoading = (state = DEFAULT_STATE_SELECTED_ISLOADING, action) => {\n  switch (action.type) {\n    case SET_SELECTED_ISLOADING:\n      return validateReducer(action.value, DEFAULT_STATE_SELECTED_ISLOADING);\n\n    default:\n      return state;\n  }\n};\n\nconst showDescription = (state = DEFAULT_STATE_SELECTED_SHOWDESCRIPTION, action) => {\n  switch (action.type) {\n    case SET_SELECTED_SHOWDESCRIPTION:\n      return validateReducer(action.value, DEFAULT_STATE_SELECTED_SHOWDESCRIPTION);\n\n    default:\n      return state;\n  }\n};\n\nconst itemActiveTypes = (state = DEFAULT_STATE_SELECTED_ITEM_ACTIVE_TYPES, action) => {\n  switch (action.type) {\n    case SET_SELECTED_ITEM_ACTIVE_TYPE:\n      {\n        return { ...state,\n          [action.id]: action.activeType\n        };\n      }\n\n    case CLEAR_SELECTED_ITEM_ACTIVE_TYPES:\n      {\n        return DEFAULT_STATE_SELECTED_ITEM_ACTIVE_TYPES;\n      }\n\n    default:\n      return state;\n  }\n};\n\nexport default combineReducers({\n  id,\n  isLoading,\n  showDescription,\n  itemActiveTypes\n}); // Selectors\n\nexport const sGetSelectedRoot = state => state.selected;\nexport const sGetSelectedId = state => sGetSelectedRoot(state).id;\nexport const sGetSelectedIsLoading = state => sGetSelectedRoot(state).isLoading;\nexport const sGetSelectedShowDescription = state => sGetSelectedRoot(state).showDescription;\nexport const sGetSelectedItemActiveType = (state, id) => sGetSelectedRoot(state).itemActiveTypes[id];","import { getInstance } from 'd2';\nexport const NAMESPACE = 'dashboard';\nexport const hasNamespace = async (d2) => await d2.currentUser.dataStore.has(NAMESPACE);\nexport const getNamespace = async (d2, hasNamespace) => hasNamespace ? await d2.currentUser.dataStore.get(NAMESPACE) : await d2.currentUser.dataStore.create(NAMESPACE);\nexport const apiPostUserDataStoreValue = async (key, value) => {\n  const d2 = await getInstance();\n  const ns = await getNamespace(d2, hasNamespace);\n  ns.set(key, value);\n};\nexport const apiGetUserDataStoreValue = async (key, defaultValue) => {\n  const d2 = await getInstance();\n  const namespace = await getNamespace(d2, await hasNamespace(d2));\n  const hasKey = namespace?.keys?.find(k => k === key);\n\n  if (hasKey) {\n    return await namespace.get(key);\n  } else {\n    await apiPostUserDataStoreValue(key, defaultValue, namespace);\n    console.log('(These errors to /userDataStore can be ignored)');\n    return defaultValue;\n  }\n};","import { apiGetUserDataStoreValue, apiPostUserDataStoreValue } from './userDataStore';\nimport { DEFAULT_STATE_CONTROLBAR_ROWS } from '../reducers/controlBar';\nconst KEY_CONTROLBAR_ROWS = 'controlBarRows';\nexport const apiGetControlBarRows = async () => await apiGetUserDataStoreValue(KEY_CONTROLBAR_ROWS, DEFAULT_STATE_CONTROLBAR_ROWS);\nexport const apiPostControlBarRows = async (value) => await apiPostUserDataStoreValue(KEY_CONTROLBAR_ROWS, value);","import { SET_CONTROLBAR_USER_ROWS } from '../reducers/controlBar';\nimport { apiGetControlBarRows } from '../api/controlBar'; // actions\n\nexport const acSetControlBarUserRows = rows => ({\n  type: SET_CONTROLBAR_USER_ROWS,\n  value: rows\n}); // thunks\n\nexport const tSetControlBarRows = () => async dispatch => {\n  const onSuccess = rows => {\n    dispatch(acSetControlBarUserRows(rows));\n  };\n\n  const onError = error => {\n    console.log('Error (apiGetControlBarRows): ', error);\n    return error;\n  };\n\n  try {\n    const controlBarRows = await apiGetControlBarRows();\n    return onSuccess(controlBarRows);\n  } catch (err) {\n    return onError(err);\n  }\n};","import React, { useState, useEffect, createRef } from 'react';\nimport { connect } from 'react-redux';\nimport { Link, withRouter } from 'react-router-dom';\nimport cx from 'classnames';\nimport arraySort from 'd2-utilizr/lib/arraySort';\nimport PropTypes from 'prop-types';\nimport ControlBar, { DRAG_HANDLE_HEIGHT } from './ControlBar';\nimport Chip from './DashboardItemChip';\nimport AddCircleIcon from '../../icons/AddCircle';\nimport Filter from './Filter';\nimport ShowMoreButton from './ShowMoreButton';\nimport { FIRST_ROW_PADDING_HEIGHT, MIN_ROW_COUNT, getRowsHeight, getControlBarHeight, getNumRowsFromHeight } from './controlBarDimensions';\nimport { useWindowDimensions } from '../WindowDimensionsProvider';\nimport { sGetDashboardsFilter } from '../../reducers/dashboardsFilter';\nimport { sGetControlBarUserRows } from '../../reducers/controlBar';\nimport { sGetAllDashboards } from '../../reducers/dashboards';\nimport { sGetSelectedId } from '../../reducers/selected';\nimport { acSetControlBarUserRows } from '../../actions/controlBar';\nimport { apiPostControlBarRows } from '../../api/controlBar';\nimport isSmallScreen from '../../modules/isSmallScreen';\nimport classes from './styles/DashboardsBar.module.css';\nexport const MAX_ROW_COUNT = 10;\n\nconst DashboardsBar = ({\n  userRows,\n  onChangeHeight,\n  history,\n  dashboards,\n  selectedId,\n  filterText\n}) => {\n  const [rows, setRows] = useState(userRows);\n  const {\n    width\n  } = useWindowDimensions();\n  const ref = createRef();\n  useEffect(() => {\n    setRows(userRows);\n  }, [userRows]);\n\n  const isMaxHeight = () => rows === MAX_ROW_COUNT;\n\n  const adjustHeight = newHeight => {\n    const newRows = Math.max(MIN_ROW_COUNT, getNumRowsFromHeight(newHeight - 52) // don't rush the transition to a bigger row count\n    );\n\n    if (newRows !== rows) {\n      onChangeHeight(Math.min(newRows, MAX_ROW_COUNT));\n    }\n  };\n\n  const onEndDrag = () => apiPostControlBarRows(rows);\n\n  const scrollToTop = () => {\n    if (isMaxHeight()) {\n      ref.current.scroll(0, 0);\n    }\n  };\n\n  const toggleMaxHeight = () => {\n    const newRows = isMaxHeight() ? userRows : MAX_ROW_COUNT;\n    scrollToTop();\n    setRows(newRows);\n  };\n\n  const cancelMaxHeight = () => {\n    scrollToTop();\n    setRows(userRows);\n  };\n\n  const onSelectDashboard = () => {\n    const id = getFilteredDashboards()[0]?.id;\n\n    if (id) {\n      history.push(id);\n    }\n  };\n\n  const getFilteredDashboards = () => {\n    const filteredDashboards = arraySort(Object.values(dashboards).filter(d => d.displayName.toLowerCase().includes(filterText.toLowerCase())), 'ASC', 'displayName');\n    return [...filteredDashboards.filter(d => d.starred), ...filteredDashboards.filter(d => !d.starred)];\n  };\n\n  const containerClass = cx(classes.container, isMaxHeight() ? classes.expanded : classes.collapsed);\n  const viewableRows = isSmallScreen(width) && !isMaxHeight() ? MIN_ROW_COUNT : rows;\n  const rowHeightProp = {\n    height: getRowsHeight(viewableRows) + FIRST_ROW_PADDING_HEIGHT\n  };\n\n  const getDashboardChips = () => {\n    const chips = getFilteredDashboards().map(dashboard => <Chip key={dashboard.id} label={dashboard.displayName} starred={dashboard.starred} dashboardId={dashboard.id} selected={dashboard.id === selectedId} onClick={cancelMaxHeight} />);\n\n    if (isSmallScreen(width)) {\n      const chipContainerClasses = cx(classes.chipContainer, isMaxHeight() ? classes.expanded : classes.collapsed);\n      return <div className={chipContainerClasses} style={rowHeightProp}>\n                    {chips}\n                </div>;\n    } else {\n      return chips;\n    }\n  };\n\n  return <>\n            <ControlBar height={getControlBarHeight(viewableRows)} onChangeHeight={!isSmallScreen(width) ? adjustHeight : null} onEndDrag={onEndDrag}>\n                <div className={containerClass} ref={ref} style={rowHeightProp}>\n                    <div className={classes.controls}>\n                        <Link className={classes.newLink} to={'/new'} data-test=\"link-new-dashboard\">\n                            <AddCircleIcon />\n                        </Link>\n                        <Filter onKeypressEnter={onSelectDashboard} onToggleMaxHeight={toggleMaxHeight} isMaxHeight={isMaxHeight()} />\n                    </div>\n                    {getDashboardChips()}\n                </div>\n                <ShowMoreButton onClick={toggleMaxHeight} isMaxHeight={isMaxHeight()} disabled={userRows === MAX_ROW_COUNT} />\n            </ControlBar>\n            <div style={{\n      marginTop: getControlBarHeight(isSmallScreen(width) && !isMaxHeight() ? MIN_ROW_COUNT : userRows) + DRAG_HANDLE_HEIGHT\n    }} />\n        </>;\n};\n\nDashboardsBar.propTypes = {\n  dashboards: PropTypes.object,\n  filterText: PropTypes.string,\n  history: PropTypes.object,\n  selectedId: PropTypes.string,\n  userRows: PropTypes.number,\n  onChangeHeight: PropTypes.func\n};\n\nconst mapStateToProps = state => ({\n  dashboards: sGetAllDashboards(state),\n  filterText: sGetDashboardsFilter(state),\n  selectedId: sGetSelectedId(state),\n  userRows: sGetControlBarUserRows(state)\n});\n\nconst mapDispatchToProps = {\n  onChangeHeight: acSetControlBarUserRows\n};\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(DashboardsBar));","import React from 'react';\nimport { colors } from '@dhis2/ui';\nimport PropTypes from 'prop-types';\n\nconst NoContentMessage = ({\n  text\n}) => <div style={{\n  padding: '50px 10px',\n  textAlign: 'center',\n  fontSize: '15px',\n  fontWeight: 500,\n  color: colors.grey600\n}}>\n        {text}\n    </div>;\n\nNoContentMessage.propTypes = {\n  text: PropTypes.string\n};\nexport default NoContentMessage;","import React from 'react';\nimport { colors } from '@dhis2/ui';\nexport const ThreeDots = () => <svg height=\"18\" viewBox=\"0 0 18 18\" width=\"18\" xmlns=\"http://www.w3.org/2000/svg\">\n        <path d=\"m4 7.5c-.83 0-1.5.67-1.5 1.5s.67 1.5 1.5 1.5 1.5-.67 1.5-1.5-.67-1.5-1.5-1.5zm10 0c-.83 0-1.5.67-1.5 1.5s.67 1.5 1.5 1.5 1.5-.67 1.5-1.5-.67-1.5-1.5-1.5zm-5 0c-.83 0-1.5.67-1.5 1.5s.67 1.5 1.5 1.5 1.5-.67 1.5-1.5-.67-1.5-1.5-1.5z\" fill=\"#6e7a8a\" />\n    </svg>;\nexport const SpeechBubble = () => <svg height=\"20\" viewBox=\"0 0 20 20\" width=\"20\" xmlns=\"http://www.w3.org/2000/svg\" style={{\n  margin: '3px 2px 0 2px'\n}} // Temporary fix for the misaligned icon, should be removed once the icon is replaced\n>\n        <path d=\"m20 2h-16c-1.1 0-1.99.9-1.99 2l-.01 18 4-4h14c1.1 0 2-.9 2-2v-12c0-1.1-.9-2-2-2zm-2 12h-12v-2h12zm0-3h-12v-2h12zm0-3h-12v-2h12z\" fill=\"#6e7a8a\" fillRule=\"evenodd\" transform=\"translate(-2 -2)\" />\n    </svg>;\nexport const Warning = () => <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24\" viewBox=\"0 0 24 24\" width=\"24\" fill={colors.grey600}>\n        <path d=\"M0 0h24v24H0z\" fill=\"none\" />\n        <path d=\"M1 21h22L12 2 1 21zm12-3h-2v-2h2v2zm0-4h-2v-4h2v4z\" />\n    </svg>;\nexport const Fullscreen = () => <svg height=\"16\" viewBox=\"0 0 16 16\" width=\"16\" xmlns=\"http://www.w3.org/2000/svg\">\n        <path d=\"m6.85355339 9.14644661c.17356635.17356635.1928515.44299075.05785545.63785889l-.05785545.06924789-4.14755339 4.14644661h2.794c.24545989 0 .44960837.1768752.49194433.4101244l.00805567.0898756c0 .2454599-.17687516.4496084-.41012437.4919443l-.08987563.0080557h-4c-.24545989 0-.44960837-.1768752-.49194433-.4101244l-.00805567-.0898756v-4c0-.2761424.22385763-.5.5-.5.24545989 0 .44960837.1768752.49194433.4101244l.00805567.0898756v2.792l4.14644661-4.14555339c.19526215-.19526215.51184463-.19526215.70710678 0zm6.14644661-2.14644661v6h-6v-1h5v-5zm-4-4v1h-5v5h-1v-6zm5.5-2c.2454599 0 .4496084.17687516.4919443.41012437l.0080557.08987563v4c0 .27614237-.2238576.5-.5.5-.2454599 0-.4496084-.17687516-.4919443-.41012437l-.0080557-.08987563v-2.794l-4.14644661 4.14755339c-.19526215.19526215-.51184463.19526215-.70710678 0-.17356635-.17356635-.1928515-.44299075-.05785545-.63785889l.05785545-.06924789 4.14655339-4.14744661-2.793.001c-.2454599 0-.4496084-.17687516-.4919443-.41012437l-.0080557-.08987563c0-.24545989.1768752-.44960837.4101244-.49194433l.0898756-.00805567z\" fill=\"inherit\" />\n    </svg>;\nexport const ExitFullscreen = () => <svg height=\"16\" viewBox=\"0 0 16 16\" width=\"16\" xmlns=\"http://www.w3.org/2000/svg\">\n        <path d=\"m6.5 9c.24545989 0 .44960837.17687516.49194433.41012437l.00805567.08987563v4c0 .2761424-.22385763.5-.5.5-.24545989 0-.44960837-.1768752-.49194433-.4101244l-.00805567-.0898756v-2.794l-3.64644661 3.6475534c-.19526215.1952621-.51184463.1952621-.70710678 0-.17356635-.1735664-.1928515-.4429908-.05785545-.6378589l.05785545-.0692479 3.64555339-3.6464466h-2.792c-.24545989 0-.44960837-.17687516-.49194433-.41012437l-.00805567-.08987563c0-.24545989.17687516-.44960837.41012437-.49194433l.08987563-.00805567zm7.5-.5v5.5h-5.5v-1h4.5v-4.5zm-6.5-6.5v1h-4.5v4.5h-1v-5.5zm6.8535534-.35355339c.1735663.17356635.1928515.44299075.0578554.63785889l-.0578554.06924789-3.6475534 3.64644661h2.794c.2454599 0 .4496084.17687516.4919443.41012437l.0080557.08987563c0 .24545989-.1768752.44960837-.4101244.49194433l-.0898756.00805567h-4c-.24545989 0-.44960837-.17687516-.49194433-.41012437l-.00805567-.08987563v-4c0-.27614237.22385763-.5.5-.5.24545989 0 .44960837.17687516.49194433.41012437l.00805567.08987563v2.792l3.6464466-3.64555339c.1952622-.19526215.5118446-.19526215.7071068 0z\" fill=\"inherit\" />\n    </svg>;","export const RECEIVED_USER = 'RECEIVED_USER';\nexport const DEFAULT_STATE_USER = {\n  id: '',\n  username: '',\n  uiLocale: '',\n  isSuperuser: false\n};\nexport default ((state = DEFAULT_STATE_USER, action) => {\n  switch (action.type) {\n    case RECEIVED_USER:\n      {\n        return fromD2ToUserObj(action.value);\n      }\n\n    default:\n      return state;\n  }\n});\n\nfunction fromD2ToUserObj(d2Object) {\n  return {\n    id: d2Object.id,\n    username: d2Object.username,\n    uiLocale: d2Object.settings.keyUiLocale,\n    isSuperuser: d2Object.authorities.has('ALL')\n  };\n} // selectors\n\n\nexport const sGetUserId = state => state.user.id;\nexport const sGetUserUsername = state => state.user.username;\nexport const sGetIsSuperuser = state => state.user.isSuperuser;\nexport const sGetUiLocale = state => state.user.uiLocale;","import { getDimensionById, DIMENSION_ID_PERIOD, DIMENSION_ID_ORGUNIT } from '@dhis2/analytics';\nexport const SET_DIMENSIONS = 'SET_DIMENSIONS';\nexport const DEFAULT_DIMENSIONS = [getDimensionById(DIMENSION_ID_PERIOD), getDimensionById(DIMENSION_ID_ORGUNIT)];\nexport default ((state = DEFAULT_DIMENSIONS, action) => {\n  switch (action.type) {\n    case SET_DIMENSIONS:\n      {\n        return [...DEFAULT_DIMENSIONS, ...action.value];\n      }\n\n    default:\n      return state;\n  }\n});\nexport const sGetDimensions = state => state.dimensions;","import { sGetDimensions } from './dimensions';\nimport { createSelector } from 'reselect';\nexport const CLEAR_ITEM_FILTERS = 'CLEAR_ITEM_FILTERS';\nexport const SET_ITEM_FILTERS = 'SET_ITEM_FILTERS';\nexport const ADD_ITEM_FILTER = 'ADD_ITEM_FILTER';\nexport const REMOVE_ITEM_FILTER = 'REMOVE_ITEM_FILTER';\nexport const DEFAULT_STATE_ITEM_FILTERS = {};\nexport default ((state = DEFAULT_STATE_ITEM_FILTERS, action) => {\n  switch (action.type) {\n    case ADD_ITEM_FILTER:\n      {\n        return { ...state,\n          [action.filter.id]: action.filter.value\n        };\n      }\n\n    case REMOVE_ITEM_FILTER:\n      {\n        const newState = { ...state\n        };\n        delete newState[action.id];\n        return newState;\n      }\n\n    case SET_ITEM_FILTERS:\n      {\n        return action.filters;\n      }\n\n    case CLEAR_ITEM_FILTERS:\n      {\n        return DEFAULT_STATE_ITEM_FILTERS;\n      }\n\n    default:\n      return state;\n  }\n}); // selectors\n\nexport const sGetItemFiltersRoot = state => state.itemFilters; // simplify the filters structure to:\n// [{ id: 'pe', name: 'Period', values: [{ id: 2019: name: '2019' }, {id: 'LAST_MONTH', name: 'Last month' }]}, ...]\n\nexport const sGetNamedItemFilters = createSelector([sGetItemFiltersRoot, sGetDimensions], (filters, dimensions) => Object.keys(filters).reduce((arr, id) => {\n  arr.push({\n    id: id,\n    name: dimensions.find(dimension => dimension.id === id).name,\n    values: filters[id].map(value => ({\n      id: value.id,\n      name: value.displayName || value.name\n    }))\n  });\n  return arr;\n}, []));","import { ADD_ITEM_FILTER, REMOVE_ITEM_FILTER, SET_ITEM_FILTERS, CLEAR_ITEM_FILTERS } from '../reducers/itemFilters';\nexport const FILTER_ORG_UNIT = 'ou'; // actions\n\nexport const acAddItemFilter = filter => ({\n  type: ADD_ITEM_FILTER,\n  filter\n});\nexport const acRemoveItemFilter = id => ({\n  type: REMOVE_ITEM_FILTER,\n  id\n});\nexport const acClearItemFilters = () => ({\n  type: CLEAR_ITEM_FILTERS\n});\nexport const acSetItemFilters = filters => ({\n  type: SET_ITEM_FILTERS,\n  filters\n});","import update from 'immutability-helper';\nimport { arrayToIdMap } from '../modules/util';\nexport const RECEIVED_MESSAGES = 'RECEIVED_MESSAGES';\nexport default ((state = {}, action) => {\n  switch (action.type) {\n    case RECEIVED_MESSAGES:\n      {\n        const conversations = arrayToIdMap(action.value);\n        const newState = update(state, {\n          $merge: conversations\n        });\n        return newState;\n      }\n\n    default:\n      return state;\n  }\n}); // selectors\n\nexport const sGetMessagesRoot = state => state.messages;","export const messageConversationsQuery = {\n  resource: 'messageConversations',\n  params: {\n    fields: 'id,messageCount,lastUpdated,messageType,displayName,read,messages[id,read,sender[id,displayName],text,lastUpdated]',\n    order: 'read:asc',\n    pageSize: 200\n  }\n};\nexport const getMessages = async dataEngine => {\n  try {\n    const {\n      messageConversations\n    } = await dataEngine.query({\n      messageConversations: messageConversationsQuery\n    });\n    return messageConversations.messageConversations;\n  } catch (error) {\n    console.log('Error:', error);\n  }\n};","import { RECEIVED_MESSAGES } from '../../../reducers/messages';\nimport { getMessages } from '../../../api/messages';\n\nconst onError = (action, error) => {\n  console.log(`Error in action ${action}: ${error}`);\n  return error;\n};\n\nexport const receivedMessages = value => ({\n  type: RECEIVED_MESSAGES,\n  value\n});\nexport const tGetMessages = dataEngine => async dispatch => {\n  try {\n    const messageConversations = await getMessages(dataEngine);\n    return dispatch(receivedMessages(messageConversations));\n  } catch (err) {\n    return onError('Get Messages', err);\n  }\n};","export const SET_ALERT_MESSAGE = 'SET_ALERT_MESSAGE';\nexport const CLEAR_ALERT_MESSAGE = 'CLEAR_ALERT_MESSAGE';\nexport const DEFAULT_STATE_ALERT = null;\nexport default ((state = DEFAULT_STATE_ALERT, action) => {\n  switch (action.type) {\n    case SET_ALERT_MESSAGE:\n      {\n        return action.value;\n      }\n\n    case CLEAR_ALERT_MESSAGE:\n      {\n        return DEFAULT_STATE_ALERT;\n      }\n\n    default:\n      return state;\n  }\n}); // selectors\n\nexport const sGetAlertMessage = state => state.alert;","import { SET_ALERT_MESSAGE, CLEAR_ALERT_MESSAGE } from '../reducers/alert';\nexport const acSetAlertMessage = value => ({\n  type: SET_ALERT_MESSAGE,\n  value\n});\nexport const acClearAlertMessage = () => ({\n  type: CLEAR_ALERT_MESSAGE\n});","import { orObject } from '../modules/util';\nimport objectClean from 'd2-utilizr/lib/objectClean';\n/** @module reducers/visualizations */\n\nexport const ADD_VISUALIZATION = 'ADD_VISUALIZATION';\nexport const SET_ACTIVE_VISUALIZATION_TYPE = 'SET_ACTIVE_VISUALIZATION_TYPE';\nexport const CLEAR_VISUALIZATIONS = 'CLEAR_VISUALIZATIONS';\nexport const DEFAULT_STATE_VISUALIZATIONS = {};\n\nconst isEmpty = p => p === undefined || p === null;\n\nexport default ((state = DEFAULT_STATE_VISUALIZATIONS, action) => {\n  switch (action.type) {\n    case ADD_VISUALIZATION:\n      {\n        return { ...state,\n          [action.value.id]: objectClean({ ...orObject(state[action.value.id]),\n            ...action.value\n          }, isEmpty)\n        };\n      }\n\n    case CLEAR_VISUALIZATIONS:\n      {\n        return DEFAULT_STATE_VISUALIZATIONS;\n      }\n\n    default:\n      return state;\n  }\n}); // root selector\n\nexport const sGetVisualizationsRoot = state => state.visualizations; // selectors level 1\n\nexport const sGetVisualization = (state, id) => {\n  return sGetVisualizationsRoot(state)[id];\n};","import { ADD_VISUALIZATION, CLEAR_VISUALIZATIONS } from '../reducers/visualizations';\nexport const acAddVisualization = value => ({\n  type: ADD_VISUALIZATION,\n  value\n});\nexport const acClearVisualizations = () => ({\n  type: CLEAR_VISUALIZATIONS\n});","import { getInstance } from 'd2';\nimport arrayClean from 'd2-utilizr/lib/arrayClean';\nimport { getEndPointName, MAP } from '../modules/itemTypes';\nimport { getVisualizationId } from '../modules/item'; // Id, name\n\nexport const getIdNameFields = ({\n  rename\n} = {}) => ['id', `${rename ? 'displayName~rename(name)' : 'name,displayName'}`]; // Item\n\nexport const getItemFields = () => ['dimensionItem~rename(id)', 'displayName~rename(name)', 'dimensionItemType']; // Dimension\n\nexport const getDimensionFields = ({\n  withItems\n}) => arrayClean(['dimension', 'legendSet[id]', 'filter', 'programStage', withItems ? `items[${getItemFields().join(',')}]` : ``]); // Axis\n\nexport const getAxesFields = ({\n  withItems\n}) => [`columns[${getDimensionFields({\n  withItems\n}).join(',')}]`, `rows[${getDimensionFields({\n  withItems\n}).join(',')}]`, `filters[${getDimensionFields({\n  withItems\n}).join(',')}]`]; // Favorite\n\nexport const getFavoriteFields = ({\n  withDimensions,\n  withOptions\n}) => {\n  return arrayClean([`${getIdNameFields({\n    rename: true\n  }).join(',')}`, 'displayDescription~rename(description)', withDimensions ? `${getAxesFields({\n    withItems: true\n  }).join(',')}` : ``, withOptions ? ['*', '!attributeDimensions', '!attributeValues', '!category', '!categoryDimensions', '!categoryOptionGroupSetDimensions', '!columnDimensions', '!dataDimensionItems', '!dataElementDimensions', '!dataElementGroupSetDimensions', '!filterDimensions', '!itemOrganisationUnitGroups', '!lastUpdatedBy', '!organisationUnitGroupSetDimensions', '!organisationUnitLevels', '!organisationUnits', '!programIndicatorDimensions', '!relativePeriods', '!reportParams', '!rowDimensions', '!translations', '!userOrganisationUnit', '!userOrganisationUnitChildren', '!userOrganisationUnitGrandChildren'].join(',') : '']);\n};\nexport const getFavoritesFields = ({\n  withDimensions\n}) => [`reportTable[${getFavoriteFields({\n  withDimensions\n}).join(',')}]`, `chart[${['type', ...getFavoriteFields({\n  withDimensions\n})].join(',')}]`, `map[${getFavoriteFields({\n  withDimensions\n}).join(',')}]`, `eventReport[${getFavoriteFields({\n  withDimensions\n}).join(',')}]`, `eventChart[${getFavoriteFields({\n  withDimensions\n}).join(',')}]`]; // List item\n\nexport const getListItemFields = () => [`reports[${['type', ...getIdNameFields({\n  rename: true\n})].join(',')}]`, `resources[${getIdNameFields({\n  rename: true\n}).join(',')}]`, `users[${getIdNameFields({\n  rename: true\n}).join(',')}]`]; // Map\n\nexport const getMapFields = () => [`${getIdNameFields({\n  rename: true\n}).join(',')}`, 'user,longitude,latitude,zoom,basemap', `mapViews[${getFavoriteFields({\n  withDimensions: true,\n  withOptions: true\n})}]`]; // Api\n\nexport const apiFetchVisualization = async item => {\n  const id = getVisualizationId(item);\n  const fields = item.type === MAP ? getMapFields() : getFavoriteFields({\n    withDimensions: true,\n    withOptions: true\n  });\n  const d2 = await getInstance();\n  return await d2.Api.getApi().get(`${getEndPointName(item.type)}/${id}`, {\n    fields\n  });\n};","import arrayClean from 'd2-utilizr/lib/arrayClean';\nimport { getListItemFields, getFavoritesFields, getIdNameFields } from './metadata'; // Helper functions\n\nexport const onError = error => console.log('Error: ', error); // Dashboard item\n\nexport const getDashboardItemsFields = ({\n  withFavorite\n} = {}) => arrayClean(['id', 'type', 'shape', 'x', 'y', 'width~rename(w)', 'height~rename(h)', 'messages', 'text', 'appKey', `${getListItemFields().join(',')}`, withFavorite ? `${getFavoritesFields({\n  withDimensions: withFavorite.withDimensions\n}).join(',')}` : ``]); // Dashboard\n\nexport const getDashboardFields = ({\n  withItems,\n  withFavorite\n} = {}) => arrayClean([`${getIdNameFields().join(',')}`, 'description', 'displayDescription', 'favorite', `user[${getIdNameFields({\n  rename: true\n}).join(',')}]`, 'created', 'lastUpdated', 'access', 'href', // needed for d2-ui-translations-dialog, since we don't pass a d2 Model anymore\nwithItems ? `dashboardItems[${getDashboardItemsFields({\n  withFavorite\n}).join(',')}]` : ``]);","import arrayClean from 'd2-utilizr/lib/arrayClean';\nimport { onError, getDashboardFields } from './index';\nexport const dashboardsQuery = {\n  resource: 'dashboards',\n  params: {\n    fields: [getDashboardFields(), 'dashboardItems[id]'].join(','),\n    paging: false\n  }\n};\nexport const dashboardQuery = {\n  resource: 'dashboards',\n  id: ({\n    id\n  }) => id,\n  params: {\n    fields: arrayClean(getDashboardFields({\n      withItems: true,\n      withFavorite: {\n        withDimensions: false\n      }\n    })).join(',')\n  }\n};\nexport const starDashboardMutation = {\n  type: 'create',\n  resource: 'dashboards',\n  // TODO create mutation does not accept the id function\n  // we must use a workaround until dataEngine supports dynamic resource/path\n  id: ({\n    id\n  }) => `${id}/favorite`\n};\nexport const unstarDashboardMutation = {\n  type: 'delete',\n  resource: 'dashboards',\n  id: ({\n    id\n  }) => `${id}/favorite`\n};\nexport const deleteDashboardMutation = {\n  type: 'delete',\n  resource: 'dashboards',\n  id: ({\n    id\n  }) => id\n}; // Get \"all\" dashboards on startup\n\nexport const apiFetchDashboards = async dataEngine => {\n  try {\n    const dashboardsData = await dataEngine.query({\n      dashboards: dashboardsQuery\n    });\n    return dashboardsData.dashboards.dashboards;\n  } catch (error) {\n    onError(error);\n  }\n}; // Get more info about selected dashboard\n\nexport const apiFetchDashboard = async (dataEngine, id) => {\n  try {\n    const dashboardData = await dataEngine.query({\n      dashboard: dashboardQuery\n    }, {\n      variables: {\n        id\n      }\n    });\n    return dashboardData.dashboard;\n  } catch (error) {\n    onError(error);\n  }\n}; // Star dashboard\n\nexport const apiStarDashboard = async (dataEngine, id, isStarred) => {\n  try {\n    if (isStarred) {\n      await dataEngine.mutate(starDashboardMutation, {\n        variables: {\n          id\n        }\n      });\n    } else {\n      await dataEngine.mutate(unstarDashboardMutation, {\n        variables: {\n          id\n        }\n      });\n    }\n  } catch (error) {\n    onError(error);\n  }\n};\nexport const apiDeleteDashboard = async (dataEngine, id) => {\n  try {\n    await dataEngine.mutate(deleteDashboardMutation, {\n      variables: {\n        id\n      }\n    });\n  } catch (error) {\n    onError(error);\n  }\n};","import { apiGetUserDataStoreValue, apiPostUserDataStoreValue } from './userDataStore';\nimport { DEFAULT_STATE_SELECTED_SHOWDESCRIPTION } from '../reducers/selected';\nconst KEY_SHOW_DESCRIPTION = 'showDescription';\nexport const apiGetShowDescription = async () => await apiGetUserDataStoreValue(KEY_SHOW_DESCRIPTION, DEFAULT_STATE_SELECTED_SHOWDESCRIPTION);\nexport const apiPostShowDescription = async (value) => await apiPostUserDataStoreValue(KEY_SHOW_DESCRIPTION, value);","import i18n from '@dhis2/d2-i18n';\nimport { getCustomDashboards, sGetDashboardById } from '../reducers/dashboards';\nimport { SET_SELECTED_ID, SET_SELECTED_ISLOADING, SET_SELECTED_SHOWDESCRIPTION, SET_SELECTED_ITEM_ACTIVE_TYPE, CLEAR_SELECTED_ITEM_ACTIVE_TYPES, sGetSelectedIsLoading, sGetSelectedId } from '../reducers/selected';\nimport { sGetUserUsername } from '../reducers/user';\nimport { acSetDashboardItems, acAppendDashboards } from './dashboards';\nimport { acClearItemFilters } from './itemFilters';\nimport { tGetMessages } from '../components/Item/MessagesItem/actions';\nimport { acSetAlertMessage, acClearAlertMessage } from './alert';\nimport { acAddVisualization, acClearVisualizations } from './visualizations';\nimport { apiFetchDashboard } from '../api/dashboards';\nimport { storePreferredDashboardId } from '../api/localStorage';\nimport { apiGetShowDescription, apiPostShowDescription } from '../api/description';\nimport { withShape } from '../components/ItemGrid/gridUtil';\nimport { getVisualizationFromItem } from '../modules/item';\nimport { REPORT_TABLE, CHART, MAP, EVENT_REPORT, EVENT_CHART, MESSAGES } from '../modules/itemTypes'; // actions\n\nexport const acSetSelectedId = value => ({\n  type: SET_SELECTED_ID,\n  value\n});\nexport const acSetSelectedIsLoading = value => ({\n  type: SET_SELECTED_ISLOADING,\n  value\n});\nexport const acSetSelectedShowDescription = value => ({\n  type: SET_SELECTED_SHOWDESCRIPTION,\n  value\n});\nexport const acSetSelectedItemActiveType = (id, activeType) => {\n  const action = {\n    type: SET_SELECTED_ITEM_ACTIVE_TYPE,\n    id,\n    activeType\n  };\n  return action;\n};\nexport const acClearSelectedItemActiveTypes = () => ({\n  type: CLEAR_SELECTED_ITEM_ACTIVE_TYPES\n}); // thunks\n\nexport const tSetSelectedDashboardById = id => async (dispatch, getState, dataEngine) => {\n  dispatch(acSetSelectedIsLoading(true));\n  const alertTimeout = setTimeout(() => {\n    const name = sGetDashboardById(getState(), id)?.displayName;\n\n    if (sGetSelectedIsLoading(getState()) && name) {\n      dispatch(acSetAlertMessage(i18n.t('Loading dashboard – {{name}}', {\n        name\n      })));\n    }\n  }, 500);\n\n  const onSuccess = selected => {\n    dispatch(acAppendDashboards(selected));\n    const customDashboard = getCustomDashboards(selected)[0];\n    dispatch(acSetDashboardItems(withShape(customDashboard.dashboardItems)));\n    storePreferredDashboardId(sGetUserUsername(getState()), id);\n\n    if (id !== sGetSelectedId(getState())) {\n      dispatch(acClearItemFilters());\n      dispatch(acClearVisualizations());\n      dispatch(acClearSelectedItemActiveTypes());\n    }\n\n    customDashboard.dashboardItems.forEach(item => {\n      switch (item.type) {\n        case REPORT_TABLE:\n        case CHART:\n        case MAP:\n        case EVENT_REPORT:\n        case EVENT_CHART:\n          dispatch(acAddVisualization(getVisualizationFromItem(item)));\n          break;\n\n        case MESSAGES:\n          dispatch(tGetMessages(dataEngine));\n          break;\n\n        default:\n          break;\n      }\n    });\n    dispatch(acSetSelectedId(id));\n    dispatch(acSetSelectedIsLoading(false));\n    clearTimeout(alertTimeout);\n    dispatch(acClearAlertMessage());\n    return selected;\n  };\n\n  const onError = error => {\n    console.log('Error: ', error);\n    return error;\n  };\n\n  try {\n    const dashboard = await apiFetchDashboard(dataEngine, id);\n    return onSuccess(dashboard);\n  } catch (err) {\n    return onError(err);\n  }\n};\nexport const tSetShowDescription = () => async dispatch => {\n  const onSuccess = value => {\n    dispatch(acSetSelectedShowDescription(value));\n  };\n\n  const onError = error => {\n    console.log('Error (apiGetShowDescription): ', error);\n    return error;\n  };\n\n  try {\n    const showDescription = await apiGetShowDescription();\n    return onSuccess(showDescription);\n  } catch (err) {\n    return onError(err);\n  }\n};\nexport const tUpdateShowDescription = value => async dispatch => {\n  const onSuccess = () => {\n    dispatch(acSetSelectedShowDescription(value));\n  };\n\n  const onError = error => {\n    console.log('Error (apiGetShowDescription): ', error);\n    return error;\n  };\n\n  try {\n    await apiPostShowDescription(value);\n    return onSuccess();\n  } catch (err) {\n    return onError(err);\n  }\n};","export const getPreferredDashboardId = username => localStorage.getItem(`dhis2.dashboard.current.${username}`) || undefined;\nexport const storePreferredDashboardId = (username, dashboardId) => {\n  localStorage.setItem(`dhis2.dashboard.current.${username}`, dashboardId);\n};","import { SET_DASHBOARDS, ADD_DASHBOARDS, SET_DASHBOARD_STARRED, SET_DASHBOARD_DISPLAY_NAME, SET_DASHBOARD_ITEMS } from '../reducers/dashboards';\nimport { getCustomDashboards, sGetDashboardById, sGetDashboardsSortedByStarred } from '../reducers/dashboards';\nimport { NON_EXISTING_DASHBOARD_ID } from '../reducers/selected';\nimport { sGetUserUsername } from '../reducers/user';\nimport { tSetSelectedDashboardById, acSetSelectedId } from './selected';\nimport { apiFetchDashboards, apiStarDashboard, apiDeleteDashboard } from '../api/dashboards';\nimport { getPreferredDashboardId } from '../api/localStorage';\nimport { arrayToIdMap } from '../modules/util'; // actions\n\nexport const acSetDashboards = dashboards => ({\n  type: SET_DASHBOARDS,\n  value: arrayToIdMap(getCustomDashboards(dashboards))\n});\nexport const acAppendDashboards = dashboards => ({\n  type: ADD_DASHBOARDS,\n  value: arrayToIdMap(getCustomDashboards(dashboards))\n});\nexport const acSetDashboardStarred = (dashboardId, isStarred) => ({\n  type: SET_DASHBOARD_STARRED,\n  dashboardId: dashboardId,\n  value: isStarred\n});\nexport const acSetDashboardDisplayName = (dashboardId, value) => ({\n  type: SET_DASHBOARD_DISPLAY_NAME,\n  dashboardId,\n  value\n});\nexport const acSetDashboardItems = value => ({\n  type: SET_DASHBOARD_ITEMS,\n  value\n}); // thunks\n\nexport const tFetchDashboards = () => async (dispatch, getState, dataEngine) => {\n  const dashboards = await apiFetchDashboards(dataEngine);\n  dispatch(acSetDashboards(dashboards));\n};\nexport const tSelectDashboard = id => async (dispatch, getState) => {\n  const onError = error => {\n    console.log('Error (apiFetchDashboards): ', error);\n    return error;\n  };\n\n  try {\n    const state = getState();\n    let dashboardToSelect = null;\n\n    if (id) {\n      dashboardToSelect = sGetDashboardById(state, id) || null;\n    } else {\n      const preferredId = getPreferredDashboardId(sGetUserUsername(state));\n      const dash = sGetDashboardById(state, preferredId);\n      dashboardToSelect = preferredId && dash ? dash : sGetDashboardsSortedByStarred(state)[0];\n    }\n\n    if (dashboardToSelect) {\n      dispatch(tSetSelectedDashboardById(dashboardToSelect.id));\n    } else {\n      dispatch(acSetSelectedId(NON_EXISTING_DASHBOARD_ID));\n    }\n  } catch (err) {\n    return onError(err);\n  }\n};\nexport const tStarDashboard = (id, isStarred) => async (dispatch, getState, dataEngine) => {\n  const onSuccess = id => {\n    dispatch(acSetDashboardStarred(id, isStarred));\n    return id;\n  };\n\n  const onError = error => {\n    console.log('Error (apiStarDashboard): ', error);\n    return error;\n  };\n\n  try {\n    await apiStarDashboard(dataEngine, id, isStarred);\n    return onSuccess(id);\n  } catch (err) {\n    return onError(err);\n  }\n};\nexport const tDeleteDashboard = id => async (dispatch, getState, dataEngine) => {\n  try {\n    await apiDeleteDashboard(dataEngine, id);\n    await dispatch(tFetchDashboards());\n    return Promise.resolve();\n  } catch (err) {\n    console.log('Error (deleteDashboard): ', err);\n    return err;\n  }\n};","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport i18n from '@dhis2/d2-i18n';\nimport { useD2 } from '@dhis2/app-runtime-adapter-d2';\nimport { Button, Modal, ModalTitle, ModalContent, ModalActions, ButtonStrip } from '@dhis2/ui';\nimport { PeriodDimension, DynamicDimension, OrgUnitDimension, DIMENSION_ID_PERIOD, DIMENSION_ID_ORGUNIT } from '@dhis2/analytics';\nimport { acAddItemFilter, acRemoveItemFilter } from '../../actions/itemFilters';\nimport { sGetItemFiltersRoot } from '../../reducers/itemFilters';\n\nconst FilterDialog = ({\n  displayNameProperty,\n  dimension,\n  initiallySelectedItems,\n  addItemFilter,\n  removeItemFilter,\n  onClose\n}) => {\n  const [filters, setFilters] = useState(initiallySelectedItems);\n  const {\n    d2\n  } = useD2({});\n\n  const onSelectItems = ({\n    dimensionId,\n    items\n  }) => {\n    setFilters({\n      [dimensionId]: items\n    });\n  };\n\n  const onDeselectItems = ({\n    dimensionId,\n    itemIdsToRemove\n  }) => {\n    const oldList = filters[dimensionId] || [];\n    const newList = oldList.filter(item => !itemIdsToRemove.includes(item.id));\n    setFilters({ ...filters,\n      [dimensionId]: newList\n    });\n  };\n\n  const onReorderItems = ({\n    dimensionId,\n    itemIds\n  }) => {\n    const oldList = filters[dimensionId] || [];\n    const reorderedList = itemIds.map(id => oldList.find(item => item.id === id));\n    setFilters({ ...filters,\n      [dimensionId]: reorderedList\n    });\n  };\n\n  const saveFilter = () => {\n    const id = dimension.id;\n    const filterItems = filters[id];\n\n    if (filterItems && filterItems.length) {\n      addItemFilter({\n        id,\n        value: [...filterItems]\n      });\n    } else {\n      removeItemFilter(id);\n    }\n\n    onClose(id);\n  };\n\n  const renderDialogContent = () => {\n    const commonProps = {\n      d2,\n      onSelect: onSelectItems,\n      onDeselect: onDeselectItems,\n      onReorder: onReorderItems\n    };\n    const selectedItems = filters[dimension.id] || [];\n\n    switch (dimension.id) {\n      case DIMENSION_ID_PERIOD:\n        {\n          return <PeriodDimension selectedPeriods={selectedItems} onSelect={commonProps.onSelect} />;\n        }\n\n      case DIMENSION_ID_ORGUNIT:\n        return <OrgUnitDimension displayNameProperty={displayNameProperty} ouItems={selectedItems} {...commonProps} />;\n\n      default:\n        return <DynamicDimension selectedItems={selectedItems} dimensionId={dimension.id} onSelect={commonProps.onSelect} />;\n    }\n  };\n\n  return <>\n            {dimension.id && <Modal dataTest={`${dimension.id}-dimension-modal`} onClose={onClose} position=\"top\" large>\n                    <ModalTitle>{dimension.name}</ModalTitle>\n                    <ModalContent>{renderDialogContent()}</ModalContent>\n                    <ModalActions>\n                        <ButtonStrip>\n                            <Button secondary onClick={onClose}>\n                                {i18n.t('Cancel')}\n                            </Button>\n                            <Button primary onClick={saveFilter}>\n                                {i18n.t('Confirm')}\n                            </Button>\n                        </ButtonStrip>\n                    </ModalActions>\n                </Modal>}\n        </>;\n};\n\nFilterDialog.propTypes = {\n  addItemFilter: PropTypes.func,\n  dimension: PropTypes.object,\n  displayNameProperty: PropTypes.string,\n  initiallySelectedItems: PropTypes.object,\n  removeItemFilter: PropTypes.func,\n  onClose: PropTypes.func\n};\n\nconst mapStateToProps = state => ({\n  initiallySelectedItems: sGetItemFiltersRoot(state)\n});\n\nexport default connect(mapStateToProps, {\n  addItemFilter: acAddItemFilter,\n  removeItemFilter: acRemoveItemFilter\n})(FilterDialog);","export const SET_SETTINGS = 'SET_SETTINGS';\nexport const ADD_SETTINGS = 'ADD_SETTINGS';\nexport const DEFAULT_SETTINGS = {\n  keyDateFormat: 'yyyy-MM-dd',\n  keyAnalysisRelativePeriod: 'LAST_12_MONTHS',\n  keyAnalysisDigitGroupSeparator: 'SPACE',\n  displayNameProperty: 'displayName',\n  uiLocale: 'en',\n  rootOrganisationUnit: {},\n  keyGatherAnalyticalObjectStatisticsInDashboardViews: false\n};\nexport default ((state = DEFAULT_SETTINGS, action) => {\n  switch (action.type) {\n    case SET_SETTINGS:\n      {\n        return Object.assign({}, action.value);\n      }\n\n    case ADD_SETTINGS:\n      {\n        return { ...state,\n          ...action.value\n        };\n      }\n\n    default:\n      return state;\n  }\n}); // Selectors\n\nexport const sGetSettings = state => state.settings;\nexport const sGetSettingsDisplayNameProperty = state => sGetSettings(state).displayNameProperty;\nexport const sGetRootOrgUnit = state => sGetSettings(state).rootOrganisationUnit;\nexport const sGetRelativePeriod = state => sGetSettings(state).keyAnalysisRelativePeriod;\nexport const sGetUiLocale = state => sGetSettings(state).uiLocale;\nexport const sGatherAnalyticalObjectStatisticsInDashboardViews = state => sGetSettings(state).keyGatherAnalyticalObjectStatisticsInDashboardViews;","export const SET_ACTIVE_MODAL_DIMENSION = 'SET_ACTIVE_MODAL_DIMENSION';\nexport const CLEAR_ACTIVE_MODAL_DIMENSION = 'CLEAR_ACTIVE_MODAL_DIMENSION';\nexport const DEFAULT_STATE_ACTIVE_MODAL_DIMENSION = {};\nexport default ((state = DEFAULT_STATE_ACTIVE_MODAL_DIMENSION, action) => {\n  switch (action.type) {\n    case SET_ACTIVE_MODAL_DIMENSION:\n      {\n        return action.value;\n      }\n\n    case CLEAR_ACTIVE_MODAL_DIMENSION:\n      {\n        return DEFAULT_STATE_ACTIVE_MODAL_DIMENSION;\n      }\n\n    default:\n      return state;\n  }\n});\nexport const sGetActiveModalDimension = state => state.activeModalDimension;","import { SET_ACTIVE_MODAL_DIMENSION, CLEAR_ACTIVE_MODAL_DIMENSION } from '../reducers/activeModalDimension';\nexport const acSetActiveModalDimension = value => ({\n  type: SET_ACTIVE_MODAL_DIMENSION,\n  value\n});\nexport const acClearActiveModalDimension = () => ({\n  type: CLEAR_ACTIVE_MODAL_DIMENSION\n});","import React, { useState, useRef } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport ArrowDropDownIcon from '@material-ui/icons/ArrowDropDown';\nimport isEmpty from 'lodash/isEmpty';\nimport i18n from '@dhis2/d2-i18n';\nimport { DimensionsPanel } from '@dhis2/analytics';\nimport { Button, Popover } from '@dhis2/ui';\nimport FilterDialog from './FilterDialog';\nimport { sGetSettingsDisplayNameProperty } from '../../reducers/settings';\nimport { sGetActiveModalDimension } from '../../reducers/activeModalDimension';\nimport { sGetDimensions } from '../../reducers/dimensions';\nimport { sGetItemFiltersRoot } from '../../reducers/itemFilters';\nimport { acClearActiveModalDimension, acSetActiveModalDimension } from '../../actions/activeModalDimension';\nimport classes from './styles/FilterSelector.module.css';\n\nconst FilterSelector = props => {\n  const [showPopover, setShowPopover] = useState(false);\n  const ref = useRef(null);\n\n  const onCloseDialog = () => {\n    setShowPopover(false);\n    props.clearActiveModalDimension();\n  };\n\n  const selectDimension = id => {\n    props.setActiveModalDimension(props.dimensions.find(dimension => dimension.id === id));\n  };\n\n  return <>\n            <span className={classes.buttonContainer} ref={ref}>\n                <Button onClick={() => setShowPopover(true)}>\n                    {i18n.t('Add filter')}\n                    <ArrowDropDownIcon />\n                </Button>\n            </span>\n            {showPopover && <Popover onClickOutside={onCloseDialog} reference={ref} arrow={true} placement=\"bottom-start\" dataTest=\"dashboard-filter-popover\">\n                    <DimensionsPanel style={{\n        width: '320px'\n      }} dimensions={props.dimensions} onDimensionClick={selectDimension} selectedIds={Object.keys(props.initiallySelectedItems)} />\n                </Popover>}\n            {!isEmpty(props.dimension) ? <FilterDialog displayNameProperty={props.displayNameProperty} dimension={props.dimension} onClose={onCloseDialog} /> : null}\n        </>;\n};\n\nconst mapStateToProps = state => ({\n  displayNameProperty: sGetSettingsDisplayNameProperty(state),\n  dimension: sGetActiveModalDimension(state),\n  dimensions: sGetDimensions(state),\n  initiallySelectedItems: sGetItemFiltersRoot(state)\n});\n\nFilterSelector.propTypes = {\n  clearActiveModalDimension: PropTypes.func,\n  dimension: PropTypes.object,\n  dimensions: PropTypes.array,\n  displayNameProperty: PropTypes.string,\n  initiallySelectedItems: PropTypes.object,\n  setActiveModalDimension: PropTypes.func\n};\nexport default connect(mapStateToProps, {\n  clearActiveModalDimension: acClearActiveModalDimension,\n  setActiveModalDimension: acSetActiveModalDimension\n})(FilterSelector);","import React, { useState, createRef } from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport cx from 'classnames';\nimport { Link, Redirect } from 'react-router-dom';\nimport i18n from '@dhis2/d2-i18n';\nimport SharingDialog from '@dhis2/d2-ui-sharing-dialog';\nimport Star from '@material-ui/icons/Star';\nimport StarBorder from '@material-ui/icons/StarBorder';\nimport { Button, FlyoutMenu, Popover, MenuItem, colors } from '@dhis2/ui';\nimport { useD2 } from '@dhis2/app-runtime-adapter-d2';\nimport { useWindowDimensions } from '../WindowDimensionsProvider';\nimport { ThreeDots } from '../Item/VisualizationItem/assets/icons';\nimport { orObject } from '../../modules/util';\nimport { tStarDashboard } from '../../actions/dashboards';\nimport { tUpdateShowDescription } from '../../actions/selected';\nimport FilterSelector from '../ItemFilter/FilterSelector';\nimport { sGetSelectedId, sGetSelectedShowDescription } from '../../reducers/selected';\nimport { sGetDashboardById, sGetDashboardItems, EMPTY_DASHBOARD } from '../../reducers/dashboards';\nimport isSmallScreen from '../../modules/isSmallScreen';\nimport classes from './styles/ViewTitleBar.module.css';\n\nconst ViewTitleBar = props => {\n  const [moreOptionsIsOpen, setMoreOptionsIsOpen] = useState(false);\n  const [sharingDialogIsOpen, setSharingDialogIsOpen] = useState(false);\n  const [redirectUrl, setRedirectUrl] = useState(null);\n  const {\n    width\n  } = useWindowDimensions();\n  const {\n    d2\n  } = useD2({});\n  const {\n    id,\n    name,\n    description,\n    access,\n    showDescription,\n    starred,\n    onToggleStarredDashboard,\n    onShowHideDescription\n  } = props;\n\n  const toggleSharingDialog = () => setSharingDialogIsOpen(!sharingDialogIsOpen);\n\n  const toggleMoreOptions = () => setMoreOptionsIsOpen(!moreOptionsIsOpen);\n\n  const printLayout = () => setRedirectUrl(`${id}/printlayout`);\n\n  const printOipp = () => setRedirectUrl(`${id}/printoipp`);\n\n  const StarIcon = starred ? Star : StarBorder;\n\n  if (redirectUrl) {\n    return <Redirect to={redirectUrl} />;\n  }\n\n  const showHideDescriptionLabel = showDescription ? i18n.t('Hide description') : i18n.t('Show description');\n\n  const showHideDescription = () => {\n    onShowHideDescription();\n    toggleMoreOptions();\n  };\n\n  const toggleStarredDashboardLabel = starred ? i18n.t('Unstar dashboard') : i18n.t('Star dashboard');\n\n  const toggleStarredDashboard = () => {\n    // TODO use dataQuery directly here with create/delete mutations ?!\n    onToggleStarredDashboard();\n    toggleMoreOptions();\n  };\n\n  const buttonRef = createRef();\n  const userAccess = orObject(access);\n  const descriptionClasses = cx(classes.descContainer, description ? classes.desc : classes.noDesc);\n  return <>\n            <div className={classes.container}>\n                <div className={classes.titleBar}>\n                    <span className={classes.title} data-test=\"view-dashboard-title\">\n                        {name}\n                    </span>\n                    <div className={classes.actions}>\n                        <div className={classes.titleBarIcon} onClick={onToggleStarredDashboard}>\n                            <StarIcon style={{\n              fill: colors.grey600\n            }} />\n                        </div>\n                        <div className={classes.strip}>\n                            {userAccess.update ? <Link className={classes.editLink} to={`/${id}/edit`} data-test=\"link-edit-dashboard\">\n                                    <Button>{i18n.t('Edit')}</Button>\n                                </Link> : null}\n                            {userAccess.manage ? <Button className={classes.shareButton} onClick={toggleSharingDialog}>\n                                    {i18n.t('Share')}\n                                </Button> : null}\n                            <FilterSelector />\n                            <span ref={buttonRef}>\n                                <Button small={isSmallScreen(width)} dataTest=\"more-button\" onClick={toggleMoreOptions}>\n                                    <ThreeDots />\n                                    <span className={classes.moreButton}>\n                                        {i18n.t('More')}\n                                    </span>\n                                </Button>\n                            </span>\n                        </div>\n                        {moreOptionsIsOpen && <Popover reference={buttonRef} placement=\"bottom-start\" onClickOutside={toggleMoreOptions}>\n                                <FlyoutMenu>\n                                    <MenuItem dense label={toggleStarredDashboardLabel} onClick={toggleStarredDashboard} />\n                                    <MenuItem dense label={showHideDescriptionLabel} onClick={showHideDescription} />\n                                    <MenuItem dense label={i18n.t('Print')} dataTest=\"print-menu-item\">\n                                        <MenuItem dense label={i18n.t('Dashboard layout')} onClick={printLayout} dataTest=\"print-layout-menu-item\" />\n                                        <MenuItem dense label={i18n.t('One item per page')} onClick={printOipp} dataTest=\"print-oipp-menu-item\" />\n                                    </MenuItem>\n                                </FlyoutMenu>\n                            </Popover>}\n                    </div>\n                </div>\n                {showDescription && <div className={descriptionClasses}>\n                        {description || i18n.t('No description')}\n                    </div>}\n            </div>\n            {id && <SharingDialog d2={d2} id={id} type=\"dashboard\" open={sharingDialogIsOpen} onRequestClose={toggleSharingDialog} />}\n        </>;\n};\n\nViewTitleBar.propTypes = {\n  access: PropTypes.object,\n  description: PropTypes.string,\n  id: PropTypes.string,\n  name: PropTypes.string,\n  showDescription: PropTypes.bool,\n  starred: PropTypes.bool,\n  onShowHideDescription: PropTypes.func,\n  onToggleStarredDashboard: PropTypes.func\n};\nViewTitleBar.defaultProps = {\n  name: '',\n  description: '',\n  starred: false,\n  showDescription: false\n};\n\nconst mapStateToProps = state => {\n  const id = sGetSelectedId(state);\n  const dashboard = sGetDashboardById(state, id) || EMPTY_DASHBOARD;\n  return {\n    id,\n    name: dashboard.displayName,\n    description: dashboard.displayDescription,\n    dashboardItems: sGetDashboardItems(state),\n    showDescription: sGetSelectedShowDescription(state),\n    starred: dashboard.starred,\n    access: dashboard.access\n  };\n};\n\nconst mergeProps = (stateProps, dispatchProps, ownProps) => {\n  const {\n    id,\n    starred,\n    showDescription\n  } = stateProps;\n  const {\n    dispatch\n  } = dispatchProps;\n  return { ...stateProps,\n    ...ownProps,\n    onToggleStarredDashboard: () => dispatch(tStarDashboard(id, !starred)),\n    onShowHideDescription: () => dispatch(tUpdateShowDescription(!showDescription))\n  };\n};\n\nexport default connect(mapStateToProps, null, mergeProps)(ViewTitleBar);","/** @module reducers/editDashboard */\nimport update from 'immutability-helper';\nimport isEmpty from 'lodash/isEmpty';\nimport { orArray, orObject } from '../modules/util';\nexport const RECEIVED_EDIT_DASHBOARD = 'RECEIVED_EDIT_DASHBOARD';\nexport const RECEIVED_NOT_EDITING = 'RECEIVED_NOT_EDITING';\nexport const START_NEW_DASHBOARD = 'START_NEW_DASHBOARD';\nexport const RECEIVED_TITLE = 'RECEIVED_TITLE';\nexport const RECEIVED_DESCRIPTION = 'RECEIVED_DESCRIPTION';\nexport const ADD_DASHBOARD_ITEM = 'ADD_DASHBOARD_ITEM';\nexport const REMOVE_DASHBOARD_ITEM = 'REMOVE_DASHBOARD_ITEM';\nexport const UPDATE_DASHBOARD_ITEM = 'UPDATE_DASHBOARD_ITEM';\nexport const RECEIVED_DASHBOARD_LAYOUT = 'RECEIVED_DASHBOARD_LAYOUT';\nexport const SET_PRINT_PREVIEW_VIEW = 'SET_PRINT_PREVIEW_VIEW';\nexport const CLEAR_PRINT_PREVIEW_VIEW = 'CLEAR_PRINT_PREVIEW_VIEW';\nexport const DEFAULT_STATE_EDIT_DASHBOARD = {};\nexport const NEW_DASHBOARD_STATE = {\n  id: '',\n  name: '',\n  access: {},\n  description: '',\n  dashboardItems: [],\n  printPreviewView: false\n};\nexport default ((state = DEFAULT_STATE_EDIT_DASHBOARD, action) => {\n  switch (action.type) {\n    case RECEIVED_EDIT_DASHBOARD:\n      {\n        const newState = {};\n        Object.keys(NEW_DASHBOARD_STATE).map(k => newState[k] = action.value[k]);\n        newState.printPreviewView = false;\n        return newState;\n      }\n\n    case RECEIVED_NOT_EDITING:\n      return DEFAULT_STATE_EDIT_DASHBOARD;\n\n    case SET_PRINT_PREVIEW_VIEW:\n      return Object.assign({}, state, {\n        printPreviewView: true\n      });\n\n    case CLEAR_PRINT_PREVIEW_VIEW:\n      return Object.assign({}, state, {\n        printPreviewView: false\n      });\n\n    case START_NEW_DASHBOARD:\n      return NEW_DASHBOARD_STATE;\n\n    case RECEIVED_TITLE:\n      {\n        return Object.assign({}, state, {\n          name: action.value\n        });\n      }\n\n    case RECEIVED_DESCRIPTION:\n      {\n        return Object.assign({}, state, {\n          description: action.value\n        });\n      }\n\n    case ADD_DASHBOARD_ITEM:\n      if (!action.value.position) {\n        return update(state, {\n          dashboardItems: {\n            $unshift: [action.value]\n          }\n        });\n      }\n\n      return update(state, {\n        dashboardItems: {\n          $splice: [[parseInt(action.value.position), 0, action.value]]\n        }\n      });\n\n    case REMOVE_DASHBOARD_ITEM:\n      {\n        const idToRemove = action.value;\n        const dashboardItemIndex = state.dashboardItems.findIndex(item => item.id === idToRemove);\n\n        if (dashboardItemIndex > -1) {\n          return update(state, {\n            dashboardItems: {\n              $splice: [[dashboardItemIndex, 1]]\n            }\n          });\n        }\n\n        return state;\n      }\n\n    case RECEIVED_DASHBOARD_LAYOUT:\n      {\n        const stateItems = orArray(state.dashboardItems);\n        let layoutHasChanged = false;\n        const newStateItems = action.value.map(({\n          x,\n          y,\n          w,\n          h,\n          i\n        }) => {\n          const stateItem = stateItems.find(si => si.id === i);\n\n          if (!(stateItem.x === x && stateItem.y === y && stateItem.w === w && stateItem.h === h)) {\n            layoutHasChanged = true;\n            return Object.assign({}, stateItem, {\n              w,\n              h,\n              x,\n              y\n            });\n          }\n\n          return stateItem;\n        });\n        return layoutHasChanged ? { ...state,\n          dashboardItems: newStateItems\n        } : state;\n      }\n\n    case UPDATE_DASHBOARD_ITEM:\n      {\n        const dashboardItem = action.value;\n        const dashboardItemIndex = state.dashboardItems.findIndex(item => item.id === dashboardItem.id);\n\n        if (dashboardItemIndex > -1) {\n          const newState = update(state, {\n            dashboardItems: {\n              $splice: [[dashboardItemIndex, 1, Object.assign({}, dashboardItem)]]\n            }\n          });\n          return newState;\n        }\n\n        return state;\n      }\n\n    default:\n      return state;\n  }\n}); // root selector\n\nexport const sGetEditDashboardRoot = state => state.editDashboard; // selectors\n\nexport const sGetIsEditing = state => !isEmpty(state.editDashboard);\nexport const sGetIsPrintPreviewView = state => sGetEditDashboardRoot(state).printPreviewView;\nexport const sGetIsNewDashboard = state => {\n  return !isEmpty(state.editDashboard) && sGetEditDashboardRoot(state).id === '';\n};\nexport const sGetEditDashboardName = state => sGetEditDashboardRoot(state).name;\nexport const sGetEditDashboardDescription = state => sGetEditDashboardRoot(state).description;\nexport const sGetEditDashboardItems = state => orObject(sGetEditDashboardRoot(state)).dashboardItems;","import { apiFetchDashboard } from './dashboards';\n\nconst onError = error => console.log('Error: ', error);\n\nexport const createDashboardMutation = {\n  resource: 'dashboards',\n  type: 'create',\n  data: ({\n    data\n  }) => data\n};\nexport const updateDashboardMutation = {\n  resource: 'dashboards',\n  type: 'update',\n  id: ({\n    id\n  }) => id,\n  data: ({\n    data\n  }) => data\n};\n\nconst generatePayload = (dashboard = {}, data) => {\n  return { ...dashboard,\n    name: data.name,\n    description: data.description,\n    dashboardItems: data.dashboardItems.map(item => ({ ...item,\n      width: item.w,\n      height: item.h\n    }))\n  };\n};\n\nexport const updateDashboard = async (dataEngine, data) => {\n  try {\n    const dashboard = await apiFetchDashboard(dataEngine, data.id);\n    const {\n      response\n    } = await dataEngine.mutate(updateDashboardMutation, {\n      variables: {\n        id: data.id,\n        data: generatePayload(dashboard, data)\n      }\n    });\n    return response.uid;\n  } catch (error) {\n    onError(error);\n  }\n};\nexport const postDashboard = async (dataEngine, data) => {\n  try {\n    const {\n      response\n    } = await dataEngine.mutate(createDashboardMutation, {\n      variables: {\n        data: generatePayload({}, data)\n      }\n    });\n    return response.uid;\n  } catch (error) {\n    onError(error);\n  }\n};","import { generateUid } from 'd2/uid';\nimport i18n from '@dhis2/d2-i18n';\nimport { RECEIVED_EDIT_DASHBOARD, START_NEW_DASHBOARD, RECEIVED_NOT_EDITING, RECEIVED_TITLE, RECEIVED_DESCRIPTION, RECEIVED_DASHBOARD_LAYOUT, ADD_DASHBOARD_ITEM, UPDATE_DASHBOARD_ITEM, REMOVE_DASHBOARD_ITEM, SET_PRINT_PREVIEW_VIEW, CLEAR_PRINT_PREVIEW_VIEW } from '../reducers/editDashboard';\nimport { sGetEditDashboardRoot } from '../reducers/editDashboard';\nimport { updateDashboard, postDashboard } from '../api/editDashboard';\nimport { tSetSelectedDashboardById } from '../actions/selected';\nimport { NEW_ITEM_SHAPE, getGridItemProperties, getPageBreakItemShape, getPrintTitlePageItemShape } from '../components/ItemGrid/gridUtil';\nimport { itemTypeMap, PAGEBREAK, PRINT_TITLE_PAGE } from '../modules/itemTypes';\nimport { convertUiItemsToBackend } from '../modules/uiBackendItemConverter';\n\nconst onError = error => {\n  console.log('Error (Saving Dashboard): ', error);\n  return error;\n}; // actions\n\n\nexport const acSetEditDashboard = (dashboard, items) => {\n  const val = { ...dashboard,\n    dashboardItems: items\n  };\n  return {\n    type: RECEIVED_EDIT_DASHBOARD,\n    value: val\n  };\n};\nexport const acSetEditNewDashboard = () => ({\n  type: START_NEW_DASHBOARD\n});\nexport const acClearEditDashboard = () => ({\n  type: RECEIVED_NOT_EDITING\n});\nexport const acSetPrintPreviewView = () => ({\n  type: SET_PRINT_PREVIEW_VIEW\n});\nexport const acClearPrintPreviewView = () => ({\n  type: CLEAR_PRINT_PREVIEW_VIEW\n});\nexport const acSetDashboardTitle = value => ({\n  type: RECEIVED_TITLE,\n  value\n});\nexport const acSetDashboardDescription = value => ({\n  type: RECEIVED_DESCRIPTION,\n  value\n});\nexport const acUpdateDashboardLayout = value => ({\n  type: RECEIVED_DASHBOARD_LAYOUT,\n  value\n});\nexport const acAddDashboardItem = item => {\n  const type = item.type;\n  delete item.type;\n  const itemPropName = itemTypeMap[type].propName;\n  const id = generateUid();\n  const gridItemProperties = getGridItemProperties(id);\n  let shape;\n\n  if (type === PAGEBREAK) {\n    const yPos = item.yPos || 0;\n    shape = getPageBreakItemShape(yPos, item.isStatic);\n  } else if (type === PRINT_TITLE_PAGE) {\n    shape = getPrintTitlePageItemShape();\n  } else {\n    shape = NEW_ITEM_SHAPE;\n  }\n\n  return {\n    type: ADD_DASHBOARD_ITEM,\n    value: {\n      id,\n      type,\n      position: item.position || null,\n      [itemPropName]: item.content,\n      ...NEW_ITEM_SHAPE,\n      ...gridItemProperties,\n      ...shape\n    }\n  };\n};\nexport const acUpdateDashboardItem = item => ({\n  type: UPDATE_DASHBOARD_ITEM,\n  value: item\n});\nexport const acRemoveDashboardItem = value => ({\n  type: REMOVE_DASHBOARD_ITEM,\n  value\n}); // thunks\n\nexport const tSaveDashboard = () => async (dispatch, getState, dataEngine) => {\n  const dashboard = sGetEditDashboardRoot(getState());\n  const dashboardToSave = { ...dashboard,\n    dashboardItems: convertUiItemsToBackend(dashboard.dashboardItems),\n    name: dashboard.name || i18n.t('Untitled dashboard')\n  };\n\n  try {\n    const dashboardId = dashboardToSave.id ? await updateDashboard(dataEngine, dashboardToSave) : await postDashboard(dataEngine, dashboardToSave);\n    dispatch(acClearEditDashboard());\n    await dispatch(tSetSelectedDashboardById(dashboardId));\n    return Promise.resolve(dashboardId);\n  } catch (error) {\n    onError(error);\n  }\n};","import React, { useEffect, useRef } from 'react';\nimport PropTypes from 'prop-types';\nimport { useD2 } from '@dhis2/app-runtime-adapter-d2';\nimport { useConfig } from '@dhis2/app-runtime';\nimport { load, unmount } from './plugin';\nimport { getGridItemDomId } from '../../../ItemGrid/gridUtil';\n\nconst DefaultPlugin = ({\n  item,\n  activeType,\n  visualization,\n  options,\n  style\n}) => {\n  const {\n    d2\n  } = useD2({});\n  const {\n    baseUrl\n  } = useConfig();\n  const credentials = {\n    baseUrl,\n    auth: d2.Api.getApi().defaultHeaders.Authorization\n  };\n  const prevItem = useRef();\n  const prevActiveType = useRef();\n  useEffect(() => {\n    load(item, visualization, {\n      credentials,\n      activeType,\n      options\n    });\n    prevItem.current = item;\n    prevActiveType.current = activeType;\n    return () => unmount(item, activeType);\n  }, []);\n  useEffect(() => {\n    if (shouldPluginReload()) {\n      unmount(item, prevActiveType.current);\n      load(item, visualization, {\n        credentials,\n        activeType\n      });\n    }\n\n    prevItem.current = item;\n    prevActiveType.current = activeType;\n  }, [item, visualization, activeType]);\n  /**\n   * Prevent unnecessary re-rendering\n   * TODO: fix this hack\n   */\n\n  const shouldPluginReload = () => {\n    const reloadAllowed = prevItem.current === item;\n    const visChanged = prevActiveType.current !== activeType;\n    return reloadAllowed && visChanged;\n  };\n\n  return <div id={getGridItemDomId(item.id)} style={style} />;\n};\n\nDefaultPlugin.propTypes = {\n  activeType: PropTypes.string,\n  item: PropTypes.object,\n  options: PropTypes.object,\n  style: PropTypes.object,\n  visualization: PropTypes.object\n};\nDefaultPlugin.defaultProps = {\n  style: {},\n  item: {},\n  options: {},\n  visualization: {}\n};\nexport default DefaultPlugin;","import React from 'react';\nimport PropTypes from 'prop-types';\nimport classes from './styles/NoVisualizationMessage.module.css';\n\nconst NoVisualizationMessage = ({\n  message\n}) => {\n  return <div className={classes.message}>{message}</div>;\n};\n\nNoVisualizationMessage.propTypes = {\n  message: PropTypes.string\n};\nexport default NoVisualizationMessage;","import React from 'react';\nimport PropTypes from 'prop-types';\nimport i18n from '@dhis2/d2-i18n';\nimport DefaultPlugin from './DefaultPlugin';\nimport { MAP } from '../../../../modules/itemTypes';\nimport { pluginIsAvailable } from './plugin';\nimport NoVisualizationMessage from './NoVisualizationMessage';\n\nconst MapPlugin = ({\n  applyFilters,\n  ...props\n}) => {\n  if (props.item.type === MAP) {\n    // apply filters only to thematic and event layers\n    // for maps AO\n    const mapViews = props.visualization.mapViews.map(mapView => {\n      if (mapView.layer.includes('thematic') || mapView.layer.includes('event')) {\n        return applyFilters(mapView, props.itemFilters);\n      }\n\n      return mapView;\n    });\n    props.visualization = { ...props.visualization,\n      mapViews\n    };\n  } else {\n    // this is the case of a non map AO passed to the maps plugin\n    // due to a visualization type switch in dashboard item\n    // maps plugin takes care of converting the AO to a suitable format\n    props.visualization = applyFilters(props.visualization, props.itemFilters);\n  }\n\n  return pluginIsAvailable(props.activeType || props.item.type) ? <DefaultPlugin options={{\n    hideTitle: true\n  }} {...props} /> : <NoVisualizationMessage message={i18n.t('Unable to load the plugin for this item')} />;\n};\n\nMapPlugin.propTypes = {\n  activeType: PropTypes.string,\n  applyFilters: PropTypes.func,\n  item: PropTypes.object,\n  itemFilters: PropTypes.object,\n  visualization: PropTypes.object\n};\nexport default MapPlugin;","import React from 'react';\nimport { CircularLoader } from '@dhis2/ui';\nimport classes from './styles/LoadingMask.module.css';\n\nconst LoadingMask = () => {\n  return <div className={classes.center}>\n            <CircularLoader />\n        </div>;\n};\n\nexport default LoadingMask;","const getFilteredVisualization = (visualization, filters) => {\n  if (!Object.keys(filters).length) {\n    return visualization;\n  } // deep clone objects in filters to avoid changing the visualization in the Redux store\n\n\n  const visRows = visualization.rows.map(obj => ({ ...obj\n  }));\n  const visColumns = visualization.columns.map(obj => ({ ...obj\n  }));\n  const visFilters = visualization.filters.map(obj => ({ ...obj\n  }));\n  Object.keys(filters).forEach(dimensionId => {\n    if (filters[dimensionId]) {\n      let dimensionFound = false;\n      [visRows, visColumns, visFilters].forEach(dimensionObjects => dimensionObjects.filter(obj => obj.dimension === dimensionId).forEach(obj => {\n        dimensionFound = true;\n        obj.items = filters[dimensionId];\n      })); // add dimension to filters if not already present elsewhere\n\n      if (!dimensionFound) {\n        visFilters.push({\n          dimension: dimensionId,\n          items: filters[dimensionId]\n        });\n      }\n    }\n  });\n  return { ...visualization,\n    rows: visRows,\n    columns: visColumns,\n    filters: visFilters\n  };\n};\n\nexport default getFilteredVisualization;","import { VIS_TYPE_COLUMN, VIS_TYPE_PIVOT_TABLE, getAdaptedUiLayoutByType } from '@dhis2/analytics';\nimport { REPORT_TABLE, CHART, MAP } from '../../../../modules/itemTypes';\nexport const THEMATIC_LAYER = 'thematic';\n\nconst extractMapView = map => map.mapViews && map.mapViews.find(mv => mv.layer.includes(THEMATIC_LAYER));\n\nconst getWithoutId = object => ({ ...object,\n  id: undefined\n});\n\nconst getVisualizationConfig = (visualization, originalType, activeType) => {\n  if (originalType === MAP && originalType !== activeType) {\n    const extractedMapView = extractMapView(visualization);\n\n    if (extractedMapView === undefined) {\n      return null;\n    }\n\n    return getWithoutId({ ...visualization,\n      ...extractedMapView,\n      mapViews: undefined,\n      type: activeType === CHART ? VIS_TYPE_COLUMN : VIS_TYPE_PIVOT_TABLE\n    });\n  } else if (originalType === REPORT_TABLE && activeType === CHART) {\n    const layout = getAdaptedUiLayoutByType(visualization, VIS_TYPE_COLUMN);\n    return getWithoutId({ ...visualization,\n      ...layout,\n      type: VIS_TYPE_COLUMN\n    });\n  } else if (originalType === CHART && activeType === REPORT_TABLE) {\n    const layout = getAdaptedUiLayoutByType(visualization, VIS_TYPE_PIVOT_TABLE);\n    return getWithoutId({ ...visualization,\n      ...layout,\n      type: VIS_TYPE_PIVOT_TABLE\n    });\n  }\n\n  return getWithoutId(visualization);\n};\n\nexport default getVisualizationConfig;","// Note that this ignores discrepancies in 'this', so shouldn't be used with bound functions\n// This is useful instead of lodash/memoize when we only need to memoize a single value\n// Inspiration: https://github.com/alexreardon/memoize-one\nconst memoizeOne = fn => {\n  let lastArgs = undefined;\n  let lastValue = undefined;\n  return (...args) => {\n    if (lastArgs && args.length === lastArgs.length && args.every((arg, i) => arg === lastArgs[i])) {\n      return lastValue;\n    }\n\n    lastArgs = args;\n    lastValue = fn(...args);\n    return lastValue;\n  };\n};\n\nexport default memoizeOne;","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport VisualizationPlugin from '@dhis2/data-visualizer-plugin';\nimport i18n from '@dhis2/d2-i18n';\nimport { D2Shim } from '@dhis2/app-runtime-adapter-d2';\nimport DefaultPlugin from './DefaultPlugin';\nimport MapPlugin from './MapPlugin';\nimport LoadingMask from './LoadingMask';\nimport NoVisualizationMessage from './NoVisualizationMessage';\nimport getFilteredVisualization from './getFilteredVisualization';\nimport getVisualizationConfig from './getVisualizationConfig';\nimport { VISUALIZATION, MAP, CHART, REPORT_TABLE } from '../../../../modules/itemTypes';\nimport { getVisualizationId } from '../../../../modules/item';\nimport memoizeOne from '../../../../modules/memoizeOne';\nimport { sGetVisualization } from '../../../../reducers/visualizations';\nimport { pluginIsAvailable } from './plugin';\n\nclass Visualization extends React.Component {\n  state = {\n    pluginLoaded: false\n  };\n\n  constructor(props) {\n    super(props);\n    this.memoizedGetFilteredVisualization = memoizeOne(getFilteredVisualization);\n    this.memoizedGetVisualizationConfig = memoizeOne(getVisualizationConfig);\n  }\n\n  onLoadingComplete = () => {\n    this.setState({\n      pluginLoaded: true\n    });\n  };\n\n  render() {\n    const {\n      visualization,\n      activeType,\n      item,\n      itemFilters,\n      availableHeight\n    } = this.props;\n\n    if (!visualization) {\n      return <NoVisualizationMessage message={i18n.t('No data to display')} />;\n    }\n\n    const pluginProps = {\n      item,\n      itemFilters,\n      activeType,\n      style: {\n        height: availableHeight\n      },\n      visualization: this.memoizedGetVisualizationConfig(visualization, item.type, activeType)\n    };\n\n    switch (activeType) {\n      case VISUALIZATION:\n      case CHART:\n      case REPORT_TABLE:\n        {\n          return <>\n                        {!this.state.pluginLoaded && <div style={pluginProps.style}>\n                                <LoadingMask />\n                            </div>}\n                        <D2Shim d2Config={{}}>\n                            {({\n                d2\n              }) => <VisualizationPlugin d2={d2} visualization={this.memoizedGetFilteredVisualization(pluginProps.visualization, pluginProps.itemFilters)} onLoadingComplete={this.onLoadingComplete} forDashboard={true} style={pluginProps.style} />}\n                        </D2Shim>\n                    </>;\n        }\n\n      case MAP:\n        {\n          return <MapPlugin applyFilters={this.memoizedGetFilteredVisualization} {...pluginProps} />;\n        }\n\n      default:\n        {\n          pluginProps.visualization = this.memoizedGetFilteredVisualization(pluginProps.visualization, pluginProps.itemFilters);\n          return pluginIsAvailable(pluginProps.activeType || pluginProps.item.type) ? <DefaultPlugin {...pluginProps} /> : <NoVisualizationMessage message={i18n.t('Unable to load the plugin for this item')} />;\n        }\n    }\n  }\n\n}\n\nVisualization.propTypes = {\n  activeType: PropTypes.string,\n  availableHeight: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n  item: PropTypes.object,\n  itemFilters: PropTypes.object,\n  visualization: PropTypes.object\n};\n\nconst mapStateToProps = (state, ownProps) => {\n  return {\n    visualization: sGetVisualization(state, getVisualizationId(ownProps.item))\n  };\n};\n\nexport default connect(mapStateToProps)(Visualization);","import React from 'react';\nimport PropTypes from 'prop-types';\nimport i18n from '@dhis2/d2-i18n';\nimport { Warning } from './assets/icons';\nimport classes from './styles/FatalErrorBoundary.module.css';\n\nclass FatalErrorBoundary extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      errorFound: false\n    };\n  }\n\n  componentDidCatch(error, info) {\n    this.setState({\n      errorFound: true\n    });\n    console.log('error: ', error);\n    console.log('info: ', info);\n  }\n\n  render() {\n    if (this.state.errorFound) {\n      return <p className={classes.container}>\n                    <span className={classes.icon}>\n                        <Warning />\n                    </span>\n                    <span className={classes.message}>\n                        {i18n.t('There was a problem loading this dashboard item')}\n                    </span>\n                </p>;\n    }\n\n    return this.props.children;\n  }\n\n}\n\nFatalErrorBoundary.propTypes = {\n  children: PropTypes.node\n};\nexport default FatalErrorBoundary;","import React from 'react';\nimport PropTypes from 'prop-types';\nimport classes from './styles/ItemHeader.module.css';\n\nconst ViewItemActions = ({\n  actionButtons\n}) => {\n  return actionButtons ? <div className={classes.itemActionsWrap}>{actionButtons}</div> : null;\n};\n\nViewItemActions.propTypes = {\n  actionButtons: PropTypes.node\n};\nexport default ViewItemActions;","import React from 'react';\nimport PropTypes from 'prop-types';\nimport i18n from '@dhis2/d2-i18n';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport { colors } from '@dhis2/ui';\nimport classes from './styles/DeleteItemButton.module.css';\n\nconst DeleteItemButton = ({\n  onClick\n}) => <button type=\"button\" className={classes.deleteItemButton} onClick={onClick} title={i18n.t(`Delete item`)}>\n        <DeleteIcon style={{\n    fill: colors.red500\n  }} />\n    </button>;\n\nDeleteItemButton.propTypes = {\n  onClick: PropTypes.func\n};\nexport default DeleteItemButton;","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport DeleteItemButton from './DeleteItemButton';\nimport { acRemoveDashboardItem } from '../../../actions/editDashboard';\nimport classes from './styles/ItemHeader.module.css';\n\nconst EditItemActions = ({\n  itemId,\n  acRemoveDashboardItem\n}) => {\n  const handleDeleteItem = () => acRemoveDashboardItem(itemId);\n\n  return <div className={classes.itemActionsWrap}>\n            <DeleteItemButton onClick={handleDeleteItem} />\n        </div>;\n};\n\nEditItemActions.propTypes = {\n  acRemoveDashboardItem: PropTypes.func,\n  itemId: PropTypes.string\n};\nconst mapDispatchToProps = {\n  acRemoveDashboardItem\n};\nexport default connect(null, mapDispatchToProps)(EditItemActions);","import React from 'react';\nimport { colors } from '@dhis2/ui';\n\nconst WarningIcon = () => <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24\" viewBox=\"0 0 24 24\" width=\"24\" fill={colors.grey600}>\n        <path d=\"M0 0h24v24H0z\" fill=\"none\" />\n        <path d=\"M12 2C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2zm1 15h-2v-6h2v6zm0-8h-2V7h2v2z\" />\n    </svg>;\n\nexport default WarningIcon;","import React from 'react';\nimport { Tooltip } from '@dhis2/ui';\nimport i18n from '@dhis2/d2-i18n';\nimport InfoIcon from '../../../icons/Info';\nimport classes from './styles/PrintItemInfo.module.css';\n\nconst PrintWarning = () => <div className={classes.warning}>\n        <Tooltip content={i18n.t('This item has been shortened to fit on one page')} placement=\"bottom\">\n            <InfoIcon />\n        </Tooltip>\n    </div>;\n\nexport default PrintWarning;","export const EDIT = 'edit';\nexport const NEW = 'new';\nexport const VIEW = 'view';\nexport const PRINT = 'print';\nexport const PRINT_LAYOUT = 'print-layout';\nexport const isEditMode = mode => [EDIT, NEW].includes(mode);\nexport const isPrintMode = mode => [PRINT, PRINT_LAYOUT].includes(mode);\nexport const isViewMode = mode => mode === VIEW;","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport ViewItemActions from './ViewItemActions';\nimport EditItemActions from './EditItemActions';\nimport PrintItemInfo from './PrintItemInfo';\nimport { VIEW, EDIT, PRINT_LAYOUT } from '../../Dashboard/dashboardModes';\nimport classes from './styles/ItemHeader.module.css';\n\nconst getItemActionsMap = isShortened => {\n  return {\n    [VIEW]: ViewItemActions,\n    [EDIT]: EditItemActions,\n    [PRINT_LAYOUT]: isShortened ? PrintItemInfo : null\n  };\n}; // This is the margin-top + margin-bottom defined in the css file\n\n\nexport const HEADER_MARGIN_HEIGHT = 12;\nconst ItemHeader = React.forwardRef(({\n  dashboardMode,\n  title,\n  isShortened,\n  ...rest\n}, ref) => {\n  const Actions = getItemActionsMap(isShortened)[dashboardMode];\n  return <div className={classes.itemHeaderWrap} ref={ref}>\n                <p className={classes.itemTitle}>{title}</p>\n                {Actions ? <Actions {...rest} /> : null}\n            </div>;\n});\nItemHeader.displayName = 'ItemHeader';\nItemHeader.propTypes = {\n  dashboardMode: PropTypes.string,\n  isShortened: PropTypes.bool,\n  title: PropTypes.string\n};\nexport default connect(null, null, null, {\n  forwardRef: true\n})(ItemHeader);","import React, { useState, createRef } from 'react';\nimport PropTypes from 'prop-types';\nimport { useConfig } from '@dhis2/app-runtime';\nimport { isSingleValue, isYearOverYear, VIS_TYPE_GAUGE, VIS_TYPE_PIE } from '@dhis2/analytics';\nimport { Button, Menu, Popover, MenuItem, Divider, colors } from '@dhis2/ui';\nimport i18n from '@dhis2/d2-i18n';\nimport TableIcon from '@material-ui/icons/ViewList';\nimport ChartIcon from '@material-ui/icons/InsertChart';\nimport MapIcon from '@material-ui/icons/Public';\nimport LaunchIcon from '@material-ui/icons/Launch';\nimport { ThreeDots, SpeechBubble, Fullscreen, ExitFullscreen } from './assets/icons';\nimport { getLink } from './Visualization/plugin';\nimport { CHART, MAP, REPORT_TABLE, EVENT_CHART, EVENT_REPORT, isTrackerDomainType, hasMapView, getAppName } from '../../../modules/itemTypes';\nconst iconFill = {\n  fill: colors.grey600\n};\n\nconst ItemHeaderButtons = props => {\n  const [menuIsOpen, setMenuIsOpen] = useState(null);\n  const {\n    baseUrl\n  } = useConfig();\n  const {\n    item,\n    visualization,\n    onSelectActiveType,\n    activeType\n  } = props;\n  const isTrackerType = isTrackerDomainType(item.type);\n\n  const onViewTable = () => {\n    closeMenu();\n    onSelectActiveType(isTrackerType ? EVENT_REPORT : REPORT_TABLE);\n  };\n\n  const onViewChart = () => {\n    closeMenu();\n    onSelectActiveType(isTrackerType ? EVENT_CHART : CHART);\n  };\n\n  const onViewMap = () => {\n    closeMenu();\n    onSelectActiveType(MAP);\n  };\n\n  const itemHasMapView = () => hasMapView(item.type);\n\n  const handleInterpretationClick = () => {\n    props.onToggleFooter();\n\n    if (menuIsOpen) {\n      closeMenu();\n    }\n  };\n\n  const handleToggleFullscreenClick = () => {\n    props.onToggleFullscreen();\n    closeMenu();\n  };\n\n  const openMenu = () => setMenuIsOpen(true);\n\n  const closeMenu = () => setMenuIsOpen(false);\n\n  const type = visualization.type || item.type;\n  const canViewAs = !isSingleValue(type) && !isYearOverYear(type) && type !== VIS_TYPE_GAUGE && type !== VIS_TYPE_PIE;\n  const interpretationMenuLabel = props.activeFooter ? i18n.t(`Hide interpretations and details`) : i18n.t(`Show interpretations and details`);\n\n  const ViewAsMenuItems = () => <>\n            {activeType !== CHART && activeType !== EVENT_CHART && <MenuItem dense label={i18n.t('View as Chart')} onClick={onViewChart} icon={<ChartIcon style={iconFill} />} />}\n            {activeType !== REPORT_TABLE && activeType !== EVENT_REPORT && <MenuItem dense label={i18n.t('View as Table')} onClick={onViewTable} icon={<TableIcon style={iconFill} />} />}\n            {itemHasMapView() && activeType !== MAP && <MenuItem dense label={i18n.t('View as Map')} onClick={onViewMap} icon={<MapIcon style={iconFill} />} />}\n        </>;\n\n  const buttonRef = createRef();\n  return props.isFullscreen ? <Button small secondary onClick={props.onToggleFullscreen}>\n            <ExitFullscreen />\n        </Button> : <>\n            <div ref={buttonRef}>\n                <Button small secondary onClick={openMenu} dataTest=\"dashboarditem-menu-button\">\n                    <ThreeDots />\n                </Button>\n            </div>\n            {menuIsOpen && <Popover reference={buttonRef} placement=\"auto-start\" arrow={false} onClickOutside={closeMenu}>\n                    <Menu>\n                        {canViewAs && <>\n                                <ViewAsMenuItems />\n                                <Divider />\n                            </>}\n                        <MenuItem dense icon={<LaunchIcon style={{\n          fill: '#6e7a8a'\n        }} />} label={i18n.t('Open in {{appName}} app', {\n          appName: getAppName(item.type)\n        })} href={getLink(item, baseUrl)} target=\"_blank\" />\n                        <MenuItem dense icon={<SpeechBubble />} label={interpretationMenuLabel} onClick={handleInterpretationClick} />\n                        {props.fullscreenSupported && <MenuItem dense icon={<Fullscreen />} label={i18n.t('View fullscreen')} onClick={handleToggleFullscreenClick} />}\n                    </Menu>\n                </Popover>}\n        </>;\n};\n\nItemHeaderButtons.propTypes = {\n  activeFooter: PropTypes.bool,\n  activeType: PropTypes.string,\n  fullscreenSupported: PropTypes.bool,\n  isFullscreen: PropTypes.bool,\n  item: PropTypes.object,\n  visualization: PropTypes.object,\n  onSelectActiveType: PropTypes.func,\n  onToggleFooter: PropTypes.func,\n  onToggleFullscreen: PropTypes.func\n};\nexport default ItemHeaderButtons;","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { getVisualizationId } from '../../../modules/item';\nimport InterpretationsComponent from '@dhis2/d2-ui-interpretations';\nimport { useD2 } from '@dhis2/app-runtime-adapter-d2';\nimport classes from './styles/ItemFooter.module.css';\n\nconst ItemFooter = props => {\n  const {\n    d2\n  } = useD2({});\n  return <div data-test=\"dashboarditem-footer\">\n            <hr className={classes.line} />\n            <div className={classes.scrollContainer}>\n                <InterpretationsComponent d2={d2} item={props.item} type={props.item.type.toLowerCase()} id={getVisualizationId(props.item)} appName=\"dashboard\" />\n            </div>\n        </div>;\n};\n\nItemFooter.propTypes = {\n  item: PropTypes.object.isRequired\n};\nexport default ItemFooter;","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport uniqueId from 'lodash/uniqueId';\nimport Visualization from './Visualization/Visualization';\nimport FatalErrorBoundary from './FatalErrorBoundary';\nimport ItemHeader, { HEADER_MARGIN_HEIGHT } from '../ItemHeader/ItemHeader';\nimport ItemHeaderButtons from './ItemHeaderButtons';\nimport ItemFooter from './ItemFooter';\nimport { apiPostDataStatistics } from '../../../api/dataStatistics';\nimport { apiFetchVisualization } from '../../../api/metadata';\nimport { sGetVisualization } from '../../../reducers/visualizations';\nimport { sGetSelectedItemActiveType } from '../../../reducers/selected';\nimport { sGetIsEditing } from '../../../reducers/editDashboard';\nimport { sGetItemFiltersRoot, DEFAULT_STATE_ITEM_FILTERS } from '../../../reducers/itemFilters';\nimport { sGatherAnalyticalObjectStatisticsInDashboardViews } from '../../../reducers/settings';\nimport { acAddVisualization } from '../../../actions/visualizations';\nimport { acSetSelectedItemActiveType } from '../../../actions/selected';\nimport { pluginIsAvailable } from './Visualization/plugin';\nimport { getDataStatisticsName } from '../../../modules/itemTypes';\nimport { getVisualizationId, getVisualizationName } from '../../../modules/item';\nimport memoizeOne from '../../../modules/memoizeOne';\nimport { isEditMode, isPrintMode, isViewMode } from '../../Dashboard/dashboardModes';\nimport { ITEM_CONTENT_PADDING_BOTTOM } from '../../ItemGrid/ItemGrid';\nexport class Item extends Component {\n  state = {\n    showFooter: false,\n    configLoaded: false,\n    isFullscreen: false\n  };\n\n  constructor(props) {\n    super(props);\n    this.contentRef = React.createRef();\n    this.headerRef = React.createRef();\n    this.itemDomElSelector = `.reactgriditem-${this.props.item.id}`;\n    this.memoizedGetContentHeight = memoizeOne((calculatedHeight, measuredHeight, preferMeasured) => preferMeasured ? measuredHeight || calculatedHeight : calculatedHeight);\n  }\n\n  async componentDidMount() {\n    this.props.updateVisualization(await apiFetchVisualization(this.props.item));\n\n    try {\n      if (this.props.gatherDataStatistics && isViewMode(this.props.dashboardMode)) {\n        await apiPostDataStatistics(getDataStatisticsName(this.props.item.type), getVisualizationId(this.props.item));\n      }\n    } catch (e) {\n      console.log(e);\n    }\n\n    this.setState({\n      configLoaded: true\n    });\n    const el = document.querySelector(this.itemDomElSelector);\n\n    if (el?.requestFullscreen) {\n      el.onfullscreenchange = this.handleFullscreenChange;\n    } else if (el?.webkitRequestFullscreen) {\n      el.onwebkitfullscreenchange = this.handleFullscreenChange;\n    }\n  }\n\n  componentWillUnmount() {\n    const el = document.querySelector(this.itemDomElSelector);\n\n    if (el?.onfullscreenchange) {\n      el.removeEventListener('onfullscreenchange', this.handleFullscreenChange);\n    } else if (el?.onwebkitfullscreenchange) {\n      el.removeEventListener('onwebkitfullscreenchange', this.handleFullscreenChange);\n    }\n  }\n\n  isFullscreenSupported = () => {\n    const el = document.querySelector(this.itemDomElSelector);\n    return !!(el?.requestFullscreen || el?.webkitRequestFullscreen);\n  };\n  handleFullscreenChange = () => {\n    this.setState({\n      isFullscreen: !!document.fullscreenElement || !!document.webkitFullscreenElement\n    });\n  };\n  onToggleFullscreen = () => {\n    if (!this.state.isFullscreen) {\n      const el = document.querySelector(this.itemDomElSelector);\n\n      if (el?.requestFullscreen) {\n        el.requestFullscreen();\n      } else if (el?.webkitRequestFullscreen) {\n        el.webkitRequestFullscreen();\n      }\n    } else {\n      document.exitFullscreen ? document.exitFullscreen() : document.webkitExitFullscreen();\n    }\n  };\n  getUniqueKey = memoizeOne(() => uniqueId());\n  onToggleFooter = () => {\n    this.setState({\n      showFooter: !this.state.showFooter\n    }, this.props.onToggleItemExpanded(this.props.item.id));\n  };\n  setActiveType = type => {\n    type !== this.getActiveType() && this.props.setActiveType(this.props.item.id, type);\n  };\n  getActiveType = () => {\n    if (this.props.isEditing) {\n      return this.props.item.type;\n    }\n\n    return this.props.activeType || this.props.item.type;\n  };\n  getAvailableHeight = () => {\n    if (this.state.isFullscreen) {\n      return '95vh';\n    }\n\n    const calculatedHeight = this.props.item.originalHeight - this.headerRef.current.clientHeight - HEADER_MARGIN_HEIGHT - ITEM_CONTENT_PADDING_BOTTOM;\n    return this.memoizedGetContentHeight(calculatedHeight, this.contentRef ? this.contentRef.offsetHeight : null, isEditMode(this.props.dashboardMode) || isPrintMode(this.props.dashboardMode));\n  };\n\n  render() {\n    const {\n      item,\n      dashboardMode,\n      itemFilters\n    } = this.props;\n    const {\n      showFooter\n    } = this.state;\n    const activeType = this.getActiveType();\n    const actionButtons = pluginIsAvailable(activeType || item.type) ? <ItemHeaderButtons item={item} visualization={this.props.visualization} onSelectActiveType={this.setActiveType} onToggleFooter={this.onToggleFooter} onToggleFullscreen={this.onToggleFullscreen} activeType={activeType} activeFooter={showFooter} isFullscreen={this.state.isFullscreen} fullscreenSupported={this.isFullscreenSupported()} /> : null;\n    return <>\n                <ItemHeader title={getVisualizationName(item)} itemId={item.id} actionButtons={actionButtons} ref={this.headerRef} dashboardMode={dashboardMode} isShortened={item.shortened} />\n                <FatalErrorBoundary>\n                    <div key={this.getUniqueKey(itemFilters)} className=\"dashboard-item-content\" ref={ref => this.contentRef = ref}>\n                        {this.state.configLoaded && <Visualization item={item} activeType={activeType} itemFilters={itemFilters} availableHeight={this.getAvailableHeight()} />}\n                    </div>\n                </FatalErrorBoundary>\n                {isViewMode(dashboardMode) && showFooter ? <ItemFooter item={item} /> : null}\n            </>;\n  }\n\n}\nItem.propTypes = {\n  activeType: PropTypes.string,\n  dashboardMode: PropTypes.string,\n  gatherDataStatistics: PropTypes.bool,\n  isEditing: PropTypes.bool,\n  item: PropTypes.object,\n  itemFilters: PropTypes.object,\n  setActiveType: PropTypes.func,\n  updateVisualization: PropTypes.func,\n  visualization: PropTypes.object,\n  onToggleItemExpanded: PropTypes.func\n};\nItem.defaultProps = {\n  item: {},\n  onToggleItemExpanded: Function.prototype,\n  visualization: {}\n};\n\nconst mapStateToProps = (state, ownProps) => {\n  const itemFilters = !isEditMode(ownProps.dashboardMode) ? sGetItemFiltersRoot(state) : DEFAULT_STATE_ITEM_FILTERS;\n  return {\n    activeType: sGetSelectedItemActiveType(state, ownProps.item?.id),\n    isEditing: sGetIsEditing(state),\n    itemFilters,\n    visualization: sGetVisualization(state, getVisualizationId(ownProps.item)),\n    gatherDataStatistics: sGatherAnalyticalObjectStatisticsInDashboardViews(state)\n  };\n};\n\nconst mapDispatchToProps = {\n  setActiveType: acSetSelectedItemActiveType,\n  updateVisualization: acAddVisualization\n};\nexport default connect(mapStateToProps, mapDispatchToProps)(Item);","import React from 'react';\nimport { colors } from '@dhis2/ui';\nconst style = {\n  backgroundColor: colors.grey200,\n  border: 'none',\n  height: '1px',\n  margin: '0px 0px 5px 0px'\n};\n\nconst Line = () => <hr style={style} />;\n\nexport default Line;","import React, { useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport i18n from '@dhis2/d2-i18n';\nimport { colors } from '@dhis2/ui';\nimport { useConfig } from '@dhis2/app-runtime';\nimport { useD2 } from '@dhis2/app-runtime-adapter-d2';\nimport ItemHeader from '../ItemHeader/ItemHeader';\nimport Line from '../../../widgets/Line';\nimport { sGetMessagesRoot } from '../../../reducers/messages';\nimport { formatDate } from '../../../modules/util';\nimport { isViewMode } from '../../Dashboard/dashboardModes';\nimport './MessagesItem.css';\nconst PRIVATE = 'PRIVATE';\nconst messageTypes = {\n  [PRIVATE]: 'Private',\n  VALIDATION_RESULT: 'Validation',\n  TICKET: 'Ticket',\n  SYSTEM: 'System'\n};\nconst style = {\n  list: {\n    listStyleType: 'none',\n    paddingLeft: '0px'\n  },\n  seeAll: {\n    textAlign: 'center',\n    fontSize: '13px',\n    marginBottom: '5px'\n  },\n  sender: {\n    fontSize: '13px',\n    lineHeight: '15px',\n    margin: 0,\n    color: colors.grey800\n  },\n  snippet: {\n    color: colors.grey800,\n    fontSize: '13px',\n    lineHeight: '15px',\n    maxHeight: '30px',\n    overflow: 'hidden'\n  }\n};\n\nconst MessagesItem = ({\n  messages,\n  item,\n  dashboardMode\n}) => {\n  const [uiLocale, setUiLocale] = useState('');\n  const {\n    d2\n  } = useD2({});\n  const {\n    baseUrl\n  } = useConfig();\n  useEffect(() => {\n    const getUiLocale = async () => {\n      const uiLocale = await d2.currentUser.userSettings.get('keyUiLocale');\n      setUiLocale(uiLocale);\n    };\n\n    getUiLocale();\n  }, []);\n\n  const getMessageHref = msg => {\n    const msgIdentifier = msg ? `#/${msg.messageType}/${msg.id}` : '';\n    return `${baseUrl}/dhis-web-messaging/${msgIdentifier}`;\n  };\n\n  const getMessageSender = msg => {\n    const latestMsg = msg.messages.slice(-1)[0];\n    return latestMsg.sender ? latestMsg.sender.displayName : '';\n  };\n\n  const getMessageItems = () => {\n    const modeClass = isViewMode(dashboardMode) ? 'view' : null;\n    return messages.map(msg => {\n      const redirectToMsg = () => {\n        if (isViewMode(dashboardMode)) {\n          document.location.href = getMessageHref(msg);\n        }\n      };\n\n      const sender = msg.messageType === PRIVATE ? getMessageSender(msg) : messageTypes[msg.messageType];\n      const readClass = !msg.read ? 'unread' : null;\n      const latestMsg = msg.messages.slice(-1)[0];\n      const msgDate = latestMsg.lastUpdated;\n      return <li className={`message-item ${modeClass}`} key={msg.id} onClick={redirectToMsg}>\n                    <p className={`message-title ${readClass}`}>\n                        {msg.displayName} ({msg.messageCount})\n                    </p>\n                    <p style={style.sender}>\n                        {sender} - {formatDate(msgDate, uiLocale)}\n                    </p>\n                    <p style={style.snippet}>{latestMsg.text}</p>\n                </li>;\n    });\n  };\n\n  return <>\n            <ItemHeader title={i18n.t('Messages')} itemId={item.id} dashboardMode={dashboardMode} isShortened={item.shortened} />\n            <Line />\n            {messages.length > 0 && <div className=\"dashboard-item-content\">\n                    <ul style={style.list}>{getMessageItems()}</ul>\n                    <div style={style.seeAll}>\n                        <a href={getMessageHref()}>\n                            {i18n.t('See all messages')}\n                        </a>\n                    </div>\n                </div>}\n        </>;\n};\n\nMessagesItem.propTypes = {\n  dashboardMode: PropTypes.string,\n  item: PropTypes.object,\n  messages: PropTypes.array\n};\n\nconst mapStateToProps = state => {\n  return {\n    messages: Object.values(sGetMessagesRoot(state))\n  };\n};\n\nconst MessagesContainer = connect(mapStateToProps, null)(MessagesItem);\nexport default MessagesContainer;","import React from 'react';\nimport PropTypes from 'prop-types';\nimport i18n from '@dhis2/d2-i18n';\nimport ItemHeader from '../ItemHeader/ItemHeader';\nimport NotInterestedIcon from '@material-ui/icons/NotInterested';\n\nconst NotSupportedItem = props => <>\n        <ItemHeader title={i18n.t('Item type \"{{type}}\" not supported', {\n    type: props.item.type\n  })} itemId={props.item.id} dashboardMode={props.dashboardMode} isShortened={props.item.shortened} />\n        <div style={{\n    display: 'flex',\n    justifyContent: 'center',\n    alignItems: 'center',\n    height: '90%'\n  }}>\n            <NotInterestedIcon style={{\n      width: 100,\n      height: 100,\n      align: 'center'\n    }} color=\"disabled\" />\n        </div>\n    </>;\n\nNotSupportedItem.propTypes = {\n  dashboardMode: PropTypes.string,\n  item: PropTypes.object\n};\nexport default NotSupportedItem;","import React from 'react';\nimport { colors } from '@dhis2/ui';\nimport PropTypes from 'prop-types';\n\nconst DescriptionIcon = ({\n  className\n}) => <svg className={className} xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\" fill={colors.grey500}>\n        <path d=\"M0 0h24v24H0z\" fill=\"none\" />\n        <path d=\"M14 2H6c-1.1 0-1.99.9-1.99 2L4 20c0 1.1.89 2 1.99 2H18c1.1 0 2-.9 2-2V8l-6-6zm2 16H8v-2h8v2zm0-4H8v-2h8v2zm-3-5V3.5L18.5 9H13z\" />\n    </svg>;\n\nDescriptionIcon.propTypes = {\n  className: PropTypes.string\n};\nexport default DescriptionIcon;","import React from 'react';\nimport { colors } from '@dhis2/ui';\nimport PropTypes from 'prop-types';\n\nconst DeleteIcon = ({\n  className\n}) => <svg className={className} xmlns=\"http://www.w3.org/2000/svg\" width=\"18\" height=\"18\" viewBox=\"0 0 24 24\" fill={colors.red500}>\n        <path d=\"M6 19c0 1.1.9 2 2 2h8c1.1 0 2-.9 2-2V7H6v12zM19 4h-3.5l-1-1h-5l-1 1H5v2h14V4z\" />\n        <path d=\"M0 0h24v24H0z\" fill=\"none\" />\n    </svg>;\n\nDeleteIcon.propTypes = {\n  className: PropTypes.string\n};\nexport default DeleteIcon;","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { colors } from '@dhis2/ui';\nimport { useConfig } from '@dhis2/app-runtime';\nimport DescriptionIcon from '../../../icons/Description';\nimport DeleteIcon from '../../../icons/Delete';\nimport Line from '../../../widgets/Line';\nimport { itemTypeMap, getItemUrl } from '../../../modules/itemTypes';\nimport { orArray } from '../../../modules/util';\nimport { tRemoveListItemContent } from './actions';\nimport ItemHeader from '../ItemHeader/ItemHeader';\nimport { isEditMode } from '../../Dashboard/dashboardModes';\nimport classes from './Item.module.css';\n\nconst getItemTitle = item => itemTypeMap[item.type].pluralTitle;\n\nconst getContentItems = item => orArray(item[itemTypeMap[item.type].propName]).filter((item, index, array) => array.findIndex(el => el.id === item.id) === index);\n\nconst ListItem = ({\n  item,\n  dashboardMode,\n  tRemoveListItemContent\n}) => {\n  const {\n    baseUrl\n  } = useConfig();\n  const contentItems = getContentItems(item);\n\n  const getLink = contentItem => {\n    const deleteButton = <button className={classes.deletebutton} onClick={() => tRemoveListItemContent(item, contentItem)}>\n                <DeleteIcon className={classes.deleteicon} />\n            </button>;\n    return <>\n                <a className={classes.link} style={{\n        color: colors.grey900\n      }} href={getItemUrl(item.type, contentItem, baseUrl)}>\n                    {contentItem.name}\n                </a>\n                {isEditMode(dashboardMode) ? deleteButton : null}\n            </>;\n  };\n\n  return <>\n            <ItemHeader title={getItemTitle(item)} itemId={item.id} dashboardMode={dashboardMode} isShortened={item.shortened} />\n            <Line />\n            <div className=\"dashboard-item-content\">\n                <ul className={classes.list}>\n                    {contentItems.map(contentItem => <li className={classes.item} key={contentItem.id}>\n                            <DescriptionIcon className={classes.itemicon} />\n                            {getLink(contentItem)}\n                        </li>)}\n                </ul>\n            </div>\n        </>;\n};\n\nListItem.propTypes = {\n  dashboardMode: PropTypes.string,\n  item: PropTypes.object,\n  tRemoveListItemContent: PropTypes.func\n};\nexport default connect(null, {\n  tRemoveListItemContent\n})(ListItem);","import { acUpdateDashboardItem, acRemoveDashboardItem } from '../../../actions/editDashboard';\nimport { itemTypeMap } from '../../../modules/itemTypes';\nexport const tRemoveListItemContent = (dashboardItem, content) => dispatch => {\n  const listItemType = itemTypeMap[dashboardItem.type].propName;\n  const newContent = dashboardItem[listItemType].filter(item => item.id !== content.id);\n\n  if (newContent.length) {\n    dashboardItem[listItemType] = newContent;\n    dispatch(acUpdateDashboardItem(dashboardItem));\n  } else {\n    dispatch(acRemoveDashboardItem(dashboardItem));\n  }\n};","/** @module reducers/editDashboard */\nimport update from 'immutability-helper';\nimport isEmpty from 'lodash/isEmpty';\nimport { orArray } from '../modules/util';\nexport const SET_PRINT_DASHBOARD = 'SET_PRINT_DASHBOARD';\nexport const CLEAR_PRINT_DASHBOARD = 'CLEAR_PRINT_DASHBOARD';\nexport const ADD_PRINT_DASHBOARD_ITEM = 'ADD_PRINT_DASHBOARD_ITEM';\nexport const SET_PRINT_DASHBOARD_LAYOUT = 'SET_PRINT_DASHBOARD_LAYOUT';\nexport const REMOVE_PRINT_DASHBOARD_ITEM = 'REMOVE_PRINT_DASHBOARD_ITEM';\nexport const UPDATE_PRINT_DASHBOARD_ITEM = 'UPDATE_PRINT_DASHBOARD_ITEM';\nexport const DEFAULT_STATE_PRINT_DASHBOARD = {};\nconst DEFAULT_DASHBOARD_ITEMS = [];\nexport const NEW_PRINT_DASHBOARD_STATE = {\n  id: '',\n  name: '',\n  access: {},\n  description: '',\n  dashboardItems: DEFAULT_DASHBOARD_ITEMS\n};\nexport default ((state = DEFAULT_STATE_PRINT_DASHBOARD, action) => {\n  switch (action.type) {\n    case SET_PRINT_DASHBOARD:\n      {\n        const newState = {};\n        Object.keys(NEW_PRINT_DASHBOARD_STATE).map(k => newState[k] = action.value[k]);\n        return newState;\n      }\n\n    case CLEAR_PRINT_DASHBOARD:\n      return DEFAULT_STATE_PRINT_DASHBOARD;\n\n    case ADD_PRINT_DASHBOARD_ITEM:\n      if (!action.value.position) {\n        return update(state, {\n          dashboardItems: {\n            $unshift: [action.value]\n          }\n        });\n      }\n\n      return update(state, {\n        dashboardItems: {\n          $splice: [[parseInt(action.value.position), 0, action.value]]\n        }\n      });\n\n    case REMOVE_PRINT_DASHBOARD_ITEM:\n      {\n        const idToRemove = action.value;\n        const dashboardItemIndex = state.dashboardItems.findIndex(item => item.id === idToRemove);\n\n        if (dashboardItemIndex > -1) {\n          return update(state, {\n            dashboardItems: {\n              $splice: [[dashboardItemIndex, 1]]\n            }\n          });\n        }\n\n        return state;\n      }\n\n    case UPDATE_PRINT_DASHBOARD_ITEM:\n      {\n        const dashboardItem = action.value;\n        const dashboardItemIndex = state.dashboardItems.findIndex(item => item.id === dashboardItem.id);\n\n        if (dashboardItemIndex > -1) {\n          const newState = update(state, {\n            dashboardItems: {\n              $splice: [[dashboardItemIndex, 1, Object.assign({}, dashboardItem)]]\n            }\n          });\n          return newState;\n        }\n\n        return state;\n      }\n\n    case SET_PRINT_DASHBOARD_LAYOUT:\n      {\n        const stateItems = orArray(state.dashboardItems);\n        let layoutHasChanged = false;\n        const newStateItems = action.value.map(({\n          x,\n          y,\n          w,\n          h,\n          i\n        }) => {\n          const stateItem = stateItems.find(si => si.id === i);\n\n          if (!(stateItem.x === x && stateItem.y === y && stateItem.w === w && stateItem.h === h)) {\n            layoutHasChanged = true;\n            return Object.assign({}, stateItem, {\n              w,\n              h,\n              x,\n              y\n            });\n          }\n\n          return stateItem;\n        });\n        return layoutHasChanged ? { ...state,\n          dashboardItems: newStateItems\n        } : state;\n      }\n\n    default:\n      return state;\n  }\n}); // root selector\n\nexport const sGetPrintDashboardRoot = state => state.printDashboard; // selectors\n\nexport const sGetIsPrinting = state => !isEmpty(state.printDashboard);\nexport const sGetPrintDashboardName = state => sGetPrintDashboardRoot(state).name;\nexport const sGetPrintDashboardDescription = state => sGetPrintDashboardRoot(state).description;\nexport const sGetPrintDashboardItems = state => {\n  return sGetPrintDashboardRoot(state)?.dashboardItems || DEFAULT_DASHBOARD_ITEMS;\n};","import React from 'react';\nimport { connect } from 'react-redux';\nimport i18n from '@dhis2/d2-i18n';\nimport PropTypes from 'prop-types';\nimport Input from '@material-ui/core/Input';\nimport ItemHeader from '../ItemHeader/ItemHeader';\nimport PrintItemInfo from '../ItemHeader/PrintItemInfo';\nimport Line from '../../../widgets/Line';\nimport { Parser as RichTextParser, Editor as RichTextEditor } from '@dhis2/d2-ui-rich-text';\nimport { acUpdateDashboardItem } from '../../../actions/editDashboard';\nimport { sGetEditDashboardItems } from '../../../reducers/editDashboard';\nimport { sGetDashboardItems } from '../../../reducers/dashboards';\nimport { sGetIsPrinting, sGetPrintDashboardItems } from '../../../reducers/printDashboard';\nimport { isEditMode, PRINT_LAYOUT } from '../../Dashboard/dashboardModes';\nconst style = {\n  textDiv: {\n    padding: '10px',\n    whiteSpace: 'pre-line',\n    lineHeight: '20px'\n  },\n  textField: {\n    fontSize: '14px',\n    fontStretch: 'normal',\n    width: '90%',\n    margin: '0 auto',\n    display: 'block',\n    lineHeight: '24px'\n  },\n  container: {\n    marginBottom: '20px',\n    marginTop: '20px'\n  }\n};\n\nconst TextItem = props => {\n  const {\n    item,\n    dashboardMode,\n    text,\n    acUpdateDashboardItem\n  } = props;\n\n  const onChangeText = event => {\n    const updatedItem = { ...item,\n      text: event.target.value\n    };\n    acUpdateDashboardItem(updatedItem);\n  };\n\n  const viewItem = () => {\n    const textDivStyle = Object.assign({}, style.textField, style.textDiv);\n    return <div className=\"dashboard-item-content\" style={style.container}>\n                <RichTextParser style={textDivStyle}>{text}</RichTextParser>\n            </div>;\n  };\n\n  const editItem = () => {\n    return <>\n                <ItemHeader title={i18n.t('Text item')} itemId={item.id} dashboardMode={dashboardMode} />\n                <Line />\n                <div className=\"dashboard-item-content\">\n                    <RichTextEditor onEdit={onChangeText}>\n                        <Input value={text} multiline fullWidth style={style.textField} placeholder={i18n.t('Add text here')} onChange={onChangeText} />\n                    </RichTextEditor>\n                </div>\n            </>;\n  };\n\n  const printItem = () => {\n    const textDivStyle = Object.assign({}, style.textField, style.textDiv);\n    return <>\n                {props.item.shortened ? <PrintItemInfo /> : null}\n                <div className=\"dashboard-item-content\" style={style.container}>\n                    <RichTextParser style={textDivStyle}>{text}</RichTextParser>\n                </div>\n            </>;\n  };\n\n  let textItem;\n\n  if (isEditMode(dashboardMode)) {\n    textItem = editItem;\n  } else if (dashboardMode === PRINT_LAYOUT) {\n    textItem = printItem;\n  } else {\n    textItem = viewItem;\n  }\n\n  return <>{textItem()}</>;\n};\n\nconst mapStateToProps = (state, ownProps) => {\n  const isPrintPreview = sGetIsPrinting(state);\n  let items;\n\n  if (isPrintPreview) {\n    items = sGetPrintDashboardItems(state);\n  } else if (isEditMode(ownProps.dashboardMode)) {\n    items = sGetEditDashboardItems(state);\n  } else {\n    items = sGetDashboardItems(state);\n  }\n\n  const item = items.find(item => item.id === ownProps.item.id);\n  return {\n    text: item ? item.text : ''\n  };\n};\n\nTextItem.propTypes = {\n  acUpdateDashboardItem: PropTypes.func,\n  dashboardMode: PropTypes.string,\n  item: PropTypes.object,\n  text: PropTypes.string\n};\nexport default connect(mapStateToProps, {\n  acUpdateDashboardItem\n})(TextItem);","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport NotInterestedIcon from '@material-ui/icons/NotInterested';\nimport { useD2 } from '@dhis2/app-runtime-adapter-d2';\nimport ItemHeader from '../ItemHeader/ItemHeader';\nimport Line from '../../../widgets/Line';\nimport { FILTER_ORG_UNIT } from '../../../actions/itemFilters';\nimport { sGetItemFiltersRoot, DEFAULT_STATE_ITEM_FILTERS } from '../../../reducers/itemFilters';\nimport { EDIT, isEditMode } from '../../Dashboard/dashboardModes';\n\nconst getIframeSrc = (appDetails, item, itemFilters) => {\n  let iframeSrc = `${appDetails.launchUrl}?dashboardItemId=${item.id}`;\n\n  if (itemFilters[FILTER_ORG_UNIT] && itemFilters[FILTER_ORG_UNIT].length) {\n    const ouIds = itemFilters[FILTER_ORG_UNIT].map(ouFilter => ouFilter.path.split('/').slice(-1)[0]);\n    iframeSrc += `&userOrgUnit=${ouIds.join(',')}`;\n  }\n\n  return iframeSrc;\n};\n\nconst AppItem = ({\n  dashboardMode,\n  item,\n  itemFilters\n}) => {\n  const {\n    d2\n  } = useD2({});\n  let appDetails;\n  const appKey = item.appKey;\n\n  if (appKey) {\n    appDetails = d2.system.installedApps.find(app => app.key === appKey);\n  }\n\n  const hideTitle = appDetails?.settings?.dashboardWidget?.hideTitle && dashboardMode !== EDIT;\n  return appDetails && appDetails.name && appDetails.launchUrl ? <>\n            {!hideTitle && <>\n                    <ItemHeader title={appDetails.name} itemId={item.id} dashboardMode={dashboardMode} isShortened={item.shortened} />\n                    <Line />\n                </>}\n            <iframe title={appDetails.name} src={getIframeSrc(appDetails, item, itemFilters)} className={!hideTitle ? 'dashboard-item-content' : 'dashboard-item-content-hidden-title'} style={{\n      border: 'none'\n    }} />\n        </> : <>\n            <ItemHeader title={`${appKey} app not found`} />\n            <Line />\n            <div className=\"dashboard-item-content\" style={{\n      display: 'flex',\n      justifyContent: 'center',\n      alignItems: 'center',\n      height: '90%'\n    }}>\n                <NotInterestedIcon color=\"disabled\" disabled style={{\n        width: 100,\n        height: 100,\n        align: 'center'\n      }} />\n            </div>\n        </>;\n};\n\nAppItem.propTypes = {\n  dashboardMode: PropTypes.string,\n  item: PropTypes.object,\n  itemFilters: PropTypes.object\n};\n\nconst mapStateToProps = (state, ownProps) => {\n  const itemFilters = !isEditMode(ownProps.dashboardMode) ? sGetItemFiltersRoot(state) : DEFAULT_STATE_ITEM_FILTERS;\n  return {\n    itemFilters\n  };\n};\n\nexport default connect(mapStateToProps)(AppItem);","import React from 'react';\nimport PropTypes from 'prop-types';\nimport i18n from '@dhis2/d2-i18n';\nimport { colors } from '@dhis2/ui';\nimport ItemHeader from '../ItemHeader/ItemHeader';\nconst style = {\n  margin: '21px 28px',\n  fontSize: '14px',\n  lineHeight: '18px',\n  color: colors.grey600\n};\n\nconst SpacerItem = props => {\n  return <>\n            <ItemHeader title={i18n.t('Spacer')} itemId={props.item.id} dashboardMode={props.dashboardMode} isShortened={props.item.shortened} />\n            <p style={style}>\n                {i18n.t('Use a spacer to create empty vertical space between other dashboard items.')}\n            </p>\n        </>;\n};\n\nSpacerItem.propTypes = {\n  dashboardMode: PropTypes.string,\n  item: PropTypes.object\n};\nexport default SpacerItem;","import React from 'react';\n\nconst PageBreakItem = () => <div />;\n\nexport default PageBreakItem;","import React from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport i18n from '@dhis2/d2-i18n';\nimport { sGetSelectedId, sGetSelectedShowDescription } from '../../../reducers/selected';\nimport { sGetDashboardById, EMPTY_DASHBOARD } from '../../../reducers/dashboards';\nimport { sGetNamedItemFilters } from '../../../reducers/itemFilters';\nimport { sGetIsEditing } from '../../../reducers/editDashboard';\nimport { sGetPrintDashboardName, sGetPrintDashboardDescription } from '../../../reducers/printDashboard';\nimport classes from './styles/Item.module.css';\n\nconst PrintTitlePageItem = ({\n  name,\n  description,\n  itemFilters,\n  showDescription\n}) => {\n  const getItemFilterList = () => {\n    const listItems = itemFilters.map(({\n      name,\n      values\n    }) => <li className={classes.filterListItem} key={name}>\n                {name}: {values.map(val => val.name).join(', ')}\n            </li>);\n    return <ul className={classes.filterList}>{listItems}</ul>;\n  };\n\n  return <div className={classes.titlePage}>\n            <p className={classes.name}>{name}</p>\n            {showDescription && description && <p className={classes.description}>{description}</p>}\n            {itemFilters.length > 0 && <>\n                    <p className={classes.filterTitle}>\n                        {i18n.t('Filters applied')}\n                    </p>\n                    {getItemFilterList()}\n                </>}\n        </div>;\n};\n\nPrintTitlePageItem.propTypes = {\n  description: PropTypes.string,\n  itemFilters: PropTypes.array,\n  name: PropTypes.string,\n  showDescription: PropTypes.bool\n};\nPrintTitlePageItem.defaultProps = {\n  description: '',\n  name: '',\n  showDescription: false\n};\n\nconst mapStateToProps = state => {\n  const id = sGetSelectedId(state);\n  const isEditMode = sGetIsEditing(state);\n  const viewDashboard = sGetDashboardById(state, id) || EMPTY_DASHBOARD;\n  const name = isEditMode ? sGetPrintDashboardName(state) || i18n.t('Untitled dashboard') : viewDashboard.displayName;\n  const description = isEditMode ? sGetPrintDashboardDescription(state) : viewDashboard.displayDescription;\n  return {\n    name,\n    description,\n    itemFilters: sGetNamedItemFilters(state),\n    showDescription: sGetSelectedShowDescription(state)\n  };\n};\n\nexport default connect(mapStateToProps)(PrintTitlePageItem);","import React from 'react';\nimport PropTypes from 'prop-types';\nimport VisualizationItem from './VisualizationItem/Item';\nimport MessagesItem from './MessagesItem/Item';\nimport NotSupportedItem from './NotSupportedItem/Item';\nimport ListItem from './ListItem/Item';\nimport TextItem from './TextItem/Item';\nimport AppItem from './AppItem/Item';\nimport SpacerItem from './SpacerItem/Item';\nimport PageBreakItem from './PageBreakItem/Item';\nimport PrintTitlePageItem from './PrintTitlePageItem/Item';\nimport { APP, VISUALIZATION, REPORT_TABLE, CHART, MAP, EVENT_CHART, EVENT_REPORT, MESSAGES, REPORTS, RESOURCES, USERS, TEXT, SPACER, PAGEBREAK, PRINT_TITLE_PAGE } from '../../modules/itemTypes';\n\nconst getGridItem = type => {\n  switch (type) {\n    case VISUALIZATION:\n    case REPORT_TABLE:\n    case CHART:\n    case MAP:\n    case EVENT_CHART:\n    case EVENT_REPORT:\n      return VisualizationItem;\n\n    case MESSAGES:\n      return MessagesItem;\n\n    case REPORTS:\n    case RESOURCES:\n    case USERS:\n      return ListItem;\n\n    case TEXT:\n      return TextItem;\n\n    case SPACER:\n      return SpacerItem;\n\n    case APP:\n      return AppItem;\n\n    case PAGEBREAK:\n      return PageBreakItem;\n\n    case PRINT_TITLE_PAGE:\n      return PrintTitlePageItem;\n\n    default:\n      return NotSupportedItem;\n  }\n};\n\nexport const Item = props => {\n  const GridItem = getGridItem(props.item.type);\n  return <GridItem item={props.item} dashboardMode={props.dashboardMode} onToggleItemExpanded={props.onToggleItemExpanded} />;\n};\nItem.propTypes = {\n  dashboardMode: PropTypes.string,\n  item: PropTypes.object,\n  onToggleItemExpanded: PropTypes.func\n};","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport debounce from 'lodash/debounce';\nimport pick from 'lodash/pick';\nconst defaultDebounceMs = 100;\nconst defaultBufferFactor = 0.25;\n\nclass ProgressiveLoadingContainer extends Component {\n  static propTypes = {\n    children: PropTypes.node.isRequired,\n    bufferFactor: PropTypes.number,\n    className: PropTypes.string,\n    debounceMs: PropTypes.number,\n    style: PropTypes.object\n  };\n  static defaultProps = {\n    debounceMs: defaultDebounceMs,\n    bufferFactor: defaultBufferFactor\n  };\n  state = {\n    shouldLoad: false\n  };\n  containerRef = null;\n  shouldLoadHandler = null;\n  handlerOptions = {\n    passive: true\n  };\n\n  checkShouldLoad() {\n    if (!this.containerRef) {\n      return;\n    }\n\n    const bufferPx = this.props.bufferFactor * window.innerHeight;\n    const rect = this.containerRef.getBoundingClientRect();\n\n    if (rect.bottom > -bufferPx && rect.top < window.innerHeight + bufferPx) {\n      this.setState({\n        shouldLoad: true\n      });\n      this.removeHandler();\n    }\n  }\n\n  registerHandler() {\n    this.shouldLoadHandler = debounce(() => this.checkShouldLoad(), this.props.debounceMs);\n    document.getElementsByClassName('dashboard-wrapper')[0]?.addEventListener('scroll', this.shouldLoadHandler, this.handlerOptions);\n  }\n\n  removeHandler() {\n    document.getElementsByClassName('dashboard-wrapper')[0]?.removeEventListener('scroll', this.shouldLoadHandler, this.handlerOptions);\n  }\n\n  componentDidMount() {\n    this.registerHandler();\n    this.checkShouldLoad();\n  }\n\n  componentWillUnmount() {\n    this.removeHandler();\n  }\n\n  render() {\n    const {\n      children,\n      className,\n      style,\n      ...props\n    } = this.props;\n    const {\n      shouldLoad\n    } = this.state;\n    const eventProps = pick(props, ['onMouseDown', 'onTouchStart', 'onMouseUp', 'onTouchEnd']);\n    return <div ref={ref => this.containerRef = ref} style={style} className={className} data-test={`dashboarditem-${props.itemId}`} {...eventProps}>\n                {shouldLoad && children}\n            </div>;\n  }\n\n}\n\nexport default ProgressiveLoadingContainer;","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport i18n from '@dhis2/d2-i18n';\nimport ReactGridLayout from 'react-grid-layout';\nimport { Layer, CenteredContent, CircularLoader } from '@dhis2/ui';\nimport { acUpdateDashboardLayout } from '../../actions/editDashboard';\nimport { Item } from '../Item/Item';\nimport { resize as pluginResize } from '../Item/VisualizationItem/Visualization/plugin';\nimport { isVisualizationType } from '../../modules/itemTypes';\nimport { GRID_ROW_HEIGHT, GRID_COMPACT_TYPE, MARGIN, getGridColumns, hasShape, onItemResize } from './gridUtil';\nimport { orArray } from '../../modules/util';\nimport NoContentMessage from '../../widgets/NoContentMessage';\nimport 'react-grid-layout/css/styles.css';\nimport 'react-resizable/css/styles.css';\nimport './ItemGrid.css';\nimport { sGetSelectedId, sGetSelectedIsLoading } from '../../reducers/selected';\nimport { sGetEditDashboardRoot, sGetEditDashboardItems } from '../../reducers/editDashboard';\nimport { sGetDashboardById, sGetDashboardItems } from '../../reducers/dashboards';\nimport ProgressiveLoadingContainer from '../Item/ProgressiveLoadingContainer';\nimport { VIEW, EDIT } from '../Dashboard/dashboardModes'; // Component\n\nconst EXPANDED_HEIGHT = 17; // this is set in the .dashboard-item-content css\n\nexport const ITEM_CONTENT_PADDING_BOTTOM = 4;\nexport class ItemGrid extends Component {\n  state = {\n    expandedItems: {}\n  };\n  onToggleItemExpanded = clickedId => {\n    const isExpanded = typeof this.state.expandedItems[clickedId] === 'boolean' ? this.state.expandedItems[clickedId] : false;\n    const expandedItems = { ...this.state.expandedItems\n    };\n    expandedItems[clickedId] = !isExpanded;\n    this.setState({\n      expandedItems\n    });\n  };\n\n  UNSAFE_componentWillReceiveProps(nextProps) {\n    if (nextProps.edit) {\n      this.setState({\n        expandedItems: {}\n      });\n    }\n  }\n\n  onLayoutChange = newLayout => {\n    if (this.props.edit) {\n      this.props.acUpdateDashboardLayout(newLayout);\n    }\n  };\n  onResizeStop = (layout, oldItem, newItem) => {\n    onItemResize(newItem.i);\n    const dashboardItem = this.props.dashboardItems.find(item => item.id === newItem.i); // call resize on the item component if it's a plugin type\n\n    if (dashboardItem && isVisualizationType(dashboardItem)) {\n      pluginResize(dashboardItem);\n    }\n  };\n  adjustHeightForExpanded = dashboardItem => {\n    const expandedItem = this.state.expandedItems[dashboardItem.id];\n\n    if (expandedItem && expandedItem === true) {\n      return Object.assign({}, dashboardItem, {\n        h: dashboardItem.h + EXPANDED_HEIGHT\n      });\n    }\n\n    return dashboardItem;\n  };\n  getItemComponent = item => {\n    const itemClassNames = [item.type, this.props.edit ? 'edit' : 'view', `reactgriditem-${item.id}`].join(' ');\n    return <ProgressiveLoadingContainer key={item.i} className={itemClassNames} itemId={item.id}>\n                <Item item={item} dashboardMode={this.props.edit ? EDIT : VIEW} onToggleItemExpanded={this.onToggleItemExpanded} />\n            </ProgressiveLoadingContainer>;\n  };\n  getItemComponents = items => items.map(item => this.getItemComponent(item));\n\n  render() {\n    const {\n      edit,\n      isLoading,\n      dashboardItems\n    } = this.props;\n\n    if (!isLoading && !dashboardItems.length) {\n      return <NoContentMessage text={i18n.t('There are no items on this dashboard')} />;\n    }\n\n    const items = edit ? dashboardItems : dashboardItems.map(this.adjustHeightForExpanded);\n    return <div className=\"grid-wrapper\">\n                {isLoading ? <Layer translucent>\n                        <CenteredContent>\n                            <CircularLoader />\n                        </CenteredContent>\n                    </Layer> : null}\n                <ReactGridLayout onLayoutChange={this.onLayoutChange} onResizeStop={this.onResizeStop} className=\"layout\" layout={items} margin={MARGIN} cols={getGridColumns()} rowHeight={GRID_ROW_HEIGHT} width={window.innerWidth} compactType={GRID_COMPACT_TYPE} isDraggable={edit} isResizable={edit} draggableCancel=\"input,textarea\">\n                    {this.getItemComponents(items)}\n                </ReactGridLayout>\n            </div>;\n  }\n\n}\nItemGrid.propTypes = {\n  acUpdateDashboardLayout: PropTypes.func,\n  dashboardItems: PropTypes.array,\n  edit: PropTypes.bool,\n  isLoading: PropTypes.bool\n};\nItemGrid.defaultProps = {\n  dashboardItems: []\n}; // Container\n\nconst mapStateToProps = (state, ownProps) => {\n  const selectedDashboard = ownProps.edit ? sGetEditDashboardRoot(state) : sGetDashboardById(state, sGetSelectedId(state));\n  const dashboardItems = ownProps.edit ? sGetEditDashboardItems(state) : sGetDashboardItems(state);\n  return {\n    isLoading: sGetSelectedIsLoading(state) || !selectedDashboard,\n    dashboardItems\n  };\n};\n\nconst mapDispatchToProps = {\n  acUpdateDashboardLayout\n};\n\nconst mergeProps = (stateProps, dispatchProps, ownProps) => {\n  const validItems = orArray(stateProps.dashboardItems).filter(hasShape);\n  return { ...dispatchProps,\n    edit: ownProps.edit,\n    isLoading: stateProps.isLoading,\n    dashboardItems: validItems,\n    onItemResize\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps, mergeProps)(ItemGrid);","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport i18n from '@dhis2/d2-i18n';\nimport { colors } from '@dhis2/ui';\nconst styles = {\n  badgeContainer: {\n    margin: '2px',\n    padding: '0 16px',\n    borderRadius: '4px',\n    color: colors.white,\n    backgroundColor: '#212934',\n    height: 36,\n    display: 'flex',\n    alignItems: 'center'\n  },\n  badge: {\n    fontSize: '13px',\n    cursor: 'pointer',\n    whiteSpace: 'nowrap'\n  },\n  badgeRemove: {\n    fontSize: '12px',\n    textDecoration: 'underline',\n    marginLeft: '24px',\n    cursor: 'pointer'\n  }\n};\n\nclass FilterBadge extends Component {\n  onClick = id => () => this.props.onClick(id);\n  onRemove = id => () => this.props.onRemove(id);\n\n  render() {\n    const {\n      data\n    } = this.props;\n    return <div style={styles.badgeContainer} data-test=\"dashboard-filter-badge\">\n                <span style={styles.badge} onClick={this.onClick(data.id)}>\n                    {`${data.name}: ${data.values.length > 1 ? i18n.t('{{count}} selected', {\n          count: data.values.length\n        }) : data.values[0].name}`}\n                </span>\n                <span style={styles.badgeRemove} onClick={this.onRemove(data.id)}>\n                    {i18n.t('Remove')}\n                </span>\n            </div>;\n  }\n\n}\n\nFilterBadge.propTypes = {\n  data: PropTypes.object.isRequired,\n  onClick: PropTypes.func.isRequired,\n  onRemove: PropTypes.func.isRequired\n};\nFilterBadge.defaultProps = {\n  onClick: Function.prototype,\n  onRemove: Function.prototype\n};\nexport default FilterBadge;","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport FilterBadge from './FilterBadge';\nimport { sGetNamedItemFilters } from '../../reducers/itemFilters';\nimport { acRemoveItemFilter } from '../../actions/itemFilters';\nimport { acSetActiveModalDimension } from '../../actions/activeModalDimension';\nimport classes from './styles/FilterBar.module.css';\nexport class FilterBar extends Component {\n  onBadgeRemove = id => {\n    this.props.removeItemFilter(id);\n  };\n  onBadgeClick = id => {\n    this.props.setActiveModalDimension({\n      id,\n      name: this.props.filters.find(item => item.id === id).name\n    });\n  };\n\n  render() {\n    const {\n      filters\n    } = this.props;\n    return filters.length ? // the 3 is calculated so that the FilterBar has the same vertical position as the TitleBar in relation to the ControlBar\n    <div className={classes.bar} style={{\n      top: 3\n    }}>\n                {filters.map(filter => <FilterBadge key={filter.id} data={filter} onClick={this.onBadgeClick} onRemove={this.onBadgeRemove} />)}\n            </div> : null;\n  }\n\n}\nFilterBar.propTypes = {\n  filters: PropTypes.array.isRequired,\n  removeItemFilter: PropTypes.func.isRequired,\n  setActiveModalDimension: PropTypes.func\n};\nFilterBar.defaultProps = {\n  filters: [],\n  removeItemFIlter: Function.prototype\n};\n\nconst mapStateToProps = state => ({\n  filters: sGetNamedItemFilters(state)\n});\n\nexport default connect(mapStateToProps, {\n  setActiveModalDimension: acSetActiveModalDimension,\n  removeItemFilter: acRemoveItemFilter\n})(FilterBar);","export const SET_WINDOW_HEIGHT = 'SET_WINDOW_HEIGHT';\nexport const DEFAULT_STATE_WINDOW_HEIGHT = window.innerHeight;\nexport default ((state = DEFAULT_STATE_WINDOW_HEIGHT, action) => {\n  switch (action.type) {\n    case SET_WINDOW_HEIGHT:\n      {\n        return action.value;\n      }\n\n    default:\n      return state;\n  }\n});\nexport const sGetWindowHeight = state => state.windowHeight;","import { generateUid } from 'd2/uid';\nimport { SET_PRINT_DASHBOARD, CLEAR_PRINT_DASHBOARD, SET_PRINT_DASHBOARD_LAYOUT, ADD_PRINT_DASHBOARD_ITEM, REMOVE_PRINT_DASHBOARD_ITEM, UPDATE_PRINT_DASHBOARD_ITEM } from '../reducers/printDashboard';\nimport { NEW_ITEM_SHAPE, getGridItemProperties, getPageBreakItemShape, getPrintTitlePageItemShape } from '../components/ItemGrid/gridUtil';\nimport { itemTypeMap, PAGEBREAK } from '../modules/itemTypes'; // actions\n\nexport const acSetPrintDashboard = (dashboard, items) => {\n  const val = { ...dashboard,\n    dashboardItems: items\n  };\n  return {\n    type: SET_PRINT_DASHBOARD,\n    value: val\n  };\n};\nexport const acClearPrintDashboard = () => ({\n  type: CLEAR_PRINT_DASHBOARD\n});\nexport const acUpdatePrintDashboardLayout = value => ({\n  type: SET_PRINT_DASHBOARD_LAYOUT,\n  value\n});\nexport const acAddPrintDashboardItem = item => {\n  const type = item.type;\n  delete item.type;\n  const itemPropName = itemTypeMap[type].propName;\n  const id = generateUid();\n  const gridItemProperties = getGridItemProperties(id);\n  let shape;\n\n  if (type === PAGEBREAK) {\n    const yPos = item.yPos || 0;\n    shape = getPageBreakItemShape(yPos, item.isStatic);\n  } else {\n    shape = getPrintTitlePageItemShape(item.isOneItemPerPage);\n  }\n\n  return {\n    type: ADD_PRINT_DASHBOARD_ITEM,\n    value: {\n      id,\n      type,\n      position: item.position || null,\n      [itemPropName]: item.content,\n      ...NEW_ITEM_SHAPE,\n      ...gridItemProperties,\n      ...shape\n    }\n  };\n};\nexport const acRemovePrintDashboardItem = value => ({\n  type: REMOVE_PRINT_DASHBOARD_ITEM,\n  value\n});\nexport const acUpdatePrintDashboardItem = item => ({\n  type: UPDATE_PRINT_DASHBOARD_ITEM,\n  value: item\n});","import React, { useEffect } from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport ViewTitleBar from '../TitleBar/ViewTitleBar';\nimport ItemGrid from '../ItemGrid/ItemGrid';\nimport FilterBar from '../FilterBar/FilterBar';\nimport DashboardsBar from '../ControlBar/DashboardsBar';\nimport { sGetIsEditing } from '../../reducers/editDashboard';\nimport { sGetIsPrinting } from '../../reducers/printDashboard';\nimport { sGetSelectedId } from '../../reducers/selected';\nimport { sGetWindowHeight } from '../../reducers/windowHeight';\nimport { sGetControlBarUserRows } from '../../reducers/controlBar';\nimport { acClearEditDashboard } from '../../actions/editDashboard';\nimport { acClearPrintDashboard } from '../../actions/printDashboard';\nimport { getControlBarHeight, HEADERBAR_HEIGHT } from '../ControlBar/controlBarDimensions';\nexport const ViewDashboard = props => {\n  useEffect(() => {\n    if (props.dashboardIsEditing) {\n      props.clearEditDashboard();\n    } else if (props.dashboardIsPrinting) {\n      props.clearPrintDashboard();\n    }\n  }, [props.dashboardIsEditing, props.dashboardIsPrinting]);\n  useEffect(() => {\n    document.querySelector('.dashboard-wrapper')?.scroll(0, 0);\n  }, [props.selectedId]);\n  const height = props.windowHeight - HEADERBAR_HEIGHT - getControlBarHeight(props.controlBarRows);\n  return <>\n            <DashboardsBar />\n            <div className=\"dashboard-wrapper\" style={{\n      height\n    }}>\n                <ViewTitleBar />\n                <FilterBar />\n                <ItemGrid edit={false} />\n            </div>\n        </>;\n};\nViewDashboard.propTypes = {\n  clearEditDashboard: PropTypes.func,\n  clearPrintDashboard: PropTypes.func,\n  controlBarRows: PropTypes.number,\n  dashboardIsEditing: PropTypes.bool,\n  dashboardIsPrinting: PropTypes.bool,\n  selectedId: PropTypes.string,\n  windowHeight: PropTypes.number\n};\n\nconst mapStateToProps = state => {\n  return {\n    dashboardIsEditing: sGetIsEditing(state),\n    dashboardIsPrinting: sGetIsPrinting(state),\n    controlBarRows: sGetControlBarUserRows(state),\n    selectedId: sGetSelectedId(state),\n    windowHeight: sGetWindowHeight(state)\n  };\n};\n\nexport default connect(mapStateToProps, {\n  clearEditDashboard: acClearEditDashboard,\n  clearPrintDashboard: acClearPrintDashboard\n})(ViewDashboard);","import React from 'react';\nimport PropTypes from 'prop-types';\nimport i18n from '@dhis2/d2-i18n';\nimport { InputField } from '@dhis2/ui';\n\nconst ItemSearchField = props => <InputField name=\"Dashboard item search\" label={i18n.t('Search for items to add to this dashboard')} type=\"text\" onChange={props.onChange} onFocus={props.onFocus} value={props.value} dataTest=\"item-search\" />;\n\nItemSearchField.propTypes = {\n  value: PropTypes.string,\n  onChange: PropTypes.func,\n  onFocus: PropTypes.func\n};\nexport default ItemSearchField;","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { MenuItem, colors } from '@dhis2/ui';\nimport classes from './styles/HeaderMenuItem.module.css';\n\nconst HeaderMenuItem = ({\n  title\n}) => <MenuItem className={classes.item} dense key={title} disabled label={<span style={{\n  color: colors.grey800,\n  fontWeight: '600'\n}}>\n                {title}\n            </span>} />;\n\nHeaderMenuItem.propTypes = {\n  title: PropTypes.string.isRequired\n};\nexport default HeaderMenuItem;","import React from 'react';\nimport { colors } from '@dhis2/ui';\nimport PropTypes from 'prop-types';\n\nconst LaunchIcon = ({\n  className\n}) => <svg className={className} xmlns=\"http://www.w3.org/2000/svg\" width=\"12\" height=\"12\" fill={colors.grey600} viewBox=\"0 0 24 24\">\n        <path d=\"M0 0h24v24H0z\" fill=\"none\" />\n        <path d=\"M19 19H5V5h7V3H5c-1.11 0-2 .9-2 2v14c0 1.1.89 2 2 2h14c1.1 0 2-.9 2-2v-7h-2v7zM14 3v2h3.59l-9.83 9.83 1.41 1.41L19 6.41V10h2V3h-7z\" />\n    </svg>;\n\nLaunchIcon.propTypes = {\n  className: PropTypes.string\n};\nexport default LaunchIcon;","import React from 'react';\nimport { MenuItem, colors } from '@dhis2/ui';\nimport i18n from '@dhis2/d2-i18n';\nimport PropTypes from 'prop-types';\nimport { visTypeIcons } from '@dhis2/analytics';\nimport { getItemIcon, VISUALIZATION } from '../../modules/itemTypes';\nimport LaunchIcon from '../../icons/Launch';\nimport classes from './styles/ContentMenuItem.module.css';\n\nconst LaunchLink = ({\n  url\n}) => <a onClick={e => e.stopPropagation()} className={classes.launchLink} target=\"_blank\" rel=\"noopener noreferrer\" href={url}>\n        <LaunchIcon />\n    </a>;\n\nLaunchLink.propTypes = {\n  url: PropTypes.string\n};\n\nconst InsertButton = () => <button className={classes.buttonInsert}>{i18n.t('Insert')}</button>;\n\nconst ContentMenuItem = ({\n  type,\n  name,\n  onInsert,\n  url,\n  visType\n}) => {\n  const ItemIcon = getItemIcon(type);\n  const renderedItemIcon = type === VISUALIZATION ? visTypeIcons[visType] : <ItemIcon style={{\n    fill: colors.grey600\n  }} />;\n  return <MenuItem dense onClick={onInsert} label={<div className={classes.menuItem}>\n                    <div className={classes.label}>\n                        <span style={{\n        marginRight: '6px'\n      }}>\n                            {renderedItemIcon}\n                        </span>\n                        <span>{name}</span>\n                        {url ? <LaunchLink url={url} /> : null}\n                    </div>\n                    <InsertButton />\n                </div>} dataTest={`menu-item-${name}`} />;\n};\n\nContentMenuItem.propTypes = {\n  name: PropTypes.string,\n  type: PropTypes.string,\n  url: PropTypes.string,\n  visType: PropTypes.string,\n  onInsert: PropTypes.func\n};\nexport default ContentMenuItem;","import { sGetEditDashboardRoot } from '../../reducers/editDashboard';\nimport { itemTypeMap } from '../../modules/itemTypes';\nimport { acAddDashboardItem, acUpdateDashboardItem } from '../../actions/editDashboard';\nexport const tAddListItemContent = (type, content) => (dispatch, getState) => {\n  const state = getState();\n  const listItemType = itemTypeMap[type].propName;\n  const dashboardItems = sGetEditDashboardRoot(state).dashboardItems;\n  const dashboardItemIndex = dashboardItems.findIndex(item => item.type === type);\n  let dashboardItem; // Reports/Resources/Users dashboard item type already present in dashboard\n\n  if (dashboardItemIndex > -1) {\n    dashboardItem = dashboardItems[dashboardItemIndex];\n    dashboardItem[listItemType].push(content);\n    dispatch(acUpdateDashboardItem(dashboardItem));\n  } else {\n    dashboardItem = {\n      type: type,\n      content: [content]\n    };\n    dispatch(acAddDashboardItem(dashboardItem));\n  }\n};","import i18n from '@dhis2/d2-i18n';\nimport { VISUALIZATION, MAP, EVENT_CHART, EVENT_REPORT, USERS, REPORTS, RESOURCES, APP, MESSAGES, TEXT, SPACER } from '../../modules/itemTypes';\nexport const singleItems = [{\n  id: 'additional',\n  header: i18n.t('Additional items'),\n  items: [{\n    type: TEXT,\n    name: i18n.t('Text box'),\n    content: ''\n  }, {\n    type: MESSAGES,\n    name: i18n.t('Messages'),\n    content: 'true'\n  }, {\n    type: SPACER,\n    name: i18n.t('Spacer'),\n    content: ''\n  }]\n}]; // categorizedItems are grouped in the item selector menu\n\nexport const categorizedItems = [VISUALIZATION, MAP, EVENT_REPORT, EVENT_CHART, USERS, REPORTS, RESOURCES, APP]; // listItemTypes are included in a single dashboard item\n\nexport const listItemTypes = [REPORTS, RESOURCES, USERS];","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport i18n from '@dhis2/d2-i18n';\nimport { MenuItem, Divider } from '@dhis2/ui';\nimport { useConfig } from '@dhis2/app-runtime';\nimport HeaderMenuItem from './HeaderMenuItem';\nimport ContentMenuItem from './ContentMenuItem';\nimport { tAddListItemContent } from './actions';\nimport { acAddDashboardItem } from '../../actions/editDashboard';\nimport { getItemUrl, APP, VISUALIZATION } from '../../modules/itemTypes';\nimport { categorizedItems, listItemTypes } from './selectableItems';\nimport classes from './styles/CategorizedMenuGroup.module.css';\n\nconst CategorizedMenuGroup = ({\n  type,\n  title,\n  items,\n  hasMore,\n  acAddDashboardItem,\n  tAddListItemContent,\n  onChangeItemsLimit\n}) => {\n  const {\n    baseUrl\n  } = useConfig();\n  const [seeMore, setSeeMore] = useState(false);\n\n  const addItem = item => () => {\n    if (type === APP) {\n      acAddDashboardItem({\n        type,\n        content: item.key\n      });\n    } else {\n      const newItem = {\n        id: item.id,\n        name: item.displayName || item.name\n      };\n\n      if (listItemTypes.includes(type)) {\n        tAddListItemContent(type, newItem);\n      } else {\n        acAddDashboardItem({\n          type,\n          content: newItem\n        });\n      }\n    }\n  };\n\n  const toggleSeeMore = () => {\n    setSeeMore(!seeMore);\n    onChangeItemsLimit(type);\n  };\n\n  return <>\n            <HeaderMenuItem title={title} />\n            {items.map(item => {\n      const itemUrl = getItemUrl(type, item, baseUrl);\n      return <ContentMenuItem key={item.id || item.key} type={type} visType={type === VISUALIZATION ? item.type : type} name={item.displayName || item.name} onInsert={addItem(item)} url={itemUrl} />;\n    })}\n            {hasMore ? <MenuItem dense key={`showmore${title}`} onClick={toggleSeeMore} label={<button className={classes.showMoreButton}>\n                            {seeMore ? i18n.t('Show fewer') : i18n.t('Show more')}\n                        </button>} /> : null}\n            <Divider margin=\"8px 0px\" />\n        </>;\n};\n\nCategorizedMenuGroup.propTypes = {\n  items: PropTypes.array.isRequired,\n  title: PropTypes.string.isRequired,\n  type: PropTypes.oneOf(categorizedItems).isRequired,\n  onChangeItemsLimit: PropTypes.func.isRequired,\n  acAddDashboardItem: PropTypes.func,\n  hasMore: PropTypes.bool,\n  tAddListItemContent: PropTypes.func\n};\nexport default connect(null, {\n  acAddDashboardItem,\n  tAddListItemContent\n})(CategorizedMenuGroup);","import React from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport HeaderMenuItem from './HeaderMenuItem';\nimport ContentMenuItem from './ContentMenuItem';\nimport { acAddDashboardItem } from '../../actions/editDashboard';\nexport const SinglesMenuGroup = ({\n  acAddDashboardItem,\n  category\n}) => {\n  const addToDashboard = ({\n    type,\n    content\n  }) => () => {\n    acAddDashboardItem({\n      type,\n      content\n    });\n  };\n\n  return <>\n            <HeaderMenuItem title={category.header} />\n            {category.items.map(item => <ContentMenuItem key={item.type} type={item.type} name={item.name} onInsert={addToDashboard(item)} />)}\n        </>;\n};\nSinglesMenuGroup.propTypes = {\n  acAddDashboardItem: PropTypes.func,\n  category: PropTypes.object\n};\nexport default connect(null, {\n  acAddDashboardItem\n})(SinglesMenuGroup);","import React, { useState, useEffect, createRef } from 'react';\nimport { Popover, FlyoutMenu } from '@dhis2/ui';\nimport { useD2 } from '@dhis2/app-runtime-adapter-d2';\nimport ItemSearchField from './ItemSearchField';\nimport CategorizedMenuGroup from './CategorizedMenuGroup';\nimport SinglesMenuGroup from './SinglesMenuGroup';\nimport { singleItems, categorizedItems } from './selectableItems';\nimport { itemTypeMap, getDefaultItemCount } from '../../modules/itemTypes';\nimport classes from './styles/ItemSelector.module.css';\n\nconst ItemSelector = () => {\n  const [isOpen, setIsOpen] = useState(false);\n  const [filter, setFilter] = useState('');\n  const [items, setItems] = useState(null);\n  const [maxOptions, setMaxOptions] = useState(new Set());\n  const {\n    d2\n  } = useD2({});\n  useEffect(() => {\n    let queryString = '?count=11';\n\n    if ([...maxOptions.values()].length) {\n      queryString += '&max=' + [...maxOptions.values()].join('&max=');\n    }\n\n    const filterStr = filter ? `/${filter}` : '';\n    d2.Api.getApi().get(`dashboards/q${filterStr}${queryString}`).then(response => setItems(response)).catch(console.error);\n  }, [filter, maxOptions]);\n\n  const closeMenu = () => {\n    setIsOpen(false);\n    setFilter('');\n    setMaxOptions(new Set());\n  };\n\n  const openMenu = () => setIsOpen(true);\n\n  const getCategorizedMenuGroups = () => {\n    return categorizedItems.filter(type => {\n      const itemType = itemTypeMap[type];\n      return items && items[itemType.endPointName];\n    }).map(type => {\n      const itemType = itemTypeMap[type];\n      const itemCount = getDefaultItemCount(type);\n      const allItems = items[itemType.endPointName];\n      const hasMore = allItems.length > itemCount;\n      const displayItems = maxOptions.has(itemType.id) ? allItems : allItems.slice(0, itemCount);\n      return <CategorizedMenuGroup key={type} type={type} title={itemType.pluralTitle} items={displayItems} onChangeItemsLimit={updateMaxOptions} hasMore={hasMore} />;\n    });\n  };\n\n  const getSinglesMenuGroups = () => singleItems.map(category => <SinglesMenuGroup key={category.id} category={category} />);\n\n  const getMenuGroups = () => getCategorizedMenuGroups().concat(getSinglesMenuGroups());\n\n  const updateMaxOptions = type => {\n    if (type) {\n      const options = new Set(maxOptions);\n      options.has(type) ? options.delete(type) : options.add(type);\n      setMaxOptions(options);\n    } else {\n      setMaxOptions(new Set());\n    }\n  };\n\n  const updateFilter = ({\n    value\n  }) => setFilter(value);\n\n  const inputRef = createRef();\n  return <>\n            <span ref={inputRef}>\n                <ItemSearchField value={filter} onChange={updateFilter} onFocus={openMenu} />\n            </span>\n            {isOpen && <Popover reference={inputRef} placement=\"bottom-start\" onClickOutside={closeMenu} arrow={false} maxWidth={700}>\n                    <FlyoutMenu className={classes.menu} dataTest=\"item-menu\" maxWidth=\"700px\">\n                        {getMenuGroups()}\n                    </FlyoutMenu>\n                </Popover>}\n        </>;\n};\n\nexport default ItemSelector;","import React from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport i18n from '@dhis2/d2-i18n';\nimport { InputField, TextAreaField } from '@dhis2/ui';\nimport ItemSelector from '../ItemSelector/ItemSelector';\nimport { acSetDashboardTitle, acSetDashboardDescription } from '../../actions/editDashboard';\nimport { orObject } from '../../modules/util';\nimport { sGetEditDashboardRoot } from '../../reducers/editDashboard';\nimport classes from './styles/EditTitleBar.module.css';\nexport const EditTitleBar = ({\n  name,\n  description,\n  onChangeTitle,\n  onChangeDescription\n}) => {\n  const updateTitle = (_, e) => {\n    onChangeTitle(e.target.value);\n  };\n\n  const updateDescription = (_, e) => {\n    onChangeDescription(e.target.value);\n  };\n\n  return <section className={classes.section}>\n            <div className={classes.titleDescription}>\n                <InputField className={classes.title} name=\"Dashboard title input\" label={i18n.t('Dashboard title')} type=\"text\" onChange={updateTitle} value={name} placeholder={i18n.t('Untitled dashboard')} dataTest=\"dashboard-title-input\" />\n                <TextAreaField className={classes.description} name=\"Dashboard description input\" label={i18n.t('Dashboard description')} onChange={updateDescription} value={description} dataTest=\"dashboard-description-input\" />\n            </div>\n            <div className={classes.itemSelector}>\n                <ItemSelector />\n            </div>\n        </section>;\n};\nEditTitleBar.propTypes = {\n  onChangeDescription: PropTypes.func.isRequired,\n  onChangeTitle: PropTypes.func.isRequired,\n  description: PropTypes.string,\n  name: PropTypes.string\n};\nEditTitleBar.defaultProps = {\n  name: '',\n  description: ''\n};\n\nconst mapStateToProps = state => {\n  const selectedDashboard = orObject(sGetEditDashboardRoot(state));\n  return {\n    name: selectedDashboard.name,\n    description: selectedDashboard.description\n  };\n};\n\nconst mapDispatchToProps = {\n  onChangeTitle: acSetDashboardTitle,\n  onChangeDescription: acSetDashboardDescription\n};\nexport default connect(mapStateToProps, mapDispatchToProps)(EditTitleBar);","import React from 'react';\nimport PropTypes from 'prop-types';\nimport i18n from '@dhis2/d2-i18n';\nimport { Button, Modal, ModalContent, ModalActions, ButtonStrip, ModalTitle } from '@dhis2/ui';\nimport classes from './styles/ConfirmDeleteDialog.module.css';\nexport const ConfirmDeleteDialog = ({\n  dashboardName,\n  onDeleteConfirmed,\n  onContinueEditing,\n  open\n}) => {\n  const actions = [<Button key=\"cancel\" secondary onClick={onContinueEditing} dataTest=\"cancel-delete-dashboard\">\n            {i18n.t('Cancel')}\n        </Button>, <Button key=\"delete\" destructive onClick={onDeleteConfirmed} dataTest=\"confirm-delete-dashboard\">\n            {i18n.t('Delete')}\n        </Button>];\n  return open && <Modal onClose={onContinueEditing} small position=\"middle\">\n                <ModalTitle>{i18n.t('Delete dashboard')}</ModalTitle>\n                <ModalContent>\n                    <span className={classes.content}>\n                        {i18n.t('Deleting dashboard \"{{ dashboardName }}\" will remove it for all users. This action cannot be undone. Are you sure you want to permanently delete this dashboard?', {\n          dashboardName\n        })}\n                    </span>\n                </ModalContent>\n                <ModalActions>\n                    <ButtonStrip>{actions}</ButtonStrip>\n                </ModalActions>\n            </Modal>;\n};\nConfirmDeleteDialog.propTypes = {\n  dashboardName: PropTypes.string,\n  open: PropTypes.bool,\n  onContinueEditing: PropTypes.func,\n  onDeleteConfirmed: PropTypes.func\n};\nexport default ConfirmDeleteDialog;","import React, { useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { Redirect } from 'react-router-dom';\nimport i18n from '@dhis2/d2-i18n';\nimport TranslationDialog from '@dhis2/d2-ui-translation-dialog';\nimport { Button, ButtonStrip } from '@dhis2/ui';\nimport { useDataEngine } from '@dhis2/app-runtime';\nimport { useD2 } from '@dhis2/app-runtime-adapter-d2';\nimport ConfirmDeleteDialog from './ConfirmDeleteDialog';\nimport { tSaveDashboard, acClearEditDashboard, acSetPrintPreviewView, acClearPrintPreviewView } from '../../actions/editDashboard';\nimport { acClearPrintDashboard } from '../../actions/printDashboard';\nimport { tDeleteDashboard, acSetDashboardDisplayName } from '../../actions/dashboards';\nimport { sGetEditDashboardRoot, sGetIsNewDashboard, sGetIsPrintPreviewView } from '../../reducers/editDashboard';\nimport { apiFetchDashboard } from '../../api/dashboards';\nimport classes from './styles/EditBar.module.css';\n\nconst EditBar = props => {\n  const {\n    d2\n  } = useD2({});\n  const dataEngine = useDataEngine();\n  const [translationDlgIsOpen, setTranslationDlgIsOpen] = useState(false);\n  const [dashboard, setDashboard] = useState(undefined);\n  const [confirmDeleteDlgIsOpen, setConfirmDeleteDlgIsOpen] = useState(false);\n  const [redirectUrl, setRedirectUrl] = useState(undefined);\n  useEffect(() => {\n    if (props.dashboardId && !dashboard) {\n      apiFetchDashboard(dataEngine, props.dashboardId).then(dboard => setDashboard(dboard));\n    }\n  }, [props.dashboardId, dashboard]);\n\n  const onConfirmDelete = () => {\n    setConfirmDeleteDlgIsOpen(true);\n  };\n\n  const onSave = () => {\n    props.onSave().then(newId => {\n      setRedirectUrl(`/${newId}`);\n    });\n  };\n\n  const onPrintPreview = () => {\n    if (props.isPrintPreviewView) {\n      props.clearPrintPreview();\n      props.clearPrintDashboard();\n    } else {\n      props.showPrintPreview();\n    }\n  };\n\n  const onDiscard = () => {\n    props.onDiscardChanges();\n    const redirectUrl = props.dashboardId ? `/${props.dashboardId}` : '/';\n    setRedirectUrl(redirectUrl);\n  };\n\n  const onContinueEditing = () => {\n    setConfirmDeleteDlgIsOpen(false);\n  };\n\n  const onDeleteConfirmed = () => {\n    setConfirmDeleteDlgIsOpen(false);\n    props.onDelete(props.dashboardId).then(() => {\n      setRedirectUrl('/');\n    });\n  };\n\n  const onTranslationsSaved = async translations => {\n    if (translations && translations.length) {\n      const dbLocale = await d2.currentUser.userSettings.get('keyDbLocale');\n      const translation = translations.find(t => t.locale === dbLocale && t.property === 'NAME');\n\n      if (translation && translation.value) {\n        props.onTranslate(props.dashboardId, translation.value);\n      }\n    }\n  };\n\n  const toggleTranslationDialog = () => setTranslationDlgIsOpen(!translationDlgIsOpen);\n\n  const confirmDeleteDialog = () => props.deleteAccess && props.dashboardId ? <ConfirmDeleteDialog dashboardName={props.dashboardName} onDeleteConfirmed={onDeleteConfirmed} onContinueEditing={onContinueEditing} open={confirmDeleteDlgIsOpen} /> : null;\n\n  const translationDialog = () => dashboard && dashboard.id ? <TranslationDialog className=\"translation-dialog\" d2={d2} open={translationDlgIsOpen} onRequestClose={toggleTranslationDialog} objectToTranslate={{ ...dashboard,\n    modelDefinition: {\n      name: 'dashboard'\n    }\n  }} fieldsToTranslate={['name', 'description']} onTranslationSaved={onTranslationsSaved} onTranslationError={err => console.log('translation update error', err)} /> : null;\n\n  const renderActionButtons = () => <ButtonStrip>\n            <Button primary onClick={onSave} dataTest=\"save-dashboard-button\">\n                {i18n.t('Save changes')}\n            </Button>\n            <Button onClick={onPrintPreview}>\n                {props.isPrintPreviewView ? i18n.t('Exit Print preview') : i18n.t('Print preview')}\n            </Button>\n\n            {props.dashboardId && <Button onClick={toggleTranslationDialog}>\n                    {i18n.t('Translate')}\n                </Button>}\n            {props.dashboardId && props.deleteAccess && <Button onClick={onConfirmDelete} dataTest=\"delete-dashboard-button\">\n                    {i18n.t('Delete')}\n                </Button>}\n        </ButtonStrip>;\n\n  if (redirectUrl) {\n    return <Redirect to={redirectUrl} />;\n  }\n\n  const {\n    updateAccess\n  } = props;\n  const discardBtnText = updateAccess ? i18n.t('Exit without saving') : i18n.t('Go to dashboards');\n  return <>\n            <div className={classes.editBar}>\n                <div className={classes.controls}>\n                    {updateAccess ? renderActionButtons() : null}\n                    <Button secondary onClick={onDiscard}>\n                        {discardBtnText}\n                    </Button>\n                </div>\n            </div>\n            {translationDialog()}\n            {confirmDeleteDialog()}\n        </>;\n};\n\nEditBar.propTypes = {\n  clearPrintDashboard: PropTypes.func,\n  clearPrintPreview: PropTypes.func,\n  dashboardId: PropTypes.string,\n  dashboardName: PropTypes.string,\n  deleteAccess: PropTypes.bool,\n  isPrintPreviewView: PropTypes.bool,\n  showPrintPreview: PropTypes.func,\n  updateAccess: PropTypes.bool,\n  onDelete: PropTypes.func,\n  onDiscardChanges: PropTypes.func,\n  onSave: PropTypes.func,\n  onTranslate: PropTypes.func\n};\n\nconst mapStateToProps = state => {\n  const dashboard = sGetEditDashboardRoot(state);\n  let deleteAccess;\n  let updateAccess;\n\n  if (sGetIsNewDashboard(state)) {\n    deleteAccess = true;\n    updateAccess = true;\n  } else {\n    updateAccess = dashboard.access ? dashboard.access.update : false;\n    deleteAccess = dashboard.access ? dashboard.access.delete : false;\n  }\n\n  return {\n    dashboardId: dashboard.id,\n    dashboardName: dashboard.name,\n    deleteAccess,\n    isPrintPreviewView: sGetIsPrintPreviewView(state),\n    updateAccess\n  };\n};\n\nconst mapDispatchToProps = dispatch => ({\n  clearPrintDashboard: () => dispatch(acClearPrintDashboard()),\n  clearPrintPreview: () => dispatch(acClearPrintPreviewView()),\n  onSave: () => dispatch(tSaveDashboard()).then(id => id),\n  onDelete: id => dispatch(tDeleteDashboard(id)),\n  onDiscardChanges: () => dispatch(acClearEditDashboard()),\n  onTranslate: (id, value) => dispatch(acSetDashboardDisplayName(id, value)),\n  showPrintPreview: () => dispatch(acSetPrintPreviewView())\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(EditBar);","import React from 'react';\nimport PropTypes from 'prop-types';\nimport i18n from '@dhis2/d2-i18n';\nimport { NoticeBox, CenteredContent } from '@dhis2/ui';\nimport classes from './styles/NotSupportedNotice.module.css';\n\nconst NotSupportedNotice = ({\n  message\n}) => <CenteredContent position=\"top\">\n        <div className={classes.noticeContainer}>\n            <NoticeBox title={i18n.t('Not supported')} warning>\n                {message}\n            </NoticeBox>\n        </div>\n    </CenteredContent>;\n\nNotSupportedNotice.propTypes = {\n  message: PropTypes.string\n};\nexport default NotSupportedNotice;","import React from 'react';\nimport PropTypes from 'prop-types';\nimport i18n from '@dhis2/d2-i18n';\nimport { a4LandscapeWidthPx } from '../ItemGrid/gridUtil';\nimport classes from './styles/PrintInfo.module.css';\n\nconst PrintInfo = ({\n  isLayout\n}) => {\n  const maxWidth = a4LandscapeWidthPx < window.innerWidth ? a4LandscapeWidthPx : window.innerWidth;\n  const infoHeader = isLayout ? i18n.t('dashboard layout') : i18n.t('one item per page');\n  return <div className={classes.infoWrapper}>\n            <p className={classes.infoHeader}>\n                {`${i18n.t('Print Preview')}: ${infoHeader}`}\n            </p>\n            <div style={{\n      maxWidth\n    }}>\n                <p className={classes.info}>\n                    {`${i18n.t('For best print results')}:`}\n                </p>\n                <div className={classes.info}>\n                    <ul className={classes.infoList}>\n                        <li>{i18n.t('Use Chrome or Edge web browser')}</li>\n                        <li>\n                            {i18n.t('Wait for all dashboard items to load before printing')}\n                        </li>\n                        <li>\n                            {i18n.t('Use A4 landscape paper size and default margin settings in the browser print dialog')}\n                        </li>\n                    </ul>\n                </div>\n            </div>\n            <hr className={classes.divider} />\n        </div>;\n};\n\nPrintInfo.propTypes = {\n  isLayout: PropTypes.bool\n};\nexport default PrintInfo;","import React from 'react';\nimport { colors } from '@dhis2/ui';\n\nconst LessHorizontalIcon = () => <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" fill={colors.grey600} viewBox=\"0 0 24 24\">\n        <path d=\"m13.2928932 6.29289322c.3905243-.39052429 1.0236893-.39052429 1.4142136 0 .3604839.36048396.3882135.92771502.0831886 1.32000622l-.0831886.09420734-4.2921068 4.29289322 4.2921068 4.2928932c.3604839.360484.3882135.927715.0831886 1.3200062l-.0831886.0942074c-.360484.3604839-.927715.3882135-1.3200062.0831886l-.0942074-.0831886-4.99999998-5c-.36048396-.360484-.3882135-.927715-.08318861-1.3200062l.08318861-.0942074z\" />\n    </svg>;\n\nexport default LessHorizontalIcon;","import React from 'react';\nimport PropTypes from 'prop-types';\nimport i18n from '@dhis2/d2-i18n';\nimport { Button } from '@dhis2/ui';\nimport { Link } from 'react-router-dom';\nimport LessHorizontalIcon from '../../icons/LessHorizontal';\nimport { a4LandscapeWidthPx } from '../ItemGrid/gridUtil';\nimport classes from './styles/PrintActionsBar.module.css'; // 42px set in the module css file\n\nexport const PRINT_ACTIONS_BAR_HEIGHT = 42;\n\nconst PrintActionsBar = ({\n  id\n}) => {\n  const width = a4LandscapeWidthPx;\n  return <>\n            <div className={classes.container}>\n                <div className={classes.inner} style={{\n        width\n      }}>\n                    <Link className={classes.link} to={`/${id}`}>\n                        <Button dataTest=\"exit-print-preview\">\n                            <LessHorizontalIcon />\n                            {i18n.t('Exit print preview')}\n                        </Button>\n                    </Link>\n                    <Button onClick={window.print}>{i18n.t('Print')}</Button>\n                </div>\n            </div>\n            <div className={classes.topMargin} />\n        </>;\n};\n\nPrintActionsBar.propTypes = {\n  id: PropTypes.string\n};\nexport default PrintActionsBar;","import sortBy from 'lodash/sortBy';\nimport { orArray } from './util';\nimport { itemTypeMap } from './itemTypes';\nexport const getTransformYPx = elStyle => {\n  if (!elStyle || !elStyle.transform) {\n    return null;\n  } // find valid transforms - those with y pixels\n  // the code is expecting the transform prop to\n  // look like:  translate(10px, 300px)\n\n\n  const transformY = elStyle.transform.split(' ')[1]?.match(/(\\d+)px/);\n\n  if (transformY) {\n    return parseInt(transformY[1]);\n  } else {\n    return null;\n  }\n};\nexport const getDomGridItemsSortedByYPos = elements => {\n  const types = Object.keys(itemTypeMap);\n  const elementsWithBoundingRect = orArray(elements).map(el => {\n    const type = Array.from(el.classList).find(className => types.indexOf(className) > -1);\n    const rect = el.getBoundingClientRect();\n    const y = getTransformYPx(el.style) || parseInt(rect.y);\n    return {\n      type,\n      classList: el.classList,\n      bottomY: y + parseInt(rect.height),\n      el\n    };\n  });\n  return sortBy(elementsWithBoundingRect, ['bottomY']);\n};","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport i18n from '@dhis2/d2-i18n';\nimport sortBy from 'lodash/sortBy';\nimport ReactGridLayout from 'react-grid-layout';\nimport { Layer, CenteredContent, CircularLoader } from '@dhis2/ui';\nimport cx from 'classnames';\nimport { Item } from '../Item/Item';\nimport NoContentMessage from '../../widgets/NoContentMessage';\nimport { acUpdatePrintDashboardLayout } from '../../actions/printDashboard';\nimport { sGetSelectedIsLoading } from '../../reducers/selected';\nimport { sGetPrintDashboardRoot, sGetPrintDashboardItems } from '../../reducers/printDashboard';\nimport { sGetIsEditing } from '../../reducers/editDashboard';\nimport { GRID_ROW_HEIGHT, GRID_COMPACT_TYPE, MARGIN, getGridColumns, hasShape, a4LandscapeWidthPx } from './gridUtil';\nimport { getDomGridItemsSortedByYPos, getTransformYPx } from '../../modules/printUtils';\nimport { PRINT_LAYOUT } from '../Dashboard/dashboardModes';\nimport { PAGEBREAK } from '../../modules/itemTypes';\nimport 'react-grid-layout/css/styles.css';\nimport 'react-resizable/css/styles.css';\nimport './ItemGrid.css'; // this is set in the .dashboard-item-content css\n\nexport const ITEM_CONTENT_PADDING_BOTTOM = 4;\nexport class PrintLayoutItemGrid extends Component {\n  onLayoutChange = newLayout => {\n    this.props.updateDashboardLayout(newLayout);\n  };\n  isFirstPageBreak = item => {\n    if (item.type !== PAGEBREAK) {\n      return false;\n    }\n\n    const pageBreaks = this.props.dashboardItems.filter(i => i.type === PAGEBREAK);\n    const sortedPageBreaks = sortBy(pageBreaks, ['y']);\n    return item.y === sortedPageBreaks[0].y;\n  };\n  getItemComponent = item => {\n    // the first-page-break class is used in Edit print preview\n    const itemClassNames = cx('print', 'layout', `${item.type}`, {\n      'first-page-break': this.props.isEditing && this.isFirstPageBreak(item),\n      shortened: !!item.shortened\n    });\n    return <div key={item.i} className={itemClassNames}>\n                <Item item={item} dashboardMode={PRINT_LAYOUT} />\n            </div>;\n  };\n  getItemComponents = items => items.map(item => this.getItemComponent(item));\n\n  hideExtraPageBreaks() {\n    const sortedElements = getDomGridItemsSortedByYPos(Array.from(document.querySelectorAll('.react-grid-item')));\n    let pageBreakBottom = 0;\n    let lastItemBottom = 0;\n    let foundNonPageBreak = false;\n\n    for (let i = sortedElements.length - 1; i >= 0; --i) {\n      const item = sortedElements[i];\n\n      if (item.type === PAGEBREAK) {\n        if (!foundNonPageBreak) {\n          item.el.classList.add('removed');\n        } else {\n          pageBreakBottom = item.bottomY;\n          break;\n        }\n      } else {\n        foundNonPageBreak = true;\n        const thisItemBottom = item.bottomY;\n\n        if (thisItemBottom > lastItemBottom) {\n          lastItemBottom = thisItemBottom;\n        }\n      }\n    }\n\n    const pageHeight = 720;\n    const gridElement = document.querySelector('.react-grid-layout'); // the last page break is before the last item(s) so\n    // maxHeight is one page beyond the last page break\n\n    const maxHeight = pageBreakBottom + pageHeight;\n\n    if (gridElement) {\n      gridElement.style.height = `${maxHeight}px`;\n    }\n\n    if (this.props.isEditing) {\n      //scroll to below the title page - which is middle of the first pagebreak\n      const firstBreak = document.querySelector('.first-page-break');\n\n      if (firstBreak && firstBreak.style && firstBreak.style.transform) {\n        const yPos = getTransformYPx(firstBreak.style);\n        const scrollArea = document.querySelector('.scroll-area');\n        scrollArea && scrollArea.scroll(0, yPos + 50);\n      }\n    }\n  }\n\n  componentDidMount() {\n    this.hideExtraPageBreaks();\n  }\n\n  componentDidUpdate() {\n    this.hideExtraPageBreaks();\n  }\n\n  render() {\n    const {\n      isLoading,\n      dashboardItems\n    } = this.props;\n\n    if (!isLoading && !dashboardItems.length) {\n      return <NoContentMessage text={i18n.t('There are no items on this dashboard')} />;\n    }\n\n    const width = a4LandscapeWidthPx < window.innerWidth ? a4LandscapeWidthPx : window.innerWidth;\n    return <div className=\"grid-wrapper\">\n                {isLoading ? <Layer translucent>\n                        <CenteredContent>\n                            <CircularLoader />\n                        </CenteredContent>\n                    </Layer> : null}\n                <ReactGridLayout onLayoutChange={this.onLayoutChange} className=\"layout\" layout={dashboardItems} margin={MARGIN} cols={getGridColumns()} rowHeight={GRID_ROW_HEIGHT} width={width} compactType={GRID_COMPACT_TYPE} isDraggable={false} isResizable={false} draggableCancel=\"input,textarea\">\n                    {this.getItemComponents(dashboardItems)}\n                </ReactGridLayout>\n            </div>;\n  }\n\n}\nPrintLayoutItemGrid.propTypes = {\n  dashboardItems: PropTypes.array,\n  isEditing: PropTypes.bool,\n  isLoading: PropTypes.bool,\n  updateDashboardLayout: PropTypes.func\n};\nPrintLayoutItemGrid.defaultProps = {\n  dashboardItems: []\n};\n\nconst mapStateToProps = state => {\n  const selectedDashboard = sGetPrintDashboardRoot(state);\n  return {\n    isLoading: sGetSelectedIsLoading(state) || !selectedDashboard,\n    dashboardItems: sGetPrintDashboardItems(state).filter(hasShape),\n    isEditing: sGetIsEditing(state)\n  };\n};\n\nexport default connect(mapStateToProps, {\n  updateDashboardLayout: acUpdatePrintDashboardLayout\n})(PrintLayoutItemGrid);","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { spacers } from '@dhis2/ui';\nimport cx from 'classnames';\nimport PrintInfo from './PrintInfo';\nimport PrintActionsBar from './PrintActionsBar';\nimport PrintLayoutItemGrid from '../ItemGrid/PrintLayoutItemGrid';\nimport { acSetPrintDashboard, acAddPrintDashboardItem, acUpdatePrintDashboardItem } from '../../actions/printDashboard';\nimport { sGetSelectedId } from '../../reducers/selected';\nimport { sGetWindowHeight } from '../../reducers/windowHeight';\nimport { sGetEditDashboardRoot, sGetEditDashboardItems } from '../../reducers/editDashboard';\nimport { sGetDashboardById, sGetDashboardItems } from '../../reducers/dashboards';\nimport { PAGEBREAK, PRINT_TITLE_PAGE } from '../../modules/itemTypes';\nimport { a4LandscapeWidthPx, MAX_ITEM_GRID_HEIGHT } from '../ItemGrid/gridUtil';\nimport { getControlBarHeight, HEADERBAR_HEIGHT } from '../ControlBar/controlBarDimensions';\nimport { PRINT_ACTIONS_BAR_HEIGHT } from './PrintActionsBar';\nimport { DRAG_HANDLE_HEIGHT } from '../ControlBar/ControlBar';\nimport classes from './styles/PrintLayoutDashboard.module.css';\nimport './styles/print.css';\nimport './styles/print-layout.css';\nconst EDIT_BAR_HEIGHT = getControlBarHeight(1) + DRAG_HANDLE_HEIGHT;\n\nconst isLeapPage = n => {\n  // pages 5,9,13,17,21,25,29... are leap pages\n  let x = 0;\n  const startPage = 1;\n\n  const getMultiple = factor => startPage + 4 * factor;\n\n  let multiple = getMultiple(0);\n  let isLeapPage = false;\n\n  while (multiple < n) {\n    multiple = getMultiple(x);\n    ++x;\n\n    if (multiple === n) {\n      isLeapPage = true;\n      break;\n    }\n  }\n\n  return isLeapPage;\n};\n\nconst addPageBreaks = ({\n  items,\n  addDashboardItem\n}) => {\n  // add enough page breaks so that each item could\n  // be put on its own page. Due to the react-grid-layout\n  // unit system, we have to estimate roughly the size of each\n  // page. At regular intervals add a unit, like a leap year\n  let yPos = 0;\n  const yPosList = [];\n\n  for (let pageNum = 1; pageNum <= items.length; ++pageNum) {\n    if (pageNum === 1) {\n      yPos += 35;\n    } else if (isLeapPage(pageNum)) {\n      yPos += 40;\n    } else {\n      yPos += 39;\n    }\n\n    yPosList.push(yPos);\n  }\n\n  for (let i = 0; i < items.length; ++i) {\n    addDashboardItem({\n      type: PAGEBREAK,\n      yPos: yPosList[i]\n    });\n  }\n};\n\nexport class PrintLayoutDashboard extends Component {\n  state = {\n    initialized: false\n  };\n  initPrintLayoutDashboard = () => {\n    if (this.props.dashboard) {\n      this.setState({\n        initialized: true\n      });\n      this.props.setPrintDashboard(this.props.dashboard, this.props.items); // If any items are taller than one page, reduce it to one\n      // page (react-grid-layout units)\n\n      this.props.items.forEach(item => {\n        if (item.h > MAX_ITEM_GRID_HEIGHT) {\n          item.shortened = true;\n          this.props.updateDashboardItem(Object.assign({}, item, {\n            h: MAX_ITEM_GRID_HEIGHT\n          }));\n        }\n      });\n      addPageBreaks(this.props);\n      this.props.addDashboardItem({\n        type: PRINT_TITLE_PAGE,\n        isOneItemPerPage: false\n      });\n    }\n  };\n\n  componentDidMount() {\n    this.initPrintLayoutDashboard();\n  }\n\n  componentDidUpdate() {\n    if (!this.state.initialized) {\n      this.initPrintLayoutDashboard();\n    }\n  }\n\n  getWrapperStyle = () => {\n    return this.props.fromEdit ? {\n      paddingTop: spacers.dp24,\n      height: this.props.windowHeight - EDIT_BAR_HEIGHT - HEADERBAR_HEIGHT\n    } : {\n      height: this.props.windowHeight - PRINT_ACTIONS_BAR_HEIGHT\n    };\n  };\n\n  render() {\n    return <>\n                {!this.props.fromEdit && <PrintActionsBar id={this.props.dashboard.id} />}\n                <div className={cx(classes.wrapper, 'scroll-area')} style={this.getWrapperStyle()}>\n                    {!this.props.fromEdit && <PrintInfo isLayout={true} />}\n                    <div className={classes.pageOuter} style={{\n          width: a4LandscapeWidthPx\n        }} data-test=\"print-layout-page\">\n                        <PrintLayoutItemGrid />\n                    </div>\n                </div>\n            </>;\n  }\n\n}\nPrintLayoutDashboard.propTypes = {\n  addDashboardItem: PropTypes.func,\n  dashboard: PropTypes.object,\n  fromEdit: PropTypes.bool,\n  items: PropTypes.array,\n  setPrintDashboard: PropTypes.func,\n  updateDashboardItem: PropTypes.func,\n  windowHeight: PropTypes.number\n};\n\nconst mapStateToProps = (state, ownProps) => {\n  const id = sGetSelectedId(state);\n\n  if (ownProps.fromEdit) {\n    const dashboard = sGetEditDashboardRoot(state);\n    return {\n      dashboard,\n      id,\n      items: sGetEditDashboardItems(state),\n      windowHeight: sGetWindowHeight(state)\n    };\n  }\n\n  const dashboard = id ? sGetDashboardById(state, id) : null;\n  return {\n    dashboard,\n    id,\n    items: sGetDashboardItems(state),\n    windowHeight: sGetWindowHeight(state)\n  };\n};\n\nexport default connect(mapStateToProps, {\n  setPrintDashboard: acSetPrintDashboard,\n  addDashboardItem: acAddPrintDashboardItem,\n  updateDashboardItem: acUpdatePrintDashboardItem\n})(PrintLayoutDashboard);","import React, { useEffect } from 'react';\nimport { connect } from 'react-redux';\nimport i18n from '@dhis2/d2-i18n';\nimport PropTypes from 'prop-types';\nimport EditTitleBar from '../TitleBar/EditTitleBar';\nimport ItemGrid from '../ItemGrid/ItemGrid';\nimport EditBar from '../ControlBar/EditBar';\nimport NotSupportedNotice from './NotSupportedNotice';\nimport { useWindowDimensions } from '../WindowDimensionsProvider';\nimport LayoutPrintPreview from './PrintLayoutDashboard';\nimport NoContentMessage from '../../widgets/NoContentMessage';\nimport { acSetEditDashboard } from '../../actions/editDashboard';\nimport { sGetWindowHeight } from '../../reducers/windowHeight';\nimport { sGetSelectedId } from '../../reducers/selected';\nimport { sGetDashboardById, sGetDashboardItems } from '../../reducers/dashboards';\nimport { sGetIsPrintPreviewView } from '../../reducers/editDashboard';\nimport { getControlBarHeight, HEADERBAR_HEIGHT } from '../ControlBar/controlBarDimensions';\nimport isSmallScreen from '../../modules/isSmallScreen';\n\nconst EditDashboard = props => {\n  const {\n    width\n  } = useWindowDimensions();\n  useEffect(() => {\n    if (props.dashboard) {\n      props.setEditDashboard(props.dashboard, props.items);\n    }\n  }, [props.dashboard]);\n\n  const renderGrid = () => {\n    if (props.isPrintPreviewView) {\n      return <LayoutPrintPreview fromEdit={true} />;\n    }\n\n    const height = props.windowHeight - HEADERBAR_HEIGHT - getControlBarHeight(1);\n    return <div className=\"dashboard-wrapper\" style={{\n      height\n    }}>\n                <EditTitleBar />\n                <ItemGrid edit={true} />\n            </div>;\n  };\n\n  const renderEditView = () => <>\n            <EditBar />\n            {props.updateAccess ? renderGrid() : <NoContentMessage text={i18n.t('No access')} />}\n        </>;\n\n  return <>\n            {isSmallScreen(width) ? <NotSupportedNotice message={i18n.t('Editing dashboards on small screens is not supported.')} /> : renderEditView()}\n        </>;\n};\n\nEditDashboard.propTypes = {\n  dashboard: PropTypes.object,\n  isPrintPreviewView: PropTypes.bool,\n  items: PropTypes.array,\n  setEditDashboard: PropTypes.func,\n  updateAccess: PropTypes.bool,\n  windowHeight: PropTypes.number\n};\n\nconst mapStateToProps = state => {\n  const id = sGetSelectedId(state);\n  const dashboard = id ? sGetDashboardById(state, id) : null;\n  const updateAccess = dashboard && dashboard.access ? dashboard.access.update : false;\n  return {\n    dashboard,\n    updateAccess,\n    items: sGetDashboardItems(state),\n    isPrintPreviewView: sGetIsPrintPreviewView(state),\n    windowHeight: sGetWindowHeight(state)\n  };\n};\n\nexport default connect(mapStateToProps, {\n  setEditDashboard: acSetEditDashboard\n})(EditDashboard);","import React, { useEffect } from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport i18n from '@dhis2/d2-i18n';\nimport EditBar from '../ControlBar/EditBar';\nimport EditTitleBar from '../TitleBar/EditTitleBar';\nimport ItemGrid from '../ItemGrid/ItemGrid';\nimport LayoutPrintPreview from './PrintLayoutDashboard';\nimport NotSupportedNotice from './NotSupportedNotice';\nimport { acSetEditNewDashboard } from '../../actions/editDashboard';\nimport { sGetIsPrintPreviewView } from '../../reducers/editDashboard';\nimport { sGetWindowHeight } from '../../reducers/windowHeight';\nimport { getControlBarHeight, HEADERBAR_HEIGHT } from '../ControlBar/controlBarDimensions';\nimport { useWindowDimensions } from '../WindowDimensionsProvider';\nimport isSmallScreen from '../../modules/isSmallScreen';\n\nconst NewDashboard = props => {\n  const {\n    width\n  } = useWindowDimensions();\n  useEffect(() => {\n    props.setNewDashboard();\n  }, []);\n  const height = props.windowHeight - HEADERBAR_HEIGHT - getControlBarHeight(1);\n\n  const renderNewView = () => <>\n            <EditBar />\n            {props.isPrintPreviewView ? <LayoutPrintPreview fromEdit={true} /> : <div className=\"dashboard-wrapper\" style={{\n      height\n    }}>\n                    <EditTitleBar />\n                    <ItemGrid edit={true} />\n                </div>}\n        </>;\n\n  return <>\n            {isSmallScreen(width) ? <NotSupportedNotice message={i18n.t('Creating dashboards on small screens is not supported.')} /> : renderNewView()}\n        </>;\n};\n\nNewDashboard.propTypes = {\n  isPrintPreviewView: PropTypes.bool,\n  setNewDashboard: PropTypes.func,\n  windowHeight: PropTypes.number\n};\n\nconst mapStateToProps = state => ({\n  isPrintPreviewView: sGetIsPrintPreviewView(state),\n  windowHeight: sGetWindowHeight(state)\n});\n\nexport default connect(mapStateToProps, {\n  setNewDashboard: acSetEditNewDashboard\n})(NewDashboard);","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport i18n from '@dhis2/d2-i18n';\nimport ReactGridLayout from 'react-grid-layout';\nimport { Layer, CenteredContent, CircularLoader } from '@dhis2/ui';\nimport cx from 'classnames';\nimport { Item } from '../Item/Item';\nimport NoContentMessage from '../../widgets/NoContentMessage';\nimport { PRINT } from '../Dashboard/dashboardModes';\nimport { sGetSelectedIsLoading } from '../../reducers/selected';\nimport { sGetPrintDashboardRoot, sGetPrintDashboardItems } from '../../reducers/printDashboard';\nimport { GRID_ROW_HEIGHT, GRID_COMPACT_TYPE, MARGIN, getGridColumns, hasShape, a4LandscapeWidthPx } from './gridUtil';\nimport { orArray } from '../../modules/util';\nimport 'react-grid-layout/css/styles.css';\nimport './ItemGrid.css';\nexport class PrintItemGrid extends Component {\n  getItemComponent = item => <div key={item.i} className={cx(item.type, 'print', 'oipp')}>\n            <Item item={item} dashboardMode={PRINT} />\n        </div>;\n  getItemComponents = items => items.map(item => this.getItemComponent(item));\n\n  render() {\n    const {\n      isLoading,\n      dashboardItems\n    } = this.props;\n\n    if (!isLoading && !dashboardItems.length) {\n      return <NoContentMessage text={i18n.t('There are no items on this dashboard')} />;\n    }\n\n    const width = a4LandscapeWidthPx < window.innerWidth ? a4LandscapeWidthPx : window.innerWidth;\n    return <>\n                {isLoading ? <Layer translucent>\n                        <CenteredContent>\n                            <CircularLoader />\n                        </CenteredContent>\n                    </Layer> : null}\n                <ReactGridLayout className=\"layout print\" layout={dashboardItems} margin={MARGIN} cols={getGridColumns()} rowHeight={GRID_ROW_HEIGHT} width={width} compactType={GRID_COMPACT_TYPE} isDraggable={false} isResizable={false} draggableCancel=\"input,textarea\">\n                    {this.getItemComponents(dashboardItems)}\n                </ReactGridLayout>\n            </>;\n  }\n\n}\nPrintItemGrid.propTypes = {\n  dashboardItems: PropTypes.array,\n  isLoading: PropTypes.bool\n};\nPrintItemGrid.defaultProps = {\n  dashboardItems: []\n};\n\nconst mapStateToProps = state => {\n  const selectedDashboard = sGetPrintDashboardRoot(state);\n  return {\n    isLoading: sGetSelectedIsLoading(state) || !selectedDashboard,\n    dashboardItems: orArray(sGetPrintDashboardItems(state)).filter(hasShape)\n  };\n};\n\nexport default connect(mapStateToProps)(PrintItemGrid);","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport sortBy from 'lodash/sortBy';\nimport PrintInfo from './PrintInfo';\nimport PrintActionsBar from './PrintActionsBar';\nimport PrintItemGrid from '../ItemGrid/PrintItemGrid';\nimport { acSetPrintDashboard, acAddPrintDashboardItem, acRemovePrintDashboardItem, acUpdatePrintDashboardItem } from '../../actions/printDashboard';\nimport { sGetSelectedId } from '../../reducers/selected';\nimport { sGetWindowHeight } from '../../reducers/windowHeight';\nimport { sGetDashboardById, sGetDashboardItems } from '../../reducers/dashboards';\nimport { PAGEBREAK, PRINT_TITLE_PAGE, SPACER } from '../../modules/itemTypes';\nimport { a4LandscapeWidthPx, MAX_ITEM_GRID_HEIGHT_OIPP, MAX_ITEM_GRID_WIDTH_OIPP } from '../ItemGrid/gridUtil';\nimport { PRINT_ACTIONS_BAR_HEIGHT } from './PrintActionsBar';\nimport classes from './styles/PrintDashboard.module.css';\nimport './styles/print.css';\nimport './styles/print-oipp.css';\nexport class PrintDashboard extends Component {\n  state = {\n    initialized: false\n  };\n  initPrintDashboard = () => {\n    if (this.props.dashboard) {\n      this.setState({\n        initialized: true\n      }); //sort the items by Y pos so they print in order of top to bottom\n\n      const sortedItems = sortBy(this.props.items, ['y', 'x']);\n      this.props.setPrintDashboard(this.props.dashboard, sortedItems); // remove spacers - don't want empty pages\n\n      let spacerCount = 0;\n      this.props.items.forEach(item => {\n        if (item.type === SPACER) {\n          spacerCount += 1;\n          this.props.removeDashboardItem(item.id);\n        }\n      }); // Resize the items to the full page size\n\n      this.props.items.forEach(item => {\n        this.props.updateDashboardItem(Object.assign({}, item, {\n          w: MAX_ITEM_GRID_WIDTH_OIPP,\n          h: MAX_ITEM_GRID_HEIGHT_OIPP\n        }));\n      }); // insert page breaks into the document flow to create the \"pages\"\n      // when previewing the print\n\n      for (let i = 0; i < (this.props.items.length - spacerCount) * 2; i += 2) {\n        this.props.addDashboardItem({\n          type: PAGEBREAK,\n          position: i,\n          isStatic: false\n        });\n      }\n\n      this.props.addDashboardItem({\n        type: PRINT_TITLE_PAGE,\n        isOneItemPerPage: true\n      });\n    }\n  };\n\n  componentDidMount() {\n    this.initPrintDashboard();\n  }\n\n  componentDidUpdate() {\n    if (!this.state.initialized) {\n      this.initPrintDashboard();\n    }\n  }\n\n  render() {\n    const height = this.props.windowHeight - PRINT_ACTIONS_BAR_HEIGHT;\n    return <>\n                <PrintActionsBar id={this.props.dashboard.id} />\n                <div className={classes.wrapper} style={{\n        height\n      }}>\n                    <PrintInfo isLayout={false} />\n                    <div className={classes.pageOuter} style={{\n          width: a4LandscapeWidthPx\n        }} data-test=\"print-oipp-page\">\n                        <PrintItemGrid />\n                    </div>\n                </div>\n            </>;\n  }\n\n}\nPrintDashboard.propTypes = {\n  addDashboardItem: PropTypes.func,\n  dashboard: PropTypes.object,\n  items: PropTypes.array,\n  removeDashboardItem: PropTypes.func,\n  setPrintDashboard: PropTypes.func,\n  updateDashboardItem: PropTypes.func,\n  windowHeight: PropTypes.number\n};\n\nconst mapStateToProps = state => {\n  const id = sGetSelectedId(state);\n  const dashboard = id ? sGetDashboardById(state, id) : null;\n  return {\n    dashboard,\n    id,\n    items: sGetDashboardItems(state),\n    windowHeight: sGetWindowHeight(state)\n  };\n};\n\nexport default connect(mapStateToProps, {\n  setPrintDashboard: acSetPrintDashboard,\n  addDashboardItem: acAddPrintDashboardItem,\n  removeDashboardItem: acRemovePrintDashboardItem,\n  updateDashboardItem: acUpdatePrintDashboardItem\n})(PrintDashboard);","import { SET_WINDOW_HEIGHT } from '../reducers/windowHeight';\nexport const acSetWindowHeight = value => ({\n  type: SET_WINDOW_HEIGHT,\n  value\n});","import React, { useEffect } from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport isEmpty from 'lodash/isEmpty';\nimport i18n from '@dhis2/d2-i18n';\nimport { Layer, CenteredContent, CircularLoader } from '@dhis2/ui';\nimport debounce from 'lodash/debounce';\nimport DashboardsBar from '../ControlBar/DashboardsBar';\nimport NoContentMessage from '../../widgets/NoContentMessage';\nimport ViewDashboard from './ViewDashboard';\nimport EditDashboard from './EditDashboard';\nimport NewDashboard from './NewDashboard';\nimport PrintDashboard from './PrintDashboard';\nimport PrintLayoutDashboard from './PrintLayoutDashboard';\nimport { tSelectDashboard } from '../../actions/dashboards';\nimport { acSetWindowHeight } from '../../actions/windowHeight';\nimport { sDashboardsIsFetching, sGetAllDashboards } from '../../reducers/dashboards';\nimport { sGetSelectedId, NON_EXISTING_DASHBOARD_ID } from '../../reducers/selected';\nimport { EDIT, NEW, VIEW, PRINT, PRINT_LAYOUT, isPrintMode } from './dashboardModes';\n\nconst setHeaderbarVisibility = mode => {\n  const header = document.getElementsByTagName('header')[0];\n\n  if (isPrintMode(mode)) {\n    header.classList.add('hidden');\n  } else {\n    header.classList.remove('hidden');\n  }\n};\n\nconst dashboardMap = {\n  [VIEW]: <ViewDashboard />,\n  [EDIT]: <EditDashboard />,\n  [NEW]: <NewDashboard />,\n  [PRINT]: <PrintDashboard />,\n  [PRINT_LAYOUT]: <PrintLayoutDashboard />\n};\nexport const Dashboard = ({\n  id,\n  mode,\n  dashboardsLoaded,\n  dashboardsIsEmpty,\n  routeId,\n  selectDashboard,\n  setWindowHeight\n}) => {\n  useEffect(() => {\n    setHeaderbarVisibility(mode);\n  }, [mode]);\n  useEffect(() => {\n    if (dashboardsLoaded && !dashboardsIsEmpty) {\n      selectDashboard(routeId);\n    }\n  }, [dashboardsLoaded, dashboardsIsEmpty, routeId]);\n  useEffect(() => {\n    const onResize = debounce(() => setWindowHeight(window.innerHeight), 300);\n    window.addEventListener('resize', onResize);\n    return () => {\n      window.removeEventListener('resize', onResize);\n    };\n  }, []);\n\n  if (!dashboardsLoaded) {\n    return <Layer translucent>\n                <CenteredContent>\n                    <CircularLoader />\n                </CenteredContent>\n            </Layer>;\n  }\n\n  if (mode === NEW) {\n    return dashboardMap[mode];\n  }\n\n  if (dashboardsIsEmpty) {\n    return <>\n                <DashboardsBar />\n                <NoContentMessage text={i18n.t('No dashboards found. Use the + button to create a new dashboard.')} />\n            </>;\n  }\n\n  if (id === NON_EXISTING_DASHBOARD_ID) {\n    return <>\n                <DashboardsBar />\n                <NoContentMessage text={i18n.t('Requested dashboard not found')} />\n            </>;\n  }\n\n  if (id === null) {\n    return <Layer translucent>\n                <CenteredContent>\n                    <CircularLoader />\n                </CenteredContent>\n            </Layer>;\n  }\n\n  return dashboardMap[mode];\n};\nDashboard.propTypes = {\n  dashboardsIsEmpty: PropTypes.bool,\n  dashboardsLoaded: PropTypes.bool,\n  id: PropTypes.string,\n  match: PropTypes.object,\n  // provided by the react-router-dom\n  mode: PropTypes.string,\n  routeId: PropTypes.string,\n  selectDashboard: PropTypes.func,\n  setWindowHeight: PropTypes.func\n};\n\nconst mapStateToProps = (state, ownProps) => {\n  const dashboards = sGetAllDashboards(state);\n  return {\n    dashboardsIsEmpty: isEmpty(dashboards),\n    dashboardsLoaded: !sDashboardsIsFetching(state),\n    id: sGetSelectedId(state),\n    routeId: ownProps.match?.params?.dashboardId || null\n  };\n};\n\nexport default connect(mapStateToProps, {\n  selectDashboard: tSelectDashboard,\n  setWindowHeight: acSetWindowHeight\n})(Dashboard);","import React from 'react';\nimport { connect } from 'react-redux';\nimport { AlertBar, AlertStack } from '@dhis2/ui';\nimport PropTypes from 'prop-types';\nimport { sGetAlertMessage } from '../../reducers/alert';\nimport { acClearAlertMessage } from '../../actions/alert';\nexport const Alert = ({\n  message,\n  onClose\n}) => message ? <AlertStack>\n            <AlertBar onHidden={onClose} permanent>\n                {message}\n            </AlertBar>\n        </AlertStack> : null;\nAlert.propTypes = {\n  message: PropTypes.string,\n  onClose: PropTypes.func\n};\n\nconst mapStateToProps = state => ({\n  message: sGetAlertMessage(state)\n});\n\nexport default connect(mapStateToProps, {\n  onClose: acClearAlertMessage\n})(Alert);","import { RECEIVED_USER } from '../reducers/user';\nexport const acReceivedUser = value => ({\n  type: RECEIVED_USER,\n  value\n});","import { getInstance } from 'd2';\nimport { onError } from './index';\nconst SYSTEM_SETTINGS = ['keyGatherAnalyticalObjectStatisticsInDashboardViews'];\nexport const apiFetchSystemSettings = () => {\n  const endPoint = '/systemSettings';\n  const url = `${endPoint}?${SYSTEM_SETTINGS.map(s => `key=${s}`).join('&')}`;\n  return getInstance().then(d2 => d2.Api.getApi().get(url)).catch(onError);\n};","import React, { useEffect } from 'react';\nimport { HashRouter as Router, Route, Switch } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { CssVariables } from '@dhis2/ui';\nimport { useD2 } from '@dhis2/app-runtime-adapter-d2';\nimport Dashboard from './Dashboard/Dashboard';\nimport AlertBar from './AlertBar/AlertBar';\nimport { acReceivedUser } from '../actions/user';\nimport { tFetchDashboards } from '../actions/dashboards';\nimport { tSetControlBarRows } from '../actions/controlBar';\nimport { tSetShowDescription } from '../actions/selected';\nimport { tSetDimensions } from '../actions/dimensions';\nimport { tAddSettings } from '../actions/settings';\nimport { EDIT, VIEW, NEW, PRINT, PRINT_LAYOUT } from './Dashboard/dashboardModes';\nimport './App.css';\n\nconst App = props => {\n  const {\n    d2\n  } = useD2({});\n  useEffect(() => {\n    props.setCurrentUser(d2.currentUser);\n    props.fetchDashboards();\n    props.setControlBarRows();\n    props.setShowDescription();\n    props.setDimensions();\n    props.addSettings();\n  }, []);\n  return <>\n            <CssVariables colors spacers />\n            <Router>\n                <Switch>\n                    <Route exact path=\"/\" render={props => <Dashboard {...props} mode={VIEW} />} />\n                    <Route exact path=\"/new\" render={props => <Dashboard {...props} mode={NEW} />} />\n                    <Route exact path=\"/:dashboardId\" render={props => <Dashboard {...props} mode={VIEW} />} />\n                    <Route exact path=\"/:dashboardId/edit\" render={props => <Dashboard {...props} mode={EDIT} />} />\n                    <Route exact path=\"/:dashboardId/printoipp\" render={props => <Dashboard {...props} mode={PRINT} />} />\n                    <Route exact path=\"/:dashboardId/printlayout\" render={props => <Dashboard {...props} mode={PRINT_LAYOUT} />} />\n                </Switch>\n            </Router>\n            <AlertBar />\n        </>;\n};\n\nApp.propTypes = {\n  addSettings: PropTypes.func.isRequired,\n  fetchDashboards: PropTypes.func.isRequired,\n  setControlBarRows: PropTypes.func.isRequired,\n  setCurrentUser: PropTypes.func.isRequired,\n  setDimensions: PropTypes.func.isRequired,\n  setShowDescription: PropTypes.func.isRequired\n};\nconst mapDispatchToProps = {\n  fetchDashboards: tFetchDashboards,\n  setControlBarRows: tSetControlBarRows,\n  setCurrentUser: acReceivedUser,\n  setDimensions: tSetDimensions,\n  setShowDescription: tSetShowDescription,\n  addSettings: tAddSettings\n};\nexport default connect(null, mapDispatchToProps)(App);","import { SET_DIMENSIONS } from '../reducers/dimensions';\nimport { apiFetchDimensions } from '@dhis2/analytics';\nimport { sGetSettingsDisplayNameProperty } from '../reducers/settings';\nexport const acSetDimensions = dimensions => ({\n  type: SET_DIMENSIONS,\n  value: dimensions\n});\nexport const tSetDimensions = () => async (dispatch, getState, dataEngine) => {\n  const onSuccess = dimensions => {\n    dispatch(acSetDimensions(dimensions));\n  };\n\n  const onError = error => {\n    console.log('Error (apiFetchDimensions): ', error);\n    return error;\n  };\n\n  try {\n    const displayNameProp = sGetSettingsDisplayNameProperty(getState());\n    const dimensions = await apiFetchDimensions(dataEngine, displayNameProp); // filter out CATEGORY that are not of type ATTRIBUTE\n\n    const filteredDimensions = dimensions.filter(dim => dim.dimensionType !== 'CATEGORY' || dim.dimensionType === 'CATEGORY' && dim.dataDimensionType === 'ATTRIBUTE');\n    return onSuccess(filteredDimensions);\n  } catch (err) {\n    return onError(err);\n  }\n};","import { ADD_SETTINGS } from '../reducers/settings';\nimport { apiFetchSystemSettings } from '../api/settings';\nexport const acAddSettings = value => ({\n  type: ADD_SETTINGS,\n  value\n});\nexport const tAddSettings = (...extraSettings) => async dispatch => {\n  const onSuccess = fetchedSettings => {\n    dispatch(acAddSettings(Object.assign({}, fetchedSettings, ...extraSettings)));\n  };\n\n  const onError = error => {\n    console.log('Error (apiFetchSystemSettings): ', error);\n    return error;\n  };\n\n  try {\n    const systemSettings = await apiFetchSystemSettings();\n    return onSuccess({ ...systemSettings\n    });\n  } catch (err) {\n    return onError(err);\n  }\n};","/** @module reducers/selected */\nimport { validateReducer } from '../modules/util';\nexport const SET_STYLE = 'SET_STYLE';\nexport const DEFAULT_STATE_STYLE = 'LIST';\n/**\n * Reducer functions that computes and returns the new state based on the given action\n * @function\n * @param {Object} state The current state\n * @param {Object} action The action to be evaluated\n */\n\nconst style = (state = DEFAULT_STATE_STYLE, action) => {\n  switch (action.type) {\n    case SET_STYLE:\n      return validateReducer(action.value, DEFAULT_STATE_STYLE);\n\n    default:\n      return state;\n  }\n};\n\nexport default style;\n/**\n * Selectors that point to specific props in the state object\n * @function\n * @param {Object} state\n * @returns {Object}\n */\n\nexport const sGetStyleRoot = state => state.style;","import { combineReducers } from 'redux';\nimport dashboards from './dashboards';\nimport selected from './selected';\nimport dashboardsFilter from './dashboardsFilter';\nimport controlBar from './controlBar';\nimport visualizations from './visualizations';\nimport editDashboard from './editDashboard';\nimport printDashboard from './printDashboard';\nimport messages from './messages';\nimport user from './user';\nimport alert from './alert';\nimport itemFilters from './itemFilters';\nimport style from './style';\nimport dimensions from './dimensions';\nimport settings from './settings';\nimport activeModalDimension from './activeModalDimension';\nimport windowHeight from './windowHeight';\nexport default combineReducers({\n  dashboards,\n  selected,\n  dashboardsFilter,\n  controlBar,\n  visualizations,\n  messages,\n  user,\n  editDashboard,\n  printDashboard,\n  itemFilters,\n  style,\n  alert,\n  dimensions,\n  settings,\n  activeModalDimension,\n  windowHeight\n});","import { createStore, applyMiddleware, compose } from 'redux';\nimport { createLogger } from 'redux-logger';\nimport thunk from 'redux-thunk';\nimport reducer from './reducers';\n\nconst configureStore = dataEngine => {\n  const middleware = [thunk.withExtraArgument(dataEngine)]; // Enable Redux devtools if extension is installed instead of redux-logger\n\n  const composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\n\n  if (!window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ && process.env.NODE_ENV !== 'production') {\n    middleware.push(createLogger());\n  }\n\n  return createStore(reducer, composeEnhancers(applyMiddleware(...middleware)));\n};\n\nexport default configureStore;","//------------------------------------------------------------------------------\n// <auto-generated>\n// This code was generated by d2-i18n-generate.\n//\n// Changes to this file may cause incorrect behavior and will be lost if\n// the code is regenerated.\n// </auto-generated>\n//------------------------------------------------------------------------------\nimport i18n from '@dhis2/d2-i18n';\nimport arTranslations from './ar/translations.json';\nimport ar_IQTranslations from './ar_IQ/translations.json';\nimport ckbTranslations from './ckb/translations.json';\nimport csTranslations from './cs/translations.json';\nimport daTranslations from './da/translations.json';\nimport enTranslations from './en/translations.json';\nimport esTranslations from './es/translations.json';\nimport frTranslations from './fr/translations.json';\nimport idTranslations from './id/translations.json';\nimport kmTranslations from './km/translations.json';\nimport loTranslations from './lo/translations.json';\nimport myTranslations from './my/translations.json';\nimport nbTranslations from './nb/translations.json';\nimport prsTranslations from './prs/translations.json';\nimport psTranslations from './ps/translations.json';\nimport ptTranslations from './pt/translations.json';\nimport pt_BRTranslations from './pt_BR/translations.json';\nimport ruTranslations from './ru/translations.json';\nimport svTranslations from './sv/translations.json';\nimport tetTranslations from './tet/translations.json';\nimport tgTranslations from './tg/translations.json';\nimport ukTranslations from './uk/translations.json';\nimport urTranslations from './ur/translations.json';\nimport uzTranslations from './uz/translations.json';\nimport uz_CyrlTranslations from './uz_Cyrl/translations.json';\nimport viTranslations from './vi/translations.json';\nimport zhTranslations from './zh/translations.json';\nimport zh_CNTranslations from './zh_CN/translations.json';\nconst namespace = 'default';\ni18n.addResources('ar', namespace, arTranslations);\ni18n.addResources('ar_IQ', namespace, ar_IQTranslations);\ni18n.addResources('ckb', namespace, ckbTranslations);\ni18n.addResources('cs', namespace, csTranslations);\ni18n.addResources('da', namespace, daTranslations);\ni18n.addResources('en', namespace, enTranslations);\ni18n.addResources('es', namespace, esTranslations);\ni18n.addResources('fr', namespace, frTranslations);\ni18n.addResources('id', namespace, idTranslations);\ni18n.addResources('km', namespace, kmTranslations);\ni18n.addResources('lo', namespace, loTranslations);\ni18n.addResources('my', namespace, myTranslations);\ni18n.addResources('nb', namespace, nbTranslations);\ni18n.addResources('prs', namespace, prsTranslations);\ni18n.addResources('ps', namespace, psTranslations);\ni18n.addResources('pt', namespace, ptTranslations);\ni18n.addResources('pt_BR', namespace, pt_BRTranslations);\ni18n.addResources('ru', namespace, ruTranslations);\ni18n.addResources('sv', namespace, svTranslations);\ni18n.addResources('tet', namespace, tetTranslations);\ni18n.addResources('tg', namespace, tgTranslations);\ni18n.addResources('uk', namespace, ukTranslations);\ni18n.addResources('ur', namespace, urTranslations);\ni18n.addResources('uz', namespace, uzTranslations);\ni18n.addResources('uz_Cyrl', namespace, uz_CyrlTranslations);\ni18n.addResources('vi', namespace, viTranslations);\ni18n.addResources('zh', namespace, zhTranslations);\ni18n.addResources('zh_CN', namespace, zh_CNTranslations);\nexport default i18n;","import React from 'react';\nimport { MuiThemeProvider, createMuiTheme } from '@material-ui/core/styles';\nimport dhis2theme from '@dhis2/d2-ui-core/theme/mui3.theme';\nimport { Provider as ReduxProvider } from 'react-redux';\nimport { D2Shim } from '@dhis2/app-runtime-adapter-d2';\nimport { useDataEngine } from '@dhis2/app-runtime';\nimport WindowDimensionsProvider from './components/WindowDimensionsProvider';\nimport App from './components/App';\nimport configureStore from './configureStore';\nimport './AppWrapper.css';\nimport './locales';\n\nconst muiTheme = () => createMuiTheme(dhis2theme);\n\nconst d2Config = {\n  schemas: ['chart', 'map', 'report', 'reportTable', 'eventChart', 'eventReport', 'dashboard', 'organisationUnit', 'userGroup']\n}; // TODO: ER and EV plugins require the auth header in development mode.\n// Remove this when these plugins are rewritten\n\nconst authorization = process.env.REACT_APP_DHIS2_AUTHORIZATION || null;\n\nif (authorization) {\n  d2Config.headers = {\n    Authorization: authorization\n  };\n}\n\nconst AppWrapper = () => {\n  const dataEngine = useDataEngine();\n  return <ReduxProvider store={configureStore(dataEngine)}>\n            <MuiThemeProvider theme={muiTheme()}>\n                <D2Shim d2Config={d2Config} i18nRoot=\"./i18n\">\n                    {({\n          d2\n        }) => {\n          if (!d2) {\n            // TODO: Handle errors in d2 initialization\n            return null;\n          }\n\n          return <WindowDimensionsProvider>\n                                <App />\n                            </WindowDimensionsProvider>;\n        }}\n                </D2Shim>\n            </MuiThemeProvider>\n        </ReduxProvider>;\n};\n\nexport default AppWrapper;","import isObject from 'lodash/isObject';\nimport { itemTypeMap } from './itemTypes';\nexport const getVisualizationFromItem = item => {\n  if (!isObject(item)) {\n    return null;\n  }\n\n  const propName = itemTypeMap[item.type]?.propName;\n  return item[propName] || item.reportTable || item.chart || item.map || item.eventReport || item.eventChart || {};\n};\nexport const getVisualizationId = item => getVisualizationFromItem(item).id;\nexport const getVisualizationName = item => getVisualizationFromItem(item).name;","import { REPORT_TABLE, CHART, MAP, EVENT_REPORT, EVENT_CHART, itemTypeMap } from '../../../../modules/itemTypes';\nimport { getVisualizationId } from '../../../../modules/item';\nimport { getGridItemDomId } from '../../../ItemGrid/gridUtil'; //external plugins\n\nconst itemTypeToExternalPlugin = {\n  [MAP]: 'mapPlugin',\n  [EVENT_REPORT]: 'eventReportPlugin',\n  [EVENT_CHART]: 'eventChartPlugin'\n};\n\nconst hasIntegratedPlugin = type => [CHART, REPORT_TABLE].includes(type);\n\nconst getPlugin = type => {\n  if (hasIntegratedPlugin(type)) {\n    return true;\n  }\n\n  const pluginName = itemTypeToExternalPlugin[type];\n  return global[pluginName];\n};\n\nexport const pluginIsAvailable = type => !!getPlugin(type);\nexport const loadPlugin = (plugin, config, credentials) => {\n  if (!(plugin && plugin.load)) {\n    return;\n  }\n\n  plugin.url = credentials.baseUrl;\n  plugin.loadingIndicator = true;\n  plugin.dashboard = true;\n\n  if (credentials.auth) {\n    plugin.auth = credentials.auth;\n  }\n\n  plugin.load(config);\n};\nexport const getLink = (item, baseUrl) => {\n  const appUrl = itemTypeMap[item.type].appUrl(getVisualizationId(item));\n  return `${baseUrl}/${appUrl}`;\n};\nexport const load = async (item, visualization, {\n  credentials,\n  activeType,\n  options = {}\n}) => {\n  const config = { ...visualization,\n    ...options,\n    el: getGridItemDomId(item.id)\n  };\n  const type = activeType || item.type;\n  const plugin = getPlugin(type);\n  loadPlugin(plugin, config, credentials);\n};\nexport const resize = item => {\n  const plugin = getPlugin(item.type);\n\n  if (plugin && plugin.resize) {\n    plugin.resize(getGridItemDomId(item.id));\n  }\n};\nexport const unmount = (item, activeType) => {\n  const plugin = getPlugin(activeType);\n\n  if (plugin && plugin.unmount) {\n    plugin.unmount(getGridItemDomId(item.id));\n  }\n};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"itemHeaderWrap\":\"ItemHeader_itemHeaderWrap__JcBP7\",\"itemTitle\":\"ItemHeader_itemTitle__34rHa\",\"itemActionsWrap\":\"ItemHeader_itemActionsWrap__Gx3D9\"};"],"sourceRoot":""}
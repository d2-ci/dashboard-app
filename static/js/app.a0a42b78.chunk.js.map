{"version":3,"sources":["D2App/components/ControlBar/ViewControlBar/styles/Filter.module.css","D2App/components/ControlBar/ViewControlBar/styles/Content.module.css","D2App/components/ControlBar/ViewControlBar/styles/ShowMoreButton.module.css","D2App/components/ControlBar/ViewControlBar/styles/DragHandle.module.css","D2App/components/ControlBar/ViewControlBar/styles/DashboardsBar.module.css","D2App/components/Dashboard/styles/DashboardContainer.module.css","D2App/components/ItemFilter/styles/FilterSelector.module.css","D2App/components/TitleBar/styles/ViewTitleBar.module.css","D2App/components/Item/VisualizationItem/Visualization/styles/NoVisualizationMessage.module.css","D2App/components/Item/VisualizationItem/Visualization/styles/LoadingMask.module.css","D2App/components/Item/VisualizationItem/styles/FatalErrorBoundary.module.css","D2App/components/Item/ItemHeader/styles/DeleteItemButton.module.css","D2App/components/Item/ItemHeader/styles/PrintItemInfo.module.css","D2App/components/Item/VisualizationItem/styles/ItemFooter.module.css","D2App/components/Item/ListItem/Item.module.css","D2App/components/Item/PrintTitlePageItem/styles/Item.module.css","D2App/components/FilterBar/styles/FilterBadge.module.css","D2App/components/FilterBar/styles/FilterBar.module.css","D2App/components/Dashboard/styles/ViewDashboard.module.css","D2App/components/ItemSelector/styles/HeaderMenuItem.module.css","D2App/components/ItemSelector/styles/ContentMenuItem.module.css","D2App/components/ItemSelector/styles/CategorizedMenuGroup.module.css","D2App/components/ItemSelector/styles/ItemSelector.module.css","D2App/components/TitleBar/styles/EditTitleBar.module.css","D2App/components/ControlBar/styles/ConfirmDeleteDialog.module.css","D2App/components/ControlBar/styles/EditBar.module.css","D2App/components/Dashboard/styles/NotSupportedNotice.module.css","D2App/components/Dashboard/styles/PrintInfo.module.css","D2App/components/Dashboard/styles/PrintActionsBar.module.css","D2App/components/Dashboard/styles/PrintLayoutDashboard.module.css","D2App/components/Dashboard/styles/EditDashboard.module.css","D2App/components/Dashboard/styles/NewDashboard.module.css","D2App/components/Dashboard/styles/PrintDashboard.module.css","D2App/components/WindowDimensionsProvider.js","D2App/api/settings.js","D2App/components/SystemSettingsProvider.js","D2App/icons/Star.js","D2App/api/dataStatistics.js","D2App/components/ControlBar/ViewControlBar/DashboardItemChip.js","D2App/icons/AddCircle.js","D2App/icons/Search.js","D2App/icons/Clear.js","D2App/components/ControlBar/ViewControlBar/ClearButton.js","D2App/reducers/dashboardsFilter.js","D2App/modules/gridUtil.js","D2App/modules/smallScreen.js","D2App/components/ControlBar/ViewControlBar/Filter.js","D2App/actions/dashboardsFilter.js","D2App/modules/uiBackendItemConverter.js","D2App/reducers/dashboards.js","D2App/reducers/selected.js","D2App/modules/getFilteredDashboards.js","D2App/components/ControlBar/ViewControlBar/Content.js","D2App/components/ControlBar/ViewControlBar/assets/icons.js","D2App/components/ControlBar/ViewControlBar/ShowMoreButton.js","D2App/components/ControlBar/ViewControlBar/DragHandle.js","D2App/components/ControlBar/ViewControlBar/controlBarDimensions.js","D2App/reducers/controlBar.js","D2App/api/userDataStore.js","D2App/api/controlBar.js","D2App/actions/controlBar.js","D2App/components/ControlBar/ViewControlBar/DashboardsBar.js","D2App/widgets/NoContentMessage.js","D2App/components/Dashboard/DashboardContainer.js","D2App/components/Item/VisualizationItem/assets/icons.js","D2App/api/description.js","D2App/reducers/user.js","D2App/reducers/dimensions.js","D2App/reducers/itemFilters.js","D2App/actions/itemFilters.js","D2App/reducers/messages.js","D2App/api/messages.js","D2App/components/Item/MessagesItem/actions.js","D2App/reducers/alert.js","D2App/actions/alert.js","D2App/reducers/visualizations.js","D2App/actions/visualizations.js","D2App/api/metadata.js","D2App/api/index.js","D2App/api/dashboards.js","D2App/actions/selected.js","D2App/api/localStorage.js","D2App/actions/dashboards.js","D2App/components/ItemFilter/FilterDialog.js","D2App/reducers/activeModalDimension.js","D2App/actions/activeModalDimension.js","D2App/components/ItemFilter/FilterSelector.js","D2App/components/TitleBar/ViewTitleBar.js","D2App/api/starDashboard.js","D2App/components/Item/VisualizationItem/Visualization/DefaultPlugin.js","D2App/components/Item/VisualizationItem/Visualization/NoVisualizationMessage.js","D2App/components/Item/VisualizationItem/Visualization/MapPlugin.js","D2App/components/Item/VisualizationItem/Visualization/LoadingMask.js","D2App/components/Item/VisualizationItem/Visualization/getFilteredVisualization.js","D2App/components/Item/VisualizationItem/Visualization/getVisualizationConfig.js","D2App/modules/memoizeOne.js","D2App/components/Item/VisualizationItem/Visualization/Visualization.js","D2App/components/Item/VisualizationItem/FatalErrorBoundary.js","D2App/components/Item/ItemHeader/ViewItemActions.js","D2App/components/Item/ItemHeader/DeleteItemButton.js","D2App/reducers/editDashboard.js","D2App/api/editDashboard.js","D2App/actions/editDashboard.js","D2App/components/Item/ItemHeader/EditItemActions.js","D2App/icons/Info.js","D2App/components/Item/ItemHeader/PrintItemInfo.js","D2App/components/Dashboard/dashboardModes.js","D2App/components/Item/ItemHeader/ItemHeader.js","D2App/components/Item/VisualizationItem/ItemHeaderButtons.js","D2App/components/Item/VisualizationItem/ItemFooter.js","D2App/components/Item/VisualizationItem/Item.js","D2App/widgets/Line.js","D2App/components/Item/MessagesItem/Item.js","D2App/components/Item/NotSupportedItem/Item.js","D2App/icons/Description.js","D2App/icons/Delete.js","D2App/components/Item/ListItem/Item.js","D2App/components/Item/ListItem/actions.js","D2App/reducers/printDashboard.js","D2App/components/Item/TextItem/Item.js","D2App/components/Item/AppItem/Item.js","D2App/components/Item/SpacerItem/Item.js","D2App/components/Item/PageBreakItem/Item.js","D2App/components/Item/PrintTitlePageItem/Item.js","D2App/components/Item/Item.js","D2App/components/Item/ProgressiveLoadingContainer.js","D2App/components/ItemGrid/ViewItemGrid.js","D2App/components/FilterBar/FilterBadge.js","D2App/components/FilterBar/FilterBar.js","D2App/actions/printDashboard.js","D2App/components/Dashboard/ViewDashboard.js","D2App/components/ItemSelector/ItemSearchField.js","D2App/components/ItemSelector/HeaderMenuItem.js","D2App/icons/Launch.js","D2App/components/ItemSelector/ContentMenuItem.js","D2App/components/ItemSelector/actions.js","D2App/components/ItemSelector/selectableItems.js","D2App/components/ItemSelector/CategorizedMenuGroup.js","D2App/components/ItemSelector/SinglesMenuGroup.js","D2App/modules/useDebounce.js","D2App/components/ItemSelector/ItemSelector.js","D2App/api/dashboardsQ.js","D2App/components/TitleBar/EditTitleBar.js","D2App/components/ItemGrid/EditItemGrid.js","D2App/components/ControlBar/ConfirmDeleteDialog.js","D2App/components/ControlBar/EditBar.js","D2App/components/Dashboard/NotSupportedNotice.js","D2App/components/Dashboard/PrintInfo.js","D2App/icons/LessHorizontal.js","D2App/components/Dashboard/PrintActionsBar.js","D2App/modules/printUtils.js","D2App/components/ItemGrid/StaticGrid.js","D2App/components/ItemGrid/PrintLayoutItemGrid.js","D2App/components/Dashboard/PrintLayoutDashboard.js","D2App/components/Dashboard/EditDashboard.js","D2App/components/Dashboard/NewDashboard.js","D2App/components/ItemGrid/PrintItemGrid.js","D2App/components/Dashboard/PrintDashboard.js","D2App/components/Dashboard/Dashboard.js","D2App/components/AlertBar/AlertBar.js","D2App/modules/getFilteredDimensions.js","D2App/components/App.js","D2App/actions/user.js","D2App/actions/dimensions.js","D2App/reducers/style.js","D2App/reducers/index.js","D2App/configureStore.js","D2App/locales/index.js","D2App/AppWrapper.js","D2App/modules/itemTypes.js","D2App/modules/util.js","D2App/modules/item.js","D2App/components/Item/VisualizationItem/Visualization/plugin.js","D2App/modules/getGridItemDomId.js","D2App/components/Item/ItemHeader/styles/ItemHeader.module.css","D2App/components/ItemGrid/styles/ItemGrid.module.css","D2App/components/ControlBar/ViewControlBar/styles/DashboardItemChip.module.css","D2App/components/ControlBar/ViewControlBar/styles/ClearButton.module.css"],"names":["module","exports","WindowDimensionsCtx","createContext","windowDims","height","window","innerHeight","width","innerWidth","WindowDimensionsProvider","children","dimensions","setDimensions","useState","useEffect","handleResize","debounce","addEventListener","removeEventListener","React","createElement","Provider","value","useWindowDimensions","useContext","DEFAULT_SETTINGS","displayNameProperty","keyDashboardContextMenuItemOpenInRelevantApp","keyDashboardContextMenuItemShowInterpretationsAndDetails","keyDashboardContextMenuItemSwitchViewType","keyDashboardContextMenuItemViewFullscreen","keyGatherAnalyticalObjectStatisticsInDashboardViews","SYSTEM_SETTINGS_REMAPPINGS","renameSystemSettings","settings","Object","keys","reduce","mapped","key","query","resource","params","SystemSettingsCtx","SystemSettingsProvider","setSettings","engine","useDataEngine","async","systemSettings","settingsQuery","assign","fetchData","useSystemSettings","StarIcon","className","xmlns","viewBox","d","fill","apiPostDataStatistics","eventType","id","d2","getInstance","url","concat","Api","getApi","post","DashboardItemChip","starred","selected","label","dashboardId","onClick","chipProps","selectedState","classes","unselected","icon","debouncedPostStatistics","Link","link","to","Chip","AddCircleIcon","colors","teal600","SearchIcon","small","ClearIcon","grey800","ClearButton","onClear","button","color","SET_DASHBOARDS_FILTER","CLEAR_DASHBOARDS_FILTER","sGetDashboardsFilter","state","dashboardsFilter","GRID_COMPACT_TYPE","GRID_ROW_HEIGHT_PX","MARGIN_PX","MARGIN_SM_PX","GRID_PADDING_PX","NEW_ITEM_SHAPE","x","y","w","h","isNonNegativeInteger","Number","isInteger","hasShape","item","withShape","items","map","i","col","row","Math","floor","itemWidth","MAX_ITEM_GRID_WIDTH","getShape","originalH","getGridWidth","windowWidthPx","getGridUnitsForSmFromPx","hPx","gridUnitHeightPx","round","getProportionalHeight","wPx","getItemWHPx","ratioWH","isVisualizationType","newWPx","newHPx","getGridItemProperties","itemId","minH","getPageBreakItemShape","yPos","isStatic","GRID_COLUMNS","static","getPrintTitlePageItemShape","isOneItemPerPage","gridUnits","colOrRowSize","marginPx","max","isSmallScreen","mapDispatchToProps","setDashboardsFilter","type","clearDashboardsFilter","connect","filterText","expanded","onKeypressEnter","onSearchClicked","focusedClassName","setFocusedClassName","inputFocused","setInputFocus","cx","container","collapsed","searchButton","searchIcon","searchArea","onFocus","event","preventDefault","focused","onBlur","searchIconContainer","searchIconSmall","searchIconLarge","input","placeholder","i18n","t","onChange","target","onKeyUp","keyCode","ref","focus","clearButtonContainer","spacerContent","emptyTextItemContent","isTextType","TEXT","text","convertUiItemsToBackend","SPACER","isUiSpacerType","convertBackendItemsToUi","isBackendSpacerType","gridProperties","SET_DASHBOARDS","ADD_DASHBOARDS","SET_DASHBOARD_STARRED","SET_DASHBOARD_DISPLAY_NAME","SET_DASHBOARD_ITEMS","DEFAULT_STATE_DASHBOARDS","byId","EMPTY_DASHBOARD","updateDashboardProp","prop","sGetDashboardsRoot","dashboards","sGetDashboardById","orObject","sDashboardsIsFetching","sGetAllDashboards","sGetDashboardItems","sGetStarredDashboards","values","filter","dashboard","sGetUnstarredDashboards","getCustomDashboards","data","arrayFrom","name","displayName","description","displayDescription","favorite","owner","user","created","split","join","substr","lastUpdated","access","numberOfItems","orArray","dashboardItems","length","SET_SELECTED_ID","SET_SELECTED_ISLOADING","SET_SELECTED_SHOWDESCRIPTION","SET_SELECTED_ITEM_ACTIVE_TYPE","CLEAR_SELECTED_ITEM_ACTIVE_TYPES","DEFAULT_STATE_SELECTED_SHOWDESCRIPTION","DEFAULT_STATE_SELECTED_ITEM_ACTIVE_TYPES","combineReducers","action","validateReducer","isLoading","showDescription","itemActiveTypes","activeType","sGetSelectedRoot","sGetSelectedId","sGetSelectedIsLoading","sGetSelectedShowDescription","sGetSelectedItemActiveType","getFilteredDashboards","filteredDashboards","arraySort","toLowerCase","includes","withRouter","selectedId","history","onChipClicked","onSelectDashboard","_getFilteredDashboard","push","controlsSmall","Filter","chipsContainer","controlsLarge","newLink","ChevronDown","ChevronUp","ShowMoreButton","dashboardBarIsExpanded","disabled","containerRef","useRef","buttonLabel","onButtonClicked","buttonEl","current","MouseEvent","bubbles","cancelable","dispatchEvent","Tooltip","content","placement","onMouseOver","onMouseOut","showMore","DragHandle","onHeightChanged","setDragging","startingY","setStartingY","onDrag","e","stopPropagation","currentY","clientY","requestAnimationFrame","onEndDrag","draghandle","onMouseDown","SET_CONTROLBAR_USER_ROWS","userRows","sGetControlBarUserRows","controlBar","sGetControlBarRoot","NAMESPACE","hasNamespace","currentUser","dataStore","has","getNamespace","get","create","apiPostUserDataStoreValue","set","apiGetUserDataStoreValue","defaultValue","_namespace$keys","namespace","find","k","console","log","KEY_CONTROLBAR_ROWS","acSetControlBarUserRows","rows","updateUserRows","onExpandedChanged","dragging","userRowsChanged","createRef","rootElement","document","documentElement","style","setProperty","apiPostControlBarRows","scrollToTop","scroll","toggleExpanded","cancelExpanded","Content","newHeight","newRows","min","spacer","NoContentMessage","padding","textAlign","fontSize","fontWeight","grey600","DashboardContainer","covered","ThreeDots","SpeechBubble","margin","fillRule","transform","Warning","Fullscreen","ExitFullscreen","KEY_SHOW_DESCRIPTION","RECEIVED_USER","DEFAULT_STATE_USER","username","uiLocale","isSuperuser","sGetUserUsername","SET_DIMENSIONS","DEFAULT_DIMENSIONS","getDimensionById","DIMENSION_ID_PERIOD","DIMENSION_ID_ORGUNIT","sGetDimensions","CLEAR_ITEM_FILTERS","SET_ITEM_FILTERS","ADD_ITEM_FILTER","REMOVE_ITEM_FILTER","DEFAULT_STATE_ITEM_FILTERS","sGetItemFiltersRoot","itemFilters","sGetNamedItemFilters","createSelector","filters","arr","dimension","acRemoveItemFilter","RECEIVED_MESSAGES","sGetMessagesRoot","messages","messageConversationsQuery","fields","order","pageSize","tGetMessages","dataEngine","messageConversations","error","getMessages","dispatch","err","SET_ALERT_MESSAGE","CLEAR_ALERT_MESSAGE","sGetAlertMessage","alert","acClearAlertMessage","ADD_VISUALIZATION","CLEAR_VISUALIZATIONS","DEFAULT_STATE_VISUALIZATIONS","isEmpty","p","undefined","sGetVisualization","visualizations","sGetVisualizationsRoot","acAddVisualization","getIdNameFields","rename","getDimensionFields","withItems","arrayClean","getAxesFields","getFavoriteFields","withDimensions","withOptions","getFavoritesFields","apiFetchVisualization","getVisualizationId","MAP","getEndPointName","onError","getDashboardItemsFields","withFavorite","getDashboardFields","dashboardsQuery","paging","dashboardQuery","deleteDashboardMutation","apiFetchDashboard","variables","acSetSelectedId","acSetSelectedIsLoading","acSetSelectedShowDescription","tSetSelectedDashboardById","getState","alertTimeout","setTimeout","_sGetDashboardById","onSuccess","acAppendDashboards","customDashboard","acSetDashboardItems","localStorage","setItem","forEach","REPORT_TABLE","CHART","EVENT_REPORT","EVENT_CHART","getVisualizationFromItem","MESSAGES","clearTimeout","arrayToIdMap","tFetchDashboards","acSetDashboards","apiFetchDashboards","tDeleteDashboard","mutate","apiDeleteDashboard","Promise","resolve","_extends","arguments","source","prototype","hasOwnProperty","call","apply","this","initiallySelectedItems","addItemFilter","removeItemFilter","onClose","setFilters","useD2","onSelectItems","dimensionId","onDeselectItems","itemIdsToRemove","newList","onReorderItems","itemIds","oldList","reorderedList","Fragment","Modal","dataTest","position","large","ModalTitle","ModalContent","commonProps","onSelect","onDeselect","onReorder","selectedItems","PeriodDimension","selectedPeriods","OrgUnitDimension","ouItems","DynamicDimension","renderDialogContent","ModalActions","ButtonStrip","Button","secondary","primary","filterItems","SET_ACTIVE_MODAL_DIMENSION","CLEAR_ACTIVE_MODAL_DIMENSION","DEFAULT_STATE_ACTIVE_MODAL_DIMENSION","sGetActiveModalDimension","activeModalDimension","acSetActiveModalDimension","clearActiveModalDimension","setActiveModalDimension","props","showPopover","setShowPopover","onCloseDialog","buttonContainer","ArrowDropDownIcon","Popover","onClickOutside","reference","arrow","popover","DimensionsPanel","onDimensionClick","selectedIds","FilterDialog","ViewTitleBar","setDashboardStarred","updateShowDescription","moreOptionsIsOpen","setMoreOptionsIsOpen","sharingDialogIsOpen","setSharingDialogIsOpen","redirectUrl","setRedirectUrl","warningAlert","useAlert","msg","warning","toggleSharingDialog","toggleMoreOptions","Star","StarBorder","Redirect","showHideDescriptionLabel","toggleStarredDashboardLabel","onToggleStarredDashboard","isStarred","mutation","getStarDashboardMutation","getUnstarDashboardMutation","apiStarDashboard","then","catch","show","buttonRef","userAccess","descriptionClasses","descContainer","desc","noDesc","getMoreButton","useSmall","moreText","titleBar","title","actions","star","strip","update","editLink","manage","shareButton","FilterSelector","moreButton","moreButtonSmall","FlyoutMenu","MenuItem","dense","apiPostShowDescription","SharingDialog","open","onRequestClose","defaultProps","DefaultPlugin","visualization","options","baseUrl","useConfig","credentials","auth","defaultHeaders","Authorization","prevItem","prevActiveType","load","unmount","shouldPluginReload","reloadAllowed","visChanged","getGridItemDomId","NoVisualizationMessage","message","MapPlugin","applyFilters","mapViews","mapView","layer","pluginIsAvailable","hideTitle","LoadingMask","center","CircularLoader","getFilteredVisualization","visRows","obj","visColumns","columns","visFilters","dimensionFound","dimensionObjects","getWithoutId","object","getVisualizationConfig","originalType","extractedMapView","mv","VIS_TYPE_COLUMN","VIS_TYPE_PIVOT_TABLE","layout","getAdaptedUiLayoutByType","memoizeOne","fn","lastArgs","lastValue","args","every","arg","_defineProperty","defineProperty","enumerable","configurable","writable","Visualization","Component","constructor","super","pluginLoaded","setState","memoizedGetFilteredVisualization","memoizedGetVisualizationConfig","render","availableHeight","availableWidth","pluginProps","VISUALIZATION","D2Shim","d2Config","VisualizationPlugin","onLoadingComplete","forDashboard","ownProps","FatalErrorBoundary","errorFound","componentDidCatch","info","ViewItemActions","actionButtons","itemActionsWrap","DeleteItemButton","deleteItemButton","DeleteIcon","red500","RECEIVED_EDIT_DASHBOARD","RECEIVED_NOT_EDITING","START_NEW_DASHBOARD","RECEIVED_TITLE","RECEIVED_DESCRIPTION","ADD_DASHBOARD_ITEM","REMOVE_DASHBOARD_ITEM","UPDATE_DASHBOARD_ITEM","RECEIVED_DASHBOARD_LAYOUT","SET_PRINT_PREVIEW_VIEW","CLEAR_PRINT_PREVIEW_VIEW","DEFAULT_STATE_EDIT_DASHBOARD","NEW_DASHBOARD_STATE","printPreviewView","sGetEditDashboardRoot","editDashboard","sGetIsEditing","sGetIsPrintPreviewView","sGetEditDashboardItems","createDashboardMutation","updateDashboardMutation","generatePayload","acClearEditDashboard","acAddDashboardItem","itemPropName","itemTypeMap","propName","generateUid","gridItemProperties","shape","PAGEBREAK","PRINT_TITLE_PAGE","acUpdateDashboardItem","acRemoveDashboardItem","tSaveDashboard","dashboardToSave","response","uid","updateDashboard","postDashboard","WarningIcon","PrintWarning","InfoIcon","EDIT","NEW","VIEW","PRINT","PRINT_LAYOUT","isEditMode","mode","isPrintMode","isViewMode","ItemHeader","forwardRef","dashboardMode","isShortened","rest","Actions","EditItemActions","PrintItemInfo","getItemActionsMap","itemHeaderWrap","itemTitle","iconFill","ItemHeaderButtons","menuIsOpen","setMenuIsOpen","isOpen","onSelectActiveType","openInRelevantApp","showInterpretationsAndDetails","switchViewType","fullscreenAllowedInSettings","isTrackerType","isTrackerDomainType","onViewTable","closeMenu","onViewChart","onViewMap","canViewAs","isSingleValue","isYearOverYear","VIS_TYPE_GAUGE","VIS_TYPE_PIE","interpretationMenuLabel","activeFooter","ViewAsMenuItems","ChartIcon","TableIcon","hasMapView","MapIcon","fullscreenAllowed","fullscreenSupported","isFullscreen","onToggleFullscreen","Menu","Divider","LaunchIcon","appName","getAppName","href","getLink","onToggleFooter","ItemFooter","line","scrollContainer","InterpretationsComponent","Item","showFooter","configLoaded","el","querySelector","itemDomElSelector","requestFullscreen","webkitRequestFullscreen","fullscreenElement","webkitFullscreenElement","pluginResize","exitFullscreen","webkitExitFullscreen","uniqueId","onToggleItemExpanded","getActiveType","setActiveType","isEditing","calculatedHeight","smallOriginalH","getItemHeightPx","headerRef","clientHeight","itemHeaderTotalMargin","itemContentPadding","memoizedGetContentHeight","contentRef","offsetHeight","_document$querySelect","rect","getBoundingClientRect","getComputedStyle","parseInt","getPropertyValue","replace","measuredHeight","preferMeasured","updateVisualization","getDataStatisticsName","onfullscreenchange","handleFullscreenChange","onwebkitfullscreenchange","componentWillUnmount","componentDidUpdate","prevProps","gridWidth","setViewportSize","clientWidth","isFullscreenSupported","getVisualizationName","shortened","getUniqueKey","Consumer","getAvailableHeight","getAvailableWidth","Function","_ownProps$item","backgroundColor","grey200","border","Line","PRIVATE","messageTypes","VALIDATION_RESULT","TICKET","SYSTEM","list","listStyleType","paddingLeft","seeAll","marginBottom","sender","lineHeight","snippet","maxHeight","overflow","MessagesContainer","setUiLocale","userSettings","getUiLocale","getMessageHref","msgIdentifier","messageType","modeClass","latestMsg","slice","getMessageSender","readClass","read","msgDate","location","messageCount","formatDate","getMessageItems","NotSupportedItem","display","justifyContent","alignItems","NotInterestedIcon","align","DescriptionIcon","grey500","getItemTitle","pluralTitle","tRemoveListItemContent","dashboardItem","listItemType","newContent","contentItems","index","array","findIndex","getContentItems","contentItem","itemicon","deleteButton","deletebutton","deleteicon","grey900","getItemUrl","SET_PRINT_DASHBOARD","CLEAR_PRINT_DASHBOARD","ADD_PRINT_DASHBOARD_ITEM","SET_PRINT_DASHBOARD_LAYOUT","REMOVE_PRINT_DASHBOARD_ITEM","UPDATE_PRINT_DASHBOARD_ITEM","DEFAULT_STATE_PRINT_DASHBOARD","DEFAULT_DASHBOARD_ITEMS","NEW_PRINT_DASHBOARD_STATE","sGetPrintDashboardRoot","printDashboard","sGetIsPrinting","sGetPrintDashboardItems","_sGetPrintDashboardRo","textDiv","whiteSpace","textField","fontStretch","marginTop","onChangeText","updatedItem","viewItem","textDivStyle","RichTextParser","editItem","RichTextEditor","onEdit","Input","multiline","fullWidth","printItem","textItem","getIframeSrc","appDetails","iframeSrc","launchUrl","ouIds","ouFilter","path","_appDetails","_appDetails$settings","_appDetails$settings$","appKey","system","installedApps","app","dashboardWidget","src","SpacerItem","PageBreakItem","PrintTitlePageItem","titlePage","filterTitle","listItems","filterListItem","val","filterList","getItemFilterList","viewDashboard","sGetPrintDashboardName","sGetPrintDashboardDescription","GridItem","VisualizationItem","MessagesItem","REPORTS","RESOURCES","USERS","ListItem","TextItem","APP","AppItem","getGridItem","ProgressiveLoadingContainer","shouldLoad","passive","checkShouldLoad","bufferPx","bufferFactor","bottom","top","removeHandler","registerHandler","shouldLoadHandler","debounceMs","Array","from","getElementsByClassName","handlerOptions","componentDidMount","eventProps","pick","PropTypes","node","isRequired","number","string","selectedDashboard","expandedItems","setExpandedItems","displayItems","setDisplayItems","layoutSm","setLayoutSm","setGridWidth","getItemsWithAdjustedHeight","sortBy","clickedId","isExpanded","newExpandedItems","expandedItem","expandedHeight","Layer","translucent","CenteredContent","ResponsiveReactGridLayout","grid","rowHeight","cols","lg","sm","breakpoints","SMALL_SCREEN_BREAKPOINT","layouts","compactType","containerPadding","isDraggable","isResizable","draggableCancel","onWidthChange","containerWidth","getItemComponent","openFilterModal","removeFilter","count","badge","badgeSmall","removeButton","FilterBar","bar","FilterBadge","acSetPrintDashboard","acClearPrintDashboard","acAddPrintDashboardItem","acUpdatePrintDashboardItem","dashboardIsEditing","dashboardIsPrinting","clearEditDashboard","clearPrintDashboard","controlbarExpanded","setControlbarExpanded","DashboardsBar","ComponentCover","cover","ViewItemGrid","ItemSearchField","InputField","HeaderMenuItem","LaunchLink","launchLink","rel","InsertButton","buttonInsert","ContentMenuItem","onInsert","visType","ItemIcon","getItemIcon","renderedItemIcon","visTypeIcons","menuItem","marginRight","singleItems","header","categorizedItems","listItemTypes","tAddListItemContent","dashboardItemIndex","hasMore","onChangeItemsLimit","seeMore","setSeeMore","addItem","newItem","itemUrl","showMoreButton","category","addToDashboard","useDebounce","delay","debouncedValue","setDebouncedValue","handler","ItemSelector","setIsOpen","setFilter","setItems","maxOptions","setMaxOptions","Set","debouncedFilterText","maxItems","getDashboardsQQuery","res","updateMaxOptions","delete","add","inputRef","maxWidth","menu","itemType","endPointName","itemCount","getDefaultItemCount","allItems","CategorizedMenuGroup","SinglesMenuGroup","EditTitleBar","onChangeTitle","onChangeDescription","section","titleDescription","_","TextAreaField","itemSelector","acUpdateDashboardLayout","onLayoutChange","newLayout","onResizeStop","oldItem","ConfirmDeleteDialog","dashboardName","onDeleteConfirmed","onContinueEditing","destructive","saveFailedMessage","deleteAccess","updateAccess","sGetIsNewDashboard","isPrintPreviewView","clearPrintPreview","saveDashboard","onDelete","onDiscardChanges","onTranslate","acSetDashboardDisplayName","showPrintPreview","translationDlgIsOpen","setTranslationDlgIsOpen","setDashboard","confirmDeleteDlgIsOpen","setConfirmDeleteDlgIsOpen","failureAlert","critical","dboard","onConfirmDelete","onSave","newId","onPrintPreview","onTranslationsSaved","translations","dbLocale","translation","locale","property","toggleTranslationDialog","discardBtnText","editBar","controls","TranslationDialog","objectToTranslate","modelDefinition","fieldsToTranslate","onTranslationSaved","onTranslationError","NotSupportedNotice","noticeContainer","NoticeBox","PrintInfo","isLayout","layoutStyle","printSuggestions","divider","LessHorizontalIcon","PrintActionsBar","getExitPrintButton","isSmall","buttonSmall","buttonLarge","getPrintButton","print","getTransformYPx","elStyle","_elStyle$transform$sp","transformY","match","isLeapPage","n","getMultiple","factor","multiple","StaticGrid","ReactGridLayout","PrintLayoutItemGrid","updateDashboardLayout","pageBreaks","sortedPageBreaks","itemClassNames","isFirstPageBreak","hideExtraPageBreaks","sortedElements","elements","types","elementsWithBoundingRect","classList","indexOf","bottomY","getDomGridItemsSortedByYPos","querySelectorAll","pageBreakBottom","lastItemBottom","foundNonPageBreak","thisItemBottom","gridElement","firstBreak","scrollArea","getItemComponents","addPageBreaks","addDashboardItem","yPosList","pageNum","getPageBreakPositions","fromEdit","setPrintDashboard","updateDashboardItem","wrapper","editView","pageOuter","setEditDashboard","EditBar","LayoutPrintPreview","EditItemGrid","notice","setNewDashboard","notSupportedNotice","removeDashboardItem","sortedItems","spacerCount","PrintItemGrid","dashboardMap","ViewDashboard","EditDashboard","NewDashboard","PrintDashboard","PrintLayoutDashboard","_ownProps$match","_ownProps$match$param","dashboardsIsEmpty","dashboardsLoaded","routeId","selectDashboard","dashboardToSelect","preferredId","getItem","dash","sGetDashboardsSortedByStarred","getElementsByTagName","remove","setHeaderbarVisibility","AlertStack","AlertBar","onHidden","permanent","filteredDimensions","dim","dimensionType","dataDimensionType","fetchDashboards","setControlBarRows","controlBarRows","apiGetControlBarRows","setCurrentUser","setShowDescription","apiGetShowDescription","apiFetchDimensions","getFilteredDimensions","fetchDimensions","CssVariables","spacers","Router","Switch","Route","exact","Dashboard","DEFAULT_STATE_STYLE","objectClean","conversations","$merge","d2Object","keyUiLocale","authorities","newState","$splice","$unshift","idToRemove","stateItems","layoutHasChanged","newStateItems","stateItem","si","configureStore","middleware","thunk","withExtraArgument","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","createStore","reducer","applyMiddleware","addResources","arTranslations","ar_IQTranslations","ckbTranslations","csTranslations","daTranslations","enTranslations","esTranslations","frTranslations","idTranslations","kmTranslations","loTranslations","myTranslations","nbTranslations","prsTranslations","psTranslations","ptTranslations","pt_BRTranslations","ruTranslations","svTranslations","tetTranslations","tgTranslations","ukTranslations","urTranslations","uzTranslations","uz_CyrlTranslations","uz_LatnTranslations","viTranslations","zhTranslations","zh_CNTranslations","schemas","authorization","process","REACT_APP_DHIS2_AUTHORIZATION","headers","AppWrapper","ReduxProvider","store","MuiThemeProvider","theme","createMuiTheme","dhis2theme","i18nRoot","App","DOMAIN_TYPE_AGGREGATE","DOMAIN_TYPE_TRACKER","domainType","defaultItemCount","appUrl","dataStatisticsName","Date","getTime","ExtensionIcon","PersonIcon","FontDownloadIcon","EmailIcon","CropFreeIcon","param","isArray","isObject","global","Intl","DateTimeFormat","year","month","day","format","_itemTypeMap$item$typ","reportTable","chart","eventReport","eventChart","itemTypeToExternalPlugin","getPlugin","hasIntegratedPlugin","config","plugin","loadingIndicator","loadPlugin","resize"],"mappings":"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","file":"static/js/app.a0a42b78.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Filter_container__wim8v\",\"searchArea\":\"Filter_searchArea__3NG5o\",\"input\":\"Filter_input__3nbSP\",\"focused\":\"Filter_focused__E3c7W\",\"searchIcon\":\"Filter_searchIcon__2SzJD\",\"searchIconSmall\":\"Filter_searchIconSmall__2EqS1\",\"searchIconLarge\":\"Filter_searchIconLarge__UOHRT\",\"searchButton\":\"Filter_searchButton__3MTLn\",\"searchIconContainer\":\"Filter_searchIconContainer__21GtO\",\"clearButtonContainer\":\"Filter_clearButtonContainer__36uqp\",\"collapsed\":\"Filter_collapsed__3NFNh\",\"expanded\":\"Filter_expanded__HFSRS\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Content_container__DYubU\",\"newLink\":\"Content_newLink__3PXmM\",\"controlsSmall\":\"Content_controlsSmall__2YcgC\",\"controlsLarge\":\"Content_controlsLarge__3D9AJ\",\"collapsed\":\"Content_collapsed__3ozGX\",\"expanded\":\"Content_expanded__22Kcl\",\"chipsContainer\":\"Content_chipsContainer__1W0Fq\",\"controls\":\"Content_controls__1eJVS\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"ShowMoreButton_container__W_K20\",\"showMore\":\"ShowMoreButton_showMore__1Db77\",\"disabled\":\"ShowMoreButton_disabled__3KzHL\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"draghandle\":\"DragHandle_draghandle__2j24a\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"DashboardsBar_container__2T0a0\",\"content\":\"DashboardsBar_content__2eVDk\",\"expanded\":\"DashboardsBar_expanded__2srLP\",\"spacer\":\"DashboardsBar_spacer__1W4--\",\"collapsed\":\"DashboardsBar_collapsed__3f7ol\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"DashboardContainer_container__2A1Hw\",\"covered\":\"DashboardContainer_covered__QHw50\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"buttonContainer\":\"FilterSelector_buttonContainer__O_amY\",\"popover\":\"FilterSelector_popover__3TVEp\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"ViewTitleBar_container__VivO0\",\"actions\":\"ViewTitleBar_actions__2UTRz\",\"editLink\":\"ViewTitleBar_editLink__d_HzW\",\"titleBar\":\"ViewTitleBar_titleBar__eiwJS\",\"star\":\"ViewTitleBar_star__26YmT\",\"strip\":\"ViewTitleBar_strip__3xR4U\",\"title\":\"ViewTitleBar_title__2GhTR\",\"descContainer\":\"ViewTitleBar_descContainer__3rF10\",\"desc\":\"ViewTitleBar_desc__3QW6Z\",\"noDesc\":\"ViewTitleBar_noDesc__Jettc\",\"moreText\":\"ViewTitleBar_moreText__3yHR0\",\"moreButtonSmall\":\"ViewTitleBar_moreButtonSmall__1ajrf\",\"shareButton\":\"ViewTitleBar_shareButton__3yEKR\",\"moreButton\":\"ViewTitleBar_moreButton__1HduK\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"message\":\"NoVisualizationMessage_message__22IPi\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"center\":\"LoadingMask_center__KHIYy\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"FatalErrorBoundary_container__3SViR\",\"icon\":\"FatalErrorBoundary_icon__2UbeP\",\"message\":\"FatalErrorBoundary_message__3FzrY\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"deleteItemButton\":\"DeleteItemButton_deleteItemButton__3TJm9\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"warning\":\"PrintItemInfo_warning__123PK\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"line\":\"ItemFooter_line__3Ko0R\",\"scrollContainer\":\"ItemFooter_scrollContainer__tuq4P\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"Item_list__1_nkQ\",\"item\":\"Item_item__3-6QE\",\"itemicon\":\"Item_itemicon__QlouX\",\"link\":\"Item_link___3c_q\",\"deleteicon\":\"Item_deleteicon__3usrl\",\"deletebutton\":\"Item_deletebutton__1DpBW\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"titlePage\":\"Item_titlePage__18CNQ\",\"name\":\"Item_name__3nuTV\",\"description\":\"Item_description__1gFQd\",\"filterTitle\":\"Item_filterTitle__2p7TQ\",\"filterList\":\"Item_filterList__qc_G3\",\"filterListItem\":\"Item_filterListItem__sPbBY\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"FilterBadge_container__22K0B\",\"badge\":\"FilterBadge_badge__28kyj\",\"badgeSmall\":\"FilterBadge_badgeSmall__1emC-\",\"removeButton\":\"FilterBadge_removeButton__3siwT\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"bar\":\"FilterBar_bar__1Ma3p\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"ViewDashboard_container__3uNdy\",\"cover\":\"ViewDashboard_cover__2SbDj\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"HeaderMenuItem_item__313hC\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"menuItem\":\"ContentMenuItem_menuItem__vbKn3\",\"launchLink\":\"ContentMenuItem_launchLink__2Nql9\",\"label\":\"ContentMenuItem_label__ANfH1\",\"buttonInsert\":\"ContentMenuItem_buttonInsert__1joHg\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"showMoreButton\":\"CategorizedMenuGroup_showMoreButton__2RbRp\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"menu\":\"ItemSelector_menu__2VYae\",\"popover\":\"ItemSelector_popover__2aDe3\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"section\":\"EditTitleBar_section__LIaIC\",\"titleDescription\":\"EditTitleBar_titleDescription__1YsU6\",\"title\":\"EditTitleBar_title__3mUbt\",\"description\":\"EditTitleBar_description__24U5X\",\"itemSelector\":\"EditTitleBar_itemSelector__1cFEp\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"content\":\"ConfirmDeleteDialog_content__EqswE\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"editBar\":\"EditBar_editBar__1d1xM\",\"controls\":\"EditBar_controls__1t0nO\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"noticeContainer\":\"NotSupportedNotice_noticeContainer__3z9Up\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"PrintInfo_container__9gH0b\",\"title\":\"PrintInfo_title__2_VZd\",\"printSuggestions\":\"PrintInfo_printSuggestions__30tcU\",\"divider\":\"PrintInfo_divider__3wzx9\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"PrintActionsBar_container__2iQp7\",\"actions\":\"PrintActionsBar_actions__2I2I0\",\"link\":\"PrintActionsBar_link__lFUmI\",\"buttonSmall\":\"PrintActionsBar_buttonSmall__27sFq\",\"buttonLarge\":\"PrintActionsBar_buttonLarge__QcrPj\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"PrintLayoutDashboard_container__3eIY-\",\"wrapper\":\"PrintLayoutDashboard_wrapper__1WDh4\",\"editView\":\"PrintLayoutDashboard_editView__1Zk_3\",\"pageOuter\":\"PrintLayoutDashboard_pageOuter__22acI\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"EditDashboard_container__EcqEU\",\"notice\":\"EditDashboard_notice__1X7zB\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"NewDashboard_container__VsR3D\",\"notice\":\"NewDashboard_notice__cTvCt\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"PrintDashboard_container__2KgcY\",\"wrapper\":\"PrintDashboard_wrapper__1O3s_\",\"pageOuter\":\"PrintDashboard_pageOuter__fl9tw\"};","import React, { createContext, useContext, useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport debounce from 'lodash/debounce';\nexport const WindowDimensionsCtx = /*#__PURE__*/createContext(null);\n\nconst windowDims = () => ({\n  height: window.innerHeight,\n  width: window.innerWidth\n});\n\nconst WindowDimensionsProvider = ({\n  children\n}) => {\n  const [dimensions, setDimensions] = useState(windowDims());\n  useEffect(() => {\n    const handleResize = debounce(() => {\n      setDimensions(windowDims());\n    }, 100);\n    window.addEventListener('resize', handleResize);\n    return () => {\n      window.removeEventListener('resize', handleResize);\n    };\n  }, []);\n  return /*#__PURE__*/React.createElement(WindowDimensionsCtx.Provider, {\n    value: dimensions\n  }, children);\n};\n\nWindowDimensionsProvider.propTypes = {\n  children: PropTypes.node.isRequired\n};\nexport default WindowDimensionsProvider;\nexport const useWindowDimensions = () => {\n  return useContext(WindowDimensionsCtx);\n};","export const DEFAULT_SETTINGS = {\n  displayNameProperty: 'displayName',\n  keyDashboardContextMenuItemOpenInRelevantApp: true,\n  keyDashboardContextMenuItemShowInterpretationsAndDetails: true,\n  keyDashboardContextMenuItemSwitchViewType: true,\n  keyDashboardContextMenuItemViewFullscreen: true,\n  keyGatherAnalyticalObjectStatisticsInDashboardViews: false\n};\nconst SYSTEM_SETTINGS = ['keyDashboardContextMenuItemOpenInRelevantApp', 'keyDashboardContextMenuItemShowInterpretationsAndDetails', 'keyDashboardContextMenuItemSwitchViewType', 'keyDashboardContextMenuItemViewFullscreen', 'keyGatherAnalyticalObjectStatisticsInDashboardViews'];\nconst SYSTEM_SETTINGS_REMAPPINGS = {\n  keyDashboardContextMenuItemOpenInRelevantApp: 'openInRelevantApp',\n  keyDashboardContextMenuItemShowInterpretationsAndDetails: 'showInterpretationsAndDetails',\n  keyDashboardContextMenuItemSwitchViewType: 'switchViewType',\n  keyDashboardContextMenuItemViewFullscreen: 'fullscreenAllowedInSettings'\n};\nexport const renameSystemSettings = settings => {\n  return Object.keys(settings).reduce((mapped, key) => {\n    mapped[SYSTEM_SETTINGS_REMAPPINGS[key] || key] = settings[key];\n    return mapped;\n  }, {});\n};\nconst query = {\n  resource: 'systemSettings',\n  params: {\n    key: SYSTEM_SETTINGS\n  }\n};\nexport default query;","import React, { useContext, useState, useEffect, createContext } from 'react';\nimport PropTypes from 'prop-types';\nimport { useDataEngine } from '@dhis2/app-runtime';\nimport settingsQuery, { renameSystemSettings, DEFAULT_SETTINGS } from '../api/settings';\nexport const SystemSettingsCtx = /*#__PURE__*/createContext({});\n\nconst SystemSettingsProvider = ({\n  children\n}) => {\n  const [settings, setSettings] = useState([]);\n  const engine = useDataEngine();\n  useEffect(() => {\n    async function fetchData() {\n      const {\n        systemSettings\n      } = await engine.query({\n        systemSettings: settingsQuery\n      });\n      setSettings(Object.assign({}, renameSystemSettings(DEFAULT_SETTINGS), renameSystemSettings(systemSettings)));\n    }\n\n    fetchData();\n  }, []);\n  return /*#__PURE__*/React.createElement(SystemSettingsCtx.Provider, {\n    value: {\n      settings\n    }\n  }, children);\n};\n\nSystemSettingsProvider.propTypes = {\n  children: PropTypes.node\n};\nexport default SystemSettingsProvider;\nexport const useSystemSettings = () => useContext(SystemSettingsCtx);","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst StarIcon = ({\n  className\n}) => /*#__PURE__*/React.createElement(\"svg\", {\n  className: className,\n  xmlns: \"http://www.w3.org/2000/svg\",\n  viewBox: \"0 0 24 24\"\n}, /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M0 0h24v24H0z\",\n  fill: \"none\"\n}), /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M12 17.27L18.18 21l-1.64-7.03L22 9.24l-7.19-.61L12 2 9.19 8.63 2 9.24l5.46 4.73L5.82 21z\"\n}), /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M0 0h24v24H0z\",\n  fill: \"none\"\n}));\n\nStarIcon.propTypes = {\n  className: PropTypes.string\n};\nexport default StarIcon;","import { getInstance } from 'd2';\nexport const apiPostDataStatistics = async (eventType, id) => {\n  const d2 = await getInstance();\n  const url = \"dataStatistics?eventType=\".concat(eventType, \"&favorite=\").concat(id);\n  d2.Api.getApi().post(url);\n};","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Chip } from '@dhis2/ui';\nimport { Link } from 'react-router-dom';\nimport debounce from 'lodash/debounce';\nimport StarIcon from '../../../icons/Star';\nimport { apiPostDataStatistics } from '../../../api/dataStatistics';\nimport classes from './styles/DashboardItemChip.module.css';\nexport const DashboardItemChip = ({\n  starred,\n  selected,\n  label,\n  dashboardId,\n  onClick\n}) => {\n  const chipProps = {\n    selected\n  };\n\n  if (starred) {\n    const selectedState = selected ? classes.selected : classes.unselected;\n    chipProps.icon = /*#__PURE__*/React.createElement(StarIcon, {\n      className: \"\".concat(classes.icon, \" \").concat(selectedState)\n    });\n  }\n\n  const debouncedPostStatistics = debounce(() => apiPostDataStatistics('DASHBOARD_VIEW', dashboardId), 500);\n\n  const handleClick = () => {\n    debouncedPostStatistics();\n    onClick();\n  };\n\n  return /*#__PURE__*/React.createElement(Link, {\n    className: classes.link,\n    to: \"/\".concat(dashboardId),\n    onClick: handleClick,\n    \"data-test\": \"dashboard-chip\"\n  }, /*#__PURE__*/React.createElement(Chip, chipProps, label));\n};\nDashboardItemChip.propTypes = {\n  dashboardId: PropTypes.string.isRequired,\n  label: PropTypes.string.isRequired,\n  selected: PropTypes.bool.isRequired,\n  starred: PropTypes.bool.isRequired,\n  onClick: PropTypes.func.isRequired,\n  classes: PropTypes.object\n};\nexport default DashboardItemChip;","import React from 'react';\nimport { colors } from '@dhis2/ui';\n\nconst AddCircleIcon = () => /*#__PURE__*/React.createElement(\"svg\", {\n  xmlns: \"http://www.w3.org/2000/svg\",\n  width: \"32\",\n  height: \"32\",\n  fill: colors.teal600,\n  viewBox: \"0 0 24 24\"\n}, /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M12 2C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2zm4 11h-3v3c0 .55-.45 1-1 1s-1-.45-1-1v-3H8c-.55 0-1-.45-1-1s.45-1 1-1h3V8c0-.55.45-1 1-1s1 .45 1 1v3h3c.55 0 1 .45 1 1s-.45 1-1 1z\"\n}));\n\nexport default AddCircleIcon;","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst SearchIcon = ({\n  className,\n  small\n}) => small ? /*#__PURE__*/React.createElement(\"svg\", {\n  className: className,\n  height: \"16\",\n  viewBox: \"0 0 16 16\",\n  width: \"16\",\n  xmlns: \"http://www.w3.org/2000/svg\"\n}, /*#__PURE__*/React.createElement(\"path\", {\n  d: \"m6 1c2.76142375 0 5 2.23857625 5 5 0 1.20065927-.4231997 2.30247496-1.12856994 3.16441794l4.48212334 4.48202866-.7071068.7071068-4.48202866-4.48212334c-.86194298.70537024-1.96375867 1.12856994-3.16441794 1.12856994-2.76142375 0-5-2.23857625-5-5s2.23857625-5 5-5zm0 1c-2.209139 0-4 1.790861-4 4s1.790861 4 4 4 4-1.790861 4-4-1.790861-4-4-4z\",\n  fill: \"#010101\"\n})) : /*#__PURE__*/React.createElement(\"svg\", {\n  className: className,\n  xmlns: \"http://www.w3.org/2000/svg\",\n  height: \"24\",\n  viewBox: \"0 0 24 24\",\n  width: \"24\"\n}, /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M0 0h24v24H0z\",\n  fill: \"none\"\n}), /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M15.5 14h-.79l-.28-.27C15.41 12.59 16 11.11 16 9.5 16 5.91 13.09 3 9.5 3S3 5.91 3 9.5 5.91 16 9.5 16c1.61 0 3.09-.59 4.23-1.57l.27.28v.79l5 4.99L20.49 19l-4.99-5zm-6 0C7.01 14 5 11.99 5 9.5S7.01 5 9.5 5 14 7.01 14 9.5 11.99 14 9.5 14z\"\n}));\n\nSearchIcon.propTypes = {\n  className: PropTypes.string,\n  small: PropTypes.bool\n};\nexport default SearchIcon;","import React from 'react';\nimport { colors } from '@dhis2/ui';\nimport PropTypes from 'prop-types';\n\nconst ClearIcon = ({\n  className\n}) => /*#__PURE__*/React.createElement(\"svg\", {\n  className: className,\n  fill: colors.grey800,\n  xmlns: \"http://www.w3.org/2000/svg\",\n  viewBox: \"0 0 24 24\"\n}, /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M19 6.41L17.59 5 12 10.59 6.41 5 5 6.41 10.59 12 5 17.59 6.41 19 12 13.41 17.59 19 19 17.59 13.41 12z\"\n}), /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M0 0h24v24H0z\",\n  fill: \"none\"\n}));\n\nClearIcon.propTypes = {\n  className: PropTypes.string\n};\nexport default ClearIcon;","import React from 'react';\nimport PropTypes from 'prop-types';\nimport ClearIcon from '../../../icons/Clear';\nimport classes from './styles/ClearButton.module.css';\nexport const ClearButton = ({\n  onClear\n}) => /*#__PURE__*/React.createElement(\"button\", {\n  className: classes.button,\n  onClick: onClear\n}, /*#__PURE__*/React.createElement(\"span\", null, /*#__PURE__*/React.createElement(ClearIcon, {\n  className: classes.icon,\n  color: \"action\"\n})));\nClearButton.propTypes = {\n  onClear: PropTypes.func.isRequired\n};\nexport default ClearButton;","import { validateReducer } from '../modules/util';\nexport const SET_DASHBOARDS_FILTER = 'SET_DASHBOARDS_FILTER';\nexport const CLEAR_DASHBOARDS_FILTER = 'CLEAR_DASHBOARDS_FILTER';\nexport const DEFAULT_STATE_DASHBOARDS_FILTER = '';\nexport default ((state = DEFAULT_STATE_DASHBOARDS_FILTER, action) => {\n  switch (action.type) {\n    case SET_DASHBOARDS_FILTER:\n      {\n        return validateReducer(action.value, DEFAULT_STATE_DASHBOARDS_FILTER);\n      }\n\n    case CLEAR_DASHBOARDS_FILTER:\n      {\n        return DEFAULT_STATE_DASHBOARDS_FILTER;\n      }\n\n    default:\n      return state;\n  }\n}); // selectors\n\nexport const sGetDashboardsFilter = state => state.dashboardsFilter;","// Dimensions for the react-grid-layout\nimport sortBy from 'lodash/sortBy';\nimport { isVisualizationType } from './itemTypes';\nimport { isSmallScreen } from './smallScreen';\nexport const GRID_COMPACT_TYPE = 'vertical'; // vertical | horizonal | null\n\nexport const GRID_ROW_HEIGHT_PX = 10;\nexport const MARGIN_PX = [10, 10];\nconst SM_SCREEN_MIN_ITEM_GRID_HEIGHT = 13; // minimum of ~320px\n\nexport const SM_SCREEN_GRID_COLUMNS = 1;\nexport const MARGIN_SM_PX = [0, 16];\nexport const GRID_PADDING_PX = [0, 0]; // sum of left+right padding of dashboard-wrapper (App.css)\n\nexport const DASHBOARD_WRAPPER_LR_MARGIN_PX = 32; // make an assumption about the original item w/h ratio\n// assumes grid width of ~1200px at time dashboard was created\n\nconst GRID_COL_WIDTH_PX = 10;\nexport const GRID_COLUMNS = 60; // Dimensions for getShape\n\nexport const NEW_ITEM_SHAPE = {\n  x: 0,\n  y: 0,\n  w: 20,\n  h: 29\n};\nconst NUMBER_OF_ITEM_COLS = 2;\nconst MAX_ITEM_GRID_WIDTH = GRID_COLUMNS - 1;\nexport const MAX_ITEM_GRID_HEIGHT = 34;\nexport const MAX_ITEM_GRID_HEIGHT_OIPP = 35;\nexport const MAX_ITEM_GRID_WIDTH_OIPP = 56;\nconst MIN_ITEM_GRID_HEIGHT = 4; // isNonNegativeInteger\n\nconst isNonNegativeInteger = x => Number.isInteger(x) && x >= 0; // Does the item have all the shape properties?\n\n\nexport const hasShape = item => isNonNegativeInteger(item.x) && isNonNegativeInteger(item.y) && isNonNegativeInteger(item.w) && isNonNegativeInteger(item.h); // returns a rectangular grid block dimensioned with x, y, w, h in grid units.\n// based on a grid with 3 items across\n\nconst getShape = i => {\n  const col = i % NUMBER_OF_ITEM_COLS;\n  const row = Math.floor(i / NUMBER_OF_ITEM_COLS);\n  const itemWidth = Math.floor(MAX_ITEM_GRID_WIDTH / NUMBER_OF_ITEM_COLS);\n  const itemHeight = GRID_ROW_HEIGHT_PX * 2;\n  return {\n    x: col * itemWidth,\n    y: row * itemHeight,\n    w: itemWidth,\n    h: itemHeight\n  };\n};\n/**\n * Returns an array of items containing the x, y, w, h dimensions\n * and the item's originalheight in pixels\n * and dimensions to create the small layout (x, y, w, h)\n * @function\n * @param {Array} items\n * @returns {Array}\n */\n\n\nexport const withShape = (items = []) => {\n  const itemsWithShape = items.map((item, i) => hasShape(item) ? item : Object.assign({}, item, getShape(i)));\n  return itemsWithShape.map(item => Object.assign({}, item, {\n    originalH: item.h\n  }));\n};\nexport const getGridWidth = windowWidthPx => windowWidthPx - DASHBOARD_WRAPPER_LR_MARGIN_PX;\n\nconst getGridUnitsForSmFromPx = hPx => {\n  const gridUnitHeightPx = GRID_ROW_HEIGHT_PX + MARGIN_SM_PX[1];\n  return Math.round((hPx + MARGIN_SM_PX[1]) / gridUnitHeightPx);\n};\n\nexport const getProportionalHeight = (item, windowWidthPx) => {\n  // get w/h ratio of the original item\n  const wPx = getItemWHPx(item.w, GRID_COL_WIDTH_PX, MARGIN_PX[0]);\n  const hPx = getItemWHPx(item.h, GRID_ROW_HEIGHT_PX, MARGIN_PX[1]);\n  const ratioWH = wPx / hPx;\n\n  if (!isVisualizationType(item)) {\n    return getGridUnitsForSmFromPx(hPx);\n  }\n\n  const gridWidthPx = getGridWidth(windowWidthPx); // get new height in px based on the ratio\n\n  const newColWidthPx = (gridWidthPx - MARGIN_SM_PX[0] * (SM_SCREEN_GRID_COLUMNS - 1) - GRID_PADDING_PX[0] * 2) / SM_SCREEN_GRID_COLUMNS;\n  const newWPx = newColWidthPx * SM_SCREEN_GRID_COLUMNS;\n  const newHPx = Math.round(newWPx / ratioWH); //convert height in px back to grid units\n\n  const h = getGridUnitsForSmFromPx(newHPx); // item must be at least the set minimum\n\n  return h < SM_SCREEN_MIN_ITEM_GRID_HEIGHT ? SM_SCREEN_MIN_ITEM_GRID_HEIGHT : h;\n};\nexport const getSmallLayout = (items, windowWidthPx) => sortBy(items, ['y', 'x']).map((item, i) => Object.assign({}, item, {\n  x: 0,\n  y: i,\n  w: SM_SCREEN_GRID_COLUMNS,\n  h: getProportionalHeight(item, windowWidthPx)\n}));\nexport const getGridItemProperties = itemId => {\n  return {\n    i: itemId,\n    minH: MIN_ITEM_GRID_HEIGHT\n  };\n};\nexport const getPageBreakItemShape = (yPos, isStatic = true) => {\n  return {\n    x: 0,\n    y: yPos,\n    w: MAX_ITEM_GRID_WIDTH,\n    h: 5,\n    static: !!isStatic,\n    minH: 1\n  };\n};\nexport const getPrintTitlePageItemShape = isOneItemPerPage => {\n  return {\n    x: 0,\n    y: 0,\n    w: isOneItemPerPage ? MAX_ITEM_GRID_WIDTH_OIPP : MAX_ITEM_GRID_WIDTH,\n    h: MAX_ITEM_GRID_HEIGHT,\n    static: true,\n    minH: 1\n  };\n};\n/**\n * Calculates the grid item's height in pixels based\n * on the height in grid units. This calculation\n * is copied directly from react-grid-layout\n * calculateUtils.js (calcGridItemWHPx)\n *\n * Each row's px height is the sum of the GRID_ROW_HEIGHT_PX + MARGIN-Y\n * So the calculation is:\n * GRID_ROW_HEIGHT_PX * Number of rows\n * +\n * yMargin * Number of rows-1\n *\n * @param {Object} item item containing shape (x, y, w, h)\n */\n\nexport const getItemHeightPx = (item, windowWidthPx) => {\n  if (isSmallScreen(windowWidthPx)) {\n    const h = item.smallOriginalH ? item.smallOriginalH : getProportionalHeight(item, windowWidthPx);\n    return getItemWHPx(h, GRID_ROW_HEIGHT_PX, MARGIN_SM_PX[1]);\n  }\n\n  return getItemWHPx(item.originalH, GRID_ROW_HEIGHT_PX, MARGIN_PX[1]);\n};\n\nconst getItemWHPx = (gridUnits, colOrRowSize, marginPx) => Math.round(colOrRowSize * gridUnits + Math.max(0, gridUnits - 1) * marginPx);","import { DASHBOARD_WRAPPER_LR_MARGIN_PX } from './gridUtil';\nconst SMALL_SCREEN_BREAKPOINT = 480;\nexport const isSmallScreen = width => width <= SMALL_SCREEN_BREAKPOINT;\nexport const getBreakpoint = () => SMALL_SCREEN_BREAKPOINT - DASHBOARD_WRAPPER_LR_MARGIN_PX;","import React, { useState } from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport i18n from '@dhis2/d2-i18n';\nimport cx from 'classnames';\nimport SearchIcon from '../../../icons/Search';\nimport ClearButton from './ClearButton';\nimport { useWindowDimensions } from '../../WindowDimensionsProvider';\nimport { acSetDashboardsFilter, acClearDashboardsFilter } from '../../../actions/dashboardsFilter';\nimport { sGetDashboardsFilter } from '../../../reducers/dashboardsFilter';\nimport { isSmallScreen } from '../../../modules/smallScreen';\nimport classes from './styles/Filter.module.css';\nexport const KEYCODE_ENTER = 13;\nexport const KEYCODE_ESCAPE = 27;\nexport const FilterUnconnected = ({\n  clearDashboardsFilter,\n  expanded,\n  filterText,\n  setDashboardsFilter,\n  onKeypressEnter,\n  onSearchClicked\n}) => {\n  const [focusedClassName, setFocusedClassName] = useState('');\n  const [inputFocused, setInputFocus] = useState(false);\n  const {\n    width\n  } = useWindowDimensions();\n\n  const setFilterValue = event => {\n    event.preventDefault();\n    setDashboardsFilter(event.target.value);\n  };\n\n  const onKeyUp = event => {\n    switch (event.keyCode) {\n      case KEYCODE_ENTER:\n        onKeypressEnter();\n        clearDashboardsFilter();\n        break;\n\n      case KEYCODE_ESCAPE:\n        clearDashboardsFilter();\n        break;\n\n      default:\n        break;\n    }\n  };\n\n  const onFocus = event => {\n    event.preventDefault();\n    setFocusedClassName(classes.focused);\n  };\n\n  const onBlur = event => {\n    event.preventDefault();\n    setFocusedClassName('');\n  };\n\n  const onFocusInput = input => {\n    if (input && inputFocused && isSmallScreen(width)) {\n      return input.focus();\n    }\n  };\n\n  const activateSearchInput = () => {\n    onSearchClicked();\n    setInputFocus(true);\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: cx(classes.container, expanded ? classes.expanded : classes.collapsed)\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    className: classes.searchButton,\n    onClick: activateSearchInput\n  }, /*#__PURE__*/React.createElement(SearchIcon, {\n    className: classes.searchIcon\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: cx(classes.searchArea, \"\".concat(focusedClassName)),\n    onFocus: onFocus,\n    onBlur: onBlur\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.searchIconContainer\n  }, /*#__PURE__*/React.createElement(SearchIcon, {\n    className: classes.searchIconSmall,\n    small: true\n  }), /*#__PURE__*/React.createElement(SearchIcon, {\n    className: classes.searchIconLarge\n  })), /*#__PURE__*/React.createElement(\"input\", {\n    className: classes.input,\n    type: \"text\",\n    placeholder: i18n.t('Search for a dashboard'),\n    onChange: setFilterValue,\n    onKeyUp: onKeyUp,\n    value: filterText,\n    \"data-test\": \"search-dashboard-input\",\n    ref: onFocusInput\n  }), filterText && /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.clearButtonContainer\n  }, /*#__PURE__*/React.createElement(ClearButton, {\n    onClear: clearDashboardsFilter\n  }))));\n};\nFilterUnconnected.propTypes = {\n  clearDashboardsFilter: PropTypes.func,\n  expanded: PropTypes.bool,\n  filterText: PropTypes.string,\n  setDashboardsFilter: PropTypes.func,\n  onKeypressEnter: PropTypes.func,\n  onSearchClicked: PropTypes.func\n};\n\nconst mapStateToProps = state => ({\n  filterText: sGetDashboardsFilter(state)\n});\n\nconst mapDispatchToProps = {\n  setDashboardsFilter: acSetDashboardsFilter,\n  clearDashboardsFilter: acClearDashboardsFilter\n};\nexport default connect(mapStateToProps, mapDispatchToProps)(FilterUnconnected);","import { SET_DASHBOARDS_FILTER, CLEAR_DASHBOARDS_FILTER } from '../reducers/dashboardsFilter'; // actions\n\nexport const acSetDashboardsFilter = value => ({\n  type: SET_DASHBOARDS_FILTER,\n  value\n});\nexport const acClearDashboardsFilter = () => ({\n  type: CLEAR_DASHBOARDS_FILTER\n});","import { TEXT, SPACER } from './itemTypes';\nimport { getGridItemProperties } from './gridUtil';\nexport const spacerContent = 'SPACER_ITEM_FOR_DASHBOARD_LAYOUT_CONVENIENCE';\nexport const emptyTextItemContent = 'TEXT_ITEM_WITH_NO_CONTENT';\n\nconst isBackendSpacerType = item => item.type === TEXT && item.text === spacerContent;\n\nconst isUiSpacerType = item => item.type === SPACER;\n\nconst isTextType = item => item.type === TEXT && item.text !== spacerContent;\n\nexport const convertUiItemsToBackend = items => items.map(item => {\n  let text = null;\n\n  if (isUiSpacerType(item)) {\n    text = spacerContent;\n  } else if (isTextType(item)) {\n    text = item.text || emptyTextItemContent;\n  }\n\n  return { ...item,\n    ...(text ? {\n      text\n    } : {})\n  };\n});\nexport const convertBackendItemsToUi = items => items.map(item => {\n  const type = isBackendSpacerType(item) ? SPACER : item.type;\n  const gridProperties = getGridItemProperties(item.id);\n  const text = isTextType(item) ? item.text === emptyTextItemContent ? '' : item.text : null;\n  return { ...item,\n    ...(text !== null ? {\n      text\n    } : {}),\n    type,\n    ...gridProperties\n  };\n});","/** @module reducers/dashboards */\nimport arrayFrom from 'd2-utilizr/lib/arrayFrom';\nimport arraySort from 'd2-utilizr/lib/arraySort';\nimport { orArray, orObject } from '../modules/util';\nimport { convertBackendItemsToUi } from '../modules/uiBackendItemConverter';\nexport const SET_DASHBOARDS = 'SET_DASHBOARDS';\nexport const ADD_DASHBOARDS = 'ADD_DASHBOARDS';\nexport const SET_DASHBOARD_STARRED = 'SET_DASHBOARD_STARRED';\nexport const SET_DASHBOARD_DISPLAY_NAME = 'SET_DASHBOARD_DISPLAY_NAME';\nexport const SET_DASHBOARD_ITEMS = 'SET_DASHBOARD_ITEMS';\nexport const DEFAULT_STATE_DASHBOARDS = {\n  byId: null,\n  items: []\n};\nexport const EMPTY_DASHBOARD = {}; // reducer helper functions\n\nconst updateDashboardProp = ({\n  state,\n  dashboardId,\n  prop,\n  value\n}) => ({\n  byId: { ...state.byId,\n    [dashboardId]: { ...state.byId[dashboardId],\n      [prop]: value\n    }\n  },\n  items: state.items\n});\n/**\n * Reducer that computes and returns the new state based on the given action\n * @function\n * @param {Object} state The current state\n * @param {Object} action The action to be evaluated\n * @returns {Object}\n */\n\n\nexport default ((state = DEFAULT_STATE_DASHBOARDS, action) => {\n  switch (action.type) {\n    case SET_DASHBOARDS:\n      {\n        return {\n          byId: action.value,\n          items: []\n        };\n      }\n\n    case ADD_DASHBOARDS:\n      {\n        return { ...state,\n          byId: { ...state.byId,\n            ...action.value\n          }\n        };\n      }\n\n    case SET_DASHBOARD_STARRED:\n      {\n        return updateDashboardProp({\n          state,\n          dashboardId: action.dashboardId,\n          prop: 'starred',\n          value: action.value\n        });\n      }\n\n    case SET_DASHBOARD_DISPLAY_NAME:\n      {\n        return updateDashboardProp({\n          state,\n          dashboardId: action.dashboardId,\n          prop: 'displayName',\n          value: action.value\n        });\n      }\n\n    case SET_DASHBOARD_ITEMS:\n      {\n        return { ...state,\n          items: action.value\n        };\n      }\n\n    default:\n      return state;\n  }\n}); // root selector\n\nexport const sGetDashboardsRoot = state => state.dashboards; // selector level 1\n\n/**\n * Selector which returns a dashboard by id from the state object\n * If no matching dashboard is found it returns undefined\n * If dashboards.byId is null, then the dashboards api request\n * has not yet completed. If dashboards.byId is an empty object\n * then the dashboards api request is complete, but no dashboards\n * were returned\n *\n * @function\n * @param {Object} state The current state\n * @param {Number} id The id of the dashboard\n * @returns {Object | undefined}\n */\n\nexport const sGetDashboardById = (state, id) => orObject(sGetDashboardsRoot(state).byId)[id];\nexport const sDashboardsIsFetching = state => {\n  return sGetDashboardsRoot(state).byId === null;\n};\n/**\n * Selector which returns all dashboards (the byId object)\n *\n * @function\n * @param {Object} state The current state\n * @returns {Object | undefined}\n */\n\nexport const sGetAllDashboards = state => orObject(sGetDashboardsRoot(state).byId);\n/**\n * Selector which returns the current dashboard items\n *\n * @function\n * @param {Object} state The current state\n * @returns {Array}\n */\n\nexport const sGetDashboardItems = state => sGetDashboardsRoot(state).items; // selector level 2\n\nexport const sGetStarredDashboards = state => Object.values(sGetAllDashboards(state)).filter(dashboard => dashboard.starred === true);\nexport const sGetUnstarredDashboards = state => Object.values(sGetAllDashboards(state)).filter(dashboard => dashboard.starred === false); // selector level 3\n\nexport const sGetStarredDashboardIds = state => {\n  return sGetStarredDashboards(state).map(dashboard => dashboard.id);\n};\nexport const sGetUnstarredDashboardIds = state => sGetUnstarredDashboards(state).map(dashboard => dashboard.id);\nexport const sGetDashboardsSortedByStarred = state => [...arraySort(sGetStarredDashboards(state), 'ASC', 'displayName'), ...arraySort(sGetUnstarredDashboards(state), 'ASC', 'displayName')]; // utils\n\n/**\n * Returns the array of dashboards, customized for ui\n * @function\n * @param {Array} data The original dashboard list\n * @returns {Array}\n */\n\nexport const getCustomDashboards = data => arrayFrom(data).map(d => ({\n  id: d.id,\n  name: d.name,\n  displayName: d.displayName,\n  description: d.description,\n  displayDescription: d.displayDescription,\n  starred: d.favorite,\n  owner: d.user.name,\n  created: d.created.split('T').join(' ').substr(0, 16),\n  lastUpdated: d.lastUpdated.split('T').join(' ').substr(0, 16),\n  access: d.access,\n  numberOfItems: orArray(d.dashboardItems).length,\n  dashboardItems: convertBackendItemsToUi(d.dashboardItems)\n}));","/** @module reducers/selected */\nimport { combineReducers } from 'redux';\nimport { validateReducer } from '../modules/util';\nexport const SET_SELECTED_ID = 'SET_SELECTED_ID';\nexport const SET_SELECTED_ISLOADING = 'SET_SELECTED_ISLOADING';\nexport const SET_SELECTED_SHOWDESCRIPTION = 'SET_SELECTED_SHOWDESCRIPTION';\nexport const SET_SELECTED_ITEM_ACTIVE_TYPE = 'SET_SELECTED_ITEM_ACTIVE_TYPE';\nexport const CLEAR_SELECTED_ITEM_ACTIVE_TYPES = 'CLEAR_SELECTED_ITEM_ACTIVE_TYPES';\nexport const DEFAULT_STATE_SELECTED_ID = null;\nexport const DEFAULT_STATE_SELECTED_ISLOADING = false;\nexport const DEFAULT_STATE_SELECTED_SHOWDESCRIPTION = false;\nexport const DEFAULT_STATE_SELECTED_ITEM_ACTIVE_TYPES = {};\nexport const NON_EXISTING_DASHBOARD_ID = '0';\n\nconst id = (state = DEFAULT_STATE_SELECTED_ID, action) => {\n  switch (action.type) {\n    case SET_SELECTED_ID:\n      return validateReducer(action.value, DEFAULT_STATE_SELECTED_ID);\n\n    default:\n      return state;\n  }\n};\n\nconst isLoading = (state = DEFAULT_STATE_SELECTED_ISLOADING, action) => {\n  switch (action.type) {\n    case SET_SELECTED_ISLOADING:\n      return validateReducer(action.value, DEFAULT_STATE_SELECTED_ISLOADING);\n\n    default:\n      return state;\n  }\n};\n\nconst showDescription = (state = DEFAULT_STATE_SELECTED_SHOWDESCRIPTION, action) => {\n  switch (action.type) {\n    case SET_SELECTED_SHOWDESCRIPTION:\n      return validateReducer(action.value, DEFAULT_STATE_SELECTED_SHOWDESCRIPTION);\n\n    default:\n      return state;\n  }\n};\n\nconst itemActiveTypes = (state = DEFAULT_STATE_SELECTED_ITEM_ACTIVE_TYPES, action) => {\n  switch (action.type) {\n    case SET_SELECTED_ITEM_ACTIVE_TYPE:\n      {\n        return { ...state,\n          [action.id]: action.activeType\n        };\n      }\n\n    case CLEAR_SELECTED_ITEM_ACTIVE_TYPES:\n      {\n        return DEFAULT_STATE_SELECTED_ITEM_ACTIVE_TYPES;\n      }\n\n    default:\n      return state;\n  }\n};\n\nexport default combineReducers({\n  id,\n  isLoading,\n  showDescription,\n  itemActiveTypes\n}); // Selectors\n\nexport const sGetSelectedRoot = state => state.selected;\nexport const sGetSelectedId = state => sGetSelectedRoot(state).id;\nexport const sGetSelectedIsLoading = state => sGetSelectedRoot(state).isLoading;\nexport const sGetSelectedShowDescription = state => sGetSelectedRoot(state).showDescription;\nexport const sGetSelectedItemActiveType = (state, id) => sGetSelectedRoot(state).itemActiveTypes[id];","import arraySort from 'd2-utilizr/lib/arraySort';\nexport const getFilteredDashboards = (dashboards, filterText) => {\n  const filteredDashboards = arraySort(Object.values(dashboards).filter(d => d.displayName.toLowerCase().includes(filterText.toLowerCase())), 'ASC', 'displayName');\n  return [...filteredDashboards.filter(d => d.starred), ...filteredDashboards.filter(d => !d.starred)];\n};","import React from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport cx from 'classnames';\nimport { Link, withRouter } from 'react-router-dom';\nimport Chip from './DashboardItemChip';\nimport AddCircleIcon from '../../../icons/AddCircle';\nimport Filter from './Filter';\nimport { sGetAllDashboards } from '../../../reducers/dashboards';\nimport { sGetDashboardsFilter } from '../../../reducers/dashboardsFilter';\nimport { sGetSelectedId } from '../../../reducers/selected';\nimport { getFilteredDashboards } from '../../../modules/getFilteredDashboards';\nimport classes from './styles/Content.module.css';\n\nconst Content = ({\n  dashboards,\n  expanded,\n  filterText,\n  history,\n  selectedId,\n  onChipClicked,\n  onSearchClicked\n}) => {\n  const onSelectDashboard = () => {\n    var _getFilteredDashboard;\n\n    const id = (_getFilteredDashboard = getFilteredDashboards(dashboards, filterText)[0]) === null || _getFilteredDashboard === void 0 ? void 0 : _getFilteredDashboard.id;\n\n    if (id) {\n      history.push(id);\n    }\n  };\n\n  const getChips = () => getFilteredDashboards(dashboards, filterText).map(dashboard => /*#__PURE__*/React.createElement(Chip, {\n    key: dashboard.id,\n    label: dashboard.displayName,\n    starred: dashboard.starred,\n    dashboardId: dashboard.id,\n    selected: dashboard.id === selectedId,\n    onClick: onChipClicked\n  }));\n\n  const getControlsSmall = () => /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.controlsSmall\n  }, /*#__PURE__*/React.createElement(Filter, {\n    onKeypressEnter: onSelectDashboard,\n    onSearchClicked: onSearchClicked,\n    expanded: expanded\n  }));\n\n  const getControlsLarge = () => /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.controlsLarge\n  }, /*#__PURE__*/React.createElement(Link, {\n    className: classes.newLink,\n    to: '/new',\n    \"data-test\": \"link-new-dashboard\"\n  }, /*#__PURE__*/React.createElement(AddCircleIcon, null)), /*#__PURE__*/React.createElement(Filter, {\n    onKeypressEnter: onSelectDashboard,\n    onSearchClicked: onSearchClicked,\n    expanded: expanded\n  }));\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: cx(classes.container, expanded ? classes.expanded : classes.collapsed)\n  }, getControlsSmall(), /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.chipsContainer\n  }, getControlsLarge(), getChips()));\n};\n\nContent.propTypes = {\n  dashboards: PropTypes.object,\n  expanded: PropTypes.bool,\n  filterText: PropTypes.string,\n  history: PropTypes.object,\n  selectedId: PropTypes.string,\n  onChipClicked: PropTypes.func,\n  onSearchClicked: PropTypes.func\n};\n\nconst mapStateToProps = state => ({\n  dashboards: sGetAllDashboards(state),\n  selectedId: sGetSelectedId(state),\n  filterText: sGetDashboardsFilter(state)\n});\n\nexport default withRouter(connect(mapStateToProps)(Content));","import React from 'react';\nexport const ChevronDown = () => /*#__PURE__*/React.createElement(\"svg\", {\n  height: \"24\",\n  viewBox: \"0 0 24 24\",\n  width: \"24\",\n  xmlns: \"http://www.w3.org/2000/svg\"\n}, /*#__PURE__*/React.createElement(\"path\", {\n  d: \"m11.29289 15.7071c.39053.3905 1.02369.3905 1.41422 0l4.99999-4.99999c.3905-.39053.3905-1.02369 0-1.41422-.3905-.39052-1.0237-.39052-1.4142 0l-4.2929 4.2929-4.29289-4.2929c-.39053-.39052-1.02369-.39052-1.41422 0-.39052.39053-.39052 1.02369 0 1.41422z\",\n  fill: \"#a0adba\"\n}));\nexport const ChevronUp = () => /*#__PURE__*/React.createElement(\"svg\", {\n  height: \"24\",\n  viewBox: \"0 0 24 24\",\n  width: \"24\",\n  xmlns: \"http://www.w3.org/2000/svg\"\n}, /*#__PURE__*/React.createElement(\"path\", {\n  d: \"m11.2928932 8.29289322c.360484-.36048396.927715-.3882135 1.3200062-.08318861l.0942074.08318861 5 4.99999998c.3905243.3905243.3905243 1.0236893 0 1.4142136-.360484.3604839-.927715.3882135-1.3200062.0831886l-.0942074-.0831886-4.2928932-4.2921068-4.29289322 4.2921068c-.36048396.3604839-.92771502.3882135-1.32000622.0831886l-.09420734-.0831886c-.36048396-.360484-.3882135-.927715-.08318861-1.3200062l.08318861-.0942074z\",\n  fill: \"#a0adba\"\n}));","import React, { useRef } from 'react';\nimport PropTypes from 'prop-types';\nimport i18n from '@dhis2/d2-i18n';\nimport { Tooltip } from '@dhis2/ui';\nimport { ChevronDown, ChevronUp } from './assets/icons';\nimport classes from './styles/ShowMoreButton.module.css';\n\nconst ShowMoreButton = ({\n  onClick,\n  dashboardBarIsExpanded,\n  disabled\n}) => {\n  const containerRef = useRef(null);\n  const buttonLabel = dashboardBarIsExpanded ? i18n.t('Show fewer dashboards') : i18n.t('Show more dashboards');\n\n  const onButtonClicked = () => {\n    // The click may happen on the svg or path\n    // element of the button icon.\n    // In that case it is necessary to trigger\n    // the mouseout on the button element\n    // to ensure that the tooltip is removed\n    const buttonEl = containerRef.current.children[0];\n    const event = new MouseEvent('mouseout', {\n      bubbles: true,\n      cancelable: false\n    });\n    onClick();\n    buttonEl.dispatchEvent(event);\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.container,\n    ref: containerRef\n  }, disabled ? /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.disabled\n  }, /*#__PURE__*/React.createElement(ChevronDown, null)) : /*#__PURE__*/React.createElement(Tooltip, {\n    content: buttonLabel,\n    placement: \"bottom\"\n  }, ({\n    onMouseOver,\n    onMouseOut,\n    ref\n  }) => /*#__PURE__*/React.createElement(\"button\", {\n    className: classes.showMore,\n    onClick: onButtonClicked,\n    \"data-test\": \"showmore-button\",\n    \"aria-label\": buttonLabel,\n    ref: ref,\n    onMouseOver: onMouseOver,\n    onMouseOut: onMouseOut\n  }, dashboardBarIsExpanded ? /*#__PURE__*/React.createElement(ChevronUp, null) : /*#__PURE__*/React.createElement(ChevronDown, null))));\n};\n\nShowMoreButton.propTypes = {\n  dashboardBarIsExpanded: PropTypes.bool,\n  disabled: PropTypes.bool,\n  onClick: PropTypes.func\n};\nexport default ShowMoreButton;","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport classes from './styles/DragHandle.module.css';\n\nconst DragHandle = ({\n  onHeightChanged,\n  setDragging\n}) => {\n  const [startingY, setStartingY] = useState(0);\n\n  const onStartDrag = e => {\n    setStartingY(e.clientY);\n    setDragging(true);\n    window.addEventListener('mousemove', onDrag);\n    window.addEventListener('mouseup', onEndDrag);\n  };\n\n  const onDrag = e => {\n    e.preventDefault();\n    e.stopPropagation();\n    const currentY = e.clientY;\n\n    if (currentY !== startingY && currentY > 0) {\n      requestAnimationFrame(() => {\n        onHeightChanged(currentY);\n      });\n    }\n  };\n\n  const onEndDrag = () => {\n    setDragging(false);\n    window.removeEventListener('mousemove', onDrag);\n    window.removeEventListener('mouseup', onEndDrag);\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.draghandle,\n    onMouseDown: onStartDrag,\n    \"data-test\": \"controlbar-drag-handle\"\n  });\n};\n\nDragHandle.propTypes = {\n  setDragging: PropTypes.func,\n  onHeightChanged: PropTypes.func\n};\nexport default DragHandle;","const ROW_HEIGHT = 40;\nconst PADDING_TOP = 10;\nconst SHOWMORE_BUTTON_HEIGHT = 21; // 27px - 6px below bottom edge of ctrlbar\n\nexport const getRowsFromHeight = height => {\n  return Math.floor((height - SHOWMORE_BUTTON_HEIGHT - PADDING_TOP) / ROW_HEIGHT);\n};","/** @module reducers/controlBar */\nimport { combineReducers } from 'redux';\nimport { validateReducer } from '../modules/util';\nexport const SET_CONTROLBAR_USER_ROWS = 'SET_CONTROLBAR_USER_ROWS';\nexport const DEFAULT_STATE_CONTROLBAR_ROWS = 1;\n\nconst userRows = (state = DEFAULT_STATE_CONTROLBAR_ROWS, action) => {\n  switch (action.type) {\n    case SET_CONTROLBAR_USER_ROWS:\n      return validateReducer(action.value, DEFAULT_STATE_CONTROLBAR_ROWS);\n\n    default:\n      return state;\n  }\n};\n\nexport default combineReducers({\n  userRows\n});\n/**\n * Selectors that point to specific props in the state object\n * @function\n * @param {Object} state\n * @returns {Object}\n */\n\nconst sGetControlBarRoot = state => state.controlBar; // Selector dependency level 2\n\n\nexport const sGetControlBarUserRows = state => sGetControlBarRoot(state).userRows;","import { getInstance } from 'd2';\nexport const NAMESPACE = 'dashboard';\nexport const hasNamespace = async (d2) => await d2.currentUser.dataStore.has(NAMESPACE);\nexport const getNamespace = async (d2, hasNamespace) => hasNamespace ? await d2.currentUser.dataStore.get(NAMESPACE) : await d2.currentUser.dataStore.create(NAMESPACE);\nexport const apiPostUserDataStoreValue = async (key, value) => {\n  const d2 = await getInstance();\n  const ns = await getNamespace(d2, hasNamespace);\n  return ns.set(key, value);\n};\nexport const apiGetUserDataStoreValue = async (key, defaultValue) => {\n  var _namespace$keys;\n\n  const d2 = await getInstance();\n  const namespace = await getNamespace(d2, await hasNamespace(d2));\n  const hasKey = namespace === null || namespace === void 0 ? void 0 : (_namespace$keys = namespace.keys) === null || _namespace$keys === void 0 ? void 0 : _namespace$keys.find(k => k === key);\n\n  if (hasKey) {\n    return await namespace.get(key);\n  } else {\n    await apiPostUserDataStoreValue(key, defaultValue, namespace);\n    console.log('(These errors to /userDataStore can be ignored)');\n    return defaultValue;\n  }\n};","import { apiGetUserDataStoreValue, apiPostUserDataStoreValue } from './userDataStore';\nimport { DEFAULT_STATE_CONTROLBAR_ROWS } from '../reducers/controlBar';\nconst KEY_CONTROLBAR_ROWS = 'controlBarRows';\nexport const apiGetControlBarRows = async () => await apiGetUserDataStoreValue(KEY_CONTROLBAR_ROWS, DEFAULT_STATE_CONTROLBAR_ROWS);\nexport const apiPostControlBarRows = async (value) => await apiPostUserDataStoreValue(KEY_CONTROLBAR_ROWS, value);","import { SET_CONTROLBAR_USER_ROWS } from '../reducers/controlBar';\nimport { apiGetControlBarRows } from '../api/controlBar'; // actions\n\nexport const acSetControlBarUserRows = rows => ({\n  type: SET_CONTROLBAR_USER_ROWS,\n  value: rows\n}); // thunks\n\nexport const tSetControlBarRows = () => async dispatch => {\n  const onSuccess = rows => {\n    dispatch(acSetControlBarUserRows(rows));\n  };\n\n  const onError = error => {\n    console.log('Error (apiGetControlBarRows): ', error);\n    return error;\n  };\n\n  try {\n    const controlBarRows = await apiGetControlBarRows();\n    return onSuccess(controlBarRows);\n  } catch (err) {\n    return onError(err);\n  }\n};","import React, { useState, useRef, useEffect, createRef } from 'react';\nimport { connect } from 'react-redux';\nimport cx from 'classnames';\nimport PropTypes from 'prop-types';\nimport Content from './Content';\nimport ShowMoreButton from './ShowMoreButton';\nimport DragHandle from './DragHandle';\nimport { getRowsFromHeight } from './controlBarDimensions';\nimport { sGetControlBarUserRows } from '../../../reducers/controlBar';\nimport { acSetControlBarUserRows } from '../../../actions/controlBar';\nimport { apiPostControlBarRows } from '../../../api/controlBar';\nimport classes from './styles/DashboardsBar.module.css';\nexport const MIN_ROW_COUNT = 1;\nexport const MAX_ROW_COUNT = 10;\n\nconst DashboardsBar = ({\n  userRows,\n  updateUserRows,\n  expanded,\n  onExpandedChanged\n}) => {\n  const [dragging, setDragging] = useState(false);\n  const userRowsChanged = useRef(false);\n  const ref = /*#__PURE__*/createRef();\n  const rootElement = document.documentElement;\n\n  const adjustRows = newHeight => {\n    const newRows = Math.max(MIN_ROW_COUNT, getRowsFromHeight(newHeight - 52) // don't rush the transition to a bigger row count\n    );\n\n    if (newRows !== userRows) {\n      updateUserRows(Math.min(newRows, MAX_ROW_COUNT));\n      userRowsChanged.current = true;\n    }\n  };\n\n  useEffect(() => {\n    rootElement.style.setProperty('--user-rows-count', userRows);\n  }, [userRows]);\n  useEffect(() => {\n    if (!dragging && userRowsChanged.current) {\n      apiPostControlBarRows(userRows);\n      userRowsChanged.current = false;\n    }\n  }, [dragging, userRowsChanged.current]);\n\n  const scrollToTop = () => {\n    if (expanded) {\n      ref.current.scroll(0, 0);\n    }\n  };\n\n  const toggleExpanded = () => {\n    if (expanded) {\n      cancelExpanded();\n    } else {\n      scrollToTop();\n      onExpandedChanged(!expanded);\n    }\n  };\n\n  const cancelExpanded = () => {\n    scrollToTop();\n    onExpandedChanged(false);\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: expanded ? classes.expanded : classes.collapsed,\n    \"data-test\": \"dashboards-bar\"\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: cx(classes.container)\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.content,\n    ref: ref\n  }, /*#__PURE__*/React.createElement(Content, {\n    onChipClicked: cancelExpanded,\n    onSearchClicked: toggleExpanded,\n    expanded: expanded\n  })), /*#__PURE__*/React.createElement(ShowMoreButton, {\n    onClick: toggleExpanded,\n    dashboardBarIsExpanded: expanded,\n    disabled: !expanded && userRows === MAX_ROW_COUNT\n  }), /*#__PURE__*/React.createElement(DragHandle, {\n    setDragging: setDragging,\n    onHeightChanged: adjustRows\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: cx(classes.spacer)\n  }));\n};\n\nDashboardsBar.propTypes = {\n  expanded: PropTypes.bool,\n  updateUserRows: PropTypes.func,\n  userRows: PropTypes.number,\n  onExpandedChanged: PropTypes.func\n};\n\nconst mapStateToProps = state => ({\n  userRows: sGetControlBarUserRows(state)\n});\n\nconst mapDispatchToProps = {\n  updateUserRows: acSetControlBarUserRows\n};\nexport default connect(mapStateToProps, mapDispatchToProps)(DashboardsBar);","import React from 'react';\nimport { colors } from '@dhis2/ui';\nimport PropTypes from 'prop-types';\n\nconst NoContentMessage = ({\n  text\n}) => /*#__PURE__*/React.createElement(\"div\", {\n  style: {\n    padding: '50px 10px',\n    textAlign: 'center',\n    fontSize: '15px',\n    fontWeight: 500,\n    color: colors.grey600\n  }\n}, text);\n\nNoContentMessage.propTypes = {\n  text: PropTypes.string\n};\nexport default NoContentMessage;","import React from 'react';\nimport PropTypes from 'prop-types';\nimport cx from 'classnames';\nimport classes from './styles/DashboardContainer.module.css';\n\nconst DashboardContainer = ({\n  children,\n  covered\n}) => {\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: cx(classes.container, 'dashboard-scroll-container', covered && classes.covered)\n  }, children);\n};\n\nDashboardContainer.propTypes = {\n  children: PropTypes.node,\n  covered: PropTypes.bool\n};\nexport default DashboardContainer;","import React from 'react';\nimport { colors } from '@dhis2/ui';\nexport const ThreeDots = () => /*#__PURE__*/React.createElement(\"svg\", {\n  height: \"18\",\n  viewBox: \"0 0 18 18\",\n  width: \"18\",\n  xmlns: \"http://www.w3.org/2000/svg\"\n}, /*#__PURE__*/React.createElement(\"path\", {\n  d: \"m4 7.5c-.83 0-1.5.67-1.5 1.5s.67 1.5 1.5 1.5 1.5-.67 1.5-1.5-.67-1.5-1.5-1.5zm10 0c-.83 0-1.5.67-1.5 1.5s.67 1.5 1.5 1.5 1.5-.67 1.5-1.5-.67-1.5-1.5-1.5zm-5 0c-.83 0-1.5.67-1.5 1.5s.67 1.5 1.5 1.5 1.5-.67 1.5-1.5-.67-1.5-1.5-1.5z\",\n  fill: \"#6e7a8a\"\n}));\nexport const SpeechBubble = () => /*#__PURE__*/React.createElement(\"svg\", {\n  height: \"20\",\n  viewBox: \"0 0 20 20\",\n  width: \"20\",\n  xmlns: \"http://www.w3.org/2000/svg\",\n  style: {\n    margin: '3px 2px 0 2px'\n  } // Temporary fix for the misaligned icon, should be removed once the icon is replaced\n\n}, /*#__PURE__*/React.createElement(\"path\", {\n  d: \"m20 2h-16c-1.1 0-1.99.9-1.99 2l-.01 18 4-4h14c1.1 0 2-.9 2-2v-12c0-1.1-.9-2-2-2zm-2 12h-12v-2h12zm0-3h-12v-2h12zm0-3h-12v-2h12z\",\n  fill: \"#6e7a8a\",\n  fillRule: \"evenodd\",\n  transform: \"translate(-2 -2)\"\n}));\nexport const Warning = () => /*#__PURE__*/React.createElement(\"svg\", {\n  xmlns: \"http://www.w3.org/2000/svg\",\n  height: \"24\",\n  viewBox: \"0 0 24 24\",\n  width: \"24\",\n  fill: colors.grey600\n}, /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M0 0h24v24H0z\",\n  fill: \"none\"\n}), /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M1 21h22L12 2 1 21zm12-3h-2v-2h2v2zm0-4h-2v-4h2v4z\"\n}));\nexport const Fullscreen = () => /*#__PURE__*/React.createElement(\"svg\", {\n  height: \"16\",\n  viewBox: \"0 0 16 16\",\n  width: \"16\",\n  xmlns: \"http://www.w3.org/2000/svg\"\n}, /*#__PURE__*/React.createElement(\"path\", {\n  d: \"m6.85355339 9.14644661c.17356635.17356635.1928515.44299075.05785545.63785889l-.05785545.06924789-4.14755339 4.14644661h2.794c.24545989 0 .44960837.1768752.49194433.4101244l.00805567.0898756c0 .2454599-.17687516.4496084-.41012437.4919443l-.08987563.0080557h-4c-.24545989 0-.44960837-.1768752-.49194433-.4101244l-.00805567-.0898756v-4c0-.2761424.22385763-.5.5-.5.24545989 0 .44960837.1768752.49194433.4101244l.00805567.0898756v2.792l4.14644661-4.14555339c.19526215-.19526215.51184463-.19526215.70710678 0zm6.14644661-2.14644661v6h-6v-1h5v-5zm-4-4v1h-5v5h-1v-6zm5.5-2c.2454599 0 .4496084.17687516.4919443.41012437l.0080557.08987563v4c0 .27614237-.2238576.5-.5.5-.2454599 0-.4496084-.17687516-.4919443-.41012437l-.0080557-.08987563v-2.794l-4.14644661 4.14755339c-.19526215.19526215-.51184463.19526215-.70710678 0-.17356635-.17356635-.1928515-.44299075-.05785545-.63785889l.05785545-.06924789 4.14655339-4.14744661-2.793.001c-.2454599 0-.4496084-.17687516-.4919443-.41012437l-.0080557-.08987563c0-.24545989.1768752-.44960837.4101244-.49194433l.0898756-.00805567z\",\n  fill: \"inherit\"\n}));\nexport const ExitFullscreen = () => /*#__PURE__*/React.createElement(\"svg\", {\n  height: \"16\",\n  viewBox: \"0 0 16 16\",\n  width: \"16\",\n  xmlns: \"http://www.w3.org/2000/svg\"\n}, /*#__PURE__*/React.createElement(\"path\", {\n  d: \"m6.5 9c.24545989 0 .44960837.17687516.49194433.41012437l.00805567.08987563v4c0 .2761424-.22385763.5-.5.5-.24545989 0-.44960837-.1768752-.49194433-.4101244l-.00805567-.0898756v-2.794l-3.64644661 3.6475534c-.19526215.1952621-.51184463.1952621-.70710678 0-.17356635-.1735664-.1928515-.4429908-.05785545-.6378589l.05785545-.0692479 3.64555339-3.6464466h-2.792c-.24545989 0-.44960837-.17687516-.49194433-.41012437l-.00805567-.08987563c0-.24545989.17687516-.44960837.41012437-.49194433l.08987563-.00805567zm7.5-.5v5.5h-5.5v-1h4.5v-4.5zm-6.5-6.5v1h-4.5v4.5h-1v-5.5zm6.8535534-.35355339c.1735663.17356635.1928515.44299075.0578554.63785889l-.0578554.06924789-3.6475534 3.64644661h2.794c.2454599 0 .4496084.17687516.4919443.41012437l.0080557.08987563c0 .24545989-.1768752.44960837-.4101244.49194433l-.0898756.00805567h-4c-.24545989 0-.44960837-.17687516-.49194433-.41012437l-.00805567-.08987563v-4c0-.27614237.22385763-.5.5-.5.24545989 0 .44960837.17687516.49194433.41012437l.00805567.08987563v2.792l3.6464466-3.64555339c.1952622-.19526215.5118446-.19526215.7071068 0z\",\n  fill: \"inherit\"\n}));","import { apiGetUserDataStoreValue, apiPostUserDataStoreValue } from './userDataStore';\nimport { DEFAULT_STATE_SELECTED_SHOWDESCRIPTION } from '../reducers/selected';\nconst KEY_SHOW_DESCRIPTION = 'showDescription';\nexport const apiGetShowDescription = async () => await apiGetUserDataStoreValue(KEY_SHOW_DESCRIPTION, DEFAULT_STATE_SELECTED_SHOWDESCRIPTION);\nexport const apiPostShowDescription = value => apiPostUserDataStoreValue(KEY_SHOW_DESCRIPTION, value);","export const RECEIVED_USER = 'RECEIVED_USER';\nexport const DEFAULT_STATE_USER = {\n  id: '',\n  username: '',\n  uiLocale: '',\n  isSuperuser: false\n};\nexport default ((state = DEFAULT_STATE_USER, action) => {\n  switch (action.type) {\n    case RECEIVED_USER:\n      {\n        return fromD2ToUserObj(action.value);\n      }\n\n    default:\n      return state;\n  }\n});\n\nfunction fromD2ToUserObj(d2Object) {\n  return {\n    id: d2Object.id,\n    username: d2Object.username,\n    uiLocale: d2Object.settings.keyUiLocale,\n    isSuperuser: d2Object.authorities.has('ALL')\n  };\n} // selectors\n\n\nexport const sGetUserId = state => state.user.id;\nexport const sGetUserUsername = state => state.user.username;\nexport const sGetIsSuperuser = state => state.user.isSuperuser;\nexport const sGetUiLocale = state => state.user.uiLocale;","import { getDimensionById, DIMENSION_ID_PERIOD, DIMENSION_ID_ORGUNIT } from '@dhis2/analytics';\nexport const SET_DIMENSIONS = 'SET_DIMENSIONS';\nexport const DEFAULT_DIMENSIONS = [getDimensionById(DIMENSION_ID_PERIOD), getDimensionById(DIMENSION_ID_ORGUNIT)];\nexport default ((state = DEFAULT_DIMENSIONS, action) => {\n  switch (action.type) {\n    case SET_DIMENSIONS:\n      {\n        return [...DEFAULT_DIMENSIONS, ...action.value];\n      }\n\n    default:\n      return state;\n  }\n});\nexport const sGetDimensions = state => state.dimensions;","import { sGetDimensions } from './dimensions';\nimport { createSelector } from 'reselect';\nexport const CLEAR_ITEM_FILTERS = 'CLEAR_ITEM_FILTERS';\nexport const SET_ITEM_FILTERS = 'SET_ITEM_FILTERS';\nexport const ADD_ITEM_FILTER = 'ADD_ITEM_FILTER';\nexport const REMOVE_ITEM_FILTER = 'REMOVE_ITEM_FILTER';\nexport const DEFAULT_STATE_ITEM_FILTERS = {};\nexport default ((state = DEFAULT_STATE_ITEM_FILTERS, action) => {\n  switch (action.type) {\n    case ADD_ITEM_FILTER:\n      {\n        return { ...state,\n          [action.filter.id]: action.filter.value\n        };\n      }\n\n    case REMOVE_ITEM_FILTER:\n      {\n        const newState = { ...state\n        };\n        delete newState[action.id];\n        return newState;\n      }\n\n    case SET_ITEM_FILTERS:\n      {\n        return action.filters;\n      }\n\n    case CLEAR_ITEM_FILTERS:\n      {\n        return DEFAULT_STATE_ITEM_FILTERS;\n      }\n\n    default:\n      return state;\n  }\n}); // selectors\n\nexport const sGetItemFiltersRoot = state => state.itemFilters; // simplify the filters structure to:\n// [{ id: 'pe', name: 'Period', values: [{ id: 2019: name: '2019' }, {id: 'LAST_MONTH', name: 'Last month' }]}, ...]\n\nexport const sGetNamedItemFilters = createSelector([sGetItemFiltersRoot, sGetDimensions], (filters, dimensions) => Object.keys(filters).reduce((arr, id) => {\n  arr.push({\n    id: id,\n    name: dimensions.find(dimension => dimension.id === id).name,\n    values: filters[id].map(value => ({\n      id: value.id,\n      name: value.displayName || value.name\n    }))\n  });\n  return arr;\n}, []));","import { ADD_ITEM_FILTER, REMOVE_ITEM_FILTER, SET_ITEM_FILTERS, CLEAR_ITEM_FILTERS } from '../reducers/itemFilters';\nexport const FILTER_ORG_UNIT = 'ou'; // actions\n\nexport const acAddItemFilter = filter => ({\n  type: ADD_ITEM_FILTER,\n  filter\n});\nexport const acRemoveItemFilter = id => ({\n  type: REMOVE_ITEM_FILTER,\n  id\n});\nexport const acClearItemFilters = () => ({\n  type: CLEAR_ITEM_FILTERS\n});\nexport const acSetItemFilters = filters => ({\n  type: SET_ITEM_FILTERS,\n  filters\n});","import update from 'immutability-helper';\nimport { arrayToIdMap } from '../modules/util';\nexport const RECEIVED_MESSAGES = 'RECEIVED_MESSAGES';\nexport default ((state = {}, action) => {\n  switch (action.type) {\n    case RECEIVED_MESSAGES:\n      {\n        const conversations = arrayToIdMap(action.value);\n        const newState = update(state, {\n          $merge: conversations\n        });\n        return newState;\n      }\n\n    default:\n      return state;\n  }\n}); // selectors\n\nexport const sGetMessagesRoot = state => state.messages;","export const messageConversationsQuery = {\n  resource: 'messageConversations',\n  params: {\n    fields: 'id,messageCount,lastUpdated,messageType,displayName,read,messages[id,read,sender[id,displayName],text,lastUpdated]',\n    order: 'read:asc',\n    pageSize: 200\n  }\n};\nexport const getMessages = async dataEngine => {\n  try {\n    const {\n      messageConversations\n    } = await dataEngine.query({\n      messageConversations: messageConversationsQuery\n    });\n    return messageConversations.messageConversations;\n  } catch (error) {\n    console.log('Error:', error);\n  }\n};","import { RECEIVED_MESSAGES } from '../../../reducers/messages';\nimport { getMessages } from '../../../api/messages';\n\nconst onError = (action, error) => {\n  console.log(\"Error in action \".concat(action, \": \").concat(error));\n  return error;\n};\n\nexport const receivedMessages = value => ({\n  type: RECEIVED_MESSAGES,\n  value\n});\nexport const tGetMessages = dataEngine => async dispatch => {\n  try {\n    const messageConversations = await getMessages(dataEngine);\n    return dispatch(receivedMessages(messageConversations));\n  } catch (err) {\n    return onError('Get Messages', err);\n  }\n};","export const SET_ALERT_MESSAGE = 'SET_ALERT_MESSAGE';\nexport const CLEAR_ALERT_MESSAGE = 'CLEAR_ALERT_MESSAGE';\nexport const DEFAULT_STATE_ALERT = null;\nexport default ((state = DEFAULT_STATE_ALERT, action) => {\n  switch (action.type) {\n    case SET_ALERT_MESSAGE:\n      {\n        return action.value;\n      }\n\n    case CLEAR_ALERT_MESSAGE:\n      {\n        return DEFAULT_STATE_ALERT;\n      }\n\n    default:\n      return state;\n  }\n}); // selectors\n\nexport const sGetAlertMessage = state => state.alert;","import { SET_ALERT_MESSAGE, CLEAR_ALERT_MESSAGE } from '../reducers/alert';\nexport const acSetAlertMessage = value => ({\n  type: SET_ALERT_MESSAGE,\n  value\n});\nexport const acClearAlertMessage = () => ({\n  type: CLEAR_ALERT_MESSAGE\n});","import { orObject } from '../modules/util';\nimport objectClean from 'd2-utilizr/lib/objectClean';\n/** @module reducers/visualizations */\n\nexport const ADD_VISUALIZATION = 'ADD_VISUALIZATION';\nexport const SET_ACTIVE_VISUALIZATION_TYPE = 'SET_ACTIVE_VISUALIZATION_TYPE';\nexport const CLEAR_VISUALIZATIONS = 'CLEAR_VISUALIZATIONS';\nexport const DEFAULT_STATE_VISUALIZATIONS = {};\n\nconst isEmpty = p => p === undefined || p === null;\n\nexport default ((state = DEFAULT_STATE_VISUALIZATIONS, action) => {\n  switch (action.type) {\n    case ADD_VISUALIZATION:\n      {\n        return { ...state,\n          [action.value.id]: objectClean({ ...orObject(state[action.value.id]),\n            ...action.value\n          }, isEmpty)\n        };\n      }\n\n    case CLEAR_VISUALIZATIONS:\n      {\n        return DEFAULT_STATE_VISUALIZATIONS;\n      }\n\n    default:\n      return state;\n  }\n}); // root selector\n\nexport const sGetVisualizationsRoot = state => state.visualizations; // selectors level 1\n\nexport const sGetVisualization = (state, id) => {\n  return sGetVisualizationsRoot(state)[id];\n};","import { ADD_VISUALIZATION, CLEAR_VISUALIZATIONS } from '../reducers/visualizations';\nexport const acAddVisualization = value => ({\n  type: ADD_VISUALIZATION,\n  value\n});\nexport const acClearVisualizations = () => ({\n  type: CLEAR_VISUALIZATIONS\n});","import { getInstance } from 'd2';\nimport arrayClean from 'd2-utilizr/lib/arrayClean';\nimport { getEndPointName, MAP } from '../modules/itemTypes';\nimport { getVisualizationId } from '../modules/item'; // Id, name\n\nexport const getIdNameFields = ({\n  rename\n} = {}) => ['id', \"\".concat(rename ? 'displayName~rename(name)' : 'name,displayName')]; // Item\n\nexport const getItemFields = () => ['dimensionItem~rename(id)', 'displayName~rename(name)', 'dimensionItemType']; // Dimension\n\nexport const getDimensionFields = ({\n  withItems\n}) => arrayClean(['dimension', 'legendSet[id]', 'filter', 'programStage', withItems ? \"items[\".concat(getItemFields().join(','), \"]\") : \"\"]); // Axis\n\nexport const getAxesFields = ({\n  withItems\n}) => [\"columns[\".concat(getDimensionFields({\n  withItems\n}).join(','), \"]\"), \"rows[\".concat(getDimensionFields({\n  withItems\n}).join(','), \"]\"), \"filters[\".concat(getDimensionFields({\n  withItems\n}).join(','), \"]\")]; // Favorite\n\nexport const getFavoriteFields = ({\n  withDimensions,\n  withOptions\n}) => {\n  return arrayClean([\"\".concat(getIdNameFields({\n    rename: true\n  }).join(',')), 'displayDescription~rename(description)', withDimensions ? \"\".concat(getAxesFields({\n    withItems: true\n  }).join(',')) : \"\", withOptions ? ['*', '!attributeDimensions', '!attributeValues', '!category', '!categoryDimensions', '!categoryOptionGroupSetDimensions', '!columnDimensions', '!dataDimensionItems', '!dataElementDimensions', '!dataElementGroupSetDimensions', '!filterDimensions', '!itemOrganisationUnitGroups', '!lastUpdatedBy', '!organisationUnitGroupSetDimensions', '!organisationUnitLevels', '!organisationUnits', '!programIndicatorDimensions', '!relativePeriods', '!reportParams', '!rowDimensions', '!translations', '!userOrganisationUnit', '!userOrganisationUnitChildren', '!userOrganisationUnitGrandChildren'].join(',') : '']);\n};\nexport const getFavoritesFields = ({\n  withDimensions\n}) => [\"reportTable[\".concat(getFavoriteFields({\n  withDimensions\n}).join(','), \"]\"), \"chart[\".concat(['type', ...getFavoriteFields({\n  withDimensions\n})].join(','), \"]\"), \"map[\".concat(getFavoriteFields({\n  withDimensions\n}).join(','), \"]\"), \"eventReport[\".concat(getFavoriteFields({\n  withDimensions\n}).join(','), \"]\"), \"eventChart[\".concat(getFavoriteFields({\n  withDimensions\n}).join(','), \"]\")]; // List item\n\nexport const getListItemFields = () => [\"reports[\".concat(['type', ...getIdNameFields({\n  rename: true\n})].join(','), \"]\"), \"resources[\".concat(getIdNameFields({\n  rename: true\n}).join(','), \"]\"), \"users[\".concat(getIdNameFields({\n  rename: true\n}).join(','), \"]\")]; // Map\n\nexport const getMapFields = () => [\"\".concat(getIdNameFields({\n  rename: true\n}).join(',')), 'user,longitude,latitude,zoom,basemap', \"mapViews[\".concat(getFavoriteFields({\n  withDimensions: true,\n  withOptions: true\n}), \"]\")]; // Api\n\nexport const apiFetchVisualization = async item => {\n  const id = getVisualizationId(item);\n  const fields = item.type === MAP ? getMapFields() : getFavoriteFields({\n    withDimensions: true,\n    withOptions: true\n  });\n  const d2 = await getInstance();\n  return await d2.Api.getApi().get(\"\".concat(getEndPointName(item.type), \"/\").concat(id), {\n    fields\n  });\n};","import arrayClean from 'd2-utilizr/lib/arrayClean';\nimport { getListItemFields, getFavoritesFields, getIdNameFields } from './metadata'; // Helper functions\n\nexport const onError = error => console.log('Error: ', error); // Dashboard item\n\nexport const getDashboardItemsFields = ({\n  withFavorite\n} = {}) => arrayClean(['id', 'type', 'shape', 'x', 'y', 'width~rename(w)', 'height~rename(h)', 'messages', 'text', 'appKey', \"\".concat(getListItemFields().join(',')), withFavorite ? \"\".concat(getFavoritesFields({\n  withDimensions: withFavorite.withDimensions\n}).join(',')) : \"\"]); // Dashboard\n\nexport const getDashboardFields = ({\n  withItems,\n  withFavorite\n} = {}) => arrayClean([\"\".concat(getIdNameFields().join(',')), 'description', 'displayDescription', 'favorite', \"user[\".concat(getIdNameFields({\n  rename: true\n}).join(','), \"]\"), 'created', 'lastUpdated', 'access', 'href', // needed for d2-ui-translations-dialog, since we don't pass a d2 Model anymore\nwithItems ? \"dashboardItems[\".concat(getDashboardItemsFields({\n  withFavorite\n}).join(','), \"]\") : \"\"]);","import arrayClean from 'd2-utilizr/lib/arrayClean';\nimport { onError, getDashboardFields } from './index';\nexport const dashboardsQuery = {\n  resource: 'dashboards',\n  params: {\n    fields: [getDashboardFields(), 'dashboardItems[id]'].join(','),\n    paging: false\n  }\n};\nexport const dashboardQuery = {\n  resource: 'dashboards',\n  id: ({\n    id\n  }) => id,\n  params: {\n    fields: arrayClean(getDashboardFields({\n      withItems: true,\n      withFavorite: {\n        withDimensions: false\n      }\n    })).join(',')\n  }\n};\nexport const deleteDashboardMutation = {\n  type: 'delete',\n  resource: 'dashboards',\n  id: ({\n    id\n  }) => id\n}; // Get \"all\" dashboards on startup\n\nexport const apiFetchDashboards = async dataEngine => {\n  try {\n    const dashboardsData = await dataEngine.query({\n      dashboards: dashboardsQuery\n    });\n    return dashboardsData.dashboards.dashboards;\n  } catch (error) {\n    onError(error);\n  }\n}; // Get more info about selected dashboard\n\nexport const apiFetchDashboard = async (dataEngine, id) => {\n  try {\n    const dashboardData = await dataEngine.query({\n      dashboard: dashboardQuery\n    }, {\n      variables: {\n        id\n      }\n    });\n    return dashboardData.dashboard;\n  } catch (error) {\n    onError(error);\n  }\n};\nexport const apiDeleteDashboard = async (dataEngine, id) => {\n  try {\n    await dataEngine.mutate(deleteDashboardMutation, {\n      variables: {\n        id\n      }\n    });\n  } catch (error) {\n    onError(error);\n  }\n};","import i18n from '@dhis2/d2-i18n';\nimport { getCustomDashboards, sGetDashboardById } from '../reducers/dashboards';\nimport { SET_SELECTED_ID, SET_SELECTED_ISLOADING, SET_SELECTED_SHOWDESCRIPTION, SET_SELECTED_ITEM_ACTIVE_TYPE, CLEAR_SELECTED_ITEM_ACTIVE_TYPES, sGetSelectedIsLoading, sGetSelectedId } from '../reducers/selected';\nimport { sGetUserUsername } from '../reducers/user';\nimport { acSetDashboardItems, acAppendDashboards } from './dashboards';\nimport { acClearItemFilters } from './itemFilters';\nimport { tGetMessages } from '../components/Item/MessagesItem/actions';\nimport { acSetAlertMessage, acClearAlertMessage } from './alert';\nimport { acAddVisualization, acClearVisualizations } from './visualizations';\nimport { apiFetchDashboard } from '../api/dashboards';\nimport { storePreferredDashboardId } from '../api/localStorage';\nimport { apiGetShowDescription } from '../api/description';\nimport { withShape } from '../modules/gridUtil';\nimport { getVisualizationFromItem } from '../modules/item';\nimport { REPORT_TABLE, CHART, MAP, EVENT_REPORT, EVENT_CHART, MESSAGES } from '../modules/itemTypes'; // actions\n\nexport const acSetSelectedId = value => ({\n  type: SET_SELECTED_ID,\n  value\n});\nexport const acSetSelectedIsLoading = value => ({\n  type: SET_SELECTED_ISLOADING,\n  value\n});\nexport const acSetSelectedShowDescription = value => ({\n  type: SET_SELECTED_SHOWDESCRIPTION,\n  value\n});\nexport const acSetSelectedItemActiveType = (id, activeType) => {\n  const action = {\n    type: SET_SELECTED_ITEM_ACTIVE_TYPE,\n    id,\n    activeType\n  };\n  return action;\n};\nexport const acClearSelectedItemActiveTypes = () => ({\n  type: CLEAR_SELECTED_ITEM_ACTIVE_TYPES\n}); // thunks\n\nexport const tSetSelectedDashboardById = id => async (dispatch, getState, dataEngine) => {\n  dispatch(acSetSelectedIsLoading(true));\n  const alertTimeout = setTimeout(() => {\n    var _sGetDashboardById;\n\n    const name = (_sGetDashboardById = sGetDashboardById(getState(), id)) === null || _sGetDashboardById === void 0 ? void 0 : _sGetDashboardById.displayName;\n\n    if (sGetSelectedIsLoading(getState()) && name) {\n      dispatch(acSetAlertMessage(i18n.t('Loading dashboard – {{name}}', {\n        name\n      })));\n    }\n  }, 500);\n\n  const onSuccess = selected => {\n    dispatch(acAppendDashboards(selected));\n    const customDashboard = getCustomDashboards(selected)[0];\n    dispatch(acSetDashboardItems(withShape(customDashboard.dashboardItems)));\n    storePreferredDashboardId(sGetUserUsername(getState()), id);\n\n    if (id !== sGetSelectedId(getState())) {\n      dispatch(acClearItemFilters());\n      dispatch(acClearVisualizations());\n      dispatch(acClearSelectedItemActiveTypes());\n    }\n\n    customDashboard.dashboardItems.forEach(item => {\n      switch (item.type) {\n        case REPORT_TABLE:\n        case CHART:\n        case MAP:\n        case EVENT_REPORT:\n        case EVENT_CHART:\n          dispatch(acAddVisualization(getVisualizationFromItem(item)));\n          break;\n\n        case MESSAGES:\n          dispatch(tGetMessages(dataEngine));\n          break;\n\n        default:\n          break;\n      }\n    });\n    dispatch(acSetSelectedId(id));\n    dispatch(acSetSelectedIsLoading(false));\n    clearTimeout(alertTimeout);\n    dispatch(acClearAlertMessage());\n    return selected;\n  };\n\n  try {\n    const dashboard = await apiFetchDashboard(dataEngine, id);\n    return onSuccess(dashboard);\n  } catch (err) {\n    console.error('Error: ', err);\n    return err;\n  }\n};\nexport const tSetShowDescription = () => async dispatch => {\n  const onSuccess = value => {\n    dispatch(acSetSelectedShowDescription(value));\n  };\n\n  try {\n    const showDescription = await apiGetShowDescription();\n    return onSuccess(showDescription);\n  } catch (err) {\n    console.error('Error (apiGetShowDescription): ', err);\n    return err;\n  }\n};","export const getPreferredDashboardId = username => localStorage.getItem(\"dhis2.dashboard.current.\".concat(username)) || undefined;\nexport const storePreferredDashboardId = (username, dashboardId) => {\n  localStorage.setItem(\"dhis2.dashboard.current.\".concat(username), dashboardId);\n};","import { SET_DASHBOARDS, ADD_DASHBOARDS, SET_DASHBOARD_STARRED, SET_DASHBOARD_DISPLAY_NAME, SET_DASHBOARD_ITEMS, getCustomDashboards, sGetDashboardById, sGetDashboardsSortedByStarred } from '../reducers/dashboards';\nimport { NON_EXISTING_DASHBOARD_ID } from '../reducers/selected';\nimport { sGetUserUsername } from '../reducers/user';\nimport { tSetSelectedDashboardById, acSetSelectedId } from './selected';\nimport { apiFetchDashboards, apiDeleteDashboard } from '../api/dashboards';\nimport { getPreferredDashboardId } from '../api/localStorage';\nimport { arrayToIdMap } from '../modules/util'; // actions\n\nexport const acSetDashboards = dashboards => ({\n  type: SET_DASHBOARDS,\n  value: arrayToIdMap(getCustomDashboards(dashboards))\n});\nexport const acAppendDashboards = dashboards => ({\n  type: ADD_DASHBOARDS,\n  value: arrayToIdMap(getCustomDashboards(dashboards))\n});\nexport const acSetDashboardStarred = (dashboardId, isStarred) => ({\n  type: SET_DASHBOARD_STARRED,\n  dashboardId: dashboardId,\n  value: isStarred\n});\nexport const acSetDashboardDisplayName = (dashboardId, value) => ({\n  type: SET_DASHBOARD_DISPLAY_NAME,\n  dashboardId,\n  value\n});\nexport const acSetDashboardItems = value => ({\n  type: SET_DASHBOARD_ITEMS,\n  value\n}); // thunks\n\nexport const tFetchDashboards = () => async (dispatch, getState, dataEngine) => {\n  const dashboards = await apiFetchDashboards(dataEngine);\n  dispatch(acSetDashboards(dashboards));\n};\nexport const tSelectDashboard = id => async (dispatch, getState) => {\n  try {\n    const state = getState();\n    let dashboardToSelect = null;\n\n    if (id) {\n      dashboardToSelect = sGetDashboardById(state, id) || null;\n    } else {\n      const preferredId = getPreferredDashboardId(sGetUserUsername(state));\n      const dash = sGetDashboardById(state, preferredId);\n      dashboardToSelect = preferredId && dash ? dash : sGetDashboardsSortedByStarred(state)[0];\n    }\n\n    if (dashboardToSelect) {\n      dispatch(tSetSelectedDashboardById(dashboardToSelect.id));\n    } else {\n      dispatch(acSetSelectedId(NON_EXISTING_DASHBOARD_ID));\n    }\n  } catch (err) {\n    console.error('Error (apiFetchDashboards): ', err);\n    return err;\n  }\n};\nexport const tDeleteDashboard = id => async (dispatch, getState, dataEngine) => {\n  try {\n    await apiDeleteDashboard(dataEngine, id);\n    await dispatch(tFetchDashboards());\n    return Promise.resolve();\n  } catch (err) {\n    console.error('Error (deleteDashboard): ', err);\n    return err;\n  }\n};","function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nimport React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport i18n from '@dhis2/d2-i18n';\nimport { useD2 } from '@dhis2/app-runtime-adapter-d2';\nimport { Button, Modal, ModalTitle, ModalContent, ModalActions, ButtonStrip } from '@dhis2/ui';\nimport { PeriodDimension, DynamicDimension, OrgUnitDimension, DIMENSION_ID_PERIOD, DIMENSION_ID_ORGUNIT } from '@dhis2/analytics';\nimport { acAddItemFilter, acRemoveItemFilter } from '../../actions/itemFilters';\nimport { sGetItemFiltersRoot } from '../../reducers/itemFilters';\nimport { useSystemSettings } from '../SystemSettingsProvider';\n\nconst FilterDialog = ({\n  dimension,\n  initiallySelectedItems,\n  addItemFilter,\n  removeItemFilter,\n  onClose\n}) => {\n  const [filters, setFilters] = useState(initiallySelectedItems);\n  const {\n    d2\n  } = useD2({});\n  const {\n    settings\n  } = useSystemSettings();\n\n  const onSelectItems = ({\n    dimensionId,\n    items\n  }) => {\n    setFilters({\n      [dimensionId]: items\n    });\n  };\n\n  const onDeselectItems = ({\n    dimensionId,\n    itemIdsToRemove\n  }) => {\n    const oldList = filters[dimensionId] || [];\n    const newList = oldList.filter(item => !itemIdsToRemove.includes(item.id));\n    setFilters({ ...filters,\n      [dimensionId]: newList\n    });\n  };\n\n  const onReorderItems = ({\n    dimensionId,\n    itemIds\n  }) => {\n    const oldList = filters[dimensionId] || [];\n    const reorderedList = itemIds.map(id => oldList.find(item => item.id === id));\n    setFilters({ ...filters,\n      [dimensionId]: reorderedList\n    });\n  };\n\n  const saveFilter = () => {\n    const id = dimension.id;\n    const filterItems = filters[id];\n\n    if (filterItems && filterItems.length) {\n      addItemFilter({\n        id,\n        value: [...filterItems]\n      });\n    } else {\n      removeItemFilter(id);\n    }\n\n    onClose(id);\n  };\n\n  const renderDialogContent = () => {\n    const commonProps = {\n      d2,\n      onSelect: onSelectItems,\n      onDeselect: onDeselectItems,\n      onReorder: onReorderItems\n    };\n    const selectedItems = filters[dimension.id] || [];\n\n    switch (dimension.id) {\n      case DIMENSION_ID_PERIOD:\n        {\n          return /*#__PURE__*/React.createElement(PeriodDimension, {\n            selectedPeriods: selectedItems,\n            onSelect: commonProps.onSelect\n          });\n        }\n\n      case DIMENSION_ID_ORGUNIT:\n        return /*#__PURE__*/React.createElement(OrgUnitDimension, _extends({\n          displayNameProperty: settings.displayNameProperty,\n          ouItems: selectedItems\n        }, commonProps));\n\n      default:\n        return /*#__PURE__*/React.createElement(DynamicDimension, {\n          selectedItems: selectedItems,\n          dimensionId: dimension.id,\n          onSelect: commonProps.onSelect\n        });\n    }\n  };\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, dimension.id && /*#__PURE__*/React.createElement(Modal, {\n    dataTest: \"dimension-modal\",\n    onClose: onClose,\n    position: \"top\",\n    large: true\n  }, /*#__PURE__*/React.createElement(ModalTitle, null, dimension.name), /*#__PURE__*/React.createElement(ModalContent, null, renderDialogContent()), /*#__PURE__*/React.createElement(ModalActions, null, /*#__PURE__*/React.createElement(ButtonStrip, null, /*#__PURE__*/React.createElement(Button, {\n    secondary: true,\n    onClick: onClose\n  }, i18n.t('Cancel')), /*#__PURE__*/React.createElement(Button, {\n    primary: true,\n    onClick: saveFilter\n  }, i18n.t('Confirm'))))));\n};\n\nFilterDialog.propTypes = {\n  addItemFilter: PropTypes.func,\n  dimension: PropTypes.object,\n  initiallySelectedItems: PropTypes.object,\n  removeItemFilter: PropTypes.func,\n  onClose: PropTypes.func\n};\n\nconst mapStateToProps = state => ({\n  initiallySelectedItems: sGetItemFiltersRoot(state)\n});\n\nexport default connect(mapStateToProps, {\n  addItemFilter: acAddItemFilter,\n  removeItemFilter: acRemoveItemFilter\n})(FilterDialog);","export const SET_ACTIVE_MODAL_DIMENSION = 'SET_ACTIVE_MODAL_DIMENSION';\nexport const CLEAR_ACTIVE_MODAL_DIMENSION = 'CLEAR_ACTIVE_MODAL_DIMENSION';\nexport const DEFAULT_STATE_ACTIVE_MODAL_DIMENSION = {};\nexport default ((state = DEFAULT_STATE_ACTIVE_MODAL_DIMENSION, action) => {\n  switch (action.type) {\n    case SET_ACTIVE_MODAL_DIMENSION:\n      {\n        return action.value;\n      }\n\n    case CLEAR_ACTIVE_MODAL_DIMENSION:\n      {\n        return DEFAULT_STATE_ACTIVE_MODAL_DIMENSION;\n      }\n\n    default:\n      return state;\n  }\n});\nexport const sGetActiveModalDimension = state => state.activeModalDimension;","import { SET_ACTIVE_MODAL_DIMENSION, CLEAR_ACTIVE_MODAL_DIMENSION } from '../reducers/activeModalDimension';\nexport const acSetActiveModalDimension = value => ({\n  type: SET_ACTIVE_MODAL_DIMENSION,\n  value\n});\nexport const acClearActiveModalDimension = () => ({\n  type: CLEAR_ACTIVE_MODAL_DIMENSION\n});","import React, { useState, useRef } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport ArrowDropDownIcon from '@material-ui/icons/ArrowDropDown';\nimport isEmpty from 'lodash/isEmpty';\nimport i18n from '@dhis2/d2-i18n';\nimport { DimensionsPanel } from '@dhis2/analytics';\nimport { Button, Popover } from '@dhis2/ui';\nimport FilterDialog from './FilterDialog';\nimport { sGetActiveModalDimension } from '../../reducers/activeModalDimension';\nimport { sGetDimensions } from '../../reducers/dimensions';\nimport { sGetItemFiltersRoot } from '../../reducers/itemFilters';\nimport { acClearActiveModalDimension, acSetActiveModalDimension } from '../../actions/activeModalDimension';\nimport classes from './styles/FilterSelector.module.css';\n\nconst FilterSelector = props => {\n  const [showPopover, setShowPopover] = useState(false);\n  const ref = useRef(null);\n\n  const onCloseDialog = () => {\n    setShowPopover(false);\n    props.clearActiveModalDimension();\n  };\n\n  const selectDimension = id => {\n    props.setActiveModalDimension(props.dimensions.find(dimension => dimension.id === id));\n  };\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"span\", {\n    className: classes.buttonContainer,\n    ref: ref\n  }, /*#__PURE__*/React.createElement(Button, {\n    onClick: () => setShowPopover(true)\n  }, i18n.t('Add filter'), /*#__PURE__*/React.createElement(ArrowDropDownIcon, null))), showPopover && /*#__PURE__*/React.createElement(Popover, {\n    onClickOutside: onCloseDialog,\n    reference: ref,\n    arrow: true,\n    placement: \"bottom-start\",\n    dataTest: \"dashboard-filter-popover\"\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.popover\n  }, /*#__PURE__*/React.createElement(DimensionsPanel, {\n    style: {\n      width: '320px'\n    },\n    dimensions: props.dimensions,\n    onDimensionClick: selectDimension,\n    selectedIds: Object.keys(props.initiallySelectedItems)\n  }))), !isEmpty(props.dimension) ? /*#__PURE__*/React.createElement(FilterDialog, {\n    dimension: props.dimension,\n    onClose: onCloseDialog\n  }) : null);\n};\n\nconst mapStateToProps = state => ({\n  dimension: sGetActiveModalDimension(state),\n  dimensions: sGetDimensions(state),\n  initiallySelectedItems: sGetItemFiltersRoot(state)\n});\n\nFilterSelector.propTypes = {\n  clearActiveModalDimension: PropTypes.func,\n  dimension: PropTypes.object,\n  dimensions: PropTypes.array,\n  initiallySelectedItems: PropTypes.object,\n  setActiveModalDimension: PropTypes.func\n};\nexport default connect(mapStateToProps, {\n  clearActiveModalDimension: acClearActiveModalDimension,\n  setActiveModalDimension: acSetActiveModalDimension\n})(FilterSelector);","import React, { useState, createRef } from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport cx from 'classnames';\nimport { Link, Redirect } from 'react-router-dom';\nimport i18n from '@dhis2/d2-i18n';\nimport SharingDialog from '@dhis2/d2-ui-sharing-dialog';\nimport { useDataEngine, useAlert } from '@dhis2/app-runtime';\nimport Star from '@material-ui/icons/Star';\nimport StarBorder from '@material-ui/icons/StarBorder';\nimport { Button, FlyoutMenu, Popover, MenuItem, colors } from '@dhis2/ui';\nimport { useD2 } from '@dhis2/app-runtime-adapter-d2';\nimport { ThreeDots } from '../Item/VisualizationItem/assets/icons';\nimport { orObject } from '../../modules/util';\nimport { apiStarDashboard } from '../../api/starDashboard';\nimport { apiPostShowDescription } from '../../api/description';\nimport { acSetDashboardStarred } from '../../actions/dashboards';\nimport { acSetSelectedShowDescription } from '../../actions/selected';\nimport FilterSelector from '../ItemFilter/FilterSelector';\nimport { sGetSelectedId, sGetSelectedShowDescription } from '../../reducers/selected';\nimport { sGetDashboardById, sGetDashboardItems, EMPTY_DASHBOARD } from '../../reducers/dashboards';\nimport classes from './styles/ViewTitleBar.module.css';\n\nconst ViewTitleBar = ({\n  id,\n  name,\n  description,\n  access,\n  showDescription,\n  starred,\n  setDashboardStarred,\n  updateShowDescription\n}) => {\n  const [moreOptionsIsOpen, setMoreOptionsIsOpen] = useState(false);\n  const [sharingDialogIsOpen, setSharingDialogIsOpen] = useState(false);\n  const [redirectUrl, setRedirectUrl] = useState(null);\n  const {\n    d2\n  } = useD2({});\n  const dataEngine = useDataEngine();\n  const warningAlert = useAlert(({\n    msg\n  }) => msg, {\n    warning: true\n  });\n\n  const toggleSharingDialog = () => setSharingDialogIsOpen(!sharingDialogIsOpen);\n\n  const toggleMoreOptions = () => setMoreOptionsIsOpen(!moreOptionsIsOpen);\n\n  const printLayout = () => setRedirectUrl(\"\".concat(id, \"/printlayout\"));\n\n  const printOipp = () => setRedirectUrl(\"\".concat(id, \"/printoipp\"));\n\n  const StarIcon = starred ? Star : StarBorder;\n\n  if (redirectUrl) {\n    return /*#__PURE__*/React.createElement(Redirect, {\n      to: redirectUrl\n    });\n  }\n\n  const showHideDescriptionLabel = showDescription ? i18n.t('Hide description') : i18n.t('Show description');\n\n  const onToggleShowDescription = () => apiPostShowDescription(!showDescription).then(() => {\n    updateShowDescription(!showDescription);\n    toggleMoreOptions();\n  }).catch(() => {\n    const msg = showDescription ? i18n.t('Failed to hide description') : i18n.t('Failed to show description');\n    warningAlert.show({\n      msg\n    });\n  });\n\n  const toggleStarredDashboardLabel = starred ? i18n.t('Unstar dashboard') : i18n.t('Star dashboard');\n\n  const onToggleStarredDashboard = () => apiStarDashboard(dataEngine, id, !starred).then(() => {\n    setDashboardStarred(id, !starred);\n\n    if (moreOptionsIsOpen) {\n      toggleMoreOptions();\n    }\n  }).catch(() => {\n    const msg = starred ? i18n.t('Failed to unstar the dashboard') : i18n.t('Failed to star the dashboard');\n    warningAlert.show({\n      msg\n    });\n  });\n\n  const buttonRef = /*#__PURE__*/createRef();\n  const userAccess = orObject(access);\n  const descriptionClasses = cx(classes.descContainer, description ? classes.desc : classes.noDesc);\n\n  const getMoreButton = (className, useSmall) => /*#__PURE__*/React.createElement(Button, {\n    className: className,\n    small: useSmall,\n    onClick: toggleMoreOptions\n  }, /*#__PURE__*/React.createElement(ThreeDots, null), /*#__PURE__*/React.createElement(\"span\", {\n    className: classes.moreText\n  }, i18n.t('More')));\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.container\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.titleBar\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    className: classes.title,\n    \"data-test\": \"view-dashboard-title\"\n  }, name), /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.actions\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.star,\n    onClick: onToggleStarredDashboard,\n    \"data-test\": \"button-star-dashboard\"\n  }, /*#__PURE__*/React.createElement(StarIcon, {\n    style: {\n      fill: colors.grey600\n    },\n    \"data-test\": starred ? 'dashboard-starred' : 'dashboard-unstarred'\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.strip\n  }, userAccess.update ? /*#__PURE__*/React.createElement(Link, {\n    className: classes.editLink,\n    to: \"/\".concat(id, \"/edit\"),\n    \"data-test\": \"link-edit-dashboard\"\n  }, /*#__PURE__*/React.createElement(Button, null, i18n.t('Edit'))) : null, userAccess.manage ? /*#__PURE__*/React.createElement(Button, {\n    className: classes.shareButton,\n    onClick: toggleSharingDialog\n  }, i18n.t('Share')) : null, /*#__PURE__*/React.createElement(FilterSelector, null), /*#__PURE__*/React.createElement(\"span\", {\n    ref: buttonRef\n  }, getMoreButton(classes.moreButton, false), getMoreButton(classes.moreButtonSmall, true))), moreOptionsIsOpen && /*#__PURE__*/React.createElement(Popover, {\n    reference: buttonRef,\n    placement: \"bottom-start\",\n    onClickOutside: toggleMoreOptions\n  }, /*#__PURE__*/React.createElement(FlyoutMenu, null, /*#__PURE__*/React.createElement(MenuItem, {\n    dense: true,\n    label: toggleStarredDashboardLabel,\n    onClick: onToggleStarredDashboard\n  }), /*#__PURE__*/React.createElement(MenuItem, {\n    dense: true,\n    label: showHideDescriptionLabel,\n    onClick: onToggleShowDescription\n  }), /*#__PURE__*/React.createElement(MenuItem, {\n    dense: true,\n    label: i18n.t('Print'),\n    dataTest: \"print-menu-item\"\n  }, /*#__PURE__*/React.createElement(MenuItem, {\n    dense: true,\n    label: i18n.t('Dashboard layout'),\n    onClick: printLayout,\n    dataTest: \"print-layout-menu-item\"\n  }), /*#__PURE__*/React.createElement(MenuItem, {\n    dense: true,\n    label: i18n.t('One item per page'),\n    onClick: printOipp,\n    dataTest: \"print-oipp-menu-item\"\n  })))))), showDescription && /*#__PURE__*/React.createElement(\"div\", {\n    className: descriptionClasses,\n    \"data-test\": \"dashboard-description\"\n  }, description || i18n.t('No description'))), id && /*#__PURE__*/React.createElement(SharingDialog, {\n    d2: d2,\n    id: id,\n    type: \"dashboard\",\n    open: sharingDialogIsOpen,\n    onRequestClose: toggleSharingDialog\n  }));\n};\n\nViewTitleBar.propTypes = {\n  access: PropTypes.object,\n  description: PropTypes.string,\n  id: PropTypes.string,\n  name: PropTypes.string,\n  setDashboardStarred: PropTypes.func,\n  showDescription: PropTypes.bool,\n  starred: PropTypes.bool,\n  updateShowDescription: PropTypes.func\n};\nViewTitleBar.defaultProps = {\n  name: '',\n  description: '',\n  starred: false,\n  showDescription: false\n};\n\nconst mapStateToProps = state => {\n  const id = sGetSelectedId(state);\n  const dashboard = sGetDashboardById(state, id) || EMPTY_DASHBOARD;\n  return {\n    id,\n    name: dashboard.displayName,\n    description: dashboard.displayDescription,\n    dashboardItems: sGetDashboardItems(state),\n    showDescription: sGetSelectedShowDescription(state),\n    starred: dashboard.starred,\n    access: dashboard.access\n  };\n};\n\nexport default connect(mapStateToProps, {\n  setDashboardStarred: acSetDashboardStarred,\n  updateShowDescription: acSetSelectedShowDescription\n})(ViewTitleBar);","export const getStarDashboardMutation = id => ({\n  type: 'create',\n  resource: \"dashboards/\".concat(id, \"/favorite\")\n});\nexport const getUnstarDashboardMutation = id => ({\n  type: 'delete',\n  resource: \"dashboards/\".concat(id, \"/favorite\")\n});\nexport const apiStarDashboard = (dataEngine, id, isStarred) => {\n  const mutation = isStarred ? getStarDashboardMutation(id) : getUnstarDashboardMutation(id);\n  return dataEngine.mutate(mutation);\n};","import React, { useEffect, useRef } from 'react';\nimport PropTypes from 'prop-types';\nimport { useD2 } from '@dhis2/app-runtime-adapter-d2';\nimport { useConfig } from '@dhis2/app-runtime';\nimport { load, unmount } from './plugin';\nimport getGridItemDomId from '../../../../modules/getGridItemDomId';\n\nconst DefaultPlugin = ({\n  item,\n  activeType,\n  visualization,\n  options,\n  style\n}) => {\n  const {\n    d2\n  } = useD2({});\n  const {\n    baseUrl\n  } = useConfig();\n  const credentials = {\n    baseUrl,\n    auth: d2.Api.getApi().defaultHeaders.Authorization\n  };\n  const prevItem = useRef();\n  const prevActiveType = useRef();\n  useEffect(() => {\n    load(item, visualization, {\n      credentials,\n      activeType,\n      options\n    });\n    prevItem.current = item;\n    prevActiveType.current = activeType;\n    return () => unmount(item, activeType);\n  }, []);\n  useEffect(() => {\n    if (shouldPluginReload()) {\n      unmount(item, prevActiveType.current);\n      load(item, visualization, {\n        credentials,\n        activeType\n      });\n    }\n\n    prevItem.current = item;\n    prevActiveType.current = activeType;\n  }, [item, visualization, activeType]);\n  /**\n   * Prevent unnecessary re-rendering\n   * TODO: fix this hack\n   */\n\n  const shouldPluginReload = () => {\n    const reloadAllowed = prevItem.current === item;\n    const visChanged = prevActiveType.current !== activeType;\n    return reloadAllowed && visChanged;\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    id: getGridItemDomId(item.id),\n    style: style\n  });\n};\n\nDefaultPlugin.propTypes = {\n  activeType: PropTypes.string,\n  item: PropTypes.object,\n  options: PropTypes.object,\n  style: PropTypes.object,\n  visualization: PropTypes.object\n};\nDefaultPlugin.defaultProps = {\n  style: {},\n  item: {},\n  options: {},\n  visualization: {}\n};\nexport default DefaultPlugin;","import React from 'react';\nimport PropTypes from 'prop-types';\nimport classes from './styles/NoVisualizationMessage.module.css';\n\nconst NoVisualizationMessage = ({\n  message\n}) => {\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.message\n  }, message);\n};\n\nNoVisualizationMessage.propTypes = {\n  message: PropTypes.string\n};\nexport default NoVisualizationMessage;","function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport i18n from '@dhis2/d2-i18n';\nimport DefaultPlugin from './DefaultPlugin';\nimport { MAP } from '../../../../modules/itemTypes';\nimport { pluginIsAvailable } from './plugin';\nimport NoVisualizationMessage from './NoVisualizationMessage';\n\nconst MapPlugin = ({\n  applyFilters,\n  ...props\n}) => {\n  if (props.item.type === MAP) {\n    // apply filters only to thematic and event layers\n    // for maps AO\n    const mapViews = props.visualization.mapViews.map(mapView => {\n      if (mapView.layer.includes('thematic') || mapView.layer.includes('event')) {\n        return applyFilters(mapView, props.itemFilters);\n      }\n\n      return mapView;\n    });\n    props.visualization = { ...props.visualization,\n      mapViews\n    };\n  } else {\n    // this is the case of a non map AO passed to the maps plugin\n    // due to a visualization type switch in dashboard item\n    // maps plugin takes care of converting the AO to a suitable format\n    props.visualization = applyFilters(props.visualization, props.itemFilters);\n  }\n\n  return pluginIsAvailable(props.activeType || props.item.type) ? /*#__PURE__*/React.createElement(DefaultPlugin, _extends({\n    options: {\n      hideTitle: true\n    }\n  }, props)) : /*#__PURE__*/React.createElement(NoVisualizationMessage, {\n    message: i18n.t('Unable to load the plugin for this item')\n  });\n};\n\nMapPlugin.propTypes = {\n  activeType: PropTypes.string,\n  applyFilters: PropTypes.func,\n  item: PropTypes.object,\n  itemFilters: PropTypes.object,\n  visualization: PropTypes.object\n};\nexport default MapPlugin;","import React from 'react';\nimport { CircularLoader } from '@dhis2/ui';\nimport classes from './styles/LoadingMask.module.css';\n\nconst LoadingMask = () => {\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.center\n  }, /*#__PURE__*/React.createElement(CircularLoader, null));\n};\n\nexport default LoadingMask;","const getFilteredVisualization = (visualization, filters) => {\n  if (!Object.keys(filters).length) {\n    return visualization;\n  } // deep clone objects in filters to avoid changing the visualization in the Redux store\n\n\n  const visRows = visualization.rows.map(obj => ({ ...obj\n  }));\n  const visColumns = visualization.columns.map(obj => ({ ...obj\n  }));\n  const visFilters = visualization.filters.map(obj => ({ ...obj\n  }));\n  Object.keys(filters).forEach(dimensionId => {\n    if (filters[dimensionId]) {\n      let dimensionFound = false;\n      [visRows, visColumns, visFilters].forEach(dimensionObjects => dimensionObjects.filter(obj => obj.dimension === dimensionId).forEach(obj => {\n        dimensionFound = true;\n        obj.items = filters[dimensionId];\n      })); // add dimension to filters if not already present elsewhere\n\n      if (!dimensionFound) {\n        visFilters.push({\n          dimension: dimensionId,\n          items: filters[dimensionId]\n        });\n      }\n    }\n  });\n  return { ...visualization,\n    rows: visRows,\n    columns: visColumns,\n    filters: visFilters\n  };\n};\n\nexport default getFilteredVisualization;","import { VIS_TYPE_COLUMN, VIS_TYPE_PIVOT_TABLE, getAdaptedUiLayoutByType } from '@dhis2/analytics';\nimport { REPORT_TABLE, CHART, MAP } from '../../../../modules/itemTypes';\nexport const THEMATIC_LAYER = 'thematic';\n\nconst extractMapView = map => map.mapViews && map.mapViews.find(mv => mv.layer.includes(THEMATIC_LAYER));\n\nconst getWithoutId = object => ({ ...object,\n  id: undefined\n});\n\nconst getVisualizationConfig = (visualization, originalType, activeType) => {\n  if (originalType === MAP && originalType !== activeType) {\n    const extractedMapView = extractMapView(visualization);\n\n    if (extractedMapView === undefined) {\n      return null;\n    }\n\n    return getWithoutId({ ...visualization,\n      ...extractedMapView,\n      mapViews: undefined,\n      type: activeType === CHART ? VIS_TYPE_COLUMN : VIS_TYPE_PIVOT_TABLE\n    });\n  } else if (originalType === REPORT_TABLE && activeType === CHART) {\n    const layout = getAdaptedUiLayoutByType(visualization, VIS_TYPE_COLUMN);\n    return getWithoutId({ ...visualization,\n      ...layout,\n      type: VIS_TYPE_COLUMN\n    });\n  } else if (originalType === CHART && activeType === REPORT_TABLE) {\n    const layout = getAdaptedUiLayoutByType(visualization, VIS_TYPE_PIVOT_TABLE);\n    return getWithoutId({ ...visualization,\n      ...layout,\n      type: VIS_TYPE_PIVOT_TABLE\n    });\n  }\n\n  return getWithoutId(visualization);\n};\n\nexport default getVisualizationConfig;","// Note that this ignores discrepancies in 'this', so shouldn't be used with bound functions\n// This is useful instead of lodash/memoize when we only need to memoize a single value\n// Inspiration: https://github.com/alexreardon/memoize-one\nconst memoizeOne = fn => {\n  let lastArgs = undefined;\n  let lastValue = undefined;\n  return (...args) => {\n    if (lastArgs && args.length === lastArgs.length && args.every((arg, i) => arg === lastArgs[i])) {\n      return lastValue;\n    }\n\n    lastArgs = args;\n    lastValue = fn(...args);\n    return lastValue;\n  };\n};\n\nexport default memoizeOne;","function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport VisualizationPlugin from '@dhis2/data-visualizer-plugin';\nimport i18n from '@dhis2/d2-i18n';\nimport { D2Shim } from '@dhis2/app-runtime-adapter-d2';\nimport DefaultPlugin from './DefaultPlugin';\nimport MapPlugin from './MapPlugin';\nimport LoadingMask from './LoadingMask';\nimport NoVisualizationMessage from './NoVisualizationMessage';\nimport getFilteredVisualization from './getFilteredVisualization';\nimport getVisualizationConfig from './getVisualizationConfig';\nimport { VISUALIZATION, MAP, CHART, REPORT_TABLE } from '../../../../modules/itemTypes';\nimport { getVisualizationId } from '../../../../modules/item';\nimport memoizeOne from '../../../../modules/memoizeOne';\nimport { sGetVisualization } from '../../../../reducers/visualizations';\nimport { pluginIsAvailable } from './plugin';\n\nclass Visualization extends React.Component {\n  constructor(props) {\n    super(props);\n\n    _defineProperty(this, \"state\", {\n      pluginLoaded: false\n    });\n\n    _defineProperty(this, \"onLoadingComplete\", () => {\n      this.setState({\n        pluginLoaded: true\n      });\n    });\n\n    this.memoizedGetFilteredVisualization = memoizeOne(getFilteredVisualization);\n    this.memoizedGetVisualizationConfig = memoizeOne(getVisualizationConfig);\n  }\n\n  render() {\n    const {\n      visualization,\n      activeType,\n      item,\n      itemFilters,\n      availableHeight,\n      availableWidth\n    } = this.props;\n\n    if (!visualization) {\n      return /*#__PURE__*/React.createElement(NoVisualizationMessage, {\n        message: i18n.t('No data to display')\n      });\n    }\n\n    const style = {\n      height: availableHeight\n    };\n\n    if (availableWidth) {\n      style.width = availableWidth;\n    }\n\n    const pluginProps = {\n      item,\n      itemFilters,\n      activeType,\n      style,\n      visualization: this.memoizedGetVisualizationConfig(visualization, item.type, activeType)\n    };\n\n    switch (activeType) {\n      case VISUALIZATION:\n      case CHART:\n      case REPORT_TABLE:\n        {\n          return /*#__PURE__*/React.createElement(React.Fragment, null, !this.state.pluginLoaded && /*#__PURE__*/React.createElement(\"div\", {\n            style: pluginProps.style\n          }, /*#__PURE__*/React.createElement(LoadingMask, null)), /*#__PURE__*/React.createElement(D2Shim, {\n            d2Config: {}\n          }, ({\n            d2\n          }) => /*#__PURE__*/React.createElement(VisualizationPlugin, {\n            d2: d2,\n            visualization: this.memoizedGetFilteredVisualization(pluginProps.visualization, pluginProps.itemFilters),\n            onLoadingComplete: this.onLoadingComplete,\n            forDashboard: true,\n            style: pluginProps.style\n          })));\n        }\n\n      case MAP:\n        {\n          return /*#__PURE__*/React.createElement(MapPlugin, _extends({\n            applyFilters: this.memoizedGetFilteredVisualization\n          }, pluginProps));\n        }\n\n      default:\n        {\n          pluginProps.visualization = this.memoizedGetFilteredVisualization(pluginProps.visualization, pluginProps.itemFilters);\n          return pluginIsAvailable(pluginProps.activeType || pluginProps.item.type) ? /*#__PURE__*/React.createElement(DefaultPlugin, pluginProps) : /*#__PURE__*/React.createElement(NoVisualizationMessage, {\n            message: i18n.t('Unable to load the plugin for this item')\n          });\n        }\n    }\n  }\n\n}\n\nVisualization.propTypes = {\n  activeType: PropTypes.string,\n  availableHeight: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n  availableWidth: PropTypes.number,\n  item: PropTypes.object,\n  itemFilters: PropTypes.object,\n  visualization: PropTypes.object\n};\n\nconst mapStateToProps = (state, ownProps) => {\n  return {\n    visualization: sGetVisualization(state, getVisualizationId(ownProps.item))\n  };\n};\n\nexport default connect(mapStateToProps)(Visualization);","import React from 'react';\nimport PropTypes from 'prop-types';\nimport i18n from '@dhis2/d2-i18n';\nimport { Warning } from './assets/icons';\nimport classes from './styles/FatalErrorBoundary.module.css';\n\nclass FatalErrorBoundary extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      errorFound: false\n    };\n  }\n\n  componentDidCatch(error, info) {\n    this.setState({\n      errorFound: true\n    });\n    console.log('error: ', error);\n    console.log('info: ', info);\n  }\n\n  render() {\n    if (this.state.errorFound) {\n      return /*#__PURE__*/React.createElement(\"p\", {\n        className: classes.container\n      }, /*#__PURE__*/React.createElement(\"span\", {\n        className: classes.icon\n      }, /*#__PURE__*/React.createElement(Warning, null)), /*#__PURE__*/React.createElement(\"span\", {\n        className: classes.message\n      }, i18n.t('There was a problem loading this dashboard item')));\n    }\n\n    return this.props.children;\n  }\n\n}\n\nFatalErrorBoundary.propTypes = {\n  children: PropTypes.node\n};\nexport default FatalErrorBoundary;","import React from 'react';\nimport PropTypes from 'prop-types';\nimport classes from './styles/ItemHeader.module.css';\n\nconst ViewItemActions = ({\n  actionButtons\n}) => {\n  return actionButtons ? /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.itemActionsWrap\n  }, actionButtons) : null;\n};\n\nViewItemActions.propTypes = {\n  actionButtons: PropTypes.node\n};\nexport default ViewItemActions;","import React from 'react';\nimport PropTypes from 'prop-types';\nimport i18n from '@dhis2/d2-i18n';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport { colors } from '@dhis2/ui';\nimport classes from './styles/DeleteItemButton.module.css';\n\nconst DeleteItemButton = ({\n  onClick\n}) => /*#__PURE__*/React.createElement(\"button\", {\n  type: \"button\",\n  className: classes.deleteItemButton,\n  onClick: onClick,\n  title: i18n.t(\"Delete item\")\n}, /*#__PURE__*/React.createElement(DeleteIcon, {\n  style: {\n    fill: colors.red500\n  }\n}));\n\nDeleteItemButton.propTypes = {\n  onClick: PropTypes.func\n};\nexport default DeleteItemButton;","/** @module reducers/editDashboard */\nimport update from 'immutability-helper';\nimport isEmpty from 'lodash/isEmpty';\nimport { orArray, orObject } from '../modules/util';\nexport const RECEIVED_EDIT_DASHBOARD = 'RECEIVED_EDIT_DASHBOARD';\nexport const RECEIVED_NOT_EDITING = 'RECEIVED_NOT_EDITING';\nexport const START_NEW_DASHBOARD = 'START_NEW_DASHBOARD';\nexport const RECEIVED_TITLE = 'RECEIVED_TITLE';\nexport const RECEIVED_DESCRIPTION = 'RECEIVED_DESCRIPTION';\nexport const ADD_DASHBOARD_ITEM = 'ADD_DASHBOARD_ITEM';\nexport const REMOVE_DASHBOARD_ITEM = 'REMOVE_DASHBOARD_ITEM';\nexport const UPDATE_DASHBOARD_ITEM = 'UPDATE_DASHBOARD_ITEM';\nexport const RECEIVED_DASHBOARD_LAYOUT = 'RECEIVED_DASHBOARD_LAYOUT';\nexport const SET_PRINT_PREVIEW_VIEW = 'SET_PRINT_PREVIEW_VIEW';\nexport const CLEAR_PRINT_PREVIEW_VIEW = 'CLEAR_PRINT_PREVIEW_VIEW';\nexport const DEFAULT_STATE_EDIT_DASHBOARD = {};\nexport const NEW_DASHBOARD_STATE = {\n  id: '',\n  name: '',\n  access: {},\n  description: '',\n  dashboardItems: [],\n  printPreviewView: false\n};\nexport default ((state = DEFAULT_STATE_EDIT_DASHBOARD, action) => {\n  switch (action.type) {\n    case RECEIVED_EDIT_DASHBOARD:\n      {\n        const newState = {};\n        Object.keys(NEW_DASHBOARD_STATE).map(k => newState[k] = action.value[k]);\n        newState.printPreviewView = false;\n        return newState;\n      }\n\n    case RECEIVED_NOT_EDITING:\n      return DEFAULT_STATE_EDIT_DASHBOARD;\n\n    case SET_PRINT_PREVIEW_VIEW:\n      return Object.assign({}, state, {\n        printPreviewView: true\n      });\n\n    case CLEAR_PRINT_PREVIEW_VIEW:\n      return Object.assign({}, state, {\n        printPreviewView: false\n      });\n\n    case START_NEW_DASHBOARD:\n      return NEW_DASHBOARD_STATE;\n\n    case RECEIVED_TITLE:\n      {\n        return Object.assign({}, state, {\n          name: action.value\n        });\n      }\n\n    case RECEIVED_DESCRIPTION:\n      {\n        return Object.assign({}, state, {\n          description: action.value\n        });\n      }\n\n    case ADD_DASHBOARD_ITEM:\n      if (!action.value.position) {\n        return update(state, {\n          dashboardItems: {\n            $unshift: [action.value]\n          }\n        });\n      }\n\n      return update(state, {\n        dashboardItems: {\n          $splice: [[parseInt(action.value.position), 0, action.value]]\n        }\n      });\n\n    case REMOVE_DASHBOARD_ITEM:\n      {\n        const idToRemove = action.value;\n        const dashboardItemIndex = state.dashboardItems.findIndex(item => item.id === idToRemove);\n\n        if (dashboardItemIndex > -1) {\n          return update(state, {\n            dashboardItems: {\n              $splice: [[dashboardItemIndex, 1]]\n            }\n          });\n        }\n\n        return state;\n      }\n\n    case RECEIVED_DASHBOARD_LAYOUT:\n      {\n        const stateItems = orArray(state.dashboardItems);\n        let layoutHasChanged = false;\n        const newStateItems = action.value.map(({\n          x,\n          y,\n          w,\n          h,\n          i\n        }) => {\n          const stateItem = stateItems.find(si => si.id === i);\n\n          if (!(stateItem.x === x && stateItem.y === y && stateItem.w === w && stateItem.h === h)) {\n            layoutHasChanged = true;\n            return Object.assign({}, stateItem, {\n              w,\n              h,\n              x,\n              y\n            });\n          }\n\n          return stateItem;\n        });\n        return layoutHasChanged ? { ...state,\n          dashboardItems: newStateItems\n        } : state;\n      }\n\n    case UPDATE_DASHBOARD_ITEM:\n      {\n        const dashboardItem = action.value;\n        const dashboardItemIndex = state.dashboardItems.findIndex(item => item.id === dashboardItem.id);\n\n        if (dashboardItemIndex > -1) {\n          const newState = update(state, {\n            dashboardItems: {\n              $splice: [[dashboardItemIndex, 1, Object.assign({}, dashboardItem)]]\n            }\n          });\n          return newState;\n        }\n\n        return state;\n      }\n\n    default:\n      return state;\n  }\n}); // root selector\n\nexport const sGetEditDashboardRoot = state => state.editDashboard; // selectors\n\nexport const sGetIsEditing = state => !isEmpty(state.editDashboard);\nexport const sGetIsPrintPreviewView = state => sGetEditDashboardRoot(state).printPreviewView;\nexport const sGetIsNewDashboard = state => {\n  return !isEmpty(state.editDashboard) && sGetEditDashboardRoot(state).id === '';\n};\nexport const sGetEditDashboardName = state => sGetEditDashboardRoot(state).name;\nexport const sGetEditDashboardDescription = state => sGetEditDashboardRoot(state).description;\nexport const sGetEditDashboardItems = state => orObject(sGetEditDashboardRoot(state)).dashboardItems;","import { apiFetchDashboard } from './dashboards';\nexport const createDashboardMutation = {\n  resource: 'dashboards',\n  type: 'create',\n  data: ({\n    data\n  }) => data\n};\nexport const updateDashboardMutation = {\n  resource: 'dashboards',\n  type: 'update',\n  id: ({\n    id\n  }) => id,\n  data: ({\n    data\n  }) => data\n};\n\nconst generatePayload = (dashboard = {}, data) => {\n  return { ...dashboard,\n    name: data.name,\n    description: data.description,\n    dashboardItems: data.dashboardItems.map(item => ({ ...item,\n      width: item.w,\n      height: item.h\n    }))\n  };\n};\n\nexport const updateDashboard = async (dataEngine, data) => {\n  const dashboard = await apiFetchDashboard(dataEngine, data.id);\n  const {\n    response\n  } = await dataEngine.mutate(updateDashboardMutation, {\n    variables: {\n      id: data.id,\n      data: generatePayload(dashboard, data)\n    }\n  });\n  return response.uid;\n};\nexport const postDashboard = async (dataEngine, data) => {\n  const {\n    response\n  } = await dataEngine.mutate(createDashboardMutation, {\n    variables: {\n      data: generatePayload({}, data)\n    }\n  });\n  return response.uid;\n};","import { generateUid } from 'd2/uid';\nimport i18n from '@dhis2/d2-i18n';\nimport { RECEIVED_EDIT_DASHBOARD, START_NEW_DASHBOARD, RECEIVED_NOT_EDITING, RECEIVED_TITLE, RECEIVED_DESCRIPTION, RECEIVED_DASHBOARD_LAYOUT, ADD_DASHBOARD_ITEM, UPDATE_DASHBOARD_ITEM, REMOVE_DASHBOARD_ITEM, SET_PRINT_PREVIEW_VIEW, CLEAR_PRINT_PREVIEW_VIEW, sGetEditDashboardRoot } from '../reducers/editDashboard';\nimport { tFetchDashboards } from './dashboards';\nimport { updateDashboard, postDashboard } from '../api/editDashboard';\nimport { NEW_ITEM_SHAPE, getGridItemProperties, getPageBreakItemShape, getPrintTitlePageItemShape } from '../modules/gridUtil';\nimport { itemTypeMap, PAGEBREAK, PRINT_TITLE_PAGE } from '../modules/itemTypes';\nimport { convertUiItemsToBackend } from '../modules/uiBackendItemConverter'; // actions\n\nexport const acSetEditDashboard = (dashboard, items) => {\n  const val = { ...dashboard,\n    dashboardItems: items\n  };\n  return {\n    type: RECEIVED_EDIT_DASHBOARD,\n    value: val\n  };\n};\nexport const acSetEditNewDashboard = () => ({\n  type: START_NEW_DASHBOARD\n});\nexport const acClearEditDashboard = () => ({\n  type: RECEIVED_NOT_EDITING\n});\nexport const acSetPrintPreviewView = () => ({\n  type: SET_PRINT_PREVIEW_VIEW\n});\nexport const acClearPrintPreviewView = () => ({\n  type: CLEAR_PRINT_PREVIEW_VIEW\n});\nexport const acSetDashboardTitle = value => ({\n  type: RECEIVED_TITLE,\n  value\n});\nexport const acSetDashboardDescription = value => ({\n  type: RECEIVED_DESCRIPTION,\n  value\n});\nexport const acUpdateDashboardLayout = value => ({\n  type: RECEIVED_DASHBOARD_LAYOUT,\n  value\n});\nexport const acAddDashboardItem = item => {\n  const type = item.type;\n  delete item.type;\n  const itemPropName = itemTypeMap[type].propName;\n  const id = generateUid();\n  const gridItemProperties = getGridItemProperties(id);\n  let shape;\n\n  if (type === PAGEBREAK) {\n    const yPos = item.yPos || 0;\n    shape = getPageBreakItemShape(yPos, item.isStatic);\n  } else if (type === PRINT_TITLE_PAGE) {\n    shape = getPrintTitlePageItemShape();\n  } else {\n    shape = NEW_ITEM_SHAPE;\n  }\n\n  return {\n    type: ADD_DASHBOARD_ITEM,\n    value: {\n      id,\n      type,\n      position: item.position || null,\n      [itemPropName]: item.content,\n      ...NEW_ITEM_SHAPE,\n      ...gridItemProperties,\n      ...shape\n    }\n  };\n};\nexport const acUpdateDashboardItem = item => ({\n  type: UPDATE_DASHBOARD_ITEM,\n  value: item\n});\nexport const acRemoveDashboardItem = value => ({\n  type: REMOVE_DASHBOARD_ITEM,\n  value\n}); // thunks\n\nexport const tSaveDashboard = () => async (dispatch, getState, dataEngine) => {\n  const dashboard = sGetEditDashboardRoot(getState());\n  const dashboardToSave = { ...dashboard,\n    dashboardItems: convertUiItemsToBackend(dashboard.dashboardItems),\n    name: dashboard.name || i18n.t('Untitled dashboard')\n  };\n  const dashboardId = dashboardToSave.id ? await updateDashboard(dataEngine, dashboardToSave) : await postDashboard(dataEngine, dashboardToSave); // update the dashboard list\n\n  await dispatch(tFetchDashboards());\n  return Promise.resolve(dashboardId);\n};","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport DeleteItemButton from './DeleteItemButton';\nimport { acRemoveDashboardItem } from '../../../actions/editDashboard';\nimport classes from './styles/ItemHeader.module.css';\n\nconst EditItemActions = ({\n  itemId,\n  acRemoveDashboardItem\n}) => {\n  const handleDeleteItem = () => acRemoveDashboardItem(itemId);\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.itemActionsWrap\n  }, /*#__PURE__*/React.createElement(DeleteItemButton, {\n    onClick: handleDeleteItem\n  }));\n};\n\nEditItemActions.propTypes = {\n  acRemoveDashboardItem: PropTypes.func,\n  itemId: PropTypes.string\n};\nconst mapDispatchToProps = {\n  acRemoveDashboardItem\n};\nexport default connect(null, mapDispatchToProps)(EditItemActions);","import React from 'react';\nimport { colors } from '@dhis2/ui';\n\nconst WarningIcon = () => /*#__PURE__*/React.createElement(\"svg\", {\n  xmlns: \"http://www.w3.org/2000/svg\",\n  height: \"24\",\n  viewBox: \"0 0 24 24\",\n  width: \"24\",\n  fill: colors.grey600\n}, /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M0 0h24v24H0z\",\n  fill: \"none\"\n}), /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M12 2C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2zm1 15h-2v-6h2v6zm0-8h-2V7h2v2z\"\n}));\n\nexport default WarningIcon;","import React from 'react';\nimport { Tooltip } from '@dhis2/ui';\nimport i18n from '@dhis2/d2-i18n';\nimport InfoIcon from '../../../icons/Info';\nimport classes from './styles/PrintItemInfo.module.css';\n\nconst PrintWarning = () => /*#__PURE__*/React.createElement(\"div\", {\n  className: classes.warning\n}, /*#__PURE__*/React.createElement(Tooltip, {\n  content: i18n.t('This item has been shortened to fit on one page'),\n  placement: \"bottom\"\n}, /*#__PURE__*/React.createElement(InfoIcon, null)));\n\nexport default PrintWarning;","export const EDIT = 'edit';\nexport const NEW = 'new';\nexport const VIEW = 'view';\nexport const PRINT = 'print';\nexport const PRINT_LAYOUT = 'print-layout';\nexport const isEditMode = mode => [EDIT, NEW].includes(mode);\nexport const isPrintMode = mode => [PRINT, PRINT_LAYOUT].includes(mode);\nexport const isViewMode = mode => mode === VIEW;","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport ViewItemActions from './ViewItemActions';\nimport EditItemActions from './EditItemActions';\nimport PrintItemInfo from './PrintItemInfo';\nimport { VIEW, EDIT, PRINT_LAYOUT } from '../../Dashboard/dashboardModes';\nimport classes from './styles/ItemHeader.module.css';\n\nconst getItemActionsMap = isShortened => {\n  return {\n    [VIEW]: ViewItemActions,\n    [EDIT]: EditItemActions,\n    [PRINT_LAYOUT]: isShortened ? PrintItemInfo : null\n  };\n};\n\nconst ItemHeader = /*#__PURE__*/React.forwardRef(({\n  dashboardMode,\n  title,\n  isShortened,\n  ...rest\n}, ref) => {\n  const Actions = getItemActionsMap(isShortened)[dashboardMode];\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.itemHeaderWrap,\n    ref: ref\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    className: classes.itemTitle\n  }, title), Actions ? /*#__PURE__*/React.createElement(Actions, rest) : null);\n});\nItemHeader.displayName = 'ItemHeader';\nItemHeader.propTypes = {\n  dashboardMode: PropTypes.string,\n  isShortened: PropTypes.bool,\n  title: PropTypes.string\n};\nexport default connect(null, null, null, {\n  forwardRef: true\n})(ItemHeader);","import React, { useState, createRef } from 'react';\nimport PropTypes from 'prop-types';\nimport { useConfig } from '@dhis2/app-runtime';\nimport { isSingleValue, isYearOverYear, VIS_TYPE_GAUGE, VIS_TYPE_PIE } from '@dhis2/analytics';\nimport { Button, Menu, Popover, MenuItem, Divider, colors } from '@dhis2/ui';\nimport i18n from '@dhis2/d2-i18n';\nimport TableIcon from '@material-ui/icons/ViewList';\nimport ChartIcon from '@material-ui/icons/InsertChart';\nimport MapIcon from '@material-ui/icons/Public';\nimport LaunchIcon from '@material-ui/icons/Launch';\nimport { ThreeDots, SpeechBubble, Fullscreen, ExitFullscreen } from './assets/icons';\nimport { getLink } from './Visualization/plugin';\nimport { CHART, MAP, REPORT_TABLE, EVENT_CHART, EVENT_REPORT, isTrackerDomainType, hasMapView, getAppName } from '../../../modules/itemTypes';\nimport { useSystemSettings } from '../../SystemSettingsProvider';\nconst iconFill = {\n  fill: colors.grey600\n};\n\nconst ItemHeaderButtons = props => {\n  const [menuIsOpen, setMenuIsOpen] = useState(props.isOpen);\n  const {\n    baseUrl\n  } = useConfig();\n  const {\n    item,\n    visualization,\n    onSelectActiveType,\n    activeType\n  } = props;\n  const {\n    openInRelevantApp,\n    showInterpretationsAndDetails,\n    switchViewType,\n    fullscreenAllowedInSettings\n  } = useSystemSettings().settings;\n  const isTrackerType = isTrackerDomainType(item.type);\n\n  const onViewTable = () => {\n    closeMenu();\n    onSelectActiveType(isTrackerType ? EVENT_REPORT : REPORT_TABLE);\n  };\n\n  const onViewChart = () => {\n    closeMenu();\n    onSelectActiveType(isTrackerType ? EVENT_CHART : CHART);\n  };\n\n  const onViewMap = () => {\n    closeMenu();\n    onSelectActiveType(MAP);\n  };\n\n  const itemHasMapView = () => hasMapView(item.type);\n\n  const handleInterpretationClick = () => {\n    props.onToggleFooter();\n\n    if (menuIsOpen) {\n      closeMenu();\n    }\n  };\n\n  const handleToggleFullscreenClick = () => {\n    props.onToggleFullscreen();\n    closeMenu();\n  };\n\n  const openMenu = () => setMenuIsOpen(true);\n\n  const closeMenu = () => setMenuIsOpen(false);\n\n  const type = visualization.type || item.type;\n  const canViewAs = switchViewType && !isSingleValue(type) && !isYearOverYear(type) && type !== VIS_TYPE_GAUGE && type !== VIS_TYPE_PIE;\n  const interpretationMenuLabel = props.activeFooter ? i18n.t(\"Hide interpretations and details\") : i18n.t(\"Show interpretations and details\");\n\n  const ViewAsMenuItems = () => /*#__PURE__*/React.createElement(React.Fragment, null, activeType !== CHART && activeType !== EVENT_CHART && /*#__PURE__*/React.createElement(MenuItem, {\n    dense: true,\n    label: i18n.t('View as Chart'),\n    onClick: onViewChart,\n    icon: /*#__PURE__*/React.createElement(ChartIcon, {\n      style: iconFill\n    })\n  }), activeType !== REPORT_TABLE && activeType !== EVENT_REPORT && /*#__PURE__*/React.createElement(MenuItem, {\n    dense: true,\n    label: i18n.t('View as Table'),\n    onClick: onViewTable,\n    icon: /*#__PURE__*/React.createElement(TableIcon, {\n      style: iconFill\n    })\n  }), itemHasMapView() && activeType !== MAP && /*#__PURE__*/React.createElement(MenuItem, {\n    dense: true,\n    label: i18n.t('View as Map'),\n    onClick: onViewMap,\n    icon: /*#__PURE__*/React.createElement(MapIcon, {\n      style: iconFill\n    })\n  }));\n\n  const buttonRef = /*#__PURE__*/createRef();\n  const fullscreenAllowed = props.fullscreenSupported && fullscreenAllowedInSettings;\n\n  if (!openInRelevantApp && !showInterpretationsAndDetails && !switchViewType && !fullscreenAllowed) {\n    return null;\n  }\n\n  return props.isFullscreen ? /*#__PURE__*/React.createElement(Button, {\n    small: true,\n    secondary: true,\n    onClick: props.onToggleFullscreen\n  }, /*#__PURE__*/React.createElement(ExitFullscreen, null)) : /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\n    ref: buttonRef\n  }, /*#__PURE__*/React.createElement(Button, {\n    small: true,\n    secondary: true,\n    onClick: openMenu,\n    dataTest: \"dashboarditem-menu-button\"\n  }, /*#__PURE__*/React.createElement(ThreeDots, null))), menuIsOpen && /*#__PURE__*/React.createElement(Popover, {\n    reference: buttonRef,\n    placement: \"auto-start\",\n    arrow: false,\n    onClickOutside: closeMenu\n  }, /*#__PURE__*/React.createElement(Menu, null, canViewAs && /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(ViewAsMenuItems, null), (showInterpretationsAndDetails || openInRelevantApp || fullscreenAllowed) && /*#__PURE__*/React.createElement(Divider, null)), openInRelevantApp && /*#__PURE__*/React.createElement(MenuItem, {\n    dense: true,\n    icon: /*#__PURE__*/React.createElement(LaunchIcon, {\n      style: {\n        fill: '#6e7a8a'\n      }\n    }),\n    label: i18n.t('Open in {{appName}} app', {\n      appName: getAppName(item.type)\n    }),\n    href: getLink(item, baseUrl),\n    target: \"_blank\"\n  }), showInterpretationsAndDetails && /*#__PURE__*/React.createElement(MenuItem, {\n    dense: true,\n    icon: /*#__PURE__*/React.createElement(SpeechBubble, null),\n    label: interpretationMenuLabel,\n    onClick: handleInterpretationClick\n  }), fullscreenAllowed && /*#__PURE__*/React.createElement(MenuItem, {\n    dense: true,\n    icon: /*#__PURE__*/React.createElement(Fullscreen, null),\n    label: i18n.t('View fullscreen'),\n    onClick: handleToggleFullscreenClick\n  }))));\n};\n\nItemHeaderButtons.propTypes = {\n  activeFooter: PropTypes.bool,\n  activeType: PropTypes.string,\n  fullscreenSupported: PropTypes.bool,\n  isFullscreen: PropTypes.bool,\n  isOpen: PropTypes.bool,\n  item: PropTypes.object,\n  visualization: PropTypes.object,\n  onSelectActiveType: PropTypes.func,\n  onToggleFooter: PropTypes.func,\n  onToggleFullscreen: PropTypes.func\n};\nexport default ItemHeaderButtons;","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { getVisualizationId } from '../../../modules/item';\nimport InterpretationsComponent from '@dhis2/d2-ui-interpretations';\nimport { useD2 } from '@dhis2/app-runtime-adapter-d2';\nimport classes from './styles/ItemFooter.module.css';\n\nconst ItemFooter = props => {\n  const {\n    d2\n  } = useD2({});\n  return /*#__PURE__*/React.createElement(\"div\", {\n    \"data-test\": \"dashboarditem-footer\"\n  }, /*#__PURE__*/React.createElement(\"hr\", {\n    className: classes.line\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.scrollContainer\n  }, /*#__PURE__*/React.createElement(InterpretationsComponent, {\n    d2: d2,\n    item: props.item,\n    type: props.item.type.toLowerCase(),\n    id: getVisualizationId(props.item),\n    appName: \"dashboard\"\n  })));\n};\n\nItemFooter.propTypes = {\n  item: PropTypes.object.isRequired\n};\nexport default ItemFooter;","function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport uniqueId from 'lodash/uniqueId';\nimport Visualization from './Visualization/Visualization';\nimport FatalErrorBoundary from './FatalErrorBoundary';\nimport ItemHeader from '../ItemHeader/ItemHeader';\nimport ItemHeaderButtons from './ItemHeaderButtons';\nimport ItemFooter from './ItemFooter';\nimport { WindowDimensionsCtx } from '../../WindowDimensionsProvider';\nimport { SystemSettingsCtx } from '../../SystemSettingsProvider';\nimport { apiPostDataStatistics } from '../../../api/dataStatistics';\nimport { apiFetchVisualization } from '../../../api/metadata';\nimport { sGetVisualization } from '../../../reducers/visualizations';\nimport { sGetSelectedItemActiveType } from '../../../reducers/selected';\nimport { sGetIsEditing } from '../../../reducers/editDashboard';\nimport { sGetItemFiltersRoot, DEFAULT_STATE_ITEM_FILTERS } from '../../../reducers/itemFilters';\nimport { acAddVisualization } from '../../../actions/visualizations';\nimport { acSetSelectedItemActiveType } from '../../../actions/selected';\nimport { pluginIsAvailable, resize as pluginResize } from './Visualization/plugin';\nimport { getDataStatisticsName } from '../../../modules/itemTypes';\nimport { getVisualizationId, getVisualizationName } from '../../../modules/item';\nimport memoizeOne from '../../../modules/memoizeOne';\nimport { isEditMode, isPrintMode, isViewMode } from '../../Dashboard/dashboardModes';\nimport { getItemHeightPx } from '../../../modules/gridUtil';\nimport getGridItemDomId from '../../../modules/getGridItemDomId';\nexport class Item extends Component {\n  constructor(props) {\n    super(props);\n\n    _defineProperty(this, \"state\", {\n      showFooter: false,\n      configLoaded: false,\n      isFullscreen: false\n    });\n\n    _defineProperty(this, \"isFullscreenSupported\", () => {\n      const el = document.querySelector(this.itemDomElSelector);\n      return !!(el !== null && el !== void 0 && el.requestFullscreen || el !== null && el !== void 0 && el.webkitRequestFullscreen);\n    });\n\n    _defineProperty(this, \"handleFullscreenChange\", () => {\n      this.setState({\n        isFullscreen: !!document.fullscreenElement || !!document.webkitFullscreenElement\n      }, () => pluginResize(this.props.item, this.state.isFullscreen));\n    });\n\n    _defineProperty(this, \"onToggleFullscreen\", () => {\n      if (!this.state.isFullscreen) {\n        const el = document.querySelector(this.itemDomElSelector);\n\n        if (el !== null && el !== void 0 && el.requestFullscreen) {\n          el.requestFullscreen();\n        } else if (el !== null && el !== void 0 && el.webkitRequestFullscreen) {\n          el.webkitRequestFullscreen();\n        }\n      } else {\n        document.exitFullscreen ? document.exitFullscreen() : document.webkitExitFullscreen();\n      }\n    });\n\n    _defineProperty(this, \"getUniqueKey\", memoizeOne(() => uniqueId()));\n\n    _defineProperty(this, \"onToggleFooter\", () => {\n      this.setState({\n        showFooter: !this.state.showFooter\n      }, this.props.onToggleItemExpanded(this.props.item.id));\n    });\n\n    _defineProperty(this, \"setActiveType\", type => {\n      type !== this.getActiveType() && this.props.setActiveType(this.props.item.id, type);\n    });\n\n    _defineProperty(this, \"getActiveType\", () => {\n      if (this.props.isEditing) {\n        return this.props.item.type;\n      }\n\n      return this.props.activeType || this.props.item.type;\n    });\n\n    _defineProperty(this, \"getAvailableHeight\", width => {\n      if (this.state.isFullscreen) {\n        return '95vh';\n      }\n\n      const calculatedHeight = getItemHeightPx(this.props.item, width) - this.headerRef.current.clientHeight - this.itemHeaderTotalMargin - this.itemContentPadding;\n      return this.memoizedGetContentHeight(calculatedHeight, this.contentRef ? this.contentRef.offsetHeight : null, isEditMode(this.props.dashboardMode) || isPrintMode(this.props.dashboardMode));\n    });\n\n    _defineProperty(this, \"getAvailableWidth\", () => {\n      var _document$querySelect;\n\n      const rect = (_document$querySelect = document.querySelector(this.itemDomElSelector)) === null || _document$querySelect === void 0 ? void 0 : _document$querySelect.getBoundingClientRect();\n      return rect && rect.width - this.itemContentPadding * 2;\n    });\n\n    this.contentRef = /*#__PURE__*/React.createRef();\n    this.headerRef = /*#__PURE__*/React.createRef();\n    this.itemDomElSelector = \".reactgriditem-\".concat(this.props.item.id);\n    const style = window.getComputedStyle(document.documentElement);\n    this.itemContentPadding = parseInt(style.getPropertyValue('--item-content-padding').replace('px', ''));\n    this.itemHeaderTotalMargin = parseInt(style.getPropertyValue('--item-header-margin-top').replace('px', '')) + parseInt(style.getPropertyValue('--item-header-margin-bottom').replace('px', ''));\n    this.memoizedGetContentHeight = memoizeOne((calculatedHeight, measuredHeight, preferMeasured) => preferMeasured ? measuredHeight || calculatedHeight : calculatedHeight);\n  }\n\n  async componentDidMount() {\n    this.props.updateVisualization(await apiFetchVisualization(this.props.item));\n\n    try {\n      if (this.props.settings.keyGatherAnalyticalObjectStatisticsInDashboardViews && isViewMode(this.props.dashboardMode)) {\n        await apiPostDataStatistics(getDataStatisticsName(this.props.item.type), getVisualizationId(this.props.item));\n      }\n    } catch (e) {\n      console.log(e);\n    }\n\n    this.setState({\n      configLoaded: true\n    });\n    const el = document.querySelector(this.itemDomElSelector);\n\n    if (el !== null && el !== void 0 && el.requestFullscreen) {\n      el.onfullscreenchange = this.handleFullscreenChange;\n    } else if (el !== null && el !== void 0 && el.webkitRequestFullscreen) {\n      el.onwebkitfullscreenchange = this.handleFullscreenChange;\n    }\n  }\n\n  componentWillUnmount() {\n    const el = document.querySelector(this.itemDomElSelector);\n\n    if (el !== null && el !== void 0 && el.onfullscreenchange) {\n      el.removeEventListener('onfullscreenchange', this.handleFullscreenChange);\n    } else if (el !== null && el !== void 0 && el.onwebkitfullscreenchange) {\n      el.removeEventListener('onwebkitfullscreenchange', this.handleFullscreenChange);\n    }\n  }\n\n  componentDidUpdate(prevProps) {\n    if (prevProps.gridWidth !== this.props.gridWidth) {\n      const el = document.querySelector(\"#\".concat(getGridItemDomId(this.props.item.id)));\n\n      if (typeof (el === null || el === void 0 ? void 0 : el.setViewportSize) === 'function') {\n        setTimeout(() => el.setViewportSize(el.clientWidth - 5, el.clientHeight - 5), 10);\n      } // call resize on Map item\n\n\n      pluginResize(this.props.item, this.state.isFullscreen);\n    }\n  }\n\n  render() {\n    const {\n      item,\n      dashboardMode,\n      itemFilters\n    } = this.props;\n    const {\n      showFooter\n    } = this.state;\n    const activeType = this.getActiveType();\n    const actionButtons = pluginIsAvailable(activeType || item.type) ? /*#__PURE__*/React.createElement(ItemHeaderButtons, {\n      item: item,\n      visualization: this.props.visualization,\n      onSelectActiveType: this.setActiveType,\n      onToggleFooter: this.onToggleFooter,\n      onToggleFullscreen: this.onToggleFullscreen,\n      activeType: activeType,\n      activeFooter: showFooter,\n      isFullscreen: this.state.isFullscreen,\n      fullscreenSupported: this.isFullscreenSupported()\n    }) : null;\n    return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(ItemHeader, {\n      title: getVisualizationName(item),\n      itemId: item.id,\n      actionButtons: actionButtons,\n      ref: this.headerRef,\n      dashboardMode: dashboardMode,\n      isShortened: item.shortened\n    }), /*#__PURE__*/React.createElement(FatalErrorBoundary, null, /*#__PURE__*/React.createElement(\"div\", {\n      key: this.getUniqueKey(itemFilters),\n      className: \"dashboard-item-content\",\n      ref: ref => this.contentRef = ref\n    }, this.state.configLoaded && /*#__PURE__*/React.createElement(WindowDimensionsCtx.Consumer, null, dimensions => /*#__PURE__*/React.createElement(Visualization, {\n      item: item,\n      activeType: activeType,\n      itemFilters: itemFilters,\n      availableHeight: this.getAvailableHeight(dimensions.width),\n      availableWidth: this.getAvailableWidth()\n    })))), isViewMode(dashboardMode) && showFooter ? /*#__PURE__*/React.createElement(ItemFooter, {\n      item: item\n    }) : null);\n  }\n\n}\nItem.propTypes = {\n  activeType: PropTypes.string,\n  dashboardMode: PropTypes.string,\n  gridWidth: PropTypes.number,\n  isEditing: PropTypes.bool,\n  item: PropTypes.object,\n  itemFilters: PropTypes.object,\n  setActiveType: PropTypes.func,\n  settings: PropTypes.object,\n  updateVisualization: PropTypes.func,\n  visualization: PropTypes.object,\n  onToggleItemExpanded: PropTypes.func\n};\nItem.defaultProps = {\n  item: {},\n  onToggleItemExpanded: Function.prototype,\n  visualization: {}\n};\n\nconst mapStateToProps = (state, ownProps) => {\n  var _ownProps$item;\n\n  const itemFilters = !isEditMode(ownProps.dashboardMode) ? sGetItemFiltersRoot(state) : DEFAULT_STATE_ITEM_FILTERS;\n  return {\n    activeType: sGetSelectedItemActiveType(state, (_ownProps$item = ownProps.item) === null || _ownProps$item === void 0 ? void 0 : _ownProps$item.id),\n    isEditing: sGetIsEditing(state),\n    itemFilters,\n    visualization: sGetVisualization(state, getVisualizationId(ownProps.item))\n  };\n};\n\nconst mapDispatchToProps = {\n  setActiveType: acSetSelectedItemActiveType,\n  updateVisualization: acAddVisualization\n};\n\nconst ItemWithSettings = props => /*#__PURE__*/React.createElement(SystemSettingsCtx.Consumer, null, ({\n  settings\n}) => /*#__PURE__*/React.createElement(Item, _extends({\n  settings: settings\n}, props)));\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ItemWithSettings);","import React from 'react';\nimport { colors } from '@dhis2/ui';\nconst style = {\n  backgroundColor: colors.grey200,\n  border: 'none',\n  height: '1px',\n  margin: '0px 0px 5px 0px'\n};\n\nconst Line = () => /*#__PURE__*/React.createElement(\"hr\", {\n  style: style\n});\n\nexport default Line;","import React, { useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport i18n from '@dhis2/d2-i18n';\nimport { colors } from '@dhis2/ui';\nimport { useConfig } from '@dhis2/app-runtime';\nimport { useD2 } from '@dhis2/app-runtime-adapter-d2';\nimport ItemHeader from '../ItemHeader/ItemHeader';\nimport Line from '../../../widgets/Line';\nimport { sGetMessagesRoot } from '../../../reducers/messages';\nimport { formatDate } from '../../../modules/util';\nimport { isViewMode } from '../../Dashboard/dashboardModes';\nimport './MessagesItem.css';\nconst PRIVATE = 'PRIVATE';\nconst messageTypes = {\n  [PRIVATE]: 'Private',\n  VALIDATION_RESULT: 'Validation',\n  TICKET: 'Ticket',\n  SYSTEM: 'System'\n};\nconst style = {\n  list: {\n    listStyleType: 'none',\n    paddingLeft: '0px'\n  },\n  seeAll: {\n    textAlign: 'center',\n    fontSize: '13px',\n    marginBottom: '5px'\n  },\n  sender: {\n    fontSize: '13px',\n    lineHeight: '15px',\n    margin: 0,\n    color: colors.grey800\n  },\n  snippet: {\n    color: colors.grey800,\n    fontSize: '13px',\n    lineHeight: '15px',\n    maxHeight: '30px',\n    overflow: 'hidden'\n  }\n};\n\nconst MessagesItem = ({\n  messages,\n  item,\n  dashboardMode\n}) => {\n  const [uiLocale, setUiLocale] = useState('');\n  const {\n    d2\n  } = useD2({});\n  const {\n    baseUrl\n  } = useConfig();\n  useEffect(() => {\n    const getUiLocale = async () => {\n      const uiLocale = await d2.currentUser.userSettings.get('keyUiLocale');\n      setUiLocale(uiLocale);\n    };\n\n    getUiLocale();\n  }, []);\n\n  const getMessageHref = msg => {\n    const msgIdentifier = msg ? \"#/\".concat(msg.messageType, \"/\").concat(msg.id) : '';\n    return \"\".concat(baseUrl, \"/dhis-web-messaging/\").concat(msgIdentifier);\n  };\n\n  const getMessageSender = msg => {\n    const latestMsg = msg.messages.slice(-1)[0];\n    return latestMsg.sender ? latestMsg.sender.displayName : '';\n  };\n\n  const getMessageItems = () => {\n    const modeClass = isViewMode(dashboardMode) ? 'view' : null;\n    return messages.map(msg => {\n      const redirectToMsg = () => {\n        if (isViewMode(dashboardMode)) {\n          document.location.href = getMessageHref(msg);\n        }\n      };\n\n      const sender = msg.messageType === PRIVATE ? getMessageSender(msg) : messageTypes[msg.messageType];\n      const readClass = !msg.read ? 'unread' : null;\n      const latestMsg = msg.messages.slice(-1)[0];\n      const msgDate = latestMsg.lastUpdated;\n      return /*#__PURE__*/React.createElement(\"li\", {\n        className: \"message-item \".concat(modeClass),\n        key: msg.id,\n        onClick: redirectToMsg\n      }, /*#__PURE__*/React.createElement(\"p\", {\n        className: \"message-title \".concat(readClass)\n      }, msg.displayName, \" (\", msg.messageCount, \")\"), /*#__PURE__*/React.createElement(\"p\", {\n        style: style.sender\n      }, sender, \" - \", formatDate(msgDate, uiLocale)), /*#__PURE__*/React.createElement(\"p\", {\n        style: style.snippet\n      }, latestMsg.text));\n    });\n  };\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(ItemHeader, {\n    title: i18n.t('Messages'),\n    itemId: item.id,\n    dashboardMode: dashboardMode,\n    isShortened: item.shortened\n  }), /*#__PURE__*/React.createElement(Line, null), messages.length > 0 && /*#__PURE__*/React.createElement(\"div\", {\n    className: \"dashboard-item-content\"\n  }, /*#__PURE__*/React.createElement(\"ul\", {\n    style: style.list\n  }, getMessageItems()), /*#__PURE__*/React.createElement(\"div\", {\n    style: style.seeAll\n  }, /*#__PURE__*/React.createElement(\"a\", {\n    href: getMessageHref()\n  }, i18n.t('See all messages')))));\n};\n\nMessagesItem.propTypes = {\n  dashboardMode: PropTypes.string,\n  item: PropTypes.object,\n  messages: PropTypes.array\n};\n\nconst mapStateToProps = state => {\n  return {\n    messages: Object.values(sGetMessagesRoot(state))\n  };\n};\n\nconst MessagesContainer = connect(mapStateToProps, null)(MessagesItem);\nexport default MessagesContainer;","import React from 'react';\nimport PropTypes from 'prop-types';\nimport i18n from '@dhis2/d2-i18n';\nimport ItemHeader from '../ItemHeader/ItemHeader';\nimport NotInterestedIcon from '@material-ui/icons/NotInterested';\n\nconst NotSupportedItem = props => /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(ItemHeader, {\n  title: i18n.t('Item type \"{{type}}\" not supported', {\n    type: props.item.type\n  }),\n  itemId: props.item.id,\n  dashboardMode: props.dashboardMode,\n  isShortened: props.item.shortened\n}), /*#__PURE__*/React.createElement(\"div\", {\n  style: {\n    display: 'flex',\n    justifyContent: 'center',\n    alignItems: 'center',\n    height: '90%'\n  }\n}, /*#__PURE__*/React.createElement(NotInterestedIcon, {\n  style: {\n    width: 100,\n    height: 100,\n    align: 'center'\n  },\n  color: \"disabled\"\n})));\n\nNotSupportedItem.propTypes = {\n  dashboardMode: PropTypes.string,\n  item: PropTypes.object\n};\nexport default NotSupportedItem;","import React from 'react';\nimport { colors } from '@dhis2/ui';\nimport PropTypes from 'prop-types';\n\nconst DescriptionIcon = ({\n  className\n}) => /*#__PURE__*/React.createElement(\"svg\", {\n  className: className,\n  xmlns: \"http://www.w3.org/2000/svg\",\n  viewBox: \"0 0 24 24\",\n  fill: colors.grey500\n}, /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M0 0h24v24H0z\",\n  fill: \"none\"\n}), /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M14 2H6c-1.1 0-1.99.9-1.99 2L4 20c0 1.1.89 2 1.99 2H18c1.1 0 2-.9 2-2V8l-6-6zm2 16H8v-2h8v2zm0-4H8v-2h8v2zm-3-5V3.5L18.5 9H13z\"\n}));\n\nDescriptionIcon.propTypes = {\n  className: PropTypes.string\n};\nexport default DescriptionIcon;","import React from 'react';\nimport { colors } from '@dhis2/ui';\nimport PropTypes from 'prop-types';\n\nconst DeleteIcon = ({\n  className\n}) => /*#__PURE__*/React.createElement(\"svg\", {\n  className: className,\n  xmlns: \"http://www.w3.org/2000/svg\",\n  width: \"18\",\n  height: \"18\",\n  viewBox: \"0 0 24 24\",\n  fill: colors.red500\n}, /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M6 19c0 1.1.9 2 2 2h8c1.1 0 2-.9 2-2V7H6v12zM19 4h-3.5l-1-1h-5l-1 1H5v2h14V4z\"\n}), /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M0 0h24v24H0z\",\n  fill: \"none\"\n}));\n\nDeleteIcon.propTypes = {\n  className: PropTypes.string\n};\nexport default DeleteIcon;","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { colors } from '@dhis2/ui';\nimport { useConfig } from '@dhis2/app-runtime';\nimport DescriptionIcon from '../../../icons/Description';\nimport DeleteIcon from '../../../icons/Delete';\nimport Line from '../../../widgets/Line';\nimport { itemTypeMap, getItemUrl } from '../../../modules/itemTypes';\nimport { orArray } from '../../../modules/util';\nimport { tRemoveListItemContent } from './actions';\nimport ItemHeader from '../ItemHeader/ItemHeader';\nimport { isEditMode } from '../../Dashboard/dashboardModes';\nimport classes from './Item.module.css';\n\nconst getItemTitle = item => itemTypeMap[item.type].pluralTitle;\n\nconst getContentItems = item => orArray(item[itemTypeMap[item.type].propName]).filter((item, index, array) => array.findIndex(el => el.id === item.id) === index);\n\nconst ListItem = ({\n  item,\n  dashboardMode,\n  tRemoveListItemContent\n}) => {\n  const {\n    baseUrl\n  } = useConfig();\n  const contentItems = getContentItems(item);\n\n  const getLink = contentItem => {\n    const deleteButton = /*#__PURE__*/React.createElement(\"button\", {\n      className: classes.deletebutton,\n      onClick: () => tRemoveListItemContent(item, contentItem)\n    }, /*#__PURE__*/React.createElement(DeleteIcon, {\n      className: classes.deleteicon\n    }));\n    return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"a\", {\n      className: classes.link,\n      style: {\n        color: colors.grey900\n      },\n      href: getItemUrl(item.type, contentItem, baseUrl)\n    }, contentItem.name), isEditMode(dashboardMode) ? deleteButton : null);\n  };\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(ItemHeader, {\n    title: getItemTitle(item),\n    itemId: item.id,\n    dashboardMode: dashboardMode,\n    isShortened: item.shortened\n  }), /*#__PURE__*/React.createElement(Line, null), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"dashboard-item-content\"\n  }, /*#__PURE__*/React.createElement(\"ul\", {\n    className: classes.list\n  }, contentItems.map(contentItem => /*#__PURE__*/React.createElement(\"li\", {\n    className: classes.item,\n    key: contentItem.id\n  }, /*#__PURE__*/React.createElement(DescriptionIcon, {\n    className: classes.itemicon\n  }), getLink(contentItem))))));\n};\n\nListItem.propTypes = {\n  dashboardMode: PropTypes.string,\n  item: PropTypes.object,\n  tRemoveListItemContent: PropTypes.func\n};\nexport default connect(null, {\n  tRemoveListItemContent\n})(ListItem);","import { acUpdateDashboardItem, acRemoveDashboardItem } from '../../../actions/editDashboard';\nimport { itemTypeMap } from '../../../modules/itemTypes';\nexport const tRemoveListItemContent = (dashboardItem, content) => dispatch => {\n  const listItemType = itemTypeMap[dashboardItem.type].propName;\n  const newContent = dashboardItem[listItemType].filter(item => item.id !== content.id);\n\n  if (newContent.length) {\n    dashboardItem[listItemType] = newContent;\n    dispatch(acUpdateDashboardItem(dashboardItem));\n  } else {\n    dispatch(acRemoveDashboardItem(dashboardItem));\n  }\n};","/** @module reducers/editDashboard */\nimport update from 'immutability-helper';\nimport isEmpty from 'lodash/isEmpty';\nimport { orArray } from '../modules/util';\nexport const SET_PRINT_DASHBOARD = 'SET_PRINT_DASHBOARD';\nexport const CLEAR_PRINT_DASHBOARD = 'CLEAR_PRINT_DASHBOARD';\nexport const ADD_PRINT_DASHBOARD_ITEM = 'ADD_PRINT_DASHBOARD_ITEM';\nexport const SET_PRINT_DASHBOARD_LAYOUT = 'SET_PRINT_DASHBOARD_LAYOUT';\nexport const REMOVE_PRINT_DASHBOARD_ITEM = 'REMOVE_PRINT_DASHBOARD_ITEM';\nexport const UPDATE_PRINT_DASHBOARD_ITEM = 'UPDATE_PRINT_DASHBOARD_ITEM';\nexport const DEFAULT_STATE_PRINT_DASHBOARD = {};\nconst DEFAULT_DASHBOARD_ITEMS = [];\nexport const NEW_PRINT_DASHBOARD_STATE = {\n  id: '',\n  name: '',\n  access: {},\n  description: '',\n  dashboardItems: DEFAULT_DASHBOARD_ITEMS\n};\nexport default ((state = DEFAULT_STATE_PRINT_DASHBOARD, action) => {\n  switch (action.type) {\n    case SET_PRINT_DASHBOARD:\n      {\n        const newState = {};\n        Object.keys(NEW_PRINT_DASHBOARD_STATE).map(k => newState[k] = action.value[k]);\n        return newState;\n      }\n\n    case CLEAR_PRINT_DASHBOARD:\n      return DEFAULT_STATE_PRINT_DASHBOARD;\n\n    case ADD_PRINT_DASHBOARD_ITEM:\n      if (!action.value.position) {\n        return update(state, {\n          dashboardItems: {\n            $unshift: [action.value]\n          }\n        });\n      }\n\n      return update(state, {\n        dashboardItems: {\n          $splice: [[parseInt(action.value.position), 0, action.value]]\n        }\n      });\n\n    case REMOVE_PRINT_DASHBOARD_ITEM:\n      {\n        const idToRemove = action.value;\n        const dashboardItemIndex = state.dashboardItems.findIndex(item => item.id === idToRemove);\n\n        if (dashboardItemIndex > -1) {\n          return update(state, {\n            dashboardItems: {\n              $splice: [[dashboardItemIndex, 1]]\n            }\n          });\n        }\n\n        return state;\n      }\n\n    case UPDATE_PRINT_DASHBOARD_ITEM:\n      {\n        const dashboardItem = action.value;\n        const dashboardItemIndex = state.dashboardItems.findIndex(item => item.id === dashboardItem.id);\n\n        if (dashboardItemIndex > -1) {\n          const newState = update(state, {\n            dashboardItems: {\n              $splice: [[dashboardItemIndex, 1, Object.assign({}, dashboardItem)]]\n            }\n          });\n          return newState;\n        }\n\n        return state;\n      }\n\n    case SET_PRINT_DASHBOARD_LAYOUT:\n      {\n        const stateItems = orArray(state.dashboardItems);\n        let layoutHasChanged = false;\n        const newStateItems = action.value.map(({\n          x,\n          y,\n          w,\n          h,\n          i\n        }) => {\n          const stateItem = stateItems.find(si => si.id === i);\n\n          if (!(stateItem.x === x && stateItem.y === y && stateItem.w === w && stateItem.h === h)) {\n            layoutHasChanged = true;\n            return Object.assign({}, stateItem, {\n              w,\n              h,\n              x,\n              y\n            });\n          }\n\n          return stateItem;\n        });\n        return layoutHasChanged ? { ...state,\n          dashboardItems: newStateItems\n        } : state;\n      }\n\n    default:\n      return state;\n  }\n}); // root selector\n\nexport const sGetPrintDashboardRoot = state => state.printDashboard; // selectors\n\nexport const sGetIsPrinting = state => !isEmpty(state.printDashboard);\nexport const sGetPrintDashboardName = state => sGetPrintDashboardRoot(state).name;\nexport const sGetPrintDashboardDescription = state => sGetPrintDashboardRoot(state).description;\nexport const sGetPrintDashboardItems = state => {\n  var _sGetPrintDashboardRo;\n\n  return ((_sGetPrintDashboardRo = sGetPrintDashboardRoot(state)) === null || _sGetPrintDashboardRo === void 0 ? void 0 : _sGetPrintDashboardRo.dashboardItems) || DEFAULT_DASHBOARD_ITEMS;\n};","import React from 'react';\nimport { connect } from 'react-redux';\nimport i18n from '@dhis2/d2-i18n';\nimport PropTypes from 'prop-types';\nimport Input from '@material-ui/core/Input';\nimport ItemHeader from '../ItemHeader/ItemHeader';\nimport PrintItemInfo from '../ItemHeader/PrintItemInfo';\nimport Line from '../../../widgets/Line';\nimport { Parser as RichTextParser, Editor as RichTextEditor } from '@dhis2/d2-ui-rich-text';\nimport { acUpdateDashboardItem } from '../../../actions/editDashboard';\nimport { sGetEditDashboardItems } from '../../../reducers/editDashboard';\nimport { sGetDashboardItems } from '../../../reducers/dashboards';\nimport { sGetIsPrinting, sGetPrintDashboardItems } from '../../../reducers/printDashboard';\nimport { isEditMode, PRINT_LAYOUT } from '../../Dashboard/dashboardModes';\nconst style = {\n  textDiv: {\n    padding: '10px',\n    whiteSpace: 'pre-line',\n    lineHeight: '20px'\n  },\n  textField: {\n    fontSize: '14px',\n    fontStretch: 'normal',\n    width: '90%',\n    margin: '0 auto',\n    display: 'block',\n    lineHeight: '24px'\n  },\n  container: {\n    marginBottom: '20px',\n    marginTop: '20px'\n  }\n};\n\nconst TextItem = props => {\n  const {\n    item,\n    dashboardMode,\n    text,\n    acUpdateDashboardItem\n  } = props;\n\n  const onChangeText = event => {\n    const updatedItem = { ...item,\n      text: event.target.value\n    };\n    acUpdateDashboardItem(updatedItem);\n  };\n\n  const viewItem = () => {\n    const textDivStyle = Object.assign({}, style.textField, style.textDiv);\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"dashboard-item-content\",\n      style: style.container\n    }, /*#__PURE__*/React.createElement(RichTextParser, {\n      style: textDivStyle\n    }, text));\n  };\n\n  const editItem = () => {\n    return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(ItemHeader, {\n      title: i18n.t('Text item'),\n      itemId: item.id,\n      dashboardMode: dashboardMode\n    }), /*#__PURE__*/React.createElement(Line, null), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"dashboard-item-content\"\n    }, /*#__PURE__*/React.createElement(RichTextEditor, {\n      onEdit: onChangeText\n    }, /*#__PURE__*/React.createElement(Input, {\n      value: text,\n      multiline: true,\n      fullWidth: true,\n      style: style.textField,\n      placeholder: i18n.t('Add text here'),\n      onChange: onChangeText\n    }))));\n  };\n\n  const printItem = () => {\n    const textDivStyle = Object.assign({}, style.textField, style.textDiv);\n    return /*#__PURE__*/React.createElement(React.Fragment, null, props.item.shortened ? /*#__PURE__*/React.createElement(PrintItemInfo, null) : null, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"dashboard-item-content\",\n      style: style.container\n    }, /*#__PURE__*/React.createElement(RichTextParser, {\n      style: textDivStyle\n    }, text)));\n  };\n\n  let textItem;\n\n  if (isEditMode(dashboardMode)) {\n    textItem = editItem;\n  } else if (dashboardMode === PRINT_LAYOUT) {\n    textItem = printItem;\n  } else {\n    textItem = viewItem;\n  }\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, textItem());\n};\n\nconst mapStateToProps = (state, ownProps) => {\n  const isPrintPreview = sGetIsPrinting(state);\n  let items;\n\n  if (isPrintPreview) {\n    items = sGetPrintDashboardItems(state);\n  } else if (isEditMode(ownProps.dashboardMode)) {\n    items = sGetEditDashboardItems(state);\n  } else {\n    items = sGetDashboardItems(state);\n  }\n\n  const item = items.find(item => item.id === ownProps.item.id);\n  return {\n    text: item ? item.text : ''\n  };\n};\n\nTextItem.propTypes = {\n  acUpdateDashboardItem: PropTypes.func,\n  dashboardMode: PropTypes.string,\n  item: PropTypes.object,\n  text: PropTypes.string\n};\nexport default connect(mapStateToProps, {\n  acUpdateDashboardItem\n})(TextItem);","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport NotInterestedIcon from '@material-ui/icons/NotInterested';\nimport { useD2 } from '@dhis2/app-runtime-adapter-d2';\nimport ItemHeader from '../ItemHeader/ItemHeader';\nimport Line from '../../../widgets/Line';\nimport { FILTER_ORG_UNIT } from '../../../actions/itemFilters';\nimport { sGetItemFiltersRoot, DEFAULT_STATE_ITEM_FILTERS } from '../../../reducers/itemFilters';\nimport { EDIT, isEditMode } from '../../Dashboard/dashboardModes';\n\nconst getIframeSrc = (appDetails, item, itemFilters) => {\n  let iframeSrc = \"\".concat(appDetails.launchUrl, \"?dashboardItemId=\").concat(item.id);\n\n  if (itemFilters[FILTER_ORG_UNIT] && itemFilters[FILTER_ORG_UNIT].length) {\n    const ouIds = itemFilters[FILTER_ORG_UNIT].map(ouFilter => ouFilter.path.split('/').slice(-1)[0]);\n    iframeSrc += \"&userOrgUnit=\".concat(ouIds.join(','));\n  }\n\n  return iframeSrc;\n};\n\nconst AppItem = ({\n  dashboardMode,\n  item,\n  itemFilters\n}) => {\n  var _appDetails, _appDetails$settings, _appDetails$settings$;\n\n  const {\n    d2\n  } = useD2({});\n  let appDetails;\n  const appKey = item.appKey;\n\n  if (appKey) {\n    appDetails = d2.system.installedApps.find(app => app.key === appKey);\n  }\n\n  const hideTitle = ((_appDetails = appDetails) === null || _appDetails === void 0 ? void 0 : (_appDetails$settings = _appDetails.settings) === null || _appDetails$settings === void 0 ? void 0 : (_appDetails$settings$ = _appDetails$settings.dashboardWidget) === null || _appDetails$settings$ === void 0 ? void 0 : _appDetails$settings$.hideTitle) && dashboardMode !== EDIT;\n  return appDetails && appDetails.name && appDetails.launchUrl ? /*#__PURE__*/React.createElement(React.Fragment, null, !hideTitle && /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(ItemHeader, {\n    title: appDetails.name,\n    itemId: item.id,\n    dashboardMode: dashboardMode,\n    isShortened: item.shortened\n  }), /*#__PURE__*/React.createElement(Line, null)), /*#__PURE__*/React.createElement(\"iframe\", {\n    title: appDetails.name,\n    src: getIframeSrc(appDetails, item, itemFilters),\n    className: !hideTitle ? 'dashboard-item-content' : 'dashboard-item-content-hidden-title',\n    style: {\n      border: 'none'\n    }\n  })) : /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(ItemHeader, {\n    title: \"\".concat(appKey, \" app not found\")\n  }), /*#__PURE__*/React.createElement(Line, null), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"dashboard-item-content\",\n    style: {\n      display: 'flex',\n      justifyContent: 'center',\n      alignItems: 'center',\n      height: '90%'\n    }\n  }, /*#__PURE__*/React.createElement(NotInterestedIcon, {\n    color: \"disabled\",\n    disabled: true,\n    style: {\n      width: 100,\n      height: 100,\n      align: 'center'\n    }\n  })));\n};\n\nAppItem.propTypes = {\n  dashboardMode: PropTypes.string,\n  item: PropTypes.object,\n  itemFilters: PropTypes.object\n};\n\nconst mapStateToProps = (state, ownProps) => {\n  const itemFilters = !isEditMode(ownProps.dashboardMode) ? sGetItemFiltersRoot(state) : DEFAULT_STATE_ITEM_FILTERS;\n  return {\n    itemFilters\n  };\n};\n\nexport default connect(mapStateToProps)(AppItem);","import React from 'react';\nimport PropTypes from 'prop-types';\nimport i18n from '@dhis2/d2-i18n';\nimport { colors } from '@dhis2/ui';\nimport ItemHeader from '../ItemHeader/ItemHeader';\nconst style = {\n  margin: '21px 28px',\n  fontSize: '14px',\n  lineHeight: '18px',\n  color: colors.grey600\n};\n\nconst SpacerItem = props => {\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(ItemHeader, {\n    title: i18n.t('Spacer'),\n    itemId: props.item.id,\n    dashboardMode: props.dashboardMode,\n    isShortened: props.item.shortened\n  }), /*#__PURE__*/React.createElement(\"p\", {\n    style: style\n  }, i18n.t('Use a spacer to create empty vertical space between other dashboard items.')));\n};\n\nSpacerItem.propTypes = {\n  dashboardMode: PropTypes.string,\n  item: PropTypes.object\n};\nexport default SpacerItem;","import React from 'react';\n\nconst PageBreakItem = () => /*#__PURE__*/React.createElement(\"div\", null);\n\nexport default PageBreakItem;","import React from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport i18n from '@dhis2/d2-i18n';\nimport { sGetSelectedId, sGetSelectedShowDescription } from '../../../reducers/selected';\nimport { sGetDashboardById, EMPTY_DASHBOARD } from '../../../reducers/dashboards';\nimport { sGetNamedItemFilters } from '../../../reducers/itemFilters';\nimport { sGetIsEditing } from '../../../reducers/editDashboard';\nimport { sGetPrintDashboardName, sGetPrintDashboardDescription } from '../../../reducers/printDashboard';\nimport classes from './styles/Item.module.css';\n\nconst PrintTitlePageItem = ({\n  name,\n  description,\n  itemFilters,\n  showDescription\n}) => {\n  const getItemFilterList = () => {\n    const listItems = itemFilters.map(({\n      name,\n      values\n    }) => /*#__PURE__*/React.createElement(\"li\", {\n      className: classes.filterListItem,\n      key: name\n    }, name, \": \", values.map(val => val.name).join(', ')));\n    return /*#__PURE__*/React.createElement(\"ul\", {\n      className: classes.filterList\n    }, listItems);\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.titlePage\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    className: classes.name\n  }, name), showDescription && description && /*#__PURE__*/React.createElement(\"p\", {\n    className: classes.description\n  }, description), itemFilters.length > 0 && /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"p\", {\n    className: classes.filterTitle\n  }, i18n.t('Filters applied')), getItemFilterList()));\n};\n\nPrintTitlePageItem.propTypes = {\n  description: PropTypes.string,\n  itemFilters: PropTypes.array,\n  name: PropTypes.string,\n  showDescription: PropTypes.bool\n};\nPrintTitlePageItem.defaultProps = {\n  description: '',\n  name: '',\n  showDescription: false\n};\n\nconst mapStateToProps = state => {\n  const id = sGetSelectedId(state);\n  const isEditMode = sGetIsEditing(state);\n  const viewDashboard = sGetDashboardById(state, id) || EMPTY_DASHBOARD;\n  const name = isEditMode ? sGetPrintDashboardName(state) || i18n.t('Untitled dashboard') : viewDashboard.displayName;\n  const description = isEditMode ? sGetPrintDashboardDescription(state) : viewDashboard.displayDescription;\n  return {\n    name,\n    description,\n    itemFilters: sGetNamedItemFilters(state),\n    showDescription: sGetSelectedShowDescription(state)\n  };\n};\n\nexport default connect(mapStateToProps)(PrintTitlePageItem);","import React from 'react';\nimport PropTypes from 'prop-types';\nimport VisualizationItem from './VisualizationItem/Item';\nimport MessagesItem from './MessagesItem/Item';\nimport NotSupportedItem from './NotSupportedItem/Item';\nimport ListItem from './ListItem/Item';\nimport TextItem from './TextItem/Item';\nimport AppItem from './AppItem/Item';\nimport SpacerItem from './SpacerItem/Item';\nimport PageBreakItem from './PageBreakItem/Item';\nimport PrintTitlePageItem from './PrintTitlePageItem/Item';\nimport { APP, VISUALIZATION, REPORT_TABLE, CHART, MAP, EVENT_CHART, EVENT_REPORT, MESSAGES, REPORTS, RESOURCES, USERS, TEXT, SPACER, PAGEBREAK, PRINT_TITLE_PAGE } from '../../modules/itemTypes';\n\nconst getGridItem = type => {\n  switch (type) {\n    case VISUALIZATION:\n    case REPORT_TABLE:\n    case CHART:\n    case MAP:\n    case EVENT_CHART:\n    case EVENT_REPORT:\n      return VisualizationItem;\n\n    case MESSAGES:\n      return MessagesItem;\n\n    case REPORTS:\n    case RESOURCES:\n    case USERS:\n      return ListItem;\n\n    case TEXT:\n      return TextItem;\n\n    case SPACER:\n      return SpacerItem;\n\n    case APP:\n      return AppItem;\n\n    case PAGEBREAK:\n      return PageBreakItem;\n\n    case PRINT_TITLE_PAGE:\n      return PrintTitlePageItem;\n\n    default:\n      return NotSupportedItem;\n  }\n};\n\nexport const Item = props => {\n  const GridItem = getGridItem(props.item.type);\n  return /*#__PURE__*/React.createElement(GridItem, {\n    item: props.item,\n    gridWidth: props.gridWidth,\n    dashboardMode: props.dashboardMode,\n    onToggleItemExpanded: props.onToggleItemExpanded\n  });\n};\nItem.propTypes = {\n  dashboardMode: PropTypes.string,\n  gridWidth: PropTypes.number,\n  item: PropTypes.object,\n  onToggleItemExpanded: PropTypes.func\n};","function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport debounce from 'lodash/debounce';\nimport pick from 'lodash/pick';\nconst defaultDebounceMs = 100;\nconst defaultBufferFactor = 0.25;\n\nclass ProgressiveLoadingContainer extends Component {\n  constructor(...args) {\n    super(...args);\n\n    _defineProperty(this, \"state\", {\n      shouldLoad: false\n    });\n\n    _defineProperty(this, \"containerRef\", null);\n\n    _defineProperty(this, \"shouldLoadHandler\", null);\n\n    _defineProperty(this, \"handlerOptions\", {\n      passive: true\n    });\n  }\n\n  checkShouldLoad() {\n    if (!this.containerRef) {\n      return;\n    }\n\n    const bufferPx = this.props.bufferFactor * window.innerHeight;\n    const rect = this.containerRef.getBoundingClientRect();\n\n    if (rect.bottom > -bufferPx && rect.top < window.innerHeight + bufferPx) {\n      this.setState({\n        shouldLoad: true\n      });\n      this.removeHandler();\n    }\n  }\n\n  registerHandler() {\n    this.shouldLoadHandler = debounce(() => this.checkShouldLoad(), this.props.debounceMs);\n    Array.from(document.getElementsByClassName('dashboard-scroll-container')).forEach(container => {\n      container.addEventListener('scroll', this.shouldLoadHandler, this.handlerOptions);\n    });\n  }\n\n  removeHandler() {\n    Array.from(document.getElementsByClassName('dashboard-scroll-container')).forEach(container => {\n      container.removeEventListener('scroll', this.shouldLoadHandler, this.handlerOptions);\n    });\n  }\n\n  componentDidMount() {\n    this.registerHandler();\n    this.checkShouldLoad();\n  }\n\n  componentWillUnmount() {\n    this.removeHandler();\n  }\n\n  render() {\n    const {\n      children,\n      className,\n      style,\n      ...props\n    } = this.props;\n    const {\n      shouldLoad\n    } = this.state;\n    const eventProps = pick(props, ['onMouseDown', 'onTouchStart', 'onMouseUp', 'onTouchEnd']);\n    return /*#__PURE__*/React.createElement(\"div\", _extends({\n      ref: ref => this.containerRef = ref,\n      style: style,\n      className: className,\n      \"data-test\": \"dashboarditem-\".concat(props.itemId)\n    }, eventProps), shouldLoad && children);\n  }\n\n}\n\n_defineProperty(ProgressiveLoadingContainer, \"propTypes\", {\n  children: PropTypes.node.isRequired,\n  bufferFactor: PropTypes.number,\n  className: PropTypes.string,\n  debounceMs: PropTypes.number,\n  style: PropTypes.object\n});\n\n_defineProperty(ProgressiveLoadingContainer, \"defaultProps\", {\n  debounceMs: defaultDebounceMs,\n  bufferFactor: defaultBufferFactor\n});\n\nexport default ProgressiveLoadingContainer;","import React, { useState, useEffect } from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport i18n from '@dhis2/d2-i18n';\nimport cx from 'classnames';\nimport { Responsive as ResponsiveReactGridLayout } from 'react-grid-layout';\nimport { Layer, CenteredContent, CircularLoader } from '@dhis2/ui';\nimport { useWindowDimensions } from '../WindowDimensionsProvider';\nimport { Item } from '../Item/Item';\nimport { GRID_ROW_HEIGHT_PX, SM_SCREEN_GRID_COLUMNS, GRID_COMPACT_TYPE, GRID_PADDING_PX, MARGIN_PX, MARGIN_SM_PX, hasShape, GRID_COLUMNS, getSmallLayout, getGridWidth, getProportionalHeight } from '../../modules/gridUtil';\nimport { orArray } from '../../modules/util';\nimport NoContentMessage from '../../widgets/NoContentMessage';\nimport { sGetSelectedId, sGetSelectedIsLoading } from '../../reducers/selected';\nimport { sGetDashboardById, sGetDashboardItems } from '../../reducers/dashboards';\nimport ProgressiveLoadingContainer from '../Item/ProgressiveLoadingContainer';\nimport { VIEW } from '../Dashboard/dashboardModes';\nimport { getBreakpoint, isSmallScreen } from '../../modules/smallScreen';\nimport classes from './styles/ItemGrid.module.css';\nimport 'react-grid-layout/css/styles.css';\nimport 'react-resizable/css/styles.css';\nimport './styles/ItemGrid.css';\nconst EXPANDED_HEIGHT = 17;\nconst EXPANDED_HEIGHT_SM = 13;\n\nconst ResponsiveItemGrid = ({\n  isLoading,\n  dashboardItems\n}) => {\n  const {\n    width\n  } = useWindowDimensions();\n  const [expandedItems, setExpandedItems] = useState({});\n  const [displayItems, setDisplayItems] = useState(dashboardItems);\n  const [layoutSm, setLayoutSm] = useState([]);\n  const [gridWidth, setGridWidth] = useState(0);\n  useEffect(() => {\n    if (isSmallScreen(width)) {\n      setLayoutSm(getItemsWithAdjustedHeight(getSmallLayout(dashboardItems, width)));\n    }\n\n    setDisplayItems(getItemsWithAdjustedHeight(dashboardItems));\n  }, [expandedItems, width, dashboardItems]);\n\n  const onToggleItemExpanded = clickedId => {\n    const isExpanded = typeof expandedItems[clickedId] === 'boolean' ? expandedItems[clickedId] : false;\n    const newExpandedItems = { ...expandedItems\n    };\n    newExpandedItems[clickedId] = !isExpanded;\n    setExpandedItems(newExpandedItems);\n  };\n\n  const getItemsWithAdjustedHeight = items => items.map(item => {\n    const expandedItem = expandedItems[item.id];\n\n    if (expandedItem && expandedItem === true) {\n      const expandedHeight = isSmallScreen(width) ? EXPANDED_HEIGHT_SM : EXPANDED_HEIGHT;\n      return Object.assign({}, item, {\n        h: item.h + expandedHeight,\n        smallOriginalH: getProportionalHeight(item, width)\n      });\n    }\n\n    return item;\n  });\n\n  const getItemComponent = item => /*#__PURE__*/React.createElement(ProgressiveLoadingContainer, {\n    key: item.i,\n    className: cx(item.type, 'view', \"reactgriditem-\".concat(item.id)),\n    itemId: item.id\n  }, /*#__PURE__*/React.createElement(Item, {\n    item: item,\n    gridWidth: gridWidth,\n    dashboardMode: VIEW,\n    onToggleItemExpanded: onToggleItemExpanded\n  }));\n\n  const getItemComponents = items => items.map(item => getItemComponent(item));\n\n  const onWidthChanged = containerWidth => {\n    setTimeout(() => {\n      setGridWidth(containerWidth);\n    }, 200);\n  };\n\n  if (!isLoading && !dashboardItems.length) {\n    return /*#__PURE__*/React.createElement(NoContentMessage, {\n      text: i18n.t('There are no items on this dashboard')\n    });\n  }\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, isLoading ? /*#__PURE__*/React.createElement(Layer, {\n    translucent: true\n  }, /*#__PURE__*/React.createElement(CenteredContent, null, /*#__PURE__*/React.createElement(CircularLoader, null))) : null, /*#__PURE__*/React.createElement(ResponsiveReactGridLayout, {\n    className: classes.grid,\n    rowHeight: GRID_ROW_HEIGHT_PX,\n    width: getGridWidth(width),\n    cols: {\n      lg: GRID_COLUMNS,\n      sm: SM_SCREEN_GRID_COLUMNS\n    },\n    breakpoints: {\n      lg: getBreakpoint(),\n      sm: 0\n    },\n    layouts: {\n      lg: displayItems,\n      sm: layoutSm\n    },\n    compactType: GRID_COMPACT_TYPE,\n    margin: isSmallScreen(width) ? MARGIN_SM_PX : MARGIN_PX,\n    containerPadding: {\n      lg: GRID_PADDING_PX,\n      sm: GRID_PADDING_PX\n    },\n    isDraggable: false,\n    isResizable: false,\n    draggableCancel: \"input,textarea\",\n    onWidthChange: onWidthChanged\n  }, getItemComponents(displayItems)));\n};\n\nResponsiveItemGrid.propTypes = {\n  dashboardItems: PropTypes.array,\n  isLoading: PropTypes.bool\n};\n\nconst mapStateToProps = state => {\n  const selectedDashboard = sGetDashboardById(state, sGetSelectedId(state));\n  const dashboardItems = orArray(sGetDashboardItems(state)).filter(hasShape);\n  return {\n    isLoading: sGetSelectedIsLoading(state) || !selectedDashboard,\n    dashboardItems\n  };\n};\n\nexport default connect(mapStateToProps)(ResponsiveItemGrid);","import React from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport i18n from '@dhis2/d2-i18n';\nimport { acRemoveItemFilter } from '../../actions/itemFilters';\nimport { acSetActiveModalDimension } from '../../actions/activeModalDimension';\nimport classes from './styles/FilterBadge.module.css';\n\nconst FilterBadge = ({\n  filter,\n  openFilterModal,\n  removeFilter\n}) => {\n  const filterText = \"\".concat(filter.name, \": \").concat(filter.values.length > 1 ? i18n.t('{{count}} selected', {\n    count: filter.values.length\n  }) : filter.values[0].name);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.container,\n    \"data-test\": \"dashboard-filter-badge\"\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    className: classes.badge,\n    onClick: () => openFilterModal({\n      id: filter.id,\n      name: filter.name\n    })\n  }, filterText), /*#__PURE__*/React.createElement(\"span\", {\n    className: classes.badgeSmall\n  }, filterText), /*#__PURE__*/React.createElement(\"span\", {\n    className: classes.removeButton,\n    onClick: () => removeFilter(filter.id)\n  }, i18n.t('Remove')));\n};\n\nFilterBadge.propTypes = {\n  filter: PropTypes.object.isRequired,\n  openFilterModal: PropTypes.func.isRequired,\n  removeFilter: PropTypes.func.isRequired\n};\nexport default connect(null, {\n  openFilterModal: acSetActiveModalDimension,\n  removeFilter: acRemoveItemFilter\n})(FilterBadge);","import React from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport FilterBadge from './FilterBadge';\nimport { sGetNamedItemFilters } from '../../reducers/itemFilters';\nimport classes from './styles/FilterBar.module.css';\n\nconst FilterBar = ({\n  filters\n}) => filters.length ? /*#__PURE__*/React.createElement(\"div\", {\n  className: classes.bar\n}, filters.map(filter => /*#__PURE__*/React.createElement(FilterBadge, {\n  key: filter.id,\n  filter: filter\n}))) : null;\n\nFilterBar.propTypes = {\n  filters: PropTypes.array.isRequired\n};\nFilterBar.defaultProps = {\n  filters: []\n};\n\nconst mapStateToProps = state => ({\n  filters: sGetNamedItemFilters(state)\n});\n\nexport default connect(mapStateToProps)(FilterBar);","import { generateUid } from 'd2/uid';\nimport { SET_PRINT_DASHBOARD, CLEAR_PRINT_DASHBOARD, SET_PRINT_DASHBOARD_LAYOUT, ADD_PRINT_DASHBOARD_ITEM, REMOVE_PRINT_DASHBOARD_ITEM, UPDATE_PRINT_DASHBOARD_ITEM } from '../reducers/printDashboard';\nimport { NEW_ITEM_SHAPE, getGridItemProperties, getPageBreakItemShape, getPrintTitlePageItemShape } from '../modules/gridUtil';\nimport { itemTypeMap, PAGEBREAK } from '../modules/itemTypes'; // actions\n\nexport const acSetPrintDashboard = (dashboard, items) => {\n  const val = { ...dashboard,\n    dashboardItems: items\n  };\n  return {\n    type: SET_PRINT_DASHBOARD,\n    value: val\n  };\n};\nexport const acClearPrintDashboard = () => ({\n  type: CLEAR_PRINT_DASHBOARD\n});\nexport const acUpdatePrintDashboardLayout = value => ({\n  type: SET_PRINT_DASHBOARD_LAYOUT,\n  value\n});\nexport const acAddPrintDashboardItem = item => {\n  const type = item.type;\n  delete item.type;\n  const itemPropName = itemTypeMap[type].propName;\n  const id = generateUid();\n  const gridItemProperties = getGridItemProperties(id);\n  let shape;\n\n  if (type === PAGEBREAK) {\n    const yPos = item.yPos || 0;\n    shape = getPageBreakItemShape(yPos, item.isStatic);\n  } else {\n    shape = getPrintTitlePageItemShape(item.isOneItemPerPage);\n  }\n\n  return {\n    type: ADD_PRINT_DASHBOARD_ITEM,\n    value: {\n      id,\n      type,\n      position: item.position || null,\n      [itemPropName]: item.content,\n      ...NEW_ITEM_SHAPE,\n      ...gridItemProperties,\n      ...shape\n    }\n  };\n};\nexport const acRemovePrintDashboardItem = value => ({\n  type: REMOVE_PRINT_DASHBOARD_ITEM,\n  value\n});\nexport const acUpdatePrintDashboardItem = item => ({\n  type: UPDATE_PRINT_DASHBOARD_ITEM,\n  value: item\n});","import React, { useState, useEffect } from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { ComponentCover } from '@dhis2/ui';\nimport cx from 'classnames';\nimport DashboardContainer from './DashboardContainer';\nimport ViewTitleBar from '../TitleBar/ViewTitleBar';\nimport ViewItemGrid from '../ItemGrid/ViewItemGrid';\nimport FilterBar from '../FilterBar/FilterBar';\nimport DashboardsBar from '../ControlBar/ViewControlBar/DashboardsBar';\nimport { sGetIsEditing } from '../../reducers/editDashboard';\nimport { sGetIsPrinting } from '../../reducers/printDashboard';\nimport { sGetSelectedId } from '../../reducers/selected';\nimport { acClearEditDashboard } from '../../actions/editDashboard';\nimport { acClearPrintDashboard } from '../../actions/printDashboard';\nimport classes from './styles/ViewDashboard.module.css';\nexport const ViewDashboard = props => {\n  const [controlbarExpanded, setControlbarExpanded] = useState(false);\n  useEffect(() => {\n    if (props.dashboardIsEditing) {\n      props.clearEditDashboard();\n    } else if (props.dashboardIsPrinting) {\n      props.clearPrintDashboard();\n    }\n  }, [props.dashboardIsEditing, props.dashboardIsPrinting]);\n  useEffect(() => {\n    Array.from(document.getElementsByClassName('dashboard-scroll-container')).forEach(container => {\n      container.scroll(0, 0);\n    });\n  }, [props.selectedId]);\n\n  const onExpandedChanged = expanded => setControlbarExpanded(expanded);\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: cx(classes.container, 'dashboard-scroll-container')\n  }, /*#__PURE__*/React.createElement(DashboardsBar, {\n    expanded: controlbarExpanded,\n    onExpandedChanged: onExpandedChanged\n  }), /*#__PURE__*/React.createElement(DashboardContainer, {\n    covered: controlbarExpanded\n  }, controlbarExpanded && /*#__PURE__*/React.createElement(ComponentCover, {\n    className: classes.cover,\n    translucent: true,\n    onClick: () => setControlbarExpanded(false)\n  }), /*#__PURE__*/React.createElement(ViewTitleBar, null), /*#__PURE__*/React.createElement(FilterBar, null), /*#__PURE__*/React.createElement(ViewItemGrid, null)));\n};\nViewDashboard.propTypes = {\n  clearEditDashboard: PropTypes.func,\n  clearPrintDashboard: PropTypes.func,\n  dashboardIsEditing: PropTypes.bool,\n  dashboardIsPrinting: PropTypes.bool,\n  selectedId: PropTypes.string\n};\n\nconst mapStateToProps = state => {\n  return {\n    dashboardIsEditing: sGetIsEditing(state),\n    dashboardIsPrinting: sGetIsPrinting(state),\n    selectedId: sGetSelectedId(state)\n  };\n};\n\nexport default connect(mapStateToProps, {\n  clearEditDashboard: acClearEditDashboard,\n  clearPrintDashboard: acClearPrintDashboard\n})(ViewDashboard);","import React from 'react';\nimport PropTypes from 'prop-types';\nimport i18n from '@dhis2/d2-i18n';\nimport { InputField } from '@dhis2/ui';\n\nconst ItemSearchField = props => /*#__PURE__*/React.createElement(InputField, {\n  name: \"Dashboard item search\",\n  label: i18n.t('Search for items to add to this dashboard'),\n  type: \"text\",\n  onChange: props.onChange,\n  onFocus: props.onFocus,\n  value: props.value,\n  dataTest: \"item-search\"\n});\n\nItemSearchField.propTypes = {\n  value: PropTypes.string,\n  onChange: PropTypes.func,\n  onFocus: PropTypes.func\n};\nexport default ItemSearchField;","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { MenuItem, colors } from '@dhis2/ui';\nimport classes from './styles/HeaderMenuItem.module.css';\n\nconst HeaderMenuItem = ({\n  title\n}) => /*#__PURE__*/React.createElement(MenuItem, {\n  className: classes.item,\n  dense: true,\n  key: title,\n  disabled: true,\n  label: /*#__PURE__*/React.createElement(\"span\", {\n    style: {\n      color: colors.grey800,\n      fontWeight: '600'\n    }\n  }, title)\n});\n\nHeaderMenuItem.propTypes = {\n  title: PropTypes.string.isRequired\n};\nexport default HeaderMenuItem;","import React from 'react';\nimport { colors } from '@dhis2/ui';\nimport PropTypes from 'prop-types';\n\nconst LaunchIcon = ({\n  className\n}) => /*#__PURE__*/React.createElement(\"svg\", {\n  className: className,\n  xmlns: \"http://www.w3.org/2000/svg\",\n  width: \"12\",\n  height: \"12\",\n  fill: colors.grey600,\n  viewBox: \"0 0 24 24\"\n}, /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M0 0h24v24H0z\",\n  fill: \"none\"\n}), /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M19 19H5V5h7V3H5c-1.11 0-2 .9-2 2v14c0 1.1.89 2 2 2h14c1.1 0 2-.9 2-2v-7h-2v7zM14 3v2h3.59l-9.83 9.83 1.41 1.41L19 6.41V10h2V3h-7z\"\n}));\n\nLaunchIcon.propTypes = {\n  className: PropTypes.string\n};\nexport default LaunchIcon;","import React from 'react';\nimport { MenuItem, colors } from '@dhis2/ui';\nimport i18n from '@dhis2/d2-i18n';\nimport PropTypes from 'prop-types';\nimport { visTypeIcons } from '@dhis2/analytics';\nimport { getItemIcon, VISUALIZATION } from '../../modules/itemTypes';\nimport LaunchIcon from '../../icons/Launch';\nimport classes from './styles/ContentMenuItem.module.css';\n\nconst LaunchLink = ({\n  url\n}) => /*#__PURE__*/React.createElement(\"a\", {\n  onClick: e => e.stopPropagation(),\n  className: classes.launchLink,\n  target: \"_blank\",\n  rel: \"noopener noreferrer\",\n  href: url\n}, /*#__PURE__*/React.createElement(LaunchIcon, null));\n\nLaunchLink.propTypes = {\n  url: PropTypes.string\n};\n\nconst InsertButton = () => /*#__PURE__*/React.createElement(\"button\", {\n  className: classes.buttonInsert\n}, i18n.t('Insert'));\n\nconst ContentMenuItem = ({\n  type,\n  name,\n  onInsert,\n  url,\n  visType\n}) => {\n  const ItemIcon = getItemIcon(type);\n  const renderedItemIcon = type === VISUALIZATION ? visTypeIcons[visType] : /*#__PURE__*/React.createElement(ItemIcon, {\n    style: {\n      fill: colors.grey600\n    }\n  });\n  return /*#__PURE__*/React.createElement(MenuItem, {\n    dense: true,\n    onClick: onInsert,\n    label: /*#__PURE__*/React.createElement(\"div\", {\n      className: classes.menuItem\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: classes.label\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      style: {\n        marginRight: '6px'\n      }\n    }, renderedItemIcon), /*#__PURE__*/React.createElement(\"span\", null, name), url ? /*#__PURE__*/React.createElement(LaunchLink, {\n      url: url\n    }) : null), /*#__PURE__*/React.createElement(InsertButton, null)),\n    dataTest: \"menu-item-\".concat(name)\n  });\n};\n\nContentMenuItem.propTypes = {\n  name: PropTypes.string,\n  type: PropTypes.string,\n  url: PropTypes.string,\n  visType: PropTypes.string,\n  onInsert: PropTypes.func\n};\nexport default ContentMenuItem;","import { sGetEditDashboardRoot } from '../../reducers/editDashboard';\nimport { itemTypeMap } from '../../modules/itemTypes';\nimport { acAddDashboardItem, acUpdateDashboardItem } from '../../actions/editDashboard';\nexport const tAddListItemContent = (type, content) => (dispatch, getState) => {\n  const state = getState();\n  const listItemType = itemTypeMap[type].propName;\n  const dashboardItems = sGetEditDashboardRoot(state).dashboardItems;\n  const dashboardItemIndex = dashboardItems.findIndex(item => item.type === type);\n  let dashboardItem; // Reports/Resources/Users dashboard item type already present in dashboard\n\n  if (dashboardItemIndex > -1) {\n    dashboardItem = dashboardItems[dashboardItemIndex];\n    dashboardItem[listItemType].push(content);\n    dispatch(acUpdateDashboardItem(dashboardItem));\n  } else {\n    dashboardItem = {\n      type: type,\n      content: [content]\n    };\n    dispatch(acAddDashboardItem(dashboardItem));\n  }\n};","import i18n from '@dhis2/d2-i18n';\nimport { VISUALIZATION, MAP, EVENT_CHART, EVENT_REPORT, REPORTS, RESOURCES, APP, MESSAGES, TEXT, SPACER } from '../../modules/itemTypes';\nexport const singleItems = [{\n  id: 'additional',\n  header: i18n.t('Additional items'),\n  items: [{\n    type: TEXT,\n    name: i18n.t('Text box'),\n    content: ''\n  }, {\n    type: MESSAGES,\n    name: i18n.t('Messages'),\n    content: 'true'\n  }, {\n    type: SPACER,\n    name: i18n.t('Spacer'),\n    content: ''\n  }]\n}]; // categorizedItems are grouped in the item selector menu\n\nexport const categorizedItems = [VISUALIZATION, MAP, EVENT_REPORT, EVENT_CHART, REPORTS, RESOURCES, APP]; // listItemTypes are included in a single dashboard item\n\nexport const listItemTypes = [REPORTS, RESOURCES];","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport i18n from '@dhis2/d2-i18n';\nimport { MenuItem, Divider } from '@dhis2/ui';\nimport { useConfig } from '@dhis2/app-runtime';\nimport HeaderMenuItem from './HeaderMenuItem';\nimport ContentMenuItem from './ContentMenuItem';\nimport { tAddListItemContent } from './actions';\nimport { acAddDashboardItem } from '../../actions/editDashboard';\nimport { getItemUrl, APP, VISUALIZATION } from '../../modules/itemTypes';\nimport { categorizedItems, listItemTypes } from './selectableItems';\nimport classes from './styles/CategorizedMenuGroup.module.css';\n\nconst CategorizedMenuGroup = ({\n  type,\n  title,\n  items,\n  hasMore,\n  acAddDashboardItem,\n  tAddListItemContent,\n  onChangeItemsLimit\n}) => {\n  const {\n    baseUrl\n  } = useConfig();\n  const [seeMore, setSeeMore] = useState(false);\n\n  const addItem = item => () => {\n    if (type === APP) {\n      acAddDashboardItem({\n        type,\n        content: item.key\n      });\n    } else {\n      const newItem = {\n        id: item.id,\n        name: item.displayName || item.name\n      };\n\n      if (listItemTypes.includes(type)) {\n        tAddListItemContent(type, newItem);\n      } else {\n        acAddDashboardItem({\n          type,\n          content: newItem\n        });\n      }\n    }\n  };\n\n  const toggleSeeMore = () => {\n    setSeeMore(!seeMore);\n    onChangeItemsLimit(type);\n  };\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(HeaderMenuItem, {\n    title: title\n  }), items.map(item => {\n    const itemUrl = getItemUrl(type, item, baseUrl);\n    return /*#__PURE__*/React.createElement(ContentMenuItem, {\n      key: item.id || item.key,\n      type: type,\n      visType: type === VISUALIZATION ? item.type : type,\n      name: item.displayName || item.name,\n      onInsert: addItem(item),\n      url: itemUrl\n    });\n  }), hasMore ? /*#__PURE__*/React.createElement(MenuItem, {\n    dense: true,\n    key: \"showmore\".concat(title),\n    onClick: toggleSeeMore,\n    label: /*#__PURE__*/React.createElement(\"button\", {\n      className: classes.showMoreButton\n    }, seeMore ? i18n.t('Show fewer') : i18n.t('Show more'))\n  }) : null, /*#__PURE__*/React.createElement(Divider, {\n    margin: \"8px 0px\"\n  }));\n};\n\nCategorizedMenuGroup.propTypes = {\n  items: PropTypes.array.isRequired,\n  title: PropTypes.string.isRequired,\n  type: PropTypes.oneOf(categorizedItems).isRequired,\n  onChangeItemsLimit: PropTypes.func.isRequired,\n  acAddDashboardItem: PropTypes.func,\n  hasMore: PropTypes.bool,\n  tAddListItemContent: PropTypes.func\n};\nexport default connect(null, {\n  acAddDashboardItem,\n  tAddListItemContent\n})(CategorizedMenuGroup);","import React from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport HeaderMenuItem from './HeaderMenuItem';\nimport ContentMenuItem from './ContentMenuItem';\nimport { acAddDashboardItem } from '../../actions/editDashboard';\n\nconst SinglesMenuGroup = ({\n  acAddDashboardItem,\n  category\n}) => {\n  const addToDashboard = ({\n    type,\n    content\n  }) => () => {\n    acAddDashboardItem({\n      type,\n      content\n    });\n  };\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(HeaderMenuItem, {\n    title: category.header\n  }), category.items.map(item => /*#__PURE__*/React.createElement(ContentMenuItem, {\n    key: item.type,\n    type: item.type,\n    name: item.name,\n    onInsert: addToDashboard(item)\n  })));\n};\n\nSinglesMenuGroup.propTypes = {\n  acAddDashboardItem: PropTypes.func,\n  category: PropTypes.object\n};\nexport default connect(null, {\n  acAddDashboardItem\n})(SinglesMenuGroup);","import { useState, useEffect } from 'react';\n\nconst useDebounce = (value, delay) => {\n  const [debouncedValue, setDebouncedValue] = useState(value);\n  useEffect(() => {\n    const handler = setTimeout(() => {\n      setDebouncedValue(value);\n    }, delay);\n    return () => {\n      clearTimeout(handler);\n    };\n  }, [value, delay]);\n  return debouncedValue;\n};\n\nexport default useDebounce;","import React, { useState, useEffect, createRef } from 'react';\nimport { Popover, FlyoutMenu } from '@dhis2/ui';\nimport { useDataEngine } from '@dhis2/app-runtime';\nimport ItemSearchField from './ItemSearchField';\nimport CategorizedMenuGroup from './CategorizedMenuGroup';\nimport SinglesMenuGroup from './SinglesMenuGroup';\nimport { singleItems, categorizedItems } from './selectableItems';\nimport { itemTypeMap, getDefaultItemCount } from '../../modules/itemTypes';\nimport useDebounce from '../../modules/useDebounce';\nimport { getDashboardsQQuery } from '../../api/dashboardsQ';\nimport classes from './styles/ItemSelector.module.css';\n\nconst ItemSelector = () => {\n  const [isOpen, setIsOpen] = useState(false);\n  const [filter, setFilter] = useState('');\n  const [items, setItems] = useState(null);\n  const [maxOptions, setMaxOptions] = useState(new Set());\n  const dataEngine = useDataEngine();\n  const debouncedFilterText = useDebounce(filter, 350);\n  useEffect(() => {\n    const query = getDashboardsQQuery(debouncedFilterText, Array.from(maxOptions));\n    dataEngine.query({\n      items: query\n    }).then(res => setItems(res.items));\n  }, [debouncedFilterText, maxOptions]);\n\n  const closeMenu = () => {\n    setIsOpen(false);\n    setFilter('');\n    setMaxOptions(new Set());\n  };\n\n  const openMenu = () => setIsOpen(true);\n\n  const getCategorizedMenuGroups = () => {\n    return categorizedItems.filter(type => {\n      const itemType = itemTypeMap[type];\n      return items && items[itemType.endPointName];\n    }).map(type => {\n      const itemType = itemTypeMap[type];\n      const itemCount = getDefaultItemCount(type);\n      const allItems = items[itemType.endPointName];\n      const hasMore = allItems.length > itemCount;\n      const displayItems = maxOptions.has(itemType.id) ? allItems : allItems.slice(0, itemCount);\n      return /*#__PURE__*/React.createElement(CategorizedMenuGroup, {\n        key: type,\n        type: type,\n        title: itemType.pluralTitle,\n        items: displayItems,\n        onChangeItemsLimit: updateMaxOptions,\n        hasMore: hasMore\n      });\n    });\n  };\n\n  const getSinglesMenuGroups = () => singleItems.map(category => /*#__PURE__*/React.createElement(SinglesMenuGroup, {\n    key: category.id,\n    category: category\n  }));\n\n  const getMenuGroups = () => getCategorizedMenuGroups().concat(getSinglesMenuGroups());\n\n  const updateMaxOptions = type => {\n    if (type) {\n      const options = new Set(maxOptions);\n      options.has(type) ? options.delete(type) : options.add(type);\n      setMaxOptions(options);\n    } else {\n      setMaxOptions(new Set());\n    }\n  };\n\n  const updateFilter = ({\n    value\n  }) => setFilter(value);\n\n  const inputRef = /*#__PURE__*/createRef();\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"span\", {\n    ref: inputRef\n  }, /*#__PURE__*/React.createElement(ItemSearchField, {\n    value: filter,\n    onChange: updateFilter,\n    onFocus: openMenu\n  })), isOpen && /*#__PURE__*/React.createElement(Popover, {\n    reference: inputRef,\n    placement: \"bottom-start\",\n    onClickOutside: closeMenu,\n    arrow: false,\n    maxWidth: 700\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.popover\n  }, /*#__PURE__*/React.createElement(FlyoutMenu, {\n    className: classes.menu,\n    dataTest: \"item-menu\",\n    maxWidth: \"700px\"\n  }, getMenuGroups()))));\n};\n\nexport default ItemSelector;","export const getDashboardsQQuery = (query = '', maxItems = []) => {\n  return {\n    resource: \"dashboards/q/\".concat(query),\n    params: {\n      count: 11,\n      max: maxItems\n    }\n  };\n};","import React from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport i18n from '@dhis2/d2-i18n';\nimport { InputField, TextAreaField } from '@dhis2/ui';\nimport ItemSelector from '../ItemSelector/ItemSelector';\nimport { acSetDashboardTitle, acSetDashboardDescription } from '../../actions/editDashboard';\nimport { orObject } from '../../modules/util';\nimport { sGetEditDashboardRoot } from '../../reducers/editDashboard';\nimport classes from './styles/EditTitleBar.module.css';\n\nconst EditTitleBar = ({\n  name,\n  description,\n  onChangeTitle,\n  onChangeDescription\n}) => {\n  const updateTitle = (_, e) => {\n    onChangeTitle(e.target.value);\n  };\n\n  const updateDescription = (_, e) => {\n    onChangeDescription(e.target.value);\n  };\n\n  return /*#__PURE__*/React.createElement(\"section\", {\n    className: classes.section\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.titleDescription\n  }, /*#__PURE__*/React.createElement(InputField, {\n    className: classes.title,\n    name: \"Dashboard title input\",\n    label: i18n.t('Dashboard title'),\n    type: \"text\",\n    onChange: updateTitle,\n    value: name,\n    placeholder: i18n.t('Untitled dashboard'),\n    dataTest: \"dashboard-title-input\"\n  }), /*#__PURE__*/React.createElement(TextAreaField, {\n    className: classes.description,\n    name: \"Dashboard description input\",\n    label: i18n.t('Dashboard description'),\n    onChange: updateDescription,\n    value: description,\n    dataTest: \"dashboard-description-input\"\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.itemSelector\n  }, /*#__PURE__*/React.createElement(ItemSelector, null)));\n};\n\nEditTitleBar.propTypes = {\n  onChangeDescription: PropTypes.func.isRequired,\n  onChangeTitle: PropTypes.func.isRequired,\n  description: PropTypes.string,\n  name: PropTypes.string\n};\nEditTitleBar.defaultProps = {\n  name: '',\n  description: ''\n};\n\nconst mapStateToProps = state => {\n  const selectedDashboard = orObject(sGetEditDashboardRoot(state));\n  return {\n    name: selectedDashboard.name,\n    description: selectedDashboard.description\n  };\n};\n\nconst mapDispatchToProps = {\n  onChangeTitle: acSetDashboardTitle,\n  onChangeDescription: acSetDashboardDescription\n};\nexport default connect(mapStateToProps, mapDispatchToProps)(EditTitleBar);","import React, { useState } from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport i18n from '@dhis2/d2-i18n';\nimport { Responsive as ResponsiveReactGridLayout } from 'react-grid-layout';\nimport { Layer, CenteredContent, CircularLoader } from '@dhis2/ui';\nimport cx from 'classnames';\nimport { acUpdateDashboardLayout } from '../../actions/editDashboard';\nimport { Item } from '../Item/Item';\nimport { resize as pluginResize } from '../Item/VisualizationItem/Visualization/plugin';\nimport { isVisualizationType } from '../../modules/itemTypes';\nimport { GRID_ROW_HEIGHT_PX, GRID_COMPACT_TYPE, MARGIN_PX, GRID_PADDING_PX, GRID_COLUMNS, hasShape, getGridWidth } from '../../modules/gridUtil';\nimport { getBreakpoint } from '../../modules/smallScreen';\nimport getGridItemDomId from '../../modules/getGridItemDomId';\nimport { orArray } from '../../modules/util';\nimport NoContentMessage from '../../widgets/NoContentMessage';\nimport { sGetSelectedIsLoading } from '../../reducers/selected';\nimport { sGetEditDashboardRoot, sGetEditDashboardItems } from '../../reducers/editDashboard';\nimport ProgressiveLoadingContainer from '../Item/ProgressiveLoadingContainer';\nimport { EDIT } from '../Dashboard/dashboardModes';\nimport { useWindowDimensions } from '../WindowDimensionsProvider';\nimport classes from './styles/ItemGrid.module.css';\nimport 'react-grid-layout/css/styles.css';\nimport 'react-resizable/css/styles.css';\nimport './styles/ItemGrid.css';\n\nconst EditItemGrid = ({\n  isLoading,\n  dashboardItems,\n  acUpdateDashboardLayout\n}) => {\n  const [gridWidth, setGridWidth] = useState(0);\n  const {\n    width\n  } = useWindowDimensions();\n\n  const onLayoutChange = newLayout => {\n    acUpdateDashboardLayout(newLayout);\n  };\n\n  const onResizeStop = (layout, oldItem, newItem) => {\n    const el = document.querySelector(\"#\".concat(getGridItemDomId(newItem.i))) || {};\n    if (typeof el.setViewportSize === 'function') setTimeout(() => el.setViewportSize(el.clientWidth - 5, el.clientHeight - 5), 10);\n    const dashboardItem = dashboardItems.find(item => item.id === newItem.i); // call resize on the item component if it's a plugin type\n\n    if (dashboardItem && isVisualizationType(dashboardItem)) {\n      pluginResize(dashboardItem);\n    }\n  };\n\n  const getItemComponent = item => /*#__PURE__*/React.createElement(ProgressiveLoadingContainer, {\n    key: item.i,\n    className: cx(item.type, 'edit'),\n    itemId: item.id\n  }, /*#__PURE__*/React.createElement(Item, {\n    item: item,\n    gridWidth: gridWidth,\n    dashboardMode: EDIT\n  }));\n\n  const getItemComponents = items => items.map(item => getItemComponent(item));\n\n  const onWidthChanged = containerWidth => {\n    setTimeout(() => {\n      setGridWidth(containerWidth);\n    }, 200);\n  };\n\n  if (!isLoading && !dashboardItems.length) {\n    return /*#__PURE__*/React.createElement(NoContentMessage, {\n      text: i18n.t('There are no items on this dashboard')\n    });\n  }\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, isLoading ? /*#__PURE__*/React.createElement(Layer, {\n    translucent: true\n  }, /*#__PURE__*/React.createElement(CenteredContent, null, /*#__PURE__*/React.createElement(CircularLoader, null))) : null, /*#__PURE__*/React.createElement(ResponsiveReactGridLayout, {\n    className: classes.grid,\n    rowHeight: GRID_ROW_HEIGHT_PX,\n    width: getGridWidth(width),\n    cols: {\n      lg: GRID_COLUMNS\n    },\n    breakpoints: {\n      lg: getBreakpoint()\n    },\n    layouts: {\n      lg: dashboardItems\n    },\n    compactType: GRID_COMPACT_TYPE,\n    margin: MARGIN_PX,\n    containerPadding: {\n      lg: GRID_PADDING_PX\n    },\n    onLayoutChange: onLayoutChange,\n    onResizeStop: onResizeStop,\n    onWidthChange: onWidthChanged,\n    isDraggable: true,\n    isResizable: true,\n    draggableCancel: \"input,textarea\"\n  }, getItemComponents(dashboardItems)));\n};\n\nEditItemGrid.propTypes = {\n  acUpdateDashboardLayout: PropTypes.func,\n  dashboardItems: PropTypes.array,\n  isLoading: PropTypes.bool\n}; // Container\n\nconst mapStateToProps = state => {\n  const selectedDashboard = sGetEditDashboardRoot(state);\n  const dashboardItems = orArray(sGetEditDashboardItems(state)).filter(hasShape);\n  return {\n    isLoading: sGetSelectedIsLoading(state) || !selectedDashboard,\n    dashboardItems\n  };\n};\n\nconst mapDispatchToProps = {\n  acUpdateDashboardLayout\n};\nexport default connect(mapStateToProps, mapDispatchToProps)(EditItemGrid);","import React from 'react';\nimport PropTypes from 'prop-types';\nimport i18n from '@dhis2/d2-i18n';\nimport { Button, Modal, ModalContent, ModalActions, ButtonStrip, ModalTitle } from '@dhis2/ui';\nimport classes from './styles/ConfirmDeleteDialog.module.css';\nexport const ConfirmDeleteDialog = ({\n  dashboardName,\n  onDeleteConfirmed,\n  onContinueEditing,\n  open\n}) => {\n  const actions = [/*#__PURE__*/React.createElement(Button, {\n    key: \"cancel\",\n    secondary: true,\n    onClick: onContinueEditing,\n    dataTest: \"cancel-delete-dashboard\"\n  }, i18n.t('Cancel')), /*#__PURE__*/React.createElement(Button, {\n    key: \"delete\",\n    destructive: true,\n    onClick: onDeleteConfirmed,\n    dataTest: \"confirm-delete-dashboard\"\n  }, i18n.t('Delete'))];\n  return open && /*#__PURE__*/React.createElement(Modal, {\n    onClose: onContinueEditing,\n    small: true,\n    position: \"middle\"\n  }, /*#__PURE__*/React.createElement(ModalTitle, null, i18n.t('Delete dashboard')), /*#__PURE__*/React.createElement(ModalContent, null, /*#__PURE__*/React.createElement(\"span\", {\n    className: classes.content\n  }, i18n.t('Deleting dashboard \"{{ dashboardName }}\" will remove it for all users. This action cannot be undone. Are you sure you want to permanently delete this dashboard?', {\n    dashboardName\n  }))), /*#__PURE__*/React.createElement(ModalActions, null, /*#__PURE__*/React.createElement(ButtonStrip, null, actions)));\n};\nConfirmDeleteDialog.propTypes = {\n  dashboardName: PropTypes.string,\n  open: PropTypes.bool,\n  onContinueEditing: PropTypes.func,\n  onDeleteConfirmed: PropTypes.func\n};\nexport default ConfirmDeleteDialog;","import React, { useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { Redirect } from 'react-router-dom';\nimport i18n from '@dhis2/d2-i18n';\nimport TranslationDialog from '@dhis2/d2-ui-translation-dialog';\nimport { Button, ButtonStrip } from '@dhis2/ui';\nimport { useDataEngine, useAlert } from '@dhis2/app-runtime';\nimport { useD2 } from '@dhis2/app-runtime-adapter-d2';\nimport ConfirmDeleteDialog from './ConfirmDeleteDialog';\nimport { tSaveDashboard, acClearEditDashboard, acSetPrintPreviewView, acClearPrintPreviewView } from '../../actions/editDashboard';\nimport { acClearPrintDashboard } from '../../actions/printDashboard';\nimport { tDeleteDashboard, acSetDashboardDisplayName } from '../../actions/dashboards';\nimport { sGetEditDashboardRoot, sGetIsNewDashboard, sGetIsPrintPreviewView } from '../../reducers/editDashboard';\nimport { apiFetchDashboard } from '../../api/dashboards';\nimport classes from './styles/EditBar.module.css';\nconst saveFailedMessage = i18n.t('Failed to save dashboard. You might be offline or not have access to edit this dashboard.');\n\nconst EditBar = props => {\n  const {\n    d2\n  } = useD2({});\n  const dataEngine = useDataEngine();\n  const [translationDlgIsOpen, setTranslationDlgIsOpen] = useState(false);\n  const [dashboard, setDashboard] = useState(undefined);\n  const [confirmDeleteDlgIsOpen, setConfirmDeleteDlgIsOpen] = useState(false);\n  const [redirectUrl, setRedirectUrl] = useState(undefined);\n  const failureAlert = useAlert(saveFailedMessage, {\n    critical: true\n  });\n  useEffect(() => {\n    if (props.dashboardId && !dashboard) {\n      apiFetchDashboard(dataEngine, props.dashboardId).then(dboard => setDashboard(dboard));\n    }\n  }, [props.dashboardId, dashboard]);\n\n  const onConfirmDelete = () => {\n    setConfirmDeleteDlgIsOpen(true);\n  };\n\n  const onSave = () => {\n    props.saveDashboard().then(newId => {\n      setRedirectUrl(\"/\".concat(newId));\n    }).catch(() => failureAlert.show());\n  };\n\n  const onPrintPreview = () => {\n    if (props.isPrintPreviewView) {\n      props.clearPrintPreview();\n      props.clearPrintDashboard();\n    } else {\n      props.showPrintPreview();\n    }\n  };\n\n  const onDiscard = () => {\n    props.onDiscardChanges();\n    const redirectUrl = props.dashboardId ? \"/\".concat(props.dashboardId) : '/';\n    setRedirectUrl(redirectUrl);\n  };\n\n  const onContinueEditing = () => {\n    setConfirmDeleteDlgIsOpen(false);\n  };\n\n  const onDeleteConfirmed = () => {\n    setConfirmDeleteDlgIsOpen(false);\n    props.onDelete(props.dashboardId).then(() => {\n      setRedirectUrl('/');\n    });\n  };\n\n  const onTranslationsSaved = async translations => {\n    if (translations && translations.length) {\n      const dbLocale = await d2.currentUser.userSettings.get('keyDbLocale');\n      const translation = translations.find(t => t.locale === dbLocale && t.property === 'NAME');\n\n      if (translation && translation.value) {\n        props.onTranslate(props.dashboardId, translation.value);\n      }\n    }\n  };\n\n  const toggleTranslationDialog = () => setTranslationDlgIsOpen(!translationDlgIsOpen);\n\n  const confirmDeleteDialog = () => props.deleteAccess && props.dashboardId ? /*#__PURE__*/React.createElement(ConfirmDeleteDialog, {\n    dashboardName: props.dashboardName,\n    onDeleteConfirmed: onDeleteConfirmed,\n    onContinueEditing: onContinueEditing,\n    open: confirmDeleteDlgIsOpen\n  }) : null;\n\n  const translationDialog = () => dashboard && dashboard.id ? /*#__PURE__*/React.createElement(TranslationDialog, {\n    className: \"translation-dialog\",\n    d2: d2,\n    open: translationDlgIsOpen,\n    onRequestClose: toggleTranslationDialog,\n    objectToTranslate: { ...dashboard,\n      modelDefinition: {\n        name: 'dashboard'\n      }\n    },\n    fieldsToTranslate: ['name', 'description'],\n    onTranslationSaved: onTranslationsSaved,\n    onTranslationError: err => console.log('translation update error', err)\n  }) : null;\n\n  const renderActionButtons = () => /*#__PURE__*/React.createElement(ButtonStrip, null, /*#__PURE__*/React.createElement(Button, {\n    primary: true,\n    onClick: onSave,\n    dataTest: \"save-dashboard-button\"\n  }, i18n.t('Save changes')), /*#__PURE__*/React.createElement(Button, {\n    onClick: onPrintPreview\n  }, props.isPrintPreviewView ? i18n.t('Exit Print preview') : i18n.t('Print preview')), props.dashboardId && /*#__PURE__*/React.createElement(Button, {\n    onClick: toggleTranslationDialog\n  }, i18n.t('Translate')), props.dashboardId && props.deleteAccess && /*#__PURE__*/React.createElement(Button, {\n    onClick: onConfirmDelete,\n    dataTest: \"delete-dashboard-button\"\n  }, i18n.t('Delete')));\n\n  if (redirectUrl) {\n    return /*#__PURE__*/React.createElement(Redirect, {\n      to: redirectUrl\n    });\n  }\n\n  const {\n    updateAccess\n  } = props;\n  const discardBtnText = updateAccess ? i18n.t('Exit without saving') : i18n.t('Go to dashboards');\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.editBar\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.controls\n  }, updateAccess ? renderActionButtons() : null, /*#__PURE__*/React.createElement(Button, {\n    secondary: true,\n    onClick: onDiscard\n  }, discardBtnText))), translationDialog(), confirmDeleteDialog());\n};\n\nEditBar.propTypes = {\n  clearPrintDashboard: PropTypes.func,\n  clearPrintPreview: PropTypes.func,\n  dashboardId: PropTypes.string,\n  dashboardName: PropTypes.string,\n  deleteAccess: PropTypes.bool,\n  isPrintPreviewView: PropTypes.bool,\n  saveDashboard: PropTypes.func,\n  showPrintPreview: PropTypes.func,\n  updateAccess: PropTypes.bool,\n  onDelete: PropTypes.func,\n  onDiscardChanges: PropTypes.func,\n  onTranslate: PropTypes.func\n};\n\nconst mapStateToProps = state => {\n  const dashboard = sGetEditDashboardRoot(state);\n  let deleteAccess;\n  let updateAccess;\n\n  if (sGetIsNewDashboard(state)) {\n    deleteAccess = true;\n    updateAccess = true;\n  } else {\n    updateAccess = dashboard.access ? dashboard.access.update : false;\n    deleteAccess = dashboard.access ? dashboard.access.delete : false;\n  }\n\n  return {\n    dashboardId: dashboard.id,\n    dashboardName: dashboard.name,\n    deleteAccess,\n    isPrintPreviewView: sGetIsPrintPreviewView(state),\n    updateAccess\n  };\n};\n\nconst mapDispatchToProps = dispatch => ({\n  clearPrintDashboard: () => dispatch(acClearPrintDashboard()),\n  clearPrintPreview: () => dispatch(acClearPrintPreviewView()),\n  saveDashboard: () => dispatch(tSaveDashboard()).then(id => id),\n  onDelete: id => dispatch(tDeleteDashboard(id)),\n  onDiscardChanges: () => dispatch(acClearEditDashboard()),\n  onTranslate: (id, value) => dispatch(acSetDashboardDisplayName(id, value)),\n  showPrintPreview: () => dispatch(acSetPrintPreviewView())\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(EditBar);","import React from 'react';\nimport PropTypes from 'prop-types';\nimport i18n from '@dhis2/d2-i18n';\nimport { NoticeBox, CenteredContent } from '@dhis2/ui';\nimport classes from './styles/NotSupportedNotice.module.css';\n\nconst NotSupportedNotice = ({\n  message\n}) => /*#__PURE__*/React.createElement(CenteredContent, {\n  position: \"top\"\n}, /*#__PURE__*/React.createElement(\"div\", {\n  className: classes.noticeContainer\n}, /*#__PURE__*/React.createElement(NoticeBox, {\n  title: i18n.t('Not supported'),\n  warning: true\n}, message)));\n\nNotSupportedNotice.propTypes = {\n  message: PropTypes.string\n};\nexport default NotSupportedNotice;","import React from 'react';\nimport PropTypes from 'prop-types';\nimport i18n from '@dhis2/d2-i18n';\nimport classes from './styles/PrintInfo.module.css';\n\nconst PrintInfo = ({\n  isLayout\n}) => {\n  const layoutStyle = isLayout ? i18n.t('dashboard layout') : i18n.t('one item per page');\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.container\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    className: classes.title\n  }, \"\".concat(i18n.t('Print Preview'), \": \").concat(layoutStyle)), /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.printSuggestions\n  }, /*#__PURE__*/React.createElement(\"p\", null, \"\".concat(i18n.t('For best print results'), \":\")), /*#__PURE__*/React.createElement(\"ul\", null, /*#__PURE__*/React.createElement(\"li\", null, i18n.t('Use Chrome or Edge web browser')), /*#__PURE__*/React.createElement(\"li\", null, i18n.t('Wait for all dashboard items to load before printing')), /*#__PURE__*/React.createElement(\"li\", null, i18n.t('Use A4 landscape paper size and default margin settings in the browser print dialog')))), /*#__PURE__*/React.createElement(\"hr\", {\n    className: classes.divider\n  }));\n};\n\nPrintInfo.propTypes = {\n  isLayout: PropTypes.bool\n};\nexport default PrintInfo;","import React from 'react';\nimport { colors } from '@dhis2/ui';\n\nconst LessHorizontalIcon = () => /*#__PURE__*/React.createElement(\"svg\", {\n  xmlns: \"http://www.w3.org/2000/svg\",\n  width: \"24\",\n  height: \"24\",\n  fill: colors.grey600,\n  viewBox: \"0 0 24 24\"\n}, /*#__PURE__*/React.createElement(\"path\", {\n  d: \"m13.2928932 6.29289322c.3905243-.39052429 1.0236893-.39052429 1.4142136 0 .3604839.36048396.3882135.92771502.0831886 1.32000622l-.0831886.09420734-4.2921068 4.29289322 4.2921068 4.2928932c.3604839.360484.3882135.927715.0831886 1.3200062l-.0831886.0942074c-.360484.3604839-.927715.3882135-1.3200062.0831886l-.0942074-.0831886-4.99999998-5c-.36048396-.360484-.3882135-.927715-.08318861-1.3200062l.08318861-.0942074z\"\n}));\n\nexport default LessHorizontalIcon;","import React from 'react';\nimport PropTypes from 'prop-types';\nimport i18n from '@dhis2/d2-i18n';\nimport { Button } from '@dhis2/ui';\nimport { Link } from 'react-router-dom';\nimport LessHorizontalIcon from '../../icons/LessHorizontal';\nimport classes from './styles/PrintActionsBar.module.css'; // set in PrintActionsBar.module.css\n\nexport const PRINT_ACTIONS_BAR_HEIGHT = 44;\nexport const PRINT_ACTIONS_BAR_HEIGHT_SM = 36;\n\nconst PrintActionsBar = ({\n  id\n}) => {\n  const getExitPrintButton = isSmall => /*#__PURE__*/React.createElement(Button, {\n    className: isSmall ? classes.buttonSmall : classes.buttonLarge,\n    small: isSmall\n  }, /*#__PURE__*/React.createElement(LessHorizontalIcon, null), i18n.t('Exit print preview'));\n\n  const getPrintButton = isSmall => /*#__PURE__*/React.createElement(Button, {\n    className: isSmall ? classes.buttonSmall : classes.buttonLarge,\n    small: isSmall,\n    onClick: window.print\n  }, i18n.t('Print'));\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.container\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.actions\n  }, /*#__PURE__*/React.createElement(Link, {\n    className: classes.link,\n    to: \"/\".concat(id)\n  }, getExitPrintButton(true), getExitPrintButton(false)), getPrintButton(true), getPrintButton(false)));\n};\n\nPrintActionsBar.propTypes = {\n  id: PropTypes.string\n};\nexport default PrintActionsBar;","import sortBy from 'lodash/sortBy';\nimport { orArray } from './util';\nimport { itemTypeMap } from './itemTypes'; // for A4 landscape (297x210mm)\n// 794 px = (21cm / 2.54) * 96 pixels/inch\n// 1122 px = 29.7 /2.54 * 96 pixels/inch\n// const a4LandscapeHeightPx = 794\n\nexport const A4_LANDSCAPE_WIDTH_PX = 1102;\nexport const getTransformYPx = elStyle => {\n  var _elStyle$transform$sp;\n\n  if (!elStyle || !elStyle.transform) {\n    return null;\n  } // find valid transforms - those with y pixels\n  // the code is expecting the transform prop to\n  // look like:  translate(10px, 300px)\n\n\n  const transformY = (_elStyle$transform$sp = elStyle.transform.split(' ')[1]) === null || _elStyle$transform$sp === void 0 ? void 0 : _elStyle$transform$sp.match(/(\\d+)px/);\n\n  if (transformY) {\n    return parseInt(transformY[1]);\n  } else {\n    return null;\n  }\n};\nexport const getDomGridItemsSortedByYPos = elements => {\n  const types = Object.keys(itemTypeMap);\n  const elementsWithBoundingRect = orArray(elements).map(el => {\n    const type = Array.from(el.classList).find(className => types.indexOf(className) > -1);\n    const rect = el.getBoundingClientRect();\n    const y = getTransformYPx(el.style) || parseInt(rect.y);\n    return {\n      type,\n      classList: el.classList,\n      bottomY: y + parseInt(rect.height),\n      el\n    };\n  });\n  return sortBy(elementsWithBoundingRect, ['bottomY']);\n};\n\nconst isLeapPage = n => {\n  // pages 5,9,13,17,21,25,29... are leap pages\n  let x = 0;\n  const startPage = 1;\n\n  const getMultiple = factor => startPage + 4 * factor;\n\n  let multiple = getMultiple(0);\n  let isLeapPage = false;\n\n  while (multiple < n) {\n    multiple = getMultiple(x);\n    ++x;\n\n    if (multiple === n) {\n      isLeapPage = true;\n      break;\n    }\n  }\n\n  return isLeapPage;\n};\n\nexport const getPageBreakPositions = items => {\n  // add enough page breaks so that each item could\n  // be put on its own page. Due to the react-grid-layout\n  // unit system, we have to estimate roughly the size of each\n  // page. At regular intervals add a unit, like a leap year\n  const yPosList = [];\n  let yPos = 0;\n\n  for (let pageNum = 1; pageNum <= items.length; ++pageNum) {\n    if (pageNum === 1) {\n      yPos += 35;\n    } else if (isLeapPage(pageNum)) {\n      yPos += 40;\n    } else {\n      yPos += 39;\n    }\n\n    yPosList.push(yPos);\n  }\n\n  return yPosList;\n};","import React from 'react';\nimport PropTypes from 'prop-types';\nimport cx from 'classnames';\nimport ReactGridLayout from 'react-grid-layout';\nimport i18n from '@dhis2/d2-i18n';\nimport { Layer, CenteredContent, CircularLoader } from '@dhis2/ui';\nimport NoContentMessage from '../../widgets/NoContentMessage';\nimport { GRID_ROW_HEIGHT_PX, GRID_COMPACT_TYPE, MARGIN_PX, GRID_COLUMNS } from '../../modules/gridUtil';\nimport { A4_LANDSCAPE_WIDTH_PX } from '../../modules/printUtils';\nimport 'react-grid-layout/css/styles.css';\nimport 'react-resizable/css/styles.css';\nimport './styles/ItemGrid.css';\n\nconst StaticGrid = ({\n  layout,\n  children,\n  onLayoutChange,\n  className,\n  isLoading\n}) => {\n  if (!isLoading && !layout.length) {\n    return /*#__PURE__*/React.createElement(NoContentMessage, {\n      text: i18n.t('There are no items on this dashboard')\n    });\n  }\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, isLoading ? /*#__PURE__*/React.createElement(Layer, {\n    translucent: true\n  }, /*#__PURE__*/React.createElement(CenteredContent, null, /*#__PURE__*/React.createElement(CircularLoader, null))) : null, /*#__PURE__*/React.createElement(ReactGridLayout, {\n    margin: MARGIN_PX,\n    cols: GRID_COLUMNS,\n    rowHeight: GRID_ROW_HEIGHT_PX,\n    width: A4_LANDSCAPE_WIDTH_PX,\n    compactType: GRID_COMPACT_TYPE,\n    isDraggable: false,\n    isResizable: false,\n    draggableCancel: \"input,textarea\",\n    className: cx('layout', className),\n    layout: layout,\n    onLayoutChange: onLayoutChange\n  }, children));\n};\n\nStaticGrid.defaultProps = {\n  onLayoutChange: Function.prototype\n};\nStaticGrid.propTypes = {\n  children: PropTypes.node,\n  className: PropTypes.string,\n  isLoading: PropTypes.bool,\n  layout: PropTypes.array,\n  onLayoutChange: PropTypes.func\n};\nexport default StaticGrid;","function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport sortBy from 'lodash/sortBy';\nimport cx from 'classnames';\nimport StaticGrid from './StaticGrid';\nimport { Item } from '../Item/Item';\nimport { acUpdatePrintDashboardLayout } from '../../actions/printDashboard';\nimport { sGetSelectedIsLoading } from '../../reducers/selected';\nimport { sGetPrintDashboardRoot, sGetPrintDashboardItems } from '../../reducers/printDashboard';\nimport { sGetIsEditing } from '../../reducers/editDashboard';\nimport { hasShape } from '../../modules/gridUtil';\nimport { getDomGridItemsSortedByYPos, getTransformYPx } from '../../modules/printUtils';\nimport { PRINT_LAYOUT } from '../Dashboard/dashboardModes';\nimport { PAGEBREAK } from '../../modules/itemTypes';\nexport class PrintLayoutItemGrid extends Component {\n  constructor(...args) {\n    super(...args);\n\n    _defineProperty(this, \"onLayoutChange\", newLayout => {\n      this.props.updateDashboardLayout(newLayout);\n    });\n\n    _defineProperty(this, \"isFirstPageBreak\", item => {\n      if (item.type !== PAGEBREAK) {\n        return false;\n      }\n\n      const pageBreaks = this.props.dashboardItems.filter(i => i.type === PAGEBREAK);\n      const sortedPageBreaks = sortBy(pageBreaks, ['y']);\n      return item.y === sortedPageBreaks[0].y;\n    });\n\n    _defineProperty(this, \"getItemComponent\", item => {\n      // the first-page-break class is used in Edit print preview\n      const itemClassNames = cx('print', 'layout', \"\".concat(item.type), {\n        'first-page-break': this.props.isEditing && this.isFirstPageBreak(item),\n        shortened: !!item.shortened\n      });\n      return /*#__PURE__*/React.createElement(\"div\", {\n        key: item.i,\n        className: itemClassNames\n      }, /*#__PURE__*/React.createElement(Item, {\n        item: item,\n        dashboardMode: PRINT_LAYOUT\n      }));\n    });\n\n    _defineProperty(this, \"getItemComponents\", items => items.map(item => this.getItemComponent(item)));\n  }\n\n  hideExtraPageBreaks() {\n    const sortedElements = getDomGridItemsSortedByYPos(Array.from(document.querySelectorAll('.react-grid-item')));\n    let pageBreakBottom = 0;\n    let lastItemBottom = 0;\n    let foundNonPageBreak = false;\n\n    for (let i = sortedElements.length - 1; i >= 0; --i) {\n      const item = sortedElements[i];\n\n      if (item.type === PAGEBREAK) {\n        if (!foundNonPageBreak) {\n          item.el.classList.add('removed');\n        } else {\n          pageBreakBottom = item.bottomY;\n          break;\n        }\n      } else {\n        foundNonPageBreak = true;\n        const thisItemBottom = item.bottomY;\n\n        if (thisItemBottom > lastItemBottom) {\n          lastItemBottom = thisItemBottom;\n        }\n      }\n    }\n\n    const pageHeight = 720;\n    const gridElement = document.querySelector('.react-grid-layout'); // the last page break is before the last item(s) so\n    // maxHeight is one page beyond the last page break\n\n    const maxHeight = pageBreakBottom + pageHeight;\n\n    if (gridElement) {\n      gridElement.style.height = \"\".concat(maxHeight, \"px\");\n    }\n\n    if (this.props.isEditing) {\n      //scroll to below the title page - which is middle of the first pagebreak\n      const firstBreak = document.querySelector('.first-page-break');\n\n      if (firstBreak && firstBreak.style && firstBreak.style.transform) {\n        const yPos = getTransformYPx(firstBreak.style);\n        const scrollArea = document.querySelector('.scroll-area');\n        scrollArea && scrollArea.scroll(0, yPos + 50);\n      }\n    }\n  }\n\n  componentDidMount() {\n    this.hideExtraPageBreaks();\n  }\n\n  componentDidUpdate() {\n    this.hideExtraPageBreaks();\n  }\n\n  render() {\n    const {\n      isLoading,\n      dashboardItems\n    } = this.props;\n    return /*#__PURE__*/React.createElement(StaticGrid, {\n      isLoading: isLoading,\n      layout: dashboardItems,\n      onLayoutChange: this.onLayoutChange\n    }, this.getItemComponents(dashboardItems));\n  }\n\n}\nPrintLayoutItemGrid.propTypes = {\n  dashboardItems: PropTypes.array,\n  isEditing: PropTypes.bool,\n  isLoading: PropTypes.bool,\n  updateDashboardLayout: PropTypes.func\n};\nPrintLayoutItemGrid.defaultProps = {\n  dashboardItems: []\n};\n\nconst mapStateToProps = state => {\n  const selectedDashboard = sGetPrintDashboardRoot(state);\n  return {\n    isLoading: sGetSelectedIsLoading(state) || !selectedDashboard,\n    dashboardItems: sGetPrintDashboardItems(state).filter(hasShape),\n    isEditing: sGetIsEditing(state)\n  };\n};\n\nexport default connect(mapStateToProps, {\n  updateDashboardLayout: acUpdatePrintDashboardLayout\n})(PrintLayoutItemGrid);","import React, { useEffect } from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport cx from 'classnames';\nimport PrintInfo from './PrintInfo';\nimport PrintActionsBar from './PrintActionsBar';\nimport PrintLayoutItemGrid from '../ItemGrid/PrintLayoutItemGrid';\nimport { acSetPrintDashboard, acAddPrintDashboardItem, acUpdatePrintDashboardItem } from '../../actions/printDashboard';\nimport { sGetSelectedId } from '../../reducers/selected';\nimport { sGetEditDashboardRoot, sGetEditDashboardItems } from '../../reducers/editDashboard';\nimport { sGetDashboardById, sGetDashboardItems } from '../../reducers/dashboards';\nimport { PAGEBREAK, PRINT_TITLE_PAGE } from '../../modules/itemTypes';\nimport { MAX_ITEM_GRID_HEIGHT } from '../../modules/gridUtil';\nimport { getPageBreakPositions } from '../../modules/printUtils';\nimport classes from './styles/PrintLayoutDashboard.module.css';\nimport './styles/print.css';\nimport './styles/print-layout.css';\n\nconst addPageBreaks = (items, addDashboardItem) => {\n  const yPosList = getPageBreakPositions(items);\n\n  for (let i = 0; i < items.length; ++i) {\n    addDashboardItem({\n      type: PAGEBREAK,\n      yPos: yPosList[i]\n    });\n  }\n};\n\nconst PrintLayoutDashboard = ({\n  dashboard,\n  items,\n  setPrintDashboard,\n  addDashboardItem,\n  updateDashboardItem,\n  fromEdit\n}) => {\n  useEffect(() => {\n    if (dashboard) {\n      setPrintDashboard(dashboard, items); // If any items are taller than one page, reduce it to one\n      // page (react-grid-layout units)\n\n      items.forEach(item => {\n        if (item.h > MAX_ITEM_GRID_HEIGHT) {\n          item.shortened = true;\n          updateDashboardItem(Object.assign({}, item, {\n            h: MAX_ITEM_GRID_HEIGHT\n          }));\n        }\n      });\n      addPageBreaks(items, addDashboardItem);\n      addDashboardItem({\n        type: PRINT_TITLE_PAGE,\n        isOneItemPerPage: false\n      });\n    }\n  }, [dashboard, items]);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.container\n  }, !fromEdit && /*#__PURE__*/React.createElement(PrintActionsBar, {\n    id: dashboard.id\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: cx(classes.wrapper, 'scroll-area', fromEdit && classes.editView)\n  }, !fromEdit && /*#__PURE__*/React.createElement(PrintInfo, {\n    isLayout: true\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.pageOuter,\n    \"data-test\": \"print-layout-page\"\n  }, /*#__PURE__*/React.createElement(PrintLayoutItemGrid, null))));\n};\n\nPrintLayoutDashboard.propTypes = {\n  addDashboardItem: PropTypes.func,\n  dashboard: PropTypes.object,\n  fromEdit: PropTypes.bool,\n  items: PropTypes.array,\n  setPrintDashboard: PropTypes.func,\n  updateDashboardItem: PropTypes.func\n};\n\nconst mapStateToProps = (state, ownProps) => {\n  const id = sGetSelectedId(state);\n\n  if (ownProps.fromEdit) {\n    const dashboard = sGetEditDashboardRoot(state);\n    return {\n      dashboard,\n      id,\n      items: sGetEditDashboardItems(state)\n    };\n  }\n\n  const dashboard = id ? sGetDashboardById(state, id) : null;\n  return {\n    dashboard,\n    id,\n    items: sGetDashboardItems(state)\n  };\n};\n\nexport default connect(mapStateToProps, {\n  setPrintDashboard: acSetPrintDashboard,\n  addDashboardItem: acAddPrintDashboardItem,\n  updateDashboardItem: acUpdatePrintDashboardItem\n})(PrintLayoutDashboard);","import React, { useEffect } from 'react';\nimport { connect } from 'react-redux';\nimport i18n from '@dhis2/d2-i18n';\nimport PropTypes from 'prop-types';\nimport DashboardContainer from './DashboardContainer';\nimport EditTitleBar from '../TitleBar/EditTitleBar';\nimport EditItemGrid from '../ItemGrid/EditItemGrid';\nimport EditBar from '../ControlBar/EditBar';\nimport NotSupportedNotice from './NotSupportedNotice';\nimport LayoutPrintPreview from './PrintLayoutDashboard';\nimport NoContentMessage from '../../widgets/NoContentMessage';\nimport { acSetEditDashboard } from '../../actions/editDashboard';\nimport { sGetSelectedId } from '../../reducers/selected';\nimport { sGetDashboardById, sGetDashboardItems } from '../../reducers/dashboards';\nimport { sGetIsPrintPreviewView } from '../../reducers/editDashboard';\nimport classes from './styles/EditDashboard.module.css';\n\nconst EditDashboard = props => {\n  useEffect(() => {\n    if (props.dashboard) {\n      props.setEditDashboard(props.dashboard, props.items);\n    }\n  }, [props.dashboard]);\n\n  const renderGrid = () => {\n    if (props.isPrintPreviewView) {\n      return /*#__PURE__*/React.createElement(LayoutPrintPreview, {\n        fromEdit: true\n      });\n    }\n\n    return /*#__PURE__*/React.createElement(DashboardContainer, null, /*#__PURE__*/React.createElement(EditTitleBar, null), /*#__PURE__*/React.createElement(EditItemGrid, null));\n  };\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.container\n  }, /*#__PURE__*/React.createElement(EditBar, null), props.updateAccess ? renderGrid() : /*#__PURE__*/React.createElement(NoContentMessage, {\n    text: i18n.t('No access')\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.notice\n  }, /*#__PURE__*/React.createElement(NotSupportedNotice, {\n    message: i18n.t('Editing dashboards on small screens is not supported. Resize your screen to return to edit mode.')\n  })));\n};\n\nEditDashboard.propTypes = {\n  dashboard: PropTypes.object,\n  isPrintPreviewView: PropTypes.bool,\n  items: PropTypes.array,\n  setEditDashboard: PropTypes.func,\n  updateAccess: PropTypes.bool\n};\n\nconst mapStateToProps = state => {\n  const id = sGetSelectedId(state);\n  const dashboard = id ? sGetDashboardById(state, id) : null;\n  const updateAccess = dashboard && dashboard.access ? dashboard.access.update : false;\n  return {\n    dashboard,\n    updateAccess,\n    items: sGetDashboardItems(state),\n    isPrintPreviewView: sGetIsPrintPreviewView(state)\n  };\n};\n\nexport default connect(mapStateToProps, {\n  setEditDashboard: acSetEditDashboard\n})(EditDashboard);","import React, { useEffect } from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport i18n from '@dhis2/d2-i18n';\nimport DashboardContainer from './DashboardContainer';\nimport EditBar from '../ControlBar/EditBar';\nimport EditTitleBar from '../TitleBar/EditTitleBar';\nimport EditItemGrid from '../ItemGrid/EditItemGrid';\nimport LayoutPrintPreview from './PrintLayoutDashboard';\nimport NotSupportedNotice from './NotSupportedNotice';\nimport { acSetEditNewDashboard } from '../../actions/editDashboard';\nimport { sGetIsPrintPreviewView } from '../../reducers/editDashboard';\nimport classes from './styles/NewDashboard.module.css';\n\nconst NewDashboard = props => {\n  useEffect(() => {\n    props.setNewDashboard();\n  }, []);\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.container\n  }, /*#__PURE__*/React.createElement(EditBar, null), props.isPrintPreviewView ? /*#__PURE__*/React.createElement(LayoutPrintPreview, {\n    fromEdit: true\n  }) : /*#__PURE__*/React.createElement(DashboardContainer, null, /*#__PURE__*/React.createElement(EditTitleBar, null), /*#__PURE__*/React.createElement(EditItemGrid, null))), /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.notice\n  }, /*#__PURE__*/React.createElement(NotSupportedNotice, {\n    className: classes.notSupportedNotice,\n    message: i18n.t('Creating dashboards on small screens is not supported. Resize your screen to return to create mode.')\n  })));\n};\n\nNewDashboard.propTypes = {\n  isPrintPreviewView: PropTypes.bool,\n  setNewDashboard: PropTypes.func\n};\n\nconst mapStateToProps = state => ({\n  isPrintPreviewView: sGetIsPrintPreviewView(state)\n});\n\nexport default connect(mapStateToProps, {\n  setNewDashboard: acSetEditNewDashboard\n})(NewDashboard);","import React from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport cx from 'classnames';\nimport StaticGrid from './StaticGrid';\nimport { Item } from '../Item/Item';\nimport { hasShape } from '../../modules/gridUtil';\nimport { PRINT } from '../Dashboard/dashboardModes';\nimport { sGetSelectedIsLoading } from '../../reducers/selected';\nimport { sGetPrintDashboardRoot, sGetPrintDashboardItems } from '../../reducers/printDashboard';\nimport { orArray } from '../../modules/util';\n\nconst PrintItemGrid = ({\n  isLoading,\n  dashboardItems\n}) => {\n  const getItemComponent = item => /*#__PURE__*/React.createElement(\"div\", {\n    key: item.i,\n    className: cx(item.type, 'print', 'oipp')\n  }, /*#__PURE__*/React.createElement(Item, {\n    item: item,\n    dashboardMode: PRINT\n  }));\n\n  const getItemComponents = items => items.map(item => getItemComponent(item));\n\n  return /*#__PURE__*/React.createElement(StaticGrid, {\n    isLoading: isLoading,\n    className: \"print\",\n    layout: dashboardItems\n  }, getItemComponents(dashboardItems));\n};\n\nPrintItemGrid.propTypes = {\n  dashboardItems: PropTypes.array,\n  isLoading: PropTypes.bool\n};\n\nconst mapStateToProps = state => {\n  const selectedDashboard = sGetPrintDashboardRoot(state);\n  return {\n    isLoading: sGetSelectedIsLoading(state) || !selectedDashboard,\n    dashboardItems: orArray(sGetPrintDashboardItems(state)).filter(hasShape)\n  };\n};\n\nexport default connect(mapStateToProps)(PrintItemGrid);","import React, { useEffect } from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport sortBy from 'lodash/sortBy';\nimport PrintInfo from './PrintInfo';\nimport PrintActionsBar from './PrintActionsBar';\nimport PrintItemGrid from '../ItemGrid/PrintItemGrid';\nimport { acSetPrintDashboard, acAddPrintDashboardItem, acRemovePrintDashboardItem, acUpdatePrintDashboardItem } from '../../actions/printDashboard';\nimport { sGetSelectedId } from '../../reducers/selected';\nimport { sGetDashboardById, sGetDashboardItems } from '../../reducers/dashboards';\nimport { PAGEBREAK, PRINT_TITLE_PAGE, SPACER } from '../../modules/itemTypes';\nimport { MAX_ITEM_GRID_HEIGHT_OIPP, MAX_ITEM_GRID_WIDTH_OIPP } from '../../modules/gridUtil';\nimport classes from './styles/PrintDashboard.module.css';\nimport './styles/print.css';\nimport './styles/print-oipp.css';\n\nconst PrintDashboard = ({\n  dashboard,\n  items,\n  setPrintDashboard,\n  addDashboardItem,\n  updateDashboardItem,\n  removeDashboardItem\n}) => {\n  useEffect(() => {\n    if (dashboard) {\n      //sort the items by Y pos so they print in order of top to bottom\n      const sortedItems = sortBy(items, ['y', 'x']);\n      setPrintDashboard(dashboard, sortedItems); // remove spacers - don't want empty pages\n\n      let spacerCount = 0;\n      items.forEach(item => {\n        if (item.type === SPACER) {\n          spacerCount += 1;\n          removeDashboardItem(item.id);\n        }\n      }); // Resize the items to the full page size\n\n      items.forEach(item => {\n        updateDashboardItem(Object.assign({}, item, {\n          w: MAX_ITEM_GRID_WIDTH_OIPP,\n          h: MAX_ITEM_GRID_HEIGHT_OIPP\n        }));\n      }); // insert page breaks into the document flow to create the \"pages\"\n      // when previewing the print\n\n      for (let i = 0; i < (items.length - spacerCount) * 2; i += 2) {\n        addDashboardItem({\n          type: PAGEBREAK,\n          position: i,\n          isStatic: false\n        });\n      }\n\n      addDashboardItem({\n        type: PRINT_TITLE_PAGE,\n        isOneItemPerPage: true\n      });\n    }\n  }, [dashboard, items]);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.container\n  }, /*#__PURE__*/React.createElement(PrintActionsBar, {\n    id: dashboard.id\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.wrapper\n  }, /*#__PURE__*/React.createElement(PrintInfo, {\n    isLayout: false\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.pageOuter,\n    \"data-test\": \"print-oipp-page\"\n  }, /*#__PURE__*/React.createElement(PrintItemGrid, null))));\n};\n\nPrintDashboard.propTypes = {\n  addDashboardItem: PropTypes.func,\n  dashboard: PropTypes.object,\n  items: PropTypes.array,\n  removeDashboardItem: PropTypes.func,\n  setPrintDashboard: PropTypes.func,\n  updateDashboardItem: PropTypes.func\n};\n\nconst mapStateToProps = state => {\n  const id = sGetSelectedId(state);\n  const dashboard = id ? sGetDashboardById(state, id) : null;\n  return {\n    dashboard,\n    id,\n    items: sGetDashboardItems(state)\n  };\n};\n\nexport default connect(mapStateToProps, {\n  setPrintDashboard: acSetPrintDashboard,\n  addDashboardItem: acAddPrintDashboardItem,\n  removeDashboardItem: acRemovePrintDashboardItem,\n  updateDashboardItem: acUpdatePrintDashboardItem\n})(PrintDashboard);","import React, { useState, useEffect } from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport isEmpty from 'lodash/isEmpty';\nimport i18n from '@dhis2/d2-i18n';\nimport { Layer, CenteredContent, CircularLoader } from '@dhis2/ui';\nimport { Redirect } from 'react-router-dom';\nimport DashboardsBar from '../ControlBar/ViewControlBar/DashboardsBar';\nimport NoContentMessage from '../../widgets/NoContentMessage';\nimport ViewDashboard from './ViewDashboard';\nimport EditDashboard from './EditDashboard';\nimport NewDashboard from './NewDashboard';\nimport PrintDashboard from './PrintDashboard';\nimport PrintLayoutDashboard from './PrintLayoutDashboard';\nimport { tSelectDashboard } from '../../actions/dashboards';\nimport { acClearEditDashboard } from '../../actions/editDashboard';\nimport { sDashboardsIsFetching, sGetAllDashboards } from '../../reducers/dashboards';\nimport { sGetSelectedId, NON_EXISTING_DASHBOARD_ID } from '../../reducers/selected';\nimport { EDIT, NEW, VIEW, PRINT, PRINT_LAYOUT, isPrintMode, isEditMode } from './dashboardModes';\nimport { useWindowDimensions } from '../WindowDimensionsProvider';\nimport { isSmallScreen } from '../../modules/smallScreen';\n\nconst setHeaderbarVisibility = mode => {\n  const header = document.getElementsByTagName('header')[0];\n\n  if (isPrintMode(mode)) {\n    header.classList.add('hidden');\n  } else {\n    header.classList.remove('hidden');\n  }\n};\n\nconst dashboardMap = {\n  [VIEW]: /*#__PURE__*/React.createElement(ViewDashboard, null),\n  [EDIT]: /*#__PURE__*/React.createElement(EditDashboard, null),\n  [NEW]: /*#__PURE__*/React.createElement(NewDashboard, null),\n  [PRINT]: /*#__PURE__*/React.createElement(PrintDashboard, null),\n  [PRINT_LAYOUT]: /*#__PURE__*/React.createElement(PrintLayoutDashboard, null)\n};\n\nconst Dashboard = ({\n  id,\n  mode,\n  dashboardsLoaded,\n  dashboardsIsEmpty,\n  routeId,\n  selectDashboard,\n  clearEditDashboard\n}) => {\n  const {\n    width\n  } = useWindowDimensions();\n  const [redirectUrl, setRedirectUrl] = useState(null);\n  useEffect(() => {\n    setHeaderbarVisibility(mode);\n  }, [mode]);\n  useEffect(() => {\n    if (isSmallScreen(width) && isEditMode(mode)) {\n      const redirectUrl = routeId ? \"/\".concat(routeId) : '/';\n      setRedirectUrl(redirectUrl);\n    } else {\n      setRedirectUrl(null);\n    }\n  }, [mode]);\n  useEffect(() => {\n    if (!isEditMode(mode)) {\n      clearEditDashboard();\n    }\n  }, [mode]);\n  useEffect(() => {\n    if (dashboardsLoaded && !dashboardsIsEmpty) {\n      selectDashboard(routeId);\n    }\n  }, [dashboardsLoaded, dashboardsIsEmpty, routeId, mode]);\n\n  if (!dashboardsLoaded) {\n    return /*#__PURE__*/React.createElement(Layer, {\n      translucent: true\n    }, /*#__PURE__*/React.createElement(CenteredContent, null, /*#__PURE__*/React.createElement(CircularLoader, null)));\n  }\n\n  if (redirectUrl) {\n    return /*#__PURE__*/React.createElement(Redirect, {\n      to: redirectUrl\n    });\n  }\n\n  if (mode === NEW) {\n    return dashboardMap[mode];\n  }\n\n  if (dashboardsIsEmpty) {\n    return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(DashboardsBar, null), /*#__PURE__*/React.createElement(NoContentMessage, {\n      text: i18n.t('No dashboards found. Use the + button to create a new dashboard.')\n    }));\n  }\n\n  if (id === NON_EXISTING_DASHBOARD_ID) {\n    return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(DashboardsBar, null), /*#__PURE__*/React.createElement(NoContentMessage, {\n      text: i18n.t('Requested dashboard not found')\n    }));\n  }\n\n  if (id === null) {\n    return /*#__PURE__*/React.createElement(Layer, {\n      translucent: true\n    }, /*#__PURE__*/React.createElement(CenteredContent, null, /*#__PURE__*/React.createElement(CircularLoader, null)));\n  }\n\n  return dashboardMap[mode];\n};\n\nDashboard.propTypes = {\n  dashboardsIsEmpty: PropTypes.bool,\n  dashboardsLoaded: PropTypes.bool,\n  id: PropTypes.string,\n  match: PropTypes.object,\n  // provided by the react-router-dom\n  mode: PropTypes.string,\n  routeId: PropTypes.string,\n  selectDashboard: PropTypes.func\n};\n\nconst mapStateToProps = (state, ownProps) => {\n  var _ownProps$match, _ownProps$match$param;\n\n  const dashboards = sGetAllDashboards(state);\n  return {\n    dashboardsIsEmpty: isEmpty(dashboards),\n    dashboardsLoaded: !sDashboardsIsFetching(state),\n    id: sGetSelectedId(state),\n    routeId: ((_ownProps$match = ownProps.match) === null || _ownProps$match === void 0 ? void 0 : (_ownProps$match$param = _ownProps$match.params) === null || _ownProps$match$param === void 0 ? void 0 : _ownProps$match$param.dashboardId) || null\n  };\n};\n\nexport default connect(mapStateToProps, {\n  selectDashboard: tSelectDashboard,\n  clearEditDashboard: acClearEditDashboard\n})(Dashboard);","import React from 'react';\nimport { connect } from 'react-redux';\nimport { AlertBar, AlertStack } from '@dhis2/ui';\nimport PropTypes from 'prop-types';\nimport { sGetAlertMessage } from '../../reducers/alert';\nimport { acClearAlertMessage } from '../../actions/alert';\nexport const Alert = ({\n  message,\n  onClose\n}) => message ? /*#__PURE__*/React.createElement(AlertStack, null, /*#__PURE__*/React.createElement(AlertBar, {\n  onHidden: onClose,\n  permanent: true\n}, message)) : null;\nAlert.propTypes = {\n  message: PropTypes.string,\n  onClose: PropTypes.func\n};\n\nconst mapStateToProps = state => ({\n  message: sGetAlertMessage(state)\n});\n\nexport default connect(mapStateToProps, {\n  onClose: acClearAlertMessage\n})(Alert);","// filter out CATEGORY that are not of type ATTRIBUTE\nconst filteredDimensions = dimensions => dimensions.filter(dim => dim.dimensionType !== 'CATEGORY' || dim.dimensionType === 'CATEGORY' && dim.dataDimensionType === 'ATTRIBUTE');\n\nexport default filteredDimensions;","function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nimport React, { useEffect } from 'react';\nimport { HashRouter as Router, Route, Switch } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { CssVariables } from '@dhis2/ui';\nimport { useD2 } from '@dhis2/app-runtime-adapter-d2';\nimport { apiFetchDimensions } from '@dhis2/analytics';\nimport { useDataEngine } from '@dhis2/app-runtime';\nimport Dashboard from './Dashboard/Dashboard';\nimport AlertBar from './AlertBar/AlertBar';\nimport { useSystemSettings } from './SystemSettingsProvider';\nimport { acReceivedUser } from '../actions/user';\nimport { tFetchDashboards } from '../actions/dashboards';\nimport { tSetControlBarRows } from '../actions/controlBar';\nimport { tSetShowDescription } from '../actions/selected';\nimport { acSetDimensions } from '../actions/dimensions';\nimport getFilteredDimensions from '../modules/getFilteredDimensions';\nimport { EDIT, VIEW, NEW, PRINT, PRINT_LAYOUT } from './Dashboard/dashboardModes';\nimport './App.css';\n\nconst App = props => {\n  const {\n    d2\n  } = useD2({});\n  const dataEngine = useDataEngine();\n  const {\n    settings\n  } = useSystemSettings();\n  useEffect(() => {\n    props.setCurrentUser(d2.currentUser);\n    props.fetchDashboards();\n    props.setControlBarRows();\n    props.setShowDescription();\n  }, []);\n  useEffect(() => {\n    const fetchDimensions = async () => {\n      try {\n        const dimensions = await apiFetchDimensions(dataEngine, settings.displayNameProperty);\n        props.setDimensions(getFilteredDimensions(dimensions));\n      } catch (e) {\n        console.error(e);\n      }\n    };\n\n    if (settings.displayNameProperty) {\n      fetchDimensions();\n    }\n  }, [settings]);\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(CssVariables, {\n    colors: true,\n    spacers: true\n  }), /*#__PURE__*/React.createElement(Router, null, /*#__PURE__*/React.createElement(Switch, null, /*#__PURE__*/React.createElement(Route, {\n    exact: true,\n    path: \"/\",\n    render: props => /*#__PURE__*/React.createElement(Dashboard, _extends({}, props, {\n      mode: VIEW\n    }))\n  }), /*#__PURE__*/React.createElement(Route, {\n    exact: true,\n    path: \"/new\",\n    render: props => /*#__PURE__*/React.createElement(Dashboard, _extends({}, props, {\n      mode: NEW\n    }))\n  }), /*#__PURE__*/React.createElement(Route, {\n    exact: true,\n    path: \"/:dashboardId\",\n    render: props => /*#__PURE__*/React.createElement(Dashboard, _extends({}, props, {\n      mode: VIEW\n    }))\n  }), /*#__PURE__*/React.createElement(Route, {\n    exact: true,\n    path: \"/:dashboardId/edit\",\n    render: props => /*#__PURE__*/React.createElement(Dashboard, _extends({}, props, {\n      mode: EDIT\n    }))\n  }), /*#__PURE__*/React.createElement(Route, {\n    exact: true,\n    path: \"/:dashboardId/printoipp\",\n    render: props => /*#__PURE__*/React.createElement(Dashboard, _extends({}, props, {\n      mode: PRINT\n    }))\n  }), /*#__PURE__*/React.createElement(Route, {\n    exact: true,\n    path: \"/:dashboardId/printlayout\",\n    render: props => /*#__PURE__*/React.createElement(Dashboard, _extends({}, props, {\n      mode: PRINT_LAYOUT\n    }))\n  }))), /*#__PURE__*/React.createElement(AlertBar, null));\n};\n\nApp.propTypes = {\n  fetchDashboards: PropTypes.func.isRequired,\n  setControlBarRows: PropTypes.func.isRequired,\n  setCurrentUser: PropTypes.func.isRequired,\n  setDimensions: PropTypes.func.isRequired,\n  setShowDescription: PropTypes.func.isRequired\n};\nconst mapDispatchToProps = {\n  fetchDashboards: tFetchDashboards,\n  setControlBarRows: tSetControlBarRows,\n  setCurrentUser: acReceivedUser,\n  setDimensions: acSetDimensions,\n  setShowDescription: tSetShowDescription\n};\nexport default connect(null, mapDispatchToProps)(App);","import { RECEIVED_USER } from '../reducers/user';\nexport const acReceivedUser = value => ({\n  type: RECEIVED_USER,\n  value\n});","import { SET_DIMENSIONS } from '../reducers/dimensions';\nexport const acSetDimensions = dimensions => ({\n  type: SET_DIMENSIONS,\n  value: dimensions\n});","/** @module reducers/selected */\nimport { validateReducer } from '../modules/util';\nexport const SET_STYLE = 'SET_STYLE';\nexport const DEFAULT_STATE_STYLE = 'LIST';\n/**\n * Reducer functions that computes and returns the new state based on the given action\n * @function\n * @param {Object} state The current state\n * @param {Object} action The action to be evaluated\n */\n\nconst style = (state = DEFAULT_STATE_STYLE, action) => {\n  switch (action.type) {\n    case SET_STYLE:\n      return validateReducer(action.value, DEFAULT_STATE_STYLE);\n\n    default:\n      return state;\n  }\n};\n\nexport default style;\n/**\n * Selectors that point to specific props in the state object\n * @function\n * @param {Object} state\n * @returns {Object}\n */\n\nexport const sGetStyleRoot = state => state.style;","import { combineReducers } from 'redux';\nimport dashboards from './dashboards';\nimport selected from './selected';\nimport dashboardsFilter from './dashboardsFilter';\nimport controlBar from './controlBar';\nimport visualizations from './visualizations';\nimport editDashboard from './editDashboard';\nimport printDashboard from './printDashboard';\nimport messages from './messages';\nimport user from './user';\nimport alert from './alert';\nimport itemFilters from './itemFilters';\nimport style from './style';\nimport dimensions from './dimensions';\nimport activeModalDimension from './activeModalDimension';\nexport default combineReducers({\n  dashboards,\n  selected,\n  dashboardsFilter,\n  controlBar,\n  visualizations,\n  messages,\n  user,\n  editDashboard,\n  printDashboard,\n  itemFilters,\n  style,\n  alert,\n  dimensions,\n  activeModalDimension\n});","import { createStore, applyMiddleware, compose } from 'redux';\nimport { createLogger } from 'redux-logger';\nimport thunk from 'redux-thunk';\nimport reducer from './reducers';\n\nconst configureStore = dataEngine => {\n  const middleware = [thunk.withExtraArgument(dataEngine)]; // Enable Redux devtools if extension is installed instead of redux-logger\n\n  const composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\n\n  if (!window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ && process.env.NODE_ENV !== 'production') {\n    middleware.push(createLogger());\n  }\n\n  return createStore(reducer, composeEnhancers(applyMiddleware(...middleware)));\n};\n\nexport default configureStore;","//------------------------------------------------------------------------------\n// <auto-generated>\n// This code was generated by d2-i18n-generate.\n//\n// Changes to this file may cause incorrect behavior and will be lost if\n// the code is regenerated.\n// </auto-generated>\n//------------------------------------------------------------------------------\nimport i18n from '@dhis2/d2-i18n';\nimport arTranslations from './ar/translations.json';\nimport ar_IQTranslations from './ar_IQ/translations.json';\nimport ckbTranslations from './ckb/translations.json';\nimport csTranslations from './cs/translations.json';\nimport daTranslations from './da/translations.json';\nimport enTranslations from './en/translations.json';\nimport esTranslations from './es/translations.json';\nimport frTranslations from './fr/translations.json';\nimport idTranslations from './id/translations.json';\nimport kmTranslations from './km/translations.json';\nimport loTranslations from './lo/translations.json';\nimport myTranslations from './my/translations.json';\nimport nbTranslations from './nb/translations.json';\nimport prsTranslations from './prs/translations.json';\nimport psTranslations from './ps/translations.json';\nimport ptTranslations from './pt/translations.json';\nimport pt_BRTranslations from './pt_BR/translations.json';\nimport ruTranslations from './ru/translations.json';\nimport svTranslations from './sv/translations.json';\nimport tetTranslations from './tet/translations.json';\nimport tgTranslations from './tg/translations.json';\nimport ukTranslations from './uk/translations.json';\nimport urTranslations from './ur/translations.json';\nimport uzTranslations from './uz/translations.json';\nimport uz_CyrlTranslations from './uz_Cyrl/translations.json';\nimport uz_LatnTranslations from './uz_Latn/translations.json';\nimport viTranslations from './vi/translations.json';\nimport zhTranslations from './zh/translations.json';\nimport zh_CNTranslations from './zh_CN/translations.json';\nconst namespace = 'default';\ni18n.addResources('ar', namespace, arTranslations);\ni18n.addResources('ar_IQ', namespace, ar_IQTranslations);\ni18n.addResources('ckb', namespace, ckbTranslations);\ni18n.addResources('cs', namespace, csTranslations);\ni18n.addResources('da', namespace, daTranslations);\ni18n.addResources('en', namespace, enTranslations);\ni18n.addResources('es', namespace, esTranslations);\ni18n.addResources('fr', namespace, frTranslations);\ni18n.addResources('id', namespace, idTranslations);\ni18n.addResources('km', namespace, kmTranslations);\ni18n.addResources('lo', namespace, loTranslations);\ni18n.addResources('my', namespace, myTranslations);\ni18n.addResources('nb', namespace, nbTranslations);\ni18n.addResources('prs', namespace, prsTranslations);\ni18n.addResources('ps', namespace, psTranslations);\ni18n.addResources('pt', namespace, ptTranslations);\ni18n.addResources('pt_BR', namespace, pt_BRTranslations);\ni18n.addResources('ru', namespace, ruTranslations);\ni18n.addResources('sv', namespace, svTranslations);\ni18n.addResources('tet', namespace, tetTranslations);\ni18n.addResources('tg', namespace, tgTranslations);\ni18n.addResources('uk', namespace, ukTranslations);\ni18n.addResources('ur', namespace, urTranslations);\ni18n.addResources('uz', namespace, uzTranslations);\ni18n.addResources('uz_Cyrl', namespace, uz_CyrlTranslations);\ni18n.addResources('uz_Latn', namespace, uz_LatnTranslations);\ni18n.addResources('vi', namespace, viTranslations);\ni18n.addResources('zh', namespace, zhTranslations);\ni18n.addResources('zh_CN', namespace, zh_CNTranslations);\nexport default i18n;","import React from 'react';\nimport { MuiThemeProvider, createMuiTheme } from '@material-ui/core/styles';\nimport dhis2theme from '@dhis2/d2-ui-core/theme/mui3.theme';\nimport { Provider as ReduxProvider } from 'react-redux';\nimport { D2Shim } from '@dhis2/app-runtime-adapter-d2';\nimport { useDataEngine } from '@dhis2/app-runtime';\nimport WindowDimensionsProvider from './components/WindowDimensionsProvider';\nimport SystemSettingsProvider from './components/SystemSettingsProvider';\nimport App from './components/App';\nimport configureStore from './configureStore';\nimport './AppWrapper.css';\nimport './locales';\n\nconst muiTheme = () => createMuiTheme(dhis2theme);\n\nconst d2Config = {\n  schemas: ['chart', 'map', 'report', 'reportTable', 'eventChart', 'eventReport', 'dashboard', 'organisationUnit', 'userGroup']\n}; // TODO: ER and EV plugins require the auth header in development mode.\n// Remove this when these plugins are rewritten\n\nconst authorization = process.env.REACT_APP_DHIS2_AUTHORIZATION || null;\n\nif (authorization) {\n  d2Config.headers = {\n    Authorization: authorization\n  };\n}\n\nconst AppWrapper = () => {\n  const dataEngine = useDataEngine();\n  return /*#__PURE__*/React.createElement(ReduxProvider, {\n    store: configureStore(dataEngine)\n  }, /*#__PURE__*/React.createElement(MuiThemeProvider, {\n    theme: muiTheme()\n  }, /*#__PURE__*/React.createElement(D2Shim, {\n    d2Config: d2Config,\n    i18nRoot: \"./i18n\"\n  }, ({\n    d2\n  }) => {\n    if (!d2) {\n      // TODO: Handle errors in d2 initialization\n      return null;\n    }\n\n    return /*#__PURE__*/React.createElement(SystemSettingsProvider, null, /*#__PURE__*/React.createElement(WindowDimensionsProvider, null, /*#__PURE__*/React.createElement(App, null)));\n  })));\n};\n\nexport default AppWrapper;","import i18n from '@dhis2/d2-i18n';\nimport TableIcon from '@material-ui/icons/ViewList';\nimport ChartIcon from '@material-ui/icons/InsertChart';\nimport MapIcon from '@material-ui/icons/Public';\nimport ExtensionIcon from '@material-ui/icons/Extension';\nimport DescriptionIcon from '@material-ui/icons/Description';\nimport PersonIcon from '@material-ui/icons/Person';\nimport FontDownloadIcon from '@material-ui/icons/FontDownload';\nimport EmailIcon from '@material-ui/icons/Email';\nimport CropFreeIcon from '@material-ui/icons/CropFree';\nimport NotInterestedIcon from '@material-ui/icons/NotInterested'; // Item types\n\nexport const VISUALIZATION = 'VISUALIZATION';\nexport const REPORT_TABLE = 'REPORT_TABLE';\nexport const CHART = 'CHART';\nexport const MAP = 'MAP';\nexport const EVENT_REPORT = 'EVENT_REPORT';\nexport const EVENT_CHART = 'EVENT_CHART';\nexport const APP = 'APP';\nexport const REPORTS = 'REPORTS';\nexport const RESOURCES = 'RESOURCES';\nexport const USERS = 'USERS';\nexport const MESSAGES = 'MESSAGES';\nexport const TEXT = 'TEXT';\nexport const SPACER = 'SPACER';\nexport const PAGEBREAK = 'PAGEBREAK';\nexport const PRINT_TITLE_PAGE = 'PRINT_TITLE_PAGE';\nconst DOMAIN_TYPE_AGGREGATE = 'AGGREGATE';\nconst DOMAIN_TYPE_TRACKER = 'TRACKER'; // Dashboard helpers\n\nexport const isVisualizationType = item => !!itemTypeMap[item.type].isVisualizationType;\nexport const hasMapView = itemType => itemTypeMap[itemType].domainType === DOMAIN_TYPE_AGGREGATE;\nexport const isTrackerDomainType = itemType => itemTypeMap[itemType].domainType === DOMAIN_TYPE_TRACKER;\nexport const getDefaultItemCount = itemType => itemTypeMap[itemType].defaultItemCount || 5;\nexport const getAppName = itemType => itemTypeMap[itemType].appName || ''; // Item type map\n\nexport const itemTypeMap = {\n  [VISUALIZATION]: {\n    id: VISUALIZATION,\n    endPointName: 'visualizations',\n    propName: 'visualization',\n    pluralTitle: i18n.t('Visualizations'),\n    appUrl: id => \"dhis-web-data-visualizer/#/\".concat(id),\n    appName: 'Data Visualizer',\n    defaultItemCount: 10\n  },\n  [REPORT_TABLE]: {\n    id: REPORT_TABLE,\n    endPointName: 'visualizations',\n    dataStatisticsName: 'REPORT_TABLE_VIEW',\n    propName: 'visualization',\n    pluralTitle: i18n.t('Pivot tables'),\n    domainType: DOMAIN_TYPE_AGGREGATE,\n    isVisualizationType: true,\n    appUrl: id => \"dhis-web-data-visualizer/#/\".concat(id),\n    appName: 'Data Visualizer'\n  },\n  [CHART]: {\n    id: CHART,\n    endPointName: 'visualizations',\n    propName: 'visualization',\n    dataStatisticsName: 'CHART_VIEW',\n    pluralTitle: i18n.t('Charts'),\n    domainType: DOMAIN_TYPE_AGGREGATE,\n    isVisualizationType: true,\n    appUrl: id => \"dhis-web-data-visualizer/#/\".concat(id),\n    appName: 'Data Visualizer'\n  },\n  [MAP]: {\n    id: MAP,\n    endPointName: 'maps',\n    dataStatisticsName: 'MAP_VIEW',\n    propName: 'map',\n    pluralTitle: i18n.t('Maps'),\n    domainType: DOMAIN_TYPE_AGGREGATE,\n    isVisualizationType: true,\n    appUrl: id => \"dhis-web-maps/?id=\".concat(id),\n    appName: 'Maps'\n  },\n  [EVENT_REPORT]: {\n    id: EVENT_REPORT,\n    endPointName: 'eventReports',\n    propName: 'eventReport',\n    pluralTitle: i18n.t('Event reports'),\n    domainType: DOMAIN_TYPE_TRACKER,\n    isVisualizationType: true,\n    appUrl: id => \"dhis-web-event-reports/?id=\".concat(id),\n    appName: 'Event Reports'\n  },\n  [EVENT_CHART]: {\n    id: EVENT_CHART,\n    endPointName: 'eventCharts',\n    propName: 'eventChart',\n    pluralTitle: i18n.t('Event charts'),\n    domainType: DOMAIN_TYPE_TRACKER,\n    isVisualizationType: true,\n    appUrl: id => \"dhis-web-event-visualizer/?id=\".concat(id),\n    appName: 'Event Visualizer'\n  },\n  [APP]: {\n    endPointName: 'apps',\n    propName: 'appKey',\n    pluralTitle: i18n.t('Apps')\n  },\n  [REPORTS]: {\n    id: REPORTS,\n    endPointName: 'reports',\n    propName: 'reports',\n    pluralTitle: i18n.t('Reports'),\n    appUrl: (id, type) => {\n      switch (type) {\n        case 'HTML':\n          return \"dhis-web-reports/#/standard-report/view/\".concat(id);\n\n        case 'JASPER_REPORT_TABLE':\n        case 'JASPER_JDBC':\n        default:\n          return \"api/reports/\".concat(id, \"/data.pdf?t=\").concat(new Date().getTime());\n      }\n    }\n  },\n  [RESOURCES]: {\n    id: RESOURCES,\n    endPointName: 'resources',\n    propName: 'resources',\n    pluralTitle: i18n.t('Resources'),\n    appUrl: id => \"api/documents/\".concat(id, \"/data\")\n  },\n  [USERS]: {\n    id: USERS,\n    endPointName: 'users',\n    propName: 'users',\n    pluralTitle: i18n.t('Users'),\n    appUrl: id => \"dhis-web-dashboard-integration/profile.action?id=\".concat(id)\n  },\n  [TEXT]: {\n    id: TEXT,\n    propName: 'text'\n  },\n  [MESSAGES]: {\n    propName: 'messages'\n  },\n  [SPACER]: {\n    propName: 'text'\n  },\n  [PAGEBREAK]: {\n    propName: 'text'\n  },\n  [PRINT_TITLE_PAGE]: {\n    propName: 'text'\n  }\n};\nexport const getEndPointName = type => itemTypeMap[type].endPointName;\nexport const getDataStatisticsName = type => itemTypeMap[type].dataStatisticsName || null;\nexport const getItemUrl = (type, item, baseUrl) => {\n  let url;\n\n  if (type === APP) {\n    url = item.launchUrl;\n  }\n\n  if (itemTypeMap[type] && itemTypeMap[type].appUrl) {\n    url = \"\".concat(baseUrl, \"/\").concat(itemTypeMap[type].appUrl(item.id, item.type));\n  }\n\n  return url;\n};\nexport const getItemIcon = type => {\n  switch (type) {\n    case REPORT_TABLE:\n    case EVENT_REPORT:\n    case REPORTS:\n      return TableIcon;\n\n    case CHART:\n    case EVENT_CHART:\n      return ChartIcon;\n\n    case MAP:\n      return MapIcon;\n\n    case APP:\n      return ExtensionIcon;\n\n    case RESOURCES:\n      return DescriptionIcon;\n\n    case USERS:\n      return PersonIcon;\n\n    case TEXT:\n      return FontDownloadIcon;\n\n    case MESSAGES:\n      return EmailIcon;\n\n    case SPACER:\n      return CropFreeIcon;\n\n    default:\n      return NotInterestedIcon;\n  }\n};","import isObject from 'lodash/isObject'; // validation\n\nexport function orNull(param) {\n  return param === undefined ? null : param;\n}\nexport function orArray(param) {\n  return Array.isArray(param) ? param : [];\n}\nexport function orObject(param) {\n  return isObject(param) ? param : {};\n} // array\n\nexport function arrayGetById(array, id) {\n  return array.find(item => item.id === id);\n} // object\n\nexport function arrayToIdMap(array) {\n  return array.reduce((obj, item) => {\n    obj[item.id] = item;\n    return obj;\n  }, {});\n} // date\n\nexport function getDate() {\n  const y = Math.floor(Math.random() * 3) + 2015;\n  const M = Math.floor(Math.random() * 12) + 1;\n  const d = Math.floor(Math.random() * 28) + 1; // const h = Math.floor(Math.random() * 23) + 1;\n  // const m = Math.floor(Math.random() * 59) + 1;\n  // const s = Math.floor(Math.random() * 59) + 1;\n\n  return new Date(\"\".concat(y, \"-\").concat(M, \"-\").concat(d)).toJSON().replace('T', ' ').substr(0, 10);\n}\nexport const formatDate = (value, uiLocale) => {\n  if (typeof global.Intl !== 'undefined' && Intl.DateTimeFormat) {\n    const locale = uiLocale || 'en';\n    return new Intl.DateTimeFormat(locale, {\n      year: 'numeric',\n      month: 'short',\n      day: 'numeric'\n    }).format(new Date(value));\n  }\n\n  return value.substr(0, 19).replace('T', ' ');\n};\n/**\n * Sorts an array of objects based on provided date property\n *\n * @param {Array} items Array of objects\n * @param {String} dateProp Name of the date property to be used for sorting\n * @param {Boolean} ascending Whether to sort ascending or descending\n */\n\nexport const sortByDate = (items, dateProp, ascending = true) => {\n  const values = Object.values(items);\n  values.sort((a, b) => {\n    const aDate = new Date(a[dateProp]);\n    const bDate = new Date(b[dateProp]);\n    return ascending ? aDate - bDate : bDate - aDate;\n  });\n  return values;\n}; // reducer validator\n\nexport const validateReducer = (value, defaultValue) => value === undefined || value === null ? defaultValue : value;","import isObject from 'lodash/isObject';\nimport { itemTypeMap } from './itemTypes';\nexport const getVisualizationFromItem = item => {\n  var _itemTypeMap$item$typ;\n\n  if (!isObject(item)) {\n    return null;\n  }\n\n  const propName = (_itemTypeMap$item$typ = itemTypeMap[item.type]) === null || _itemTypeMap$item$typ === void 0 ? void 0 : _itemTypeMap$item$typ.propName;\n  return item[propName] || item.reportTable || item.chart || item.map || item.eventReport || item.eventChart || {};\n};\nexport const getVisualizationId = item => getVisualizationFromItem(item).id;\nexport const getVisualizationName = item => getVisualizationFromItem(item).name;","import { REPORT_TABLE, CHART, MAP, EVENT_REPORT, EVENT_CHART, itemTypeMap } from '../../../../modules/itemTypes';\nimport { getVisualizationId } from '../../../../modules/item';\nimport getGridItemDomId from '../../../../modules/getGridItemDomId'; //external plugins\n\nconst itemTypeToExternalPlugin = {\n  [MAP]: 'mapPlugin',\n  [EVENT_REPORT]: 'eventReportPlugin',\n  [EVENT_CHART]: 'eventChartPlugin'\n};\n\nconst hasIntegratedPlugin = type => [CHART, REPORT_TABLE].includes(type);\n\nconst getPlugin = type => {\n  if (hasIntegratedPlugin(type)) {\n    return true;\n  }\n\n  const pluginName = itemTypeToExternalPlugin[type];\n  return global[pluginName];\n};\n\nexport const pluginIsAvailable = type => !!getPlugin(type);\nexport const loadPlugin = (plugin, config, credentials) => {\n  if (!(plugin && plugin.load)) {\n    return;\n  }\n\n  plugin.url = credentials.baseUrl;\n  plugin.loadingIndicator = true;\n  plugin.dashboard = true;\n\n  if (credentials.auth) {\n    plugin.auth = credentials.auth;\n  }\n\n  plugin.load(config);\n};\nexport const getLink = (item, baseUrl) => {\n  const appUrl = itemTypeMap[item.type].appUrl(getVisualizationId(item));\n  return \"\".concat(baseUrl, \"/\").concat(appUrl);\n};\nexport const load = async (item, visualization, {\n  credentials,\n  activeType,\n  options = {}\n}) => {\n  const config = { ...visualization,\n    ...options,\n    el: getGridItemDomId(item.id)\n  };\n  const type = activeType || item.type;\n  const plugin = getPlugin(type);\n  loadPlugin(plugin, config, credentials);\n};\nexport const resize = (item, isFullscreen) => {\n  const plugin = getPlugin(item.type);\n\n  if (plugin && plugin.resize) {\n    plugin.resize(getGridItemDomId(item.id), isFullscreen);\n  }\n};\nexport const unmount = (item, activeType) => {\n  const plugin = getPlugin(activeType);\n\n  if (plugin && plugin.unmount) {\n    plugin.unmount(getGridItemDomId(item.id));\n  }\n};","const getGridItemDomId = id => \"item-\".concat(id);\n\nexport default getGridItemDomId;","// extracted by mini-css-extract-plugin\nmodule.exports = {\"itemHeaderWrap\":\"ItemHeader_itemHeaderWrap__JcBP7\",\"itemTitle\":\"ItemHeader_itemTitle__34rHa\",\"itemActionsWrap\":\"ItemHeader_itemActionsWrap__Gx3D9\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"grid\":\"ItemGrid_grid__1omnd\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"link\":\"DashboardItemChip_link__BW7Y-\",\"icon\":\"DashboardItemChip_icon__3bSyL\",\"selected\":\"DashboardItemChip_selected__3HtWQ\",\"unselected\":\"DashboardItemChip_unselected__aM-zh\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"ClearButton_button__3WukP\",\"icon\":\"ClearButton_icon__2ErJB\"};"],"sourceRoot":""}
{"version":3,"sources":["D2App/components/ControlBar/styles/ControlBar.module.css","D2App/components/ControlBar/styles/DashboardItemChip.module.css","D2App/components/ControlBar/styles/ClearButton.module.css","D2App/components/ControlBar/styles/Filter.module.css","D2App/components/ControlBar/styles/ShowMoreButton.module.css","D2App/components/ControlBar/styles/DashboardsBar.module.css","D2App/components/ItemFilter/styles/FilterSelector.module.css","D2App/components/TitleBar/styles/ViewTitleBar.module.css","D2App/components/Item/VisualizationItem/Visualization/styles/NoVisualizationMessage.module.css","D2App/components/Item/VisualizationItem/Visualization/styles/LoadingMask.module.css","D2App/components/Item/VisualizationItem/styles/FatalErrorBoundary.module.css","D2App/components/Item/ItemHeader/styles/DeleteItemButton.module.css","D2App/components/Item/ItemHeader/styles/PrintItemInfo.module.css","D2App/components/Item/VisualizationItem/styles/ItemFooter.module.css","D2App/components/Item/ListItem/Item.module.css","D2App/components/Item/PrintTitlePageItem/styles/Item.module.css","D2App/components/FilterBar/styles/FilterBar.module.css","D2App/components/ItemSelector/styles/HeaderMenuItem.module.css","D2App/components/ItemSelector/styles/ContentMenuItem.module.css","D2App/components/ItemSelector/styles/CategorizedMenuGroup.module.css","D2App/components/ItemSelector/styles/ItemSelector.module.css","D2App/components/TitleBar/styles/EditTitleBar.module.css","D2App/modules/itemTypes.js","D2App/modules/util.js","D2App/components/ControlBar/styles/ConfirmDeleteDialog.module.css","D2App/components/ControlBar/styles/EditBar.module.css","D2App/components/Dashboard/styles/NotSupportedNotice.module.css","D2App/components/Dashboard/styles/PrintInfo.module.css","D2App/components/Dashboard/styles/PrintActionsBar.module.css","D2App/components/Dashboard/styles/PrintLayoutDashboard.module.css","D2App/components/Dashboard/styles/PrintDashboard.module.css","D2App/components/WindowDimensionsProvider.js","D2App/components/ControlBar/ControlBar.js","D2App/icons/Star.js","D2App/api/dataStatistics.js","D2App/components/ControlBar/DashboardItemChip.js","D2App/icons/AddCircle.js","D2App/icons/Search.js","D2App/icons/Clear.js","D2App/components/ControlBar/ClearButton.js","D2App/reducers/dashboardsFilter.js","D2App/modules/gridUtil.js","D2App/modules/smallScreen.js","D2App/components/ControlBar/Filter.js","D2App/actions/dashboardsFilter.js","D2App/components/ControlBar/assets/icons.js","D2App/components/ControlBar/ShowMoreButton.js","D2App/components/ControlBar/controlBarDimensions.js","D2App/reducers/controlBar.js","D2App/modules/uiBackendItemConverter.js","D2App/reducers/dashboards.js","D2App/reducers/selected.js","D2App/api/userDataStore.js","D2App/api/controlBar.js","D2App/actions/controlBar.js","D2App/components/ControlBar/DashboardsBar.js","D2App/widgets/NoContentMessage.js","D2App/components/Item/VisualizationItem/assets/icons.js","D2App/api/description.js","D2App/reducers/user.js","D2App/reducers/dimensions.js","D2App/reducers/itemFilters.js","D2App/actions/itemFilters.js","D2App/reducers/messages.js","D2App/api/messages.js","D2App/components/Item/MessagesItem/actions.js","D2App/reducers/alert.js","D2App/actions/alert.js","D2App/reducers/visualizations.js","D2App/actions/visualizations.js","D2App/api/metadata.js","D2App/api/index.js","D2App/api/dashboards.js","D2App/actions/selected.js","D2App/api/localStorage.js","D2App/actions/dashboards.js","D2App/components/ItemFilter/FilterDialog.js","D2App/reducers/settings.js","D2App/reducers/activeModalDimension.js","D2App/actions/activeModalDimension.js","D2App/components/ItemFilter/FilterSelector.js","D2App/components/TitleBar/ViewTitleBar.js","D2App/api/starDashboard.js","D2App/components/Item/VisualizationItem/Visualization/DefaultPlugin.js","D2App/components/Item/VisualizationItem/Visualization/NoVisualizationMessage.js","D2App/components/Item/VisualizationItem/Visualization/MapPlugin.js","D2App/components/Item/VisualizationItem/Visualization/LoadingMask.js","D2App/components/Item/VisualizationItem/Visualization/getFilteredVisualization.js","D2App/components/Item/VisualizationItem/Visualization/getVisualizationConfig.js","D2App/modules/memoizeOne.js","D2App/components/Item/VisualizationItem/Visualization/Visualization.js","D2App/components/Item/VisualizationItem/FatalErrorBoundary.js","D2App/components/Item/ItemHeader/ViewItemActions.js","D2App/components/Item/ItemHeader/DeleteItemButton.js","D2App/reducers/editDashboard.js","D2App/api/editDashboard.js","D2App/actions/editDashboard.js","D2App/components/Item/ItemHeader/EditItemActions.js","D2App/icons/Info.js","D2App/components/Item/ItemHeader/PrintItemInfo.js","D2App/components/Dashboard/dashboardModes.js","D2App/components/Item/ItemHeader/ItemHeader.js","D2App/components/Item/VisualizationItem/ItemHeaderButtons.js","D2App/components/Item/VisualizationItem/ItemFooter.js","D2App/components/Item/VisualizationItem/Item.js","D2App/widgets/Line.js","D2App/components/Item/MessagesItem/Item.js","D2App/components/Item/NotSupportedItem/Item.js","D2App/icons/Description.js","D2App/icons/Delete.js","D2App/components/Item/ListItem/Item.js","D2App/components/Item/ListItem/actions.js","D2App/reducers/printDashboard.js","D2App/components/Item/TextItem/Item.js","D2App/components/Item/AppItem/Item.js","D2App/components/Item/SpacerItem/Item.js","D2App/components/Item/PageBreakItem/Item.js","D2App/components/Item/PrintTitlePageItem/Item.js","D2App/components/Item/Item.js","D2App/components/Item/ProgressiveLoadingContainer.js","D2App/components/ItemGrid/ViewItemGrid.js","D2App/components/FilterBar/FilterBadge.js","D2App/components/FilterBar/FilterBar.js","D2App/actions/printDashboard.js","D2App/components/Dashboard/ViewDashboard.js","D2App/components/ItemSelector/ItemSearchField.js","D2App/components/ItemSelector/HeaderMenuItem.js","D2App/icons/Launch.js","D2App/components/ItemSelector/ContentMenuItem.js","D2App/components/ItemSelector/actions.js","D2App/components/ItemSelector/selectableItems.js","D2App/components/ItemSelector/CategorizedMenuGroup.js","D2App/components/ItemSelector/SinglesMenuGroup.js","D2App/components/ItemSelector/ItemSelector.js","D2App/components/TitleBar/EditTitleBar.js","D2App/components/ItemGrid/EditItemGrid.js","D2App/components/ControlBar/ConfirmDeleteDialog.js","D2App/components/ControlBar/EditBar.js","D2App/components/Dashboard/NotSupportedNotice.js","D2App/components/Dashboard/PrintInfo.js","D2App/icons/LessHorizontal.js","D2App/components/Dashboard/PrintActionsBar.js","D2App/modules/printUtils.js","D2App/components/ItemGrid/StaticGrid.js","D2App/components/ItemGrid/PrintLayoutItemGrid.js","D2App/components/Dashboard/PrintLayoutDashboard.js","D2App/components/Dashboard/EditDashboard.js","D2App/components/Dashboard/NewDashboard.js","D2App/components/ItemGrid/PrintItemGrid.js","D2App/components/Dashboard/PrintDashboard.js","D2App/components/Dashboard/Dashboard.js","D2App/components/AlertBar/AlertBar.js","D2App/actions/user.js","D2App/api/settings.js","D2App/components/App.js","D2App/actions/dimensions.js","D2App/actions/settings.js","D2App/reducers/style.js","D2App/reducers/index.js","D2App/configureStore.js","D2App/locales/index.js","D2App/AppWrapper.js","D2App/modules/item.js","D2App/components/Item/VisualizationItem/Visualization/plugin.js","D2App/modules/getGridItemDomId.js","D2App/components/Item/ItemHeader/styles/ItemHeader.module.css"],"names":["module","exports","VISUALIZATION","REPORT_TABLE","CHART","MAP","EVENT_REPORT","EVENT_CHART","APP","REPORTS","RESOURCES","USERS","MESSAGES","TEXT","SPACER","PAGEBREAK","PRINT_TITLE_PAGE","DOMAIN_TYPE_AGGREGATE","DOMAIN_TYPE_TRACKER","isVisualizationType","item","itemTypeMap","type","hasMapView","itemType","domainType","isTrackerDomainType","getDefaultItemCount","defaultItemCount","getAppName","appName","id","endPointName","propName","pluralTitle","i18n","t","appUrl","dataStatisticsName","Date","getTime","getEndPointName","getDataStatisticsName","getItemUrl","baseUrl","url","launchUrl","getItemIcon","TableIcon","ChartIcon","MapIcon","ExtensionIcon","DescriptionIcon","PersonIcon","FontDownloadIcon","EmailIcon","CropFreeIcon","NotInterestedIcon","orArray","param","Array","isArray","orObject","isObject","arrayToIdMap","array","reduce","obj","formatDate","value","uiLocale","global","Intl","DateTimeFormat","locale","year","month","day","format","substr","replace","validateReducer","defaultValue","undefined","WindowDimensionsCtx","createContext","windowDims","height","window","innerHeight","width","innerWidth","WindowDimensionsProvider","children","dimensions","setDimensions","useState","useEffect","handleResize","debounce","addEventListener","removeEventListener","Provider","useWindowDimensions","useContext","ControlBar","React","Component","constructor","props","super","onStartDrag","this","setState","dragging","onDrag","onEndDrag","event","preventDefault","stopPropagation","newHeight","clientY","onChangeHeight","requestAnimationFrame","renderDragHandle","className","classes","draghandle","onMouseDown","data-testid","state","render","Math","max","rootClass","cx","root","style","content","defaultProps","StarIcon","xmlns","viewBox","d","fill","apiPostDataStatistics","async","eventType","d2","getInstance","Api","getApi","post","DashboardItemChip","starred","selected","label","dashboardId","onClick","chipProps","selectedState","unselected","icon","Star","debouncedPostStatistics","link","to","data-test","AddCircleIcon","colors","teal600","SearchIcon","small","ClearIcon","grey800","ClearButton","onClear","button","Clear","color","SET_DASHBOARDS_FILTER","CLEAR_DASHBOARDS_FILTER","sGetDashboardsFilter","dashboardsFilter","GRID_COMPACT_TYPE","GRID_ROW_HEIGHT_PX","MARGIN_PX","MARGIN_SM_PX","GRID_PADDING_PX","NEW_ITEM_SHAPE","x","y","w","h","isNonNegativeInteger","Number","isInteger","hasShape","withShape","items","map","i","Object","assign","col","row","floor","itemWidth","MAX_ITEM_GRID_WIDTH","getShape","originalH","getGridWidth","windowWidthPx","getGridUnitsForSmFromPx","hPx","gridUnitHeightPx","round","getProportionalHeight","wPx","getItemWHPx","ratioWH","newWPx","newHPx","getGridItemProperties","itemId","minH","getPageBreakItemShape","yPos","isStatic","GRID_COLUMNS","static","getPrintTitlePageItemShape","isOneItemPerPage","gridUnits","colOrRowSize","marginPx","isSmallScreen","mapDispatchToProps","setDashboardsFilter","clearDashboardsFilter","connect","filterText","isMaxHeight","onKeypressEnter","onToggleMaxHeight","focusedClassName","setFocusedClassName","inputFocused","setInputFocus","searchButton","Search","searchIcon","container","onFocus","focused","onBlur","input","placeholder","onChange","target","onKeyUp","keyCode","ref","focus","ChevronDown","ChevronUp","ShowMoreButton","disabled","containerRef","useRef","buttonLabel","onButtonClicked","buttonEl","current","MouseEvent","bubbles","cancelable","dispatchEvent","placement","onMouseOver","onMouseOut","showMore","aria-label","getRowsHeight","rows","getControlBarHeight","FIRST_ROW_PADDING_HEIGHT","CONTROL_BAR","CONTROL_BAR_CONTAINER","CHIPS_CONTAINER","CONTROL_BAR_COLLAPSED","getControlBarHeightSmallDevice","controlBarHeight","SEARCH_BAR_HEIGHT_SMALL","SET_CONTROLBAR_USER_ROWS","combineReducers","userRows","action","sGetControlBarUserRows","controlBar","sGetControlBarRoot","spacerContent","emptyTextItemContent","isTextType","text","convertUiItemsToBackend","isUiSpacerType","convertBackendItemsToUi","isBackendSpacerType","gridProperties","SET_DASHBOARDS","ADD_DASHBOARDS","SET_DASHBOARD_STARRED","SET_DASHBOARD_DISPLAY_NAME","SET_DASHBOARD_ITEMS","DEFAULT_STATE_DASHBOARDS","byId","EMPTY_DASHBOARD","updateDashboardProp","prop","sGetDashboardsRoot","dashboards","sGetDashboardById","sDashboardsIsFetching","sGetAllDashboards","sGetDashboardItems","sGetStarredDashboards","values","filter","dashboard","sGetUnstarredDashboards","getCustomDashboards","data","arrayFrom","name","displayName","description","displayDescription","favorite","owner","user","created","split","join","lastUpdated","access","numberOfItems","dashboardItems","length","SET_SELECTED_ID","SET_SELECTED_ISLOADING","SET_SELECTED_SHOWDESCRIPTION","SET_SELECTED_ITEM_ACTIVE_TYPE","CLEAR_SELECTED_ITEM_ACTIVE_TYPES","DEFAULT_STATE_SELECTED_SHOWDESCRIPTION","DEFAULT_STATE_SELECTED_ITEM_ACTIVE_TYPES","isLoading","showDescription","itemActiveTypes","activeType","sGetSelectedRoot","sGetSelectedId","sGetSelectedIsLoading","sGetSelectedShowDescription","sGetSelectedItemActiveType","NAMESPACE","hasNamespace","currentUser","dataStore","has","getNamespace","get","create","apiPostUserDataStoreValue","key","set","apiGetUserDataStoreValue","namespace","keys","find","k","console","log","KEY_CONTROLBAR_ROWS","acSetControlBarUserRows","isDashboardBarMaxHeight","withRouter","selectedId","history","setRows","createRef","scrollToTop","scroll","toggleMaxHeight","newRows","cancelMaxHeight","getFilteredDashboards","filteredDashboards","arraySort","toLowerCase","includes","viewableRows","getContainerHeight","containerClass","expanded","collapsed","getNumRowsFromHeight","min","apiPostControlBarRows","controls","newLink","AddCircle","Filter","push","chips","chipContainerClasses","chipContainer","getDashboardChips","marginTop","NoContentMessage","padding","textAlign","fontSize","fontWeight","grey600","ThreeDots","SpeechBubble","margin","fillRule","transform","Warning","Fullscreen","ExitFullscreen","KEY_SHOW_DESCRIPTION","RECEIVED_USER","DEFAULT_STATE_USER","username","isSuperuser","sGetUserUsername","SET_DIMENSIONS","DEFAULT_DIMENSIONS","getDimensionById","DIMENSION_ID_PERIOD","DIMENSION_ID_ORGUNIT","sGetDimensions","CLEAR_ITEM_FILTERS","SET_ITEM_FILTERS","ADD_ITEM_FILTER","REMOVE_ITEM_FILTER","DEFAULT_STATE_ITEM_FILTERS","sGetItemFiltersRoot","itemFilters","sGetNamedItemFilters","createSelector","filters","arr","dimension","acRemoveItemFilter","RECEIVED_MESSAGES","sGetMessagesRoot","messages","messageConversationsQuery","resource","params","fields","order","pageSize","tGetMessages","dataEngine","messageConversations","query","error","getMessages","dispatch","err","SET_ALERT_MESSAGE","CLEAR_ALERT_MESSAGE","sGetAlertMessage","alert","acClearAlertMessage","ADD_VISUALIZATION","CLEAR_VISUALIZATIONS","DEFAULT_STATE_VISUALIZATIONS","isEmpty","p","sGetVisualization","visualizations","sGetVisualizationsRoot","acAddVisualization","getIdNameFields","rename","getDimensionFields","withItems","arrayClean","getAxesFields","getFavoriteFields","withDimensions","withOptions","getFavoritesFields","apiFetchVisualization","getVisualizationId","onError","getDashboardItemsFields","withFavorite","getDashboardFields","dashboardsQuery","paging","dashboardQuery","deleteDashboardMutation","apiFetchDashboard","variables","acSetSelectedId","acSetSelectedIsLoading","acSetSelectedShowDescription","tSetSelectedDashboardById","getState","alertTimeout","setTimeout","onSuccess","acAppendDashboards","customDashboard","acSetDashboardItems","localStorage","setItem","forEach","getVisualizationFromItem","clearTimeout","tFetchDashboards","acSetDashboards","apiFetchDashboards","tDeleteDashboard","mutate","apiDeleteDashboard","Promise","resolve","initiallySelectedItems","addItemFilter","removeItemFilter","displayNameProperty","onClose","setFilters","useD2","onSelectItems","dimensionId","onDeselectItems","itemIdsToRemove","newList","onReorderItems","itemIds","oldList","reorderedList","dataTest","position","large","commonProps","onSelect","onDeselect","onReorder","selectedItems","selectedPeriods","ouItems","renderDialogContent","secondary","primary","filterItems","ADD_SETTINGS","DEFAULT_SETTINGS","keyDateFormat","keyAnalysisRelativePeriod","keyAnalysisDigitGroupSeparator","rootOrganisationUnit","keyGatherAnalyticalObjectStatisticsInDashboardViews","sGetSettings","settings","sGetSettingsDisplayNameProperty","sGatherAnalyticalObjectStatisticsInDashboardViews","SET_ACTIVE_MODAL_DIMENSION","CLEAR_ACTIVE_MODAL_DIMENSION","DEFAULT_STATE_ACTIVE_MODAL_DIMENSION","sGetActiveModalDimension","activeModalDimension","acSetActiveModalDimension","clearActiveModalDimension","setActiveModalDimension","showPopover","setShowPopover","onCloseDialog","buttonContainer","onClickOutside","reference","arrow","onDimensionClick","selectedIds","ViewTitleBar","setDashboardStarred","updateShowDescription","moreOptionsIsOpen","setMoreOptionsIsOpen","sharingDialogIsOpen","setSharingDialogIsOpen","redirectUrl","setRedirectUrl","useDataEngine","warningAlert","useAlert","msg","warning","toggleSharingDialog","toggleMoreOptions","StarBorder","showHideDescriptionLabel","toggleStarredDashboardLabel","onToggleStarredDashboard","isStarred","mutation","getStarDashboardMutation","getUnstarDashboardMutation","apiStarDashboard","then","catch","show","buttonRef","userAccess","descriptionClasses","descContainer","desc","noDesc","titleBar","title","actions","star","strip","update","editLink","manage","shareButton","moreButton","dense","apiPostShowDescription","open","onRequestClose","DefaultPlugin","visualization","options","useConfig","credentials","auth","defaultHeaders","Authorization","prevItem","prevActiveType","load","unmount","shouldPluginReload","reloadAllowed","visChanged","getGridItemDomId","NoVisualizationMessage","message","MapPlugin","applyFilters","mapViews","mapView","layer","pluginIsAvailable","hideTitle","LoadingMask","center","getFilteredVisualization","visRows","visColumns","columns","visFilters","dimensionFound","dimensionObjects","getWithoutId","object","getVisualizationConfig","originalType","extractedMapView","mv","VIS_TYPE_COLUMN","VIS_TYPE_PIVOT_TABLE","layout","getAdaptedUiLayoutByType","memoizeOne","fn","lastArgs","lastValue","args","every","arg","Visualization","pluginLoaded","onLoadingComplete","memoizedGetFilteredVisualization","memoizedGetVisualizationConfig","availableHeight","availableWidth","pluginProps","d2Config","forDashboard","ownProps","FatalErrorBoundary","errorFound","componentDidCatch","info","ViewItemActions","actionButtons","itemActionsWrap","DeleteItemButton","deleteItemButton","red500","RECEIVED_EDIT_DASHBOARD","RECEIVED_NOT_EDITING","START_NEW_DASHBOARD","RECEIVED_TITLE","RECEIVED_DESCRIPTION","ADD_DASHBOARD_ITEM","REMOVE_DASHBOARD_ITEM","UPDATE_DASHBOARD_ITEM","RECEIVED_DASHBOARD_LAYOUT","SET_PRINT_PREVIEW_VIEW","CLEAR_PRINT_PREVIEW_VIEW","DEFAULT_STATE_EDIT_DASHBOARD","NEW_DASHBOARD_STATE","printPreviewView","sGetEditDashboardRoot","editDashboard","sGetIsEditing","sGetIsPrintPreviewView","sGetEditDashboardItems","createDashboardMutation","updateDashboardMutation","generatePayload","acClearEditDashboard","acAddDashboardItem","itemPropName","generateUid","gridItemProperties","shape","acUpdateDashboardItem","acRemoveDashboardItem","tSaveDashboard","dashboardToSave","response","uid","updateDashboard","postDashboard","WarningIcon","PrintWarning","Info","EDIT","NEW","VIEW","PRINT","PRINT_LAYOUT","isEditMode","mode","isPrintMode","isViewMode","ItemHeader","forwardRef","dashboardMode","isShortened","rest","Actions","EditItemActions","PrintItemInfo","getItemActionsMap","itemHeaderWrap","itemTitle","iconFill","ItemHeaderButtons","menuIsOpen","setMenuIsOpen","onSelectActiveType","isTrackerType","onViewTable","closeMenu","onViewChart","onViewMap","canViewAs","isSingleValue","isYearOverYear","VIS_TYPE_GAUGE","VIS_TYPE_PIE","interpretationMenuLabel","activeFooter","ViewAsMenuItems","isFullscreen","onToggleFullscreen","href","getLink","onToggleFooter","fullscreenSupported","ItemFooter","line","scrollContainer","Item","showFooter","configLoaded","isFullscreenSupported","el","document","querySelector","itemDomElSelector","requestFullscreen","webkitRequestFullscreen","handleFullscreenChange","fullscreenElement","webkitFullscreenElement","pluginResize","exitFullscreen","webkitExitFullscreen","getUniqueKey","uniqueId","onToggleItemExpanded","setActiveType","getActiveType","isEditing","getAvailableHeight","context","calculatedHeight","smallOriginalH","getItemHeightPx","headerRef","clientHeight","memoizedGetContentHeight","contentRef","offsetHeight","getAvailableWidth","rect","getBoundingClientRect","ITEM_CONTENT_PADDING","measuredHeight","preferMeasured","updateVisualization","gatherDataStatistics","e","onfullscreenchange","onwebkitfullscreenchange","componentWillUnmount","componentDidUpdate","prevProps","gridWidth","setViewportSize","clientWidth","getVisualizationName","shortened","contextType","Function","prototype","backgroundColor","grey200","border","Line","PRIVATE","messageTypes","VALIDATION_RESULT","TICKET","SYSTEM","list","listStyleType","paddingLeft","seeAll","marginBottom","sender","lineHeight","snippet","maxHeight","overflow","MessagesContainer","setUiLocale","userSettings","getUiLocale","getMessageHref","msgIdentifier","messageType","modeClass","latestMsg","slice","getMessageSender","readClass","read","msgDate","location","messageCount","getMessageItems","NotSupportedItem","display","justifyContent","alignItems","align","grey500","DeleteIcon","getItemTitle","tRemoveListItemContent","dashboardItem","listItemType","newContent","contentItems","index","findIndex","getContentItems","contentItem","deleteButton","deletebutton","deleteicon","grey900","Description","itemicon","SET_PRINT_DASHBOARD","CLEAR_PRINT_DASHBOARD","ADD_PRINT_DASHBOARD_ITEM","SET_PRINT_DASHBOARD_LAYOUT","REMOVE_PRINT_DASHBOARD_ITEM","UPDATE_PRINT_DASHBOARD_ITEM","DEFAULT_STATE_PRINT_DASHBOARD","DEFAULT_DASHBOARD_ITEMS","NEW_PRINT_DASHBOARD_STATE","sGetPrintDashboardRoot","printDashboard","sGetIsPrinting","sGetPrintDashboardItems","textDiv","whiteSpace","textField","fontStretch","onChangeText","updatedItem","viewItem","textDivStyle","editItem","onEdit","multiline","fullWidth","printItem","textItem","getIframeSrc","appDetails","iframeSrc","ouIds","ouFilter","path","appKey","system","installedApps","app","dashboardWidget","src","SpacerItem","PageBreakItem","PrintTitlePageItem","titlePage","filterTitle","listItems","filterListItem","val","filterList","getItemFilterList","viewDashboard","sGetPrintDashboardName","sGetPrintDashboardDescription","GridItem","VisualizationItem","MessagesItem","ListItem","TextItem","AppItem","getGridItem","ProgressiveLoadingContainer","shouldLoad","shouldLoadHandler","handlerOptions","passive","checkShouldLoad","bufferPx","bufferFactor","bottom","top","removeHandler","registerHandler","debounceMs","getElementsByClassName","componentDidMount","eventProps","pick","selectedDashboard","expandedItems","setExpandedItems","displayItems","setDisplayItems","layoutSm","setLayoutSm","setGridWidth","getItemsWithAdjustedHeight","sortBy","clickedId","isExpanded","newExpandedItems","expandedItem","expandedHeight","translucent","rowHeight","cols","lg","sm","breakpoints","SMALL_SCREEN_BREAKPOINT","layouts","compactType","containerPadding","isDraggable","isResizable","draggableCancel","onWidthChange","containerWidth","getItemComponent","styles","badgeContainer","borderRadius","white","badge","cursor","badgeRemove","textDecoration","marginLeft","FilterBadge","onRemove","count","FilterBar","onBadgeRemove","onBadgeClick","bar","removeItemFIlter","acSetPrintDashboard","acClearPrintDashboard","acAddPrintDashboardItem","acUpdatePrintDashboardItem","dashboardIsEditing","dashboardIsPrinting","controlBarRows","clearEditDashboard","clearPrintDashboard","dashboardHeight","ViewItemGrid","ItemSearchField","HeaderMenuItem","LaunchIcon","LaunchLink","launchLink","rel","InsertButton","buttonInsert","ContentMenuItem","onInsert","visType","ItemIcon","renderedItemIcon","visTypeIcons","menuItem","marginRight","singleItems","header","categorizedItems","listItemTypes","tAddListItemContent","dashboardItemIndex","hasMore","onChangeItemsLimit","seeMore","setSeeMore","addItem","newItem","itemUrl","showMoreButton","category","addToDashboard","ItemSelector","isOpen","setIsOpen","setFilter","setItems","maxOptions","setMaxOptions","Set","queryString","filterStr","updateMaxOptions","delete","add","inputRef","maxWidth","menu","itemCount","allItems","concat","EditTitleBar","onChangeTitle","onChangeDescription","section","titleDescription","_","itemSelector","acUpdateDashboardLayout","onLayoutChange","newLayout","onResizeStop","oldItem","ConfirmDeleteDialog","dashboardName","onDeleteConfirmed","onContinueEditing","destructive","saveFailedMessage","deleteAccess","updateAccess","sGetIsNewDashboard","isPrintPreviewView","clearPrintPreview","saveDashboard","onDelete","onDiscardChanges","onTranslate","acSetDashboardDisplayName","showPrintPreview","translationDlgIsOpen","setTranslationDlgIsOpen","setDashboard","confirmDeleteDlgIsOpen","setConfirmDeleteDlgIsOpen","failureAlert","critical","dboard","onConfirmDelete","onSave","newId","onPrintPreview","onTranslationsSaved","translations","dbLocale","translation","property","toggleTranslationDialog","discardBtnText","editBar","objectToTranslate","modelDefinition","fieldsToTranslate","onTranslationSaved","onTranslationError","NotSupportedNotice","noticeContainer","PrintInfo","isLayout","layoutStyle","printSuggestions","divider","LessHorizontalIcon","PrintActionsBar","isSmall","inner","LessHorizontal","print","topMargin","getTransformYPx","elStyle","transformY","match","parseInt","isLeapPage","n","getMultiple","factor","multiple","StaticGrid","PrintLayoutItemGrid","updateDashboardLayout","isFirstPageBreak","pageBreaks","sortedPageBreaks","itemClassNames","getItemComponents","hideExtraPageBreaks","sortedElements","elements","types","elementsWithBoundingRect","from","classList","indexOf","bottomY","getDomGridItemsSortedByYPos","querySelectorAll","pageBreakBottom","lastItemBottom","foundNonPageBreak","thisItemBottom","gridElement","firstBreak","scrollArea","EDIT_BAR_HEIGHT","addPageBreaks","addDashboardItem","yPosList","pageNum","getPageBreakPositions","fromEdit","setPrintDashboard","updateDashboardItem","actionBarHeight","wrapper","paddingTop","spacers","dp24","pageOuter","setEditDashboard","renderGrid","setNewDashboard","removeDashboardItem","sortedItems","spacerCount","dashboardMap","dashboardsIsEmpty","dashboardsLoaded","routeId","selectDashboard","dashboardToSelect","preferredId","getItem","dash","sGetDashboardsSortedByStarred","getElementsByTagName","remove","setHeaderbarVisibility","onHidden","permanent","SYSTEM_SETTINGS","fetchDashboards","setControlBarRows","apiGetControlBarRows","setCurrentUser","acSetDimensions","displayNameProp","apiFetchDimensions","dim","dimensionType","dataDimensionType","setShowDescription","apiGetShowDescription","addSettings","extraSettings","fetchedSettings","s","apiFetchSystemSettings","exact","AlertBar","DEFAULT_STATE_STYLE","objectClean","conversations","$merge","d2Object","keyUiLocale","authorities","newState","$splice","$unshift","idToRemove","stateItems","layoutHasChanged","newStateItems","stateItem","si","configureStore","middleware","thunk","withExtraArgument","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","createStore","reducer","applyMiddleware","addResources","arTranslations","ar_IQTranslations","ckbTranslations","csTranslations","daTranslations","enTranslations","esTranslations","frTranslations","idTranslations","kmTranslations","loTranslations","myTranslations","nbTranslations","prsTranslations","psTranslations","ptTranslations","pt_BRTranslations","ruTranslations","svTranslations","tetTranslations","tgTranslations","ukTranslations","urTranslations","uzTranslations","uz_CyrlTranslations","uz_LatnTranslations","viTranslations","zhTranslations","zh_CNTranslations","schemas","authorization","process","REACT_APP_DHIS2_AUTHORIZATION","headers","AppWrapper","store","theme","createMuiTheme","dhis2theme","i18nRoot","reportTable","chart","eventReport","eventChart","itemTypeToExternalPlugin","getPlugin","hasIntegratedPlugin","config","plugin","loadingIndicator","loadPlugin","resize"],"mappings":"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","file":"static/js/app.484829dd.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"ControlBar_root__iikeX\",\"dragging\":\"ControlBar_dragging__3lq79\",\"content\":\"ControlBar_content__26Z33\",\"draghandle\":\"ControlBar_draghandle__27zum\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"link\":\"DashboardItemChip_link__21drZ\",\"icon\":\"DashboardItemChip_icon__2hcIR\",\"selected\":\"DashboardItemChip_selected__r00uP\",\"unselected\":\"DashboardItemChip_unselected__2H9l2\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"ClearButton_button__33ZbK\",\"icon\":\"ClearButton_icon__vTJm3\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Filter_container__1Vxdh\",\"input\":\"Filter_input__14lhU\",\"focused\":\"Filter_focused__Lvyz3\",\"searchIcon\":\"Filter_searchIcon__2ojUp\",\"searchButton\":\"Filter_searchButton__1tMTB\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"ShowMoreButton_container__riJz_\",\"showMore\":\"ShowMoreButton_showMore__3S3He\",\"disabled\":\"ShowMoreButton_disabled__2FQNA\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"DashboardsBar_container__1xuCo\",\"expanded\":\"DashboardsBar_expanded__3lVl8\",\"controls\":\"DashboardsBar_controls__3PhmY\",\"newLink\":\"DashboardsBar_newLink__2PkLQ\",\"collapsed\":\"DashboardsBar_collapsed__3CY9n\",\"chipContainer\":\"DashboardsBar_chipContainer__IRxuN\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"buttonContainer\":\"FilterSelector_buttonContainer__O_amY\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"ViewTitleBar_container__VivO0\",\"actions\":\"ViewTitleBar_actions__2UTRz\",\"editLink\":\"ViewTitleBar_editLink__d_HzW\",\"titleBar\":\"ViewTitleBar_titleBar__eiwJS\",\"star\":\"ViewTitleBar_star__26YmT\",\"strip\":\"ViewTitleBar_strip__3xR4U\",\"title\":\"ViewTitleBar_title__2GhTR\",\"descContainer\":\"ViewTitleBar_descContainer__3rF10\",\"desc\":\"ViewTitleBar_desc__3QW6Z\",\"noDesc\":\"ViewTitleBar_noDesc__Jettc\",\"moreButton\":\"ViewTitleBar_moreButton__1HduK\",\"shareButton\":\"ViewTitleBar_shareButton__3yEKR\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"message\":\"NoVisualizationMessage_message__22IPi\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"center\":\"LoadingMask_center__KHIYy\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"FatalErrorBoundary_container__3SViR\",\"icon\":\"FatalErrorBoundary_icon__2UbeP\",\"message\":\"FatalErrorBoundary_message__3FzrY\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"deleteItemButton\":\"DeleteItemButton_deleteItemButton__3TJm9\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"warning\":\"PrintItemInfo_warning__123PK\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"line\":\"ItemFooter_line__3Ko0R\",\"scrollContainer\":\"ItemFooter_scrollContainer__tuq4P\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"Item_list__1_nkQ\",\"item\":\"Item_item__3-6QE\",\"itemicon\":\"Item_itemicon__QlouX\",\"link\":\"Item_link___3c_q\",\"deleteicon\":\"Item_deleteicon__3usrl\",\"deletebutton\":\"Item_deletebutton__1DpBW\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"titlePage\":\"Item_titlePage__18CNQ\",\"name\":\"Item_name__3nuTV\",\"description\":\"Item_description__1gFQd\",\"filterTitle\":\"Item_filterTitle__2p7TQ\",\"filterList\":\"Item_filterList__qc_G3\",\"filterListItem\":\"Item_filterListItem__sPbBY\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"bar\":\"FilterBar_bar__1Ma3p\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"HeaderMenuItem_item__313hC\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"menuItem\":\"ContentMenuItem_menuItem__vbKn3\",\"launchLink\":\"ContentMenuItem_launchLink__2Nql9\",\"label\":\"ContentMenuItem_label__ANfH1\",\"buttonInsert\":\"ContentMenuItem_buttonInsert__1joHg\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"showMoreButton\":\"CategorizedMenuGroup_showMoreButton__2RbRp\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"menu\":\"ItemSelector_menu__2VYae\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"section\":\"EditTitleBar_section__LIaIC\",\"titleDescription\":\"EditTitleBar_titleDescription__1YsU6\",\"title\":\"EditTitleBar_title__3mUbt\",\"description\":\"EditTitleBar_description__24U5X\",\"itemSelector\":\"EditTitleBar_itemSelector__1cFEp\"};","import i18n from '@dhis2/d2-i18n';\nimport TableIcon from '@material-ui/icons/ViewList';\nimport ChartIcon from '@material-ui/icons/InsertChart';\nimport MapIcon from '@material-ui/icons/Public';\nimport ExtensionIcon from '@material-ui/icons/Extension';\nimport DescriptionIcon from '@material-ui/icons/Description';\nimport PersonIcon from '@material-ui/icons/Person';\nimport FontDownloadIcon from '@material-ui/icons/FontDownload';\nimport EmailIcon from '@material-ui/icons/Email';\nimport CropFreeIcon from '@material-ui/icons/CropFree';\nimport NotInterestedIcon from '@material-ui/icons/NotInterested'; // Item types\n\nexport const VISUALIZATION = 'VISUALIZATION';\nexport const REPORT_TABLE = 'REPORT_TABLE';\nexport const CHART = 'CHART';\nexport const MAP = 'MAP';\nexport const EVENT_REPORT = 'EVENT_REPORT';\nexport const EVENT_CHART = 'EVENT_CHART';\nexport const APP = 'APP';\nexport const REPORTS = 'REPORTS';\nexport const RESOURCES = 'RESOURCES';\nexport const USERS = 'USERS';\nexport const MESSAGES = 'MESSAGES';\nexport const TEXT = 'TEXT';\nexport const SPACER = 'SPACER';\nexport const PAGEBREAK = 'PAGEBREAK';\nexport const PRINT_TITLE_PAGE = 'PRINT_TITLE_PAGE';\nconst DOMAIN_TYPE_AGGREGATE = 'AGGREGATE';\nconst DOMAIN_TYPE_TRACKER = 'TRACKER'; // Dashboard helpers\n\nexport const isVisualizationType = item => !!itemTypeMap[item.type].isVisualizationType;\nexport const hasMapView = itemType => itemTypeMap[itemType].domainType === DOMAIN_TYPE_AGGREGATE;\nexport const isTrackerDomainType = itemType => itemTypeMap[itemType].domainType === DOMAIN_TYPE_TRACKER;\nexport const getDefaultItemCount = itemType => itemTypeMap[itemType].defaultItemCount || 5;\nexport const getAppName = itemType => itemTypeMap[itemType].appName || ''; // Item type map\n\nexport const itemTypeMap = {\n  [VISUALIZATION]: {\n    id: VISUALIZATION,\n    endPointName: 'visualizations',\n    propName: 'visualization',\n    pluralTitle: i18n.t('Visualizations'),\n    appUrl: id => `dhis-web-data-visualizer/#/${id}`,\n    appName: 'Data Visualizer',\n    defaultItemCount: 10\n  },\n  [REPORT_TABLE]: {\n    id: REPORT_TABLE,\n    endPointName: 'visualizations',\n    dataStatisticsName: 'REPORT_TABLE_VIEW',\n    propName: 'visualization',\n    pluralTitle: i18n.t('Pivot tables'),\n    domainType: DOMAIN_TYPE_AGGREGATE,\n    isVisualizationType: true,\n    appUrl: id => `dhis-web-data-visualizer/#/${id}`,\n    appName: 'Data Visualizer'\n  },\n  [CHART]: {\n    id: CHART,\n    endPointName: 'visualizations',\n    propName: 'visualization',\n    dataStatisticsName: 'CHART_VIEW',\n    pluralTitle: i18n.t('Charts'),\n    domainType: DOMAIN_TYPE_AGGREGATE,\n    isVisualizationType: true,\n    appUrl: id => `dhis-web-data-visualizer/#/${id}`,\n    appName: 'Data Visualizer'\n  },\n  [MAP]: {\n    id: MAP,\n    endPointName: 'maps',\n    dataStatisticsName: 'MAP_VIEW',\n    propName: 'map',\n    pluralTitle: i18n.t('Maps'),\n    domainType: DOMAIN_TYPE_AGGREGATE,\n    isVisualizationType: true,\n    appUrl: id => `dhis-web-maps/?id=${id}`,\n    appName: 'Maps'\n  },\n  [EVENT_REPORT]: {\n    id: EVENT_REPORT,\n    endPointName: 'eventReports',\n    propName: 'eventReport',\n    pluralTitle: i18n.t('Event reports'),\n    domainType: DOMAIN_TYPE_TRACKER,\n    isVisualizationType: true,\n    appUrl: id => `dhis-web-event-reports/?id=${id}`,\n    appName: 'Event Reports'\n  },\n  [EVENT_CHART]: {\n    id: EVENT_CHART,\n    endPointName: 'eventCharts',\n    propName: 'eventChart',\n    pluralTitle: i18n.t('Event charts'),\n    domainType: DOMAIN_TYPE_TRACKER,\n    isVisualizationType: true,\n    appUrl: id => `dhis-web-event-visualizer/?id=${id}`,\n    appName: 'Event Visualizer'\n  },\n  [APP]: {\n    endPointName: 'apps',\n    propName: 'appKey',\n    pluralTitle: i18n.t('Apps')\n  },\n  [REPORTS]: {\n    id: REPORTS,\n    endPointName: 'reports',\n    propName: 'reports',\n    pluralTitle: i18n.t('Reports'),\n    appUrl: (id, type) => {\n      switch (type) {\n        case 'HTML':\n          return `dhis-web-reports/#/standard-report/view/${id}`;\n\n        case 'JASPER_REPORT_TABLE':\n        case 'JASPER_JDBC':\n        default:\n          return `api/reports/${id}/data.pdf?t=${new Date().getTime()}`;\n      }\n    }\n  },\n  [RESOURCES]: {\n    id: RESOURCES,\n    endPointName: 'resources',\n    propName: 'resources',\n    pluralTitle: i18n.t('Resources'),\n    appUrl: id => `api/documents/${id}/data`\n  },\n  [USERS]: {\n    id: USERS,\n    endPointName: 'users',\n    propName: 'users',\n    pluralTitle: i18n.t('Users'),\n    appUrl: id => `dhis-web-dashboard-integration/profile.action?id=${id}`\n  },\n  [TEXT]: {\n    id: TEXT,\n    propName: 'text'\n  },\n  [MESSAGES]: {\n    propName: 'messages'\n  },\n  [SPACER]: {\n    propName: 'text'\n  },\n  [PAGEBREAK]: {\n    propName: 'text'\n  },\n  [PRINT_TITLE_PAGE]: {\n    propName: 'text'\n  }\n};\nexport const getEndPointName = type => itemTypeMap[type].endPointName;\nexport const getDataStatisticsName = type => itemTypeMap[type].dataStatisticsName || null;\nexport const getItemUrl = (type, item, baseUrl) => {\n  let url;\n\n  if (type === APP) {\n    url = item.launchUrl;\n  }\n\n  if (itemTypeMap[type] && itemTypeMap[type].appUrl) {\n    url = `${baseUrl}/${itemTypeMap[type].appUrl(item.id, item.type)}`;\n  }\n\n  return url;\n};\nexport const getItemIcon = type => {\n  switch (type) {\n    case REPORT_TABLE:\n    case EVENT_REPORT:\n    case REPORTS:\n      return TableIcon;\n\n    case CHART:\n    case EVENT_CHART:\n      return ChartIcon;\n\n    case MAP:\n      return MapIcon;\n\n    case APP:\n      return ExtensionIcon;\n\n    case RESOURCES:\n      return DescriptionIcon;\n\n    case USERS:\n      return PersonIcon;\n\n    case TEXT:\n      return FontDownloadIcon;\n\n    case MESSAGES:\n      return EmailIcon;\n\n    case SPACER:\n      return CropFreeIcon;\n\n    default:\n      return NotInterestedIcon;\n  }\n};","import isObject from 'lodash/isObject'; // validation\n\nexport function orNull(param) {\n  return param === undefined ? null : param;\n}\nexport function orArray(param) {\n  return Array.isArray(param) ? param : [];\n}\nexport function orObject(param) {\n  return isObject(param) ? param : {};\n} // array\n\nexport function arrayGetById(array, id) {\n  return array.find(item => item.id === id);\n} // object\n\nexport function arrayToIdMap(array) {\n  return array.reduce((obj, item) => {\n    obj[item.id] = item;\n    return obj;\n  }, {});\n} // date\n\nexport function getDate() {\n  const y = Math.floor(Math.random() * 3) + 2015;\n  const M = Math.floor(Math.random() * 12) + 1;\n  const d = Math.floor(Math.random() * 28) + 1; // const h = Math.floor(Math.random() * 23) + 1;\n  // const m = Math.floor(Math.random() * 59) + 1;\n  // const s = Math.floor(Math.random() * 59) + 1;\n\n  return new Date(`${y}-${M}-${d}`).toJSON().replace('T', ' ').substr(0, 10);\n}\nexport const formatDate = (value, uiLocale) => {\n  if (typeof global.Intl !== 'undefined' && Intl.DateTimeFormat) {\n    const locale = uiLocale || 'en';\n    return new Intl.DateTimeFormat(locale, {\n      year: 'numeric',\n      month: 'short',\n      day: 'numeric'\n    }).format(new Date(value));\n  }\n\n  return value.substr(0, 19).replace('T', ' ');\n};\n/**\n * Sorts an array of objects based on provided date property\n *\n * @param {Array} items Array of objects\n * @param {String} dateProp Name of the date property to be used for sorting\n * @param {Boolean} ascending Whether to sort ascending or descending\n */\n\nexport const sortByDate = (items, dateProp, ascending = true) => {\n  const values = Object.values(items);\n  values.sort((a, b) => {\n    const aDate = new Date(a[dateProp]);\n    const bDate = new Date(b[dateProp]);\n    return ascending ? aDate - bDate : bDate - aDate;\n  });\n  return values;\n}; // reducer validator\n\nexport const validateReducer = (value, defaultValue) => value === undefined || value === null ? defaultValue : value;","// extracted by mini-css-extract-plugin\nmodule.exports = {\"content\":\"ConfirmDeleteDialog_content__EqswE\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"editBar\":\"EditBar_editBar__1d1xM\",\"controls\":\"EditBar_controls__1t0nO\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"noticeContainer\":\"NotSupportedNotice_noticeContainer__3z9Up\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"PrintInfo_container__9gH0b\",\"title\":\"PrintInfo_title__2_VZd\",\"printSuggestions\":\"PrintInfo_printSuggestions__30tcU\",\"divider\":\"PrintInfo_divider__3wzx9\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"PrintActionsBar_container__2iQp7\",\"topMargin\":\"PrintActionsBar_topMargin__OpYDN\",\"inner\":\"PrintActionsBar_inner__uBqU7\",\"link\":\"PrintActionsBar_link__lFUmI\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"PrintLayoutDashboard_wrapper__1WDh4\",\"pageOuter\":\"PrintLayoutDashboard_pageOuter__22acI\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"PrintDashboard_wrapper__1O3s_\",\"pageOuter\":\"PrintDashboard_pageOuter__fl9tw\"};","import React, { createContext, useContext, useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport debounce from 'lodash/debounce';\nexport const WindowDimensionsCtx = createContext(null);\n\nconst windowDims = () => ({\n  height: window.innerHeight,\n  width: window.innerWidth\n});\n\nconst WindowDimensionsProvider = ({\n  children\n}) => {\n  const [dimensions, setDimensions] = useState(windowDims());\n  useEffect(() => {\n    const handleResize = debounce(() => {\n      setDimensions(windowDims());\n    }, 200);\n    window.addEventListener('resize', handleResize);\n    return () => {\n      window.removeEventListener('resize', handleResize);\n    };\n  }, []);\n  return <WindowDimensionsCtx.Provider value={dimensions}>\n            {children}\n        </WindowDimensionsCtx.Provider>;\n};\n\nWindowDimensionsProvider.propTypes = {\n  children: PropTypes.node.isRequired\n};\nexport default WindowDimensionsProvider;\nexport const useWindowDimensions = () => {\n  return useContext(WindowDimensionsCtx);\n};","import React from 'react';\nimport PropTypes from 'prop-types';\nimport cx from 'classnames';\nimport classes from './styles/ControlBar.module.css'; //Matches the height of .dragHandle in ControlBar.module.css\n\nexport const DRAG_HANDLE_HEIGHT = 7;\n\nclass ControlBar extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      dragging: false\n    };\n  }\n\n  onStartDrag = () => {\n    this.setState({\n      dragging: true\n    });\n    window.addEventListener('mousemove', this.onDrag);\n    window.addEventListener('mouseup', this.onEndDrag);\n  };\n  onDrag = event => {\n    event.preventDefault();\n    event.stopPropagation();\n    const newHeight = event.clientY;\n\n    if (this.props.onChangeHeight && newHeight !== this.props.height && newHeight > 0) {\n      requestAnimationFrame(() => {\n        this.props.onChangeHeight(newHeight);\n      });\n    }\n  };\n  onEndDrag = () => {\n    this.setState({\n      dragging: false\n    });\n    window.removeEventListener('mousemove', this.onDrag);\n    window.removeEventListener('mouseup', this.onEndDrag);\n\n    if (this.props.onEndDrag) {\n      this.props.onEndDrag();\n    }\n  };\n  renderDragHandle = () => typeof this.props.onChangeHeight === 'function' && <div className={classes.draghandle} onMouseDown={this.onStartDrag} data-testid=\"controlbar-drag-handle\" />;\n\n  render() {\n    const height = Math.max(this.props.height, 0) + DRAG_HANDLE_HEIGHT;\n    const rootClass = cx(classes.root, this.state.dragging && classes.dragging);\n    return <div style={{\n      height\n    }} className={rootClass}>\n                <div className={classes.content}>{this.props.children}</div>\n                {this.renderDragHandle()}\n            </div>;\n  }\n\n}\n\nControlBar.propTypes = {\n  /**\n   * The height of the control bar in number of lines. Must be a positive integer.\n   */\n  children: PropTypes.node.isRequired,\n\n  /**\n   * Callback function that is called when the control bar is resized.\n   * The callback receives one argument: The new height in pixels.\n   *\n   * If no callback is specified the control bar will not have a drag handle.\n   */\n  height: PropTypes.number.isRequired,\n\n  /**\n   * Callback function that is called when the control bar is dropped after being dragged.\n   * The callback receives one argument: The new height in pixels.\n   *\n   * Ignored if no \"onChangeHeight\" function is provided.\n   */\n  onChangeHeight: PropTypes.func,\n\n  /**\n   * The contents of the control bar.\n   */\n  onEndDrag: PropTypes.func\n};\nControlBar.defaultProps = {\n  onChangeHeight: null,\n  onEndDrag: null\n};\nexport default ControlBar;","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst StarIcon = ({\n  className\n}) => <svg className={className} xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\">\n        <path d=\"M0 0h24v24H0z\" fill=\"none\" />\n        <path d=\"M12 17.27L18.18 21l-1.64-7.03L22 9.24l-7.19-.61L12 2 9.19 8.63 2 9.24l5.46 4.73L5.82 21z\" />\n        <path d=\"M0 0h24v24H0z\" fill=\"none\" />\n    </svg>;\n\nStarIcon.propTypes = {\n  className: PropTypes.string\n};\nexport default StarIcon;","import { getInstance } from 'd2';\nexport const apiPostDataStatistics = async (eventType, id) => {\n  const d2 = await getInstance();\n  const url = `dataStatistics?eventType=${eventType}&favorite=${id}`;\n  d2.Api.getApi().post(url);\n};","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Chip } from '@dhis2/ui';\nimport { Link } from 'react-router-dom';\nimport debounce from 'lodash/debounce';\nimport StarIcon from '../../icons/Star';\nimport { apiPostDataStatistics } from '../../api/dataStatistics';\nimport classes from './styles/DashboardItemChip.module.css';\nexport const DashboardItemChip = ({\n  starred,\n  selected,\n  label,\n  dashboardId,\n  onClick\n}) => {\n  const chipProps = {\n    selected\n  };\n\n  if (starred) {\n    const selectedState = selected ? classes.selected : classes.unselected;\n    chipProps.icon = <StarIcon className={`${classes.icon} ${selectedState}`} />;\n  }\n\n  const debouncedPostStatistics = debounce(() => apiPostDataStatistics('DASHBOARD_VIEW', dashboardId), 500);\n\n  const handleClick = () => {\n    debouncedPostStatistics();\n    onClick();\n  };\n\n  return <Link className={classes.link} to={`/${dashboardId}`} onClick={handleClick} data-test=\"dashboard-chip\">\n            <Chip {...chipProps}>{label}</Chip>\n        </Link>;\n};\nDashboardItemChip.propTypes = {\n  dashboardId: PropTypes.string.isRequired,\n  label: PropTypes.string.isRequired,\n  selected: PropTypes.bool.isRequired,\n  starred: PropTypes.bool.isRequired,\n  onClick: PropTypes.func.isRequired,\n  classes: PropTypes.object\n};\nexport default DashboardItemChip;","import React from 'react';\nimport { colors } from '@dhis2/ui';\n\nconst AddCircleIcon = () => <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"32\" height=\"32\" fill={colors.teal600} viewBox=\"0 0 24 24\">\n        <path d=\"M12 2C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2zm4 11h-3v3c0 .55-.45 1-1 1s-1-.45-1-1v-3H8c-.55 0-1-.45-1-1s.45-1 1-1h3V8c0-.55.45-1 1-1s1 .45 1 1v3h3c.55 0 1 .45 1 1s-.45 1-1 1z\" />\n    </svg>;\n\nexport default AddCircleIcon;","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst SearchIcon = ({\n  className,\n  small\n}) => small ? <svg className={className} height=\"16\" viewBox=\"0 0 16 16\" width=\"16\" xmlns=\"http://www.w3.org/2000/svg\">\n            <path d=\"m6 1c2.76142375 0 5 2.23857625 5 5 0 1.20065927-.4231997 2.30247496-1.12856994 3.16441794l4.48212334 4.48202866-.7071068.7071068-4.48202866-4.48212334c-.86194298.70537024-1.96375867 1.12856994-3.16441794 1.12856994-2.76142375 0-5-2.23857625-5-5s2.23857625-5 5-5zm0 1c-2.209139 0-4 1.790861-4 4s1.790861 4 4 4 4-1.790861 4-4-1.790861-4-4-4z\" fill=\"#010101\" />\n        </svg> : <svg className={className} xmlns=\"http://www.w3.org/2000/svg\" height=\"24\" viewBox=\"0 0 24 24\" width=\"24\">\n            <path d=\"M0 0h24v24H0z\" fill=\"none\" />\n            <path d=\"M15.5 14h-.79l-.28-.27C15.41 12.59 16 11.11 16 9.5 16 5.91 13.09 3 9.5 3S3 5.91 3 9.5 5.91 16 9.5 16c1.61 0 3.09-.59 4.23-1.57l.27.28v.79l5 4.99L20.49 19l-4.99-5zm-6 0C7.01 14 5 11.99 5 9.5S7.01 5 9.5 5 14 7.01 14 9.5 11.99 14 9.5 14z\" />\n        </svg>;\n\nSearchIcon.propTypes = {\n  className: PropTypes.string,\n  small: PropTypes.bool\n};\nexport default SearchIcon;","import React from 'react';\nimport { colors } from '@dhis2/ui';\nimport PropTypes from 'prop-types';\n\nconst ClearIcon = ({\n  className\n}) => <svg className={className} fill={colors.grey800} xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\">\n        <path d=\"M19 6.41L17.59 5 12 10.59 6.41 5 5 6.41 10.59 12 5 17.59 6.41 19 12 13.41 17.59 19 19 17.59 13.41 12z\" />\n        <path d=\"M0 0h24v24H0z\" fill=\"none\" />\n    </svg>;\n\nClearIcon.propTypes = {\n  className: PropTypes.string\n};\nexport default ClearIcon;","import React from 'react';\nimport PropTypes from 'prop-types';\nimport ClearIcon from '../../icons/Clear';\nimport classes from './styles/ClearButton.module.css';\nexport const ClearButton = ({\n  onClear\n}) => <button className={classes.button} onClick={onClear}>\n        <span>\n            <ClearIcon className={classes.icon} color=\"action\" />\n        </span>\n    </button>;\nClearButton.propTypes = {\n  onClear: PropTypes.func.isRequired\n};\nexport default ClearButton;","import { validateReducer } from '../modules/util';\nexport const SET_DASHBOARDS_FILTER = 'SET_DASHBOARDS_FILTER';\nexport const CLEAR_DASHBOARDS_FILTER = 'CLEAR_DASHBOARDS_FILTER';\nexport const DEFAULT_STATE_DASHBOARDS_FILTER = '';\nexport default ((state = DEFAULT_STATE_DASHBOARDS_FILTER, action) => {\n  switch (action.type) {\n    case SET_DASHBOARDS_FILTER:\n      {\n        return validateReducer(action.value, DEFAULT_STATE_DASHBOARDS_FILTER);\n      }\n\n    case CLEAR_DASHBOARDS_FILTER:\n      {\n        return DEFAULT_STATE_DASHBOARDS_FILTER;\n      }\n\n    default:\n      return state;\n  }\n}); // selectors\n\nexport const sGetDashboardsFilter = state => state.dashboardsFilter;","// Dimensions for the react-grid-layout\nimport sortBy from 'lodash/sortBy';\nimport { isVisualizationType } from './itemTypes';\nimport { isSmallScreen } from './smallScreen';\nexport const GRID_COMPACT_TYPE = 'vertical'; // vertical | horizonal | null\n\nexport const GRID_ROW_HEIGHT_PX = 10;\nexport const MARGIN_PX = [10, 10];\nconst SM_SCREEN_MIN_ITEM_GRID_HEIGHT = 13; // minimum of ~320px\n\nexport const SM_SCREEN_GRID_COLUMNS = 1;\nexport const MARGIN_SM_PX = [0, 16];\nexport const GRID_PADDING_PX = [0, 0]; // sum of left+right padding of dashboard-wrapper (App.css)\n\nexport const DASHBOARD_WRAPPER_LR_MARGIN_PX = 32; // make an assumption about the original item w/h ratio\n// assumes grid width of ~1200px at time dashboard was created\n\nconst GRID_COL_WIDTH_PX = 10;\nexport const GRID_COLUMNS = 60; // Dimensions for getShape\n\nexport const NEW_ITEM_SHAPE = {\n  x: 0,\n  y: 0,\n  w: 20,\n  h: 29\n};\nconst NUMBER_OF_ITEM_COLS = 2;\nconst MAX_ITEM_GRID_WIDTH = GRID_COLUMNS - 1;\nexport const MAX_ITEM_GRID_HEIGHT = 34;\nexport const MAX_ITEM_GRID_HEIGHT_OIPP = 35;\nexport const MAX_ITEM_GRID_WIDTH_OIPP = 56;\nconst MIN_ITEM_GRID_HEIGHT = 4; // isNonNegativeInteger\n\nconst isNonNegativeInteger = x => Number.isInteger(x) && x >= 0; // Does the item have all the shape properties?\n\n\nexport const hasShape = item => isNonNegativeInteger(item.x) && isNonNegativeInteger(item.y) && isNonNegativeInteger(item.w) && isNonNegativeInteger(item.h); // returns a rectangular grid block dimensioned with x, y, w, h in grid units.\n// based on a grid with 3 items across\n\nconst getShape = i => {\n  const col = i % NUMBER_OF_ITEM_COLS;\n  const row = Math.floor(i / NUMBER_OF_ITEM_COLS);\n  const itemWidth = Math.floor(MAX_ITEM_GRID_WIDTH / NUMBER_OF_ITEM_COLS);\n  const itemHeight = GRID_ROW_HEIGHT_PX * 2;\n  return {\n    x: col * itemWidth,\n    y: row * itemHeight,\n    w: itemWidth,\n    h: itemHeight\n  };\n};\n/**\n * Returns an array of items containing the x, y, w, h dimensions\n * and the item's originalheight in pixels\n * and dimensions to create the small layout (x, y, w, h)\n * @function\n * @param {Array} items\n * @returns {Array}\n */\n\n\nexport const withShape = (items = []) => {\n  const itemsWithShape = items.map((item, i) => hasShape(item) ? item : Object.assign({}, item, getShape(i)));\n  return itemsWithShape.map(item => Object.assign({}, item, {\n    originalH: item.h\n  }));\n};\nexport const getGridWidth = windowWidthPx => windowWidthPx - DASHBOARD_WRAPPER_LR_MARGIN_PX;\n\nconst getGridUnitsForSmFromPx = hPx => {\n  const gridUnitHeightPx = GRID_ROW_HEIGHT_PX + MARGIN_SM_PX[1];\n  return Math.round((hPx + MARGIN_SM_PX[1]) / gridUnitHeightPx);\n};\n\nexport const getProportionalHeight = (item, windowWidthPx) => {\n  // get w/h ratio of the original item\n  const wPx = getItemWHPx(item.w, GRID_COL_WIDTH_PX, MARGIN_PX[0]);\n  const hPx = getItemWHPx(item.h, GRID_ROW_HEIGHT_PX, MARGIN_PX[1]);\n  const ratioWH = wPx / hPx;\n\n  if (!isVisualizationType(item)) {\n    return getGridUnitsForSmFromPx(hPx);\n  }\n\n  const gridWidthPx = getGridWidth(windowWidthPx); // get new height in px based on the ratio\n\n  const newColWidthPx = (gridWidthPx - MARGIN_SM_PX[0] * (SM_SCREEN_GRID_COLUMNS - 1) - GRID_PADDING_PX[0] * 2) / SM_SCREEN_GRID_COLUMNS;\n  const newWPx = newColWidthPx * SM_SCREEN_GRID_COLUMNS;\n  const newHPx = Math.round(newWPx / ratioWH); //convert height in px back to grid units\n\n  const h = getGridUnitsForSmFromPx(newHPx); // item must be at least the set minimum\n\n  return h < SM_SCREEN_MIN_ITEM_GRID_HEIGHT ? SM_SCREEN_MIN_ITEM_GRID_HEIGHT : h;\n};\nexport const getSmallLayout = (items, windowWidthPx) => sortBy(items, ['y', 'x']).map((item, i) => Object.assign({}, item, {\n  x: 0,\n  y: i,\n  w: SM_SCREEN_GRID_COLUMNS,\n  h: getProportionalHeight(item, windowWidthPx)\n}));\nexport const getGridItemProperties = itemId => {\n  return {\n    i: itemId,\n    minH: MIN_ITEM_GRID_HEIGHT\n  };\n};\nexport const getPageBreakItemShape = (yPos, isStatic = true) => {\n  return {\n    x: 0,\n    y: yPos,\n    w: MAX_ITEM_GRID_WIDTH,\n    h: 5,\n    static: !!isStatic,\n    minH: 1\n  };\n};\nexport const getPrintTitlePageItemShape = isOneItemPerPage => {\n  return {\n    x: 0,\n    y: 0,\n    w: isOneItemPerPage ? MAX_ITEM_GRID_WIDTH_OIPP : MAX_ITEM_GRID_WIDTH,\n    h: MAX_ITEM_GRID_HEIGHT,\n    static: true,\n    minH: 1\n  };\n};\n/**\n * Calculates the grid item's height in pixels based\n * on the height in grid units. This calculation\n * is copied directly from react-grid-layout\n * calculateUtils.js (calcGridItemWHPx)\n *\n * Each row's px height is the sum of the GRID_ROW_HEIGHT_PX + MARGIN-Y\n * So the calculation is:\n * GRID_ROW_HEIGHT_PX * Number of rows\n * +\n * yMargin * Number of rows-1\n *\n * @param {Object} item item containing shape (x, y, w, h)\n */\n\nexport const getItemHeightPx = (item, windowWidthPx) => {\n  if (isSmallScreen(windowWidthPx)) {\n    const h = item.smallOriginalH ? item.smallOriginalH : getProportionalHeight(item, windowWidthPx);\n    return getItemWHPx(h, GRID_ROW_HEIGHT_PX, MARGIN_SM_PX[1]);\n  }\n\n  return getItemWHPx(item.originalH, GRID_ROW_HEIGHT_PX, MARGIN_PX[1]);\n};\n\nconst getItemWHPx = (gridUnits, colOrRowSize, marginPx) => Math.round(colOrRowSize * gridUnits + Math.max(0, gridUnits - 1) * marginPx);","import { DASHBOARD_WRAPPER_LR_MARGIN_PX } from './gridUtil';\nconst SMALL_SCREEN_BREAKPOINT = 480;\nexport const isSmallScreen = width => width <= SMALL_SCREEN_BREAKPOINT;\nexport const getBreakpoint = () => SMALL_SCREEN_BREAKPOINT - DASHBOARD_WRAPPER_LR_MARGIN_PX;","import React, { useState } from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport i18n from '@dhis2/d2-i18n';\nimport cx from 'classnames';\nimport SearchIcon from '../../icons/Search';\nimport ClearButton from './ClearButton';\nimport { useWindowDimensions } from '../WindowDimensionsProvider';\nimport { acSetDashboardsFilter, acClearDashboardsFilter } from '../../actions/dashboardsFilter';\nimport { sGetDashboardsFilter } from '../../reducers/dashboardsFilter';\nimport { isSmallScreen } from '../../modules/smallScreen';\nimport classes from './styles/Filter.module.css';\nexport const KEYCODE_ENTER = 13;\nexport const KEYCODE_ESCAPE = 27;\nexport const FilterUnconnected = ({\n  clearDashboardsFilter,\n  filterText,\n  isMaxHeight,\n  setDashboardsFilter,\n  onKeypressEnter,\n  onToggleMaxHeight\n}) => {\n  const [focusedClassName, setFocusedClassName] = useState('');\n  const [inputFocused, setInputFocus] = useState(false);\n  const {\n    width\n  } = useWindowDimensions();\n\n  const setFilterValue = event => {\n    event.preventDefault();\n    setDashboardsFilter(event.target.value);\n  };\n\n  const onKeyUp = event => {\n    switch (event.keyCode) {\n      case KEYCODE_ENTER:\n        onKeypressEnter();\n        clearDashboardsFilter();\n        break;\n\n      case KEYCODE_ESCAPE:\n        clearDashboardsFilter();\n        break;\n\n      default:\n        break;\n    }\n  };\n\n  const onFocus = event => {\n    event.preventDefault();\n    setFocusedClassName(classes.focused);\n  };\n\n  const onBlur = event => {\n    event.preventDefault();\n    setFocusedClassName('');\n  };\n\n  const onFocusInput = input => {\n    if (input && inputFocused && isSmallScreen(width)) {\n      return input.focus();\n    }\n  };\n\n  const toggleMaxHeight = () => {\n    onToggleMaxHeight();\n    setInputFocus(true);\n  };\n\n  return isSmallScreen(width) && !isMaxHeight ? <button className={classes.searchButton} onClick={toggleMaxHeight}>\n            <SearchIcon className={classes.searchIcon} />\n        </button> : <div className={cx(classes.container, `${focusedClassName}`)} onFocus={onFocus} onBlur={onBlur}>\n            <SearchIcon className={classes.searchIcon} small={isSmallScreen(width) && isMaxHeight} />\n            <input className={classes.input} type=\"text\" placeholder={i18n.t('Search for a dashboard')} onChange={setFilterValue} onKeyUp={onKeyUp} value={filterText} data-test=\"search-dashboard-input\" ref={onFocusInput} />\n            {filterText && <ClearButton onClear={clearDashboardsFilter} />}\n        </div>;\n};\nFilterUnconnected.propTypes = {\n  clearDashboardsFilter: PropTypes.func,\n  filterText: PropTypes.string,\n  isMaxHeight: PropTypes.bool,\n  setDashboardsFilter: PropTypes.func,\n  onKeypressEnter: PropTypes.func,\n  onToggleMaxHeight: PropTypes.func\n};\n\nconst mapStateToProps = state => ({\n  filterText: sGetDashboardsFilter(state)\n});\n\nconst mapDispatchToProps = {\n  setDashboardsFilter: acSetDashboardsFilter,\n  clearDashboardsFilter: acClearDashboardsFilter\n};\nexport default connect(mapStateToProps, mapDispatchToProps)(FilterUnconnected);","import { SET_DASHBOARDS_FILTER, CLEAR_DASHBOARDS_FILTER } from '../reducers/dashboardsFilter'; // actions\n\nexport const acSetDashboardsFilter = value => ({\n  type: SET_DASHBOARDS_FILTER,\n  value\n});\nexport const acClearDashboardsFilter = () => ({\n  type: CLEAR_DASHBOARDS_FILTER\n});","import React from 'react';\nexport const ChevronDown = () => <svg height=\"24\" viewBox=\"0 0 24 24\" width=\"24\" xmlns=\"http://www.w3.org/2000/svg\">\n        <path d=\"m11.29289 15.7071c.39053.3905 1.02369.3905 1.41422 0l4.99999-4.99999c.3905-.39053.3905-1.02369 0-1.41422-.3905-.39052-1.0237-.39052-1.4142 0l-4.2929 4.2929-4.29289-4.2929c-.39053-.39052-1.02369-.39052-1.41422 0-.39052.39053-.39052 1.02369 0 1.41422z\" fill=\"#a0adba\" />\n    </svg>;\nexport const ChevronUp = () => <svg height=\"24\" viewBox=\"0 0 24 24\" width=\"24\" xmlns=\"http://www.w3.org/2000/svg\">\n        <path d=\"m11.2928932 8.29289322c.360484-.36048396.927715-.3882135 1.3200062-.08318861l.0942074.08318861 5 4.99999998c.3905243.3905243.3905243 1.0236893 0 1.4142136-.360484.3604839-.927715.3882135-1.3200062.0831886l-.0942074-.0831886-4.2928932-4.2921068-4.29289322 4.2921068c-.36048396.3604839-.92771502.3882135-1.32000622.0831886l-.09420734-.0831886c-.36048396-.360484-.3882135-.927715-.08318861-1.3200062l.08318861-.0942074z\" fill=\"#a0adba\" />\n    </svg>;","import React, { useRef } from 'react';\nimport PropTypes from 'prop-types';\nimport i18n from '@dhis2/d2-i18n';\nimport { Tooltip } from '@dhis2/ui';\nimport { ChevronDown, ChevronUp } from './assets/icons';\nimport classes from './styles/ShowMoreButton.module.css';\nexport const SHOWMORE_BAR_HEIGHT = 16;\n\nconst ShowMoreButton = ({\n  onClick,\n  isMaxHeight,\n  disabled\n}) => {\n  const containerRef = useRef(null);\n  const buttonLabel = isMaxHeight ? i18n.t('Show fewer dashboards') : i18n.t('Show more dashboards');\n\n  const onButtonClicked = () => {\n    // The click may happen on the svg or path\n    // element of the button icon.\n    // In that case it is necessary to trigger\n    // the mouseout on the button element\n    // to ensure that the tooltip is removed\n    const buttonEl = containerRef.current.children[0];\n    const event = new MouseEvent('mouseout', {\n      bubbles: true,\n      cancelable: false\n    });\n    onClick();\n    buttonEl.dispatchEvent(event);\n  };\n\n  return <div className={classes.container} ref={containerRef}>\n            {disabled ? <div className={classes.disabled}>\n                    <ChevronDown />\n                </div> : <Tooltip content={buttonLabel} placement=\"bottom\">\n                    {({\n        onMouseOver,\n        onMouseOut,\n        ref\n      }) => <button className={classes.showMore} onClick={onButtonClicked} data-test=\"showmore-button\" aria-label={buttonLabel} ref={ref} onMouseOver={onMouseOver} onMouseOut={onMouseOut}>\n                            {isMaxHeight ? <ChevronUp /> : <ChevronDown />}\n                        </button>}\n                </Tooltip>}\n        </div>;\n};\n\nShowMoreButton.propTypes = {\n  disabled: PropTypes.bool,\n  isMaxHeight: PropTypes.bool,\n  onClick: PropTypes.func\n};\nexport default ShowMoreButton;","import { SHOWMORE_BAR_HEIGHT } from './ShowMoreButton';\nimport { DRAG_HANDLE_HEIGHT } from './ControlBar';\nexport const CONTROL_BAR_ROW_HEIGHT = 40;\nexport const FIRST_ROW_PADDING_HEIGHT = 10;\nexport const MIN_ROW_COUNT = 1;\nexport const HEADERBAR_HEIGHT = 48;\nexport const CONTROL_BAR_MARGIN_BOTTOM_SMALL = 32;\nexport const SEARCH_BAR_HEIGHT_SMALL = 40; // height (24px) + padding top and bottom (8px)\n// show more button\n\nexport const CONTROL_BAR_OUTER_HEIGHT_DIFF = FIRST_ROW_PADDING_HEIGHT + SHOWMORE_BAR_HEIGHT - 2; // 2 pixel \"adjustment\"\n\nexport const getRowsHeight = rows => {\n  return rows * CONTROL_BAR_ROW_HEIGHT;\n};\nexport const getNumRowsFromHeight = height => {\n  return Math.floor((height - CONTROL_BAR_OUTER_HEIGHT_DIFF) / CONTROL_BAR_ROW_HEIGHT);\n};\nexport const getControlBarHeight = rows => {\n  return getRowsHeight(rows) + CONTROL_BAR_OUTER_HEIGHT_DIFF;\n};\nexport const CONTROL_BAR = 'controlBar';\nexport const CONTROL_BAR_CONTAINER = 'controlBarContainer';\nexport const CHIPS_CONTAINER = 'chipsContainer';\nexport const CONTROL_BAR_COLLAPSED = 'controlBarCollapsed';\nexport const getControlBarHeightSmallDevice = (type, height) => {\n  const controlBarHeight = height - HEADERBAR_HEIGHT - CONTROL_BAR_MARGIN_BOTTOM_SMALL;\n\n  switch (type) {\n    // control bar height should be 100vh -32px\n    case CONTROL_BAR:\n      return controlBarHeight - DRAG_HANDLE_HEIGHT;\n\n    case CONTROL_BAR_CONTAINER:\n      return controlBarHeight - CONTROL_BAR_OUTER_HEIGHT_DIFF;\n\n    case CHIPS_CONTAINER:\n      return controlBarHeight - SEARCH_BAR_HEIGHT_SMALL - CONTROL_BAR_OUTER_HEIGHT_DIFF;\n\n    case CONTROL_BAR_COLLAPSED:\n    default:\n      return SEARCH_BAR_HEIGHT_SMALL + CONTROL_BAR_OUTER_HEIGHT_DIFF + DRAG_HANDLE_HEIGHT;\n  }\n};","/** @module reducers/controlBar */\nimport { combineReducers } from 'redux';\nimport { validateReducer } from '../modules/util';\nexport const SET_CONTROLBAR_USER_ROWS = 'SET_CONTROLBAR_USER_ROWS';\nexport const DEFAULT_STATE_CONTROLBAR_ROWS = 1;\n\nconst userRows = (state = DEFAULT_STATE_CONTROLBAR_ROWS, action) => {\n  switch (action.type) {\n    case SET_CONTROLBAR_USER_ROWS:\n      return validateReducer(action.value, DEFAULT_STATE_CONTROLBAR_ROWS);\n\n    default:\n      return state;\n  }\n};\n\nexport default combineReducers({\n  userRows\n});\n/**\n * Selectors that point to specific props in the state object\n * @function\n * @param {Object} state\n * @returns {Object}\n */\n\nexport const sGetControlBarRoot = state => state.controlBar; // Selector dependency level 2\n\nexport const sGetControlBarUserRows = state => sGetControlBarRoot(state).userRows;","import { TEXT, SPACER } from './itemTypes';\nimport { getGridItemProperties } from './gridUtil';\nexport const spacerContent = 'SPACER_ITEM_FOR_DASHBOARD_LAYOUT_CONVENIENCE';\nexport const emptyTextItemContent = 'TEXT_ITEM_WITH_NO_CONTENT';\n\nconst isBackendSpacerType = item => item.type === TEXT && item.text === spacerContent;\n\nconst isUiSpacerType = item => item.type === SPACER;\n\nconst isTextType = item => item.type === TEXT && item.text !== spacerContent;\n\nexport const convertUiItemsToBackend = items => items.map(item => {\n  let text = null;\n\n  if (isUiSpacerType(item)) {\n    text = spacerContent;\n  } else if (isTextType(item)) {\n    text = item.text || emptyTextItemContent;\n  }\n\n  return { ...item,\n    ...(text ? {\n      text\n    } : {})\n  };\n});\nexport const convertBackendItemsToUi = items => items.map(item => {\n  const type = isBackendSpacerType(item) ? SPACER : item.type;\n  const gridProperties = getGridItemProperties(item.id);\n  const text = isTextType(item) ? item.text === emptyTextItemContent ? '' : item.text : null;\n  return { ...item,\n    ...(text !== null ? {\n      text\n    } : {}),\n    type,\n    ...gridProperties\n  };\n});","/** @module reducers/dashboards */\nimport arrayFrom from 'd2-utilizr/lib/arrayFrom';\nimport arraySort from 'd2-utilizr/lib/arraySort';\nimport { orArray, orObject } from '../modules/util';\nimport { convertBackendItemsToUi } from '../modules/uiBackendItemConverter';\nexport const SET_DASHBOARDS = 'SET_DASHBOARDS';\nexport const ADD_DASHBOARDS = 'ADD_DASHBOARDS';\nexport const SET_DASHBOARD_STARRED = 'SET_DASHBOARD_STARRED';\nexport const SET_DASHBOARD_DISPLAY_NAME = 'SET_DASHBOARD_DISPLAY_NAME';\nexport const SET_DASHBOARD_ITEMS = 'SET_DASHBOARD_ITEMS';\nexport const DEFAULT_STATE_DASHBOARDS = {\n  byId: null,\n  items: []\n};\nexport const EMPTY_DASHBOARD = {}; // reducer helper functions\n\nconst updateDashboardProp = ({\n  state,\n  dashboardId,\n  prop,\n  value\n}) => ({\n  byId: { ...state.byId,\n    [dashboardId]: { ...state.byId[dashboardId],\n      [prop]: value\n    }\n  },\n  items: state.items\n});\n/**\n * Reducer that computes and returns the new state based on the given action\n * @function\n * @param {Object} state The current state\n * @param {Object} action The action to be evaluated\n * @returns {Object}\n */\n\n\nexport default ((state = DEFAULT_STATE_DASHBOARDS, action) => {\n  switch (action.type) {\n    case SET_DASHBOARDS:\n      {\n        return {\n          byId: action.value,\n          items: []\n        };\n      }\n\n    case ADD_DASHBOARDS:\n      {\n        return { ...state,\n          byId: { ...state.byId,\n            ...action.value\n          }\n        };\n      }\n\n    case SET_DASHBOARD_STARRED:\n      {\n        return updateDashboardProp({\n          state,\n          dashboardId: action.dashboardId,\n          prop: 'starred',\n          value: action.value\n        });\n      }\n\n    case SET_DASHBOARD_DISPLAY_NAME:\n      {\n        return updateDashboardProp({\n          state,\n          dashboardId: action.dashboardId,\n          prop: 'displayName',\n          value: action.value\n        });\n      }\n\n    case SET_DASHBOARD_ITEMS:\n      {\n        return { ...state,\n          items: action.value\n        };\n      }\n\n    default:\n      return state;\n  }\n}); // root selector\n\nexport const sGetDashboardsRoot = state => state.dashboards; // selector level 1\n\n/**\n * Selector which returns a dashboard by id from the state object\n * If no matching dashboard is found it returns undefined\n * If dashboards.byId is null, then the dashboards api request\n * has not yet completed. If dashboards.byId is an empty object\n * then the dashboards api request is complete, but no dashboards\n * were returned\n *\n * @function\n * @param {Object} state The current state\n * @param {Number} id The id of the dashboard\n * @returns {Object | undefined}\n */\n\nexport const sGetDashboardById = (state, id) => orObject(sGetDashboardsRoot(state).byId)[id];\nexport const sDashboardsIsFetching = state => {\n  return sGetDashboardsRoot(state).byId === null;\n};\n/**\n * Selector which returns all dashboards (the byId object)\n *\n * @function\n * @param {Object} state The current state\n * @returns {Object | undefined}\n */\n\nexport const sGetAllDashboards = state => orObject(sGetDashboardsRoot(state).byId);\n/**\n * Selector which returns the current dashboard items\n *\n * @function\n * @param {Object} state The current state\n * @returns {Array}\n */\n\nexport const sGetDashboardItems = state => sGetDashboardsRoot(state).items; // selector level 2\n\nexport const sGetStarredDashboards = state => Object.values(sGetAllDashboards(state)).filter(dashboard => dashboard.starred === true);\nexport const sGetUnstarredDashboards = state => Object.values(sGetAllDashboards(state)).filter(dashboard => dashboard.starred === false); // selector level 3\n\nexport const sGetStarredDashboardIds = state => {\n  return sGetStarredDashboards(state).map(dashboard => dashboard.id);\n};\nexport const sGetUnstarredDashboardIds = state => sGetUnstarredDashboards(state).map(dashboard => dashboard.id);\nexport const sGetDashboardsSortedByStarred = state => [...arraySort(sGetStarredDashboards(state), 'ASC', 'displayName'), ...arraySort(sGetUnstarredDashboards(state), 'ASC', 'displayName')]; // utils\n\n/**\n * Returns the array of dashboards, customized for ui\n * @function\n * @param {Array} data The original dashboard list\n * @returns {Array}\n */\n\nexport const getCustomDashboards = data => arrayFrom(data).map(d => ({\n  id: d.id,\n  name: d.name,\n  displayName: d.displayName,\n  description: d.description,\n  displayDescription: d.displayDescription,\n  starred: d.favorite,\n  owner: d.user.name,\n  created: d.created.split('T').join(' ').substr(0, 16),\n  lastUpdated: d.lastUpdated.split('T').join(' ').substr(0, 16),\n  access: d.access,\n  numberOfItems: orArray(d.dashboardItems).length,\n  dashboardItems: convertBackendItemsToUi(d.dashboardItems)\n}));","/** @module reducers/selected */\nimport { combineReducers } from 'redux';\nimport { validateReducer } from '../modules/util';\nexport const SET_SELECTED_ID = 'SET_SELECTED_ID';\nexport const SET_SELECTED_ISLOADING = 'SET_SELECTED_ISLOADING';\nexport const SET_SELECTED_SHOWDESCRIPTION = 'SET_SELECTED_SHOWDESCRIPTION';\nexport const SET_SELECTED_ITEM_ACTIVE_TYPE = 'SET_SELECTED_ITEM_ACTIVE_TYPE';\nexport const CLEAR_SELECTED_ITEM_ACTIVE_TYPES = 'CLEAR_SELECTED_ITEM_ACTIVE_TYPES';\nexport const DEFAULT_STATE_SELECTED_ID = null;\nexport const DEFAULT_STATE_SELECTED_ISLOADING = false;\nexport const DEFAULT_STATE_SELECTED_SHOWDESCRIPTION = false;\nexport const DEFAULT_STATE_SELECTED_ITEM_ACTIVE_TYPES = {};\nexport const NON_EXISTING_DASHBOARD_ID = '0';\n\nconst id = (state = DEFAULT_STATE_SELECTED_ID, action) => {\n  switch (action.type) {\n    case SET_SELECTED_ID:\n      return validateReducer(action.value, DEFAULT_STATE_SELECTED_ID);\n\n    default:\n      return state;\n  }\n};\n\nconst isLoading = (state = DEFAULT_STATE_SELECTED_ISLOADING, action) => {\n  switch (action.type) {\n    case SET_SELECTED_ISLOADING:\n      return validateReducer(action.value, DEFAULT_STATE_SELECTED_ISLOADING);\n\n    default:\n      return state;\n  }\n};\n\nconst showDescription = (state = DEFAULT_STATE_SELECTED_SHOWDESCRIPTION, action) => {\n  switch (action.type) {\n    case SET_SELECTED_SHOWDESCRIPTION:\n      return validateReducer(action.value, DEFAULT_STATE_SELECTED_SHOWDESCRIPTION);\n\n    default:\n      return state;\n  }\n};\n\nconst itemActiveTypes = (state = DEFAULT_STATE_SELECTED_ITEM_ACTIVE_TYPES, action) => {\n  switch (action.type) {\n    case SET_SELECTED_ITEM_ACTIVE_TYPE:\n      {\n        return { ...state,\n          [action.id]: action.activeType\n        };\n      }\n\n    case CLEAR_SELECTED_ITEM_ACTIVE_TYPES:\n      {\n        return DEFAULT_STATE_SELECTED_ITEM_ACTIVE_TYPES;\n      }\n\n    default:\n      return state;\n  }\n};\n\nexport default combineReducers({\n  id,\n  isLoading,\n  showDescription,\n  itemActiveTypes\n}); // Selectors\n\nexport const sGetSelectedRoot = state => state.selected;\nexport const sGetSelectedId = state => sGetSelectedRoot(state).id;\nexport const sGetSelectedIsLoading = state => sGetSelectedRoot(state).isLoading;\nexport const sGetSelectedShowDescription = state => sGetSelectedRoot(state).showDescription;\nexport const sGetSelectedItemActiveType = (state, id) => sGetSelectedRoot(state).itemActiveTypes[id];","import { getInstance } from 'd2';\nexport const NAMESPACE = 'dashboard';\nexport const hasNamespace = async (d2) => await d2.currentUser.dataStore.has(NAMESPACE);\nexport const getNamespace = async (d2, hasNamespace) => hasNamespace ? await d2.currentUser.dataStore.get(NAMESPACE) : await d2.currentUser.dataStore.create(NAMESPACE);\nexport const apiPostUserDataStoreValue = async (key, value) => {\n  const d2 = await getInstance();\n  const ns = await getNamespace(d2, hasNamespace);\n  return ns.set(key, value);\n};\nexport const apiGetUserDataStoreValue = async (key, defaultValue) => {\n  const d2 = await getInstance();\n  const namespace = await getNamespace(d2, await hasNamespace(d2));\n  const hasKey = namespace?.keys?.find(k => k === key);\n\n  if (hasKey) {\n    return await namespace.get(key);\n  } else {\n    await apiPostUserDataStoreValue(key, defaultValue, namespace);\n    console.log('(These errors to /userDataStore can be ignored)');\n    return defaultValue;\n  }\n};","import { apiGetUserDataStoreValue, apiPostUserDataStoreValue } from './userDataStore';\nimport { DEFAULT_STATE_CONTROLBAR_ROWS } from '../reducers/controlBar';\nconst KEY_CONTROLBAR_ROWS = 'controlBarRows';\nexport const apiGetControlBarRows = async () => await apiGetUserDataStoreValue(KEY_CONTROLBAR_ROWS, DEFAULT_STATE_CONTROLBAR_ROWS);\nexport const apiPostControlBarRows = async (value) => await apiPostUserDataStoreValue(KEY_CONTROLBAR_ROWS, value);","import { SET_CONTROLBAR_USER_ROWS } from '../reducers/controlBar';\nimport { apiGetControlBarRows } from '../api/controlBar'; // actions\n\nexport const acSetControlBarUserRows = rows => ({\n  type: SET_CONTROLBAR_USER_ROWS,\n  value: rows\n}); // thunks\n\nexport const tSetControlBarRows = () => async dispatch => {\n  const onSuccess = rows => {\n    dispatch(acSetControlBarUserRows(rows));\n  };\n\n  const onError = error => {\n    console.log('Error (apiGetControlBarRows): ', error);\n    return error;\n  };\n\n  try {\n    const controlBarRows = await apiGetControlBarRows();\n    return onSuccess(controlBarRows);\n  } catch (err) {\n    return onError(err);\n  }\n};","import React, { useState, useEffect, createRef } from 'react';\nimport { connect } from 'react-redux';\nimport { Link, withRouter } from 'react-router-dom';\nimport cx from 'classnames';\nimport arraySort from 'd2-utilizr/lib/arraySort';\nimport PropTypes from 'prop-types';\nimport ControlBar, { DRAG_HANDLE_HEIGHT } from './ControlBar';\nimport Chip from './DashboardItemChip';\nimport AddCircleIcon from '../../icons/AddCircle';\nimport Filter from './Filter';\nimport ShowMoreButton from './ShowMoreButton';\nimport { FIRST_ROW_PADDING_HEIGHT, MIN_ROW_COUNT, getRowsHeight, getControlBarHeight, getNumRowsFromHeight, getControlBarHeightSmallDevice, CONTROL_BAR, CONTROL_BAR_CONTAINER, CHIPS_CONTAINER } from './controlBarDimensions';\nimport { useWindowDimensions } from '../WindowDimensionsProvider';\nimport { sGetDashboardsFilter } from '../../reducers/dashboardsFilter';\nimport { sGetControlBarUserRows } from '../../reducers/controlBar';\nimport { sGetAllDashboards } from '../../reducers/dashboards';\nimport { sGetSelectedId } from '../../reducers/selected';\nimport { acSetControlBarUserRows } from '../../actions/controlBar';\nimport { apiPostControlBarRows } from '../../api/controlBar';\nimport { isSmallScreen } from '../../modules/smallScreen';\nimport classes from './styles/DashboardsBar.module.css';\nexport const MAX_ROW_COUNT = 10;\nexport const isDashboardBarMaxHeight = rows => rows === MAX_ROW_COUNT;\n\nconst DashboardsBar = ({\n  userRows,\n  onChangeHeight,\n  history,\n  dashboards,\n  selectedId,\n  filterText\n}) => {\n  const [rows, setRows] = useState(userRows);\n  const {\n    width,\n    height\n  } = useWindowDimensions();\n  const ref = createRef();\n  useEffect(() => {\n    setRows(userRows);\n  }, [userRows]);\n\n  const isMaxHeight = () => isDashboardBarMaxHeight(rows);\n\n  const adjustHeight = newHeight => {\n    const newRows = Math.max(MIN_ROW_COUNT, getNumRowsFromHeight(newHeight - 52) // don't rush the transition to a bigger row count\n    );\n\n    if (newRows !== rows) {\n      onChangeHeight(Math.min(newRows, MAX_ROW_COUNT));\n    }\n  };\n\n  const onEndDrag = () => apiPostControlBarRows(rows);\n\n  const scrollToTop = () => {\n    if (isMaxHeight()) {\n      ref.current.scroll(0, 0);\n    }\n  };\n\n  const toggleMaxHeight = () => {\n    const newRows = isMaxHeight() ? userRows : MAX_ROW_COUNT;\n    scrollToTop();\n    setRows(newRows);\n  };\n\n  const cancelMaxHeight = () => {\n    scrollToTop();\n    setRows(userRows);\n  };\n\n  const onSelectDashboard = () => {\n    const id = getFilteredDashboards()[0]?.id;\n\n    if (id) {\n      history.push(id);\n    }\n  };\n\n  const getFilteredDashboards = () => {\n    const filteredDashboards = arraySort(Object.values(dashboards).filter(d => d.displayName.toLowerCase().includes(filterText.toLowerCase())), 'ASC', 'displayName');\n    return [...filteredDashboards.filter(d => d.starred), ...filteredDashboards.filter(d => !d.starred)];\n  };\n\n  const viewableRows = isSmallScreen(width) && !isMaxHeight() ? MIN_ROW_COUNT : rows;\n\n  const getHeight = () => {\n    if (isSmallScreen(width) && isMaxHeight()) {\n      return getControlBarHeightSmallDevice(CONTROL_BAR, height);\n    }\n\n    return getControlBarHeight(viewableRows);\n  };\n\n  const getContainerHeight = container => {\n    if (isSmallScreen(width) && isMaxHeight()) {\n      return getControlBarHeightSmallDevice(container ? CONTROL_BAR_CONTAINER : CHIPS_CONTAINER, height);\n    }\n\n    return getRowsHeight(viewableRows) + FIRST_ROW_PADDING_HEIGHT;\n  };\n\n  const getDashboardChips = () => {\n    const chips = getFilteredDashboards().map(dashboard => <Chip key={dashboard.id} label={dashboard.displayName} starred={dashboard.starred} dashboardId={dashboard.id} selected={dashboard.id === selectedId} onClick={cancelMaxHeight} />);\n\n    if (isSmallScreen(width)) {\n      const chipContainerClasses = cx(classes.chipContainer, isMaxHeight() ? classes.expanded : classes.collapsed);\n      return <div className={chipContainerClasses} style={{\n        height: getContainerHeight()\n      }}>\n                    {chips}\n                </div>;\n    } else {\n      return chips;\n    }\n  };\n\n  const containerClass = cx(classes.container, isMaxHeight() ? classes.expanded : classes.collapsed);\n  return <>\n            <ControlBar height={getHeight()} onChangeHeight={!isSmallScreen(width) ? adjustHeight : null} onEndDrag={onEndDrag}>\n                <div className={containerClass} ref={ref} style={{\n        height: getContainerHeight(CONTROL_BAR_CONTAINER)\n      }}>\n                    <div className={classes.controls}>\n                        <Link className={classes.newLink} to={'/new'} data-test=\"link-new-dashboard\">\n                            <AddCircleIcon />\n                        </Link>\n                        <Filter onKeypressEnter={onSelectDashboard} onToggleMaxHeight={toggleMaxHeight} isMaxHeight={isMaxHeight()} />\n                    </div>\n                    {getDashboardChips()}\n                </div>\n                <ShowMoreButton onClick={toggleMaxHeight} isMaxHeight={isMaxHeight()} disabled={userRows === MAX_ROW_COUNT} />\n            </ControlBar>\n            <div style={{\n      marginTop: getControlBarHeight(isSmallScreen(width) ? MIN_ROW_COUNT : userRows) + DRAG_HANDLE_HEIGHT\n    }} />\n        </>;\n};\n\nDashboardsBar.propTypes = {\n  dashboards: PropTypes.object,\n  filterText: PropTypes.string,\n  history: PropTypes.object,\n  selectedId: PropTypes.string,\n  userRows: PropTypes.number,\n  onChangeHeight: PropTypes.func\n};\n\nconst mapStateToProps = state => ({\n  dashboards: sGetAllDashboards(state),\n  filterText: sGetDashboardsFilter(state),\n  selectedId: sGetSelectedId(state),\n  userRows: sGetControlBarUserRows(state)\n});\n\nconst mapDispatchToProps = {\n  onChangeHeight: acSetControlBarUserRows\n};\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(DashboardsBar));","import React from 'react';\nimport { colors } from '@dhis2/ui';\nimport PropTypes from 'prop-types';\n\nconst NoContentMessage = ({\n  text\n}) => <div style={{\n  padding: '50px 10px',\n  textAlign: 'center',\n  fontSize: '15px',\n  fontWeight: 500,\n  color: colors.grey600\n}}>\n        {text}\n    </div>;\n\nNoContentMessage.propTypes = {\n  text: PropTypes.string\n};\nexport default NoContentMessage;","import React from 'react';\nimport { colors } from '@dhis2/ui';\nexport const ThreeDots = () => <svg height=\"18\" viewBox=\"0 0 18 18\" width=\"18\" xmlns=\"http://www.w3.org/2000/svg\">\n        <path d=\"m4 7.5c-.83 0-1.5.67-1.5 1.5s.67 1.5 1.5 1.5 1.5-.67 1.5-1.5-.67-1.5-1.5-1.5zm10 0c-.83 0-1.5.67-1.5 1.5s.67 1.5 1.5 1.5 1.5-.67 1.5-1.5-.67-1.5-1.5-1.5zm-5 0c-.83 0-1.5.67-1.5 1.5s.67 1.5 1.5 1.5 1.5-.67 1.5-1.5-.67-1.5-1.5-1.5z\" fill=\"#6e7a8a\" />\n    </svg>;\nexport const SpeechBubble = () => <svg height=\"20\" viewBox=\"0 0 20 20\" width=\"20\" xmlns=\"http://www.w3.org/2000/svg\" style={{\n  margin: '3px 2px 0 2px'\n}} // Temporary fix for the misaligned icon, should be removed once the icon is replaced\n>\n        <path d=\"m20 2h-16c-1.1 0-1.99.9-1.99 2l-.01 18 4-4h14c1.1 0 2-.9 2-2v-12c0-1.1-.9-2-2-2zm-2 12h-12v-2h12zm0-3h-12v-2h12zm0-3h-12v-2h12z\" fill=\"#6e7a8a\" fillRule=\"evenodd\" transform=\"translate(-2 -2)\" />\n    </svg>;\nexport const Warning = () => <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24\" viewBox=\"0 0 24 24\" width=\"24\" fill={colors.grey600}>\n        <path d=\"M0 0h24v24H0z\" fill=\"none\" />\n        <path d=\"M1 21h22L12 2 1 21zm12-3h-2v-2h2v2zm0-4h-2v-4h2v4z\" />\n    </svg>;\nexport const Fullscreen = () => <svg height=\"16\" viewBox=\"0 0 16 16\" width=\"16\" xmlns=\"http://www.w3.org/2000/svg\">\n        <path d=\"m6.85355339 9.14644661c.17356635.17356635.1928515.44299075.05785545.63785889l-.05785545.06924789-4.14755339 4.14644661h2.794c.24545989 0 .44960837.1768752.49194433.4101244l.00805567.0898756c0 .2454599-.17687516.4496084-.41012437.4919443l-.08987563.0080557h-4c-.24545989 0-.44960837-.1768752-.49194433-.4101244l-.00805567-.0898756v-4c0-.2761424.22385763-.5.5-.5.24545989 0 .44960837.1768752.49194433.4101244l.00805567.0898756v2.792l4.14644661-4.14555339c.19526215-.19526215.51184463-.19526215.70710678 0zm6.14644661-2.14644661v6h-6v-1h5v-5zm-4-4v1h-5v5h-1v-6zm5.5-2c.2454599 0 .4496084.17687516.4919443.41012437l.0080557.08987563v4c0 .27614237-.2238576.5-.5.5-.2454599 0-.4496084-.17687516-.4919443-.41012437l-.0080557-.08987563v-2.794l-4.14644661 4.14755339c-.19526215.19526215-.51184463.19526215-.70710678 0-.17356635-.17356635-.1928515-.44299075-.05785545-.63785889l.05785545-.06924789 4.14655339-4.14744661-2.793.001c-.2454599 0-.4496084-.17687516-.4919443-.41012437l-.0080557-.08987563c0-.24545989.1768752-.44960837.4101244-.49194433l.0898756-.00805567z\" fill=\"inherit\" />\n    </svg>;\nexport const ExitFullscreen = () => <svg height=\"16\" viewBox=\"0 0 16 16\" width=\"16\" xmlns=\"http://www.w3.org/2000/svg\">\n        <path d=\"m6.5 9c.24545989 0 .44960837.17687516.49194433.41012437l.00805567.08987563v4c0 .2761424-.22385763.5-.5.5-.24545989 0-.44960837-.1768752-.49194433-.4101244l-.00805567-.0898756v-2.794l-3.64644661 3.6475534c-.19526215.1952621-.51184463.1952621-.70710678 0-.17356635-.1735664-.1928515-.4429908-.05785545-.6378589l.05785545-.0692479 3.64555339-3.6464466h-2.792c-.24545989 0-.44960837-.17687516-.49194433-.41012437l-.00805567-.08987563c0-.24545989.17687516-.44960837.41012437-.49194433l.08987563-.00805567zm7.5-.5v5.5h-5.5v-1h4.5v-4.5zm-6.5-6.5v1h-4.5v4.5h-1v-5.5zm6.8535534-.35355339c.1735663.17356635.1928515.44299075.0578554.63785889l-.0578554.06924789-3.6475534 3.64644661h2.794c.2454599 0 .4496084.17687516.4919443.41012437l.0080557.08987563c0 .24545989-.1768752.44960837-.4101244.49194433l-.0898756.00805567h-4c-.24545989 0-.44960837-.17687516-.49194433-.41012437l-.00805567-.08987563v-4c0-.27614237.22385763-.5.5-.5.24545989 0 .44960837.17687516.49194433.41012437l.00805567.08987563v2.792l3.6464466-3.64555339c.1952622-.19526215.5118446-.19526215.7071068 0z\" fill=\"inherit\" />\n    </svg>;","import { apiGetUserDataStoreValue, apiPostUserDataStoreValue } from './userDataStore';\nimport { DEFAULT_STATE_SELECTED_SHOWDESCRIPTION } from '../reducers/selected';\nconst KEY_SHOW_DESCRIPTION = 'showDescription';\nexport const apiGetShowDescription = async () => await apiGetUserDataStoreValue(KEY_SHOW_DESCRIPTION, DEFAULT_STATE_SELECTED_SHOWDESCRIPTION);\nexport const apiPostShowDescription = value => apiPostUserDataStoreValue(KEY_SHOW_DESCRIPTION, value);","export const RECEIVED_USER = 'RECEIVED_USER';\nexport const DEFAULT_STATE_USER = {\n  id: '',\n  username: '',\n  uiLocale: '',\n  isSuperuser: false\n};\nexport default ((state = DEFAULT_STATE_USER, action) => {\n  switch (action.type) {\n    case RECEIVED_USER:\n      {\n        return fromD2ToUserObj(action.value);\n      }\n\n    default:\n      return state;\n  }\n});\n\nfunction fromD2ToUserObj(d2Object) {\n  return {\n    id: d2Object.id,\n    username: d2Object.username,\n    uiLocale: d2Object.settings.keyUiLocale,\n    isSuperuser: d2Object.authorities.has('ALL')\n  };\n} // selectors\n\n\nexport const sGetUserId = state => state.user.id;\nexport const sGetUserUsername = state => state.user.username;\nexport const sGetIsSuperuser = state => state.user.isSuperuser;\nexport const sGetUiLocale = state => state.user.uiLocale;","import { getDimensionById, DIMENSION_ID_PERIOD, DIMENSION_ID_ORGUNIT } from '@dhis2/analytics';\nexport const SET_DIMENSIONS = 'SET_DIMENSIONS';\nexport const DEFAULT_DIMENSIONS = [getDimensionById(DIMENSION_ID_PERIOD), getDimensionById(DIMENSION_ID_ORGUNIT)];\nexport default ((state = DEFAULT_DIMENSIONS, action) => {\n  switch (action.type) {\n    case SET_DIMENSIONS:\n      {\n        return [...DEFAULT_DIMENSIONS, ...action.value];\n      }\n\n    default:\n      return state;\n  }\n});\nexport const sGetDimensions = state => state.dimensions;","import { sGetDimensions } from './dimensions';\nimport { createSelector } from 'reselect';\nexport const CLEAR_ITEM_FILTERS = 'CLEAR_ITEM_FILTERS';\nexport const SET_ITEM_FILTERS = 'SET_ITEM_FILTERS';\nexport const ADD_ITEM_FILTER = 'ADD_ITEM_FILTER';\nexport const REMOVE_ITEM_FILTER = 'REMOVE_ITEM_FILTER';\nexport const DEFAULT_STATE_ITEM_FILTERS = {};\nexport default ((state = DEFAULT_STATE_ITEM_FILTERS, action) => {\n  switch (action.type) {\n    case ADD_ITEM_FILTER:\n      {\n        return { ...state,\n          [action.filter.id]: action.filter.value\n        };\n      }\n\n    case REMOVE_ITEM_FILTER:\n      {\n        const newState = { ...state\n        };\n        delete newState[action.id];\n        return newState;\n      }\n\n    case SET_ITEM_FILTERS:\n      {\n        return action.filters;\n      }\n\n    case CLEAR_ITEM_FILTERS:\n      {\n        return DEFAULT_STATE_ITEM_FILTERS;\n      }\n\n    default:\n      return state;\n  }\n}); // selectors\n\nexport const sGetItemFiltersRoot = state => state.itemFilters; // simplify the filters structure to:\n// [{ id: 'pe', name: 'Period', values: [{ id: 2019: name: '2019' }, {id: 'LAST_MONTH', name: 'Last month' }]}, ...]\n\nexport const sGetNamedItemFilters = createSelector([sGetItemFiltersRoot, sGetDimensions], (filters, dimensions) => Object.keys(filters).reduce((arr, id) => {\n  arr.push({\n    id: id,\n    name: dimensions.find(dimension => dimension.id === id).name,\n    values: filters[id].map(value => ({\n      id: value.id,\n      name: value.displayName || value.name\n    }))\n  });\n  return arr;\n}, []));","import { ADD_ITEM_FILTER, REMOVE_ITEM_FILTER, SET_ITEM_FILTERS, CLEAR_ITEM_FILTERS } from '../reducers/itemFilters';\nexport const FILTER_ORG_UNIT = 'ou'; // actions\n\nexport const acAddItemFilter = filter => ({\n  type: ADD_ITEM_FILTER,\n  filter\n});\nexport const acRemoveItemFilter = id => ({\n  type: REMOVE_ITEM_FILTER,\n  id\n});\nexport const acClearItemFilters = () => ({\n  type: CLEAR_ITEM_FILTERS\n});\nexport const acSetItemFilters = filters => ({\n  type: SET_ITEM_FILTERS,\n  filters\n});","import update from 'immutability-helper';\nimport { arrayToIdMap } from '../modules/util';\nexport const RECEIVED_MESSAGES = 'RECEIVED_MESSAGES';\nexport default ((state = {}, action) => {\n  switch (action.type) {\n    case RECEIVED_MESSAGES:\n      {\n        const conversations = arrayToIdMap(action.value);\n        const newState = update(state, {\n          $merge: conversations\n        });\n        return newState;\n      }\n\n    default:\n      return state;\n  }\n}); // selectors\n\nexport const sGetMessagesRoot = state => state.messages;","export const messageConversationsQuery = {\n  resource: 'messageConversations',\n  params: {\n    fields: 'id,messageCount,lastUpdated,messageType,displayName,read,messages[id,read,sender[id,displayName],text,lastUpdated]',\n    order: 'read:asc',\n    pageSize: 200\n  }\n};\nexport const getMessages = async dataEngine => {\n  try {\n    const {\n      messageConversations\n    } = await dataEngine.query({\n      messageConversations: messageConversationsQuery\n    });\n    return messageConversations.messageConversations;\n  } catch (error) {\n    console.log('Error:', error);\n  }\n};","import { RECEIVED_MESSAGES } from '../../../reducers/messages';\nimport { getMessages } from '../../../api/messages';\n\nconst onError = (action, error) => {\n  console.log(`Error in action ${action}: ${error}`);\n  return error;\n};\n\nexport const receivedMessages = value => ({\n  type: RECEIVED_MESSAGES,\n  value\n});\nexport const tGetMessages = dataEngine => async dispatch => {\n  try {\n    const messageConversations = await getMessages(dataEngine);\n    return dispatch(receivedMessages(messageConversations));\n  } catch (err) {\n    return onError('Get Messages', err);\n  }\n};","export const SET_ALERT_MESSAGE = 'SET_ALERT_MESSAGE';\nexport const CLEAR_ALERT_MESSAGE = 'CLEAR_ALERT_MESSAGE';\nexport const DEFAULT_STATE_ALERT = null;\nexport default ((state = DEFAULT_STATE_ALERT, action) => {\n  switch (action.type) {\n    case SET_ALERT_MESSAGE:\n      {\n        return action.value;\n      }\n\n    case CLEAR_ALERT_MESSAGE:\n      {\n        return DEFAULT_STATE_ALERT;\n      }\n\n    default:\n      return state;\n  }\n}); // selectors\n\nexport const sGetAlertMessage = state => state.alert;","import { SET_ALERT_MESSAGE, CLEAR_ALERT_MESSAGE } from '../reducers/alert';\nexport const acSetAlertMessage = value => ({\n  type: SET_ALERT_MESSAGE,\n  value\n});\nexport const acClearAlertMessage = () => ({\n  type: CLEAR_ALERT_MESSAGE\n});","import { orObject } from '../modules/util';\nimport objectClean from 'd2-utilizr/lib/objectClean';\n/** @module reducers/visualizations */\n\nexport const ADD_VISUALIZATION = 'ADD_VISUALIZATION';\nexport const SET_ACTIVE_VISUALIZATION_TYPE = 'SET_ACTIVE_VISUALIZATION_TYPE';\nexport const CLEAR_VISUALIZATIONS = 'CLEAR_VISUALIZATIONS';\nexport const DEFAULT_STATE_VISUALIZATIONS = {};\n\nconst isEmpty = p => p === undefined || p === null;\n\nexport default ((state = DEFAULT_STATE_VISUALIZATIONS, action) => {\n  switch (action.type) {\n    case ADD_VISUALIZATION:\n      {\n        return { ...state,\n          [action.value.id]: objectClean({ ...orObject(state[action.value.id]),\n            ...action.value\n          }, isEmpty)\n        };\n      }\n\n    case CLEAR_VISUALIZATIONS:\n      {\n        return DEFAULT_STATE_VISUALIZATIONS;\n      }\n\n    default:\n      return state;\n  }\n}); // root selector\n\nexport const sGetVisualizationsRoot = state => state.visualizations; // selectors level 1\n\nexport const sGetVisualization = (state, id) => {\n  return sGetVisualizationsRoot(state)[id];\n};","import { ADD_VISUALIZATION, CLEAR_VISUALIZATIONS } from '../reducers/visualizations';\nexport const acAddVisualization = value => ({\n  type: ADD_VISUALIZATION,\n  value\n});\nexport const acClearVisualizations = () => ({\n  type: CLEAR_VISUALIZATIONS\n});","import { getInstance } from 'd2';\nimport arrayClean from 'd2-utilizr/lib/arrayClean';\nimport { getEndPointName, MAP } from '../modules/itemTypes';\nimport { getVisualizationId } from '../modules/item'; // Id, name\n\nexport const getIdNameFields = ({\n  rename\n} = {}) => ['id', `${rename ? 'displayName~rename(name)' : 'name,displayName'}`]; // Item\n\nexport const getItemFields = () => ['dimensionItem~rename(id)', 'displayName~rename(name)', 'dimensionItemType']; // Dimension\n\nexport const getDimensionFields = ({\n  withItems\n}) => arrayClean(['dimension', 'legendSet[id]', 'filter', 'programStage', withItems ? `items[${getItemFields().join(',')}]` : ``]); // Axis\n\nexport const getAxesFields = ({\n  withItems\n}) => [`columns[${getDimensionFields({\n  withItems\n}).join(',')}]`, `rows[${getDimensionFields({\n  withItems\n}).join(',')}]`, `filters[${getDimensionFields({\n  withItems\n}).join(',')}]`]; // Favorite\n\nexport const getFavoriteFields = ({\n  withDimensions,\n  withOptions\n}) => {\n  return arrayClean([`${getIdNameFields({\n    rename: true\n  }).join(',')}`, 'displayDescription~rename(description)', withDimensions ? `${getAxesFields({\n    withItems: true\n  }).join(',')}` : ``, withOptions ? ['*', '!attributeDimensions', '!attributeValues', '!category', '!categoryDimensions', '!categoryOptionGroupSetDimensions', '!columnDimensions', '!dataDimensionItems', '!dataElementDimensions', '!dataElementGroupSetDimensions', '!filterDimensions', '!itemOrganisationUnitGroups', '!lastUpdatedBy', '!organisationUnitGroupSetDimensions', '!organisationUnitLevels', '!organisationUnits', '!programIndicatorDimensions', '!relativePeriods', '!reportParams', '!rowDimensions', '!translations', '!userOrganisationUnit', '!userOrganisationUnitChildren', '!userOrganisationUnitGrandChildren'].join(',') : '']);\n};\nexport const getFavoritesFields = ({\n  withDimensions\n}) => [`reportTable[${getFavoriteFields({\n  withDimensions\n}).join(',')}]`, `chart[${['type', ...getFavoriteFields({\n  withDimensions\n})].join(',')}]`, `map[${getFavoriteFields({\n  withDimensions\n}).join(',')}]`, `eventReport[${getFavoriteFields({\n  withDimensions\n}).join(',')}]`, `eventChart[${getFavoriteFields({\n  withDimensions\n}).join(',')}]`]; // List item\n\nexport const getListItemFields = () => [`reports[${['type', ...getIdNameFields({\n  rename: true\n})].join(',')}]`, `resources[${getIdNameFields({\n  rename: true\n}).join(',')}]`, `users[${getIdNameFields({\n  rename: true\n}).join(',')}]`]; // Map\n\nexport const getMapFields = () => [`${getIdNameFields({\n  rename: true\n}).join(',')}`, 'user,longitude,latitude,zoom,basemap', `mapViews[${getFavoriteFields({\n  withDimensions: true,\n  withOptions: true\n})}]`]; // Api\n\nexport const apiFetchVisualization = async item => {\n  const id = getVisualizationId(item);\n  const fields = item.type === MAP ? getMapFields() : getFavoriteFields({\n    withDimensions: true,\n    withOptions: true\n  });\n  const d2 = await getInstance();\n  return await d2.Api.getApi().get(`${getEndPointName(item.type)}/${id}`, {\n    fields\n  });\n};","import arrayClean from 'd2-utilizr/lib/arrayClean';\nimport { getListItemFields, getFavoritesFields, getIdNameFields } from './metadata'; // Helper functions\n\nexport const onError = error => console.log('Error: ', error); // Dashboard item\n\nexport const getDashboardItemsFields = ({\n  withFavorite\n} = {}) => arrayClean(['id', 'type', 'shape', 'x', 'y', 'width~rename(w)', 'height~rename(h)', 'messages', 'text', 'appKey', `${getListItemFields().join(',')}`, withFavorite ? `${getFavoritesFields({\n  withDimensions: withFavorite.withDimensions\n}).join(',')}` : ``]); // Dashboard\n\nexport const getDashboardFields = ({\n  withItems,\n  withFavorite\n} = {}) => arrayClean([`${getIdNameFields().join(',')}`, 'description', 'displayDescription', 'favorite', `user[${getIdNameFields({\n  rename: true\n}).join(',')}]`, 'created', 'lastUpdated', 'access', 'href', // needed for d2-ui-translations-dialog, since we don't pass a d2 Model anymore\nwithItems ? `dashboardItems[${getDashboardItemsFields({\n  withFavorite\n}).join(',')}]` : ``]);","import arrayClean from 'd2-utilizr/lib/arrayClean';\nimport { onError, getDashboardFields } from './index';\nexport const dashboardsQuery = {\n  resource: 'dashboards',\n  params: {\n    fields: [getDashboardFields(), 'dashboardItems[id]'].join(','),\n    paging: false\n  }\n};\nexport const dashboardQuery = {\n  resource: 'dashboards',\n  id: ({\n    id\n  }) => id,\n  params: {\n    fields: arrayClean(getDashboardFields({\n      withItems: true,\n      withFavorite: {\n        withDimensions: false\n      }\n    })).join(',')\n  }\n};\nexport const deleteDashboardMutation = {\n  type: 'delete',\n  resource: 'dashboards',\n  id: ({\n    id\n  }) => id\n}; // Get \"all\" dashboards on startup\n\nexport const apiFetchDashboards = async dataEngine => {\n  try {\n    const dashboardsData = await dataEngine.query({\n      dashboards: dashboardsQuery\n    });\n    return dashboardsData.dashboards.dashboards;\n  } catch (error) {\n    onError(error);\n  }\n}; // Get more info about selected dashboard\n\nexport const apiFetchDashboard = async (dataEngine, id) => {\n  try {\n    const dashboardData = await dataEngine.query({\n      dashboard: dashboardQuery\n    }, {\n      variables: {\n        id\n      }\n    });\n    return dashboardData.dashboard;\n  } catch (error) {\n    onError(error);\n  }\n};\nexport const apiDeleteDashboard = async (dataEngine, id) => {\n  try {\n    await dataEngine.mutate(deleteDashboardMutation, {\n      variables: {\n        id\n      }\n    });\n  } catch (error) {\n    onError(error);\n  }\n};","import i18n from '@dhis2/d2-i18n';\nimport { getCustomDashboards, sGetDashboardById } from '../reducers/dashboards';\nimport { SET_SELECTED_ID, SET_SELECTED_ISLOADING, SET_SELECTED_SHOWDESCRIPTION, SET_SELECTED_ITEM_ACTIVE_TYPE, CLEAR_SELECTED_ITEM_ACTIVE_TYPES, sGetSelectedIsLoading, sGetSelectedId } from '../reducers/selected';\nimport { sGetUserUsername } from '../reducers/user';\nimport { acSetDashboardItems, acAppendDashboards } from './dashboards';\nimport { acClearItemFilters } from './itemFilters';\nimport { tGetMessages } from '../components/Item/MessagesItem/actions';\nimport { acSetAlertMessage, acClearAlertMessage } from './alert';\nimport { acAddVisualization, acClearVisualizations } from './visualizations';\nimport { apiFetchDashboard } from '../api/dashboards';\nimport { storePreferredDashboardId } from '../api/localStorage';\nimport { apiGetShowDescription } from '../api/description';\nimport { withShape } from '../modules/gridUtil';\nimport { getVisualizationFromItem } from '../modules/item';\nimport { REPORT_TABLE, CHART, MAP, EVENT_REPORT, EVENT_CHART, MESSAGES } from '../modules/itemTypes'; // actions\n\nexport const acSetSelectedId = value => ({\n  type: SET_SELECTED_ID,\n  value\n});\nexport const acSetSelectedIsLoading = value => ({\n  type: SET_SELECTED_ISLOADING,\n  value\n});\nexport const acSetSelectedShowDescription = value => ({\n  type: SET_SELECTED_SHOWDESCRIPTION,\n  value\n});\nexport const acSetSelectedItemActiveType = (id, activeType) => {\n  const action = {\n    type: SET_SELECTED_ITEM_ACTIVE_TYPE,\n    id,\n    activeType\n  };\n  return action;\n};\nexport const acClearSelectedItemActiveTypes = () => ({\n  type: CLEAR_SELECTED_ITEM_ACTIVE_TYPES\n}); // thunks\n\nexport const tSetSelectedDashboardById = id => async (dispatch, getState, dataEngine) => {\n  dispatch(acSetSelectedIsLoading(true));\n  const alertTimeout = setTimeout(() => {\n    const name = sGetDashboardById(getState(), id)?.displayName;\n\n    if (sGetSelectedIsLoading(getState()) && name) {\n      dispatch(acSetAlertMessage(i18n.t('Loading dashboard – {{name}}', {\n        name\n      })));\n    }\n  }, 500);\n\n  const onSuccess = selected => {\n    dispatch(acAppendDashboards(selected));\n    const customDashboard = getCustomDashboards(selected)[0];\n    dispatch(acSetDashboardItems(withShape(customDashboard.dashboardItems)));\n    storePreferredDashboardId(sGetUserUsername(getState()), id);\n\n    if (id !== sGetSelectedId(getState())) {\n      dispatch(acClearItemFilters());\n      dispatch(acClearVisualizations());\n      dispatch(acClearSelectedItemActiveTypes());\n    }\n\n    customDashboard.dashboardItems.forEach(item => {\n      switch (item.type) {\n        case REPORT_TABLE:\n        case CHART:\n        case MAP:\n        case EVENT_REPORT:\n        case EVENT_CHART:\n          dispatch(acAddVisualization(getVisualizationFromItem(item)));\n          break;\n\n        case MESSAGES:\n          dispatch(tGetMessages(dataEngine));\n          break;\n\n        default:\n          break;\n      }\n    });\n    dispatch(acSetSelectedId(id));\n    dispatch(acSetSelectedIsLoading(false));\n    clearTimeout(alertTimeout);\n    dispatch(acClearAlertMessage());\n    return selected;\n  };\n\n  try {\n    const dashboard = await apiFetchDashboard(dataEngine, id);\n    return onSuccess(dashboard);\n  } catch (err) {\n    console.error('Error: ', err);\n    return err;\n  }\n};\nexport const tSetShowDescription = () => async dispatch => {\n  const onSuccess = value => {\n    dispatch(acSetSelectedShowDescription(value));\n  };\n\n  try {\n    const showDescription = await apiGetShowDescription();\n    return onSuccess(showDescription);\n  } catch (err) {\n    console.error('Error (apiGetShowDescription): ', err);\n    return err;\n  }\n};","export const getPreferredDashboardId = username => localStorage.getItem(`dhis2.dashboard.current.${username}`) || undefined;\nexport const storePreferredDashboardId = (username, dashboardId) => {\n  localStorage.setItem(`dhis2.dashboard.current.${username}`, dashboardId);\n};","import { SET_DASHBOARDS, ADD_DASHBOARDS, SET_DASHBOARD_STARRED, SET_DASHBOARD_DISPLAY_NAME, SET_DASHBOARD_ITEMS, getCustomDashboards, sGetDashboardById, sGetDashboardsSortedByStarred } from '../reducers/dashboards';\nimport { NON_EXISTING_DASHBOARD_ID } from '../reducers/selected';\nimport { sGetUserUsername } from '../reducers/user';\nimport { tSetSelectedDashboardById, acSetSelectedId } from './selected';\nimport { apiFetchDashboards, apiDeleteDashboard } from '../api/dashboards';\nimport { getPreferredDashboardId } from '../api/localStorage';\nimport { arrayToIdMap } from '../modules/util'; // actions\n\nexport const acSetDashboards = dashboards => ({\n  type: SET_DASHBOARDS,\n  value: arrayToIdMap(getCustomDashboards(dashboards))\n});\nexport const acAppendDashboards = dashboards => ({\n  type: ADD_DASHBOARDS,\n  value: arrayToIdMap(getCustomDashboards(dashboards))\n});\nexport const acSetDashboardStarred = (dashboardId, isStarred) => ({\n  type: SET_DASHBOARD_STARRED,\n  dashboardId: dashboardId,\n  value: isStarred\n});\nexport const acSetDashboardDisplayName = (dashboardId, value) => ({\n  type: SET_DASHBOARD_DISPLAY_NAME,\n  dashboardId,\n  value\n});\nexport const acSetDashboardItems = value => ({\n  type: SET_DASHBOARD_ITEMS,\n  value\n}); // thunks\n\nexport const tFetchDashboards = () => async (dispatch, getState, dataEngine) => {\n  const dashboards = await apiFetchDashboards(dataEngine);\n  dispatch(acSetDashboards(dashboards));\n};\nexport const tSelectDashboard = id => async (dispatch, getState) => {\n  try {\n    const state = getState();\n    let dashboardToSelect = null;\n\n    if (id) {\n      dashboardToSelect = sGetDashboardById(state, id) || null;\n    } else {\n      const preferredId = getPreferredDashboardId(sGetUserUsername(state));\n      const dash = sGetDashboardById(state, preferredId);\n      dashboardToSelect = preferredId && dash ? dash : sGetDashboardsSortedByStarred(state)[0];\n    }\n\n    if (dashboardToSelect) {\n      dispatch(tSetSelectedDashboardById(dashboardToSelect.id));\n    } else {\n      dispatch(acSetSelectedId(NON_EXISTING_DASHBOARD_ID));\n    }\n  } catch (err) {\n    console.error('Error (apiFetchDashboards): ', err);\n    return err;\n  }\n};\nexport const tDeleteDashboard = id => async (dispatch, getState, dataEngine) => {\n  try {\n    await apiDeleteDashboard(dataEngine, id);\n    await dispatch(tFetchDashboards());\n    return Promise.resolve();\n  } catch (err) {\n    console.error('Error (deleteDashboard): ', err);\n    return err;\n  }\n};","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport i18n from '@dhis2/d2-i18n';\nimport { useD2 } from '@dhis2/app-runtime-adapter-d2';\nimport { Button, Modal, ModalTitle, ModalContent, ModalActions, ButtonStrip } from '@dhis2/ui';\nimport { PeriodDimension, DynamicDimension, OrgUnitDimension, DIMENSION_ID_PERIOD, DIMENSION_ID_ORGUNIT } from '@dhis2/analytics';\nimport { acAddItemFilter, acRemoveItemFilter } from '../../actions/itemFilters';\nimport { sGetItemFiltersRoot } from '../../reducers/itemFilters';\n\nconst FilterDialog = ({\n  displayNameProperty,\n  dimension,\n  initiallySelectedItems,\n  addItemFilter,\n  removeItemFilter,\n  onClose\n}) => {\n  const [filters, setFilters] = useState(initiallySelectedItems);\n  const {\n    d2\n  } = useD2({});\n\n  const onSelectItems = ({\n    dimensionId,\n    items\n  }) => {\n    setFilters({\n      [dimensionId]: items\n    });\n  };\n\n  const onDeselectItems = ({\n    dimensionId,\n    itemIdsToRemove\n  }) => {\n    const oldList = filters[dimensionId] || [];\n    const newList = oldList.filter(item => !itemIdsToRemove.includes(item.id));\n    setFilters({ ...filters,\n      [dimensionId]: newList\n    });\n  };\n\n  const onReorderItems = ({\n    dimensionId,\n    itemIds\n  }) => {\n    const oldList = filters[dimensionId] || [];\n    const reorderedList = itemIds.map(id => oldList.find(item => item.id === id));\n    setFilters({ ...filters,\n      [dimensionId]: reorderedList\n    });\n  };\n\n  const saveFilter = () => {\n    const id = dimension.id;\n    const filterItems = filters[id];\n\n    if (filterItems && filterItems.length) {\n      addItemFilter({\n        id,\n        value: [...filterItems]\n      });\n    } else {\n      removeItemFilter(id);\n    }\n\n    onClose(id);\n  };\n\n  const renderDialogContent = () => {\n    const commonProps = {\n      d2,\n      onSelect: onSelectItems,\n      onDeselect: onDeselectItems,\n      onReorder: onReorderItems\n    };\n    const selectedItems = filters[dimension.id] || [];\n\n    switch (dimension.id) {\n      case DIMENSION_ID_PERIOD:\n        {\n          return <PeriodDimension selectedPeriods={selectedItems} onSelect={commonProps.onSelect} />;\n        }\n\n      case DIMENSION_ID_ORGUNIT:\n        return <OrgUnitDimension displayNameProperty={displayNameProperty} ouItems={selectedItems} {...commonProps} />;\n\n      default:\n        return <DynamicDimension selectedItems={selectedItems} dimensionId={dimension.id} onSelect={commonProps.onSelect} />;\n    }\n  };\n\n  return <>\n            {dimension.id && <Modal dataTest={`${dimension.id}-dimension-modal`} onClose={onClose} position=\"top\" large>\n                    <ModalTitle>{dimension.name}</ModalTitle>\n                    <ModalContent>{renderDialogContent()}</ModalContent>\n                    <ModalActions>\n                        <ButtonStrip>\n                            <Button secondary onClick={onClose}>\n                                {i18n.t('Cancel')}\n                            </Button>\n                            <Button primary onClick={saveFilter}>\n                                {i18n.t('Confirm')}\n                            </Button>\n                        </ButtonStrip>\n                    </ModalActions>\n                </Modal>}\n        </>;\n};\n\nFilterDialog.propTypes = {\n  addItemFilter: PropTypes.func,\n  dimension: PropTypes.object,\n  displayNameProperty: PropTypes.string,\n  initiallySelectedItems: PropTypes.object,\n  removeItemFilter: PropTypes.func,\n  onClose: PropTypes.func\n};\n\nconst mapStateToProps = state => ({\n  initiallySelectedItems: sGetItemFiltersRoot(state)\n});\n\nexport default connect(mapStateToProps, {\n  addItemFilter: acAddItemFilter,\n  removeItemFilter: acRemoveItemFilter\n})(FilterDialog);","export const SET_SETTINGS = 'SET_SETTINGS';\nexport const ADD_SETTINGS = 'ADD_SETTINGS';\nexport const DEFAULT_SETTINGS = {\n  keyDateFormat: 'yyyy-MM-dd',\n  keyAnalysisRelativePeriod: 'LAST_12_MONTHS',\n  keyAnalysisDigitGroupSeparator: 'SPACE',\n  displayNameProperty: 'displayName',\n  uiLocale: 'en',\n  rootOrganisationUnit: {},\n  keyGatherAnalyticalObjectStatisticsInDashboardViews: false\n};\nexport default ((state = DEFAULT_SETTINGS, action) => {\n  switch (action.type) {\n    case SET_SETTINGS:\n      {\n        return Object.assign({}, action.value);\n      }\n\n    case ADD_SETTINGS:\n      {\n        return { ...state,\n          ...action.value\n        };\n      }\n\n    default:\n      return state;\n  }\n}); // Selectors\n\nexport const sGetSettings = state => state.settings;\nexport const sGetSettingsDisplayNameProperty = state => sGetSettings(state).displayNameProperty;\nexport const sGetRootOrgUnit = state => sGetSettings(state).rootOrganisationUnit;\nexport const sGetRelativePeriod = state => sGetSettings(state).keyAnalysisRelativePeriod;\nexport const sGetUiLocale = state => sGetSettings(state).uiLocale;\nexport const sGatherAnalyticalObjectStatisticsInDashboardViews = state => sGetSettings(state).keyGatherAnalyticalObjectStatisticsInDashboardViews;","export const SET_ACTIVE_MODAL_DIMENSION = 'SET_ACTIVE_MODAL_DIMENSION';\nexport const CLEAR_ACTIVE_MODAL_DIMENSION = 'CLEAR_ACTIVE_MODAL_DIMENSION';\nexport const DEFAULT_STATE_ACTIVE_MODAL_DIMENSION = {};\nexport default ((state = DEFAULT_STATE_ACTIVE_MODAL_DIMENSION, action) => {\n  switch (action.type) {\n    case SET_ACTIVE_MODAL_DIMENSION:\n      {\n        return action.value;\n      }\n\n    case CLEAR_ACTIVE_MODAL_DIMENSION:\n      {\n        return DEFAULT_STATE_ACTIVE_MODAL_DIMENSION;\n      }\n\n    default:\n      return state;\n  }\n});\nexport const sGetActiveModalDimension = state => state.activeModalDimension;","import { SET_ACTIVE_MODAL_DIMENSION, CLEAR_ACTIVE_MODAL_DIMENSION } from '../reducers/activeModalDimension';\nexport const acSetActiveModalDimension = value => ({\n  type: SET_ACTIVE_MODAL_DIMENSION,\n  value\n});\nexport const acClearActiveModalDimension = () => ({\n  type: CLEAR_ACTIVE_MODAL_DIMENSION\n});","import React, { useState, useRef } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport ArrowDropDownIcon from '@material-ui/icons/ArrowDropDown';\nimport isEmpty from 'lodash/isEmpty';\nimport i18n from '@dhis2/d2-i18n';\nimport { DimensionsPanel } from '@dhis2/analytics';\nimport { Button, Popover } from '@dhis2/ui';\nimport FilterDialog from './FilterDialog';\nimport { sGetSettingsDisplayNameProperty } from '../../reducers/settings';\nimport { sGetActiveModalDimension } from '../../reducers/activeModalDimension';\nimport { sGetDimensions } from '../../reducers/dimensions';\nimport { sGetItemFiltersRoot } from '../../reducers/itemFilters';\nimport { acClearActiveModalDimension, acSetActiveModalDimension } from '../../actions/activeModalDimension';\nimport classes from './styles/FilterSelector.module.css';\n\nconst FilterSelector = props => {\n  const [showPopover, setShowPopover] = useState(false);\n  const ref = useRef(null);\n\n  const onCloseDialog = () => {\n    setShowPopover(false);\n    props.clearActiveModalDimension();\n  };\n\n  const selectDimension = id => {\n    props.setActiveModalDimension(props.dimensions.find(dimension => dimension.id === id));\n  };\n\n  return <>\n            <span className={classes.buttonContainer} ref={ref}>\n                <Button onClick={() => setShowPopover(true)}>\n                    {i18n.t('Add filter')}\n                    <ArrowDropDownIcon />\n                </Button>\n            </span>\n            {showPopover && <Popover onClickOutside={onCloseDialog} reference={ref} arrow={true} placement=\"bottom-start\" dataTest=\"dashboard-filter-popover\">\n                    <DimensionsPanel style={{\n        width: '320px'\n      }} dimensions={props.dimensions} onDimensionClick={selectDimension} selectedIds={Object.keys(props.initiallySelectedItems)} />\n                </Popover>}\n            {!isEmpty(props.dimension) ? <FilterDialog displayNameProperty={props.displayNameProperty} dimension={props.dimension} onClose={onCloseDialog} /> : null}\n        </>;\n};\n\nconst mapStateToProps = state => ({\n  displayNameProperty: sGetSettingsDisplayNameProperty(state),\n  dimension: sGetActiveModalDimension(state),\n  dimensions: sGetDimensions(state),\n  initiallySelectedItems: sGetItemFiltersRoot(state)\n});\n\nFilterSelector.propTypes = {\n  clearActiveModalDimension: PropTypes.func,\n  dimension: PropTypes.object,\n  dimensions: PropTypes.array,\n  displayNameProperty: PropTypes.string,\n  initiallySelectedItems: PropTypes.object,\n  setActiveModalDimension: PropTypes.func\n};\nexport default connect(mapStateToProps, {\n  clearActiveModalDimension: acClearActiveModalDimension,\n  setActiveModalDimension: acSetActiveModalDimension\n})(FilterSelector);","import React, { useState, createRef } from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport cx from 'classnames';\nimport { Link, Redirect } from 'react-router-dom';\nimport i18n from '@dhis2/d2-i18n';\nimport SharingDialog from '@dhis2/d2-ui-sharing-dialog';\nimport { useDataEngine, useAlert } from '@dhis2/app-runtime';\nimport Star from '@material-ui/icons/Star';\nimport StarBorder from '@material-ui/icons/StarBorder';\nimport { Button, FlyoutMenu, Popover, MenuItem, colors } from '@dhis2/ui';\nimport { useD2 } from '@dhis2/app-runtime-adapter-d2';\nimport { useWindowDimensions } from '../WindowDimensionsProvider';\nimport { ThreeDots } from '../Item/VisualizationItem/assets/icons';\nimport { orObject } from '../../modules/util';\nimport { apiStarDashboard } from '../../api/starDashboard';\nimport { apiPostShowDescription } from '../../api/description';\nimport { acSetDashboardStarred } from '../../actions/dashboards';\nimport { acSetSelectedShowDescription } from '../../actions/selected';\nimport FilterSelector from '../ItemFilter/FilterSelector';\nimport { sGetSelectedId, sGetSelectedShowDescription } from '../../reducers/selected';\nimport { sGetDashboardById, sGetDashboardItems, EMPTY_DASHBOARD } from '../../reducers/dashboards';\nimport { isSmallScreen } from '../../modules/smallScreen';\nimport classes from './styles/ViewTitleBar.module.css';\n\nconst ViewTitleBar = ({\n  id,\n  name,\n  description,\n  access,\n  showDescription,\n  starred,\n  setDashboardStarred,\n  updateShowDescription\n}) => {\n  const [moreOptionsIsOpen, setMoreOptionsIsOpen] = useState(false);\n  const [sharingDialogIsOpen, setSharingDialogIsOpen] = useState(false);\n  const [redirectUrl, setRedirectUrl] = useState(null);\n  const {\n    width\n  } = useWindowDimensions();\n  const {\n    d2\n  } = useD2({});\n  const dataEngine = useDataEngine();\n  const warningAlert = useAlert(({\n    msg\n  }) => msg, {\n    warning: true\n  });\n\n  const toggleSharingDialog = () => setSharingDialogIsOpen(!sharingDialogIsOpen);\n\n  const toggleMoreOptions = () => setMoreOptionsIsOpen(!moreOptionsIsOpen);\n\n  const printLayout = () => setRedirectUrl(`${id}/printlayout`);\n\n  const printOipp = () => setRedirectUrl(`${id}/printoipp`);\n\n  const StarIcon = starred ? Star : StarBorder;\n\n  if (redirectUrl) {\n    return <Redirect to={redirectUrl} />;\n  }\n\n  const showHideDescriptionLabel = showDescription ? i18n.t('Hide description') : i18n.t('Show description');\n\n  const onToggleShowDescription = () => apiPostShowDescription(!showDescription).then(() => {\n    updateShowDescription(!showDescription);\n    toggleMoreOptions();\n  }).catch(() => {\n    const msg = showDescription ? i18n.t('Failed to hide description') : i18n.t('Failed to show description');\n    warningAlert.show({\n      msg\n    });\n  });\n\n  const toggleStarredDashboardLabel = starred ? i18n.t('Unstar dashboard') : i18n.t('Star dashboard');\n\n  const onToggleStarredDashboard = () => apiStarDashboard(dataEngine, id, !starred).then(() => {\n    setDashboardStarred(id, !starred);\n\n    if (moreOptionsIsOpen) {\n      toggleMoreOptions();\n    }\n  }).catch(() => {\n    const msg = starred ? i18n.t('Failed to unstar the dashboard') : i18n.t('Failed to star the dashboard');\n    warningAlert.show({\n      msg\n    });\n  });\n\n  const buttonRef = createRef();\n  const userAccess = orObject(access);\n  const descriptionClasses = cx(classes.descContainer, description ? classes.desc : classes.noDesc);\n  return <>\n            <div className={classes.container}>\n                <div className={classes.titleBar}>\n                    <span className={classes.title} data-test=\"view-dashboard-title\">\n                        {name}\n                    </span>\n                    <div className={classes.actions}>\n                        <div className={classes.star} onClick={onToggleStarredDashboard} data-test=\"button-star-dashboard\">\n                            <StarIcon style={{\n              fill: colors.grey600\n            }} data-test={starred ? 'dashboard-starred' : 'dashboard-unstarred'} />\n                        </div>\n                        <div className={classes.strip}>\n                            {userAccess.update ? <Link className={classes.editLink} to={`/${id}/edit`} data-test=\"link-edit-dashboard\">\n                                    <Button>{i18n.t('Edit')}</Button>\n                                </Link> : null}\n                            {userAccess.manage ? <Button className={classes.shareButton} onClick={toggleSharingDialog}>\n                                    {i18n.t('Share')}\n                                </Button> : null}\n                            <FilterSelector />\n                            <span ref={buttonRef}>\n                                <Button small={isSmallScreen(width)} onClick={toggleMoreOptions}>\n                                    <ThreeDots />\n                                    <span className={classes.moreButton}>\n                                        {i18n.t('More')}\n                                    </span>\n                                </Button>\n                            </span>\n                        </div>\n                        {moreOptionsIsOpen && <Popover reference={buttonRef} placement=\"bottom-start\" onClickOutside={toggleMoreOptions}>\n                                <FlyoutMenu>\n                                    <MenuItem dense label={toggleStarredDashboardLabel} onClick={onToggleStarredDashboard} />\n                                    <MenuItem dense label={showHideDescriptionLabel} onClick={onToggleShowDescription} />\n                                    <MenuItem dense label={i18n.t('Print')} dataTest=\"print-menu-item\">\n                                        <MenuItem dense label={i18n.t('Dashboard layout')} onClick={printLayout} dataTest=\"print-layout-menu-item\" />\n                                        <MenuItem dense label={i18n.t('One item per page')} onClick={printOipp} dataTest=\"print-oipp-menu-item\" />\n                                    </MenuItem>\n                                </FlyoutMenu>\n                            </Popover>}\n                    </div>\n                </div>\n                {showDescription && <div className={descriptionClasses} data-test=\"dashboard-description\">\n                        {description || i18n.t('No description')}\n                    </div>}\n            </div>\n            {id && <SharingDialog d2={d2} id={id} type=\"dashboard\" open={sharingDialogIsOpen} onRequestClose={toggleSharingDialog} />}\n        </>;\n};\n\nViewTitleBar.propTypes = {\n  access: PropTypes.object,\n  description: PropTypes.string,\n  id: PropTypes.string,\n  name: PropTypes.string,\n  setDashboardStarred: PropTypes.func,\n  showDescription: PropTypes.bool,\n  starred: PropTypes.bool,\n  updateShowDescription: PropTypes.func\n};\nViewTitleBar.defaultProps = {\n  name: '',\n  description: '',\n  starred: false,\n  showDescription: false\n};\n\nconst mapStateToProps = state => {\n  const id = sGetSelectedId(state);\n  const dashboard = sGetDashboardById(state, id) || EMPTY_DASHBOARD;\n  return {\n    id,\n    name: dashboard.displayName,\n    description: dashboard.displayDescription,\n    dashboardItems: sGetDashboardItems(state),\n    showDescription: sGetSelectedShowDescription(state),\n    starred: dashboard.starred,\n    access: dashboard.access\n  };\n};\n\nexport default connect(mapStateToProps, {\n  setDashboardStarred: acSetDashboardStarred,\n  updateShowDescription: acSetSelectedShowDescription\n})(ViewTitleBar);","export const getStarDashboardMutation = id => ({\n  type: 'create',\n  resource: `dashboards/${id}/favorite`\n});\nexport const getUnstarDashboardMutation = id => ({\n  type: 'delete',\n  resource: `dashboards/${id}/favorite`\n});\nexport const apiStarDashboard = (dataEngine, id, isStarred) => {\n  const mutation = isStarred ? getStarDashboardMutation(id) : getUnstarDashboardMutation(id);\n  return dataEngine.mutate(mutation);\n};","import React, { useEffect, useRef } from 'react';\nimport PropTypes from 'prop-types';\nimport { useD2 } from '@dhis2/app-runtime-adapter-d2';\nimport { useConfig } from '@dhis2/app-runtime';\nimport { load, unmount } from './plugin';\nimport getGridItemDomId from '../../../../modules/getGridItemDomId';\n\nconst DefaultPlugin = ({\n  item,\n  activeType,\n  visualization,\n  options,\n  style\n}) => {\n  const {\n    d2\n  } = useD2({});\n  const {\n    baseUrl\n  } = useConfig();\n  const credentials = {\n    baseUrl,\n    auth: d2.Api.getApi().defaultHeaders.Authorization\n  };\n  const prevItem = useRef();\n  const prevActiveType = useRef();\n  useEffect(() => {\n    load(item, visualization, {\n      credentials,\n      activeType,\n      options\n    });\n    prevItem.current = item;\n    prevActiveType.current = activeType;\n    return () => unmount(item, activeType);\n  }, []);\n  useEffect(() => {\n    if (shouldPluginReload()) {\n      unmount(item, prevActiveType.current);\n      load(item, visualization, {\n        credentials,\n        activeType\n      });\n    }\n\n    prevItem.current = item;\n    prevActiveType.current = activeType;\n  }, [item, visualization, activeType]);\n  /**\n   * Prevent unnecessary re-rendering\n   * TODO: fix this hack\n   */\n\n  const shouldPluginReload = () => {\n    const reloadAllowed = prevItem.current === item;\n    const visChanged = prevActiveType.current !== activeType;\n    return reloadAllowed && visChanged;\n  };\n\n  return <div id={getGridItemDomId(item.id)} style={style} />;\n};\n\nDefaultPlugin.propTypes = {\n  activeType: PropTypes.string,\n  item: PropTypes.object,\n  options: PropTypes.object,\n  style: PropTypes.object,\n  visualization: PropTypes.object\n};\nDefaultPlugin.defaultProps = {\n  style: {},\n  item: {},\n  options: {},\n  visualization: {}\n};\nexport default DefaultPlugin;","import React from 'react';\nimport PropTypes from 'prop-types';\nimport classes from './styles/NoVisualizationMessage.module.css';\n\nconst NoVisualizationMessage = ({\n  message\n}) => {\n  return <div className={classes.message}>{message}</div>;\n};\n\nNoVisualizationMessage.propTypes = {\n  message: PropTypes.string\n};\nexport default NoVisualizationMessage;","import React from 'react';\nimport PropTypes from 'prop-types';\nimport i18n from '@dhis2/d2-i18n';\nimport DefaultPlugin from './DefaultPlugin';\nimport { MAP } from '../../../../modules/itemTypes';\nimport { pluginIsAvailable } from './plugin';\nimport NoVisualizationMessage from './NoVisualizationMessage';\n\nconst MapPlugin = ({\n  applyFilters,\n  ...props\n}) => {\n  if (props.item.type === MAP) {\n    // apply filters only to thematic and event layers\n    // for maps AO\n    const mapViews = props.visualization.mapViews.map(mapView => {\n      if (mapView.layer.includes('thematic') || mapView.layer.includes('event')) {\n        return applyFilters(mapView, props.itemFilters);\n      }\n\n      return mapView;\n    });\n    props.visualization = { ...props.visualization,\n      mapViews\n    };\n  } else {\n    // this is the case of a non map AO passed to the maps plugin\n    // due to a visualization type switch in dashboard item\n    // maps plugin takes care of converting the AO to a suitable format\n    props.visualization = applyFilters(props.visualization, props.itemFilters);\n  }\n\n  return pluginIsAvailable(props.activeType || props.item.type) ? <DefaultPlugin options={{\n    hideTitle: true\n  }} {...props} /> : <NoVisualizationMessage message={i18n.t('Unable to load the plugin for this item')} />;\n};\n\nMapPlugin.propTypes = {\n  activeType: PropTypes.string,\n  applyFilters: PropTypes.func,\n  item: PropTypes.object,\n  itemFilters: PropTypes.object,\n  visualization: PropTypes.object\n};\nexport default MapPlugin;","import React from 'react';\nimport { CircularLoader } from '@dhis2/ui';\nimport classes from './styles/LoadingMask.module.css';\n\nconst LoadingMask = () => {\n  return <div className={classes.center}>\n            <CircularLoader />\n        </div>;\n};\n\nexport default LoadingMask;","const getFilteredVisualization = (visualization, filters) => {\n  if (!Object.keys(filters).length) {\n    return visualization;\n  } // deep clone objects in filters to avoid changing the visualization in the Redux store\n\n\n  const visRows = visualization.rows.map(obj => ({ ...obj\n  }));\n  const visColumns = visualization.columns.map(obj => ({ ...obj\n  }));\n  const visFilters = visualization.filters.map(obj => ({ ...obj\n  }));\n  Object.keys(filters).forEach(dimensionId => {\n    if (filters[dimensionId]) {\n      let dimensionFound = false;\n      [visRows, visColumns, visFilters].forEach(dimensionObjects => dimensionObjects.filter(obj => obj.dimension === dimensionId).forEach(obj => {\n        dimensionFound = true;\n        obj.items = filters[dimensionId];\n      })); // add dimension to filters if not already present elsewhere\n\n      if (!dimensionFound) {\n        visFilters.push({\n          dimension: dimensionId,\n          items: filters[dimensionId]\n        });\n      }\n    }\n  });\n  return { ...visualization,\n    rows: visRows,\n    columns: visColumns,\n    filters: visFilters\n  };\n};\n\nexport default getFilteredVisualization;","import { VIS_TYPE_COLUMN, VIS_TYPE_PIVOT_TABLE, getAdaptedUiLayoutByType } from '@dhis2/analytics';\nimport { REPORT_TABLE, CHART, MAP } from '../../../../modules/itemTypes';\nexport const THEMATIC_LAYER = 'thematic';\n\nconst extractMapView = map => map.mapViews && map.mapViews.find(mv => mv.layer.includes(THEMATIC_LAYER));\n\nconst getWithoutId = object => ({ ...object,\n  id: undefined\n});\n\nconst getVisualizationConfig = (visualization, originalType, activeType) => {\n  if (originalType === MAP && originalType !== activeType) {\n    const extractedMapView = extractMapView(visualization);\n\n    if (extractedMapView === undefined) {\n      return null;\n    }\n\n    return getWithoutId({ ...visualization,\n      ...extractedMapView,\n      mapViews: undefined,\n      type: activeType === CHART ? VIS_TYPE_COLUMN : VIS_TYPE_PIVOT_TABLE\n    });\n  } else if (originalType === REPORT_TABLE && activeType === CHART) {\n    const layout = getAdaptedUiLayoutByType(visualization, VIS_TYPE_COLUMN);\n    return getWithoutId({ ...visualization,\n      ...layout,\n      type: VIS_TYPE_COLUMN\n    });\n  } else if (originalType === CHART && activeType === REPORT_TABLE) {\n    const layout = getAdaptedUiLayoutByType(visualization, VIS_TYPE_PIVOT_TABLE);\n    return getWithoutId({ ...visualization,\n      ...layout,\n      type: VIS_TYPE_PIVOT_TABLE\n    });\n  }\n\n  return getWithoutId(visualization);\n};\n\nexport default getVisualizationConfig;","// Note that this ignores discrepancies in 'this', so shouldn't be used with bound functions\n// This is useful instead of lodash/memoize when we only need to memoize a single value\n// Inspiration: https://github.com/alexreardon/memoize-one\nconst memoizeOne = fn => {\n  let lastArgs = undefined;\n  let lastValue = undefined;\n  return (...args) => {\n    if (lastArgs && args.length === lastArgs.length && args.every((arg, i) => arg === lastArgs[i])) {\n      return lastValue;\n    }\n\n    lastArgs = args;\n    lastValue = fn(...args);\n    return lastValue;\n  };\n};\n\nexport default memoizeOne;","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport VisualizationPlugin from '@dhis2/data-visualizer-plugin';\nimport i18n from '@dhis2/d2-i18n';\nimport { D2Shim } from '@dhis2/app-runtime-adapter-d2';\nimport DefaultPlugin from './DefaultPlugin';\nimport MapPlugin from './MapPlugin';\nimport LoadingMask from './LoadingMask';\nimport NoVisualizationMessage from './NoVisualizationMessage';\nimport getFilteredVisualization from './getFilteredVisualization';\nimport getVisualizationConfig from './getVisualizationConfig';\nimport { VISUALIZATION, MAP, CHART, REPORT_TABLE } from '../../../../modules/itemTypes';\nimport { getVisualizationId } from '../../../../modules/item';\nimport memoizeOne from '../../../../modules/memoizeOne';\nimport { sGetVisualization } from '../../../../reducers/visualizations';\nimport { pluginIsAvailable } from './plugin';\n\nclass Visualization extends React.Component {\n  state = {\n    pluginLoaded: false\n  };\n\n  constructor(props) {\n    super(props);\n    this.memoizedGetFilteredVisualization = memoizeOne(getFilteredVisualization);\n    this.memoizedGetVisualizationConfig = memoizeOne(getVisualizationConfig);\n  }\n\n  onLoadingComplete = () => {\n    this.setState({\n      pluginLoaded: true\n    });\n  };\n\n  render() {\n    const {\n      visualization,\n      activeType,\n      item,\n      itemFilters,\n      availableHeight,\n      availableWidth\n    } = this.props;\n\n    if (!visualization) {\n      return <NoVisualizationMessage message={i18n.t('No data to display')} />;\n    }\n\n    const style = {\n      height: availableHeight\n    };\n\n    if (availableWidth) {\n      style.width = availableWidth;\n    }\n\n    const pluginProps = {\n      item,\n      itemFilters,\n      activeType,\n      style,\n      visualization: this.memoizedGetVisualizationConfig(visualization, item.type, activeType)\n    };\n\n    switch (activeType) {\n      case VISUALIZATION:\n      case CHART:\n      case REPORT_TABLE:\n        {\n          return <>\n                        {!this.state.pluginLoaded && <div style={pluginProps.style}>\n                                <LoadingMask />\n                            </div>}\n                        <D2Shim d2Config={{}}>\n                            {({\n                d2\n              }) => <VisualizationPlugin d2={d2} visualization={this.memoizedGetFilteredVisualization(pluginProps.visualization, pluginProps.itemFilters)} onLoadingComplete={this.onLoadingComplete} forDashboard={true} style={pluginProps.style} />}\n                        </D2Shim>\n                    </>;\n        }\n\n      case MAP:\n        {\n          return <MapPlugin applyFilters={this.memoizedGetFilteredVisualization} {...pluginProps} />;\n        }\n\n      default:\n        {\n          pluginProps.visualization = this.memoizedGetFilteredVisualization(pluginProps.visualization, pluginProps.itemFilters);\n          return pluginIsAvailable(pluginProps.activeType || pluginProps.item.type) ? <DefaultPlugin {...pluginProps} /> : <NoVisualizationMessage message={i18n.t('Unable to load the plugin for this item')} />;\n        }\n    }\n  }\n\n}\n\nVisualization.propTypes = {\n  activeType: PropTypes.string,\n  availableHeight: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n  availableWidth: PropTypes.number,\n  item: PropTypes.object,\n  itemFilters: PropTypes.object,\n  visualization: PropTypes.object\n};\n\nconst mapStateToProps = (state, ownProps) => {\n  return {\n    visualization: sGetVisualization(state, getVisualizationId(ownProps.item))\n  };\n};\n\nexport default connect(mapStateToProps)(Visualization);","import React from 'react';\nimport PropTypes from 'prop-types';\nimport i18n from '@dhis2/d2-i18n';\nimport { Warning } from './assets/icons';\nimport classes from './styles/FatalErrorBoundary.module.css';\n\nclass FatalErrorBoundary extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      errorFound: false\n    };\n  }\n\n  componentDidCatch(error, info) {\n    this.setState({\n      errorFound: true\n    });\n    console.log('error: ', error);\n    console.log('info: ', info);\n  }\n\n  render() {\n    if (this.state.errorFound) {\n      return <p className={classes.container}>\n                    <span className={classes.icon}>\n                        <Warning />\n                    </span>\n                    <span className={classes.message}>\n                        {i18n.t('There was a problem loading this dashboard item')}\n                    </span>\n                </p>;\n    }\n\n    return this.props.children;\n  }\n\n}\n\nFatalErrorBoundary.propTypes = {\n  children: PropTypes.node\n};\nexport default FatalErrorBoundary;","import React from 'react';\nimport PropTypes from 'prop-types';\nimport classes from './styles/ItemHeader.module.css';\n\nconst ViewItemActions = ({\n  actionButtons\n}) => {\n  return actionButtons ? <div className={classes.itemActionsWrap}>{actionButtons}</div> : null;\n};\n\nViewItemActions.propTypes = {\n  actionButtons: PropTypes.node\n};\nexport default ViewItemActions;","import React from 'react';\nimport PropTypes from 'prop-types';\nimport i18n from '@dhis2/d2-i18n';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport { colors } from '@dhis2/ui';\nimport classes from './styles/DeleteItemButton.module.css';\n\nconst DeleteItemButton = ({\n  onClick\n}) => <button type=\"button\" className={classes.deleteItemButton} onClick={onClick} title={i18n.t(`Delete item`)}>\n        <DeleteIcon style={{\n    fill: colors.red500\n  }} />\n    </button>;\n\nDeleteItemButton.propTypes = {\n  onClick: PropTypes.func\n};\nexport default DeleteItemButton;","/** @module reducers/editDashboard */\nimport update from 'immutability-helper';\nimport isEmpty from 'lodash/isEmpty';\nimport { orArray, orObject } from '../modules/util';\nexport const RECEIVED_EDIT_DASHBOARD = 'RECEIVED_EDIT_DASHBOARD';\nexport const RECEIVED_NOT_EDITING = 'RECEIVED_NOT_EDITING';\nexport const START_NEW_DASHBOARD = 'START_NEW_DASHBOARD';\nexport const RECEIVED_TITLE = 'RECEIVED_TITLE';\nexport const RECEIVED_DESCRIPTION = 'RECEIVED_DESCRIPTION';\nexport const ADD_DASHBOARD_ITEM = 'ADD_DASHBOARD_ITEM';\nexport const REMOVE_DASHBOARD_ITEM = 'REMOVE_DASHBOARD_ITEM';\nexport const UPDATE_DASHBOARD_ITEM = 'UPDATE_DASHBOARD_ITEM';\nexport const RECEIVED_DASHBOARD_LAYOUT = 'RECEIVED_DASHBOARD_LAYOUT';\nexport const SET_PRINT_PREVIEW_VIEW = 'SET_PRINT_PREVIEW_VIEW';\nexport const CLEAR_PRINT_PREVIEW_VIEW = 'CLEAR_PRINT_PREVIEW_VIEW';\nexport const DEFAULT_STATE_EDIT_DASHBOARD = {};\nexport const NEW_DASHBOARD_STATE = {\n  id: '',\n  name: '',\n  access: {},\n  description: '',\n  dashboardItems: [],\n  printPreviewView: false\n};\nexport default ((state = DEFAULT_STATE_EDIT_DASHBOARD, action) => {\n  switch (action.type) {\n    case RECEIVED_EDIT_DASHBOARD:\n      {\n        const newState = {};\n        Object.keys(NEW_DASHBOARD_STATE).map(k => newState[k] = action.value[k]);\n        newState.printPreviewView = false;\n        return newState;\n      }\n\n    case RECEIVED_NOT_EDITING:\n      return DEFAULT_STATE_EDIT_DASHBOARD;\n\n    case SET_PRINT_PREVIEW_VIEW:\n      return Object.assign({}, state, {\n        printPreviewView: true\n      });\n\n    case CLEAR_PRINT_PREVIEW_VIEW:\n      return Object.assign({}, state, {\n        printPreviewView: false\n      });\n\n    case START_NEW_DASHBOARD:\n      return NEW_DASHBOARD_STATE;\n\n    case RECEIVED_TITLE:\n      {\n        return Object.assign({}, state, {\n          name: action.value\n        });\n      }\n\n    case RECEIVED_DESCRIPTION:\n      {\n        return Object.assign({}, state, {\n          description: action.value\n        });\n      }\n\n    case ADD_DASHBOARD_ITEM:\n      if (!action.value.position) {\n        return update(state, {\n          dashboardItems: {\n            $unshift: [action.value]\n          }\n        });\n      }\n\n      return update(state, {\n        dashboardItems: {\n          $splice: [[parseInt(action.value.position), 0, action.value]]\n        }\n      });\n\n    case REMOVE_DASHBOARD_ITEM:\n      {\n        const idToRemove = action.value;\n        const dashboardItemIndex = state.dashboardItems.findIndex(item => item.id === idToRemove);\n\n        if (dashboardItemIndex > -1) {\n          return update(state, {\n            dashboardItems: {\n              $splice: [[dashboardItemIndex, 1]]\n            }\n          });\n        }\n\n        return state;\n      }\n\n    case RECEIVED_DASHBOARD_LAYOUT:\n      {\n        const stateItems = orArray(state.dashboardItems);\n        let layoutHasChanged = false;\n        const newStateItems = action.value.map(({\n          x,\n          y,\n          w,\n          h,\n          i\n        }) => {\n          const stateItem = stateItems.find(si => si.id === i);\n\n          if (!(stateItem.x === x && stateItem.y === y && stateItem.w === w && stateItem.h === h)) {\n            layoutHasChanged = true;\n            return Object.assign({}, stateItem, {\n              w,\n              h,\n              x,\n              y\n            });\n          }\n\n          return stateItem;\n        });\n        return layoutHasChanged ? { ...state,\n          dashboardItems: newStateItems\n        } : state;\n      }\n\n    case UPDATE_DASHBOARD_ITEM:\n      {\n        const dashboardItem = action.value;\n        const dashboardItemIndex = state.dashboardItems.findIndex(item => item.id === dashboardItem.id);\n\n        if (dashboardItemIndex > -1) {\n          const newState = update(state, {\n            dashboardItems: {\n              $splice: [[dashboardItemIndex, 1, Object.assign({}, dashboardItem)]]\n            }\n          });\n          return newState;\n        }\n\n        return state;\n      }\n\n    default:\n      return state;\n  }\n}); // root selector\n\nexport const sGetEditDashboardRoot = state => state.editDashboard; // selectors\n\nexport const sGetIsEditing = state => !isEmpty(state.editDashboard);\nexport const sGetIsPrintPreviewView = state => sGetEditDashboardRoot(state).printPreviewView;\nexport const sGetIsNewDashboard = state => {\n  return !isEmpty(state.editDashboard) && sGetEditDashboardRoot(state).id === '';\n};\nexport const sGetEditDashboardName = state => sGetEditDashboardRoot(state).name;\nexport const sGetEditDashboardDescription = state => sGetEditDashboardRoot(state).description;\nexport const sGetEditDashboardItems = state => orObject(sGetEditDashboardRoot(state)).dashboardItems;","import { apiFetchDashboard } from './dashboards';\nexport const createDashboardMutation = {\n  resource: 'dashboards',\n  type: 'create',\n  data: ({\n    data\n  }) => data\n};\nexport const updateDashboardMutation = {\n  resource: 'dashboards',\n  type: 'update',\n  id: ({\n    id\n  }) => id,\n  data: ({\n    data\n  }) => data\n};\n\nconst generatePayload = (dashboard = {}, data) => {\n  return { ...dashboard,\n    name: data.name,\n    description: data.description,\n    dashboardItems: data.dashboardItems.map(item => ({ ...item,\n      width: item.w,\n      height: item.h\n    }))\n  };\n};\n\nexport const updateDashboard = async (dataEngine, data) => {\n  const dashboard = await apiFetchDashboard(dataEngine, data.id);\n  const {\n    response\n  } = await dataEngine.mutate(updateDashboardMutation, {\n    variables: {\n      id: data.id,\n      data: generatePayload(dashboard, data)\n    }\n  });\n  return response.uid;\n};\nexport const postDashboard = async (dataEngine, data) => {\n  const {\n    response\n  } = await dataEngine.mutate(createDashboardMutation, {\n    variables: {\n      data: generatePayload({}, data)\n    }\n  });\n  return response.uid;\n};","import { generateUid } from 'd2/uid';\nimport i18n from '@dhis2/d2-i18n';\nimport { RECEIVED_EDIT_DASHBOARD, START_NEW_DASHBOARD, RECEIVED_NOT_EDITING, RECEIVED_TITLE, RECEIVED_DESCRIPTION, RECEIVED_DASHBOARD_LAYOUT, ADD_DASHBOARD_ITEM, UPDATE_DASHBOARD_ITEM, REMOVE_DASHBOARD_ITEM, SET_PRINT_PREVIEW_VIEW, CLEAR_PRINT_PREVIEW_VIEW, sGetEditDashboardRoot } from '../reducers/editDashboard';\nimport { tFetchDashboards } from './dashboards';\nimport { updateDashboard, postDashboard } from '../api/editDashboard';\nimport { NEW_ITEM_SHAPE, getGridItemProperties, getPageBreakItemShape, getPrintTitlePageItemShape } from '../modules/gridUtil';\nimport { itemTypeMap, PAGEBREAK, PRINT_TITLE_PAGE } from '../modules/itemTypes';\nimport { convertUiItemsToBackend } from '../modules/uiBackendItemConverter'; // actions\n\nexport const acSetEditDashboard = (dashboard, items) => {\n  const val = { ...dashboard,\n    dashboardItems: items\n  };\n  return {\n    type: RECEIVED_EDIT_DASHBOARD,\n    value: val\n  };\n};\nexport const acSetEditNewDashboard = () => ({\n  type: START_NEW_DASHBOARD\n});\nexport const acClearEditDashboard = () => ({\n  type: RECEIVED_NOT_EDITING\n});\nexport const acSetPrintPreviewView = () => ({\n  type: SET_PRINT_PREVIEW_VIEW\n});\nexport const acClearPrintPreviewView = () => ({\n  type: CLEAR_PRINT_PREVIEW_VIEW\n});\nexport const acSetDashboardTitle = value => ({\n  type: RECEIVED_TITLE,\n  value\n});\nexport const acSetDashboardDescription = value => ({\n  type: RECEIVED_DESCRIPTION,\n  value\n});\nexport const acUpdateDashboardLayout = value => ({\n  type: RECEIVED_DASHBOARD_LAYOUT,\n  value\n});\nexport const acAddDashboardItem = item => {\n  const type = item.type;\n  delete item.type;\n  const itemPropName = itemTypeMap[type].propName;\n  const id = generateUid();\n  const gridItemProperties = getGridItemProperties(id);\n  let shape;\n\n  if (type === PAGEBREAK) {\n    const yPos = item.yPos || 0;\n    shape = getPageBreakItemShape(yPos, item.isStatic);\n  } else if (type === PRINT_TITLE_PAGE) {\n    shape = getPrintTitlePageItemShape();\n  } else {\n    shape = NEW_ITEM_SHAPE;\n  }\n\n  return {\n    type: ADD_DASHBOARD_ITEM,\n    value: {\n      id,\n      type,\n      position: item.position || null,\n      [itemPropName]: item.content,\n      ...NEW_ITEM_SHAPE,\n      ...gridItemProperties,\n      ...shape\n    }\n  };\n};\nexport const acUpdateDashboardItem = item => ({\n  type: UPDATE_DASHBOARD_ITEM,\n  value: item\n});\nexport const acRemoveDashboardItem = value => ({\n  type: REMOVE_DASHBOARD_ITEM,\n  value\n}); // thunks\n\nexport const tSaveDashboard = () => async (dispatch, getState, dataEngine) => {\n  const dashboard = sGetEditDashboardRoot(getState());\n  const dashboardToSave = { ...dashboard,\n    dashboardItems: convertUiItemsToBackend(dashboard.dashboardItems),\n    name: dashboard.name || i18n.t('Untitled dashboard')\n  };\n  const dashboardId = dashboardToSave.id ? await updateDashboard(dataEngine, dashboardToSave) : await postDashboard(dataEngine, dashboardToSave); // update the dashboard list\n\n  await dispatch(tFetchDashboards());\n  return Promise.resolve(dashboardId);\n};","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport DeleteItemButton from './DeleteItemButton';\nimport { acRemoveDashboardItem } from '../../../actions/editDashboard';\nimport classes from './styles/ItemHeader.module.css';\n\nconst EditItemActions = ({\n  itemId,\n  acRemoveDashboardItem\n}) => {\n  const handleDeleteItem = () => acRemoveDashboardItem(itemId);\n\n  return <div className={classes.itemActionsWrap}>\n            <DeleteItemButton onClick={handleDeleteItem} />\n        </div>;\n};\n\nEditItemActions.propTypes = {\n  acRemoveDashboardItem: PropTypes.func,\n  itemId: PropTypes.string\n};\nconst mapDispatchToProps = {\n  acRemoveDashboardItem\n};\nexport default connect(null, mapDispatchToProps)(EditItemActions);","import React from 'react';\nimport { colors } from '@dhis2/ui';\n\nconst WarningIcon = () => <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24\" viewBox=\"0 0 24 24\" width=\"24\" fill={colors.grey600}>\n        <path d=\"M0 0h24v24H0z\" fill=\"none\" />\n        <path d=\"M12 2C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2zm1 15h-2v-6h2v6zm0-8h-2V7h2v2z\" />\n    </svg>;\n\nexport default WarningIcon;","import React from 'react';\nimport { Tooltip } from '@dhis2/ui';\nimport i18n from '@dhis2/d2-i18n';\nimport InfoIcon from '../../../icons/Info';\nimport classes from './styles/PrintItemInfo.module.css';\n\nconst PrintWarning = () => <div className={classes.warning}>\n        <Tooltip content={i18n.t('This item has been shortened to fit on one page')} placement=\"bottom\">\n            <InfoIcon />\n        </Tooltip>\n    </div>;\n\nexport default PrintWarning;","export const EDIT = 'edit';\nexport const NEW = 'new';\nexport const VIEW = 'view';\nexport const PRINT = 'print';\nexport const PRINT_LAYOUT = 'print-layout';\nexport const isEditMode = mode => [EDIT, NEW].includes(mode);\nexport const isPrintMode = mode => [PRINT, PRINT_LAYOUT].includes(mode);\nexport const isViewMode = mode => mode === VIEW;","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport ViewItemActions from './ViewItemActions';\nimport EditItemActions from './EditItemActions';\nimport PrintItemInfo from './PrintItemInfo';\nimport { VIEW, EDIT, PRINT_LAYOUT } from '../../Dashboard/dashboardModes';\nimport classes from './styles/ItemHeader.module.css';\n\nconst getItemActionsMap = isShortened => {\n  return {\n    [VIEW]: ViewItemActions,\n    [EDIT]: EditItemActions,\n    [PRINT_LAYOUT]: isShortened ? PrintItemInfo : null\n  };\n}; // This is the margin-top + margin-bottom defined in the css file\n\n\nexport const HEADER_MARGIN_HEIGHT = 12;\nconst ItemHeader = React.forwardRef(({\n  dashboardMode,\n  title,\n  isShortened,\n  ...rest\n}, ref) => {\n  const Actions = getItemActionsMap(isShortened)[dashboardMode];\n  return <div className={classes.itemHeaderWrap} ref={ref}>\n                <p className={classes.itemTitle}>{title}</p>\n                {Actions ? <Actions {...rest} /> : null}\n            </div>;\n});\nItemHeader.displayName = 'ItemHeader';\nItemHeader.propTypes = {\n  dashboardMode: PropTypes.string,\n  isShortened: PropTypes.bool,\n  title: PropTypes.string\n};\nexport default connect(null, null, null, {\n  forwardRef: true\n})(ItemHeader);","import React, { useState, createRef } from 'react';\nimport PropTypes from 'prop-types';\nimport { useConfig } from '@dhis2/app-runtime';\nimport { isSingleValue, isYearOverYear, VIS_TYPE_GAUGE, VIS_TYPE_PIE } from '@dhis2/analytics';\nimport { Button, Menu, Popover, MenuItem, Divider, colors } from '@dhis2/ui';\nimport i18n from '@dhis2/d2-i18n';\nimport TableIcon from '@material-ui/icons/ViewList';\nimport ChartIcon from '@material-ui/icons/InsertChart';\nimport MapIcon from '@material-ui/icons/Public';\nimport LaunchIcon from '@material-ui/icons/Launch';\nimport { ThreeDots, SpeechBubble, Fullscreen, ExitFullscreen } from './assets/icons';\nimport { getLink } from './Visualization/plugin';\nimport { CHART, MAP, REPORT_TABLE, EVENT_CHART, EVENT_REPORT, isTrackerDomainType, hasMapView, getAppName } from '../../../modules/itemTypes';\nconst iconFill = {\n  fill: colors.grey600\n};\n\nconst ItemHeaderButtons = props => {\n  const [menuIsOpen, setMenuIsOpen] = useState(null);\n  const {\n    baseUrl\n  } = useConfig();\n  const {\n    item,\n    visualization,\n    onSelectActiveType,\n    activeType\n  } = props;\n  const isTrackerType = isTrackerDomainType(item.type);\n\n  const onViewTable = () => {\n    closeMenu();\n    onSelectActiveType(isTrackerType ? EVENT_REPORT : REPORT_TABLE);\n  };\n\n  const onViewChart = () => {\n    closeMenu();\n    onSelectActiveType(isTrackerType ? EVENT_CHART : CHART);\n  };\n\n  const onViewMap = () => {\n    closeMenu();\n    onSelectActiveType(MAP);\n  };\n\n  const itemHasMapView = () => hasMapView(item.type);\n\n  const handleInterpretationClick = () => {\n    props.onToggleFooter();\n\n    if (menuIsOpen) {\n      closeMenu();\n    }\n  };\n\n  const handleToggleFullscreenClick = () => {\n    props.onToggleFullscreen();\n    closeMenu();\n  };\n\n  const openMenu = () => setMenuIsOpen(true);\n\n  const closeMenu = () => setMenuIsOpen(false);\n\n  const type = visualization.type || item.type;\n  const canViewAs = !isSingleValue(type) && !isYearOverYear(type) && type !== VIS_TYPE_GAUGE && type !== VIS_TYPE_PIE;\n  const interpretationMenuLabel = props.activeFooter ? i18n.t(`Hide interpretations and details`) : i18n.t(`Show interpretations and details`);\n\n  const ViewAsMenuItems = () => <>\n            {activeType !== CHART && activeType !== EVENT_CHART && <MenuItem dense label={i18n.t('View as Chart')} onClick={onViewChart} icon={<ChartIcon style={iconFill} />} />}\n            {activeType !== REPORT_TABLE && activeType !== EVENT_REPORT && <MenuItem dense label={i18n.t('View as Table')} onClick={onViewTable} icon={<TableIcon style={iconFill} />} />}\n            {itemHasMapView() && activeType !== MAP && <MenuItem dense label={i18n.t('View as Map')} onClick={onViewMap} icon={<MapIcon style={iconFill} />} />}\n        </>;\n\n  const buttonRef = createRef();\n  return props.isFullscreen ? <Button small secondary onClick={props.onToggleFullscreen}>\n            <ExitFullscreen />\n        </Button> : <>\n            <div ref={buttonRef}>\n                <Button small secondary onClick={openMenu} dataTest=\"dashboarditem-menu-button\">\n                    <ThreeDots />\n                </Button>\n            </div>\n            {menuIsOpen && <Popover reference={buttonRef} placement=\"auto-start\" arrow={false} onClickOutside={closeMenu}>\n                    <Menu>\n                        {canViewAs && <>\n                                <ViewAsMenuItems />\n                                <Divider />\n                            </>}\n                        <MenuItem dense icon={<LaunchIcon style={{\n          fill: '#6e7a8a'\n        }} />} label={i18n.t('Open in {{appName}} app', {\n          appName: getAppName(item.type)\n        })} href={getLink(item, baseUrl)} target=\"_blank\" />\n                        <MenuItem dense icon={<SpeechBubble />} label={interpretationMenuLabel} onClick={handleInterpretationClick} />\n                        {props.fullscreenSupported && <MenuItem dense icon={<Fullscreen />} label={i18n.t('View fullscreen')} onClick={handleToggleFullscreenClick} />}\n                    </Menu>\n                </Popover>}\n        </>;\n};\n\nItemHeaderButtons.propTypes = {\n  activeFooter: PropTypes.bool,\n  activeType: PropTypes.string,\n  fullscreenSupported: PropTypes.bool,\n  isFullscreen: PropTypes.bool,\n  item: PropTypes.object,\n  visualization: PropTypes.object,\n  onSelectActiveType: PropTypes.func,\n  onToggleFooter: PropTypes.func,\n  onToggleFullscreen: PropTypes.func\n};\nexport default ItemHeaderButtons;","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { getVisualizationId } from '../../../modules/item';\nimport InterpretationsComponent from '@dhis2/d2-ui-interpretations';\nimport { useD2 } from '@dhis2/app-runtime-adapter-d2';\nimport classes from './styles/ItemFooter.module.css';\n\nconst ItemFooter = props => {\n  const {\n    d2\n  } = useD2({});\n  return <div data-test=\"dashboarditem-footer\">\n            <hr className={classes.line} />\n            <div className={classes.scrollContainer}>\n                <InterpretationsComponent d2={d2} item={props.item} type={props.item.type.toLowerCase()} id={getVisualizationId(props.item)} appName=\"dashboard\" />\n            </div>\n        </div>;\n};\n\nItemFooter.propTypes = {\n  item: PropTypes.object.isRequired\n};\nexport default ItemFooter;","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport uniqueId from 'lodash/uniqueId';\nimport Visualization from './Visualization/Visualization';\nimport FatalErrorBoundary from './FatalErrorBoundary';\nimport ItemHeader, { HEADER_MARGIN_HEIGHT } from '../ItemHeader/ItemHeader';\nimport ItemHeaderButtons from './ItemHeaderButtons';\nimport ItemFooter from './ItemFooter';\nimport { WindowDimensionsCtx } from '../../WindowDimensionsProvider';\nimport { apiPostDataStatistics } from '../../../api/dataStatistics';\nimport { apiFetchVisualization } from '../../../api/metadata';\nimport { sGetVisualization } from '../../../reducers/visualizations';\nimport { sGetSelectedItemActiveType } from '../../../reducers/selected';\nimport { sGetIsEditing } from '../../../reducers/editDashboard';\nimport { sGetItemFiltersRoot, DEFAULT_STATE_ITEM_FILTERS } from '../../../reducers/itemFilters';\nimport { sGatherAnalyticalObjectStatisticsInDashboardViews } from '../../../reducers/settings';\nimport { acAddVisualization } from '../../../actions/visualizations';\nimport { acSetSelectedItemActiveType } from '../../../actions/selected';\nimport { pluginIsAvailable, resize as pluginResize } from './Visualization/plugin';\nimport { getDataStatisticsName } from '../../../modules/itemTypes';\nimport { getVisualizationId, getVisualizationName } from '../../../modules/item';\nimport memoizeOne from '../../../modules/memoizeOne';\nimport { isEditMode, isPrintMode, isViewMode } from '../../Dashboard/dashboardModes';\nimport { getItemHeightPx } from '../../../modules/gridUtil';\nimport getGridItemDomId from '../../../modules/getGridItemDomId'; // this is set in the .dashboard-item-content css\n\nconst ITEM_CONTENT_PADDING = 4;\nexport class Item extends Component {\n  state = {\n    showFooter: false,\n    configLoaded: false,\n    isFullscreen: false\n  };\n\n  constructor(props) {\n    super(props);\n    this.contentRef = React.createRef();\n    this.headerRef = React.createRef();\n    this.itemDomElSelector = `.reactgriditem-${this.props.item.id}`;\n    this.memoizedGetContentHeight = memoizeOne((calculatedHeight, measuredHeight, preferMeasured) => preferMeasured ? measuredHeight || calculatedHeight : calculatedHeight);\n  }\n\n  async componentDidMount() {\n    this.props.updateVisualization(await apiFetchVisualization(this.props.item));\n\n    try {\n      if (this.props.gatherDataStatistics && isViewMode(this.props.dashboardMode)) {\n        await apiPostDataStatistics(getDataStatisticsName(this.props.item.type), getVisualizationId(this.props.item));\n      }\n    } catch (e) {\n      console.log(e);\n    }\n\n    this.setState({\n      configLoaded: true\n    });\n    const el = document.querySelector(this.itemDomElSelector);\n\n    if (el?.requestFullscreen) {\n      el.onfullscreenchange = this.handleFullscreenChange;\n    } else if (el?.webkitRequestFullscreen) {\n      el.onwebkitfullscreenchange = this.handleFullscreenChange;\n    }\n  }\n\n  componentWillUnmount() {\n    const el = document.querySelector(this.itemDomElSelector);\n\n    if (el?.onfullscreenchange) {\n      el.removeEventListener('onfullscreenchange', this.handleFullscreenChange);\n    } else if (el?.onwebkitfullscreenchange) {\n      el.removeEventListener('onwebkitfullscreenchange', this.handleFullscreenChange);\n    }\n  }\n\n  componentDidUpdate(prevProps) {\n    if (prevProps.gridWidth !== this.props.gridWidth) {\n      const el = document.querySelector(`#${getGridItemDomId(this.props.item.id)}`);\n\n      if (typeof el?.setViewportSize === 'function') {\n        setTimeout(() => el.setViewportSize(el.clientWidth - 5, el.clientHeight - 5), 10);\n      } // call resize on Map item\n\n\n      pluginResize(this.props.item, this.state.isFullscreen);\n    }\n  }\n\n  isFullscreenSupported = () => {\n    const el = document.querySelector(this.itemDomElSelector);\n    return !!(el?.requestFullscreen || el?.webkitRequestFullscreen);\n  };\n  handleFullscreenChange = () => {\n    this.setState({\n      isFullscreen: !!document.fullscreenElement || !!document.webkitFullscreenElement\n    }, () => pluginResize(this.props.item, this.state.isFullscreen));\n  };\n  onToggleFullscreen = () => {\n    if (!this.state.isFullscreen) {\n      const el = document.querySelector(this.itemDomElSelector);\n\n      if (el?.requestFullscreen) {\n        el.requestFullscreen();\n      } else if (el?.webkitRequestFullscreen) {\n        el.webkitRequestFullscreen();\n      }\n    } else {\n      document.exitFullscreen ? document.exitFullscreen() : document.webkitExitFullscreen();\n    }\n  };\n  getUniqueKey = memoizeOne(() => uniqueId());\n  onToggleFooter = () => {\n    this.setState({\n      showFooter: !this.state.showFooter\n    }, this.props.onToggleItemExpanded(this.props.item.id));\n  };\n  setActiveType = type => {\n    type !== this.getActiveType() && this.props.setActiveType(this.props.item.id, type);\n  };\n  getActiveType = () => {\n    if (this.props.isEditing) {\n      return this.props.item.type;\n    }\n\n    return this.props.activeType || this.props.item.type;\n  };\n  getAvailableHeight = () => {\n    if (this.state.isFullscreen) {\n      return '95vh';\n    }\n\n    const {\n      width\n    } = this.context;\n    const calculatedHeight = getItemHeightPx(this.props.item, width) - this.headerRef.current.clientHeight - HEADER_MARGIN_HEIGHT - ITEM_CONTENT_PADDING;\n    return this.memoizedGetContentHeight(calculatedHeight, this.contentRef ? this.contentRef.offsetHeight : null, isEditMode(this.props.dashboardMode) || isPrintMode(this.props.dashboardMode));\n  };\n  getAvailableWidth = () => {\n    const rect = document.querySelector(this.itemDomElSelector)?.getBoundingClientRect();\n    return rect && rect.width - ITEM_CONTENT_PADDING * 2;\n  };\n\n  render() {\n    const {\n      item,\n      dashboardMode,\n      itemFilters\n    } = this.props;\n    const {\n      showFooter\n    } = this.state;\n    const activeType = this.getActiveType();\n    const actionButtons = pluginIsAvailable(activeType || item.type) ? <ItemHeaderButtons item={item} visualization={this.props.visualization} onSelectActiveType={this.setActiveType} onToggleFooter={this.onToggleFooter} onToggleFullscreen={this.onToggleFullscreen} activeType={activeType} activeFooter={showFooter} isFullscreen={this.state.isFullscreen} fullscreenSupported={this.isFullscreenSupported()} /> : null;\n    return <>\n                <ItemHeader title={getVisualizationName(item)} itemId={item.id} actionButtons={actionButtons} ref={this.headerRef} dashboardMode={dashboardMode} isShortened={item.shortened} />\n                <FatalErrorBoundary>\n                    <div key={this.getUniqueKey(itemFilters)} className=\"dashboard-item-content\" ref={ref => this.contentRef = ref}>\n                        {this.state.configLoaded && <Visualization item={item} activeType={activeType} itemFilters={itemFilters} availableHeight={this.getAvailableHeight()} availableWidth={this.getAvailableWidth()} />}\n                    </div>\n                </FatalErrorBoundary>\n                {isViewMode(dashboardMode) && showFooter ? <ItemFooter item={item} /> : null}\n            </>;\n  }\n\n}\nItem.contextType = WindowDimensionsCtx;\nItem.propTypes = {\n  activeType: PropTypes.string,\n  dashboardMode: PropTypes.string,\n  gatherDataStatistics: PropTypes.bool,\n  gridWidth: PropTypes.number,\n  isEditing: PropTypes.bool,\n  item: PropTypes.object,\n  itemFilters: PropTypes.object,\n  setActiveType: PropTypes.func,\n  updateVisualization: PropTypes.func,\n  visualization: PropTypes.object,\n  onToggleItemExpanded: PropTypes.func\n};\nItem.defaultProps = {\n  item: {},\n  onToggleItemExpanded: Function.prototype,\n  visualization: {}\n};\n\nconst mapStateToProps = (state, ownProps) => {\n  const itemFilters = !isEditMode(ownProps.dashboardMode) ? sGetItemFiltersRoot(state) : DEFAULT_STATE_ITEM_FILTERS;\n  return {\n    activeType: sGetSelectedItemActiveType(state, ownProps.item?.id),\n    isEditing: sGetIsEditing(state),\n    itemFilters,\n    visualization: sGetVisualization(state, getVisualizationId(ownProps.item)),\n    gatherDataStatistics: sGatherAnalyticalObjectStatisticsInDashboardViews(state)\n  };\n};\n\nconst mapDispatchToProps = {\n  setActiveType: acSetSelectedItemActiveType,\n  updateVisualization: acAddVisualization\n};\nexport default connect(mapStateToProps, mapDispatchToProps)(Item);","import React from 'react';\nimport { colors } from '@dhis2/ui';\nconst style = {\n  backgroundColor: colors.grey200,\n  border: 'none',\n  height: '1px',\n  margin: '0px 0px 5px 0px'\n};\n\nconst Line = () => <hr style={style} />;\n\nexport default Line;","import React, { useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport i18n from '@dhis2/d2-i18n';\nimport { colors } from '@dhis2/ui';\nimport { useConfig } from '@dhis2/app-runtime';\nimport { useD2 } from '@dhis2/app-runtime-adapter-d2';\nimport ItemHeader from '../ItemHeader/ItemHeader';\nimport Line from '../../../widgets/Line';\nimport { sGetMessagesRoot } from '../../../reducers/messages';\nimport { formatDate } from '../../../modules/util';\nimport { isViewMode } from '../../Dashboard/dashboardModes';\nimport './MessagesItem.css';\nconst PRIVATE = 'PRIVATE';\nconst messageTypes = {\n  [PRIVATE]: 'Private',\n  VALIDATION_RESULT: 'Validation',\n  TICKET: 'Ticket',\n  SYSTEM: 'System'\n};\nconst style = {\n  list: {\n    listStyleType: 'none',\n    paddingLeft: '0px'\n  },\n  seeAll: {\n    textAlign: 'center',\n    fontSize: '13px',\n    marginBottom: '5px'\n  },\n  sender: {\n    fontSize: '13px',\n    lineHeight: '15px',\n    margin: 0,\n    color: colors.grey800\n  },\n  snippet: {\n    color: colors.grey800,\n    fontSize: '13px',\n    lineHeight: '15px',\n    maxHeight: '30px',\n    overflow: 'hidden'\n  }\n};\n\nconst MessagesItem = ({\n  messages,\n  item,\n  dashboardMode\n}) => {\n  const [uiLocale, setUiLocale] = useState('');\n  const {\n    d2\n  } = useD2({});\n  const {\n    baseUrl\n  } = useConfig();\n  useEffect(() => {\n    const getUiLocale = async () => {\n      const uiLocale = await d2.currentUser.userSettings.get('keyUiLocale');\n      setUiLocale(uiLocale);\n    };\n\n    getUiLocale();\n  }, []);\n\n  const getMessageHref = msg => {\n    const msgIdentifier = msg ? `#/${msg.messageType}/${msg.id}` : '';\n    return `${baseUrl}/dhis-web-messaging/${msgIdentifier}`;\n  };\n\n  const getMessageSender = msg => {\n    const latestMsg = msg.messages.slice(-1)[0];\n    return latestMsg.sender ? latestMsg.sender.displayName : '';\n  };\n\n  const getMessageItems = () => {\n    const modeClass = isViewMode(dashboardMode) ? 'view' : null;\n    return messages.map(msg => {\n      const redirectToMsg = () => {\n        if (isViewMode(dashboardMode)) {\n          document.location.href = getMessageHref(msg);\n        }\n      };\n\n      const sender = msg.messageType === PRIVATE ? getMessageSender(msg) : messageTypes[msg.messageType];\n      const readClass = !msg.read ? 'unread' : null;\n      const latestMsg = msg.messages.slice(-1)[0];\n      const msgDate = latestMsg.lastUpdated;\n      return <li className={`message-item ${modeClass}`} key={msg.id} onClick={redirectToMsg}>\n                    <p className={`message-title ${readClass}`}>\n                        {msg.displayName} ({msg.messageCount})\n                    </p>\n                    <p style={style.sender}>\n                        {sender} - {formatDate(msgDate, uiLocale)}\n                    </p>\n                    <p style={style.snippet}>{latestMsg.text}</p>\n                </li>;\n    });\n  };\n\n  return <>\n            <ItemHeader title={i18n.t('Messages')} itemId={item.id} dashboardMode={dashboardMode} isShortened={item.shortened} />\n            <Line />\n            {messages.length > 0 && <div className=\"dashboard-item-content\">\n                    <ul style={style.list}>{getMessageItems()}</ul>\n                    <div style={style.seeAll}>\n                        <a href={getMessageHref()}>\n                            {i18n.t('See all messages')}\n                        </a>\n                    </div>\n                </div>}\n        </>;\n};\n\nMessagesItem.propTypes = {\n  dashboardMode: PropTypes.string,\n  item: PropTypes.object,\n  messages: PropTypes.array\n};\n\nconst mapStateToProps = state => {\n  return {\n    messages: Object.values(sGetMessagesRoot(state))\n  };\n};\n\nconst MessagesContainer = connect(mapStateToProps, null)(MessagesItem);\nexport default MessagesContainer;","import React from 'react';\nimport PropTypes from 'prop-types';\nimport i18n from '@dhis2/d2-i18n';\nimport ItemHeader from '../ItemHeader/ItemHeader';\nimport NotInterestedIcon from '@material-ui/icons/NotInterested';\n\nconst NotSupportedItem = props => <>\n        <ItemHeader title={i18n.t('Item type \"{{type}}\" not supported', {\n    type: props.item.type\n  })} itemId={props.item.id} dashboardMode={props.dashboardMode} isShortened={props.item.shortened} />\n        <div style={{\n    display: 'flex',\n    justifyContent: 'center',\n    alignItems: 'center',\n    height: '90%'\n  }}>\n            <NotInterestedIcon style={{\n      width: 100,\n      height: 100,\n      align: 'center'\n    }} color=\"disabled\" />\n        </div>\n    </>;\n\nNotSupportedItem.propTypes = {\n  dashboardMode: PropTypes.string,\n  item: PropTypes.object\n};\nexport default NotSupportedItem;","import React from 'react';\nimport { colors } from '@dhis2/ui';\nimport PropTypes from 'prop-types';\n\nconst DescriptionIcon = ({\n  className\n}) => <svg className={className} xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\" fill={colors.grey500}>\n        <path d=\"M0 0h24v24H0z\" fill=\"none\" />\n        <path d=\"M14 2H6c-1.1 0-1.99.9-1.99 2L4 20c0 1.1.89 2 1.99 2H18c1.1 0 2-.9 2-2V8l-6-6zm2 16H8v-2h8v2zm0-4H8v-2h8v2zm-3-5V3.5L18.5 9H13z\" />\n    </svg>;\n\nDescriptionIcon.propTypes = {\n  className: PropTypes.string\n};\nexport default DescriptionIcon;","import React from 'react';\nimport { colors } from '@dhis2/ui';\nimport PropTypes from 'prop-types';\n\nconst DeleteIcon = ({\n  className\n}) => <svg className={className} xmlns=\"http://www.w3.org/2000/svg\" width=\"18\" height=\"18\" viewBox=\"0 0 24 24\" fill={colors.red500}>\n        <path d=\"M6 19c0 1.1.9 2 2 2h8c1.1 0 2-.9 2-2V7H6v12zM19 4h-3.5l-1-1h-5l-1 1H5v2h14V4z\" />\n        <path d=\"M0 0h24v24H0z\" fill=\"none\" />\n    </svg>;\n\nDeleteIcon.propTypes = {\n  className: PropTypes.string\n};\nexport default DeleteIcon;","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { colors } from '@dhis2/ui';\nimport { useConfig } from '@dhis2/app-runtime';\nimport DescriptionIcon from '../../../icons/Description';\nimport DeleteIcon from '../../../icons/Delete';\nimport Line from '../../../widgets/Line';\nimport { itemTypeMap, getItemUrl } from '../../../modules/itemTypes';\nimport { orArray } from '../../../modules/util';\nimport { tRemoveListItemContent } from './actions';\nimport ItemHeader from '../ItemHeader/ItemHeader';\nimport { isEditMode } from '../../Dashboard/dashboardModes';\nimport classes from './Item.module.css';\n\nconst getItemTitle = item => itemTypeMap[item.type].pluralTitle;\n\nconst getContentItems = item => orArray(item[itemTypeMap[item.type].propName]).filter((item, index, array) => array.findIndex(el => el.id === item.id) === index);\n\nconst ListItem = ({\n  item,\n  dashboardMode,\n  tRemoveListItemContent\n}) => {\n  const {\n    baseUrl\n  } = useConfig();\n  const contentItems = getContentItems(item);\n\n  const getLink = contentItem => {\n    const deleteButton = <button className={classes.deletebutton} onClick={() => tRemoveListItemContent(item, contentItem)}>\n                <DeleteIcon className={classes.deleteicon} />\n            </button>;\n    return <>\n                <a className={classes.link} style={{\n        color: colors.grey900\n      }} href={getItemUrl(item.type, contentItem, baseUrl)}>\n                    {contentItem.name}\n                </a>\n                {isEditMode(dashboardMode) ? deleteButton : null}\n            </>;\n  };\n\n  return <>\n            <ItemHeader title={getItemTitle(item)} itemId={item.id} dashboardMode={dashboardMode} isShortened={item.shortened} />\n            <Line />\n            <div className=\"dashboard-item-content\">\n                <ul className={classes.list}>\n                    {contentItems.map(contentItem => <li className={classes.item} key={contentItem.id}>\n                            <DescriptionIcon className={classes.itemicon} />\n                            {getLink(contentItem)}\n                        </li>)}\n                </ul>\n            </div>\n        </>;\n};\n\nListItem.propTypes = {\n  dashboardMode: PropTypes.string,\n  item: PropTypes.object,\n  tRemoveListItemContent: PropTypes.func\n};\nexport default connect(null, {\n  tRemoveListItemContent\n})(ListItem);","import { acUpdateDashboardItem, acRemoveDashboardItem } from '../../../actions/editDashboard';\nimport { itemTypeMap } from '../../../modules/itemTypes';\nexport const tRemoveListItemContent = (dashboardItem, content) => dispatch => {\n  const listItemType = itemTypeMap[dashboardItem.type].propName;\n  const newContent = dashboardItem[listItemType].filter(item => item.id !== content.id);\n\n  if (newContent.length) {\n    dashboardItem[listItemType] = newContent;\n    dispatch(acUpdateDashboardItem(dashboardItem));\n  } else {\n    dispatch(acRemoveDashboardItem(dashboardItem));\n  }\n};","/** @module reducers/editDashboard */\nimport update from 'immutability-helper';\nimport isEmpty from 'lodash/isEmpty';\nimport { orArray } from '../modules/util';\nexport const SET_PRINT_DASHBOARD = 'SET_PRINT_DASHBOARD';\nexport const CLEAR_PRINT_DASHBOARD = 'CLEAR_PRINT_DASHBOARD';\nexport const ADD_PRINT_DASHBOARD_ITEM = 'ADD_PRINT_DASHBOARD_ITEM';\nexport const SET_PRINT_DASHBOARD_LAYOUT = 'SET_PRINT_DASHBOARD_LAYOUT';\nexport const REMOVE_PRINT_DASHBOARD_ITEM = 'REMOVE_PRINT_DASHBOARD_ITEM';\nexport const UPDATE_PRINT_DASHBOARD_ITEM = 'UPDATE_PRINT_DASHBOARD_ITEM';\nexport const DEFAULT_STATE_PRINT_DASHBOARD = {};\nconst DEFAULT_DASHBOARD_ITEMS = [];\nexport const NEW_PRINT_DASHBOARD_STATE = {\n  id: '',\n  name: '',\n  access: {},\n  description: '',\n  dashboardItems: DEFAULT_DASHBOARD_ITEMS\n};\nexport default ((state = DEFAULT_STATE_PRINT_DASHBOARD, action) => {\n  switch (action.type) {\n    case SET_PRINT_DASHBOARD:\n      {\n        const newState = {};\n        Object.keys(NEW_PRINT_DASHBOARD_STATE).map(k => newState[k] = action.value[k]);\n        return newState;\n      }\n\n    case CLEAR_PRINT_DASHBOARD:\n      return DEFAULT_STATE_PRINT_DASHBOARD;\n\n    case ADD_PRINT_DASHBOARD_ITEM:\n      if (!action.value.position) {\n        return update(state, {\n          dashboardItems: {\n            $unshift: [action.value]\n          }\n        });\n      }\n\n      return update(state, {\n        dashboardItems: {\n          $splice: [[parseInt(action.value.position), 0, action.value]]\n        }\n      });\n\n    case REMOVE_PRINT_DASHBOARD_ITEM:\n      {\n        const idToRemove = action.value;\n        const dashboardItemIndex = state.dashboardItems.findIndex(item => item.id === idToRemove);\n\n        if (dashboardItemIndex > -1) {\n          return update(state, {\n            dashboardItems: {\n              $splice: [[dashboardItemIndex, 1]]\n            }\n          });\n        }\n\n        return state;\n      }\n\n    case UPDATE_PRINT_DASHBOARD_ITEM:\n      {\n        const dashboardItem = action.value;\n        const dashboardItemIndex = state.dashboardItems.findIndex(item => item.id === dashboardItem.id);\n\n        if (dashboardItemIndex > -1) {\n          const newState = update(state, {\n            dashboardItems: {\n              $splice: [[dashboardItemIndex, 1, Object.assign({}, dashboardItem)]]\n            }\n          });\n          return newState;\n        }\n\n        return state;\n      }\n\n    case SET_PRINT_DASHBOARD_LAYOUT:\n      {\n        const stateItems = orArray(state.dashboardItems);\n        let layoutHasChanged = false;\n        const newStateItems = action.value.map(({\n          x,\n          y,\n          w,\n          h,\n          i\n        }) => {\n          const stateItem = stateItems.find(si => si.id === i);\n\n          if (!(stateItem.x === x && stateItem.y === y && stateItem.w === w && stateItem.h === h)) {\n            layoutHasChanged = true;\n            return Object.assign({}, stateItem, {\n              w,\n              h,\n              x,\n              y\n            });\n          }\n\n          return stateItem;\n        });\n        return layoutHasChanged ? { ...state,\n          dashboardItems: newStateItems\n        } : state;\n      }\n\n    default:\n      return state;\n  }\n}); // root selector\n\nexport const sGetPrintDashboardRoot = state => state.printDashboard; // selectors\n\nexport const sGetIsPrinting = state => !isEmpty(state.printDashboard);\nexport const sGetPrintDashboardName = state => sGetPrintDashboardRoot(state).name;\nexport const sGetPrintDashboardDescription = state => sGetPrintDashboardRoot(state).description;\nexport const sGetPrintDashboardItems = state => {\n  return sGetPrintDashboardRoot(state)?.dashboardItems || DEFAULT_DASHBOARD_ITEMS;\n};","import React from 'react';\nimport { connect } from 'react-redux';\nimport i18n from '@dhis2/d2-i18n';\nimport PropTypes from 'prop-types';\nimport Input from '@material-ui/core/Input';\nimport ItemHeader from '../ItemHeader/ItemHeader';\nimport PrintItemInfo from '../ItemHeader/PrintItemInfo';\nimport Line from '../../../widgets/Line';\nimport { Parser as RichTextParser, Editor as RichTextEditor } from '@dhis2/d2-ui-rich-text';\nimport { acUpdateDashboardItem } from '../../../actions/editDashboard';\nimport { sGetEditDashboardItems } from '../../../reducers/editDashboard';\nimport { sGetDashboardItems } from '../../../reducers/dashboards';\nimport { sGetIsPrinting, sGetPrintDashboardItems } from '../../../reducers/printDashboard';\nimport { isEditMode, PRINT_LAYOUT } from '../../Dashboard/dashboardModes';\nconst style = {\n  textDiv: {\n    padding: '10px',\n    whiteSpace: 'pre-line',\n    lineHeight: '20px'\n  },\n  textField: {\n    fontSize: '14px',\n    fontStretch: 'normal',\n    width: '90%',\n    margin: '0 auto',\n    display: 'block',\n    lineHeight: '24px'\n  },\n  container: {\n    marginBottom: '20px',\n    marginTop: '20px'\n  }\n};\n\nconst TextItem = props => {\n  const {\n    item,\n    dashboardMode,\n    text,\n    acUpdateDashboardItem\n  } = props;\n\n  const onChangeText = event => {\n    const updatedItem = { ...item,\n      text: event.target.value\n    };\n    acUpdateDashboardItem(updatedItem);\n  };\n\n  const viewItem = () => {\n    const textDivStyle = Object.assign({}, style.textField, style.textDiv);\n    return <div className=\"dashboard-item-content\" style={style.container}>\n                <RichTextParser style={textDivStyle}>{text}</RichTextParser>\n            </div>;\n  };\n\n  const editItem = () => {\n    return <>\n                <ItemHeader title={i18n.t('Text item')} itemId={item.id} dashboardMode={dashboardMode} />\n                <Line />\n                <div className=\"dashboard-item-content\">\n                    <RichTextEditor onEdit={onChangeText}>\n                        <Input value={text} multiline fullWidth style={style.textField} placeholder={i18n.t('Add text here')} onChange={onChangeText} />\n                    </RichTextEditor>\n                </div>\n            </>;\n  };\n\n  const printItem = () => {\n    const textDivStyle = Object.assign({}, style.textField, style.textDiv);\n    return <>\n                {props.item.shortened ? <PrintItemInfo /> : null}\n                <div className=\"dashboard-item-content\" style={style.container}>\n                    <RichTextParser style={textDivStyle}>{text}</RichTextParser>\n                </div>\n            </>;\n  };\n\n  let textItem;\n\n  if (isEditMode(dashboardMode)) {\n    textItem = editItem;\n  } else if (dashboardMode === PRINT_LAYOUT) {\n    textItem = printItem;\n  } else {\n    textItem = viewItem;\n  }\n\n  return <>{textItem()}</>;\n};\n\nconst mapStateToProps = (state, ownProps) => {\n  const isPrintPreview = sGetIsPrinting(state);\n  let items;\n\n  if (isPrintPreview) {\n    items = sGetPrintDashboardItems(state);\n  } else if (isEditMode(ownProps.dashboardMode)) {\n    items = sGetEditDashboardItems(state);\n  } else {\n    items = sGetDashboardItems(state);\n  }\n\n  const item = items.find(item => item.id === ownProps.item.id);\n  return {\n    text: item ? item.text : ''\n  };\n};\n\nTextItem.propTypes = {\n  acUpdateDashboardItem: PropTypes.func,\n  dashboardMode: PropTypes.string,\n  item: PropTypes.object,\n  text: PropTypes.string\n};\nexport default connect(mapStateToProps, {\n  acUpdateDashboardItem\n})(TextItem);","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport NotInterestedIcon from '@material-ui/icons/NotInterested';\nimport { useD2 } from '@dhis2/app-runtime-adapter-d2';\nimport ItemHeader from '../ItemHeader/ItemHeader';\nimport Line from '../../../widgets/Line';\nimport { FILTER_ORG_UNIT } from '../../../actions/itemFilters';\nimport { sGetItemFiltersRoot, DEFAULT_STATE_ITEM_FILTERS } from '../../../reducers/itemFilters';\nimport { EDIT, isEditMode } from '../../Dashboard/dashboardModes';\n\nconst getIframeSrc = (appDetails, item, itemFilters) => {\n  let iframeSrc = `${appDetails.launchUrl}?dashboardItemId=${item.id}`;\n\n  if (itemFilters[FILTER_ORG_UNIT] && itemFilters[FILTER_ORG_UNIT].length) {\n    const ouIds = itemFilters[FILTER_ORG_UNIT].map(ouFilter => ouFilter.path.split('/').slice(-1)[0]);\n    iframeSrc += `&userOrgUnit=${ouIds.join(',')}`;\n  }\n\n  return iframeSrc;\n};\n\nconst AppItem = ({\n  dashboardMode,\n  item,\n  itemFilters\n}) => {\n  const {\n    d2\n  } = useD2({});\n  let appDetails;\n  const appKey = item.appKey;\n\n  if (appKey) {\n    appDetails = d2.system.installedApps.find(app => app.key === appKey);\n  }\n\n  const hideTitle = appDetails?.settings?.dashboardWidget?.hideTitle && dashboardMode !== EDIT;\n  return appDetails && appDetails.name && appDetails.launchUrl ? <>\n            {!hideTitle && <>\n                    <ItemHeader title={appDetails.name} itemId={item.id} dashboardMode={dashboardMode} isShortened={item.shortened} />\n                    <Line />\n                </>}\n            <iframe title={appDetails.name} src={getIframeSrc(appDetails, item, itemFilters)} className={!hideTitle ? 'dashboard-item-content' : 'dashboard-item-content-hidden-title'} style={{\n      border: 'none'\n    }} />\n        </> : <>\n            <ItemHeader title={`${appKey} app not found`} />\n            <Line />\n            <div className=\"dashboard-item-content\" style={{\n      display: 'flex',\n      justifyContent: 'center',\n      alignItems: 'center',\n      height: '90%'\n    }}>\n                <NotInterestedIcon color=\"disabled\" disabled style={{\n        width: 100,\n        height: 100,\n        align: 'center'\n      }} />\n            </div>\n        </>;\n};\n\nAppItem.propTypes = {\n  dashboardMode: PropTypes.string,\n  item: PropTypes.object,\n  itemFilters: PropTypes.object\n};\n\nconst mapStateToProps = (state, ownProps) => {\n  const itemFilters = !isEditMode(ownProps.dashboardMode) ? sGetItemFiltersRoot(state) : DEFAULT_STATE_ITEM_FILTERS;\n  return {\n    itemFilters\n  };\n};\n\nexport default connect(mapStateToProps)(AppItem);","import React from 'react';\nimport PropTypes from 'prop-types';\nimport i18n from '@dhis2/d2-i18n';\nimport { colors } from '@dhis2/ui';\nimport ItemHeader from '../ItemHeader/ItemHeader';\nconst style = {\n  margin: '21px 28px',\n  fontSize: '14px',\n  lineHeight: '18px',\n  color: colors.grey600\n};\n\nconst SpacerItem = props => {\n  return <>\n            <ItemHeader title={i18n.t('Spacer')} itemId={props.item.id} dashboardMode={props.dashboardMode} isShortened={props.item.shortened} />\n            <p style={style}>\n                {i18n.t('Use a spacer to create empty vertical space between other dashboard items.')}\n            </p>\n        </>;\n};\n\nSpacerItem.propTypes = {\n  dashboardMode: PropTypes.string,\n  item: PropTypes.object\n};\nexport default SpacerItem;","import React from 'react';\n\nconst PageBreakItem = () => <div />;\n\nexport default PageBreakItem;","import React from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport i18n from '@dhis2/d2-i18n';\nimport { sGetSelectedId, sGetSelectedShowDescription } from '../../../reducers/selected';\nimport { sGetDashboardById, EMPTY_DASHBOARD } from '../../../reducers/dashboards';\nimport { sGetNamedItemFilters } from '../../../reducers/itemFilters';\nimport { sGetIsEditing } from '../../../reducers/editDashboard';\nimport { sGetPrintDashboardName, sGetPrintDashboardDescription } from '../../../reducers/printDashboard';\nimport classes from './styles/Item.module.css';\n\nconst PrintTitlePageItem = ({\n  name,\n  description,\n  itemFilters,\n  showDescription\n}) => {\n  const getItemFilterList = () => {\n    const listItems = itemFilters.map(({\n      name,\n      values\n    }) => <li className={classes.filterListItem} key={name}>\n                {name}: {values.map(val => val.name).join(', ')}\n            </li>);\n    return <ul className={classes.filterList}>{listItems}</ul>;\n  };\n\n  return <div className={classes.titlePage}>\n            <p className={classes.name}>{name}</p>\n            {showDescription && description && <p className={classes.description}>{description}</p>}\n            {itemFilters.length > 0 && <>\n                    <p className={classes.filterTitle}>\n                        {i18n.t('Filters applied')}\n                    </p>\n                    {getItemFilterList()}\n                </>}\n        </div>;\n};\n\nPrintTitlePageItem.propTypes = {\n  description: PropTypes.string,\n  itemFilters: PropTypes.array,\n  name: PropTypes.string,\n  showDescription: PropTypes.bool\n};\nPrintTitlePageItem.defaultProps = {\n  description: '',\n  name: '',\n  showDescription: false\n};\n\nconst mapStateToProps = state => {\n  const id = sGetSelectedId(state);\n  const isEditMode = sGetIsEditing(state);\n  const viewDashboard = sGetDashboardById(state, id) || EMPTY_DASHBOARD;\n  const name = isEditMode ? sGetPrintDashboardName(state) || i18n.t('Untitled dashboard') : viewDashboard.displayName;\n  const description = isEditMode ? sGetPrintDashboardDescription(state) : viewDashboard.displayDescription;\n  return {\n    name,\n    description,\n    itemFilters: sGetNamedItemFilters(state),\n    showDescription: sGetSelectedShowDescription(state)\n  };\n};\n\nexport default connect(mapStateToProps)(PrintTitlePageItem);","import React from 'react';\nimport PropTypes from 'prop-types';\nimport VisualizationItem from './VisualizationItem/Item';\nimport MessagesItem from './MessagesItem/Item';\nimport NotSupportedItem from './NotSupportedItem/Item';\nimport ListItem from './ListItem/Item';\nimport TextItem from './TextItem/Item';\nimport AppItem from './AppItem/Item';\nimport SpacerItem from './SpacerItem/Item';\nimport PageBreakItem from './PageBreakItem/Item';\nimport PrintTitlePageItem from './PrintTitlePageItem/Item';\nimport { APP, VISUALIZATION, REPORT_TABLE, CHART, MAP, EVENT_CHART, EVENT_REPORT, MESSAGES, REPORTS, RESOURCES, USERS, TEXT, SPACER, PAGEBREAK, PRINT_TITLE_PAGE } from '../../modules/itemTypes';\n\nconst getGridItem = type => {\n  switch (type) {\n    case VISUALIZATION:\n    case REPORT_TABLE:\n    case CHART:\n    case MAP:\n    case EVENT_CHART:\n    case EVENT_REPORT:\n      return VisualizationItem;\n\n    case MESSAGES:\n      return MessagesItem;\n\n    case REPORTS:\n    case RESOURCES:\n    case USERS:\n      return ListItem;\n\n    case TEXT:\n      return TextItem;\n\n    case SPACER:\n      return SpacerItem;\n\n    case APP:\n      return AppItem;\n\n    case PAGEBREAK:\n      return PageBreakItem;\n\n    case PRINT_TITLE_PAGE:\n      return PrintTitlePageItem;\n\n    default:\n      return NotSupportedItem;\n  }\n};\n\nexport const Item = props => {\n  const GridItem = getGridItem(props.item.type);\n  return <GridItem item={props.item} gridWidth={props.gridWidth} dashboardMode={props.dashboardMode} onToggleItemExpanded={props.onToggleItemExpanded} />;\n};\nItem.propTypes = {\n  dashboardMode: PropTypes.string,\n  gridWidth: PropTypes.number,\n  item: PropTypes.object,\n  onToggleItemExpanded: PropTypes.func\n};","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport debounce from 'lodash/debounce';\nimport pick from 'lodash/pick';\nconst defaultDebounceMs = 100;\nconst defaultBufferFactor = 0.25;\n\nclass ProgressiveLoadingContainer extends Component {\n  static propTypes = {\n    children: PropTypes.node.isRequired,\n    bufferFactor: PropTypes.number,\n    className: PropTypes.string,\n    debounceMs: PropTypes.number,\n    style: PropTypes.object\n  };\n  static defaultProps = {\n    debounceMs: defaultDebounceMs,\n    bufferFactor: defaultBufferFactor\n  };\n  state = {\n    shouldLoad: false\n  };\n  containerRef = null;\n  shouldLoadHandler = null;\n  handlerOptions = {\n    passive: true\n  };\n\n  checkShouldLoad() {\n    if (!this.containerRef) {\n      return;\n    }\n\n    const bufferPx = this.props.bufferFactor * window.innerHeight;\n    const rect = this.containerRef.getBoundingClientRect();\n\n    if (rect.bottom > -bufferPx && rect.top < window.innerHeight + bufferPx) {\n      this.setState({\n        shouldLoad: true\n      });\n      this.removeHandler();\n    }\n  }\n\n  registerHandler() {\n    this.shouldLoadHandler = debounce(() => this.checkShouldLoad(), this.props.debounceMs);\n    document.getElementsByClassName('dashboard-wrapper')[0]?.addEventListener('scroll', this.shouldLoadHandler, this.handlerOptions);\n  }\n\n  removeHandler() {\n    document.getElementsByClassName('dashboard-wrapper')[0]?.removeEventListener('scroll', this.shouldLoadHandler, this.handlerOptions);\n  }\n\n  componentDidMount() {\n    this.registerHandler();\n    this.checkShouldLoad();\n  }\n\n  componentWillUnmount() {\n    this.removeHandler();\n  }\n\n  render() {\n    const {\n      children,\n      className,\n      style,\n      ...props\n    } = this.props;\n    const {\n      shouldLoad\n    } = this.state;\n    const eventProps = pick(props, ['onMouseDown', 'onTouchStart', 'onMouseUp', 'onTouchEnd']);\n    return <div ref={ref => this.containerRef = ref} style={style} className={className} data-test={`dashboarditem-${props.itemId}`} {...eventProps}>\n                {shouldLoad && children}\n            </div>;\n  }\n\n}\n\nexport default ProgressiveLoadingContainer;","import React, { useState, useEffect } from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport i18n from '@dhis2/d2-i18n';\nimport cx from 'classnames';\nimport { Responsive as ResponsiveReactGridLayout } from 'react-grid-layout';\nimport { Layer, CenteredContent, CircularLoader } from '@dhis2/ui';\nimport { useWindowDimensions } from '../WindowDimensionsProvider';\nimport { Item } from '../Item/Item';\nimport { GRID_ROW_HEIGHT_PX, SM_SCREEN_GRID_COLUMNS, GRID_COMPACT_TYPE, GRID_PADDING_PX, MARGIN_PX, MARGIN_SM_PX, hasShape, GRID_COLUMNS, getSmallLayout, getGridWidth, getProportionalHeight } from '../../modules/gridUtil';\nimport { orArray } from '../../modules/util';\nimport NoContentMessage from '../../widgets/NoContentMessage';\nimport { sGetSelectedId, sGetSelectedIsLoading } from '../../reducers/selected';\nimport { sGetDashboardById, sGetDashboardItems } from '../../reducers/dashboards';\nimport ProgressiveLoadingContainer from '../Item/ProgressiveLoadingContainer';\nimport { VIEW } from '../Dashboard/dashboardModes';\nimport { getBreakpoint, isSmallScreen } from '../../modules/smallScreen';\nimport 'react-grid-layout/css/styles.css';\nimport 'react-resizable/css/styles.css';\nimport './styles/ItemGrid.css';\nconst EXPANDED_HEIGHT = 17;\nconst EXPANDED_HEIGHT_SM = 13;\n\nconst ResponsiveItemGrid = ({\n  isLoading,\n  dashboardItems\n}) => {\n  const {\n    width\n  } = useWindowDimensions();\n  const [expandedItems, setExpandedItems] = useState({});\n  const [displayItems, setDisplayItems] = useState(dashboardItems);\n  const [layoutSm, setLayoutSm] = useState([]);\n  const [gridWidth, setGridWidth] = useState(0);\n  useEffect(() => {\n    if (isSmallScreen(width)) {\n      setLayoutSm(getItemsWithAdjustedHeight(getSmallLayout(dashboardItems, width)));\n    }\n\n    setDisplayItems(getItemsWithAdjustedHeight(dashboardItems));\n  }, [expandedItems, width, dashboardItems]);\n\n  const onToggleItemExpanded = clickedId => {\n    const isExpanded = typeof expandedItems[clickedId] === 'boolean' ? expandedItems[clickedId] : false;\n    const newExpandedItems = { ...expandedItems\n    };\n    newExpandedItems[clickedId] = !isExpanded;\n    setExpandedItems(newExpandedItems);\n  };\n\n  const getItemsWithAdjustedHeight = items => items.map(item => {\n    const expandedItem = expandedItems[item.id];\n\n    if (expandedItem && expandedItem === true) {\n      const expandedHeight = isSmallScreen(width) ? EXPANDED_HEIGHT_SM : EXPANDED_HEIGHT;\n      return Object.assign({}, item, {\n        h: item.h + expandedHeight,\n        smallOriginalH: getProportionalHeight(item, width)\n      });\n    }\n\n    return item;\n  });\n\n  const getItemComponent = item => <ProgressiveLoadingContainer key={item.i} className={cx(item.type, 'view', `reactgriditem-${item.id}`)} itemId={item.id}>\n            <Item item={item} gridWidth={gridWidth} dashboardMode={VIEW} onToggleItemExpanded={onToggleItemExpanded} />\n        </ProgressiveLoadingContainer>;\n\n  const getItemComponents = items => items.map(item => getItemComponent(item));\n\n  const onWidthChanged = containerWidth => {\n    setTimeout(() => {\n      setGridWidth(containerWidth);\n    }, 200);\n  };\n\n  if (!isLoading && !dashboardItems.length) {\n    return <NoContentMessage text={i18n.t('There are no items on this dashboard')} />;\n  }\n\n  return <>\n            {isLoading ? <Layer translucent>\n                    <CenteredContent>\n                        <CircularLoader />\n                    </CenteredContent>\n                </Layer> : null}\n            <ResponsiveReactGridLayout rowHeight={GRID_ROW_HEIGHT_PX} width={getGridWidth(width)} cols={{\n      lg: GRID_COLUMNS,\n      sm: SM_SCREEN_GRID_COLUMNS\n    }} breakpoints={{\n      lg: getBreakpoint(),\n      sm: 0\n    }} layouts={{\n      lg: displayItems,\n      sm: layoutSm\n    }} compactType={GRID_COMPACT_TYPE} margin={isSmallScreen(width) ? MARGIN_SM_PX : MARGIN_PX} containerPadding={{\n      lg: GRID_PADDING_PX,\n      sm: GRID_PADDING_PX\n    }} isDraggable={false} isResizable={false} draggableCancel=\"input,textarea\" onWidthChange={onWidthChanged}>\n                {getItemComponents(displayItems)}\n            </ResponsiveReactGridLayout>\n        </>;\n};\n\nResponsiveItemGrid.propTypes = {\n  dashboardItems: PropTypes.array,\n  isLoading: PropTypes.bool\n};\n\nconst mapStateToProps = state => {\n  const selectedDashboard = sGetDashboardById(state, sGetSelectedId(state));\n  const dashboardItems = orArray(sGetDashboardItems(state)).filter(hasShape);\n  return {\n    isLoading: sGetSelectedIsLoading(state) || !selectedDashboard,\n    dashboardItems\n  };\n};\n\nexport default connect(mapStateToProps)(ResponsiveItemGrid);","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport i18n from '@dhis2/d2-i18n';\nimport { colors } from '@dhis2/ui';\nconst styles = {\n  badgeContainer: {\n    margin: '2px',\n    padding: '0 16px',\n    borderRadius: '4px',\n    color: colors.white,\n    backgroundColor: '#212934',\n    height: 36,\n    display: 'flex',\n    alignItems: 'center'\n  },\n  badge: {\n    fontSize: '13px',\n    cursor: 'pointer',\n    whiteSpace: 'nowrap'\n  },\n  badgeRemove: {\n    fontSize: '12px',\n    textDecoration: 'underline',\n    marginLeft: '24px',\n    cursor: 'pointer'\n  }\n};\n\nclass FilterBadge extends Component {\n  onClick = id => () => this.props.onClick(id);\n  onRemove = id => () => this.props.onRemove(id);\n\n  render() {\n    const {\n      data\n    } = this.props;\n    return <div style={styles.badgeContainer} data-test=\"dashboard-filter-badge\">\n                <span style={styles.badge} onClick={this.onClick(data.id)}>\n                    {`${data.name}: ${data.values.length > 1 ? i18n.t('{{count}} selected', {\n          count: data.values.length\n        }) : data.values[0].name}`}\n                </span>\n                <span style={styles.badgeRemove} onClick={this.onRemove(data.id)}>\n                    {i18n.t('Remove')}\n                </span>\n            </div>;\n  }\n\n}\n\nFilterBadge.propTypes = {\n  data: PropTypes.object.isRequired,\n  onClick: PropTypes.func.isRequired,\n  onRemove: PropTypes.func.isRequired\n};\nFilterBadge.defaultProps = {\n  onClick: Function.prototype,\n  onRemove: Function.prototype\n};\nexport default FilterBadge;","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport FilterBadge from './FilterBadge';\nimport { sGetNamedItemFilters } from '../../reducers/itemFilters';\nimport { acRemoveItemFilter } from '../../actions/itemFilters';\nimport { acSetActiveModalDimension } from '../../actions/activeModalDimension';\nimport classes from './styles/FilterBar.module.css';\nexport class FilterBar extends Component {\n  onBadgeRemove = id => {\n    this.props.removeItemFilter(id);\n  };\n  onBadgeClick = id => {\n    this.props.setActiveModalDimension({\n      id,\n      name: this.props.filters.find(item => item.id === id).name\n    });\n  };\n\n  render() {\n    const {\n      filters\n    } = this.props;\n    return filters.length ? // the 3 is calculated so that the FilterBar has the same vertical position as the TitleBar in relation to the ControlBar\n    <div className={classes.bar} style={{\n      top: 3\n    }}>\n                {filters.map(filter => <FilterBadge key={filter.id} data={filter} onClick={this.onBadgeClick} onRemove={this.onBadgeRemove} />)}\n            </div> : null;\n  }\n\n}\nFilterBar.propTypes = {\n  filters: PropTypes.array.isRequired,\n  removeItemFilter: PropTypes.func.isRequired,\n  setActiveModalDimension: PropTypes.func\n};\nFilterBar.defaultProps = {\n  filters: [],\n  removeItemFIlter: Function.prototype\n};\n\nconst mapStateToProps = state => ({\n  filters: sGetNamedItemFilters(state)\n});\n\nexport default connect(mapStateToProps, {\n  setActiveModalDimension: acSetActiveModalDimension,\n  removeItemFilter: acRemoveItemFilter\n})(FilterBar);","import { generateUid } from 'd2/uid';\nimport { SET_PRINT_DASHBOARD, CLEAR_PRINT_DASHBOARD, SET_PRINT_DASHBOARD_LAYOUT, ADD_PRINT_DASHBOARD_ITEM, REMOVE_PRINT_DASHBOARD_ITEM, UPDATE_PRINT_DASHBOARD_ITEM } from '../reducers/printDashboard';\nimport { NEW_ITEM_SHAPE, getGridItemProperties, getPageBreakItemShape, getPrintTitlePageItemShape } from '../modules/gridUtil';\nimport { itemTypeMap, PAGEBREAK } from '../modules/itemTypes'; // actions\n\nexport const acSetPrintDashboard = (dashboard, items) => {\n  const val = { ...dashboard,\n    dashboardItems: items\n  };\n  return {\n    type: SET_PRINT_DASHBOARD,\n    value: val\n  };\n};\nexport const acClearPrintDashboard = () => ({\n  type: CLEAR_PRINT_DASHBOARD\n});\nexport const acUpdatePrintDashboardLayout = value => ({\n  type: SET_PRINT_DASHBOARD_LAYOUT,\n  value\n});\nexport const acAddPrintDashboardItem = item => {\n  const type = item.type;\n  delete item.type;\n  const itemPropName = itemTypeMap[type].propName;\n  const id = generateUid();\n  const gridItemProperties = getGridItemProperties(id);\n  let shape;\n\n  if (type === PAGEBREAK) {\n    const yPos = item.yPos || 0;\n    shape = getPageBreakItemShape(yPos, item.isStatic);\n  } else {\n    shape = getPrintTitlePageItemShape(item.isOneItemPerPage);\n  }\n\n  return {\n    type: ADD_PRINT_DASHBOARD_ITEM,\n    value: {\n      id,\n      type,\n      position: item.position || null,\n      [itemPropName]: item.content,\n      ...NEW_ITEM_SHAPE,\n      ...gridItemProperties,\n      ...shape\n    }\n  };\n};\nexport const acRemovePrintDashboardItem = value => ({\n  type: REMOVE_PRINT_DASHBOARD_ITEM,\n  value\n});\nexport const acUpdatePrintDashboardItem = item => ({\n  type: UPDATE_PRINT_DASHBOARD_ITEM,\n  value: item\n});","import React, { useEffect } from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport ViewTitleBar from '../TitleBar/ViewTitleBar';\nimport ViewItemGrid from '../ItemGrid/ViewItemGrid';\nimport FilterBar from '../FilterBar/FilterBar';\nimport DashboardsBar, { isDashboardBarMaxHeight } from '../ControlBar/DashboardsBar';\nimport { sGetIsEditing } from '../../reducers/editDashboard';\nimport { sGetIsPrinting } from '../../reducers/printDashboard';\nimport { sGetSelectedId } from '../../reducers/selected';\nimport { sGetControlBarUserRows } from '../../reducers/controlBar';\nimport { acClearEditDashboard } from '../../actions/editDashboard';\nimport { acClearPrintDashboard } from '../../actions/printDashboard';\nimport { CONTROL_BAR_COLLAPSED, getControlBarHeight, getControlBarHeightSmallDevice, HEADERBAR_HEIGHT } from '../ControlBar/controlBarDimensions';\nimport { useWindowDimensions } from '../WindowDimensionsProvider';\nimport { isSmallScreen } from '../../modules/smallScreen';\nexport const ViewDashboard = props => {\n  const {\n    width,\n    height\n  } = useWindowDimensions();\n  useEffect(() => {\n    if (props.dashboardIsEditing) {\n      props.clearEditDashboard();\n    } else if (props.dashboardIsPrinting) {\n      props.clearPrintDashboard();\n    }\n  }, [props.dashboardIsEditing, props.dashboardIsPrinting]);\n  useEffect(() => {\n    document.querySelector('.dashboard-wrapper')?.scroll(0, 0);\n  }, [props.selectedId]);\n  const dashboardHeight = height - HEADERBAR_HEIGHT - (isSmallScreen(width) && !isDashboardBarMaxHeight(props.controlBarRows) ? getControlBarHeightSmallDevice(CONTROL_BAR_COLLAPSED) : getControlBarHeight(props.controlBarRows));\n  return <>\n            <DashboardsBar />\n            <div className=\"dashboard-wrapper\" style={{\n      height: dashboardHeight\n    }}>\n                <ViewTitleBar />\n                <FilterBar />\n                <ViewItemGrid />\n            </div>\n        </>;\n};\nViewDashboard.propTypes = {\n  clearEditDashboard: PropTypes.func,\n  clearPrintDashboard: PropTypes.func,\n  controlBarRows: PropTypes.number,\n  dashboardIsEditing: PropTypes.bool,\n  dashboardIsPrinting: PropTypes.bool,\n  selectedId: PropTypes.string\n};\n\nconst mapStateToProps = state => {\n  return {\n    dashboardIsEditing: sGetIsEditing(state),\n    dashboardIsPrinting: sGetIsPrinting(state),\n    controlBarRows: sGetControlBarUserRows(state),\n    selectedId: sGetSelectedId(state)\n  };\n};\n\nexport default connect(mapStateToProps, {\n  clearEditDashboard: acClearEditDashboard,\n  clearPrintDashboard: acClearPrintDashboard\n})(ViewDashboard);","import React from 'react';\nimport PropTypes from 'prop-types';\nimport i18n from '@dhis2/d2-i18n';\nimport { InputField } from '@dhis2/ui';\n\nconst ItemSearchField = props => <InputField name=\"Dashboard item search\" label={i18n.t('Search for items to add to this dashboard')} type=\"text\" onChange={props.onChange} onFocus={props.onFocus} value={props.value} dataTest=\"item-search\" />;\n\nItemSearchField.propTypes = {\n  value: PropTypes.string,\n  onChange: PropTypes.func,\n  onFocus: PropTypes.func\n};\nexport default ItemSearchField;","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { MenuItem, colors } from '@dhis2/ui';\nimport classes from './styles/HeaderMenuItem.module.css';\n\nconst HeaderMenuItem = ({\n  title\n}) => <MenuItem className={classes.item} dense key={title} disabled label={<span style={{\n  color: colors.grey800,\n  fontWeight: '600'\n}}>\n                {title}\n            </span>} />;\n\nHeaderMenuItem.propTypes = {\n  title: PropTypes.string.isRequired\n};\nexport default HeaderMenuItem;","import React from 'react';\nimport { colors } from '@dhis2/ui';\nimport PropTypes from 'prop-types';\n\nconst LaunchIcon = ({\n  className\n}) => <svg className={className} xmlns=\"http://www.w3.org/2000/svg\" width=\"12\" height=\"12\" fill={colors.grey600} viewBox=\"0 0 24 24\">\n        <path d=\"M0 0h24v24H0z\" fill=\"none\" />\n        <path d=\"M19 19H5V5h7V3H5c-1.11 0-2 .9-2 2v14c0 1.1.89 2 2 2h14c1.1 0 2-.9 2-2v-7h-2v7zM14 3v2h3.59l-9.83 9.83 1.41 1.41L19 6.41V10h2V3h-7z\" />\n    </svg>;\n\nLaunchIcon.propTypes = {\n  className: PropTypes.string\n};\nexport default LaunchIcon;","import React from 'react';\nimport { MenuItem, colors } from '@dhis2/ui';\nimport i18n from '@dhis2/d2-i18n';\nimport PropTypes from 'prop-types';\nimport { visTypeIcons } from '@dhis2/analytics';\nimport { getItemIcon, VISUALIZATION } from '../../modules/itemTypes';\nimport LaunchIcon from '../../icons/Launch';\nimport classes from './styles/ContentMenuItem.module.css';\n\nconst LaunchLink = ({\n  url\n}) => <a onClick={e => e.stopPropagation()} className={classes.launchLink} target=\"_blank\" rel=\"noopener noreferrer\" href={url}>\n        <LaunchIcon />\n    </a>;\n\nLaunchLink.propTypes = {\n  url: PropTypes.string\n};\n\nconst InsertButton = () => <button className={classes.buttonInsert}>{i18n.t('Insert')}</button>;\n\nconst ContentMenuItem = ({\n  type,\n  name,\n  onInsert,\n  url,\n  visType\n}) => {\n  const ItemIcon = getItemIcon(type);\n  const renderedItemIcon = type === VISUALIZATION ? visTypeIcons[visType] : <ItemIcon style={{\n    fill: colors.grey600\n  }} />;\n  return <MenuItem dense onClick={onInsert} label={<div className={classes.menuItem}>\n                    <div className={classes.label}>\n                        <span style={{\n        marginRight: '6px'\n      }}>\n                            {renderedItemIcon}\n                        </span>\n                        <span>{name}</span>\n                        {url ? <LaunchLink url={url} /> : null}\n                    </div>\n                    <InsertButton />\n                </div>} dataTest={`menu-item-${name}`} />;\n};\n\nContentMenuItem.propTypes = {\n  name: PropTypes.string,\n  type: PropTypes.string,\n  url: PropTypes.string,\n  visType: PropTypes.string,\n  onInsert: PropTypes.func\n};\nexport default ContentMenuItem;","import { sGetEditDashboardRoot } from '../../reducers/editDashboard';\nimport { itemTypeMap } from '../../modules/itemTypes';\nimport { acAddDashboardItem, acUpdateDashboardItem } from '../../actions/editDashboard';\nexport const tAddListItemContent = (type, content) => (dispatch, getState) => {\n  const state = getState();\n  const listItemType = itemTypeMap[type].propName;\n  const dashboardItems = sGetEditDashboardRoot(state).dashboardItems;\n  const dashboardItemIndex = dashboardItems.findIndex(item => item.type === type);\n  let dashboardItem; // Reports/Resources/Users dashboard item type already present in dashboard\n\n  if (dashboardItemIndex > -1) {\n    dashboardItem = dashboardItems[dashboardItemIndex];\n    dashboardItem[listItemType].push(content);\n    dispatch(acUpdateDashboardItem(dashboardItem));\n  } else {\n    dashboardItem = {\n      type: type,\n      content: [content]\n    };\n    dispatch(acAddDashboardItem(dashboardItem));\n  }\n};","import i18n from '@dhis2/d2-i18n';\nimport { VISUALIZATION, MAP, EVENT_CHART, EVENT_REPORT, USERS, REPORTS, RESOURCES, APP, MESSAGES, TEXT, SPACER } from '../../modules/itemTypes';\nexport const singleItems = [{\n  id: 'additional',\n  header: i18n.t('Additional items'),\n  items: [{\n    type: TEXT,\n    name: i18n.t('Text box'),\n    content: ''\n  }, {\n    type: MESSAGES,\n    name: i18n.t('Messages'),\n    content: 'true'\n  }, {\n    type: SPACER,\n    name: i18n.t('Spacer'),\n    content: ''\n  }]\n}]; // categorizedItems are grouped in the item selector menu\n\nexport const categorizedItems = [VISUALIZATION, MAP, EVENT_REPORT, EVENT_CHART, USERS, REPORTS, RESOURCES, APP]; // listItemTypes are included in a single dashboard item\n\nexport const listItemTypes = [REPORTS, RESOURCES, USERS];","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport i18n from '@dhis2/d2-i18n';\nimport { MenuItem, Divider } from '@dhis2/ui';\nimport { useConfig } from '@dhis2/app-runtime';\nimport HeaderMenuItem from './HeaderMenuItem';\nimport ContentMenuItem from './ContentMenuItem';\nimport { tAddListItemContent } from './actions';\nimport { acAddDashboardItem } from '../../actions/editDashboard';\nimport { getItemUrl, APP, VISUALIZATION } from '../../modules/itemTypes';\nimport { categorizedItems, listItemTypes } from './selectableItems';\nimport classes from './styles/CategorizedMenuGroup.module.css';\n\nconst CategorizedMenuGroup = ({\n  type,\n  title,\n  items,\n  hasMore,\n  acAddDashboardItem,\n  tAddListItemContent,\n  onChangeItemsLimit\n}) => {\n  const {\n    baseUrl\n  } = useConfig();\n  const [seeMore, setSeeMore] = useState(false);\n\n  const addItem = item => () => {\n    if (type === APP) {\n      acAddDashboardItem({\n        type,\n        content: item.key\n      });\n    } else {\n      const newItem = {\n        id: item.id,\n        name: item.displayName || item.name\n      };\n\n      if (listItemTypes.includes(type)) {\n        tAddListItemContent(type, newItem);\n      } else {\n        acAddDashboardItem({\n          type,\n          content: newItem\n        });\n      }\n    }\n  };\n\n  const toggleSeeMore = () => {\n    setSeeMore(!seeMore);\n    onChangeItemsLimit(type);\n  };\n\n  return <>\n            <HeaderMenuItem title={title} />\n            {items.map(item => {\n      const itemUrl = getItemUrl(type, item, baseUrl);\n      return <ContentMenuItem key={item.id || item.key} type={type} visType={type === VISUALIZATION ? item.type : type} name={item.displayName || item.name} onInsert={addItem(item)} url={itemUrl} />;\n    })}\n            {hasMore ? <MenuItem dense key={`showmore${title}`} onClick={toggleSeeMore} label={<button className={classes.showMoreButton}>\n                            {seeMore ? i18n.t('Show fewer') : i18n.t('Show more')}\n                        </button>} /> : null}\n            <Divider margin=\"8px 0px\" />\n        </>;\n};\n\nCategorizedMenuGroup.propTypes = {\n  items: PropTypes.array.isRequired,\n  title: PropTypes.string.isRequired,\n  type: PropTypes.oneOf(categorizedItems).isRequired,\n  onChangeItemsLimit: PropTypes.func.isRequired,\n  acAddDashboardItem: PropTypes.func,\n  hasMore: PropTypes.bool,\n  tAddListItemContent: PropTypes.func\n};\nexport default connect(null, {\n  acAddDashboardItem,\n  tAddListItemContent\n})(CategorizedMenuGroup);","import React from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport HeaderMenuItem from './HeaderMenuItem';\nimport ContentMenuItem from './ContentMenuItem';\nimport { acAddDashboardItem } from '../../actions/editDashboard';\nexport const SinglesMenuGroup = ({\n  acAddDashboardItem,\n  category\n}) => {\n  const addToDashboard = ({\n    type,\n    content\n  }) => () => {\n    acAddDashboardItem({\n      type,\n      content\n    });\n  };\n\n  return <>\n            <HeaderMenuItem title={category.header} />\n            {category.items.map(item => <ContentMenuItem key={item.type} type={item.type} name={item.name} onInsert={addToDashboard(item)} />)}\n        </>;\n};\nSinglesMenuGroup.propTypes = {\n  acAddDashboardItem: PropTypes.func,\n  category: PropTypes.object\n};\nexport default connect(null, {\n  acAddDashboardItem\n})(SinglesMenuGroup);","import React, { useState, useEffect, createRef } from 'react';\nimport { Popover, FlyoutMenu } from '@dhis2/ui';\nimport { useD2 } from '@dhis2/app-runtime-adapter-d2';\nimport ItemSearchField from './ItemSearchField';\nimport CategorizedMenuGroup from './CategorizedMenuGroup';\nimport SinglesMenuGroup from './SinglesMenuGroup';\nimport { singleItems, categorizedItems } from './selectableItems';\nimport { itemTypeMap, getDefaultItemCount } from '../../modules/itemTypes';\nimport classes from './styles/ItemSelector.module.css';\n\nconst ItemSelector = () => {\n  const [isOpen, setIsOpen] = useState(false);\n  const [filter, setFilter] = useState('');\n  const [items, setItems] = useState(null);\n  const [maxOptions, setMaxOptions] = useState(new Set());\n  const {\n    d2\n  } = useD2({});\n  useEffect(() => {\n    let queryString = '?count=11';\n\n    if ([...maxOptions.values()].length) {\n      queryString += '&max=' + [...maxOptions.values()].join('&max=');\n    }\n\n    const filterStr = filter ? `/${filter}` : '';\n    d2.Api.getApi().get(`dashboards/q${filterStr}${queryString}`).then(response => setItems(response)).catch(console.error);\n  }, [filter, maxOptions]);\n\n  const closeMenu = () => {\n    setIsOpen(false);\n    setFilter('');\n    setMaxOptions(new Set());\n  };\n\n  const openMenu = () => setIsOpen(true);\n\n  const getCategorizedMenuGroups = () => {\n    return categorizedItems.filter(type => {\n      const itemType = itemTypeMap[type];\n      return items && items[itemType.endPointName];\n    }).map(type => {\n      const itemType = itemTypeMap[type];\n      const itemCount = getDefaultItemCount(type);\n      const allItems = items[itemType.endPointName];\n      const hasMore = allItems.length > itemCount;\n      const displayItems = maxOptions.has(itemType.id) ? allItems : allItems.slice(0, itemCount);\n      return <CategorizedMenuGroup key={type} type={type} title={itemType.pluralTitle} items={displayItems} onChangeItemsLimit={updateMaxOptions} hasMore={hasMore} />;\n    });\n  };\n\n  const getSinglesMenuGroups = () => singleItems.map(category => <SinglesMenuGroup key={category.id} category={category} />);\n\n  const getMenuGroups = () => getCategorizedMenuGroups().concat(getSinglesMenuGroups());\n\n  const updateMaxOptions = type => {\n    if (type) {\n      const options = new Set(maxOptions);\n      options.has(type) ? options.delete(type) : options.add(type);\n      setMaxOptions(options);\n    } else {\n      setMaxOptions(new Set());\n    }\n  };\n\n  const updateFilter = ({\n    value\n  }) => setFilter(value);\n\n  const inputRef = createRef();\n  return <>\n            <span ref={inputRef}>\n                <ItemSearchField value={filter} onChange={updateFilter} onFocus={openMenu} />\n            </span>\n            {isOpen && <Popover reference={inputRef} placement=\"bottom-start\" onClickOutside={closeMenu} arrow={false} maxWidth={700}>\n                    <FlyoutMenu className={classes.menu} dataTest=\"item-menu\" maxWidth=\"700px\">\n                        {getMenuGroups()}\n                    </FlyoutMenu>\n                </Popover>}\n        </>;\n};\n\nexport default ItemSelector;","import React from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport i18n from '@dhis2/d2-i18n';\nimport { InputField, TextAreaField } from '@dhis2/ui';\nimport ItemSelector from '../ItemSelector/ItemSelector';\nimport { acSetDashboardTitle, acSetDashboardDescription } from '../../actions/editDashboard';\nimport { orObject } from '../../modules/util';\nimport { sGetEditDashboardRoot } from '../../reducers/editDashboard';\nimport classes from './styles/EditTitleBar.module.css';\nexport const EditTitleBar = ({\n  name,\n  description,\n  onChangeTitle,\n  onChangeDescription\n}) => {\n  const updateTitle = (_, e) => {\n    onChangeTitle(e.target.value);\n  };\n\n  const updateDescription = (_, e) => {\n    onChangeDescription(e.target.value);\n  };\n\n  return <section className={classes.section}>\n            <div className={classes.titleDescription}>\n                <InputField className={classes.title} name=\"Dashboard title input\" label={i18n.t('Dashboard title')} type=\"text\" onChange={updateTitle} value={name} placeholder={i18n.t('Untitled dashboard')} dataTest=\"dashboard-title-input\" />\n                <TextAreaField className={classes.description} name=\"Dashboard description input\" label={i18n.t('Dashboard description')} onChange={updateDescription} value={description} dataTest=\"dashboard-description-input\" />\n            </div>\n            <div className={classes.itemSelector}>\n                <ItemSelector />\n            </div>\n        </section>;\n};\nEditTitleBar.propTypes = {\n  onChangeDescription: PropTypes.func.isRequired,\n  onChangeTitle: PropTypes.func.isRequired,\n  description: PropTypes.string,\n  name: PropTypes.string\n};\nEditTitleBar.defaultProps = {\n  name: '',\n  description: ''\n};\n\nconst mapStateToProps = state => {\n  const selectedDashboard = orObject(sGetEditDashboardRoot(state));\n  return {\n    name: selectedDashboard.name,\n    description: selectedDashboard.description\n  };\n};\n\nconst mapDispatchToProps = {\n  onChangeTitle: acSetDashboardTitle,\n  onChangeDescription: acSetDashboardDescription\n};\nexport default connect(mapStateToProps, mapDispatchToProps)(EditTitleBar);","import React, { useState } from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport i18n from '@dhis2/d2-i18n';\nimport { Responsive as ResponsiveReactGridLayout } from 'react-grid-layout';\nimport { Layer, CenteredContent, CircularLoader } from '@dhis2/ui';\nimport cx from 'classnames';\nimport { acUpdateDashboardLayout } from '../../actions/editDashboard';\nimport { Item } from '../Item/Item';\nimport { resize as pluginResize } from '../Item/VisualizationItem/Visualization/plugin';\nimport { isVisualizationType } from '../../modules/itemTypes';\nimport { GRID_ROW_HEIGHT_PX, GRID_COMPACT_TYPE, MARGIN_PX, GRID_PADDING_PX, GRID_COLUMNS, hasShape, getGridWidth } from '../../modules/gridUtil';\nimport { getBreakpoint } from '../../modules/smallScreen';\nimport getGridItemDomId from '../../modules/getGridItemDomId';\nimport { orArray } from '../../modules/util';\nimport NoContentMessage from '../../widgets/NoContentMessage';\nimport { sGetSelectedIsLoading } from '../../reducers/selected';\nimport { sGetEditDashboardRoot, sGetEditDashboardItems } from '../../reducers/editDashboard';\nimport ProgressiveLoadingContainer from '../Item/ProgressiveLoadingContainer';\nimport { EDIT } from '../Dashboard/dashboardModes';\nimport { useWindowDimensions } from '../WindowDimensionsProvider';\nimport 'react-grid-layout/css/styles.css';\nimport 'react-resizable/css/styles.css';\nimport './styles/ItemGrid.css';\n\nconst EditItemGrid = ({\n  isLoading,\n  dashboardItems,\n  acUpdateDashboardLayout\n}) => {\n  const [gridWidth, setGridWidth] = useState(0);\n  const {\n    width\n  } = useWindowDimensions();\n\n  const onLayoutChange = newLayout => {\n    acUpdateDashboardLayout(newLayout);\n  };\n\n  const onResizeStop = (layout, oldItem, newItem) => {\n    const el = document.querySelector(`#${getGridItemDomId(newItem.i)}`) || {};\n    if (typeof el.setViewportSize === 'function') setTimeout(() => el.setViewportSize(el.clientWidth - 5, el.clientHeight - 5), 10);\n    const dashboardItem = dashboardItems.find(item => item.id === newItem.i); // call resize on the item component if it's a plugin type\n\n    if (dashboardItem && isVisualizationType(dashboardItem)) {\n      pluginResize(dashboardItem);\n    }\n  };\n\n  const getItemComponent = item => <ProgressiveLoadingContainer key={item.i} className={cx(item.type, 'edit')} itemId={item.id}>\n            <Item item={item} gridWidth={gridWidth} dashboardMode={EDIT} />\n        </ProgressiveLoadingContainer>;\n\n  const getItemComponents = items => items.map(item => getItemComponent(item));\n\n  const onWidthChanged = containerWidth => {\n    setTimeout(() => {\n      setGridWidth(containerWidth);\n    }, 200);\n  };\n\n  if (!isLoading && !dashboardItems.length) {\n    return <NoContentMessage text={i18n.t('There are no items on this dashboard')} />;\n  }\n\n  return <>\n            {isLoading ? <Layer translucent>\n                    <CenteredContent>\n                        <CircularLoader />\n                    </CenteredContent>\n                </Layer> : null}\n            <ResponsiveReactGridLayout rowHeight={GRID_ROW_HEIGHT_PX} width={getGridWidth(width)} cols={{\n      lg: GRID_COLUMNS\n    }} breakpoints={{\n      lg: getBreakpoint()\n    }} layouts={{\n      lg: dashboardItems\n    }} compactType={GRID_COMPACT_TYPE} margin={MARGIN_PX} containerPadding={{\n      lg: GRID_PADDING_PX\n    }} onLayoutChange={onLayoutChange} onResizeStop={onResizeStop} onWidthChange={onWidthChanged} isDraggable={true} isResizable={true} draggableCancel=\"input,textarea\">\n                {getItemComponents(dashboardItems)}\n            </ResponsiveReactGridLayout>\n        </>;\n};\n\nEditItemGrid.propTypes = {\n  acUpdateDashboardLayout: PropTypes.func,\n  dashboardItems: PropTypes.array,\n  isLoading: PropTypes.bool\n}; // Container\n\nconst mapStateToProps = state => {\n  const selectedDashboard = sGetEditDashboardRoot(state);\n  const dashboardItems = orArray(sGetEditDashboardItems(state)).filter(hasShape);\n  return {\n    isLoading: sGetSelectedIsLoading(state) || !selectedDashboard,\n    dashboardItems\n  };\n};\n\nconst mapDispatchToProps = {\n  acUpdateDashboardLayout\n};\nexport default connect(mapStateToProps, mapDispatchToProps)(EditItemGrid);","import React from 'react';\nimport PropTypes from 'prop-types';\nimport i18n from '@dhis2/d2-i18n';\nimport { Button, Modal, ModalContent, ModalActions, ButtonStrip, ModalTitle } from '@dhis2/ui';\nimport classes from './styles/ConfirmDeleteDialog.module.css';\nexport const ConfirmDeleteDialog = ({\n  dashboardName,\n  onDeleteConfirmed,\n  onContinueEditing,\n  open\n}) => {\n  const actions = [<Button key=\"cancel\" secondary onClick={onContinueEditing} dataTest=\"cancel-delete-dashboard\">\n            {i18n.t('Cancel')}\n        </Button>, <Button key=\"delete\" destructive onClick={onDeleteConfirmed} dataTest=\"confirm-delete-dashboard\">\n            {i18n.t('Delete')}\n        </Button>];\n  return open && <Modal onClose={onContinueEditing} small position=\"middle\">\n                <ModalTitle>{i18n.t('Delete dashboard')}</ModalTitle>\n                <ModalContent>\n                    <span className={classes.content}>\n                        {i18n.t('Deleting dashboard \"{{ dashboardName }}\" will remove it for all users. This action cannot be undone. Are you sure you want to permanently delete this dashboard?', {\n          dashboardName\n        })}\n                    </span>\n                </ModalContent>\n                <ModalActions>\n                    <ButtonStrip>{actions}</ButtonStrip>\n                </ModalActions>\n            </Modal>;\n};\nConfirmDeleteDialog.propTypes = {\n  dashboardName: PropTypes.string,\n  open: PropTypes.bool,\n  onContinueEditing: PropTypes.func,\n  onDeleteConfirmed: PropTypes.func\n};\nexport default ConfirmDeleteDialog;","import React, { useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { Redirect } from 'react-router-dom';\nimport i18n from '@dhis2/d2-i18n';\nimport TranslationDialog from '@dhis2/d2-ui-translation-dialog';\nimport { Button, ButtonStrip } from '@dhis2/ui';\nimport { useDataEngine, useAlert } from '@dhis2/app-runtime';\nimport { useD2 } from '@dhis2/app-runtime-adapter-d2';\nimport ConfirmDeleteDialog from './ConfirmDeleteDialog';\nimport { tSaveDashboard, acClearEditDashboard, acSetPrintPreviewView, acClearPrintPreviewView } from '../../actions/editDashboard';\nimport { acClearPrintDashboard } from '../../actions/printDashboard';\nimport { tDeleteDashboard, acSetDashboardDisplayName } from '../../actions/dashboards';\nimport { sGetEditDashboardRoot, sGetIsNewDashboard, sGetIsPrintPreviewView } from '../../reducers/editDashboard';\nimport { apiFetchDashboard } from '../../api/dashboards';\nimport classes from './styles/EditBar.module.css';\nconst saveFailedMessage = i18n.t('Failed to save dashboard. You might be offline or not have access to edit this dashboard.');\n\nconst EditBar = props => {\n  const {\n    d2\n  } = useD2({});\n  const dataEngine = useDataEngine();\n  const [translationDlgIsOpen, setTranslationDlgIsOpen] = useState(false);\n  const [dashboard, setDashboard] = useState(undefined);\n  const [confirmDeleteDlgIsOpen, setConfirmDeleteDlgIsOpen] = useState(false);\n  const [redirectUrl, setRedirectUrl] = useState(undefined);\n  const failureAlert = useAlert(saveFailedMessage, {\n    critical: true\n  });\n  useEffect(() => {\n    if (props.dashboardId && !dashboard) {\n      apiFetchDashboard(dataEngine, props.dashboardId).then(dboard => setDashboard(dboard));\n    }\n  }, [props.dashboardId, dashboard]);\n\n  const onConfirmDelete = () => {\n    setConfirmDeleteDlgIsOpen(true);\n  };\n\n  const onSave = () => {\n    props.saveDashboard().then(newId => {\n      setRedirectUrl(`/${newId}`);\n    }).catch(() => failureAlert.show());\n  };\n\n  const onPrintPreview = () => {\n    if (props.isPrintPreviewView) {\n      props.clearPrintPreview();\n      props.clearPrintDashboard();\n    } else {\n      props.showPrintPreview();\n    }\n  };\n\n  const onDiscard = () => {\n    props.onDiscardChanges();\n    const redirectUrl = props.dashboardId ? `/${props.dashboardId}` : '/';\n    setRedirectUrl(redirectUrl);\n  };\n\n  const onContinueEditing = () => {\n    setConfirmDeleteDlgIsOpen(false);\n  };\n\n  const onDeleteConfirmed = () => {\n    setConfirmDeleteDlgIsOpen(false);\n    props.onDelete(props.dashboardId).then(() => {\n      setRedirectUrl('/');\n    });\n  };\n\n  const onTranslationsSaved = async translations => {\n    if (translations && translations.length) {\n      const dbLocale = await d2.currentUser.userSettings.get('keyDbLocale');\n      const translation = translations.find(t => t.locale === dbLocale && t.property === 'NAME');\n\n      if (translation && translation.value) {\n        props.onTranslate(props.dashboardId, translation.value);\n      }\n    }\n  };\n\n  const toggleTranslationDialog = () => setTranslationDlgIsOpen(!translationDlgIsOpen);\n\n  const confirmDeleteDialog = () => props.deleteAccess && props.dashboardId ? <ConfirmDeleteDialog dashboardName={props.dashboardName} onDeleteConfirmed={onDeleteConfirmed} onContinueEditing={onContinueEditing} open={confirmDeleteDlgIsOpen} /> : null;\n\n  const translationDialog = () => dashboard && dashboard.id ? <TranslationDialog className=\"translation-dialog\" d2={d2} open={translationDlgIsOpen} onRequestClose={toggleTranslationDialog} objectToTranslate={{ ...dashboard,\n    modelDefinition: {\n      name: 'dashboard'\n    }\n  }} fieldsToTranslate={['name', 'description']} onTranslationSaved={onTranslationsSaved} onTranslationError={err => console.log('translation update error', err)} /> : null;\n\n  const renderActionButtons = () => <ButtonStrip>\n            <Button primary onClick={onSave} dataTest=\"save-dashboard-button\">\n                {i18n.t('Save changes')}\n            </Button>\n            <Button onClick={onPrintPreview}>\n                {props.isPrintPreviewView ? i18n.t('Exit Print preview') : i18n.t('Print preview')}\n            </Button>\n\n            {props.dashboardId && <Button onClick={toggleTranslationDialog}>\n                    {i18n.t('Translate')}\n                </Button>}\n            {props.dashboardId && props.deleteAccess && <Button onClick={onConfirmDelete} dataTest=\"delete-dashboard-button\">\n                    {i18n.t('Delete')}\n                </Button>}\n        </ButtonStrip>;\n\n  if (redirectUrl) {\n    return <Redirect to={redirectUrl} />;\n  }\n\n  const {\n    updateAccess\n  } = props;\n  const discardBtnText = updateAccess ? i18n.t('Exit without saving') : i18n.t('Go to dashboards');\n  return <>\n            <div className={classes.editBar}>\n                <div className={classes.controls}>\n                    {updateAccess ? renderActionButtons() : null}\n                    <Button secondary onClick={onDiscard}>\n                        {discardBtnText}\n                    </Button>\n                </div>\n            </div>\n            {translationDialog()}\n            {confirmDeleteDialog()}\n        </>;\n};\n\nEditBar.propTypes = {\n  clearPrintDashboard: PropTypes.func,\n  clearPrintPreview: PropTypes.func,\n  dashboardId: PropTypes.string,\n  dashboardName: PropTypes.string,\n  deleteAccess: PropTypes.bool,\n  isPrintPreviewView: PropTypes.bool,\n  saveDashboard: PropTypes.func,\n  showPrintPreview: PropTypes.func,\n  updateAccess: PropTypes.bool,\n  onDelete: PropTypes.func,\n  onDiscardChanges: PropTypes.func,\n  onTranslate: PropTypes.func\n};\n\nconst mapStateToProps = state => {\n  const dashboard = sGetEditDashboardRoot(state);\n  let deleteAccess;\n  let updateAccess;\n\n  if (sGetIsNewDashboard(state)) {\n    deleteAccess = true;\n    updateAccess = true;\n  } else {\n    updateAccess = dashboard.access ? dashboard.access.update : false;\n    deleteAccess = dashboard.access ? dashboard.access.delete : false;\n  }\n\n  return {\n    dashboardId: dashboard.id,\n    dashboardName: dashboard.name,\n    deleteAccess,\n    isPrintPreviewView: sGetIsPrintPreviewView(state),\n    updateAccess\n  };\n};\n\nconst mapDispatchToProps = dispatch => ({\n  clearPrintDashboard: () => dispatch(acClearPrintDashboard()),\n  clearPrintPreview: () => dispatch(acClearPrintPreviewView()),\n  saveDashboard: () => dispatch(tSaveDashboard()).then(id => id),\n  onDelete: id => dispatch(tDeleteDashboard(id)),\n  onDiscardChanges: () => dispatch(acClearEditDashboard()),\n  onTranslate: (id, value) => dispatch(acSetDashboardDisplayName(id, value)),\n  showPrintPreview: () => dispatch(acSetPrintPreviewView())\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(EditBar);","import React from 'react';\nimport PropTypes from 'prop-types';\nimport i18n from '@dhis2/d2-i18n';\nimport { NoticeBox, CenteredContent } from '@dhis2/ui';\nimport classes from './styles/NotSupportedNotice.module.css';\n\nconst NotSupportedNotice = ({\n  message\n}) => <CenteredContent position=\"top\">\n        <div className={classes.noticeContainer}>\n            <NoticeBox title={i18n.t('Not supported')} warning>\n                {message}\n            </NoticeBox>\n        </div>\n    </CenteredContent>;\n\nNotSupportedNotice.propTypes = {\n  message: PropTypes.string\n};\nexport default NotSupportedNotice;","import React from 'react';\nimport PropTypes from 'prop-types';\nimport i18n from '@dhis2/d2-i18n';\nimport classes from './styles/PrintInfo.module.css';\n\nconst PrintInfo = ({\n  isLayout\n}) => {\n  const layoutStyle = isLayout ? i18n.t('dashboard layout') : i18n.t('one item per page');\n  return <div className={classes.container}>\n            <p className={classes.title}>\n                {`${i18n.t('Print Preview')}: ${layoutStyle}`}\n            </p>\n            <div className={classes.printSuggestions}>\n                <p>{`${i18n.t('For best print results')}:`}</p>\n                <ul>\n                    <li>{i18n.t('Use Chrome or Edge web browser')}</li>\n                    <li>\n                        {i18n.t('Wait for all dashboard items to load before printing')}\n                    </li>\n                    <li>\n                        {i18n.t('Use A4 landscape paper size and default margin settings in the browser print dialog')}\n                    </li>\n                </ul>\n            </div>\n            <hr className={classes.divider} />\n        </div>;\n};\n\nPrintInfo.propTypes = {\n  isLayout: PropTypes.bool\n};\nexport default PrintInfo;","import React from 'react';\nimport { colors } from '@dhis2/ui';\n\nconst LessHorizontalIcon = () => <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" fill={colors.grey600} viewBox=\"0 0 24 24\">\n        <path d=\"m13.2928932 6.29289322c.3905243-.39052429 1.0236893-.39052429 1.4142136 0 .3604839.36048396.3882135.92771502.0831886 1.32000622l-.0831886.09420734-4.2921068 4.29289322 4.2921068 4.2928932c.3604839.360484.3882135.927715.0831886 1.3200062l-.0831886.0942074c-.360484.3604839-.927715.3882135-1.3200062.0831886l-.0942074-.0831886-4.99999998-5c-.36048396-.360484-.3882135-.927715-.08318861-1.3200062l.08318861-.0942074z\" />\n    </svg>;\n\nexport default LessHorizontalIcon;","import React from 'react';\nimport PropTypes from 'prop-types';\nimport i18n from '@dhis2/d2-i18n';\nimport { Button } from '@dhis2/ui';\nimport { Link } from 'react-router-dom';\nimport LessHorizontalIcon from '../../icons/LessHorizontal';\nimport { useWindowDimensions } from '../WindowDimensionsProvider';\nimport { isSmallScreen } from '../../modules/smallScreen';\nimport classes from './styles/PrintActionsBar.module.css'; // set in PrintActionsBar.module.css\n\nexport const PRINT_ACTIONS_BAR_HEIGHT = 44;\nexport const PRINT_ACTIONS_BAR_HEIGHT_SM = 36;\n\nconst PrintActionsBar = ({\n  id\n}) => {\n  const {\n    width\n  } = useWindowDimensions();\n  const isSmall = isSmallScreen(width);\n  return <>\n            <div className={classes.container}>\n                <div className={classes.inner}>\n                    <Link className={classes.link} to={`/${id}`}>\n                        <Button small={isSmall}>\n                            <LessHorizontalIcon />\n                            {i18n.t('Exit print preview')}\n                        </Button>\n                    </Link>\n                    <Button small={isSmall} onClick={window.print}>\n                        {i18n.t('Print')}\n                    </Button>\n                </div>\n            </div>\n            <div className={classes.topMargin} />\n        </>;\n};\n\nPrintActionsBar.propTypes = {\n  id: PropTypes.string\n};\nexport default PrintActionsBar;","import sortBy from 'lodash/sortBy';\nimport { orArray } from './util';\nimport { itemTypeMap } from './itemTypes'; // for A4 landscape (297x210mm)\n// 794 px = (21cm / 2.54) * 96 pixels/inch\n// 1122 px = 29.7 /2.54 * 96 pixels/inch\n// const a4LandscapeHeightPx = 794\n\nexport const A4_LANDSCAPE_WIDTH_PX = 1102;\nexport const getTransformYPx = elStyle => {\n  if (!elStyle || !elStyle.transform) {\n    return null;\n  } // find valid transforms - those with y pixels\n  // the code is expecting the transform prop to\n  // look like:  translate(10px, 300px)\n\n\n  const transformY = elStyle.transform.split(' ')[1]?.match(/(\\d+)px/);\n\n  if (transformY) {\n    return parseInt(transformY[1]);\n  } else {\n    return null;\n  }\n};\nexport const getDomGridItemsSortedByYPos = elements => {\n  const types = Object.keys(itemTypeMap);\n  const elementsWithBoundingRect = orArray(elements).map(el => {\n    const type = Array.from(el.classList).find(className => types.indexOf(className) > -1);\n    const rect = el.getBoundingClientRect();\n    const y = getTransformYPx(el.style) || parseInt(rect.y);\n    return {\n      type,\n      classList: el.classList,\n      bottomY: y + parseInt(rect.height),\n      el\n    };\n  });\n  return sortBy(elementsWithBoundingRect, ['bottomY']);\n};\n\nconst isLeapPage = n => {\n  // pages 5,9,13,17,21,25,29... are leap pages\n  let x = 0;\n  const startPage = 1;\n\n  const getMultiple = factor => startPage + 4 * factor;\n\n  let multiple = getMultiple(0);\n  let isLeapPage = false;\n\n  while (multiple < n) {\n    multiple = getMultiple(x);\n    ++x;\n\n    if (multiple === n) {\n      isLeapPage = true;\n      break;\n    }\n  }\n\n  return isLeapPage;\n};\n\nexport const getPageBreakPositions = items => {\n  // add enough page breaks so that each item could\n  // be put on its own page. Due to the react-grid-layout\n  // unit system, we have to estimate roughly the size of each\n  // page. At regular intervals add a unit, like a leap year\n  const yPosList = [];\n  let yPos = 0;\n\n  for (let pageNum = 1; pageNum <= items.length; ++pageNum) {\n    if (pageNum === 1) {\n      yPos += 35;\n    } else if (isLeapPage(pageNum)) {\n      yPos += 40;\n    } else {\n      yPos += 39;\n    }\n\n    yPosList.push(yPos);\n  }\n\n  return yPosList;\n};","import React from 'react';\nimport PropTypes from 'prop-types';\nimport cx from 'classnames';\nimport ReactGridLayout from 'react-grid-layout';\nimport i18n from '@dhis2/d2-i18n';\nimport { Layer, CenteredContent, CircularLoader } from '@dhis2/ui';\nimport NoContentMessage from '../../widgets/NoContentMessage';\nimport { GRID_ROW_HEIGHT_PX, GRID_COMPACT_TYPE, MARGIN_PX, GRID_COLUMNS } from '../../modules/gridUtil';\nimport { A4_LANDSCAPE_WIDTH_PX } from '../../modules/printUtils';\nimport 'react-grid-layout/css/styles.css';\nimport 'react-resizable/css/styles.css';\nimport './styles/ItemGrid.css';\n\nconst StaticGrid = ({\n  layout,\n  children,\n  onLayoutChange,\n  className,\n  isLoading\n}) => {\n  if (!isLoading && !layout.length) {\n    return <NoContentMessage text={i18n.t('There are no items on this dashboard')} />;\n  }\n\n  return <>\n            {isLoading ? <Layer translucent>\n                    <CenteredContent>\n                        <CircularLoader />\n                    </CenteredContent>\n                </Layer> : null}\n            <ReactGridLayout margin={MARGIN_PX} cols={GRID_COLUMNS} rowHeight={GRID_ROW_HEIGHT_PX} width={A4_LANDSCAPE_WIDTH_PX} compactType={GRID_COMPACT_TYPE} isDraggable={false} isResizable={false} draggableCancel=\"input,textarea\" className={cx('layout', className)} layout={layout} onLayoutChange={onLayoutChange}>\n                {children}\n            </ReactGridLayout>\n        </>;\n};\n\nStaticGrid.defaultProps = {\n  onLayoutChange: Function.prototype\n};\nStaticGrid.propTypes = {\n  children: PropTypes.node,\n  className: PropTypes.string,\n  isLoading: PropTypes.bool,\n  layout: PropTypes.array,\n  onLayoutChange: PropTypes.func\n};\nexport default StaticGrid;","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport sortBy from 'lodash/sortBy';\nimport cx from 'classnames';\nimport StaticGrid from './StaticGrid';\nimport { Item } from '../Item/Item';\nimport { acUpdatePrintDashboardLayout } from '../../actions/printDashboard';\nimport { sGetSelectedIsLoading } from '../../reducers/selected';\nimport { sGetPrintDashboardRoot, sGetPrintDashboardItems } from '../../reducers/printDashboard';\nimport { sGetIsEditing } from '../../reducers/editDashboard';\nimport { hasShape } from '../../modules/gridUtil';\nimport { getDomGridItemsSortedByYPos, getTransformYPx } from '../../modules/printUtils';\nimport { PRINT_LAYOUT } from '../Dashboard/dashboardModes';\nimport { PAGEBREAK } from '../../modules/itemTypes';\nexport class PrintLayoutItemGrid extends Component {\n  onLayoutChange = newLayout => {\n    this.props.updateDashboardLayout(newLayout);\n  };\n  isFirstPageBreak = item => {\n    if (item.type !== PAGEBREAK) {\n      return false;\n    }\n\n    const pageBreaks = this.props.dashboardItems.filter(i => i.type === PAGEBREAK);\n    const sortedPageBreaks = sortBy(pageBreaks, ['y']);\n    return item.y === sortedPageBreaks[0].y;\n  };\n  getItemComponent = item => {\n    // the first-page-break class is used in Edit print preview\n    const itemClassNames = cx('print', 'layout', `${item.type}`, {\n      'first-page-break': this.props.isEditing && this.isFirstPageBreak(item),\n      shortened: !!item.shortened\n    });\n    return <div key={item.i} className={itemClassNames}>\n                <Item item={item} dashboardMode={PRINT_LAYOUT} />\n            </div>;\n  };\n  getItemComponents = items => items.map(item => this.getItemComponent(item));\n\n  hideExtraPageBreaks() {\n    const sortedElements = getDomGridItemsSortedByYPos(Array.from(document.querySelectorAll('.react-grid-item')));\n    let pageBreakBottom = 0;\n    let lastItemBottom = 0;\n    let foundNonPageBreak = false;\n\n    for (let i = sortedElements.length - 1; i >= 0; --i) {\n      const item = sortedElements[i];\n\n      if (item.type === PAGEBREAK) {\n        if (!foundNonPageBreak) {\n          item.el.classList.add('removed');\n        } else {\n          pageBreakBottom = item.bottomY;\n          break;\n        }\n      } else {\n        foundNonPageBreak = true;\n        const thisItemBottom = item.bottomY;\n\n        if (thisItemBottom > lastItemBottom) {\n          lastItemBottom = thisItemBottom;\n        }\n      }\n    }\n\n    const pageHeight = 720;\n    const gridElement = document.querySelector('.react-grid-layout'); // the last page break is before the last item(s) so\n    // maxHeight is one page beyond the last page break\n\n    const maxHeight = pageBreakBottom + pageHeight;\n\n    if (gridElement) {\n      gridElement.style.height = `${maxHeight}px`;\n    }\n\n    if (this.props.isEditing) {\n      //scroll to below the title page - which is middle of the first pagebreak\n      const firstBreak = document.querySelector('.first-page-break');\n\n      if (firstBreak && firstBreak.style && firstBreak.style.transform) {\n        const yPos = getTransformYPx(firstBreak.style);\n        const scrollArea = document.querySelector('.scroll-area');\n        scrollArea && scrollArea.scroll(0, yPos + 50);\n      }\n    }\n  }\n\n  componentDidMount() {\n    this.hideExtraPageBreaks();\n  }\n\n  componentDidUpdate() {\n    this.hideExtraPageBreaks();\n  }\n\n  render() {\n    const {\n      isLoading,\n      dashboardItems\n    } = this.props;\n    return <StaticGrid isLoading={isLoading} layout={dashboardItems} onLayoutChange={this.onLayoutChange}>\n                {this.getItemComponents(dashboardItems)}\n            </StaticGrid>;\n  }\n\n}\nPrintLayoutItemGrid.propTypes = {\n  dashboardItems: PropTypes.array,\n  isEditing: PropTypes.bool,\n  isLoading: PropTypes.bool,\n  updateDashboardLayout: PropTypes.func\n};\nPrintLayoutItemGrid.defaultProps = {\n  dashboardItems: []\n};\n\nconst mapStateToProps = state => {\n  const selectedDashboard = sGetPrintDashboardRoot(state);\n  return {\n    isLoading: sGetSelectedIsLoading(state) || !selectedDashboard,\n    dashboardItems: sGetPrintDashboardItems(state).filter(hasShape),\n    isEditing: sGetIsEditing(state)\n  };\n};\n\nexport default connect(mapStateToProps, {\n  updateDashboardLayout: acUpdatePrintDashboardLayout\n})(PrintLayoutItemGrid);","import React, { useEffect } from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { spacers } from '@dhis2/ui';\nimport cx from 'classnames';\nimport PrintInfo from './PrintInfo';\nimport PrintActionsBar, { PRINT_ACTIONS_BAR_HEIGHT, PRINT_ACTIONS_BAR_HEIGHT_SM } from './PrintActionsBar';\nimport PrintLayoutItemGrid from '../ItemGrid/PrintLayoutItemGrid';\nimport { acSetPrintDashboard, acAddPrintDashboardItem, acUpdatePrintDashboardItem } from '../../actions/printDashboard';\nimport { sGetSelectedId } from '../../reducers/selected';\nimport { sGetEditDashboardRoot, sGetEditDashboardItems } from '../../reducers/editDashboard';\nimport { sGetDashboardById, sGetDashboardItems } from '../../reducers/dashboards';\nimport { PAGEBREAK, PRINT_TITLE_PAGE } from '../../modules/itemTypes';\nimport { MAX_ITEM_GRID_HEIGHT } from '../../modules/gridUtil';\nimport { getControlBarHeight, HEADERBAR_HEIGHT } from '../ControlBar/controlBarDimensions';\nimport { DRAG_HANDLE_HEIGHT } from '../ControlBar/ControlBar';\nimport { useWindowDimensions } from '../WindowDimensionsProvider';\nimport { isSmallScreen } from '../../modules/smallScreen';\nimport { getPageBreakPositions } from '../../modules/printUtils';\nimport classes from './styles/PrintLayoutDashboard.module.css';\nimport './styles/print.css';\nimport './styles/print-layout.css';\nconst EDIT_BAR_HEIGHT = getControlBarHeight(1) + DRAG_HANDLE_HEIGHT;\n\nconst addPageBreaks = (items, addDashboardItem) => {\n  const yPosList = getPageBreakPositions(items);\n\n  for (let i = 0; i < items.length; ++i) {\n    addDashboardItem({\n      type: PAGEBREAK,\n      yPos: yPosList[i]\n    });\n  }\n};\n\nconst PrintLayoutDashboard = ({\n  dashboard,\n  items,\n  setPrintDashboard,\n  addDashboardItem,\n  updateDashboardItem,\n  fromEdit\n}) => {\n  const {\n    width,\n    height\n  } = useWindowDimensions();\n  const actionBarHeight = isSmallScreen(width) ? PRINT_ACTIONS_BAR_HEIGHT_SM : PRINT_ACTIONS_BAR_HEIGHT;\n  useEffect(() => {\n    if (dashboard) {\n      setPrintDashboard(dashboard, items); // If any items are taller than one page, reduce it to one\n      // page (react-grid-layout units)\n\n      items.forEach(item => {\n        if (item.h > MAX_ITEM_GRID_HEIGHT) {\n          item.shortened = true;\n          updateDashboardItem(Object.assign({}, item, {\n            h: MAX_ITEM_GRID_HEIGHT\n          }));\n        }\n      });\n      addPageBreaks(items, addDashboardItem);\n      addDashboardItem({\n        type: PRINT_TITLE_PAGE,\n        isOneItemPerPage: false\n      });\n    }\n  }, [dashboard, items]);\n\n  const getWrapperStyle = () => {\n    return fromEdit ? {\n      paddingTop: spacers.dp24,\n      height: height - EDIT_BAR_HEIGHT - HEADERBAR_HEIGHT\n    } : {\n      height: height - actionBarHeight\n    };\n  };\n\n  return <>\n            {!fromEdit && <PrintActionsBar id={dashboard.id} />}\n            <div className={cx(classes.wrapper, 'scroll-area')} style={getWrapperStyle()}>\n                {!fromEdit && <PrintInfo isLayout={true} />}\n                <div className={classes.pageOuter} data-test=\"print-layout-page\">\n                    <PrintLayoutItemGrid />\n                </div>\n            </div>\n        </>;\n};\n\nPrintLayoutDashboard.propTypes = {\n  addDashboardItem: PropTypes.func,\n  dashboard: PropTypes.object,\n  fromEdit: PropTypes.bool,\n  items: PropTypes.array,\n  setPrintDashboard: PropTypes.func,\n  updateDashboardItem: PropTypes.func\n};\n\nconst mapStateToProps = (state, ownProps) => {\n  const id = sGetSelectedId(state);\n\n  if (ownProps.fromEdit) {\n    const dashboard = sGetEditDashboardRoot(state);\n    return {\n      dashboard,\n      id,\n      items: sGetEditDashboardItems(state)\n    };\n  }\n\n  const dashboard = id ? sGetDashboardById(state, id) : null;\n  return {\n    dashboard,\n    id,\n    items: sGetDashboardItems(state)\n  };\n};\n\nexport default connect(mapStateToProps, {\n  setPrintDashboard: acSetPrintDashboard,\n  addDashboardItem: acAddPrintDashboardItem,\n  updateDashboardItem: acUpdatePrintDashboardItem\n})(PrintLayoutDashboard);","import React, { useEffect } from 'react';\nimport { connect } from 'react-redux';\nimport i18n from '@dhis2/d2-i18n';\nimport PropTypes from 'prop-types';\nimport EditTitleBar from '../TitleBar/EditTitleBar';\nimport EditItemGrid from '../ItemGrid/EditItemGrid';\nimport EditBar from '../ControlBar/EditBar';\nimport NotSupportedNotice from './NotSupportedNotice';\nimport { useWindowDimensions } from '../WindowDimensionsProvider';\nimport LayoutPrintPreview from './PrintLayoutDashboard';\nimport NoContentMessage from '../../widgets/NoContentMessage';\nimport { acSetEditDashboard } from '../../actions/editDashboard';\nimport { sGetSelectedId } from '../../reducers/selected';\nimport { sGetDashboardById, sGetDashboardItems } from '../../reducers/dashboards';\nimport { sGetIsPrintPreviewView } from '../../reducers/editDashboard';\nimport { getControlBarHeight, HEADERBAR_HEIGHT } from '../ControlBar/controlBarDimensions';\nimport { isSmallScreen } from '../../modules/smallScreen';\n\nconst EditDashboard = props => {\n  const {\n    width,\n    height\n  } = useWindowDimensions();\n  useEffect(() => {\n    if (props.dashboard) {\n      props.setEditDashboard(props.dashboard, props.items);\n    }\n  }, [props.dashboard]);\n\n  const renderGrid = () => {\n    if (props.isPrintPreviewView) {\n      return <LayoutPrintPreview fromEdit={true} />;\n    }\n\n    const dashboardHeight = height - HEADERBAR_HEIGHT - getControlBarHeight(1);\n    return <div className=\"dashboard-wrapper\" style={{\n      height: dashboardHeight\n    }}>\n                <EditTitleBar />\n                <EditItemGrid />\n            </div>;\n  };\n\n  const renderEditView = () => <>\n            <EditBar />\n            {props.updateAccess ? renderGrid() : <NoContentMessage text={i18n.t('No access')} />}\n        </>;\n\n  return <>\n            {isSmallScreen(width) ? <NotSupportedNotice message={i18n.t('Editing dashboards on small screens is not supported. Resize your screen to return to edit mode.')} /> : renderEditView()}\n        </>;\n};\n\nEditDashboard.propTypes = {\n  dashboard: PropTypes.object,\n  isPrintPreviewView: PropTypes.bool,\n  items: PropTypes.array,\n  setEditDashboard: PropTypes.func,\n  updateAccess: PropTypes.bool\n};\n\nconst mapStateToProps = state => {\n  const id = sGetSelectedId(state);\n  const dashboard = id ? sGetDashboardById(state, id) : null;\n  const updateAccess = dashboard && dashboard.access ? dashboard.access.update : false;\n  return {\n    dashboard,\n    updateAccess,\n    items: sGetDashboardItems(state),\n    isPrintPreviewView: sGetIsPrintPreviewView(state)\n  };\n};\n\nexport default connect(mapStateToProps, {\n  setEditDashboard: acSetEditDashboard\n})(EditDashboard);","import React, { useEffect } from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport i18n from '@dhis2/d2-i18n';\nimport EditBar from '../ControlBar/EditBar';\nimport EditTitleBar from '../TitleBar/EditTitleBar';\nimport EditItemGrid from '../ItemGrid/EditItemGrid';\nimport LayoutPrintPreview from './PrintLayoutDashboard';\nimport NotSupportedNotice from './NotSupportedNotice';\nimport { acSetEditNewDashboard } from '../../actions/editDashboard';\nimport { sGetIsPrintPreviewView } from '../../reducers/editDashboard';\nimport { getControlBarHeight, HEADERBAR_HEIGHT } from '../ControlBar/controlBarDimensions';\nimport { useWindowDimensions } from '../WindowDimensionsProvider';\nimport { isSmallScreen } from '../../modules/smallScreen';\n\nconst NewDashboard = props => {\n  const {\n    width,\n    height\n  } = useWindowDimensions();\n  useEffect(() => {\n    props.setNewDashboard();\n  }, []);\n  const dashboardHeight = height - HEADERBAR_HEIGHT - getControlBarHeight(1);\n\n  const renderNewView = () => <>\n            <EditBar />\n            {props.isPrintPreviewView ? <LayoutPrintPreview fromEdit={true} /> : <div className=\"dashboard-wrapper\" style={{\n      height: dashboardHeight\n    }}>\n                    <EditTitleBar />\n                    <EditItemGrid />\n                </div>}\n        </>;\n\n  return <>\n            {isSmallScreen(width) ? <NotSupportedNotice message={i18n.t('Creating dashboards on small screens is not supported. Resize your screen to return to create mode.')} /> : renderNewView()}\n        </>;\n};\n\nNewDashboard.propTypes = {\n  isPrintPreviewView: PropTypes.bool,\n  setNewDashboard: PropTypes.func\n};\n\nconst mapStateToProps = state => ({\n  isPrintPreviewView: sGetIsPrintPreviewView(state)\n});\n\nexport default connect(mapStateToProps, {\n  setNewDashboard: acSetEditNewDashboard\n})(NewDashboard);","import React from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport cx from 'classnames';\nimport StaticGrid from './StaticGrid';\nimport { Item } from '../Item/Item';\nimport { hasShape } from '../../modules/gridUtil';\nimport { PRINT } from '../Dashboard/dashboardModes';\nimport { sGetSelectedIsLoading } from '../../reducers/selected';\nimport { sGetPrintDashboardRoot, sGetPrintDashboardItems } from '../../reducers/printDashboard';\nimport { orArray } from '../../modules/util';\n\nconst PrintItemGrid = ({\n  isLoading,\n  dashboardItems\n}) => {\n  const getItemComponent = item => <div key={item.i} className={cx(item.type, 'print', 'oipp')}>\n            <Item item={item} dashboardMode={PRINT} />\n        </div>;\n\n  const getItemComponents = items => items.map(item => getItemComponent(item));\n\n  return <StaticGrid isLoading={isLoading} className=\"print\" layout={dashboardItems}>\n            {getItemComponents(dashboardItems)}\n        </StaticGrid>;\n};\n\nPrintItemGrid.propTypes = {\n  dashboardItems: PropTypes.array,\n  isLoading: PropTypes.bool\n};\n\nconst mapStateToProps = state => {\n  const selectedDashboard = sGetPrintDashboardRoot(state);\n  return {\n    isLoading: sGetSelectedIsLoading(state) || !selectedDashboard,\n    dashboardItems: orArray(sGetPrintDashboardItems(state)).filter(hasShape)\n  };\n};\n\nexport default connect(mapStateToProps)(PrintItemGrid);","import React, { useEffect } from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport sortBy from 'lodash/sortBy';\nimport PrintInfo from './PrintInfo';\nimport PrintActionsBar, { PRINT_ACTIONS_BAR_HEIGHT, PRINT_ACTIONS_BAR_HEIGHT_SM } from './PrintActionsBar';\nimport PrintItemGrid from '../ItemGrid/PrintItemGrid';\nimport { acSetPrintDashboard, acAddPrintDashboardItem, acRemovePrintDashboardItem, acUpdatePrintDashboardItem } from '../../actions/printDashboard';\nimport { sGetSelectedId } from '../../reducers/selected';\nimport { sGetDashboardById, sGetDashboardItems } from '../../reducers/dashboards';\nimport { PAGEBREAK, PRINT_TITLE_PAGE, SPACER } from '../../modules/itemTypes';\nimport { MAX_ITEM_GRID_HEIGHT_OIPP, MAX_ITEM_GRID_WIDTH_OIPP } from '../../modules/gridUtil';\nimport { useWindowDimensions } from '../WindowDimensionsProvider';\nimport { isSmallScreen } from '../../modules/smallScreen';\nimport classes from './styles/PrintDashboard.module.css';\nimport './styles/print.css';\nimport './styles/print-oipp.css';\n\nconst PrintDashboard = ({\n  dashboard,\n  items,\n  setPrintDashboard,\n  addDashboardItem,\n  updateDashboardItem,\n  removeDashboardItem\n}) => {\n  useEffect(() => {\n    if (dashboard) {\n      //sort the items by Y pos so they print in order of top to bottom\n      const sortedItems = sortBy(items, ['y', 'x']);\n      setPrintDashboard(dashboard, sortedItems); // remove spacers - don't want empty pages\n\n      let spacerCount = 0;\n      items.forEach(item => {\n        if (item.type === SPACER) {\n          spacerCount += 1;\n          removeDashboardItem(item.id);\n        }\n      }); // Resize the items to the full page size\n\n      items.forEach(item => {\n        updateDashboardItem(Object.assign({}, item, {\n          w: MAX_ITEM_GRID_WIDTH_OIPP,\n          h: MAX_ITEM_GRID_HEIGHT_OIPP\n        }));\n      }); // insert page breaks into the document flow to create the \"pages\"\n      // when previewing the print\n\n      for (let i = 0; i < (items.length - spacerCount) * 2; i += 2) {\n        addDashboardItem({\n          type: PAGEBREAK,\n          position: i,\n          isStatic: false\n        });\n      }\n\n      addDashboardItem({\n        type: PRINT_TITLE_PAGE,\n        isOneItemPerPage: true\n      });\n    }\n  }, [dashboard, items]);\n  const {\n    width,\n    height\n  } = useWindowDimensions();\n  const availableHeight = height - (isSmallScreen(width) ? PRINT_ACTIONS_BAR_HEIGHT_SM : PRINT_ACTIONS_BAR_HEIGHT);\n  return <>\n            <PrintActionsBar id={dashboard.id} />\n            <div className={classes.wrapper} style={{\n      height: availableHeight\n    }}>\n                <PrintInfo isLayout={false} />\n                <div className={classes.pageOuter} data-test=\"print-oipp-page\">\n                    <PrintItemGrid />\n                </div>\n            </div>\n        </>;\n};\n\nPrintDashboard.propTypes = {\n  addDashboardItem: PropTypes.func,\n  dashboard: PropTypes.object,\n  items: PropTypes.array,\n  removeDashboardItem: PropTypes.func,\n  setPrintDashboard: PropTypes.func,\n  updateDashboardItem: PropTypes.func\n};\n\nconst mapStateToProps = state => {\n  const id = sGetSelectedId(state);\n  const dashboard = id ? sGetDashboardById(state, id) : null;\n  return {\n    dashboard,\n    id,\n    items: sGetDashboardItems(state)\n  };\n};\n\nexport default connect(mapStateToProps, {\n  setPrintDashboard: acSetPrintDashboard,\n  addDashboardItem: acAddPrintDashboardItem,\n  removeDashboardItem: acRemovePrintDashboardItem,\n  updateDashboardItem: acUpdatePrintDashboardItem\n})(PrintDashboard);","import React, { useState, useEffect } from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport isEmpty from 'lodash/isEmpty';\nimport i18n from '@dhis2/d2-i18n';\nimport { Layer, CenteredContent, CircularLoader } from '@dhis2/ui';\nimport { Redirect } from 'react-router-dom';\nimport DashboardsBar from '../ControlBar/DashboardsBar';\nimport NoContentMessage from '../../widgets/NoContentMessage';\nimport ViewDashboard from './ViewDashboard';\nimport EditDashboard from './EditDashboard';\nimport NewDashboard from './NewDashboard';\nimport PrintDashboard from './PrintDashboard';\nimport PrintLayoutDashboard from './PrintLayoutDashboard';\nimport { tSelectDashboard } from '../../actions/dashboards';\nimport { acClearEditDashboard } from '../../actions/editDashboard';\nimport { sDashboardsIsFetching, sGetAllDashboards } from '../../reducers/dashboards';\nimport { sGetSelectedId, NON_EXISTING_DASHBOARD_ID } from '../../reducers/selected';\nimport { EDIT, NEW, VIEW, PRINT, PRINT_LAYOUT, isPrintMode, isEditMode } from './dashboardModes';\nimport { useWindowDimensions } from '../WindowDimensionsProvider';\nimport { isSmallScreen } from '../../modules/smallScreen';\n\nconst setHeaderbarVisibility = mode => {\n  const header = document.getElementsByTagName('header')[0];\n\n  if (isPrintMode(mode)) {\n    header.classList.add('hidden');\n  } else {\n    header.classList.remove('hidden');\n  }\n};\n\nconst dashboardMap = {\n  [VIEW]: <ViewDashboard />,\n  [EDIT]: <EditDashboard />,\n  [NEW]: <NewDashboard />,\n  [PRINT]: <PrintDashboard />,\n  [PRINT_LAYOUT]: <PrintLayoutDashboard />\n};\n\nconst Dashboard = ({\n  id,\n  mode,\n  dashboardsLoaded,\n  dashboardsIsEmpty,\n  routeId,\n  selectDashboard,\n  clearEditDashboard\n}) => {\n  const {\n    width\n  } = useWindowDimensions();\n  const [redirectUrl, setRedirectUrl] = useState(null);\n  useEffect(() => {\n    setHeaderbarVisibility(mode);\n  }, [mode]);\n  useEffect(() => {\n    if (isSmallScreen(width) && isEditMode(mode)) {\n      const redirectUrl = routeId ? `/${routeId}` : '/';\n      setRedirectUrl(redirectUrl);\n    } else {\n      setRedirectUrl(null);\n    }\n  }, [mode]);\n  useEffect(() => {\n    if (!isEditMode(mode)) {\n      clearEditDashboard();\n    }\n  }, [mode]);\n  useEffect(() => {\n    if (dashboardsLoaded && !dashboardsIsEmpty) {\n      selectDashboard(routeId);\n    }\n  }, [dashboardsLoaded, dashboardsIsEmpty, routeId, mode]);\n\n  if (!dashboardsLoaded) {\n    return <Layer translucent>\n                <CenteredContent>\n                    <CircularLoader />\n                </CenteredContent>\n            </Layer>;\n  }\n\n  if (redirectUrl) {\n    return <Redirect to={redirectUrl} />;\n  }\n\n  if (mode === NEW) {\n    return dashboardMap[mode];\n  }\n\n  if (dashboardsIsEmpty) {\n    return <>\n                <DashboardsBar />\n                <NoContentMessage text={i18n.t('No dashboards found. Use the + button to create a new dashboard.')} />\n            </>;\n  }\n\n  if (id === NON_EXISTING_DASHBOARD_ID) {\n    return <>\n                <DashboardsBar />\n                <NoContentMessage text={i18n.t('Requested dashboard not found')} />\n            </>;\n  }\n\n  if (id === null) {\n    return <Layer translucent>\n                <CenteredContent>\n                    <CircularLoader />\n                </CenteredContent>\n            </Layer>;\n  }\n\n  return dashboardMap[mode];\n};\n\nDashboard.propTypes = {\n  dashboardsIsEmpty: PropTypes.bool,\n  dashboardsLoaded: PropTypes.bool,\n  id: PropTypes.string,\n  match: PropTypes.object,\n  // provided by the react-router-dom\n  mode: PropTypes.string,\n  routeId: PropTypes.string,\n  selectDashboard: PropTypes.func\n};\n\nconst mapStateToProps = (state, ownProps) => {\n  const dashboards = sGetAllDashboards(state);\n  return {\n    dashboardsIsEmpty: isEmpty(dashboards),\n    dashboardsLoaded: !sDashboardsIsFetching(state),\n    id: sGetSelectedId(state),\n    routeId: ownProps.match?.params?.dashboardId || null\n  };\n};\n\nexport default connect(mapStateToProps, {\n  selectDashboard: tSelectDashboard,\n  clearEditDashboard: acClearEditDashboard\n})(Dashboard);","import React from 'react';\nimport { connect } from 'react-redux';\nimport { AlertBar, AlertStack } from '@dhis2/ui';\nimport PropTypes from 'prop-types';\nimport { sGetAlertMessage } from '../../reducers/alert';\nimport { acClearAlertMessage } from '../../actions/alert';\nexport const Alert = ({\n  message,\n  onClose\n}) => message ? <AlertStack>\n            <AlertBar onHidden={onClose} permanent>\n                {message}\n            </AlertBar>\n        </AlertStack> : null;\nAlert.propTypes = {\n  message: PropTypes.string,\n  onClose: PropTypes.func\n};\n\nconst mapStateToProps = state => ({\n  message: sGetAlertMessage(state)\n});\n\nexport default connect(mapStateToProps, {\n  onClose: acClearAlertMessage\n})(Alert);","import { RECEIVED_USER } from '../reducers/user';\nexport const acReceivedUser = value => ({\n  type: RECEIVED_USER,\n  value\n});","import { getInstance } from 'd2';\nimport { onError } from './index';\nconst SYSTEM_SETTINGS = ['keyGatherAnalyticalObjectStatisticsInDashboardViews'];\nexport const apiFetchSystemSettings = () => {\n  const endPoint = '/systemSettings';\n  const url = `${endPoint}?${SYSTEM_SETTINGS.map(s => `key=${s}`).join('&')}`;\n  return getInstance().then(d2 => d2.Api.getApi().get(url)).catch(onError);\n};","import React, { useEffect } from 'react';\nimport { HashRouter as Router, Route, Switch } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { CssVariables } from '@dhis2/ui';\nimport { useD2 } from '@dhis2/app-runtime-adapter-d2';\nimport Dashboard from './Dashboard/Dashboard';\nimport AlertBar from './AlertBar/AlertBar';\nimport { acReceivedUser } from '../actions/user';\nimport { tFetchDashboards } from '../actions/dashboards';\nimport { tSetControlBarRows } from '../actions/controlBar';\nimport { tSetShowDescription } from '../actions/selected';\nimport { tSetDimensions } from '../actions/dimensions';\nimport { tAddSettings } from '../actions/settings';\nimport { EDIT, VIEW, NEW, PRINT, PRINT_LAYOUT } from './Dashboard/dashboardModes';\nimport './App.css';\n\nconst App = props => {\n  const {\n    d2\n  } = useD2({});\n  useEffect(() => {\n    props.setCurrentUser(d2.currentUser);\n    props.fetchDashboards();\n    props.setControlBarRows();\n    props.setShowDescription();\n    props.setDimensions();\n    props.addSettings();\n  }, []);\n  return <>\n            <CssVariables colors spacers />\n            <Router>\n                <Switch>\n                    <Route exact path=\"/\" render={props => <Dashboard {...props} mode={VIEW} />} />\n                    <Route exact path=\"/new\" render={props => <Dashboard {...props} mode={NEW} />} />\n                    <Route exact path=\"/:dashboardId\" render={props => <Dashboard {...props} mode={VIEW} />} />\n                    <Route exact path=\"/:dashboardId/edit\" render={props => <Dashboard {...props} mode={EDIT} />} />\n                    <Route exact path=\"/:dashboardId/printoipp\" render={props => <Dashboard {...props} mode={PRINT} />} />\n                    <Route exact path=\"/:dashboardId/printlayout\" render={props => <Dashboard {...props} mode={PRINT_LAYOUT} />} />\n                </Switch>\n            </Router>\n            <AlertBar />\n        </>;\n};\n\nApp.propTypes = {\n  addSettings: PropTypes.func.isRequired,\n  fetchDashboards: PropTypes.func.isRequired,\n  setControlBarRows: PropTypes.func.isRequired,\n  setCurrentUser: PropTypes.func.isRequired,\n  setDimensions: PropTypes.func.isRequired,\n  setShowDescription: PropTypes.func.isRequired\n};\nconst mapDispatchToProps = {\n  fetchDashboards: tFetchDashboards,\n  setControlBarRows: tSetControlBarRows,\n  setCurrentUser: acReceivedUser,\n  setDimensions: tSetDimensions,\n  setShowDescription: tSetShowDescription,\n  addSettings: tAddSettings\n};\nexport default connect(null, mapDispatchToProps)(App);","import { SET_DIMENSIONS } from '../reducers/dimensions';\nimport { apiFetchDimensions } from '@dhis2/analytics';\nimport { sGetSettingsDisplayNameProperty } from '../reducers/settings';\nexport const acSetDimensions = dimensions => ({\n  type: SET_DIMENSIONS,\n  value: dimensions\n});\nexport const tSetDimensions = () => async (dispatch, getState, dataEngine) => {\n  const onSuccess = dimensions => {\n    dispatch(acSetDimensions(dimensions));\n  };\n\n  const onError = error => {\n    console.log('Error (apiFetchDimensions): ', error);\n    return error;\n  };\n\n  try {\n    const displayNameProp = sGetSettingsDisplayNameProperty(getState());\n    const dimensions = await apiFetchDimensions(dataEngine, displayNameProp); // filter out CATEGORY that are not of type ATTRIBUTE\n\n    const filteredDimensions = dimensions.filter(dim => dim.dimensionType !== 'CATEGORY' || dim.dimensionType === 'CATEGORY' && dim.dataDimensionType === 'ATTRIBUTE');\n    return onSuccess(filteredDimensions);\n  } catch (err) {\n    return onError(err);\n  }\n};","import { ADD_SETTINGS } from '../reducers/settings';\nimport { apiFetchSystemSettings } from '../api/settings';\nexport const acAddSettings = value => ({\n  type: ADD_SETTINGS,\n  value\n});\nexport const tAddSettings = (...extraSettings) => async dispatch => {\n  const onSuccess = fetchedSettings => {\n    dispatch(acAddSettings(Object.assign({}, fetchedSettings, ...extraSettings)));\n  };\n\n  const onError = error => {\n    console.log('Error (apiFetchSystemSettings): ', error);\n    return error;\n  };\n\n  try {\n    const systemSettings = await apiFetchSystemSettings();\n    return onSuccess({ ...systemSettings\n    });\n  } catch (err) {\n    return onError(err);\n  }\n};","/** @module reducers/selected */\nimport { validateReducer } from '../modules/util';\nexport const SET_STYLE = 'SET_STYLE';\nexport const DEFAULT_STATE_STYLE = 'LIST';\n/**\n * Reducer functions that computes and returns the new state based on the given action\n * @function\n * @param {Object} state The current state\n * @param {Object} action The action to be evaluated\n */\n\nconst style = (state = DEFAULT_STATE_STYLE, action) => {\n  switch (action.type) {\n    case SET_STYLE:\n      return validateReducer(action.value, DEFAULT_STATE_STYLE);\n\n    default:\n      return state;\n  }\n};\n\nexport default style;\n/**\n * Selectors that point to specific props in the state object\n * @function\n * @param {Object} state\n * @returns {Object}\n */\n\nexport const sGetStyleRoot = state => state.style;","import { combineReducers } from 'redux';\nimport dashboards from './dashboards';\nimport selected from './selected';\nimport dashboardsFilter from './dashboardsFilter';\nimport controlBar from './controlBar';\nimport visualizations from './visualizations';\nimport editDashboard from './editDashboard';\nimport printDashboard from './printDashboard';\nimport messages from './messages';\nimport user from './user';\nimport alert from './alert';\nimport itemFilters from './itemFilters';\nimport style from './style';\nimport dimensions from './dimensions';\nimport settings from './settings';\nimport activeModalDimension from './activeModalDimension';\nexport default combineReducers({\n  dashboards,\n  selected,\n  dashboardsFilter,\n  controlBar,\n  visualizations,\n  messages,\n  user,\n  editDashboard,\n  printDashboard,\n  itemFilters,\n  style,\n  alert,\n  dimensions,\n  settings,\n  activeModalDimension\n});","import { createStore, applyMiddleware, compose } from 'redux';\nimport { createLogger } from 'redux-logger';\nimport thunk from 'redux-thunk';\nimport reducer from './reducers';\n\nconst configureStore = dataEngine => {\n  const middleware = [thunk.withExtraArgument(dataEngine)]; // Enable Redux devtools if extension is installed instead of redux-logger\n\n  const composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\n\n  if (!window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ && process.env.NODE_ENV !== 'production') {\n    middleware.push(createLogger());\n  }\n\n  return createStore(reducer, composeEnhancers(applyMiddleware(...middleware)));\n};\n\nexport default configureStore;","//------------------------------------------------------------------------------\n// <auto-generated>\n// This code was generated by d2-i18n-generate.\n//\n// Changes to this file may cause incorrect behavior and will be lost if\n// the code is regenerated.\n// </auto-generated>\n//------------------------------------------------------------------------------\nimport i18n from '@dhis2/d2-i18n';\nimport arTranslations from './ar/translations.json';\nimport ar_IQTranslations from './ar_IQ/translations.json';\nimport ckbTranslations from './ckb/translations.json';\nimport csTranslations from './cs/translations.json';\nimport daTranslations from './da/translations.json';\nimport enTranslations from './en/translations.json';\nimport esTranslations from './es/translations.json';\nimport frTranslations from './fr/translations.json';\nimport idTranslations from './id/translations.json';\nimport kmTranslations from './km/translations.json';\nimport loTranslations from './lo/translations.json';\nimport myTranslations from './my/translations.json';\nimport nbTranslations from './nb/translations.json';\nimport prsTranslations from './prs/translations.json';\nimport psTranslations from './ps/translations.json';\nimport ptTranslations from './pt/translations.json';\nimport pt_BRTranslations from './pt_BR/translations.json';\nimport ruTranslations from './ru/translations.json';\nimport svTranslations from './sv/translations.json';\nimport tetTranslations from './tet/translations.json';\nimport tgTranslations from './tg/translations.json';\nimport ukTranslations from './uk/translations.json';\nimport urTranslations from './ur/translations.json';\nimport uzTranslations from './uz/translations.json';\nimport uz_CyrlTranslations from './uz_Cyrl/translations.json';\nimport uz_LatnTranslations from './uz_Latn/translations.json';\nimport viTranslations from './vi/translations.json';\nimport zhTranslations from './zh/translations.json';\nimport zh_CNTranslations from './zh_CN/translations.json';\nconst namespace = 'default';\ni18n.addResources('ar', namespace, arTranslations);\ni18n.addResources('ar_IQ', namespace, ar_IQTranslations);\ni18n.addResources('ckb', namespace, ckbTranslations);\ni18n.addResources('cs', namespace, csTranslations);\ni18n.addResources('da', namespace, daTranslations);\ni18n.addResources('en', namespace, enTranslations);\ni18n.addResources('es', namespace, esTranslations);\ni18n.addResources('fr', namespace, frTranslations);\ni18n.addResources('id', namespace, idTranslations);\ni18n.addResources('km', namespace, kmTranslations);\ni18n.addResources('lo', namespace, loTranslations);\ni18n.addResources('my', namespace, myTranslations);\ni18n.addResources('nb', namespace, nbTranslations);\ni18n.addResources('prs', namespace, prsTranslations);\ni18n.addResources('ps', namespace, psTranslations);\ni18n.addResources('pt', namespace, ptTranslations);\ni18n.addResources('pt_BR', namespace, pt_BRTranslations);\ni18n.addResources('ru', namespace, ruTranslations);\ni18n.addResources('sv', namespace, svTranslations);\ni18n.addResources('tet', namespace, tetTranslations);\ni18n.addResources('tg', namespace, tgTranslations);\ni18n.addResources('uk', namespace, ukTranslations);\ni18n.addResources('ur', namespace, urTranslations);\ni18n.addResources('uz', namespace, uzTranslations);\ni18n.addResources('uz_Cyrl', namespace, uz_CyrlTranslations);\ni18n.addResources('uz_Latn', namespace, uz_LatnTranslations);\ni18n.addResources('vi', namespace, viTranslations);\ni18n.addResources('zh', namespace, zhTranslations);\ni18n.addResources('zh_CN', namespace, zh_CNTranslations);\nexport default i18n;","import React from 'react';\nimport { MuiThemeProvider, createMuiTheme } from '@material-ui/core/styles';\nimport dhis2theme from '@dhis2/d2-ui-core/theme/mui3.theme';\nimport { Provider as ReduxProvider } from 'react-redux';\nimport { D2Shim } from '@dhis2/app-runtime-adapter-d2';\nimport { useDataEngine } from '@dhis2/app-runtime';\nimport WindowDimensionsProvider from './components/WindowDimensionsProvider';\nimport App from './components/App';\nimport configureStore from './configureStore';\nimport './AppWrapper.css';\nimport './locales';\n\nconst muiTheme = () => createMuiTheme(dhis2theme);\n\nconst d2Config = {\n  schemas: ['chart', 'map', 'report', 'reportTable', 'eventChart', 'eventReport', 'dashboard', 'organisationUnit', 'userGroup']\n}; // TODO: ER and EV plugins require the auth header in development mode.\n// Remove this when these plugins are rewritten\n\nconst authorization = process.env.REACT_APP_DHIS2_AUTHORIZATION || null;\n\nif (authorization) {\n  d2Config.headers = {\n    Authorization: authorization\n  };\n}\n\nconst AppWrapper = () => {\n  const dataEngine = useDataEngine();\n  return <ReduxProvider store={configureStore(dataEngine)}>\n            <MuiThemeProvider theme={muiTheme()}>\n                <D2Shim d2Config={d2Config} i18nRoot=\"./i18n\">\n                    {({\n          d2\n        }) => {\n          if (!d2) {\n            // TODO: Handle errors in d2 initialization\n            return null;\n          }\n\n          return <WindowDimensionsProvider>\n                                <App />\n                            </WindowDimensionsProvider>;\n        }}\n                </D2Shim>\n            </MuiThemeProvider>\n        </ReduxProvider>;\n};\n\nexport default AppWrapper;","import isObject from 'lodash/isObject';\nimport { itemTypeMap } from './itemTypes';\nexport const getVisualizationFromItem = item => {\n  if (!isObject(item)) {\n    return null;\n  }\n\n  const propName = itemTypeMap[item.type]?.propName;\n  return item[propName] || item.reportTable || item.chart || item.map || item.eventReport || item.eventChart || {};\n};\nexport const getVisualizationId = item => getVisualizationFromItem(item).id;\nexport const getVisualizationName = item => getVisualizationFromItem(item).name;","import { REPORT_TABLE, CHART, MAP, EVENT_REPORT, EVENT_CHART, itemTypeMap } from '../../../../modules/itemTypes';\nimport { getVisualizationId } from '../../../../modules/item';\nimport getGridItemDomId from '../../../../modules/getGridItemDomId'; //external plugins\n\nconst itemTypeToExternalPlugin = {\n  [MAP]: 'mapPlugin',\n  [EVENT_REPORT]: 'eventReportPlugin',\n  [EVENT_CHART]: 'eventChartPlugin'\n};\n\nconst hasIntegratedPlugin = type => [CHART, REPORT_TABLE].includes(type);\n\nconst getPlugin = type => {\n  if (hasIntegratedPlugin(type)) {\n    return true;\n  }\n\n  const pluginName = itemTypeToExternalPlugin[type];\n  return global[pluginName];\n};\n\nexport const pluginIsAvailable = type => !!getPlugin(type);\nexport const loadPlugin = (plugin, config, credentials) => {\n  if (!(plugin && plugin.load)) {\n    return;\n  }\n\n  plugin.url = credentials.baseUrl;\n  plugin.loadingIndicator = true;\n  plugin.dashboard = true;\n\n  if (credentials.auth) {\n    plugin.auth = credentials.auth;\n  }\n\n  plugin.load(config);\n};\nexport const getLink = (item, baseUrl) => {\n  const appUrl = itemTypeMap[item.type].appUrl(getVisualizationId(item));\n  return `${baseUrl}/${appUrl}`;\n};\nexport const load = async (item, visualization, {\n  credentials,\n  activeType,\n  options = {}\n}) => {\n  const config = { ...visualization,\n    ...options,\n    el: getGridItemDomId(item.id)\n  };\n  const type = activeType || item.type;\n  const plugin = getPlugin(type);\n  loadPlugin(plugin, config, credentials);\n};\nexport const resize = (item, isFullscreen) => {\n  const plugin = getPlugin(item.type);\n\n  if (plugin && plugin.resize) {\n    plugin.resize(getGridItemDomId(item.id), isFullscreen);\n  }\n};\nexport const unmount = (item, activeType) => {\n  const plugin = getPlugin(activeType);\n\n  if (plugin && plugin.unmount) {\n    plugin.unmount(getGridItemDomId(item.id));\n  }\n};","const getGridItemDomId = id => `item-${id}`;\n\nexport default getGridItemDomId;","// extracted by mini-css-extract-plugin\nmodule.exports = {\"itemHeaderWrap\":\"ItemHeader_itemHeaderWrap__JcBP7\",\"itemTitle\":\"ItemHeader_itemTitle__34rHa\",\"itemActionsWrap\":\"ItemHeader_itemActionsWrap__Gx3D9\"};"],"sourceRoot":""}
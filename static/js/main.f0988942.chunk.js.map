{"version":3,"sources":["components/Item/ListItem/Item.module.css","reducers/user.js","reducers/dashboards.js","reducers/selected.js","reducers/visualizations.js","api/metadata.js","api/index.js","api/dashboards.js","components/ItemGrid/gridUtil.js","reducers/messages.js","api/messages.js","reducers/snackbar.js","actions/snackbar.js","components/SnackbarMessage/SnackbarMessage.js","components/Item/VisualizationItem/plugin.js","actions/selected.js","api/localStorage.js","components/Item/MessagesItem/actions.js","reducers/editDashboard.js","reducers/editItemFilters.js","reducers/itemFilters.js","actions/itemFilters.js","actions/editItemFilters.js","api/editDashboard.js","actions/editDashboard.js","actions/dashboards.js","reducers/controlBar.js","api/controlBar.js","actions/controlBar.js","reducers/dimensions.js","reducers/settings.js","actions/dimensions.js","components/ControlBar/ShowMoreButton.js","components/ControlBar/controlBarDimensions.js","components/ControlBar/ControlBar.js","icons/Star.js","api/dataStatistics.js","components/ControlBar/DashboardItemChip.js","icons/AddCircle.js","icons/Clear.js","components/ControlBar/ClearButton.js","reducers/dashboardsFilter.js","components/ControlBar/Filter.js","components/ControlBar/DashboardsBar.js","actions/dashboardsFilter.js","components/Dashboard/DashboardVerticalOffset.js","components/ItemSelector/HeaderMenuItem.js","icons/Launch.js","components/ItemSelector/ContentMenuItem.js","components/ItemSelector/selectableItems.js","components/ItemSelector/CategorizedMenuGroup.js","components/ItemSelector/actions.js","components/ItemSelector/SinglesMenuGroup.js","components/ItemSelector/ItemSelector.js","components/TitleBar/EditTitleBar.js","components/ItemFilter/FilterDialog.js","reducers/activeModalDimension.js","actions/activeModalDimension.js","components/ItemFilter/FilterSelector.js","components/TitleBar/Info.js","components/TitleBar/ViewTitleBar.js","components/TitleBar/TitleBar.js","components/Item/VisualizationItem/DefaultPlugin.js","components/Item/ItemHeader.js","components/Item/VisualizationItem/ItemFooter.js","components/Item/ItemHeaderButton.js","components/Item/VisualizationItem/ItemHeaderButtons.js","modules/memoizeOne.js","components/Item/VisualizationItem/Item.js","widgets/Line.js","components/Item/MessagesItem/Item.js","components/Item/NotSupportedItem/Item.js","icons/Description.js","icons/Delete.js","components/Item/ListItem/Item.js","components/Item/ListItem/actions.js","components/Item/TextItem/Item.js","components/Item/AppItem/Item.js","components/Item/SpacerItem/Item.js","components/Item/Item.js","components/ItemGrid/DeleteItemButton.js","widgets/NoContentMessage.js","components/Item/ProgressiveLoadingContainer.js","components/ItemGrid/ItemGrid.js","components/FilterBar/FilterBadge.js","components/FilterBar/FilterBar.js","components/Dashboard/DashboardContent.js","components/Dashboard/ViewDashboard.js","components/ControlBar/ConfirmDeleteDialog.js","components/ControlBar/EditBar.js","components/Dashboard/EditDashboard.js","components/Dashboard/NewDashboard.js","components/Dashboard/Dashboard.js","components/Dashboard/dashboardModes.js","components/App.js","actions/user.js","locales/index.js","reducers/style.js","reducers/index.js","configureStore.js","index.js","components/ControlBar/styles/DashboardsBar.module.css","components/ItemSelector/styles/ContentMenuItem.module.css","modules/util.js","components/ControlBar/styles/ControlBar.module.css","components/ControlBar/styles/ClearButton.module.css","components/ItemSelector/styles/CategorizedMenuGroup.module.css","modules/itemTypes.js"],"names":["module","exports","list","item","itemicon","link","deleteicon","deletebutton","DEFAULT_STATE_USER","id","username","uiLocale","isSuperuser","sGetUserUsername","state","user","DEFAULT_STATE_DASHBOARDS","byId","items","updateDashboardProp","dashboardId","prop","value","Object","objectSpread","defineProperty","sGetDashboardsRoot","dashboards","sGetDashboardById","orObject","sDashboardsIsFetching","sGetAllDashboards","sGetDashboardItems","sGetStarredDashboards","values","filter","dashboard","starred","sGetUnstarredDashboards","sGetDashboardsSortedByStarred","concat","toConsumableArray","arraySort","getCustomDashboards","data","arrayFrom","map","d","index","name","displayName","description","displayDescription","favorite","owner","created","split","join","substr","lastUpdated","access","numberOfItems","orArray","dashboardItems","length","type","isSpacerType","SPACER","text","isTextType","emptyTextItemContent","combineReducers","arguments","undefined","action","validateReducer","isLoading","showDescription","sGetSelectedRoot","selected","sGetSelectedId","sGetSelectedIsLoading","sGetSelectedShowDescription","DEFAULT_STATE_VISUALIZATIONS","isEmpty","p","sGetVisualization","visualizations","sGetVisualizationsRoot","getIdNameFields","rename","getDimensionFields","_ref2","withItems","arrayClean","getAxesFields","_ref3","getFavoriteFields","_ref4","withDimensions","withOptions","getFavoritesFields","_ref5","apiFetchFavorite","_ref6","fields","getInstance","then","d2","Api","getApi","get","getEndPointName","onError","error","console","log","getDashboardItemsFields","withFavorite","getDashboardFields","apiFetchDashboard","models","catch","apiStarDashboard","isStarred","url","post","delete","apiDeleteDashboard","MARGIN","NEW_ITEM_SHAPE","x","y","w","h","isNonNegativeInteger","Number","isInteger","hasShape","withShape","itemWithShape","assign","i","Error","col","row","Math","floor","itemWidth","GRID_ROW_HEIGHT","getShape","originalHeight","round","max","getOriginalHeight","getGridItemDomId","onItemResize","el","document","querySelector","isFunction","setViewportSize","setTimeout","clientWidth","clientHeight","sGetMessagesRoot","messages","getMessages","DEFAULT_STATE_SNACKBAR","message","duration","open","acCloseSnackbar","loadingDashboardMsg","SnackbarMessageContent","_ref","react_default","a","createElement","style","fontWeight","connect","_sGetSnackbar","snackbar","sGetSnackbar","snackbarOpen","snackbarMessage","snackbarDuration","onCloseSnackbar","props","Snackbar_default","zIndex","SnackbarMessage_SnackbarMessageContent","autoHideDuration","onClose","pluginIsAvailable","activeType","getPlugin","extractFavorite","isObject","REPORT_TABLE","reportTable","CHART","chart","MAP","EVENT_REPORT","eventReport","EVENT_CHART","eventChart","loadPlugin","plugin","config","credentials","load","baseUrl","loadingIndicator","auth","getId","getName","getLink","getBaseUrl","appUrl","itemTypeMap","asyncToGenerator","regenerator_default","mark","_callee","visualization","_args","wrap","_context","prev","next","stop","_x","_x2","_x3","_x4","apply","this","fetch","_callee2","fetchedFavorite","_context2","sent","abrupt","_x5","unmount","getVisualizationConfig","originalType","extractedMapView","mapViews","find","mv","layer","includes","getWithoutId","acSetSelectedId","acSetSelectedIsLoading","acReceivedVisualization","tLoadDashboard","dispatch","getState","dash","acAppendDashboards","Promise","resolve","t0","tSetSelectedDashboardById","snackbarTimeout","onSuccess","dashboardName","customDashboard","acSetDashboardItems","localStorage","setItem","forEach","MESSAGES","messageConversations","clearTimeout","DEFAULT_STATE_EDIT_DASHBOARD","NEW_DASHBOARD_STATE","sGetEditDashboardRoot","editDashboard","sGetIsEditing","sGetEditDashboardItems","DEFAULT_STATE_EDIT_ITEM_FILTERS","sGetEditItemFiltersRoot","editItemFilters","DEFAULT_STATE_ITEM_FILTERS","sGetItemFiltersRoot","itemFilters","sGetFiltersKeys","keys","acRemoveItemFilter","acRemoveEditItemFilter","saveDashboard","width","height","save","msg","response","uid","updateDashboard","postDashboard","create","acAddDashboardItem","itemPropName","propName","generateUid","content","acUpdateDashboardItem","acRemoveDashboardItem","arrayToIdMap","acSetDashboardStarred","tFetchDashboards","collection","paging","toArray","userRows","sGetControlBarUserRows","controlBar","sGetControlBarRoot","KEY","hasNamespace","currentUser","dataStore","has","getNamespace","apiGetControlBarRows","_callee3","namespace","_context3","t1","t2","key","apiPostControlBarRows","_callee4","rows","_context4","set","acSetControlBarUserRows","DEFAULT_DIMENSIONS","pe","FIXED_DIMENSIONS","ou","sGetDimensions","dimensions","DEFAULT_SETTINGS","keyDateFormat","keyAnalysisRelativePeriod","keyAnalysisDigitGroupSeparator","displayNameProperty","rootOrganisationUnit","sGetSettings","settings","sGetSettingsDisplayNameProperty","acSetDimensions","keyBy","sortBy","toLowerCase","styles","showMore","color","colors","grey700","cursor","fontSize","paddingTop","&:hover","textDecoration","disabled","grey500","withStyles","onClick","isMaxHeight","classes","textAlign","className","i18n","t","getRowsHeight","getTopOffset","getControlBarHeight","FIRST_ROW_PADDING_HEIGHT","ControlBar","_this","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","onStartDrag","setState","dragging","window","addEventListener","onDrag","onEndDrag","event","preventDefault","stopPropagation","newHeight","clientY","onChangeHeight","requestAnimationFrame","removeEventListener","draghandle","onMouseDown","rootStyle","top","backgroundColor","editMode","yellow050","white","paddingBottom","transition","root","children","renderDragHandle","React","Component","defaultProps","StarIcon","xmlns","viewBox","fill","apiPostDataStatistics","eventType","chip","margin","grey600","display","verticalAlign","icon","marginTop","unselected","label","chipProps","selectedState","Star","Link","to","debounce","Chip","AddCircleIcon","teal600","ClearIcon","grey800","ClearButton","onClear","button","Clear","ownerData","DEFAULT_STATE_DASHBOARDS_FILTER_OWNER","order","sGetDashboardsFilterRoot","dashboardsFilter","sGetFilterName","filterField","searchIcon","Filter","_useState","useState","_useState2","slicedToArray","setValue","useEffect","startAdornment","InputAdornment_default","position","Search_default","endAdornment","ControlBar_ClearButton","onChangeName","Input_default","placeholder","onChange","target","onKeyUp","keyCode","onKeypressEnter","Function","prototype","mapDispatchToProps","onChangeFilterName","withRouter","selectedId","stateProps","dispatchProps","ownProps","displayDashboards","setRows","_useState3","_useState4","setIsMaxHeight","rowCount","controlBarHeight","contentWrapperStyle","padding","overflowY","components_ControlBar_ControlBar","adjustedHeight","newRows","newRowCount","min","leftControls","marginRight","AddCircle","ControlBar_Filter","history","push","ControlBar_DashboardItemChip","ControlBar_ShowMoreButton","_rows","HeaderMenuItem","title","MenuItem","dense","LaunchIcon","LaunchLink","e","launchLink","rel","href","Launch","InsertButton","buttonInsert","ContentMenuItem","onInsert","ItemIcon","getItemIcon","menuItem","ContentMenuItem_LaunchLink","ContentMenuItem_InsertButton","singleItems","header","TEXT","spacerContent","categorizedItems","USERS","REPORTS","RESOURCES","APP","listItemTypes","CategorizedMenuGroup","addItem","_this$props","tAddListItemContent","newItem","toggleSeeMore","seeMore","onChangeItemsLimit","_this2","_this$props2","hasMore","react","ItemSelector_HeaderMenuItem","itemUrl","getItemUrl","context","ItemSelector_ContentMenuItem","showMoreButton","Divider","contextTypes","PropTypes","object","isRequired","dashboardItem","listItemType","dashboardItemIndex","findIndex","category","addToDashboard","ItemSearchField","InputField","filled","onFocus","ItemSelector","closeList","openList","fetchItems","anchorEl","currentTarget","setFilter","getCategorizedMenuGroups","itemType","endPointName","allItems","maxOptions","slice","ItemSelector_CategorizedMenuGroup","pluralTitle","getSinglesMenuGroups","ItemSelector_SinglesMenuGroup","getMenuGroups","queryString","add","Set","ItemSelector_ItemSearchField","Popover_default","anchorOrigin","horizontal","vertical","transformOrigin","PaperProps","disableAutoFocus","disableRestoreFocus","Menu","EditTitleBar","onChangeTitle","onChangeDescription","section","titleDescription","TextField_default","variant","multiline","InputProps","input","underline","itemSelector","components_ItemSelector_ItemSelector","selectedDashboard","justifyContent","flex","clear","&::before","borderBottom","&:hover::before","borderRadius","peId","ouId","FilterDialog","onConfirm","dimension","selectedItems","dialogId","commonProps","onSelect","onDeselect","onReorder","build","selectedPeriods","ouItems","dialogTitle","Dialog_default","maxWidth","disableEnforceFocus","dialogContent","DialogActions_default","Button","kind","DEFAULT_STATE_ACTIVE_MODAL_DIMENSION","sGetActiveModalDimension","activeModalDimension","acSetActiveModalDimension","FilterSelector","openPanel","closePanel","closeDialog","clearActiveModalDimension","selectDimension","setActiveModalDimension","onSelectItems","dimensionId","setEditItemFilters","onDeselectItems","itemIdsToRemove","newList","removeEditItemFilter","onReorderItems","itemIds","oldList","reorderedList","saveFilter","filterItems","addItemFilter","removeItemFilter","theme","selectedDimensions","ArrowDropDown_default","Boolean","fontFamily","typography","onDimensionClick","selectedIds","ItemFilter_FilterDialog","filters","withTheme","Info","show","toggle","InfoOutlined_default","NO_DESCRIPTION","actions","alignItems","marginLeft","starIcon","textButton","minWidth","editLink","titleBar","titleBarIcon","ViewTitleBar","toggleSharingDialog","sharingDialogIsOpen","onStarClick","onInfoClick","titleStyle","userSelect","StarBorder","TitleBar_Info","update","manage","ItemFilter_FilterSelector","d2_ui_sharing_dialog_default","onRequestClose","tStarDashboard","black","TitleBar","edit","TitleBar_EditTitleBar","TitleBar_ViewTitleBar","DefaultPlugin","pluginCredentials","shouldPluginReload","prevProps","reloadAllowed","filtersChanged","vis","prevVis","visChanged","reloadPlugin","pluginManager","currentVis","useActiveType","getActiveType","defaultHeaders","Authorization","textDiv","HEADER_HEIGHT","ItemHeader","actionButtons","scrollContainer","line","border","grey100","ItemFooter","objectId","d2_ui_interpretations_default","appName","ItemHeaderButton","iconBase","buttonBase","buttonDisabled","opacity","toggleFooterPadding","grey200","baseStyle","container","disabledStyle","activeStyle","primary800","primary100","inactiveStyle","getItemTypeId","visualizationType","domainType","VisualizationItemHeaderButtons","activeFooter","onToggleFooter","toggleFooterBase","toggleFooter","components_Item_ItemHeaderButton","Message_default","chartType","onSelectVisualization","VISUALIZATION_TYPE_CHART","CHART_TYPE_SINGLE_VALUE","match","tableButtonStyle","tableBtnStyle","chartButtonStyle","chartBtnStyle","mapButtonStyle","mapBtnStyle","VISUALIZATION_TYPE_TABLE","ViewList_default","InsertChart_default","DOMAIN_TYPE_AGGREGATE","VISUALIZATION_TYPE_MAP","Public_default","renderInterpretationButton","renderVisualizationButtons","memoizeOne","fn","lastArgs","lastValue","_len","args","Array","_key","every","arg","overflow","textOverflow","whiteSpace","fontStretch","lineHeight","applyFilters","visRows","obj","visColumns","columns","visFilters","dimensionFound","dimensionObjects","Item","_Component","showFooter","configLoaded","getUniqueKey","uniqueId","getPluginComponent","getContentStyle","data_visualizer_plugin_build","forDashboard","VisualizationItem_DefaultPlugin","onToggleItemExpanded","getTitle","itemName","Launch_default","getActionButtons","ItemHeaderButtons","contentRef","offsetHeight","createRef","inherits","createClass","_componentDidMount","onVisualizationLoaded","_this$props3","Item_ItemHeader","ref","VisualizationItem_ItemFooter","acReceivedActiveVisualization","Line","PRIVATE","messageTypes","_messageTypes","listStyleType","paddingLeft","seeAll","marginBottom","sender","snippet","maxHeight","MessagesItem","getMessageHref","msgIdentifier","messageType","getMessageSender","latestMsg","getMessageItems","editClass","readClass","read","msgDate","location","messageCount","formatDate","userSettings","widgets_Line","string","MessagesContainer","NotSupportedItem","NotInterested_default","align","DescriptionIcon","DeleteIcon","red500","getItemTitle","removeContent","handler","contentToRemove","ListItem","tRemoveListItemContent","contentItems","array","getContentItems","contentItem","Description","deleteButton","Delete","grey900","newContent","textField","onChangeText","updatedItem","d2_ui_rich_text","onEdit","fullWidth","textDivStyle","viewItem","getIframeSrc","appDetails","iframeSrc","launchUrl","ouIds","ouPath","AppItem","appKey","system","installedApps","app","src","SpacerItem","GridItem","VisualizationItem","TextItem","getGridItem","right","DeleteItemHeaderButton","Delete_default","NoContentMessage","ProgressiveLoadingContainer","shouldLoad","containerRef","shouldLoadHandler","bufferPx","bufferFactor","innerHeight","rect","getBoundingClientRect","bottom","removeHandler","checkShouldLoad","debounceMs","registerHandler","_this3","objectWithoutProperties","ItemGrid","expandedItems","setExpandedItems","clickedId","isExpanded","_expandedItems","onRemoveItemWrapper","widgets_NoContentMessage","expandedItem","hProp","minH","ScreenCover","CircularProgress","react_grid_layout_default","onLayoutChange","newLayout","acUpdateDashboardLayout","onResizeStop","layout","oldItem","isPluginType","resize","pluginResize","cols","rowHeight","innerWidth","compactType","isDraggable","isResizable","draggableCancel","itemClassNames","Item_ProgressiveLoadingContainer","DeleteItemButton","Item_Item_Item","validItems","badgeContainer","badge","badgeRemove","FilterBadge","onRemove","count","FilterBar","_getPrototypeOf2","onBadgeRemove","onBadgeClick","bar","FilterBar_FilterBadge","removeItemFIlter","filtersSelector","createSelector","reduce","arr","flexWrap","DashboardContent","components_TitleBar_TitleBar","components_FilterBar_FilterBar","components_ItemGrid_ItemGrid","Content","hasDashboardContent","dashboardsIsEmpty","Dashboard_DashboardContent","dashboardsLoaded","contentNotReady","ControlBar_DashboardsBar","Dashboard_DashboardVerticalOffset","ViewDashboard_Content","ConfirmDeleteDialog","onDeleteConfirmed","onContinueEditing","secondary","destructive","DialogTitle_default","DialogContent_default","DialogContentText_default","buttonBarStyle","EditBar","translationDialogIsOpen","dashboardModel","confirmDeleteDialogOpen","redirectUrl","onConfirmDelete","onSave","newId","onDiscard","onDiscardChanges","onDelete","onTranslationsSaved","translations","dbLocale","translation","locale","property","onTranslate","fetchDashboardModel","toggleTranslationDialog","confirmDeleteDialog","deleteAccess","ControlBar_ConfirmDeleteDialog","translationDialog","d2_ui_translation_dialog_default","objectToTranslate","fieldsToTranslate","onTranslationSaved","onTranslationError","err","Redirect","updateAccess","discardBtnText","primary","rightControls","sGetIsNewDashboard","dashboardToSave","_x6","_x7","tDeleteDashboard","acSetDashboardDisplayName","EditDashboard","initialized","initEditDashboard","setEditDashboard","getDashboardContent","EditDashboard_Content","ControlBar_EditBar","NewDashboard","setNewDashboard","Dashboard","setDashboard","params","selectDashboard","scrollToTop","scrollTo","mode","Dashboard_EditDashboard","Dashboard_NewDashboard","Dashboard_ViewDashboard","dashboardToSelect","preferredId","getItem","App","setCurrentUser","fetchDashboards","setControlBarRows","setDimensions","HeaderBar_default","HashRouter","Switch","Route","exact","path","render","components_Dashboard_Dashboard","components_SnackbarMessage_SnackbarMessage","childContextTypes","controlBarRows","displayNameProp","filteredDimensions","apiFetchDimensions","dim","dimensionType","dataDimensionType","tSetDimensions","moment","addResources","enTranslations","loTranslations","ruTranslations","svTranslations","urTranslations","viTranslations","setDefaultNamespace","changeLanguage","objectClean","conversations","$merge","d2Object","keyUiLocale","authorities","newState","k","$unshift","idToRemove","$splice","stateItems","newStateItems","stateItem","si","$set","configureStore","middleware","thunk","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","createStore","reducer","applyMiddleware","dhis2theme","palette","dark","configI18n","sources","manifest","isProd","getManifest","info","version","manifest_generated_at","process","activities","dhis","dhis2","apiVersion","headers","schemas","getUserSettings","d2Init","initializedD2","ReactDOM","es","store","createMuiTheme","src_components_App","getElementById","init","param","isArray","global","Intl","DateTimeFormat","year","month","day","format","Date","replace","defaultValue","api","idx","indexOf","_home_travis_build_dhis2_dashboards_app_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectSpread__WEBPACK_IMPORTED_MODULE_0__","hasOwnProperty","pluginName","_itemTypeMap","_home_travis_build_dhis2_dashboards_app_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_defineProperty__WEBPACK_IMPORTED_MODULE_0__","TableIcon","ChartIcon","MapIcon","ExtensionIcon","PersonIcon","FontDownloadIcon","EmailIcon","CropFreeIcon","NotInterestedIcon"],"mappings":"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","file":"static/js/main.f0988942.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"Item_list__2oHc1\",\"item\":\"Item_item__lO40M\",\"itemicon\":\"Item_itemicon__dv5ah\",\"link\":\"Item_link__2gULT\",\"deleteicon\":\"Item_deleteicon__3c7bl\",\"deletebutton\":\"Item_deletebutton__1DfY5\"};","export const RECEIVED_USER = 'RECEIVED_USER';\n\nexport const DEFAULT_STATE_USER = {\n    id: '',\n    username: '',\n    uiLocale: '',\n    isSuperuser: false,\n};\n\nexport default (state = DEFAULT_STATE_USER, action) => {\n    switch (action.type) {\n        case RECEIVED_USER: {\n            return fromD2ToUserObj(action.value);\n        }\n        default:\n            return state;\n    }\n};\n\nfunction fromD2ToUserObj(d2Object) {\n    return {\n        id: d2Object.id,\n        username: d2Object.username,\n        uiLocale: d2Object.settings.keyUiLocale,\n        isSuperuser: d2Object.authorities.has('ALL'),\n    };\n}\n\n// selectors\n\nexport const sGetUserId = state => state.user.id;\nexport const sGetUserUsername = state => state.user.username;\nexport const sGetIsSuperuser = state => state.user.isSuperuser;\nexport const sGetUiLocale = state => state.user.uiLocale;\n","/** @module reducers/dashboards */\n\nimport arrayFrom from 'd2-utilizr/lib/arrayFrom';\nimport arraySort from 'd2-utilizr/lib/arraySort';\n\nimport { orArray, orObject } from '../modules/util';\nimport {\n    SPACER,\n    isSpacerType,\n    isTextType,\n    emptyTextItemContent,\n} from '../modules/itemTypes';\n\nexport const SET_DASHBOARDS = 'SET_DASHBOARDS';\nexport const ADD_DASHBOARDS = 'ADD_DASHBOARDS';\nexport const SET_DASHBOARD_STARRED = 'SET_DASHBOARD_STARRED';\nexport const SET_DASHBOARD_DISPLAY_NAME = 'SET_DASHBOARD_DISPLAY_NAME';\nexport const SET_DASHBOARD_ITEMS = 'SET_DASHBOARD_ITEMS';\n\nexport const DEFAULT_STATE_DASHBOARDS = {\n    byId: null,\n    items: [],\n};\n\n// reducer helper functions\n\nconst updateDashboardProp = (state, dashboardId, prop, value) => ({\n    byId: {\n        ...state.byId,\n        [dashboardId]: {\n            ...state.byId[dashboardId],\n            [prop]: value,\n        },\n    },\n    items: state.items,\n});\n\n/**\n * Reducer that computes and returns the new state based on the given action\n * @function\n * @param {Object} state The current state\n * @param {Object} action The action to be evaluated\n * @returns {Object}\n */\nexport default (state = DEFAULT_STATE_DASHBOARDS, action) => {\n    switch (action.type) {\n        case SET_DASHBOARDS: {\n            return {\n                byId: action.value,\n                items: [],\n            };\n        }\n        case ADD_DASHBOARDS: {\n            return {\n                ...state,\n                byId: {\n                    ...state.byId,\n                    ...action.value,\n                },\n            };\n        }\n        case SET_DASHBOARD_STARRED: {\n            return updateDashboardProp(\n                state,\n                action.dashboardId,\n                'starred',\n                action.value\n            );\n        }\n        case SET_DASHBOARD_DISPLAY_NAME: {\n            return updateDashboardProp(\n                state,\n                action.dashboardId,\n                'displayName',\n                action.value\n            );\n        }\n        case SET_DASHBOARD_ITEMS: {\n            return {\n                ...state,\n                items: action.value,\n            };\n        }\n        default:\n            return state;\n    }\n};\n\n// root selector\n\nexport const sGetDashboardsRoot = state => state.dashboards;\n\n// selector level 1\n\n/**\n * Selector which returns a dashboard by id from the state object\n * If no matching dashboard is found it returns undefined\n * If dashboards.byId is null, then the dashboards api request\n * has not yet completed. If dashboards.byId is an empty object\n * then the dashboards api request is complete, but no dashboards\n * were returned\n *\n * @function\n * @param {Object} state The current state\n * @param {Number} id The id of the dashboard\n * @returns {Object | undefined}\n */\nexport const sGetDashboardById = (state, id) =>\n    orObject(sGetDashboardsRoot(state).byId)[id];\n\nexport const sDashboardsIsFetching = state => {\n    return sGetDashboardsRoot(state).byId === null;\n};\n\n/**\n * Selector which returns all dashboards (the byId object)\n *\n * @function\n * @param {Object} state The current state\n * @returns {Object | undefined}\n */\nexport const sGetAllDashboards = state =>\n    orObject(sGetDashboardsRoot(state).byId);\n\n/**\n * Selector which returns the current dashboard items\n *\n * @function\n * @param {Object} state The current state\n * @returns {Array}\n */\nexport const sGetDashboardItems = state => sGetDashboardsRoot(state).items;\n\n// selector level 2\n\nexport const sGetStarredDashboards = state =>\n    Object.values(sGetAllDashboards(state)).filter(\n        dashboard => dashboard.starred === true\n    );\n\nexport const sGetUnstarredDashboards = state =>\n    Object.values(sGetAllDashboards(state)).filter(\n        dashboard => dashboard.starred === false\n    );\n\n// selector level 3\n\nexport const sGetStarredDashboardIds = state => {\n    return sGetStarredDashboards(state).map(dashboard => dashboard.id);\n};\n\nexport const sGetUnstarredDashboardIds = state =>\n    sGetUnstarredDashboards(state).map(dashboard => dashboard.id);\n\nexport const sGetDashboardsSortedByStarred = state => [\n    ...arraySort(sGetStarredDashboards(state), 'ASC', 'displayName'),\n    ...arraySort(sGetUnstarredDashboards(state), 'ASC', 'displayName'),\n];\n\n// utils\n\n/**\n * Returns the array of dashboards, customized for ui\n * @function\n * @param {Array} data The original dashboard list\n * @returns {Array}\n */\nexport const getCustomDashboards = data => {\n    const uiItems = items =>\n        items.map(item => {\n            const type = isSpacerType(item) ? SPACER : item.type;\n            const text = isTextType(item)\n                ? item.text === emptyTextItemContent\n                    ? ''\n                    : item.text\n                : null;\n\n            return {\n                ...item,\n                ...(text !== null ? { text } : {}),\n                type,\n            };\n        });\n\n    return arrayFrom(data).map((d, index) => ({\n        id: d.id,\n        name: d.name,\n        displayName: d.displayName,\n        description: d.description,\n        displayDescription: d.displayDescription,\n        starred: d.favorite,\n        owner: d.user.name,\n        created: d.created\n            .split('T')\n            .join(' ')\n            .substr(0, 16),\n        lastUpdated: d.lastUpdated\n            .split('T')\n            .join(' ')\n            .substr(0, 16),\n        access: d.access,\n        numberOfItems: orArray(d.dashboardItems).length,\n        dashboardItems: uiItems(d.dashboardItems),\n    }));\n};\n","/** @module reducers/selected */\nimport { combineReducers } from 'redux';\n\nimport { validateReducer } from '../modules/util';\n\nexport const SET_SELECTED_ID = 'SET_SELECTED_ID';\nexport const SET_SELECTED_ISLOADING = 'SET_SELECTED_ISLOADING';\nexport const SET_SELECTED_SHOWDESCRIPTION = 'SET_SELECTED_SHOWDESCRIPTION';\n\nexport const DEFAULT_STATE_SELECTED_ID = null;\nexport const DEFAULT_STATE_SELECTED_ISLOADING = false;\nexport const DEFAULT_STATE_SELECTED_SHOWDESCRIPTION = false;\n\n/**\n * Reducer functions that computes and returns the new state based on the given action\n * @function\n * @param {Object} state The current state\n * @param {Object} action The action to be evaluated\n */\nconst id = (state = DEFAULT_STATE_SELECTED_ID, action) => {\n    switch (action.type) {\n        case SET_SELECTED_ID:\n            return validateReducer(action.value, DEFAULT_STATE_SELECTED_ID);\n        default:\n            return state;\n    }\n};\n\nconst isLoading = (state = DEFAULT_STATE_SELECTED_ISLOADING, action) => {\n    switch (action.type) {\n        case SET_SELECTED_ISLOADING:\n            return validateReducer(\n                action.value,\n                DEFAULT_STATE_SELECTED_ISLOADING\n            );\n        default:\n            return state;\n    }\n};\n\nconst showDescription = (\n    state = DEFAULT_STATE_SELECTED_SHOWDESCRIPTION,\n    action\n) => {\n    switch (action.type) {\n        case SET_SELECTED_SHOWDESCRIPTION:\n            return validateReducer(\n                action.value,\n                DEFAULT_STATE_SELECTED_SHOWDESCRIPTION\n            );\n        default:\n            return state;\n    }\n};\n\nexport default combineReducers({\n    id,\n    isLoading,\n    showDescription,\n});\n\n// Selectors\n\nexport const sGetSelectedRoot = state => state.selected;\n\nexport const sGetSelectedId = state => sGetSelectedRoot(state).id;\n\nexport const sGetSelectedIsLoading = state => sGetSelectedRoot(state).isLoading;\n\nexport const sGetSelectedShowDescription = state =>\n    sGetSelectedRoot(state).showDescription;\n","import { orObject } from '../modules/util';\nimport objectClean from 'd2-utilizr/lib/objectClean';\n\n/** @module reducers/visualizations */\n\nexport const RECEIVED_VISUALIZATION = 'RECEIVED_VISUALIZATION';\nexport const RECEIVED_ACTIVE_VISUALIZATION = 'RECEIVED_ACTIVE_VISUALIZATION';\n\nexport const DEFAULT_STATE_VISUALIZATIONS = {};\n\nconst isEmpty = p => p === undefined || p === null;\n\nexport default (state = DEFAULT_STATE_VISUALIZATIONS, action) => {\n    switch (action.type) {\n        case RECEIVED_VISUALIZATION: {\n            return {\n                ...state,\n                [action.value.id]: objectClean(\n                    {\n                        ...orObject(state[action.value.id]),\n                        ...action.value,\n                    },\n                    isEmpty\n                ),\n            };\n        }\n        case RECEIVED_ACTIVE_VISUALIZATION: {\n            return {\n                ...state,\n                [action.id]: objectClean(\n                    {\n                        ...orObject(state[action.id]),\n                        activeType: action.activeType,\n                    },\n                    isEmpty\n                ),\n            };\n        }\n        default:\n            return state;\n    }\n};\n\n// root selector\nexport const sGetVisualizationsRoot = state => state.visualizations;\n\n// selectors level 1\nexport const sGetVisualization = (state, id) => {\n    return sGetVisualizationsRoot(state)[id];\n};\n","import { getInstance } from 'd2';\nimport arrayClean from 'd2-utilizr/lib/arrayClean';\n\nimport { getEndPointName } from '../modules/itemTypes';\n\n// Id, name\nexport const getIdNameFields = ({ rename } = {}) => [\n    'id',\n    `${rename ? 'displayName~rename(name)' : 'name,displayName'}`,\n];\n\n// Item\nexport const getItemFields = () => [\n    'dimensionItem~rename(id)',\n    'displayName~rename(name)',\n    'dimensionItemType',\n];\n\n// Dimension\nexport const getDimensionFields = ({ withItems }) =>\n    arrayClean([\n        'dimension',\n        'legendSet[id]',\n        'filter',\n        'programStage',\n        withItems ? `items[${getItemFields().join(',')}]` : ``,\n    ]);\n\n// Axis\nexport const getAxesFields = ({ withItems }) => [\n    `columns[${getDimensionFields({ withItems }).join(',')}]`,\n    `rows[${getDimensionFields({ withItems }).join(',')}]`,\n    `filters[${getDimensionFields({ withItems }).join(',')}]`,\n];\n\n// Favorite\nexport const getFavoriteFields = ({ withDimensions, withOptions }) => {\n    return arrayClean([\n        `${getIdNameFields({ rename: true }).join(',')}`,\n        'displayDescription~rename(description)',\n        withDimensions ? `${getAxesFields({ withItems: true }).join(',')}` : ``,\n        withOptions\n            ? [\n                  '*',\n                  '!attributeDimensions',\n                  '!attributeValues',\n                  '!category',\n                  '!categoryDimensions',\n                  '!categoryOptionGroupSetDimensions',\n                  '!columnDimensions',\n                  '!dataDimensionItems',\n                  '!dataElementDimensions',\n                  '!dataElementGroupSetDimensions',\n                  '!filterDimensions',\n                  '!itemOrganisationUnitGroups',\n                  '!lastUpdatedBy',\n                  '!organisationUnitGroupSetDimensions',\n                  '!organisationUnitLevels',\n                  '!organisationUnits',\n                  '!programIndicatorDimensions',\n                  '!relativePeriods',\n                  '!reportParams',\n                  '!rowDimensions',\n                  '!series',\n                  '!translations',\n                  '!userOrganisationUnit',\n                  '!userOrganisationUnitChildren',\n                  '!userOrganisationUnitGrandChildren',\n              ].join(',')\n            : '',\n    ]);\n};\n\nexport const getFavoritesFields = ({ withDimensions, withOptions }) => [\n    `reportTable[${getFavoriteFields({ withDimensions }).join(',')}]`,\n    `chart[${['type', ...getFavoriteFields({ withDimensions })].join(',')}]`,\n    `map[${getFavoriteFields({ withDimensions }).join(',')}]`,\n    `eventReport[${getFavoriteFields({ withDimensions }).join(',')}]`,\n    `eventChart[${getFavoriteFields({ withDimensions }).join(',')}]`,\n];\n\n// List item\nexport const getListItemFields = () => [\n    `reports[${getIdNameFields({ rename: true }).join(',')}]`,\n    `resources[${getIdNameFields({ rename: true }).join(',')}]`,\n    `users[${getIdNameFields({ rename: true }).join(',')}]`,\n];\n\n// Map\nexport const getMapFields = () => [\n    `${getIdNameFields({ rename: true }).join(',')}`,\n    'user,longitude,latitude,zoom,basemap',\n    `mapViews[${getFavoriteFields({\n        withDimensions: true,\n        withOptions: true,\n    })}]`,\n];\n\n// Api\n\n// Get more info about the favorite of a dashboard item\nexport const apiFetchFavorite = (id, type, { fields }) =>\n    getInstance().then(d2 =>\n        d2.Api.getApi().get(`${getEndPointName(type)}/${id}`, {\n            fields:\n                fields ||\n                getFavoriteFields({\n                    withDimensions: true,\n                    withOptions: true,\n                }),\n        })\n    );\n","import arrayClean from 'd2-utilizr/lib/arrayClean';\nimport {\n    getListItemFields,\n    getFavoritesFields,\n    getIdNameFields,\n} from './metadata';\n\n// Helper functions\n\nexport const onError = error => console.log('Error: ', error);\n\n// Dashboard item\nexport const getDashboardItemsFields = ({ withFavorite } = {}) =>\n    arrayClean([\n        'id',\n        'type',\n        'shape',\n        'x',\n        'y',\n        'width~rename(w)',\n        'height~rename(h)',\n        'messages',\n        'text',\n        'appKey',\n        `${getListItemFields().join(',')}`,\n        withFavorite\n            ? `${getFavoritesFields({\n                  withDimensions: withFavorite.withDimensions,\n              }).join(',')}`\n            : ``,\n    ]);\n\n// Dashboard\nexport const getDashboardFields = ({ withItems, withFavorite } = {}) =>\n    arrayClean([\n        `${getIdNameFields().join(',')}`,\n        'description',\n        'displayDescription',\n        'favorite',\n        `user[${getIdNameFields({ rename: true }).join(',')}]`,\n        'created',\n        'lastUpdated',\n        'access',\n        withItems\n            ? `dashboardItems[${getDashboardItemsFields({\n                  withFavorite,\n              }).join(',')}]`\n            : ``,\n    ]);\n","import { getInstance } from 'd2';\nimport arrayClean from 'd2-utilizr/lib/arrayClean';\nimport { onError, getDashboardFields } from './index';\n\n// Get \"all\" dashboards on startup\nexport const apiFetchDashboards = () =>\n    getInstance()\n        .then(d2 =>\n            d2.models.dashboard.list({\n                fields: [\n                    getDashboardFields().join(','),\n                    'dashboardItems[id]',\n                ].join(','),\n                paging: 'false',\n            })\n        )\n        .catch(onError);\n\n// Get more info about selected dashboard\nexport const apiFetchDashboard = id =>\n    getInstance()\n        .then(d2 =>\n            d2.models.dashboard.get(id, {\n                fields: arrayClean(\n                    getDashboardFields({\n                        withItems: true,\n                        withFavorite: { withDimensions: false },\n                    })\n                ).join(','),\n            })\n        )\n        .catch(onError);\n\n// Star dashboard\nexport const apiStarDashboard = (id, isStarred) => {\n    const url = `dashboards/${id}/favorite`;\n\n    getInstance().then(d2 => {\n        if (isStarred) {\n            d2.Api.getApi().post(url);\n        } else {\n            d2.Api.getApi().delete(url);\n        }\n    });\n};\n\nexport const apiDeleteDashboard = id => {\n    return getInstance()\n        .then(d2 => {\n            return d2.models.dashboards\n                .get(id)\n                .then(dashboard => dashboard.delete());\n        })\n        .catch(onError);\n};\n","import isFunction from 'd2-utilizr/lib/isFunction';\n\nimport { orObject } from '../../modules/util';\n\n// Dimensions for the react-grid-layout\n\nexport const GRID_COMPACT_TYPE = 'vertical'; // vertical | horizonal | null\nexport const GRID_ROW_HEIGHT = 10;\nconst GRID_COLUMN_WIDTH_PX = 20;\nconst GRID_LAYOUT = 'FLEXIBLE'; // FIXED | FLEXIBLE\nexport const MARGIN = [10, 10];\n\nexport const NEW_ITEM_SHAPE = { x: 0, y: 0, w: 20, h: 29 };\nexport const ITEM_MIN_HEIGHT = 4;\n\n// Dimensions for getShape\n\nconst NUMBER_OF_ITEM_COLS = 2;\nconst GRID_COLUMNS = 60;\n\nexport const getGridColumns = () => {\n    switch (GRID_LAYOUT) {\n        case 'FLEXIBLE':\n            return GRID_COLUMNS;\n        case 'FIXED':\n            return Math.floor((window.innerWidth - 20) / GRID_COLUMN_WIDTH_PX);\n        default:\n            return GRID_COLUMNS;\n    }\n};\n\n// isNonNegativeInteger\n\nconst isNonNegativeInteger = x => Number.isInteger(x) && x >= 0;\n\n// Does the item have all the shape properties?\n\nexport const hasShape = item =>\n    isNonNegativeInteger(item.x) &&\n    isNonNegativeInteger(item.y) &&\n    isNonNegativeInteger(item.w) &&\n    isNonNegativeInteger(item.h);\n\n// returns a rectangular grid block dimensioned with x, y, w, h in grid units.\n// based on a grid with 3 items across\nexport const getShape = i => {\n    if (!isNonNegativeInteger(i)) {\n        throw new Error('Invalid grid block number');\n    }\n\n    const col = i % NUMBER_OF_ITEM_COLS;\n    const row = Math.floor(i / NUMBER_OF_ITEM_COLS);\n    const itemWidth = Math.floor((GRID_COLUMNS - 1) / NUMBER_OF_ITEM_COLS);\n    const itemHeight = GRID_ROW_HEIGHT * 2;\n\n    return {\n        x: col * itemWidth,\n        y: row * itemHeight,\n        w: itemWidth,\n        h: itemHeight,\n    };\n};\n\n/**\n * Calculates the grid item's original height in pixels based\n * on the height in grid units. This calculation\n * is copied directly from react-grid-layout GridItem.js (calcPosition)\n *\n * @param {Object} item item containing shape (x, y, w, h)\n */\nconst getOriginalHeight = item => {\n    const originalHeight = Math.round(\n        GRID_ROW_HEIGHT * item.h + Math.max(0, item.h - 1) * MARGIN[1]\n    );\n\n    return { originalHeight };\n};\n\n/**\n * Returns an array of items containing the x, y, w, h dimensions\n * and the item's originalheight in pixels\n * @function\n * @param {Array} items\n * @returns {Array}\n */\n\nexport const withShape = items =>\n    items.map((item, index) => {\n        const itemWithShape = hasShape(item)\n            ? item\n            : Object.assign({}, item, getShape(index));\n\n        return Object.assign(\n            {},\n            itemWithShape,\n            getOriginalHeight(itemWithShape)\n        );\n    });\n\nexport const getGridItemDomId = id => `item-${id}`;\n\nexport function onItemResize(id) {\n    const el = orObject(document.querySelector(`#${getGridItemDomId(id)}`));\n    if (isFunction(el.setViewportSize))\n        setTimeout(\n            () => el.setViewportSize(el.clientWidth - 5, el.clientHeight - 5),\n            10\n        );\n}\n","import update from 'immutability-helper';\nimport { arrayToIdMap } from '../modules/util';\n\nexport const RECEIVED_MESSAGES = 'RECEIVED_MESSAGES';\n\nexport default (state = {}, action) => {\n    switch (action.type) {\n        case RECEIVED_MESSAGES: {\n            const conversations = arrayToIdMap(action.value);\n\n            const newState = update(state, { $merge: conversations });\n\n            return newState;\n        }\n        default:\n            return state;\n    }\n};\n\n// selectors\n\nexport const sGetMessagesRoot = state => state.messages;\n","import { getInstance } from 'd2';\n\nexport const getMessages = () => {\n    const fields =\n        'id,messageCount,lastUpdated,messageType,displayName,read,messages[id,read,sender[id,displayName],text,lastUpdated]';\n    const url = `/messageConversations?fields=${fields}&order=read:asc&pageSize=200`;\n    return getInstance()\n        .then(d2 => d2.Api.getApi().get(url))\n        .catch(error => console.log('Error:', error));\n};\n","export const RECEIVED_SNACKBAR_MESSAGE = 'RECEIVED_SNACKBAR_MESSAGE';\nexport const CLOSE_SNACKBAR = 'CLOSE_SNACKBAR';\n\nexport const DEFAULT_STATE_SNACKBAR = {\n    message: {},\n    duration: null,\n    open: false,\n};\n\nexport default (state = DEFAULT_STATE_SNACKBAR, action) => {\n    switch (action.type) {\n        case RECEIVED_SNACKBAR_MESSAGE: {\n            return { ...state, ...action.value };\n        }\n        case CLOSE_SNACKBAR: {\n            return DEFAULT_STATE_SNACKBAR;\n        }\n        default:\n            return state;\n    }\n};\n\n// selectors\n\nexport const sGetSnackbar = state => state.snackbar || DEFAULT_STATE_SNACKBAR;\n","import {\n    RECEIVED_SNACKBAR_MESSAGE,\n    CLOSE_SNACKBAR,\n} from '../reducers/snackbar';\n\nexport const acReceivedSnackbarMessage = value => ({\n    type: RECEIVED_SNACKBAR_MESSAGE,\n    value,\n});\n\nexport const acCloseSnackbar = () => ({\n    type: CLOSE_SNACKBAR,\n});\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport Snackbar from '@material-ui/core/Snackbar';\n\nimport { sGetSnackbar } from '../../reducers/snackbar';\nimport { acCloseSnackbar } from '../../actions/snackbar';\n\nconst LOADING_DASHBOARD = 'LOADING_DASHBOARD';\nexport const loadingDashboardMsg = { name: '', type: LOADING_DASHBOARD };\n\nconst SnackbarMessageContent = ({ message }) => {\n    if (typeof message === 'object') {\n        //future message types:  switch(message.type)\n        return (\n            <span>\n                Loading <span style={{ fontWeight: 800 }}>{message.name}</span>{' '}\n                dashboard\n            </span>\n        );\n    }\n    return message;\n};\n\nexport const SnackbarMessage = props => {\n    return (\n        <Snackbar\n            style={{ zIndex: 10001 }}\n            open={props.snackbarOpen}\n            message={<SnackbarMessageContent message={props.snackbarMessage} />}\n            autoHideDuration={props.snackbarDuration}\n            onClose={props.onCloseSnackbar}\n        />\n    );\n};\n\nconst mapStateToProps = state => {\n    const { message, duration, open } = sGetSnackbar(state);\n    return {\n        snackbarOpen: open,\n        snackbarMessage: message,\n        snackbarDuration: duration,\n    };\n};\n\nexport default connect(\n    mapStateToProps,\n    {\n        onCloseSnackbar: acCloseSnackbar,\n    }\n)(SnackbarMessage);\n","import isObject from 'lodash/isObject';\nimport { apiFetchFavorite, getMapFields } from '../../../api/metadata';\nimport {\n    REPORT_TABLE,\n    CHART,\n    MAP,\n    EVENT_REPORT,\n    EVENT_CHART,\n    itemTypeMap,\n    getPlugin,\n} from '../../../modules/itemTypes';\nimport { getBaseUrl, getWithoutId } from '../../../modules/util';\nimport { getGridItemDomId } from '../../ItemGrid/gridUtil';\n\nexport const THEMATIC_LAYER = 'thematic';\n\nexport const pluginIsAvailable = (item = {}, visualization = {}) => {\n    const type = visualization.activeType || item.type;\n\n    return !!getPlugin(type);\n};\n\nexport const extractFavorite = item => {\n    if (!isObject(item)) {\n        return null;\n    }\n\n    switch (item.type) {\n        case REPORT_TABLE:\n            return item.reportTable;\n        case CHART:\n            return item.chart;\n        case MAP:\n            return item.map;\n        case EVENT_REPORT:\n            return item.eventReport;\n        case EVENT_CHART:\n            return item.eventChart;\n        default:\n            return (\n                item.reportTable ||\n                item.chart ||\n                item.map ||\n                item.eventReport ||\n                item.eventChart ||\n                {}\n            );\n    }\n};\n\nexport const extractMapView = map =>\n    map.mapViews && map.mapViews.find(mv => mv.layer.includes(THEMATIC_LAYER));\n\nexport const loadPlugin = (plugin, config, credentials) => {\n    if (!(plugin && plugin.load)) {\n        return;\n    }\n\n    plugin.url = credentials.baseUrl;\n    plugin.loadingIndicator = true;\n    plugin.dashboard = true;\n    if (credentials.auth) {\n        plugin.auth = credentials.auth;\n    }\n    plugin.load(config);\n};\n\nexport const getId = item => extractFavorite(item).id;\nexport const getName = item => extractFavorite(item).name;\nexport const getDescription = item => extractFavorite(item).description;\nexport const getLink = (item, d2) => {\n    const baseUrl = getBaseUrl(d2);\n    const appUrl = itemTypeMap[item.type].appUrl(getId(item));\n\n    return `${baseUrl}/${appUrl}`;\n};\n\nexport const load = async (\n    item,\n    visualization,\n    credentials,\n    activeType,\n    filter = {}\n) => {\n    const config = {\n        ...visualization,\n        el: getGridItemDomId(item.id),\n    };\n\n    const type = activeType || item.type;\n    const plugin = getPlugin(type);\n\n    loadPlugin(plugin, config, credentials);\n};\n\nexport const fetch = async item => {\n    const fetchedFavorite = await apiFetchFavorite(getId(item), item.type, {\n        fields: item.type === MAP ? getMapFields() : null,\n    });\n\n    return fetchedFavorite;\n};\n\nexport const resize = item => {\n    const plugin = getPlugin(item.type);\n\n    if (plugin && plugin.resize) {\n        plugin.resize(getGridItemDomId(item.id));\n    }\n};\n\nexport const unmount = (item, activeType) => {\n    const plugin = getPlugin(activeType);\n\n    if (plugin && plugin.unmount) {\n        plugin.unmount(getGridItemDomId(item.id));\n    }\n};\n\nexport const getVisualizationConfig = (\n    visualization,\n    originalType,\n    activeType\n) => {\n    if (originalType === MAP && originalType !== activeType) {\n        const extractedMapView = extractMapView(visualization);\n\n        if (extractedMapView === undefined) {\n            return null;\n        }\n\n        return getWithoutId({\n            ...visualization,\n            ...extractedMapView,\n            mapViews: undefined,\n        });\n    }\n\n    return getWithoutId(visualization);\n};\n","import {\n    SET_SELECTED_ID,\n    SET_SELECTED_ISLOADING,\n    SET_SELECTED_SHOWDESCRIPTION,\n} from '../reducers/selected';\nimport {\n    RECEIVED_VISUALIZATION,\n    RECEIVED_ACTIVE_VISUALIZATION,\n} from '../reducers/visualizations';\nimport { sGetSelectedIsLoading } from '../reducers/selected';\nimport { sGetUserUsername } from '../reducers/user';\nimport { getCustomDashboards, sGetDashboardById } from '../reducers/dashboards';\nimport { apiFetchDashboard } from '../api/dashboards';\nimport { acSetDashboardItems, acAppendDashboards } from './dashboards';\nimport { withShape } from '../components/ItemGrid/gridUtil';\nimport { tGetMessages } from '../components/Item/MessagesItem/actions';\nimport { acReceivedSnackbarMessage, acCloseSnackbar } from './snackbar';\nimport { storePreferredDashboardId } from '../api/localStorage';\nimport { loadingDashboardMsg } from '../components/SnackbarMessage/SnackbarMessage';\nimport {\n    REPORT_TABLE,\n    CHART,\n    MAP,\n    EVENT_REPORT,\n    EVENT_CHART,\n    MESSAGES,\n} from '../modules/itemTypes';\nimport { extractFavorite } from '../components/Item/VisualizationItem/plugin';\nimport { orObject } from '../modules/util';\n\n// actions\n\nexport const acSetSelectedId = value => ({\n    type: SET_SELECTED_ID,\n    value,\n});\n\nexport const acSetSelectedIsLoading = value => ({\n    type: SET_SELECTED_ISLOADING,\n    value,\n});\n\nexport const acSetSelectedShowDescription = value => ({\n    type: SET_SELECTED_SHOWDESCRIPTION,\n    value,\n});\n\nexport const acReceivedVisualization = value => ({\n    type: RECEIVED_VISUALIZATION,\n    value,\n});\n\nexport const acReceivedActiveVisualization = (id, type, activeType) => {\n    const action = {\n        type: RECEIVED_ACTIVE_VISUALIZATION,\n        id,\n    };\n\n    if (activeType !== type) {\n        action.activeType = activeType;\n    }\n\n    return action;\n};\n\nexport const tLoadDashboard = id => async (dispatch, getState) => {\n    try {\n        const dash = await apiFetchDashboard(id);\n        dispatch(acAppendDashboards(dash));\n\n        return Promise.resolve(dash);\n    } catch (err) {\n        console.log('Error: ', err);\n        return err;\n    }\n};\n\n// thunks\nexport const tSetSelectedDashboardById = id => async (dispatch, getState) => {\n    dispatch(acSetSelectedIsLoading(true));\n\n    const snackbarTimeout = setTimeout(() => {\n        const dashboardName = orObject(sGetDashboardById(getState(), id))\n            .displayName;\n        if (sGetSelectedIsLoading(getState()) && dashboardName) {\n            loadingDashboardMsg.name = dashboardName;\n\n            dispatch(\n                acReceivedSnackbarMessage({\n                    message: loadingDashboardMsg,\n                    open: true,\n                })\n            );\n        }\n    }, 500);\n\n    const onSuccess = selected => {\n        const customDashboard = getCustomDashboards(selected)[0];\n\n        dispatch(\n            acSetDashboardItems(withShape(customDashboard.dashboardItems))\n        );\n\n        storePreferredDashboardId(sGetUserUsername(getState()), id);\n\n        // add visualizations to store\n        customDashboard.dashboardItems.forEach(item => {\n            switch (item.type) {\n                case REPORT_TABLE:\n                case CHART:\n                case MAP:\n                case EVENT_REPORT:\n                case EVENT_CHART:\n                    dispatch(acReceivedVisualization(extractFavorite(item)));\n                    break;\n                case MESSAGES:\n                    dispatch(tGetMessages(id));\n                    break;\n                default:\n                    break;\n            }\n        });\n\n        dispatch(acSetSelectedId(id));\n\n        dispatch(acSetSelectedIsLoading(false));\n\n        clearTimeout(snackbarTimeout);\n\n        dispatch(acCloseSnackbar());\n\n        return selected;\n    };\n\n    const onError = error => {\n        console.log('Error: ', error);\n        return error;\n    };\n\n    try {\n        const selected = await dispatch(tLoadDashboard(id));\n\n        return onSuccess(selected);\n    } catch (err) {\n        return onError(err);\n    }\n};\n","export const getPreferredDashboardId = username =>\n    localStorage.getItem(`dhis2.dashboard.current.${username}`) || undefined;\n\nexport const storePreferredDashboardId = (username, dashboardId) => {\n    localStorage.setItem(`dhis2.dashboard.current.${username}`, dashboardId);\n};\n","import { RECEIVED_MESSAGES } from '../../../reducers/messages';\nimport { getMessages } from '../../../api/messages';\n\nconst onError = (action, error) => {\n    console.log(`Error in action ${action}: ${error}`);\n    return error;\n};\n\nexport const receivedMessages = value => ({\n    type: RECEIVED_MESSAGES,\n    value,\n});\n\nexport const tGetMessages = dashboardItemId => async dispatch => {\n    try {\n        const messages = await getMessages();\n        const { messageConversations } = messages;\n\n        return dispatch(receivedMessages(messageConversations));\n    } catch (err) {\n        return onError('Get Messages', err);\n    }\n};\n","/** @module reducers/editDashboard */\nimport update from 'immutability-helper';\nimport isEmpty from 'lodash/isEmpty';\nimport { orArray, orObject } from '../modules/util';\n\nexport const RECEIVED_EDIT_DASHBOARD = 'RECEIVED_EDIT_DASHBOARD';\nexport const RECEIVED_NOT_EDITING = 'RECEIVED_NOT_EDITING';\nexport const START_NEW_DASHBOARD = 'START_NEW_DASHBOARD';\nexport const RECEIVED_TITLE = 'RECEIVED_TITLE';\nexport const RECEIVED_DESCRIPTION = 'RECEIVED_DESCRIPTION';\nexport const ADD_DASHBOARD_ITEM = 'ADD_DASHBOARD_ITEM';\nexport const REMOVE_DASHBOARD_ITEM = 'REMOVE_DASHBOARD_ITEM';\nexport const UPDATE_DASHBOARD_ITEM = 'UPDATE_DASHBOARD_ITEM';\nexport const RECEIVED_DASHBOARD_LAYOUT = 'RECEIVED_DASHBOARD_LAYOUT';\n\nexport const DEFAULT_STATE_EDIT_DASHBOARD = {};\nexport const NEW_DASHBOARD_STATE = {\n    id: '',\n    name: '',\n    access: {},\n    description: '',\n    dashboardItems: [],\n};\n\nexport default (state = DEFAULT_STATE_EDIT_DASHBOARD, action) => {\n    switch (action.type) {\n        case RECEIVED_EDIT_DASHBOARD:\n            const newState = {};\n            Object.keys(NEW_DASHBOARD_STATE).map(\n                k => (newState[k] = action.value[k])\n            );\n            return newState;\n        case RECEIVED_NOT_EDITING:\n            return DEFAULT_STATE_EDIT_DASHBOARD;\n        case START_NEW_DASHBOARD:\n            return NEW_DASHBOARD_STATE;\n        case RECEIVED_TITLE: {\n            return Object.assign({}, state, { name: action.value });\n        }\n        case RECEIVED_DESCRIPTION: {\n            return Object.assign({}, state, {\n                description: action.value,\n            });\n        }\n        case ADD_DASHBOARD_ITEM:\n            return update(state, {\n                dashboardItems: { $unshift: [action.value] },\n            });\n        case REMOVE_DASHBOARD_ITEM: {\n            const idToRemove = action.value;\n\n            const dashboardItemIndex = state.dashboardItems.findIndex(\n                item => item.id === idToRemove\n            );\n\n            if (dashboardItemIndex > -1) {\n                return update(state, {\n                    dashboardItems: {\n                        $splice: [[dashboardItemIndex, 1]],\n                    },\n                });\n            }\n\n            return state;\n        }\n        case RECEIVED_DASHBOARD_LAYOUT: {\n            const stateItems = orArray(state.dashboardItems);\n\n            const newStateItems = action.value.map(({ x, y, w, h, i }) => {\n                const stateItem = stateItems.find(si => si.id === i);\n\n                return Object.assign({}, stateItem, { w, h, x, y });\n            });\n\n            return update(state, {\n                dashboardItems: { $set: newStateItems },\n            });\n        }\n        case UPDATE_DASHBOARD_ITEM: {\n            const dashboardItem = action.value;\n\n            const dashboardItemIndex = state.dashboardItems.findIndex(\n                item => item.id === dashboardItem.id\n            );\n\n            if (dashboardItemIndex > -1) {\n                const newState = update(state, {\n                    dashboardItems: {\n                        $splice: [[dashboardItemIndex, 1, dashboardItem]],\n                    },\n                });\n\n                return newState;\n            }\n\n            return state;\n        }\n        default:\n            return state;\n    }\n};\n\n// root selector\n\nexport const sGetEditDashboardRoot = state => state.editDashboard;\n\n// selectors\n\nexport const sGetIsEditing = state => !isEmpty(state.editDashboard);\n\nexport const sGetIsNewDashboard = state => {\n    return (\n        !isEmpty(state.editDashboard) && sGetEditDashboardRoot(state).id === ''\n    );\n};\n\nexport const sGetEditDashboardItems = state =>\n    orObject(sGetEditDashboardRoot(state)).dashboardItems;\n","export const CLEAR_EDIT_ITEM_FILTERS = 'CLEAR_EDIT_ITEM_FILTERS';\nexport const REMOVE_EDIT_ITEM_FILTER = 'REMOVE_EDIT_ITEM_FILTER';\nexport const SET_EDIT_ITEM_FILTERS = 'SET_EDIT_ITEM_FILTERS';\n\nexport const DEFAULT_STATE_EDIT_ITEM_FILTERS = {};\n\nexport default (state = DEFAULT_STATE_EDIT_ITEM_FILTERS, action) => {\n    switch (action.type) {\n        case REMOVE_EDIT_ITEM_FILTER: {\n            const newState = { ...state };\n\n            delete newState[action.id];\n\n            return newState;\n        }\n        case SET_EDIT_ITEM_FILTERS: {\n            return action.filters;\n        }\n        case CLEAR_EDIT_ITEM_FILTERS: {\n            return DEFAULT_STATE_EDIT_ITEM_FILTERS;\n        }\n        default:\n            return state;\n    }\n};\n\n// selectors\n\nexport const sGetEditItemFiltersRoot = state => state.editItemFilters;\n\nexport const sGetEditFiltersKeys = state =>\n    Object.keys(sGetEditItemFiltersRoot(state));\n","export const CLEAR_ITEM_FILTERS = 'CLEAR_ITEM_FILTERS';\nexport const SET_ITEM_FILTERS = 'SET_ITEM_FILTERS';\nexport const ADD_ITEM_FILTER = 'ADD_ITEM_FILTER';\nexport const REMOVE_ITEM_FILTER = 'REMOVE_ITEM_FILTER';\n\nexport const DEFAULT_STATE_ITEM_FILTERS = {};\n\nexport default (state = DEFAULT_STATE_ITEM_FILTERS, action) => {\n    switch (action.type) {\n        case ADD_ITEM_FILTER: {\n            return {\n                ...state,\n                [action.filter.id]: action.filter.value,\n            };\n        }\n        case REMOVE_ITEM_FILTER: {\n            const newState = { ...state };\n\n            delete newState[action.id];\n\n            return newState;\n        }\n        case SET_ITEM_FILTERS: {\n            return action.filters;\n        }\n        case CLEAR_ITEM_FILTERS: {\n            return DEFAULT_STATE_ITEM_FILTERS;\n        }\n        default:\n            return state;\n    }\n};\n\n// selectors\n\nexport const sGetItemFiltersRoot = state => state.itemFilters;\n\nexport const sGetFiltersKeys = state => Object.keys(sGetItemFiltersRoot(state));\n","import {\n    ADD_ITEM_FILTER,\n    REMOVE_ITEM_FILTER,\n    SET_ITEM_FILTERS,\n    CLEAR_ITEM_FILTERS,\n} from '../reducers/itemFilters';\n\nexport const FILTER_ORG_UNIT = 'ou';\n\n// actions\n\nexport const acAddItemFilter = filter => ({\n    type: ADD_ITEM_FILTER,\n    filter,\n});\n\nexport const acRemoveItemFilter = id => ({\n    type: REMOVE_ITEM_FILTER,\n    id,\n});\n\nexport const acClearItemFilters = () => ({\n    type: CLEAR_ITEM_FILTERS,\n});\n\nexport const acSetItemFilters = filters => ({\n    type: SET_ITEM_FILTERS,\n    filters,\n});\n","import {\n    REMOVE_EDIT_ITEM_FILTER,\n    SET_EDIT_ITEM_FILTERS,\n    CLEAR_EDIT_ITEM_FILTERS,\n} from '../reducers/editItemFilters';\n\n// actions\n\nexport const acRemoveEditItemFilter = id => ({\n    type: REMOVE_EDIT_ITEM_FILTER,\n    id,\n});\n\nexport const acClearEditItemFilters = () => ({\n    type: CLEAR_EDIT_ITEM_FILTERS,\n});\n\nexport const acSetEditItemFilters = filters => ({\n    type: SET_EDIT_ITEM_FILTERS,\n    filters,\n});\n","import { getInstance } from 'd2';\n\nconst onError = error => console.log('Error: ', error);\n\nconst saveDashboard = (dashboard, data) => {\n    const { name, description, dashboardItems } = data;\n\n    dashboard.name = name;\n    dashboard.description = description;\n    dashboard.dashboardItems = dashboardItems.map(item =>\n        Object.assign({}, item, { width: item.w, height: item.h })\n    );\n\n    return dashboard.save().then(msg => msg.response.uid);\n};\n\nexport const updateDashboard = data => {\n    return getInstance()\n        .then(d2 => {\n            return d2.models.dashboards\n                .get(data.id)\n                .then(dashboard => saveDashboard(dashboard, data));\n        })\n        .catch(onError);\n};\n\nexport const postDashboard = data => {\n    return getInstance().then(d2 => {\n        const dashboard = d2.models.dashboards.create();\n\n        return saveDashboard(dashboard, data);\n    });\n};\n","import { generateUid } from 'd2/uid';\n\nimport {\n    RECEIVED_EDIT_DASHBOARD,\n    START_NEW_DASHBOARD,\n    RECEIVED_NOT_EDITING,\n    RECEIVED_TITLE,\n    RECEIVED_DESCRIPTION,\n    RECEIVED_DASHBOARD_LAYOUT,\n    ADD_DASHBOARD_ITEM,\n    UPDATE_DASHBOARD_ITEM,\n    REMOVE_DASHBOARD_ITEM,\n} from '../reducers/editDashboard';\nimport { sGetEditDashboardRoot } from '../reducers/editDashboard';\nimport { updateDashboard, postDashboard } from '../api/editDashboard';\nimport { tSetSelectedDashboardById } from '../actions/selected';\nimport { NEW_ITEM_SHAPE } from '../components/ItemGrid/gridUtil';\nimport {\n    itemTypeMap,\n    isSpacerType,\n    TEXT,\n    emptyTextItemContent,\n    isTextType,\n} from '../modules/itemTypes';\n\nconst onError = error => {\n    console.log('Error (Saving Dashboard): ', error);\n    return error;\n};\n\n// actions\n\nexport const acSetEditDashboard = (dashboard, items) => {\n    const val = {\n        ...dashboard,\n        dashboardItems: items,\n    };\n\n    return {\n        type: RECEIVED_EDIT_DASHBOARD,\n        value: val,\n    };\n};\n\nexport const acSetEditNewDashboard = () => ({\n    type: START_NEW_DASHBOARD,\n});\n\nexport const acClearEditDashboard = () => ({\n    type: RECEIVED_NOT_EDITING,\n});\n\nexport const acSetDashboardTitle = value => ({\n    type: RECEIVED_TITLE,\n    value,\n});\n\nexport const acSetDashboardDescription = value => ({\n    type: RECEIVED_DESCRIPTION,\n    value,\n});\n\nexport const acUpdateDashboardLayout = value => ({\n    type: RECEIVED_DASHBOARD_LAYOUT,\n    value,\n});\n\nexport const acAddDashboardItem = item => {\n    const type = item.type;\n    delete item.type;\n    const itemPropName = itemTypeMap[type].propName;\n\n    return {\n        type: ADD_DASHBOARD_ITEM,\n        value: {\n            id: generateUid(),\n            type,\n            [itemPropName]: item.content,\n            ...NEW_ITEM_SHAPE,\n        },\n    };\n};\n\nexport const acUpdateDashboardItem = item => ({\n    type: UPDATE_DASHBOARD_ITEM,\n    value: item,\n});\n\nexport const acRemoveDashboardItem = value => ({\n    type: REMOVE_DASHBOARD_ITEM,\n    value,\n});\n\n// thunks\n\nexport const tSaveDashboard = () => async (dispatch, getState) => {\n    const dashboard = sGetEditDashboardRoot(getState());\n\n    const dashboardItems = dashboard.dashboardItems.map(item => {\n        const text = isTextType(item)\n            ? item.text || emptyTextItemContent\n            : null;\n\n        const type = isSpacerType(item) ? TEXT : item.type;\n\n        return {\n            ...item,\n            ...(text ? { text } : {}),\n            type,\n        };\n    });\n\n    const dashboardToSave = {\n        ...dashboard,\n        dashboardItems,\n    };\n\n    try {\n        const dashboardId = dashboardToSave.id\n            ? await updateDashboard(dashboardToSave)\n            : await postDashboard(dashboardToSave);\n\n        dispatch(acClearEditDashboard());\n        await dispatch(tSetSelectedDashboardById(dashboardId));\n\n        return Promise.resolve(dashboardId);\n    } catch (error) {\n        onError(error);\n    }\n};\n","import {\n    SET_DASHBOARDS,\n    ADD_DASHBOARDS,\n    SET_DASHBOARD_STARRED,\n    SET_DASHBOARD_DISPLAY_NAME,\n    SET_DASHBOARD_ITEMS,\n} from '../reducers/dashboards';\nimport {\n    getCustomDashboards,\n    sGetDashboardById,\n    sGetDashboardsSortedByStarred,\n} from '../reducers/dashboards';\nimport { sGetUserUsername } from '../reducers/user';\nimport { tSetSelectedDashboardById, acSetSelectedId } from './selected';\nimport { sGetSelectedId } from '../reducers/selected';\nimport { sGetIsEditing } from '../reducers/editDashboard';\nimport { sGetEditItemFiltersRoot } from '../reducers/editItemFilters';\nimport { acSetItemFilters, acClearItemFilters } from './itemFilters';\nimport { acClearEditItemFilters } from './editItemFilters';\nimport { acClearEditDashboard } from './editDashboard';\nimport {\n    apiFetchDashboards,\n    apiStarDashboard,\n    apiDeleteDashboard,\n} from '../api/dashboards';\nimport { getPreferredDashboardId } from '../api/localStorage';\nimport { arrayToIdMap } from '../modules/util';\n\n// actions\n\nexport const acSetDashboards = dashboards => ({\n    type: SET_DASHBOARDS,\n    value: arrayToIdMap(getCustomDashboards(dashboards)),\n});\n\nexport const acAppendDashboards = dashboards => ({\n    type: ADD_DASHBOARDS,\n    value: arrayToIdMap(getCustomDashboards(dashboards)),\n});\n\nexport const acSetDashboardStarred = (dashboardId, isStarred) => ({\n    type: SET_DASHBOARD_STARRED,\n    dashboardId: dashboardId,\n    value: isStarred,\n});\n\nexport const acSetDashboardDisplayName = (dashboardId, value) => ({\n    type: SET_DASHBOARD_DISPLAY_NAME,\n    dashboardId,\n    value,\n});\n\nexport const acSetDashboardItems = value => ({\n    type: SET_DASHBOARD_ITEMS,\n    value,\n});\n\n// thunks\n\nexport const tFetchDashboards = () => async dispatch => {\n    const collection = await apiFetchDashboards();\n    dispatch(acSetDashboards(collection.toArray()));\n};\n\nexport const tSelectDashboard = id => async (dispatch, getState) => {\n    const onError = error => {\n        console.log('Error (apiFetchDashboards): ', error);\n        return error;\n    };\n\n    try {\n        const state = getState();\n\n        let dashboardToSelect = null;\n        if (id) {\n            dashboardToSelect = sGetDashboardById(state, id) || null;\n        } else {\n            const preferredId = getPreferredDashboardId(\n                sGetUserUsername(state)\n            );\n            const dash = sGetDashboardById(state, preferredId);\n            dashboardToSelect =\n                preferredId && dash\n                    ? dash\n                    : sGetDashboardsSortedByStarred(state)[0];\n        }\n\n        if (dashboardToSelect) {\n            dispatch(tSetSelectedDashboardById(dashboardToSelect.id));\n\n            if (dashboardToSelect.id === sGetSelectedId(state)) {\n                if (sGetIsEditing(state)) {\n                    // disable filters when switching to edit mode\n                    dispatch(acClearItemFilters());\n                } else {\n                    // enable filters when switching to view mode\n                    dispatch(acSetItemFilters(sGetEditItemFiltersRoot(state)));\n                }\n            } else {\n                // clear filters when switching dashboard\n                dispatch(acClearEditItemFilters());\n                dispatch(acClearItemFilters());\n            }\n        } else {\n            dispatch(acSetSelectedId(false));\n        }\n    } catch (err) {\n        return onError(err);\n    }\n};\n\nexport const tStarDashboard = (id, isStarred) => async (dispatch, getState) => {\n    const onSuccess = id => {\n        dispatch(acSetDashboardStarred(id, isStarred));\n        return id;\n    };\n\n    const onError = error => {\n        console.log('Error (apiStarDashboard): ', error);\n        return error;\n    };\n    try {\n        await apiStarDashboard(id, isStarred);\n        return onSuccess(id);\n    } catch (err) {\n        return onError(err);\n    }\n};\n\nexport const tDeleteDashboard = id => async (dispatch, getState) => {\n    try {\n        await apiDeleteDashboard(id);\n        dispatch(acClearEditDashboard());\n        dispatch(acSetSelectedId());\n        dispatch(acSetDashboardItems([]));\n\n        await dispatch(tFetchDashboards());\n\n        return Promise.resolve();\n    } catch (err) {\n        console.log('Error (deleteDashboard): ', err);\n        return err;\n    }\n};\n","/** @module reducers/controlBar */\nimport { combineReducers } from 'redux';\nimport { validateReducer } from '../modules/util';\n\nexport const SET_CONTROLBAR_USER_ROWS = 'SET_CONTROLBAR_USER_ROWS';\n\nexport const DEFAULT_STATE_CONTROLBAR_ROWS = 1;\n\nconst userRows = (state = DEFAULT_STATE_CONTROLBAR_ROWS, action) => {\n    switch (action.type) {\n        case SET_CONTROLBAR_USER_ROWS:\n            return validateReducer(action.value, DEFAULT_STATE_CONTROLBAR_ROWS);\n        default:\n            return state;\n    }\n};\n\nexport default combineReducers({\n    userRows,\n});\n\n/**\n * Selectors that point to specific props in the state object\n * @function\n * @param {Object} state\n * @returns {Object}\n */\nexport const sGetControlBarRoot = state => state.controlBar;\n\n// Selector dependency level 2\n\nexport const sGetControlBarUserRows = state =>\n    sGetControlBarRoot(state).userRows;\n","import { getInstance } from 'd2';\nimport { DEFAULT_STATE_CONTROLBAR_ROWS } from '../reducers/controlBar';\n\nconst NAMESPACE = 'dashboard';\nconst KEY = 'controlBarRows';\n\nconst hasNamespace = async d2 => await d2.currentUser.dataStore.has(NAMESPACE);\n\nconst getNamespace = async (d2, hasNamespace) =>\n    hasNamespace\n        ? await d2.currentUser.dataStore.get(NAMESPACE)\n        : await d2.currentUser.dataStore.create(NAMESPACE);\n\nexport const apiGetControlBarRows = async () => {\n    const d2 = await getInstance();\n    const namespace = await getNamespace(d2, await hasNamespace(d2));\n    const hasKey = namespace.keys && namespace.keys.find(key => key === KEY);\n\n    if (hasKey) {\n        return await namespace.get(KEY);\n    } else {\n        await apiPostControlBarRows(DEFAULT_STATE_CONTROLBAR_ROWS, namespace);\n        console.log(\n            '(These errors to /userDataStore/dashboard can be ignored)'\n        );\n        return DEFAULT_STATE_CONTROLBAR_ROWS;\n    }\n};\n\nexport const apiPostControlBarRows = async (rows, namespace) => {\n    const d2 = await getInstance();\n    const ns = namespace || (await getNamespace(d2, hasNamespace));\n\n    ns.set(KEY, rows);\n};\n","import { SET_CONTROLBAR_USER_ROWS } from '../reducers/controlBar';\nimport { apiGetControlBarRows } from '../api/controlBar';\n\n// actions\n\nexport const acSetControlBarUserRows = rows => ({\n    type: SET_CONTROLBAR_USER_ROWS,\n    value: rows,\n});\n\n// thunks\n\nexport const tSetControlBarRows = () => async (dispatch, getState) => {\n    const onSuccess = rows => {\n        dispatch(acSetControlBarUserRows(rows));\n    };\n\n    const onError = error => {\n        console.log('Error (apiGetControlBarRows): ', error);\n        return error;\n    };\n\n    try {\n        const controlBarRows = await apiGetControlBarRows();\n        return onSuccess(controlBarRows);\n    } catch (err) {\n        return onError(err);\n    }\n};\n","import { FIXED_DIMENSIONS } from '@dhis2/analytics';\n\nexport const SET_DIMENSIONS = 'SET_DIMENSIONS';\nexport const DEFAULT_DIMENSIONS = {\n    pe: FIXED_DIMENSIONS.pe,\n    ou: FIXED_DIMENSIONS.ou,\n};\n\nexport default (state = DEFAULT_DIMENSIONS, action) => {\n    switch (action.type) {\n        case SET_DIMENSIONS: {\n            return {\n                ...DEFAULT_DIMENSIONS,\n                ...action.value,\n            };\n        }\n        default:\n            return state;\n    }\n};\n\nexport const sGetDimensions = state => state.dimensions;\n","export const SET_SETTINGS = 'SET_SETTINGS';\nexport const ADD_SETTINGS = 'ADD_SETTINGS';\n\nexport const DEFAULT_SETTINGS = {\n    keyDateFormat: 'yyyy-MM-dd',\n    keyAnalysisRelativePeriod: 'LAST_12_MONTHS',\n    keyAnalysisDigitGroupSeparator: 'SPACE',\n    displayNameProperty: 'displayName',\n    uiLocale: 'en',\n    rootOrganisationUnit: {},\n};\n\nexport default (state = DEFAULT_SETTINGS, action) => {\n    switch (action.type) {\n        case SET_SETTINGS: {\n            return Object.assign({}, action.value);\n        }\n        case ADD_SETTINGS: {\n            return {\n                ...state,\n                ...action.value,\n            };\n        }\n        default:\n            return state;\n    }\n};\n\n// Selectors\n\nexport const sGetSettings = state => state.settings;\n\nexport const sGetSettingsDisplayNameProperty = state =>\n    sGetSettings(state).displayNameProperty;\n\nexport const sGetRootOrgUnit = state =>\n    sGetSettings(state).rootOrganisationUnit;\n\nexport const sGetRelativePeriod = state =>\n    sGetSettings(state).keyAnalysisRelativePeriod;\n\nexport const sGetUiLocale = state => sGetSettings(state).uiLocale;\n","import keyBy from 'lodash/keyBy';\nimport sortBy from 'lodash/sortBy';\nimport { SET_DIMENSIONS } from '../reducers/dimensions';\nimport { apiFetchDimensions } from '@dhis2/analytics';\nimport { sGetSettingsDisplayNameProperty } from '../reducers/settings';\n\nexport const acSetDimensions = dimensions => ({\n    type: SET_DIMENSIONS,\n    value: keyBy(sortBy(dimensions, [d => d.name.toLowerCase()]), 'id'),\n});\n\nexport const tSetDimensions = d2 => async (dispatch, getState) => {\n    const onSuccess = dimensions => {\n        dispatch(acSetDimensions(dimensions));\n    };\n\n    const onError = error => {\n        console.log('Error (apiFetchDimensions): ', error);\n        return error;\n    };\n\n    try {\n        const displayNameProp = sGetSettingsDisplayNameProperty(getState());\n        const dimensions = await apiFetchDimensions(d2, displayNameProp);\n\n        // filter out CATEGORY that are not of type ATTRIBUTE\n        const filteredDimensions = dimensions.filter(\n            dim =>\n                dim.dimensionType !== 'CATEGORY' ||\n                (dim.dimensionType === 'CATEGORY' &&\n                    dim.dataDimensionType === 'ATTRIBUTE')\n        );\n        return onSuccess(filteredDimensions);\n    } catch (err) {\n        return onError(err);\n    }\n};\n","import React from 'react';\nimport i18n from '@dhis2/d2-i18n';\nimport { colors } from '@dhis2/ui-core';\nimport { withStyles } from '@material-ui/core/styles';\n\nexport const SHOWMORE_BAR_HEIGHT = 16;\n\nconst styles = {\n    showMore: {\n        color: colors.grey700,\n        cursor: 'pointer',\n        fontSize: 11,\n        paddingTop: 5,\n        '&:hover': {\n            textDecoration: 'underline',\n        },\n    },\n    disabled: {\n        paddingTop: 5,\n        color: colors.grey500,\n        fontSize: 11,\n        cursor: 'not-allowed',\n    },\n};\n\nexport const ShowMoreButton = ({ onClick, isMaxHeight, classes, disabled }) => {\n    return (\n        <div style={{ textAlign: 'center' }}>\n            {disabled ? (\n                <div className={classes.disabled}>{i18n.t('Show more')}</div>\n            ) : (\n                <div className={classes.showMore} onClick={onClick}>\n                    {isMaxHeight ? i18n.t('Show less') : i18n.t('Show more')}\n                </div>\n            )}\n        </div>\n    );\n};\n\nexport default withStyles(styles)(ShowMoreButton);\n","import { SHOWMORE_BAR_HEIGHT } from './ShowMoreButton';\n\nexport const CONTROL_BAR_ROW_HEIGHT = 40;\nexport const FIRST_ROW_PADDING_HEIGHT = 10;\nexport const MIN_ROW_COUNT = 1;\n\nexport const HEADERBAR_HEIGHT = 48;\n\nconst CONTROL_BAR_OUTER_HEIGHT_DIFF =\n    FIRST_ROW_PADDING_HEIGHT + SHOWMORE_BAR_HEIGHT - 2; // 2 pixel \"adjustment\"\n\nexport const getRowsHeight = rows => {\n    return rows * CONTROL_BAR_ROW_HEIGHT;\n};\n\nexport const getNumRowsFromHeight = height => {\n    return Math.floor(\n        (height - CONTROL_BAR_OUTER_HEIGHT_DIFF) / CONTROL_BAR_ROW_HEIGHT\n    );\n};\n\nexport const getTopOffset = rows => {\n    return HEADERBAR_HEIGHT + getControlBarHeight(rows, false);\n};\n\nexport const getControlBarHeight = rows => {\n    return getRowsHeight(rows) + CONTROL_BAR_OUTER_HEIGHT_DIFF;\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { colors } from '@dhis2/ui-core';\nimport { HEADERBAR_HEIGHT } from './controlBarDimensions';\n\nimport classes from './styles/ControlBar.module.css';\n\nconst DRAG_HANDLE_HEIGHT = 7;\n\nclass ControlBar extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            dragging: false,\n        };\n    }\n\n    onStartDrag = () => {\n        this.setState({ dragging: true });\n        window.addEventListener('mousemove', this.onDrag);\n        window.addEventListener('mouseup', this.onEndDrag);\n    };\n\n    onDrag = event => {\n        event.preventDefault();\n        event.stopPropagation();\n\n        const newHeight = event.clientY;\n\n        if (\n            this.props.onChangeHeight &&\n            newHeight !== this.props.height &&\n            newHeight > 0\n        ) {\n            requestAnimationFrame(() => {\n                this.props.onChangeHeight(newHeight);\n            });\n        }\n    };\n\n    onEndDrag = () => {\n        this.setState({ dragging: false });\n        window.removeEventListener('mousemove', this.onDrag);\n        window.removeEventListener('mouseup', this.onEndDrag);\n\n        if (this.props.onEndDrag) {\n            this.props.onEndDrag();\n        }\n    };\n\n    renderDragHandle() {\n        return typeof this.props.onChangeHeight === 'function' ? (\n            <div\n                className={classes.draghandle}\n                style={{ height: DRAG_HANDLE_HEIGHT }}\n                onMouseDown={this.onStartDrag}\n            />\n        ) : null;\n    }\n\n    render() {\n        const height = Math.max(this.props.height, 0) + DRAG_HANDLE_HEIGHT;\n\n        const rootStyle = Object.assign(\n            {\n                height,\n                top: HEADERBAR_HEIGHT,\n                backgroundColor: this.props.editMode\n                    ? colors.yellow050\n                    : colors.white,\n                paddingBottom: DRAG_HANDLE_HEIGHT,\n            },\n            // Disable animations while dragging\n            this.state.dragging ? { transition: 'none' } : {}\n        );\n\n        return (\n            <div style={rootStyle} className={classes.root}>\n                <div className={classes.content}>{this.props.children}</div>\n                {this.renderDragHandle()}\n            </div>\n        );\n    }\n}\n\nControlBar.propTypes = {\n    /**\n     * The height of the control bar in number of lines. Must be a positive integer.\n     */\n    height: PropTypes.number.isRequired,\n\n    /**\n     * If true, the background color of the control bar changes to indicate that edit mode is active.\n     */\n    editMode: PropTypes.bool.isRequired,\n\n    /**\n     * Callback function that is called when the control bar is resized.\n     * The callback receives one argument: The new height in pixels.\n     *\n     * If no callback is specified the control bar will not have a drag handle.\n     */\n    onChangeHeight: PropTypes.func,\n\n    /**\n     * Callback function that is called when the control bar is dropped after being dragged.\n     * The callback receives one argument: The new height in pixels.\n     *\n     * Ignored if no \"onChangeHeight\" function is provided.\n     */\n    onEndDrag: PropTypes.func,\n\n    /**\n     * The contents of the control bar.\n     */\n    children: PropTypes.node.isRequired,\n};\n\nControlBar.defaultProps = {\n    onChangeHeight: null,\n    onEndDrag: null,\n};\n\nexport default ControlBar;\n","import React from 'react';\n\nconst StarIcon = ({ className }) => (\n    <svg\n        className={className}\n        xmlns=\"http://www.w3.org/2000/svg\"\n        viewBox=\"0 0 24 24\"\n    >\n        <path d=\"M0 0h24v24H0z\" fill=\"none\" />\n        <path d=\"M12 17.27L18.18 21l-1.64-7.03L22 9.24l-7.19-.61L12 2 9.19 8.63 2 9.24l5.46 4.73L5.82 21z\" />\n        <path d=\"M0 0h24v24H0z\" fill=\"none\" />\n    </svg>\n);\n\nexport default StarIcon;\n","import { getInstance } from 'd2';\n\nexport const apiPostDataStatistics = async (eventType, id) => {\n    const d2 = await getInstance();\n    const url = `dataStatistics?eventType=${eventType}&favorite=${id}`;\n\n    d2.Api.getApi().post(url);\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport { Chip, colors } from '@dhis2/ui-core';\nimport { Link } from 'react-router-dom';\nimport debounce from 'lodash/debounce';\n\nimport StarIcon from '../../icons/Star';\nimport { apiPostDataStatistics } from '../../api/dataStatistics';\n\nconst styles = {\n    chip: {\n        margin: '3px',\n    },\n    link: {\n        color: colors.grey600,\n        display: 'inline-block',\n        textDecoration: 'none',\n        verticalAlign: 'top',\n    },\n    icon: {\n        height: '20px',\n        marginTop: '2px',\n        width: '20px',\n    },\n    selected: {\n        fill: colors.white,\n    },\n    unselected: {\n        fill: colors.grey700,\n    },\n};\n\nexport const DashboardItemChip = ({\n    starred,\n    selected,\n    label,\n    dashboardId,\n    classes,\n}) => {\n    const chipProps = {\n        selected,\n        className: classes.chip,\n    };\n\n    if (starred) {\n        const selectedState = selected ? classes.selected : classes.unselected;\n        chipProps.icon = (\n            <StarIcon className={`${classes.icon} ${selectedState}`} />\n        );\n    }\n\n    return (\n        <Link\n            className={classes.link}\n            to={`/${dashboardId}`}\n            onClick={debounce(\n                () => apiPostDataStatistics('DASHBOARD_VIEW', dashboardId),\n                500\n            )}\n        >\n            <Chip {...chipProps}>{label}</Chip>\n        </Link>\n    );\n};\n\nDashboardItemChip.propTypes = {\n    starred: PropTypes.bool.isRequired,\n    selected: PropTypes.bool.isRequired,\n    label: PropTypes.string.isRequired,\n    dashboardId: PropTypes.string.isRequired,\n};\n\nexport default withStyles(styles)(DashboardItemChip);\n","import React from 'react';\nimport { colors } from '@dhis2/ui-core';\n\nconst AddCircleIcon = () => (\n    <svg\n        xmlns=\"http://www.w3.org/2000/svg\"\n        width=\"32\"\n        height=\"32\"\n        fill={colors.teal600}\n        viewBox=\"0 0 24 24\"\n    >\n        <path d=\"M12 2C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2zm4 11h-3v3c0 .55-.45 1-1 1s-1-.45-1-1v-3H8c-.55 0-1-.45-1-1s.45-1 1-1h3V8c0-.55.45-1 1-1s1 .45 1 1v3h3c.55 0 1 .45 1 1s-.45 1-1 1z\" />\n    </svg>\n);\n\nexport default AddCircleIcon;\n","import React from 'react';\nimport { colors } from '@dhis2/ui-core';\n\nconst ClearIcon = ({ className }) => (\n    <svg\n        className={className}\n        fill={colors.grey800}\n        xmlns=\"http://www.w3.org/2000/svg\"\n        viewBox=\"0 0 24 24\"\n    >\n        <path d=\"M19 6.41L17.59 5 12 10.59 6.41 5 5 6.41 10.59 12 5 17.59 6.41 19 12 13.41 17.59 19 19 17.59 13.41 12z\" />\n        <path d=\"M0 0h24v24H0z\" fill=\"none\" />\n    </svg>\n);\n\nexport default ClearIcon;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport ClearIcon from '../../icons/Clear';\n\nimport classes from './styles/ClearButton.module.css';\n\nexport const ClearButton = ({ onClear }) => (\n    <button className={classes.button} onClick={onClear}>\n        <span>\n            <ClearIcon className={classes.icon} color=\"action\" />\n        </span>\n    </button>\n);\n\nClearButton.propTypes = {\n    onClear: PropTypes.func.isRequired,\n};\n\nexport default ClearButton;\n","import { combineReducers } from 'redux';\nimport { validateReducer } from '../modules/util';\n\nexport const SET_DASHBOARDS_FILTER_NAME = 'SET_DASHBOARDS_FILTER_NAME';\nexport const SET_DASHBOARDS_FILTER_OWNER = 'SET_DASHBOARDS_FILTER_OWNER';\nexport const SET_DASHBOARDS_FILTER_ORDER = 'SET_DASHBOARDS_FILTER_ORDER';\n\nexport const ownerData = [\n    { id: 'ALL', value: 'All users' },\n    { id: 'ME', value: 'Created by me' },\n    { id: 'OTHERS', value: 'Created by others' },\n];\n\nexport const orderData = [\n    { id: 'NAME:ASC', value: 'Name (asc)' },\n    { id: 'NAME:ASC', value: 'Name (desc)' },\n    { id: 'ITEMS:ASC', value: 'Number of items (asc)' },\n    { id: 'ITEMS:ASC', value: 'Number of items (desc)' },\n    { id: 'CREATED:ASC', value: 'Created date (asc)' },\n    { id: 'CREATED:ASC', value: 'Created date (desc)' },\n];\n\nexport const DEFAULT_STATE_DASHBOARDS_FILTER_NAME = '';\nexport const DEFAULT_STATE_DASHBOARDS_FILTER_OWNER = ownerData[0].id;\nexport const DEFAULT_STATE_DASHBOARDS_FILTER_ORDER = orderData[0].id;\n\nconst name = (state = DEFAULT_STATE_DASHBOARDS_FILTER_NAME, action) => {\n    switch (action.type) {\n        case SET_DASHBOARDS_FILTER_NAME:\n            return validateReducer(\n                action.value,\n                DEFAULT_STATE_DASHBOARDS_FILTER_NAME\n            );\n        default:\n            return state;\n    }\n};\n\nconst owner = (state = DEFAULT_STATE_DASHBOARDS_FILTER_OWNER, action) => {\n    switch (action.type) {\n        case SET_DASHBOARDS_FILTER_OWNER:\n            return validateReducer(\n                action.value,\n                DEFAULT_STATE_DASHBOARDS_FILTER_NAME\n            );\n        default:\n            return state;\n    }\n};\n\nconst order = (state = DEFAULT_STATE_DASHBOARDS_FILTER_ORDER, action) => {\n    switch (action.type) {\n        case SET_DASHBOARDS_FILTER_ORDER:\n            return validateReducer(\n                action.value,\n                DEFAULT_STATE_DASHBOARDS_FILTER_ORDER\n            );\n        default:\n            return state;\n    }\n};\n\nexport default combineReducers({\n    name,\n    owner,\n    order,\n});\n\n// selectors\n\nexport const sGetDashboardsFilterRoot = state => state.dashboardsFilter;\n\n// selector dependency level 2\n\nexport const sGetFilterName = state => sGetDashboardsFilterRoot(state).name;\nexport const sGetFilterOwner = state => sGetDashboardsFilterRoot(state).owner;\nexport const sGetFilterOrder = state => sGetDashboardsFilterRoot(state).order;\n","import React, { useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport i18n from '@dhis2/d2-i18n';\nimport InputField from '@material-ui/core/Input';\nimport InputAdornment from '@material-ui/core/InputAdornment';\nimport SearchIcon from '@material-ui/icons/Search';\nimport { colors } from '@dhis2/ui-core';\n\nimport ClearButton from './ClearButton';\nimport { DEFAULT_STATE_DASHBOARDS_FILTER_NAME } from '../../reducers/dashboardsFilter';\n\nexport const KEYCODE_ENTER = 13;\nexport const KEYCODE_ESCAPE = 27;\n\nconst styles = {\n    filterField: {\n        fontSize: '14px',\n        width: '200px',\n        height: '30px',\n        top: '-4px',\n    },\n    searchIcon: {\n        color: colors.grey700,\n        width: '20px',\n        height: '20px',\n    },\n};\n\nexport const Filter = props => {\n    const [value, setValue] = useState(DEFAULT_STATE_DASHBOARDS_FILTER_NAME);\n\n    useEffect(() => {\n        setValue(props.name);\n    }, [props.name]);\n\n    const setFilterValue = event => {\n        event.preventDefault();\n\n        props.onChangeName(event.target.value);\n    };\n\n    const handleKeyUp = event => {\n        switch (event.keyCode) {\n            case KEYCODE_ENTER:\n                props.onKeypressEnter();\n                break;\n            case KEYCODE_ESCAPE:\n                props.onChangeName();\n                break;\n            default:\n                break;\n        }\n    };\n\n    const startAdornment = (\n        <InputAdornment position=\"start\">\n            <SearchIcon className={props.classes.searchIcon} />\n        </InputAdornment>\n    );\n\n    const endAdornment =\n        props.name !== '' && props.name !== null ? (\n            <InputAdornment position=\"end\">\n                <ClearButton onClear={() => props.onChangeName()} />\n            </InputAdornment>\n        ) : null;\n\n    return (\n        <InputField\n            className={props.classes.filterField}\n            placeholder={i18n.t('Search for a dashboard')}\n            startAdornment={startAdornment}\n            endAdornment={endAdornment}\n            value={value}\n            onChange={setFilterValue}\n            onKeyUp={handleKeyUp}\n        />\n    );\n};\n\nFilter.propTypes = {\n    name: PropTypes.string,\n    onChangeName: PropTypes.func,\n};\n\nFilter.defaultProps = {\n    name: '',\n    onChangeName: Function.prototype,\n};\n\nexport default withStyles(styles)(Filter);\n","import React, { useState, useEffect } from 'react';\nimport { connect } from 'react-redux';\nimport { Link, withRouter } from 'react-router-dom';\nimport ControlBar from './ControlBar';\nimport arraySort from 'd2-utilizr/lib/arraySort';\n\nimport Chip from './DashboardItemChip';\nimport AddCircleIcon from '../../icons/AddCircle';\nimport Filter from './Filter';\nimport ShowMoreButton from './ShowMoreButton';\nimport {\n    FIRST_ROW_PADDING_HEIGHT,\n    MIN_ROW_COUNT,\n    getRowsHeight,\n    getControlBarHeight,\n    getNumRowsFromHeight,\n} from './controlBarDimensions';\nimport { sGetControlBarUserRows } from '../../reducers/controlBar';\nimport { sGetAllDashboards } from '../../reducers/dashboards';\nimport { sGetFilterName } from '../../reducers/dashboardsFilter';\nimport { sGetSelectedId } from '../../reducers/selected';\nimport { acSetControlBarUserRows } from '../../actions/controlBar';\nimport { acSetFilterName } from '../../actions/dashboardsFilter';\nimport { orObject, orArray } from '../../modules/util';\nimport { apiPostControlBarRows } from '../../api/controlBar';\n\nimport classes from './styles/DashboardsBar.module.css';\n\nexport const MAX_ROW_COUNT = 10;\n\nexport const DashboardsBar = props => {\n    const [rows, setRows] = useState(MIN_ROW_COUNT);\n    const [isMaxHeight, setIsMaxHeight] = useState(null);\n\n    const setDashboardState = rows => {\n        setRows(rows);\n        setIsMaxHeight(rows === MAX_ROW_COUNT);\n    };\n\n    useEffect(() => {\n        setDashboardState(props.userRows);\n    }, [props.userRows]);\n\n    const onChangeHeight = newHeight => {\n        const adjustedHeight = newHeight - 52; // don't rush the transition to a bigger row count\n        const newRows = Math.max(\n            MIN_ROW_COUNT,\n            getNumRowsFromHeight(adjustedHeight)\n        );\n\n        if (newRows !== rows) {\n            const newRowCount = Math.min(newRows, MAX_ROW_COUNT);\n\n            props.onChangeHeight(newRowCount);\n        }\n    };\n\n    const onEndDrag = () => apiPostControlBarRows(rows);\n\n    const onToggleMaxHeight = () => {\n        const _rows = rows === MAX_ROW_COUNT ? props.userRows : MAX_ROW_COUNT;\n\n        setRows(_rows);\n        setIsMaxHeight(!isMaxHeight);\n    };\n\n    const onSelectDashboard = () => {\n        props.history.push(`/${props.dashboards[0].id}`);\n    };\n\n    const rowCount = isMaxHeight ? MAX_ROW_COUNT : rows;\n    const controlBarHeight = getControlBarHeight(rowCount);\n    const contentWrapperStyle = {\n        padding: `${FIRST_ROW_PADDING_HEIGHT}px 6px 0 6px`,\n        overflowY: isMaxHeight ? 'auto' : 'hidden',\n        height: getRowsHeight(rowCount) + FIRST_ROW_PADDING_HEIGHT,\n    };\n\n    return (\n        <ControlBar\n            height={controlBarHeight}\n            onChangeHeight={onChangeHeight}\n            onEndDrag={onEndDrag}\n            editMode={false}\n        >\n            <div style={contentWrapperStyle}>\n                <div className={classes.leftControls}>\n                    <Link\n                        style={{\n                            display: 'inline-block',\n                            textDecoration: 'none',\n                            marginRight: 10,\n                            position: 'relative',\n                            top: '2px',\n                        }}\n                        to={'/new'}\n                    >\n                        <AddCircleIcon />\n                    </Link>\n                    <Filter\n                        name={props.name}\n                        onChangeName={props.onChangeFilterName}\n                        onKeypressEnter={onSelectDashboard}\n                    />\n                </div>\n                {orArray(props.dashboards).map(dashboard => (\n                    <Chip\n                        key={dashboard.id}\n                        label={dashboard.displayName}\n                        starred={dashboard.starred}\n                        dashboardId={dashboard.id}\n                        selected={dashboard.id === props.selectedId}\n                    />\n                ))}\n            </div>\n            <ShowMoreButton\n                onClick={onToggleMaxHeight}\n                isMaxHeight={isMaxHeight}\n                disabled={props.userRows === MAX_ROW_COUNT}\n            />\n        </ControlBar>\n    );\n};\n\nconst mapStateToProps = state => ({\n    dashboards: sGetAllDashboards(state),\n    name: sGetFilterName(state),\n    userRows: sGetControlBarUserRows(state),\n    selectedId: sGetSelectedId(state),\n});\n\nconst mapDispatchToProps = {\n    onChangeHeight: acSetControlBarUserRows,\n    onChangeFilterName: acSetFilterName,\n};\nconst mergeProps = (stateProps, dispatchProps, ownProps) => {\n    const dashboards = Object.values(orObject(stateProps.dashboards));\n    const displayDashboards = arraySort(\n        dashboards.filter(d =>\n            d.displayName.toLowerCase().includes(stateProps.name.toLowerCase())\n        ),\n        'ASC',\n        'displayName'\n    );\n\n    return {\n        ...stateProps,\n        ...ownProps,\n        ...dispatchProps,\n        dashboards: [\n            ...displayDashboards.filter(d => d.starred),\n            ...displayDashboards.filter(d => !d.starred),\n        ],\n    };\n};\n\nexport default withRouter(\n    connect(\n        mapStateToProps,\n        mapDispatchToProps,\n        mergeProps\n    )(DashboardsBar)\n);\n","import {\n    SET_DASHBOARDS_FILTER_NAME,\n    SET_DASHBOARDS_FILTER_OWNER,\n    SET_DASHBOARDS_FILTER_ORDER,\n} from '../reducers/dashboardsFilter';\n\n// actions\n\nexport const acSetFilterName = value => ({\n    type: SET_DASHBOARDS_FILTER_NAME,\n    value,\n});\n\nexport const acSetFilterOwner = value => ({\n    type: SET_DASHBOARDS_FILTER_OWNER,\n    value,\n});\n\nexport const acSetFilterOrder = value => ({\n    type: SET_DASHBOARDS_FILTER_ORDER,\n    value,\n});\n","import React from 'react';\nimport { connect } from 'react-redux';\n\nimport {\n    getTopOffset,\n    MIN_ROW_COUNT,\n} from '../ControlBar/controlBarDimensions';\nimport { sGetControlBarUserRows } from '../../reducers/controlBar';\n\nconst DashboardVerticalOffset = props => {\n    const rows = props.editMode ? MIN_ROW_COUNT : props.userRows;\n    const marginTop = getTopOffset(rows);\n\n    return <div className=\"page-container-top-margin\" style={{ marginTop }} />;\n};\n\nconst mapStateToProps = state => ({\n    userRows: sGetControlBarUserRows(state),\n});\n\nexport default connect(mapStateToProps)(DashboardVerticalOffset);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { MenuItem, colors } from '@dhis2/ui-core';\n\nconst HeaderMenuItem = ({ title }) => (\n    <MenuItem\n        dense\n        key={title}\n        disabled\n        label={\n            <p style={{ color: colors.grey800, fontWeight: '600' }}>{title}</p>\n        }\n    />\n);\n\nHeaderMenuItem.propTypes = {\n    title: PropTypes.string.isRequired,\n};\n\nexport default HeaderMenuItem;\n","import React from 'react';\nimport { colors } from '@dhis2/ui-core';\n\nconst LaunchIcon = ({ className }) => (\n    <svg\n        className={className}\n        xmlns=\"http://www.w3.org/2000/svg\"\n        width=\"12\"\n        height=\"12\"\n        fill={colors.grey600}\n        viewBox=\"0 0 24 24\"\n    >\n        <path d=\"M0 0h24v24H0z\" fill=\"none\" />\n        <path d=\"M19 19H5V5h7V3H5c-1.11 0-2 .9-2 2v14c0 1.1.89 2 2 2h14c1.1 0 2-.9 2-2v-7h-2v7zM14 3v2h3.59l-9.83 9.83 1.41 1.41L19 6.41V10h2V3h-7z\" />\n    </svg>\n);\n\nexport default LaunchIcon;\n","import React from 'react';\nimport { MenuItem, colors } from '@dhis2/ui-core';\nimport i18n from '@dhis2/d2-i18n';\n\nimport { getItemIcon } from '../../modules/itemTypes';\nimport LaunchIcon from '../../icons/Launch';\n\nimport classes from './styles/ContentMenuItem.module.css';\n\nconst LaunchLink = ({ url }) => (\n    <a\n        onClick={e => e.stopPropagation()}\n        className={classes.launchLink}\n        target=\"_blank\"\n        rel=\"noopener noreferrer\"\n        href={url}\n    >\n        <LaunchIcon />\n    </a>\n);\n\nconst InsertButton = () => (\n    <button className={classes.buttonInsert}>{i18n.t('Insert')}</button>\n);\n\nconst ContentMenuItem = ({ type, name, onInsert, url }) => {\n    const ItemIcon = getItemIcon(type);\n\n    return (\n        <MenuItem\n            dense\n            onClick={onInsert}\n            label={\n                <div className={classes.menuItem}>\n                    <div className={classes.label}>\n                        <ItemIcon\n                            style={{ margin: '6px', fill: colors.grey600 }}\n                        />\n                        <span>{name}</span>\n                        {url ? <LaunchLink url={url} /> : null}\n                    </div>\n                    <InsertButton />\n                </div>\n            }\n        />\n    );\n};\n\nexport default ContentMenuItem;\n","import i18n from '@dhis2/d2-i18n';\nimport {\n    spacerContent,\n    REPORT_TABLE,\n    CHART,\n    MAP,\n    EVENT_CHART,\n    EVENT_REPORT,\n    USERS,\n    REPORTS,\n    RESOURCES,\n    APP,\n    MESSAGES,\n    TEXT,\n    SPACER,\n} from '../../modules/itemTypes';\n\nexport const singleItems = [\n    {\n        id: 'additional',\n        header: i18n.t('Additional items'),\n        items: [\n            {\n                type: TEXT,\n                name: i18n.t('Text box'),\n                content: '',\n            },\n            {\n                type: MESSAGES,\n                name: i18n.t('Messages'),\n                content: 'true',\n            },\n            {\n                type: SPACER,\n                name: i18n.t('Spacer'),\n                content: spacerContent,\n            },\n        ],\n    },\n];\n\n// categorizedItems are grouped in the item selector menu\nexport const categorizedItems = [\n    REPORT_TABLE,\n    CHART,\n    MAP,\n    EVENT_REPORT,\n    EVENT_CHART,\n    USERS,\n    REPORTS,\n    RESOURCES,\n    APP,\n];\n\n// listItemTypes are included in a single dashboard item\nexport const listItemTypes = [REPORTS, RESOURCES, USERS];\n","import React, { Component, Fragment } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport i18n from '@dhis2/d2-i18n';\nimport { MenuItem, Divider } from '@dhis2/ui-core';\n\nimport HeaderMenuItem from './HeaderMenuItem';\nimport ContentMenuItem from './ContentMenuItem';\n\nimport { tAddListItemContent } from './actions';\nimport { acAddDashboardItem } from '../../actions/editDashboard';\nimport { getItemUrl, APP } from '../../modules/itemTypes';\nimport { categorizedItems, listItemTypes } from './selectableItems';\n\nimport classes from './styles/CategorizedMenuGroup.module.css';\n\nclass CategorizedMenuGroup extends Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            seeMore: false,\n        };\n    }\n\n    addItem = item => () => {\n        const { type, acAddDashboardItem, tAddListItemContent } = this.props;\n\n        if (type === APP) {\n            acAddDashboardItem({ type, content: item.key });\n        } else {\n            const newItem = {\n                id: item.id,\n                name: item.displayName || item.name,\n            };\n\n            if (listItemTypes.includes(type)) {\n                tAddListItemContent(type, newItem);\n            } else {\n                acAddDashboardItem({ type, content: newItem });\n            }\n        }\n    };\n\n    toggleSeeMore = () => {\n        this.setState({ seeMore: !this.state.seeMore });\n\n        this.props.onChangeItemsLimit(this.props.type);\n    };\n\n    render() {\n        const { title, type, items, hasMore } = this.props;\n        return (\n            <Fragment>\n                <HeaderMenuItem title={title} />\n                {items.map(item => {\n                    const itemUrl = getItemUrl(type, item, this.context.d2);\n                    return (\n                        <ContentMenuItem\n                            key={item.id || item.key}\n                            type={type}\n                            name={item.displayName || item.name}\n                            onInsert={this.addItem(item)}\n                            url={itemUrl}\n                        />\n                    );\n                })}\n                {hasMore ? (\n                    <MenuItem\n                        dense\n                        key={`showmore${title}`}\n                        onClick={this.toggleSeeMore}\n                        label={\n                            <button className={classes.showMoreButton}>\n                                {this.state.seeMore\n                                    ? i18n.t('Show fewer')\n                                    : i18n.t('Show more')}\n                            </button>\n                        }\n                    />\n                ) : null}\n                <Divider margin=\"8px 0px\" />\n            </Fragment>\n        );\n    }\n}\n\nCategorizedMenuGroup.propTypes = {\n    type: PropTypes.oneOf(categorizedItems).isRequired,\n    title: PropTypes.string.isRequired,\n    items: PropTypes.array.isRequired,\n    onChangeItemsLimit: PropTypes.func.isRequired,\n};\n\nCategorizedMenuGroup.contextTypes = {\n    d2: PropTypes.object.isRequired,\n};\n\nexport default connect(\n    null,\n    {\n        acAddDashboardItem,\n        tAddListItemContent,\n    }\n)(CategorizedMenuGroup);\n","import { sGetEditDashboardRoot } from '../../reducers/editDashboard';\nimport { itemTypeMap } from '../../modules/itemTypes';\nimport {\n    acAddDashboardItem,\n    acUpdateDashboardItem,\n} from '../../actions/editDashboard';\n\nexport const tAddListItemContent = (type, content) => (dispatch, getState) => {\n    const state = getState();\n    const listItemType = itemTypeMap[type].propName;\n    const dashboardItems = sGetEditDashboardRoot(state).dashboardItems;\n    const dashboardItemIndex = dashboardItems.findIndex(\n        item => item.type === type\n    );\n    let dashboardItem;\n\n    // Reports/Resources/Users dashboard item type already present in dashboard\n    if (dashboardItemIndex > -1) {\n        dashboardItem = dashboardItems[dashboardItemIndex];\n        dashboardItem[listItemType].push(content);\n\n        dispatch(acUpdateDashboardItem(dashboardItem));\n    } else {\n        dashboardItem = {\n            type: type,\n            content: [content],\n        };\n\n        dispatch(acAddDashboardItem(dashboardItem));\n    }\n};\n","import React, { Fragment } from 'react';\nimport { connect } from 'react-redux';\n\nimport HeaderMenuItem from './HeaderMenuItem';\nimport ContentMenuItem from './ContentMenuItem';\nimport { acAddDashboardItem } from '../../actions/editDashboard';\n\nexport const SinglesMenuGroup = ({ acAddDashboardItem, category }) => {\n    const addToDashboard = ({ type, content }) => () => {\n        acAddDashboardItem({ type, content });\n    };\n\n    return (\n        <Fragment>\n            <HeaderMenuItem title={category.header} />\n            {category.items.map(item => (\n                <ContentMenuItem\n                    key={item.type}\n                    type={item.type}\n                    name={item.name}\n                    onInsert={addToDashboard(item)}\n                />\n            ))}\n        </Fragment>\n    );\n};\n\nexport default connect(\n    null,\n    { acAddDashboardItem }\n)(SinglesMenuGroup);\n","import React, { Fragment } from 'react';\nimport PropTypes from 'prop-types';\nimport i18n from '@dhis2/d2-i18n';\nimport Popover from '@material-ui/core/Popover';\nimport { InputField, Menu } from '@dhis2/ui-core';\n\nimport CategorizedMenuGroup from './CategorizedMenuGroup';\nimport SinglesMenuGroup from './SinglesMenuGroup';\nimport { singleItems, categorizedItems } from './selectableItems';\nimport { itemTypeMap } from '../../modules/itemTypes';\n\nimport './styles/ItemSelector.css';\n\nconst ItemSearchField = props => (\n    <InputField\n        filled\n        name=\"Dashboard item search\"\n        label={i18n.t('Search for items to add to this dashboard')}\n        type=\"text\"\n        onChange={props.onChange}\n        onFocus={props.onFocus}\n        value={props.value}\n    />\n);\n\nclass ItemSelector extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            anchorEl: null,\n            open: false,\n            maxOptions: new Set(),\n            items: undefined,\n            filter: '',\n        };\n    }\n\n    closeList = () => {\n        this.setState({ open: false, filter: '' });\n    };\n\n    openList = event => {\n        this.fetchItems();\n\n        this.setState({\n            anchorEl: event.currentTarget,\n            open: true,\n        });\n    };\n\n    setFilter = event => {\n        this.setState({ filter: event.target.value }, this.fetchItems);\n    };\n\n    getCategorizedMenuGroups = () =>\n        categorizedItems\n            .filter(type => {\n                const itemType = itemTypeMap[type];\n                return (\n                    this.state.items && this.state.items[itemType.endPointName]\n                );\n            })\n            .map(type => {\n                const itemType = itemTypeMap[type];\n                const allItems = this.state.items[itemType.endPointName];\n                const hasMore = allItems.length > 5;\n                const items = this.state.maxOptions.has(itemType.id)\n                    ? allItems\n                    : allItems.slice(0, 5);\n\n                return (\n                    <CategorizedMenuGroup\n                        key={type}\n                        type={type}\n                        title={itemType.pluralTitle}\n                        items={items}\n                        onChangeItemsLimit={this.fetchItems}\n                        hasMore={hasMore}\n                    />\n                );\n            });\n\n    getSinglesMenuGroups = () =>\n        singleItems.map(category => (\n            <SinglesMenuGroup key={category.id} category={category} />\n        ));\n\n    getMenuGroups = () =>\n        this.getCategorizedMenuGroups().concat(this.getSinglesMenuGroups());\n\n    fetchItems = async type => {\n        if (type) {\n            const maxOptions = this.state.maxOptions;\n\n            if (maxOptions.has(type)) {\n                maxOptions.delete(type);\n            } else {\n                maxOptions.add(type);\n            }\n\n            this.setState({ maxOptions });\n        } else {\n            this.setState({\n                maxOptions: new Set(),\n            });\n        }\n\n        let queryString = '?count=6';\n        if ([...this.state.maxOptions.values()].length) {\n            queryString +=\n                '&max=' + [...this.state.maxOptions.values()].join('&max=');\n        }\n\n        const filter = this.state.filter ? `/${this.state.filter}` : '';\n\n        this.context.d2.Api.getApi()\n            .get(`dashboards/q${filter}${queryString}`)\n            .then(response => this.setState({ items: response }))\n            .catch(console.error);\n    };\n\n    render() {\n        return (\n            <Fragment>\n                <ItemSearchField\n                    value={this.state.filter}\n                    onChange={this.setFilter}\n                    onFocus={this.openList}\n                />\n                <Popover\n                    className=\"dashboard-item-selector\"\n                    open={this.state.open}\n                    onClose={this.closeList}\n                    anchorEl={this.state.anchorEl}\n                    anchorOrigin={{ horizontal: 'left', vertical: 'bottom' }}\n                    transformOrigin={{ horizontal: 'left', vertical: 'top' }}\n                    style={{ height: '70vh' }}\n                    PaperProps={{ style: { width: '700px' } }}\n                    disableAutoFocus={true}\n                    disableRestoreFocus={true}\n                >\n                    <Menu>{this.getMenuGroups()}</Menu>\n                </Popover>\n            </Fragment>\n        );\n    }\n}\n\nItemSelector.contextTypes = {\n    d2: PropTypes.object.isRequired,\n};\n\nexport default ItemSelector;\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport i18n from '@dhis2/d2-i18n';\nimport MuiInputField from '@material-ui/core/TextField';\nimport { InputField } from '@dhis2/ui-core';\n\nimport ItemSelector from '../ItemSelector/ItemSelector';\nimport {\n    acSetDashboardTitle,\n    acSetDashboardDescription,\n} from '../../actions/editDashboard';\nimport { orObject } from '../../modules/util';\nimport { sGetEditDashboardRoot } from '../../reducers/editDashboard';\n\nconst styles = {\n    section: { display: 'flex', justifyContent: 'space-between' },\n    titleDescription: {\n        flex: '3',\n        marginRight: '50px',\n    },\n    title: {\n        display: 'block',\n        clear: 'both',\n    },\n    description: {\n        display: 'block',\n        clear: 'both',\n        marginTop: '15px',\n    },\n    underline: {\n        '&::before': {\n            borderBottom: `none`,\n        },\n        '&:hover::before': {\n            borderBottom: `none!important`,\n        },\n    },\n    input: {\n        backgroundColor: 'rgba(0, 0, 10, 0.05)',\n        borderRadius: '4px',\n        width: '100%',\n        '&:hover': {\n            backgroundColor: 'rgba(0, 0, 10, 0.08)',\n        },\n    },\n    itemSelector: {\n        flex: '2',\n        position: 'relative',\n    },\n};\n\nexport const EditTitleBar = ({\n    name,\n    description,\n    onChangeTitle,\n    onChangeDescription,\n    classes,\n}) => {\n    const updateTitle = e => {\n        onChangeTitle(e.target.value);\n    };\n\n    const updateDescription = e => {\n        onChangeDescription(e.target.value);\n    };\n\n    return (\n        <section className={classes.section}>\n            <div className={classes.titleDescription}>\n                <InputField\n                    className={classes.title}\n                    filled\n                    name=\"Dashboard title input\"\n                    label={i18n.t('Dashboard title')}\n                    type=\"text\"\n                    onChange={updateTitle}\n                    value={name}\n                />\n                <MuiInputField\n                    className={classes.description}\n                    name=\"Dashboard description input\"\n                    label={i18n.t('Dashboard description')}\n                    onChange={updateDescription}\n                    value={description}\n                    variant=\"filled\"\n                    multiline\n                    InputProps={{\n                        classes: {\n                            root: classes.input,\n                            underline: classes.underline,\n                        },\n                    }}\n                />\n            </div>\n            <div className={classes.itemSelector}>\n                <ItemSelector />\n            </div>\n        </section>\n    );\n};\n\nconst mapStateToProps = state => {\n    const selectedDashboard = orObject(sGetEditDashboardRoot(state));\n\n    return {\n        name: selectedDashboard.name,\n        description: selectedDashboard.description,\n    };\n};\n\nconst mapDispatchToProps = {\n    onChangeTitle: acSetDashboardTitle,\n    onChangeDescription: acSetDashboardDescription,\n};\n\nexport default connect(\n    mapStateToProps,\n    mapDispatchToProps\n)(withStyles(styles)(EditTitleBar));\n\nEditTitleBar.propTypes = {\n    name: PropTypes.string,\n    description: PropTypes.string,\n    onChangeTitle: PropTypes.func.isRequired,\n    onChangeDescription: PropTypes.func.isRequired,\n};\n\nEditTitleBar.defaultProps = {\n    name: '',\n    description: '',\n};\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nimport { Button } from '@dhis2/ui-core';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\n\nimport i18n from '@dhis2/d2-i18n';\n\nimport {\n    PeriodDimension,\n    DynamicDimension,\n    OrgUnitDimension,\n    FIXED_DIMENSIONS,\n} from '@dhis2/analytics';\n\nconst peId = FIXED_DIMENSIONS.pe.id;\nconst ouId = FIXED_DIMENSIONS.ou.id;\n\nclass FilterDialog extends Component {\n    onConfirm = id => () => this.props.onConfirm(id);\n\n    dialogContent() {\n        const { displayNameProperty, dimension, selectedItems } = this.props;\n        const dialogId = dimension.id;\n\n        const commonProps = {\n            d2: this.context.d2,\n            onSelect: this.props.onSelect,\n            onDeselect: this.props.onDeselect,\n            onReorder: this.props.onReorder,\n        };\n\n        switch (dialogId) {\n            case peId: {\n                return (\n                    <PeriodDimension\n                        selectedPeriods={selectedItems}\n                        {...commonProps}\n                    />\n                );\n            }\n            case ouId:\n                return (\n                    <OrgUnitDimension\n                        displayNameProperty={displayNameProperty}\n                        ouItems={selectedItems}\n                        {...commonProps}\n                    />\n                );\n            default:\n                return (\n                    <DynamicDimension\n                        selectedItems={selectedItems}\n                        dialogId={dialogId}\n                        dialogTitle={dimension.name}\n                        {...commonProps}\n                    />\n                );\n        }\n    }\n\n    render() {\n        const { dimension, onClose } = this.props;\n        const dialogId = dimension.id;\n\n        return (\n            <Dialog\n                open={!!dialogId}\n                maxWidth=\"lg\"\n                disableEnforceFocus\n                onClose={onClose}\n            >\n                {dialogId && this.dialogContent()}\n                <DialogActions>\n                    <Button kind=\"secondary\" onClick={onClose}>\n                        {i18n.t('Cancel')}\n                    </Button>\n                    <Button kind=\"primary\" onClick={this.onConfirm(dialogId)}>\n                        {i18n.t('Confirm')}\n                    </Button>\n                </DialogActions>\n            </Dialog>\n        );\n    }\n}\n\nFilterDialog.propTypes = {\n    displayNameProperty: PropTypes.string,\n    dimension: PropTypes.object,\n    selectedItems: PropTypes.array,\n    onSelect: PropTypes.func,\n    onDeselect: PropTypes.func,\n    onReorder: PropTypes.func,\n    onClose: PropTypes.func,\n    onConfirm: PropTypes.func,\n};\n\nFilterDialog.contextTypes = {\n    d2: PropTypes.object,\n};\n\nexport default FilterDialog;\n","export const SET_ACTIVE_MODAL_DIMENSION = 'SET_ACTIVE_MODAL_DIMENSION';\nexport const CLEAR_ACTIVE_MODAL_DIMENSION = 'CLEAR_ACTIVE_MODAL_DIMENSION';\n\nexport const DEFAULT_STATE_ACTIVE_MODAL_DIMENSION = {};\n\nexport default (state = DEFAULT_STATE_ACTIVE_MODAL_DIMENSION, action) => {\n    switch (action.type) {\n        case SET_ACTIVE_MODAL_DIMENSION: {\n            return action.value;\n        }\n        case CLEAR_ACTIVE_MODAL_DIMENSION: {\n            return DEFAULT_STATE_ACTIVE_MODAL_DIMENSION;\n        }\n        default:\n            return state;\n    }\n};\n\nexport const sGetActiveModalDimension = state => state.activeModalDimension;\n","import {\n    SET_ACTIVE_MODAL_DIMENSION,\n    CLEAR_ACTIVE_MODAL_DIMENSION,\n} from '../reducers/activeModalDimension';\n\nexport const acSetActiveModalDimension = value => ({\n    type: SET_ACTIVE_MODAL_DIMENSION,\n    value,\n});\n\nexport const acClearActiveModalDimension = () => ({\n    type: CLEAR_ACTIVE_MODAL_DIMENSION,\n});\n","import React, { Component, Fragment } from 'react';\nimport { connect } from 'react-redux';\nimport Popover from '@material-ui/core/Popover';\nimport ArrowDropDownIcon from '@material-ui/icons/ArrowDropDown';\nimport { withTheme } from '@material-ui/core/styles';\n\nimport i18n from '@dhis2/d2-i18n';\nimport { DimensionsPanel } from '@dhis2/analytics';\n\nimport { Button } from '@dhis2/ui-core';\nimport FilterDialog from './FilterDialog';\n\nimport { sGetSettingsDisplayNameProperty } from '../../reducers/settings';\nimport { sGetActiveModalDimension } from '../../reducers/activeModalDimension';\nimport { sGetDimensions } from '../../reducers/dimensions';\nimport { sGetFiltersKeys } from '../../reducers/itemFilters';\nimport { sGetEditItemFiltersRoot } from '../../reducers/editItemFilters';\nimport { acAddItemFilter, acRemoveItemFilter } from '../../actions/itemFilters';\nimport {\n    acRemoveEditItemFilter,\n    acSetEditItemFilters,\n} from '../../actions/editItemFilters';\nimport {\n    acClearActiveModalDimension,\n    acSetActiveModalDimension,\n} from '../../actions/activeModalDimension';\n\nclass FilterSelector extends Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            anchorEl: null,\n        };\n    }\n\n    openPanel = event => {\n        this.setState({ anchorEl: event.currentTarget });\n    };\n\n    closePanel = () => {\n        this.setState({ anchorEl: null });\n    };\n\n    closeDialog = () => {\n        this.setState({ anchorEl: null });\n\n        this.props.clearActiveModalDimension();\n    };\n\n    selectDimension = id => {\n        this.props.setActiveModalDimension({\n            id,\n            name: this.props.dimensions[id].name,\n        });\n    };\n\n    onSelectItems = ({ dimensionId, items }) => {\n        this.props.setEditItemFilters({\n            ...this.props.selectedItems,\n            [dimensionId]: items,\n        });\n    };\n\n    onDeselectItems = ({ dimensionId, itemIdsToRemove }) => {\n        const oldList = this.props.selectedItems[dimensionId] || [];\n        const newList = oldList.filter(\n            item => !itemIdsToRemove.includes(item.id)\n        );\n\n        if (newList.length) {\n            this.props.setEditItemFilters({\n                ...this.props.selectedItems,\n                [dimensionId]: newList,\n            });\n        } else {\n            this.props.removeEditItemFilter(dimensionId);\n        }\n    };\n\n    onReorderItems = ({ dimensionId, itemIds }) => {\n        const oldList = this.props.selectedItems[dimensionId] || [];\n        const reorderedList = itemIds.map(id =>\n            oldList.find(item => item.id === id)\n        );\n\n        this.props.setEditItemFilters({\n            ...this.props.selectedItems,\n            [dimensionId]: reorderedList,\n        });\n    };\n\n    saveFilter = id => {\n        const filterItems = this.props.selectedItems[id];\n\n        if (filterItems && filterItems.length) {\n            this.props.addItemFilter({\n                id,\n                value: [...filterItems],\n            });\n        } else {\n            this.props.removeItemFilter(id);\n        }\n\n        this.closeDialog();\n    };\n\n    render() {\n        const {\n            theme,\n            displayNameProperty,\n            dimension,\n            dimensions,\n            selectedDimensions,\n            selectedItems,\n        } = this.props;\n\n        return (\n            <Fragment>\n                <Button onClick={this.openPanel}>\n                    {i18n.t('Add filter')}\n                    <ArrowDropDownIcon />\n                </Button>\n                <Popover\n                    open={Boolean(this.state.anchorEl)}\n                    anchorEl={this.state.anchorEl}\n                    anchorOrigin={{ vertical: 'bottom', horizontal: 'left' }}\n                    onClose={this.closePanel}\n                    style={{\n                        height: '100%',\n                        fontFamily: theme.typography.fontFamily,\n                    }}\n                >\n                    <DimensionsPanel\n                        dimensions={dimensions}\n                        onDimensionClick={this.selectDimension}\n                        selectedIds={selectedDimensions}\n                    />\n                </Popover>\n                {dimension ? (\n                    <FilterDialog\n                        displayNameProperty={displayNameProperty}\n                        dimension={dimension}\n                        selectedItems={selectedItems[dimension.id] || []}\n                        onSelect={this.onSelectItems}\n                        onDeselect={this.onDeselectItems}\n                        onReorder={this.onReorderItems}\n                        onClose={this.closeDialog}\n                        onConfirm={this.saveFilter}\n                    />\n                ) : null}\n            </Fragment>\n        );\n    }\n}\n\nconst mapStateToProps = state => ({\n    displayNameProperty: sGetSettingsDisplayNameProperty(state),\n    dimension: sGetActiveModalDimension(state),\n    dimensions: sGetDimensions(state),\n    selectedDimensions: sGetFiltersKeys(state),\n    selectedItems: sGetEditItemFiltersRoot(state),\n});\n\nexport default connect(\n    mapStateToProps,\n    {\n        clearActiveModalDimension: acClearActiveModalDimension,\n        setActiveModalDimension: acSetActiveModalDimension,\n        addItemFilter: acAddItemFilter,\n        removeItemFilter: acRemoveItemFilter,\n        removeEditItemFilter: acRemoveEditItemFilter,\n        setEditItemFilters: acSetEditItemFilters,\n    }\n)(withTheme()(FilterSelector));\n","import React, { Component } from 'react';\nimport InfoOutlineIcon from '@material-ui/icons/InfoOutlined';\nimport { colors } from '@dhis2/ui-core';\n\nclass Info extends Component {\n    show = false;\n\n    toggle() {\n        this.show = !this.show;\n        return this.show;\n    }\n\n    render() {\n        return (\n            <div onClick={() => this.props.onClick(this.toggle())}>\n                <InfoOutlineIcon style={{ fill: colors.grey600 }} />\n            </div>\n        );\n    }\n}\n\nexport default Info;\n","import React, { Component, Fragment } from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport { Link } from 'react-router-dom';\nimport i18n from '@dhis2/d2-i18n';\nimport SharingDialog from '@dhis2/d2-ui-sharing-dialog';\nimport Star from '@material-ui/icons/Star';\nimport StarBorder from '@material-ui/icons/StarBorder';\n\nimport { orObject } from '../../modules/util';\nimport { tStarDashboard } from '../../actions/dashboards';\nimport { acSetSelectedShowDescription } from '../../actions/selected';\nimport FilterSelector from '../ItemFilter/FilterSelector';\nimport { Button } from '@dhis2/ui-core';\nimport Info from './Info';\nimport {\n    sGetSelectedId,\n    sGetSelectedShowDescription,\n} from '../../reducers/selected';\nimport {\n    sGetDashboardById,\n    sGetDashboardItems,\n} from '../../reducers/dashboards';\nimport { colors } from '@dhis2/ui-core';\n\nconst NO_DESCRIPTION = i18n.t('No description');\n\nconst styles = {\n    actions: {\n        display: 'flex',\n        alignItems: 'center',\n        marginLeft: '20px',\n    },\n    starIcon: {\n        fill: colors.grey600,\n    },\n    textButton: {\n        minWidth: '30px',\n        top: '1px',\n    },\n    editLink: {\n        display: 'inline-block',\n        verticalAlign: 'top',\n        textDecoration: 'none',\n        marginRight: '4px',\n    },\n    titleBar: {\n        display: 'flex',\n        alignItems: 'flex-start',\n    },\n    titleBarIcon: {\n        marginLeft: 5,\n        position: 'relative',\n        top: 1,\n        cursor: 'pointer',\n    },\n};\n\nclass ViewTitleBar extends Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            sharingDialogIsOpen: false,\n        };\n    }\n\n    toggleSharingDialog = () =>\n        this.setState({ sharingDialogIsOpen: !this.state.sharingDialogIsOpen });\n\n    render() {\n        const {\n            id,\n            name,\n            description,\n            access,\n            style,\n            showDescription,\n            starred,\n            onStarClick,\n            onInfoClick,\n            classes,\n        } = this.props;\n\n        const titleStyle = Object.assign({}, style.title, {\n            cursor: 'default',\n            userSelect: 'text',\n            top: '7px',\n        });\n\n        const StarIcon = starred ? Star : StarBorder;\n\n        return (\n            <Fragment>\n                <div className={classes.titleBar}>\n                    <span style={titleStyle}>{name}</span>\n                    <div className={classes.actions}>\n                        <div\n                            className={classes.titleBarIcon}\n                            onClick={onStarClick}\n                        >\n                            <StarIcon className={classes.starIcon} />\n                        </div>\n                        <div className={classes.titleBarIcon}>\n                            <Info onClick={onInfoClick} />\n                        </div>\n                        <div style={{ marginLeft: '10px' }}>\n                            {access.update ? (\n                                <Link\n                                    className={classes.editLink}\n                                    to={`/${id}/edit`}\n                                >\n                                    <Button>{i18n.t('Edit')}</Button>\n                                </Link>\n                            ) : null}\n                            {access.manage ? (\n                                <span style={{ marginRight: '4px' }}>\n                                    <Button onClick={this.toggleSharingDialog}>\n                                        {i18n.t('Share')}\n                                    </Button>\n                                </span>\n                            ) : null}\n                            <span style={{ marginRight: '4px' }}>\n                                <FilterSelector />\n                            </span>\n                        </div>\n                    </div>\n                </div>\n                {showDescription ? (\n                    <div\n                        className=\"dashboard-description\"\n                        style={Object.assign(\n                            { paddingTop: '5px', paddingBottom: '5px' },\n                            style.description,\n                            !description ? { color: '#888' } : {}\n                        )}\n                    >\n                        {description || NO_DESCRIPTION}\n                    </div>\n                ) : null}\n                {id ? (\n                    <SharingDialog\n                        d2={this.context.d2}\n                        id={id}\n                        type=\"dashboard\"\n                        open={this.state.sharingDialogIsOpen}\n                        onRequestClose={this.toggleSharingDialog}\n                    />\n                ) : null}\n            </Fragment>\n        );\n    }\n}\n\nconst mapStateToProps = state => {\n    const id = sGetSelectedId(state);\n    const dashboard = orObject(sGetDashboardById(state, id));\n\n    return {\n        id,\n        name: dashboard.displayName,\n        description: dashboard.displayDescription,\n        dashboardItems: sGetDashboardItems(state),\n        showDescription: sGetSelectedShowDescription(state),\n        starred: dashboard.starred,\n        access: orObject(dashboard.access),\n    };\n};\n\nconst mergeProps = (stateProps, dispatchProps, ownProps) => {\n    const { id, starred, showDescription } = stateProps;\n    const { dispatch } = dispatchProps;\n\n    return {\n        ...stateProps,\n        ...ownProps,\n        onStarClick: () => dispatch(tStarDashboard(id, !starred)),\n        onInfoClick: () =>\n            dispatch(acSetSelectedShowDescription(!showDescription)),\n    };\n};\n\nexport default connect(\n    mapStateToProps,\n    null,\n    mergeProps\n)(withStyles(styles)(ViewTitleBar));\n\nViewTitleBar.propTypes = {\n    id: PropTypes.string,\n    name: PropTypes.string,\n    description: PropTypes.string,\n    starred: PropTypes.bool,\n    showDescription: PropTypes.bool,\n    onInfoClick: PropTypes.func,\n};\n\nViewTitleBar.defaultProps = {\n    name: '',\n    description: '',\n    starred: false,\n    showDescription: false,\n    onInfoClick: null,\n};\n\nViewTitleBar.contextTypes = {\n    d2: PropTypes.object,\n};\n","import React from 'react';\n\nimport { colors } from '@dhis2/ui-core';\nimport EditTitleBar from './EditTitleBar';\nimport ViewTitleBar from './ViewTitleBar';\n\nimport './TitleBar.css';\n\nconst style = {\n    title: {\n        position: 'relative',\n        fontSize: 21,\n        fontWeight: 500,\n        color: colors.black,\n        minWidth: 50,\n    },\n    description: {\n        fontSize: 14,\n        color: colors.grey800,\n    },\n};\n\nconst TitleBar = ({ edit }) => {\n    return (\n        <div\n            className=\"titlebar-wrapper\"\n            style={{\n                padding: '20px 15px 5px 10px',\n            }}\n        >\n            {edit ? (\n                <EditTitleBar style={style} />\n            ) : (\n                <ViewTitleBar style={style} />\n            )}\n        </div>\n    );\n};\n\nexport default TitleBar;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nimport i18n from '@dhis2/d2-i18n';\n\nimport * as pluginManager from './plugin';\nimport { getBaseUrl, orObject } from '../../../modules/util';\nimport { getGridItemDomId } from '../../ItemGrid/gridUtil';\n\nconst pluginCredentials = d2 => {\n    return {\n        baseUrl: getBaseUrl(d2),\n        auth: d2.Api.getApi().defaultHeaders.Authorization,\n    };\n};\n\nclass DefaultPlugin extends Component {\n    pluginCredentials = null;\n\n    constructor(props, context) {\n        super(props);\n\n        this.d2 = context.d2;\n    }\n\n    shouldPluginReload = prevProps => {\n        // TODO - fix this hack, to handle bug with multiple\n        // rerendering while switching between dashboards.\n        //\n        // To determine if the rendering is happening because of a\n        // dashboard switch, check if the item reference has changed.\n        const reloadAllowed = this.props.item === prevProps.item;\n\n        const filtersChanged = prevProps.itemFilters !== this.props.itemFilters;\n        const vis = orObject(this.props.visualization);\n        const prevVis = orObject(prevProps.visualization);\n        const visChanged =\n            vis.id !== prevVis.id || vis.activeType !== prevVis.activeType;\n\n        return reloadAllowed && (visChanged || filtersChanged);\n    };\n\n    reloadPlugin = prevProps => {\n        if (\n            pluginManager.pluginIsAvailable(\n                this.props.item,\n                this.props.visualization\n            ) &&\n            this.shouldPluginReload(prevProps)\n        ) {\n            const prevVis = orObject(prevProps.visualization);\n            const currentVis = this.props.visualization;\n\n            const useActiveType =\n                currentVis.activeType !== prevVis.activeType ||\n                currentVis.activeType !== this.props.item.type;\n\n            if (\n                useActiveType ||\n                this.props.itemFilters !== prevProps.itemFilters\n            ) {\n                pluginManager.unmount(\n                    this.props.item,\n                    prevVis.activeType || this.props.item.type\n                );\n\n                pluginManager.load(\n                    this.props.item,\n                    this.props.visualization,\n                    this.pluginCredentials,\n                    useActiveType ? currentVis.activeType : null\n                );\n            }\n        }\n    };\n\n    componentDidMount() {\n        this.pluginCredentials = pluginCredentials(this.d2);\n\n        if (\n            pluginManager.pluginIsAvailable(\n                this.props.item,\n                this.props.visualization\n            )\n        ) {\n            pluginManager.load(\n                this.props.item,\n                this.props.visualization,\n                this.pluginCredentials,\n                !this.props.editMode ? this.getActiveType() : null\n            );\n        }\n    }\n\n    componentDidUpdate(prevProps) {\n        this.reloadPlugin(prevProps);\n    }\n\n    getActiveType = () =>\n        this.props.visualization.activeType || this.props.item.type;\n\n    render() {\n        const { classes, item, visualization, style } = this.props;\n        const pluginIsAvailable = pluginManager.pluginIsAvailable(\n            item,\n            visualization\n        );\n\n        return pluginIsAvailable ? (\n            <div id={getGridItemDomId(item.id)} style={style} />\n        ) : (\n            <div className={classes.textDiv}>\n                {i18n.t('Unable to load the plugin for this item')}\n            </div>\n        );\n    }\n}\n\nDefaultPlugin.contextTypes = {\n    d2: PropTypes.object,\n};\n\nDefaultPlugin.propTypes = {\n    style: PropTypes.object,\n    item: PropTypes.object,\n    itemFilters: PropTypes.object,\n    visualization: PropTypes.object,\n};\n\nDefaultPlugin.defaultProps = {\n    style: {},\n    item: {},\n    itemFilters: {},\n    visualization: {},\n};\n\nexport default DefaultPlugin;\n","import React from 'react';\n\nexport const HEADER_HEIGHT = 45;\n\nconst ItemHeader = props => {\n    const { title, actionButtons, editMode } = props;\n\n    return (\n        <div className=\"dashboard-item-header\">\n            <div\n                className=\"dashboard-item-header-title\"\n                style={{ userSelect: editMode ? 'none' : 'text' }}\n            >\n                {title}\n            </div>\n            {actionButtons}\n        </div>\n    );\n};\n\nexport default ItemHeader;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { colors } from '@dhis2/ui-core';\nimport { getId } from './plugin';\nimport InterpretationsComponent from '@dhis2/d2-ui-interpretations';\n\nconst style = {\n    scrollContainer: {\n        overflowY: 'auto',\n        height: '340px',\n    },\n    line: {\n        margin: '-1px 0px 0px',\n        height: '1px',\n        border: 'none',\n        backgroundColor: colors.grey100,\n    },\n};\n\nclass ItemFooter extends Component {\n    render() {\n        const objectId = getId(this.props.item);\n\n        return (\n            <div className=\"dashboard-item-footer\">\n                <hr style={style.line} />\n                <div style={style.scrollContainer}>\n                    <InterpretationsComponent\n                        d2={this.context.d2}\n                        item={this.props.item}\n                        type={this.props.item.type.toLowerCase()}\n                        id={objectId}\n                        appName=\"dashboard\"\n                    />\n                </div>\n            </div>\n        );\n    }\n}\n\nItemFooter.contextTypes = {\n    d2: PropTypes.object.isRequired,\n};\n\nItemFooter.propTypes = {\n    item: PropTypes.object.isRequired,\n};\n\nexport default ItemFooter;\n","import React from 'react';\n\nimport './ItemHeaderButton.css';\n\nconst ItemHeaderButton = ({ disabled, onClick, children, style }) => {\n    return (\n        <button\n            disabled={disabled}\n            type=\"button\"\n            className=\"item-action-button\"\n            style={style}\n            onClick={onClick}\n        >\n            {children}\n        </button>\n    );\n};\n\nexport default ItemHeaderButton;\n","import React, { Component, Fragment } from 'react';\nimport MessageIcon from '@material-ui/icons/Message';\nimport TableIcon from '@material-ui/icons/ViewList';\nimport ChartIcon from '@material-ui/icons/InsertChart';\nimport MapIcon from '@material-ui/icons/Public';\n\nimport { extractFavorite } from './plugin';\nimport ItemHeaderButton from '../ItemHeaderButton';\nimport {\n    VISUALIZATION_TYPE_TABLE,\n    VISUALIZATION_TYPE_CHART,\n    VISUALIZATION_TYPE_MAP,\n    itemTypeMap,\n    CHART,\n    MAP,\n    REPORT_TABLE,\n    EVENT_CHART,\n    EVENT_REPORT,\n    DOMAIN_TYPE_AGGREGATE,\n    CHART_TYPE_SINGLE_VALUE,\n} from '../../../modules/itemTypes';\nimport { colors, theme } from '@dhis2/ui-core';\n\nconst style = {\n    iconBase: {\n        width: '24px',\n        height: '24px',\n        fill: colors.grey500,\n    },\n    buttonBase: {\n        padding: '5px 6px 3px 6px',\n    },\n    buttonDisabled: {\n        padding: '5px 6px 3px 6px',\n        opacity: 0.5,\n        cursor: 'unset',\n    },\n    toggleFooterPadding: {\n        padding: '7px 6px 1px 6px',\n    },\n    border: {\n        borderRadius: '2px',\n        border: `1px solid ${colors.grey200}`,\n    },\n};\n\nconst baseStyle = {\n    icon: style.iconBase,\n    container: style.buttonBase,\n};\n\nconst disabledStyle = {\n    icon: style.iconBase,\n    container: style.buttonDisabled,\n};\n\nconst activeStyle = {\n    icon: { ...style.iconBase, fill: theme.primary800 },\n    container: {\n        ...style.buttonBase,\n        backgroundColor: theme.primary100,\n    },\n};\n\nconst inactiveStyle = disabled => (disabled ? disabledStyle : baseStyle);\n\nconst tableBtnStyle = (activeType, disabled) =>\n    [REPORT_TABLE, EVENT_REPORT].includes(activeType)\n        ? activeStyle\n        : inactiveStyle(disabled);\n\nconst chartBtnStyle = (activeType, disabled) =>\n    [CHART, EVENT_CHART].includes(activeType)\n        ? activeStyle\n        : inactiveStyle(disabled);\n\nconst mapBtnStyle = (activeType, disabled) =>\n    [MAP].includes(activeType) ? activeStyle : inactiveStyle(disabled);\n\nexport const getItemTypeId = (itemTypeMap, visualizationType, domainType) => {\n    const item = Object.values(itemTypeMap).find(\n        item =>\n            item.visualizationType === visualizationType &&\n            item.domainType === domainType\n    );\n    return item.id;\n};\n\n// TODO: Import this from @dhis2/analytics when available\nconst isSingleValue = (itemType, chartType) =>\n    itemType === VISUALIZATION_TYPE_CHART &&\n    chartType === CHART_TYPE_SINGLE_VALUE;\n\nclass VisualizationItemHeaderButtons extends Component {\n    renderInterpretationButton() {\n        const { activeFooter, onToggleFooter } = this.props;\n\n        const toggleFooterBase = activeFooter ? activeStyle : baseStyle;\n\n        const toggleFooter = {\n            ...toggleFooterBase,\n            container: {\n                ...toggleFooterBase.container,\n                ...style.toggleFooterPadding,\n                ...style.border,\n            },\n        };\n\n        return (\n            <Fragment>\n                <ItemHeaderButton\n                    style={toggleFooter.container}\n                    onClick={onToggleFooter}\n                >\n                    <MessageIcon style={toggleFooter.icon} />\n                </ItemHeaderButton>\n            </Fragment>\n        );\n    }\n\n    renderVisualizationButtons() {\n        const {\n            item,\n            visualization,\n            onSelectVisualization,\n            activeType,\n        } = this.props;\n\n        if (isSingleValue(item.type, visualization.type)) {\n            return null;\n        }\n\n        const domainType = itemTypeMap[item.type].domainType;\n\n        const onViewTable = () =>\n            onSelectVisualization(\n                getItemTypeId(itemTypeMap, VISUALIZATION_TYPE_TABLE, domainType)\n            );\n\n        const onViewChart = () =>\n            onSelectVisualization(\n                getItemTypeId(itemTypeMap, VISUALIZATION_TYPE_CHART, domainType)\n            );\n\n        const onViewMap = () =>\n            onSelectVisualization(\n                getItemTypeId(itemTypeMap, VISUALIZATION_TYPE_MAP, domainType)\n            );\n\n        // disable toggle buttons\n        let disabled = false;\n\n        if (item.type === VISUALIZATION_TYPE_CHART) {\n            if (extractFavorite(item).type.match(/^YEAR_OVER_YEAR/)) {\n                disabled = true;\n            }\n        }\n\n        const tableButtonStyle = tableBtnStyle(activeType, disabled);\n        const chartButtonStyle = chartBtnStyle(activeType, disabled);\n        const mapButtonStyle = mapBtnStyle(activeType, disabled);\n\n        return (\n            <div style={{ marginLeft: 10 }}>\n                <div style={style.border}>\n                    <ItemHeaderButton\n                        disabled={disabled}\n                        style={tableButtonStyle.container}\n                        onClick={onViewTable}\n                    >\n                        <TableIcon style={tableButtonStyle.icon} />\n                    </ItemHeaderButton>\n                    <ItemHeaderButton\n                        disabled={disabled}\n                        style={chartButtonStyle.container}\n                        onClick={onViewChart}\n                    >\n                        <ChartIcon style={chartButtonStyle.icon} />\n                    </ItemHeaderButton>\n                    {domainType === DOMAIN_TYPE_AGGREGATE ? (\n                        <ItemHeaderButton\n                            disabled={disabled}\n                            style={mapButtonStyle.container}\n                            onClick={onViewMap}\n                        >\n                            <MapIcon style={mapButtonStyle.icon} />\n                        </ItemHeaderButton>\n                    ) : null}\n                </div>\n            </div>\n        );\n    }\n\n    render() {\n        return (\n            <Fragment>\n                {this.renderInterpretationButton()}\n                {this.renderVisualizationButtons()}\n            </Fragment>\n        );\n    }\n}\n\nexport default VisualizationItemHeaderButtons;\n","// Note that this ignores discrepancies in 'this', so shouldn't be used with bound functions\n// This is useful instead of lodash/memoize when we only need to memoize a single value\n// Inspiration: https://github.com/alexreardon/memoize-one\n\nconst memoizeOne = fn => {\n    let lastArgs = undefined;\n    let lastValue = undefined;\n\n    return (...args) => {\n        if (\n            lastArgs &&\n            args.length === lastArgs.length &&\n            args.every((arg, i) => arg === lastArgs[i])\n        ) {\n            return lastValue;\n        }\n        lastArgs = args;\n        lastValue = fn(...args);\n        return lastValue;\n    };\n};\n\nexport default memoizeOne;\n","import React, { Component, Fragment } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { withStyles } from '@material-ui/core/styles';\nimport LaunchIcon from '@material-ui/icons/Launch';\nimport ChartPlugin from '@dhis2/data-visualizer-plugin';\n\nimport i18n from '@dhis2/d2-i18n';\nimport uniqueId from 'lodash/uniqueId';\n\nimport DefaultPlugin from './DefaultPlugin';\nimport ItemHeader, { HEADER_HEIGHT } from '../ItemHeader';\nimport ItemFooter from './ItemFooter';\nimport VisualizationItemHeaderButtons from './ItemHeaderButtons';\nimport * as pluginManager from './plugin';\nimport { sGetVisualization } from '../../../reducers/visualizations';\nimport { sGetItemFiltersRoot } from '../../../reducers/itemFilters';\nimport {\n    acReceivedVisualization,\n    acReceivedActiveVisualization,\n} from '../../../actions/selected';\nimport { CHART, MAP, itemTypeMap } from '../../../modules/itemTypes';\nimport { colors } from '@dhis2/ui-core';\nimport memoizeOne from '../../../modules/memoizeOne';\nimport { getVisualizationConfig } from './plugin';\n\nconst styles = {\n    icon: {\n        width: 16,\n        height: 16,\n        marginLeft: 3,\n        cursor: 'pointer',\n        fill: colors.grey600,\n    },\n    title: {\n        overflow: 'hidden',\n        maxWidth: '85%',\n        textOverflow: 'ellipsis',\n        whiteSpace: 'nowrap',\n    },\n    textDiv: {\n        fontSize: '14px',\n        fontStretch: 'normal',\n        padding: '10px',\n        lineHeight: '20px',\n    },\n};\n\nconst applyFilters = (visualization, filters) => {\n    if (!Object.keys(filters).length) {\n        return visualization;\n    }\n\n    // deep clone objects in filters to avoid changing the visualization in the Redux store\n    const visRows = visualization.rows.map(obj => ({ ...obj }));\n    const visColumns = visualization.columns.map(obj => ({ ...obj }));\n    const visFilters = visualization.filters.map(obj => ({ ...obj }));\n\n    Object.keys(filters).forEach(dimensionId => {\n        if (filters[dimensionId]) {\n            let dimensionFound = false;\n\n            [visRows, visColumns, visFilters].forEach(dimensionObjects =>\n                dimensionObjects\n                    .filter(obj => obj.dimension === dimensionId)\n                    .forEach(obj => {\n                        dimensionFound = true;\n                        obj.items = filters[dimensionId];\n                    })\n            );\n\n            // add dimension to filters if not already present elsewhere\n            if (!dimensionFound) {\n                visFilters.push({\n                    dimension: dimensionId,\n                    items: filters[dimensionId],\n                });\n            }\n        }\n    });\n\n    return {\n        ...visualization,\n        rows: visRows,\n        columns: visColumns,\n        filters: visFilters,\n    };\n};\n\nexport class Item extends Component {\n    state = {\n        showFooter: false,\n        configLoaded: false,\n    };\n\n    constructor(props, context) {\n        super(props);\n\n        this.d2 = context.d2;\n\n        this.contentRef = React.createRef();\n    }\n\n    async componentDidMount() {\n        this.props.onVisualizationLoaded(\n            // TODO do not call fetch on the pluginManager, do it here as the manager will eventually be removed...\n            await pluginManager.fetch(this.props.item)\n        );\n\n        this.setState({\n            configLoaded: true,\n        });\n    }\n\n    getUniqueKey = memoizeOne(() => uniqueId());\n\n    pluginCredentials = null;\n\n    getPluginComponent = () => {\n        const visualization = getVisualizationConfig(\n            this.props.visualization,\n            this.props.item.type,\n            this.getActiveType()\n        );\n\n        if (!visualization) {\n            return (\n                <div className={this.props.classes.textDiv}>\n                    {i18n.t('No data to display')}\n                </div>\n            );\n        }\n\n        const props = {\n            ...this.props,\n            visualization,\n            style: this.getContentStyle(),\n        };\n\n        switch (this.getActiveType()) {\n            case CHART: {\n                return (\n                    <ChartPlugin\n                        d2={this.d2}\n                        config={applyFilters(\n                            props.visualization,\n                            props.itemFilters\n                        )}\n                        forDashboard={true}\n                        style={props.style}\n                    />\n                );\n            }\n            case MAP: {\n                if (props.item.type === MAP) {\n                    // apply filters only to thematic and event layers\n                    // for maps AO\n                    const mapViews = props.visualization.mapViews.map(obj => {\n                        if (\n                            obj.layer.includes('thematic') ||\n                            obj.layer.includes('event')\n                        ) {\n                            return applyFilters(obj, props.itemFilters);\n                        }\n\n                        return obj;\n                    });\n\n                    props.visualization = {\n                        ...props.visualization,\n                        mapViews,\n                    };\n                } else {\n                    // this is the case of a non map AO passed to the maps plugin\n                    // due to a visualization type switch in dashboard item\n                    // maps plugin takes care of converting the AO to a suitable format\n                    props.visualization = applyFilters(\n                        props.visualization,\n                        props.itemFilters\n                    );\n                }\n\n                return <DefaultPlugin {...props} />;\n            }\n            default: {\n                props.visualization = applyFilters(\n                    props.visualization,\n                    props.itemFilters\n                );\n\n                return <DefaultPlugin {...props} />;\n            }\n        }\n    };\n\n    onToggleFooter = () => {\n        this.setState(\n            { showFooter: !this.state.showFooter },\n            this.props.onToggleItemExpanded(this.props.item.id)\n        );\n    };\n\n    onSelectVisualization = activeType => {\n        // Cancel request if type is already active\n        if (activeType === this.getActiveType()) {\n            return;\n        }\n\n        pluginManager.unmount(this.props.item, this.getActiveType());\n\n        this.props.onSelectVisualization(\n            this.props.visualization.id,\n            this.props.item.type,\n            activeType\n        );\n    };\n\n    getActiveType = () =>\n        this.props.visualization.activeType || this.props.item.type;\n\n    pluginIsAvailable = () =>\n        pluginManager.pluginIsAvailable(\n            this.props.item,\n            this.props.visualization\n        );\n\n    getTitle = () => {\n        const { item, editMode, classes } = this.props;\n        const itemName = pluginManager.getName(item);\n\n        return (\n            <div style={{ display: 'flex' }}>\n                <span className={classes.title} title={itemName}>\n                    {itemName}\n                </span>\n                {!editMode && this.pluginIsAvailable() ? (\n                    <a\n                        href={pluginManager.getLink(this.props.item, this.d2)}\n                        style={{ height: 16 }}\n                        title={`View in ${\n                            itemTypeMap[this.props.item.type].appName\n                        } app`}\n                    >\n                        <LaunchIcon className={classes.icon} />\n                    </a>\n                ) : null}\n            </div>\n        );\n    };\n\n    getActionButtons = () =>\n        pluginManager.pluginIsAvailable(\n            this.props.item,\n            this.props.visualization\n        ) && !this.props.editMode ? (\n            <VisualizationItemHeaderButtons\n                item={this.props.item}\n                visualization={this.props.visualization}\n                activeFooter={this.state.showFooter}\n                activeType={this.getActiveType()}\n                onSelectVisualization={this.onSelectVisualization}\n                onToggleFooter={this.onToggleFooter}\n            />\n        ) : null;\n\n    getContentStyle = () => {\n        const { item, editMode } = this.props;\n        const PADDING_BOTTOM = 4;\n\n        return !editMode\n            ? {\n                  height: item.originalHeight - HEADER_HEIGHT - PADDING_BOTTOM,\n              }\n            : { height: this.contentRef.offsetHeight };\n    };\n\n    render() {\n        const { item, editMode, itemFilters } = this.props;\n        const { showFooter } = this.state;\n\n        return (\n            <Fragment>\n                <ItemHeader\n                    title={this.getTitle()}\n                    actionButtons={this.getActionButtons()}\n                    editMode={editMode}\n                />\n                <div\n                    key={this.getUniqueKey(itemFilters)}\n                    className=\"dashboard-item-content\"\n                    ref={ref => (this.contentRef = ref)}\n                >\n                    {this.state.configLoaded && this.getPluginComponent()}\n                </div>\n                {!editMode && showFooter ? <ItemFooter item={item} /> : null}\n            </Fragment>\n        );\n    }\n}\n\nItem.contextTypes = {\n    d2: PropTypes.object,\n};\n\nItem.propTypes = {\n    item: PropTypes.object,\n    editMode: PropTypes.bool,\n    onToggleItemExpanded: PropTypes.func,\n    itemFilters: PropTypes.object,\n    visualization: PropTypes.object,\n};\n\nItem.defaultProps = {\n    item: {},\n    editMode: false,\n    onToggleItemExpanded: Function.prototype,\n    itemFilters: {},\n    visualization: {},\n};\n\nconst mapStateToProps = (state, ownProps) => ({\n    itemFilters: sGetItemFiltersRoot(state),\n    visualization: sGetVisualization(\n        state,\n        pluginManager.extractFavorite(ownProps.item).id\n    ),\n});\n\nconst mapDispatchToProps = dispatch => ({\n    onVisualizationLoaded: visualization =>\n        dispatch(acReceivedVisualization(visualization)),\n    onSelectVisualization: (id, type, activeType) =>\n        dispatch(acReceivedActiveVisualization(id, type, activeType)),\n});\n\nexport default connect(\n    mapStateToProps,\n    mapDispatchToProps\n)(withStyles(styles)(Item));\n","import React from 'react';\nimport { colors } from '@dhis2/ui-core';\n\nconst style = {\n    backgroundColor: colors.grey200,\n    border: 'none',\n    height: '1px',\n    margin: '0px 0px 5px 0px',\n};\n\nconst Line = props => <hr style={style} />;\n\nexport default Line;\n","import React, { Component, Fragment } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport i18n from '@dhis2/d2-i18n';\n\nimport { sGetMessagesRoot } from '../../../reducers/messages';\nimport { formatDate } from '../../../modules/util';\nimport { colors } from '@dhis2/ui-core';\nimport ItemHeader from '../ItemHeader';\nimport Line from '../../../widgets/Line';\n\nimport './MessagesItem.css';\n\nconst PRIVATE = 'PRIVATE';\n\nconst messageTypes = {\n    [PRIVATE]: 'Private',\n    VALIDATION_RESULT: 'Validation',\n    TICKET: 'Ticket',\n    SYSTEM: 'System',\n};\n\nconst style = {\n    list: {\n        listStyleType: 'none',\n        paddingLeft: '0px',\n    },\n    seeAll: {\n        textAlign: 'center',\n        fontSize: '13px',\n        marginBottom: '5px',\n    },\n    sender: {\n        fontSize: '13px',\n        lineHeight: '15px',\n        margin: 0,\n        color: colors.grey800,\n    },\n    snippet: {\n        color: colors.grey800,\n        fontSize: '13px',\n        lineHeight: '15px',\n        maxHeight: '30px',\n        overflow: 'hidden',\n    },\n};\n\nclass MessagesItem extends Component {\n    state = {\n        uiLocale: '',\n    };\n\n    async componentDidMount() {\n        const uiLocale = await this.context.d2.currentUser.userSettings.get(\n            'keyUiLocale'\n        );\n\n        this.setState({ uiLocale });\n    }\n\n    getMessageHref = msg => {\n        const msgIdentifier = msg ? `#/${msg.messageType}/${msg.id}` : '';\n        return `${this.context.baseUrl}/dhis-web-messaging/${msgIdentifier}`;\n    };\n\n    getMessageSender = msg => {\n        const latestMsg = msg.messages.slice(-1)[0];\n        return latestMsg.sender ? latestMsg.sender.displayName : '';\n    };\n\n    getMessageItems = () => {\n        const editClass = !this.props.editMode ? 'view' : null;\n\n        return this.props.messages.map(msg => {\n            const redirectToMsg = () => {\n                if (!this.props.editMode) {\n                    document.location.href = this.getMessageHref(msg);\n                }\n            };\n\n            const sender =\n                msg.messageType === PRIVATE\n                    ? this.getMessageSender(msg)\n                    : messageTypes[msg.messageType];\n\n            const readClass = !msg.read ? 'unread' : null;\n            const latestMsg = msg.messages.slice(-1)[0];\n            const msgDate = latestMsg.lastUpdated;\n\n            return (\n                <li\n                    className={`message-item ${editClass}`}\n                    key={msg.id}\n                    onClick={redirectToMsg}\n                >\n                    <p className={`message-title ${readClass}`}>\n                        {msg.displayName} ({msg.messageCount})\n                    </p>\n                    <p style={style.sender}>\n                        {sender} - {formatDate(msgDate, this.state.uiLocale)}\n                    </p>\n                    <p style={style.snippet}>{latestMsg.text}</p>\n                </li>\n            );\n        });\n    };\n\n    render() {\n        return (\n            <Fragment>\n                <ItemHeader title={i18n.t('Messages')} />\n                <Line />\n                {this.props.messages.length > 0 && (\n                    <div className=\"dashboard-item-content\">\n                        <ul style={style.list}>{this.getMessageItems()}</ul>\n                        <div style={style.seeAll}>\n                            <a href={this.getMessageHref()}>\n                                {i18n.t('See all messages')}\n                            </a>\n                        </div>\n                    </div>\n                )}\n            </Fragment>\n        );\n    }\n}\n\nMessagesItem.contextTypes = {\n    d2: PropTypes.object,\n    baseUrl: PropTypes.string,\n};\n\nconst mapStateToProps = state => {\n    return {\n        messages: Object.values(sGetMessagesRoot(state)),\n    };\n};\n\nconst MessagesContainer = connect(\n    mapStateToProps,\n    null\n)(MessagesItem);\n\nexport default MessagesContainer;\n","import React, { Fragment } from 'react';\nimport ItemHeader from '../ItemHeader';\nimport NotInterestedIcon from '@material-ui/icons/NotInterested';\n\nconst NotSupportedItem = props => (\n    <Fragment>\n        <ItemHeader title={`Item type not supported: ${props.item.type}`} />\n        <div\n            style={{\n                display: 'flex',\n                justifyContent: 'center',\n                alignItems: 'center',\n                height: '90%',\n            }}\n        >\n            <NotInterestedIcon\n                style={{ width: 100, height: 100, align: 'center' }}\n                color=\"disabled\"\n            />\n        </div>\n    </Fragment>\n);\n\nexport default NotSupportedItem;\n","import React from 'react';\nimport { colors } from '@dhis2/ui-core';\n\nconst DescriptionIcon = ({ className }) => (\n    <svg\n        className={className}\n        xmlns=\"http://www.w3.org/2000/svg\"\n        viewBox=\"0 0 24 24\"\n        fill={colors.grey500}\n    >\n        <path d=\"M0 0h24v24H0z\" fill=\"none\" />\n        <path d=\"M14 2H6c-1.1 0-1.99.9-1.99 2L4 20c0 1.1.89 2 1.99 2H18c1.1 0 2-.9 2-2V8l-6-6zm2 16H8v-2h8v2zm0-4H8v-2h8v2zm-3-5V3.5L18.5 9H13z\" />\n    </svg>\n);\n\nexport default DescriptionIcon;\n","import React from 'react';\nimport { colors } from '@dhis2/ui-core';\n\nconst DeleteIcon = ({ className }) => (\n    <svg\n        className={className}\n        xmlns=\"http://www.w3.org/2000/svg\"\n        width=\"18\"\n        height=\"18\"\n        viewBox=\"0 0 24 24\"\n        fill={colors.red500}\n    >\n        <path d=\"M6 19c0 1.1.9 2 2 2h8c1.1 0 2-.9 2-2V7H6v12zM19 4h-3.5l-1-1h-5l-1 1H5v2h14V4z\" />\n        <path d=\"M0 0h24v24H0z\" fill=\"none\" />\n    </svg>\n);\n\nexport default DeleteIcon;\n","import React, { Fragment } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { colors } from '@dhis2/ui-core';\nimport DescriptionIcon from '../../../icons/Description';\n\nimport DeleteIcon from '../../../icons/Delete';\nimport Line from '../../../widgets/Line';\nimport { itemTypeMap, getItemUrl } from '../../../modules/itemTypes';\nimport { orArray } from '../../../modules/util';\nimport { tRemoveListItemContent } from './actions';\nimport ItemHeader from '../ItemHeader';\nimport classes from './Item.module.css';\n\nconst getItemTitle = item => itemTypeMap[item.type].pluralTitle;\n\nconst getContentItems = item =>\n    orArray(item[itemTypeMap[item.type].propName]).filter(\n        (item, index, array) =>\n            array.findIndex(el => el.id === item.id) === index\n    );\n\nconst removeContent = (handler, item, contentToRemove) => () => {\n    handler(item, contentToRemove);\n};\n\nconst ListItem = (props, context) => {\n    const { item, editMode, tRemoveListItemContent } = props;\n    const contentItems = getContentItems(item);\n\n    const getLink = contentItem => {\n        const deleteButton = (\n            <button\n                className={classes.deletebutton}\n                onClick={removeContent(\n                    tRemoveListItemContent,\n                    item,\n                    contentItem\n                )}\n            >\n                <DeleteIcon className={classes.deleteicon} />\n            </button>\n        );\n\n        return (\n            <Fragment>\n                <a\n                    className={classes.link}\n                    style={{ color: colors.grey900 }}\n                    href={getItemUrl(item.type, contentItem, context.d2)}\n                >\n                    {contentItem.name}\n                </a>\n                {editMode ? deleteButton : null}\n            </Fragment>\n        );\n    };\n\n    return (\n        <Fragment>\n            <ItemHeader title={getItemTitle(item)} />\n            <Line />\n            <div className=\"dashboard-item-content\">\n                <ul className={classes.list}>\n                    {contentItems.map(contentItem => (\n                        <li className={classes.item} key={contentItem.id}>\n                            <DescriptionIcon className={classes.itemicon} />\n                            {getLink(contentItem)}\n                        </li>\n                    ))}\n                </ul>\n            </div>\n        </Fragment>\n    );\n};\n\nListItem.contextTypes = {\n    d2: PropTypes.object,\n};\n\nexport default connect(\n    null,\n    {\n        tRemoveListItemContent,\n    }\n)(ListItem);\n","import {\n    acUpdateDashboardItem,\n    acRemoveDashboardItem,\n} from '../../../actions/editDashboard';\nimport { itemTypeMap } from '../../../modules/itemTypes';\n\nexport const tRemoveListItemContent = (dashboardItem, content) => dispatch => {\n    const listItemType = itemTypeMap[dashboardItem.type].propName;\n\n    const newContent = dashboardItem[listItemType].filter(\n        item => item.id !== content.id\n    );\n\n    if (newContent.length) {\n        dashboardItem[listItemType] = newContent;\n        dispatch(acUpdateDashboardItem(dashboardItem));\n    } else {\n        dispatch(acRemoveDashboardItem(dashboardItem));\n    }\n};\n","import React, { Fragment } from 'react';\nimport { connect } from 'react-redux';\nimport i18n from '@dhis2/d2-i18n';\nimport Input from '@material-ui/core/Input';\nimport {\n    Parser as RichTextParser,\n    Editor as RichTextEditor,\n} from '@dhis2/d2-ui-rich-text';\n\nimport { acUpdateDashboardItem } from '../../../actions/editDashboard';\nimport { sGetEditDashboardItems } from '../../../reducers/editDashboard';\nimport { sGetDashboardItems } from '../../../reducers/dashboards';\nimport ItemHeader from '../ItemHeader';\nimport Line from '../../../widgets/Line';\n\nconst style = {\n    textDiv: {\n        padding: '10px',\n        whiteSpace: 'pre-line',\n        lineHeight: '20px',\n    },\n    textField: {\n        fontSize: '14px',\n        fontStretch: 'normal',\n        width: '90%',\n        margin: '0 auto',\n        display: 'block',\n        lineHeight: '24px',\n    },\n    container: {\n        marginBottom: '20px',\n        marginTop: '20px',\n    },\n};\n\nconst TextItem = props => {\n    const { item, editMode, text, acUpdateDashboardItem } = props;\n\n    const onChangeText = event => {\n        const updatedItem = {\n            ...item,\n            text: event.target.value,\n        };\n\n        acUpdateDashboardItem(updatedItem);\n    };\n\n    const viewItem = () => {\n        const textDivStyle = Object.assign({}, style.textField, style.textDiv);\n        return (\n            <div className=\"dashboard-item-content\" style={style.container}>\n                <RichTextParser style={textDivStyle}>{text}</RichTextParser>\n            </div>\n        );\n    };\n\n    const editItem = () => {\n        return (\n            <Fragment>\n                <ItemHeader title={i18n.t('Text item')} />\n                <Line />\n                <div className=\"dashboard-item-content\">\n                    <RichTextEditor onEdit={onChangeText}>\n                        <Input\n                            value={text}\n                            multiline\n                            fullWidth\n                            style={style.textField}\n                            placeholder={i18n.t('Add text here')}\n                            onChange={onChangeText}\n                        />\n                    </RichTextEditor>\n                </div>\n            </Fragment>\n        );\n    };\n\n    return <Fragment>{editMode ? editItem() : viewItem()}</Fragment>;\n};\n\nconst mapStateToProps = (state, ownProps) => {\n    const items = ownProps.editMode\n        ? sGetEditDashboardItems(state)\n        : sGetDashboardItems(state);\n\n    const item = items.find(item => item.id === ownProps.item.id);\n\n    return {\n        text: item ? item.text : '',\n    };\n};\n\nexport default connect(\n    mapStateToProps,\n    {\n        acUpdateDashboardItem,\n    }\n)(TextItem);\n","import React, { Fragment } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport NotInterestedIcon from '@material-ui/icons/NotInterested';\n\nimport { FILTER_ORG_UNIT } from '../../../actions/itemFilters';\nimport { sGetItemFiltersRoot } from '../../../reducers/itemFilters';\nimport ItemHeader from '../ItemHeader';\nimport Line from '../../../widgets/Line';\n\nconst getIframeSrc = (appDetails, item, itemFilters) => {\n    let iframeSrc = `${appDetails.launchUrl}?dashboardItemId=${item.id}`;\n\n    if (\n        itemFilters &&\n        itemFilters[FILTER_ORG_UNIT] &&\n        itemFilters[FILTER_ORG_UNIT].length\n    ) {\n        const ouIds = itemFilters[FILTER_ORG_UNIT].map(\n            ouPath => ouPath.split('/').slice(-1)[0]\n        );\n\n        iframeSrc += `&userOrgUnit=${ouIds.join(',')}`;\n    }\n\n    return iframeSrc;\n};\n\nconst AppItem = ({ item, itemFilters }, context) => {\n    let appDetails;\n\n    const appKey = item.appKey;\n\n    if (appKey) {\n        appDetails = context.d2.system.installedApps.find(\n            app => app.key === appKey\n        );\n    }\n\n    return appDetails && appDetails.name && appDetails.launchUrl ? (\n        <Fragment>\n            <ItemHeader title={appDetails.name} />\n            <Line />\n            <iframe\n                title={appDetails.name}\n                src={getIframeSrc(appDetails, item, itemFilters)}\n                className=\"dashboard-item-content\"\n                style={{ border: 'none' }}\n            />\n        </Fragment>\n    ) : (\n        <Fragment>\n            <ItemHeader title={`${appKey} app not found`} />\n            <Line />\n            <div\n                className=\"dashboard-item-content\"\n                style={{\n                    display: 'flex',\n                    justifyContent: 'center',\n                    alignItems: 'center',\n                    height: '90%',\n                }}\n            >\n                <NotInterestedIcon\n                    color=\"disabled\"\n                    disabled\n                    style={{ width: 100, height: 100, align: 'center' }}\n                />\n            </div>\n        </Fragment>\n    );\n};\n\nAppItem.contextTypes = {\n    d2: PropTypes.object,\n};\n\nconst mapStateToProps = state => ({\n    itemFilters: sGetItemFiltersRoot(state),\n});\n\nexport default connect(mapStateToProps)(AppItem);\n","import React, { Fragment } from 'react';\nimport i18n from '@dhis2/d2-i18n';\n\nimport { colors } from '@dhis2/ui-core';\nimport ItemHeader from '../ItemHeader';\n\nconst style = {\n    margin: '21px 28px',\n    fontSize: '14px',\n    lineHeight: '18px',\n    color: colors.grey600,\n};\n\nconst SpacerItem = () => {\n    return (\n        <Fragment>\n            <ItemHeader title={i18n.t('Spacer')} />\n            <p style={style}>\n                {i18n.t(\n                    'Use a spacer to create empty vertical space between other dashboard items.'\n                )}\n            </p>\n        </Fragment>\n    );\n};\n\nexport default SpacerItem;\n","import React from 'react';\n\nimport VisualizationItem from './VisualizationItem/Item';\nimport MessagesItem from './MessagesItem/Item';\nimport NotSupportedItem from './NotSupportedItem/Item';\nimport ListItem from './ListItem/Item';\nimport TextItem from './TextItem/Item';\nimport AppItem from './AppItem/Item';\nimport SpacerItem from './SpacerItem/Item';\nimport {\n    APP,\n    REPORT_TABLE,\n    CHART,\n    MAP,\n    EVENT_CHART,\n    EVENT_REPORT,\n    MESSAGES,\n    REPORTS,\n    RESOURCES,\n    USERS,\n    TEXT,\n    SPACER,\n} from '../../modules/itemTypes';\nimport { DEFAULT_STATE_ITEM_FILTERS } from '../../reducers/itemFilters';\n\nconst getGridItem = type => {\n    switch (type) {\n        case REPORT_TABLE:\n        case CHART:\n        case MAP:\n        case EVENT_CHART:\n        case EVENT_REPORT:\n            return VisualizationItem;\n        case MESSAGES:\n            return MessagesItem;\n        case REPORTS:\n        case RESOURCES:\n        case USERS:\n            return ListItem;\n        case TEXT:\n            return TextItem;\n        case SPACER:\n            return SpacerItem;\n        case APP:\n            return AppItem;\n        default:\n            return NotSupportedItem;\n    }\n};\n\nexport const Item = props => {\n    const GridItem = getGridItem(props.item.type);\n\n    return (\n        <GridItem\n            item={props.item}\n            editMode={props.editMode}\n            itemFilters={\n                props.editMode ? DEFAULT_STATE_ITEM_FILTERS : props.itemFilters\n            }\n            onToggleItemExpanded={props.onToggleItemExpanded}\n        />\n    );\n};\n","import React from 'react';\nimport ItemHeaderButton from '../Item/ItemHeaderButton';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport { colors } from '@dhis2/ui-core';\n\nconst style = {\n    button: {\n        position: 'absolute',\n        top: '7px',\n        right: '7px',\n        zIndex: '1000',\n    },\n    icon: {\n        fill: colors.red500,\n    },\n};\n\nconst DeleteItemHeaderButton = ({ onClick }) => (\n    <ItemHeaderButton onClick={onClick} style={style.button}>\n        <DeleteIcon style={style.icon} />\n    </ItemHeaderButton>\n);\n\nexport default DeleteItemHeaderButton;\n","import React from 'react';\nimport { colors } from '@dhis2/ui-core';\n\nexport const NoContentMessage = ({ text }) => (\n    <div\n        style={{\n            padding: '50px 10px',\n            textAlign: 'center',\n            fontSize: '15px',\n            fontWeight: 500,\n            color: colors.grey600,\n        }}\n    >\n        {text}\n    </div>\n);\n\nexport default NoContentMessage;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport debounce from 'lodash/debounce';\n\nconst defaultDebounceMs = 100;\nconst defaultBufferFactor = 0.25;\n\nclass ProgressiveLoadingContainer extends Component {\n    static propTypes = {\n        children: PropTypes.node.isRequired,\n        debounceMs: PropTypes.number,\n        bufferFactor: PropTypes.number,\n    };\n    static defaultProps = {\n        debounceMs: defaultDebounceMs,\n        bufferFactor: defaultBufferFactor,\n    };\n\n    state = {\n        shouldLoad: false,\n    };\n    containerRef = null;\n    shouldLoadHandler = null;\n\n    checkShouldLoad() {\n        const bufferPx = this.props.bufferFactor * window.innerHeight;\n\n        if (!this.containerRef) {\n            return;\n        }\n\n        const rect = this.containerRef.getBoundingClientRect();\n        if (\n            rect.bottom > -bufferPx &&\n            rect.top < window.innerHeight + bufferPx\n        ) {\n            this.setState({\n                shouldLoad: true,\n            });\n\n            this.removeHandler();\n        }\n    }\n\n    registerHandler() {\n        this.shouldLoadHandler = debounce(\n            () => this.checkShouldLoad(),\n            this.props.debounceMs\n        );\n\n        window.addEventListener('scroll', this.shouldLoadHandler);\n    }\n    removeHandler() {\n        window.removeEventListener('scroll', this.shouldLoadHandler);\n    }\n\n    componentDidMount() {\n        this.registerHandler();\n        this.checkShouldLoad();\n    }\n\n    componentWillUnmount() {\n        this.removeHandler();\n    }\n\n    render() {\n        const { children, debounceMs, bufferFactor, ...props } = this.props;\n        const { shouldLoad } = this.state;\n\n        return (\n            <div ref={ref => (this.containerRef = ref)} {...props}>\n                {shouldLoad && children}\n            </div>\n        );\n    }\n}\n\nexport default ProgressiveLoadingContainer;\n","import React, { useState, useEffect } from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport i18n from '@dhis2/d2-i18n';\nimport ReactGridLayout from 'react-grid-layout';\nimport { CircularProgress, ScreenCover } from '@dhis2/ui-core';\n\nimport {\n    acUpdateDashboardLayout,\n    acRemoveDashboardItem,\n} from '../../actions/editDashboard';\nimport { Item } from '../Item/Item';\nimport { resize as pluginResize } from '../Item/VisualizationItem/plugin';\nimport { isPluginType } from '../../modules/itemTypes';\nimport {\n    GRID_ROW_HEIGHT,\n    GRID_COMPACT_TYPE,\n    ITEM_MIN_HEIGHT,\n    MARGIN,\n    getGridColumns,\n    hasShape,\n    onItemResize,\n} from './gridUtil';\nimport { orArray } from '../../modules/util';\nimport DeleteItemButton from './DeleteItemButton';\nimport NoContentMessage from '../../widgets/NoContentMessage';\n\nimport 'react-grid-layout/css/styles.css';\nimport 'react-resizable/css/styles.css';\n\nimport './ItemGrid.css';\nimport { sGetSelectedId, sGetSelectedIsLoading } from '../../reducers/selected';\nimport {\n    sGetEditDashboardRoot,\n    sGetEditDashboardItems,\n} from '../../reducers/editDashboard';\nimport {\n    sGetDashboardById,\n    sGetDashboardItems,\n} from '../../reducers/dashboards';\nimport ProgressiveLoadingContainer from '../Item/ProgressiveLoadingContainer';\n\n// Component\n\nconst EXPANDED_HEIGHT = 17;\n\nexport const ItemGrid = props => {\n    const [expandedItems, setExpandedItems] = useState({});\n\n    useEffect(() => {\n        props.edit && setExpandedItems({});\n    }, [props.edit]);\n\n    const onToggleItemExpanded = clickedId => {\n        const isExpanded =\n            typeof expandedItems[clickedId] === 'boolean'\n                ? expandedItems[clickedId]\n                : false;\n\n        const _expandedItems = { ...expandedItems };\n        _expandedItems[clickedId] = !isExpanded;\n\n        setExpandedItems(_expandedItems);\n    };\n\n    const onRemoveItem = clickedId => {\n        props.acRemoveDashboardItem(clickedId);\n    };\n\n    const onLayoutChange = newLayout =>\n        props.edit && props.acUpdateDashboardLayout(newLayout);\n\n    const onResizeStop = (layout, oldItem, newItem) => {\n        onItemResize(newItem.i);\n\n        const dashboardItem = props.dashboardItems.find(\n            item => item.id === newItem.i\n        );\n\n        // call resize on the item component if it's a plugin type\n        if (dashboardItem && isPluginType(dashboardItem)) {\n            pluginResize(dashboardItem);\n        }\n    };\n\n    const onRemoveItemWrapper = id => () => onRemoveItem(id);\n\n    if (!props.isLoading && !props.dashboardItems.length) {\n        return (\n            <NoContentMessage\n                text={i18n.t('There are no items on this dashboard')}\n            />\n        );\n    }\n\n    const items = props.dashboardItems.map(item => {\n        const expandedItem = expandedItems[item.id];\n        let hProp = { h: item.h };\n\n        if (expandedItem && expandedItem === true) {\n            hProp.h = item.h + EXPANDED_HEIGHT;\n        }\n\n        return Object.assign({}, item, hProp, {\n            i: item.id,\n            minH: ITEM_MIN_HEIGHT,\n        });\n    });\n\n    return (\n        <div className=\"grid-wrapper\">\n            {props.isLoading ? (\n                <ScreenCover>\n                    <CircularProgress />\n                </ScreenCover>\n            ) : null}\n            <ReactGridLayout\n                onLayoutChange={onLayoutChange}\n                onResizeStop={onResizeStop}\n                className=\"layout\"\n                layout={items}\n                margin={MARGIN}\n                cols={getGridColumns()}\n                rowHeight={GRID_ROW_HEIGHT}\n                width={window.innerWidth}\n                compactType={GRID_COMPACT_TYPE}\n                isDraggable={props.edit}\n                isResizable={props.edit}\n                draggableCancel=\"input,textarea\"\n            >\n                {items.map(item => {\n                    const itemClassNames = [\n                        item.type,\n                        props.edit ? 'edit' : 'view',\n                    ].join(' ');\n\n                    return (\n                        <ProgressiveLoadingContainer\n                            key={item.i}\n                            className={itemClassNames}\n                        >\n                            {props.edit ? (\n                                <DeleteItemButton\n                                    onClick={onRemoveItemWrapper(item.id)}\n                                />\n                            ) : null}\n                            <Item\n                                item={item}\n                                editMode={props.edit}\n                                onToggleItemExpanded={onToggleItemExpanded}\n                            />\n                        </ProgressiveLoadingContainer>\n                    );\n                })}\n            </ReactGridLayout>\n        </div>\n    );\n};\n\nItemGrid.propTypes = {\n    dashboardItems: PropTypes.array,\n};\n\nItemGrid.defaultProps = {\n    dashboardItems: [],\n};\n\n// Container\n\nconst mapStateToProps = (state, ownProps) => {\n    const selectedDashboard = ownProps.edit\n        ? sGetEditDashboardRoot(state)\n        : sGetDashboardById(state, sGetSelectedId(state));\n\n    const dashboardItems = ownProps.edit\n        ? sGetEditDashboardItems(state)\n        : sGetDashboardItems(state);\n\n    return {\n        isLoading: sGetSelectedIsLoading(state) || !selectedDashboard,\n        dashboardItems,\n    };\n};\n\nconst mapDispatchToProps = {\n    acUpdateDashboardLayout,\n    acRemoveDashboardItem,\n};\n\nconst mergeProps = (stateProps, dispatchProps, ownProps) => {\n    const validItems = orArray(stateProps.dashboardItems).filter(hasShape);\n\n    return {\n        ...dispatchProps,\n        edit: ownProps.edit,\n        isLoading: stateProps.isLoading,\n        dashboardItems: validItems,\n        onItemResize,\n    };\n};\n\nexport default connect(\n    mapStateToProps,\n    mapDispatchToProps,\n    mergeProps\n)(ItemGrid);\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nimport i18n from '@dhis2/d2-i18n';\n\nimport { colors } from '@dhis2/ui-core';\n\nconst styles = {\n    badgeContainer: {\n        margin: '2px',\n        padding: '0 16px',\n        borderRadius: '4px',\n        color: colors.white,\n        backgroundColor: '#212934',\n        height: 36,\n        display: 'flex',\n        alignItems: 'center',\n    },\n    badge: {\n        fontSize: '13px',\n        cursor: 'pointer',\n        whiteSpace: 'nowrap',\n    },\n    badgeRemove: {\n        fontSize: '12px',\n        textDecoration: 'underline',\n        marginLeft: '24px',\n        cursor: 'pointer',\n    },\n};\n\nclass FilterBadge extends Component {\n    onClick = id => () => this.props.onClick(id);\n    onRemove = id => () => this.props.onRemove(id);\n\n    render() {\n        const { data } = this.props;\n\n        return (\n            <div style={styles.badgeContainer}>\n                <span style={styles.badge} onClick={this.onClick(data.id)}>\n                    {`${data.name}: ${\n                        data.values.length > 1\n                            ? i18n.t('{{count}} selected', {\n                                  count: data.values.length,\n                              })\n                            : data.values[0].name\n                    }`}\n                </span>\n                <span\n                    style={styles.badgeRemove}\n                    onClick={this.onRemove(data.id)}\n                >\n                    {i18n.t('Remove')}\n                </span>\n            </div>\n        );\n    }\n}\n\nFilterBadge.propTypes = {\n    data: PropTypes.object.isRequired,\n    onClick: PropTypes.func.isRequired,\n    onRemove: PropTypes.func.isRequired,\n};\n\nFilterBadge.defaultProps = {\n    onClick: Function.prototype,\n    onRemove: Function.prototype,\n};\n\nexport default FilterBadge;\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { createSelector } from 'reselect';\nimport { withStyles } from '@material-ui/core/styles';\n\nimport { sGetDimensions } from '../../reducers/dimensions';\nimport { sGetItemFiltersRoot } from '../../reducers/itemFilters';\nimport { sGetControlBarUserRows } from '../../reducers/controlBar';\nimport { getTopOffset } from '../ControlBar/controlBarDimensions';\nimport { acRemoveItemFilter } from '../../actions/itemFilters';\nimport { acRemoveEditItemFilter } from '../../actions/editItemFilters';\nimport { acSetActiveModalDimension } from '../../actions/activeModalDimension';\n\nimport FilterBadge from './FilterBadge';\n\nconst styles = {\n    bar: {\n        position: 'sticky',\n        zIndex: 7,\n        padding: '8px 0',\n        display: 'flex',\n        justifyContent: 'center',\n        flexWrap: 'wrap',\n    },\n};\n\nexport class FilterBar extends Component {\n    onBadgeRemove = id => {\n        this.props.removeItemFilter(id);\n        this.props.removeEditItemFilter(id);\n    };\n\n    onBadgeClick = id => {\n        this.props.setActiveModalDimension({\n            id,\n            name: this.props.filters.find(item => item.id === id).name,\n        });\n    };\n\n    render() {\n        const { filters, userRows, classes } = this.props;\n        const top = getTopOffset(userRows) + 10;\n\n        return filters.length ? (\n            <div className={classes.bar} style={{ top }}>\n                {filters.map(filter => (\n                    <FilterBadge\n                        key={filter.id}\n                        data={filter}\n                        onClick={this.onBadgeClick}\n                        onRemove={this.onBadgeRemove}\n                    />\n                ))}\n            </div>\n        ) : null;\n    }\n}\n\nFilterBar.propTypes = {\n    filters: PropTypes.array.isRequired,\n    removeItemFilter: PropTypes.func.isRequired,\n    removeEditItemFilter: PropTypes.func.isRequired,\n};\n\nFilterBar.defaultProps = {\n    filters: [],\n    removeItemFIlter: Function.prototype,\n    removeEditItemFilter: Function.prototype,\n};\n\n// simplify the filters structure to:\n// [{ id: 'pe', name: 'Period', values: [{ id: 2019: name: '2019' }, {id: 'LAST_MONTH', name: 'Last month' }]}, ...]\nconst filtersSelector = createSelector(\n    [sGetItemFiltersRoot, sGetDimensions],\n    (filters, dimensions) =>\n        Object.keys(filters).reduce((arr, id) => {\n            arr.push({\n                id: id,\n                name: dimensions[id].name,\n                values: filters[id].map(value => ({\n                    id: value.id,\n                    name: value.displayName || value.name,\n                })),\n            });\n\n            return arr;\n        }, [])\n);\n\nconst mapStateToProps = state => ({\n    filters: filtersSelector(state),\n    userRows: sGetControlBarUserRows(state),\n});\n\nexport default connect(\n    mapStateToProps,\n    {\n        setActiveModalDimension: acSetActiveModalDimension,\n        removeItemFilter: acRemoveItemFilter,\n        removeEditItemFilter: acRemoveEditItemFilter,\n    }\n)(withStyles(styles)(FilterBar));\n","import React, { Fragment } from 'react';\nimport TitleBar from '../TitleBar/TitleBar';\nimport ItemGrid from '../ItemGrid/ItemGrid';\nimport FilterBar from '../FilterBar/FilterBar';\n\nexport const DashboardContent = props => (\n    <Fragment>\n        <TitleBar edit={props.editMode} />\n        <FilterBar />\n        <ItemGrid edit={props.editMode} />\n    </Fragment>\n);\n\nexport default DashboardContent;\n","import React, { Fragment } from 'react';\nimport { connect } from 'react-redux';\nimport isEmpty from 'lodash/isEmpty';\nimport i18n from '@dhis2/d2-i18n';\n\nimport {\n    sGetAllDashboards,\n    sDashboardsIsFetching,\n} from '../../reducers/dashboards';\nimport { sGetSelectedId } from '../../reducers/selected';\nimport DashboardsBar from '../ControlBar/DashboardsBar';\nimport DashboardVerticalOffset from './DashboardVerticalOffset';\nimport DashboardContent from './DashboardContent';\nimport NoContentMessage from '../../widgets/NoContentMessage';\n\nexport const Content = ({ hasDashboardContent, dashboardsIsEmpty }) => {\n    const msg = dashboardsIsEmpty\n        ? i18n.t(\n              'No dashboards found. Use the + button to create a new dashboard.'\n          )\n        : i18n.t('Requested dashboard not found');\n\n    return hasDashboardContent ? (\n        <DashboardContent editMode={false} />\n    ) : (\n        <NoContentMessage text={msg} />\n    );\n};\n\nexport const ViewDashboard = ({ id, dashboardsIsEmpty, dashboardsLoaded }) => {\n    const hasDashboardContent = id && !dashboardsIsEmpty;\n    const contentNotReady = !dashboardsLoaded || id === null;\n\n    return (\n        <Fragment>\n            <DashboardsBar />\n            <DashboardVerticalOffset />\n            <div className=\"dashboard-wrapper\">\n                {contentNotReady ? null : (\n                    <Content\n                        hasDashboardContent={hasDashboardContent}\n                        dashboardsIsEmpty={dashboardsIsEmpty}\n                    />\n                )}\n            </div>\n        </Fragment>\n    );\n};\n\nconst mapStateToProps = state => {\n    const dashboards = sGetAllDashboards(state);\n\n    return {\n        id: sGetSelectedId(state),\n        dashboardsIsEmpty: isEmpty(dashboards),\n        dashboardsLoaded: !sDashboardsIsFetching(state),\n    };\n};\n\nexport default connect(mapStateToProps)(ViewDashboard);\n","import React from 'react';\nimport i18n from '@dhis2/d2-i18n';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport { Button } from '@dhis2/ui-core';\n\nexport const ConfirmDeleteDialog = ({\n    dashboardName,\n    onDeleteConfirmed,\n    onContinueEditing,\n    open,\n}) => {\n    const actions = [\n        <Button key=\"cancel\" secondary onClick={onContinueEditing}>\n            {i18n.t('Cancel')}\n        </Button>,\n        <Button key=\"delete\" destructive onClick={onDeleteConfirmed}>\n            {i18n.t('Delete')}\n        </Button>,\n    ];\n\n    return (\n        <Dialog open={open} onClose={onContinueEditing}>\n            <DialogTitle style={{ fontSize: '1.25rem', fontWeight: '450' }}>\n                {i18n.t('Delete dashboard')}\n            </DialogTitle>\n            <DialogContent>\n                <DialogContentText style={{ fontSize: '0.875rem' }}>\n                    {i18n.t(\n                        'Deleting dashboard \"{{ dashboardName }}\" will remove it for all users. This action cannot be undone. Are you sure you want to permanently delete this dashboard?',\n                        { dashboardName }\n                    )}\n                </DialogContentText>\n            </DialogContent>\n            <DialogActions>{actions}</DialogActions>\n        </Dialog>\n    );\n};\n\nexport default ConfirmDeleteDialog;\n","import React, { Component, Fragment } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { Redirect } from 'react-router-dom';\nimport i18n from '@dhis2/d2-i18n';\nimport ControlBar from './ControlBar';\nimport TranslationDialog from '@dhis2/d2-ui-translation-dialog';\nimport { Button } from '@dhis2/ui-core';\n\nimport ConfirmDeleteDialog from './ConfirmDeleteDialog';\nimport {\n    tSaveDashboard,\n    acClearEditDashboard,\n} from '../../actions/editDashboard';\nimport {\n    tDeleteDashboard,\n    acSetDashboardDisplayName,\n} from '../../actions/dashboards';\nimport {\n    sGetEditDashboardRoot,\n    sGetIsNewDashboard,\n} from '../../reducers/editDashboard';\nimport {\n    CONTROL_BAR_ROW_HEIGHT,\n    MIN_ROW_COUNT,\n    getControlBarHeight,\n} from './controlBarDimensions';\nimport { apiFetchDashboard } from '../../api/dashboards';\n\nimport classes from './styles/DashboardsBar.module.css';\n\nconst buttonBarStyle = {\n    height: CONTROL_BAR_ROW_HEIGHT,\n    paddingTop: '15px',\n    marginLeft: '15px',\n    marginRight: '15px',\n};\n\nexport class EditBar extends Component {\n    state = {\n        translationDialogIsOpen: false,\n        dashboardModel: undefined,\n        confirmDeleteDialogOpen: false,\n        redirectUrl: undefined,\n    };\n\n    onConfirmDelete = () => {\n        this.setState({ confirmDeleteDialogOpen: true });\n    };\n\n    onSave = () => {\n        this.props.onSave().then(newId => {\n            this.setState({ redirectUrl: `/${newId}` });\n        });\n    };\n\n    onDiscard = () => {\n        this.props.onDiscardChanges();\n        const redirectUrl = this.props.dashboardId\n            ? `/${this.props.dashboardId}`\n            : '/';\n        this.setState({ redirectUrl });\n    };\n\n    onContinueEditing = () => {\n        this.setState({ confirmDeleteDialogOpen: false });\n    };\n\n    onDeleteConfirmed = () => {\n        this.setState({ confirmDeleteDialogOpen: false });\n        this.props.onDelete(this.props.dashboardId).then(() => {\n            this.setState({ redirectUrl: '/' });\n        });\n    };\n\n    onTranslationsSaved = async translations => {\n        if (translations && translations.length) {\n            const dbLocale = await this.context.d2.currentUser.userSettings.get(\n                'keyDbLocale'\n            );\n\n            const translation = translations.find(\n                t => t.locale === dbLocale && t.property === 'NAME'\n            );\n\n            if (translation && translation.value) {\n                this.props.onTranslate(\n                    this.props.dashboardId,\n                    translation.value\n                );\n            }\n        }\n    };\n\n    fetchDashboardModel = () => {\n        if (this.props.dashboardId && !this.state.dashboardModel) {\n            apiFetchDashboard(this.props.dashboardId).then(dashboardModel =>\n                this.setState({ dashboardModel })\n            );\n        }\n    };\n\n    componentDidMount() {\n        this.fetchDashboardModel();\n    }\n\n    componentDidUpdate() {\n        this.fetchDashboardModel();\n    }\n\n    toggleTranslationDialog = () => {\n        this.setState({\n            translationDialogIsOpen: !this.state.translationDialogIsOpen,\n        });\n    };\n\n    confirmDeleteDialog = () =>\n        this.props.deleteAccess && this.props.dashboardId ? (\n            <ConfirmDeleteDialog\n                dashboardName={this.props.dashboardName}\n                onDeleteConfirmed={this.onDeleteConfirmed}\n                onContinueEditing={this.onContinueEditing}\n                open={this.state.confirmDeleteDialogOpen}\n            />\n        ) : null;\n\n    translationDialog = () =>\n        this.state.dashboardModel && this.state.dashboardModel.id ? (\n            <TranslationDialog\n                className=\"translation-dialog\"\n                d2={this.context.d2}\n                open={this.state.translationDialogIsOpen}\n                onRequestClose={this.toggleTranslationDialog}\n                objectToTranslate={this.state.dashboardModel}\n                fieldsToTranslate={['name', 'description']}\n                // TODO handle messages in snackbar\n                onTranslationSaved={this.onTranslationsSaved}\n                onTranslationError={err =>\n                    console.log('translation update error', err)\n                }\n            />\n        ) : null;\n\n    render() {\n        if (this.state.redirectUrl) {\n            return <Redirect to={this.state.redirectUrl} />;\n        }\n\n        const { dashboardId, deleteAccess, updateAccess } = this.props;\n        const controlBarHeight = getControlBarHeight(MIN_ROW_COUNT);\n\n        const discardBtnText = updateAccess\n            ? i18n.t('Exit without saving')\n            : i18n.t('Go to dashboards');\n\n        return (\n            <Fragment>\n                <ControlBar height={controlBarHeight} editMode={true}>\n                    <div style={buttonBarStyle}>\n                        {updateAccess ? (\n                            <div className={classes.leftControls}>\n                                <span style={{ marginRight: '15px' }}>\n                                    <Button primary onClick={this.onSave}>\n                                        {i18n.t('Save changes')}\n                                    </Button>\n                                </span>\n\n                                {dashboardId ? (\n                                    <span style={{ marginRight: '15px' }}>\n                                        <Button\n                                            onClick={\n                                                this.toggleTranslationDialog\n                                            }\n                                        >\n                                            {i18n.t('Translate')}\n                                        </Button>\n                                    </span>\n                                ) : null}\n                                {dashboardId && deleteAccess ? (\n                                    <Button onClick={this.onConfirmDelete}>\n                                        {i18n.t('Delete')}\n                                    </Button>\n                                ) : null}\n                            </div>\n                        ) : null}\n\n                        <div className={classes.rightControls}>\n                            <Button secondary onClick={this.onDiscard}>\n                                {discardBtnText}\n                            </Button>\n                        </div>\n                    </div>\n                </ControlBar>\n                {this.translationDialog()}\n                {this.confirmDeleteDialog()}\n            </Fragment>\n        );\n    }\n}\n\nEditBar.contextTypes = {\n    d2: PropTypes.object,\n};\n\nconst mapStateToProps = state => {\n    const dashboard = sGetEditDashboardRoot(state);\n\n    let deleteAccess;\n    let updateAccess;\n    if (sGetIsNewDashboard(state)) {\n        deleteAccess = true;\n        updateAccess = true;\n    } else {\n        updateAccess = dashboard.access ? dashboard.access.update : false;\n        deleteAccess = dashboard.access ? dashboard.access.delete : false;\n    }\n\n    return {\n        dashboardId: dashboard.id,\n        dashboardName: dashboard.name,\n        deleteAccess,\n        updateAccess,\n    };\n};\n\nconst mapDispatchToProps = dispatch => ({\n    onSave: () => dispatch(tSaveDashboard()).then(id => id),\n    onDelete: id => dispatch(tDeleteDashboard(id)),\n    onDiscardChanges: () => dispatch(acClearEditDashboard()),\n    onTranslate: (id, value) => dispatch(acSetDashboardDisplayName(id, value)),\n});\n\nexport default connect(\n    mapStateToProps,\n    mapDispatchToProps\n)(EditBar);\n","import React, { Fragment, Component } from 'react';\nimport { connect } from 'react-redux';\nimport i18n from '@dhis2/d2-i18n';\n\nimport { acSetEditDashboard } from '../../actions/editDashboard';\nimport { sGetSelectedId } from '../../reducers/selected';\nimport {\n    sGetDashboardById,\n    sGetDashboardItems,\n    sDashboardsIsFetching,\n} from '../../reducers/dashboards';\nimport DashboardVerticalOffset from './DashboardVerticalOffset';\nimport DashboardContent from './DashboardContent';\nimport EditBar from '../ControlBar/EditBar';\nimport NoContentMessage from '../../widgets/NoContentMessage';\n\nexport const Content = ({ updateAccess }) => {\n    return updateAccess ? (\n        <DashboardContent editMode={true} />\n    ) : (\n        <NoContentMessage text={i18n.t('No access')} />\n    );\n};\nexport class EditDashboard extends Component {\n    state = {\n        initialized: false,\n    };\n\n    initEditDashboard = () => {\n        if (this.props.dashboard) {\n            this.setState({ initialized: true });\n            this.props.setEditDashboard(this.props.dashboard, this.props.items);\n        }\n    };\n\n    componentDidMount() {\n        this.initEditDashboard();\n    }\n\n    componentDidUpdate() {\n        if (!this.state.initialized) {\n            this.initEditDashboard();\n        }\n    }\n\n    getDashboardContent = () => {\n        const contentNotReady =\n            !this.props.dashboardsLoaded || this.props.id === null;\n\n        return (\n            <div className=\"dashboard-wrapper\">\n                {contentNotReady ? null : (\n                    <Content updateAccess={this.props.updateAccess} />\n                )}\n            </div>\n        );\n    };\n\n    render() {\n        return (\n            <Fragment>\n                <EditBar />\n                <DashboardVerticalOffset editMode={true} />\n                {this.getDashboardContent()}\n            </Fragment>\n        );\n    }\n}\n\nconst mapStateToProps = state => {\n    const id = sGetSelectedId(state);\n    const dashboard = id ? sGetDashboardById(state, id) : null;\n\n    const updateAccess =\n        dashboard && dashboard.access ? dashboard.access.update : false;\n\n    return {\n        dashboard,\n        id,\n        updateAccess,\n        items: sGetDashboardItems(state),\n        dashboardsLoaded: !sDashboardsIsFetching(state),\n    };\n};\n\nexport default connect(\n    mapStateToProps,\n    {\n        setEditDashboard: acSetEditDashboard,\n    }\n)(EditDashboard);\n","import React, { Component, Fragment } from 'react';\nimport { connect } from 'react-redux';\n\nimport { acSetEditNewDashboard } from '../../actions/editDashboard';\nimport DashboardVerticalOffset from './DashboardVerticalOffset';\nimport EditBar from '../ControlBar/EditBar';\nimport DashboardContent from './DashboardContent';\n\nclass NewDashboard extends Component {\n    componentDidMount() {\n        this.props.setNewDashboard();\n    }\n\n    render() {\n        return (\n            <Fragment>\n                <EditBar />\n                <DashboardVerticalOffset editMode={true} />\n                <div className=\"dashboard-wrapper\">\n                    <DashboardContent editMode={true} />\n                </div>\n            </Fragment>\n        );\n    }\n}\n\nexport default connect(\n    null,\n    {\n        setNewDashboard: acSetEditNewDashboard,\n    }\n)(NewDashboard);\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\n\nimport { tSelectDashboard } from '../../actions/dashboards';\nimport { sDashboardsIsFetching } from '../../reducers/dashboards';\nimport { EDIT, NEW } from './dashboardModes';\nimport ViewDashboard from './ViewDashboard';\nimport EditDashboard from './EditDashboard';\nimport NewDashboard from './NewDashboard';\n\nclass Dashboard extends Component {\n    setDashboard = () => {\n        if (this.props.dashboardsLoaded) {\n            const id = this.props.match.params.dashboardId || null;\n\n            this.props.selectDashboard(id);\n\n            this.scrollToTop();\n        }\n    };\n\n    scrollToTop = () => {\n        window.scrollTo(0, 0);\n    };\n\n    componentDidMount() {\n        this.setDashboard();\n    }\n\n    componentDidUpdate() {\n        this.setDashboard();\n    }\n\n    render() {\n        switch (this.props.mode) {\n            case EDIT:\n                return <EditDashboard />;\n            case NEW:\n                return <NewDashboard />;\n            default:\n                return <ViewDashboard />;\n        }\n    }\n}\n\nconst mapStateToProps = state => {\n    return { dashboardsLoaded: !sDashboardsIsFetching(state) };\n};\n\nexport default connect(\n    mapStateToProps,\n    {\n        selectDashboard: tSelectDashboard,\n    }\n)(Dashboard);\n","export const EDIT = 'edit';\nexport const NEW = 'new';\nexport const VIEW = 'view';\n","import React, { Component } from 'react';\nimport { HashRouter as Router, Route, Switch } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport i18n from '@dhis2/d2-i18n';\nimport HeaderBar from '@dhis2/ui/widgets/HeaderBar';\n\nimport { EDIT, VIEW, NEW } from './Dashboard/dashboardModes';\nimport { acReceivedUser } from '../actions/user';\nimport { tFetchDashboards } from '../actions/dashboards';\nimport { tSetControlBarRows } from '../actions/controlBar';\nimport { tSetDimensions } from '../actions/dimensions';\nimport Dashboard from './Dashboard/Dashboard';\nimport SnackbarMessage from './SnackbarMessage/SnackbarMessage';\n\nimport 'typeface-roboto';\nimport './App.css';\n\nexport class App extends Component {\n    componentDidMount() {\n        this.props.setCurrentUser(this.props.d2.currentUser);\n        this.props.fetchDashboards();\n        this.props.setControlBarRows();\n        this.props.setDimensions(this.props.d2);\n    }\n\n    getChildContext() {\n        return { baseUrl: this.props.baseUrl, i18n, d2: this.props.d2 };\n    }\n\n    render() {\n        return (\n            <div className=\"app-wrapper\">\n                <div className=\"dashboard-header-bar\">\n                    <HeaderBar appName={i18n.t('Dashboard')} />\n                </div>\n                <Router>\n                    <Switch>\n                        <Route\n                            exact\n                            path=\"/\"\n                            render={props => (\n                                <Dashboard {...props} mode={VIEW} />\n                            )}\n                        />\n                        <Route\n                            exact\n                            path=\"/new\"\n                            render={props => (\n                                <Dashboard {...props} mode={NEW} />\n                            )}\n                        />\n                        <Route\n                            exact\n                            path=\"/:dashboardId\"\n                            render={props => (\n                                <Dashboard {...props} mode={VIEW} />\n                            )}\n                        />\n                        <Route\n                            exact\n                            path=\"/:dashboardId/edit\"\n                            render={props => (\n                                <Dashboard {...props} mode={EDIT} />\n                            )}\n                        />\n                    </Switch>\n                </Router>\n                <SnackbarMessage />\n            </div>\n        );\n    }\n}\n\nApp.childContextTypes = {\n    baseUrl: PropTypes.string,\n    i18n: PropTypes.object,\n    d2: PropTypes.object,\n};\n\nconst mapDispatchToProps = dispatch => {\n    return {\n        setCurrentUser: currentUser => dispatch(acReceivedUser(currentUser)),\n        fetchDashboards: () => dispatch(tFetchDashboards()),\n        setControlBarRows: () => dispatch(tSetControlBarRows()),\n        setDimensions: d2 => dispatch(tSetDimensions(d2)),\n    };\n};\n\nexport default connect(\n    null,\n    mapDispatchToProps\n)(App);\n","import { RECEIVED_USER } from '../reducers/user';\n\nexport const acReceivedUser = value => ({\n    type: RECEIVED_USER,\n    value,\n});\n","//------------------------------------------------------------------------------\n// <auto-generated>\n// This code was generated by d2-i18n-generate.\n//\n// Changes to this file may cause incorrect behavior and will be lost if\n// the code is regenerated.\n// </auto-generated>\n//------------------------------------------------------------------------------\nimport i18n from '@dhis2/d2-i18n';\nimport moment from 'moment';\nimport 'moment/locale/lo';\nimport 'moment/locale/ru';\nimport 'moment/locale/sv';\nimport 'moment/locale/ur';\nimport 'moment/locale/vi';\n\nimport enTranslations from './en/translations.json';\nimport loTranslations from './lo/translations.json';\nimport ruTranslations from './ru/translations.json';\nimport svTranslations from './sv/translations.json';\nimport urTranslations from './ur/translations.json';\nimport viTranslations from './vi/translations.json';\n\nconst namespace = 'dashboards-app';\nmoment.locale('en');\n\ni18n.addResources('en', namespace, enTranslations);\ni18n.addResources('lo', namespace, loTranslations);\ni18n.addResources('ru', namespace, ruTranslations);\ni18n.addResources('sv', namespace, svTranslations);\ni18n.addResources('ur', namespace, urTranslations);\ni18n.addResources('vi', namespace, viTranslations);\n\ni18n.setDefaultNamespace(namespace);\ni18n.changeLanguage('en');\n\nexport default i18n;\n","/** @module reducers/selected */\nimport { validateReducer } from '../modules/util';\n\nexport const SET_STYLE = 'SET_STYLE';\n\nexport const DEFAULT_STATE_STYLE = 'LIST';\n\n/**\n * Reducer functions that computes and returns the new state based on the given action\n * @function\n * @param {Object} state The current state\n * @param {Object} action The action to be evaluated\n */\nconst style = (state = DEFAULT_STATE_STYLE, action) => {\n    switch (action.type) {\n        case SET_STYLE:\n            return validateReducer(action.value, DEFAULT_STATE_STYLE);\n        default:\n            return state;\n    }\n};\n\nexport default style;\n\n/**\n * Selectors that point to specific props in the state object\n * @function\n * @param {Object} state\n * @returns {Object}\n */\nexport const sGetStyleRoot = state => state.style;\n","import { combineReducers } from 'redux';\nimport arraySort from 'd2-utilizr/lib/arraySort';\n\nimport dashboards, { sGetDashboardsRoot } from './dashboards';\nimport selected from './selected';\nimport dashboardsFilter, {\n    ownerData,\n    sGetFilterName,\n    sGetFilterOrder,\n    sGetFilterOwner,\n} from './dashboardsFilter';\nimport controlBar from './controlBar';\nimport visualizations from './visualizations';\nimport editDashboard from './editDashboard';\nimport messages from './messages';\nimport user from './user';\nimport snackbar from './snackbar';\nimport itemFilters from './itemFilters';\nimport editItemFilters from './editItemFilters';\nimport style from './style';\nimport dimensions from './dimensions';\nimport settings from './settings';\nimport activeModalDimension from './activeModalDimension';\n\nconst USER = 'system';\n\n// Reducers\n\nexport default combineReducers({\n    dashboards,\n    selected,\n    dashboardsFilter,\n    controlBar,\n    visualizations,\n    messages,\n    user,\n    editDashboard,\n    itemFilters,\n    editItemFilters,\n    style,\n    snackbar,\n    dimensions,\n    settings,\n    activeModalDimension,\n});\n\n// Map constants to data\nconst mapConstToData = {\n    NAME: 'name',\n    ITEMS: 'numberOfItems',\n    CREATED: 'created',\n    OWNER: 'owner',\n};\n\n// Selectors\n\n// Filter dashboards by name\nexport const sFilterDashboardsByName = (dashboards, filter) =>\n    dashboards.filter(d =>\n        d.displayName.toLowerCase().includes(filter.toLowerCase())\n    );\n\n// Filter dashboards by owner, TODO FIXME\nexport const sFilterDashboardsByOwner = (dashboards, filter) => {\n    const ME = ownerData[1]; // TODO\n    const OTHERS = ownerData[2]; // TODO\n\n    switch (filter) {\n        case ME:\n            return dashboards.filter(d => d.owner === USER);\n        case OTHERS:\n            return dashboards.filter(d => d.owner !== USER);\n        default:\n            return dashboards;\n    }\n};\n\n// Filter dashboards by order\nexport const sFilterDashboardsByOrder = (dashboards, filter) => {\n    const filterValues = filter.split(':');\n\n    const key = filterValues[0];\n    const direction = filterValues[1];\n\n    return arraySort(dashboards, direction, mapConstToData[key]);\n};\n\n// Selectors dependency level 2\n\n// Get filtered dashboards\nexport const sGetFilteredDashboards = state => {\n    const dashboards = sGetDashboardsRoot(state);\n\n    const nameFilter = sGetFilterName(state);\n    const ownerFilter = sGetFilterOwner(state);\n    const orderFilter = sGetFilterOrder(state);\n\n    return sFilterDashboardsByOrder(\n        sFilterDashboardsByName(\n            sFilterDashboardsByOwner(dashboards, ownerFilter),\n            nameFilter\n        ),\n        orderFilter\n    );\n};\n","import { createStore, applyMiddleware, compose } from 'redux';\nimport { createLogger } from 'redux-logger';\nimport thunk from 'redux-thunk';\nimport reducer from './reducers';\n\nconst configureStore = () => {\n    const middleware = [thunk];\n\n    // Enable Redux devtools if extension is installed instead of redux-logger\n    const composeEnhancers =\n        window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\n    if (\n        !window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ &&\n        process.env.NODE_ENV !== 'production'\n    ) {\n        middleware.push(createLogger());\n    }\n\n    return createStore(\n        reducer,\n        composeEnhancers(applyMiddleware(...middleware))\n    );\n};\n\nexport default configureStore;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport { MuiThemeProvider, createMuiTheme } from '@material-ui/core/styles';\nimport { init as d2Init, config, getManifest, getUserSettings } from 'd2';\nimport dhis2theme from '@dhis2/d2-ui-core/theme/mui3.theme';\nimport { colors } from '@dhis2/ui-core';\n\n// temporary workaround until new ui headerbar is ready\nimport 'material-design-icons/iconfont/material-icons.css';\nimport './reset.css';\n\nimport App from './components/App';\nimport './index.css';\nimport i18n from './locales';\nimport configureStore from './configureStore';\n\n// small workaround until ui-core textarea is ready\ndhis2theme.palette.primary.dark = colors.teal600;\n\nconst muiTheme = () => createMuiTheme(dhis2theme);\n\nconst configI18n = userSettings => {\n    const uiLocale = userSettings.keyUiLocale;\n\n    if (uiLocale && uiLocale !== 'en') {\n        config.i18n.sources.add(`./i18n/i18n_module_${uiLocale}.properties`);\n    }\n\n    config.i18n.sources.add('./i18n/i18n_module_en.properties');\n    i18n.changeLanguage(uiLocale);\n};\n\nconst init = async () => {\n    const manifest = await getManifest('./manifest.webapp');\n\n    // log app info\n    console.info(\n        `Dashboards app, v${manifest.version}, ${\n            manifest.manifest_generated_at\n        }`\n    );\n\n    const isProd = process.env.NODE_ENV === 'production';\n\n    if (\n        !isProd &&\n        (!process.env.REACT_APP_DHIS2_BASE_URL ||\n            !process.env.REACT_APP_DHIS2_AUTHORIZATION)\n    ) {\n        throw new Error(\n            'Missing env variables REACT_APP_DHIS2_BASE_URL and REACT_APP_DHIS2_AUTHORIZATION'\n        );\n    }\n\n    // api config\n    const baseUrl = isProd\n        ? manifest.activities.dhis.href\n        : process.env.REACT_APP_DHIS2_BASE_URL;\n    const authorization = process.env.REACT_APP_DHIS2_AUTHORIZATION;\n\n    config.baseUrl = `${baseUrl}/api/${manifest.dhis2.apiVersion}`;\n    config.headers = isProd ? null : { Authorization: authorization };\n    config.schemas = [\n        'chart',\n        'map',\n        'report',\n        'reportTable',\n        'eventChart',\n        'eventReport',\n        'dashboard',\n        'organisationUnit',\n        'userGroup',\n    ];\n\n    getUserSettings()\n        .then(configI18n)\n        .then(() => d2Init(config))\n        .then(initializedD2 => {\n            ReactDOM.render(\n                <Provider store={configureStore()}>\n                    <MuiThemeProvider theme={muiTheme()}>\n                        <App baseUrl={baseUrl} d2={initializedD2} />\n                    </MuiThemeProvider>\n                </Provider>,\n                document.getElementById('root')\n            );\n        });\n};\n\ninit();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"leftControls\":\"DashboardsBar_leftControls__2kr14\",\"rightControls\":\"DashboardsBar_rightControls__2l1lT\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"menuItem\":\"ContentMenuItem_menuItem__2DIcB\",\"launchLink\":\"ContentMenuItem_launchLink__MRANR\",\"label\":\"ContentMenuItem_label__2pIfq\",\"buttonInsert\":\"ContentMenuItem_buttonInsert__1GlZy\"};","import isObject from 'lodash/isObject';\n\n// validation\nexport function orNull(param) {\n    return param === undefined ? null : param;\n}\n\nexport function orArray(param) {\n    return Array.isArray(param) ? param : [];\n}\n\nexport function orObject(param) {\n    return isObject(param) ? param : {};\n}\n\n// array\nexport function arrayGetById(array, id) {\n    return array.find(item => item.id === id);\n}\n\n// object\nexport function arrayToIdMap(array) {\n    return array.reduce((obj, item) => {\n        obj[item.id] = item;\n        return obj;\n    }, {});\n}\n\n// date\nexport function getDate() {\n    const y = Math.floor(Math.random() * 3) + 2015;\n    const M = Math.floor(Math.random() * 12) + 1;\n    const d = Math.floor(Math.random() * 28) + 1;\n    // const h = Math.floor(Math.random() * 23) + 1;\n    // const m = Math.floor(Math.random() * 59) + 1;\n    // const s = Math.floor(Math.random() * 59) + 1;\n\n    return new Date(`${y}-${M}-${d}`)\n        .toJSON()\n        .replace('T', ' ')\n        .substr(0, 10);\n}\n\nexport const formatDate = (value, uiLocale) => {\n    if (typeof global.Intl !== 'undefined' && Intl.DateTimeFormat) {\n        const locale = uiLocale || 'en';\n        return new Intl.DateTimeFormat(locale, {\n            year: 'numeric',\n            month: 'short',\n            day: 'numeric',\n        }).format(new Date(value));\n    }\n\n    return value.substr(0, 19).replace('T', ' ');\n};\n\n/**\n * Sorts an array of objects based on provided date property\n *\n * @param {Array} items Array of objects\n * @param {String} dateProp Name of the date property to be used for sorting\n * @param {Boolean} ascending Whether to sort ascending or descending\n */\nexport const sortByDate = (items, dateProp, ascending = true) => {\n    const values = Object.values(items);\n\n    values.sort((a, b) => {\n        const aDate = new Date(a[dateProp]);\n        const bDate = new Date(b[dateProp]);\n\n        return ascending ? aDate - bDate : bDate - aDate;\n    });\n\n    return values;\n};\n\n// reducer validator\nexport const validateReducer = (value, defaultValue) =>\n    value === undefined || value === null ? defaultValue : value;\n\nexport const getBaseUrl = d2 => {\n    const api = d2.Api.getApi();\n    const idx = api.baseUrl.indexOf('/api');\n    return idx > -1 ? api.baseUrl.slice(0, idx) : api.baseUrl;\n};\n\nexport const getWithoutId = object => ({\n    ...object,\n    id: undefined,\n});\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"ControlBar_root__3LaTt\",\"content\":\"ControlBar_content__1r98-\",\"draghandle\":\"ControlBar_draghandle__1VWa0\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"ClearButton_button__2yjcV\",\"icon\":\"ClearButton_icon__1fqj8\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"showMoreButton\":\"CategorizedMenuGroup_showMoreButton__3-0Wa\"};","import i18n from '@dhis2/d2-i18n';\nimport TableIcon from '@material-ui/icons/ViewList';\nimport ChartIcon from '@material-ui/icons/InsertChart';\nimport MapIcon from '@material-ui/icons/Public';\nimport ExtensionIcon from '@material-ui/icons/Extension';\nimport DescriptionIcon from '@material-ui/icons/Description';\nimport PersonIcon from '@material-ui/icons/Person';\nimport FontDownloadIcon from '@material-ui/icons/FontDownload';\nimport EmailIcon from '@material-ui/icons/Email';\nimport CropFreeIcon from '@material-ui/icons/CropFree';\nimport NotInterestedIcon from '@material-ui/icons/NotInterested';\n\nimport { getBaseUrl } from './util';\n\n// Item types\nexport const REPORT_TABLE = 'REPORT_TABLE';\nexport const CHART = 'CHART';\nexport const MAP = 'MAP';\nexport const EVENT_REPORT = 'EVENT_REPORT';\nexport const EVENT_CHART = 'EVENT_CHART';\nexport const APP = 'APP';\nexport const REPORTS = 'REPORTS';\nexport const RESOURCES = 'RESOURCES';\nexport const USERS = 'USERS';\nexport const MESSAGES = 'MESSAGES';\nexport const TEXT = 'TEXT';\nexport const SPACER = 'SPACER';\n\n// Domain types\nexport const DOMAIN_TYPE_AGGREGATE = 'AGGREGATE';\nexport const DOMAIN_TYPE_TRACKER = 'TRACKER';\n\n// Visualization types\nexport const VISUALIZATION_TYPE_TABLE = 'TABLE';\nexport const VISUALIZATION_TYPE_CHART = 'CHART';\nexport const VISUALIZATION_TYPE_MAP = 'MAP';\n\n// TODO: Import this from @dhis2/analytics when available\nexport const CHART_TYPE_SINGLE_VALUE = 'SINGLE_VALUE';\n\n// Dashboard helpers\nexport const spacerContent = 'SPACER_ITEM_FOR_DASHBOARD_LAYOUT_CONVENIENCE';\nexport const emptyTextItemContent = 'TEXT_ITEM_WITH_NO_CONTENT';\nexport const isSpacerType = item =>\n    item.type === TEXT && item.text === spacerContent;\nexport const isTextType = item =>\n    item.type === TEXT && item.text !== spacerContent;\nexport const isPluginType = item =>\n    itemTypeMap[item.type].hasOwnProperty('plugin');\n\nexport const getPlugin = type => {\n    const pluginName = itemTypeMap[type].plugin;\n\n    if (type === CHART) {\n        return true;\n    }\n\n    return global[pluginName];\n};\n\n// Item type map\nexport const itemTypeMap = {\n    [REPORT_TABLE]: {\n        id: REPORT_TABLE,\n        endPointName: 'reportTables',\n        propName: 'reportTable',\n        pluralTitle: i18n.t('Pivot tables'),\n        plugin: 'reportTablePlugin',\n        domainType: DOMAIN_TYPE_AGGREGATE,\n        visualizationType: VISUALIZATION_TYPE_TABLE,\n        appUrl: id => `dhis-web-pivot/?id=${id}`,\n        appName: i18n.t('Pivot Tables'),\n    },\n    [CHART]: {\n        id: CHART,\n        endPointName: 'charts',\n        propName: 'chart',\n        pluralTitle: i18n.t('Charts'),\n        plugin: 'chartPlugin',\n        domainType: DOMAIN_TYPE_AGGREGATE,\n        visualizationType: VISUALIZATION_TYPE_CHART,\n        appUrl: id => `dhis-web-data-visualizer/#/${id}`,\n        appName: i18n.t('Visualizer'),\n    },\n    [MAP]: {\n        id: MAP,\n        endPointName: 'maps',\n        propName: 'map',\n        pluralTitle: i18n.t('Maps'),\n        plugin: 'mapPlugin',\n        domainType: DOMAIN_TYPE_AGGREGATE,\n        visualizationType: VISUALIZATION_TYPE_MAP,\n        appUrl: id => `dhis-web-maps/?id=${id}`,\n        appName: i18n.t('Maps'),\n    },\n    [EVENT_REPORT]: {\n        id: EVENT_REPORT,\n        endPointName: 'eventReports',\n        propName: 'eventReport',\n        pluralTitle: i18n.t('Event reports'),\n        plugin: 'eventReportPlugin',\n        domainType: DOMAIN_TYPE_TRACKER,\n        visualizationType: VISUALIZATION_TYPE_TABLE,\n        appUrl: id => `dhis-web-event-reports/?id=${id}`,\n        appName: i18n.t('Event Reports'),\n    },\n    [EVENT_CHART]: {\n        id: EVENT_CHART,\n        endPointName: 'eventCharts',\n        propName: 'eventChart',\n        pluralTitle: i18n.t('Event charts'),\n        plugin: 'eventChartPlugin',\n        domainType: DOMAIN_TYPE_TRACKER,\n        visualizationType: VISUALIZATION_TYPE_CHART,\n        appUrl: id => `dhis-web-event-visualizer/?id=${id}`,\n        appName: i18n.t('Event Visualizer'),\n    },\n    [APP]: {\n        endPointName: 'apps',\n        propName: 'appKey',\n        pluralTitle: i18n.t('Apps'),\n    },\n    [REPORTS]: {\n        id: REPORTS,\n        endPointName: 'reports',\n        propName: 'reports',\n        pluralTitle: i18n.t('Reports'),\n        appUrl: id =>\n            `dhis-web-reporting/getReportParams.action?mode=report&uid=${id}`,\n    },\n    [RESOURCES]: {\n        id: RESOURCES,\n        endPointName: 'resources',\n        propName: 'resources',\n        pluralTitle: i18n.t('Resources'),\n        appUrl: id => `api/documents/${id}/data`,\n    },\n    [USERS]: {\n        id: USERS,\n        endPointName: 'users',\n        propName: 'users',\n        pluralTitle: i18n.t('Users'),\n        appUrl: id => `dhis-web-dashboard-integration/profile.action?id=${id}`,\n    },\n    [TEXT]: {\n        id: TEXT,\n        propName: 'text',\n    },\n    [MESSAGES]: {\n        propName: 'messages',\n    },\n    [SPACER]: {\n        propName: 'text',\n    },\n};\n\nexport const getEndPointName = type => itemTypeMap[type].endPointName;\n\nexport const getItemUrl = (type, item, d2) => {\n    let url;\n\n    if (type === APP) {\n        url = item.launchUrl;\n    }\n\n    if (itemTypeMap[type] && itemTypeMap[type].appUrl) {\n        url = `${getBaseUrl(d2)}/${itemTypeMap[type].appUrl(item.id)}`;\n    }\n\n    return url;\n};\n\nexport const getItemIcon = type => {\n    switch (type) {\n        case REPORT_TABLE:\n        case EVENT_REPORT:\n        case REPORTS:\n            return TableIcon;\n        case CHART:\n        case EVENT_CHART:\n            return ChartIcon;\n        case MAP:\n            return MapIcon;\n        case APP:\n            return ExtensionIcon;\n        case RESOURCES:\n            return DescriptionIcon;\n        case USERS:\n            return PersonIcon;\n        case TEXT:\n            return FontDownloadIcon;\n        case MESSAGES:\n            return EmailIcon;\n        case SPACER:\n            return CropFreeIcon;\n        default:\n            return NotInterestedIcon;\n    }\n};\n"],"sourceRoot":""}
{"version":3,"sources":["modules/itemTypes.js","components/Item/ListItem/Item.module.css","components/ControlBar/styles/DashboardsBar.module.css","components/ItemSelector/styles/ContentMenuItem.module.css","modules/util.js","reducers/user.js","reducers/dashboards.js","reducers/selected.js","reducers/visualizations.js","api/metadata.js","api/index.js","api/dashboards.js","components/ItemGrid/gridUtil.js","reducers/messages.js","api/messages.js","reducers/snackbar.js","actions/snackbar.js","components/SnackbarMessage/SnackbarMessage.js","components/Item/VisualizationItem/plugin.js","actions/selected.js","api/localStorage.js","components/Item/MessagesItem/actions.js","reducers/editDashboard.js","reducers/editItemFilters.js","reducers/itemFilters.js","actions/itemFilters.js","actions/editItemFilters.js","api/editDashboard.js","actions/editDashboard.js","actions/dashboards.js","reducers/controlBar.js","api/controlBar.js","actions/controlBar.js","reducers/dimensions.js","reducers/settings.js","actions/dimensions.js","components/ControlBar/ShowMoreButton.js","components/ControlBar/controlBarDimensions.js","components/ControlBar/ControlBar.js","icons/Star.js","api/dataStatistics.js","components/ControlBar/DashboardItemChip.js","icons/AddCircle.js","icons/Clear.js","components/ControlBar/ClearButton.js","reducers/dashboardsFilter.js","components/ControlBar/Filter.js","components/ControlBar/DashboardsBar.js","actions/dashboardsFilter.js","components/Dashboard/DashboardVerticalOffset.js","components/ItemSelector/HeaderMenuItem.js","icons/Launch.js","components/ItemSelector/ContentMenuItem.js","components/ItemSelector/selectableItems.js","components/ItemSelector/CategorizedMenuGroup.js","components/ItemSelector/actions.js","components/ItemSelector/SinglesMenuGroup.js","components/ItemSelector/ItemSelector.js","components/TitleBar/EditTitleBar.js","components/ItemFilter/FilterDialog.js","reducers/activeModalDimension.js","actions/activeModalDimension.js","components/ItemFilter/FilterSelector.js","components/TitleBar/Info.js","components/TitleBar/ViewTitleBar.js","components/TitleBar/TitleBar.js","components/Item/VisualizationItem/DefaultPlugin.js","components/Item/ItemHeader.js","components/Item/VisualizationItem/ItemFooter.js","components/Item/ItemHeaderButton.js","components/Item/VisualizationItem/ItemHeaderButtons.js","modules/memoizeOne.js","components/Item/VisualizationItem/Item.js","widgets/Line.js","components/Item/MessagesItem/Item.js","components/Item/NotSupportedItem/Item.js","icons/Description.js","icons/Delete.js","components/Item/ListItem/Item.js","components/Item/ListItem/actions.js","components/Item/TextItem/Item.js","components/Item/AppItem/Item.js","components/Item/SpacerItem/Item.js","components/Item/Item.js","components/ItemGrid/DeleteItemButton.js","widgets/NoContentMessage.js","components/Item/ProgressiveLoadingContainer.js","components/ItemGrid/ItemGrid.js","components/FilterBar/FilterBadge.js","components/FilterBar/FilterBar.js","components/Dashboard/DashboardContent.js","components/Dashboard/ViewDashboard.js","components/ControlBar/ConfirmDeleteDialog.js","components/ControlBar/EditBar.js","components/Dashboard/EditDashboard.js","components/Dashboard/NewDashboard.js","components/Dashboard/Dashboard.js","components/Dashboard/dashboardModes.js","components/App.js","actions/user.js","locales/index.js","reducers/style.js","reducers/index.js","configureStore.js","index.js","components/ControlBar/styles/ControlBar.module.css","components/ControlBar/styles/ClearButton.module.css","components/ItemSelector/styles/CategorizedMenuGroup.module.css"],"names":["REPORT_TABLE","CHART","MAP","EVENT_REPORT","EVENT_CHART","APP","REPORTS","RESOURCES","USERS","MESSAGES","TEXT","SPACER","DOMAIN_TYPE_AGGREGATE","VISUALIZATION_TYPE_TABLE","VISUALIZATION_TYPE_CHART","VISUALIZATION_TYPE_MAP","CHART_TYPE_SINGLE_VALUE","spacerContent","emptyTextItemContent","isSpacerType","item","type","text","isTextType","isPluginType","itemTypeMap","hasOwnProperty","getPlugin","pluginName","plugin","global","_itemTypeMap","Object","_home_travis_build_dhis2_dashboards_app_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_defineProperty__WEBPACK_IMPORTED_MODULE_0__","id","endPointName","propName","pluralTitle","i18n","t","domainType","visualizationType","appUrl","concat","appName","Function","prototype","getEndPointName","getItemUrl","d2","url","launchUrl","getBaseUrl","getItemIcon","TableIcon","ChartIcon","MapIcon","ExtensionIcon","DescriptionIcon","PersonIcon","FontDownloadIcon","EmailIcon","CropFreeIcon","NotInterestedIcon","module","exports","list","itemicon","link","deleteicon","deletebutton","leftControls","rightControls","menuItem","launchLink","label","buttonInsert","orArray","param","Array","isArray","orObject","isObject","arrayToIdMap","array","reduce","obj","formatDate","value","uiLocale","Intl","DateTimeFormat","locale","year","month","day","format","Date","substr","replace","validateReducer","defaultValue","undefined","api","Api","getApi","idx","baseUrl","indexOf","slice","getWithoutId","object","_home_travis_build_dhis2_dashboards_app_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectSpread__WEBPACK_IMPORTED_MODULE_0__","DEFAULT_STATE_USER","username","isSuperuser","sGetUserUsername","state","user","DEFAULT_STATE_DASHBOARDS","byId","items","updateDashboardProp","dashboardId","prop","objectSpread","defineProperty","sGetDashboardsRoot","dashboards","sGetDashboardById","sDashboardsIsFetching","sGetAllDashboards","sGetDashboardItems","sGetStarredDashboards","values","filter","dashboard","starred","sGetUnstarredDashboards","sGetDashboardsSortedByStarred","toConsumableArray","arraySort","getCustomDashboards","data","arrayFrom","map","d","index","name","displayName","description","displayDescription","favorite","owner","created","split","join","lastUpdated","access","numberOfItems","dashboardItems","length","combineReducers","arguments","action","isLoading","showDescription","sGetSelectedRoot","selected","sGetSelectedId","sGetSelectedIsLoading","sGetSelectedShowDescription","DEFAULT_STATE_VISUALIZATIONS","isEmpty","p","sGetVisualization","visualizations","sGetVisualizationsRoot","getIdNameFields","rename","getDimensionFields","_ref2","withItems","arrayClean","getAxesFields","_ref3","getFavoriteFields","_ref4","withDimensions","withOptions","getFavoritesFields","_ref5","apiFetchFavorite","_ref6","fields","getInstance","then","get","onError","error","console","log","getDashboardItemsFields","withFavorite","getDashboardFields","apiFetchDashboard","models","catch","apiStarDashboard","isStarred","post","delete","apiDeleteDashboard","MARGIN","NEW_ITEM_SHAPE","x","y","w","h","isNonNegativeInteger","Number","isInteger","hasShape","withShape","itemWithShape","assign","i","Error","col","row","Math","floor","itemWidth","GRID_ROW_HEIGHT","getShape","originalHeight","round","max","getOriginalHeight","getGridItemDomId","onItemResize","el","document","querySelector","isFunction","setViewportSize","setTimeout","clientWidth","clientHeight","sGetMessagesRoot","messages","getMessages","DEFAULT_STATE_SNACKBAR","message","duration","open","acCloseSnackbar","loadingDashboardMsg","SnackbarMessageContent","_ref","react_default","a","createElement","style","fontWeight","connect","_sGetSnackbar","snackbar","sGetSnackbar","snackbarOpen","snackbarMessage","snackbarDuration","onCloseSnackbar","props","Snackbar_default","zIndex","SnackbarMessage_SnackbarMessageContent","autoHideDuration","onClose","pluginIsAvailable","activeType","extractFavorite","reportTable","chart","eventReport","eventChart","loadPlugin","config","credentials","load","loadingIndicator","auth","getId","getName","getLink","asyncToGenerator","regenerator_default","mark","_callee","visualization","_args","wrap","_context","prev","next","stop","_x","_x2","_x3","_x4","apply","this","fetch","_callee2","fetchedFavorite","_context2","sent","abrupt","_x5","resize","unmount","getVisualizationConfig","originalType","extractedMapView","mapViews","find","mv","layer","includes","acSetSelectedId","acSetSelectedIsLoading","acReceivedVisualization","tLoadDashboard","dispatch","getState","dash","acAppendDashboards","Promise","resolve","t0","tSetSelectedDashboardById","snackbarTimeout","onSuccess","dashboardName","customDashboard","acSetDashboardItems","localStorage","setItem","forEach","messageConversations","clearTimeout","DEFAULT_STATE_EDIT_DASHBOARD","NEW_DASHBOARD_STATE","sGetEditDashboardRoot","editDashboard","sGetIsEditing","sGetEditDashboardItems","DEFAULT_STATE_EDIT_ITEM_FILTERS","sGetEditItemFiltersRoot","editItemFilters","DEFAULT_STATE_ITEM_FILTERS","sGetItemFiltersRoot","itemFilters","sGetFiltersKeys","keys","acRemoveItemFilter","acRemoveEditItemFilter","saveDashboard","width","height","save","msg","response","uid","updateDashboard","postDashboard","create","acAddDashboardItem","itemPropName","generateUid","content","acUpdateDashboardItem","acRemoveDashboardItem","acSetDashboardStarred","tFetchDashboards","collection","paging","toArray","userRows","sGetControlBarUserRows","controlBar","sGetControlBarRoot","KEY","hasNamespace","currentUser","dataStore","has","getNamespace","apiGetControlBarRows","_callee3","namespace","_context3","t1","t2","key","apiPostControlBarRows","_callee4","rows","_context4","set","acSetControlBarUserRows","getDefaultDimensions","FIXED_DIMENSIONS","dimId","pe","ou","acc","iconName","sGetDimensions","dimensions","DEFAULT_SETTINGS","keyDateFormat","keyAnalysisRelativePeriod","keyAnalysisDigitGroupSeparator","displayNameProperty","rootOrganisationUnit","sGetSettings","settings","sGetSettingsDisplayNameProperty","acSetDimensions","keyBy","sortBy","toLowerCase","styles","showMore","color","colors","grey700","cursor","fontSize","paddingTop","&:hover","textDecoration","disabled","grey500","withStyles","onClick","isMaxHeight","classes","textAlign","className","MIN_ROW_COUNT","getRowsHeight","getNumRowsFromHeight","FIRST_ROW_PADDING_HEIGHT","getTopOffset","getControlBarHeight","ControlBar","_this","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","onStartDrag","setState","dragging","window","addEventListener","onDrag","onEndDrag","event","preventDefault","stopPropagation","newHeight","clientY","onChangeHeight","requestAnimationFrame","removeEventListener","draghandle","onMouseDown","rootStyle","top","backgroundColor","editMode","yellow050","white","paddingBottom","transition","root","children","renderDragHandle","React","Component","defaultProps","StarIcon","xmlns","viewBox","fill","apiPostDataStatistics","eventType","chip","margin","grey600","display","verticalAlign","icon","marginTop","unselected","chipProps","selectedState","Star","Link","to","debounce","Chip","AddCircleIcon","teal600","ClearIcon","grey800","ClearButton","onClear","button","Clear","ownerData","DEFAULT_STATE_DASHBOARDS_FILTER_NAME","DEFAULT_STATE_DASHBOARDS_FILTER_OWNER","order","sGetDashboardsFilterRoot","dashboardsFilter","sGetFilterName","KEYCODE_ENTER","KEYCODE_ESCAPE","filterField","searchIcon","Filter","_Component","setFilterValue","onChangeName","target","handleKeyUp","keyCode","onKeypressEnter","inherits","createClass","nextProps","_this$props","startAdornment","InputAdornment_default","position","Search_default","endAdornment","ControlBar_ClearButton","Input_default","placeholder","onChange","onKeyUp","MAX_ROW_COUNT","DashboardsBar","_getPrototypeOf2","_len","args","_key","setInitialDashboardState","adjustedHeight","newRows","newRowCount","min","onToggleMaxHeight","onSelectDashboard","history","push","selectedId","onChangeFilterName","rowCount","controlBarHeight","contentWrapperStyle","padding","overflowY","components_ControlBar_ControlBar","marginRight","AddCircle","ControlBar_Filter","ControlBar_DashboardItemChip","ControlBar_ShowMoreButton","mapDispatchToProps","withRouter","stateProps","dispatchProps","ownProps","displayDashboards","HeaderMenuItem","title","MenuItem","dense","LaunchIcon","LaunchLink","e","rel","href","Launch","InsertButton","ContentMenuItem","onInsert","ItemIcon","ContentMenuItem_LaunchLink","ContentMenuItem_InsertButton","singleItems","header","categorizedItems","listItemTypes","CategorizedMenuGroup","addItem","tAddListItemContent","newItem","toggleSeeMore","seeMore","onChangeItemsLimit","_this2","_this$props2","hasMore","react","ItemSelector_HeaderMenuItem","itemUrl","context","ItemSelector_ContentMenuItem","showMoreButton","Divider","contextTypes","PropTypes","isRequired","dashboardItem","listItemType","dashboardItemIndex","findIndex","category","addToDashboard","ItemSearchField","InputField","filled","onFocus","ItemSelector","closeList","openList","fetchItems","anchorEl","currentTarget","setFilter","getCategorizedMenuGroups","itemType","allItems","maxOptions","ItemSelector_CategorizedMenuGroup","getSinglesMenuGroups","ItemSelector_SinglesMenuGroup","getMenuGroups","queryString","add","Set","ItemSelector_ItemSearchField","Popover_default","anchorOrigin","horizontal","vertical","transformOrigin","PaperProps","disableAutoFocus","disableRestoreFocus","Menu","EditTitleBar","onChangeTitle","onChangeDescription","section","titleDescription","TextField_default","variant","multiline","InputProps","input","underline","itemSelector","components_ItemSelector_ItemSelector","selectedDashboard","justifyContent","flex","clear","&::before","borderBottom","&:hover::before","borderRadius","peId","ouId","FilterDialog","onConfirm","dimension","selectedItems","dialogId","commonProps","onSelect","onDeselect","onReorder","build","selectedPeriods","ouItems","dialogTitle","Dialog_default","maxWidth","disableEnforceFocus","dialogContent","DialogActions_default","Button","kind","DEFAULT_STATE_ACTIVE_MODAL_DIMENSION","sGetActiveModalDimension","activeModalDimension","acSetActiveModalDimension","FilterSelector","openPanel","closePanel","closeDialog","clearActiveModalDimension","selectDimension","setActiveModalDimension","onSelectItems","dimensionId","setEditItemFilters","onDeselectItems","itemIdsToRemove","newList","removeEditItemFilter","onReorderItems","itemIds","oldList","reorderedList","saveFilter","filterItems","addItemFilter","removeItemFilter","theme","selectedDimensions","ArrowDropDown_default","Boolean","fontFamily","typography","onDimensionClick","selectedIds","ItemFilter_FilterDialog","filters","withTheme","Info","show","toggle","InfoOutlined_default","actions","alignItems","marginLeft","starIcon","textButton","minWidth","editLink","titleBar","titleBarIcon","ViewTitleBar","toggleSharingDialog","sharingDialogIsOpen","onStarClick","onInfoClick","titleStyle","userSelect","StarBorder","TitleBar_Info","update","manage","ItemFilter_FilterSelector","d2_ui_sharing_dialog_default","onRequestClose","tStarDashboard","black","TitleBar","edit","TitleBar_EditTitleBar","TitleBar_ViewTitleBar","DefaultPlugin","pluginCredentials","shouldPluginReload","prevProps","reloadAllowed","filtersChanged","vis","prevVis","visChanged","reloadPlugin","pluginManager","currentVis","useActiveType","getActiveType","defaultHeaders","Authorization","textDiv","HEADER_HEIGHT","ItemHeader","actionButtons","scrollContainer","line","border","grey100","ItemFooter","objectId","d2_ui_interpretations_default","ItemHeaderButton","iconBase","buttonBase","buttonDisabled","opacity","toggleFooterPadding","grey200","baseStyle","container","disabledStyle","activeStyle","primary800","primary100","inactiveStyle","getItemTypeId","VisualizationItemHeaderButtons","activeFooter","onToggleFooter","toggleFooterBase","toggleFooter","components_Item_ItemHeaderButton","Message_default","chartType","onSelectVisualization","match","tableButtonStyle","tableBtnStyle","chartButtonStyle","chartBtnStyle","mapButtonStyle","mapBtnStyle","ViewList_default","InsertChart_default","Public_default","renderInterpretationButton","renderVisualizationButtons","memoizeOne","fn","lastArgs","lastValue","every","arg","overflow","textOverflow","whiteSpace","fontStretch","lineHeight","applyFilters","visRows","visColumns","columns","visFilters","dimensionFound","dimensionObjects","Item","showFooter","configLoaded","getUniqueKey","uniqueId","getPluginComponent","getContentStyle","data_visualizer_plugin_build","forDashboard","VisualizationItem_DefaultPlugin","onToggleItemExpanded","getTitle","itemName","Launch_default","getActionButtons","ItemHeaderButtons","contentRef","offsetHeight","createRef","_componentDidMount","onVisualizationLoaded","_this$props3","Item_ItemHeader","ref","VisualizationItem_ItemFooter","acReceivedActiveVisualization","Line","PRIVATE","messageTypes","_messageTypes","listStyleType","paddingLeft","seeAll","marginBottom","sender","snippet","maxHeight","MessagesItem","getMessageHref","msgIdentifier","messageType","getMessageSender","latestMsg","getMessageItems","editClass","readClass","read","msgDate","location","messageCount","userSettings","widgets_Line","string","MessagesContainer","NotSupportedItem","NotInterested_default","align","DeleteIcon","red500","getItemTitle","removeContent","handler","contentToRemove","ListItem","tRemoveListItemContent","contentItems","getContentItems","contentItem","Description","deleteButton","Delete","grey900","newContent","textField","onChangeText","updatedItem","d2_ui_rich_text","onEdit","fullWidth","textDivStyle","viewItem","getIframeSrc","appDetails","iframeSrc","ouIds","ouPath","AppItem","appKey","system","installedApps","app","src","SpacerItem","GridItem","VisualizationItem","TextItem","getGridItem","right","DeleteItemHeaderButton","Delete_default","NoContentMessage","ProgressiveLoadingContainer","shouldLoad","containerRef","shouldLoadHandler","bufferPx","bufferFactor","innerHeight","rect","getBoundingClientRect","bottom","removeHandler","checkShouldLoad","debounceMs","registerHandler","_this3","objectWithoutProperties","ItemGrid","expandedItems","clickedId","isExpanded","onRemoveItem","onLayoutChange","newLayout","acUpdateDashboardLayout","onResizeStop","layout","oldItem","pluginResize","onRemoveItemWrapper","widgets_NoContentMessage","expandedItem","hProp","minH","ScreenCover","CircularProgress","react_grid_layout_default","cols","rowHeight","innerWidth","compactType","isDraggable","isResizable","draggableCancel","itemClassNames","Item_ProgressiveLoadingContainer","DeleteItemButton","Item_Item_Item","validItems","badgeContainer","badge","badgeRemove","FilterBadge","onRemove","count","FilterBar","onBadgeRemove","onBadgeClick","bar","FilterBar_FilterBadge","removeItemFIlter","filtersSelector","createSelector","arr","flexWrap","DashboardContent","components_TitleBar_TitleBar","components_FilterBar_FilterBar","components_ItemGrid_ItemGrid","Content","hasDashboardContent","dashboardsIsEmpty","Dashboard_DashboardContent","dashboardsLoaded","contentNotReady","ControlBar_DashboardsBar","Dashboard_DashboardVerticalOffset","ViewDashboard_Content","ConfirmDeleteDialog","onDeleteConfirmed","onContinueEditing","secondary","destructive","DialogTitle_default","DialogContent_default","DialogContentText_default","buttonBarStyle","EditBar","translationDialogIsOpen","dashboardModel","confirmDeleteDialogOpen","redirectUrl","onConfirmDelete","onSave","newId","onDiscard","onDiscardChanges","onDelete","onTranslationsSaved","translations","dbLocale","translation","property","onTranslate","fetchDashboardModel","toggleTranslationDialog","confirmDeleteDialog","deleteAccess","ControlBar_ConfirmDeleteDialog","translationDialog","d2_ui_translation_dialog_default","objectToTranslate","fieldsToTranslate","onTranslationSaved","onTranslationError","err","Redirect","updateAccess","discardBtnText","primary","sGetIsNewDashboard","dashboardToSave","_x6","_x7","tDeleteDashboard","acSetDashboardDisplayName","EditDashboard","initialized","initEditDashboard","setEditDashboard","getDashboardContent","EditDashboard_Content","ControlBar_EditBar","NewDashboard","setNewDashboard","Dashboard","setDashboard","params","selectDashboard","scrollToTop","scrollTo","mode","Dashboard_EditDashboard","Dashboard_NewDashboard","Dashboard_ViewDashboard","dashboardToSelect","preferredId","getItem","App","setCurrentUser","fetchDashboards","setControlBarRows","setDimensions","HeaderBar_default","HashRouter","Switch","Route","exact","path","render","components_Dashboard_Dashboard","components_SnackbarMessage_SnackbarMessage","childContextTypes","controlBarRows","displayNameProp","filteredDimensions","apiFetchDimensions","dim","dimensionType","dataDimensionType","tSetDimensions","moment","addResources","arTranslations","ar_IQTranslations","daTranslations","enTranslations","esTranslations","frTranslations","idTranslations","kmTranslations","loTranslations","myTranslations","nbTranslations","prsTranslations","psTranslations","ptTranslations","pt_BRTranslations","ruTranslations","svTranslations","tetTranslations","tgTranslations","ukTranslations","urTranslations","viTranslations","zhTranslations","zh_CNTranslations","setDefaultNamespace","changeLanguage","objectClean","conversations","$merge","d2Object","keyUiLocale","authorities","newState","k","$unshift","idToRemove","$splice","stateItems","newStateItems","stateItem","si","$set","configureStore","middleware","thunk","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","createStore","reducer","applyMiddleware","dhis2theme","palette","dark","configI18n","sources","manifest","isProd","getManifest","info","version","manifest_generated_at","process","activities","dhis","dhis2","apiVersion","headers","schemas","getUserSettings","d2Init","initializedD2","ReactDOM","es","store","createMuiTheme","src_components_App","getElementById","init"],"mappings":"i3jEAeaA,EAAe,eACfC,EAAQ,QACRC,EAAM,MACNC,EAAe,eACfC,EAAc,cACdC,EAAM,MACNC,EAAU,UACVC,EAAY,YACZC,EAAQ,QACRC,EAAW,WACXC,EAAO,OACPC,EAAS,SAGTC,EAAwB,YAIxBC,EAA2B,QAC3BC,EAA2B,QAC3BC,EAAyB,MAGzBC,EAA0B,eAG1BC,EAAgB,+CAChBC,EAAuB,4BACvBC,EAAe,SAAAC,GAAI,OAC5BA,EAAKC,OAASX,GAAQU,EAAKE,OAASL,GAC3BM,EAAa,SAAAH,GAAI,OAC1BA,EAAKC,OAASX,GAAQU,EAAKE,OAASL,GAC3BO,EAAe,SAAAJ,GAAI,OAC5BK,EAAYL,EAAKC,MAAMK,eAAe,WAE7BC,EAAY,SAAAN,GACrB,IAAMO,EAAaH,EAAYJ,GAAMQ,OAErC,OAAIR,IAASpB,GAIN6B,EAAOF,IAILH,GAAWM,EAAA,GAAAC,OAAAC,EAAA,EAAAD,CAAAD,EACnB/B,EAAe,CACZkC,GAAIlC,EACJmC,aAAc,eACdC,SAAU,cACVC,YAAa,kBAAMC,IAAKC,EAAE,iBAC1BV,OAAQ,oBACRW,WAAY5B,EACZ6B,kBAAmB5B,EACnB6B,OAAQ,SAAAR,GAAE,4BAAAS,OAA0BT,IACpCU,QAAS,kBAAMN,IAAKC,EAAE,mBAVNP,OAAAC,EAAA,EAAAD,CAAAD,EAYnB9B,EAAQ,CACLiC,GAAIjC,EACJkC,aAAc,SACdC,SAAU,QACVC,YAAa,kBAAMC,IAAKC,EAAE,WAC1BV,OAAQ,cACRW,WAAY5B,EACZ6B,kBAAmB3B,EACnB4B,OAAQ,SAAAR,GAAE,oCAAAS,OAAkCT,IAC5CU,QAAS,kBAAMN,IAAKC,EAAE,iBArBNP,OAAAC,EAAA,EAAAD,CAAAD,EAuBnB7B,EAAM,CACHgC,GAAIhC,EACJiC,aAAc,OACdC,SAAU,MACVC,YAAa,kBAAMC,IAAKC,EAAE,SAC1BV,OAAQ,YACRW,WAAY5B,EACZ6B,kBAAmB1B,EACnB2B,OAAQ,SAAAR,GAAE,2BAAAS,OAAyBT,IACnCU,QAAS,kBAAMN,IAAKC,EAAE,WAhCNP,OAAAC,EAAA,EAAAD,CAAAD,EAkCnB5B,EAAe,CACZ+B,GAAI/B,EACJgC,aAAc,eACdC,SAAU,cACVC,YAAa,kBAAMC,IAAKC,EAAE,kBAC1BV,OAAQ,oBACRW,WAvE2B,UAwE3BC,kBAAmB5B,EACnB6B,OAAQ,SAAAR,GAAE,oCAAAS,OAAkCT,IAC5CU,QAAS,kBAAMN,IAAKC,EAAE,oBA3CNP,OAAAC,EAAA,EAAAD,CAAAD,EA6CnB3B,EAAc,CACX8B,GAAI9B,EACJ+B,aAAc,cACdC,SAAU,aACVC,YAAa,kBAAMC,IAAKC,EAAE,iBAC1BV,OAAQ,mBACRW,WAlF2B,UAmF3BC,kBAAmB3B,EACnB4B,OAAQ,SAAAR,GAAE,uCAAAS,OAAqCT,IAC/CU,QAAS,kBAAMN,IAAKC,EAAE,uBAtDNP,OAAAC,EAAA,EAAAD,CAAAD,EAwDnB1B,EAAM,CACH8B,aAAc,OACdC,SAAU,SACVC,YAAa,kBAAMC,IAAKC,EAAE,SAC1BK,QAASC,SAASC,YA5DFd,OAAAC,EAAA,EAAAD,CAAAD,EA8DnBzB,EAAU,CACP4B,GAAI5B,EACJ6B,aAAc,UACdC,SAAU,UACVC,YAAa,kBAAMC,IAAKC,EAAE,YAC1BG,OAAQ,SAAAR,GAAE,iDAAAS,OAA+CT,IACzDU,QAASC,SAASC,YApEFd,OAAAC,EAAA,EAAAD,CAAAD,EAsEnBxB,EAAY,CACT2B,GAAI3B,EACJ4B,aAAc,YACdC,SAAU,YACVC,YAAa,kBAAMC,IAAKC,EAAE,cAC1BG,OAAQ,SAAAR,GAAE,uBAAAS,OAAqBT,EAArB,UACVU,QAASC,SAASC,YA5EFd,OAAAC,EAAA,EAAAD,CAAAD,EA8EnBvB,EAAQ,CACL0B,GAAI1B,EACJ2B,aAAc,QACdC,SAAU,QACVC,YAAa,kBAAMC,IAAKC,EAAE,UAC1BG,OAAQ,SAAAR,GAAE,0DAAAS,OAAwDT,IAClEU,QAASC,SAASC,YApFFd,OAAAC,EAAA,EAAAD,CAAAD,EAsFnBrB,EAAO,CACJwB,GAAIxB,EACJ0B,SAAU,SAxFMJ,OAAAC,EAAA,EAAAD,CAAAD,EA0FnBtB,EAAW,CACR2B,SAAU,aA3FMJ,OAAAC,EAAA,EAAAD,CAAAD,EA6FnBpB,EAAS,CACNyB,SAAU,SA9FML,GAkGXgB,EAAkB,SAAA1B,GAAI,OAAII,EAAYJ,GAAMc,cAE5Ca,EAAa,SAAC3B,EAAMD,EAAM6B,GACnC,IAAIC,EAUJ,OARI7B,IAAShB,IACT6C,EAAM9B,EAAK+B,WAGX1B,EAAYJ,IAASI,EAAYJ,GAAMqB,SACvCQ,EAAG,GAAAP,OAAMS,YAAWH,GAAjB,KAAAN,OAAwBlB,EAAYJ,GAAMqB,OAAOtB,EAAKc,MAGtDgB,GAGEG,GAAc,SAAAhC,GACvB,OAAQA,GACJ,KAAKrB,EACL,KAAKG,EACL,KAAKG,EACD,OAAOgD,IACX,KAAKrD,EACL,KAAKG,EACD,OAAOmD,IACX,KAAKrD,EACD,OAAOsD,IACX,KAAKnD,EACD,OAAOoD,IACX,KAAKlD,EACD,OAAOmD,IACX,KAAKlD,EACD,OAAOmD,IACX,KAAKjD,EACD,OAAOkD,IACX,KAAKnD,EACD,OAAOoD,IACX,KAAKlD,EACD,OAAOmD,IACX,QACI,OAAOC,4FCtMnBC,EAAAC,QAAA,CAAkBC,KAAA,mBAAA9C,KAAA,mBAAA+C,SAAA,uBAAAC,KAAA,mBAAAC,WAAA,yBAAAC,aAAA,sHCAlBN,EAAAC,QAAA,CAAkBM,aAAA,oCAAAC,cAAA,2DCAlBR,EAAAC,QAAA,CAAkBQ,SAAA,kCAAAC,WAAA,oCAAAC,MAAA,+BAAAC,aAAA,kVCMX,SAASC,EAAQC,GACpB,OAAOC,MAAMC,QAAQF,GAASA,EAAQ,GAGnC,SAASG,EAASH,GACrB,OAAOI,IAASJ,GAASA,EAAQ,GAS9B,SAASK,EAAaC,GACzB,OAAOA,EAAMC,OAAO,SAACC,EAAKlE,GAEtB,OADAkE,EAAIlE,EAAKc,IAAMd,EACRkE,GACR,IAkBA,IAAMC,EAAa,SAACC,EAAOC,GAC9B,GAA2B,qBAAhB3D,EAAO4D,MAAwBA,KAAKC,eAAgB,CAC3D,IAAMC,EAASH,GAAY,KAC3B,OAAO,IAAIC,KAAKC,eAAeC,EAAQ,CACnCC,KAAM,UACNC,MAAO,QACPC,IAAK,YACNC,OAAO,IAAIC,KAAKT,IAGvB,OAAOA,EAAMU,OAAO,EAAG,IAAIC,QAAQ,IAAK,MAwB/BC,EAAkB,SAACZ,EAAOa,GAAR,YACjBC,IAAVd,GAAiC,OAAVA,EAAiBa,EAAeb,GAE9CpC,EAAa,SAAAH,GACtB,IAAMsD,EAAMtD,EAAGuD,IAAIC,SACbC,EAAMH,EAAII,QAAQC,QAAQ,QAChC,OAAOF,GAAO,EAAIH,EAAII,QAAQE,MAAM,EAAGH,GAAOH,EAAII,SAGzCG,EAAe,SAAAC,GAAM,OAAA/E,OAAAgF,EAAA,EAAAhF,CAAA,GAC3B+E,EAD2B,CAE9B7E,QAAIoE,0WCtFKW,EAAqB,CAC9B/E,GAAI,GACJgF,SAAU,GACVzB,SAAU,GACV0B,aAAa,GAwBV,IACMC,EAAmB,SAAAC,GAAK,OAAIA,EAAMC,KAAKJ,qFCZvCK,EAA2B,CACpCC,KAAM,KACNC,MAAO,IAKLC,EAAsB,SAACL,EAAOM,EAAaC,EAAMpC,GAA3B,MAAsC,CAC9DgC,KAAKxF,OAAA6F,EAAA,EAAA7F,CAAA,GACEqF,EAAMG,KADTxF,OAAA8F,EAAA,EAAA9F,CAAA,GAEC2F,EAFD3F,OAAA6F,EAAA,EAAA7F,CAAA,GAGOqF,EAAMG,KAAKG,GAHlB3F,OAAA8F,EAAA,EAAA9F,CAAA,GAIK4F,EAAOpC,MAGhBiC,MAAOJ,EAAMI,QAwDJM,EAAqB,SAAAV,GAAK,OAAIA,EAAMW,YAiBpCC,EAAoB,SAACZ,EAAOnF,GAAR,OAC7B+C,YAAS8C,EAAmBV,GAAOG,MAAMtF,IAEhCgG,EAAwB,SAAAb,GACjC,OAA0C,OAAnCU,EAAmBV,GAAOG,MAUxBW,EAAoB,SAAAd,GAAK,OAClCpC,YAAS8C,EAAmBV,GAAOG,OAS1BY,EAAqB,SAAAf,GAAK,OAAIU,EAAmBV,GAAOI,OAIxDY,EAAwB,SAAAhB,GAAK,OACtCrF,OAAOsG,OAAOH,EAAkBd,IAAQkB,OACpC,SAAAC,GAAS,OAA0B,IAAtBA,EAAUC,WAGlBC,EAA0B,SAAArB,GAAK,OACxCrF,OAAOsG,OAAOH,EAAkBd,IAAQkB,OACpC,SAAAC,GAAS,OAA0B,IAAtBA,EAAUC,WAYlBE,EAAgC,SAAAtB,GAAK,SAAA1E,OAAAX,OAAA4G,EAAA,EAAA5G,CAC3C6G,IAAUR,EAAsBhB,GAAQ,MAAO,gBADJrF,OAAA4G,EAAA,EAAA5G,CAE3C6G,IAAUH,EAAwBrB,GAAQ,MAAO,kBAW3CyB,EAAsB,SAAAC,GAiB/B,OAAOC,IAAUD,GAAME,IAAI,SAACC,EAAGC,GAAJ,MAAe,CACtCjH,GAAIgH,EAAEhH,GACNkH,KAAMF,EAAEE,KACRC,YAAaH,EAAEG,YACfC,YAAaJ,EAAEI,YACfC,mBAAoBL,EAAEK,mBACtBd,QAASS,EAAEM,SACXC,MAAOP,EAAE5B,KAAK8B,KACdM,QAASR,EAAEQ,QACNC,MAAM,KACNC,KAAK,KACL1D,OAAO,EAAG,IACf2D,YAAaX,EAAEW,YACVF,MAAM,KACNC,KAAK,KACL1D,OAAO,EAAG,IACf4D,OAAQZ,EAAEY,OACVC,cAAelF,YAAQqE,EAAEc,gBAAgBC,OACzCD,gBAlCYvC,EAkCYyB,EAAEc,eAjC1BvC,EAAMwB,IAAI,SAAA7H,GACN,IAAMC,EAAOF,YAAaC,GAAQT,IAASS,EAAKC,KAC1CC,EAAOC,YAAWH,GAClBA,EAAKE,OAASJ,IACV,GACAE,EAAKE,KACT,KAEN,OAAOU,OAAA6F,EAAA,EAAA7F,CAAA,GACAZ,EACU,OAATE,EAAgB,CAAEA,QAAS,GAFnC,CAGID,aAZI,IAAAoG,aCjHLyC,cAAgB,CAC3BhI,GArCO,WAA+C,IAA9CmF,EAA8C8C,UAAAF,OAAA,QAAA3D,IAAA6D,UAAA,GAAAA,UAAA,GAVjB,KAUMC,EAAWD,UAAAF,OAAA,EAAAE,UAAA,QAAA7D,EACtD,OAAQ8D,EAAO/I,MACX,IAhBuB,kBAiBnB,OAAO+E,YAAgBgE,EAAO5E,MAbD,MAcjC,QACI,OAAO6B,IAiCfgD,UA7Bc,WAAsD,IAArDhD,EAAqD8C,UAAAF,OAAA,QAAA3D,IAAA6D,UAAA,IAAAA,UAAA,GAAXC,EAAWD,UAAAF,OAAA,EAAAE,UAAA,QAAA7D,EACpE,OAAQ8D,EAAO/I,MACX,IAxB8B,yBAyB1B,OAAO+E,YACHgE,EAAO5E,OAtByB,GAyBxC,QACI,OAAO6B,IAsBfiD,gBAlBoB,WAGnB,IAFDjD,EAEC8C,UAAAF,OAAA,QAAA3D,IAAA6D,UAAA,IAAAA,UAAA,GADDC,EACCD,UAAAF,OAAA,EAAAE,UAAA,QAAA7D,EACD,OAAQ8D,EAAO/I,MACX,IAtCoC,+BAuChC,OAAO+E,YACHgE,EAAO5E,OApC+B,GAuC9C,QACI,OAAO6B,MAYNkD,GAAmB,SAAAlD,GAAK,OAAIA,EAAMmD,UAElCC,GAAiB,SAAApD,GAAK,OAAIkD,GAAiBlD,GAAOnF,IAElDwI,GAAwB,SAAArD,GAAK,OAAIkD,GAAiBlD,GAAOgD,WAEzDM,GAA8B,SAAAtD,GAAK,OAC5CkD,GAAiBlD,GAAOiD,qCC9DfM,GAA+B,GAEtCC,GAAU,SAAAC,GAAC,YAAUxE,IAANwE,GAAyB,OAANA,GAqC3BC,GAAoB,SAAC1D,EAAOnF,GACrC,OAJkC,SAAAmF,GAAK,OAAIA,EAAM2D,eAI1CC,CAAuB5D,GAAOnF,yBC1C5BgJ,GAAkB,eAAGC,GAAHhB,UAAAF,OAAA,QAAA3D,IAAA6D,UAAA,GAAAA,UAAA,GAAc,IAAXgB,OAAH,MAAqB,CAChD,KADgD,GAAAxI,OAE7CwI,EAAS,2BAA6B,sBAWhCC,GAAqB,SAAAC,GAAA,IAAGC,EAAHD,EAAGC,UAAH,OAC9BC,KAAW,CACP,YACA,gBACA,SACA,eACAD,EAAS,SAAA3I,OAbkB,CAC/B,2BACA,2BACA,qBAUyCiH,KAAK,KAAjC,WAIJ4B,GAAgB,SAAAC,GAAA,IAAGH,EAAHG,EAAGH,UAAH,MAAmB,YAAA3I,OACjCyI,GAAmB,CAAEE,cAAa1B,KAAK,KADN,aAAAjH,OAEpCyI,GAAmB,CAAEE,cAAa1B,KAAK,KAFH,gBAAAjH,OAGjCyI,GAAmB,CAAEE,cAAa1B,KAAK,KAHN,OAOnC8B,GAAoB,SAAAC,GAAqC,IAAlCC,EAAkCD,EAAlCC,eAAgBC,EAAkBF,EAAlBE,YAChD,OAAON,KAAW,IAAA5I,OACXuI,GAAgB,CAAEC,QAAQ,IAAQvB,KAAK,MAC1C,yCACAgC,EAAc,GAAAjJ,OAAM6I,GAAc,CAAEF,WAAW,IAAQ1B,KAAK,MAA9C,GACdiC,EACM,CACI,IACA,uBACA,mBACA,YACA,sBACA,oCACA,oBACA,sBACA,yBACA,iCACA,oBACA,8BACA,iBACA,sCACA,0BACA,qBACA,8BACA,mBACA,gBACA,iBACA,UACA,gBACA,wBACA,gCACA,sCACFjC,KAAK,KACP,MAIDkC,GAAqB,SAAAC,GAAA,IAAGH,EAAHG,EAAGH,eAAHG,EAAmBF,YAAnB,MAAqC,gBAAAlJ,OACpD+I,GAAkB,CAAEE,mBAAkBhC,KAAK,KADS,cAAAjH,OAE1D,CAAC,QAADA,OAAAX,OAAA4G,EAAA,EAAA5G,CAAY0J,GAAkB,CAAEE,qBAAmBhC,KAAK,KAFE,YAAAjH,OAG5D+I,GAAkB,CAAEE,mBAAkBhC,KAAK,KAHiB,oBAAAjH,OAIpD+I,GAAkB,CAAEE,mBAAkBhC,KAAK,KAJS,mBAAAjH,OAKrD+I,GAAkB,CAAEE,mBAAkBhC,KAAK,KALU,OA4B1DoC,GAAmB,SAAC9J,EAAIb,EAAL4K,GAAA,IAAaC,EAAbD,EAAaC,OAAb,OAC5BC,wBAAcC,KAAK,SAAAnJ,GAAE,OACjBA,EAAGuD,IAAIC,SAAS4F,IAAhB,GAAA1J,OAAuBI,YAAgB1B,GAAvC,KAAAsB,OAAgDT,GAAM,CAClDgK,OACIA,GACAR,GAAkB,CACdE,gBAAgB,EAChBC,aAAa,SCnGpBS,GAAU,SAAAC,GAAK,OAAIC,QAAQC,IAAI,UAAWF,IAG1CG,GAA0B,eAAGC,GAAHxC,UAAAF,OAAA,QAAA3D,IAAA6D,UAAA,GAAAA,UAAA,GAAoB,IAAjBwC,aAAH,OACnCpB,KAAW,CACP,KACA,OACA,QACA,IACA,IACA,kBACA,mBACA,WACA,OACA,SAVO,GAAA5I,ODqEwB,YAAAA,OACxBuI,GAAgB,CAAEC,QAAQ,IAAQvB,KAAK,KADf,kBAAAjH,OAEtBuI,GAAgB,CAAEC,QAAQ,IAAQvB,KAAK,KAFjB,cAAAjH,OAG1BuI,GAAgB,CAAEC,QAAQ,IAAQvB,KAAK,KAHb,MC1DRA,KAAK,MAC5B+C,EAAY,GAAAhK,OACHmJ,GAAmB,CAClBF,eAAgBe,EAAaf,iBAC9BhC,KAAK,MAHF,MAQPgD,GAAqB,eAAAvB,EAAAlB,UAAAF,OAAA,QAAA3D,IAAA6D,UAAA,GAAAA,UAAA,GAA+B,GAA5BmB,EAAHD,EAAGC,UAAWqB,EAAdtB,EAAcsB,aAAd,OAC9BpB,KAAW,IAAA5I,OACJuI,KAAkBtB,KAAK,MAC1B,cACA,qBACA,WAJO,QAAAjH,OAKCuI,GAAgB,CAAEC,QAAQ,IAAQvB,KAAK,KALxC,KAMP,UACA,cACA,SACA0B,EAAS,kBAAA3I,OACe+J,GAAwB,CACtCC,iBACD/C,KAAK,KAHL,WCxBJiD,GAAoB,SAAA3K,GAAE,OAC/BiK,wBACKC,KAAK,SAAAnJ,GAAE,OACJA,EAAG6J,OAAOtE,UAAU6D,IAAInK,EAAI,CACxBgK,OAAQX,KACJqB,GAAmB,CACftB,WAAW,EACXqB,aAAc,CAAEf,gBAAgB,MAEtChC,KAAK,SAGdmD,MAAMT,KAGFU,GAAmB,SAAC9K,EAAI+K,GACjC,IAAM/J,EAAG,cAAAP,OAAiBT,EAAjB,aAETiK,wBAAcC,KAAK,SAAAnJ,GACXgK,EACAhK,EAAGuD,IAAIC,SAASyG,KAAKhK,GAErBD,EAAGuD,IAAIC,SAAS0G,OAAOjK,MAKtBkK,GAAqB,SAAAlL,GAC9B,OAAOiK,wBACFC,KAAK,SAAAnJ,GACF,OAAOA,EAAG6J,OAAO9E,WACZqE,IAAInK,GACJkK,KAAK,SAAA5D,GAAS,OAAIA,EAAU2E,aAEpCJ,MAAMT,0BC3CFe,GAAS,CAAC,GAAI,IAEdC,GAAiB,CAAEC,EAAG,EAAGC,EAAG,EAAGC,EAAG,GAAIC,EAAG,IAqBhDC,GAAuB,SAAAJ,GAAC,OAAIK,OAAOC,UAAUN,IAAMA,GAAK,GAIjDO,GAAW,SAAA1M,GAAI,OACxBuM,GAAqBvM,EAAKmM,IAC1BI,GAAqBvM,EAAKoM,IAC1BG,GAAqBvM,EAAKqM,IAC1BE,GAAqBvM,EAAKsM,IA6CjBK,GAAY,SAAAtG,GAAK,OAC1BA,EAAMwB,IAAI,SAAC7H,EAAM+H,GACb,IAAM6E,EAAgBF,GAAS1M,GACzBA,EACAY,OAAOiM,OAAO,GAAI7M,EA7CR,SAAA8M,GACpB,IAAKP,GAAqBO,GACtB,MAAM,IAAIC,MAAM,6BAGpB,IAAMC,EAAMF,EAjCY,EAkClBG,EAAMC,KAAKC,MAAML,EAlCC,GAmClBM,EAAYF,KAAKC,MAAM,MAG7B,MAAO,CACHhB,EAAGa,EAAMI,EACThB,EAJeiB,GAIZJ,EACHZ,EAAGe,EACHd,EANee,IAqCeC,CAASvF,IAEvC,OAAOnH,OAAOiM,OACV,GACAD,EAxBc,SAAA5M,GAKtB,MAAO,CAAEuN,eAJcL,KAAKM,MAhED,GAiELxN,EAAKsM,EAAIY,KAAKO,IAAI,EAAGzN,EAAKsM,EAAI,GAAKL,GAAO,KAuBxDyB,CAAkBd,OAIjBe,GAAmB,SAAA7M,GAAE,cAAAS,OAAYT,IAEvC,SAAS8M,GAAa9M,GACzB,IAAM+M,EAAKhK,YAASiK,SAASC,cAAT,IAAAxM,OAA2BoM,GAAiB7M,MAC5DkN,KAAWH,EAAGI,kBACdC,WACI,kBAAML,EAAGI,gBAAgBJ,EAAGM,YAAc,EAAGN,EAAGO,aAAe,IAC/D,6BCrFCC,GAAmB,SAAApI,GAAK,OAAIA,EAAMqI,UCnBlCC,GAAc,WACvB,IAEMzM,EAAG,gCAAAP,OADL,qHACK,gCACT,OAAOwJ,wBACFC,KAAK,SAAAnJ,GAAE,OAAIA,EAAGuD,IAAIC,SAAS4F,IAAInJ,KAC/B6J,MAAM,SAAAR,GAAK,OAAIC,QAAQC,IAAI,SAAUF,MCLjCqD,GAAyB,CAClCC,QAAS,GACTC,SAAU,KACVC,MAAM,GCIGC,GAAkB,iBAAO,CAClC3O,KDV0B,wCEOjB4O,GAAsB,CAAE7G,KAAM,GAAI/H,KADrB,qBAGpB6O,GAAyB,SAAAC,GAAiB,IAAdN,EAAcM,EAAdN,QAC9B,MAAuB,kBAAZA,EAGHO,EAAAC,EAAAC,cAAA,uBACYF,EAAAC,EAAAC,cAAA,QAAMC,MAAO,CAAEC,WAAY,MAAQX,EAAQzG,MAAa,IADpE,aAMDyG,GAwBIY,eATS,SAAApJ,GAAS,IAAAqJ,EFXL,SAAArJ,GAAK,OAAIA,EAAMsJ,UAAYf,GEYfgB,CAAavJ,GAAzCwI,EADqBa,EACrBb,QAASC,EADYY,EACZZ,SACjB,MAAO,CACHe,aAHyBH,EACFX,KAGvBe,gBAAiBjB,EACjBkB,iBAAkBjB,IAMtB,CACIkB,gBAAiBhB,IAHVS,CArBgB,SAAAQ,GAC3B,OACIb,EAAAC,EAAAC,cAACY,GAAAb,EAAD,CACIE,MAAO,CAAEY,OAAQ,OACjBpB,KAAMkB,EAAMJ,aACZhB,QAASO,EAAAC,EAAAC,cAACc,GAAD,CAAwBvB,QAASoB,EAAMH,kBAChDO,iBAAkBJ,EAAMF,iBACxBO,QAASL,EAAMD,wCCddO,GAAoB,WAAmC,IAAlCnQ,EAAkC+I,UAAAF,OAAA,QAAA3D,IAAA6D,UAAA,GAAAA,UAAA,GAA3B,GAC/B9I,GAD0D8I,UAAAF,OAAA,QAAA3D,IAAA6D,UAAA,GAAAA,UAAA,GAAP,IAC9BqH,YAAcpQ,EAAKC,KAE9C,QAASM,YAAUN,IAGVoQ,GAAkB,SAAArQ,GAC3B,IAAK8D,KAAS9D,GACV,OAAO,KAGX,OAAQA,EAAKC,MACT,KAAKrB,IACD,OAAOoB,EAAKsQ,YAChB,KAAKzR,IACD,OAAOmB,EAAKuQ,MAChB,KAAKzR,IACD,OAAOkB,EAAK6H,IAChB,KAAK9I,IACD,OAAOiB,EAAKwQ,YAChB,KAAKxR,IACD,OAAOgB,EAAKyQ,WAChB,QACI,OACIzQ,EAAKsQ,aACLtQ,EAAKuQ,OACLvQ,EAAK6H,KACL7H,EAAKwQ,aACLxQ,EAAKyQ,YACL,KAQHC,GAAa,SAACjQ,EAAQkQ,EAAQC,GACjCnQ,GAAUA,EAAOoQ,OAIvBpQ,EAAOqB,IAAM8O,EAAYrL,QACzB9E,EAAOqQ,kBAAmB,EAC1BrQ,EAAO2G,WAAY,EACfwJ,EAAYG,OACZtQ,EAAOsQ,KAAOH,EAAYG,MAE9BtQ,EAAOoQ,KAAKF,KAGHK,GAAQ,SAAAhR,GAAI,OAAIqQ,GAAgBrQ,GAAMc,IACtCmQ,GAAU,SAAAjR,GAAI,OAAIqQ,GAAgBrQ,GAAMgI,MAExCkJ,GAAU,SAAClR,EAAM6B,GAC1B,IAAM0D,EAAUvD,YAAWH,GACrBP,EAASjB,IAAYL,EAAKC,MAAMqB,OAAO0P,GAAMhR,IAEnD,SAAAuB,OAAUgE,EAAV,KAAAhE,OAAqBD,IAGZuP,GAAI,eAAA9B,EAAAnO,OAAAuQ,EAAA,EAAAvQ,CAAAwQ,EAAAnC,EAAAoC,KAAG,SAAAC,EAChBtR,EACAuR,EACAX,EACAR,GAJgB,IAAAO,EAAA1Q,EAAAQ,EAAA+Q,EAAAzI,UAAA,OAAAqI,EAAAnC,EAAAwC,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,OAAAJ,EAAA3I,OAAA,QAAA3D,IAAAsM,EAAA,GAAAA,EAAA,GAKP,GAEHb,EAPU/P,OAAA6F,EAAA,EAAA7F,CAAA,GAQT2Q,EARS,CASZ1D,GAAIF,GAAiB3N,EAAKc,MAGxBb,EAAOmQ,GAAcpQ,EAAKC,KAC1BQ,EAASF,YAAUN,GAEzByQ,GAAWjQ,EAAQkQ,EAAQC,GAfX,wBAAAc,EAAAG,SAAAP,MAAH,gBAAAQ,EAAAC,EAAAC,EAAAC,GAAA,OAAAlD,EAAAmD,MAAAC,KAAApJ,YAAA,GAkBJqJ,GAAK,eAAAnI,EAAArJ,OAAAuQ,EAAA,EAAAvQ,CAAAwQ,EAAAnC,EAAAoC,KAAG,SAAAgB,EAAMrS,GAAN,IAAAsS,EAAA,OAAAlB,EAAAnC,EAAAwC,KAAA,SAAAc,GAAA,cAAAA,EAAAZ,KAAAY,EAAAX,MAAA,cAAAW,EAAAX,KAAA,EACahH,GAAiBoG,GAAMhR,GAAOA,EAAKC,KAAM,CACnE6K,OAAQ9K,EAAKC,OAASnB,ITRI,IAAAyC,OAC3BuI,GAAgB,CAAEC,QAAQ,IAAQvB,KAAK,MAC1C,uCAF8B,YAAAjH,OAGlB+I,GAAkB,CAC1BE,gBAAgB,EAChBC,aAAa,IALa,MSQmB,OAFhC,cACX6H,EADWC,EAAAC,KAAAD,EAAAE,OAAA,SAKVH,GALU,wBAAAC,EAAAV,SAAAQ,MAAH,gBAAAK,GAAA,OAAAzI,EAAAiI,MAAAC,KAAApJ,YAAA,GAQL4J,GAAS,SAAA3S,GAClB,IAAMS,EAASF,YAAUP,EAAKC,MAE1BQ,GAAUA,EAAOkS,QACjBlS,EAAOkS,OAAOhF,GAAiB3N,EAAKc,MAI/B8R,GAAU,SAAC5S,EAAMoQ,GAC1B,IAAM3P,EAASF,YAAU6P,GAErB3P,GAAUA,EAAOmS,SACjBnS,EAAOmS,QAAQjF,GAAiB3N,EAAKc,MAIhC+R,GAAyB,SAClCtB,EACAuB,EACA1C,GAEA,GAAI0C,IAAiBhU,KAAOgU,IAAiB1C,EAAY,CACrD,IAAM2C,GA3EgBlL,EA2EkB0J,GA1ExCyB,UAAYnL,EAAImL,SAASC,KAAK,SAAAC,GAAE,OAAIA,EAAGC,MAAMC,SArCvB,cAiHtB,YAAyBlO,IAArB6N,EACO,KAGJrN,YAAa9E,OAAA6F,EAAA,EAAA7F,CAAA,GACb2Q,EACAwB,EAFY,CAGfC,cAAU9N,KApFQ,IAAA2C,EAwF1B,OAAOnC,YAAa6L,IC1GX8B,GAAkB,SAAAjP,GAAK,MAAK,CACrCnE,KZ5B2B,kBY6B3BmE,UAGSkP,GAAyB,SAAAlP,GAAK,MAAK,CAC5CnE,KZhCkC,yBYiClCmE,UAQSmP,GAA0B,SAAAnP,GAAK,MAAK,CAC7CnE,KX3CkC,yBW4ClCmE,UAgBSoP,GAAiB,SAAA1S,GAAE,sBAAAiO,EAAAnO,OAAAuQ,EAAA,EAAAvQ,CAAAwQ,EAAAnC,EAAAoC,KAAI,SAAAC,EAAOmC,EAAUC,GAAjB,IAAAC,EAAA,OAAAvC,EAAAnC,EAAAwC,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAF,EAAAC,KAAA,EAAAD,EAAAE,KAAA,EAETnG,GAAkB3K,GAFT,cAEtB6S,EAFsBjC,EAAAc,KAG5BiB,EAASG,GAAmBD,IAHAjC,EAAAe,OAAA,SAKrBoB,QAAQC,QAAQH,IALK,cAAAjC,EAAAC,KAAA,EAAAD,EAAAqC,GAAArC,EAAA,SAO5BtG,QAAQC,IAAI,UAAZqG,EAAAqC,IAP4BrC,EAAAe,OAAA,SAAAf,EAAAqC,IAAA,yBAAArC,EAAAG,SAAAP,EAAA,iBAAJ,gBAAAQ,EAAAC,GAAA,OAAAhD,EAAAmD,MAAAC,KAAApJ,YAAA,IAanBiL,GAA4B,SAAAlT,GAAE,sBAAAmJ,EAAArJ,OAAAuQ,EAAA,EAAAvQ,CAAAwQ,EAAAnC,EAAAoC,KAAI,SAAAgB,EAAOoB,EAAUC,GAAjB,IAAAO,EAAAC,EAAAhJ,EAAA9B,EAAA,OAAAgI,EAAAnC,EAAAwC,KAAA,SAAAc,GAAA,cAAAA,EAAAZ,KAAAY,EAAAX,MAAA,cAC3C6B,EAASH,IAAuB,IAE1BW,EAAkB/F,WAAW,WAC/B,IAAMiG,EAAgBtQ,YAASgD,EAAkB6M,IAAY5S,IACxDmH,YACDqB,GAAsBoK,MAAeS,IACrCtF,GAAoB7G,KAAOmM,EAE3BV,EHlFuC,CAC/CxT,KDNqC,4BCOrCmE,MGiFsC,CACtBqK,QAASI,GACTF,MAAM,OAInB,KAEGuF,EAAY,SAAA9K,GACd,IC9FkCtD,EAAUS,ED8FtC6N,EAAkB1M,EAAoB0B,GAAU,GAkCtD,OAhCAqK,EACIY,GAAoB1H,GAAUyH,EAAgBxL,kBCjGhB9C,EDoGRE,EAAiB0N,KCpGCnN,EDoGYzF,ECnG5DwT,aAAaC,QAAb,2BAAAhT,OAAgDuE,GAAYS,GDsGxD6N,EAAgBxL,eAAe4L,QAAQ,SAAAxU,GACnC,OAAQA,EAAKC,MACT,KAAKrB,IACL,KAAKC,IACL,KAAKC,IACL,KAAKC,IACL,KAAKC,IACDyU,EAASF,GAAwBlD,GAAgBrQ,KACjD,MACJ,KAAKX,IACDoU,EEvGuB,eAAA1E,EAAAnO,OAAAuQ,EAAA,EAAAvQ,CAAAwQ,EAAAnC,EAAAoC,KAAI,SAAAC,EAAMmC,GAAN,IAAAnF,EAAAmG,EAAA,OAAArD,EAAAnC,EAAAwC,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAF,EAAAC,KAAA,EAAAD,EAAAE,KAAA,EAEhBrD,KAFgB,cAEjCD,EAFiCoD,EAAAc,KAG/BiC,EAAyBnG,EAAzBmG,qBAH+B/C,EAAAe,OAAA,SAKhCgB,EAV2B,CACtCxT,KRN6B,oBQO7BmE,MAQqCqQ,KALM,cAAA/C,EAAAC,KAAA,EAAAD,EAAAqC,GAAArC,EAAA,SAAAA,EAAAe,OAAA,UAV9BzJ,EAiBM,eAjBEmC,EAiBHuG,EAAAqC,GAhBlB3I,QAAQC,IAAR,mBAAA9J,OAA+ByH,EAA/B,MAAAzH,OAA0C4J,IACnCA,IAQoC,yBAAAuG,EAAAG,OAV/B,IAAC7I,EAAQmC,GAUsBmG,EAAA,iBAAJ,gBAAAQ,GAAA,OAAA/C,EAAAmD,MAAAC,KAAApJ,YAAA,OF8GnC0K,EAASJ,GAAgBvS,IAEzB2S,EAASH,IAAuB,IAEhCoB,aAAaT,GAEbR,EHvH8B,CAClCxT,KDV0B,mBIkIfmJ,GAGL8B,EAAU,SAAAC,GAEZ,OADAC,QAAQC,IAAI,UAAWF,GAChBA,GA1DgCoH,EAAAZ,KAAA,EAAAY,EAAAX,KAAA,EA8DhB6B,EAASD,GAAe1S,IA9DR,cA8DjCsI,EA9DiCmJ,EAAAC,KAAAD,EAAAE,OAAA,SAgEhCyB,EAAU9K,IAhEsB,eAAAmJ,EAAAZ,KAAA,GAAAY,EAAAwB,GAAAxB,EAAA,SAAAA,EAAAE,OAAA,SAkEhCvH,EAAOqH,EAAAwB,KAlEyB,yBAAAxB,EAAAV,SAAAQ,EAAA,kBAAJ,gBAAAL,EAAAC,GAAA,OAAAhI,EAAAiI,MAAAC,KAAApJ,YAAA,yBG/D9B4L,GAA+B,GAC/BC,GAAsB,CAC/B9T,GAAI,GACJkH,KAAM,GACNU,OAAQ,GACRR,YAAa,GACbU,eAAgB,IAmFPiM,GAAwB,SAAA5O,GAAK,OAAIA,EAAM6O,eAIvCC,GAAgB,SAAA9O,GAAK,OAAKwD,KAAQxD,EAAM6O,gBAQxCE,GAAyB,SAAA/O,GAAK,OACvCpC,YAASgR,GAAsB5O,IAAQ2C,gBCjH9BqM,GAAkC,GAwBlCC,GAA0B,SAAAjP,GAAK,OAAIA,EAAMkP,iBCvBzCC,GAA6B,GA8B7BC,GAAsB,SAAApP,GAAK,OAAIA,EAAMqP,aAErCC,GAAkB,SAAAtP,GAAK,OAAIrF,OAAO4U,KAAKH,GAAoBpP,KCrB3DwP,GAAqB,SAAA3U,GAAE,MAAK,CACrCb,KDd8B,qBCe9Ba,OCVS4U,GAAyB,SAAA5U,GAAE,MAAK,CACzCb,KHRmC,0BGSnCa,iBCREoK,GAAU,SAAAC,GAAK,OAAIC,QAAQC,IAAI,UAAWF,IAE1CwK,GAAgB,SAACvO,EAAWO,GAAS,IAC/BK,EAAsCL,EAAtCK,KAAME,EAAgCP,EAAhCO,YAAaU,EAAmBjB,EAAnBiB,eAQ3B,OANAxB,EAAUY,KAAOA,EACjBZ,EAAUc,YAAcA,EACxBd,EAAUwB,eAAiBA,EAAef,IAAI,SAAA7H,GAAI,OAC9CY,OAAOiM,OAAO,GAAI7M,EAAM,CAAE4V,MAAO5V,EAAKqM,EAAGwJ,OAAQ7V,EAAKsM,MAGnDlF,EAAU0O,OAAO9K,KAAK,SAAA+K,GAAG,OAAIA,EAAIC,SAASC,OAGxCC,GAAkB,SAAAvO,GAC3B,OAAOoD,wBACFC,KAAK,SAAAnJ,GACF,OAAOA,EAAG6J,OAAO9E,WACZqE,IAAItD,EAAK7G,IACTkK,KAAK,SAAA5D,GAAS,OAAIuO,GAAcvO,EAAWO,OAEnDgE,MAAMT,KAGFiL,GAAgB,SAAAxO,GACzB,OAAOoD,wBAAcC,KAAK,SAAAnJ,GACtB,IAAMuF,EAAYvF,EAAG6J,OAAO9E,WAAWwP,SAEvC,OAAOT,GAAcvO,EAAWO,MCqC3B0O,GAAqB,SAAArW,GAC9B,IAAMC,EAAOD,EAAKC,YACXD,EAAKC,KACZ,IAAMqW,EAAejW,IAAYJ,GAAMe,SAEvC,MAAO,CACHf,KN/D0B,qBMgE1BmE,MAAMxD,OAAA6F,EAAA,EAAA7F,QAAA8F,EAAA,EAAA9F,CAAA,CACFE,GAAIyV,yBACJtW,QACCqW,EAAetW,EAAKwW,SAClBtK,MAKFuK,GAAwB,SAAAzW,GAAI,MAAK,CAC1CC,KNxEiC,wBMyEjCmE,MAAOpE,IAGE0W,GAAwB,SAAAtS,GAAK,MAAK,CAC3CnE,KN9EiC,wBM+EjCmE,UCvDSwP,GAAqB,SAAAhN,GAAU,MAAK,CAC7C3G,KvBtB0B,iBuBuB1BmE,MAAOL,YAAa2D,EAAoBd,MAG/B+P,GAAwB,SAACpQ,EAAasF,GAAd,MAA6B,CAC9D5L,KvB1BiC,wBuB2BjCsG,YAAaA,EACbnC,MAAOyH,IASEwI,GAAsB,SAAAjQ,GAAK,MAAK,CACzCnE,KvBpC+B,sBuBqC/BmE,UAKSwS,GAAmB,iCAAA7H,EAAAnO,OAAAuQ,EAAA,EAAAvQ,CAAAwQ,EAAAnC,EAAAoC,KAAM,SAAAC,EAAMmC,GAAN,IAAAoD,EAAA,OAAAzF,EAAAnC,EAAAwC,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAF,EAAAE,KAAA,ElBrDlC7G,wBACKC,KAAK,SAAAnJ,GAAE,OACJA,EAAG6J,OAAOtE,UAAUtE,KAAK,CACrBgI,OAAQ,CACJU,KAAqBhD,KAAK,KAC1B,sBACFA,KAAK,KACPsO,OAAQ,YAGfnL,MAAMT,IkB2CuB,OAC5B2L,EAD4BnF,EAAAc,KAElCiB,GA/B2B7M,EA+BFiQ,EAAWE,UA/BM,CAC1C9W,KvBlB0B,iBuBmB1BmE,MAAOL,YAAa2D,EAAoBd,OA2BN,wBAAA8K,EAAAG,OA7BP,IAAAjL,GA6BO0K,MAAN,gBAAAQ,GAAA,OAAA/C,EAAAmD,MAAAC,KAAApJ,YAAA,IC1CjBD,eAAgB,CAC3BkO,SAVa,WAAmD,IAAlD/Q,EAAkD8C,UAAAF,OAAA,QAAA3D,IAAA6D,UAAA,GAAAA,UAAA,GAFvB,EAEYC,EAAWD,UAAAF,OAAA,EAAAE,UAAA,QAAA7D,EAChE,OAAQ8D,EAAO/I,MACX,IANgC,2BAO5B,OAAO+E,YAAgBgE,EAAO5E,MALG,GAMrC,QACI,OAAO6B,MAkBNgR,GAAyB,SAAAhR,GAAK,OAJT,SAAAA,GAAK,OAAIA,EAAMiR,WAK7CC,CAAmBlR,GAAO+Q,UC5BxBI,GAAM,iBAENC,GAAY,eAAAtI,EAAAnO,OAAAuQ,EAAA,EAAAvQ,CAAAwQ,EAAAnC,EAAAoC,KAAG,SAAAC,EAAMzP,GAAN,OAAAuP,EAAAnC,EAAAwC,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAF,EAAAE,KAAA,EAAkB/P,EAAGyV,YAAYC,UAAUC,IAH9C,aAGG,cAAA9F,EAAAe,OAAA,SAAAf,EAAAc,MAAA,wBAAAd,EAAAG,SAAAP,MAAH,gBAAAQ,GAAA,OAAA/C,EAAAmD,MAAAC,KAAApJ,YAAA,GAEZ0O,GAAY,eAAAxN,EAAArJ,OAAAuQ,EAAA,EAAAvQ,CAAAwQ,EAAAnC,EAAAoC,KAAG,SAAAgB,EAAOxQ,EAAIwV,GAAX,OAAAjG,EAAAnC,EAAAwC,KAAA,SAAAc,GAAA,cAAAA,EAAAZ,KAAAY,EAAAX,MAAA,WACjByF,EADiB,CAAA9E,EAAAX,KAAA,eAAAW,EAAAX,KAAA,EAEL/P,EAAGyV,YAAYC,UAAUtM,IAPvB,aAKG,OAAAsH,EAAAwB,GAAAxB,EAAAC,KAAAD,EAAAX,KAAA,sBAAAW,EAAAX,KAAA,EAGL/P,EAAGyV,YAAYC,UAAUnB,OARvB,aAKG,OAAA7D,EAAAwB,GAAAxB,EAAAC,KAAA,cAAAD,EAAAE,OAAA,SAAAF,EAAAwB,IAAA,yBAAAxB,EAAAV,SAAAQ,MAAH,gBAAAN,EAAAC,GAAA,OAAA/H,EAAAiI,MAAAC,KAAApJ,YAAA,GAKL2O,GAAoB,eAAArN,EAAAzJ,OAAAuQ,EAAA,EAAAvQ,CAAAwQ,EAAAnC,EAAAoC,KAAG,SAAAsG,IAAA,IAAA9V,EAAA+V,EAAA,OAAAxG,EAAAnC,EAAAwC,KAAA,SAAAoG,GAAA,cAAAA,EAAAlG,KAAAkG,EAAAjG,MAAA,cAAAiG,EAAAjG,KAAA,EACf7G,wBADe,cAC1BlJ,EAD0BgW,EAAArF,KAAAqF,EAAA9D,GAER0D,GAFQI,EAAAC,GAEKjW,EAFLgW,EAAAjG,KAAA,EAEeyF,GAAaxV,GAF5B,cAAAgW,EAAAE,GAAAF,EAAArF,KAAAqF,EAAAjG,KAAA,MAAAiG,EAAA9D,IAAA8D,EAAAC,GAAAD,EAAAE,IAAA,WAE1BH,EAF0BC,EAAArF,OAGjBoF,EAAUpC,MAAQoC,EAAUpC,KAAKvC,KAAK,SAAA+E,GAAG,OAAIA,IAAQZ,MAHpC,CAAAS,EAAAjG,KAAA,gBAAAiG,EAAAjG,KAAA,GAMfgG,EAAU3M,IAAImM,IANC,eAAAS,EAAApF,OAAA,SAAAoF,EAAArF,MAAA,eAAAqF,EAAAjG,KAAA,GAQtBqG,GDf+B,ECesBL,GAR/B,eAS5BxM,QAAQC,IACJ,6DAVwBwM,EAAApF,OAAA,SDPS,GCOT,yBAAAoF,EAAAhG,SAAA8F,MAAH,yBAAAtN,EAAA6H,MAAAC,KAAApJ,YAAA,GAgBpBkP,GAAqB,eAAA1N,EAAA3J,OAAAuQ,EAAA,EAAAvQ,CAAAwQ,EAAAnC,EAAAoC,KAAG,SAAA6G,EAAOC,EAAMP,GAAb,IAAA/V,EAAA,OAAAuP,EAAAnC,EAAAwC,KAAA,SAAA2G,GAAA,cAAAA,EAAAzG,KAAAyG,EAAAxG,MAAA,cAAAwG,EAAAxG,KAAA,EAChB7G,wBADgB,UAC3BlJ,EAD2BuW,EAAA5F,KAAA4F,EAAArE,GAEtB6D,EAFsBQ,EAAArE,GAAA,CAAAqE,EAAAxG,KAAA,eAAAwG,EAAAxG,KAAA,EAEF6F,GAAa5V,EAAIwV,IAFf,OAAAe,EAAArE,GAAAqE,EAAA5F,KAAA,OAAA4F,EAAArE,GAI9BsE,IAAIjB,GAAKe,GAJqB,yBAAAC,EAAAvG,SAAAqG,MAAH,gBAAAjG,EAAAS,GAAA,OAAAnI,EAAA2H,MAAAC,KAAApJ,YAAA,GCxBrBuP,GAA0B,SAAAH,GAAI,MAAK,CAC5ClY,KFFoC,2BEGpCmE,MAAO+T,uDCLLI,GAAuB,kBACzB3X,OAAO4U,KAAKgD,qBACPrR,OAAO,SAAAsR,GAAK,MACT,CAACD,oBAAiBE,GAAG5X,GAAI0X,oBAAiBG,GAAG7X,IAAIsS,SAASqF,KAE7DxU,OAAO,SAAC2U,EAAKZ,GAOV,OANAY,EAAIZ,GAAO,CACPlX,GAAI0X,oBAAiBR,GAAKlX,GAC1B+X,SAAUL,oBAAiBR,GAAKa,SAChC7Q,KAAMwQ,oBAAiBR,GAAKhQ,QAGzB4Q,GACR,KAiBEE,GAAiB,SAAA7S,GAAK,OAAIA,EAAM8S,YC7BhCC,GAAmB,CAC5BC,cAAe,aACfC,0BAA2B,iBAC3BC,+BAAgC,QAChCC,oBAAqB,cACrB/U,SAAU,KACVgV,qBAAsB,IAqBbC,GAAe,SAAArT,GAAK,OAAIA,EAAMsT,UAE9BC,GAAkC,SAAAvT,GAAK,OAChDqT,GAAarT,GAAOmT,qBC3BXK,GAAkB,SAAAV,GAAU,MAAK,CAC1C9Y,KFU0B,iBET1BmE,MAAOsV,KAAMC,KAAOZ,EAAY,CAAC,SAAAjR,GAAC,OAAIA,EAAEE,KAAK4R,iBAAiB,8BCD5DC,GAAS,CACXC,SAAU,CACNC,MAAOC,IAAOC,QACdC,OAAQ,UACRC,SAAU,GACVC,WAAY,EACZC,UAAW,CACPC,eAAgB,cAGxBC,SAAU,CACNH,WAAY,EACZL,MAAOC,IAAOQ,QACdL,SAAU,GACVD,OAAQ,gBAkBDO,wBAAWZ,GAAXY,CAde,SAAA1L,GAAiD,IAA9C2L,EAA8C3L,EAA9C2L,QAASC,EAAqC5L,EAArC4L,YAAaC,EAAwB7L,EAAxB6L,QAASL,EAAexL,EAAfwL,SAC5D,OACIvL,EAAAC,EAAAC,cAAA,OAAKC,MAAO,CAAE0L,UAAW,WACpBN,EACGvL,EAAAC,EAAAC,cAAA,OAAK4L,UAAWF,EAAQL,UAAWrZ,IAAKC,EAAE,cAE1C6N,EAAAC,EAAAC,cAAA,OAAK4L,UAAWF,EAAQd,SAAUY,QAASA,GACtCC,EAAczZ,IAAKC,EAAE,aAAeD,IAAKC,EAAE,iBC5BnD4Z,GAAgB,EAOhBC,GAAgB,SAAA7C,GACzB,OAVkC,GAU3BA,GAGE8C,GAAuB,SAAApF,GAChC,OAAO3I,KAAKC,OACP0I,EARLqF,IAPkC,KAmBzBC,GAAe,SAAAhD,GACxB,OAhB4B,GAgBFiD,GAAoBjD,GAAM,IAG3CiD,GAAsB,SAAAjD,GAC/B,OAAO6C,GAAc7C,GAjBrB+C,yBCAEG,eACF,SAAAA,EAAYxL,GAAO,IAAAyL,EAAA,OAAA1a,OAAA2a,EAAA,EAAA3a,CAAAuR,KAAAkJ,IACfC,EAAA1a,OAAA4a,EAAA,EAAA5a,CAAAuR,KAAAvR,OAAA6a,EAAA,EAAA7a,CAAAya,GAAAK,KAAAvJ,KAAMtC,KAOV8L,YAAc,WACVL,EAAKM,SAAS,CAAEC,UAAU,IAC1BC,OAAOC,iBAAiB,YAAaT,EAAKU,QAC1CF,OAAOC,iBAAiB,UAAWT,EAAKW,YAXzBX,EAcnBU,OAAS,SAAAE,GACLA,EAAMC,iBACND,EAAME,kBAEN,IAAMC,EAAYH,EAAMI,QAGpBhB,EAAKzL,MAAM0M,gBACXF,IAAcf,EAAKzL,MAAMgG,QACzBwG,EAAY,GAEZG,sBAAsB,WAClBlB,EAAKzL,MAAM0M,eAAeF,MA1BnBf,EA+BnBW,UAAY,WACRX,EAAKM,SAAS,CAAEC,UAAU,IAC1BC,OAAOW,oBAAoB,YAAanB,EAAKU,QAC7CF,OAAOW,oBAAoB,UAAWnB,EAAKW,WAEvCX,EAAKzL,MAAMoM,WACXX,EAAKzL,MAAMoM,aAlCfX,EAAKrV,MAAQ,CACT4V,UAAU,GAJCP,kFA0Cf,MAA4C,oBAA9BnJ,KAAKtC,MAAM0M,eACrBvN,EAAAC,EAAAC,cAAA,OACI4L,UAAWF,KAAQ8B,WACnBvN,MAAO,CAAE0G,OAhDE,GAiDX8G,YAAaxK,KAAKwJ,cAEtB,sCAIJ,IAAM9F,EAAS3I,KAAKO,IAAI0E,KAAKtC,MAAMgG,OAAQ,GAvDxB,EAyDb+G,EAAYhc,OAAOiM,OACrB,CACIgJ,SACAgH,ID7DgB,GC8DhBC,gBAAiB3K,KAAKtC,MAAMkN,SACtB/C,IAAOgD,UACPhD,IAAOiD,MACbC,cAhEW,GAmEf/K,KAAKlM,MAAM4V,SAAW,CAAEsB,WAAY,QAAW,IAGnD,OACInO,EAAAC,EAAAC,cAAA,OAAKC,MAAOyN,EAAW9B,UAAWF,KAAQwC,MACtCpO,EAAAC,EAAAC,cAAA,OAAK4L,UAAWF,KAAQpE,SAAUrE,KAAKtC,MAAMwN,UAC5ClL,KAAKmL,2BAvEGC,IAAMC,WA8G/BnC,GAAWoC,aAAe,CACtBlB,eAAgB,KAChBN,UAAW,MAGAZ,0CC9GAqC,GAZE,SAAA3O,GAAA,IAAG+L,EAAH/L,EAAG+L,UAAH,OACb9L,EAAAC,EAAAC,cAAA,OACI4L,UAAWA,EACX6C,MAAM,6BACNC,QAAQ,aAER5O,EAAAC,EAAAC,cAAA,QAAMpH,EAAE,gBAAgB+V,KAAK,SAC7B7O,EAAAC,EAAAC,cAAA,QAAMpH,EAAE,6FACRkH,EAAAC,EAAAC,cAAA,QAAMpH,EAAE,gBAAgB+V,KAAK,WCRxBC,GAAqB,eAAA/O,EAAAnO,OAAAuQ,EAAA,EAAAvQ,CAAAwQ,EAAAnC,EAAAoC,KAAG,SAAAC,EAAOyM,EAAWjd,GAAlB,IAAAe,EAAAC,EAAA,OAAAsP,EAAAnC,EAAAwC,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAF,EAAAE,KAAA,EAChB7G,wBADgB,OAC3BlJ,EAD2B6P,EAAAc,KAE3B1Q,EAF2B,4BAAAP,OAEOwc,EAFP,cAAAxc,OAE6BT,GAE9De,EAAGuD,IAAIC,SAASyG,KAAKhK,GAJY,wBAAA4P,EAAAG,SAAAP,MAAH,gBAAAQ,EAAAC,GAAA,OAAAhD,EAAAmD,MAAAC,KAAApJ,YAAA,GCQ5B8Q,GAAS,CACXmE,KAAM,CACFC,OAAQ,OAEZjb,KAAM,CACF+W,MAAOC,IAAOkE,QACdC,QAAS,eACT7D,eAAgB,OAChB8D,cAAe,OAEnBC,KAAM,CACFxI,OAAQ,OACRyI,UAAW,MACX1I,MAAO,QAEXxM,SAAU,CACNyU,KAAM7D,IAAOiD,OAEjBsB,WAAY,CACRV,KAAM7D,IAAOC,UA4CNQ,wBAAWZ,GAAXY,CAxCkB,SAAA1L,GAM3B,IALF1H,EAKE0H,EALF1H,QACA+B,EAIE2F,EAJF3F,SACA7F,EAGEwL,EAHFxL,MACAgD,EAEEwI,EAFFxI,YACAqU,EACE7L,EADF6L,QAEM4D,EAAY,CACdpV,WACA0R,UAAWF,EAAQoD,MAGvB,GAAI3W,EAAS,CACT,IAAMoX,EAAgBrV,EAAWwR,EAAQxR,SAAWwR,EAAQ2D,WAC5DC,EAAUH,KACNrP,EAAAC,EAAAC,cAACwP,GAAD,CAAU5D,UAAS,GAAAvZ,OAAKqZ,EAAQyD,KAAb,KAAA9c,OAAqBkd,KAIhD,OACIzP,EAAAC,EAAAC,cAACyP,GAAA,EAAD,CACI7D,UAAWF,EAAQ5X,KACnB4b,GAAE,IAAArd,OAAMgF,GACRmU,QAASmE,KACL,kBAAMf,GAAsB,iBAAkBvX,IAC9C,MAGJyI,EAAAC,EAAAC,cAAC4P,GAAA,EAASN,EAAYjb,MC9CnBwb,GAZO,kBAClB/P,EAAAC,EAAAC,cAAA,OACIyO,MAAM,6BACN/H,MAAM,KACNC,OAAO,KACPgI,KAAM7D,IAAOgF,QACbpB,QAAQ,aAER5O,EAAAC,EAAAC,cAAA,QAAMpH,EAAE,0QCIDmX,GAZG,SAAAlQ,GAAA,IAAG+L,EAAH/L,EAAG+L,UAAH,OACd9L,EAAAC,EAAAC,cAAA,OACI4L,UAAWA,EACX+C,KAAM7D,IAAOkF,QACbvB,MAAM,6BACNC,QAAQ,aAER5O,EAAAC,EAAAC,cAAA,QAAMpH,EAAE,0GACRkH,EAAAC,EAAAC,cAAA,QAAMpH,EAAE,gBAAgB+V,KAAK,gCCOtBsB,GAZY,SAAApQ,GAAA,IAAGqQ,EAAHrQ,EAAGqQ,QAAH,OACvBpQ,EAAAC,EAAAC,cAAA,UAAQ4L,UAAWF,KAAQyE,OAAQ3E,QAAS0E,GACxCpQ,EAAAC,EAAAC,cAAA,YACIF,EAAAC,EAAAC,cAACoQ,GAAD,CAAWxE,UAAWF,KAAQyD,KAAMtE,MAAM,cCFzCwF,GAAY,CACrB,CAAEze,GAAI,MAAOsD,MAAO,aACpB,CAAEtD,GAAI,KAAMsD,MAAO,iBACnB,CAAEtD,GAAI,SAAUsD,MAAO,sBAYdob,GAAuC,GACvCC,GAAwCF,GAAU,GAAGze,GAuCnDgI,eAAgB,CAC3Bd,KArCS,WAA0D,IAAzD/B,EAAyD8C,UAAAF,OAAA,QAAA3D,IAAA6D,UAAA,GAAAA,UAAA,GAAjDyW,GAAsCxW,EAAWD,UAAAF,OAAA,EAAAE,UAAA,QAAA7D,EACnE,OAAQ8D,EAAO/I,MACX,IAzBkC,6BA0B9B,OAAO+E,YACHgE,EAAO5E,MACPob,IAER,QACI,OAAOvZ,IA8BfoC,MA1BU,WAA2D,IAA1DpC,EAA0D8C,UAAAF,OAAA,QAAA3D,IAAA6D,UAAA,GAAAA,UAAA,GAAlD0W,GAAuCzW,EAAWD,UAAAF,OAAA,EAAAE,UAAA,QAAA7D,EACrE,OAAQ8D,EAAO/I,MACX,IApCmC,8BAqC/B,OAAO+E,YACHgE,EAAO5E,MACPob,IAER,QACI,OAAOvZ,IAmBfyZ,MAfU,WAA2D,IAA1DzZ,EAA0D8C,UAAAF,OAAA,QAAA3D,IAAA6D,UAAA,GAAAA,UAAA,GApC/D,WAoCoDC,EAAWD,UAAAF,OAAA,EAAAE,UAAA,QAAA7D,EACrE,OAAQ8D,EAAO/I,MACX,IA/CmC,8BAgD/B,OAAO+E,YACHgE,EAAO5E,MAxCb,YA2CF,QACI,OAAO6B,MAYN0Z,GAA2B,SAAA1Z,GAAK,OAAIA,EAAM2Z,kBAI1CC,GAAiB,SAAA5Z,GAAK,OAAI0Z,GAAyB1Z,GAAO+B,MC9D1D8X,GAAgB,GAChBC,GAAiB,GAExBlG,GAAS,CACXmG,YAAa,CACT7F,SAAU,OACVvE,MAAO,QACPC,OAAQ,OACRgH,IAAK,QAEToD,WAAY,CACRlG,MAAOC,IAAOC,QACdrE,MAAO,OACPC,OAAQ,SAIHqK,GAAb,SAAAC,GACI,SAAAD,EAAYrQ,GAAO,IAAAyL,EAAA,OAAA1a,OAAA2a,EAAA,EAAA3a,CAAAuR,KAAA+N,IACf5E,EAAA1a,OAAA4a,EAAA,EAAA5a,CAAAuR,KAAAvR,OAAA6a,EAAA,EAAA7a,CAAAsf,GAAAxE,KAAAvJ,KAAMtC,KAaVuQ,eAAiB,SAAAlE,GACbA,EAAMC,iBAENb,EAAKzL,MAAMwQ,aAAanE,EAAMoE,OAAOlc,QAjBtBkX,EAoBnBiF,YAAc,SAAArE,GACV,OAAQA,EAAMsE,SACV,KAAKV,GACDxE,EAAKzL,MAAM4Q,kBACX,MACJ,KAAKV,GACDzE,EAAKzL,MAAMwQ,iBAvBnB/E,EAAKrV,MAAQ,CACT7B,MAAOob,IAJIlE,EADvB,OAAA1a,OAAA8f,EAAA,EAAA9f,CAAAsf,EAAAC,GAAAvf,OAAA+f,EAAA,EAAA/f,CAAAsf,EAAA,EAAAlI,IAAA,4BAAA5T,MAAA,SAS8Bwc,GACtBzO,KAAKyJ,SAAS,CACVxX,MAAOwc,EAAU5Y,SAX7B,CAAAgQ,IAAA,SAAA5T,MAAA,WAkCa,IAAAyc,EACmC1O,KAAKtC,MAArC+K,EADHiG,EACGjG,QAAS5S,EADZ6Y,EACY7Y,KAAMqY,EADlBQ,EACkBR,aAEjBS,EACF9R,EAAAC,EAAAC,cAAC6R,GAAA9R,EAAD,CAAgB+R,SAAS,SACrBhS,EAAAC,EAAAC,cAAC+R,GAAAhS,EAAD,CAAY6L,UAAWF,EAAQqF,cAIjCiB,EACO,KAATlZ,GAAwB,OAATA,EACXgH,EAAAC,EAAAC,cAAC6R,GAAA9R,EAAD,CAAgB+R,SAAS,OACrBhS,EAAAC,EAAAC,cAACiS,GAAD,CAAa/B,QAAS,kBAAMiB,QAEhC,KAER,OACIrR,EAAAC,EAAAC,cAACkS,GAAAnS,EAAD,CACI6L,UAAWF,EAAQoF,YACnBqB,YAAangB,IAAKC,EAAE,0BACpB2f,eAAgBA,EAChBI,aAAcA,EACd9c,MAAO+N,KAAKlM,MAAM7B,MAClBkd,SAAUnP,KAAKiO,eACfmB,QAASpP,KAAKoO,kBA1D9BL,EAAA,CAA4B1C,aAqE5B0C,GAAOzC,aAAe,CAClBzV,KAAM,GACNqY,aAAc5e,SAASC,WAGZ+Y,4BAAWZ,GAAXY,CAAmByF,yBC3ErBsB,GAAgB,GAEhBC,GAAb,SAAAtB,GAAA,SAAAsB,IAAA,IAAAC,EAAApG,EAAA1a,OAAA2a,EAAA,EAAA3a,CAAAuR,KAAAsP,GAAA,QAAAE,EAAA5Y,UAAAF,OAAA+Y,EAAA,IAAAje,MAAAge,GAAAE,EAAA,EAAAA,EAAAF,EAAAE,IAAAD,EAAAC,GAAA9Y,UAAA8Y,GAAA,OAAAvG,EAAA1a,OAAA4a,EAAA,EAAA5a,CAAAuR,MAAAuP,EAAA9gB,OAAA6a,EAAA,EAAA7a,CAAA6gB,IAAA/F,KAAAxJ,MAAAwP,EAAA,CAAAvP,MAAA5Q,OAAAqgB,MACI3b,MAAQ,CACJkS,KAAM4C,IAFdO,EAKIwG,yBAA2B,SAAA3J,GACvBmD,EAAKM,SAAS,CAAEzD,OAAMwC,YAAaxC,IAASqJ,MANpDlG,EAiBIiB,eAAiB,SAAAF,GACb,IAAM0F,EAAiB1F,EAAY,GAC7B2F,EAAU9U,KAAKO,IACjBsN,GACAE,GAAqB8G,IAGzB,GAAIC,IAAY1G,EAAKrV,MAAMkS,KAAM,CAC7B,IAAM8J,EAAc/U,KAAKgV,IAAIF,EAASR,IAEtClG,EAAKzL,MAAM0M,eAAe0F,KA3BtC3G,EA+BIW,UAAY,WACR,OAAOhE,GAAsBqD,EAAKrV,MAAMkS,OAhChDmD,EAmCI6G,kBAAoB,WAChB,IAAMhK,EACFmD,EAAKrV,MAAMkS,OAASqJ,GACdlG,EAAKzL,MAAMmH,SACXwK,GAEVlG,EAAKM,SAAS,CAAEzD,OAAMwC,aAAcW,EAAKrV,MAAM0U,eAzCvDW,EA4CI8G,kBAAoB,WAChB9G,EAAKzL,MAAMwS,QAAQC,KAAnB,IAAA/gB,OAA4B+Z,EAAKzL,MAAMjJ,WAAW,GAAG9F,MA7C7Dwa,EAAA,OAAA1a,OAAA8f,EAAA,EAAA9f,CAAA6gB,EAAAtB,GAAAvf,OAAA+f,EAAA,EAAA/f,CAAA6gB,EAAA,EAAAzJ,IAAA,oBAAA5T,MAAA,WAUQ+N,KAAK2P,yBAAyB3P,KAAKtC,MAAMmH,YAVjD,CAAAgB,IAAA,4BAAA5T,MAAA,SAa8Bwc,GACtBzO,KAAK2P,yBAAyBlB,EAAU5J,YAdhD,CAAAgB,IAAA,SAAA5T,MAAA,WAgDa,IAAAyc,EACwD1O,KAAKtC,MAA1DjJ,EADHia,EACGja,WAAYoB,EADf6Y,EACe7Y,KAAMua,EADrB1B,EACqB0B,WAAYC,EADjC3B,EACiC2B,mBAEhCC,EAAWtQ,KAAKlM,MAAM0U,YACtB6G,GACArP,KAAKlM,MAAMkS,KACXuK,EAAmBtH,GAAoBqH,GACvCE,EAAsB,CACxBC,QAAO,GAAArhB,OVnFqB,GUmFrB,gBACPshB,UAAW1Q,KAAKlM,MAAM0U,YAAc,OAAS,SAC7C9E,OAAQmF,GAAcyH,GVrFM,IUwFhC,OACIzT,EAAAC,EAAAC,cAAC4T,GAAD,CACIjN,OAAQ6M,EACRnG,eAAgBpK,KAAKoK,eACrBN,UAAW9J,KAAK8J,UAChBc,UAAU,GAEV/N,EAAAC,EAAAC,cAAA,OAAKC,MAAOwT,GACR3T,EAAAC,EAAAC,cAAA,OAAK4L,UAAWF,KAAQzX,cACpB6L,EAAAC,EAAAC,cAACyP,GAAA,EAAD,CACIxP,MAAO,CACHgP,QAAS,eACT7D,eAAgB,OAChByI,YAAa,GACb/B,SAAU,WACVnE,IAAK,OAET+B,GAAI,QAEJ5P,EAAAC,EAAAC,cAAC8T,GAAD,OAEJhU,EAAAC,EAAAC,cAAC+T,GAAD,CACIjb,KAAMA,EACNqY,aAAcmC,EACd/B,gBAAiBtO,KAAKiQ,qBAG7B3e,YAAQmD,GAAYiB,IAAI,SAAAT,GAAS,OAC9B4H,EAAAC,EAAAC,cAACgU,GAAD,CACIlL,IAAK5Q,EAAUtG,GACfyC,MAAO6D,EAAUa,YACjBZ,QAASD,EAAUC,QACnBd,YAAaa,EAAUtG,GACvBsI,SAAUhC,EAAUtG,KAAOyhB,OAIvCvT,EAAAC,EAAAC,cAACiU,GAAD,CACIzI,QAASvI,KAAKgQ,kBACdxH,YAAaxI,KAAKlM,MAAM0U,YACxBJ,SAAUpI,KAAKtC,MAAMmH,WAAawK,UArGtDC,EAAA,CAAmCjE,aAmH7B4F,GAAqB,CACvB7G,eAAgBjE,GAChBkK,mBC3I2B,SAAApe,GAAK,MAAK,CACrCnE,KHNsC,6BGOtCmE,WDgKWif,gBACXhU,YAjCoB,SAAApJ,GAAK,MAAK,CAC9BW,WAAYG,EAAkBd,GAC9B+B,KAAM6X,GAAe5Z,GACrB+Q,SAAUC,GAAuBhR,GACjCsc,WAAYlZ,GAAepD,KA+BvBmd,GAxBW,SAACE,EAAYC,EAAeC,GAC3C,IAAM5c,EAAahG,OAAOsG,OAAOrD,YAASyf,EAAW1c,aAC/C6c,EAAoBhc,IACtBb,EAAWO,OAAO,SAAAW,GAAC,OACfA,EAAEG,YAAY2R,cAAcxG,SAASkQ,EAAWtb,KAAK4R,iBAEzD,MACA,eAGJ,OAAOhZ,OAAA6F,EAAA,EAAA7F,CAAA,GACA0iB,EACAE,EACAD,EAHP,CAII3c,WAAU,GAAArF,OAAAX,OAAA4G,EAAA,EAAA5G,CACH6iB,EAAkBtc,OAAO,SAAAW,GAAC,OAAIA,EAAET,WAD7BzG,OAAA4G,EAAA,EAAA5G,CAEH6iB,EAAkBtc,OAAO,SAAAW,GAAC,OAAKA,EAAET,eAM5CgI,CAIEoS,KE3JSpS,eAJS,SAAApJ,GAAK,MAAK,CAC9B+Q,SAAUC,GAAuBhR,KAGtBoJ,CAXiB,SAAAQ,GAC5B,IAAMsI,EAAOtI,EAAMkN,SAAWhC,GAAgBlL,EAAMmH,SAC9CsH,EAAYnD,GAAahD,GAE/B,OAAOnJ,EAAAC,EAAAC,cAAA,OAAK4L,UAAU,4BAA4B3L,MAAO,CAAEmP,uGCMhDoF,GAfQ,SAAA3U,GAAA,IAAG4U,EAAH5U,EAAG4U,MAAH,OACnB3U,EAAAC,EAAAC,cAAC0U,GAAA,EAAD,CACIC,OAAK,EACL7L,IAAK2L,EACLpJ,UAAQ,EACRhX,MACIyL,EAAAC,EAAAC,cAAA,KAAGC,MAAO,CAAE4K,MAAOC,IAAOkF,QAAS9P,WAAY,QAAUuU,MCOtDG,GAdI,SAAA/U,GAAA,IAAG+L,EAAH/L,EAAG+L,UAAH,OACf9L,EAAAC,EAAAC,cAAA,OACI4L,UAAWA,EACX6C,MAAM,6BACN/H,MAAM,KACNC,OAAO,KACPgI,KAAM7D,IAAOkE,QACbN,QAAQ,aAER5O,EAAAC,EAAAC,cAAA,QAAMpH,EAAE,gBAAgB+V,KAAK,SAC7B7O,EAAAC,EAAAC,cAAA,QAAMpH,EAAE,8JCJVic,GAAa,SAAAhV,GAAA,IAAGjN,EAAHiN,EAAGjN,IAAH,OACfkN,EAAAC,EAAAC,cAAA,KACIwL,QAAS,SAAAsJ,GAAC,OAAIA,EAAE5H,mBAChBtB,UAAWF,KAAQtX,WACnBgd,OAAO,SACP2D,IAAI,sBACJC,KAAMpiB,GAENkN,EAAAC,EAAAC,cAACiV,GAAD,QAIFC,GAAe,kBACjBpV,EAAAC,EAAAC,cAAA,UAAQ4L,UAAWF,KAAQpX,cAAetC,IAAKC,EAAE,YA0BtCkjB,GAvBS,SAAApa,GAAmC,IAAhChK,EAAgCgK,EAAhChK,KAAM+H,EAA0BiC,EAA1BjC,KAAMsc,EAAoBra,EAApBqa,SAAUxiB,EAAUmI,EAAVnI,IACvCyiB,EAAWtiB,YAAYhC,GAE7B,OACI+O,EAAAC,EAAAC,cAAC0U,GAAA,EAAD,CACIC,OAAK,EACLnJ,QAAS4J,EACT/gB,MACIyL,EAAAC,EAAAC,cAAA,OAAK4L,UAAWF,KAAQvX,UACpB2L,EAAAC,EAAAC,cAAA,OAAK4L,UAAWF,KAAQrX,OACpByL,EAAAC,EAAAC,cAACqV,EAAD,CACIpV,MAAO,CAAE8O,OAAQ,MAAOJ,KAAM7D,IAAOkE,WAEzClP,EAAAC,EAAAC,cAAA,YAAOlH,GACNlG,EAAMkN,EAAAC,EAAAC,cAACsV,GAAD,CAAY1iB,IAAKA,IAAU,MAEtCkN,EAAAC,EAAAC,cAACuV,GAAD,UCxBPC,GAAc,CACvB,CACI5jB,GAAI,aACJ6jB,OAAQ,kBAAMzjB,IAAKC,EAAE,qBACrBkF,MAAO,CACH,CACIpG,KAAMX,IACN0I,KAAM,kBAAM9G,IAAKC,EAAE,aACnBqV,QAAS,IAEb,CACIvW,KAAMZ,IACN2I,KAAM,kBAAM9G,IAAKC,EAAE,aACnBqV,QAAS,QAEb,CACIvW,KAAMV,IACNyI,KAAM,kBAAM9G,IAAKC,EAAE,WACnBqV,QAAS3W,QAOZ+kB,GAAmB,CAC5BhmB,IACAC,IACAC,IACAC,IACAC,IACAI,IACAF,IACAC,IACAF,KAIS4lB,GAAgB,CAAC3lB,IAASC,IAAWC,0BCvC5C0lB,eACF,SAAAA,EAAYjV,GAAO,IAAAyL,EAAA,OAAA1a,OAAA2a,EAAA,EAAA3a,CAAAuR,KAAA2S,IACfxJ,EAAA1a,OAAA4a,EAAA,EAAA5a,CAAAuR,KAAAvR,OAAA6a,EAAA,EAAA7a,CAAAkkB,GAAApJ,KAAAvJ,KAAMtC,KAOVkV,QAAU,SAAA/kB,GAAI,OAAI,WAAM,IAAA6gB,EACsCvF,EAAKzL,MAAvD5P,EADY4gB,EACZ5gB,KAAMoW,EADMwK,EACNxK,mBAAoB2O,EADdnE,EACcmE,oBAElC,GAAI/kB,IAAShB,IACToX,EAAmB,CAAEpW,OAAMuW,QAASxW,EAAKgY,UACtC,CACH,IAAMiN,EAAU,CACZnkB,GAAId,EAAKc,GACTkH,KAAMhI,EAAKiI,aAAejI,EAAKgI,MAG/B6c,GAAczR,SAASnT,GACvB+kB,EAAoB/kB,EAAMglB,GAE1B5O,EAAmB,CAAEpW,OAAMuW,QAASyO,OAtB7B3J,EA2BnB4J,cAAgB,WACZ5J,EAAKM,SAAS,CAAEuJ,SAAU7J,EAAKrV,MAAMkf,UAErC7J,EAAKzL,MAAMuV,mBAAmB9J,EAAKzL,MAAM5P,OA3BzCqb,EAAKrV,MAAQ,CACTkf,SAAS,GAJE7J,wEAiCV,IAAA+J,EAAAlT,KAAAmT,EACmCnT,KAAKtC,MAArC8T,EADH2B,EACG3B,MAAO1jB,EADVqlB,EACUrlB,KAAMoG,EADhBif,EACgBjf,MAAOkf,EADvBD,EACuBC,QAC5B,OACIvW,EAAAC,EAAAC,cAACsW,EAAA,SAAD,KACIxW,EAAAC,EAAAC,cAACuW,GAAD,CAAgB9B,MAAOA,IACtBtd,EAAMwB,IAAI,SAAA7H,GACP,IAAM0lB,EAAU9jB,YAAW3B,EAAMD,EAAMqlB,EAAKM,QAAQ9jB,IACpD,OACImN,EAAAC,EAAAC,cAAC0W,GAAD,CACI5N,IAAKhY,EAAKc,IAAMd,EAAKgY,IACrB/X,KAAMA,EACN+H,KAAMhI,EAAKiI,aAAejI,EAAKgI,KAC/Bsc,SAAUe,EAAKN,QAAQ/kB,GACvB8B,IAAK4jB,MAIhBH,EACGvW,EAAAC,EAAAC,cAAC0U,GAAA,EAAD,CACIC,OAAK,EACL7L,IAAG,WAAAzW,OAAaoiB,GAChBjJ,QAASvI,KAAK+S,cACd3hB,MACIyL,EAAAC,EAAAC,cAAA,UAAQ4L,UAAWF,KAAQiL,gBACtB1T,KAAKlM,MAAMkf,QACNjkB,IAAKC,EAAE,cACPD,IAAKC,EAAE,gBAIzB,KACJ6N,EAAAC,EAAAC,cAAC4W,GAAA,EAAD,CAAS7H,OAAO,oBAjEGT,aA8EnCsH,GAAqBiB,aAAe,CAChClkB,GAAImkB,IAAUrgB,OAAOsgB,YAGV5W,mBACX,KACA,CACIgH,sBACA2O,oBC/F2B,SAAC/kB,EAAMuW,GAAP,OAAmB,SAAC/C,EAAUC,GAC7D,IAMIwS,EANEjgB,EAAQyN,IACRyS,EAAe9lB,IAAYJ,GAAMe,SACjC4H,EAAiBiM,GAAsB5O,GAAO2C,eAC9Cwd,EAAqBxd,EAAeyd,UACtC,SAAArmB,GAAI,OAAIA,EAAKC,OAASA,IAKtBmmB,GAAsB,IACtBF,EAAgBtd,EAAewd,IACjBD,GAAc7D,KAAK9L,GAEjC/C,EAASgD,GAAsByP,KAO/BzS,EAAS4C,GALT6P,EAAgB,CACZjmB,KAAMA,EACNuW,QAAS,CAACA,SDyEPnH,CAMbyV,IE7EazV,eACX,KACA,CAAEgH,uBAFShH,CApBiB,SAAAN,GAAsC,IAAnCsH,EAAmCtH,EAAnCsH,mBAAoBiQ,EAAevX,EAAfuX,SAC7CC,EAAiB,SAAAtc,GAAA,IAAGhK,EAAHgK,EAAGhK,KAAMuW,EAATvM,EAASuM,QAAT,OAAuB,WAC1CH,EAAmB,CAAEpW,OAAMuW,cAG/B,OACIxH,EAAAC,EAAAC,cAACsW,EAAA,SAAD,KACIxW,EAAAC,EAAAC,cAACuW,GAAD,CAAgB9B,MAAO2C,EAAS3B,WAC/B2B,EAASjgB,MAAMwB,IAAI,SAAA7H,GAAI,OACpBgP,EAAAC,EAAAC,cAAC0W,GAAD,CACI5N,IAAKhY,EAAKC,KACVA,KAAMD,EAAKC,KACX+H,KAAMhI,EAAKgI,OACXsc,SAAUiC,EAAevmB,UCPvCwmB,YAAkB,SAAA3W,GAAK,OACzBb,EAAAC,EAAAC,cAACuX,GAAA,EAAD,CACIC,QAAM,EACN1e,KAAK,wBACLzE,MAAOrC,IAAKC,EAAE,6CACdlB,KAAK,OACLqhB,SAAUzR,EAAMyR,SAChBqF,QAAS9W,EAAM8W,QACfviB,MAAOyL,EAAMzL,UAIfwiB,eACF,SAAAA,EAAY/W,GAAO,IAAAyL,EAAA,OAAA1a,OAAA2a,EAAA,EAAA3a,CAAAuR,KAAAyU,IACftL,EAAA1a,OAAA4a,EAAA,EAAA5a,CAAAuR,KAAAvR,OAAA6a,EAAA,EAAA7a,CAAAgmB,GAAAlL,KAAAvJ,KAAMtC,KAWVgX,UAAY,WACRvL,EAAKM,SAAS,CAAEjN,MAAM,EAAOxH,OAAQ,MAbtBmU,EAgBnBwL,SAAW,SAAA5K,GACPZ,EAAKyL,aAELzL,EAAKM,SAAS,CACVoL,SAAU9K,EAAM+K,cAChBtY,MAAM,KArBK2M,EAyBnB4L,UAAY,SAAAhL,GACRZ,EAAKM,SAAS,CAAEzU,OAAQ+U,EAAMoE,OAAOlc,OAASkX,EAAKyL,aA1BpCzL,EA6BnB6L,yBAA2B,kBACvBvC,GACKzd,OAAO,SAAAlH,GACJ,IAAMmnB,EAAW/mB,IAAYJ,GAC7B,OACIqb,EAAKrV,MAAMI,OAASiV,EAAKrV,MAAMI,MAAM+gB,EAASrmB,gBAGrD8G,IAAI,SAAA5H,GACD,IAAMmnB,EAAW/mB,IAAYJ,GACvBonB,EAAW/L,EAAKrV,MAAMI,MAAM+gB,EAASrmB,cACrCwkB,EAAU8B,EAASxe,OAAS,EAC5BxC,EAAQiV,EAAKrV,MAAMqhB,WAAW9P,IAAI4P,EAAStmB,IAC3CumB,EACAA,EAAS5hB,MAAM,EAAG,GAExB,OACIuJ,EAAAC,EAAAC,cAACqY,GAAD,CACIvP,IAAK/X,EACLA,KAAMA,EACN0jB,MAAOyD,EAASnmB,cAChBoF,MAAOA,EACP+e,mBAAoB9J,EAAKyL,WACzBxB,QAASA,OApDVjK,EAyDnBkM,qBAAuB,kBACnB9C,GAAY7c,IAAI,SAAAye,GAAQ,OACpBtX,EAAAC,EAAAC,cAACuY,GAAD,CAAkBzP,IAAKsO,EAASxlB,GAAIwlB,SAAUA,OA3DnChL,EA8DnBoM,cAAgB,kBACZpM,EAAK6L,2BAA2B5lB,OAAO+Z,EAAKkM,yBA/D7BlM,EAiEnByL,WAjEmB,eAAAhY,EAAAnO,OAAAuQ,EAAA,EAAAvQ,CAAAwQ,EAAAnC,EAAAoC,KAiEN,SAAAC,EAAMrR,GAAN,IAAAqnB,EAAAK,EAAAxgB,EAAA,OAAAiK,EAAAnC,EAAAwC,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,OACL3R,IACMqnB,EAAahM,EAAKrV,MAAMqhB,YAEf9P,IAAIvX,GACfqnB,EAAWvb,OAAO9L,GAElBqnB,EAAWM,IAAI3nB,GAGnBqb,EAAKM,SAAS,CAAE0L,gBAEhBhM,EAAKM,SAAS,CACV0L,WAAY,IAAIO,MAIpBF,EAAc,WACd/mB,OAAA4G,EAAA,EAAA5G,CAAI0a,EAAKrV,MAAMqhB,WAAWpgB,UAAU2B,SACpC8e,GACI,QAAU/mB,OAAA4G,EAAA,EAAA5G,CAAI0a,EAAKrV,MAAMqhB,WAAWpgB,UAAUsB,KAAK,UAGrDrB,EAASmU,EAAKrV,MAAMkB,OAAX,IAAA5F,OAAwB+Z,EAAKrV,MAAMkB,QAAW,GAE7DmU,EAAKqK,QAAQ9jB,GAAGuD,IAAIC,SACf4F,IADL,eAAA1J,OACwB4F,GADxB5F,OACiComB,IAC5B3c,KAAK,SAAAgL,GAAQ,OAAIsF,EAAKM,SAAS,CAAEvV,MAAO2P,MACxCrK,MAAMP,QAAQD,OA5BV,wBAAAuG,EAAAG,SAAAP,MAjEM,gBAAAQ,GAAA,OAAA/C,EAAAmD,MAAAC,KAAApJ,YAAA,GAGfuS,EAAKrV,MAAQ,CACT+gB,SAAU,KACVrY,MAAM,EACN2Y,WAAY,IAAIO,IAChBxhB,WAAOnB,EACPiC,OAAQ,IARGmU,wEAiGf,OACItM,EAAAC,EAAAC,cAACsW,EAAA,SAAD,KACIxW,EAAAC,EAAAC,cAAC4Y,GAAD,CACI1jB,MAAO+N,KAAKlM,MAAMkB,OAClBma,SAAUnP,KAAK+U,UACfP,QAASxU,KAAK2U,WAElB9X,EAAAC,EAAAC,cAAC6Y,GAAA9Y,EAAD,CACI6L,UAAU,0BACVnM,KAAMwD,KAAKlM,MAAM0I,KACjBuB,QAASiC,KAAK0U,UACdG,SAAU7U,KAAKlM,MAAM+gB,SACrBgB,aAAc,CAAEC,WAAY,OAAQC,SAAU,UAC9CC,gBAAiB,CAAEF,WAAY,OAAQC,SAAU,OACjD/Y,MAAO,CAAE0G,OAAQ,QACjBuS,WAAY,CAAEjZ,MAAO,CAAEyG,MAAO,UAC9ByS,kBAAkB,EAClBC,qBAAqB,GAErBtZ,EAAAC,EAAAC,cAACqZ,GAAA,EAAD,KAAOpW,KAAKuV,0BArHLnK,IAAMC,WA4HjCoJ,GAAab,aAAe,CACxBlkB,GAAImkB,IAAUrgB,OAAOsgB,YAGVW,UCpGF4B,GAAe,SAAAzZ,GAMtB,IALF/G,EAKE+G,EALF/G,KACAE,EAIE6G,EAJF7G,YACAugB,EAGE1Z,EAHF0Z,cACAC,EAEE3Z,EAFF2Z,oBACA9N,EACE7L,EADF6L,QAUA,OACI5L,EAAAC,EAAAC,cAAA,WAAS4L,UAAWF,EAAQ+N,SACxB3Z,EAAAC,EAAAC,cAAA,OAAK4L,UAAWF,EAAQgO,kBACpB5Z,EAAAC,EAAAC,cAACuX,GAAA,EAAD,CACI3L,UAAWF,EAAQ+I,MACnB+C,QAAM,EACN1e,KAAK,wBACLzE,MAAOrC,IAAKC,EAAE,mBACdlB,KAAK,OACLqhB,SAjBI,SAAA0C,GAChByE,EAAczE,EAAE1D,OAAOlc,QAiBXA,MAAO4D,IAEXgH,EAAAC,EAAAC,cAAC2Z,GAAA5Z,EAAD,CACI6L,UAAWF,EAAQ1S,YACnBF,KAAK,8BACLzE,MAAOrC,IAAKC,EAAE,yBACdmgB,SApBU,SAAA0C,GACtB0E,EAAoB1E,EAAE1D,OAAOlc,QAoBjBA,MAAO8D,EACP4gB,QAAQ,SACRC,WAAS,EACTC,WAAY,CACRpO,QAAS,CACLwC,KAAMxC,EAAQqO,MACdC,UAAWtO,EAAQsO,eAKnCla,EAAAC,EAAAC,cAAA,OAAK4L,UAAWF,EAAQuO,cACpBna,EAAAC,EAAAC,cAACka,GAAD,SAeVhG,GAAqB,CACvBqF,c9B7D+B,SAAArkB,GAAK,MAAK,CACzCnE,KN7C0B,iBM8C1BmE,U8B4DAskB,oB9BzDqC,SAAAtkB,GAAK,MAAK,CAC/CnE,KNjDgC,uBMkDhCmE,W8B0DWiL,eAdS,SAAApJ,GACpB,IAAMojB,EAAoBxlB,YAASgR,GAAsB5O,IAEzD,MAAO,CACH+B,KAAMqhB,EAAkBrhB,KACxBE,YAAamhB,EAAkBnhB,cAWnCkb,GAFW/T,CAGboL,qBAxGa,CACXkO,QAAS,CAAExK,QAAS,OAAQmL,eAAgB,iBAC5CV,iBAAkB,CACdW,KAAM,IACNxG,YAAa,QAEjBY,MAAO,CACHxF,QAAS,QACTqL,MAAO,QAEXthB,YAAa,CACTiW,QAAS,QACTqL,MAAO,OACPlL,UAAW,QAEf4K,UAAW,CACPO,YAAa,CACTC,aAAY,QAEhBC,kBAAmB,CACfD,aAAY,mBAGpBT,MAAO,CACHnM,gBAAiB,uBACjB8M,aAAc,MACdhU,MAAO,OACPyE,UAAW,CACPyC,gBAAiB,yBAGzBqM,aAAc,CACVI,KAAM,IACNvI,SAAU,aAuEhBvG,CAAmB+N,KASrBA,GAAa/K,aAAe,CACxBzV,KAAM,GACNE,YAAa,iJCnHX2hB,GAAOrR,oBAAiBE,GAAG5X,GAC3BgpB,GAAOtR,oBAAiBG,GAAG7X,GAE3BipB,8MACFC,UAAY,SAAAlpB,GAAE,OAAI,kBAAMwa,EAAKzL,MAAMma,UAAUlpB,oFAE7B,IAAA+f,EAC8C1O,KAAKtC,MAAvDuJ,EADIyH,EACJzH,oBAAqB6Q,EADjBpJ,EACiBoJ,UAAWC,EAD5BrJ,EAC4BqJ,cAClCC,EAAWF,EAAUnpB,GAErBspB,EAAc,CAChBvoB,GAAIsQ,KAAKwT,QAAQ9jB,GACjBwoB,SAAUlY,KAAKtC,MAAMwa,SACrBC,WAAYnY,KAAKtC,MAAMya,WACvBC,UAAWpY,KAAKtC,MAAM0a,WAG1B,OAAQJ,GACJ,KAAKN,GACD,OACI7a,EAAAC,EAAAC,cAACsb,GAAA,gBAAD5pB,OAAAiM,OAAA,CACI4d,gBAAiBP,GACbE,IAIhB,KAAKN,GACD,OACI9a,EAAAC,EAAAC,cAACsb,GAAA,iBAAD5pB,OAAAiM,OAAA,CACIuM,oBAAqBA,EACrBsR,QAASR,GACLE,IAGhB,QACI,OACIpb,EAAAC,EAAAC,cAACsb,GAAA,iBAAD5pB,OAAAiM,OAAA,CACIqd,cAAeA,EACfC,SAAUA,EACVQ,YAAaV,EAAUjiB,MACnBoiB,sCAMf,IAAA9E,EAC0BnT,KAAKtC,MAA5Boa,EADH3E,EACG2E,UAAW/Z,EADdoV,EACcpV,QACbia,EAAWF,EAAUnpB,GAE3B,OACIkO,EAAAC,EAAAC,cAAC0b,GAAA3b,EAAD,CACIN,OAAQwb,EACRU,SAAS,KACTC,qBAAmB,EACnB5a,QAASA,GAERia,GAAYhY,KAAK4Y,gBAClB/b,EAAAC,EAAAC,cAAC8b,GAAA/b,EAAD,KACID,EAAAC,EAAAC,cAAC+b,GAAA,EAAD,CAAQC,KAAK,YAAYxQ,QAASxK,GAC7BhP,IAAKC,EAAE,WAEZ6N,EAAAC,EAAAC,cAAC+b,GAAA,EAAD,CAAQC,KAAK,UAAUxQ,QAASvI,KAAK6X,UAAUG,IAC1CjpB,IAAKC,EAAE,qBA5DLqc,aA+E3BuM,GAAahE,aAAe,CACxBlkB,GAAImkB,IAAUrgB,QAGHokB,UCnGFoB,GAAuC,GAevCC,GAA2B,SAAAnlB,GAAK,OAAIA,EAAMolB,sBCb1CC,GAA4B,SAAAlnB,GAAK,MAAK,CAC/CnE,KDNsC,6BCOtCmE,UCoBEmnB,eACF,SAAAA,EAAY1b,GAAO,IAAAyL,EAAA,OAAA1a,OAAA2a,EAAA,EAAA3a,CAAAuR,KAAAoZ,IACfjQ,EAAA1a,OAAA4a,EAAA,EAAA5a,CAAAuR,KAAAvR,OAAA6a,EAAA,EAAA7a,CAAA2qB,GAAA7P,KAAAvJ,KAAMtC,KAOV2b,UAAY,SAAAtP,GACRZ,EAAKM,SAAS,CAAEoL,SAAU9K,EAAM+K,iBATjB3L,EAYnBmQ,WAAa,WACTnQ,EAAKM,SAAS,CAAEoL,SAAU,QAbX1L,EAgBnBoQ,YAAc,WACVpQ,EAAKM,SAAS,CAAEoL,SAAU,OAE1B1L,EAAKzL,MAAM8b,6BAnBIrQ,EAsBnBsQ,gBAAkB,SAAA9qB,GACdwa,EAAKzL,MAAMgc,wBAAwB,CAC/B/qB,KACAkH,KAAMsT,EAAKzL,MAAMkJ,WAAWjY,GAAIkH,QAzBrBsT,EA6BnBwQ,cAAgB,SAAA/c,GAA4B,IAAzBgd,EAAyBhd,EAAzBgd,YAAa1lB,EAAY0I,EAAZ1I,MAC5BiV,EAAKzL,MAAMmc,mBAAXprB,OAAA6F,EAAA,EAAA7F,CAAA,GACO0a,EAAKzL,MAAMqa,cADlBtpB,OAAA8F,EAAA,EAAA9F,CAAA,GAEKmrB,EAAc1lB,MAhCJiV,EAoCnB2Q,gBAAkB,SAAAhiB,GAAsC,IAAnC8hB,EAAmC9hB,EAAnC8hB,YAAaG,EAAsBjiB,EAAtBiiB,gBAExBC,GADU7Q,EAAKzL,MAAMqa,cAAc6B,IAAgB,IACjC5kB,OACpB,SAAAnH,GAAI,OAAKksB,EAAgB9Y,SAASpT,EAAKc,MAGvCqrB,EAAQtjB,OACRyS,EAAKzL,MAAMmc,mBAAXprB,OAAA6F,EAAA,EAAA7F,CAAA,GACO0a,EAAKzL,MAAMqa,cADlBtpB,OAAA8F,EAAA,EAAA9F,CAAA,GAEKmrB,EAAcI,KAGnB7Q,EAAKzL,MAAMuc,qBAAqBL,IAhDrBzQ,EAoDnB+Q,eAAiB,SAAAhiB,GAA8B,IAA3B0hB,EAA2B1hB,EAA3B0hB,YAAaO,EAAcjiB,EAAdiiB,QACvBC,EAAUjR,EAAKzL,MAAMqa,cAAc6B,IAAgB,GACnDS,EAAgBF,EAAQzkB,IAAI,SAAA/G,GAAE,OAChCyrB,EAAQtZ,KAAK,SAAAjT,GAAI,OAAIA,EAAKc,KAAOA,MAGrCwa,EAAKzL,MAAMmc,mBAAXprB,OAAA6F,EAAA,EAAA7F,CAAA,GACO0a,EAAKzL,MAAMqa,cADlBtpB,OAAA8F,EAAA,EAAA9F,CAAA,GAEKmrB,EAAcS,MA5DJlR,EAgEnBmR,WAAa,SAAA3rB,GACT,IAAM4rB,EAAcpR,EAAKzL,MAAMqa,cAAcppB,GAEzC4rB,GAAeA,EAAY7jB,OAC3ByS,EAAKzL,MAAM8c,cAAc,CACrB7rB,KACAsD,MAAMxD,OAAA4G,EAAA,EAAA5G,CAAK8rB,KAGfpR,EAAKzL,MAAM+c,iBAAiB9rB,GAGhCwa,EAAKoQ,eAzELpQ,EAAKrV,MAAQ,CACT+gB,SAAU,MAJC1L,wEA+EV,IAAAuF,EAQD1O,KAAKtC,MANLgd,EAFChM,EAEDgM,MACAzT,EAHCyH,EAGDzH,oBACA6Q,EAJCpJ,EAIDoJ,UACAlR,EALC8H,EAKD9H,WACA+T,EANCjM,EAMDiM,mBACA5C,EAPCrJ,EAODqJ,cAGJ,OACIlb,EAAAC,EAAAC,cAACsW,EAAA,SAAD,KACIxW,EAAAC,EAAAC,cAAC+b,GAAA,EAAD,CAAQvQ,QAASvI,KAAKqZ,WACjBtqB,IAAKC,EAAE,cACR6N,EAAAC,EAAAC,cAAC6d,GAAA9d,EAAD,OAEJD,EAAAC,EAAAC,cAAC6Y,GAAA9Y,EAAD,CACIN,KAAMqe,QAAQ7a,KAAKlM,MAAM+gB,UACzBA,SAAU7U,KAAKlM,MAAM+gB,SACrBgB,aAAc,CAAEE,SAAU,SAAUD,WAAY,QAChD/X,QAASiC,KAAKsZ,WACdtc,MAAO,CACH0G,OAAQ,OACRoX,WAAYJ,EAAMK,WAAWD,aAGjCje,EAAAC,EAAAC,cAACsb,GAAA,gBAAD,CACIzR,WAAYA,EACZoU,iBAAkBhb,KAAKyZ,gBACvBwB,YAAaN,KAGpB7C,EACGjb,EAAAC,EAAAC,cAACme,GAAD,CACIjU,oBAAqBA,EACrB6Q,UAAWA,EACXC,cAAeA,EAAcD,EAAUnpB,KAAO,GAC9CupB,SAAUlY,KAAK2Z,cACfxB,WAAYnY,KAAK8Z,gBACjB1B,UAAWpY,KAAKka,eAChBnc,QAASiC,KAAKuZ,YACd1B,UAAW7X,KAAKsa,aAEpB,aA3HSjP,aAyIdnO,eARS,SAAApJ,GAAK,MAAK,CAC9BmT,oBAAqBI,GAAgCvT,GACrDgkB,UAAWmB,GAAyBnlB,GACpC8S,WAAYD,GAAe7S,GAC3B6mB,mBAAoBvX,GAAgBtP,GACpCikB,cAAehV,GAAwBjP,KAKvC,CACI0lB,0BD7JmC,iBAAO,CAC9C1rB,KDVwC,iCEuKpC4rB,wBAAyBP,GACzBqB,crC9JuB,SAAAxlB,GAAM,MAAK,CACtClH,KDV2B,kBCW3BkH,WqC6JIylB,iBAAkBnX,GAClB2W,qBAAsB1W,GACtBsW,mBpC3J4B,SAAAsB,GAAO,MAAK,CAC5CrtB,KHhBiC,wBGiBjCqtB,aoCiJWje,CAUbke,sBAAYhC,0BCzJCiC,8MAhBXC,MAAO,0EAIH,OADAtb,KAAKsb,MAAQtb,KAAKsb,KACXtb,KAAKsb,sCAGP,IAAApI,EAAAlT,KACL,OACInD,EAAAC,EAAAC,cAAA,OAAKwL,QAAS,kBAAM2K,EAAKxV,MAAM6K,QAAQ2K,EAAKqI,YACxC1e,EAAAC,EAAAC,cAACye,GAAA1e,EAAD,CAAiBE,MAAO,CAAE0O,KAAM7D,IAAOkE,mBAXpCV,aCsBb3D,GAAS,CACX+T,QAAS,CACLzP,QAAS,OACT0P,WAAY,SACZC,WAAY,QAEhBC,SAAU,CACNlQ,KAAM7D,IAAOkE,SAEjB8P,WAAY,CACRC,SAAU,OACVpR,IAAK,OAETqR,SAAU,CACN/P,QAAS,eACTC,cAAe,MACf9D,eAAgB,OAChByI,YAAa,OAEjBoL,SAAU,CACNhQ,QAAS,OACT0P,WAAY,cAEhBO,aAAc,CACVN,WAAY,EACZ9M,SAAU,WACVnE,IAAK,EACL3C,OAAQ,YAIVmU,eACF,SAAAA,EAAYxe,GAAO,IAAAyL,EAAA,OAAA1a,OAAA2a,EAAA,EAAA3a,CAAAuR,KAAAkc,IACf/S,EAAA1a,OAAA4a,EAAA,EAAA5a,CAAAuR,KAAAvR,OAAA6a,EAAA,EAAA7a,CAAAytB,GAAA3S,KAAAvJ,KAAMtC,KAOVye,oBAAsB,kBAClBhT,EAAKM,SAAS,CAAE2S,qBAAsBjT,EAAKrV,MAAMsoB,uBANjDjT,EAAKrV,MAAQ,CACTsoB,qBAAqB,GAJVjT,wEAWV,IAAAuF,EAYD1O,KAAKtC,MAVL/O,EAFC+f,EAED/f,GACAkH,EAHC6Y,EAGD7Y,KACAE,EAJC2Y,EAID3Y,YACAQ,EALCmY,EAKDnY,OACAyG,EANC0R,EAMD1R,MACAjG,EAPC2X,EAOD3X,gBACA7B,EARCwZ,EAQDxZ,QACAmnB,EATC3N,EASD2N,YACAC,EAVC5N,EAUD4N,YACA7T,EAXCiG,EAWDjG,QAGE8T,EAAa9tB,OAAOiM,OAAO,GAAIsC,EAAMwU,MAAO,CAC9CzJ,OAAQ,UACRyU,WAAY,OACZ9R,IAAK,QAGHa,EAAWrW,EAAUqX,KAAOkQ,KAElC,OACI5f,EAAAC,EAAAC,cAACsW,EAAA,SAAD,KACIxW,EAAAC,EAAAC,cAAA,OAAK4L,UAAWF,EAAQuT,UACpBnf,EAAAC,EAAAC,cAAA,QAAMC,MAAOuf,GAAa1mB,GAC1BgH,EAAAC,EAAAC,cAAA,OAAK4L,UAAWF,EAAQgT,SACpB5e,EAAAC,EAAAC,cAAA,OACI4L,UAAWF,EAAQwT,aACnB1T,QAAS8T,GAETxf,EAAAC,EAAAC,cAACwO,EAAD,CAAU5C,UAAWF,EAAQmT,YAEjC/e,EAAAC,EAAAC,cAAA,OAAK4L,UAAWF,EAAQwT,cACpBpf,EAAAC,EAAAC,cAAC2f,GAAD,CAAMnU,QAAS+T,KAEnBzf,EAAAC,EAAAC,cAAA,OAAKC,MAAO,CAAE2e,WAAY,SACrBplB,EAAOomB,OACJ9f,EAAAC,EAAAC,cAACyP,GAAA,EAAD,CACI7D,UAAWF,EAAQsT,SACnBtP,GAAE,IAAArd,OAAMT,EAAN,UAEFkO,EAAAC,EAAAC,cAAC+b,GAAA,EAAD,KAAS/pB,IAAKC,EAAE,UAEpB,KACHuH,EAAOqmB,OACJ/f,EAAAC,EAAAC,cAAA,QAAMC,MAAO,CAAE4T,YAAa,QACxB/T,EAAAC,EAAAC,cAAC+b,GAAA,EAAD,CAAQvQ,QAASvI,KAAKmc,qBACjBptB,IAAKC,EAAE,WAGhB,KACJ6N,EAAAC,EAAAC,cAAA,QAAMC,MAAO,CAAE4T,YAAa,QACxB/T,EAAAC,EAAAC,cAAC8f,GAAD,UAKf9lB,EACG8F,EAAAC,EAAAC,cAAA,OACI4L,UAAU,wBACV3L,MAAOvO,OAAOiM,OACV,CAAEuN,WAAY,MAAO8C,cAAe,OACpC/N,EAAMjH,YACLA,EAAkC,GAApB,CAAE6R,MAAO,UAG3B7R,GAAehH,IAAKC,EAAE,mBAE3B,KACHL,EACGkO,EAAAC,EAAAC,cAAC+f,GAAAhgB,EAAD,CACIpN,GAAIsQ,KAAKwT,QAAQ9jB,GACjBf,GAAIA,EACJb,KAAK,YACL0O,KAAMwD,KAAKlM,MAAMsoB,oBACjBW,eAAgB/c,KAAKmc,sBAEzB,aA1FO9Q,aA4HZnO,eA5BS,SAAApJ,GACpB,IAAMnF,EAAKuI,GAAepD,GACpBmB,EAAYvD,YAASgD,EAAkBZ,EAAOnF,IAEpD,MAAO,CACHA,KACAkH,KAAMZ,EAAUa,YAChBC,YAAad,EAAUe,mBACvBS,eAAgB5B,EAAmBf,GACnCiD,gBAAiBK,GAA4BtD,GAC7CoB,QAASD,EAAUC,QACnBqB,OAAQ7E,YAASuD,EAAUsB,UAmB/B,KAfe,SAAC4a,EAAYC,EAAeC,GAAa,IAChD1iB,EAAiCwiB,EAAjCxiB,GAAIuG,EAA6Bic,EAA7Bjc,QAAS6B,EAAoBoa,EAApBpa,gBACbuK,EAAa8P,EAAb9P,SAER,OAAO7S,OAAA6F,EAAA,EAAA7F,CAAA,GACA0iB,EACAE,EAFP,CAGIgL,YAAa,kBAAM/a,EnChEG,SAAC3S,EAAI+K,GAAL,sBAAAxB,EAAAzJ,OAAAuQ,EAAA,EAAAvQ,CAAAwQ,EAAAnC,EAAAoC,KAAmB,SAAAsG,EAAOlE,EAAUC,GAAjB,IAAAQ,EAAAhJ,EAAA,OAAAkG,EAAAnC,EAAAwC,KAAA,SAAAoG,GAAA,cAAAA,EAAAlG,KAAAkG,EAAAjG,MAAA,cACvCsC,EAAY,SAAApT,GAEd,OADA2S,EAASkD,GAAsB7V,EAAI+K,IAC5B/K,GAGLoK,EAAU,SAAAC,GAEZ,OADAC,QAAQC,IAAI,6BAA8BF,GACnCA,GARkC0M,EAAAlG,KAAA,EAAAkG,EAAAjG,KAAA,EAWnChG,GAAiB9K,EAAI+K,GAXc,cAAAgM,EAAApF,OAAA,SAYlCyB,EAAUpT,IAZwB,cAAA+W,EAAAlG,KAAA,EAAAkG,EAAA9D,GAAA8D,EAAA,SAAAA,EAAApF,OAAA,SAclCvH,EAAO2M,EAAA9D,KAd2B,yBAAA8D,EAAAhG,SAAA8F,EAAA,iBAAnB,gBAAA1F,EAAAS,GAAA,OAAArI,EAAA6H,MAAAC,KAAApJ,YAAA,GmCgEMomB,CAAeruB,GAAKuG,KAChDonB,YAAa,kBACThb,E7CvI0C,CAClDxT,KZpCwC,+BYqCxCmE,O6CqI+C8E,QAIpCmG,CAIboL,qBAAWZ,GAAXY,CAAmB4T,KAWrBA,GAAa5Q,aAAe,CACxBzV,KAAM,GACNE,YAAa,GACbb,SAAS,EACT6B,iBAAiB,EACjBulB,YAAa,MAGjBJ,GAAatI,aAAe,CACxBlkB,GAAImkB,IAAUrgB,oBCrMZwJ,GAAQ,CACVwU,MAAO,CACH3C,SAAU,WACV7G,SAAU,GACV/K,WAAY,IACZ2K,MAAOC,IAAOoV,MACdnB,SAAU,IAEd/lB,YAAa,CACTiS,SAAU,GACVJ,MAAOC,IAAOkF,UAqBPmQ,GAjBE,SAAAtgB,GAAc,IAAXugB,EAAWvgB,EAAXugB,KAChB,OACItgB,EAAAC,EAAAC,cAAA,OACI4L,UAAU,mBACV3L,MAAO,CACHyT,QAAS,uBAGZ0M,EACGtgB,EAAAC,EAAAC,cAACqgB,GAAD,CAAcpgB,MAAOA,KAErBH,EAAAC,EAAAC,cAACsgB,GAAD,CAAcrgB,MAAOA,uGCjB/BsgB,eAGF,SAAAA,EAAY5f,EAAO8V,GAAS,IAAArK,EAAA,OAAA1a,OAAA2a,EAAA,EAAA3a,CAAAuR,KAAAsd,IACxBnU,EAAA1a,OAAA4a,EAAA,EAAA5a,CAAAuR,KAAAvR,OAAA6a,EAAA,EAAA7a,CAAA6uB,GAAA/T,KAAAvJ,KAAMtC,KAHV6f,kBAAoB,KAEQpU,EAM5BqU,mBAAqB,SAAAC,GAMjB,IAAMC,EAAgBvU,EAAKzL,MAAM7P,OAAS4vB,EAAU5vB,KAE9C8vB,EAAiBF,EAAUta,cAAgBgG,EAAKzL,MAAMyF,YACtDya,EAAMlsB,YAASyX,EAAKzL,MAAM0B,eAC1Bye,EAAUnsB,YAAS+rB,EAAUre,eAC7B0e,EACFF,EAAIjvB,KAAOkvB,EAAQlvB,IAAMivB,EAAI3f,aAAe4f,EAAQ5f,WAExD,OAAOyf,IAAkBI,GAAcH,IApBfxU,EAuB5B4U,aAAe,SAAAN,GACX,GACIO,GACI7U,EAAKzL,MAAM7P,KACXsb,EAAKzL,MAAM0B,gBAEf+J,EAAKqU,mBAAmBC,GAC1B,CACE,IAAMI,EAAUnsB,YAAS+rB,EAAUre,eAC7B6e,EAAa9U,EAAKzL,MAAM0B,cAExB8e,EACFD,EAAWhgB,aAAe4f,EAAQ5f,YAClCggB,EAAWhgB,aAAekL,EAAKzL,MAAM7P,KAAKC,MAG1CowB,GACA/U,EAAKzL,MAAMyF,cAAgBsa,EAAUta,eAErC6a,GACI7U,EAAKzL,MAAM7P,KACXgwB,EAAQ5f,YAAckL,EAAKzL,MAAM7P,KAAKC,MAG1CkwB,GACI7U,EAAKzL,MAAM7P,KACXsb,EAAKzL,MAAM0B,cACX+J,EAAKoU,kBACLW,EAAgBD,EAAWhgB,WAAa,SAnD5BkL,EA+E5BgV,cAAgB,kBACZhV,EAAKzL,MAAM0B,cAAcnB,YAAckL,EAAKzL,MAAM7P,KAAKC,MA7EvDqb,EAAKzZ,GAAK8jB,EAAQ9jB,GAHMyZ,mFAVN,IAAAzZ,EAoElBsQ,KAAKud,mBApEa7tB,EAoEyBsQ,KAAKtQ,GAnE7C,CACH0D,QAASvD,YAAWH,GACpBkP,KAAMlP,EAAGuD,IAAIC,SAASkrB,eAAeC,gBAoEjCL,GACIhe,KAAKtC,MAAM7P,KACXmS,KAAKtC,MAAM0B,gBAGf4e,GACIhe,KAAKtC,MAAM7P,KACXmS,KAAKtC,MAAM0B,cACXY,KAAKud,kBACJvd,KAAKtC,MAAMkN,SAAkC,KAAvB5K,KAAKme,4DAKrBV,GACfzd,KAAK+d,aAAaN,oCAMb,IAAA/O,EAC2C1O,KAAKtC,MAA7C+K,EADHiG,EACGjG,QAAS5a,EADZ6gB,EACY7gB,KAAMuR,EADlBsP,EACkBtP,cAAepC,EADjC0R,EACiC1R,MAMtC,OAL0BghB,GACtBnwB,EACAuR,GAIAvC,EAAAC,EAAAC,cAAA,OAAKpO,GAAI6M,GAAiB3N,EAAKc,IAAKqO,MAAOA,IAE3CH,EAAAC,EAAAC,cAAA,OAAK4L,UAAWF,EAAQ6V,SACnBvvB,IAAKC,EAAE,mDAhGIqc,aAsG5BiS,GAAc1J,aAAe,CACzBlkB,GAAImkB,IAAUrgB,QAUlB8pB,GAAchS,aAAe,CACzBtO,MAAO,GACPnP,KAAM,GACNsV,YAAa,GACb/D,cAAe,IAGJke,UCtIFiB,GAAgB,GAkBdC,GAhBI,SAAA9gB,GAAS,IAChB8T,EAAmC9T,EAAnC8T,MAAOiN,EAA4B/gB,EAA5B+gB,cAAe7T,EAAalN,EAAbkN,SAE9B,OACI/N,EAAAC,EAAAC,cAAA,OAAK4L,UAAU,yBACX9L,EAAAC,EAAAC,cAAA,OACI4L,UAAU,8BACV3L,MAAO,CAAEwf,WAAY5R,EAAW,OAAS,SAExC4G,GAEJiN,yBCTPzhB,GAAQ,CACV0hB,gBAAiB,CACbhO,UAAW,OACXhN,OAAQ,SAEZib,KAAM,CACF7S,OAAQ,eACRpI,OAAQ,MACRkb,OAAQ,OACRjU,gBAAiB9C,IAAOgX,UAI1BC,oLAEE,IAAMC,EAAWlgB,GAAMmB,KAAKtC,MAAM7P,MAElC,OACIgP,EAAAC,EAAAC,cAAA,OAAK4L,UAAU,yBACX9L,EAAAC,EAAAC,cAAA,MAAIC,MAAOA,GAAM2hB,OACjB9hB,EAAAC,EAAAC,cAAA,OAAKC,MAAOA,GAAM0hB,iBACd7hB,EAAAC,EAAAC,cAACiiB,GAAAliB,EAAD,CACIpN,GAAIsQ,KAAKwT,QAAQ9jB,GACjB7B,KAAMmS,KAAKtC,MAAM7P,KACjBC,KAAMkS,KAAKtC,MAAM7P,KAAKC,KAAK2Z,cAC3B9Y,GAAIowB,EACJ1vB,QAAQ,uBAbPgc,aAqBzByT,GAAWlL,aAAe,CACtBlkB,GAAImkB,IAAUrgB,OAAOsgB,YAOVgL,8FC9BAG,YAdU,SAAAriB,GAA4C,IAAzCwL,EAAyCxL,EAAzCwL,SAAUG,EAA+B3L,EAA/B2L,QAAS2C,EAAsBtO,EAAtBsO,SAAUlO,EAAYJ,EAAZI,MACrD,OACIH,EAAAC,EAAAC,cAAA,UACIqL,SAAUA,EACVta,KAAK,SACL6a,UAAU,qBACV3L,MAAOA,EACPuL,QAASA,GAER2C,KCUPlO,GAAQ,CACVkiB,SAAU,CACNzb,MAAO,OACPC,OAAQ,OACRgI,KAAM7D,IAAOQ,SAEjB8W,WAAY,CACR1O,QAAS,mBAEb2O,eAAgB,CACZ3O,QAAS,kBACT4O,QAAS,GACTtX,OAAQ,SAEZuX,oBAAqB,CACjB7O,QAAS,mBAEbmO,OAAQ,CACJnH,aAAc,MACdmH,OAAM,aAAAxvB,OAAeyY,IAAO0X,WAI9BC,GAAY,CACdtT,KAAMlP,GAAMkiB,SACZO,UAAWziB,GAAMmiB,YAGfO,GAAgB,CAClBxT,KAAMlP,GAAMkiB,SACZO,UAAWziB,GAAMoiB,gBAGfO,GAAc,CAChBzT,KAAKzd,OAAA6F,EAAA,EAAA7F,CAAA,GAAMuO,GAAMkiB,SAAb,CAAuBxT,KAAMgP,IAAMkF,aACvCH,UAAUhxB,OAAA6F,EAAA,EAAA7F,CAAA,GACHuO,GAAMmiB,WADJ,CAELxU,gBAAiB+P,IAAMmF,cAIzBC,GAAgB,SAAA1X,GAAQ,OAAKA,EAAWsX,GAAgBF,IAejDO,GAAgB,SAAC7xB,EAAagB,EAAmBD,GAM1D,OALaR,OAAOsG,OAAO7G,GAAa4S,KACpC,SAAAjT,GAAI,OACAA,EAAKqB,oBAAsBA,GAC3BrB,EAAKoB,aAAeA,IAEhBN,IAsHDqxB,wMA7GkB,IAAAtR,EACgB1O,KAAKtC,MAAtCuiB,EADiBvR,EACjBuR,aAAcC,EADGxR,EACHwR,eAEhBC,EAAmBF,EAAeN,GAAcH,GAEhDY,EAAY3xB,OAAA6F,EAAA,EAAA7F,CAAA,GACX0xB,EADW,CAEdV,UAAUhxB,OAAA6F,EAAA,EAAA7F,CAAA,GACH0xB,EAAiBV,UACjBziB,GAAMsiB,oBACNtiB,GAAM4hB,UAIjB,OACI/hB,EAAAC,EAAAC,cAACsW,EAAA,SAAD,KACIxW,EAAAC,EAAAC,cAACsjB,GAAD,CACIrjB,MAAOojB,EAAaX,UACpBlX,QAAS2X,GAETrjB,EAAAC,EAAAC,cAACujB,GAAAxjB,EAAD,CAAaE,MAAOojB,EAAalU,8DAMpB,IA/BV+I,EAAUsL,EA+BApN,EAMrBnT,KAAKtC,MAJL7P,EAFqBslB,EAErBtlB,KACAuR,EAHqB+T,EAGrB/T,cACAohB,EAJqBrN,EAIrBqN,sBACAviB,EALqBkV,EAKrBlV,WAGJ,GAvCegX,EAuCGpnB,EAAKC,KAvCEyyB,EAuCInhB,EAActR,KAtC/CmnB,IAAa1nB,KACbgzB,IAAc9yB,IAsCN,OAAO,KAGX,IAAMwB,EAAaf,IAAYL,EAAKC,MAAMmB,WAkBtCmZ,GAAW,EAEXva,EAAKC,OAASP,KACV2Q,GAAgBrQ,GAAMC,KAAK2yB,MAAM,qBACjCrY,GAAW,GAInB,IAAMsY,EA5FQ,SAACziB,EAAYmK,GAAb,MAClB,CAAC3b,IAAcG,KAAcqU,SAAShD,GAChC0hB,GACAG,GAAc1X,GAyFSuY,CAAc1iB,EAAYmK,GAC7CwY,EAxFQ,SAAC3iB,EAAYmK,GAAb,MAClB,CAAC1b,IAAOG,KAAaoU,SAAShD,GACxB0hB,GACAG,GAAc1X,GAqFSyY,CAAc5iB,EAAYmK,GAC7C0Y,EApFM,SAAC7iB,EAAYmK,GAAb,MAChB,CAACzb,KAAKsU,SAAShD,GAAc0hB,GAAcG,GAAc1X,GAmF9B2Y,CAAY9iB,EAAYmK,GAE/C,OACIvL,EAAAC,EAAAC,cAAA,OAAKC,MAAO,CAAE2e,WAAY,KACtB9e,EAAAC,EAAAC,cAAA,OAAKC,MAAOA,GAAM4hB,QACd/hB,EAAAC,EAAAC,cAACsjB,GAAD,CACIjY,SAAUA,EACVpL,MAAO0jB,EAAiBjB,UACxBlX,QAlCI,kBAChBiY,EACIT,GAAc7xB,IAAaZ,IAA0B2B,MAkC7C4N,EAAAC,EAAAC,cAACikB,GAAAlkB,EAAD,CAAWE,MAAO0jB,EAAiBxU,QAEvCrP,EAAAC,EAAAC,cAACsjB,GAAD,CACIjY,SAAUA,EACVpL,MAAO4jB,EAAiBnB,UACxBlX,QApCI,kBAChBiY,EACIT,GAAc7xB,IAAaX,IAA0B0B,MAoC7C4N,EAAAC,EAAAC,cAACkkB,GAAAnkB,EAAD,CAAWE,MAAO4jB,EAAiB1U,QAEtCjd,IAAe5B,IACZwP,EAAAC,EAAAC,cAACsjB,GAAD,CACIjY,SAAUA,EACVpL,MAAO8jB,EAAerB,UACtBlX,QAvCF,kBACdiY,EACIT,GAAc7xB,IAAaV,IAAwByB,MAuCvC4N,EAAAC,EAAAC,cAACmkB,GAAApkB,EAAD,CAASE,MAAO8jB,EAAe5U,QAEnC,wCAOhB,OACIrP,EAAAC,EAAAC,cAACsW,EAAA,SAAD,KACKrT,KAAKmhB,6BACLnhB,KAAKohB,qCAxGuB/V,aCvE9BgW,GAlBI,SAAAC,GACf,IAAIC,OAAWxuB,EACXyuB,OAAYzuB,EAEhB,OAAO,WAAa,QAAAyc,EAAA5Y,UAAAF,OAAT+Y,EAAS,IAAAje,MAAAge,GAAAE,EAAA,EAAAA,EAAAF,EAAAE,IAATD,EAASC,GAAA9Y,UAAA8Y,GAChB,OACI6R,GACA9R,EAAK/Y,SAAW6qB,EAAS7qB,QACzB+Y,EAAKgS,MAAM,SAACC,EAAK/mB,GAAN,OAAY+mB,IAAQH,EAAS5mB,KAEjC6mB,GAEXD,EAAW9R,EACX+R,EAAYF,EAAEvhB,WAAF,EAAM0P,MCSpB/H,GAAS,CACXwE,KAAM,CACFzI,MAAO,GACPC,OAAQ,GACRiY,WAAY,EACZ5T,OAAQ,UACR2D,KAAM7D,IAAOkE,SAEjByF,MAAO,CACHmQ,SAAU,SACVjJ,SAAU,MACVkJ,aAAc,WACdC,WAAY,UAEhBvD,QAAS,CACLtW,SAAU,OACV8Z,YAAa,SACbrR,QAAS,OACTsR,WAAY,SAIdC,GAAe,SAAC5iB,EAAe+b,GACjC,IAAK1sB,OAAO4U,KAAK8X,GAASzkB,OACtB,OAAO0I,EAIX,IAAM6iB,EAAU7iB,EAAc4G,KAAKtQ,IAAI,SAAA3D,GAAG,OAAAtD,OAAA6F,EAAA,EAAA7F,CAAA,GAAUsD,KAC9CmwB,EAAa9iB,EAAc+iB,QAAQzsB,IAAI,SAAA3D,GAAG,OAAAtD,OAAA6F,EAAA,EAAA7F,CAAA,GAAUsD,KACpDqwB,EAAahjB,EAAc+b,QAAQzlB,IAAI,SAAA3D,GAAG,OAAAtD,OAAA6F,EAAA,EAAA7F,CAAA,GAAUsD,KAyB1D,OAvBAtD,OAAO4U,KAAK8X,GAAS9Y,QAAQ,SAAAuX,GACzB,GAAIuB,EAAQvB,GAAc,CACtB,IAAIyI,GAAiB,EAErB,CAACJ,EAASC,EAAYE,GAAY/f,QAAQ,SAAAigB,GAAgB,OACtDA,EACKttB,OAAO,SAAAjD,GAAG,OAAIA,EAAI+lB,YAAc8B,IAChCvX,QAAQ,SAAAtQ,GACLswB,GAAiB,EACjBtwB,EAAImC,MAAQinB,EAAQvB,OAK3ByI,GACDD,EAAWjS,KAAK,CACZ2H,UAAW8B,EACX1lB,MAAOinB,EAAQvB,QAMxBnrB,OAAA6F,EAAA,EAAA7F,CAAA,GACA2Q,EADP,CAEI4G,KAAMic,EACNE,QAASD,EACT/G,QAASiH,KAIJG,GAAb,SAAAvU,GAMI,SAAAuU,EAAY7kB,EAAO8V,GAAS,IAAArK,EAAA,OAAA1a,OAAA2a,EAAA,EAAA3a,CAAAuR,KAAAuiB,IACxBpZ,EAAA1a,OAAA4a,EAAA,EAAA5a,CAAAuR,KAAAvR,OAAA6a,EAAA,EAAA7a,CAAA8zB,GAAAhZ,KAAAvJ,KAAMtC,KANV5J,MAAQ,CACJ0uB,YAAY,EACZC,cAAc,GAGUtZ,EAmB5BuZ,aAAerB,GAAW,kBAAMsB,SAnBJxZ,EAqB5BoU,kBAAoB,KArBQpU,EAuB5ByZ,mBAAqB,WACjB,IAAMxjB,EAAgBsB,GAClByI,EAAKzL,MAAM0B,cACX+J,EAAKzL,MAAM7P,KAAKC,KAChBqb,EAAKgV,iBAGT,IAAK/e,EACD,OACIvC,EAAAC,EAAAC,cAAA,OAAK4L,UAAWQ,EAAKzL,MAAM+K,QAAQ6V,SAC9BvvB,IAAKC,EAAE,uBAKpB,IAAM0O,EAAKjP,OAAA6F,EAAA,EAAA7F,CAAA,GACJ0a,EAAKzL,MADD,CAEP0B,gBACApC,MAAOmM,EAAK0Z,oBAGhB,OAAQ1Z,EAAKgV,iBACT,KAAKzxB,IACD,OACImQ,EAAAC,EAAAC,cAAC+lB,GAAA,EAAD,CACIpzB,GAAIyZ,EAAKzZ,GACT8O,OAAQwjB,GACJtkB,EAAM0B,cACN1B,EAAMyF,aAEV4f,cAAc,EACd/lB,MAAOU,EAAMV,QAIzB,KAAKrQ,IACD,GAAI+Q,EAAM7P,KAAKC,OAASnB,IAAK,CAGzB,IAAMkU,EAAWnD,EAAM0B,cAAcyB,SAASnL,IAAI,SAAA3D,GAC9C,OACIA,EAAIiP,MAAMC,SAAS,aACnBlP,EAAIiP,MAAMC,SAAS,SAEZ+gB,GAAajwB,EAAK2L,EAAMyF,aAG5BpR,IAGX2L,EAAM0B,cAAN3Q,OAAA6F,EAAA,EAAA7F,CAAA,GACOiP,EAAM0B,cADb,CAEIyB,kBAMJnD,EAAM0B,cAAgB4iB,GAClBtkB,EAAM0B,cACN1B,EAAMyF,aAId,OAAOtG,EAAAC,EAAAC,cAACimB,GAAkBtlB,GAE9B,QAMI,OALAA,EAAM0B,cAAgB4iB,GAClBtkB,EAAM0B,cACN1B,EAAMyF,aAGHtG,EAAAC,EAAAC,cAACimB,GAAkBtlB,KA/FVyL,EAoG5B+W,eAAiB,WACb/W,EAAKM,SACD,CAAE+Y,YAAarZ,EAAKrV,MAAM0uB,YAC1BrZ,EAAKzL,MAAMulB,qBAAqB9Z,EAAKzL,MAAM7P,KAAKc,MAvG5Bwa,EA2G5BqX,sBAAwB,SAAAviB,GAEhBA,IAAekL,EAAKgV,kBAIxBH,GAAsB7U,EAAKzL,MAAM7P,KAAMsb,EAAKgV,iBAE5ChV,EAAKzL,MAAM8iB,sBACPrX,EAAKzL,MAAM0B,cAAczQ,GACzBwa,EAAKzL,MAAM7P,KAAKC,KAChBmQ,KAtHoBkL,EA0H5BgV,cAAgB,kBACZhV,EAAKzL,MAAM0B,cAAcnB,YAAckL,EAAKzL,MAAM7P,KAAKC,MA3H/Bqb,EA6H5BnL,kBAAoB,kBAChBggB,GACI7U,EAAKzL,MAAM7P,KACXsb,EAAKzL,MAAM0B,gBAhIS+J,EAmI5B+Z,SAAW,WAAM,IAAAxU,EACuBvF,EAAKzL,MAAjC7P,EADK6gB,EACL7gB,KAAM+c,EADD8D,EACC9D,SAAUnC,EADXiG,EACWjG,QAClB0a,EAAWnF,GAAsBnwB,GAEvC,OACIgP,EAAAC,EAAAC,cAAA,OAAKC,MAAO,CAAEgP,QAAS,SACnBnP,EAAAC,EAAAC,cAAA,QAAM4L,UAAWF,EAAQ+I,MAAOA,MAAO2R,GAClCA,IAEHvY,GAAYzB,EAAKnL,oBACfnB,EAAAC,EAAAC,cAAA,KACIgV,KAAMiM,GAAsB7U,EAAKzL,MAAM7P,KAAMsb,EAAKzZ,IAClDsN,MAAO,CAAE0G,OAAQ,IACjB8N,MAAK,WAAApiB,OAAalB,IACdib,EAAKzL,MAAM7P,KAAKC,MAClBuB,UAFG,SAILwN,EAAAC,EAAAC,cAACqmB,GAAAtmB,EAAD,CAAY6L,UAAWF,EAAQyD,QAEnC,OAtJY/C,EA2J5Bka,iBAAmB,kBACfrF,GACI7U,EAAKzL,MAAM7P,KACXsb,EAAKzL,MAAM0B,iBACT+J,EAAKzL,MAAMkN,SACb/N,EAAAC,EAAAC,cAACumB,GAAD,CACIz1B,KAAMsb,EAAKzL,MAAM7P,KACjBuR,cAAe+J,EAAKzL,MAAM0B,cAC1B6gB,aAAc9W,EAAKrV,MAAM0uB,WACzBvkB,WAAYkL,EAAKgV,gBACjBqC,sBAAuBrX,EAAKqX,sBAC5BN,eAAgB/W,EAAK+W,iBAEzB,MAxKoB/W,EA0K5B0Z,gBAAkB,WAAM,IAAA1P,EACOhK,EAAKzL,MAAxB7P,EADYslB,EACZtlB,KAGR,OAJoBslB,EACNvI,SAOR,CAAElH,OAAQyF,EAAKoa,WAAWC,cAH1B,CACI9f,OAAQ7V,EAAKuN,eAAiBmjB,GAJjB,IAzKvBpV,EAAKzZ,GAAK8jB,EAAQ9jB,GAElByZ,EAAKoa,WAAanY,IAAMqY,YALAta,EANhC,OAAA1a,OAAA8f,EAAA,EAAA9f,CAAA8zB,EAAAvU,GAAAvf,OAAA+f,EAAA,EAAA/f,CAAA8zB,EAAA,EAAA1c,IAAA,oBAAA5T,MAAA,eAAAyxB,EAAAj1B,OAAAuQ,EAAA,EAAAvQ,CAAAwQ,EAAAnC,EAAAoC,KAAA,SAAAC,IAAA,OAAAF,EAAAnC,EAAAwC,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAF,EAAAqC,GAeQ5B,KAAKtC,MAfb6B,EAAAE,KAAA,EAiBkBue,GAAoBhe,KAAKtC,MAAM7P,MAjBjD,OAAA0R,EAAAoG,GAAApG,EAAAc,KAAAd,EAAAqC,GAemB+hB,sBAfnBpa,KAAAhK,EAAAqC,GAAArC,EAAAoG,IAoBQ3F,KAAKyJ,SAAS,CACVgZ,cAAc,IArB1B,wBAAAljB,EAAAG,SAAAP,EAAAa,SAAA,yBAAA0jB,EAAA3jB,MAAAC,KAAApJ,YAAA,KAAAiP,IAAA,SAAA5T,MAAA,WA2La,IAAAihB,EAAAlT,KAAA4jB,EACmC5jB,KAAKtC,MAArC7P,EADH+1B,EACG/1B,KAAM+c,EADTgZ,EACShZ,SAAUzH,EADnBygB,EACmBzgB,YAChBqf,EAAexiB,KAAKlM,MAApB0uB,WAER,OACI3lB,EAAAC,EAAAC,cAACsW,EAAA,SAAD,KACIxW,EAAAC,EAAAC,cAAC8mB,GAAD,CACIrS,MAAOxR,KAAKkjB,WACZzE,cAAeze,KAAKqjB,mBACpBzY,SAAUA,IAEd/N,EAAAC,EAAAC,cAAA,OACI8I,IAAK7F,KAAK0iB,aAAavf,GACvBwF,UAAU,yBACVmb,IAAK,SAAAA,GAAG,OAAK5Q,EAAKqQ,WAAaO,IAE9B9jB,KAAKlM,MAAM2uB,cAAgBziB,KAAK4iB,uBAEnChY,GAAY4X,EAAa3lB,EAAAC,EAAAC,cAACgnB,GAAD,CAAYl2B,KAAMA,IAAW,UA7MxE00B,EAAA,CAA0BlX,aAmN1BkX,GAAK3O,aAAe,CAChBlkB,GAAImkB,IAAUrgB,QAWlB+uB,GAAKjX,aAAe,CAChBzd,KAAM,GACN+c,UAAU,EACVqY,qBAAsB3zB,SAASC,UAC/B4T,YAAa,GACb/D,cAAe,IAGnB,OAeelC,eAfS,SAACpJ,EAAOud,GAAR,MAAsB,CAC1ClO,YAAaD,GAAoBpP,GACjCsL,cAAe5H,GACX1D,EACAkqB,GAA8B3M,EAASxjB,MAAMc,MAI1B,SAAA2S,GAAQ,MAAK,CACpCqiB,sBAAuB,SAAAvkB,GAAa,OAChCkC,EAASF,GAAwBhC,KACrCohB,sBAAuB,SAAC7xB,EAAIb,EAAMmQ,GAAX,OACnBqD,ErDxRqC,SAAC3S,EAAIb,EAAMmQ,GACpD,IAAMpH,EAAS,CACX/I,KXhDqC,gCWiDrCa,MAOJ,OAJIsP,IAAenQ,IACf+I,EAAOoH,WAAaA,GAGjBpH,EqD8QMmtB,CAA8Br1B,EAAIb,EAAMmQ,OAG1Cf,CAGboL,qBAAWZ,GAAXY,CAAmBia,KC/UfvlB,GAAQ,CACV2N,gBAAiB9C,IAAO0X,QACxBX,OAAQ,OACRlb,OAAQ,MACRoI,OAAQ,mBAKGmY,GAFF,SAAAvmB,GAAK,OAAIb,EAAAC,EAAAC,cAAA,MAAIC,MAAOA,MCG3BknB,YAAU,WAEVC,IAAYC,GAAA,GAAA31B,OAAA8F,EAAA,EAAA9F,CAAA21B,GACbF,GAAU,WADGz1B,OAAA8F,EAAA,EAAA9F,CAAA21B,GAAA,oBAEK,cAFL31B,OAAA8F,EAAA,EAAA9F,CAAA21B,GAAA,SAGN,UAHM31B,OAAA8F,EAAA,EAAA9F,CAAA21B,GAAA,SAIN,UAJMA,IAOZpnB,GAAQ,CACVrM,KAAM,CACF0zB,cAAe,OACfC,YAAa,OAEjBC,OAAQ,CACJ7b,UAAW,SACXV,SAAU,OACVwc,aAAc,OAElBC,OAAQ,CACJzc,SAAU,OACV+Z,WAAY,OACZjW,OAAQ,EACRlE,MAAOC,IAAOkF,SAElB2X,QAAS,CACL9c,MAAOC,IAAOkF,QACd/E,SAAU,OACV+Z,WAAY,OACZ4C,UAAW,OACXhD,SAAU,WAIZiD,8MACF9wB,MAAQ,CACJ5B,SAAU,MAWd2yB,eAAiB,SAAAjhB,GACb,IAAMkhB,EAAgBlhB,EAAG,KAAAxU,OAAQwU,EAAImhB,YAAZ,KAAA31B,OAA2BwU,EAAIjV,IAAO,GAC/D,SAAAS,OAAU+Z,EAAKqK,QAAQpgB,QAAvB,wBAAAhE,OAAqD01B,MAGzDE,iBAAmB,SAAAphB,GACf,IAAMqhB,EAAYrhB,EAAIzH,SAAS7I,OAAO,GAAG,GACzC,OAAO2xB,EAAUR,OAASQ,EAAUR,OAAO3uB,YAAc,MAG7DovB,gBAAkB,WACd,IAAMC,EAAahc,EAAKzL,MAAMkN,SAAoB,KAAT,OAEzC,OAAOzB,EAAKzL,MAAMvB,SAASzG,IAAI,SAAAkO,GAC3B,IAMM6gB,EACF7gB,EAAImhB,cAAgBb,GACd/a,EAAK6b,iBAAiBphB,GACtBugB,GAAavgB,EAAImhB,aAErBK,EAAaxhB,EAAIyhB,KAAkB,KAAX,SACxBJ,EAAYrhB,EAAIzH,SAAS7I,OAAO,GAAG,GACnCgyB,EAAUL,EAAU3uB,YAE1B,OACIuG,EAAAC,EAAAC,cAAA,MACI4L,UAAS,gBAAAvZ,OAAkB+1B,GAC3Btf,IAAKjC,EAAIjV,GACT4Z,QAnBc,WACbY,EAAKzL,MAAMkN,WACZjP,SAAS4pB,SAASxT,KAAO5I,EAAK0b,eAAejhB,MAmB7C/G,EAAAC,EAAAC,cAAA,KAAG4L,UAAS,iBAAAvZ,OAAmBg2B,IAC1BxhB,EAAI9N,YADT,KACwB8N,EAAI4hB,aAD5B,KAGA3oB,EAAAC,EAAAC,cAAA,KAAGC,MAAOA,GAAMynB,QACXA,EADL,MACgBzyB,YAAWszB,EAASnc,EAAKrV,MAAM5B,WAE/C2K,EAAAC,EAAAC,cAAA,KAAGC,MAAOA,GAAM0nB,SAAUO,EAAUl3B,2NAhDzBiS,KAAKwT,QAAQ9jB,GAAGyV,YAAYsgB,aAAa3sB,IAC5D,sBADE5G,SAIN8N,KAAKyJ,SAAS,CAAEvX,gJAmDhB,OACI2K,EAAAC,EAAAC,cAACsW,EAAA,SAAD,KACIxW,EAAAC,EAAAC,cAAC8mB,GAAD,CAAYrS,MAAOziB,IAAKC,EAAE,cAC1B6N,EAAAC,EAAAC,cAAC2oB,GAAD,MACC1lB,KAAKtC,MAAMvB,SAASzF,OAAS,GAC1BmG,EAAAC,EAAAC,cAAA,OAAK4L,UAAU,0BACX9L,EAAAC,EAAAC,cAAA,MAAIC,MAAOA,GAAMrM,MAAOqP,KAAKklB,mBAC7BroB,EAAAC,EAAAC,cAAA,OAAKC,MAAOA,GAAMunB,QACd1nB,EAAAC,EAAAC,cAAA,KAAGgV,KAAM/R,KAAK6kB,kBACT91B,IAAKC,EAAE,+BAtEbqc,aAgF3BuZ,GAAahR,aAAe,CACxBlkB,GAAImkB,IAAUrgB,OACdJ,QAASygB,IAAU8R,QAGvB,IAWeC,GALW1oB,YANF,SAAApJ,GACpB,MAAO,CACHqI,SAAU1N,OAAOsG,OAAOmH,GAAiBpI,MAM7C,KAFsBoJ,CAGxB0nB,yBCtHaiB,GAnBU,SAAAnoB,GAAK,OAC1Bb,EAAAC,EAAAC,cAACsW,EAAA,SAAD,KACIxW,EAAAC,EAAAC,cAAC8mB,GAAD,CAAYrS,MAAK,4BAAApiB,OAA8BsO,EAAM7P,KAAKC,QAC1D+O,EAAAC,EAAAC,cAAA,OACIC,MAAO,CACHgP,QAAS,OACTmL,eAAgB,SAChBuE,WAAY,SACZhY,OAAQ,QAGZ7G,EAAAC,EAAAC,cAAC+oB,GAAAhpB,EAAD,CACIE,MAAO,CAAEyG,MAAO,IAAKC,OAAQ,IAAKqiB,MAAO,UACzCne,MAAM,gBCFPzX,GAZS,SAAAyM,GAAA,IAAG+L,EAAH/L,EAAG+L,UAAH,OACpB9L,EAAAC,EAAAC,cAAA,OACI4L,UAAWA,EACX6C,MAAM,6BACNC,QAAQ,YACRC,KAAM7D,IAAOQ,SAEbxL,EAAAC,EAAAC,cAAA,QAAMpH,EAAE,gBAAgB+V,KAAK,SAC7B7O,EAAAC,EAAAC,cAAA,QAAMpH,EAAE,qICMDqwB,GAdI,SAAAppB,GAAA,IAAG+L,EAAH/L,EAAG+L,UAAH,OACf9L,EAAAC,EAAAC,cAAA,OACI4L,UAAWA,EACX6C,MAAM,6BACN/H,MAAM,KACNC,OAAO,KACP+H,QAAQ,YACRC,KAAM7D,IAAOoe,QAEbppB,EAAAC,EAAAC,cAAA,QAAMpH,EAAE,kFACRkH,EAAAC,EAAAC,cAAA,QAAMpH,EAAE,gBAAgB+V,KAAK,gCCC/Bwa,GAAe,SAAAr4B,GAAI,OAAIK,IAAYL,EAAKC,MAAMgB,eAQ9Cq3B,GAAgB,SAACC,EAASv4B,EAAMw4B,GAAhB,OAAoC,WACtDD,EAAQv4B,EAAMw4B,KAGZC,GAAW,SAAC5oB,EAAO8V,GAAY,IACzB3lB,EAA2C6P,EAA3C7P,KAAM+c,EAAqClN,EAArCkN,SAAU2b,EAA2B7oB,EAA3B6oB,uBAClBC,EAZc,SAAA34B,GAAI,OACxByD,YAAQzD,EAAKK,IAAYL,EAAKC,MAAMe,WAAWmG,OAC3C,SAACnH,EAAM+H,EAAO/D,GAAd,OACIA,EAAMqiB,UAAU,SAAAxY,GAAE,OAAIA,EAAG/M,KAAOd,EAAKc,OAAQiH,IAShC6wB,CAAgB54B,GA8BrC,OACIgP,EAAAC,EAAAC,cAACsW,EAAA,SAAD,KACIxW,EAAAC,EAAAC,cAAC8mB,GAAD,CAAYrS,MAAO0U,GAAar4B,KAChCgP,EAAAC,EAAAC,cAAC2oB,GAAD,MACA7oB,EAAAC,EAAAC,cAAA,OAAK4L,UAAU,0BACX9L,EAAAC,EAAAC,cAAA,MAAI4L,UAAWF,KAAQ9X,MAClB61B,EAAa9wB,IAAI,SAAAgxB,GAAW,OACzB7pB,EAAAC,EAAAC,cAAA,MAAI4L,UAAWF,KAAQ5a,KAAMgY,IAAK6gB,EAAY/3B,IAC1CkO,EAAAC,EAAAC,cAAC4pB,GAAD,CAAiBhe,UAAWF,KAAQ7X,WApC5C,SAAA81B,GACZ,IAAME,EACF/pB,EAAAC,EAAAC,cAAA,UACI4L,UAAWF,KAAQ1X,aACnBwX,QAAS4d,GACLI,EACA14B,EACA64B,IAGJ7pB,EAAAC,EAAAC,cAAC8pB,GAAD,CAAYle,UAAWF,KAAQ3X,cAIvC,OACI+L,EAAAC,EAAAC,cAACsW,EAAA,SAAD,KACIxW,EAAAC,EAAAC,cAAA,KACI4L,UAAWF,KAAQ5X,KACnBmM,MAAO,CAAE4K,MAAOC,IAAOif,SACvB/U,KAAMtiB,YAAW5B,EAAKC,KAAM44B,EAAalT,EAAQ9jB,KAEhDg3B,EAAY7wB,MAEhB+U,EAAWgc,EAAe,MAcd7nB,CAAQ2nB,UASrCJ,GAAS1S,aAAe,CACpBlkB,GAAImkB,IAAUrgB,QAGH0J,mBACX,KACA,CACIqpB,uBC7E8B,SAACxS,EAAe1P,GAAhB,OAA4B,SAAA/C,GAC9D,IAAM0S,EAAe9lB,IAAY6lB,EAAcjmB,MAAMe,SAE/Ck4B,EAAahT,EAAcC,GAAchf,OAC3C,SAAAnH,GAAI,OAAIA,EAAKc,KAAO0V,EAAQ1V,KAG5Bo4B,EAAWrwB,QACXqd,EAAcC,GAAgB+S,EAC9BzlB,EAASgD,GAAsByP,KAE/BzS,EAASiD,GAAsBwP,OD+DxB7W,CAKbopB,cEtEItpB,GAAQ,CACVshB,QAAS,CACL7N,QAAS,OACToR,WAAY,WACZE,WAAY,QAEhBiF,UAAW,CACPhf,SAAU,OACV8Z,YAAa,SACbre,MAAO,MACPqI,OAAQ,SACRE,QAAS,QACT+V,WAAY,QAEhBtC,UAAW,CACP+E,aAAc,OACdrY,UAAW,SA6DJjP,eAZS,SAACpJ,EAAOud,GAC5B,IAIMxjB,GAJQwjB,EAASzG,SACjB/H,GAAuB/O,GACvBe,EAAmBf,IAENgN,KAAK,SAAAjT,GAAI,OAAIA,EAAKc,KAAO0iB,EAASxjB,KAAKc,KAE1D,MAAO,CACHZ,KAAMF,EAAOA,EAAKE,KAAO,KAM7B,CACIuW,0BAHOpH,CAzDE,SAAAQ,GAAS,IACd7P,EAAgD6P,EAAhD7P,KAAM+c,EAA0ClN,EAA1CkN,SAAU7c,EAAgC2P,EAAhC3P,KAAMuW,EAA0B5G,EAA1B4G,sBAExB2iB,EAAe,SAAAld,GACjB,IAAMmd,EAAWz4B,OAAA6F,EAAA,EAAA7F,CAAA,GACVZ,EADU,CAEbE,KAAMgc,EAAMoE,OAAOlc,QAGvBqS,EAAsB4iB,IAiC1B,OAAOrqB,EAAAC,EAAAC,cAACsW,EAAA,SAAD,KAAWzI,EAnBV/N,EAAAC,EAAAC,cAACsW,EAAA,SAAD,KACIxW,EAAAC,EAAAC,cAAC8mB,GAAD,CAAYrS,MAAOziB,IAAKC,EAAE,eAC1B6N,EAAAC,EAAAC,cAAC2oB,GAAD,MACA7oB,EAAAC,EAAAC,cAAA,OAAK4L,UAAU,0BACX9L,EAAAC,EAAAC,cAACoqB,GAAA,OAAD,CAAgBC,OAAQH,GACpBpqB,EAAAC,EAAAC,cAACkS,GAAAnS,EAAD,CACI7K,MAAOlE,EACP6oB,WAAS,EACTyQ,WAAS,EACTrqB,MAAOA,GAAMgqB,UACb9X,YAAangB,IAAKC,EAAE,iBACpBmgB,SAAU8X,OAtBjB,WACb,IAAMK,EAAe74B,OAAOiM,OAAO,GAAIsC,GAAMgqB,UAAWhqB,GAAMshB,SAC9D,OACIzhB,EAAAC,EAAAC,cAAA,OAAK4L,UAAU,yBAAyB3L,MAAOA,GAAMyiB,WACjD5iB,EAAAC,EAAAC,cAACoqB,GAAA,OAAD,CAAgBnqB,MAAOsqB,GAAev5B,IA0BRw5B,MCnExCC,GAAe,SAACC,EAAY55B,EAAMsV,GACpC,IAAIukB,EAAS,GAAAt4B,OAAMq4B,EAAW73B,UAAjB,qBAAAR,OAA8CvB,EAAKc,IAEhE,GACIwU,GACAA,EAAW,IACXA,EAAW,GAAkBzM,OAC/B,CACE,IAAMixB,EAAQxkB,EAAW,GAAkBzN,IACvC,SAAAkyB,GAAM,OAAIA,EAAOxxB,MAAM,KAAK9C,OAAO,GAAG,KAG1Co0B,GAAS,gBAAAt4B,OAAoBu4B,EAAMtxB,KAAK,MAG5C,OAAOqxB,GAGLG,GAAU,SAAAjrB,EAAwB4W,GAAY,IAC5CiU,EADW55B,EAAiC+O,EAAjC/O,KAAMsV,EAA2BvG,EAA3BuG,YAGf2kB,EAASj6B,EAAKi6B,OAQpB,OANIA,IACAL,EAAajU,EAAQ9jB,GAAGq4B,OAAOC,cAAclnB,KACzC,SAAAmnB,GAAG,OAAIA,EAAIpiB,MAAQiiB,KAIpBL,GAAcA,EAAW5xB,MAAQ4xB,EAAW73B,UAC/CiN,EAAAC,EAAAC,cAACsW,EAAA,SAAD,KACIxW,EAAAC,EAAAC,cAAC8mB,GAAD,CAAYrS,MAAOiW,EAAW5xB,OAC9BgH,EAAAC,EAAAC,cAAC2oB,GAAD,MACA7oB,EAAAC,EAAAC,cAAA,UACIyU,MAAOiW,EAAW5xB,KAClBqyB,IAAKV,GAAaC,EAAY55B,EAAMsV,GACpCwF,UAAU,yBACV3L,MAAO,CAAE4hB,OAAQ,WAIzB/hB,EAAAC,EAAAC,cAACsW,EAAA,SAAD,KACIxW,EAAAC,EAAAC,cAAC8mB,GAAD,CAAYrS,MAAK,GAAApiB,OAAK04B,EAAL,oBACjBjrB,EAAAC,EAAAC,cAAC2oB,GAAD,MACA7oB,EAAAC,EAAAC,cAAA,OACI4L,UAAU,yBACV3L,MAAO,CACHgP,QAAS,OACTmL,eAAgB,SAChBuE,WAAY,SACZhY,OAAQ,QAGZ7G,EAAAC,EAAAC,cAAC+oB,GAAAhpB,EAAD,CACI8K,MAAM,WACNQ,UAAQ,EACRpL,MAAO,CAAEyG,MAAO,IAAKC,OAAQ,IAAKqiB,MAAO,eAO7D8B,GAAQjU,aAAe,CACnBlkB,GAAImkB,IAAUrgB,QAGlB,IAIe0J,eAJS,SAAApJ,GAAK,MAAK,CAC9BqP,YAAaD,GAAoBpP,KAGtBoJ,CAAyB2qB,IC3ElC7qB,GAAQ,CACV8O,OAAQ,YACR9D,SAAU,OACV+Z,WAAY,OACZna,MAAOC,IAAOkE,SAgBHoc,GAbI,WACf,OACItrB,EAAAC,EAAAC,cAACsW,EAAA,SAAD,KACIxW,EAAAC,EAAAC,cAAC8mB,GAAD,CAAYrS,MAAOziB,IAAKC,EAAE,YAC1B6N,EAAAC,EAAAC,cAAA,KAAGC,MAAOA,IACLjO,IAAKC,EACF,iFC+BPuzB,GAAO,SAAA7kB,GAChB,IAAM0qB,EA1BU,SAAAt6B,GAChB,OAAQA,GACJ,KAAKrB,IACL,KAAKC,IACL,KAAKC,IACL,KAAKE,IACL,KAAKD,IACD,OAAOy7B,GACX,KAAKn7B,IACD,OAAO03B,GACX,KAAK73B,IACL,KAAKC,IACL,KAAKC,IACD,OAAOq5B,GACX,KAAKn5B,IACD,OAAOm7B,GACX,KAAKl7B,IACD,OAAO+6B,GACX,KAAKr7B,IACD,OAAO+6B,GACX,QACI,OAAOhC,IAKE0C,CAAY7qB,EAAM7P,KAAKC,MAExC,OACI+O,EAAAC,EAAAC,cAACqrB,EAAD,CACIv6B,KAAM6P,EAAM7P,KACZ+c,SAAUlN,EAAMkN,SAChBzH,YACIzF,EAAMkN,SAAW3H,GAA6BvF,EAAMyF,YAExD8f,qBAAsBvlB,EAAMulB,6CCvDlCjmB,GAAQ,CACVkQ,OAAQ,CACJ2B,SAAU,WACVnE,IAAK,MACL8d,MAAO,MACP5qB,OAAQ,QAEZsO,KAAM,CACFR,KAAM7D,IAAOoe,SAUNwC,GANgB,SAAA7rB,GAAA,IAAG2L,EAAH3L,EAAG2L,QAAH,OAC3B1L,EAAAC,EAAAC,cAACsjB,GAAD,CAAkB9X,QAASA,EAASvL,MAAOA,GAAMkQ,QAC7CrQ,EAAAC,EAAAC,cAAC2rB,GAAA5rB,EAAD,CAAYE,MAAOA,GAAMkP,SCFlByc,GAdiB,SAAA/rB,GAAA,IAAG7O,EAAH6O,EAAG7O,KAAH,OAC5B8O,EAAAC,EAAAC,cAAA,OACIC,MAAO,CACHyT,QAAS,YACT/H,UAAW,SACXV,SAAU,OACV/K,WAAY,IACZ2K,MAAOC,IAAOkE,UAGjBhe,yCCNH66B,8MAWF90B,MAAQ,CACJ+0B,YAAY,KAEhBC,aAAe,OACfC,kBAAoB,sFAGhB,IAAMC,EAAWhpB,KAAKtC,MAAMurB,aAAetf,OAAOuf,YAElD,GAAKlpB,KAAK8oB,aAAV,CAIA,IAAMK,EAAOnpB,KAAK8oB,aAAaM,wBAE3BD,EAAKE,QAAUL,GACfG,EAAKze,IAAMf,OAAOuf,YAAcF,IAEhChpB,KAAKyJ,SAAS,CACVof,YAAY,IAGhB7oB,KAAKspB,4DAIK,IAAApW,EAAAlT,KACdA,KAAK+oB,kBAAoBrc,KACrB,kBAAMwG,EAAKqW,mBACXvpB,KAAKtC,MAAM8rB,YAGf7f,OAAOC,iBAAiB,SAAU5J,KAAK+oB,2DAGvCpf,OAAOW,oBAAoB,SAAUtK,KAAK+oB,+DAI1C/oB,KAAKypB,kBACLzpB,KAAKupB,iEAILvpB,KAAKspB,iDAGA,IAAAI,EAAA1pB,KAAA0O,EACoD1O,KAAKtC,MAAtDwN,EADHwD,EACGxD,SAAuCxN,GAD1CgR,EACa8a,WADb9a,EACyBua,aADzBx6B,OAAAk7B,GAAA,EAAAl7B,CAAAigB,EAAA,2CAEGma,EAAe7oB,KAAKlM,MAApB+0B,WAER,OACIhsB,EAAAC,EAAAC,cAAA,MAAAtO,OAAAiM,OAAA,CAAKopB,IAAK,SAAAA,GAAG,OAAK4F,EAAKZ,aAAehF,IAAUpmB,GAC3CmrB,GAAc3d,UAhEWG,aAApCud,GAMKtd,aAAe,CAClBke,WAVkB,IAWlBP,aAVoB,KAwEbL,UC/BFgB,GAAb,SAAA5b,GAAA,SAAA4b,IAAA,IAAAra,EAAApG,EAAA1a,OAAA2a,EAAA,EAAA3a,CAAAuR,KAAA4pB,GAAA,QAAApa,EAAA5Y,UAAAF,OAAA+Y,EAAA,IAAAje,MAAAge,GAAAE,EAAA,EAAAA,EAAAF,EAAAE,IAAAD,EAAAC,GAAA9Y,UAAA8Y,GAAA,OAAAvG,EAAA1a,OAAA4a,EAAA,EAAA5a,CAAAuR,MAAAuP,EAAA9gB,OAAA6a,EAAA,EAAA7a,CAAAm7B,IAAArgB,KAAAxJ,MAAAwP,EAAA,CAAAvP,MAAA5Q,OAAAqgB,MACI3b,MAAQ,CACJ+1B,cAAe,IAFvB1gB,EAKI8Z,qBAAuB,SAAA6G,GACnB,IAAMC,EAC6C,mBAAxC5gB,EAAKrV,MAAM+1B,cAAcC,IAC1B3gB,EAAKrV,MAAM+1B,cAAcC,GAG7BD,EAAap7B,OAAA6F,EAAA,EAAA7F,CAAA,GAAQ0a,EAAKrV,MAAM+1B,eACtCA,EAAcC,IAAcC,EAC5B5gB,EAAKM,SAAS,CAAEogB,mBAbxB1gB,EAgBI6gB,aAAe,SAAAF,GACX3gB,EAAKzL,MAAM6G,sBAAsBulB,IAjBzC3gB,EA0BI8gB,eAAiB,SAAAC,GACT/gB,EAAKzL,MAAMyf,MACXhU,EAAKzL,MAAMysB,wBAAwBD,IA5B/C/gB,EAgCIihB,aAAe,SAACC,EAAQC,EAASxX,GAC7BrX,GAAaqX,EAAQnY,GAErB,IAAMoZ,EAAgB5K,EAAKzL,MAAMjH,eAAeqK,KAC5C,SAAAjT,GAAI,OAAIA,EAAKc,KAAOmkB,EAAQnY,IAI5BoZ,GAAiB9lB,YAAa8lB,IAC9BwW,GAAaxW,IAzCzB5K,EA6CIqhB,oBAAsB,SAAA77B,GAAE,OAAI,kBAAMwa,EAAK6gB,aAAar7B,KA7CxDwa,EAAA,OAAA1a,OAAA8f,EAAA,EAAA9f,CAAAm7B,EAAA5b,GAAAvf,OAAA+f,EAAA,EAAA/f,CAAAm7B,EAAA,EAAA/jB,IAAA,4BAAA5T,MAAA,SAoB8Bwc,GAClBA,EAAU0O,MACVnd,KAAKyJ,SAAS,CAAEogB,cAAe,OAtB3C,CAAAhkB,IAAA,SAAA5T,MAAA,WA+Ca,IAAAihB,EAAAlT,KAAA0O,EACuC1O,KAAKtC,MAAzCyf,EADHzO,EACGyO,KAAMrmB,EADT4X,EACS5X,UAAWL,EADpBiY,EACoBjY,eAEzB,IAAKK,IAAcL,EAAeC,OAC9B,OACImG,EAAAC,EAAAC,cAAC0tB,GAAD,CACI18B,KAAMgB,IAAKC,EAAE,0CAKzB,IAAMkF,EAAQuC,EAAef,IAAI,SAAA7H,GAC7B,IAAM68B,EAAexX,EAAKpf,MAAM+1B,cAAch8B,EAAKc,IAC/Cg8B,EAAQ,CAAExwB,EAAGtM,EAAKsM,GAMtB,OAJIuwB,IAAiC,IAAjBA,IAChBC,EAAMxwB,EAAItM,EAAKsM,EAjEP,IAoEL1L,OAAOiM,OAAO,GAAI7M,EAAM88B,EAAO,CAClChwB,EAAG9M,EAAKc,GACRi8B,K3ErGe,M2EyGvB,OACI/tB,EAAAC,EAAAC,cAAA,OAAK4L,UAAU,gBACV7R,EACG+F,EAAAC,EAAAC,cAAC8tB,GAAA,EAAD,KACIhuB,EAAAC,EAAAC,cAAC+tB,GAAA,EAAD,OAEJ,KACJjuB,EAAAC,EAAAC,cAACguB,GAAAjuB,EAAD,CACImtB,eAAgBjqB,KAAKiqB,eACrBG,aAAcpqB,KAAKoqB,aACnBzhB,UAAU,SACV0hB,OAAQn2B,EACR4X,OAAQhS,GACRkxB,K3EjHC,G2EkHDC,U3E7HW,G2E8HXxnB,MAAOkG,OAAOuhB,WACdC,Y3EhIa,W2EiIbC,YAAajO,EACbkO,YAAalO,EACbmO,gBAAgB,kBAEfp3B,EAAMwB,IAAI,SAAA7H,GACP,IAAM09B,EAAiB,CACnB19B,EAAKC,KACLqvB,EAAO,OAAS,QAClB9mB,KAAK,KAEP,OACIwG,EAAAC,EAAAC,cAACyuB,GAAD,CACI3lB,IAAKhY,EAAK8M,EACVgO,UAAW4iB,GAEVpO,EACGtgB,EAAAC,EAAAC,cAAC0uB,GAAD,CACIljB,QAAS2K,EAAKsX,oBACV38B,EAAKc,MAGb,KACJkO,EAAAC,EAAAC,cAAC2uB,GAAD,CACI79B,KAAMA,EACN+c,SAAUuS,EACV8F,qBACI/P,EAAK+P,gCAnH7C2G,EAAA,CAA8Bve,aAmI9Bue,GAASte,aAAe,CACpB7U,eAAgB,IAKpB,IAeMwa,GAAqB,CACvBkZ,wB3DzImC,SAAAl4B,GAAK,MAAK,CAC7CnE,KNlDqC,4BMmDrCmE,U2DwIAsS,0BAeWrH,eAhCS,SAACpJ,EAAOud,GAC5B,IAAM6F,EAAoB7F,EAAS8L,KAC7Bza,GAAsB5O,GACtBY,EAAkBZ,EAAOoD,GAAepD,IAExC2C,EAAiB4a,EAAS8L,KAC1Bta,GAAuB/O,GACvBe,EAAmBf,GAEzB,MAAO,CACHgD,UAAWK,GAAsBrD,KAAWojB,EAC5CzgB,mBAuBJwa,GAde,SAACE,EAAYC,EAAeC,GAC3C,IAAMsa,EAAar6B,YAAQ6f,EAAW1a,gBAAgBzB,OAAOuF,IAE7D,OAAO9L,OAAA6F,EAAA,EAAA7F,CAAA,GACA2iB,EADP,CAEI+L,KAAM9L,EAAS8L,KACfrmB,UAAWqa,EAAWra,UACtBL,eAAgBk1B,EAChBlwB,mBAIOyB,CAIb0sB,cCpNIliB,GAAS,CACXkkB,eAAgB,CACZ9f,OAAQ,MACR2E,QAAS,SACTgH,aAAc,MACd7P,MAAOC,IAAOiD,MACdH,gBAAiB,UACjBjH,OAAQ,GACRsI,QAAS,OACT0P,WAAY,UAEhBmQ,MAAO,CACH7jB,SAAU,OACVD,OAAQ,UACR8Z,WAAY,UAEhBiK,YAAa,CACT9jB,SAAU,OACVG,eAAgB,YAChBwT,WAAY,OACZ5T,OAAQ,YAIVgkB,8MACFxjB,QAAU,SAAA5Z,GAAE,OAAI,kBAAMwa,EAAKzL,MAAM6K,QAAQ5Z,OACzCq9B,SAAW,SAAAr9B,GAAE,OAAI,kBAAMwa,EAAKzL,MAAMsuB,SAASr9B,6EAElC,IACG6G,EAASwK,KAAKtC,MAAdlI,KAER,OACIqH,EAAAC,EAAAC,cAAA,OAAKC,MAAO0K,GAAOkkB,gBACf/uB,EAAAC,EAAAC,cAAA,QAAMC,MAAO0K,GAAOmkB,MAAOtjB,QAASvI,KAAKuI,QAAQ/S,EAAK7G,KAAtD,GAAAS,OACQoG,EAAKK,KADb,MAAAzG,OAEQoG,EAAKT,OAAO2B,OAAS,EACf3H,IAAKC,EAAE,qBAAsB,CACzBi9B,MAAOz2B,EAAKT,OAAO2B,SAEvBlB,EAAKT,OAAO,GAAGc,OAG7BgH,EAAAC,EAAAC,cAAA,QACIC,MAAO0K,GAAOokB,YACdvjB,QAASvI,KAAKgsB,SAASx2B,EAAK7G,KAE3BI,IAAKC,EAAE,mBAtBFqc,aAmC1B0gB,GAAYzgB,aAAe,CACvB/C,QAASjZ,SAASC,UAClBy8B,SAAU18B,SAASC,WAGRw8B,UC5CFG,GAAb,SAAAle,GAAA,SAAAke,IAAA,IAAA3c,EAAApG,EAAA1a,OAAA2a,EAAA,EAAA3a,CAAAuR,KAAAksB,GAAA,QAAA1c,EAAA5Y,UAAAF,OAAA+Y,EAAA,IAAAje,MAAAge,GAAAE,EAAA,EAAAA,EAAAF,EAAAE,IAAAD,EAAAC,GAAA9Y,UAAA8Y,GAAA,OAAAvG,EAAA1a,OAAA4a,EAAA,EAAA5a,CAAAuR,MAAAuP,EAAA9gB,OAAA6a,EAAA,EAAA7a,CAAAy9B,IAAA3iB,KAAAxJ,MAAAwP,EAAA,CAAAvP,MAAA5Q,OAAAqgB,MACI0c,cAAgB,SAAAx9B,GACZwa,EAAKzL,MAAM+c,iBAAiB9rB,GAC5Bwa,EAAKzL,MAAMuc,qBAAqBtrB,IAHxCwa,EAMIijB,aAAe,SAAAz9B,GACXwa,EAAKzL,MAAMgc,wBAAwB,CAC/B/qB,KACAkH,KAAMsT,EAAKzL,MAAMyd,QAAQra,KAAK,SAAAjT,GAAI,OAAIA,EAAKc,KAAOA,IAAIkH,QATlEsT,EAAA,OAAA1a,OAAA8f,EAAA,EAAA9f,CAAAy9B,EAAAle,GAAAvf,OAAA+f,EAAA,EAAA/f,CAAAy9B,EAAA,EAAArmB,IAAA,SAAA5T,MAAA,WAaa,IAAAihB,EAAAlT,KAAA0O,EACkC1O,KAAKtC,MAApCyd,EADHzM,EACGyM,QAAStW,EADZ6J,EACY7J,SAAU4D,EADtBiG,EACsBjG,QACrBiC,EAAM1B,GAAanE,GAAY,GAErC,OAAOsW,EAAQzkB,OACXmG,EAAAC,EAAAC,cAAA,OAAK4L,UAAWF,EAAQ4jB,IAAKrvB,MAAO,CAAE0N,QACjCyQ,EAAQzlB,IAAI,SAAAV,GAAM,OACf6H,EAAAC,EAAAC,cAACuvB,GAAD,CACIzmB,IAAK7Q,EAAOrG,GACZ6G,KAAMR,EACNuT,QAAS2K,EAAKkZ,aACdJ,SAAU9Y,EAAKiZ,mBAI3B,SA5BZD,EAAA,CAA+B7gB,aAsC/B6gB,GAAU5gB,aAAe,CACrB6P,QAAS,GACToR,iBAAkBj9B,SAASC,UAC3B0qB,qBAAsB3qB,SAASC,WAKnC,IAAMi9B,GAAkBC,aACpB,CAACvpB,GAAqByD,IACtB,SAACwU,EAASvU,GAAV,OACInY,OAAO4U,KAAK8X,GAASrpB,OAAO,SAAC46B,EAAK/9B,GAU9B,OATA+9B,EAAIvc,KAAK,CACLxhB,GAAIA,EACJkH,KAAM+Q,EAAWjY,GAAIkH,KACrBd,OAAQomB,EAAQxsB,GAAI+G,IAAI,SAAAzD,GAAK,MAAK,CAC9BtD,GAAIsD,EAAMtD,GACVkH,KAAM5D,EAAM6D,aAAe7D,EAAM4D,UAIlC62B,GACR,MAQIxvB,eALS,SAAApJ,GAAK,MAAK,CAC9BqnB,QAASqR,GAAgB14B,GACzB+Q,SAAUC,GAAuBhR,KAKjC,CACI4lB,wBAAyBP,GACzBsB,iBAAkBnX,GAClB2W,qBAAsB1W,IALfrG,CAOboL,qBAtFa,CACX+jB,IAAK,CACDxd,SAAU,SACVjR,OAAQ,EACR6S,QAAS,QACTzE,QAAS,OACTmL,eAAgB,SAChBwV,SAAU,SA+EhBrkB,CAAmB4jB,KCzFNU,GARiB,SAAAlvB,GAAK,OACjCb,EAAAC,EAAAC,cAACsW,EAAA,SAAD,KACIxW,EAAAC,EAAAC,cAAC8vB,GAAD,CAAU1P,KAAMzf,EAAMkN,WACtB/N,EAAAC,EAAAC,cAAC+vB,GAAD,MACAjwB,EAAAC,EAAAC,cAACgwB,GAAD,CAAU5P,KAAMzf,EAAMkN,aCMjBoiB,GAAU,SAAApwB,GAAgD,IAA7CqwB,EAA6CrwB,EAA7CqwB,oBAChBrpB,EAD6DhH,EAAxBswB,kBAErCn+B,IAAKC,EACD,oEAEJD,IAAKC,EAAE,iCAEb,OAAOi+B,EACHpwB,EAAAC,EAAAC,cAACowB,GAAD,CAAkBviB,UAAU,IAE5B/N,EAAAC,EAAAC,cAAC0tB,GAAD,CAAkB18B,KAAM6V,KAkCjB1G,eAVS,SAAApJ,GACpB,IAAMW,EAAaG,EAAkBd,GAErC,MAAO,CACHnF,GAAIuI,GAAepD,GACnBo5B,kBAAmB51B,KAAQ7C,GAC3B24B,kBAAmBz4B,EAAsBb,KAIlCoJ,CA9Bc,SAAApF,GAAiD,IAA9CnJ,EAA8CmJ,EAA9CnJ,GAAIu+B,EAA0Cp1B,EAA1Co1B,kBAC1BD,EAAsBt+B,IAAOu+B,EAC7BG,GAFoEv1B,EAAvBs1B,kBAEC,OAAPz+B,EAE7C,OACIkO,EAAAC,EAAAC,cAACsW,EAAA,SAAD,KACIxW,EAAAC,EAAAC,cAACuwB,GAAD,MACAzwB,EAAAC,EAAAC,cAACwwB,GAAD,MACA1wB,EAAAC,EAAAC,cAAA,OAAK4L,UAAU,qBACV0kB,EAAkB,KACfxwB,EAAAC,EAAAC,cAACywB,GAAD,CACIP,oBAAqBA,EACrBC,kBAAmBA,sGCC5BO,GAjCoB,SAAA7wB,GAK7B,IAJFoF,EAIEpF,EAJFoF,cACA0rB,EAGE9wB,EAHF8wB,kBACAC,EAEE/wB,EAFF+wB,kBACAnxB,EACEI,EADFJ,KAEMif,EAAU,CACZ5e,EAAAC,EAAAC,cAAC+b,GAAA,EAAD,CAAQjT,IAAI,SAAS+nB,WAAS,EAACrlB,QAASolB,GACnC5+B,IAAKC,EAAE,WAEZ6N,EAAAC,EAAAC,cAAC+b,GAAA,EAAD,CAAQjT,IAAI,SAASgoB,aAAW,EAACtlB,QAASmlB,GACrC3+B,IAAKC,EAAE,YAIhB,OACI6N,EAAAC,EAAAC,cAAC0b,GAAA3b,EAAD,CAAQN,KAAMA,EAAMuB,QAAS4vB,GACzB9wB,EAAAC,EAAAC,cAAC+wB,GAAAhxB,EAAD,CAAaE,MAAO,CAAEgL,SAAU,UAAW/K,WAAY,QAClDlO,IAAKC,EAAE,qBAEZ6N,EAAAC,EAAAC,cAACgxB,GAAAjxB,EAAD,KACID,EAAAC,EAAAC,cAACixB,GAAAlxB,EAAD,CAAmBE,MAAO,CAAEgL,SAAU,aACjCjZ,IAAKC,EACF,mKACA,CAAEgT,oBAIdnF,EAAAC,EAAAC,cAAC8b,GAAA/b,EAAD,KAAgB2e,KCNtBwS,GAAiB,CACnBvqB,OxD9BkC,GwD+BlCuE,WAAY,OACZ0T,WAAY,OACZ/K,YAAa,QAGJsd,GAAb,SAAAlgB,GAAA,SAAAkgB,IAAA,IAAA3e,EAAApG,EAAA1a,OAAA2a,EAAA,EAAA3a,CAAAuR,KAAAkuB,GAAA,QAAA1e,EAAA5Y,UAAAF,OAAA+Y,EAAA,IAAAje,MAAAge,GAAAE,EAAA,EAAAA,EAAAF,EAAAE,IAAAD,EAAAC,GAAA9Y,UAAA8Y,GAAA,OAAAvG,EAAA1a,OAAA4a,EAAA,EAAA5a,CAAAuR,MAAAuP,EAAA9gB,OAAA6a,EAAA,EAAA7a,CAAAy/B,IAAA3kB,KAAAxJ,MAAAwP,EAAA,CAAAvP,MAAA5Q,OAAAqgB,MACI3b,MAAQ,CACJq6B,yBAAyB,EACzBC,oBAAgBr7B,EAChBs7B,yBAAyB,EACzBC,iBAAav7B,GALrBoW,EAQIolB,gBAAkB,WACdplB,EAAKM,SAAS,CAAE4kB,yBAAyB,KATjDllB,EAYIqlB,OAAS,WACLrlB,EAAKzL,MAAM8wB,SAAS31B,KAAK,SAAA41B,GACrBtlB,EAAKM,SAAS,CAAE6kB,YAAW,IAAAl/B,OAAMq/B,QAd7CtlB,EAkBIulB,UAAY,WACRvlB,EAAKzL,MAAMixB,mBACX,IAAML,EAAcnlB,EAAKzL,MAAMtJ,YAAX,IAAAhF,OACV+Z,EAAKzL,MAAMtJ,aACf,IACN+U,EAAKM,SAAS,CAAE6kB,iBAvBxBnlB,EA0BIwkB,kBAAoB,WAChBxkB,EAAKM,SAAS,CAAE4kB,yBAAyB,KA3BjDllB,EA8BIukB,kBAAoB,WAChBvkB,EAAKM,SAAS,CAAE4kB,yBAAyB,IACzCllB,EAAKzL,MAAMkxB,SAASzlB,EAAKzL,MAAMtJ,aAAayE,KAAK,WAC7CsQ,EAAKM,SAAS,CAAE6kB,YAAa,SAjCzCnlB,EAqCI0lB,oBArCJ,eAAAjyB,EAAAnO,OAAAuQ,EAAA,EAAAvQ,CAAAwQ,EAAAnC,EAAAoC,KAqC0B,SAAAC,EAAM2vB,GAAN,IAAAC,EAAAC,EAAA,OAAA/vB,EAAAnC,EAAAwC,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,WACdqvB,IAAgBA,EAAap4B,OADf,CAAA6I,EAAAE,KAAA,eAAAF,EAAAE,KAAA,EAES0J,EAAKqK,QAAQ9jB,GAAGyV,YAAYsgB,aAAa3sB,IAC5D,eAHU,OAERi2B,EAFQxvB,EAAAc,MAMR2uB,EAAcF,EAAahuB,KAC7B,SAAA9R,GAAC,OAAIA,EAAEqD,SAAW08B,GAA2B,SAAf//B,EAAEigC,aAGjBD,EAAY/8B,OAC3BkX,EAAKzL,MAAMwxB,YACP/lB,EAAKzL,MAAMtJ,YACX46B,EAAY/8B,OAbN,wBAAAsN,EAAAG,SAAAP,MArC1B,gBAAAQ,GAAA,OAAA/C,EAAAmD,MAAAC,KAAApJ,YAAA,GAAAuS,EAwDIgmB,oBAAsB,WACdhmB,EAAKzL,MAAMtJ,cAAgB+U,EAAKrV,MAAMs6B,gBACtC90B,GAAkB6P,EAAKzL,MAAMtJ,aAAayE,KAAK,SAAAu1B,GAAc,OACzDjlB,EAAKM,SAAS,CAAE2kB,sBA3DhCjlB,EAwEIimB,wBAA0B,WACtBjmB,EAAKM,SAAS,CACV0kB,yBAA0BhlB,EAAKrV,MAAMq6B,2BA1EjDhlB,EA8EIkmB,oBAAsB,kBAClBlmB,EAAKzL,MAAM4xB,cAAgBnmB,EAAKzL,MAAMtJ,YAClCyI,EAAAC,EAAAC,cAACwyB,GAAD,CACIvtB,cAAemH,EAAKzL,MAAMsE,cAC1B0rB,kBAAmBvkB,EAAKukB,kBACxBC,kBAAmBxkB,EAAKwkB,kBACxBnxB,KAAM2M,EAAKrV,MAAMu6B,0BAErB,MAtFZllB,EAwFIqmB,kBAAoB,kBAChBrmB,EAAKrV,MAAMs6B,gBAAkBjlB,EAAKrV,MAAMs6B,eAAez/B,GACnDkO,EAAAC,EAAAC,cAAC0yB,GAAA3yB,EAAD,CACI6L,UAAU,qBACVjZ,GAAIyZ,EAAKqK,QAAQ9jB,GACjB8M,KAAM2M,EAAKrV,MAAMq6B,wBACjBpR,eAAgB5T,EAAKimB,wBACrBM,kBAAmBvmB,EAAKrV,MAAMs6B,eAC9BuB,kBAAmB,CAAC,OAAQ,eAE5BC,mBAAoBzmB,EAAK0lB,oBACzBgB,mBAAoB,SAAAC,GAAG,OACnB72B,QAAQC,IAAI,2BAA4B42B,MAGhD,MAvGZ3mB,EAAA,OAAA1a,OAAA8f,EAAA,EAAA9f,CAAAy/B,EAAAlgB,GAAAvf,OAAA+f,EAAA,EAAA/f,CAAAy/B,EAAA,EAAAroB,IAAA,oBAAA5T,MAAA,WAiEQ+N,KAAKmvB,wBAjEb,CAAAtpB,IAAA,qBAAA5T,MAAA,WAqEQ+N,KAAKmvB,wBArEb,CAAAtpB,IAAA,SAAA5T,MAAA,WA0GQ,GAAI+N,KAAKlM,MAAMw6B,YACX,OAAOzxB,EAAAC,EAAAC,cAACgzB,GAAA,EAAD,CAAUtjB,GAAIzM,KAAKlM,MAAMw6B,cAF/B,IAAA5f,EAK+C1O,KAAKtC,MAAjDtJ,EALHsa,EAKGta,YAAak7B,EALhB5gB,EAKgB4gB,aAAcU,EAL9BthB,EAK8BshB,aAC7Bzf,EAAmBtH,GAAoBL,IAEvCqnB,EAAiBD,EACjBjhC,IAAKC,EAAE,uBACPD,IAAKC,EAAE,oBAEb,OACI6N,EAAAC,EAAAC,cAACsW,EAAA,SAAD,KACIxW,EAAAC,EAAAC,cAAC4T,GAAD,CAAYjN,OAAQ6M,EAAkB3F,UAAU,GAC5C/N,EAAAC,EAAAC,cAAA,OAAKC,MAAOixB,IACP+B,EACGnzB,EAAAC,EAAAC,cAAA,OAAK4L,UAAWF,KAAQzX,cACpB6L,EAAAC,EAAAC,cAAA,QAAMC,MAAO,CAAE4T,YAAa,SACxB/T,EAAAC,EAAAC,cAAC+b,GAAA,EAAD,CAAQoX,SAAO,EAAC3nB,QAASvI,KAAKwuB,QACzBz/B,IAAKC,EAAE,kBAIfoF,EACGyI,EAAAC,EAAAC,cAAA,QAAMC,MAAO,CAAE4T,YAAa,SACxB/T,EAAAC,EAAAC,cAAC+b,GAAA,EAAD,CACIvQ,QACIvI,KAAKovB,yBAGRrgC,IAAKC,EAAE,eAGhB,KACHoF,GAAek7B,EACZzyB,EAAAC,EAAAC,cAAC+b,GAAA,EAAD,CAAQvQ,QAASvI,KAAKuuB,iBACjBx/B,IAAKC,EAAE,WAEZ,MAER,KAEJ6N,EAAAC,EAAAC,cAAA,OAAK4L,UAAWF,KAAQxX,eACpB4L,EAAAC,EAAAC,cAAC+b,GAAA,EAAD,CAAQ8U,WAAS,EAACrlB,QAASvI,KAAK0uB,WAC3BuB,MAKhBjwB,KAAKwvB,oBACLxvB,KAAKqvB,2BA5JtBnB,EAAA,CAA6B7iB,aAkK7B6iB,GAAQta,aAAe,CACnBlkB,GAAImkB,IAAUrgB,QAGlB,IA4Be0J,eA5BS,SAAApJ,GACpB,IAEIw7B,EACAU,EAHE/6B,EAAYyN,GAAsB5O,GAYxC,OvE3G8B,SAAAA,GAC9B,OACKwD,KAAQxD,EAAM6O,gBAAsD,KAApCD,GAAsB5O,GAAOnF,GuEiG9DwhC,CAAmBr8B,IACnBw7B,GAAe,EACfU,GAAe,IAEfA,IAAe/6B,EAAUsB,QAAStB,EAAUsB,OAAOomB,OACnD2S,IAAer6B,EAAUsB,QAAStB,EAAUsB,OAAOqD,QAGhD,CACHxF,YAAaa,EAAUtG,GACvBqT,cAAe/M,EAAUY,KACzBy5B,eACAU,iBAImB,SAAA1uB,GAAQ,MAAK,CACpCktB,OAAQ,kBAAMltB,EjEnIY,eAAA1E,EAAAnO,OAAAuQ,EAAA,EAAAvQ,CAAAwQ,EAAAnC,EAAAoC,KAAM,SAAAC,EAAOmC,EAAUC,GAAjB,IAAAtM,EAAAwB,EAAA25B,EAAAh8B,EAAA,OAAA6K,EAAAnC,EAAAwC,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,UAC1BxK,EAAYyN,GAAsBnB,KAElC9K,EAAiBxB,EAAUwB,eAAef,IAAI,SAAA7H,GAChD,IAAME,EAAOC,YAAWH,GAClBA,EAAKE,MAAQJ,IACb,KAEAG,EAAOF,YAAaC,GAAQV,IAAOU,EAAKC,KAE9C,OAAOW,OAAA6F,EAAA,EAAA7F,CAAA,GACAZ,EACCE,EAAO,CAAEA,QAAS,GAF1B,CAGID,WAIFsiC,EAjB0B3hC,OAAA6F,EAAA,EAAA7F,CAAA,GAkBzBwG,EAlByB,CAmB5BwB,mBAnB4B8I,EAAAC,KAAA,GAuBR4wB,EAAgBzhC,GAvBR,CAAA4Q,EAAAE,KAAA,gBAAAF,EAAAE,KAAA,EAwBhBsE,GAAgBqsB,GAxBA,OAAA7wB,EAAAqC,GAAArC,EAAAc,KAAAd,EAAAE,KAAA,wBAAAF,EAAAE,KAAA,GAyBhBuE,GAAcosB,GAzBE,QAAA7wB,EAAAqC,GAAArC,EAAAc,KAAA,eAuBtBjM,EAvBsBmL,EAAAqC,GA2B5BN,EA1EmC,CACvCxT,KN3CgC,yBMyFAyR,EAAAE,KAAA,GA4BtB6B,EAASO,GAA0BzN,IA5Bb,eAAAmL,EAAAe,OAAA,SA8BrBoB,QAAQC,QAAQvN,IA9BK,QAAAmL,EAAAC,KAAA,GAAAD,EAAAoG,GAAApG,EAAA,SAtEpBvG,EAsGDuG,EAAAoG,GArGX1M,QAAQC,IAAI,6BAA8BF,GAqEV,yBAAAuG,EAAAG,OAtEpB,IAAA1G,GAsEoBmG,EAAA,kBAAN,gBAAAQ,EAAAC,GAAA,OAAAhD,EAAAmD,MAAAC,KAAApJ,YAAA,IiEmIeiC,KAAK,SAAAlK,GAAE,OAAIA,KACpDigC,SAAU,SAAAjgC,GAAE,OAAI2S,EhElGY,SAAA3S,GAAE,sBAAAyJ,EAAA3J,OAAAuQ,EAAA,EAAAvQ,CAAAwQ,EAAAnC,EAAAoC,KAAI,SAAA6G,EAAOzE,EAAUC,GAAjB,OAAAtC,EAAAnC,EAAAwC,KAAA,SAAA2G,GAAA,cAAAA,EAAAzG,KAAAyG,EAAAxG,MAAA,cAAAwG,EAAAzG,KAAA,EAAAyG,EAAAxG,KAAA,EAExB5F,GAAmBlL,GAFK,cAG9B2S,EDpFmC,CACvCxT,KN3CgC,yBO+H5BwT,EAASJ,MACTI,EAASY,GAAoB,KALC+D,EAAAxG,KAAA,EAOxB6B,EAASmD,MAPe,cAAAwB,EAAA3F,OAAA,SASvBoB,QAAQC,WATe,eAAAsE,EAAAzG,KAAA,GAAAyG,EAAArE,GAAAqE,EAAA,SAW9BhN,QAAQC,IAAI,4BAAZ+M,EAAArE,IAX8BqE,EAAA3F,OAAA,SAAA2F,EAAArE,IAAA,yBAAAqE,EAAAvG,SAAAqG,EAAA,kBAAJ,gBAAAsqB,EAAAC,GAAA,OAAAl4B,EAAA2H,MAAAC,KAAApJ,YAAA,GgEkGL25B,CAAiB5hC,KAC1CggC,iBAAkB,kBAAMrtB,EjEpLe,CACvCxT,KN3CgC,0BuE+NhCohC,YAAa,SAACvgC,EAAIsD,GAAL,OAAeqP,EhEvLS,SAAClN,EAAanC,GAAd,MAAyB,CAC9DnE,KvB/BsC,6BuBgCtCsG,cACAnC,SgEoLqCu+B,CAA0B7hC,EAAIsD,OAGxDiL,CAGbgxB,IC3NWlB,GAAU,SAAApwB,GACnB,OADyCA,EAAnBozB,aAElBnzB,EAAAC,EAAAC,cAACowB,GAAD,CAAkBviB,UAAU,IAE5B/N,EAAAC,EAAAC,cAAC0tB,GAAD,CAAkB18B,KAAMgB,IAAKC,EAAE,gBAG1ByhC,GAAb,SAAAziB,GAAA,SAAAyiB,IAAA,IAAAlhB,EAAApG,EAAA1a,OAAA2a,EAAA,EAAA3a,CAAAuR,KAAAywB,GAAA,QAAAjhB,EAAA5Y,UAAAF,OAAA+Y,EAAA,IAAAje,MAAAge,GAAAE,EAAA,EAAAA,EAAAF,EAAAE,IAAAD,EAAAC,GAAA9Y,UAAA8Y,GAAA,OAAAvG,EAAA1a,OAAA4a,EAAA,EAAA5a,CAAAuR,MAAAuP,EAAA9gB,OAAA6a,EAAA,EAAA7a,CAAAgiC,IAAAlnB,KAAAxJ,MAAAwP,EAAA,CAAAvP,MAAA5Q,OAAAqgB,MACI3b,MAAQ,CACJ48B,aAAa,GAFrBvnB,EAKIwnB,kBAAoB,WACZxnB,EAAKzL,MAAMzI,YACXkU,EAAKM,SAAS,CAAEinB,aAAa,IAC7BvnB,EAAKzL,MAAMkzB,iBAAiBznB,EAAKzL,MAAMzI,UAAWkU,EAAKzL,MAAMxJ,SARzEiV,EAsBI0nB,oBAAsB,WAClB,IAAMxD,GACDlkB,EAAKzL,MAAM0vB,kBAAsC,OAAlBjkB,EAAKzL,MAAM/O,GAE/C,OACIkO,EAAAC,EAAAC,cAAA,OAAK4L,UAAU,qBACV0kB,EAAkB,KACfxwB,EAAAC,EAAAC,cAAC+zB,GAAD,CAASd,aAAc7mB,EAAKzL,MAAMsyB,iBA7BtD7mB,EAAA,OAAA1a,OAAA8f,EAAA,EAAA9f,CAAAgiC,EAAAziB,GAAAvf,OAAA+f,EAAA,EAAA/f,CAAAgiC,EAAA,EAAA5qB,IAAA,oBAAA5T,MAAA,WAaQ+N,KAAK2wB,sBAbb,CAAA9qB,IAAA,qBAAA5T,MAAA,WAiBa+N,KAAKlM,MAAM48B,aACZ1wB,KAAK2wB,sBAlBjB,CAAA9qB,IAAA,SAAA5T,MAAA,WAoCQ,OACI4K,EAAAC,EAAAC,cAACsW,EAAA,SAAD,KACIxW,EAAAC,EAAAC,cAACg0B,GAAD,MACAl0B,EAAAC,EAAAC,cAACwwB,GAAD,CAAyB3iB,UAAU,IAClC5K,KAAK6wB,2BAxCtBJ,EAAA,CAAmCplB,aA8DpBnO,eAhBS,SAAApJ,GACpB,IAAMnF,EAAKuI,GAAepD,GACpBmB,EAAYtG,EAAK+F,EAAkBZ,EAAOnF,GAAM,KAKtD,MAAO,CACHsG,YACAtG,KACAqhC,gBALA/6B,IAAaA,EAAUsB,SAAStB,EAAUsB,OAAOomB,OAMjDzoB,MAAOW,EAAmBf,GAC1Bs5B,kBAAmBz4B,EAAsBb,KAM7C,CACI88B,iBlExD0B,SAAC37B,EAAWf,GAM1C,MAAO,CACHpG,KNlC+B,0BMmC/BmE,MAPKxD,OAAA6F,EAAA,EAAA7F,CAAA,GACFwG,EADE,CAELwB,eAAgBvC,OkEkDTgJ,CAKbuzB,IClFIO,+LAEEhxB,KAAKtC,MAAMuzB,mDAIX,OACIp0B,EAAAC,EAAAC,cAACsW,EAAA,SAAD,KACIxW,EAAAC,EAAAC,cAACg0B,GAAD,MACAl0B,EAAAC,EAAAC,cAACwwB,GAAD,CAAyB3iB,UAAU,IACnC/N,EAAAC,EAAAC,cAAA,OAAK4L,UAAU,qBACX9L,EAAAC,EAAAC,cAACowB,GAAD,CAAkBviB,UAAU,aAXrBS,aAkBZnO,eACX,KACA,CACI+zB,gBnEe6B,iBAAO,CACxCnjC,KNtC+B,yByEmBpBoP,CAKb8zB,ICrBIE,8MACFC,aAAe,WACX,GAAIhoB,EAAKzL,MAAM0vB,iBAAkB,CAC7B,IAAMz+B,EAAKwa,EAAKzL,MAAM+iB,MAAM2Q,OAAOh9B,aAAe,KAElD+U,EAAKzL,MAAM2zB,gBAAgB1iC,GAE3Bwa,EAAKmoB,kBAIbA,YAAc,WACV3nB,OAAO4nB,SAAS,EAAG,uFAInBvxB,KAAKmxB,4DAILnxB,KAAKmxB,gDAIL,OAAQnxB,KAAKtC,MAAM8zB,MACf,ICnCQ,ODoCJ,OAAO30B,EAAAC,EAAAC,cAAC00B,GAAD,MACX,ICpCO,MDqCH,OAAO50B,EAAAC,EAAAC,cAAC20B,GAAD,MACX,QACI,OAAO70B,EAAAC,EAAAC,cAAC40B,GAAD,cA9BCtmB,aAuCTnO,eAJS,SAAApJ,GACpB,MAAO,CAAEs5B,kBAAmBz4B,EAAsBb,KAKlD,CACIu9B,gBnEYwB,SAAA1iC,GAAE,sBAAAmJ,EAAArJ,OAAAuQ,EAAA,EAAAvQ,CAAAwQ,EAAAnC,EAAAoC,KAAI,SAAAgB,EAAOoB,EAAUC,GAAjB,IAAAxI,EAAAjF,EAAA89B,EAAAC,EAAArwB,EAAA,OAAAvC,EAAAnC,EAAAwC,KAAA,SAAAc,GAAA,cAAAA,EAAAZ,KAAAY,EAAAX,MAAA,OAC5B1G,EAAU,SAAAC,GAEZ,OADAC,QAAQC,IAAI,+BAAgCF,GACrCA,GAHuBoH,EAAAZ,KAAA,EAOxB1L,EAAQyN,IAEVqwB,EAAoB,KACpBjjC,EACAijC,EAAoBl9B,EAAkBZ,EAAOnF,IAAO,MT3EzBgF,ES8EvBE,EAAiBC,GADf+9B,ET5Ed1vB,aAAa2vB,QAAb,2BAAA1iC,OAAgDuE,UAAeZ,ES+EjDyO,EAAO9M,EAAkBZ,EAAO+9B,GACtCD,EACIC,GAAerwB,EACTA,EACApM,EAA8BtB,GAAO,IAG/C89B,GACAtwB,EAASO,GAA0B+vB,EAAkBjjC,KAEjDijC,EAAkBjjC,KAAOuI,GAAepD,GACpC8O,GAAc9O,GAEdwN,EJxEqB,CACrCxT,KDtB8B,uBKgGdwT,EJvEwB,CACxCxT,KDzB4B,mBC0B5BqtB,QIqE0CpY,GAAwBjP,MAItDwN,EHvF6B,CACzCxT,KHdmC,4BMqGvBwT,EJhFyB,CACrCxT,KDtB8B,yBKwGtBwT,EAASJ,IAAgB,IAxCCd,EAAAX,KAAA,uBAAAW,EAAAZ,KAAA,EAAAY,EAAAwB,GAAAxB,EAAA,SAAAA,EAAAE,OAAA,SA2CvBvH,EAAOqH,EAAAwB,KA3CgB,yBAAAxB,EAAAV,OJvCN,ILzBO/L,GSgEDuM,EAAA,iBAAJ,gBAAAN,EAAAC,GAAA,OAAA/H,EAAAiI,MAAAC,KAAApJ,YAAA,KmEfnBsG,CAKbg0B,IEpCWa,oBAAb,SAAA/jB,GAAA,SAAA+jB,IAAA,OAAAtjC,OAAA2a,EAAA,EAAA3a,CAAAuR,KAAA+xB,GAAAtjC,OAAA4a,EAAA,EAAA5a,CAAAuR,KAAAvR,OAAA6a,EAAA,EAAA7a,CAAAsjC,GAAAhyB,MAAAC,KAAApJ,YAAA,OAAAnI,OAAA8f,EAAA,EAAA9f,CAAAsjC,EAAA/jB,GAAAvf,OAAA+f,EAAA,EAAA/f,CAAAsjC,EAAA,EAAAlsB,IAAA,oBAAA5T,MAAA,WAEQ+N,KAAKtC,MAAMs0B,eAAehyB,KAAKtC,MAAMhO,GAAGyV,aACxCnF,KAAKtC,MAAMu0B,kBACXjyB,KAAKtC,MAAMw0B,oBACXlyB,KAAKtC,MAAMy0B,cAAcnyB,KAAKtC,MAAMhO,MAL5C,CAAAmW,IAAA,kBAAA5T,MAAA,WASQ,MAAO,CAAEmB,QAAS4M,KAAKtC,MAAMtK,QAASrE,SAAMW,GAAIsQ,KAAKtC,MAAMhO,MATnE,CAAAmW,IAAA,SAAA5T,MAAA,WAaQ,OACI4K,EAAAC,EAAAC,cAAA,OAAK4L,UAAU,eACX9L,EAAAC,EAAAC,cAAA,OAAK4L,UAAU,wBACX9L,EAAAC,EAAAC,cAACq1B,EAAAt1B,EAAD,CAAWzN,QAASN,IAAKC,EAAE,gBAE/B6N,EAAAC,EAAAC,cAACs1B,EAAA,EAAD,KACIx1B,EAAAC,EAAAC,cAACu1B,EAAA,EAAD,KACIz1B,EAAAC,EAAAC,cAACw1B,EAAA,EAAD,CACIC,OAAK,EACLC,KAAK,IACLC,OAAQ,SAAAh1B,GAAK,OACTb,EAAAC,EAAAC,cAAC41B,GAADlkC,OAAAiM,OAAA,GAAegD,EAAf,CAAsB8zB,KDxClC,aC2CI30B,EAAAC,EAAAC,cAACw1B,EAAA,EAAD,CACIC,OAAK,EACLC,KAAK,OACLC,OAAQ,SAAAh1B,GAAK,OACTb,EAAAC,EAAAC,cAAC41B,GAADlkC,OAAAiM,OAAA,GAAegD,EAAf,CAAsB8zB,KDhDnC,YCmDK30B,EAAAC,EAAAC,cAACw1B,EAAA,EAAD,CACIC,OAAK,EACLC,KAAK,gBACLC,OAAQ,SAAAh1B,GAAK,OACTb,EAAAC,EAAAC,cAAC41B,GAADlkC,OAAAiM,OAAA,GAAegD,EAAf,CAAsB8zB,KDtDlC,aCyDI30B,EAAAC,EAAAC,cAACw1B,EAAA,EAAD,CACIC,OAAK,EACLC,KAAK,qBACLC,OAAQ,SAAAh1B,GAAK,OACTb,EAAAC,EAAAC,cAAC41B,GAADlkC,OAAAiM,OAAA,GAAegD,EAAf,CAAsB8zB,KD/DlC,eCoEJ30B,EAAAC,EAAAC,cAAC61B,GAAD,WAlDhBb,EAAA,CAAyB1mB,cAwDzB0mB,GAAIc,kBAAoB,CACpBz/B,QAASygB,IAAU8R,OACnB52B,KAAM8kB,IAAUrgB,OAChB9D,GAAImkB,IAAUrgB,QAGlB,IASe0J,eACX,KAVuB,SAAAoE,GACvB,MAAO,CACH0wB,eAAgB,SAAA7sB,GAAW,OAAI7D,EChFC,CACpCxT,K9FHyB,gB8FIzBmE,MD8E2DkT,KACvD8sB,gBAAiB,kBAAM3wB,EAASmD,OAChCytB,kBAAmB,kBAAM5wB,ElExEC,eAAA1E,EAAAnO,OAAAuQ,EAAA,EAAAvQ,CAAAwQ,EAAAnC,EAAAoC,KAAM,SAAAC,EAAOmC,EAAUC,GAAjB,IAAAQ,EAAAhJ,EAAA+5B,EAAA,OAAA7zB,EAAAnC,EAAAwC,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAC9BsC,EAAY,SAAAiE,GACd1E,EAAS6E,GAAwBH,KAG/BjN,EAAU,SAAAC,GAEZ,OADAC,QAAQC,IAAI,iCAAkCF,GACvCA,GAPyBuG,EAAAC,KAAA,EAAAD,EAAAE,KAAA,EAWH8F,KAXG,cAW1ButB,EAX0BvzB,EAAAc,KAAAd,EAAAe,OAAA,SAYzByB,EAAU+wB,IAZe,cAAAvzB,EAAAC,KAAA,EAAAD,EAAAqC,GAAArC,EAAA,SAAAA,EAAAe,OAAA,SAczBvH,EAAOwG,EAAAqC,KAdkB,yBAAArC,EAAAG,SAAAP,EAAA,iBAAN,gBAAAQ,EAAAC,GAAA,OAAAhD,EAAAmD,MAAAC,KAAApJ,YAAA,KkEyE1Bu7B,cAAe,SAAAziC,GAAE,OAAI4R,E/D1EC,SAAA5R,GAAE,sBAAAkN,EAAAnO,OAAAuQ,EAAA,EAAAvQ,CAAAwQ,EAAAnC,EAAAoC,KAAI,SAAAC,EAAOmC,EAAUC,GAAjB,IAAAQ,EAAAhJ,EAAAg6B,EAAAnsB,EAAAosB,EAAA,OAAA/zB,EAAAnC,EAAAwC,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAC1BsC,EAAY,SAAA6E,GACdtF,EAASgG,GAAgBV,KAGvB7N,EAAU,SAAAC,GAEZ,OADAC,QAAQC,IAAI,+BAAgCF,GACrCA,GAPqBuG,EAAAC,KAAA,EAWtBuzB,EAAkB1rB,GAAgC9F,KAX5BhC,EAAAE,KAAA,EAYHwzB,8BAAmBvjC,EAAIqjC,GAZpB,cAYtBnsB,EAZsBrH,EAAAc,KAetB2yB,EAAqBpsB,EAAW5R,OAClC,SAAAk+B,GAAG,MACuB,aAAtBA,EAAIC,eACmB,aAAtBD,EAAIC,eACyB,cAA1BD,EAAIE,oBAnBY7zB,EAAAe,OAAA,SAqBrByB,EAAUixB,IArBW,eAAAzzB,EAAAC,KAAA,GAAAD,EAAAqC,GAAArC,EAAA,SAAAA,EAAAe,OAAA,SAuBrBvH,EAAOwG,EAAAqC,KAvBc,yBAAArC,EAAAG,SAAAP,EAAA,kBAAJ,gBAAAQ,EAAAC,GAAA,OAAAhD,EAAAmD,MAAAC,KAAApJ,YAAA,G+D0EMy8B,CAAe3jC,OAItCwN,CAGb60B,oZE1CFuB,KAAOjhC,OAAO,MAEdtD,IAAKwkC,aAAa,KAHA,UAGiBC,IACnCzkC,IAAKwkC,aAAa,QAJA,UAIoBE,IACtC1kC,IAAKwkC,aAAa,KALA,UAKiBG,IACnC3kC,IAAKwkC,aAAa,KANA,UAMiBI,IACnC5kC,IAAKwkC,aAAa,KAPA,UAOiBK,IACnC7kC,IAAKwkC,aAAa,KARA,UAQiBM,IACnC9kC,IAAKwkC,aAAa,KATA,UASiBO,IACnC/kC,IAAKwkC,aAAa,KAVA,UAUiBQ,IACnChlC,IAAKwkC,aAAa,KAXA,UAWiBS,IACnCjlC,IAAKwkC,aAAa,KAZA,UAYiBU,IACnCllC,IAAKwkC,aAAa,KAbA,UAaiBW,IACnCnlC,IAAKwkC,aAAa,MAdA,UAckBY,IACpCplC,IAAKwkC,aAAa,KAfA,UAeiBa,IACnCrlC,IAAKwkC,aAAa,KAhBA,UAgBiBc,IACnCtlC,IAAKwkC,aAAa,QAjBA,UAiBoBe,IACtCvlC,IAAKwkC,aAAa,KAlBA,UAkBiBgB,IACnCxlC,IAAKwkC,aAAa,KAnBA,UAmBiBiB,IACnCzlC,IAAKwkC,aAAa,MApBA,UAoBkBkB,IACpC1lC,IAAKwkC,aAAa,KArBA,UAqBiBmB,IACnC3lC,IAAKwkC,aAAa,KAtBA,UAsBiBoB,IACnC5lC,IAAKwkC,aAAa,KAvBA,UAuBiBqB,IACnC7lC,IAAKwkC,aAAa,KAxBA,UAwBiBsB,IACnC9lC,IAAKwkC,aAAa,KAzBA,UAyBiBuB,IACnC/lC,IAAKwkC,aAAa,QA1BA,UA0BoBwB,IAEtChmC,IAAKimC,oBA5Ba,WA6BlBjmC,IAAKkmC,eAAe,MAELlmC,SAAf,uBC1DeiO,GATD,WAAyC,IAAxClJ,EAAwC8C,UAAAF,OAAA,QAAA3D,IAAA6D,UAAA,GAAAA,UAAA,GARpB,OAQSC,EAAWD,UAAAF,OAAA,EAAAE,UAAA,QAAA7D,EACnD,OAAQ8D,EAAO/I,MACX,IAZiB,YAab,OAAO+E,YAAgBgE,EAAO5E,MAXP,QAY3B,QACI,OAAO6B,ICUJ6C,eAAgB,CAC3BlC,WhGeW,WAA8C,IAA7CX,EAA6C8C,UAAAF,OAAA,QAAA3D,IAAA6D,UAAA,GAAAA,UAAA,GAArC5C,EAA0B6C,EAAWD,UAAAF,OAAA,EAAAE,UAAA,QAAA7D,EACzD,OAAQ8D,EAAO/I,MACX,IAjCsB,iBAkClB,MAAO,CACHmG,KAAM4C,EAAO5E,MACbiC,MAAO,IAGf,IAtCsB,iBAuClB,OAAOzF,OAAA6F,EAAA,EAAA7F,CAAA,GACAqF,EADP,CAEIG,KAAKxF,OAAA6F,EAAA,EAAA7F,CAAA,GACEqF,EAAMG,KACN4C,EAAO5E,SAItB,IA9C6B,wBA+CzB,OAAOkC,EACHL,EACA+C,EAAOzC,YACP,UACAyC,EAAO5E,OAGf,IArDkC,6BAsD9B,OAAOkC,EACHL,EACA+C,EAAOzC,YACP,cACAyC,EAAO5E,OAGf,IA5D2B,sBA6DvB,OAAOxD,OAAA6F,EAAA,EAAA7F,CAAA,GACAqF,EADP,CAEII,MAAO2C,EAAO5E,QAGtB,QACI,OAAO6B,IgGtDfmD,WACAwW,oBACA1I,cACAtN,e9FrBW,WAAkD,IAAjD3D,EAAiD8C,UAAAF,OAAA,QAAA3D,IAAA6D,UAAA,GAAAA,UAAA,GAAzCS,GAA8BR,EAAWD,UAAAF,OAAA,EAAAE,UAAA,QAAA7D,EAC7D,OAAQ8D,EAAO/I,MACX,IAT8B,yBAU1B,OAAOW,OAAA6F,EAAA,EAAA7F,CAAA,GACAqF,EADPrF,OAAA8F,EAAA,EAAA9F,CAAA,GAEKoI,EAAO5E,MAAMtD,GAAKumC,KAAYzmC,OAAA6F,EAAA,EAAA7F,CAAA,GAEpBiD,YAASoC,EAAM+C,EAAO5E,MAAMtD,KAC5BkI,EAAO5E,OAEdqF,MAIZ,IApBqC,gCAqBjC,OAAO7I,OAAA6F,EAAA,EAAA7F,CAAA,GACAqF,EADPrF,OAAA8F,EAAA,EAAA9F,CAAA,GAEKoI,EAAOlI,GAAKumC,KAAYzmC,OAAA6F,EAAA,EAAA7F,CAAA,GAEdiD,YAASoC,EAAM+C,EAAOlI,KAFT,CAGhBsP,WAAYpH,EAAOoH,aAEvB3G,MAIZ,QACI,OAAOxD,I8FLfqI,SzF7BW,WAAwB,IAAvBrI,EAAuB8C,UAAAF,OAAA,QAAA3D,IAAA6D,UAAA,GAAAA,UAAA,GAAf,GAAIC,EAAWD,UAAAF,OAAA,EAAAE,UAAA,QAAA7D,EACnC,OAAQ8D,EAAO/I,MACX,IAJyB,oBAKrB,IAAMqnC,EAAgBvjC,YAAaiF,EAAO5E,OAI1C,OAFiB0qB,KAAO7oB,EAAO,CAAEshC,OAAQD,IAI7C,QACI,OAAOrhC,IyFoBfC,KjG1BW,WAAwC,IAU9BshC,EAVTvhC,EAAuC8C,UAAAF,OAAA,QAAA3D,IAAA6D,UAAA,GAAAA,UAAA,GAA/BlD,EAAoBmD,EAAWD,UAAAF,OAAA,EAAAE,UAAA,QAAA7D,EACnD,OAAQ8D,EAAO/I,MACX,IAXqB,gBAYjB,MAQD,CACHa,IAFiB0mC,EAPUx+B,EAAO5E,OASrBtD,GACbgF,SAAU0hC,EAAS1hC,SACnBzB,SAAUmjC,EAASjuB,SAASkuB,YAC5B1hC,YAAayhC,EAASE,YAAYlwB,IAAI,QAVtC,QACI,OAAOvR,IiGqBf6O,chFZW,WAAkD,IAAjD7O,EAAiD8C,UAAAF,OAAA,QAAA3D,IAAA6D,UAAA,GAAAA,UAAA,GAAzC4L,GAA8B3L,EAAWD,UAAAF,OAAA,EAAAE,UAAA,QAAA7D,EAC7D,OAAQ8D,EAAO/I,MACX,IArB+B,0BAsB3B,IAAM0nC,EAAW,GAIjB,OAHA/mC,OAAO4U,KAAKZ,IAAqB/M,IAC7B,SAAA+/B,GAAC,OAAKD,EAASC,GAAK5+B,EAAO5E,MAAMwjC,KAE9BD,EACX,IA1B4B,uBA2BxB,OAAOhzB,GACX,IA3B2B,sBA4BvB,OAAOC,GACX,IA5BsB,iBA6BlB,OAAOhU,OAAOiM,OAAO,GAAI5G,EAAO,CAAE+B,KAAMgB,EAAO5E,QAEnD,IA9B4B,uBA+BxB,OAAOxD,OAAOiM,OAAO,GAAI5G,EAAO,CAC5BiC,YAAac,EAAO5E,QAG5B,IAlC0B,qBAmCtB,OAAO0qB,KAAO7oB,EAAO,CACjB2C,eAAgB,CAAEi/B,SAAU,CAAC7+B,EAAO5E,UAE5C,IArC6B,wBAsCzB,IAAM0jC,EAAa9+B,EAAO5E,MAEpBgiB,EAAqBngB,EAAM2C,eAAeyd,UAC5C,SAAArmB,GAAI,OAAIA,EAAKc,KAAOgnC,IAGxB,OAAI1hB,GAAsB,EACf0I,KAAO7oB,EAAO,CACjB2C,eAAgB,CACZm/B,QAAS,CAAC,CAAC3hB,EAAoB,OAKpCngB,EAEX,IApDiC,4BAqD7B,IAAM+hC,EAAavkC,YAAQwC,EAAM2C,gBAE3Bq/B,EAAgBj/B,EAAO5E,MAAMyD,IAAI,SAAAkH,GAAuB,IAApB5C,EAAoB4C,EAApB5C,EAAGC,EAAiB2C,EAAjB3C,EAAGC,EAAc0C,EAAd1C,EAAGC,EAAWyC,EAAXzC,EAAGQ,EAAQiC,EAARjC,EAC5Co7B,EAAYF,EAAW/0B,KAAK,SAAAk1B,GAAE,OAAIA,EAAGrnC,KAAOgM,IAElD,OAAOlM,OAAOiM,OAAO,GAAIq7B,EAAW,CAAE77B,IAAGC,IAAGH,IAAGC,QAGnD,OAAO0iB,KAAO7oB,EAAO,CACjB2C,eAAgB,CAAEw/B,KAAMH,KAGhC,IAlE6B,wBAmEzB,IAAM/hB,EAAgBld,EAAO5E,MAEvBgiB,EAAqBngB,EAAM2C,eAAeyd,UAC5C,SAAArmB,GAAI,OAAIA,EAAKc,KAAOolB,EAAcplB,KAGtC,OAAIslB,GAAsB,EACL0I,KAAO7oB,EAAO,CAC3B2C,eAAgB,CACZm/B,QAAS,CAAC,CAAC3hB,EAAoB,EAAGF,OAOvCjgB,EAEX,QACI,OAAOA,IgF7DfqP,Y9E9BW,WAAgD,IAA/CrP,EAA+C8C,UAAAF,OAAA,QAAA3D,IAAA6D,UAAA,GAAAA,UAAA,GAAvCqM,GAA4BpM,EAAWD,UAAAF,OAAA,EAAAE,UAAA,QAAA7D,EAC3D,OAAQ8D,EAAO/I,MACX,IAPuB,kBAQnB,OAAOW,OAAA6F,EAAA,EAAA7F,CAAA,GACAqF,EADPrF,OAAA8F,EAAA,EAAA9F,CAAA,GAEKoI,EAAO7B,OAAOrG,GAAKkI,EAAO7B,OAAO/C,QAG1C,IAZ0B,qBAatB,IAAMujC,EAAQ/mC,OAAA6F,EAAA,EAAA7F,CAAA,GAAQqF,GAItB,cAFO0hC,EAAS3+B,EAAOlI,IAEhB6mC,EAEX,IArBwB,mBAsBpB,OAAO3+B,EAAOskB,QAElB,IAzB0B,qBA0BtB,OAAOlY,GAEX,QACI,OAAOnP,I8ESfkP,gB/EhCW,WAAqD,IAApDlP,EAAoD8C,UAAAF,OAAA,QAAA3D,IAAA6D,UAAA,GAAAA,UAAA,GAA5CkM,GAAiCjM,EAAWD,UAAAF,OAAA,EAAAE,UAAA,QAAA7D,EAChE,OAAQ8D,EAAO/I,MACX,IAP+B,0BAQ3B,IAAM0nC,EAAQ/mC,OAAA6F,EAAA,EAAA7F,CAAA,GAAQqF,GAItB,cAFO0hC,EAAS3+B,EAAOlI,IAEhB6mC,EAEX,IAb6B,wBAczB,OAAO3+B,EAAOskB,QAElB,IAlB+B,0BAmB3B,OAAOrY,GAEX,QACI,OAAOhP,I+EiBfkJ,SACAI,SvF/BW,WAA4C,IAA3CtJ,EAA2C8C,UAAAF,OAAA,QAAA3D,IAAA6D,UAAA,GAAAA,UAAA,GAAnCyF,GAAwBxF,EAAWD,UAAAF,OAAA,EAAAE,UAAA,QAAA7D,EACvD,OAAQ8D,EAAO/I,MACX,IAXiC,4BAY7B,OAAOW,OAAA6F,EAAA,EAAA7F,CAAA,GAAKqF,EAAU+C,EAAO5E,OAEjC,IAbsB,iBAclB,OAAOoK,GAEX,QACI,OAAOvI,IuFuBf8S,WrEtBW,WAA4C,IAA3C9S,EAA2C8C,UAAAF,OAAA,QAAA3D,IAAA6D,UAAA,GAAAA,UAAA,GAAnCwP,KAAwBvP,EAAWD,UAAAF,OAAA,EAAAE,UAAA,QAAA7D,EACvD,OAAQ8D,EAAO/I,MACX,IAJsB,iBAKlB,OAAOW,OAAA6F,EAAA,EAAA7F,CAAA,GACA2X,KACAvP,EAAO5E,OAGlB,QACI,OAAO6B,IqEcfsT,SpE9BW,WAAsC,IAArCtT,EAAqC8C,UAAAF,OAAA,QAAA3D,IAAA6D,UAAA,GAAAA,UAAA,GAA7BiQ,GAAkBhQ,EAAWD,UAAAF,OAAA,EAAAE,UAAA,QAAA7D,EACjD,OAAQ8D,EAAO/I,MACX,IAdoB,eAehB,OAAOW,OAAOiM,OAAO,GAAI7D,EAAO5E,OAEpC,IAhBoB,eAiBhB,OAAOxD,OAAA6F,EAAA,EAAA7F,CAAA,GACAqF,EACA+C,EAAO5E,OAGlB,QACI,OAAO6B,IoEmBfolB,qB1CtCW,WAA0D,IAAzDplB,EAAyD8C,UAAAF,OAAA,QAAA3D,IAAA6D,UAAA,GAAAA,UAAA,GAAjDoiB,GAAsCniB,EAAWD,UAAAF,OAAA,EAAAE,UAAA,QAAA7D,EACrE,OAAQ8D,EAAO/I,MACX,IAPkC,6BAQ9B,OAAO+I,EAAO5E,MAElB,IAToC,+BAUhC,OAAO+mB,GAEX,QACI,OAAOllB,M2CUJoiC,GAnBQ,WACnB,IAAMC,EAAa,CAACC,MAGdC,EACF1sB,OAAO2sB,sCAAwCC,IAQnD,OANK5sB,OAAO2sB,qCAMLE,YACHC,GACAJ,EAAiBK,IAAe32B,WAAf,EAAmBo2B,MCF5CQ,IAAWC,QAAQ1G,QAAQ2G,KAAOhvB,IAAOgF,QAEzC,IAEMiqB,GAAa,SAAArR,GACf,IAAMvzB,EAAWuzB,EAAa6P,YAE1BpjC,GAAyB,OAAbA,GACZsM,SAAOzP,KAAKgoC,QAAQthB,IAApB,sBAAArmB,OAA8C8C,EAA9C,gBAGJsM,SAAOzP,KAAKgoC,QAAQthB,IAAI,oCACxB1mB,GAAKkmC,eAAe/iC,KAGd,eAAA0K,EAAAnO,OAAAuQ,EAAA,EAAAvQ,CAAAwQ,EAAAnC,EAAAoC,KAAG,SAAAC,IAAA,IAAA63B,EAAAC,EAAA7jC,EAAA,OAAA6L,EAAAnC,EAAAwC,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAF,EAAAE,KAAA,EACcy3B,sBAAY,qBAD1B,OACHF,EADGz3B,EAAAc,KAITpH,QAAQk+B,KAAR,oBAAA/nC,OACwB4nC,EAASI,QADjC,MAAAhoC,OAEQ4nC,EAASK,wBAIXJ,GAASK,EAVN/3B,EAAAE,KAAA,eAuBHrM,EAAU6jC,EACVD,EAASO,WAAWC,KAAKzlB,KACzBulB,KACgBA,SAEtB94B,SAAOpL,QAAP,GAAAhE,OAAoBgE,EAApB,SAAAhE,OAAmC4nC,EAASS,MAAMC,YAClDl5B,SAAOm5B,QAAUV,EAAS,KAAO,CAAE5Y,cAHbiZ,UAItB94B,SAAOo5B,QAAU,CACb,QACA,MACA,SACA,cACA,aACA,cACA,YACA,mBACA,aAGJC,4BACKh/B,KAAKi+B,IACLj+B,KAAK,kBAAMi/B,eAAOt5B,YAClB3F,KAAK,SAAAk/B,GACFC,IAAStF,OACL71B,EAAAC,EAAAC,cAACk7B,EAAA,EAAD,CAAUC,MAAOhC,MACbr5B,EAAAC,EAAAC,cAAC2K,EAAA,iBAAD,CAAkBgT,MA7Dfyd,yBAAexB,MA8Dd95B,EAAAC,EAAAC,cAACq7B,GAAD,CAAKhlC,QAASA,EAAS1D,GAAIqoC,MAGnCp8B,SAAS08B,eAAe,WApD3B,yBAAA94B,EAAAG,SAAAP,MAAH,yBAAAvC,EAAAmD,MAAAC,KAAApJ,aAAA,EAyDV0hC,wBCzFA7nC,EAAAC,QAAA,CAAkBua,KAAA,yBAAA5G,QAAA,4BAAAkG,WAAA,qDCAlB9Z,EAAAC,QAAA,CAAkBwc,OAAA,4BAAAhB,KAAA,gDCAlBzb,EAAAC,QAAA,CAAkBgjB,eAAA","file":"static/js/main.a17d2ae5.chunk.js","sourcesContent":["import i18n from '@dhis2/d2-i18n';\nimport TableIcon from '@material-ui/icons/ViewList';\nimport ChartIcon from '@material-ui/icons/InsertChart';\nimport MapIcon from '@material-ui/icons/Public';\nimport ExtensionIcon from '@material-ui/icons/Extension';\nimport DescriptionIcon from '@material-ui/icons/Description';\nimport PersonIcon from '@material-ui/icons/Person';\nimport FontDownloadIcon from '@material-ui/icons/FontDownload';\nimport EmailIcon from '@material-ui/icons/Email';\nimport CropFreeIcon from '@material-ui/icons/CropFree';\nimport NotInterestedIcon from '@material-ui/icons/NotInterested';\n\nimport { getBaseUrl } from './util';\n\n// Item types\nexport const REPORT_TABLE = 'REPORT_TABLE';\nexport const CHART = 'CHART';\nexport const MAP = 'MAP';\nexport const EVENT_REPORT = 'EVENT_REPORT';\nexport const EVENT_CHART = 'EVENT_CHART';\nexport const APP = 'APP';\nexport const REPORTS = 'REPORTS';\nexport const RESOURCES = 'RESOURCES';\nexport const USERS = 'USERS';\nexport const MESSAGES = 'MESSAGES';\nexport const TEXT = 'TEXT';\nexport const SPACER = 'SPACER';\n\n// Domain types\nexport const DOMAIN_TYPE_AGGREGATE = 'AGGREGATE';\nexport const DOMAIN_TYPE_TRACKER = 'TRACKER';\n\n// Visualization types\nexport const VISUALIZATION_TYPE_TABLE = 'TABLE';\nexport const VISUALIZATION_TYPE_CHART = 'CHART';\nexport const VISUALIZATION_TYPE_MAP = 'MAP';\n\n// TODO: Import this from @dhis2/analytics when available\nexport const CHART_TYPE_SINGLE_VALUE = 'SINGLE_VALUE';\n\n// Dashboard helpers\nexport const spacerContent = 'SPACER_ITEM_FOR_DASHBOARD_LAYOUT_CONVENIENCE';\nexport const emptyTextItemContent = 'TEXT_ITEM_WITH_NO_CONTENT';\nexport const isSpacerType = item =>\n    item.type === TEXT && item.text === spacerContent;\nexport const isTextType = item =>\n    item.type === TEXT && item.text !== spacerContent;\nexport const isPluginType = item =>\n    itemTypeMap[item.type].hasOwnProperty('plugin');\n\nexport const getPlugin = type => {\n    const pluginName = itemTypeMap[type].plugin;\n\n    if (type === CHART) {\n        return true;\n    }\n\n    return global[pluginName];\n};\n\n// Item type map\nexport const itemTypeMap = {\n    [REPORT_TABLE]: {\n        id: REPORT_TABLE,\n        endPointName: 'reportTables',\n        propName: 'reportTable',\n        pluralTitle: () => i18n.t('Pivot tables'),\n        plugin: 'reportTablePlugin',\n        domainType: DOMAIN_TYPE_AGGREGATE,\n        visualizationType: VISUALIZATION_TYPE_TABLE,\n        appUrl: id => `dhis-web-pivot/?id=${id}`,\n        appName: () => i18n.t('Pivot Tables'),\n    },\n    [CHART]: {\n        id: CHART,\n        endPointName: 'charts',\n        propName: 'chart',\n        pluralTitle: () => i18n.t('Charts'),\n        plugin: 'chartPlugin',\n        domainType: DOMAIN_TYPE_AGGREGATE,\n        visualizationType: VISUALIZATION_TYPE_CHART,\n        appUrl: id => `dhis-web-data-visualizer/#/${id}`,\n        appName: () => i18n.t('Visualizer'),\n    },\n    [MAP]: {\n        id: MAP,\n        endPointName: 'maps',\n        propName: 'map',\n        pluralTitle: () => i18n.t('Maps'),\n        plugin: 'mapPlugin',\n        domainType: DOMAIN_TYPE_AGGREGATE,\n        visualizationType: VISUALIZATION_TYPE_MAP,\n        appUrl: id => `dhis-web-maps/?id=${id}`,\n        appName: () => i18n.t('Maps'),\n    },\n    [EVENT_REPORT]: {\n        id: EVENT_REPORT,\n        endPointName: 'eventReports',\n        propName: 'eventReport',\n        pluralTitle: () => i18n.t('Event reports'),\n        plugin: 'eventReportPlugin',\n        domainType: DOMAIN_TYPE_TRACKER,\n        visualizationType: VISUALIZATION_TYPE_TABLE,\n        appUrl: id => `dhis-web-event-reports/?id=${id}`,\n        appName: () => i18n.t('Event Reports'),\n    },\n    [EVENT_CHART]: {\n        id: EVENT_CHART,\n        endPointName: 'eventCharts',\n        propName: 'eventChart',\n        pluralTitle: () => i18n.t('Event charts'),\n        plugin: 'eventChartPlugin',\n        domainType: DOMAIN_TYPE_TRACKER,\n        visualizationType: VISUALIZATION_TYPE_CHART,\n        appUrl: id => `dhis-web-event-visualizer/?id=${id}`,\n        appName: () => i18n.t('Event Visualizer'),\n    },\n    [APP]: {\n        endPointName: 'apps',\n        propName: 'appKey',\n        pluralTitle: () => i18n.t('Apps'),\n        appName: Function.prototype,\n    },\n    [REPORTS]: {\n        id: REPORTS,\n        endPointName: 'reports',\n        propName: 'reports',\n        pluralTitle: () => i18n.t('Reports'),\n        appUrl: id => `dhis-web-reports/#/standard-report/view/${id}`,\n        appName: Function.prototype,\n    },\n    [RESOURCES]: {\n        id: RESOURCES,\n        endPointName: 'resources',\n        propName: 'resources',\n        pluralTitle: () => i18n.t('Resources'),\n        appUrl: id => `api/documents/${id}/data`,\n        appName: Function.prototype,\n    },\n    [USERS]: {\n        id: USERS,\n        endPointName: 'users',\n        propName: 'users',\n        pluralTitle: () => i18n.t('Users'),\n        appUrl: id => `dhis-web-dashboard-integration/profile.action?id=${id}`,\n        appName: Function.prototype,\n    },\n    [TEXT]: {\n        id: TEXT,\n        propName: 'text',\n    },\n    [MESSAGES]: {\n        propName: 'messages',\n    },\n    [SPACER]: {\n        propName: 'text',\n    },\n};\n\nexport const getEndPointName = type => itemTypeMap[type].endPointName;\n\nexport const getItemUrl = (type, item, d2) => {\n    let url;\n\n    if (type === APP) {\n        url = item.launchUrl;\n    }\n\n    if (itemTypeMap[type] && itemTypeMap[type].appUrl) {\n        url = `${getBaseUrl(d2)}/${itemTypeMap[type].appUrl(item.id)}`;\n    }\n\n    return url;\n};\n\nexport const getItemIcon = type => {\n    switch (type) {\n        case REPORT_TABLE:\n        case EVENT_REPORT:\n        case REPORTS:\n            return TableIcon;\n        case CHART:\n        case EVENT_CHART:\n            return ChartIcon;\n        case MAP:\n            return MapIcon;\n        case APP:\n            return ExtensionIcon;\n        case RESOURCES:\n            return DescriptionIcon;\n        case USERS:\n            return PersonIcon;\n        case TEXT:\n            return FontDownloadIcon;\n        case MESSAGES:\n            return EmailIcon;\n        case SPACER:\n            return CropFreeIcon;\n        default:\n            return NotInterestedIcon;\n    }\n};\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"Item_list__2oHc1\",\"item\":\"Item_item__lO40M\",\"itemicon\":\"Item_itemicon__dv5ah\",\"link\":\"Item_link__2gULT\",\"deleteicon\":\"Item_deleteicon__3c7bl\",\"deletebutton\":\"Item_deletebutton__1DfY5\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"leftControls\":\"DashboardsBar_leftControls__2kr14\",\"rightControls\":\"DashboardsBar_rightControls__2l1lT\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"menuItem\":\"ContentMenuItem_menuItem__2DIcB\",\"launchLink\":\"ContentMenuItem_launchLink__MRANR\",\"label\":\"ContentMenuItem_label__2pIfq\",\"buttonInsert\":\"ContentMenuItem_buttonInsert__1GlZy\"};","import isObject from 'lodash/isObject';\n\n// validation\nexport function orNull(param) {\n    return param === undefined ? null : param;\n}\n\nexport function orArray(param) {\n    return Array.isArray(param) ? param : [];\n}\n\nexport function orObject(param) {\n    return isObject(param) ? param : {};\n}\n\n// array\nexport function arrayGetById(array, id) {\n    return array.find(item => item.id === id);\n}\n\n// object\nexport function arrayToIdMap(array) {\n    return array.reduce((obj, item) => {\n        obj[item.id] = item;\n        return obj;\n    }, {});\n}\n\n// date\nexport function getDate() {\n    const y = Math.floor(Math.random() * 3) + 2015;\n    const M = Math.floor(Math.random() * 12) + 1;\n    const d = Math.floor(Math.random() * 28) + 1;\n    // const h = Math.floor(Math.random() * 23) + 1;\n    // const m = Math.floor(Math.random() * 59) + 1;\n    // const s = Math.floor(Math.random() * 59) + 1;\n\n    return new Date(`${y}-${M}-${d}`)\n        .toJSON()\n        .replace('T', ' ')\n        .substr(0, 10);\n}\n\nexport const formatDate = (value, uiLocale) => {\n    if (typeof global.Intl !== 'undefined' && Intl.DateTimeFormat) {\n        const locale = uiLocale || 'en';\n        return new Intl.DateTimeFormat(locale, {\n            year: 'numeric',\n            month: 'short',\n            day: 'numeric',\n        }).format(new Date(value));\n    }\n\n    return value.substr(0, 19).replace('T', ' ');\n};\n\n/**\n * Sorts an array of objects based on provided date property\n *\n * @param {Array} items Array of objects\n * @param {String} dateProp Name of the date property to be used for sorting\n * @param {Boolean} ascending Whether to sort ascending or descending\n */\nexport const sortByDate = (items, dateProp, ascending = true) => {\n    const values = Object.values(items);\n\n    values.sort((a, b) => {\n        const aDate = new Date(a[dateProp]);\n        const bDate = new Date(b[dateProp]);\n\n        return ascending ? aDate - bDate : bDate - aDate;\n    });\n\n    return values;\n};\n\n// reducer validator\nexport const validateReducer = (value, defaultValue) =>\n    value === undefined || value === null ? defaultValue : value;\n\nexport const getBaseUrl = d2 => {\n    const api = d2.Api.getApi();\n    const idx = api.baseUrl.indexOf('/api');\n    return idx > -1 ? api.baseUrl.slice(0, idx) : api.baseUrl;\n};\n\nexport const getWithoutId = object => ({\n    ...object,\n    id: undefined,\n});\n","export const RECEIVED_USER = 'RECEIVED_USER';\n\nexport const DEFAULT_STATE_USER = {\n    id: '',\n    username: '',\n    uiLocale: '',\n    isSuperuser: false,\n};\n\nexport default (state = DEFAULT_STATE_USER, action) => {\n    switch (action.type) {\n        case RECEIVED_USER: {\n            return fromD2ToUserObj(action.value);\n        }\n        default:\n            return state;\n    }\n};\n\nfunction fromD2ToUserObj(d2Object) {\n    return {\n        id: d2Object.id,\n        username: d2Object.username,\n        uiLocale: d2Object.settings.keyUiLocale,\n        isSuperuser: d2Object.authorities.has('ALL'),\n    };\n}\n\n// selectors\n\nexport const sGetUserId = state => state.user.id;\nexport const sGetUserUsername = state => state.user.username;\nexport const sGetIsSuperuser = state => state.user.isSuperuser;\nexport const sGetUiLocale = state => state.user.uiLocale;\n","/** @module reducers/dashboards */\n\nimport arrayFrom from 'd2-utilizr/lib/arrayFrom';\nimport arraySort from 'd2-utilizr/lib/arraySort';\n\nimport { orArray, orObject } from '../modules/util';\nimport {\n    SPACER,\n    isSpacerType,\n    isTextType,\n    emptyTextItemContent,\n} from '../modules/itemTypes';\n\nexport const SET_DASHBOARDS = 'SET_DASHBOARDS';\nexport const ADD_DASHBOARDS = 'ADD_DASHBOARDS';\nexport const SET_DASHBOARD_STARRED = 'SET_DASHBOARD_STARRED';\nexport const SET_DASHBOARD_DISPLAY_NAME = 'SET_DASHBOARD_DISPLAY_NAME';\nexport const SET_DASHBOARD_ITEMS = 'SET_DASHBOARD_ITEMS';\n\nexport const DEFAULT_STATE_DASHBOARDS = {\n    byId: null,\n    items: [],\n};\n\n// reducer helper functions\n\nconst updateDashboardProp = (state, dashboardId, prop, value) => ({\n    byId: {\n        ...state.byId,\n        [dashboardId]: {\n            ...state.byId[dashboardId],\n            [prop]: value,\n        },\n    },\n    items: state.items,\n});\n\n/**\n * Reducer that computes and returns the new state based on the given action\n * @function\n * @param {Object} state The current state\n * @param {Object} action The action to be evaluated\n * @returns {Object}\n */\nexport default (state = DEFAULT_STATE_DASHBOARDS, action) => {\n    switch (action.type) {\n        case SET_DASHBOARDS: {\n            return {\n                byId: action.value,\n                items: [],\n            };\n        }\n        case ADD_DASHBOARDS: {\n            return {\n                ...state,\n                byId: {\n                    ...state.byId,\n                    ...action.value,\n                },\n            };\n        }\n        case SET_DASHBOARD_STARRED: {\n            return updateDashboardProp(\n                state,\n                action.dashboardId,\n                'starred',\n                action.value\n            );\n        }\n        case SET_DASHBOARD_DISPLAY_NAME: {\n            return updateDashboardProp(\n                state,\n                action.dashboardId,\n                'displayName',\n                action.value\n            );\n        }\n        case SET_DASHBOARD_ITEMS: {\n            return {\n                ...state,\n                items: action.value,\n            };\n        }\n        default:\n            return state;\n    }\n};\n\n// root selector\n\nexport const sGetDashboardsRoot = state => state.dashboards;\n\n// selector level 1\n\n/**\n * Selector which returns a dashboard by id from the state object\n * If no matching dashboard is found it returns undefined\n * If dashboards.byId is null, then the dashboards api request\n * has not yet completed. If dashboards.byId is an empty object\n * then the dashboards api request is complete, but no dashboards\n * were returned\n *\n * @function\n * @param {Object} state The current state\n * @param {Number} id The id of the dashboard\n * @returns {Object | undefined}\n */\nexport const sGetDashboardById = (state, id) =>\n    orObject(sGetDashboardsRoot(state).byId)[id];\n\nexport const sDashboardsIsFetching = state => {\n    return sGetDashboardsRoot(state).byId === null;\n};\n\n/**\n * Selector which returns all dashboards (the byId object)\n *\n * @function\n * @param {Object} state The current state\n * @returns {Object | undefined}\n */\nexport const sGetAllDashboards = state =>\n    orObject(sGetDashboardsRoot(state).byId);\n\n/**\n * Selector which returns the current dashboard items\n *\n * @function\n * @param {Object} state The current state\n * @returns {Array}\n */\nexport const sGetDashboardItems = state => sGetDashboardsRoot(state).items;\n\n// selector level 2\n\nexport const sGetStarredDashboards = state =>\n    Object.values(sGetAllDashboards(state)).filter(\n        dashboard => dashboard.starred === true\n    );\n\nexport const sGetUnstarredDashboards = state =>\n    Object.values(sGetAllDashboards(state)).filter(\n        dashboard => dashboard.starred === false\n    );\n\n// selector level 3\n\nexport const sGetStarredDashboardIds = state => {\n    return sGetStarredDashboards(state).map(dashboard => dashboard.id);\n};\n\nexport const sGetUnstarredDashboardIds = state =>\n    sGetUnstarredDashboards(state).map(dashboard => dashboard.id);\n\nexport const sGetDashboardsSortedByStarred = state => [\n    ...arraySort(sGetStarredDashboards(state), 'ASC', 'displayName'),\n    ...arraySort(sGetUnstarredDashboards(state), 'ASC', 'displayName'),\n];\n\n// utils\n\n/**\n * Returns the array of dashboards, customized for ui\n * @function\n * @param {Array} data The original dashboard list\n * @returns {Array}\n */\nexport const getCustomDashboards = data => {\n    const uiItems = items =>\n        items.map(item => {\n            const type = isSpacerType(item) ? SPACER : item.type;\n            const text = isTextType(item)\n                ? item.text === emptyTextItemContent\n                    ? ''\n                    : item.text\n                : null;\n\n            return {\n                ...item,\n                ...(text !== null ? { text } : {}),\n                type,\n            };\n        });\n\n    return arrayFrom(data).map((d, index) => ({\n        id: d.id,\n        name: d.name,\n        displayName: d.displayName,\n        description: d.description,\n        displayDescription: d.displayDescription,\n        starred: d.favorite,\n        owner: d.user.name,\n        created: d.created\n            .split('T')\n            .join(' ')\n            .substr(0, 16),\n        lastUpdated: d.lastUpdated\n            .split('T')\n            .join(' ')\n            .substr(0, 16),\n        access: d.access,\n        numberOfItems: orArray(d.dashboardItems).length,\n        dashboardItems: uiItems(d.dashboardItems),\n    }));\n};\n","/** @module reducers/selected */\nimport { combineReducers } from 'redux';\n\nimport { validateReducer } from '../modules/util';\n\nexport const SET_SELECTED_ID = 'SET_SELECTED_ID';\nexport const SET_SELECTED_ISLOADING = 'SET_SELECTED_ISLOADING';\nexport const SET_SELECTED_SHOWDESCRIPTION = 'SET_SELECTED_SHOWDESCRIPTION';\n\nexport const DEFAULT_STATE_SELECTED_ID = null;\nexport const DEFAULT_STATE_SELECTED_ISLOADING = false;\nexport const DEFAULT_STATE_SELECTED_SHOWDESCRIPTION = false;\n\n/**\n * Reducer functions that computes and returns the new state based on the given action\n * @function\n * @param {Object} state The current state\n * @param {Object} action The action to be evaluated\n */\nconst id = (state = DEFAULT_STATE_SELECTED_ID, action) => {\n    switch (action.type) {\n        case SET_SELECTED_ID:\n            return validateReducer(action.value, DEFAULT_STATE_SELECTED_ID);\n        default:\n            return state;\n    }\n};\n\nconst isLoading = (state = DEFAULT_STATE_SELECTED_ISLOADING, action) => {\n    switch (action.type) {\n        case SET_SELECTED_ISLOADING:\n            return validateReducer(\n                action.value,\n                DEFAULT_STATE_SELECTED_ISLOADING\n            );\n        default:\n            return state;\n    }\n};\n\nconst showDescription = (\n    state = DEFAULT_STATE_SELECTED_SHOWDESCRIPTION,\n    action\n) => {\n    switch (action.type) {\n        case SET_SELECTED_SHOWDESCRIPTION:\n            return validateReducer(\n                action.value,\n                DEFAULT_STATE_SELECTED_SHOWDESCRIPTION\n            );\n        default:\n            return state;\n    }\n};\n\nexport default combineReducers({\n    id,\n    isLoading,\n    showDescription,\n});\n\n// Selectors\n\nexport const sGetSelectedRoot = state => state.selected;\n\nexport const sGetSelectedId = state => sGetSelectedRoot(state).id;\n\nexport const sGetSelectedIsLoading = state => sGetSelectedRoot(state).isLoading;\n\nexport const sGetSelectedShowDescription = state =>\n    sGetSelectedRoot(state).showDescription;\n","import { orObject } from '../modules/util';\nimport objectClean from 'd2-utilizr/lib/objectClean';\n\n/** @module reducers/visualizations */\n\nexport const RECEIVED_VISUALIZATION = 'RECEIVED_VISUALIZATION';\nexport const RECEIVED_ACTIVE_VISUALIZATION = 'RECEIVED_ACTIVE_VISUALIZATION';\n\nexport const DEFAULT_STATE_VISUALIZATIONS = {};\n\nconst isEmpty = p => p === undefined || p === null;\n\nexport default (state = DEFAULT_STATE_VISUALIZATIONS, action) => {\n    switch (action.type) {\n        case RECEIVED_VISUALIZATION: {\n            return {\n                ...state,\n                [action.value.id]: objectClean(\n                    {\n                        ...orObject(state[action.value.id]),\n                        ...action.value,\n                    },\n                    isEmpty\n                ),\n            };\n        }\n        case RECEIVED_ACTIVE_VISUALIZATION: {\n            return {\n                ...state,\n                [action.id]: objectClean(\n                    {\n                        ...orObject(state[action.id]),\n                        activeType: action.activeType,\n                    },\n                    isEmpty\n                ),\n            };\n        }\n        default:\n            return state;\n    }\n};\n\n// root selector\nexport const sGetVisualizationsRoot = state => state.visualizations;\n\n// selectors level 1\nexport const sGetVisualization = (state, id) => {\n    return sGetVisualizationsRoot(state)[id];\n};\n","import { getInstance } from 'd2';\nimport arrayClean from 'd2-utilizr/lib/arrayClean';\n\nimport { getEndPointName } from '../modules/itemTypes';\n\n// Id, name\nexport const getIdNameFields = ({ rename } = {}) => [\n    'id',\n    `${rename ? 'displayName~rename(name)' : 'name,displayName'}`,\n];\n\n// Item\nexport const getItemFields = () => [\n    'dimensionItem~rename(id)',\n    'displayName~rename(name)',\n    'dimensionItemType',\n];\n\n// Dimension\nexport const getDimensionFields = ({ withItems }) =>\n    arrayClean([\n        'dimension',\n        'legendSet[id]',\n        'filter',\n        'programStage',\n        withItems ? `items[${getItemFields().join(',')}]` : ``,\n    ]);\n\n// Axis\nexport const getAxesFields = ({ withItems }) => [\n    `columns[${getDimensionFields({ withItems }).join(',')}]`,\n    `rows[${getDimensionFields({ withItems }).join(',')}]`,\n    `filters[${getDimensionFields({ withItems }).join(',')}]`,\n];\n\n// Favorite\nexport const getFavoriteFields = ({ withDimensions, withOptions }) => {\n    return arrayClean([\n        `${getIdNameFields({ rename: true }).join(',')}`,\n        'displayDescription~rename(description)',\n        withDimensions ? `${getAxesFields({ withItems: true }).join(',')}` : ``,\n        withOptions\n            ? [\n                  '*',\n                  '!attributeDimensions',\n                  '!attributeValues',\n                  '!category',\n                  '!categoryDimensions',\n                  '!categoryOptionGroupSetDimensions',\n                  '!columnDimensions',\n                  '!dataDimensionItems',\n                  '!dataElementDimensions',\n                  '!dataElementGroupSetDimensions',\n                  '!filterDimensions',\n                  '!itemOrganisationUnitGroups',\n                  '!lastUpdatedBy',\n                  '!organisationUnitGroupSetDimensions',\n                  '!organisationUnitLevels',\n                  '!organisationUnits',\n                  '!programIndicatorDimensions',\n                  '!relativePeriods',\n                  '!reportParams',\n                  '!rowDimensions',\n                  '!series',\n                  '!translations',\n                  '!userOrganisationUnit',\n                  '!userOrganisationUnitChildren',\n                  '!userOrganisationUnitGrandChildren',\n              ].join(',')\n            : '',\n    ]);\n};\n\nexport const getFavoritesFields = ({ withDimensions, withOptions }) => [\n    `reportTable[${getFavoriteFields({ withDimensions }).join(',')}]`,\n    `chart[${['type', ...getFavoriteFields({ withDimensions })].join(',')}]`,\n    `map[${getFavoriteFields({ withDimensions }).join(',')}]`,\n    `eventReport[${getFavoriteFields({ withDimensions }).join(',')}]`,\n    `eventChart[${getFavoriteFields({ withDimensions }).join(',')}]`,\n];\n\n// List item\nexport const getListItemFields = () => [\n    `reports[${getIdNameFields({ rename: true }).join(',')}]`,\n    `resources[${getIdNameFields({ rename: true }).join(',')}]`,\n    `users[${getIdNameFields({ rename: true }).join(',')}]`,\n];\n\n// Map\nexport const getMapFields = () => [\n    `${getIdNameFields({ rename: true }).join(',')}`,\n    'user,longitude,latitude,zoom,basemap',\n    `mapViews[${getFavoriteFields({\n        withDimensions: true,\n        withOptions: true,\n    })}]`,\n];\n\n// Api\n\n// Get more info about the favorite of a dashboard item\nexport const apiFetchFavorite = (id, type, { fields }) =>\n    getInstance().then(d2 =>\n        d2.Api.getApi().get(`${getEndPointName(type)}/${id}`, {\n            fields:\n                fields ||\n                getFavoriteFields({\n                    withDimensions: true,\n                    withOptions: true,\n                }),\n        })\n    );\n","import arrayClean from 'd2-utilizr/lib/arrayClean';\nimport {\n    getListItemFields,\n    getFavoritesFields,\n    getIdNameFields,\n} from './metadata';\n\n// Helper functions\n\nexport const onError = error => console.log('Error: ', error);\n\n// Dashboard item\nexport const getDashboardItemsFields = ({ withFavorite } = {}) =>\n    arrayClean([\n        'id',\n        'type',\n        'shape',\n        'x',\n        'y',\n        'width~rename(w)',\n        'height~rename(h)',\n        'messages',\n        'text',\n        'appKey',\n        `${getListItemFields().join(',')}`,\n        withFavorite\n            ? `${getFavoritesFields({\n                  withDimensions: withFavorite.withDimensions,\n              }).join(',')}`\n            : ``,\n    ]);\n\n// Dashboard\nexport const getDashboardFields = ({ withItems, withFavorite } = {}) =>\n    arrayClean([\n        `${getIdNameFields().join(',')}`,\n        'description',\n        'displayDescription',\n        'favorite',\n        `user[${getIdNameFields({ rename: true }).join(',')}]`,\n        'created',\n        'lastUpdated',\n        'access',\n        withItems\n            ? `dashboardItems[${getDashboardItemsFields({\n                  withFavorite,\n              }).join(',')}]`\n            : ``,\n    ]);\n","import { getInstance } from 'd2';\nimport arrayClean from 'd2-utilizr/lib/arrayClean';\nimport { onError, getDashboardFields } from './index';\n\n// Get \"all\" dashboards on startup\nexport const apiFetchDashboards = () =>\n    getInstance()\n        .then(d2 =>\n            d2.models.dashboard.list({\n                fields: [\n                    getDashboardFields().join(','),\n                    'dashboardItems[id]',\n                ].join(','),\n                paging: 'false',\n            })\n        )\n        .catch(onError);\n\n// Get more info about selected dashboard\nexport const apiFetchDashboard = id =>\n    getInstance()\n        .then(d2 =>\n            d2.models.dashboard.get(id, {\n                fields: arrayClean(\n                    getDashboardFields({\n                        withItems: true,\n                        withFavorite: { withDimensions: false },\n                    })\n                ).join(','),\n            })\n        )\n        .catch(onError);\n\n// Star dashboard\nexport const apiStarDashboard = (id, isStarred) => {\n    const url = `dashboards/${id}/favorite`;\n\n    getInstance().then(d2 => {\n        if (isStarred) {\n            d2.Api.getApi().post(url);\n        } else {\n            d2.Api.getApi().delete(url);\n        }\n    });\n};\n\nexport const apiDeleteDashboard = id => {\n    return getInstance()\n        .then(d2 => {\n            return d2.models.dashboards\n                .get(id)\n                .then(dashboard => dashboard.delete());\n        })\n        .catch(onError);\n};\n","import isFunction from 'd2-utilizr/lib/isFunction';\n\nimport { orObject } from '../../modules/util';\n\n// Dimensions for the react-grid-layout\n\nexport const GRID_COMPACT_TYPE = 'vertical'; // vertical | horizonal | null\nexport const GRID_ROW_HEIGHT = 10;\nconst GRID_COLUMN_WIDTH_PX = 20;\nconst GRID_LAYOUT = 'FLEXIBLE'; // FIXED | FLEXIBLE\nexport const MARGIN = [10, 10];\n\nexport const NEW_ITEM_SHAPE = { x: 0, y: 0, w: 20, h: 29 };\nexport const ITEM_MIN_HEIGHT = 4;\n\n// Dimensions for getShape\n\nconst NUMBER_OF_ITEM_COLS = 2;\nconst GRID_COLUMNS = 60;\n\nexport const getGridColumns = () => {\n    switch (GRID_LAYOUT) {\n        case 'FLEXIBLE':\n            return GRID_COLUMNS;\n        case 'FIXED':\n            return Math.floor((window.innerWidth - 20) / GRID_COLUMN_WIDTH_PX);\n        default:\n            return GRID_COLUMNS;\n    }\n};\n\n// isNonNegativeInteger\n\nconst isNonNegativeInteger = x => Number.isInteger(x) && x >= 0;\n\n// Does the item have all the shape properties?\n\nexport const hasShape = item =>\n    isNonNegativeInteger(item.x) &&\n    isNonNegativeInteger(item.y) &&\n    isNonNegativeInteger(item.w) &&\n    isNonNegativeInteger(item.h);\n\n// returns a rectangular grid block dimensioned with x, y, w, h in grid units.\n// based on a grid with 3 items across\nexport const getShape = i => {\n    if (!isNonNegativeInteger(i)) {\n        throw new Error('Invalid grid block number');\n    }\n\n    const col = i % NUMBER_OF_ITEM_COLS;\n    const row = Math.floor(i / NUMBER_OF_ITEM_COLS);\n    const itemWidth = Math.floor((GRID_COLUMNS - 1) / NUMBER_OF_ITEM_COLS);\n    const itemHeight = GRID_ROW_HEIGHT * 2;\n\n    return {\n        x: col * itemWidth,\n        y: row * itemHeight,\n        w: itemWidth,\n        h: itemHeight,\n    };\n};\n\n/**\n * Calculates the grid item's original height in pixels based\n * on the height in grid units. This calculation\n * is copied directly from react-grid-layout GridItem.js (calcPosition)\n *\n * @param {Object} item item containing shape (x, y, w, h)\n */\nconst getOriginalHeight = item => {\n    const originalHeight = Math.round(\n        GRID_ROW_HEIGHT * item.h + Math.max(0, item.h - 1) * MARGIN[1]\n    );\n\n    return { originalHeight };\n};\n\n/**\n * Returns an array of items containing the x, y, w, h dimensions\n * and the item's originalheight in pixels\n * @function\n * @param {Array} items\n * @returns {Array}\n */\n\nexport const withShape = items =>\n    items.map((item, index) => {\n        const itemWithShape = hasShape(item)\n            ? item\n            : Object.assign({}, item, getShape(index));\n\n        return Object.assign(\n            {},\n            itemWithShape,\n            getOriginalHeight(itemWithShape)\n        );\n    });\n\nexport const getGridItemDomId = id => `item-${id}`;\n\nexport function onItemResize(id) {\n    const el = orObject(document.querySelector(`#${getGridItemDomId(id)}`));\n    if (isFunction(el.setViewportSize))\n        setTimeout(\n            () => el.setViewportSize(el.clientWidth - 5, el.clientHeight - 5),\n            10\n        );\n}\n","import update from 'immutability-helper';\nimport { arrayToIdMap } from '../modules/util';\n\nexport const RECEIVED_MESSAGES = 'RECEIVED_MESSAGES';\n\nexport default (state = {}, action) => {\n    switch (action.type) {\n        case RECEIVED_MESSAGES: {\n            const conversations = arrayToIdMap(action.value);\n\n            const newState = update(state, { $merge: conversations });\n\n            return newState;\n        }\n        default:\n            return state;\n    }\n};\n\n// selectors\n\nexport const sGetMessagesRoot = state => state.messages;\n","import { getInstance } from 'd2';\n\nexport const getMessages = () => {\n    const fields =\n        'id,messageCount,lastUpdated,messageType,displayName,read,messages[id,read,sender[id,displayName],text,lastUpdated]';\n    const url = `/messageConversations?fields=${fields}&order=read:asc&pageSize=200`;\n    return getInstance()\n        .then(d2 => d2.Api.getApi().get(url))\n        .catch(error => console.log('Error:', error));\n};\n","export const RECEIVED_SNACKBAR_MESSAGE = 'RECEIVED_SNACKBAR_MESSAGE';\nexport const CLOSE_SNACKBAR = 'CLOSE_SNACKBAR';\n\nexport const DEFAULT_STATE_SNACKBAR = {\n    message: {},\n    duration: null,\n    open: false,\n};\n\nexport default (state = DEFAULT_STATE_SNACKBAR, action) => {\n    switch (action.type) {\n        case RECEIVED_SNACKBAR_MESSAGE: {\n            return { ...state, ...action.value };\n        }\n        case CLOSE_SNACKBAR: {\n            return DEFAULT_STATE_SNACKBAR;\n        }\n        default:\n            return state;\n    }\n};\n\n// selectors\n\nexport const sGetSnackbar = state => state.snackbar || DEFAULT_STATE_SNACKBAR;\n","import {\n    RECEIVED_SNACKBAR_MESSAGE,\n    CLOSE_SNACKBAR,\n} from '../reducers/snackbar';\n\nexport const acReceivedSnackbarMessage = value => ({\n    type: RECEIVED_SNACKBAR_MESSAGE,\n    value,\n});\n\nexport const acCloseSnackbar = () => ({\n    type: CLOSE_SNACKBAR,\n});\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport Snackbar from '@material-ui/core/Snackbar';\n\nimport { sGetSnackbar } from '../../reducers/snackbar';\nimport { acCloseSnackbar } from '../../actions/snackbar';\n\nconst LOADING_DASHBOARD = 'LOADING_DASHBOARD';\nexport const loadingDashboardMsg = { name: '', type: LOADING_DASHBOARD };\n\nconst SnackbarMessageContent = ({ message }) => {\n    if (typeof message === 'object') {\n        //future message types:  switch(message.type)\n        return (\n            <span>\n                Loading <span style={{ fontWeight: 800 }}>{message.name}</span>{' '}\n                dashboard\n            </span>\n        );\n    }\n    return message;\n};\n\nexport const SnackbarMessage = props => {\n    return (\n        <Snackbar\n            style={{ zIndex: 10001 }}\n            open={props.snackbarOpen}\n            message={<SnackbarMessageContent message={props.snackbarMessage} />}\n            autoHideDuration={props.snackbarDuration}\n            onClose={props.onCloseSnackbar}\n        />\n    );\n};\n\nconst mapStateToProps = state => {\n    const { message, duration, open } = sGetSnackbar(state);\n    return {\n        snackbarOpen: open,\n        snackbarMessage: message,\n        snackbarDuration: duration,\n    };\n};\n\nexport default connect(\n    mapStateToProps,\n    {\n        onCloseSnackbar: acCloseSnackbar,\n    }\n)(SnackbarMessage);\n","import isObject from 'lodash/isObject';\nimport { apiFetchFavorite, getMapFields } from '../../../api/metadata';\nimport {\n    REPORT_TABLE,\n    CHART,\n    MAP,\n    EVENT_REPORT,\n    EVENT_CHART,\n    itemTypeMap,\n    getPlugin,\n} from '../../../modules/itemTypes';\nimport { getBaseUrl, getWithoutId } from '../../../modules/util';\nimport { getGridItemDomId } from '../../ItemGrid/gridUtil';\n\nexport const THEMATIC_LAYER = 'thematic';\n\nexport const pluginIsAvailable = (item = {}, visualization = {}) => {\n    const type = visualization.activeType || item.type;\n\n    return !!getPlugin(type);\n};\n\nexport const extractFavorite = item => {\n    if (!isObject(item)) {\n        return null;\n    }\n\n    switch (item.type) {\n        case REPORT_TABLE:\n            return item.reportTable;\n        case CHART:\n            return item.chart;\n        case MAP:\n            return item.map;\n        case EVENT_REPORT:\n            return item.eventReport;\n        case EVENT_CHART:\n            return item.eventChart;\n        default:\n            return (\n                item.reportTable ||\n                item.chart ||\n                item.map ||\n                item.eventReport ||\n                item.eventChart ||\n                {}\n            );\n    }\n};\n\nexport const extractMapView = map =>\n    map.mapViews && map.mapViews.find(mv => mv.layer.includes(THEMATIC_LAYER));\n\nexport const loadPlugin = (plugin, config, credentials) => {\n    if (!(plugin && plugin.load)) {\n        return;\n    }\n\n    plugin.url = credentials.baseUrl;\n    plugin.loadingIndicator = true;\n    plugin.dashboard = true;\n    if (credentials.auth) {\n        plugin.auth = credentials.auth;\n    }\n    plugin.load(config);\n};\n\nexport const getId = item => extractFavorite(item).id;\nexport const getName = item => extractFavorite(item).name;\nexport const getDescription = item => extractFavorite(item).description;\nexport const getLink = (item, d2) => {\n    const baseUrl = getBaseUrl(d2);\n    const appUrl = itemTypeMap[item.type].appUrl(getId(item));\n\n    return `${baseUrl}/${appUrl}`;\n};\n\nexport const load = async (\n    item,\n    visualization,\n    credentials,\n    activeType,\n    filter = {}\n) => {\n    const config = {\n        ...visualization,\n        el: getGridItemDomId(item.id),\n    };\n\n    const type = activeType || item.type;\n    const plugin = getPlugin(type);\n\n    loadPlugin(plugin, config, credentials);\n};\n\nexport const fetch = async item => {\n    const fetchedFavorite = await apiFetchFavorite(getId(item), item.type, {\n        fields: item.type === MAP ? getMapFields() : null,\n    });\n\n    return fetchedFavorite;\n};\n\nexport const resize = item => {\n    const plugin = getPlugin(item.type);\n\n    if (plugin && plugin.resize) {\n        plugin.resize(getGridItemDomId(item.id));\n    }\n};\n\nexport const unmount = (item, activeType) => {\n    const plugin = getPlugin(activeType);\n\n    if (plugin && plugin.unmount) {\n        plugin.unmount(getGridItemDomId(item.id));\n    }\n};\n\nexport const getVisualizationConfig = (\n    visualization,\n    originalType,\n    activeType\n) => {\n    if (originalType === MAP && originalType !== activeType) {\n        const extractedMapView = extractMapView(visualization);\n\n        if (extractedMapView === undefined) {\n            return null;\n        }\n\n        return getWithoutId({\n            ...visualization,\n            ...extractedMapView,\n            mapViews: undefined,\n        });\n    }\n\n    return getWithoutId(visualization);\n};\n","import {\n    SET_SELECTED_ID,\n    SET_SELECTED_ISLOADING,\n    SET_SELECTED_SHOWDESCRIPTION,\n} from '../reducers/selected';\nimport {\n    RECEIVED_VISUALIZATION,\n    RECEIVED_ACTIVE_VISUALIZATION,\n} from '../reducers/visualizations';\nimport { sGetSelectedIsLoading } from '../reducers/selected';\nimport { sGetUserUsername } from '../reducers/user';\nimport { getCustomDashboards, sGetDashboardById } from '../reducers/dashboards';\nimport { apiFetchDashboard } from '../api/dashboards';\nimport { acSetDashboardItems, acAppendDashboards } from './dashboards';\nimport { withShape } from '../components/ItemGrid/gridUtil';\nimport { tGetMessages } from '../components/Item/MessagesItem/actions';\nimport { acReceivedSnackbarMessage, acCloseSnackbar } from './snackbar';\nimport { storePreferredDashboardId } from '../api/localStorage';\nimport { loadingDashboardMsg } from '../components/SnackbarMessage/SnackbarMessage';\nimport {\n    REPORT_TABLE,\n    CHART,\n    MAP,\n    EVENT_REPORT,\n    EVENT_CHART,\n    MESSAGES,\n} from '../modules/itemTypes';\nimport { extractFavorite } from '../components/Item/VisualizationItem/plugin';\nimport { orObject } from '../modules/util';\n\n// actions\n\nexport const acSetSelectedId = value => ({\n    type: SET_SELECTED_ID,\n    value,\n});\n\nexport const acSetSelectedIsLoading = value => ({\n    type: SET_SELECTED_ISLOADING,\n    value,\n});\n\nexport const acSetSelectedShowDescription = value => ({\n    type: SET_SELECTED_SHOWDESCRIPTION,\n    value,\n});\n\nexport const acReceivedVisualization = value => ({\n    type: RECEIVED_VISUALIZATION,\n    value,\n});\n\nexport const acReceivedActiveVisualization = (id, type, activeType) => {\n    const action = {\n        type: RECEIVED_ACTIVE_VISUALIZATION,\n        id,\n    };\n\n    if (activeType !== type) {\n        action.activeType = activeType;\n    }\n\n    return action;\n};\n\nexport const tLoadDashboard = id => async (dispatch, getState) => {\n    try {\n        const dash = await apiFetchDashboard(id);\n        dispatch(acAppendDashboards(dash));\n\n        return Promise.resolve(dash);\n    } catch (err) {\n        console.log('Error: ', err);\n        return err;\n    }\n};\n\n// thunks\nexport const tSetSelectedDashboardById = id => async (dispatch, getState) => {\n    dispatch(acSetSelectedIsLoading(true));\n\n    const snackbarTimeout = setTimeout(() => {\n        const dashboardName = orObject(sGetDashboardById(getState(), id))\n            .displayName;\n        if (sGetSelectedIsLoading(getState()) && dashboardName) {\n            loadingDashboardMsg.name = dashboardName;\n\n            dispatch(\n                acReceivedSnackbarMessage({\n                    message: loadingDashboardMsg,\n                    open: true,\n                })\n            );\n        }\n    }, 500);\n\n    const onSuccess = selected => {\n        const customDashboard = getCustomDashboards(selected)[0];\n\n        dispatch(\n            acSetDashboardItems(withShape(customDashboard.dashboardItems))\n        );\n\n        storePreferredDashboardId(sGetUserUsername(getState()), id);\n\n        // add visualizations to store\n        customDashboard.dashboardItems.forEach(item => {\n            switch (item.type) {\n                case REPORT_TABLE:\n                case CHART:\n                case MAP:\n                case EVENT_REPORT:\n                case EVENT_CHART:\n                    dispatch(acReceivedVisualization(extractFavorite(item)));\n                    break;\n                case MESSAGES:\n                    dispatch(tGetMessages(id));\n                    break;\n                default:\n                    break;\n            }\n        });\n\n        dispatch(acSetSelectedId(id));\n\n        dispatch(acSetSelectedIsLoading(false));\n\n        clearTimeout(snackbarTimeout);\n\n        dispatch(acCloseSnackbar());\n\n        return selected;\n    };\n\n    const onError = error => {\n        console.log('Error: ', error);\n        return error;\n    };\n\n    try {\n        const selected = await dispatch(tLoadDashboard(id));\n\n        return onSuccess(selected);\n    } catch (err) {\n        return onError(err);\n    }\n};\n","export const getPreferredDashboardId = username =>\n    localStorage.getItem(`dhis2.dashboard.current.${username}`) || undefined;\n\nexport const storePreferredDashboardId = (username, dashboardId) => {\n    localStorage.setItem(`dhis2.dashboard.current.${username}`, dashboardId);\n};\n","import { RECEIVED_MESSAGES } from '../../../reducers/messages';\nimport { getMessages } from '../../../api/messages';\n\nconst onError = (action, error) => {\n    console.log(`Error in action ${action}: ${error}`);\n    return error;\n};\n\nexport const receivedMessages = value => ({\n    type: RECEIVED_MESSAGES,\n    value,\n});\n\nexport const tGetMessages = dashboardItemId => async dispatch => {\n    try {\n        const messages = await getMessages();\n        const { messageConversations } = messages;\n\n        return dispatch(receivedMessages(messageConversations));\n    } catch (err) {\n        return onError('Get Messages', err);\n    }\n};\n","/** @module reducers/editDashboard */\nimport update from 'immutability-helper';\nimport isEmpty from 'lodash/isEmpty';\nimport { orArray, orObject } from '../modules/util';\n\nexport const RECEIVED_EDIT_DASHBOARD = 'RECEIVED_EDIT_DASHBOARD';\nexport const RECEIVED_NOT_EDITING = 'RECEIVED_NOT_EDITING';\nexport const START_NEW_DASHBOARD = 'START_NEW_DASHBOARD';\nexport const RECEIVED_TITLE = 'RECEIVED_TITLE';\nexport const RECEIVED_DESCRIPTION = 'RECEIVED_DESCRIPTION';\nexport const ADD_DASHBOARD_ITEM = 'ADD_DASHBOARD_ITEM';\nexport const REMOVE_DASHBOARD_ITEM = 'REMOVE_DASHBOARD_ITEM';\nexport const UPDATE_DASHBOARD_ITEM = 'UPDATE_DASHBOARD_ITEM';\nexport const RECEIVED_DASHBOARD_LAYOUT = 'RECEIVED_DASHBOARD_LAYOUT';\n\nexport const DEFAULT_STATE_EDIT_DASHBOARD = {};\nexport const NEW_DASHBOARD_STATE = {\n    id: '',\n    name: '',\n    access: {},\n    description: '',\n    dashboardItems: [],\n};\n\nexport default (state = DEFAULT_STATE_EDIT_DASHBOARD, action) => {\n    switch (action.type) {\n        case RECEIVED_EDIT_DASHBOARD:\n            const newState = {};\n            Object.keys(NEW_DASHBOARD_STATE).map(\n                k => (newState[k] = action.value[k])\n            );\n            return newState;\n        case RECEIVED_NOT_EDITING:\n            return DEFAULT_STATE_EDIT_DASHBOARD;\n        case START_NEW_DASHBOARD:\n            return NEW_DASHBOARD_STATE;\n        case RECEIVED_TITLE: {\n            return Object.assign({}, state, { name: action.value });\n        }\n        case RECEIVED_DESCRIPTION: {\n            return Object.assign({}, state, {\n                description: action.value,\n            });\n        }\n        case ADD_DASHBOARD_ITEM:\n            return update(state, {\n                dashboardItems: { $unshift: [action.value] },\n            });\n        case REMOVE_DASHBOARD_ITEM: {\n            const idToRemove = action.value;\n\n            const dashboardItemIndex = state.dashboardItems.findIndex(\n                item => item.id === idToRemove\n            );\n\n            if (dashboardItemIndex > -1) {\n                return update(state, {\n                    dashboardItems: {\n                        $splice: [[dashboardItemIndex, 1]],\n                    },\n                });\n            }\n\n            return state;\n        }\n        case RECEIVED_DASHBOARD_LAYOUT: {\n            const stateItems = orArray(state.dashboardItems);\n\n            const newStateItems = action.value.map(({ x, y, w, h, i }) => {\n                const stateItem = stateItems.find(si => si.id === i);\n\n                return Object.assign({}, stateItem, { w, h, x, y });\n            });\n\n            return update(state, {\n                dashboardItems: { $set: newStateItems },\n            });\n        }\n        case UPDATE_DASHBOARD_ITEM: {\n            const dashboardItem = action.value;\n\n            const dashboardItemIndex = state.dashboardItems.findIndex(\n                item => item.id === dashboardItem.id\n            );\n\n            if (dashboardItemIndex > -1) {\n                const newState = update(state, {\n                    dashboardItems: {\n                        $splice: [[dashboardItemIndex, 1, dashboardItem]],\n                    },\n                });\n\n                return newState;\n            }\n\n            return state;\n        }\n        default:\n            return state;\n    }\n};\n\n// root selector\n\nexport const sGetEditDashboardRoot = state => state.editDashboard;\n\n// selectors\n\nexport const sGetIsEditing = state => !isEmpty(state.editDashboard);\n\nexport const sGetIsNewDashboard = state => {\n    return (\n        !isEmpty(state.editDashboard) && sGetEditDashboardRoot(state).id === ''\n    );\n};\n\nexport const sGetEditDashboardItems = state =>\n    orObject(sGetEditDashboardRoot(state)).dashboardItems;\n","export const CLEAR_EDIT_ITEM_FILTERS = 'CLEAR_EDIT_ITEM_FILTERS';\nexport const REMOVE_EDIT_ITEM_FILTER = 'REMOVE_EDIT_ITEM_FILTER';\nexport const SET_EDIT_ITEM_FILTERS = 'SET_EDIT_ITEM_FILTERS';\n\nexport const DEFAULT_STATE_EDIT_ITEM_FILTERS = {};\n\nexport default (state = DEFAULT_STATE_EDIT_ITEM_FILTERS, action) => {\n    switch (action.type) {\n        case REMOVE_EDIT_ITEM_FILTER: {\n            const newState = { ...state };\n\n            delete newState[action.id];\n\n            return newState;\n        }\n        case SET_EDIT_ITEM_FILTERS: {\n            return action.filters;\n        }\n        case CLEAR_EDIT_ITEM_FILTERS: {\n            return DEFAULT_STATE_EDIT_ITEM_FILTERS;\n        }\n        default:\n            return state;\n    }\n};\n\n// selectors\n\nexport const sGetEditItemFiltersRoot = state => state.editItemFilters;\n\nexport const sGetEditFiltersKeys = state =>\n    Object.keys(sGetEditItemFiltersRoot(state));\n","export const CLEAR_ITEM_FILTERS = 'CLEAR_ITEM_FILTERS';\nexport const SET_ITEM_FILTERS = 'SET_ITEM_FILTERS';\nexport const ADD_ITEM_FILTER = 'ADD_ITEM_FILTER';\nexport const REMOVE_ITEM_FILTER = 'REMOVE_ITEM_FILTER';\n\nexport const DEFAULT_STATE_ITEM_FILTERS = {};\n\nexport default (state = DEFAULT_STATE_ITEM_FILTERS, action) => {\n    switch (action.type) {\n        case ADD_ITEM_FILTER: {\n            return {\n                ...state,\n                [action.filter.id]: action.filter.value,\n            };\n        }\n        case REMOVE_ITEM_FILTER: {\n            const newState = { ...state };\n\n            delete newState[action.id];\n\n            return newState;\n        }\n        case SET_ITEM_FILTERS: {\n            return action.filters;\n        }\n        case CLEAR_ITEM_FILTERS: {\n            return DEFAULT_STATE_ITEM_FILTERS;\n        }\n        default:\n            return state;\n    }\n};\n\n// selectors\n\nexport const sGetItemFiltersRoot = state => state.itemFilters;\n\nexport const sGetFiltersKeys = state => Object.keys(sGetItemFiltersRoot(state));\n","import {\n    ADD_ITEM_FILTER,\n    REMOVE_ITEM_FILTER,\n    SET_ITEM_FILTERS,\n    CLEAR_ITEM_FILTERS,\n} from '../reducers/itemFilters';\n\nexport const FILTER_ORG_UNIT = 'ou';\n\n// actions\n\nexport const acAddItemFilter = filter => ({\n    type: ADD_ITEM_FILTER,\n    filter,\n});\n\nexport const acRemoveItemFilter = id => ({\n    type: REMOVE_ITEM_FILTER,\n    id,\n});\n\nexport const acClearItemFilters = () => ({\n    type: CLEAR_ITEM_FILTERS,\n});\n\nexport const acSetItemFilters = filters => ({\n    type: SET_ITEM_FILTERS,\n    filters,\n});\n","import {\n    REMOVE_EDIT_ITEM_FILTER,\n    SET_EDIT_ITEM_FILTERS,\n    CLEAR_EDIT_ITEM_FILTERS,\n} from '../reducers/editItemFilters';\n\n// actions\n\nexport const acRemoveEditItemFilter = id => ({\n    type: REMOVE_EDIT_ITEM_FILTER,\n    id,\n});\n\nexport const acClearEditItemFilters = () => ({\n    type: CLEAR_EDIT_ITEM_FILTERS,\n});\n\nexport const acSetEditItemFilters = filters => ({\n    type: SET_EDIT_ITEM_FILTERS,\n    filters,\n});\n","import { getInstance } from 'd2';\n\nconst onError = error => console.log('Error: ', error);\n\nconst saveDashboard = (dashboard, data) => {\n    const { name, description, dashboardItems } = data;\n\n    dashboard.name = name;\n    dashboard.description = description;\n    dashboard.dashboardItems = dashboardItems.map(item =>\n        Object.assign({}, item, { width: item.w, height: item.h })\n    );\n\n    return dashboard.save().then(msg => msg.response.uid);\n};\n\nexport const updateDashboard = data => {\n    return getInstance()\n        .then(d2 => {\n            return d2.models.dashboards\n                .get(data.id)\n                .then(dashboard => saveDashboard(dashboard, data));\n        })\n        .catch(onError);\n};\n\nexport const postDashboard = data => {\n    return getInstance().then(d2 => {\n        const dashboard = d2.models.dashboards.create();\n\n        return saveDashboard(dashboard, data);\n    });\n};\n","import { generateUid } from 'd2/uid';\n\nimport {\n    RECEIVED_EDIT_DASHBOARD,\n    START_NEW_DASHBOARD,\n    RECEIVED_NOT_EDITING,\n    RECEIVED_TITLE,\n    RECEIVED_DESCRIPTION,\n    RECEIVED_DASHBOARD_LAYOUT,\n    ADD_DASHBOARD_ITEM,\n    UPDATE_DASHBOARD_ITEM,\n    REMOVE_DASHBOARD_ITEM,\n} from '../reducers/editDashboard';\nimport { sGetEditDashboardRoot } from '../reducers/editDashboard';\nimport { updateDashboard, postDashboard } from '../api/editDashboard';\nimport { tSetSelectedDashboardById } from '../actions/selected';\nimport { NEW_ITEM_SHAPE } from '../components/ItemGrid/gridUtil';\nimport {\n    itemTypeMap,\n    isSpacerType,\n    TEXT,\n    emptyTextItemContent,\n    isTextType,\n} from '../modules/itemTypes';\n\nconst onError = error => {\n    console.log('Error (Saving Dashboard): ', error);\n    return error;\n};\n\n// actions\n\nexport const acSetEditDashboard = (dashboard, items) => {\n    const val = {\n        ...dashboard,\n        dashboardItems: items,\n    };\n\n    return {\n        type: RECEIVED_EDIT_DASHBOARD,\n        value: val,\n    };\n};\n\nexport const acSetEditNewDashboard = () => ({\n    type: START_NEW_DASHBOARD,\n});\n\nexport const acClearEditDashboard = () => ({\n    type: RECEIVED_NOT_EDITING,\n});\n\nexport const acSetDashboardTitle = value => ({\n    type: RECEIVED_TITLE,\n    value,\n});\n\nexport const acSetDashboardDescription = value => ({\n    type: RECEIVED_DESCRIPTION,\n    value,\n});\n\nexport const acUpdateDashboardLayout = value => ({\n    type: RECEIVED_DASHBOARD_LAYOUT,\n    value,\n});\n\nexport const acAddDashboardItem = item => {\n    const type = item.type;\n    delete item.type;\n    const itemPropName = itemTypeMap[type].propName;\n\n    return {\n        type: ADD_DASHBOARD_ITEM,\n        value: {\n            id: generateUid(),\n            type,\n            [itemPropName]: item.content,\n            ...NEW_ITEM_SHAPE,\n        },\n    };\n};\n\nexport const acUpdateDashboardItem = item => ({\n    type: UPDATE_DASHBOARD_ITEM,\n    value: item,\n});\n\nexport const acRemoveDashboardItem = value => ({\n    type: REMOVE_DASHBOARD_ITEM,\n    value,\n});\n\n// thunks\n\nexport const tSaveDashboard = () => async (dispatch, getState) => {\n    const dashboard = sGetEditDashboardRoot(getState());\n\n    const dashboardItems = dashboard.dashboardItems.map(item => {\n        const text = isTextType(item)\n            ? item.text || emptyTextItemContent\n            : null;\n\n        const type = isSpacerType(item) ? TEXT : item.type;\n\n        return {\n            ...item,\n            ...(text ? { text } : {}),\n            type,\n        };\n    });\n\n    const dashboardToSave = {\n        ...dashboard,\n        dashboardItems,\n    };\n\n    try {\n        const dashboardId = dashboardToSave.id\n            ? await updateDashboard(dashboardToSave)\n            : await postDashboard(dashboardToSave);\n\n        dispatch(acClearEditDashboard());\n        await dispatch(tSetSelectedDashboardById(dashboardId));\n\n        return Promise.resolve(dashboardId);\n    } catch (error) {\n        onError(error);\n    }\n};\n","import {\n    SET_DASHBOARDS,\n    ADD_DASHBOARDS,\n    SET_DASHBOARD_STARRED,\n    SET_DASHBOARD_DISPLAY_NAME,\n    SET_DASHBOARD_ITEMS,\n} from '../reducers/dashboards';\nimport {\n    getCustomDashboards,\n    sGetDashboardById,\n    sGetDashboardsSortedByStarred,\n} from '../reducers/dashboards';\nimport { sGetUserUsername } from '../reducers/user';\nimport { tSetSelectedDashboardById, acSetSelectedId } from './selected';\nimport { sGetSelectedId } from '../reducers/selected';\nimport { sGetIsEditing } from '../reducers/editDashboard';\nimport { sGetEditItemFiltersRoot } from '../reducers/editItemFilters';\nimport { acSetItemFilters, acClearItemFilters } from './itemFilters';\nimport { acClearEditItemFilters } from './editItemFilters';\nimport { acClearEditDashboard } from './editDashboard';\nimport {\n    apiFetchDashboards,\n    apiStarDashboard,\n    apiDeleteDashboard,\n} from '../api/dashboards';\nimport { getPreferredDashboardId } from '../api/localStorage';\nimport { arrayToIdMap } from '../modules/util';\n\n// actions\n\nexport const acSetDashboards = dashboards => ({\n    type: SET_DASHBOARDS,\n    value: arrayToIdMap(getCustomDashboards(dashboards)),\n});\n\nexport const acAppendDashboards = dashboards => ({\n    type: ADD_DASHBOARDS,\n    value: arrayToIdMap(getCustomDashboards(dashboards)),\n});\n\nexport const acSetDashboardStarred = (dashboardId, isStarred) => ({\n    type: SET_DASHBOARD_STARRED,\n    dashboardId: dashboardId,\n    value: isStarred,\n});\n\nexport const acSetDashboardDisplayName = (dashboardId, value) => ({\n    type: SET_DASHBOARD_DISPLAY_NAME,\n    dashboardId,\n    value,\n});\n\nexport const acSetDashboardItems = value => ({\n    type: SET_DASHBOARD_ITEMS,\n    value,\n});\n\n// thunks\n\nexport const tFetchDashboards = () => async dispatch => {\n    const collection = await apiFetchDashboards();\n    dispatch(acSetDashboards(collection.toArray()));\n};\n\nexport const tSelectDashboard = id => async (dispatch, getState) => {\n    const onError = error => {\n        console.log('Error (apiFetchDashboards): ', error);\n        return error;\n    };\n\n    try {\n        const state = getState();\n\n        let dashboardToSelect = null;\n        if (id) {\n            dashboardToSelect = sGetDashboardById(state, id) || null;\n        } else {\n            const preferredId = getPreferredDashboardId(\n                sGetUserUsername(state)\n            );\n            const dash = sGetDashboardById(state, preferredId);\n            dashboardToSelect =\n                preferredId && dash\n                    ? dash\n                    : sGetDashboardsSortedByStarred(state)[0];\n        }\n\n        if (dashboardToSelect) {\n            dispatch(tSetSelectedDashboardById(dashboardToSelect.id));\n\n            if (dashboardToSelect.id === sGetSelectedId(state)) {\n                if (sGetIsEditing(state)) {\n                    // disable filters when switching to edit mode\n                    dispatch(acClearItemFilters());\n                } else {\n                    // enable filters when switching to view mode\n                    dispatch(acSetItemFilters(sGetEditItemFiltersRoot(state)));\n                }\n            } else {\n                // clear filters when switching dashboard\n                dispatch(acClearEditItemFilters());\n                dispatch(acClearItemFilters());\n            }\n        } else {\n            dispatch(acSetSelectedId(false));\n        }\n    } catch (err) {\n        return onError(err);\n    }\n};\n\nexport const tStarDashboard = (id, isStarred) => async (dispatch, getState) => {\n    const onSuccess = id => {\n        dispatch(acSetDashboardStarred(id, isStarred));\n        return id;\n    };\n\n    const onError = error => {\n        console.log('Error (apiStarDashboard): ', error);\n        return error;\n    };\n    try {\n        await apiStarDashboard(id, isStarred);\n        return onSuccess(id);\n    } catch (err) {\n        return onError(err);\n    }\n};\n\nexport const tDeleteDashboard = id => async (dispatch, getState) => {\n    try {\n        await apiDeleteDashboard(id);\n        dispatch(acClearEditDashboard());\n        dispatch(acSetSelectedId());\n        dispatch(acSetDashboardItems([]));\n\n        await dispatch(tFetchDashboards());\n\n        return Promise.resolve();\n    } catch (err) {\n        console.log('Error (deleteDashboard): ', err);\n        return err;\n    }\n};\n","/** @module reducers/controlBar */\nimport { combineReducers } from 'redux';\nimport { validateReducer } from '../modules/util';\n\nexport const SET_CONTROLBAR_USER_ROWS = 'SET_CONTROLBAR_USER_ROWS';\n\nexport const DEFAULT_STATE_CONTROLBAR_ROWS = 1;\n\nconst userRows = (state = DEFAULT_STATE_CONTROLBAR_ROWS, action) => {\n    switch (action.type) {\n        case SET_CONTROLBAR_USER_ROWS:\n            return validateReducer(action.value, DEFAULT_STATE_CONTROLBAR_ROWS);\n        default:\n            return state;\n    }\n};\n\nexport default combineReducers({\n    userRows,\n});\n\n/**\n * Selectors that point to specific props in the state object\n * @function\n * @param {Object} state\n * @returns {Object}\n */\nexport const sGetControlBarRoot = state => state.controlBar;\n\n// Selector dependency level 2\n\nexport const sGetControlBarUserRows = state =>\n    sGetControlBarRoot(state).userRows;\n","import { getInstance } from 'd2';\nimport { DEFAULT_STATE_CONTROLBAR_ROWS } from '../reducers/controlBar';\n\nconst NAMESPACE = 'dashboard';\nconst KEY = 'controlBarRows';\n\nconst hasNamespace = async d2 => await d2.currentUser.dataStore.has(NAMESPACE);\n\nconst getNamespace = async (d2, hasNamespace) =>\n    hasNamespace\n        ? await d2.currentUser.dataStore.get(NAMESPACE)\n        : await d2.currentUser.dataStore.create(NAMESPACE);\n\nexport const apiGetControlBarRows = async () => {\n    const d2 = await getInstance();\n    const namespace = await getNamespace(d2, await hasNamespace(d2));\n    const hasKey = namespace.keys && namespace.keys.find(key => key === KEY);\n\n    if (hasKey) {\n        return await namespace.get(KEY);\n    } else {\n        await apiPostControlBarRows(DEFAULT_STATE_CONTROLBAR_ROWS, namespace);\n        console.log(\n            '(These errors to /userDataStore/dashboard can be ignored)'\n        );\n        return DEFAULT_STATE_CONTROLBAR_ROWS;\n    }\n};\n\nexport const apiPostControlBarRows = async (rows, namespace) => {\n    const d2 = await getInstance();\n    const ns = namespace || (await getNamespace(d2, hasNamespace));\n\n    ns.set(KEY, rows);\n};\n","import { SET_CONTROLBAR_USER_ROWS } from '../reducers/controlBar';\nimport { apiGetControlBarRows } from '../api/controlBar';\n\n// actions\n\nexport const acSetControlBarUserRows = rows => ({\n    type: SET_CONTROLBAR_USER_ROWS,\n    value: rows,\n});\n\n// thunks\n\nexport const tSetControlBarRows = () => async (dispatch, getState) => {\n    const onSuccess = rows => {\n        dispatch(acSetControlBarUserRows(rows));\n    };\n\n    const onError = error => {\n        console.log('Error (apiGetControlBarRows): ', error);\n        return error;\n    };\n\n    try {\n        const controlBarRows = await apiGetControlBarRows();\n        return onSuccess(controlBarRows);\n    } catch (err) {\n        return onError(err);\n    }\n};\n","import { FIXED_DIMENSIONS } from '@dhis2/analytics';\n\nconst getDefaultDimensions = () =>\n    Object.keys(FIXED_DIMENSIONS)\n        .filter(dimId =>\n            [FIXED_DIMENSIONS.pe.id, FIXED_DIMENSIONS.ou.id].includes(dimId)\n        )\n        .reduce((acc, key) => {\n            acc[key] = {\n                id: FIXED_DIMENSIONS[key].id,\n                iconName: FIXED_DIMENSIONS[key].iconName,\n                name: FIXED_DIMENSIONS[key].name(),\n            };\n\n            return acc;\n        }, {});\n\nexport const SET_DIMENSIONS = 'SET_DIMENSIONS';\n\nexport default (state = getDefaultDimensions(), action) => {\n    switch (action.type) {\n        case SET_DIMENSIONS: {\n            return {\n                ...getDefaultDimensions(),\n                ...action.value,\n            };\n        }\n        default:\n            return state;\n    }\n};\n\nexport const sGetDimensions = state => state.dimensions;\n","export const SET_SETTINGS = 'SET_SETTINGS';\nexport const ADD_SETTINGS = 'ADD_SETTINGS';\n\nexport const DEFAULT_SETTINGS = {\n    keyDateFormat: 'yyyy-MM-dd',\n    keyAnalysisRelativePeriod: 'LAST_12_MONTHS',\n    keyAnalysisDigitGroupSeparator: 'SPACE',\n    displayNameProperty: 'displayName',\n    uiLocale: 'en',\n    rootOrganisationUnit: {},\n};\n\nexport default (state = DEFAULT_SETTINGS, action) => {\n    switch (action.type) {\n        case SET_SETTINGS: {\n            return Object.assign({}, action.value);\n        }\n        case ADD_SETTINGS: {\n            return {\n                ...state,\n                ...action.value,\n            };\n        }\n        default:\n            return state;\n    }\n};\n\n// Selectors\n\nexport const sGetSettings = state => state.settings;\n\nexport const sGetSettingsDisplayNameProperty = state =>\n    sGetSettings(state).displayNameProperty;\n\nexport const sGetRootOrgUnit = state =>\n    sGetSettings(state).rootOrganisationUnit;\n\nexport const sGetRelativePeriod = state =>\n    sGetSettings(state).keyAnalysisRelativePeriod;\n\nexport const sGetUiLocale = state => sGetSettings(state).uiLocale;\n","import keyBy from 'lodash/keyBy';\nimport sortBy from 'lodash/sortBy';\nimport { SET_DIMENSIONS } from '../reducers/dimensions';\nimport { apiFetchDimensions } from '@dhis2/analytics';\nimport { sGetSettingsDisplayNameProperty } from '../reducers/settings';\n\nexport const acSetDimensions = dimensions => ({\n    type: SET_DIMENSIONS,\n    value: keyBy(sortBy(dimensions, [d => d.name.toLowerCase()]), 'id'),\n});\n\nexport const tSetDimensions = d2 => async (dispatch, getState) => {\n    const onSuccess = dimensions => {\n        dispatch(acSetDimensions(dimensions));\n    };\n\n    const onError = error => {\n        console.log('Error (apiFetchDimensions): ', error);\n        return error;\n    };\n\n    try {\n        const displayNameProp = sGetSettingsDisplayNameProperty(getState());\n        const dimensions = await apiFetchDimensions(d2, displayNameProp);\n\n        // filter out CATEGORY that are not of type ATTRIBUTE\n        const filteredDimensions = dimensions.filter(\n            dim =>\n                dim.dimensionType !== 'CATEGORY' ||\n                (dim.dimensionType === 'CATEGORY' &&\n                    dim.dataDimensionType === 'ATTRIBUTE')\n        );\n        return onSuccess(filteredDimensions);\n    } catch (err) {\n        return onError(err);\n    }\n};\n","import React from 'react';\nimport i18n from '@dhis2/d2-i18n';\nimport { colors } from '@dhis2/ui-core';\nimport { withStyles } from '@material-ui/core/styles';\n\nexport const SHOWMORE_BAR_HEIGHT = 16;\n\nconst styles = {\n    showMore: {\n        color: colors.grey700,\n        cursor: 'pointer',\n        fontSize: 11,\n        paddingTop: 5,\n        '&:hover': {\n            textDecoration: 'underline',\n        },\n    },\n    disabled: {\n        paddingTop: 5,\n        color: colors.grey500,\n        fontSize: 11,\n        cursor: 'not-allowed',\n    },\n};\n\nexport const ShowMoreButton = ({ onClick, isMaxHeight, classes, disabled }) => {\n    return (\n        <div style={{ textAlign: 'center' }}>\n            {disabled ? (\n                <div className={classes.disabled}>{i18n.t('Show more')}</div>\n            ) : (\n                <div className={classes.showMore} onClick={onClick}>\n                    {isMaxHeight ? i18n.t('Show less') : i18n.t('Show more')}\n                </div>\n            )}\n        </div>\n    );\n};\n\nexport default withStyles(styles)(ShowMoreButton);\n","import { SHOWMORE_BAR_HEIGHT } from './ShowMoreButton';\n\nexport const CONTROL_BAR_ROW_HEIGHT = 40;\nexport const FIRST_ROW_PADDING_HEIGHT = 10;\nexport const MIN_ROW_COUNT = 1;\n\nexport const HEADERBAR_HEIGHT = 48;\n\nconst CONTROL_BAR_OUTER_HEIGHT_DIFF =\n    FIRST_ROW_PADDING_HEIGHT + SHOWMORE_BAR_HEIGHT - 2; // 2 pixel \"adjustment\"\n\nexport const getRowsHeight = rows => {\n    return rows * CONTROL_BAR_ROW_HEIGHT;\n};\n\nexport const getNumRowsFromHeight = height => {\n    return Math.floor(\n        (height - CONTROL_BAR_OUTER_HEIGHT_DIFF) / CONTROL_BAR_ROW_HEIGHT\n    );\n};\n\nexport const getTopOffset = rows => {\n    return HEADERBAR_HEIGHT + getControlBarHeight(rows, false);\n};\n\nexport const getControlBarHeight = rows => {\n    return getRowsHeight(rows) + CONTROL_BAR_OUTER_HEIGHT_DIFF;\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { colors } from '@dhis2/ui-core';\nimport { HEADERBAR_HEIGHT } from './controlBarDimensions';\n\nimport classes from './styles/ControlBar.module.css';\n\nconst DRAG_HANDLE_HEIGHT = 7;\n\nclass ControlBar extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            dragging: false,\n        };\n    }\n\n    onStartDrag = () => {\n        this.setState({ dragging: true });\n        window.addEventListener('mousemove', this.onDrag);\n        window.addEventListener('mouseup', this.onEndDrag);\n    };\n\n    onDrag = event => {\n        event.preventDefault();\n        event.stopPropagation();\n\n        const newHeight = event.clientY;\n\n        if (\n            this.props.onChangeHeight &&\n            newHeight !== this.props.height &&\n            newHeight > 0\n        ) {\n            requestAnimationFrame(() => {\n                this.props.onChangeHeight(newHeight);\n            });\n        }\n    };\n\n    onEndDrag = () => {\n        this.setState({ dragging: false });\n        window.removeEventListener('mousemove', this.onDrag);\n        window.removeEventListener('mouseup', this.onEndDrag);\n\n        if (this.props.onEndDrag) {\n            this.props.onEndDrag();\n        }\n    };\n\n    renderDragHandle() {\n        return typeof this.props.onChangeHeight === 'function' ? (\n            <div\n                className={classes.draghandle}\n                style={{ height: DRAG_HANDLE_HEIGHT }}\n                onMouseDown={this.onStartDrag}\n            />\n        ) : null;\n    }\n\n    render() {\n        const height = Math.max(this.props.height, 0) + DRAG_HANDLE_HEIGHT;\n\n        const rootStyle = Object.assign(\n            {\n                height,\n                top: HEADERBAR_HEIGHT,\n                backgroundColor: this.props.editMode\n                    ? colors.yellow050\n                    : colors.white,\n                paddingBottom: DRAG_HANDLE_HEIGHT,\n            },\n            // Disable animations while dragging\n            this.state.dragging ? { transition: 'none' } : {}\n        );\n\n        return (\n            <div style={rootStyle} className={classes.root}>\n                <div className={classes.content}>{this.props.children}</div>\n                {this.renderDragHandle()}\n            </div>\n        );\n    }\n}\n\nControlBar.propTypes = {\n    /**\n     * The height of the control bar in number of lines. Must be a positive integer.\n     */\n    height: PropTypes.number.isRequired,\n\n    /**\n     * If true, the background color of the control bar changes to indicate that edit mode is active.\n     */\n    editMode: PropTypes.bool.isRequired,\n\n    /**\n     * Callback function that is called when the control bar is resized.\n     * The callback receives one argument: The new height in pixels.\n     *\n     * If no callback is specified the control bar will not have a drag handle.\n     */\n    onChangeHeight: PropTypes.func,\n\n    /**\n     * Callback function that is called when the control bar is dropped after being dragged.\n     * The callback receives one argument: The new height in pixels.\n     *\n     * Ignored if no \"onChangeHeight\" function is provided.\n     */\n    onEndDrag: PropTypes.func,\n\n    /**\n     * The contents of the control bar.\n     */\n    children: PropTypes.node.isRequired,\n};\n\nControlBar.defaultProps = {\n    onChangeHeight: null,\n    onEndDrag: null,\n};\n\nexport default ControlBar;\n","import React from 'react';\n\nconst StarIcon = ({ className }) => (\n    <svg\n        className={className}\n        xmlns=\"http://www.w3.org/2000/svg\"\n        viewBox=\"0 0 24 24\"\n    >\n        <path d=\"M0 0h24v24H0z\" fill=\"none\" />\n        <path d=\"M12 17.27L18.18 21l-1.64-7.03L22 9.24l-7.19-.61L12 2 9.19 8.63 2 9.24l5.46 4.73L5.82 21z\" />\n        <path d=\"M0 0h24v24H0z\" fill=\"none\" />\n    </svg>\n);\n\nexport default StarIcon;\n","import { getInstance } from 'd2';\n\nexport const apiPostDataStatistics = async (eventType, id) => {\n    const d2 = await getInstance();\n    const url = `dataStatistics?eventType=${eventType}&favorite=${id}`;\n\n    d2.Api.getApi().post(url);\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport { Chip, colors } from '@dhis2/ui-core';\nimport { Link } from 'react-router-dom';\nimport debounce from 'lodash/debounce';\n\nimport StarIcon from '../../icons/Star';\nimport { apiPostDataStatistics } from '../../api/dataStatistics';\n\nconst styles = {\n    chip: {\n        margin: '3px',\n    },\n    link: {\n        color: colors.grey600,\n        display: 'inline-block',\n        textDecoration: 'none',\n        verticalAlign: 'top',\n    },\n    icon: {\n        height: '20px',\n        marginTop: '2px',\n        width: '20px',\n    },\n    selected: {\n        fill: colors.white,\n    },\n    unselected: {\n        fill: colors.grey700,\n    },\n};\n\nexport const DashboardItemChip = ({\n    starred,\n    selected,\n    label,\n    dashboardId,\n    classes,\n}) => {\n    const chipProps = {\n        selected,\n        className: classes.chip,\n    };\n\n    if (starred) {\n        const selectedState = selected ? classes.selected : classes.unselected;\n        chipProps.icon = (\n            <StarIcon className={`${classes.icon} ${selectedState}`} />\n        );\n    }\n\n    return (\n        <Link\n            className={classes.link}\n            to={`/${dashboardId}`}\n            onClick={debounce(\n                () => apiPostDataStatistics('DASHBOARD_VIEW', dashboardId),\n                500\n            )}\n        >\n            <Chip {...chipProps}>{label}</Chip>\n        </Link>\n    );\n};\n\nDashboardItemChip.propTypes = {\n    starred: PropTypes.bool.isRequired,\n    selected: PropTypes.bool.isRequired,\n    label: PropTypes.string.isRequired,\n    dashboardId: PropTypes.string.isRequired,\n};\n\nexport default withStyles(styles)(DashboardItemChip);\n","import React from 'react';\nimport { colors } from '@dhis2/ui-core';\n\nconst AddCircleIcon = () => (\n    <svg\n        xmlns=\"http://www.w3.org/2000/svg\"\n        width=\"32\"\n        height=\"32\"\n        fill={colors.teal600}\n        viewBox=\"0 0 24 24\"\n    >\n        <path d=\"M12 2C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2zm4 11h-3v3c0 .55-.45 1-1 1s-1-.45-1-1v-3H8c-.55 0-1-.45-1-1s.45-1 1-1h3V8c0-.55.45-1 1-1s1 .45 1 1v3h3c.55 0 1 .45 1 1s-.45 1-1 1z\" />\n    </svg>\n);\n\nexport default AddCircleIcon;\n","import React from 'react';\nimport { colors } from '@dhis2/ui-core';\n\nconst ClearIcon = ({ className }) => (\n    <svg\n        className={className}\n        fill={colors.grey800}\n        xmlns=\"http://www.w3.org/2000/svg\"\n        viewBox=\"0 0 24 24\"\n    >\n        <path d=\"M19 6.41L17.59 5 12 10.59 6.41 5 5 6.41 10.59 12 5 17.59 6.41 19 12 13.41 17.59 19 19 17.59 13.41 12z\" />\n        <path d=\"M0 0h24v24H0z\" fill=\"none\" />\n    </svg>\n);\n\nexport default ClearIcon;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport ClearIcon from '../../icons/Clear';\n\nimport classes from './styles/ClearButton.module.css';\n\nexport const ClearButton = ({ onClear }) => (\n    <button className={classes.button} onClick={onClear}>\n        <span>\n            <ClearIcon className={classes.icon} color=\"action\" />\n        </span>\n    </button>\n);\n\nClearButton.propTypes = {\n    onClear: PropTypes.func.isRequired,\n};\n\nexport default ClearButton;\n","import { combineReducers } from 'redux';\nimport { validateReducer } from '../modules/util';\n\nexport const SET_DASHBOARDS_FILTER_NAME = 'SET_DASHBOARDS_FILTER_NAME';\nexport const SET_DASHBOARDS_FILTER_OWNER = 'SET_DASHBOARDS_FILTER_OWNER';\nexport const SET_DASHBOARDS_FILTER_ORDER = 'SET_DASHBOARDS_FILTER_ORDER';\n\nexport const ownerData = [\n    { id: 'ALL', value: 'All users' },\n    { id: 'ME', value: 'Created by me' },\n    { id: 'OTHERS', value: 'Created by others' },\n];\n\nexport const orderData = [\n    { id: 'NAME:ASC', value: 'Name (asc)' },\n    { id: 'NAME:ASC', value: 'Name (desc)' },\n    { id: 'ITEMS:ASC', value: 'Number of items (asc)' },\n    { id: 'ITEMS:ASC', value: 'Number of items (desc)' },\n    { id: 'CREATED:ASC', value: 'Created date (asc)' },\n    { id: 'CREATED:ASC', value: 'Created date (desc)' },\n];\n\nexport const DEFAULT_STATE_DASHBOARDS_FILTER_NAME = '';\nexport const DEFAULT_STATE_DASHBOARDS_FILTER_OWNER = ownerData[0].id;\nexport const DEFAULT_STATE_DASHBOARDS_FILTER_ORDER = orderData[0].id;\n\nconst name = (state = DEFAULT_STATE_DASHBOARDS_FILTER_NAME, action) => {\n    switch (action.type) {\n        case SET_DASHBOARDS_FILTER_NAME:\n            return validateReducer(\n                action.value,\n                DEFAULT_STATE_DASHBOARDS_FILTER_NAME\n            );\n        default:\n            return state;\n    }\n};\n\nconst owner = (state = DEFAULT_STATE_DASHBOARDS_FILTER_OWNER, action) => {\n    switch (action.type) {\n        case SET_DASHBOARDS_FILTER_OWNER:\n            return validateReducer(\n                action.value,\n                DEFAULT_STATE_DASHBOARDS_FILTER_NAME\n            );\n        default:\n            return state;\n    }\n};\n\nconst order = (state = DEFAULT_STATE_DASHBOARDS_FILTER_ORDER, action) => {\n    switch (action.type) {\n        case SET_DASHBOARDS_FILTER_ORDER:\n            return validateReducer(\n                action.value,\n                DEFAULT_STATE_DASHBOARDS_FILTER_ORDER\n            );\n        default:\n            return state;\n    }\n};\n\nexport default combineReducers({\n    name,\n    owner,\n    order,\n});\n\n// selectors\n\nexport const sGetDashboardsFilterRoot = state => state.dashboardsFilter;\n\n// selector dependency level 2\n\nexport const sGetFilterName = state => sGetDashboardsFilterRoot(state).name;\nexport const sGetFilterOwner = state => sGetDashboardsFilterRoot(state).owner;\nexport const sGetFilterOrder = state => sGetDashboardsFilterRoot(state).order;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport i18n from '@dhis2/d2-i18n';\nimport InputField from '@material-ui/core/Input';\nimport InputAdornment from '@material-ui/core/InputAdornment';\nimport SearchIcon from '@material-ui/icons/Search';\nimport { colors } from '@dhis2/ui-core';\n\nimport ClearButton from './ClearButton';\nimport { DEFAULT_STATE_DASHBOARDS_FILTER_NAME } from '../../reducers/dashboardsFilter';\n\nexport const KEYCODE_ENTER = 13;\nexport const KEYCODE_ESCAPE = 27;\n\nconst styles = {\n    filterField: {\n        fontSize: '14px',\n        width: '200px',\n        height: '30px',\n        top: '-4px',\n    },\n    searchIcon: {\n        color: colors.grey700,\n        width: '20px',\n        height: '20px',\n    },\n};\n\nexport class Filter extends Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            value: DEFAULT_STATE_DASHBOARDS_FILTER_NAME,\n        };\n    }\n\n    componentWillReceiveProps(nextProps) {\n        this.setState({\n            value: nextProps.name,\n        });\n    }\n\n    setFilterValue = event => {\n        event.preventDefault();\n\n        this.props.onChangeName(event.target.value);\n    };\n\n    handleKeyUp = event => {\n        switch (event.keyCode) {\n            case KEYCODE_ENTER:\n                this.props.onKeypressEnter();\n                break;\n            case KEYCODE_ESCAPE:\n                this.props.onChangeName();\n                break;\n            default:\n                break;\n        }\n    };\n\n    render() {\n        const { classes, name, onChangeName } = this.props;\n\n        const startAdornment = (\n            <InputAdornment position=\"start\">\n                <SearchIcon className={classes.searchIcon} />\n            </InputAdornment>\n        );\n\n        const endAdornment =\n            name !== '' && name !== null ? (\n                <InputAdornment position=\"end\">\n                    <ClearButton onClear={() => onChangeName()} />\n                </InputAdornment>\n            ) : null;\n\n        return (\n            <InputField\n                className={classes.filterField}\n                placeholder={i18n.t('Search for a dashboard')}\n                startAdornment={startAdornment}\n                endAdornment={endAdornment}\n                value={this.state.value}\n                onChange={this.setFilterValue}\n                onKeyUp={this.handleKeyUp}\n            />\n        );\n    }\n}\n\nFilter.propTypes = {\n    name: PropTypes.string,\n    onChangeName: PropTypes.func,\n};\n\nFilter.defaultProps = {\n    name: '',\n    onChangeName: Function.prototype,\n};\n\nexport default withStyles(styles)(Filter);\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { Link, withRouter } from 'react-router-dom';\nimport ControlBar from './ControlBar';\nimport arraySort from 'd2-utilizr/lib/arraySort';\n\nimport Chip from './DashboardItemChip';\nimport AddCircleIcon from '../../icons/AddCircle';\nimport Filter from './Filter';\nimport ShowMoreButton from './ShowMoreButton';\nimport {\n    FIRST_ROW_PADDING_HEIGHT,\n    MIN_ROW_COUNT,\n    getRowsHeight,\n    getControlBarHeight,\n    getNumRowsFromHeight,\n} from './controlBarDimensions';\nimport { sGetControlBarUserRows } from '../../reducers/controlBar';\nimport { sGetAllDashboards } from '../../reducers/dashboards';\nimport { sGetFilterName } from '../../reducers/dashboardsFilter';\nimport { sGetSelectedId } from '../../reducers/selected';\nimport { acSetControlBarUserRows } from '../../actions/controlBar';\nimport { acSetFilterName } from '../../actions/dashboardsFilter';\nimport { orObject, orArray } from '../../modules/util';\nimport { apiPostControlBarRows } from '../../api/controlBar';\n\nimport classes from './styles/DashboardsBar.module.css';\n\nexport const MAX_ROW_COUNT = 10;\n\nexport class DashboardsBar extends Component {\n    state = {\n        rows: MIN_ROW_COUNT,\n    };\n\n    setInitialDashboardState = rows => {\n        this.setState({ rows, isMaxHeight: rows === MAX_ROW_COUNT });\n    };\n\n    componentDidMount() {\n        this.setInitialDashboardState(this.props.userRows);\n    }\n\n    componentWillReceiveProps(nextProps) {\n        this.setInitialDashboardState(nextProps.userRows);\n    }\n\n    onChangeHeight = newHeight => {\n        const adjustedHeight = newHeight - 52; // don't rush the transition to a bigger row count\n        const newRows = Math.max(\n            MIN_ROW_COUNT,\n            getNumRowsFromHeight(adjustedHeight)\n        );\n\n        if (newRows !== this.state.rows) {\n            const newRowCount = Math.min(newRows, MAX_ROW_COUNT);\n\n            this.props.onChangeHeight(newRowCount);\n        }\n    };\n\n    onEndDrag = () => {\n        return apiPostControlBarRows(this.state.rows);\n    };\n\n    onToggleMaxHeight = () => {\n        const rows =\n            this.state.rows === MAX_ROW_COUNT\n                ? this.props.userRows\n                : MAX_ROW_COUNT;\n\n        this.setState({ rows, isMaxHeight: !this.state.isMaxHeight });\n    };\n\n    onSelectDashboard = () => {\n        this.props.history.push(`/${this.props.dashboards[0].id}`);\n    };\n\n    render() {\n        const { dashboards, name, selectedId, onChangeFilterName } = this.props;\n\n        const rowCount = this.state.isMaxHeight\n            ? MAX_ROW_COUNT\n            : this.state.rows;\n        const controlBarHeight = getControlBarHeight(rowCount);\n        const contentWrapperStyle = {\n            padding: `${FIRST_ROW_PADDING_HEIGHT}px 6px 0 6px`,\n            overflowY: this.state.isMaxHeight ? 'auto' : 'hidden',\n            height: getRowsHeight(rowCount) + FIRST_ROW_PADDING_HEIGHT,\n        };\n\n        return (\n            <ControlBar\n                height={controlBarHeight}\n                onChangeHeight={this.onChangeHeight}\n                onEndDrag={this.onEndDrag}\n                editMode={false}\n            >\n                <div style={contentWrapperStyle}>\n                    <div className={classes.leftControls}>\n                        <Link\n                            style={{\n                                display: 'inline-block',\n                                textDecoration: 'none',\n                                marginRight: 10,\n                                position: 'relative',\n                                top: '2px',\n                            }}\n                            to={'/new'}\n                        >\n                            <AddCircleIcon />\n                        </Link>\n                        <Filter\n                            name={name}\n                            onChangeName={onChangeFilterName}\n                            onKeypressEnter={this.onSelectDashboard}\n                        />\n                    </div>\n                    {orArray(dashboards).map(dashboard => (\n                        <Chip\n                            key={dashboard.id}\n                            label={dashboard.displayName}\n                            starred={dashboard.starred}\n                            dashboardId={dashboard.id}\n                            selected={dashboard.id === selectedId}\n                        />\n                    ))}\n                </div>\n                <ShowMoreButton\n                    onClick={this.onToggleMaxHeight}\n                    isMaxHeight={this.state.isMaxHeight}\n                    disabled={this.props.userRows === MAX_ROW_COUNT}\n                />\n            </ControlBar>\n        );\n    }\n}\n\nconst mapStateToProps = state => ({\n    dashboards: sGetAllDashboards(state),\n    name: sGetFilterName(state),\n    userRows: sGetControlBarUserRows(state),\n    selectedId: sGetSelectedId(state),\n});\n\nconst mapDispatchToProps = {\n    onChangeHeight: acSetControlBarUserRows,\n    onChangeFilterName: acSetFilterName,\n};\nconst mergeProps = (stateProps, dispatchProps, ownProps) => {\n    const dashboards = Object.values(orObject(stateProps.dashboards));\n    const displayDashboards = arraySort(\n        dashboards.filter(d =>\n            d.displayName.toLowerCase().includes(stateProps.name.toLowerCase())\n        ),\n        'ASC',\n        'displayName'\n    );\n\n    return {\n        ...stateProps,\n        ...ownProps,\n        ...dispatchProps,\n        dashboards: [\n            ...displayDashboards.filter(d => d.starred),\n            ...displayDashboards.filter(d => !d.starred),\n        ],\n    };\n};\n\nexport default withRouter(\n    connect(\n        mapStateToProps,\n        mapDispatchToProps,\n        mergeProps\n    )(DashboardsBar)\n);\n","import {\n    SET_DASHBOARDS_FILTER_NAME,\n    SET_DASHBOARDS_FILTER_OWNER,\n    SET_DASHBOARDS_FILTER_ORDER,\n} from '../reducers/dashboardsFilter';\n\n// actions\n\nexport const acSetFilterName = value => ({\n    type: SET_DASHBOARDS_FILTER_NAME,\n    value,\n});\n\nexport const acSetFilterOwner = value => ({\n    type: SET_DASHBOARDS_FILTER_OWNER,\n    value,\n});\n\nexport const acSetFilterOrder = value => ({\n    type: SET_DASHBOARDS_FILTER_ORDER,\n    value,\n});\n","import React from 'react';\nimport { connect } from 'react-redux';\n\nimport {\n    getTopOffset,\n    MIN_ROW_COUNT,\n} from '../ControlBar/controlBarDimensions';\nimport { sGetControlBarUserRows } from '../../reducers/controlBar';\n\nconst DashboardVerticalOffset = props => {\n    const rows = props.editMode ? MIN_ROW_COUNT : props.userRows;\n    const marginTop = getTopOffset(rows);\n\n    return <div className=\"page-container-top-margin\" style={{ marginTop }} />;\n};\n\nconst mapStateToProps = state => ({\n    userRows: sGetControlBarUserRows(state),\n});\n\nexport default connect(mapStateToProps)(DashboardVerticalOffset);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { MenuItem, colors } from '@dhis2/ui-core';\n\nconst HeaderMenuItem = ({ title }) => (\n    <MenuItem\n        dense\n        key={title}\n        disabled\n        label={\n            <p style={{ color: colors.grey800, fontWeight: '600' }}>{title}</p>\n        }\n    />\n);\n\nHeaderMenuItem.propTypes = {\n    title: PropTypes.string.isRequired,\n};\n\nexport default HeaderMenuItem;\n","import React from 'react';\nimport { colors } from '@dhis2/ui-core';\n\nconst LaunchIcon = ({ className }) => (\n    <svg\n        className={className}\n        xmlns=\"http://www.w3.org/2000/svg\"\n        width=\"12\"\n        height=\"12\"\n        fill={colors.grey600}\n        viewBox=\"0 0 24 24\"\n    >\n        <path d=\"M0 0h24v24H0z\" fill=\"none\" />\n        <path d=\"M19 19H5V5h7V3H5c-1.11 0-2 .9-2 2v14c0 1.1.89 2 2 2h14c1.1 0 2-.9 2-2v-7h-2v7zM14 3v2h3.59l-9.83 9.83 1.41 1.41L19 6.41V10h2V3h-7z\" />\n    </svg>\n);\n\nexport default LaunchIcon;\n","import React from 'react';\nimport { MenuItem, colors } from '@dhis2/ui-core';\nimport i18n from '@dhis2/d2-i18n';\n\nimport { getItemIcon } from '../../modules/itemTypes';\nimport LaunchIcon from '../../icons/Launch';\n\nimport classes from './styles/ContentMenuItem.module.css';\n\nconst LaunchLink = ({ url }) => (\n    <a\n        onClick={e => e.stopPropagation()}\n        className={classes.launchLink}\n        target=\"_blank\"\n        rel=\"noopener noreferrer\"\n        href={url}\n    >\n        <LaunchIcon />\n    </a>\n);\n\nconst InsertButton = () => (\n    <button className={classes.buttonInsert}>{i18n.t('Insert')}</button>\n);\n\nconst ContentMenuItem = ({ type, name, onInsert, url }) => {\n    const ItemIcon = getItemIcon(type);\n\n    return (\n        <MenuItem\n            dense\n            onClick={onInsert}\n            label={\n                <div className={classes.menuItem}>\n                    <div className={classes.label}>\n                        <ItemIcon\n                            style={{ margin: '6px', fill: colors.grey600 }}\n                        />\n                        <span>{name}</span>\n                        {url ? <LaunchLink url={url} /> : null}\n                    </div>\n                    <InsertButton />\n                </div>\n            }\n        />\n    );\n};\n\nexport default ContentMenuItem;\n","import i18n from '@dhis2/d2-i18n';\nimport {\n    spacerContent,\n    REPORT_TABLE,\n    CHART,\n    MAP,\n    EVENT_CHART,\n    EVENT_REPORT,\n    USERS,\n    REPORTS,\n    RESOURCES,\n    APP,\n    MESSAGES,\n    TEXT,\n    SPACER,\n} from '../../modules/itemTypes';\n\nexport const singleItems = [\n    {\n        id: 'additional',\n        header: () => i18n.t('Additional items'),\n        items: [\n            {\n                type: TEXT,\n                name: () => i18n.t('Text box'),\n                content: '',\n            },\n            {\n                type: MESSAGES,\n                name: () => i18n.t('Messages'),\n                content: 'true',\n            },\n            {\n                type: SPACER,\n                name: () => i18n.t('Spacer'),\n                content: spacerContent,\n            },\n        ],\n    },\n];\n\n// categorizedItems are grouped in the item selector menu\nexport const categorizedItems = [\n    REPORT_TABLE,\n    CHART,\n    MAP,\n    EVENT_REPORT,\n    EVENT_CHART,\n    USERS,\n    REPORTS,\n    RESOURCES,\n    APP,\n];\n\n// listItemTypes are included in a single dashboard item\nexport const listItemTypes = [REPORTS, RESOURCES, USERS];\n","import React, { Component, Fragment } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport i18n from '@dhis2/d2-i18n';\nimport { MenuItem, Divider } from '@dhis2/ui-core';\n\nimport HeaderMenuItem from './HeaderMenuItem';\nimport ContentMenuItem from './ContentMenuItem';\n\nimport { tAddListItemContent } from './actions';\nimport { acAddDashboardItem } from '../../actions/editDashboard';\nimport { getItemUrl, APP } from '../../modules/itemTypes';\nimport { categorizedItems, listItemTypes } from './selectableItems';\n\nimport classes from './styles/CategorizedMenuGroup.module.css';\n\nclass CategorizedMenuGroup extends Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            seeMore: false,\n        };\n    }\n\n    addItem = item => () => {\n        const { type, acAddDashboardItem, tAddListItemContent } = this.props;\n\n        if (type === APP) {\n            acAddDashboardItem({ type, content: item.key });\n        } else {\n            const newItem = {\n                id: item.id,\n                name: item.displayName || item.name,\n            };\n\n            if (listItemTypes.includes(type)) {\n                tAddListItemContent(type, newItem);\n            } else {\n                acAddDashboardItem({ type, content: newItem });\n            }\n        }\n    };\n\n    toggleSeeMore = () => {\n        this.setState({ seeMore: !this.state.seeMore });\n\n        this.props.onChangeItemsLimit(this.props.type);\n    };\n\n    render() {\n        const { title, type, items, hasMore } = this.props;\n        return (\n            <Fragment>\n                <HeaderMenuItem title={title} />\n                {items.map(item => {\n                    const itemUrl = getItemUrl(type, item, this.context.d2);\n                    return (\n                        <ContentMenuItem\n                            key={item.id || item.key}\n                            type={type}\n                            name={item.displayName || item.name}\n                            onInsert={this.addItem(item)}\n                            url={itemUrl}\n                        />\n                    );\n                })}\n                {hasMore ? (\n                    <MenuItem\n                        dense\n                        key={`showmore${title}`}\n                        onClick={this.toggleSeeMore}\n                        label={\n                            <button className={classes.showMoreButton}>\n                                {this.state.seeMore\n                                    ? i18n.t('Show fewer')\n                                    : i18n.t('Show more')}\n                            </button>\n                        }\n                    />\n                ) : null}\n                <Divider margin=\"8px 0px\" />\n            </Fragment>\n        );\n    }\n}\n\nCategorizedMenuGroup.propTypes = {\n    type: PropTypes.oneOf(categorizedItems).isRequired,\n    title: PropTypes.string.isRequired,\n    items: PropTypes.array.isRequired,\n    onChangeItemsLimit: PropTypes.func.isRequired,\n};\n\nCategorizedMenuGroup.contextTypes = {\n    d2: PropTypes.object.isRequired,\n};\n\nexport default connect(\n    null,\n    {\n        acAddDashboardItem,\n        tAddListItemContent,\n    }\n)(CategorizedMenuGroup);\n","import { sGetEditDashboardRoot } from '../../reducers/editDashboard';\nimport { itemTypeMap } from '../../modules/itemTypes';\nimport {\n    acAddDashboardItem,\n    acUpdateDashboardItem,\n} from '../../actions/editDashboard';\n\nexport const tAddListItemContent = (type, content) => (dispatch, getState) => {\n    const state = getState();\n    const listItemType = itemTypeMap[type].propName;\n    const dashboardItems = sGetEditDashboardRoot(state).dashboardItems;\n    const dashboardItemIndex = dashboardItems.findIndex(\n        item => item.type === type\n    );\n    let dashboardItem;\n\n    // Reports/Resources/Users dashboard item type already present in dashboard\n    if (dashboardItemIndex > -1) {\n        dashboardItem = dashboardItems[dashboardItemIndex];\n        dashboardItem[listItemType].push(content);\n\n        dispatch(acUpdateDashboardItem(dashboardItem));\n    } else {\n        dashboardItem = {\n            type: type,\n            content: [content],\n        };\n\n        dispatch(acAddDashboardItem(dashboardItem));\n    }\n};\n","import React, { Fragment } from 'react';\nimport { connect } from 'react-redux';\n\nimport HeaderMenuItem from './HeaderMenuItem';\nimport ContentMenuItem from './ContentMenuItem';\nimport { acAddDashboardItem } from '../../actions/editDashboard';\n\nexport const SinglesMenuGroup = ({ acAddDashboardItem, category }) => {\n    const addToDashboard = ({ type, content }) => () => {\n        acAddDashboardItem({ type, content });\n    };\n\n    return (\n        <Fragment>\n            <HeaderMenuItem title={category.header()} />\n            {category.items.map(item => (\n                <ContentMenuItem\n                    key={item.type}\n                    type={item.type}\n                    name={item.name()}\n                    onInsert={addToDashboard(item)}\n                />\n            ))}\n        </Fragment>\n    );\n};\n\nexport default connect(\n    null,\n    { acAddDashboardItem }\n)(SinglesMenuGroup);\n","import React, { Fragment } from 'react';\nimport PropTypes from 'prop-types';\nimport i18n from '@dhis2/d2-i18n';\nimport Popover from '@material-ui/core/Popover';\nimport { InputField, Menu } from '@dhis2/ui-core';\n\nimport CategorizedMenuGroup from './CategorizedMenuGroup';\nimport SinglesMenuGroup from './SinglesMenuGroup';\nimport { singleItems, categorizedItems } from './selectableItems';\nimport { itemTypeMap } from '../../modules/itemTypes';\n\nimport './styles/ItemSelector.css';\n\nconst ItemSearchField = props => (\n    <InputField\n        filled\n        name=\"Dashboard item search\"\n        label={i18n.t('Search for items to add to this dashboard')}\n        type=\"text\"\n        onChange={props.onChange}\n        onFocus={props.onFocus}\n        value={props.value}\n    />\n);\n\nclass ItemSelector extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            anchorEl: null,\n            open: false,\n            maxOptions: new Set(),\n            items: undefined,\n            filter: '',\n        };\n    }\n\n    closeList = () => {\n        this.setState({ open: false, filter: '' });\n    };\n\n    openList = event => {\n        this.fetchItems();\n\n        this.setState({\n            anchorEl: event.currentTarget,\n            open: true,\n        });\n    };\n\n    setFilter = event => {\n        this.setState({ filter: event.target.value }, this.fetchItems);\n    };\n\n    getCategorizedMenuGroups = () =>\n        categorizedItems\n            .filter(type => {\n                const itemType = itemTypeMap[type];\n                return (\n                    this.state.items && this.state.items[itemType.endPointName]\n                );\n            })\n            .map(type => {\n                const itemType = itemTypeMap[type];\n                const allItems = this.state.items[itemType.endPointName];\n                const hasMore = allItems.length > 5;\n                const items = this.state.maxOptions.has(itemType.id)\n                    ? allItems\n                    : allItems.slice(0, 5);\n\n                return (\n                    <CategorizedMenuGroup\n                        key={type}\n                        type={type}\n                        title={itemType.pluralTitle()}\n                        items={items}\n                        onChangeItemsLimit={this.fetchItems}\n                        hasMore={hasMore}\n                    />\n                );\n            });\n\n    getSinglesMenuGroups = () =>\n        singleItems.map(category => (\n            <SinglesMenuGroup key={category.id} category={category} />\n        ));\n\n    getMenuGroups = () =>\n        this.getCategorizedMenuGroups().concat(this.getSinglesMenuGroups());\n\n    fetchItems = async type => {\n        if (type) {\n            const maxOptions = this.state.maxOptions;\n\n            if (maxOptions.has(type)) {\n                maxOptions.delete(type);\n            } else {\n                maxOptions.add(type);\n            }\n\n            this.setState({ maxOptions });\n        } else {\n            this.setState({\n                maxOptions: new Set(),\n            });\n        }\n\n        let queryString = '?count=6';\n        if ([...this.state.maxOptions.values()].length) {\n            queryString +=\n                '&max=' + [...this.state.maxOptions.values()].join('&max=');\n        }\n\n        const filter = this.state.filter ? `/${this.state.filter}` : '';\n\n        this.context.d2.Api.getApi()\n            .get(`dashboards/q${filter}${queryString}`)\n            .then(response => this.setState({ items: response }))\n            .catch(console.error);\n    };\n\n    render() {\n        return (\n            <Fragment>\n                <ItemSearchField\n                    value={this.state.filter}\n                    onChange={this.setFilter}\n                    onFocus={this.openList}\n                />\n                <Popover\n                    className=\"dashboard-item-selector\"\n                    open={this.state.open}\n                    onClose={this.closeList}\n                    anchorEl={this.state.anchorEl}\n                    anchorOrigin={{ horizontal: 'left', vertical: 'bottom' }}\n                    transformOrigin={{ horizontal: 'left', vertical: 'top' }}\n                    style={{ height: '70vh' }}\n                    PaperProps={{ style: { width: '700px' } }}\n                    disableAutoFocus={true}\n                    disableRestoreFocus={true}\n                >\n                    <Menu>{this.getMenuGroups()}</Menu>\n                </Popover>\n            </Fragment>\n        );\n    }\n}\n\nItemSelector.contextTypes = {\n    d2: PropTypes.object.isRequired,\n};\n\nexport default ItemSelector;\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport i18n from '@dhis2/d2-i18n';\nimport MuiInputField from '@material-ui/core/TextField';\nimport { InputField } from '@dhis2/ui-core';\n\nimport ItemSelector from '../ItemSelector/ItemSelector';\nimport {\n    acSetDashboardTitle,\n    acSetDashboardDescription,\n} from '../../actions/editDashboard';\nimport { orObject } from '../../modules/util';\nimport { sGetEditDashboardRoot } from '../../reducers/editDashboard';\n\nconst styles = {\n    section: { display: 'flex', justifyContent: 'space-between' },\n    titleDescription: {\n        flex: '3',\n        marginRight: '50px',\n    },\n    title: {\n        display: 'block',\n        clear: 'both',\n    },\n    description: {\n        display: 'block',\n        clear: 'both',\n        marginTop: '15px',\n    },\n    underline: {\n        '&::before': {\n            borderBottom: `none`,\n        },\n        '&:hover::before': {\n            borderBottom: `none!important`,\n        },\n    },\n    input: {\n        backgroundColor: 'rgba(0, 0, 10, 0.05)',\n        borderRadius: '4px',\n        width: '100%',\n        '&:hover': {\n            backgroundColor: 'rgba(0, 0, 10, 0.08)',\n        },\n    },\n    itemSelector: {\n        flex: '2',\n        position: 'relative',\n    },\n};\n\nexport const EditTitleBar = ({\n    name,\n    description,\n    onChangeTitle,\n    onChangeDescription,\n    classes,\n}) => {\n    const updateTitle = e => {\n        onChangeTitle(e.target.value);\n    };\n\n    const updateDescription = e => {\n        onChangeDescription(e.target.value);\n    };\n\n    return (\n        <section className={classes.section}>\n            <div className={classes.titleDescription}>\n                <InputField\n                    className={classes.title}\n                    filled\n                    name=\"Dashboard title input\"\n                    label={i18n.t('Dashboard title')}\n                    type=\"text\"\n                    onChange={updateTitle}\n                    value={name}\n                />\n                <MuiInputField\n                    className={classes.description}\n                    name=\"Dashboard description input\"\n                    label={i18n.t('Dashboard description')}\n                    onChange={updateDescription}\n                    value={description}\n                    variant=\"filled\"\n                    multiline\n                    InputProps={{\n                        classes: {\n                            root: classes.input,\n                            underline: classes.underline,\n                        },\n                    }}\n                />\n            </div>\n            <div className={classes.itemSelector}>\n                <ItemSelector />\n            </div>\n        </section>\n    );\n};\n\nconst mapStateToProps = state => {\n    const selectedDashboard = orObject(sGetEditDashboardRoot(state));\n\n    return {\n        name: selectedDashboard.name,\n        description: selectedDashboard.description,\n    };\n};\n\nconst mapDispatchToProps = {\n    onChangeTitle: acSetDashboardTitle,\n    onChangeDescription: acSetDashboardDescription,\n};\n\nexport default connect(\n    mapStateToProps,\n    mapDispatchToProps\n)(withStyles(styles)(EditTitleBar));\n\nEditTitleBar.propTypes = {\n    name: PropTypes.string,\n    description: PropTypes.string,\n    onChangeTitle: PropTypes.func.isRequired,\n    onChangeDescription: PropTypes.func.isRequired,\n};\n\nEditTitleBar.defaultProps = {\n    name: '',\n    description: '',\n};\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nimport { Button } from '@dhis2/ui-core';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\n\nimport i18n from '@dhis2/d2-i18n';\n\nimport {\n    PeriodDimension,\n    DynamicDimension,\n    OrgUnitDimension,\n    FIXED_DIMENSIONS,\n} from '@dhis2/analytics';\n\nconst peId = FIXED_DIMENSIONS.pe.id;\nconst ouId = FIXED_DIMENSIONS.ou.id;\n\nclass FilterDialog extends Component {\n    onConfirm = id => () => this.props.onConfirm(id);\n\n    dialogContent() {\n        const { displayNameProperty, dimension, selectedItems } = this.props;\n        const dialogId = dimension.id;\n\n        const commonProps = {\n            d2: this.context.d2,\n            onSelect: this.props.onSelect,\n            onDeselect: this.props.onDeselect,\n            onReorder: this.props.onReorder,\n        };\n\n        switch (dialogId) {\n            case peId: {\n                return (\n                    <PeriodDimension\n                        selectedPeriods={selectedItems}\n                        {...commonProps}\n                    />\n                );\n            }\n            case ouId:\n                return (\n                    <OrgUnitDimension\n                        displayNameProperty={displayNameProperty}\n                        ouItems={selectedItems}\n                        {...commonProps}\n                    />\n                );\n            default:\n                return (\n                    <DynamicDimension\n                        selectedItems={selectedItems}\n                        dialogId={dialogId}\n                        dialogTitle={dimension.name}\n                        {...commonProps}\n                    />\n                );\n        }\n    }\n\n    render() {\n        const { dimension, onClose } = this.props;\n        const dialogId = dimension.id;\n\n        return (\n            <Dialog\n                open={!!dialogId}\n                maxWidth=\"lg\"\n                disableEnforceFocus\n                onClose={onClose}\n            >\n                {dialogId && this.dialogContent()}\n                <DialogActions>\n                    <Button kind=\"secondary\" onClick={onClose}>\n                        {i18n.t('Cancel')}\n                    </Button>\n                    <Button kind=\"primary\" onClick={this.onConfirm(dialogId)}>\n                        {i18n.t('Confirm')}\n                    </Button>\n                </DialogActions>\n            </Dialog>\n        );\n    }\n}\n\nFilterDialog.propTypes = {\n    displayNameProperty: PropTypes.string,\n    dimension: PropTypes.object,\n    selectedItems: PropTypes.array,\n    onSelect: PropTypes.func,\n    onDeselect: PropTypes.func,\n    onReorder: PropTypes.func,\n    onClose: PropTypes.func,\n    onConfirm: PropTypes.func,\n};\n\nFilterDialog.contextTypes = {\n    d2: PropTypes.object,\n};\n\nexport default FilterDialog;\n","export const SET_ACTIVE_MODAL_DIMENSION = 'SET_ACTIVE_MODAL_DIMENSION';\nexport const CLEAR_ACTIVE_MODAL_DIMENSION = 'CLEAR_ACTIVE_MODAL_DIMENSION';\n\nexport const DEFAULT_STATE_ACTIVE_MODAL_DIMENSION = {};\n\nexport default (state = DEFAULT_STATE_ACTIVE_MODAL_DIMENSION, action) => {\n    switch (action.type) {\n        case SET_ACTIVE_MODAL_DIMENSION: {\n            return action.value;\n        }\n        case CLEAR_ACTIVE_MODAL_DIMENSION: {\n            return DEFAULT_STATE_ACTIVE_MODAL_DIMENSION;\n        }\n        default:\n            return state;\n    }\n};\n\nexport const sGetActiveModalDimension = state => state.activeModalDimension;\n","import {\n    SET_ACTIVE_MODAL_DIMENSION,\n    CLEAR_ACTIVE_MODAL_DIMENSION,\n} from '../reducers/activeModalDimension';\n\nexport const acSetActiveModalDimension = value => ({\n    type: SET_ACTIVE_MODAL_DIMENSION,\n    value,\n});\n\nexport const acClearActiveModalDimension = () => ({\n    type: CLEAR_ACTIVE_MODAL_DIMENSION,\n});\n","import React, { Component, Fragment } from 'react';\nimport { connect } from 'react-redux';\nimport Popover from '@material-ui/core/Popover';\nimport ArrowDropDownIcon from '@material-ui/icons/ArrowDropDown';\nimport { withTheme } from '@material-ui/core/styles';\n\nimport i18n from '@dhis2/d2-i18n';\nimport { DimensionsPanel } from '@dhis2/analytics';\n\nimport { Button } from '@dhis2/ui-core';\nimport FilterDialog from './FilterDialog';\n\nimport { sGetSettingsDisplayNameProperty } from '../../reducers/settings';\nimport { sGetActiveModalDimension } from '../../reducers/activeModalDimension';\nimport { sGetDimensions } from '../../reducers/dimensions';\nimport { sGetFiltersKeys } from '../../reducers/itemFilters';\nimport { sGetEditItemFiltersRoot } from '../../reducers/editItemFilters';\nimport { acAddItemFilter, acRemoveItemFilter } from '../../actions/itemFilters';\nimport {\n    acRemoveEditItemFilter,\n    acSetEditItemFilters,\n} from '../../actions/editItemFilters';\nimport {\n    acClearActiveModalDimension,\n    acSetActiveModalDimension,\n} from '../../actions/activeModalDimension';\n\nclass FilterSelector extends Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            anchorEl: null,\n        };\n    }\n\n    openPanel = event => {\n        this.setState({ anchorEl: event.currentTarget });\n    };\n\n    closePanel = () => {\n        this.setState({ anchorEl: null });\n    };\n\n    closeDialog = () => {\n        this.setState({ anchorEl: null });\n\n        this.props.clearActiveModalDimension();\n    };\n\n    selectDimension = id => {\n        this.props.setActiveModalDimension({\n            id,\n            name: this.props.dimensions[id].name,\n        });\n    };\n\n    onSelectItems = ({ dimensionId, items }) => {\n        this.props.setEditItemFilters({\n            ...this.props.selectedItems,\n            [dimensionId]: items,\n        });\n    };\n\n    onDeselectItems = ({ dimensionId, itemIdsToRemove }) => {\n        const oldList = this.props.selectedItems[dimensionId] || [];\n        const newList = oldList.filter(\n            item => !itemIdsToRemove.includes(item.id)\n        );\n\n        if (newList.length) {\n            this.props.setEditItemFilters({\n                ...this.props.selectedItems,\n                [dimensionId]: newList,\n            });\n        } else {\n            this.props.removeEditItemFilter(dimensionId);\n        }\n    };\n\n    onReorderItems = ({ dimensionId, itemIds }) => {\n        const oldList = this.props.selectedItems[dimensionId] || [];\n        const reorderedList = itemIds.map(id =>\n            oldList.find(item => item.id === id)\n        );\n\n        this.props.setEditItemFilters({\n            ...this.props.selectedItems,\n            [dimensionId]: reorderedList,\n        });\n    };\n\n    saveFilter = id => {\n        const filterItems = this.props.selectedItems[id];\n\n        if (filterItems && filterItems.length) {\n            this.props.addItemFilter({\n                id,\n                value: [...filterItems],\n            });\n        } else {\n            this.props.removeItemFilter(id);\n        }\n\n        this.closeDialog();\n    };\n\n    render() {\n        const {\n            theme,\n            displayNameProperty,\n            dimension,\n            dimensions,\n            selectedDimensions,\n            selectedItems,\n        } = this.props;\n\n        return (\n            <Fragment>\n                <Button onClick={this.openPanel}>\n                    {i18n.t('Add filter')}\n                    <ArrowDropDownIcon />\n                </Button>\n                <Popover\n                    open={Boolean(this.state.anchorEl)}\n                    anchorEl={this.state.anchorEl}\n                    anchorOrigin={{ vertical: 'bottom', horizontal: 'left' }}\n                    onClose={this.closePanel}\n                    style={{\n                        height: '100%',\n                        fontFamily: theme.typography.fontFamily,\n                    }}\n                >\n                    <DimensionsPanel\n                        dimensions={dimensions}\n                        onDimensionClick={this.selectDimension}\n                        selectedIds={selectedDimensions}\n                    />\n                </Popover>\n                {dimension ? (\n                    <FilterDialog\n                        displayNameProperty={displayNameProperty}\n                        dimension={dimension}\n                        selectedItems={selectedItems[dimension.id] || []}\n                        onSelect={this.onSelectItems}\n                        onDeselect={this.onDeselectItems}\n                        onReorder={this.onReorderItems}\n                        onClose={this.closeDialog}\n                        onConfirm={this.saveFilter}\n                    />\n                ) : null}\n            </Fragment>\n        );\n    }\n}\n\nconst mapStateToProps = state => ({\n    displayNameProperty: sGetSettingsDisplayNameProperty(state),\n    dimension: sGetActiveModalDimension(state),\n    dimensions: sGetDimensions(state),\n    selectedDimensions: sGetFiltersKeys(state),\n    selectedItems: sGetEditItemFiltersRoot(state),\n});\n\nexport default connect(\n    mapStateToProps,\n    {\n        clearActiveModalDimension: acClearActiveModalDimension,\n        setActiveModalDimension: acSetActiveModalDimension,\n        addItemFilter: acAddItemFilter,\n        removeItemFilter: acRemoveItemFilter,\n        removeEditItemFilter: acRemoveEditItemFilter,\n        setEditItemFilters: acSetEditItemFilters,\n    }\n)(withTheme()(FilterSelector));\n","import React, { Component } from 'react';\nimport InfoOutlineIcon from '@material-ui/icons/InfoOutlined';\nimport { colors } from '@dhis2/ui-core';\n\nclass Info extends Component {\n    show = false;\n\n    toggle() {\n        this.show = !this.show;\n        return this.show;\n    }\n\n    render() {\n        return (\n            <div onClick={() => this.props.onClick(this.toggle())}>\n                <InfoOutlineIcon style={{ fill: colors.grey600 }} />\n            </div>\n        );\n    }\n}\n\nexport default Info;\n","import React, { Component, Fragment } from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport { Link } from 'react-router-dom';\nimport i18n from '@dhis2/d2-i18n';\nimport SharingDialog from '@dhis2/d2-ui-sharing-dialog';\nimport Star from '@material-ui/icons/Star';\nimport StarBorder from '@material-ui/icons/StarBorder';\n\nimport { orObject } from '../../modules/util';\nimport { tStarDashboard } from '../../actions/dashboards';\nimport { acSetSelectedShowDescription } from '../../actions/selected';\nimport FilterSelector from '../ItemFilter/FilterSelector';\nimport { Button } from '@dhis2/ui-core';\nimport Info from './Info';\nimport {\n    sGetSelectedId,\n    sGetSelectedShowDescription,\n} from '../../reducers/selected';\nimport {\n    sGetDashboardById,\n    sGetDashboardItems,\n} from '../../reducers/dashboards';\nimport { colors } from '@dhis2/ui-core';\n\nconst styles = {\n    actions: {\n        display: 'flex',\n        alignItems: 'center',\n        marginLeft: '20px',\n    },\n    starIcon: {\n        fill: colors.grey600,\n    },\n    textButton: {\n        minWidth: '30px',\n        top: '1px',\n    },\n    editLink: {\n        display: 'inline-block',\n        verticalAlign: 'top',\n        textDecoration: 'none',\n        marginRight: '4px',\n    },\n    titleBar: {\n        display: 'flex',\n        alignItems: 'flex-start',\n    },\n    titleBarIcon: {\n        marginLeft: 5,\n        position: 'relative',\n        top: 1,\n        cursor: 'pointer',\n    },\n};\n\nclass ViewTitleBar extends Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            sharingDialogIsOpen: false,\n        };\n    }\n\n    toggleSharingDialog = () =>\n        this.setState({ sharingDialogIsOpen: !this.state.sharingDialogIsOpen });\n\n    render() {\n        const {\n            id,\n            name,\n            description,\n            access,\n            style,\n            showDescription,\n            starred,\n            onStarClick,\n            onInfoClick,\n            classes,\n        } = this.props;\n\n        const titleStyle = Object.assign({}, style.title, {\n            cursor: 'default',\n            userSelect: 'text',\n            top: '7px',\n        });\n\n        const StarIcon = starred ? Star : StarBorder;\n\n        return (\n            <Fragment>\n                <div className={classes.titleBar}>\n                    <span style={titleStyle}>{name}</span>\n                    <div className={classes.actions}>\n                        <div\n                            className={classes.titleBarIcon}\n                            onClick={onStarClick}\n                        >\n                            <StarIcon className={classes.starIcon} />\n                        </div>\n                        <div className={classes.titleBarIcon}>\n                            <Info onClick={onInfoClick} />\n                        </div>\n                        <div style={{ marginLeft: '10px' }}>\n                            {access.update ? (\n                                <Link\n                                    className={classes.editLink}\n                                    to={`/${id}/edit`}\n                                >\n                                    <Button>{i18n.t('Edit')}</Button>\n                                </Link>\n                            ) : null}\n                            {access.manage ? (\n                                <span style={{ marginRight: '4px' }}>\n                                    <Button onClick={this.toggleSharingDialog}>\n                                        {i18n.t('Share')}\n                                    </Button>\n                                </span>\n                            ) : null}\n                            <span style={{ marginRight: '4px' }}>\n                                <FilterSelector />\n                            </span>\n                        </div>\n                    </div>\n                </div>\n                {showDescription ? (\n                    <div\n                        className=\"dashboard-description\"\n                        style={Object.assign(\n                            { paddingTop: '5px', paddingBottom: '5px' },\n                            style.description,\n                            !description ? { color: '#888' } : {}\n                        )}\n                    >\n                        {description || i18n.t('No description')}\n                    </div>\n                ) : null}\n                {id ? (\n                    <SharingDialog\n                        d2={this.context.d2}\n                        id={id}\n                        type=\"dashboard\"\n                        open={this.state.sharingDialogIsOpen}\n                        onRequestClose={this.toggleSharingDialog}\n                    />\n                ) : null}\n            </Fragment>\n        );\n    }\n}\n\nconst mapStateToProps = state => {\n    const id = sGetSelectedId(state);\n    const dashboard = orObject(sGetDashboardById(state, id));\n\n    return {\n        id,\n        name: dashboard.displayName,\n        description: dashboard.displayDescription,\n        dashboardItems: sGetDashboardItems(state),\n        showDescription: sGetSelectedShowDescription(state),\n        starred: dashboard.starred,\n        access: orObject(dashboard.access),\n    };\n};\n\nconst mergeProps = (stateProps, dispatchProps, ownProps) => {\n    const { id, starred, showDescription } = stateProps;\n    const { dispatch } = dispatchProps;\n\n    return {\n        ...stateProps,\n        ...ownProps,\n        onStarClick: () => dispatch(tStarDashboard(id, !starred)),\n        onInfoClick: () =>\n            dispatch(acSetSelectedShowDescription(!showDescription)),\n    };\n};\n\nexport default connect(\n    mapStateToProps,\n    null,\n    mergeProps\n)(withStyles(styles)(ViewTitleBar));\n\nViewTitleBar.propTypes = {\n    id: PropTypes.string,\n    name: PropTypes.string,\n    description: PropTypes.string,\n    starred: PropTypes.bool,\n    showDescription: PropTypes.bool,\n    onInfoClick: PropTypes.func,\n};\n\nViewTitleBar.defaultProps = {\n    name: '',\n    description: '',\n    starred: false,\n    showDescription: false,\n    onInfoClick: null,\n};\n\nViewTitleBar.contextTypes = {\n    d2: PropTypes.object,\n};\n","import React from 'react';\n\nimport { colors } from '@dhis2/ui-core';\nimport EditTitleBar from './EditTitleBar';\nimport ViewTitleBar from './ViewTitleBar';\n\nimport './TitleBar.css';\n\nconst style = {\n    title: {\n        position: 'relative',\n        fontSize: 21,\n        fontWeight: 500,\n        color: colors.black,\n        minWidth: 50,\n    },\n    description: {\n        fontSize: 14,\n        color: colors.grey800,\n    },\n};\n\nconst TitleBar = ({ edit }) => {\n    return (\n        <div\n            className=\"titlebar-wrapper\"\n            style={{\n                padding: '20px 15px 5px 10px',\n            }}\n        >\n            {edit ? (\n                <EditTitleBar style={style} />\n            ) : (\n                <ViewTitleBar style={style} />\n            )}\n        </div>\n    );\n};\n\nexport default TitleBar;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nimport i18n from '@dhis2/d2-i18n';\n\nimport * as pluginManager from './plugin';\nimport { getBaseUrl, orObject } from '../../../modules/util';\nimport { getGridItemDomId } from '../../ItemGrid/gridUtil';\n\nconst pluginCredentials = d2 => {\n    return {\n        baseUrl: getBaseUrl(d2),\n        auth: d2.Api.getApi().defaultHeaders.Authorization,\n    };\n};\n\nclass DefaultPlugin extends Component {\n    pluginCredentials = null;\n\n    constructor(props, context) {\n        super(props);\n\n        this.d2 = context.d2;\n    }\n\n    shouldPluginReload = prevProps => {\n        // TODO - fix this hack, to handle bug with multiple\n        // rerendering while switching between dashboards.\n        //\n        // To determine if the rendering is happening because of a\n        // dashboard switch, check if the item reference has changed.\n        const reloadAllowed = this.props.item === prevProps.item;\n\n        const filtersChanged = prevProps.itemFilters !== this.props.itemFilters;\n        const vis = orObject(this.props.visualization);\n        const prevVis = orObject(prevProps.visualization);\n        const visChanged =\n            vis.id !== prevVis.id || vis.activeType !== prevVis.activeType;\n\n        return reloadAllowed && (visChanged || filtersChanged);\n    };\n\n    reloadPlugin = prevProps => {\n        if (\n            pluginManager.pluginIsAvailable(\n                this.props.item,\n                this.props.visualization\n            ) &&\n            this.shouldPluginReload(prevProps)\n        ) {\n            const prevVis = orObject(prevProps.visualization);\n            const currentVis = this.props.visualization;\n\n            const useActiveType =\n                currentVis.activeType !== prevVis.activeType ||\n                currentVis.activeType !== this.props.item.type;\n\n            if (\n                useActiveType ||\n                this.props.itemFilters !== prevProps.itemFilters\n            ) {\n                pluginManager.unmount(\n                    this.props.item,\n                    prevVis.activeType || this.props.item.type\n                );\n\n                pluginManager.load(\n                    this.props.item,\n                    this.props.visualization,\n                    this.pluginCredentials,\n                    useActiveType ? currentVis.activeType : null\n                );\n            }\n        }\n    };\n\n    componentDidMount() {\n        this.pluginCredentials = pluginCredentials(this.d2);\n\n        if (\n            pluginManager.pluginIsAvailable(\n                this.props.item,\n                this.props.visualization\n            )\n        ) {\n            pluginManager.load(\n                this.props.item,\n                this.props.visualization,\n                this.pluginCredentials,\n                !this.props.editMode ? this.getActiveType() : null\n            );\n        }\n    }\n\n    componentDidUpdate(prevProps) {\n        this.reloadPlugin(prevProps);\n    }\n\n    getActiveType = () =>\n        this.props.visualization.activeType || this.props.item.type;\n\n    render() {\n        const { classes, item, visualization, style } = this.props;\n        const pluginIsAvailable = pluginManager.pluginIsAvailable(\n            item,\n            visualization\n        );\n\n        return pluginIsAvailable ? (\n            <div id={getGridItemDomId(item.id)} style={style} />\n        ) : (\n            <div className={classes.textDiv}>\n                {i18n.t('Unable to load the plugin for this item')}\n            </div>\n        );\n    }\n}\n\nDefaultPlugin.contextTypes = {\n    d2: PropTypes.object,\n};\n\nDefaultPlugin.propTypes = {\n    style: PropTypes.object,\n    item: PropTypes.object,\n    itemFilters: PropTypes.object,\n    visualization: PropTypes.object,\n};\n\nDefaultPlugin.defaultProps = {\n    style: {},\n    item: {},\n    itemFilters: {},\n    visualization: {},\n};\n\nexport default DefaultPlugin;\n","import React from 'react';\n\nexport const HEADER_HEIGHT = 45;\n\nconst ItemHeader = props => {\n    const { title, actionButtons, editMode } = props;\n\n    return (\n        <div className=\"dashboard-item-header\">\n            <div\n                className=\"dashboard-item-header-title\"\n                style={{ userSelect: editMode ? 'none' : 'text' }}\n            >\n                {title}\n            </div>\n            {actionButtons}\n        </div>\n    );\n};\n\nexport default ItemHeader;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { colors } from '@dhis2/ui-core';\nimport { getId } from './plugin';\nimport InterpretationsComponent from '@dhis2/d2-ui-interpretations';\n\nconst style = {\n    scrollContainer: {\n        overflowY: 'auto',\n        height: '340px',\n    },\n    line: {\n        margin: '-1px 0px 0px',\n        height: '1px',\n        border: 'none',\n        backgroundColor: colors.grey100,\n    },\n};\n\nclass ItemFooter extends Component {\n    render() {\n        const objectId = getId(this.props.item);\n\n        return (\n            <div className=\"dashboard-item-footer\">\n                <hr style={style.line} />\n                <div style={style.scrollContainer}>\n                    <InterpretationsComponent\n                        d2={this.context.d2}\n                        item={this.props.item}\n                        type={this.props.item.type.toLowerCase()}\n                        id={objectId}\n                        appName=\"dashboard\"\n                    />\n                </div>\n            </div>\n        );\n    }\n}\n\nItemFooter.contextTypes = {\n    d2: PropTypes.object.isRequired,\n};\n\nItemFooter.propTypes = {\n    item: PropTypes.object.isRequired,\n};\n\nexport default ItemFooter;\n","import React from 'react';\n\nimport './ItemHeaderButton.css';\n\nconst ItemHeaderButton = ({ disabled, onClick, children, style }) => {\n    return (\n        <button\n            disabled={disabled}\n            type=\"button\"\n            className=\"item-action-button\"\n            style={style}\n            onClick={onClick}\n        >\n            {children}\n        </button>\n    );\n};\n\nexport default ItemHeaderButton;\n","import React, { Component, Fragment } from 'react';\nimport MessageIcon from '@material-ui/icons/Message';\nimport TableIcon from '@material-ui/icons/ViewList';\nimport ChartIcon from '@material-ui/icons/InsertChart';\nimport MapIcon from '@material-ui/icons/Public';\n\nimport { extractFavorite } from './plugin';\nimport ItemHeaderButton from '../ItemHeaderButton';\nimport {\n    VISUALIZATION_TYPE_TABLE,\n    VISUALIZATION_TYPE_CHART,\n    VISUALIZATION_TYPE_MAP,\n    itemTypeMap,\n    CHART,\n    MAP,\n    REPORT_TABLE,\n    EVENT_CHART,\n    EVENT_REPORT,\n    DOMAIN_TYPE_AGGREGATE,\n    CHART_TYPE_SINGLE_VALUE,\n} from '../../../modules/itemTypes';\nimport { colors, theme } from '@dhis2/ui-core';\n\nconst style = {\n    iconBase: {\n        width: '24px',\n        height: '24px',\n        fill: colors.grey500,\n    },\n    buttonBase: {\n        padding: '5px 6px 3px 6px',\n    },\n    buttonDisabled: {\n        padding: '5px 6px 3px 6px',\n        opacity: 0.5,\n        cursor: 'unset',\n    },\n    toggleFooterPadding: {\n        padding: '7px 6px 1px 6px',\n    },\n    border: {\n        borderRadius: '2px',\n        border: `1px solid ${colors.grey200}`,\n    },\n};\n\nconst baseStyle = {\n    icon: style.iconBase,\n    container: style.buttonBase,\n};\n\nconst disabledStyle = {\n    icon: style.iconBase,\n    container: style.buttonDisabled,\n};\n\nconst activeStyle = {\n    icon: { ...style.iconBase, fill: theme.primary800 },\n    container: {\n        ...style.buttonBase,\n        backgroundColor: theme.primary100,\n    },\n};\n\nconst inactiveStyle = disabled => (disabled ? disabledStyle : baseStyle);\n\nconst tableBtnStyle = (activeType, disabled) =>\n    [REPORT_TABLE, EVENT_REPORT].includes(activeType)\n        ? activeStyle\n        : inactiveStyle(disabled);\n\nconst chartBtnStyle = (activeType, disabled) =>\n    [CHART, EVENT_CHART].includes(activeType)\n        ? activeStyle\n        : inactiveStyle(disabled);\n\nconst mapBtnStyle = (activeType, disabled) =>\n    [MAP].includes(activeType) ? activeStyle : inactiveStyle(disabled);\n\nexport const getItemTypeId = (itemTypeMap, visualizationType, domainType) => {\n    const item = Object.values(itemTypeMap).find(\n        item =>\n            item.visualizationType === visualizationType &&\n            item.domainType === domainType\n    );\n    return item.id;\n};\n\n// TODO: Import this from @dhis2/analytics when available\nconst isSingleValue = (itemType, chartType) =>\n    itemType === VISUALIZATION_TYPE_CHART &&\n    chartType === CHART_TYPE_SINGLE_VALUE;\n\nclass VisualizationItemHeaderButtons extends Component {\n    renderInterpretationButton() {\n        const { activeFooter, onToggleFooter } = this.props;\n\n        const toggleFooterBase = activeFooter ? activeStyle : baseStyle;\n\n        const toggleFooter = {\n            ...toggleFooterBase,\n            container: {\n                ...toggleFooterBase.container,\n                ...style.toggleFooterPadding,\n                ...style.border,\n            },\n        };\n\n        return (\n            <Fragment>\n                <ItemHeaderButton\n                    style={toggleFooter.container}\n                    onClick={onToggleFooter}\n                >\n                    <MessageIcon style={toggleFooter.icon} />\n                </ItemHeaderButton>\n            </Fragment>\n        );\n    }\n\n    renderVisualizationButtons() {\n        const {\n            item,\n            visualization,\n            onSelectVisualization,\n            activeType,\n        } = this.props;\n\n        if (isSingleValue(item.type, visualization.type)) {\n            return null;\n        }\n\n        const domainType = itemTypeMap[item.type].domainType;\n\n        const onViewTable = () =>\n            onSelectVisualization(\n                getItemTypeId(itemTypeMap, VISUALIZATION_TYPE_TABLE, domainType)\n            );\n\n        const onViewChart = () =>\n            onSelectVisualization(\n                getItemTypeId(itemTypeMap, VISUALIZATION_TYPE_CHART, domainType)\n            );\n\n        const onViewMap = () =>\n            onSelectVisualization(\n                getItemTypeId(itemTypeMap, VISUALIZATION_TYPE_MAP, domainType)\n            );\n\n        // disable toggle buttons\n        let disabled = false;\n\n        if (item.type === VISUALIZATION_TYPE_CHART) {\n            if (extractFavorite(item).type.match(/^YEAR_OVER_YEAR/)) {\n                disabled = true;\n            }\n        }\n\n        const tableButtonStyle = tableBtnStyle(activeType, disabled);\n        const chartButtonStyle = chartBtnStyle(activeType, disabled);\n        const mapButtonStyle = mapBtnStyle(activeType, disabled);\n\n        return (\n            <div style={{ marginLeft: 10 }}>\n                <div style={style.border}>\n                    <ItemHeaderButton\n                        disabled={disabled}\n                        style={tableButtonStyle.container}\n                        onClick={onViewTable}\n                    >\n                        <TableIcon style={tableButtonStyle.icon} />\n                    </ItemHeaderButton>\n                    <ItemHeaderButton\n                        disabled={disabled}\n                        style={chartButtonStyle.container}\n                        onClick={onViewChart}\n                    >\n                        <ChartIcon style={chartButtonStyle.icon} />\n                    </ItemHeaderButton>\n                    {domainType === DOMAIN_TYPE_AGGREGATE ? (\n                        <ItemHeaderButton\n                            disabled={disabled}\n                            style={mapButtonStyle.container}\n                            onClick={onViewMap}\n                        >\n                            <MapIcon style={mapButtonStyle.icon} />\n                        </ItemHeaderButton>\n                    ) : null}\n                </div>\n            </div>\n        );\n    }\n\n    render() {\n        return (\n            <Fragment>\n                {this.renderInterpretationButton()}\n                {this.renderVisualizationButtons()}\n            </Fragment>\n        );\n    }\n}\n\nexport default VisualizationItemHeaderButtons;\n","// Note that this ignores discrepancies in 'this', so shouldn't be used with bound functions\n// This is useful instead of lodash/memoize when we only need to memoize a single value\n// Inspiration: https://github.com/alexreardon/memoize-one\n\nconst memoizeOne = fn => {\n    let lastArgs = undefined;\n    let lastValue = undefined;\n\n    return (...args) => {\n        if (\n            lastArgs &&\n            args.length === lastArgs.length &&\n            args.every((arg, i) => arg === lastArgs[i])\n        ) {\n            return lastValue;\n        }\n        lastArgs = args;\n        lastValue = fn(...args);\n        return lastValue;\n    };\n};\n\nexport default memoizeOne;\n","import React, { Component, Fragment } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { withStyles } from '@material-ui/core/styles';\nimport LaunchIcon from '@material-ui/icons/Launch';\nimport ChartPlugin from '@dhis2/data-visualizer-plugin';\n\nimport i18n from '@dhis2/d2-i18n';\nimport uniqueId from 'lodash/uniqueId';\n\nimport DefaultPlugin from './DefaultPlugin';\nimport ItemHeader, { HEADER_HEIGHT } from '../ItemHeader';\nimport ItemFooter from './ItemFooter';\nimport VisualizationItemHeaderButtons from './ItemHeaderButtons';\nimport * as pluginManager from './plugin';\nimport { sGetVisualization } from '../../../reducers/visualizations';\nimport { sGetItemFiltersRoot } from '../../../reducers/itemFilters';\nimport {\n    acReceivedVisualization,\n    acReceivedActiveVisualization,\n} from '../../../actions/selected';\nimport { CHART, MAP, itemTypeMap } from '../../../modules/itemTypes';\nimport { colors } from '@dhis2/ui-core';\nimport memoizeOne from '../../../modules/memoizeOne';\nimport { getVisualizationConfig } from './plugin';\n\nconst styles = {\n    icon: {\n        width: 16,\n        height: 16,\n        marginLeft: 3,\n        cursor: 'pointer',\n        fill: colors.grey600,\n    },\n    title: {\n        overflow: 'hidden',\n        maxWidth: '85%',\n        textOverflow: 'ellipsis',\n        whiteSpace: 'nowrap',\n    },\n    textDiv: {\n        fontSize: '14px',\n        fontStretch: 'normal',\n        padding: '10px',\n        lineHeight: '20px',\n    },\n};\n\nconst applyFilters = (visualization, filters) => {\n    if (!Object.keys(filters).length) {\n        return visualization;\n    }\n\n    // deep clone objects in filters to avoid changing the visualization in the Redux store\n    const visRows = visualization.rows.map(obj => ({ ...obj }));\n    const visColumns = visualization.columns.map(obj => ({ ...obj }));\n    const visFilters = visualization.filters.map(obj => ({ ...obj }));\n\n    Object.keys(filters).forEach(dimensionId => {\n        if (filters[dimensionId]) {\n            let dimensionFound = false;\n\n            [visRows, visColumns, visFilters].forEach(dimensionObjects =>\n                dimensionObjects\n                    .filter(obj => obj.dimension === dimensionId)\n                    .forEach(obj => {\n                        dimensionFound = true;\n                        obj.items = filters[dimensionId];\n                    })\n            );\n\n            // add dimension to filters if not already present elsewhere\n            if (!dimensionFound) {\n                visFilters.push({\n                    dimension: dimensionId,\n                    items: filters[dimensionId],\n                });\n            }\n        }\n    });\n\n    return {\n        ...visualization,\n        rows: visRows,\n        columns: visColumns,\n        filters: visFilters,\n    };\n};\n\nexport class Item extends Component {\n    state = {\n        showFooter: false,\n        configLoaded: false,\n    };\n\n    constructor(props, context) {\n        super(props);\n\n        this.d2 = context.d2;\n\n        this.contentRef = React.createRef();\n    }\n\n    async componentDidMount() {\n        this.props.onVisualizationLoaded(\n            // TODO do not call fetch on the pluginManager, do it here as the manager will eventually be removed...\n            await pluginManager.fetch(this.props.item)\n        );\n\n        this.setState({\n            configLoaded: true,\n        });\n    }\n\n    getUniqueKey = memoizeOne(() => uniqueId());\n\n    pluginCredentials = null;\n\n    getPluginComponent = () => {\n        const visualization = getVisualizationConfig(\n            this.props.visualization,\n            this.props.item.type,\n            this.getActiveType()\n        );\n\n        if (!visualization) {\n            return (\n                <div className={this.props.classes.textDiv}>\n                    {i18n.t('No data to display')}\n                </div>\n            );\n        }\n\n        const props = {\n            ...this.props,\n            visualization,\n            style: this.getContentStyle(),\n        };\n\n        switch (this.getActiveType()) {\n            case CHART: {\n                return (\n                    <ChartPlugin\n                        d2={this.d2}\n                        config={applyFilters(\n                            props.visualization,\n                            props.itemFilters\n                        )}\n                        forDashboard={true}\n                        style={props.style}\n                    />\n                );\n            }\n            case MAP: {\n                if (props.item.type === MAP) {\n                    // apply filters only to thematic and event layers\n                    // for maps AO\n                    const mapViews = props.visualization.mapViews.map(obj => {\n                        if (\n                            obj.layer.includes('thematic') ||\n                            obj.layer.includes('event')\n                        ) {\n                            return applyFilters(obj, props.itemFilters);\n                        }\n\n                        return obj;\n                    });\n\n                    props.visualization = {\n                        ...props.visualization,\n                        mapViews,\n                    };\n                } else {\n                    // this is the case of a non map AO passed to the maps plugin\n                    // due to a visualization type switch in dashboard item\n                    // maps plugin takes care of converting the AO to a suitable format\n                    props.visualization = applyFilters(\n                        props.visualization,\n                        props.itemFilters\n                    );\n                }\n\n                return <DefaultPlugin {...props} />;\n            }\n            default: {\n                props.visualization = applyFilters(\n                    props.visualization,\n                    props.itemFilters\n                );\n\n                return <DefaultPlugin {...props} />;\n            }\n        }\n    };\n\n    onToggleFooter = () => {\n        this.setState(\n            { showFooter: !this.state.showFooter },\n            this.props.onToggleItemExpanded(this.props.item.id)\n        );\n    };\n\n    onSelectVisualization = activeType => {\n        // Cancel request if type is already active\n        if (activeType === this.getActiveType()) {\n            return;\n        }\n\n        pluginManager.unmount(this.props.item, this.getActiveType());\n\n        this.props.onSelectVisualization(\n            this.props.visualization.id,\n            this.props.item.type,\n            activeType\n        );\n    };\n\n    getActiveType = () =>\n        this.props.visualization.activeType || this.props.item.type;\n\n    pluginIsAvailable = () =>\n        pluginManager.pluginIsAvailable(\n            this.props.item,\n            this.props.visualization\n        );\n\n    getTitle = () => {\n        const { item, editMode, classes } = this.props;\n        const itemName = pluginManager.getName(item);\n\n        return (\n            <div style={{ display: 'flex' }}>\n                <span className={classes.title} title={itemName}>\n                    {itemName}\n                </span>\n                {!editMode && this.pluginIsAvailable() ? (\n                    <a\n                        href={pluginManager.getLink(this.props.item, this.d2)}\n                        style={{ height: 16 }}\n                        title={`View in ${itemTypeMap[\n                            this.props.item.type\n                        ].appName()} app`}\n                    >\n                        <LaunchIcon className={classes.icon} />\n                    </a>\n                ) : null}\n            </div>\n        );\n    };\n\n    getActionButtons = () =>\n        pluginManager.pluginIsAvailable(\n            this.props.item,\n            this.props.visualization\n        ) && !this.props.editMode ? (\n            <VisualizationItemHeaderButtons\n                item={this.props.item}\n                visualization={this.props.visualization}\n                activeFooter={this.state.showFooter}\n                activeType={this.getActiveType()}\n                onSelectVisualization={this.onSelectVisualization}\n                onToggleFooter={this.onToggleFooter}\n            />\n        ) : null;\n\n    getContentStyle = () => {\n        const { item, editMode } = this.props;\n        const PADDING_BOTTOM = 4;\n\n        return !editMode\n            ? {\n                  height: item.originalHeight - HEADER_HEIGHT - PADDING_BOTTOM,\n              }\n            : { height: this.contentRef.offsetHeight };\n    };\n\n    render() {\n        const { item, editMode, itemFilters } = this.props;\n        const { showFooter } = this.state;\n\n        return (\n            <Fragment>\n                <ItemHeader\n                    title={this.getTitle()}\n                    actionButtons={this.getActionButtons()}\n                    editMode={editMode}\n                />\n                <div\n                    key={this.getUniqueKey(itemFilters)}\n                    className=\"dashboard-item-content\"\n                    ref={ref => (this.contentRef = ref)}\n                >\n                    {this.state.configLoaded && this.getPluginComponent()}\n                </div>\n                {!editMode && showFooter ? <ItemFooter item={item} /> : null}\n            </Fragment>\n        );\n    }\n}\n\nItem.contextTypes = {\n    d2: PropTypes.object,\n};\n\nItem.propTypes = {\n    item: PropTypes.object,\n    editMode: PropTypes.bool,\n    onToggleItemExpanded: PropTypes.func,\n    itemFilters: PropTypes.object,\n    visualization: PropTypes.object,\n};\n\nItem.defaultProps = {\n    item: {},\n    editMode: false,\n    onToggleItemExpanded: Function.prototype,\n    itemFilters: {},\n    visualization: {},\n};\n\nconst mapStateToProps = (state, ownProps) => ({\n    itemFilters: sGetItemFiltersRoot(state),\n    visualization: sGetVisualization(\n        state,\n        pluginManager.extractFavorite(ownProps.item).id\n    ),\n});\n\nconst mapDispatchToProps = dispatch => ({\n    onVisualizationLoaded: visualization =>\n        dispatch(acReceivedVisualization(visualization)),\n    onSelectVisualization: (id, type, activeType) =>\n        dispatch(acReceivedActiveVisualization(id, type, activeType)),\n});\n\nexport default connect(\n    mapStateToProps,\n    mapDispatchToProps\n)(withStyles(styles)(Item));\n","import React from 'react';\nimport { colors } from '@dhis2/ui-core';\n\nconst style = {\n    backgroundColor: colors.grey200,\n    border: 'none',\n    height: '1px',\n    margin: '0px 0px 5px 0px',\n};\n\nconst Line = props => <hr style={style} />;\n\nexport default Line;\n","import React, { Component, Fragment } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport i18n from '@dhis2/d2-i18n';\n\nimport { sGetMessagesRoot } from '../../../reducers/messages';\nimport { formatDate } from '../../../modules/util';\nimport { colors } from '@dhis2/ui-core';\nimport ItemHeader from '../ItemHeader';\nimport Line from '../../../widgets/Line';\n\nimport './MessagesItem.css';\n\nconst PRIVATE = 'PRIVATE';\n\nconst messageTypes = {\n    [PRIVATE]: 'Private',\n    VALIDATION_RESULT: 'Validation',\n    TICKET: 'Ticket',\n    SYSTEM: 'System',\n};\n\nconst style = {\n    list: {\n        listStyleType: 'none',\n        paddingLeft: '0px',\n    },\n    seeAll: {\n        textAlign: 'center',\n        fontSize: '13px',\n        marginBottom: '5px',\n    },\n    sender: {\n        fontSize: '13px',\n        lineHeight: '15px',\n        margin: 0,\n        color: colors.grey800,\n    },\n    snippet: {\n        color: colors.grey800,\n        fontSize: '13px',\n        lineHeight: '15px',\n        maxHeight: '30px',\n        overflow: 'hidden',\n    },\n};\n\nclass MessagesItem extends Component {\n    state = {\n        uiLocale: '',\n    };\n\n    async componentDidMount() {\n        const uiLocale = await this.context.d2.currentUser.userSettings.get(\n            'keyUiLocale'\n        );\n\n        this.setState({ uiLocale });\n    }\n\n    getMessageHref = msg => {\n        const msgIdentifier = msg ? `#/${msg.messageType}/${msg.id}` : '';\n        return `${this.context.baseUrl}/dhis-web-messaging/${msgIdentifier}`;\n    };\n\n    getMessageSender = msg => {\n        const latestMsg = msg.messages.slice(-1)[0];\n        return latestMsg.sender ? latestMsg.sender.displayName : '';\n    };\n\n    getMessageItems = () => {\n        const editClass = !this.props.editMode ? 'view' : null;\n\n        return this.props.messages.map(msg => {\n            const redirectToMsg = () => {\n                if (!this.props.editMode) {\n                    document.location.href = this.getMessageHref(msg);\n                }\n            };\n\n            const sender =\n                msg.messageType === PRIVATE\n                    ? this.getMessageSender(msg)\n                    : messageTypes[msg.messageType];\n\n            const readClass = !msg.read ? 'unread' : null;\n            const latestMsg = msg.messages.slice(-1)[0];\n            const msgDate = latestMsg.lastUpdated;\n\n            return (\n                <li\n                    className={`message-item ${editClass}`}\n                    key={msg.id}\n                    onClick={redirectToMsg}\n                >\n                    <p className={`message-title ${readClass}`}>\n                        {msg.displayName} ({msg.messageCount})\n                    </p>\n                    <p style={style.sender}>\n                        {sender} - {formatDate(msgDate, this.state.uiLocale)}\n                    </p>\n                    <p style={style.snippet}>{latestMsg.text}</p>\n                </li>\n            );\n        });\n    };\n\n    render() {\n        return (\n            <Fragment>\n                <ItemHeader title={i18n.t('Messages')} />\n                <Line />\n                {this.props.messages.length > 0 && (\n                    <div className=\"dashboard-item-content\">\n                        <ul style={style.list}>{this.getMessageItems()}</ul>\n                        <div style={style.seeAll}>\n                            <a href={this.getMessageHref()}>\n                                {i18n.t('See all messages')}\n                            </a>\n                        </div>\n                    </div>\n                )}\n            </Fragment>\n        );\n    }\n}\n\nMessagesItem.contextTypes = {\n    d2: PropTypes.object,\n    baseUrl: PropTypes.string,\n};\n\nconst mapStateToProps = state => {\n    return {\n        messages: Object.values(sGetMessagesRoot(state)),\n    };\n};\n\nconst MessagesContainer = connect(\n    mapStateToProps,\n    null\n)(MessagesItem);\n\nexport default MessagesContainer;\n","import React, { Fragment } from 'react';\nimport ItemHeader from '../ItemHeader';\nimport NotInterestedIcon from '@material-ui/icons/NotInterested';\n\nconst NotSupportedItem = props => (\n    <Fragment>\n        <ItemHeader title={`Item type not supported: ${props.item.type}`} />\n        <div\n            style={{\n                display: 'flex',\n                justifyContent: 'center',\n                alignItems: 'center',\n                height: '90%',\n            }}\n        >\n            <NotInterestedIcon\n                style={{ width: 100, height: 100, align: 'center' }}\n                color=\"disabled\"\n            />\n        </div>\n    </Fragment>\n);\n\nexport default NotSupportedItem;\n","import React from 'react';\nimport { colors } from '@dhis2/ui-core';\n\nconst DescriptionIcon = ({ className }) => (\n    <svg\n        className={className}\n        xmlns=\"http://www.w3.org/2000/svg\"\n        viewBox=\"0 0 24 24\"\n        fill={colors.grey500}\n    >\n        <path d=\"M0 0h24v24H0z\" fill=\"none\" />\n        <path d=\"M14 2H6c-1.1 0-1.99.9-1.99 2L4 20c0 1.1.89 2 1.99 2H18c1.1 0 2-.9 2-2V8l-6-6zm2 16H8v-2h8v2zm0-4H8v-2h8v2zm-3-5V3.5L18.5 9H13z\" />\n    </svg>\n);\n\nexport default DescriptionIcon;\n","import React from 'react';\nimport { colors } from '@dhis2/ui-core';\n\nconst DeleteIcon = ({ className }) => (\n    <svg\n        className={className}\n        xmlns=\"http://www.w3.org/2000/svg\"\n        width=\"18\"\n        height=\"18\"\n        viewBox=\"0 0 24 24\"\n        fill={colors.red500}\n    >\n        <path d=\"M6 19c0 1.1.9 2 2 2h8c1.1 0 2-.9 2-2V7H6v12zM19 4h-3.5l-1-1h-5l-1 1H5v2h14V4z\" />\n        <path d=\"M0 0h24v24H0z\" fill=\"none\" />\n    </svg>\n);\n\nexport default DeleteIcon;\n","import React, { Fragment } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { colors } from '@dhis2/ui-core';\nimport DescriptionIcon from '../../../icons/Description';\n\nimport DeleteIcon from '../../../icons/Delete';\nimport Line from '../../../widgets/Line';\nimport { itemTypeMap, getItemUrl } from '../../../modules/itemTypes';\nimport { orArray } from '../../../modules/util';\nimport { tRemoveListItemContent } from './actions';\nimport ItemHeader from '../ItemHeader';\nimport classes from './Item.module.css';\n\nconst getItemTitle = item => itemTypeMap[item.type].pluralTitle();\n\nconst getContentItems = item =>\n    orArray(item[itemTypeMap[item.type].propName]).filter(\n        (item, index, array) =>\n            array.findIndex(el => el.id === item.id) === index\n    );\n\nconst removeContent = (handler, item, contentToRemove) => () => {\n    handler(item, contentToRemove);\n};\n\nconst ListItem = (props, context) => {\n    const { item, editMode, tRemoveListItemContent } = props;\n    const contentItems = getContentItems(item);\n\n    const getLink = contentItem => {\n        const deleteButton = (\n            <button\n                className={classes.deletebutton}\n                onClick={removeContent(\n                    tRemoveListItemContent,\n                    item,\n                    contentItem\n                )}\n            >\n                <DeleteIcon className={classes.deleteicon} />\n            </button>\n        );\n\n        return (\n            <Fragment>\n                <a\n                    className={classes.link}\n                    style={{ color: colors.grey900 }}\n                    href={getItemUrl(item.type, contentItem, context.d2)}\n                >\n                    {contentItem.name}\n                </a>\n                {editMode ? deleteButton : null}\n            </Fragment>\n        );\n    };\n\n    return (\n        <Fragment>\n            <ItemHeader title={getItemTitle(item)} />\n            <Line />\n            <div className=\"dashboard-item-content\">\n                <ul className={classes.list}>\n                    {contentItems.map(contentItem => (\n                        <li className={classes.item} key={contentItem.id}>\n                            <DescriptionIcon className={classes.itemicon} />\n                            {getLink(contentItem)}\n                        </li>\n                    ))}\n                </ul>\n            </div>\n        </Fragment>\n    );\n};\n\nListItem.contextTypes = {\n    d2: PropTypes.object,\n};\n\nexport default connect(\n    null,\n    {\n        tRemoveListItemContent,\n    }\n)(ListItem);\n","import {\n    acUpdateDashboardItem,\n    acRemoveDashboardItem,\n} from '../../../actions/editDashboard';\nimport { itemTypeMap } from '../../../modules/itemTypes';\n\nexport const tRemoveListItemContent = (dashboardItem, content) => dispatch => {\n    const listItemType = itemTypeMap[dashboardItem.type].propName;\n\n    const newContent = dashboardItem[listItemType].filter(\n        item => item.id !== content.id\n    );\n\n    if (newContent.length) {\n        dashboardItem[listItemType] = newContent;\n        dispatch(acUpdateDashboardItem(dashboardItem));\n    } else {\n        dispatch(acRemoveDashboardItem(dashboardItem));\n    }\n};\n","import React, { Fragment } from 'react';\nimport { connect } from 'react-redux';\nimport i18n from '@dhis2/d2-i18n';\nimport Input from '@material-ui/core/Input';\nimport {\n    Parser as RichTextParser,\n    Editor as RichTextEditor,\n} from '@dhis2/d2-ui-rich-text';\n\nimport { acUpdateDashboardItem } from '../../../actions/editDashboard';\nimport { sGetEditDashboardItems } from '../../../reducers/editDashboard';\nimport { sGetDashboardItems } from '../../../reducers/dashboards';\nimport ItemHeader from '../ItemHeader';\nimport Line from '../../../widgets/Line';\n\nconst style = {\n    textDiv: {\n        padding: '10px',\n        whiteSpace: 'pre-line',\n        lineHeight: '20px',\n    },\n    textField: {\n        fontSize: '14px',\n        fontStretch: 'normal',\n        width: '90%',\n        margin: '0 auto',\n        display: 'block',\n        lineHeight: '24px',\n    },\n    container: {\n        marginBottom: '20px',\n        marginTop: '20px',\n    },\n};\n\nconst TextItem = props => {\n    const { item, editMode, text, acUpdateDashboardItem } = props;\n\n    const onChangeText = event => {\n        const updatedItem = {\n            ...item,\n            text: event.target.value,\n        };\n\n        acUpdateDashboardItem(updatedItem);\n    };\n\n    const viewItem = () => {\n        const textDivStyle = Object.assign({}, style.textField, style.textDiv);\n        return (\n            <div className=\"dashboard-item-content\" style={style.container}>\n                <RichTextParser style={textDivStyle}>{text}</RichTextParser>\n            </div>\n        );\n    };\n\n    const editItem = () => {\n        return (\n            <Fragment>\n                <ItemHeader title={i18n.t('Text item')} />\n                <Line />\n                <div className=\"dashboard-item-content\">\n                    <RichTextEditor onEdit={onChangeText}>\n                        <Input\n                            value={text}\n                            multiline\n                            fullWidth\n                            style={style.textField}\n                            placeholder={i18n.t('Add text here')}\n                            onChange={onChangeText}\n                        />\n                    </RichTextEditor>\n                </div>\n            </Fragment>\n        );\n    };\n\n    return <Fragment>{editMode ? editItem() : viewItem()}</Fragment>;\n};\n\nconst mapStateToProps = (state, ownProps) => {\n    const items = ownProps.editMode\n        ? sGetEditDashboardItems(state)\n        : sGetDashboardItems(state);\n\n    const item = items.find(item => item.id === ownProps.item.id);\n\n    return {\n        text: item ? item.text : '',\n    };\n};\n\nexport default connect(\n    mapStateToProps,\n    {\n        acUpdateDashboardItem,\n    }\n)(TextItem);\n","import React, { Fragment } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport NotInterestedIcon from '@material-ui/icons/NotInterested';\n\nimport { FILTER_ORG_UNIT } from '../../../actions/itemFilters';\nimport { sGetItemFiltersRoot } from '../../../reducers/itemFilters';\nimport ItemHeader from '../ItemHeader';\nimport Line from '../../../widgets/Line';\n\nconst getIframeSrc = (appDetails, item, itemFilters) => {\n    let iframeSrc = `${appDetails.launchUrl}?dashboardItemId=${item.id}`;\n\n    if (\n        itemFilters &&\n        itemFilters[FILTER_ORG_UNIT] &&\n        itemFilters[FILTER_ORG_UNIT].length\n    ) {\n        const ouIds = itemFilters[FILTER_ORG_UNIT].map(\n            ouPath => ouPath.split('/').slice(-1)[0]\n        );\n\n        iframeSrc += `&userOrgUnit=${ouIds.join(',')}`;\n    }\n\n    return iframeSrc;\n};\n\nconst AppItem = ({ item, itemFilters }, context) => {\n    let appDetails;\n\n    const appKey = item.appKey;\n\n    if (appKey) {\n        appDetails = context.d2.system.installedApps.find(\n            app => app.key === appKey\n        );\n    }\n\n    return appDetails && appDetails.name && appDetails.launchUrl ? (\n        <Fragment>\n            <ItemHeader title={appDetails.name} />\n            <Line />\n            <iframe\n                title={appDetails.name}\n                src={getIframeSrc(appDetails, item, itemFilters)}\n                className=\"dashboard-item-content\"\n                style={{ border: 'none' }}\n            />\n        </Fragment>\n    ) : (\n        <Fragment>\n            <ItemHeader title={`${appKey} app not found`} />\n            <Line />\n            <div\n                className=\"dashboard-item-content\"\n                style={{\n                    display: 'flex',\n                    justifyContent: 'center',\n                    alignItems: 'center',\n                    height: '90%',\n                }}\n            >\n                <NotInterestedIcon\n                    color=\"disabled\"\n                    disabled\n                    style={{ width: 100, height: 100, align: 'center' }}\n                />\n            </div>\n        </Fragment>\n    );\n};\n\nAppItem.contextTypes = {\n    d2: PropTypes.object,\n};\n\nconst mapStateToProps = state => ({\n    itemFilters: sGetItemFiltersRoot(state),\n});\n\nexport default connect(mapStateToProps)(AppItem);\n","import React, { Fragment } from 'react';\nimport i18n from '@dhis2/d2-i18n';\n\nimport { colors } from '@dhis2/ui-core';\nimport ItemHeader from '../ItemHeader';\n\nconst style = {\n    margin: '21px 28px',\n    fontSize: '14px',\n    lineHeight: '18px',\n    color: colors.grey600,\n};\n\nconst SpacerItem = () => {\n    return (\n        <Fragment>\n            <ItemHeader title={i18n.t('Spacer')} />\n            <p style={style}>\n                {i18n.t(\n                    'Use a spacer to create empty vertical space between other dashboard items.'\n                )}\n            </p>\n        </Fragment>\n    );\n};\n\nexport default SpacerItem;\n","import React from 'react';\n\nimport VisualizationItem from './VisualizationItem/Item';\nimport MessagesItem from './MessagesItem/Item';\nimport NotSupportedItem from './NotSupportedItem/Item';\nimport ListItem from './ListItem/Item';\nimport TextItem from './TextItem/Item';\nimport AppItem from './AppItem/Item';\nimport SpacerItem from './SpacerItem/Item';\nimport {\n    APP,\n    REPORT_TABLE,\n    CHART,\n    MAP,\n    EVENT_CHART,\n    EVENT_REPORT,\n    MESSAGES,\n    REPORTS,\n    RESOURCES,\n    USERS,\n    TEXT,\n    SPACER,\n} from '../../modules/itemTypes';\nimport { DEFAULT_STATE_ITEM_FILTERS } from '../../reducers/itemFilters';\n\nconst getGridItem = type => {\n    switch (type) {\n        case REPORT_TABLE:\n        case CHART:\n        case MAP:\n        case EVENT_CHART:\n        case EVENT_REPORT:\n            return VisualizationItem;\n        case MESSAGES:\n            return MessagesItem;\n        case REPORTS:\n        case RESOURCES:\n        case USERS:\n            return ListItem;\n        case TEXT:\n            return TextItem;\n        case SPACER:\n            return SpacerItem;\n        case APP:\n            return AppItem;\n        default:\n            return NotSupportedItem;\n    }\n};\n\nexport const Item = props => {\n    const GridItem = getGridItem(props.item.type);\n\n    return (\n        <GridItem\n            item={props.item}\n            editMode={props.editMode}\n            itemFilters={\n                props.editMode ? DEFAULT_STATE_ITEM_FILTERS : props.itemFilters\n            }\n            onToggleItemExpanded={props.onToggleItemExpanded}\n        />\n    );\n};\n","import React from 'react';\nimport ItemHeaderButton from '../Item/ItemHeaderButton';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport { colors } from '@dhis2/ui-core';\n\nconst style = {\n    button: {\n        position: 'absolute',\n        top: '7px',\n        right: '7px',\n        zIndex: '1000',\n    },\n    icon: {\n        fill: colors.red500,\n    },\n};\n\nconst DeleteItemHeaderButton = ({ onClick }) => (\n    <ItemHeaderButton onClick={onClick} style={style.button}>\n        <DeleteIcon style={style.icon} />\n    </ItemHeaderButton>\n);\n\nexport default DeleteItemHeaderButton;\n","import React from 'react';\nimport { colors } from '@dhis2/ui-core';\n\nexport const NoContentMessage = ({ text }) => (\n    <div\n        style={{\n            padding: '50px 10px',\n            textAlign: 'center',\n            fontSize: '15px',\n            fontWeight: 500,\n            color: colors.grey600,\n        }}\n    >\n        {text}\n    </div>\n);\n\nexport default NoContentMessage;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport debounce from 'lodash/debounce';\n\nconst defaultDebounceMs = 100;\nconst defaultBufferFactor = 0.25;\n\nclass ProgressiveLoadingContainer extends Component {\n    static propTypes = {\n        children: PropTypes.node.isRequired,\n        debounceMs: PropTypes.number,\n        bufferFactor: PropTypes.number,\n    };\n    static defaultProps = {\n        debounceMs: defaultDebounceMs,\n        bufferFactor: defaultBufferFactor,\n    };\n\n    state = {\n        shouldLoad: false,\n    };\n    containerRef = null;\n    shouldLoadHandler = null;\n\n    checkShouldLoad() {\n        const bufferPx = this.props.bufferFactor * window.innerHeight;\n\n        if (!this.containerRef) {\n            return;\n        }\n\n        const rect = this.containerRef.getBoundingClientRect();\n        if (\n            rect.bottom > -bufferPx &&\n            rect.top < window.innerHeight + bufferPx\n        ) {\n            this.setState({\n                shouldLoad: true,\n            });\n\n            this.removeHandler();\n        }\n    }\n\n    registerHandler() {\n        this.shouldLoadHandler = debounce(\n            () => this.checkShouldLoad(),\n            this.props.debounceMs\n        );\n\n        window.addEventListener('scroll', this.shouldLoadHandler);\n    }\n    removeHandler() {\n        window.removeEventListener('scroll', this.shouldLoadHandler);\n    }\n\n    componentDidMount() {\n        this.registerHandler();\n        this.checkShouldLoad();\n    }\n\n    componentWillUnmount() {\n        this.removeHandler();\n    }\n\n    render() {\n        const { children, debounceMs, bufferFactor, ...props } = this.props;\n        const { shouldLoad } = this.state;\n\n        return (\n            <div ref={ref => (this.containerRef = ref)} {...props}>\n                {shouldLoad && children}\n            </div>\n        );\n    }\n}\n\nexport default ProgressiveLoadingContainer;\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport i18n from '@dhis2/d2-i18n';\nimport ReactGridLayout from 'react-grid-layout';\nimport { CircularProgress, ScreenCover } from '@dhis2/ui-core';\n\nimport {\n    acUpdateDashboardLayout,\n    acRemoveDashboardItem,\n} from '../../actions/editDashboard';\nimport { Item } from '../Item/Item';\nimport { resize as pluginResize } from '../Item/VisualizationItem/plugin';\nimport { isPluginType } from '../../modules/itemTypes';\nimport {\n    GRID_ROW_HEIGHT,\n    GRID_COMPACT_TYPE,\n    ITEM_MIN_HEIGHT,\n    MARGIN,\n    getGridColumns,\n    hasShape,\n    onItemResize,\n} from './gridUtil';\nimport { orArray } from '../../modules/util';\nimport DeleteItemButton from './DeleteItemButton';\nimport NoContentMessage from '../../widgets/NoContentMessage';\n\nimport 'react-grid-layout/css/styles.css';\nimport 'react-resizable/css/styles.css';\n\nimport './ItemGrid.css';\nimport { sGetSelectedId, sGetSelectedIsLoading } from '../../reducers/selected';\nimport {\n    sGetEditDashboardRoot,\n    sGetEditDashboardItems,\n} from '../../reducers/editDashboard';\nimport {\n    sGetDashboardById,\n    sGetDashboardItems,\n} from '../../reducers/dashboards';\nimport ProgressiveLoadingContainer from '../Item/ProgressiveLoadingContainer';\n\n// Component\n\nconst EXPANDED_HEIGHT = 17;\n\nexport class ItemGrid extends Component {\n    state = {\n        expandedItems: {},\n    };\n\n    onToggleItemExpanded = clickedId => {\n        const isExpanded =\n            typeof this.state.expandedItems[clickedId] === 'boolean'\n                ? this.state.expandedItems[clickedId]\n                : false;\n\n        const expandedItems = { ...this.state.expandedItems };\n        expandedItems[clickedId] = !isExpanded;\n        this.setState({ expandedItems });\n    };\n\n    onRemoveItem = clickedId => {\n        this.props.acRemoveDashboardItem(clickedId);\n    };\n\n    componentWillReceiveProps(nextProps) {\n        if (nextProps.edit) {\n            this.setState({ expandedItems: {} });\n        }\n    }\n\n    onLayoutChange = newLayout => {\n        if (this.props.edit) {\n            this.props.acUpdateDashboardLayout(newLayout);\n        }\n    };\n\n    onResizeStop = (layout, oldItem, newItem) => {\n        onItemResize(newItem.i);\n\n        const dashboardItem = this.props.dashboardItems.find(\n            item => item.id === newItem.i\n        );\n\n        // call resize on the item component if it's a plugin type\n        if (dashboardItem && isPluginType(dashboardItem)) {\n            pluginResize(dashboardItem);\n        }\n    };\n\n    onRemoveItemWrapper = id => () => this.onRemoveItem(id);\n\n    render() {\n        const { edit, isLoading, dashboardItems } = this.props;\n\n        if (!isLoading && !dashboardItems.length) {\n            return (\n                <NoContentMessage\n                    text={i18n.t('There are no items on this dashboard')}\n                />\n            );\n        }\n\n        const items = dashboardItems.map(item => {\n            const expandedItem = this.state.expandedItems[item.id];\n            let hProp = { h: item.h };\n\n            if (expandedItem && expandedItem === true) {\n                hProp.h = item.h + EXPANDED_HEIGHT;\n            }\n\n            return Object.assign({}, item, hProp, {\n                i: item.id,\n                minH: ITEM_MIN_HEIGHT,\n            });\n        });\n\n        return (\n            <div className=\"grid-wrapper\">\n                {isLoading ? (\n                    <ScreenCover>\n                        <CircularProgress />\n                    </ScreenCover>\n                ) : null}\n                <ReactGridLayout\n                    onLayoutChange={this.onLayoutChange}\n                    onResizeStop={this.onResizeStop}\n                    className=\"layout\"\n                    layout={items}\n                    margin={MARGIN}\n                    cols={getGridColumns()}\n                    rowHeight={GRID_ROW_HEIGHT}\n                    width={window.innerWidth}\n                    compactType={GRID_COMPACT_TYPE}\n                    isDraggable={edit}\n                    isResizable={edit}\n                    draggableCancel=\"input,textarea\"\n                >\n                    {items.map(item => {\n                        const itemClassNames = [\n                            item.type,\n                            edit ? 'edit' : 'view',\n                        ].join(' ');\n\n                        return (\n                            <ProgressiveLoadingContainer\n                                key={item.i}\n                                className={itemClassNames}\n                            >\n                                {edit ? (\n                                    <DeleteItemButton\n                                        onClick={this.onRemoveItemWrapper(\n                                            item.id\n                                        )}\n                                    />\n                                ) : null}\n                                <Item\n                                    item={item}\n                                    editMode={edit}\n                                    onToggleItemExpanded={\n                                        this.onToggleItemExpanded\n                                    }\n                                />\n                            </ProgressiveLoadingContainer>\n                        );\n                    })}\n                </ReactGridLayout>\n            </div>\n        );\n    }\n}\n\nItemGrid.propTypes = {\n    dashboardItems: PropTypes.array,\n};\n\nItemGrid.defaultProps = {\n    dashboardItems: [],\n};\n\n// Container\n\nconst mapStateToProps = (state, ownProps) => {\n    const selectedDashboard = ownProps.edit\n        ? sGetEditDashboardRoot(state)\n        : sGetDashboardById(state, sGetSelectedId(state));\n\n    const dashboardItems = ownProps.edit\n        ? sGetEditDashboardItems(state)\n        : sGetDashboardItems(state);\n\n    return {\n        isLoading: sGetSelectedIsLoading(state) || !selectedDashboard,\n        dashboardItems,\n    };\n};\n\nconst mapDispatchToProps = {\n    acUpdateDashboardLayout,\n    acRemoveDashboardItem,\n};\n\nconst mergeProps = (stateProps, dispatchProps, ownProps) => {\n    const validItems = orArray(stateProps.dashboardItems).filter(hasShape);\n\n    return {\n        ...dispatchProps,\n        edit: ownProps.edit,\n        isLoading: stateProps.isLoading,\n        dashboardItems: validItems,\n        onItemResize,\n    };\n};\n\nexport default connect(\n    mapStateToProps,\n    mapDispatchToProps,\n    mergeProps\n)(ItemGrid);\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nimport i18n from '@dhis2/d2-i18n';\n\nimport { colors } from '@dhis2/ui-core';\n\nconst styles = {\n    badgeContainer: {\n        margin: '2px',\n        padding: '0 16px',\n        borderRadius: '4px',\n        color: colors.white,\n        backgroundColor: '#212934',\n        height: 36,\n        display: 'flex',\n        alignItems: 'center',\n    },\n    badge: {\n        fontSize: '13px',\n        cursor: 'pointer',\n        whiteSpace: 'nowrap',\n    },\n    badgeRemove: {\n        fontSize: '12px',\n        textDecoration: 'underline',\n        marginLeft: '24px',\n        cursor: 'pointer',\n    },\n};\n\nclass FilterBadge extends Component {\n    onClick = id => () => this.props.onClick(id);\n    onRemove = id => () => this.props.onRemove(id);\n\n    render() {\n        const { data } = this.props;\n\n        return (\n            <div style={styles.badgeContainer}>\n                <span style={styles.badge} onClick={this.onClick(data.id)}>\n                    {`${data.name}: ${\n                        data.values.length > 1\n                            ? i18n.t('{{count}} selected', {\n                                  count: data.values.length,\n                              })\n                            : data.values[0].name\n                    }`}\n                </span>\n                <span\n                    style={styles.badgeRemove}\n                    onClick={this.onRemove(data.id)}\n                >\n                    {i18n.t('Remove')}\n                </span>\n            </div>\n        );\n    }\n}\n\nFilterBadge.propTypes = {\n    data: PropTypes.object.isRequired,\n    onClick: PropTypes.func.isRequired,\n    onRemove: PropTypes.func.isRequired,\n};\n\nFilterBadge.defaultProps = {\n    onClick: Function.prototype,\n    onRemove: Function.prototype,\n};\n\nexport default FilterBadge;\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { createSelector } from 'reselect';\nimport { withStyles } from '@material-ui/core/styles';\n\nimport { sGetDimensions } from '../../reducers/dimensions';\nimport { sGetItemFiltersRoot } from '../../reducers/itemFilters';\nimport { sGetControlBarUserRows } from '../../reducers/controlBar';\nimport { getTopOffset } from '../ControlBar/controlBarDimensions';\nimport { acRemoveItemFilter } from '../../actions/itemFilters';\nimport { acRemoveEditItemFilter } from '../../actions/editItemFilters';\nimport { acSetActiveModalDimension } from '../../actions/activeModalDimension';\n\nimport FilterBadge from './FilterBadge';\n\nconst styles = {\n    bar: {\n        position: 'sticky',\n        zIndex: 7,\n        padding: '8px 0',\n        display: 'flex',\n        justifyContent: 'center',\n        flexWrap: 'wrap',\n    },\n};\n\nexport class FilterBar extends Component {\n    onBadgeRemove = id => {\n        this.props.removeItemFilter(id);\n        this.props.removeEditItemFilter(id);\n    };\n\n    onBadgeClick = id => {\n        this.props.setActiveModalDimension({\n            id,\n            name: this.props.filters.find(item => item.id === id).name,\n        });\n    };\n\n    render() {\n        const { filters, userRows, classes } = this.props;\n        const top = getTopOffset(userRows) + 10;\n\n        return filters.length ? (\n            <div className={classes.bar} style={{ top }}>\n                {filters.map(filter => (\n                    <FilterBadge\n                        key={filter.id}\n                        data={filter}\n                        onClick={this.onBadgeClick}\n                        onRemove={this.onBadgeRemove}\n                    />\n                ))}\n            </div>\n        ) : null;\n    }\n}\n\nFilterBar.propTypes = {\n    filters: PropTypes.array.isRequired,\n    removeItemFilter: PropTypes.func.isRequired,\n    removeEditItemFilter: PropTypes.func.isRequired,\n};\n\nFilterBar.defaultProps = {\n    filters: [],\n    removeItemFIlter: Function.prototype,\n    removeEditItemFilter: Function.prototype,\n};\n\n// simplify the filters structure to:\n// [{ id: 'pe', name: 'Period', values: [{ id: 2019: name: '2019' }, {id: 'LAST_MONTH', name: 'Last month' }]}, ...]\nconst filtersSelector = createSelector(\n    [sGetItemFiltersRoot, sGetDimensions],\n    (filters, dimensions) =>\n        Object.keys(filters).reduce((arr, id) => {\n            arr.push({\n                id: id,\n                name: dimensions[id].name,\n                values: filters[id].map(value => ({\n                    id: value.id,\n                    name: value.displayName || value.name,\n                })),\n            });\n\n            return arr;\n        }, [])\n);\n\nconst mapStateToProps = state => ({\n    filters: filtersSelector(state),\n    userRows: sGetControlBarUserRows(state),\n});\n\nexport default connect(\n    mapStateToProps,\n    {\n        setActiveModalDimension: acSetActiveModalDimension,\n        removeItemFilter: acRemoveItemFilter,\n        removeEditItemFilter: acRemoveEditItemFilter,\n    }\n)(withStyles(styles)(FilterBar));\n","import React, { Fragment } from 'react';\nimport TitleBar from '../TitleBar/TitleBar';\nimport ItemGrid from '../ItemGrid/ItemGrid';\nimport FilterBar from '../FilterBar/FilterBar';\n\nexport const DashboardContent = props => (\n    <Fragment>\n        <TitleBar edit={props.editMode} />\n        <FilterBar />\n        <ItemGrid edit={props.editMode} />\n    </Fragment>\n);\n\nexport default DashboardContent;\n","import React, { Fragment } from 'react';\nimport { connect } from 'react-redux';\nimport isEmpty from 'lodash/isEmpty';\nimport i18n from '@dhis2/d2-i18n';\n\nimport {\n    sGetAllDashboards,\n    sDashboardsIsFetching,\n} from '../../reducers/dashboards';\nimport { sGetSelectedId } from '../../reducers/selected';\nimport DashboardsBar from '../ControlBar/DashboardsBar';\nimport DashboardVerticalOffset from './DashboardVerticalOffset';\nimport DashboardContent from './DashboardContent';\nimport NoContentMessage from '../../widgets/NoContentMessage';\n\nexport const Content = ({ hasDashboardContent, dashboardsIsEmpty }) => {\n    const msg = dashboardsIsEmpty\n        ? i18n.t(\n              'No dashboards found. Use the + button to create a new dashboard.'\n          )\n        : i18n.t('Requested dashboard not found');\n\n    return hasDashboardContent ? (\n        <DashboardContent editMode={false} />\n    ) : (\n        <NoContentMessage text={msg} />\n    );\n};\n\nexport const ViewDashboard = ({ id, dashboardsIsEmpty, dashboardsLoaded }) => {\n    const hasDashboardContent = id && !dashboardsIsEmpty;\n    const contentNotReady = !dashboardsLoaded || id === null;\n\n    return (\n        <Fragment>\n            <DashboardsBar />\n            <DashboardVerticalOffset />\n            <div className=\"dashboard-wrapper\">\n                {contentNotReady ? null : (\n                    <Content\n                        hasDashboardContent={hasDashboardContent}\n                        dashboardsIsEmpty={dashboardsIsEmpty}\n                    />\n                )}\n            </div>\n        </Fragment>\n    );\n};\n\nconst mapStateToProps = state => {\n    const dashboards = sGetAllDashboards(state);\n\n    return {\n        id: sGetSelectedId(state),\n        dashboardsIsEmpty: isEmpty(dashboards),\n        dashboardsLoaded: !sDashboardsIsFetching(state),\n    };\n};\n\nexport default connect(mapStateToProps)(ViewDashboard);\n","import React from 'react';\nimport i18n from '@dhis2/d2-i18n';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport { Button } from '@dhis2/ui-core';\n\nexport const ConfirmDeleteDialog = ({\n    dashboardName,\n    onDeleteConfirmed,\n    onContinueEditing,\n    open,\n}) => {\n    const actions = [\n        <Button key=\"cancel\" secondary onClick={onContinueEditing}>\n            {i18n.t('Cancel')}\n        </Button>,\n        <Button key=\"delete\" destructive onClick={onDeleteConfirmed}>\n            {i18n.t('Delete')}\n        </Button>,\n    ];\n\n    return (\n        <Dialog open={open} onClose={onContinueEditing}>\n            <DialogTitle style={{ fontSize: '1.25rem', fontWeight: '450' }}>\n                {i18n.t('Delete dashboard')}\n            </DialogTitle>\n            <DialogContent>\n                <DialogContentText style={{ fontSize: '0.875rem' }}>\n                    {i18n.t(\n                        'Deleting dashboard \"{{ dashboardName }}\" will remove it for all users. This action cannot be undone. Are you sure you want to permanently delete this dashboard?',\n                        { dashboardName }\n                    )}\n                </DialogContentText>\n            </DialogContent>\n            <DialogActions>{actions}</DialogActions>\n        </Dialog>\n    );\n};\n\nexport default ConfirmDeleteDialog;\n","import React, { Component, Fragment } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { Redirect } from 'react-router-dom';\nimport i18n from '@dhis2/d2-i18n';\nimport ControlBar from './ControlBar';\nimport TranslationDialog from '@dhis2/d2-ui-translation-dialog';\nimport { Button } from '@dhis2/ui-core';\n\nimport ConfirmDeleteDialog from './ConfirmDeleteDialog';\nimport {\n    tSaveDashboard,\n    acClearEditDashboard,\n} from '../../actions/editDashboard';\nimport {\n    tDeleteDashboard,\n    acSetDashboardDisplayName,\n} from '../../actions/dashboards';\nimport {\n    sGetEditDashboardRoot,\n    sGetIsNewDashboard,\n} from '../../reducers/editDashboard';\nimport {\n    CONTROL_BAR_ROW_HEIGHT,\n    MIN_ROW_COUNT,\n    getControlBarHeight,\n} from './controlBarDimensions';\nimport { apiFetchDashboard } from '../../api/dashboards';\n\nimport classes from './styles/DashboardsBar.module.css';\n\nconst buttonBarStyle = {\n    height: CONTROL_BAR_ROW_HEIGHT,\n    paddingTop: '15px',\n    marginLeft: '15px',\n    marginRight: '15px',\n};\n\nexport class EditBar extends Component {\n    state = {\n        translationDialogIsOpen: false,\n        dashboardModel: undefined,\n        confirmDeleteDialogOpen: false,\n        redirectUrl: undefined,\n    };\n\n    onConfirmDelete = () => {\n        this.setState({ confirmDeleteDialogOpen: true });\n    };\n\n    onSave = () => {\n        this.props.onSave().then(newId => {\n            this.setState({ redirectUrl: `/${newId}` });\n        });\n    };\n\n    onDiscard = () => {\n        this.props.onDiscardChanges();\n        const redirectUrl = this.props.dashboardId\n            ? `/${this.props.dashboardId}`\n            : '/';\n        this.setState({ redirectUrl });\n    };\n\n    onContinueEditing = () => {\n        this.setState({ confirmDeleteDialogOpen: false });\n    };\n\n    onDeleteConfirmed = () => {\n        this.setState({ confirmDeleteDialogOpen: false });\n        this.props.onDelete(this.props.dashboardId).then(() => {\n            this.setState({ redirectUrl: '/' });\n        });\n    };\n\n    onTranslationsSaved = async translations => {\n        if (translations && translations.length) {\n            const dbLocale = await this.context.d2.currentUser.userSettings.get(\n                'keyDbLocale'\n            );\n\n            const translation = translations.find(\n                t => t.locale === dbLocale && t.property === 'NAME'\n            );\n\n            if (translation && translation.value) {\n                this.props.onTranslate(\n                    this.props.dashboardId,\n                    translation.value\n                );\n            }\n        }\n    };\n\n    fetchDashboardModel = () => {\n        if (this.props.dashboardId && !this.state.dashboardModel) {\n            apiFetchDashboard(this.props.dashboardId).then(dashboardModel =>\n                this.setState({ dashboardModel })\n            );\n        }\n    };\n\n    componentDidMount() {\n        this.fetchDashboardModel();\n    }\n\n    componentDidUpdate() {\n        this.fetchDashboardModel();\n    }\n\n    toggleTranslationDialog = () => {\n        this.setState({\n            translationDialogIsOpen: !this.state.translationDialogIsOpen,\n        });\n    };\n\n    confirmDeleteDialog = () =>\n        this.props.deleteAccess && this.props.dashboardId ? (\n            <ConfirmDeleteDialog\n                dashboardName={this.props.dashboardName}\n                onDeleteConfirmed={this.onDeleteConfirmed}\n                onContinueEditing={this.onContinueEditing}\n                open={this.state.confirmDeleteDialogOpen}\n            />\n        ) : null;\n\n    translationDialog = () =>\n        this.state.dashboardModel && this.state.dashboardModel.id ? (\n            <TranslationDialog\n                className=\"translation-dialog\"\n                d2={this.context.d2}\n                open={this.state.translationDialogIsOpen}\n                onRequestClose={this.toggleTranslationDialog}\n                objectToTranslate={this.state.dashboardModel}\n                fieldsToTranslate={['name', 'description']}\n                // TODO handle messages in snackbar\n                onTranslationSaved={this.onTranslationsSaved}\n                onTranslationError={err =>\n                    console.log('translation update error', err)\n                }\n            />\n        ) : null;\n\n    render() {\n        if (this.state.redirectUrl) {\n            return <Redirect to={this.state.redirectUrl} />;\n        }\n\n        const { dashboardId, deleteAccess, updateAccess } = this.props;\n        const controlBarHeight = getControlBarHeight(MIN_ROW_COUNT);\n\n        const discardBtnText = updateAccess\n            ? i18n.t('Exit without saving')\n            : i18n.t('Go to dashboards');\n\n        return (\n            <Fragment>\n                <ControlBar height={controlBarHeight} editMode={true}>\n                    <div style={buttonBarStyle}>\n                        {updateAccess ? (\n                            <div className={classes.leftControls}>\n                                <span style={{ marginRight: '15px' }}>\n                                    <Button primary onClick={this.onSave}>\n                                        {i18n.t('Save changes')}\n                                    </Button>\n                                </span>\n\n                                {dashboardId ? (\n                                    <span style={{ marginRight: '15px' }}>\n                                        <Button\n                                            onClick={\n                                                this.toggleTranslationDialog\n                                            }\n                                        >\n                                            {i18n.t('Translate')}\n                                        </Button>\n                                    </span>\n                                ) : null}\n                                {dashboardId && deleteAccess ? (\n                                    <Button onClick={this.onConfirmDelete}>\n                                        {i18n.t('Delete')}\n                                    </Button>\n                                ) : null}\n                            </div>\n                        ) : null}\n\n                        <div className={classes.rightControls}>\n                            <Button secondary onClick={this.onDiscard}>\n                                {discardBtnText}\n                            </Button>\n                        </div>\n                    </div>\n                </ControlBar>\n                {this.translationDialog()}\n                {this.confirmDeleteDialog()}\n            </Fragment>\n        );\n    }\n}\n\nEditBar.contextTypes = {\n    d2: PropTypes.object,\n};\n\nconst mapStateToProps = state => {\n    const dashboard = sGetEditDashboardRoot(state);\n\n    let deleteAccess;\n    let updateAccess;\n    if (sGetIsNewDashboard(state)) {\n        deleteAccess = true;\n        updateAccess = true;\n    } else {\n        updateAccess = dashboard.access ? dashboard.access.update : false;\n        deleteAccess = dashboard.access ? dashboard.access.delete : false;\n    }\n\n    return {\n        dashboardId: dashboard.id,\n        dashboardName: dashboard.name,\n        deleteAccess,\n        updateAccess,\n    };\n};\n\nconst mapDispatchToProps = dispatch => ({\n    onSave: () => dispatch(tSaveDashboard()).then(id => id),\n    onDelete: id => dispatch(tDeleteDashboard(id)),\n    onDiscardChanges: () => dispatch(acClearEditDashboard()),\n    onTranslate: (id, value) => dispatch(acSetDashboardDisplayName(id, value)),\n});\n\nexport default connect(\n    mapStateToProps,\n    mapDispatchToProps\n)(EditBar);\n","import React, { Fragment, Component } from 'react';\nimport { connect } from 'react-redux';\nimport i18n from '@dhis2/d2-i18n';\n\nimport { acSetEditDashboard } from '../../actions/editDashboard';\nimport { sGetSelectedId } from '../../reducers/selected';\nimport {\n    sGetDashboardById,\n    sGetDashboardItems,\n    sDashboardsIsFetching,\n} from '../../reducers/dashboards';\nimport DashboardVerticalOffset from './DashboardVerticalOffset';\nimport DashboardContent from './DashboardContent';\nimport EditBar from '../ControlBar/EditBar';\nimport NoContentMessage from '../../widgets/NoContentMessage';\n\nexport const Content = ({ updateAccess }) => {\n    return updateAccess ? (\n        <DashboardContent editMode={true} />\n    ) : (\n        <NoContentMessage text={i18n.t('No access')} />\n    );\n};\nexport class EditDashboard extends Component {\n    state = {\n        initialized: false,\n    };\n\n    initEditDashboard = () => {\n        if (this.props.dashboard) {\n            this.setState({ initialized: true });\n            this.props.setEditDashboard(this.props.dashboard, this.props.items);\n        }\n    };\n\n    componentDidMount() {\n        this.initEditDashboard();\n    }\n\n    componentDidUpdate() {\n        if (!this.state.initialized) {\n            this.initEditDashboard();\n        }\n    }\n\n    getDashboardContent = () => {\n        const contentNotReady =\n            !this.props.dashboardsLoaded || this.props.id === null;\n\n        return (\n            <div className=\"dashboard-wrapper\">\n                {contentNotReady ? null : (\n                    <Content updateAccess={this.props.updateAccess} />\n                )}\n            </div>\n        );\n    };\n\n    render() {\n        return (\n            <Fragment>\n                <EditBar />\n                <DashboardVerticalOffset editMode={true} />\n                {this.getDashboardContent()}\n            </Fragment>\n        );\n    }\n}\n\nconst mapStateToProps = state => {\n    const id = sGetSelectedId(state);\n    const dashboard = id ? sGetDashboardById(state, id) : null;\n\n    const updateAccess =\n        dashboard && dashboard.access ? dashboard.access.update : false;\n\n    return {\n        dashboard,\n        id,\n        updateAccess,\n        items: sGetDashboardItems(state),\n        dashboardsLoaded: !sDashboardsIsFetching(state),\n    };\n};\n\nexport default connect(\n    mapStateToProps,\n    {\n        setEditDashboard: acSetEditDashboard,\n    }\n)(EditDashboard);\n","import React, { Component, Fragment } from 'react';\nimport { connect } from 'react-redux';\n\nimport { acSetEditNewDashboard } from '../../actions/editDashboard';\nimport DashboardVerticalOffset from './DashboardVerticalOffset';\nimport EditBar from '../ControlBar/EditBar';\nimport DashboardContent from './DashboardContent';\n\nclass NewDashboard extends Component {\n    componentDidMount() {\n        this.props.setNewDashboard();\n    }\n\n    render() {\n        return (\n            <Fragment>\n                <EditBar />\n                <DashboardVerticalOffset editMode={true} />\n                <div className=\"dashboard-wrapper\">\n                    <DashboardContent editMode={true} />\n                </div>\n            </Fragment>\n        );\n    }\n}\n\nexport default connect(\n    null,\n    {\n        setNewDashboard: acSetEditNewDashboard,\n    }\n)(NewDashboard);\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\n\nimport { tSelectDashboard } from '../../actions/dashboards';\nimport { sDashboardsIsFetching } from '../../reducers/dashboards';\nimport { EDIT, NEW } from './dashboardModes';\nimport ViewDashboard from './ViewDashboard';\nimport EditDashboard from './EditDashboard';\nimport NewDashboard from './NewDashboard';\n\nclass Dashboard extends Component {\n    setDashboard = () => {\n        if (this.props.dashboardsLoaded) {\n            const id = this.props.match.params.dashboardId || null;\n\n            this.props.selectDashboard(id);\n\n            this.scrollToTop();\n        }\n    };\n\n    scrollToTop = () => {\n        window.scrollTo(0, 0);\n    };\n\n    componentDidMount() {\n        this.setDashboard();\n    }\n\n    componentDidUpdate() {\n        this.setDashboard();\n    }\n\n    render() {\n        switch (this.props.mode) {\n            case EDIT:\n                return <EditDashboard />;\n            case NEW:\n                return <NewDashboard />;\n            default:\n                return <ViewDashboard />;\n        }\n    }\n}\n\nconst mapStateToProps = state => {\n    return { dashboardsLoaded: !sDashboardsIsFetching(state) };\n};\n\nexport default connect(\n    mapStateToProps,\n    {\n        selectDashboard: tSelectDashboard,\n    }\n)(Dashboard);\n","export const EDIT = 'edit';\nexport const NEW = 'new';\nexport const VIEW = 'view';\n","import React, { Component } from 'react';\nimport { HashRouter as Router, Route, Switch } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport i18n from '@dhis2/d2-i18n';\nimport HeaderBar from '@dhis2/ui/widgets/HeaderBar';\n\nimport { EDIT, VIEW, NEW } from './Dashboard/dashboardModes';\nimport { acReceivedUser } from '../actions/user';\nimport { tFetchDashboards } from '../actions/dashboards';\nimport { tSetControlBarRows } from '../actions/controlBar';\nimport { tSetDimensions } from '../actions/dimensions';\nimport Dashboard from './Dashboard/Dashboard';\nimport SnackbarMessage from './SnackbarMessage/SnackbarMessage';\n\nimport 'typeface-roboto';\nimport './App.css';\n\nexport class App extends Component {\n    componentDidMount() {\n        this.props.setCurrentUser(this.props.d2.currentUser);\n        this.props.fetchDashboards();\n        this.props.setControlBarRows();\n        this.props.setDimensions(this.props.d2);\n    }\n\n    getChildContext() {\n        return { baseUrl: this.props.baseUrl, i18n, d2: this.props.d2 };\n    }\n\n    render() {\n        return (\n            <div className=\"app-wrapper\">\n                <div className=\"dashboard-header-bar\">\n                    <HeaderBar appName={i18n.t('Dashboard')} />\n                </div>\n                <Router>\n                    <Switch>\n                        <Route\n                            exact\n                            path=\"/\"\n                            render={props => (\n                                <Dashboard {...props} mode={VIEW} />\n                            )}\n                        />\n                        <Route\n                            exact\n                            path=\"/new\"\n                            render={props => (\n                                <Dashboard {...props} mode={NEW} />\n                            )}\n                        />\n                        <Route\n                            exact\n                            path=\"/:dashboardId\"\n                            render={props => (\n                                <Dashboard {...props} mode={VIEW} />\n                            )}\n                        />\n                        <Route\n                            exact\n                            path=\"/:dashboardId/edit\"\n                            render={props => (\n                                <Dashboard {...props} mode={EDIT} />\n                            )}\n                        />\n                    </Switch>\n                </Router>\n                <SnackbarMessage />\n            </div>\n        );\n    }\n}\n\nApp.childContextTypes = {\n    baseUrl: PropTypes.string,\n    i18n: PropTypes.object,\n    d2: PropTypes.object,\n};\n\nconst mapDispatchToProps = dispatch => {\n    return {\n        setCurrentUser: currentUser => dispatch(acReceivedUser(currentUser)),\n        fetchDashboards: () => dispatch(tFetchDashboards()),\n        setControlBarRows: () => dispatch(tSetControlBarRows()),\n        setDimensions: d2 => dispatch(tSetDimensions(d2)),\n    };\n};\n\nexport default connect(\n    null,\n    mapDispatchToProps\n)(App);\n","import { RECEIVED_USER } from '../reducers/user';\n\nexport const acReceivedUser = value => ({\n    type: RECEIVED_USER,\n    value,\n});\n","//------------------------------------------------------------------------------\n// <auto-generated>\n// This code was generated by d2-i18n-generate.\n//\n// Changes to this file may cause incorrect behavior and will be lost if\n// the code is regenerated.\n// </auto-generated>\n//------------------------------------------------------------------------------\nimport i18n from '@dhis2/d2-i18n';\nimport moment from 'moment';\nimport 'moment/locale/ar';\nimport 'moment/locale/es';\nimport 'moment/locale/fr';\nimport 'moment/locale/lo';\nimport 'moment/locale/nb';\nimport 'moment/locale/pt';\nimport 'moment/locale/ru';\nimport 'moment/locale/sv';\nimport 'moment/locale/tg';\nimport 'moment/locale/uk';\nimport 'moment/locale/ur';\nimport 'moment/locale/vi';\nimport 'moment/locale/zh-cn';\n\nimport arTranslations from './ar/translations.json';\nimport ar_IQTranslations from './ar_IQ/translations.json';\nimport daTranslations from './da/translations.json';\nimport enTranslations from './en/translations.json';\nimport esTranslations from './es/translations.json';\nimport frTranslations from './fr/translations.json';\nimport idTranslations from './id/translations.json';\nimport kmTranslations from './km/translations.json';\nimport loTranslations from './lo/translations.json';\nimport myTranslations from './my/translations.json';\nimport nbTranslations from './nb/translations.json';\nimport prsTranslations from './prs/translations.json';\nimport psTranslations from './ps/translations.json';\nimport ptTranslations from './pt/translations.json';\nimport pt_BRTranslations from './pt_BR/translations.json';\nimport ruTranslations from './ru/translations.json';\nimport svTranslations from './sv/translations.json';\nimport tetTranslations from './tet/translations.json';\nimport tgTranslations from './tg/translations.json';\nimport ukTranslations from './uk/translations.json';\nimport urTranslations from './ur/translations.json';\nimport viTranslations from './vi/translations.json';\nimport zhTranslations from './zh/translations.json';\nimport zh_CNTranslations from './zh_CN/translations.json';\n\nconst namespace = 'default';\nmoment.locale('en');\n\ni18n.addResources('ar', namespace, arTranslations);\ni18n.addResources('ar_IQ', namespace, ar_IQTranslations);\ni18n.addResources('da', namespace, daTranslations);\ni18n.addResources('en', namespace, enTranslations);\ni18n.addResources('es', namespace, esTranslations);\ni18n.addResources('fr', namespace, frTranslations);\ni18n.addResources('id', namespace, idTranslations);\ni18n.addResources('km', namespace, kmTranslations);\ni18n.addResources('lo', namespace, loTranslations);\ni18n.addResources('my', namespace, myTranslations);\ni18n.addResources('nb', namespace, nbTranslations);\ni18n.addResources('prs', namespace, prsTranslations);\ni18n.addResources('ps', namespace, psTranslations);\ni18n.addResources('pt', namespace, ptTranslations);\ni18n.addResources('pt_BR', namespace, pt_BRTranslations);\ni18n.addResources('ru', namespace, ruTranslations);\ni18n.addResources('sv', namespace, svTranslations);\ni18n.addResources('tet', namespace, tetTranslations);\ni18n.addResources('tg', namespace, tgTranslations);\ni18n.addResources('uk', namespace, ukTranslations);\ni18n.addResources('ur', namespace, urTranslations);\ni18n.addResources('vi', namespace, viTranslations);\ni18n.addResources('zh', namespace, zhTranslations);\ni18n.addResources('zh_CN', namespace, zh_CNTranslations);\n\ni18n.setDefaultNamespace(namespace);\ni18n.changeLanguage('en');\n\nexport default i18n;\n","/** @module reducers/selected */\nimport { validateReducer } from '../modules/util';\n\nexport const SET_STYLE = 'SET_STYLE';\n\nexport const DEFAULT_STATE_STYLE = 'LIST';\n\n/**\n * Reducer functions that computes and returns the new state based on the given action\n * @function\n * @param {Object} state The current state\n * @param {Object} action The action to be evaluated\n */\nconst style = (state = DEFAULT_STATE_STYLE, action) => {\n    switch (action.type) {\n        case SET_STYLE:\n            return validateReducer(action.value, DEFAULT_STATE_STYLE);\n        default:\n            return state;\n    }\n};\n\nexport default style;\n\n/**\n * Selectors that point to specific props in the state object\n * @function\n * @param {Object} state\n * @returns {Object}\n */\nexport const sGetStyleRoot = state => state.style;\n","import { combineReducers } from 'redux';\nimport arraySort from 'd2-utilizr/lib/arraySort';\n\nimport dashboards, { sGetDashboardsRoot } from './dashboards';\nimport selected from './selected';\nimport dashboardsFilter, {\n    ownerData,\n    sGetFilterName,\n    sGetFilterOrder,\n    sGetFilterOwner,\n} from './dashboardsFilter';\nimport controlBar from './controlBar';\nimport visualizations from './visualizations';\nimport editDashboard from './editDashboard';\nimport messages from './messages';\nimport user from './user';\nimport snackbar from './snackbar';\nimport itemFilters from './itemFilters';\nimport editItemFilters from './editItemFilters';\nimport style from './style';\nimport dimensions from './dimensions';\nimport settings from './settings';\nimport activeModalDimension from './activeModalDimension';\n\nconst USER = 'system';\n\n// Reducers\n\nexport default combineReducers({\n    dashboards,\n    selected,\n    dashboardsFilter,\n    controlBar,\n    visualizations,\n    messages,\n    user,\n    editDashboard,\n    itemFilters,\n    editItemFilters,\n    style,\n    snackbar,\n    dimensions,\n    settings,\n    activeModalDimension,\n});\n\n// Map constants to data\nconst mapConstToData = {\n    NAME: 'name',\n    ITEMS: 'numberOfItems',\n    CREATED: 'created',\n    OWNER: 'owner',\n};\n\n// Selectors\n\n// Filter dashboards by name\nexport const sFilterDashboardsByName = (dashboards, filter) =>\n    dashboards.filter(d =>\n        d.displayName.toLowerCase().includes(filter.toLowerCase())\n    );\n\n// Filter dashboards by owner, TODO FIXME\nexport const sFilterDashboardsByOwner = (dashboards, filter) => {\n    const ME = ownerData[1]; // TODO\n    const OTHERS = ownerData[2]; // TODO\n\n    switch (filter) {\n        case ME:\n            return dashboards.filter(d => d.owner === USER);\n        case OTHERS:\n            return dashboards.filter(d => d.owner !== USER);\n        default:\n            return dashboards;\n    }\n};\n\n// Filter dashboards by order\nexport const sFilterDashboardsByOrder = (dashboards, filter) => {\n    const filterValues = filter.split(':');\n\n    const key = filterValues[0];\n    const direction = filterValues[1];\n\n    return arraySort(dashboards, direction, mapConstToData[key]);\n};\n\n// Selectors dependency level 2\n\n// Get filtered dashboards\nexport const sGetFilteredDashboards = state => {\n    const dashboards = sGetDashboardsRoot(state);\n\n    const nameFilter = sGetFilterName(state);\n    const ownerFilter = sGetFilterOwner(state);\n    const orderFilter = sGetFilterOrder(state);\n\n    return sFilterDashboardsByOrder(\n        sFilterDashboardsByName(\n            sFilterDashboardsByOwner(dashboards, ownerFilter),\n            nameFilter\n        ),\n        orderFilter\n    );\n};\n","import { createStore, applyMiddleware, compose } from 'redux';\nimport { createLogger } from 'redux-logger';\nimport thunk from 'redux-thunk';\nimport reducer from './reducers';\n\nconst configureStore = () => {\n    const middleware = [thunk];\n\n    // Enable Redux devtools if extension is installed instead of redux-logger\n    const composeEnhancers =\n        window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\n    if (\n        !window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ &&\n        process.env.NODE_ENV !== 'production'\n    ) {\n        middleware.push(createLogger());\n    }\n\n    return createStore(\n        reducer,\n        composeEnhancers(applyMiddleware(...middleware))\n    );\n};\n\nexport default configureStore;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport { MuiThemeProvider, createMuiTheme } from '@material-ui/core/styles';\nimport { init as d2Init, config, getManifest, getUserSettings } from 'd2';\nimport dhis2theme from '@dhis2/d2-ui-core/theme/mui3.theme';\nimport { colors } from '@dhis2/ui-core';\n\n// temporary workaround until new ui headerbar is ready\nimport 'material-design-icons/iconfont/material-icons.css';\nimport './reset.css';\n\nimport App from './components/App';\nimport './index.css';\nimport i18n from './locales';\nimport configureStore from './configureStore';\n\n// small workaround until ui-core textarea is ready\ndhis2theme.palette.primary.dark = colors.teal600;\n\nconst muiTheme = () => createMuiTheme(dhis2theme);\n\nconst configI18n = userSettings => {\n    const uiLocale = userSettings.keyUiLocale;\n\n    if (uiLocale && uiLocale !== 'en') {\n        config.i18n.sources.add(`./i18n/i18n_module_${uiLocale}.properties`);\n    }\n\n    config.i18n.sources.add('./i18n/i18n_module_en.properties');\n    i18n.changeLanguage(uiLocale);\n};\n\nconst init = async () => {\n    const manifest = await getManifest('./manifest.webapp');\n\n    // log app info\n    console.info(\n        `Dashboards app, v${manifest.version}, ${\n            manifest.manifest_generated_at\n        }`\n    );\n\n    const isProd = process.env.NODE_ENV === 'production';\n\n    if (\n        !isProd &&\n        (!process.env.REACT_APP_DHIS2_BASE_URL ||\n            !process.env.REACT_APP_DHIS2_AUTHORIZATION)\n    ) {\n        throw new Error(\n            'Missing env variables REACT_APP_DHIS2_BASE_URL and REACT_APP_DHIS2_AUTHORIZATION'\n        );\n    }\n\n    // api config\n    const baseUrl = isProd\n        ? manifest.activities.dhis.href\n        : process.env.REACT_APP_DHIS2_BASE_URL;\n    const authorization = process.env.REACT_APP_DHIS2_AUTHORIZATION;\n\n    config.baseUrl = `${baseUrl}/api/${manifest.dhis2.apiVersion}`;\n    config.headers = isProd ? null : { Authorization: authorization };\n    config.schemas = [\n        'chart',\n        'map',\n        'report',\n        'reportTable',\n        'eventChart',\n        'eventReport',\n        'dashboard',\n        'organisationUnit',\n        'userGroup',\n    ];\n\n    getUserSettings()\n        .then(configI18n)\n        .then(() => d2Init(config))\n        .then(initializedD2 => {\n            ReactDOM.render(\n                <Provider store={configureStore()}>\n                    <MuiThemeProvider theme={muiTheme()}>\n                        <App baseUrl={baseUrl} d2={initializedD2} />\n                    </MuiThemeProvider>\n                </Provider>,\n                document.getElementById('root')\n            );\n        });\n};\n\ninit();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"ControlBar_root__3LaTt\",\"content\":\"ControlBar_content__1r98-\",\"draghandle\":\"ControlBar_draghandle__1VWa0\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"ClearButton_button__2yjcV\",\"icon\":\"ClearButton_icon__1fqj8\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"showMoreButton\":\"CategorizedMenuGroup_showMoreButton__3-0Wa\"};"],"sourceRoot":""}
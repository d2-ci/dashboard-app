{"version":3,"sources":["components/ItemSelector/styles/CategorizedMenuGroup.module.css","components/Item/styles/DeleteItemButton.module.css","api/metadata.js","components/Item/ListItem/Item.module.css","modules/util.js","components/ControlBar/styles/DashboardsBar.module.css","components/ItemSelector/styles/ContentMenuItem.module.css","components/Item/styles/ItemHeader.module.css","reducers/user.js","reducers/dashboards.js","reducers/selected.js","reducers/visualizations.js","actions/visualizations.js","api/index.js","api/dashboards.js","reducers/messages.js","api/messages.js","reducers/snackbar.js","actions/snackbar.js","components/SnackbarMessage/SnackbarMessage.js","actions/selected.js","api/localStorage.js","components/Item/MessagesItem/actions.js","reducers/editDashboard.js","reducers/editItemFilters.js","reducers/itemFilters.js","actions/itemFilters.js","actions/editItemFilters.js","api/editDashboard.js","actions/editDashboard.js","actions/dashboards.js","reducers/controlBar.js","api/controlBar.js","actions/controlBar.js","reducers/dimensions.js","reducers/settings.js","actions/dimensions.js","components/ControlBar/ShowMoreButton.js","components/ControlBar/controlBarDimensions.js","components/ControlBar/ControlBar.js","icons/Star.js","api/dataStatistics.js","components/ControlBar/DashboardItemChip.js","icons/AddCircle.js","icons/Clear.js","components/ControlBar/ClearButton.js","reducers/dashboardsFilter.js","components/ControlBar/Filter.js","components/ControlBar/DashboardsBar.js","actions/dashboardsFilter.js","components/Dashboard/DashboardVerticalOffset.js","components/ItemSelector/HeaderMenuItem.js","icons/Launch.js","components/ItemSelector/ContentMenuItem.js","components/ItemSelector/selectableItems.js","components/ItemSelector/CategorizedMenuGroup.js","components/ItemSelector/actions.js","components/ItemSelector/SinglesMenuGroup.js","components/ItemSelector/ItemSelector.js","components/TitleBar/EditTitleBar.js","components/ItemFilter/FilterDialog.js","reducers/activeModalDimension.js","actions/activeModalDimension.js","components/ItemFilter/FilterSelector.js","components/TitleBar/Info.js","components/TitleBar/ViewTitleBar.js","components/TitleBar/TitleBar.js","components/Item/VisualizationItem/DefaultPlugin.js","components/Item/DeleteItemButton.js","components/Item/ItemHeader.js","components/Item/VisualizationItem/assets/icons.js","components/Item/VisualizationItem/ItemHeaderButtons.js","components/Item/VisualizationItem/ItemFooter.js","modules/memoizeOne.js","components/Item/VisualizationItem/Item.js","widgets/Line.js","components/Item/MessagesItem/Item.js","components/Item/NotSupportedItem/Item.js","icons/Description.js","icons/Delete.js","components/Item/ListItem/Item.js","components/Item/ListItem/actions.js","components/Item/TextItem/Item.js","components/Item/AppItem/Item.js","components/Item/SpacerItem/Item.js","components/Item/Item.js","widgets/NoContentMessage.js","components/Item/ProgressiveLoadingContainer.js","components/ItemGrid/ItemGrid.js","components/FilterBar/FilterBadge.js","components/FilterBar/FilterBar.js","components/Dashboard/DashboardContent.js","components/Dashboard/ViewDashboard.js","components/ControlBar/ConfirmDeleteDialog.js","components/ControlBar/EditBar.js","components/Dashboard/EditDashboard.js","components/Dashboard/NewDashboard.js","components/Dashboard/Dashboard.js","components/Dashboard/dashboardModes.js","components/App.js","actions/user.js","locales/index.js","reducers/style.js","reducers/index.js","configureStore.js","index.js","components/ControlBar/styles/ControlBar.module.css","components/ControlBar/styles/ClearButton.module.css","components/Item/VisualizationItem/plugin.js","components/ItemGrid/gridUtil.js","modules/itemTypes.js"],"names":["module","exports","showMoreButton","deleteItemButton","getIdNameFields","rename","arguments","length","undefined","concat","getDimensionFields","_ref2","withItems","arrayClean","join","getAxesFields","_ref3","getFavoriteFields","_ref4","withDimensions","withOptions","getFavoritesFields","_ref5","Object","_home_travis_build_dhis2_dashboards_app_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_toConsumableArray__WEBPACK_IMPORTED_MODULE_0__","getListItemFields","getMapFields","apiFetchFavorite","id","type","_ref6","fields","getInstance","then","d2","Api","getApi","get","getEndPointName","list","item","itemicon","link","deleteicon","deletebutton","orArray","param","Array","isArray","orObject","isObject","arrayToIdMap","array","reduce","obj","formatDate","value","uiLocale","global","Intl","DateTimeFormat","locale","year","month","day","format","Date","substr","replace","validateReducer","defaultValue","getBaseUrl","api","idx","baseUrl","indexOf","slice","getWithoutId","object","_home_travis_build_dhis2_dashboards_app_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectSpread__WEBPACK_IMPORTED_MODULE_0__","leftControls","rightControls","menuItem","launchLink","label","buttonInsert","itemWrap","itemHeaderWrap","itemTitle","itemActionsWrap","DEFAULT_STATE_USER","username","isSuperuser","sGetUserUsername","state","user","DEFAULT_STATE_DASHBOARDS","byId","items","updateDashboardProp","_ref","dashboardId","prop","objectSpread","defineProperty","sGetDashboardsRoot","dashboards","sGetDashboardById","sDashboardsIsFetching","sGetAllDashboards","sGetDashboardItems","sGetStarredDashboards","values","filter","dashboard","starred","sGetUnstarredDashboards","sGetDashboardsSortedByStarred","toConsumableArray","arraySort","getCustomDashboards","data","arrayFrom","map","d","name","displayName","description","displayDescription","favorite","owner","created","split","lastUpdated","access","numberOfItems","dashboardItems","isSpacerType","SPACER","VISUALIZATION","reportTable","REPORT_TABLE","chart","CHART","text","isTextType","emptyTextItemContent","combineReducers","action","isLoading","showDescription","sGetSelectedRoot","selected","sGetSelectedId","sGetSelectedIsLoading","sGetSelectedShowDescription","DEFAULT_STATE_VISUALIZATIONS","isEmpty","p","sGetVisualization","visualizations","sGetVisualizationsRoot","acAddVisualization","onError","error","console","log","getDashboardItemsFields","withFavorite","getDashboardFields","apiFetchDashboard","models","catch","apiStarDashboard","isStarred","url","post","delete","apiDeleteDashboard","sGetMessagesRoot","messages","getMessages","DEFAULT_STATE_SNACKBAR","message","duration","open","acCloseSnackbar","loadingDashboardMsg","SnackbarMessageContent","react_default","a","createElement","style","fontWeight","connect","_sGetSnackbar","snackbar","sGetSnackbar","snackbarOpen","snackbarMessage","snackbarDuration","onCloseSnackbar","props","Snackbar_default","zIndex","SnackbarMessage_SnackbarMessageContent","autoHideDuration","onClose","acSetSelectedId","acSetSelectedIsLoading","tLoadDashboard","asyncToGenerator","regenerator_default","mark","_callee","dispatch","dash","wrap","_context","prev","next","sent","acAppendDashboards","abrupt","Promise","resolve","t0","stop","_x","apply","this","tSetSelectedDashboardById","_callee2","getState","snackbarTimeout","onSuccess","_context2","setTimeout","dashboardName","customDashboard","acSetDashboardItems","withShape","localStorage","setItem","forEach","MAP","EVENT_REPORT","EVENT_CHART","extractFavorite","MESSAGES","messageConversations","clearTimeout","_x2","_x3","DEFAULT_STATE_EDIT_DASHBOARD","NEW_DASHBOARD_STATE","sGetEditDashboardRoot","editDashboard","sGetIsEditing","sGetEditDashboardItems","DEFAULT_STATE_EDIT_ITEM_FILTERS","sGetEditItemFiltersRoot","editItemFilters","DEFAULT_STATE_ITEM_FILTERS","sGetItemFiltersRoot","itemFilters","sGetFiltersKeys","keys","acRemoveItemFilter","acRemoveEditItemFilter","saveDashboard","assign","width","w","height","h","save","msg","response","uid","updateDashboard","postDashboard","create","acAddDashboardItem","itemPropName","itemTypeMap","propName","generateUid","content","NEW_ITEM_SHAPE","acUpdateDashboardItem","acRemoveDashboardItem","acSetDashboardStarred","tFetchDashboards","collection","paging","toArray","userRows","sGetControlBarUserRows","controlBar","sGetControlBarRoot","KEY","hasNamespace","currentUser","dataStore","has","getNamespace","apiGetControlBarRows","_callee3","namespace","_context3","t1","t2","find","key","apiPostControlBarRows","_callee4","rows","_context4","set","_x4","_x5","acSetControlBarUserRows","DEFAULT_DIMENSIONS","getDimensionById","DIMENSION_ID_PERIOD","DIMENSION_ID_ORGUNIT","sGetDimensions","dimensions","DEFAULT_SETTINGS","keyDateFormat","keyAnalysisRelativePeriod","keyAnalysisDigitGroupSeparator","displayNameProperty","rootOrganisationUnit","sGetSettings","settings","sGetSettingsDisplayNameProperty","acSetDimensions","styles","showMore","color","colors","grey700","cursor","fontSize","paddingTop","&:hover","textDecoration","disabled","grey500","withStyles","onClick","isMaxHeight","classes","textAlign","className","i18n","t","MIN_ROW_COUNT","getRowsHeight","getNumRowsFromHeight","Math","floor","FIRST_ROW_PADDING_HEIGHT","getTopOffset","getControlBarHeight","ControlBar","_this","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","onStartDrag","setState","dragging","window","addEventListener","onDrag","onEndDrag","event","preventDefault","stopPropagation","newHeight","clientY","onChangeHeight","requestAnimationFrame","removeEventListener","draghandle","onMouseDown","max","rootStyle","top","backgroundColor","editMode","yellow050","white","paddingBottom","transition","root","children","renderDragHandle","React","Component","defaultProps","StarIcon","xmlns","viewBox","fill","apiPostDataStatistics","eventType","chip","margin","grey600","display","verticalAlign","icon","marginTop","unselected","chipProps","selectedState","Star","Link","to","debounce","lib","AddCircleIcon","teal600","ClearIcon","grey800","ClearButton","onClear","button","Clear","ownerData","DEFAULT_STATE_DASHBOARDS_FILTER_NAME","DEFAULT_STATE_DASHBOARDS_FILTER_OWNER","order","sGetDashboardsFilterRoot","dashboardsFilter","sGetFilterName","KEYCODE_ENTER","KEYCODE_ESCAPE","filterField","searchIcon","Filter","_Component","setFilterValue","onChangeName","target","handleKeyUp","keyCode","onKeypressEnter","inherits","createClass","nextProps","_this$props","startAdornment","InputAdornment_default","position","Search_default","endAdornment","ControlBar_ClearButton","Input_default","placeholder","onChange","onKeyUp","Function","prototype","MAX_ROW_COUNT","DashboardsBar","_getPrototypeOf2","_len","args","_key","setInitialDashboardState","adjustedHeight","newRows","newRowCount","min","onToggleMaxHeight","onSelectDashboard","history","push","selectedId","onChangeFilterName","rowCount","controlBarHeight","contentWrapperStyle","padding","overflowY","components_ControlBar_ControlBar","marginRight","AddCircle","ControlBar_Filter","ControlBar_DashboardItemChip","ControlBar_ShowMoreButton","mapDispatchToProps","withRouter","stateProps","dispatchProps","ownProps","displayDashboards","toLowerCase","includes","HeaderMenuItem","title","dense","LaunchIcon","LaunchLink","e","rel","href","Launch","InsertButton","ContentMenuItem","onInsert","visType","ItemIcon","getItemIcon","renderedItemIcon","visTypeIcons","ContentMenuItem_LaunchLink","ContentMenuItem_InsertButton","singleItems","header","TEXT","spacerContent","categorizedItems","USERS","REPORTS","RESOURCES","APP","listItemTypes","CategorizedMenuGroup","addItem","tAddListItemContent","newItem","toggleSeeMore","seeMore","onChangeItemsLimit","_this2","_this$props2","hasMore","react","ItemSelector_HeaderMenuItem","itemUrl","getItemUrl","context","ItemSelector_ContentMenuItem","contextTypes","PropTypes","isRequired","dashboardItem","listItemType","dashboardItemIndex","findIndex","category","addToDashboard","ItemSearchField","onFocus","ItemSelector","closeList","openList","_","fetchItems","anchorEl","currentTarget","setFilter","getCategorizedMenuGroups","itemType","endPointName","itemCount","getDefaultItemCount","allItems","maxOptions","ItemSelector_CategorizedMenuGroup","pluralTitle","getSinglesMenuGroups","ItemSelector_SinglesMenuGroup","getMenuGroups","queryString","add","Set","ItemSelector_ItemSearchField","Popover_default","anchorOrigin","horizontal","vertical","transformOrigin","PaperProps","disableAutoFocus","disableRestoreFocus","EditTitleBar","onChangeTitle","onChangeDescription","section","titleDescription","itemSelector","components_ItemSelector_ItemSelector","selectedDashboard","justifyContent","flex","clear","underline","&::before","borderBottom","&:hover::before","input","borderRadius","peId","ouId","FilterDialog","onConfirm","dimension","selectedItems","dialogId","commonProps","onSelect","onDeselect","onReorder","build","selectedPeriods","ouItems","dialogTitle","Dialog_default","maxWidth","disableEnforceFocus","dialogContent","DialogActions_default","kind","DEFAULT_STATE_ACTIVE_MODAL_DIMENSION","sGetActiveModalDimension","activeModalDimension","acSetActiveModalDimension","FilterSelector","openPanel","closePanel","closeDialog","clearActiveModalDimension","selectDimension","setActiveModalDimension","onSelectItems","dimensionId","setEditItemFilters","onDeselectItems","itemIdsToRemove","newList","removeEditItemFilter","onReorderItems","itemIds","oldList","reorderedList","saveFilter","filterItems","addItemFilter","removeItemFilter","theme","selectedDimensions","ArrowDropDown_default","Boolean","fontFamily","typography","onDimensionClick","selectedIds","ItemFilter_FilterDialog","filters","withTheme","Info","show","toggle","InfoOutlined_default","NO_DESCRIPTION","actions","alignItems","marginLeft","starIcon","textButton","minWidth","editLink","titleBar","titleBarIcon","ViewTitleBar","toggleSharingDialog","sharingDialogIsOpen","onStarClick","onInfoClick","titleStyle","userSelect","StarBorder","TitleBar_Info","update","manage","ItemFilter_FilterSelector","d2_ui_sharing_dialog_default","onRequestClose","tStarDashboard","black","TitleBar","edit","TitleBar_EditTitleBar","TitleBar_ViewTitleBar","DefaultPlugin","pluginCredentials","shouldPluginReload","prevProps","reloadAllowed","filtersChanged","vis","visualization","prevVis","visChanged","activeType","reloadPlugin","pluginManager","currentVis","useActiveType","credentials","getActiveType","auth","defaultHeaders","Authorization","getGridItemDomId","textDiv","DeleteItemButton","Delete_default","red500","actionButtons","itemId","Item_DeleteItemButton","ThreeDots","SpeechBubble","fillRule","transform","iconFill","ItemHeaderButtons","_useState","useState","_useState2","slicedToArray","setAnchorEl","onSelectActiveType","isTrackerType","isTrackerDomainType","onViewTable","handleClose","onViewChart","onViewMap","canViewAs","isSingleValue","isYearOverYear","interpretationMenuLabel","activeFooter","pluginIsAvailable","Fragment","small","secondary","icons_ThreeDots","active","InsertChart_default","ViewList_default","hasMapView","Public_default","Launch_default","appName","getAppName","getLink","icons_SpeechBubble","onToggleFooter","scrollContainer","line","border","grey100","ItemFooter","objectId","getId","d2_ui_interpretations_default","memoizeOne","fn","lastArgs","lastValue","every","arg","i","HEADER_HEIGHT","overflow","textOverflow","whiteSpace","fontStretch","lineHeight","applyFilters","visRows","visColumns","columns","visFilters","dimensionFound","dimensionObjects","Item","showFooter","configLoaded","getUniqueKey","uniqueId","getPluginComponent","getVisualizationConfig","getContentStyle","es_lib","forDashboard","mapViews","layer","VisualizationItem_DefaultPlugin","onToggleItemExpanded","contentRef","offsetHeight","originalHeight","createRef","_componentDidMount","onVisualizationLoaded","VisualizationItem_ItemHeaderButtons","Item_ItemHeader","ref","VisualizationItem_ItemFooter","acSetActiveVisualizationType","grey200","Line","PRIVATE","messageTypes","_messageTypes","listStyleType","paddingLeft","seeAll","marginBottom","sender","snippet","maxHeight","MessagesItem","getMessageHref","msgIdentifier","messageType","getMessageSender","latestMsg","getMessageItems","editClass","readClass","read","msgDate","document","location","messageCount","userSettings","widgets_Line","string","MessagesContainer","NotSupportedItem","NotInterested_default","align","DescriptionIcon","DeleteIcon","getItemTitle","ListItem","tRemoveListItemContent","contentItems","index","el","getContentItems","contentItem","Description","deleteButton","icons_Delete","grey900","newContent","textField","container","onChangeText","updatedItem","d2_ui_rich_text","onEdit","multiline","fullWidth","textDivStyle","viewItem","getIframeSrc","appDetails","iframeSrc","launchUrl","ouIds","ouPath","AppItem","appKey","system","installedApps","app","src","SpacerItem","GridItem","VisualizationItem","TextItem","getGridItem","NoContentMessage","ProgressiveLoadingContainer","shouldLoad","containerRef","shouldLoadHandler","bufferPx","bufferFactor","innerHeight","rect","getBoundingClientRect","bottom","removeHandler","checkShouldLoad","debounceMs","registerHandler","_this3","objectWithoutProperties","eventProps","pick","ItemGrid","expandedItems","clickedId","isExpanded","onRemoveItem","onLayoutChange","newLayout","acUpdateDashboardLayout","onResizeStop","layout","oldItem","onItemResize","isVisualizationType","pluginResize","onRemoveItemWrapper","widgets_NoContentMessage","expandedItem","hProp","minH","ITEM_MIN_HEIGHT","react_grid_layout_default","MARGIN","cols","getGridColumns","rowHeight","GRID_ROW_HEIGHT","innerWidth","compactType","GRID_COMPACT_TYPE","isDraggable","isResizable","draggableCancel","itemClassNames","Item_ProgressiveLoadingContainer","Item_Item_Item","validItems","hasShape","badgeContainer","badge","badgeRemove","FilterBadge","onRemove","count","FilterBar","onBadgeRemove","onBadgeClick","bar","FilterBar_FilterBadge","removeItemFIlter","filtersSelector","createSelector","arr","flexWrap","DashboardContent","components_TitleBar_TitleBar","components_FilterBar_FilterBar","components_ItemGrid_ItemGrid","Content","hasDashboardContent","dashboardsIsEmpty","Dashboard_DashboardContent","dashboardsLoaded","contentNotReady","ControlBar_DashboardsBar","Dashboard_DashboardVerticalOffset","ViewDashboard_Content","ConfirmDeleteDialog","onDeleteConfirmed","onContinueEditing","destructive","DialogTitle_default","DialogContent_default","DialogContentText_default","buttonBarStyle","EditBar","translationDialogIsOpen","dashboardModel","confirmDeleteDialogOpen","redirectUrl","onConfirmDelete","onSave","newId","onDiscard","onDiscardChanges","onDelete","onTranslationsSaved","translations","dbLocale","translation","property","onTranslate","fetchDashboardModel","toggleTranslationDialog","confirmDeleteDialog","deleteAccess","ControlBar_ConfirmDeleteDialog","translationDialog","d2_ui_translation_dialog_default","objectToTranslate","fieldsToTranslate","onTranslationSaved","onTranslationError","err","Redirect","updateAccess","discardBtnText","primary","sGetIsNewDashboard","dashboardToSave","tDeleteDashboard","acSetDashboardDisplayName","EditDashboard","initialized","initEditDashboard","setEditDashboard","getDashboardContent","EditDashboard_Content","ControlBar_EditBar","NewDashboard","setNewDashboard","Dashboard","setDashboard","match","params","selectDashboard","scrollToTop","scrollTo","mode","Dashboard_EditDashboard","Dashboard_NewDashboard","Dashboard_ViewDashboard","dashboardToSelect","preferredId","getItem","App","setCurrentUser","fetchDashboards","setControlBarRows","setDimensions","spacers","HeaderBar","HashRouter","Switch","Route","exact","path","render","components_Dashboard_Dashboard","components_SnackbarMessage_SnackbarMessage","childContextTypes","controlBarRows","displayNameProp","filteredDimensions","apiFetchDimensions","dim","dimensionType","dataDimensionType","tSetDimensions","moment","addResources","arTranslations","daTranslations","enTranslations","esTranslations","frTranslations","idTranslations","kmTranslations","loTranslations","myTranslations","prsTranslations","psTranslations","ptTranslations","pt_BRTranslations","ruTranslations","svTranslations","tetTranslations","tgTranslations","ukTranslations","urTranslations","viTranslations","zhTranslations","zh_CNTranslations","setDefaultNamespace","changeLanguage","objectClean","conversations","$merge","d2Object","keyUiLocale","authorities","newState","k","$unshift","idToRemove","$splice","stateItems","newStateItems","x","y","stateItem","si","$set","configureStore","middleware","thunk","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","createStore","reducer","applyMiddleware","configI18n","config","sources","manifest","isProd","getManifest","info","version","manifest_generated_at","process","activities","dhis","dhis2","apiVersion","headers","schemas","getUserSettings","d2Init","initializedD2","ReactDOM","build_es","es","store","createMuiTheme","dhis2theme","src_components_App","getElementById","init","itemTypeToExternalPlugin","_itemTypeToExternalPl","_home_travis_build_dhis2_dashboards_app_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_defineProperty__WEBPACK_IMPORTED_MODULE_3__","getPlugin","hasIntegratedPlugin","eventReport","eventChart","loadPlugin","plugin","load","loadingIndicator","getName","appUrl","_home_travis_build_dhis2_dashboards_app_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_asyncToGenerator__WEBPACK_IMPORTED_MODULE_2__","_home_travis_build_dhis2_dashboards_app_node_modules_babel_preset_react_app_node_modules_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default","_home_travis_build_dhis2_dashboards_app_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectSpread__WEBPACK_IMPORTED_MODULE_1__","fetch","fetchedFavorite","resize","unmount","originalType","extractedMapView","mv","VIS_TYPE_COLUMN","VIS_TYPE_PIVOT_TABLE","__webpack_require__","__webpack_exports__","d2_utilizr_lib_isFunction__WEBPACK_IMPORTED_MODULE_0__","d2_utilizr_lib_isFunction__WEBPACK_IMPORTED_MODULE_0___default","n","_modules_util__WEBPACK_IMPORTED_MODULE_1__","isNonNegativeInteger","Number","isInteger","itemWithShape","Error","col","row","itemWidth","itemHeight","getShape","round","getOriginalHeight","querySelector","isFunction","setViewportSize","clientWidth","clientHeight","domainType","defaultItemCount","_itemTypeMap","_home_travis_build_dhis2_dashboards_app_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_defineProperty__WEBPACK_IMPORTED_MODULE_0__","TableIcon","ChartIcon","MapIcon","ExtensionIcon","PersonIcon","FontDownloadIcon","EmailIcon","CropFreeIcon","NotInterestedIcon"],"mappings":"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","file":"static/js/main.0ab307ec.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"showMoreButton\":\"CategorizedMenuGroup_showMoreButton__3-0Wa\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"deleteItemButton\":\"DeleteItemButton_deleteItemButton__4YLrM\"};","import { getInstance } from 'd2';\nimport arrayClean from 'd2-utilizr/lib/arrayClean';\n\nimport { getEndPointName } from '../modules/itemTypes';\n\n// Id, name\nexport const getIdNameFields = ({ rename } = {}) => [\n    'id',\n    `${rename ? 'displayName~rename(name)' : 'name,displayName'}`,\n];\n\n// Item\nexport const getItemFields = () => [\n    'dimensionItem~rename(id)',\n    'displayName~rename(name)',\n    'dimensionItemType',\n];\n\n// Dimension\nexport const getDimensionFields = ({ withItems }) =>\n    arrayClean([\n        'dimension',\n        'legendSet[id]',\n        'filter',\n        'programStage',\n        withItems ? `items[${getItemFields().join(',')}]` : ``,\n    ]);\n\n// Axis\nexport const getAxesFields = ({ withItems }) => [\n    `columns[${getDimensionFields({ withItems }).join(',')}]`,\n    `rows[${getDimensionFields({ withItems }).join(',')}]`,\n    `filters[${getDimensionFields({ withItems }).join(',')}]`,\n];\n\n// Favorite\nexport const getFavoriteFields = ({ withDimensions, withOptions }) => {\n    return arrayClean([\n        `${getIdNameFields({ rename: true }).join(',')}`,\n        'displayDescription~rename(description)',\n        withDimensions ? `${getAxesFields({ withItems: true }).join(',')}` : ``,\n        withOptions\n            ? [\n                  '*',\n                  '!attributeDimensions',\n                  '!attributeValues',\n                  '!category',\n                  '!categoryDimensions',\n                  '!categoryOptionGroupSetDimensions',\n                  '!columnDimensions',\n                  '!dataDimensionItems',\n                  '!dataElementDimensions',\n                  '!dataElementGroupSetDimensions',\n                  '!filterDimensions',\n                  '!itemOrganisationUnitGroups',\n                  '!lastUpdatedBy',\n                  '!organisationUnitGroupSetDimensions',\n                  '!organisationUnitLevels',\n                  '!organisationUnits',\n                  '!programIndicatorDimensions',\n                  '!relativePeriods',\n                  '!reportParams',\n                  '!rowDimensions',\n                  '!series',\n                  '!translations',\n                  '!userOrganisationUnit',\n                  '!userOrganisationUnitChildren',\n                  '!userOrganisationUnitGrandChildren',\n              ].join(',')\n            : '',\n    ]);\n};\n\nexport const getFavoritesFields = ({ withDimensions }) => [\n    `reportTable[${getFavoriteFields({ withDimensions }).join(',')}]`,\n    `chart[${['type', ...getFavoriteFields({ withDimensions })].join(',')}]`,\n    `map[${getFavoriteFields({ withDimensions }).join(',')}]`,\n    `eventReport[${getFavoriteFields({ withDimensions }).join(',')}]`,\n    `eventChart[${getFavoriteFields({ withDimensions }).join(',')}]`,\n];\n\n// List item\nexport const getListItemFields = () => [\n    `reports[${getIdNameFields({ rename: true }).join(',')}]`,\n    `resources[${getIdNameFields({ rename: true }).join(',')}]`,\n    `users[${getIdNameFields({ rename: true }).join(',')}]`,\n];\n\n// Map\nexport const getMapFields = () => [\n    `${getIdNameFields({ rename: true }).join(',')}`,\n    'user,longitude,latitude,zoom,basemap',\n    `mapViews[${getFavoriteFields({\n        withDimensions: true,\n        withOptions: true,\n    })}]`,\n];\n\n// Api\n\n// Get more info about the favorite of a dashboard item\nexport const apiFetchFavorite = (id, type, { fields }) =>\n    getInstance().then(d2 =>\n        d2.Api.getApi().get(`${getEndPointName(type)}/${id}`, {\n            fields:\n                fields ||\n                getFavoriteFields({\n                    withDimensions: true,\n                    withOptions: true,\n                }),\n        })\n    );\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"Item_list__2oHc1\",\"item\":\"Item_item__lO40M\",\"itemicon\":\"Item_itemicon__dv5ah\",\"link\":\"Item_link__2gULT\",\"deleteicon\":\"Item_deleteicon__3c7bl\",\"deletebutton\":\"Item_deletebutton__1DfY5\"};","import isObject from 'lodash/isObject';\n\n// validation\nexport function orNull(param) {\n    return param === undefined ? null : param;\n}\n\nexport function orArray(param) {\n    return Array.isArray(param) ? param : [];\n}\n\nexport function orObject(param) {\n    return isObject(param) ? param : {};\n}\n\n// array\nexport function arrayGetById(array, id) {\n    return array.find(item => item.id === id);\n}\n\n// object\nexport function arrayToIdMap(array) {\n    return array.reduce((obj, item) => {\n        obj[item.id] = item;\n        return obj;\n    }, {});\n}\n\n// date\nexport function getDate() {\n    const y = Math.floor(Math.random() * 3) + 2015;\n    const M = Math.floor(Math.random() * 12) + 1;\n    const d = Math.floor(Math.random() * 28) + 1;\n    // const h = Math.floor(Math.random() * 23) + 1;\n    // const m = Math.floor(Math.random() * 59) + 1;\n    // const s = Math.floor(Math.random() * 59) + 1;\n\n    return new Date(`${y}-${M}-${d}`)\n        .toJSON()\n        .replace('T', ' ')\n        .substr(0, 10);\n}\n\nexport const formatDate = (value, uiLocale) => {\n    if (typeof global.Intl !== 'undefined' && Intl.DateTimeFormat) {\n        const locale = uiLocale || 'en';\n        return new Intl.DateTimeFormat(locale, {\n            year: 'numeric',\n            month: 'short',\n            day: 'numeric',\n        }).format(new Date(value));\n    }\n\n    return value.substr(0, 19).replace('T', ' ');\n};\n\n/**\n * Sorts an array of objects based on provided date property\n *\n * @param {Array} items Array of objects\n * @param {String} dateProp Name of the date property to be used for sorting\n * @param {Boolean} ascending Whether to sort ascending or descending\n */\nexport const sortByDate = (items, dateProp, ascending = true) => {\n    const values = Object.values(items);\n\n    values.sort((a, b) => {\n        const aDate = new Date(a[dateProp]);\n        const bDate = new Date(b[dateProp]);\n\n        return ascending ? aDate - bDate : bDate - aDate;\n    });\n\n    return values;\n};\n\n// reducer validator\nexport const validateReducer = (value, defaultValue) =>\n    value === undefined || value === null ? defaultValue : value;\n\nexport const getBaseUrl = d2 => {\n    const api = d2.Api.getApi();\n    const idx = api.baseUrl.indexOf('/api');\n    return idx > -1 ? api.baseUrl.slice(0, idx) : api.baseUrl;\n};\n\nexport const getWithoutId = object => ({\n    ...object,\n    id: undefined,\n});\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"leftControls\":\"DashboardsBar_leftControls__2kr14\",\"rightControls\":\"DashboardsBar_rightControls__2l1lT\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"menuItem\":\"ContentMenuItem_menuItem__2DIcB\",\"launchLink\":\"ContentMenuItem_launchLink__MRANR\",\"label\":\"ContentMenuItem_label__2pIfq\",\"buttonInsert\":\"ContentMenuItem_buttonInsert__1GlZy\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"itemWrap\":\"ItemHeader_itemWrap__3gJiQ\",\"itemHeaderWrap\":\"ItemHeader_itemHeaderWrap__xEKwZ\",\"itemTitle\":\"ItemHeader_itemTitle__3LmXp\",\"itemActionsWrap\":\"ItemHeader_itemActionsWrap__1U5Ex\"};","export const RECEIVED_USER = 'RECEIVED_USER';\n\nexport const DEFAULT_STATE_USER = {\n    id: '',\n    username: '',\n    uiLocale: '',\n    isSuperuser: false,\n};\n\nexport default (state = DEFAULT_STATE_USER, action) => {\n    switch (action.type) {\n        case RECEIVED_USER: {\n            return fromD2ToUserObj(action.value);\n        }\n        default:\n            return state;\n    }\n};\n\nfunction fromD2ToUserObj(d2Object) {\n    return {\n        id: d2Object.id,\n        username: d2Object.username,\n        uiLocale: d2Object.settings.keyUiLocale,\n        isSuperuser: d2Object.authorities.has('ALL'),\n    };\n}\n\n// selectors\n\nexport const sGetUserId = state => state.user.id;\nexport const sGetUserUsername = state => state.user.username;\nexport const sGetIsSuperuser = state => state.user.isSuperuser;\nexport const sGetUiLocale = state => state.user.uiLocale;\n","/** @module reducers/dashboards */\n\nimport arrayFrom from 'd2-utilizr/lib/arrayFrom';\nimport arraySort from 'd2-utilizr/lib/arraySort';\n\nimport { orArray, orObject } from '../modules/util';\nimport {\n    SPACER,\n    isSpacerType,\n    isTextType,\n    emptyTextItemContent,\n    REPORT_TABLE,\n    CHART,\n    VISUALIZATION,\n} from '../modules/itemTypes';\n\nexport const SET_DASHBOARDS = 'SET_DASHBOARDS';\nexport const ADD_DASHBOARDS = 'ADD_DASHBOARDS';\nexport const SET_DASHBOARD_STARRED = 'SET_DASHBOARD_STARRED';\nexport const SET_DASHBOARD_DISPLAY_NAME = 'SET_DASHBOARD_DISPLAY_NAME';\nexport const SET_DASHBOARD_ITEMS = 'SET_DASHBOARD_ITEMS';\n\nexport const DEFAULT_STATE_DASHBOARDS = {\n    byId: null,\n    items: [],\n};\n\n// reducer helper functions\n\nconst updateDashboardProp = ({ state, dashboardId, prop, value }) => ({\n    byId: {\n        ...state.byId,\n        [dashboardId]: {\n            ...state.byId[dashboardId],\n            [prop]: value,\n        },\n    },\n    items: state.items,\n});\n\n/**\n * Reducer that computes and returns the new state based on the given action\n * @function\n * @param {Object} state The current state\n * @param {Object} action The action to be evaluated\n * @returns {Object}\n */\nexport default (state = DEFAULT_STATE_DASHBOARDS, action) => {\n    switch (action.type) {\n        case SET_DASHBOARDS: {\n            return {\n                byId: action.value,\n                items: [],\n            };\n        }\n        case ADD_DASHBOARDS: {\n            return {\n                ...state,\n                byId: {\n                    ...state.byId,\n                    ...action.value,\n                },\n            };\n        }\n        case SET_DASHBOARD_STARRED: {\n            return updateDashboardProp({\n                state,\n                dashboardId: action.dashboardId,\n                prop: 'starred',\n                value: action.value,\n            });\n        }\n        case SET_DASHBOARD_DISPLAY_NAME: {\n            return updateDashboardProp({\n                state,\n                dashboardId: action.dashboardId,\n                prop: 'displayName',\n                value: action.value,\n            });\n        }\n        case SET_DASHBOARD_ITEMS: {\n            return {\n                ...state,\n                items: action.value,\n            };\n        }\n        default:\n            return state;\n    }\n};\n\n// root selector\n\nexport const sGetDashboardsRoot = state => state.dashboards;\n\n// selector level 1\n\n/**\n * Selector which returns a dashboard by id from the state object\n * If no matching dashboard is found it returns undefined\n * If dashboards.byId is null, then the dashboards api request\n * has not yet completed. If dashboards.byId is an empty object\n * then the dashboards api request is complete, but no dashboards\n * were returned\n *\n * @function\n * @param {Object} state The current state\n * @param {Number} id The id of the dashboard\n * @returns {Object | undefined}\n */\nexport const sGetDashboardById = (state, id) =>\n    orObject(sGetDashboardsRoot(state).byId)[id];\n\nexport const sDashboardsIsFetching = state => {\n    return sGetDashboardsRoot(state).byId === null;\n};\n\n/**\n * Selector which returns all dashboards (the byId object)\n *\n * @function\n * @param {Object} state The current state\n * @returns {Object | undefined}\n */\nexport const sGetAllDashboards = state =>\n    orObject(sGetDashboardsRoot(state).byId);\n\n/**\n * Selector which returns the current dashboard items\n *\n * @function\n * @param {Object} state The current state\n * @returns {Array}\n */\nexport const sGetDashboardItems = state => sGetDashboardsRoot(state).items;\n\n// selector level 2\n\nexport const sGetStarredDashboards = state =>\n    Object.values(sGetAllDashboards(state)).filter(\n        dashboard => dashboard.starred === true\n    );\n\nexport const sGetUnstarredDashboards = state =>\n    Object.values(sGetAllDashboards(state)).filter(\n        dashboard => dashboard.starred === false\n    );\n\n// selector level 3\n\nexport const sGetStarredDashboardIds = state => {\n    return sGetStarredDashboards(state).map(dashboard => dashboard.id);\n};\n\nexport const sGetUnstarredDashboardIds = state =>\n    sGetUnstarredDashboards(state).map(dashboard => dashboard.id);\n\nexport const sGetDashboardsSortedByStarred = state => [\n    ...arraySort(sGetStarredDashboards(state), 'ASC', 'displayName'),\n    ...arraySort(sGetUnstarredDashboards(state), 'ASC', 'displayName'),\n];\n\n// utils\n\n/**\n * Returns the array of dashboards, customized for ui\n * @function\n * @param {Array} data The original dashboard list\n * @returns {Array}\n */\nexport const getCustomDashboards = data => {\n    const uiItems = items =>\n        items.map(item => {\n            let type = isSpacerType(item) ? SPACER : item.type;\n\n            // TODO: temporary fix before 2.34 epic branch is merged\n            // if \"VISUALIZATION\", reset to \"REPORT_TABLE\" or \"CHART\"\n            if (type === VISUALIZATION) {\n                type = item.reportTable\n                    ? REPORT_TABLE\n                    : item.chart\n                    ? CHART\n                    : type;\n            }\n\n            const text = isTextType(item)\n                ? item.text === emptyTextItemContent\n                    ? ''\n                    : item.text\n                : null;\n\n            return {\n                ...item,\n                ...(text !== null ? { text } : {}),\n                type,\n            };\n        });\n\n    return arrayFrom(data).map(d => ({\n        id: d.id,\n        name: d.name,\n        displayName: d.displayName,\n        description: d.description,\n        displayDescription: d.displayDescription,\n        starred: d.favorite,\n        owner: d.user.name,\n        created: d.created\n            .split('T')\n            .join(' ')\n            .substr(0, 16),\n        lastUpdated: d.lastUpdated\n            .split('T')\n            .join(' ')\n            .substr(0, 16),\n        access: d.access,\n        numberOfItems: orArray(d.dashboardItems).length,\n        dashboardItems: uiItems(d.dashboardItems),\n    }));\n};\n","/** @module reducers/selected */\nimport { combineReducers } from 'redux';\n\nimport { validateReducer } from '../modules/util';\n\nexport const SET_SELECTED_ID = 'SET_SELECTED_ID';\nexport const SET_SELECTED_ISLOADING = 'SET_SELECTED_ISLOADING';\nexport const SET_SELECTED_SHOWDESCRIPTION = 'SET_SELECTED_SHOWDESCRIPTION';\n\nexport const DEFAULT_STATE_SELECTED_ID = null;\nexport const DEFAULT_STATE_SELECTED_ISLOADING = false;\nexport const DEFAULT_STATE_SELECTED_SHOWDESCRIPTION = false;\n\n/**\n * Reducer functions that computes and returns the new state based on the given action\n * @function\n * @param {Object} state The current state\n * @param {Object} action The action to be evaluated\n */\nconst id = (state = DEFAULT_STATE_SELECTED_ID, action) => {\n    switch (action.type) {\n        case SET_SELECTED_ID:\n            return validateReducer(action.value, DEFAULT_STATE_SELECTED_ID);\n        default:\n            return state;\n    }\n};\n\nconst isLoading = (state = DEFAULT_STATE_SELECTED_ISLOADING, action) => {\n    switch (action.type) {\n        case SET_SELECTED_ISLOADING:\n            return validateReducer(\n                action.value,\n                DEFAULT_STATE_SELECTED_ISLOADING\n            );\n        default:\n            return state;\n    }\n};\n\nconst showDescription = (\n    state = DEFAULT_STATE_SELECTED_SHOWDESCRIPTION,\n    action\n) => {\n    switch (action.type) {\n        case SET_SELECTED_SHOWDESCRIPTION:\n            return validateReducer(\n                action.value,\n                DEFAULT_STATE_SELECTED_SHOWDESCRIPTION\n            );\n        default:\n            return state;\n    }\n};\n\nexport default combineReducers({\n    id,\n    isLoading,\n    showDescription,\n});\n\n// Selectors\n\nexport const sGetSelectedRoot = state => state.selected;\n\nexport const sGetSelectedId = state => sGetSelectedRoot(state).id;\n\nexport const sGetSelectedIsLoading = state => sGetSelectedRoot(state).isLoading;\n\nexport const sGetSelectedShowDescription = state =>\n    sGetSelectedRoot(state).showDescription;\n","import { orObject } from '../modules/util';\nimport objectClean from 'd2-utilizr/lib/objectClean';\n\n/** @module reducers/visualizations */\n\nexport const ADD_VISUALIZATION = 'ADD_VISUALIZATION';\nexport const SET_ACTIVE_VISUALIZATION_TYPE = 'SET_ACTIVE_VISUALIZATION_TYPE';\n\nexport const DEFAULT_STATE_VISUALIZATIONS = {};\n\nconst isEmpty = p => p === undefined || p === null;\n\nexport default (state = DEFAULT_STATE_VISUALIZATIONS, action) => {\n    switch (action.type) {\n        case ADD_VISUALIZATION: {\n            return {\n                ...state,\n                [action.value.id]: objectClean(\n                    {\n                        ...orObject(state[action.value.id]),\n                        ...action.value,\n                    },\n                    isEmpty\n                ),\n            };\n        }\n        case SET_ACTIVE_VISUALIZATION_TYPE: {\n            return {\n                ...state,\n                [action.id]: objectClean(\n                    {\n                        ...orObject(state[action.id]),\n                        activeType: action.activeType,\n                    },\n                    isEmpty\n                ),\n            };\n        }\n        default:\n            return state;\n    }\n};\n\n// root selector\nexport const sGetVisualizationsRoot = state => state.visualizations;\n\n// selectors level 1\nexport const sGetVisualization = (state, id) => {\n    return sGetVisualizationsRoot(state)[id];\n};\n","import {\n    ADD_VISUALIZATION,\n    SET_ACTIVE_VISUALIZATION_TYPE,\n} from '../reducers/visualizations';\n\nexport const acAddVisualization = value => ({\n    type: ADD_VISUALIZATION,\n    value,\n});\n\nexport const acSetActiveVisualizationType = (id, activeType) => {\n    const action = {\n        type: SET_ACTIVE_VISUALIZATION_TYPE,\n        id,\n        activeType,\n    };\n\n    return action;\n};\n","import arrayClean from 'd2-utilizr/lib/arrayClean';\nimport {\n    getListItemFields,\n    getFavoritesFields,\n    getIdNameFields,\n} from './metadata';\n\n// Helper functions\n\nexport const onError = error => console.log('Error: ', error);\n\n// Dashboard item\nexport const getDashboardItemsFields = ({ withFavorite } = {}) =>\n    arrayClean([\n        'id',\n        'type',\n        'shape',\n        'x',\n        'y',\n        'width~rename(w)',\n        'height~rename(h)',\n        'messages',\n        'text',\n        'appKey',\n        `${getListItemFields().join(',')}`,\n        withFavorite\n            ? `${getFavoritesFields({\n                  withDimensions: withFavorite.withDimensions,\n              }).join(',')}`\n            : ``,\n    ]);\n\n// Dashboard\nexport const getDashboardFields = ({ withItems, withFavorite } = {}) =>\n    arrayClean([\n        `${getIdNameFields().join(',')}`,\n        'description',\n        'displayDescription',\n        'favorite',\n        `user[${getIdNameFields({ rename: true }).join(',')}]`,\n        'created',\n        'lastUpdated',\n        'access',\n        withItems\n            ? `dashboardItems[${getDashboardItemsFields({\n                  withFavorite,\n              }).join(',')}]`\n            : ``,\n    ]);\n","import { getInstance } from 'd2';\nimport arrayClean from 'd2-utilizr/lib/arrayClean';\nimport { onError, getDashboardFields } from './index';\n\n// Get \"all\" dashboards on startup\nexport const apiFetchDashboards = () =>\n    getInstance()\n        .then(d2 =>\n            d2.models.dashboard.list({\n                fields: [\n                    getDashboardFields().join(','),\n                    'dashboardItems[id]',\n                ].join(','),\n                paging: 'false',\n            })\n        )\n        .catch(onError);\n\n// Get more info about selected dashboard\nexport const apiFetchDashboard = id =>\n    getInstance()\n        .then(d2 =>\n            d2.models.dashboard.get(id, {\n                fields: arrayClean(\n                    getDashboardFields({\n                        withItems: true,\n                        withFavorite: { withDimensions: false },\n                    })\n                ).join(','),\n            })\n        )\n        .catch(onError);\n\n// Star dashboard\nexport const apiStarDashboard = (id, isStarred) => {\n    const url = `dashboards/${id}/favorite`;\n\n    getInstance().then(d2 => {\n        if (isStarred) {\n            d2.Api.getApi().post(url);\n        } else {\n            d2.Api.getApi().delete(url);\n        }\n    });\n};\n\nexport const apiDeleteDashboard = id => {\n    return getInstance()\n        .then(d2 => {\n            return d2.models.dashboards\n                .get(id)\n                .then(dashboard => dashboard.delete());\n        })\n        .catch(onError);\n};\n","import update from 'immutability-helper';\nimport { arrayToIdMap } from '../modules/util';\n\nexport const RECEIVED_MESSAGES = 'RECEIVED_MESSAGES';\n\nexport default (state = {}, action) => {\n    switch (action.type) {\n        case RECEIVED_MESSAGES: {\n            const conversations = arrayToIdMap(action.value);\n\n            const newState = update(state, { $merge: conversations });\n\n            return newState;\n        }\n        default:\n            return state;\n    }\n};\n\n// selectors\n\nexport const sGetMessagesRoot = state => state.messages;\n","import { getInstance } from 'd2';\n\nexport const getMessages = () => {\n    const fields =\n        'id,messageCount,lastUpdated,messageType,displayName,read,messages[id,read,sender[id,displayName],text,lastUpdated]';\n    const url = `/messageConversations?fields=${fields}&order=read:asc&pageSize=200`;\n    return getInstance()\n        .then(d2 => d2.Api.getApi().get(url))\n        .catch(error => console.log('Error:', error));\n};\n","export const RECEIVED_SNACKBAR_MESSAGE = 'RECEIVED_SNACKBAR_MESSAGE';\nexport const CLOSE_SNACKBAR = 'CLOSE_SNACKBAR';\n\nexport const DEFAULT_STATE_SNACKBAR = {\n    message: {},\n    duration: null,\n    open: false,\n};\n\nexport default (state = DEFAULT_STATE_SNACKBAR, action) => {\n    switch (action.type) {\n        case RECEIVED_SNACKBAR_MESSAGE: {\n            return { ...state, ...action.value };\n        }\n        case CLOSE_SNACKBAR: {\n            return DEFAULT_STATE_SNACKBAR;\n        }\n        default:\n            return state;\n    }\n};\n\n// selectors\n\nexport const sGetSnackbar = state => state.snackbar || DEFAULT_STATE_SNACKBAR;\n","import {\n    RECEIVED_SNACKBAR_MESSAGE,\n    CLOSE_SNACKBAR,\n} from '../reducers/snackbar';\n\nexport const acReceivedSnackbarMessage = value => ({\n    type: RECEIVED_SNACKBAR_MESSAGE,\n    value,\n});\n\nexport const acCloseSnackbar = () => ({\n    type: CLOSE_SNACKBAR,\n});\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport Snackbar from '@material-ui/core/Snackbar';\nimport PropTypes from 'prop-types';\n\nimport { sGetSnackbar } from '../../reducers/snackbar';\nimport { acCloseSnackbar } from '../../actions/snackbar';\n\nconst LOADING_DASHBOARD = 'LOADING_DASHBOARD';\nexport const loadingDashboardMsg = { name: '', type: LOADING_DASHBOARD };\n\nconst SnackbarMessageContent = ({ message }) => {\n    if (typeof message === 'object') {\n        //future message types:  switch(message.type)\n        return (\n            <span>\n                Loading <span style={{ fontWeight: 800 }}>{message.name}</span>{' '}\n                dashboard\n            </span>\n        );\n    }\n    return message;\n};\n\nexport const SnackbarMessage = props => {\n    return (\n        <Snackbar\n            style={{ zIndex: 10001 }}\n            open={props.snackbarOpen}\n            message={<SnackbarMessageContent message={props.snackbarMessage} />}\n            autoHideDuration={props.snackbarDuration}\n            onClose={props.onCloseSnackbar}\n        />\n    );\n};\n\nconst mapStateToProps = state => {\n    const { message, duration, open } = sGetSnackbar(state);\n    return {\n        snackbarOpen: open,\n        snackbarMessage: message,\n        snackbarDuration: duration,\n    };\n};\n\nSnackbarMessage.propTypes = {\n    snackbarDuration: PropTypes.string,\n    snackbarMessage: PropTypes.object,\n    snackbarOpen: PropTypes.bool,\n    onCloseSnackbar: PropTypes.func,\n};\n\nexport default connect(\n    mapStateToProps,\n    {\n        onCloseSnackbar: acCloseSnackbar,\n    }\n)(SnackbarMessage);\n","import {\n    SET_SELECTED_ID,\n    SET_SELECTED_ISLOADING,\n    SET_SELECTED_SHOWDESCRIPTION,\n} from '../reducers/selected';\nimport { acAddVisualization } from '../actions/visualizations';\nimport { sGetSelectedIsLoading } from '../reducers/selected';\nimport { sGetUserUsername } from '../reducers/user';\nimport { getCustomDashboards, sGetDashboardById } from '../reducers/dashboards';\nimport { apiFetchDashboard } from '../api/dashboards';\nimport { acSetDashboardItems, acAppendDashboards } from './dashboards';\nimport { withShape } from '../components/ItemGrid/gridUtil';\nimport { tGetMessages } from '../components/Item/MessagesItem/actions';\nimport { acReceivedSnackbarMessage, acCloseSnackbar } from './snackbar';\nimport { storePreferredDashboardId } from '../api/localStorage';\nimport { loadingDashboardMsg } from '../components/SnackbarMessage/SnackbarMessage';\nimport {\n    REPORT_TABLE,\n    CHART,\n    MAP,\n    EVENT_REPORT,\n    EVENT_CHART,\n    MESSAGES,\n} from '../modules/itemTypes';\nimport { extractFavorite } from '../components/Item/VisualizationItem/plugin';\nimport { orObject } from '../modules/util';\n\n// actions\n\nexport const acSetSelectedId = value => ({\n    type: SET_SELECTED_ID,\n    value,\n});\n\nexport const acSetSelectedIsLoading = value => ({\n    type: SET_SELECTED_ISLOADING,\n    value,\n});\n\nexport const acSetSelectedShowDescription = value => ({\n    type: SET_SELECTED_SHOWDESCRIPTION,\n    value,\n});\n\nexport const tLoadDashboard = id => async dispatch => {\n    try {\n        const dash = await apiFetchDashboard(id);\n        dispatch(acAppendDashboards(dash));\n\n        return Promise.resolve(dash);\n    } catch (err) {\n        console.log('Error: ', err);\n        return err;\n    }\n};\n\n// thunks\nexport const tSetSelectedDashboardById = id => async (dispatch, getState) => {\n    dispatch(acSetSelectedIsLoading(true));\n\n    const snackbarTimeout = setTimeout(() => {\n        const dashboardName = orObject(sGetDashboardById(getState(), id))\n            .displayName;\n        if (sGetSelectedIsLoading(getState()) && dashboardName) {\n            loadingDashboardMsg.name = dashboardName;\n\n            dispatch(\n                acReceivedSnackbarMessage({\n                    message: loadingDashboardMsg,\n                    open: true,\n                })\n            );\n        }\n    }, 500);\n\n    const onSuccess = selected => {\n        const customDashboard = getCustomDashboards(selected)[0];\n\n        dispatch(\n            acSetDashboardItems(withShape(customDashboard.dashboardItems))\n        );\n\n        storePreferredDashboardId(sGetUserUsername(getState()), id);\n\n        // add visualizations to store\n        customDashboard.dashboardItems.forEach(item => {\n            switch (item.type) {\n                case REPORT_TABLE:\n                case CHART:\n                case MAP:\n                case EVENT_REPORT:\n                case EVENT_CHART:\n                    dispatch(acAddVisualization(extractFavorite(item)));\n                    break;\n                case MESSAGES:\n                    dispatch(tGetMessages(id));\n                    break;\n                default:\n                    break;\n            }\n        });\n\n        dispatch(acSetSelectedId(id));\n\n        dispatch(acSetSelectedIsLoading(false));\n\n        clearTimeout(snackbarTimeout);\n\n        dispatch(acCloseSnackbar());\n\n        return selected;\n    };\n\n    const onError = error => {\n        console.log('Error: ', error);\n        return error;\n    };\n\n    try {\n        const selected = await dispatch(tLoadDashboard(id));\n\n        return onSuccess(selected);\n    } catch (err) {\n        return onError(err);\n    }\n};\n","export const getPreferredDashboardId = username =>\n    localStorage.getItem(`dhis2.dashboard.current.${username}`) || undefined;\n\nexport const storePreferredDashboardId = (username, dashboardId) => {\n    localStorage.setItem(`dhis2.dashboard.current.${username}`, dashboardId);\n};\n","import { RECEIVED_MESSAGES } from '../../../reducers/messages';\nimport { getMessages } from '../../../api/messages';\n\nconst onError = (action, error) => {\n    console.log(`Error in action ${action}: ${error}`);\n    return error;\n};\n\nexport const receivedMessages = value => ({\n    type: RECEIVED_MESSAGES,\n    value,\n});\n\nexport const tGetMessages = () => async dispatch => {\n    try {\n        const messages = await getMessages();\n        const { messageConversations } = messages;\n\n        return dispatch(receivedMessages(messageConversations));\n    } catch (err) {\n        return onError('Get Messages', err);\n    }\n};\n","/** @module reducers/editDashboard */\nimport update from 'immutability-helper';\nimport isEmpty from 'lodash/isEmpty';\nimport { orArray, orObject } from '../modules/util';\n\nexport const RECEIVED_EDIT_DASHBOARD = 'RECEIVED_EDIT_DASHBOARD';\nexport const RECEIVED_NOT_EDITING = 'RECEIVED_NOT_EDITING';\nexport const START_NEW_DASHBOARD = 'START_NEW_DASHBOARD';\nexport const RECEIVED_TITLE = 'RECEIVED_TITLE';\nexport const RECEIVED_DESCRIPTION = 'RECEIVED_DESCRIPTION';\nexport const ADD_DASHBOARD_ITEM = 'ADD_DASHBOARD_ITEM';\nexport const REMOVE_DASHBOARD_ITEM = 'REMOVE_DASHBOARD_ITEM';\nexport const UPDATE_DASHBOARD_ITEM = 'UPDATE_DASHBOARD_ITEM';\nexport const RECEIVED_DASHBOARD_LAYOUT = 'RECEIVED_DASHBOARD_LAYOUT';\n\nexport const DEFAULT_STATE_EDIT_DASHBOARD = {};\nexport const NEW_DASHBOARD_STATE = {\n    id: '',\n    name: '',\n    access: {},\n    description: '',\n    dashboardItems: [],\n};\n\nexport default (state = DEFAULT_STATE_EDIT_DASHBOARD, action) => {\n    switch (action.type) {\n        case RECEIVED_EDIT_DASHBOARD: {\n            const newState = {};\n            Object.keys(NEW_DASHBOARD_STATE).map(\n                k => (newState[k] = action.value[k])\n            );\n            return newState;\n        }\n        case RECEIVED_NOT_EDITING:\n            return DEFAULT_STATE_EDIT_DASHBOARD;\n        case START_NEW_DASHBOARD:\n            return NEW_DASHBOARD_STATE;\n        case RECEIVED_TITLE: {\n            return Object.assign({}, state, { name: action.value });\n        }\n        case RECEIVED_DESCRIPTION: {\n            return Object.assign({}, state, {\n                description: action.value,\n            });\n        }\n        case ADD_DASHBOARD_ITEM:\n            return update(state, {\n                dashboardItems: { $unshift: [action.value] },\n            });\n        case REMOVE_DASHBOARD_ITEM: {\n            const idToRemove = action.value;\n\n            const dashboardItemIndex = state.dashboardItems.findIndex(\n                item => item.id === idToRemove\n            );\n\n            if (dashboardItemIndex > -1) {\n                return update(state, {\n                    dashboardItems: {\n                        $splice: [[dashboardItemIndex, 1]],\n                    },\n                });\n            }\n\n            return state;\n        }\n        case RECEIVED_DASHBOARD_LAYOUT: {\n            const stateItems = orArray(state.dashboardItems);\n\n            const newStateItems = action.value.map(({ x, y, w, h, i }) => {\n                const stateItem = stateItems.find(si => si.id === i);\n\n                return Object.assign({}, stateItem, { w, h, x, y });\n            });\n\n            return update(state, {\n                dashboardItems: { $set: newStateItems },\n            });\n        }\n        case UPDATE_DASHBOARD_ITEM: {\n            const dashboardItem = action.value;\n\n            const dashboardItemIndex = state.dashboardItems.findIndex(\n                item => item.id === dashboardItem.id\n            );\n\n            if (dashboardItemIndex > -1) {\n                const newState = update(state, {\n                    dashboardItems: {\n                        $splice: [[dashboardItemIndex, 1, dashboardItem]],\n                    },\n                });\n\n                return newState;\n            }\n\n            return state;\n        }\n        default:\n            return state;\n    }\n};\n\n// root selector\n\nexport const sGetEditDashboardRoot = state => state.editDashboard;\n\n// selectors\n\nexport const sGetIsEditing = state => !isEmpty(state.editDashboard);\n\nexport const sGetIsNewDashboard = state => {\n    return (\n        !isEmpty(state.editDashboard) && sGetEditDashboardRoot(state).id === ''\n    );\n};\n\nexport const sGetEditDashboardItems = state =>\n    orObject(sGetEditDashboardRoot(state)).dashboardItems;\n","export const CLEAR_EDIT_ITEM_FILTERS = 'CLEAR_EDIT_ITEM_FILTERS';\nexport const REMOVE_EDIT_ITEM_FILTER = 'REMOVE_EDIT_ITEM_FILTER';\nexport const SET_EDIT_ITEM_FILTERS = 'SET_EDIT_ITEM_FILTERS';\n\nexport const DEFAULT_STATE_EDIT_ITEM_FILTERS = {};\n\nexport default (state = DEFAULT_STATE_EDIT_ITEM_FILTERS, action) => {\n    switch (action.type) {\n        case REMOVE_EDIT_ITEM_FILTER: {\n            const newState = { ...state };\n\n            delete newState[action.id];\n\n            return newState;\n        }\n        case SET_EDIT_ITEM_FILTERS: {\n            return action.filters;\n        }\n        case CLEAR_EDIT_ITEM_FILTERS: {\n            return DEFAULT_STATE_EDIT_ITEM_FILTERS;\n        }\n        default:\n            return state;\n    }\n};\n\n// selectors\n\nexport const sGetEditItemFiltersRoot = state => state.editItemFilters;\n\nexport const sGetEditFiltersKeys = state =>\n    Object.keys(sGetEditItemFiltersRoot(state));\n","export const CLEAR_ITEM_FILTERS = 'CLEAR_ITEM_FILTERS';\nexport const SET_ITEM_FILTERS = 'SET_ITEM_FILTERS';\nexport const ADD_ITEM_FILTER = 'ADD_ITEM_FILTER';\nexport const REMOVE_ITEM_FILTER = 'REMOVE_ITEM_FILTER';\n\nexport const DEFAULT_STATE_ITEM_FILTERS = {};\n\nexport default (state = DEFAULT_STATE_ITEM_FILTERS, action) => {\n    switch (action.type) {\n        case ADD_ITEM_FILTER: {\n            return {\n                ...state,\n                [action.filter.id]: action.filter.value,\n            };\n        }\n        case REMOVE_ITEM_FILTER: {\n            const newState = { ...state };\n\n            delete newState[action.id];\n\n            return newState;\n        }\n        case SET_ITEM_FILTERS: {\n            return action.filters;\n        }\n        case CLEAR_ITEM_FILTERS: {\n            return DEFAULT_STATE_ITEM_FILTERS;\n        }\n        default:\n            return state;\n    }\n};\n\n// selectors\n\nexport const sGetItemFiltersRoot = state => state.itemFilters;\n\nexport const sGetFiltersKeys = state => Object.keys(sGetItemFiltersRoot(state));\n","import {\n    ADD_ITEM_FILTER,\n    REMOVE_ITEM_FILTER,\n    SET_ITEM_FILTERS,\n    CLEAR_ITEM_FILTERS,\n} from '../reducers/itemFilters';\n\nexport const FILTER_ORG_UNIT = 'ou';\n\n// actions\n\nexport const acAddItemFilter = filter => ({\n    type: ADD_ITEM_FILTER,\n    filter,\n});\n\nexport const acRemoveItemFilter = id => ({\n    type: REMOVE_ITEM_FILTER,\n    id,\n});\n\nexport const acClearItemFilters = () => ({\n    type: CLEAR_ITEM_FILTERS,\n});\n\nexport const acSetItemFilters = filters => ({\n    type: SET_ITEM_FILTERS,\n    filters,\n});\n","import {\n    REMOVE_EDIT_ITEM_FILTER,\n    SET_EDIT_ITEM_FILTERS,\n    CLEAR_EDIT_ITEM_FILTERS,\n} from '../reducers/editItemFilters';\n\n// actions\n\nexport const acRemoveEditItemFilter = id => ({\n    type: REMOVE_EDIT_ITEM_FILTER,\n    id,\n});\n\nexport const acClearEditItemFilters = () => ({\n    type: CLEAR_EDIT_ITEM_FILTERS,\n});\n\nexport const acSetEditItemFilters = filters => ({\n    type: SET_EDIT_ITEM_FILTERS,\n    filters,\n});\n","import { getInstance } from 'd2';\n\nconst onError = error => console.log('Error: ', error);\n\nconst saveDashboard = (dashboard, data) => {\n    const { name, description, dashboardItems } = data;\n\n    dashboard.name = name;\n    dashboard.description = description;\n    dashboard.dashboardItems = dashboardItems.map(item =>\n        Object.assign({}, item, { width: item.w, height: item.h })\n    );\n\n    return dashboard.save().then(msg => msg.response.uid);\n};\n\nexport const updateDashboard = data => {\n    return getInstance()\n        .then(d2 => {\n            return d2.models.dashboards\n                .get(data.id)\n                .then(dashboard => saveDashboard(dashboard, data));\n        })\n        .catch(onError);\n};\n\nexport const postDashboard = data => {\n    return getInstance().then(d2 => {\n        const dashboard = d2.models.dashboards.create();\n\n        return saveDashboard(dashboard, data);\n    });\n};\n","import { generateUid } from 'd2/uid';\n\nimport {\n    RECEIVED_EDIT_DASHBOARD,\n    START_NEW_DASHBOARD,\n    RECEIVED_NOT_EDITING,\n    RECEIVED_TITLE,\n    RECEIVED_DESCRIPTION,\n    RECEIVED_DASHBOARD_LAYOUT,\n    ADD_DASHBOARD_ITEM,\n    UPDATE_DASHBOARD_ITEM,\n    REMOVE_DASHBOARD_ITEM,\n} from '../reducers/editDashboard';\nimport { sGetEditDashboardRoot } from '../reducers/editDashboard';\nimport { updateDashboard, postDashboard } from '../api/editDashboard';\nimport { tSetSelectedDashboardById } from '../actions/selected';\nimport { NEW_ITEM_SHAPE } from '../components/ItemGrid/gridUtil';\nimport {\n    itemTypeMap,\n    isSpacerType,\n    TEXT,\n    emptyTextItemContent,\n    isTextType,\n} from '../modules/itemTypes';\n\nconst onError = error => {\n    console.log('Error (Saving Dashboard): ', error);\n    return error;\n};\n\n// actions\n\nexport const acSetEditDashboard = (dashboard, items) => {\n    const val = {\n        ...dashboard,\n        dashboardItems: items,\n    };\n\n    return {\n        type: RECEIVED_EDIT_DASHBOARD,\n        value: val,\n    };\n};\n\nexport const acSetEditNewDashboard = () => ({\n    type: START_NEW_DASHBOARD,\n});\n\nexport const acClearEditDashboard = () => ({\n    type: RECEIVED_NOT_EDITING,\n});\n\nexport const acSetDashboardTitle = value => ({\n    type: RECEIVED_TITLE,\n    value,\n});\n\nexport const acSetDashboardDescription = value => ({\n    type: RECEIVED_DESCRIPTION,\n    value,\n});\n\nexport const acUpdateDashboardLayout = value => ({\n    type: RECEIVED_DASHBOARD_LAYOUT,\n    value,\n});\n\nexport const acAddDashboardItem = item => {\n    const type = item.type;\n    delete item.type;\n    const itemPropName = itemTypeMap[type].propName;\n\n    return {\n        type: ADD_DASHBOARD_ITEM,\n        value: {\n            id: generateUid(),\n            type,\n            [itemPropName]: item.content,\n            ...NEW_ITEM_SHAPE,\n        },\n    };\n};\n\nexport const acUpdateDashboardItem = item => ({\n    type: UPDATE_DASHBOARD_ITEM,\n    value: item,\n});\n\nexport const acRemoveDashboardItem = value => ({\n    type: REMOVE_DASHBOARD_ITEM,\n    value,\n});\n\n// thunks\n\nexport const tSaveDashboard = () => async (dispatch, getState) => {\n    const dashboard = sGetEditDashboardRoot(getState());\n\n    const dashboardItems = dashboard.dashboardItems.map(item => {\n        const text = isTextType(item)\n            ? item.text || emptyTextItemContent\n            : null;\n\n        const type = isSpacerType(item) ? TEXT : item.type;\n\n        return {\n            ...item,\n            ...(text ? { text } : {}),\n            type,\n        };\n    });\n\n    const dashboardToSave = {\n        ...dashboard,\n        dashboardItems,\n    };\n\n    try {\n        const dashboardId = dashboardToSave.id\n            ? await updateDashboard(dashboardToSave)\n            : await postDashboard(dashboardToSave);\n\n        dispatch(acClearEditDashboard());\n        await dispatch(tSetSelectedDashboardById(dashboardId));\n\n        return Promise.resolve(dashboardId);\n    } catch (error) {\n        onError(error);\n    }\n};\n","import {\n    SET_DASHBOARDS,\n    ADD_DASHBOARDS,\n    SET_DASHBOARD_STARRED,\n    SET_DASHBOARD_DISPLAY_NAME,\n    SET_DASHBOARD_ITEMS,\n} from '../reducers/dashboards';\nimport {\n    getCustomDashboards,\n    sGetDashboardById,\n    sGetDashboardsSortedByStarred,\n} from '../reducers/dashboards';\nimport { sGetUserUsername } from '../reducers/user';\nimport { tSetSelectedDashboardById, acSetSelectedId } from './selected';\nimport { sGetSelectedId } from '../reducers/selected';\nimport { sGetIsEditing } from '../reducers/editDashboard';\nimport { sGetEditItemFiltersRoot } from '../reducers/editItemFilters';\nimport { acSetItemFilters, acClearItemFilters } from './itemFilters';\nimport { acClearEditItemFilters } from './editItemFilters';\nimport { acClearEditDashboard } from './editDashboard';\nimport {\n    apiFetchDashboards,\n    apiStarDashboard,\n    apiDeleteDashboard,\n} from '../api/dashboards';\nimport { getPreferredDashboardId } from '../api/localStorage';\nimport { arrayToIdMap } from '../modules/util';\n\n// actions\n\nexport const acSetDashboards = dashboards => ({\n    type: SET_DASHBOARDS,\n    value: arrayToIdMap(getCustomDashboards(dashboards)),\n});\n\nexport const acAppendDashboards = dashboards => ({\n    type: ADD_DASHBOARDS,\n    value: arrayToIdMap(getCustomDashboards(dashboards)),\n});\n\nexport const acSetDashboardStarred = (dashboardId, isStarred) => ({\n    type: SET_DASHBOARD_STARRED,\n    dashboardId: dashboardId,\n    value: isStarred,\n});\n\nexport const acSetDashboardDisplayName = (dashboardId, value) => ({\n    type: SET_DASHBOARD_DISPLAY_NAME,\n    dashboardId,\n    value,\n});\n\nexport const acSetDashboardItems = value => ({\n    type: SET_DASHBOARD_ITEMS,\n    value,\n});\n\n// thunks\n\nexport const tFetchDashboards = () => async dispatch => {\n    const collection = await apiFetchDashboards();\n    dispatch(acSetDashboards(collection.toArray()));\n};\n\nexport const tSelectDashboard = id => async (dispatch, getState) => {\n    const onError = error => {\n        console.log('Error (apiFetchDashboards): ', error);\n        return error;\n    };\n\n    try {\n        const state = getState();\n\n        let dashboardToSelect = null;\n        if (id) {\n            dashboardToSelect = sGetDashboardById(state, id) || null;\n        } else {\n            const preferredId = getPreferredDashboardId(\n                sGetUserUsername(state)\n            );\n            const dash = sGetDashboardById(state, preferredId);\n            dashboardToSelect =\n                preferredId && dash\n                    ? dash\n                    : sGetDashboardsSortedByStarred(state)[0];\n        }\n\n        if (dashboardToSelect) {\n            dispatch(tSetSelectedDashboardById(dashboardToSelect.id));\n\n            if (dashboardToSelect.id === sGetSelectedId(state)) {\n                if (sGetIsEditing(state)) {\n                    // disable filters when switching to edit mode\n                    dispatch(acClearItemFilters());\n                } else {\n                    // enable filters when switching to view mode\n                    dispatch(acSetItemFilters(sGetEditItemFiltersRoot(state)));\n                }\n            } else {\n                // clear filters when switching dashboard\n                dispatch(acClearEditItemFilters());\n                dispatch(acClearItemFilters());\n            }\n        } else {\n            dispatch(acSetSelectedId());\n        }\n    } catch (err) {\n        return onError(err);\n    }\n};\n\nexport const tStarDashboard = (id, isStarred) => async dispatch => {\n    const onSuccess = id => {\n        dispatch(acSetDashboardStarred(id, isStarred));\n        return id;\n    };\n\n    const onError = error => {\n        console.log('Error (apiStarDashboard): ', error);\n        return error;\n    };\n    try {\n        await apiStarDashboard(id, isStarred);\n        return onSuccess(id);\n    } catch (err) {\n        return onError(err);\n    }\n};\n\nexport const tDeleteDashboard = id => async dispatch => {\n    try {\n        await apiDeleteDashboard(id);\n        dispatch(acClearEditDashboard());\n        dispatch(acSetSelectedId());\n        dispatch(acSetDashboardItems([]));\n\n        await dispatch(tFetchDashboards());\n\n        return Promise.resolve();\n    } catch (err) {\n        console.log('Error (deleteDashboard): ', err);\n        return err;\n    }\n};\n","/** @module reducers/controlBar */\nimport { combineReducers } from 'redux';\nimport { validateReducer } from '../modules/util';\n\nexport const SET_CONTROLBAR_USER_ROWS = 'SET_CONTROLBAR_USER_ROWS';\n\nexport const DEFAULT_STATE_CONTROLBAR_ROWS = 1;\n\nconst userRows = (state = DEFAULT_STATE_CONTROLBAR_ROWS, action) => {\n    switch (action.type) {\n        case SET_CONTROLBAR_USER_ROWS:\n            return validateReducer(action.value, DEFAULT_STATE_CONTROLBAR_ROWS);\n        default:\n            return state;\n    }\n};\n\nexport default combineReducers({\n    userRows,\n});\n\n/**\n * Selectors that point to specific props in the state object\n * @function\n * @param {Object} state\n * @returns {Object}\n */\nexport const sGetControlBarRoot = state => state.controlBar;\n\n// Selector dependency level 2\n\nexport const sGetControlBarUserRows = state =>\n    sGetControlBarRoot(state).userRows;\n","import { getInstance } from 'd2';\nimport { DEFAULT_STATE_CONTROLBAR_ROWS } from '../reducers/controlBar';\n\nconst NAMESPACE = 'dashboard';\nconst KEY = 'controlBarRows';\n\nconst hasNamespace = async d2 => await d2.currentUser.dataStore.has(NAMESPACE);\n\nconst getNamespace = async (d2, hasNamespace) =>\n    hasNamespace\n        ? await d2.currentUser.dataStore.get(NAMESPACE)\n        : await d2.currentUser.dataStore.create(NAMESPACE);\n\nexport const apiGetControlBarRows = async () => {\n    const d2 = await getInstance();\n    const namespace = await getNamespace(d2, await hasNamespace(d2));\n    const hasKey = namespace.keys && namespace.keys.find(key => key === KEY);\n\n    if (hasKey) {\n        return await namespace.get(KEY);\n    } else {\n        await apiPostControlBarRows(DEFAULT_STATE_CONTROLBAR_ROWS, namespace);\n        console.log(\n            '(These errors to /userDataStore/dashboard can be ignored)'\n        );\n        return DEFAULT_STATE_CONTROLBAR_ROWS;\n    }\n};\n\nexport const apiPostControlBarRows = async (rows, namespace) => {\n    const d2 = await getInstance();\n    const ns = namespace || (await getNamespace(d2, hasNamespace));\n\n    ns.set(KEY, rows);\n};\n","import { SET_CONTROLBAR_USER_ROWS } from '../reducers/controlBar';\nimport { apiGetControlBarRows } from '../api/controlBar';\n\n// actions\n\nexport const acSetControlBarUserRows = rows => ({\n    type: SET_CONTROLBAR_USER_ROWS,\n    value: rows,\n});\n\n// thunks\n\nexport const tSetControlBarRows = () => async dispatch => {\n    const onSuccess = rows => {\n        dispatch(acSetControlBarUserRows(rows));\n    };\n\n    const onError = error => {\n        console.log('Error (apiGetControlBarRows): ', error);\n        return error;\n    };\n\n    try {\n        const controlBarRows = await apiGetControlBarRows();\n        return onSuccess(controlBarRows);\n    } catch (err) {\n        return onError(err);\n    }\n};\n","import {\n    getDimensionById,\n    DIMENSION_ID_PERIOD,\n    DIMENSION_ID_ORGUNIT,\n} from '@dhis2/analytics';\n\nexport const SET_DIMENSIONS = 'SET_DIMENSIONS';\nexport const DEFAULT_DIMENSIONS = [\n    getDimensionById(DIMENSION_ID_PERIOD),\n    getDimensionById(DIMENSION_ID_ORGUNIT),\n];\n\nexport default (state = DEFAULT_DIMENSIONS, action) => {\n    switch (action.type) {\n        case SET_DIMENSIONS: {\n            return [...DEFAULT_DIMENSIONS, ...action.value];\n        }\n        default:\n            return state;\n    }\n};\n\nexport const sGetDimensions = state => state.dimensions;\n","export const SET_SETTINGS = 'SET_SETTINGS';\nexport const ADD_SETTINGS = 'ADD_SETTINGS';\n\nexport const DEFAULT_SETTINGS = {\n    keyDateFormat: 'yyyy-MM-dd',\n    keyAnalysisRelativePeriod: 'LAST_12_MONTHS',\n    keyAnalysisDigitGroupSeparator: 'SPACE',\n    displayNameProperty: 'displayName',\n    uiLocale: 'en',\n    rootOrganisationUnit: {},\n};\n\nexport default (state = DEFAULT_SETTINGS, action) => {\n    switch (action.type) {\n        case SET_SETTINGS: {\n            return Object.assign({}, action.value);\n        }\n        case ADD_SETTINGS: {\n            return {\n                ...state,\n                ...action.value,\n            };\n        }\n        default:\n            return state;\n    }\n};\n\n// Selectors\n\nexport const sGetSettings = state => state.settings;\n\nexport const sGetSettingsDisplayNameProperty = state =>\n    sGetSettings(state).displayNameProperty;\n\nexport const sGetRootOrgUnit = state =>\n    sGetSettings(state).rootOrganisationUnit;\n\nexport const sGetRelativePeriod = state =>\n    sGetSettings(state).keyAnalysisRelativePeriod;\n\nexport const sGetUiLocale = state => sGetSettings(state).uiLocale;\n","import { SET_DIMENSIONS } from '../reducers/dimensions';\nimport { apiFetchDimensions } from '@dhis2/analytics';\nimport { sGetSettingsDisplayNameProperty } from '../reducers/settings';\n\nexport const acSetDimensions = dimensions => ({\n    type: SET_DIMENSIONS,\n    value: dimensions,\n});\n\nexport const tSetDimensions = d2 => async (dispatch, getState) => {\n    const onSuccess = dimensions => {\n        dispatch(acSetDimensions(dimensions));\n    };\n\n    const onError = error => {\n        console.log('Error (apiFetchDimensions): ', error);\n        return error;\n    };\n\n    try {\n        const displayNameProp = sGetSettingsDisplayNameProperty(getState());\n        const dimensions = await apiFetchDimensions(d2, displayNameProp);\n\n        // filter out CATEGORY that are not of type ATTRIBUTE\n        const filteredDimensions = dimensions.filter(\n            dim =>\n                dim.dimensionType !== 'CATEGORY' ||\n                (dim.dimensionType === 'CATEGORY' &&\n                    dim.dataDimensionType === 'ATTRIBUTE')\n        );\n        return onSuccess(filteredDimensions);\n    } catch (err) {\n        return onError(err);\n    }\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport i18n from '@dhis2/d2-i18n';\nimport { colors } from '@dhis2/ui-core';\nimport { withStyles } from '@material-ui/core/styles';\n\nexport const SHOWMORE_BAR_HEIGHT = 16;\n\nconst styles = {\n    showMore: {\n        color: colors.grey700,\n        cursor: 'pointer',\n        fontSize: 11,\n        paddingTop: 5,\n        '&:hover': {\n            textDecoration: 'underline',\n        },\n    },\n    disabled: {\n        paddingTop: 5,\n        color: colors.grey500,\n        fontSize: 11,\n        cursor: 'not-allowed',\n    },\n};\n\nexport const ShowMoreButton = ({ onClick, isMaxHeight, classes, disabled }) => {\n    return (\n        <div style={{ textAlign: 'center' }}>\n            {disabled ? (\n                <div className={classes.disabled}>{i18n.t('Show more')}</div>\n            ) : (\n                <div className={classes.showMore} onClick={onClick}>\n                    {isMaxHeight ? i18n.t('Show less') : i18n.t('Show more')}\n                </div>\n            )}\n        </div>\n    );\n};\n\nShowMoreButton.propTypes = {\n    classes: PropTypes.object,\n    disabled: PropTypes.bool,\n    isMaxHeight: PropTypes.bool,\n    onClick: PropTypes.func,\n};\n\nexport default withStyles(styles)(ShowMoreButton);\n","import { SHOWMORE_BAR_HEIGHT } from './ShowMoreButton';\n\nexport const CONTROL_BAR_ROW_HEIGHT = 40;\nexport const FIRST_ROW_PADDING_HEIGHT = 10;\nexport const MIN_ROW_COUNT = 1;\n\nexport const HEADERBAR_HEIGHT = 48;\n\nconst CONTROL_BAR_OUTER_HEIGHT_DIFF =\n    FIRST_ROW_PADDING_HEIGHT + SHOWMORE_BAR_HEIGHT - 2; // 2 pixel \"adjustment\"\n\nexport const getRowsHeight = rows => {\n    return rows * CONTROL_BAR_ROW_HEIGHT;\n};\n\nexport const getNumRowsFromHeight = height => {\n    return Math.floor(\n        (height - CONTROL_BAR_OUTER_HEIGHT_DIFF) / CONTROL_BAR_ROW_HEIGHT\n    );\n};\n\nexport const getTopOffset = rows => {\n    return HEADERBAR_HEIGHT + getControlBarHeight(rows, false);\n};\n\nexport const getControlBarHeight = rows => {\n    return getRowsHeight(rows) + CONTROL_BAR_OUTER_HEIGHT_DIFF;\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { colors } from '@dhis2/ui-core';\nimport { HEADERBAR_HEIGHT } from './controlBarDimensions';\n\nimport classes from './styles/ControlBar.module.css';\n\nconst DRAG_HANDLE_HEIGHT = 7;\n\nclass ControlBar extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            dragging: false,\n        };\n    }\n\n    onStartDrag = () => {\n        this.setState({ dragging: true });\n        window.addEventListener('mousemove', this.onDrag);\n        window.addEventListener('mouseup', this.onEndDrag);\n    };\n\n    onDrag = event => {\n        event.preventDefault();\n        event.stopPropagation();\n\n        const newHeight = event.clientY;\n\n        if (\n            this.props.onChangeHeight &&\n            newHeight !== this.props.height &&\n            newHeight > 0\n        ) {\n            requestAnimationFrame(() => {\n                this.props.onChangeHeight(newHeight);\n            });\n        }\n    };\n\n    onEndDrag = () => {\n        this.setState({ dragging: false });\n        window.removeEventListener('mousemove', this.onDrag);\n        window.removeEventListener('mouseup', this.onEndDrag);\n\n        if (this.props.onEndDrag) {\n            this.props.onEndDrag();\n        }\n    };\n\n    renderDragHandle() {\n        return typeof this.props.onChangeHeight === 'function' ? (\n            <div\n                className={classes.draghandle}\n                style={{ height: DRAG_HANDLE_HEIGHT }}\n                onMouseDown={this.onStartDrag}\n            />\n        ) : null;\n    }\n\n    render() {\n        const height = Math.max(this.props.height, 0) + DRAG_HANDLE_HEIGHT;\n\n        const rootStyle = Object.assign(\n            {\n                height,\n                top: HEADERBAR_HEIGHT,\n                backgroundColor: this.props.editMode\n                    ? colors.yellow050\n                    : colors.white,\n                paddingBottom: DRAG_HANDLE_HEIGHT,\n            },\n            // Disable animations while dragging\n            this.state.dragging ? { transition: 'none' } : {}\n        );\n\n        return (\n            <div style={rootStyle} className={classes.root}>\n                <div className={classes.content}>{this.props.children}</div>\n                {this.renderDragHandle()}\n            </div>\n        );\n    }\n}\n\nControlBar.propTypes = {\n    /**\n     * The height of the control bar in number of lines. Must be a positive integer.\n     */\n    children: PropTypes.node.isRequired,\n\n    /**\n     * If true, the background color of the control bar changes to indicate that edit mode is active.\n     */\n    editMode: PropTypes.bool.isRequired,\n\n    /**\n     * Callback function that is called when the control bar is resized.\n     * The callback receives one argument: The new height in pixels.\n     *\n     * If no callback is specified the control bar will not have a drag handle.\n     */\n    height: PropTypes.number.isRequired,\n\n    /**\n     * Callback function that is called when the control bar is dropped after being dragged.\n     * The callback receives one argument: The new height in pixels.\n     *\n     * Ignored if no \"onChangeHeight\" function is provided.\n     */\n    onChangeHeight: PropTypes.func,\n\n    /**\n     * The contents of the control bar.\n     */\n    onEndDrag: PropTypes.func,\n};\n\nControlBar.defaultProps = {\n    onChangeHeight: null,\n    onEndDrag: null,\n};\n\nexport default ControlBar;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst StarIcon = ({ className }) => (\n    <svg\n        className={className}\n        xmlns=\"http://www.w3.org/2000/svg\"\n        viewBox=\"0 0 24 24\"\n    >\n        <path d=\"M0 0h24v24H0z\" fill=\"none\" />\n        <path d=\"M12 17.27L18.18 21l-1.64-7.03L22 9.24l-7.19-.61L12 2 9.19 8.63 2 9.24l5.46 4.73L5.82 21z\" />\n        <path d=\"M0 0h24v24H0z\" fill=\"none\" />\n    </svg>\n);\n\nStarIcon.propTypes = {\n    className: PropTypes.string,\n};\n\nexport default StarIcon;\n","import { getInstance } from 'd2';\n\nexport const apiPostDataStatistics = async (eventType, id) => {\n    const d2 = await getInstance();\n    const url = `dataStatistics?eventType=${eventType}&favorite=${id}`;\n\n    d2.Api.getApi().post(url);\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport { Chip, colors } from '@dhis2/ui-core';\nimport { Link } from 'react-router-dom';\nimport debounce from 'lodash/debounce';\n\nimport StarIcon from '../../icons/Star';\nimport { apiPostDataStatistics } from '../../api/dataStatistics';\n\nconst styles = {\n    chip: {\n        margin: '3px',\n    },\n    link: {\n        color: colors.grey600,\n        display: 'inline-block',\n        textDecoration: 'none',\n        verticalAlign: 'top',\n    },\n    icon: {\n        height: '20px',\n        marginTop: '2px',\n        width: '20px',\n    },\n    selected: {\n        fill: colors.white,\n    },\n    unselected: {\n        fill: colors.grey700,\n    },\n};\n\nexport const DashboardItemChip = ({\n    starred,\n    selected,\n    label,\n    dashboardId,\n    classes,\n}) => {\n    const chipProps = {\n        selected,\n        className: classes.chip,\n    };\n\n    if (starred) {\n        const selectedState = selected ? classes.selected : classes.unselected;\n        chipProps.icon = (\n            <StarIcon className={`${classes.icon} ${selectedState}`} />\n        );\n    }\n\n    return (\n        <Link\n            className={classes.link}\n            to={`/${dashboardId}`}\n            onClick={debounce(\n                () => apiPostDataStatistics('DASHBOARD_VIEW', dashboardId),\n                500\n            )}\n        >\n            <Chip {...chipProps}>{label}</Chip>\n        </Link>\n    );\n};\n\nDashboardItemChip.propTypes = {\n    dashboardId: PropTypes.string.isRequired,\n    label: PropTypes.string.isRequired,\n    selected: PropTypes.bool.isRequired,\n    starred: PropTypes.bool.isRequired,\n    classes: PropTypes.object,\n};\n\nexport default withStyles(styles)(DashboardItemChip);\n","import React from 'react';\nimport { colors } from '@dhis2/ui-core';\n\nconst AddCircleIcon = () => (\n    <svg\n        xmlns=\"http://www.w3.org/2000/svg\"\n        width=\"32\"\n        height=\"32\"\n        fill={colors.teal600}\n        viewBox=\"0 0 24 24\"\n    >\n        <path d=\"M12 2C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2zm4 11h-3v3c0 .55-.45 1-1 1s-1-.45-1-1v-3H8c-.55 0-1-.45-1-1s.45-1 1-1h3V8c0-.55.45-1 1-1s1 .45 1 1v3h3c.55 0 1 .45 1 1s-.45 1-1 1z\" />\n    </svg>\n);\n\nexport default AddCircleIcon;\n","import React from 'react';\nimport { colors } from '@dhis2/ui-core';\nimport PropTypes from 'prop-types';\n\nconst ClearIcon = ({ className }) => (\n    <svg\n        className={className}\n        fill={colors.grey800}\n        xmlns=\"http://www.w3.org/2000/svg\"\n        viewBox=\"0 0 24 24\"\n    >\n        <path d=\"M19 6.41L17.59 5 12 10.59 6.41 5 5 6.41 10.59 12 5 17.59 6.41 19 12 13.41 17.59 19 19 17.59 13.41 12z\" />\n        <path d=\"M0 0h24v24H0z\" fill=\"none\" />\n    </svg>\n);\n\nClearIcon.propTypes = {\n    className: PropTypes.string,\n};\n\nexport default ClearIcon;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport ClearIcon from '../../icons/Clear';\n\nimport classes from './styles/ClearButton.module.css';\n\nexport const ClearButton = ({ onClear }) => (\n    <button className={classes.button} onClick={onClear}>\n        <span>\n            <ClearIcon className={classes.icon} color=\"action\" />\n        </span>\n    </button>\n);\n\nClearButton.propTypes = {\n    onClear: PropTypes.func.isRequired,\n};\n\nexport default ClearButton;\n","import { combineReducers } from 'redux';\nimport { validateReducer } from '../modules/util';\n\nexport const SET_DASHBOARDS_FILTER_NAME = 'SET_DASHBOARDS_FILTER_NAME';\nexport const SET_DASHBOARDS_FILTER_OWNER = 'SET_DASHBOARDS_FILTER_OWNER';\nexport const SET_DASHBOARDS_FILTER_ORDER = 'SET_DASHBOARDS_FILTER_ORDER';\n\nexport const ownerData = [\n    { id: 'ALL', value: 'All users' },\n    { id: 'ME', value: 'Created by me' },\n    { id: 'OTHERS', value: 'Created by others' },\n];\n\nexport const orderData = [\n    { id: 'NAME:ASC', value: 'Name (asc)' },\n    { id: 'NAME:ASC', value: 'Name (desc)' },\n    { id: 'ITEMS:ASC', value: 'Number of items (asc)' },\n    { id: 'ITEMS:ASC', value: 'Number of items (desc)' },\n    { id: 'CREATED:ASC', value: 'Created date (asc)' },\n    { id: 'CREATED:ASC', value: 'Created date (desc)' },\n];\n\nexport const DEFAULT_STATE_DASHBOARDS_FILTER_NAME = '';\nexport const DEFAULT_STATE_DASHBOARDS_FILTER_OWNER = ownerData[0].id;\nexport const DEFAULT_STATE_DASHBOARDS_FILTER_ORDER = orderData[0].id;\n\nconst name = (state = DEFAULT_STATE_DASHBOARDS_FILTER_NAME, action) => {\n    switch (action.type) {\n        case SET_DASHBOARDS_FILTER_NAME:\n            return validateReducer(\n                action.value,\n                DEFAULT_STATE_DASHBOARDS_FILTER_NAME\n            );\n        default:\n            return state;\n    }\n};\n\nconst owner = (state = DEFAULT_STATE_DASHBOARDS_FILTER_OWNER, action) => {\n    switch (action.type) {\n        case SET_DASHBOARDS_FILTER_OWNER:\n            return validateReducer(\n                action.value,\n                DEFAULT_STATE_DASHBOARDS_FILTER_NAME\n            );\n        default:\n            return state;\n    }\n};\n\nconst order = (state = DEFAULT_STATE_DASHBOARDS_FILTER_ORDER, action) => {\n    switch (action.type) {\n        case SET_DASHBOARDS_FILTER_ORDER:\n            return validateReducer(\n                action.value,\n                DEFAULT_STATE_DASHBOARDS_FILTER_ORDER\n            );\n        default:\n            return state;\n    }\n};\n\nexport default combineReducers({\n    name,\n    owner,\n    order,\n});\n\n// selectors\n\nexport const sGetDashboardsFilterRoot = state => state.dashboardsFilter;\n\n// selector dependency level 2\n\nexport const sGetFilterName = state => sGetDashboardsFilterRoot(state).name;\nexport const sGetFilterOwner = state => sGetDashboardsFilterRoot(state).owner;\nexport const sGetFilterOrder = state => sGetDashboardsFilterRoot(state).order;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport i18n from '@dhis2/d2-i18n';\nimport InputField from '@material-ui/core/Input';\nimport InputAdornment from '@material-ui/core/InputAdornment';\nimport SearchIcon from '@material-ui/icons/Search';\nimport { colors } from '@dhis2/ui-core';\n\nimport ClearButton from './ClearButton';\nimport { DEFAULT_STATE_DASHBOARDS_FILTER_NAME } from '../../reducers/dashboardsFilter';\n\nexport const KEYCODE_ENTER = 13;\nexport const KEYCODE_ESCAPE = 27;\n\nconst styles = {\n    filterField: {\n        fontSize: '14px',\n        width: '200px',\n        height: '30px',\n        top: '-4px',\n    },\n    searchIcon: {\n        color: colors.grey700,\n        width: '20px',\n        height: '20px',\n    },\n};\n\nexport class Filter extends Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            value: DEFAULT_STATE_DASHBOARDS_FILTER_NAME,\n        };\n    }\n\n    componentWillReceiveProps(nextProps) {\n        this.setState({\n            value: nextProps.name,\n        });\n    }\n\n    setFilterValue = event => {\n        event.preventDefault();\n\n        this.props.onChangeName(event.target.value);\n    };\n\n    handleKeyUp = event => {\n        switch (event.keyCode) {\n            case KEYCODE_ENTER:\n                this.props.onKeypressEnter();\n                break;\n            case KEYCODE_ESCAPE:\n                this.props.onChangeName();\n                break;\n            default:\n                break;\n        }\n    };\n\n    render() {\n        const { classes, name, onChangeName } = this.props;\n\n        const startAdornment = (\n            <InputAdornment position=\"start\">\n                <SearchIcon className={classes.searchIcon} />\n            </InputAdornment>\n        );\n\n        const endAdornment =\n            name !== '' && name !== null ? (\n                <InputAdornment position=\"end\">\n                    <ClearButton onClear={() => onChangeName()} />\n                </InputAdornment>\n            ) : null;\n\n        return (\n            <InputField\n                className={classes.filterField}\n                placeholder={i18n.t('Search for a dashboard')}\n                startAdornment={startAdornment}\n                endAdornment={endAdornment}\n                value={this.state.value}\n                onChange={this.setFilterValue}\n                onKeyUp={this.handleKeyUp}\n            />\n        );\n    }\n}\n\nFilter.propTypes = {\n    classes: PropTypes.object,\n    name: PropTypes.string,\n    onChangeName: PropTypes.func,\n    onKeypressEnter: PropTypes.func,\n};\n\nFilter.defaultProps = {\n    name: '',\n    onChangeName: Function.prototype,\n};\n\nexport default withStyles(styles)(Filter);\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { Link, withRouter } from 'react-router-dom';\nimport ControlBar from './ControlBar';\nimport arraySort from 'd2-utilizr/lib/arraySort';\nimport PropTypes from 'prop-types';\n\nimport Chip from './DashboardItemChip';\nimport AddCircleIcon from '../../icons/AddCircle';\nimport Filter from './Filter';\nimport ShowMoreButton from './ShowMoreButton';\nimport {\n    FIRST_ROW_PADDING_HEIGHT,\n    MIN_ROW_COUNT,\n    getRowsHeight,\n    getControlBarHeight,\n    getNumRowsFromHeight,\n} from './controlBarDimensions';\nimport { sGetControlBarUserRows } from '../../reducers/controlBar';\nimport { sGetAllDashboards } from '../../reducers/dashboards';\nimport { sGetFilterName } from '../../reducers/dashboardsFilter';\nimport { sGetSelectedId } from '../../reducers/selected';\nimport { acSetControlBarUserRows } from '../../actions/controlBar';\nimport { acSetFilterName } from '../../actions/dashboardsFilter';\nimport { orObject, orArray } from '../../modules/util';\nimport { apiPostControlBarRows } from '../../api/controlBar';\n\nimport classes from './styles/DashboardsBar.module.css';\n\nexport const MAX_ROW_COUNT = 10;\n\nexport class DashboardsBar extends Component {\n    state = {\n        rows: MIN_ROW_COUNT,\n    };\n\n    setInitialDashboardState = rows => {\n        this.setState({ rows, isMaxHeight: rows === MAX_ROW_COUNT });\n    };\n\n    componentDidMount() {\n        this.setInitialDashboardState(this.props.userRows);\n    }\n\n    componentWillReceiveProps(nextProps) {\n        this.setInitialDashboardState(nextProps.userRows);\n    }\n\n    onChangeHeight = newHeight => {\n        const adjustedHeight = newHeight - 52; // don't rush the transition to a bigger row count\n        const newRows = Math.max(\n            MIN_ROW_COUNT,\n            getNumRowsFromHeight(adjustedHeight)\n        );\n\n        if (newRows !== this.state.rows) {\n            const newRowCount = Math.min(newRows, MAX_ROW_COUNT);\n\n            this.props.onChangeHeight(newRowCount);\n        }\n    };\n\n    onEndDrag = () => {\n        return apiPostControlBarRows(this.state.rows);\n    };\n\n    onToggleMaxHeight = () => {\n        const rows =\n            this.state.rows === MAX_ROW_COUNT\n                ? this.props.userRows\n                : MAX_ROW_COUNT;\n\n        this.setState({ rows, isMaxHeight: !this.state.isMaxHeight });\n    };\n\n    onSelectDashboard = () => {\n        this.props.history.push(`/${this.props.dashboards[0].id}`);\n    };\n\n    render() {\n        const { dashboards, name, selectedId, onChangeFilterName } = this.props;\n\n        const rowCount = this.state.isMaxHeight\n            ? MAX_ROW_COUNT\n            : this.state.rows;\n        const controlBarHeight = getControlBarHeight(rowCount);\n        const contentWrapperStyle = {\n            padding: `${FIRST_ROW_PADDING_HEIGHT}px 6px 0 6px`,\n            overflowY: this.state.isMaxHeight ? 'auto' : 'hidden',\n            height: getRowsHeight(rowCount) + FIRST_ROW_PADDING_HEIGHT,\n        };\n\n        return (\n            <ControlBar\n                height={controlBarHeight}\n                onChangeHeight={this.onChangeHeight}\n                onEndDrag={this.onEndDrag}\n                editMode={false}\n            >\n                <div style={contentWrapperStyle}>\n                    <div className={classes.leftControls}>\n                        <Link\n                            style={{\n                                display: 'inline-block',\n                                textDecoration: 'none',\n                                marginRight: 10,\n                                position: 'relative',\n                                top: '2px',\n                            }}\n                            to={'/new'}\n                        >\n                            <AddCircleIcon />\n                        </Link>\n                        <Filter\n                            name={name}\n                            onChangeName={onChangeFilterName}\n                            onKeypressEnter={this.onSelectDashboard}\n                        />\n                    </div>\n                    {orArray(dashboards).map(dashboard => (\n                        <Chip\n                            key={dashboard.id}\n                            label={dashboard.displayName}\n                            starred={dashboard.starred}\n                            dashboardId={dashboard.id}\n                            selected={dashboard.id === selectedId}\n                        />\n                    ))}\n                </div>\n                <ShowMoreButton\n                    onClick={this.onToggleMaxHeight}\n                    isMaxHeight={this.state.isMaxHeight}\n                    disabled={this.props.userRows === MAX_ROW_COUNT}\n                />\n            </ControlBar>\n        );\n    }\n}\n\nconst mapStateToProps = state => ({\n    dashboards: sGetAllDashboards(state),\n    name: sGetFilterName(state),\n    userRows: sGetControlBarUserRows(state),\n    selectedId: sGetSelectedId(state),\n});\n\nconst mapDispatchToProps = {\n    onChangeHeight: acSetControlBarUserRows,\n    onChangeFilterName: acSetFilterName,\n};\nconst mergeProps = (stateProps, dispatchProps, ownProps) => {\n    const dashboards = Object.values(orObject(stateProps.dashboards));\n    const displayDashboards = arraySort(\n        dashboards.filter(d =>\n            d.displayName.toLowerCase().includes(stateProps.name.toLowerCase())\n        ),\n        'ASC',\n        'displayName'\n    );\n\n    return {\n        ...stateProps,\n        ...ownProps,\n        ...dispatchProps,\n        dashboards: [\n            ...displayDashboards.filter(d => d.starred),\n            ...displayDashboards.filter(d => !d.starred),\n        ],\n    };\n};\n\nDashboardsBar.propTypes = {\n    dashboards: PropTypes.array,\n    history: PropTypes.object,\n    name: PropTypes.string,\n    selectedId: PropTypes.string,\n    userRows: PropTypes.number,\n    onChangeFilterName: PropTypes.func,\n    onChangeHeight: PropTypes.func,\n};\n\nexport default withRouter(\n    connect(\n        mapStateToProps,\n        mapDispatchToProps,\n        mergeProps\n    )(DashboardsBar)\n);\n","import {\n    SET_DASHBOARDS_FILTER_NAME,\n    SET_DASHBOARDS_FILTER_OWNER,\n    SET_DASHBOARDS_FILTER_ORDER,\n} from '../reducers/dashboardsFilter';\n\n// actions\n\nexport const acSetFilterName = value => ({\n    type: SET_DASHBOARDS_FILTER_NAME,\n    value,\n});\n\nexport const acSetFilterOwner = value => ({\n    type: SET_DASHBOARDS_FILTER_OWNER,\n    value,\n});\n\nexport const acSetFilterOrder = value => ({\n    type: SET_DASHBOARDS_FILTER_ORDER,\n    value,\n});\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\n\nimport {\n    getTopOffset,\n    MIN_ROW_COUNT,\n} from '../ControlBar/controlBarDimensions';\nimport { sGetControlBarUserRows } from '../../reducers/controlBar';\n\nconst DashboardVerticalOffset = props => {\n    const rows = props.editMode ? MIN_ROW_COUNT : props.userRows;\n    const marginTop = getTopOffset(rows);\n\n    return <div className=\"page-container-top-margin\" style={{ marginTop }} />;\n};\n\nconst mapStateToProps = state => ({\n    userRows: sGetControlBarUserRows(state),\n});\n\nDashboardVerticalOffset.propTypes = {\n    editMode: PropTypes.bool,\n    userRows: PropTypes.number,\n};\n\nexport default connect(mapStateToProps)(DashboardVerticalOffset);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { MenuItem, colors } from '@dhis2/ui-core';\n\nconst HeaderMenuItem = ({ title }) => (\n    <MenuItem\n        dense\n        key={title}\n        disabled\n        label={\n            <p style={{ color: colors.grey800, fontWeight: '600' }}>{title}</p>\n        }\n    />\n);\n\nHeaderMenuItem.propTypes = {\n    title: PropTypes.string.isRequired,\n};\n\nexport default HeaderMenuItem;\n","import React from 'react';\nimport { colors } from '@dhis2/ui-core';\nimport PropTypes from 'prop-types';\n\nconst LaunchIcon = ({ className }) => (\n    <svg\n        className={className}\n        xmlns=\"http://www.w3.org/2000/svg\"\n        width=\"12\"\n        height=\"12\"\n        fill={colors.grey600}\n        viewBox=\"0 0 24 24\"\n    >\n        <path d=\"M0 0h24v24H0z\" fill=\"none\" />\n        <path d=\"M19 19H5V5h7V3H5c-1.11 0-2 .9-2 2v14c0 1.1.89 2 2 2h14c1.1 0 2-.9 2-2v-7h-2v7zM14 3v2h3.59l-9.83 9.83 1.41 1.41L19 6.41V10h2V3h-7z\" />\n    </svg>\n);\n\nLaunchIcon.propTypes = {\n    className: PropTypes.string,\n};\n\nexport default LaunchIcon;\n","import React from 'react';\nimport { MenuItem, colors } from '@dhis2/ui-core';\nimport i18n from '@dhis2/d2-i18n';\nimport PropTypes from 'prop-types';\nimport { visTypeIcons } from '@dhis2/analytics';\n\nimport { getItemIcon, VISUALIZATION } from '../../modules/itemTypes';\nimport LaunchIcon from '../../icons/Launch';\n\nimport classes from './styles/ContentMenuItem.module.css';\n\nconst LaunchLink = ({ url }) => (\n    <a\n        onClick={e => e.stopPropagation()}\n        className={classes.launchLink}\n        target=\"_blank\"\n        rel=\"noopener noreferrer\"\n        href={url}\n    >\n        <LaunchIcon />\n    </a>\n);\n\nLaunchLink.propTypes = {\n    url: PropTypes.string,\n};\n\nconst InsertButton = () => (\n    <button className={classes.buttonInsert}>{i18n.t('Insert')}</button>\n);\n\nconst ContentMenuItem = ({ type, name, onInsert, url, visType }) => {\n    const ItemIcon = getItemIcon(type);\n\n    const renderedItemIcon =\n        type === VISUALIZATION ? (\n            visTypeIcons[visType]\n        ) : (\n            <ItemIcon style={{ fill: colors.grey600 }} />\n        );\n\n    return (\n        <MenuItem\n            dense\n            onClick={onInsert}\n            label={\n                <div className={classes.menuItem}>\n                    <div className={classes.label}>\n                        <span style={{ margin: '6px' }}>\n                            {renderedItemIcon}\n                        </span>\n                        <span>{name}</span>\n                        {url ? <LaunchLink url={url} /> : null}\n                    </div>\n                    <InsertButton />\n                </div>\n            }\n        />\n    );\n};\n\nContentMenuItem.propTypes = {\n    name: PropTypes.string,\n    type: PropTypes.string,\n    url: PropTypes.string,\n    visType: PropTypes.string,\n    onInsert: PropTypes.func,\n};\n\nexport default ContentMenuItem;\n","import i18n from '@dhis2/d2-i18n';\nimport {\n    spacerContent,\n    VISUALIZATION,\n    MAP,\n    EVENT_CHART,\n    EVENT_REPORT,\n    USERS,\n    REPORTS,\n    RESOURCES,\n    APP,\n    MESSAGES,\n    TEXT,\n    SPACER,\n} from '../../modules/itemTypes';\n\nexport const singleItems = [\n    {\n        id: 'additional',\n        header: i18n.t('Additional items'),\n        items: [\n            {\n                type: TEXT,\n                name: i18n.t('Text box'),\n                content: '',\n            },\n            {\n                type: MESSAGES,\n                name: i18n.t('Messages'),\n                content: 'true',\n            },\n            {\n                type: SPACER,\n                name: i18n.t('Spacer'),\n                content: spacerContent,\n            },\n        ],\n    },\n];\n\n// categorizedItems are grouped in the item selector menu\nexport const categorizedItems = [\n    VISUALIZATION,\n    MAP,\n    EVENT_REPORT,\n    EVENT_CHART,\n    USERS,\n    REPORTS,\n    RESOURCES,\n    APP,\n];\n\n// listItemTypes are included in a single dashboard item\nexport const listItemTypes = [REPORTS, RESOURCES, USERS];\n","import React, { Component, Fragment } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport i18n from '@dhis2/d2-i18n';\nimport { MenuItem, Divider } from '@dhis2/ui-core';\n\nimport HeaderMenuItem from './HeaderMenuItem';\nimport ContentMenuItem from './ContentMenuItem';\n\nimport { tAddListItemContent } from './actions';\nimport { acAddDashboardItem } from '../../actions/editDashboard';\nimport { getItemUrl, APP, VISUALIZATION } from '../../modules/itemTypes';\nimport { categorizedItems, listItemTypes } from './selectableItems';\n\nimport classes from './styles/CategorizedMenuGroup.module.css';\n\nclass CategorizedMenuGroup extends Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            seeMore: false,\n        };\n    }\n\n    addItem = item => () => {\n        const { type, acAddDashboardItem, tAddListItemContent } = this.props;\n\n        if (type === APP) {\n            acAddDashboardItem({ type, content: item.key });\n        } else {\n            const newItem = {\n                id: item.id,\n                name: item.displayName || item.name,\n            };\n\n            if (listItemTypes.includes(type)) {\n                tAddListItemContent(type, newItem);\n            } else {\n                acAddDashboardItem({ type, content: newItem });\n            }\n        }\n    };\n\n    toggleSeeMore = () => {\n        this.setState({ seeMore: !this.state.seeMore });\n\n        this.props.onChangeItemsLimit(this.props.type);\n    };\n\n    render() {\n        const { title, type, items, hasMore } = this.props;\n        return (\n            <Fragment>\n                <HeaderMenuItem title={title} />\n                {items.map(item => {\n                    const itemUrl = getItemUrl(type, item, this.context.d2);\n                    return (\n                        <ContentMenuItem\n                            key={item.id || item.key}\n                            type={type}\n                            visType={type === VISUALIZATION ? item.type : type}\n                            name={item.displayName || item.name}\n                            onInsert={this.addItem(item)}\n                            url={itemUrl}\n                        />\n                    );\n                })}\n                {hasMore ? (\n                    <MenuItem\n                        dense\n                        key={`showmore${title}`}\n                        onClick={this.toggleSeeMore}\n                        label={\n                            <button className={classes.showMoreButton}>\n                                {this.state.seeMore\n                                    ? i18n.t('Show fewer')\n                                    : i18n.t('Show more')}\n                            </button>\n                        }\n                    />\n                ) : null}\n                <Divider margin=\"8px 0px\" />\n            </Fragment>\n        );\n    }\n}\n\nCategorizedMenuGroup.propTypes = {\n    items: PropTypes.array.isRequired,\n    title: PropTypes.string.isRequired,\n    type: PropTypes.oneOf(categorizedItems).isRequired,\n    onChangeItemsLimit: PropTypes.func.isRequired,\n    acAddDashboardItem: PropTypes.func,\n    hasMore: PropTypes.bool,\n    tAddListItemContent: PropTypes.func,\n};\n\nCategorizedMenuGroup.contextTypes = {\n    d2: PropTypes.object.isRequired,\n};\n\nexport default connect(\n    null,\n    {\n        acAddDashboardItem,\n        tAddListItemContent,\n    }\n)(CategorizedMenuGroup);\n","import { sGetEditDashboardRoot } from '../../reducers/editDashboard';\nimport { itemTypeMap } from '../../modules/itemTypes';\nimport {\n    acAddDashboardItem,\n    acUpdateDashboardItem,\n} from '../../actions/editDashboard';\n\nexport const tAddListItemContent = (type, content) => (dispatch, getState) => {\n    const state = getState();\n    const listItemType = itemTypeMap[type].propName;\n    const dashboardItems = sGetEditDashboardRoot(state).dashboardItems;\n    const dashboardItemIndex = dashboardItems.findIndex(\n        item => item.type === type\n    );\n    let dashboardItem;\n\n    // Reports/Resources/Users dashboard item type already present in dashboard\n    if (dashboardItemIndex > -1) {\n        dashboardItem = dashboardItems[dashboardItemIndex];\n        dashboardItem[listItemType].push(content);\n\n        dispatch(acUpdateDashboardItem(dashboardItem));\n    } else {\n        dashboardItem = {\n            type: type,\n            content: [content],\n        };\n\n        dispatch(acAddDashboardItem(dashboardItem));\n    }\n};\n","import React, { Fragment } from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\n\nimport HeaderMenuItem from './HeaderMenuItem';\nimport ContentMenuItem from './ContentMenuItem';\nimport { acAddDashboardItem } from '../../actions/editDashboard';\n\nexport const SinglesMenuGroup = ({ acAddDashboardItem, category }) => {\n    const addToDashboard = ({ type, content }) => () => {\n        acAddDashboardItem({ type, content });\n    };\n\n    return (\n        <Fragment>\n            <HeaderMenuItem title={category.header} />\n            {category.items.map(item => (\n                <ContentMenuItem\n                    key={item.type}\n                    type={item.type}\n                    name={item.name}\n                    onInsert={addToDashboard(item)}\n                />\n            ))}\n        </Fragment>\n    );\n};\n\nSinglesMenuGroup.propTypes = {\n    acAddDashboardItem: PropTypes.func,\n    category: PropTypes.object,\n};\n\nexport default connect(\n    null,\n    { acAddDashboardItem }\n)(SinglesMenuGroup);\n","import React, { Fragment } from 'react';\nimport PropTypes from 'prop-types';\nimport i18n from '@dhis2/d2-i18n';\nimport Popover from '@material-ui/core/Popover';\nimport { InputField, Menu } from '@dhis2/ui-core';\n\nimport CategorizedMenuGroup from './CategorizedMenuGroup';\nimport SinglesMenuGroup from './SinglesMenuGroup';\nimport { singleItems, categorizedItems } from './selectableItems';\nimport { itemTypeMap, getDefaultItemCount } from '../../modules/itemTypes';\n\nimport './styles/ItemSelector.css';\n\nconst ItemSearchField = props => (\n    <InputField\n        name=\"Dashboard item search\"\n        label={i18n.t('Search for items to add to this dashboard')}\n        type=\"text\"\n        onChange={props.onChange}\n        onFocus={props.onFocus}\n        value={props.value}\n    />\n);\n\nclass ItemSelector extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            anchorEl: null,\n            open: false,\n            maxOptions: new Set(),\n            items: undefined,\n            filter: '',\n        };\n    }\n\n    closeList = () => {\n        this.setState({ open: false, filter: '' });\n    };\n\n    openList = (_, event) => {\n        this.fetchItems();\n\n        this.setState({\n            anchorEl: event.currentTarget,\n            open: true,\n        });\n    };\n\n    setFilter = (_, event) => {\n        this.setState({ filter: event.target.value }, this.fetchItems);\n    };\n\n    getCategorizedMenuGroups = () =>\n        categorizedItems\n            .filter(type => {\n                const itemType = itemTypeMap[type];\n                return (\n                    this.state.items && this.state.items[itemType.endPointName]\n                );\n            })\n            .map(type => {\n                const itemType = itemTypeMap[type];\n                const itemCount = getDefaultItemCount(type);\n                const allItems = this.state.items[itemType.endPointName];\n                const hasMore = allItems.length > itemCount;\n                const items = this.state.maxOptions.has(itemType.id)\n                    ? allItems\n                    : allItems.slice(0, itemCount);\n\n                return (\n                    <CategorizedMenuGroup\n                        key={type}\n                        type={type}\n                        title={itemType.pluralTitle}\n                        items={items}\n                        onChangeItemsLimit={this.fetchItems}\n                        hasMore={hasMore}\n                    />\n                );\n            });\n\n    getSinglesMenuGroups = () =>\n        singleItems.map(category => (\n            <SinglesMenuGroup key={category.id} category={category} />\n        ));\n\n    getMenuGroups = () =>\n        this.getCategorizedMenuGroups().concat(this.getSinglesMenuGroups());\n\n    fetchItems = async type => {\n        if (type) {\n            const maxOptions = this.state.maxOptions;\n\n            if (maxOptions.has(type)) {\n                maxOptions.delete(type);\n            } else {\n                maxOptions.add(type);\n            }\n\n            this.setState({ maxOptions });\n        } else {\n            this.setState({\n                maxOptions: new Set(),\n            });\n        }\n\n        let queryString = '?count=11';\n        if ([...this.state.maxOptions.values()].length) {\n            queryString +=\n                '&max=' + [...this.state.maxOptions.values()].join('&max=');\n        }\n\n        const filter = this.state.filter ? `/${this.state.filter}` : '';\n\n        this.context.d2.Api.getApi()\n            .get(`dashboards/q${filter}${queryString}`)\n            .then(response => this.setState({ items: response }))\n            .catch(console.error);\n    };\n\n    render() {\n        return (\n            <Fragment>\n                <ItemSearchField\n                    value={this.state.filter}\n                    onChange={this.setFilter}\n                    onFocus={this.openList}\n                />\n                <Popover\n                    className=\"dashboard-item-selector\"\n                    open={this.state.open}\n                    onClose={this.closeList}\n                    anchorEl={this.state.anchorEl}\n                    anchorOrigin={{ horizontal: 'left', vertical: 'bottom' }}\n                    transformOrigin={{ horizontal: 'left', vertical: 'top' }}\n                    style={{ height: '70vh' }}\n                    PaperProps={{ style: { width: '700px' } }}\n                    disableAutoFocus={true}\n                    disableRestoreFocus={true}\n                >\n                    <Menu>{this.getMenuGroups()}</Menu>\n                </Popover>\n            </Fragment>\n        );\n    }\n}\n\nItemSearchField.propTypes = {\n    value: PropTypes.string,\n    onChange: PropTypes.func,\n    onFocus: PropTypes.func,\n};\n\nItemSelector.contextTypes = {\n    d2: PropTypes.object.isRequired,\n};\n\nexport default ItemSelector;\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport i18n from '@dhis2/d2-i18n';\nimport { InputField, TextAreaField } from '@dhis2/ui-core';\n\nimport ItemSelector from '../ItemSelector/ItemSelector';\nimport {\n    acSetDashboardTitle,\n    acSetDashboardDescription,\n} from '../../actions/editDashboard';\nimport { orObject } from '../../modules/util';\nimport { sGetEditDashboardRoot } from '../../reducers/editDashboard';\n\nconst styles = {\n    section: { display: 'flex', justifyContent: 'space-between' },\n    titleDescription: {\n        flex: '3',\n        marginRight: '50px',\n    },\n    title: {\n        display: 'block',\n        clear: 'both',\n    },\n    description: {\n        display: 'block',\n        clear: 'both',\n        marginTop: '15px',\n    },\n    underline: {\n        '&::before': {\n            borderBottom: `none`,\n        },\n        '&:hover::before': {\n            borderBottom: `none!important`,\n        },\n    },\n    input: {\n        backgroundColor: 'rgba(0, 0, 10, 0.05)',\n        borderRadius: '4px',\n        width: '100%',\n        '&:hover': {\n            backgroundColor: 'rgba(0, 0, 10, 0.08)',\n        },\n    },\n    itemSelector: {\n        flex: '2',\n        position: 'relative',\n    },\n};\n\nexport const EditTitleBar = ({\n    name,\n    description,\n    onChangeTitle,\n    onChangeDescription,\n    classes,\n}) => {\n    const updateTitle = (_, e) => {\n        onChangeTitle(e.target.value);\n    };\n\n    const updateDescription = (_, e) => {\n        onChangeDescription(e.target.value);\n    };\n\n    return (\n        <section className={classes.section}>\n            <div className={classes.titleDescription}>\n                <InputField\n                    className={classes.title}\n                    name=\"Dashboard title input\"\n                    label={i18n.t('Dashboard title')}\n                    type=\"text\"\n                    onChange={updateTitle}\n                    value={name}\n                />\n                <TextAreaField\n                    className={classes.description}\n                    name=\"Dashboard description input\"\n                    label={i18n.t('Dashboard description')}\n                    onChange={updateDescription}\n                    value={description}\n                />\n            </div>\n            <div className={classes.itemSelector}>\n                <ItemSelector />\n            </div>\n        </section>\n    );\n};\n\nconst mapStateToProps = state => {\n    const selectedDashboard = orObject(sGetEditDashboardRoot(state));\n\n    return {\n        name: selectedDashboard.name,\n        description: selectedDashboard.description,\n    };\n};\n\nconst mapDispatchToProps = {\n    onChangeTitle: acSetDashboardTitle,\n    onChangeDescription: acSetDashboardDescription,\n};\n\nexport default connect(\n    mapStateToProps,\n    mapDispatchToProps\n)(withStyles(styles)(EditTitleBar));\n\nEditTitleBar.propTypes = {\n    onChangeDescription: PropTypes.func.isRequired,\n    onChangeTitle: PropTypes.func.isRequired,\n    classes: PropTypes.object,\n    description: PropTypes.string,\n    name: PropTypes.string,\n};\n\nEditTitleBar.defaultProps = {\n    name: '',\n    description: '',\n};\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nimport { Button } from '@dhis2/ui-core';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\n\nimport i18n from '@dhis2/d2-i18n';\n\nimport {\n    PeriodDimension,\n    DynamicDimension,\n    OrgUnitDimension,\n    DIMENSION_ID_PERIOD,\n    DIMENSION_ID_ORGUNIT,\n} from '@dhis2/analytics';\n\nconst peId = DIMENSION_ID_PERIOD;\nconst ouId = DIMENSION_ID_ORGUNIT;\n\nclass FilterDialog extends Component {\n    onConfirm = id => () => this.props.onConfirm(id);\n\n    dialogContent() {\n        const { displayNameProperty, dimension, selectedItems } = this.props;\n        const dialogId = dimension.id;\n\n        const commonProps = {\n            d2: this.context.d2,\n            onSelect: this.props.onSelect,\n            onDeselect: this.props.onDeselect,\n            onReorder: this.props.onReorder,\n        };\n\n        switch (dialogId) {\n            case peId: {\n                return (\n                    <PeriodDimension\n                        selectedPeriods={selectedItems}\n                        {...commonProps}\n                    />\n                );\n            }\n            case ouId:\n                return (\n                    <OrgUnitDimension\n                        displayNameProperty={displayNameProperty}\n                        ouItems={selectedItems}\n                        {...commonProps}\n                    />\n                );\n            default:\n                return (\n                    <DynamicDimension\n                        selectedItems={selectedItems}\n                        dialogId={dialogId}\n                        dialogTitle={dimension.name}\n                        {...commonProps}\n                    />\n                );\n        }\n    }\n\n    render() {\n        const { dimension, onClose } = this.props;\n        const dialogId = dimension.id;\n\n        return (\n            <Dialog\n                open={!!dialogId}\n                maxWidth=\"lg\"\n                disableEnforceFocus\n                onClose={onClose}\n            >\n                {dialogId && this.dialogContent()}\n                <DialogActions>\n                    <Button kind=\"secondary\" onClick={onClose}>\n                        {i18n.t('Cancel')}\n                    </Button>\n                    <Button kind=\"primary\" onClick={this.onConfirm(dialogId)}>\n                        {i18n.t('Confirm')}\n                    </Button>\n                </DialogActions>\n            </Dialog>\n        );\n    }\n}\n\nFilterDialog.propTypes = {\n    dimension: PropTypes.object,\n    displayNameProperty: PropTypes.string,\n    selectedItems: PropTypes.array,\n    onClose: PropTypes.func,\n    onConfirm: PropTypes.func,\n    onDeselect: PropTypes.func,\n    onReorder: PropTypes.func,\n    onSelect: PropTypes.func,\n};\n\nFilterDialog.contextTypes = {\n    d2: PropTypes.object,\n};\n\nexport default FilterDialog;\n","export const SET_ACTIVE_MODAL_DIMENSION = 'SET_ACTIVE_MODAL_DIMENSION';\nexport const CLEAR_ACTIVE_MODAL_DIMENSION = 'CLEAR_ACTIVE_MODAL_DIMENSION';\n\nexport const DEFAULT_STATE_ACTIVE_MODAL_DIMENSION = {};\n\nexport default (state = DEFAULT_STATE_ACTIVE_MODAL_DIMENSION, action) => {\n    switch (action.type) {\n        case SET_ACTIVE_MODAL_DIMENSION: {\n            return action.value;\n        }\n        case CLEAR_ACTIVE_MODAL_DIMENSION: {\n            return DEFAULT_STATE_ACTIVE_MODAL_DIMENSION;\n        }\n        default:\n            return state;\n    }\n};\n\nexport const sGetActiveModalDimension = state => state.activeModalDimension;\n","import {\n    SET_ACTIVE_MODAL_DIMENSION,\n    CLEAR_ACTIVE_MODAL_DIMENSION,\n} from '../reducers/activeModalDimension';\n\nexport const acSetActiveModalDimension = value => ({\n    type: SET_ACTIVE_MODAL_DIMENSION,\n    value,\n});\n\nexport const acClearActiveModalDimension = () => ({\n    type: CLEAR_ACTIVE_MODAL_DIMENSION,\n});\n","import React, { Component, Fragment } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport Popover from '@material-ui/core/Popover';\nimport ArrowDropDownIcon from '@material-ui/icons/ArrowDropDown';\nimport { withTheme } from '@material-ui/core/styles';\n\nimport i18n from '@dhis2/d2-i18n';\nimport { DimensionsPanel } from '@dhis2/analytics';\n\nimport { Button } from '@dhis2/ui-core';\nimport FilterDialog from './FilterDialog';\n\nimport { sGetSettingsDisplayNameProperty } from '../../reducers/settings';\nimport { sGetActiveModalDimension } from '../../reducers/activeModalDimension';\nimport { sGetDimensions } from '../../reducers/dimensions';\nimport { sGetFiltersKeys } from '../../reducers/itemFilters';\nimport { sGetEditItemFiltersRoot } from '../../reducers/editItemFilters';\nimport { acAddItemFilter, acRemoveItemFilter } from '../../actions/itemFilters';\nimport {\n    acRemoveEditItemFilter,\n    acSetEditItemFilters,\n} from '../../actions/editItemFilters';\nimport {\n    acClearActiveModalDimension,\n    acSetActiveModalDimension,\n} from '../../actions/activeModalDimension';\n\nclass FilterSelector extends Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            anchorEl: null,\n        };\n    }\n\n    openPanel = (_, event) => {\n        this.setState({ anchorEl: event.currentTarget });\n    };\n\n    closePanel = () => {\n        this.setState({ anchorEl: null });\n    };\n\n    closeDialog = () => {\n        this.setState({ anchorEl: null });\n\n        this.props.clearActiveModalDimension();\n    };\n\n    selectDimension = id => {\n        this.props.setActiveModalDimension(\n            this.props.dimensions.find(dimension => dimension.id === id)\n        );\n    };\n\n    onSelectItems = ({ dimensionId, items }) => {\n        this.props.setEditItemFilters({\n            ...this.props.selectedItems,\n            [dimensionId]: items,\n        });\n    };\n\n    onDeselectItems = ({ dimensionId, itemIdsToRemove }) => {\n        const oldList = this.props.selectedItems[dimensionId] || [];\n        const newList = oldList.filter(\n            item => !itemIdsToRemove.includes(item.id)\n        );\n\n        if (newList.length) {\n            this.props.setEditItemFilters({\n                ...this.props.selectedItems,\n                [dimensionId]: newList,\n            });\n        } else {\n            this.props.removeEditItemFilter(dimensionId);\n        }\n    };\n\n    onReorderItems = ({ dimensionId, itemIds }) => {\n        const oldList = this.props.selectedItems[dimensionId] || [];\n        const reorderedList = itemIds.map(id =>\n            oldList.find(item => item.id === id)\n        );\n\n        this.props.setEditItemFilters({\n            ...this.props.selectedItems,\n            [dimensionId]: reorderedList,\n        });\n    };\n\n    saveFilter = id => {\n        const filterItems = this.props.selectedItems[id];\n\n        if (filterItems && filterItems.length) {\n            this.props.addItemFilter({\n                id,\n                value: [...filterItems],\n            });\n        } else {\n            this.props.removeItemFilter(id);\n        }\n\n        this.closeDialog();\n    };\n\n    render() {\n        const {\n            theme,\n            displayNameProperty,\n            dimension,\n            dimensions,\n            selectedDimensions,\n            selectedItems,\n        } = this.props;\n\n        return (\n            <Fragment>\n                <Button onClick={this.openPanel}>\n                    {i18n.t('Add filter')}\n                    <ArrowDropDownIcon />\n                </Button>\n                <Popover\n                    open={Boolean(this.state.anchorEl)}\n                    anchorEl={this.state.anchorEl}\n                    anchorOrigin={{ vertical: 'bottom', horizontal: 'left' }}\n                    onClose={this.closePanel}\n                    style={{\n                        height: '100%',\n                        fontFamily: theme.typography.fontFamily,\n                    }}\n                >\n                    <DimensionsPanel\n                        style={{ width: '320px' }}\n                        dimensions={dimensions}\n                        onDimensionClick={this.selectDimension}\n                        selectedIds={selectedDimensions}\n                    />\n                </Popover>\n                {dimension ? (\n                    <FilterDialog\n                        displayNameProperty={displayNameProperty}\n                        dimension={dimension}\n                        selectedItems={selectedItems[dimension.id] || []}\n                        onSelect={this.onSelectItems}\n                        onDeselect={this.onDeselectItems}\n                        onReorder={this.onReorderItems}\n                        onClose={this.closeDialog}\n                        onConfirm={this.saveFilter}\n                    />\n                ) : null}\n            </Fragment>\n        );\n    }\n}\n\nconst mapStateToProps = state => ({\n    displayNameProperty: sGetSettingsDisplayNameProperty(state),\n    dimension: sGetActiveModalDimension(state),\n    dimensions: sGetDimensions(state),\n    selectedDimensions: sGetFiltersKeys(state),\n    selectedItems: sGetEditItemFiltersRoot(state),\n});\n\nFilterSelector.propTypes = {\n    addItemFilter: PropTypes.func,\n    clearActiveModalDimension: PropTypes.func,\n    dimension: PropTypes.object,\n    dimensions: PropTypes.array,\n    displayNameProperty: PropTypes.string,\n    removeEditItemFilter: PropTypes.func,\n    removeItemFilter: PropTypes.func,\n    selectedDimensions: PropTypes.array,\n    selectedItems: PropTypes.object,\n    setActiveModalDimension: PropTypes.func,\n    setEditItemFilters: PropTypes.func,\n    theme: PropTypes.object,\n};\n\nexport default connect(\n    mapStateToProps,\n    {\n        clearActiveModalDimension: acClearActiveModalDimension,\n        setActiveModalDimension: acSetActiveModalDimension,\n        addItemFilter: acAddItemFilter,\n        removeItemFilter: acRemoveItemFilter,\n        removeEditItemFilter: acRemoveEditItemFilter,\n        setEditItemFilters: acSetEditItemFilters,\n    }\n)(withTheme()(FilterSelector));\n","import React, { Component } from 'react';\nimport InfoOutlineIcon from '@material-ui/icons/InfoOutlined';\nimport { colors } from '@dhis2/ui-core';\nimport PropTypes from 'prop-types';\n\nclass Info extends Component {\n    show = false;\n\n    toggle() {\n        this.show = !this.show;\n        return this.show;\n    }\n\n    render() {\n        return (\n            <div onClick={() => this.props.onClick(this.toggle())}>\n                <InfoOutlineIcon style={{ fill: colors.grey600 }} />\n            </div>\n        );\n    }\n}\n\nInfo.propTypes = {\n    onClick: PropTypes.func,\n};\n\nexport default Info;\n","import React, { Component, Fragment } from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport { Link } from 'react-router-dom';\nimport i18n from '@dhis2/d2-i18n';\nimport SharingDialog from '@dhis2/d2-ui-sharing-dialog';\nimport Star from '@material-ui/icons/Star';\nimport StarBorder from '@material-ui/icons/StarBorder';\n\nimport { orObject } from '../../modules/util';\nimport { tStarDashboard } from '../../actions/dashboards';\nimport { acSetSelectedShowDescription } from '../../actions/selected';\nimport FilterSelector from '../ItemFilter/FilterSelector';\nimport { Button } from '@dhis2/ui-core';\nimport Info from './Info';\nimport {\n    sGetSelectedId,\n    sGetSelectedShowDescription,\n} from '../../reducers/selected';\nimport {\n    sGetDashboardById,\n    sGetDashboardItems,\n} from '../../reducers/dashboards';\nimport { colors } from '@dhis2/ui-core';\n\nconst NO_DESCRIPTION = i18n.t('No description');\n\nconst styles = {\n    actions: {\n        display: 'flex',\n        alignItems: 'center',\n        marginLeft: '20px',\n    },\n    starIcon: {\n        fill: colors.grey600,\n    },\n    textButton: {\n        minWidth: '30px',\n        top: '1px',\n    },\n    editLink: {\n        display: 'inline-block',\n        verticalAlign: 'top',\n        textDecoration: 'none',\n        marginRight: '4px',\n    },\n    titleBar: {\n        display: 'flex',\n        alignItems: 'flex-start',\n    },\n    titleBarIcon: {\n        marginLeft: 5,\n        position: 'relative',\n        top: 1,\n        cursor: 'pointer',\n    },\n};\n\nclass ViewTitleBar extends Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            sharingDialogIsOpen: false,\n        };\n    }\n\n    toggleSharingDialog = () =>\n        this.setState({ sharingDialogIsOpen: !this.state.sharingDialogIsOpen });\n\n    render() {\n        const {\n            id,\n            name,\n            description,\n            access,\n            style,\n            showDescription,\n            starred,\n            onStarClick,\n            onInfoClick,\n            classes,\n        } = this.props;\n\n        const titleStyle = Object.assign({}, style.title, {\n            cursor: 'default',\n            userSelect: 'text',\n            top: '7px',\n        });\n\n        const StarIcon = starred ? Star : StarBorder;\n\n        return (\n            <Fragment>\n                <div className={classes.titleBar}>\n                    <span style={titleStyle}>{name}</span>\n                    <div className={classes.actions}>\n                        <div\n                            className={classes.titleBarIcon}\n                            onClick={onStarClick}\n                        >\n                            <StarIcon className={classes.starIcon} />\n                        </div>\n                        <div className={classes.titleBarIcon}>\n                            <Info onClick={onInfoClick} />\n                        </div>\n                        <div style={{ marginLeft: '10px' }}>\n                            {access.update ? (\n                                <Link\n                                    className={classes.editLink}\n                                    to={`/${id}/edit`}\n                                >\n                                    <Button>{i18n.t('Edit')}</Button>\n                                </Link>\n                            ) : null}\n                            {access.manage ? (\n                                <span style={{ marginRight: '4px' }}>\n                                    <Button onClick={this.toggleSharingDialog}>\n                                        {i18n.t('Share')}\n                                    </Button>\n                                </span>\n                            ) : null}\n                            <span style={{ marginRight: '4px' }}>\n                                <FilterSelector />\n                            </span>\n                        </div>\n                    </div>\n                </div>\n                {showDescription ? (\n                    <div\n                        className=\"dashboard-description\"\n                        style={Object.assign(\n                            { paddingTop: '5px', paddingBottom: '5px' },\n                            style.description,\n                            !description ? { color: '#888' } : {}\n                        )}\n                    >\n                        {description || NO_DESCRIPTION}\n                    </div>\n                ) : null}\n                {id ? (\n                    <SharingDialog\n                        d2={this.context.d2}\n                        id={id}\n                        type=\"dashboard\"\n                        open={this.state.sharingDialogIsOpen}\n                        onRequestClose={this.toggleSharingDialog}\n                    />\n                ) : null}\n            </Fragment>\n        );\n    }\n}\n\nconst mapStateToProps = state => {\n    const id = sGetSelectedId(state);\n    const dashboard = orObject(sGetDashboardById(state, id));\n\n    return {\n        id,\n        name: dashboard.displayName,\n        description: dashboard.displayDescription,\n        dashboardItems: sGetDashboardItems(state),\n        showDescription: sGetSelectedShowDescription(state),\n        starred: dashboard.starred,\n        access: orObject(dashboard.access),\n    };\n};\n\nconst mergeProps = (stateProps, dispatchProps, ownProps) => {\n    const { id, starred, showDescription } = stateProps;\n    const { dispatch } = dispatchProps;\n\n    return {\n        ...stateProps,\n        ...ownProps,\n        onStarClick: () => dispatch(tStarDashboard(id, !starred)),\n        onInfoClick: () =>\n            dispatch(acSetSelectedShowDescription(!showDescription)),\n    };\n};\n\nexport default connect(\n    mapStateToProps,\n    null,\n    mergeProps\n)(withStyles(styles)(ViewTitleBar));\n\nViewTitleBar.propTypes = {\n    access: PropTypes.object,\n    classes: PropTypes.object,\n    description: PropTypes.string,\n    id: PropTypes.string,\n    name: PropTypes.string,\n    showDescription: PropTypes.bool,\n    starred: PropTypes.bool,\n    style: PropTypes.object,\n    onInfoClick: PropTypes.func,\n    onStarClick: PropTypes.func,\n};\n\nViewTitleBar.defaultProps = {\n    name: '',\n    description: '',\n    starred: false,\n    showDescription: false,\n    onInfoClick: null,\n};\n\nViewTitleBar.contextTypes = {\n    d2: PropTypes.object,\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport { colors } from '@dhis2/ui-core';\nimport EditTitleBar from './EditTitleBar';\nimport ViewTitleBar from './ViewTitleBar';\n\nimport './TitleBar.css';\n\nconst style = {\n    title: {\n        position: 'relative',\n        fontSize: 21,\n        fontWeight: 500,\n        color: colors.black,\n        minWidth: 50,\n    },\n    description: {\n        fontSize: 14,\n        color: colors.grey800,\n    },\n};\n\nconst TitleBar = ({ edit }) => {\n    return (\n        <div\n            className=\"titlebar-wrapper\"\n            style={{\n                padding: '20px 15px 5px 10px',\n            }}\n        >\n            {edit ? (\n                <EditTitleBar style={style} />\n            ) : (\n                <ViewTitleBar style={style} />\n            )}\n        </div>\n    );\n};\n\nTitleBar.propTypes = {\n    edit: PropTypes.bool,\n};\n\nexport default TitleBar;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nimport i18n from '@dhis2/d2-i18n';\n\nimport * as pluginManager from './plugin';\nimport { getBaseUrl, orObject } from '../../../modules/util';\nimport { getGridItemDomId } from '../../ItemGrid/gridUtil';\n\nconst pluginCredentials = d2 => {\n    return {\n        baseUrl: getBaseUrl(d2),\n        auth: d2.Api.getApi().defaultHeaders.Authorization,\n    };\n};\n\nclass DefaultPlugin extends Component {\n    pluginCredentials = null;\n\n    constructor(props, context) {\n        super(props);\n\n        this.d2 = context.d2;\n    }\n\n    shouldPluginReload = prevProps => {\n        // TODO - fix this hack, to handle bug with multiple\n        // rerendering while switching between dashboards.\n        //\n        // To determine if the rendering is happening because of a\n        // dashboard switch, check if the item reference has changed.\n        const reloadAllowed = this.props.item === prevProps.item;\n\n        const filtersChanged = prevProps.itemFilters !== this.props.itemFilters;\n        const vis = orObject(this.props.visualization);\n        const prevVis = orObject(prevProps.visualization);\n        const visChanged =\n            vis.id !== prevVis.id || vis.activeType !== prevVis.activeType;\n\n        return reloadAllowed && (visChanged || filtersChanged);\n    };\n\n    reloadPlugin = prevProps => {\n        if (\n            pluginManager.pluginIsAvailable(\n                this.props.item,\n                this.props.visualization\n            ) &&\n            this.shouldPluginReload(prevProps)\n        ) {\n            const prevVis = orObject(prevProps.visualization);\n            const currentVis = this.props.visualization;\n\n            const useActiveType =\n                currentVis.activeType !== prevVis.activeType ||\n                currentVis.activeType !== this.props.item.type;\n\n            if (\n                useActiveType ||\n                this.props.itemFilters !== prevProps.itemFilters\n            ) {\n                pluginManager.unmount(\n                    this.props.item,\n                    prevVis.activeType || this.props.item.type\n                );\n\n                pluginManager.load(this.props.item, this.props.visualization, {\n                    credentials: this.pluginCredentials,\n                    activeType: useActiveType ? currentVis.activeType : null,\n                });\n            }\n        }\n    };\n\n    componentDidMount() {\n        this.pluginCredentials = pluginCredentials(this.d2);\n\n        if (\n            pluginManager.pluginIsAvailable(\n                this.props.item,\n                this.props.visualization\n            )\n        ) {\n            pluginManager.load(this.props.item, this.props.visualization, {\n                credentials: this.pluginCredentials,\n                activeType: !this.props.editMode ? this.getActiveType() : null,\n            });\n        }\n    }\n\n    componentDidUpdate(prevProps) {\n        this.reloadPlugin(prevProps);\n    }\n\n    getActiveType = () =>\n        this.props.visualization.activeType || this.props.item.type;\n\n    render() {\n        const { classes, item, visualization, style } = this.props;\n        const pluginIsAvailable = pluginManager.pluginIsAvailable(\n            item,\n            visualization\n        );\n\n        return pluginIsAvailable ? (\n            <div id={getGridItemDomId(item.id)} style={style} />\n        ) : (\n            <div className={classes.textDiv}>\n                {i18n.t('Unable to load the plugin for this item')}\n            </div>\n        );\n    }\n}\n\nDefaultPlugin.contextTypes = {\n    d2: PropTypes.object,\n};\n\nDefaultPlugin.propTypes = {\n    classes: PropTypes.object,\n    editMode: PropTypes.bool,\n    item: PropTypes.object,\n    itemFilters: PropTypes.object,\n    style: PropTypes.object,\n    visualization: PropTypes.object,\n};\n\nDefaultPlugin.defaultProps = {\n    style: {},\n    item: {},\n    itemFilters: {},\n    visualization: {},\n};\n\nexport default DefaultPlugin;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport i18n from '@dhis2/d2-i18n';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport { colors } from '@dhis2/ui-core';\n\nimport classes from './styles/DeleteItemButton.module.css';\n\nconst DeleteItemButton = ({ onClick }) => (\n    <button\n        type=\"button\"\n        className={classes.deleteItemButton}\n        onClick={onClick}\n        title={i18n.t(`Delete item`)}\n    >\n        <DeleteIcon style={{ fill: colors.red500 }} />\n    </button>\n);\n\nDeleteItemButton.propTypes = {\n    onClick: PropTypes.func,\n};\n\nexport default DeleteItemButton;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\n\nimport { sGetIsEditing } from '../../reducers/editDashboard';\nimport { acRemoveDashboardItem } from '../../actions/editDashboard';\nimport DeleteItemButton from './DeleteItemButton';\n\nimport classes from './styles/ItemHeader.module.css';\n\nconst ItemHeader = props => {\n    const {\n        title,\n        editMode,\n        actionButtons,\n        itemId,\n        acRemoveDashboardItem,\n    } = props;\n\n    const handleDeleteItem = () => acRemoveDashboardItem(itemId);\n\n    return (\n        <div className={classes.itemHeaderWrap}>\n            <p className={classes.itemTitle}>{title}</p>\n            {editMode ? (\n                <div className={classes.itemActionsWrap}>\n                    <DeleteItemButton onClick={handleDeleteItem} />\n                </div>\n            ) : (\n                actionButtons && (\n                    <div className={classes.itemActionsWrap}>\n                        {actionButtons}\n                    </div>\n                )\n            )}\n        </div>\n    );\n};\n\nItemHeader.propTypes = {\n    acRemoveDashboardItem: PropTypes.func,\n    actionButtons: PropTypes.node,\n    editMode: PropTypes.bool,\n    itemId: PropTypes.string,\n    title: PropTypes.string,\n};\n\nconst mapStateToProps = state => ({\n    editMode: sGetIsEditing(state),\n});\n\nconst mapDispatchToProps = {\n    acRemoveDashboardItem,\n};\n\nexport default connect(\n    mapStateToProps,\n    mapDispatchToProps\n)(ItemHeader);\n","import React from 'react';\n\nexport const ThreeDots = () => (\n    <svg\n        height=\"18\"\n        viewBox=\"0 0 18 18\"\n        width=\"18\"\n        xmlns=\"http://www.w3.org/2000/svg\"\n    >\n        <path\n            d=\"m4 7.5c-.83 0-1.5.67-1.5 1.5s.67 1.5 1.5 1.5 1.5-.67 1.5-1.5-.67-1.5-1.5-1.5zm10 0c-.83 0-1.5.67-1.5 1.5s.67 1.5 1.5 1.5 1.5-.67 1.5-1.5-.67-1.5-1.5-1.5zm-5 0c-.83 0-1.5.67-1.5 1.5s.67 1.5 1.5 1.5 1.5-.67 1.5-1.5-.67-1.5-1.5-1.5z\"\n            fill=\"#6e7a8a\"\n        />\n    </svg>\n);\n\nexport const SpeechBubble = () => (\n    <svg\n        height=\"20\"\n        viewBox=\"0 0 20 20\"\n        width=\"20\"\n        xmlns=\"http://www.w3.org/2000/svg\"\n    >\n        <path\n            d=\"m20 2h-16c-1.1 0-1.99.9-1.99 2l-.01 18 4-4h14c1.1 0 2-.9 2-2v-12c0-1.1-.9-2-2-2zm-2 12h-12v-2h12zm0-3h-12v-2h12zm0-3h-12v-2h12z\"\n            fill=\"#6e7a8a\"\n            fillRule=\"evenodd\"\n            transform=\"translate(-2 -2)\"\n        />\n    </svg>\n);\n","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\n\nimport { isSingleValue, isYearOverYear } from '@dhis2/analytics';\nimport { Button, Menu, MenuItem, Divider, colors } from '@dhis2/ui-core';\nimport i18n from '@dhis2/d2-i18n';\nimport Popover from '@material-ui/core/Popover';\nimport TableIcon from '@material-ui/icons/ViewList';\nimport ChartIcon from '@material-ui/icons/InsertChart';\nimport MapIcon from '@material-ui/icons/Public';\nimport LaunchIcon from '@material-ui/icons/Launch';\n\nimport { ThreeDots, SpeechBubble } from './assets/icons';\nimport { pluginIsAvailable, getLink } from './plugin';\nimport {\n    CHART,\n    MAP,\n    REPORT_TABLE,\n    EVENT_CHART,\n    EVENT_REPORT,\n    isTrackerDomainType,\n    hasMapView,\n    getAppName,\n} from '../../../modules/itemTypes';\n\nconst iconFill = { fill: colors.grey600 };\n\nconst ItemHeaderButtons = props => {\n    const [anchorEl, setAnchorEl] = useState(null);\n\n    const { item, visualization, onSelectActiveType, d2, activeType } = props;\n\n    const isTrackerType = isTrackerDomainType(item.type);\n\n    const onViewTable = () => {\n        onSelectActiveType(isTrackerType ? EVENT_REPORT : REPORT_TABLE);\n        handleClose();\n    };\n\n    const onViewChart = () => {\n        onSelectActiveType(isTrackerType ? EVENT_CHART : CHART);\n        handleClose();\n    };\n\n    const onViewMap = () => {\n        onSelectActiveType(MAP);\n        handleClose();\n    };\n\n    const itemHasMapView = () => hasMapView(item.type);\n\n    const handleMenuClick = (_, event) => setAnchorEl(event.currentTarget);\n\n    const handleInterpretationClick = () => {\n        props.onToggleFooter();\n        if (anchorEl !== null) {\n            handleClose();\n        }\n    };\n\n    const handleClose = () => setAnchorEl(null);\n\n    const type = visualization.type || item.type;\n    const canViewAs = !isSingleValue(type) && !isYearOverYear(type);\n\n    const interpretationMenuLabel = props.activeFooter\n        ? i18n.t(`Hide interpretations and details`)\n        : i18n.t(`Show interpretations and details`);\n\n    const ViewAsMenuItems = () => (\n        <>\n            <MenuItem\n                dense\n                active={activeType === CHART}\n                label={i18n.t('View as Chart')}\n                onClick={onViewChart}\n                icon={<ChartIcon style={iconFill} />}\n            />\n            <MenuItem\n                dense\n                active={[REPORT_TABLE, EVENT_REPORT].includes(activeType)}\n                label={i18n.t('View as Table')}\n                onClick={onViewTable}\n                icon={<TableIcon style={iconFill} />}\n            />\n            {itemHasMapView() && (\n                <MenuItem\n                    dense\n                    active={activeType === MAP}\n                    label={i18n.t('View as Map')}\n                    onClick={onViewMap}\n                    icon={<MapIcon style={iconFill} />}\n                />\n            )}\n        </>\n    );\n\n    return pluginIsAvailable(item, visualization) ? (\n        <>\n            <Button small secondary onClick={handleMenuClick}>\n                <ThreeDots />\n            </Button>\n            <Popover\n                open={Boolean(anchorEl)}\n                onClose={handleClose}\n                anchorEl={anchorEl}\n            >\n                <Menu>\n                    {canViewAs && (\n                        <>\n                            <ViewAsMenuItems />\n                            <Divider />\n                        </>\n                    )}\n                    <MenuItem\n                        dense\n                        icon={<LaunchIcon style={{ fill: '#6e7a8a' }} />}\n                        label={i18n.t('Open in {{appName}} app', {\n                            appName: getAppName(item.type),\n                        })}\n                        href={getLink(item, d2)}\n                        target=\"_blank\"\n                    />\n                    <MenuItem\n                        dense\n                        icon={<SpeechBubble />}\n                        label={interpretationMenuLabel}\n                        onClick={handleInterpretationClick}\n                    />\n                </Menu>\n            </Popover>\n        </>\n    ) : null;\n};\n\nItemHeaderButtons.propTypes = {\n    activeFooter: PropTypes.bool,\n    activeType: PropTypes.string,\n    d2: PropTypes.object,\n    item: PropTypes.object,\n    visualization: PropTypes.object,\n    onSelectActiveType: PropTypes.func,\n    onToggleFooter: PropTypes.func,\n};\n\nexport default ItemHeaderButtons;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { colors } from '@dhis2/ui-core';\nimport { getId } from './plugin';\nimport InterpretationsComponent from '@dhis2/d2-ui-interpretations';\n\nconst style = {\n    scrollContainer: {\n        overflowY: 'auto',\n        height: '340px',\n    },\n    line: {\n        margin: '-1px 0px 0px',\n        height: '1px',\n        border: 'none',\n        backgroundColor: colors.grey100,\n    },\n};\n\nclass ItemFooter extends Component {\n    render() {\n        const objectId = getId(this.props.item);\n\n        return (\n            <div className=\"dashboard-item-footer\">\n                <hr style={style.line} />\n                <div style={style.scrollContainer}>\n                    <InterpretationsComponent\n                        d2={this.context.d2}\n                        item={this.props.item}\n                        type={this.props.item.type.toLowerCase()}\n                        id={objectId}\n                        appName=\"dashboard\"\n                    />\n                </div>\n            </div>\n        );\n    }\n}\n\nItemFooter.contextTypes = {\n    d2: PropTypes.object.isRequired,\n};\n\nItemFooter.propTypes = {\n    item: PropTypes.object.isRequired,\n};\n\nexport default ItemFooter;\n","// Note that this ignores discrepancies in 'this', so shouldn't be used with bound functions\n// This is useful instead of lodash/memoize when we only need to memoize a single value\n// Inspiration: https://github.com/alexreardon/memoize-one\n\nconst memoizeOne = fn => {\n    let lastArgs = undefined;\n    let lastValue = undefined;\n\n    return (...args) => {\n        if (\n            lastArgs &&\n            args.length === lastArgs.length &&\n            args.every((arg, i) => arg === lastArgs[i])\n        ) {\n            return lastValue;\n        }\n        lastArgs = args;\n        lastValue = fn(...args);\n        return lastValue;\n    };\n};\n\nexport default memoizeOne;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { withStyles } from '@material-ui/core/styles';\nimport VisualizationPlugin from '@dhis2/data-visualizer-plugin';\n\nimport i18n from '@dhis2/d2-i18n';\nimport uniqueId from 'lodash/uniqueId';\n\nimport DefaultPlugin from './DefaultPlugin';\nimport ItemHeader from '../ItemHeader';\nimport ItemHeaderButtons from './ItemHeaderButtons';\nimport ItemFooter from './ItemFooter';\nimport * as pluginManager from './plugin';\nimport { sGetVisualization } from '../../../reducers/visualizations';\nimport { sGetItemFiltersRoot } from '../../../reducers/itemFilters';\nimport {\n    acAddVisualization,\n    acSetActiveVisualizationType,\n} from '../../../actions/visualizations';\nimport { VISUALIZATION, MAP, CHART, REPORT_TABLE } from '../../../modules/itemTypes';\n\nimport { colors } from '@dhis2/ui-core';\nimport memoizeOne from '../../../modules/memoizeOne';\nimport { getVisualizationConfig } from './plugin';\n\nconst HEADER_HEIGHT = 45;\n\nconst styles = {\n    icon: {\n        width: 16,\n        height: 16,\n        marginLeft: 3,\n        cursor: 'pointer',\n        fill: colors.grey600,\n    },\n    title: {\n        overflow: 'hidden',\n        maxWidth: '85%',\n        textOverflow: 'ellipsis',\n        whiteSpace: 'nowrap',\n    },\n    textDiv: {\n        fontSize: '14px',\n        fontStretch: 'normal',\n        padding: '10px',\n        lineHeight: '20px',\n    },\n};\n\nconst applyFilters = (visualization, filters) => {\n    if (!Object.keys(filters).length) {\n        return visualization;\n    }\n\n    // deep clone objects in filters to avoid changing the visualization in the Redux store\n    const visRows = visualization.rows.map(obj => ({ ...obj }));\n    const visColumns = visualization.columns.map(obj => ({ ...obj }));\n    const visFilters = visualization.filters.map(obj => ({ ...obj }));\n\n    Object.keys(filters).forEach(dimensionId => {\n        if (filters[dimensionId]) {\n            let dimensionFound = false;\n\n            [visRows, visColumns, visFilters].forEach(dimensionObjects =>\n                dimensionObjects\n                    .filter(obj => obj.dimension === dimensionId)\n                    .forEach(obj => {\n                        dimensionFound = true;\n                        obj.items = filters[dimensionId];\n                    })\n            );\n\n            // add dimension to filters if not already present elsewhere\n            if (!dimensionFound) {\n                visFilters.push({\n                    dimension: dimensionId,\n                    items: filters[dimensionId],\n                });\n            }\n        }\n    });\n\n    return {\n        ...visualization,\n        rows: visRows,\n        columns: visColumns,\n        filters: visFilters,\n    };\n};\n\nexport class Item extends Component {\n    state = {\n        showFooter: false,\n        configLoaded: false,\n    };\n\n    constructor(props, context) {\n        super(props);\n\n        this.d2 = context.d2;\n\n        this.contentRef = React.createRef();\n    }\n\n    async componentDidMount() {\n        this.props.onVisualizationLoaded(\n            // TODO do not call fetch on the pluginManager, do it here as the manager will eventually be removed...\n            await pluginManager.fetch(this.props.item)\n        );\n\n        this.setState({\n            configLoaded: true,\n        });\n    }\n\n    getUniqueKey = memoizeOne(() => uniqueId());\n\n    pluginCredentials = null;\n\n    getPluginComponent = () => {\n        const activeType = this.getActiveType();\n        const visualization = getVisualizationConfig(\n            this.props.visualization,\n            this.props.item.type,\n            activeType\n        );\n\n        if (!visualization) {\n            return (\n                <div className={this.props.classes.textDiv}>\n                    {i18n.t('No data to display')}\n                </div>\n            );\n        }\n\n        const props = {\n            ...this.props,\n            visualization,\n            style: this.getContentStyle(),\n        };\n\n        switch (activeType) {\n            case VISUALIZATION:\n            case CHART:\n            case REPORT_TABLE: {\n                return (\n                    <VisualizationPlugin\n                        d2={this.d2}\n                        visualization={applyFilters(\n                            visualization,\n                            props.itemFilters\n                        )}\n                        forDashboard={true}\n                        style={props.style}\n                    />\n                );\n            }\n            case MAP: {\n                if (props.item.type === MAP) {\n                    // apply filters only to thematic and event layers\n                    // for maps AO\n                    const mapViews = props.visualization.mapViews.map(obj => {\n                        if (\n                            obj.layer.includes('thematic') ||\n                            obj.layer.includes('event')\n                        ) {\n                            return applyFilters(obj, props.itemFilters);\n                        }\n\n                        return obj;\n                    });\n\n                    props.visualization = {\n                        ...props.visualization,\n                        mapViews,\n                    };\n                } else {\n                    // this is the case of a non map AO passed to the maps plugin\n                    // due to a visualization type switch in dashboard item\n                    // maps plugin takes care of converting the AO to a suitable format\n                    props.visualization = applyFilters(\n                        props.visualization,\n                        props.itemFilters\n                    );\n                }\n\n                return <DefaultPlugin {...props} />;\n            }\n            default: {\n                props.visualization = applyFilters(\n                    props.visualization,\n                    props.itemFilters\n                );\n\n                return <DefaultPlugin {...props} />;\n            }\n        }\n    };\n\n    onToggleFooter = () => {\n        this.setState(\n            { showFooter: !this.state.showFooter },\n            this.props.onToggleItemExpanded(this.props.item.id)\n        );\n    };\n\n    onSelectActiveType = type => {\n        if (type === this.getActiveType()) {\n            return;\n        }\n\n        pluginManager.unmount(this.props.item, this.getActiveType());\n\n        this.props.onSelectActiveType(this.props.visualization.id, type);\n    };\n\n    getActiveType = () =>\n        this.props.visualization.activeType || this.props.item.type;\n\n    pluginIsAvailable = () =>\n        pluginManager.pluginIsAvailable(\n            this.props.item,\n            this.props.visualization\n        );\n\n    getContentStyle = () => {\n        const { item, editMode } = this.props;\n        const PADDING_BOTTOM = 4;\n\n        return !editMode\n            ? {\n                  height: item.originalHeight - HEADER_HEIGHT - PADDING_BOTTOM,\n              }\n            : { height: this.contentRef.offsetHeight };\n    };\n\n    render() {\n        const { item, editMode, itemFilters } = this.props;\n        const { showFooter } = this.state;\n\n        const actionButtons = (\n            <ItemHeaderButtons\n                item={item}\n                visualization={this.props.visualization}\n                onSelectActiveType={this.onSelectActiveType}\n                onToggleFooter={this.onToggleFooter}\n                d2={this.d2}\n                activeType={this.getActiveType()}\n                activeFooter={this.state.showFooter}\n            />\n        );\n\n        return (\n            <>\n                <ItemHeader\n                    title={pluginManager.getName(item)}\n                    itemId={item.id}\n                    actionButtons={actionButtons}\n                />\n                <div\n                    key={this.getUniqueKey(itemFilters)}\n                    className=\"dashboard-item-content\"\n                    ref={ref => (this.contentRef = ref)}\n                >\n                    {this.state.configLoaded && this.getPluginComponent()}\n                </div>\n                {!editMode && showFooter ? <ItemFooter item={item} /> : null}\n            </>\n        );\n    }\n}\n\nItem.contextTypes = {\n    d2: PropTypes.object,\n};\n\nItem.propTypes = {\n    classes: PropTypes.object,\n    editMode: PropTypes.bool,\n    item: PropTypes.object,\n    itemFilters: PropTypes.object,\n    visualization: PropTypes.object,\n    onSelectActiveType: PropTypes.func,\n    onToggleItemExpanded: PropTypes.func,\n    onVisualizationLoaded: PropTypes.func,\n};\n\nItem.defaultProps = {\n    item: {},\n    editMode: false,\n    onToggleItemExpanded: Function.prototype,\n    itemFilters: {},\n    visualization: {},\n};\n\nconst mapStateToProps = (state, ownProps) => ({\n    itemFilters: sGetItemFiltersRoot(state),\n    visualization: sGetVisualization(\n        state,\n        pluginManager.extractFavorite(ownProps.item).id\n    ),\n});\n\nconst mapDispatchToProps = dispatch => ({\n    onVisualizationLoaded: visualization =>\n        dispatch(acAddVisualization(visualization)),\n    onSelectActiveType: (id, type, activeType) =>\n        dispatch(acSetActiveVisualizationType(id, type, activeType)),\n});\n\nexport default connect(\n    mapStateToProps,\n    mapDispatchToProps\n)(withStyles(styles)(Item));\n","import React from 'react';\nimport { colors } from '@dhis2/ui-core';\n\nconst style = {\n    backgroundColor: colors.grey200,\n    border: 'none',\n    height: '1px',\n    margin: '0px 0px 5px 0px',\n};\n\nconst Line = () => <hr style={style} />;\n\nexport default Line;\n","import React, { Component, Fragment } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport i18n from '@dhis2/d2-i18n';\n\nimport { sGetMessagesRoot } from '../../../reducers/messages';\nimport { formatDate } from '../../../modules/util';\nimport { colors } from '@dhis2/ui-core';\nimport ItemHeader from '../ItemHeader';\nimport Line from '../../../widgets/Line';\n\nimport './MessagesItem.css';\n\nconst PRIVATE = 'PRIVATE';\n\nconst messageTypes = {\n    [PRIVATE]: 'Private',\n    VALIDATION_RESULT: 'Validation',\n    TICKET: 'Ticket',\n    SYSTEM: 'System',\n};\n\nconst style = {\n    list: {\n        listStyleType: 'none',\n        paddingLeft: '0px',\n    },\n    seeAll: {\n        textAlign: 'center',\n        fontSize: '13px',\n        marginBottom: '5px',\n    },\n    sender: {\n        fontSize: '13px',\n        lineHeight: '15px',\n        margin: 0,\n        color: colors.grey800,\n    },\n    snippet: {\n        color: colors.grey800,\n        fontSize: '13px',\n        lineHeight: '15px',\n        maxHeight: '30px',\n        overflow: 'hidden',\n    },\n};\n\nclass MessagesItem extends Component {\n    state = {\n        uiLocale: '',\n    };\n\n    async componentDidMount() {\n        const uiLocale = await this.context.d2.currentUser.userSettings.get(\n            'keyUiLocale'\n        );\n\n        this.setState({ uiLocale });\n    }\n\n    getMessageHref = msg => {\n        const msgIdentifier = msg ? `#/${msg.messageType}/${msg.id}` : '';\n        return `${this.context.baseUrl}/dhis-web-messaging/${msgIdentifier}`;\n    };\n\n    getMessageSender = msg => {\n        const latestMsg = msg.messages.slice(-1)[0];\n        return latestMsg.sender ? latestMsg.sender.displayName : '';\n    };\n\n    getMessageItems = () => {\n        const editClass = !this.props.editMode ? 'view' : null;\n\n        return this.props.messages.map(msg => {\n            const redirectToMsg = () => {\n                if (!this.props.editMode) {\n                    document.location.href = this.getMessageHref(msg);\n                }\n            };\n\n            const sender =\n                msg.messageType === PRIVATE\n                    ? this.getMessageSender(msg)\n                    : messageTypes[msg.messageType];\n\n            const readClass = !msg.read ? 'unread' : null;\n            const latestMsg = msg.messages.slice(-1)[0];\n            const msgDate = latestMsg.lastUpdated;\n\n            return (\n                <li\n                    className={`message-item ${editClass}`}\n                    key={msg.id}\n                    onClick={redirectToMsg}\n                >\n                    <p className={`message-title ${readClass}`}>\n                        {msg.displayName} ({msg.messageCount})\n                    </p>\n                    <p style={style.sender}>\n                        {sender} - {formatDate(msgDate, this.state.uiLocale)}\n                    </p>\n                    <p style={style.snippet}>{latestMsg.text}</p>\n                </li>\n            );\n        });\n    };\n\n    render() {\n        return (\n            <Fragment>\n                <ItemHeader\n                    title={i18n.t('Messages')}\n                    itemId={this.props.item.id}\n                />\n                <Line />\n                {this.props.messages.length > 0 && (\n                    <div className=\"dashboard-item-content\">\n                        <ul style={style.list}>{this.getMessageItems()}</ul>\n                        <div style={style.seeAll}>\n                            <a href={this.getMessageHref()}>\n                                {i18n.t('See all messages')}\n                            </a>\n                        </div>\n                    </div>\n                )}\n            </Fragment>\n        );\n    }\n}\n\nMessagesItem.propTypes = {\n    editMode: PropTypes.bool,\n    item: PropTypes.object,\n    messages: PropTypes.array,\n};\n\nMessagesItem.contextTypes = {\n    d2: PropTypes.object,\n    baseUrl: PropTypes.string,\n};\n\nconst mapStateToProps = state => {\n    return {\n        messages: Object.values(sGetMessagesRoot(state)),\n    };\n};\n\nconst MessagesContainer = connect(\n    mapStateToProps,\n    null\n)(MessagesItem);\n\nexport default MessagesContainer;\n","import React, { Fragment } from 'react';\nimport PropTypes from 'prop-types';\nimport i18n from '@dhis2/d2-i18n';\nimport ItemHeader from '../ItemHeader';\nimport NotInterestedIcon from '@material-ui/icons/NotInterested';\n\nconst NotSupportedItem = props => (\n    <Fragment>\n        <ItemHeader\n            title={i18n.t('Item type \"{{type}}\" not supported', {\n                type: props.item.type,\n            })}\n            itemId={props.item.id}\n        />\n        <div\n            style={{\n                display: 'flex',\n                justifyContent: 'center',\n                alignItems: 'center',\n                height: '90%',\n            }}\n        >\n            <NotInterestedIcon\n                style={{ width: 100, height: 100, align: 'center' }}\n                color=\"disabled\"\n            />\n        </div>\n    </Fragment>\n);\n\nNotSupportedItem.propTypes = {\n    item: PropTypes.object,\n};\n\nexport default NotSupportedItem;\n","import React from 'react';\nimport { colors } from '@dhis2/ui-core';\nimport PropTypes from 'prop-types';\n\nconst DescriptionIcon = ({ className }) => (\n    <svg\n        className={className}\n        xmlns=\"http://www.w3.org/2000/svg\"\n        viewBox=\"0 0 24 24\"\n        fill={colors.grey500}\n    >\n        <path d=\"M0 0h24v24H0z\" fill=\"none\" />\n        <path d=\"M14 2H6c-1.1 0-1.99.9-1.99 2L4 20c0 1.1.89 2 1.99 2H18c1.1 0 2-.9 2-2V8l-6-6zm2 16H8v-2h8v2zm0-4H8v-2h8v2zm-3-5V3.5L18.5 9H13z\" />\n    </svg>\n);\n\nDescriptionIcon.propTypes = {\n    className: PropTypes.string,\n};\n\nexport default DescriptionIcon;\n","import React from 'react';\nimport { colors } from '@dhis2/ui-core';\nimport PropTypes from 'prop-types';\n\nconst DeleteIcon = ({ className }) => (\n    <svg\n        className={className}\n        xmlns=\"http://www.w3.org/2000/svg\"\n        width=\"18\"\n        height=\"18\"\n        viewBox=\"0 0 24 24\"\n        fill={colors.red500}\n    >\n        <path d=\"M6 19c0 1.1.9 2 2 2h8c1.1 0 2-.9 2-2V7H6v12zM19 4h-3.5l-1-1h-5l-1 1H5v2h14V4z\" />\n        <path d=\"M0 0h24v24H0z\" fill=\"none\" />\n    </svg>\n);\n\nDeleteIcon.propTypes = {\n    className: PropTypes.string,\n};\n\nexport default DeleteIcon;\n","import React, { Fragment } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { colors } from '@dhis2/ui-core';\nimport DescriptionIcon from '../../../icons/Description';\n\nimport DeleteIcon from '../../../icons/Delete';\nimport Line from '../../../widgets/Line';\nimport { itemTypeMap, getItemUrl } from '../../../modules/itemTypes';\nimport { orArray } from '../../../modules/util';\nimport { tRemoveListItemContent } from './actions';\nimport ItemHeader from '../ItemHeader';\nimport classes from './Item.module.css';\n\nconst getItemTitle = item => itemTypeMap[item.type].pluralTitle;\n\nconst getContentItems = item =>\n    orArray(item[itemTypeMap[item.type].propName]).filter(\n        (item, index, array) =>\n            array.findIndex(el => el.id === item.id) === index\n    );\n\nconst ListItem = (props, context) => {\n    const { item, editMode, tRemoveListItemContent } = props;\n    const contentItems = getContentItems(item);\n\n    const getLink = contentItem => {\n        const deleteButton = (\n            <button\n                className={classes.deletebutton}\n                onClick={() => tRemoveListItemContent(item, contentItem)}\n            >\n                <DeleteIcon className={classes.deleteicon} />\n            </button>\n        );\n\n        return (\n            <Fragment>\n                <a\n                    className={classes.link}\n                    style={{ color: colors.grey900 }}\n                    href={getItemUrl(item.type, contentItem, context.d2)}\n                >\n                    {contentItem.name}\n                </a>\n                {editMode ? deleteButton : null}\n            </Fragment>\n        );\n    };\n\n    return (\n        <Fragment>\n            <ItemHeader title={getItemTitle(item)} itemId={item.id} />\n            <Line />\n            <div className=\"dashboard-item-content\">\n                <ul className={classes.list}>\n                    {contentItems.map(contentItem => (\n                        <li className={classes.item} key={contentItem.id}>\n                            <DescriptionIcon className={classes.itemicon} />\n                            {getLink(contentItem)}\n                        </li>\n                    ))}\n                </ul>\n            </div>\n        </Fragment>\n    );\n};\n\nListItem.propTypes = {\n    editMode: PropTypes.bool,\n    item: PropTypes.object,\n    tRemoveListItemContent: PropTypes.func,\n};\n\nListItem.contextTypes = {\n    d2: PropTypes.object,\n};\n\nexport default connect(\n    null,\n    {\n        tRemoveListItemContent,\n    }\n)(ListItem);\n","import {\n    acUpdateDashboardItem,\n    acRemoveDashboardItem,\n} from '../../../actions/editDashboard';\nimport { itemTypeMap } from '../../../modules/itemTypes';\n\nexport const tRemoveListItemContent = (dashboardItem, content) => dispatch => {\n    const listItemType = itemTypeMap[dashboardItem.type].propName;\n\n    const newContent = dashboardItem[listItemType].filter(\n        item => item.id !== content.id\n    );\n\n    if (newContent.length) {\n        dashboardItem[listItemType] = newContent;\n        dispatch(acUpdateDashboardItem(dashboardItem));\n    } else {\n        dispatch(acRemoveDashboardItem(dashboardItem));\n    }\n};\n","import React, { Fragment } from 'react';\nimport { connect } from 'react-redux';\nimport i18n from '@dhis2/d2-i18n';\nimport PropTypes from 'prop-types';\n\nimport Input from '@material-ui/core/Input';\nimport {\n    Parser as RichTextParser,\n    Editor as RichTextEditor,\n} from '@dhis2/d2-ui-rich-text';\n\nimport { acUpdateDashboardItem } from '../../../actions/editDashboard';\nimport { sGetEditDashboardItems } from '../../../reducers/editDashboard';\nimport { sGetDashboardItems } from '../../../reducers/dashboards';\nimport ItemHeader from '../ItemHeader';\nimport Line from '../../../widgets/Line';\n\nconst style = {\n    textDiv: {\n        padding: '10px',\n        whiteSpace: 'pre-line',\n        lineHeight: '20px',\n    },\n    textField: {\n        fontSize: '14px',\n        fontStretch: 'normal',\n        width: '90%',\n        margin: '0 auto',\n        display: 'block',\n        lineHeight: '24px',\n    },\n    container: {\n        marginBottom: '20px',\n        marginTop: '20px',\n    },\n};\n\nconst TextItem = props => {\n    const { item, editMode, text, acUpdateDashboardItem } = props;\n\n    const onChangeText = event => {\n        const updatedItem = {\n            ...item,\n            text: event.target.value,\n        };\n\n        acUpdateDashboardItem(updatedItem);\n    };\n\n    const viewItem = () => {\n        const textDivStyle = Object.assign({}, style.textField, style.textDiv);\n        return (\n            <div className=\"dashboard-item-content\" style={style.container}>\n                <RichTextParser style={textDivStyle}>{text}</RichTextParser>\n            </div>\n        );\n    };\n\n    const editItem = () => {\n        return (\n            <Fragment>\n                <ItemHeader title={i18n.t('Text item')} itemId={item.id} />\n                <Line />\n                <div className=\"dashboard-item-content\">\n                    <RichTextEditor onEdit={onChangeText}>\n                        <Input\n                            value={text}\n                            multiline\n                            fullWidth\n                            style={style.textField}\n                            placeholder={i18n.t('Add text here')}\n                            onChange={onChangeText}\n                        />\n                    </RichTextEditor>\n                </div>\n            </Fragment>\n        );\n    };\n\n    return <Fragment>{editMode ? editItem() : viewItem()}</Fragment>;\n};\n\nconst mapStateToProps = (state, ownProps) => {\n    const items = ownProps.editMode\n        ? sGetEditDashboardItems(state)\n        : sGetDashboardItems(state);\n\n    const item = items.find(item => item.id === ownProps.item.id);\n\n    return {\n        text: item ? item.text : '',\n    };\n};\n\nTextItem.propTypes = {\n    acUpdateDashboardItem: PropTypes.func,\n    editMode: PropTypes.bool,\n    item: PropTypes.object,\n    text: PropTypes.string,\n};\n\nexport default connect(\n    mapStateToProps,\n    {\n        acUpdateDashboardItem,\n    }\n)(TextItem);\n","import React, { Fragment } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport NotInterestedIcon from '@material-ui/icons/NotInterested';\n\nimport { FILTER_ORG_UNIT } from '../../../actions/itemFilters';\nimport { sGetItemFiltersRoot } from '../../../reducers/itemFilters';\nimport ItemHeader from '../ItemHeader';\nimport Line from '../../../widgets/Line';\n\nconst getIframeSrc = (appDetails, item, itemFilters) => {\n    let iframeSrc = `${appDetails.launchUrl}?dashboardItemId=${item.id}`;\n\n    if (\n        itemFilters &&\n        itemFilters[FILTER_ORG_UNIT] &&\n        itemFilters[FILTER_ORG_UNIT].length\n    ) {\n        const ouIds = itemFilters[FILTER_ORG_UNIT].map(\n            ouPath => ouPath.split('/').slice(-1)[0]\n        );\n\n        iframeSrc += `&userOrgUnit=${ouIds.join(',')}`;\n    }\n\n    return iframeSrc;\n};\n\nconst AppItem = ({ item, itemFilters }, context) => {\n    let appDetails;\n\n    const appKey = item.appKey;\n\n    if (appKey) {\n        appDetails = context.d2.system.installedApps.find(\n            app => app.key === appKey\n        );\n    }\n\n    return appDetails && appDetails.name && appDetails.launchUrl ? (\n        <Fragment>\n            <ItemHeader title={appDetails.name} itemId={item.id} />\n            <Line />\n            <iframe\n                title={appDetails.name}\n                src={getIframeSrc(appDetails, item, itemFilters)}\n                className=\"dashboard-item-content\"\n                style={{ border: 'none' }}\n            />\n        </Fragment>\n    ) : (\n        <Fragment>\n            <ItemHeader title={`${appKey} app not found`} />\n            <Line />\n            <div\n                className=\"dashboard-item-content\"\n                style={{\n                    display: 'flex',\n                    justifyContent: 'center',\n                    alignItems: 'center',\n                    height: '90%',\n                }}\n            >\n                <NotInterestedIcon\n                    color=\"disabled\"\n                    disabled\n                    style={{ width: 100, height: 100, align: 'center' }}\n                />\n            </div>\n        </Fragment>\n    );\n};\n\nAppItem.propTypes = {\n    item: PropTypes.object,\n    itemFilters: PropTypes.object,\n};\n\nAppItem.contextTypes = {\n    d2: PropTypes.object,\n};\n\nconst mapStateToProps = state => ({\n    itemFilters: sGetItemFiltersRoot(state),\n});\n\nexport default connect(mapStateToProps)(AppItem);\n","import React, { Fragment } from 'react';\nimport PropTypes from 'prop-types';\nimport i18n from '@dhis2/d2-i18n';\n\nimport { colors } from '@dhis2/ui-core';\nimport ItemHeader from '../ItemHeader';\n\nconst style = {\n    margin: '21px 28px',\n    fontSize: '14px',\n    lineHeight: '18px',\n    color: colors.grey600,\n};\n\nconst SpacerItem = props => {\n    return (\n        <Fragment>\n            <ItemHeader title={i18n.t('Spacer')} itemId={props.item.id} />\n            <p style={style}>\n                {i18n.t(\n                    'Use a spacer to create empty vertical space between other dashboard items.'\n                )}\n            </p>\n        </Fragment>\n    );\n};\n\nSpacerItem.propTypes = {\n    item: PropTypes.object,\n};\n\nexport default SpacerItem;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport VisualizationItem from './VisualizationItem/Item';\nimport MessagesItem from './MessagesItem/Item';\nimport NotSupportedItem from './NotSupportedItem/Item';\nimport ListItem from './ListItem/Item';\nimport TextItem from './TextItem/Item';\nimport AppItem from './AppItem/Item';\nimport SpacerItem from './SpacerItem/Item';\nimport {\n    APP,\n    VISUALIZATION,\n    REPORT_TABLE,\n    CHART,\n    MAP,\n    EVENT_CHART,\n    EVENT_REPORT,\n    MESSAGES,\n    REPORTS,\n    RESOURCES,\n    USERS,\n    TEXT,\n    SPACER,\n} from '../../modules/itemTypes';\nimport { DEFAULT_STATE_ITEM_FILTERS } from '../../reducers/itemFilters';\n\nconst getGridItem = type => {\n    switch (type) {\n        case VISUALIZATION:\n        case REPORT_TABLE:\n        case CHART:\n        case MAP:\n        case EVENT_CHART:\n        case EVENT_REPORT:\n            return VisualizationItem;\n        case MESSAGES:\n            return MessagesItem;\n        case REPORTS:\n        case RESOURCES:\n        case USERS:\n            return ListItem;\n        case TEXT:\n            return TextItem;\n        case SPACER:\n            return SpacerItem;\n        case APP:\n            return AppItem;\n        default:\n            return NotSupportedItem;\n    }\n};\n\nexport const Item = props => {\n    const GridItem = getGridItem(props.item.type);\n\n    return (\n        <GridItem\n            item={props.item}\n            editMode={props.editMode}\n            itemFilters={\n                props.editMode ? DEFAULT_STATE_ITEM_FILTERS : props.itemFilters\n            }\n            onToggleItemExpanded={props.onToggleItemExpanded}\n        />\n    );\n};\n\nItem.propTypes = {\n    editMode: PropTypes.bool,\n    item: PropTypes.object,\n    itemFilters: PropTypes.object,\n    onToggleItemExpanded: PropTypes.func,\n};\n","import React from 'react';\nimport { colors } from '@dhis2/ui-core';\nimport PropTypes from 'prop-types';\n\nexport const NoContentMessage = ({ text }) => (\n    <div\n        style={{\n            padding: '50px 10px',\n            textAlign: 'center',\n            fontSize: '15px',\n            fontWeight: 500,\n            color: colors.grey600,\n        }}\n    >\n        {text}\n    </div>\n);\n\nNoContentMessage.propTypes = {\n    text: PropTypes.string,\n};\n\nexport default NoContentMessage;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport debounce from 'lodash/debounce';\nimport pick from 'lodash/pick';\n\nconst defaultDebounceMs = 100;\nconst defaultBufferFactor = 0.25;\n\nclass ProgressiveLoadingContainer extends Component {\n    static propTypes = {\n        children: PropTypes.node.isRequired,\n        bufferFactor: PropTypes.number,\n        className: PropTypes.string,\n        debounceMs: PropTypes.number,\n        style: PropTypes.object,\n    };\n    static defaultProps = {\n        debounceMs: defaultDebounceMs,\n        bufferFactor: defaultBufferFactor,\n    };\n\n    state = {\n        shouldLoad: false,\n    };\n    containerRef = null;\n    shouldLoadHandler = null;\n\n    checkShouldLoad() {\n        const bufferPx = this.props.bufferFactor * window.innerHeight;\n\n        if (!this.containerRef) {\n            return;\n        }\n\n        const rect = this.containerRef.getBoundingClientRect();\n        if (\n            rect.bottom > -bufferPx &&\n            rect.top < window.innerHeight + bufferPx\n        ) {\n            this.setState({\n                shouldLoad: true,\n            });\n\n            this.removeHandler();\n        }\n    }\n\n    registerHandler() {\n        this.shouldLoadHandler = debounce(\n            () => this.checkShouldLoad(),\n            this.props.debounceMs\n        );\n\n        window.addEventListener('scroll', this.shouldLoadHandler);\n    }\n    removeHandler() {\n        window.removeEventListener('scroll', this.shouldLoadHandler);\n    }\n\n    componentDidMount() {\n        this.registerHandler();\n        this.checkShouldLoad();\n    }\n\n    componentWillUnmount() {\n        this.removeHandler();\n    }\n\n    render() {\n        const { children, className, style, ...props } = this.props;\n        const { shouldLoad } = this.state;\n\n        const eventProps = pick(props, [\n            'onMouseDown',\n            'onTouchStart',\n            'onMouseUp',\n            'onTouchEnd',\n        ]);\n\n        return (\n            <div\n                ref={ref => (this.containerRef = ref)}\n                style={style}\n                className={className}\n                {...eventProps}\n            >\n                {shouldLoad && children}\n            </div>\n        );\n    }\n}\n\nexport default ProgressiveLoadingContainer;\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport i18n from '@dhis2/d2-i18n';\nimport ReactGridLayout from 'react-grid-layout';\nimport { CircularLoader, ScreenCover } from '@dhis2/ui-core';\n\nimport {\n    acUpdateDashboardLayout,\n    acRemoveDashboardItem,\n} from '../../actions/editDashboard';\nimport { Item } from '../Item/Item';\nimport { resize as pluginResize } from '../Item/VisualizationItem/plugin';\nimport { isVisualizationType } from '../../modules/itemTypes';\nimport {\n    GRID_ROW_HEIGHT,\n    GRID_COMPACT_TYPE,\n    ITEM_MIN_HEIGHT,\n    MARGIN,\n    getGridColumns,\n    hasShape,\n    onItemResize,\n} from './gridUtil';\nimport { orArray } from '../../modules/util';\n\nimport NoContentMessage from '../../widgets/NoContentMessage';\n\nimport 'react-grid-layout/css/styles.css';\nimport 'react-resizable/css/styles.css';\n\nimport './ItemGrid.css';\nimport { sGetSelectedId, sGetSelectedIsLoading } from '../../reducers/selected';\nimport {\n    sGetEditDashboardRoot,\n    sGetEditDashboardItems,\n} from '../../reducers/editDashboard';\nimport {\n    sGetDashboardById,\n    sGetDashboardItems,\n} from '../../reducers/dashboards';\nimport ProgressiveLoadingContainer from '../Item/ProgressiveLoadingContainer';\n\n// Component\n\nconst EXPANDED_HEIGHT = 17;\n\nexport class ItemGrid extends Component {\n    state = {\n        expandedItems: {},\n    };\n\n    onToggleItemExpanded = clickedId => {\n        const isExpanded =\n            typeof this.state.expandedItems[clickedId] === 'boolean'\n                ? this.state.expandedItems[clickedId]\n                : false;\n\n        const expandedItems = { ...this.state.expandedItems };\n        expandedItems[clickedId] = !isExpanded;\n        this.setState({ expandedItems });\n    };\n\n    onRemoveItem = clickedId => {\n        this.props.acRemoveDashboardItem(clickedId);\n    };\n\n    componentWillReceiveProps(nextProps) {\n        if (nextProps.edit) {\n            this.setState({ expandedItems: {} });\n        }\n    }\n\n    onLayoutChange = newLayout => {\n        if (this.props.edit) {\n            this.props.acUpdateDashboardLayout(newLayout);\n        }\n    };\n\n    onResizeStop = (layout, oldItem, newItem) => {\n        onItemResize(newItem.i);\n\n        const dashboardItem = this.props.dashboardItems.find(\n            item => item.id === newItem.i\n        );\n\n        // call resize on the item component if it's a plugin type\n        if (dashboardItem && isVisualizationType(dashboardItem)) {\n            pluginResize(dashboardItem);\n        }\n    };\n\n    onRemoveItemWrapper = id => () => this.onRemoveItem(id);\n\n    render() {\n        const { edit, isLoading, dashboardItems } = this.props;\n\n        if (!isLoading && !dashboardItems.length) {\n            return (\n                <NoContentMessage\n                    text={i18n.t('There are no items on this dashboard')}\n                />\n            );\n        }\n\n        const items = dashboardItems.map(item => {\n            const expandedItem = this.state.expandedItems[item.id];\n            const hProp = { h: item.h };\n\n            if (expandedItem && expandedItem === true) {\n                hProp.h = item.h + EXPANDED_HEIGHT;\n            }\n\n            return Object.assign({}, item, hProp, {\n                i: item.id,\n                minH: ITEM_MIN_HEIGHT,\n            });\n        });\n\n        return (\n            <div className=\"grid-wrapper\">\n                {isLoading ? (\n                    <ScreenCover>\n                        <CircularLoader />\n                    </ScreenCover>\n                ) : null}\n                <ReactGridLayout\n                    onLayoutChange={this.onLayoutChange}\n                    onResizeStop={this.onResizeStop}\n                    className=\"layout\"\n                    layout={items}\n                    margin={MARGIN}\n                    cols={getGridColumns()}\n                    rowHeight={GRID_ROW_HEIGHT}\n                    width={window.innerWidth}\n                    compactType={GRID_COMPACT_TYPE}\n                    isDraggable={edit}\n                    isResizable={edit}\n                    draggableCancel=\"input,textarea\"\n                >\n                    {items.map(item => {\n                        const itemClassNames = [\n                            item.type,\n                            edit ? 'edit' : 'view',\n                        ].join(' ');\n\n                        return (\n                            <ProgressiveLoadingContainer\n                                key={item.i}\n                                className={itemClassNames}\n                            >\n                                <Item\n                                    item={item}\n                                    editMode={edit}\n                                    onToggleItemExpanded={\n                                        this.onToggleItemExpanded\n                                    }\n                                />\n                            </ProgressiveLoadingContainer>\n                        );\n                    })}\n                </ReactGridLayout>\n            </div>\n        );\n    }\n}\n\nItemGrid.propTypes = {\n    acRemoveDashboardItem: PropTypes.func,\n    acUpdateDashboardLayout: PropTypes.func,\n    dashboardItems: PropTypes.array,\n    edit: PropTypes.bool,\n    isLoading: PropTypes.bool,\n};\n\nItemGrid.defaultProps = {\n    dashboardItems: [],\n};\n\n// Container\n\nconst mapStateToProps = (state, ownProps) => {\n    const selectedDashboard = ownProps.edit\n        ? sGetEditDashboardRoot(state)\n        : sGetDashboardById(state, sGetSelectedId(state));\n\n    const dashboardItems = ownProps.edit\n        ? sGetEditDashboardItems(state)\n        : sGetDashboardItems(state);\n\n    return {\n        isLoading: sGetSelectedIsLoading(state) || !selectedDashboard,\n        dashboardItems,\n    };\n};\n\nconst mapDispatchToProps = {\n    acUpdateDashboardLayout,\n    acRemoveDashboardItem,\n};\n\nconst mergeProps = (stateProps, dispatchProps, ownProps) => {\n    const validItems = orArray(stateProps.dashboardItems).filter(hasShape);\n\n    return {\n        ...dispatchProps,\n        edit: ownProps.edit,\n        isLoading: stateProps.isLoading,\n        dashboardItems: validItems,\n        onItemResize,\n    };\n};\n\nexport default connect(\n    mapStateToProps,\n    mapDispatchToProps,\n    mergeProps\n)(ItemGrid);\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nimport i18n from '@dhis2/d2-i18n';\n\nimport { colors } from '@dhis2/ui-core';\n\nconst styles = {\n    badgeContainer: {\n        margin: '2px',\n        padding: '0 16px',\n        borderRadius: '4px',\n        color: colors.white,\n        backgroundColor: '#212934',\n        height: 36,\n        display: 'flex',\n        alignItems: 'center',\n    },\n    badge: {\n        fontSize: '13px',\n        cursor: 'pointer',\n        whiteSpace: 'nowrap',\n    },\n    badgeRemove: {\n        fontSize: '12px',\n        textDecoration: 'underline',\n        marginLeft: '24px',\n        cursor: 'pointer',\n    },\n};\n\nclass FilterBadge extends Component {\n    onClick = id => () => this.props.onClick(id);\n    onRemove = id => () => this.props.onRemove(id);\n\n    render() {\n        const { data } = this.props;\n\n        return (\n            <div style={styles.badgeContainer}>\n                <span style={styles.badge} onClick={this.onClick(data.id)}>\n                    {`${data.name}: ${\n                        data.values.length > 1\n                            ? i18n.t('{{count}} selected', {\n                                  count: data.values.length,\n                              })\n                            : data.values[0].name\n                    }`}\n                </span>\n                <span\n                    style={styles.badgeRemove}\n                    onClick={this.onRemove(data.id)}\n                >\n                    {i18n.t('Remove')}\n                </span>\n            </div>\n        );\n    }\n}\n\nFilterBadge.propTypes = {\n    data: PropTypes.object.isRequired,\n    onClick: PropTypes.func.isRequired,\n    onRemove: PropTypes.func.isRequired,\n};\n\nFilterBadge.defaultProps = {\n    onClick: Function.prototype,\n    onRemove: Function.prototype,\n};\n\nexport default FilterBadge;\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { createSelector } from 'reselect';\nimport { withStyles } from '@material-ui/core/styles';\n\nimport { sGetDimensions } from '../../reducers/dimensions';\nimport { sGetItemFiltersRoot } from '../../reducers/itemFilters';\nimport { sGetControlBarUserRows } from '../../reducers/controlBar';\nimport { getTopOffset } from '../ControlBar/controlBarDimensions';\nimport { acRemoveItemFilter } from '../../actions/itemFilters';\nimport { acRemoveEditItemFilter } from '../../actions/editItemFilters';\nimport { acSetActiveModalDimension } from '../../actions/activeModalDimension';\n\nimport FilterBadge from './FilterBadge';\n\nconst styles = {\n    bar: {\n        position: 'sticky',\n        zIndex: 7,\n        padding: '8px 0',\n        display: 'flex',\n        justifyContent: 'center',\n        flexWrap: 'wrap',\n    },\n};\n\nexport class FilterBar extends Component {\n    onBadgeRemove = id => {\n        this.props.removeItemFilter(id);\n        this.props.removeEditItemFilter(id);\n    };\n\n    onBadgeClick = id => {\n        this.props.setActiveModalDimension({\n            id,\n            name: this.props.filters.find(item => item.id === id).name,\n        });\n    };\n\n    render() {\n        const { filters, userRows, classes } = this.props;\n        const top = getTopOffset(userRows) + 10;\n\n        return filters.length ? (\n            <div className={classes.bar} style={{ top }}>\n                {filters.map(filter => (\n                    <FilterBadge\n                        key={filter.id}\n                        data={filter}\n                        onClick={this.onBadgeClick}\n                        onRemove={this.onBadgeRemove}\n                    />\n                ))}\n            </div>\n        ) : null;\n    }\n}\n\nFilterBar.propTypes = {\n    filters: PropTypes.array.isRequired,\n    removeEditItemFilter: PropTypes.func.isRequired,\n    removeItemFilter: PropTypes.func.isRequired,\n    classes: PropTypes.object,\n    setActiveModalDimension: PropTypes.func,\n    userRows: PropTypes.number,\n};\n\nFilterBar.defaultProps = {\n    filters: [],\n    removeItemFIlter: Function.prototype,\n    removeEditItemFilter: Function.prototype,\n};\n\n// simplify the filters structure to:\n// [{ id: 'pe', name: 'Period', values: [{ id: 2019: name: '2019' }, {id: 'LAST_MONTH', name: 'Last month' }]}, ...]\nconst filtersSelector = createSelector(\n    [sGetItemFiltersRoot, sGetDimensions],\n    (filters, dimensions) =>\n        Object.keys(filters).reduce((arr, id) => {\n            arr.push({\n                id: id,\n                name: dimensions.find(dimension => dimension.id === id).name,\n                values: filters[id].map(value => ({\n                    id: value.id,\n                    name: value.displayName || value.name,\n                })),\n            });\n\n            return arr;\n        }, [])\n);\n\nconst mapStateToProps = state => ({\n    filters: filtersSelector(state),\n    userRows: sGetControlBarUserRows(state),\n});\n\nexport default connect(\n    mapStateToProps,\n    {\n        setActiveModalDimension: acSetActiveModalDimension,\n        removeItemFilter: acRemoveItemFilter,\n        removeEditItemFilter: acRemoveEditItemFilter,\n    }\n)(withStyles(styles)(FilterBar));\n","import React, { Fragment } from 'react';\nimport PropTypes from 'prop-types';\nimport TitleBar from '../TitleBar/TitleBar';\nimport ItemGrid from '../ItemGrid/ItemGrid';\nimport FilterBar from '../FilterBar/FilterBar';\n\nexport const DashboardContent = props => (\n    <Fragment>\n        <TitleBar edit={props.editMode} />\n        <FilterBar />\n        <ItemGrid edit={props.editMode} />\n    </Fragment>\n);\n\nDashboardContent.propTypes = {\n    editMode: PropTypes.bool,\n};\n\nexport default DashboardContent;\n","import React, { Fragment } from 'react';\nimport { connect } from 'react-redux';\nimport isEmpty from 'lodash/isEmpty';\nimport i18n from '@dhis2/d2-i18n';\nimport PropTypes from 'prop-types';\n\nimport {\n    sGetAllDashboards,\n    sDashboardsIsFetching,\n} from '../../reducers/dashboards';\nimport { sGetSelectedId } from '../../reducers/selected';\nimport DashboardsBar from '../ControlBar/DashboardsBar';\nimport DashboardVerticalOffset from './DashboardVerticalOffset';\nimport DashboardContent from './DashboardContent';\nimport NoContentMessage from '../../widgets/NoContentMessage';\n\nexport const Content = ({ hasDashboardContent, dashboardsIsEmpty }) => {\n    const msg = dashboardsIsEmpty\n        ? i18n.t(\n              'No dashboards found. Use the + button to create a new dashboard.'\n          )\n        : i18n.t('Requested dashboard not found');\n\n    return hasDashboardContent ? (\n        <DashboardContent editMode={false} />\n    ) : (\n        <NoContentMessage text={msg} />\n    );\n};\n\nContent.propTypes = {\n    dashboardsIsEmpty: PropTypes.bool,\n    hasDashboardContent: PropTypes.bool,\n};\n\nexport const ViewDashboard = ({ id, dashboardsIsEmpty, dashboardsLoaded }) => {\n    const hasDashboardContent = id && !dashboardsIsEmpty;\n    const contentNotReady = !dashboardsLoaded || id === null;\n\n    return (\n        <Fragment>\n            <DashboardsBar />\n            <DashboardVerticalOffset />\n            <div className=\"dashboard-wrapper\">\n                {contentNotReady ? null : (\n                    <Content\n                        hasDashboardContent={hasDashboardContent}\n                        dashboardsIsEmpty={dashboardsIsEmpty}\n                    />\n                )}\n            </div>\n        </Fragment>\n    );\n};\n\nViewDashboard.propTypes = {\n    dashboardsIsEmpty: PropTypes.bool,\n    dashboardsLoaded: PropTypes.bool,\n    id: PropTypes.string,\n};\n\nconst mapStateToProps = state => {\n    const dashboards = sGetAllDashboards(state);\n\n    return {\n        id: sGetSelectedId(state),\n        dashboardsIsEmpty: isEmpty(dashboards),\n        dashboardsLoaded: !sDashboardsIsFetching(state),\n    };\n};\n\nexport default connect(mapStateToProps)(ViewDashboard);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport i18n from '@dhis2/d2-i18n';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport { Button } from '@dhis2/ui-core';\n\nexport const ConfirmDeleteDialog = ({\n    dashboardName,\n    onDeleteConfirmed,\n    onContinueEditing,\n    open,\n}) => {\n    const actions = [\n        <Button key=\"cancel\" secondary onClick={onContinueEditing}>\n            {i18n.t('Cancel')}\n        </Button>,\n        <Button key=\"delete\" destructive onClick={onDeleteConfirmed}>\n            {i18n.t('Delete')}\n        </Button>,\n    ];\n\n    return (\n        <Dialog open={open} onClose={onContinueEditing}>\n            <DialogTitle style={{ fontSize: '1.25rem', fontWeight: '450' }}>\n                {i18n.t('Delete dashboard')}\n            </DialogTitle>\n            <DialogContent>\n                <DialogContentText style={{ fontSize: '0.875rem' }}>\n                    {i18n.t(\n                        'Deleting dashboard \"{{ dashboardName }}\" will remove it for all users. This action cannot be undone. Are you sure you want to permanently delete this dashboard?',\n                        { dashboardName }\n                    )}\n                </DialogContentText>\n            </DialogContent>\n            <DialogActions>{actions}</DialogActions>\n        </Dialog>\n    );\n};\n\nConfirmDeleteDialog.propTypes = {\n    dashboardName: PropTypes.string,\n    open: PropTypes.bool,\n    onContinueEditing: PropTypes.func,\n    onDeleteConfirmed: PropTypes.func,\n};\n\nexport default ConfirmDeleteDialog;\n","import React, { Component, Fragment } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { Redirect } from 'react-router-dom';\nimport i18n from '@dhis2/d2-i18n';\nimport ControlBar from './ControlBar';\nimport TranslationDialog from '@dhis2/d2-ui-translation-dialog';\nimport { Button } from '@dhis2/ui-core';\n\nimport ConfirmDeleteDialog from './ConfirmDeleteDialog';\nimport {\n    tSaveDashboard,\n    acClearEditDashboard,\n} from '../../actions/editDashboard';\nimport {\n    tDeleteDashboard,\n    acSetDashboardDisplayName,\n} from '../../actions/dashboards';\nimport {\n    sGetEditDashboardRoot,\n    sGetIsNewDashboard,\n} from '../../reducers/editDashboard';\nimport {\n    CONTROL_BAR_ROW_HEIGHT,\n    MIN_ROW_COUNT,\n    getControlBarHeight,\n} from './controlBarDimensions';\nimport { apiFetchDashboard } from '../../api/dashboards';\n\nimport classes from './styles/DashboardsBar.module.css';\n\nconst buttonBarStyle = {\n    height: CONTROL_BAR_ROW_HEIGHT,\n    paddingTop: '15px',\n    marginLeft: '15px',\n    marginRight: '15px',\n};\n\nexport class EditBar extends Component {\n    state = {\n        translationDialogIsOpen: false,\n        dashboardModel: undefined,\n        confirmDeleteDialogOpen: false,\n        redirectUrl: undefined,\n    };\n\n    onConfirmDelete = () => {\n        this.setState({ confirmDeleteDialogOpen: true });\n    };\n\n    onSave = () => {\n        this.props.onSave().then(newId => {\n            this.setState({ redirectUrl: `/${newId}` });\n        });\n    };\n\n    onDiscard = () => {\n        this.props.onDiscardChanges();\n        const redirectUrl = this.props.dashboardId\n            ? `/${this.props.dashboardId}`\n            : '/';\n        this.setState({ redirectUrl });\n    };\n\n    onContinueEditing = () => {\n        this.setState({ confirmDeleteDialogOpen: false });\n    };\n\n    onDeleteConfirmed = () => {\n        this.setState({ confirmDeleteDialogOpen: false });\n        this.props.onDelete(this.props.dashboardId).then(() => {\n            this.setState({ redirectUrl: '/' });\n        });\n    };\n\n    onTranslationsSaved = async translations => {\n        if (translations && translations.length) {\n            const dbLocale = await this.context.d2.currentUser.userSettings.get(\n                'keyDbLocale'\n            );\n\n            const translation = translations.find(\n                t => t.locale === dbLocale && t.property === 'NAME'\n            );\n\n            if (translation && translation.value) {\n                this.props.onTranslate(\n                    this.props.dashboardId,\n                    translation.value\n                );\n            }\n        }\n    };\n\n    fetchDashboardModel = () => {\n        if (this.props.dashboardId && !this.state.dashboardModel) {\n            apiFetchDashboard(this.props.dashboardId).then(dashboardModel =>\n                this.setState({ dashboardModel })\n            );\n        }\n    };\n\n    componentDidMount() {\n        this.fetchDashboardModel();\n    }\n\n    componentDidUpdate() {\n        this.fetchDashboardModel();\n    }\n\n    toggleTranslationDialog = () => {\n        this.setState({\n            translationDialogIsOpen: !this.state.translationDialogIsOpen,\n        });\n    };\n\n    confirmDeleteDialog = () =>\n        this.props.deleteAccess && this.props.dashboardId ? (\n            <ConfirmDeleteDialog\n                dashboardName={this.props.dashboardName}\n                onDeleteConfirmed={this.onDeleteConfirmed}\n                onContinueEditing={this.onContinueEditing}\n                open={this.state.confirmDeleteDialogOpen}\n            />\n        ) : null;\n\n    translationDialog = () =>\n        this.state.dashboardModel && this.state.dashboardModel.id ? (\n            <TranslationDialog\n                className=\"translation-dialog\"\n                d2={this.context.d2}\n                open={this.state.translationDialogIsOpen}\n                onRequestClose={this.toggleTranslationDialog}\n                objectToTranslate={this.state.dashboardModel}\n                fieldsToTranslate={['name', 'description']}\n                // TODO handle messages in snackbar\n                onTranslationSaved={this.onTranslationsSaved}\n                onTranslationError={err =>\n                    console.log('translation update error', err)\n                }\n            />\n        ) : null;\n\n    render() {\n        if (this.state.redirectUrl) {\n            return <Redirect to={this.state.redirectUrl} />;\n        }\n\n        const { dashboardId, deleteAccess, updateAccess } = this.props;\n        const controlBarHeight = getControlBarHeight(MIN_ROW_COUNT);\n\n        const discardBtnText = updateAccess\n            ? i18n.t('Exit without saving')\n            : i18n.t('Go to dashboards');\n\n        return (\n            <Fragment>\n                <ControlBar height={controlBarHeight} editMode={true}>\n                    <div style={buttonBarStyle}>\n                        {updateAccess ? (\n                            <div className={classes.leftControls}>\n                                <span style={{ marginRight: '15px' }}>\n                                    <Button primary onClick={this.onSave}>\n                                        {i18n.t('Save changes')}\n                                    </Button>\n                                </span>\n\n                                {dashboardId ? (\n                                    <span style={{ marginRight: '15px' }}>\n                                        <Button\n                                            onClick={\n                                                this.toggleTranslationDialog\n                                            }\n                                        >\n                                            {i18n.t('Translate')}\n                                        </Button>\n                                    </span>\n                                ) : null}\n                                {dashboardId && deleteAccess ? (\n                                    <Button onClick={this.onConfirmDelete}>\n                                        {i18n.t('Delete')}\n                                    </Button>\n                                ) : null}\n                            </div>\n                        ) : null}\n\n                        <div className={classes.rightControls}>\n                            <Button secondary onClick={this.onDiscard}>\n                                {discardBtnText}\n                            </Button>\n                        </div>\n                    </div>\n                </ControlBar>\n                {this.translationDialog()}\n                {this.confirmDeleteDialog()}\n            </Fragment>\n        );\n    }\n}\n\nEditBar.propTypes = {\n    dashboardId: PropTypes.string,\n    dashboardName: PropTypes.string,\n    deleteAccess: PropTypes.bool,\n    updateAccess: PropTypes.bool,\n    onDelete: PropTypes.func,\n    onDiscardChanges: PropTypes.func,\n    onSave: PropTypes.func,\n    onTranslate: PropTypes.func,\n};\n\nEditBar.contextTypes = {\n    d2: PropTypes.object,\n};\n\nconst mapStateToProps = state => {\n    const dashboard = sGetEditDashboardRoot(state);\n\n    let deleteAccess;\n    let updateAccess;\n    if (sGetIsNewDashboard(state)) {\n        deleteAccess = true;\n        updateAccess = true;\n    } else {\n        updateAccess = dashboard.access ? dashboard.access.update : false;\n        deleteAccess = dashboard.access ? dashboard.access.delete : false;\n    }\n\n    return {\n        dashboardId: dashboard.id,\n        dashboardName: dashboard.name,\n        deleteAccess,\n        updateAccess,\n    };\n};\n\nconst mapDispatchToProps = dispatch => ({\n    onSave: () => dispatch(tSaveDashboard()).then(id => id),\n    onDelete: id => dispatch(tDeleteDashboard(id)),\n    onDiscardChanges: () => dispatch(acClearEditDashboard()),\n    onTranslate: (id, value) => dispatch(acSetDashboardDisplayName(id, value)),\n});\n\nexport default connect(\n    mapStateToProps,\n    mapDispatchToProps\n)(EditBar);\n","import React, { Fragment, Component } from 'react';\nimport { connect } from 'react-redux';\nimport i18n from '@dhis2/d2-i18n';\nimport PropTypes from 'prop-types';\n\nimport { acSetEditDashboard } from '../../actions/editDashboard';\nimport { sGetSelectedId } from '../../reducers/selected';\nimport {\n    sGetDashboardById,\n    sGetDashboardItems,\n    sDashboardsIsFetching,\n} from '../../reducers/dashboards';\nimport DashboardVerticalOffset from './DashboardVerticalOffset';\nimport DashboardContent from './DashboardContent';\nimport EditBar from '../ControlBar/EditBar';\nimport NoContentMessage from '../../widgets/NoContentMessage';\n\nexport const Content = ({ updateAccess }) => {\n    return updateAccess ? (\n        <DashboardContent editMode={true} />\n    ) : (\n        <NoContentMessage text={i18n.t('No access')} />\n    );\n};\n\nContent.propTypes = {\n    updateAccess: PropTypes.bool,\n};\nexport class EditDashboard extends Component {\n    state = {\n        initialized: false,\n    };\n\n    initEditDashboard = () => {\n        if (this.props.dashboard) {\n            this.setState({ initialized: true });\n            this.props.setEditDashboard(this.props.dashboard, this.props.items);\n        }\n    };\n\n    componentDidMount() {\n        this.initEditDashboard();\n    }\n\n    componentDidUpdate() {\n        if (!this.state.initialized) {\n            this.initEditDashboard();\n        }\n    }\n\n    getDashboardContent = () => {\n        const contentNotReady =\n            !this.props.dashboardsLoaded || this.props.id === null;\n\n        return (\n            <div className=\"dashboard-wrapper\">\n                {contentNotReady ? null : (\n                    <Content updateAccess={this.props.updateAccess} />\n                )}\n            </div>\n        );\n    };\n\n    render() {\n        return (\n            <Fragment>\n                <EditBar />\n                <DashboardVerticalOffset editMode={true} />\n                {this.getDashboardContent()}\n            </Fragment>\n        );\n    }\n}\n\nEditDashboard.propTypes = {\n    dashboard: PropTypes.object,\n    dashboardsLoaded: PropTypes.bool,\n    id: PropTypes.string,\n    items: PropTypes.array,\n    setEditDashboard: PropTypes.func,\n    updateAccess: PropTypes.bool,\n};\n\nconst mapStateToProps = state => {\n    const id = sGetSelectedId(state);\n    const dashboard = id ? sGetDashboardById(state, id) : null;\n\n    const updateAccess =\n        dashboard && dashboard.access ? dashboard.access.update : false;\n\n    return {\n        dashboard,\n        id,\n        updateAccess,\n        items: sGetDashboardItems(state),\n        dashboardsLoaded: !sDashboardsIsFetching(state),\n    };\n};\n\nexport default connect(\n    mapStateToProps,\n    {\n        setEditDashboard: acSetEditDashboard,\n    }\n)(EditDashboard);\n","import React, { Component, Fragment } from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\n\nimport { acSetEditNewDashboard } from '../../actions/editDashboard';\nimport DashboardVerticalOffset from './DashboardVerticalOffset';\nimport EditBar from '../ControlBar/EditBar';\nimport DashboardContent from './DashboardContent';\n\nclass NewDashboard extends Component {\n    componentDidMount() {\n        this.props.setNewDashboard();\n    }\n\n    render() {\n        return (\n            <Fragment>\n                <EditBar />\n                <DashboardVerticalOffset editMode={true} />\n                <div className=\"dashboard-wrapper\">\n                    <DashboardContent editMode={true} />\n                </div>\n            </Fragment>\n        );\n    }\n}\n\nNewDashboard.propTypes = {\n    setNewDashboard: PropTypes.func,\n};\n\nexport default connect(\n    null,\n    {\n        setNewDashboard: acSetEditNewDashboard,\n    }\n)(NewDashboard);\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\n\nimport { tSelectDashboard } from '../../actions/dashboards';\nimport { sDashboardsIsFetching } from '../../reducers/dashboards';\nimport { EDIT, NEW } from './dashboardModes';\nimport ViewDashboard from './ViewDashboard';\nimport EditDashboard from './EditDashboard';\nimport NewDashboard from './NewDashboard';\n\nclass Dashboard extends Component {\n    setDashboard = () => {\n        if (this.props.dashboardsLoaded) {\n            const id = this.props.match.params.dashboardId || null;\n\n            this.props.selectDashboard(id);\n\n            this.scrollToTop();\n        }\n    };\n\n    scrollToTop = () => {\n        window.scrollTo(0, 0);\n    };\n\n    componentDidMount() {\n        this.setDashboard();\n    }\n\n    componentDidUpdate() {\n        this.setDashboard();\n    }\n\n    render() {\n        switch (this.props.mode) {\n            case EDIT:\n                return <EditDashboard />;\n            case NEW:\n                return <NewDashboard />;\n            default:\n                return <ViewDashboard />;\n        }\n    }\n}\n\nDashboard.propTypes = {\n    dashboardsLoaded: PropTypes.bool,\n    match: PropTypes.object,\n    mode: PropTypes.string,\n    selectDashboard: PropTypes.func,\n};\n\nconst mapStateToProps = state => {\n    return { dashboardsLoaded: !sDashboardsIsFetching(state) };\n};\n\nexport default connect(\n    mapStateToProps,\n    {\n        selectDashboard: tSelectDashboard,\n    }\n)(Dashboard);\n","export const EDIT = 'edit';\nexport const NEW = 'new';\nexport const VIEW = 'view';\n","import React, { Component } from 'react';\nimport { HashRouter as Router, Route, Switch } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport i18n from '@dhis2/d2-i18n';\nimport { HeaderBar } from '@dhis2/ui-widgets';\nimport { CssVariables } from '@dhis2/ui-core';\n\nimport { EDIT, VIEW, NEW } from './Dashboard/dashboardModes';\nimport { acReceivedUser } from '../actions/user';\nimport { tFetchDashboards } from '../actions/dashboards';\nimport { tSetControlBarRows } from '../actions/controlBar';\nimport { tSetDimensions } from '../actions/dimensions';\nimport Dashboard from './Dashboard/Dashboard';\nimport SnackbarMessage from './SnackbarMessage/SnackbarMessage';\n\nimport 'typeface-roboto';\nimport './App.css';\n\nexport class App extends Component {\n    componentDidMount() {\n        this.props.setCurrentUser(this.props.d2.currentUser);\n        this.props.fetchDashboards();\n        this.props.setControlBarRows();\n        this.props.setDimensions(this.props.d2);\n    }\n\n    getChildContext() {\n        return { baseUrl: this.props.baseUrl, i18n, d2: this.props.d2 };\n    }\n\n    render() {\n        return (\n            <>\n                <CssVariables colors spacers />\n                <div className=\"app-wrapper\">\n                    <div className=\"dashboard-header-bar\">\n                        <HeaderBar appName={i18n.t('Dashboard')} />\n                    </div>\n                    <Router>\n                        <Switch>\n                            <Route\n                                exact\n                                path=\"/\"\n                                render={props => (\n                                    <Dashboard {...props} mode={VIEW} />\n                                )}\n                            />\n                            <Route\n                                exact\n                                path=\"/new\"\n                                render={props => (\n                                    <Dashboard {...props} mode={NEW} />\n                                )}\n                            />\n                            <Route\n                                exact\n                                path=\"/:dashboardId\"\n                                render={props => (\n                                    <Dashboard {...props} mode={VIEW} />\n                                )}\n                            />\n                            <Route\n                                exact\n                                path=\"/:dashboardId/edit\"\n                                render={props => (\n                                    <Dashboard {...props} mode={EDIT} />\n                                )}\n                            />\n                        </Switch>\n                    </Router>\n                    <SnackbarMessage />\n                </div>\n            </>\n        );\n    }\n}\n\nApp.propTypes = {\n    fetchDashboards: PropTypes.func.isRequired,\n    setControlBarRows: PropTypes.func.isRequired,\n    setCurrentUser: PropTypes.func.isRequired,\n    setDimensions: PropTypes.func.isRequired,\n    baseUrl: PropTypes.string,\n    d2: PropTypes.object,\n};\n\nApp.childContextTypes = {\n    baseUrl: PropTypes.string,\n    i18n: PropTypes.object,\n    d2: PropTypes.object,\n};\n\nconst mapDispatchToProps = dispatch => {\n    return {\n        setCurrentUser: currentUser => dispatch(acReceivedUser(currentUser)),\n        fetchDashboards: () => dispatch(tFetchDashboards()),\n        setControlBarRows: () => dispatch(tSetControlBarRows()),\n        setDimensions: d2 => dispatch(tSetDimensions(d2)),\n    };\n};\n\nexport default connect(\n    null,\n    mapDispatchToProps\n)(App);\n","import { RECEIVED_USER } from '../reducers/user';\n\nexport const acReceivedUser = value => ({\n    type: RECEIVED_USER,\n    value,\n});\n","//------------------------------------------------------------------------------\n// <auto-generated>\n// This code was generated by d2-i18n-generate.\n//\n// Changes to this file may cause incorrect behavior and will be lost if\n// the code is regenerated.\n// </auto-generated>\n//------------------------------------------------------------------------------\nimport i18n from '@dhis2/d2-i18n';\nimport moment from 'moment';\nimport 'moment/locale/ar';\nimport 'moment/locale/es';\nimport 'moment/locale/fr';\nimport 'moment/locale/lo';\nimport 'moment/locale/pt';\nimport 'moment/locale/ru';\nimport 'moment/locale/sv';\nimport 'moment/locale/tg';\nimport 'moment/locale/uk';\nimport 'moment/locale/ur';\nimport 'moment/locale/vi';\nimport 'moment/locale/zh-cn';\n\nimport arTranslations from './ar/translations.json';\nimport daTranslations from './da/translations.json';\nimport enTranslations from './en/translations.json';\nimport esTranslations from './es/translations.json';\nimport frTranslations from './fr/translations.json';\nimport idTranslations from './id/translations.json';\nimport kmTranslations from './km/translations.json';\nimport loTranslations from './lo/translations.json';\nimport myTranslations from './my/translations.json';\nimport prsTranslations from './prs/translations.json';\nimport psTranslations from './ps/translations.json';\nimport ptTranslations from './pt/translations.json';\nimport pt_BRTranslations from './pt_BR/translations.json';\nimport ruTranslations from './ru/translations.json';\nimport svTranslations from './sv/translations.json';\nimport tetTranslations from './tet/translations.json';\nimport tgTranslations from './tg/translations.json';\nimport ukTranslations from './uk/translations.json';\nimport urTranslations from './ur/translations.json';\nimport viTranslations from './vi/translations.json';\nimport zhTranslations from './zh/translations.json';\nimport zh_CNTranslations from './zh_CN/translations.json';\n\nconst namespace = 'dashboards-app';\nmoment.locale('en');\n\ni18n.addResources('ar', namespace, arTranslations);\ni18n.addResources('da', namespace, daTranslations);\ni18n.addResources('en', namespace, enTranslations);\ni18n.addResources('es', namespace, esTranslations);\ni18n.addResources('fr', namespace, frTranslations);\ni18n.addResources('id', namespace, idTranslations);\ni18n.addResources('km', namespace, kmTranslations);\ni18n.addResources('lo', namespace, loTranslations);\ni18n.addResources('my', namespace, myTranslations);\ni18n.addResources('prs', namespace, prsTranslations);\ni18n.addResources('ps', namespace, psTranslations);\ni18n.addResources('pt', namespace, ptTranslations);\ni18n.addResources('pt_BR', namespace, pt_BRTranslations);\ni18n.addResources('ru', namespace, ruTranslations);\ni18n.addResources('sv', namespace, svTranslations);\ni18n.addResources('tet', namespace, tetTranslations);\ni18n.addResources('tg', namespace, tgTranslations);\ni18n.addResources('uk', namespace, ukTranslations);\ni18n.addResources('ur', namespace, urTranslations);\ni18n.addResources('vi', namespace, viTranslations);\ni18n.addResources('zh', namespace, zhTranslations);\ni18n.addResources('zh_CN', namespace, zh_CNTranslations);\n\ni18n.setDefaultNamespace(namespace);\ni18n.changeLanguage('en');\n\nexport default i18n;\n","/** @module reducers/selected */\nimport { validateReducer } from '../modules/util';\n\nexport const SET_STYLE = 'SET_STYLE';\n\nexport const DEFAULT_STATE_STYLE = 'LIST';\n\n/**\n * Reducer functions that computes and returns the new state based on the given action\n * @function\n * @param {Object} state The current state\n * @param {Object} action The action to be evaluated\n */\nconst style = (state = DEFAULT_STATE_STYLE, action) => {\n    switch (action.type) {\n        case SET_STYLE:\n            return validateReducer(action.value, DEFAULT_STATE_STYLE);\n        default:\n            return state;\n    }\n};\n\nexport default style;\n\n/**\n * Selectors that point to specific props in the state object\n * @function\n * @param {Object} state\n * @returns {Object}\n */\nexport const sGetStyleRoot = state => state.style;\n","import { combineReducers } from 'redux';\nimport arraySort from 'd2-utilizr/lib/arraySort';\n\nimport dashboards, { sGetDashboardsRoot } from './dashboards';\nimport selected from './selected';\nimport dashboardsFilter, {\n    ownerData,\n    sGetFilterName,\n    sGetFilterOrder,\n    sGetFilterOwner,\n} from './dashboardsFilter';\nimport controlBar from './controlBar';\nimport visualizations from './visualizations';\nimport editDashboard from './editDashboard';\nimport messages from './messages';\nimport user from './user';\nimport snackbar from './snackbar';\nimport itemFilters from './itemFilters';\nimport editItemFilters from './editItemFilters';\nimport style from './style';\nimport dimensions from './dimensions';\nimport settings from './settings';\nimport activeModalDimension from './activeModalDimension';\n\nconst USER = 'system';\n\n// Reducers\n\nexport default combineReducers({\n    dashboards,\n    selected,\n    dashboardsFilter,\n    controlBar,\n    visualizations,\n    messages,\n    user,\n    editDashboard,\n    itemFilters,\n    editItemFilters,\n    style,\n    snackbar,\n    dimensions,\n    settings,\n    activeModalDimension,\n});\n\n// Map constants to data\nconst mapConstToData = {\n    NAME: 'name',\n    ITEMS: 'numberOfItems',\n    CREATED: 'created',\n    OWNER: 'owner',\n};\n\n// Selectors\n\n// Filter dashboards by name\nexport const sFilterDashboardsByName = (dashboards, filter) =>\n    dashboards.filter(d =>\n        d.displayName.toLowerCase().includes(filter.toLowerCase())\n    );\n\n// Filter dashboards by owner, TODO FIXME\nexport const sFilterDashboardsByOwner = (dashboards, filter) => {\n    const ME = ownerData[1]; // TODO\n    const OTHERS = ownerData[2]; // TODO\n\n    switch (filter) {\n        case ME:\n            return dashboards.filter(d => d.owner === USER);\n        case OTHERS:\n            return dashboards.filter(d => d.owner !== USER);\n        default:\n            return dashboards;\n    }\n};\n\n// Filter dashboards by order\nexport const sFilterDashboardsByOrder = (dashboards, filter) => {\n    const filterValues = filter.split(':');\n\n    const key = filterValues[0];\n    const direction = filterValues[1];\n\n    return arraySort(dashboards, direction, mapConstToData[key]);\n};\n\n// Selectors dependency level 2\n\n// Get filtered dashboards\nexport const sGetFilteredDashboards = state => {\n    const dashboards = sGetDashboardsRoot(state);\n\n    const nameFilter = sGetFilterName(state);\n    const ownerFilter = sGetFilterOwner(state);\n    const orderFilter = sGetFilterOrder(state);\n\n    return sFilterDashboardsByOrder(\n        sFilterDashboardsByName(\n            sFilterDashboardsByOwner(dashboards, ownerFilter),\n            nameFilter\n        ),\n        orderFilter\n    );\n};\n","import { createStore, applyMiddleware, compose } from 'redux';\nimport { createLogger } from 'redux-logger';\nimport thunk from 'redux-thunk';\nimport reducer from './reducers';\n\nconst configureStore = () => {\n    const middleware = [thunk];\n\n    // Enable Redux devtools if extension is installed instead of redux-logger\n    const composeEnhancers =\n        window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\n    if (\n        !window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ &&\n        process.env.NODE_ENV !== 'production'\n    ) {\n        middleware.push(createLogger());\n    }\n\n    return createStore(\n        reducer,\n        composeEnhancers(applyMiddleware(...middleware))\n    );\n};\n\nexport default configureStore;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport { MuiThemeProvider, createMuiTheme } from '@material-ui/core/styles';\nimport { init as d2Init, config, getManifest, getUserSettings } from 'd2';\nimport dhis2theme from '@dhis2/d2-ui-core/theme/mui3.theme';\n\nimport { Provider as RuntimeProvider } from '@dhis2/app-runtime';\nimport { CssReset } from '@dhis2/ui-core';\n\nimport App from './components/App';\nimport './index.css';\nimport i18n from './locales';\nimport configureStore from './configureStore';\n\nconst muiTheme = () => createMuiTheme(dhis2theme);\n\nconst configI18n = userSettings => {\n    const uiLocale = userSettings.keyUiLocale;\n\n    if (uiLocale && uiLocale !== 'en') {\n        config.i18n.sources.add(`./i18n/i18n_module_${uiLocale}.properties`);\n    }\n\n    config.i18n.sources.add('./i18n/i18n_module_en.properties');\n    i18n.changeLanguage(uiLocale);\n};\n\nconst init = async () => {\n    const manifest = await getManifest('./manifest.webapp');\n\n    // log app info\n    console.info(\n        `Dashboards app, v${manifest.version}, ${\n            manifest.manifest_generated_at\n        }`\n    );\n\n    const isProd = process.env.NODE_ENV === 'production';\n\n    if (\n        !isProd &&\n        (!process.env.REACT_APP_DHIS2_BASE_URL ||\n            !process.env.REACT_APP_DHIS2_AUTHORIZATION)\n    ) {\n        throw new Error(\n            'Missing env variables REACT_APP_DHIS2_BASE_URL and REACT_APP_DHIS2_AUTHORIZATION'\n        );\n    }\n\n    // api config\n    const baseUrl = isProd\n        ? manifest.activities.dhis.href\n        : process.env.REACT_APP_DHIS2_BASE_URL;\n    const authorization = process.env.REACT_APP_DHIS2_AUTHORIZATION;\n\n    config.baseUrl = `${baseUrl}/api/${manifest.dhis2.apiVersion}`;\n    config.headers = isProd ? null : { Authorization: authorization };\n    config.schemas = [\n        'chart',\n        'map',\n        'report',\n        'reportTable',\n        'eventChart',\n        'eventReport',\n        'dashboard',\n        'organisationUnit',\n        'userGroup',\n    ];\n\n    getUserSettings()\n        .then(configI18n)\n        .then(() => d2Init(config))\n        .then(initializedD2 => {\n            ReactDOM.render(\n                <RuntimeProvider\n                    config={{\n                        baseUrl: baseUrl,\n                        apiVersion: manifest.dhis2.apiVersion,\n                    }}\n                >\n                    <CssReset />\n                    <Provider store={configureStore()}>\n                        <MuiThemeProvider theme={muiTheme()}>\n                            <App baseUrl={baseUrl} d2={initializedD2} />\n                        </MuiThemeProvider>\n                    </Provider>\n                </RuntimeProvider>,\n                document.getElementById('root')\n            );\n        });\n};\n\ninit();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"ControlBar_root__3LaTt\",\"content\":\"ControlBar_content__1r98-\",\"draghandle\":\"ControlBar_draghandle__1VWa0\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"ClearButton_button__2yjcV\",\"icon\":\"ClearButton_icon__1fqj8\"};","import isObject from 'lodash/isObject';\nimport { VIS_TYPE_COLUMN, VIS_TYPE_PIVOT_TABLE } from '@dhis2/analytics';\nimport { apiFetchFavorite, getMapFields } from '../../../api/metadata';\nimport {\n    REPORT_TABLE,\n    CHART,\n    MAP,\n    EVENT_REPORT,\n    EVENT_CHART,\n    itemTypeMap,\n} from '../../../modules/itemTypes';\nimport { getBaseUrl, getWithoutId } from '../../../modules/util';\nimport { getGridItemDomId } from '../../ItemGrid/gridUtil';\n\n//external plugins\nconst itemTypeToExternalPlugin = {\n    [MAP]: 'mapPlugin',\n    [EVENT_REPORT]: 'eventReportPlugin',\n    [EVENT_CHART]: 'eventChartPlugin',\n};\nconst hasIntegratedPlugin = type => [CHART, REPORT_TABLE].includes(type);\n\nconst getPlugin = type => {\n    if (hasIntegratedPlugin(type)) {\n        return true;\n    }\n    const pluginName = itemTypeToExternalPlugin[type];\n\n    return global[pluginName];\n};\n\nexport const THEMATIC_LAYER = 'thematic';\n\nexport const pluginIsAvailable = (item = {}, visualization = {}) => {\n    const type = visualization.activeType || item.type;\n\n    return !!getPlugin(type);\n};\n\nexport const extractFavorite = item => {\n    if (!isObject(item)) {\n        return null;\n    }\n\n    const propName = itemTypeMap[item.type].propName;\n\n    return (\n        item[propName] ||\n        (item.reportTable ||\n            item.chart ||\n            item.map ||\n            item.eventReport ||\n            item.eventChart ||\n            {})\n    );\n};\n\nexport const extractMapView = map =>\n    map.mapViews && map.mapViews.find(mv => mv.layer.includes(THEMATIC_LAYER));\n\nexport const loadPlugin = (plugin, config, credentials) => {\n    if (!(plugin && plugin.load)) {\n        return;\n    }\n\n    plugin.url = credentials.baseUrl;\n    plugin.loadingIndicator = true;\n    plugin.dashboard = true;\n    if (credentials.auth) {\n        plugin.auth = credentials.auth;\n    }\n    plugin.load(config);\n};\n\nexport const getId = item => extractFavorite(item).id;\nexport const getName = item => extractFavorite(item).name;\nexport const getDescription = item => extractFavorite(item).description;\nexport const getLink = (item, d2) => {\n    const baseUrl = getBaseUrl(d2);\n    const appUrl = itemTypeMap[item.type].appUrl(getId(item));\n\n    return `${baseUrl}/${appUrl}`;\n};\n\nexport const load = async (\n    item,\n    visualization,\n    { credentials, activeType }\n) => {\n    const config = {\n        ...visualization,\n        el: getGridItemDomId(item.id),\n    };\n\n    const type = activeType || item.type;\n    const plugin = getPlugin(type);\n\n    loadPlugin(plugin, config, credentials);\n};\n\nexport const fetch = async item => {\n    const fetchedFavorite = await apiFetchFavorite(getId(item), item.type, {\n        fields: item.type === MAP ? getMapFields() : null,\n    });\n\n    return fetchedFavorite;\n};\n\nexport const resize = item => {\n    const plugin = getPlugin(item.type);\n\n    if (plugin && plugin.resize) {\n        plugin.resize(getGridItemDomId(item.id));\n    }\n};\n\nexport const unmount = (item, activeType) => {\n    const plugin = getPlugin(activeType);\n\n    if (plugin && plugin.unmount) {\n        plugin.unmount(getGridItemDomId(item.id));\n    }\n};\n\nexport const getVisualizationConfig = (\n    visualization,\n    originalType,\n    activeType\n) => {\n    if (originalType === MAP && originalType !== activeType) {\n        const extractedMapView = extractMapView(visualization);\n\n        if (extractedMapView === undefined) {\n            return null;\n        }\n\n        return getWithoutId({\n            ...visualization,\n            ...extractedMapView,\n            mapViews: undefined,\n            type: activeType === CHART ? VIS_TYPE_COLUMN : VIS_TYPE_PIVOT_TABLE,\n        });\n    } else if (originalType === REPORT_TABLE && activeType === CHART) {\n        return getWithoutId({ ...visualization, type: VIS_TYPE_COLUMN });\n    } else if (originalType === CHART && activeType === REPORT_TABLE) {\n        return getWithoutId({\n            ...visualization,\n            type: VIS_TYPE_PIVOT_TABLE,\n        });\n    }\n\n    return getWithoutId(visualization);\n};\n","import isFunction from 'd2-utilizr/lib/isFunction';\n\nimport { orObject } from '../../modules/util';\n\n// Dimensions for the react-grid-layout\n\nexport const GRID_COMPACT_TYPE = 'vertical'; // vertical | horizonal | null\nexport const GRID_ROW_HEIGHT = 10;\nconst GRID_COLUMN_WIDTH_PX = 20;\nconst GRID_LAYOUT = 'FLEXIBLE'; // FIXED | FLEXIBLE\nexport const MARGIN = [10, 10];\n\nexport const NEW_ITEM_SHAPE = { x: 0, y: 0, w: 20, h: 29 };\nexport const ITEM_MIN_HEIGHT = 4;\n\n// Dimensions for getShape\n\nconst NUMBER_OF_ITEM_COLS = 2;\nconst GRID_COLUMNS = 60;\n\nexport const getGridColumns = () => {\n    switch (GRID_LAYOUT) {\n        case 'FLEXIBLE':\n            return GRID_COLUMNS;\n        case 'FIXED':\n            return Math.floor((window.innerWidth - 20) / GRID_COLUMN_WIDTH_PX);\n        default:\n            return GRID_COLUMNS;\n    }\n};\n\n// isNonNegativeInteger\n\nconst isNonNegativeInteger = x => Number.isInteger(x) && x >= 0;\n\n// Does the item have all the shape properties?\n\nexport const hasShape = item =>\n    isNonNegativeInteger(item.x) &&\n    isNonNegativeInteger(item.y) &&\n    isNonNegativeInteger(item.w) &&\n    isNonNegativeInteger(item.h);\n\n// returns a rectangular grid block dimensioned with x, y, w, h in grid units.\n// based on a grid with 3 items across\nexport const getShape = i => {\n    if (!isNonNegativeInteger(i)) {\n        throw new Error('Invalid grid block number');\n    }\n\n    const col = i % NUMBER_OF_ITEM_COLS;\n    const row = Math.floor(i / NUMBER_OF_ITEM_COLS);\n    const itemWidth = Math.floor((GRID_COLUMNS - 1) / NUMBER_OF_ITEM_COLS);\n    const itemHeight = GRID_ROW_HEIGHT * 2;\n\n    return {\n        x: col * itemWidth,\n        y: row * itemHeight,\n        w: itemWidth,\n        h: itemHeight,\n    };\n};\n\n/**\n * Calculates the grid item's original height in pixels based\n * on the height in grid units. This calculation\n * is copied directly from react-grid-layout GridItem.js (calcPosition)\n *\n * @param {Object} item item containing shape (x, y, w, h)\n */\nconst getOriginalHeight = item => {\n    const originalHeight = Math.round(\n        GRID_ROW_HEIGHT * item.h + Math.max(0, item.h - 1) * MARGIN[1]\n    );\n\n    return { originalHeight };\n};\n\n/**\n * Returns an array of items containing the x, y, w, h dimensions\n * and the item's originalheight in pixels\n * @function\n * @param {Array} items\n * @returns {Array}\n */\n\nexport const withShape = items =>\n    items.map((item, index) => {\n        const itemWithShape = hasShape(item)\n            ? item\n            : Object.assign({}, item, getShape(index));\n\n        return Object.assign(\n            {},\n            itemWithShape,\n            getOriginalHeight(itemWithShape)\n        );\n    });\n\nexport const getGridItemDomId = id => `item-${id}`;\n\nexport function onItemResize(id) {\n    const el = orObject(document.querySelector(`#${getGridItemDomId(id)}`));\n    if (isFunction(el.setViewportSize))\n        setTimeout(\n            () => el.setViewportSize(el.clientWidth - 5, el.clientHeight - 5),\n            10\n        );\n}\n","import i18n from '@dhis2/d2-i18n';\nimport TableIcon from '@material-ui/icons/ViewList';\nimport ChartIcon from '@material-ui/icons/InsertChart';\nimport MapIcon from '@material-ui/icons/Public';\nimport ExtensionIcon from '@material-ui/icons/Extension';\nimport DescriptionIcon from '@material-ui/icons/Description';\nimport PersonIcon from '@material-ui/icons/Person';\nimport FontDownloadIcon from '@material-ui/icons/FontDownload';\nimport EmailIcon from '@material-ui/icons/Email';\nimport CropFreeIcon from '@material-ui/icons/CropFree';\nimport NotInterestedIcon from '@material-ui/icons/NotInterested';\n\nimport { getBaseUrl } from './util';\n\n// Item types\nexport const VISUALIZATION = 'VISUALIZATION';\nexport const REPORT_TABLE = 'REPORT_TABLE';\nexport const CHART = 'CHART';\nexport const MAP = 'MAP';\nexport const EVENT_REPORT = 'EVENT_REPORT';\nexport const EVENT_CHART = 'EVENT_CHART';\nexport const APP = 'APP';\nexport const REPORTS = 'REPORTS';\nexport const RESOURCES = 'RESOURCES';\nexport const USERS = 'USERS';\nexport const MESSAGES = 'MESSAGES';\nexport const TEXT = 'TEXT';\nexport const SPACER = 'SPACER';\n\nconst DOMAIN_TYPE_AGGREGATE = 'AGGREGATE';\nconst DOMAIN_TYPE_TRACKER = 'TRACKER';\n\n// Dashboard helpers\nexport const spacerContent = 'SPACER_ITEM_FOR_DASHBOARD_LAYOUT_CONVENIENCE';\nexport const emptyTextItemContent = 'TEXT_ITEM_WITH_NO_CONTENT';\nexport const isSpacerType = item =>\n    item.type === TEXT && item.text === spacerContent;\nexport const isTextType = item =>\n    item.type === TEXT && item.text !== spacerContent;\nexport const isVisualizationType = item =>\n    !!itemTypeMap[item.type].isVisualizationType;\nexport const hasMapView = itemType =>\n    itemTypeMap[itemType].domainType === DOMAIN_TYPE_AGGREGATE;\nexport const isTrackerDomainType = itemType =>\n    itemTypeMap[itemType].domainType === DOMAIN_TYPE_TRACKER;\nexport const getDefaultItemCount = itemType =>\n    itemTypeMap[itemType].defaultItemCount || 5;\nexport const getAppName = itemType => itemTypeMap[itemType].appName || '';\n\n// Item type map\nexport const itemTypeMap = {\n    [VISUALIZATION]: {\n        id: VISUALIZATION,\n        endPointName: 'visualizations',\n        propName: 'visualization',\n        pluralTitle: i18n.t('Visualizations'),\n        appUrl: id => `dhis-web-data-visualizer/#/${id}`,\n        appName: 'Data Visualizer',\n        defaultItemCount: 10,\n    },\n    [REPORT_TABLE]: {\n        id: REPORT_TABLE,\n        endPointName: 'reportTables',\n        propName: 'reportTable',\n        pluralTitle: i18n.t('Pivot tables'),\n        domainType: DOMAIN_TYPE_AGGREGATE,\n        isVisualizationType: true,\n        appUrl: id => `dhis-web-data-visualizer/#/${id}`,\n        appName: 'Data Visualizer',\n    },\n    [CHART]: {\n        id: CHART,\n        endPointName: 'charts',\n        propName: 'chart',\n        pluralTitle: i18n.t('Charts'),\n        domainType: DOMAIN_TYPE_AGGREGATE,\n        isVisualizationType: true,\n        appUrl: id => `dhis-web-data-visualizer/#/${id}`,\n        appName: 'Data Visualizer',\n    },\n    [MAP]: {\n        id: MAP,\n        endPointName: 'maps',\n        propName: 'map',\n        pluralTitle: i18n.t('Maps'),\n        domainType: DOMAIN_TYPE_AGGREGATE,\n        isVisualizationType: true,\n        appUrl: id => `dhis-web-maps/?id=${id}`,\n        appName: 'Maps',\n    },\n    [EVENT_REPORT]: {\n        id: EVENT_REPORT,\n        endPointName: 'eventReports',\n        propName: 'eventReport',\n        pluralTitle: i18n.t('Event reports'),\n        domainType: DOMAIN_TYPE_TRACKER,\n        isVisualizationType: true,\n        appUrl: id => `dhis-web-event-reports/?id=${id}`,\n        appName: 'Event Reports',\n    },\n    [EVENT_CHART]: {\n        id: EVENT_CHART,\n        endPointName: 'eventCharts',\n        propName: 'eventChart',\n        pluralTitle: i18n.t('Event charts'),\n        domainType: DOMAIN_TYPE_TRACKER,\n        isVisualizationType: true,\n        appUrl: id => `dhis-web-event-visualizer/?id=${id}`,\n        appName: 'Event Visualizer',\n    },\n    [APP]: {\n        endPointName: 'apps',\n        propName: 'appKey',\n        pluralTitle: i18n.t('Apps'),\n    },\n    [REPORTS]: {\n        id: REPORTS,\n        endPointName: 'reports',\n        propName: 'reports',\n        pluralTitle: i18n.t('Reports'),\n        appUrl: id =>\n            `dhis-web-reporting/getReportParams.action?mode=report&uid=${id}`,\n    },\n    [RESOURCES]: {\n        id: RESOURCES,\n        endPointName: 'resources',\n        propName: 'resources',\n        pluralTitle: i18n.t('Resources'),\n        appUrl: id => `api/documents/${id}/data`,\n    },\n    [USERS]: {\n        id: USERS,\n        endPointName: 'users',\n        propName: 'users',\n        pluralTitle: i18n.t('Users'),\n        appUrl: id => `dhis-web-dashboard-integration/profile.action?id=${id}`,\n    },\n    [TEXT]: {\n        id: TEXT,\n        propName: 'text',\n    },\n    [MESSAGES]: {\n        propName: 'messages',\n    },\n    [SPACER]: {\n        propName: 'text',\n    },\n};\n\nexport const getEndPointName = type => itemTypeMap[type].endPointName;\n\nexport const getItemUrl = (type, item, d2) => {\n    let url;\n\n    if (type === APP) {\n        url = item.launchUrl;\n    }\n\n    if (itemTypeMap[type] && itemTypeMap[type].appUrl) {\n        url = `${getBaseUrl(d2)}/${itemTypeMap[type].appUrl(item.id)}`;\n    }\n\n    return url;\n};\n\nexport const getItemIcon = type => {\n    switch (type) {\n        case REPORT_TABLE:\n        case EVENT_REPORT:\n        case REPORTS:\n            return TableIcon;\n        case CHART:\n        case EVENT_CHART:\n            return ChartIcon;\n        case MAP:\n            return MapIcon;\n        case APP:\n            return ExtensionIcon;\n        case RESOURCES:\n            return DescriptionIcon;\n        case USERS:\n            return PersonIcon;\n        case TEXT:\n            return FontDownloadIcon;\n        case MESSAGES:\n            return EmailIcon;\n        case SPACER:\n            return CropFreeIcon;\n        default:\n            return NotInterestedIcon;\n    }\n};\n"],"sourceRoot":""}
{"version":3,"sources":["D2App/components/styles/DashboardContainer.module.css","D2App/components/styles/NoContentMessage.module.css","D2App/pages/print/styles/PrintActionsBar.module.css","D2App/pages/print/styles/PrintInfo.module.css","D2App/components/Item/ItemHeader/styles/PrintItemInfo.module.css","D2App/components/Item/ListItem/Item.module.css","D2App/components/Item/MessagesItem/getFormattedDate.js","D2App/components/Item/MessagesItem/styles/Item.module.css","D2App/components/Item/PrintTitlePageItem/styles/Item.module.css","D2App/components/Item/VisualizationItem/styles/FatalErrorBoundary.module.css","D2App/components/Item/VisualizationItem/styles/ItemFooter.module.css","D2App/components/Item/VisualizationItem/Visualization/loadExternalScript.js","D2App/components/Item/VisualizationItem/Visualization/styles/LoadingMask.module.css","D2App/components/Item/VisualizationItem/Visualization/styles/DataVisualizerPlugin.module.css","D2App/components/Item/VisualizationItem/Visualization/styles/VisualizationErrorMessage.module.css","D2App/components/Item/VisualizationItem/Visualization/styles/NoVisualizationMessage.module.css","D2App/pages/print/styles/PrintLayoutDashboard.module.css","D2App/pages/edit/styles/ConfirmActionDialog.module.css","D2App/pages/edit/styles/FilterSettingsDialog.module.css","D2App/pages/edit/styles/ActionsBar.module.css","D2App/pages/edit/styles/ItemGrid.module.css","D2App/pages/edit/styles/NotSupportedNotice.module.css","D2App/pages/edit/styles/EditDashboard.module.css","D2App/pages/edit/ItemSelector/styles/ContentMenuItem.module.css","D2App/pages/edit/ItemSelector/styles/HeaderMenuItem.module.css","D2App/pages/edit/ItemSelector/styles/CategorizedMenuGroup.module.css","D2App/pages/edit/ItemSelector/styles/ItemSelector.module.css","D2App/pages/edit/styles/TitleBar.module.css","D2App/pages/edit/styles/NewDashboard.module.css","D2App/pages/print/styles/PrintDashboard.module.css","D2App/pages/view/DashboardsBar/styles/Chip.module.css","D2App/pages/view/DashboardsBar/styles/ClearButton.module.css","D2App/pages/view/DashboardsBar/styles/Filter.module.css","D2App/pages/view/DashboardsBar/styles/Content.module.css","D2App/pages/view/DashboardsBar/styles/DragHandle.module.css","D2App/pages/view/DashboardsBar/styles/ShowMoreButton.module.css","D2App/pages/view/DashboardsBar/styles/DashboardsBar.module.css","D2App/pages/view/FilterBar/styles/FilterBadge.module.css","D2App/pages/view/FilterBar/styles/FilterBar.module.css","D2App/pages/view/styles/ItemGrid.module.css","D2App/pages/view/styles/ViewDashboard.module.css","D2App/components/DropdownButton/DropdownButton.module.css","D2App/pages/view/TitleBar/styles/FilterSelector.module.css","D2App/pages/view/TitleBar/styles/StarDashboardButton.module.css","D2App/pages/view/TitleBar/styles/ActionsBar.module.css","D2App/pages/view/TitleBar/styles/Description.module.css","D2App/pages/view/TitleBar/styles/TitleBar.module.css","D2App/modules/util.js","D2App/reducers/controlBar.js","D2App/api/userDataStore.js","D2App/api/controlBar.js","D2App/actions/controlBar.js","D2App/api/fetchAllDashboards.js","D2App/reducers/dashboards.js","D2App/actions/dashboards.js","D2App/reducers/showDescription.js","D2App/api/description.js","D2App/actions/showDescription.js","D2App/modules/dashboardModes.js","D2App/modules/smallScreen.js","D2App/modules/gridUtil.js","D2App/modules/uiBackendItemConverter.js","D2App/api/metadata.js","D2App/api/fetchDashboard.js","D2App/modules/getCustomDashboards.js","D2App/api/editDashboard.js","D2App/reducers/editDashboard.js","D2App/actions/editDashboard.js","D2App/components/DashboardContainer.js","D2App/components/NoContentMessage.js","D2App/components/WindowDimensionsProvider.js","D2App/modules/setHeaderbarVisible.js","D2App/reducers/printDashboard.js","D2App/actions/printDashboard.js","D2App/pages/print/ActionsBar.js","D2App/pages/print/PrintInfo.js","D2App/reducers/dimensions.js","D2App/reducers/itemFilters.js","D2App/actions/itemFilters.js","D2App/components/Item/ItemHeader/DeleteItemButton.js","D2App/components/Item/ItemHeader/EditItemActions.js","D2App/components/Item/ItemHeader/PrintItemInfo.js","D2App/components/Item/ItemHeader/ViewItemActions.js","D2App/components/Item/ItemHeader/ItemHeader.js","D2App/components/Item/AppItem/Item.js","D2App/components/Item/ListItem/assets/Delete.js","D2App/components/Item/ListItem/assets/Description.js","D2App/components/Item/ListItem/Item.js","D2App/reducers/messages.js","D2App/api/userSettings.js","D2App/components/UserSettingsProvider.js","D2App/components/Item/MessagesItem/Item.js","D2App/components/Item/NotSupportedItem/Item.js","D2App/components/Item/PageBreakItem/Item.js","D2App/reducers/selected.js","D2App/components/Item/PrintTitlePageItem/Item.js","D2App/components/Item/SpacerItem/Item.js","D2App/components/Item/TextItem/Item.js","D2App/reducers/itemActiveTypes.js","D2App/reducers/visualizations.js","D2App/api/dataStatistics.js","D2App/modules/item.js","D2App/api/fetchVisualization.js","D2App/api/systemSettings.js","D2App/components/SystemSettingsProvider.js","D2App/components/Item/VisualizationItem/assets/icons.js","D2App/components/Item/VisualizationItem/FatalErrorBoundary.js","D2App/modules/getGridItemDomElementClassName.js","D2App/components/Item/VisualizationItem/getGridItemElement.js","D2App/components/Item/VisualizationItem/isElementFullscreen.js","D2App/components/Item/VisualizationItem/getThematicMapViews.js","D2App/components/Item/VisualizationItem/ItemContextMenu/ViewAsMenuItems.js","D2App/components/Item/VisualizationItem/ItemContextMenu/ItemContextMenu.js","D2App/components/Item/VisualizationItem/ItemFooter.js","D2App/components/Item/VisualizationItem/memoizeOne.js","D2App/components/Item/VisualizationItem/Visualization/LoadingMask.js","D2App/components/Item/VisualizationItem/Visualization/VisualizationErrorMessage.js","D2App/components/Item/VisualizationItem/Visualization/DataVisualizerPlugin.js","D2App/components/Item/VisualizationItem/Visualization/getFilteredVisualization.js","D2App/components/Item/VisualizationItem/Visualization/getVisualizationConfig.js","D2App/components/Item/VisualizationItem/Visualization/DefaultPlugin.js","D2App/components/Item/VisualizationItem/Visualization/LegacyPlugin.js","D2App/components/Item/VisualizationItem/Visualization/NoVisualizationMessage.js","D2App/components/Item/VisualizationItem/Visualization/MapPlugin.js","D2App/components/Item/VisualizationItem/Visualization/Visualization.js","D2App/components/Item/VisualizationItem/Item.js","D2App/actions/itemActiveTypes.js","D2App/actions/visualizations.js","D2App/components/Item/Item.js","D2App/pages/print/printUtils.js","D2App/pages/print/StaticGrid.js","D2App/pages/print/PrintLayoutItemGrid.js","D2App/pages/print/PrintLayoutDashboard.js","D2App/api/messages.js","D2App/components/Item/MessagesItem/actions.js","D2App/pages/edit/ConfirmActionDialog.js","D2App/pages/edit/deleteDashboardMutation.js","D2App/modules/getFilteredDimensions.js","D2App/modules/useDimensions.js","D2App/actions/dimensions.js","D2App/pages/edit/FilterSettingsDialog.js","D2App/pages/edit/ActionsBar.js","D2App/actions/selected.js","D2App/components/ProgressiveLoadingContainer.js","D2App/pages/edit/ItemGrid.js","D2App/pages/edit/NotSupportedNotice.js","D2App/modules/useDebounce.js","D2App/pages/edit/ItemSelector/ContentMenuItem.js","D2App/pages/edit/ItemSelector/HeaderMenuItem.js","D2App/pages/edit/ItemSelector/selectableItems.js","D2App/pages/edit/ItemSelector/CategorizedMenuGroup.js","D2App/pages/edit/ItemSelector/actions.js","D2App/pages/edit/ItemSelector/ItemSearchField.js","D2App/pages/edit/ItemSelector/SinglesMenuGroup.js","D2App/pages/edit/ItemSelector/ItemSelector.js","D2App/pages/edit/ItemSelector/dashboardsQQuery.js","D2App/pages/edit/TitleBar.js","D2App/pages/edit/EditDashboard.js","D2App/pages/edit/NewDashboard.js","D2App/pages/print/PrintItemGrid.js","D2App/pages/print/PrintDashboard.js","D2App/reducers/dashboardsFilter.js","D2App/pages/view/DashboardsBar/Chip.js","D2App/pages/view/DashboardsBar/assets/Clear.js","D2App/pages/view/DashboardsBar/ClearButton.js","D2App/pages/view/DashboardsBar/Filter.js","D2App/actions/dashboardsFilter.js","D2App/pages/view/DashboardsBar/getFilteredDashboards.js","D2App/pages/view/DashboardsBar/Content.js","D2App/pages/view/DashboardsBar/DragHandle.js","D2App/pages/view/DashboardsBar/getRowsFromHeight.js","D2App/pages/view/DashboardsBar/assets/icons.js","D2App/pages/view/DashboardsBar/ShowMoreButton.js","D2App/pages/view/DashboardsBar/DashboardsBar.js","D2App/reducers/passiveViewRegistered.js","D2App/reducers/activeModalDimension.js","D2App/actions/activeModalDimension.js","D2App/pages/view/FilterBar/FilterBadge.js","D2App/pages/view/FilterBar/FilterBar.js","D2App/pages/view/ItemGrid.js","D2App/components/DropdownButton/assets/Arrow.js","D2App/components/DropdownButton/DropdownButton.js","D2App/pages/view/TitleBar/FilterDialog.js","D2App/pages/view/TitleBar/FilterSelector.js","D2App/pages/view/TitleBar/StarDashboardButton.js","D2App/pages/view/TitleBar/ActionsBar.js","D2App/pages/view/TitleBar/apiStarDashboard.js","D2App/pages/view/TitleBar/Description.js","D2App/pages/view/TitleBar/TitleBar.js","D2App/pages/view/ViewDashboard.js","D2App/actions/passiveViewRegistered.js","D2App/modules/localStorage.js","D2App/pages/view/CacheableViewDashboard.js","D2App/components/App.js","D2App/reducers/index.js","D2App/configureStore.js","D2App/locales/index.js","D2App/AppWrapper.js","D2App/modules/itemTypes.js","D2App/components/Item/VisualizationItem/Visualization/plugin.js","D2App/components/Item/VisualizationItem/getVisualizationContainerDomId.js","D2App/components/Item/ItemHeader/styles/ItemHeader.module.css"],"names":["module","exports","getFormattedDate","value","uiLocale","global","Intl","DateTimeFormat","locale","year","month","day","format","Date","substr","replace","loadExternalScript","src","startsWith","path","process","join","normalizeRelativePath","Promise","resolve","reject","document","querySelector","isScriptLoaded","element","createElement","type","async","cleanup","console","log","head","removeChild","onload","e","onerror","error","appendChild","orArray","param","Array","isArray","orObject","isObject","arrayToIdMap","array","reduce","obj","item","id","validateReducer","defaultValue","undefined","SET_CONTROLBAR_USER_ROWS","combineReducers","userRows","state","action","sGetControlBarUserRows","controlBar","sGetControlBarRoot","NAMESPACE","getNamespace","d2","currentUser","dataStore","has","hasDashboardNamespace","get","create","apiPostUserDataStoreValue","key","getInstance","set","apiGetUserDataStoreValue","_ns$keys","ns","keys","find","k","KEY_CONTROLBAR_ROWS","acSetControlBarUserRows","rows","dashboardsQuery","resource","params","fields","paging","SET_DASHBOARDS","ADD_DASHBOARDS","SET_DASHBOARD_STARRED","EMPTY_DASHBOARDS","sGetDashboardsRoot","dashboards","sGetDashboardById","sGetDashboardStarred","starred","sDashboardsIsFetching","sGetAllDashboards","sGetStarredDashboards","Object","values","filter","dashboard","sGetUnstarredDashboards","tFetchDashboards","dispatch","getState","dataEngine","acSetDashboards","query","apiFetchDashboards","SET_SHOW_DESCRIPTION","sGetShowDescription","showDescription","KEY_SHOW_DESCRIPTION","acSetShowDescription","EDIT","NEW","VIEW","PRINT","PRINT_LAYOUT","isEditMode","mode","includes","isPrintMode","isViewMode","isSmallScreen","width","getBreakpoint","DASHBOARD_WRAPPER_LR_MARGIN_PX","GRID_COMPACT_TYPE","GRID_ROW_HEIGHT_PX","MARGIN_PX","MARGIN_SM_PX","GRID_PADDING_PX","NEW_ITEM_SHAPE","x","y","w","h","isNonNegativeInteger","Number","isInteger","hasShape","withShape","items","map","i","assign","col","row","Math","floor","itemWidth","MAX_ITEM_GRID_WIDTH","getShape","originalH","getGridWidth","windowWidthPx","getGridUnitsForSmFromPx","hPx","gridUnitHeightPx","round","getProportionalHeight","wPx","getItemWHPx","ratioWH","isVisualizationType","newWPx","newHPx","getGridItemProperties","itemId","minH","getPageBreakItemShape","yPos","isStatic","GRID_COLUMNS","static","getPrintTitlePageItemShape","isOneItemPerPage","gridUnits","colOrRowSize","marginPx","max","spacerContent","emptyTextItemContent","isTextType","TEXT","text","convertUiItemsToBackend","SPACER","isUiSpacerType","convertBackendItemsToUi","isBackendSpacerType","gridProperties","getIdNameFields","rename","getDimensionFields","withItems","arrayClean","getAxesFields","getFavoriteFields","withDimensions","withOptions","baseDashboardFields","viewDashboardQuery","editDashboardQuery","apiFetchDashboard","forSave","variables","data","dashboardItems","arrayFrom","d","_d$allowedFilters","name","displayName","description","displayDescription","created","lastUpdated","access","restrictFilters","allowedFilters","href","createDashboardMutation","updateDashboardMutation","skipTranslation","skipSharing","generatePayload","height","RECEIVED_EDIT_DASHBOARD","RECEIVED_NOT_EDITING","START_NEW_DASHBOARD","RECEIVED_TITLE","RECEIVED_DESCRIPTION","ADD_DASHBOARD_ITEM","REMOVE_DASHBOARD_ITEM","UPDATE_DASHBOARD_ITEM","RECEIVED_DASHBOARD_LAYOUT","SET_PRINT_PREVIEW_VIEW","CLEAR_PRINT_PREVIEW_VIEW","RECEIVED_FILTER_SETTINGS","DEFAULT_STATE_EDIT_DASHBOARD","NEW_DASHBOARD_STATE","update","delete","printPreviewView","isDirty","sGetEditDashboardRoot","editDashboard","sGetIsEditing","isEmpty","sGetIsPrintPreviewView","sGetEditDashboardItems","sGetEditIsDirty","acClearEditDashboard","acAddDashboardItem","itemPropName","itemTypeMap","propName","generateUid","gridItemProperties","shape","PAGEBREAK","PRINT_TITLE_PAGE","position","content","acUpdateDashboardItem","acRemoveDashboardItem","tSaveDashboard","dashboardToSave","i18n","t","dashboardId","response","mutate","uid","updateDashboard","postDashboard","DashboardContainer","children","covered","React","className","cx","classes","container","NoContentMessage","WindowDimensionsCtx","createContext","windowDims","window","innerHeight","innerWidth","WindowDimensionsProvider","dimensions","setDimensions","useState","useEffect","handleResize","debounce","addEventListener","removeEventListener","Provider","useWindowDimensions","useContext","setHeaderbarVisible","show","header","getElementsByTagName","classList","remove","add","SET_PRINT_DASHBOARD","CLEAR_PRINT_DASHBOARD","ADD_PRINT_DASHBOARD_ITEM","SET_PRINT_DASHBOARD_LAYOUT","REMOVE_PRINT_DASHBOARD_ITEM","UPDATE_PRINT_DASHBOARD_ITEM","DEFAULT_STATE_PRINT_DASHBOARD","DEFAULT_DASHBOARD_ITEMS","NEW_PRINT_DASHBOARD_STATE","sGetPrintDashboardRoot","printDashboard","sGetPrintDashboardItems","_sGetPrintDashboardRo","acSetPrintDashboard","acClearPrintDashboard","acAddPrintDashboardItem","acUpdatePrintDashboardItem","PrintActionsBar","getExitPrintButton","isSmall","Button","buttonSmall","buttonLarge","small","IconChevronLeft24","color","colors","grey700","getPrintButton","onClick","print","actions","Link","link","to","defaultValues","PrintInfo","isLayout","layoutStyle","title","printSuggestions","divider","SET_DIMENSIONS","PE_OU_DIMENSIONS","getDimensionById","DIMENSION_ID_PERIOD","DIMENSION_ID_ORGUNIT","INITIAL_DIMENSIONS","CLEAR_ITEM_FILTERS","ADD_ITEM_FILTER","REMOVE_ITEM_FILTER","DEFAULT_STATE_ITEM_FILTERS","sGetItemFiltersRoot","itemFilters","sGetNamedItemFilters","createSelector","filters","arr","push","dimension","acRemoveItemFilter","acClearItemFilters","DeleteItemButton","Tooltip","placement","secondary","icon","IconDelete24","red600","dataTest","mapDispatchToProps","connect","itemActionsWrap","PrintWarning","warning","IconWarning24","grey600","ViewItemActions","actionButtons","ItemHeader","forwardRef","dashboardMode","isShortened","rest","ref","Actions","EditItemActions","PrintItemInfo","getItemActionsMap","itemHeaderWrap","itemTitle","getIframeSrc","appDetails","iframeSrc","launchUrl","length","ouFilter","split","slice","ownProps","_appDetails","_appDetails$settings","_appDetails$settings$","useD2","appKey","system","installedApps","app","hideTitle","settings","dashboardWidget","Fragment","shortened","Divider","margin","spacers","dp4","style","border","display","justifyContent","alignItems","IconQuestion24","grey500","DeleteIcon","xmlns","viewBox","fill","red500","DescriptionIcon","getItemTitle","pluralTitle","removeItem","updateItem","baseUrl","useConfig","contentItems","index","findIndex","el","getContentItems","getLink","contentItem","deleteButton","deletebutton","listItemType","newContent","updateDashboardItem","deleteicon","grey900","getItemUrl","list","itemicon","RECEIVED_MESSAGES","sGetMessagesRoot","messages","userSettingsQuery","UserSettingsCtx","UserSettingsProvider","setSettings","engine","useDataEngine","userSettings","displayProperty","keyAnalysisDisplayProperty","fetchData","useUserSettings","PRIVATE","messageTypes","VALIDATION_RESULT","TICKET","SYSTEM","MessagesContainer","getMessageHref","msg","msgIdentifier","messageType","modeClass","sender","latestMsg","getMessageSender","readClass","read","msgDate","location","messageCount","keyUiLocale","snippet","getMessageItems","seeAll","NotSupportedItem","message","flexDirection","PageBreakItem","SET_SELECTED","CLEAR_SELECTED","DEFAULT_SELECTED_STATE","SELECTED_PROPERTIES","sGetSelected","selected","sGetSelectedId","sGetSelectedDisplayName","sGetSelectedDisplayDescription","sGetSelectedDashboardItems","PrintTitlePageItem","titlePage","filterTitle","listItems","filterListItem","val","filterList","getItemFilterList","defaultProps","sGetPrintDashboardName","sGetPrintDashboardDescription","fontSize","lineHeight","SpacerItem","props","textDiv","padding","whiteSpace","textField","fontStretch","marginBottom","marginTop","sGetIsPrinting","onChangeText","updatedItem","viewItem","textDivStyle","RichTextParser","editItem","RichTextEditor","onEdit","event","target","TextArea","placeholder","onChange","printItem","textItem","SET_ITEM_ACTIVE_TYPE","CLEAR_ITEM_ACTIVE_TYPES","DEFAULT_STATE_ITEM_ACTIVE_TYPES","sGetItemActiveType","itemActiveTypes","ADD_VISUALIZATION","CLEAR_VISUALIZATIONS","DEFAULT_STATE_VISUALIZATIONS","p","sGetVisualization","visualizations","sGetVisualizationsRoot","apiPostDataStatistics","eventType","url","Api","getApi","post","getVisualizationFromItem","_itemTypeMap$item$typ","reportTable","chart","eventReport","eventChart","getVisualizationId","getVisualizationName","apiFetchVisualization","MAP","getEndPointName","DEFAULT_SETTINGS","keyDashboardContextMenuItemOpenInRelevantApp","keyDashboardContextMenuItemShowInterpretationsAndDetails","keyDashboardContextMenuItemSwitchViewType","keyDashboardContextMenuItemViewFullscreen","keyGatherAnalyticalObjectStatisticsInDashboardViews","SYSTEM_SETTINGS_REMAPPINGS","keyHideBiMonthlyPeriods","keyHideDailyPeriods","keyHideMonthlyPeriods","keyHideWeeklyPeriods","keyHideBiWeeklyPeriods","renameSystemSettings","mapped","systemSettingsQuery","SystemSettingsCtx","SystemSettingsProvider","systemSettings","useSystemSettings","Warning","FatalErrorBoundary","Component","constructor","super","this","errorFound","componentDidCatch","info","setState","onFatalError","render","Function","prototype","getGridItemDomElementClassName","getGridItemElement","isElementFullscreen","fullscreenElement","webkitFullscreenElement","contains","getThematicMapViews","mapViews","mv","layer","ViewAsMenuItems","activeType","visualization","onActiveTypeChanged","isTrackerType","isTrackerDomainType","onViewTable","EVENT_REPORT","REPORT_TABLE","onViewChart","EVENT_CHART","CHART","isDisabled","iconColor","ViewAsChartMenuItem","ChartMenuItem","MenuItem","dense","disabled","label","IconVisualizationColumn16","ViewAsTableMenuItem","TableMenuItem","IconTable16","hasMapView","IconWorld16","ItemContextMenu","menuIsOpen","setMenuIsOpen","allowVisOpenInApp","allowVisShowInterpretations","allowVisViewAs","allowVisFullscreen","fullscreenAllowed","fullscreenSupported","loadItemFailed","closeMenu","canViewAs","isSingleValue","isYearOverYear","VIS_TYPE_GAUGE","VIS_TYPE_PIE","interpretationMenuLabel","activeFooter","buttonRef","createRef","itemHref","appUrl","onToggleFullscreen","IconFullscreenExit16","IconMore24","Popover","reference","arrow","onClickOutside","Menu","onSelectActiveType","IconLaunch16","appName","getAppName","IconMessages16","onToggleFooter","IconFullscreen16","ItemFooter","line","scrollContainer","InterpretationsComponent","toLowerCase","memoizeOne","fn","lastArgs","lastValue","args","every","arg","LoadingMask","center","CircularLoader","VisualizationErrorMessage","visHref","grey400","transform","errorMessage","appLink","stopPropagation","rel","VisualizationPlugin","lazy","DataVisualizerPlugin","filterVersion","visualizationLoaded","setVisualizationLoaded","setError","onLoadingComplete","useCallback","Suspense","fallback","wrapper","forDashboard","onError","getFilteredVisualization","visRows","visColumns","columns","visFilters","forEach","dimensionId","dimensionFound","dimensionObjects","getWithoutId","object","getVisualizationConfig","originalType","thematicMapViews","VIS_TYPE_COLUMN","VIS_TYPE_PIVOT_TABLE","layout","getAdaptedUiLayoutByType","DefaultPlugin","options","credentials","auth","defaultHeaders","Authorization","prevItem","useRef","prevActiveType","prevFilterVersion","load","current","getVisualizationContainerDomId","LegacyPlugin","availableHeight","availableWidth","gridWidth","setViewportSize","setTimeout","clientWidth","clientHeight","NoVisualizationMessage","_extends","arguments","source","hasOwnProperty","call","apply","MapPlugin","applyFilters","isFullscreen","plugin","getPlugin","resize","resizeMap","unmount","pluginIsAvailable","mapView","getVisualization","Visualization","memoizedGetFilteredVisualization","memoizedGetVisualizationConfig","getFilterVersion","uniqueId","visualizationConfig","VISUALIZATION","_defineProperty","defineProperty","enumerable","configurable","writable","Item","showFooter","configLoaded","requestFullscreen","webkitRequestFullscreen","exitFullscreen","webkitExitFullscreen","onToggleItemExpanded","getActiveType","setActiveType","isEditing","headerRef","itemHeaderTotalMargin","itemContentPadding","calculatedHeight","smallOriginalH","getItemHeightPx","memoizedGetContentHeight","contentRef","offsetHeight","_getGridItemElement","rect","getBoundingClientRect","getComputedStyle","documentElement","parseInt","getPropertyValue","measuredHeight","preferMeasured","setVisualization","getDataStatisticsName","isFullscreenSupported","Consumer","getAvailableHeight","getAvailableWidth","_ownProps$item","GridItem","VisualizationItem","MESSAGES","MessagesItem","REPORTS","RESOURCES","USERS","ListItem","TextItem","APP","AppItem","getGridItem","getTransformYPx","elStyle","_elStyle$transform$sp","transformY","match","isLeapPage","n","getMultiple","factor","multiple","StaticGrid","onLayoutChange","pageWidthPx","ReactGridLayout","cols","rowHeight","compactType","isDraggable","isResizable","draggableCancel","PrintLayoutItemGrid","newLayout","updateDashboardLayout","pageBreaks","sortedPageBreaks","sortBy","itemClassNames","isFirstPageBreak","getItemComponent","hideExtraPageBreaks","sortedElements","elements","types","elementsWithBoundingRect","from","indexOf","bottomY","getDomGridItemsSortedByYPos","querySelectorAll","pageBreakBottom","lastItemBottom","foundNonPageBreak","thisItemBottom","gridElement","maxHeight","firstBreak","scrollArea","scroll","componentDidMount","componentDidUpdate","getItemComponents","addPageBreaks","addDashboardItem","yPosList","pageNum","getPageBreakPositions","_ownProps$match","_ownProps$match$param","fromEdit","setPrintDashboard","redirectUrl","setRedirectUrl","isLoading","setIsLoading","customizePrintLayoutDashboard","dboard","loadDashboard","Redirect","Layer","translucent","CenteredContent","editView","pageOuter","messageConversationsQuery","order","pageSize","tGetMessages","messageConversations","getMessages","err","ACTION_DELETE","ACTION_DISCARD","ConfirmActionDialog","dashboardName","onConfirm","onCancel","open","texts","cancel","confirm","destructive","Modal","onClose","ModalTitle","ModalContent","ModalActions","ButtonStrip","deleteDashboardMutation","filteredDimensions","dim","dimensionType","dataDimensionType","useDimensions","doFetch","useSelector","useDispatch","fetchDimensions","unfilteredDimensions","apiFetchDimensions","acSetDimensions","getFilteredDimensions","RadioOptions","filtersSelectable","updateFilterDimensionRestrictability","radioButton","Radio","checked","payload","FilterSettingsDialog","initiallySelectedItems","setSelected","setFiltersSelectable","updateSelectedFilters","sItems","periodItem","Set","orgUnitItem","otherItems","closeDialog","large","descContainer","Transfer","filterable","leftHeader","transferHeader","maxSelections","Infinity","optionsWidth","rightHeader","selectedWidth","end","primary","saveFailedMessage","deleteFailedMessage","isPrintPreviewView","clearPrintDashboard","clearPrintPreview","clearSelected","saveDashboard","then","fetchDashboards","onDiscardChanges","setFilterSettings","acSetFilterSettings","showPrintPreview","_dashboard$access2","_dashboard$access3","_dashboard$access4","_dashboard$access5","_dashboard$access6","translationDlgIsOpen","setTranslationDlgIsOpen","filterSettingsDlgIsOpen","setFilterSettingsDlgIsOpen","confirmDeleteDlgIsOpen","setConfirmDeleteDlgIsOpen","confirmDiscardDlgIsOpen","setConfirmDiscardDlgIsOpen","saveFailureAlert","useAlert","critical","deleteFailureAlert","onConfirmDelete","onSave","newId","catch","onPrintPreview","onDiscardConfirmed","onContinueEditing","onFilterSettingsConfirmed","filterSettingsRestrictability","selectedFilters","toggleFilterSettingsDialog","toggleTranslationDialog","discardBtnText","editBar","controls","_dashboard$access","renderActionButtons","TranslationDialog","onRequestClose","objectToTranslate","modelDefinition","fieldsToTranslate","onTranslationError","onTranslationSaved","insertTheme","observerConfig","attributes","childList","subtree","ProgressiveLoadingContainer","shouldLoad","passive","checkShouldLoad","containerRef","bufferPx","bufferFactor","bottom","top","removeHandler","registerHandler","debouncedCheckShouldLoad","debounceMs","getElementsByClassName","handlerOptions","observer","MutationObserver","mutationsList","mutation","attributeName","observe","disconnect","componentWillUnmount","eventProps","pick","PropTypes","node","isRequired","number","string","acUpdateDashboardLayout","setGridWidth","ResponsiveReactGridLayout","grid","lg","breakpoints","layouts","containerPadding","onWidthChange","containerWidth","NotSupportedNotice","noticeContainer","NoticeBox","useDebounce","delay","debouncedValue","setDebouncedValue","handler","clearTimeout","LaunchLink","launchLink","InsertButton","buttonInsert","ContentMenuItem","onInsert","visType","ItemIcon","getItemIcon","renderedItemIcon","VisualizationIcon","visTypeIcons","menuItem","HeaderMenuItem","grey800","fontWeight","singleItems","categorizedItems","listItemTypes","tAddListItemContent","dashboardItemIndex","dashboardItem","hasMore","onChangeItemsLimit","seeMore","setSeeMore","addItem","newItem","itemUrl","showMoreButton","ItemSearchField","InputField","onFocus","category","addToDashboard","ItemSelector","isOpen","setIsOpen","setFilter","setItems","maxOptions","setMaxOptions","debouncedFilterText","maxItems","count","getDashboardsQQuery","res","updateMaxOptions","inputRef","maxWidth","popover","FlyoutMenu","menu","itemType","endPointName","itemCount","getDefaultItemCount","allItems","displayItems","CategorizedMenuGroup","concat","SinglesMenuGroup","EditTitleBar","onChangeTitle","onChangeDescription","section","titleDescription","_","TextAreaField","itemSelector","selectedDashboard","setEditDashboard","hasUpdateAccess","setHasUpdateAccess","ActionsBar","LayoutPrintPreview","TitleBar","ItemGrid","notice","setNewDashboard","notSupportedNotice","removeDashboardItem","_match$params","sortedItems","spacerCount","PrintItemGrid","SET_DASHBOARDS_FILTER","CLEAR_DASHBOARDS_FILTER","sGetDashboardsFilter","dashboardsFilter","Chip","chipProps","IconStarFilled24","white","debouncedPostStatistics","UiChip","ClearIcon","ClearButton","onClear","button","setDashboardsFilter","clearDashboardsFilter","filterText","expanded","onKeypressEnter","onSearchClicked","focusedClassName","setFocusedClassName","inputFocused","setInputFocus","collapsed","searchButton","IconSearch24","searchArea","preventDefault","focused","onBlur","searchIconContainer","IconSearch16","input","onKeyUp","keyCode","focus","clearButtonContainer","getFilteredDashboards","filteredDashboards","arraySort","withRouter","selectedId","history","onChipClicked","onSelectDashboard","_getFilteredDashboard","enterNewMode","controlsSmall","Filter","chipsContainer","controlsLarge","newButton","IconAdd24","DragHandle","onHeightChanged","setDragging","startingY","setStartingY","onDrag","currentY","clientY","requestAnimationFrame","onEndDrag","draghandle","onMouseDown","memo","ChevronDown","ChevronUp","ShowMoreButton","dashboardBarIsExpanded","buttonLabel","onButtonClicked","buttonEl","MouseEvent","bubbles","cancelable","dispatchEvent","onMouseOver","onMouseOut","showMore","DashboardsBar","updateUserRows","onExpandedChanged","dragging","mouseYPos","setMouseYPos","userRowsChanged","rootElement","newRows","getRowsFromHeight","min","setProperty","vh","apiPostControlBarRows","scrollToTop","toggleExpanded","cancelExpanded","Content","spacer","REGISTER_PASSIVE_VIEW","sGetPassiveViewRegistered","passiveViewRegistered","SET_ACTIVE_MODAL_DIMENSION","CLEAR_ACTIVE_MODAL_DIMENSION","DEFAULT_STATE_ACTIVE_MODAL_DIMENSION","sGetActiveModalDimension","activeModalDimension","acSetActiveModalDimension","openFilterModal","removeFilter","badge","badgeSmall","removeButton","FilterBar","bar","FilterBadge","expandedItems","setExpandedItems","setDisplayItems","layoutSm","setLayoutSm","getItemsWithAdjustedHeight","clickedId","isExpanded","newExpandedItems","expandedItem","expandedHeight","sm","ArrowDown","_JSXStyle","ArrowUp","DropdownButton","component","anchorRef","ArrowIconComponent","styles","transparent","Popper","addItemFilter","removeItemFilter","setFilters","onSelectItems","onDeselectItems","itemIdsToRemove","newList","onReorderItems","itemIds","oldList","reorderedList","getExcludedPeriodTypes","DAILY","WEEKLY","WEEKLYWED","WEEKLYTHU","WEEKLYSAT","WEEKLYSUN","BIWEEKLY","MONTHLY","BIMONTHLY","commonProps","onSelect","onDeselect","onReorder","selectedItems","PeriodDimension","selectedPeriods","excludedPeriodTypes","OrgUnitDimension","displayNameProperty","ouItems","DynamicDimension","dimensionTitle","displayNameProp","renderDialogContent","filterItems","clearActiveModalDimension","setActiveModalDimension","_props$allowedFilters","filterDialogIsOpen","setFilterDialogIsOpen","selectDimension","buttonContainer","IconFilter24","Card","DimensionsPanel","onDimensionClick","selectedIds","FilterDialog","StarDashboardButton","StarIcon","IconStar24","tooltipContent","star","filtersLength","setDashboardStarred","isStarred","removeAllFilters","updateShowDescription","moreOptionsSmallIsOpen","setMoreOptionsSmallIsOpen","moreOptionsIsOpen","setMoreOptionsIsOpen","sharingDialogIsOpen","setSharingDialogIsOpen","warningAlert","onToggleSharingDialog","toggleMoreOptions","onToggleShowDescription","apiPostShowDescription","onToggleStarredDashboard","getStarDashboardMutation","getUnstarDashboardMutation","apiStarDashboard","userAccess","getMoreButton","useSmall","strip","editButton","manage","shareButton","FilterSelector","moreButton","moreButtonSmall","SharingDialog","Description","desc","noDesc","titleBar","dashboardLoaded","clearEditDashboard","registerPassiveView","fetchDashboard","username","localStorage","setItem","storePreferredDashboardId","some","controlbarExpanded","setControlbarExpanded","loadingMessage","setLoadingMessage","alertTimeout","ComponentCover","cover","AlertStack","AlertBar","onHidden","permanent","_dashboardToSelect","sGetDashboardsSortedByStarred","routeId","dashboardToSelect","lastStoredDashboardId","getItem","dash","dashboardsIsEmpty","dashboardsLoaded","ViewDashboard","setControlBarRows","controlBarRows","apiGetControlBarRows","setShowDescription","apiGetShowDescription","headerbarHeight","CssVariables","Router","Switch","Route","exact","NewDashboard","EditDashboard","PrintDashboard","PrintLayoutDashboard","newState","objectClean","conversations","$merge","$splice","$set","$unshift","idToRemove","stateItems","layoutHasChanged","newStateItems","stateItem","si","configureStore","middleware","thunk","withExtraArgument","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","createStore","reducer","applyMiddleware","namespace","addResources","arTranslations","ar_IQTranslations","ckbTranslations","csTranslations","daTranslations","enTranslations","esTranslations","frTranslations","idTranslations","kmTranslations","loTranslations","myTranslations","nbTranslations","prsTranslations","psTranslations","ptTranslations","pt_BRTranslations","ruTranslations","svTranslations","tetTranslations","tgTranslations","ukTranslations","urTranslations","uzTranslations","uz_CyrlTranslations","uz_LatnTranslations","viTranslations","zhTranslations","zh_CNTranslations","d2Config","schemas","authorization","REACT_APP_DHIS2_AUTHORIZATION","headers","AppWrapper","ReduxProvider","store","D2Shim","i18nRoot","App","DOMAIN_TYPE_AGGREGATE","DOMAIN_TYPE_TRACKER","domainType","defaultItemCount","dataStatisticsName","getTime","IconTable24","IconFileDocument24","IconVisualizationColumn24","IconWorld24","IconApps24","IconLink24","IconUser24","IconTextBox24","IconMail24","IconEmptyFrame24","itemTypeToGlobalVariable","itemTypeToScriptPath","hasIntegratedPlugin","pluginName","loadPlugin","config","globalName","scripts","scriptsPromise","all","fetchPlugin","loadingIndicator"],"mappings":"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","file":"static/js/app.ebdd774e.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"DashboardContainer_container__2PwUK\",\"covered\":\"DashboardContainer_covered__10XqJ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"NoContentMessage_container__2Aub9\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"PrintActionsBar_container__2EBX_\",\"actions\":\"PrintActionsBar_actions__2_vXA\",\"link\":\"PrintActionsBar_link__2fCaa\",\"buttonSmall\":\"PrintActionsBar_buttonSmall__1wcN_\",\"buttonLarge\":\"PrintActionsBar_buttonLarge__3kwwv\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"PrintInfo_container__1jB2t\",\"title\":\"PrintInfo_title__2MfuJ\",\"printSuggestions\":\"PrintInfo_printSuggestions__38G1G\",\"divider\":\"PrintInfo_divider__3ko2I\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"warning\":\"PrintItemInfo_warning__123PK\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"Item_list__1_nkQ\",\"item\":\"Item_item__3-6QE\",\"itemicon\":\"Item_itemicon__QlouX\",\"link\":\"Item_link___3c_q\",\"deleteicon\":\"Item_deleteicon__3usrl\",\"deletebutton\":\"Item_deletebutton__1DpBW\"};","export const getFormattedDate = (value, uiLocale) => {\n  if (typeof global.Intl !== 'undefined' && Intl.DateTimeFormat) {\n    const locale = uiLocale || 'en';\n    return new Intl.DateTimeFormat(locale, {\n      year: 'numeric',\n      month: 'short',\n      day: 'numeric'\n    }).format(new Date(value));\n  }\n\n  return value.substr(0, 19).replace('T', ' ');\n};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"Item_list__14BHv\",\"seeAll\":\"Item_seeAll__2mEvq\",\"sender\":\"Item_sender__3ojzC\",\"snippet\":\"Item_snippet__2Off5\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"titlePage\":\"Item_titlePage__18CNQ\",\"name\":\"Item_name__3nuTV\",\"description\":\"Item_description__1gFQd\",\"filterTitle\":\"Item_filterTitle__2p7TQ\",\"filterList\":\"Item_filterList__qc_G3\",\"filterListItem\":\"Item_filterListItem__sPbBY\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"FatalErrorBoundary_container__3SViR\",\"icon\":\"FatalErrorBoundary_icon__2UbeP\",\"message\":\"FatalErrorBoundary_message__3FzrY\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"line\":\"ItemFooter_line__3Ko0R\",\"scrollContainer\":\"ItemFooter_scrollContainer__tuq4P\"};","const isRelative = path => path.startsWith('./');\n\nconst normalizeRelativePath = path => [process.env.PUBLIC_URL, path.replace(/^\\.\\//, '')].join('/');\n\nconst isScriptLoaded = src => document.querySelector('script[src=\"' + src + '\"]') ? true : false;\n\nexport const loadExternalScript = src => {\n  if (isRelative(src)) {\n    src = normalizeRelativePath(src);\n  }\n\n  return new Promise((resolve, reject) => {\n    if (isScriptLoaded(src)) {\n      return resolve();\n    }\n\n    const element = document.createElement('script');\n    element.src = src;\n    element.type = 'text/javascript';\n    element.async = false;\n\n    const cleanup = () => {\n      console.log(`Dynamic Script Removed: ${src}`);\n      document.head.removeChild(element);\n    };\n\n    element.onload = () => {\n      console.log(`Dynamic Script Loaded: ${src}`);\n\n      try {\n        resolve();\n      } catch (e) {\n        cleanup();\n        reject();\n      }\n    };\n\n    element.onerror = () => {\n      console.error(`Dynamic Script Error: ${src}`);\n      cleanup();\n      reject();\n    };\n\n    document.head.appendChild(element);\n  });\n};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"center\":\"LoadingMask_center__KHIYy\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"DataVisualizerPlugin_wrapper__3_M-Z\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"center\":\"VisualizationErrorMessage_center__2qYSm\",\"errorMessage\":\"VisualizationErrorMessage_errorMessage__3nCRf\",\"appLink\":\"VisualizationErrorMessage_appLink__bguER\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"message\":\"NoVisualizationMessage_message__22IPi\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"PrintLayoutDashboard_container__3SXqv\",\"wrapper\":\"PrintLayoutDashboard_wrapper__2hsUa\",\"editView\":\"PrintLayoutDashboard_editView__11x2D\",\"pageOuter\":\"PrintLayoutDashboard_pageOuter__CkoEZ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"content\":\"ConfirmActionDialog_content__1x4nB\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"descContainer\":\"FilterSettingsDialog_descContainer__2wKaB\",\"radioButton\":\"FilterSettingsDialog_radioButton__38B7A\",\"transferHeader\":\"FilterSettingsDialog_transferHeader__105SW\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"editBar\":\"ActionsBar_editBar__P9kaO\",\"controls\":\"ActionsBar_controls__3Y3i1\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"grid\":\"ItemGrid_grid__1pIMt\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"noticeContainer\":\"NotSupportedNotice_noticeContainer__3Y9Te\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"EditDashboard_container__2H9lQ\",\"notice\":\"EditDashboard_notice__Ho_Ks\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"menuItem\":\"ContentMenuItem_menuItem__3OEIQ\",\"launchLink\":\"ContentMenuItem_launchLink__13wRn\",\"label\":\"ContentMenuItem_label__1kS6o\",\"buttonInsert\":\"ContentMenuItem_buttonInsert__3rvGo\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"HeaderMenuItem_item__3xBhl\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"showMoreButton\":\"CategorizedMenuGroup_showMoreButton__36Y5A\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"menu\":\"ItemSelector_menu__1jnIl\",\"popover\":\"ItemSelector_popover__1JI8S\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"section\":\"TitleBar_section__DLQVx\",\"titleDescription\":\"TitleBar_titleDescription__2PsNX\",\"title\":\"TitleBar_title__1hU_N\",\"description\":\"TitleBar_description__ydc7m\",\"itemSelector\":\"TitleBar_itemSelector__29cYF\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"NewDashboard_container__3vGiA\",\"notice\":\"NewDashboard_notice__2rtDL\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"PrintDashboard_container__1eUFy\",\"wrapper\":\"PrintDashboard_wrapper__3vfN1\",\"pageOuter\":\"PrintDashboard_pageOuter__G7Kho\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"link\":\"Chip_link__2j6Lw\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"ClearButton_button__3VpUG\",\"icon\":\"ClearButton_icon__3aaNL\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Filter_container__4nI53\",\"searchArea\":\"Filter_searchArea__NEQQ-\",\"input\":\"Filter_input__shCTR\",\"focused\":\"Filter_focused__3jQgr\",\"searchButton\":\"Filter_searchButton__bmV7v\",\"searchIconContainer\":\"Filter_searchIconContainer__1S51H\",\"clearButtonContainer\":\"Filter_clearButtonContainer__qb3j6\",\"collapsed\":\"Filter_collapsed__2fp07\",\"expanded\":\"Filter_expanded__38GiU\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Content_container__2aUo2\",\"newButton\":\"Content_newButton__3HWVd\",\"controlsSmall\":\"Content_controlsSmall__xUmRw\",\"controlsLarge\":\"Content_controlsLarge__2s0Pa\",\"newLink\":\"Content_newLink__YgAbP\",\"collapsed\":\"Content_collapsed__3GRXj\",\"expanded\":\"Content_expanded__k2nqc\",\"chipsContainer\":\"Content_chipsContainer__2sJmw\",\"controls\":\"Content_controls__3jHuc\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"draghandle\":\"DragHandle_draghandle__sERVr\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"ShowMoreButton_container__3fEwL\",\"showMore\":\"ShowMoreButton_showMore__1FPeJ\",\"disabled\":\"ShowMoreButton_disabled__2wwxj\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"DashboardsBar_container__z0Cs4\",\"content\":\"DashboardsBar_content__6Oh0n\",\"expanded\":\"DashboardsBar_expanded__10cS8\",\"spacer\":\"DashboardsBar_spacer__1y2rQ\",\"collapsed\":\"DashboardsBar_collapsed__3MY1p\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"FilterBadge_container__3tGhK\",\"badge\":\"FilterBadge_badge__1_Inq\",\"badgeSmall\":\"FilterBadge_badgeSmall__eEMLp\",\"removeButton\":\"FilterBadge_removeButton__3i9CK\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"bar\":\"FilterBar_bar__1XjvP\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"grid\":\"ItemGrid_grid__3RId_\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"ViewDashboard_container__2Sa9Z\",\"cover\":\"ViewDashboard_cover__3E6k_\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"arrow\":\"DropdownButton_arrow__3SBa4\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"buttonContainer\":\"FilterSelector_buttonContainer__3yctX\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"star\":\"StarDashboardButton_star__3lBqk\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"actions\":\"ActionsBar_actions__2S7Bp\",\"strip\":\"ActionsBar_strip__1BGo5\",\"moreButtonSmall\":\"ActionsBar_moreButtonSmall__j9bcw\",\"editButton\":\"ActionsBar_editButton__1vO5Q\",\"shareButton\":\"ActionsBar_shareButton__2oyZG\",\"moreButton\":\"ActionsBar_moreButton__24qQ-\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"desc\":\"Description_desc__mrRlu\",\"noDesc\":\"Description_noDesc__2FBxT\",\"descContainer\":\"Description_descContainer__3T4PO\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"TitleBar_container__DnAGn\",\"titleBar\":\"TitleBar_titleBar__3Lh6b\",\"title\":\"TitleBar_title__s0IFk\"};","import isObject from 'lodash/isObject';\nexport function orArray(param) {\n  return Array.isArray(param) ? param : [];\n}\nexport function orObject(param) {\n  return isObject(param) ? param : {};\n} // object\n\nexport function arrayToIdMap(array) {\n  return array.reduce((obj, item) => {\n    obj[item.id] = item;\n    return obj;\n  }, {});\n} // reducer validator\n\nexport const validateReducer = (value, defaultValue) => value === undefined || value === null ? defaultValue : value;","/** @module reducers/controlBar */\nimport { combineReducers } from 'redux';\nimport { validateReducer } from '../modules/util';\nexport const SET_CONTROLBAR_USER_ROWS = 'SET_CONTROLBAR_USER_ROWS';\nexport const DEFAULT_STATE_CONTROLBAR_ROWS = 1;\n\nconst userRows = (state = DEFAULT_STATE_CONTROLBAR_ROWS, action) => {\n  switch (action.type) {\n    case SET_CONTROLBAR_USER_ROWS:\n      return validateReducer(action.value, DEFAULT_STATE_CONTROLBAR_ROWS);\n\n    default:\n      return state;\n  }\n};\n\nexport default combineReducers({\n  userRows\n});\n/**\n * Selectors that point to specific props in the state object\n * @function\n * @param {Object} state\n * @returns {Object}\n */\n\nconst sGetControlBarRoot = state => state.controlBar; // Selector dependency level 2\n\n\nexport const sGetControlBarUserRows = state => sGetControlBarRoot(state).userRows;","import { getInstance } from 'd2';\nexport const NAMESPACE = 'dashboard';\nexport const hasDashboardNamespace = async d2 => await d2.currentUser.dataStore.has(NAMESPACE);\nexport const getNamespace = async d2 => {\n  const hasNamespace = await hasDashboardNamespace(d2);\n  return hasNamespace ? await d2.currentUser.dataStore.get(NAMESPACE) : await d2.currentUser.dataStore.create(NAMESPACE);\n};\nexport const apiPostUserDataStoreValue = async (key, value) => {\n  const d2 = await getInstance();\n  const ns = await getNamespace(d2);\n  return ns.set(key, value);\n};\nexport const apiGetUserDataStoreValue = async (key, defaultValue) => {\n  var _ns$keys;\n\n  const d2 = await getInstance();\n  const ns = await getNamespace(d2);\n  const hasKey = ns === null || ns === void 0 ? void 0 : (_ns$keys = ns.keys) === null || _ns$keys === void 0 ? void 0 : _ns$keys.find(k => k === key);\n\n  if (hasKey) {\n    return await ns.get(key);\n  } else {\n    await apiPostUserDataStoreValue(key, defaultValue, ns);\n    console.log('(These errors to /userDataStore can be ignored)');\n    return defaultValue;\n  }\n};","import { DEFAULT_STATE_CONTROLBAR_ROWS } from '../reducers/controlBar';\nimport { apiGetUserDataStoreValue, apiPostUserDataStoreValue } from './userDataStore';\nconst KEY_CONTROLBAR_ROWS = 'controlBarRows';\nexport const apiGetControlBarRows = async () => await apiGetUserDataStoreValue(KEY_CONTROLBAR_ROWS, DEFAULT_STATE_CONTROLBAR_ROWS);\nexport const apiPostControlBarRows = async value => await apiPostUserDataStoreValue(KEY_CONTROLBAR_ROWS, value);","import { apiGetControlBarRows } from '../api/controlBar';\nimport { SET_CONTROLBAR_USER_ROWS } from '../reducers/controlBar'; // actions\n\nexport const acSetControlBarUserRows = rows => ({\n  type: SET_CONTROLBAR_USER_ROWS,\n  value: rows\n}); // thunks\n\nexport const tSetControlBarRows = () => async dispatch => {\n  const onSuccess = rows => {\n    dispatch(acSetControlBarUserRows(rows));\n  };\n\n  const onError = error => {\n    console.log('Error (apiGetControlBarRows): ', error);\n    return error;\n  };\n\n  try {\n    const controlBarRows = await apiGetControlBarRows();\n    return onSuccess(controlBarRows);\n  } catch (err) {\n    return onError(err);\n  }\n};","export const dashboardsQuery = {\n  resource: 'dashboards',\n  params: {\n    fields: ['id', 'displayName', 'favorite~rename(starred)'],\n    paging: false\n  }\n};\nexport const apiFetchDashboards = async dataEngine => {\n  try {\n    const dashboardsData = await dataEngine.query({\n      dashboards: dashboardsQuery\n    });\n    return dashboardsData.dashboards.dashboards;\n  } catch (error) {\n    console.log('Error: ', error);\n  }\n};","/** @module reducers/dashboards */\nimport arraySort from 'd2-utilizr/lib/arraySort';\nimport { orObject } from '../modules/util';\nexport const SET_DASHBOARDS = 'SET_DASHBOARDS';\nexport const ADD_DASHBOARDS = 'ADD_DASHBOARDS';\nexport const SET_DASHBOARD_STARRED = 'SET_DASHBOARD_STARRED';\nexport const EMPTY_DASHBOARDS = {};\nexport const DEFAULT_STATE_DASHBOARDS = null;\n/**\n * Reducer that computes and returns the new state based on the given action\n * @function\n * @param {Object} state The current state\n * @param {Object} action The action to be evaluated\n * @returns {Object}\n */\n\nexport default ((state = DEFAULT_STATE_DASHBOARDS, action) => {\n  switch (action.type) {\n    case SET_DASHBOARDS:\n      {\n        return action.value;\n      }\n\n    case ADD_DASHBOARDS:\n      {\n        return { ...state,\n          ...action.value\n        };\n      }\n\n    case SET_DASHBOARD_STARRED:\n      {\n        return { ...state,\n          [action.id]: { ...state[action.id],\n            starred: action.value\n          }\n        };\n      }\n\n    default:\n      return state;\n  }\n}); // root selector\n\nexport const sGetDashboardsRoot = state => state.dashboards; // selector level 1\n\n/**\n * Selector which returns a dashboard by id from the state object\n * If no matching dashboard is found it returns undefined\n * If dashboards is null, then the dashboards api request\n * has not yet completed. If dashboards is an empty object\n * then the dashboards api request is complete, but no dashboards\n * were returned\n *\n * @function\n * @param {Object} state The current state\n * @param {Number} id The id of the dashboard\n * @returns {Object | undefined}\n */\n\nexport const sGetDashboardById = (state, id) => (sGetDashboardsRoot(state) || EMPTY_DASHBOARDS)[id];\nexport const sGetDashboardStarred = (state, id) => sGetDashboardById(state, id).starred;\nexport const sDashboardsIsFetching = state => {\n  return sGetDashboardsRoot(state) === null;\n};\n/**\n * Selector which returns all dashboards\n *\n * @function\n * @param {Object} state The current state\n * @returns {Object | undefined}\n */\n\nexport const sGetAllDashboards = state => orObject(sGetDashboardsRoot(state)); // selector level 2\n\nconst sGetStarredDashboards = state => Object.values(sGetAllDashboards(state)).filter(dashboard => dashboard.starred === true);\n\nconst sGetUnstarredDashboards = state => Object.values(sGetAllDashboards(state)).filter(dashboard => dashboard.starred === false); // selector level 3\n\n\nexport const sGetDashboardsSortedByStarred = state => [...arraySort(sGetStarredDashboards(state), 'ASC', 'displayName'), ...arraySort(sGetUnstarredDashboards(state), 'ASC', 'displayName')];","import { apiFetchDashboards } from '../api/fetchAllDashboards';\nimport { arrayToIdMap } from '../modules/util';\nimport { SET_DASHBOARDS, ADD_DASHBOARDS, SET_DASHBOARD_STARRED } from '../reducers/dashboards'; // actions\n\nexport const acSetDashboards = dashboards => ({\n  type: SET_DASHBOARDS,\n  value: arrayToIdMap(dashboards)\n});\nexport const acAppendDashboards = dashboards => ({\n  type: ADD_DASHBOARDS,\n  value: arrayToIdMap(dashboards)\n});\nexport const acSetDashboardStarred = (id, isStarred) => ({\n  type: SET_DASHBOARD_STARRED,\n  id,\n  value: isStarred\n}); // thunks\n\nexport const tFetchDashboards = () => async (dispatch, getState, dataEngine) => {\n  const dashboards = await apiFetchDashboards(dataEngine);\n  return dispatch(acSetDashboards(dashboards));\n};","export const SET_SHOW_DESCRIPTION = 'SET_SHOW_DESCRIPTION';\nexport const DEFAULT_STATE_SHOW_DESCRIPTION = false;\nexport default ((state = DEFAULT_STATE_SHOW_DESCRIPTION, action) => {\n  switch (action.type) {\n    case SET_SHOW_DESCRIPTION:\n      {\n        return action.value;\n      }\n\n    default:\n      return state;\n  }\n});\nexport const sGetShowDescription = state => state.showDescription;","import { DEFAULT_STATE_SHOW_DESCRIPTION } from '../reducers/showDescription';\nimport { apiGetUserDataStoreValue, apiPostUserDataStoreValue } from './userDataStore';\nconst KEY_SHOW_DESCRIPTION = 'showDescription';\nexport const apiGetShowDescription = async () => await apiGetUserDataStoreValue(KEY_SHOW_DESCRIPTION, DEFAULT_STATE_SHOW_DESCRIPTION);\nexport const apiPostShowDescription = value => apiPostUserDataStoreValue(KEY_SHOW_DESCRIPTION, value);","import { apiGetShowDescription } from '../api/description';\nimport { SET_SHOW_DESCRIPTION } from '../reducers/showDescription';\nexport const acSetShowDescription = value => ({\n  type: SET_SHOW_DESCRIPTION,\n  value\n});\nexport const tSetShowDescription = () => async dispatch => {\n  const onSuccess = value => {\n    dispatch(acSetShowDescription(value));\n  };\n\n  try {\n    const showDescription = await apiGetShowDescription();\n    return onSuccess(showDescription);\n  } catch (err) {\n    console.error('Error (apiGetShowDescription): ', err);\n    return err;\n  }\n};","export const EDIT = 'edit';\nexport const NEW = 'new';\nexport const VIEW = 'view';\nexport const PRINT = 'print';\nexport const PRINT_LAYOUT = 'print-layout';\nexport const isEditMode = mode => [EDIT, NEW].includes(mode);\nexport const isPrintMode = mode => [PRINT, PRINT_LAYOUT].includes(mode);\nexport const isViewMode = mode => mode === VIEW;","import { DASHBOARD_WRAPPER_LR_MARGIN_PX } from './gridUtil';\nconst SMALL_SCREEN_BREAKPOINT = 480;\nexport const isSmallScreen = width => width <= SMALL_SCREEN_BREAKPOINT;\nexport const getBreakpoint = () => SMALL_SCREEN_BREAKPOINT - DASHBOARD_WRAPPER_LR_MARGIN_PX;","// Dimensions for the react-grid-layout\nimport sortBy from 'lodash/sortBy';\nimport { isVisualizationType } from './itemTypes';\nimport { isSmallScreen } from './smallScreen';\nexport const GRID_COMPACT_TYPE = 'vertical'; // vertical | horizonal | null\n\nexport const GRID_ROW_HEIGHT_PX = 10;\nexport const MARGIN_PX = [10, 10];\nconst SM_SCREEN_MIN_ITEM_GRID_HEIGHT = 13; // minimum of ~320px\n\nexport const SM_SCREEN_GRID_COLUMNS = 1;\nexport const MARGIN_SM_PX = [0, 16];\nexport const GRID_PADDING_PX = [0, 0]; // sum of left+right padding of dashboard-wrapper (App.css)\n\nexport const DASHBOARD_WRAPPER_LR_MARGIN_PX = 32; // make an assumption about the original item w/h ratio\n// assumes grid width of ~1200px at time dashboard was created\n\nconst GRID_COL_WIDTH_PX = 10;\nexport const GRID_COLUMNS = 60; // Dimensions for getShape\n\nexport const NEW_ITEM_SHAPE = {\n  x: 0,\n  y: 0,\n  w: 20,\n  h: 29\n};\nconst NUMBER_OF_ITEM_COLS = 2;\nconst MAX_ITEM_GRID_WIDTH = GRID_COLUMNS - 1;\nexport const MAX_ITEM_GRID_HEIGHT = 34;\nexport const MAX_ITEM_GRID_HEIGHT_OIPP = 35;\nexport const MAX_ITEM_GRID_WIDTH_OIPP = 56;\nconst MIN_ITEM_GRID_HEIGHT = 4; // isNonNegativeInteger\n\nconst isNonNegativeInteger = x => Number.isInteger(x) && x >= 0; // Does the item have all the shape properties?\n\n\nexport const hasShape = item => isNonNegativeInteger(item.x) && isNonNegativeInteger(item.y) && isNonNegativeInteger(item.w) && isNonNegativeInteger(item.h); // returns a rectangular grid block dimensioned with x, y, w, h in grid units.\n// based on a grid with 3 items across\n\nconst getShape = i => {\n  const col = i % NUMBER_OF_ITEM_COLS;\n  const row = Math.floor(i / NUMBER_OF_ITEM_COLS);\n  const itemWidth = Math.floor(MAX_ITEM_GRID_WIDTH / NUMBER_OF_ITEM_COLS);\n  const itemHeight = GRID_ROW_HEIGHT_PX * 2;\n  return {\n    x: col * itemWidth,\n    y: row * itemHeight,\n    w: itemWidth,\n    h: itemHeight\n  };\n};\n/**\n * Returns an array of items containing the x, y, w, h dimensions\n * and the item's originalheight in pixels\n * and dimensions to create the small layout (x, y, w, h)\n * @function\n * @param {Array} items\n * @returns {Array}\n */\n\n\nexport const withShape = (items = []) => {\n  const itemsWithShape = items.map((item, i) => hasShape(item) ? item : Object.assign({}, item, getShape(i)));\n  return itemsWithShape.map(item => Object.assign({}, item, {\n    originalH: item.h\n  }));\n};\nexport const getGridWidth = windowWidthPx => windowWidthPx - DASHBOARD_WRAPPER_LR_MARGIN_PX;\n\nconst getGridUnitsForSmFromPx = hPx => {\n  const gridUnitHeightPx = GRID_ROW_HEIGHT_PX + MARGIN_SM_PX[1];\n  return Math.round((hPx + MARGIN_SM_PX[1]) / gridUnitHeightPx);\n};\n\nexport const getProportionalHeight = (item, windowWidthPx) => {\n  // get w/h ratio of the original item\n  const wPx = getItemWHPx(item.w, GRID_COL_WIDTH_PX, MARGIN_PX[0]);\n  const hPx = getItemWHPx(item.h, GRID_ROW_HEIGHT_PX, MARGIN_PX[1]);\n  const ratioWH = wPx / hPx;\n\n  if (!isVisualizationType(item)) {\n    return getGridUnitsForSmFromPx(hPx);\n  }\n\n  const gridWidthPx = getGridWidth(windowWidthPx); // get new height in px based on the ratio\n\n  const newColWidthPx = (gridWidthPx - MARGIN_SM_PX[0] * (SM_SCREEN_GRID_COLUMNS - 1) - GRID_PADDING_PX[0] * 2) / SM_SCREEN_GRID_COLUMNS;\n  const newWPx = newColWidthPx * SM_SCREEN_GRID_COLUMNS;\n  const newHPx = Math.round(newWPx / ratioWH); //convert height in px back to grid units\n\n  const h = getGridUnitsForSmFromPx(newHPx); // item must be at least the set minimum\n\n  return h < SM_SCREEN_MIN_ITEM_GRID_HEIGHT ? SM_SCREEN_MIN_ITEM_GRID_HEIGHT : h;\n};\nexport const getSmallLayout = (items, windowWidthPx) => sortBy(items, ['y', 'x']).map((item, i) => Object.assign({}, item, {\n  x: 0,\n  y: i,\n  w: SM_SCREEN_GRID_COLUMNS,\n  h: getProportionalHeight(item, windowWidthPx)\n}));\nexport const getGridItemProperties = itemId => {\n  return {\n    i: itemId,\n    minH: MIN_ITEM_GRID_HEIGHT\n  };\n};\nexport const getPageBreakItemShape = (yPos, isStatic = true) => {\n  return {\n    x: 0,\n    y: yPos,\n    w: MAX_ITEM_GRID_WIDTH,\n    h: 5,\n    static: !!isStatic,\n    minH: 1\n  };\n};\nexport const getPrintTitlePageItemShape = isOneItemPerPage => {\n  return {\n    x: 0,\n    y: 0,\n    w: isOneItemPerPage ? MAX_ITEM_GRID_WIDTH_OIPP : MAX_ITEM_GRID_WIDTH,\n    h: MAX_ITEM_GRID_HEIGHT,\n    static: true,\n    minH: 1\n  };\n};\n/**\n * Calculates the grid item's height in pixels based\n * on the height in grid units. This calculation\n * is copied directly from react-grid-layout\n * calculateUtils.js (calcGridItemWHPx)\n *\n * Each row's px height is the sum of the GRID_ROW_HEIGHT_PX + MARGIN-Y\n * So the calculation is:\n * GRID_ROW_HEIGHT_PX * Number of rows\n * +\n * yMargin * Number of rows-1\n *\n * @param {Object} item item containing shape (x, y, w, h)\n */\n\nexport const getItemHeightPx = (item, windowWidthPx) => {\n  if (isSmallScreen(windowWidthPx)) {\n    const h = item.smallOriginalH ? item.smallOriginalH : getProportionalHeight(item, windowWidthPx);\n    return getItemWHPx(h, GRID_ROW_HEIGHT_PX, MARGIN_SM_PX[1]);\n  }\n\n  return getItemWHPx(item.originalH, GRID_ROW_HEIGHT_PX, MARGIN_PX[1]);\n};\n\nconst getItemWHPx = (gridUnits, colOrRowSize, marginPx) => Math.round(colOrRowSize * gridUnits + Math.max(0, gridUnits - 1) * marginPx);","import { getGridItemProperties } from './gridUtil';\nimport { TEXT, SPACER } from './itemTypes';\nexport const spacerContent = 'SPACER_ITEM_FOR_DASHBOARD_LAYOUT_CONVENIENCE';\nexport const emptyTextItemContent = 'TEXT_ITEM_WITH_NO_CONTENT';\n\nconst isBackendSpacerType = item => item.type === TEXT && item.text === spacerContent;\n\nconst isUiSpacerType = item => item.type === SPACER;\n\nconst isTextType = item => item.type === TEXT && item.text !== spacerContent;\n\nexport const convertUiItemsToBackend = items => items.map(item => {\n  let text = null;\n\n  if (isUiSpacerType(item)) {\n    text = spacerContent;\n  } else if (isTextType(item)) {\n    text = item.text || emptyTextItemContent;\n  }\n\n  return { ...item,\n    ...(text ? {\n      text\n    } : {})\n  };\n});\nexport const convertBackendItemsToUi = items => items.map(item => {\n  const type = isBackendSpacerType(item) ? SPACER : item.type;\n  const gridProperties = getGridItemProperties(item.id);\n  const text = isTextType(item) ? item.text === emptyTextItemContent ? '' : item.text : null;\n  return { ...item,\n    ...(text !== null ? {\n      text\n    } : {}),\n    type,\n    ...gridProperties\n  };\n});","import arrayClean from 'd2-utilizr/lib/arrayClean'; // Id, name\n\nexport const getIdNameFields = ({\n  rename\n} = {}) => ['id', `${rename ? 'displayName~rename(name)' : 'name,displayName'}`]; // Item\n\nexport const getItemFields = () => ['dimensionItem~rename(id)', 'displayName~rename(name)', 'dimensionItemType']; // Dimension\n\nexport const getDimensionFields = ({\n  withItems\n}) => arrayClean(['dimension', 'legendSet[id]', 'filter', 'programStage', withItems ? `items[${getItemFields().join(',')}]` : ``]); // Axis\n\nexport const getAxesFields = ({\n  withItems\n}) => [`columns[${getDimensionFields({\n  withItems\n}).join(',')}]`, `rows[${getDimensionFields({\n  withItems\n}).join(',')}]`, `filters[${getDimensionFields({\n  withItems\n}).join(',')}]`]; // Favorite\n\nexport const getFavoriteFields = ({\n  withDimensions,\n  withOptions\n}) => {\n  return arrayClean([`${getIdNameFields({\n    rename: true\n  }).join(',')}`, 'displayDescription~rename(description)', withDimensions ? `${getAxesFields({\n    withItems: true\n  }).join(',')}` : ``, withOptions ? ['*', '!attributeDimensions', '!attributeValues', '!category', '!categoryDimensions', '!categoryOptionGroupSetDimensions', '!columnDimensions', '!dataDimensionItems', '!dataElementDimensions', '!dataElementGroupSetDimensions', '!filterDimensions', '!itemOrganisationUnitGroups', '!lastUpdatedBy', '!organisationUnitGroupSetDimensions', '!organisationUnitLevels', '!organisationUnits', '!programIndicatorDimensions', '!relativePeriods', '!reportParams', '!rowDimensions', '!translations', '!userOrganisationUnit', '!userOrganisationUnitChildren', '!userOrganisationUnitGrandChildren'].join(',') : '']);\n};\nexport const getFavoritesFields = () => [`reportTable[${getFavoriteFields({\n  withDimensions: false\n}).join(',')}]`, `chart[${['type', ...getFavoriteFields({\n  withDimensions: false\n})].join(',')}]`, `map[${getFavoriteFields({\n  withDimensions: false\n}).join(',')}]`, `eventReport[${getFavoriteFields({\n  withDimensions: false\n}).join(',')}]`, `eventChart[${getFavoriteFields({\n  withDimensions: false\n}).join(',')}]`]; // List item\n\nexport const getListItemFields = () => [`reports[${['type', ...getIdNameFields({\n  rename: true\n})].join(',')}]`, `resources[${getIdNameFields({\n  rename: true\n}).join(',')}]`, `users[${getIdNameFields({\n  rename: true\n}).join(',')}]`]; // Map\n\nexport const getMapFields = () => [`${getIdNameFields({\n  rename: true\n}).join(',')}`, 'user,longitude,latitude,zoom,basemap', `mapViews[${getFavoriteFields({\n  withDimensions: true,\n  withOptions: true\n})}]`];","import arrayClean from 'd2-utilizr/lib/arrayClean';\nimport { isViewMode } from '../modules/dashboardModes';\nimport { getCustomDashboards } from '../modules/getCustomDashboards';\nimport { withShape } from '../modules/gridUtil';\nimport { getIdNameFields, getListItemFields, getFavoritesFields } from './metadata';\n\nconst getDashboardItemsFields = () => arrayClean(['id', 'type', 'shape', 'x', 'y', 'width~rename(w)', 'height~rename(h)', 'messages', 'text', 'appKey', `${getListItemFields().join(',')}`, `${getFavoritesFields().join(',')}`]);\n\nconst baseDashboardFields = arrayClean(['id', 'displayName', 'displayDescription', 'favorite~rename(starred)', 'access', 'restrictFilters', 'allowedFilters', `dashboardItems[${getDashboardItemsFields().join(',')}]`]);\nexport const viewDashboardQuery = {\n  resource: 'dashboards',\n  id: ({\n    id\n  }) => id,\n  params: {\n    fields: baseDashboardFields\n  }\n};\nexport const editDashboardQuery = {\n  resource: 'dashboards',\n  id: ({\n    id\n  }) => id,\n  params: {\n    fields: arrayClean([...baseDashboardFields, `user[${getIdNameFields({\n      rename: true\n    }).join(',')}]`, 'name', 'description', 'created', 'favorite', 'favorites', 'lastUpdated', 'href' // needed for d2-ui-translations-dialog\n    ])\n  }\n}; // Get more info about selected dashboard\n\nexport const apiFetchDashboard = async (dataEngine, id, {\n  mode = null,\n  forSave = false\n} = {}) => {\n  const query = isViewMode(mode) ? viewDashboardQuery : editDashboardQuery;\n\n  try {\n    const dashboardData = await dataEngine.query({\n      dashboard: query\n    }, {\n      variables: {\n        id\n      }\n    });\n    const dashboard = dashboardData.dashboard;\n\n    if (!forSave) {\n      return getCustomDashboards(Object.assign({}, dashboard, {\n        dashboardItems: withShape(dashboard.dashboardItems)\n      }))[0];\n    }\n\n    return dashboard;\n  } catch (error) {\n    console.log('Error: ', error);\n  }\n};","import arrayFrom from 'd2-utilizr/lib/arrayFrom';\nimport { convertBackendItemsToUi } from './uiBackendItemConverter';\n/**\n * Returns the array of dashboards, customized for ui\n * @function\n * @param {Array} data The original dashboard list\n * @returns {Array}\n */\n\nexport const getCustomDashboards = data => arrayFrom(data).map(d => {\n  var _d$allowedFilters;\n\n  return {\n    id: d.id,\n    name: d.name,\n    displayName: d.displayName,\n    description: d.description,\n    displayDescription: d.displayDescription,\n    starred: d.starred,\n    created: d.created,\n    lastUpdated: d.lastUpdated,\n    access: d.access,\n    dashboardItems: convertBackendItemsToUi(d.dashboardItems),\n    restrictFilters: d.restrictFilters,\n    allowedFilters: (_d$allowedFilters = d.allowedFilters) !== null && _d$allowedFilters !== void 0 ? _d$allowedFilters : [],\n    href: d.href\n  };\n});","import { EDIT } from '../modules/dashboardModes';\nimport { apiFetchDashboard } from './fetchDashboard';\nexport const createDashboardMutation = {\n  resource: 'dashboards',\n  type: 'create',\n  data: ({\n    data\n  }) => data\n};\nexport const updateDashboardMutation = {\n  resource: 'dashboards',\n  type: 'update',\n  id: ({\n    id\n  }) => id,\n  data: ({\n    data\n  }) => data,\n  params: {\n    skipTranslation: true,\n    skipSharing: true\n  }\n};\n\nconst generatePayload = (dashboard = {}, data) => {\n  return { ...dashboard,\n    name: data.name,\n    description: data.description,\n    dashboardItems: data.dashboardItems.map(item => ({ ...item,\n      width: item.w,\n      height: item.h\n    })),\n    allowedFilters: data.allowedFilters,\n    restrictFilters: data.restrictFilters\n  };\n};\n\nexport const updateDashboard = async (dataEngine, data) => {\n  const dashboard = await apiFetchDashboard(dataEngine, data.id, {\n    mode: EDIT,\n    forSave: true\n  });\n  const {\n    response\n  } = await dataEngine.mutate(updateDashboardMutation, {\n    variables: {\n      id: data.id,\n      data: generatePayload(dashboard, data)\n    }\n  });\n  return response.uid;\n};\nexport const postDashboard = async (dataEngine, data) => {\n  const {\n    response\n  } = await dataEngine.mutate(createDashboardMutation, {\n    variables: {\n      data: generatePayload({}, data)\n    }\n  });\n  return response.uid;\n};","/** @module reducers/editDashboard */\nimport update from 'immutability-helper';\nimport isEmpty from 'lodash/isEmpty';\nimport { orArray, orObject } from '../modules/util';\nexport const RECEIVED_EDIT_DASHBOARD = 'RECEIVED_EDIT_DASHBOARD';\nexport const RECEIVED_NOT_EDITING = 'RECEIVED_NOT_EDITING';\nexport const START_NEW_DASHBOARD = 'START_NEW_DASHBOARD';\nexport const RECEIVED_TITLE = 'RECEIVED_TITLE';\nexport const RECEIVED_DESCRIPTION = 'RECEIVED_DESCRIPTION';\nexport const ADD_DASHBOARD_ITEM = 'ADD_DASHBOARD_ITEM';\nexport const REMOVE_DASHBOARD_ITEM = 'REMOVE_DASHBOARD_ITEM';\nexport const UPDATE_DASHBOARD_ITEM = 'UPDATE_DASHBOARD_ITEM';\nexport const RECEIVED_DASHBOARD_LAYOUT = 'RECEIVED_DASHBOARD_LAYOUT';\nexport const SET_PRINT_PREVIEW_VIEW = 'SET_PRINT_PREVIEW_VIEW';\nexport const CLEAR_PRINT_PREVIEW_VIEW = 'CLEAR_PRINT_PREVIEW_VIEW';\nexport const RECEIVED_FILTER_SETTINGS = 'RECEIVED_FILTER_SETTINGS';\nexport const DEFAULT_STATE_EDIT_DASHBOARD = {};\nexport const NEW_DASHBOARD_STATE = {\n  id: '',\n  name: '',\n  access: {\n    update: true,\n    delete: true\n  },\n  allowedFilters: [],\n  description: '',\n  dashboardItems: [],\n  restrictFilters: false,\n  printPreviewView: false,\n  isDirty: false,\n  href: ''\n};\nexport default ((state = DEFAULT_STATE_EDIT_DASHBOARD, action) => {\n  switch (action.type) {\n    case RECEIVED_EDIT_DASHBOARD:\n      {\n        const newState = {};\n        Object.keys(NEW_DASHBOARD_STATE).map(k => newState[k] = action.value[k]);\n        newState.printPreviewView = false;\n        newState.isDirty = false;\n        return newState;\n      }\n\n    case RECEIVED_NOT_EDITING:\n      return DEFAULT_STATE_EDIT_DASHBOARD;\n\n    case SET_PRINT_PREVIEW_VIEW:\n      return Object.assign({}, state, {\n        printPreviewView: true\n      });\n\n    case CLEAR_PRINT_PREVIEW_VIEW:\n      return Object.assign({}, state, {\n        printPreviewView: false\n      });\n\n    case START_NEW_DASHBOARD:\n      return NEW_DASHBOARD_STATE;\n\n    case RECEIVED_TITLE:\n      {\n        return Object.assign({}, state, {\n          name: action.value,\n          isDirty: true\n        });\n      }\n\n    case RECEIVED_DESCRIPTION:\n      {\n        return Object.assign({}, state, {\n          description: action.value,\n          isDirty: true\n        });\n      }\n\n    case ADD_DASHBOARD_ITEM:\n      if (!action.value.position) {\n        return update(state, {\n          dashboardItems: {\n            $unshift: [action.value]\n          },\n          isDirty: {\n            $set: true\n          }\n        });\n      }\n\n      return update(state, {\n        dashboardItems: {\n          $splice: [[parseInt(action.value.position), 0, action.value]]\n        },\n        isDirty: {\n          $set: true\n        }\n      });\n\n    case REMOVE_DASHBOARD_ITEM:\n      {\n        const idToRemove = action.value;\n        const dashboardItemIndex = state.dashboardItems.findIndex(item => item.id === idToRemove);\n\n        if (dashboardItemIndex > -1) {\n          return update(state, {\n            dashboardItems: {\n              $splice: [[dashboardItemIndex, 1]]\n            },\n            isDirty: {\n              $set: true\n            }\n          });\n        }\n\n        return state;\n      }\n\n    case RECEIVED_DASHBOARD_LAYOUT:\n      {\n        const stateItems = orArray(state.dashboardItems);\n        let layoutHasChanged = false;\n        const newStateItems = action.value.map(({\n          x,\n          y,\n          w,\n          h,\n          i\n        }) => {\n          const stateItem = stateItems.find(si => si.id === i);\n\n          if (!(stateItem.x === x && stateItem.y === y && stateItem.w === w && stateItem.h === h)) {\n            layoutHasChanged = true;\n            return Object.assign({}, stateItem, {\n              w,\n              h,\n              x,\n              y\n            });\n          }\n\n          return stateItem;\n        });\n        return layoutHasChanged ? { ...state,\n          dashboardItems: newStateItems,\n          isDirty: true\n        } : state;\n      }\n\n    case UPDATE_DASHBOARD_ITEM:\n      {\n        const dashboardItem = action.value;\n        const dashboardItemIndex = state.dashboardItems.findIndex(item => item.id === dashboardItem.id);\n\n        if (dashboardItemIndex > -1) {\n          const newState = update(state, {\n            dashboardItems: {\n              $splice: [[dashboardItemIndex, 1, Object.assign({}, dashboardItem)]]\n            },\n            isDirty: {\n              $set: true\n            }\n          });\n          return newState;\n        }\n\n        return state;\n      }\n\n    case RECEIVED_FILTER_SETTINGS:\n      {\n        return Object.assign({}, state, {\n          allowedFilters: action.value.allowedFilters,\n          restrictFilters: action.value.restrictFilters,\n          isDirty: true\n        });\n      }\n\n    default:\n      return state;\n  }\n}); // root selector\n\nexport const sGetEditDashboardRoot = state => state.editDashboard; // selectors\n\nexport const sGetIsEditing = state => !isEmpty(state.editDashboard);\nexport const sGetIsPrintPreviewView = state => sGetEditDashboardRoot(state).printPreviewView;\nexport const sGetEditDashboardName = state => sGetEditDashboardRoot(state).name;\nexport const sGetEditDashboardDescription = state => sGetEditDashboardRoot(state).description;\nexport const sGetEditDashboardItems = state => orObject(sGetEditDashboardRoot(state)).dashboardItems;\nexport const sGetEditIsDirty = state => sGetEditDashboardRoot(state).isDirty;","import i18n from '@dhis2/d2-i18n';\nimport { generateUid } from 'd2/uid';\nimport { updateDashboard, postDashboard } from '../api/editDashboard';\nimport { NEW_ITEM_SHAPE, getGridItemProperties, getPageBreakItemShape, getPrintTitlePageItemShape } from '../modules/gridUtil';\nimport { itemTypeMap, PAGEBREAK, PRINT_TITLE_PAGE } from '../modules/itemTypes';\nimport { convertUiItemsToBackend } from '../modules/uiBackendItemConverter';\nimport { RECEIVED_EDIT_DASHBOARD, START_NEW_DASHBOARD, RECEIVED_NOT_EDITING, RECEIVED_TITLE, RECEIVED_DESCRIPTION, RECEIVED_DASHBOARD_LAYOUT, ADD_DASHBOARD_ITEM, UPDATE_DASHBOARD_ITEM, REMOVE_DASHBOARD_ITEM, SET_PRINT_PREVIEW_VIEW, CLEAR_PRINT_PREVIEW_VIEW, RECEIVED_FILTER_SETTINGS, sGetEditDashboardRoot } from '../reducers/editDashboard';\nimport { tFetchDashboards } from './dashboards'; // actions\n\nexport const acSetEditDashboard = dashboard => ({\n  type: RECEIVED_EDIT_DASHBOARD,\n  value: dashboard\n});\nexport const acSetEditNewDashboard = () => ({\n  type: START_NEW_DASHBOARD\n});\nexport const acClearEditDashboard = () => ({\n  type: RECEIVED_NOT_EDITING\n});\nexport const acSetPrintPreviewView = () => ({\n  type: SET_PRINT_PREVIEW_VIEW\n});\nexport const acClearPrintPreviewView = () => ({\n  type: CLEAR_PRINT_PREVIEW_VIEW\n});\nexport const acSetDashboardTitle = value => ({\n  type: RECEIVED_TITLE,\n  value\n});\nexport const acSetDashboardDescription = value => ({\n  type: RECEIVED_DESCRIPTION,\n  value\n});\nexport const acUpdateDashboardLayout = value => ({\n  type: RECEIVED_DASHBOARD_LAYOUT,\n  value\n});\nexport const acAddDashboardItem = item => {\n  const type = item.type;\n  delete item.type;\n  const itemPropName = itemTypeMap[type].propName;\n  const id = generateUid();\n  const gridItemProperties = getGridItemProperties(id);\n  let shape;\n\n  if (type === PAGEBREAK) {\n    const yPos = item.yPos || 0;\n    shape = getPageBreakItemShape(yPos, item.isStatic);\n  } else if (type === PRINT_TITLE_PAGE) {\n    shape = getPrintTitlePageItemShape();\n  } else {\n    shape = NEW_ITEM_SHAPE;\n  }\n\n  return {\n    type: ADD_DASHBOARD_ITEM,\n    value: {\n      id,\n      type,\n      position: item.position || null,\n      [itemPropName]: item.content,\n      ...NEW_ITEM_SHAPE,\n      ...gridItemProperties,\n      ...shape\n    }\n  };\n};\nexport const acUpdateDashboardItem = item => ({\n  type: UPDATE_DASHBOARD_ITEM,\n  value: item\n});\nexport const acRemoveDashboardItem = value => ({\n  type: REMOVE_DASHBOARD_ITEM,\n  value\n});\nexport const acSetFilterSettings = value => ({\n  type: RECEIVED_FILTER_SETTINGS,\n  value\n}); // thunks\n\nexport const tSaveDashboard = () => async (dispatch, getState, dataEngine) => {\n  const dashboard = sGetEditDashboardRoot(getState());\n  const dashboardToSave = { ...dashboard,\n    dashboardItems: convertUiItemsToBackend(dashboard.dashboardItems),\n    name: dashboard.name || i18n.t('Untitled dashboard')\n  };\n  const dashboardId = dashboardToSave.id ? await updateDashboard(dataEngine, dashboardToSave) : await postDashboard(dataEngine, dashboardToSave); // update the dashboard list\n\n  await dispatch(tFetchDashboards());\n  return Promise.resolve(dashboardId);\n};","import cx from 'classnames';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport classes from './styles/DashboardContainer.module.css';\n\nconst DashboardContainer = ({\n  children,\n  covered\n}) => {\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: cx(classes.container, 'dashboard-scroll-container', covered && classes.covered),\n    \"data-test\": \"inner-scroll-container\"\n  }, children);\n};\n\nDashboardContainer.propTypes = {\n  children: PropTypes.node,\n  covered: PropTypes.bool\n};\nexport default DashboardContainer;","import PropTypes from 'prop-types';\nimport React from 'react';\nimport classes from './styles/NoContentMessage.module.css';\n\nconst NoContentMessage = ({\n  text\n}) => /*#__PURE__*/React.createElement(\"div\", {\n  className: classes.container\n}, text);\n\nNoContentMessage.propTypes = {\n  text: PropTypes.string\n};\nexport default NoContentMessage;","import debounce from 'lodash/debounce';\nimport PropTypes from 'prop-types';\nimport React, { createContext, useContext, useState, useEffect } from 'react';\nexport const WindowDimensionsCtx = /*#__PURE__*/createContext(null);\n\nconst windowDims = () => ({\n  height: window.innerHeight,\n  width: window.innerWidth\n});\n\nconst WindowDimensionsProvider = ({\n  children\n}) => {\n  const [dimensions, setDimensions] = useState(windowDims());\n  useEffect(() => {\n    const handleResize = debounce(() => {\n      setDimensions(windowDims());\n    }, 100);\n    window.addEventListener('resize', handleResize);\n    return () => {\n      window.removeEventListener('resize', handleResize);\n    };\n  }, []);\n  return /*#__PURE__*/React.createElement(WindowDimensionsCtx.Provider, {\n    value: dimensions\n  }, children);\n};\n\nWindowDimensionsProvider.propTypes = {\n  children: PropTypes.node.isRequired\n};\nexport default WindowDimensionsProvider;\nexport const useWindowDimensions = () => {\n  return useContext(WindowDimensionsCtx);\n};","export const setHeaderbarVisible = show => {\n  const header = document.getElementsByTagName('header')[0];\n\n  if (show) {\n    header.classList.remove('hidden');\n  } else {\n    header.classList.add('hidden');\n  }\n};","/** @module reducers/editDashboard */\nimport update from 'immutability-helper';\nimport isEmpty from 'lodash/isEmpty';\nimport { orArray } from '../modules/util';\nexport const SET_PRINT_DASHBOARD = 'SET_PRINT_DASHBOARD';\nexport const CLEAR_PRINT_DASHBOARD = 'CLEAR_PRINT_DASHBOARD';\nexport const ADD_PRINT_DASHBOARD_ITEM = 'ADD_PRINT_DASHBOARD_ITEM';\nexport const SET_PRINT_DASHBOARD_LAYOUT = 'SET_PRINT_DASHBOARD_LAYOUT';\nexport const REMOVE_PRINT_DASHBOARD_ITEM = 'REMOVE_PRINT_DASHBOARD_ITEM';\nexport const UPDATE_PRINT_DASHBOARD_ITEM = 'UPDATE_PRINT_DASHBOARD_ITEM';\nexport const DEFAULT_STATE_PRINT_DASHBOARD = {};\nconst DEFAULT_DASHBOARD_ITEMS = [];\nexport const NEW_PRINT_DASHBOARD_STATE = {\n  id: '',\n  name: '',\n  access: {},\n  description: '',\n  dashboardItems: DEFAULT_DASHBOARD_ITEMS\n};\nexport default ((state = DEFAULT_STATE_PRINT_DASHBOARD, action) => {\n  switch (action.type) {\n    case SET_PRINT_DASHBOARD:\n      {\n        const newState = {};\n        Object.keys(NEW_PRINT_DASHBOARD_STATE).map(k => newState[k] = action.value[k]);\n        return newState;\n      }\n\n    case CLEAR_PRINT_DASHBOARD:\n      return DEFAULT_STATE_PRINT_DASHBOARD;\n\n    case ADD_PRINT_DASHBOARD_ITEM:\n      if (!action.value.position) {\n        return update(state, {\n          dashboardItems: {\n            $unshift: [action.value]\n          }\n        });\n      }\n\n      return update(state, {\n        dashboardItems: {\n          $splice: [[parseInt(action.value.position), 0, action.value]]\n        }\n      });\n\n    case REMOVE_PRINT_DASHBOARD_ITEM:\n      {\n        const idToRemove = action.value;\n        const dashboardItemIndex = state.dashboardItems.findIndex(item => item.id === idToRemove);\n\n        if (dashboardItemIndex > -1) {\n          return update(state, {\n            dashboardItems: {\n              $splice: [[dashboardItemIndex, 1]]\n            }\n          });\n        }\n\n        return state;\n      }\n\n    case UPDATE_PRINT_DASHBOARD_ITEM:\n      {\n        const dashboardItem = action.value;\n        const dashboardItemIndex = state.dashboardItems.findIndex(item => item.id === dashboardItem.id);\n\n        if (dashboardItemIndex > -1) {\n          const newState = update(state, {\n            dashboardItems: {\n              $splice: [[dashboardItemIndex, 1, Object.assign({}, dashboardItem)]]\n            }\n          });\n          return newState;\n        }\n\n        return state;\n      }\n\n    case SET_PRINT_DASHBOARD_LAYOUT:\n      {\n        const stateItems = orArray(state.dashboardItems);\n        let layoutHasChanged = false;\n        const newStateItems = action.value.map(({\n          x,\n          y,\n          w,\n          h,\n          i\n        }) => {\n          const stateItem = stateItems.find(si => si.id === i);\n\n          if (!(stateItem.x === x && stateItem.y === y && stateItem.w === w && stateItem.h === h)) {\n            layoutHasChanged = true;\n            return Object.assign({}, stateItem, {\n              w,\n              h,\n              x,\n              y\n            });\n          }\n\n          return stateItem;\n        });\n        return layoutHasChanged ? { ...state,\n          dashboardItems: newStateItems\n        } : state;\n      }\n\n    default:\n      return state;\n  }\n}); // root selector\n\nexport const sGetPrintDashboardRoot = state => state.printDashboard; // selectors\n\nexport const sGetIsPrinting = state => !isEmpty(state.printDashboard);\nexport const sGetPrintDashboardName = state => sGetPrintDashboardRoot(state).name;\nexport const sGetPrintDashboardDescription = state => sGetPrintDashboardRoot(state).description;\nexport const sGetPrintDashboardItems = state => {\n  var _sGetPrintDashboardRo;\n\n  return ((_sGetPrintDashboardRo = sGetPrintDashboardRoot(state)) === null || _sGetPrintDashboardRo === void 0 ? void 0 : _sGetPrintDashboardRo.dashboardItems) || DEFAULT_DASHBOARD_ITEMS;\n};","import { generateUid } from 'd2/uid';\nimport { NEW_ITEM_SHAPE, getGridItemProperties, getPageBreakItemShape, getPrintTitlePageItemShape } from '../modules/gridUtil';\nimport { itemTypeMap, PAGEBREAK } from '../modules/itemTypes';\nimport { SET_PRINT_DASHBOARD, CLEAR_PRINT_DASHBOARD, SET_PRINT_DASHBOARD_LAYOUT, ADD_PRINT_DASHBOARD_ITEM, REMOVE_PRINT_DASHBOARD_ITEM, UPDATE_PRINT_DASHBOARD_ITEM } from '../reducers/printDashboard'; // actions\n\nexport const acSetPrintDashboard = dashboard => ({\n  type: SET_PRINT_DASHBOARD,\n  value: dashboard\n});\nexport const acClearPrintDashboard = () => ({\n  type: CLEAR_PRINT_DASHBOARD\n});\nexport const acUpdatePrintDashboardLayout = value => ({\n  type: SET_PRINT_DASHBOARD_LAYOUT,\n  value\n});\nexport const acAddPrintDashboardItem = item => {\n  const type = item.type;\n  delete item.type;\n  const itemPropName = itemTypeMap[type].propName;\n  const id = generateUid();\n  const gridItemProperties = getGridItemProperties(id);\n  let shape;\n\n  if (type === PAGEBREAK) {\n    const yPos = item.yPos || 0;\n    shape = getPageBreakItemShape(yPos, item.isStatic);\n  } else {\n    shape = getPrintTitlePageItemShape(item.isOneItemPerPage);\n  }\n\n  return {\n    type: ADD_PRINT_DASHBOARD_ITEM,\n    value: {\n      id,\n      type,\n      position: item.position || null,\n      [itemPropName]: item.content,\n      ...NEW_ITEM_SHAPE,\n      ...gridItemProperties,\n      ...shape\n    }\n  };\n};\nexport const acRemovePrintDashboardItem = value => ({\n  type: REMOVE_PRINT_DASHBOARD_ITEM,\n  value\n});\nexport const acUpdatePrintDashboardItem = item => ({\n  type: UPDATE_PRINT_DASHBOARD_ITEM,\n  value: item\n});","import i18n from '@dhis2/d2-i18n';\nimport { Button, colors, IconChevronLeft24 } from '@dhis2/ui';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport { Link } from 'react-router-dom';\nimport classes from './styles/PrintActionsBar.module.css'; // set in PrintActionsBar.module.css\n\nexport const PRINT_ACTIONS_BAR_HEIGHT = 44;\nexport const PRINT_ACTIONS_BAR_HEIGHT_SM = 36;\n\nconst PrintActionsBar = ({\n  id\n}) => {\n  const getExitPrintButton = isSmall => /*#__PURE__*/React.createElement(Button, {\n    className: isSmall ? classes.buttonSmall : classes.buttonLarge,\n    small: isSmall\n  }, /*#__PURE__*/React.createElement(IconChevronLeft24, {\n    color: colors.grey700\n  }), i18n.t('Exit print preview'));\n\n  const getPrintButton = isSmall => /*#__PURE__*/React.createElement(Button, {\n    className: isSmall ? classes.buttonSmall : classes.buttonLarge,\n    small: isSmall,\n    onClick: window.print\n  }, i18n.t('Print'));\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.container\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.actions\n  }, /*#__PURE__*/React.createElement(Link, {\n    className: classes.link,\n    to: `/${id}`\n  }, getExitPrintButton(true), getExitPrintButton(false)), getPrintButton(true), getPrintButton(false)));\n};\n\nPrintActionsBar.defaultValues = {\n  id: '/'\n};\nPrintActionsBar.propTypes = {\n  id: PropTypes.string\n};\nexport default PrintActionsBar;","import i18n from '@dhis2/d2-i18n';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport classes from './styles/PrintInfo.module.css';\n\nconst PrintInfo = ({\n  isLayout\n}) => {\n  const layoutStyle = isLayout ? i18n.t('dashboard layout') : i18n.t('one item per page');\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.container\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    className: classes.title\n  }, `${i18n.t('Print Preview')}: ${layoutStyle}`), /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.printSuggestions\n  }, /*#__PURE__*/React.createElement(\"p\", null, `${i18n.t('For best print results')}:`), /*#__PURE__*/React.createElement(\"ul\", null, /*#__PURE__*/React.createElement(\"li\", null, i18n.t('Use Chrome or Edge web browser')), /*#__PURE__*/React.createElement(\"li\", null, i18n.t('Wait for all dashboard items to load before printing')), /*#__PURE__*/React.createElement(\"li\", null, i18n.t('Use A4 landscape paper size and default margin settings in the browser print dialog')))), /*#__PURE__*/React.createElement(\"hr\", {\n    className: classes.divider\n  }));\n};\n\nPrintInfo.propTypes = {\n  isLayout: PropTypes.bool\n};\nexport default PrintInfo;","import { getDimensionById, DIMENSION_ID_PERIOD, DIMENSION_ID_ORGUNIT } from '@dhis2/analytics';\nexport const SET_DIMENSIONS = 'SET_DIMENSIONS';\nconst PE_OU_DIMENSIONS = [getDimensionById(DIMENSION_ID_PERIOD), getDimensionById(DIMENSION_ID_ORGUNIT)];\nconst INITIAL_DIMENSIONS = [];\nexport default ((state = INITIAL_DIMENSIONS, action) => {\n  switch (action.type) {\n    case SET_DIMENSIONS:\n      {\n        return [...PE_OU_DIMENSIONS, ...action.value];\n      }\n\n    default:\n      return state;\n  }\n});\nexport const sGetDimensions = state => state.dimensions;","import { createSelector } from 'reselect';\nimport { sGetDimensions } from './dimensions';\nexport const CLEAR_ITEM_FILTERS = 'CLEAR_ITEM_FILTERS';\nexport const ADD_ITEM_FILTER = 'ADD_ITEM_FILTER';\nexport const REMOVE_ITEM_FILTER = 'REMOVE_ITEM_FILTER';\nexport const DEFAULT_STATE_ITEM_FILTERS = {};\nexport default ((state = DEFAULT_STATE_ITEM_FILTERS, action) => {\n  switch (action.type) {\n    case ADD_ITEM_FILTER:\n      {\n        return { ...state,\n          [action.filter.id]: action.filter.value\n        };\n      }\n\n    case REMOVE_ITEM_FILTER:\n      {\n        const newState = { ...state\n        };\n        delete newState[action.id];\n        return newState;\n      }\n\n    case CLEAR_ITEM_FILTERS:\n      {\n        return DEFAULT_STATE_ITEM_FILTERS;\n      }\n\n    default:\n      return state;\n  }\n}); // selectors\n\nexport const sGetItemFiltersRoot = state => state.itemFilters; // simplify the filters structure to:\n// [{ id: 'pe', name: 'Period', values: [{ id: 2019: name: '2019' }, {id: 'LAST_MONTH', name: 'Last month' }]}, ...]\n\nexport const sGetNamedItemFilters = createSelector([sGetItemFiltersRoot, sGetDimensions], (filters, dimensions) => Object.keys(filters).reduce((arr, id) => {\n  arr.push({\n    id: id,\n    name: dimensions.find(dimension => dimension.id === id).name,\n    values: filters[id].map(value => ({\n      id: value.id,\n      name: value.displayName || value.name\n    }))\n  });\n  return arr;\n}, []));","import { ADD_ITEM_FILTER, REMOVE_ITEM_FILTER, CLEAR_ITEM_FILTERS } from '../reducers/itemFilters';\nexport const FILTER_ORG_UNIT = 'ou'; // actions\n\nexport const acAddItemFilter = filter => ({\n  type: ADD_ITEM_FILTER,\n  filter\n});\nexport const acRemoveItemFilter = id => ({\n  type: REMOVE_ITEM_FILTER,\n  id\n});\nexport const acClearItemFilters = () => ({\n  type: CLEAR_ITEM_FILTERS\n});","import i18n from '@dhis2/d2-i18n';\nimport { colors, Button, Tooltip, IconDelete24 } from '@dhis2/ui';\nimport PropTypes from 'prop-types';\nimport React from 'react';\n\nconst DeleteItemButton = ({\n  onClick\n}) => /*#__PURE__*/React.createElement(Tooltip, {\n  content: i18n.t('Remove this item'),\n  placement: \"bottom\"\n}, /*#__PURE__*/React.createElement(Button, {\n  secondary: true,\n  small: true,\n  onClick: onClick,\n  icon: /*#__PURE__*/React.createElement(IconDelete24, {\n    color: colors.red600\n  }),\n  dataTest: \"delete-item-button\"\n}));\n\nDeleteItemButton.propTypes = {\n  onClick: PropTypes.func\n};\nexport default DeleteItemButton;","import PropTypes from 'prop-types';\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport { acRemoveDashboardItem } from '../../../actions/editDashboard';\nimport DeleteItemButton from './DeleteItemButton';\nimport classes from './styles/ItemHeader.module.css';\n\nconst EditItemActions = ({\n  itemId,\n  acRemoveDashboardItem\n}) => {\n  const handleDeleteItem = () => acRemoveDashboardItem(itemId);\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.itemActionsWrap\n  }, /*#__PURE__*/React.createElement(DeleteItemButton, {\n    onClick: handleDeleteItem\n  }));\n};\n\nEditItemActions.propTypes = {\n  acRemoveDashboardItem: PropTypes.func,\n  itemId: PropTypes.string\n};\nconst mapDispatchToProps = {\n  acRemoveDashboardItem\n};\nexport default connect(null, mapDispatchToProps)(EditItemActions);","import i18n from '@dhis2/d2-i18n';\nimport { Tooltip, colors, IconWarning24 } from '@dhis2/ui';\nimport React from 'react';\nimport classes from './styles/PrintItemInfo.module.css';\n\nconst PrintWarning = () => /*#__PURE__*/React.createElement(\"div\", {\n  className: classes.warning\n}, /*#__PURE__*/React.createElement(Tooltip, {\n  content: i18n.t('This item has been shortened to fit on one page'),\n  placement: \"bottom\"\n}, /*#__PURE__*/React.createElement(IconWarning24, {\n  color: colors.grey600\n})));\n\nexport default PrintWarning;","import PropTypes from 'prop-types';\nimport React from 'react';\nimport classes from './styles/ItemHeader.module.css';\n\nconst ViewItemActions = ({\n  actionButtons\n}) => {\n  return actionButtons ? /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.itemActionsWrap\n  }, actionButtons) : null;\n};\n\nViewItemActions.propTypes = {\n  actionButtons: PropTypes.node\n};\nexport default ViewItemActions;","import PropTypes from 'prop-types';\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport { VIEW, EDIT, PRINT_LAYOUT } from '../../../modules/dashboardModes';\nimport EditItemActions from './EditItemActions';\nimport PrintItemInfo from './PrintItemInfo';\nimport classes from './styles/ItemHeader.module.css';\nimport ViewItemActions from './ViewItemActions';\n\nconst getItemActionsMap = isShortened => {\n  return {\n    [VIEW]: ViewItemActions,\n    [EDIT]: EditItemActions,\n    [PRINT_LAYOUT]: isShortened ? PrintItemInfo : null\n  };\n};\n\nconst ItemHeader = /*#__PURE__*/React.forwardRef(({\n  dashboardMode,\n  title,\n  isShortened,\n  ...rest\n}, ref) => {\n  const Actions = getItemActionsMap(isShortened)[dashboardMode];\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.itemHeaderWrap,\n    ref: ref\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    className: classes.itemTitle\n  }, title), Actions ? /*#__PURE__*/React.createElement(Actions, rest) : null);\n});\nItemHeader.displayName = 'ItemHeader';\nItemHeader.propTypes = {\n  dashboardMode: PropTypes.string,\n  isShortened: PropTypes.bool,\n  title: PropTypes.string\n};\nexport default connect(null, null, null, {\n  forwardRef: true\n})(ItemHeader);","import { useD2 } from '@dhis2/app-runtime-adapter-d2';\nimport { Divider, colors, spacers, IconQuestion24 } from '@dhis2/ui';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport { FILTER_ORG_UNIT } from '../../../actions/itemFilters';\nimport { EDIT, isEditMode } from '../../../modules/dashboardModes';\nimport { sGetItemFiltersRoot, DEFAULT_STATE_ITEM_FILTERS } from '../../../reducers/itemFilters';\nimport ItemHeader from '../ItemHeader/ItemHeader';\n\nconst getIframeSrc = (appDetails, item, itemFilters) => {\n  let iframeSrc = `${appDetails.launchUrl}?dashboardItemId=${item.id}`;\n\n  if (itemFilters[FILTER_ORG_UNIT] && itemFilters[FILTER_ORG_UNIT].length) {\n    const ouIds = itemFilters[FILTER_ORG_UNIT].map(ouFilter => ouFilter.path.split('/').slice(-1)[0]);\n    iframeSrc += `&userOrgUnit=${ouIds.join(',')}`;\n  }\n\n  return iframeSrc;\n};\n\nconst AppItem = ({\n  dashboardMode,\n  item,\n  itemFilters\n}) => {\n  var _appDetails, _appDetails$settings, _appDetails$settings$;\n\n  const {\n    d2\n  } = useD2();\n  let appDetails;\n  const appKey = item.appKey;\n\n  if (appKey) {\n    appDetails = d2.system.installedApps.find(app => app.key === appKey);\n  }\n\n  const hideTitle = ((_appDetails = appDetails) === null || _appDetails === void 0 ? void 0 : (_appDetails$settings = _appDetails.settings) === null || _appDetails$settings === void 0 ? void 0 : (_appDetails$settings$ = _appDetails$settings.dashboardWidget) === null || _appDetails$settings$ === void 0 ? void 0 : _appDetails$settings$.hideTitle) && dashboardMode !== EDIT;\n  return appDetails && appDetails.name && appDetails.launchUrl ? /*#__PURE__*/React.createElement(React.Fragment, null, !hideTitle && /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(ItemHeader, {\n    title: appDetails.name,\n    itemId: item.id,\n    dashboardMode: dashboardMode,\n    isShortened: item.shortened\n  }), /*#__PURE__*/React.createElement(Divider, {\n    margin: `0 0 ${spacers.dp4} 0`\n  })), /*#__PURE__*/React.createElement(\"iframe\", {\n    title: appDetails.name,\n    src: getIframeSrc(appDetails, item, itemFilters),\n    className: !hideTitle ? 'dashboard-item-content' : 'dashboard-item-content-hidden-title',\n    style: {\n      border: 'none'\n    }\n  })) : /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(ItemHeader, {\n    title: `${appKey} app not found`\n  }), /*#__PURE__*/React.createElement(Divider, {\n    margin: `0 0 ${spacers.dp4} 0`\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"dashboard-item-content\",\n    style: {\n      display: 'flex',\n      justifyContent: 'center',\n      alignItems: 'center',\n      height: '90%'\n    }\n  }, /*#__PURE__*/React.createElement(IconQuestion24, {\n    color: colors.grey500\n  })));\n};\n\nAppItem.propTypes = {\n  dashboardMode: PropTypes.string,\n  item: PropTypes.object,\n  itemFilters: PropTypes.object\n};\n\nconst mapStateToProps = (state, ownProps) => {\n  const itemFilters = !isEditMode(ownProps.dashboardMode) ? sGetItemFiltersRoot(state) : DEFAULT_STATE_ITEM_FILTERS;\n  return {\n    itemFilters\n  };\n};\n\nexport default connect(mapStateToProps)(AppItem);","import { colors } from '@dhis2/ui';\nimport PropTypes from 'prop-types';\nimport React from 'react';\n\nconst DeleteIcon = ({\n  className\n}) => /*#__PURE__*/React.createElement(\"svg\", {\n  className: className,\n  xmlns: \"http://www.w3.org/2000/svg\",\n  width: \"18\",\n  height: \"18\",\n  viewBox: \"0 0 24 24\",\n  fill: colors.red500\n}, /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M6 19c0 1.1.9 2 2 2h8c1.1 0 2-.9 2-2V7H6v12zM19 4h-3.5l-1-1h-5l-1 1H5v2h14V4z\"\n}), /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M0 0h24v24H0z\",\n  fill: \"none\"\n}));\n\nDeleteIcon.propTypes = {\n  className: PropTypes.string\n};\nexport default DeleteIcon;","import { colors } from '@dhis2/ui';\nimport PropTypes from 'prop-types';\nimport React from 'react';\n\nconst DescriptionIcon = ({\n  className\n}) => /*#__PURE__*/React.createElement(\"svg\", {\n  className: className,\n  xmlns: \"http://www.w3.org/2000/svg\",\n  viewBox: \"0 0 24 24\",\n  fill: colors.grey500\n}, /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M0 0h24v24H0z\",\n  fill: \"none\"\n}), /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M14 2H6c-1.1 0-1.99.9-1.99 2L4 20c0 1.1.89 2 1.99 2H18c1.1 0 2-.9 2-2V8l-6-6zm2 16H8v-2h8v2zm0-4H8v-2h8v2zm-3-5V3.5L18.5 9H13z\"\n}));\n\nDescriptionIcon.propTypes = {\n  className: PropTypes.string\n};\nexport default DescriptionIcon;","import { useConfig } from '@dhis2/app-runtime';\nimport { Divider, colors, spacers } from '@dhis2/ui';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport { acUpdateDashboardItem, acRemoveDashboardItem } from '../../../actions/editDashboard';\nimport { isEditMode } from '../../../modules/dashboardModes';\nimport { itemTypeMap, getItemUrl } from '../../../modules/itemTypes';\nimport { orArray } from '../../../modules/util';\nimport ItemHeader from '../ItemHeader/ItemHeader';\nimport DeleteIcon from './assets/Delete';\nimport DescriptionIcon from './assets/Description';\nimport classes from './Item.module.css';\n\nconst getItemTitle = item => itemTypeMap[item.type].pluralTitle;\n\nconst getContentItems = item => orArray(item[itemTypeMap[item.type].propName]).filter((item, index, array) => array.findIndex(el => el.id === item.id) === index);\n\nconst ListItem = ({\n  item,\n  dashboardMode,\n  removeItem,\n  updateItem\n}) => {\n  const {\n    baseUrl\n  } = useConfig();\n  const contentItems = getContentItems(item);\n\n  const updateDashboardItem = content => {\n    const listItemType = itemTypeMap[item.type].propName;\n    const newContent = item[listItemType].filter(item => item.id !== content.id);\n\n    if (newContent.length) {\n      item[listItemType] = newContent;\n      updateItem(item);\n    } else {\n      removeItem(item);\n    }\n  };\n\n  const getLink = contentItem => {\n    const deleteButton = /*#__PURE__*/React.createElement(\"button\", {\n      className: classes.deletebutton,\n      onClick: () => updateDashboardItem(contentItem)\n    }, /*#__PURE__*/React.createElement(DeleteIcon, {\n      className: classes.deleteicon\n    }));\n    return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"a\", {\n      className: classes.link,\n      style: {\n        color: colors.grey900\n      },\n      href: getItemUrl(item.type, contentItem, baseUrl)\n    }, contentItem.name), isEditMode(dashboardMode) ? deleteButton : null);\n  };\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(ItemHeader, {\n    title: getItemTitle(item),\n    itemId: item.id,\n    dashboardMode: dashboardMode,\n    isShortened: item.shortened\n  }), /*#__PURE__*/React.createElement(Divider, {\n    margin: `0 0 ${spacers.dp4} 0`\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"dashboard-item-content\"\n  }, /*#__PURE__*/React.createElement(\"ul\", {\n    className: classes.list\n  }, contentItems.map(contentItem => /*#__PURE__*/React.createElement(\"li\", {\n    className: classes.item,\n    key: contentItem.id\n  }, /*#__PURE__*/React.createElement(DescriptionIcon, {\n    className: classes.itemicon\n  }), getLink(contentItem))))));\n};\n\nListItem.propTypes = {\n  dashboardMode: PropTypes.string,\n  item: PropTypes.object,\n  removeItem: PropTypes.func,\n  updateItem: PropTypes.func\n};\nexport default connect(null, {\n  removeItem: acRemoveDashboardItem,\n  updateItem: acUpdateDashboardItem\n})(ListItem);","import update from 'immutability-helper';\nimport { arrayToIdMap } from '../modules/util';\nexport const RECEIVED_MESSAGES = 'RECEIVED_MESSAGES';\nexport default ((state = {}, action) => {\n  switch (action.type) {\n    case RECEIVED_MESSAGES:\n      {\n        const conversations = arrayToIdMap(action.value);\n        const newState = update(state, {\n          $merge: conversations\n        });\n        return newState;\n      }\n\n    default:\n      return state;\n  }\n}); // selectors\n\nexport const sGetMessagesRoot = state => state.messages;","export const userSettingsQuery = {\n  resource: 'userSettings',\n  params: {\n    key: ['keyDbLocale', 'keyUiLocale', 'keyAnalysisDisplayProperty']\n  }\n};","import { useDataEngine } from '@dhis2/app-runtime';\nimport PropTypes from 'prop-types';\nimport React, { useContext, useState, useEffect, createContext } from 'react';\nimport { userSettingsQuery } from '../api/userSettings';\nexport const UserSettingsCtx = /*#__PURE__*/createContext({});\n\nconst UserSettingsProvider = ({\n  children\n}) => {\n  const [settings, setSettings] = useState([]);\n  const engine = useDataEngine();\n  useEffect(() => {\n    async function fetchData() {\n      const {\n        userSettings\n      } = await engine.query({\n        userSettings: userSettingsQuery\n      });\n      setSettings({ ...userSettings,\n        displayProperty: userSettings.keyAnalysisDisplayProperty\n      });\n    }\n\n    fetchData();\n  }, []);\n  return /*#__PURE__*/React.createElement(UserSettingsCtx.Provider, {\n    value: {\n      userSettings: settings\n    }\n  }, children);\n};\n\nUserSettingsProvider.propTypes = {\n  children: PropTypes.node\n};\nexport default UserSettingsProvider;\nexport const useUserSettings = () => useContext(UserSettingsCtx);","import { useConfig } from '@dhis2/app-runtime';\nimport i18n from '@dhis2/d2-i18n';\nimport { Divider, spacers } from '@dhis2/ui';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport { isViewMode } from '../../../modules/dashboardModes';\nimport { sGetMessagesRoot } from '../../../reducers/messages';\nimport { useUserSettings } from '../../UserSettingsProvider';\nimport ItemHeader from '../ItemHeader/ItemHeader';\nimport { getFormattedDate } from './getFormattedDate';\nimport classes from './styles/Item.module.css';\nimport './MessagesItem.css';\nconst PRIVATE = 'PRIVATE';\nconst messageTypes = {\n  [PRIVATE]: 'Private',\n  VALIDATION_RESULT: 'Validation',\n  TICKET: 'Ticket',\n  SYSTEM: 'System'\n};\n\nconst MessagesItem = ({\n  messages,\n  item,\n  dashboardMode\n}) => {\n  const {\n    baseUrl\n  } = useConfig();\n  const {\n    userSettings\n  } = useUserSettings();\n\n  const getMessageHref = msg => {\n    const msgIdentifier = msg ? `#/${msg.messageType}/${msg.id}` : '';\n    return `${baseUrl}/dhis-web-messaging/${msgIdentifier}`;\n  };\n\n  const getMessageSender = msg => {\n    const latestMsg = msg.messages.slice(-1)[0];\n    return latestMsg.sender ? latestMsg.sender.displayName : '';\n  };\n\n  const getMessageItems = () => {\n    const modeClass = isViewMode(dashboardMode) ? 'view' : null;\n    return messages.map(msg => {\n      const redirectToMsg = () => {\n        if (isViewMode(dashboardMode)) {\n          document.location.href = getMessageHref(msg);\n        }\n      };\n\n      const sender = msg.messageType === PRIVATE ? getMessageSender(msg) : messageTypes[msg.messageType];\n      const readClass = !msg.read ? 'unread' : null;\n      const latestMsg = msg.messages.slice(-1)[0];\n      const msgDate = latestMsg.lastUpdated;\n      return /*#__PURE__*/React.createElement(\"li\", {\n        className: `message-item ${modeClass}`,\n        key: msg.id,\n        onClick: redirectToMsg\n      }, /*#__PURE__*/React.createElement(\"p\", {\n        className: `message-title ${readClass}`\n      }, msg.displayName, \" (\", msg.messageCount, \")\"), /*#__PURE__*/React.createElement(\"p\", {\n        className: classes.sender\n      }, sender, \" -\", ' ', getFormattedDate(msgDate, userSettings.keyUiLocale)), /*#__PURE__*/React.createElement(\"p\", {\n        className: classes.snippet\n      }, latestMsg.text));\n    });\n  };\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(ItemHeader, {\n    title: i18n.t('Messages'),\n    itemId: item.id,\n    dashboardMode: dashboardMode,\n    isShortened: item.shortened\n  }), /*#__PURE__*/React.createElement(Divider, {\n    margin: `0 0 ${spacers.dp4} 0`\n  }), messages.length > 0 && /*#__PURE__*/React.createElement(\"div\", {\n    className: \"dashboard-item-content\"\n  }, /*#__PURE__*/React.createElement(\"ul\", {\n    className: classes.list\n  }, getMessageItems()), /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.seeAll\n  }, /*#__PURE__*/React.createElement(\"a\", {\n    href: getMessageHref()\n  }, i18n.t('See all messages')))));\n};\n\nMessagesItem.propTypes = {\n  dashboardMode: PropTypes.string,\n  item: PropTypes.object,\n  messages: PropTypes.array\n};\n\nconst mapStateToProps = state => {\n  return {\n    messages: Object.values(sGetMessagesRoot(state))\n  };\n};\n\nconst MessagesContainer = connect(mapStateToProps, null)(MessagesItem);\nexport default MessagesContainer;","import i18n from '@dhis2/d2-i18n';\nimport { colors, IconQuestion24 } from '@dhis2/ui';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport ItemHeader from '../ItemHeader/ItemHeader';\n\nconst NotSupportedItem = ({\n  item,\n  dashboardMode\n}) => {\n  const message = item.type ? i18n.t('Item type \"{{type}}\" is not supported', {\n    type: item.type\n  }) : i18n.t('The item type is missing');\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(ItemHeader, {\n    itemId: item.id,\n    dashboardMode: dashboardMode,\n    isShortened: item.shortened\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      display: 'flex',\n      flexDirection: 'column',\n      justifyContent: 'center',\n      alignItems: 'center',\n      height: '90%'\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", null, message), /*#__PURE__*/React.createElement(IconQuestion24, {\n    color: colors.grey500\n  })));\n};\n\nNotSupportedItem.propTypes = {\n  dashboardMode: PropTypes.string,\n  item: PropTypes.object\n};\nexport default NotSupportedItem;","import React from 'react';\n\nconst PageBreakItem = () => /*#__PURE__*/React.createElement(\"div\", null);\n\nexport default PageBreakItem;","export const SET_SELECTED = 'SET_SELECTED';\nexport const CLEAR_SELECTED = 'CLEAR_SELECTED';\nexport const DEFAULT_SELECTED_STATE = {};\nconst SELECTED_PROPERTIES = {\n  id: '',\n  displayName: '',\n  displayDescription: '',\n  access: {},\n  restrictFilters: false,\n  allowedFilters: [],\n  dashboardItems: []\n};\nexport default ((state = DEFAULT_SELECTED_STATE, action) => {\n  switch (action.type) {\n    case SET_SELECTED:\n      {\n        const newState = {};\n        Object.keys(SELECTED_PROPERTIES).map(k => newState[k] = action.value[k]);\n        return newState;\n      }\n\n    case CLEAR_SELECTED:\n      {\n        return DEFAULT_SELECTED_STATE;\n      }\n\n    default:\n      return state;\n  }\n}); // Selectors\n\nexport const sGetSelected = state => state.selected;\nexport const sGetSelectedId = state => sGetSelected(state).id;\nexport const sGetSelectedDisplayName = state => sGetSelected(state).displayName;\nexport const sGetSelectedDisplayDescription = state => sGetSelected(state).displayDescription;\nexport const sGetSelectedDashboardItems = state => sGetSelected(state).dashboardItems || SELECTED_PROPERTIES.dashboardItems;\nexport const sGetIsNullDashboardItems = state => sGetSelected(state).dashboardItems === undefined;","import i18n from '@dhis2/d2-i18n';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport { sGetIsEditing } from '../../../reducers/editDashboard';\nimport { sGetNamedItemFilters } from '../../../reducers/itemFilters';\nimport { sGetPrintDashboardName, sGetPrintDashboardDescription } from '../../../reducers/printDashboard';\nimport { sGetSelectedDisplayName, sGetSelectedDisplayDescription } from '../../../reducers/selected';\nimport { sGetShowDescription } from '../../../reducers/showDescription';\nimport classes from './styles/Item.module.css';\n\nconst PrintTitlePageItem = ({\n  name,\n  description,\n  itemFilters,\n  showDescription\n}) => {\n  const getItemFilterList = () => {\n    const listItems = itemFilters.map(({\n      name,\n      values\n    }) => /*#__PURE__*/React.createElement(\"li\", {\n      className: classes.filterListItem,\n      key: name\n    }, name, \": \", values.map(val => val.name).join(', ')));\n    return /*#__PURE__*/React.createElement(\"ul\", {\n      className: classes.filterList\n    }, listItems);\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.titlePage\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    className: classes.name\n  }, name), showDescription && description && /*#__PURE__*/React.createElement(\"p\", {\n    className: classes.description\n  }, description), itemFilters.length > 0 && /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"p\", {\n    className: classes.filterTitle\n  }, i18n.t('Filters applied')), getItemFilterList()));\n};\n\nPrintTitlePageItem.propTypes = {\n  description: PropTypes.string,\n  itemFilters: PropTypes.array,\n  name: PropTypes.string,\n  showDescription: PropTypes.bool\n};\nPrintTitlePageItem.defaultProps = {\n  description: '',\n  name: '',\n  showDescription: false\n};\n\nconst mapStateToProps = state => {\n  const isEditMode = sGetIsEditing(state);\n  const name = isEditMode ? sGetPrintDashboardName(state) || i18n.t('Untitled dashboard') : sGetSelectedDisplayName(state);\n  const description = isEditMode ? sGetPrintDashboardDescription(state) : sGetSelectedDisplayDescription(state);\n  return {\n    name,\n    description,\n    itemFilters: sGetNamedItemFilters(state),\n    showDescription: sGetShowDescription(state)\n  };\n};\n\nexport default connect(mapStateToProps)(PrintTitlePageItem);","import i18n from '@dhis2/d2-i18n';\nimport { colors } from '@dhis2/ui';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport ItemHeader from '../ItemHeader/ItemHeader';\nconst style = {\n  margin: '21px 28px',\n  fontSize: '14px',\n  lineHeight: '18px',\n  color: colors.grey600\n};\n\nconst SpacerItem = props => {\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(ItemHeader, {\n    title: i18n.t('Spacer'),\n    itemId: props.item.id,\n    dashboardMode: props.dashboardMode,\n    isShortened: props.item.shortened\n  }), /*#__PURE__*/React.createElement(\"p\", {\n    style: style\n  }, i18n.t('Use a spacer to create empty vertical space between other dashboard items.')));\n};\n\nSpacerItem.propTypes = {\n  dashboardMode: PropTypes.string,\n  item: PropTypes.object\n};\nexport default SpacerItem;","import i18n from '@dhis2/d2-i18n';\nimport { Parser as RichTextParser, Editor as RichTextEditor } from '@dhis2/d2-ui-rich-text';\nimport { Divider, TextArea, spacers } from '@dhis2/ui';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport { acUpdateDashboardItem } from '../../../actions/editDashboard';\nimport { isEditMode, PRINT_LAYOUT } from '../../../modules/dashboardModes';\nimport { sGetEditDashboardItems } from '../../../reducers/editDashboard';\nimport { sGetIsPrinting, sGetPrintDashboardItems } from '../../../reducers/printDashboard';\nimport { sGetSelectedDashboardItems } from '../../../reducers/selected';\nimport ItemHeader from '../ItemHeader/ItemHeader';\nimport PrintItemInfo from '../ItemHeader/PrintItemInfo';\nconst style = {\n  textDiv: {\n    padding: '10px',\n    whiteSpace: 'pre-line',\n    lineHeight: '20px'\n  },\n  textField: {\n    fontSize: '14px',\n    fontStretch: 'normal',\n    width: '90%',\n    margin: '0 auto',\n    display: 'block',\n    lineHeight: '24px'\n  },\n  container: {\n    marginBottom: '20px',\n    marginTop: '20px'\n  }\n};\n\nconst TextItem = props => {\n  const {\n    item,\n    dashboardMode,\n    text,\n    acUpdateDashboardItem\n  } = props;\n\n  const onChangeText = text => {\n    const updatedItem = { ...item,\n      text\n    };\n    acUpdateDashboardItem(updatedItem);\n  };\n\n  const viewItem = () => {\n    const textDivStyle = Object.assign({}, style.textField, style.textDiv);\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"dashboard-item-content\",\n      style: style.container\n    }, /*#__PURE__*/React.createElement(RichTextParser, {\n      style: textDivStyle\n    }, text));\n  };\n\n  const editItem = () => {\n    return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(ItemHeader, {\n      title: i18n.t('Text item'),\n      itemId: item.id,\n      dashboardMode: dashboardMode\n    }), /*#__PURE__*/React.createElement(Divider, {\n      margin: `0 0 ${spacers.dp4} 0`\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"dashboard-item-content\"\n    }, /*#__PURE__*/React.createElement(RichTextEditor, {\n      onEdit: event => onChangeText(event.target.value)\n    }, /*#__PURE__*/React.createElement(TextArea, {\n      rows: 30,\n      value: text,\n      placeholder: i18n.t('Add text here'),\n      onChange: ({\n        value\n      }) => onChangeText(value)\n    }))));\n  };\n\n  const printItem = () => {\n    const textDivStyle = Object.assign({}, style.textField, style.textDiv);\n    return /*#__PURE__*/React.createElement(React.Fragment, null, props.item.shortened ? /*#__PURE__*/React.createElement(PrintItemInfo, null) : null, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"dashboard-item-content\",\n      style: style.container\n    }, /*#__PURE__*/React.createElement(RichTextParser, {\n      style: textDivStyle\n    }, text)));\n  };\n\n  let textItem;\n\n  if (isEditMode(dashboardMode)) {\n    textItem = editItem;\n  } else if (dashboardMode === PRINT_LAYOUT) {\n    textItem = printItem;\n  } else {\n    textItem = viewItem;\n  }\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, textItem());\n};\n\nconst mapStateToProps = (state, ownProps) => {\n  const isPrintPreview = sGetIsPrinting(state);\n  let items;\n\n  if (isPrintPreview) {\n    items = sGetPrintDashboardItems(state);\n  } else if (isEditMode(ownProps.dashboardMode)) {\n    items = sGetEditDashboardItems(state);\n  } else {\n    items = sGetSelectedDashboardItems(state);\n  }\n\n  const item = items.find(item => item.id === ownProps.item.id);\n  return {\n    text: item ? item.text : ''\n  };\n};\n\nTextItem.propTypes = {\n  acUpdateDashboardItem: PropTypes.func,\n  dashboardMode: PropTypes.string,\n  item: PropTypes.object,\n  text: PropTypes.string\n};\nexport default connect(mapStateToProps, {\n  acUpdateDashboardItem\n})(TextItem);","export const SET_ITEM_ACTIVE_TYPE = 'SET_ITEM_ACTIVE_TYPE';\nexport const CLEAR_ITEM_ACTIVE_TYPES = 'CLEAR_ITEM_ACTIVE_TYPES';\nexport const DEFAULT_STATE_ITEM_ACTIVE_TYPES = {};\nexport default ((state = DEFAULT_STATE_ITEM_ACTIVE_TYPES, action) => {\n  switch (action.type) {\n    case SET_ITEM_ACTIVE_TYPE:\n      {\n        return { ...state,\n          [action.id]: action.activeType\n        };\n      }\n\n    case CLEAR_ITEM_ACTIVE_TYPES:\n      {\n        return DEFAULT_STATE_ITEM_ACTIVE_TYPES;\n      }\n\n    default:\n      return state;\n  }\n});\nexport const sGetItemActiveType = (state, id) => state.itemActiveTypes[id];","import objectClean from 'd2-utilizr/lib/objectClean';\nimport { orObject } from '../modules/util';\n/** @module reducers/visualizations */\n\nexport const ADD_VISUALIZATION = 'ADD_VISUALIZATION';\nexport const CLEAR_VISUALIZATIONS = 'CLEAR_VISUALIZATIONS';\nexport const DEFAULT_STATE_VISUALIZATIONS = {};\n\nconst isEmpty = p => p === undefined || p === null;\n\nexport default ((state = DEFAULT_STATE_VISUALIZATIONS, action) => {\n  switch (action.type) {\n    case ADD_VISUALIZATION:\n      {\n        return { ...state,\n          [action.value.id]: objectClean({ ...orObject(state[action.value.id]),\n            ...action.value\n          }, isEmpty)\n        };\n      }\n\n    case CLEAR_VISUALIZATIONS:\n      {\n        return DEFAULT_STATE_VISUALIZATIONS;\n      }\n\n    default:\n      return state;\n  }\n}); // root selector\n\nconst sGetVisualizationsRoot = state => state.visualizations; // selectors level 1\n\n\nexport const sGetVisualization = (state, id) => {\n  return sGetVisualizationsRoot(state)[id];\n};","import { getInstance } from 'd2';\nexport const apiPostDataStatistics = async (eventType, id) => {\n  const d2 = await getInstance();\n  const url = `dataStatistics?eventType=${eventType}&favorite=${id}`;\n  d2.Api.getApi().post(url);\n};","import isObject from 'lodash/isObject';\nimport { itemTypeMap } from './itemTypes';\nexport const getVisualizationFromItem = item => {\n  var _itemTypeMap$item$typ;\n\n  if (!isObject(item)) {\n    return null;\n  }\n\n  const propName = (_itemTypeMap$item$typ = itemTypeMap[item.type]) === null || _itemTypeMap$item$typ === void 0 ? void 0 : _itemTypeMap$item$typ.propName;\n  return item[propName] || item.reportTable || item.chart || item.map || item.eventReport || item.eventChart || {};\n};\nexport const getVisualizationId = item => getVisualizationFromItem(item).id;\nexport const getVisualizationName = item => getVisualizationFromItem(item).name;","import { getInstance } from 'd2';\nimport { getVisualizationId } from '../modules/item';\nimport { getEndPointName, MAP } from '../modules/itemTypes';\nimport { getMapFields, getFavoriteFields } from './metadata';\nexport const apiFetchVisualization = async item => {\n  const id = getVisualizationId(item);\n  const fields = item.type === MAP ? getMapFields() : getFavoriteFields({\n    withDimensions: true,\n    withOptions: true\n  });\n  const d2 = await getInstance();\n  return await d2.Api.getApi().get(`${getEndPointName(item.type)}/${id}`, {\n    fields\n  });\n};","export const DEFAULT_SETTINGS = {\n  keyDashboardContextMenuItemOpenInRelevantApp: true,\n  keyDashboardContextMenuItemShowInterpretationsAndDetails: true,\n  keyDashboardContextMenuItemSwitchViewType: true,\n  keyDashboardContextMenuItemViewFullscreen: true,\n  keyGatherAnalyticalObjectStatisticsInDashboardViews: false\n};\nconst SYSTEM_SETTINGS = ['keyDashboardContextMenuItemOpenInRelevantApp', 'keyDashboardContextMenuItemShowInterpretationsAndDetails', 'keyDashboardContextMenuItemSwitchViewType', 'keyDashboardContextMenuItemViewFullscreen', 'keyGatherAnalyticalObjectStatisticsInDashboardViews', 'keyHideBiMonthlyPeriods', 'keyHideDailyPeriods', 'keyHideMonthlyPeriods', 'keyHideWeeklyPeriods', 'keyHideBiWeeklyPeriods'];\nconst SYSTEM_SETTINGS_REMAPPINGS = {\n  keyDashboardContextMenuItemOpenInRelevantApp: 'allowVisOpenInApp',\n  keyDashboardContextMenuItemShowInterpretationsAndDetails: 'allowVisShowInterpretations',\n  keyDashboardContextMenuItemSwitchViewType: 'allowVisViewAs',\n  keyDashboardContextMenuItemViewFullscreen: 'allowVisFullscreen',\n  keyHideBiMonthlyPeriods: 'hideBiMonthlyPeriods',\n  keyHideDailyPeriods: 'hideDailyPeriods',\n  keyHideMonthlyPeriods: 'hideMonthlyPeriods',\n  keyHideWeeklyPeriods: 'hideWeeklyPeriods',\n  keyHideBiWeeklyPeriods: 'hideBiWeeklyPeriods'\n};\nexport const renameSystemSettings = settings => {\n  return Object.keys(settings).reduce((mapped, key) => {\n    mapped[SYSTEM_SETTINGS_REMAPPINGS[key] || key] = settings[key];\n    return mapped;\n  }, {});\n};\nexport const systemSettingsQuery = {\n  resource: 'systemSettings',\n  params: {\n    key: SYSTEM_SETTINGS\n  }\n};","import { useDataEngine } from '@dhis2/app-runtime';\nimport PropTypes from 'prop-types';\nimport React, { useContext, useState, useEffect, createContext } from 'react';\nimport { systemSettingsQuery, renameSystemSettings, DEFAULT_SETTINGS } from '../api/systemSettings';\nexport const SystemSettingsCtx = /*#__PURE__*/createContext({});\n\nconst SystemSettingsProvider = ({\n  children\n}) => {\n  const [settings, setSettings] = useState([]);\n  const engine = useDataEngine();\n  useEffect(() => {\n    async function fetchData() {\n      const {\n        systemSettings\n      } = await engine.query({\n        systemSettings: systemSettingsQuery\n      });\n      setSettings(Object.assign({}, renameSystemSettings(DEFAULT_SETTINGS), renameSystemSettings(systemSettings)));\n    }\n\n    fetchData();\n  }, []);\n  return /*#__PURE__*/React.createElement(SystemSettingsCtx.Provider, {\n    value: {\n      settings\n    }\n  }, children);\n};\n\nSystemSettingsProvider.propTypes = {\n  children: PropTypes.node\n};\nexport default SystemSettingsProvider;\nexport const useSystemSettings = () => useContext(SystemSettingsCtx);","import { colors } from '@dhis2/ui';\nimport React from 'react';\nexport const Warning = () => /*#__PURE__*/React.createElement(\"svg\", {\n  xmlns: \"http://www.w3.org/2000/svg\",\n  height: \"24\",\n  viewBox: \"0 0 24 24\",\n  width: \"24\",\n  fill: colors.grey600\n}, /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M0 0h24v24H0z\",\n  fill: \"none\"\n}), /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M1 21h22L12 2 1 21zm12-3h-2v-2h2v2zm0-4h-2v-4h2v4z\"\n}));","import PropTypes from 'prop-types';\nimport React from 'react';\nimport { Warning } from './assets/icons';\nimport classes from './styles/FatalErrorBoundary.module.css';\n\nclass FatalErrorBoundary extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      errorFound: false\n    };\n  }\n\n  componentDidCatch(error, info) {\n    this.setState({\n      errorFound: true\n    });\n    console.log('error: ', error);\n    console.log('info: ', info);\n    this.props.onFatalError();\n  }\n\n  render() {\n    if (this.state.errorFound) {\n      return /*#__PURE__*/React.createElement(\"p\", {\n        className: classes.container\n      }, /*#__PURE__*/React.createElement(\"span\", {\n        className: classes.icon\n      }, /*#__PURE__*/React.createElement(Warning, null)), /*#__PURE__*/React.createElement(\"span\", {\n        className: classes.message\n      }, this.props.message));\n    }\n\n    return this.props.children;\n  }\n\n}\n\nFatalErrorBoundary.propTypes = {\n  children: PropTypes.node,\n  message: PropTypes.string,\n  onFatalError: PropTypes.func\n};\nFatalErrorBoundary.defaultProps = {\n  onFatalError: Function.prototype\n};\nexport default FatalErrorBoundary;","export const getGridItemDomElementClassName = itemId => `reactgriditem-${itemId}`;","import { getGridItemDomElementClassName } from '../../../modules/getGridItemDomElementClassName';\nexport const getGridItemElement = itemId => document.querySelector(`.${getGridItemDomElementClassName(itemId)}`);","import { getGridItemDomElementClassName } from '../../../modules/getGridItemDomElementClassName';\nexport const isElementFullscreen = itemId => {\n  const fullscreenElement = document.fullscreenElement || document.webkitFullscreenElement;\n  return fullscreenElement === null || fullscreenElement === void 0 ? void 0 : fullscreenElement.classList.contains(getGridItemDomElementClassName(itemId));\n};","export const THEMATIC_LAYER = 'thematic';\n\nconst getThematicMapViews = map => map.mapViews && map.mapViews.find(mv => mv.layer.includes(THEMATIC_LAYER));\n\nexport default getThematicMapViews;","import i18n from '@dhis2/d2-i18n';\nimport { MenuItem, Tooltip, colors, IconVisualizationColumn16, IconTable16, IconWorld16 } from '@dhis2/ui';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport { CHART, MAP, REPORT_TABLE, EVENT_CHART, EVENT_REPORT, isTrackerDomainType, hasMapView } from '../../../../modules/itemTypes';\nimport getThematicMapViews from '../getThematicMapViews';\n\nconst ViewAsMenuItems = ({\n  type,\n  activeType,\n  visualization,\n  onActiveTypeChanged\n}) => {\n  const isTrackerType = isTrackerDomainType(type);\n\n  const onViewTable = () => onActiveTypeChanged(isTrackerType ? EVENT_REPORT : REPORT_TABLE);\n\n  const onViewChart = () => onActiveTypeChanged(isTrackerType ? EVENT_CHART : CHART);\n\n  const onViewMap = () => onActiveTypeChanged(MAP);\n\n  const isDisabled = type === MAP && !getThematicMapViews(visualization);\n  const iconColor = isDisabled ? colors.grey500 : colors.grey600;\n\n  const ViewAsChartMenuItem = () => {\n    const ChartMenuItem = () => /*#__PURE__*/React.createElement(MenuItem, {\n      dense: true,\n      disabled: isDisabled,\n      label: i18n.t('View as Chart'),\n      onClick: onViewChart,\n      icon: /*#__PURE__*/React.createElement(IconVisualizationColumn16, {\n        color: iconColor\n      })\n    });\n\n    if (isDisabled) {\n      return /*#__PURE__*/React.createElement(Tooltip, {\n        content: i18n.t(\"This map can't be displayed as a chart\")\n      }, /*#__PURE__*/React.createElement(ChartMenuItem, null));\n    }\n\n    return /*#__PURE__*/React.createElement(ChartMenuItem, null);\n  };\n\n  const ViewAsTableMenuItem = () => {\n    const TableMenuItem = () => /*#__PURE__*/React.createElement(MenuItem, {\n      dense: true,\n      disabled: isDisabled,\n      label: i18n.t('View as Table'),\n      onClick: onViewTable,\n      icon: /*#__PURE__*/React.createElement(IconTable16, {\n        color: iconColor\n      })\n    });\n\n    if (isDisabled) {\n      return /*#__PURE__*/React.createElement(Tooltip, {\n        content: i18n.t(\"This map can't be displayed as a table\")\n      }, /*#__PURE__*/React.createElement(TableMenuItem, null));\n    }\n\n    return /*#__PURE__*/React.createElement(TableMenuItem, null);\n  };\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, activeType !== CHART && activeType !== EVENT_CHART && /*#__PURE__*/React.createElement(ViewAsChartMenuItem, null), activeType !== REPORT_TABLE && activeType !== EVENT_REPORT && /*#__PURE__*/React.createElement(ViewAsTableMenuItem, null), hasMapView(type) && activeType !== MAP && /*#__PURE__*/React.createElement(MenuItem, {\n    dense: true,\n    label: i18n.t('View as Map'),\n    onClick: onViewMap,\n    icon: /*#__PURE__*/React.createElement(IconWorld16, {\n      color: colors.grey600\n    })\n  }));\n};\n\nViewAsMenuItems.propTypes = {\n  activeType: PropTypes.string,\n  type: PropTypes.string,\n  visualization: PropTypes.object,\n  onActiveTypeChanged: PropTypes.func\n};\nexport default ViewAsMenuItems;","import { isSingleValue, isYearOverYear, VIS_TYPE_GAUGE, VIS_TYPE_PIE } from '@dhis2/analytics';\nimport { useConfig } from '@dhis2/app-runtime';\nimport i18n from '@dhis2/d2-i18n';\nimport { colors, Button, Menu, Popover, MenuItem, Divider, IconFullscreen16, IconFullscreenExit16, IconLaunch16, IconMessages16, IconMore24 } from '@dhis2/ui';\nimport PropTypes from 'prop-types';\nimport React, { useState, createRef } from 'react';\nimport { getVisualizationId } from '../../../../modules/item';\nimport { getAppName, itemTypeMap } from '../../../../modules/itemTypes';\nimport { isSmallScreen } from '../../../../modules/smallScreen';\nimport { useSystemSettings } from '../../../SystemSettingsProvider';\nimport { useWindowDimensions } from '../../../WindowDimensionsProvider';\nimport { isElementFullscreen } from '../isElementFullscreen';\nimport ViewAsMenuItems from './ViewAsMenuItems';\n\nconst ItemContextMenu = props => {\n  const [menuIsOpen, setMenuIsOpen] = useState(false);\n  const {\n    width\n  } = useWindowDimensions();\n  const {\n    baseUrl\n  } = useConfig();\n  const {\n    allowVisOpenInApp,\n    allowVisShowInterpretations,\n    allowVisViewAs,\n    allowVisFullscreen\n  } = useSystemSettings().settings;\n  const fullscreenAllowed = props.fullscreenSupported && allowVisFullscreen;\n  const noOptionsEnabled = !allowVisOpenInApp && !allowVisShowInterpretations && !allowVisViewAs && !fullscreenAllowed;\n\n  if (noOptionsEnabled || !allowVisOpenInApp && props.loadItemFailed) {\n    return null;\n  }\n\n  const toggleInterpretations = () => {\n    props.onToggleFooter();\n\n    if (menuIsOpen) {\n      closeMenu();\n    }\n  };\n\n  const toggleFullscreen = () => {\n    props.onToggleFullscreen();\n    closeMenu();\n  };\n\n  const onActiveTypeChanged = type => {\n    closeMenu();\n    props.onSelectActiveType(type);\n  };\n\n  const openMenu = () => {\n    setMenuIsOpen(true);\n  };\n\n  const closeMenu = () => setMenuIsOpen(false);\n\n  const {\n    item,\n    visualization,\n    loadItemFailed,\n    activeType\n  } = props;\n  const type = visualization.type || item.type;\n  const canViewAs = allowVisViewAs && !isSingleValue(type) && !isYearOverYear(type) && type !== VIS_TYPE_GAUGE && type !== VIS_TYPE_PIE;\n  const interpretationMenuLabel = props.activeFooter ? i18n.t(`Hide details and interpretations`) : i18n.t(`Show details and interpretations`);\n  const buttonRef = /*#__PURE__*/createRef();\n  const itemHref = `${baseUrl}/${itemTypeMap[item.type].appUrl(getVisualizationId(item))}`;\n  return isElementFullscreen(item.id) ? /*#__PURE__*/React.createElement(Button, {\n    small: true,\n    secondary: true,\n    onClick: props.onToggleFullscreen\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    \"data-testid\": \"exit-fullscreen-button\"\n  }, /*#__PURE__*/React.createElement(IconFullscreenExit16, {\n    color: colors.grey600\n  }))) : /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\n    ref: buttonRef\n  }, /*#__PURE__*/React.createElement(Button, {\n    small: true,\n    secondary: true,\n    onClick: openMenu,\n    dataTest: \"dashboarditem-menu-button\",\n    icon: /*#__PURE__*/React.createElement(IconMore24, {\n      color: colors.grey700\n    })\n  })), menuIsOpen && /*#__PURE__*/React.createElement(Popover, {\n    reference: buttonRef,\n    placement: \"auto-start\",\n    arrow: false,\n    onClickOutside: closeMenu\n  }, /*#__PURE__*/React.createElement(Menu, null, canViewAs && !loadItemFailed && /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(ViewAsMenuItems, {\n    type: item.type,\n    activeType: activeType,\n    onActiveTypeChanged: onActiveTypeChanged,\n    visualization: visualization\n  }), (allowVisShowInterpretations || allowVisOpenInApp && !isSmallScreen(width) || fullscreenAllowed) && /*#__PURE__*/React.createElement(\"span\", {\n    \"data-testid\": \"divider\"\n  }, /*#__PURE__*/React.createElement(Divider, null))), allowVisOpenInApp && !isSmallScreen(width) && /*#__PURE__*/React.createElement(MenuItem, {\n    dense: true,\n    icon: /*#__PURE__*/React.createElement(IconLaunch16, {\n      color: colors.grey600\n    }),\n    label: i18n.t('Open in {{appName}} app', {\n      appName: getAppName(item.type)\n    }),\n    href: itemHref,\n    target: \"_blank\"\n  }), allowVisShowInterpretations && !loadItemFailed && /*#__PURE__*/React.createElement(MenuItem, {\n    dense: true,\n    icon: /*#__PURE__*/React.createElement(IconMessages16, {\n      color: colors.grey600\n    }),\n    label: interpretationMenuLabel,\n    onClick: toggleInterpretations\n  }), fullscreenAllowed && !loadItemFailed && /*#__PURE__*/React.createElement(MenuItem, {\n    dense: true,\n    icon: /*#__PURE__*/React.createElement(IconFullscreen16, {\n      color: colors.grey600\n    }),\n    label: i18n.t('View fullscreen'),\n    onClick: toggleFullscreen\n  }))));\n};\n\nItemContextMenu.propTypes = {\n  activeFooter: PropTypes.bool,\n  activeType: PropTypes.string,\n  fullscreenSupported: PropTypes.bool,\n  item: PropTypes.object,\n  loadItemFailed: PropTypes.bool,\n  visualization: PropTypes.object,\n  onSelectActiveType: PropTypes.func,\n  onToggleFooter: PropTypes.func,\n  onToggleFullscreen: PropTypes.func\n};\nexport default ItemContextMenu;","import { useD2 } from '@dhis2/app-runtime-adapter-d2';\nimport i18n from '@dhis2/d2-i18n';\nimport InterpretationsComponent from '@dhis2/d2-ui-interpretations';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport { getVisualizationId } from '../../../modules/item';\nimport FatalErrorBoundary from './FatalErrorBoundary';\nimport classes from './styles/ItemFooter.module.css';\n\nconst ItemFooter = props => {\n  const {\n    d2\n  } = useD2();\n  return /*#__PURE__*/React.createElement(\"div\", {\n    \"data-test\": \"dashboarditem-footer\"\n  }, /*#__PURE__*/React.createElement(\"hr\", {\n    className: classes.line\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.scrollContainer\n  }, /*#__PURE__*/React.createElement(FatalErrorBoundary, {\n    message: i18n.t('There was a problem loading interpretations for this item')\n  }, /*#__PURE__*/React.createElement(InterpretationsComponent, {\n    d2: d2,\n    item: props.item,\n    type: props.item.type.toLowerCase(),\n    id: getVisualizationId(props.item),\n    appName: \"dashboard\"\n  }))));\n};\n\nItemFooter.propTypes = {\n  item: PropTypes.object.isRequired\n};\nexport default ItemFooter;","// Note that this ignores discrepancies in 'this', so shouldn't be used with bound functions\n// This is useful instead of lodash/memoize when we only need to memoize a single value\n// Inspiration: https://github.com/alexreardon/memoize-one\nconst memoizeOne = fn => {\n  let lastArgs = undefined;\n  let lastValue = undefined;\n  return (...args) => {\n    if (lastArgs && args.length === lastArgs.length && args.every((arg, i) => arg === lastArgs[i])) {\n      return lastValue;\n    }\n\n    lastArgs = args;\n    lastValue = fn(...args);\n    return lastValue;\n  };\n};\n\nexport default memoizeOne;","import { CircularLoader } from '@dhis2/ui';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport classes from './styles/LoadingMask.module.css';\n\nconst LoadingMask = ({\n  style\n}) => {\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.center,\n    style: style\n  }, /*#__PURE__*/React.createElement(CircularLoader, null));\n};\n\nLoadingMask.propTypes = {\n  style: PropTypes.object\n};\nexport default LoadingMask;","import { useConfig } from '@dhis2/app-runtime';\nimport i18n from '@dhis2/d2-i18n';\nimport { colors } from '@dhis2/ui';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport { isPrintMode } from '../../../../modules/dashboardModes';\nimport { getVisualizationId } from '../../../../modules/item';\nimport { getAppName, itemTypeMap } from '../../../../modules/itemTypes';\nimport classes from './styles/VisualizationErrorMessage.module.css';\n\nconst getErrorIcon = () => /*#__PURE__*/React.createElement(\"svg\", {\n  height: \"96\",\n  viewBox: \"0 0 96 96\",\n  width: \"96\",\n  xmlns: \"http://www.w3.org/2000/svg\"\n}, /*#__PURE__*/React.createElement(\"g\", {\n  fill: colors.grey400,\n  transform: \"translate(3 3)\"\n}, /*#__PURE__*/React.createElement(\"path\", {\n  d: \"m40.5 73.5000001c0 2.4852813 2.0147186 4.5 4.5 4.5s4.5-2.0147187 4.5-4.5c0-2.4142734-1.9012365-4.3844892-4.2881643-4.4951021l-.2128322-.0048979c-2.4848234.0005384-4.4990035 2.0150507-4.4990035 4.5z\"\n}), /*#__PURE__*/React.createElement(\"path\", {\n  d: \"m48 60v-30c0-1.6568542-1.3431458-3-3-3s-3 1.3431458-3 3v30c0 1.6568542 1.3431458 3 3 3s3-1.3431458 3-3z\"\n}), /*#__PURE__*/React.createElement(\"path\", {\n  d: \"m45-2.99904788c3.8985931 0 7.4578604 2.21715778 9.1770339 5.71709169l37.8912554 77.19048409c1.3845546 2.8165473 1.2171646 6.1482722-.4427191 8.811863-1.6598833 2.6635901-4.5771005 4.2816904-7.7135702 4.2796124h-77.82201115c-3.13845856.002078-6.05567574-1.6160223-7.71555901-4.2796124-1.65988369-2.6635908-1.82727377-5.9953157-.44346379-8.8103471l37.89234295-77.19269833c1.7188306-3.49923557 5.2780979-5.71639335 9.176691-5.71639335zm0 6c-1.6106864 0-3.0811818.91600885-3.7909661 2.36100407l-37.89274459 77.19351591c-.47005356.9562122-.41322496 2.0873262.15030227 2.99161.56352731.9042839 1.5539177 1.4529206 2.62140842 1.4529206h77.8259889c1.0655018 0 2.0558922-.5486367 2.6194195-1.4529206.5635272-.9042838.6203558-2.0353978.1495577-2.9931259l-37.8916571-77.19130167c-.7101272-1.44569356-2.1806226-2.36170241-3.791309-2.36170241z\"\n})));\n\nconst VisualizationErrorMessage = ({\n  item,\n  dashboardMode\n}) => {\n  const {\n    baseUrl\n  } = useConfig();\n  const visHref = `${baseUrl}/${itemTypeMap[item.type].appUrl(getVisualizationId(item))}`;\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.center\n  }, getErrorIcon(), /*#__PURE__*/React.createElement(\"p\", {\n    className: classes.errorMessage\n  }, i18n.t('There was an error loading data for this item')), !isPrintMode(dashboardMode) ? /*#__PURE__*/React.createElement(\"p\", {\n    className: classes.appLink\n  }, /*#__PURE__*/React.createElement(\"a\", {\n    onClick: e => e.stopPropagation(),\n    target: \"_blank\",\n    rel: \"noopener noreferrer\",\n    href: visHref\n  }, i18n.t('Open this item in {{appName}}', {\n    appName: getAppName(item.type)\n  }))) : null);\n};\n\nVisualizationErrorMessage.propTypes = {\n  dashboardMode: PropTypes.string,\n  item: PropTypes.object\n};\nexport default VisualizationErrorMessage;","import PropTypes from 'prop-types';\nimport React, { Suspense, useState, useEffect, useCallback } from 'react';\nimport { useUserSettings } from '../../../UserSettingsProvider';\nimport LoadingMask from './LoadingMask';\nimport classes from './styles/DataVisualizerPlugin.module.css';\nimport VisualizationErrorMessage from './VisualizationErrorMessage';\nconst VisualizationPlugin = /*#__PURE__*/React.lazy(() => import(\n/* webpackChunkName: \"data-visualizer-plugin\" */\n\n/* webpackPrefetch: true */\n'@dhis2/data-visualizer-plugin'));\n\nconst DataVisualizerPlugin = ({\n  filterVersion,\n  item,\n  style,\n  visualization,\n  dashboardMode\n}) => {\n  const {\n    userSettings\n  } = useUserSettings();\n  const [visualizationLoaded, setVisualizationLoaded] = useState(false);\n  const [error, setError] = useState(false);\n  const onLoadingComplete = useCallback(() => setVisualizationLoaded(true), []);\n\n  const onError = () => setError(true);\n\n  useEffect(() => {\n    setError(false);\n  }, [filterVersion, visualization.type]);\n\n  if (error) {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      style: style\n    }, /*#__PURE__*/React.createElement(VisualizationErrorMessage, {\n      item: item,\n      dashboardMode: dashboardMode\n    }));\n  }\n\n  return /*#__PURE__*/React.createElement(Suspense, {\n    fallback: /*#__PURE__*/React.createElement(\"div\", null)\n  }, !visualizationLoaded && /*#__PURE__*/React.createElement(LoadingMask, {\n    style: style\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.wrapper\n  }, /*#__PURE__*/React.createElement(VisualizationPlugin, {\n    visualization: visualization,\n    forDashboard: true,\n    userSettings: userSettings,\n    style: style,\n    onLoadingComplete: onLoadingComplete,\n    onError: onError\n  })));\n};\n\nDataVisualizerPlugin.propTypes = {\n  dashboardMode: PropTypes.string,\n  filterVersion: PropTypes.string,\n  item: PropTypes.object,\n  style: PropTypes.object,\n  visualization: PropTypes.object\n};\nexport default DataVisualizerPlugin;","const getFilteredVisualization = (visualization, filters) => {\n  if (!Object.keys(filters).length) {\n    return visualization;\n  } // deep clone objects in filters to avoid changing the visualization in the Redux store\n\n\n  const visRows = visualization.rows.map(obj => ({ ...obj\n  }));\n  const visColumns = visualization.columns.map(obj => ({ ...obj\n  }));\n  const visFilters = visualization.filters.map(obj => ({ ...obj\n  }));\n  Object.keys(filters).forEach(dimensionId => {\n    if (filters[dimensionId]) {\n      let dimensionFound = false;\n      [visRows, visColumns, visFilters].forEach(dimensionObjects => dimensionObjects.filter(obj => obj.dimension === dimensionId).forEach(obj => {\n        dimensionFound = true;\n        obj.items = filters[dimensionId];\n      })); // add dimension to filters if not already present elsewhere\n\n      if (!dimensionFound) {\n        visFilters.push({\n          dimension: dimensionId,\n          items: filters[dimensionId]\n        });\n      }\n    }\n  });\n  return { ...visualization,\n    rows: visRows,\n    columns: visColumns,\n    filters: visFilters\n  };\n};\n\nexport default getFilteredVisualization;","import { VIS_TYPE_COLUMN, VIS_TYPE_PIVOT_TABLE, getAdaptedUiLayoutByType } from '@dhis2/analytics';\nimport { REPORT_TABLE, CHART, MAP } from '../../../../modules/itemTypes';\nimport getThematicMapViews from '../getThematicMapViews';\n\nconst getWithoutId = object => ({ ...object,\n  id: undefined\n});\n\nconst getVisualizationConfig = (visualization, originalType, activeType) => {\n  if (originalType === MAP && originalType !== activeType) {\n    const thematicMapViews = getThematicMapViews(visualization);\n\n    if (thematicMapViews === undefined) {\n      return null;\n    }\n\n    return getWithoutId({ ...visualization,\n      ...thematicMapViews,\n      mapViews: undefined,\n      type: activeType === CHART ? VIS_TYPE_COLUMN : VIS_TYPE_PIVOT_TABLE\n    });\n  } else if (originalType === REPORT_TABLE && activeType === CHART) {\n    const layout = getAdaptedUiLayoutByType(visualization, VIS_TYPE_COLUMN);\n    return getWithoutId({ ...visualization,\n      ...layout,\n      type: VIS_TYPE_COLUMN\n    });\n  } else if (originalType === CHART && activeType === REPORT_TABLE) {\n    const layout = getAdaptedUiLayoutByType(visualization, VIS_TYPE_PIVOT_TABLE);\n    return getWithoutId({ ...visualization,\n      ...layout,\n      type: VIS_TYPE_PIVOT_TABLE\n    });\n  }\n\n  return getWithoutId(visualization);\n};\n\nexport default getVisualizationConfig;","import { useConfig } from '@dhis2/app-runtime';\nimport { useD2 } from '@dhis2/app-runtime-adapter-d2';\nimport PropTypes from 'prop-types';\nimport React, { useEffect, useRef } from 'react';\nimport getVisualizationContainerDomId from '../getVisualizationContainerDomId';\nimport { load } from './plugin';\n\nconst DefaultPlugin = ({\n  item,\n  activeType,\n  filterVersion,\n  visualization,\n  options,\n  style\n}) => {\n  const {\n    d2\n  } = useD2();\n  const {\n    baseUrl\n  } = useConfig();\n  const credentials = {\n    baseUrl,\n    auth: d2.Api.getApi().defaultHeaders.Authorization\n  };\n  const prevItem = useRef();\n  const prevActiveType = useRef();\n  const prevFilterVersion = useRef();\n  useEffect(() => {\n    load(item, visualization, {\n      credentials,\n      activeType,\n      options\n    });\n    prevItem.current = item;\n    prevActiveType.current = activeType;\n    prevFilterVersion.current = filterVersion;\n  }, []);\n  useEffect(() => {\n    if (prevItem.current === item && (prevActiveType.current !== activeType || prevFilterVersion.current !== filterVersion)) {\n      /* Item is the same but type or filters has changed\n       * so necessary to reload\n       */\n      load(item, visualization, {\n        credentials,\n        activeType,\n        options\n      });\n    }\n\n    prevItem.current = item;\n    prevActiveType.current = activeType;\n    prevFilterVersion.current = filterVersion;\n  }, [item, visualization, activeType, filterVersion]);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    id: getVisualizationContainerDomId(item.id),\n    style: style\n  });\n};\n\nDefaultPlugin.propTypes = {\n  activeType: PropTypes.string,\n  filterVersion: PropTypes.string,\n  item: PropTypes.object,\n  options: PropTypes.object,\n  style: PropTypes.object,\n  visualization: PropTypes.object\n};\nDefaultPlugin.defaultProps = {\n  style: {},\n  item: {},\n  options: {},\n  visualization: {}\n};\nexport default DefaultPlugin;","import PropTypes from 'prop-types';\nimport React, { useEffect } from 'react';\nimport getVisualizationContainerDomId from '../getVisualizationContainerDomId';\nimport DefaultPlugin from './DefaultPlugin';\n\nconst LegacyPlugin = ({\n  availableHeight,\n  availableWidth,\n  gridWidth,\n  ...props\n}) => {\n  useEffect(() => {\n    const el = document.querySelector(`#${getVisualizationContainerDomId(props.item.id)}`);\n\n    if (typeof (el === null || el === void 0 ? void 0 : el.setViewportSize) === 'function') {\n      setTimeout(() => el.setViewportSize(el.clientWidth - 5, el.clientHeight - 5), 10);\n    }\n  }, [availableHeight, availableWidth, gridWidth]);\n  return /*#__PURE__*/React.createElement(DefaultPlugin, props);\n};\n\nLegacyPlugin.propTypes = {\n  activeType: PropTypes.string,\n  availableHeight: PropTypes.number,\n  availableWidth: PropTypes.number,\n  gridWidth: PropTypes.number,\n  isFullscreen: PropTypes.bool,\n  item: PropTypes.object\n};\nexport default LegacyPlugin;","import PropTypes from 'prop-types';\nimport React from 'react';\nimport classes from './styles/NoVisualizationMessage.module.css';\n\nconst NoVisualizationMessage = ({\n  message\n}) => {\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.message\n  }, message);\n};\n\nNoVisualizationMessage.propTypes = {\n  message: PropTypes.string\n};\nexport default NoVisualizationMessage;","function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nimport i18n from '@dhis2/d2-i18n';\nimport PropTypes from 'prop-types';\nimport React, { useEffect } from 'react';\nimport { MAP } from '../../../../modules/itemTypes';\nimport getVisualizationContainerDomId from '../getVisualizationContainerDomId';\nimport { isElementFullscreen } from '../isElementFullscreen';\nimport DefaultPlugin from './DefaultPlugin';\nimport NoVisualizationMessage from './NoVisualizationMessage';\nimport { pluginIsAvailable, getPlugin, unmount } from './plugin';\n\nconst MapPlugin = ({\n  visualization,\n  applyFilters,\n  availableHeight,\n  availableWidth,\n  gridWidth,\n  itemFilters,\n  ...props\n}) => {\n  useEffect(() => {\n    const resizeMap = async (id, isFullscreen) => {\n      const plugin = await getPlugin(MAP);\n      (plugin === null || plugin === void 0 ? void 0 : plugin.resize) && plugin.resize(getVisualizationContainerDomId(id), isFullscreen);\n    };\n\n    resizeMap(props.item.id, isElementFullscreen(props.item.id));\n  }, [availableHeight, availableWidth, gridWidth]); // The function returned from this effect is run when this component unmounts\n\n  useEffect(() => () => unmount(props.item, MAP), []);\n\n  const getVisualization = () => {\n    if (props.item.type === MAP) {\n      // apply filters only to thematic and event layers\n      // for maps AO\n      const mapViews = visualization.mapViews.map(mapView => {\n        if (mapView.layer.includes('thematic') || mapView.layer.includes('event')) {\n          return applyFilters(mapView, itemFilters);\n        }\n\n        return mapView;\n      });\n      return { ...visualization,\n        mapViews\n      };\n    } else {\n      // this is the case of a non map AO passed to the maps plugin\n      // due to a visualization type switch in dashboard item\n      // maps plugin takes care of converting the AO to a suitable format\n      return applyFilters(visualization, itemFilters);\n    }\n  };\n\n  return pluginIsAvailable(MAP) ? /*#__PURE__*/React.createElement(DefaultPlugin, _extends({\n    options: {\n      hideTitle: true\n    }\n  }, props, {\n    visualization: getVisualization()\n  })) : /*#__PURE__*/React.createElement(NoVisualizationMessage, {\n    message: i18n.t('Unable to load the plugin for this item')\n  });\n};\n\nMapPlugin.propTypes = {\n  applyFilters: PropTypes.func,\n  availableHeight: PropTypes.number,\n  availableWidth: PropTypes.number,\n  gridWidth: PropTypes.number,\n  isFullscreen: PropTypes.bool,\n  item: PropTypes.object,\n  itemFilters: PropTypes.object,\n  visualization: PropTypes.object\n};\nexport default MapPlugin;","function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nimport i18n from '@dhis2/d2-i18n';\nimport uniqueId from 'lodash/uniqueId';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport { isEditMode } from '../../../../modules/dashboardModes';\nimport { getVisualizationId } from '../../../../modules/item';\nimport { VISUALIZATION, MAP, CHART, REPORT_TABLE } from '../../../../modules/itemTypes';\nimport { sGetItemFiltersRoot, DEFAULT_STATE_ITEM_FILTERS } from '../../../../reducers/itemFilters';\nimport { sGetVisualization } from '../../../../reducers/visualizations';\nimport memoizeOne from '../memoizeOne';\nimport DataVisualizerPlugin from './DataVisualizerPlugin';\nimport getFilteredVisualization from './getFilteredVisualization';\nimport getVisualizationConfig from './getVisualizationConfig';\nimport LegacyPlugin from './LegacyPlugin';\nimport MapPlugin from './MapPlugin';\nimport NoVisualizationMessage from './NoVisualizationMessage';\nimport { pluginIsAvailable } from './plugin';\n\nclass Visualization extends React.Component {\n  constructor(props) {\n    super(props);\n    this.memoizedGetFilteredVisualization = memoizeOne(getFilteredVisualization);\n    this.memoizedGetVisualizationConfig = memoizeOne(getVisualizationConfig);\n    this.getFilterVersion = memoizeOne(() => uniqueId());\n  }\n\n  render() {\n    const {\n      visualization,\n      activeType,\n      item,\n      itemFilters,\n      ...rest\n    } = this.props;\n\n    if (!visualization) {\n      return /*#__PURE__*/React.createElement(NoVisualizationMessage, {\n        message: i18n.t('No data to display')\n      });\n    }\n\n    const style = {\n      height: this.props.availableHeight\n    };\n\n    if (this.props.availableWidth) {\n      style.width = this.props.availableWidth;\n    }\n\n    const visualizationConfig = this.memoizedGetVisualizationConfig(visualization, item.type, activeType);\n    const filterVersion = this.getFilterVersion(itemFilters);\n\n    switch (activeType) {\n      case VISUALIZATION:\n      case CHART:\n      case REPORT_TABLE:\n        {\n          return /*#__PURE__*/React.createElement(DataVisualizerPlugin, {\n            visualization: this.memoizedGetFilteredVisualization(visualizationConfig, itemFilters),\n            style: style,\n            filterVersion: filterVersion,\n            item: item,\n            dashboardMode: this.props.dashboardMode\n          });\n        }\n\n      case MAP:\n        {\n          return /*#__PURE__*/React.createElement(MapPlugin, _extends({\n            item: item,\n            activeType: activeType,\n            visualization: visualizationConfig,\n            itemFilters: itemFilters,\n            applyFilters: this.memoizedGetFilteredVisualization,\n            filterVersion: filterVersion,\n            style: style\n          }, rest));\n        }\n\n      default:\n        {\n          return pluginIsAvailable(activeType || item.type) ? /*#__PURE__*/React.createElement(LegacyPlugin, _extends({\n            item: item,\n            activeType: activeType,\n            visualization: this.memoizedGetFilteredVisualization(visualizationConfig, itemFilters),\n            filterVersion: filterVersion,\n            style: style\n          }, rest)) : /*#__PURE__*/React.createElement(NoVisualizationMessage, {\n            message: i18n.t('Unable to load the plugin for this item')\n          });\n        }\n    }\n  }\n\n}\n\nVisualization.propTypes = {\n  activeType: PropTypes.string,\n  availableHeight: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n  availableWidth: PropTypes.number,\n  dashboardMode: PropTypes.string,\n  item: PropTypes.object,\n  itemFilters: PropTypes.object,\n  visualization: PropTypes.object\n};\n\nconst mapStateToProps = (state, ownProps) => {\n  const itemFilters = !isEditMode(ownProps.dashboardMode) ? sGetItemFiltersRoot(state) : DEFAULT_STATE_ITEM_FILTERS;\n  return {\n    itemFilters,\n    visualization: sGetVisualization(state, getVisualizationId(ownProps.item))\n  };\n};\n\nexport default connect(mapStateToProps)(Visualization);","function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport i18n from '@dhis2/d2-i18n';\nimport isEmpty from 'lodash/isEmpty';\nimport PropTypes from 'prop-types';\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { acSetItemActiveType } from '../../../actions/itemActiveTypes';\nimport { acAddVisualization } from '../../../actions/visualizations';\nimport { apiPostDataStatistics } from '../../../api/dataStatistics';\nimport { apiFetchVisualization } from '../../../api/fetchVisualization';\nimport { isEditMode, isPrintMode, isViewMode } from '../../../modules/dashboardModes';\nimport { getItemHeightPx } from '../../../modules/gridUtil';\nimport { getVisualizationId, getVisualizationName } from '../../../modules/item';\nimport { getDataStatisticsName } from '../../../modules/itemTypes';\nimport { sGetIsEditing } from '../../../reducers/editDashboard';\nimport { sGetItemActiveType } from '../../../reducers/itemActiveTypes';\nimport { sGetItemFiltersRoot, DEFAULT_STATE_ITEM_FILTERS } from '../../../reducers/itemFilters';\nimport { sGetVisualization } from '../../../reducers/visualizations';\nimport { SystemSettingsCtx } from '../../SystemSettingsProvider';\nimport { WindowDimensionsCtx } from '../../WindowDimensionsProvider';\nimport ItemHeader from '../ItemHeader/ItemHeader';\nimport FatalErrorBoundary from './FatalErrorBoundary';\nimport { getGridItemElement } from './getGridItemElement';\nimport { isElementFullscreen } from './isElementFullscreen';\nimport ItemContextMenu from './ItemContextMenu/ItemContextMenu';\nimport ItemFooter from './ItemFooter';\nimport memoizeOne from './memoizeOne';\nimport { pluginIsAvailable } from './Visualization/plugin';\nimport Visualization from './Visualization/Visualization';\n\nclass Item extends Component {\n  constructor(props) {\n    super(props);\n\n    _defineProperty(this, \"state\", {\n      showFooter: false,\n      configLoaded: false,\n      loadItemFailed: false\n    });\n\n    _defineProperty(this, \"isFullscreenSupported\", () => {\n      const el = getGridItemElement(this.props.item.id);\n      return !!(el !== null && el !== void 0 && el.requestFullscreen || el !== null && el !== void 0 && el.webkitRequestFullscreen);\n    });\n\n    _defineProperty(this, \"onToggleFullscreen\", () => {\n      if (!isElementFullscreen(this.props.item.id)) {\n        const el = getGridItemElement(this.props.item.id);\n\n        if (el !== null && el !== void 0 && el.requestFullscreen) {\n          el.requestFullscreen();\n        } else if (el !== null && el !== void 0 && el.webkitRequestFullscreen) {\n          el.webkitRequestFullscreen();\n        }\n      } else {\n        document.exitFullscreen ? document.exitFullscreen() : document.webkitExitFullscreen();\n      }\n    });\n\n    _defineProperty(this, \"onToggleFooter\", () => {\n      this.setState({\n        showFooter: !this.state.showFooter\n      }, this.props.onToggleItemExpanded(this.props.item.id));\n    });\n\n    _defineProperty(this, \"setActiveType\", type => {\n      type !== this.getActiveType() && this.props.setActiveType(this.props.item.id, type);\n    });\n\n    _defineProperty(this, \"getActiveType\", () => {\n      if (this.props.isEditing) {\n        return this.props.item.type;\n      }\n\n      return this.props.activeType || this.props.item.type;\n    });\n\n    _defineProperty(this, \"getAvailableHeight\", ({\n      width,\n      height\n    }) => {\n      if (isElementFullscreen(this.props.item.id)) {\n        return height - this.headerRef.current.clientHeight - this.itemHeaderTotalMargin - this.itemContentPadding;\n      }\n\n      const calculatedHeight = getItemHeightPx(this.props.item, width) - this.headerRef.current.clientHeight - this.itemHeaderTotalMargin - this.itemContentPadding;\n      return this.memoizedGetContentHeight(calculatedHeight, this.contentRef ? this.contentRef.offsetHeight : null, isEditMode(this.props.dashboardMode) || isPrintMode(this.props.dashboardMode));\n    });\n\n    _defineProperty(this, \"getAvailableWidth\", () => {\n      var _getGridItemElement;\n\n      const rect = (_getGridItemElement = getGridItemElement(this.props.item.id)) === null || _getGridItemElement === void 0 ? void 0 : _getGridItemElement.getBoundingClientRect();\n      return rect && rect.width - this.itemContentPadding * 2;\n    });\n\n    _defineProperty(this, \"onFatalError\", () => {\n      this.setState({\n        loadItemFailed: true\n      });\n    });\n\n    this.contentRef = /*#__PURE__*/React.createRef();\n    this.headerRef = /*#__PURE__*/React.createRef();\n    const style = window.getComputedStyle(document.documentElement);\n    this.itemContentPadding = parseInt(style.getPropertyValue('--item-content-padding').replace('px', ''));\n    this.itemHeaderTotalMargin = parseInt(style.getPropertyValue('--item-header-margin-top').replace('px', '')) + parseInt(style.getPropertyValue('--item-header-margin-bottom').replace('px', ''));\n    this.memoizedGetContentHeight = memoizeOne((calculatedHeight, measuredHeight, preferMeasured) => preferMeasured ? measuredHeight || calculatedHeight : calculatedHeight);\n  }\n\n  async componentDidMount() {\n    if (isEmpty(this.props.visualization)) {\n      this.props.setVisualization(await apiFetchVisualization(this.props.item));\n    }\n\n    try {\n      if (this.props.settings.keyGatherAnalyticalObjectStatisticsInDashboardViews && isViewMode(this.props.dashboardMode)) {\n        await apiPostDataStatistics(getDataStatisticsName(this.props.item.type), getVisualizationId(this.props.item));\n      }\n    } catch (e) {\n      console.log(e);\n    }\n\n    this.setState({\n      configLoaded: true\n    });\n  }\n\n  render() {\n    const {\n      item,\n      dashboardMode,\n      itemFilters\n    } = this.props;\n    const {\n      showFooter\n    } = this.state;\n    const activeType = this.getActiveType();\n    const actionButtons = pluginIsAvailable(activeType || item.type) && isViewMode(dashboardMode) ? /*#__PURE__*/React.createElement(ItemContextMenu, {\n      item: item,\n      visualization: this.props.visualization,\n      onSelectActiveType: this.setActiveType,\n      onToggleFooter: this.onToggleFooter,\n      onToggleFullscreen: this.onToggleFullscreen,\n      activeType: activeType,\n      activeFooter: showFooter,\n      fullscreenSupported: this.isFullscreenSupported(),\n      loadItemFailed: this.state.loadItemFailed\n    }) : null;\n    return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(ItemHeader, {\n      title: getVisualizationName(item),\n      itemId: item.id,\n      actionButtons: actionButtons,\n      ref: this.headerRef,\n      dashboardMode: dashboardMode,\n      isShortened: item.shortened\n    }), /*#__PURE__*/React.createElement(FatalErrorBoundary, {\n      message: i18n.t('There was a problem loading this dashboard item'),\n      onFatalError: this.onFatalError\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"dashboard-item-content\",\n      ref: ref => this.contentRef = ref\n    }, this.state.configLoaded && /*#__PURE__*/React.createElement(WindowDimensionsCtx.Consumer, null, dimensions => /*#__PURE__*/React.createElement(Visualization, {\n      item: item,\n      activeType: activeType,\n      itemFilters: itemFilters,\n      availableHeight: this.getAvailableHeight(dimensions),\n      availableWidth: this.getAvailableWidth(),\n      gridWidth: this.props.gridWidth,\n      dashboardMode: dashboardMode\n    })))), isViewMode(dashboardMode) && showFooter ? /*#__PURE__*/React.createElement(ItemFooter, {\n      item: item\n    }) : null);\n  }\n\n}\n\nItem.propTypes = {\n  activeType: PropTypes.string,\n  dashboardMode: PropTypes.string,\n  gridWidth: PropTypes.number,\n  isEditing: PropTypes.bool,\n  item: PropTypes.object,\n  itemFilters: PropTypes.object,\n  setActiveType: PropTypes.func,\n  setVisualization: PropTypes.func,\n  settings: PropTypes.object,\n  visualization: PropTypes.object,\n  onToggleItemExpanded: PropTypes.func\n};\nItem.defaultProps = {\n  item: {},\n  onToggleItemExpanded: Function.prototype,\n  visualization: {}\n};\n\nconst mapStateToProps = (state, ownProps) => {\n  var _ownProps$item;\n\n  const itemFilters = !isEditMode(ownProps.dashboardMode) ? sGetItemFiltersRoot(state) : DEFAULT_STATE_ITEM_FILTERS;\n  return {\n    activeType: sGetItemActiveType(state, (_ownProps$item = ownProps.item) === null || _ownProps$item === void 0 ? void 0 : _ownProps$item.id),\n    isEditing: sGetIsEditing(state),\n    itemFilters,\n    visualization: sGetVisualization(state, getVisualizationId(ownProps.item))\n  };\n};\n\nconst mapDispatchToProps = {\n  setActiveType: acSetItemActiveType,\n  setVisualization: acAddVisualization\n};\n\nconst ItemWithSettings = props => /*#__PURE__*/React.createElement(SystemSettingsCtx.Consumer, null, ({\n  settings\n}) => /*#__PURE__*/React.createElement(Item, _extends({\n  settings: settings\n}, props)));\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ItemWithSettings);","import { SET_ITEM_ACTIVE_TYPE, CLEAR_ITEM_ACTIVE_TYPES } from '../reducers/itemActiveTypes';\nexport const acSetItemActiveType = (id, activeType) => {\n  const action = {\n    type: SET_ITEM_ACTIVE_TYPE,\n    id,\n    activeType\n  };\n  return action;\n};\nexport const acClearItemActiveTypes = () => ({\n  type: CLEAR_ITEM_ACTIVE_TYPES\n});","import { ADD_VISUALIZATION, CLEAR_VISUALIZATIONS } from '../reducers/visualizations';\nexport const acAddVisualization = value => ({\n  type: ADD_VISUALIZATION,\n  value\n});\nexport const acClearVisualizations = () => ({\n  type: CLEAR_VISUALIZATIONS\n});","import PropTypes from 'prop-types';\nimport React from 'react';\nimport { APP, VISUALIZATION, REPORT_TABLE, CHART, MAP, EVENT_CHART, EVENT_REPORT, MESSAGES, REPORTS, RESOURCES, USERS, TEXT, SPACER, PAGEBREAK, PRINT_TITLE_PAGE } from '../../modules/itemTypes';\nimport AppItem from './AppItem/Item';\nimport ListItem from './ListItem/Item';\nimport MessagesItem from './MessagesItem/Item';\nimport NotSupportedItem from './NotSupportedItem/Item';\nimport PageBreakItem from './PageBreakItem/Item';\nimport PrintTitlePageItem from './PrintTitlePageItem/Item';\nimport SpacerItem from './SpacerItem/Item';\nimport TextItem from './TextItem/Item';\nimport VisualizationItem from './VisualizationItem/Item';\n\nconst getGridItem = type => {\n  switch (type) {\n    case VISUALIZATION:\n    case REPORT_TABLE:\n    case CHART:\n    case MAP:\n    case EVENT_CHART:\n    case EVENT_REPORT:\n      return VisualizationItem;\n\n    case MESSAGES:\n      return MessagesItem;\n\n    case REPORTS:\n    case RESOURCES:\n    case USERS:\n      return ListItem;\n\n    case TEXT:\n      return TextItem;\n\n    case SPACER:\n      return SpacerItem;\n\n    case APP:\n      return AppItem;\n\n    case PAGEBREAK:\n      return PageBreakItem;\n\n    case PRINT_TITLE_PAGE:\n      return PrintTitlePageItem;\n\n    default:\n      return NotSupportedItem;\n  }\n};\n\nexport const Item = props => {\n  const GridItem = getGridItem(props.item.type);\n  return /*#__PURE__*/React.createElement(GridItem, props);\n};\nItem.propTypes = {\n  item: PropTypes.object\n};","import sortBy from 'lodash/sortBy';\nimport { itemTypeMap } from '../../modules/itemTypes';\nimport { orArray } from '../../modules/util';\nexport const getTransformYPx = elStyle => {\n  var _elStyle$transform$sp;\n\n  if (!elStyle || !elStyle.transform) {\n    return null;\n  } // find valid transforms - those with y pixels\n  // the code is expecting the transform prop to\n  // look like:  translate(10px, 300px)\n\n\n  const transformY = (_elStyle$transform$sp = elStyle.transform.split(' ')[1]) === null || _elStyle$transform$sp === void 0 ? void 0 : _elStyle$transform$sp.match(/(\\d+)px/);\n\n  if (transformY) {\n    return parseInt(transformY[1]);\n  } else {\n    return null;\n  }\n};\nexport const getDomGridItemsSortedByYPos = elements => {\n  const types = Object.keys(itemTypeMap);\n  const elementsWithBoundingRect = orArray(elements).map(el => {\n    const type = Array.from(el.classList).find(className => types.indexOf(className) > -1);\n    const rect = el.getBoundingClientRect();\n    const y = getTransformYPx(el.style) || parseInt(rect.y);\n    return {\n      type,\n      classList: el.classList,\n      bottomY: y + parseInt(rect.height),\n      el\n    };\n  });\n  return sortBy(elementsWithBoundingRect, ['bottomY']);\n};\n\nconst isLeapPage = n => {\n  // pages 5,9,13,17,21,25,29... are leap pages\n  let x = 0;\n  const startPage = 1;\n\n  const getMultiple = factor => startPage + 4 * factor;\n\n  let multiple = getMultiple(0);\n  let isLeapPage = false;\n\n  while (multiple < n) {\n    multiple = getMultiple(x);\n    ++x;\n\n    if (multiple === n) {\n      isLeapPage = true;\n      break;\n    }\n  }\n\n  return isLeapPage;\n};\n\nexport const getPageBreakPositions = items => {\n  // add enough page breaks so that each item could\n  // be put on its own page. Due to the react-grid-layout\n  // unit system, we have to estimate roughly the size of each\n  // page. At regular intervals add a unit, like a leap year\n  const yPosList = [];\n  let yPos = 0;\n\n  for (let pageNum = 1; pageNum <= items.length; ++pageNum) {\n    if (pageNum === 1) {\n      yPos += 35;\n    } else if (isLeapPage(pageNum)) {\n      yPos += 40;\n    } else {\n      yPos += 39;\n    }\n\n    yPosList.push(yPos);\n  }\n\n  return yPosList;\n};","import i18n from '@dhis2/d2-i18n';\nimport cx from 'classnames';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport ReactGridLayout from 'react-grid-layout';\nimport NoContentMessage from '../../components/NoContentMessage';\nimport { GRID_ROW_HEIGHT_PX, GRID_COMPACT_TYPE, MARGIN_PX, GRID_COLUMNS } from '../../modules/gridUtil';\nconst PAGE_PADDING_PX = 24;\n\nconst StaticGrid = ({\n  layout,\n  children,\n  onLayoutChange,\n  className\n}) => {\n  if (!layout.length) {\n    return /*#__PURE__*/React.createElement(NoContentMessage, {\n      text: i18n.t('There are no items on this dashboard')\n    });\n  }\n\n  const style = window.getComputedStyle(document.documentElement);\n  const pageWidthPx = parseInt(style.getPropertyValue('--a4-landscape-width-px').replace('px', ''));\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(ReactGridLayout, {\n    margin: MARGIN_PX,\n    cols: GRID_COLUMNS,\n    rowHeight: GRID_ROW_HEIGHT_PX,\n    width: pageWidthPx - PAGE_PADDING_PX,\n    compactType: GRID_COMPACT_TYPE,\n    isDraggable: false,\n    isResizable: false,\n    draggableCancel: \"input,textarea\",\n    className: cx('layout', className),\n    layout: layout,\n    onLayoutChange: onLayoutChange\n  }, children));\n};\n\nStaticGrid.defaultProps = {\n  onLayoutChange: Function.prototype\n};\nStaticGrid.propTypes = {\n  children: PropTypes.node,\n  className: PropTypes.string,\n  layout: PropTypes.array,\n  onLayoutChange: PropTypes.func\n};\nexport default StaticGrid;","function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport cx from 'classnames';\nimport sortBy from 'lodash/sortBy';\nimport PropTypes from 'prop-types';\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { acUpdatePrintDashboardLayout } from '../../actions/printDashboard';\nimport { Item } from '../../components/Item/Item';\nimport { PRINT_LAYOUT } from '../../modules/dashboardModes';\nimport { hasShape } from '../../modules/gridUtil';\nimport { PAGEBREAK } from '../../modules/itemTypes';\nimport { sGetIsEditing } from '../../reducers/editDashboard';\nimport { sGetPrintDashboardItems } from '../../reducers/printDashboard';\nimport { getDomGridItemsSortedByYPos, getTransformYPx } from './printUtils';\nimport StaticGrid from './StaticGrid';\n\nclass PrintLayoutItemGrid extends Component {\n  constructor(...args) {\n    super(...args);\n\n    _defineProperty(this, \"onLayoutChange\", newLayout => {\n      this.props.updateDashboardLayout(newLayout);\n    });\n\n    _defineProperty(this, \"isFirstPageBreak\", item => {\n      if (item.type !== PAGEBREAK) {\n        return false;\n      }\n\n      const pageBreaks = this.props.dashboardItems.filter(i => i.type === PAGEBREAK);\n      const sortedPageBreaks = sortBy(pageBreaks, ['y']);\n      return item.y === sortedPageBreaks[0].y;\n    });\n\n    _defineProperty(this, \"getItemComponent\", item => {\n      // the first-page-break class is used in Edit print preview\n      const itemClassNames = cx('print', 'layout', `${item.type}`, {\n        'first-page-break': this.props.isEditing && this.isFirstPageBreak(item),\n        shortened: !!item.shortened\n      });\n      return /*#__PURE__*/React.createElement(\"div\", {\n        key: item.i,\n        className: itemClassNames,\n        \"data-test\": `dashboarditem-${item.id}`\n      }, /*#__PURE__*/React.createElement(Item, {\n        item: item,\n        dashboardMode: PRINT_LAYOUT\n      }));\n    });\n\n    _defineProperty(this, \"getItemComponents\", items => items.map(item => this.getItemComponent(item)));\n  }\n\n  hideExtraPageBreaks() {\n    const sortedElements = getDomGridItemsSortedByYPos(Array.from(document.querySelectorAll('.react-grid-item')));\n    let pageBreakBottom = 0;\n    let lastItemBottom = 0;\n    let foundNonPageBreak = false;\n\n    for (let i = sortedElements.length - 1; i >= 0; --i) {\n      const item = sortedElements[i];\n\n      if (item.type === PAGEBREAK) {\n        if (!foundNonPageBreak) {\n          item.el.classList.add('removed');\n        } else {\n          pageBreakBottom = item.bottomY;\n          break;\n        }\n      } else {\n        foundNonPageBreak = true;\n        const thisItemBottom = item.bottomY;\n\n        if (thisItemBottom > lastItemBottom) {\n          lastItemBottom = thisItemBottom;\n        }\n      }\n    }\n\n    const pageHeight = 720;\n    const gridElement = document.querySelector('.react-grid-layout'); // the last page break is before the last item(s) so\n    // maxHeight is one page beyond the last page break\n\n    const maxHeight = pageBreakBottom + pageHeight;\n\n    if (gridElement) {\n      gridElement.style.height = `${maxHeight}px`;\n    }\n\n    if (this.props.isEditing) {\n      //scroll to below the title page - which is middle of the first pagebreak\n      const firstBreak = document.querySelector('.first-page-break');\n\n      if (firstBreak && firstBreak.style && firstBreak.style.transform) {\n        const yPos = getTransformYPx(firstBreak.style);\n        const scrollArea = document.querySelector('.scroll-area');\n        scrollArea && scrollArea.scroll(0, yPos + 50);\n      }\n    }\n  }\n\n  componentDidMount() {\n    this.hideExtraPageBreaks();\n  }\n\n  componentDidUpdate() {\n    this.hideExtraPageBreaks();\n  }\n\n  render() {\n    const {\n      dashboardItems\n    } = this.props;\n    return /*#__PURE__*/React.createElement(StaticGrid, {\n      layout: dashboardItems,\n      onLayoutChange: this.onLayoutChange\n    }, this.getItemComponents(dashboardItems));\n  }\n\n}\n\nPrintLayoutItemGrid.propTypes = {\n  dashboardItems: PropTypes.array,\n  isEditing: PropTypes.bool,\n  updateDashboardLayout: PropTypes.func\n};\n\nconst mapStateToProps = state => {\n  return {\n    dashboardItems: sGetPrintDashboardItems(state).filter(hasShape),\n    isEditing: sGetIsEditing(state)\n  };\n};\n\nexport default connect(mapStateToProps, {\n  updateDashboardLayout: acUpdatePrintDashboardLayout\n})(PrintLayoutItemGrid);","import { useDataEngine } from '@dhis2/app-runtime';\nimport { Layer, CenteredContent, CircularLoader } from '@dhis2/ui';\nimport cx from 'classnames';\nimport PropTypes from 'prop-types';\nimport React, { useState, useEffect } from 'react';\nimport { connect } from 'react-redux';\nimport { Redirect } from 'react-router-dom';\nimport { acSetPrintDashboard, acAddPrintDashboardItem, acUpdatePrintDashboardItem } from '../../actions/printDashboard';\nimport { apiFetchDashboard } from '../../api/fetchDashboard';\nimport { MAX_ITEM_GRID_HEIGHT } from '../../modules/gridUtil';\nimport { PAGEBREAK, PRINT_TITLE_PAGE } from '../../modules/itemTypes';\nimport { setHeaderbarVisible } from '../../modules/setHeaderbarVisible';\nimport { sGetEditDashboardRoot } from '../../reducers/editDashboard';\nimport PrintActionsBar from './ActionsBar';\nimport PrintInfo from './PrintInfo';\nimport PrintLayoutItemGrid from './PrintLayoutItemGrid';\nimport { getPageBreakPositions } from './printUtils';\nimport classes from './styles/PrintLayoutDashboard.module.css';\nimport './styles/print.css';\nimport './styles/print-layout.css';\n\nconst addPageBreaks = (items, addDashboardItem) => {\n  const yPosList = getPageBreakPositions(items);\n\n  for (let i = 0; i < items.length; ++i) {\n    addDashboardItem({\n      type: PAGEBREAK,\n      yPos: yPosList[i]\n    });\n  }\n};\n\nconst PrintLayoutDashboard = ({\n  dashboard,\n  id,\n  setPrintDashboard,\n  addDashboardItem,\n  updateDashboardItem,\n  fromEdit\n}) => {\n  const dataEngine = useDataEngine();\n  const [redirectUrl, setRedirectUrl] = useState(null);\n  const [isLoading, setIsLoading] = useState(true);\n\n  const customizePrintLayoutDashboard = dboard => {\n    // If any items are taller than one page, reduce it to one\n    // page (react-grid-layout units)\n    dboard.dashboardItems.forEach(item => {\n      if (item.h > MAX_ITEM_GRID_HEIGHT) {\n        item.shortened = true;\n        updateDashboardItem(Object.assign({}, item, {\n          h: MAX_ITEM_GRID_HEIGHT\n        }));\n      }\n    });\n    addPageBreaks(dboard.dashboardItems, addDashboardItem);\n    addDashboardItem({\n      type: PRINT_TITLE_PAGE,\n      isOneItemPerPage: false\n    });\n    setIsLoading(false);\n  };\n\n  useEffect(() => {\n    const loadDashboard = async () => {\n      try {\n        const dashboard = await apiFetchDashboard(dataEngine, id);\n        setPrintDashboard(dashboard);\n        customizePrintLayoutDashboard(dashboard);\n      } catch (error) {\n        setRedirectUrl(id);\n        setIsLoading(false);\n      }\n    };\n\n    setHeaderbarVisible(false);\n\n    if (!dashboard) {\n      loadDashboard();\n    } else {\n      setPrintDashboard(dashboard);\n      customizePrintLayoutDashboard(dashboard);\n    }\n  }, [dashboard]);\n\n  if (redirectUrl) {\n    return /*#__PURE__*/React.createElement(Redirect, {\n      to: redirectUrl\n    });\n  }\n\n  if (isLoading) {\n    return /*#__PURE__*/React.createElement(Layer, {\n      translucent: true\n    }, /*#__PURE__*/React.createElement(CenteredContent, null, /*#__PURE__*/React.createElement(CircularLoader, null)));\n  }\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.container\n  }, !fromEdit && /*#__PURE__*/React.createElement(PrintActionsBar, {\n    id: id\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: cx(classes.wrapper, 'scroll-area', fromEdit && classes.editView)\n  }, !fromEdit && /*#__PURE__*/React.createElement(PrintInfo, {\n    isLayout: true\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.pageOuter,\n    \"data-test\": \"print-layout-page\"\n  }, /*#__PURE__*/React.createElement(PrintLayoutItemGrid, null))));\n};\n\nPrintLayoutDashboard.propTypes = {\n  addDashboardItem: PropTypes.func,\n  dashboard: PropTypes.object,\n  fromEdit: PropTypes.bool,\n  id: PropTypes.string,\n  setPrintDashboard: PropTypes.func,\n  updateDashboardItem: PropTypes.func\n};\n\nconst mapStateToProps = (state, ownProps) => {\n  var _ownProps$match, _ownProps$match$param;\n\n  return {\n    dashboard: ownProps.fromEdit ? sGetEditDashboardRoot(state) : null,\n    id: ((_ownProps$match = ownProps.match) === null || _ownProps$match === void 0 ? void 0 : (_ownProps$match$param = _ownProps$match.params) === null || _ownProps$match$param === void 0 ? void 0 : _ownProps$match$param.dashboardId) || null\n  };\n};\n\nexport default connect(mapStateToProps, {\n  setPrintDashboard: acSetPrintDashboard,\n  addDashboardItem: acAddPrintDashboardItem,\n  updateDashboardItem: acUpdatePrintDashboardItem\n})(PrintLayoutDashboard);","export const messageConversationsQuery = {\n  resource: 'messageConversations',\n  params: {\n    fields: 'id,messageCount,lastUpdated,messageType,displayName,read,messages[id,read,sender[id,displayName],text,lastUpdated]',\n    order: 'read:asc',\n    pageSize: 200\n  }\n};\nexport const getMessages = async dataEngine => {\n  try {\n    const {\n      messageConversations\n    } = await dataEngine.query({\n      messageConversations: messageConversationsQuery\n    });\n    return messageConversations.messageConversations;\n  } catch (error) {\n    console.log('Error:', error);\n  }\n};","import { getMessages } from '../../../api/messages';\nimport { RECEIVED_MESSAGES } from '../../../reducers/messages';\n\nconst onError = (action, error) => {\n  console.log(`Error in action ${action}: ${error}`);\n  return error;\n};\n\nexport const receivedMessages = value => ({\n  type: RECEIVED_MESSAGES,\n  value\n});\nexport const tGetMessages = dataEngine => async dispatch => {\n  try {\n    const messageConversations = await getMessages(dataEngine);\n    return dispatch(receivedMessages(messageConversations));\n  } catch (err) {\n    return onError('Get Messages', err);\n  }\n};","import i18n from '@dhis2/d2-i18n';\nimport { Button, Modal, ModalContent, ModalActions, ButtonStrip, ModalTitle } from '@dhis2/ui';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport classes from './styles/ConfirmActionDialog.module.css';\nexport const ACTION_DELETE = 'delete';\nexport const ACTION_DISCARD = 'discard';\n\nconst ConfirmActionDialog = ({\n  action,\n  dashboardName,\n  onConfirm,\n  onCancel,\n  open\n}) => {\n  const texts = {\n    [ACTION_DELETE]: {\n      title: i18n.t('Delete dashboard'),\n      message: i18n.t('Deleting dashboard \"{{ dashboardName }}\" will remove it for all users. This action cannot be undone. Are you sure you want to permanently delete this dashboard?', {\n        dashboardName\n      }),\n      cancel: i18n.t('Cancel'),\n      confirm: i18n.t('Delete')\n    },\n    [ACTION_DISCARD]: {\n      title: i18n.t('Discard changes'),\n      message: i18n.t('This dashboard has unsaved changes. Are you sure you want to leave and discard these unsaved changes?'),\n      cancel: i18n.t('No, stay here'),\n      confirm: i18n.t('Yes, discard changes')\n    }\n  };\n  const actions = [/*#__PURE__*/React.createElement(Button, {\n    key: \"cancel\",\n    secondary: true,\n    onClick: onCancel\n  }, texts[action].cancel), /*#__PURE__*/React.createElement(Button, {\n    key: \"confirm\",\n    destructive: true,\n    onClick: onConfirm\n  }, texts[action].confirm)];\n  return open && /*#__PURE__*/React.createElement(Modal, {\n    dataTest: \"confirm-action-dialog\",\n    onClose: onCancel,\n    small: true,\n    position: \"middle\"\n  }, /*#__PURE__*/React.createElement(ModalTitle, null, texts[action].title), /*#__PURE__*/React.createElement(ModalContent, null, /*#__PURE__*/React.createElement(\"span\", {\n    className: classes.content\n  }, texts[action].message)), /*#__PURE__*/React.createElement(ModalActions, null, /*#__PURE__*/React.createElement(ButtonStrip, null, actions)));\n};\n\nConfirmActionDialog.propTypes = {\n  action: PropTypes.string,\n  dashboardName: PropTypes.string,\n  open: PropTypes.bool,\n  onCancel: PropTypes.func,\n  onConfirm: PropTypes.func\n};\nexport default ConfirmActionDialog;","export const deleteDashboardMutation = {\n  type: 'delete',\n  resource: 'dashboards',\n  id: ({\n    id\n  }) => id\n};","// filter out CATEGORY that are not of type ATTRIBUTE\nconst filteredDimensions = dimensions => dimensions.filter(dim => dim.dimensionType !== 'CATEGORY' || dim.dimensionType === 'CATEGORY' && dim.dataDimensionType === 'ATTRIBUTE');\n\nexport default filteredDimensions;","import { apiFetchDimensions } from '@dhis2/analytics';\nimport { useDataEngine } from '@dhis2/app-runtime';\nimport { useEffect } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { acSetDimensions } from '../actions/dimensions';\nimport { useUserSettings } from '../components/UserSettingsProvider';\nimport getFilteredDimensions from './getFilteredDimensions';\n\nconst useDimensions = doFetch => {\n  const dataEngine = useDataEngine();\n  const {\n    userSettings\n  } = useUserSettings();\n  const dimensions = useSelector(state => state.dimensions);\n  const dispatch = useDispatch();\n  useEffect(() => {\n    const fetchDimensions = async () => {\n      try {\n        const unfilteredDimensions = await apiFetchDimensions(dataEngine, userSettings.keyAnalysisDisplayProperty);\n        dispatch(acSetDimensions(getFilteredDimensions(unfilteredDimensions)));\n      } catch (e) {\n        console.error(e);\n      }\n    };\n\n    if (!dimensions.length && doFetch && userSettings.keyAnalysisDisplayProperty) {\n      fetchDimensions();\n    }\n  }, [dimensions, doFetch, userSettings.keyAnalysisDisplayProperty]);\n  return dimensions;\n};\n\nexport default useDimensions;","import { SET_DIMENSIONS } from '../reducers/dimensions';\nexport const acSetDimensions = dimensions => ({\n  type: SET_DIMENSIONS,\n  value: dimensions\n});","import { DIMENSION_ID_PERIOD, DIMENSION_ID_ORGUNIT } from '@dhis2/analytics';\nimport i18n from '@dhis2/d2-i18n';\nimport { Button, ButtonStrip, Modal, ModalActions, ModalContent, ModalTitle, Radio, Transfer } from '@dhis2/ui';\nimport PropTypes from 'prop-types';\nimport React, { useState } from 'react';\nimport useDimensions from '../../modules/useDimensions';\nimport classes from './styles/FilterSettingsDialog.module.css';\n\nconst RadioOptions = ({\n  filtersSelectable,\n  updateFilterDimensionRestrictability\n}) => /*#__PURE__*/React.createElement(\"form\", null, /*#__PURE__*/React.createElement(\"div\", {\n  className: classes.radioButton\n}, /*#__PURE__*/React.createElement(Radio, {\n  dense: true,\n  checked: !filtersSelectable,\n  label: i18n.t('Allow filtering by all dimensions'),\n  name: \"radio-allow-filtering-on-all\",\n  onChange: payload => {\n    return updateFilterDimensionRestrictability(payload.value === 'true');\n  },\n  value: 'false'\n})), /*#__PURE__*/React.createElement(\"div\", {\n  className: classes.radioButton\n}, /*#__PURE__*/React.createElement(Radio, {\n  dense: true,\n  checked: filtersSelectable,\n  label: i18n.t('Only allow filtering by selected dimensions'),\n  name: \"radio-restrict-filtering\",\n  onChange: payload => {\n    return updateFilterDimensionRestrictability(payload.value === 'true');\n  },\n  value: 'true'\n})));\n\nRadioOptions.propTypes = {\n  filtersSelectable: PropTypes.bool,\n  updateFilterDimensionRestrictability: PropTypes.func\n};\n\nconst FilterSettingsDialog = ({\n  restrictFilters,\n  initiallySelectedItems,\n  onClose,\n  onConfirm,\n  open\n}) => {\n  const [selected, setSelected] = useState(initiallySelectedItems);\n  const [filtersSelectable, setFiltersSelectable] = useState(restrictFilters);\n  const dimensions = useDimensions(open);\n\n  const updateFilterDimensionRestrictability = val => {\n    if (val) {\n      const otherItems = selected.filter(i => i !== DIMENSION_ID_ORGUNIT && i !== DIMENSION_ID_PERIOD);\n      updateSelectedFilters([DIMENSION_ID_PERIOD, DIMENSION_ID_ORGUNIT, ...otherItems]);\n    }\n\n    setFiltersSelectable(val);\n  };\n\n  const updateSelectedFilters = sItems => {\n    // ensure that orgUnit, period appear before other items\n    const periodItem = [...new Set(sItems.filter(i => i === DIMENSION_ID_PERIOD))];\n    const orgUnitItem = [...new Set(sItems.filter(i => i === DIMENSION_ID_ORGUNIT))];\n    const otherItems = sItems.filter(i => i !== DIMENSION_ID_ORGUNIT && i !== DIMENSION_ID_PERIOD);\n    return setSelected([...periodItem, ...orgUnitItem, ...otherItems]);\n  };\n\n  const closeDialog = () => {\n    setSelected(initiallySelectedItems);\n    setFiltersSelectable(restrictFilters);\n    onClose();\n  };\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, open && /*#__PURE__*/React.createElement(Modal, {\n    large: true,\n    position: \"top\",\n    onClose: closeDialog\n  }, /*#__PURE__*/React.createElement(ModalTitle, null, i18n.t('Dashboard filter settings')), /*#__PURE__*/React.createElement(ModalContent, null, /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.descContainer\n  }, /*#__PURE__*/React.createElement(\"span\", null, i18n.t(`Dashboards can be filtered by dimensions to change\n                                         the data shown. By default, all dimensions are available\n                                         as filters. Alternatively, only selected dimensions can\n                                         be made available on a dashboard.`))), /*#__PURE__*/React.createElement(RadioOptions, {\n    filtersSelectable: filtersSelectable,\n    updateFilterDimensionRestrictability: updateFilterDimensionRestrictability\n  }), filtersSelectable && /*#__PURE__*/React.createElement(Transfer, {\n    filterable: true,\n    height: \"400px\",\n    leftHeader: /*#__PURE__*/React.createElement(\"div\", {\n      className: classes.transferHeader\n    }, /*#__PURE__*/React.createElement(\"span\", null, i18n.t('Available Filters'))),\n    maxSelections: Infinity,\n    onChange: payload => {\n      return updateSelectedFilters(payload.selected);\n    },\n    options: dimensions.map(d => {\n      return {\n        label: d.name,\n        value: d.id\n      };\n    }),\n    optionsWidth: \"350px\",\n    rightHeader: /*#__PURE__*/React.createElement(\"div\", {\n      className: classes.transferHeader\n    }, /*#__PURE__*/React.createElement(\"span\", null, i18n.t('Selected Filters'))),\n    selected: selected,\n    selectedWidth: \"350px\"\n  })), /*#__PURE__*/React.createElement(ModalActions, null, /*#__PURE__*/React.createElement(ButtonStrip, {\n    end: true\n  }, /*#__PURE__*/React.createElement(Button, {\n    onClick: closeDialog,\n    secondary: true,\n    type: \"button\"\n  }, i18n.t('Cancel')), /*#__PURE__*/React.createElement(Button, {\n    onClick: () => {\n      if (!filtersSelectable) {\n        setSelected([]);\n      }\n\n      onConfirm(filtersSelectable, selected);\n    },\n    primary: true,\n    type: \"button\"\n  }, i18n.t('Confirm'))))));\n};\n\nFilterSettingsDialog.propTypes = {\n  initiallySelectedItems: PropTypes.array,\n  open: PropTypes.bool,\n  restrictFilters: PropTypes.bool,\n  onClose: PropTypes.func,\n  onConfirm: PropTypes.func\n};\nexport default FilterSettingsDialog;","import { useDataEngine, useAlert } from '@dhis2/app-runtime';\nimport { useD2 } from '@dhis2/app-runtime-adapter-d2';\nimport i18n from '@dhis2/d2-i18n';\nimport TranslationDialog from '@dhis2/d2-ui-translation-dialog';\nimport { Button, ButtonStrip } from '@dhis2/ui';\nimport PropTypes from 'prop-types';\nimport React, { useState } from 'react';\nimport { connect } from 'react-redux';\nimport { Redirect } from 'react-router-dom';\nimport { tFetchDashboards } from '../../actions/dashboards';\nimport { tSaveDashboard, acClearEditDashboard, acSetPrintPreviewView, acClearPrintPreviewView, acSetFilterSettings } from '../../actions/editDashboard';\nimport { acClearPrintDashboard } from '../../actions/printDashboard';\nimport { acClearSelected } from '../../actions/selected';\nimport { sGetEditDashboardRoot, sGetIsPrintPreviewView, sGetEditIsDirty } from '../../reducers/editDashboard';\nimport ConfirmActionDialog, { ACTION_DELETE, ACTION_DISCARD } from './ConfirmActionDialog';\nimport { deleteDashboardMutation } from './deleteDashboardMutation';\nimport FilterSettingsDialog from './FilterSettingsDialog';\nimport classes from './styles/ActionsBar.module.css';\nconst saveFailedMessage = i18n.t('Failed to save dashboard. You might be offline or not have access to edit this dashboard.');\nconst deleteFailedMessage = i18n.t('Failed to delete dashboard. You might be offline or not have access to edit this dashboard.');\n\nconst EditBar = ({\n  dashboard,\n  ...props\n}) => {\n  var _dashboard$access2, _dashboard$access3, _dashboard$access4, _dashboard$access5, _dashboard$access6;\n\n  const {\n    d2\n  } = useD2();\n  const dataEngine = useDataEngine();\n  const [translationDlgIsOpen, setTranslationDlgIsOpen] = useState(false);\n  const [filterSettingsDlgIsOpen, setFilterSettingsDlgIsOpen] = useState(false);\n  const [confirmDeleteDlgIsOpen, setConfirmDeleteDlgIsOpen] = useState(false);\n  const [confirmDiscardDlgIsOpen, setConfirmDiscardDlgIsOpen] = useState(false);\n  const [redirectUrl, setRedirectUrl] = useState(undefined);\n  const saveFailureAlert = useAlert(saveFailedMessage, {\n    critical: true\n  });\n  const deleteFailureAlert = useAlert(deleteFailedMessage, {\n    critical: true\n  });\n\n  const onConfirmDelete = () => {\n    setConfirmDeleteDlgIsOpen(true);\n  };\n\n  const onDeleteConfirmed = () => {\n    setConfirmDeleteDlgIsOpen(false);\n    dataEngine.mutate(deleteDashboardMutation, {\n      variables: {\n        id: dashboard.id\n      }\n    }).then(() => {\n      props.clearSelected();\n      return props.fetchDashboards();\n    }).then(() => setRedirectUrl('/')).catch(deleteFailureAlert.show);\n  };\n\n  const onSave = () => {\n    props.saveDashboard().then(newId => {\n      props.clearSelected();\n      setRedirectUrl(`/${newId}`);\n    }).catch(() => saveFailureAlert.show());\n  };\n\n  const onPrintPreview = () => {\n    if (props.isPrintPreviewView) {\n      props.clearPrintPreview();\n      props.clearPrintDashboard();\n    } else {\n      props.showPrintPreview();\n    }\n  };\n\n  const onConfirmDiscard = () => {\n    if (props.isDirty) {\n      setConfirmDiscardDlgIsOpen(true);\n    } else {\n      onDiscardConfirmed();\n    }\n  };\n\n  const onDiscardConfirmed = () => {\n    props.onDiscardChanges();\n    const redirectUrl = dashboard.id ? `/${dashboard.id}` : '/';\n    setRedirectUrl(redirectUrl);\n  };\n\n  const onContinueEditing = () => {\n    setConfirmDeleteDlgIsOpen(false);\n    setConfirmDiscardDlgIsOpen(false);\n  };\n\n  const onFilterSettingsConfirmed = (filterSettingsRestrictability, selectedFilters) => {\n    const allowedFilters = filterSettingsRestrictability ? selectedFilters : [];\n    props.setFilterSettings({\n      allowedFilters,\n      restrictFilters: filterSettingsRestrictability\n    });\n    toggleFilterSettingsDialog();\n  };\n\n  const toggleTranslationDialog = () => setTranslationDlgIsOpen(!translationDlgIsOpen);\n\n  const toggleFilterSettingsDialog = () => {\n    setFilterSettingsDlgIsOpen(!filterSettingsDlgIsOpen);\n  };\n\n  const translationDialog = () => dashboard.id ? /*#__PURE__*/React.createElement(TranslationDialog, {\n    className: \"translation-dialog\",\n    d2: d2,\n    open: translationDlgIsOpen,\n    onRequestClose: toggleTranslationDialog,\n    objectToTranslate: { ...dashboard,\n      modelDefinition: {\n        name: 'dashboard'\n      }\n    },\n    fieldsToTranslate: ['name', 'description'],\n    onTranslationError: err => console.log('translation update error', err),\n    onTranslationSaved: Function.prototype,\n    insertTheme: true\n  }) : null;\n\n  const filterSettingsDialog = () => {\n    return /*#__PURE__*/React.createElement(FilterSettingsDialog, {\n      restrictFilters: dashboard.restrictFilters,\n      initiallySelectedItems: dashboard.allowedFilters,\n      onClose: toggleFilterSettingsDialog,\n      onConfirm: onFilterSettingsConfirmed,\n      open: filterSettingsDlgIsOpen\n    });\n  };\n\n  const renderActionButtons = () => {\n    var _dashboard$access;\n\n    return /*#__PURE__*/React.createElement(ButtonStrip, null, /*#__PURE__*/React.createElement(Button, {\n      primary: true,\n      onClick: onSave,\n      dataTest: \"save-dashboard-button\"\n    }, i18n.t('Save changes')), /*#__PURE__*/React.createElement(Button, {\n      onClick: onPrintPreview\n    }, props.isPrintPreviewView ? i18n.t('Exit Print preview') : i18n.t('Print preview')), /*#__PURE__*/React.createElement(Button, {\n      onClick: toggleFilterSettingsDialog\n    }, i18n.t('Filter settings')), dashboard.id && /*#__PURE__*/React.createElement(Button, {\n      onClick: toggleTranslationDialog\n    }, i18n.t('Translate')), dashboard.id && ((_dashboard$access = dashboard.access) === null || _dashboard$access === void 0 ? void 0 : _dashboard$access.delete) && /*#__PURE__*/React.createElement(Button, {\n      onClick: onConfirmDelete,\n      dataTest: \"delete-dashboard-button\"\n    }, i18n.t('Delete')));\n  };\n\n  if (redirectUrl) {\n    return /*#__PURE__*/React.createElement(Redirect, {\n      to: redirectUrl\n    });\n  }\n\n  const discardBtnText = (_dashboard$access2 = dashboard.access) !== null && _dashboard$access2 !== void 0 && _dashboard$access2.update ? i18n.t('Exit without saving') : i18n.t('Go to dashboards');\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.editBar,\n    \"data-test\": \"edit-control-bar\"\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.controls\n  }, (_dashboard$access3 = dashboard.access) !== null && _dashboard$access3 !== void 0 && _dashboard$access3.update ? renderActionButtons() : null, /*#__PURE__*/React.createElement(Button, {\n    secondary: true,\n    onClick: onConfirmDiscard\n  }, discardBtnText))), ((_dashboard$access4 = dashboard.access) === null || _dashboard$access4 === void 0 ? void 0 : _dashboard$access4.update) && filterSettingsDialog(), dashboard.id && ((_dashboard$access5 = dashboard.access) === null || _dashboard$access5 === void 0 ? void 0 : _dashboard$access5.update) && translationDialog(), dashboard.id && ((_dashboard$access6 = dashboard.access) === null || _dashboard$access6 === void 0 ? void 0 : _dashboard$access6.delete) && /*#__PURE__*/React.createElement(ConfirmActionDialog, {\n    action: ACTION_DELETE,\n    dashboardName: dashboard.name,\n    onConfirm: onDeleteConfirmed,\n    onCancel: onContinueEditing,\n    open: confirmDeleteDlgIsOpen\n  }), /*#__PURE__*/React.createElement(ConfirmActionDialog, {\n    action: ACTION_DISCARD,\n    onConfirm: onDiscardConfirmed,\n    onCancel: onContinueEditing,\n    open: confirmDiscardDlgIsOpen\n  }));\n};\n\nEditBar.propTypes = {\n  clearPrintDashboard: PropTypes.func,\n  clearPrintPreview: PropTypes.func,\n  clearSelected: PropTypes.func,\n  dashboard: PropTypes.object,\n  fetchDashboards: PropTypes.func,\n  isDirty: PropTypes.bool,\n  isPrintPreviewView: PropTypes.bool,\n  saveDashboard: PropTypes.func,\n  setFilterSettings: PropTypes.func,\n  showPrintPreview: PropTypes.func,\n  onDiscardChanges: PropTypes.func\n};\n\nconst mapStateToProps = state => {\n  return {\n    dashboard: sGetEditDashboardRoot(state),\n    isPrintPreviewView: sGetIsPrintPreviewView(state),\n    isDirty: sGetEditIsDirty(state)\n  };\n};\n\nconst mapDispatchToProps = dispatch => ({\n  clearPrintDashboard: () => dispatch(acClearPrintDashboard()),\n  clearPrintPreview: () => dispatch(acClearPrintPreviewView()),\n  clearSelected: () => dispatch(acClearSelected()),\n  saveDashboard: () => dispatch(tSaveDashboard()).then(id => id),\n  fetchDashboards: () => dispatch(tFetchDashboards()),\n  onDiscardChanges: () => dispatch(acClearEditDashboard()),\n  setFilterSettings: value => dispatch(acSetFilterSettings(value)),\n  showPrintPreview: () => dispatch(acSetPrintPreviewView())\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(EditBar);","import { apiFetchDashboard } from '../api/fetchDashboard';\nimport { tGetMessages } from '../components/Item/MessagesItem/actions';\nimport { VIEW } from '../modules/dashboardModes';\nimport { MESSAGES } from '../modules/itemTypes';\nimport { storePreferredDashboardId } from '../modules/localStorage';\nimport { SET_SELECTED, CLEAR_SELECTED, sGetSelectedId } from '../reducers/selected';\nimport { acAppendDashboards } from './dashboards';\nimport { acClearItemActiveTypes } from './itemActiveTypes';\nimport { acClearItemFilters } from './itemFilters';\nimport { acClearVisualizations } from './visualizations'; // actions\n\nexport const acSetSelected = value => ({\n  type: SET_SELECTED,\n  value\n});\nexport const acClearSelected = () => ({\n  type: CLEAR_SELECTED\n}); // thunks\n\nexport const tSetSelectedDashboardById = (id, username) => (dispatch, getState, dataEngine) => {\n  return apiFetchDashboard(dataEngine, id, {\n    mode: VIEW\n  }).then(dashboard => {\n    //add the dashboard to the list of dashboards if not already there\n    dispatch(acAppendDashboards([{\n      id: dashboard.id,\n      displayName: dashboard.displayName,\n      starred: dashboard.starred\n    }]));\n\n    if (username) {\n      storePreferredDashboardId(username, id);\n    }\n\n    if (id !== sGetSelectedId(getState())) {\n      dispatch(acClearItemFilters());\n      dispatch(acClearVisualizations());\n      dispatch(acClearItemActiveTypes());\n    }\n\n    dashboard.dashboardItems.some(item => item.type === MESSAGES) && dispatch(tGetMessages(dataEngine));\n    dispatch(acSetSelected(dashboard));\n    return dashboard;\n  });\n};","function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport debounce from 'lodash/debounce';\nimport pick from 'lodash/pick';\nimport PropTypes from 'prop-types';\nimport React, { Component } from 'react';\nconst defaultDebounceMs = 100;\nconst defaultBufferFactor = 0.25;\nconst observerConfig = {\n  attributes: true,\n  childList: false,\n  subtree: false\n};\n\nclass ProgressiveLoadingContainer extends Component {\n  constructor(...args) {\n    super(...args);\n\n    _defineProperty(this, \"state\", {\n      shouldLoad: false\n    });\n\n    _defineProperty(this, \"containerRef\", null);\n\n    _defineProperty(this, \"debouncedCheckShouldLoad\", null);\n\n    _defineProperty(this, \"handlerOptions\", {\n      passive: true\n    });\n\n    _defineProperty(this, \"observer\", null);\n  }\n\n  checkShouldLoad() {\n    if (!this.containerRef) {\n      return;\n    }\n\n    const bufferPx = this.props.bufferFactor * window.innerHeight;\n    const rect = this.containerRef.getBoundingClientRect();\n\n    if (rect.bottom > -bufferPx && rect.top < window.innerHeight + bufferPx) {\n      this.setState({\n        shouldLoad: true\n      });\n      this.removeHandler();\n    }\n  }\n\n  registerHandler() {\n    this.debouncedCheckShouldLoad = debounce(() => this.checkShouldLoad(), this.props.debounceMs);\n    Array.from(document.getElementsByClassName('dashboard-scroll-container')).forEach(container => {\n      container.addEventListener('scroll', this.debouncedCheckShouldLoad, this.handlerOptions);\n    });\n\n    const mutationCallback = mutationsList => {\n      const styleChanged = mutationsList.find(mutation => mutation.attributeName === 'style');\n\n      if (styleChanged) {\n        this.debouncedCheckShouldLoad();\n      }\n    };\n\n    this.observer = new MutationObserver(mutationCallback);\n    this.observer.observe(this.containerRef, observerConfig);\n  }\n\n  removeHandler() {\n    Array.from(document.getElementsByClassName('dashboard-scroll-container')).forEach(container => {\n      container.removeEventListener('scroll', this.debouncedCheckShouldLoad, this.handlerOptions);\n    });\n    this.observer.disconnect();\n  }\n\n  componentDidMount() {\n    this.registerHandler();\n    this.checkShouldLoad();\n  }\n\n  componentWillUnmount() {\n    this.removeHandler();\n  }\n\n  render() {\n    const {\n      children,\n      className,\n      style,\n      ...props\n    } = this.props;\n    const {\n      shouldLoad\n    } = this.state;\n    const eventProps = pick(props, ['onMouseDown', 'onTouchStart', 'onMouseUp', 'onTouchEnd']);\n    return /*#__PURE__*/React.createElement(\"div\", _extends({\n      ref: ref => this.containerRef = ref,\n      style: style,\n      className: className,\n      \"data-test\": `dashboarditem-${props.itemId}`\n    }, eventProps), shouldLoad && children);\n  }\n\n}\n\n_defineProperty(ProgressiveLoadingContainer, \"propTypes\", {\n  children: PropTypes.node.isRequired,\n  bufferFactor: PropTypes.number,\n  className: PropTypes.string,\n  debounceMs: PropTypes.number,\n  itemId: PropTypes.string,\n  style: PropTypes.object\n});\n\n_defineProperty(ProgressiveLoadingContainer, \"defaultProps\", {\n  debounceMs: defaultDebounceMs,\n  bufferFactor: defaultBufferFactor\n});\n\nexport default ProgressiveLoadingContainer;","import i18n from '@dhis2/d2-i18n';\nimport cx from 'classnames';\nimport PropTypes from 'prop-types';\nimport React, { useState } from 'react';\nimport { Responsive as ResponsiveReactGridLayout } from 'react-grid-layout';\nimport { connect } from 'react-redux';\nimport { acUpdateDashboardLayout } from '../../actions/editDashboard';\nimport { Item } from '../../components/Item/Item';\nimport NoContentMessage from '../../components/NoContentMessage';\nimport ProgressiveLoadingContainer from '../../components/ProgressiveLoadingContainer';\nimport { useWindowDimensions } from '../../components/WindowDimensionsProvider';\nimport { EDIT } from '../../modules/dashboardModes';\nimport { getGridItemDomElementClassName } from '../../modules/getGridItemDomElementClassName';\nimport { GRID_ROW_HEIGHT_PX, GRID_COMPACT_TYPE, MARGIN_PX, GRID_PADDING_PX, GRID_COLUMNS, hasShape, getGridWidth } from '../../modules/gridUtil';\nimport { getBreakpoint } from '../../modules/smallScreen';\nimport { orArray } from '../../modules/util';\nimport { sGetEditDashboardItems } from '../../reducers/editDashboard';\nimport classes from './styles/ItemGrid.module.css';\n\nconst EditItemGrid = ({\n  dashboardItems,\n  acUpdateDashboardLayout\n}) => {\n  const [gridWidth, setGridWidth] = useState(0);\n  const {\n    width\n  } = useWindowDimensions();\n\n  const onLayoutChange = newLayout => acUpdateDashboardLayout(newLayout);\n\n  const onWidthChanged = containerWidth => setTimeout(() => setGridWidth(containerWidth), 200);\n\n  const getItemComponent = item => /*#__PURE__*/React.createElement(ProgressiveLoadingContainer, {\n    key: item.i,\n    className: cx(item.type, 'edit', getGridItemDomElementClassName(item.id)),\n    itemId: item.id\n  }, /*#__PURE__*/React.createElement(Item, {\n    item: item,\n    gridWidth: gridWidth,\n    dashboardMode: EDIT\n  }));\n\n  const getItemComponents = items => items.map(item => getItemComponent(item));\n\n  if (!dashboardItems.length) {\n    return /*#__PURE__*/React.createElement(NoContentMessage, {\n      text: i18n.t('There are no items on this dashboard')\n    });\n  }\n\n  return /*#__PURE__*/React.createElement(ResponsiveReactGridLayout, {\n    className: classes.grid,\n    rowHeight: GRID_ROW_HEIGHT_PX,\n    width: getGridWidth(width),\n    cols: {\n      lg: GRID_COLUMNS\n    },\n    breakpoints: {\n      lg: getBreakpoint()\n    },\n    layouts: {\n      lg: dashboardItems\n    },\n    compactType: GRID_COMPACT_TYPE,\n    margin: MARGIN_PX,\n    containerPadding: {\n      lg: GRID_PADDING_PX\n    },\n    onLayoutChange: onLayoutChange,\n    onWidthChange: onWidthChanged,\n    isDraggable: true,\n    isResizable: true,\n    draggableCancel: \"input,textarea\"\n  }, getItemComponents(dashboardItems));\n};\n\nEditItemGrid.propTypes = {\n  acUpdateDashboardLayout: PropTypes.func,\n  dashboardItems: PropTypes.array\n}; // Container\n\nconst mapStateToProps = state => {\n  return {\n    dashboardItems: orArray(sGetEditDashboardItems(state)).filter(hasShape)\n  };\n};\n\nconst mapDispatchToProps = {\n  acUpdateDashboardLayout\n};\nexport default connect(mapStateToProps, mapDispatchToProps)(EditItemGrid);","import i18n from '@dhis2/d2-i18n';\nimport { NoticeBox, CenteredContent } from '@dhis2/ui';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport classes from './styles/NotSupportedNotice.module.css';\n\nconst NotSupportedNotice = ({\n  message\n}) => /*#__PURE__*/React.createElement(CenteredContent, {\n  position: \"top\"\n}, /*#__PURE__*/React.createElement(\"div\", {\n  className: classes.noticeContainer\n}, /*#__PURE__*/React.createElement(NoticeBox, {\n  title: i18n.t('Not supported'),\n  warning: true\n}, message)));\n\nNotSupportedNotice.propTypes = {\n  message: PropTypes.string\n};\nexport default NotSupportedNotice;","import { useState, useEffect } from 'react';\n\nconst useDebounce = (value, delay) => {\n  const [debouncedValue, setDebouncedValue] = useState(value);\n  useEffect(() => {\n    const handler = setTimeout(() => {\n      setDebouncedValue(value);\n    }, delay);\n    return () => {\n      clearTimeout(handler);\n    };\n  }, [value, delay]);\n  return debouncedValue;\n};\n\nexport default useDebounce;","import { visTypeIcons } from '@dhis2/analytics';\nimport i18n from '@dhis2/d2-i18n';\nimport { MenuItem, colors, IconLaunch16 } from '@dhis2/ui';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport { getItemIcon, VISUALIZATION } from '../../../modules/itemTypes';\nimport classes from './styles/ContentMenuItem.module.css';\n\nconst LaunchLink = ({\n  url\n}) => /*#__PURE__*/React.createElement(\"a\", {\n  onClick: e => e.stopPropagation(),\n  className: classes.launchLink,\n  target: \"_blank\",\n  rel: \"noopener noreferrer\",\n  href: url\n}, /*#__PURE__*/React.createElement(IconLaunch16, {\n  color: colors.grey700\n}));\n\nLaunchLink.propTypes = {\n  url: PropTypes.string\n};\n\nconst InsertButton = () => /*#__PURE__*/React.createElement(\"button\", {\n  className: classes.buttonInsert\n}, i18n.t('Insert'));\n\nconst ContentMenuItem = ({\n  type,\n  name,\n  onInsert,\n  url,\n  visType\n}) => {\n  const ItemIcon = getItemIcon(type);\n  let renderedItemIcon;\n\n  if (type === VISUALIZATION) {\n    const VisualizationIcon = visTypeIcons[visType];\n    renderedItemIcon = /*#__PURE__*/React.createElement(VisualizationIcon, {\n      color: colors.grey600\n    });\n  } else {\n    renderedItemIcon = /*#__PURE__*/React.createElement(ItemIcon, {\n      color: colors.grey600\n    });\n  }\n\n  return /*#__PURE__*/React.createElement(MenuItem, {\n    onClick: onInsert,\n    icon: renderedItemIcon,\n    label: /*#__PURE__*/React.createElement(\"div\", {\n      className: classes.menuItem\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: classes.label\n    }, /*#__PURE__*/React.createElement(\"span\", null, name), url ? /*#__PURE__*/React.createElement(LaunchLink, {\n      url: url\n    }) : null), /*#__PURE__*/React.createElement(InsertButton, null)),\n    dataTest: `menu-item-${name}`\n  });\n};\n\nContentMenuItem.propTypes = {\n  name: PropTypes.string,\n  type: PropTypes.string,\n  url: PropTypes.string,\n  visType: PropTypes.string,\n  onInsert: PropTypes.func\n};\nexport default ContentMenuItem;","import { MenuItem, colors } from '@dhis2/ui';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport classes from './styles/HeaderMenuItem.module.css';\n\nconst HeaderMenuItem = ({\n  title\n}) => /*#__PURE__*/React.createElement(MenuItem, {\n  className: classes.item,\n  dense: true,\n  key: title,\n  disabled: true,\n  label: /*#__PURE__*/React.createElement(\"span\", {\n    style: {\n      color: colors.grey800,\n      fontWeight: '600'\n    }\n  }, title)\n});\n\nHeaderMenuItem.propTypes = {\n  title: PropTypes.string.isRequired\n};\nexport default HeaderMenuItem;","import i18n from '@dhis2/d2-i18n';\nimport { VISUALIZATION, MAP, EVENT_CHART, EVENT_REPORT, REPORTS, RESOURCES, APP, MESSAGES, TEXT, SPACER } from '../../../modules/itemTypes';\nexport const singleItems = [{\n  id: 'additional',\n  header: i18n.t('Additional items'),\n  items: [{\n    type: TEXT,\n    name: i18n.t('Text box'),\n    content: ''\n  }, {\n    type: MESSAGES,\n    name: i18n.t('Messages'),\n    content: 'true'\n  }, {\n    type: SPACER,\n    name: i18n.t('Spacer'),\n    content: ''\n  }]\n}]; // categorizedItems are grouped in the item selector menu\n\nexport const categorizedItems = [VISUALIZATION, MAP, EVENT_REPORT, EVENT_CHART, REPORTS, RESOURCES, APP]; // listItemTypes are included in a single dashboard item\n\nexport const listItemTypes = [REPORTS, RESOURCES];","import { useConfig } from '@dhis2/app-runtime';\nimport i18n from '@dhis2/d2-i18n';\nimport { MenuItem, Divider } from '@dhis2/ui';\nimport PropTypes from 'prop-types';\nimport React, { useState } from 'react';\nimport { connect } from 'react-redux';\nimport { acAddDashboardItem } from '../../../actions/editDashboard';\nimport { getItemUrl, APP, VISUALIZATION } from '../../../modules/itemTypes';\nimport { tAddListItemContent } from './actions';\nimport ContentMenuItem from './ContentMenuItem';\nimport HeaderMenuItem from './HeaderMenuItem';\nimport { categorizedItems, listItemTypes } from './selectableItems';\nimport classes from './styles/CategorizedMenuGroup.module.css';\n\nconst CategorizedMenuGroup = ({\n  type,\n  title,\n  items,\n  hasMore,\n  acAddDashboardItem,\n  tAddListItemContent,\n  onChangeItemsLimit\n}) => {\n  const {\n    baseUrl\n  } = useConfig();\n  const [seeMore, setSeeMore] = useState(false);\n\n  const addItem = item => () => {\n    if (type === APP) {\n      acAddDashboardItem({\n        type,\n        content: item.key\n      });\n    } else {\n      const newItem = {\n        id: item.id,\n        name: item.displayName || item.name\n      };\n\n      if (listItemTypes.includes(type)) {\n        tAddListItemContent(type, newItem);\n      } else {\n        acAddDashboardItem({\n          type,\n          content: newItem\n        });\n      }\n    }\n  };\n\n  const toggleSeeMore = () => {\n    setSeeMore(!seeMore);\n    onChangeItemsLimit(type);\n  };\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(HeaderMenuItem, {\n    title: title\n  }), items.map(item => {\n    const itemUrl = getItemUrl(type, item, baseUrl);\n    return /*#__PURE__*/React.createElement(ContentMenuItem, {\n      key: item.id || item.key,\n      type: type,\n      visType: type === VISUALIZATION ? item.type : type,\n      name: item.displayName || item.name,\n      onInsert: addItem(item),\n      url: itemUrl\n    });\n  }), hasMore ? /*#__PURE__*/React.createElement(MenuItem, {\n    dense: true,\n    key: `showmore${title}`,\n    onClick: toggleSeeMore,\n    label: /*#__PURE__*/React.createElement(\"button\", {\n      className: classes.showMoreButton\n    }, seeMore ? i18n.t('Show fewer') : i18n.t('Show more'))\n  }) : null, /*#__PURE__*/React.createElement(Divider, {\n    margin: \"8px 0px\"\n  }));\n};\n\nCategorizedMenuGroup.propTypes = {\n  items: PropTypes.array.isRequired,\n  title: PropTypes.string.isRequired,\n  type: PropTypes.oneOf(categorizedItems).isRequired,\n  onChangeItemsLimit: PropTypes.func.isRequired,\n  acAddDashboardItem: PropTypes.func,\n  hasMore: PropTypes.bool,\n  tAddListItemContent: PropTypes.func\n};\nexport default connect(null, {\n  acAddDashboardItem,\n  tAddListItemContent\n})(CategorizedMenuGroup);","import { acAddDashboardItem, acUpdateDashboardItem } from '../../../actions/editDashboard';\nimport { itemTypeMap } from '../../../modules/itemTypes';\nimport { sGetEditDashboardRoot } from '../../../reducers/editDashboard';\nexport const tAddListItemContent = (type, content) => (dispatch, getState) => {\n  const state = getState();\n  const listItemType = itemTypeMap[type].propName;\n  const dashboardItems = sGetEditDashboardRoot(state).dashboardItems;\n  const dashboardItemIndex = dashboardItems.findIndex(item => item.type === type);\n  let dashboardItem; // Reports/Resources/Users dashboard item type already present in dashboard\n\n  if (dashboardItemIndex > -1) {\n    dashboardItem = dashboardItems[dashboardItemIndex];\n    dashboardItem[listItemType].push(content);\n    dispatch(acUpdateDashboardItem(dashboardItem));\n  } else {\n    dashboardItem = {\n      type: type,\n      content: [content]\n    };\n    dispatch(acAddDashboardItem(dashboardItem));\n  }\n};","import i18n from '@dhis2/d2-i18n';\nimport { InputField } from '@dhis2/ui';\nimport PropTypes from 'prop-types';\nimport React from 'react';\n\nconst ItemSearchField = props => /*#__PURE__*/React.createElement(InputField, {\n  name: \"Dashboard item search\",\n  label: i18n.t('Search for items to add to this dashboard'),\n  type: \"text\",\n  onChange: props.onChange,\n  onFocus: props.onFocus,\n  value: props.value,\n  dataTest: \"item-search\"\n});\n\nItemSearchField.propTypes = {\n  value: PropTypes.string,\n  onChange: PropTypes.func,\n  onFocus: PropTypes.func\n};\nexport default ItemSearchField;","import PropTypes from 'prop-types';\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport { acAddDashboardItem } from '../../../actions/editDashboard';\nimport ContentMenuItem from './ContentMenuItem';\nimport HeaderMenuItem from './HeaderMenuItem';\n\nconst SinglesMenuGroup = ({\n  acAddDashboardItem,\n  category\n}) => {\n  const addToDashboard = ({\n    type,\n    content\n  }) => () => {\n    acAddDashboardItem({\n      type,\n      content\n    });\n  };\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(HeaderMenuItem, {\n    title: category.header\n  }), category.items.map(item => /*#__PURE__*/React.createElement(ContentMenuItem, {\n    key: item.type,\n    type: item.type,\n    name: item.name,\n    onInsert: addToDashboard(item)\n  })));\n};\n\nSinglesMenuGroup.propTypes = {\n  acAddDashboardItem: PropTypes.func,\n  category: PropTypes.object\n};\nexport default connect(null, {\n  acAddDashboardItem\n})(SinglesMenuGroup);","import { useDataEngine } from '@dhis2/app-runtime';\nimport { Popover, FlyoutMenu } from '@dhis2/ui';\nimport React, { useState, useEffect, createRef } from 'react';\nimport { itemTypeMap, getDefaultItemCount } from '../../../modules/itemTypes';\nimport useDebounce from '../../../modules/useDebounce';\nimport CategorizedMenuGroup from './CategorizedMenuGroup';\nimport { getDashboardsQQuery } from './dashboardsQQuery';\nimport ItemSearchField from './ItemSearchField';\nimport { singleItems, categorizedItems } from './selectableItems';\nimport SinglesMenuGroup from './SinglesMenuGroup';\nimport classes from './styles/ItemSelector.module.css';\n\nconst ItemSelector = () => {\n  const [isOpen, setIsOpen] = useState(false);\n  const [filter, setFilter] = useState('');\n  const [items, setItems] = useState(null);\n  const [maxOptions, setMaxOptions] = useState(new Set());\n  const dataEngine = useDataEngine();\n  const debouncedFilterText = useDebounce(filter, 350);\n  useEffect(() => {\n    const query = getDashboardsQQuery(debouncedFilterText, Array.from(maxOptions));\n    dataEngine.query({\n      items: query\n    }).then(res => setItems(res.items));\n  }, [debouncedFilterText, maxOptions]);\n\n  const closeMenu = () => {\n    setIsOpen(false);\n    setFilter('');\n    setMaxOptions(new Set());\n  };\n\n  const openMenu = () => setIsOpen(true);\n\n  const getCategorizedMenuGroups = () => {\n    return categorizedItems.filter(type => {\n      const itemType = itemTypeMap[type];\n      return items && items[itemType.endPointName];\n    }).map(type => {\n      const itemType = itemTypeMap[type];\n      const itemCount = getDefaultItemCount(type);\n      const allItems = items[itemType.endPointName];\n      const hasMore = allItems.length > itemCount;\n      const displayItems = maxOptions.has(itemType.id) ? allItems : allItems.slice(0, itemCount);\n      return /*#__PURE__*/React.createElement(CategorizedMenuGroup, {\n        key: type,\n        type: type,\n        title: itemType.pluralTitle,\n        items: displayItems,\n        onChangeItemsLimit: updateMaxOptions,\n        hasMore: hasMore\n      });\n    });\n  };\n\n  const getSinglesMenuGroups = () => singleItems.map(category => /*#__PURE__*/React.createElement(SinglesMenuGroup, {\n    key: category.id,\n    category: category\n  }));\n\n  const getMenuGroups = () => getCategorizedMenuGroups().concat(getSinglesMenuGroups());\n\n  const updateMaxOptions = type => {\n    if (type) {\n      const options = new Set(maxOptions);\n      options.has(type) ? options.delete(type) : options.add(type);\n      setMaxOptions(options);\n    } else {\n      setMaxOptions(new Set());\n    }\n  };\n\n  const updateFilter = ({\n    value\n  }) => setFilter(value);\n\n  const inputRef = /*#__PURE__*/createRef();\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"span\", {\n    ref: inputRef\n  }, /*#__PURE__*/React.createElement(ItemSearchField, {\n    value: filter,\n    onChange: updateFilter,\n    onFocus: openMenu\n  })), isOpen && /*#__PURE__*/React.createElement(Popover, {\n    reference: inputRef,\n    placement: \"bottom-start\",\n    onClickOutside: closeMenu,\n    arrow: false,\n    maxWidth: 700\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.popover\n  }, /*#__PURE__*/React.createElement(FlyoutMenu, {\n    className: classes.menu,\n    dataTest: \"item-menu\",\n    maxWidth: \"700px\"\n  }, getMenuGroups()))));\n};\n\nexport default ItemSelector;","export const getDashboardsQQuery = (query = '', maxItems = []) => {\n  return {\n    resource: `dashboards/q/${query}`,\n    params: {\n      count: 11,\n      max: maxItems\n    }\n  };\n};","import i18n from '@dhis2/d2-i18n';\nimport { InputField, TextAreaField } from '@dhis2/ui';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport { acSetDashboardTitle, acSetDashboardDescription } from '../../actions/editDashboard';\nimport { orObject } from '../../modules/util';\nimport { sGetEditDashboardRoot } from '../../reducers/editDashboard';\nimport ItemSelector from './ItemSelector/ItemSelector';\nimport classes from './styles/TitleBar.module.css';\n\nconst EditTitleBar = ({\n  name,\n  description,\n  onChangeTitle,\n  onChangeDescription\n}) => {\n  const updateTitle = (_, e) => {\n    onChangeTitle(e.target.value);\n  };\n\n  const updateDescription = (_, e) => {\n    onChangeDescription(e.target.value);\n  };\n\n  return /*#__PURE__*/React.createElement(\"section\", {\n    className: classes.section\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.titleDescription\n  }, /*#__PURE__*/React.createElement(InputField, {\n    className: classes.title,\n    name: \"Dashboard title input\",\n    label: i18n.t('Dashboard title'),\n    type: \"text\",\n    onChange: updateTitle,\n    value: name,\n    placeholder: i18n.t('Untitled dashboard'),\n    dataTest: \"dashboard-title-input\"\n  }), /*#__PURE__*/React.createElement(TextAreaField, {\n    className: classes.description,\n    name: \"Dashboard description input\",\n    label: i18n.t('Dashboard description'),\n    onChange: updateDescription,\n    value: description,\n    dataTest: \"dashboard-description-input\"\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.itemSelector\n  }, /*#__PURE__*/React.createElement(ItemSelector, null)));\n};\n\nEditTitleBar.propTypes = {\n  onChangeDescription: PropTypes.func.isRequired,\n  onChangeTitle: PropTypes.func.isRequired,\n  description: PropTypes.string,\n  name: PropTypes.string\n};\nEditTitleBar.defaultProps = {\n  name: '',\n  description: ''\n};\n\nconst mapStateToProps = state => {\n  const selectedDashboard = orObject(sGetEditDashboardRoot(state));\n  return {\n    name: selectedDashboard.name,\n    description: selectedDashboard.description\n  };\n};\n\nconst mapDispatchToProps = {\n  onChangeTitle: acSetDashboardTitle,\n  onChangeDescription: acSetDashboardDescription\n};\nexport default connect(mapStateToProps, mapDispatchToProps)(EditTitleBar);","import { useDataEngine } from '@dhis2/app-runtime';\nimport i18n from '@dhis2/d2-i18n';\nimport { Layer, CenteredContent, CircularLoader } from '@dhis2/ui';\nimport cx from 'classnames';\nimport PropTypes from 'prop-types';\nimport React, { useState, useEffect } from 'react';\nimport { connect } from 'react-redux';\nimport { Redirect } from 'react-router-dom';\nimport { acSetEditDashboard } from '../../actions/editDashboard';\nimport { apiFetchDashboard } from '../../api/fetchDashboard';\nimport DashboardContainer from '../../components/DashboardContainer';\nimport NoContentMessage from '../../components/NoContentMessage';\nimport { useWindowDimensions } from '../../components/WindowDimensionsProvider';\nimport { EDIT } from '../../modules/dashboardModes';\nimport { setHeaderbarVisible } from '../../modules/setHeaderbarVisible';\nimport { isSmallScreen } from '../../modules/smallScreen';\nimport { sGetIsPrintPreviewView } from '../../reducers/editDashboard';\nimport LayoutPrintPreview from '../print/PrintLayoutDashboard';\nimport ActionsBar from './ActionsBar';\nimport ItemGrid from './ItemGrid';\nimport NotSupportedNotice from './NotSupportedNotice';\nimport classes from './styles/EditDashboard.module.css';\nimport TitleBar from './TitleBar';\n\nconst EditDashboard = props => {\n  const dataEngine = useDataEngine();\n  const {\n    width\n  } = useWindowDimensions();\n  const [redirectUrl, setRedirectUrl] = useState(null);\n  const [hasUpdateAccess, setHasUpdateAccess] = useState(null);\n  const [isLoading, setIsLoading] = useState(true);\n  useEffect(() => {\n    const loadDashboard = async () => {\n      try {\n        var _dashboard$access;\n\n        const dashboard = await apiFetchDashboard(dataEngine, props.id, {\n          mode: EDIT\n        });\n        props.setEditDashboard(dashboard);\n        setHasUpdateAccess(((_dashboard$access = dashboard.access) === null || _dashboard$access === void 0 ? void 0 : _dashboard$access.update) || false);\n        setIsLoading(false);\n      } catch (error) {\n        setRedirectUrl(props.id ? `/${props.id}` : '/');\n        setIsLoading(false);\n      }\n    };\n\n    if (isSmallScreen(width)) {\n      setRedirectUrl(props.id ? `/${props.id}` : '/');\n      return;\n    }\n\n    setHeaderbarVisible(true);\n    loadDashboard();\n  }, [props.id]);\n\n  if (redirectUrl) {\n    return /*#__PURE__*/React.createElement(Redirect, {\n      to: redirectUrl\n    });\n  }\n\n  if (isLoading) {\n    return /*#__PURE__*/React.createElement(Layer, {\n      translucent: true\n    }, /*#__PURE__*/React.createElement(CenteredContent, null, /*#__PURE__*/React.createElement(CircularLoader, null)));\n  }\n\n  const renderGrid = () => {\n    if (props.isPrintPreviewView) {\n      return /*#__PURE__*/React.createElement(LayoutPrintPreview, {\n        fromEdit: true\n      });\n    }\n\n    return /*#__PURE__*/React.createElement(DashboardContainer, null, /*#__PURE__*/React.createElement(TitleBar, null), /*#__PURE__*/React.createElement(ItemGrid, null));\n  };\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\n    className: cx(classes.container, 'dashboard-scroll-container'),\n    \"data-test\": \"outer-scroll-container\"\n  }, /*#__PURE__*/React.createElement(ActionsBar, null), hasUpdateAccess ? renderGrid() : /*#__PURE__*/React.createElement(NoContentMessage, {\n    text: i18n.t('No access')\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.notice\n  }, /*#__PURE__*/React.createElement(NotSupportedNotice, {\n    message: i18n.t('Editing dashboards on small screens is not supported. Resize your screen to return to edit mode.')\n  })));\n};\n\nEditDashboard.propTypes = {\n  id: PropTypes.string,\n  isPrintPreviewView: PropTypes.bool,\n  setEditDashboard: PropTypes.func\n};\n\nconst mapStateToProps = (state, ownProps) => {\n  var _ownProps$match, _ownProps$match$param;\n\n  return {\n    id: ((_ownProps$match = ownProps.match) === null || _ownProps$match === void 0 ? void 0 : (_ownProps$match$param = _ownProps$match.params) === null || _ownProps$match$param === void 0 ? void 0 : _ownProps$match$param.dashboardId) || null,\n    isPrintPreviewView: sGetIsPrintPreviewView(state)\n  };\n};\n\nexport default connect(mapStateToProps, {\n  setEditDashboard: acSetEditDashboard\n})(EditDashboard);","import i18n from '@dhis2/d2-i18n';\nimport cx from 'classnames';\nimport PropTypes from 'prop-types';\nimport React, { useState, useEffect } from 'react';\nimport { connect } from 'react-redux';\nimport { Redirect } from 'react-router-dom';\nimport { acSetEditNewDashboard } from '../../actions/editDashboard';\nimport DashboardContainer from '../../components/DashboardContainer';\nimport { useWindowDimensions } from '../../components/WindowDimensionsProvider';\nimport { setHeaderbarVisible } from '../../modules/setHeaderbarVisible';\nimport { isSmallScreen } from '../../modules/smallScreen';\nimport { sGetIsPrintPreviewView } from '../../reducers/editDashboard';\nimport LayoutPrintPreview from '../print/PrintLayoutDashboard';\nimport ActionsBar from './ActionsBar';\nimport ItemGrid from './ItemGrid';\nimport NotSupportedNotice from './NotSupportedNotice';\nimport classes from './styles/NewDashboard.module.css';\nimport TitleBar from './TitleBar';\n\nconst NewDashboard = props => {\n  const {\n    width\n  } = useWindowDimensions();\n  const [redirectUrl, setRedirectUrl] = useState(null);\n  useEffect(() => {\n    if (isSmallScreen(width)) {\n      setRedirectUrl('/');\n      return;\n    }\n\n    setHeaderbarVisible(true);\n    props.setNewDashboard();\n  }, []);\n\n  if (redirectUrl) {\n    return /*#__PURE__*/React.createElement(Redirect, {\n      to: redirectUrl\n    });\n  }\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\n    className: cx(classes.container, 'dashboard-scroll-container')\n  }, /*#__PURE__*/React.createElement(ActionsBar, null), props.isPrintPreviewView ? /*#__PURE__*/React.createElement(LayoutPrintPreview, {\n    fromEdit: true\n  }) : /*#__PURE__*/React.createElement(DashboardContainer, null, /*#__PURE__*/React.createElement(TitleBar, null), /*#__PURE__*/React.createElement(ItemGrid, null))), /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.notice\n  }, /*#__PURE__*/React.createElement(NotSupportedNotice, {\n    className: classes.notSupportedNotice,\n    message: i18n.t('Creating dashboards on small screens is not supported. Resize your screen to return to create mode.')\n  })));\n};\n\nNewDashboard.propTypes = {\n  isPrintPreviewView: PropTypes.bool,\n  setNewDashboard: PropTypes.func\n};\n\nconst mapStateToProps = state => ({\n  isPrintPreviewView: sGetIsPrintPreviewView(state)\n});\n\nexport default connect(mapStateToProps, {\n  setNewDashboard: acSetEditNewDashboard\n})(NewDashboard);","import cx from 'classnames';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport { Item } from '../../components/Item/Item';\nimport { PRINT } from '../../modules/dashboardModes';\nimport { hasShape } from '../../modules/gridUtil';\nimport { orArray } from '../../modules/util';\nimport { sGetPrintDashboardItems } from '../../reducers/printDashboard';\nimport StaticGrid from './StaticGrid';\n\nconst PrintItemGrid = ({\n  dashboardItems\n}) => {\n  const getItemComponent = item => /*#__PURE__*/React.createElement(\"div\", {\n    key: item.i,\n    className: cx(item.type, 'print', 'oipp')\n  }, /*#__PURE__*/React.createElement(Item, {\n    item: item,\n    dashboardMode: PRINT\n  }));\n\n  const getItemComponents = items => items.map(item => getItemComponent(item));\n\n  return /*#__PURE__*/React.createElement(StaticGrid, {\n    className: \"print\",\n    layout: dashboardItems\n  }, getItemComponents(dashboardItems));\n};\n\nPrintItemGrid.propTypes = {\n  dashboardItems: PropTypes.array\n};\n\nconst mapStateToProps = state => {\n  return {\n    dashboardItems: orArray(sGetPrintDashboardItems(state)).filter(hasShape)\n  };\n};\n\nexport default connect(mapStateToProps)(PrintItemGrid);","import { useDataEngine } from '@dhis2/app-runtime';\nimport { Layer, CenteredContent, CircularLoader } from '@dhis2/ui';\nimport sortBy from 'lodash/sortBy';\nimport PropTypes from 'prop-types';\nimport React, { useState, useEffect } from 'react';\nimport { connect } from 'react-redux';\nimport { Redirect } from 'react-router-dom';\nimport { acSetPrintDashboard, acAddPrintDashboardItem, acRemovePrintDashboardItem, acUpdatePrintDashboardItem } from '../../actions/printDashboard';\nimport { apiFetchDashboard } from '../../api/fetchDashboard';\nimport { MAX_ITEM_GRID_HEIGHT_OIPP, MAX_ITEM_GRID_WIDTH_OIPP } from '../../modules/gridUtil';\nimport { PAGEBREAK, PRINT_TITLE_PAGE, SPACER } from '../../modules/itemTypes';\nimport { setHeaderbarVisible } from '../../modules/setHeaderbarVisible';\nimport PrintActionsBar from './ActionsBar';\nimport PrintInfo from './PrintInfo';\nimport PrintItemGrid from './PrintItemGrid';\nimport classes from './styles/PrintDashboard.module.css';\nimport './styles/print.css';\nimport './styles/print-oipp.css';\n\nconst PrintDashboard = ({\n  match,\n  setPrintDashboard,\n  addDashboardItem,\n  updateDashboardItem,\n  removeDashboardItem\n}) => {\n  var _match$params;\n\n  const dataEngine = useDataEngine();\n  const [redirectUrl, setRedirectUrl] = useState(null);\n  const [isLoading, setIsLoading] = useState(true);\n  const id = (match === null || match === void 0 ? void 0 : (_match$params = match.params) === null || _match$params === void 0 ? void 0 : _match$params.dashboardId) || null;\n  useEffect(() => {\n    const loadDashboard = async () => {\n      try {\n        const dashboard = await apiFetchDashboard(dataEngine, id); //sort the items by Y pos so they print in order of top to bottom\n\n        const sortedItems = sortBy(dashboard.dashboardItems, ['y', 'x']);\n        setPrintDashboard(Object.assign({}, dashboard, {\n          dashboardItems: sortedItems\n        })); // remove spacers - don't want empty pages\n\n        let spacerCount = 0;\n        sortedItems.forEach(item => {\n          if (item.type === SPACER) {\n            spacerCount += 1;\n            removeDashboardItem(item.id);\n          }\n        }); // Resize the items to the full page size\n\n        sortedItems.forEach(item => {\n          updateDashboardItem(Object.assign({}, item, {\n            w: MAX_ITEM_GRID_WIDTH_OIPP,\n            h: MAX_ITEM_GRID_HEIGHT_OIPP\n          }));\n        }); // insert page breaks into the document flow to create the \"pages\"\n        // when previewing the print\n\n        for (let i = 0; i < (sortedItems.length - spacerCount) * 2; i += 2) {\n          addDashboardItem({\n            type: PAGEBREAK,\n            position: i,\n            isStatic: false\n          });\n        }\n\n        addDashboardItem({\n          type: PRINT_TITLE_PAGE,\n          isOneItemPerPage: true\n        });\n        setIsLoading(false);\n      } catch (error) {\n        setRedirectUrl(id);\n        setIsLoading(false);\n      }\n    };\n\n    setHeaderbarVisible(false);\n    loadDashboard();\n  }, [id]);\n\n  if (redirectUrl) {\n    return /*#__PURE__*/React.createElement(Redirect, {\n      to: redirectUrl\n    });\n  }\n\n  if (isLoading) {\n    return /*#__PURE__*/React.createElement(Layer, {\n      translucent: true\n    }, /*#__PURE__*/React.createElement(CenteredContent, null, /*#__PURE__*/React.createElement(CircularLoader, null)));\n  }\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.container\n  }, /*#__PURE__*/React.createElement(PrintActionsBar, {\n    id: id\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.wrapper\n  }, /*#__PURE__*/React.createElement(PrintInfo, {\n    isLayout: false\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.pageOuter,\n    \"data-test\": \"print-oipp-page\"\n  }, /*#__PURE__*/React.createElement(PrintItemGrid, null))));\n};\n\nPrintDashboard.propTypes = {\n  addDashboardItem: PropTypes.func,\n  match: PropTypes.object,\n  removeDashboardItem: PropTypes.func,\n  setPrintDashboard: PropTypes.func,\n  updateDashboardItem: PropTypes.func\n};\nexport default connect(null, {\n  setPrintDashboard: acSetPrintDashboard,\n  addDashboardItem: acAddPrintDashboardItem,\n  removeDashboardItem: acRemovePrintDashboardItem,\n  updateDashboardItem: acUpdatePrintDashboardItem\n})(PrintDashboard);","import { validateReducer } from '../modules/util';\nexport const SET_DASHBOARDS_FILTER = 'SET_DASHBOARDS_FILTER';\nexport const CLEAR_DASHBOARDS_FILTER = 'CLEAR_DASHBOARDS_FILTER';\nexport const DEFAULT_STATE_DASHBOARDS_FILTER = '';\nexport default ((state = DEFAULT_STATE_DASHBOARDS_FILTER, action) => {\n  switch (action.type) {\n    case SET_DASHBOARDS_FILTER:\n      {\n        return validateReducer(action.value, DEFAULT_STATE_DASHBOARDS_FILTER);\n      }\n\n    case CLEAR_DASHBOARDS_FILTER:\n      {\n        return DEFAULT_STATE_DASHBOARDS_FILTER;\n      }\n\n    default:\n      return state;\n  }\n}); // selectors\n\nexport const sGetDashboardsFilter = state => state.dashboardsFilter;","import { Chip as UiChip, colors, IconStarFilled24 } from '@dhis2/ui';\nimport debounce from 'lodash/debounce';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport { Link } from 'react-router-dom';\nimport { apiPostDataStatistics } from '../../../api/dataStatistics';\nimport classes from './styles/Chip.module.css';\n\nconst Chip = ({\n  starred,\n  selected,\n  label,\n  dashboardId,\n  onClick\n}) => {\n  const chipProps = {\n    selected\n  };\n\n  if (starred) {\n    chipProps.icon = /*#__PURE__*/React.createElement(IconStarFilled24, {\n      color: selected ? colors.white : colors.grey600\n    });\n  }\n\n  const debouncedPostStatistics = debounce(() => apiPostDataStatistics('DASHBOARD_VIEW', dashboardId), 500);\n\n  const handleClick = () => {\n    debouncedPostStatistics();\n    onClick();\n  };\n\n  return /*#__PURE__*/React.createElement(Link, {\n    className: classes.link,\n    to: `/${dashboardId}`,\n    onClick: handleClick,\n    \"data-test\": \"dashboard-chip\"\n  }, /*#__PURE__*/React.createElement(UiChip, chipProps, label));\n};\n\nChip.propTypes = {\n  dashboardId: PropTypes.string.isRequired,\n  label: PropTypes.string.isRequired,\n  selected: PropTypes.bool.isRequired,\n  starred: PropTypes.bool.isRequired,\n  onClick: PropTypes.func.isRequired\n};\nexport default Chip;","import { colors } from '@dhis2/ui';\nimport PropTypes from 'prop-types';\nimport React from 'react';\n\nconst ClearIcon = ({\n  className\n}) => /*#__PURE__*/React.createElement(\"svg\", {\n  className: className,\n  fill: colors.grey800,\n  xmlns: \"http://www.w3.org/2000/svg\",\n  viewBox: \"0 0 24 24\"\n}, /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M19 6.41L17.59 5 12 10.59 6.41 5 5 6.41 10.59 12 5 17.59 6.41 19 12 13.41 17.59 19 19 17.59 13.41 12z\"\n}), /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M0 0h24v24H0z\",\n  fill: \"none\"\n}));\n\nClearIcon.propTypes = {\n  className: PropTypes.string\n};\nexport default ClearIcon;","import PropTypes from 'prop-types';\nimport React from 'react';\nimport ClearIcon from './assets/Clear';\nimport classes from './styles/ClearButton.module.css';\n\nconst ClearButton = ({\n  onClear\n}) => /*#__PURE__*/React.createElement(\"button\", {\n  className: classes.button,\n  onClick: onClear\n}, /*#__PURE__*/React.createElement(\"span\", null, /*#__PURE__*/React.createElement(ClearIcon, {\n  className: classes.icon,\n  color: \"action\"\n})));\n\nClearButton.propTypes = {\n  onClear: PropTypes.func.isRequired\n};\nexport default ClearButton;","import i18n from '@dhis2/d2-i18n';\nimport { colors, IconSearch16, IconSearch24 } from '@dhis2/ui';\nimport cx from 'classnames';\nimport PropTypes from 'prop-types';\nimport React, { useState } from 'react';\nimport { connect } from 'react-redux';\nimport { acSetDashboardsFilter, acClearDashboardsFilter } from '../../../actions/dashboardsFilter';\nimport { useWindowDimensions } from '../../../components/WindowDimensionsProvider';\nimport { isSmallScreen } from '../../../modules/smallScreen';\nimport { sGetDashboardsFilter } from '../../../reducers/dashboardsFilter';\nimport ClearButton from './ClearButton';\nimport classes from './styles/Filter.module.css';\nexport const KEYCODE_ENTER = 13;\nexport const KEYCODE_ESCAPE = 27;\n\nconst Filter = ({\n  clearDashboardsFilter,\n  expanded,\n  filterText,\n  setDashboardsFilter,\n  onKeypressEnter,\n  onSearchClicked\n}) => {\n  const [focusedClassName, setFocusedClassName] = useState('');\n  const [inputFocused, setInputFocus] = useState(false);\n  const {\n    width\n  } = useWindowDimensions();\n\n  const setFilterValue = event => {\n    event.preventDefault();\n    setDashboardsFilter(event.target.value);\n  };\n\n  const onKeyUp = event => {\n    switch (event.keyCode) {\n      case KEYCODE_ENTER:\n        onKeypressEnter();\n        clearDashboardsFilter();\n        break;\n\n      case KEYCODE_ESCAPE:\n        clearDashboardsFilter();\n        break;\n\n      default:\n        break;\n    }\n  };\n\n  const onFocus = event => {\n    event.preventDefault();\n    setFocusedClassName(classes.focused);\n  };\n\n  const onBlur = event => {\n    event.preventDefault();\n    setFocusedClassName('');\n  };\n\n  const onFocusInput = input => {\n    if (input && inputFocused && isSmallScreen(width)) {\n      return input.focus();\n    }\n  };\n\n  const activateSearchInput = () => {\n    onSearchClicked();\n    setInputFocus(true);\n  };\n\n  return /*#__PURE__*/React.createElement(\"span\", {\n    className: cx(classes.container, expanded ? classes.expanded : classes.collapsed)\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    className: classes.searchButton,\n    onClick: activateSearchInput\n  }, /*#__PURE__*/React.createElement(IconSearch24, {\n    color: colors.grey800\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: cx(classes.searchArea, `${focusedClassName}`),\n    onFocus: onFocus,\n    onBlur: onBlur\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.searchIconContainer\n  }, /*#__PURE__*/React.createElement(IconSearch16, {\n    color: colors.grey800\n  })), /*#__PURE__*/React.createElement(\"input\", {\n    className: classes.input,\n    type: \"text\",\n    placeholder: i18n.t('Search for a dashboard'),\n    onChange: setFilterValue,\n    onKeyUp: onKeyUp,\n    value: filterText,\n    \"data-test\": \"search-dashboard-input\",\n    ref: onFocusInput\n  }), filterText && /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.clearButtonContainer\n  }, /*#__PURE__*/React.createElement(ClearButton, {\n    onClear: clearDashboardsFilter\n  }))));\n};\n\nFilter.propTypes = {\n  clearDashboardsFilter: PropTypes.func,\n  expanded: PropTypes.bool,\n  filterText: PropTypes.string,\n  setDashboardsFilter: PropTypes.func,\n  onKeypressEnter: PropTypes.func,\n  onSearchClicked: PropTypes.func\n};\n\nconst mapStateToProps = state => ({\n  filterText: sGetDashboardsFilter(state)\n});\n\nconst mapDispatchToProps = {\n  setDashboardsFilter: acSetDashboardsFilter,\n  clearDashboardsFilter: acClearDashboardsFilter\n};\nexport default connect(mapStateToProps, mapDispatchToProps)(Filter);","import { SET_DASHBOARDS_FILTER, CLEAR_DASHBOARDS_FILTER } from '../reducers/dashboardsFilter'; // actions\n\nexport const acSetDashboardsFilter = value => ({\n  type: SET_DASHBOARDS_FILTER,\n  value\n});\nexport const acClearDashboardsFilter = () => ({\n  type: CLEAR_DASHBOARDS_FILTER\n});","import arraySort from 'd2-utilizr/lib/arraySort';\nexport const getFilteredDashboards = (dashboards, filterText) => {\n  const filteredDashboards = arraySort(Object.values(dashboards).filter(d => d.displayName.toLowerCase().includes(filterText.toLowerCase())), 'ASC', 'displayName');\n  return [...filteredDashboards.filter(d => d.starred), ...filteredDashboards.filter(d => !d.starred)];\n};","import i18n from '@dhis2/d2-i18n';\nimport { Button, Tooltip, colors, IconAdd24 } from '@dhis2/ui';\nimport cx from 'classnames';\nimport PropTypes from 'prop-types';\nimport React, { useState } from 'react';\nimport { connect } from 'react-redux';\nimport { Redirect, withRouter } from 'react-router-dom';\nimport { sGetAllDashboards } from '../../../reducers/dashboards';\nimport { sGetDashboardsFilter } from '../../../reducers/dashboardsFilter';\nimport { sGetSelectedId } from '../../../reducers/selected';\nimport Chip from './Chip';\nimport Filter from './Filter';\nimport { getFilteredDashboards } from './getFilteredDashboards';\nimport classes from './styles/Content.module.css';\n\nconst Content = ({\n  dashboards,\n  expanded,\n  filterText,\n  history,\n  selectedId,\n  onChipClicked,\n  onSearchClicked\n}) => {\n  const [redirectUrl, setRedirectUrl] = useState(null);\n\n  const onSelectDashboard = () => {\n    var _getFilteredDashboard;\n\n    const id = (_getFilteredDashboard = getFilteredDashboards(dashboards, filterText)[0]) === null || _getFilteredDashboard === void 0 ? void 0 : _getFilteredDashboard.id;\n\n    if (id) {\n      history.push(id);\n    }\n  };\n\n  const enterNewMode = () => {\n    setRedirectUrl('/new');\n  };\n\n  const getChips = () => getFilteredDashboards(dashboards, filterText).map(dashboard => /*#__PURE__*/React.createElement(Chip, {\n    key: dashboard.id,\n    label: dashboard.displayName,\n    starred: dashboard.starred,\n    dashboardId: dashboard.id,\n    selected: dashboard.id === selectedId,\n    onClick: onChipClicked\n  }));\n\n  const getControlsSmall = () => /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.controlsSmall\n  }, /*#__PURE__*/React.createElement(Filter, {\n    onKeypressEnter: onSelectDashboard,\n    onSearchClicked: onSearchClicked,\n    expanded: expanded\n  }));\n\n  const getControlsLarge = () => /*#__PURE__*/React.createElement(\"span\", {\n    className: classes.controlsLarge\n  }, /*#__PURE__*/React.createElement(Tooltip, {\n    content: i18n.t('Create a new dashboard')\n  }, /*#__PURE__*/React.createElement(Button, {\n    className: classes.newButton,\n    small: true,\n    icon: /*#__PURE__*/React.createElement(IconAdd24, {\n      color: colors.grey600\n    }),\n    onClick: enterNewMode,\n    dataTest: \"new-button\"\n  })), /*#__PURE__*/React.createElement(Filter, {\n    onKeypressEnter: onSelectDashboard,\n    onSearchClicked: onSearchClicked,\n    expanded: expanded\n  }));\n\n  if (redirectUrl) {\n    return /*#__PURE__*/React.createElement(Redirect, {\n      to: redirectUrl\n    });\n  }\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: cx(classes.container, expanded ? classes.expanded : classes.collapsed)\n  }, getControlsSmall(), /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.chipsContainer\n  }, getControlsLarge(), getChips()));\n};\n\nContent.propTypes = {\n  dashboards: PropTypes.object,\n  expanded: PropTypes.bool,\n  filterText: PropTypes.string,\n  history: PropTypes.object,\n  selectedId: PropTypes.string,\n  onChipClicked: PropTypes.func,\n  onSearchClicked: PropTypes.func\n};\n\nconst mapStateToProps = state => ({\n  dashboards: sGetAllDashboards(state),\n  selectedId: sGetSelectedId(state),\n  filterText: sGetDashboardsFilter(state)\n});\n\nexport default withRouter(connect(mapStateToProps)(Content));","import PropTypes from 'prop-types';\nimport React, { useState } from 'react';\nimport classes from './styles/DragHandle.module.css';\n\nconst DragHandle = ({\n  onHeightChanged,\n  setDragging\n}) => {\n  const [startingY, setStartingY] = useState(0);\n\n  const onStartDrag = e => {\n    setStartingY(e.clientY);\n    setDragging(true);\n    window.addEventListener('mousemove', onDrag);\n    window.addEventListener('mouseup', onEndDrag);\n  };\n\n  const onDrag = e => {\n    e.preventDefault();\n    e.stopPropagation();\n    const currentY = e.clientY;\n\n    if (currentY !== startingY && currentY > 0) {\n      requestAnimationFrame(() => {\n        onHeightChanged(currentY);\n      });\n    }\n  };\n\n  const onEndDrag = () => {\n    setDragging(false);\n    window.removeEventListener('mousemove', onDrag);\n    window.removeEventListener('mouseup', onEndDrag);\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.draghandle,\n    onMouseDown: onStartDrag,\n    \"data-test\": \"controlbar-drag-handle\"\n  });\n};\n\nDragHandle.propTypes = {\n  setDragging: PropTypes.func,\n  onHeightChanged: PropTypes.func\n};\nexport default /*#__PURE__*/React.memo(DragHandle, () => true);","const ROW_HEIGHT = 40;\nconst PADDING_TOP = 10;\nconst SHOWMORE_BUTTON_HEIGHT = 21; // 27px - 6px below bottom edge of ctrlbar\n\nexport const getRowsFromHeight = height => {\n  return Math.round((height - SHOWMORE_BUTTON_HEIGHT - PADDING_TOP) / ROW_HEIGHT);\n};","import React from 'react';\nexport const ChevronDown = () => /*#__PURE__*/React.createElement(\"svg\", {\n  height: \"24\",\n  viewBox: \"0 0 24 24\",\n  width: \"24\",\n  xmlns: \"http://www.w3.org/2000/svg\"\n}, /*#__PURE__*/React.createElement(\"path\", {\n  d: \"m11.29289 15.7071c.39053.3905 1.02369.3905 1.41422 0l4.99999-4.99999c.3905-.39053.3905-1.02369 0-1.41422-.3905-.39052-1.0237-.39052-1.4142 0l-4.2929 4.2929-4.29289-4.2929c-.39053-.39052-1.02369-.39052-1.41422 0-.39052.39053-.39052 1.02369 0 1.41422z\",\n  fill: \"#a0adba\"\n}));\nexport const ChevronUp = () => /*#__PURE__*/React.createElement(\"svg\", {\n  height: \"24\",\n  viewBox: \"0 0 24 24\",\n  width: \"24\",\n  xmlns: \"http://www.w3.org/2000/svg\"\n}, /*#__PURE__*/React.createElement(\"path\", {\n  d: \"m11.2928932 8.29289322c.360484-.36048396.927715-.3882135 1.3200062-.08318861l.0942074.08318861 5 4.99999998c.3905243.3905243.3905243 1.0236893 0 1.4142136-.360484.3604839-.927715.3882135-1.3200062.0831886l-.0942074-.0831886-4.2928932-4.2921068-4.29289322 4.2921068c-.36048396.3604839-.92771502.3882135-1.32000622.0831886l-.09420734-.0831886c-.36048396-.360484-.3882135-.927715-.08318861-1.3200062l.08318861-.0942074z\",\n  fill: \"#a0adba\"\n}));","import i18n from '@dhis2/d2-i18n';\nimport { Tooltip } from '@dhis2/ui';\nimport PropTypes from 'prop-types';\nimport React, { useRef } from 'react';\nimport { ChevronDown, ChevronUp } from './assets/icons';\nimport classes from './styles/ShowMoreButton.module.css';\n\nconst ShowMoreButton = ({\n  onClick,\n  dashboardBarIsExpanded,\n  disabled\n}) => {\n  const containerRef = useRef(null);\n  const buttonLabel = dashboardBarIsExpanded ? i18n.t('Show fewer dashboards') : i18n.t('Show more dashboards');\n\n  const onButtonClicked = () => {\n    // The click may happen on the svg or path\n    // element of the button icon.\n    // In that case it is necessary to trigger\n    // the mouseout on the button element\n    // to ensure that the tooltip is removed\n    const buttonEl = containerRef.current.children[0];\n    const event = new MouseEvent('mouseout', {\n      bubbles: true,\n      cancelable: false\n    });\n    onClick();\n    buttonEl.dispatchEvent(event);\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.container,\n    ref: containerRef\n  }, disabled ? /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.disabled\n  }, /*#__PURE__*/React.createElement(ChevronDown, null)) : /*#__PURE__*/React.createElement(Tooltip, {\n    content: buttonLabel,\n    placement: \"bottom\"\n  }, ({\n    onMouseOver,\n    onMouseOut,\n    ref\n  }) => /*#__PURE__*/React.createElement(\"button\", {\n    className: classes.showMore,\n    onClick: onButtonClicked,\n    \"data-test\": \"showmore-button\",\n    \"aria-label\": buttonLabel,\n    ref: ref,\n    onMouseOver: onMouseOver,\n    onMouseOut: onMouseOut\n  }, dashboardBarIsExpanded ? /*#__PURE__*/React.createElement(ChevronUp, null) : /*#__PURE__*/React.createElement(ChevronDown, null))));\n};\n\nShowMoreButton.propTypes = {\n  dashboardBarIsExpanded: PropTypes.bool,\n  disabled: PropTypes.bool,\n  onClick: PropTypes.func\n};\nexport default ShowMoreButton;","import cx from 'classnames';\nimport PropTypes from 'prop-types';\nimport React, { useState, useRef, useEffect, createRef } from 'react';\nimport { connect } from 'react-redux';\nimport { acSetControlBarUserRows } from '../../../actions/controlBar';\nimport { apiPostControlBarRows } from '../../../api/controlBar';\nimport { useWindowDimensions } from '../../../components/WindowDimensionsProvider';\nimport { sGetControlBarUserRows } from '../../../reducers/controlBar';\nimport Content from './Content';\nimport DragHandle from './DragHandle';\nimport { getRowsFromHeight } from './getRowsFromHeight';\nimport ShowMoreButton from './ShowMoreButton';\nimport classes from './styles/DashboardsBar.module.css';\nexport const MIN_ROW_COUNT = 1;\nexport const MAX_ROW_COUNT = 10;\n\nconst DashboardsBar = ({\n  userRows,\n  updateUserRows,\n  expanded,\n  onExpandedChanged\n}) => {\n  const [dragging, setDragging] = useState(false);\n  const [mouseYPos, setMouseYPos] = useState(0);\n  const userRowsChanged = useRef(false);\n  const ref = /*#__PURE__*/createRef();\n  const {\n    height\n  } = useWindowDimensions();\n  const rootElement = document.documentElement;\n  useEffect(() => {\n    if (mouseYPos === 0) {\n      return;\n    }\n\n    const newRows = Math.max(MIN_ROW_COUNT, getRowsFromHeight(mouseYPos - 52) // don't rush the transition to a bigger row count\n    );\n\n    if (newRows < MAX_ROW_COUNT) {\n      onExpandedChanged(false);\n    }\n\n    if (newRows !== userRows) {\n      updateUserRows(Math.min(newRows, MAX_ROW_COUNT));\n      userRowsChanged.current = true;\n    }\n  }, [mouseYPos]);\n  useEffect(() => {\n    rootElement.style.setProperty('--user-rows-count', userRows);\n  }, [userRows]);\n  useEffect(() => {\n    const vh = height * 0.01;\n    rootElement.style.setProperty('--vh', `${vh}px`);\n  }, [height]);\n  useEffect(() => {\n    if (!dragging && userRowsChanged.current) {\n      apiPostControlBarRows(userRows);\n      userRowsChanged.current = false;\n    }\n  }, [dragging, userRowsChanged.current]);\n\n  const scrollToTop = () => {\n    if (expanded) {\n      ref.current.scroll(0, 0);\n    }\n  };\n\n  const toggleExpanded = () => {\n    if (expanded) {\n      cancelExpanded();\n    } else {\n      scrollToTop();\n      onExpandedChanged(!expanded);\n    }\n  };\n\n  const cancelExpanded = () => {\n    scrollToTop();\n    onExpandedChanged(false);\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: expanded ? classes.expanded : classes.collapsed,\n    \"data-test\": \"dashboards-bar\"\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: cx(classes.container)\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.content,\n    ref: ref\n  }, /*#__PURE__*/React.createElement(Content, {\n    onChipClicked: cancelExpanded,\n    onSearchClicked: toggleExpanded,\n    expanded: expanded\n  })), /*#__PURE__*/React.createElement(ShowMoreButton, {\n    onClick: toggleExpanded,\n    dashboardBarIsExpanded: expanded,\n    disabled: !expanded && userRows === MAX_ROW_COUNT\n  }), /*#__PURE__*/React.createElement(DragHandle, {\n    setDragging: setDragging,\n    onHeightChanged: setMouseYPos\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: cx(classes.spacer)\n  }));\n};\n\nDashboardsBar.propTypes = {\n  expanded: PropTypes.bool,\n  updateUserRows: PropTypes.func,\n  userRows: PropTypes.number,\n  onExpandedChanged: PropTypes.func\n};\nDashboardsBar.defaultProps = {\n  expanded: false,\n  onExpandedChanged: Function.prototype\n};\n\nconst mapStateToProps = state => ({\n  userRows: sGetControlBarUserRows(state)\n});\n\nconst mapDispatchToProps = {\n  updateUserRows: acSetControlBarUserRows\n};\nexport default connect(mapStateToProps, mapDispatchToProps)(DashboardsBar);","export const REGISTER_PASSIVE_VIEW = 'REGISTER_PASSIVE_VIEW';\nexport default ((state = false, action) => {\n  switch (action.type) {\n    case REGISTER_PASSIVE_VIEW:\n      {\n        return true;\n      }\n\n    default:\n      return state;\n  }\n});\nexport const sGetPassiveViewRegistered = state => state.passiveViewRegistered;","export const SET_ACTIVE_MODAL_DIMENSION = 'SET_ACTIVE_MODAL_DIMENSION';\nexport const CLEAR_ACTIVE_MODAL_DIMENSION = 'CLEAR_ACTIVE_MODAL_DIMENSION';\nexport const DEFAULT_STATE_ACTIVE_MODAL_DIMENSION = {};\nexport default ((state = DEFAULT_STATE_ACTIVE_MODAL_DIMENSION, action) => {\n  switch (action.type) {\n    case SET_ACTIVE_MODAL_DIMENSION:\n      {\n        return action.value;\n      }\n\n    case CLEAR_ACTIVE_MODAL_DIMENSION:\n      {\n        return DEFAULT_STATE_ACTIVE_MODAL_DIMENSION;\n      }\n\n    default:\n      return state;\n  }\n});\nexport const sGetActiveModalDimension = state => state.activeModalDimension;","import { SET_ACTIVE_MODAL_DIMENSION, CLEAR_ACTIVE_MODAL_DIMENSION } from '../reducers/activeModalDimension';\nexport const acSetActiveModalDimension = value => ({\n  type: SET_ACTIVE_MODAL_DIMENSION,\n  value\n});\nexport const acClearActiveModalDimension = () => ({\n  type: CLEAR_ACTIVE_MODAL_DIMENSION\n});","import i18n from '@dhis2/d2-i18n';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport { acSetActiveModalDimension } from '../../../actions/activeModalDimension';\nimport { acRemoveItemFilter } from '../../../actions/itemFilters';\nimport classes from './styles/FilterBadge.module.css';\n\nconst FilterBadge = ({\n  filter,\n  openFilterModal,\n  removeFilter\n}) => {\n  const filterText = `${filter.name}: ${filter.values.length > 1 ? i18n.t('{{count}} selected', {\n    count: filter.values.length\n  }) : filter.values[0].name}`;\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.container,\n    \"data-test\": \"dashboard-filter-badge\"\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    className: classes.badge,\n    onClick: () => openFilterModal({\n      id: filter.id,\n      name: filter.name\n    })\n  }, filterText), /*#__PURE__*/React.createElement(\"span\", {\n    className: classes.badgeSmall\n  }, filterText), /*#__PURE__*/React.createElement(\"span\", {\n    className: classes.removeButton,\n    onClick: () => removeFilter(filter.id)\n  }, i18n.t('Remove')));\n};\n\nFilterBadge.propTypes = {\n  filter: PropTypes.object.isRequired,\n  openFilterModal: PropTypes.func.isRequired,\n  removeFilter: PropTypes.func.isRequired\n};\nexport default connect(null, {\n  openFilterModal: acSetActiveModalDimension,\n  removeFilter: acRemoveItemFilter\n})(FilterBadge);","import PropTypes from 'prop-types';\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport { sGetNamedItemFilters } from '../../../reducers/itemFilters';\nimport FilterBadge from './FilterBadge';\nimport classes from './styles/FilterBar.module.css';\n\nconst FilterBar = ({\n  filters\n}) => filters.length ? /*#__PURE__*/React.createElement(\"div\", {\n  className: classes.bar\n}, filters.map(filter => /*#__PURE__*/React.createElement(FilterBadge, {\n  key: filter.id,\n  filter: filter\n}))) : null;\n\nFilterBar.propTypes = {\n  filters: PropTypes.array.isRequired\n};\nFilterBar.defaultProps = {\n  filters: []\n};\n\nconst mapStateToProps = state => ({\n  filters: sGetNamedItemFilters(state)\n});\n\nexport default connect(mapStateToProps)(FilterBar);","import i18n from '@dhis2/d2-i18n';\nimport cx from 'classnames';\nimport PropTypes from 'prop-types';\nimport React, { useState, useEffect } from 'react';\nimport { Responsive as ResponsiveReactGridLayout } from 'react-grid-layout';\nimport { connect } from 'react-redux';\nimport { Item } from '../../components/Item/Item';\nimport NoContentMessage from '../../components/NoContentMessage';\nimport ProgressiveLoadingContainer from '../../components/ProgressiveLoadingContainer';\nimport { useWindowDimensions } from '../../components/WindowDimensionsProvider';\nimport { VIEW } from '../../modules/dashboardModes';\nimport { getGridItemDomElementClassName } from '../../modules/getGridItemDomElementClassName';\nimport { GRID_ROW_HEIGHT_PX, SM_SCREEN_GRID_COLUMNS, GRID_COMPACT_TYPE, GRID_PADDING_PX, MARGIN_PX, MARGIN_SM_PX, GRID_COLUMNS, getSmallLayout, getGridWidth, getProportionalHeight } from '../../modules/gridUtil';\nimport { getBreakpoint, isSmallScreen } from '../../modules/smallScreen';\nimport { sGetSelectedDashboardItems } from '../../reducers/selected';\nimport classes from './styles/ItemGrid.module.css';\nconst EXPANDED_HEIGHT = 17;\nconst EXPANDED_HEIGHT_SM = 13;\n\nconst ResponsiveItemGrid = ({\n  dashboardItems\n}) => {\n  const {\n    width\n  } = useWindowDimensions();\n  const [expandedItems, setExpandedItems] = useState({});\n  const [displayItems, setDisplayItems] = useState(dashboardItems);\n  const [layoutSm, setLayoutSm] = useState([]);\n  const [gridWidth, setGridWidth] = useState(0);\n  useEffect(() => {\n    setLayoutSm(getItemsWithAdjustedHeight(getSmallLayout(dashboardItems, width)));\n    setDisplayItems(getItemsWithAdjustedHeight(dashboardItems));\n  }, [expandedItems, width, dashboardItems]);\n\n  const onToggleItemExpanded = clickedId => {\n    const isExpanded = typeof expandedItems[clickedId] === 'boolean' ? expandedItems[clickedId] : false;\n    const newExpandedItems = { ...expandedItems\n    };\n    newExpandedItems[clickedId] = !isExpanded;\n    setExpandedItems(newExpandedItems);\n  };\n\n  const getItemsWithAdjustedHeight = items => items.map(item => {\n    const expandedItem = expandedItems[item.id];\n\n    if (expandedItem && expandedItem === true) {\n      const expandedHeight = isSmallScreen(width) ? EXPANDED_HEIGHT_SM : EXPANDED_HEIGHT;\n      return Object.assign({}, item, {\n        h: item.h + expandedHeight,\n        smallOriginalH: getProportionalHeight(item, width)\n      });\n    }\n\n    return item;\n  });\n\n  const getItemComponent = item => {\n    if (!layoutSm.length) {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        key: item.i\n      });\n    }\n\n    return /*#__PURE__*/React.createElement(ProgressiveLoadingContainer, {\n      key: item.i,\n      className: cx(item.type, 'view', getGridItemDomElementClassName(item.id)),\n      itemId: item.id\n    }, /*#__PURE__*/React.createElement(Item, {\n      item: item,\n      gridWidth: gridWidth,\n      dashboardMode: VIEW,\n      onToggleItemExpanded: onToggleItemExpanded\n    }));\n  };\n\n  const getItemComponents = items => items.map(item => getItemComponent(item));\n\n  const onWidthChanged = containerWidth => setTimeout(() => setGridWidth(containerWidth), 200);\n\n  if (!dashboardItems.length) {\n    return /*#__PURE__*/React.createElement(NoContentMessage, {\n      text: i18n.t('There are no items on this dashboard')\n    });\n  }\n\n  return /*#__PURE__*/React.createElement(ResponsiveReactGridLayout, {\n    className: classes.grid,\n    rowHeight: GRID_ROW_HEIGHT_PX,\n    width: getGridWidth(width),\n    cols: {\n      lg: GRID_COLUMNS,\n      sm: SM_SCREEN_GRID_COLUMNS\n    },\n    breakpoints: {\n      lg: getBreakpoint(),\n      sm: 0\n    },\n    layouts: {\n      lg: displayItems,\n      sm: layoutSm\n    },\n    compactType: GRID_COMPACT_TYPE,\n    margin: isSmallScreen(width) ? MARGIN_SM_PX : MARGIN_PX,\n    containerPadding: {\n      lg: GRID_PADDING_PX,\n      sm: GRID_PADDING_PX\n    },\n    isDraggable: false,\n    isResizable: false,\n    draggableCancel: \"input,textarea\",\n    onWidthChange: onWidthChanged\n  }, getItemComponents(displayItems));\n};\n\nResponsiveItemGrid.propTypes = {\n  dashboardItems: PropTypes.array\n};\n\nconst mapStateToProps = state => ({\n  dashboardItems: sGetSelectedDashboardItems(state)\n});\n\nexport default connect(mapStateToProps)(ResponsiveItemGrid);","import _JSXStyle from \"styled-jsx/style\";\nimport propTypes from '@dhis2/prop-types';\nimport React from 'react';\nexport function ArrowDown({\n  className\n}) {\n  return /*#__PURE__*/React.createElement(\"svg\", {\n    xmlns: \"http://www.w3.org/2000/svg\",\n    viewBox: \"0 0 12 12\",\n    className: \"jsx-2347926856\" + \" \" + (className || \"\")\n  }, /*#__PURE__*/React.createElement(\"path\", {\n    d: \"m5.29289 8.7071c.39053.3905 1.02369.3905 1.41422 0l2.99999-2.99999c.3905-.39053.3905-1.02369 0-1.41422-.3905-.39052-1.0237-.39052-1.4142 0l-2.2929 2.2929-2.29289-2.2929c-.39053-.39052-1.02369-.39052-1.41422 0-.39052.39053-.39052 1.02369 0 1.41422z\",\n    className: \"jsx-2347926856\"\n  }), /*#__PURE__*/React.createElement(_JSXStyle, {\n    id: \"2347926856\"\n  }, [\"svg.jsx-2347926856{fill:inherit;height:12px;width:12px;vertical-align:middle;pointer-events:none;}\"]));\n}\nArrowDown.propTypes = {\n  className: propTypes.string\n};\nexport function ArrowUp({\n  className\n}) {\n  return /*#__PURE__*/React.createElement(\"svg\", {\n    xmlns: \"http://www.w3.org/2000/svg\",\n    viewBox: \"0 0 12 12\",\n    className: \"jsx-2347926856\" + \" \" + (className || \"\")\n  }, /*#__PURE__*/React.createElement(\"path\", {\n    d: \"m5.29289 8.7071c.39053.3905 1.02369.3905 1.41422 0l2.99999-2.99999c.3905-.39053.3905-1.02369 0-1.41422-.3905-.39052-1.0237-.39052-1.4142 0l-2.2929 2.2929-2.29289-2.2929c-.39053-.39052-1.02369-.39052-1.41422 0-.39052.39053-.39052 1.02369 0 1.41422z\",\n    transform: \"matrix(1 0 0 -1 0 12.999974)\",\n    className: \"jsx-2347926856\"\n  }), /*#__PURE__*/React.createElement(_JSXStyle, {\n    id: \"2347926856\"\n  }, [\"svg.jsx-2347926856{fill:inherit;height:12px;width:12px;vertical-align:middle;pointer-events:none;}\"]));\n}\nArrowUp.propTypes = {\n  className: propTypes.string\n};","import { Button, Layer, Popper } from '@dhis2/ui';\nimport PropTypes from 'prop-types';\nimport React, { useRef } from 'react';\nimport { ArrowDown, ArrowUp } from './assets/Arrow';\nimport styles from './DropdownButton.module.css';\n\nconst DropdownButton = ({\n  children,\n  className,\n  icon,\n  open,\n  onClick,\n  component,\n  small\n}) => {\n  const anchorRef = useRef();\n  const ArrowIconComponent = open ? ArrowUp : ArrowDown;\n  return /*#__PURE__*/React.createElement(\"div\", {\n    ref: anchorRef\n  }, /*#__PURE__*/React.createElement(Button, {\n    className: className,\n    onClick: onClick,\n    type: \"button\",\n    small: small,\n    icon: icon\n  }, children, /*#__PURE__*/React.createElement(ArrowIconComponent, {\n    className: styles.arrow\n  })), open && /*#__PURE__*/React.createElement(Layer, {\n    onClick: onClick,\n    transparent: true\n  }, /*#__PURE__*/React.createElement(Popper, {\n    placement: \"bottom-start\",\n    reference: anchorRef\n  }, component)));\n};\n\nDropdownButton.propTypes = {\n  component: PropTypes.element.isRequired,\n  open: PropTypes.bool.isRequired,\n  onClick: PropTypes.func.isRequired,\n  children: PropTypes.node,\n  className: PropTypes.string,\n  icon: PropTypes.element,\n  small: PropTypes.bool\n};\nexport default DropdownButton;","function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nimport { PeriodDimension, DynamicDimension, OrgUnitDimension, DIMENSION_ID_PERIOD, DIMENSION_ID_ORGUNIT, DAILY, WEEKLY, WEEKLYWED, WEEKLYTHU, WEEKLYSAT, WEEKLYSUN, BIWEEKLY, MONTHLY, BIMONTHLY } from '@dhis2/analytics';\nimport { useD2 } from '@dhis2/app-runtime-adapter-d2';\nimport i18n from '@dhis2/d2-i18n';\nimport { Button, Modal, ModalTitle, ModalContent, ModalActions, ButtonStrip } from '@dhis2/ui';\nimport PropTypes from 'prop-types';\nimport React, { useState } from 'react';\nimport { connect } from 'react-redux';\nimport { acAddItemFilter, acRemoveItemFilter } from '../../../actions/itemFilters';\nimport { useSystemSettings } from '../../../components/SystemSettingsProvider';\nimport { useUserSettings } from '../../../components/UserSettingsProvider';\nimport { sGetItemFiltersRoot } from '../../../reducers/itemFilters';\n\nconst FilterDialog = ({\n  dimension,\n  initiallySelectedItems,\n  addItemFilter,\n  removeItemFilter,\n  onClose\n}) => {\n  const [filters, setFilters] = useState(initiallySelectedItems);\n  const {\n    d2\n  } = useD2();\n  const {\n    userSettings\n  } = useUserSettings();\n  const {\n    settings: systemSettings\n  } = useSystemSettings();\n\n  const onSelectItems = ({\n    dimensionId,\n    items\n  }) => {\n    setFilters({\n      [dimensionId]: items\n    });\n  };\n\n  const onDeselectItems = ({\n    dimensionId,\n    itemIdsToRemove\n  }) => {\n    const oldList = filters[dimensionId] || [];\n    const newList = oldList.filter(item => !itemIdsToRemove.includes(item.id));\n    setFilters({ ...filters,\n      [dimensionId]: newList\n    });\n  };\n\n  const onReorderItems = ({\n    dimensionId,\n    itemIds\n  }) => {\n    const oldList = filters[dimensionId] || [];\n    const reorderedList = itemIds.map(id => oldList.find(item => item.id === id));\n    setFilters({ ...filters,\n      [dimensionId]: reorderedList\n    });\n  };\n\n  const saveFilter = () => {\n    const id = dimension.id;\n    const filterItems = filters[id];\n\n    if (filterItems && filterItems.length) {\n      addItemFilter({\n        id,\n        value: [...filterItems]\n      });\n    } else {\n      removeItemFilter(id);\n    }\n\n    onClose(id);\n  };\n\n  const getExcludedPeriodTypes = (settings = {}) => {\n    const types = [];\n\n    if (settings['hideDailyPeriods']) {\n      types.push(DAILY);\n    }\n\n    if (settings['hideWeeklyPeriods']) {\n      types.push(WEEKLY, WEEKLYWED, WEEKLYTHU, WEEKLYSAT, WEEKLYSUN);\n    }\n\n    if (settings['hideBiWeeklyPeriods']) {\n      types.push(BIWEEKLY);\n    }\n\n    if (settings['hideMonthlyPeriods']) {\n      types.push(MONTHLY);\n    }\n\n    if (settings['hideBiMonthlyPeriods']) {\n      types.push(BIMONTHLY);\n    }\n\n    return types;\n  };\n\n  const renderDialogContent = () => {\n    const commonProps = {\n      d2,\n      onSelect: onSelectItems,\n      onDeselect: onDeselectItems,\n      onReorder: onReorderItems\n    };\n    const selectedItems = filters[dimension.id] || [];\n\n    switch (dimension.id) {\n      case DIMENSION_ID_PERIOD:\n        {\n          return /*#__PURE__*/React.createElement(PeriodDimension, {\n            selectedPeriods: selectedItems,\n            onSelect: commonProps.onSelect,\n            excludedPeriodTypes: getExcludedPeriodTypes(systemSettings)\n          });\n        }\n\n      case DIMENSION_ID_ORGUNIT:\n        return /*#__PURE__*/React.createElement(OrgUnitDimension, _extends({\n          displayNameProperty: userSettings.keyAnalysisDisplayProperty,\n          ouItems: selectedItems\n        }, commonProps));\n\n      default:\n        return /*#__PURE__*/React.createElement(DynamicDimension, {\n          selectedItems: selectedItems,\n          dimensionId: dimension.id,\n          onSelect: commonProps.onSelect,\n          dimensionTitle: dimension.name,\n          displayNameProp: userSettings.keyAnalysisDisplayProperty\n        });\n    }\n  };\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, dimension.id && /*#__PURE__*/React.createElement(Modal, {\n    dataTest: \"dimension-modal\",\n    onClose: onClose,\n    position: \"top\",\n    large: true\n  }, /*#__PURE__*/React.createElement(ModalTitle, null, dimension.name), /*#__PURE__*/React.createElement(ModalContent, null, renderDialogContent()), /*#__PURE__*/React.createElement(ModalActions, null, /*#__PURE__*/React.createElement(ButtonStrip, null, /*#__PURE__*/React.createElement(Button, {\n    secondary: true,\n    onClick: onClose\n  }, i18n.t('Cancel')), /*#__PURE__*/React.createElement(Button, {\n    primary: true,\n    onClick: saveFilter\n  }, i18n.t('Confirm'))))));\n};\n\nFilterDialog.propTypes = {\n  addItemFilter: PropTypes.func,\n  dimension: PropTypes.object,\n  initiallySelectedItems: PropTypes.object,\n  removeItemFilter: PropTypes.func,\n  onClose: PropTypes.func\n};\n\nconst mapStateToProps = state => ({\n  initiallySelectedItems: sGetItemFiltersRoot(state)\n});\n\nexport default connect(mapStateToProps, {\n  addItemFilter: acAddItemFilter,\n  removeItemFilter: acRemoveItemFilter\n})(FilterDialog);","import { DimensionsPanel } from '@dhis2/analytics';\nimport i18n from '@dhis2/d2-i18n';\nimport { Card, colors, IconFilter24 } from '@dhis2/ui';\nimport isEmpty from 'lodash/isEmpty';\nimport PropTypes from 'prop-types';\nimport React, { useState } from 'react';\nimport { connect } from 'react-redux';\nimport { acClearActiveModalDimension, acSetActiveModalDimension } from '../../../actions/activeModalDimension';\nimport DropdownButton from '../../../components/DropdownButton/DropdownButton';\nimport useDimensions from '../../../modules/useDimensions';\nimport { sGetActiveModalDimension } from '../../../reducers/activeModalDimension';\nimport { sGetItemFiltersRoot } from '../../../reducers/itemFilters';\nimport FilterDialog from './FilterDialog';\nimport classes from './styles/FilterSelector.module.css';\n\nconst FilterSelector = props => {\n  var _props$allowedFilters;\n\n  const [filterDialogIsOpen, setFilterDialogIsOpen] = useState(false);\n  const dimensions = useDimensions(filterDialogIsOpen);\n\n  const toggleFilterDialogIsOpen = () => setFilterDialogIsOpen(!filterDialogIsOpen);\n\n  const onCloseDialog = () => {\n    setFilterDialogIsOpen(false);\n    props.clearActiveModalDimension();\n  };\n\n  const selectDimension = id => {\n    props.setActiveModalDimension(dimensions.find(dimension => dimension.id === id));\n  };\n\n  const filterDimensions = () => {\n    if (!props.restrictFilters) {\n      return dimensions;\n    } else {\n      return dimensions.filter(d => [...props.allowedFilters].includes(d.id));\n    }\n  };\n\n  const getFilterSelector = () => /*#__PURE__*/React.createElement(Card, {\n    dataTest: \"dashboard-filter-popover\"\n  }, /*#__PURE__*/React.createElement(DimensionsPanel, {\n    style: {\n      width: '320px'\n    },\n    dimensions: filterDimensions(),\n    onDimensionClick: selectDimension,\n    selectedIds: Object.keys(props.initiallySelectedItems)\n  }));\n\n  return props.restrictFilters && !((_props$allowedFilters = props.allowedFilters) !== null && _props$allowedFilters !== void 0 && _props$allowedFilters.length) ? null : /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"span\", {\n    className: classes.buttonContainer\n  }, /*#__PURE__*/React.createElement(DropdownButton, {\n    open: filterDialogIsOpen,\n    onClick: toggleFilterDialogIsOpen,\n    icon: /*#__PURE__*/React.createElement(IconFilter24, {\n      color: colors.grey700\n    }),\n    component: getFilterSelector()\n  }, i18n.t('Add filter'))), !isEmpty(props.dimension) ? /*#__PURE__*/React.createElement(FilterDialog, {\n    dimension: props.dimension,\n    onClose: onCloseDialog\n  }) : null);\n};\n\nconst mapStateToProps = state => ({\n  dimension: sGetActiveModalDimension(state),\n  initiallySelectedItems: sGetItemFiltersRoot(state)\n});\n\nFilterSelector.propTypes = {\n  allowedFilters: PropTypes.array,\n  clearActiveModalDimension: PropTypes.func,\n  dimension: PropTypes.object,\n  initiallySelectedItems: PropTypes.object,\n  restrictFilters: PropTypes.bool,\n  setActiveModalDimension: PropTypes.func\n};\nexport default connect(mapStateToProps, {\n  clearActiveModalDimension: acClearActiveModalDimension,\n  setActiveModalDimension: acSetActiveModalDimension\n})(FilterSelector);","import i18n from '@dhis2/d2-i18n';\nimport { Tooltip, IconStar24, IconStarFilled24, colors } from '@dhis2/ui';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport classes from './styles/StarDashboardButton.module.css';\n\nconst StarDashboardButton = ({\n  starred,\n  onClick\n}) => {\n  const StarIcon = starred ? IconStarFilled24 : IconStar24;\n\n  const handleOnClick = () => onClick();\n\n  let tooltipContent;\n\n  if (starred) {\n    tooltipContent = i18n.t('Unstar dashboard');\n  } else {\n    tooltipContent = i18n.t('Star dashboard');\n  }\n\n  return /*#__PURE__*/React.createElement(\"button\", {\n    className: classes.star,\n    onClick: handleOnClick,\n    \"data-test\": \"button-star-dashboard\"\n  }, /*#__PURE__*/React.createElement(Tooltip, {\n    content: tooltipContent\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    \"data-test\": starred ? 'dashboard-starred' : 'dashboard-unstarred'\n  }, /*#__PURE__*/React.createElement(StarIcon, {\n    color: colors.grey600\n  }))));\n};\n\nStarDashboardButton.propTypes = {\n  starred: PropTypes.bool,\n  onClick: PropTypes.func\n};\nStarDashboardButton.defaultProps = {\n  onClick: Function.prototype\n};\nexport default StarDashboardButton;","import { useDataEngine, useAlert } from '@dhis2/app-runtime';\nimport { useD2 } from '@dhis2/app-runtime-adapter-d2';\nimport i18n from '@dhis2/d2-i18n';\nimport SharingDialog from '@dhis2/d2-ui-sharing-dialog';\nimport { Button, FlyoutMenu, MenuItem, colors, IconMore24 } from '@dhis2/ui';\nimport PropTypes from 'prop-types';\nimport React, { useState } from 'react';\nimport { connect } from 'react-redux';\nimport { Redirect } from 'react-router-dom';\nimport { acSetDashboardStarred } from '../../../actions/dashboards';\nimport { acClearItemFilters } from '../../../actions/itemFilters';\nimport { acSetShowDescription } from '../../../actions/showDescription';\nimport { apiPostShowDescription } from '../../../api/description';\nimport DropdownButton from '../../../components/DropdownButton/DropdownButton';\nimport { orObject } from '../../../modules/util';\nimport { sGetDashboardStarred } from '../../../reducers/dashboards';\nimport { sGetNamedItemFilters } from '../../../reducers/itemFilters';\nimport { sGetSelected } from '../../../reducers/selected';\nimport { sGetShowDescription } from '../../../reducers/showDescription';\nimport { apiStarDashboard } from './apiStarDashboard';\nimport FilterSelector from './FilterSelector';\nimport StarDashboardButton from './StarDashboardButton';\nimport classes from './styles/ActionsBar.module.css';\n\nconst ViewActions = ({\n  id,\n  access,\n  showDescription,\n  starred,\n  setDashboardStarred,\n  updateShowDescription,\n  restrictFilters,\n  allowedFilters\n}) => {\n  const [moreOptionsSmallIsOpen, setMoreOptionsSmallIsOpen] = useState(false);\n  const [moreOptionsIsOpen, setMoreOptionsIsOpen] = useState(false);\n  const [sharingDialogIsOpen, setSharingDialogIsOpen] = useState(false);\n  const [redirectUrl, setRedirectUrl] = useState(null);\n  const {\n    d2\n  } = useD2();\n  const dataEngine = useDataEngine();\n  const warningAlert = useAlert(({\n    msg\n  }) => msg, {\n    warning: true\n  });\n\n  const onToggleSharingDialog = () => setSharingDialogIsOpen(!sharingDialogIsOpen);\n\n  const toggleMoreOptions = small => small ? setMoreOptionsSmallIsOpen(!moreOptionsSmallIsOpen) : setMoreOptionsIsOpen(!moreOptionsIsOpen);\n\n  const onToggleShowDescription = () => apiPostShowDescription(!showDescription).then(() => {\n    updateShowDescription(!showDescription);\n    toggleMoreOptions();\n  }).catch(() => {\n    const msg = showDescription ? i18n.t('Failed to hide description') : i18n.t('Failed to show description');\n    warningAlert.show({\n      msg\n    });\n  });\n\n  const onToggleStarredDashboard = () => apiStarDashboard(dataEngine, id, !starred).then(() => {\n    setDashboardStarred(id, !starred);\n\n    if (moreOptionsIsOpen) {\n      toggleMoreOptions();\n    }\n  }).catch(() => {\n    const msg = starred ? i18n.t('Failed to unstar the dashboard') : i18n.t('Failed to star the dashboard');\n    warningAlert.show({\n      msg\n    });\n  });\n\n  const userAccess = orObject(access);\n\n  const getMoreMenu = () => /*#__PURE__*/React.createElement(FlyoutMenu, null, /*#__PURE__*/React.createElement(MenuItem, {\n    dense: true,\n    label: starred ? i18n.t('Unstar dashboard') : i18n.t('Star dashboard'),\n    onClick: onToggleStarredDashboard\n  }), /*#__PURE__*/React.createElement(MenuItem, {\n    dense: true,\n    label: showDescription ? i18n.t('Hide description') : i18n.t('Show description'),\n    onClick: onToggleShowDescription\n  }), /*#__PURE__*/React.createElement(MenuItem, {\n    dense: true,\n    label: i18n.t('Print'),\n    dataTest: \"print-menu-item\"\n  }, /*#__PURE__*/React.createElement(MenuItem, {\n    dense: true,\n    label: i18n.t('Dashboard layout'),\n    onClick: () => setRedirectUrl(`${id}/printlayout`),\n    dataTest: \"print-layout-menu-item\"\n  }), /*#__PURE__*/React.createElement(MenuItem, {\n    dense: true,\n    label: i18n.t('One item per page'),\n    onClick: () => setRedirectUrl(`${id}/printoipp`),\n    dataTest: \"print-oipp-menu-item\"\n  })));\n\n  const getMoreButton = (className, useSmall) => /*#__PURE__*/React.createElement(DropdownButton, {\n    className: className,\n    small: useSmall,\n    onClick: () => toggleMoreOptions(useSmall),\n    icon: /*#__PURE__*/React.createElement(IconMore24, {\n      color: colors.grey700\n    }),\n    component: getMoreMenu(),\n    open: useSmall ? moreOptionsSmallIsOpen : moreOptionsIsOpen\n  }, i18n.t('More'));\n\n  if (redirectUrl) {\n    return /*#__PURE__*/React.createElement(Redirect, {\n      to: redirectUrl\n    });\n  }\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.actions\n  }, /*#__PURE__*/React.createElement(StarDashboardButton, {\n    starred: starred,\n    onClick: onToggleStarredDashboard\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.strip\n  }, userAccess.update ? /*#__PURE__*/React.createElement(Button, {\n    className: classes.editButton,\n    onClick: () => setRedirectUrl(`${id}/edit`)\n  }, i18n.t('Edit')) : null, userAccess.manage ? /*#__PURE__*/React.createElement(Button, {\n    className: classes.shareButton,\n    onClick: onToggleSharingDialog\n  }, i18n.t('Share')) : null, /*#__PURE__*/React.createElement(FilterSelector, {\n    allowedFilters: allowedFilters,\n    restrictFilters: restrictFilters\n  }), getMoreButton(classes.moreButton, false), getMoreButton(classes.moreButtonSmall, true))), id && /*#__PURE__*/React.createElement(SharingDialog, {\n    d2: d2,\n    id: id,\n    type: \"dashboard\",\n    onRequestClose: onToggleSharingDialog,\n    open: sharingDialogIsOpen,\n    insertTheme: true\n  }));\n};\n\nViewActions.propTypes = {\n  access: PropTypes.object,\n  allowedFilters: PropTypes.array,\n  id: PropTypes.string,\n  restrictFilters: PropTypes.bool,\n  setDashboardStarred: PropTypes.func,\n  showDescription: PropTypes.bool,\n  starred: PropTypes.bool,\n  updateShowDescription: PropTypes.func\n};\n\nconst mapStateToProps = state => {\n  const dashboard = sGetSelected(state);\n  return { ...dashboard,\n    filtersLength: sGetNamedItemFilters(state).length,\n    starred: dashboard.id ? sGetDashboardStarred(state, dashboard.id) : false,\n    showDescription: sGetShowDescription(state)\n  };\n};\n\nexport default connect(mapStateToProps, {\n  setDashboardStarred: acSetDashboardStarred,\n  removeAllFilters: acClearItemFilters,\n  updateShowDescription: acSetShowDescription\n})(ViewActions);","const getStarDashboardMutation = id => ({\n  type: 'create',\n  resource: `dashboards/${id}/favorite`\n});\n\nconst getUnstarDashboardMutation = id => ({\n  type: 'delete',\n  resource: `dashboards/${id}/favorite`\n});\n\nexport const apiStarDashboard = (dataEngine, id, isStarred) => {\n  const mutation = isStarred ? getStarDashboardMutation(id) : getUnstarDashboardMutation(id);\n  return dataEngine.mutate(mutation);\n};","import i18n from '@dhis2/d2-i18n';\nimport cx from 'classnames';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport classes from './styles/Description.module.css';\n\nconst Description = ({\n  description\n}) => /*#__PURE__*/React.createElement(\"div\", {\n  className: cx(classes.descContainer, description ? classes.desc : classes.noDesc),\n  \"data-test\": \"dashboard-description\"\n}, description || i18n.t('No description'));\n\nDescription.propTypes = {\n  description: PropTypes.string\n};\nexport default Description;","import PropTypes from 'prop-types';\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport { sGetSelectedDisplayName, sGetSelectedDisplayDescription } from '../../../reducers/selected';\nimport { sGetShowDescription } from '../../../reducers/showDescription';\nimport ActionsBar from './ActionsBar';\nimport Description from './Description';\nimport classes from './styles/TitleBar.module.css';\n\nconst ViewTitleBar = ({\n  name,\n  description,\n  showDescription\n}) => /*#__PURE__*/React.createElement(\"div\", {\n  className: classes.container\n}, /*#__PURE__*/React.createElement(\"div\", {\n  className: classes.titleBar,\n  \"data-test\": \"title-bar\"\n}, /*#__PURE__*/React.createElement(\"span\", {\n  className: classes.title,\n  \"data-test\": \"view-dashboard-title\"\n}, name), /*#__PURE__*/React.createElement(ActionsBar, null)), showDescription && /*#__PURE__*/React.createElement(Description, {\n  description: description\n}));\n\nViewTitleBar.propTypes = {\n  description: PropTypes.string,\n  name: PropTypes.string,\n  showDescription: PropTypes.bool\n};\n\nconst mapStateToProps = state => ({\n  name: sGetSelectedDisplayName(state),\n  description: sGetSelectedDisplayDescription(state),\n  showDescription: sGetShowDescription(state)\n});\n\nexport default connect(mapStateToProps)(ViewTitleBar);","import i18n from '@dhis2/d2-i18n';\nimport { Layer, CenteredContent, CircularLoader, ComponentCover, AlertStack, AlertBar } from '@dhis2/ui';\nimport cx from 'classnames';\nimport PropTypes from 'prop-types';\nimport React, { useState, useEffect } from 'react';\nimport { connect } from 'react-redux';\nimport { acClearEditDashboard } from '../../actions/editDashboard';\nimport { acSetPassiveViewRegistered } from '../../actions/passiveViewRegistered';\nimport { acClearPrintDashboard } from '../../actions/printDashboard';\nimport { tSetSelectedDashboardById } from '../../actions/selected';\nimport { apiPostDataStatistics } from '../../api/dataStatistics';\nimport DashboardContainer from '../../components/DashboardContainer';\nimport { setHeaderbarVisible } from '../../modules/setHeaderbarVisible';\nimport { sGetDashboardById } from '../../reducers/dashboards';\nimport { sGetPassiveViewRegistered } from '../../reducers/passiveViewRegistered';\nimport { sGetSelectedId } from '../../reducers/selected';\nimport DashboardsBar from './DashboardsBar/DashboardsBar';\nimport FilterBar from './FilterBar/FilterBar';\nimport ItemGrid from './ItemGrid';\nimport classes from './styles/ViewDashboard.module.css';\nimport TitleBar from './TitleBar/TitleBar';\n\nconst ViewDashboard = props => {\n  const [controlbarExpanded, setControlbarExpanded] = useState(false);\n  const [loadingMessage, setLoadingMessage] = useState(null);\n  useEffect(() => {\n    setHeaderbarVisible(true);\n    props.clearEditDashboard();\n    props.clearPrintDashboard();\n  }, []);\n  useEffect(() => {\n    Array.from(document.getElementsByClassName('dashboard-scroll-container')).forEach(container => {\n      container.scroll(0, 0);\n    });\n  }, [props.id]);\n  useEffect(() => {\n    if (!props.passiveViewRegistered) {\n      apiPostDataStatistics('PASSIVE_DASHBOARD_VIEW', props.id).then(() => {\n        props.registerPassiveView();\n      });\n    }\n  }, [props.passiveViewRegistered]);\n  useEffect(() => {\n    const loadDashboard = async () => {\n      const alertTimeout = setTimeout(() => {\n        if (props.name) {\n          setLoadingMessage(i18n.t('Loading dashboard – {{name}}', {\n            name: props.name\n          }));\n        } else {\n          setLoadingMessage(i18n.t('Loading dashboard'));\n        }\n      }, 500);\n      await props.fetchDashboard(props.id, props.username);\n      clearTimeout(alertTimeout);\n      setLoadingMessage(null);\n    };\n\n    if (!props.dashboardLoaded) {\n      loadDashboard();\n    }\n  }, [props.id, props.dashboardLoaded]);\n\n  const onExpandedChanged = expanded => setControlbarExpanded(expanded);\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\n    className: cx(classes.container, 'dashboard-scroll-container'),\n    \"data-test\": \"outer-scroll-container\"\n  }, /*#__PURE__*/React.createElement(DashboardsBar, {\n    expanded: controlbarExpanded,\n    onExpandedChanged: onExpandedChanged\n  }), !props.dashboardLoaded ? /*#__PURE__*/React.createElement(Layer, {\n    translucent: true\n  }, /*#__PURE__*/React.createElement(CenteredContent, null, /*#__PURE__*/React.createElement(CircularLoader, null))) : /*#__PURE__*/React.createElement(DashboardContainer, {\n    covered: controlbarExpanded\n  }, controlbarExpanded && /*#__PURE__*/React.createElement(ComponentCover, {\n    className: classes.cover,\n    translucent: true,\n    onClick: () => setControlbarExpanded(false)\n  }), /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(TitleBar, null), /*#__PURE__*/React.createElement(FilterBar, null), /*#__PURE__*/React.createElement(ItemGrid, null)))), /*#__PURE__*/React.createElement(AlertStack, null, loadingMessage && /*#__PURE__*/React.createElement(AlertBar, {\n    onHidden: () => setLoadingMessage(null),\n    permanent: true\n  }, loadingMessage)));\n};\n\nViewDashboard.propTypes = {\n  clearEditDashboard: PropTypes.func,\n  clearPrintDashboard: PropTypes.func,\n  dashboardLoaded: PropTypes.bool,\n  fetchDashboard: PropTypes.func,\n  id: PropTypes.string,\n  name: PropTypes.string,\n  passiveViewRegistered: PropTypes.bool,\n  registerPassiveView: PropTypes.func,\n  username: PropTypes.string\n};\n\nconst mapStateToProps = (state, ownProps) => {\n  const dashboard = sGetDashboardById(state, ownProps.id) || {};\n  return {\n    passiveViewRegistered: sGetPassiveViewRegistered(state),\n    name: dashboard.displayName || null,\n    dashboardLoaded: sGetSelectedId(state) === ownProps.id\n  };\n};\n\nexport default connect(mapStateToProps, {\n  clearEditDashboard: acClearEditDashboard,\n  clearPrintDashboard: acClearPrintDashboard,\n  registerPassiveView: acSetPassiveViewRegistered,\n  fetchDashboard: tSetSelectedDashboardById\n})(ViewDashboard);","import { REGISTER_PASSIVE_VIEW } from '../reducers/passiveViewRegistered';\nexport const acSetPassiveViewRegistered = () => ({\n  type: REGISTER_PASSIVE_VIEW\n});","export const getPreferredDashboardId = username => localStorage.getItem(`dhis2.dashboard.current.${username}`) || undefined;\nexport const storePreferredDashboardId = (username, dashboardId) => {\n  localStorage.setItem(`dhis2.dashboard.current.${username}`, dashboardId);\n};","import i18n from '@dhis2/d2-i18n';\nimport { Layer, CenteredContent, CircularLoader } from '@dhis2/ui';\nimport isEmpty from 'lodash/isEmpty';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport NoContentMessage from '../../components/NoContentMessage';\nimport { getPreferredDashboardId } from '../../modules/localStorage';\nimport { sDashboardsIsFetching, sGetDashboardById, sGetDashboardsSortedByStarred } from '../../reducers/dashboards';\nimport DashboardsBar from './DashboardsBar/DashboardsBar';\nimport ViewDashboard from './ViewDashboard';\n\nconst CacheableViewDashboard = ({\n  id,\n  dashboardsLoaded,\n  dashboardsIsEmpty,\n  username\n}) => {\n  if (!dashboardsLoaded) {\n    return /*#__PURE__*/React.createElement(Layer, {\n      translucent: true\n    }, /*#__PURE__*/React.createElement(CenteredContent, null, /*#__PURE__*/React.createElement(CircularLoader, null)));\n  }\n\n  if (dashboardsIsEmpty) {\n    return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(DashboardsBar, null), /*#__PURE__*/React.createElement(NoContentMessage, {\n      text: i18n.t('No dashboards found. Use the + button to create a new dashboard.')\n    }));\n  }\n\n  if (id === null) {\n    return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(DashboardsBar, null), /*#__PURE__*/React.createElement(NoContentMessage, {\n      text: i18n.t('Requested dashboard not found')\n    }));\n  }\n\n  return /*#__PURE__*/React.createElement(ViewDashboard, {\n    id: id,\n    username: username\n  });\n};\n\nCacheableViewDashboard.propTypes = {\n  dashboardsIsEmpty: PropTypes.bool,\n  dashboardsLoaded: PropTypes.bool,\n  id: PropTypes.string,\n  username: PropTypes.string\n};\n\nconst mapStateToProps = (state, ownProps) => {\n  var _ownProps$match, _ownProps$match$param, _dashboardToSelect;\n\n  const dashboards = sGetDashboardsSortedByStarred(state); // match is provided by the react-router-dom\n\n  const routeId = ((_ownProps$match = ownProps.match) === null || _ownProps$match === void 0 ? void 0 : (_ownProps$match$param = _ownProps$match.params) === null || _ownProps$match$param === void 0 ? void 0 : _ownProps$match$param.dashboardId) || null;\n  let dashboardToSelect = null;\n\n  if (routeId) {\n    dashboardToSelect = sGetDashboardById(state, routeId) || null;\n  } else {\n    const lastStoredDashboardId = getPreferredDashboardId(ownProps.username);\n    const dash = sGetDashboardById(state, lastStoredDashboardId);\n    dashboardToSelect = lastStoredDashboardId && dash ? dash : dashboards[0];\n  }\n\n  return {\n    dashboardsIsEmpty: isEmpty(dashboards),\n    dashboardsLoaded: !sDashboardsIsFetching(state),\n    id: ((_dashboardToSelect = dashboardToSelect) === null || _dashboardToSelect === void 0 ? void 0 : _dashboardToSelect.id) || null\n  };\n};\n\nexport default connect(mapStateToProps, null)(CacheableViewDashboard);","function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nimport { useD2 } from '@dhis2/app-runtime-adapter-d2';\nimport { CssVariables } from '@dhis2/ui';\nimport PropTypes from 'prop-types';\nimport React, { useEffect } from 'react';\nimport { connect } from 'react-redux';\nimport { HashRouter as Router, Route, Switch } from 'react-router-dom';\nimport { tSetControlBarRows } from '../actions/controlBar';\nimport { tFetchDashboards } from '../actions/dashboards';\nimport { tSetShowDescription } from '../actions/showDescription';\nimport { NewDashboard, EditDashboard } from '../pages/edit';\nimport { PrintDashboard, PrintLayoutDashboard } from '../pages/print';\nimport { ViewDashboard } from '../pages/view';\nimport './styles/App.css';\nimport 'react-grid-layout/css/styles.css';\nimport 'react-resizable/css/styles.css';\nimport './styles/ItemGrid.css';\n\nconst App = props => {\n  const {\n    d2\n  } = useD2();\n  useEffect(() => {\n    props.fetchDashboards();\n    props.setControlBarRows();\n    props.setShowDescription(); // store the headerbar height for controlbar height calculations\n\n    const headerbarHeight = document.querySelector('header').getBoundingClientRect().height;\n    document.documentElement.style.setProperty('--headerbar-height', `${headerbarHeight}px`);\n  }, []);\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(CssVariables, {\n    colors: true,\n    spacers: true\n  }), /*#__PURE__*/React.createElement(Router, null, /*#__PURE__*/React.createElement(Switch, null, /*#__PURE__*/React.createElement(Route, {\n    exact: true,\n    path: \"/\",\n    render: props => /*#__PURE__*/React.createElement(ViewDashboard, _extends({\n      username: d2.currentUser.username\n    }, props))\n  }), /*#__PURE__*/React.createElement(Route, {\n    exact: true,\n    path: \"/new\",\n    render: props => /*#__PURE__*/React.createElement(NewDashboard, props)\n  }), /*#__PURE__*/React.createElement(Route, {\n    exact: true,\n    path: \"/:dashboardId\",\n    render: props => /*#__PURE__*/React.createElement(ViewDashboard, _extends({\n      username: d2.currentUser.username\n    }, props))\n  }), /*#__PURE__*/React.createElement(Route, {\n    exact: true,\n    path: \"/:dashboardId/edit\",\n    render: props => /*#__PURE__*/React.createElement(EditDashboard, props)\n  }), /*#__PURE__*/React.createElement(Route, {\n    exact: true,\n    path: \"/:dashboardId/printoipp\",\n    render: props => /*#__PURE__*/React.createElement(PrintDashboard, props)\n  }), /*#__PURE__*/React.createElement(Route, {\n    exact: true,\n    path: \"/:dashboardId/printlayout\",\n    render: props => /*#__PURE__*/React.createElement(PrintLayoutDashboard, props)\n  }))));\n};\n\nApp.propTypes = {\n  fetchDashboards: PropTypes.func,\n  setControlBarRows: PropTypes.func,\n  setShowDescription: PropTypes.func\n};\nconst mapDispatchToProps = {\n  fetchDashboards: tFetchDashboards,\n  setControlBarRows: tSetControlBarRows,\n  setShowDescription: tSetShowDescription\n};\nexport default connect(null, mapDispatchToProps)(App);","import { combineReducers } from 'redux';\nimport activeModalDimension from './activeModalDimension';\nimport controlBar from './controlBar';\nimport dashboards from './dashboards';\nimport dashboardsFilter from './dashboardsFilter';\nimport dimensions from './dimensions';\nimport editDashboard from './editDashboard';\nimport itemActiveTypes from './itemActiveTypes';\nimport itemFilters from './itemFilters';\nimport messages from './messages';\nimport passiveViewRegistered from './passiveViewRegistered';\nimport printDashboard from './printDashboard';\nimport selected from './selected';\nimport showDescription from './showDescription';\nimport visualizations from './visualizations';\nexport default combineReducers({\n  dashboards,\n  selected,\n  dashboardsFilter,\n  controlBar,\n  visualizations,\n  messages,\n  editDashboard,\n  printDashboard,\n  itemFilters,\n  dimensions,\n  activeModalDimension,\n  passiveViewRegistered,\n  showDescription,\n  itemActiveTypes\n});","import { createStore, applyMiddleware, compose } from 'redux';\nimport { createLogger } from 'redux-logger';\nimport thunk from 'redux-thunk';\nimport reducer from './reducers';\n\nconst configureStore = dataEngine => {\n  const middleware = [thunk.withExtraArgument(dataEngine)]; // Enable Redux devtools if extension is installed instead of redux-logger\n\n  const composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\n\n  if (!window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ && process.env.NODE_ENV !== 'production') {\n    middleware.push(createLogger());\n  }\n\n  return createStore(reducer, composeEnhancers(applyMiddleware(...middleware)));\n};\n\nexport default configureStore;","//------------------------------------------------------------------------------\n// <auto-generated>\n// This code was generated by d2-i18n-generate.\n//\n// Changes to this file may cause incorrect behavior and will be lost if\n// the code is regenerated.\n// </auto-generated>\n//------------------------------------------------------------------------------\nimport i18n from '@dhis2/d2-i18n';\nimport arTranslations from './ar/translations.json';\nimport ar_IQTranslations from './ar_IQ/translations.json';\nimport ckbTranslations from './ckb/translations.json';\nimport csTranslations from './cs/translations.json';\nimport daTranslations from './da/translations.json';\nimport enTranslations from './en/translations.json';\nimport esTranslations from './es/translations.json';\nimport frTranslations from './fr/translations.json';\nimport idTranslations from './id/translations.json';\nimport kmTranslations from './km/translations.json';\nimport loTranslations from './lo/translations.json';\nimport myTranslations from './my/translations.json';\nimport nbTranslations from './nb/translations.json';\nimport prsTranslations from './prs/translations.json';\nimport psTranslations from './ps/translations.json';\nimport ptTranslations from './pt/translations.json';\nimport pt_BRTranslations from './pt_BR/translations.json';\nimport ruTranslations from './ru/translations.json';\nimport svTranslations from './sv/translations.json';\nimport tetTranslations from './tet/translations.json';\nimport tgTranslations from './tg/translations.json';\nimport ukTranslations from './uk/translations.json';\nimport urTranslations from './ur/translations.json';\nimport uzTranslations from './uz/translations.json';\nimport uz_CyrlTranslations from './uz_Cyrl/translations.json';\nimport uz_LatnTranslations from './uz_Latn/translations.json';\nimport viTranslations from './vi/translations.json';\nimport zhTranslations from './zh/translations.json';\nimport zh_CNTranslations from './zh_CN/translations.json';\nconst namespace = 'default';\ni18n.addResources('ar', namespace, arTranslations);\ni18n.addResources('ar_IQ', namespace, ar_IQTranslations);\ni18n.addResources('ckb', namespace, ckbTranslations);\ni18n.addResources('cs', namespace, csTranslations);\ni18n.addResources('da', namespace, daTranslations);\ni18n.addResources('en', namespace, enTranslations);\ni18n.addResources('es', namespace, esTranslations);\ni18n.addResources('fr', namespace, frTranslations);\ni18n.addResources('id', namespace, idTranslations);\ni18n.addResources('km', namespace, kmTranslations);\ni18n.addResources('lo', namespace, loTranslations);\ni18n.addResources('my', namespace, myTranslations);\ni18n.addResources('nb', namespace, nbTranslations);\ni18n.addResources('prs', namespace, prsTranslations);\ni18n.addResources('ps', namespace, psTranslations);\ni18n.addResources('pt', namespace, ptTranslations);\ni18n.addResources('pt_BR', namespace, pt_BRTranslations);\ni18n.addResources('ru', namespace, ruTranslations);\ni18n.addResources('sv', namespace, svTranslations);\ni18n.addResources('tet', namespace, tetTranslations);\ni18n.addResources('tg', namespace, tgTranslations);\ni18n.addResources('uk', namespace, ukTranslations);\ni18n.addResources('ur', namespace, urTranslations);\ni18n.addResources('uz', namespace, uzTranslations);\ni18n.addResources('uz_Cyrl', namespace, uz_CyrlTranslations);\ni18n.addResources('uz_Latn', namespace, uz_LatnTranslations);\ni18n.addResources('vi', namespace, viTranslations);\ni18n.addResources('zh', namespace, zhTranslations);\ni18n.addResources('zh_CN', namespace, zh_CNTranslations);\nexport default i18n;","import { useDataEngine } from '@dhis2/app-runtime';\nimport { D2Shim } from '@dhis2/app-runtime-adapter-d2';\nimport React from 'react';\nimport { Provider as ReduxProvider } from 'react-redux';\nimport App from './components/App';\nimport SystemSettingsProvider from './components/SystemSettingsProvider';\nimport UserSettingsProvider from './components/UserSettingsProvider';\nimport WindowDimensionsProvider from './components/WindowDimensionsProvider';\nimport configureStore from './configureStore';\nimport './locales';\nconst d2Config = {\n  schemas: ['chart', 'map', 'report', 'reportTable', 'eventChart', 'eventReport', 'dashboard', 'organisationUnit', 'userGroup']\n}; // TODO: ER and EV plugins require the auth header in development mode.\n// Remove this when these plugins are rewritten\n\nconst authorization = process.env.REACT_APP_DHIS2_AUTHORIZATION || null;\n\nif (authorization) {\n  d2Config.headers = {\n    Authorization: authorization\n  };\n}\n\nconst AppWrapper = () => {\n  const dataEngine = useDataEngine();\n  return /*#__PURE__*/React.createElement(ReduxProvider, {\n    store: configureStore(dataEngine)\n  }, /*#__PURE__*/React.createElement(D2Shim, {\n    d2Config: d2Config,\n    i18nRoot: \"./i18n\"\n  }, ({\n    d2\n  }) => {\n    if (!d2) {\n      // TODO: Handle errors in d2 initialization\n      return null;\n    }\n\n    return /*#__PURE__*/React.createElement(SystemSettingsProvider, null, /*#__PURE__*/React.createElement(UserSettingsProvider, null, /*#__PURE__*/React.createElement(WindowDimensionsProvider, null, /*#__PURE__*/React.createElement(App, null))));\n  }));\n};\n\nexport default AppWrapper;","import i18n from '@dhis2/d2-i18n';\nimport { IconApps24, IconEmptyFrame24, IconFileDocument24, IconLink24, IconMail24, IconQuestion24, IconTable24, IconTextBox24, IconUser24, IconVisualizationColumn24, IconWorld24 } from '@dhis2/ui'; // Item types\n\nexport const VISUALIZATION = 'VISUALIZATION';\nexport const REPORT_TABLE = 'REPORT_TABLE';\nexport const CHART = 'CHART';\nexport const MAP = 'MAP';\nexport const EVENT_REPORT = 'EVENT_REPORT';\nexport const EVENT_CHART = 'EVENT_CHART';\nexport const APP = 'APP';\nexport const REPORTS = 'REPORTS';\nexport const RESOURCES = 'RESOURCES';\nexport const USERS = 'USERS';\nexport const MESSAGES = 'MESSAGES';\nexport const TEXT = 'TEXT';\nexport const SPACER = 'SPACER';\nexport const PAGEBREAK = 'PAGEBREAK';\nexport const PRINT_TITLE_PAGE = 'PRINT_TITLE_PAGE';\nconst DOMAIN_TYPE_AGGREGATE = 'AGGREGATE';\nconst DOMAIN_TYPE_TRACKER = 'TRACKER'; // Dashboard helpers\n\nexport const isVisualizationType = item => {\n  var _itemTypeMap$item$typ;\n\n  return !!((_itemTypeMap$item$typ = itemTypeMap[item.type]) !== null && _itemTypeMap$item$typ !== void 0 && _itemTypeMap$item$typ.isVisualizationType);\n};\nexport const hasMapView = itemType => itemTypeMap[itemType].domainType === DOMAIN_TYPE_AGGREGATE;\nexport const isTrackerDomainType = itemType => itemTypeMap[itemType].domainType === DOMAIN_TYPE_TRACKER;\nexport const getDefaultItemCount = itemType => itemTypeMap[itemType].defaultItemCount || 5;\nexport const getAppName = itemType => itemTypeMap[itemType].appName || ''; // Item type map\n\nexport const itemTypeMap = {\n  [VISUALIZATION]: {\n    id: VISUALIZATION,\n    endPointName: 'visualizations',\n    propName: 'visualization',\n    pluralTitle: i18n.t('Visualizations'),\n    isVisualizationType: true,\n    appUrl: id => `dhis-web-data-visualizer/#/${id}`,\n    appName: 'Data Visualizer',\n    defaultItemCount: 10\n  },\n  [REPORT_TABLE]: {\n    id: REPORT_TABLE,\n    endPointName: 'visualizations',\n    dataStatisticsName: 'REPORT_TABLE_VIEW',\n    propName: 'visualization',\n    pluralTitle: i18n.t('Pivot tables'),\n    domainType: DOMAIN_TYPE_AGGREGATE,\n    isVisualizationType: true,\n    appUrl: id => `dhis-web-data-visualizer/#/${id}`,\n    appName: 'Data Visualizer'\n  },\n  [CHART]: {\n    id: CHART,\n    endPointName: 'visualizations',\n    propName: 'visualization',\n    dataStatisticsName: 'CHART_VIEW',\n    pluralTitle: i18n.t('Charts'),\n    domainType: DOMAIN_TYPE_AGGREGATE,\n    isVisualizationType: true,\n    appUrl: id => `dhis-web-data-visualizer/#/${id}`,\n    appName: 'Data Visualizer'\n  },\n  [MAP]: {\n    id: MAP,\n    endPointName: 'maps',\n    dataStatisticsName: 'MAP_VIEW',\n    propName: 'map',\n    pluralTitle: i18n.t('Maps'),\n    domainType: DOMAIN_TYPE_AGGREGATE,\n    isVisualizationType: true,\n    appUrl: id => `dhis-web-maps/?id=${id}`,\n    appName: 'Maps'\n  },\n  [EVENT_REPORT]: {\n    id: EVENT_REPORT,\n    endPointName: 'eventReports',\n    propName: 'eventReport',\n    pluralTitle: i18n.t('Event reports'),\n    domainType: DOMAIN_TYPE_TRACKER,\n    isVisualizationType: true,\n    appUrl: id => `dhis-web-event-reports/?id=${id}`,\n    appName: 'Event Reports'\n  },\n  [EVENT_CHART]: {\n    id: EVENT_CHART,\n    endPointName: 'eventCharts',\n    propName: 'eventChart',\n    pluralTitle: i18n.t('Event charts'),\n    domainType: DOMAIN_TYPE_TRACKER,\n    isVisualizationType: true,\n    appUrl: id => `dhis-web-event-visualizer/?id=${id}`,\n    appName: 'Event Visualizer'\n  },\n  [APP]: {\n    endPointName: 'apps',\n    propName: 'appKey',\n    pluralTitle: i18n.t('Apps')\n  },\n  [REPORTS]: {\n    id: REPORTS,\n    endPointName: 'reports',\n    propName: 'reports',\n    pluralTitle: i18n.t('Reports'),\n    appUrl: (id, type) => {\n      switch (type) {\n        case 'HTML':\n          return `dhis-web-reports/#/standard-report/view/${id}`;\n\n        case 'JASPER_REPORT_TABLE':\n        case 'JASPER_JDBC':\n        default:\n          return `api/reports/${id}/data.pdf?t=${new Date().getTime()}`;\n      }\n    }\n  },\n  [RESOURCES]: {\n    id: RESOURCES,\n    endPointName: 'resources',\n    propName: 'resources',\n    pluralTitle: i18n.t('Resources'),\n    appUrl: id => `api/documents/${id}/data`\n  },\n  [USERS]: {\n    id: USERS,\n    endPointName: 'users',\n    propName: 'users',\n    pluralTitle: i18n.t('Users'),\n    appUrl: id => `dhis-web-dashboard-integration/profile.action?id=${id}`\n  },\n  [TEXT]: {\n    id: TEXT,\n    propName: 'text'\n  },\n  [MESSAGES]: {\n    propName: 'messages'\n  },\n  [SPACER]: {\n    propName: 'text'\n  },\n  [PAGEBREAK]: {\n    propName: 'text'\n  },\n  [PRINT_TITLE_PAGE]: {\n    propName: 'text'\n  }\n};\nexport const getEndPointName = type => itemTypeMap[type].endPointName;\nexport const getDataStatisticsName = type => itemTypeMap[type].dataStatisticsName || null;\nexport const getItemUrl = (type, item, baseUrl) => {\n  let url;\n\n  if (type === APP) {\n    url = item.launchUrl;\n  }\n\n  if (itemTypeMap[type] && itemTypeMap[type].appUrl) {\n    url = `${baseUrl}/${itemTypeMap[type].appUrl(item.id, item.type)}`;\n  }\n\n  return url;\n};\nexport const getItemIcon = type => {\n  switch (type) {\n    case REPORT_TABLE:\n    case EVENT_REPORT:\n      return IconTable24;\n\n    case REPORTS:\n      return IconFileDocument24;\n\n    case CHART:\n    case EVENT_CHART:\n      return IconVisualizationColumn24;\n\n    case MAP:\n      return IconWorld24;\n\n    case APP:\n      return IconApps24;\n\n    case RESOURCES:\n      return IconLink24;\n\n    case USERS:\n      return IconUser24;\n\n    case TEXT:\n      return IconTextBox24;\n\n    case MESSAGES:\n      return IconMail24;\n\n    case SPACER:\n      return IconEmptyFrame24;\n\n    default:\n      return IconQuestion24;\n  }\n};","import { REPORT_TABLE, CHART, MAP, EVENT_REPORT, EVENT_CHART } from '../../../../modules/itemTypes';\nimport getVisualizationContainerDomId from '../getVisualizationContainerDomId';\nimport { loadExternalScript } from './loadExternalScript'; //external plugins\n\nconst itemTypeToGlobalVariable = {\n  [MAP]: 'mapPlugin',\n  [EVENT_REPORT]: 'eventReportPlugin',\n  [EVENT_CHART]: 'eventChartPlugin'\n};\nconst itemTypeToScriptPath = {\n  [MAP]: '/dhis-web-maps/map.js',\n  [EVENT_REPORT]: '/dhis-web-event-reports/eventreport.js',\n  [EVENT_CHART]: '/dhis-web-event-visualizer/eventchart.js'\n};\n\nconst hasIntegratedPlugin = type => [CHART, REPORT_TABLE].includes(type);\n\nexport const getPlugin = async type => {\n  if (hasIntegratedPlugin(type)) {\n    return true;\n  }\n\n  const pluginName = itemTypeToGlobalVariable[type];\n  return await global[pluginName];\n};\n\nconst fetchPlugin = async (type, baseUrl) => {\n  const globalName = itemTypeToGlobalVariable[type];\n\n  if (global[globalName]) {\n    return global[globalName]; // Will be a promise if fetch is in progress\n  }\n\n  const scripts = [];\n\n  if (type === EVENT_REPORT || type === EVENT_CHART) {\n    if (process.env.NODE_ENV === 'production') {\n      scripts.push('./vendor/babel-polyfill-6.26.0.min.js');\n      scripts.push('./vendor/jquery-3.3.1.min.js');\n      scripts.push('./vendor/jquery-migrate-3.0.1.min.js');\n    } else {\n      scripts.push('./vendor/babel-polyfill-6.26.0.js');\n      scripts.push('./vendor/jquery-3.3.1.js');\n      scripts.push('./vendor/jquery-migrate-3.0.1.js');\n    }\n  }\n\n  scripts.push(baseUrl + itemTypeToScriptPath[type]);\n  const scriptsPromise = Promise.all(scripts.map(loadExternalScript)).then(() => global[globalName] // At this point, has been replaced with the real thing\n  );\n  global[globalName] = scriptsPromise;\n  return await scriptsPromise;\n};\n\nexport const pluginIsAvailable = type => hasIntegratedPlugin(type) || itemTypeToGlobalVariable[type];\n\nconst loadPlugin = async (type, config, credentials) => {\n  if (!pluginIsAvailable(type)) {\n    return;\n  }\n\n  const plugin = await fetchPlugin(type, credentials.baseUrl);\n\n  if (!(plugin && plugin.load)) {\n    return;\n  }\n\n  plugin.url = credentials.baseUrl;\n  plugin.loadingIndicator = true;\n  plugin.dashboard = true;\n\n  if (credentials.auth) {\n    plugin.auth = credentials.auth;\n  }\n\n  plugin.load(config);\n};\n\nexport const load = async (item, visualization, {\n  credentials,\n  activeType,\n  options = {}\n}) => {\n  const config = { ...visualization,\n    ...options,\n    el: getVisualizationContainerDomId(item.id)\n  };\n  const type = activeType || item.type;\n  await loadPlugin(type, config, credentials);\n};\nexport const unmount = async (item, activeType) => {\n  const plugin = await getPlugin(activeType);\n\n  if (plugin && plugin.unmount) {\n    plugin.unmount(getVisualizationContainerDomId(item.id));\n  }\n};","const getVisualizationContainerDomId = id => `item-${id}`;\n\nexport default getVisualizationContainerDomId;","// extracted by mini-css-extract-plugin\nmodule.exports = {\"itemHeaderWrap\":\"ItemHeader_itemHeaderWrap__JcBP7\",\"itemTitle\":\"ItemHeader_itemTitle__34rHa\",\"itemActionsWrap\":\"ItemHeader_itemActionsWrap__Gx3D9\"};"],"sourceRoot":""}
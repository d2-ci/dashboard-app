{"version":3,"sources":["components/ItemSelector/styles/CategorizedMenuGroup.module.css","components/Item/styles/DeleteItemButton.module.css","components/FilterBar/styles/FilterBar.module.css","components/ControlBar/styles/ConfirmDeleteDialog.module.css","api/metadata.js","modules/itemTypes.js","components/Item/ListItem/Item.module.css","components/TitleBar/styles/EditTitleBar.module.css","components/TitleBar/styles/ViewTitleBar.module.css","reducers/user.js","modules/uiBackendItemConverter.js","reducers/dashboards.js","reducers/editDashboard.js","reducers/editItemFilters.js","reducers/selected.js","actions/editItemFilters.js","reducers/itemFilters.js","actions/itemFilters.js","reducers/messages.js","api/messages.js","reducers/snackbar.js","actions/snackbar.js","reducers/visualizations.js","actions/visualizations.js","api/index.js","api/dashboards.js","components/SnackbarMessage/SnackbarMessage.js","actions/selected.js","api/localStorage.js","components/Item/MessagesItem/actions.js","api/editDashboard.js","actions/editDashboard.js","actions/dashboards.js","reducers/controlBar.js","api/controlBar.js","actions/controlBar.js","reducers/dimensions.js","reducers/settings.js","actions/dimensions.js","components/ControlBar/ShowMoreButton.js","components/ControlBar/controlBarDimensions.js","components/ControlBar/ControlBar.js","icons/Star.js","api/dataStatistics.js","components/ControlBar/DashboardItemChip.js","icons/AddCircle.js","icons/Clear.js","components/ControlBar/ClearButton.js","reducers/dashboardsFilter.js","components/ControlBar/Filter.js","components/ControlBar/DashboardsBar.js","actions/dashboardsFilter.js","components/Dashboard/DashboardVerticalOffset.js","components/ItemSelector/HeaderMenuItem.js","icons/Launch.js","components/ItemSelector/ContentMenuItem.js","components/ItemSelector/selectableItems.js","components/ItemSelector/CategorizedMenuGroup.js","components/ItemSelector/actions.js","components/ItemSelector/SinglesMenuGroup.js","components/ItemSelector/ItemSelector.js","components/TitleBar/EditTitleBar.js","components/ItemFilter/FilterDialog.js","reducers/activeModalDimension.js","actions/activeModalDimension.js","components/ItemFilter/FilterSelector.js","components/TitleBar/Info.js","components/TitleBar/ViewTitleBar.js","components/TitleBar/TitleBar.js","components/Item/VisualizationItem/DefaultPlugin.js","components/Item/VisualizationItem/assets/icons.js","components/Item/VisualizationItem/FatalErrorBoundary.js","components/Item/DeleteItemButton.js","components/Item/ItemHeader.js","components/Item/VisualizationItem/ItemHeaderButtons.js","components/Item/VisualizationItem/ItemFooter.js","modules/memoizeOne.js","components/Item/VisualizationItem/LoadingMask.js","components/Item/VisualizationItem/Item.js","widgets/Line.js","components/Item/MessagesItem/Item.js","components/Item/NotSupportedItem/Item.js","icons/Description.js","icons/Delete.js","components/Item/ListItem/Item.js","components/Item/ListItem/actions.js","components/Item/TextItem/Item.js","components/Item/AppItem/Item.js","components/Item/SpacerItem/Item.js","components/Item/Item.js","widgets/NoContentMessage.js","components/Item/ProgressiveLoadingContainer.js","components/ItemGrid/ItemGrid.js","components/FilterBar/FilterBadge.js","components/FilterBar/FilterBar.js","components/Dashboard/DashboardContent.js","components/Dashboard/ViewDashboard.js","components/ControlBar/ConfirmDeleteDialog.js","components/ControlBar/EditBar.js","components/Dashboard/EditDashboard.js","components/Dashboard/NewDashboard.js","components/Dashboard/Dashboard.js","components/Dashboard/dashboardModes.js","components/App.js","actions/user.js","locales/index.js","reducers/style.js","reducers/index.js","configureStore.js","index.js","components/ControlBar/styles/DashboardsBar.module.css","components/ControlBar/styles/DashboardItemChip.module.css","components/ItemSelector/styles/ContentMenuItem.module.css","components/Item/styles/ItemHeader.module.css","modules/util.js","components/ControlBar/styles/ControlBar.module.css","components/Item/VisualizationItem/styles/FatalErrorBoundary.module.css","components/Item/VisualizationItem/styles/Item.module.css","components/ControlBar/styles/ShowMoreButton.module.css","components/ControlBar/styles/ClearButton.module.css","components/Item/VisualizationItem/styles/LoadingMask.module.css","components/Item/VisualizationItem/plugin.js","components/ItemGrid/gridUtil.js"],"names":["module","exports","showMoreButton","deleteItemButton","bar","content","getIdNameFields","rename","arguments","length","undefined","concat","getDimensionFields","_ref2","withItems","arrayClean","join","getAxesFields","_ref3","getFavoriteFields","_ref4","withDimensions","withOptions","getFavoritesFields","_ref5","Object","_home_travis_build_dhis2_dashboards_app_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_toConsumableArray__WEBPACK_IMPORTED_MODULE_0__","getListItemFields","getMapFields","apiFetchFavorite","id","type","_ref6","fields","getInstance","then","d2","Api","getApi","get","getEndPointName","VISUALIZATION","REPORT_TABLE","CHART","MAP","EVENT_REPORT","EVENT_CHART","APP","REPORTS","RESOURCES","USERS","MESSAGES","TEXT","SPACER","isVisualizationType","item","itemTypeMap","hasMapView","itemType","domainType","isTrackerDomainType","getDefaultItemCount","defaultItemCount","getAppName","appName","_itemTypeMap","_home_travis_build_dhis2_dashboards_app_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_defineProperty__WEBPACK_IMPORTED_MODULE_0__","endPointName","propName","pluralTitle","i18n","t","appUrl","getItemUrl","url","launchUrl","getBaseUrl","getItemIcon","TableIcon","ChartIcon","MapIcon","ExtensionIcon","DescriptionIcon","PersonIcon","FontDownloadIcon","EmailIcon","CropFreeIcon","NotInterestedIcon","list","itemicon","link","deleteicon","deletebutton","section","titleDescription","title","description","itemSelector","actions","editLink","titleBar","titleBarIcon","DEFAULT_STATE_USER","username","uiLocale","isSuperuser","sGetUserUsername","state","user","spacerContent","isTextType","text","convertUiItemsToBackend","items","map","isUiSpacerType","objectSpread","convertBackendItemsToUi","isBackendSpacerType","gridProperties","getGridItemProperties","DEFAULT_STATE_DASHBOARDS","byId","updateDashboardProp","_ref","dashboardId","prop","value","defineProperty","sGetDashboardsRoot","dashboards","sGetDashboardById","orObject","sDashboardsIsFetching","sGetAllDashboards","sGetDashboardItems","sGetStarredDashboards","values","filter","dashboard","starred","sGetUnstarredDashboards","sGetDashboardsSortedByStarred","toConsumableArray","arraySort","getCustomDashboards","data","arrayFrom","d","name","displayName","displayDescription","favorite","owner","created","split","substr","lastUpdated","access","numberOfItems","orArray","dashboardItems","DEFAULT_STATE_EDIT_DASHBOARD","NEW_DASHBOARD_STATE","sGetEditDashboardRoot","editDashboard","sGetIsEditing","isEmpty","sGetEditDashboardItems","DEFAULT_STATE_EDIT_ITEM_FILTERS","sGetEditItemFiltersRoot","editItemFilters","combineReducers","action","validateReducer","isLoading","showDescription","sGetSelectedRoot","selected","sGetSelectedId","sGetSelectedIsLoading","sGetSelectedShowDescription","acRemoveEditItemFilter","DEFAULT_STATE_ITEM_FILTERS","sGetItemFiltersRoot","itemFilters","sGetFiltersKeys","keys","acRemoveItemFilter","sGetMessagesRoot","messages","getMessages","catch","error","console","log","DEFAULT_STATE_SNACKBAR","message","duration","open","acCloseSnackbar","DEFAULT_STATE_VISUALIZATIONS","p","sGetVisualization","visualizations","sGetVisualizationsRoot","acAddVisualization","onError","getDashboardItemsFields","withFavorite","getDashboardFields","apiFetchDashboard","models","apiStarDashboard","isStarred","post","delete","apiDeleteDashboard","loadingDashboardMsg","SnackbarMessageContent","react_default","a","createElement","style","fontWeight","connect","_sGetSnackbar","snackbar","sGetSnackbar","snackbarOpen","snackbarMessage","snackbarDuration","onCloseSnackbar","props","Snackbar_default","zIndex","SnackbarMessage_SnackbarMessageContent","autoHideDuration","onClose","acSetSelectedId","acSetSelectedIsLoading","tLoadDashboard","asyncToGenerator","regenerator_default","mark","_callee","dispatch","dash","wrap","_context","prev","next","sent","acAppendDashboards","abrupt","Promise","resolve","t0","stop","_x","apply","this","tSetSelectedDashboardById","_callee2","getState","snackbarTimeout","onSuccess","_context2","setTimeout","dashboardName","customDashboard","acSetDashboardItems","withShape","localStorage","setItem","forEach","extractFavorite","messageConversations","filters","clearTimeout","_x2","_x3","saveDashboard","assign","width","w","height","h","save","msg","response","uid","updateDashboard","postDashboard","create","acAddDashboardItem","itemPropName","generateUid","gridItemProperties","NEW_ITEM_SHAPE","acUpdateDashboardItem","acRemoveDashboardItem","arrayToIdMap","acSetDashboardStarred","tFetchDashboards","collection","paging","toArray","userRows","sGetControlBarUserRows","controlBar","sGetControlBarRoot","KEY","hasNamespace","currentUser","dataStore","has","getNamespace","apiGetControlBarRows","_callee3","namespace","_context3","t1","t2","find","key","apiPostControlBarRows","_callee4","rows","_context4","set","_x4","_x5","acSetControlBarUserRows","DEFAULT_DIMENSIONS","getDimensionById","DIMENSION_ID_PERIOD","DIMENSION_ID_ORGUNIT","sGetDimensions","dimensions","DEFAULT_SETTINGS","keyDateFormat","keyAnalysisRelativePeriod","keyAnalysisDigitGroupSeparator","displayNameProperty","rootOrganisationUnit","sGetSettings","settings","sGetSettingsDisplayNameProperty","acSetDimensions","ShowMoreButton","onClick","isMaxHeight","disabled","textAlign","className","classes","showMore","MIN_ROW_COUNT","getRowsHeight","getNumRowsFromHeight","Math","floor","FIRST_ROW_PADDING_HEIGHT","getTopOffset","getControlBarHeight","ControlBar","_this","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","onStartDrag","setState","dragging","window","addEventListener","onDrag","onEndDrag","event","preventDefault","stopPropagation","newHeight","clientY","onChangeHeight","requestAnimationFrame","removeEventListener","draghandle","onMouseDown","max","rootStyle","top","backgroundColor","editMode","colors","yellow050","white","paddingBottom","transition","root","children","renderDragHandle","React","Component","defaultProps","StarIcon","xmlns","viewBox","fill","apiPostDataStatistics","eventType","DashboardItemChip","label","chipProps","selectedState","unselected","icon","Star","react_router_dom","to","debounce","lib","AddCircleIcon","teal600","ClearIcon","grey800","ClearButton","onClear","button","Clear","color","ownerData","DEFAULT_STATE_DASHBOARDS_FILTER_NAME","DEFAULT_STATE_DASHBOARDS_FILTER_OWNER","order","sGetDashboardsFilterRoot","dashboardsFilter","sGetFilterName","styles","filterField","fontSize","searchIcon","grey700","KEYCODE_ENTER","KEYCODE_ESCAPE","Filter","_Component","setFilterValue","onChangeName","target","handleKeyUp","keyCode","onKeypressEnter","inherits","createClass","nextProps","_this$props","startAdornment","InputAdornment_default","position","Search_default","endAdornment","ControlBar_ClearButton","Input_default","placeholder","onChange","onKeyUp","Function","prototype","withStyles","MAX_ROW_COUNT","DashboardsBar","_getPrototypeOf2","_len","args","Array","_key","setInitialDashboardState","adjustedHeight","newRows","newRowCount","min","onToggleMaxHeight","onSelectDashboard","history","push","selectedId","onChangeFilterName","rowCount","controlBarHeight","contentWrapperStyle","padding","overflowY","components_ControlBar_ControlBar","leftControls","display","textDecoration","marginRight","AddCircle","ControlBar_Filter","ControlBar_DashboardItemChip","ControlBar_ShowMoreButton","mapDispatchToProps","withRouter","stateProps","dispatchProps","ownProps","displayDashboards","toLowerCase","includes","marginTop","HeaderMenuItem","dense","LaunchIcon","grey600","LaunchLink","e","launchLink","rel","href","Launch","InsertButton","buttonInsert","ContentMenuItem","onInsert","visType","ItemIcon","renderedItemIcon","visTypeIcons","menuItem","ContentMenuItem_LaunchLink","ContentMenuItem_InsertButton","singleItems","header","categorizedItems","listItemTypes","CategorizedMenuGroup","addItem","tAddListItemContent","newItem","toggleSeeMore","seeMore","onChangeItemsLimit","_this2","_this$props2","hasMore","Fragment","ItemSelector_HeaderMenuItem","itemUrl","context","ItemSelector_ContentMenuItem","margin","contextTypes","PropTypes","object","isRequired","dashboardItem","listItemType","dashboardItemIndex","findIndex","category","addToDashboard","ItemSearchField","onFocus","ItemSelector","closeList","openList","_","fetchItems","anchorEl","currentTarget","setFilter","getCategorizedMenuGroups","itemCount","allItems","maxOptions","slice","ItemSelector_CategorizedMenuGroup","getSinglesMenuGroups","ItemSelector_SinglesMenuGroup","getMenuGroups","queryString","add","Set","ItemSelector_ItemSearchField","Popover_default","anchorOrigin","horizontal","vertical","transformOrigin","PaperProps","disableAutoFocus","disableEnforceFocus","disableRestoreFocus","maxWidth","EditTitleBar","onChangeTitle","onChangeDescription","components_ItemSelector_ItemSelector","selectedDashboard","peId","ouId","FilterDialog","onConfirm","dimension","selectedItems","dialogId","commonProps","onSelect","onDeselect","onReorder","build_es_lib","selectedPeriods","ouItems","dialogTitle","Dialog_default","dialogContent","DialogActions_default","kind","DEFAULT_STATE_ACTIVE_MODAL_DIMENSION","sGetActiveModalDimension","activeModalDimension","acSetActiveModalDimension","FilterSelector","openPanel","closePanel","closeDialog","clearActiveModalDimension","selectDimension","setActiveModalDimension","onSelectItems","dimensionId","setEditItemFilters","onDeselectItems","itemIdsToRemove","newList","removeEditItemFilter","onReorderItems","itemIds","oldList","reorderedList","saveFilter","filterItems","addItemFilter","removeItemFilter","selectedDimensions","ArrowDropDown_default","Boolean","onDimensionClick","selectedIds","ItemFilter_FilterDialog","Info","show","toggle","InfoOutlined_default","NO_DESCRIPTION","ViewTitleBar","toggleSharingDialog","sharingDialogIsOpen","onStarClick","onInfoClick","titleStyle","cursor","userSelect","StarBorder","TitleBar_Info","marginLeft","update","manage","ItemFilter_FilterSelector","paddingTop","d2_ui_sharing_dialog_default","onRequestClose","tStarDashboard","black","minWidth","TitleBar","edit","TitleBar_EditTitleBar","TitleBar_ViewTitleBar","DefaultPlugin","pluginCredentials","shouldPluginReload","prevProps","reloadAllowed","filtersChanged","vis","visualization","prevVis","visChanged","activeType","reloadPlugin","pluginManager","currentVis","useActiveType","credentials","getActiveType","baseUrl","auth","defaultHeaders","Authorization","options","getGridItemDomId","textDiv","ThreeDots","SpeechBubble","fillRule","transform","Warning","FatalErrorBoundary","errorFound","info","container","icons_Warning","DeleteItemButton","Delete_default","red500","HEADER_MARGIN_HEIGHT","ItemHeader","forwardRef","ref","itemId","actionButtons","itemHeaderWrap","itemTitle","itemActionsWrap","Item_DeleteItemButton","iconFill","ItemHeaderButtons","_useState","useState","_useState2","slicedToArray","setAnchorEl","onSelectActiveType","isTrackerType","onViewTable","handleClose","onViewChart","onViewMap","canViewAs","isSingleValue","isYearOverYear","VIS_TYPE_GAUGE","VIS_TYPE_PIE","interpretationMenuLabel","activeFooter","pluginIsAvailable","small","secondary","icons_ThreeDots","InsertChart_default","ViewList_default","Public_default","Launch_default","getLink","icons_SpeechBubble","onToggleFooter","scrollContainer","line","border","grey100","ItemFooter","objectId","getId","d2_ui_interpretations_default","memoizeOne","fn","lastArgs","lastValue","every","arg","i","CircularIndeterminate","outer","CircularProgress_default","progress","Item","showFooter","configLoaded","pluginIsLoaded","applyFilters","visRows","obj","visColumns","columns","visFilters","dimensionFound","dimensionObjects","getUniqueKey","uniqueId","getPluginComponent","memoizedGetVisualizationConfig","calculatedHeight","originalHeight","headerRef","current","clientHeight","ITEM_CONTENT_PADDING_BOTTOM","memoizedGetContentStyle","contentRef","offsetHeight","loadingCover","LoadingMask","data_visualizer_plugin_build_es_lib","memoizedApplyFilters","onLoadingComplete","forDashboard","mapViews","layer","hideTitle","VisualizationItem_DefaultPlugin","onToggleItemExpanded","getContentStyle","measuredHeight","createRef","getVisualizationConfig","_componentDidMount","onVisualizationLoaded","prevState","VisualizationItem_ItemHeaderButtons","Item_ItemHeader","VisualizationItem_FatalErrorBoundary","VisualizationItem_ItemFooter","acSetActiveVisualizationType","grey200","Line","PRIVATE","messageTypes","_messageTypes","listStyleType","paddingLeft","seeAll","marginBottom","sender","lineHeight","snippet","maxHeight","overflow","MessagesItem","getMessageHref","msgIdentifier","messageType","getMessageSender","latestMsg","getMessageItems","editClass","readClass","read","msgDate","document","location","messageCount","formatDate","userSettings","widgets_Line","string","MessagesContainer","NotSupportedItem","justifyContent","alignItems","NotInterested_default","align","grey500","DeleteIcon","getItemTitle","ListItem","tRemoveListItemContent","contentItems","index","array","el","getContentItems","contentItem","Description","deleteButton","icons_Delete","grey900","newContent","whiteSpace","textField","fontStretch","onChangeText","updatedItem","d2_ui_rich_text","onEdit","multiline","fullWidth","textDivStyle","viewItem","getIframeSrc","appDetails","iframeSrc","ouIds","ouPath","AppItem","appKey","system","installedApps","app","src","SpacerItem","GridItem","VisualizationItem","TextItem","getGridItem","NoContentMessage","ProgressiveLoadingContainer","shouldLoad","containerRef","shouldLoadHandler","bufferPx","bufferFactor","innerHeight","rect","getBoundingClientRect","bottom","removeHandler","checkShouldLoad","debounceMs","registerHandler","_this3","objectWithoutProperties","eventProps","pick","EXPANDED_HEIGHT","ItemGrid","expandedItems","clickedId","isExpanded","onRemoveItem","onLayoutChange","newLayout","acUpdateDashboardLayout","onResizeStop","layout","oldItem","onItemResize","pluginResize","onRemoveItemWrapper","adjustHeightForExpanded","expandedItem","getItemComponent","itemClassNames","Item_ProgressiveLoadingContainer","Item_Item_Item","getItemComponents","widgets_NoContentMessage","react_grid_layout_default","MARGIN","cols","getGridColumns","rowHeight","GRID_ROW_HEIGHT","innerWidth","compactType","GRID_COMPACT_TYPE","isDraggable","isResizable","draggableCancel","validItems","hasShape","badgeContainer","borderRadius","badge","badgeRemove","FilterBadge","onRemove","count","FilterBar","onBadgeRemove","onBadgeClick","FilterBar_FilterBadge","removeItemFIlter","filtersSelector","createSelector","reduce","arr","DashboardContent","components_TitleBar_TitleBar","components_FilterBar_FilterBar","components_ItemGrid_ItemGrid","Content","hasDashboardContent","dashboardsIsEmpty","Dashboard_DashboardContent","dashboardsLoaded","contentNotReady","ControlBar_DashboardsBar","Dashboard_DashboardVerticalOffset","ViewDashboard_Content","ConfirmDeleteDialog","onDeleteConfirmed","onContinueEditing","destructive","buttonBarStyle","EditBar","translationDialogIsOpen","dashboardModel","confirmDeleteDialogOpen","redirectUrl","onConfirmDelete","onSave","newId","onDiscard","onDiscardChanges","onDelete","onTranslationsSaved","translations","dbLocale","translation","locale","property","onTranslate","fetchDashboardModel","toggleTranslationDialog","confirmDeleteDialog","deleteAccess","ControlBar_ConfirmDeleteDialog","translationDialog","d2_ui_translation_dialog_default","objectToTranslate","fieldsToTranslate","onTranslationSaved","onTranslationError","err","react_router","updateAccess","discardBtnText","primary","rightControls","sGetIsNewDashboard","dashboardToSave","tDeleteDashboard","acSetDashboardDisplayName","EditDashboard","initialized","initEditDashboard","setEditDashboard","getDashboardContent","EditDashboard_Content","ControlBar_EditBar","NewDashboard","setNewDashboard","Dashboard","setDashboard","match","params","selectDashboard","scrollToTop","scrollTo","mode","Dashboard_EditDashboard","Dashboard_NewDashboard","Dashboard_ViewDashboard","dashboardToSelect","preferredId","getItem","App","setCurrentUser","fetchDashboards","setControlBarRows","setDimensions","spacers","es_lib","exact","path","render","components_Dashboard_Dashboard","components_SnackbarMessage_SnackbarMessage","childContextTypes","controlBarRows","displayNameProp","filteredDimensions","apiFetchDimensions","dim","dimensionType","dataDimensionType","tSetDimensions","moment","addResources","arTranslations","daTranslations","enTranslations","esTranslations","frTranslations","idTranslations","kmTranslations","loTranslations","myTranslations","prsTranslations","psTranslations","ptTranslations","pt_BRTranslations","ruTranslations","svTranslations","tetTranslations","tgTranslations","ukTranslations","urTranslations","viTranslations","zhTranslations","zh_CNTranslations","setDefaultNamespace","changeLanguage","objectClean","conversations","$merge","d2Object","keyUiLocale","authorities","newState","k","$unshift","idToRemove","$splice","stateItems","layoutHasChanged","newStateItems","x","y","stateItem","si","configureStore","middleware","thunk","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","createStore","reducer","applyMiddleware","configI18n","config","sources","manifest","isProd","getManifest","version","manifest_generated_at","process","activities","dhis","dhis2","apiVersion","headers","schemas","getUserSettings","d2Init","initializedD2","ReactDOM","build_es","es","store","theme","createMuiTheme","dhis2theme","src_components_App","getElementById","init","itemWrap","param","isArray","isObject","global","Intl","DateTimeFormat","year","month","day","format","Date","replace","defaultValue","api","idx","indexOf","getWithoutId","_home_travis_build_dhis2_dashboards_app_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectSpread__WEBPACK_IMPORTED_MODULE_0__","itemTypeToExternalPlugin","_itemTypeToExternalPl","_home_travis_build_dhis2_dashboards_app_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_defineProperty__WEBPACK_IMPORTED_MODULE_3__","getPlugin","hasIntegratedPlugin","reportTable","chart","eventReport","eventChart","loadPlugin","plugin","load","loadingIndicator","getName","_home_travis_build_dhis2_dashboards_app_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_asyncToGenerator__WEBPACK_IMPORTED_MODULE_2__","_home_travis_build_dhis2_dashboards_app_node_modules_babel_preset_react_app_node_modules_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default","_ref$options","_home_travis_build_dhis2_dashboards_app_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectSpread__WEBPACK_IMPORTED_MODULE_1__","fetch","fetchedFavorite","resize","unmount","originalType","extractedMapView","mv","VIS_TYPE_COLUMN","VIS_TYPE_PIVOT_TABLE","__webpack_require__","__webpack_exports__","d2_utilizr_lib_isFunction__WEBPACK_IMPORTED_MODULE_0__","d2_utilizr_lib_isFunction__WEBPACK_IMPORTED_MODULE_0___default","n","_modules_util__WEBPACK_IMPORTED_MODULE_1__","isNonNegativeInteger","Number","isInteger","minH","itemWithShape","Error","col","row","itemWidth","itemHeight","getShape","round","getOriginalHeight","querySelector","isFunction","setViewportSize","clientWidth"],"mappings":"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","file":"static/js/main.a9965b5a.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"showMoreButton\":\"CategorizedMenuGroup_showMoreButton__3-0Wa\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"deleteItemButton\":\"DeleteItemButton_deleteItemButton__4YLrM\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"bar\":\"FilterBar_bar__2mF3Z\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"content\":\"ConfirmDeleteDialog_content__1IFNx\"};","import { getInstance } from 'd2';\nimport arrayClean from 'd2-utilizr/lib/arrayClean';\n\nimport { getEndPointName } from '../modules/itemTypes';\n\n// Id, name\nexport const getIdNameFields = ({ rename } = {}) => [\n    'id',\n    `${rename ? 'displayName~rename(name)' : 'name,displayName'}`,\n];\n\n// Item\nexport const getItemFields = () => [\n    'dimensionItem~rename(id)',\n    'displayName~rename(name)',\n    'dimensionItemType',\n];\n\n// Dimension\nexport const getDimensionFields = ({ withItems }) =>\n    arrayClean([\n        'dimension',\n        'legendSet[id]',\n        'filter',\n        'programStage',\n        withItems ? `items[${getItemFields().join(',')}]` : ``,\n    ]);\n\n// Axis\nexport const getAxesFields = ({ withItems }) => [\n    `columns[${getDimensionFields({ withItems }).join(',')}]`,\n    `rows[${getDimensionFields({ withItems }).join(',')}]`,\n    `filters[${getDimensionFields({ withItems }).join(',')}]`,\n];\n\n// Favorite\nexport const getFavoriteFields = ({ withDimensions, withOptions }) => {\n    return arrayClean([\n        `${getIdNameFields({ rename: true }).join(',')}`,\n        'displayDescription~rename(description)',\n        withDimensions ? `${getAxesFields({ withItems: true }).join(',')}` : ``,\n        withOptions\n            ? [\n                  '*',\n                  '!attributeDimensions',\n                  '!attributeValues',\n                  '!category',\n                  '!categoryDimensions',\n                  '!categoryOptionGroupSetDimensions',\n                  '!columnDimensions',\n                  '!dataDimensionItems',\n                  '!dataElementDimensions',\n                  '!dataElementGroupSetDimensions',\n                  '!filterDimensions',\n                  '!itemOrganisationUnitGroups',\n                  '!lastUpdatedBy',\n                  '!organisationUnitGroupSetDimensions',\n                  '!organisationUnitLevels',\n                  '!organisationUnits',\n                  '!programIndicatorDimensions',\n                  '!relativePeriods',\n                  '!reportParams',\n                  '!rowDimensions',\n                  '!series',\n                  '!translations',\n                  '!userOrganisationUnit',\n                  '!userOrganisationUnitChildren',\n                  '!userOrganisationUnitGrandChildren',\n              ].join(',')\n            : '',\n    ]);\n};\n\nexport const getFavoritesFields = ({ withDimensions }) => [\n    `reportTable[${getFavoriteFields({ withDimensions }).join(',')}]`,\n    `chart[${['type', ...getFavoriteFields({ withDimensions })].join(',')}]`,\n    `map[${getFavoriteFields({ withDimensions }).join(',')}]`,\n    `eventReport[${getFavoriteFields({ withDimensions }).join(',')}]`,\n    `eventChart[${getFavoriteFields({ withDimensions }).join(',')}]`,\n];\n\n// List item\nexport const getListItemFields = () => [\n    `reports[${getIdNameFields({ rename: true }).join(',')}]`,\n    `resources[${getIdNameFields({ rename: true }).join(',')}]`,\n    `users[${getIdNameFields({ rename: true }).join(',')}]`,\n];\n\n// Map\nexport const getMapFields = () => [\n    `${getIdNameFields({ rename: true }).join(',')}`,\n    'user,longitude,latitude,zoom,basemap',\n    `mapViews[${getFavoriteFields({\n        withDimensions: true,\n        withOptions: true,\n    })}]`,\n];\n\n// Api\n\n// Get more info about the favorite of a dashboard item\nexport const apiFetchFavorite = (id, type, { fields }) =>\n    getInstance().then(d2 =>\n        d2.Api.getApi().get(`${getEndPointName(type)}/${id}`, {\n            fields:\n                fields ||\n                getFavoriteFields({\n                    withDimensions: true,\n                    withOptions: true,\n                }),\n        })\n    );\n","import i18n from '@dhis2/d2-i18n';\nimport TableIcon from '@material-ui/icons/ViewList';\nimport ChartIcon from '@material-ui/icons/InsertChart';\nimport MapIcon from '@material-ui/icons/Public';\nimport ExtensionIcon from '@material-ui/icons/Extension';\nimport DescriptionIcon from '@material-ui/icons/Description';\nimport PersonIcon from '@material-ui/icons/Person';\nimport FontDownloadIcon from '@material-ui/icons/FontDownload';\nimport EmailIcon from '@material-ui/icons/Email';\nimport CropFreeIcon from '@material-ui/icons/CropFree';\nimport NotInterestedIcon from '@material-ui/icons/NotInterested';\n\nimport { getBaseUrl } from './util';\n\n// Item types\nexport const VISUALIZATION = 'VISUALIZATION';\nexport const REPORT_TABLE = 'REPORT_TABLE';\nexport const CHART = 'CHART';\nexport const MAP = 'MAP';\nexport const EVENT_REPORT = 'EVENT_REPORT';\nexport const EVENT_CHART = 'EVENT_CHART';\nexport const APP = 'APP';\nexport const REPORTS = 'REPORTS';\nexport const RESOURCES = 'RESOURCES';\nexport const USERS = 'USERS';\nexport const MESSAGES = 'MESSAGES';\nexport const TEXT = 'TEXT';\nexport const SPACER = 'SPACER';\n\nconst DOMAIN_TYPE_AGGREGATE = 'AGGREGATE';\nconst DOMAIN_TYPE_TRACKER = 'TRACKER';\n\n// Dashboard helpers\nexport const isVisualizationType = item =>\n    !!itemTypeMap[item.type].isVisualizationType;\nexport const hasMapView = itemType =>\n    itemTypeMap[itemType].domainType === DOMAIN_TYPE_AGGREGATE;\nexport const isTrackerDomainType = itemType =>\n    itemTypeMap[itemType].domainType === DOMAIN_TYPE_TRACKER;\nexport const getDefaultItemCount = itemType =>\n    itemTypeMap[itemType].defaultItemCount || 5;\nexport const getAppName = itemType => itemTypeMap[itemType].appName || '';\n\n// Item type map\nexport const itemTypeMap = {\n    [VISUALIZATION]: {\n        id: VISUALIZATION,\n        endPointName: 'visualizations',\n        propName: 'visualization',\n        pluralTitle: i18n.t('Visualizations'),\n        appUrl: id => `dhis-web-data-visualizer/#/${id}`,\n        appName: 'Data Visualizer',\n        defaultItemCount: 10,\n    },\n    [REPORT_TABLE]: {\n        id: REPORT_TABLE,\n        endPointName: 'visualizations',\n        propName: 'visualization',\n        pluralTitle: i18n.t('Pivot tables'),\n        domainType: DOMAIN_TYPE_AGGREGATE,\n        isVisualizationType: true,\n        appUrl: id => `dhis-web-data-visualizer/#/${id}`,\n        appName: 'Data Visualizer',\n    },\n    [CHART]: {\n        id: CHART,\n        endPointName: 'visualizations',\n        propName: 'visualization',\n        pluralTitle: i18n.t('Charts'),\n        domainType: DOMAIN_TYPE_AGGREGATE,\n        isVisualizationType: true,\n        appUrl: id => `dhis-web-data-visualizer/#/${id}`,\n        appName: 'Data Visualizer',\n    },\n    [MAP]: {\n        id: MAP,\n        endPointName: 'maps',\n        propName: 'map',\n        pluralTitle: i18n.t('Maps'),\n        domainType: DOMAIN_TYPE_AGGREGATE,\n        isVisualizationType: true,\n        appUrl: id => `dhis-web-maps/?id=${id}`,\n        appName: 'Maps',\n    },\n    [EVENT_REPORT]: {\n        id: EVENT_REPORT,\n        endPointName: 'eventReports',\n        propName: 'eventReport',\n        pluralTitle: i18n.t('Event reports'),\n        domainType: DOMAIN_TYPE_TRACKER,\n        isVisualizationType: true,\n        appUrl: id => `dhis-web-event-reports/?id=${id}`,\n        appName: 'Event Reports',\n    },\n    [EVENT_CHART]: {\n        id: EVENT_CHART,\n        endPointName: 'eventCharts',\n        propName: 'eventChart',\n        pluralTitle: i18n.t('Event charts'),\n        domainType: DOMAIN_TYPE_TRACKER,\n        isVisualizationType: true,\n        appUrl: id => `dhis-web-event-visualizer/?id=${id}`,\n        appName: 'Event Visualizer',\n    },\n    [APP]: {\n        endPointName: 'apps',\n        propName: 'appKey',\n        pluralTitle: i18n.t('Apps'),\n    },\n    [REPORTS]: {\n        id: REPORTS,\n        endPointName: 'reports',\n        propName: 'reports',\n        pluralTitle: i18n.t('Reports'),\n        appUrl: id => `dhis-web-reports/#/standard-report/view/${id}`,\n    },\n    [RESOURCES]: {\n        id: RESOURCES,\n        endPointName: 'resources',\n        propName: 'resources',\n        pluralTitle: i18n.t('Resources'),\n        appUrl: id => `api/documents/${id}/data`,\n    },\n    [USERS]: {\n        id: USERS,\n        endPointName: 'users',\n        propName: 'users',\n        pluralTitle: i18n.t('Users'),\n        appUrl: id => `dhis-web-dashboard-integration/profile.action?id=${id}`,\n    },\n    [TEXT]: {\n        id: TEXT,\n        propName: 'text',\n    },\n    [MESSAGES]: {\n        propName: 'messages',\n    },\n    [SPACER]: {\n        propName: 'text',\n    },\n};\n\nexport const getEndPointName = type => itemTypeMap[type].endPointName;\n\nexport const getItemUrl = (type, item, d2) => {\n    let url;\n\n    if (type === APP) {\n        url = item.launchUrl;\n    }\n\n    if (itemTypeMap[type] && itemTypeMap[type].appUrl) {\n        url = `${getBaseUrl(d2)}/${itemTypeMap[type].appUrl(item.id)}`;\n    }\n\n    return url;\n};\n\nexport const getItemIcon = type => {\n    switch (type) {\n        case REPORT_TABLE:\n        case EVENT_REPORT:\n        case REPORTS:\n            return TableIcon;\n        case CHART:\n        case EVENT_CHART:\n            return ChartIcon;\n        case MAP:\n            return MapIcon;\n        case APP:\n            return ExtensionIcon;\n        case RESOURCES:\n            return DescriptionIcon;\n        case USERS:\n            return PersonIcon;\n        case TEXT:\n            return FontDownloadIcon;\n        case MESSAGES:\n            return EmailIcon;\n        case SPACER:\n            return CropFreeIcon;\n        default:\n            return NotInterestedIcon;\n    }\n};\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"Item_list__2oHc1\",\"item\":\"Item_item__lO40M\",\"itemicon\":\"Item_itemicon__dv5ah\",\"link\":\"Item_link__2gULT\",\"deleteicon\":\"Item_deleteicon__3c7bl\",\"deletebutton\":\"Item_deletebutton__1DfY5\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"section\":\"EditTitleBar_section__2sBzn\",\"titleDescription\":\"EditTitleBar_titleDescription__1-pfK\",\"title\":\"EditTitleBar_title__2fOQP\",\"description\":\"EditTitleBar_description__fKEX6\",\"itemSelector\":\"EditTitleBar_itemSelector__PWJdH\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"actions\":\"ViewTitleBar_actions__1kGtw\",\"editLink\":\"ViewTitleBar_editLink__1HKr0\",\"titleBar\":\"ViewTitleBar_titleBar__1K-pW\",\"titleBarIcon\":\"ViewTitleBar_titleBarIcon__2spKM\"};","export const RECEIVED_USER = 'RECEIVED_USER';\n\nexport const DEFAULT_STATE_USER = {\n    id: '',\n    username: '',\n    uiLocale: '',\n    isSuperuser: false,\n};\n\nexport default (state = DEFAULT_STATE_USER, action) => {\n    switch (action.type) {\n        case RECEIVED_USER: {\n            return fromD2ToUserObj(action.value);\n        }\n        default:\n            return state;\n    }\n};\n\nfunction fromD2ToUserObj(d2Object) {\n    return {\n        id: d2Object.id,\n        username: d2Object.username,\n        uiLocale: d2Object.settings.keyUiLocale,\n        isSuperuser: d2Object.authorities.has('ALL'),\n    };\n}\n\n// selectors\n\nexport const sGetUserId = state => state.user.id;\nexport const sGetUserUsername = state => state.user.username;\nexport const sGetIsSuperuser = state => state.user.isSuperuser;\nexport const sGetUiLocale = state => state.user.uiLocale;\n","import { TEXT, SPACER } from './itemTypes';\nimport { getGridItemProperties } from '../components/ItemGrid/gridUtil';\n\nexport const spacerContent = 'SPACER_ITEM_FOR_DASHBOARD_LAYOUT_CONVENIENCE';\nexport const emptyTextItemContent = 'TEXT_ITEM_WITH_NO_CONTENT';\n\nconst isBackendSpacerType = item =>\n    item.type === TEXT && item.text === spacerContent;\nconst isUiSpacerType = item => item.type === SPACER;\nconst isTextType = item => item.type === TEXT && item.text !== spacerContent;\n\nexport const convertUiItemsToBackend = items =>\n    items.map(item => {\n        let text = null;\n        if (isUiSpacerType(item)) {\n            text = spacerContent;\n        } else if (isTextType(item)) {\n            text = item.text || emptyTextItemContent;\n        }\n\n        return {\n            ...item,\n            ...(text ? { text } : {}),\n        };\n    });\n\nexport const convertBackendItemsToUi = items =>\n    items.map(item => {\n        const type = isBackendSpacerType(item) ? SPACER : item.type;\n        const gridProperties = getGridItemProperties(item.id);\n\n        const text = isTextType(item)\n            ? item.text === emptyTextItemContent\n                ? ''\n                : item.text\n            : null;\n\n        return {\n            ...item,\n            ...(text !== null ? { text } : {}),\n            type,\n            ...gridProperties,\n        };\n    });\n","/** @module reducers/dashboards */\n\nimport arrayFrom from 'd2-utilizr/lib/arrayFrom';\nimport arraySort from 'd2-utilizr/lib/arraySort';\n\nimport { orArray, orObject } from '../modules/util';\nimport { convertBackendItemsToUi } from '../modules/uiBackendItemConverter';\n\nexport const SET_DASHBOARDS = 'SET_DASHBOARDS';\nexport const ADD_DASHBOARDS = 'ADD_DASHBOARDS';\nexport const SET_DASHBOARD_STARRED = 'SET_DASHBOARD_STARRED';\nexport const SET_DASHBOARD_DISPLAY_NAME = 'SET_DASHBOARD_DISPLAY_NAME';\nexport const SET_DASHBOARD_ITEMS = 'SET_DASHBOARD_ITEMS';\n\nexport const DEFAULT_STATE_DASHBOARDS = {\n    byId: null,\n    items: [],\n};\n\n// reducer helper functions\n\nconst updateDashboardProp = ({ state, dashboardId, prop, value }) => ({\n    byId: {\n        ...state.byId,\n        [dashboardId]: {\n            ...state.byId[dashboardId],\n            [prop]: value,\n        },\n    },\n    items: state.items,\n});\n\n/**\n * Reducer that computes and returns the new state based on the given action\n * @function\n * @param {Object} state The current state\n * @param {Object} action The action to be evaluated\n * @returns {Object}\n */\nexport default (state = DEFAULT_STATE_DASHBOARDS, action) => {\n    switch (action.type) {\n        case SET_DASHBOARDS: {\n            return {\n                byId: action.value,\n                items: [],\n            };\n        }\n        case ADD_DASHBOARDS: {\n            return {\n                ...state,\n                byId: {\n                    ...state.byId,\n                    ...action.value,\n                },\n            };\n        }\n        case SET_DASHBOARD_STARRED: {\n            return updateDashboardProp({\n                state,\n                dashboardId: action.dashboardId,\n                prop: 'starred',\n                value: action.value,\n            });\n        }\n        case SET_DASHBOARD_DISPLAY_NAME: {\n            return updateDashboardProp({\n                state,\n                dashboardId: action.dashboardId,\n                prop: 'displayName',\n                value: action.value,\n            });\n        }\n        case SET_DASHBOARD_ITEMS: {\n            return {\n                ...state,\n                items: action.value,\n            };\n        }\n        default:\n            return state;\n    }\n};\n\n// root selector\n\nexport const sGetDashboardsRoot = state => state.dashboards;\n\n// selector level 1\n\n/**\n * Selector which returns a dashboard by id from the state object\n * If no matching dashboard is found it returns undefined\n * If dashboards.byId is null, then the dashboards api request\n * has not yet completed. If dashboards.byId is an empty object\n * then the dashboards api request is complete, but no dashboards\n * were returned\n *\n * @function\n * @param {Object} state The current state\n * @param {Number} id The id of the dashboard\n * @returns {Object | undefined}\n */\nexport const sGetDashboardById = (state, id) =>\n    orObject(sGetDashboardsRoot(state).byId)[id];\n\nexport const sDashboardsIsFetching = state => {\n    return sGetDashboardsRoot(state).byId === null;\n};\n\n/**\n * Selector which returns all dashboards (the byId object)\n *\n * @function\n * @param {Object} state The current state\n * @returns {Object | undefined}\n */\nexport const sGetAllDashboards = state =>\n    orObject(sGetDashboardsRoot(state).byId);\n\n/**\n * Selector which returns the current dashboard items\n *\n * @function\n * @param {Object} state The current state\n * @returns {Array}\n */\nexport const sGetDashboardItems = state => sGetDashboardsRoot(state).items;\n\n// selector level 2\n\nexport const sGetStarredDashboards = state =>\n    Object.values(sGetAllDashboards(state)).filter(\n        dashboard => dashboard.starred === true\n    );\n\nexport const sGetUnstarredDashboards = state =>\n    Object.values(sGetAllDashboards(state)).filter(\n        dashboard => dashboard.starred === false\n    );\n\n// selector level 3\n\nexport const sGetStarredDashboardIds = state => {\n    return sGetStarredDashboards(state).map(dashboard => dashboard.id);\n};\n\nexport const sGetUnstarredDashboardIds = state =>\n    sGetUnstarredDashboards(state).map(dashboard => dashboard.id);\n\nexport const sGetDashboardsSortedByStarred = state => [\n    ...arraySort(sGetStarredDashboards(state), 'ASC', 'displayName'),\n    ...arraySort(sGetUnstarredDashboards(state), 'ASC', 'displayName'),\n];\n\n// utils\n\n/**\n * Returns the array of dashboards, customized for ui\n * @function\n * @param {Array} data The original dashboard list\n * @returns {Array}\n */\nexport const getCustomDashboards = data =>\n    arrayFrom(data).map(d => ({\n        id: d.id,\n        name: d.name,\n        displayName: d.displayName,\n        description: d.description,\n        displayDescription: d.displayDescription,\n        starred: d.favorite,\n        owner: d.user.name,\n        created: d.created\n            .split('T')\n            .join(' ')\n            .substr(0, 16),\n        lastUpdated: d.lastUpdated\n            .split('T')\n            .join(' ')\n            .substr(0, 16),\n        access: d.access,\n        numberOfItems: orArray(d.dashboardItems).length,\n        dashboardItems: convertBackendItemsToUi(d.dashboardItems),\n    }));\n","/** @module reducers/editDashboard */\nimport update from 'immutability-helper';\nimport isEmpty from 'lodash/isEmpty';\nimport { orArray, orObject } from '../modules/util';\n\nexport const RECEIVED_EDIT_DASHBOARD = 'RECEIVED_EDIT_DASHBOARD';\nexport const RECEIVED_NOT_EDITING = 'RECEIVED_NOT_EDITING';\nexport const START_NEW_DASHBOARD = 'START_NEW_DASHBOARD';\nexport const RECEIVED_TITLE = 'RECEIVED_TITLE';\nexport const RECEIVED_DESCRIPTION = 'RECEIVED_DESCRIPTION';\nexport const ADD_DASHBOARD_ITEM = 'ADD_DASHBOARD_ITEM';\nexport const REMOVE_DASHBOARD_ITEM = 'REMOVE_DASHBOARD_ITEM';\nexport const UPDATE_DASHBOARD_ITEM = 'UPDATE_DASHBOARD_ITEM';\nexport const RECEIVED_DASHBOARD_LAYOUT = 'RECEIVED_DASHBOARD_LAYOUT';\n\nexport const DEFAULT_STATE_EDIT_DASHBOARD = {};\nexport const NEW_DASHBOARD_STATE = {\n    id: '',\n    name: '',\n    access: {},\n    description: '',\n    dashboardItems: [],\n};\n\nexport default (state = DEFAULT_STATE_EDIT_DASHBOARD, action) => {\n    switch (action.type) {\n        case RECEIVED_EDIT_DASHBOARD: {\n            const newState = {};\n            Object.keys(NEW_DASHBOARD_STATE).map(\n                k => (newState[k] = action.value[k])\n            );\n            return newState;\n        }\n        case RECEIVED_NOT_EDITING:\n            return DEFAULT_STATE_EDIT_DASHBOARD;\n        case START_NEW_DASHBOARD:\n            return NEW_DASHBOARD_STATE;\n        case RECEIVED_TITLE: {\n            return Object.assign({}, state, { name: action.value });\n        }\n        case RECEIVED_DESCRIPTION: {\n            return Object.assign({}, state, {\n                description: action.value,\n            });\n        }\n        case ADD_DASHBOARD_ITEM:\n            return update(state, {\n                dashboardItems: { $unshift: [action.value] },\n            });\n        case REMOVE_DASHBOARD_ITEM: {\n            const idToRemove = action.value;\n\n            const dashboardItemIndex = state.dashboardItems.findIndex(\n                item => item.id === idToRemove\n            );\n\n            if (dashboardItemIndex > -1) {\n                return update(state, {\n                    dashboardItems: {\n                        $splice: [[dashboardItemIndex, 1]],\n                    },\n                });\n            }\n\n            return state;\n        }\n        case RECEIVED_DASHBOARD_LAYOUT: {\n            const stateItems = orArray(state.dashboardItems);\n            let layoutHasChanged = false;\n\n            const newStateItems = action.value.map(({ x, y, w, h, i }) => {\n                const stateItem = stateItems.find(si => si.id === i);\n\n                if (\n                    !(\n                        stateItem.x === x &&\n                        stateItem.y === y &&\n                        stateItem.w === w &&\n                        stateItem.h === h\n                    )\n                ) {\n                    layoutHasChanged = true;\n                    return Object.assign({}, stateItem, { w, h, x, y });\n                }\n\n                return stateItem;\n            });\n\n            return layoutHasChanged\n                ? {\n                      ...state,\n                      dashboardItems: newStateItems,\n                  }\n                : state;\n        }\n        case UPDATE_DASHBOARD_ITEM: {\n            const dashboardItem = action.value;\n\n            const dashboardItemIndex = state.dashboardItems.findIndex(\n                item => item.id === dashboardItem.id\n            );\n\n            if (dashboardItemIndex > -1) {\n                const newState = update(state, {\n                    dashboardItems: {\n                        $splice: [\n                            [\n                                dashboardItemIndex,\n                                1,\n                                Object.assign({}, dashboardItem),\n                            ],\n                        ],\n                    },\n                });\n\n                return newState;\n            }\n\n            return state;\n        }\n        default:\n            return state;\n    }\n};\n\n// root selector\n\nexport const sGetEditDashboardRoot = state => state.editDashboard;\n\n// selectors\n\nexport const sGetIsEditing = state => !isEmpty(state.editDashboard);\n\nexport const sGetIsNewDashboard = state => {\n    return (\n        !isEmpty(state.editDashboard) && sGetEditDashboardRoot(state).id === ''\n    );\n};\n\nexport const sGetEditDashboardItems = state =>\n    orObject(sGetEditDashboardRoot(state)).dashboardItems;\n","export const CLEAR_EDIT_ITEM_FILTERS = 'CLEAR_EDIT_ITEM_FILTERS';\nexport const REMOVE_EDIT_ITEM_FILTER = 'REMOVE_EDIT_ITEM_FILTER';\nexport const SET_EDIT_ITEM_FILTERS = 'SET_EDIT_ITEM_FILTERS';\n\nexport const DEFAULT_STATE_EDIT_ITEM_FILTERS = {};\n\nexport default (state = DEFAULT_STATE_EDIT_ITEM_FILTERS, action) => {\n    switch (action.type) {\n        case REMOVE_EDIT_ITEM_FILTER: {\n            const newState = { ...state };\n\n            delete newState[action.id];\n\n            return newState;\n        }\n        case SET_EDIT_ITEM_FILTERS: {\n            return action.filters;\n        }\n        case CLEAR_EDIT_ITEM_FILTERS: {\n            return DEFAULT_STATE_EDIT_ITEM_FILTERS;\n        }\n        default:\n            return state;\n    }\n};\n\n// selectors\n\nexport const sGetEditItemFiltersRoot = state => state.editItemFilters;\n\nexport const sGetEditFiltersKeys = state =>\n    Object.keys(sGetEditItemFiltersRoot(state));\n","/** @module reducers/selected */\nimport { combineReducers } from 'redux';\n\nimport { validateReducer } from '../modules/util';\n\nexport const SET_SELECTED_ID = 'SET_SELECTED_ID';\nexport const SET_SELECTED_ISLOADING = 'SET_SELECTED_ISLOADING';\nexport const SET_SELECTED_SHOWDESCRIPTION = 'SET_SELECTED_SHOWDESCRIPTION';\n\nexport const DEFAULT_STATE_SELECTED_ID = null;\nexport const DEFAULT_STATE_SELECTED_ISLOADING = false;\nexport const DEFAULT_STATE_SELECTED_SHOWDESCRIPTION = false;\n\n/**\n * Reducer functions that computes and returns the new state based on the given action\n * @function\n * @param {Object} state The current state\n * @param {Object} action The action to be evaluated\n */\nconst id = (state = DEFAULT_STATE_SELECTED_ID, action) => {\n    switch (action.type) {\n        case SET_SELECTED_ID:\n            return validateReducer(action.value, DEFAULT_STATE_SELECTED_ID);\n        default:\n            return state;\n    }\n};\n\nconst isLoading = (state = DEFAULT_STATE_SELECTED_ISLOADING, action) => {\n    switch (action.type) {\n        case SET_SELECTED_ISLOADING:\n            return validateReducer(\n                action.value,\n                DEFAULT_STATE_SELECTED_ISLOADING\n            );\n        default:\n            return state;\n    }\n};\n\nconst showDescription = (\n    state = DEFAULT_STATE_SELECTED_SHOWDESCRIPTION,\n    action\n) => {\n    switch (action.type) {\n        case SET_SELECTED_SHOWDESCRIPTION:\n            return validateReducer(\n                action.value,\n                DEFAULT_STATE_SELECTED_SHOWDESCRIPTION\n            );\n        default:\n            return state;\n    }\n};\n\nexport default combineReducers({\n    id,\n    isLoading,\n    showDescription,\n});\n\n// Selectors\n\nexport const sGetSelectedRoot = state => state.selected;\n\nexport const sGetSelectedId = state => sGetSelectedRoot(state).id;\n\nexport const sGetSelectedIsLoading = state => sGetSelectedRoot(state).isLoading;\n\nexport const sGetSelectedShowDescription = state =>\n    sGetSelectedRoot(state).showDescription;\n","import {\n    REMOVE_EDIT_ITEM_FILTER,\n    SET_EDIT_ITEM_FILTERS,\n    CLEAR_EDIT_ITEM_FILTERS,\n} from '../reducers/editItemFilters';\n\n// actions\n\nexport const acRemoveEditItemFilter = id => ({\n    type: REMOVE_EDIT_ITEM_FILTER,\n    id,\n});\n\nexport const acClearEditItemFilters = () => ({\n    type: CLEAR_EDIT_ITEM_FILTERS,\n});\n\nexport const acSetEditItemFilters = filters => ({\n    type: SET_EDIT_ITEM_FILTERS,\n    filters,\n});\n","export const CLEAR_ITEM_FILTERS = 'CLEAR_ITEM_FILTERS';\nexport const SET_ITEM_FILTERS = 'SET_ITEM_FILTERS';\nexport const ADD_ITEM_FILTER = 'ADD_ITEM_FILTER';\nexport const REMOVE_ITEM_FILTER = 'REMOVE_ITEM_FILTER';\n\nexport const DEFAULT_STATE_ITEM_FILTERS = {};\n\nexport default (state = DEFAULT_STATE_ITEM_FILTERS, action) => {\n    switch (action.type) {\n        case ADD_ITEM_FILTER: {\n            return {\n                ...state,\n                [action.filter.id]: action.filter.value,\n            };\n        }\n        case REMOVE_ITEM_FILTER: {\n            const newState = { ...state };\n\n            delete newState[action.id];\n\n            return newState;\n        }\n        case SET_ITEM_FILTERS: {\n            return action.filters;\n        }\n        case CLEAR_ITEM_FILTERS: {\n            return DEFAULT_STATE_ITEM_FILTERS;\n        }\n        default:\n            return state;\n    }\n};\n\n// selectors\n\nexport const sGetItemFiltersRoot = state => state.itemFilters;\n\nexport const sGetFiltersKeys = state => Object.keys(sGetItemFiltersRoot(state));\n","import {\n    ADD_ITEM_FILTER,\n    REMOVE_ITEM_FILTER,\n    SET_ITEM_FILTERS,\n    CLEAR_ITEM_FILTERS,\n} from '../reducers/itemFilters';\n\nexport const FILTER_ORG_UNIT = 'ou';\n\n// actions\n\nexport const acAddItemFilter = filter => ({\n    type: ADD_ITEM_FILTER,\n    filter,\n});\n\nexport const acRemoveItemFilter = id => ({\n    type: REMOVE_ITEM_FILTER,\n    id,\n});\n\nexport const acClearItemFilters = () => ({\n    type: CLEAR_ITEM_FILTERS,\n});\n\nexport const acSetItemFilters = filters => ({\n    type: SET_ITEM_FILTERS,\n    filters,\n});\n","import update from 'immutability-helper';\nimport { arrayToIdMap } from '../modules/util';\n\nexport const RECEIVED_MESSAGES = 'RECEIVED_MESSAGES';\n\nexport default (state = {}, action) => {\n    switch (action.type) {\n        case RECEIVED_MESSAGES: {\n            const conversations = arrayToIdMap(action.value);\n\n            const newState = update(state, { $merge: conversations });\n\n            return newState;\n        }\n        default:\n            return state;\n    }\n};\n\n// selectors\n\nexport const sGetMessagesRoot = state => state.messages;\n","import { getInstance } from 'd2';\n\nexport const getMessages = () => {\n    const fields =\n        'id,messageCount,lastUpdated,messageType,displayName,read,messages[id,read,sender[id,displayName],text,lastUpdated]';\n    const url = `/messageConversations?fields=${fields}&order=read:asc&pageSize=200`;\n    return getInstance()\n        .then(d2 => d2.Api.getApi().get(url))\n        .catch(error => console.log('Error:', error));\n};\n","export const RECEIVED_SNACKBAR_MESSAGE = 'RECEIVED_SNACKBAR_MESSAGE';\nexport const CLOSE_SNACKBAR = 'CLOSE_SNACKBAR';\n\nexport const DEFAULT_STATE_SNACKBAR = {\n    message: {},\n    duration: null,\n    open: false,\n};\n\nexport default (state = DEFAULT_STATE_SNACKBAR, action) => {\n    switch (action.type) {\n        case RECEIVED_SNACKBAR_MESSAGE: {\n            return { ...state, ...action.value };\n        }\n        case CLOSE_SNACKBAR: {\n            return DEFAULT_STATE_SNACKBAR;\n        }\n        default:\n            return state;\n    }\n};\n\n// selectors\n\nexport const sGetSnackbar = state => state.snackbar || DEFAULT_STATE_SNACKBAR;\n","import {\n    RECEIVED_SNACKBAR_MESSAGE,\n    CLOSE_SNACKBAR,\n} from '../reducers/snackbar';\n\nexport const acReceivedSnackbarMessage = value => ({\n    type: RECEIVED_SNACKBAR_MESSAGE,\n    value,\n});\n\nexport const acCloseSnackbar = () => ({\n    type: CLOSE_SNACKBAR,\n});\n","import { orObject } from '../modules/util';\nimport objectClean from 'd2-utilizr/lib/objectClean';\n\n/** @module reducers/visualizations */\n\nexport const ADD_VISUALIZATION = 'ADD_VISUALIZATION';\nexport const SET_ACTIVE_VISUALIZATION_TYPE = 'SET_ACTIVE_VISUALIZATION_TYPE';\n\nexport const DEFAULT_STATE_VISUALIZATIONS = {};\n\nconst isEmpty = p => p === undefined || p === null;\n\nexport default (state = DEFAULT_STATE_VISUALIZATIONS, action) => {\n    switch (action.type) {\n        case ADD_VISUALIZATION: {\n            return {\n                ...state,\n                [action.value.id]: objectClean(\n                    {\n                        ...orObject(state[action.value.id]),\n                        ...action.value,\n                    },\n                    isEmpty\n                ),\n            };\n        }\n        case SET_ACTIVE_VISUALIZATION_TYPE: {\n            return {\n                ...state,\n                [action.id]: objectClean(\n                    {\n                        ...orObject(state[action.id]),\n                        activeType: action.activeType,\n                    },\n                    isEmpty\n                ),\n            };\n        }\n        default:\n            return state;\n    }\n};\n\n// root selector\nexport const sGetVisualizationsRoot = state => state.visualizations;\n\n// selectors level 1\nexport const sGetVisualization = (state, id) => {\n    return sGetVisualizationsRoot(state)[id];\n};\n","import {\n    ADD_VISUALIZATION,\n    SET_ACTIVE_VISUALIZATION_TYPE,\n} from '../reducers/visualizations';\n\nexport const acAddVisualization = value => ({\n    type: ADD_VISUALIZATION,\n    value,\n});\n\nexport const acSetActiveVisualizationType = (id, activeType) => {\n    const action = {\n        type: SET_ACTIVE_VISUALIZATION_TYPE,\n        id,\n        activeType,\n    };\n\n    return action;\n};\n","import arrayClean from 'd2-utilizr/lib/arrayClean';\nimport {\n    getListItemFields,\n    getFavoritesFields,\n    getIdNameFields,\n} from './metadata';\n\n// Helper functions\n\nexport const onError = error => console.log('Error: ', error);\n\n// Dashboard item\nexport const getDashboardItemsFields = ({ withFavorite } = {}) =>\n    arrayClean([\n        'id',\n        'type',\n        'shape',\n        'x',\n        'y',\n        'width~rename(w)',\n        'height~rename(h)',\n        'messages',\n        'text',\n        'appKey',\n        `${getListItemFields().join(',')}`,\n        withFavorite\n            ? `${getFavoritesFields({\n                  withDimensions: withFavorite.withDimensions,\n              }).join(',')}`\n            : ``,\n    ]);\n\n// Dashboard\nexport const getDashboardFields = ({ withItems, withFavorite } = {}) =>\n    arrayClean([\n        `${getIdNameFields().join(',')}`,\n        'description',\n        'displayDescription',\n        'favorite',\n        `user[${getIdNameFields({ rename: true }).join(',')}]`,\n        'created',\n        'lastUpdated',\n        'access',\n        withItems\n            ? `dashboardItems[${getDashboardItemsFields({\n                  withFavorite,\n              }).join(',')}]`\n            : ``,\n    ]);\n","import { getInstance } from 'd2';\nimport arrayClean from 'd2-utilizr/lib/arrayClean';\nimport { onError, getDashboardFields } from './index';\n\n// Get \"all\" dashboards on startup\nexport const apiFetchDashboards = () =>\n    getInstance()\n        .then(d2 =>\n            d2.models.dashboard.list({\n                fields: [\n                    getDashboardFields().join(','),\n                    'dashboardItems[id]',\n                ].join(','),\n                paging: 'false',\n            })\n        )\n        .catch(onError);\n\n// Get more info about selected dashboard\nexport const apiFetchDashboard = id =>\n    getInstance()\n        .then(d2 =>\n            d2.models.dashboard.get(id, {\n                fields: arrayClean(\n                    getDashboardFields({\n                        withItems: true,\n                        withFavorite: { withDimensions: false },\n                    })\n                ).join(','),\n            })\n        )\n        .catch(onError);\n\n// Star dashboard\nexport const apiStarDashboard = (id, isStarred) => {\n    const url = `dashboards/${id}/favorite`;\n\n    getInstance().then(d2 => {\n        if (isStarred) {\n            d2.Api.getApi().post(url);\n        } else {\n            d2.Api.getApi().delete(url);\n        }\n    });\n};\n\nexport const apiDeleteDashboard = id => {\n    return getInstance()\n        .then(d2 => {\n            return d2.models.dashboards\n                .get(id)\n                .then(dashboard => dashboard.delete());\n        })\n        .catch(onError);\n};\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport Snackbar from '@material-ui/core/Snackbar';\nimport PropTypes from 'prop-types';\n\nimport { sGetSnackbar } from '../../reducers/snackbar';\nimport { acCloseSnackbar } from '../../actions/snackbar';\n\nconst LOADING_DASHBOARD = 'LOADING_DASHBOARD';\nexport const loadingDashboardMsg = { name: '', type: LOADING_DASHBOARD };\n\nconst SnackbarMessageContent = ({ message }) => {\n    if (typeof message === 'object') {\n        //future message types:  switch(message.type)\n        return (\n            <span>\n                Loading <span style={{ fontWeight: 800 }}>{message.name}</span>{' '}\n                dashboard\n            </span>\n        );\n    }\n    return message;\n};\n\nexport const SnackbarMessage = props => {\n    return (\n        <Snackbar\n            style={{ zIndex: 10001 }}\n            open={props.snackbarOpen}\n            message={<SnackbarMessageContent message={props.snackbarMessage} />}\n            autoHideDuration={props.snackbarDuration}\n            onClose={props.onCloseSnackbar}\n        />\n    );\n};\n\nconst mapStateToProps = state => {\n    const { message, duration, open } = sGetSnackbar(state);\n    return {\n        snackbarOpen: open,\n        snackbarMessage: message,\n        snackbarDuration: duration,\n    };\n};\n\nSnackbarMessage.propTypes = {\n    snackbarDuration: PropTypes.string,\n    snackbarMessage: PropTypes.object,\n    snackbarOpen: PropTypes.bool,\n    onCloseSnackbar: PropTypes.func,\n};\n\nexport default connect(\n    mapStateToProps,\n    {\n        onCloseSnackbar: acCloseSnackbar,\n    }\n)(SnackbarMessage);\n","import { getCustomDashboards, sGetDashboardById } from '../reducers/dashboards';\nimport { sGetIsEditing } from '../reducers/editDashboard';\nimport { sGetEditItemFiltersRoot } from '../reducers/editItemFilters';\nimport {\n    SET_SELECTED_ID,\n    SET_SELECTED_ISLOADING,\n    SET_SELECTED_SHOWDESCRIPTION,\n    sGetSelectedIsLoading,\n    sGetSelectedId,\n} from '../reducers/selected';\nimport { sGetUserUsername } from '../reducers/user';\n\nimport { acSetDashboardItems, acAppendDashboards } from './dashboards';\nimport { acClearEditItemFilters } from './editItemFilters';\nimport { acClearItemFilters, acSetItemFilters } from './itemFilters';\nimport { tGetMessages } from '../components/Item/MessagesItem/actions';\nimport { acReceivedSnackbarMessage, acCloseSnackbar } from './snackbar';\nimport { acAddVisualization } from './visualizations';\n\nimport { apiFetchDashboard } from '../api/dashboards';\nimport { storePreferredDashboardId } from '../api/localStorage';\n\nimport { withShape } from '../components/ItemGrid/gridUtil';\nimport { loadingDashboardMsg } from '../components/SnackbarMessage/SnackbarMessage';\nimport { extractFavorite } from '../components/Item/VisualizationItem/plugin';\n\nimport {\n    REPORT_TABLE,\n    CHART,\n    MAP,\n    EVENT_REPORT,\n    EVENT_CHART,\n    MESSAGES,\n} from '../modules/itemTypes';\nimport { orObject } from '../modules/util';\n\n// actions\n\nexport const acSetSelectedId = value => ({\n    type: SET_SELECTED_ID,\n    value,\n});\n\nexport const acSetSelectedIsLoading = value => ({\n    type: SET_SELECTED_ISLOADING,\n    value,\n});\n\nexport const acSetSelectedShowDescription = value => ({\n    type: SET_SELECTED_SHOWDESCRIPTION,\n    value,\n});\n\nexport const tLoadDashboard = id => async dispatch => {\n    try {\n        const dash = await apiFetchDashboard(id);\n\n        dispatch(acAppendDashboards(dash));\n\n        return Promise.resolve(dash);\n    } catch (err) {\n        console.log('Error: ', err);\n        return err;\n    }\n};\n\n// thunks\nexport const tSetSelectedDashboardById = id => async (dispatch, getState) => {\n    dispatch(acSetSelectedIsLoading(true));\n\n    const snackbarTimeout = setTimeout(() => {\n        const dashboardName = orObject(sGetDashboardById(getState(), id))\n            .displayName;\n        if (sGetSelectedIsLoading(getState()) && dashboardName) {\n            loadingDashboardMsg.name = dashboardName;\n\n            dispatch(\n                acReceivedSnackbarMessage({\n                    message: loadingDashboardMsg,\n                    open: true,\n                })\n            );\n        }\n    }, 500);\n\n    const onSuccess = selected => {\n        const customDashboard = getCustomDashboards(selected)[0];\n\n        dispatch(\n            acSetDashboardItems(withShape(customDashboard.dashboardItems))\n        );\n\n        storePreferredDashboardId(sGetUserUsername(getState()), id);\n\n        // add visualizations to store\n        customDashboard.dashboardItems.forEach(item => {\n            switch (item.type) {\n                case REPORT_TABLE:\n                case CHART:\n                case MAP:\n                case EVENT_REPORT:\n                case EVENT_CHART:\n                    dispatch(acAddVisualization(extractFavorite(item)));\n                    break;\n                case MESSAGES:\n                    dispatch(tGetMessages(id));\n                    break;\n                default:\n                    break;\n            }\n        });\n\n        const state = getState();\n        if (id === sGetSelectedId(state)) {\n            if (sGetIsEditing(state)) {\n                // disable filters when switching to edit mode\n                dispatch(acClearItemFilters());\n            } else {\n                // enable filters when switching to view mode\n                dispatch(acSetItemFilters(sGetEditItemFiltersRoot(state)));\n            }\n        } else {\n            // clear filters when switching dashboard\n            dispatch(acClearEditItemFilters());\n            dispatch(acClearItemFilters());\n        }\n\n        dispatch(acSetSelectedId(id));\n\n        dispatch(acSetSelectedIsLoading(false));\n\n        clearTimeout(snackbarTimeout);\n\n        dispatch(acCloseSnackbar());\n\n        return selected;\n    };\n\n    const onError = error => {\n        console.log('Error: ', error);\n        return error;\n    };\n\n    try {\n        const selected = await dispatch(tLoadDashboard(id));\n\n        return onSuccess(selected);\n    } catch (err) {\n        return onError(err);\n    }\n};\n","export const getPreferredDashboardId = username =>\n    localStorage.getItem(`dhis2.dashboard.current.${username}`) || undefined;\n\nexport const storePreferredDashboardId = (username, dashboardId) => {\n    localStorage.setItem(`dhis2.dashboard.current.${username}`, dashboardId);\n};\n","import { RECEIVED_MESSAGES } from '../../../reducers/messages';\nimport { getMessages } from '../../../api/messages';\n\nconst onError = (action, error) => {\n    console.log(`Error in action ${action}: ${error}`);\n    return error;\n};\n\nexport const receivedMessages = value => ({\n    type: RECEIVED_MESSAGES,\n    value,\n});\n\nexport const tGetMessages = () => async dispatch => {\n    try {\n        const messages = await getMessages();\n        const { messageConversations } = messages;\n\n        return dispatch(receivedMessages(messageConversations));\n    } catch (err) {\n        return onError('Get Messages', err);\n    }\n};\n","import { getInstance } from 'd2';\n\nconst onError = error => console.log('Error: ', error);\n\nconst saveDashboard = (dashboard, data) => {\n    const { name, description, dashboardItems } = data;\n\n    dashboard.name = name;\n    dashboard.description = description;\n    dashboard.dashboardItems = dashboardItems.map(item =>\n        Object.assign({}, item, { width: item.w, height: item.h })\n    );\n\n    return dashboard.save().then(msg => msg.response.uid);\n};\n\nexport const updateDashboard = data => {\n    return getInstance()\n        .then(d2 => {\n            return d2.models.dashboards\n                .get(data.id)\n                .then(dashboard => saveDashboard(dashboard, data));\n        })\n        .catch(onError);\n};\n\nexport const postDashboard = data => {\n    return getInstance().then(d2 => {\n        const dashboard = d2.models.dashboards.create();\n\n        return saveDashboard(dashboard, data);\n    });\n};\n","import { generateUid } from 'd2/uid';\n\nimport {\n    RECEIVED_EDIT_DASHBOARD,\n    START_NEW_DASHBOARD,\n    RECEIVED_NOT_EDITING,\n    RECEIVED_TITLE,\n    RECEIVED_DESCRIPTION,\n    RECEIVED_DASHBOARD_LAYOUT,\n    ADD_DASHBOARD_ITEM,\n    UPDATE_DASHBOARD_ITEM,\n    REMOVE_DASHBOARD_ITEM,\n} from '../reducers/editDashboard';\nimport { sGetEditDashboardRoot } from '../reducers/editDashboard';\nimport { updateDashboard, postDashboard } from '../api/editDashboard';\nimport { tSetSelectedDashboardById } from '../actions/selected';\nimport {\n    NEW_ITEM_SHAPE,\n    getGridItemProperties,\n} from '../components/ItemGrid/gridUtil';\nimport { itemTypeMap } from '../modules/itemTypes';\nimport { convertUiItemsToBackend } from '../modules/uiBackendItemConverter';\n\nconst onError = error => {\n    console.log('Error (Saving Dashboard): ', error);\n    return error;\n};\n\n// actions\n\nexport const acSetEditDashboard = (dashboard, items) => {\n    const val = {\n        ...dashboard,\n        dashboardItems: items,\n    };\n\n    return {\n        type: RECEIVED_EDIT_DASHBOARD,\n        value: val,\n    };\n};\n\nexport const acSetEditNewDashboard = () => ({\n    type: START_NEW_DASHBOARD,\n});\n\nexport const acClearEditDashboard = () => ({\n    type: RECEIVED_NOT_EDITING,\n});\n\nexport const acSetDashboardTitle = value => ({\n    type: RECEIVED_TITLE,\n    value,\n});\n\nexport const acSetDashboardDescription = value => ({\n    type: RECEIVED_DESCRIPTION,\n    value,\n});\n\nexport const acUpdateDashboardLayout = value => ({\n    type: RECEIVED_DASHBOARD_LAYOUT,\n    value,\n});\n\nexport const acAddDashboardItem = item => {\n    const type = item.type;\n    delete item.type;\n    const itemPropName = itemTypeMap[type].propName;\n\n    const id = generateUid();\n    const gridItemProperties = getGridItemProperties(id);\n\n    return {\n        type: ADD_DASHBOARD_ITEM,\n        value: {\n            id,\n            type,\n            [itemPropName]: item.content,\n            ...NEW_ITEM_SHAPE,\n            ...gridItemProperties,\n        },\n    };\n};\n\nexport const acUpdateDashboardItem = item => ({\n    type: UPDATE_DASHBOARD_ITEM,\n    value: item,\n});\n\nexport const acRemoveDashboardItem = value => ({\n    type: REMOVE_DASHBOARD_ITEM,\n    value,\n});\n\n// thunks\n\nexport const tSaveDashboard = () => async (dispatch, getState) => {\n    const dashboard = sGetEditDashboardRoot(getState());\n\n    const dashboardToSave = {\n        ...dashboard,\n        dashboardItems: convertUiItemsToBackend(dashboard.dashboardItems),\n    };\n\n    try {\n        const dashboardId = dashboardToSave.id\n            ? await updateDashboard(dashboardToSave)\n            : await postDashboard(dashboardToSave);\n\n        dispatch(acClearEditDashboard());\n        await dispatch(tSetSelectedDashboardById(dashboardId));\n\n        return Promise.resolve(dashboardId);\n    } catch (error) {\n        onError(error);\n    }\n};\n","import {\n    SET_DASHBOARDS,\n    ADD_DASHBOARDS,\n    SET_DASHBOARD_STARRED,\n    SET_DASHBOARD_DISPLAY_NAME,\n    SET_DASHBOARD_ITEMS,\n} from '../reducers/dashboards';\nimport {\n    getCustomDashboards,\n    sGetDashboardById,\n    sGetDashboardsSortedByStarred,\n} from '../reducers/dashboards';\nimport { sGetUserUsername } from '../reducers/user';\nimport { tSetSelectedDashboardById, acSetSelectedId } from './selected';\nimport { acClearEditDashboard } from './editDashboard';\nimport {\n    apiFetchDashboards,\n    apiStarDashboard,\n    apiDeleteDashboard,\n} from '../api/dashboards';\nimport { getPreferredDashboardId } from '../api/localStorage';\nimport { arrayToIdMap } from '../modules/util';\n\n// actions\n\nexport const acSetDashboards = dashboards => ({\n    type: SET_DASHBOARDS,\n    value: arrayToIdMap(getCustomDashboards(dashboards)),\n});\n\nexport const acAppendDashboards = dashboards => ({\n    type: ADD_DASHBOARDS,\n    value: arrayToIdMap(getCustomDashboards(dashboards)),\n});\n\nexport const acSetDashboardStarred = (dashboardId, isStarred) => ({\n    type: SET_DASHBOARD_STARRED,\n    dashboardId: dashboardId,\n    value: isStarred,\n});\n\nexport const acSetDashboardDisplayName = (dashboardId, value) => ({\n    type: SET_DASHBOARD_DISPLAY_NAME,\n    dashboardId,\n    value,\n});\n\nexport const acSetDashboardItems = value => ({\n    type: SET_DASHBOARD_ITEMS,\n    value,\n});\n\n// thunks\n\nexport const tFetchDashboards = () => async dispatch => {\n    const collection = await apiFetchDashboards();\n    dispatch(acSetDashboards(collection.toArray()));\n};\n\nexport const tSelectDashboard = id => async (dispatch, getState) => {\n    const onError = error => {\n        console.log('Error (apiFetchDashboards): ', error);\n        return error;\n    };\n\n    try {\n        const state = getState();\n\n        let dashboardToSelect = null;\n        if (id) {\n            dashboardToSelect = sGetDashboardById(state, id) || null;\n        } else {\n            const preferredId = getPreferredDashboardId(\n                sGetUserUsername(state)\n            );\n            const dash = sGetDashboardById(state, preferredId);\n            dashboardToSelect =\n                preferredId && dash\n                    ? dash\n                    : sGetDashboardsSortedByStarred(state)[0];\n        }\n\n        if (dashboardToSelect) {\n            dispatch(tSetSelectedDashboardById(dashboardToSelect.id));\n        } else {\n            dispatch(acSetSelectedId());\n        }\n    } catch (err) {\n        return onError(err);\n    }\n};\n\nexport const tStarDashboard = (id, isStarred) => async dispatch => {\n    const onSuccess = id => {\n        dispatch(acSetDashboardStarred(id, isStarred));\n        return id;\n    };\n\n    const onError = error => {\n        console.log('Error (apiStarDashboard): ', error);\n        return error;\n    };\n    try {\n        await apiStarDashboard(id, isStarred);\n        return onSuccess(id);\n    } catch (err) {\n        return onError(err);\n    }\n};\n\nexport const tDeleteDashboard = id => async dispatch => {\n    try {\n        await apiDeleteDashboard(id);\n        dispatch(acClearEditDashboard());\n        dispatch(acSetSelectedId());\n        dispatch(acSetDashboardItems([]));\n\n        await dispatch(tFetchDashboards());\n\n        return Promise.resolve();\n    } catch (err) {\n        console.log('Error (deleteDashboard): ', err);\n        return err;\n    }\n};\n","/** @module reducers/controlBar */\nimport { combineReducers } from 'redux';\nimport { validateReducer } from '../modules/util';\n\nexport const SET_CONTROLBAR_USER_ROWS = 'SET_CONTROLBAR_USER_ROWS';\n\nexport const DEFAULT_STATE_CONTROLBAR_ROWS = 1;\n\nconst userRows = (state = DEFAULT_STATE_CONTROLBAR_ROWS, action) => {\n    switch (action.type) {\n        case SET_CONTROLBAR_USER_ROWS:\n            return validateReducer(action.value, DEFAULT_STATE_CONTROLBAR_ROWS);\n        default:\n            return state;\n    }\n};\n\nexport default combineReducers({\n    userRows,\n});\n\n/**\n * Selectors that point to specific props in the state object\n * @function\n * @param {Object} state\n * @returns {Object}\n */\nexport const sGetControlBarRoot = state => state.controlBar;\n\n// Selector dependency level 2\n\nexport const sGetControlBarUserRows = state =>\n    sGetControlBarRoot(state).userRows;\n","import { getInstance } from 'd2';\nimport { DEFAULT_STATE_CONTROLBAR_ROWS } from '../reducers/controlBar';\n\nconst NAMESPACE = 'dashboard';\nconst KEY = 'controlBarRows';\n\nconst hasNamespace = async d2 => await d2.currentUser.dataStore.has(NAMESPACE);\n\nconst getNamespace = async (d2, hasNamespace) =>\n    hasNamespace\n        ? await d2.currentUser.dataStore.get(NAMESPACE)\n        : await d2.currentUser.dataStore.create(NAMESPACE);\n\nexport const apiGetControlBarRows = async () => {\n    const d2 = await getInstance();\n    const namespace = await getNamespace(d2, await hasNamespace(d2));\n    const hasKey = namespace.keys && namespace.keys.find(key => key === KEY);\n\n    if (hasKey) {\n        return await namespace.get(KEY);\n    } else {\n        await apiPostControlBarRows(DEFAULT_STATE_CONTROLBAR_ROWS, namespace);\n        console.log(\n            '(These errors to /userDataStore/dashboard can be ignored)'\n        );\n        return DEFAULT_STATE_CONTROLBAR_ROWS;\n    }\n};\n\nexport const apiPostControlBarRows = async (rows, namespace) => {\n    const d2 = await getInstance();\n    const ns = namespace || (await getNamespace(d2, hasNamespace));\n\n    ns.set(KEY, rows);\n};\n","import { SET_CONTROLBAR_USER_ROWS } from '../reducers/controlBar';\nimport { apiGetControlBarRows } from '../api/controlBar';\n\n// actions\n\nexport const acSetControlBarUserRows = rows => ({\n    type: SET_CONTROLBAR_USER_ROWS,\n    value: rows,\n});\n\n// thunks\n\nexport const tSetControlBarRows = () => async dispatch => {\n    const onSuccess = rows => {\n        dispatch(acSetControlBarUserRows(rows));\n    };\n\n    const onError = error => {\n        console.log('Error (apiGetControlBarRows): ', error);\n        return error;\n    };\n\n    try {\n        const controlBarRows = await apiGetControlBarRows();\n        return onSuccess(controlBarRows);\n    } catch (err) {\n        return onError(err);\n    }\n};\n","import {\n    getDimensionById,\n    DIMENSION_ID_PERIOD,\n    DIMENSION_ID_ORGUNIT,\n} from '@dhis2/analytics';\n\nexport const SET_DIMENSIONS = 'SET_DIMENSIONS';\nexport const DEFAULT_DIMENSIONS = [\n    getDimensionById(DIMENSION_ID_PERIOD),\n    getDimensionById(DIMENSION_ID_ORGUNIT),\n];\n\nexport default (state = DEFAULT_DIMENSIONS, action) => {\n    switch (action.type) {\n        case SET_DIMENSIONS: {\n            return [...DEFAULT_DIMENSIONS, ...action.value];\n        }\n        default:\n            return state;\n    }\n};\n\nexport const sGetDimensions = state => state.dimensions;\n","export const SET_SETTINGS = 'SET_SETTINGS';\nexport const ADD_SETTINGS = 'ADD_SETTINGS';\n\nexport const DEFAULT_SETTINGS = {\n    keyDateFormat: 'yyyy-MM-dd',\n    keyAnalysisRelativePeriod: 'LAST_12_MONTHS',\n    keyAnalysisDigitGroupSeparator: 'SPACE',\n    displayNameProperty: 'displayName',\n    uiLocale: 'en',\n    rootOrganisationUnit: {},\n};\n\nexport default (state = DEFAULT_SETTINGS, action) => {\n    switch (action.type) {\n        case SET_SETTINGS: {\n            return Object.assign({}, action.value);\n        }\n        case ADD_SETTINGS: {\n            return {\n                ...state,\n                ...action.value,\n            };\n        }\n        default:\n            return state;\n    }\n};\n\n// Selectors\n\nexport const sGetSettings = state => state.settings;\n\nexport const sGetSettingsDisplayNameProperty = state =>\n    sGetSettings(state).displayNameProperty;\n\nexport const sGetRootOrgUnit = state =>\n    sGetSettings(state).rootOrganisationUnit;\n\nexport const sGetRelativePeriod = state =>\n    sGetSettings(state).keyAnalysisRelativePeriod;\n\nexport const sGetUiLocale = state => sGetSettings(state).uiLocale;\n","import { SET_DIMENSIONS } from '../reducers/dimensions';\nimport { apiFetchDimensions } from '@dhis2/analytics';\nimport { sGetSettingsDisplayNameProperty } from '../reducers/settings';\n\nexport const acSetDimensions = dimensions => ({\n    type: SET_DIMENSIONS,\n    value: dimensions,\n});\n\nexport const tSetDimensions = d2 => async (dispatch, getState) => {\n    const onSuccess = dimensions => {\n        dispatch(acSetDimensions(dimensions));\n    };\n\n    const onError = error => {\n        console.log('Error (apiFetchDimensions): ', error);\n        return error;\n    };\n\n    try {\n        const displayNameProp = sGetSettingsDisplayNameProperty(getState());\n        const dimensions = await apiFetchDimensions(d2, displayNameProp);\n\n        // filter out CATEGORY that are not of type ATTRIBUTE\n        const filteredDimensions = dimensions.filter(\n            dim =>\n                dim.dimensionType !== 'CATEGORY' ||\n                (dim.dimensionType === 'CATEGORY' &&\n                    dim.dataDimensionType === 'ATTRIBUTE')\n        );\n        return onSuccess(filteredDimensions);\n    } catch (err) {\n        return onError(err);\n    }\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport i18n from '@dhis2/d2-i18n';\n\nimport classes from './styles/ShowMoreButton.module.css';\n\nexport const SHOWMORE_BAR_HEIGHT = 16;\n\nexport const ShowMoreButton = ({ onClick, isMaxHeight, disabled }) => {\n    return (\n        <div style={{ textAlign: 'center' }}>\n            {disabled ? (\n                <div className={classes.disabled}>{i18n.t('Show more')}</div>\n            ) : (\n                <div className={classes.showMore} onClick={onClick}>\n                    {isMaxHeight ? i18n.t('Show less') : i18n.t('Show more')}\n                </div>\n            )}\n        </div>\n    );\n};\n\nShowMoreButton.propTypes = {\n    disabled: PropTypes.bool,\n    isMaxHeight: PropTypes.bool,\n    onClick: PropTypes.func,\n};\n\nexport default ShowMoreButton;\n","import { SHOWMORE_BAR_HEIGHT } from './ShowMoreButton';\n\nexport const CONTROL_BAR_ROW_HEIGHT = 40;\nexport const FIRST_ROW_PADDING_HEIGHT = 10;\nexport const MIN_ROW_COUNT = 1;\n\nexport const HEADERBAR_HEIGHT = 48;\n\nconst CONTROL_BAR_OUTER_HEIGHT_DIFF =\n    FIRST_ROW_PADDING_HEIGHT + SHOWMORE_BAR_HEIGHT - 2; // 2 pixel \"adjustment\"\n\nexport const getRowsHeight = rows => {\n    return rows * CONTROL_BAR_ROW_HEIGHT;\n};\n\nexport const getNumRowsFromHeight = height => {\n    return Math.floor(\n        (height - CONTROL_BAR_OUTER_HEIGHT_DIFF) / CONTROL_BAR_ROW_HEIGHT\n    );\n};\n\nexport const getTopOffset = rows => {\n    return HEADERBAR_HEIGHT + getControlBarHeight(rows, false);\n};\n\nexport const getControlBarHeight = rows => {\n    return getRowsHeight(rows) + CONTROL_BAR_OUTER_HEIGHT_DIFF;\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { colors } from '@dhis2/ui-core';\nimport { HEADERBAR_HEIGHT } from './controlBarDimensions';\n\nimport classes from './styles/ControlBar.module.css';\n\nconst DRAG_HANDLE_HEIGHT = 7;\n\nclass ControlBar extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            dragging: false,\n        };\n    }\n\n    onStartDrag = () => {\n        this.setState({ dragging: true });\n        window.addEventListener('mousemove', this.onDrag);\n        window.addEventListener('mouseup', this.onEndDrag);\n    };\n\n    onDrag = event => {\n        event.preventDefault();\n        event.stopPropagation();\n\n        const newHeight = event.clientY;\n\n        if (\n            this.props.onChangeHeight &&\n            newHeight !== this.props.height &&\n            newHeight > 0\n        ) {\n            requestAnimationFrame(() => {\n                this.props.onChangeHeight(newHeight);\n            });\n        }\n    };\n\n    onEndDrag = () => {\n        this.setState({ dragging: false });\n        window.removeEventListener('mousemove', this.onDrag);\n        window.removeEventListener('mouseup', this.onEndDrag);\n\n        if (this.props.onEndDrag) {\n            this.props.onEndDrag();\n        }\n    };\n\n    renderDragHandle() {\n        return typeof this.props.onChangeHeight === 'function' ? (\n            <div\n                className={classes.draghandle}\n                style={{ height: DRAG_HANDLE_HEIGHT }}\n                onMouseDown={this.onStartDrag}\n            />\n        ) : null;\n    }\n\n    render() {\n        const height = Math.max(this.props.height, 0) + DRAG_HANDLE_HEIGHT;\n\n        const rootStyle = Object.assign(\n            {\n                height,\n                top: HEADERBAR_HEIGHT,\n                backgroundColor: this.props.editMode\n                    ? colors.yellow050\n                    : colors.white,\n                paddingBottom: DRAG_HANDLE_HEIGHT,\n            },\n            // Disable animations while dragging\n            this.state.dragging ? { transition: 'none' } : {}\n        );\n\n        return (\n            <div style={rootStyle} className={classes.root}>\n                <div className={classes.content}>{this.props.children}</div>\n                {this.renderDragHandle()}\n            </div>\n        );\n    }\n}\n\nControlBar.propTypes = {\n    /**\n     * The height of the control bar in number of lines. Must be a positive integer.\n     */\n    children: PropTypes.node.isRequired,\n\n    /**\n     * If true, the background color of the control bar changes to indicate that edit mode is active.\n     */\n    editMode: PropTypes.bool.isRequired,\n\n    /**\n     * Callback function that is called when the control bar is resized.\n     * The callback receives one argument: The new height in pixels.\n     *\n     * If no callback is specified the control bar will not have a drag handle.\n     */\n    height: PropTypes.number.isRequired,\n\n    /**\n     * Callback function that is called when the control bar is dropped after being dragged.\n     * The callback receives one argument: The new height in pixels.\n     *\n     * Ignored if no \"onChangeHeight\" function is provided.\n     */\n    onChangeHeight: PropTypes.func,\n\n    /**\n     * The contents of the control bar.\n     */\n    onEndDrag: PropTypes.func,\n};\n\nControlBar.defaultProps = {\n    onChangeHeight: null,\n    onEndDrag: null,\n};\n\nexport default ControlBar;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst StarIcon = ({ className }) => (\n    <svg\n        className={className}\n        xmlns=\"http://www.w3.org/2000/svg\"\n        viewBox=\"0 0 24 24\"\n    >\n        <path d=\"M0 0h24v24H0z\" fill=\"none\" />\n        <path d=\"M12 17.27L18.18 21l-1.64-7.03L22 9.24l-7.19-.61L12 2 9.19 8.63 2 9.24l5.46 4.73L5.82 21z\" />\n        <path d=\"M0 0h24v24H0z\" fill=\"none\" />\n    </svg>\n);\n\nStarIcon.propTypes = {\n    className: PropTypes.string,\n};\n\nexport default StarIcon;\n","import { getInstance } from 'd2';\n\nexport const apiPostDataStatistics = async (eventType, id) => {\n    const d2 = await getInstance();\n    const url = `dataStatistics?eventType=${eventType}&favorite=${id}`;\n\n    d2.Api.getApi().post(url);\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Chip } from '@dhis2/ui-core';\nimport { Link } from 'react-router-dom';\nimport debounce from 'lodash/debounce';\n\nimport StarIcon from '../../icons/Star';\nimport { apiPostDataStatistics } from '../../api/dataStatistics';\n\nimport classes from './styles/DashboardItemChip.module.css';\n\nexport const DashboardItemChip = ({\n    starred,\n    selected,\n    label,\n    dashboardId,\n}) => {\n    const chipProps = {\n        selected,\n    };\n\n    if (starred) {\n        const selectedState = selected ? classes.selected : classes.unselected;\n        chipProps.icon = (\n            <StarIcon className={`${classes.icon} ${selectedState}`} />\n        );\n    }\n\n    return (\n        <Link\n            className={classes.link}\n            to={`/${dashboardId}`}\n            onClick={debounce(\n                () => apiPostDataStatistics('DASHBOARD_VIEW', dashboardId),\n                500\n            )}\n        >\n            <Chip {...chipProps}>{label}</Chip>\n        </Link>\n    );\n};\n\nDashboardItemChip.propTypes = {\n    dashboardId: PropTypes.string.isRequired,\n    label: PropTypes.string.isRequired,\n    selected: PropTypes.bool.isRequired,\n    starred: PropTypes.bool.isRequired,\n    classes: PropTypes.object,\n};\n\nexport default DashboardItemChip;\n","import React from 'react';\nimport { colors } from '@dhis2/ui-core';\n\nconst AddCircleIcon = () => (\n    <svg\n        xmlns=\"http://www.w3.org/2000/svg\"\n        width=\"32\"\n        height=\"32\"\n        fill={colors.teal600}\n        viewBox=\"0 0 24 24\"\n    >\n        <path d=\"M12 2C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2zm4 11h-3v3c0 .55-.45 1-1 1s-1-.45-1-1v-3H8c-.55 0-1-.45-1-1s.45-1 1-1h3V8c0-.55.45-1 1-1s1 .45 1 1v3h3c.55 0 1 .45 1 1s-.45 1-1 1z\" />\n    </svg>\n);\n\nexport default AddCircleIcon;\n","import React from 'react';\nimport { colors } from '@dhis2/ui-core';\nimport PropTypes from 'prop-types';\n\nconst ClearIcon = ({ className }) => (\n    <svg\n        className={className}\n        fill={colors.grey800}\n        xmlns=\"http://www.w3.org/2000/svg\"\n        viewBox=\"0 0 24 24\"\n    >\n        <path d=\"M19 6.41L17.59 5 12 10.59 6.41 5 5 6.41 10.59 12 5 17.59 6.41 19 12 13.41 17.59 19 19 17.59 13.41 12z\" />\n        <path d=\"M0 0h24v24H0z\" fill=\"none\" />\n    </svg>\n);\n\nClearIcon.propTypes = {\n    className: PropTypes.string,\n};\n\nexport default ClearIcon;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport ClearIcon from '../../icons/Clear';\n\nimport classes from './styles/ClearButton.module.css';\n\nexport const ClearButton = ({ onClear }) => (\n    <button className={classes.button} onClick={onClear}>\n        <span>\n            <ClearIcon className={classes.icon} color=\"action\" />\n        </span>\n    </button>\n);\n\nClearButton.propTypes = {\n    onClear: PropTypes.func.isRequired,\n};\n\nexport default ClearButton;\n","import { combineReducers } from 'redux';\nimport { validateReducer } from '../modules/util';\n\nexport const SET_DASHBOARDS_FILTER_NAME = 'SET_DASHBOARDS_FILTER_NAME';\nexport const SET_DASHBOARDS_FILTER_OWNER = 'SET_DASHBOARDS_FILTER_OWNER';\nexport const SET_DASHBOARDS_FILTER_ORDER = 'SET_DASHBOARDS_FILTER_ORDER';\n\nexport const ownerData = [\n    { id: 'ALL', value: 'All users' },\n    { id: 'ME', value: 'Created by me' },\n    { id: 'OTHERS', value: 'Created by others' },\n];\n\nexport const orderData = [\n    { id: 'NAME:ASC', value: 'Name (asc)' },\n    { id: 'NAME:ASC', value: 'Name (desc)' },\n    { id: 'ITEMS:ASC', value: 'Number of items (asc)' },\n    { id: 'ITEMS:ASC', value: 'Number of items (desc)' },\n    { id: 'CREATED:ASC', value: 'Created date (asc)' },\n    { id: 'CREATED:ASC', value: 'Created date (desc)' },\n];\n\nexport const DEFAULT_STATE_DASHBOARDS_FILTER_NAME = '';\nexport const DEFAULT_STATE_DASHBOARDS_FILTER_OWNER = ownerData[0].id;\nexport const DEFAULT_STATE_DASHBOARDS_FILTER_ORDER = orderData[0].id;\n\nconst name = (state = DEFAULT_STATE_DASHBOARDS_FILTER_NAME, action) => {\n    switch (action.type) {\n        case SET_DASHBOARDS_FILTER_NAME:\n            return validateReducer(\n                action.value,\n                DEFAULT_STATE_DASHBOARDS_FILTER_NAME\n            );\n        default:\n            return state;\n    }\n};\n\nconst owner = (state = DEFAULT_STATE_DASHBOARDS_FILTER_OWNER, action) => {\n    switch (action.type) {\n        case SET_DASHBOARDS_FILTER_OWNER:\n            return validateReducer(\n                action.value,\n                DEFAULT_STATE_DASHBOARDS_FILTER_NAME\n            );\n        default:\n            return state;\n    }\n};\n\nconst order = (state = DEFAULT_STATE_DASHBOARDS_FILTER_ORDER, action) => {\n    switch (action.type) {\n        case SET_DASHBOARDS_FILTER_ORDER:\n            return validateReducer(\n                action.value,\n                DEFAULT_STATE_DASHBOARDS_FILTER_ORDER\n            );\n        default:\n            return state;\n    }\n};\n\nexport default combineReducers({\n    name,\n    owner,\n    order,\n});\n\n// selectors\n\nexport const sGetDashboardsFilterRoot = state => state.dashboardsFilter;\n\n// selector dependency level 2\n\nexport const sGetFilterName = state => sGetDashboardsFilterRoot(state).name;\nexport const sGetFilterOwner = state => sGetDashboardsFilterRoot(state).owner;\nexport const sGetFilterOrder = state => sGetDashboardsFilterRoot(state).order;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport i18n from '@dhis2/d2-i18n';\nimport { withStyles } from '@material-ui/core/styles';\nimport InputField from '@material-ui/core/Input';\nimport InputAdornment from '@material-ui/core/InputAdornment';\nimport SearchIcon from '@material-ui/icons/Search';\nimport { colors } from '@dhis2/ui-core';\n\nimport ClearButton from './ClearButton';\nimport { DEFAULT_STATE_DASHBOARDS_FILTER_NAME } from '../../reducers/dashboardsFilter';\n\nconst styles = {\n    filterField: {\n        fontSize: '14px',\n        width: '200px',\n        height: '30px',\n        top: '-4px',\n    },\n    searchIcon: {\n        color: colors.grey700,\n        width: '20px',\n        height: '20px',\n    },\n};\n\nexport const KEYCODE_ENTER = 13;\nexport const KEYCODE_ESCAPE = 27;\n\nexport class Filter extends Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            value: DEFAULT_STATE_DASHBOARDS_FILTER_NAME,\n        };\n    }\n\n    componentWillReceiveProps(nextProps) {\n        this.setState({\n            value: nextProps.name,\n        });\n    }\n\n    setFilterValue = event => {\n        event.preventDefault();\n\n        this.props.onChangeName(event.target.value);\n    };\n\n    handleKeyUp = event => {\n        switch (event.keyCode) {\n            case KEYCODE_ENTER:\n                this.props.onKeypressEnter();\n                break;\n            case KEYCODE_ESCAPE:\n                this.props.onChangeName();\n                break;\n            default:\n                break;\n        }\n    };\n\n    render() {\n        const { classes, name, onChangeName } = this.props;\n\n        const startAdornment = (\n            <InputAdornment position=\"start\">\n                <SearchIcon className={classes.searchIcon} />\n            </InputAdornment>\n        );\n\n        const endAdornment =\n            name !== '' && name !== null ? (\n                <InputAdornment position=\"end\">\n                    <ClearButton onClear={() => onChangeName()} />\n                </InputAdornment>\n            ) : null;\n\n        return (\n            <InputField\n                className={classes.filterField}\n                placeholder={i18n.t('Search for a dashboard')}\n                startAdornment={startAdornment}\n                endAdornment={endAdornment}\n                value={this.state.value}\n                onChange={this.setFilterValue}\n                onKeyUp={this.handleKeyUp}\n            />\n        );\n    }\n}\n\nFilter.propTypes = {\n    classes: PropTypes.object,\n    name: PropTypes.string,\n    onChangeName: PropTypes.func,\n    onKeypressEnter: PropTypes.func,\n};\n\nFilter.defaultProps = {\n    name: '',\n    onChangeName: Function.prototype,\n};\n\nexport default withStyles(styles)(Filter);\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { Link, withRouter } from 'react-router-dom';\nimport ControlBar from './ControlBar';\nimport arraySort from 'd2-utilizr/lib/arraySort';\nimport PropTypes from 'prop-types';\n\nimport Chip from './DashboardItemChip';\nimport AddCircleIcon from '../../icons/AddCircle';\nimport Filter from './Filter';\nimport ShowMoreButton from './ShowMoreButton';\nimport {\n    FIRST_ROW_PADDING_HEIGHT,\n    MIN_ROW_COUNT,\n    getRowsHeight,\n    getControlBarHeight,\n    getNumRowsFromHeight,\n} from './controlBarDimensions';\nimport { sGetControlBarUserRows } from '../../reducers/controlBar';\nimport { sGetAllDashboards } from '../../reducers/dashboards';\nimport { sGetFilterName } from '../../reducers/dashboardsFilter';\nimport { sGetSelectedId } from '../../reducers/selected';\nimport { acSetControlBarUserRows } from '../../actions/controlBar';\nimport { acSetFilterName } from '../../actions/dashboardsFilter';\nimport { orObject, orArray } from '../../modules/util';\nimport { apiPostControlBarRows } from '../../api/controlBar';\n\nimport classes from './styles/DashboardsBar.module.css';\n\nexport const MAX_ROW_COUNT = 10;\n\nexport class DashboardsBar extends Component {\n    state = {\n        rows: MIN_ROW_COUNT,\n    };\n\n    setInitialDashboardState = rows => {\n        this.setState({ rows, isMaxHeight: rows === MAX_ROW_COUNT });\n    };\n\n    componentDidMount() {\n        this.setInitialDashboardState(this.props.userRows);\n    }\n\n    componentWillReceiveProps(nextProps) {\n        this.setInitialDashboardState(nextProps.userRows);\n    }\n\n    onChangeHeight = newHeight => {\n        const adjustedHeight = newHeight - 52; // don't rush the transition to a bigger row count\n        const newRows = Math.max(\n            MIN_ROW_COUNT,\n            getNumRowsFromHeight(adjustedHeight)\n        );\n\n        if (newRows !== this.state.rows) {\n            const newRowCount = Math.min(newRows, MAX_ROW_COUNT);\n\n            this.props.onChangeHeight(newRowCount);\n        }\n    };\n\n    onEndDrag = () => {\n        return apiPostControlBarRows(this.state.rows);\n    };\n\n    onToggleMaxHeight = () => {\n        const rows =\n            this.state.rows === MAX_ROW_COUNT\n                ? this.props.userRows\n                : MAX_ROW_COUNT;\n\n        this.setState({ rows, isMaxHeight: !this.state.isMaxHeight });\n    };\n\n    onSelectDashboard = () => {\n        this.props.history.push(`/${this.props.dashboards[0].id}`);\n    };\n\n    render() {\n        const { dashboards, name, selectedId, onChangeFilterName } = this.props;\n\n        const rowCount = this.state.isMaxHeight\n            ? MAX_ROW_COUNT\n            : this.state.rows;\n        const controlBarHeight = getControlBarHeight(rowCount);\n        const contentWrapperStyle = {\n            padding: `${FIRST_ROW_PADDING_HEIGHT}px 6px 0 6px`,\n            overflowY: this.state.isMaxHeight ? 'auto' : 'hidden',\n            height: getRowsHeight(rowCount) + FIRST_ROW_PADDING_HEIGHT,\n        };\n\n        return (\n            <ControlBar\n                height={controlBarHeight}\n                onChangeHeight={this.onChangeHeight}\n                onEndDrag={this.onEndDrag}\n                editMode={false}\n            >\n                <div style={contentWrapperStyle}>\n                    <div className={classes.leftControls}>\n                        <Link\n                            style={{\n                                display: 'inline-block',\n                                textDecoration: 'none',\n                                marginRight: 10,\n                                position: 'relative',\n                                top: '2px',\n                            }}\n                            to={'/new'}\n                        >\n                            <AddCircleIcon />\n                        </Link>\n                        <Filter\n                            name={name}\n                            onChangeName={onChangeFilterName}\n                            onKeypressEnter={this.onSelectDashboard}\n                        />\n                    </div>\n                    {orArray(dashboards).map(dashboard => (\n                        <Chip\n                            key={dashboard.id}\n                            label={dashboard.displayName}\n                            starred={dashboard.starred}\n                            dashboardId={dashboard.id}\n                            selected={dashboard.id === selectedId}\n                        />\n                    ))}\n                </div>\n                <ShowMoreButton\n                    onClick={this.onToggleMaxHeight}\n                    isMaxHeight={this.state.isMaxHeight}\n                    disabled={this.props.userRows === MAX_ROW_COUNT}\n                />\n            </ControlBar>\n        );\n    }\n}\n\nconst mapStateToProps = state => ({\n    dashboards: sGetAllDashboards(state),\n    name: sGetFilterName(state),\n    userRows: sGetControlBarUserRows(state),\n    selectedId: sGetSelectedId(state),\n});\n\nconst mapDispatchToProps = {\n    onChangeHeight: acSetControlBarUserRows,\n    onChangeFilterName: acSetFilterName,\n};\nconst mergeProps = (stateProps, dispatchProps, ownProps) => {\n    const dashboards = Object.values(orObject(stateProps.dashboards));\n    const displayDashboards = arraySort(\n        dashboards.filter(d =>\n            d.displayName.toLowerCase().includes(stateProps.name.toLowerCase())\n        ),\n        'ASC',\n        'displayName'\n    );\n\n    return {\n        ...stateProps,\n        ...ownProps,\n        ...dispatchProps,\n        dashboards: [\n            ...displayDashboards.filter(d => d.starred),\n            ...displayDashboards.filter(d => !d.starred),\n        ],\n    };\n};\n\nDashboardsBar.propTypes = {\n    dashboards: PropTypes.array,\n    history: PropTypes.object,\n    name: PropTypes.string,\n    selectedId: PropTypes.string,\n    userRows: PropTypes.number,\n    onChangeFilterName: PropTypes.func,\n    onChangeHeight: PropTypes.func,\n};\n\nexport default withRouter(\n    connect(\n        mapStateToProps,\n        mapDispatchToProps,\n        mergeProps\n    )(DashboardsBar)\n);\n","import {\n    SET_DASHBOARDS_FILTER_NAME,\n    SET_DASHBOARDS_FILTER_OWNER,\n    SET_DASHBOARDS_FILTER_ORDER,\n} from '../reducers/dashboardsFilter';\n\n// actions\n\nexport const acSetFilterName = value => ({\n    type: SET_DASHBOARDS_FILTER_NAME,\n    value,\n});\n\nexport const acSetFilterOwner = value => ({\n    type: SET_DASHBOARDS_FILTER_OWNER,\n    value,\n});\n\nexport const acSetFilterOrder = value => ({\n    type: SET_DASHBOARDS_FILTER_ORDER,\n    value,\n});\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\n\nimport {\n    getTopOffset,\n    MIN_ROW_COUNT,\n} from '../ControlBar/controlBarDimensions';\nimport { sGetControlBarUserRows } from '../../reducers/controlBar';\n\nconst DashboardVerticalOffset = props => {\n    const rows = props.editMode ? MIN_ROW_COUNT : props.userRows;\n    const marginTop = getTopOffset(rows);\n\n    return <div className=\"page-container-top-margin\" style={{ marginTop }} />;\n};\n\nconst mapStateToProps = state => ({\n    userRows: sGetControlBarUserRows(state),\n});\n\nDashboardVerticalOffset.propTypes = {\n    editMode: PropTypes.bool,\n    userRows: PropTypes.number,\n};\n\nexport default connect(mapStateToProps)(DashboardVerticalOffset);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { MenuItem, colors } from '@dhis2/ui-core';\n\nconst HeaderMenuItem = ({ title }) => (\n    <MenuItem\n        dense\n        key={title}\n        disabled\n        label={\n            <span style={{ color: colors.grey800, fontWeight: '600' }}>\n                {title}\n            </span>\n        }\n    />\n);\n\nHeaderMenuItem.propTypes = {\n    title: PropTypes.string.isRequired,\n};\n\nexport default HeaderMenuItem;\n","import React from 'react';\nimport { colors } from '@dhis2/ui-core';\nimport PropTypes from 'prop-types';\n\nconst LaunchIcon = ({ className }) => (\n    <svg\n        className={className}\n        xmlns=\"http://www.w3.org/2000/svg\"\n        width=\"12\"\n        height=\"12\"\n        fill={colors.grey600}\n        viewBox=\"0 0 24 24\"\n    >\n        <path d=\"M0 0h24v24H0z\" fill=\"none\" />\n        <path d=\"M19 19H5V5h7V3H5c-1.11 0-2 .9-2 2v14c0 1.1.89 2 2 2h14c1.1 0 2-.9 2-2v-7h-2v7zM14 3v2h3.59l-9.83 9.83 1.41 1.41L19 6.41V10h2V3h-7z\" />\n    </svg>\n);\n\nLaunchIcon.propTypes = {\n    className: PropTypes.string,\n};\n\nexport default LaunchIcon;\n","import React from 'react';\nimport { MenuItem, colors } from '@dhis2/ui-core';\nimport i18n from '@dhis2/d2-i18n';\nimport PropTypes from 'prop-types';\nimport { visTypeIcons } from '@dhis2/analytics';\n\nimport { getItemIcon, VISUALIZATION } from '../../modules/itemTypes';\nimport LaunchIcon from '../../icons/Launch';\n\nimport classes from './styles/ContentMenuItem.module.css';\n\nconst LaunchLink = ({ url }) => (\n    <a\n        onClick={e => e.stopPropagation()}\n        className={classes.launchLink}\n        target=\"_blank\"\n        rel=\"noopener noreferrer\"\n        href={url}\n    >\n        <LaunchIcon />\n    </a>\n);\n\nLaunchLink.propTypes = {\n    url: PropTypes.string,\n};\n\nconst InsertButton = () => (\n    <button className={classes.buttonInsert}>{i18n.t('Insert')}</button>\n);\n\nconst ContentMenuItem = ({ type, name, onInsert, url, visType }) => {\n    const ItemIcon = getItemIcon(type);\n\n    const renderedItemIcon =\n        type === VISUALIZATION ? (\n            visTypeIcons[visType]\n        ) : (\n            <ItemIcon style={{ fill: colors.grey600 }} />\n        );\n\n    return (\n        <MenuItem\n            dense\n            onClick={onInsert}\n            label={\n                <div className={classes.menuItem}>\n                    <div className={classes.label}>\n                        <span style={{ marginRight: '6px' }}>\n                            {renderedItemIcon}\n                        </span>\n                        <span>{name}</span>\n                        {url ? <LaunchLink url={url} /> : null}\n                    </div>\n                    <InsertButton />\n                </div>\n            }\n        />\n    );\n};\n\nContentMenuItem.propTypes = {\n    name: PropTypes.string,\n    type: PropTypes.string,\n    url: PropTypes.string,\n    visType: PropTypes.string,\n    onInsert: PropTypes.func,\n};\n\nexport default ContentMenuItem;\n","import i18n from '@dhis2/d2-i18n';\nimport {\n    VISUALIZATION,\n    MAP,\n    EVENT_CHART,\n    EVENT_REPORT,\n    USERS,\n    REPORTS,\n    RESOURCES,\n    APP,\n    MESSAGES,\n    TEXT,\n    SPACER,\n} from '../../modules/itemTypes';\n\nexport const singleItems = [\n    {\n        id: 'additional',\n        header: i18n.t('Additional items'),\n        items: [\n            {\n                type: TEXT,\n                name: i18n.t('Text box'),\n                content: '',\n            },\n            {\n                type: MESSAGES,\n                name: i18n.t('Messages'),\n                content: 'true',\n            },\n            {\n                type: SPACER,\n                name: i18n.t('Spacer'),\n                content: '',\n            },\n        ],\n    },\n];\n\n// categorizedItems are grouped in the item selector menu\nexport const categorizedItems = [\n    VISUALIZATION,\n    MAP,\n    EVENT_REPORT,\n    EVENT_CHART,\n    USERS,\n    REPORTS,\n    RESOURCES,\n    APP,\n];\n\n// listItemTypes are included in a single dashboard item\nexport const listItemTypes = [REPORTS, RESOURCES, USERS];\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport i18n from '@dhis2/d2-i18n';\nimport { MenuItem, Divider } from '@dhis2/ui-core';\n\nimport HeaderMenuItem from './HeaderMenuItem';\nimport ContentMenuItem from './ContentMenuItem';\n\nimport { tAddListItemContent } from './actions';\nimport { acAddDashboardItem } from '../../actions/editDashboard';\nimport { getItemUrl, APP, VISUALIZATION } from '../../modules/itemTypes';\nimport { categorizedItems, listItemTypes } from './selectableItems';\n\nimport classes from './styles/CategorizedMenuGroup.module.css';\n\nclass CategorizedMenuGroup extends Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            seeMore: false,\n        };\n    }\n\n    addItem = item => () => {\n        const { type, acAddDashboardItem, tAddListItemContent } = this.props;\n\n        if (type === APP) {\n            acAddDashboardItem({ type, content: item.key });\n        } else {\n            const newItem = {\n                id: item.id,\n                name: item.displayName || item.name,\n            };\n\n            if (listItemTypes.includes(type)) {\n                tAddListItemContent(type, newItem);\n            } else {\n                acAddDashboardItem({ type, content: newItem });\n            }\n        }\n    };\n\n    toggleSeeMore = () => {\n        this.setState({ seeMore: !this.state.seeMore });\n\n        this.props.onChangeItemsLimit(this.props.type);\n    };\n\n    render() {\n        const { title, type, items, hasMore } = this.props;\n        return (\n            <>\n                <HeaderMenuItem title={title} />\n                {items.map(item => {\n                    const itemUrl = getItemUrl(type, item, this.context.d2);\n                    return (\n                        <ContentMenuItem\n                            key={item.id || item.key}\n                            type={type}\n                            visType={type === VISUALIZATION ? item.type : type}\n                            name={item.displayName || item.name}\n                            onInsert={this.addItem(item)}\n                            url={itemUrl}\n                        />\n                    );\n                })}\n                {hasMore ? (\n                    <MenuItem\n                        dense\n                        key={`showmore${title}`}\n                        onClick={this.toggleSeeMore}\n                        label={\n                            <button className={classes.showMoreButton}>\n                                {this.state.seeMore\n                                    ? i18n.t('Show fewer')\n                                    : i18n.t('Show more')}\n                            </button>\n                        }\n                    />\n                ) : null}\n                <Divider margin=\"8px 0px\" />\n            </>\n        );\n    }\n}\n\nCategorizedMenuGroup.propTypes = {\n    items: PropTypes.array.isRequired,\n    title: PropTypes.string.isRequired,\n    type: PropTypes.oneOf(categorizedItems).isRequired,\n    onChangeItemsLimit: PropTypes.func.isRequired,\n    acAddDashboardItem: PropTypes.func,\n    hasMore: PropTypes.bool,\n    tAddListItemContent: PropTypes.func,\n};\n\nCategorizedMenuGroup.contextTypes = {\n    d2: PropTypes.object.isRequired,\n};\n\nexport default connect(\n    null,\n    {\n        acAddDashboardItem,\n        tAddListItemContent,\n    }\n)(CategorizedMenuGroup);\n","import { sGetEditDashboardRoot } from '../../reducers/editDashboard';\nimport { itemTypeMap } from '../../modules/itemTypes';\nimport {\n    acAddDashboardItem,\n    acUpdateDashboardItem,\n} from '../../actions/editDashboard';\n\nexport const tAddListItemContent = (type, content) => (dispatch, getState) => {\n    const state = getState();\n    const listItemType = itemTypeMap[type].propName;\n    const dashboardItems = sGetEditDashboardRoot(state).dashboardItems;\n    const dashboardItemIndex = dashboardItems.findIndex(\n        item => item.type === type\n    );\n    let dashboardItem;\n\n    // Reports/Resources/Users dashboard item type already present in dashboard\n    if (dashboardItemIndex > -1) {\n        dashboardItem = dashboardItems[dashboardItemIndex];\n        dashboardItem[listItemType].push(content);\n\n        dispatch(acUpdateDashboardItem(dashboardItem));\n    } else {\n        dashboardItem = {\n            type: type,\n            content: [content],\n        };\n\n        dispatch(acAddDashboardItem(dashboardItem));\n    }\n};\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\n\nimport HeaderMenuItem from './HeaderMenuItem';\nimport ContentMenuItem from './ContentMenuItem';\nimport { acAddDashboardItem } from '../../actions/editDashboard';\n\nexport const SinglesMenuGroup = ({ acAddDashboardItem, category }) => {\n    const addToDashboard = ({ type, content }) => () => {\n        acAddDashboardItem({ type, content });\n    };\n\n    return (\n        <>\n            <HeaderMenuItem title={category.header} />\n            {category.items.map(item => (\n                <ContentMenuItem\n                    key={item.type}\n                    type={item.type}\n                    name={item.name}\n                    onInsert={addToDashboard(item)}\n                />\n            ))}\n        </>\n    );\n};\n\nSinglesMenuGroup.propTypes = {\n    acAddDashboardItem: PropTypes.func,\n    category: PropTypes.object,\n};\n\nexport default connect(\n    null,\n    { acAddDashboardItem }\n)(SinglesMenuGroup);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport i18n from '@dhis2/d2-i18n';\nimport Popover from '@material-ui/core/Popover';\nimport { InputField, Menu } from '@dhis2/ui-core';\n\nimport CategorizedMenuGroup from './CategorizedMenuGroup';\nimport SinglesMenuGroup from './SinglesMenuGroup';\nimport { singleItems, categorizedItems } from './selectableItems';\nimport { itemTypeMap, getDefaultItemCount } from '../../modules/itemTypes';\n\nimport './styles/ItemSelector.css';\n\nconst ItemSearchField = props => (\n    <InputField\n        name=\"Dashboard item search\"\n        label={i18n.t('Search for items to add to this dashboard')}\n        type=\"text\"\n        onChange={props.onChange}\n        onFocus={props.onFocus}\n        value={props.value}\n    />\n);\n\nclass ItemSelector extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            anchorEl: null,\n            open: false,\n            maxOptions: new Set(),\n            items: undefined,\n            filter: '',\n        };\n    }\n\n    closeList = () => {\n        this.setState({ open: false, filter: '' });\n    };\n\n    openList = (_, event) => {\n        this.fetchItems();\n\n        this.setState({\n            anchorEl: event.currentTarget,\n            open: true,\n        });\n    };\n\n    setFilter = (_, event) => {\n        this.setState({ filter: event.target.value }, this.fetchItems);\n    };\n\n    getCategorizedMenuGroups = () =>\n        categorizedItems\n            .filter(type => {\n                const itemType = itemTypeMap[type];\n                return (\n                    this.state.items && this.state.items[itemType.endPointName]\n                );\n            })\n            .map(type => {\n                const itemType = itemTypeMap[type];\n                const itemCount = getDefaultItemCount(type);\n                const allItems = this.state.items[itemType.endPointName];\n                const hasMore = allItems.length > itemCount;\n                const items = this.state.maxOptions.has(itemType.id)\n                    ? allItems\n                    : allItems.slice(0, itemCount);\n\n                return (\n                    <CategorizedMenuGroup\n                        key={type}\n                        type={type}\n                        title={itemType.pluralTitle}\n                        items={items}\n                        onChangeItemsLimit={this.fetchItems}\n                        hasMore={hasMore}\n                    />\n                );\n            });\n\n    getSinglesMenuGroups = () =>\n        singleItems.map(category => (\n            <SinglesMenuGroup key={category.id} category={category} />\n        ));\n\n    getMenuGroups = () =>\n        this.getCategorizedMenuGroups().concat(this.getSinglesMenuGroups());\n\n    fetchItems = async type => {\n        if (type) {\n            const maxOptions = this.state.maxOptions;\n\n            if (maxOptions.has(type)) {\n                maxOptions.delete(type);\n            } else {\n                maxOptions.add(type);\n            }\n\n            this.setState({ maxOptions });\n        } else {\n            this.setState({\n                maxOptions: new Set(),\n            });\n        }\n\n        let queryString = '?count=11';\n        if ([...this.state.maxOptions.values()].length) {\n            queryString +=\n                '&max=' + [...this.state.maxOptions.values()].join('&max=');\n        }\n\n        const filter = this.state.filter ? `/${this.state.filter}` : '';\n\n        this.context.d2.Api.getApi()\n            .get(`dashboards/q${filter}${queryString}`)\n            .then(response => this.setState({ items: response }))\n            .catch(console.error);\n    };\n\n    render() {\n        return (\n            <>\n                <ItemSearchField\n                    value={this.state.filter}\n                    onChange={this.setFilter}\n                    onFocus={this.openList}\n                />\n                <Popover\n                    className=\"dashboard-item-selector\"\n                    open={this.state.open}\n                    onClose={this.closeList}\n                    anchorEl={this.state.anchorEl}\n                    anchorOrigin={{ horizontal: 'left', vertical: 'bottom' }}\n                    transformOrigin={{ horizontal: 'left', vertical: 'top' }}\n                    style={{ height: '70vh' }}\n                    PaperProps={{ style: { width: '700px' } }}\n                    disableAutoFocus={true}\n                    disableEnforceFocus={true}\n                    disableRestoreFocus={true}\n                >\n                    <Menu maxWidth={'700px'}>{this.getMenuGroups()}</Menu>\n                </Popover>\n            </>\n        );\n    }\n}\n\nItemSearchField.propTypes = {\n    value: PropTypes.string,\n    onChange: PropTypes.func,\n    onFocus: PropTypes.func,\n};\n\nItemSelector.contextTypes = {\n    d2: PropTypes.object.isRequired,\n};\n\nexport default ItemSelector;\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport i18n from '@dhis2/d2-i18n';\nimport { InputField, TextAreaField } from '@dhis2/ui-core';\n\nimport ItemSelector from '../ItemSelector/ItemSelector';\nimport {\n    acSetDashboardTitle,\n    acSetDashboardDescription,\n} from '../../actions/editDashboard';\nimport { orObject } from '../../modules/util';\nimport { sGetEditDashboardRoot } from '../../reducers/editDashboard';\n\nimport classes from './styles/EditTitleBar.module.css';\n\nexport const EditTitleBar = ({\n    name,\n    description,\n    onChangeTitle,\n    onChangeDescription,\n}) => {\n    const updateTitle = (_, e) => {\n        onChangeTitle(e.target.value);\n    };\n\n    const updateDescription = (_, e) => {\n        onChangeDescription(e.target.value);\n    };\n\n    return (\n        <section className={classes.section}>\n            <div className={classes.titleDescription}>\n                <InputField\n                    className={classes.title}\n                    name=\"Dashboard title input\"\n                    label={i18n.t('Dashboard title')}\n                    type=\"text\"\n                    onChange={updateTitle}\n                    value={name}\n                />\n                <TextAreaField\n                    className={classes.description}\n                    name=\"Dashboard description input\"\n                    label={i18n.t('Dashboard description')}\n                    onChange={updateDescription}\n                    value={description}\n                />\n            </div>\n            <div className={classes.itemSelector}>\n                <ItemSelector />\n            </div>\n        </section>\n    );\n};\n\nEditTitleBar.propTypes = {\n    onChangeDescription: PropTypes.func.isRequired,\n    onChangeTitle: PropTypes.func.isRequired,\n    description: PropTypes.string,\n    name: PropTypes.string,\n};\n\nEditTitleBar.defaultProps = {\n    name: '',\n    description: '',\n};\n\nconst mapStateToProps = state => {\n    const selectedDashboard = orObject(sGetEditDashboardRoot(state));\n\n    return {\n        name: selectedDashboard.name,\n        description: selectedDashboard.description,\n    };\n};\n\nconst mapDispatchToProps = {\n    onChangeTitle: acSetDashboardTitle,\n    onChangeDescription: acSetDashboardDescription,\n};\n\nexport default connect(\n    mapStateToProps,\n    mapDispatchToProps\n)(EditTitleBar);\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nimport { Button } from '@dhis2/ui-core';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\n\nimport i18n from '@dhis2/d2-i18n';\n\nimport {\n    PeriodDimension,\n    DynamicDimension,\n    OrgUnitDimension,\n    DIMENSION_ID_PERIOD,\n    DIMENSION_ID_ORGUNIT,\n} from '@dhis2/analytics';\n\nconst peId = DIMENSION_ID_PERIOD;\nconst ouId = DIMENSION_ID_ORGUNIT;\n\nclass FilterDialog extends Component {\n    onConfirm = id => () => this.props.onConfirm(id);\n\n    dialogContent() {\n        const { displayNameProperty, dimension, selectedItems } = this.props;\n        const dialogId = dimension.id;\n\n        const commonProps = {\n            d2: this.context.d2,\n            onSelect: this.props.onSelect,\n            onDeselect: this.props.onDeselect,\n            onReorder: this.props.onReorder,\n        };\n\n        switch (dialogId) {\n            case peId: {\n                return (\n                    <PeriodDimension\n                        selectedPeriods={selectedItems}\n                        {...commonProps}\n                    />\n                );\n            }\n            case ouId:\n                return (\n                    <OrgUnitDimension\n                        displayNameProperty={displayNameProperty}\n                        ouItems={selectedItems}\n                        {...commonProps}\n                    />\n                );\n            default:\n                return (\n                    <DynamicDimension\n                        selectedItems={selectedItems}\n                        dialogId={dialogId}\n                        dialogTitle={dimension.name}\n                        {...commonProps}\n                    />\n                );\n        }\n    }\n\n    render() {\n        const { dimension, onClose } = this.props;\n        const dialogId = dimension.id;\n\n        return (\n            <Dialog\n                open={!!dialogId}\n                maxWidth=\"lg\"\n                disableEnforceFocus\n                onClose={onClose}\n            >\n                {dialogId && this.dialogContent()}\n                <DialogActions>\n                    <Button kind=\"secondary\" onClick={onClose}>\n                        {i18n.t('Cancel')}\n                    </Button>\n                    <Button kind=\"primary\" onClick={this.onConfirm(dialogId)}>\n                        {i18n.t('Confirm')}\n                    </Button>\n                </DialogActions>\n            </Dialog>\n        );\n    }\n}\n\nFilterDialog.propTypes = {\n    dimension: PropTypes.object,\n    displayNameProperty: PropTypes.string,\n    selectedItems: PropTypes.array,\n    onClose: PropTypes.func,\n    onConfirm: PropTypes.func,\n    onDeselect: PropTypes.func,\n    onReorder: PropTypes.func,\n    onSelect: PropTypes.func,\n};\n\nFilterDialog.contextTypes = {\n    d2: PropTypes.object,\n};\n\nexport default FilterDialog;\n","export const SET_ACTIVE_MODAL_DIMENSION = 'SET_ACTIVE_MODAL_DIMENSION';\nexport const CLEAR_ACTIVE_MODAL_DIMENSION = 'CLEAR_ACTIVE_MODAL_DIMENSION';\n\nexport const DEFAULT_STATE_ACTIVE_MODAL_DIMENSION = {};\n\nexport default (state = DEFAULT_STATE_ACTIVE_MODAL_DIMENSION, action) => {\n    switch (action.type) {\n        case SET_ACTIVE_MODAL_DIMENSION: {\n            return action.value;\n        }\n        case CLEAR_ACTIVE_MODAL_DIMENSION: {\n            return DEFAULT_STATE_ACTIVE_MODAL_DIMENSION;\n        }\n        default:\n            return state;\n    }\n};\n\nexport const sGetActiveModalDimension = state => state.activeModalDimension;\n","import {\n    SET_ACTIVE_MODAL_DIMENSION,\n    CLEAR_ACTIVE_MODAL_DIMENSION,\n} from '../reducers/activeModalDimension';\n\nexport const acSetActiveModalDimension = value => ({\n    type: SET_ACTIVE_MODAL_DIMENSION,\n    value,\n});\n\nexport const acClearActiveModalDimension = () => ({\n    type: CLEAR_ACTIVE_MODAL_DIMENSION,\n});\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport Popover from '@material-ui/core/Popover';\nimport ArrowDropDownIcon from '@material-ui/icons/ArrowDropDown';\n\nimport i18n from '@dhis2/d2-i18n';\nimport { DimensionsPanel } from '@dhis2/analytics';\n\nimport { Button } from '@dhis2/ui-core';\nimport FilterDialog from './FilterDialog';\n\nimport { sGetSettingsDisplayNameProperty } from '../../reducers/settings';\nimport { sGetActiveModalDimension } from '../../reducers/activeModalDimension';\nimport { sGetDimensions } from '../../reducers/dimensions';\nimport { sGetFiltersKeys } from '../../reducers/itemFilters';\nimport { sGetEditItemFiltersRoot } from '../../reducers/editItemFilters';\nimport { acAddItemFilter, acRemoveItemFilter } from '../../actions/itemFilters';\nimport {\n    acRemoveEditItemFilter,\n    acSetEditItemFilters,\n} from '../../actions/editItemFilters';\nimport {\n    acClearActiveModalDimension,\n    acSetActiveModalDimension,\n} from '../../actions/activeModalDimension';\n\nclass FilterSelector extends Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            anchorEl: null,\n        };\n    }\n\n    openPanel = (_, event) => {\n        this.setState({ anchorEl: event.currentTarget });\n    };\n\n    closePanel = () => {\n        this.setState({ anchorEl: null });\n    };\n\n    closeDialog = () => {\n        this.setState({ anchorEl: null });\n\n        this.props.clearActiveModalDimension();\n    };\n\n    selectDimension = id => {\n        this.props.setActiveModalDimension(\n            this.props.dimensions.find(dimension => dimension.id === id)\n        );\n    };\n\n    onSelectItems = ({ dimensionId, items }) => {\n        this.props.setEditItemFilters({\n            ...this.props.selectedItems,\n            [dimensionId]: items,\n        });\n    };\n\n    onDeselectItems = ({ dimensionId, itemIdsToRemove }) => {\n        const oldList = this.props.selectedItems[dimensionId] || [];\n        const newList = oldList.filter(\n            item => !itemIdsToRemove.includes(item.id)\n        );\n\n        if (newList.length) {\n            this.props.setEditItemFilters({\n                ...this.props.selectedItems,\n                [dimensionId]: newList,\n            });\n        } else {\n            this.props.removeEditItemFilter(dimensionId);\n        }\n    };\n\n    onReorderItems = ({ dimensionId, itemIds }) => {\n        const oldList = this.props.selectedItems[dimensionId] || [];\n        const reorderedList = itemIds.map(id =>\n            oldList.find(item => item.id === id)\n        );\n\n        this.props.setEditItemFilters({\n            ...this.props.selectedItems,\n            [dimensionId]: reorderedList,\n        });\n    };\n\n    saveFilter = id => {\n        const filterItems = this.props.selectedItems[id];\n\n        if (filterItems && filterItems.length) {\n            this.props.addItemFilter({\n                id,\n                value: [...filterItems],\n            });\n        } else {\n            this.props.removeItemFilter(id);\n        }\n\n        this.closeDialog();\n    };\n\n    render() {\n        const {\n            displayNameProperty,\n            dimension,\n            dimensions,\n            selectedDimensions,\n            selectedItems,\n        } = this.props;\n\n        return (\n            <>\n                <Button onClick={this.openPanel}>\n                    {i18n.t('Add filter')}\n                    <ArrowDropDownIcon />\n                </Button>\n                <Popover\n                    open={Boolean(this.state.anchorEl)}\n                    anchorEl={this.state.anchorEl}\n                    anchorOrigin={{ vertical: 'bottom', horizontal: 'left' }}\n                    onClose={this.closePanel}\n                    style={{ height: '100%' }}\n                >\n                    <DimensionsPanel\n                        style={{ width: '320px' }}\n                        dimensions={dimensions}\n                        onDimensionClick={this.selectDimension}\n                        selectedIds={selectedDimensions}\n                    />\n                </Popover>\n                {dimension ? (\n                    <FilterDialog\n                        displayNameProperty={displayNameProperty}\n                        dimension={dimension}\n                        selectedItems={selectedItems[dimension.id] || []}\n                        onSelect={this.onSelectItems}\n                        onDeselect={this.onDeselectItems}\n                        onReorder={this.onReorderItems}\n                        onClose={this.closeDialog}\n                        onConfirm={this.saveFilter}\n                    />\n                ) : null}\n            </>\n        );\n    }\n}\n\nconst mapStateToProps = state => ({\n    displayNameProperty: sGetSettingsDisplayNameProperty(state),\n    dimension: sGetActiveModalDimension(state),\n    dimensions: sGetDimensions(state),\n    selectedDimensions: sGetFiltersKeys(state),\n    selectedItems: sGetEditItemFiltersRoot(state),\n});\n\nFilterSelector.propTypes = {\n    addItemFilter: PropTypes.func,\n    clearActiveModalDimension: PropTypes.func,\n    dimension: PropTypes.object,\n    dimensions: PropTypes.array,\n    displayNameProperty: PropTypes.string,\n    removeEditItemFilter: PropTypes.func,\n    removeItemFilter: PropTypes.func,\n    selectedDimensions: PropTypes.array,\n    selectedItems: PropTypes.object,\n    setActiveModalDimension: PropTypes.func,\n    setEditItemFilters: PropTypes.func,\n};\n\nexport default connect(\n    mapStateToProps,\n    {\n        clearActiveModalDimension: acClearActiveModalDimension,\n        setActiveModalDimension: acSetActiveModalDimension,\n        addItemFilter: acAddItemFilter,\n        removeItemFilter: acRemoveItemFilter,\n        removeEditItemFilter: acRemoveEditItemFilter,\n        setEditItemFilters: acSetEditItemFilters,\n    }\n)(FilterSelector);\n","import React, { Component } from 'react';\nimport InfoOutlineIcon from '@material-ui/icons/InfoOutlined';\nimport { colors } from '@dhis2/ui-core';\nimport PropTypes from 'prop-types';\n\nclass Info extends Component {\n    show = false;\n\n    toggle() {\n        this.show = !this.show;\n        return this.show;\n    }\n\n    render() {\n        return (\n            <div onClick={() => this.props.onClick(this.toggle())}>\n                <InfoOutlineIcon style={{ fill: colors.grey600 }} />\n            </div>\n        );\n    }\n}\n\nInfo.propTypes = {\n    onClick: PropTypes.func,\n};\n\nexport default Info;\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { Link } from 'react-router-dom';\nimport i18n from '@dhis2/d2-i18n';\nimport SharingDialog from '@dhis2/d2-ui-sharing-dialog';\nimport Star from '@material-ui/icons/Star';\nimport StarBorder from '@material-ui/icons/StarBorder';\n\nimport { orObject } from '../../modules/util';\nimport { tStarDashboard } from '../../actions/dashboards';\nimport { acSetSelectedShowDescription } from '../../actions/selected';\nimport FilterSelector from '../ItemFilter/FilterSelector';\nimport { Button, colors } from '@dhis2/ui-core';\nimport Info from './Info';\nimport {\n    sGetSelectedId,\n    sGetSelectedShowDescription,\n} from '../../reducers/selected';\nimport {\n    sGetDashboardById,\n    sGetDashboardItems,\n} from '../../reducers/dashboards';\n\nimport classes from './styles/ViewTitleBar.module.css';\n\nconst NO_DESCRIPTION = i18n.t('No description');\n\nclass ViewTitleBar extends Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            sharingDialogIsOpen: false,\n        };\n    }\n\n    toggleSharingDialog = () =>\n        this.setState({ sharingDialogIsOpen: !this.state.sharingDialogIsOpen });\n\n    render() {\n        const {\n            id,\n            name,\n            description,\n            access,\n            style,\n            showDescription,\n            starred,\n            onStarClick,\n            onInfoClick,\n        } = this.props;\n\n        const titleStyle = Object.assign({}, style.title, {\n            cursor: 'default',\n            userSelect: 'text',\n            top: '7px',\n        });\n\n        const StarIcon = starred ? Star : StarBorder;\n\n        return (\n            <>\n                <div className={classes.titleBar}>\n                    <span style={titleStyle}>{name}</span>\n                    <div className={classes.actions}>\n                        <div\n                            className={classes.titleBarIcon}\n                            onClick={onStarClick}\n                        >\n                            <StarIcon style={{ fill: colors.grey600 }} />\n                        </div>\n                        <div className={classes.titleBarIcon}>\n                            <Info onClick={onInfoClick} />\n                        </div>\n                        <div style={{ marginLeft: '10px' }}>\n                            {access.update ? (\n                                <Link\n                                    className={classes.editLink}\n                                    to={`/${id}/edit`}\n                                >\n                                    <Button>{i18n.t('Edit')}</Button>\n                                </Link>\n                            ) : null}\n                            {access.manage ? (\n                                <span style={{ marginRight: '4px' }}>\n                                    <Button onClick={this.toggleSharingDialog}>\n                                        {i18n.t('Share')}\n                                    </Button>\n                                </span>\n                            ) : null}\n                            <span style={{ marginRight: '4px' }}>\n                                <FilterSelector />\n                            </span>\n                        </div>\n                    </div>\n                </div>\n                {showDescription ? (\n                    <div\n                        className=\"dashboard-description\"\n                        style={Object.assign(\n                            { paddingTop: '5px', paddingBottom: '5px' },\n                            style.description,\n                            !description ? { color: '#888' } : {}\n                        )}\n                    >\n                        {description || NO_DESCRIPTION}\n                    </div>\n                ) : null}\n                {id ? (\n                    <SharingDialog\n                        d2={this.context.d2}\n                        id={id}\n                        type=\"dashboard\"\n                        open={this.state.sharingDialogIsOpen}\n                        onRequestClose={this.toggleSharingDialog}\n                    />\n                ) : null}\n            </>\n        );\n    }\n}\n\nViewTitleBar.propTypes = {\n    access: PropTypes.object,\n    description: PropTypes.string,\n    id: PropTypes.string,\n    name: PropTypes.string,\n    showDescription: PropTypes.bool,\n    starred: PropTypes.bool,\n    style: PropTypes.object,\n    onInfoClick: PropTypes.func,\n    onStarClick: PropTypes.func,\n};\n\nViewTitleBar.defaultProps = {\n    name: '',\n    description: '',\n    starred: false,\n    showDescription: false,\n    onInfoClick: null,\n};\n\nViewTitleBar.contextTypes = {\n    d2: PropTypes.object,\n};\n\nconst mapStateToProps = state => {\n    const id = sGetSelectedId(state);\n    const dashboard = orObject(sGetDashboardById(state, id));\n\n    return {\n        id,\n        name: dashboard.displayName,\n        description: dashboard.displayDescription,\n        dashboardItems: sGetDashboardItems(state),\n        showDescription: sGetSelectedShowDescription(state),\n        starred: dashboard.starred,\n        access: orObject(dashboard.access),\n    };\n};\n\nconst mergeProps = (stateProps, dispatchProps, ownProps) => {\n    const { id, starred, showDescription } = stateProps;\n    const { dispatch } = dispatchProps;\n\n    return {\n        ...stateProps,\n        ...ownProps,\n        onStarClick: () => dispatch(tStarDashboard(id, !starred)),\n        onInfoClick: () =>\n            dispatch(acSetSelectedShowDescription(!showDescription)),\n    };\n};\n\nexport default connect(\n    mapStateToProps,\n    null,\n    mergeProps\n)(ViewTitleBar);\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport { colors } from '@dhis2/ui-core';\nimport EditTitleBar from './EditTitleBar';\nimport ViewTitleBar from './ViewTitleBar';\n\nimport './TitleBar.css';\n\nconst style = {\n    title: {\n        position: 'relative',\n        fontSize: 21,\n        fontWeight: 500,\n        color: colors.black,\n        minWidth: 50,\n    },\n    description: {\n        fontSize: 14,\n        color: colors.grey800,\n    },\n};\n\nconst TitleBar = ({ edit }) => {\n    return (\n        <div\n            className=\"titlebar-wrapper\"\n            style={{\n                padding: '20px 15px 5px 10px',\n            }}\n        >\n            {edit ? (\n                <EditTitleBar style={style} />\n            ) : (\n                <ViewTitleBar style={style} />\n            )}\n        </div>\n    );\n};\n\nTitleBar.propTypes = {\n    edit: PropTypes.bool,\n};\n\nexport default TitleBar;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nimport i18n from '@dhis2/d2-i18n';\n\nimport * as pluginManager from './plugin';\nimport { getBaseUrl, orObject } from '../../../modules/util';\nimport { getGridItemDomId } from '../../ItemGrid/gridUtil';\n\nconst pluginCredentials = d2 => {\n    return {\n        baseUrl: getBaseUrl(d2),\n        auth: d2.Api.getApi().defaultHeaders.Authorization,\n    };\n};\n\nclass DefaultPlugin extends Component {\n    pluginCredentials = null;\n\n    constructor(props, context) {\n        super(props);\n\n        this.d2 = context.d2;\n    }\n\n    shouldPluginReload = prevProps => {\n        // TODO - fix this hack, to handle bug with multiple\n        // rerendering while switching between dashboards.\n        //\n        // To determine if the rendering is happening because of a\n        // dashboard switch, check if the item reference has changed.\n        const reloadAllowed = this.props.item === prevProps.item;\n\n        const filtersChanged = prevProps.itemFilters !== this.props.itemFilters;\n        const vis = orObject(this.props.visualization);\n        const prevVis = orObject(prevProps.visualization);\n        const visChanged =\n            vis.id !== prevVis.id || vis.activeType !== prevVis.activeType;\n\n        return reloadAllowed && (visChanged || filtersChanged);\n    };\n\n    reloadPlugin = prevProps => {\n        if (\n            pluginManager.pluginIsAvailable(\n                this.props.item,\n                this.props.visualization\n            ) &&\n            this.shouldPluginReload(prevProps)\n        ) {\n            const prevVis = orObject(prevProps.visualization);\n            const currentVis = this.props.visualization;\n\n            const useActiveType =\n                currentVis.activeType !== prevVis.activeType ||\n                currentVis.activeType !== this.props.item.type;\n\n            if (\n                useActiveType ||\n                this.props.itemFilters !== prevProps.itemFilters\n            ) {\n                pluginManager.unmount(\n                    this.props.item,\n                    prevVis.activeType || this.props.item.type\n                );\n\n                pluginManager.load(this.props.item, this.props.visualization, {\n                    credentials: this.pluginCredentials,\n                    activeType: useActiveType ? currentVis.activeType : null,\n                });\n            }\n        }\n    };\n\n    componentDidMount() {\n        this.pluginCredentials = pluginCredentials(this.d2);\n\n        if (\n            pluginManager.pluginIsAvailable(\n                this.props.item,\n                this.props.visualization\n            )\n        ) {\n            pluginManager.load(this.props.item, this.props.visualization, {\n                credentials: this.pluginCredentials,\n                activeType: !this.props.editMode ? this.getActiveType() : null,\n                options: this.props.options,\n            });\n        }\n    }\n\n    componentDidUpdate(prevProps) {\n        this.reloadPlugin(prevProps);\n    }\n\n    getActiveType = () =>\n        this.props.visualization.activeType || this.props.item.type;\n\n    render() {\n        const { classes, item, visualization, style } = this.props;\n        const pluginIsAvailable = pluginManager.pluginIsAvailable(\n            item,\n            visualization\n        );\n\n        return pluginIsAvailable ? (\n            <div id={getGridItemDomId(item.id)} style={style} />\n        ) : (\n            <div className={classes.textDiv}>\n                {i18n.t('Unable to load the plugin for this item')}\n            </div>\n        );\n    }\n}\n\nDefaultPlugin.contextTypes = {\n    d2: PropTypes.object,\n};\n\nDefaultPlugin.propTypes = {\n    classes: PropTypes.object,\n    editMode: PropTypes.bool,\n    item: PropTypes.object,\n    itemFilters: PropTypes.object,\n    options: PropTypes.object,\n    style: PropTypes.object,\n    visualization: PropTypes.object,\n};\n\nDefaultPlugin.defaultProps = {\n    style: {},\n    item: {},\n    itemFilters: {},\n    options: {},\n    visualization: {},\n};\n\nexport default DefaultPlugin;\n","import React from 'react';\nimport { colors } from '@dhis2/ui-core';\n\nexport const ThreeDots = () => (\n    <svg\n        height=\"18\"\n        viewBox=\"0 0 18 18\"\n        width=\"18\"\n        xmlns=\"http://www.w3.org/2000/svg\"\n    >\n        <path\n            d=\"m4 7.5c-.83 0-1.5.67-1.5 1.5s.67 1.5 1.5 1.5 1.5-.67 1.5-1.5-.67-1.5-1.5-1.5zm10 0c-.83 0-1.5.67-1.5 1.5s.67 1.5 1.5 1.5 1.5-.67 1.5-1.5-.67-1.5-1.5-1.5zm-5 0c-.83 0-1.5.67-1.5 1.5s.67 1.5 1.5 1.5 1.5-.67 1.5-1.5-.67-1.5-1.5-1.5z\"\n            fill=\"#6e7a8a\"\n        />\n    </svg>\n);\n\nexport const SpeechBubble = () => (\n    <svg\n        height=\"20\"\n        viewBox=\"0 0 20 20\"\n        width=\"20\"\n        xmlns=\"http://www.w3.org/2000/svg\"\n        style={{ margin: '3px 2px 0 2px' }} // Temporary fix for the misaligned icon, should be removed once the icon is replaced\n    >\n        <path\n            d=\"m20 2h-16c-1.1 0-1.99.9-1.99 2l-.01 18 4-4h14c1.1 0 2-.9 2-2v-12c0-1.1-.9-2-2-2zm-2 12h-12v-2h12zm0-3h-12v-2h12zm0-3h-12v-2h12z\"\n            fill=\"#6e7a8a\"\n            fillRule=\"evenodd\"\n            transform=\"translate(-2 -2)\"\n        />\n    </svg>\n);\n\nexport const Warning = () => (\n    <svg\n        xmlns=\"http://www.w3.org/2000/svg\"\n        height=\"24\"\n        viewBox=\"0 0 24 24\"\n        width=\"24\"\n        fill={colors.grey600}\n    >\n        <path d=\"M0 0h24v24H0z\" fill=\"none\" />\n        <path d=\"M1 21h22L12 2 1 21zm12-3h-2v-2h2v2zm0-4h-2v-4h2v4z\" />\n    </svg>\n);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport i18n from '@dhis2/d2-i18n';\nimport { Warning } from './assets/icons';\n\nimport classes from './styles/FatalErrorBoundary.module.css';\n\nclass FatalErrorBoundary extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            errorFound: false,\n        };\n    }\n    componentDidCatch(error, info) {\n        this.setState({\n            errorFound: true,\n        });\n        console.log('error: ', error);\n        console.log('info: ', info);\n    }\n    render() {\n        if (this.state.errorFound) {\n            return (\n                <p className={classes.container}>\n                    <span className={classes.icon}>\n                        <Warning />\n                    </span>\n                    <span className={classes.message}>\n                        {i18n.t(\n                            'There was a problem loading this dashboard item'\n                        )}\n                    </span>\n                </p>\n            );\n        }\n        return this.props.children;\n    }\n}\n\nFatalErrorBoundary.propTypes = {\n    children: PropTypes.node,\n};\n\nexport default FatalErrorBoundary;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport i18n from '@dhis2/d2-i18n';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport { colors } from '@dhis2/ui-core';\n\nimport classes from './styles/DeleteItemButton.module.css';\n\nconst DeleteItemButton = ({ onClick }) => (\n    <button\n        type=\"button\"\n        className={classes.deleteItemButton}\n        onClick={onClick}\n        title={i18n.t(`Delete item`)}\n    >\n        <DeleteIcon style={{ fill: colors.red500 }} />\n    </button>\n);\n\nDeleteItemButton.propTypes = {\n    onClick: PropTypes.func,\n};\n\nexport default DeleteItemButton;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\n\nimport { sGetIsEditing } from '../../reducers/editDashboard';\nimport { acRemoveDashboardItem } from '../../actions/editDashboard';\nimport DeleteItemButton from './DeleteItemButton';\n\nimport classes from './styles/ItemHeader.module.css';\n\n// This is the margin-top + margin-bottom defined in the css file\nexport const HEADER_MARGIN_HEIGHT = 12;\n\nconst ItemHeader = React.forwardRef(\n    (\n        { itemId, acRemoveDashboardItem, actionButtons, title, editMode },\n        ref\n    ) => {\n        const handleDeleteItem = () => acRemoveDashboardItem(itemId);\n\n        return (\n            <div className={classes.itemHeaderWrap} ref={ref}>\n                <p className={classes.itemTitle}>{title}</p>\n                {editMode ? (\n                    <div className={classes.itemActionsWrap}>\n                        <DeleteItemButton onClick={handleDeleteItem} />\n                    </div>\n                ) : (\n                    actionButtons && (\n                        <div className={classes.itemActionsWrap}>\n                            {actionButtons}\n                        </div>\n                    )\n                )}\n            </div>\n        );\n    }\n);\n\nItemHeader.propTypes = {\n    acRemoveDashboardItem: PropTypes.func,\n    actionButtons: PropTypes.node,\n    editMode: PropTypes.bool,\n    itemId: PropTypes.string,\n    title: PropTypes.string,\n};\n\nconst mapStateToProps = state => ({\n    editMode: sGetIsEditing(state),\n});\n\nconst mapDispatchToProps = {\n    acRemoveDashboardItem,\n};\n\nexport default connect(\n    mapStateToProps,\n    mapDispatchToProps,\n    null,\n    { forwardRef: true }\n)(ItemHeader);\n","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\n\nimport {\n    isSingleValue,\n    isYearOverYear,\n    VIS_TYPE_GAUGE,\n    VIS_TYPE_PIE,\n} from '@dhis2/analytics';\nimport { Button, Menu, MenuItem, Divider, colors } from '@dhis2/ui-core';\nimport i18n from '@dhis2/d2-i18n';\nimport Popover from '@material-ui/core/Popover';\nimport TableIcon from '@material-ui/icons/ViewList';\nimport ChartIcon from '@material-ui/icons/InsertChart';\nimport MapIcon from '@material-ui/icons/Public';\nimport LaunchIcon from '@material-ui/icons/Launch';\n\nimport { ThreeDots, SpeechBubble } from './assets/icons';\nimport { pluginIsAvailable, getLink } from './plugin';\nimport {\n    CHART,\n    MAP,\n    REPORT_TABLE,\n    EVENT_CHART,\n    EVENT_REPORT,\n    isTrackerDomainType,\n    hasMapView,\n    getAppName,\n} from '../../../modules/itemTypes';\n\nconst iconFill = { fill: colors.grey600 };\n\nconst ItemHeaderButtons = props => {\n    const [anchorEl, setAnchorEl] = useState(null);\n\n    const { item, visualization, onSelectActiveType, d2, activeType } = props;\n\n    const isTrackerType = isTrackerDomainType(item.type);\n\n    const onViewTable = () => {\n        handleClose();\n        onSelectActiveType(isTrackerType ? EVENT_REPORT : REPORT_TABLE);\n    };\n\n    const onViewChart = () => {\n        handleClose();\n        onSelectActiveType(isTrackerType ? EVENT_CHART : CHART);\n    };\n\n    const onViewMap = () => {\n        handleClose();\n        onSelectActiveType(MAP);\n    };\n\n    const itemHasMapView = () => hasMapView(item.type);\n\n    const handleMenuClick = (_, event) => setAnchorEl(event.currentTarget);\n\n    const handleInterpretationClick = () => {\n        props.onToggleFooter();\n        if (anchorEl !== null) {\n            handleClose();\n        }\n    };\n\n    const handleClose = () => setAnchorEl(null);\n\n    const type = visualization.type || item.type;\n    const canViewAs =\n        !isSingleValue(type) &&\n        !isYearOverYear(type) &&\n        type !== VIS_TYPE_GAUGE &&\n        type !== VIS_TYPE_PIE;\n\n    const interpretationMenuLabel = props.activeFooter\n        ? i18n.t(`Hide interpretations and details`)\n        : i18n.t(`Show interpretations and details`);\n\n    const ViewAsMenuItems = () => (\n        <>\n            {activeType !== CHART && activeType !== EVENT_CHART && (\n                <MenuItem\n                    dense\n                    label={i18n.t('View as Chart')}\n                    onClick={onViewChart}\n                    icon={<ChartIcon style={iconFill} />}\n                />\n            )}\n            {activeType !== REPORT_TABLE && activeType !== EVENT_REPORT && (\n                <MenuItem\n                    dense\n                    label={i18n.t('View as Table')}\n                    onClick={onViewTable}\n                    icon={<TableIcon style={iconFill} />}\n                />\n            )}\n            {itemHasMapView() && activeType !== MAP && (\n                <MenuItem\n                    dense\n                    label={i18n.t('View as Map')}\n                    onClick={onViewMap}\n                    icon={<MapIcon style={iconFill} />}\n                />\n            )}\n        </>\n    );\n\n    return pluginIsAvailable(item, visualization) ? (\n        <>\n            <Button small secondary onClick={handleMenuClick}>\n                <ThreeDots />\n            </Button>\n            {anchorEl && (\n                <Popover\n                    open={Boolean(anchorEl)}\n                    onClose={handleClose}\n                    anchorEl={anchorEl}\n                >\n                    <Menu>\n                        {canViewAs && (\n                            <>\n                                <ViewAsMenuItems />\n                                <Divider />\n                            </>\n                        )}\n                        <MenuItem\n                            dense\n                            icon={<LaunchIcon style={{ fill: '#6e7a8a' }} />}\n                            label={i18n.t('Open in {{appName}} app', {\n                                appName: getAppName(item.type),\n                            })}\n                            href={getLink(item, d2)}\n                            target=\"_blank\"\n                        />\n                        <MenuItem\n                            dense\n                            icon={<SpeechBubble />}\n                            label={interpretationMenuLabel}\n                            onClick={handleInterpretationClick}\n                        />\n                    </Menu>\n                </Popover>\n            )}\n        </>\n    ) : null;\n};\n\nItemHeaderButtons.propTypes = {\n    activeFooter: PropTypes.bool,\n    activeType: PropTypes.string,\n    d2: PropTypes.object,\n    item: PropTypes.object,\n    visualization: PropTypes.object,\n    onSelectActiveType: PropTypes.func,\n    onToggleFooter: PropTypes.func,\n};\n\nexport default ItemHeaderButtons;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { colors } from '@dhis2/ui-core';\nimport { getId } from './plugin';\nimport InterpretationsComponent from '@dhis2/d2-ui-interpretations';\n\nconst style = {\n    scrollContainer: {\n        overflowY: 'auto',\n        height: '340px',\n    },\n    line: {\n        margin: '-1px 0px 0px',\n        height: '1px',\n        border: 'none',\n        backgroundColor: colors.grey100,\n    },\n};\n\nclass ItemFooter extends Component {\n    render() {\n        const objectId = getId(this.props.item);\n\n        return (\n            <div className=\"dashboard-item-footer\">\n                <hr style={style.line} />\n                <div style={style.scrollContainer}>\n                    <InterpretationsComponent\n                        d2={this.context.d2}\n                        item={this.props.item}\n                        type={this.props.item.type.toLowerCase()}\n                        id={objectId}\n                        appName=\"dashboard\"\n                    />\n                </div>\n            </div>\n        );\n    }\n}\n\nItemFooter.contextTypes = {\n    d2: PropTypes.object.isRequired,\n};\n\nItemFooter.propTypes = {\n    item: PropTypes.object.isRequired,\n};\n\nexport default ItemFooter;\n","// Note that this ignores discrepancies in 'this', so shouldn't be used with bound functions\n// This is useful instead of lodash/memoize when we only need to memoize a single value\n// Inspiration: https://github.com/alexreardon/memoize-one\n\nconst memoizeOne = fn => {\n    let lastArgs = undefined;\n    let lastValue = undefined;\n\n    return (...args) => {\n        if (\n            lastArgs &&\n            args.length === lastArgs.length &&\n            args.every((arg, i) => arg === lastArgs[i])\n        ) {\n            return lastValue;\n        }\n        lastArgs = args;\n        lastValue = fn(...args);\n        return lastValue;\n    };\n};\n\nexport default memoizeOne;\n","import React from 'react';\nimport CircularProgress from '@material-ui/core/CircularProgress';\n\nimport classes from './styles/LoadingMask.module.css';\n\nfunction CircularIndeterminate() {\n    return (\n        <div className={classes.outer}>\n            <CircularProgress className={classes.progress} />\n        </div>\n    );\n}\n\nexport default CircularIndeterminate;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport uniqueId from 'lodash/uniqueId';\nimport VisualizationPlugin from '@dhis2/data-visualizer-plugin';\nimport i18n from '@dhis2/d2-i18n';\n\nimport DefaultPlugin from './DefaultPlugin';\nimport FatalErrorBoundary from './FatalErrorBoundary';\nimport ItemHeader, { HEADER_MARGIN_HEIGHT } from '../ItemHeader';\nimport ItemHeaderButtons from './ItemHeaderButtons';\nimport ItemFooter from './ItemFooter';\nimport * as pluginManager from './plugin';\nimport { sGetVisualization } from '../../../reducers/visualizations';\nimport { sGetItemFiltersRoot } from '../../../reducers/itemFilters';\nimport {\n    acAddVisualization,\n    acSetActiveVisualizationType,\n} from '../../../actions/visualizations';\nimport {\n    VISUALIZATION,\n    MAP,\n    CHART,\n    REPORT_TABLE,\n} from '../../../modules/itemTypes';\nimport memoizeOne from '../../../modules/memoizeOne';\n\nimport { getVisualizationConfig } from './plugin';\nimport LoadingMask from './LoadingMask';\nimport { ITEM_CONTENT_PADDING_BOTTOM } from '../../ItemGrid/ItemGrid';\n\nimport classes from './styles/Item.module.css';\n\nexport class Item extends Component {\n    state = {\n        showFooter: false,\n        configLoaded: false,\n        pluginIsLoaded: false,\n    };\n\n    constructor(props, context) {\n        super(props);\n\n        this.d2 = context.d2;\n\n        this.contentRef = React.createRef();\n        this.headerRef = React.createRef();\n\n        this.memoizedApplyFilters = memoizeOne(this.applyFilters);\n\n        this.memoizedGetVisualizationConfig = memoizeOne(\n            getVisualizationConfig\n        );\n\n        this.memoizedGetContentStyle = memoizeOne(this.getContentStyle);\n    }\n\n    async componentDidMount() {\n        this.props.onVisualizationLoaded(\n            // TODO do not call fetch on the pluginManager, do it here as the manager will eventually be removed...\n            await pluginManager.fetch(this.props.item)\n        );\n\n        this.setState({\n            configLoaded: true,\n        });\n    }\n\n    componentDidUpdate(prevProps, prevState) {\n        if (\n            prevState.pluginIsLoaded &&\n            (prevProps.visualization !== this.props.visualization ||\n                prevProps.itemFilters !== this.props.itemFilters)\n        ) {\n            this.setState({\n                pluginIsLoaded: false,\n            });\n        }\n    }\n\n    applyFilters = (visualization, filters) => {\n        if (!Object.keys(filters).length) {\n            return visualization;\n        }\n\n        // deep clone objects in filters to avoid changing the visualization in the Redux store\n        const visRows = visualization.rows.map(obj => ({ ...obj }));\n        const visColumns = visualization.columns.map(obj => ({ ...obj }));\n        const visFilters = visualization.filters.map(obj => ({ ...obj }));\n\n        Object.keys(filters).forEach(dimensionId => {\n            if (filters[dimensionId]) {\n                let dimensionFound = false;\n\n                [visRows, visColumns, visFilters].forEach(dimensionObjects =>\n                    dimensionObjects\n                        .filter(obj => obj.dimension === dimensionId)\n                        .forEach(obj => {\n                            dimensionFound = true;\n                            obj.items = filters[dimensionId];\n                        })\n                );\n\n                // add dimension to filters if not already present elsewhere\n                if (!dimensionFound) {\n                    visFilters.push({\n                        dimension: dimensionId,\n                        items: filters[dimensionId],\n                    });\n                }\n            }\n        });\n\n        return {\n            ...visualization,\n            rows: visRows,\n            columns: visColumns,\n            filters: visFilters,\n        };\n    };\n\n    getUniqueKey = memoizeOne(() => uniqueId());\n\n    pluginCredentials = null;\n\n    getPluginComponent = () => {\n        const activeType = this.getActiveType();\n        const visualization = this.memoizedGetVisualizationConfig(\n            this.props.visualization,\n            this.props.item.type,\n            activeType\n        );\n\n        if (!visualization) {\n            return (\n                <div className={classes.textDiv}>\n                    {i18n.t('No data to display')}\n                </div>\n            );\n        }\n\n        const calculatedHeight =\n            this.props.item.originalHeight -\n            this.headerRef.current.clientHeight -\n            HEADER_MARGIN_HEIGHT -\n            ITEM_CONTENT_PADDING_BOTTOM;\n\n        const props = {\n            ...this.props,\n            visualization,\n            classes,\n            style: this.memoizedGetContentStyle(\n                calculatedHeight,\n                this.contentRef ? this.contentRef.offsetHeight : null,\n                this.props.editMode\n            ),\n        };\n\n        switch (activeType) {\n            case VISUALIZATION:\n            case CHART:\n            case REPORT_TABLE: {\n                return (\n                    <>\n                        {!this.state.pluginIsLoaded ? (\n                            <div className={classes.loadingCover}>\n                                <LoadingMask />\n                            </div>\n                        ) : null}\n                        <VisualizationPlugin\n                            d2={this.d2}\n                            visualization={this.memoizedApplyFilters(\n                                visualization,\n                                props.itemFilters\n                            )}\n                            onLoadingComplete={this.onLoadingComplete}\n                            forDashboard={true}\n                            style={props.style}\n                        />\n                    </>\n                );\n            }\n            case MAP: {\n                if (props.item.type === MAP) {\n                    // apply filters only to thematic and event layers\n                    // for maps AO\n                    const mapViews = props.visualization.mapViews.map(obj => {\n                        if (\n                            obj.layer.includes('thematic') ||\n                            obj.layer.includes('event')\n                        ) {\n                            return this.memoizedApplyFilters(\n                                obj,\n                                props.itemFilters\n                            );\n                        }\n\n                        return obj;\n                    });\n\n                    props.visualization = {\n                        ...props.visualization,\n                        mapViews,\n                    };\n                } else {\n                    // this is the case of a non map AO passed to the maps plugin\n                    // due to a visualization type switch in dashboard item\n                    // maps plugin takes care of converting the AO to a suitable format\n                    props.visualization = this.memoizedApplyFilters(\n                        props.visualization,\n                        props.itemFilters\n                    );\n                }\n\n                props.options = {\n                    ...props.options,\n                    hideTitle: true,\n                };\n\n                return <DefaultPlugin {...props} />;\n            }\n            default: {\n                props.visualization = this.memoizedApplyFilters(\n                    props.visualization,\n                    props.itemFilters\n                );\n\n                return <DefaultPlugin {...props} />;\n            }\n        }\n    };\n\n    onLoadingComplete = () => {\n        this.setState({\n            pluginIsLoaded: true,\n        });\n    };\n\n    onToggleFooter = () => {\n        this.setState(\n            { showFooter: !this.state.showFooter },\n            this.props.onToggleItemExpanded(this.props.item.id)\n        );\n    };\n\n    onSelectActiveType = type => {\n        if (type === this.getActiveType()) {\n            return;\n        }\n\n        pluginManager.unmount(this.props.item, this.getActiveType());\n\n        this.props.onSelectActiveType(this.props.visualization.id, type);\n    };\n\n    getActiveType = () =>\n        this.props.visualization.activeType || this.props.item.type;\n\n    pluginIsAvailable = () =>\n        pluginManager.pluginIsAvailable(\n            this.props.item,\n            this.props.visualization\n        );\n\n    getContentStyle = (calculatedHeight, measuredHeight, editMode) => {\n        const height = editMode\n            ? measuredHeight || calculatedHeight\n            : calculatedHeight;\n\n        return { height };\n    };\n\n    render() {\n        const { item, editMode, itemFilters } = this.props;\n        const { showFooter } = this.state;\n\n        const actionButtons = (\n            <ItemHeaderButtons\n                item={item}\n                visualization={this.props.visualization}\n                onSelectActiveType={this.onSelectActiveType}\n                onToggleFooter={this.onToggleFooter}\n                d2={this.d2}\n                activeType={this.getActiveType()}\n                activeFooter={this.state.showFooter}\n            />\n        );\n\n        return (\n            <>\n                <ItemHeader\n                    title={pluginManager.getName(item)}\n                    itemId={item.id}\n                    actionButtons={actionButtons}\n                    ref={this.headerRef}\n                />\n                <FatalErrorBoundary>\n                    <div\n                        key={this.getUniqueKey(itemFilters)}\n                        className=\"dashboard-item-content\"\n                        ref={ref => (this.contentRef = ref)}\n                    >\n                        {this.state.configLoaded && this.getPluginComponent()}\n                    </div>\n                </FatalErrorBoundary>\n                {!editMode && showFooter ? <ItemFooter item={item} /> : null}\n            </>\n        );\n    }\n}\n\nItem.contextTypes = {\n    d2: PropTypes.object,\n};\n\nItem.propTypes = {\n    editMode: PropTypes.bool,\n    item: PropTypes.object,\n    itemFilters: PropTypes.object,\n    visualization: PropTypes.object,\n    onSelectActiveType: PropTypes.func,\n    onToggleItemExpanded: PropTypes.func,\n    onVisualizationLoaded: PropTypes.func,\n};\n\nItem.defaultProps = {\n    item: {},\n    editMode: false,\n    onToggleItemExpanded: Function.prototype,\n    itemFilters: {},\n    visualization: {},\n};\n\nconst mapStateToProps = (state, ownProps) => ({\n    itemFilters: sGetItemFiltersRoot(state),\n    visualization: sGetVisualization(\n        state,\n        pluginManager.extractFavorite(ownProps.item).id\n    ),\n});\n\nconst mapDispatchToProps = dispatch => ({\n    onVisualizationLoaded: visualization =>\n        dispatch(acAddVisualization(visualization)),\n    onSelectActiveType: (id, type, activeType) =>\n        dispatch(acSetActiveVisualizationType(id, type, activeType)),\n});\n\nexport default connect(\n    mapStateToProps,\n    mapDispatchToProps\n)(Item);\n","import React from 'react';\nimport { colors } from '@dhis2/ui-core';\n\nconst style = {\n    backgroundColor: colors.grey200,\n    border: 'none',\n    height: '1px',\n    margin: '0px 0px 5px 0px',\n};\n\nconst Line = () => <hr style={style} />;\n\nexport default Line;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport i18n from '@dhis2/d2-i18n';\n\nimport { sGetMessagesRoot } from '../../../reducers/messages';\nimport { formatDate } from '../../../modules/util';\nimport { colors } from '@dhis2/ui-core';\nimport ItemHeader from '../ItemHeader';\nimport Line from '../../../widgets/Line';\n\nimport './MessagesItem.css';\n\nconst PRIVATE = 'PRIVATE';\n\nconst messageTypes = {\n    [PRIVATE]: 'Private',\n    VALIDATION_RESULT: 'Validation',\n    TICKET: 'Ticket',\n    SYSTEM: 'System',\n};\n\nconst style = {\n    list: {\n        listStyleType: 'none',\n        paddingLeft: '0px',\n    },\n    seeAll: {\n        textAlign: 'center',\n        fontSize: '13px',\n        marginBottom: '5px',\n    },\n    sender: {\n        fontSize: '13px',\n        lineHeight: '15px',\n        margin: 0,\n        color: colors.grey800,\n    },\n    snippet: {\n        color: colors.grey800,\n        fontSize: '13px',\n        lineHeight: '15px',\n        maxHeight: '30px',\n        overflow: 'hidden',\n    },\n};\n\nclass MessagesItem extends Component {\n    state = {\n        uiLocale: '',\n    };\n\n    async componentDidMount() {\n        const uiLocale = await this.context.d2.currentUser.userSettings.get(\n            'keyUiLocale'\n        );\n\n        this.setState({ uiLocale });\n    }\n\n    getMessageHref = msg => {\n        const msgIdentifier = msg ? `#/${msg.messageType}/${msg.id}` : '';\n        return `${this.context.baseUrl}/dhis-web-messaging/${msgIdentifier}`;\n    };\n\n    getMessageSender = msg => {\n        const latestMsg = msg.messages.slice(-1)[0];\n        return latestMsg.sender ? latestMsg.sender.displayName : '';\n    };\n\n    getMessageItems = () => {\n        const editClass = !this.props.editMode ? 'view' : null;\n\n        return this.props.messages.map(msg => {\n            const redirectToMsg = () => {\n                if (!this.props.editMode) {\n                    document.location.href = this.getMessageHref(msg);\n                }\n            };\n\n            const sender =\n                msg.messageType === PRIVATE\n                    ? this.getMessageSender(msg)\n                    : messageTypes[msg.messageType];\n\n            const readClass = !msg.read ? 'unread' : null;\n            const latestMsg = msg.messages.slice(-1)[0];\n            const msgDate = latestMsg.lastUpdated;\n\n            return (\n                <li\n                    className={`message-item ${editClass}`}\n                    key={msg.id}\n                    onClick={redirectToMsg}\n                >\n                    <p className={`message-title ${readClass}`}>\n                        {msg.displayName} ({msg.messageCount})\n                    </p>\n                    <p style={style.sender}>\n                        {sender} - {formatDate(msgDate, this.state.uiLocale)}\n                    </p>\n                    <p style={style.snippet}>{latestMsg.text}</p>\n                </li>\n            );\n        });\n    };\n\n    render() {\n        return (\n            <>\n                <ItemHeader\n                    title={i18n.t('Messages')}\n                    itemId={this.props.item.id}\n                />\n                <Line />\n                {this.props.messages.length > 0 && (\n                    <div className=\"dashboard-item-content\">\n                        <ul style={style.list}>{this.getMessageItems()}</ul>\n                        <div style={style.seeAll}>\n                            <a href={this.getMessageHref()}>\n                                {i18n.t('See all messages')}\n                            </a>\n                        </div>\n                    </div>\n                )}\n            </>\n        );\n    }\n}\n\nMessagesItem.propTypes = {\n    editMode: PropTypes.bool,\n    item: PropTypes.object,\n    messages: PropTypes.array,\n};\n\nMessagesItem.contextTypes = {\n    d2: PropTypes.object,\n    baseUrl: PropTypes.string,\n};\n\nconst mapStateToProps = state => {\n    return {\n        messages: Object.values(sGetMessagesRoot(state)),\n    };\n};\n\nconst MessagesContainer = connect(\n    mapStateToProps,\n    null\n)(MessagesItem);\n\nexport default MessagesContainer;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport i18n from '@dhis2/d2-i18n';\nimport ItemHeader from '../ItemHeader';\nimport NotInterestedIcon from '@material-ui/icons/NotInterested';\n\nconst NotSupportedItem = props => (\n    <>\n        <ItemHeader\n            title={i18n.t('Item type \"{{type}}\" not supported', {\n                type: props.item.type,\n            })}\n            itemId={props.item.id}\n        />\n        <div\n            style={{\n                display: 'flex',\n                justifyContent: 'center',\n                alignItems: 'center',\n                height: '90%',\n            }}\n        >\n            <NotInterestedIcon\n                style={{ width: 100, height: 100, align: 'center' }}\n                color=\"disabled\"\n            />\n        </div>\n    </>\n);\n\nNotSupportedItem.propTypes = {\n    item: PropTypes.object,\n};\n\nexport default NotSupportedItem;\n","import React from 'react';\nimport { colors } from '@dhis2/ui-core';\nimport PropTypes from 'prop-types';\n\nconst DescriptionIcon = ({ className }) => (\n    <svg\n        className={className}\n        xmlns=\"http://www.w3.org/2000/svg\"\n        viewBox=\"0 0 24 24\"\n        fill={colors.grey500}\n    >\n        <path d=\"M0 0h24v24H0z\" fill=\"none\" />\n        <path d=\"M14 2H6c-1.1 0-1.99.9-1.99 2L4 20c0 1.1.89 2 1.99 2H18c1.1 0 2-.9 2-2V8l-6-6zm2 16H8v-2h8v2zm0-4H8v-2h8v2zm-3-5V3.5L18.5 9H13z\" />\n    </svg>\n);\n\nDescriptionIcon.propTypes = {\n    className: PropTypes.string,\n};\n\nexport default DescriptionIcon;\n","import React from 'react';\nimport { colors } from '@dhis2/ui-core';\nimport PropTypes from 'prop-types';\n\nconst DeleteIcon = ({ className }) => (\n    <svg\n        className={className}\n        xmlns=\"http://www.w3.org/2000/svg\"\n        width=\"18\"\n        height=\"18\"\n        viewBox=\"0 0 24 24\"\n        fill={colors.red500}\n    >\n        <path d=\"M6 19c0 1.1.9 2 2 2h8c1.1 0 2-.9 2-2V7H6v12zM19 4h-3.5l-1-1h-5l-1 1H5v2h14V4z\" />\n        <path d=\"M0 0h24v24H0z\" fill=\"none\" />\n    </svg>\n);\n\nDeleteIcon.propTypes = {\n    className: PropTypes.string,\n};\n\nexport default DeleteIcon;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { colors } from '@dhis2/ui-core';\nimport DescriptionIcon from '../../../icons/Description';\n\nimport DeleteIcon from '../../../icons/Delete';\nimport Line from '../../../widgets/Line';\nimport { itemTypeMap, getItemUrl } from '../../../modules/itemTypes';\nimport { orArray } from '../../../modules/util';\nimport { tRemoveListItemContent } from './actions';\nimport ItemHeader from '../ItemHeader';\nimport classes from './Item.module.css';\n\nconst getItemTitle = item => itemTypeMap[item.type].pluralTitle;\n\nconst getContentItems = item =>\n    orArray(item[itemTypeMap[item.type].propName]).filter(\n        (item, index, array) =>\n            array.findIndex(el => el.id === item.id) === index\n    );\n\nconst ListItem = (props, context) => {\n    const { item, editMode, tRemoveListItemContent } = props;\n    const contentItems = getContentItems(item);\n\n    const getLink = contentItem => {\n        const deleteButton = (\n            <button\n                className={classes.deletebutton}\n                onClick={() => tRemoveListItemContent(item, contentItem)}\n            >\n                <DeleteIcon className={classes.deleteicon} />\n            </button>\n        );\n\n        return (\n            <>\n                <a\n                    className={classes.link}\n                    style={{ color: colors.grey900 }}\n                    href={getItemUrl(item.type, contentItem, context.d2)}\n                >\n                    {contentItem.name}\n                </a>\n                {editMode ? deleteButton : null}\n            </>\n        );\n    };\n\n    return (\n        <>\n            <ItemHeader title={getItemTitle(item)} itemId={item.id} />\n            <Line />\n            <div className=\"dashboard-item-content\">\n                <ul className={classes.list}>\n                    {contentItems.map(contentItem => (\n                        <li className={classes.item} key={contentItem.id}>\n                            <DescriptionIcon className={classes.itemicon} />\n                            {getLink(contentItem)}\n                        </li>\n                    ))}\n                </ul>\n            </div>\n        </>\n    );\n};\n\nListItem.propTypes = {\n    editMode: PropTypes.bool,\n    item: PropTypes.object,\n    tRemoveListItemContent: PropTypes.func,\n};\n\nListItem.contextTypes = {\n    d2: PropTypes.object,\n};\n\nexport default connect(\n    null,\n    {\n        tRemoveListItemContent,\n    }\n)(ListItem);\n","import {\n    acUpdateDashboardItem,\n    acRemoveDashboardItem,\n} from '../../../actions/editDashboard';\nimport { itemTypeMap } from '../../../modules/itemTypes';\n\nexport const tRemoveListItemContent = (dashboardItem, content) => dispatch => {\n    const listItemType = itemTypeMap[dashboardItem.type].propName;\n\n    const newContent = dashboardItem[listItemType].filter(\n        item => item.id !== content.id\n    );\n\n    if (newContent.length) {\n        dashboardItem[listItemType] = newContent;\n        dispatch(acUpdateDashboardItem(dashboardItem));\n    } else {\n        dispatch(acRemoveDashboardItem(dashboardItem));\n    }\n};\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport i18n from '@dhis2/d2-i18n';\nimport PropTypes from 'prop-types';\n\nimport Input from '@material-ui/core/Input';\nimport {\n    Parser as RichTextParser,\n    Editor as RichTextEditor,\n} from '@dhis2/d2-ui-rich-text';\n\nimport { acUpdateDashboardItem } from '../../../actions/editDashboard';\nimport { sGetEditDashboardItems } from '../../../reducers/editDashboard';\nimport { sGetDashboardItems } from '../../../reducers/dashboards';\nimport ItemHeader from '../ItemHeader';\nimport Line from '../../../widgets/Line';\n\nconst style = {\n    textDiv: {\n        padding: '10px',\n        whiteSpace: 'pre-line',\n        lineHeight: '20px',\n    },\n    textField: {\n        fontSize: '14px',\n        fontStretch: 'normal',\n        width: '90%',\n        margin: '0 auto',\n        display: 'block',\n        lineHeight: '24px',\n    },\n    container: {\n        marginBottom: '20px',\n        marginTop: '20px',\n    },\n};\n\nconst TextItem = props => {\n    const { item, editMode, text, acUpdateDashboardItem } = props;\n\n    const onChangeText = event => {\n        const updatedItem = {\n            ...item,\n            text: event.target.value,\n        };\n\n        acUpdateDashboardItem(updatedItem);\n    };\n\n    const viewItem = () => {\n        const textDivStyle = Object.assign({}, style.textField, style.textDiv);\n        return (\n            <div className=\"dashboard-item-content\" style={style.container}>\n                <RichTextParser style={textDivStyle}>{text}</RichTextParser>\n            </div>\n        );\n    };\n\n    const editItem = () => {\n        return (\n            <>\n                <ItemHeader title={i18n.t('Text item')} itemId={item.id} />\n                <Line />\n                <div className=\"dashboard-item-content\">\n                    <RichTextEditor onEdit={onChangeText}>\n                        <Input\n                            value={text}\n                            multiline\n                            fullWidth\n                            style={style.textField}\n                            placeholder={i18n.t('Add text here')}\n                            onChange={onChangeText}\n                        />\n                    </RichTextEditor>\n                </div>\n            </>\n        );\n    };\n\n    return <>{editMode ? editItem() : viewItem()}</>;\n};\n\nconst mapStateToProps = (state, ownProps) => {\n    const items = ownProps.editMode\n        ? sGetEditDashboardItems(state)\n        : sGetDashboardItems(state);\n\n    const item = items.find(item => item.id === ownProps.item.id);\n\n    return {\n        text: item ? item.text : '',\n    };\n};\n\nTextItem.propTypes = {\n    acUpdateDashboardItem: PropTypes.func,\n    editMode: PropTypes.bool,\n    item: PropTypes.object,\n    text: PropTypes.string,\n};\n\nexport default connect(\n    mapStateToProps,\n    {\n        acUpdateDashboardItem,\n    }\n)(TextItem);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport NotInterestedIcon from '@material-ui/icons/NotInterested';\n\nimport { FILTER_ORG_UNIT } from '../../../actions/itemFilters';\nimport { sGetItemFiltersRoot } from '../../../reducers/itemFilters';\nimport ItemHeader from '../ItemHeader';\nimport Line from '../../../widgets/Line';\n\nconst getIframeSrc = (appDetails, item, itemFilters) => {\n    let iframeSrc = `${appDetails.launchUrl}?dashboardItemId=${item.id}`;\n\n    if (\n        itemFilters &&\n        itemFilters[FILTER_ORG_UNIT] &&\n        itemFilters[FILTER_ORG_UNIT].length\n    ) {\n        const ouIds = itemFilters[FILTER_ORG_UNIT].map(\n            ouPath => ouPath.split('/').slice(-1)[0]\n        );\n\n        iframeSrc += `&userOrgUnit=${ouIds.join(',')}`;\n    }\n\n    return iframeSrc;\n};\n\nconst AppItem = ({ item, itemFilters }, context) => {\n    let appDetails;\n\n    const appKey = item.appKey;\n\n    if (appKey) {\n        appDetails = context.d2.system.installedApps.find(\n            app => app.key === appKey\n        );\n    }\n\n    return appDetails && appDetails.name && appDetails.launchUrl ? (\n        <>\n            <ItemHeader title={appDetails.name} itemId={item.id} />\n            <Line />\n            <iframe\n                title={appDetails.name}\n                src={getIframeSrc(appDetails, item, itemFilters)}\n                className=\"dashboard-item-content\"\n                style={{ border: 'none' }}\n            />\n        </>\n    ) : (\n        <>\n            <ItemHeader title={`${appKey} app not found`} />\n            <Line />\n            <div\n                className=\"dashboard-item-content\"\n                style={{\n                    display: 'flex',\n                    justifyContent: 'center',\n                    alignItems: 'center',\n                    height: '90%',\n                }}\n            >\n                <NotInterestedIcon\n                    color=\"disabled\"\n                    disabled\n                    style={{ width: 100, height: 100, align: 'center' }}\n                />\n            </div>\n        </>\n    );\n};\n\nAppItem.propTypes = {\n    item: PropTypes.object,\n    itemFilters: PropTypes.object,\n};\n\nAppItem.contextTypes = {\n    d2: PropTypes.object,\n};\n\nconst mapStateToProps = state => ({\n    itemFilters: sGetItemFiltersRoot(state),\n});\n\nexport default connect(mapStateToProps)(AppItem);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport i18n from '@dhis2/d2-i18n';\n\nimport { colors } from '@dhis2/ui-core';\nimport ItemHeader from '../ItemHeader';\n\nconst style = {\n    margin: '21px 28px',\n    fontSize: '14px',\n    lineHeight: '18px',\n    color: colors.grey600,\n};\n\nconst SpacerItem = props => {\n    return (\n        <>\n            <ItemHeader title={i18n.t('Spacer')} itemId={props.item.id} />\n            <p style={style}>\n                {i18n.t(\n                    'Use a spacer to create empty vertical space between other dashboard items.'\n                )}\n            </p>\n        </>\n    );\n};\n\nSpacerItem.propTypes = {\n    item: PropTypes.object,\n};\n\nexport default SpacerItem;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport VisualizationItem from './VisualizationItem/Item';\nimport MessagesItem from './MessagesItem/Item';\nimport NotSupportedItem from './NotSupportedItem/Item';\nimport ListItem from './ListItem/Item';\nimport TextItem from './TextItem/Item';\nimport AppItem from './AppItem/Item';\nimport SpacerItem from './SpacerItem/Item';\nimport {\n    APP,\n    VISUALIZATION,\n    REPORT_TABLE,\n    CHART,\n    MAP,\n    EVENT_CHART,\n    EVENT_REPORT,\n    MESSAGES,\n    REPORTS,\n    RESOURCES,\n    USERS,\n    TEXT,\n    SPACER,\n} from '../../modules/itemTypes';\nimport { DEFAULT_STATE_ITEM_FILTERS } from '../../reducers/itemFilters';\n\nconst getGridItem = type => {\n    switch (type) {\n        case VISUALIZATION:\n        case REPORT_TABLE:\n        case CHART:\n        case MAP:\n        case EVENT_CHART:\n        case EVENT_REPORT:\n            return VisualizationItem;\n        case MESSAGES:\n            return MessagesItem;\n        case REPORTS:\n        case RESOURCES:\n        case USERS:\n            return ListItem;\n        case TEXT:\n            return TextItem;\n        case SPACER:\n            return SpacerItem;\n        case APP:\n            return AppItem;\n        default:\n            return NotSupportedItem;\n    }\n};\n\nexport const Item = props => {\n    const GridItem = getGridItem(props.item.type);\n\n    return (\n        <GridItem\n            item={props.item}\n            editMode={props.editMode}\n            itemFilters={\n                props.editMode ? DEFAULT_STATE_ITEM_FILTERS : props.itemFilters\n            }\n            onToggleItemExpanded={props.onToggleItemExpanded}\n        />\n    );\n};\n\nItem.propTypes = {\n    editMode: PropTypes.bool,\n    item: PropTypes.object,\n    itemFilters: PropTypes.object,\n    onToggleItemExpanded: PropTypes.func,\n};\n","import React from 'react';\nimport { colors } from '@dhis2/ui-core';\nimport PropTypes from 'prop-types';\n\nexport const NoContentMessage = ({ text }) => (\n    <div\n        style={{\n            padding: '50px 10px',\n            textAlign: 'center',\n            fontSize: '15px',\n            fontWeight: 500,\n            color: colors.grey600,\n        }}\n    >\n        {text}\n    </div>\n);\n\nNoContentMessage.propTypes = {\n    text: PropTypes.string,\n};\n\nexport default NoContentMessage;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport debounce from 'lodash/debounce';\nimport pick from 'lodash/pick';\n\nconst defaultDebounceMs = 100;\nconst defaultBufferFactor = 0.25;\n\nclass ProgressiveLoadingContainer extends Component {\n    static propTypes = {\n        children: PropTypes.node.isRequired,\n        bufferFactor: PropTypes.number,\n        className: PropTypes.string,\n        debounceMs: PropTypes.number,\n        style: PropTypes.object,\n    };\n    static defaultProps = {\n        debounceMs: defaultDebounceMs,\n        bufferFactor: defaultBufferFactor,\n    };\n\n    state = {\n        shouldLoad: false,\n    };\n    containerRef = null;\n    shouldLoadHandler = null;\n\n    checkShouldLoad() {\n        const bufferPx = this.props.bufferFactor * window.innerHeight;\n\n        if (!this.containerRef) {\n            return;\n        }\n\n        const rect = this.containerRef.getBoundingClientRect();\n        if (\n            rect.bottom > -bufferPx &&\n            rect.top < window.innerHeight + bufferPx\n        ) {\n            this.setState({\n                shouldLoad: true,\n            });\n\n            this.removeHandler();\n        }\n    }\n\n    registerHandler() {\n        this.shouldLoadHandler = debounce(\n            () => this.checkShouldLoad(),\n            this.props.debounceMs\n        );\n\n        window.addEventListener('scroll', this.shouldLoadHandler);\n    }\n    removeHandler() {\n        window.removeEventListener('scroll', this.shouldLoadHandler);\n    }\n\n    componentDidMount() {\n        this.registerHandler();\n        this.checkShouldLoad();\n    }\n\n    componentWillUnmount() {\n        this.removeHandler();\n    }\n\n    render() {\n        const { children, className, style, ...props } = this.props;\n        const { shouldLoad } = this.state;\n\n        const eventProps = pick(props, [\n            'onMouseDown',\n            'onTouchStart',\n            'onMouseUp',\n            'onTouchEnd',\n        ]);\n\n        return (\n            <div\n                ref={ref => (this.containerRef = ref)}\n                style={style}\n                className={className}\n                {...eventProps}\n            >\n                {shouldLoad && children}\n            </div>\n        );\n    }\n}\n\nexport default ProgressiveLoadingContainer;\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport i18n from '@dhis2/d2-i18n';\nimport ReactGridLayout from 'react-grid-layout';\nimport { CircularLoader, ScreenCover } from '@dhis2/ui-core';\n\nimport {\n    acUpdateDashboardLayout,\n    acRemoveDashboardItem,\n} from '../../actions/editDashboard';\nimport { Item } from '../Item/Item';\nimport { resize as pluginResize } from '../Item/VisualizationItem/plugin';\nimport { isVisualizationType } from '../../modules/itemTypes';\nimport {\n    GRID_ROW_HEIGHT,\n    GRID_COMPACT_TYPE,\n    MARGIN,\n    getGridColumns,\n    hasShape,\n    onItemResize,\n} from './gridUtil';\nimport { orArray } from '../../modules/util';\n\nimport NoContentMessage from '../../widgets/NoContentMessage';\n\nimport 'react-grid-layout/css/styles.css';\nimport 'react-resizable/css/styles.css';\n\nimport './ItemGrid.css';\nimport { sGetSelectedId, sGetSelectedIsLoading } from '../../reducers/selected';\nimport {\n    sGetEditDashboardRoot,\n    sGetEditDashboardItems,\n} from '../../reducers/editDashboard';\nimport {\n    sGetDashboardById,\n    sGetDashboardItems,\n} from '../../reducers/dashboards';\nimport ProgressiveLoadingContainer from '../Item/ProgressiveLoadingContainer';\n\n// Component\n\nconst EXPANDED_HEIGHT = 17;\n// this is set in the .dashboard-item-content css\nexport const ITEM_CONTENT_PADDING_BOTTOM = 4;\n\nexport class ItemGrid extends Component {\n    state = {\n        expandedItems: {},\n    };\n\n    onToggleItemExpanded = clickedId => {\n        const isExpanded =\n            typeof this.state.expandedItems[clickedId] === 'boolean'\n                ? this.state.expandedItems[clickedId]\n                : false;\n\n        const expandedItems = { ...this.state.expandedItems };\n        expandedItems[clickedId] = !isExpanded;\n        this.setState({ expandedItems });\n    };\n\n    onRemoveItem = clickedId => {\n        this.props.acRemoveDashboardItem(clickedId);\n    };\n\n    componentWillReceiveProps(nextProps) {\n        if (nextProps.edit) {\n            this.setState({ expandedItems: {} });\n        }\n    }\n\n    onLayoutChange = newLayout => {\n        if (this.props.edit) {\n            this.props.acUpdateDashboardLayout(newLayout);\n        }\n    };\n\n    onResizeStop = (layout, oldItem, newItem) => {\n        onItemResize(newItem.i);\n\n        const dashboardItem = this.props.dashboardItems.find(\n            item => item.id === newItem.i\n        );\n\n        // call resize on the item component if it's a plugin type\n        if (dashboardItem && isVisualizationType(dashboardItem)) {\n            pluginResize(dashboardItem);\n        }\n    };\n\n    onRemoveItemWrapper = id => () => this.onRemoveItem(id);\n\n    adjustHeightForExpanded = dashboardItem => {\n        const expandedItem = this.state.expandedItems[dashboardItem.id];\n\n        if (expandedItem && expandedItem === true) {\n            return Object.assign({}, dashboardItem, {\n                h: dashboardItem.h + EXPANDED_HEIGHT,\n            });\n        }\n\n        return dashboardItem;\n    };\n\n    getItemComponent = item => {\n        const itemClassNames = [\n            item.type,\n            this.props.edit ? 'edit' : 'view',\n        ].join(' ');\n\n        return (\n            <ProgressiveLoadingContainer\n                key={item.i}\n                className={itemClassNames}\n            >\n                <Item\n                    item={item}\n                    editMode={this.props.edit}\n                    onToggleItemExpanded={this.onToggleItemExpanded}\n                />\n            </ProgressiveLoadingContainer>\n        );\n    };\n\n    getItemComponents = items => items.map(item => this.getItemComponent(item));\n\n    render() {\n        const { edit, isLoading, dashboardItems } = this.props;\n\n        if (!isLoading && !dashboardItems.length) {\n            return (\n                <NoContentMessage\n                    text={i18n.t('There are no items on this dashboard')}\n                />\n            );\n        }\n\n        const items = edit\n            ? dashboardItems\n            : dashboardItems.map(this.adjustHeightForExpanded);\n\n        return (\n            <div className=\"grid-wrapper\">\n                {isLoading ? (\n                    <ScreenCover>\n                        <CircularLoader />\n                    </ScreenCover>\n                ) : null}\n                <ReactGridLayout\n                    onLayoutChange={this.onLayoutChange}\n                    onResizeStop={this.onResizeStop}\n                    className=\"layout\"\n                    layout={items}\n                    margin={MARGIN}\n                    cols={getGridColumns()}\n                    rowHeight={GRID_ROW_HEIGHT}\n                    width={window.innerWidth}\n                    compactType={GRID_COMPACT_TYPE}\n                    isDraggable={edit}\n                    isResizable={edit}\n                    draggableCancel=\"input,textarea\"\n                >\n                    {this.getItemComponents(items)}\n                </ReactGridLayout>\n            </div>\n        );\n    }\n}\n\nItemGrid.propTypes = {\n    acRemoveDashboardItem: PropTypes.func,\n    acUpdateDashboardLayout: PropTypes.func,\n    dashboardItems: PropTypes.array,\n    edit: PropTypes.bool,\n    isLoading: PropTypes.bool,\n};\n\nItemGrid.defaultProps = {\n    dashboardItems: [],\n};\n\n// Container\n\nconst mapStateToProps = (state, ownProps) => {\n    const selectedDashboard = ownProps.edit\n        ? sGetEditDashboardRoot(state)\n        : sGetDashboardById(state, sGetSelectedId(state));\n\n    const dashboardItems = ownProps.edit\n        ? sGetEditDashboardItems(state)\n        : sGetDashboardItems(state);\n\n    return {\n        isLoading: sGetSelectedIsLoading(state) || !selectedDashboard,\n        dashboardItems,\n    };\n};\n\nconst mapDispatchToProps = {\n    acUpdateDashboardLayout,\n    acRemoveDashboardItem,\n};\n\nconst mergeProps = (stateProps, dispatchProps, ownProps) => {\n    const validItems = orArray(stateProps.dashboardItems).filter(hasShape);\n\n    return {\n        ...dispatchProps,\n        edit: ownProps.edit,\n        isLoading: stateProps.isLoading,\n        dashboardItems: validItems,\n        onItemResize,\n    };\n};\n\nexport default connect(\n    mapStateToProps,\n    mapDispatchToProps,\n    mergeProps\n)(ItemGrid);\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nimport i18n from '@dhis2/d2-i18n';\n\nimport { colors } from '@dhis2/ui-core';\n\nconst styles = {\n    badgeContainer: {\n        margin: '2px',\n        padding: '0 16px',\n        borderRadius: '4px',\n        color: colors.white,\n        backgroundColor: '#212934',\n        height: 36,\n        display: 'flex',\n        alignItems: 'center',\n    },\n    badge: {\n        fontSize: '13px',\n        cursor: 'pointer',\n        whiteSpace: 'nowrap',\n    },\n    badgeRemove: {\n        fontSize: '12px',\n        textDecoration: 'underline',\n        marginLeft: '24px',\n        cursor: 'pointer',\n    },\n};\n\nclass FilterBadge extends Component {\n    onClick = id => () => this.props.onClick(id);\n    onRemove = id => () => this.props.onRemove(id);\n\n    render() {\n        const { data } = this.props;\n\n        return (\n            <div style={styles.badgeContainer}>\n                <span style={styles.badge} onClick={this.onClick(data.id)}>\n                    {`${data.name}: ${\n                        data.values.length > 1\n                            ? i18n.t('{{count}} selected', {\n                                  count: data.values.length,\n                              })\n                            : data.values[0].name\n                    }`}\n                </span>\n                <span\n                    style={styles.badgeRemove}\n                    onClick={this.onRemove(data.id)}\n                >\n                    {i18n.t('Remove')}\n                </span>\n            </div>\n        );\n    }\n}\n\nFilterBadge.propTypes = {\n    data: PropTypes.object.isRequired,\n    onClick: PropTypes.func.isRequired,\n    onRemove: PropTypes.func.isRequired,\n};\n\nFilterBadge.defaultProps = {\n    onClick: Function.prototype,\n    onRemove: Function.prototype,\n};\n\nexport default FilterBadge;\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { createSelector } from 'reselect';\n\nimport { sGetDimensions } from '../../reducers/dimensions';\nimport { sGetItemFiltersRoot } from '../../reducers/itemFilters';\nimport { sGetControlBarUserRows } from '../../reducers/controlBar';\nimport { getTopOffset } from '../ControlBar/controlBarDimensions';\nimport { acRemoveItemFilter } from '../../actions/itemFilters';\nimport { acRemoveEditItemFilter } from '../../actions/editItemFilters';\nimport { acSetActiveModalDimension } from '../../actions/activeModalDimension';\n\nimport FilterBadge from './FilterBadge';\n\nimport classes from './styles/FilterBar.module.css';\n\nexport class FilterBar extends Component {\n    onBadgeRemove = id => {\n        this.props.removeItemFilter(id);\n        this.props.removeEditItemFilter(id);\n    };\n\n    onBadgeClick = id => {\n        this.props.setActiveModalDimension({\n            id,\n            name: this.props.filters.find(item => item.id === id).name,\n        });\n    };\n\n    render() {\n        const { filters, userRows } = this.props;\n        const top = getTopOffset(userRows) + 10;\n\n        return filters.length ? (\n            <div className={classes.bar} style={{ top }}>\n                {filters.map(filter => (\n                    <FilterBadge\n                        key={filter.id}\n                        data={filter}\n                        onClick={this.onBadgeClick}\n                        onRemove={this.onBadgeRemove}\n                    />\n                ))}\n            </div>\n        ) : null;\n    }\n}\n\nFilterBar.propTypes = {\n    filters: PropTypes.array.isRequired,\n    removeEditItemFilter: PropTypes.func.isRequired,\n    removeItemFilter: PropTypes.func.isRequired,\n    setActiveModalDimension: PropTypes.func,\n    userRows: PropTypes.number,\n};\n\nFilterBar.defaultProps = {\n    filters: [],\n    removeItemFIlter: Function.prototype,\n    removeEditItemFilter: Function.prototype,\n};\n\n// simplify the filters structure to:\n// [{ id: 'pe', name: 'Period', values: [{ id: 2019: name: '2019' }, {id: 'LAST_MONTH', name: 'Last month' }]}, ...]\nconst filtersSelector = createSelector(\n    [sGetItemFiltersRoot, sGetDimensions],\n    (filters, dimensions) =>\n        Object.keys(filters).reduce((arr, id) => {\n            arr.push({\n                id: id,\n                name: dimensions.find(dimension => dimension.id === id).name,\n                values: filters[id].map(value => ({\n                    id: value.id,\n                    name: value.displayName || value.name,\n                })),\n            });\n\n            return arr;\n        }, [])\n);\n\nconst mapStateToProps = state => ({\n    filters: filtersSelector(state),\n    userRows: sGetControlBarUserRows(state),\n});\n\nexport default connect(\n    mapStateToProps,\n    {\n        setActiveModalDimension: acSetActiveModalDimension,\n        removeItemFilter: acRemoveItemFilter,\n        removeEditItemFilter: acRemoveEditItemFilter,\n    }\n)(FilterBar);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport TitleBar from '../TitleBar/TitleBar';\nimport ItemGrid from '../ItemGrid/ItemGrid';\nimport FilterBar from '../FilterBar/FilterBar';\n\nexport const DashboardContent = props => (\n    <>\n        <TitleBar edit={props.editMode} />\n        <FilterBar />\n        <ItemGrid edit={props.editMode} />\n    </>\n);\n\nDashboardContent.propTypes = {\n    editMode: PropTypes.bool,\n};\n\nexport default DashboardContent;\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport isEmpty from 'lodash/isEmpty';\nimport i18n from '@dhis2/d2-i18n';\nimport PropTypes from 'prop-types';\n\nimport {\n    sGetAllDashboards,\n    sDashboardsIsFetching,\n} from '../../reducers/dashboards';\nimport { sGetSelectedId } from '../../reducers/selected';\nimport DashboardsBar from '../ControlBar/DashboardsBar';\nimport DashboardVerticalOffset from './DashboardVerticalOffset';\nimport DashboardContent from './DashboardContent';\nimport NoContentMessage from '../../widgets/NoContentMessage';\n\nexport const Content = ({ hasDashboardContent, dashboardsIsEmpty }) => {\n    const msg = dashboardsIsEmpty\n        ? i18n.t(\n              'No dashboards found. Use the + button to create a new dashboard.'\n          )\n        : i18n.t('Requested dashboard not found');\n\n    return hasDashboardContent ? (\n        <DashboardContent editMode={false} />\n    ) : (\n        <NoContentMessage text={msg} />\n    );\n};\n\nContent.propTypes = {\n    dashboardsIsEmpty: PropTypes.bool,\n    hasDashboardContent: PropTypes.bool,\n};\n\nexport const ViewDashboard = ({ id, dashboardsIsEmpty, dashboardsLoaded }) => {\n    const hasDashboardContent = id && !dashboardsIsEmpty;\n    const contentNotReady = !dashboardsLoaded || id === null;\n\n    return (\n        <>\n            <DashboardsBar />\n            <DashboardVerticalOffset />\n            <div className=\"dashboard-wrapper\">\n                {contentNotReady ? null : (\n                    <Content\n                        hasDashboardContent={hasDashboardContent}\n                        dashboardsIsEmpty={dashboardsIsEmpty}\n                    />\n                )}\n            </div>\n        </>\n    );\n};\n\nViewDashboard.propTypes = {\n    dashboardsIsEmpty: PropTypes.bool,\n    dashboardsLoaded: PropTypes.bool,\n    id: PropTypes.string,\n};\n\nconst mapStateToProps = state => {\n    const dashboards = sGetAllDashboards(state);\n\n    return {\n        id: sGetSelectedId(state),\n        dashboardsIsEmpty: isEmpty(dashboards),\n        dashboardsLoaded: !sDashboardsIsFetching(state),\n    };\n};\n\nexport default connect(mapStateToProps)(ViewDashboard);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport i18n from '@dhis2/d2-i18n';\nimport {\n    Button,\n    Modal,\n    ModalContent,\n    ModalActions,\n    ButtonStrip,\n    ModalTitle,\n} from '@dhis2/ui-core';\n\nimport classes from './styles/ConfirmDeleteDialog.module.css';\n\nexport const ConfirmDeleteDialog = ({\n    dashboardName,\n    onDeleteConfirmed,\n    onContinueEditing,\n    open,\n}) => {\n    const actions = [\n        <Button key=\"cancel\" secondary onClick={onContinueEditing}>\n            {i18n.t('Cancel')}\n        </Button>,\n        <Button key=\"delete\" destructive onClick={onDeleteConfirmed}>\n            {i18n.t('Delete')}\n        </Button>,\n    ];\n\n    return (\n        open && (\n            <Modal onClose={onContinueEditing} small position=\"middle\">\n                <ModalTitle>{i18n.t('Delete dashboard')}</ModalTitle>\n                <ModalContent>\n                    <span className={classes.content}>\n                        {i18n.t(\n                            'Deleting dashboard \"{{ dashboardName }}\" will remove it for all users. This action cannot be undone. Are you sure you want to permanently delete this dashboard?',\n                            { dashboardName }\n                        )}\n                    </span>\n                </ModalContent>\n                <ModalActions>\n                    <ButtonStrip>{actions}</ButtonStrip>\n                </ModalActions>\n            </Modal>\n        )\n    );\n};\n\nConfirmDeleteDialog.propTypes = {\n    dashboardName: PropTypes.string,\n    open: PropTypes.bool,\n    onContinueEditing: PropTypes.func,\n    onDeleteConfirmed: PropTypes.func,\n};\n\nexport default ConfirmDeleteDialog;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { Redirect } from 'react-router-dom';\nimport i18n from '@dhis2/d2-i18n';\nimport ControlBar from './ControlBar';\nimport TranslationDialog from '@dhis2/d2-ui-translation-dialog';\nimport { Button } from '@dhis2/ui-core';\n\nimport ConfirmDeleteDialog from './ConfirmDeleteDialog';\nimport {\n    tSaveDashboard,\n    acClearEditDashboard,\n} from '../../actions/editDashboard';\nimport {\n    tDeleteDashboard,\n    acSetDashboardDisplayName,\n} from '../../actions/dashboards';\nimport {\n    sGetEditDashboardRoot,\n    sGetIsNewDashboard,\n} from '../../reducers/editDashboard';\nimport {\n    CONTROL_BAR_ROW_HEIGHT,\n    MIN_ROW_COUNT,\n    getControlBarHeight,\n} from './controlBarDimensions';\nimport { apiFetchDashboard } from '../../api/dashboards';\n\nimport classes from './styles/DashboardsBar.module.css';\n\nconst buttonBarStyle = {\n    height: CONTROL_BAR_ROW_HEIGHT,\n    paddingTop: '15px',\n    marginLeft: '15px',\n    marginRight: '15px',\n};\n\nexport class EditBar extends Component {\n    state = {\n        translationDialogIsOpen: false,\n        dashboardModel: undefined,\n        confirmDeleteDialogOpen: false,\n        redirectUrl: undefined,\n    };\n\n    onConfirmDelete = () => {\n        this.setState({ confirmDeleteDialogOpen: true });\n    };\n\n    onSave = () => {\n        this.props.onSave().then(newId => {\n            this.setState({ redirectUrl: `/${newId}` });\n        });\n    };\n\n    onDiscard = () => {\n        this.props.onDiscardChanges();\n        const redirectUrl = this.props.dashboardId\n            ? `/${this.props.dashboardId}`\n            : '/';\n        this.setState({ redirectUrl });\n    };\n\n    onContinueEditing = () => {\n        this.setState({ confirmDeleteDialogOpen: false });\n    };\n\n    onDeleteConfirmed = () => {\n        this.setState({ confirmDeleteDialogOpen: false });\n        this.props.onDelete(this.props.dashboardId).then(() => {\n            this.setState({ redirectUrl: '/' });\n        });\n    };\n\n    onTranslationsSaved = async translations => {\n        if (translations && translations.length) {\n            const dbLocale = await this.context.d2.currentUser.userSettings.get(\n                'keyDbLocale'\n            );\n\n            const translation = translations.find(\n                t => t.locale === dbLocale && t.property === 'NAME'\n            );\n\n            if (translation && translation.value) {\n                this.props.onTranslate(\n                    this.props.dashboardId,\n                    translation.value\n                );\n            }\n        }\n    };\n\n    fetchDashboardModel = () => {\n        if (this.props.dashboardId && !this.state.dashboardModel) {\n            apiFetchDashboard(this.props.dashboardId).then(dashboardModel =>\n                this.setState({ dashboardModel })\n            );\n        }\n    };\n\n    componentDidMount() {\n        this.fetchDashboardModel();\n    }\n\n    componentDidUpdate() {\n        this.fetchDashboardModel();\n    }\n\n    toggleTranslationDialog = () => {\n        this.setState({\n            translationDialogIsOpen: !this.state.translationDialogIsOpen,\n        });\n    };\n\n    confirmDeleteDialog = () =>\n        this.props.deleteAccess && this.props.dashboardId ? (\n            <ConfirmDeleteDialog\n                dashboardName={this.props.dashboardName}\n                onDeleteConfirmed={this.onDeleteConfirmed}\n                onContinueEditing={this.onContinueEditing}\n                open={this.state.confirmDeleteDialogOpen}\n            />\n        ) : null;\n\n    translationDialog = () =>\n        this.state.dashboardModel && this.state.dashboardModel.id ? (\n            <TranslationDialog\n                className=\"translation-dialog\"\n                d2={this.context.d2}\n                open={this.state.translationDialogIsOpen}\n                onRequestClose={this.toggleTranslationDialog}\n                objectToTranslate={this.state.dashboardModel}\n                fieldsToTranslate={['name', 'description']}\n                // TODO handle messages in snackbar\n                onTranslationSaved={this.onTranslationsSaved}\n                onTranslationError={err =>\n                    console.log('translation update error', err)\n                }\n            />\n        ) : null;\n\n    render() {\n        if (this.state.redirectUrl) {\n            return <Redirect to={this.state.redirectUrl} />;\n        }\n\n        const { dashboardId, deleteAccess, updateAccess } = this.props;\n        const controlBarHeight = getControlBarHeight(MIN_ROW_COUNT);\n\n        const discardBtnText = updateAccess\n            ? i18n.t('Exit without saving')\n            : i18n.t('Go to dashboards');\n\n        return (\n            <>\n                <ControlBar height={controlBarHeight} editMode={true}>\n                    <div style={buttonBarStyle}>\n                        {updateAccess ? (\n                            <div className={classes.leftControls}>\n                                <span style={{ marginRight: '15px' }}>\n                                    <Button primary onClick={this.onSave}>\n                                        {i18n.t('Save changes')}\n                                    </Button>\n                                </span>\n\n                                {dashboardId ? (\n                                    <span style={{ marginRight: '15px' }}>\n                                        <Button\n                                            onClick={\n                                                this.toggleTranslationDialog\n                                            }\n                                        >\n                                            {i18n.t('Translate')}\n                                        </Button>\n                                    </span>\n                                ) : null}\n                                {dashboardId && deleteAccess ? (\n                                    <Button onClick={this.onConfirmDelete}>\n                                        {i18n.t('Delete')}\n                                    </Button>\n                                ) : null}\n                            </div>\n                        ) : null}\n\n                        <div className={classes.rightControls}>\n                            <Button secondary onClick={this.onDiscard}>\n                                {discardBtnText}\n                            </Button>\n                        </div>\n                    </div>\n                </ControlBar>\n                {this.translationDialog()}\n                {this.confirmDeleteDialog()}\n            </>\n        );\n    }\n}\n\nEditBar.propTypes = {\n    dashboardId: PropTypes.string,\n    dashboardName: PropTypes.string,\n    deleteAccess: PropTypes.bool,\n    updateAccess: PropTypes.bool,\n    onDelete: PropTypes.func,\n    onDiscardChanges: PropTypes.func,\n    onSave: PropTypes.func,\n    onTranslate: PropTypes.func,\n};\n\nEditBar.contextTypes = {\n    d2: PropTypes.object,\n};\n\nconst mapStateToProps = state => {\n    const dashboard = sGetEditDashboardRoot(state);\n\n    let deleteAccess;\n    let updateAccess;\n    if (sGetIsNewDashboard(state)) {\n        deleteAccess = true;\n        updateAccess = true;\n    } else {\n        updateAccess = dashboard.access ? dashboard.access.update : false;\n        deleteAccess = dashboard.access ? dashboard.access.delete : false;\n    }\n\n    return {\n        dashboardId: dashboard.id,\n        dashboardName: dashboard.name,\n        deleteAccess,\n        updateAccess,\n    };\n};\n\nconst mapDispatchToProps = dispatch => ({\n    onSave: () => dispatch(tSaveDashboard()).then(id => id),\n    onDelete: id => dispatch(tDeleteDashboard(id)),\n    onDiscardChanges: () => dispatch(acClearEditDashboard()),\n    onTranslate: (id, value) => dispatch(acSetDashboardDisplayName(id, value)),\n});\n\nexport default connect(\n    mapStateToProps,\n    mapDispatchToProps\n)(EditBar);\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport i18n from '@dhis2/d2-i18n';\nimport PropTypes from 'prop-types';\n\nimport { acSetEditDashboard } from '../../actions/editDashboard';\nimport { sGetSelectedId } from '../../reducers/selected';\nimport {\n    sGetDashboardById,\n    sGetDashboardItems,\n    sDashboardsIsFetching,\n} from '../../reducers/dashboards';\nimport DashboardVerticalOffset from './DashboardVerticalOffset';\nimport DashboardContent from './DashboardContent';\nimport EditBar from '../ControlBar/EditBar';\nimport NoContentMessage from '../../widgets/NoContentMessage';\n\nexport const Content = ({ updateAccess }) => {\n    return updateAccess ? (\n        <DashboardContent editMode={true} />\n    ) : (\n        <NoContentMessage text={i18n.t('No access')} />\n    );\n};\n\nContent.propTypes = {\n    updateAccess: PropTypes.bool,\n};\nexport class EditDashboard extends Component {\n    state = {\n        initialized: false,\n    };\n\n    initEditDashboard = () => {\n        if (this.props.dashboard) {\n            this.setState({ initialized: true });\n            this.props.setEditDashboard(this.props.dashboard, this.props.items);\n        }\n    };\n\n    componentDidMount() {\n        this.initEditDashboard();\n    }\n\n    componentDidUpdate() {\n        if (!this.state.initialized) {\n            this.initEditDashboard();\n        }\n    }\n\n    getDashboardContent = () => {\n        const contentNotReady =\n            !this.props.dashboardsLoaded || this.props.id === null;\n\n        return (\n            <div className=\"dashboard-wrapper\">\n                {contentNotReady ? null : (\n                    <Content updateAccess={this.props.updateAccess} />\n                )}\n            </div>\n        );\n    };\n\n    render() {\n        return (\n            <>\n                <EditBar />\n                <DashboardVerticalOffset editMode={true} />\n                {this.getDashboardContent()}\n            </>\n        );\n    }\n}\n\nEditDashboard.propTypes = {\n    dashboard: PropTypes.object,\n    dashboardsLoaded: PropTypes.bool,\n    id: PropTypes.string,\n    items: PropTypes.array,\n    setEditDashboard: PropTypes.func,\n    updateAccess: PropTypes.bool,\n};\n\nconst mapStateToProps = state => {\n    const id = sGetSelectedId(state);\n    const dashboard = id ? sGetDashboardById(state, id) : null;\n\n    const updateAccess =\n        dashboard && dashboard.access ? dashboard.access.update : false;\n\n    return {\n        dashboard,\n        id,\n        updateAccess,\n        items: sGetDashboardItems(state),\n        dashboardsLoaded: !sDashboardsIsFetching(state),\n    };\n};\n\nexport default connect(\n    mapStateToProps,\n    {\n        setEditDashboard: acSetEditDashboard,\n    }\n)(EditDashboard);\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\n\nimport { acSetEditNewDashboard } from '../../actions/editDashboard';\nimport DashboardVerticalOffset from './DashboardVerticalOffset';\nimport EditBar from '../ControlBar/EditBar';\nimport DashboardContent from './DashboardContent';\n\nclass NewDashboard extends Component {\n    componentDidMount() {\n        this.props.setNewDashboard();\n    }\n\n    render() {\n        return (\n            <>\n                <EditBar />\n                <DashboardVerticalOffset editMode={true} />\n                <div className=\"dashboard-wrapper\">\n                    <DashboardContent editMode={true} />\n                </div>\n            </>\n        );\n    }\n}\n\nNewDashboard.propTypes = {\n    setNewDashboard: PropTypes.func,\n};\n\nexport default connect(\n    null,\n    {\n        setNewDashboard: acSetEditNewDashboard,\n    }\n)(NewDashboard);\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\n\nimport { tSelectDashboard } from '../../actions/dashboards';\nimport { sDashboardsIsFetching } from '../../reducers/dashboards';\nimport { EDIT, NEW } from './dashboardModes';\nimport ViewDashboard from './ViewDashboard';\nimport EditDashboard from './EditDashboard';\nimport NewDashboard from './NewDashboard';\n\nclass Dashboard extends Component {\n    setDashboard = () => {\n        if (this.props.dashboardsLoaded) {\n            const id = this.props.match.params.dashboardId || null;\n\n            this.props.selectDashboard(id);\n\n            this.scrollToTop();\n        }\n    };\n\n    scrollToTop = () => {\n        window.scrollTo(0, 0);\n    };\n\n    componentDidMount() {\n        this.setDashboard();\n    }\n\n    componentDidUpdate() {\n        this.setDashboard();\n    }\n\n    render() {\n        switch (this.props.mode) {\n            case EDIT:\n                return <EditDashboard />;\n            case NEW:\n                return <NewDashboard />;\n            default:\n                return <ViewDashboard />;\n        }\n    }\n}\n\nDashboard.propTypes = {\n    dashboardsLoaded: PropTypes.bool,\n    match: PropTypes.object,\n    mode: PropTypes.string,\n    selectDashboard: PropTypes.func,\n};\n\nconst mapStateToProps = state => {\n    return { dashboardsLoaded: !sDashboardsIsFetching(state) };\n};\n\nexport default connect(\n    mapStateToProps,\n    {\n        selectDashboard: tSelectDashboard,\n    }\n)(Dashboard);\n","export const EDIT = 'edit';\nexport const NEW = 'new';\nexport const VIEW = 'view';\n","import React, { Component } from 'react';\nimport { HashRouter as Router, Route, Switch } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport i18n from '@dhis2/d2-i18n';\nimport { HeaderBar } from '@dhis2/ui-widgets';\nimport { CssVariables } from '@dhis2/ui-core';\n\nimport { EDIT, VIEW, NEW } from './Dashboard/dashboardModes';\nimport { acReceivedUser } from '../actions/user';\nimport { tFetchDashboards } from '../actions/dashboards';\nimport { tSetControlBarRows } from '../actions/controlBar';\nimport { tSetDimensions } from '../actions/dimensions';\nimport Dashboard from './Dashboard/Dashboard';\nimport SnackbarMessage from './SnackbarMessage/SnackbarMessage';\n\nimport 'typeface-roboto';\nimport './App.css';\n\nexport class App extends Component {\n    componentDidMount() {\n        this.props.setCurrentUser(this.props.d2.currentUser);\n        this.props.fetchDashboards();\n        this.props.setControlBarRows();\n        this.props.setDimensions(this.props.d2);\n    }\n\n    getChildContext() {\n        return { baseUrl: this.props.baseUrl, i18n, d2: this.props.d2 };\n    }\n\n    render() {\n        return (\n            <>\n                <CssVariables colors spacers />\n                <div className=\"app-wrapper\">\n                    <div className=\"dashboard-header-bar\">\n                        <HeaderBar appName={i18n.t('Dashboard')} />\n                    </div>\n                    <Router>\n                        <Switch>\n                            <Route\n                                exact\n                                path=\"/\"\n                                render={props => (\n                                    <Dashboard {...props} mode={VIEW} />\n                                )}\n                            />\n                            <Route\n                                exact\n                                path=\"/new\"\n                                render={props => (\n                                    <Dashboard {...props} mode={NEW} />\n                                )}\n                            />\n                            <Route\n                                exact\n                                path=\"/:dashboardId\"\n                                render={props => (\n                                    <Dashboard {...props} mode={VIEW} />\n                                )}\n                            />\n                            <Route\n                                exact\n                                path=\"/:dashboardId/edit\"\n                                render={props => (\n                                    <Dashboard {...props} mode={EDIT} />\n                                )}\n                            />\n                        </Switch>\n                    </Router>\n                    <SnackbarMessage />\n                </div>\n            </>\n        );\n    }\n}\n\nApp.propTypes = {\n    fetchDashboards: PropTypes.func.isRequired,\n    setControlBarRows: PropTypes.func.isRequired,\n    setCurrentUser: PropTypes.func.isRequired,\n    setDimensions: PropTypes.func.isRequired,\n    baseUrl: PropTypes.string,\n    d2: PropTypes.object,\n};\n\nApp.childContextTypes = {\n    baseUrl: PropTypes.string,\n    i18n: PropTypes.object,\n    d2: PropTypes.object,\n};\n\nconst mapDispatchToProps = dispatch => {\n    return {\n        setCurrentUser: currentUser => dispatch(acReceivedUser(currentUser)),\n        fetchDashboards: () => dispatch(tFetchDashboards()),\n        setControlBarRows: () => dispatch(tSetControlBarRows()),\n        setDimensions: d2 => dispatch(tSetDimensions(d2)),\n    };\n};\n\nexport default connect(\n    null,\n    mapDispatchToProps\n)(App);\n","import { RECEIVED_USER } from '../reducers/user';\n\nexport const acReceivedUser = value => ({\n    type: RECEIVED_USER,\n    value,\n});\n","//------------------------------------------------------------------------------\n// <auto-generated>\n// This code was generated by d2-i18n-generate.\n//\n// Changes to this file may cause incorrect behavior and will be lost if\n// the code is regenerated.\n// </auto-generated>\n//------------------------------------------------------------------------------\nimport i18n from '@dhis2/d2-i18n';\nimport moment from 'moment';\nimport 'moment/locale/ar';\nimport 'moment/locale/es';\nimport 'moment/locale/fr';\nimport 'moment/locale/lo';\nimport 'moment/locale/pt';\nimport 'moment/locale/ru';\nimport 'moment/locale/sv';\nimport 'moment/locale/tg';\nimport 'moment/locale/uk';\nimport 'moment/locale/ur';\nimport 'moment/locale/vi';\nimport 'moment/locale/zh-cn';\n\nimport arTranslations from './ar/translations.json';\nimport daTranslations from './da/translations.json';\nimport enTranslations from './en/translations.json';\nimport esTranslations from './es/translations.json';\nimport frTranslations from './fr/translations.json';\nimport idTranslations from './id/translations.json';\nimport kmTranslations from './km/translations.json';\nimport loTranslations from './lo/translations.json';\nimport myTranslations from './my/translations.json';\nimport prsTranslations from './prs/translations.json';\nimport psTranslations from './ps/translations.json';\nimport ptTranslations from './pt/translations.json';\nimport pt_BRTranslations from './pt_BR/translations.json';\nimport ruTranslations from './ru/translations.json';\nimport svTranslations from './sv/translations.json';\nimport tetTranslations from './tet/translations.json';\nimport tgTranslations from './tg/translations.json';\nimport ukTranslations from './uk/translations.json';\nimport urTranslations from './ur/translations.json';\nimport viTranslations from './vi/translations.json';\nimport zhTranslations from './zh/translations.json';\nimport zh_CNTranslations from './zh_CN/translations.json';\n\nconst namespace = 'dashboards-app';\nmoment.locale('en');\n\ni18n.addResources('ar', namespace, arTranslations);\ni18n.addResources('da', namespace, daTranslations);\ni18n.addResources('en', namespace, enTranslations);\ni18n.addResources('es', namespace, esTranslations);\ni18n.addResources('fr', namespace, frTranslations);\ni18n.addResources('id', namespace, idTranslations);\ni18n.addResources('km', namespace, kmTranslations);\ni18n.addResources('lo', namespace, loTranslations);\ni18n.addResources('my', namespace, myTranslations);\ni18n.addResources('prs', namespace, prsTranslations);\ni18n.addResources('ps', namespace, psTranslations);\ni18n.addResources('pt', namespace, ptTranslations);\ni18n.addResources('pt_BR', namespace, pt_BRTranslations);\ni18n.addResources('ru', namespace, ruTranslations);\ni18n.addResources('sv', namespace, svTranslations);\ni18n.addResources('tet', namespace, tetTranslations);\ni18n.addResources('tg', namespace, tgTranslations);\ni18n.addResources('uk', namespace, ukTranslations);\ni18n.addResources('ur', namespace, urTranslations);\ni18n.addResources('vi', namespace, viTranslations);\ni18n.addResources('zh', namespace, zhTranslations);\ni18n.addResources('zh_CN', namespace, zh_CNTranslations);\n\ni18n.setDefaultNamespace(namespace);\ni18n.changeLanguage('en');\n\nexport default i18n;\n","/** @module reducers/selected */\nimport { validateReducer } from '../modules/util';\n\nexport const SET_STYLE = 'SET_STYLE';\n\nexport const DEFAULT_STATE_STYLE = 'LIST';\n\n/**\n * Reducer functions that computes and returns the new state based on the given action\n * @function\n * @param {Object} state The current state\n * @param {Object} action The action to be evaluated\n */\nconst style = (state = DEFAULT_STATE_STYLE, action) => {\n    switch (action.type) {\n        case SET_STYLE:\n            return validateReducer(action.value, DEFAULT_STATE_STYLE);\n        default:\n            return state;\n    }\n};\n\nexport default style;\n\n/**\n * Selectors that point to specific props in the state object\n * @function\n * @param {Object} state\n * @returns {Object}\n */\nexport const sGetStyleRoot = state => state.style;\n","import { combineReducers } from 'redux';\nimport arraySort from 'd2-utilizr/lib/arraySort';\n\nimport dashboards, { sGetDashboardsRoot } from './dashboards';\nimport selected from './selected';\nimport dashboardsFilter, {\n    ownerData,\n    sGetFilterName,\n    sGetFilterOrder,\n    sGetFilterOwner,\n} from './dashboardsFilter';\nimport controlBar from './controlBar';\nimport visualizations from './visualizations';\nimport editDashboard from './editDashboard';\nimport messages from './messages';\nimport user from './user';\nimport snackbar from './snackbar';\nimport itemFilters from './itemFilters';\nimport editItemFilters from './editItemFilters';\nimport style from './style';\nimport dimensions from './dimensions';\nimport settings from './settings';\nimport activeModalDimension from './activeModalDimension';\n\nconst USER = 'system';\n\n// Reducers\n\nexport default combineReducers({\n    dashboards,\n    selected,\n    dashboardsFilter,\n    controlBar,\n    visualizations,\n    messages,\n    user,\n    editDashboard,\n    itemFilters,\n    editItemFilters,\n    style,\n    snackbar,\n    dimensions,\n    settings,\n    activeModalDimension,\n});\n\n// Map constants to data\nconst mapConstToData = {\n    NAME: 'name',\n    ITEMS: 'numberOfItems',\n    CREATED: 'created',\n    OWNER: 'owner',\n};\n\n// Selectors\n\n// Filter dashboards by name\nexport const sFilterDashboardsByName = (dashboards, filter) =>\n    dashboards.filter(d =>\n        d.displayName.toLowerCase().includes(filter.toLowerCase())\n    );\n\n// Filter dashboards by owner, TODO FIXME\nexport const sFilterDashboardsByOwner = (dashboards, filter) => {\n    const ME = ownerData[1]; // TODO\n    const OTHERS = ownerData[2]; // TODO\n\n    switch (filter) {\n        case ME:\n            return dashboards.filter(d => d.owner === USER);\n        case OTHERS:\n            return dashboards.filter(d => d.owner !== USER);\n        default:\n            return dashboards;\n    }\n};\n\n// Filter dashboards by order\nexport const sFilterDashboardsByOrder = (dashboards, filter) => {\n    const filterValues = filter.split(':');\n\n    const key = filterValues[0];\n    const direction = filterValues[1];\n\n    return arraySort(dashboards, direction, mapConstToData[key]);\n};\n\n// Selectors dependency level 2\n\n// Get filtered dashboards\nexport const sGetFilteredDashboards = state => {\n    const dashboards = sGetDashboardsRoot(state);\n\n    const nameFilter = sGetFilterName(state);\n    const ownerFilter = sGetFilterOwner(state);\n    const orderFilter = sGetFilterOrder(state);\n\n    return sFilterDashboardsByOrder(\n        sFilterDashboardsByName(\n            sFilterDashboardsByOwner(dashboards, ownerFilter),\n            nameFilter\n        ),\n        orderFilter\n    );\n};\n","import { createStore, applyMiddleware, compose } from 'redux';\nimport { createLogger } from 'redux-logger';\nimport thunk from 'redux-thunk';\nimport reducer from './reducers';\n\nconst configureStore = () => {\n    const middleware = [thunk];\n\n    // Enable Redux devtools if extension is installed instead of redux-logger\n    const composeEnhancers =\n        window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\n    if (\n        !window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ &&\n        process.env.NODE_ENV !== 'production'\n    ) {\n        middleware.push(createLogger());\n    }\n\n    return createStore(\n        reducer,\n        composeEnhancers(applyMiddleware(...middleware))\n    );\n};\n\nexport default configureStore;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport { MuiThemeProvider, createMuiTheme } from '@material-ui/core/styles';\nimport { init as d2Init, config, getManifest, getUserSettings } from 'd2';\nimport dhis2theme from '@dhis2/d2-ui-core/theme/mui3.theme';\n\nimport { Provider as RuntimeProvider } from '@dhis2/app-runtime';\nimport { CssReset } from '@dhis2/ui-core';\n\nimport App from './components/App';\nimport './index.css';\nimport i18n from './locales';\nimport configureStore from './configureStore';\n\nconst muiTheme = () => createMuiTheme(dhis2theme);\n\nconst configI18n = userSettings => {\n    const uiLocale = userSettings.keyUiLocale;\n\n    if (uiLocale && uiLocale !== 'en') {\n        config.i18n.sources.add(`./i18n/i18n_module_${uiLocale}.properties`);\n    }\n\n    config.i18n.sources.add('./i18n/i18n_module_en.properties');\n    i18n.changeLanguage(uiLocale);\n};\n\nconst init = async () => {\n    const manifest = await getManifest('./manifest.webapp');\n\n    // log app info\n    console.info(\n        `Dashboards app, v${manifest.version}, ${\n            manifest.manifest_generated_at\n        }`\n    );\n\n    const isProd = process.env.NODE_ENV === 'production';\n\n    if (\n        !isProd &&\n        (!process.env.REACT_APP_DHIS2_BASE_URL ||\n            !process.env.REACT_APP_DHIS2_AUTHORIZATION)\n    ) {\n        throw new Error(\n            'Missing env variables REACT_APP_DHIS2_BASE_URL and REACT_APP_DHIS2_AUTHORIZATION'\n        );\n    }\n\n    // api config\n    const baseUrl = isProd\n        ? manifest.activities.dhis.href\n        : process.env.REACT_APP_DHIS2_BASE_URL;\n    const authorization = process.env.REACT_APP_DHIS2_AUTHORIZATION;\n\n    config.baseUrl = `${baseUrl}/api/${manifest.dhis2.apiVersion}`;\n    config.headers = isProd ? null : { Authorization: authorization };\n    config.schemas = [\n        'chart',\n        'map',\n        'report',\n        'reportTable',\n        'eventChart',\n        'eventReport',\n        'dashboard',\n        'organisationUnit',\n        'userGroup',\n    ];\n\n    getUserSettings()\n        .then(configI18n)\n        .then(() => d2Init(config))\n        .then(initializedD2 => {\n            ReactDOM.render(\n                <RuntimeProvider\n                    config={{\n                        baseUrl: baseUrl,\n                        apiVersion: manifest.dhis2.apiVersion,\n                    }}\n                >\n                    <CssReset />\n                    <Provider store={configureStore()}>\n                        <MuiThemeProvider theme={muiTheme()}>\n                            <App baseUrl={baseUrl} d2={initializedD2} />\n                        </MuiThemeProvider>\n                    </Provider>\n                </RuntimeProvider>,\n                document.getElementById('root')\n            );\n        });\n};\n\ninit();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"leftControls\":\"DashboardsBar_leftControls__2kr14\",\"rightControls\":\"DashboardsBar_rightControls__2l1lT\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"link\":\"DashboardItemChip_link__1b7Z_\",\"icon\":\"DashboardItemChip_icon__1zOaG\",\"selected\":\"DashboardItemChip_selected__36Qak\",\"unselected\":\"DashboardItemChip_unselected__3dm-X\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"menuItem\":\"ContentMenuItem_menuItem__2DIcB\",\"launchLink\":\"ContentMenuItem_launchLink__MRANR\",\"label\":\"ContentMenuItem_label__2pIfq\",\"buttonInsert\":\"ContentMenuItem_buttonInsert__1GlZy\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"itemWrap\":\"ItemHeader_itemWrap__3gJiQ\",\"itemHeaderWrap\":\"ItemHeader_itemHeaderWrap__xEKwZ\",\"itemTitle\":\"ItemHeader_itemTitle__3LmXp\",\"itemActionsWrap\":\"ItemHeader_itemActionsWrap__1U5Ex\"};","import isObject from 'lodash/isObject';\n\n// validation\nexport function orNull(param) {\n    return param === undefined ? null : param;\n}\n\nexport function orArray(param) {\n    return Array.isArray(param) ? param : [];\n}\n\nexport function orObject(param) {\n    return isObject(param) ? param : {};\n}\n\n// array\nexport function arrayGetById(array, id) {\n    return array.find(item => item.id === id);\n}\n\n// object\nexport function arrayToIdMap(array) {\n    return array.reduce((obj, item) => {\n        obj[item.id] = item;\n        return obj;\n    }, {});\n}\n\n// date\nexport function getDate() {\n    const y = Math.floor(Math.random() * 3) + 2015;\n    const M = Math.floor(Math.random() * 12) + 1;\n    const d = Math.floor(Math.random() * 28) + 1;\n    // const h = Math.floor(Math.random() * 23) + 1;\n    // const m = Math.floor(Math.random() * 59) + 1;\n    // const s = Math.floor(Math.random() * 59) + 1;\n\n    return new Date(`${y}-${M}-${d}`)\n        .toJSON()\n        .replace('T', ' ')\n        .substr(0, 10);\n}\n\nexport const formatDate = (value, uiLocale) => {\n    if (typeof global.Intl !== 'undefined' && Intl.DateTimeFormat) {\n        const locale = uiLocale || 'en';\n        return new Intl.DateTimeFormat(locale, {\n            year: 'numeric',\n            month: 'short',\n            day: 'numeric',\n        }).format(new Date(value));\n    }\n\n    return value.substr(0, 19).replace('T', ' ');\n};\n\n/**\n * Sorts an array of objects based on provided date property\n *\n * @param {Array} items Array of objects\n * @param {String} dateProp Name of the date property to be used for sorting\n * @param {Boolean} ascending Whether to sort ascending or descending\n */\nexport const sortByDate = (items, dateProp, ascending = true) => {\n    const values = Object.values(items);\n\n    values.sort((a, b) => {\n        const aDate = new Date(a[dateProp]);\n        const bDate = new Date(b[dateProp]);\n\n        return ascending ? aDate - bDate : bDate - aDate;\n    });\n\n    return values;\n};\n\n// reducer validator\nexport const validateReducer = (value, defaultValue) =>\n    value === undefined || value === null ? defaultValue : value;\n\nexport const getBaseUrl = d2 => {\n    const api = d2.Api.getApi();\n    const idx = api.baseUrl.indexOf('/api');\n    return idx > -1 ? api.baseUrl.slice(0, idx) : api.baseUrl;\n};\n\nexport const getWithoutId = object => ({\n    ...object,\n    id: undefined,\n});\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"ControlBar_root__3LaTt\",\"content\":\"ControlBar_content__1r98-\",\"draghandle\":\"ControlBar_draghandle__1VWa0\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"FatalErrorBoundary_container__x6zhd\",\"icon\":\"FatalErrorBoundary_icon__2XjC2\",\"message\":\"FatalErrorBoundary_message__2p9y8\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"textDiv\":\"Item_textDiv__2b-T5\",\"loadingCover\":\"Item_loadingCover__fhJgG\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"showMore\":\"ShowMoreButton_showMore__rWqw9\",\"disabled\":\"ShowMoreButton_disabled__2oX7G\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"ClearButton_button__2yjcV\",\"icon\":\"ClearButton_icon__1fqj8\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"progress\":\"LoadingMask_progress__NsmGX\",\"outer\":\"LoadingMask_outer__2Nb9y\"};","import isObject from 'lodash/isObject';\nimport { VIS_TYPE_COLUMN, VIS_TYPE_PIVOT_TABLE } from '@dhis2/analytics';\nimport { apiFetchFavorite, getMapFields } from '../../../api/metadata';\nimport {\n    REPORT_TABLE,\n    CHART,\n    MAP,\n    EVENT_REPORT,\n    EVENT_CHART,\n    itemTypeMap,\n} from '../../../modules/itemTypes';\nimport { getBaseUrl, getWithoutId } from '../../../modules/util';\nimport { getGridItemDomId } from '../../ItemGrid/gridUtil';\n\n//external plugins\nconst itemTypeToExternalPlugin = {\n    [MAP]: 'mapPlugin',\n    [EVENT_REPORT]: 'eventReportPlugin',\n    [EVENT_CHART]: 'eventChartPlugin',\n};\nconst hasIntegratedPlugin = type => [CHART, REPORT_TABLE].includes(type);\n\nconst getPlugin = type => {\n    if (hasIntegratedPlugin(type)) {\n        return true;\n    }\n    const pluginName = itemTypeToExternalPlugin[type];\n\n    return global[pluginName];\n};\n\nexport const THEMATIC_LAYER = 'thematic';\n\nexport const pluginIsAvailable = (item = {}, visualization = {}) => {\n    const type = visualization.activeType || item.type;\n\n    return !!getPlugin(type);\n};\n\nexport const extractFavorite = item => {\n    if (!isObject(item)) {\n        return null;\n    }\n\n    const propName = itemTypeMap[item.type].propName;\n\n    return (\n        item[propName] ||\n        (item.reportTable ||\n            item.chart ||\n            item.map ||\n            item.eventReport ||\n            item.eventChart ||\n            {})\n    );\n};\n\nexport const extractMapView = map =>\n    map.mapViews && map.mapViews.find(mv => mv.layer.includes(THEMATIC_LAYER));\n\nexport const loadPlugin = (plugin, config, credentials) => {\n    if (!(plugin && plugin.load)) {\n        return;\n    }\n\n    plugin.url = credentials.baseUrl;\n    plugin.loadingIndicator = true;\n    plugin.dashboard = true;\n    if (credentials.auth) {\n        plugin.auth = credentials.auth;\n    }\n    plugin.load(config);\n};\n\nexport const getId = item => extractFavorite(item).id;\nexport const getName = item => extractFavorite(item).name;\nexport const getDescription = item => extractFavorite(item).description;\nexport const getLink = (item, d2) => {\n    const baseUrl = getBaseUrl(d2);\n    const appUrl = itemTypeMap[item.type].appUrl(getId(item));\n\n    return `${baseUrl}/${appUrl}`;\n};\n\nexport const load = async (\n    item,\n    visualization,\n    { credentials, activeType, options = {} }\n) => {\n    const config = {\n        ...visualization,\n        ...options,\n        el: getGridItemDomId(item.id),\n    };\n\n    const type = activeType || item.type;\n    const plugin = getPlugin(type);\n\n    loadPlugin(plugin, config, credentials);\n};\n\nexport const fetch = async item => {\n    const fetchedFavorite = await apiFetchFavorite(getId(item), item.type, {\n        fields: item.type === MAP ? getMapFields() : null,\n    });\n\n    return fetchedFavorite;\n};\n\nexport const resize = item => {\n    const plugin = getPlugin(item.type);\n\n    if (plugin && plugin.resize) {\n        plugin.resize(getGridItemDomId(item.id));\n    }\n};\n\nexport const unmount = (item, activeType) => {\n    const plugin = getPlugin(activeType);\n\n    if (plugin && plugin.unmount) {\n        plugin.unmount(getGridItemDomId(item.id));\n    }\n};\n\nexport const getVisualizationConfig = (\n    visualization,\n    originalType,\n    activeType\n) => {\n    if (originalType === MAP && originalType !== activeType) {\n        const extractedMapView = extractMapView(visualization);\n\n        if (extractedMapView === undefined) {\n            return null;\n        }\n\n        return getWithoutId({\n            ...visualization,\n            ...extractedMapView,\n            mapViews: undefined,\n            type: activeType === CHART ? VIS_TYPE_COLUMN : VIS_TYPE_PIVOT_TABLE,\n        });\n    } else if (originalType === REPORT_TABLE && activeType === CHART) {\n        return getWithoutId({ ...visualization, type: VIS_TYPE_COLUMN });\n    } else if (originalType === CHART && activeType === REPORT_TABLE) {\n        return getWithoutId({\n            ...visualization,\n            type: VIS_TYPE_PIVOT_TABLE,\n        });\n    }\n\n    return getWithoutId(visualization);\n};\n","import isFunction from 'd2-utilizr/lib/isFunction';\n\nimport { orObject } from '../../modules/util';\n\n// Dimensions for the react-grid-layout\n\nexport const GRID_COMPACT_TYPE = 'vertical'; // vertical | horizonal | null\nexport const GRID_ROW_HEIGHT = 10;\nconst GRID_COLUMN_WIDTH_PX = 20;\nconst GRID_LAYOUT = 'FLEXIBLE'; // FIXED | FLEXIBLE\nexport const MARGIN = [10, 10];\n\nexport const NEW_ITEM_SHAPE = { x: 0, y: 0, w: 20, h: 29 };\n\n// Dimensions for getShape\n\nconst NUMBER_OF_ITEM_COLS = 2;\nconst GRID_COLUMNS = 60;\n\nexport const getGridColumns = () => {\n    switch (GRID_LAYOUT) {\n        case 'FLEXIBLE':\n            return GRID_COLUMNS;\n        case 'FIXED':\n            return Math.floor((window.innerWidth - 20) / GRID_COLUMN_WIDTH_PX);\n        default:\n            return GRID_COLUMNS;\n    }\n};\n\n// isNonNegativeInteger\n\nconst isNonNegativeInteger = x => Number.isInteger(x) && x >= 0;\n\n// Does the item have all the shape properties?\n\nexport const hasShape = item =>\n    isNonNegativeInteger(item.x) &&\n    isNonNegativeInteger(item.y) &&\n    isNonNegativeInteger(item.w) &&\n    isNonNegativeInteger(item.h);\n\n// returns a rectangular grid block dimensioned with x, y, w, h in grid units.\n// based on a grid with 3 items across\nexport const getShape = i => {\n    if (!isNonNegativeInteger(i)) {\n        throw new Error('Invalid grid block number');\n    }\n\n    const col = i % NUMBER_OF_ITEM_COLS;\n    const row = Math.floor(i / NUMBER_OF_ITEM_COLS);\n    const itemWidth = Math.floor((GRID_COLUMNS - 1) / NUMBER_OF_ITEM_COLS);\n    const itemHeight = GRID_ROW_HEIGHT * 2;\n\n    return {\n        x: col * itemWidth,\n        y: row * itemHeight,\n        w: itemWidth,\n        h: itemHeight,\n    };\n};\n\nexport const getGridItemProperties = itemId => {\n    return {\n        i: itemId,\n        minH: 4, // minimum height for item\n    };\n};\n\n/**\n * Calculates the grid item's original height in pixels based\n * on the height in grid units. This calculation\n * is copied directly from react-grid-layout GridItem.js (calcPosition)\n *\n * @param {Object} item item containing shape (x, y, w, h)\n */\nconst getOriginalHeight = item => {\n    const originalHeight = Math.round(\n        GRID_ROW_HEIGHT * item.h + Math.max(0, item.h - 1) * MARGIN[1]\n    );\n\n    return { originalHeight };\n};\n\n/**\n * Returns an array of items containing the x, y, w, h dimensions\n * and the item's originalheight in pixels\n * @function\n * @param {Array} items\n * @returns {Array}\n */\n\nexport const withShape = items =>\n    items.map((item, index) => {\n        const itemWithShape = hasShape(item)\n            ? item\n            : Object.assign({}, item, getShape(index));\n\n        return Object.assign(\n            {},\n            itemWithShape,\n            getOriginalHeight(itemWithShape)\n        );\n    });\n\nexport const getGridItemDomId = id => `item-${id}`;\n\nexport function onItemResize(id) {\n    const el = orObject(document.querySelector(`#${getGridItemDomId(id)}`));\n    if (isFunction(el.setViewportSize))\n        setTimeout(\n            () => el.setViewportSize(el.clientWidth - 5, el.clientHeight - 5),\n            10\n        );\n}\n"],"sourceRoot":""}
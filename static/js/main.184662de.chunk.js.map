{"version":3,"sources":["modules/itemTypes.js","api/metadata.js","modules/util.js","components/Item/ListItem/Item.module.css","reducers/user.js","reducers/dashboards.js","reducers/editDashboard.js","reducers/editItemFilters.js","reducers/selected.js","actions/editItemFilters.js","reducers/itemFilters.js","actions/itemFilters.js","reducers/messages.js","api/messages.js","reducers/snackbar.js","actions/snackbar.js","reducers/visualizations.js","actions/visualizations.js","api/index.js","api/dashboards.js","components/SnackbarMessage/SnackbarMessage.js","actions/selected.js","api/localStorage.js","components/Item/MessagesItem/actions.js","api/editDashboard.js","actions/editDashboard.js","actions/dashboards.js","reducers/controlBar.js","api/controlBar.js","actions/controlBar.js","reducers/dimensions.js","reducers/settings.js","actions/dimensions.js","components/ControlBar/ShowMoreButton.js","components/ControlBar/controlBarDimensions.js","components/ControlBar/ControlBar.js","icons/Star.js","api/dataStatistics.js","components/ControlBar/DashboardItemChip.js","icons/AddCircle.js","icons/Clear.js","components/ControlBar/ClearButton.js","reducers/dashboardsFilter.js","components/ControlBar/Filter.js","components/ControlBar/DashboardsBar.js","actions/dashboardsFilter.js","components/Dashboard/DashboardVerticalOffset.js","components/ItemSelector/HeaderMenuItem.js","icons/Launch.js","components/ItemSelector/ContentMenuItem.js","components/ItemSelector/selectableItems.js","components/ItemSelector/CategorizedMenuGroup.js","components/ItemSelector/actions.js","components/ItemSelector/SinglesMenuGroup.js","components/ItemSelector/ItemSelector.js","components/TitleBar/EditTitleBar.js","components/ItemFilter/FilterDialog.js","reducers/activeModalDimension.js","actions/activeModalDimension.js","components/ItemFilter/FilterSelector.js","components/TitleBar/Info.js","components/TitleBar/ViewTitleBar.js","components/TitleBar/TitleBar.js","components/Item/VisualizationItem/DefaultPlugin.js","components/Item/VisualizationItem/assets/icons.js","components/Item/VisualizationItem/FatalErrorBoundary.js","components/Item/DeleteItemButton.js","components/Item/ItemHeader.js","components/Item/VisualizationItem/ItemHeaderButtons.js","components/Item/VisualizationItem/ItemFooter.js","modules/memoizeOne.js","components/Item/VisualizationItem/LoadingMask.js","components/Item/VisualizationItem/Item.js","widgets/Line.js","components/Item/MessagesItem/Item.js","components/Item/NotSupportedItem/Item.js","icons/Description.js","icons/Delete.js","components/Item/ListItem/Item.js","components/Item/ListItem/actions.js","components/Item/TextItem/Item.js","components/Item/AppItem/Item.js","components/Item/SpacerItem/Item.js","components/Item/Item.js","widgets/NoContentMessage.js","components/Item/ProgressiveLoadingContainer.js","components/ItemGrid/ItemGrid.js","components/FilterBar/FilterBadge.js","components/FilterBar/FilterBar.js","components/Dashboard/DashboardContent.js","components/Dashboard/ViewDashboard.js","components/ControlBar/ConfirmDeleteDialog.js","components/ControlBar/EditBar.js","components/Dashboard/EditDashboard.js","components/Dashboard/NewDashboard.js","components/Dashboard/Dashboard.js","components/Dashboard/dashboardModes.js","components/App.js","actions/user.js","locales/index.js","reducers/style.js","reducers/index.js","configureStore.js","index.js","components/ControlBar/styles/DashboardsBar.module.css","components/ItemSelector/styles/ContentMenuItem.module.css","components/Item/styles/ItemHeader.module.css","components/ControlBar/styles/ControlBar.module.css","components/Item/VisualizationItem/styles/FatalErrorBoundary.module.css","components/ControlBar/styles/ClearButton.module.css","components/Item/VisualizationItem/plugin.js","components/ItemGrid/gridUtil.js","components/ItemSelector/styles/CategorizedMenuGroup.module.css","components/Item/styles/DeleteItemButton.module.css"],"names":["VISUALIZATION","REPORT_TABLE","CHART","MAP","EVENT_REPORT","EVENT_CHART","APP","REPORTS","RESOURCES","USERS","MESSAGES","TEXT","SPACER","spacerContent","emptyTextItemContent","isSpacerType","item","type","text","isTextType","isVisualizationType","itemTypeMap","hasMapView","itemType","domainType","isTrackerDomainType","getDefaultItemCount","defaultItemCount","getAppName","appName","_itemTypeMap","Object","_home_travis_build_dhis2_dashboards_app_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_defineProperty__WEBPACK_IMPORTED_MODULE_0__","id","endPointName","propName","pluralTitle","i18n","t","appUrl","concat","getEndPointName","getItemUrl","d2","url","launchUrl","getBaseUrl","getItemIcon","TableIcon","ChartIcon","MapIcon","ExtensionIcon","DescriptionIcon","PersonIcon","FontDownloadIcon","EmailIcon","CropFreeIcon","NotInterestedIcon","getIdNameFields","rename","arguments","length","undefined","getDimensionFields","_ref2","withItems","arrayClean","join","getAxesFields","_ref3","getFavoriteFields","_ref4","withDimensions","withOptions","getFavoritesFields","_ref5","_home_travis_build_dhis2_dashboards_app_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_toConsumableArray__WEBPACK_IMPORTED_MODULE_0__","getListItemFields","getMapFields","apiFetchFavorite","_ref6","fields","getInstance","then","Api","getApi","get","orArray","param","Array","isArray","orObject","isObject","arrayToIdMap","array","reduce","obj","formatDate","value","uiLocale","global","Intl","DateTimeFormat","locale","year","month","day","format","Date","substr","replace","validateReducer","defaultValue","api","idx","baseUrl","indexOf","slice","getWithoutId","object","_home_travis_build_dhis2_dashboards_app_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectSpread__WEBPACK_IMPORTED_MODULE_0__","module","exports","list","itemicon","link","deleteicon","deletebutton","DEFAULT_STATE_USER","username","isSuperuser","sGetUserUsername","state","user","DEFAULT_STATE_DASHBOARDS","byId","items","updateDashboardProp","_ref","dashboardId","prop","objectSpread","defineProperty","sGetDashboardsRoot","dashboards","sGetDashboardById","sDashboardsIsFetching","sGetAllDashboards","sGetDashboardItems","sGetStarredDashboards","values","filter","dashboard","starred","sGetUnstarredDashboards","sGetDashboardsSortedByStarred","toConsumableArray","arraySort","getCustomDashboards","data","arrayFrom","map","d","name","displayName","description","displayDescription","favorite","owner","created","split","lastUpdated","access","numberOfItems","dashboardItems","reportTable","chart","DEFAULT_STATE_EDIT_DASHBOARD","NEW_DASHBOARD_STATE","sGetEditDashboardRoot","editDashboard","sGetIsEditing","isEmpty","sGetEditDashboardItems","DEFAULT_STATE_EDIT_ITEM_FILTERS","sGetEditItemFiltersRoot","editItemFilters","combineReducers","action","isLoading","showDescription","sGetSelectedRoot","selected","sGetSelectedId","sGetSelectedIsLoading","sGetSelectedShowDescription","acRemoveEditItemFilter","DEFAULT_STATE_ITEM_FILTERS","sGetItemFiltersRoot","itemFilters","sGetFiltersKeys","keys","acRemoveItemFilter","sGetMessagesRoot","messages","getMessages","catch","error","console","log","DEFAULT_STATE_SNACKBAR","message","duration","open","acCloseSnackbar","DEFAULT_STATE_VISUALIZATIONS","p","sGetVisualization","visualizations","sGetVisualizationsRoot","acAddVisualization","onError","getDashboardItemsFields","withFavorite","getDashboardFields","apiFetchDashboard","models","apiStarDashboard","isStarred","post","delete","apiDeleteDashboard","loadingDashboardMsg","SnackbarMessageContent","react_default","a","createElement","style","fontWeight","connect","_sGetSnackbar","snackbar","sGetSnackbar","snackbarOpen","snackbarMessage","snackbarDuration","onCloseSnackbar","props","Snackbar_default","zIndex","SnackbarMessage_SnackbarMessageContent","autoHideDuration","onClose","acSetSelectedId","acSetSelectedIsLoading","tLoadDashboard","asyncToGenerator","regenerator_default","mark","_callee","dispatch","dash","wrap","_context","prev","next","sent","acAppendDashboards","abrupt","Promise","resolve","t0","stop","_x","apply","this","tSetSelectedDashboardById","_callee2","getState","snackbarTimeout","onSuccess","_context2","setTimeout","dashboardName","customDashboard","acSetDashboardItems","withShape","localStorage","setItem","forEach","extractFavorite","messageConversations","filters","clearTimeout","_x2","_x3","saveDashboard","assign","width","w","height","h","save","msg","response","uid","updateDashboard","postDashboard","create","acAddDashboardItem","itemPropName","generateUid","content","NEW_ITEM_SHAPE","acUpdateDashboardItem","acRemoveDashboardItem","acSetDashboardStarred","tFetchDashboards","collection","paging","toArray","userRows","sGetControlBarUserRows","controlBar","sGetControlBarRoot","KEY","hasNamespace","currentUser","dataStore","has","getNamespace","apiGetControlBarRows","_callee3","namespace","_context3","t1","t2","find","key","apiPostControlBarRows","_callee4","rows","_context4","set","_x4","_x5","acSetControlBarUserRows","DEFAULT_DIMENSIONS","getDimensionById","DIMENSION_ID_PERIOD","DIMENSION_ID_ORGUNIT","sGetDimensions","dimensions","DEFAULT_SETTINGS","keyDateFormat","keyAnalysisRelativePeriod","keyAnalysisDigitGroupSeparator","displayNameProperty","rootOrganisationUnit","sGetSettings","settings","sGetSettingsDisplayNameProperty","acSetDimensions","styles","showMore","color","colors","grey700","cursor","fontSize","paddingTop","&:hover","textDecoration","disabled","grey500","withStyles","onClick","isMaxHeight","classes","textAlign","className","MIN_ROW_COUNT","getRowsHeight","getNumRowsFromHeight","Math","floor","FIRST_ROW_PADDING_HEIGHT","getTopOffset","getControlBarHeight","ControlBar","_this","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","onStartDrag","setState","dragging","window","addEventListener","onDrag","onEndDrag","event","preventDefault","stopPropagation","newHeight","clientY","onChangeHeight","requestAnimationFrame","removeEventListener","draghandle","onMouseDown","max","rootStyle","top","backgroundColor","editMode","yellow050","white","paddingBottom","transition","root","children","renderDragHandle","React","Component","defaultProps","StarIcon","xmlns","viewBox","fill","apiPostDataStatistics","eventType","chip","margin","grey600","display","verticalAlign","icon","marginTop","unselected","label","chipProps","selectedState","Star","Link","to","debounce","lib","AddCircleIcon","teal600","ClearIcon","grey800","ClearButton","onClear","button","Clear","ownerData","DEFAULT_STATE_DASHBOARDS_FILTER_NAME","DEFAULT_STATE_DASHBOARDS_FILTER_OWNER","order","sGetDashboardsFilterRoot","dashboardsFilter","sGetFilterName","KEYCODE_ENTER","KEYCODE_ESCAPE","filterField","searchIcon","Filter","_Component","setFilterValue","onChangeName","target","handleKeyUp","keyCode","onKeypressEnter","inherits","createClass","nextProps","_this$props","startAdornment","InputAdornment_default","position","Search_default","endAdornment","ControlBar_ClearButton","Input_default","placeholder","onChange","onKeyUp","Function","prototype","MAX_ROW_COUNT","DashboardsBar","_getPrototypeOf2","_len","args","_key","setInitialDashboardState","adjustedHeight","newRows","newRowCount","min","onToggleMaxHeight","onSelectDashboard","history","push","selectedId","onChangeFilterName","rowCount","controlBarHeight","contentWrapperStyle","padding","overflowY","components_ControlBar_ControlBar","leftControls","marginRight","AddCircle","ControlBar_Filter","ControlBar_DashboardItemChip","ControlBar_ShowMoreButton","mapDispatchToProps","withRouter","stateProps","dispatchProps","ownProps","displayDashboards","toLowerCase","includes","HeaderMenuItem","title","dense","LaunchIcon","LaunchLink","e","launchLink","rel","href","Launch","InsertButton","buttonInsert","ContentMenuItem","onInsert","visType","ItemIcon","renderedItemIcon","visTypeIcons","menuItem","ContentMenuItem_LaunchLink","ContentMenuItem_InsertButton","singleItems","header","categorizedItems","listItemTypes","CategorizedMenuGroup","addItem","tAddListItemContent","newItem","toggleSeeMore","seeMore","onChangeItemsLimit","_this2","_this$props2","hasMore","react","ItemSelector_HeaderMenuItem","itemUrl","context","ItemSelector_ContentMenuItem","showMoreButton","contextTypes","PropTypes","isRequired","dashboardItem","listItemType","dashboardItemIndex","findIndex","category","addToDashboard","ItemSearchField","onFocus","ItemSelector","closeList","openList","_","fetchItems","anchorEl","currentTarget","setFilter","getCategorizedMenuGroups","itemCount","allItems","maxOptions","ItemSelector_CategorizedMenuGroup","getSinglesMenuGroups","ItemSelector_SinglesMenuGroup","getMenuGroups","queryString","add","Set","ItemSelector_ItemSearchField","Popover_default","anchorOrigin","horizontal","vertical","transformOrigin","PaperProps","disableAutoFocus","disableRestoreFocus","EditTitleBar","onChangeTitle","onChangeDescription","section","titleDescription","itemSelector","components_ItemSelector_ItemSelector","selectedDashboard","justifyContent","flex","clear","underline","&::before","borderBottom","&:hover::before","input","borderRadius","peId","ouId","FilterDialog","onConfirm","dimension","selectedItems","dialogId","commonProps","onSelect","onDeselect","onReorder","build","selectedPeriods","ouItems","dialogTitle","Dialog_default","maxWidth","disableEnforceFocus","dialogContent","DialogActions_default","kind","DEFAULT_STATE_ACTIVE_MODAL_DIMENSION","sGetActiveModalDimension","activeModalDimension","acSetActiveModalDimension","FilterSelector","openPanel","closePanel","closeDialog","clearActiveModalDimension","selectDimension","setActiveModalDimension","onSelectItems","dimensionId","setEditItemFilters","onDeselectItems","itemIdsToRemove","newList","removeEditItemFilter","onReorderItems","itemIds","oldList","reorderedList","saveFilter","filterItems","addItemFilter","removeItemFilter","theme","selectedDimensions","ArrowDropDown_default","Boolean","fontFamily","typography","onDimensionClick","selectedIds","ItemFilter_FilterDialog","withTheme","Info","show","toggle","InfoOutlined_default","NO_DESCRIPTION","actions","alignItems","marginLeft","starIcon","textButton","minWidth","editLink","titleBar","titleBarIcon","ViewTitleBar","toggleSharingDialog","sharingDialogIsOpen","onStarClick","onInfoClick","titleStyle","userSelect","StarBorder","TitleBar_Info","update","manage","ItemFilter_FilterSelector","d2_ui_sharing_dialog_default","onRequestClose","tStarDashboard","black","TitleBar","edit","TitleBar_EditTitleBar","TitleBar_ViewTitleBar","DefaultPlugin","pluginCredentials","shouldPluginReload","prevProps","reloadAllowed","filtersChanged","vis","visualization","prevVis","visChanged","activeType","reloadPlugin","pluginManager","currentVis","useActiveType","credentials","getActiveType","auth","defaultHeaders","Authorization","getGridItemDomId","textDiv","ThreeDots","SpeechBubble","fillRule","transform","Warning","FatalErrorBoundary","errorFound","info","container","icons_Warning","DeleteItemButton","deleteItemButton","Delete_default","red500","HEADER_MARGIN_HEIGHT","ItemHeader","actionButtons","itemId","forwardedRef","itemHeaderWrap","ref","itemTitle","itemActionsWrap","Item_DeleteItemButton","ConnectedItemHeader","forwardRef","iconFill","ItemHeaderButtons","_useState","useState","_useState2","slicedToArray","setAnchorEl","onSelectActiveType","isTrackerType","onViewTable","handleClose","onViewChart","onViewMap","canViewAs","isSingleValue","isYearOverYear","VIS_TYPE_GAUGE","VIS_TYPE_PIE","interpretationMenuLabel","activeFooter","pluginIsAvailable","Fragment","small","secondary","icons_ThreeDots","InsertChart_default","ViewList_default","Public_default","Launch_default","getLink","icons_SpeechBubble","onToggleFooter","scrollContainer","line","border","grey100","ItemFooter","objectId","getId","d2_ui_interpretations_default","memoizeOne","fn","lastArgs","lastValue","every","arg","i","progress","spacing","unit","alignSelf","outer","CircularProgress_default","overflow","textOverflow","whiteSpace","fontStretch","lineHeight","loadingCover","left","background","Item","showFooter","configLoaded","pluginIsLoaded","applyFilters","visRows","visColumns","columns","visFilters","dimensionFound","dimensionObjects","getUniqueKey","uniqueId","getPluginComponent","memoizedGetVisualizationConfig","calculatedHeight","originalHeight","headerRef","current","clientHeight","ITEM_CONTENT_PADDING_BOTTOM","memoizedGetContentStyle","contentRef","offsetHeight","LoadingMask","es_lib","memoizedApplyFilters","onLoadingComplete","forDashboard","mapViews","layer","VisualizationItem_DefaultPlugin","onToggleItemExpanded","getContentStyle","measuredHeight","createRef","getVisualizationConfig","_componentDidMount","onVisualizationLoaded","prevState","VisualizationItem_ItemHeaderButtons","Item_ItemHeader","VisualizationItem_FatalErrorBoundary","VisualizationItem_ItemFooter","acSetActiveVisualizationType","grey200","Line","PRIVATE","messageTypes","_messageTypes","listStyleType","paddingLeft","seeAll","marginBottom","sender","snippet","maxHeight","MessagesItem","getMessageHref","msgIdentifier","messageType","getMessageSender","latestMsg","getMessageItems","editClass","readClass","read","msgDate","document","location","messageCount","userSettings","widgets_Line","string","MessagesContainer","NotSupportedItem","NotInterested_default","align","DeleteIcon","getItemTitle","ListItem","tRemoveListItemContent","contentItems","index","el","getContentItems","contentItem","Description","deleteButton","icons_Delete","grey900","newContent","textField","onChangeText","updatedItem","d2_ui_rich_text","onEdit","multiline","fullWidth","textDivStyle","viewItem","getIframeSrc","appDetails","iframeSrc","ouIds","ouPath","AppItem","appKey","system","installedApps","app","src","SpacerItem","GridItem","VisualizationItem","TextItem","getGridItem","NoContentMessage","ProgressiveLoadingContainer","shouldLoad","containerRef","shouldLoadHandler","bufferPx","bufferFactor","innerHeight","rect","getBoundingClientRect","bottom","removeHandler","checkShouldLoad","debounceMs","registerHandler","_this3","objectWithoutProperties","eventProps","pick","EXPANDED_HEIGHT","ItemGrid","expandedItems","clickedId","isExpanded","onRemoveItem","onLayoutChange","newLayout","acUpdateDashboardLayout","onResizeStop","layout","oldItem","onItemResize","pluginResize","onRemoveItemWrapper","getItem","expandedItem","hProp","minH","ITEM_MIN_HEIGHT","randomNumber","random","getItems","getMemoizedItem","getItemComponent","itemClassNames","Item_ProgressiveLoadingContainer","Item_Item_Item","getItemComponents","memoize","widgets_NoContentMessage","react_grid_layout_default","MARGIN","cols","getGridColumns","rowHeight","GRID_ROW_HEIGHT","innerWidth","compactType","GRID_COMPACT_TYPE","isDraggable","isResizable","draggableCancel","validItems","hasShape","badgeContainer","badge","badgeRemove","FilterBadge","onRemove","count","FilterBar","onBadgeRemove","onBadgeClick","bar","FilterBar_FilterBadge","removeItemFIlter","filtersSelector","createSelector","arr","flexWrap","DashboardContent","components_TitleBar_TitleBar","components_FilterBar_FilterBar","components_ItemGrid_ItemGrid","Content","hasDashboardContent","dashboardsIsEmpty","Dashboard_DashboardContent","dashboardsLoaded","contentNotReady","ControlBar_DashboardsBar","Dashboard_DashboardVerticalOffset","ViewDashboard_Content","ConfirmDeleteDialog","onDeleteConfirmed","onContinueEditing","destructive","DialogTitle_default","DialogContent_default","DialogContentText_default","buttonBarStyle","EditBar","translationDialogIsOpen","dashboardModel","confirmDeleteDialogOpen","redirectUrl","onConfirmDelete","onSave","newId","onDiscard","onDiscardChanges","onDelete","onTranslationsSaved","translations","dbLocale","translation","property","onTranslate","fetchDashboardModel","toggleTranslationDialog","confirmDeleteDialog","deleteAccess","ControlBar_ConfirmDeleteDialog","translationDialog","d2_ui_translation_dialog_default","objectToTranslate","fieldsToTranslate","onTranslationSaved","onTranslationError","err","Redirect","updateAccess","discardBtnText","primary","rightControls","sGetIsNewDashboard","dashboardToSave","tDeleteDashboard","acSetDashboardDisplayName","EditDashboard","initialized","initEditDashboard","setEditDashboard","getDashboardContent","EditDashboard_Content","ControlBar_EditBar","NewDashboard","setNewDashboard","Dashboard","setDashboard","match","params","selectDashboard","scrollToTop","scrollTo","mode","Dashboard_EditDashboard","Dashboard_NewDashboard","Dashboard_ViewDashboard","dashboardToSelect","preferredId","App","setCurrentUser","fetchDashboards","setControlBarRows","setDimensions","spacers","HeaderBar","HashRouter","Switch","Route","exact","path","render","components_Dashboard_Dashboard","components_SnackbarMessage_SnackbarMessage","childContextTypes","controlBarRows","displayNameProp","filteredDimensions","apiFetchDimensions","dim","dimensionType","dataDimensionType","tSetDimensions","moment","addResources","arTranslations","daTranslations","enTranslations","esTranslations","frTranslations","idTranslations","kmTranslations","loTranslations","myTranslations","prsTranslations","psTranslations","ptTranslations","pt_BRTranslations","ruTranslations","svTranslations","tetTranslations","tgTranslations","ukTranslations","urTranslations","viTranslations","zhTranslations","zh_CNTranslations","setDefaultNamespace","changeLanguage","objectClean","conversations","$merge","d2Object","keyUiLocale","authorities","newState","k","$unshift","idToRemove","$splice","stateItems","layoutHasChanged","newStateItems","x","y","stateItem","si","configureStore","middleware","thunk","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","createStore","reducer","applyMiddleware","configI18n","config","sources","manifest","isProd","getManifest","version","manifest_generated_at","process","activities","dhis","dhis2","apiVersion","headers","schemas","getUserSettings","d2Init","initializedD2","ReactDOM","build_es","es","store","createMuiTheme","dhis2theme","src_components_App","getElementById","init","itemWrap","itemTypeToExternalPlugin","_itemTypeToExternalPl","_home_travis_build_dhis2_dashboards_app_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_defineProperty__WEBPACK_IMPORTED_MODULE_3__","getPlugin","hasIntegratedPlugin","eventReport","eventChart","loadPlugin","plugin","load","loadingIndicator","getName","_home_travis_build_dhis2_dashboards_app_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_asyncToGenerator__WEBPACK_IMPORTED_MODULE_2__","_home_travis_build_dhis2_dashboards_app_node_modules_babel_preset_react_app_node_modules_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default","_home_travis_build_dhis2_dashboards_app_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectSpread__WEBPACK_IMPORTED_MODULE_1__","fetch","fetchedFavorite","resize","unmount","originalType","extractedMapView","mv","VIS_TYPE_COLUMN","VIS_TYPE_PIVOT_TABLE","__webpack_require__","__webpack_exports__","d2_utilizr_lib_isFunction__WEBPACK_IMPORTED_MODULE_0__","d2_utilizr_lib_isFunction__WEBPACK_IMPORTED_MODULE_0___default","n","_modules_util__WEBPACK_IMPORTED_MODULE_1__","isNonNegativeInteger","Number","isInteger","itemWithShape","Error","col","row","itemWidth","itemHeight","getShape","round","getOriginalHeight","querySelector","isFunction","setViewportSize","clientWidth"],"mappings":"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","file":"static/js/main.184662de.chunk.js","sourcesContent":["import i18n from '@dhis2/d2-i18n';\nimport TableIcon from '@material-ui/icons/ViewList';\nimport ChartIcon from '@material-ui/icons/InsertChart';\nimport MapIcon from '@material-ui/icons/Public';\nimport ExtensionIcon from '@material-ui/icons/Extension';\nimport DescriptionIcon from '@material-ui/icons/Description';\nimport PersonIcon from '@material-ui/icons/Person';\nimport FontDownloadIcon from '@material-ui/icons/FontDownload';\nimport EmailIcon from '@material-ui/icons/Email';\nimport CropFreeIcon from '@material-ui/icons/CropFree';\nimport NotInterestedIcon from '@material-ui/icons/NotInterested';\n\nimport { getBaseUrl } from './util';\n\n// Item types\nexport const VISUALIZATION = 'VISUALIZATION';\nexport const REPORT_TABLE = 'REPORT_TABLE';\nexport const CHART = 'CHART';\nexport const MAP = 'MAP';\nexport const EVENT_REPORT = 'EVENT_REPORT';\nexport const EVENT_CHART = 'EVENT_CHART';\nexport const APP = 'APP';\nexport const REPORTS = 'REPORTS';\nexport const RESOURCES = 'RESOURCES';\nexport const USERS = 'USERS';\nexport const MESSAGES = 'MESSAGES';\nexport const TEXT = 'TEXT';\nexport const SPACER = 'SPACER';\n\nconst DOMAIN_TYPE_AGGREGATE = 'AGGREGATE';\nconst DOMAIN_TYPE_TRACKER = 'TRACKER';\n\n// Dashboard helpers\nexport const spacerContent = 'SPACER_ITEM_FOR_DASHBOARD_LAYOUT_CONVENIENCE';\nexport const emptyTextItemContent = 'TEXT_ITEM_WITH_NO_CONTENT';\nexport const isSpacerType = item =>\n    item.type === TEXT && item.text === spacerContent;\nexport const isTextType = item =>\n    item.type === TEXT && item.text !== spacerContent;\nexport const isVisualizationType = item =>\n    !!itemTypeMap[item.type].isVisualizationType;\nexport const hasMapView = itemType =>\n    itemTypeMap[itemType].domainType === DOMAIN_TYPE_AGGREGATE;\nexport const isTrackerDomainType = itemType =>\n    itemTypeMap[itemType].domainType === DOMAIN_TYPE_TRACKER;\nexport const getDefaultItemCount = itemType =>\n    itemTypeMap[itemType].defaultItemCount || 5;\nexport const getAppName = itemType => itemTypeMap[itemType].appName || '';\n\n// Item type map\nexport const itemTypeMap = {\n    [VISUALIZATION]: {\n        id: VISUALIZATION,\n        endPointName: 'visualizations',\n        propName: 'visualization',\n        pluralTitle: i18n.t('Visualizations'),\n        appUrl: id => `dhis-web-data-visualizer/#/${id}`,\n        appName: 'Data Visualizer',\n        defaultItemCount: 10,\n    },\n    [REPORT_TABLE]: {\n        id: REPORT_TABLE,\n        endPointName: 'visualizations',\n        propName: 'visualization',\n        pluralTitle: i18n.t('Pivot tables'),\n        domainType: DOMAIN_TYPE_AGGREGATE,\n        isVisualizationType: true,\n        appUrl: id => `dhis-web-data-visualizer/#/${id}`,\n        appName: 'Data Visualizer',\n    },\n    [CHART]: {\n        id: CHART,\n        endPointName: 'visualizations',\n        propName: 'visualization',\n        pluralTitle: i18n.t('Charts'),\n        domainType: DOMAIN_TYPE_AGGREGATE,\n        isVisualizationType: true,\n        appUrl: id => `dhis-web-data-visualizer/#/${id}`,\n        appName: 'Data Visualizer',\n    },\n    [MAP]: {\n        id: MAP,\n        endPointName: 'maps',\n        propName: 'map',\n        pluralTitle: i18n.t('Maps'),\n        domainType: DOMAIN_TYPE_AGGREGATE,\n        isVisualizationType: true,\n        appUrl: id => `dhis-web-maps/?id=${id}`,\n        appName: 'Maps',\n    },\n    [EVENT_REPORT]: {\n        id: EVENT_REPORT,\n        endPointName: 'eventReports',\n        propName: 'eventReport',\n        pluralTitle: i18n.t('Event reports'),\n        domainType: DOMAIN_TYPE_TRACKER,\n        isVisualizationType: true,\n        appUrl: id => `dhis-web-event-reports/?id=${id}`,\n        appName: 'Event Reports',\n    },\n    [EVENT_CHART]: {\n        id: EVENT_CHART,\n        endPointName: 'eventCharts',\n        propName: 'eventChart',\n        pluralTitle: i18n.t('Event charts'),\n        domainType: DOMAIN_TYPE_TRACKER,\n        isVisualizationType: true,\n        appUrl: id => `dhis-web-event-visualizer/?id=${id}`,\n        appName: 'Event Visualizer',\n    },\n    [APP]: {\n        endPointName: 'apps',\n        propName: 'appKey',\n        pluralTitle: i18n.t('Apps'),\n    },\n    [REPORTS]: {\n        id: REPORTS,\n        endPointName: 'reports',\n        propName: 'reports',\n        pluralTitle: i18n.t('Reports'),\n        appUrl: id =>\n            `dhis-web-reporting/getReportParams.action?mode=report&uid=${id}`,\n    },\n    [RESOURCES]: {\n        id: RESOURCES,\n        endPointName: 'resources',\n        propName: 'resources',\n        pluralTitle: i18n.t('Resources'),\n        appUrl: id => `api/documents/${id}/data`,\n    },\n    [USERS]: {\n        id: USERS,\n        endPointName: 'users',\n        propName: 'users',\n        pluralTitle: i18n.t('Users'),\n        appUrl: id => `dhis-web-dashboard-integration/profile.action?id=${id}`,\n    },\n    [TEXT]: {\n        id: TEXT,\n        propName: 'text',\n    },\n    [MESSAGES]: {\n        propName: 'messages',\n    },\n    [SPACER]: {\n        propName: 'text',\n    },\n};\n\nexport const getEndPointName = type => itemTypeMap[type].endPointName;\n\nexport const getItemUrl = (type, item, d2) => {\n    let url;\n\n    if (type === APP) {\n        url = item.launchUrl;\n    }\n\n    if (itemTypeMap[type] && itemTypeMap[type].appUrl) {\n        url = `${getBaseUrl(d2)}/${itemTypeMap[type].appUrl(item.id)}`;\n    }\n\n    return url;\n};\n\nexport const getItemIcon = type => {\n    switch (type) {\n        case REPORT_TABLE:\n        case EVENT_REPORT:\n        case REPORTS:\n            return TableIcon;\n        case CHART:\n        case EVENT_CHART:\n            return ChartIcon;\n        case MAP:\n            return MapIcon;\n        case APP:\n            return ExtensionIcon;\n        case RESOURCES:\n            return DescriptionIcon;\n        case USERS:\n            return PersonIcon;\n        case TEXT:\n            return FontDownloadIcon;\n        case MESSAGES:\n            return EmailIcon;\n        case SPACER:\n            return CropFreeIcon;\n        default:\n            return NotInterestedIcon;\n    }\n};\n","import { getInstance } from 'd2';\nimport arrayClean from 'd2-utilizr/lib/arrayClean';\n\nimport { getEndPointName } from '../modules/itemTypes';\n\n// Id, name\nexport const getIdNameFields = ({ rename } = {}) => [\n    'id',\n    `${rename ? 'displayName~rename(name)' : 'name,displayName'}`,\n];\n\n// Item\nexport const getItemFields = () => [\n    'dimensionItem~rename(id)',\n    'displayName~rename(name)',\n    'dimensionItemType',\n];\n\n// Dimension\nexport const getDimensionFields = ({ withItems }) =>\n    arrayClean([\n        'dimension',\n        'legendSet[id]',\n        'filter',\n        'programStage',\n        withItems ? `items[${getItemFields().join(',')}]` : ``,\n    ]);\n\n// Axis\nexport const getAxesFields = ({ withItems }) => [\n    `columns[${getDimensionFields({ withItems }).join(',')}]`,\n    `rows[${getDimensionFields({ withItems }).join(',')}]`,\n    `filters[${getDimensionFields({ withItems }).join(',')}]`,\n];\n\n// Favorite\nexport const getFavoriteFields = ({ withDimensions, withOptions }) => {\n    return arrayClean([\n        `${getIdNameFields({ rename: true }).join(',')}`,\n        'displayDescription~rename(description)',\n        withDimensions ? `${getAxesFields({ withItems: true }).join(',')}` : ``,\n        withOptions\n            ? [\n                  '*',\n                  '!attributeDimensions',\n                  '!attributeValues',\n                  '!category',\n                  '!categoryDimensions',\n                  '!categoryOptionGroupSetDimensions',\n                  '!columnDimensions',\n                  '!dataDimensionItems',\n                  '!dataElementDimensions',\n                  '!dataElementGroupSetDimensions',\n                  '!filterDimensions',\n                  '!itemOrganisationUnitGroups',\n                  '!lastUpdatedBy',\n                  '!organisationUnitGroupSetDimensions',\n                  '!organisationUnitLevels',\n                  '!organisationUnits',\n                  '!programIndicatorDimensions',\n                  '!relativePeriods',\n                  '!reportParams',\n                  '!rowDimensions',\n                  '!series',\n                  '!translations',\n                  '!userOrganisationUnit',\n                  '!userOrganisationUnitChildren',\n                  '!userOrganisationUnitGrandChildren',\n              ].join(',')\n            : '',\n    ]);\n};\n\nexport const getFavoritesFields = ({ withDimensions }) => [\n    `reportTable[${getFavoriteFields({ withDimensions }).join(',')}]`,\n    `chart[${['type', ...getFavoriteFields({ withDimensions })].join(',')}]`,\n    `map[${getFavoriteFields({ withDimensions }).join(',')}]`,\n    `eventReport[${getFavoriteFields({ withDimensions }).join(',')}]`,\n    `eventChart[${getFavoriteFields({ withDimensions }).join(',')}]`,\n];\n\n// List item\nexport const getListItemFields = () => [\n    `reports[${getIdNameFields({ rename: true }).join(',')}]`,\n    `resources[${getIdNameFields({ rename: true }).join(',')}]`,\n    `users[${getIdNameFields({ rename: true }).join(',')}]`,\n];\n\n// Map\nexport const getMapFields = () => [\n    `${getIdNameFields({ rename: true }).join(',')}`,\n    'user,longitude,latitude,zoom,basemap',\n    `mapViews[${getFavoriteFields({\n        withDimensions: true,\n        withOptions: true,\n    })}]`,\n];\n\n// Api\n\n// Get more info about the favorite of a dashboard item\nexport const apiFetchFavorite = (id, type, { fields }) =>\n    getInstance().then(d2 =>\n        d2.Api.getApi().get(`${getEndPointName(type)}/${id}`, {\n            fields:\n                fields ||\n                getFavoriteFields({\n                    withDimensions: true,\n                    withOptions: true,\n                }),\n        })\n    );\n","import isObject from 'lodash/isObject';\n\n// validation\nexport function orNull(param) {\n    return param === undefined ? null : param;\n}\n\nexport function orArray(param) {\n    return Array.isArray(param) ? param : [];\n}\n\nexport function orObject(param) {\n    return isObject(param) ? param : {};\n}\n\n// array\nexport function arrayGetById(array, id) {\n    return array.find(item => item.id === id);\n}\n\n// object\nexport function arrayToIdMap(array) {\n    return array.reduce((obj, item) => {\n        obj[item.id] = item;\n        return obj;\n    }, {});\n}\n\n// date\nexport function getDate() {\n    const y = Math.floor(Math.random() * 3) + 2015;\n    const M = Math.floor(Math.random() * 12) + 1;\n    const d = Math.floor(Math.random() * 28) + 1;\n    // const h = Math.floor(Math.random() * 23) + 1;\n    // const m = Math.floor(Math.random() * 59) + 1;\n    // const s = Math.floor(Math.random() * 59) + 1;\n\n    return new Date(`${y}-${M}-${d}`)\n        .toJSON()\n        .replace('T', ' ')\n        .substr(0, 10);\n}\n\nexport const formatDate = (value, uiLocale) => {\n    if (typeof global.Intl !== 'undefined' && Intl.DateTimeFormat) {\n        const locale = uiLocale || 'en';\n        return new Intl.DateTimeFormat(locale, {\n            year: 'numeric',\n            month: 'short',\n            day: 'numeric',\n        }).format(new Date(value));\n    }\n\n    return value.substr(0, 19).replace('T', ' ');\n};\n\n/**\n * Sorts an array of objects based on provided date property\n *\n * @param {Array} items Array of objects\n * @param {String} dateProp Name of the date property to be used for sorting\n * @param {Boolean} ascending Whether to sort ascending or descending\n */\nexport const sortByDate = (items, dateProp, ascending = true) => {\n    const values = Object.values(items);\n\n    values.sort((a, b) => {\n        const aDate = new Date(a[dateProp]);\n        const bDate = new Date(b[dateProp]);\n\n        return ascending ? aDate - bDate : bDate - aDate;\n    });\n\n    return values;\n};\n\n// reducer validator\nexport const validateReducer = (value, defaultValue) =>\n    value === undefined || value === null ? defaultValue : value;\n\nexport const getBaseUrl = d2 => {\n    const api = d2.Api.getApi();\n    const idx = api.baseUrl.indexOf('/api');\n    return idx > -1 ? api.baseUrl.slice(0, idx) : api.baseUrl;\n};\n\nexport const getWithoutId = object => ({\n    ...object,\n    id: undefined,\n});\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"Item_list__2oHc1\",\"item\":\"Item_item__lO40M\",\"itemicon\":\"Item_itemicon__dv5ah\",\"link\":\"Item_link__2gULT\",\"deleteicon\":\"Item_deleteicon__3c7bl\",\"deletebutton\":\"Item_deletebutton__1DfY5\"};","export const RECEIVED_USER = 'RECEIVED_USER';\n\nexport const DEFAULT_STATE_USER = {\n    id: '',\n    username: '',\n    uiLocale: '',\n    isSuperuser: false,\n};\n\nexport default (state = DEFAULT_STATE_USER, action) => {\n    switch (action.type) {\n        case RECEIVED_USER: {\n            return fromD2ToUserObj(action.value);\n        }\n        default:\n            return state;\n    }\n};\n\nfunction fromD2ToUserObj(d2Object) {\n    return {\n        id: d2Object.id,\n        username: d2Object.username,\n        uiLocale: d2Object.settings.keyUiLocale,\n        isSuperuser: d2Object.authorities.has('ALL'),\n    };\n}\n\n// selectors\n\nexport const sGetUserId = state => state.user.id;\nexport const sGetUserUsername = state => state.user.username;\nexport const sGetIsSuperuser = state => state.user.isSuperuser;\nexport const sGetUiLocale = state => state.user.uiLocale;\n","/** @module reducers/dashboards */\n\nimport arrayFrom from 'd2-utilizr/lib/arrayFrom';\nimport arraySort from 'd2-utilizr/lib/arraySort';\n\nimport { orArray, orObject } from '../modules/util';\nimport {\n    SPACER,\n    isSpacerType,\n    isTextType,\n    emptyTextItemContent,\n    REPORT_TABLE,\n    CHART,\n    VISUALIZATION,\n} from '../modules/itemTypes';\n\nexport const SET_DASHBOARDS = 'SET_DASHBOARDS';\nexport const ADD_DASHBOARDS = 'ADD_DASHBOARDS';\nexport const SET_DASHBOARD_STARRED = 'SET_DASHBOARD_STARRED';\nexport const SET_DASHBOARD_DISPLAY_NAME = 'SET_DASHBOARD_DISPLAY_NAME';\nexport const SET_DASHBOARD_ITEMS = 'SET_DASHBOARD_ITEMS';\n\nexport const DEFAULT_STATE_DASHBOARDS = {\n    byId: null,\n    items: [],\n};\n\n// reducer helper functions\n\nconst updateDashboardProp = ({ state, dashboardId, prop, value }) => ({\n    byId: {\n        ...state.byId,\n        [dashboardId]: {\n            ...state.byId[dashboardId],\n            [prop]: value,\n        },\n    },\n    items: state.items,\n});\n\n/**\n * Reducer that computes and returns the new state based on the given action\n * @function\n * @param {Object} state The current state\n * @param {Object} action The action to be evaluated\n * @returns {Object}\n */\nexport default (state = DEFAULT_STATE_DASHBOARDS, action) => {\n    switch (action.type) {\n        case SET_DASHBOARDS: {\n            return {\n                byId: action.value,\n                items: [],\n            };\n        }\n        case ADD_DASHBOARDS: {\n            return {\n                ...state,\n                byId: {\n                    ...state.byId,\n                    ...action.value,\n                },\n            };\n        }\n        case SET_DASHBOARD_STARRED: {\n            return updateDashboardProp({\n                state,\n                dashboardId: action.dashboardId,\n                prop: 'starred',\n                value: action.value,\n            });\n        }\n        case SET_DASHBOARD_DISPLAY_NAME: {\n            return updateDashboardProp({\n                state,\n                dashboardId: action.dashboardId,\n                prop: 'displayName',\n                value: action.value,\n            });\n        }\n        case SET_DASHBOARD_ITEMS: {\n            return {\n                ...state,\n                items: action.value,\n            };\n        }\n        default:\n            return state;\n    }\n};\n\n// root selector\n\nexport const sGetDashboardsRoot = state => state.dashboards;\n\n// selector level 1\n\n/**\n * Selector which returns a dashboard by id from the state object\n * If no matching dashboard is found it returns undefined\n * If dashboards.byId is null, then the dashboards api request\n * has not yet completed. If dashboards.byId is an empty object\n * then the dashboards api request is complete, but no dashboards\n * were returned\n *\n * @function\n * @param {Object} state The current state\n * @param {Number} id The id of the dashboard\n * @returns {Object | undefined}\n */\nexport const sGetDashboardById = (state, id) =>\n    orObject(sGetDashboardsRoot(state).byId)[id];\n\nexport const sDashboardsIsFetching = state => {\n    return sGetDashboardsRoot(state).byId === null;\n};\n\n/**\n * Selector which returns all dashboards (the byId object)\n *\n * @function\n * @param {Object} state The current state\n * @returns {Object | undefined}\n */\nexport const sGetAllDashboards = state =>\n    orObject(sGetDashboardsRoot(state).byId);\n\n/**\n * Selector which returns the current dashboard items\n *\n * @function\n * @param {Object} state The current state\n * @returns {Array}\n */\nexport const sGetDashboardItems = state => sGetDashboardsRoot(state).items;\n\n// selector level 2\n\nexport const sGetStarredDashboards = state =>\n    Object.values(sGetAllDashboards(state)).filter(\n        dashboard => dashboard.starred === true\n    );\n\nexport const sGetUnstarredDashboards = state =>\n    Object.values(sGetAllDashboards(state)).filter(\n        dashboard => dashboard.starred === false\n    );\n\n// selector level 3\n\nexport const sGetStarredDashboardIds = state => {\n    return sGetStarredDashboards(state).map(dashboard => dashboard.id);\n};\n\nexport const sGetUnstarredDashboardIds = state =>\n    sGetUnstarredDashboards(state).map(dashboard => dashboard.id);\n\nexport const sGetDashboardsSortedByStarred = state => [\n    ...arraySort(sGetStarredDashboards(state), 'ASC', 'displayName'),\n    ...arraySort(sGetUnstarredDashboards(state), 'ASC', 'displayName'),\n];\n\n// utils\n\n/**\n * Returns the array of dashboards, customized for ui\n * @function\n * @param {Array} data The original dashboard list\n * @returns {Array}\n */\nexport const getCustomDashboards = data => {\n    const uiItems = items =>\n        items.map(item => {\n            let type = isSpacerType(item) ? SPACER : item.type;\n\n            // TODO: temporary fix before 2.34 epic branch is merged\n            // if \"VISUALIZATION\", reset to \"REPORT_TABLE\" or \"CHART\"\n            if (type === VISUALIZATION) {\n                type = item.reportTable\n                    ? REPORT_TABLE\n                    : item.chart\n                    ? CHART\n                    : type;\n            }\n\n            const text = isTextType(item)\n                ? item.text === emptyTextItemContent\n                    ? ''\n                    : item.text\n                : null;\n\n            return {\n                ...item,\n                ...(text !== null ? { text } : {}),\n                type,\n            };\n        });\n\n    return arrayFrom(data).map(d => ({\n        id: d.id,\n        name: d.name,\n        displayName: d.displayName,\n        description: d.description,\n        displayDescription: d.displayDescription,\n        starred: d.favorite,\n        owner: d.user.name,\n        created: d.created\n            .split('T')\n            .join(' ')\n            .substr(0, 16),\n        lastUpdated: d.lastUpdated\n            .split('T')\n            .join(' ')\n            .substr(0, 16),\n        access: d.access,\n        numberOfItems: orArray(d.dashboardItems).length,\n        dashboardItems: uiItems(d.dashboardItems),\n    }));\n};\n","/** @module reducers/editDashboard */\nimport update from 'immutability-helper';\nimport isEmpty from 'lodash/isEmpty';\nimport { orArray, orObject } from '../modules/util';\n\nexport const RECEIVED_EDIT_DASHBOARD = 'RECEIVED_EDIT_DASHBOARD';\nexport const RECEIVED_NOT_EDITING = 'RECEIVED_NOT_EDITING';\nexport const START_NEW_DASHBOARD = 'START_NEW_DASHBOARD';\nexport const RECEIVED_TITLE = 'RECEIVED_TITLE';\nexport const RECEIVED_DESCRIPTION = 'RECEIVED_DESCRIPTION';\nexport const ADD_DASHBOARD_ITEM = 'ADD_DASHBOARD_ITEM';\nexport const REMOVE_DASHBOARD_ITEM = 'REMOVE_DASHBOARD_ITEM';\nexport const UPDATE_DASHBOARD_ITEM = 'UPDATE_DASHBOARD_ITEM';\nexport const RECEIVED_DASHBOARD_LAYOUT = 'RECEIVED_DASHBOARD_LAYOUT';\n\nexport const DEFAULT_STATE_EDIT_DASHBOARD = {};\nexport const NEW_DASHBOARD_STATE = {\n    id: '',\n    name: '',\n    access: {},\n    description: '',\n    dashboardItems: [],\n};\n\nexport default (state = DEFAULT_STATE_EDIT_DASHBOARD, action) => {\n    switch (action.type) {\n        case RECEIVED_EDIT_DASHBOARD: {\n            const newState = {};\n            Object.keys(NEW_DASHBOARD_STATE).map(\n                k => (newState[k] = action.value[k])\n            );\n            return newState;\n        }\n        case RECEIVED_NOT_EDITING:\n            return DEFAULT_STATE_EDIT_DASHBOARD;\n        case START_NEW_DASHBOARD:\n            return NEW_DASHBOARD_STATE;\n        case RECEIVED_TITLE: {\n            return Object.assign({}, state, { name: action.value });\n        }\n        case RECEIVED_DESCRIPTION: {\n            return Object.assign({}, state, {\n                description: action.value,\n            });\n        }\n        case ADD_DASHBOARD_ITEM:\n            return update(state, {\n                dashboardItems: { $unshift: [action.value] },\n            });\n        case REMOVE_DASHBOARD_ITEM: {\n            const idToRemove = action.value;\n\n            const dashboardItemIndex = state.dashboardItems.findIndex(\n                item => item.id === idToRemove\n            );\n\n            if (dashboardItemIndex > -1) {\n                return update(state, {\n                    dashboardItems: {\n                        $splice: [[dashboardItemIndex, 1]],\n                    },\n                });\n            }\n\n            return state;\n        }\n        case RECEIVED_DASHBOARD_LAYOUT: {\n            const stateItems = orArray(state.dashboardItems);\n            let layoutHasChanged = false;\n\n            const newStateItems = action.value.map(({ x, y, w, h, i }) => {\n                const stateItem = stateItems.find(si => si.id === i);\n\n                if (\n                    !(\n                        stateItem.x === x &&\n                        stateItem.y === y &&\n                        stateItem.w === w &&\n                        stateItem.h === h\n                    )\n                ) {\n                    layoutHasChanged = true;\n                    return Object.assign({}, stateItem, { w, h, x, y });\n                }\n\n                return stateItem;\n            });\n\n            return layoutHasChanged\n                ? {\n                      ...state,\n                      dashboardItems: newStateItems,\n                  }\n                : state;\n        }\n        case UPDATE_DASHBOARD_ITEM: {\n            const dashboardItem = action.value;\n\n            const dashboardItemIndex = state.dashboardItems.findIndex(\n                item => item.id === dashboardItem.id\n            );\n\n            if (dashboardItemIndex > -1) {\n                const newState = update(state, {\n                    dashboardItems: {\n                        $splice: [[dashboardItemIndex, 1, dashboardItem]],\n                    },\n                });\n\n                return newState;\n            }\n\n            return state;\n        }\n        default:\n            return state;\n    }\n};\n\n// root selector\n\nexport const sGetEditDashboardRoot = state => state.editDashboard;\n\n// selectors\n\nexport const sGetIsEditing = state => !isEmpty(state.editDashboard);\n\nexport const sGetIsNewDashboard = state => {\n    return (\n        !isEmpty(state.editDashboard) && sGetEditDashboardRoot(state).id === ''\n    );\n};\n\nexport const sGetEditDashboardItems = state =>\n    orObject(sGetEditDashboardRoot(state)).dashboardItems;\n","export const CLEAR_EDIT_ITEM_FILTERS = 'CLEAR_EDIT_ITEM_FILTERS';\nexport const REMOVE_EDIT_ITEM_FILTER = 'REMOVE_EDIT_ITEM_FILTER';\nexport const SET_EDIT_ITEM_FILTERS = 'SET_EDIT_ITEM_FILTERS';\n\nexport const DEFAULT_STATE_EDIT_ITEM_FILTERS = {};\n\nexport default (state = DEFAULT_STATE_EDIT_ITEM_FILTERS, action) => {\n    switch (action.type) {\n        case REMOVE_EDIT_ITEM_FILTER: {\n            const newState = { ...state };\n\n            delete newState[action.id];\n\n            return newState;\n        }\n        case SET_EDIT_ITEM_FILTERS: {\n            return action.filters;\n        }\n        case CLEAR_EDIT_ITEM_FILTERS: {\n            return DEFAULT_STATE_EDIT_ITEM_FILTERS;\n        }\n        default:\n            return state;\n    }\n};\n\n// selectors\n\nexport const sGetEditItemFiltersRoot = state => state.editItemFilters;\n\nexport const sGetEditFiltersKeys = state =>\n    Object.keys(sGetEditItemFiltersRoot(state));\n","/** @module reducers/selected */\nimport { combineReducers } from 'redux';\n\nimport { validateReducer } from '../modules/util';\n\nexport const SET_SELECTED_ID = 'SET_SELECTED_ID';\nexport const SET_SELECTED_ISLOADING = 'SET_SELECTED_ISLOADING';\nexport const SET_SELECTED_SHOWDESCRIPTION = 'SET_SELECTED_SHOWDESCRIPTION';\n\nexport const DEFAULT_STATE_SELECTED_ID = null;\nexport const DEFAULT_STATE_SELECTED_ISLOADING = false;\nexport const DEFAULT_STATE_SELECTED_SHOWDESCRIPTION = false;\n\n/**\n * Reducer functions that computes and returns the new state based on the given action\n * @function\n * @param {Object} state The current state\n * @param {Object} action The action to be evaluated\n */\nconst id = (state = DEFAULT_STATE_SELECTED_ID, action) => {\n    switch (action.type) {\n        case SET_SELECTED_ID:\n            return validateReducer(action.value, DEFAULT_STATE_SELECTED_ID);\n        default:\n            return state;\n    }\n};\n\nconst isLoading = (state = DEFAULT_STATE_SELECTED_ISLOADING, action) => {\n    switch (action.type) {\n        case SET_SELECTED_ISLOADING:\n            return validateReducer(\n                action.value,\n                DEFAULT_STATE_SELECTED_ISLOADING\n            );\n        default:\n            return state;\n    }\n};\n\nconst showDescription = (\n    state = DEFAULT_STATE_SELECTED_SHOWDESCRIPTION,\n    action\n) => {\n    switch (action.type) {\n        case SET_SELECTED_SHOWDESCRIPTION:\n            return validateReducer(\n                action.value,\n                DEFAULT_STATE_SELECTED_SHOWDESCRIPTION\n            );\n        default:\n            return state;\n    }\n};\n\nexport default combineReducers({\n    id,\n    isLoading,\n    showDescription,\n});\n\n// Selectors\n\nexport const sGetSelectedRoot = state => state.selected;\n\nexport const sGetSelectedId = state => sGetSelectedRoot(state).id;\n\nexport const sGetSelectedIsLoading = state => sGetSelectedRoot(state).isLoading;\n\nexport const sGetSelectedShowDescription = state =>\n    sGetSelectedRoot(state).showDescription;\n","import {\n    REMOVE_EDIT_ITEM_FILTER,\n    SET_EDIT_ITEM_FILTERS,\n    CLEAR_EDIT_ITEM_FILTERS,\n} from '../reducers/editItemFilters';\n\n// actions\n\nexport const acRemoveEditItemFilter = id => ({\n    type: REMOVE_EDIT_ITEM_FILTER,\n    id,\n});\n\nexport const acClearEditItemFilters = () => ({\n    type: CLEAR_EDIT_ITEM_FILTERS,\n});\n\nexport const acSetEditItemFilters = filters => ({\n    type: SET_EDIT_ITEM_FILTERS,\n    filters,\n});\n","export const CLEAR_ITEM_FILTERS = 'CLEAR_ITEM_FILTERS';\nexport const SET_ITEM_FILTERS = 'SET_ITEM_FILTERS';\nexport const ADD_ITEM_FILTER = 'ADD_ITEM_FILTER';\nexport const REMOVE_ITEM_FILTER = 'REMOVE_ITEM_FILTER';\n\nexport const DEFAULT_STATE_ITEM_FILTERS = {};\n\nexport default (state = DEFAULT_STATE_ITEM_FILTERS, action) => {\n    switch (action.type) {\n        case ADD_ITEM_FILTER: {\n            return {\n                ...state,\n                [action.filter.id]: action.filter.value,\n            };\n        }\n        case REMOVE_ITEM_FILTER: {\n            const newState = { ...state };\n\n            delete newState[action.id];\n\n            return newState;\n        }\n        case SET_ITEM_FILTERS: {\n            return action.filters;\n        }\n        case CLEAR_ITEM_FILTERS: {\n            return DEFAULT_STATE_ITEM_FILTERS;\n        }\n        default:\n            return state;\n    }\n};\n\n// selectors\n\nexport const sGetItemFiltersRoot = state => state.itemFilters;\n\nexport const sGetFiltersKeys = state => Object.keys(sGetItemFiltersRoot(state));\n","import {\n    ADD_ITEM_FILTER,\n    REMOVE_ITEM_FILTER,\n    SET_ITEM_FILTERS,\n    CLEAR_ITEM_FILTERS,\n} from '../reducers/itemFilters';\n\nexport const FILTER_ORG_UNIT = 'ou';\n\n// actions\n\nexport const acAddItemFilter = filter => ({\n    type: ADD_ITEM_FILTER,\n    filter,\n});\n\nexport const acRemoveItemFilter = id => ({\n    type: REMOVE_ITEM_FILTER,\n    id,\n});\n\nexport const acClearItemFilters = () => ({\n    type: CLEAR_ITEM_FILTERS,\n});\n\nexport const acSetItemFilters = filters => ({\n    type: SET_ITEM_FILTERS,\n    filters,\n});\n","import update from 'immutability-helper';\nimport { arrayToIdMap } from '../modules/util';\n\nexport const RECEIVED_MESSAGES = 'RECEIVED_MESSAGES';\n\nexport default (state = {}, action) => {\n    switch (action.type) {\n        case RECEIVED_MESSAGES: {\n            const conversations = arrayToIdMap(action.value);\n\n            const newState = update(state, { $merge: conversations });\n\n            return newState;\n        }\n        default:\n            return state;\n    }\n};\n\n// selectors\n\nexport const sGetMessagesRoot = state => state.messages;\n","import { getInstance } from 'd2';\n\nexport const getMessages = () => {\n    const fields =\n        'id,messageCount,lastUpdated,messageType,displayName,read,messages[id,read,sender[id,displayName],text,lastUpdated]';\n    const url = `/messageConversations?fields=${fields}&order=read:asc&pageSize=200`;\n    return getInstance()\n        .then(d2 => d2.Api.getApi().get(url))\n        .catch(error => console.log('Error:', error));\n};\n","export const RECEIVED_SNACKBAR_MESSAGE = 'RECEIVED_SNACKBAR_MESSAGE';\nexport const CLOSE_SNACKBAR = 'CLOSE_SNACKBAR';\n\nexport const DEFAULT_STATE_SNACKBAR = {\n    message: {},\n    duration: null,\n    open: false,\n};\n\nexport default (state = DEFAULT_STATE_SNACKBAR, action) => {\n    switch (action.type) {\n        case RECEIVED_SNACKBAR_MESSAGE: {\n            return { ...state, ...action.value };\n        }\n        case CLOSE_SNACKBAR: {\n            return DEFAULT_STATE_SNACKBAR;\n        }\n        default:\n            return state;\n    }\n};\n\n// selectors\n\nexport const sGetSnackbar = state => state.snackbar || DEFAULT_STATE_SNACKBAR;\n","import {\n    RECEIVED_SNACKBAR_MESSAGE,\n    CLOSE_SNACKBAR,\n} from '../reducers/snackbar';\n\nexport const acReceivedSnackbarMessage = value => ({\n    type: RECEIVED_SNACKBAR_MESSAGE,\n    value,\n});\n\nexport const acCloseSnackbar = () => ({\n    type: CLOSE_SNACKBAR,\n});\n","import { orObject } from '../modules/util';\nimport objectClean from 'd2-utilizr/lib/objectClean';\n\n/** @module reducers/visualizations */\n\nexport const ADD_VISUALIZATION = 'ADD_VISUALIZATION';\nexport const SET_ACTIVE_VISUALIZATION_TYPE = 'SET_ACTIVE_VISUALIZATION_TYPE';\n\nexport const DEFAULT_STATE_VISUALIZATIONS = {};\n\nconst isEmpty = p => p === undefined || p === null;\n\nexport default (state = DEFAULT_STATE_VISUALIZATIONS, action) => {\n    switch (action.type) {\n        case ADD_VISUALIZATION: {\n            return {\n                ...state,\n                [action.value.id]: objectClean(\n                    {\n                        ...orObject(state[action.value.id]),\n                        ...action.value,\n                    },\n                    isEmpty\n                ),\n            };\n        }\n        case SET_ACTIVE_VISUALIZATION_TYPE: {\n            return {\n                ...state,\n                [action.id]: objectClean(\n                    {\n                        ...orObject(state[action.id]),\n                        activeType: action.activeType,\n                    },\n                    isEmpty\n                ),\n            };\n        }\n        default:\n            return state;\n    }\n};\n\n// root selector\nexport const sGetVisualizationsRoot = state => state.visualizations;\n\n// selectors level 1\nexport const sGetVisualization = (state, id) => {\n    return sGetVisualizationsRoot(state)[id];\n};\n","import {\n    ADD_VISUALIZATION,\n    SET_ACTIVE_VISUALIZATION_TYPE,\n} from '../reducers/visualizations';\n\nexport const acAddVisualization = value => ({\n    type: ADD_VISUALIZATION,\n    value,\n});\n\nexport const acSetActiveVisualizationType = (id, activeType) => {\n    const action = {\n        type: SET_ACTIVE_VISUALIZATION_TYPE,\n        id,\n        activeType,\n    };\n\n    return action;\n};\n","import arrayClean from 'd2-utilizr/lib/arrayClean';\nimport {\n    getListItemFields,\n    getFavoritesFields,\n    getIdNameFields,\n} from './metadata';\n\n// Helper functions\n\nexport const onError = error => console.log('Error: ', error);\n\n// Dashboard item\nexport const getDashboardItemsFields = ({ withFavorite } = {}) =>\n    arrayClean([\n        'id',\n        'type',\n        'shape',\n        'x',\n        'y',\n        'width~rename(w)',\n        'height~rename(h)',\n        'messages',\n        'text',\n        'appKey',\n        `${getListItemFields().join(',')}`,\n        withFavorite\n            ? `${getFavoritesFields({\n                  withDimensions: withFavorite.withDimensions,\n              }).join(',')}`\n            : ``,\n    ]);\n\n// Dashboard\nexport const getDashboardFields = ({ withItems, withFavorite } = {}) =>\n    arrayClean([\n        `${getIdNameFields().join(',')}`,\n        'description',\n        'displayDescription',\n        'favorite',\n        `user[${getIdNameFields({ rename: true }).join(',')}]`,\n        'created',\n        'lastUpdated',\n        'access',\n        withItems\n            ? `dashboardItems[${getDashboardItemsFields({\n                  withFavorite,\n              }).join(',')}]`\n            : ``,\n    ]);\n","import { getInstance } from 'd2';\nimport arrayClean from 'd2-utilizr/lib/arrayClean';\nimport { onError, getDashboardFields } from './index';\n\n// Get \"all\" dashboards on startup\nexport const apiFetchDashboards = () =>\n    getInstance()\n        .then(d2 =>\n            d2.models.dashboard.list({\n                fields: [\n                    getDashboardFields().join(','),\n                    'dashboardItems[id]',\n                ].join(','),\n                paging: 'false',\n            })\n        )\n        .catch(onError);\n\n// Get more info about selected dashboard\nexport const apiFetchDashboard = id =>\n    getInstance()\n        .then(d2 =>\n            d2.models.dashboard.get(id, {\n                fields: arrayClean(\n                    getDashboardFields({\n                        withItems: true,\n                        withFavorite: { withDimensions: false },\n                    })\n                ).join(','),\n            })\n        )\n        .catch(onError);\n\n// Star dashboard\nexport const apiStarDashboard = (id, isStarred) => {\n    const url = `dashboards/${id}/favorite`;\n\n    getInstance().then(d2 => {\n        if (isStarred) {\n            d2.Api.getApi().post(url);\n        } else {\n            d2.Api.getApi().delete(url);\n        }\n    });\n};\n\nexport const apiDeleteDashboard = id => {\n    return getInstance()\n        .then(d2 => {\n            return d2.models.dashboards\n                .get(id)\n                .then(dashboard => dashboard.delete());\n        })\n        .catch(onError);\n};\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport Snackbar from '@material-ui/core/Snackbar';\nimport PropTypes from 'prop-types';\n\nimport { sGetSnackbar } from '../../reducers/snackbar';\nimport { acCloseSnackbar } from '../../actions/snackbar';\n\nconst LOADING_DASHBOARD = 'LOADING_DASHBOARD';\nexport const loadingDashboardMsg = { name: '', type: LOADING_DASHBOARD };\n\nconst SnackbarMessageContent = ({ message }) => {\n    if (typeof message === 'object') {\n        //future message types:  switch(message.type)\n        return (\n            <span>\n                Loading <span style={{ fontWeight: 800 }}>{message.name}</span>{' '}\n                dashboard\n            </span>\n        );\n    }\n    return message;\n};\n\nexport const SnackbarMessage = props => {\n    return (\n        <Snackbar\n            style={{ zIndex: 10001 }}\n            open={props.snackbarOpen}\n            message={<SnackbarMessageContent message={props.snackbarMessage} />}\n            autoHideDuration={props.snackbarDuration}\n            onClose={props.onCloseSnackbar}\n        />\n    );\n};\n\nconst mapStateToProps = state => {\n    const { message, duration, open } = sGetSnackbar(state);\n    return {\n        snackbarOpen: open,\n        snackbarMessage: message,\n        snackbarDuration: duration,\n    };\n};\n\nSnackbarMessage.propTypes = {\n    snackbarDuration: PropTypes.string,\n    snackbarMessage: PropTypes.object,\n    snackbarOpen: PropTypes.bool,\n    onCloseSnackbar: PropTypes.func,\n};\n\nexport default connect(\n    mapStateToProps,\n    {\n        onCloseSnackbar: acCloseSnackbar,\n    }\n)(SnackbarMessage);\n","import { getCustomDashboards, sGetDashboardById } from '../reducers/dashboards';\nimport { sGetIsEditing } from '../reducers/editDashboard';\nimport { sGetEditItemFiltersRoot } from '../reducers/editItemFilters';\nimport {\n    SET_SELECTED_ID,\n    SET_SELECTED_ISLOADING,\n    SET_SELECTED_SHOWDESCRIPTION,\n    sGetSelectedIsLoading,\n    sGetSelectedId,\n} from '../reducers/selected';\nimport { sGetUserUsername } from '../reducers/user';\n\nimport { acSetDashboardItems, acAppendDashboards } from './dashboards';\nimport { acClearEditItemFilters } from './editItemFilters';\nimport { acClearItemFilters, acSetItemFilters } from './itemFilters';\nimport { tGetMessages } from '../components/Item/MessagesItem/actions';\nimport { acReceivedSnackbarMessage, acCloseSnackbar } from './snackbar';\nimport { acAddVisualization } from './visualizations';\n\nimport { apiFetchDashboard } from '../api/dashboards';\nimport { storePreferredDashboardId } from '../api/localStorage';\n\nimport { withShape } from '../components/ItemGrid/gridUtil';\nimport { loadingDashboardMsg } from '../components/SnackbarMessage/SnackbarMessage';\nimport { extractFavorite } from '../components/Item/VisualizationItem/plugin';\n\nimport {\n    REPORT_TABLE,\n    CHART,\n    MAP,\n    EVENT_REPORT,\n    EVENT_CHART,\n    MESSAGES,\n} from '../modules/itemTypes';\nimport { orObject } from '../modules/util';\n\n// actions\n\nexport const acSetSelectedId = value => ({\n    type: SET_SELECTED_ID,\n    value,\n});\n\nexport const acSetSelectedIsLoading = value => ({\n    type: SET_SELECTED_ISLOADING,\n    value,\n});\n\nexport const acSetSelectedShowDescription = value => ({\n    type: SET_SELECTED_SHOWDESCRIPTION,\n    value,\n});\n\nexport const tLoadDashboard = id => async dispatch => {\n    try {\n        const dash = await apiFetchDashboard(id);\n\n        dispatch(acAppendDashboards(dash));\n\n        return Promise.resolve(dash);\n    } catch (err) {\n        console.log('Error: ', err);\n        return err;\n    }\n};\n\n// thunks\nexport const tSetSelectedDashboardById = id => async (dispatch, getState) => {\n    dispatch(acSetSelectedIsLoading(true));\n\n    const snackbarTimeout = setTimeout(() => {\n        const dashboardName = orObject(sGetDashboardById(getState(), id))\n            .displayName;\n        if (sGetSelectedIsLoading(getState()) && dashboardName) {\n            loadingDashboardMsg.name = dashboardName;\n\n            dispatch(\n                acReceivedSnackbarMessage({\n                    message: loadingDashboardMsg,\n                    open: true,\n                })\n            );\n        }\n    }, 500);\n\n    const onSuccess = selected => {\n        const customDashboard = getCustomDashboards(selected)[0];\n\n        dispatch(\n            acSetDashboardItems(withShape(customDashboard.dashboardItems))\n        );\n\n        storePreferredDashboardId(sGetUserUsername(getState()), id);\n\n        // add visualizations to store\n        customDashboard.dashboardItems.forEach(item => {\n            switch (item.type) {\n                case REPORT_TABLE:\n                case CHART:\n                case MAP:\n                case EVENT_REPORT:\n                case EVENT_CHART:\n                    dispatch(acAddVisualization(extractFavorite(item)));\n                    break;\n                case MESSAGES:\n                    dispatch(tGetMessages(id));\n                    break;\n                default:\n                    break;\n            }\n        });\n\n        const state = getState();\n        if (id === sGetSelectedId(state)) {\n            if (sGetIsEditing(state)) {\n                // disable filters when switching to edit mode\n                dispatch(acClearItemFilters());\n            } else {\n                // enable filters when switching to view mode\n                dispatch(acSetItemFilters(sGetEditItemFiltersRoot(state)));\n            }\n        } else {\n            // clear filters when switching dashboard\n            dispatch(acClearEditItemFilters());\n            dispatch(acClearItemFilters());\n        }\n\n        dispatch(acSetSelectedId(id));\n\n        dispatch(acSetSelectedIsLoading(false));\n\n        clearTimeout(snackbarTimeout);\n\n        dispatch(acCloseSnackbar());\n\n        return selected;\n    };\n\n    const onError = error => {\n        console.log('Error: ', error);\n        return error;\n    };\n\n    try {\n        const selected = await dispatch(tLoadDashboard(id));\n\n        return onSuccess(selected);\n    } catch (err) {\n        return onError(err);\n    }\n};\n","export const getPreferredDashboardId = username =>\n    localStorage.getItem(`dhis2.dashboard.current.${username}`) || undefined;\n\nexport const storePreferredDashboardId = (username, dashboardId) => {\n    localStorage.setItem(`dhis2.dashboard.current.${username}`, dashboardId);\n};\n","import { RECEIVED_MESSAGES } from '../../../reducers/messages';\nimport { getMessages } from '../../../api/messages';\n\nconst onError = (action, error) => {\n    console.log(`Error in action ${action}: ${error}`);\n    return error;\n};\n\nexport const receivedMessages = value => ({\n    type: RECEIVED_MESSAGES,\n    value,\n});\n\nexport const tGetMessages = () => async dispatch => {\n    try {\n        const messages = await getMessages();\n        const { messageConversations } = messages;\n\n        return dispatch(receivedMessages(messageConversations));\n    } catch (err) {\n        return onError('Get Messages', err);\n    }\n};\n","import { getInstance } from 'd2';\n\nconst onError = error => console.log('Error: ', error);\n\nconst saveDashboard = (dashboard, data) => {\n    const { name, description, dashboardItems } = data;\n\n    dashboard.name = name;\n    dashboard.description = description;\n    dashboard.dashboardItems = dashboardItems.map(item =>\n        Object.assign({}, item, { width: item.w, height: item.h })\n    );\n\n    return dashboard.save().then(msg => msg.response.uid);\n};\n\nexport const updateDashboard = data => {\n    return getInstance()\n        .then(d2 => {\n            return d2.models.dashboards\n                .get(data.id)\n                .then(dashboard => saveDashboard(dashboard, data));\n        })\n        .catch(onError);\n};\n\nexport const postDashboard = data => {\n    return getInstance().then(d2 => {\n        const dashboard = d2.models.dashboards.create();\n\n        return saveDashboard(dashboard, data);\n    });\n};\n","import { generateUid } from 'd2/uid';\n\nimport {\n    RECEIVED_EDIT_DASHBOARD,\n    START_NEW_DASHBOARD,\n    RECEIVED_NOT_EDITING,\n    RECEIVED_TITLE,\n    RECEIVED_DESCRIPTION,\n    RECEIVED_DASHBOARD_LAYOUT,\n    ADD_DASHBOARD_ITEM,\n    UPDATE_DASHBOARD_ITEM,\n    REMOVE_DASHBOARD_ITEM,\n} from '../reducers/editDashboard';\nimport { sGetEditDashboardRoot } from '../reducers/editDashboard';\nimport { updateDashboard, postDashboard } from '../api/editDashboard';\nimport { tSetSelectedDashboardById } from '../actions/selected';\nimport { NEW_ITEM_SHAPE } from '../components/ItemGrid/gridUtil';\nimport {\n    itemTypeMap,\n    isSpacerType,\n    TEXT,\n    emptyTextItemContent,\n    isTextType,\n} from '../modules/itemTypes';\n\nconst onError = error => {\n    console.log('Error (Saving Dashboard): ', error);\n    return error;\n};\n\n// actions\n\nexport const acSetEditDashboard = (dashboard, items) => {\n    const val = {\n        ...dashboard,\n        dashboardItems: items,\n    };\n\n    return {\n        type: RECEIVED_EDIT_DASHBOARD,\n        value: val,\n    };\n};\n\nexport const acSetEditNewDashboard = () => ({\n    type: START_NEW_DASHBOARD,\n});\n\nexport const acClearEditDashboard = () => ({\n    type: RECEIVED_NOT_EDITING,\n});\n\nexport const acSetDashboardTitle = value => ({\n    type: RECEIVED_TITLE,\n    value,\n});\n\nexport const acSetDashboardDescription = value => ({\n    type: RECEIVED_DESCRIPTION,\n    value,\n});\n\nexport const acUpdateDashboardLayout = value => ({\n    type: RECEIVED_DASHBOARD_LAYOUT,\n    value,\n});\n\nexport const acAddDashboardItem = item => {\n    const type = item.type;\n    delete item.type;\n    const itemPropName = itemTypeMap[type].propName;\n\n    return {\n        type: ADD_DASHBOARD_ITEM,\n        value: {\n            id: generateUid(),\n            type,\n            [itemPropName]: item.content,\n            ...NEW_ITEM_SHAPE,\n        },\n    };\n};\n\nexport const acUpdateDashboardItem = item => ({\n    type: UPDATE_DASHBOARD_ITEM,\n    value: item,\n});\n\nexport const acRemoveDashboardItem = value => ({\n    type: REMOVE_DASHBOARD_ITEM,\n    value,\n});\n\n// thunks\n\nexport const tSaveDashboard = () => async (dispatch, getState) => {\n    const dashboard = sGetEditDashboardRoot(getState());\n\n    const dashboardItems = dashboard.dashboardItems.map(item => {\n        const text = isTextType(item)\n            ? item.text || emptyTextItemContent\n            : null;\n\n        const type = isSpacerType(item) ? TEXT : item.type;\n\n        return {\n            ...item,\n            ...(text ? { text } : {}),\n            type,\n        };\n    });\n\n    const dashboardToSave = {\n        ...dashboard,\n        dashboardItems,\n    };\n\n    try {\n        const dashboardId = dashboardToSave.id\n            ? await updateDashboard(dashboardToSave)\n            : await postDashboard(dashboardToSave);\n\n        dispatch(acClearEditDashboard());\n        await dispatch(tSetSelectedDashboardById(dashboardId));\n\n        return Promise.resolve(dashboardId);\n    } catch (error) {\n        onError(error);\n    }\n};\n","import {\n    SET_DASHBOARDS,\n    ADD_DASHBOARDS,\n    SET_DASHBOARD_STARRED,\n    SET_DASHBOARD_DISPLAY_NAME,\n    SET_DASHBOARD_ITEMS,\n} from '../reducers/dashboards';\nimport {\n    getCustomDashboards,\n    sGetDashboardById,\n    sGetDashboardsSortedByStarred,\n} from '../reducers/dashboards';\nimport { sGetUserUsername } from '../reducers/user';\nimport { tSetSelectedDashboardById, acSetSelectedId } from './selected';\nimport { acClearEditDashboard } from './editDashboard';\nimport {\n    apiFetchDashboards,\n    apiStarDashboard,\n    apiDeleteDashboard,\n} from '../api/dashboards';\nimport { getPreferredDashboardId } from '../api/localStorage';\nimport { arrayToIdMap } from '../modules/util';\n\n// actions\n\nexport const acSetDashboards = dashboards => ({\n    type: SET_DASHBOARDS,\n    value: arrayToIdMap(getCustomDashboards(dashboards)),\n});\n\nexport const acAppendDashboards = dashboards => ({\n    type: ADD_DASHBOARDS,\n    value: arrayToIdMap(getCustomDashboards(dashboards)),\n});\n\nexport const acSetDashboardStarred = (dashboardId, isStarred) => ({\n    type: SET_DASHBOARD_STARRED,\n    dashboardId: dashboardId,\n    value: isStarred,\n});\n\nexport const acSetDashboardDisplayName = (dashboardId, value) => ({\n    type: SET_DASHBOARD_DISPLAY_NAME,\n    dashboardId,\n    value,\n});\n\nexport const acSetDashboardItems = value => ({\n    type: SET_DASHBOARD_ITEMS,\n    value,\n});\n\n// thunks\n\nexport const tFetchDashboards = () => async dispatch => {\n    const collection = await apiFetchDashboards();\n    dispatch(acSetDashboards(collection.toArray()));\n};\n\nexport const tSelectDashboard = id => async (dispatch, getState) => {\n    const onError = error => {\n        console.log('Error (apiFetchDashboards): ', error);\n        return error;\n    };\n\n    try {\n        const state = getState();\n\n        let dashboardToSelect = null;\n        if (id) {\n            dashboardToSelect = sGetDashboardById(state, id) || null;\n        } else {\n            const preferredId = getPreferredDashboardId(\n                sGetUserUsername(state)\n            );\n            const dash = sGetDashboardById(state, preferredId);\n            dashboardToSelect =\n                preferredId && dash\n                    ? dash\n                    : sGetDashboardsSortedByStarred(state)[0];\n        }\n\n        if (dashboardToSelect) {\n            dispatch(tSetSelectedDashboardById(dashboardToSelect.id));\n        } else {\n            dispatch(acSetSelectedId());\n        }\n    } catch (err) {\n        return onError(err);\n    }\n};\n\nexport const tStarDashboard = (id, isStarred) => async dispatch => {\n    const onSuccess = id => {\n        dispatch(acSetDashboardStarred(id, isStarred));\n        return id;\n    };\n\n    const onError = error => {\n        console.log('Error (apiStarDashboard): ', error);\n        return error;\n    };\n    try {\n        await apiStarDashboard(id, isStarred);\n        return onSuccess(id);\n    } catch (err) {\n        return onError(err);\n    }\n};\n\nexport const tDeleteDashboard = id => async dispatch => {\n    try {\n        await apiDeleteDashboard(id);\n        dispatch(acClearEditDashboard());\n        dispatch(acSetSelectedId());\n        dispatch(acSetDashboardItems([]));\n\n        await dispatch(tFetchDashboards());\n\n        return Promise.resolve();\n    } catch (err) {\n        console.log('Error (deleteDashboard): ', err);\n        return err;\n    }\n};\n","/** @module reducers/controlBar */\nimport { combineReducers } from 'redux';\nimport { validateReducer } from '../modules/util';\n\nexport const SET_CONTROLBAR_USER_ROWS = 'SET_CONTROLBAR_USER_ROWS';\n\nexport const DEFAULT_STATE_CONTROLBAR_ROWS = 1;\n\nconst userRows = (state = DEFAULT_STATE_CONTROLBAR_ROWS, action) => {\n    switch (action.type) {\n        case SET_CONTROLBAR_USER_ROWS:\n            return validateReducer(action.value, DEFAULT_STATE_CONTROLBAR_ROWS);\n        default:\n            return state;\n    }\n};\n\nexport default combineReducers({\n    userRows,\n});\n\n/**\n * Selectors that point to specific props in the state object\n * @function\n * @param {Object} state\n * @returns {Object}\n */\nexport const sGetControlBarRoot = state => state.controlBar;\n\n// Selector dependency level 2\n\nexport const sGetControlBarUserRows = state =>\n    sGetControlBarRoot(state).userRows;\n","import { getInstance } from 'd2';\nimport { DEFAULT_STATE_CONTROLBAR_ROWS } from '../reducers/controlBar';\n\nconst NAMESPACE = 'dashboard';\nconst KEY = 'controlBarRows';\n\nconst hasNamespace = async d2 => await d2.currentUser.dataStore.has(NAMESPACE);\n\nconst getNamespace = async (d2, hasNamespace) =>\n    hasNamespace\n        ? await d2.currentUser.dataStore.get(NAMESPACE)\n        : await d2.currentUser.dataStore.create(NAMESPACE);\n\nexport const apiGetControlBarRows = async () => {\n    const d2 = await getInstance();\n    const namespace = await getNamespace(d2, await hasNamespace(d2));\n    const hasKey = namespace.keys && namespace.keys.find(key => key === KEY);\n\n    if (hasKey) {\n        return await namespace.get(KEY);\n    } else {\n        await apiPostControlBarRows(DEFAULT_STATE_CONTROLBAR_ROWS, namespace);\n        console.log(\n            '(These errors to /userDataStore/dashboard can be ignored)'\n        );\n        return DEFAULT_STATE_CONTROLBAR_ROWS;\n    }\n};\n\nexport const apiPostControlBarRows = async (rows, namespace) => {\n    const d2 = await getInstance();\n    const ns = namespace || (await getNamespace(d2, hasNamespace));\n\n    ns.set(KEY, rows);\n};\n","import { SET_CONTROLBAR_USER_ROWS } from '../reducers/controlBar';\nimport { apiGetControlBarRows } from '../api/controlBar';\n\n// actions\n\nexport const acSetControlBarUserRows = rows => ({\n    type: SET_CONTROLBAR_USER_ROWS,\n    value: rows,\n});\n\n// thunks\n\nexport const tSetControlBarRows = () => async dispatch => {\n    const onSuccess = rows => {\n        dispatch(acSetControlBarUserRows(rows));\n    };\n\n    const onError = error => {\n        console.log('Error (apiGetControlBarRows): ', error);\n        return error;\n    };\n\n    try {\n        const controlBarRows = await apiGetControlBarRows();\n        return onSuccess(controlBarRows);\n    } catch (err) {\n        return onError(err);\n    }\n};\n","import {\n    getDimensionById,\n    DIMENSION_ID_PERIOD,\n    DIMENSION_ID_ORGUNIT,\n} from '@dhis2/analytics';\n\nexport const SET_DIMENSIONS = 'SET_DIMENSIONS';\nexport const DEFAULT_DIMENSIONS = [\n    getDimensionById(DIMENSION_ID_PERIOD),\n    getDimensionById(DIMENSION_ID_ORGUNIT),\n];\n\nexport default (state = DEFAULT_DIMENSIONS, action) => {\n    switch (action.type) {\n        case SET_DIMENSIONS: {\n            return [...DEFAULT_DIMENSIONS, ...action.value];\n        }\n        default:\n            return state;\n    }\n};\n\nexport const sGetDimensions = state => state.dimensions;\n","export const SET_SETTINGS = 'SET_SETTINGS';\nexport const ADD_SETTINGS = 'ADD_SETTINGS';\n\nexport const DEFAULT_SETTINGS = {\n    keyDateFormat: 'yyyy-MM-dd',\n    keyAnalysisRelativePeriod: 'LAST_12_MONTHS',\n    keyAnalysisDigitGroupSeparator: 'SPACE',\n    displayNameProperty: 'displayName',\n    uiLocale: 'en',\n    rootOrganisationUnit: {},\n};\n\nexport default (state = DEFAULT_SETTINGS, action) => {\n    switch (action.type) {\n        case SET_SETTINGS: {\n            return Object.assign({}, action.value);\n        }\n        case ADD_SETTINGS: {\n            return {\n                ...state,\n                ...action.value,\n            };\n        }\n        default:\n            return state;\n    }\n};\n\n// Selectors\n\nexport const sGetSettings = state => state.settings;\n\nexport const sGetSettingsDisplayNameProperty = state =>\n    sGetSettings(state).displayNameProperty;\n\nexport const sGetRootOrgUnit = state =>\n    sGetSettings(state).rootOrganisationUnit;\n\nexport const sGetRelativePeriod = state =>\n    sGetSettings(state).keyAnalysisRelativePeriod;\n\nexport const sGetUiLocale = state => sGetSettings(state).uiLocale;\n","import { SET_DIMENSIONS } from '../reducers/dimensions';\nimport { apiFetchDimensions } from '@dhis2/analytics';\nimport { sGetSettingsDisplayNameProperty } from '../reducers/settings';\n\nexport const acSetDimensions = dimensions => ({\n    type: SET_DIMENSIONS,\n    value: dimensions,\n});\n\nexport const tSetDimensions = d2 => async (dispatch, getState) => {\n    const onSuccess = dimensions => {\n        dispatch(acSetDimensions(dimensions));\n    };\n\n    const onError = error => {\n        console.log('Error (apiFetchDimensions): ', error);\n        return error;\n    };\n\n    try {\n        const displayNameProp = sGetSettingsDisplayNameProperty(getState());\n        const dimensions = await apiFetchDimensions(d2, displayNameProp);\n\n        // filter out CATEGORY that are not of type ATTRIBUTE\n        const filteredDimensions = dimensions.filter(\n            dim =>\n                dim.dimensionType !== 'CATEGORY' ||\n                (dim.dimensionType === 'CATEGORY' &&\n                    dim.dataDimensionType === 'ATTRIBUTE')\n        );\n        return onSuccess(filteredDimensions);\n    } catch (err) {\n        return onError(err);\n    }\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport i18n from '@dhis2/d2-i18n';\nimport { colors } from '@dhis2/ui-core';\nimport { withStyles } from '@material-ui/core/styles';\n\nexport const SHOWMORE_BAR_HEIGHT = 16;\n\nconst styles = {\n    showMore: {\n        color: colors.grey700,\n        cursor: 'pointer',\n        fontSize: 11,\n        paddingTop: 5,\n        '&:hover': {\n            textDecoration: 'underline',\n        },\n    },\n    disabled: {\n        paddingTop: 5,\n        color: colors.grey500,\n        fontSize: 11,\n        cursor: 'not-allowed',\n    },\n};\n\nexport const ShowMoreButton = ({ onClick, isMaxHeight, classes, disabled }) => {\n    return (\n        <div style={{ textAlign: 'center' }}>\n            {disabled ? (\n                <div className={classes.disabled}>{i18n.t('Show more')}</div>\n            ) : (\n                <div className={classes.showMore} onClick={onClick}>\n                    {isMaxHeight ? i18n.t('Show less') : i18n.t('Show more')}\n                </div>\n            )}\n        </div>\n    );\n};\n\nShowMoreButton.propTypes = {\n    classes: PropTypes.object,\n    disabled: PropTypes.bool,\n    isMaxHeight: PropTypes.bool,\n    onClick: PropTypes.func,\n};\n\nexport default withStyles(styles)(ShowMoreButton);\n","import { SHOWMORE_BAR_HEIGHT } from './ShowMoreButton';\n\nexport const CONTROL_BAR_ROW_HEIGHT = 40;\nexport const FIRST_ROW_PADDING_HEIGHT = 10;\nexport const MIN_ROW_COUNT = 1;\n\nexport const HEADERBAR_HEIGHT = 48;\n\nconst CONTROL_BAR_OUTER_HEIGHT_DIFF =\n    FIRST_ROW_PADDING_HEIGHT + SHOWMORE_BAR_HEIGHT - 2; // 2 pixel \"adjustment\"\n\nexport const getRowsHeight = rows => {\n    return rows * CONTROL_BAR_ROW_HEIGHT;\n};\n\nexport const getNumRowsFromHeight = height => {\n    return Math.floor(\n        (height - CONTROL_BAR_OUTER_HEIGHT_DIFF) / CONTROL_BAR_ROW_HEIGHT\n    );\n};\n\nexport const getTopOffset = rows => {\n    return HEADERBAR_HEIGHT + getControlBarHeight(rows, false);\n};\n\nexport const getControlBarHeight = rows => {\n    return getRowsHeight(rows) + CONTROL_BAR_OUTER_HEIGHT_DIFF;\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { colors } from '@dhis2/ui-core';\nimport { HEADERBAR_HEIGHT } from './controlBarDimensions';\n\nimport classes from './styles/ControlBar.module.css';\n\nconst DRAG_HANDLE_HEIGHT = 7;\n\nclass ControlBar extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            dragging: false,\n        };\n    }\n\n    onStartDrag = () => {\n        this.setState({ dragging: true });\n        window.addEventListener('mousemove', this.onDrag);\n        window.addEventListener('mouseup', this.onEndDrag);\n    };\n\n    onDrag = event => {\n        event.preventDefault();\n        event.stopPropagation();\n\n        const newHeight = event.clientY;\n\n        if (\n            this.props.onChangeHeight &&\n            newHeight !== this.props.height &&\n            newHeight > 0\n        ) {\n            requestAnimationFrame(() => {\n                this.props.onChangeHeight(newHeight);\n            });\n        }\n    };\n\n    onEndDrag = () => {\n        this.setState({ dragging: false });\n        window.removeEventListener('mousemove', this.onDrag);\n        window.removeEventListener('mouseup', this.onEndDrag);\n\n        if (this.props.onEndDrag) {\n            this.props.onEndDrag();\n        }\n    };\n\n    renderDragHandle() {\n        return typeof this.props.onChangeHeight === 'function' ? (\n            <div\n                className={classes.draghandle}\n                style={{ height: DRAG_HANDLE_HEIGHT }}\n                onMouseDown={this.onStartDrag}\n            />\n        ) : null;\n    }\n\n    render() {\n        const height = Math.max(this.props.height, 0) + DRAG_HANDLE_HEIGHT;\n\n        const rootStyle = Object.assign(\n            {\n                height,\n                top: HEADERBAR_HEIGHT,\n                backgroundColor: this.props.editMode\n                    ? colors.yellow050\n                    : colors.white,\n                paddingBottom: DRAG_HANDLE_HEIGHT,\n            },\n            // Disable animations while dragging\n            this.state.dragging ? { transition: 'none' } : {}\n        );\n\n        return (\n            <div style={rootStyle} className={classes.root}>\n                <div className={classes.content}>{this.props.children}</div>\n                {this.renderDragHandle()}\n            </div>\n        );\n    }\n}\n\nControlBar.propTypes = {\n    /**\n     * The height of the control bar in number of lines. Must be a positive integer.\n     */\n    children: PropTypes.node.isRequired,\n\n    /**\n     * If true, the background color of the control bar changes to indicate that edit mode is active.\n     */\n    editMode: PropTypes.bool.isRequired,\n\n    /**\n     * Callback function that is called when the control bar is resized.\n     * The callback receives one argument: The new height in pixels.\n     *\n     * If no callback is specified the control bar will not have a drag handle.\n     */\n    height: PropTypes.number.isRequired,\n\n    /**\n     * Callback function that is called when the control bar is dropped after being dragged.\n     * The callback receives one argument: The new height in pixels.\n     *\n     * Ignored if no \"onChangeHeight\" function is provided.\n     */\n    onChangeHeight: PropTypes.func,\n\n    /**\n     * The contents of the control bar.\n     */\n    onEndDrag: PropTypes.func,\n};\n\nControlBar.defaultProps = {\n    onChangeHeight: null,\n    onEndDrag: null,\n};\n\nexport default ControlBar;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst StarIcon = ({ className }) => (\n    <svg\n        className={className}\n        xmlns=\"http://www.w3.org/2000/svg\"\n        viewBox=\"0 0 24 24\"\n    >\n        <path d=\"M0 0h24v24H0z\" fill=\"none\" />\n        <path d=\"M12 17.27L18.18 21l-1.64-7.03L22 9.24l-7.19-.61L12 2 9.19 8.63 2 9.24l5.46 4.73L5.82 21z\" />\n        <path d=\"M0 0h24v24H0z\" fill=\"none\" />\n    </svg>\n);\n\nStarIcon.propTypes = {\n    className: PropTypes.string,\n};\n\nexport default StarIcon;\n","import { getInstance } from 'd2';\n\nexport const apiPostDataStatistics = async (eventType, id) => {\n    const d2 = await getInstance();\n    const url = `dataStatistics?eventType=${eventType}&favorite=${id}`;\n\n    d2.Api.getApi().post(url);\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport { Chip, colors } from '@dhis2/ui-core';\nimport { Link } from 'react-router-dom';\nimport debounce from 'lodash/debounce';\n\nimport StarIcon from '../../icons/Star';\nimport { apiPostDataStatistics } from '../../api/dataStatistics';\n\nconst styles = {\n    chip: {\n        margin: '3px',\n    },\n    link: {\n        color: colors.grey600,\n        display: 'inline-block',\n        textDecoration: 'none',\n        verticalAlign: 'top',\n    },\n    icon: {\n        height: '20px',\n        marginTop: '2px',\n        width: '20px',\n    },\n    selected: {\n        fill: colors.white,\n    },\n    unselected: {\n        fill: colors.grey700,\n    },\n};\n\nexport const DashboardItemChip = ({\n    starred,\n    selected,\n    label,\n    dashboardId,\n    classes,\n}) => {\n    const chipProps = {\n        selected,\n        className: classes.chip,\n    };\n\n    if (starred) {\n        const selectedState = selected ? classes.selected : classes.unselected;\n        chipProps.icon = (\n            <StarIcon className={`${classes.icon} ${selectedState}`} />\n        );\n    }\n\n    return (\n        <Link\n            className={classes.link}\n            to={`/${dashboardId}`}\n            onClick={debounce(\n                () => apiPostDataStatistics('DASHBOARD_VIEW', dashboardId),\n                500\n            )}\n        >\n            <Chip {...chipProps}>{label}</Chip>\n        </Link>\n    );\n};\n\nDashboardItemChip.propTypes = {\n    dashboardId: PropTypes.string.isRequired,\n    label: PropTypes.string.isRequired,\n    selected: PropTypes.bool.isRequired,\n    starred: PropTypes.bool.isRequired,\n    classes: PropTypes.object,\n};\n\nexport default withStyles(styles)(DashboardItemChip);\n","import React from 'react';\nimport { colors } from '@dhis2/ui-core';\n\nconst AddCircleIcon = () => (\n    <svg\n        xmlns=\"http://www.w3.org/2000/svg\"\n        width=\"32\"\n        height=\"32\"\n        fill={colors.teal600}\n        viewBox=\"0 0 24 24\"\n    >\n        <path d=\"M12 2C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2zm4 11h-3v3c0 .55-.45 1-1 1s-1-.45-1-1v-3H8c-.55 0-1-.45-1-1s.45-1 1-1h3V8c0-.55.45-1 1-1s1 .45 1 1v3h3c.55 0 1 .45 1 1s-.45 1-1 1z\" />\n    </svg>\n);\n\nexport default AddCircleIcon;\n","import React from 'react';\nimport { colors } from '@dhis2/ui-core';\nimport PropTypes from 'prop-types';\n\nconst ClearIcon = ({ className }) => (\n    <svg\n        className={className}\n        fill={colors.grey800}\n        xmlns=\"http://www.w3.org/2000/svg\"\n        viewBox=\"0 0 24 24\"\n    >\n        <path d=\"M19 6.41L17.59 5 12 10.59 6.41 5 5 6.41 10.59 12 5 17.59 6.41 19 12 13.41 17.59 19 19 17.59 13.41 12z\" />\n        <path d=\"M0 0h24v24H0z\" fill=\"none\" />\n    </svg>\n);\n\nClearIcon.propTypes = {\n    className: PropTypes.string,\n};\n\nexport default ClearIcon;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport ClearIcon from '../../icons/Clear';\n\nimport classes from './styles/ClearButton.module.css';\n\nexport const ClearButton = ({ onClear }) => (\n    <button className={classes.button} onClick={onClear}>\n        <span>\n            <ClearIcon className={classes.icon} color=\"action\" />\n        </span>\n    </button>\n);\n\nClearButton.propTypes = {\n    onClear: PropTypes.func.isRequired,\n};\n\nexport default ClearButton;\n","import { combineReducers } from 'redux';\nimport { validateReducer } from '../modules/util';\n\nexport const SET_DASHBOARDS_FILTER_NAME = 'SET_DASHBOARDS_FILTER_NAME';\nexport const SET_DASHBOARDS_FILTER_OWNER = 'SET_DASHBOARDS_FILTER_OWNER';\nexport const SET_DASHBOARDS_FILTER_ORDER = 'SET_DASHBOARDS_FILTER_ORDER';\n\nexport const ownerData = [\n    { id: 'ALL', value: 'All users' },\n    { id: 'ME', value: 'Created by me' },\n    { id: 'OTHERS', value: 'Created by others' },\n];\n\nexport const orderData = [\n    { id: 'NAME:ASC', value: 'Name (asc)' },\n    { id: 'NAME:ASC', value: 'Name (desc)' },\n    { id: 'ITEMS:ASC', value: 'Number of items (asc)' },\n    { id: 'ITEMS:ASC', value: 'Number of items (desc)' },\n    { id: 'CREATED:ASC', value: 'Created date (asc)' },\n    { id: 'CREATED:ASC', value: 'Created date (desc)' },\n];\n\nexport const DEFAULT_STATE_DASHBOARDS_FILTER_NAME = '';\nexport const DEFAULT_STATE_DASHBOARDS_FILTER_OWNER = ownerData[0].id;\nexport const DEFAULT_STATE_DASHBOARDS_FILTER_ORDER = orderData[0].id;\n\nconst name = (state = DEFAULT_STATE_DASHBOARDS_FILTER_NAME, action) => {\n    switch (action.type) {\n        case SET_DASHBOARDS_FILTER_NAME:\n            return validateReducer(\n                action.value,\n                DEFAULT_STATE_DASHBOARDS_FILTER_NAME\n            );\n        default:\n            return state;\n    }\n};\n\nconst owner = (state = DEFAULT_STATE_DASHBOARDS_FILTER_OWNER, action) => {\n    switch (action.type) {\n        case SET_DASHBOARDS_FILTER_OWNER:\n            return validateReducer(\n                action.value,\n                DEFAULT_STATE_DASHBOARDS_FILTER_NAME\n            );\n        default:\n            return state;\n    }\n};\n\nconst order = (state = DEFAULT_STATE_DASHBOARDS_FILTER_ORDER, action) => {\n    switch (action.type) {\n        case SET_DASHBOARDS_FILTER_ORDER:\n            return validateReducer(\n                action.value,\n                DEFAULT_STATE_DASHBOARDS_FILTER_ORDER\n            );\n        default:\n            return state;\n    }\n};\n\nexport default combineReducers({\n    name,\n    owner,\n    order,\n});\n\n// selectors\n\nexport const sGetDashboardsFilterRoot = state => state.dashboardsFilter;\n\n// selector dependency level 2\n\nexport const sGetFilterName = state => sGetDashboardsFilterRoot(state).name;\nexport const sGetFilterOwner = state => sGetDashboardsFilterRoot(state).owner;\nexport const sGetFilterOrder = state => sGetDashboardsFilterRoot(state).order;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport i18n from '@dhis2/d2-i18n';\nimport InputField from '@material-ui/core/Input';\nimport InputAdornment from '@material-ui/core/InputAdornment';\nimport SearchIcon from '@material-ui/icons/Search';\nimport { colors } from '@dhis2/ui-core';\n\nimport ClearButton from './ClearButton';\nimport { DEFAULT_STATE_DASHBOARDS_FILTER_NAME } from '../../reducers/dashboardsFilter';\n\nexport const KEYCODE_ENTER = 13;\nexport const KEYCODE_ESCAPE = 27;\n\nconst styles = {\n    filterField: {\n        fontSize: '14px',\n        width: '200px',\n        height: '30px',\n        top: '-4px',\n    },\n    searchIcon: {\n        color: colors.grey700,\n        width: '20px',\n        height: '20px',\n    },\n};\n\nexport class Filter extends Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            value: DEFAULT_STATE_DASHBOARDS_FILTER_NAME,\n        };\n    }\n\n    componentWillReceiveProps(nextProps) {\n        this.setState({\n            value: nextProps.name,\n        });\n    }\n\n    setFilterValue = event => {\n        event.preventDefault();\n\n        this.props.onChangeName(event.target.value);\n    };\n\n    handleKeyUp = event => {\n        switch (event.keyCode) {\n            case KEYCODE_ENTER:\n                this.props.onKeypressEnter();\n                break;\n            case KEYCODE_ESCAPE:\n                this.props.onChangeName();\n                break;\n            default:\n                break;\n        }\n    };\n\n    render() {\n        const { classes, name, onChangeName } = this.props;\n\n        const startAdornment = (\n            <InputAdornment position=\"start\">\n                <SearchIcon className={classes.searchIcon} />\n            </InputAdornment>\n        );\n\n        const endAdornment =\n            name !== '' && name !== null ? (\n                <InputAdornment position=\"end\">\n                    <ClearButton onClear={() => onChangeName()} />\n                </InputAdornment>\n            ) : null;\n\n        return (\n            <InputField\n                className={classes.filterField}\n                placeholder={i18n.t('Search for a dashboard')}\n                startAdornment={startAdornment}\n                endAdornment={endAdornment}\n                value={this.state.value}\n                onChange={this.setFilterValue}\n                onKeyUp={this.handleKeyUp}\n            />\n        );\n    }\n}\n\nFilter.propTypes = {\n    classes: PropTypes.object,\n    name: PropTypes.string,\n    onChangeName: PropTypes.func,\n    onKeypressEnter: PropTypes.func,\n};\n\nFilter.defaultProps = {\n    name: '',\n    onChangeName: Function.prototype,\n};\n\nexport default withStyles(styles)(Filter);\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { Link, withRouter } from 'react-router-dom';\nimport ControlBar from './ControlBar';\nimport arraySort from 'd2-utilizr/lib/arraySort';\nimport PropTypes from 'prop-types';\n\nimport Chip from './DashboardItemChip';\nimport AddCircleIcon from '../../icons/AddCircle';\nimport Filter from './Filter';\nimport ShowMoreButton from './ShowMoreButton';\nimport {\n    FIRST_ROW_PADDING_HEIGHT,\n    MIN_ROW_COUNT,\n    getRowsHeight,\n    getControlBarHeight,\n    getNumRowsFromHeight,\n} from './controlBarDimensions';\nimport { sGetControlBarUserRows } from '../../reducers/controlBar';\nimport { sGetAllDashboards } from '../../reducers/dashboards';\nimport { sGetFilterName } from '../../reducers/dashboardsFilter';\nimport { sGetSelectedId } from '../../reducers/selected';\nimport { acSetControlBarUserRows } from '../../actions/controlBar';\nimport { acSetFilterName } from '../../actions/dashboardsFilter';\nimport { orObject, orArray } from '../../modules/util';\nimport { apiPostControlBarRows } from '../../api/controlBar';\n\nimport classes from './styles/DashboardsBar.module.css';\n\nexport const MAX_ROW_COUNT = 10;\n\nexport class DashboardsBar extends Component {\n    state = {\n        rows: MIN_ROW_COUNT,\n    };\n\n    setInitialDashboardState = rows => {\n        this.setState({ rows, isMaxHeight: rows === MAX_ROW_COUNT });\n    };\n\n    componentDidMount() {\n        this.setInitialDashboardState(this.props.userRows);\n    }\n\n    componentWillReceiveProps(nextProps) {\n        this.setInitialDashboardState(nextProps.userRows);\n    }\n\n    onChangeHeight = newHeight => {\n        const adjustedHeight = newHeight - 52; // don't rush the transition to a bigger row count\n        const newRows = Math.max(\n            MIN_ROW_COUNT,\n            getNumRowsFromHeight(adjustedHeight)\n        );\n\n        if (newRows !== this.state.rows) {\n            const newRowCount = Math.min(newRows, MAX_ROW_COUNT);\n\n            this.props.onChangeHeight(newRowCount);\n        }\n    };\n\n    onEndDrag = () => {\n        return apiPostControlBarRows(this.state.rows);\n    };\n\n    onToggleMaxHeight = () => {\n        const rows =\n            this.state.rows === MAX_ROW_COUNT\n                ? this.props.userRows\n                : MAX_ROW_COUNT;\n\n        this.setState({ rows, isMaxHeight: !this.state.isMaxHeight });\n    };\n\n    onSelectDashboard = () => {\n        this.props.history.push(`/${this.props.dashboards[0].id}`);\n    };\n\n    render() {\n        const { dashboards, name, selectedId, onChangeFilterName } = this.props;\n\n        const rowCount = this.state.isMaxHeight\n            ? MAX_ROW_COUNT\n            : this.state.rows;\n        const controlBarHeight = getControlBarHeight(rowCount);\n        const contentWrapperStyle = {\n            padding: `${FIRST_ROW_PADDING_HEIGHT}px 6px 0 6px`,\n            overflowY: this.state.isMaxHeight ? 'auto' : 'hidden',\n            height: getRowsHeight(rowCount) + FIRST_ROW_PADDING_HEIGHT,\n        };\n\n        return (\n            <ControlBar\n                height={controlBarHeight}\n                onChangeHeight={this.onChangeHeight}\n                onEndDrag={this.onEndDrag}\n                editMode={false}\n            >\n                <div style={contentWrapperStyle}>\n                    <div className={classes.leftControls}>\n                        <Link\n                            style={{\n                                display: 'inline-block',\n                                textDecoration: 'none',\n                                marginRight: 10,\n                                position: 'relative',\n                                top: '2px',\n                            }}\n                            to={'/new'}\n                        >\n                            <AddCircleIcon />\n                        </Link>\n                        <Filter\n                            name={name}\n                            onChangeName={onChangeFilterName}\n                            onKeypressEnter={this.onSelectDashboard}\n                        />\n                    </div>\n                    {orArray(dashboards).map(dashboard => (\n                        <Chip\n                            key={dashboard.id}\n                            label={dashboard.displayName}\n                            starred={dashboard.starred}\n                            dashboardId={dashboard.id}\n                            selected={dashboard.id === selectedId}\n                        />\n                    ))}\n                </div>\n                <ShowMoreButton\n                    onClick={this.onToggleMaxHeight}\n                    isMaxHeight={this.state.isMaxHeight}\n                    disabled={this.props.userRows === MAX_ROW_COUNT}\n                />\n            </ControlBar>\n        );\n    }\n}\n\nconst mapStateToProps = state => ({\n    dashboards: sGetAllDashboards(state),\n    name: sGetFilterName(state),\n    userRows: sGetControlBarUserRows(state),\n    selectedId: sGetSelectedId(state),\n});\n\nconst mapDispatchToProps = {\n    onChangeHeight: acSetControlBarUserRows,\n    onChangeFilterName: acSetFilterName,\n};\nconst mergeProps = (stateProps, dispatchProps, ownProps) => {\n    const dashboards = Object.values(orObject(stateProps.dashboards));\n    const displayDashboards = arraySort(\n        dashboards.filter(d =>\n            d.displayName.toLowerCase().includes(stateProps.name.toLowerCase())\n        ),\n        'ASC',\n        'displayName'\n    );\n\n    return {\n        ...stateProps,\n        ...ownProps,\n        ...dispatchProps,\n        dashboards: [\n            ...displayDashboards.filter(d => d.starred),\n            ...displayDashboards.filter(d => !d.starred),\n        ],\n    };\n};\n\nDashboardsBar.propTypes = {\n    dashboards: PropTypes.array,\n    history: PropTypes.object,\n    name: PropTypes.string,\n    selectedId: PropTypes.string,\n    userRows: PropTypes.number,\n    onChangeFilterName: PropTypes.func,\n    onChangeHeight: PropTypes.func,\n};\n\nexport default withRouter(\n    connect(\n        mapStateToProps,\n        mapDispatchToProps,\n        mergeProps\n    )(DashboardsBar)\n);\n","import {\n    SET_DASHBOARDS_FILTER_NAME,\n    SET_DASHBOARDS_FILTER_OWNER,\n    SET_DASHBOARDS_FILTER_ORDER,\n} from '../reducers/dashboardsFilter';\n\n// actions\n\nexport const acSetFilterName = value => ({\n    type: SET_DASHBOARDS_FILTER_NAME,\n    value,\n});\n\nexport const acSetFilterOwner = value => ({\n    type: SET_DASHBOARDS_FILTER_OWNER,\n    value,\n});\n\nexport const acSetFilterOrder = value => ({\n    type: SET_DASHBOARDS_FILTER_ORDER,\n    value,\n});\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\n\nimport {\n    getTopOffset,\n    MIN_ROW_COUNT,\n} from '../ControlBar/controlBarDimensions';\nimport { sGetControlBarUserRows } from '../../reducers/controlBar';\n\nconst DashboardVerticalOffset = props => {\n    const rows = props.editMode ? MIN_ROW_COUNT : props.userRows;\n    const marginTop = getTopOffset(rows);\n\n    return <div className=\"page-container-top-margin\" style={{ marginTop }} />;\n};\n\nconst mapStateToProps = state => ({\n    userRows: sGetControlBarUserRows(state),\n});\n\nDashboardVerticalOffset.propTypes = {\n    editMode: PropTypes.bool,\n    userRows: PropTypes.number,\n};\n\nexport default connect(mapStateToProps)(DashboardVerticalOffset);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { MenuItem, colors } from '@dhis2/ui-core';\n\nconst HeaderMenuItem = ({ title }) => (\n    <MenuItem\n        dense\n        key={title}\n        disabled\n        label={\n            <p style={{ color: colors.grey800, fontWeight: '600' }}>{title}</p>\n        }\n    />\n);\n\nHeaderMenuItem.propTypes = {\n    title: PropTypes.string.isRequired,\n};\n\nexport default HeaderMenuItem;\n","import React from 'react';\nimport { colors } from '@dhis2/ui-core';\nimport PropTypes from 'prop-types';\n\nconst LaunchIcon = ({ className }) => (\n    <svg\n        className={className}\n        xmlns=\"http://www.w3.org/2000/svg\"\n        width=\"12\"\n        height=\"12\"\n        fill={colors.grey600}\n        viewBox=\"0 0 24 24\"\n    >\n        <path d=\"M0 0h24v24H0z\" fill=\"none\" />\n        <path d=\"M19 19H5V5h7V3H5c-1.11 0-2 .9-2 2v14c0 1.1.89 2 2 2h14c1.1 0 2-.9 2-2v-7h-2v7zM14 3v2h3.59l-9.83 9.83 1.41 1.41L19 6.41V10h2V3h-7z\" />\n    </svg>\n);\n\nLaunchIcon.propTypes = {\n    className: PropTypes.string,\n};\n\nexport default LaunchIcon;\n","import React from 'react';\nimport { MenuItem, colors } from '@dhis2/ui-core';\nimport i18n from '@dhis2/d2-i18n';\nimport PropTypes from 'prop-types';\nimport { visTypeIcons } from '@dhis2/analytics';\n\nimport { getItemIcon, VISUALIZATION } from '../../modules/itemTypes';\nimport LaunchIcon from '../../icons/Launch';\n\nimport classes from './styles/ContentMenuItem.module.css';\n\nconst LaunchLink = ({ url }) => (\n    <a\n        onClick={e => e.stopPropagation()}\n        className={classes.launchLink}\n        target=\"_blank\"\n        rel=\"noopener noreferrer\"\n        href={url}\n    >\n        <LaunchIcon />\n    </a>\n);\n\nLaunchLink.propTypes = {\n    url: PropTypes.string,\n};\n\nconst InsertButton = () => (\n    <button className={classes.buttonInsert}>{i18n.t('Insert')}</button>\n);\n\nconst ContentMenuItem = ({ type, name, onInsert, url, visType }) => {\n    const ItemIcon = getItemIcon(type);\n\n    const renderedItemIcon =\n        type === VISUALIZATION ? (\n            visTypeIcons[visType]\n        ) : (\n            <ItemIcon style={{ fill: colors.grey600 }} />\n        );\n\n    return (\n        <MenuItem\n            dense\n            onClick={onInsert}\n            label={\n                <div className={classes.menuItem}>\n                    <div className={classes.label}>\n                        <span style={{ margin: '6px' }}>\n                            {renderedItemIcon}\n                        </span>\n                        <span>{name}</span>\n                        {url ? <LaunchLink url={url} /> : null}\n                    </div>\n                    <InsertButton />\n                </div>\n            }\n        />\n    );\n};\n\nContentMenuItem.propTypes = {\n    name: PropTypes.string,\n    type: PropTypes.string,\n    url: PropTypes.string,\n    visType: PropTypes.string,\n    onInsert: PropTypes.func,\n};\n\nexport default ContentMenuItem;\n","import i18n from '@dhis2/d2-i18n';\nimport {\n    spacerContent,\n    VISUALIZATION,\n    MAP,\n    EVENT_CHART,\n    EVENT_REPORT,\n    USERS,\n    REPORTS,\n    RESOURCES,\n    APP,\n    MESSAGES,\n    TEXT,\n    SPACER,\n} from '../../modules/itemTypes';\n\nexport const singleItems = [\n    {\n        id: 'additional',\n        header: i18n.t('Additional items'),\n        items: [\n            {\n                type: TEXT,\n                name: i18n.t('Text box'),\n                content: '',\n            },\n            {\n                type: MESSAGES,\n                name: i18n.t('Messages'),\n                content: 'true',\n            },\n            {\n                type: SPACER,\n                name: i18n.t('Spacer'),\n                content: spacerContent,\n            },\n        ],\n    },\n];\n\n// categorizedItems are grouped in the item selector menu\nexport const categorizedItems = [\n    VISUALIZATION,\n    MAP,\n    EVENT_REPORT,\n    EVENT_CHART,\n    USERS,\n    REPORTS,\n    RESOURCES,\n    APP,\n];\n\n// listItemTypes are included in a single dashboard item\nexport const listItemTypes = [REPORTS, RESOURCES, USERS];\n","import React, { Component, Fragment } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport i18n from '@dhis2/d2-i18n';\nimport { MenuItem, Divider } from '@dhis2/ui-core';\n\nimport HeaderMenuItem from './HeaderMenuItem';\nimport ContentMenuItem from './ContentMenuItem';\n\nimport { tAddListItemContent } from './actions';\nimport { acAddDashboardItem } from '../../actions/editDashboard';\nimport { getItemUrl, APP, VISUALIZATION } from '../../modules/itemTypes';\nimport { categorizedItems, listItemTypes } from './selectableItems';\n\nimport classes from './styles/CategorizedMenuGroup.module.css';\n\nclass CategorizedMenuGroup extends Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            seeMore: false,\n        };\n    }\n\n    addItem = item => () => {\n        const { type, acAddDashboardItem, tAddListItemContent } = this.props;\n\n        if (type === APP) {\n            acAddDashboardItem({ type, content: item.key });\n        } else {\n            const newItem = {\n                id: item.id,\n                name: item.displayName || item.name,\n            };\n\n            if (listItemTypes.includes(type)) {\n                tAddListItemContent(type, newItem);\n            } else {\n                acAddDashboardItem({ type, content: newItem });\n            }\n        }\n    };\n\n    toggleSeeMore = () => {\n        this.setState({ seeMore: !this.state.seeMore });\n\n        this.props.onChangeItemsLimit(this.props.type);\n    };\n\n    render() {\n        const { title, type, items, hasMore } = this.props;\n        return (\n            <Fragment>\n                <HeaderMenuItem title={title} />\n                {items.map(item => {\n                    const itemUrl = getItemUrl(type, item, this.context.d2);\n                    return (\n                        <ContentMenuItem\n                            key={item.id || item.key}\n                            type={type}\n                            visType={type === VISUALIZATION ? item.type : type}\n                            name={item.displayName || item.name}\n                            onInsert={this.addItem(item)}\n                            url={itemUrl}\n                        />\n                    );\n                })}\n                {hasMore ? (\n                    <MenuItem\n                        dense\n                        key={`showmore${title}`}\n                        onClick={this.toggleSeeMore}\n                        label={\n                            <button className={classes.showMoreButton}>\n                                {this.state.seeMore\n                                    ? i18n.t('Show fewer')\n                                    : i18n.t('Show more')}\n                            </button>\n                        }\n                    />\n                ) : null}\n                <Divider margin=\"8px 0px\" />\n            </Fragment>\n        );\n    }\n}\n\nCategorizedMenuGroup.propTypes = {\n    items: PropTypes.array.isRequired,\n    title: PropTypes.string.isRequired,\n    type: PropTypes.oneOf(categorizedItems).isRequired,\n    onChangeItemsLimit: PropTypes.func.isRequired,\n    acAddDashboardItem: PropTypes.func,\n    hasMore: PropTypes.bool,\n    tAddListItemContent: PropTypes.func,\n};\n\nCategorizedMenuGroup.contextTypes = {\n    d2: PropTypes.object.isRequired,\n};\n\nexport default connect(\n    null,\n    {\n        acAddDashboardItem,\n        tAddListItemContent,\n    }\n)(CategorizedMenuGroup);\n","import { sGetEditDashboardRoot } from '../../reducers/editDashboard';\nimport { itemTypeMap } from '../../modules/itemTypes';\nimport {\n    acAddDashboardItem,\n    acUpdateDashboardItem,\n} from '../../actions/editDashboard';\n\nexport const tAddListItemContent = (type, content) => (dispatch, getState) => {\n    const state = getState();\n    const listItemType = itemTypeMap[type].propName;\n    const dashboardItems = sGetEditDashboardRoot(state).dashboardItems;\n    const dashboardItemIndex = dashboardItems.findIndex(\n        item => item.type === type\n    );\n    let dashboardItem;\n\n    // Reports/Resources/Users dashboard item type already present in dashboard\n    if (dashboardItemIndex > -1) {\n        dashboardItem = dashboardItems[dashboardItemIndex];\n        dashboardItem[listItemType].push(content);\n\n        dispatch(acUpdateDashboardItem(dashboardItem));\n    } else {\n        dashboardItem = {\n            type: type,\n            content: [content],\n        };\n\n        dispatch(acAddDashboardItem(dashboardItem));\n    }\n};\n","import React, { Fragment } from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\n\nimport HeaderMenuItem from './HeaderMenuItem';\nimport ContentMenuItem from './ContentMenuItem';\nimport { acAddDashboardItem } from '../../actions/editDashboard';\n\nexport const SinglesMenuGroup = ({ acAddDashboardItem, category }) => {\n    const addToDashboard = ({ type, content }) => () => {\n        acAddDashboardItem({ type, content });\n    };\n\n    return (\n        <Fragment>\n            <HeaderMenuItem title={category.header} />\n            {category.items.map(item => (\n                <ContentMenuItem\n                    key={item.type}\n                    type={item.type}\n                    name={item.name}\n                    onInsert={addToDashboard(item)}\n                />\n            ))}\n        </Fragment>\n    );\n};\n\nSinglesMenuGroup.propTypes = {\n    acAddDashboardItem: PropTypes.func,\n    category: PropTypes.object,\n};\n\nexport default connect(\n    null,\n    { acAddDashboardItem }\n)(SinglesMenuGroup);\n","import React, { Fragment } from 'react';\nimport PropTypes from 'prop-types';\nimport i18n from '@dhis2/d2-i18n';\nimport Popover from '@material-ui/core/Popover';\nimport { InputField, Menu } from '@dhis2/ui-core';\n\nimport CategorizedMenuGroup from './CategorizedMenuGroup';\nimport SinglesMenuGroup from './SinglesMenuGroup';\nimport { singleItems, categorizedItems } from './selectableItems';\nimport { itemTypeMap, getDefaultItemCount } from '../../modules/itemTypes';\n\nimport './styles/ItemSelector.css';\n\nconst ItemSearchField = props => (\n    <InputField\n        name=\"Dashboard item search\"\n        label={i18n.t('Search for items to add to this dashboard')}\n        type=\"text\"\n        onChange={props.onChange}\n        onFocus={props.onFocus}\n        value={props.value}\n    />\n);\n\nclass ItemSelector extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            anchorEl: null,\n            open: false,\n            maxOptions: new Set(),\n            items: undefined,\n            filter: '',\n        };\n    }\n\n    closeList = () => {\n        this.setState({ open: false, filter: '' });\n    };\n\n    openList = (_, event) => {\n        this.fetchItems();\n\n        this.setState({\n            anchorEl: event.currentTarget,\n            open: true,\n        });\n    };\n\n    setFilter = (_, event) => {\n        this.setState({ filter: event.target.value }, this.fetchItems);\n    };\n\n    getCategorizedMenuGroups = () =>\n        categorizedItems\n            .filter(type => {\n                const itemType = itemTypeMap[type];\n                return (\n                    this.state.items && this.state.items[itemType.endPointName]\n                );\n            })\n            .map(type => {\n                const itemType = itemTypeMap[type];\n                const itemCount = getDefaultItemCount(type);\n                const allItems = this.state.items[itemType.endPointName];\n                const hasMore = allItems.length > itemCount;\n                const items = this.state.maxOptions.has(itemType.id)\n                    ? allItems\n                    : allItems.slice(0, itemCount);\n\n                return (\n                    <CategorizedMenuGroup\n                        key={type}\n                        type={type}\n                        title={itemType.pluralTitle}\n                        items={items}\n                        onChangeItemsLimit={this.fetchItems}\n                        hasMore={hasMore}\n                    />\n                );\n            });\n\n    getSinglesMenuGroups = () =>\n        singleItems.map(category => (\n            <SinglesMenuGroup key={category.id} category={category} />\n        ));\n\n    getMenuGroups = () =>\n        this.getCategorizedMenuGroups().concat(this.getSinglesMenuGroups());\n\n    fetchItems = async type => {\n        if (type) {\n            const maxOptions = this.state.maxOptions;\n\n            if (maxOptions.has(type)) {\n                maxOptions.delete(type);\n            } else {\n                maxOptions.add(type);\n            }\n\n            this.setState({ maxOptions });\n        } else {\n            this.setState({\n                maxOptions: new Set(),\n            });\n        }\n\n        let queryString = '?count=11';\n        if ([...this.state.maxOptions.values()].length) {\n            queryString +=\n                '&max=' + [...this.state.maxOptions.values()].join('&max=');\n        }\n\n        const filter = this.state.filter ? `/${this.state.filter}` : '';\n\n        this.context.d2.Api.getApi()\n            .get(`dashboards/q${filter}${queryString}`)\n            .then(response => this.setState({ items: response }))\n            .catch(console.error);\n    };\n\n    render() {\n        return (\n            <Fragment>\n                <ItemSearchField\n                    value={this.state.filter}\n                    onChange={this.setFilter}\n                    onFocus={this.openList}\n                />\n                <Popover\n                    className=\"dashboard-item-selector\"\n                    open={this.state.open}\n                    onClose={this.closeList}\n                    anchorEl={this.state.anchorEl}\n                    anchorOrigin={{ horizontal: 'left', vertical: 'bottom' }}\n                    transformOrigin={{ horizontal: 'left', vertical: 'top' }}\n                    style={{ height: '70vh' }}\n                    PaperProps={{ style: { width: '700px' } }}\n                    disableAutoFocus={true}\n                    disableRestoreFocus={true}\n                >\n                    <Menu>{this.getMenuGroups()}</Menu>\n                </Popover>\n            </Fragment>\n        );\n    }\n}\n\nItemSearchField.propTypes = {\n    value: PropTypes.string,\n    onChange: PropTypes.func,\n    onFocus: PropTypes.func,\n};\n\nItemSelector.contextTypes = {\n    d2: PropTypes.object.isRequired,\n};\n\nexport default ItemSelector;\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport i18n from '@dhis2/d2-i18n';\nimport { InputField, TextAreaField } from '@dhis2/ui-core';\n\nimport ItemSelector from '../ItemSelector/ItemSelector';\nimport {\n    acSetDashboardTitle,\n    acSetDashboardDescription,\n} from '../../actions/editDashboard';\nimport { orObject } from '../../modules/util';\nimport { sGetEditDashboardRoot } from '../../reducers/editDashboard';\n\nconst styles = {\n    section: { display: 'flex', justifyContent: 'space-between' },\n    titleDescription: {\n        flex: '3',\n        marginRight: '50px',\n    },\n    title: {\n        display: 'block',\n        clear: 'both',\n    },\n    description: {\n        display: 'block',\n        clear: 'both',\n        marginTop: '15px',\n    },\n    underline: {\n        '&::before': {\n            borderBottom: `none`,\n        },\n        '&:hover::before': {\n            borderBottom: `none!important`,\n        },\n    },\n    input: {\n        backgroundColor: 'rgba(0, 0, 10, 0.05)',\n        borderRadius: '4px',\n        width: '100%',\n        '&:hover': {\n            backgroundColor: 'rgba(0, 0, 10, 0.08)',\n        },\n    },\n    itemSelector: {\n        flex: '2',\n        position: 'relative',\n    },\n};\n\nexport const EditTitleBar = ({\n    name,\n    description,\n    onChangeTitle,\n    onChangeDescription,\n    classes,\n}) => {\n    const updateTitle = (_, e) => {\n        onChangeTitle(e.target.value);\n    };\n\n    const updateDescription = (_, e) => {\n        onChangeDescription(e.target.value);\n    };\n\n    return (\n        <section className={classes.section}>\n            <div className={classes.titleDescription}>\n                <InputField\n                    className={classes.title}\n                    name=\"Dashboard title input\"\n                    label={i18n.t('Dashboard title')}\n                    type=\"text\"\n                    onChange={updateTitle}\n                    value={name}\n                />\n                <TextAreaField\n                    className={classes.description}\n                    name=\"Dashboard description input\"\n                    label={i18n.t('Dashboard description')}\n                    onChange={updateDescription}\n                    value={description}\n                />\n            </div>\n            <div className={classes.itemSelector}>\n                <ItemSelector />\n            </div>\n        </section>\n    );\n};\n\nconst mapStateToProps = state => {\n    const selectedDashboard = orObject(sGetEditDashboardRoot(state));\n\n    return {\n        name: selectedDashboard.name,\n        description: selectedDashboard.description,\n    };\n};\n\nconst mapDispatchToProps = {\n    onChangeTitle: acSetDashboardTitle,\n    onChangeDescription: acSetDashboardDescription,\n};\n\nexport default connect(\n    mapStateToProps,\n    mapDispatchToProps\n)(withStyles(styles)(EditTitleBar));\n\nEditTitleBar.propTypes = {\n    onChangeDescription: PropTypes.func.isRequired,\n    onChangeTitle: PropTypes.func.isRequired,\n    classes: PropTypes.object,\n    description: PropTypes.string,\n    name: PropTypes.string,\n};\n\nEditTitleBar.defaultProps = {\n    name: '',\n    description: '',\n};\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nimport { Button } from '@dhis2/ui-core';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\n\nimport i18n from '@dhis2/d2-i18n';\n\nimport {\n    PeriodDimension,\n    DynamicDimension,\n    OrgUnitDimension,\n    DIMENSION_ID_PERIOD,\n    DIMENSION_ID_ORGUNIT,\n} from '@dhis2/analytics';\n\nconst peId = DIMENSION_ID_PERIOD;\nconst ouId = DIMENSION_ID_ORGUNIT;\n\nclass FilterDialog extends Component {\n    onConfirm = id => () => this.props.onConfirm(id);\n\n    dialogContent() {\n        const { displayNameProperty, dimension, selectedItems } = this.props;\n        const dialogId = dimension.id;\n\n        const commonProps = {\n            d2: this.context.d2,\n            onSelect: this.props.onSelect,\n            onDeselect: this.props.onDeselect,\n            onReorder: this.props.onReorder,\n        };\n\n        switch (dialogId) {\n            case peId: {\n                return (\n                    <PeriodDimension\n                        selectedPeriods={selectedItems}\n                        {...commonProps}\n                    />\n                );\n            }\n            case ouId:\n                return (\n                    <OrgUnitDimension\n                        displayNameProperty={displayNameProperty}\n                        ouItems={selectedItems}\n                        {...commonProps}\n                    />\n                );\n            default:\n                return (\n                    <DynamicDimension\n                        selectedItems={selectedItems}\n                        dialogId={dialogId}\n                        dialogTitle={dimension.name}\n                        {...commonProps}\n                    />\n                );\n        }\n    }\n\n    render() {\n        const { dimension, onClose } = this.props;\n        const dialogId = dimension.id;\n\n        return (\n            <Dialog\n                open={!!dialogId}\n                maxWidth=\"lg\"\n                disableEnforceFocus\n                onClose={onClose}\n            >\n                {dialogId && this.dialogContent()}\n                <DialogActions>\n                    <Button kind=\"secondary\" onClick={onClose}>\n                        {i18n.t('Cancel')}\n                    </Button>\n                    <Button kind=\"primary\" onClick={this.onConfirm(dialogId)}>\n                        {i18n.t('Confirm')}\n                    </Button>\n                </DialogActions>\n            </Dialog>\n        );\n    }\n}\n\nFilterDialog.propTypes = {\n    dimension: PropTypes.object,\n    displayNameProperty: PropTypes.string,\n    selectedItems: PropTypes.array,\n    onClose: PropTypes.func,\n    onConfirm: PropTypes.func,\n    onDeselect: PropTypes.func,\n    onReorder: PropTypes.func,\n    onSelect: PropTypes.func,\n};\n\nFilterDialog.contextTypes = {\n    d2: PropTypes.object,\n};\n\nexport default FilterDialog;\n","export const SET_ACTIVE_MODAL_DIMENSION = 'SET_ACTIVE_MODAL_DIMENSION';\nexport const CLEAR_ACTIVE_MODAL_DIMENSION = 'CLEAR_ACTIVE_MODAL_DIMENSION';\n\nexport const DEFAULT_STATE_ACTIVE_MODAL_DIMENSION = {};\n\nexport default (state = DEFAULT_STATE_ACTIVE_MODAL_DIMENSION, action) => {\n    switch (action.type) {\n        case SET_ACTIVE_MODAL_DIMENSION: {\n            return action.value;\n        }\n        case CLEAR_ACTIVE_MODAL_DIMENSION: {\n            return DEFAULT_STATE_ACTIVE_MODAL_DIMENSION;\n        }\n        default:\n            return state;\n    }\n};\n\nexport const sGetActiveModalDimension = state => state.activeModalDimension;\n","import {\n    SET_ACTIVE_MODAL_DIMENSION,\n    CLEAR_ACTIVE_MODAL_DIMENSION,\n} from '../reducers/activeModalDimension';\n\nexport const acSetActiveModalDimension = value => ({\n    type: SET_ACTIVE_MODAL_DIMENSION,\n    value,\n});\n\nexport const acClearActiveModalDimension = () => ({\n    type: CLEAR_ACTIVE_MODAL_DIMENSION,\n});\n","import React, { Component, Fragment } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport Popover from '@material-ui/core/Popover';\nimport ArrowDropDownIcon from '@material-ui/icons/ArrowDropDown';\nimport { withTheme } from '@material-ui/core/styles';\n\nimport i18n from '@dhis2/d2-i18n';\nimport { DimensionsPanel } from '@dhis2/analytics';\n\nimport { Button } from '@dhis2/ui-core';\nimport FilterDialog from './FilterDialog';\n\nimport { sGetSettingsDisplayNameProperty } from '../../reducers/settings';\nimport { sGetActiveModalDimension } from '../../reducers/activeModalDimension';\nimport { sGetDimensions } from '../../reducers/dimensions';\nimport { sGetFiltersKeys } from '../../reducers/itemFilters';\nimport { sGetEditItemFiltersRoot } from '../../reducers/editItemFilters';\nimport { acAddItemFilter, acRemoveItemFilter } from '../../actions/itemFilters';\nimport {\n    acRemoveEditItemFilter,\n    acSetEditItemFilters,\n} from '../../actions/editItemFilters';\nimport {\n    acClearActiveModalDimension,\n    acSetActiveModalDimension,\n} from '../../actions/activeModalDimension';\n\nclass FilterSelector extends Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            anchorEl: null,\n        };\n    }\n\n    openPanel = (_, event) => {\n        this.setState({ anchorEl: event.currentTarget });\n    };\n\n    closePanel = () => {\n        this.setState({ anchorEl: null });\n    };\n\n    closeDialog = () => {\n        this.setState({ anchorEl: null });\n\n        this.props.clearActiveModalDimension();\n    };\n\n    selectDimension = id => {\n        this.props.setActiveModalDimension(\n            this.props.dimensions.find(dimension => dimension.id === id)\n        );\n    };\n\n    onSelectItems = ({ dimensionId, items }) => {\n        this.props.setEditItemFilters({\n            ...this.props.selectedItems,\n            [dimensionId]: items,\n        });\n    };\n\n    onDeselectItems = ({ dimensionId, itemIdsToRemove }) => {\n        const oldList = this.props.selectedItems[dimensionId] || [];\n        const newList = oldList.filter(\n            item => !itemIdsToRemove.includes(item.id)\n        );\n\n        if (newList.length) {\n            this.props.setEditItemFilters({\n                ...this.props.selectedItems,\n                [dimensionId]: newList,\n            });\n        } else {\n            this.props.removeEditItemFilter(dimensionId);\n        }\n    };\n\n    onReorderItems = ({ dimensionId, itemIds }) => {\n        const oldList = this.props.selectedItems[dimensionId] || [];\n        const reorderedList = itemIds.map(id =>\n            oldList.find(item => item.id === id)\n        );\n\n        this.props.setEditItemFilters({\n            ...this.props.selectedItems,\n            [dimensionId]: reorderedList,\n        });\n    };\n\n    saveFilter = id => {\n        const filterItems = this.props.selectedItems[id];\n\n        if (filterItems && filterItems.length) {\n            this.props.addItemFilter({\n                id,\n                value: [...filterItems],\n            });\n        } else {\n            this.props.removeItemFilter(id);\n        }\n\n        this.closeDialog();\n    };\n\n    render() {\n        const {\n            theme,\n            displayNameProperty,\n            dimension,\n            dimensions,\n            selectedDimensions,\n            selectedItems,\n        } = this.props;\n\n        return (\n            <Fragment>\n                <Button onClick={this.openPanel}>\n                    {i18n.t('Add filter')}\n                    <ArrowDropDownIcon />\n                </Button>\n                <Popover\n                    open={Boolean(this.state.anchorEl)}\n                    anchorEl={this.state.anchorEl}\n                    anchorOrigin={{ vertical: 'bottom', horizontal: 'left' }}\n                    onClose={this.closePanel}\n                    style={{\n                        height: '100%',\n                        fontFamily: theme.typography.fontFamily,\n                    }}\n                >\n                    <DimensionsPanel\n                        style={{ width: '320px' }}\n                        dimensions={dimensions}\n                        onDimensionClick={this.selectDimension}\n                        selectedIds={selectedDimensions}\n                    />\n                </Popover>\n                {dimension ? (\n                    <FilterDialog\n                        displayNameProperty={displayNameProperty}\n                        dimension={dimension}\n                        selectedItems={selectedItems[dimension.id] || []}\n                        onSelect={this.onSelectItems}\n                        onDeselect={this.onDeselectItems}\n                        onReorder={this.onReorderItems}\n                        onClose={this.closeDialog}\n                        onConfirm={this.saveFilter}\n                    />\n                ) : null}\n            </Fragment>\n        );\n    }\n}\n\nconst mapStateToProps = state => ({\n    displayNameProperty: sGetSettingsDisplayNameProperty(state),\n    dimension: sGetActiveModalDimension(state),\n    dimensions: sGetDimensions(state),\n    selectedDimensions: sGetFiltersKeys(state),\n    selectedItems: sGetEditItemFiltersRoot(state),\n});\n\nFilterSelector.propTypes = {\n    addItemFilter: PropTypes.func,\n    clearActiveModalDimension: PropTypes.func,\n    dimension: PropTypes.object,\n    dimensions: PropTypes.array,\n    displayNameProperty: PropTypes.string,\n    removeEditItemFilter: PropTypes.func,\n    removeItemFilter: PropTypes.func,\n    selectedDimensions: PropTypes.array,\n    selectedItems: PropTypes.object,\n    setActiveModalDimension: PropTypes.func,\n    setEditItemFilters: PropTypes.func,\n    theme: PropTypes.object,\n};\n\nexport default connect(\n    mapStateToProps,\n    {\n        clearActiveModalDimension: acClearActiveModalDimension,\n        setActiveModalDimension: acSetActiveModalDimension,\n        addItemFilter: acAddItemFilter,\n        removeItemFilter: acRemoveItemFilter,\n        removeEditItemFilter: acRemoveEditItemFilter,\n        setEditItemFilters: acSetEditItemFilters,\n    }\n)(withTheme()(FilterSelector));\n","import React, { Component } from 'react';\nimport InfoOutlineIcon from '@material-ui/icons/InfoOutlined';\nimport { colors } from '@dhis2/ui-core';\nimport PropTypes from 'prop-types';\n\nclass Info extends Component {\n    show = false;\n\n    toggle() {\n        this.show = !this.show;\n        return this.show;\n    }\n\n    render() {\n        return (\n            <div onClick={() => this.props.onClick(this.toggle())}>\n                <InfoOutlineIcon style={{ fill: colors.grey600 }} />\n            </div>\n        );\n    }\n}\n\nInfo.propTypes = {\n    onClick: PropTypes.func,\n};\n\nexport default Info;\n","import React, { Component, Fragment } from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport { Link } from 'react-router-dom';\nimport i18n from '@dhis2/d2-i18n';\nimport SharingDialog from '@dhis2/d2-ui-sharing-dialog';\nimport Star from '@material-ui/icons/Star';\nimport StarBorder from '@material-ui/icons/StarBorder';\n\nimport { orObject } from '../../modules/util';\nimport { tStarDashboard } from '../../actions/dashboards';\nimport { acSetSelectedShowDescription } from '../../actions/selected';\nimport FilterSelector from '../ItemFilter/FilterSelector';\nimport { Button } from '@dhis2/ui-core';\nimport Info from './Info';\nimport {\n    sGetSelectedId,\n    sGetSelectedShowDescription,\n} from '../../reducers/selected';\nimport {\n    sGetDashboardById,\n    sGetDashboardItems,\n} from '../../reducers/dashboards';\nimport { colors } from '@dhis2/ui-core';\n\nconst NO_DESCRIPTION = i18n.t('No description');\n\nconst styles = {\n    actions: {\n        display: 'flex',\n        alignItems: 'center',\n        marginLeft: '20px',\n    },\n    starIcon: {\n        fill: colors.grey600,\n    },\n    textButton: {\n        minWidth: '30px',\n        top: '1px',\n    },\n    editLink: {\n        display: 'inline-block',\n        verticalAlign: 'top',\n        textDecoration: 'none',\n        marginRight: '4px',\n    },\n    titleBar: {\n        display: 'flex',\n        alignItems: 'flex-start',\n    },\n    titleBarIcon: {\n        marginLeft: 5,\n        position: 'relative',\n        top: 1,\n        cursor: 'pointer',\n    },\n};\n\nclass ViewTitleBar extends Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            sharingDialogIsOpen: false,\n        };\n    }\n\n    toggleSharingDialog = () =>\n        this.setState({ sharingDialogIsOpen: !this.state.sharingDialogIsOpen });\n\n    render() {\n        const {\n            id,\n            name,\n            description,\n            access,\n            style,\n            showDescription,\n            starred,\n            onStarClick,\n            onInfoClick,\n            classes,\n        } = this.props;\n\n        const titleStyle = Object.assign({}, style.title, {\n            cursor: 'default',\n            userSelect: 'text',\n            top: '7px',\n        });\n\n        const StarIcon = starred ? Star : StarBorder;\n\n        return (\n            <Fragment>\n                <div className={classes.titleBar}>\n                    <span style={titleStyle}>{name}</span>\n                    <div className={classes.actions}>\n                        <div\n                            className={classes.titleBarIcon}\n                            onClick={onStarClick}\n                        >\n                            <StarIcon className={classes.starIcon} />\n                        </div>\n                        <div className={classes.titleBarIcon}>\n                            <Info onClick={onInfoClick} />\n                        </div>\n                        <div style={{ marginLeft: '10px' }}>\n                            {access.update ? (\n                                <Link\n                                    className={classes.editLink}\n                                    to={`/${id}/edit`}\n                                >\n                                    <Button>{i18n.t('Edit')}</Button>\n                                </Link>\n                            ) : null}\n                            {access.manage ? (\n                                <span style={{ marginRight: '4px' }}>\n                                    <Button onClick={this.toggleSharingDialog}>\n                                        {i18n.t('Share')}\n                                    </Button>\n                                </span>\n                            ) : null}\n                            <span style={{ marginRight: '4px' }}>\n                                <FilterSelector />\n                            </span>\n                        </div>\n                    </div>\n                </div>\n                {showDescription ? (\n                    <div\n                        className=\"dashboard-description\"\n                        style={Object.assign(\n                            { paddingTop: '5px', paddingBottom: '5px' },\n                            style.description,\n                            !description ? { color: '#888' } : {}\n                        )}\n                    >\n                        {description || NO_DESCRIPTION}\n                    </div>\n                ) : null}\n                {id ? (\n                    <SharingDialog\n                        d2={this.context.d2}\n                        id={id}\n                        type=\"dashboard\"\n                        open={this.state.sharingDialogIsOpen}\n                        onRequestClose={this.toggleSharingDialog}\n                    />\n                ) : null}\n            </Fragment>\n        );\n    }\n}\n\nconst mapStateToProps = state => {\n    const id = sGetSelectedId(state);\n    const dashboard = orObject(sGetDashboardById(state, id));\n\n    return {\n        id,\n        name: dashboard.displayName,\n        description: dashboard.displayDescription,\n        dashboardItems: sGetDashboardItems(state),\n        showDescription: sGetSelectedShowDescription(state),\n        starred: dashboard.starred,\n        access: orObject(dashboard.access),\n    };\n};\n\nconst mergeProps = (stateProps, dispatchProps, ownProps) => {\n    const { id, starred, showDescription } = stateProps;\n    const { dispatch } = dispatchProps;\n\n    return {\n        ...stateProps,\n        ...ownProps,\n        onStarClick: () => dispatch(tStarDashboard(id, !starred)),\n        onInfoClick: () =>\n            dispatch(acSetSelectedShowDescription(!showDescription)),\n    };\n};\n\nexport default connect(\n    mapStateToProps,\n    null,\n    mergeProps\n)(withStyles(styles)(ViewTitleBar));\n\nViewTitleBar.propTypes = {\n    access: PropTypes.object,\n    classes: PropTypes.object,\n    description: PropTypes.string,\n    id: PropTypes.string,\n    name: PropTypes.string,\n    showDescription: PropTypes.bool,\n    starred: PropTypes.bool,\n    style: PropTypes.object,\n    onInfoClick: PropTypes.func,\n    onStarClick: PropTypes.func,\n};\n\nViewTitleBar.defaultProps = {\n    name: '',\n    description: '',\n    starred: false,\n    showDescription: false,\n    onInfoClick: null,\n};\n\nViewTitleBar.contextTypes = {\n    d2: PropTypes.object,\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport { colors } from '@dhis2/ui-core';\nimport EditTitleBar from './EditTitleBar';\nimport ViewTitleBar from './ViewTitleBar';\n\nimport './TitleBar.css';\n\nconst style = {\n    title: {\n        position: 'relative',\n        fontSize: 21,\n        fontWeight: 500,\n        color: colors.black,\n        minWidth: 50,\n    },\n    description: {\n        fontSize: 14,\n        color: colors.grey800,\n    },\n};\n\nconst TitleBar = ({ edit }) => {\n    return (\n        <div\n            className=\"titlebar-wrapper\"\n            style={{\n                padding: '20px 15px 5px 10px',\n            }}\n        >\n            {edit ? (\n                <EditTitleBar style={style} />\n            ) : (\n                <ViewTitleBar style={style} />\n            )}\n        </div>\n    );\n};\n\nTitleBar.propTypes = {\n    edit: PropTypes.bool,\n};\n\nexport default TitleBar;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nimport i18n from '@dhis2/d2-i18n';\n\nimport * as pluginManager from './plugin';\nimport { getBaseUrl, orObject } from '../../../modules/util';\nimport { getGridItemDomId } from '../../ItemGrid/gridUtil';\n\nconst pluginCredentials = d2 => {\n    return {\n        baseUrl: getBaseUrl(d2),\n        auth: d2.Api.getApi().defaultHeaders.Authorization,\n    };\n};\n\nclass DefaultPlugin extends Component {\n    pluginCredentials = null;\n\n    constructor(props, context) {\n        super(props);\n\n        this.d2 = context.d2;\n    }\n\n    shouldPluginReload = prevProps => {\n        // TODO - fix this hack, to handle bug with multiple\n        // rerendering while switching between dashboards.\n        //\n        // To determine if the rendering is happening because of a\n        // dashboard switch, check if the item reference has changed.\n        const reloadAllowed = this.props.item === prevProps.item;\n\n        const filtersChanged = prevProps.itemFilters !== this.props.itemFilters;\n        const vis = orObject(this.props.visualization);\n        const prevVis = orObject(prevProps.visualization);\n        const visChanged =\n            vis.id !== prevVis.id || vis.activeType !== prevVis.activeType;\n\n        return reloadAllowed && (visChanged || filtersChanged);\n    };\n\n    reloadPlugin = prevProps => {\n        if (\n            pluginManager.pluginIsAvailable(\n                this.props.item,\n                this.props.visualization\n            ) &&\n            this.shouldPluginReload(prevProps)\n        ) {\n            const prevVis = orObject(prevProps.visualization);\n            const currentVis = this.props.visualization;\n\n            const useActiveType =\n                currentVis.activeType !== prevVis.activeType ||\n                currentVis.activeType !== this.props.item.type;\n\n            if (\n                useActiveType ||\n                this.props.itemFilters !== prevProps.itemFilters\n            ) {\n                pluginManager.unmount(\n                    this.props.item,\n                    prevVis.activeType || this.props.item.type\n                );\n\n                pluginManager.load(this.props.item, this.props.visualization, {\n                    credentials: this.pluginCredentials,\n                    activeType: useActiveType ? currentVis.activeType : null,\n                });\n            }\n        }\n    };\n\n    componentDidMount() {\n        this.pluginCredentials = pluginCredentials(this.d2);\n\n        if (\n            pluginManager.pluginIsAvailable(\n                this.props.item,\n                this.props.visualization\n            )\n        ) {\n            pluginManager.load(this.props.item, this.props.visualization, {\n                credentials: this.pluginCredentials,\n                activeType: !this.props.editMode ? this.getActiveType() : null,\n            });\n        }\n    }\n\n    componentDidUpdate(prevProps) {\n        this.reloadPlugin(prevProps);\n    }\n\n    getActiveType = () =>\n        this.props.visualization.activeType || this.props.item.type;\n\n    render() {\n        const { classes, item, visualization, style } = this.props;\n        const pluginIsAvailable = pluginManager.pluginIsAvailable(\n            item,\n            visualization\n        );\n\n        return pluginIsAvailable ? (\n            <div id={getGridItemDomId(item.id)} style={style} />\n        ) : (\n            <div className={classes.textDiv}>\n                {i18n.t('Unable to load the plugin for this item')}\n            </div>\n        );\n    }\n}\n\nDefaultPlugin.contextTypes = {\n    d2: PropTypes.object,\n};\n\nDefaultPlugin.propTypes = {\n    classes: PropTypes.object,\n    editMode: PropTypes.bool,\n    item: PropTypes.object,\n    itemFilters: PropTypes.object,\n    style: PropTypes.object,\n    visualization: PropTypes.object,\n};\n\nDefaultPlugin.defaultProps = {\n    style: {},\n    item: {},\n    itemFilters: {},\n    visualization: {},\n};\n\nexport default DefaultPlugin;\n","import React from 'react';\nimport { colors } from '@dhis2/ui-core';\n\nexport const ThreeDots = () => (\n    <svg\n        height=\"18\"\n        viewBox=\"0 0 18 18\"\n        width=\"18\"\n        xmlns=\"http://www.w3.org/2000/svg\"\n    >\n        <path\n            d=\"m4 7.5c-.83 0-1.5.67-1.5 1.5s.67 1.5 1.5 1.5 1.5-.67 1.5-1.5-.67-1.5-1.5-1.5zm10 0c-.83 0-1.5.67-1.5 1.5s.67 1.5 1.5 1.5 1.5-.67 1.5-1.5-.67-1.5-1.5-1.5zm-5 0c-.83 0-1.5.67-1.5 1.5s.67 1.5 1.5 1.5 1.5-.67 1.5-1.5-.67-1.5-1.5-1.5z\"\n            fill=\"#6e7a8a\"\n        />\n    </svg>\n);\n\nexport const SpeechBubble = () => (\n    <svg\n        height=\"20\"\n        viewBox=\"0 0 20 20\"\n        width=\"20\"\n        xmlns=\"http://www.w3.org/2000/svg\"\n        style={{ margin: '3px 2px 0 2px' }} // Temporary fix for the misaligned icon, should be removed once the icon is replaced\n    >\n        <path\n            d=\"m20 2h-16c-1.1 0-1.99.9-1.99 2l-.01 18 4-4h14c1.1 0 2-.9 2-2v-12c0-1.1-.9-2-2-2zm-2 12h-12v-2h12zm0-3h-12v-2h12zm0-3h-12v-2h12z\"\n            fill=\"#6e7a8a\"\n            fillRule=\"evenodd\"\n            transform=\"translate(-2 -2)\"\n        />\n    </svg>\n);\n\nexport const Warning = () => (\n    <svg\n        xmlns=\"http://www.w3.org/2000/svg\"\n        height=\"24\"\n        viewBox=\"0 0 24 24\"\n        width=\"24\"\n        fill={colors.grey600}\n    >\n        <path d=\"M0 0h24v24H0z\" fill=\"none\" />\n        <path d=\"M1 21h22L12 2 1 21zm12-3h-2v-2h2v2zm0-4h-2v-4h2v4z\" />\n    </svg>\n);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport i18n from '@dhis2/d2-i18n';\nimport { Warning } from './assets/icons';\n\nimport classes from './styles/FatalErrorBoundary.module.css';\n\nclass FatalErrorBoundary extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            errorFound: false,\n        };\n    }\n    componentDidCatch(error, info) {\n        this.setState({\n            errorFound: true,\n        });\n        console.log('error: ', error);\n        console.log('info: ', info);\n    }\n    render() {\n        if (this.state.errorFound) {\n            return (\n                <p className={classes.container}>\n                    <span className={classes.icon}>\n                        <Warning />\n                    </span>\n                    <span className={classes.message}>\n                        {i18n.t(\n                            'There was a problem loading this dashboard item'\n                        )}\n                    </span>\n                </p>\n            );\n        }\n        return this.props.children;\n    }\n}\n\nFatalErrorBoundary.propTypes = {\n    children: PropTypes.node,\n};\n\nexport default FatalErrorBoundary;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport i18n from '@dhis2/d2-i18n';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport { colors } from '@dhis2/ui-core';\n\nimport classes from './styles/DeleteItemButton.module.css';\n\nconst DeleteItemButton = ({ onClick }) => (\n    <button\n        type=\"button\"\n        className={classes.deleteItemButton}\n        onClick={onClick}\n        title={i18n.t(`Delete item`)}\n    >\n        <DeleteIcon style={{ fill: colors.red500 }} />\n    </button>\n);\n\nDeleteItemButton.propTypes = {\n    onClick: PropTypes.func,\n};\n\nexport default DeleteItemButton;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\n\nimport { sGetIsEditing } from '../../reducers/editDashboard';\nimport { acRemoveDashboardItem } from '../../actions/editDashboard';\nimport DeleteItemButton from './DeleteItemButton';\n\nimport classes from './styles/ItemHeader.module.css';\n\n// This is the margin-top + margin-bottom defined in the css file\nexport const HEADER_MARGIN_HEIGHT = 12;\n\nconst ItemHeader = props => {\n    const {\n        title,\n        editMode,\n        actionButtons,\n        itemId,\n        acRemoveDashboardItem,\n        forwardedRef,\n    } = props;\n\n    const handleDeleteItem = () => acRemoveDashboardItem(itemId);\n\n    return (\n        <div className={classes.itemHeaderWrap} ref={forwardedRef}>\n            <p className={classes.itemTitle}>{title}</p>\n            {editMode ? (\n                <div className={classes.itemActionsWrap}>\n                    <DeleteItemButton onClick={handleDeleteItem} />\n                </div>\n            ) : (\n                actionButtons && (\n                    <div className={classes.itemActionsWrap}>\n                        {actionButtons}\n                    </div>\n                )\n            )}\n        </div>\n    );\n};\n\nItemHeader.propTypes = {\n    acRemoveDashboardItem: PropTypes.func,\n    actionButtons: PropTypes.node,\n    editMode: PropTypes.bool,\n    forwardedRef: PropTypes.object,\n    itemId: PropTypes.string,\n    title: PropTypes.string,\n};\n\nItemHeader.defaultProps = {\n    forwardedRef: {},\n};\n\nconst mapStateToProps = state => ({\n    editMode: sGetIsEditing(state),\n});\n\nconst mapDispatchToProps = {\n    acRemoveDashboardItem,\n};\n\nconst ConnectedItemHeader = connect(\n    mapStateToProps,\n    mapDispatchToProps\n)(ItemHeader);\n\n// TODO this is a false positive that is fixed in eslint-plugin-react v7.15\n// github.com/yannickcr/eslint-plugin-react/blob/master/CHANGELOG.md\n/* eslint-disable react/display-name */\nexport default React.forwardRef((props, ref) => (\n    <ConnectedItemHeader {...props} forwardedRef={ref} />\n));\n/* eslint-enable react/display-name */\n","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\n\nimport {\n    isSingleValue,\n    isYearOverYear,\n    VIS_TYPE_GAUGE,\n    VIS_TYPE_PIE,\n} from '@dhis2/analytics';\nimport { Button, Menu, MenuItem, Divider, colors } from '@dhis2/ui-core';\nimport i18n from '@dhis2/d2-i18n';\nimport Popover from '@material-ui/core/Popover';\nimport TableIcon from '@material-ui/icons/ViewList';\nimport ChartIcon from '@material-ui/icons/InsertChart';\nimport MapIcon from '@material-ui/icons/Public';\nimport LaunchIcon from '@material-ui/icons/Launch';\n\nimport { ThreeDots, SpeechBubble } from './assets/icons';\nimport { pluginIsAvailable, getLink } from './plugin';\nimport {\n    CHART,\n    MAP,\n    REPORT_TABLE,\n    EVENT_CHART,\n    EVENT_REPORT,\n    isTrackerDomainType,\n    hasMapView,\n    getAppName,\n} from '../../../modules/itemTypes';\n\nconst iconFill = { fill: colors.grey600 };\n\nconst ItemHeaderButtons = props => {\n    const [anchorEl, setAnchorEl] = useState(null);\n\n    const { item, visualization, onSelectActiveType, d2, activeType } = props;\n\n    const isTrackerType = isTrackerDomainType(item.type);\n\n    const onViewTable = () => {\n        handleClose();\n        onSelectActiveType(isTrackerType ? EVENT_REPORT : REPORT_TABLE);\n    };\n\n    const onViewChart = () => {\n        handleClose();\n        onSelectActiveType(isTrackerType ? EVENT_CHART : CHART);\n    };\n\n    const onViewMap = () => {\n        handleClose();\n        onSelectActiveType(MAP);\n    };\n\n    const itemHasMapView = () => hasMapView(item.type);\n\n    const handleMenuClick = (_, event) => setAnchorEl(event.currentTarget);\n\n    const handleInterpretationClick = () => {\n        props.onToggleFooter();\n        if (anchorEl !== null) {\n            handleClose();\n        }\n    };\n\n    const handleClose = () => setAnchorEl(null);\n\n    const type = visualization.type || item.type;\n    const canViewAs =\n        !isSingleValue(type) &&\n        !isYearOverYear(type) &&\n        type !== VIS_TYPE_GAUGE &&\n        type !== VIS_TYPE_PIE;\n\n    const interpretationMenuLabel = props.activeFooter\n        ? i18n.t(`Hide interpretations and details`)\n        : i18n.t(`Show interpretations and details`);\n\n    const ViewAsMenuItems = () => (\n        <>\n            {activeType !== CHART && activeType !== EVENT_CHART && (\n                <MenuItem\n                    dense\n                    label={i18n.t('View as Chart')}\n                    onClick={onViewChart}\n                    icon={<ChartIcon style={iconFill} />}\n                />\n            )}\n            {activeType !== REPORT_TABLE && activeType !== EVENT_REPORT && (\n                <MenuItem\n                    dense\n                    label={i18n.t('View as Table')}\n                    onClick={onViewTable}\n                    icon={<TableIcon style={iconFill} />}\n                />\n            )}\n            {itemHasMapView() && activeType !== MAP && (\n                <MenuItem\n                    dense\n                    label={i18n.t('View as Map')}\n                    onClick={onViewMap}\n                    icon={<MapIcon style={iconFill} />}\n                />\n            )}\n        </>\n    );\n\n    return pluginIsAvailable(item, visualization) ? (\n        <>\n            <Button small secondary onClick={handleMenuClick}>\n                <ThreeDots />\n            </Button>\n            {anchorEl && (\n                <Popover\n                    open={Boolean(anchorEl)}\n                    onClose={handleClose}\n                    anchorEl={anchorEl}\n                >\n                    <Menu>\n                        {canViewAs && (\n                            <>\n                                <ViewAsMenuItems />\n                                <Divider />\n                            </>\n                        )}\n                        <MenuItem\n                            dense\n                            icon={<LaunchIcon style={{ fill: '#6e7a8a' }} />}\n                            label={i18n.t('Open in {{appName}} app', {\n                                appName: getAppName(item.type),\n                            })}\n                            href={getLink(item, d2)}\n                            target=\"_blank\"\n                        />\n                        <MenuItem\n                            dense\n                            icon={<SpeechBubble />}\n                            label={interpretationMenuLabel}\n                            onClick={handleInterpretationClick}\n                        />\n                    </Menu>\n                </Popover>\n            )}\n        </>\n    ) : null;\n};\n\nItemHeaderButtons.propTypes = {\n    activeFooter: PropTypes.bool,\n    activeType: PropTypes.string,\n    d2: PropTypes.object,\n    item: PropTypes.object,\n    visualization: PropTypes.object,\n    onSelectActiveType: PropTypes.func,\n    onToggleFooter: PropTypes.func,\n};\n\nexport default ItemHeaderButtons;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { colors } from '@dhis2/ui-core';\nimport { getId } from './plugin';\nimport InterpretationsComponent from '@dhis2/d2-ui-interpretations';\n\nconst style = {\n    scrollContainer: {\n        overflowY: 'auto',\n        height: '340px',\n    },\n    line: {\n        margin: '-1px 0px 0px',\n        height: '1px',\n        border: 'none',\n        backgroundColor: colors.grey100,\n    },\n};\n\nclass ItemFooter extends Component {\n    render() {\n        const objectId = getId(this.props.item);\n\n        return (\n            <div className=\"dashboard-item-footer\">\n                <hr style={style.line} />\n                <div style={style.scrollContainer}>\n                    <InterpretationsComponent\n                        d2={this.context.d2}\n                        item={this.props.item}\n                        type={this.props.item.type.toLowerCase()}\n                        id={objectId}\n                        appName=\"dashboard\"\n                    />\n                </div>\n            </div>\n        );\n    }\n}\n\nItemFooter.contextTypes = {\n    d2: PropTypes.object.isRequired,\n};\n\nItemFooter.propTypes = {\n    item: PropTypes.object.isRequired,\n};\n\nexport default ItemFooter;\n","// Note that this ignores discrepancies in 'this', so shouldn't be used with bound functions\n// This is useful instead of lodash/memoize when we only need to memoize a single value\n// Inspiration: https://github.com/alexreardon/memoize-one\n\nconst memoizeOne = fn => {\n    let lastArgs = undefined;\n    let lastValue = undefined;\n\n    return (...args) => {\n        if (\n            lastArgs &&\n            args.length === lastArgs.length &&\n            args.every((arg, i) => arg === lastArgs[i])\n        ) {\n            return lastValue;\n        }\n        lastArgs = args;\n        lastValue = fn(...args);\n        return lastValue;\n    };\n};\n\nexport default memoizeOne;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport CircularProgress from '@material-ui/core/CircularProgress';\n\nconst styles = theme => ({\n    progress: {\n        margin: theme.spacing.unit * 2,\n        maxWidth: 200,\n        textAlign: 'center',\n        alignSelf: 'center',\n    },\n    outer: {\n        display: 'flex',\n        justifyContent: 'center',\n        height: '100%',\n    },\n});\n\nfunction CircularIndeterminate(props) {\n    const { classes } = props;\n    return (\n        <div className={classes.outer}>\n            <CircularProgress className={classes.progress} />\n        </div>\n    );\n}\n\nCircularIndeterminate.propTypes = {\n    classes: PropTypes.object.isRequired,\n};\n\nexport default withStyles(styles)(CircularIndeterminate);\n","import React, { Component, Fragment } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { withStyles } from '@material-ui/core/styles';\nimport uniqueId from 'lodash/uniqueId';\nimport VisualizationPlugin from '@dhis2/data-visualizer-plugin';\nimport i18n from '@dhis2/d2-i18n';\n\nimport DefaultPlugin from './DefaultPlugin';\nimport FatalErrorBoundary from './FatalErrorBoundary';\nimport ItemHeader, { HEADER_MARGIN_HEIGHT } from '../ItemHeader';\nimport ItemHeaderButtons from './ItemHeaderButtons';\nimport ItemFooter from './ItemFooter';\nimport * as pluginManager from './plugin';\nimport { sGetVisualization } from '../../../reducers/visualizations';\nimport { sGetItemFiltersRoot } from '../../../reducers/itemFilters';\nimport {\n    acAddVisualization,\n    acSetActiveVisualizationType,\n} from '../../../actions/visualizations';\nimport {\n    VISUALIZATION,\n    MAP,\n    CHART,\n    REPORT_TABLE,\n} from '../../../modules/itemTypes';\nimport memoizeOne from '../../../modules/memoizeOne';\n\nimport { colors } from '@dhis2/ui-core';\nimport { getVisualizationConfig } from './plugin';\nimport LoadingMask from './LoadingMask';\nimport { ITEM_CONTENT_PADDING_BOTTOM } from '../../ItemGrid/ItemGrid';\n\nconst styles = {\n    icon: {\n        width: 16,\n        height: 16,\n        marginLeft: 3,\n        cursor: 'pointer',\n        fill: colors.grey600,\n    },\n    title: {\n        overflow: 'hidden',\n        maxWidth: '85%',\n        textOverflow: 'ellipsis',\n        whiteSpace: 'nowrap',\n    },\n    textDiv: {\n        fontSize: '14px',\n        fontStretch: 'normal',\n        padding: '10px',\n        lineHeight: '20px',\n    },\n    loadingCover: {\n        position: 'absolute',\n        height: '100%',\n        width: '100%',\n        left: 0,\n        top: 0,\n        zIndex: 100,\n        background: '#ffffffab',\n    },\n};\n\nexport class Item extends Component {\n    state = {\n        showFooter: false,\n        configLoaded: false,\n        pluginIsLoaded: false,\n    };\n\n    constructor(props, context) {\n        super(props);\n\n        this.d2 = context.d2;\n\n        this.contentRef = React.createRef();\n        this.headerRef = React.createRef();\n\n        this.memoizedApplyFilters = memoizeOne(this.applyFilters);\n\n        this.memoizedGetVisualizationConfig = memoizeOne(\n            getVisualizationConfig\n        );\n\n        this.memoizedGetContentStyle = memoizeOne(this.getContentStyle);\n    }\n\n    async componentDidMount() {\n        this.props.onVisualizationLoaded(\n            // TODO do not call fetch on the pluginManager, do it here as the manager will eventually be removed...\n            await pluginManager.fetch(this.props.item)\n        );\n\n        this.setState({\n            configLoaded: true,\n        });\n    }\n\n    componentDidUpdate(prevProps, prevState) {\n        if (\n            prevState.pluginIsLoaded &&\n            (prevProps.visualization !== this.props.visualization ||\n                prevProps.itemFilters !== this.props.itemFilters)\n        ) {\n            this.setState({\n                pluginIsLoaded: false,\n            });\n        }\n    }\n\n    applyFilters = (visualization, filters) => {\n        if (!Object.keys(filters).length) {\n            return visualization;\n        }\n\n        // deep clone objects in filters to avoid changing the visualization in the Redux store\n        const visRows = visualization.rows.map(obj => ({ ...obj }));\n        const visColumns = visualization.columns.map(obj => ({ ...obj }));\n        const visFilters = visualization.filters.map(obj => ({ ...obj }));\n\n        Object.keys(filters).forEach(dimensionId => {\n            if (filters[dimensionId]) {\n                let dimensionFound = false;\n\n                [visRows, visColumns, visFilters].forEach(dimensionObjects =>\n                    dimensionObjects\n                        .filter(obj => obj.dimension === dimensionId)\n                        .forEach(obj => {\n                            dimensionFound = true;\n                            obj.items = filters[dimensionId];\n                        })\n                );\n\n                // add dimension to filters if not already present elsewhere\n                if (!dimensionFound) {\n                    visFilters.push({\n                        dimension: dimensionId,\n                        items: filters[dimensionId],\n                    });\n                }\n            }\n        });\n\n        return {\n            ...visualization,\n            rows: visRows,\n            columns: visColumns,\n            filters: visFilters,\n        };\n    };\n\n    getUniqueKey = memoizeOne(() => uniqueId());\n\n    pluginCredentials = null;\n\n    getPluginComponent = () => {\n        const activeType = this.getActiveType();\n        const visualization = this.memoizedGetVisualizationConfig(\n            this.props.visualization,\n            this.props.item.type,\n            activeType\n        );\n\n        if (!visualization) {\n            return (\n                <div className={this.props.classes.textDiv}>\n                    {i18n.t('No data to display')}\n                </div>\n            );\n        }\n\n        const calculatedHeight =\n            this.props.item.originalHeight -\n            this.headerRef.current.clientHeight -\n            HEADER_MARGIN_HEIGHT -\n            ITEM_CONTENT_PADDING_BOTTOM;\n\n        const props = {\n            ...this.props,\n            visualization,\n            style: this.memoizedGetContentStyle(\n                calculatedHeight,\n                this.contentRef ? this.contentRef.offsetHeight : null,\n                this.props.editMode\n            ),\n        };\n\n        switch (activeType) {\n            case VISUALIZATION:\n            case CHART:\n            case REPORT_TABLE: {\n                return (\n                    <Fragment>\n                        {!this.state.pluginIsLoaded ? (\n                            <div style={styles.loadingCover}>\n                                <LoadingMask />\n                            </div>\n                        ) : null}\n                        <VisualizationPlugin\n                            d2={this.d2}\n                            visualization={this.memoizedApplyFilters(\n                                visualization,\n                                props.itemFilters\n                            )}\n                            onLoadingComplete={this.onLoadingComplete}\n                            forDashboard={true}\n                            style={props.style}\n                        />\n                    </Fragment>\n                );\n            }\n            case MAP: {\n                if (props.item.type === MAP) {\n                    // apply filters only to thematic and event layers\n                    // for maps AO\n                    const mapViews = props.visualization.mapViews.map(obj => {\n                        if (\n                            obj.layer.includes('thematic') ||\n                            obj.layer.includes('event')\n                        ) {\n                            return this.memoizedApplyFilters(\n                                obj,\n                                props.itemFilters\n                            );\n                        }\n\n                        return obj;\n                    });\n\n                    props.visualization = {\n                        ...props.visualization,\n                        mapViews,\n                    };\n                } else {\n                    // this is the case of a non map AO passed to the maps plugin\n                    // due to a visualization type switch in dashboard item\n                    // maps plugin takes care of converting the AO to a suitable format\n                    props.visualization = this.memoizedApplyFilters(\n                        props.visualization,\n                        props.itemFilters\n                    );\n                }\n\n                return <DefaultPlugin {...props} />;\n            }\n            default: {\n                props.visualization = this.memoizedApplyFilters(\n                    props.visualization,\n                    props.itemFilters\n                );\n\n                return <DefaultPlugin {...props} />;\n            }\n        }\n    };\n\n    onLoadingComplete = () => {\n        this.setState({\n            pluginIsLoaded: true,\n        });\n    };\n\n    onToggleFooter = () => {\n        this.setState(\n            { showFooter: !this.state.showFooter },\n            this.props.onToggleItemExpanded(this.props.item.id)\n        );\n    };\n\n    onSelectActiveType = type => {\n        if (type === this.getActiveType()) {\n            return;\n        }\n\n        pluginManager.unmount(this.props.item, this.getActiveType());\n\n        this.props.onSelectActiveType(this.props.visualization.id, type);\n    };\n\n    getActiveType = () =>\n        this.props.visualization.activeType || this.props.item.type;\n\n    pluginIsAvailable = () =>\n        pluginManager.pluginIsAvailable(\n            this.props.item,\n            this.props.visualization\n        );\n\n    getContentStyle = (calculatedHeight, measuredHeight, editMode) => {\n        const height = editMode\n            ? measuredHeight || calculatedHeight\n            : calculatedHeight;\n\n        return { height };\n    };\n\n    render() {\n        const { item, editMode, itemFilters } = this.props;\n        const { showFooter } = this.state;\n\n        const actionButtons = (\n            <ItemHeaderButtons\n                item={item}\n                visualization={this.props.visualization}\n                onSelectActiveType={this.onSelectActiveType}\n                onToggleFooter={this.onToggleFooter}\n                d2={this.d2}\n                activeType={this.getActiveType()}\n                activeFooter={this.state.showFooter}\n            />\n        );\n\n        return (\n            <>\n                <ItemHeader\n                    title={pluginManager.getName(item)}\n                    itemId={item.id}\n                    actionButtons={actionButtons}\n                    ref={this.headerRef}\n                />\n                <FatalErrorBoundary>\n                    <div\n                        key={this.getUniqueKey(itemFilters)}\n                        className=\"dashboard-item-content\"\n                        ref={ref => (this.contentRef = ref)}\n                    >\n                        {this.state.configLoaded && this.getPluginComponent()}\n                    </div>\n                </FatalErrorBoundary>\n                {!editMode && showFooter ? <ItemFooter item={item} /> : null}\n            </>\n        );\n    }\n}\n\nItem.contextTypes = {\n    d2: PropTypes.object,\n};\n\nItem.propTypes = {\n    classes: PropTypes.object,\n    editMode: PropTypes.bool,\n    item: PropTypes.object,\n    itemFilters: PropTypes.object,\n    visualization: PropTypes.object,\n    onSelectActiveType: PropTypes.func,\n    onToggleItemExpanded: PropTypes.func,\n    onVisualizationLoaded: PropTypes.func,\n};\n\nItem.defaultProps = {\n    item: {},\n    editMode: false,\n    onToggleItemExpanded: Function.prototype,\n    itemFilters: {},\n    visualization: {},\n};\n\nconst mapStateToProps = (state, ownProps) => ({\n    itemFilters: sGetItemFiltersRoot(state),\n    visualization: sGetVisualization(\n        state,\n        pluginManager.extractFavorite(ownProps.item).id\n    ),\n});\n\nconst mapDispatchToProps = dispatch => ({\n    onVisualizationLoaded: visualization =>\n        dispatch(acAddVisualization(visualization)),\n    onSelectActiveType: (id, type, activeType) =>\n        dispatch(acSetActiveVisualizationType(id, type, activeType)),\n});\n\nexport default connect(\n    mapStateToProps,\n    mapDispatchToProps\n)(withStyles(styles)(Item));\n","import React from 'react';\nimport { colors } from '@dhis2/ui-core';\n\nconst style = {\n    backgroundColor: colors.grey200,\n    border: 'none',\n    height: '1px',\n    margin: '0px 0px 5px 0px',\n};\n\nconst Line = () => <hr style={style} />;\n\nexport default Line;\n","import React, { Component, Fragment } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport i18n from '@dhis2/d2-i18n';\n\nimport { sGetMessagesRoot } from '../../../reducers/messages';\nimport { formatDate } from '../../../modules/util';\nimport { colors } from '@dhis2/ui-core';\nimport ItemHeader from '../ItemHeader';\nimport Line from '../../../widgets/Line';\n\nimport './MessagesItem.css';\n\nconst PRIVATE = 'PRIVATE';\n\nconst messageTypes = {\n    [PRIVATE]: 'Private',\n    VALIDATION_RESULT: 'Validation',\n    TICKET: 'Ticket',\n    SYSTEM: 'System',\n};\n\nconst style = {\n    list: {\n        listStyleType: 'none',\n        paddingLeft: '0px',\n    },\n    seeAll: {\n        textAlign: 'center',\n        fontSize: '13px',\n        marginBottom: '5px',\n    },\n    sender: {\n        fontSize: '13px',\n        lineHeight: '15px',\n        margin: 0,\n        color: colors.grey800,\n    },\n    snippet: {\n        color: colors.grey800,\n        fontSize: '13px',\n        lineHeight: '15px',\n        maxHeight: '30px',\n        overflow: 'hidden',\n    },\n};\n\nclass MessagesItem extends Component {\n    state = {\n        uiLocale: '',\n    };\n\n    async componentDidMount() {\n        const uiLocale = await this.context.d2.currentUser.userSettings.get(\n            'keyUiLocale'\n        );\n\n        this.setState({ uiLocale });\n    }\n\n    getMessageHref = msg => {\n        const msgIdentifier = msg ? `#/${msg.messageType}/${msg.id}` : '';\n        return `${this.context.baseUrl}/dhis-web-messaging/${msgIdentifier}`;\n    };\n\n    getMessageSender = msg => {\n        const latestMsg = msg.messages.slice(-1)[0];\n        return latestMsg.sender ? latestMsg.sender.displayName : '';\n    };\n\n    getMessageItems = () => {\n        const editClass = !this.props.editMode ? 'view' : null;\n\n        return this.props.messages.map(msg => {\n            const redirectToMsg = () => {\n                if (!this.props.editMode) {\n                    document.location.href = this.getMessageHref(msg);\n                }\n            };\n\n            const sender =\n                msg.messageType === PRIVATE\n                    ? this.getMessageSender(msg)\n                    : messageTypes[msg.messageType];\n\n            const readClass = !msg.read ? 'unread' : null;\n            const latestMsg = msg.messages.slice(-1)[0];\n            const msgDate = latestMsg.lastUpdated;\n\n            return (\n                <li\n                    className={`message-item ${editClass}`}\n                    key={msg.id}\n                    onClick={redirectToMsg}\n                >\n                    <p className={`message-title ${readClass}`}>\n                        {msg.displayName} ({msg.messageCount})\n                    </p>\n                    <p style={style.sender}>\n                        {sender} - {formatDate(msgDate, this.state.uiLocale)}\n                    </p>\n                    <p style={style.snippet}>{latestMsg.text}</p>\n                </li>\n            );\n        });\n    };\n\n    render() {\n        return (\n            <Fragment>\n                <ItemHeader\n                    title={i18n.t('Messages')}\n                    itemId={this.props.item.id}\n                />\n                <Line />\n                {this.props.messages.length > 0 && (\n                    <div className=\"dashboard-item-content\">\n                        <ul style={style.list}>{this.getMessageItems()}</ul>\n                        <div style={style.seeAll}>\n                            <a href={this.getMessageHref()}>\n                                {i18n.t('See all messages')}\n                            </a>\n                        </div>\n                    </div>\n                )}\n            </Fragment>\n        );\n    }\n}\n\nMessagesItem.propTypes = {\n    editMode: PropTypes.bool,\n    item: PropTypes.object,\n    messages: PropTypes.array,\n};\n\nMessagesItem.contextTypes = {\n    d2: PropTypes.object,\n    baseUrl: PropTypes.string,\n};\n\nconst mapStateToProps = state => {\n    return {\n        messages: Object.values(sGetMessagesRoot(state)),\n    };\n};\n\nconst MessagesContainer = connect(\n    mapStateToProps,\n    null\n)(MessagesItem);\n\nexport default MessagesContainer;\n","import React, { Fragment } from 'react';\nimport PropTypes from 'prop-types';\nimport i18n from '@dhis2/d2-i18n';\nimport ItemHeader from '../ItemHeader';\nimport NotInterestedIcon from '@material-ui/icons/NotInterested';\n\nconst NotSupportedItem = props => (\n    <Fragment>\n        <ItemHeader\n            title={i18n.t('Item type \"{{type}}\" not supported', {\n                type: props.item.type,\n            })}\n            itemId={props.item.id}\n        />\n        <div\n            style={{\n                display: 'flex',\n                justifyContent: 'center',\n                alignItems: 'center',\n                height: '90%',\n            }}\n        >\n            <NotInterestedIcon\n                style={{ width: 100, height: 100, align: 'center' }}\n                color=\"disabled\"\n            />\n        </div>\n    </Fragment>\n);\n\nNotSupportedItem.propTypes = {\n    item: PropTypes.object,\n};\n\nexport default NotSupportedItem;\n","import React from 'react';\nimport { colors } from '@dhis2/ui-core';\nimport PropTypes from 'prop-types';\n\nconst DescriptionIcon = ({ className }) => (\n    <svg\n        className={className}\n        xmlns=\"http://www.w3.org/2000/svg\"\n        viewBox=\"0 0 24 24\"\n        fill={colors.grey500}\n    >\n        <path d=\"M0 0h24v24H0z\" fill=\"none\" />\n        <path d=\"M14 2H6c-1.1 0-1.99.9-1.99 2L4 20c0 1.1.89 2 1.99 2H18c1.1 0 2-.9 2-2V8l-6-6zm2 16H8v-2h8v2zm0-4H8v-2h8v2zm-3-5V3.5L18.5 9H13z\" />\n    </svg>\n);\n\nDescriptionIcon.propTypes = {\n    className: PropTypes.string,\n};\n\nexport default DescriptionIcon;\n","import React from 'react';\nimport { colors } from '@dhis2/ui-core';\nimport PropTypes from 'prop-types';\n\nconst DeleteIcon = ({ className }) => (\n    <svg\n        className={className}\n        xmlns=\"http://www.w3.org/2000/svg\"\n        width=\"18\"\n        height=\"18\"\n        viewBox=\"0 0 24 24\"\n        fill={colors.red500}\n    >\n        <path d=\"M6 19c0 1.1.9 2 2 2h8c1.1 0 2-.9 2-2V7H6v12zM19 4h-3.5l-1-1h-5l-1 1H5v2h14V4z\" />\n        <path d=\"M0 0h24v24H0z\" fill=\"none\" />\n    </svg>\n);\n\nDeleteIcon.propTypes = {\n    className: PropTypes.string,\n};\n\nexport default DeleteIcon;\n","import React, { Fragment } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { colors } from '@dhis2/ui-core';\nimport DescriptionIcon from '../../../icons/Description';\n\nimport DeleteIcon from '../../../icons/Delete';\nimport Line from '../../../widgets/Line';\nimport { itemTypeMap, getItemUrl } from '../../../modules/itemTypes';\nimport { orArray } from '../../../modules/util';\nimport { tRemoveListItemContent } from './actions';\nimport ItemHeader from '../ItemHeader';\nimport classes from './Item.module.css';\n\nconst getItemTitle = item => itemTypeMap[item.type].pluralTitle;\n\nconst getContentItems = item =>\n    orArray(item[itemTypeMap[item.type].propName]).filter(\n        (item, index, array) =>\n            array.findIndex(el => el.id === item.id) === index\n    );\n\nconst ListItem = (props, context) => {\n    const { item, editMode, tRemoveListItemContent } = props;\n    const contentItems = getContentItems(item);\n\n    const getLink = contentItem => {\n        const deleteButton = (\n            <button\n                className={classes.deletebutton}\n                onClick={() => tRemoveListItemContent(item, contentItem)}\n            >\n                <DeleteIcon className={classes.deleteicon} />\n            </button>\n        );\n\n        return (\n            <Fragment>\n                <a\n                    className={classes.link}\n                    style={{ color: colors.grey900 }}\n                    href={getItemUrl(item.type, contentItem, context.d2)}\n                >\n                    {contentItem.name}\n                </a>\n                {editMode ? deleteButton : null}\n            </Fragment>\n        );\n    };\n\n    return (\n        <Fragment>\n            <ItemHeader title={getItemTitle(item)} itemId={item.id} />\n            <Line />\n            <div className=\"dashboard-item-content\">\n                <ul className={classes.list}>\n                    {contentItems.map(contentItem => (\n                        <li className={classes.item} key={contentItem.id}>\n                            <DescriptionIcon className={classes.itemicon} />\n                            {getLink(contentItem)}\n                        </li>\n                    ))}\n                </ul>\n            </div>\n        </Fragment>\n    );\n};\n\nListItem.propTypes = {\n    editMode: PropTypes.bool,\n    item: PropTypes.object,\n    tRemoveListItemContent: PropTypes.func,\n};\n\nListItem.contextTypes = {\n    d2: PropTypes.object,\n};\n\nexport default connect(\n    null,\n    {\n        tRemoveListItemContent,\n    }\n)(ListItem);\n","import {\n    acUpdateDashboardItem,\n    acRemoveDashboardItem,\n} from '../../../actions/editDashboard';\nimport { itemTypeMap } from '../../../modules/itemTypes';\n\nexport const tRemoveListItemContent = (dashboardItem, content) => dispatch => {\n    const listItemType = itemTypeMap[dashboardItem.type].propName;\n\n    const newContent = dashboardItem[listItemType].filter(\n        item => item.id !== content.id\n    );\n\n    if (newContent.length) {\n        dashboardItem[listItemType] = newContent;\n        dispatch(acUpdateDashboardItem(dashboardItem));\n    } else {\n        dispatch(acRemoveDashboardItem(dashboardItem));\n    }\n};\n","import React, { Fragment } from 'react';\nimport { connect } from 'react-redux';\nimport i18n from '@dhis2/d2-i18n';\nimport PropTypes from 'prop-types';\n\nimport Input from '@material-ui/core/Input';\nimport {\n    Parser as RichTextParser,\n    Editor as RichTextEditor,\n} from '@dhis2/d2-ui-rich-text';\n\nimport { acUpdateDashboardItem } from '../../../actions/editDashboard';\nimport { sGetEditDashboardItems } from '../../../reducers/editDashboard';\nimport { sGetDashboardItems } from '../../../reducers/dashboards';\nimport ItemHeader from '../ItemHeader';\nimport Line from '../../../widgets/Line';\n\nconst style = {\n    textDiv: {\n        padding: '10px',\n        whiteSpace: 'pre-line',\n        lineHeight: '20px',\n    },\n    textField: {\n        fontSize: '14px',\n        fontStretch: 'normal',\n        width: '90%',\n        margin: '0 auto',\n        display: 'block',\n        lineHeight: '24px',\n    },\n    container: {\n        marginBottom: '20px',\n        marginTop: '20px',\n    },\n};\n\nconst TextItem = props => {\n    const { item, editMode, text, acUpdateDashboardItem } = props;\n\n    const onChangeText = event => {\n        const updatedItem = {\n            ...item,\n            text: event.target.value,\n        };\n\n        acUpdateDashboardItem(updatedItem);\n    };\n\n    const viewItem = () => {\n        const textDivStyle = Object.assign({}, style.textField, style.textDiv);\n        return (\n            <div className=\"dashboard-item-content\" style={style.container}>\n                <RichTextParser style={textDivStyle}>{text}</RichTextParser>\n            </div>\n        );\n    };\n\n    const editItem = () => {\n        return (\n            <Fragment>\n                <ItemHeader title={i18n.t('Text item')} itemId={item.id} />\n                <Line />\n                <div className=\"dashboard-item-content\">\n                    <RichTextEditor onEdit={onChangeText}>\n                        <Input\n                            value={text}\n                            multiline\n                            fullWidth\n                            style={style.textField}\n                            placeholder={i18n.t('Add text here')}\n                            onChange={onChangeText}\n                        />\n                    </RichTextEditor>\n                </div>\n            </Fragment>\n        );\n    };\n\n    return <Fragment>{editMode ? editItem() : viewItem()}</Fragment>;\n};\n\nconst mapStateToProps = (state, ownProps) => {\n    const items = ownProps.editMode\n        ? sGetEditDashboardItems(state)\n        : sGetDashboardItems(state);\n\n    const item = items.find(item => item.id === ownProps.item.id);\n\n    return {\n        text: item ? item.text : '',\n    };\n};\n\nTextItem.propTypes = {\n    acUpdateDashboardItem: PropTypes.func,\n    editMode: PropTypes.bool,\n    item: PropTypes.object,\n    text: PropTypes.string,\n};\n\nexport default connect(\n    mapStateToProps,\n    {\n        acUpdateDashboardItem,\n    }\n)(TextItem);\n","import React, { Fragment } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport NotInterestedIcon from '@material-ui/icons/NotInterested';\n\nimport { FILTER_ORG_UNIT } from '../../../actions/itemFilters';\nimport { sGetItemFiltersRoot } from '../../../reducers/itemFilters';\nimport ItemHeader from '../ItemHeader';\nimport Line from '../../../widgets/Line';\n\nconst getIframeSrc = (appDetails, item, itemFilters) => {\n    let iframeSrc = `${appDetails.launchUrl}?dashboardItemId=${item.id}`;\n\n    if (\n        itemFilters &&\n        itemFilters[FILTER_ORG_UNIT] &&\n        itemFilters[FILTER_ORG_UNIT].length\n    ) {\n        const ouIds = itemFilters[FILTER_ORG_UNIT].map(\n            ouPath => ouPath.split('/').slice(-1)[0]\n        );\n\n        iframeSrc += `&userOrgUnit=${ouIds.join(',')}`;\n    }\n\n    return iframeSrc;\n};\n\nconst AppItem = ({ item, itemFilters }, context) => {\n    let appDetails;\n\n    const appKey = item.appKey;\n\n    if (appKey) {\n        appDetails = context.d2.system.installedApps.find(\n            app => app.key === appKey\n        );\n    }\n\n    return appDetails && appDetails.name && appDetails.launchUrl ? (\n        <Fragment>\n            <ItemHeader title={appDetails.name} itemId={item.id} />\n            <Line />\n            <iframe\n                title={appDetails.name}\n                src={getIframeSrc(appDetails, item, itemFilters)}\n                className=\"dashboard-item-content\"\n                style={{ border: 'none' }}\n            />\n        </Fragment>\n    ) : (\n        <Fragment>\n            <ItemHeader title={`${appKey} app not found`} />\n            <Line />\n            <div\n                className=\"dashboard-item-content\"\n                style={{\n                    display: 'flex',\n                    justifyContent: 'center',\n                    alignItems: 'center',\n                    height: '90%',\n                }}\n            >\n                <NotInterestedIcon\n                    color=\"disabled\"\n                    disabled\n                    style={{ width: 100, height: 100, align: 'center' }}\n                />\n            </div>\n        </Fragment>\n    );\n};\n\nAppItem.propTypes = {\n    item: PropTypes.object,\n    itemFilters: PropTypes.object,\n};\n\nAppItem.contextTypes = {\n    d2: PropTypes.object,\n};\n\nconst mapStateToProps = state => ({\n    itemFilters: sGetItemFiltersRoot(state),\n});\n\nexport default connect(mapStateToProps)(AppItem);\n","import React, { Fragment } from 'react';\nimport PropTypes from 'prop-types';\nimport i18n from '@dhis2/d2-i18n';\n\nimport { colors } from '@dhis2/ui-core';\nimport ItemHeader from '../ItemHeader';\n\nconst style = {\n    margin: '21px 28px',\n    fontSize: '14px',\n    lineHeight: '18px',\n    color: colors.grey600,\n};\n\nconst SpacerItem = props => {\n    return (\n        <Fragment>\n            <ItemHeader title={i18n.t('Spacer')} itemId={props.item.id} />\n            <p style={style}>\n                {i18n.t(\n                    'Use a spacer to create empty vertical space between other dashboard items.'\n                )}\n            </p>\n        </Fragment>\n    );\n};\n\nSpacerItem.propTypes = {\n    item: PropTypes.object,\n};\n\nexport default SpacerItem;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport VisualizationItem from './VisualizationItem/Item';\nimport MessagesItem from './MessagesItem/Item';\nimport NotSupportedItem from './NotSupportedItem/Item';\nimport ListItem from './ListItem/Item';\nimport TextItem from './TextItem/Item';\nimport AppItem from './AppItem/Item';\nimport SpacerItem from './SpacerItem/Item';\nimport {\n    APP,\n    VISUALIZATION,\n    REPORT_TABLE,\n    CHART,\n    MAP,\n    EVENT_CHART,\n    EVENT_REPORT,\n    MESSAGES,\n    REPORTS,\n    RESOURCES,\n    USERS,\n    TEXT,\n    SPACER,\n} from '../../modules/itemTypes';\nimport { DEFAULT_STATE_ITEM_FILTERS } from '../../reducers/itemFilters';\n\nconst getGridItem = type => {\n    switch (type) {\n        case VISUALIZATION:\n        case REPORT_TABLE:\n        case CHART:\n        case MAP:\n        case EVENT_CHART:\n        case EVENT_REPORT:\n            return VisualizationItem;\n        case MESSAGES:\n            return MessagesItem;\n        case REPORTS:\n        case RESOURCES:\n        case USERS:\n            return ListItem;\n        case TEXT:\n            return TextItem;\n        case SPACER:\n            return SpacerItem;\n        case APP:\n            return AppItem;\n        default:\n            return NotSupportedItem;\n    }\n};\n\nexport const Item = props => {\n    const GridItem = getGridItem(props.item.type);\n\n    return (\n        <GridItem\n            item={props.item}\n            editMode={props.editMode}\n            itemFilters={\n                props.editMode ? DEFAULT_STATE_ITEM_FILTERS : props.itemFilters\n            }\n            onToggleItemExpanded={props.onToggleItemExpanded}\n        />\n    );\n};\n\nItem.propTypes = {\n    editMode: PropTypes.bool,\n    item: PropTypes.object,\n    itemFilters: PropTypes.object,\n    onToggleItemExpanded: PropTypes.func,\n};\n","import React from 'react';\nimport { colors } from '@dhis2/ui-core';\nimport PropTypes from 'prop-types';\n\nexport const NoContentMessage = ({ text }) => (\n    <div\n        style={{\n            padding: '50px 10px',\n            textAlign: 'center',\n            fontSize: '15px',\n            fontWeight: 500,\n            color: colors.grey600,\n        }}\n    >\n        {text}\n    </div>\n);\n\nNoContentMessage.propTypes = {\n    text: PropTypes.string,\n};\n\nexport default NoContentMessage;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport debounce from 'lodash/debounce';\nimport pick from 'lodash/pick';\n\nconst defaultDebounceMs = 100;\nconst defaultBufferFactor = 0.25;\n\nclass ProgressiveLoadingContainer extends Component {\n    static propTypes = {\n        children: PropTypes.node.isRequired,\n        bufferFactor: PropTypes.number,\n        className: PropTypes.string,\n        debounceMs: PropTypes.number,\n        style: PropTypes.object,\n    };\n    static defaultProps = {\n        debounceMs: defaultDebounceMs,\n        bufferFactor: defaultBufferFactor,\n    };\n\n    state = {\n        shouldLoad: false,\n    };\n    containerRef = null;\n    shouldLoadHandler = null;\n\n    checkShouldLoad() {\n        const bufferPx = this.props.bufferFactor * window.innerHeight;\n\n        if (!this.containerRef) {\n            return;\n        }\n\n        const rect = this.containerRef.getBoundingClientRect();\n        if (\n            rect.bottom > -bufferPx &&\n            rect.top < window.innerHeight + bufferPx\n        ) {\n            this.setState({\n                shouldLoad: true,\n            });\n\n            this.removeHandler();\n        }\n    }\n\n    registerHandler() {\n        this.shouldLoadHandler = debounce(\n            () => this.checkShouldLoad(),\n            this.props.debounceMs\n        );\n\n        window.addEventListener('scroll', this.shouldLoadHandler);\n    }\n    removeHandler() {\n        window.removeEventListener('scroll', this.shouldLoadHandler);\n    }\n\n    componentDidMount() {\n        this.registerHandler();\n        this.checkShouldLoad();\n    }\n\n    componentWillUnmount() {\n        this.removeHandler();\n    }\n\n    render() {\n        const { children, className, style, ...props } = this.props;\n        const { shouldLoad } = this.state;\n\n        const eventProps = pick(props, [\n            'onMouseDown',\n            'onTouchStart',\n            'onMouseUp',\n            'onTouchEnd',\n        ]);\n\n        return (\n            <div\n                ref={ref => (this.containerRef = ref)}\n                style={style}\n                className={className}\n                {...eventProps}\n            >\n                {shouldLoad && children}\n            </div>\n        );\n    }\n}\n\nexport default ProgressiveLoadingContainer;\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport memoize from 'lodash/memoize';\nimport i18n from '@dhis2/d2-i18n';\nimport ReactGridLayout from 'react-grid-layout';\nimport { CircularLoader, ScreenCover } from '@dhis2/ui-core';\n\nimport {\n    acUpdateDashboardLayout,\n    acRemoveDashboardItem,\n} from '../../actions/editDashboard';\nimport { Item } from '../Item/Item';\nimport { resize as pluginResize } from '../Item/VisualizationItem/plugin';\nimport { isVisualizationType } from '../../modules/itemTypes';\nimport {\n    GRID_ROW_HEIGHT,\n    GRID_COMPACT_TYPE,\n    ITEM_MIN_HEIGHT,\n    MARGIN,\n    getGridColumns,\n    hasShape,\n    onItemResize,\n} from './gridUtil';\nimport { orArray } from '../../modules/util';\n\nimport NoContentMessage from '../../widgets/NoContentMessage';\n\nimport 'react-grid-layout/css/styles.css';\nimport 'react-resizable/css/styles.css';\n\nimport './ItemGrid.css';\nimport { sGetSelectedId, sGetSelectedIsLoading } from '../../reducers/selected';\nimport {\n    sGetEditDashboardRoot,\n    sGetEditDashboardItems,\n} from '../../reducers/editDashboard';\nimport {\n    sGetDashboardById,\n    sGetDashboardItems,\n} from '../../reducers/dashboards';\nimport ProgressiveLoadingContainer from '../Item/ProgressiveLoadingContainer';\n\n// Component\n\nconst EXPANDED_HEIGHT = 17;\n// this is set in the .dashboard-item-content css\nexport const ITEM_CONTENT_PADDING_BOTTOM = 4;\n\nexport class ItemGrid extends Component {\n    state = {\n        expandedItems: {},\n    };\n\n    constructor(props) {\n        super(props);\n\n        this.getMemoizedItem = memoize(this.getItem);\n    }\n\n    onToggleItemExpanded = clickedId => {\n        const isExpanded =\n            typeof this.state.expandedItems[clickedId] === 'boolean'\n                ? this.state.expandedItems[clickedId]\n                : false;\n\n        const expandedItems = { ...this.state.expandedItems };\n        expandedItems[clickedId] = !isExpanded;\n        this.setState({ expandedItems });\n    };\n\n    onRemoveItem = clickedId => {\n        this.props.acRemoveDashboardItem(clickedId);\n    };\n\n    componentWillReceiveProps(nextProps) {\n        if (nextProps.edit) {\n            this.setState({ expandedItems: {} });\n        }\n    }\n\n    onLayoutChange = newLayout => {\n        if (this.props.edit) {\n            this.props.acUpdateDashboardLayout(newLayout);\n        }\n    };\n\n    onResizeStop = (layout, oldItem, newItem) => {\n        onItemResize(newItem.i);\n\n        const dashboardItem = this.props.dashboardItems.find(\n            item => item.id === newItem.i\n        );\n\n        // call resize on the item component if it's a plugin type\n        if (dashboardItem && isVisualizationType(dashboardItem)) {\n            pluginResize(dashboardItem);\n        }\n    };\n\n    onRemoveItemWrapper = id => () => this.onRemoveItem(id);\n\n    getItem = dashboardItem => {\n        const expandedItem = this.state.expandedItems[dashboardItem.id];\n        const hProp = { h: dashboardItem.h };\n\n        if (expandedItem && expandedItem === true) {\n            hProp.h = dashboardItem.h + EXPANDED_HEIGHT;\n        }\n\n        return Object.assign({}, dashboardItem, hProp, {\n            i: dashboardItem.id,\n            minH: ITEM_MIN_HEIGHT,\n            randomNumber: Math.random(),\n        });\n    };\n\n    getItems = dashboardItems =>\n        dashboardItems.map(item => this.getMemoizedItem(item));\n\n    getItemComponent = item => {\n        const itemClassNames = [\n            item.type,\n            this.props.edit ? 'edit' : 'view',\n        ].join(' ');\n\n        return (\n            <ProgressiveLoadingContainer\n                key={item.i}\n                className={itemClassNames}\n            >\n                <Item\n                    item={item}\n                    editMode={this.props.edit}\n                    onToggleItemExpanded={this.onToggleItemExpanded}\n                />\n            </ProgressiveLoadingContainer>\n        );\n    };\n\n    getItemComponents = items => items.map(item => this.getItemComponent(item));\n\n    render() {\n        const { edit, isLoading, dashboardItems } = this.props;\n\n        if (!isLoading && !dashboardItems.length) {\n            return (\n                <NoContentMessage\n                    text={i18n.t('There are no items on this dashboard')}\n                />\n            );\n        }\n\n        const items = edit\n            ? this.getItems(dashboardItems)\n            : dashboardItems.map(this.getItem);\n\n        return (\n            <div className=\"grid-wrapper\">\n                {isLoading ? (\n                    <ScreenCover>\n                        <CircularLoader />\n                    </ScreenCover>\n                ) : null}\n                <ReactGridLayout\n                    onLayoutChange={this.onLayoutChange}\n                    onResizeStop={this.onResizeStop}\n                    className=\"layout\"\n                    layout={items}\n                    margin={MARGIN}\n                    cols={getGridColumns()}\n                    rowHeight={GRID_ROW_HEIGHT}\n                    width={window.innerWidth}\n                    compactType={GRID_COMPACT_TYPE}\n                    isDraggable={edit}\n                    isResizable={edit}\n                    draggableCancel=\"input,textarea\"\n                >\n                    {this.getItemComponents(items)}\n                </ReactGridLayout>\n            </div>\n        );\n    }\n}\n\nItemGrid.propTypes = {\n    acRemoveDashboardItem: PropTypes.func,\n    acUpdateDashboardLayout: PropTypes.func,\n    dashboardItems: PropTypes.array,\n    edit: PropTypes.bool,\n    isLoading: PropTypes.bool,\n};\n\nItemGrid.defaultProps = {\n    dashboardItems: [],\n};\n\n// Container\n\nconst mapStateToProps = (state, ownProps) => {\n    const selectedDashboard = ownProps.edit\n        ? sGetEditDashboardRoot(state)\n        : sGetDashboardById(state, sGetSelectedId(state));\n\n    const dashboardItems = ownProps.edit\n        ? sGetEditDashboardItems(state)\n        : sGetDashboardItems(state);\n\n    return {\n        isLoading: sGetSelectedIsLoading(state) || !selectedDashboard,\n        dashboardItems,\n    };\n};\n\nconst mapDispatchToProps = {\n    acUpdateDashboardLayout,\n    acRemoveDashboardItem,\n};\n\nconst mergeProps = (stateProps, dispatchProps, ownProps) => {\n    const validItems = orArray(stateProps.dashboardItems).filter(hasShape);\n\n    return {\n        ...dispatchProps,\n        edit: ownProps.edit,\n        isLoading: stateProps.isLoading,\n        dashboardItems: validItems,\n        onItemResize,\n    };\n};\n\nexport default connect(\n    mapStateToProps,\n    mapDispatchToProps,\n    mergeProps\n)(ItemGrid);\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nimport i18n from '@dhis2/d2-i18n';\n\nimport { colors } from '@dhis2/ui-core';\n\nconst styles = {\n    badgeContainer: {\n        margin: '2px',\n        padding: '0 16px',\n        borderRadius: '4px',\n        color: colors.white,\n        backgroundColor: '#212934',\n        height: 36,\n        display: 'flex',\n        alignItems: 'center',\n    },\n    badge: {\n        fontSize: '13px',\n        cursor: 'pointer',\n        whiteSpace: 'nowrap',\n    },\n    badgeRemove: {\n        fontSize: '12px',\n        textDecoration: 'underline',\n        marginLeft: '24px',\n        cursor: 'pointer',\n    },\n};\n\nclass FilterBadge extends Component {\n    onClick = id => () => this.props.onClick(id);\n    onRemove = id => () => this.props.onRemove(id);\n\n    render() {\n        const { data } = this.props;\n\n        return (\n            <div style={styles.badgeContainer}>\n                <span style={styles.badge} onClick={this.onClick(data.id)}>\n                    {`${data.name}: ${\n                        data.values.length > 1\n                            ? i18n.t('{{count}} selected', {\n                                  count: data.values.length,\n                              })\n                            : data.values[0].name\n                    }`}\n                </span>\n                <span\n                    style={styles.badgeRemove}\n                    onClick={this.onRemove(data.id)}\n                >\n                    {i18n.t('Remove')}\n                </span>\n            </div>\n        );\n    }\n}\n\nFilterBadge.propTypes = {\n    data: PropTypes.object.isRequired,\n    onClick: PropTypes.func.isRequired,\n    onRemove: PropTypes.func.isRequired,\n};\n\nFilterBadge.defaultProps = {\n    onClick: Function.prototype,\n    onRemove: Function.prototype,\n};\n\nexport default FilterBadge;\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { createSelector } from 'reselect';\nimport { withStyles } from '@material-ui/core/styles';\n\nimport { sGetDimensions } from '../../reducers/dimensions';\nimport { sGetItemFiltersRoot } from '../../reducers/itemFilters';\nimport { sGetControlBarUserRows } from '../../reducers/controlBar';\nimport { getTopOffset } from '../ControlBar/controlBarDimensions';\nimport { acRemoveItemFilter } from '../../actions/itemFilters';\nimport { acRemoveEditItemFilter } from '../../actions/editItemFilters';\nimport { acSetActiveModalDimension } from '../../actions/activeModalDimension';\n\nimport FilterBadge from './FilterBadge';\n\nconst styles = {\n    bar: {\n        position: 'sticky',\n        zIndex: 7,\n        padding: '8px 0',\n        display: 'flex',\n        justifyContent: 'center',\n        flexWrap: 'wrap',\n    },\n};\n\nexport class FilterBar extends Component {\n    onBadgeRemove = id => {\n        this.props.removeItemFilter(id);\n        this.props.removeEditItemFilter(id);\n    };\n\n    onBadgeClick = id => {\n        this.props.setActiveModalDimension({\n            id,\n            name: this.props.filters.find(item => item.id === id).name,\n        });\n    };\n\n    render() {\n        const { filters, userRows, classes } = this.props;\n        const top = getTopOffset(userRows) + 10;\n\n        return filters.length ? (\n            <div className={classes.bar} style={{ top }}>\n                {filters.map(filter => (\n                    <FilterBadge\n                        key={filter.id}\n                        data={filter}\n                        onClick={this.onBadgeClick}\n                        onRemove={this.onBadgeRemove}\n                    />\n                ))}\n            </div>\n        ) : null;\n    }\n}\n\nFilterBar.propTypes = {\n    filters: PropTypes.array.isRequired,\n    removeEditItemFilter: PropTypes.func.isRequired,\n    removeItemFilter: PropTypes.func.isRequired,\n    classes: PropTypes.object,\n    setActiveModalDimension: PropTypes.func,\n    userRows: PropTypes.number,\n};\n\nFilterBar.defaultProps = {\n    filters: [],\n    removeItemFIlter: Function.prototype,\n    removeEditItemFilter: Function.prototype,\n};\n\n// simplify the filters structure to:\n// [{ id: 'pe', name: 'Period', values: [{ id: 2019: name: '2019' }, {id: 'LAST_MONTH', name: 'Last month' }]}, ...]\nconst filtersSelector = createSelector(\n    [sGetItemFiltersRoot, sGetDimensions],\n    (filters, dimensions) =>\n        Object.keys(filters).reduce((arr, id) => {\n            arr.push({\n                id: id,\n                name: dimensions.find(dimension => dimension.id === id).name,\n                values: filters[id].map(value => ({\n                    id: value.id,\n                    name: value.displayName || value.name,\n                })),\n            });\n\n            return arr;\n        }, [])\n);\n\nconst mapStateToProps = state => ({\n    filters: filtersSelector(state),\n    userRows: sGetControlBarUserRows(state),\n});\n\nexport default connect(\n    mapStateToProps,\n    {\n        setActiveModalDimension: acSetActiveModalDimension,\n        removeItemFilter: acRemoveItemFilter,\n        removeEditItemFilter: acRemoveEditItemFilter,\n    }\n)(withStyles(styles)(FilterBar));\n","import React, { Fragment } from 'react';\nimport PropTypes from 'prop-types';\nimport TitleBar from '../TitleBar/TitleBar';\nimport ItemGrid from '../ItemGrid/ItemGrid';\nimport FilterBar from '../FilterBar/FilterBar';\n\nexport const DashboardContent = props => (\n    <Fragment>\n        <TitleBar edit={props.editMode} />\n        <FilterBar />\n        <ItemGrid edit={props.editMode} />\n    </Fragment>\n);\n\nDashboardContent.propTypes = {\n    editMode: PropTypes.bool,\n};\n\nexport default DashboardContent;\n","import React, { Fragment } from 'react';\nimport { connect } from 'react-redux';\nimport isEmpty from 'lodash/isEmpty';\nimport i18n from '@dhis2/d2-i18n';\nimport PropTypes from 'prop-types';\n\nimport {\n    sGetAllDashboards,\n    sDashboardsIsFetching,\n} from '../../reducers/dashboards';\nimport { sGetSelectedId } from '../../reducers/selected';\nimport DashboardsBar from '../ControlBar/DashboardsBar';\nimport DashboardVerticalOffset from './DashboardVerticalOffset';\nimport DashboardContent from './DashboardContent';\nimport NoContentMessage from '../../widgets/NoContentMessage';\n\nexport const Content = ({ hasDashboardContent, dashboardsIsEmpty }) => {\n    const msg = dashboardsIsEmpty\n        ? i18n.t(\n              'No dashboards found. Use the + button to create a new dashboard.'\n          )\n        : i18n.t('Requested dashboard not found');\n\n    return hasDashboardContent ? (\n        <DashboardContent editMode={false} />\n    ) : (\n        <NoContentMessage text={msg} />\n    );\n};\n\nContent.propTypes = {\n    dashboardsIsEmpty: PropTypes.bool,\n    hasDashboardContent: PropTypes.bool,\n};\n\nexport const ViewDashboard = ({ id, dashboardsIsEmpty, dashboardsLoaded }) => {\n    const hasDashboardContent = id && !dashboardsIsEmpty;\n    const contentNotReady = !dashboardsLoaded || id === null;\n\n    return (\n        <Fragment>\n            <DashboardsBar />\n            <DashboardVerticalOffset />\n            <div className=\"dashboard-wrapper\">\n                {contentNotReady ? null : (\n                    <Content\n                        hasDashboardContent={hasDashboardContent}\n                        dashboardsIsEmpty={dashboardsIsEmpty}\n                    />\n                )}\n            </div>\n        </Fragment>\n    );\n};\n\nViewDashboard.propTypes = {\n    dashboardsIsEmpty: PropTypes.bool,\n    dashboardsLoaded: PropTypes.bool,\n    id: PropTypes.string,\n};\n\nconst mapStateToProps = state => {\n    const dashboards = sGetAllDashboards(state);\n\n    return {\n        id: sGetSelectedId(state),\n        dashboardsIsEmpty: isEmpty(dashboards),\n        dashboardsLoaded: !sDashboardsIsFetching(state),\n    };\n};\n\nexport default connect(mapStateToProps)(ViewDashboard);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport i18n from '@dhis2/d2-i18n';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport { Button } from '@dhis2/ui-core';\n\nexport const ConfirmDeleteDialog = ({\n    dashboardName,\n    onDeleteConfirmed,\n    onContinueEditing,\n    open,\n}) => {\n    const actions = [\n        <Button key=\"cancel\" secondary onClick={onContinueEditing}>\n            {i18n.t('Cancel')}\n        </Button>,\n        <Button key=\"delete\" destructive onClick={onDeleteConfirmed}>\n            {i18n.t('Delete')}\n        </Button>,\n    ];\n\n    return (\n        <Dialog open={open} onClose={onContinueEditing}>\n            <DialogTitle style={{ fontSize: '1.25rem', fontWeight: '450' }}>\n                {i18n.t('Delete dashboard')}\n            </DialogTitle>\n            <DialogContent>\n                <DialogContentText style={{ fontSize: '0.875rem' }}>\n                    {i18n.t(\n                        'Deleting dashboard \"{{ dashboardName }}\" will remove it for all users. This action cannot be undone. Are you sure you want to permanently delete this dashboard?',\n                        { dashboardName }\n                    )}\n                </DialogContentText>\n            </DialogContent>\n            <DialogActions>{actions}</DialogActions>\n        </Dialog>\n    );\n};\n\nConfirmDeleteDialog.propTypes = {\n    dashboardName: PropTypes.string,\n    open: PropTypes.bool,\n    onContinueEditing: PropTypes.func,\n    onDeleteConfirmed: PropTypes.func,\n};\n\nexport default ConfirmDeleteDialog;\n","import React, { Component, Fragment } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { Redirect } from 'react-router-dom';\nimport i18n from '@dhis2/d2-i18n';\nimport ControlBar from './ControlBar';\nimport TranslationDialog from '@dhis2/d2-ui-translation-dialog';\nimport { Button } from '@dhis2/ui-core';\n\nimport ConfirmDeleteDialog from './ConfirmDeleteDialog';\nimport {\n    tSaveDashboard,\n    acClearEditDashboard,\n} from '../../actions/editDashboard';\nimport {\n    tDeleteDashboard,\n    acSetDashboardDisplayName,\n} from '../../actions/dashboards';\nimport {\n    sGetEditDashboardRoot,\n    sGetIsNewDashboard,\n} from '../../reducers/editDashboard';\nimport {\n    CONTROL_BAR_ROW_HEIGHT,\n    MIN_ROW_COUNT,\n    getControlBarHeight,\n} from './controlBarDimensions';\nimport { apiFetchDashboard } from '../../api/dashboards';\n\nimport classes from './styles/DashboardsBar.module.css';\n\nconst buttonBarStyle = {\n    height: CONTROL_BAR_ROW_HEIGHT,\n    paddingTop: '15px',\n    marginLeft: '15px',\n    marginRight: '15px',\n};\n\nexport class EditBar extends Component {\n    state = {\n        translationDialogIsOpen: false,\n        dashboardModel: undefined,\n        confirmDeleteDialogOpen: false,\n        redirectUrl: undefined,\n    };\n\n    onConfirmDelete = () => {\n        this.setState({ confirmDeleteDialogOpen: true });\n    };\n\n    onSave = () => {\n        this.props.onSave().then(newId => {\n            this.setState({ redirectUrl: `/${newId}` });\n        });\n    };\n\n    onDiscard = () => {\n        this.props.onDiscardChanges();\n        const redirectUrl = this.props.dashboardId\n            ? `/${this.props.dashboardId}`\n            : '/';\n        this.setState({ redirectUrl });\n    };\n\n    onContinueEditing = () => {\n        this.setState({ confirmDeleteDialogOpen: false });\n    };\n\n    onDeleteConfirmed = () => {\n        this.setState({ confirmDeleteDialogOpen: false });\n        this.props.onDelete(this.props.dashboardId).then(() => {\n            this.setState({ redirectUrl: '/' });\n        });\n    };\n\n    onTranslationsSaved = async translations => {\n        if (translations && translations.length) {\n            const dbLocale = await this.context.d2.currentUser.userSettings.get(\n                'keyDbLocale'\n            );\n\n            const translation = translations.find(\n                t => t.locale === dbLocale && t.property === 'NAME'\n            );\n\n            if (translation && translation.value) {\n                this.props.onTranslate(\n                    this.props.dashboardId,\n                    translation.value\n                );\n            }\n        }\n    };\n\n    fetchDashboardModel = () => {\n        if (this.props.dashboardId && !this.state.dashboardModel) {\n            apiFetchDashboard(this.props.dashboardId).then(dashboardModel =>\n                this.setState({ dashboardModel })\n            );\n        }\n    };\n\n    componentDidMount() {\n        this.fetchDashboardModel();\n    }\n\n    componentDidUpdate() {\n        this.fetchDashboardModel();\n    }\n\n    toggleTranslationDialog = () => {\n        this.setState({\n            translationDialogIsOpen: !this.state.translationDialogIsOpen,\n        });\n    };\n\n    confirmDeleteDialog = () =>\n        this.props.deleteAccess && this.props.dashboardId ? (\n            <ConfirmDeleteDialog\n                dashboardName={this.props.dashboardName}\n                onDeleteConfirmed={this.onDeleteConfirmed}\n                onContinueEditing={this.onContinueEditing}\n                open={this.state.confirmDeleteDialogOpen}\n            />\n        ) : null;\n\n    translationDialog = () =>\n        this.state.dashboardModel && this.state.dashboardModel.id ? (\n            <TranslationDialog\n                className=\"translation-dialog\"\n                d2={this.context.d2}\n                open={this.state.translationDialogIsOpen}\n                onRequestClose={this.toggleTranslationDialog}\n                objectToTranslate={this.state.dashboardModel}\n                fieldsToTranslate={['name', 'description']}\n                // TODO handle messages in snackbar\n                onTranslationSaved={this.onTranslationsSaved}\n                onTranslationError={err =>\n                    console.log('translation update error', err)\n                }\n            />\n        ) : null;\n\n    render() {\n        if (this.state.redirectUrl) {\n            return <Redirect to={this.state.redirectUrl} />;\n        }\n\n        const { dashboardId, deleteAccess, updateAccess } = this.props;\n        const controlBarHeight = getControlBarHeight(MIN_ROW_COUNT);\n\n        const discardBtnText = updateAccess\n            ? i18n.t('Exit without saving')\n            : i18n.t('Go to dashboards');\n\n        return (\n            <Fragment>\n                <ControlBar height={controlBarHeight} editMode={true}>\n                    <div style={buttonBarStyle}>\n                        {updateAccess ? (\n                            <div className={classes.leftControls}>\n                                <span style={{ marginRight: '15px' }}>\n                                    <Button primary onClick={this.onSave}>\n                                        {i18n.t('Save changes')}\n                                    </Button>\n                                </span>\n\n                                {dashboardId ? (\n                                    <span style={{ marginRight: '15px' }}>\n                                        <Button\n                                            onClick={\n                                                this.toggleTranslationDialog\n                                            }\n                                        >\n                                            {i18n.t('Translate')}\n                                        </Button>\n                                    </span>\n                                ) : null}\n                                {dashboardId && deleteAccess ? (\n                                    <Button onClick={this.onConfirmDelete}>\n                                        {i18n.t('Delete')}\n                                    </Button>\n                                ) : null}\n                            </div>\n                        ) : null}\n\n                        <div className={classes.rightControls}>\n                            <Button secondary onClick={this.onDiscard}>\n                                {discardBtnText}\n                            </Button>\n                        </div>\n                    </div>\n                </ControlBar>\n                {this.translationDialog()}\n                {this.confirmDeleteDialog()}\n            </Fragment>\n        );\n    }\n}\n\nEditBar.propTypes = {\n    dashboardId: PropTypes.string,\n    dashboardName: PropTypes.string,\n    deleteAccess: PropTypes.bool,\n    updateAccess: PropTypes.bool,\n    onDelete: PropTypes.func,\n    onDiscardChanges: PropTypes.func,\n    onSave: PropTypes.func,\n    onTranslate: PropTypes.func,\n};\n\nEditBar.contextTypes = {\n    d2: PropTypes.object,\n};\n\nconst mapStateToProps = state => {\n    const dashboard = sGetEditDashboardRoot(state);\n\n    let deleteAccess;\n    let updateAccess;\n    if (sGetIsNewDashboard(state)) {\n        deleteAccess = true;\n        updateAccess = true;\n    } else {\n        updateAccess = dashboard.access ? dashboard.access.update : false;\n        deleteAccess = dashboard.access ? dashboard.access.delete : false;\n    }\n\n    return {\n        dashboardId: dashboard.id,\n        dashboardName: dashboard.name,\n        deleteAccess,\n        updateAccess,\n    };\n};\n\nconst mapDispatchToProps = dispatch => ({\n    onSave: () => dispatch(tSaveDashboard()).then(id => id),\n    onDelete: id => dispatch(tDeleteDashboard(id)),\n    onDiscardChanges: () => dispatch(acClearEditDashboard()),\n    onTranslate: (id, value) => dispatch(acSetDashboardDisplayName(id, value)),\n});\n\nexport default connect(\n    mapStateToProps,\n    mapDispatchToProps\n)(EditBar);\n","import React, { Fragment, Component } from 'react';\nimport { connect } from 'react-redux';\nimport i18n from '@dhis2/d2-i18n';\nimport PropTypes from 'prop-types';\n\nimport { acSetEditDashboard } from '../../actions/editDashboard';\nimport { sGetSelectedId } from '../../reducers/selected';\nimport {\n    sGetDashboardById,\n    sGetDashboardItems,\n    sDashboardsIsFetching,\n} from '../../reducers/dashboards';\nimport DashboardVerticalOffset from './DashboardVerticalOffset';\nimport DashboardContent from './DashboardContent';\nimport EditBar from '../ControlBar/EditBar';\nimport NoContentMessage from '../../widgets/NoContentMessage';\n\nexport const Content = ({ updateAccess }) => {\n    return updateAccess ? (\n        <DashboardContent editMode={true} />\n    ) : (\n        <NoContentMessage text={i18n.t('No access')} />\n    );\n};\n\nContent.propTypes = {\n    updateAccess: PropTypes.bool,\n};\nexport class EditDashboard extends Component {\n    state = {\n        initialized: false,\n    };\n\n    initEditDashboard = () => {\n        if (this.props.dashboard) {\n            this.setState({ initialized: true });\n            this.props.setEditDashboard(this.props.dashboard, this.props.items);\n        }\n    };\n\n    componentDidMount() {\n        this.initEditDashboard();\n    }\n\n    componentDidUpdate() {\n        if (!this.state.initialized) {\n            this.initEditDashboard();\n        }\n    }\n\n    getDashboardContent = () => {\n        const contentNotReady =\n            !this.props.dashboardsLoaded || this.props.id === null;\n\n        return (\n            <div className=\"dashboard-wrapper\">\n                {contentNotReady ? null : (\n                    <Content updateAccess={this.props.updateAccess} />\n                )}\n            </div>\n        );\n    };\n\n    render() {\n        return (\n            <Fragment>\n                <EditBar />\n                <DashboardVerticalOffset editMode={true} />\n                {this.getDashboardContent()}\n            </Fragment>\n        );\n    }\n}\n\nEditDashboard.propTypes = {\n    dashboard: PropTypes.object,\n    dashboardsLoaded: PropTypes.bool,\n    id: PropTypes.string,\n    items: PropTypes.array,\n    setEditDashboard: PropTypes.func,\n    updateAccess: PropTypes.bool,\n};\n\nconst mapStateToProps = state => {\n    const id = sGetSelectedId(state);\n    const dashboard = id ? sGetDashboardById(state, id) : null;\n\n    const updateAccess =\n        dashboard && dashboard.access ? dashboard.access.update : false;\n\n    return {\n        dashboard,\n        id,\n        updateAccess,\n        items: sGetDashboardItems(state),\n        dashboardsLoaded: !sDashboardsIsFetching(state),\n    };\n};\n\nexport default connect(\n    mapStateToProps,\n    {\n        setEditDashboard: acSetEditDashboard,\n    }\n)(EditDashboard);\n","import React, { Component, Fragment } from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\n\nimport { acSetEditNewDashboard } from '../../actions/editDashboard';\nimport DashboardVerticalOffset from './DashboardVerticalOffset';\nimport EditBar from '../ControlBar/EditBar';\nimport DashboardContent from './DashboardContent';\n\nclass NewDashboard extends Component {\n    componentDidMount() {\n        this.props.setNewDashboard();\n    }\n\n    render() {\n        return (\n            <Fragment>\n                <EditBar />\n                <DashboardVerticalOffset editMode={true} />\n                <div className=\"dashboard-wrapper\">\n                    <DashboardContent editMode={true} />\n                </div>\n            </Fragment>\n        );\n    }\n}\n\nNewDashboard.propTypes = {\n    setNewDashboard: PropTypes.func,\n};\n\nexport default connect(\n    null,\n    {\n        setNewDashboard: acSetEditNewDashboard,\n    }\n)(NewDashboard);\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\n\nimport { tSelectDashboard } from '../../actions/dashboards';\nimport { sDashboardsIsFetching } from '../../reducers/dashboards';\nimport { EDIT, NEW } from './dashboardModes';\nimport ViewDashboard from './ViewDashboard';\nimport EditDashboard from './EditDashboard';\nimport NewDashboard from './NewDashboard';\n\nclass Dashboard extends Component {\n    setDashboard = () => {\n        if (this.props.dashboardsLoaded) {\n            const id = this.props.match.params.dashboardId || null;\n\n            this.props.selectDashboard(id);\n\n            this.scrollToTop();\n        }\n    };\n\n    scrollToTop = () => {\n        window.scrollTo(0, 0);\n    };\n\n    componentDidMount() {\n        this.setDashboard();\n    }\n\n    componentDidUpdate() {\n        this.setDashboard();\n    }\n\n    render() {\n        switch (this.props.mode) {\n            case EDIT:\n                return <EditDashboard />;\n            case NEW:\n                return <NewDashboard />;\n            default:\n                return <ViewDashboard />;\n        }\n    }\n}\n\nDashboard.propTypes = {\n    dashboardsLoaded: PropTypes.bool,\n    match: PropTypes.object,\n    mode: PropTypes.string,\n    selectDashboard: PropTypes.func,\n};\n\nconst mapStateToProps = state => {\n    return { dashboardsLoaded: !sDashboardsIsFetching(state) };\n};\n\nexport default connect(\n    mapStateToProps,\n    {\n        selectDashboard: tSelectDashboard,\n    }\n)(Dashboard);\n","export const EDIT = 'edit';\nexport const NEW = 'new';\nexport const VIEW = 'view';\n","import React, { Component } from 'react';\nimport { HashRouter as Router, Route, Switch } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport i18n from '@dhis2/d2-i18n';\nimport { HeaderBar } from '@dhis2/ui-widgets';\nimport { CssVariables } from '@dhis2/ui-core';\n\nimport { EDIT, VIEW, NEW } from './Dashboard/dashboardModes';\nimport { acReceivedUser } from '../actions/user';\nimport { tFetchDashboards } from '../actions/dashboards';\nimport { tSetControlBarRows } from '../actions/controlBar';\nimport { tSetDimensions } from '../actions/dimensions';\nimport Dashboard from './Dashboard/Dashboard';\nimport SnackbarMessage from './SnackbarMessage/SnackbarMessage';\n\nimport 'typeface-roboto';\nimport './App.css';\n\nexport class App extends Component {\n    componentDidMount() {\n        this.props.setCurrentUser(this.props.d2.currentUser);\n        this.props.fetchDashboards();\n        this.props.setControlBarRows();\n        this.props.setDimensions(this.props.d2);\n    }\n\n    getChildContext() {\n        return { baseUrl: this.props.baseUrl, i18n, d2: this.props.d2 };\n    }\n\n    render() {\n        return (\n            <>\n                <CssVariables colors spacers />\n                <div className=\"app-wrapper\">\n                    <div className=\"dashboard-header-bar\">\n                        <HeaderBar appName={i18n.t('Dashboard')} />\n                    </div>\n                    <Router>\n                        <Switch>\n                            <Route\n                                exact\n                                path=\"/\"\n                                render={props => (\n                                    <Dashboard {...props} mode={VIEW} />\n                                )}\n                            />\n                            <Route\n                                exact\n                                path=\"/new\"\n                                render={props => (\n                                    <Dashboard {...props} mode={NEW} />\n                                )}\n                            />\n                            <Route\n                                exact\n                                path=\"/:dashboardId\"\n                                render={props => (\n                                    <Dashboard {...props} mode={VIEW} />\n                                )}\n                            />\n                            <Route\n                                exact\n                                path=\"/:dashboardId/edit\"\n                                render={props => (\n                                    <Dashboard {...props} mode={EDIT} />\n                                )}\n                            />\n                        </Switch>\n                    </Router>\n                    <SnackbarMessage />\n                </div>\n            </>\n        );\n    }\n}\n\nApp.propTypes = {\n    fetchDashboards: PropTypes.func.isRequired,\n    setControlBarRows: PropTypes.func.isRequired,\n    setCurrentUser: PropTypes.func.isRequired,\n    setDimensions: PropTypes.func.isRequired,\n    baseUrl: PropTypes.string,\n    d2: PropTypes.object,\n};\n\nApp.childContextTypes = {\n    baseUrl: PropTypes.string,\n    i18n: PropTypes.object,\n    d2: PropTypes.object,\n};\n\nconst mapDispatchToProps = dispatch => {\n    return {\n        setCurrentUser: currentUser => dispatch(acReceivedUser(currentUser)),\n        fetchDashboards: () => dispatch(tFetchDashboards()),\n        setControlBarRows: () => dispatch(tSetControlBarRows()),\n        setDimensions: d2 => dispatch(tSetDimensions(d2)),\n    };\n};\n\nexport default connect(\n    null,\n    mapDispatchToProps\n)(App);\n","import { RECEIVED_USER } from '../reducers/user';\n\nexport const acReceivedUser = value => ({\n    type: RECEIVED_USER,\n    value,\n});\n","//------------------------------------------------------------------------------\n// <auto-generated>\n// This code was generated by d2-i18n-generate.\n//\n// Changes to this file may cause incorrect behavior and will be lost if\n// the code is regenerated.\n// </auto-generated>\n//------------------------------------------------------------------------------\nimport i18n from '@dhis2/d2-i18n';\nimport moment from 'moment';\nimport 'moment/locale/ar';\nimport 'moment/locale/es';\nimport 'moment/locale/fr';\nimport 'moment/locale/lo';\nimport 'moment/locale/pt';\nimport 'moment/locale/ru';\nimport 'moment/locale/sv';\nimport 'moment/locale/tg';\nimport 'moment/locale/uk';\nimport 'moment/locale/ur';\nimport 'moment/locale/vi';\nimport 'moment/locale/zh-cn';\n\nimport arTranslations from './ar/translations.json';\nimport daTranslations from './da/translations.json';\nimport enTranslations from './en/translations.json';\nimport esTranslations from './es/translations.json';\nimport frTranslations from './fr/translations.json';\nimport idTranslations from './id/translations.json';\nimport kmTranslations from './km/translations.json';\nimport loTranslations from './lo/translations.json';\nimport myTranslations from './my/translations.json';\nimport prsTranslations from './prs/translations.json';\nimport psTranslations from './ps/translations.json';\nimport ptTranslations from './pt/translations.json';\nimport pt_BRTranslations from './pt_BR/translations.json';\nimport ruTranslations from './ru/translations.json';\nimport svTranslations from './sv/translations.json';\nimport tetTranslations from './tet/translations.json';\nimport tgTranslations from './tg/translations.json';\nimport ukTranslations from './uk/translations.json';\nimport urTranslations from './ur/translations.json';\nimport viTranslations from './vi/translations.json';\nimport zhTranslations from './zh/translations.json';\nimport zh_CNTranslations from './zh_CN/translations.json';\n\nconst namespace = 'dashboards-app';\nmoment.locale('en');\n\ni18n.addResources('ar', namespace, arTranslations);\ni18n.addResources('da', namespace, daTranslations);\ni18n.addResources('en', namespace, enTranslations);\ni18n.addResources('es', namespace, esTranslations);\ni18n.addResources('fr', namespace, frTranslations);\ni18n.addResources('id', namespace, idTranslations);\ni18n.addResources('km', namespace, kmTranslations);\ni18n.addResources('lo', namespace, loTranslations);\ni18n.addResources('my', namespace, myTranslations);\ni18n.addResources('prs', namespace, prsTranslations);\ni18n.addResources('ps', namespace, psTranslations);\ni18n.addResources('pt', namespace, ptTranslations);\ni18n.addResources('pt_BR', namespace, pt_BRTranslations);\ni18n.addResources('ru', namespace, ruTranslations);\ni18n.addResources('sv', namespace, svTranslations);\ni18n.addResources('tet', namespace, tetTranslations);\ni18n.addResources('tg', namespace, tgTranslations);\ni18n.addResources('uk', namespace, ukTranslations);\ni18n.addResources('ur', namespace, urTranslations);\ni18n.addResources('vi', namespace, viTranslations);\ni18n.addResources('zh', namespace, zhTranslations);\ni18n.addResources('zh_CN', namespace, zh_CNTranslations);\n\ni18n.setDefaultNamespace(namespace);\ni18n.changeLanguage('en');\n\nexport default i18n;\n","/** @module reducers/selected */\nimport { validateReducer } from '../modules/util';\n\nexport const SET_STYLE = 'SET_STYLE';\n\nexport const DEFAULT_STATE_STYLE = 'LIST';\n\n/**\n * Reducer functions that computes and returns the new state based on the given action\n * @function\n * @param {Object} state The current state\n * @param {Object} action The action to be evaluated\n */\nconst style = (state = DEFAULT_STATE_STYLE, action) => {\n    switch (action.type) {\n        case SET_STYLE:\n            return validateReducer(action.value, DEFAULT_STATE_STYLE);\n        default:\n            return state;\n    }\n};\n\nexport default style;\n\n/**\n * Selectors that point to specific props in the state object\n * @function\n * @param {Object} state\n * @returns {Object}\n */\nexport const sGetStyleRoot = state => state.style;\n","import { combineReducers } from 'redux';\nimport arraySort from 'd2-utilizr/lib/arraySort';\n\nimport dashboards, { sGetDashboardsRoot } from './dashboards';\nimport selected from './selected';\nimport dashboardsFilter, {\n    ownerData,\n    sGetFilterName,\n    sGetFilterOrder,\n    sGetFilterOwner,\n} from './dashboardsFilter';\nimport controlBar from './controlBar';\nimport visualizations from './visualizations';\nimport editDashboard from './editDashboard';\nimport messages from './messages';\nimport user from './user';\nimport snackbar from './snackbar';\nimport itemFilters from './itemFilters';\nimport editItemFilters from './editItemFilters';\nimport style from './style';\nimport dimensions from './dimensions';\nimport settings from './settings';\nimport activeModalDimension from './activeModalDimension';\n\nconst USER = 'system';\n\n// Reducers\n\nexport default combineReducers({\n    dashboards,\n    selected,\n    dashboardsFilter,\n    controlBar,\n    visualizations,\n    messages,\n    user,\n    editDashboard,\n    itemFilters,\n    editItemFilters,\n    style,\n    snackbar,\n    dimensions,\n    settings,\n    activeModalDimension,\n});\n\n// Map constants to data\nconst mapConstToData = {\n    NAME: 'name',\n    ITEMS: 'numberOfItems',\n    CREATED: 'created',\n    OWNER: 'owner',\n};\n\n// Selectors\n\n// Filter dashboards by name\nexport const sFilterDashboardsByName = (dashboards, filter) =>\n    dashboards.filter(d =>\n        d.displayName.toLowerCase().includes(filter.toLowerCase())\n    );\n\n// Filter dashboards by owner, TODO FIXME\nexport const sFilterDashboardsByOwner = (dashboards, filter) => {\n    const ME = ownerData[1]; // TODO\n    const OTHERS = ownerData[2]; // TODO\n\n    switch (filter) {\n        case ME:\n            return dashboards.filter(d => d.owner === USER);\n        case OTHERS:\n            return dashboards.filter(d => d.owner !== USER);\n        default:\n            return dashboards;\n    }\n};\n\n// Filter dashboards by order\nexport const sFilterDashboardsByOrder = (dashboards, filter) => {\n    const filterValues = filter.split(':');\n\n    const key = filterValues[0];\n    const direction = filterValues[1];\n\n    return arraySort(dashboards, direction, mapConstToData[key]);\n};\n\n// Selectors dependency level 2\n\n// Get filtered dashboards\nexport const sGetFilteredDashboards = state => {\n    const dashboards = sGetDashboardsRoot(state);\n\n    const nameFilter = sGetFilterName(state);\n    const ownerFilter = sGetFilterOwner(state);\n    const orderFilter = sGetFilterOrder(state);\n\n    return sFilterDashboardsByOrder(\n        sFilterDashboardsByName(\n            sFilterDashboardsByOwner(dashboards, ownerFilter),\n            nameFilter\n        ),\n        orderFilter\n    );\n};\n","import { createStore, applyMiddleware, compose } from 'redux';\nimport { createLogger } from 'redux-logger';\nimport thunk from 'redux-thunk';\nimport reducer from './reducers';\n\nconst configureStore = () => {\n    const middleware = [thunk];\n\n    // Enable Redux devtools if extension is installed instead of redux-logger\n    const composeEnhancers =\n        window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\n    if (\n        !window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ &&\n        process.env.NODE_ENV !== 'production'\n    ) {\n        middleware.push(createLogger());\n    }\n\n    return createStore(\n        reducer,\n        composeEnhancers(applyMiddleware(...middleware))\n    );\n};\n\nexport default configureStore;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport { MuiThemeProvider, createMuiTheme } from '@material-ui/core/styles';\nimport { init as d2Init, config, getManifest, getUserSettings } from 'd2';\nimport dhis2theme from '@dhis2/d2-ui-core/theme/mui3.theme';\n\nimport { Provider as RuntimeProvider } from '@dhis2/app-runtime';\nimport { CssReset } from '@dhis2/ui-core';\n\nimport App from './components/App';\nimport './index.css';\nimport i18n from './locales';\nimport configureStore from './configureStore';\n\nconst muiTheme = () => createMuiTheme(dhis2theme);\n\nconst configI18n = userSettings => {\n    const uiLocale = userSettings.keyUiLocale;\n\n    if (uiLocale && uiLocale !== 'en') {\n        config.i18n.sources.add(`./i18n/i18n_module_${uiLocale}.properties`);\n    }\n\n    config.i18n.sources.add('./i18n/i18n_module_en.properties');\n    i18n.changeLanguage(uiLocale);\n};\n\nconst init = async () => {\n    const manifest = await getManifest('./manifest.webapp');\n\n    // log app info\n    console.info(\n        `Dashboards app, v${manifest.version}, ${\n            manifest.manifest_generated_at\n        }`\n    );\n\n    const isProd = process.env.NODE_ENV === 'production';\n\n    if (\n        !isProd &&\n        (!process.env.REACT_APP_DHIS2_BASE_URL ||\n            !process.env.REACT_APP_DHIS2_AUTHORIZATION)\n    ) {\n        throw new Error(\n            'Missing env variables REACT_APP_DHIS2_BASE_URL and REACT_APP_DHIS2_AUTHORIZATION'\n        );\n    }\n\n    // api config\n    const baseUrl = isProd\n        ? manifest.activities.dhis.href\n        : process.env.REACT_APP_DHIS2_BASE_URL;\n    const authorization = process.env.REACT_APP_DHIS2_AUTHORIZATION;\n\n    config.baseUrl = `${baseUrl}/api/${manifest.dhis2.apiVersion}`;\n    config.headers = isProd ? null : { Authorization: authorization };\n    config.schemas = [\n        'chart',\n        'map',\n        'report',\n        'reportTable',\n        'eventChart',\n        'eventReport',\n        'dashboard',\n        'organisationUnit',\n        'userGroup',\n    ];\n\n    getUserSettings()\n        .then(configI18n)\n        .then(() => d2Init(config))\n        .then(initializedD2 => {\n            ReactDOM.render(\n                <RuntimeProvider\n                    config={{\n                        baseUrl: baseUrl,\n                        apiVersion: manifest.dhis2.apiVersion,\n                    }}\n                >\n                    <CssReset />\n                    <Provider store={configureStore()}>\n                        <MuiThemeProvider theme={muiTheme()}>\n                            <App baseUrl={baseUrl} d2={initializedD2} />\n                        </MuiThemeProvider>\n                    </Provider>\n                </RuntimeProvider>,\n                document.getElementById('root')\n            );\n        });\n};\n\ninit();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"leftControls\":\"DashboardsBar_leftControls__2kr14\",\"rightControls\":\"DashboardsBar_rightControls__2l1lT\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"menuItem\":\"ContentMenuItem_menuItem__2DIcB\",\"launchLink\":\"ContentMenuItem_launchLink__MRANR\",\"label\":\"ContentMenuItem_label__2pIfq\",\"buttonInsert\":\"ContentMenuItem_buttonInsert__1GlZy\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"itemWrap\":\"ItemHeader_itemWrap__3gJiQ\",\"itemHeaderWrap\":\"ItemHeader_itemHeaderWrap__xEKwZ\",\"itemTitle\":\"ItemHeader_itemTitle__3LmXp\",\"itemActionsWrap\":\"ItemHeader_itemActionsWrap__1U5Ex\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"ControlBar_root__3LaTt\",\"content\":\"ControlBar_content__1r98-\",\"draghandle\":\"ControlBar_draghandle__1VWa0\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"FatalErrorBoundary_container__x6zhd\",\"icon\":\"FatalErrorBoundary_icon__2XjC2\",\"message\":\"FatalErrorBoundary_message__2p9y8\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"ClearButton_button__2yjcV\",\"icon\":\"ClearButton_icon__1fqj8\"};","import isObject from 'lodash/isObject';\nimport { VIS_TYPE_COLUMN, VIS_TYPE_PIVOT_TABLE } from '@dhis2/analytics';\nimport { apiFetchFavorite, getMapFields } from '../../../api/metadata';\nimport {\n    REPORT_TABLE,\n    CHART,\n    MAP,\n    EVENT_REPORT,\n    EVENT_CHART,\n    itemTypeMap,\n} from '../../../modules/itemTypes';\nimport { getBaseUrl, getWithoutId } from '../../../modules/util';\nimport { getGridItemDomId } from '../../ItemGrid/gridUtil';\n\n//external plugins\nconst itemTypeToExternalPlugin = {\n    [MAP]: 'mapPlugin',\n    [EVENT_REPORT]: 'eventReportPlugin',\n    [EVENT_CHART]: 'eventChartPlugin',\n};\nconst hasIntegratedPlugin = type => [CHART, REPORT_TABLE].includes(type);\n\nconst getPlugin = type => {\n    if (hasIntegratedPlugin(type)) {\n        return true;\n    }\n    const pluginName = itemTypeToExternalPlugin[type];\n\n    return global[pluginName];\n};\n\nexport const THEMATIC_LAYER = 'thematic';\n\nexport const pluginIsAvailable = (item = {}, visualization = {}) => {\n    const type = visualization.activeType || item.type;\n\n    return !!getPlugin(type);\n};\n\nexport const extractFavorite = item => {\n    if (!isObject(item)) {\n        return null;\n    }\n\n    const propName = itemTypeMap[item.type].propName;\n\n    return (\n        item[propName] ||\n        (item.reportTable ||\n            item.chart ||\n            item.map ||\n            item.eventReport ||\n            item.eventChart ||\n            {})\n    );\n};\n\nexport const extractMapView = map =>\n    map.mapViews && map.mapViews.find(mv => mv.layer.includes(THEMATIC_LAYER));\n\nexport const loadPlugin = (plugin, config, credentials) => {\n    if (!(plugin && plugin.load)) {\n        return;\n    }\n\n    plugin.url = credentials.baseUrl;\n    plugin.loadingIndicator = true;\n    plugin.dashboard = true;\n    if (credentials.auth) {\n        plugin.auth = credentials.auth;\n    }\n    plugin.load(config);\n};\n\nexport const getId = item => extractFavorite(item).id;\nexport const getName = item => extractFavorite(item).name;\nexport const getDescription = item => extractFavorite(item).description;\nexport const getLink = (item, d2) => {\n    const baseUrl = getBaseUrl(d2);\n    const appUrl = itemTypeMap[item.type].appUrl(getId(item));\n\n    return `${baseUrl}/${appUrl}`;\n};\n\nexport const load = async (\n    item,\n    visualization,\n    { credentials, activeType }\n) => {\n    const config = {\n        ...visualization,\n        el: getGridItemDomId(item.id),\n    };\n\n    const type = activeType || item.type;\n    const plugin = getPlugin(type);\n\n    loadPlugin(plugin, config, credentials);\n};\n\nexport const fetch = async item => {\n    const fetchedFavorite = await apiFetchFavorite(getId(item), item.type, {\n        fields: item.type === MAP ? getMapFields() : null,\n    });\n\n    return fetchedFavorite;\n};\n\nexport const resize = item => {\n    const plugin = getPlugin(item.type);\n\n    if (plugin && plugin.resize) {\n        plugin.resize(getGridItemDomId(item.id));\n    }\n};\n\nexport const unmount = (item, activeType) => {\n    const plugin = getPlugin(activeType);\n\n    if (plugin && plugin.unmount) {\n        plugin.unmount(getGridItemDomId(item.id));\n    }\n};\n\nexport const getVisualizationConfig = (\n    visualization,\n    originalType,\n    activeType\n) => {\n    if (originalType === MAP && originalType !== activeType) {\n        const extractedMapView = extractMapView(visualization);\n\n        if (extractedMapView === undefined) {\n            return null;\n        }\n\n        return getWithoutId({\n            ...visualization,\n            ...extractedMapView,\n            mapViews: undefined,\n            type: activeType === CHART ? VIS_TYPE_COLUMN : VIS_TYPE_PIVOT_TABLE,\n        });\n    } else if (originalType === REPORT_TABLE && activeType === CHART) {\n        return getWithoutId({ ...visualization, type: VIS_TYPE_COLUMN });\n    } else if (originalType === CHART && activeType === REPORT_TABLE) {\n        return getWithoutId({\n            ...visualization,\n            type: VIS_TYPE_PIVOT_TABLE,\n        });\n    }\n\n    return getWithoutId(visualization);\n};\n","import isFunction from 'd2-utilizr/lib/isFunction';\n\nimport { orObject } from '../../modules/util';\n\n// Dimensions for the react-grid-layout\n\nexport const GRID_COMPACT_TYPE = 'vertical'; // vertical | horizonal | null\nexport const GRID_ROW_HEIGHT = 10;\nconst GRID_COLUMN_WIDTH_PX = 20;\nconst GRID_LAYOUT = 'FLEXIBLE'; // FIXED | FLEXIBLE\nexport const MARGIN = [10, 10];\n\nexport const NEW_ITEM_SHAPE = { x: 0, y: 0, w: 20, h: 29 };\nexport const ITEM_MIN_HEIGHT = 4;\n\n// Dimensions for getShape\n\nconst NUMBER_OF_ITEM_COLS = 2;\nconst GRID_COLUMNS = 60;\n\nexport const getGridColumns = () => {\n    switch (GRID_LAYOUT) {\n        case 'FLEXIBLE':\n            return GRID_COLUMNS;\n        case 'FIXED':\n            return Math.floor((window.innerWidth - 20) / GRID_COLUMN_WIDTH_PX);\n        default:\n            return GRID_COLUMNS;\n    }\n};\n\n// isNonNegativeInteger\n\nconst isNonNegativeInteger = x => Number.isInteger(x) && x >= 0;\n\n// Does the item have all the shape properties?\n\nexport const hasShape = item =>\n    isNonNegativeInteger(item.x) &&\n    isNonNegativeInteger(item.y) &&\n    isNonNegativeInteger(item.w) &&\n    isNonNegativeInteger(item.h);\n\n// returns a rectangular grid block dimensioned with x, y, w, h in grid units.\n// based on a grid with 3 items across\nexport const getShape = i => {\n    if (!isNonNegativeInteger(i)) {\n        throw new Error('Invalid grid block number');\n    }\n\n    const col = i % NUMBER_OF_ITEM_COLS;\n    const row = Math.floor(i / NUMBER_OF_ITEM_COLS);\n    const itemWidth = Math.floor((GRID_COLUMNS - 1) / NUMBER_OF_ITEM_COLS);\n    const itemHeight = GRID_ROW_HEIGHT * 2;\n\n    return {\n        x: col * itemWidth,\n        y: row * itemHeight,\n        w: itemWidth,\n        h: itemHeight,\n    };\n};\n\n/**\n * Calculates the grid item's original height in pixels based\n * on the height in grid units. This calculation\n * is copied directly from react-grid-layout GridItem.js (calcPosition)\n *\n * @param {Object} item item containing shape (x, y, w, h)\n */\nconst getOriginalHeight = item => {\n    const originalHeight = Math.round(\n        GRID_ROW_HEIGHT * item.h + Math.max(0, item.h - 1) * MARGIN[1]\n    );\n\n    return { originalHeight };\n};\n\n/**\n * Returns an array of items containing the x, y, w, h dimensions\n * and the item's originalheight in pixels\n * @function\n * @param {Array} items\n * @returns {Array}\n */\n\nexport const withShape = items =>\n    items.map((item, index) => {\n        const itemWithShape = hasShape(item)\n            ? item\n            : Object.assign({}, item, getShape(index));\n\n        return Object.assign(\n            {},\n            itemWithShape,\n            getOriginalHeight(itemWithShape)\n        );\n    });\n\nexport const getGridItemDomId = id => `item-${id}`;\n\nexport function onItemResize(id) {\n    const el = orObject(document.querySelector(`#${getGridItemDomId(id)}`));\n    if (isFunction(el.setViewportSize))\n        setTimeout(\n            () => el.setViewportSize(el.clientWidth - 5, el.clientHeight - 5),\n            10\n        );\n}\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"showMoreButton\":\"CategorizedMenuGroup_showMoreButton__3-0Wa\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"deleteItemButton\":\"DeleteItemButton_deleteItemButton__4YLrM\"};"],"sourceRoot":""}
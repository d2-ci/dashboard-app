{"version":3,"sources":["D2App/components/ItemSelector/styles/CategorizedMenuGroup.module.css","D2App/components/ItemSelector/styles/ItemSelector.module.css","D2App/components/TitleBar/styles/EditTitleBar.module.css","D2App/components/ItemFilter/styles/FilterSelector.module.css","D2App/components/TitleBar/styles/ViewTitleBar.module.css","D2App/components/Item/VisualizationItem/Visualization/styles/NoVisualizationMessage.module.css","D2App/components/Item/VisualizationItem/Visualization/styles/LoadingMask.module.css","D2App/components/Item/VisualizationItem/styles/FatalErrorBoundary.module.css","D2App/components/Item/ItemHeader/styles/DeleteItemButton.module.css","D2App/components/Item/ItemHeader/styles/PrintItemInfo.module.css","D2App/components/Item/VisualizationItem/styles/ItemFooter.module.css","D2App/components/Item/ListItem/Item.module.css","D2App/components/Item/PrintTitlePageItem/styles/Item.module.css","D2App/components/ItemGrid/styles/ViewItemGrid.module.css","D2App/components/FilterBar/styles/FilterBar.module.css","D2App/components/ControlBar/styles/ConfirmDeleteDialog.module.css","D2App/components/ControlBar/styles/EditBar.module.css","D2App/components/Dashboard/styles/NotSupportedNotice.module.css","D2App/components/Dashboard/styles/PrintInfo.module.css","D2App/components/Dashboard/styles/PrintActionsBar.module.css","D2App/components/Dashboard/styles/PrintLayoutDashboard.module.css","D2App/components/Dashboard/styles/PrintDashboard.module.css","D2App/components/WindowDimensionsProvider.js","D2App/components/ControlBar/ControlBar.js","D2App/icons/Star.js","D2App/api/dataStatistics.js","D2App/components/ControlBar/DashboardItemChip.js","D2App/icons/AddCircle.js","D2App/icons/Search.js","D2App/icons/Clear.js","D2App/components/ControlBar/ClearButton.js","D2App/reducers/dashboardsFilter.js","D2App/modules/isSmallScreen.js","D2App/components/ControlBar/Filter.js","D2App/actions/dashboardsFilter.js","D2App/components/ControlBar/assets/icons.js","D2App/components/ControlBar/ShowMoreButton.js","D2App/components/ControlBar/controlBarDimensions.js","D2App/reducers/controlBar.js","D2App/modules/uiBackendItemConverter.js","D2App/reducers/dashboards.js","D2App/reducers/selected.js","D2App/api/userDataStore.js","D2App/api/controlBar.js","D2App/actions/controlBar.js","D2App/components/ControlBar/DashboardsBar.js","D2App/widgets/NoContentMessage.js","D2App/components/ItemSelector/ItemSearchField.js","D2App/components/ItemSelector/HeaderMenuItem.js","D2App/icons/Launch.js","D2App/components/ItemSelector/ContentMenuItem.js","D2App/reducers/editDashboard.js","D2App/api/metadata.js","D2App/api/index.js","D2App/api/dashboards.js","D2App/api/editDashboard.js","D2App/reducers/user.js","D2App/actions/dashboards.js","D2App/reducers/dimensions.js","D2App/reducers/itemFilters.js","D2App/actions/itemFilters.js","D2App/reducers/messages.js","D2App/api/messages.js","D2App/components/Item/MessagesItem/actions.js","D2App/reducers/alert.js","D2App/actions/alert.js","D2App/reducers/visualizations.js","D2App/actions/visualizations.js","D2App/api/description.js","D2App/actions/selected.js","D2App/api/localStorage.js","D2App/actions/editDashboard.js","D2App/components/ItemSelector/selectableItems.js","D2App/components/ItemSelector/CategorizedMenuGroup.js","D2App/components/ItemSelector/actions.js","D2App/components/ItemSelector/SinglesMenuGroup.js","D2App/components/ItemSelector/ItemSelector.js","D2App/components/TitleBar/EditTitleBar.js","D2App/components/Item/VisualizationItem/assets/icons.js","D2App/components/ItemFilter/FilterDialog.js","D2App/reducers/settings.js","D2App/reducers/activeModalDimension.js","D2App/actions/activeModalDimension.js","D2App/components/ItemFilter/FilterSelector.js","D2App/components/TitleBar/ViewTitleBar.js","D2App/components/TitleBar/TitleBar.js","D2App/components/Item/VisualizationItem/Visualization/NoVisualizationMessage.js","D2App/components/Item/VisualizationItem/Visualization/DefaultPlugin.js","D2App/components/Item/VisualizationItem/Visualization/MapPlugin.js","D2App/components/Item/VisualizationItem/Visualization/LoadingMask.js","D2App/components/Item/VisualizationItem/Visualization/getFilteredVisualization.js","D2App/components/Item/VisualizationItem/Visualization/getVisualizationConfig.js","D2App/modules/memoizeOne.js","D2App/components/Item/VisualizationItem/Visualization/Visualization.js","D2App/components/Item/VisualizationItem/FatalErrorBoundary.js","D2App/components/Item/ItemHeader/ViewItemActions.js","D2App/components/Item/ItemHeader/DeleteItemButton.js","D2App/components/Item/ItemHeader/EditItemActions.js","D2App/icons/Info.js","D2App/components/Item/ItemHeader/PrintItemInfo.js","D2App/components/Dashboard/dashboardModes.js","D2App/components/Item/ItemHeader/ItemHeader.js","D2App/components/Item/VisualizationItem/ItemHeaderButtons.js","D2App/components/Item/VisualizationItem/ItemFooter.js","D2App/components/Item/VisualizationItem/Item.js","D2App/widgets/Line.js","D2App/components/Item/MessagesItem/Item.js","D2App/components/Item/NotSupportedItem/Item.js","D2App/icons/Description.js","D2App/icons/Delete.js","D2App/components/Item/ListItem/Item.js","D2App/components/Item/ListItem/actions.js","D2App/reducers/printDashboard.js","D2App/components/Item/TextItem/Item.js","D2App/components/Item/AppItem/Item.js","D2App/components/Item/SpacerItem/Item.js","D2App/components/Item/PageBreakItem/Item.js","D2App/components/Item/PrintTitlePageItem/Item.js","D2App/components/Item/Item.js","D2App/components/Item/ProgressiveLoadingContainer.js","D2App/components/ItemGrid/ViewItemGrid.js","D2App/components/FilterBar/FilterBadge.js","D2App/components/FilterBar/FilterBar.js","D2App/reducers/windowHeight.js","D2App/actions/printDashboard.js","D2App/components/Dashboard/ViewDashboard.js","D2App/components/ItemGrid/EditItemGrid.js","D2App/components/ControlBar/ConfirmDeleteDialog.js","D2App/components/ControlBar/EditBar.js","D2App/components/Dashboard/NotSupportedNotice.js","D2App/components/Dashboard/PrintInfo.js","D2App/icons/LessHorizontal.js","D2App/components/Dashboard/PrintActionsBar.js","D2App/modules/printUtils.js","D2App/components/ItemGrid/PrintLayoutItemGrid.js","D2App/components/Dashboard/PrintLayoutDashboard.js","D2App/components/Dashboard/EditDashboard.js","D2App/components/Dashboard/NewDashboard.js","D2App/components/ItemGrid/PrintItemGrid.js","D2App/components/Dashboard/PrintDashboard.js","D2App/actions/windowHeight.js","D2App/components/Dashboard/Dashboard.js","D2App/components/AlertBar/AlertBar.js","D2App/actions/user.js","D2App/actions/dimensions.js","D2App/api/settings.js","D2App/actions/settings.js","D2App/components/App.js","D2App/reducers/style.js","D2App/reducers/index.js","D2App/configureStore.js","D2App/locales/index.js","D2App/AppWrapper.js","D2App/modules/itemTypes.js","D2App/modules/util.js","D2App/components/ItemGrid/gridUtil.js","D2App/modules/item.js","D2App/components/Item/VisualizationItem/Visualization/plugin.js","D2App/components/Item/ItemHeader/styles/ItemHeader.module.css","D2App/components/ControlBar/styles/ControlBar.module.css","D2App/components/ControlBar/styles/DashboardItemChip.module.css","D2App/components/ControlBar/styles/ClearButton.module.css","D2App/components/ControlBar/styles/Filter.module.css","D2App/components/ControlBar/styles/ShowMoreButton.module.css","D2App/components/ControlBar/styles/DashboardsBar.module.css","D2App/components/ItemSelector/styles/HeaderMenuItem.module.css","D2App/components/ItemSelector/styles/ContentMenuItem.module.css"],"names":["module","exports","WindowDimensionsCtx","createContext","windowDims","height","window","innerHeight","width","innerWidth","WindowDimensionsProvider","children","dimensions","setDimensions","useState","useEffect","handleResize","debounce","addEventListener","removeEventListener","Provider","value","useWindowDimensions","useContext","ControlBar","React","Component","constructor","props","super","onStartDrag","this","setState","dragging","onDrag","onEndDrag","event","preventDefault","stopPropagation","newHeight","clientY","onChangeHeight","requestAnimationFrame","renderDragHandle","data-testid","className","classes","draghandle","style","onMouseDown","state","render","Math","max","rootClass","cx","root","content","defaultProps","StarIcon","xmlns","viewBox","d","fill","apiPostDataStatistics","async","eventType","id","d2","getInstance","url","Api","getApi","post","DashboardItemChip","starred","selected","label","dashboardId","onClick","chipProps","selectedState","unselected","icon","Star","debouncedPostStatistics","link","to","data-test","AddCircleIcon","colors","teal600","SearchIcon","ClearIcon","grey800","ClearButton","onClear","button","Clear","color","SET_DASHBOARDS_FILTER","CLEAR_DASHBOARDS_FILTER","sGetDashboardsFilter","dashboardsFilter","isSmallScreen","mapDispatchToProps","setDashboardsFilter","type","clearDashboardsFilter","connect","filterText","isMaxHeight","onKeypressEnter","onToggleMaxHeight","focusedClassName","setFocusedClassName","searchButton","Search","searchIcon","container","onFocus","focused","onBlur","input","placeholder","i18n","t","onChange","target","onKeyUp","keyCode","ChevronDown","ChevronUp","ShowMoreButton","disabled","buttonLabel","placement","showMore","aria-label","getRowsHeight","rows","getControlBarHeight","FIRST_ROW_PADDING_HEIGHT","SET_CONTROLBAR_USER_ROWS","combineReducers","userRows","action","validateReducer","sGetControlBarUserRows","controlBar","sGetControlBarRoot","spacerContent","emptyTextItemContent","isTextType","item","TEXT","text","convertUiItemsToBackend","items","map","SPACER","isUiSpacerType","convertBackendItemsToUi","isBackendSpacerType","gridProperties","getGridItemProperties","SET_DASHBOARDS","ADD_DASHBOARDS","SET_DASHBOARD_STARRED","SET_DASHBOARD_DISPLAY_NAME","SET_DASHBOARD_ITEMS","DEFAULT_STATE_DASHBOARDS","byId","EMPTY_DASHBOARD","updateDashboardProp","prop","sGetDashboardsRoot","dashboards","sGetDashboardById","orObject","sDashboardsIsFetching","sGetAllDashboards","sGetDashboardItems","sGetStarredDashboards","Object","values","filter","dashboard","sGetUnstarredDashboards","getCustomDashboards","data","arrayFrom","name","displayName","description","displayDescription","favorite","owner","user","created","split","join","substr","lastUpdated","access","numberOfItems","orArray","dashboardItems","length","SET_SELECTED_ID","SET_SELECTED_ISLOADING","SET_SELECTED_SHOWDESCRIPTION","SET_SELECTED_ITEM_ACTIVE_TYPE","CLEAR_SELECTED_ITEM_ACTIVE_TYPES","DEFAULT_STATE_SELECTED_SHOWDESCRIPTION","DEFAULT_STATE_SELECTED_ITEM_ACTIVE_TYPES","isLoading","showDescription","itemActiveTypes","activeType","sGetSelectedRoot","sGetSelectedId","sGetSelectedIsLoading","sGetSelectedShowDescription","sGetSelectedItemActiveType","NAMESPACE","hasNamespace","currentUser","dataStore","has","getNamespace","get","create","apiPostUserDataStoreValue","key","set","apiGetUserDataStoreValue","defaultValue","namespace","keys","find","k","console","log","KEY_CONTROLBAR_ROWS","acSetControlBarUserRows","tSetControlBarRows","controlBarRows","apiGetControlBarRows","dispatch","err","error","withRouter","selectedId","history","setRows","ref","createRef","scrollToTop","current","scroll","toggleMaxHeight","newRows","cancelMaxHeight","getFilteredDashboards","filteredDashboards","arraySort","toLowerCase","includes","containerClass","expanded","collapsed","viewableRows","rowHeightProp","floor","min","apiPostControlBarRows","controls","newLink","AddCircle","Filter","push","chips","chipContainerClasses","chipContainer","getDashboardChips","marginTop","NoContentMessage","padding","textAlign","fontSize","fontWeight","grey600","ItemSearchField","dataTest","HeaderMenuItem","title","dense","LaunchIcon","LaunchLink","e","launchLink","rel","href","Launch","InsertButton","buttonInsert","ContentMenuItem","onInsert","visType","ItemIcon","getItemIcon","renderedItemIcon","VISUALIZATION","visTypeIcons","menuItem","marginRight","RECEIVED_EDIT_DASHBOARD","RECEIVED_NOT_EDITING","START_NEW_DASHBOARD","RECEIVED_TITLE","RECEIVED_DESCRIPTION","ADD_DASHBOARD_ITEM","REMOVE_DASHBOARD_ITEM","UPDATE_DASHBOARD_ITEM","RECEIVED_DASHBOARD_LAYOUT","SET_PRINT_PREVIEW_VIEW","CLEAR_PRINT_PREVIEW_VIEW","DEFAULT_STATE_EDIT_DASHBOARD","NEW_DASHBOARD_STATE","printPreviewView","sGetEditDashboardRoot","editDashboard","sGetIsEditing","isEmpty","sGetIsPrintPreviewView","sGetEditDashboardItems","getIdNameFields","rename","getDimensionFields","withItems","arrayClean","getAxesFields","getFavoriteFields","withDimensions","withOptions","getFavoritesFields","apiFetchVisualization","getVisualizationId","fields","MAP","getEndPointName","onError","getDashboardItemsFields","withFavorite","getDashboardFields","dashboardsQuery","resource","params","paging","dashboardQuery","starDashboardMutation","unstarDashboardMutation","deleteDashboardMutation","apiFetchDashboard","dataEngine","query","variables","createDashboardMutation","updateDashboardMutation","generatePayload","w","h","RECEIVED_USER","DEFAULT_STATE_USER","username","uiLocale","isSuperuser","sGetUserUsername","tFetchDashboards","getState","arrayToIdMap","acSetDashboards","apiFetchDashboards","tStarDashboard","isStarred","onSuccess","acSetDashboardStarred","mutate","apiStarDashboard","tDeleteDashboard","apiDeleteDashboard","Promise","resolve","SET_DIMENSIONS","DEFAULT_DIMENSIONS","getDimensionById","DIMENSION_ID_PERIOD","DIMENSION_ID_ORGUNIT","sGetDimensions","CLEAR_ITEM_FILTERS","SET_ITEM_FILTERS","ADD_ITEM_FILTER","REMOVE_ITEM_FILTER","DEFAULT_STATE_ITEM_FILTERS","sGetItemFiltersRoot","itemFilters","sGetNamedItemFilters","createSelector","filters","reduce","arr","dimension","acRemoveItemFilter","RECEIVED_MESSAGES","sGetMessagesRoot","messages","messageConversationsQuery","order","pageSize","tGetMessages","messageConversations","getMessages","SET_ALERT_MESSAGE","CLEAR_ALERT_MESSAGE","sGetAlertMessage","alert","acClearAlertMessage","ADD_VISUALIZATION","CLEAR_VISUALIZATIONS","DEFAULT_STATE_VISUALIZATIONS","p","undefined","sGetVisualization","visualizations","sGetVisualizationsRoot","acAddVisualization","KEY_SHOW_DESCRIPTION","acSetSelectedId","acSetSelectedIsLoading","acSetSelectedShowDescription","tSetSelectedDashboardById","alertTimeout","setTimeout","customDashboard","withShape","localStorage","setItem","forEach","REPORT_TABLE","CHART","EVENT_REPORT","EVENT_CHART","getVisualizationFromItem","MESSAGES","clearTimeout","tSetShowDescription","apiGetShowDescription","tUpdateShowDescription","apiPostShowDescription","acClearEditDashboard","acAddDashboardItem","itemPropName","itemTypeMap","propName","generateUid","gridItemProperties","shape","PAGEBREAK","yPos","getPageBreakItemShape","isStatic","PRINT_TITLE_PAGE","getPrintTitlePageItemShape","NEW_ITEM_SHAPE","position","acUpdateDashboardItem","acRemoveDashboardItem","tSaveDashboard","dashboardToSave","response","uid","updateDashboard","postDashboard","singleItems","header","categorizedItems","USERS","REPORTS","RESOURCES","APP","listItemTypes","CategorizedMenuGroup","addItem","tAddListItemContent","newItem","toggleSeeMore","seeMore","onChangeItemsLimit","hasMore","itemUrl","getItemUrl","context","showMoreButton","margin","contextTypes","PropTypes","object","isRequired","listItemType","dashboardItemIndex","findIndex","dashboardItem","category","addToDashboard","ItemSelector","isOpen","setIsOpen","setFilter","setItems","maxOptions","setMaxOptions","Set","queryString","filterStr","then","catch","updateMaxOptions","options","delete","add","inputRef","reference","onClickOutside","arrow","maxWidth","menu","itemType","endPointName","itemCount","getDefaultItemCount","allItems","displayItems","slice","pluralTitle","concat","EditTitleBar","onChangeTitle","onChangeDescription","section","titleDescription","_","itemSelector","selectedDashboard","ThreeDots","SpeechBubble","fillRule","transform","Warning","Fullscreen","ExitFullscreen","FilterDialog","displayNameProperty","initiallySelectedItems","addItemFilter","removeItemFilter","onClose","setFilters","onSelectItems","dimensionId","onDeselectItems","itemIdsToRemove","newList","onReorderItems","itemIds","oldList","reorderedList","large","commonProps","onSelect","onDeselect","onReorder","selectedItems","selectedPeriods","ouItems","renderDialogContent","secondary","primary","filterItems","ADD_SETTINGS","DEFAULT_SETTINGS","keyDateFormat","keyAnalysisRelativePeriod","keyAnalysisDigitGroupSeparator","rootOrganisationUnit","keyGatherAnalyticalObjectStatisticsInDashboardViews","sGetSettings","settings","sGetSettingsDisplayNameProperty","sGatherAnalyticalObjectStatisticsInDashboardViews","SET_ACTIVE_MODAL_DIMENSION","CLEAR_ACTIVE_MODAL_DIMENSION","DEFAULT_STATE_ACTIVE_MODAL_DIMENSION","sGetActiveModalDimension","activeModalDimension","acSetActiveModalDimension","clearActiveModalDimension","setActiveModalDimension","showPopover","setShowPopover","useRef","onCloseDialog","buttonContainer","onDimensionClick","selectedIds","ViewTitleBar","moreOptionsIsOpen","setMoreOptionsIsOpen","sharingDialogIsOpen","setSharingDialogIsOpen","redirectUrl","setRedirectUrl","onToggleStarredDashboard","onShowHideDescription","toggleSharingDialog","toggleMoreOptions","titleStyle","assign","cursor","userSelect","top","StarBorder","showHideDescriptionLabel","toggleStarredDashboardLabel","buttonRef","userAccess","titleBar","actions","titleBarIcon","strip","update","editLink","manage","shareButton","small","marginLeft","paddingTop","paddingBottom","open","onRequestClose","stateProps","dispatchProps","ownProps","black","minWidth","TitleBar","edit","NoVisualizationMessage","message","DefaultPlugin","pluginCredentials","pluginIsAvailable","pluginManager","shouldPluginReload","prevProps","reloadAllowed","filtersChanged","vis","visualization","prevVis","visChanged","reloadPlugin","credentials","componentDidMount","baseUrl","getBaseUrl","auth","defaultHeaders","Authorization","componentDidUpdate","componentWillUnmount","getGridItemDomId","MapPlugin","applyFilters","mapViews","mapView","layer","hideTitle","LoadingMask","center","getFilteredVisualization","visRows","obj","visColumns","columns","visFilters","dimensionFound","dimensionObjects","getWithoutId","getVisualizationConfig","originalType","extractedMapView","mv","VIS_TYPE_COLUMN","VIS_TYPE_PIVOT_TABLE","layout","getAdaptedUiLayoutByType","memoizeOne","fn","lastArgs","lastValue","args","every","arg","i","Visualization","pluginLoaded","onLoadingComplete","memoizedGetFilteredVisualization","memoizedGetVisualizationConfig","availableHeight","pluginProps","forDashboard","FatalErrorBoundary","errorFound","componentDidCatch","info","ViewItemActions","actionButtons","itemActionsWrap","DeleteItemButton","deleteItemButton","red500","itemId","WarningIcon","PrintWarning","warning","Info","EDIT","NEW","VIEW","PRINT","PRINT_LAYOUT","isEditMode","mode","isPrintMode","isViewMode","ItemHeader","forwardRef","dashboardMode","isShortened","rest","Actions","EditItemActions","PrintItemInfo","getItemActionsMap","itemHeaderWrap","itemTitle","iconFill","ItemHeaderButtons","menuIsOpen","setMenuIsOpen","useConfig","onSelectActiveType","isTrackerType","isTrackerDomainType","onViewTable","closeMenu","onViewChart","onViewMap","canViewAs","isSingleValue","isYearOverYear","VIS_TYPE_GAUGE","VIS_TYPE_PIE","interpretationMenuLabel","activeFooter","ViewAsMenuItems","hasMapView","isFullscreen","onToggleFullscreen","appName","getAppName","getLink","onToggleFooter","fullscreenSupported","ItemFooter","line","scrollContainer","Item","showFooter","configLoaded","isFullscreenSupported","el","document","querySelector","itemDomElSelector","requestFullscreen","webkitRequestFullscreen","handleFullscreenChange","fullscreenElement","webkitFullscreenElement","exitFullscreen","webkitExitFullscreen","getUniqueKey","uniqueId","onToggleItemExpanded","setActiveType","getActiveType","isEditing","getAvailableHeight","calculatedHeight","getItemHeightPx","headerRef","clientHeight","memoizedGetContentHeight","contentRef","offsetHeight","measuredHeight","preferMeasured","updateVisualization","gatherDataStatistics","getDataStatisticsName","onfullscreenchange","onwebkitfullscreenchange","getVisualizationName","shortened","contextType","Function","prototype","backgroundColor","grey200","border","Line","PRIVATE","messageTypes","VALIDATION_RESULT","TICKET","SYSTEM","list","listStyleType","paddingLeft","seeAll","marginBottom","sender","lineHeight","snippet","maxHeight","overflow","MessagesItem","getMessageHref","msg","msgIdentifier","messageType","getMessageSender","latestMsg","getMessageItems","modeClass","readClass","read","msgDate","location","messageCount","formatDate","userSettings","string","MessagesContainer","NotSupportedItem","display","justifyContent","alignItems","align","DescriptionIcon","grey500","DeleteIcon","getItemTitle","ListItem","tRemoveListItemContent","contentItems","index","array","getContentItems","contentItem","deleteButton","deletebutton","deleteicon","grey900","Description","itemicon","newContent","SET_PRINT_DASHBOARD","CLEAR_PRINT_DASHBOARD","ADD_PRINT_DASHBOARD_ITEM","SET_PRINT_DASHBOARD_LAYOUT","REMOVE_PRINT_DASHBOARD_ITEM","UPDATE_PRINT_DASHBOARD_ITEM","DEFAULT_STATE_PRINT_DASHBOARD","DEFAULT_DASHBOARD_ITEMS","NEW_PRINT_DASHBOARD_STATE","sGetPrintDashboardRoot","printDashboard","sGetIsPrinting","sGetPrintDashboardItems","textDiv","whiteSpace","textField","fontStretch","onChangeText","updatedItem","viewItem","textDivStyle","editItem","onEdit","multiline","fullWidth","printItem","textItem","getIframeSrc","appDetails","iframeSrc","launchUrl","ouIds","ouFilter","path","AppItem","appKey","system","installedApps","app","dashboardWidget","src","SpacerItem","PageBreakItem","PrintTitlePageItem","titlePage","filterTitle","listItems","filterListItem","val","filterList","getItemFilterList","viewDashboard","sGetPrintDashboardName","sGetPrintDashboardDescription","GridItem","VisualizationItem","TextItem","getGridItem","ProgressiveLoadingContainer","shouldLoad","containerRef","shouldLoadHandler","handlerOptions","passive","checkShouldLoad","bufferPx","bufferFactor","rect","getBoundingClientRect","bottom","removeHandler","registerHandler","debounceMs","getElementsByClassName","eventProps","pick","hasShape","expandedItems","setExpandedItems","setDisplayItems","layoutSm","setLayoutSm","getSmallLayout","adjustHeightForExpanded","clickedId","isExpanded","newExpandedItems","expandedItem","gridContainer","translucent","rowHeight","GRID_ROW_HEIGHT","cols","lg","getGridColumns","sm","SM_SCREEN_GRID_COLUMNS","breakpoints","SMALL_SCREEN_BREAKPOINT","layouts","compactType","GRID_COMPACT_TYPE","MARGIN","containerPadding","isDraggable","isResizable","draggableCancel","getItemComponent","styles","badgeContainer","borderRadius","white","badge","badgeRemove","textDecoration","FilterBadge","onRemove","count","FilterBar","onBadgeRemove","onBadgeClick","bar","removeItemFIlter","SET_WINDOW_HEIGHT","DEFAULT_STATE_WINDOW_HEIGHT","sGetWindowHeight","windowHeight","acSetPrintDashboard","acClearPrintDashboard","acAddPrintDashboardItem","isOneItemPerPage","acUpdatePrintDashboardItem","dashboardIsEditing","dashboardIsPrinting","clearEditDashboard","clearPrintDashboard","ViewItemGrid","acUpdateDashboardLayout","onLayoutChange","newLayout","onResizeStop","oldItem","setViewportSize","clientWidth","onItemResize","isVisualizationType","pluginResize","ConfirmDeleteDialog","dashboardName","onDeleteConfirmed","onContinueEditing","destructive","EditBar","translationDialogIsOpen","dashboardModel","confirmDeleteDialogOpen","onConfirmDelete","onSave","newId","onPrintPreview","isPrintPreviewView","clearPrintPreview","showPrintPreview","onDiscard","onDiscardChanges","onDelete","onTranslationsSaved","translations","dbLocale","translation","locale","property","onTranslate","fetchDashboardModel","toggleTranslationDialog","confirmDeleteDialog","deleteAccess","translationDialog","objectToTranslate","modelDefinition","fieldsToTranslate","onTranslationSaved","onTranslationError","renderActionButtons","updateAccess","discardBtnText","editBar","sGetIsNewDashboard","acSetDashboardDisplayName","NotSupportedNotice","noticeContainer","PrintInfo","isLayout","a4LandscapeWidthPx","infoHeader","infoWrapper","infoList","divider","LessHorizontalIcon","PrintActionsBar","inner","LessHorizontal","print","topMargin","getTransformYPx","elStyle","transformY","match","parseInt","PrintLayoutItemGrid","updateDashboardLayout","isFirstPageBreak","pageBreaks","sortedPageBreaks","sortBy","y","itemClassNames","getItemComponents","hideExtraPageBreaks","sortedElements","elements","types","elementsWithBoundingRect","Array","from","classList","indexOf","bottomY","getDomGridItemsSortedByYPos","querySelectorAll","pageBreakBottom","lastItemBottom","foundNonPageBreak","thisItemBottom","gridElement","firstBreak","scrollArea","EDIT_BAR_HEIGHT","isLeapPage","n","x","getMultiple","factor","multiple","PrintLayoutDashboard","initialized","initPrintLayoutDashboard","setPrintDashboard","MAX_ITEM_GRID_HEIGHT","updateDashboardItem","addDashboardItem","yPosList","pageNum","addPageBreaks","getWrapperStyle","fromEdit","spacers","dp24","wrapper","pageOuter","setEditDashboard","renderGrid","setNewDashboard","PrintItemGrid","PrintDashboard","initPrintDashboard","sortedItems","spacerCount","removeDashboardItem","MAX_ITEM_GRID_WIDTH_OIPP","MAX_ITEM_GRID_HEIGHT_OIPP","dashboardMap","dashboardsIsEmpty","dashboardsLoaded","routeId","selectDashboard","dashboardToSelect","preferredId","getItem","dash","sGetDashboardsSortedByStarred","setWindowHeight","getElementsByTagName","remove","setHeaderbarVisibility","onResize","onHidden","permanent","tSetDimensions","acSetDimensions","displayNameProp","apiFetchDimensions","dim","dimensionType","dataDimensionType","SYSTEM_SETTINGS","tAddSettings","extraSettings","fetchedSettings","s","apiFetchSystemSettings","App","setCurrentUser","fetchDashboards","setControlBarRows","setShowDescription","addSettings","getChildContext","exact","AlertBar","childContextTypes","DEFAULT_STATE_STYLE","objectClean","conversations","$merge","d2Object","keyUiLocale","authorities","newState","$splice","$unshift","idToRemove","stateItems","layoutHasChanged","newStateItems","stateItem","si","configureStore","middleware","thunk","withExtraArgument","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","createStore","reducer","applyMiddleware","addResources","arTranslations","ar_IQTranslations","ckbTranslations","csTranslations","daTranslations","enTranslations","esTranslations","frTranslations","idTranslations","kmTranslations","loTranslations","myTranslations","nbTranslations","prsTranslations","psTranslations","ptTranslations","pt_BRTranslations","ruTranslations","svTranslations","tetTranslations","tgTranslations","ukTranslations","urTranslations","uzTranslations","uz_CyrlTranslations","viTranslations","zhTranslations","zh_CNTranslations","d2Config","schemas","authorization","process","REACT_APP_DHIS2_AUTHORIZATION","headers","AppWrapper","useDataEngine","store","theme","createMuiTheme","dhis2theme","i18nRoot","DOMAIN_TYPE_AGGREGATE","DOMAIN_TYPE_TRACKER","domainType","defaultItemCount","appUrl","dataStatisticsName","Date","getTime","TableIcon","ChartIcon","MapIcon","ExtensionIcon","PersonIcon","FontDownloadIcon","EmailIcon","CropFreeIcon","NotInterestedIcon","param","isArray","isObject","global","Intl","DateTimeFormat","year","month","day","format","replace","api","idx","isNonNegativeInteger","Number","isInteger","getProportionalHeight","ratioWH","minH","GRID_COLUMNS","static","round","Error","col","row","itemWidth","MAX_ITEM_GRID_WIDTH","itemHeight","getShape","reportTable","chart","eventReport","eventChart","itemTypeToExternalPlugin","getPlugin","hasIntegratedPlugin","load","config","plugin","loadingIndicator","loadPlugin","resize","unmount"],"mappings":"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","file":"static/js/app.bad6da9c.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"showMoreButton\":\"CategorizedMenuGroup_showMoreButton__2RbRp\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"menu\":\"ItemSelector_menu__2VYae\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"section\":\"EditTitleBar_section__LIaIC\",\"titleDescription\":\"EditTitleBar_titleDescription__1YsU6\",\"title\":\"EditTitleBar_title__3mUbt\",\"description\":\"EditTitleBar_description__24U5X\",\"itemSelector\":\"EditTitleBar_itemSelector__1cFEp\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"buttonContainer\":\"FilterSelector_buttonContainer__O_amY\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"actions\":\"ViewTitleBar_actions__2UTRz\",\"editLink\":\"ViewTitleBar_editLink__d_HzW\",\"titleBar\":\"ViewTitleBar_titleBar__eiwJS\",\"titleBarIcon\":\"ViewTitleBar_titleBarIcon__2cBxv\",\"strip\":\"ViewTitleBar_strip__3xR4U\",\"backdrop\":\"ViewTitleBar_backdrop__2Cpm8\",\"shareButton\":\"ViewTitleBar_shareButton__3yEKR\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"message\":\"NoVisualizationMessage_message__22IPi\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"center\":\"LoadingMask_center__KHIYy\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"FatalErrorBoundary_container__3SViR\",\"icon\":\"FatalErrorBoundary_icon__2UbeP\",\"message\":\"FatalErrorBoundary_message__3FzrY\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"deleteItemButton\":\"DeleteItemButton_deleteItemButton__3TJm9\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"warning\":\"PrintItemInfo_warning__123PK\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"line\":\"ItemFooter_line__3Ko0R\",\"scrollContainer\":\"ItemFooter_scrollContainer__tuq4P\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"Item_list__1_nkQ\",\"item\":\"Item_item__3-6QE\",\"itemicon\":\"Item_itemicon__QlouX\",\"link\":\"Item_link___3c_q\",\"deleteicon\":\"Item_deleteicon__3usrl\",\"deletebutton\":\"Item_deletebutton__1DpBW\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"titlePage\":\"Item_titlePage__18CNQ\",\"name\":\"Item_name__3nuTV\",\"description\":\"Item_description__1gFQd\",\"filterTitle\":\"Item_filterTitle__2p7TQ\",\"filterList\":\"Item_filterList__qc_G3\",\"filterListItem\":\"Item_filterListItem__sPbBY\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"gridContainer\":\"ViewItemGrid_gridContainer__2viZg\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"bar\":\"FilterBar_bar__1Ma3p\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"content\":\"ConfirmDeleteDialog_content__EqswE\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"editBar\":\"EditBar_editBar__1d1xM\",\"controls\":\"EditBar_controls__1t0nO\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"noticeContainer\":\"NotSupportedNotice_noticeContainer__3z9Up\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"infoWrapper\":\"PrintInfo_infoWrapper__3m2lt\",\"infoHeader\":\"PrintInfo_infoHeader__KyW8I\",\"info\":\"PrintInfo_info__13oXZ\",\"infoList\":\"PrintInfo_infoList__Iu9MC\",\"divider\":\"PrintInfo_divider__3wzx9\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"PrintActionsBar_container__2iQp7\",\"topMargin\":\"PrintActionsBar_topMargin__OpYDN\",\"inner\":\"PrintActionsBar_inner__uBqU7\",\"link\":\"PrintActionsBar_link__lFUmI\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"PrintLayoutDashboard_wrapper__1WDh4\",\"pageOuter\":\"PrintLayoutDashboard_pageOuter__22acI\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"PrintDashboard_wrapper__1O3s_\",\"pageOuter\":\"PrintDashboard_pageOuter__fl9tw\"};","import React, { createContext, useContext, useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport debounce from 'lodash/debounce';\nexport const WindowDimensionsCtx = createContext(null);\n\nconst windowDims = () => ({\n  height: window.innerHeight,\n  width: window.innerWidth\n});\n\nconst WindowDimensionsProvider = ({\n  children\n}) => {\n  const [dimensions, setDimensions] = useState(windowDims());\n  useEffect(() => {\n    const handleResize = debounce(() => {\n      setDimensions(windowDims());\n    }, 200);\n    window.addEventListener('resize', handleResize);\n    return () => {\n      window.removeEventListener('resize', handleResize);\n    };\n  }, []);\n  return <WindowDimensionsCtx.Provider value={dimensions}>\n            {children}\n        </WindowDimensionsCtx.Provider>;\n};\n\nWindowDimensionsProvider.propTypes = {\n  children: PropTypes.node.isRequired\n};\nexport default WindowDimensionsProvider;\nexport const useWindowDimensions = () => {\n  return useContext(WindowDimensionsCtx);\n};","import React from 'react';\nimport PropTypes from 'prop-types';\nimport cx from 'classnames';\nimport classes from './styles/ControlBar.module.css';\nexport const DRAG_HANDLE_HEIGHT = 7;\n\nclass ControlBar extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      dragging: false\n    };\n  }\n\n  onStartDrag = () => {\n    this.setState({\n      dragging: true\n    });\n    window.addEventListener('mousemove', this.onDrag);\n    window.addEventListener('mouseup', this.onEndDrag);\n  };\n  onDrag = event => {\n    event.preventDefault();\n    event.stopPropagation();\n    const newHeight = event.clientY;\n\n    if (this.props.onChangeHeight && newHeight !== this.props.height && newHeight > 0) {\n      requestAnimationFrame(() => {\n        this.props.onChangeHeight(newHeight);\n      });\n    }\n  };\n  onEndDrag = () => {\n    this.setState({\n      dragging: false\n    });\n    window.removeEventListener('mousemove', this.onDrag);\n    window.removeEventListener('mouseup', this.onEndDrag);\n\n    if (this.props.onEndDrag) {\n      this.props.onEndDrag();\n    }\n  };\n  renderDragHandle = () => typeof this.props.onChangeHeight === 'function' && <div data-testid=\"controlbar-drag-handle\" className={classes.draghandle} style={{\n    height: DRAG_HANDLE_HEIGHT\n  }} onMouseDown={this.onStartDrag} />;\n\n  render() {\n    const height = Math.max(this.props.height, 0) + DRAG_HANDLE_HEIGHT;\n    const rootClass = cx(classes.root, this.state.dragging && classes.dragging);\n    return <div style={{\n      height\n    }} className={rootClass}>\n                <div className={classes.content}>{this.props.children}</div>\n                {this.renderDragHandle()}\n            </div>;\n  }\n\n}\n\nControlBar.propTypes = {\n  /**\n   * The height of the control bar in number of lines. Must be a positive integer.\n   */\n  children: PropTypes.node.isRequired,\n\n  /**\n   * Callback function that is called when the control bar is resized.\n   * The callback receives one argument: The new height in pixels.\n   *\n   * If no callback is specified the control bar will not have a drag handle.\n   */\n  height: PropTypes.number.isRequired,\n\n  /**\n   * Callback function that is called when the control bar is dropped after being dragged.\n   * The callback receives one argument: The new height in pixels.\n   *\n   * Ignored if no \"onChangeHeight\" function is provided.\n   */\n  onChangeHeight: PropTypes.func,\n\n  /**\n   * The contents of the control bar.\n   */\n  onEndDrag: PropTypes.func\n};\nControlBar.defaultProps = {\n  onChangeHeight: null,\n  onEndDrag: null\n};\nexport default ControlBar;","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst StarIcon = ({\n  className\n}) => <svg className={className} xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\">\n        <path d=\"M0 0h24v24H0z\" fill=\"none\" />\n        <path d=\"M12 17.27L18.18 21l-1.64-7.03L22 9.24l-7.19-.61L12 2 9.19 8.63 2 9.24l5.46 4.73L5.82 21z\" />\n        <path d=\"M0 0h24v24H0z\" fill=\"none\" />\n    </svg>;\n\nStarIcon.propTypes = {\n  className: PropTypes.string\n};\nexport default StarIcon;","import { getInstance } from 'd2';\nexport const apiPostDataStatistics = async (eventType, id) => {\n  const d2 = await getInstance();\n  const url = `dataStatistics?eventType=${eventType}&favorite=${id}`;\n  d2.Api.getApi().post(url);\n};","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Chip } from '@dhis2/ui';\nimport { Link } from 'react-router-dom';\nimport debounce from 'lodash/debounce';\nimport StarIcon from '../../icons/Star';\nimport { apiPostDataStatistics } from '../../api/dataStatistics';\nimport classes from './styles/DashboardItemChip.module.css';\nexport const DashboardItemChip = ({\n  starred,\n  selected,\n  label,\n  dashboardId,\n  onClick\n}) => {\n  const chipProps = {\n    selected\n  };\n\n  if (starred) {\n    const selectedState = selected ? classes.selected : classes.unselected;\n    chipProps.icon = <StarIcon className={`${classes.icon} ${selectedState}`} />;\n  }\n\n  const debouncedPostStatistics = debounce(() => apiPostDataStatistics('DASHBOARD_VIEW', dashboardId), 500);\n\n  const handleClick = () => {\n    debouncedPostStatistics();\n    onClick();\n  };\n\n  return <Link className={classes.link} to={`/${dashboardId}`} onClick={handleClick} data-test=\"dashboard-chip\">\n            <Chip {...chipProps}>{label}</Chip>\n        </Link>;\n};\nDashboardItemChip.propTypes = {\n  dashboardId: PropTypes.string.isRequired,\n  label: PropTypes.string.isRequired,\n  selected: PropTypes.bool.isRequired,\n  starred: PropTypes.bool.isRequired,\n  onClick: PropTypes.func.isRequired,\n  classes: PropTypes.object\n};\nexport default DashboardItemChip;","import React from 'react';\nimport { colors } from '@dhis2/ui';\n\nconst AddCircleIcon = () => <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"32\" height=\"32\" fill={colors.teal600} viewBox=\"0 0 24 24\">\n        <path d=\"M12 2C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2zm4 11h-3v3c0 .55-.45 1-1 1s-1-.45-1-1v-3H8c-.55 0-1-.45-1-1s.45-1 1-1h3V8c0-.55.45-1 1-1s1 .45 1 1v3h3c.55 0 1 .45 1 1s-.45 1-1 1z\" />\n    </svg>;\n\nexport default AddCircleIcon;","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst SearchIcon = ({\n  className\n}) => <svg className={className} xmlns=\"http://www.w3.org/2000/svg\" height=\"24\" viewBox=\"0 0 24 24\" width=\"24\">\n        <path d=\"M0 0h24v24H0z\" fill=\"none\" />\n        <path d=\"M15.5 14h-.79l-.28-.27C15.41 12.59 16 11.11 16 9.5 16 5.91 13.09 3 9.5 3S3 5.91 3 9.5 5.91 16 9.5 16c1.61 0 3.09-.59 4.23-1.57l.27.28v.79l5 4.99L20.49 19l-4.99-5zm-6 0C7.01 14 5 11.99 5 9.5S7.01 5 9.5 5 14 7.01 14 9.5 11.99 14 9.5 14z\" />\n    </svg>;\n\nSearchIcon.propTypes = {\n  className: PropTypes.string\n};\nexport default SearchIcon;","import React from 'react';\nimport { colors } from '@dhis2/ui';\nimport PropTypes from 'prop-types';\n\nconst ClearIcon = ({\n  className\n}) => <svg className={className} fill={colors.grey800} xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\">\n        <path d=\"M19 6.41L17.59 5 12 10.59 6.41 5 5 6.41 10.59 12 5 17.59 6.41 19 12 13.41 17.59 19 19 17.59 13.41 12z\" />\n        <path d=\"M0 0h24v24H0z\" fill=\"none\" />\n    </svg>;\n\nClearIcon.propTypes = {\n  className: PropTypes.string\n};\nexport default ClearIcon;","import React from 'react';\nimport PropTypes from 'prop-types';\nimport ClearIcon from '../../icons/Clear';\nimport classes from './styles/ClearButton.module.css';\nexport const ClearButton = ({\n  onClear\n}) => <button className={classes.button} onClick={onClear}>\n        <span>\n            <ClearIcon className={classes.icon} color=\"action\" />\n        </span>\n    </button>;\nClearButton.propTypes = {\n  onClear: PropTypes.func.isRequired\n};\nexport default ClearButton;","import { validateReducer } from '../modules/util';\nexport const SET_DASHBOARDS_FILTER = 'SET_DASHBOARDS_FILTER';\nexport const CLEAR_DASHBOARDS_FILTER = 'CLEAR_DASHBOARDS_FILTER';\nexport const DEFAULT_STATE_DASHBOARDS_FILTER = '';\nexport default ((state = DEFAULT_STATE_DASHBOARDS_FILTER, action) => {\n  switch (action.type) {\n    case SET_DASHBOARDS_FILTER:\n      {\n        return validateReducer(action.value, DEFAULT_STATE_DASHBOARDS_FILTER);\n      }\n\n    case CLEAR_DASHBOARDS_FILTER:\n      {\n        return DEFAULT_STATE_DASHBOARDS_FILTER;\n      }\n\n    default:\n      return state;\n  }\n}); // selectors\n\nexport const sGetDashboardsFilter = state => state.dashboardsFilter;","const SMALL_SCREEN_BREAKPOINT = 480;\n\nconst isSmallScreen = width => width <= SMALL_SCREEN_BREAKPOINT;\n\nexport default isSmallScreen;","import React, { useState } from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport i18n from '@dhis2/d2-i18n';\nimport cx from 'classnames';\nimport SearchIcon from '../../icons/Search';\nimport ClearButton from './ClearButton';\nimport { useWindowDimensions } from '../WindowDimensionsProvider';\nimport { acSetDashboardsFilter, acClearDashboardsFilter } from '../../actions/dashboardsFilter';\nimport { sGetDashboardsFilter } from '../../reducers/dashboardsFilter';\nimport isSmallScreen from '../../modules/isSmallScreen';\nimport classes from './styles/Filter.module.css';\nexport const KEYCODE_ENTER = 13;\nexport const KEYCODE_ESCAPE = 27;\nexport const FilterUnconnected = ({\n  clearDashboardsFilter,\n  filterText,\n  isMaxHeight,\n  setDashboardsFilter,\n  onKeypressEnter,\n  onToggleMaxHeight\n}) => {\n  const [focusedClassName, setFocusedClassName] = useState('');\n  const {\n    width\n  } = useWindowDimensions();\n\n  const setFilterValue = event => {\n    event.preventDefault();\n    setDashboardsFilter(event.target.value);\n  };\n\n  const onKeyUp = event => {\n    switch (event.keyCode) {\n      case KEYCODE_ENTER:\n        onKeypressEnter();\n        clearDashboardsFilter();\n        break;\n\n      case KEYCODE_ESCAPE:\n        clearDashboardsFilter();\n        break;\n\n      default:\n        break;\n    }\n  };\n\n  const onFocus = event => {\n    event.preventDefault();\n    setFocusedClassName(classes.focused);\n  };\n\n  const onBlur = event => {\n    event.preventDefault();\n    setFocusedClassName('');\n  };\n\n  return isSmallScreen(width) && !isMaxHeight ? <button className={classes.searchButton} onClick={onToggleMaxHeight}>\n            <SearchIcon className={classes.searchIcon} />\n        </button> : <div className={cx(classes.container, `${focusedClassName}`)} onFocus={onFocus} onBlur={onBlur}>\n            <SearchIcon className={classes.searchIcon} />\n            <input className={classes.input} type=\"text\" placeholder={i18n.t('Search for a dashboard')} onChange={setFilterValue} onKeyUp={onKeyUp} value={filterText} data-test=\"search-dashboard-input\" />\n            {filterText && <ClearButton onClear={clearDashboardsFilter} />}\n        </div>;\n};\nFilterUnconnected.propTypes = {\n  clearDashboardsFilter: PropTypes.func,\n  filterText: PropTypes.string,\n  isMaxHeight: PropTypes.bool,\n  setDashboardsFilter: PropTypes.func,\n  onKeypressEnter: PropTypes.func,\n  onToggleMaxHeight: PropTypes.func\n};\n\nconst mapStateToProps = state => ({\n  filterText: sGetDashboardsFilter(state)\n});\n\nconst mapDispatchToProps = {\n  setDashboardsFilter: acSetDashboardsFilter,\n  clearDashboardsFilter: acClearDashboardsFilter\n};\nexport default connect(mapStateToProps, mapDispatchToProps)(FilterUnconnected);","import { SET_DASHBOARDS_FILTER, CLEAR_DASHBOARDS_FILTER } from '../reducers/dashboardsFilter'; // actions\n\nexport const acSetDashboardsFilter = value => ({\n  type: SET_DASHBOARDS_FILTER,\n  value\n});\nexport const acClearDashboardsFilter = () => ({\n  type: CLEAR_DASHBOARDS_FILTER\n});","import React from 'react';\nexport const ChevronDown = () => <svg height=\"24\" viewBox=\"0 0 24 24\" width=\"24\" xmlns=\"http://www.w3.org/2000/svg\">\n        <path d=\"m11.29289 15.7071c.39053.3905 1.02369.3905 1.41422 0l4.99999-4.99999c.3905-.39053.3905-1.02369 0-1.41422-.3905-.39052-1.0237-.39052-1.4142 0l-4.2929 4.2929-4.29289-4.2929c-.39053-.39052-1.02369-.39052-1.41422 0-.39052.39053-.39052 1.02369 0 1.41422z\" fill=\"#a0adba\" />\n    </svg>;\nexport const ChevronUp = () => <svg height=\"24\" viewBox=\"0 0 24 24\" width=\"24\" xmlns=\"http://www.w3.org/2000/svg\">\n        <path d=\"m11.2928932 8.29289322c.360484-.36048396.927715-.3882135 1.3200062-.08318861l.0942074.08318861 5 4.99999998c.3905243.3905243.3905243 1.0236893 0 1.4142136-.360484.3604839-.927715.3882135-1.3200062.0831886l-.0942074-.0831886-4.2928932-4.2921068-4.29289322 4.2921068c-.36048396.3604839-.92771502.3882135-1.32000622.0831886l-.09420734-.0831886c-.36048396-.360484-.3882135-.927715-.08318861-1.3200062l.08318861-.0942074z\" fill=\"#a0adba\" />\n    </svg>;","import React from 'react';\nimport PropTypes from 'prop-types';\nimport i18n from '@dhis2/d2-i18n';\nimport { Tooltip } from '@dhis2/ui';\nimport { ChevronDown, ChevronUp } from './assets/icons';\nimport classes from './styles/ShowMoreButton.module.css';\nexport const SHOWMORE_BAR_HEIGHT = 16;\n\nconst ShowMoreButton = ({\n  onClick,\n  isMaxHeight,\n  disabled\n}) => {\n  const buttonLabel = isMaxHeight ? i18n.t('Show fewer dashboards') : i18n.t('Show more dashboards');\n  return <div className={classes.container}>\n            {disabled ? <div className={classes.disabled}>\n                    <ChevronDown />\n                </div> : <Tooltip content={buttonLabel} placement=\"bottom\">\n                    <button className={classes.showMore} onClick={onClick} data-test=\"showmore-button\" aria-label={buttonLabel}>\n                        {isMaxHeight ? <ChevronUp /> : <ChevronDown />}\n                    </button>\n                </Tooltip>}\n        </div>;\n};\n\nShowMoreButton.propTypes = {\n  disabled: PropTypes.bool,\n  isMaxHeight: PropTypes.bool,\n  onClick: PropTypes.func\n};\nexport default ShowMoreButton;","import { SHOWMORE_BAR_HEIGHT } from './ShowMoreButton';\nexport const CONTROL_BAR_ROW_HEIGHT = 40;\nexport const FIRST_ROW_PADDING_HEIGHT = 10;\nexport const MIN_ROW_COUNT = 1;\nexport const HEADERBAR_HEIGHT = 48;\nconst CONTROL_BAR_OUTER_HEIGHT_DIFF = FIRST_ROW_PADDING_HEIGHT + SHOWMORE_BAR_HEIGHT - 2; // 2 pixel \"adjustment\"\n\nexport const getRowsHeight = rows => {\n  return rows * CONTROL_BAR_ROW_HEIGHT;\n};\nexport const getNumRowsFromHeight = height => {\n  return Math.floor((height - CONTROL_BAR_OUTER_HEIGHT_DIFF) / CONTROL_BAR_ROW_HEIGHT);\n};\nexport const getControlBarHeight = rows => {\n  return getRowsHeight(rows) + CONTROL_BAR_OUTER_HEIGHT_DIFF;\n};","/** @module reducers/controlBar */\nimport { combineReducers } from 'redux';\nimport { validateReducer } from '../modules/util';\nexport const SET_CONTROLBAR_USER_ROWS = 'SET_CONTROLBAR_USER_ROWS';\nexport const DEFAULT_STATE_CONTROLBAR_ROWS = 1;\n\nconst userRows = (state = DEFAULT_STATE_CONTROLBAR_ROWS, action) => {\n  switch (action.type) {\n    case SET_CONTROLBAR_USER_ROWS:\n      return validateReducer(action.value, DEFAULT_STATE_CONTROLBAR_ROWS);\n\n    default:\n      return state;\n  }\n};\n\nexport default combineReducers({\n  userRows\n});\n/**\n * Selectors that point to specific props in the state object\n * @function\n * @param {Object} state\n * @returns {Object}\n */\n\nexport const sGetControlBarRoot = state => state.controlBar; // Selector dependency level 2\n\nexport const sGetControlBarUserRows = state => sGetControlBarRoot(state).userRows;","import { TEXT, SPACER } from './itemTypes';\nimport { getGridItemProperties } from '../components/ItemGrid/gridUtil';\nexport const spacerContent = 'SPACER_ITEM_FOR_DASHBOARD_LAYOUT_CONVENIENCE';\nexport const emptyTextItemContent = 'TEXT_ITEM_WITH_NO_CONTENT';\n\nconst isBackendSpacerType = item => item.type === TEXT && item.text === spacerContent;\n\nconst isUiSpacerType = item => item.type === SPACER;\n\nconst isTextType = item => item.type === TEXT && item.text !== spacerContent;\n\nexport const convertUiItemsToBackend = items => items.map(item => {\n  let text = null;\n\n  if (isUiSpacerType(item)) {\n    text = spacerContent;\n  } else if (isTextType(item)) {\n    text = item.text || emptyTextItemContent;\n  }\n\n  return { ...item,\n    ...(text ? {\n      text\n    } : {})\n  };\n});\nexport const convertBackendItemsToUi = items => items.map(item => {\n  const type = isBackendSpacerType(item) ? SPACER : item.type;\n  const gridProperties = getGridItemProperties(item.id);\n  const text = isTextType(item) ? item.text === emptyTextItemContent ? '' : item.text : null;\n  return { ...item,\n    ...(text !== null ? {\n      text\n    } : {}),\n    type,\n    ...gridProperties\n  };\n});","/** @module reducers/dashboards */\nimport arrayFrom from 'd2-utilizr/lib/arrayFrom';\nimport arraySort from 'd2-utilizr/lib/arraySort';\nimport { orArray, orObject } from '../modules/util';\nimport { convertBackendItemsToUi } from '../modules/uiBackendItemConverter';\nexport const SET_DASHBOARDS = 'SET_DASHBOARDS';\nexport const ADD_DASHBOARDS = 'ADD_DASHBOARDS';\nexport const SET_DASHBOARD_STARRED = 'SET_DASHBOARD_STARRED';\nexport const SET_DASHBOARD_DISPLAY_NAME = 'SET_DASHBOARD_DISPLAY_NAME';\nexport const SET_DASHBOARD_ITEMS = 'SET_DASHBOARD_ITEMS';\nexport const DEFAULT_STATE_DASHBOARDS = {\n  byId: null,\n  items: []\n};\nexport const EMPTY_DASHBOARD = {}; // reducer helper functions\n\nconst updateDashboardProp = ({\n  state,\n  dashboardId,\n  prop,\n  value\n}) => ({\n  byId: { ...state.byId,\n    [dashboardId]: { ...state.byId[dashboardId],\n      [prop]: value\n    }\n  },\n  items: state.items\n});\n/**\n * Reducer that computes and returns the new state based on the given action\n * @function\n * @param {Object} state The current state\n * @param {Object} action The action to be evaluated\n * @returns {Object}\n */\n\n\nexport default ((state = DEFAULT_STATE_DASHBOARDS, action) => {\n  switch (action.type) {\n    case SET_DASHBOARDS:\n      {\n        return {\n          byId: action.value,\n          items: []\n        };\n      }\n\n    case ADD_DASHBOARDS:\n      {\n        return { ...state,\n          byId: { ...state.byId,\n            ...action.value\n          }\n        };\n      }\n\n    case SET_DASHBOARD_STARRED:\n      {\n        return updateDashboardProp({\n          state,\n          dashboardId: action.dashboardId,\n          prop: 'starred',\n          value: action.value\n        });\n      }\n\n    case SET_DASHBOARD_DISPLAY_NAME:\n      {\n        return updateDashboardProp({\n          state,\n          dashboardId: action.dashboardId,\n          prop: 'displayName',\n          value: action.value\n        });\n      }\n\n    case SET_DASHBOARD_ITEMS:\n      {\n        return { ...state,\n          items: action.value\n        };\n      }\n\n    default:\n      return state;\n  }\n}); // root selector\n\nexport const sGetDashboardsRoot = state => state.dashboards; // selector level 1\n\n/**\n * Selector which returns a dashboard by id from the state object\n * If no matching dashboard is found it returns undefined\n * If dashboards.byId is null, then the dashboards api request\n * has not yet completed. If dashboards.byId is an empty object\n * then the dashboards api request is complete, but no dashboards\n * were returned\n *\n * @function\n * @param {Object} state The current state\n * @param {Number} id The id of the dashboard\n * @returns {Object | undefined}\n */\n\nexport const sGetDashboardById = (state, id) => orObject(sGetDashboardsRoot(state).byId)[id];\nexport const sDashboardsIsFetching = state => {\n  return sGetDashboardsRoot(state).byId === null;\n};\n/**\n * Selector which returns all dashboards (the byId object)\n *\n * @function\n * @param {Object} state The current state\n * @returns {Object | undefined}\n */\n\nexport const sGetAllDashboards = state => orObject(sGetDashboardsRoot(state).byId);\n/**\n * Selector which returns the current dashboard items\n *\n * @function\n * @param {Object} state The current state\n * @returns {Array}\n */\n\nexport const sGetDashboardItems = state => sGetDashboardsRoot(state).items; // selector level 2\n\nexport const sGetStarredDashboards = state => Object.values(sGetAllDashboards(state)).filter(dashboard => dashboard.starred === true);\nexport const sGetUnstarredDashboards = state => Object.values(sGetAllDashboards(state)).filter(dashboard => dashboard.starred === false); // selector level 3\n\nexport const sGetStarredDashboardIds = state => {\n  return sGetStarredDashboards(state).map(dashboard => dashboard.id);\n};\nexport const sGetUnstarredDashboardIds = state => sGetUnstarredDashboards(state).map(dashboard => dashboard.id);\nexport const sGetDashboardsSortedByStarred = state => [...arraySort(sGetStarredDashboards(state), 'ASC', 'displayName'), ...arraySort(sGetUnstarredDashboards(state), 'ASC', 'displayName')]; // utils\n\n/**\n * Returns the array of dashboards, customized for ui\n * @function\n * @param {Array} data The original dashboard list\n * @returns {Array}\n */\n\nexport const getCustomDashboards = data => arrayFrom(data).map(d => ({\n  id: d.id,\n  name: d.name,\n  displayName: d.displayName,\n  description: d.description,\n  displayDescription: d.displayDescription,\n  starred: d.favorite,\n  owner: d.user.name,\n  created: d.created.split('T').join(' ').substr(0, 16),\n  lastUpdated: d.lastUpdated.split('T').join(' ').substr(0, 16),\n  access: d.access,\n  numberOfItems: orArray(d.dashboardItems).length,\n  dashboardItems: convertBackendItemsToUi(d.dashboardItems)\n}));","/** @module reducers/selected */\nimport { combineReducers } from 'redux';\nimport { validateReducer } from '../modules/util';\nexport const SET_SELECTED_ID = 'SET_SELECTED_ID';\nexport const SET_SELECTED_ISLOADING = 'SET_SELECTED_ISLOADING';\nexport const SET_SELECTED_SHOWDESCRIPTION = 'SET_SELECTED_SHOWDESCRIPTION';\nexport const SET_SELECTED_ITEM_ACTIVE_TYPE = 'SET_SELECTED_ITEM_ACTIVE_TYPE';\nexport const CLEAR_SELECTED_ITEM_ACTIVE_TYPES = 'CLEAR_SELECTED_ITEM_ACTIVE_TYPES';\nexport const DEFAULT_STATE_SELECTED_ID = null;\nexport const DEFAULT_STATE_SELECTED_ISLOADING = false;\nexport const DEFAULT_STATE_SELECTED_SHOWDESCRIPTION = false;\nexport const DEFAULT_STATE_SELECTED_ITEM_ACTIVE_TYPES = {};\nexport const NON_EXISTING_DASHBOARD_ID = '0';\n/**\n * Reducer functions that computes and returns the new state based on the given action\n * @function\n * @param {Object} state The current state\n * @param {Object} action The action to be evaluated\n */\n\nconst id = (state = DEFAULT_STATE_SELECTED_ID, action) => {\n  switch (action.type) {\n    case SET_SELECTED_ID:\n      return validateReducer(action.value, DEFAULT_STATE_SELECTED_ID);\n\n    default:\n      return state;\n  }\n};\n\nconst isLoading = (state = DEFAULT_STATE_SELECTED_ISLOADING, action) => {\n  switch (action.type) {\n    case SET_SELECTED_ISLOADING:\n      return validateReducer(action.value, DEFAULT_STATE_SELECTED_ISLOADING);\n\n    default:\n      return state;\n  }\n};\n\nconst showDescription = (state = DEFAULT_STATE_SELECTED_SHOWDESCRIPTION, action) => {\n  switch (action.type) {\n    case SET_SELECTED_SHOWDESCRIPTION:\n      return validateReducer(action.value, DEFAULT_STATE_SELECTED_SHOWDESCRIPTION);\n\n    default:\n      return state;\n  }\n};\n\nconst itemActiveTypes = (state = DEFAULT_STATE_SELECTED_ITEM_ACTIVE_TYPES, action) => {\n  switch (action.type) {\n    case SET_SELECTED_ITEM_ACTIVE_TYPE:\n      {\n        return { ...state,\n          [action.id]: action.activeType\n        };\n      }\n\n    case CLEAR_SELECTED_ITEM_ACTIVE_TYPES:\n      {\n        return DEFAULT_STATE_SELECTED_ITEM_ACTIVE_TYPES;\n      }\n\n    default:\n      return state;\n  }\n};\n\nexport default combineReducers({\n  id,\n  isLoading,\n  showDescription,\n  itemActiveTypes\n}); // Selectors\n\nexport const sGetSelectedRoot = state => state.selected;\nexport const sGetSelectedId = state => sGetSelectedRoot(state).id;\nexport const sGetSelectedIsLoading = state => sGetSelectedRoot(state).isLoading;\nexport const sGetSelectedShowDescription = state => sGetSelectedRoot(state).showDescription;\nexport const sGetSelectedItemActiveType = (state, id) => sGetSelectedRoot(state).itemActiveTypes[id];","import { getInstance } from 'd2';\nexport const NAMESPACE = 'dashboard';\nexport const hasNamespace = async (d2) => await d2.currentUser.dataStore.has(NAMESPACE);\nexport const getNamespace = async (d2, hasNamespace) => hasNamespace ? await d2.currentUser.dataStore.get(NAMESPACE) : await d2.currentUser.dataStore.create(NAMESPACE);\nexport const apiPostUserDataStoreValue = async (key, value) => {\n  const d2 = await getInstance();\n  const ns = await getNamespace(d2, hasNamespace);\n  ns.set(key, value);\n};\nexport const apiGetUserDataStoreValue = async (key, defaultValue) => {\n  const d2 = await getInstance();\n  const namespace = await getNamespace(d2, await hasNamespace(d2));\n  const hasKey = namespace?.keys?.find(k => k === key);\n\n  if (hasKey) {\n    return await namespace.get(key);\n  } else {\n    await apiPostUserDataStoreValue(key, defaultValue, namespace);\n    console.log('(These errors to /userDataStore can be ignored)');\n    return defaultValue;\n  }\n};","import { apiGetUserDataStoreValue, apiPostUserDataStoreValue } from './userDataStore';\nimport { DEFAULT_STATE_CONTROLBAR_ROWS } from '../reducers/controlBar';\nconst KEY_CONTROLBAR_ROWS = 'controlBarRows';\nexport const apiGetControlBarRows = async () => await apiGetUserDataStoreValue(KEY_CONTROLBAR_ROWS, DEFAULT_STATE_CONTROLBAR_ROWS);\nexport const apiPostControlBarRows = async (value) => await apiPostUserDataStoreValue(KEY_CONTROLBAR_ROWS, value);","import { SET_CONTROLBAR_USER_ROWS } from '../reducers/controlBar';\nimport { apiGetControlBarRows } from '../api/controlBar'; // actions\n\nexport const acSetControlBarUserRows = rows => ({\n  type: SET_CONTROLBAR_USER_ROWS,\n  value: rows\n}); // thunks\n\nexport const tSetControlBarRows = () => async dispatch => {\n  const onSuccess = rows => {\n    dispatch(acSetControlBarUserRows(rows));\n  };\n\n  const onError = error => {\n    console.log('Error (apiGetControlBarRows): ', error);\n    return error;\n  };\n\n  try {\n    const controlBarRows = await apiGetControlBarRows();\n    return onSuccess(controlBarRows);\n  } catch (err) {\n    return onError(err);\n  }\n};","import React, { useState, useEffect, createRef } from 'react';\nimport { connect } from 'react-redux';\nimport { Link, withRouter } from 'react-router-dom';\nimport cx from 'classnames';\nimport arraySort from 'd2-utilizr/lib/arraySort';\nimport PropTypes from 'prop-types';\nimport ControlBar, { DRAG_HANDLE_HEIGHT } from './ControlBar';\nimport Chip from './DashboardItemChip';\nimport AddCircleIcon from '../../icons/AddCircle';\nimport Filter from './Filter';\nimport ShowMoreButton from './ShowMoreButton';\nimport { FIRST_ROW_PADDING_HEIGHT, MIN_ROW_COUNT, getRowsHeight, getControlBarHeight, getNumRowsFromHeight } from './controlBarDimensions';\nimport { useWindowDimensions } from '../WindowDimensionsProvider';\nimport { sGetDashboardsFilter } from '../../reducers/dashboardsFilter';\nimport { sGetControlBarUserRows } from '../../reducers/controlBar';\nimport { sGetAllDashboards } from '../../reducers/dashboards';\nimport { sGetSelectedId } from '../../reducers/selected';\nimport { acSetControlBarUserRows } from '../../actions/controlBar';\nimport { apiPostControlBarRows } from '../../api/controlBar';\nimport isSmallScreen from '../../modules/isSmallScreen';\nimport classes from './styles/DashboardsBar.module.css';\nexport const MAX_ROW_COUNT = 10;\n\nconst DashboardsBar = ({\n  userRows,\n  onChangeHeight,\n  history,\n  dashboards,\n  selectedId,\n  filterText\n}) => {\n  const [rows, setRows] = useState(userRows);\n  const {\n    width\n  } = useWindowDimensions();\n  const ref = createRef();\n  useEffect(() => {\n    setRows(userRows);\n  }, [userRows]);\n\n  const isMaxHeight = () => rows === MAX_ROW_COUNT;\n\n  const adjustHeight = newHeight => {\n    const newRows = Math.max(MIN_ROW_COUNT, getNumRowsFromHeight(newHeight - 52) // don't rush the transition to a bigger row count\n    );\n\n    if (newRows !== rows) {\n      onChangeHeight(Math.min(newRows, MAX_ROW_COUNT));\n    }\n  };\n\n  const onEndDrag = () => apiPostControlBarRows(rows);\n\n  const scrollToTop = () => {\n    if (isMaxHeight()) {\n      ref.current.scroll(0, 0);\n    }\n  };\n\n  const toggleMaxHeight = () => {\n    const newRows = isMaxHeight() ? userRows : MAX_ROW_COUNT;\n    scrollToTop();\n    setRows(newRows);\n  };\n\n  const cancelMaxHeight = () => {\n    scrollToTop();\n    setRows(userRows);\n  };\n\n  const onSelectDashboard = () => {\n    const id = getFilteredDashboards()[0]?.id;\n\n    if (id) {\n      history.push(id);\n    }\n  };\n\n  const getFilteredDashboards = () => {\n    const filteredDashboards = arraySort(Object.values(dashboards).filter(d => d.displayName.toLowerCase().includes(filterText.toLowerCase())), 'ASC', 'displayName');\n    return [...filteredDashboards.filter(d => d.starred), ...filteredDashboards.filter(d => !d.starred)];\n  };\n\n  const containerClass = cx(classes.container, isMaxHeight() ? classes.expanded : classes.collapsed);\n  const viewableRows = isSmallScreen(width) && !isMaxHeight() ? MIN_ROW_COUNT : rows;\n  const rowHeightProp = {\n    height: getRowsHeight(viewableRows) + FIRST_ROW_PADDING_HEIGHT\n  };\n\n  const getDashboardChips = () => {\n    const chips = getFilteredDashboards().map(dashboard => <Chip key={dashboard.id} label={dashboard.displayName} starred={dashboard.starred} dashboardId={dashboard.id} selected={dashboard.id === selectedId} onClick={cancelMaxHeight} />);\n\n    if (isSmallScreen(width)) {\n      const chipContainerClasses = cx(classes.chipContainer, isMaxHeight() ? classes.expanded : classes.collapsed);\n      return <div className={chipContainerClasses} style={rowHeightProp}>\n                    {chips}\n                </div>;\n    } else {\n      return chips;\n    }\n  };\n\n  return <>\n            <ControlBar height={getControlBarHeight(viewableRows)} onChangeHeight={!isSmallScreen(width) ? adjustHeight : null} onEndDrag={onEndDrag}>\n                <div className={containerClass} ref={ref} style={rowHeightProp}>\n                    <div className={classes.controls}>\n                        <Link className={classes.newLink} to={'/new'} data-test=\"link-new-dashboard\">\n                            <AddCircleIcon />\n                        </Link>\n                        <Filter onKeypressEnter={onSelectDashboard} onToggleMaxHeight={toggleMaxHeight} isMaxHeight={isMaxHeight()} />\n                    </div>\n                    {getDashboardChips()}\n                </div>\n                <ShowMoreButton onClick={toggleMaxHeight} isMaxHeight={isMaxHeight()} disabled={userRows === MAX_ROW_COUNT} />\n            </ControlBar>\n            <div style={{\n      marginTop: getControlBarHeight(isSmallScreen(width) && !isMaxHeight() ? MIN_ROW_COUNT : userRows) + DRAG_HANDLE_HEIGHT\n    }} />\n        </>;\n};\n\nDashboardsBar.propTypes = {\n  dashboards: PropTypes.object,\n  filterText: PropTypes.string,\n  history: PropTypes.object,\n  selectedId: PropTypes.string,\n  userRows: PropTypes.number,\n  onChangeHeight: PropTypes.func\n};\n\nconst mapStateToProps = state => ({\n  dashboards: sGetAllDashboards(state),\n  filterText: sGetDashboardsFilter(state),\n  selectedId: sGetSelectedId(state),\n  userRows: sGetControlBarUserRows(state)\n});\n\nconst mapDispatchToProps = {\n  onChangeHeight: acSetControlBarUserRows\n};\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(DashboardsBar));","import React from 'react';\nimport { colors } from '@dhis2/ui';\nimport PropTypes from 'prop-types';\n\nconst NoContentMessage = ({\n  text\n}) => <div style={{\n  padding: '50px 10px',\n  textAlign: 'center',\n  fontSize: '15px',\n  fontWeight: 500,\n  color: colors.grey600\n}}>\n        {text}\n    </div>;\n\nNoContentMessage.propTypes = {\n  text: PropTypes.string\n};\nexport default NoContentMessage;","import React from 'react';\nimport PropTypes from 'prop-types';\nimport i18n from '@dhis2/d2-i18n';\nimport { InputField } from '@dhis2/ui';\n\nconst ItemSearchField = props => <InputField name=\"Dashboard item search\" label={i18n.t('Search for items to add to this dashboard')} type=\"text\" onChange={props.onChange} onFocus={props.onFocus} value={props.value} dataTest=\"item-search\" />;\n\nItemSearchField.propTypes = {\n  value: PropTypes.string,\n  onChange: PropTypes.func,\n  onFocus: PropTypes.func\n};\nexport default ItemSearchField;","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { MenuItem, colors } from '@dhis2/ui';\nimport classes from './styles/HeaderMenuItem.module.css';\n\nconst HeaderMenuItem = ({\n  title\n}) => <MenuItem className={classes.item} dense key={title} disabled label={<span style={{\n  color: colors.grey800,\n  fontWeight: '600'\n}}>\n                {title}\n            </span>} />;\n\nHeaderMenuItem.propTypes = {\n  title: PropTypes.string.isRequired\n};\nexport default HeaderMenuItem;","import React from 'react';\nimport { colors } from '@dhis2/ui';\nimport PropTypes from 'prop-types';\n\nconst LaunchIcon = ({\n  className\n}) => <svg className={className} xmlns=\"http://www.w3.org/2000/svg\" width=\"12\" height=\"12\" fill={colors.grey600} viewBox=\"0 0 24 24\">\n        <path d=\"M0 0h24v24H0z\" fill=\"none\" />\n        <path d=\"M19 19H5V5h7V3H5c-1.11 0-2 .9-2 2v14c0 1.1.89 2 2 2h14c1.1 0 2-.9 2-2v-7h-2v7zM14 3v2h3.59l-9.83 9.83 1.41 1.41L19 6.41V10h2V3h-7z\" />\n    </svg>;\n\nLaunchIcon.propTypes = {\n  className: PropTypes.string\n};\nexport default LaunchIcon;","import React from 'react';\nimport { MenuItem, colors } from '@dhis2/ui';\nimport i18n from '@dhis2/d2-i18n';\nimport PropTypes from 'prop-types';\nimport { visTypeIcons } from '@dhis2/analytics';\nimport { getItemIcon, VISUALIZATION } from '../../modules/itemTypes';\nimport LaunchIcon from '../../icons/Launch';\nimport classes from './styles/ContentMenuItem.module.css';\n\nconst LaunchLink = ({\n  url\n}) => <a onClick={e => e.stopPropagation()} className={classes.launchLink} target=\"_blank\" rel=\"noopener noreferrer\" href={url}>\n        <LaunchIcon />\n    </a>;\n\nLaunchLink.propTypes = {\n  url: PropTypes.string\n};\n\nconst InsertButton = () => <button className={classes.buttonInsert}>{i18n.t('Insert')}</button>;\n\nconst ContentMenuItem = ({\n  type,\n  name,\n  onInsert,\n  url,\n  visType\n}) => {\n  const ItemIcon = getItemIcon(type);\n  const renderedItemIcon = type === VISUALIZATION ? visTypeIcons[visType] : <ItemIcon style={{\n    fill: colors.grey600\n  }} />;\n  return <MenuItem dense onClick={onInsert} label={<div className={classes.menuItem}>\n                    <div className={classes.label}>\n                        <span style={{\n        marginRight: '6px'\n      }}>\n                            {renderedItemIcon}\n                        </span>\n                        <span>{name}</span>\n                        {url ? <LaunchLink url={url} /> : null}\n                    </div>\n                    <InsertButton />\n                </div>} dataTest={`menu-item-${name}`} />;\n};\n\nContentMenuItem.propTypes = {\n  name: PropTypes.string,\n  type: PropTypes.string,\n  url: PropTypes.string,\n  visType: PropTypes.string,\n  onInsert: PropTypes.func\n};\nexport default ContentMenuItem;","/** @module reducers/editDashboard */\nimport update from 'immutability-helper';\nimport isEmpty from 'lodash/isEmpty';\nimport { orArray, orObject } from '../modules/util';\nexport const RECEIVED_EDIT_DASHBOARD = 'RECEIVED_EDIT_DASHBOARD';\nexport const RECEIVED_NOT_EDITING = 'RECEIVED_NOT_EDITING';\nexport const START_NEW_DASHBOARD = 'START_NEW_DASHBOARD';\nexport const RECEIVED_TITLE = 'RECEIVED_TITLE';\nexport const RECEIVED_DESCRIPTION = 'RECEIVED_DESCRIPTION';\nexport const ADD_DASHBOARD_ITEM = 'ADD_DASHBOARD_ITEM';\nexport const REMOVE_DASHBOARD_ITEM = 'REMOVE_DASHBOARD_ITEM';\nexport const UPDATE_DASHBOARD_ITEM = 'UPDATE_DASHBOARD_ITEM';\nexport const RECEIVED_DASHBOARD_LAYOUT = 'RECEIVED_DASHBOARD_LAYOUT';\nexport const SET_PRINT_PREVIEW_VIEW = 'SET_PRINT_PREVIEW_VIEW';\nexport const CLEAR_PRINT_PREVIEW_VIEW = 'CLEAR_PRINT_PREVIEW_VIEW';\nexport const DEFAULT_STATE_EDIT_DASHBOARD = {};\nexport const NEW_DASHBOARD_STATE = {\n  id: '',\n  name: '',\n  access: {},\n  description: '',\n  dashboardItems: [],\n  printPreviewView: false\n};\nexport default ((state = DEFAULT_STATE_EDIT_DASHBOARD, action) => {\n  switch (action.type) {\n    case RECEIVED_EDIT_DASHBOARD:\n      {\n        const newState = {};\n        Object.keys(NEW_DASHBOARD_STATE).map(k => newState[k] = action.value[k]);\n        newState.printPreviewView = false;\n        return newState;\n      }\n\n    case RECEIVED_NOT_EDITING:\n      return DEFAULT_STATE_EDIT_DASHBOARD;\n\n    case SET_PRINT_PREVIEW_VIEW:\n      return Object.assign({}, state, {\n        printPreviewView: true\n      });\n\n    case CLEAR_PRINT_PREVIEW_VIEW:\n      return Object.assign({}, state, {\n        printPreviewView: false\n      });\n\n    case START_NEW_DASHBOARD:\n      return NEW_DASHBOARD_STATE;\n\n    case RECEIVED_TITLE:\n      {\n        return Object.assign({}, state, {\n          name: action.value\n        });\n      }\n\n    case RECEIVED_DESCRIPTION:\n      {\n        return Object.assign({}, state, {\n          description: action.value\n        });\n      }\n\n    case ADD_DASHBOARD_ITEM:\n      if (!action.value.position) {\n        return update(state, {\n          dashboardItems: {\n            $unshift: [action.value]\n          }\n        });\n      }\n\n      return update(state, {\n        dashboardItems: {\n          $splice: [[parseInt(action.value.position), 0, action.value]]\n        }\n      });\n\n    case REMOVE_DASHBOARD_ITEM:\n      {\n        const idToRemove = action.value;\n        const dashboardItemIndex = state.dashboardItems.findIndex(item => item.id === idToRemove);\n\n        if (dashboardItemIndex > -1) {\n          return update(state, {\n            dashboardItems: {\n              $splice: [[dashboardItemIndex, 1]]\n            }\n          });\n        }\n\n        return state;\n      }\n\n    case RECEIVED_DASHBOARD_LAYOUT:\n      {\n        const stateItems = orArray(state.dashboardItems);\n        let layoutHasChanged = false;\n        const newStateItems = action.value.map(({\n          x,\n          y,\n          w,\n          h,\n          i\n        }) => {\n          const stateItem = stateItems.find(si => si.id === i);\n\n          if (!(stateItem.x === x && stateItem.y === y && stateItem.w === w && stateItem.h === h)) {\n            layoutHasChanged = true;\n            return Object.assign({}, stateItem, {\n              w,\n              h,\n              x,\n              y\n            });\n          }\n\n          return stateItem;\n        });\n        return layoutHasChanged ? { ...state,\n          dashboardItems: newStateItems\n        } : state;\n      }\n\n    case UPDATE_DASHBOARD_ITEM:\n      {\n        const dashboardItem = action.value;\n        const dashboardItemIndex = state.dashboardItems.findIndex(item => item.id === dashboardItem.id);\n\n        if (dashboardItemIndex > -1) {\n          const newState = update(state, {\n            dashboardItems: {\n              $splice: [[dashboardItemIndex, 1, Object.assign({}, dashboardItem)]]\n            }\n          });\n          return newState;\n        }\n\n        return state;\n      }\n\n    default:\n      return state;\n  }\n}); // root selector\n\nexport const sGetEditDashboardRoot = state => state.editDashboard; // selectors\n\nexport const sGetIsEditing = state => !isEmpty(state.editDashboard);\nexport const sGetIsPrintPreviewView = state => sGetEditDashboardRoot(state).printPreviewView;\nexport const sGetIsNewDashboard = state => {\n  return !isEmpty(state.editDashboard) && sGetEditDashboardRoot(state).id === '';\n};\nexport const sGetEditDashboardName = state => sGetEditDashboardRoot(state).name;\nexport const sGetEditDashboardDescription = state => sGetEditDashboardRoot(state).description;\nexport const sGetEditDashboardItems = state => orObject(sGetEditDashboardRoot(state)).dashboardItems;","import { getInstance } from 'd2';\nimport arrayClean from 'd2-utilizr/lib/arrayClean';\nimport { getEndPointName, MAP } from '../modules/itemTypes';\nimport { getVisualizationId } from '../modules/item'; // Id, name\n\nexport const getIdNameFields = ({\n  rename\n} = {}) => ['id', `${rename ? 'displayName~rename(name)' : 'name,displayName'}`]; // Item\n\nexport const getItemFields = () => ['dimensionItem~rename(id)', 'displayName~rename(name)', 'dimensionItemType']; // Dimension\n\nexport const getDimensionFields = ({\n  withItems\n}) => arrayClean(['dimension', 'legendSet[id]', 'filter', 'programStage', withItems ? `items[${getItemFields().join(',')}]` : ``]); // Axis\n\nexport const getAxesFields = ({\n  withItems\n}) => [`columns[${getDimensionFields({\n  withItems\n}).join(',')}]`, `rows[${getDimensionFields({\n  withItems\n}).join(',')}]`, `filters[${getDimensionFields({\n  withItems\n}).join(',')}]`]; // Favorite\n\nexport const getFavoriteFields = ({\n  withDimensions,\n  withOptions\n}) => {\n  return arrayClean([`${getIdNameFields({\n    rename: true\n  }).join(',')}`, 'displayDescription~rename(description)', withDimensions ? `${getAxesFields({\n    withItems: true\n  }).join(',')}` : ``, withOptions ? ['*', '!attributeDimensions', '!attributeValues', '!category', '!categoryDimensions', '!categoryOptionGroupSetDimensions', '!columnDimensions', '!dataDimensionItems', '!dataElementDimensions', '!dataElementGroupSetDimensions', '!filterDimensions', '!itemOrganisationUnitGroups', '!lastUpdatedBy', '!organisationUnitGroupSetDimensions', '!organisationUnitLevels', '!organisationUnits', '!programIndicatorDimensions', '!relativePeriods', '!reportParams', '!rowDimensions', '!translations', '!userOrganisationUnit', '!userOrganisationUnitChildren', '!userOrganisationUnitGrandChildren'].join(',') : '']);\n};\nexport const getFavoritesFields = ({\n  withDimensions\n}) => [`reportTable[${getFavoriteFields({\n  withDimensions\n}).join(',')}]`, `chart[${['type', ...getFavoriteFields({\n  withDimensions\n})].join(',')}]`, `map[${getFavoriteFields({\n  withDimensions\n}).join(',')}]`, `eventReport[${getFavoriteFields({\n  withDimensions\n}).join(',')}]`, `eventChart[${getFavoriteFields({\n  withDimensions\n}).join(',')}]`]; // List item\n\nexport const getListItemFields = () => [`reports[${['type', ...getIdNameFields({\n  rename: true\n})].join(',')}]`, `resources[${getIdNameFields({\n  rename: true\n}).join(',')}]`, `users[${getIdNameFields({\n  rename: true\n}).join(',')}]`]; // Map\n\nexport const getMapFields = () => [`${getIdNameFields({\n  rename: true\n}).join(',')}`, 'user,longitude,latitude,zoom,basemap', `mapViews[${getFavoriteFields({\n  withDimensions: true,\n  withOptions: true\n})}]`]; // Api\n\nexport const apiFetchVisualization = async item => {\n  const id = getVisualizationId(item);\n  const fields = item.type === MAP ? getMapFields() : getFavoriteFields({\n    withDimensions: true,\n    withOptions: true\n  });\n  const d2 = await getInstance();\n  return await d2.Api.getApi().get(`${getEndPointName(item.type)}/${id}`, {\n    fields\n  });\n};","import arrayClean from 'd2-utilizr/lib/arrayClean';\nimport { getListItemFields, getFavoritesFields, getIdNameFields } from './metadata'; // Helper functions\n\nexport const onError = error => console.log('Error: ', error); // Dashboard item\n\nexport const getDashboardItemsFields = ({\n  withFavorite\n} = {}) => arrayClean(['id', 'type', 'shape', 'x', 'y', 'width~rename(w)', 'height~rename(h)', 'messages', 'text', 'appKey', `${getListItemFields().join(',')}`, withFavorite ? `${getFavoritesFields({\n  withDimensions: withFavorite.withDimensions\n}).join(',')}` : ``]); // Dashboard\n\nexport const getDashboardFields = ({\n  withItems,\n  withFavorite\n} = {}) => arrayClean([`${getIdNameFields().join(',')}`, 'description', 'displayDescription', 'favorite', `user[${getIdNameFields({\n  rename: true\n}).join(',')}]`, 'created', 'lastUpdated', 'access', 'href', // needed for d2-ui-translations-dialog, since we don't pass a d2 Model anymore\nwithItems ? `dashboardItems[${getDashboardItemsFields({\n  withFavorite\n}).join(',')}]` : ``]);","import arrayClean from 'd2-utilizr/lib/arrayClean';\nimport { onError, getDashboardFields } from './index';\nexport const dashboardsQuery = {\n  resource: 'dashboards',\n  params: {\n    fields: [getDashboardFields(), 'dashboardItems[id]'].join(','),\n    paging: false\n  }\n};\nexport const dashboardQuery = {\n  resource: 'dashboards',\n  id: ({\n    id\n  }) => id,\n  params: {\n    fields: arrayClean(getDashboardFields({\n      withItems: true,\n      withFavorite: {\n        withDimensions: false\n      }\n    })).join(',')\n  }\n};\nexport const starDashboardMutation = {\n  type: 'create',\n  resource: 'dashboards',\n  // TODO create mutation does not accept the id function\n  // we must use a workaround until dataEngine supports dynamic resource/path\n  id: ({\n    id\n  }) => `${id}/favorite`\n};\nexport const unstarDashboardMutation = {\n  type: 'delete',\n  resource: 'dashboards',\n  id: ({\n    id\n  }) => `${id}/favorite`\n};\nexport const deleteDashboardMutation = {\n  type: 'delete',\n  resource: 'dashboards',\n  id: ({\n    id\n  }) => id\n}; // Get \"all\" dashboards on startup\n\nexport const apiFetchDashboards = async dataEngine => {\n  try {\n    const dashboardsData = await dataEngine.query({\n      dashboards: dashboardsQuery\n    });\n    return dashboardsData.dashboards.dashboards;\n  } catch (error) {\n    onError(error);\n  }\n}; // Get more info about selected dashboard\n\nexport const apiFetchDashboard = async (dataEngine, id) => {\n  try {\n    const dashboardData = await dataEngine.query({\n      dashboard: dashboardQuery\n    }, {\n      variables: {\n        id\n      }\n    });\n    return dashboardData.dashboard;\n  } catch (error) {\n    onError(error);\n  }\n}; // Star dashboard\n\nexport const apiStarDashboard = async (dataEngine, id, isStarred) => {\n  try {\n    if (isStarred) {\n      await dataEngine.mutate(starDashboardMutation, {\n        variables: {\n          id\n        }\n      });\n    } else {\n      await dataEngine.mutate(unstarDashboardMutation, {\n        variables: {\n          id\n        }\n      });\n    }\n  } catch (error) {\n    onError(error);\n  }\n};\nexport const apiDeleteDashboard = async (dataEngine, id) => {\n  try {\n    await dataEngine.mutate(deleteDashboardMutation, {\n      variables: {\n        id\n      }\n    });\n  } catch (error) {\n    onError(error);\n  }\n};","import { apiFetchDashboard } from './dashboards';\n\nconst onError = error => console.log('Error: ', error);\n\nexport const createDashboardMutation = {\n  resource: 'dashboards',\n  type: 'create',\n  data: ({\n    data\n  }) => data\n};\nexport const updateDashboardMutation = {\n  resource: 'dashboards',\n  type: 'update',\n  id: ({\n    id\n  }) => id,\n  data: ({\n    data\n  }) => data\n};\n\nconst generatePayload = (dashboard = {}, data) => {\n  return { ...dashboard,\n    name: data.name,\n    description: data.description,\n    dashboardItems: data.dashboardItems.map(item => ({ ...item,\n      width: item.w,\n      height: item.h\n    }))\n  };\n};\n\nexport const updateDashboard = async (dataEngine, data) => {\n  try {\n    const dashboard = await apiFetchDashboard(dataEngine, data.id);\n    const {\n      response\n    } = await dataEngine.mutate(updateDashboardMutation, {\n      variables: {\n        id: data.id,\n        data: generatePayload(dashboard, data)\n      }\n    });\n    return response.uid;\n  } catch (error) {\n    onError(error);\n  }\n};\nexport const postDashboard = async (dataEngine, data) => {\n  try {\n    const {\n      response\n    } = await dataEngine.mutate(createDashboardMutation, {\n      variables: {\n        data: generatePayload({}, data)\n      }\n    });\n    return response.uid;\n  } catch (error) {\n    onError(error);\n  }\n};","export const RECEIVED_USER = 'RECEIVED_USER';\nexport const DEFAULT_STATE_USER = {\n  id: '',\n  username: '',\n  uiLocale: '',\n  isSuperuser: false\n};\nexport default ((state = DEFAULT_STATE_USER, action) => {\n  switch (action.type) {\n    case RECEIVED_USER:\n      {\n        return fromD2ToUserObj(action.value);\n      }\n\n    default:\n      return state;\n  }\n});\n\nfunction fromD2ToUserObj(d2Object) {\n  return {\n    id: d2Object.id,\n    username: d2Object.username,\n    uiLocale: d2Object.settings.keyUiLocale,\n    isSuperuser: d2Object.authorities.has('ALL')\n  };\n} // selectors\n\n\nexport const sGetUserId = state => state.user.id;\nexport const sGetUserUsername = state => state.user.username;\nexport const sGetIsSuperuser = state => state.user.isSuperuser;\nexport const sGetUiLocale = state => state.user.uiLocale;","import { SET_DASHBOARDS, ADD_DASHBOARDS, SET_DASHBOARD_STARRED, SET_DASHBOARD_DISPLAY_NAME, SET_DASHBOARD_ITEMS } from '../reducers/dashboards';\nimport { getCustomDashboards, sGetDashboardById, sGetDashboardsSortedByStarred } from '../reducers/dashboards';\nimport { NON_EXISTING_DASHBOARD_ID } from '../reducers/selected';\nimport { sGetUserUsername } from '../reducers/user';\nimport { tSetSelectedDashboardById, acSetSelectedId } from './selected';\nimport { apiFetchDashboards, apiStarDashboard, apiDeleteDashboard } from '../api/dashboards';\nimport { getPreferredDashboardId } from '../api/localStorage';\nimport { arrayToIdMap } from '../modules/util'; // actions\n\nexport const acSetDashboards = dashboards => ({\n  type: SET_DASHBOARDS,\n  value: arrayToIdMap(getCustomDashboards(dashboards))\n});\nexport const acAppendDashboards = dashboards => ({\n  type: ADD_DASHBOARDS,\n  value: arrayToIdMap(getCustomDashboards(dashboards))\n});\nexport const acSetDashboardStarred = (dashboardId, isStarred) => ({\n  type: SET_DASHBOARD_STARRED,\n  dashboardId: dashboardId,\n  value: isStarred\n});\nexport const acSetDashboardDisplayName = (dashboardId, value) => ({\n  type: SET_DASHBOARD_DISPLAY_NAME,\n  dashboardId,\n  value\n});\nexport const acSetDashboardItems = value => ({\n  type: SET_DASHBOARD_ITEMS,\n  value\n}); // thunks\n\nexport const tFetchDashboards = () => async (dispatch, getState, dataEngine) => {\n  const dashboards = await apiFetchDashboards(dataEngine);\n  dispatch(acSetDashboards(dashboards));\n};\nexport const tSelectDashboard = id => async (dispatch, getState) => {\n  const onError = error => {\n    console.log('Error (apiFetchDashboards): ', error);\n    return error;\n  };\n\n  try {\n    const state = getState();\n    let dashboardToSelect = null;\n\n    if (id) {\n      dashboardToSelect = sGetDashboardById(state, id) || null;\n    } else {\n      const preferredId = getPreferredDashboardId(sGetUserUsername(state));\n      const dash = sGetDashboardById(state, preferredId);\n      dashboardToSelect = preferredId && dash ? dash : sGetDashboardsSortedByStarred(state)[0];\n    }\n\n    if (dashboardToSelect) {\n      dispatch(tSetSelectedDashboardById(dashboardToSelect.id));\n    } else {\n      dispatch(acSetSelectedId(NON_EXISTING_DASHBOARD_ID));\n    }\n  } catch (err) {\n    return onError(err);\n  }\n};\nexport const tStarDashboard = (id, isStarred) => async (dispatch, getState, dataEngine) => {\n  const onSuccess = id => {\n    dispatch(acSetDashboardStarred(id, isStarred));\n    return id;\n  };\n\n  const onError = error => {\n    console.log('Error (apiStarDashboard): ', error);\n    return error;\n  };\n\n  try {\n    await apiStarDashboard(dataEngine, id, isStarred);\n    return onSuccess(id);\n  } catch (err) {\n    return onError(err);\n  }\n};\nexport const tDeleteDashboard = id => async (dispatch, getState, dataEngine) => {\n  try {\n    await apiDeleteDashboard(dataEngine, id);\n    await dispatch(tFetchDashboards());\n    return Promise.resolve();\n  } catch (err) {\n    console.log('Error (deleteDashboard): ', err);\n    return err;\n  }\n};","import { getDimensionById, DIMENSION_ID_PERIOD, DIMENSION_ID_ORGUNIT } from '@dhis2/analytics';\nexport const SET_DIMENSIONS = 'SET_DIMENSIONS';\nexport const DEFAULT_DIMENSIONS = [getDimensionById(DIMENSION_ID_PERIOD), getDimensionById(DIMENSION_ID_ORGUNIT)];\nexport default ((state = DEFAULT_DIMENSIONS, action) => {\n  switch (action.type) {\n    case SET_DIMENSIONS:\n      {\n        return [...DEFAULT_DIMENSIONS, ...action.value];\n      }\n\n    default:\n      return state;\n  }\n});\nexport const sGetDimensions = state => state.dimensions;","import { sGetDimensions } from './dimensions';\nimport { createSelector } from 'reselect';\nexport const CLEAR_ITEM_FILTERS = 'CLEAR_ITEM_FILTERS';\nexport const SET_ITEM_FILTERS = 'SET_ITEM_FILTERS';\nexport const ADD_ITEM_FILTER = 'ADD_ITEM_FILTER';\nexport const REMOVE_ITEM_FILTER = 'REMOVE_ITEM_FILTER';\nexport const DEFAULT_STATE_ITEM_FILTERS = {};\nexport default ((state = DEFAULT_STATE_ITEM_FILTERS, action) => {\n  switch (action.type) {\n    case ADD_ITEM_FILTER:\n      {\n        return { ...state,\n          [action.filter.id]: action.filter.value\n        };\n      }\n\n    case REMOVE_ITEM_FILTER:\n      {\n        const newState = { ...state\n        };\n        delete newState[action.id];\n        return newState;\n      }\n\n    case SET_ITEM_FILTERS:\n      {\n        return action.filters;\n      }\n\n    case CLEAR_ITEM_FILTERS:\n      {\n        return DEFAULT_STATE_ITEM_FILTERS;\n      }\n\n    default:\n      return state;\n  }\n}); // selectors\n\nexport const sGetItemFiltersRoot = state => state.itemFilters; // simplify the filters structure to:\n// [{ id: 'pe', name: 'Period', values: [{ id: 2019: name: '2019' }, {id: 'LAST_MONTH', name: 'Last month' }]}, ...]\n\nexport const sGetNamedItemFilters = createSelector([sGetItemFiltersRoot, sGetDimensions], (filters, dimensions) => Object.keys(filters).reduce((arr, id) => {\n  arr.push({\n    id: id,\n    name: dimensions.find(dimension => dimension.id === id).name,\n    values: filters[id].map(value => ({\n      id: value.id,\n      name: value.displayName || value.name\n    }))\n  });\n  return arr;\n}, []));","import { ADD_ITEM_FILTER, REMOVE_ITEM_FILTER, SET_ITEM_FILTERS, CLEAR_ITEM_FILTERS } from '../reducers/itemFilters';\nexport const FILTER_ORG_UNIT = 'ou'; // actions\n\nexport const acAddItemFilter = filter => ({\n  type: ADD_ITEM_FILTER,\n  filter\n});\nexport const acRemoveItemFilter = id => ({\n  type: REMOVE_ITEM_FILTER,\n  id\n});\nexport const acClearItemFilters = () => ({\n  type: CLEAR_ITEM_FILTERS\n});\nexport const acSetItemFilters = filters => ({\n  type: SET_ITEM_FILTERS,\n  filters\n});","import update from 'immutability-helper';\nimport { arrayToIdMap } from '../modules/util';\nexport const RECEIVED_MESSAGES = 'RECEIVED_MESSAGES';\nexport default ((state = {}, action) => {\n  switch (action.type) {\n    case RECEIVED_MESSAGES:\n      {\n        const conversations = arrayToIdMap(action.value);\n        const newState = update(state, {\n          $merge: conversations\n        });\n        return newState;\n      }\n\n    default:\n      return state;\n  }\n}); // selectors\n\nexport const sGetMessagesRoot = state => state.messages;","export const messageConversationsQuery = {\n  resource: 'messageConversations',\n  params: {\n    fields: 'id,messageCount,lastUpdated,messageType,displayName,read,messages[id,read,sender[id,displayName],text,lastUpdated]',\n    order: 'read:asc',\n    pageSize: 200\n  }\n};\nexport const getMessages = async dataEngine => {\n  try {\n    const {\n      messageConversations\n    } = await dataEngine.query({\n      messageConversations: messageConversationsQuery\n    });\n    return messageConversations.messageConversations;\n  } catch (error) {\n    console.log('Error:', error);\n  }\n};","import { RECEIVED_MESSAGES } from '../../../reducers/messages';\nimport { getMessages } from '../../../api/messages';\n\nconst onError = (action, error) => {\n  console.log(`Error in action ${action}: ${error}`);\n  return error;\n};\n\nexport const receivedMessages = value => ({\n  type: RECEIVED_MESSAGES,\n  value\n});\nexport const tGetMessages = dataEngine => async dispatch => {\n  try {\n    const messageConversations = await getMessages(dataEngine);\n    return dispatch(receivedMessages(messageConversations));\n  } catch (err) {\n    return onError('Get Messages', err);\n  }\n};","export const SET_ALERT_MESSAGE = 'SET_ALERT_MESSAGE';\nexport const CLEAR_ALERT_MESSAGE = 'CLEAR_ALERT_MESSAGE';\nexport const DEFAULT_STATE_ALERT = null;\nexport default ((state = DEFAULT_STATE_ALERT, action) => {\n  switch (action.type) {\n    case SET_ALERT_MESSAGE:\n      {\n        return action.value;\n      }\n\n    case CLEAR_ALERT_MESSAGE:\n      {\n        return DEFAULT_STATE_ALERT;\n      }\n\n    default:\n      return state;\n  }\n}); // selectors\n\nexport const sGetAlertMessage = state => state.alert;","import { SET_ALERT_MESSAGE, CLEAR_ALERT_MESSAGE } from '../reducers/alert';\nexport const acSetAlertMessage = value => ({\n  type: SET_ALERT_MESSAGE,\n  value\n});\nexport const acClearAlertMessage = () => ({\n  type: CLEAR_ALERT_MESSAGE\n});","import { orObject } from '../modules/util';\nimport objectClean from 'd2-utilizr/lib/objectClean';\n/** @module reducers/visualizations */\n\nexport const ADD_VISUALIZATION = 'ADD_VISUALIZATION';\nexport const SET_ACTIVE_VISUALIZATION_TYPE = 'SET_ACTIVE_VISUALIZATION_TYPE';\nexport const CLEAR_VISUALIZATIONS = 'CLEAR_VISUALIZATIONS';\nexport const DEFAULT_STATE_VISUALIZATIONS = {};\n\nconst isEmpty = p => p === undefined || p === null;\n\nexport default ((state = DEFAULT_STATE_VISUALIZATIONS, action) => {\n  switch (action.type) {\n    case ADD_VISUALIZATION:\n      {\n        return { ...state,\n          [action.value.id]: objectClean({ ...orObject(state[action.value.id]),\n            ...action.value\n          }, isEmpty)\n        };\n      }\n\n    case CLEAR_VISUALIZATIONS:\n      {\n        return DEFAULT_STATE_VISUALIZATIONS;\n      }\n\n    default:\n      return state;\n  }\n}); // root selector\n\nexport const sGetVisualizationsRoot = state => state.visualizations; // selectors level 1\n\nexport const sGetVisualization = (state, id) => {\n  return sGetVisualizationsRoot(state)[id];\n};","import { ADD_VISUALIZATION, CLEAR_VISUALIZATIONS } from '../reducers/visualizations';\nexport const acAddVisualization = value => ({\n  type: ADD_VISUALIZATION,\n  value\n});\nexport const acClearVisualizations = () => ({\n  type: CLEAR_VISUALIZATIONS\n});","import { apiGetUserDataStoreValue, apiPostUserDataStoreValue } from './userDataStore';\nimport { DEFAULT_STATE_SELECTED_SHOWDESCRIPTION } from '../reducers/selected';\nconst KEY_SHOW_DESCRIPTION = 'showDescription';\nexport const apiGetShowDescription = async () => await apiGetUserDataStoreValue(KEY_SHOW_DESCRIPTION, DEFAULT_STATE_SELECTED_SHOWDESCRIPTION);\nexport const apiPostShowDescription = async (value) => await apiPostUserDataStoreValue(KEY_SHOW_DESCRIPTION, value);","import i18n from '@dhis2/d2-i18n';\nimport { getCustomDashboards, sGetDashboardById } from '../reducers/dashboards';\nimport { SET_SELECTED_ID, SET_SELECTED_ISLOADING, SET_SELECTED_SHOWDESCRIPTION, SET_SELECTED_ITEM_ACTIVE_TYPE, CLEAR_SELECTED_ITEM_ACTIVE_TYPES, sGetSelectedIsLoading, sGetSelectedId } from '../reducers/selected';\nimport { sGetUserUsername } from '../reducers/user';\nimport { acSetDashboardItems, acAppendDashboards } from './dashboards';\nimport { acClearItemFilters } from './itemFilters';\nimport { tGetMessages } from '../components/Item/MessagesItem/actions';\nimport { acSetAlertMessage, acClearAlertMessage } from './alert';\nimport { acAddVisualization, acClearVisualizations } from './visualizations';\nimport { apiFetchDashboard } from '../api/dashboards';\nimport { storePreferredDashboardId } from '../api/localStorage';\nimport { apiGetShowDescription, apiPostShowDescription } from '../api/description';\nimport { withShape } from '../components/ItemGrid/gridUtil';\nimport { getVisualizationFromItem } from '../modules/item';\nimport { REPORT_TABLE, CHART, MAP, EVENT_REPORT, EVENT_CHART, MESSAGES } from '../modules/itemTypes'; // actions\n\nexport const acSetSelectedId = value => ({\n  type: SET_SELECTED_ID,\n  value\n});\nexport const acSetSelectedIsLoading = value => ({\n  type: SET_SELECTED_ISLOADING,\n  value\n});\nexport const acSetSelectedShowDescription = value => ({\n  type: SET_SELECTED_SHOWDESCRIPTION,\n  value\n});\nexport const acSetSelectedItemActiveType = (id, activeType) => {\n  const action = {\n    type: SET_SELECTED_ITEM_ACTIVE_TYPE,\n    id,\n    activeType\n  };\n  return action;\n};\nexport const acClearSelectedItemActiveTypes = () => ({\n  type: CLEAR_SELECTED_ITEM_ACTIVE_TYPES\n}); // thunks\n\nexport const tSetSelectedDashboardById = id => async (dispatch, getState, dataEngine) => {\n  dispatch(acSetSelectedIsLoading(true));\n  const alertTimeout = setTimeout(() => {\n    const name = sGetDashboardById(getState(), id)?.displayName;\n\n    if (sGetSelectedIsLoading(getState()) && name) {\n      dispatch(acSetAlertMessage(i18n.t('Loading dashboard – {{name}}', {\n        name\n      })));\n    }\n  }, 500);\n\n  const onSuccess = selected => {\n    dispatch(acAppendDashboards(selected));\n    const customDashboard = getCustomDashboards(selected)[0];\n    dispatch(acSetDashboardItems(withShape(customDashboard.dashboardItems)));\n    storePreferredDashboardId(sGetUserUsername(getState()), id);\n\n    if (id !== sGetSelectedId(getState())) {\n      dispatch(acClearItemFilters());\n      dispatch(acClearVisualizations());\n      dispatch(acClearSelectedItemActiveTypes());\n    }\n\n    customDashboard.dashboardItems.forEach(item => {\n      switch (item.type) {\n        case REPORT_TABLE:\n        case CHART:\n        case MAP:\n        case EVENT_REPORT:\n        case EVENT_CHART:\n          dispatch(acAddVisualization(getVisualizationFromItem(item)));\n          break;\n\n        case MESSAGES:\n          dispatch(tGetMessages(dataEngine));\n          break;\n\n        default:\n          break;\n      }\n    });\n    dispatch(acSetSelectedId(id));\n    dispatch(acSetSelectedIsLoading(false));\n    clearTimeout(alertTimeout);\n    dispatch(acClearAlertMessage());\n    return selected;\n  };\n\n  const onError = error => {\n    console.log('Error: ', error);\n    return error;\n  };\n\n  try {\n    const dashboard = await apiFetchDashboard(dataEngine, id);\n    return onSuccess(dashboard);\n  } catch (err) {\n    return onError(err);\n  }\n};\nexport const tSetShowDescription = () => async dispatch => {\n  const onSuccess = value => {\n    dispatch(acSetSelectedShowDescription(value));\n  };\n\n  const onError = error => {\n    console.log('Error (apiGetShowDescription): ', error);\n    return error;\n  };\n\n  try {\n    const showDescription = await apiGetShowDescription();\n    return onSuccess(showDescription);\n  } catch (err) {\n    return onError(err);\n  }\n};\nexport const tUpdateShowDescription = value => async dispatch => {\n  const onSuccess = () => {\n    dispatch(acSetSelectedShowDescription(value));\n  };\n\n  const onError = error => {\n    console.log('Error (apiGetShowDescription): ', error);\n    return error;\n  };\n\n  try {\n    await apiPostShowDescription(value);\n    return onSuccess();\n  } catch (err) {\n    return onError(err);\n  }\n};","export const getPreferredDashboardId = username => localStorage.getItem(`dhis2.dashboard.current.${username}`) || undefined;\nexport const storePreferredDashboardId = (username, dashboardId) => {\n  localStorage.setItem(`dhis2.dashboard.current.${username}`, dashboardId);\n};","import { generateUid } from 'd2/uid';\nimport i18n from '@dhis2/d2-i18n';\nimport { RECEIVED_EDIT_DASHBOARD, START_NEW_DASHBOARD, RECEIVED_NOT_EDITING, RECEIVED_TITLE, RECEIVED_DESCRIPTION, RECEIVED_DASHBOARD_LAYOUT, ADD_DASHBOARD_ITEM, UPDATE_DASHBOARD_ITEM, REMOVE_DASHBOARD_ITEM, SET_PRINT_PREVIEW_VIEW, CLEAR_PRINT_PREVIEW_VIEW } from '../reducers/editDashboard';\nimport { sGetEditDashboardRoot } from '../reducers/editDashboard';\nimport { updateDashboard, postDashboard } from '../api/editDashboard';\nimport { tSetSelectedDashboardById } from '../actions/selected';\nimport { NEW_ITEM_SHAPE, getGridItemProperties, getPageBreakItemShape, getPrintTitlePageItemShape } from '../components/ItemGrid/gridUtil';\nimport { itemTypeMap, PAGEBREAK, PRINT_TITLE_PAGE } from '../modules/itemTypes';\nimport { convertUiItemsToBackend } from '../modules/uiBackendItemConverter';\n\nconst onError = error => {\n  console.log('Error (Saving Dashboard): ', error);\n  return error;\n}; // actions\n\n\nexport const acSetEditDashboard = (dashboard, items) => {\n  const val = { ...dashboard,\n    dashboardItems: items\n  };\n  return {\n    type: RECEIVED_EDIT_DASHBOARD,\n    value: val\n  };\n};\nexport const acSetEditNewDashboard = () => ({\n  type: START_NEW_DASHBOARD\n});\nexport const acClearEditDashboard = () => ({\n  type: RECEIVED_NOT_EDITING\n});\nexport const acSetPrintPreviewView = () => ({\n  type: SET_PRINT_PREVIEW_VIEW\n});\nexport const acClearPrintPreviewView = () => ({\n  type: CLEAR_PRINT_PREVIEW_VIEW\n});\nexport const acSetDashboardTitle = value => ({\n  type: RECEIVED_TITLE,\n  value\n});\nexport const acSetDashboardDescription = value => ({\n  type: RECEIVED_DESCRIPTION,\n  value\n});\nexport const acUpdateDashboardLayout = value => ({\n  type: RECEIVED_DASHBOARD_LAYOUT,\n  value\n});\nexport const acAddDashboardItem = item => {\n  const type = item.type;\n  delete item.type;\n  const itemPropName = itemTypeMap[type].propName;\n  const id = generateUid();\n  const gridItemProperties = getGridItemProperties(id);\n  let shape;\n\n  if (type === PAGEBREAK) {\n    const yPos = item.yPos || 0;\n    shape = getPageBreakItemShape(yPos, item.isStatic);\n  } else if (type === PRINT_TITLE_PAGE) {\n    shape = getPrintTitlePageItemShape();\n  } else {\n    shape = NEW_ITEM_SHAPE;\n  }\n\n  return {\n    type: ADD_DASHBOARD_ITEM,\n    value: {\n      id,\n      type,\n      position: item.position || null,\n      [itemPropName]: item.content,\n      ...NEW_ITEM_SHAPE,\n      ...gridItemProperties,\n      ...shape\n    }\n  };\n};\nexport const acUpdateDashboardItem = item => ({\n  type: UPDATE_DASHBOARD_ITEM,\n  value: item\n});\nexport const acRemoveDashboardItem = value => ({\n  type: REMOVE_DASHBOARD_ITEM,\n  value\n}); // thunks\n\nexport const tSaveDashboard = () => async (dispatch, getState, dataEngine) => {\n  const dashboard = sGetEditDashboardRoot(getState());\n  const dashboardToSave = { ...dashboard,\n    dashboardItems: convertUiItemsToBackend(dashboard.dashboardItems),\n    name: dashboard.name || i18n.t('Untitled dashboard')\n  };\n\n  try {\n    const dashboardId = dashboardToSave.id ? await updateDashboard(dataEngine, dashboardToSave) : await postDashboard(dataEngine, dashboardToSave);\n    dispatch(acClearEditDashboard());\n    await dispatch(tSetSelectedDashboardById(dashboardId));\n    return Promise.resolve(dashboardId);\n  } catch (error) {\n    onError(error);\n  }\n};","import i18n from '@dhis2/d2-i18n';\nimport { VISUALIZATION, MAP, EVENT_CHART, EVENT_REPORT, USERS, REPORTS, RESOURCES, APP, MESSAGES, TEXT, SPACER } from '../../modules/itemTypes';\nexport const singleItems = [{\n  id: 'additional',\n  header: i18n.t('Additional items'),\n  items: [{\n    type: TEXT,\n    name: i18n.t('Text box'),\n    content: ''\n  }, {\n    type: MESSAGES,\n    name: i18n.t('Messages'),\n    content: 'true'\n  }, {\n    type: SPACER,\n    name: i18n.t('Spacer'),\n    content: ''\n  }]\n}]; // categorizedItems are grouped in the item selector menu\n\nexport const categorizedItems = [VISUALIZATION, MAP, EVENT_REPORT, EVENT_CHART, USERS, REPORTS, RESOURCES, APP]; // listItemTypes are included in a single dashboard item\n\nexport const listItemTypes = [REPORTS, RESOURCES, USERS];","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport i18n from '@dhis2/d2-i18n';\nimport { MenuItem, Divider } from '@dhis2/ui';\nimport HeaderMenuItem from './HeaderMenuItem';\nimport ContentMenuItem from './ContentMenuItem';\nimport { tAddListItemContent } from './actions';\nimport { acAddDashboardItem } from '../../actions/editDashboard';\nimport { getItemUrl, APP, VISUALIZATION } from '../../modules/itemTypes';\nimport { categorizedItems, listItemTypes } from './selectableItems';\nimport classes from './styles/CategorizedMenuGroup.module.css';\n\nclass CategorizedMenuGroup extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      seeMore: false\n    };\n  }\n\n  addItem = item => () => {\n    const {\n      type,\n      acAddDashboardItem,\n      tAddListItemContent\n    } = this.props;\n\n    if (type === APP) {\n      acAddDashboardItem({\n        type,\n        content: item.key\n      });\n    } else {\n      const newItem = {\n        id: item.id,\n        name: item.displayName || item.name\n      };\n\n      if (listItemTypes.includes(type)) {\n        tAddListItemContent(type, newItem);\n      } else {\n        acAddDashboardItem({\n          type,\n          content: newItem\n        });\n      }\n    }\n  };\n  toggleSeeMore = () => {\n    this.setState({\n      seeMore: !this.state.seeMore\n    });\n    this.props.onChangeItemsLimit(this.props.type);\n  };\n\n  render() {\n    const {\n      title,\n      type,\n      items,\n      hasMore\n    } = this.props;\n    return <>\n                <HeaderMenuItem title={title} />\n                {items.map(item => {\n        const itemUrl = getItemUrl(type, item, this.context.d2);\n        return <ContentMenuItem key={item.id || item.key} type={type} visType={type === VISUALIZATION ? item.type : type} name={item.displayName || item.name} onInsert={this.addItem(item)} url={itemUrl} />;\n      })}\n                {hasMore ? <MenuItem dense key={`showmore${title}`} onClick={this.toggleSeeMore} label={<button className={classes.showMoreButton}>\n                                {this.state.seeMore ? i18n.t('Show fewer') : i18n.t('Show more')}\n                            </button>} /> : null}\n                <Divider margin=\"8px 0px\" />\n            </>;\n  }\n\n}\n\nCategorizedMenuGroup.propTypes = {\n  items: PropTypes.array.isRequired,\n  title: PropTypes.string.isRequired,\n  type: PropTypes.oneOf(categorizedItems).isRequired,\n  onChangeItemsLimit: PropTypes.func.isRequired,\n  acAddDashboardItem: PropTypes.func,\n  hasMore: PropTypes.bool,\n  tAddListItemContent: PropTypes.func\n};\nCategorizedMenuGroup.contextTypes = {\n  d2: PropTypes.object.isRequired\n};\nexport default connect(null, {\n  acAddDashboardItem,\n  tAddListItemContent\n})(CategorizedMenuGroup);","import { sGetEditDashboardRoot } from '../../reducers/editDashboard';\nimport { itemTypeMap } from '../../modules/itemTypes';\nimport { acAddDashboardItem, acUpdateDashboardItem } from '../../actions/editDashboard';\nexport const tAddListItemContent = (type, content) => (dispatch, getState) => {\n  const state = getState();\n  const listItemType = itemTypeMap[type].propName;\n  const dashboardItems = sGetEditDashboardRoot(state).dashboardItems;\n  const dashboardItemIndex = dashboardItems.findIndex(item => item.type === type);\n  let dashboardItem; // Reports/Resources/Users dashboard item type already present in dashboard\n\n  if (dashboardItemIndex > -1) {\n    dashboardItem = dashboardItems[dashboardItemIndex];\n    dashboardItem[listItemType].push(content);\n    dispatch(acUpdateDashboardItem(dashboardItem));\n  } else {\n    dashboardItem = {\n      type: type,\n      content: [content]\n    };\n    dispatch(acAddDashboardItem(dashboardItem));\n  }\n};","import React from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport HeaderMenuItem from './HeaderMenuItem';\nimport ContentMenuItem from './ContentMenuItem';\nimport { acAddDashboardItem } from '../../actions/editDashboard';\nexport const SinglesMenuGroup = ({\n  acAddDashboardItem,\n  category\n}) => {\n  const addToDashboard = ({\n    type,\n    content\n  }) => () => {\n    acAddDashboardItem({\n      type,\n      content\n    });\n  };\n\n  return <>\n            <HeaderMenuItem title={category.header} />\n            {category.items.map(item => <ContentMenuItem key={item.type} type={item.type} name={item.name} onInsert={addToDashboard(item)} />)}\n        </>;\n};\nSinglesMenuGroup.propTypes = {\n  acAddDashboardItem: PropTypes.func,\n  category: PropTypes.object\n};\nexport default connect(null, {\n  acAddDashboardItem\n})(SinglesMenuGroup);","import React, { useState, useEffect, createRef } from 'react';\nimport PropTypes from 'prop-types';\nimport { Popover, FlyoutMenu } from '@dhis2/ui';\nimport ItemSearchField from './ItemSearchField';\nimport CategorizedMenuGroup from './CategorizedMenuGroup';\nimport SinglesMenuGroup from './SinglesMenuGroup';\nimport { singleItems, categorizedItems } from './selectableItems';\nimport { itemTypeMap, getDefaultItemCount } from '../../modules/itemTypes';\nimport classes from './styles/ItemSelector.module.css'; // eslint-disable-next-line no-empty-pattern\n\nconst ItemSelector = ({}, context) => {\n  const [isOpen, setIsOpen] = useState(false);\n  const [filter, setFilter] = useState('');\n  const [items, setItems] = useState(null);\n  const [maxOptions, setMaxOptions] = useState(new Set());\n  useEffect(() => {\n    let queryString = '?count=11';\n\n    if ([...maxOptions.values()].length) {\n      queryString += '&max=' + [...maxOptions.values()].join('&max=');\n    }\n\n    const filterStr = filter ? `/${filter}` : '';\n    context.d2.Api.getApi().get(`dashboards/q${filterStr}${queryString}`).then(response => setItems(response)).catch(console.error);\n  }, [filter, maxOptions]);\n\n  const closeMenu = () => {\n    setIsOpen(false);\n    setFilter('');\n    setMaxOptions(new Set());\n  };\n\n  const openMenu = () => setIsOpen(true);\n\n  const getCategorizedMenuGroups = () => {\n    return categorizedItems.filter(type => {\n      const itemType = itemTypeMap[type];\n      return items && items[itemType.endPointName];\n    }).map(type => {\n      const itemType = itemTypeMap[type];\n      const itemCount = getDefaultItemCount(type);\n      const allItems = items[itemType.endPointName];\n      const hasMore = allItems.length > itemCount;\n      const displayItems = maxOptions.has(itemType.id) ? allItems : allItems.slice(0, itemCount);\n      return <CategorizedMenuGroup key={type} type={type} title={itemType.pluralTitle} items={displayItems} onChangeItemsLimit={updateMaxOptions} hasMore={hasMore} />;\n    });\n  };\n\n  const getSinglesMenuGroups = () => singleItems.map(category => <SinglesMenuGroup key={category.id} category={category} />);\n\n  const getMenuGroups = () => getCategorizedMenuGroups().concat(getSinglesMenuGroups());\n\n  const updateMaxOptions = type => {\n    if (type) {\n      const options = new Set(maxOptions);\n      options.has(type) ? options.delete(type) : options.add(type);\n      setMaxOptions(options);\n    } else {\n      setMaxOptions(new Set());\n    }\n  };\n\n  const updateFilter = ({\n    value\n  }) => setFilter(value);\n\n  const inputRef = createRef();\n  return <>\n            <span ref={inputRef}>\n                <ItemSearchField value={filter} onChange={updateFilter} onFocus={openMenu} />\n            </span>\n            {isOpen && <Popover reference={inputRef} placement=\"bottom-start\" onClickOutside={closeMenu} arrow={false} maxWidth={700}>\n                    <FlyoutMenu className={classes.menu} dataTest=\"item-menu\" maxWidth=\"700px\">\n                        {getMenuGroups()}\n                    </FlyoutMenu>\n                </Popover>}\n        </>;\n};\n\nItemSelector.contextTypes = {\n  d2: PropTypes.object.isRequired\n};\nexport default ItemSelector;","import React from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport i18n from '@dhis2/d2-i18n';\nimport { InputField, TextAreaField } from '@dhis2/ui';\nimport ItemSelector from '../ItemSelector/ItemSelector';\nimport { acSetDashboardTitle, acSetDashboardDescription } from '../../actions/editDashboard';\nimport { orObject } from '../../modules/util';\nimport { sGetEditDashboardRoot } from '../../reducers/editDashboard';\nimport classes from './styles/EditTitleBar.module.css';\nexport const EditTitleBar = ({\n  name,\n  description,\n  onChangeTitle,\n  onChangeDescription\n}) => {\n  const updateTitle = (_, e) => {\n    onChangeTitle(e.target.value);\n  };\n\n  const updateDescription = (_, e) => {\n    onChangeDescription(e.target.value);\n  };\n\n  return <section className={classes.section}>\n            <div className={classes.titleDescription}>\n                <InputField className={classes.title} name=\"Dashboard title input\" label={i18n.t('Dashboard title')} type=\"text\" onChange={updateTitle} value={name} placeholder={i18n.t('Untitled dashboard')} dataTest=\"dashboard-title-input\" />\n                <TextAreaField className={classes.description} name=\"Dashboard description input\" label={i18n.t('Dashboard description')} onChange={updateDescription} value={description} dataTest=\"dashboard-description-input\" />\n            </div>\n            <div className={classes.itemSelector}>\n                <ItemSelector />\n            </div>\n        </section>;\n};\nEditTitleBar.propTypes = {\n  onChangeDescription: PropTypes.func.isRequired,\n  onChangeTitle: PropTypes.func.isRequired,\n  description: PropTypes.string,\n  name: PropTypes.string\n};\nEditTitleBar.defaultProps = {\n  name: '',\n  description: ''\n};\n\nconst mapStateToProps = state => {\n  const selectedDashboard = orObject(sGetEditDashboardRoot(state));\n  return {\n    name: selectedDashboard.name,\n    description: selectedDashboard.description\n  };\n};\n\nconst mapDispatchToProps = {\n  onChangeTitle: acSetDashboardTitle,\n  onChangeDescription: acSetDashboardDescription\n};\nexport default connect(mapStateToProps, mapDispatchToProps)(EditTitleBar);","import React from 'react';\nimport { colors } from '@dhis2/ui';\nexport const ThreeDots = () => <svg height=\"18\" viewBox=\"0 0 18 18\" width=\"18\" xmlns=\"http://www.w3.org/2000/svg\">\n        <path d=\"m4 7.5c-.83 0-1.5.67-1.5 1.5s.67 1.5 1.5 1.5 1.5-.67 1.5-1.5-.67-1.5-1.5-1.5zm10 0c-.83 0-1.5.67-1.5 1.5s.67 1.5 1.5 1.5 1.5-.67 1.5-1.5-.67-1.5-1.5-1.5zm-5 0c-.83 0-1.5.67-1.5 1.5s.67 1.5 1.5 1.5 1.5-.67 1.5-1.5-.67-1.5-1.5-1.5z\" fill=\"#6e7a8a\" />\n    </svg>;\nexport const SpeechBubble = () => <svg height=\"20\" viewBox=\"0 0 20 20\" width=\"20\" xmlns=\"http://www.w3.org/2000/svg\" style={{\n  margin: '3px 2px 0 2px'\n}} // Temporary fix for the misaligned icon, should be removed once the icon is replaced\n>\n        <path d=\"m20 2h-16c-1.1 0-1.99.9-1.99 2l-.01 18 4-4h14c1.1 0 2-.9 2-2v-12c0-1.1-.9-2-2-2zm-2 12h-12v-2h12zm0-3h-12v-2h12zm0-3h-12v-2h12z\" fill=\"#6e7a8a\" fillRule=\"evenodd\" transform=\"translate(-2 -2)\" />\n    </svg>;\nexport const Warning = () => <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24\" viewBox=\"0 0 24 24\" width=\"24\" fill={colors.grey600}>\n        <path d=\"M0 0h24v24H0z\" fill=\"none\" />\n        <path d=\"M1 21h22L12 2 1 21zm12-3h-2v-2h2v2zm0-4h-2v-4h2v4z\" />\n    </svg>;\nexport const Fullscreen = () => <svg height=\"16\" viewBox=\"0 0 16 16\" width=\"16\" xmlns=\"http://www.w3.org/2000/svg\">\n        <path d=\"m6.85355339 9.14644661c.17356635.17356635.1928515.44299075.05785545.63785889l-.05785545.06924789-4.14755339 4.14644661h2.794c.24545989 0 .44960837.1768752.49194433.4101244l.00805567.0898756c0 .2454599-.17687516.4496084-.41012437.4919443l-.08987563.0080557h-4c-.24545989 0-.44960837-.1768752-.49194433-.4101244l-.00805567-.0898756v-4c0-.2761424.22385763-.5.5-.5.24545989 0 .44960837.1768752.49194433.4101244l.00805567.0898756v2.792l4.14644661-4.14555339c.19526215-.19526215.51184463-.19526215.70710678 0zm6.14644661-2.14644661v6h-6v-1h5v-5zm-4-4v1h-5v5h-1v-6zm5.5-2c.2454599 0 .4496084.17687516.4919443.41012437l.0080557.08987563v4c0 .27614237-.2238576.5-.5.5-.2454599 0-.4496084-.17687516-.4919443-.41012437l-.0080557-.08987563v-2.794l-4.14644661 4.14755339c-.19526215.19526215-.51184463.19526215-.70710678 0-.17356635-.17356635-.1928515-.44299075-.05785545-.63785889l.05785545-.06924789 4.14655339-4.14744661-2.793.001c-.2454599 0-.4496084-.17687516-.4919443-.41012437l-.0080557-.08987563c0-.24545989.1768752-.44960837.4101244-.49194433l.0898756-.00805567z\" fill=\"inherit\" />\n    </svg>;\nexport const ExitFullscreen = () => <svg height=\"16\" viewBox=\"0 0 16 16\" width=\"16\" xmlns=\"http://www.w3.org/2000/svg\">\n        <path d=\"m6.5 9c.24545989 0 .44960837.17687516.49194433.41012437l.00805567.08987563v4c0 .2761424-.22385763.5-.5.5-.24545989 0-.44960837-.1768752-.49194433-.4101244l-.00805567-.0898756v-2.794l-3.64644661 3.6475534c-.19526215.1952621-.51184463.1952621-.70710678 0-.17356635-.1735664-.1928515-.4429908-.05785545-.6378589l.05785545-.0692479 3.64555339-3.6464466h-2.792c-.24545989 0-.44960837-.17687516-.49194433-.41012437l-.00805567-.08987563c0-.24545989.17687516-.44960837.41012437-.49194433l.08987563-.00805567zm7.5-.5v5.5h-5.5v-1h4.5v-4.5zm-6.5-6.5v1h-4.5v4.5h-1v-5.5zm6.8535534-.35355339c.1735663.17356635.1928515.44299075.0578554.63785889l-.0578554.06924789-3.6475534 3.64644661h2.794c.2454599 0 .4496084.17687516.4919443.41012437l.0080557.08987563c0 .24545989-.1768752.44960837-.4101244.49194433l-.0898756.00805567h-4c-.24545989 0-.44960837-.17687516-.49194433-.41012437l-.00805567-.08987563v-4c0-.27614237.22385763-.5.5-.5.24545989 0 .44960837.17687516.49194433.41012437l.00805567.08987563v2.792l3.6464466-3.64555339c.1952622-.19526215.5118446-.19526215.7071068 0z\" fill=\"inherit\" />\n    </svg>;","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport i18n from '@dhis2/d2-i18n';\nimport { Button, Modal, ModalTitle, ModalContent, ModalActions, ButtonStrip } from '@dhis2/ui';\nimport { PeriodDimension, DynamicDimension, OrgUnitDimension, DIMENSION_ID_PERIOD, DIMENSION_ID_ORGUNIT } from '@dhis2/analytics';\nimport { acAddItemFilter, acRemoveItemFilter } from '../../actions/itemFilters';\nimport { sGetItemFiltersRoot } from '../../reducers/itemFilters';\n\nconst FilterDialog = ({\n  displayNameProperty,\n  dimension,\n  initiallySelectedItems,\n  addItemFilter,\n  removeItemFilter,\n  onClose\n}, context) => {\n  const [filters, setFilters] = useState(initiallySelectedItems);\n\n  const onSelectItems = ({\n    dimensionId,\n    items\n  }) => {\n    setFilters({\n      [dimensionId]: items\n    });\n  };\n\n  const onDeselectItems = ({\n    dimensionId,\n    itemIdsToRemove\n  }) => {\n    const oldList = filters[dimensionId] || [];\n    const newList = oldList.filter(item => !itemIdsToRemove.includes(item.id));\n    setFilters({ ...filters,\n      [dimensionId]: newList\n    });\n  };\n\n  const onReorderItems = ({\n    dimensionId,\n    itemIds\n  }) => {\n    const oldList = filters[dimensionId] || [];\n    const reorderedList = itemIds.map(id => oldList.find(item => item.id === id));\n    setFilters({ ...filters,\n      [dimensionId]: reorderedList\n    });\n  };\n\n  const saveFilter = () => {\n    const id = dimension.id;\n    const filterItems = filters[id];\n\n    if (filterItems && filterItems.length) {\n      addItemFilter({\n        id,\n        value: [...filterItems]\n      });\n    } else {\n      removeItemFilter(id);\n    }\n\n    onClose(id);\n  };\n\n  const renderDialogContent = () => {\n    const commonProps = {\n      d2: context.d2,\n      onSelect: onSelectItems,\n      onDeselect: onDeselectItems,\n      onReorder: onReorderItems\n    };\n    const selectedItems = filters[dimension.id] || [];\n\n    switch (dimension.id) {\n      case DIMENSION_ID_PERIOD:\n        {\n          return <PeriodDimension selectedPeriods={selectedItems} onSelect={commonProps.onSelect} />;\n        }\n\n      case DIMENSION_ID_ORGUNIT:\n        return <OrgUnitDimension displayNameProperty={displayNameProperty} ouItems={selectedItems} {...commonProps} />;\n\n      default:\n        return <DynamicDimension selectedItems={selectedItems} dimensionId={dimension.id} onSelect={commonProps.onSelect} />;\n    }\n  };\n\n  return <>\n            {dimension.id && <Modal dataTest={`${dimension.id}-dimension-modal`} onClose={onClose} position=\"top\" large>\n                    <ModalTitle>{dimension.name}</ModalTitle>\n                    <ModalContent>{renderDialogContent()}</ModalContent>\n                    <ModalActions>\n                        <ButtonStrip>\n                            <Button secondary onClick={onClose}>\n                                {i18n.t('Cancel')}\n                            </Button>\n                            <Button primary onClick={saveFilter}>\n                                {i18n.t('Confirm')}\n                            </Button>\n                        </ButtonStrip>\n                    </ModalActions>\n                </Modal>}\n        </>;\n};\n\nFilterDialog.propTypes = {\n  addItemFilter: PropTypes.func,\n  dimension: PropTypes.object,\n  displayNameProperty: PropTypes.string,\n  initiallySelectedItems: PropTypes.object,\n  removeItemFilter: PropTypes.func,\n  onClose: PropTypes.func\n};\nFilterDialog.contextTypes = {\n  d2: PropTypes.object\n};\n\nconst mapStateToProps = state => ({\n  initiallySelectedItems: sGetItemFiltersRoot(state)\n});\n\nexport default connect(mapStateToProps, {\n  addItemFilter: acAddItemFilter,\n  removeItemFilter: acRemoveItemFilter\n})(FilterDialog);","export const SET_SETTINGS = 'SET_SETTINGS';\nexport const ADD_SETTINGS = 'ADD_SETTINGS';\nexport const DEFAULT_SETTINGS = {\n  keyDateFormat: 'yyyy-MM-dd',\n  keyAnalysisRelativePeriod: 'LAST_12_MONTHS',\n  keyAnalysisDigitGroupSeparator: 'SPACE',\n  displayNameProperty: 'displayName',\n  uiLocale: 'en',\n  rootOrganisationUnit: {},\n  keyGatherAnalyticalObjectStatisticsInDashboardViews: false\n};\nexport default ((state = DEFAULT_SETTINGS, action) => {\n  switch (action.type) {\n    case SET_SETTINGS:\n      {\n        return Object.assign({}, action.value);\n      }\n\n    case ADD_SETTINGS:\n      {\n        return { ...state,\n          ...action.value\n        };\n      }\n\n    default:\n      return state;\n  }\n}); // Selectors\n\nexport const sGetSettings = state => state.settings;\nexport const sGetSettingsDisplayNameProperty = state => sGetSettings(state).displayNameProperty;\nexport const sGetRootOrgUnit = state => sGetSettings(state).rootOrganisationUnit;\nexport const sGetRelativePeriod = state => sGetSettings(state).keyAnalysisRelativePeriod;\nexport const sGetUiLocale = state => sGetSettings(state).uiLocale;\nexport const sGatherAnalyticalObjectStatisticsInDashboardViews = state => sGetSettings(state).keyGatherAnalyticalObjectStatisticsInDashboardViews;","export const SET_ACTIVE_MODAL_DIMENSION = 'SET_ACTIVE_MODAL_DIMENSION';\nexport const CLEAR_ACTIVE_MODAL_DIMENSION = 'CLEAR_ACTIVE_MODAL_DIMENSION';\nexport const DEFAULT_STATE_ACTIVE_MODAL_DIMENSION = {};\nexport default ((state = DEFAULT_STATE_ACTIVE_MODAL_DIMENSION, action) => {\n  switch (action.type) {\n    case SET_ACTIVE_MODAL_DIMENSION:\n      {\n        return action.value;\n      }\n\n    case CLEAR_ACTIVE_MODAL_DIMENSION:\n      {\n        return DEFAULT_STATE_ACTIVE_MODAL_DIMENSION;\n      }\n\n    default:\n      return state;\n  }\n});\nexport const sGetActiveModalDimension = state => state.activeModalDimension;","import { SET_ACTIVE_MODAL_DIMENSION, CLEAR_ACTIVE_MODAL_DIMENSION } from '../reducers/activeModalDimension';\nexport const acSetActiveModalDimension = value => ({\n  type: SET_ACTIVE_MODAL_DIMENSION,\n  value\n});\nexport const acClearActiveModalDimension = () => ({\n  type: CLEAR_ACTIVE_MODAL_DIMENSION\n});","import React, { useState, useRef } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport ArrowDropDownIcon from '@material-ui/icons/ArrowDropDown';\nimport isEmpty from 'lodash/isEmpty';\nimport i18n from '@dhis2/d2-i18n';\nimport { DimensionsPanel } from '@dhis2/analytics';\nimport { Button, Popover } from '@dhis2/ui';\nimport FilterDialog from './FilterDialog';\nimport { sGetSettingsDisplayNameProperty } from '../../reducers/settings';\nimport { sGetActiveModalDimension } from '../../reducers/activeModalDimension';\nimport { sGetDimensions } from '../../reducers/dimensions';\nimport { sGetItemFiltersRoot } from '../../reducers/itemFilters';\nimport { acClearActiveModalDimension, acSetActiveModalDimension } from '../../actions/activeModalDimension';\nimport classes from './styles/FilterSelector.module.css';\n\nconst FilterSelector = props => {\n  const [showPopover, setShowPopover] = useState(false);\n  const ref = useRef(null);\n\n  const onCloseDialog = () => {\n    setShowPopover(false);\n    props.clearActiveModalDimension();\n  };\n\n  const selectDimension = id => {\n    props.setActiveModalDimension(props.dimensions.find(dimension => dimension.id === id));\n  };\n\n  return <>\n            <span className={classes.buttonContainer} ref={ref}>\n                <Button onClick={() => setShowPopover(true)}>\n                    {i18n.t('Add filter')}\n                    <ArrowDropDownIcon />\n                </Button>\n            </span>\n            {showPopover && <Popover onClickOutside={onCloseDialog} reference={ref} arrow={true} placement=\"bottom-start\" dataTest=\"dashboard-filter-popover\">\n                    <DimensionsPanel style={{\n        width: '320px'\n      }} dimensions={props.dimensions} onDimensionClick={selectDimension} selectedIds={Object.keys(props.initiallySelectedItems)} />\n                </Popover>}\n            {!isEmpty(props.dimension) ? <FilterDialog displayNameProperty={props.displayNameProperty} dimension={props.dimension} onClose={onCloseDialog} /> : null}\n        </>;\n};\n\nconst mapStateToProps = state => ({\n  displayNameProperty: sGetSettingsDisplayNameProperty(state),\n  dimension: sGetActiveModalDimension(state),\n  dimensions: sGetDimensions(state),\n  initiallySelectedItems: sGetItemFiltersRoot(state)\n});\n\nFilterSelector.propTypes = {\n  clearActiveModalDimension: PropTypes.func,\n  dimension: PropTypes.object,\n  dimensions: PropTypes.array,\n  displayNameProperty: PropTypes.string,\n  initiallySelectedItems: PropTypes.object,\n  setActiveModalDimension: PropTypes.func\n};\nexport default connect(mapStateToProps, {\n  clearActiveModalDimension: acClearActiveModalDimension,\n  setActiveModalDimension: acSetActiveModalDimension\n})(FilterSelector);","import React, { useState, createRef } from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { Link, Redirect } from 'react-router-dom';\nimport i18n from '@dhis2/d2-i18n';\nimport SharingDialog from '@dhis2/d2-ui-sharing-dialog';\nimport Star from '@material-ui/icons/Star';\nimport StarBorder from '@material-ui/icons/StarBorder';\nimport { Button, FlyoutMenu, Popover, MenuItem, colors } from '@dhis2/ui';\nimport { useWindowDimensions } from '../WindowDimensionsProvider';\nimport { ThreeDots } from '../Item/VisualizationItem/assets/icons';\nimport { orObject } from '../../modules/util';\nimport { tStarDashboard } from '../../actions/dashboards';\nimport { tUpdateShowDescription } from '../../actions/selected';\nimport FilterSelector from '../ItemFilter/FilterSelector';\nimport { sGetSelectedId, sGetSelectedShowDescription } from '../../reducers/selected';\nimport { sGetDashboardById, sGetDashboardItems, EMPTY_DASHBOARD } from '../../reducers/dashboards';\nimport isSmallScreen from '../../modules/isSmallScreen';\nimport classes from './styles/ViewTitleBar.module.css';\n\nconst ViewTitleBar = (props, context) => {\n  const [moreOptionsIsOpen, setMoreOptionsIsOpen] = useState(false);\n  const [sharingDialogIsOpen, setSharingDialogIsOpen] = useState(false);\n  const [redirectUrl, setRedirectUrl] = useState(null);\n  const {\n    width\n  } = useWindowDimensions();\n  const {\n    id,\n    name,\n    description,\n    access,\n    style,\n    showDescription,\n    starred,\n    onToggleStarredDashboard,\n    onShowHideDescription\n  } = props;\n\n  const toggleSharingDialog = () => setSharingDialogIsOpen(!sharingDialogIsOpen);\n\n  const toggleMoreOptions = () => setMoreOptionsIsOpen(!moreOptionsIsOpen);\n\n  const printLayout = () => setRedirectUrl(`${id}/printlayout`);\n\n  const printOipp = () => setRedirectUrl(`${id}/printoipp`);\n\n  const titleStyle = Object.assign({}, style.title, {\n    cursor: 'default',\n    userSelect: 'text',\n    top: '7px'\n  });\n  const StarIcon = starred ? Star : StarBorder;\n\n  if (redirectUrl) {\n    return <Redirect to={redirectUrl} />;\n  }\n\n  const showHideDescriptionLabel = showDescription ? i18n.t('Hide description') : i18n.t('Show description');\n\n  const showHideDescription = () => {\n    onShowHideDescription();\n    toggleMoreOptions();\n  };\n\n  const toggleStarredDashboardLabel = starred ? i18n.t('Unstar dashboard') : i18n.t('Star dashboard');\n\n  const toggleStarredDashboard = () => {\n    // TODO use dataQuery directly here with create/delete mutations ?!\n    onToggleStarredDashboard();\n    toggleMoreOptions();\n  };\n\n  const buttonRef = createRef();\n  const userAccess = orObject(access);\n  return <>\n            <div className={classes.titleBar}>\n                <span style={titleStyle} data-test=\"view-dashboard-title\">\n                    {name}\n                </span>\n                <div className={classes.actions}>\n                    <div className={classes.titleBarIcon} onClick={onToggleStarredDashboard}>\n                        <StarIcon style={{\n            fill: colors.grey600\n          }} />\n                    </div>\n                    <div className={classes.strip}>\n                        {userAccess.update ? <Link className={classes.editLink} to={`/${id}/edit`} data-test=\"link-edit-dashboard\">\n                                <Button>{i18n.t('Edit')}</Button>\n                            </Link> : null}\n                        {userAccess.manage ? <Button className={classes.shareButton} onClick={toggleSharingDialog}>\n                                {i18n.t('Share')}\n                            </Button> : null}\n                        <FilterSelector />\n                        <span ref={buttonRef}>\n                            <Button small={isSmallScreen(width)} dataTest=\"more-button\" onClick={toggleMoreOptions}>\n                                <ThreeDots />\n                                <span style={{\n                marginLeft: '5px'\n              }}>\n                                    {i18n.t('More')}\n                                </span>\n                            </Button>\n                        </span>\n                    </div>\n                    {moreOptionsIsOpen && <Popover reference={buttonRef} placement=\"bottom-start\" onClickOutside={toggleMoreOptions}>\n                            <FlyoutMenu>\n                                <MenuItem dense label={toggleStarredDashboardLabel} onClick={toggleStarredDashboard} />\n                                <MenuItem dense label={showHideDescriptionLabel} onClick={showHideDescription} />\n                                <MenuItem dense label={i18n.t('Print')} dataTest=\"print-menu-item\">\n                                    <MenuItem dense label={i18n.t('Dashboard layout')} onClick={printLayout} dataTest=\"print-layout-menu-item\" />\n                                    <MenuItem dense label={i18n.t('One item per page')} onClick={printOipp} dataTest=\"print-oipp-menu-item\" />\n                                </MenuItem>\n                            </FlyoutMenu>\n                        </Popover>}\n                </div>\n            </div>\n            {showDescription ? <div className=\"dashboard-description\" style={Object.assign({\n      paddingTop: '5px',\n      paddingBottom: '5px'\n    }, style.description, !description ? {\n      color: '#888'\n    } : {})}>\n                    {description || i18n.t('No description')}\n                </div> : null}\n            {id ? <SharingDialog d2={context.d2} id={id} type=\"dashboard\" open={sharingDialogIsOpen} onRequestClose={toggleSharingDialog} /> : null}\n        </>;\n};\n\nViewTitleBar.propTypes = {\n  access: PropTypes.object,\n  description: PropTypes.string,\n  id: PropTypes.string,\n  name: PropTypes.string,\n  showDescription: PropTypes.bool,\n  starred: PropTypes.bool,\n  style: PropTypes.object,\n  onShowHideDescription: PropTypes.func,\n  onToggleStarredDashboard: PropTypes.func\n};\nViewTitleBar.defaultProps = {\n  name: '',\n  description: '',\n  starred: false,\n  showDescription: false\n};\nViewTitleBar.contextTypes = {\n  d2: PropTypes.object\n};\n\nconst mapStateToProps = state => {\n  const id = sGetSelectedId(state);\n  const dashboard = sGetDashboardById(state, id) || EMPTY_DASHBOARD;\n  return {\n    id,\n    name: dashboard.displayName,\n    description: dashboard.displayDescription,\n    dashboardItems: sGetDashboardItems(state),\n    showDescription: sGetSelectedShowDescription(state),\n    starred: dashboard.starred,\n    access: dashboard.access\n  };\n};\n\nconst mergeProps = (stateProps, dispatchProps, ownProps) => {\n  const {\n    id,\n    starred,\n    showDescription\n  } = stateProps;\n  const {\n    dispatch\n  } = dispatchProps;\n  return { ...stateProps,\n    ...ownProps,\n    onToggleStarredDashboard: () => dispatch(tStarDashboard(id, !starred)),\n    onShowHideDescription: () => dispatch(tUpdateShowDescription(!showDescription))\n  };\n};\n\nexport default connect(mapStateToProps, null, mergeProps)(ViewTitleBar);","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { colors } from '@dhis2/ui';\nimport EditTitleBar from './EditTitleBar';\nimport ViewTitleBar from './ViewTitleBar';\nimport './TitleBar.css';\nconst style = {\n  title: {\n    position: 'relative',\n    fontSize: 21,\n    fontWeight: 500,\n    color: colors.black,\n    minWidth: 50\n  },\n  description: {\n    fontSize: 14,\n    color: colors.grey800\n  }\n};\n\nconst TitleBar = ({\n  edit\n}) => {\n  return <div className=\"titlebar-wrapper\" style={{\n    padding: '13px 15px 5px 10px'\n  }}>\n            {edit ? <EditTitleBar style={style} /> : <ViewTitleBar style={style} />}\n        </div>;\n};\n\nTitleBar.propTypes = {\n  edit: PropTypes.bool\n};\nexport default TitleBar;","import React from 'react';\nimport PropTypes from 'prop-types';\nimport classes from './styles/NoVisualizationMessage.module.css';\n\nconst NoVisualizationMessage = ({\n  message\n}) => {\n  return <div className={classes.message}>{message}</div>;\n};\n\nNoVisualizationMessage.propTypes = {\n  message: PropTypes.string\n};\nexport default NoVisualizationMessage;","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport i18n from '@dhis2/d2-i18n';\nimport NoVisualizationMessage from './NoVisualizationMessage';\nimport * as pluginManager from './plugin';\nimport { getBaseUrl, orObject } from '../../../../modules/util';\nimport { getGridItemDomId } from '../../../ItemGrid/gridUtil';\n\nconst pluginCredentials = d2 => {\n  return {\n    baseUrl: getBaseUrl(d2),\n    auth: d2.Api.getApi().defaultHeaders.Authorization\n  };\n};\n\nclass DefaultPlugin extends Component {\n  pluginCredentials = null;\n\n  constructor(props, context) {\n    super(props);\n    this.d2 = context.d2;\n  }\n\n  pluginIsAvailable = () => pluginManager.pluginIsAvailable(this.props.activeType || this.props.item.type);\n  shouldPluginReload = prevProps => {\n    // TODO - fix this hack, to handle bug with multiple\n    // rerendering while switching between dashboards.\n    //\n    // To determine if the rendering is happening because of a\n    // dashboard switch, check if the item reference has changed.\n    const reloadAllowed = this.props.item === prevProps.item;\n    const filtersChanged = prevProps.itemFilters !== this.props.itemFilters;\n    const vis = orObject(this.props.visualization);\n    const prevVis = orObject(prevProps.visualization);\n    const visChanged = vis.id !== prevVis.id || prevProps.activeType !== this.props.activeType;\n    return reloadAllowed && (visChanged || filtersChanged);\n  };\n  reloadPlugin = prevProps => {\n    if (this.pluginIsAvailable() && this.shouldPluginReload(prevProps)) {\n      if (this.props.activeType !== prevProps.activeType || this.props.itemFilters !== prevProps.itemFilters) {\n        pluginManager.unmount(this.props.item, prevProps.activeType);\n        pluginManager.load(this.props.item, this.props.visualization, {\n          credentials: this.pluginCredentials,\n          activeType: this.props.activeType\n        });\n      }\n    }\n  };\n\n  componentDidMount() {\n    this.pluginCredentials = pluginCredentials(this.d2);\n\n    if (this.pluginIsAvailable()) {\n      pluginManager.load(this.props.item, this.props.visualization, {\n        credentials: this.pluginCredentials,\n        activeType: this.props.activeType,\n        options: this.props.options\n      });\n    }\n  }\n\n  componentDidUpdate(prevProps) {\n    this.reloadPlugin(prevProps);\n  }\n\n  componentWillUnmount() {\n    if (this.pluginIsAvailable()) {\n      pluginManager.unmount(this.props.item, this.props.activeType);\n    }\n  }\n\n  render() {\n    const {\n      item,\n      style\n    } = this.props;\n    return this.pluginIsAvailable() ? <div id={getGridItemDomId(item.id)} style={style} /> : <NoVisualizationMessage message={i18n.t('Unable to load the plugin for this item')} />;\n  }\n\n}\n\nDefaultPlugin.contextTypes = {\n  d2: PropTypes.object\n};\nDefaultPlugin.propTypes = {\n  activeType: PropTypes.string,\n  item: PropTypes.object,\n  itemFilters: PropTypes.object,\n  options: PropTypes.object,\n  style: PropTypes.object,\n  visualization: PropTypes.object\n};\nDefaultPlugin.defaultProps = {\n  style: {},\n  item: {},\n  itemFilters: {},\n  options: {},\n  visualization: {}\n};\nexport default DefaultPlugin;","import React from 'react';\nimport PropTypes from 'prop-types';\nimport DefaultPlugin from './DefaultPlugin';\nimport { MAP } from '../../../../modules/itemTypes';\n\nconst MapPlugin = ({\n  applyFilters,\n  ...props\n}) => {\n  if (props.item.type === MAP) {\n    // apply filters only to thematic and event layers\n    // for maps AO\n    const mapViews = props.visualization.mapViews.map(mapView => {\n      if (mapView.layer.includes('thematic') || mapView.layer.includes('event')) {\n        return applyFilters(mapView, props.itemFilters);\n      }\n\n      return mapView;\n    });\n    props.visualization = { ...props.visualization,\n      mapViews\n    };\n  } else {\n    // this is the case of a non map AO passed to the maps plugin\n    // due to a visualization type switch in dashboard item\n    // maps plugin takes care of converting the AO to a suitable format\n    props.visualization = applyFilters(props.visualization, props.itemFilters);\n  }\n\n  return <DefaultPlugin options={{\n    hideTitle: true\n  }} {...props} />;\n};\n\nMapPlugin.propTypes = {\n  applyFilters: PropTypes.func,\n  item: PropTypes.object,\n  itemFilters: PropTypes.object,\n  visualization: PropTypes.object\n};\nexport default MapPlugin;","import React from 'react';\nimport { CircularLoader } from '@dhis2/ui';\nimport classes from './styles/LoadingMask.module.css';\n\nconst LoadingMask = () => {\n  return <div className={classes.center}>\n            <CircularLoader />\n        </div>;\n};\n\nexport default LoadingMask;","const getFilteredVisualization = (visualization, filters) => {\n  if (!Object.keys(filters).length) {\n    return visualization;\n  } // deep clone objects in filters to avoid changing the visualization in the Redux store\n\n\n  const visRows = visualization.rows.map(obj => ({ ...obj\n  }));\n  const visColumns = visualization.columns.map(obj => ({ ...obj\n  }));\n  const visFilters = visualization.filters.map(obj => ({ ...obj\n  }));\n  Object.keys(filters).forEach(dimensionId => {\n    if (filters[dimensionId]) {\n      let dimensionFound = false;\n      [visRows, visColumns, visFilters].forEach(dimensionObjects => dimensionObjects.filter(obj => obj.dimension === dimensionId).forEach(obj => {\n        dimensionFound = true;\n        obj.items = filters[dimensionId];\n      })); // add dimension to filters if not already present elsewhere\n\n      if (!dimensionFound) {\n        visFilters.push({\n          dimension: dimensionId,\n          items: filters[dimensionId]\n        });\n      }\n    }\n  });\n  return { ...visualization,\n    rows: visRows,\n    columns: visColumns,\n    filters: visFilters\n  };\n};\n\nexport default getFilteredVisualization;","import { VIS_TYPE_COLUMN, VIS_TYPE_PIVOT_TABLE, getAdaptedUiLayoutByType } from '@dhis2/analytics';\nimport { REPORT_TABLE, CHART, MAP } from '../../../../modules/itemTypes';\nexport const THEMATIC_LAYER = 'thematic';\n\nconst extractMapView = map => map.mapViews && map.mapViews.find(mv => mv.layer.includes(THEMATIC_LAYER));\n\nconst getWithoutId = object => ({ ...object,\n  id: undefined\n});\n\nconst getVisualizationConfig = (visualization, originalType, activeType) => {\n  if (originalType === MAP && originalType !== activeType) {\n    const extractedMapView = extractMapView(visualization);\n\n    if (extractedMapView === undefined) {\n      return null;\n    }\n\n    return getWithoutId({ ...visualization,\n      ...extractedMapView,\n      mapViews: undefined,\n      type: activeType === CHART ? VIS_TYPE_COLUMN : VIS_TYPE_PIVOT_TABLE\n    });\n  } else if (originalType === REPORT_TABLE && activeType === CHART) {\n    const layout = getAdaptedUiLayoutByType(visualization, VIS_TYPE_COLUMN);\n    return getWithoutId({ ...visualization,\n      ...layout,\n      type: VIS_TYPE_COLUMN\n    });\n  } else if (originalType === CHART && activeType === REPORT_TABLE) {\n    const layout = getAdaptedUiLayoutByType(visualization, VIS_TYPE_PIVOT_TABLE);\n    return getWithoutId({ ...visualization,\n      ...layout,\n      type: VIS_TYPE_PIVOT_TABLE\n    });\n  }\n\n  return getWithoutId(visualization);\n};\n\nexport default getVisualizationConfig;","// Note that this ignores discrepancies in 'this', so shouldn't be used with bound functions\n// This is useful instead of lodash/memoize when we only need to memoize a single value\n// Inspiration: https://github.com/alexreardon/memoize-one\nconst memoizeOne = fn => {\n  let lastArgs = undefined;\n  let lastValue = undefined;\n  return (...args) => {\n    if (lastArgs && args.length === lastArgs.length && args.every((arg, i) => arg === lastArgs[i])) {\n      return lastValue;\n    }\n\n    lastArgs = args;\n    lastValue = fn(...args);\n    return lastValue;\n  };\n};\n\nexport default memoizeOne;","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport VisualizationPlugin from '@dhis2/data-visualizer-plugin';\nimport i18n from '@dhis2/d2-i18n';\nimport DefaultPlugin from './DefaultPlugin';\nimport MapPlugin from './MapPlugin';\nimport LoadingMask from './LoadingMask';\nimport NoVisualizationMessage from './NoVisualizationMessage';\nimport getFilteredVisualization from './getFilteredVisualization';\nimport getVisualizationConfig from './getVisualizationConfig';\nimport { VISUALIZATION, MAP, CHART, REPORT_TABLE } from '../../../../modules/itemTypes';\nimport { getVisualizationId } from '../../../../modules/item';\nimport memoizeOne from '../../../../modules/memoizeOne';\nimport { sGetVisualization } from '../../../../reducers/visualizations';\n\nclass Visualization extends React.Component {\n  state = {\n    pluginLoaded: false\n  };\n\n  constructor(props) {\n    super(props);\n    this.memoizedGetFilteredVisualization = memoizeOne(getFilteredVisualization);\n    this.memoizedGetVisualizationConfig = memoizeOne(getVisualizationConfig);\n  }\n\n  onLoadingComplete = () => {\n    this.setState({\n      pluginLoaded: true\n    });\n  };\n\n  render() {\n    const {\n      visualization,\n      activeType,\n      item,\n      itemFilters,\n      availableHeight\n    } = this.props;\n\n    if (!visualization) {\n      return <NoVisualizationMessage message={i18n.t('No data to display')} />;\n    }\n\n    const pluginProps = {\n      item,\n      itemFilters,\n      activeType,\n      style: {\n        height: availableHeight\n      },\n      visualization: this.memoizedGetVisualizationConfig(visualization, item.type, activeType)\n    };\n\n    switch (activeType) {\n      case VISUALIZATION:\n      case CHART:\n      case REPORT_TABLE:\n        {\n          return <>\n                        {!this.state.pluginLoaded && <div style={pluginProps.style}>\n                                <LoadingMask />\n                            </div>}\n                        <VisualizationPlugin d2={this.context.d2} visualization={this.memoizedGetFilteredVisualization(pluginProps.visualization, pluginProps.itemFilters)} onLoadingComplete={this.onLoadingComplete} forDashboard={true} style={pluginProps.style} />\n                    </>;\n        }\n\n      case MAP:\n        {\n          return <MapPlugin applyFilters={this.memoizedGetFilteredVisualization} {...pluginProps} />;\n        }\n\n      default:\n        {\n          pluginProps.visualization = this.memoizedGetFilteredVisualization(pluginProps.visualization, pluginProps.itemFilters);\n          return <DefaultPlugin {...pluginProps} />;\n        }\n    }\n  }\n\n}\n\nVisualization.propTypes = {\n  activeType: PropTypes.string,\n  availableHeight: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n  item: PropTypes.object,\n  itemFilters: PropTypes.object,\n  visualization: PropTypes.object\n};\nVisualization.contextTypes = {\n  d2: PropTypes.object\n};\n\nconst mapStateToProps = (state, ownProps) => {\n  return {\n    visualization: sGetVisualization(state, getVisualizationId(ownProps.item))\n  };\n};\n\nexport default connect(mapStateToProps)(Visualization);","import React from 'react';\nimport PropTypes from 'prop-types';\nimport i18n from '@dhis2/d2-i18n';\nimport { Warning } from './assets/icons';\nimport classes from './styles/FatalErrorBoundary.module.css';\n\nclass FatalErrorBoundary extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      errorFound: false\n    };\n  }\n\n  componentDidCatch(error, info) {\n    this.setState({\n      errorFound: true\n    });\n    console.log('error: ', error);\n    console.log('info: ', info);\n  }\n\n  render() {\n    if (this.state.errorFound) {\n      return <p className={classes.container}>\n                    <span className={classes.icon}>\n                        <Warning />\n                    </span>\n                    <span className={classes.message}>\n                        {i18n.t('There was a problem loading this dashboard item')}\n                    </span>\n                </p>;\n    }\n\n    return this.props.children;\n  }\n\n}\n\nFatalErrorBoundary.propTypes = {\n  children: PropTypes.node\n};\nexport default FatalErrorBoundary;","import React from 'react';\nimport PropTypes from 'prop-types';\nimport classes from './styles/ItemHeader.module.css';\n\nconst ViewItemActions = ({\n  actionButtons\n}) => {\n  return actionButtons ? <div className={classes.itemActionsWrap}>{actionButtons}</div> : null;\n};\n\nViewItemActions.propTypes = {\n  actionButtons: PropTypes.node\n};\nexport default ViewItemActions;","import React from 'react';\nimport PropTypes from 'prop-types';\nimport i18n from '@dhis2/d2-i18n';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport { colors } from '@dhis2/ui';\nimport classes from './styles/DeleteItemButton.module.css';\n\nconst DeleteItemButton = ({\n  onClick\n}) => <button type=\"button\" className={classes.deleteItemButton} onClick={onClick} title={i18n.t(`Delete item`)}>\n        <DeleteIcon style={{\n    fill: colors.red500\n  }} />\n    </button>;\n\nDeleteItemButton.propTypes = {\n  onClick: PropTypes.func\n};\nexport default DeleteItemButton;","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport DeleteItemButton from './DeleteItemButton';\nimport { acRemoveDashboardItem } from '../../../actions/editDashboard';\nimport classes from './styles/ItemHeader.module.css';\n\nconst EditItemActions = ({\n  itemId,\n  acRemoveDashboardItem\n}) => {\n  const handleDeleteItem = () => acRemoveDashboardItem(itemId);\n\n  return <div className={classes.itemActionsWrap}>\n            <DeleteItemButton onClick={handleDeleteItem} />\n        </div>;\n};\n\nEditItemActions.propTypes = {\n  acRemoveDashboardItem: PropTypes.func,\n  itemId: PropTypes.string\n};\nconst mapDispatchToProps = {\n  acRemoveDashboardItem\n};\nexport default connect(null, mapDispatchToProps)(EditItemActions);","import React from 'react';\nimport { colors } from '@dhis2/ui';\n\nconst WarningIcon = () => <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24\" viewBox=\"0 0 24 24\" width=\"24\" fill={colors.grey600}>\n        <path d=\"M0 0h24v24H0z\" fill=\"none\" />\n        <path d=\"M12 2C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2zm1 15h-2v-6h2v6zm0-8h-2V7h2v2z\" />\n    </svg>;\n\nexport default WarningIcon;","import React from 'react';\nimport { Tooltip } from '@dhis2/ui';\nimport i18n from '@dhis2/d2-i18n';\nimport InfoIcon from '../../../icons/Info';\nimport classes from './styles/PrintItemInfo.module.css';\n\nconst PrintWarning = () => <div className={classes.warning}>\n        <Tooltip content={i18n.t('This item has been shortened to fit on one page')} placement=\"bottom\">\n            <InfoIcon />\n        </Tooltip>\n    </div>;\n\nexport default PrintWarning;","export const EDIT = 'edit';\nexport const NEW = 'new';\nexport const VIEW = 'view';\nexport const PRINT = 'print';\nexport const PRINT_LAYOUT = 'print-layout';\nexport const isEditMode = mode => [EDIT, NEW].includes(mode);\nexport const isPrintMode = mode => [PRINT, PRINT_LAYOUT].includes(mode);\nexport const isViewMode = mode => mode === VIEW;","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport ViewItemActions from './ViewItemActions';\nimport EditItemActions from './EditItemActions';\nimport PrintItemInfo from './PrintItemInfo';\nimport { VIEW, EDIT, PRINT_LAYOUT } from '../../Dashboard/dashboardModes';\nimport classes from './styles/ItemHeader.module.css';\n\nconst getItemActionsMap = isShortened => {\n  return {\n    [VIEW]: ViewItemActions,\n    [EDIT]: EditItemActions,\n    [PRINT_LAYOUT]: isShortened ? PrintItemInfo : null\n  };\n}; // This is the margin-top + margin-bottom defined in the css file\n\n\nexport const HEADER_MARGIN_HEIGHT = 12;\nconst ItemHeader = React.forwardRef(({\n  dashboardMode,\n  title,\n  isShortened,\n  ...rest\n}, ref) => {\n  const Actions = getItemActionsMap(isShortened)[dashboardMode];\n  return <div className={classes.itemHeaderWrap} ref={ref}>\n                <p className={classes.itemTitle}>{title}</p>\n                {Actions ? <Actions {...rest} /> : null}\n            </div>;\n});\nItemHeader.displayName = 'ItemHeader';\nItemHeader.propTypes = {\n  dashboardMode: PropTypes.string,\n  isShortened: PropTypes.bool,\n  title: PropTypes.string\n};\nexport default connect(null, null, null, {\n  forwardRef: true\n})(ItemHeader);","import React, { useState, createRef } from 'react';\nimport PropTypes from 'prop-types';\nimport { useConfig } from '@dhis2/app-runtime';\nimport { isSingleValue, isYearOverYear, VIS_TYPE_GAUGE, VIS_TYPE_PIE } from '@dhis2/analytics';\nimport { Button, Menu, Popover, MenuItem, Divider, colors } from '@dhis2/ui';\nimport i18n from '@dhis2/d2-i18n';\nimport TableIcon from '@material-ui/icons/ViewList';\nimport ChartIcon from '@material-ui/icons/InsertChart';\nimport MapIcon from '@material-ui/icons/Public';\nimport LaunchIcon from '@material-ui/icons/Launch';\nimport { ThreeDots, SpeechBubble, Fullscreen, ExitFullscreen } from './assets/icons';\nimport { getLink } from './Visualization/plugin';\nimport { CHART, MAP, REPORT_TABLE, EVENT_CHART, EVENT_REPORT, isTrackerDomainType, hasMapView, getAppName } from '../../../modules/itemTypes';\nconst iconFill = {\n  fill: colors.grey600\n};\n\nconst ItemHeaderButtons = props => {\n  const [menuIsOpen, setMenuIsOpen] = useState(null);\n  const {\n    baseUrl\n  } = useConfig();\n  const {\n    item,\n    visualization,\n    onSelectActiveType,\n    activeType\n  } = props;\n  const isTrackerType = isTrackerDomainType(item.type);\n\n  const onViewTable = () => {\n    closeMenu();\n    onSelectActiveType(isTrackerType ? EVENT_REPORT : REPORT_TABLE);\n  };\n\n  const onViewChart = () => {\n    closeMenu();\n    onSelectActiveType(isTrackerType ? EVENT_CHART : CHART);\n  };\n\n  const onViewMap = () => {\n    closeMenu();\n    onSelectActiveType(MAP);\n  };\n\n  const itemHasMapView = () => hasMapView(item.type);\n\n  const handleInterpretationClick = () => {\n    props.onToggleFooter();\n\n    if (menuIsOpen) {\n      closeMenu();\n    }\n  };\n\n  const handleToggleFullscreenClick = () => {\n    props.onToggleFullscreen();\n    closeMenu();\n  };\n\n  const openMenu = () => setMenuIsOpen(true);\n\n  const closeMenu = () => setMenuIsOpen(false);\n\n  const type = visualization.type || item.type;\n  const canViewAs = !isSingleValue(type) && !isYearOverYear(type) && type !== VIS_TYPE_GAUGE && type !== VIS_TYPE_PIE;\n  const interpretationMenuLabel = props.activeFooter ? i18n.t(`Hide interpretations and details`) : i18n.t(`Show interpretations and details`);\n\n  const ViewAsMenuItems = () => <>\n            {activeType !== CHART && activeType !== EVENT_CHART && <MenuItem dense label={i18n.t('View as Chart')} onClick={onViewChart} icon={<ChartIcon style={iconFill} />} />}\n            {activeType !== REPORT_TABLE && activeType !== EVENT_REPORT && <MenuItem dense label={i18n.t('View as Table')} onClick={onViewTable} icon={<TableIcon style={iconFill} />} />}\n            {itemHasMapView() && activeType !== MAP && <MenuItem dense label={i18n.t('View as Map')} onClick={onViewMap} icon={<MapIcon style={iconFill} />} />}\n        </>;\n\n  const buttonRef = createRef();\n  return props.isFullscreen ? <Button small secondary onClick={props.onToggleFullscreen}>\n            <ExitFullscreen />\n        </Button> : <>\n            <div ref={buttonRef}>\n                <Button small secondary onClick={openMenu} dataTest=\"dashboarditem-menu-button\">\n                    <ThreeDots />\n                </Button>\n            </div>\n            {menuIsOpen && <Popover reference={buttonRef} placement=\"auto-start\" arrow={false} onClickOutside={closeMenu}>\n                    <Menu>\n                        {canViewAs && <>\n                                <ViewAsMenuItems />\n                                <Divider />\n                            </>}\n                        <MenuItem dense icon={<LaunchIcon style={{\n          fill: '#6e7a8a'\n        }} />} label={i18n.t('Open in {{appName}} app', {\n          appName: getAppName(item.type)\n        })} href={getLink(item, baseUrl)} target=\"_blank\" />\n                        <MenuItem dense icon={<SpeechBubble />} label={interpretationMenuLabel} onClick={handleInterpretationClick} />\n                        {props.fullscreenSupported && <MenuItem dense icon={<Fullscreen />} label={i18n.t('View fullscreen')} onClick={handleToggleFullscreenClick} />}\n                    </Menu>\n                </Popover>}\n        </>;\n};\n\nItemHeaderButtons.propTypes = {\n  activeFooter: PropTypes.bool,\n  activeType: PropTypes.string,\n  fullscreenSupported: PropTypes.bool,\n  isFullscreen: PropTypes.bool,\n  item: PropTypes.object,\n  visualization: PropTypes.object,\n  onSelectActiveType: PropTypes.func,\n  onToggleFooter: PropTypes.func,\n  onToggleFullscreen: PropTypes.func\n};\nexport default ItemHeaderButtons;","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { getVisualizationId } from '../../../modules/item';\nimport InterpretationsComponent from '@dhis2/d2-ui-interpretations';\nimport classes from './styles/ItemFooter.module.css';\n\nconst ItemFooter = (props, context) => <div data-test=\"dashboarditem-footer\">\n        <hr className={classes.line} />\n        <div className={classes.scrollContainer}>\n            <InterpretationsComponent d2={context.d2} item={props.item} type={props.item.type.toLowerCase()} id={getVisualizationId(props.item)} appName=\"dashboard\" />\n        </div>\n    </div>;\n\nItemFooter.contextTypes = {\n  d2: PropTypes.object.isRequired\n};\nItemFooter.propTypes = {\n  item: PropTypes.object.isRequired\n};\nexport default ItemFooter;","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport uniqueId from 'lodash/uniqueId';\nimport Visualization from './Visualization/Visualization';\nimport FatalErrorBoundary from './FatalErrorBoundary';\nimport ItemHeader, { HEADER_MARGIN_HEIGHT } from '../ItemHeader/ItemHeader';\nimport ItemHeaderButtons from './ItemHeaderButtons';\nimport ItemFooter from './ItemFooter';\nimport { WindowDimensionsCtx } from '../../WindowDimensionsProvider';\nimport { apiPostDataStatistics } from '../../../api/dataStatistics';\nimport { apiFetchVisualization } from '../../../api/metadata';\nimport { sGetVisualization } from '../../../reducers/visualizations';\nimport { sGetSelectedItemActiveType } from '../../../reducers/selected';\nimport { sGetIsEditing } from '../../../reducers/editDashboard';\nimport { sGetItemFiltersRoot, DEFAULT_STATE_ITEM_FILTERS } from '../../../reducers/itemFilters';\nimport { sGatherAnalyticalObjectStatisticsInDashboardViews } from '../../../reducers/settings';\nimport { acAddVisualization } from '../../../actions/visualizations';\nimport { acSetSelectedItemActiveType } from '../../../actions/selected';\nimport { pluginIsAvailable } from './Visualization/plugin';\nimport { getDataStatisticsName } from '../../../modules/itemTypes';\nimport { getVisualizationId, getVisualizationName } from '../../../modules/item';\nimport memoizeOne from '../../../modules/memoizeOne';\nimport isSmallScreen from '../../../modules/isSmallScreen';\nimport { isEditMode, isPrintMode, isViewMode } from '../../Dashboard/dashboardModes';\nimport { getItemHeightPx } from '../../ItemGrid/gridUtil'; // this is set in the .dashboard-item-content css\n\nconst ITEM_CONTENT_PADDING_BOTTOM = 4;\nexport class Item extends Component {\n  state = {\n    showFooter: false,\n    configLoaded: false,\n    isFullscreen: false\n  };\n\n  constructor(props) {\n    super(props);\n    this.contentRef = React.createRef();\n    this.headerRef = React.createRef();\n    this.itemDomElSelector = `.reactgriditem-${this.props.item.id}`;\n    this.memoizedGetContentHeight = memoizeOne((calculatedHeight, measuredHeight, preferMeasured) => preferMeasured ? measuredHeight || calculatedHeight : calculatedHeight);\n  }\n\n  async componentDidMount() {\n    this.props.updateVisualization(await apiFetchVisualization(this.props.item));\n\n    try {\n      if (this.props.gatherDataStatistics && isViewMode(this.props.dashboardMode)) {\n        await apiPostDataStatistics(getDataStatisticsName(this.props.item.type), getVisualizationId(this.props.item));\n      }\n    } catch (e) {\n      console.log(e);\n    }\n\n    this.setState({\n      configLoaded: true\n    });\n    const el = document.querySelector(this.itemDomElSelector);\n\n    if (el?.requestFullscreen) {\n      el.onfullscreenchange = this.handleFullscreenChange;\n    } else if (el?.webkitRequestFullscreen) {\n      el.onwebkitfullscreenchange = this.handleFullscreenChange;\n    }\n  }\n\n  componentWillUnmount() {\n    const el = document.querySelector(this.itemDomElSelector);\n\n    if (el?.onfullscreenchange) {\n      el.removeEventListener('onfullscreenchange', this.handleFullscreenChange);\n    } else if (el?.onwebkitfullscreenchange) {\n      el.removeEventListener('onwebkitfullscreenchange', this.handleFullscreenChange);\n    }\n  }\n\n  isFullscreenSupported = () => {\n    const el = document.querySelector(this.itemDomElSelector);\n    return !!(el?.requestFullscreen || el?.webkitRequestFullscreen);\n  };\n  handleFullscreenChange = () => {\n    this.setState({\n      isFullscreen: !!document.fullscreenElement || !!document.webkitFullscreenElement\n    });\n  };\n  onToggleFullscreen = () => {\n    if (!this.state.isFullscreen) {\n      const el = document.querySelector(this.itemDomElSelector);\n\n      if (el?.requestFullscreen) {\n        el.requestFullscreen();\n      } else if (el?.webkitRequestFullscreen) {\n        el.webkitRequestFullscreen();\n      }\n    } else {\n      document.exitFullscreen ? document.exitFullscreen() : document.webkitExitFullscreen();\n    }\n  };\n  getUniqueKey = memoizeOne(() => uniqueId());\n  onToggleFooter = () => {\n    this.setState({\n      showFooter: !this.state.showFooter\n    }, this.props.onToggleItemExpanded(this.props.item.id));\n  };\n  setActiveType = type => {\n    type !== this.getActiveType() && this.props.setActiveType(this.props.item.id, type);\n  };\n  getActiveType = () => {\n    if (this.props.isEditing) {\n      return this.props.item.type;\n    }\n\n    return this.props.activeType || this.props.item.type;\n  };\n  getAvailableHeight = () => {\n    if (this.state.isFullscreen) {\n      return '95vh';\n    }\n\n    const {\n      width\n    } = this.context;\n    const calculatedHeight = getItemHeightPx(this.props.item, isSmallScreen(width)) - this.headerRef.current.clientHeight - HEADER_MARGIN_HEIGHT - ITEM_CONTENT_PADDING_BOTTOM;\n    return this.memoizedGetContentHeight(calculatedHeight, this.contentRef ? this.contentRef.offsetHeight : null, isEditMode(this.props.dashboardMode) || isPrintMode(this.props.dashboardMode));\n  };\n\n  render() {\n    const {\n      item,\n      dashboardMode,\n      itemFilters\n    } = this.props;\n    const {\n      showFooter\n    } = this.state;\n    const activeType = this.getActiveType();\n    const actionButtons = pluginIsAvailable(activeType || item.type) ? <ItemHeaderButtons item={item} visualization={this.props.visualization} onSelectActiveType={this.setActiveType} onToggleFooter={this.onToggleFooter} onToggleFullscreen={this.onToggleFullscreen} activeType={activeType} activeFooter={showFooter} isFullscreen={this.state.isFullscreen} fullscreenSupported={this.isFullscreenSupported()} /> : null;\n    return <>\n                <ItemHeader title={getVisualizationName(item)} itemId={item.id} actionButtons={actionButtons} ref={this.headerRef} dashboardMode={dashboardMode} isShortened={item.shortened} />\n                <FatalErrorBoundary>\n                    <div key={this.getUniqueKey(itemFilters)} className=\"dashboard-item-content\" ref={ref => this.contentRef = ref}>\n                        {this.state.configLoaded && <Visualization item={item} activeType={activeType} itemFilters={itemFilters} availableHeight={this.getAvailableHeight()} />}\n                    </div>\n                </FatalErrorBoundary>\n                {isViewMode(dashboardMode) && showFooter ? <ItemFooter item={item} /> : null}\n            </>;\n  }\n\n}\nItem.contextType = WindowDimensionsCtx;\nItem.propTypes = {\n  activeType: PropTypes.string,\n  dashboardMode: PropTypes.string,\n  gatherDataStatistics: PropTypes.bool,\n  isEditing: PropTypes.bool,\n  item: PropTypes.object,\n  itemFilters: PropTypes.object,\n  setActiveType: PropTypes.func,\n  updateVisualization: PropTypes.func,\n  visualization: PropTypes.object,\n  onToggleItemExpanded: PropTypes.func\n};\nItem.defaultProps = {\n  item: {},\n  onToggleItemExpanded: Function.prototype,\n  visualization: {}\n};\n\nconst mapStateToProps = (state, ownProps) => {\n  const itemFilters = !isEditMode(ownProps.dashboardMode) ? sGetItemFiltersRoot(state) : DEFAULT_STATE_ITEM_FILTERS;\n  return {\n    activeType: sGetSelectedItemActiveType(state, ownProps.item?.id),\n    isEditing: sGetIsEditing(state),\n    itemFilters,\n    visualization: sGetVisualization(state, getVisualizationId(ownProps.item)),\n    gatherDataStatistics: sGatherAnalyticalObjectStatisticsInDashboardViews(state)\n  };\n};\n\nconst mapDispatchToProps = {\n  setActiveType: acSetSelectedItemActiveType,\n  updateVisualization: acAddVisualization\n};\nexport default connect(mapStateToProps, mapDispatchToProps)(Item);","import React from 'react';\nimport { colors } from '@dhis2/ui';\nconst style = {\n  backgroundColor: colors.grey200,\n  border: 'none',\n  height: '1px',\n  margin: '0px 0px 5px 0px'\n};\n\nconst Line = () => <hr style={style} />;\n\nexport default Line;","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport i18n from '@dhis2/d2-i18n';\nimport { colors } from '@dhis2/ui';\nimport ItemHeader from '../ItemHeader/ItemHeader';\nimport Line from '../../../widgets/Line';\nimport { sGetMessagesRoot } from '../../../reducers/messages';\nimport { formatDate } from '../../../modules/util';\nimport { isViewMode } from '../../Dashboard/dashboardModes';\nimport './MessagesItem.css';\nconst PRIVATE = 'PRIVATE';\nconst messageTypes = {\n  [PRIVATE]: 'Private',\n  VALIDATION_RESULT: 'Validation',\n  TICKET: 'Ticket',\n  SYSTEM: 'System'\n};\nconst style = {\n  list: {\n    listStyleType: 'none',\n    paddingLeft: '0px'\n  },\n  seeAll: {\n    textAlign: 'center',\n    fontSize: '13px',\n    marginBottom: '5px'\n  },\n  sender: {\n    fontSize: '13px',\n    lineHeight: '15px',\n    margin: 0,\n    color: colors.grey800\n  },\n  snippet: {\n    color: colors.grey800,\n    fontSize: '13px',\n    lineHeight: '15px',\n    maxHeight: '30px',\n    overflow: 'hidden'\n  }\n};\n\nclass MessagesItem extends Component {\n  state = {\n    uiLocale: ''\n  };\n\n  async componentDidMount() {\n    const uiLocale = await this.context.d2.currentUser.userSettings.get('keyUiLocale');\n    this.setState({\n      uiLocale\n    });\n  }\n\n  getMessageHref = msg => {\n    const msgIdentifier = msg ? `#/${msg.messageType}/${msg.id}` : '';\n    return `${this.context.baseUrl}/dhis-web-messaging/${msgIdentifier}`;\n  };\n  getMessageSender = msg => {\n    const latestMsg = msg.messages.slice(-1)[0];\n    return latestMsg.sender ? latestMsg.sender.displayName : '';\n  };\n  getMessageItems = () => {\n    const modeClass = isViewMode(this.props.dashboardMode) ? 'view' : null;\n    return this.props.messages.map(msg => {\n      const redirectToMsg = () => {\n        if (isViewMode(this.props.dashboardMode)) {\n          document.location.href = this.getMessageHref(msg);\n        }\n      };\n\n      const sender = msg.messageType === PRIVATE ? this.getMessageSender(msg) : messageTypes[msg.messageType];\n      const readClass = !msg.read ? 'unread' : null;\n      const latestMsg = msg.messages.slice(-1)[0];\n      const msgDate = latestMsg.lastUpdated;\n      return <li className={`message-item ${modeClass}`} key={msg.id} onClick={redirectToMsg}>\n                    <p className={`message-title ${readClass}`}>\n                        {msg.displayName} ({msg.messageCount})\n                    </p>\n                    <p style={style.sender}>\n                        {sender} - {formatDate(msgDate, this.state.uiLocale)}\n                    </p>\n                    <p style={style.snippet}>{latestMsg.text}</p>\n                </li>;\n    });\n  };\n\n  render() {\n    return <>\n                <ItemHeader title={i18n.t('Messages')} itemId={this.props.item.id} dashboardMode={this.props.dashboardMode} isShortened={this.props.item.shortened} />\n                <Line />\n                {this.props.messages.length > 0 && <div className=\"dashboard-item-content\">\n                        <ul style={style.list}>{this.getMessageItems()}</ul>\n                        <div style={style.seeAll}>\n                            <a href={this.getMessageHref()}>\n                                {i18n.t('See all messages')}\n                            </a>\n                        </div>\n                    </div>}\n            </>;\n  }\n\n}\n\nMessagesItem.propTypes = {\n  dashboardMode: PropTypes.string,\n  item: PropTypes.object,\n  messages: PropTypes.array\n};\nMessagesItem.contextTypes = {\n  d2: PropTypes.object,\n  baseUrl: PropTypes.string\n};\n\nconst mapStateToProps = state => {\n  return {\n    messages: Object.values(sGetMessagesRoot(state))\n  };\n};\n\nconst MessagesContainer = connect(mapStateToProps, null)(MessagesItem);\nexport default MessagesContainer;","import React from 'react';\nimport PropTypes from 'prop-types';\nimport i18n from '@dhis2/d2-i18n';\nimport ItemHeader from '../ItemHeader/ItemHeader';\nimport NotInterestedIcon from '@material-ui/icons/NotInterested';\n\nconst NotSupportedItem = props => <>\n        <ItemHeader title={i18n.t('Item type \"{{type}}\" not supported', {\n    type: props.item.type\n  })} itemId={props.item.id} dashboardMode={props.dashboardMode} isShortened={props.item.shortened} />\n        <div style={{\n    display: 'flex',\n    justifyContent: 'center',\n    alignItems: 'center',\n    height: '90%'\n  }}>\n            <NotInterestedIcon style={{\n      width: 100,\n      height: 100,\n      align: 'center'\n    }} color=\"disabled\" />\n        </div>\n    </>;\n\nNotSupportedItem.propTypes = {\n  dashboardMode: PropTypes.string,\n  item: PropTypes.object\n};\nexport default NotSupportedItem;","import React from 'react';\nimport { colors } from '@dhis2/ui';\nimport PropTypes from 'prop-types';\n\nconst DescriptionIcon = ({\n  className\n}) => <svg className={className} xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\" fill={colors.grey500}>\n        <path d=\"M0 0h24v24H0z\" fill=\"none\" />\n        <path d=\"M14 2H6c-1.1 0-1.99.9-1.99 2L4 20c0 1.1.89 2 1.99 2H18c1.1 0 2-.9 2-2V8l-6-6zm2 16H8v-2h8v2zm0-4H8v-2h8v2zm-3-5V3.5L18.5 9H13z\" />\n    </svg>;\n\nDescriptionIcon.propTypes = {\n  className: PropTypes.string\n};\nexport default DescriptionIcon;","import React from 'react';\nimport { colors } from '@dhis2/ui';\nimport PropTypes from 'prop-types';\n\nconst DeleteIcon = ({\n  className\n}) => <svg className={className} xmlns=\"http://www.w3.org/2000/svg\" width=\"18\" height=\"18\" viewBox=\"0 0 24 24\" fill={colors.red500}>\n        <path d=\"M6 19c0 1.1.9 2 2 2h8c1.1 0 2-.9 2-2V7H6v12zM19 4h-3.5l-1-1h-5l-1 1H5v2h14V4z\" />\n        <path d=\"M0 0h24v24H0z\" fill=\"none\" />\n    </svg>;\n\nDeleteIcon.propTypes = {\n  className: PropTypes.string\n};\nexport default DeleteIcon;","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { colors } from '@dhis2/ui';\nimport DescriptionIcon from '../../../icons/Description';\nimport DeleteIcon from '../../../icons/Delete';\nimport Line from '../../../widgets/Line';\nimport { itemTypeMap, getItemUrl } from '../../../modules/itemTypes';\nimport { orArray } from '../../../modules/util';\nimport { tRemoveListItemContent } from './actions';\nimport ItemHeader from '../ItemHeader/ItemHeader';\nimport { isEditMode } from '../../Dashboard/dashboardModes';\nimport classes from './Item.module.css';\n\nconst getItemTitle = item => itemTypeMap[item.type].pluralTitle;\n\nconst getContentItems = item => orArray(item[itemTypeMap[item.type].propName]).filter((item, index, array) => array.findIndex(el => el.id === item.id) === index);\n\nconst ListItem = (props, context) => {\n  const {\n    item,\n    dashboardMode,\n    tRemoveListItemContent\n  } = props;\n  const contentItems = getContentItems(item);\n\n  const getLink = contentItem => {\n    const deleteButton = <button className={classes.deletebutton} onClick={() => tRemoveListItemContent(item, contentItem)}>\n                <DeleteIcon className={classes.deleteicon} />\n            </button>;\n    return <>\n                <a className={classes.link} style={{\n        color: colors.grey900\n      }} href={getItemUrl(item.type, contentItem, context.d2)}>\n                    {contentItem.name}\n                </a>\n                {isEditMode(dashboardMode) ? deleteButton : null}\n            </>;\n  };\n\n  return <>\n            <ItemHeader title={getItemTitle(item)} itemId={item.id} dashboardMode={dashboardMode} isShortened={item.shortened} />\n            <Line />\n            <div className=\"dashboard-item-content\">\n                <ul className={classes.list}>\n                    {contentItems.map(contentItem => <li className={classes.item} key={contentItem.id}>\n                            <DescriptionIcon className={classes.itemicon} />\n                            {getLink(contentItem)}\n                        </li>)}\n                </ul>\n            </div>\n        </>;\n};\n\nListItem.propTypes = {\n  dashboardMode: PropTypes.string,\n  item: PropTypes.object,\n  tRemoveListItemContent: PropTypes.func\n};\nListItem.contextTypes = {\n  d2: PropTypes.object\n};\nexport default connect(null, {\n  tRemoveListItemContent\n})(ListItem);","import { acUpdateDashboardItem, acRemoveDashboardItem } from '../../../actions/editDashboard';\nimport { itemTypeMap } from '../../../modules/itemTypes';\nexport const tRemoveListItemContent = (dashboardItem, content) => dispatch => {\n  const listItemType = itemTypeMap[dashboardItem.type].propName;\n  const newContent = dashboardItem[listItemType].filter(item => item.id !== content.id);\n\n  if (newContent.length) {\n    dashboardItem[listItemType] = newContent;\n    dispatch(acUpdateDashboardItem(dashboardItem));\n  } else {\n    dispatch(acRemoveDashboardItem(dashboardItem));\n  }\n};","/** @module reducers/editDashboard */\nimport update from 'immutability-helper';\nimport isEmpty from 'lodash/isEmpty';\nimport { orArray } from '../modules/util';\nexport const SET_PRINT_DASHBOARD = 'SET_PRINT_DASHBOARD';\nexport const CLEAR_PRINT_DASHBOARD = 'CLEAR_PRINT_DASHBOARD';\nexport const ADD_PRINT_DASHBOARD_ITEM = 'ADD_PRINT_DASHBOARD_ITEM';\nexport const SET_PRINT_DASHBOARD_LAYOUT = 'SET_PRINT_DASHBOARD_LAYOUT';\nexport const REMOVE_PRINT_DASHBOARD_ITEM = 'REMOVE_PRINT_DASHBOARD_ITEM';\nexport const UPDATE_PRINT_DASHBOARD_ITEM = 'UPDATE_PRINT_DASHBOARD_ITEM';\nexport const DEFAULT_STATE_PRINT_DASHBOARD = {};\nconst DEFAULT_DASHBOARD_ITEMS = [];\nexport const NEW_PRINT_DASHBOARD_STATE = {\n  id: '',\n  name: '',\n  access: {},\n  description: '',\n  dashboardItems: DEFAULT_DASHBOARD_ITEMS\n};\nexport default ((state = DEFAULT_STATE_PRINT_DASHBOARD, action) => {\n  switch (action.type) {\n    case SET_PRINT_DASHBOARD:\n      {\n        const newState = {};\n        Object.keys(NEW_PRINT_DASHBOARD_STATE).map(k => newState[k] = action.value[k]);\n        return newState;\n      }\n\n    case CLEAR_PRINT_DASHBOARD:\n      return DEFAULT_STATE_PRINT_DASHBOARD;\n\n    case ADD_PRINT_DASHBOARD_ITEM:\n      if (!action.value.position) {\n        return update(state, {\n          dashboardItems: {\n            $unshift: [action.value]\n          }\n        });\n      }\n\n      return update(state, {\n        dashboardItems: {\n          $splice: [[parseInt(action.value.position), 0, action.value]]\n        }\n      });\n\n    case REMOVE_PRINT_DASHBOARD_ITEM:\n      {\n        const idToRemove = action.value;\n        const dashboardItemIndex = state.dashboardItems.findIndex(item => item.id === idToRemove);\n\n        if (dashboardItemIndex > -1) {\n          return update(state, {\n            dashboardItems: {\n              $splice: [[dashboardItemIndex, 1]]\n            }\n          });\n        }\n\n        return state;\n      }\n\n    case UPDATE_PRINT_DASHBOARD_ITEM:\n      {\n        const dashboardItem = action.value;\n        const dashboardItemIndex = state.dashboardItems.findIndex(item => item.id === dashboardItem.id);\n\n        if (dashboardItemIndex > -1) {\n          const newState = update(state, {\n            dashboardItems: {\n              $splice: [[dashboardItemIndex, 1, Object.assign({}, dashboardItem)]]\n            }\n          });\n          return newState;\n        }\n\n        return state;\n      }\n\n    case SET_PRINT_DASHBOARD_LAYOUT:\n      {\n        const stateItems = orArray(state.dashboardItems);\n        let layoutHasChanged = false;\n        const newStateItems = action.value.map(({\n          x,\n          y,\n          w,\n          h,\n          i\n        }) => {\n          const stateItem = stateItems.find(si => si.id === i);\n\n          if (!(stateItem.x === x && stateItem.y === y && stateItem.w === w && stateItem.h === h)) {\n            layoutHasChanged = true;\n            return Object.assign({}, stateItem, {\n              w,\n              h,\n              x,\n              y\n            });\n          }\n\n          return stateItem;\n        });\n        return layoutHasChanged ? { ...state,\n          dashboardItems: newStateItems\n        } : state;\n      }\n\n    default:\n      return state;\n  }\n}); // root selector\n\nexport const sGetPrintDashboardRoot = state => state.printDashboard; // selectors\n\nexport const sGetIsPrinting = state => !isEmpty(state.printDashboard);\nexport const sGetPrintDashboardName = state => sGetPrintDashboardRoot(state).name;\nexport const sGetPrintDashboardDescription = state => sGetPrintDashboardRoot(state).description;\nexport const sGetPrintDashboardItems = state => {\n  return sGetPrintDashboardRoot(state)?.dashboardItems || DEFAULT_DASHBOARD_ITEMS;\n};","import React from 'react';\nimport { connect } from 'react-redux';\nimport i18n from '@dhis2/d2-i18n';\nimport PropTypes from 'prop-types';\nimport Input from '@material-ui/core/Input';\nimport ItemHeader from '../ItemHeader/ItemHeader';\nimport PrintItemInfo from '../ItemHeader/PrintItemInfo';\nimport Line from '../../../widgets/Line';\nimport { Parser as RichTextParser, Editor as RichTextEditor } from '@dhis2/d2-ui-rich-text';\nimport { acUpdateDashboardItem } from '../../../actions/editDashboard';\nimport { sGetEditDashboardItems } from '../../../reducers/editDashboard';\nimport { sGetDashboardItems } from '../../../reducers/dashboards';\nimport { sGetIsPrinting, sGetPrintDashboardItems } from '../../../reducers/printDashboard';\nimport { isEditMode, PRINT_LAYOUT } from '../../Dashboard/dashboardModes';\nconst style = {\n  textDiv: {\n    padding: '10px',\n    whiteSpace: 'pre-line',\n    lineHeight: '20px'\n  },\n  textField: {\n    fontSize: '14px',\n    fontStretch: 'normal',\n    width: '90%',\n    margin: '0 auto',\n    display: 'block',\n    lineHeight: '24px'\n  },\n  container: {\n    marginBottom: '20px',\n    marginTop: '20px'\n  }\n};\n\nconst TextItem = props => {\n  const {\n    item,\n    dashboardMode,\n    text,\n    acUpdateDashboardItem\n  } = props;\n\n  const onChangeText = event => {\n    const updatedItem = { ...item,\n      text: event.target.value\n    };\n    acUpdateDashboardItem(updatedItem);\n  };\n\n  const viewItem = () => {\n    const textDivStyle = Object.assign({}, style.textField, style.textDiv);\n    return <div className=\"dashboard-item-content\" style={style.container}>\n                <RichTextParser style={textDivStyle}>{text}</RichTextParser>\n            </div>;\n  };\n\n  const editItem = () => {\n    return <>\n                <ItemHeader title={i18n.t('Text item')} itemId={item.id} dashboardMode={dashboardMode} />\n                <Line />\n                <div className=\"dashboard-item-content\">\n                    <RichTextEditor onEdit={onChangeText}>\n                        <Input value={text} multiline fullWidth style={style.textField} placeholder={i18n.t('Add text here')} onChange={onChangeText} />\n                    </RichTextEditor>\n                </div>\n            </>;\n  };\n\n  const printItem = () => {\n    const textDivStyle = Object.assign({}, style.textField, style.textDiv);\n    return <>\n                {props.item.shortened ? <PrintItemInfo /> : null}\n                <div className=\"dashboard-item-content\" style={style.container}>\n                    <RichTextParser style={textDivStyle}>{text}</RichTextParser>\n                </div>\n            </>;\n  };\n\n  let textItem;\n\n  if (isEditMode(dashboardMode)) {\n    textItem = editItem;\n  } else if (dashboardMode === PRINT_LAYOUT) {\n    textItem = printItem;\n  } else {\n    textItem = viewItem;\n  }\n\n  return <>{textItem()}</>;\n};\n\nconst mapStateToProps = (state, ownProps) => {\n  const isPrintPreview = sGetIsPrinting(state);\n  let items;\n\n  if (isPrintPreview) {\n    items = sGetPrintDashboardItems(state);\n  } else if (isEditMode(ownProps.dashboardMode)) {\n    items = sGetEditDashboardItems(state);\n  } else {\n    items = sGetDashboardItems(state);\n  }\n\n  const item = items.find(item => item.id === ownProps.item.id);\n  return {\n    text: item ? item.text : ''\n  };\n};\n\nTextItem.propTypes = {\n  acUpdateDashboardItem: PropTypes.func,\n  dashboardMode: PropTypes.string,\n  item: PropTypes.object,\n  text: PropTypes.string\n};\nexport default connect(mapStateToProps, {\n  acUpdateDashboardItem\n})(TextItem);","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport NotInterestedIcon from '@material-ui/icons/NotInterested';\nimport ItemHeader from '../ItemHeader/ItemHeader';\nimport Line from '../../../widgets/Line';\nimport { FILTER_ORG_UNIT } from '../../../actions/itemFilters';\nimport { sGetItemFiltersRoot, DEFAULT_STATE_ITEM_FILTERS } from '../../../reducers/itemFilters';\nimport { EDIT, isEditMode } from '../../Dashboard/dashboardModes';\n\nconst getIframeSrc = (appDetails, item, itemFilters) => {\n  let iframeSrc = `${appDetails.launchUrl}?dashboardItemId=${item.id}`;\n\n  if (itemFilters[FILTER_ORG_UNIT] && itemFilters[FILTER_ORG_UNIT].length) {\n    const ouIds = itemFilters[FILTER_ORG_UNIT].map(ouFilter => ouFilter.path.split('/').slice(-1)[0]);\n    iframeSrc += `&userOrgUnit=${ouIds.join(',')}`;\n  }\n\n  return iframeSrc;\n};\n\nconst AppItem = ({\n  dashboardMode,\n  item,\n  itemFilters\n}, context) => {\n  let appDetails;\n  const appKey = item.appKey;\n\n  if (appKey) {\n    appDetails = context.d2.system.installedApps.find(app => app.key === appKey);\n  }\n\n  const hideTitle = appDetails?.settings?.dashboardWidget?.hideTitle && dashboardMode !== EDIT;\n  return appDetails && appDetails.name && appDetails.launchUrl ? <>\n            {!hideTitle && <>\n                    <ItemHeader title={appDetails.name} itemId={item.id} dashboardMode={dashboardMode} isShortened={item.shortened} />\n                    <Line />\n                </>}\n            <iframe title={appDetails.name} src={getIframeSrc(appDetails, item, itemFilters)} className={!hideTitle ? 'dashboard-item-content' : 'dashboard-item-content-hidden-title'} style={{\n      border: 'none'\n    }} />\n        </> : <>\n            <ItemHeader title={`${appKey} app not found`} />\n            <Line />\n            <div className=\"dashboard-item-content\" style={{\n      display: 'flex',\n      justifyContent: 'center',\n      alignItems: 'center',\n      height: '90%'\n    }}>\n                <NotInterestedIcon color=\"disabled\" disabled style={{\n        width: 100,\n        height: 100,\n        align: 'center'\n      }} />\n            </div>\n        </>;\n};\n\nAppItem.propTypes = {\n  dashboardMode: PropTypes.string,\n  item: PropTypes.object,\n  itemFilters: PropTypes.object\n};\nAppItem.contextTypes = {\n  d2: PropTypes.object\n};\n\nconst mapStateToProps = (state, ownProps) => {\n  const itemFilters = !isEditMode(ownProps.dashboardMode) ? sGetItemFiltersRoot(state) : DEFAULT_STATE_ITEM_FILTERS;\n  return {\n    itemFilters\n  };\n};\n\nexport default connect(mapStateToProps)(AppItem);","import React from 'react';\nimport PropTypes from 'prop-types';\nimport i18n from '@dhis2/d2-i18n';\nimport { colors } from '@dhis2/ui';\nimport ItemHeader from '../ItemHeader/ItemHeader';\nconst style = {\n  margin: '21px 28px',\n  fontSize: '14px',\n  lineHeight: '18px',\n  color: colors.grey600\n};\n\nconst SpacerItem = props => {\n  return <>\n            <ItemHeader title={i18n.t('Spacer')} itemId={props.item.id} dashboardMode={props.dashboardMode} isShortened={props.item.shortened} />\n            <p style={style}>\n                {i18n.t('Use a spacer to create empty vertical space between other dashboard items.')}\n            </p>\n        </>;\n};\n\nSpacerItem.propTypes = {\n  dashboardMode: PropTypes.string,\n  item: PropTypes.object\n};\nexport default SpacerItem;","import React from 'react';\n\nconst PageBreakItem = () => <div />;\n\nexport default PageBreakItem;","import React from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport i18n from '@dhis2/d2-i18n';\nimport { sGetSelectedId, sGetSelectedShowDescription } from '../../../reducers/selected';\nimport { sGetDashboardById, EMPTY_DASHBOARD } from '../../../reducers/dashboards';\nimport { sGetNamedItemFilters } from '../../../reducers/itemFilters';\nimport { sGetIsEditing } from '../../../reducers/editDashboard';\nimport { sGetPrintDashboardName, sGetPrintDashboardDescription } from '../../../reducers/printDashboard';\nimport classes from './styles/Item.module.css';\n\nconst PrintTitlePageItem = ({\n  name,\n  description,\n  itemFilters,\n  showDescription\n}) => {\n  const getItemFilterList = () => {\n    const listItems = itemFilters.map(({\n      name,\n      values\n    }) => <li className={classes.filterListItem} key={name}>\n                {name}: {values.map(val => val.name).join(', ')}\n            </li>);\n    return <ul className={classes.filterList}>{listItems}</ul>;\n  };\n\n  return <div className={classes.titlePage}>\n            <p className={classes.name}>{name}</p>\n            {showDescription && description && <p className={classes.description}>{description}</p>}\n            {itemFilters.length > 0 && <>\n                    <p className={classes.filterTitle}>\n                        {i18n.t('Filters applied')}\n                    </p>\n                    {getItemFilterList()}\n                </>}\n        </div>;\n};\n\nPrintTitlePageItem.propTypes = {\n  description: PropTypes.string,\n  itemFilters: PropTypes.array,\n  name: PropTypes.string,\n  showDescription: PropTypes.bool\n};\nPrintTitlePageItem.defaultProps = {\n  description: '',\n  name: '',\n  showDescription: false\n};\n\nconst mapStateToProps = state => {\n  const id = sGetSelectedId(state);\n  const isEditMode = sGetIsEditing(state);\n  const viewDashboard = sGetDashboardById(state, id) || EMPTY_DASHBOARD;\n  const name = isEditMode ? sGetPrintDashboardName(state) || i18n.t('Untitled dashboard') : viewDashboard.displayName;\n  const description = isEditMode ? sGetPrintDashboardDescription(state) : viewDashboard.displayDescription;\n  return {\n    name,\n    description,\n    itemFilters: sGetNamedItemFilters(state),\n    showDescription: sGetSelectedShowDescription(state)\n  };\n};\n\nexport default connect(mapStateToProps)(PrintTitlePageItem);","import React from 'react';\nimport PropTypes from 'prop-types';\nimport VisualizationItem from './VisualizationItem/Item';\nimport MessagesItem from './MessagesItem/Item';\nimport NotSupportedItem from './NotSupportedItem/Item';\nimport ListItem from './ListItem/Item';\nimport TextItem from './TextItem/Item';\nimport AppItem from './AppItem/Item';\nimport SpacerItem from './SpacerItem/Item';\nimport PageBreakItem from './PageBreakItem/Item';\nimport PrintTitlePageItem from './PrintTitlePageItem/Item';\nimport { APP, VISUALIZATION, REPORT_TABLE, CHART, MAP, EVENT_CHART, EVENT_REPORT, MESSAGES, REPORTS, RESOURCES, USERS, TEXT, SPACER, PAGEBREAK, PRINT_TITLE_PAGE } from '../../modules/itemTypes';\n\nconst getGridItem = type => {\n  switch (type) {\n    case VISUALIZATION:\n    case REPORT_TABLE:\n    case CHART:\n    case MAP:\n    case EVENT_CHART:\n    case EVENT_REPORT:\n      return VisualizationItem;\n\n    case MESSAGES:\n      return MessagesItem;\n\n    case REPORTS:\n    case RESOURCES:\n    case USERS:\n      return ListItem;\n\n    case TEXT:\n      return TextItem;\n\n    case SPACER:\n      return SpacerItem;\n\n    case APP:\n      return AppItem;\n\n    case PAGEBREAK:\n      return PageBreakItem;\n\n    case PRINT_TITLE_PAGE:\n      return PrintTitlePageItem;\n\n    default:\n      return NotSupportedItem;\n  }\n};\n\nexport const Item = props => {\n  const GridItem = getGridItem(props.item.type);\n  return <GridItem item={props.item} dashboardMode={props.dashboardMode} onToggleItemExpanded={props.onToggleItemExpanded} />;\n};\nItem.propTypes = {\n  dashboardMode: PropTypes.string,\n  item: PropTypes.object,\n  onToggleItemExpanded: PropTypes.func\n};","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport debounce from 'lodash/debounce';\nimport pick from 'lodash/pick';\nconst defaultDebounceMs = 100;\nconst defaultBufferFactor = 0.25;\n\nclass ProgressiveLoadingContainer extends Component {\n  static propTypes = {\n    children: PropTypes.node.isRequired,\n    bufferFactor: PropTypes.number,\n    className: PropTypes.string,\n    debounceMs: PropTypes.number,\n    style: PropTypes.object\n  };\n  static defaultProps = {\n    debounceMs: defaultDebounceMs,\n    bufferFactor: defaultBufferFactor\n  };\n  state = {\n    shouldLoad: false\n  };\n  containerRef = null;\n  shouldLoadHandler = null;\n  handlerOptions = {\n    passive: true\n  };\n\n  checkShouldLoad() {\n    if (!this.containerRef) {\n      return;\n    }\n\n    const bufferPx = this.props.bufferFactor * window.innerHeight;\n    const rect = this.containerRef.getBoundingClientRect();\n\n    if (rect.bottom > -bufferPx && rect.top < window.innerHeight + bufferPx) {\n      this.setState({\n        shouldLoad: true\n      });\n      this.removeHandler();\n    }\n  }\n\n  registerHandler() {\n    this.shouldLoadHandler = debounce(() => this.checkShouldLoad(), this.props.debounceMs);\n    document.getElementsByClassName('dashboard-wrapper')[0]?.addEventListener('scroll', this.shouldLoadHandler, this.handlerOptions);\n  }\n\n  removeHandler() {\n    document.getElementsByClassName('dashboard-wrapper')[0]?.removeEventListener('scroll', this.shouldLoadHandler, this.handlerOptions);\n  }\n\n  componentDidMount() {\n    this.registerHandler();\n    this.checkShouldLoad();\n  }\n\n  componentWillUnmount() {\n    this.removeHandler();\n  }\n\n  render() {\n    const {\n      children,\n      className,\n      style,\n      ...props\n    } = this.props;\n    const {\n      shouldLoad\n    } = this.state;\n    const eventProps = pick(props, ['onMouseDown', 'onTouchStart', 'onMouseUp', 'onTouchEnd']);\n    return <div ref={ref => this.containerRef = ref} style={style} className={className} data-test={`dashboarditem-${props.itemId}`} {...eventProps}>\n                {shouldLoad && children}\n            </div>;\n  }\n\n}\n\nexport default ProgressiveLoadingContainer;","import React, { useState, useEffect } from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport i18n from '@dhis2/d2-i18n';\nimport cx from 'classnames';\nimport { Responsive as ResponsiveReactGridLayout } from 'react-grid-layout';\nimport { Layer, CenteredContent, CircularLoader } from '@dhis2/ui';\nimport { useWindowDimensions } from '../WindowDimensionsProvider';\nimport { Item } from '../Item/Item';\nimport { GRID_ROW_HEIGHT, SM_SCREEN_GRID_COLUMNS, GRID_COMPACT_TYPE, MARGIN, hasShape, getGridColumns, getSmallLayout } from './gridUtil';\nimport { orArray } from '../../modules/util';\nimport NoContentMessage from '../../widgets/NoContentMessage';\nimport { sGetSelectedId, sGetSelectedIsLoading } from '../../reducers/selected';\nimport { sGetDashboardById, sGetDashboardItems } from '../../reducers/dashboards';\nimport ProgressiveLoadingContainer from '../Item/ProgressiveLoadingContainer';\nimport { VIEW } from '../Dashboard/dashboardModes';\nimport 'react-grid-layout/css/styles.css';\nimport 'react-resizable/css/styles.css';\nimport './styles/ItemGrid.css';\nimport classes from './styles/ViewItemGrid.module.css';\nconst EXPANDED_HEIGHT = 17;\nconst SMALL_SCREEN_BREAKPOINT = 480;\nconst SCROLLBAR_WIDTH = 8; // sum of left+right margin of the dashboard wrapper\n\nconst DASHBOARD_WRAPPER_LR_MARGIN = 20;\n\nconst ResponsiveItemGrid = ({\n  isLoading,\n  dashboardItems\n}) => {\n  const [expandedItems, setExpandedItems] = useState({});\n  const [displayItems, setDisplayItems] = useState(dashboardItems);\n  const [layoutSm, setLayoutSm] = useState(getSmallLayout(dashboardItems));\n  const {\n    width\n  } = useWindowDimensions();\n  useEffect(() => {\n    setDisplayItems(dashboardItems.map(adjustHeightForExpanded));\n    setLayoutSm(getSmallLayout(dashboardItems));\n  }, [expandedItems, dashboardItems]);\n\n  const onToggleItemExpanded = clickedId => {\n    const isExpanded = typeof expandedItems[clickedId] === 'boolean' ? expandedItems[clickedId] : false;\n    const newExpandedItems = { ...expandedItems\n    };\n    newExpandedItems[clickedId] = !isExpanded;\n    setExpandedItems(newExpandedItems);\n  };\n\n  const adjustHeightForExpanded = dashboardItem => {\n    const expandedItem = expandedItems[dashboardItem.id];\n\n    if (expandedItem && expandedItem === true) {\n      return Object.assign({}, dashboardItem, {\n        h: dashboardItem.h + EXPANDED_HEIGHT\n      });\n    }\n\n    return dashboardItem;\n  };\n\n  const getItemComponent = item => <ProgressiveLoadingContainer key={item.i} className={cx(item.type, 'view', `reactgriditem-${item.id}`)} itemId={item.id}>\n            <Item item={item} dashboardMode={VIEW} onToggleItemExpanded={onToggleItemExpanded} />\n        </ProgressiveLoadingContainer>;\n\n  const getItemComponents = items => items.map(item => getItemComponent(item));\n\n  if (!isLoading && !dashboardItems.length) {\n    return <NoContentMessage text={i18n.t('There are no items on this dashboard')} />;\n  }\n\n  return <div className={classes.gridContainer}>\n            {isLoading ? <Layer translucent>\n                    <CenteredContent>\n                        <CircularLoader />\n                    </CenteredContent>\n                </Layer> : null}\n            <ResponsiveReactGridLayout rowHeight={GRID_ROW_HEIGHT} width={width - DASHBOARD_WRAPPER_LR_MARGIN} cols={{\n      lg: getGridColumns(),\n      sm: SM_SCREEN_GRID_COLUMNS\n    }} breakpoints={{\n      lg: SMALL_SCREEN_BREAKPOINT - DASHBOARD_WRAPPER_LR_MARGIN,\n      sm: 0\n    }} layouts={{\n      lg: displayItems,\n      sm: layoutSm\n    }} compactType={GRID_COMPACT_TYPE} margin={MARGIN} containerPadding={{\n      lg: [SCROLLBAR_WIDTH, 0],\n      sm: [SCROLLBAR_WIDTH, 0]\n    }} isDraggable={false} isResizable={false} draggableCancel=\"input,textarea\">\n                {getItemComponents(displayItems)}\n            </ResponsiveReactGridLayout>\n        </div>;\n};\n\nResponsiveItemGrid.propTypes = {\n  dashboardItems: PropTypes.array,\n  isLoading: PropTypes.bool\n};\n\nconst mapStateToProps = state => {\n  const selectedDashboard = sGetDashboardById(state, sGetSelectedId(state));\n  const dashboardItems = orArray(sGetDashboardItems(state)).filter(hasShape);\n  return {\n    isLoading: sGetSelectedIsLoading(state) || !selectedDashboard,\n    dashboardItems\n  };\n};\n\nexport default connect(mapStateToProps)(ResponsiveItemGrid);","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport i18n from '@dhis2/d2-i18n';\nimport { colors } from '@dhis2/ui';\nconst styles = {\n  badgeContainer: {\n    margin: '2px',\n    padding: '0 16px',\n    borderRadius: '4px',\n    color: colors.white,\n    backgroundColor: '#212934',\n    height: 36,\n    display: 'flex',\n    alignItems: 'center'\n  },\n  badge: {\n    fontSize: '13px',\n    cursor: 'pointer',\n    whiteSpace: 'nowrap'\n  },\n  badgeRemove: {\n    fontSize: '12px',\n    textDecoration: 'underline',\n    marginLeft: '24px',\n    cursor: 'pointer'\n  }\n};\n\nclass FilterBadge extends Component {\n  onClick = id => () => this.props.onClick(id);\n  onRemove = id => () => this.props.onRemove(id);\n\n  render() {\n    const {\n      data\n    } = this.props;\n    return <div style={styles.badgeContainer} data-test=\"dashboard-filter-badge\">\n                <span style={styles.badge} onClick={this.onClick(data.id)}>\n                    {`${data.name}: ${data.values.length > 1 ? i18n.t('{{count}} selected', {\n          count: data.values.length\n        }) : data.values[0].name}`}\n                </span>\n                <span style={styles.badgeRemove} onClick={this.onRemove(data.id)}>\n                    {i18n.t('Remove')}\n                </span>\n            </div>;\n  }\n\n}\n\nFilterBadge.propTypes = {\n  data: PropTypes.object.isRequired,\n  onClick: PropTypes.func.isRequired,\n  onRemove: PropTypes.func.isRequired\n};\nFilterBadge.defaultProps = {\n  onClick: Function.prototype,\n  onRemove: Function.prototype\n};\nexport default FilterBadge;","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport FilterBadge from './FilterBadge';\nimport { sGetNamedItemFilters } from '../../reducers/itemFilters';\nimport { acRemoveItemFilter } from '../../actions/itemFilters';\nimport { acSetActiveModalDimension } from '../../actions/activeModalDimension';\nimport classes from './styles/FilterBar.module.css';\nexport class FilterBar extends Component {\n  onBadgeRemove = id => {\n    this.props.removeItemFilter(id);\n  };\n  onBadgeClick = id => {\n    this.props.setActiveModalDimension({\n      id,\n      name: this.props.filters.find(item => item.id === id).name\n    });\n  };\n\n  render() {\n    const {\n      filters\n    } = this.props;\n    return filters.length ? // the 3 is calculated so that the FilterBar has the same vertical position as the TitleBar in relation to the ControlBar\n    <div className={classes.bar} style={{\n      top: 3\n    }}>\n                {filters.map(filter => <FilterBadge key={filter.id} data={filter} onClick={this.onBadgeClick} onRemove={this.onBadgeRemove} />)}\n            </div> : null;\n  }\n\n}\nFilterBar.propTypes = {\n  filters: PropTypes.array.isRequired,\n  removeItemFilter: PropTypes.func.isRequired,\n  setActiveModalDimension: PropTypes.func\n};\nFilterBar.defaultProps = {\n  filters: [],\n  removeItemFIlter: Function.prototype\n};\n\nconst mapStateToProps = state => ({\n  filters: sGetNamedItemFilters(state)\n});\n\nexport default connect(mapStateToProps, {\n  setActiveModalDimension: acSetActiveModalDimension,\n  removeItemFilter: acRemoveItemFilter\n})(FilterBar);","export const SET_WINDOW_HEIGHT = 'SET_WINDOW_HEIGHT';\nexport const DEFAULT_STATE_WINDOW_HEIGHT = window.innerHeight;\nexport default ((state = DEFAULT_STATE_WINDOW_HEIGHT, action) => {\n  switch (action.type) {\n    case SET_WINDOW_HEIGHT:\n      {\n        return action.value;\n      }\n\n    default:\n      return state;\n  }\n});\nexport const sGetWindowHeight = state => state.windowHeight;","import { generateUid } from 'd2/uid';\nimport { SET_PRINT_DASHBOARD, CLEAR_PRINT_DASHBOARD, SET_PRINT_DASHBOARD_LAYOUT, ADD_PRINT_DASHBOARD_ITEM, REMOVE_PRINT_DASHBOARD_ITEM, UPDATE_PRINT_DASHBOARD_ITEM } from '../reducers/printDashboard';\nimport { NEW_ITEM_SHAPE, getGridItemProperties, getPageBreakItemShape, getPrintTitlePageItemShape } from '../components/ItemGrid/gridUtil';\nimport { itemTypeMap, PAGEBREAK } from '../modules/itemTypes'; // actions\n\nexport const acSetPrintDashboard = (dashboard, items) => {\n  const val = { ...dashboard,\n    dashboardItems: items\n  };\n  return {\n    type: SET_PRINT_DASHBOARD,\n    value: val\n  };\n};\nexport const acClearPrintDashboard = () => ({\n  type: CLEAR_PRINT_DASHBOARD\n});\nexport const acUpdatePrintDashboardLayout = value => ({\n  type: SET_PRINT_DASHBOARD_LAYOUT,\n  value\n});\nexport const acAddPrintDashboardItem = item => {\n  const type = item.type;\n  delete item.type;\n  const itemPropName = itemTypeMap[type].propName;\n  const id = generateUid();\n  const gridItemProperties = getGridItemProperties(id);\n  let shape;\n\n  if (type === PAGEBREAK) {\n    const yPos = item.yPos || 0;\n    shape = getPageBreakItemShape(yPos, item.isStatic);\n  } else {\n    shape = getPrintTitlePageItemShape(item.isOneItemPerPage);\n  }\n\n  return {\n    type: ADD_PRINT_DASHBOARD_ITEM,\n    value: {\n      id,\n      type,\n      position: item.position || null,\n      [itemPropName]: item.content,\n      ...NEW_ITEM_SHAPE,\n      ...gridItemProperties,\n      ...shape\n    }\n  };\n};\nexport const acRemovePrintDashboardItem = value => ({\n  type: REMOVE_PRINT_DASHBOARD_ITEM,\n  value\n});\nexport const acUpdatePrintDashboardItem = item => ({\n  type: UPDATE_PRINT_DASHBOARD_ITEM,\n  value: item\n});","import React, { useEffect } from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport TitleBar from '../TitleBar/TitleBar';\nimport ViewItemGrid from '../ItemGrid/ViewItemGrid';\nimport FilterBar from '../FilterBar/FilterBar';\nimport DashboardsBar from '../ControlBar/DashboardsBar';\nimport { sGetIsEditing } from '../../reducers/editDashboard';\nimport { sGetIsPrinting } from '../../reducers/printDashboard';\nimport { sGetSelectedId } from '../../reducers/selected';\nimport { sGetWindowHeight } from '../../reducers/windowHeight';\nimport { sGetControlBarUserRows } from '../../reducers/controlBar';\nimport { acClearEditDashboard } from '../../actions/editDashboard';\nimport { acClearPrintDashboard } from '../../actions/printDashboard';\nimport { getControlBarHeight, HEADERBAR_HEIGHT } from '../ControlBar/controlBarDimensions';\nexport const ViewDashboard = props => {\n  useEffect(() => {\n    if (props.dashboardIsEditing) {\n      props.clearEditDashboard();\n    } else if (props.dashboardIsPrinting) {\n      props.clearPrintDashboard();\n    }\n  }, [props.dashboardIsEditing, props.dashboardIsPrinting]);\n  useEffect(() => {\n    document.querySelector('.dashboard-wrapper')?.scroll(0, 0);\n  }, [props.selectedId]);\n  const height = props.windowHeight - HEADERBAR_HEIGHT - getControlBarHeight(props.controlBarRows);\n  return <>\n            <DashboardsBar />\n            <div className=\"dashboard-wrapper\" style={{\n      height\n    }}>\n                <TitleBar edit={false} />\n                <FilterBar />\n                <ViewItemGrid />\n            </div>\n        </>;\n};\nViewDashboard.propTypes = {\n  clearEditDashboard: PropTypes.func,\n  clearPrintDashboard: PropTypes.func,\n  controlBarRows: PropTypes.number,\n  dashboardIsEditing: PropTypes.bool,\n  dashboardIsPrinting: PropTypes.bool,\n  selectedId: PropTypes.string,\n  windowHeight: PropTypes.number\n};\n\nconst mapStateToProps = state => {\n  return {\n    dashboardIsEditing: sGetIsEditing(state),\n    dashboardIsPrinting: sGetIsPrinting(state),\n    controlBarRows: sGetControlBarUserRows(state),\n    selectedId: sGetSelectedId(state),\n    windowHeight: sGetWindowHeight(state)\n  };\n};\n\nexport default connect(mapStateToProps, {\n  clearEditDashboard: acClearEditDashboard,\n  clearPrintDashboard: acClearPrintDashboard\n})(ViewDashboard);","import React from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport i18n from '@dhis2/d2-i18n';\nimport ReactGridLayout from 'react-grid-layout';\nimport { Layer, CenteredContent, CircularLoader } from '@dhis2/ui';\nimport cx from 'classnames';\nimport { acUpdateDashboardLayout } from '../../actions/editDashboard';\nimport { Item } from '../Item/Item';\nimport { resize as pluginResize } from '../Item/VisualizationItem/Visualization/plugin';\nimport { isVisualizationType } from '../../modules/itemTypes';\nimport { GRID_ROW_HEIGHT, GRID_COMPACT_TYPE, MARGIN, getGridColumns, hasShape, getGridItemDomId } from './gridUtil';\nimport { orArray } from '../../modules/util';\nimport NoContentMessage from '../../widgets/NoContentMessage';\nimport { sGetSelectedIsLoading } from '../../reducers/selected';\nimport { sGetEditDashboardRoot, sGetEditDashboardItems } from '../../reducers/editDashboard';\nimport ProgressiveLoadingContainer from '../Item/ProgressiveLoadingContainer';\nimport { EDIT } from '../Dashboard/dashboardModes';\nimport 'react-grid-layout/css/styles.css';\nimport 'react-resizable/css/styles.css';\nimport './styles/ItemGrid.css';\n\nconst EditItemGrid = ({\n  isLoading,\n  dashboardItems,\n  acUpdateDashboardLayout\n}) => {\n  const onLayoutChange = newLayout => {\n    acUpdateDashboardLayout(newLayout);\n  };\n\n  const onItemResize = id => {\n    const el = document.querySelector(`#${getGridItemDomId(id)}`) || {};\n    if (typeof el.setViewportSize === 'function') setTimeout(() => el.setViewportSize(el.clientWidth - 5, el.clientHeight - 5), 10);\n  };\n\n  const onResizeStop = (layout, oldItem, newItem) => {\n    onItemResize(newItem.i);\n    const dashboardItem = dashboardItems.find(item => item.id === newItem.i); // call resize on the item component if it's a plugin type\n\n    if (dashboardItem && isVisualizationType(dashboardItem)) {\n      pluginResize(dashboardItem);\n    }\n  };\n\n  const getItemComponent = item => <ProgressiveLoadingContainer key={item.i} className={cx(item.type, 'edit')} itemId={item.id}>\n            <Item item={item} dashboardMode={EDIT} />\n        </ProgressiveLoadingContainer>;\n\n  const getItemComponents = items => items.map(item => getItemComponent(item));\n\n  if (!isLoading && !dashboardItems.length) {\n    return <NoContentMessage text={i18n.t('There are no items on this dashboard')} />;\n  }\n\n  return <>\n            {isLoading ? <Layer translucent>\n                    <CenteredContent>\n                        <CircularLoader />\n                    </CenteredContent>\n                </Layer> : null}\n            <ReactGridLayout layout={dashboardItems} margin={MARGIN} cols={getGridColumns()} rowHeight={GRID_ROW_HEIGHT} width={window.innerWidth} compactType={GRID_COMPACT_TYPE} onLayoutChange={onLayoutChange} onResizeStop={onResizeStop} isDraggable={true} isResizable={true} draggableCancel=\"input,textarea\">\n                {getItemComponents(dashboardItems)}\n            </ReactGridLayout>\n        </>;\n};\n\nEditItemGrid.propTypes = {\n  acUpdateDashboardLayout: PropTypes.func,\n  dashboardItems: PropTypes.array,\n  isLoading: PropTypes.bool\n}; // Container\n\nconst mapStateToProps = state => {\n  const selectedDashboard = sGetEditDashboardRoot(state);\n  const dashboardItems = orArray(sGetEditDashboardItems(state)).filter(hasShape);\n  return {\n    isLoading: sGetSelectedIsLoading(state) || !selectedDashboard,\n    dashboardItems\n  };\n};\n\nconst mapDispatchToProps = {\n  acUpdateDashboardLayout\n};\nexport default connect(mapStateToProps, mapDispatchToProps)(EditItemGrid);","import React from 'react';\nimport PropTypes from 'prop-types';\nimport i18n from '@dhis2/d2-i18n';\nimport { Button, Modal, ModalContent, ModalActions, ButtonStrip, ModalTitle } from '@dhis2/ui';\nimport classes from './styles/ConfirmDeleteDialog.module.css';\nexport const ConfirmDeleteDialog = ({\n  dashboardName,\n  onDeleteConfirmed,\n  onContinueEditing,\n  open\n}) => {\n  const actions = [<Button key=\"cancel\" secondary onClick={onContinueEditing} dataTest=\"cancel-delete-dashboard\">\n            {i18n.t('Cancel')}\n        </Button>, <Button key=\"delete\" destructive onClick={onDeleteConfirmed} dataTest=\"confirm-delete-dashboard\">\n            {i18n.t('Delete')}\n        </Button>];\n  return open && <Modal onClose={onContinueEditing} small position=\"middle\">\n                <ModalTitle>{i18n.t('Delete dashboard')}</ModalTitle>\n                <ModalContent>\n                    <span className={classes.content}>\n                        {i18n.t('Deleting dashboard \"{{ dashboardName }}\" will remove it for all users. This action cannot be undone. Are you sure you want to permanently delete this dashboard?', {\n          dashboardName\n        })}\n                    </span>\n                </ModalContent>\n                <ModalActions>\n                    <ButtonStrip>{actions}</ButtonStrip>\n                </ModalActions>\n            </Modal>;\n};\nConfirmDeleteDialog.propTypes = {\n  dashboardName: PropTypes.string,\n  open: PropTypes.bool,\n  onContinueEditing: PropTypes.func,\n  onDeleteConfirmed: PropTypes.func\n};\nexport default ConfirmDeleteDialog;","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { Redirect } from 'react-router-dom';\nimport i18n from '@dhis2/d2-i18n';\nimport TranslationDialog from '@dhis2/d2-ui-translation-dialog';\nimport { Button, ButtonStrip } from '@dhis2/ui';\nimport ConfirmDeleteDialog from './ConfirmDeleteDialog';\nimport { tSaveDashboard, acClearEditDashboard, acSetPrintPreviewView, acClearPrintPreviewView } from '../../actions/editDashboard';\nimport { acClearPrintDashboard } from '../../actions/printDashboard';\nimport { tDeleteDashboard, acSetDashboardDisplayName } from '../../actions/dashboards';\nimport { sGetEditDashboardRoot, sGetIsNewDashboard, sGetIsPrintPreviewView } from '../../reducers/editDashboard';\nimport { apiFetchDashboard } from '../../api/dashboards';\nimport classes from './styles/EditBar.module.css';\nexport class EditBar extends Component {\n  state = {\n    translationDialogIsOpen: false,\n    dashboardModel: undefined,\n    dashboard: undefined,\n    confirmDeleteDialogOpen: false,\n    redirectUrl: undefined\n  };\n  onConfirmDelete = () => {\n    this.setState({\n      confirmDeleteDialogOpen: true\n    });\n  };\n  onSave = () => {\n    this.props.onSave().then(newId => {\n      this.setState({\n        redirectUrl: `/${newId}`\n      });\n    });\n  };\n  onPrintPreview = () => {\n    if (this.props.isPrintPreviewView) {\n      this.props.clearPrintPreview();\n      this.props.clearPrintDashboard();\n    } else {\n      this.props.showPrintPreview();\n    }\n  };\n  onDiscard = () => {\n    this.props.onDiscardChanges();\n    const redirectUrl = this.props.dashboardId ? `/${this.props.dashboardId}` : '/';\n    this.setState({\n      redirectUrl\n    });\n  };\n  onContinueEditing = () => {\n    this.setState({\n      confirmDeleteDialogOpen: false\n    });\n  };\n  onDeleteConfirmed = () => {\n    this.setState({\n      confirmDeleteDialogOpen: false\n    });\n    this.props.onDelete(this.props.dashboardId).then(() => {\n      this.setState({\n        redirectUrl: '/'\n      });\n    });\n  };\n  onTranslationsSaved = async translations => {\n    if (translations && translations.length) {\n      const dbLocale = await this.context.d2.currentUser.userSettings.get('keyDbLocale');\n      const translation = translations.find(t => t.locale === dbLocale && t.property === 'NAME');\n\n      if (translation && translation.value) {\n        this.props.onTranslate(this.props.dashboardId, translation.value);\n      }\n    }\n  };\n  fetchDashboardModel = () => {\n    if (this.props.dashboardId && !this.state.dashboard) {\n      apiFetchDashboard(this.context.dataEngine, this.props.dashboardId).then(dashboard => this.setState({\n        dashboard\n      }));\n    }\n  };\n\n  componentDidMount() {\n    this.fetchDashboardModel();\n  }\n\n  componentDidUpdate() {\n    this.fetchDashboardModel();\n  }\n\n  toggleTranslationDialog = () => {\n    this.setState({\n      translationDialogIsOpen: !this.state.translationDialogIsOpen\n    });\n  };\n  confirmDeleteDialog = () => this.props.deleteAccess && this.props.dashboardId ? <ConfirmDeleteDialog dashboardName={this.props.dashboardName} onDeleteConfirmed={this.onDeleteConfirmed} onContinueEditing={this.onContinueEditing} open={this.state.confirmDeleteDialogOpen} /> : null;\n  translationDialog = () => this.state.dashboard && this.state.dashboard.id ? <TranslationDialog className=\"translation-dialog\" d2={this.context.d2} open={this.state.translationDialogIsOpen} onRequestClose={this.toggleTranslationDialog} objectToTranslate={{ ...this.state.dashboard,\n    modelDefinition: {\n      name: 'dashboard'\n    }\n  }} fieldsToTranslate={['name', 'description']} onTranslationSaved={this.onTranslationsSaved} onTranslationError={err => console.log('translation update error', err)} /> : null;\n  renderActionButtons = () => <ButtonStrip>\n            <Button primary onClick={this.onSave} dataTest=\"save-dashboard-button\">\n                {i18n.t('Save changes')}\n            </Button>\n            <Button onClick={this.onPrintPreview}>\n                {this.props.isPrintPreviewView ? i18n.t('Exit Print preview') : i18n.t('Print preview')}\n            </Button>\n\n            {this.props.dashboardId && <Button onClick={this.toggleTranslationDialog}>\n                    {i18n.t('Translate')}\n                </Button>}\n            {this.props.dashboardId && this.props.deleteAccess && <Button onClick={this.onConfirmDelete} dataTest=\"delete-dashboard-button\">\n                    {i18n.t('Delete')}\n                </Button>}\n        </ButtonStrip>;\n\n  render() {\n    if (this.state.redirectUrl) {\n      return <Redirect to={this.state.redirectUrl} />;\n    }\n\n    const {\n      updateAccess\n    } = this.props;\n    const discardBtnText = updateAccess ? i18n.t('Exit without saving') : i18n.t('Go to dashboards');\n    return <>\n                <div className={classes.editBar}>\n                    <div className={classes.controls}>\n                        {updateAccess ? this.renderActionButtons() : null}\n                        <Button secondary onClick={this.onDiscard}>\n                            {discardBtnText}\n                        </Button>\n                    </div>\n                </div>\n                {this.translationDialog()}\n                {this.confirmDeleteDialog()}\n            </>;\n  }\n\n}\nEditBar.propTypes = {\n  clearPrintDashboard: PropTypes.func,\n  clearPrintPreview: PropTypes.func,\n  dashboardId: PropTypes.string,\n  dashboardName: PropTypes.string,\n  deleteAccess: PropTypes.bool,\n  isPrintPreviewView: PropTypes.bool,\n  showPrintPreview: PropTypes.func,\n  updateAccess: PropTypes.bool,\n  onDelete: PropTypes.func,\n  onDiscardChanges: PropTypes.func,\n  onSave: PropTypes.func,\n  onTranslate: PropTypes.func\n};\nEditBar.contextTypes = {\n  dataEngine: PropTypes.object,\n  d2: PropTypes.object\n};\n\nconst mapStateToProps = state => {\n  const dashboard = sGetEditDashboardRoot(state);\n  let deleteAccess;\n  let updateAccess;\n\n  if (sGetIsNewDashboard(state)) {\n    deleteAccess = true;\n    updateAccess = true;\n  } else {\n    updateAccess = dashboard.access ? dashboard.access.update : false;\n    deleteAccess = dashboard.access ? dashboard.access.delete : false;\n  }\n\n  return {\n    dashboardId: dashboard.id,\n    dashboardName: dashboard.name,\n    deleteAccess,\n    isPrintPreviewView: sGetIsPrintPreviewView(state),\n    updateAccess\n  };\n};\n\nconst mapDispatchToProps = dispatch => ({\n  clearPrintDashboard: () => dispatch(acClearPrintDashboard()),\n  clearPrintPreview: () => dispatch(acClearPrintPreviewView()),\n  onSave: () => dispatch(tSaveDashboard()).then(id => id),\n  onDelete: id => dispatch(tDeleteDashboard(id)),\n  onDiscardChanges: () => dispatch(acClearEditDashboard()),\n  onTranslate: (id, value) => dispatch(acSetDashboardDisplayName(id, value)),\n  showPrintPreview: () => dispatch(acSetPrintPreviewView())\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(EditBar);","import React from 'react';\nimport PropTypes from 'prop-types';\nimport i18n from '@dhis2/d2-i18n';\nimport { NoticeBox, CenteredContent } from '@dhis2/ui';\nimport classes from './styles/NotSupportedNotice.module.css';\n\nconst NotSupportedNotice = ({\n  message\n}) => <CenteredContent position=\"top\">\n        <div className={classes.noticeContainer}>\n            <NoticeBox title={i18n.t('Not supported')} warning>\n                {message}\n            </NoticeBox>\n        </div>\n    </CenteredContent>;\n\nNotSupportedNotice.propTypes = {\n  message: PropTypes.string\n};\nexport default NotSupportedNotice;","import React from 'react';\nimport PropTypes from 'prop-types';\nimport i18n from '@dhis2/d2-i18n';\nimport { a4LandscapeWidthPx } from '../ItemGrid/gridUtil';\nimport classes from './styles/PrintInfo.module.css';\n\nconst PrintInfo = ({\n  isLayout\n}) => {\n  const maxWidth = a4LandscapeWidthPx < window.innerWidth ? a4LandscapeWidthPx : window.innerWidth;\n  const infoHeader = isLayout ? i18n.t('dashboard layout') : i18n.t('one item per page');\n  return <div className={classes.infoWrapper}>\n            <p className={classes.infoHeader}>\n                {`${i18n.t('Print Preview')}: ${infoHeader}`}\n            </p>\n            <div style={{\n      maxWidth\n    }}>\n                <p className={classes.info}>\n                    {`${i18n.t('For best print results')}:`}\n                </p>\n                <div className={classes.info}>\n                    <ul className={classes.infoList}>\n                        <li>{i18n.t('Use Chrome or Edge web browser')}</li>\n                        <li>\n                            {i18n.t('Wait for all dashboard items to load before printing')}\n                        </li>\n                        <li>\n                            {i18n.t('Use A4 landscape paper size and default margin settings in the browser print dialog')}\n                        </li>\n                    </ul>\n                </div>\n            </div>\n            <hr className={classes.divider} />\n        </div>;\n};\n\nPrintInfo.propTypes = {\n  isLayout: PropTypes.bool\n};\nexport default PrintInfo;","import React from 'react';\nimport { colors } from '@dhis2/ui';\n\nconst LessHorizontalIcon = () => <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" fill={colors.grey600} viewBox=\"0 0 24 24\">\n        <path d=\"m13.2928932 6.29289322c.3905243-.39052429 1.0236893-.39052429 1.4142136 0 .3604839.36048396.3882135.92771502.0831886 1.32000622l-.0831886.09420734-4.2921068 4.29289322 4.2921068 4.2928932c.3604839.360484.3882135.927715.0831886 1.3200062l-.0831886.0942074c-.360484.3604839-.927715.3882135-1.3200062.0831886l-.0942074-.0831886-4.99999998-5c-.36048396-.360484-.3882135-.927715-.08318861-1.3200062l.08318861-.0942074z\" />\n    </svg>;\n\nexport default LessHorizontalIcon;","import React from 'react';\nimport PropTypes from 'prop-types';\nimport i18n from '@dhis2/d2-i18n';\nimport { Button } from '@dhis2/ui';\nimport { Link } from 'react-router-dom';\nimport LessHorizontalIcon from '../../icons/LessHorizontal';\nimport { a4LandscapeWidthPx } from '../ItemGrid/gridUtil';\nimport classes from './styles/PrintActionsBar.module.css'; // 42px set in the module css file\n\nexport const PRINT_ACTIONS_BAR_HEIGHT = 42;\n\nconst PrintActionsBar = ({\n  id\n}) => {\n  const width = a4LandscapeWidthPx < window.innerWidth ? a4LandscapeWidthPx : window.innerWidth;\n  return <>\n            <div className={classes.container}>\n                <div className={classes.inner} style={{\n        width\n      }}>\n                    <Link className={classes.link} to={`/${id}`}>\n                        <Button dataTest=\"exit-print-preview\">\n                            <LessHorizontalIcon />\n                            {i18n.t('Exit print preview')}\n                        </Button>\n                    </Link>\n                    <Button onClick={window.print}>{i18n.t('Print')}</Button>\n                </div>\n            </div>\n            <div className={classes.topMargin} />\n        </>;\n};\n\nPrintActionsBar.propTypes = {\n  id: PropTypes.string\n};\nexport default PrintActionsBar;","import sortBy from 'lodash/sortBy';\nimport { orArray } from './util';\nimport { itemTypeMap } from './itemTypes';\nexport const getTransformYPx = elStyle => {\n  if (!elStyle || !elStyle.transform) {\n    return null;\n  } // find valid transforms - those with y pixels\n  // the code is expecting the transform prop to\n  // look like:  translate(10px, 300px)\n\n\n  const transformY = elStyle.transform.split(' ')[1]?.match(/(\\d+)px/);\n\n  if (transformY) {\n    return parseInt(transformY[1]);\n  } else {\n    return null;\n  }\n};\nexport const getDomGridItemsSortedByYPos = elements => {\n  const types = Object.keys(itemTypeMap);\n  const elementsWithBoundingRect = orArray(elements).map(el => {\n    const type = Array.from(el.classList).find(className => types.indexOf(className) > -1);\n    const rect = el.getBoundingClientRect();\n    const y = getTransformYPx(el.style) || parseInt(rect.y);\n    return {\n      type,\n      classList: el.classList,\n      bottomY: y + parseInt(rect.height),\n      el\n    };\n  });\n  return sortBy(elementsWithBoundingRect, ['bottomY']);\n};","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport i18n from '@dhis2/d2-i18n';\nimport sortBy from 'lodash/sortBy';\nimport ReactGridLayout from 'react-grid-layout';\nimport { Layer, CenteredContent, CircularLoader } from '@dhis2/ui';\nimport cx from 'classnames';\nimport { Item } from '../Item/Item';\nimport NoContentMessage from '../../widgets/NoContentMessage';\nimport { acUpdatePrintDashboardLayout } from '../../actions/printDashboard';\nimport { sGetSelectedIsLoading } from '../../reducers/selected';\nimport { sGetPrintDashboardRoot, sGetPrintDashboardItems } from '../../reducers/printDashboard';\nimport { sGetIsEditing } from '../../reducers/editDashboard';\nimport { GRID_ROW_HEIGHT, GRID_COMPACT_TYPE, MARGIN, getGridColumns, hasShape, a4LandscapeWidthPx } from './gridUtil';\nimport { getDomGridItemsSortedByYPos, getTransformYPx } from '../../modules/printUtils';\nimport { PRINT_LAYOUT } from '../Dashboard/dashboardModes';\nimport { PAGEBREAK } from '../../modules/itemTypes';\nimport 'react-grid-layout/css/styles.css';\nimport 'react-resizable/css/styles.css';\nimport './styles/ItemGrid.css';\nexport class PrintLayoutItemGrid extends Component {\n  onLayoutChange = newLayout => {\n    this.props.updateDashboardLayout(newLayout);\n  };\n  isFirstPageBreak = item => {\n    if (item.type !== PAGEBREAK) {\n      return false;\n    }\n\n    const pageBreaks = this.props.dashboardItems.filter(i => i.type === PAGEBREAK);\n    const sortedPageBreaks = sortBy(pageBreaks, ['y']);\n    return item.y === sortedPageBreaks[0].y;\n  };\n  getItemComponent = item => {\n    // the first-page-break class is used in Edit print preview\n    const itemClassNames = cx('print', 'layout', `${item.type}`, {\n      'first-page-break': this.props.isEditing && this.isFirstPageBreak(item),\n      shortened: !!item.shortened\n    });\n    return <div key={item.i} className={itemClassNames}>\n                <Item item={item} dashboardMode={PRINT_LAYOUT} />\n            </div>;\n  };\n  getItemComponents = items => items.map(item => this.getItemComponent(item));\n\n  hideExtraPageBreaks() {\n    const sortedElements = getDomGridItemsSortedByYPos(Array.from(document.querySelectorAll('.react-grid-item')));\n    let pageBreakBottom = 0;\n    let lastItemBottom = 0;\n    let foundNonPageBreak = false;\n\n    for (let i = sortedElements.length - 1; i >= 0; --i) {\n      const item = sortedElements[i];\n\n      if (item.type === PAGEBREAK) {\n        if (!foundNonPageBreak) {\n          item.el.classList.add('removed');\n        } else {\n          pageBreakBottom = item.bottomY;\n          break;\n        }\n      } else {\n        foundNonPageBreak = true;\n        const thisItemBottom = item.bottomY;\n\n        if (thisItemBottom > lastItemBottom) {\n          lastItemBottom = thisItemBottom;\n        }\n      }\n    }\n\n    const pageHeight = 720;\n    const gridElement = document.querySelector('.react-grid-layout'); // the last page break is before the last item(s) so\n    // maxHeight is one page beyond the last page break\n\n    const maxHeight = pageBreakBottom + pageHeight;\n\n    if (gridElement) {\n      gridElement.style.height = `${maxHeight}px`;\n    }\n\n    if (this.props.isEditing) {\n      //scroll to below the title page - which is middle of the first pagebreak\n      const firstBreak = document.querySelector('.first-page-break');\n\n      if (firstBreak && firstBreak.style && firstBreak.style.transform) {\n        const yPos = getTransformYPx(firstBreak.style);\n        const scrollArea = document.querySelector('.scroll-area');\n        scrollArea && scrollArea.scroll(0, yPos + 50);\n      }\n    }\n  }\n\n  componentDidMount() {\n    this.hideExtraPageBreaks();\n  }\n\n  componentDidUpdate() {\n    this.hideExtraPageBreaks();\n  }\n\n  render() {\n    const {\n      isLoading,\n      dashboardItems\n    } = this.props;\n\n    if (!isLoading && !dashboardItems.length) {\n      return <NoContentMessage text={i18n.t('There are no items on this dashboard')} />;\n    }\n\n    const width = a4LandscapeWidthPx < window.innerWidth ? a4LandscapeWidthPx : window.innerWidth;\n    return <div className=\"grid-wrapper\">\n                {isLoading ? <Layer translucent>\n                        <CenteredContent>\n                            <CircularLoader />\n                        </CenteredContent>\n                    </Layer> : null}\n                <ReactGridLayout onLayoutChange={this.onLayoutChange} className=\"layout\" layout={dashboardItems} margin={MARGIN} cols={getGridColumns()} rowHeight={GRID_ROW_HEIGHT} width={width} compactType={GRID_COMPACT_TYPE} isDraggable={false} isResizable={false} draggableCancel=\"input,textarea\">\n                    {this.getItemComponents(dashboardItems)}\n                </ReactGridLayout>\n            </div>;\n  }\n\n}\nPrintLayoutItemGrid.propTypes = {\n  dashboardItems: PropTypes.array,\n  isEditing: PropTypes.bool,\n  isLoading: PropTypes.bool,\n  updateDashboardLayout: PropTypes.func\n};\nPrintLayoutItemGrid.defaultProps = {\n  dashboardItems: []\n};\n\nconst mapStateToProps = state => {\n  const selectedDashboard = sGetPrintDashboardRoot(state);\n  return {\n    isLoading: sGetSelectedIsLoading(state) || !selectedDashboard,\n    dashboardItems: sGetPrintDashboardItems(state).filter(hasShape),\n    isEditing: sGetIsEditing(state)\n  };\n};\n\nexport default connect(mapStateToProps, {\n  updateDashboardLayout: acUpdatePrintDashboardLayout\n})(PrintLayoutItemGrid);","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { spacers } from '@dhis2/ui';\nimport cx from 'classnames';\nimport PrintInfo from './PrintInfo';\nimport PrintActionsBar from './PrintActionsBar';\nimport PrintLayoutItemGrid from '../ItemGrid/PrintLayoutItemGrid';\nimport { acSetPrintDashboard, acAddPrintDashboardItem, acUpdatePrintDashboardItem } from '../../actions/printDashboard';\nimport { sGetSelectedId } from '../../reducers/selected';\nimport { sGetWindowHeight } from '../../reducers/windowHeight';\nimport { sGetEditDashboardRoot, sGetEditDashboardItems } from '../../reducers/editDashboard';\nimport { sGetDashboardById, sGetDashboardItems } from '../../reducers/dashboards';\nimport { PAGEBREAK, PRINT_TITLE_PAGE } from '../../modules/itemTypes';\nimport { a4LandscapeWidthPx, MAX_ITEM_GRID_HEIGHT } from '../ItemGrid/gridUtil';\nimport { getControlBarHeight, HEADERBAR_HEIGHT } from '../ControlBar/controlBarDimensions';\nimport { PRINT_ACTIONS_BAR_HEIGHT } from './PrintActionsBar';\nimport { DRAG_HANDLE_HEIGHT } from '../ControlBar/ControlBar';\nimport classes from './styles/PrintLayoutDashboard.module.css';\nimport './styles/print.css';\nimport './styles/print-layout.css';\nconst EDIT_BAR_HEIGHT = getControlBarHeight(1) + DRAG_HANDLE_HEIGHT;\n\nconst isLeapPage = n => {\n  // pages 5,9,13,17,21,25,29... are leap pages\n  let x = 0;\n  const startPage = 1;\n\n  const getMultiple = factor => startPage + 4 * factor;\n\n  let multiple = getMultiple(0);\n  let isLeapPage = false;\n\n  while (multiple < n) {\n    multiple = getMultiple(x);\n    ++x;\n\n    if (multiple === n) {\n      isLeapPage = true;\n      break;\n    }\n  }\n\n  return isLeapPage;\n};\n\nconst addPageBreaks = ({\n  items,\n  addDashboardItem\n}) => {\n  // add enough page breaks so that each item could\n  // be put on its own page. Due to the react-grid-layout\n  // unit system, we have to estimate roughly the size of each\n  // page. At regular intervals add a unit, like a leap year\n  let yPos = 0;\n  const yPosList = [];\n\n  for (let pageNum = 1; pageNum <= items.length; ++pageNum) {\n    if (pageNum === 1) {\n      yPos += 35;\n    } else if (isLeapPage(pageNum)) {\n      yPos += 40;\n    } else {\n      yPos += 39;\n    }\n\n    yPosList.push(yPos);\n  }\n\n  for (let i = 0; i < items.length; ++i) {\n    addDashboardItem({\n      type: PAGEBREAK,\n      yPos: yPosList[i]\n    });\n  }\n};\n\nexport class PrintLayoutDashboard extends Component {\n  state = {\n    initialized: false\n  };\n  initPrintLayoutDashboard = () => {\n    if (this.props.dashboard) {\n      this.setState({\n        initialized: true\n      });\n      this.props.setPrintDashboard(this.props.dashboard, this.props.items); // If any items are taller than one page, reduce it to one\n      // page (react-grid-layout units)\n\n      this.props.items.forEach(item => {\n        if (item.h > MAX_ITEM_GRID_HEIGHT) {\n          item.shortened = true;\n          this.props.updateDashboardItem(Object.assign({}, item, {\n            h: MAX_ITEM_GRID_HEIGHT\n          }));\n        }\n      });\n      addPageBreaks(this.props);\n      this.props.addDashboardItem({\n        type: PRINT_TITLE_PAGE,\n        isOneItemPerPage: false\n      });\n    }\n  };\n\n  componentDidMount() {\n    this.initPrintLayoutDashboard();\n  }\n\n  componentDidUpdate() {\n    if (!this.state.initialized) {\n      this.initPrintLayoutDashboard();\n    }\n  }\n\n  getWrapperStyle = () => {\n    return this.props.fromEdit ? {\n      paddingTop: spacers.dp24,\n      height: this.props.windowHeight - EDIT_BAR_HEIGHT - HEADERBAR_HEIGHT\n    } : {\n      height: this.props.windowHeight - PRINT_ACTIONS_BAR_HEIGHT\n    };\n  };\n\n  render() {\n    return <>\n                {!this.props.fromEdit && <PrintActionsBar id={this.props.dashboard.id} />}\n                <div className={cx(classes.wrapper, 'scroll-area')} style={this.getWrapperStyle()}>\n                    {!this.props.fromEdit && <PrintInfo isLayout={true} />}\n                    <div className={classes.pageOuter} style={{\n          width: a4LandscapeWidthPx\n        }} data-test=\"print-layout-page\">\n                        <PrintLayoutItemGrid />\n                    </div>\n                </div>\n            </>;\n  }\n\n}\nPrintLayoutDashboard.propTypes = {\n  addDashboardItem: PropTypes.func,\n  dashboard: PropTypes.object,\n  fromEdit: PropTypes.bool,\n  items: PropTypes.array,\n  setPrintDashboard: PropTypes.func,\n  updateDashboardItem: PropTypes.func,\n  windowHeight: PropTypes.number\n};\n\nconst mapStateToProps = (state, ownProps) => {\n  const id = sGetSelectedId(state);\n\n  if (ownProps.fromEdit) {\n    const dashboard = sGetEditDashboardRoot(state);\n    return {\n      dashboard,\n      id,\n      items: sGetEditDashboardItems(state),\n      windowHeight: sGetWindowHeight(state)\n    };\n  }\n\n  const dashboard = id ? sGetDashboardById(state, id) : null;\n  return {\n    dashboard,\n    id,\n    items: sGetDashboardItems(state),\n    windowHeight: sGetWindowHeight(state)\n  };\n};\n\nexport default connect(mapStateToProps, {\n  setPrintDashboard: acSetPrintDashboard,\n  addDashboardItem: acAddPrintDashboardItem,\n  updateDashboardItem: acUpdatePrintDashboardItem\n})(PrintLayoutDashboard);","import React, { useEffect } from 'react';\nimport { connect } from 'react-redux';\nimport i18n from '@dhis2/d2-i18n';\nimport PropTypes from 'prop-types';\nimport TitleBar from '../TitleBar/TitleBar';\nimport EditItemGrid from '../ItemGrid/EditItemGrid';\nimport EditBar from '../ControlBar/EditBar';\nimport NotSupportedNotice from './NotSupportedNotice';\nimport { useWindowDimensions } from '../WindowDimensionsProvider';\nimport LayoutPrintPreview from './PrintLayoutDashboard';\nimport NoContentMessage from '../../widgets/NoContentMessage';\nimport { acSetEditDashboard } from '../../actions/editDashboard';\nimport { sGetWindowHeight } from '../../reducers/windowHeight';\nimport { sGetSelectedId } from '../../reducers/selected';\nimport { sGetDashboardById, sGetDashboardItems } from '../../reducers/dashboards';\nimport { sGetIsPrintPreviewView } from '../../reducers/editDashboard';\nimport { getControlBarHeight, HEADERBAR_HEIGHT } from '../ControlBar/controlBarDimensions';\nimport isSmallScreen from '../../modules/isSmallScreen';\n\nconst EditDashboard = props => {\n  const {\n    width\n  } = useWindowDimensions();\n  useEffect(() => {\n    if (props.dashboard) {\n      props.setEditDashboard(props.dashboard, props.items);\n    }\n  }, [props.dashboard]);\n\n  const renderGrid = () => {\n    if (props.isPrintPreviewView) {\n      return <LayoutPrintPreview fromEdit={true} />;\n    }\n\n    const height = props.windowHeight - HEADERBAR_HEIGHT - getControlBarHeight(1);\n    return <div className=\"dashboard-wrapper\" style={{\n      height\n    }}>\n                <TitleBar edit={true} />\n                <EditItemGrid />\n            </div>;\n  };\n\n  const renderEditView = () => <>\n            <EditBar />\n            {props.updateAccess ? renderGrid() : <NoContentMessage text={i18n.t('No access')} />}\n        </>;\n\n  return <>\n            {isSmallScreen(width) ? <NotSupportedNotice message={i18n.t('Editing dashboards on small screens is not supported.')} /> : renderEditView()}\n        </>;\n};\n\nEditDashboard.propTypes = {\n  dashboard: PropTypes.object,\n  isPrintPreviewView: PropTypes.bool,\n  items: PropTypes.array,\n  setEditDashboard: PropTypes.func,\n  updateAccess: PropTypes.bool,\n  windowHeight: PropTypes.number\n};\n\nconst mapStateToProps = state => {\n  const id = sGetSelectedId(state);\n  const dashboard = id ? sGetDashboardById(state, id) : null;\n  const updateAccess = dashboard && dashboard.access ? dashboard.access.update : false;\n  return {\n    dashboard,\n    updateAccess,\n    items: sGetDashboardItems(state),\n    isPrintPreviewView: sGetIsPrintPreviewView(state),\n    windowHeight: sGetWindowHeight(state)\n  };\n};\n\nexport default connect(mapStateToProps, {\n  setEditDashboard: acSetEditDashboard\n})(EditDashboard);","import React, { useEffect } from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport i18n from '@dhis2/d2-i18n';\nimport EditBar from '../ControlBar/EditBar';\nimport TitleBar from '../TitleBar/TitleBar';\nimport EditItemGrid from '../ItemGrid/EditItemGrid';\nimport LayoutPrintPreview from './PrintLayoutDashboard';\nimport NotSupportedNotice from './NotSupportedNotice';\nimport { acSetEditNewDashboard } from '../../actions/editDashboard';\nimport { sGetIsPrintPreviewView } from '../../reducers/editDashboard';\nimport { sGetWindowHeight } from '../../reducers/windowHeight';\nimport { getControlBarHeight, HEADERBAR_HEIGHT } from '../ControlBar/controlBarDimensions';\nimport { useWindowDimensions } from '../WindowDimensionsProvider';\nimport isSmallScreen from '../../modules/isSmallScreen';\n\nconst NewDashboard = props => {\n  const {\n    width\n  } = useWindowDimensions();\n  useEffect(() => {\n    props.setNewDashboard();\n  }, []);\n  const height = props.windowHeight - HEADERBAR_HEIGHT - getControlBarHeight(1);\n\n  const renderNewView = () => <>\n            <EditBar />\n            {props.isPrintPreviewView ? <LayoutPrintPreview fromEdit={true} /> : <div className=\"dashboard-wrapper\" style={{\n      height\n    }}>\n                    <TitleBar edit={true} />\n                    <EditItemGrid />\n                </div>}\n        </>;\n\n  return <>\n            {isSmallScreen(width) ? <NotSupportedNotice message={i18n.t('Creating dashboards on small screens is not supported.')} /> : renderNewView()}\n        </>;\n};\n\nNewDashboard.propTypes = {\n  isPrintPreviewView: PropTypes.bool,\n  setNewDashboard: PropTypes.func,\n  windowHeight: PropTypes.number\n};\n\nconst mapStateToProps = state => ({\n  isPrintPreviewView: sGetIsPrintPreviewView(state),\n  windowHeight: sGetWindowHeight(state)\n});\n\nexport default connect(mapStateToProps, {\n  setNewDashboard: acSetEditNewDashboard\n})(NewDashboard);","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport i18n from '@dhis2/d2-i18n';\nimport ReactGridLayout from 'react-grid-layout';\nimport { Layer, CenteredContent, CircularLoader } from '@dhis2/ui';\nimport cx from 'classnames';\nimport { Item } from '../Item/Item';\nimport NoContentMessage from '../../widgets/NoContentMessage';\nimport { PRINT } from '../Dashboard/dashboardModes';\nimport { sGetSelectedIsLoading } from '../../reducers/selected';\nimport { sGetPrintDashboardRoot, sGetPrintDashboardItems } from '../../reducers/printDashboard';\nimport { GRID_ROW_HEIGHT, GRID_COMPACT_TYPE, MARGIN, getGridColumns, hasShape, a4LandscapeWidthPx } from './gridUtil';\nimport { orArray } from '../../modules/util';\nimport 'react-grid-layout/css/styles.css';\nimport './styles/ItemGrid.css';\nexport class PrintItemGrid extends Component {\n  getItemComponent = item => <div key={item.i} className={cx(item.type, 'print', 'oipp')}>\n            <Item item={item} dashboardMode={PRINT} />\n        </div>;\n  getItemComponents = items => items.map(item => this.getItemComponent(item));\n\n  render() {\n    const {\n      isLoading,\n      dashboardItems\n    } = this.props;\n\n    if (!isLoading && !dashboardItems.length) {\n      return <NoContentMessage text={i18n.t('There are no items on this dashboard')} />;\n    }\n\n    const width = a4LandscapeWidthPx < window.innerWidth ? a4LandscapeWidthPx : window.innerWidth;\n    return <>\n                {isLoading ? <Layer translucent>\n                        <CenteredContent>\n                            <CircularLoader />\n                        </CenteredContent>\n                    </Layer> : null}\n                <ReactGridLayout className=\"layout print\" layout={dashboardItems} margin={MARGIN} cols={getGridColumns()} rowHeight={GRID_ROW_HEIGHT} width={width} compactType={GRID_COMPACT_TYPE} isDraggable={false} isResizable={false} draggableCancel=\"input,textarea\">\n                    {this.getItemComponents(dashboardItems)}\n                </ReactGridLayout>\n            </>;\n  }\n\n}\nPrintItemGrid.propTypes = {\n  dashboardItems: PropTypes.array,\n  isLoading: PropTypes.bool\n};\nPrintItemGrid.defaultProps = {\n  dashboardItems: []\n};\n\nconst mapStateToProps = state => {\n  const selectedDashboard = sGetPrintDashboardRoot(state);\n  return {\n    isLoading: sGetSelectedIsLoading(state) || !selectedDashboard,\n    dashboardItems: orArray(sGetPrintDashboardItems(state)).filter(hasShape)\n  };\n};\n\nexport default connect(mapStateToProps)(PrintItemGrid);","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport sortBy from 'lodash/sortBy';\nimport PrintInfo from './PrintInfo';\nimport PrintActionsBar from './PrintActionsBar';\nimport PrintItemGrid from '../ItemGrid/PrintItemGrid';\nimport { acSetPrintDashboard, acAddPrintDashboardItem, acRemovePrintDashboardItem, acUpdatePrintDashboardItem } from '../../actions/printDashboard';\nimport { sGetSelectedId } from '../../reducers/selected';\nimport { sGetWindowHeight } from '../../reducers/windowHeight';\nimport { sGetDashboardById, sGetDashboardItems } from '../../reducers/dashboards';\nimport { PAGEBREAK, PRINT_TITLE_PAGE, SPACER } from '../../modules/itemTypes';\nimport { a4LandscapeWidthPx, MAX_ITEM_GRID_HEIGHT_OIPP, MAX_ITEM_GRID_WIDTH_OIPP } from '../ItemGrid/gridUtil';\nimport { PRINT_ACTIONS_BAR_HEIGHT } from './PrintActionsBar';\nimport classes from './styles/PrintDashboard.module.css';\nimport './styles/print.css';\nimport './styles/print-oipp.css';\nexport class PrintDashboard extends Component {\n  state = {\n    initialized: false\n  };\n  initPrintDashboard = () => {\n    if (this.props.dashboard) {\n      this.setState({\n        initialized: true\n      }); //sort the items by Y pos so they print in order of top to bottom\n\n      const sortedItems = sortBy(this.props.items, ['y', 'x']);\n      this.props.setPrintDashboard(this.props.dashboard, sortedItems); // remove spacers - don't want empty pages\n\n      let spacerCount = 0;\n      this.props.items.forEach(item => {\n        if (item.type === SPACER) {\n          spacerCount += 1;\n          this.props.removeDashboardItem(item.id);\n        }\n      }); // Resize the items to the full page size\n\n      this.props.items.forEach(item => {\n        this.props.updateDashboardItem(Object.assign({}, item, {\n          w: MAX_ITEM_GRID_WIDTH_OIPP,\n          h: MAX_ITEM_GRID_HEIGHT_OIPP\n        }));\n      }); // insert page breaks into the document flow to create the \"pages\"\n      // when previewing the print\n\n      for (let i = 0; i < (this.props.items.length - spacerCount) * 2; i += 2) {\n        this.props.addDashboardItem({\n          type: PAGEBREAK,\n          position: i,\n          isStatic: false\n        });\n      }\n\n      this.props.addDashboardItem({\n        type: PRINT_TITLE_PAGE,\n        isOneItemPerPage: true\n      });\n    }\n  };\n\n  componentDidMount() {\n    this.initPrintDashboard();\n  }\n\n  componentDidUpdate() {\n    if (!this.state.initialized) {\n      this.initPrintDashboard();\n    }\n  }\n\n  render() {\n    const height = this.props.windowHeight - PRINT_ACTIONS_BAR_HEIGHT;\n    return <>\n                <PrintActionsBar id={this.props.dashboard.id} />\n                <div className={classes.wrapper} style={{\n        height\n      }}>\n                    <PrintInfo isLayout={false} />\n                    <div className={classes.pageOuter} style={{\n          width: a4LandscapeWidthPx\n        }} data-test=\"print-oipp-page\">\n                        <PrintItemGrid />\n                    </div>\n                </div>\n            </>;\n  }\n\n}\nPrintDashboard.propTypes = {\n  addDashboardItem: PropTypes.func,\n  dashboard: PropTypes.object,\n  items: PropTypes.array,\n  removeDashboardItem: PropTypes.func,\n  setPrintDashboard: PropTypes.func,\n  updateDashboardItem: PropTypes.func,\n  windowHeight: PropTypes.number\n};\n\nconst mapStateToProps = state => {\n  const id = sGetSelectedId(state);\n  const dashboard = id ? sGetDashboardById(state, id) : null;\n  return {\n    dashboard,\n    id,\n    items: sGetDashboardItems(state),\n    windowHeight: sGetWindowHeight(state)\n  };\n};\n\nexport default connect(mapStateToProps, {\n  setPrintDashboard: acSetPrintDashboard,\n  addDashboardItem: acAddPrintDashboardItem,\n  removeDashboardItem: acRemovePrintDashboardItem,\n  updateDashboardItem: acUpdatePrintDashboardItem\n})(PrintDashboard);","import { SET_WINDOW_HEIGHT } from '../reducers/windowHeight';\nexport const acSetWindowHeight = value => ({\n  type: SET_WINDOW_HEIGHT,\n  value\n});","import React, { useEffect } from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport isEmpty from 'lodash/isEmpty';\nimport i18n from '@dhis2/d2-i18n';\nimport { Layer, CenteredContent, CircularLoader } from '@dhis2/ui';\nimport debounce from 'lodash/debounce';\nimport DashboardsBar from '../ControlBar/DashboardsBar';\nimport NoContentMessage from '../../widgets/NoContentMessage';\nimport ViewDashboard from './ViewDashboard';\nimport EditDashboard from './EditDashboard';\nimport NewDashboard from './NewDashboard';\nimport PrintDashboard from './PrintDashboard';\nimport PrintLayoutDashboard from './PrintLayoutDashboard';\nimport { tSelectDashboard } from '../../actions/dashboards';\nimport { acSetWindowHeight } from '../../actions/windowHeight';\nimport { sDashboardsIsFetching, sGetAllDashboards } from '../../reducers/dashboards';\nimport { sGetSelectedId, NON_EXISTING_DASHBOARD_ID } from '../../reducers/selected';\nimport { EDIT, NEW, VIEW, PRINT, PRINT_LAYOUT, isPrintMode } from './dashboardModes';\n\nconst setHeaderbarVisibility = mode => {\n  const header = document.getElementsByTagName('header')[0];\n\n  if (isPrintMode(mode)) {\n    header.classList.add('hidden');\n  } else {\n    header.classList.remove('hidden');\n  }\n};\n\nconst dashboardMap = {\n  [VIEW]: <ViewDashboard />,\n  [EDIT]: <EditDashboard />,\n  [NEW]: <NewDashboard />,\n  [PRINT]: <PrintDashboard />,\n  [PRINT_LAYOUT]: <PrintLayoutDashboard />\n};\nexport const Dashboard = ({\n  id,\n  mode,\n  dashboardsLoaded,\n  dashboardsIsEmpty,\n  routeId,\n  selectDashboard,\n  setWindowHeight\n}) => {\n  useEffect(() => {\n    setHeaderbarVisibility(mode);\n  }, [mode]);\n  useEffect(() => {\n    if (dashboardsLoaded && !dashboardsIsEmpty) {\n      selectDashboard(routeId);\n    }\n  }, [dashboardsLoaded, dashboardsIsEmpty, routeId]);\n  useEffect(() => {\n    const onResize = debounce(() => setWindowHeight(window.innerHeight), 300);\n    window.addEventListener('resize', onResize);\n    return () => {\n      window.removeEventListener('resize', onResize);\n    };\n  }, []);\n\n  if (!dashboardsLoaded) {\n    return <Layer translucent>\n                <CenteredContent>\n                    <CircularLoader />\n                </CenteredContent>\n            </Layer>;\n  }\n\n  if (mode === NEW) {\n    return dashboardMap[mode];\n  }\n\n  if (dashboardsIsEmpty) {\n    return <>\n                <DashboardsBar />\n                <NoContentMessage text={i18n.t('No dashboards found. Use the + button to create a new dashboard.')} />\n            </>;\n  }\n\n  if (id === NON_EXISTING_DASHBOARD_ID) {\n    return <>\n                <DashboardsBar />\n                <NoContentMessage text={i18n.t('Requested dashboard not found')} />\n            </>;\n  }\n\n  if (id === null) {\n    return <Layer translucent>\n                <CenteredContent>\n                    <CircularLoader />\n                </CenteredContent>\n            </Layer>;\n  }\n\n  return dashboardMap[mode];\n};\nDashboard.propTypes = {\n  dashboardsIsEmpty: PropTypes.bool,\n  dashboardsLoaded: PropTypes.bool,\n  id: PropTypes.string,\n  match: PropTypes.object,\n  // provided by the react-router-dom\n  mode: PropTypes.string,\n  routeId: PropTypes.string,\n  selectDashboard: PropTypes.func,\n  setWindowHeight: PropTypes.func\n};\n\nconst mapStateToProps = (state, ownProps) => {\n  const dashboards = sGetAllDashboards(state);\n  return {\n    dashboardsIsEmpty: isEmpty(dashboards),\n    dashboardsLoaded: !sDashboardsIsFetching(state),\n    id: sGetSelectedId(state),\n    routeId: ownProps.match?.params?.dashboardId || null\n  };\n};\n\nexport default connect(mapStateToProps, {\n  selectDashboard: tSelectDashboard,\n  setWindowHeight: acSetWindowHeight\n})(Dashboard);","import React from 'react';\nimport { connect } from 'react-redux';\nimport { AlertBar, AlertStack } from '@dhis2/ui';\nimport PropTypes from 'prop-types';\nimport { sGetAlertMessage } from '../../reducers/alert';\nimport { acClearAlertMessage } from '../../actions/alert';\nexport const Alert = ({\n  message,\n  onClose\n}) => message ? <AlertStack>\n            <AlertBar onHidden={onClose} permanent>\n                {message}\n            </AlertBar>\n        </AlertStack> : null;\nAlert.propTypes = {\n  message: PropTypes.string,\n  onClose: PropTypes.func\n};\n\nconst mapStateToProps = state => ({\n  message: sGetAlertMessage(state)\n});\n\nexport default connect(mapStateToProps, {\n  onClose: acClearAlertMessage\n})(Alert);","import { RECEIVED_USER } from '../reducers/user';\nexport const acReceivedUser = value => ({\n  type: RECEIVED_USER,\n  value\n});","import { SET_DIMENSIONS } from '../reducers/dimensions';\nimport { apiFetchDimensions } from '@dhis2/analytics';\nimport { sGetSettingsDisplayNameProperty } from '../reducers/settings';\nexport const acSetDimensions = dimensions => ({\n  type: SET_DIMENSIONS,\n  value: dimensions\n});\nexport const tSetDimensions = () => async (dispatch, getState, dataEngine) => {\n  const onSuccess = dimensions => {\n    dispatch(acSetDimensions(dimensions));\n  };\n\n  const onError = error => {\n    console.log('Error (apiFetchDimensions): ', error);\n    return error;\n  };\n\n  try {\n    const displayNameProp = sGetSettingsDisplayNameProperty(getState());\n    const dimensions = await apiFetchDimensions(dataEngine, displayNameProp); // filter out CATEGORY that are not of type ATTRIBUTE\n\n    const filteredDimensions = dimensions.filter(dim => dim.dimensionType !== 'CATEGORY' || dim.dimensionType === 'CATEGORY' && dim.dataDimensionType === 'ATTRIBUTE');\n    return onSuccess(filteredDimensions);\n  } catch (err) {\n    return onError(err);\n  }\n};","import { getInstance } from 'd2';\nimport { onError } from './index';\nconst SYSTEM_SETTINGS = ['keyGatherAnalyticalObjectStatisticsInDashboardViews'];\nexport const apiFetchSystemSettings = () => {\n  const endPoint = '/systemSettings';\n  const url = `${endPoint}?${SYSTEM_SETTINGS.map(s => `key=${s}`).join('&')}`;\n  return getInstance().then(d2 => d2.Api.getApi().get(url)).catch(onError);\n};","import { ADD_SETTINGS } from '../reducers/settings';\nimport { apiFetchSystemSettings } from '../api/settings';\nexport const acAddSettings = value => ({\n  type: ADD_SETTINGS,\n  value\n});\nexport const tAddSettings = (...extraSettings) => async dispatch => {\n  const onSuccess = fetchedSettings => {\n    dispatch(acAddSettings(Object.assign({}, fetchedSettings, ...extraSettings)));\n  };\n\n  const onError = error => {\n    console.log('Error (apiFetchSystemSettings): ', error);\n    return error;\n  };\n\n  try {\n    const systemSettings = await apiFetchSystemSettings();\n    return onSuccess({ ...systemSettings\n    });\n  } catch (err) {\n    return onError(err);\n  }\n};","import React, { Component } from 'react';\nimport { HashRouter as Router, Route, Switch } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport i18n from '@dhis2/d2-i18n';\nimport { CssVariables } from '@dhis2/ui';\nimport Dashboard from './Dashboard/Dashboard';\nimport AlertBar from './AlertBar/AlertBar';\nimport { acReceivedUser } from '../actions/user';\nimport { tFetchDashboards } from '../actions/dashboards';\nimport { tSetControlBarRows } from '../actions/controlBar';\nimport { tSetShowDescription } from '../actions/selected';\nimport { tSetDimensions } from '../actions/dimensions';\nimport { tAddSettings } from '../actions/settings';\nimport { EDIT, VIEW, NEW, PRINT, PRINT_LAYOUT } from './Dashboard/dashboardModes';\nimport './App.css';\nexport class App extends Component {\n  componentDidMount() {\n    this.props.setCurrentUser(this.props.d2.currentUser);\n    this.props.fetchDashboards();\n    this.props.setControlBarRows();\n    this.props.setShowDescription();\n    this.props.setDimensions();\n    this.props.addSettings();\n  }\n\n  getChildContext() {\n    return {\n      baseUrl: this.props.baseUrl,\n      i18n,\n      d2: this.props.d2,\n      dataEngine: this.props.dataEngine\n    };\n  }\n\n  render() {\n    return <>\n                <CssVariables colors spacers />\n                <Router>\n                    <Switch>\n                        <Route exact path=\"/\" render={props => <Dashboard {...props} mode={VIEW} />} />\n                        <Route exact path=\"/new\" render={props => <Dashboard {...props} mode={NEW} />} />\n                        <Route exact path=\"/:dashboardId\" render={props => <Dashboard {...props} mode={VIEW} />} />\n                        <Route exact path=\"/:dashboardId/edit\" render={props => <Dashboard {...props} mode={EDIT} />} />\n                        <Route exact path=\"/:dashboardId/printoipp\" render={props => <Dashboard {...props} mode={PRINT} />} />\n                        <Route exact path=\"/:dashboardId/printlayout\" render={props => <Dashboard {...props} mode={PRINT_LAYOUT} />} />\n                    </Switch>\n                </Router>\n                <AlertBar />\n            </>;\n  }\n\n}\nApp.propTypes = {\n  addSettings: PropTypes.func.isRequired,\n  fetchDashboards: PropTypes.func.isRequired,\n  setControlBarRows: PropTypes.func.isRequired,\n  setCurrentUser: PropTypes.func.isRequired,\n  setDimensions: PropTypes.func.isRequired,\n  setShowDescription: PropTypes.func.isRequired,\n  baseUrl: PropTypes.string,\n  d2: PropTypes.object,\n  dataEngine: PropTypes.object\n};\nApp.childContextTypes = {\n  baseUrl: PropTypes.string,\n  i18n: PropTypes.object,\n  d2: PropTypes.object,\n  dataEngine: PropTypes.object\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    fetchDashboards: () => dispatch(tFetchDashboards()),\n    setControlBarRows: () => dispatch(tSetControlBarRows()),\n    setCurrentUser: currentUser => dispatch(acReceivedUser(currentUser)),\n    setDimensions: () => dispatch(tSetDimensions()),\n    setShowDescription: () => dispatch(tSetShowDescription()),\n    addSettings: () => dispatch(tAddSettings())\n  };\n};\n\nexport default connect(null, mapDispatchToProps)(App);","/** @module reducers/selected */\nimport { validateReducer } from '../modules/util';\nexport const SET_STYLE = 'SET_STYLE';\nexport const DEFAULT_STATE_STYLE = 'LIST';\n/**\n * Reducer functions that computes and returns the new state based on the given action\n * @function\n * @param {Object} state The current state\n * @param {Object} action The action to be evaluated\n */\n\nconst style = (state = DEFAULT_STATE_STYLE, action) => {\n  switch (action.type) {\n    case SET_STYLE:\n      return validateReducer(action.value, DEFAULT_STATE_STYLE);\n\n    default:\n      return state;\n  }\n};\n\nexport default style;\n/**\n * Selectors that point to specific props in the state object\n * @function\n * @param {Object} state\n * @returns {Object}\n */\n\nexport const sGetStyleRoot = state => state.style;","import { combineReducers } from 'redux';\nimport dashboards from './dashboards';\nimport selected from './selected';\nimport dashboardsFilter from './dashboardsFilter';\nimport controlBar from './controlBar';\nimport visualizations from './visualizations';\nimport editDashboard from './editDashboard';\nimport printDashboard from './printDashboard';\nimport messages from './messages';\nimport user from './user';\nimport alert from './alert';\nimport itemFilters from './itemFilters';\nimport style from './style';\nimport dimensions from './dimensions';\nimport settings from './settings';\nimport activeModalDimension from './activeModalDimension';\nimport windowHeight from './windowHeight';\nexport default combineReducers({\n  dashboards,\n  selected,\n  dashboardsFilter,\n  controlBar,\n  visualizations,\n  messages,\n  user,\n  editDashboard,\n  printDashboard,\n  itemFilters,\n  style,\n  alert,\n  dimensions,\n  settings,\n  activeModalDimension,\n  windowHeight\n});","import { createStore, applyMiddleware, compose } from 'redux';\nimport { createLogger } from 'redux-logger';\nimport thunk from 'redux-thunk';\nimport reducer from './reducers';\n\nconst configureStore = dataEngine => {\n  const middleware = [thunk.withExtraArgument(dataEngine)]; // Enable Redux devtools if extension is installed instead of redux-logger\n\n  const composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\n\n  if (!window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ && process.env.NODE_ENV !== 'production') {\n    middleware.push(createLogger());\n  }\n\n  return createStore(reducer, composeEnhancers(applyMiddleware(...middleware)));\n};\n\nexport default configureStore;","//------------------------------------------------------------------------------\n// <auto-generated>\n// This code was generated by d2-i18n-generate.\n//\n// Changes to this file may cause incorrect behavior and will be lost if\n// the code is regenerated.\n// </auto-generated>\n//------------------------------------------------------------------------------\nimport i18n from '@dhis2/d2-i18n';\nimport arTranslations from './ar/translations.json';\nimport ar_IQTranslations from './ar_IQ/translations.json';\nimport ckbTranslations from './ckb/translations.json';\nimport csTranslations from './cs/translations.json';\nimport daTranslations from './da/translations.json';\nimport enTranslations from './en/translations.json';\nimport esTranslations from './es/translations.json';\nimport frTranslations from './fr/translations.json';\nimport idTranslations from './id/translations.json';\nimport kmTranslations from './km/translations.json';\nimport loTranslations from './lo/translations.json';\nimport myTranslations from './my/translations.json';\nimport nbTranslations from './nb/translations.json';\nimport prsTranslations from './prs/translations.json';\nimport psTranslations from './ps/translations.json';\nimport ptTranslations from './pt/translations.json';\nimport pt_BRTranslations from './pt_BR/translations.json';\nimport ruTranslations from './ru/translations.json';\nimport svTranslations from './sv/translations.json';\nimport tetTranslations from './tet/translations.json';\nimport tgTranslations from './tg/translations.json';\nimport ukTranslations from './uk/translations.json';\nimport urTranslations from './ur/translations.json';\nimport uzTranslations from './uz/translations.json';\nimport uz_CyrlTranslations from './uz_Cyrl/translations.json';\nimport viTranslations from './vi/translations.json';\nimport zhTranslations from './zh/translations.json';\nimport zh_CNTranslations from './zh_CN/translations.json';\nconst namespace = 'default';\ni18n.addResources('ar', namespace, arTranslations);\ni18n.addResources('ar_IQ', namespace, ar_IQTranslations);\ni18n.addResources('ckb', namespace, ckbTranslations);\ni18n.addResources('cs', namespace, csTranslations);\ni18n.addResources('da', namespace, daTranslations);\ni18n.addResources('en', namespace, enTranslations);\ni18n.addResources('es', namespace, esTranslations);\ni18n.addResources('fr', namespace, frTranslations);\ni18n.addResources('id', namespace, idTranslations);\ni18n.addResources('km', namespace, kmTranslations);\ni18n.addResources('lo', namespace, loTranslations);\ni18n.addResources('my', namespace, myTranslations);\ni18n.addResources('nb', namespace, nbTranslations);\ni18n.addResources('prs', namespace, prsTranslations);\ni18n.addResources('ps', namespace, psTranslations);\ni18n.addResources('pt', namespace, ptTranslations);\ni18n.addResources('pt_BR', namespace, pt_BRTranslations);\ni18n.addResources('ru', namespace, ruTranslations);\ni18n.addResources('sv', namespace, svTranslations);\ni18n.addResources('tet', namespace, tetTranslations);\ni18n.addResources('tg', namespace, tgTranslations);\ni18n.addResources('uk', namespace, ukTranslations);\ni18n.addResources('ur', namespace, urTranslations);\ni18n.addResources('uz', namespace, uzTranslations);\ni18n.addResources('uz_Cyrl', namespace, uz_CyrlTranslations);\ni18n.addResources('vi', namespace, viTranslations);\ni18n.addResources('zh', namespace, zhTranslations);\ni18n.addResources('zh_CN', namespace, zh_CNTranslations);\nexport default i18n;","import React from 'react';\nimport { MuiThemeProvider, createMuiTheme } from '@material-ui/core/styles';\nimport dhis2theme from '@dhis2/d2-ui-core/theme/mui3.theme';\nimport { Provider as ReduxProvider } from 'react-redux';\nimport { D2Shim } from '@dhis2/app-runtime-adapter-d2';\nimport { useDataEngine } from '@dhis2/app-runtime';\nimport WindowDimensionsProvider from './components/WindowDimensionsProvider';\nimport App from './components/App';\nimport configureStore from './configureStore';\nimport './AppWrapper.css';\nimport './locales';\n\nconst muiTheme = () => createMuiTheme(dhis2theme);\n\nconst d2Config = {\n  schemas: ['chart', 'map', 'report', 'reportTable', 'eventChart', 'eventReport', 'dashboard', 'organisationUnit', 'userGroup']\n}; // TODO: ER and EV plugins require the auth header in development mode.\n// Remove this when these plugins are rewritten\n\nconst authorization = process.env.REACT_APP_DHIS2_AUTHORIZATION || null;\n\nif (authorization) {\n  d2Config.headers = {\n    Authorization: authorization\n  };\n}\n\nconst AppWrapper = () => {\n  const dataEngine = useDataEngine();\n  return <ReduxProvider store={configureStore(dataEngine)}>\n            <MuiThemeProvider theme={muiTheme()}>\n                <D2Shim d2Config={d2Config} i18nRoot=\"./i18n\">\n                    {({\n          d2\n        }) => {\n          if (!d2) {\n            // TODO: Handle errors in d2 initialization\n            return null;\n          }\n\n          return <WindowDimensionsProvider>\n                                <App d2={d2} dataEngine={dataEngine} />\n                            </WindowDimensionsProvider>;\n        }}\n                </D2Shim>\n            </MuiThemeProvider>\n        </ReduxProvider>;\n};\n\nexport default AppWrapper;","import i18n from '@dhis2/d2-i18n';\nimport TableIcon from '@material-ui/icons/ViewList';\nimport ChartIcon from '@material-ui/icons/InsertChart';\nimport MapIcon from '@material-ui/icons/Public';\nimport ExtensionIcon from '@material-ui/icons/Extension';\nimport DescriptionIcon from '@material-ui/icons/Description';\nimport PersonIcon from '@material-ui/icons/Person';\nimport FontDownloadIcon from '@material-ui/icons/FontDownload';\nimport EmailIcon from '@material-ui/icons/Email';\nimport CropFreeIcon from '@material-ui/icons/CropFree';\nimport NotInterestedIcon from '@material-ui/icons/NotInterested';\nimport { getBaseUrl } from './util'; // Item types\n\nexport const VISUALIZATION = 'VISUALIZATION';\nexport const REPORT_TABLE = 'REPORT_TABLE';\nexport const CHART = 'CHART';\nexport const MAP = 'MAP';\nexport const EVENT_REPORT = 'EVENT_REPORT';\nexport const EVENT_CHART = 'EVENT_CHART';\nexport const APP = 'APP';\nexport const REPORTS = 'REPORTS';\nexport const RESOURCES = 'RESOURCES';\nexport const USERS = 'USERS';\nexport const MESSAGES = 'MESSAGES';\nexport const TEXT = 'TEXT';\nexport const SPACER = 'SPACER';\nexport const PAGEBREAK = 'PAGEBREAK';\nexport const PRINT_TITLE_PAGE = 'PRINT_TITLE_PAGE';\nconst DOMAIN_TYPE_AGGREGATE = 'AGGREGATE';\nconst DOMAIN_TYPE_TRACKER = 'TRACKER'; // Dashboard helpers\n\nexport const isVisualizationType = item => !!itemTypeMap[item.type].isVisualizationType;\nexport const hasMapView = itemType => itemTypeMap[itemType].domainType === DOMAIN_TYPE_AGGREGATE;\nexport const isTrackerDomainType = itemType => itemTypeMap[itemType].domainType === DOMAIN_TYPE_TRACKER;\nexport const getDefaultItemCount = itemType => itemTypeMap[itemType].defaultItemCount || 5;\nexport const getAppName = itemType => itemTypeMap[itemType].appName || ''; // Item type map\n\nexport const itemTypeMap = {\n  [VISUALIZATION]: {\n    id: VISUALIZATION,\n    endPointName: 'visualizations',\n    propName: 'visualization',\n    pluralTitle: i18n.t('Visualizations'),\n    appUrl: id => `dhis-web-data-visualizer/#/${id}`,\n    appName: 'Data Visualizer',\n    defaultItemCount: 10\n  },\n  [REPORT_TABLE]: {\n    id: REPORT_TABLE,\n    endPointName: 'visualizations',\n    dataStatisticsName: 'REPORT_TABLE_VIEW',\n    propName: 'visualization',\n    pluralTitle: i18n.t('Pivot tables'),\n    domainType: DOMAIN_TYPE_AGGREGATE,\n    isVisualizationType: true,\n    appUrl: id => `dhis-web-data-visualizer/#/${id}`,\n    appName: 'Data Visualizer'\n  },\n  [CHART]: {\n    id: CHART,\n    endPointName: 'visualizations',\n    propName: 'visualization',\n    dataStatisticsName: 'CHART_VIEW',\n    pluralTitle: i18n.t('Charts'),\n    domainType: DOMAIN_TYPE_AGGREGATE,\n    isVisualizationType: true,\n    appUrl: id => `dhis-web-data-visualizer/#/${id}`,\n    appName: 'Data Visualizer'\n  },\n  [MAP]: {\n    id: MAP,\n    endPointName: 'maps',\n    dataStatisticsName: 'MAP_VIEW',\n    propName: 'map',\n    pluralTitle: i18n.t('Maps'),\n    domainType: DOMAIN_TYPE_AGGREGATE,\n    isVisualizationType: true,\n    appUrl: id => `dhis-web-maps/?id=${id}`,\n    appName: 'Maps'\n  },\n  [EVENT_REPORT]: {\n    id: EVENT_REPORT,\n    endPointName: 'eventReports',\n    propName: 'eventReport',\n    pluralTitle: i18n.t('Event reports'),\n    domainType: DOMAIN_TYPE_TRACKER,\n    isVisualizationType: true,\n    appUrl: id => `dhis-web-event-reports/?id=${id}`,\n    appName: 'Event Reports'\n  },\n  [EVENT_CHART]: {\n    id: EVENT_CHART,\n    endPointName: 'eventCharts',\n    propName: 'eventChart',\n    pluralTitle: i18n.t('Event charts'),\n    domainType: DOMAIN_TYPE_TRACKER,\n    isVisualizationType: true,\n    appUrl: id => `dhis-web-event-visualizer/?id=${id}`,\n    appName: 'Event Visualizer'\n  },\n  [APP]: {\n    endPointName: 'apps',\n    propName: 'appKey',\n    pluralTitle: i18n.t('Apps')\n  },\n  [REPORTS]: {\n    id: REPORTS,\n    endPointName: 'reports',\n    propName: 'reports',\n    pluralTitle: i18n.t('Reports'),\n    appUrl: (id, type) => {\n      switch (type) {\n        case 'HTML':\n          return `dhis-web-reports/#/standard-report/view/${id}`;\n\n        case 'JASPER_REPORT_TABLE':\n        case 'JASPER_JDBC':\n        default:\n          return `api/reports/${id}/data.pdf?t=${new Date().getTime()}`;\n      }\n    }\n  },\n  [RESOURCES]: {\n    id: RESOURCES,\n    endPointName: 'resources',\n    propName: 'resources',\n    pluralTitle: i18n.t('Resources'),\n    appUrl: id => `api/documents/${id}/data`\n  },\n  [USERS]: {\n    id: USERS,\n    endPointName: 'users',\n    propName: 'users',\n    pluralTitle: i18n.t('Users'),\n    appUrl: id => `dhis-web-dashboard-integration/profile.action?id=${id}`\n  },\n  [TEXT]: {\n    id: TEXT,\n    propName: 'text'\n  },\n  [MESSAGES]: {\n    propName: 'messages'\n  },\n  [SPACER]: {\n    propName: 'text'\n  },\n  [PAGEBREAK]: {\n    propName: 'text'\n  },\n  [PRINT_TITLE_PAGE]: {\n    propName: 'text'\n  }\n};\nexport const getEndPointName = type => itemTypeMap[type].endPointName;\nexport const getDataStatisticsName = type => itemTypeMap[type].dataStatisticsName || null;\nexport const getItemUrl = (type, item, d2) => {\n  let url;\n\n  if (type === APP) {\n    url = item.launchUrl;\n  }\n\n  if (itemTypeMap[type] && itemTypeMap[type].appUrl) {\n    url = `${getBaseUrl(d2)}/${itemTypeMap[type].appUrl(item.id, item.type)}`;\n  }\n\n  return url;\n};\nexport const getItemIcon = type => {\n  switch (type) {\n    case REPORT_TABLE:\n    case EVENT_REPORT:\n    case REPORTS:\n      return TableIcon;\n\n    case CHART:\n    case EVENT_CHART:\n      return ChartIcon;\n\n    case MAP:\n      return MapIcon;\n\n    case APP:\n      return ExtensionIcon;\n\n    case RESOURCES:\n      return DescriptionIcon;\n\n    case USERS:\n      return PersonIcon;\n\n    case TEXT:\n      return FontDownloadIcon;\n\n    case MESSAGES:\n      return EmailIcon;\n\n    case SPACER:\n      return CropFreeIcon;\n\n    default:\n      return NotInterestedIcon;\n  }\n};","import isObject from 'lodash/isObject'; // validation\n\nexport function orNull(param) {\n  return param === undefined ? null : param;\n}\nexport function orArray(param) {\n  return Array.isArray(param) ? param : [];\n}\nexport function orObject(param) {\n  return isObject(param) ? param : {};\n} // array\n\nexport function arrayGetById(array, id) {\n  return array.find(item => item.id === id);\n} // object\n\nexport function arrayToIdMap(array) {\n  return array.reduce((obj, item) => {\n    obj[item.id] = item;\n    return obj;\n  }, {});\n} // date\n\nexport function getDate() {\n  const y = Math.floor(Math.random() * 3) + 2015;\n  const M = Math.floor(Math.random() * 12) + 1;\n  const d = Math.floor(Math.random() * 28) + 1; // const h = Math.floor(Math.random() * 23) + 1;\n  // const m = Math.floor(Math.random() * 59) + 1;\n  // const s = Math.floor(Math.random() * 59) + 1;\n\n  return new Date(`${y}-${M}-${d}`).toJSON().replace('T', ' ').substr(0, 10);\n}\nexport const formatDate = (value, uiLocale) => {\n  if (typeof global.Intl !== 'undefined' && Intl.DateTimeFormat) {\n    const locale = uiLocale || 'en';\n    return new Intl.DateTimeFormat(locale, {\n      year: 'numeric',\n      month: 'short',\n      day: 'numeric'\n    }).format(new Date(value));\n  }\n\n  return value.substr(0, 19).replace('T', ' ');\n};\n/**\n * Sorts an array of objects based on provided date property\n *\n * @param {Array} items Array of objects\n * @param {String} dateProp Name of the date property to be used for sorting\n * @param {Boolean} ascending Whether to sort ascending or descending\n */\n\nexport const sortByDate = (items, dateProp, ascending = true) => {\n  const values = Object.values(items);\n  values.sort((a, b) => {\n    const aDate = new Date(a[dateProp]);\n    const bDate = new Date(b[dateProp]);\n    return ascending ? aDate - bDate : bDate - aDate;\n  });\n  return values;\n}; // reducer validator\n\nexport const validateReducer = (value, defaultValue) => value === undefined || value === null ? defaultValue : value;\nexport const getBaseUrl = d2 => {\n  const api = d2.Api.getApi();\n  const idx = api.baseUrl.indexOf('/api');\n  return idx > -1 ? api.baseUrl.slice(0, idx) : api.baseUrl;\n};","// Dimensions for the react-grid-layout\nexport const GRID_COMPACT_TYPE = 'vertical'; // vertical | horizonal | null\n\nexport const GRID_ROW_HEIGHT = 10;\nconst GRID_COLUMN_WIDTH_PX = 20;\nconst GRID_LAYOUT = 'FLEXIBLE'; // FIXED | FLEXIBLE\n\nexport const MARGIN = [10, 10];\nconst SM_SCREEN_MIN_ITEM_GRID_HEIGHT = 16; //310px\n\nexport const SM_SCREEN_GRID_COLUMNS = 12;\nexport const NEW_ITEM_SHAPE = {\n  x: 0,\n  y: 0,\n  w: 20,\n  h: 29\n}; // Dimensions for getShape\n\nconst NUMBER_OF_ITEM_COLS = 2;\nconst GRID_COLUMNS = 60;\nconst MAX_ITEM_GRID_WIDTH = GRID_COLUMNS - 1;\nexport const MAX_ITEM_GRID_HEIGHT = 34;\nexport const MAX_ITEM_GRID_HEIGHT_OIPP = 35;\nexport const MAX_ITEM_GRID_WIDTH_OIPP = 56;\nconst MIN_ITEM_GRID_HEIGHT = 4; // for A4 landscape (297x210mm)\n// 794 px = (21cm / 2.54) * 96 pixels/inch\n// 1122 px = 29.7 /2.54 * 96 pixels/inch\n// const a4LandscapeHeightPx = 794\n\nexport const a4LandscapeWidthPx = 1102;\nexport const getGridColumns = () => {\n  switch (GRID_LAYOUT) {\n    case 'FLEXIBLE':\n      return GRID_COLUMNS;\n\n    case 'FIXED':\n      return Math.floor((window.innerWidth - 20) / GRID_COLUMN_WIDTH_PX);\n\n    default:\n      return GRID_COLUMNS;\n  }\n}; // isNonNegativeInteger\n\nconst isNonNegativeInteger = x => Number.isInteger(x) && x >= 0; // Does the item have all the shape properties?\n\n\nexport const hasShape = item => isNonNegativeInteger(item.x) && isNonNegativeInteger(item.y) && isNonNegativeInteger(item.w) && isNonNegativeInteger(item.h); // returns a rectangular grid block dimensioned with x, y, w, h in grid units.\n// based on a grid with 3 items across\n\nexport const getShape = i => {\n  if (!isNonNegativeInteger(i)) {\n    throw new Error('Invalid grid block number');\n  }\n\n  const col = i % NUMBER_OF_ITEM_COLS;\n  const row = Math.floor(i / NUMBER_OF_ITEM_COLS);\n  const itemWidth = Math.floor(MAX_ITEM_GRID_WIDTH / NUMBER_OF_ITEM_COLS);\n  const itemHeight = GRID_ROW_HEIGHT * 2;\n  return {\n    x: col * itemWidth,\n    y: row * itemHeight,\n    w: itemWidth,\n    h: itemHeight\n  };\n};\nexport const getProportionalHeight = item => {\n  const ratioWH = item.w / item.h;\n  const h = Math.floor(SM_SCREEN_GRID_COLUMNS / ratioWH);\n  return h < SM_SCREEN_MIN_ITEM_GRID_HEIGHT ? SM_SCREEN_MIN_ITEM_GRID_HEIGHT : h;\n};\nexport const getSmallLayout = items => items.map(item => ({\n  i: item.i,\n  x: item.x,\n  y: item.y,\n  w: SM_SCREEN_GRID_COLUMNS,\n  h: getProportionalHeight(item)\n}));\nexport const getGridItemProperties = itemId => {\n  return {\n    i: itemId,\n    minH: MIN_ITEM_GRID_HEIGHT\n  };\n};\nexport const getPageBreakItemShape = (yPos, isStatic = true) => {\n  return {\n    x: 0,\n    y: yPos,\n    w: MAX_ITEM_GRID_WIDTH,\n    h: 5,\n    static: !!isStatic,\n    minH: 1\n  };\n};\nexport const getPrintTitlePageItemShape = isOneItemPerPage => {\n  return {\n    x: 0,\n    y: 0,\n    w: isOneItemPerPage ? MAX_ITEM_GRID_WIDTH_OIPP : MAX_ITEM_GRID_WIDTH,\n    h: MAX_ITEM_GRID_HEIGHT,\n    static: true,\n    minH: 1\n  };\n};\n/**\n * Calculates the grid item's height in pixels based\n * on the height in grid units. This calculation\n * is copied directly from react-grid-layout GridItem.js (calcPosition)\n *\n * Each row's px height is the sum of the GRID_ROW_HEIGHT + MARGIN-Y\n * So the calculation is:\n * GRID_ROW_HEIGHT* Number of rows\n * +\n * Number of rows-1 * yMargin\n *\n * @param {Object} item item containing shape (x, y, w, h)\n */\n\nexport const getItemHeightPx = (item, isSmallScreen) => {\n  const h = isSmallScreen ? getProportionalHeight(item) : item.h;\n  return Math.round(GRID_ROW_HEIGHT * h + Math.max(0, h - 1) * MARGIN[1]);\n};\n/**\n * Returns an array of items containing the x, y, w, h dimensions\n * and the item's originalheight in pixels\n * and dimensions to create the small layout (x, y, w, h)\n * @function\n * @param {Array} items\n * @returns {Array}\n */\n\nexport const withShape = items => items.map((item, index) => hasShape(item) ? item : Object.assign({}, item, getShape(index)));\nexport const getGridItemDomId = id => `item-${id}`;","import isObject from 'lodash/isObject';\nimport { itemTypeMap } from './itemTypes';\nexport const getVisualizationFromItem = item => {\n  if (!isObject(item)) {\n    return null;\n  }\n\n  const propName = itemTypeMap[item.type]?.propName;\n  return item[propName] || item.reportTable || item.chart || item.map || item.eventReport || item.eventChart || {};\n};\nexport const getVisualizationId = item => getVisualizationFromItem(item).id;\nexport const getVisualizationName = item => getVisualizationFromItem(item).name;","import { REPORT_TABLE, CHART, MAP, EVENT_REPORT, EVENT_CHART, itemTypeMap } from '../../../../modules/itemTypes';\nimport { getVisualizationId } from '../../../../modules/item';\nimport { getGridItemDomId } from '../../../ItemGrid/gridUtil'; //external plugins\n\nconst itemTypeToExternalPlugin = {\n  [MAP]: 'mapPlugin',\n  [EVENT_REPORT]: 'eventReportPlugin',\n  [EVENT_CHART]: 'eventChartPlugin'\n};\n\nconst hasIntegratedPlugin = type => [CHART, REPORT_TABLE].includes(type);\n\nconst getPlugin = type => {\n  if (hasIntegratedPlugin(type)) {\n    return true;\n  }\n\n  const pluginName = itemTypeToExternalPlugin[type];\n  return global[pluginName];\n};\n\nexport const pluginIsAvailable = type => !!getPlugin(type);\nexport const loadPlugin = (plugin, config, credentials) => {\n  if (!(plugin && plugin.load)) {\n    return;\n  }\n\n  plugin.url = credentials.baseUrl;\n  plugin.loadingIndicator = true;\n  plugin.dashboard = true;\n\n  if (credentials.auth) {\n    plugin.auth = credentials.auth;\n  }\n\n  plugin.load(config);\n};\nexport const getLink = (item, baseUrl) => {\n  const appUrl = itemTypeMap[item.type].appUrl(getVisualizationId(item));\n  return `${baseUrl}/${appUrl}`;\n};\nexport const load = async (item, visualization, {\n  credentials,\n  activeType,\n  options = {}\n}) => {\n  const config = { ...visualization,\n    ...options,\n    el: getGridItemDomId(item.id)\n  };\n  const type = activeType || item.type;\n  const plugin = getPlugin(type);\n  loadPlugin(plugin, config, credentials);\n};\nexport const resize = item => {\n  const plugin = getPlugin(item.type);\n\n  if (plugin && plugin.resize) {\n    plugin.resize(getGridItemDomId(item.id));\n  }\n};\nexport const unmount = (item, activeType) => {\n  const plugin = getPlugin(activeType);\n\n  if (plugin && plugin.unmount) {\n    plugin.unmount(getGridItemDomId(item.id));\n  }\n};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"itemHeaderWrap\":\"ItemHeader_itemHeaderWrap__JcBP7\",\"itemTitle\":\"ItemHeader_itemTitle__34rHa\",\"itemActionsWrap\":\"ItemHeader_itemActionsWrap__Gx3D9\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"ControlBar_root__iikeX\",\"dragging\":\"ControlBar_dragging__3lq79\",\"content\":\"ControlBar_content__26Z33\",\"draghandle\":\"ControlBar_draghandle__27zum\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"link\":\"DashboardItemChip_link__21drZ\",\"icon\":\"DashboardItemChip_icon__2hcIR\",\"selected\":\"DashboardItemChip_selected__r00uP\",\"unselected\":\"DashboardItemChip_unselected__2H9l2\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"ClearButton_button__33ZbK\",\"icon\":\"ClearButton_icon__vTJm3\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Filter_container__1Vxdh\",\"input\":\"Filter_input__14lhU\",\"focused\":\"Filter_focused__Lvyz3\",\"searchIcon\":\"Filter_searchIcon__2ojUp\",\"searchButton\":\"Filter_searchButton__1tMTB\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"ShowMoreButton_container__riJz_\",\"showMore\":\"ShowMoreButton_showMore__3S3He\",\"disabled\":\"ShowMoreButton_disabled__2FQNA\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"DashboardsBar_container__1xuCo\",\"expanded\":\"DashboardsBar_expanded__3lVl8\",\"controls\":\"DashboardsBar_controls__3PhmY\",\"newLink\":\"DashboardsBar_newLink__2PkLQ\",\"collapsed\":\"DashboardsBar_collapsed__3CY9n\",\"chipContainer\":\"DashboardsBar_chipContainer__IRxuN\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"HeaderMenuItem_item__313hC\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"menuItem\":\"ContentMenuItem_menuItem__vbKn3\",\"launchLink\":\"ContentMenuItem_launchLink__2Nql9\",\"label\":\"ContentMenuItem_label__ANfH1\",\"buttonInsert\":\"ContentMenuItem_buttonInsert__1joHg\"};"],"sourceRoot":""}